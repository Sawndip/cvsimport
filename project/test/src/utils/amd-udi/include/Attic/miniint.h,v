head	1.2;
access;
symbols
	gdb_5_2_1-2002-07-23-release:1.1.1.1
	cagney_regbuf-20020515-branch:1.1.1.1.0.18
	cagney_regbuf-20020515-branchpoint:1.1.1.1
	jimb-macro-020506-branch:1.1.1.1.0.16
	jimb-macro-020506-branchpoint:1.1.1.1
	gdb_5_2-2002-04-29-release:1.1.1.1
	gdb_5_2-branch:1.1.1.1.0.14
	gdb_5_2-2002-03-03-branchpoint:1.1.1.1
	gdb_5_1_1-2002-01-24-release:1.1.1.1
	gdb_5_1_0_1-2002-01-03-release:1.1.1.1
	cygnus_cvs_20020108_pre:1.1.1.1
	gdb_5_1_0_1-2002-01-03-branch:1.1.1.1.0.12
	gdb_5_1_0_1-2002-01-03-branchpoint:1.1.1.1
	gdb_5_1-2001-11-21-release:1.1.1.1
	gdb_s390-2001-09-26-branch:1.1.1.1.0.10
	gdb_s390-2001-09-26-branchpoint:1.1.1.1
	gdb_5_1-2001-07-29-branch:1.1.1.1.0.8
	gdb_5_1-2001-07-29-branchpoint:1.1.1.1
	insight-precleanup-2001-01-01:1.1.1.1
	gdb-premipsmulti-2000-06-06-branch:1.1.1.1.0.6
	gdb-premipsmulti-2000-06-06-branchpoint:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.4
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	gdb-2000-02-04:1.1.1.1
	gdb-2000-02-02:1.1.1.1
	gdb-2000-02-01:1.1.1.1
	gdb-2000-01-31:1.1.1.1
	gdb-2000-01-26:1.1.1.1
	gdb-2000-01-24:1.1.1.1
	gdb-2000-01-17:1.1.1.1
	gdb-2000-01-10:1.1.1.1
	gdb-2000-01-05:1.1.1.1
	gdb-1999-12-21:1.1.1.1
	gdb-1999-12-13:1.1.1.1
	gdb-1999-12-07:1.1.1.1
	gdb-1999-12-06:1.1.1.1
	gdb-1999-11-16:1.1.1.1
	gdb-1999-11-08:1.1.1.1
	gdb-1999-11-01:1.1.1.1
	gdb-1999-10-25:1.1.1.1
	gdb-1999-10-18:1.1.1.1
	gdb-1999-10-11:1.1.1.1
	gdb-1999-10-04:1.1.1.1
	gdb-1999-09-28:1.1.1.1
	gdb-1999-09-21:1.1.1.1
	gdb-1999-09-13:1.1.1.1
	gdb-1999-09-08:1.1.1.1
	gdb-1999-08-30:1.1.1.1
	gdb-1999-08-23:1.1.1.1
	gdb-1999-08-16:1.1.1.1
	gdb-1999-08-09:1.1.1.1
	gdb-1999-08-02:1.1.1.1
	gdb-1999-07-26:1.1.1.1
	gdb-1999-07-19:1.1.1.1
	gdb-1999-07-12:1.1.1.1
	gdb-post-reformat-19990707:1.1.1.1
	gdb-1999-07-07-post-reformat-snapshot:1.1.1.1
	gdb-pre-reformat-19990707:1.1.1.1
	gdb-1999-07-07:1.1.1.1
	gdb-1999-07-05:1.1.1.1
	gdb-1999-06-28:1.1.1.1
	gdb-1999-06-21:1.1.1.1
	gdb-1999-06-14:1.1.1.1
	gdb-1999-06-07:1.1.1.1
	gdb-1999-06-01:1.1.1.1
	gdb-4_18-branch:1.1.1.1.0.2
	gdb-4_18-release:1.1.1.1
	gdb-1999-05-25:1.1.1.1
	gdb-1999-05-19:1.1.1.1
	gdb-1999-05-10:1.1.1.1
	gdb-19990504:1.1.1.1
	gdb-19990422:1.1.1.1
	SNAPSHOT:1.1.1
	gdb-4_18:1.1.1.1
	GDB_4_18:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.2
date	2002.05.28.10.29.52;	author nickc;	state dead;
branches;
next	1.1;

1.1
date	99.04.16.01.35.26;	author shebs;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.16.01.35.26;	author shebs;	state Exp;
branches;
next	;


desc
@@


1.2
log
@ Remove amd-udi subdirectory - it is obsolete.
@
text
@/* @@(#)miniint.h	5.18 93/07/30 16:40:02, Srini, AMD */
/******************************************************************************
 * Copyright 1992 Advanced Micro Devices, Inc.
 *
 * This software is the property of Advanced Micro Devices, Inc  (AMD)  which
 * specifically  grants the user the right to modify, use and distribute this
 * software provided this notice is not removed or altered.  All other rights
 * are reserved by AMD.
 *
 * AMD MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH REGARD TO THIS
 * SOFTWARE.  IN NO EVENT SHALL AMD BE LIABLE FOR INCIDENTAL OR CONSEQUENTIAL
 * DAMAGES IN CONNECTION WITH OR ARISING FROM THE FURNISHING, PERFORMANCE, OR
 * USE OF THIS SOFTWARE.
 *
 * So that all may benefit from your experience, please report  any  problems
 * or  suggestions about this software to the 29K Technical Support Center at
 * 800-29-29-AMD (800-292-9263) in the USA, or 0800-89-1131  in  the  UK,  or
 * 0031-11-1129 in Japan, toll free.  The direct dial number is 512-462-4118.
 *
 * Advanced Micro Devices, Inc.
 * 29K Systems Engineering
 * Mail Stop 573
 * 5204 E. Ben White Blvd.
 * Austin, TX 78741
 * 800-292-9263
 * 29k-support@@AMD.COM
 *****************************************************************************
 * Engineer: Srini Subramanian.
 *****************************************************************************
 * This header file defines the interface routines between the DFE and UDI.
 *****************************************************************************
 */
#ifndef	_MINIINT_H_INCLUDED_
#define	_MINIINT_H_INCLUDED_

/* This file contains the declarations of functions that form
 * Minimon frontend's interface to its back-end.
 * Back-end could be a message system or a procedural interface
 */

/* There is one function for each of the message sent from the
* host to the target.
*/

#include	"types.h"

#define	MONErrorMsgSize		80

#define BKPT_29050       0
#define	BKPT_29050_BTE_0	0
#define	BKPT_29050_BTE_1	1
#define BKPT_29000      -1

#define	MONMaxMemRanges	3    /* Inst, data, Rom */
#define	MONMaxChips	2   /* main cpu & coprocessor */
#define	MONMaxProcessMemRanges	2
#define	MONMaxStacks	2

/* For breakpoint status */
#define	MONBreakNoMore	0x1
#define	MONBreakInvalid	0x2

/*  These are defined in main.h                        */
/*	typedef	struct	target_config_t	TARGET_CONFIG; */
/*	typedef	struct  target_status_t TARGET_STATUS; */

/* This is the function to initialize the Target Interphase Process/
 * System.
 * Input: Pointer to the target's name (as given at the "-t" command
 *	  line flag of Minimon).
 * Output: It returns:
 * SUCCESS: if everything went okay.
 * FAILURE: not okay.
 */

INT32	Mini_TIP_init PARAMS((char *conn_str, int   *sid));

INT32	Mini_TIP_SetCurrSession PARAMS((int  sid));

INT32	Mini_TIP_SetPID PARAMS((int  pid));

INT32	Mini_TIP_DestroyProc PARAMS((void));

INT32	Mini_TIP_Capabilities PARAMS((void));

INT32	Mini_TIP_CreateProc PARAMS((void));

INT32	Mini_TIP_disc PARAMS((void));

INT32	Mini_TIP_exit PARAMS((void));

INT32	Mini_reset_processor PARAMS((void));

INT32	Mini_config_req PARAMS((TARGET_CONFIG  *target_conf, VERSIONS_ETC *vers));

INT32	Mini_status_req PARAMS((TARGET_STATUS *target_stat));

INT32	Mini_read_req PARAMS((INT32 memory_space, 
			      ADDR32 address, 
			      INT32 byte_count,
			      INT16  size,
			      INT32 *count_done, 
			      BYTE *buffer, 
			      BOOLEAN host_endian));

INT32	Mini_write_req PARAMS((INT32 memory_space,
			       ADDR32 address,
			       INT32 byte_count,
			       INT16 size,
			       INT32 *count_done,
			       BYTE *buffer,
			       BOOLEAN host_endian));

INT32	Mini_bkpt_set PARAMS((INT32 memory_space,
			      ADDR32 bkpt_addr,
			      INT32 pass_count,
			      INT32 bkpt_type,
			      int *break_id));

INT32	Mini_bkpt_rm PARAMS((int break_id));

INT32	Mini_bkpt_stat PARAMS((int break_id,
			       ADDR32 *bkpt_addr,
			       INT32 *memory_space,
			       INT32 *pass_count,
			       INT32 *bkpt_type ,
			       INT32 *current_cnt));

INT32 	Mini_copy PARAMS((INT32 source_space,
			  ADDR32 source_addr,
			  INT32 dest_space,
			  ADDR32 dest_addr,
			  INT32 byte_count,
			  INT16 size,
			  INT32 count_done));

INT32	Mini_fill PARAMS((INT32 memory_space,
			  ADDR32 start_addr,
			  INT32 fill_count,
			  INT32 byte_count,
			  BYTE *pattern));

INT32	Mini_init PARAMS((ADDR32 text_start,
			  ADDR32 text_end,
			  ADDR32 data_start,
			  ADDR32 data_end,
			  ADDR32 entry_point,
			  INT32 m_stack,
			  INT32 r_stack,
			  char  *arg_string));

INT32 	Mini_go PARAMS((void));

INT32	Mini_step PARAMS((INT32 count));

INT32	Mini_break PARAMS((void));

INT32	Mini_get_target_stats PARAMS((INT32 maxtime, INT32 *target_status));

INT32	Mini_get_stdout PARAMS((char *buffer,
				INT32 bufsize,
				INT32 *count_done));

INT32	Mini_get_stderr PARAMS((char *buffer,
				INT32 bufsize,
				INT32 *count_done));

INT32	Mini_stdin_mode_x PARAMS((INT32 *mode));

INT32	Mini_put_stdin PARAMS((char *buffer,
			       INT32 bufsize,
			       INT32 *count_done));

INT32	Mini_put_trans PARAMS((char *buffer));

#endif /* _MINIINT_H_INCLUDED_ */
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Initial creation of sourceware repository
@
text
@@

