head	1.3;
access;
symbols
	gdb_5_3-2002-12-12-release:1.2
	gdb_5_3-branch:1.2.0.4
	gdb_5_3-2002-09-04-branchpoint:1.2
	gdb_5_2_1-2002-07-23-release:1.2
	gdb_5_2-2002-04-29-release:1.2
	gdb_5_2-branch:1.2.0.2
	gdb_5_2-2002-03-03-branchpoint:1.2
	gdb_5_1_1-2002-01-24-release:1.1.1.1
	cygnus_cvs_20020108_pre:1.2
	gdb_5_1_0_1-2002-01-03-branch:1.1.1.1.0.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.1.1.1
	gdb_5_1-2001-11-21-release:1.1.1.1
	gdb_s390-2001-09-26-branch:1.1.1.1.0.6
	gdb_s390-2001-09-26-branchpoint:1.1.1.1
	TIX_TCL_8_3:1.1.1.1
	NET:1.1.1
	gdb_5_1-2001-07-29-branch:1.1.1.1.0.4
	gdb_5_1-2001-07-29-branchpoint:1.1.1.1
	insight-precleanup-2001-01-01:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	insight-2000-02-04:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.3
date	2003.03.07.23.09.20;	author hunt;	state dead;
branches;
next	1.2;

1.2
date	2001.09.08.23.25.51;	author irox;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.07.00.19.28;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.07.00.19.28;	author jsm;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Remove directory.
@
text
@# Tix Demostration Program
#
# This sample program is structured in such a way so that it can be
# executed from the Tix demo program "widget": it must have a
# procedure called "RunSample". It should also have the "if" statment
# at the end of this file so that it can be run as a standalone
# program using tixwish.

# This file demonstrates the use of the tixStdButtonBox widget, which is a
# group of "Standard" buttons for Motif-like dialog boxes.
#
proc RunSample {w} {

    # Create the label on the top of the dialog box
    #
    label $w.top -padx 20 -pady 10 -border 1 -relief raised -text \
	"This dialog box is\n a demostration of the\n tixStdButtonBox widget" \
	-justify center -anchor c

    # Create the button box. We also do some manipulation of the
    # button widgets inside: we disable the help button and change
    # the label string of the "apply" button to "Filter"
    #
    # Note that the -text, -underline, -command and -width options are all
    # standard options of the button widgets.
    #
    tixStdButtonBox $w.box
    $w.box subwidget ok     config \
	-command "puts {OK pressed}; destroy $w"
    $w.box subwidget apply  config -text "Filter" -underline 0 \
	-command "puts {Filter pressed}"
    $w.box subwidget cancel config \
	-command "puts {Cancel pressed}; destroy $w"
    $w.box subwidget help config -state disabled

    pack $w.box -side bottom -fill x
    pack $w.top -side top -fill both -expand yes -anchor c


    # "after 0" is used so that the key bindings won't interfere with
    # tkTraverseMenu
    #
    bind [winfo toplevel $w] <Alt-o> \
	"after 0 tkButtonInvoke [$w.box subwidget ok]"
    bind [winfo toplevel $w] <Alt-f> \
	"after 0 tkButtonInvoke [$w.box subwidget apply]"
    bind [winfo toplevel $w] <Alt-c> \
	"after 0 tkButtonInvoke [$w.box subwidget cancel]"
    bind [winfo toplevel $w] <Escape> \
	"after 0 tkButtonInvoke [$w.box subwidget cancel]"

    focus [$w.box subwidget apply] 
}

if {![info exists tix_demo_running]} {
    wm withdraw .
    set w .demo
    toplevel $w
    RunSample $w
	bind $w <Destroy> exit
}
@


1.2
log
@Touched all tix files to ease next import.
@
text
@@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import insight-2000-02-04 snapshot (2nd try)
@
text
@@
