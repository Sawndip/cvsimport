head	1.3;
access;
symbols
	gdb_5_3-2002-12-12-release:1.2
	gdb_5_3-branch:1.2.0.4
	gdb_5_3-2002-09-04-branchpoint:1.2
	gdb_5_2_1-2002-07-23-release:1.2
	gdb_5_2-2002-04-29-release:1.2
	gdb_5_2-branch:1.2.0.2
	gdb_5_2-2002-03-03-branchpoint:1.2
	gdb_5_1_1-2002-01-24-release:1.1.1.1
	cygnus_cvs_20020108_pre:1.2
	gdb_5_1_0_1-2002-01-03-branch:1.1.1.1.0.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.1.1.1
	gdb_5_1-2001-11-21-release:1.1.1.1
	gdb_s390-2001-09-26-branch:1.1.1.1.0.6
	gdb_s390-2001-09-26-branchpoint:1.1.1.1
	TIX_TCL_8_3:1.1.1.2
	NET:1.1.1
	gdb_5_1-2001-07-29-branch:1.1.1.1.0.4
	gdb_5_1-2001-07-29-branchpoint:1.1.1.1
	insight-precleanup-2001-01-01:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	insight-2000-02-04:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.3
date	2003.03.07.23.09.21;	author hunt;	state dead;
branches;
next	1.2;

1.2
date	2001.09.08.23.25.52;	author irox;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.07.00.19.28;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.07.00.19.28;	author jsm;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2001.09.08.23.01.38;	author irox;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Remove directory.
@
text
@/*
 * tixItcl.c --
 *
 *	Compatibility functions that allow Tix to work under Incr Tcl.
 *
 * Copyright (c) 1996, Expert Interface Technologies
 *
 * See the file "license.terms" for information on usage and
 * redistribution of this file, and for a DISCLAIMER OF ALL
 * WARRANTIES.
 *
 */

/*
 * With Tcl 8.0, namespaces moved from Itcl to Tcl, and so
 * the Tix hacks have to be used in any verison of 8.0,
 * regardless of the presence of Itcl...
 */
#include <tclInt.h>
#include <tixInt.h>
#include <tixItcl.h>

#ifdef TK_8_0_OR_LATER

/*----------------------------------------------------------------------
 * TixItclSetGlobalNameSp --
 *
 *	Set the ITcl scope to the global scope. This way, all the Tix
 *	commands and variables will be defined in the global scope. This
 *	is necessary for Tix to function properly under ITcl.
 *
 *----------------------------------------------------------------------
 */

int
TixItclSetGlobalNameSp(nameSpPtr, interp)
    TixItclNameSp * nameSpPtr;
    Tcl_Interp * interp;
{
    nameSpPtr->savedVarFramePtr = nameSpPtr->iPtr->varFramePtr;
    nameSpPtr->iPtr->varFramePtr = NULL;
    return 1;
}

/*----------------------------------------------------------------------
 * TixItclRestoreGlobalNameSp --
 *
 *	Set the ITcl scope to the scope saved by TixItclSetGlobalNameSp.
 *
 *----------------------------------------------------------------------
 */

void
TixItclRestoreGlobalNameSp(nameSpPtr, interp)
    TixItclNameSp * nameSpPtr;
    Tcl_Interp * interp;
{
    nameSpPtr->iPtr->varFramePtr = nameSpPtr->savedVarFramePtr;
}

#else
#ifdef ITCL_2


/*----------------------------------------------------------------------
 * TixItclSetGlobalNameSp --
 *
 *	Set the ITcl scope to the global scope. This way, all the Tix
 *	commands and variables will be defined in the global scope. This
 *	is necessary for Tix to function properly under ITcl.
 *
 *----------------------------------------------------------------------
 */

int
TixItclSetGlobalNameSp(nameSpPtr, interp)
    TixItclNameSp * nameSpPtr;
    Tcl_Interp * interp;
{
    nameSpPtr->savedVarFramePtr = nameSpPtr->iPtr->varFramePtr;
    nameSpPtr->iPtr->varFramePtr = NULL;

    nameSpPtr->nsToken = Itcl_ActivateNamesp(interp, 
	    (Itcl_Namespace)(nameSpPtr->iPtr->globalNs));
    if (nameSpPtr->nsToken == NULL) {
	return 0;
    } else {
	return 1;
    }
}

/*----------------------------------------------------------------------
 * TixItclRestoreGlobalNameSp --
 *
 *	Set the ITcl scope to the scope saved by TixItclSetGlobalNameSp.
 *
 *----------------------------------------------------------------------
 */

void
TixItclRestoreGlobalNameSp(nameSpPtr, interp)
    TixItclNameSp * nameSpPtr;
    Tcl_Interp * interp;
{
    if (nameSpPtr->nsToken != NULL) {
	Itcl_DeactivateNamesp(interp, nameSpPtr->nsToken);
    }
    nameSpPtr->iPtr->varFramePtr = nameSpPtr->savedVarFramePtr;
}

#else
/*
 * Put a dummy symbol here -- some linkers do not like a .o file
 * with no code and symbols.
 */

#ifdef BUILD_tix
# undef TCL_STORAGE_CLASS
# define TCL_STORAGE_CLASS DLLEXPORT
#endif

EXTERN void TixItclDummy _ANSI_ARGS_((void));


void
TixItclDummy()
{
}

#endif /* #ifdef  ITCL_2 */
#endif /* #ifdef  TK_8_0_OR_LATER */
@


1.2
log
@Touched all tix files to ease next import.
@
text
@@


1.1
log
@Initial revision
@
text
@d117 5
@


1.1.1.1
log
@import insight-2000-02-04 snapshot (2nd try)
@
text
@@


1.1.1.2
log
@Tix import for Tcl/Tk8.3 upgrade
@
text
@a116 5
#ifdef BUILD_tix
# undef TCL_STORAGE_CLASS
# define TCL_STORAGE_CLASS DLLEXPORT
#endif

@

