head	1.3;
access;
symbols
	msnyder-tracepoint-checkpoint-branch:1.2.0.50
	msnyder-tracepoint-checkpoint-branchpoint:1.2
	ezannoni_pie-20040323-branch:1.2.0.48
	ezannoni_pie-20040323-branchpoint:1.2
	cagney_tramp-20040321-mergepoint:1.2
	cagney_tramp-20040309-branch:1.2.0.46
	cagney_tramp-20040309-branchpoint:1.2
	gdb_6_1-branch:1.2.0.44
	gdb_6_1-2004-03-01-gmt-branchpoint:1.2
	drow-cplus-merge-20040208:1.2
	carlton_dictionary-20040126-merge:1.2
	drow-cplus-merge-20040113:1.2
	drow-cplus-merge-20031224:1.2
	drow-cplus-merge-20031220:1.2
	carlton_dictionary-20031215-merge:1.2
	drow-cplus-merge-20031214:1.2
	carlton-dictionary-20031111-merge:1.2
	carlton_dictionary-20030917-merge:1.2
	ezannoni_pie-20030916-branchpoint:1.2
	ezannoni_pie-20030916-branch:1.2.0.42
	cagney_x86i386-20030821-branch:1.2.0.40
	cagney_x86i386-20030821-branchpoint:1.2
	carlton_dictionary-20030805-merge:1.2
	carlton_dictionary-20030627-merge:1.2
	gdb_6_0-branch:1.2.0.38
	gdb_6_0-2003-06-23-branchpoint:1.2
	cagney_convert-20030606-branch:1.2.0.36
	cagney_convert-20030606-branchpoint:1.2
	cagney_writestrings-20030508-branch:1.2.0.34
	cagney_writestrings-20030508-branchpoint:1.2
	carlton_dictionary-20030523-merge:1.2
	cagney_fileio-20030521-branch:1.2.0.32
	cagney_fileio-20030521-branchpoint:1.2
	carlton_dictionary-20030430-merge:1.2
	carlton_dictionary-20030416-merge:1.2
	cagney_frameaddr-20030409-mergepoint:1.2
	cagney_frameaddr-20030403-branchpoint:1.2
	cagney_frameaddr-20030403-branch:1.2.0.30
	cagney_framebase-20030330-mergepoint:1.2
	cagney_framebase-20030326-branch:1.2.0.28
	cagney_framebase-20030326-branchpoint:1.2
	cagney_lazyid-20030317-branch:1.2.0.26
	cagney_lazyid-20030317-branchpoint:1.2
	offbyone-20030313-branch:1.2.0.24
	offbyone-20030313-branchpoint:1.2
	carlton_dictionary-20030305-merge:1.2
	cagney_offbyone-20030303-branch:1.2.0.22
	cagney_offbyone-20030303-branchpoint:1.2
	carlton_dictionary-20030207-merge:1.2
	interps-20030202-branch:1.2.0.20
	interps-20030202-branchpoint:1.2
	cagney-unwind-20030108-branch:1.2.0.18
	cagney-unwind-20030108-branchpoint:1.2
	carlton_dictionary-20021223-merge:1.2
	carlton_dictionary-20021115-merge:1.2
	kseitz_interps-20021105-merge:1.2
	kseitz_interps-20021103-merge:1.2
	drow-cplus-merge-20021020:1.2
	drow-cplus-merge-20021025:1.2
	carlton_dictionary-20021025-merge:1.2
	carlton_dictionary-20021011-merge:1.2
	drow-cplus-branch:1.2.0.16
	drow-cplus-branchpoint:1.2
	kseitz_interps-20020930-merge:1.2
	carlton_dictionary-20020927-merge:1.2
	carlton_dictionary-branch:1.2.0.14
	carlton_dictionary-20020920-branchpoint:1.2
	sid-20020905-branchpoint:1.2
	sid-20020905-branch:1.2.0.12
	gdb_5_3-branch:1.2.0.10
	gdb_5_3-2002-09-04-branchpoint:1.2
	kseitz_interps-20020829-merge:1.2
	cagney_sysregs-20020825-branch:1.2.0.8
	cagney_sysregs-20020825-branchpoint:1.2
	readline_4_3-import-branch:1.2.0.6
	readline_4_3-import-branchpoint:1.2
	kseitz_interps-20020528-branch:1.2.0.4
	kseitz_interps-20020528-branchpoint:1.2
	cagney_regbuf-20020515-branch:1.2.0.2
	cagney_regbuf-20020515-branchpoint:1.2
	gdb_5_2-branch:1.1.1.1.0.10
	gdb_5_2-2002-03-03-branchpoint:1.1.1.1
	cygnus_cvs_20020108_pre:1.1.1.1
	gdb_5_1_0_1-2002-01-03-branch:1.1.1.1.0.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.1.1.1
	gdb_5_1-2001-11-21-release:1.1.1.1
	gdb_s390-2001-09-26-branch:1.1.1.1.0.6
	gdb_s390-2001-09-26-branchpoint:1.1.1.1
	gdb_5_1-2001-07-29-branch:1.1.1.1.0.4
	gdb_5_1-2001-07-29-branchpoint:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	dejagnu-2000-02-04:1.1.1.1
	dejagnu-2000-01-31:1.1.1.1
	dejagnu-2000-01-24:1.1.1.1
	dejagnu-2000-01-17:1.1.1.1
	dejagnu-2000-01-10:1.1.1.1
	dejagnu-2000-01-04:1.1.1.1
	dejagnu-1999-12-21:1.1.1.1
	dejagnu-1999-12-13:1.1.1.1
	dejagnu-1999-12-07:1.1.1.1
	dejagnu-1999-12-06:1.1.1.1
	dejagnu-1999-11-15:1.1.1.1
	dejagnu-1999-11-08:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.3
date	2005.06.29.01.58.55;	author bje;	state dead;
branches;
next	1.2;

1.2
date	2002.04.21.08.47.07;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	99.11.09.01.28.42;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.11.09.01.28.42;	author jsm;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Remove old version of DejaGnu.
@
text
@# Copyright (C) 1992 - 2001 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  

# Please email any bugs, comments, and/or additions to this file to:
# bug-dejagnu@@gnu.org

#
# Support downloading files using ftp.
#

#
# Open a connection to HOST.
#
proc ftp_open { host } {
    set prompt "ftp>"
    global board_info

    if [board_info $host exists name] {
	set host [board_info $host name];
    }

    if [board_info $host exists ftp_fileid] {
	return [board_info $host ftp_fileid];
    }

    if [board_info $host exists hostname] {
	set remotehost [board_info $host hostname];
    } else {
	set remotehost $host;
    }

    # LoseQVT tends to get stuck sometimes; we'll loop around a few million
    # times when it gets a "connection refused".
    set spawn_id -1;
    set count 3;
    while { $spawn_id < 0 && $count >= 0 } {
	spawn ftp -n $remotehost;
	expect {
	    -i $spawn_id -re ".*220.*$prompt" { }
	    -i $spawn_id -re ".*Connection refused.*$prompt" {
		sleep 2;
		send "open $remotehost\n";
		exp_continue
	    }
	    -i $spawn_id default {
		close -i $spawn_id;
		wait -i $spawn_id;
		set spawn_id -1;
	    }
	}
	incr count -1;
    }
    if { $spawn_id < 0 } {
	return -1;
    }
    set board_info($host,ftp_fileid) $spawn_id;
    if [board_info $host exists ftp_username] {
	if [board_info $host exists ftp_password] {
	    set command "user [board_info $host ftp_username] [board_info $host ftp_password]\n";
	} else {
	    set command "user [board_info $host ftp_username]\n";
	}
	send "$command"
	expect {
	    -i $spawn_id -re ".*230.*$prompt" { }
	    -i $spawn_id default {
		close -i $spawn_id;
		wait -i $spawn_id;
		return -1;
	    }
	}
    }
    set timeout 15
    send -i $spawn_id "binary\n"
    expect {
	-i $spawn_id -re "200.*$prompt" { }
	-i $spawn_id timeout {
	    close -i $spawn_id;
	    wait -i $spawn_id;
	    return -1
	}
    }
    if [board_info $host exists ftp_directory] {
	send "cd [board_info $host ftp_directory]\n";
	expect {
	    -i $spawn_id -re "250.*$prompt" { }
	    -i $spawn_id default {
		close -i $spawn_id;
		wait -i $spawn_id;
		return -1;
	    }
	}
    }

    if [board_info $host exists ftp_no_passive] {
	send "passive\n";
	expect {
	    -i $spawn_id -re "Passive mode off.*$prompt" { }
	    -i $spawn_id -re "Passive mode on.*$prompt" {
		send "passive\n";
		exp_continue;
	    }
	    -i $spawn_id -re ".*$prompt" { }
	}
    }

    set board_info($host,ftp_fileid) $spawn_id;
    return $spawn_id;
}

#
# Grab REMOTEFILE from HOST and store it as LOCALFILE.
#
proc ftp_upload { host remotefile localfile } {
    set prompt "ftp>"

    verbose "ftping $remotefile from $host to $localfile"
    set timeout 15
    set spawn_id [ftp_open $host];
    if { $spawn_id < 0 } {
	return "";
    }
    set loop 1;

    while { $loop } {
	send -i $spawn_id "get $remotefile $localfile\n";
	expect {
	    -i $spawn_id -re ".*Too many open files.*$prompt" {
		ftp_close $host;
	    }
	    -i $spawn_id -re ".*No such file or directory.*$prompt" {
		set loop 0;
		set remotefile "";
	    }
	    -i $spawn_id -re "(^|\[\r\n\])226.*$prompt" { set loop 0; }
	    -i $spawn_id -re "(^|\[\r\n\])\[0-9\]\[0-9\]\[0-9\].*$prompt" {
		set loop 0;
		set remotefile ""; 
	    }
	    -i $spawn_id default {
		ftp_close $host;
	    }
	}
	if { $loop } {
	    set spawn_id [ftp_open $host];
	    if { $spawn_id < 0 } {
		return "";
	    }
	}
    }
    return $localfile;
}

#
# Download LOCALFILE to HOST as REMOTEFILE.
#
proc ftp_download { host localfile remotefile } {
    set prompt "ftp>"

    verbose "putting $localfile $remotefile"

    if [board_info $host exists hostname] {
	set remotehost [board_info $host hostname];
    } else {
	set remotehost $host;
    }
    
    set spawn_id [ftp_open $host];
    if { $spawn_id < 0 } {
	return "";
    }
    set loop 1;

    while { $loop } {
	send -i $spawn_id "put $localfile $remotefile\n"
	expect {
	    -i $spawn_id -re ".*Too many open files.*$prompt" {
		ftp_close $host;
	    }
	    -i $spawn_id -re ".*No such file or directory.*$prompt" {
		set loop 0;
		set remotefile "";
	    }
	    -re "(^|\[\r\n\])150.*connection for (.*) \[(\]\[0-9.,\]+\\)\[\r\n\]" {
		set remotefile $expect_out(2,string);
		exp_continue;
	    }
	    -i $spawn_id -re "(^|\[\r\n\])226.*$prompt" {
		set loop 0;
	    }
	    -i $spawn_id -re "Timeout.*$prompt" {
		ftp_close $host;
	    }
	    -i $spawn_id -re "(^|\[\r\n\])\[0-9\]\[0-9\]\[0-9\].*$prompt" {
		set loop 0; 
		set remotefile ""; 
	    }
	    -i $spawn_id default {
		ftp_close $host;
	    }
	}
	if { $loop } {
	    set spawn_id [ftp_open $host];
	    if { $spawn_id < 0 } {
		return "";
	    }
	}
    }
    return $remotefile;
}

#
# Close the connection.
#
proc ftp_close { host } {
    global board_info

    if [board_info $host exists name] {
	set host [board_info $host name];
    }

    if ![board_info $host exists ftp_fileid] {
	return "";
    }

    set spawn_id [board_info $host ftp_fileid];
    unset board_info($host,ftp_fileid);

    send -i $spawn_id "quit\n"
    close -i $spawn_id
    wait -i $spawn_id;
    return "";
}
@


1.2
log
@Synchronise with sources from savanaha repository
@
text
@@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# Copyright (C) 92, 93, 94, 95, 96, 97, 98, 1999 Free Software Foundation, Inc.
d18 1
a18 1
# bug-dejagnu@@prep.ai.mit.edu
@


1.1.1.1
log
@import dejagnu-1999-11-08 snapshot
@
text
@@
