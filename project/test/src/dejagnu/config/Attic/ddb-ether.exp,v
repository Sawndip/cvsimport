head	1.4;
access;
symbols
	msnyder-tracepoint-checkpoint-branch:1.3.0.2
	msnyder-tracepoint-checkpoint-branchpoint:1.3
	ezannoni_pie-20040323-branch:1.2.0.48
	ezannoni_pie-20040323-branchpoint:1.2
	cagney_tramp-20040321-mergepoint:1.2
	cagney_tramp-20040309-branch:1.2.0.46
	cagney_tramp-20040309-branchpoint:1.2
	gdb_6_1-branch:1.2.0.44
	gdb_6_1-2004-03-01-gmt-branchpoint:1.2
	drow-cplus-merge-20040208:1.2
	carlton_dictionary-20040126-merge:1.2
	drow-cplus-merge-20040113:1.2
	drow-cplus-merge-20031224:1.2
	drow-cplus-merge-20031220:1.2
	carlton_dictionary-20031215-merge:1.2
	drow-cplus-merge-20031214:1.2
	carlton-dictionary-20031111-merge:1.2
	carlton_dictionary-20030917-merge:1.2
	ezannoni_pie-20030916-branchpoint:1.2
	ezannoni_pie-20030916-branch:1.2.0.42
	cagney_x86i386-20030821-branch:1.2.0.40
	cagney_x86i386-20030821-branchpoint:1.2
	carlton_dictionary-20030805-merge:1.2
	carlton_dictionary-20030627-merge:1.2
	gdb_6_0-branch:1.2.0.38
	gdb_6_0-2003-06-23-branchpoint:1.2
	cagney_convert-20030606-branch:1.2.0.36
	cagney_convert-20030606-branchpoint:1.2
	cagney_writestrings-20030508-branch:1.2.0.34
	cagney_writestrings-20030508-branchpoint:1.2
	carlton_dictionary-20030523-merge:1.2
	cagney_fileio-20030521-branch:1.2.0.32
	cagney_fileio-20030521-branchpoint:1.2
	carlton_dictionary-20030430-merge:1.2
	carlton_dictionary-20030416-merge:1.2
	cagney_frameaddr-20030409-mergepoint:1.2
	cagney_frameaddr-20030403-branchpoint:1.2
	cagney_frameaddr-20030403-branch:1.2.0.30
	cagney_framebase-20030330-mergepoint:1.2
	cagney_framebase-20030326-branch:1.2.0.28
	cagney_framebase-20030326-branchpoint:1.2
	cagney_lazyid-20030317-branch:1.2.0.26
	cagney_lazyid-20030317-branchpoint:1.2
	offbyone-20030313-branch:1.2.0.24
	offbyone-20030313-branchpoint:1.2
	carlton_dictionary-20030305-merge:1.2
	cagney_offbyone-20030303-branch:1.2.0.22
	cagney_offbyone-20030303-branchpoint:1.2
	carlton_dictionary-20030207-merge:1.2
	interps-20030202-branch:1.2.0.20
	interps-20030202-branchpoint:1.2
	cagney-unwind-20030108-branch:1.2.0.18
	cagney-unwind-20030108-branchpoint:1.2
	carlton_dictionary-20021223-merge:1.2
	carlton_dictionary-20021115-merge:1.2
	kseitz_interps-20021105-merge:1.2
	kseitz_interps-20021103-merge:1.2
	drow-cplus-merge-20021020:1.2
	drow-cplus-merge-20021025:1.2
	carlton_dictionary-20021025-merge:1.2
	carlton_dictionary-20021011-merge:1.2
	drow-cplus-branch:1.2.0.16
	drow-cplus-branchpoint:1.2
	kseitz_interps-20020930-merge:1.2
	carlton_dictionary-20020927-merge:1.2
	carlton_dictionary-branch:1.2.0.14
	carlton_dictionary-20020920-branchpoint:1.2
	sid-20020905-branchpoint:1.2
	sid-20020905-branch:1.2.0.12
	gdb_5_3-branch:1.2.0.10
	gdb_5_3-2002-09-04-branchpoint:1.2
	kseitz_interps-20020829-merge:1.2
	cagney_sysregs-20020825-branch:1.2.0.8
	cagney_sysregs-20020825-branchpoint:1.2
	readline_4_3-import-branch:1.2.0.6
	readline_4_3-import-branchpoint:1.2
	kseitz_interps-20020528-branch:1.2.0.4
	kseitz_interps-20020528-branchpoint:1.2
	cagney_regbuf-20020515-branch:1.2.0.2
	cagney_regbuf-20020515-branchpoint:1.2
	gdb_5_2-branch:1.1.1.1.0.10
	gdb_5_2-2002-03-03-branchpoint:1.1.1.1
	cygnus_cvs_20020108_pre:1.1.1.1
	gdb_5_1_0_1-2002-01-03-branch:1.1.1.1.0.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.1.1.1
	gdb_5_1-2001-11-21-release:1.1.1.1
	gdb_s390-2001-09-26-branch:1.1.1.1.0.6
	gdb_s390-2001-09-26-branchpoint:1.1.1.1
	gdb_5_1-2001-07-29-branch:1.1.1.1.0.4
	gdb_5_1-2001-07-29-branchpoint:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	dejagnu-2000-02-04:1.1.1.1
	dejagnu-2000-01-31:1.1.1.1
	dejagnu-2000-01-24:1.1.1.1
	dejagnu-2000-01-17:1.1.1.1
	dejagnu-2000-01-10:1.1.1.1
	dejagnu-2000-01-04:1.1.1.1
	dejagnu-1999-12-21:1.1.1.1
	dejagnu-1999-12-13:1.1.1.1
	dejagnu-1999-12-07:1.1.1.1
	dejagnu-1999-12-06:1.1.1.1
	dejagnu-1999-11-15:1.1.1.1
	dejagnu-1999-11-08:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.4
date	2005.06.29.01.58.39;	author bje;	state dead;
branches;
next	1.3;

1.3
date	2005.05.11.09.52.57;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	2002.04.21.08.46.48;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	99.11.09.01.28.42;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.11.09.01.28.42;	author jsm;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Remove old version of DejaGnu.
@
text
@# Copyright (C) 1997 - 2001 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.

# Please email any bugs, comments, and/or additions to this file to:
# bug-dejagnu@@gnu.org

# This file was written by Bob Manson (manson@@cygnus.com)

# Reset the prompt to what GDB needs.
proc ${board}_init { dest } {
    global doing_ddb_init;

    if ![info exists doing_ddb_init] {
	set doing_ddb_init 1;

	remote_close $dest;
	for { set x 0; } { $x < 3 } { incr x; } {
	    set shell_id [remote_open $dest];
	    if { $shell_id == "" || $shell_id < 0 } {
		remote_reboot $dest;
	    } else {
		break;
	    }
	}

	set shell_prompt [board_info $dest shell_prompt];

	remote_send $dest "\n";
	remote_expect $dest 10 {
	    -re ".*PMON> $" {
		remote_send $dest "set prompt \"$shell_prompt\"\n";
		exp_continue;
	    }
	    -re ".*${shell_prompt}$" { }
	}
	remote_close $dest;
	unset doing_ddb_init;
    } else {
	return;
    }
}

proc ddb_ether_load { dest prog args } {
    for { set x 0; } { $x < 3 } { incr x } {
	set result [eval remote_spawn \{$dest\} \{$prog\} $args];
	if { $result < 0 } {
	    remote_reboot $dest;
	} else {
	    set result [remote_wait $dest 300];
	    set status [lindex $result 0];
	    set output [lindex $result 1];
	    if { $status >= 0 } {
		if { $status > 0 } {
		    return [list "fail" $output];
		} else {
		    return [list "pass" $output];
		}
	    }
	}
    }
    return [list "fail" ""];
}

proc ddb_ether_ld { dest prog } {
    if ![board_info $dest exists tftpdir] {
	perror "Must set_board_info tftpdir for [board_info $dest name]";
	return "fail";
    }

    if ![board_info $dest exists fileid] {
	set spawn_id [remote_open $dest];
	if { $spawn_id == "" || $spawn_id < 0 } {
	    return "retry";
	}
	remote_binary $dest;
    }

    set shell_prompt [board_info $dest shell_prompt];

    remote_send $dest "\n";
    remote_expect $dest 10 {
	 -re ".*${shell_prompt}$" { }
	 default {
	    return "retry";
	}
    }
    set basename "a.out.[pid]";
    set file "[board_info $dest tftpdir]/$basename";
    set file [remote_download build $prog $file];
    if { $file == "" } {
	perror "download to tftp area failed";
	return "fail";
    }
    set state "pass";

    remote_send $dest "boot /$basename\n";
    set tries 0;
    remote_expect $dest 30 {
	-re "Loading.*Entry address is.*${shell_prompt}$" { }
	-re "invalid executable.*${shell_prompt}$" {
	    incr tries;
	    if { $tries < 3 } {
		sleep 2;
		remote_send $dest "boot /$basename\n";
		exp_continue;
	    }
	}
	-re ".*${shell_prompt}$" { 
	    set state "fail";
	}
	default {
	    set state "fail";
	}
    }
    remote_file build delete $file;
    if { $state == "fail" } {
	return $state;
    }
    return "pass";
}
    
proc ddb_ether_spawn { dest prog args } {
    set state [ddb_ether_ld $dest $prog];

    if { $state != "pass" } {
	return -1;
    }
    remote_send $dest "g\n";
    remote_expect $dest 5 {
	-re "g\[\r\n\]\[\r\n\]?" { }
	default { }
    }

    return [board_info $dest fileid];
}

proc ddb_ether_wait { dest timeout } {
    set output "";
    set shell_prompt [board_info $dest shell_prompt];

    remote_expect $dest $timeout {
	-re "^g\[\r\n\]\[\r\n\]?" {
	    if { $output != "" } {
		append output $expect_out(buffer);
	    }
	    exp_continue;
	}
	-re "(.*)$shell_prompt" {
	    append output $expect_out(1,string);
	    set status [check_for_board_status output];
	    if { $status > 0 } {
		return [list $status $output];
	    } else {
		if [regexp "Exception Cause=" $output] {
		    remote_reboot $dest;
		    return [list -1 $output];
		}
		return [list 0 $output];
	    }
	}
	-re "\[\r\n\]+" {
	    append output $expect_out(buffer);
	    if { [string length $output] < 512000 } {
		exp_continue;
	    } else {
		return [list -1 ""];
	    }
	}
	default {
	    return [list -1 ""];
	}
    }
}

set_board_info send_initial_cr 1
set_board_info protocol "ddb_ether"
set_board_info shell_prompt "NEC010> "
@


1.3
log
@Update the address of the FSF organization
@
text
@@


1.2
log
@Synchronise with sources from savanaha repository
@
text
@d15 1
a15 1
# Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# Copyright (C) 1997, 1998 Free Software Foundation, Inc.
d18 1
a18 1
# DejaGnu@@cygnus.com
@


1.1.1.1
log
@import dejagnu-1999-11-08 snapshot
@
text
@@
