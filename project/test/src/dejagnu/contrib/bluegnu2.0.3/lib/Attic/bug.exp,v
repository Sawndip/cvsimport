head	1.2;
access;
symbols
	msnyder-tracepoint-checkpoint-branch:1.1.0.48
	msnyder-tracepoint-checkpoint-branchpoint:1.1
	ezannoni_pie-20040323-branch:1.1.0.46
	ezannoni_pie-20040323-branchpoint:1.1
	cagney_tramp-20040321-mergepoint:1.1
	cagney_tramp-20040309-branch:1.1.0.44
	cagney_tramp-20040309-branchpoint:1.1
	gdb_6_1-branch:1.1.0.42
	gdb_6_1-2004-03-01-gmt-branchpoint:1.1
	drow-cplus-merge-20040208:1.1
	carlton_dictionary-20040126-merge:1.1
	drow-cplus-merge-20040113:1.1
	drow-cplus-merge-20031224:1.1
	drow-cplus-merge-20031220:1.1
	carlton_dictionary-20031215-merge:1.1
	drow-cplus-merge-20031214:1.1
	carlton-dictionary-20031111-merge:1.1
	carlton_dictionary-20030917-merge:1.1
	ezannoni_pie-20030916-branchpoint:1.1
	ezannoni_pie-20030916-branch:1.1.0.40
	cagney_x86i386-20030821-branch:1.1.0.38
	cagney_x86i386-20030821-branchpoint:1.1
	carlton_dictionary-20030805-merge:1.1
	carlton_dictionary-20030627-merge:1.1
	gdb_6_0-branch:1.1.0.36
	gdb_6_0-2003-06-23-branchpoint:1.1
	cagney_convert-20030606-branch:1.1.0.34
	cagney_convert-20030606-branchpoint:1.1
	cagney_writestrings-20030508-branch:1.1.0.32
	cagney_writestrings-20030508-branchpoint:1.1
	carlton_dictionary-20030523-merge:1.1
	cagney_fileio-20030521-branch:1.1.0.30
	cagney_fileio-20030521-branchpoint:1.1
	carlton_dictionary-20030430-merge:1.1
	carlton_dictionary-20030416-merge:1.1
	cagney_frameaddr-20030409-mergepoint:1.1
	cagney_frameaddr-20030403-branchpoint:1.1
	cagney_frameaddr-20030403-branch:1.1.0.28
	cagney_framebase-20030330-mergepoint:1.1
	cagney_framebase-20030326-branch:1.1.0.26
	cagney_framebase-20030326-branchpoint:1.1
	cagney_lazyid-20030317-branch:1.1.0.24
	cagney_lazyid-20030317-branchpoint:1.1
	offbyone-20030313-branch:1.1.0.22
	offbyone-20030313-branchpoint:1.1
	carlton_dictionary-20030305-merge:1.1
	cagney_offbyone-20030303-branch:1.1.0.20
	cagney_offbyone-20030303-branchpoint:1.1
	carlton_dictionary-20030207-merge:1.1
	interps-20030202-branch:1.1.0.18
	interps-20030202-branchpoint:1.1
	cagney-unwind-20030108-branch:1.1.0.16
	cagney-unwind-20030108-branchpoint:1.1
	carlton_dictionary-20021223-merge:1.1
	carlton_dictionary-20021115-merge:1.1
	kseitz_interps-20021105-merge:1.1
	kseitz_interps-20021103-merge:1.1
	drow-cplus-merge-20021020:1.1
	drow-cplus-merge-20021025:1.1
	carlton_dictionary-20021025-merge:1.1
	carlton_dictionary-20021011-merge:1.1
	drow-cplus-branch:1.1.0.14
	drow-cplus-branchpoint:1.1
	kseitz_interps-20020930-merge:1.1
	carlton_dictionary-20020927-merge:1.1
	carlton_dictionary-branch:1.1.0.12
	carlton_dictionary-20020920-branchpoint:1.1
	sid-20020905-branchpoint:1.1
	sid-20020905-branch:1.1.0.10
	gdb_5_3-branch:1.1.0.8
	gdb_5_3-2002-09-04-branchpoint:1.1
	kseitz_interps-20020829-merge:1.1
	cagney_sysregs-20020825-branch:1.1.0.6
	cagney_sysregs-20020825-branchpoint:1.1
	readline_4_3-import-branch:1.1.0.4
	readline_4_3-import-branchpoint:1.1
	kseitz_interps-20020528-branch:1.1.0.2
	kseitz_interps-20020528-branchpoint:1.1;
locks; strict;
comment	@# @;


1.2
date	2005.06.29.01.58.48;	author bje;	state dead;
branches;
next	1.1;

1.1
date	2002.04.21.08.46.52;	author nickc;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove old version of DejaGnu.
@
text
@# Copyright (C) 92, 93, 94, 95, 1996 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */

# Please email any bugs, comments, and/or additions to this file to:
# bug-dejagnu@@prep.ai.mit.edu

# This file was written by Rob Savoye. (rob@@welcomehome.org)

#load_lib remote.exp

#
# set target variables only if needed.
#
global targetname
global connectmode
global env

if ![info exists targetname] {
    if [info exists env(TARGETNAME)] {
	set targetname $env(TARGETNAME)
    } else {
	puts stderr "ERROR: Need a target name for the board."
	puts stderr "       Use the --name option\n"
	exit 1
    }
}

# the default connect program to use
if ![info exists connectmode] {
    set connectmode	"tip"
    warning "Using default of $connectmode for target communication."
}		

#
# Load a file into the bug monitor
#
proc bug_load { shell_id file } {
    global OBJCOPY
    global shell_prompt

    if { $shell_id < 0 } {
	warning "$file not executed because there is no target."
	return -1
    }

    # NOTE: this requires OBJCOPY to be tested first
    catch "exec $OBJCOPY -O srec $file $file.srec" result
    if ![string match "" $result] {
	perror "Couldn't convert to srecord for downloading"
	return -1
    }

    send -i $shell_id "lo 0\r"
    expect {
	-i $shell_id "lo 0*" {
	    verbose "Got load command echo" 0
	}
	-i $shell_id timeout {
	    perror "Load command didn't echo back"
	    return -1
	}
    }

    if { [download $file.srec $shell_id] < 0 } {
	return -1
    }

    send -i $shell_id "\r\r"
    expect {
	-i $shell_id -re "$shell_prompt.*$" {
	}
	-i $shell_id timeout {
	    perror "Load command didn't echo back"
	    return -1
	}
    }
    
    catch "exec rm -f $file.srec"
    return 0
}

#
# Execute a program
#
proc bug_execute { shell_id addr } {
    global shell_prompt
    global exec_output

    set exec_output ""

    if { $shell_id < 0 } {
	warning "$arg not executed because there is no target."
	return -1
    }
    send -i $shell_id "go $addr\r"
    verbose "Sent execute command"
    expect {
	-i $shell_id "*Effective address: $addr" {
	    exp_continue
	}
	-i $shell_id -re "$shell_prompt.*$" {
	    set exec_output $expect_out(buffer)
	    return 0
	}
	-i $shell_id timeout { 
	    perror "Couldn't execute program (timed out)."
	    return 1
	}
    }

}

@


1.1
log
@Synchronise with sources from savanaha repository
@
text
@@

