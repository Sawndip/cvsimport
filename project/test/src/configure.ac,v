head	1.197;
access;
symbols
	sid-snapshot-20180601:1.197
	cgen-snapshot-20180601:1.197
	sid-snapshot-20180501:1.197
	cgen-snapshot-20180501:1.197
	sid-snapshot-20180401:1.197
	cgen-snapshot-20180401:1.197
	sid-snapshot-20180301:1.197
	cgen-snapshot-20180301:1.197
	sid-snapshot-20180201:1.197
	cgen-snapshot-20180201:1.197
	sid-snapshot-20180101:1.197
	cgen-snapshot-20180101:1.197
	sid-snapshot-20171201:1.197
	cgen-snapshot-20171201:1.197
	sid-snapshot-20171101:1.197
	cgen-snapshot-20171101:1.197
	sid-snapshot-20171001:1.197
	cgen-snapshot-20171001:1.197
	sid-snapshot-20170901:1.197
	cgen-snapshot-20170901:1.197
	sid-snapshot-20170801:1.197
	cgen-snapshot-20170801:1.197
	sid-snapshot-20170701:1.197
	cgen-snapshot-20170701:1.197
	sid-snapshot-20170601:1.197
	cgen-snapshot-20170601:1.197
	sid-snapshot-20170501:1.197
	cgen-snapshot-20170501:1.197
	sid-snapshot-20170401:1.197
	cgen-snapshot-20170401:1.197
	sid-snapshot-20170301:1.197
	cgen-snapshot-20170301:1.197
	sid-snapshot-20170201:1.197
	cgen-snapshot-20170201:1.197
	sid-snapshot-20170101:1.197
	cgen-snapshot-20170101:1.197
	sid-snapshot-20161201:1.197
	cgen-snapshot-20161201:1.197
	sid-snapshot-20161101:1.197
	cgen-snapshot-20161101:1.197
	sid-snapshot-20160901:1.197
	cgen-snapshot-20160901:1.197
	sid-snapshot-20160801:1.197
	cgen-snapshot-20160801:1.197
	sid-snapshot-20160701:1.197
	cgen-snapshot-20160701:1.197
	sid-snapshot-20160601:1.197
	cgen-snapshot-20160601:1.197
	sid-snapshot-20160501:1.197
	cgen-snapshot-20160501:1.197
	sid-snapshot-20160401:1.197
	cgen-snapshot-20160401:1.197
	sid-snapshot-20160301:1.197
	cgen-snapshot-20160301:1.197
	sid-snapshot-20160201:1.197
	cgen-snapshot-20160201:1.197
	sid-snapshot-20160101:1.197
	cgen-snapshot-20160101:1.197
	sid-snapshot-20151201:1.197
	cgen-snapshot-20151201:1.197
	sid-snapshot-20151101:1.197
	cgen-snapshot-20151101:1.197
	sid-snapshot-20151001:1.197
	cgen-snapshot-20151001:1.197
	sid-snapshot-20150901:1.197
	cgen-snapshot-20150901:1.197
	sid-snapshot-20150801:1.197
	cgen-snapshot-20150801:1.197
	sid-snapshot-20150701:1.197
	cgen-snapshot-20150701:1.197
	sid-snapshot-20150601:1.197
	cgen-snapshot-20150601:1.197
	sid-snapshot-20150501:1.197
	cgen-snapshot-20150501:1.197
	sid-snapshot-20150401:1.197
	cgen-snapshot-20150401:1.197
	cygwin-1_7_35-release:1.197
	sid-snapshot-20150301:1.197
	cgen-snapshot-20150301:1.197
	sid-snapshot-20150201:1.197
	cgen-snapshot-20150201:1.197
	sid-snapshot-20150101:1.197
	cgen-snapshot-20150101:1.197
	newlib-2_2_0:1.197.0.2
	sid-snapshot-20141201:1.197
	cgen-snapshot-20141201:1.197
	cygwin-1_7_33-release:1.197
	sid-snapshot-20141101:1.197
	cgen-snapshot-20141101:1.197
	sid-snapshot-20141001:1.197
	cgen-snapshot-20141001:1.197
	sid-snapshot-20140901:1.197
	cgen-snapshot-20140901:1.197
	cygwin-1_7_32-release:1.197
	sid-snapshot-20140801:1.197
	cgen-snapshot-20140801:1.197
	cygwin-1_7_31-release:1.197
	sid-snapshot-20140701:1.196
	cgen-snapshot-20140701:1.196
	sid-snapshot-20140601:1.196
	cgen-snapshot-20140601:1.196
	cygwin-1_7_30-release:1.195
	sid-snapshot-20140501:1.195
	cgen-snapshot-20140501:1.195
	cygwin-1_7_29-release:1.195
	sid-snapshot-20140401:1.195
	cgen-snapshot-20140401:1.195
	sid-snapshot-20140301:1.195
	cgen-snapshot-20140301:1.195
	cygwin-1_7_28-release:1.195
	sid-snapshot-20140201:1.195
	cgen-snapshot-20140201:1.195
	sid-snapshot-20140101:1.195
	cgen-snapshot-20140101:1.195
	newlib-2_1_0:1.195
	sid-snapshot-20131201:1.195
	cgen-snapshot-20131201:1.195
	sid-snapshot-20131101:1.195
	cgen-snapshot-20131101:1.195
	sid-snapshot-20131001:1.193
	cgen-snapshot-20131001:1.193
	binutils-2_24-branch:1.192.0.2
	binutils-2_24-branchpoint:1.192
	binutils-2_21_1:1.111.2.3
	sid-snapshot-20130901:1.192
	cgen-snapshot-20130901:1.192
	gdb_7_6_1-2013-08-30-release:1.187
	sid-snapshot-20130801:1.190
	cgen-snapshot-20130801:1.190
	sid-snapshot-20130701:1.189
	cgen-snapshot-20130701:1.189
	sid-snapshot-20130601:1.188
	cgen-snapshot-20130601:1.188
	sid-snapshot-20130501:1.188
	cgen-snapshot-20130501:1.188
	gdb_7_6-2013-04-26-release:1.187
	cygwin-64bit-premerge-branch:1.188.0.2
	cygwin-64bit-premerge:1.188
	sid-snapshot-20130401:1.187
	cgen-snapshot-20130401:1.187
	binutils-2_23_2:1.168
	gdb_7_6-branch:1.187.0.2
	gdb_7_6-2013-03-12-branchpoint:1.187
	sid-snapshot-20130301:1.187
	cgen-snapshot-20130301:1.187
	sid-snapshot-20130201:1.185
	cgen-snapshot-20130201:1.185
	sid-snapshot-20130101:1.184
	cgen-snapshot-20130101:1.184
	newlib-2_0_0:1.184
	sid-snapshot-20121201:1.182
	cgen-snapshot-20121201:1.182
	gdb_7_5_1-2012-11-29-release:1.168
	binutils-2_23_1:1.168
	sid-snapshot-20121101:1.177
	cgen-snapshot-20121101:1.177
	binutils-2_23:1.168
	sid-snapshot-20121001:1.174
	cgen-snapshot-20121001:1.174
	sid-snapshot-20120901:1.169
	cgen-snapshot-20120901:1.169
	gdb_7_5-2012-08-17-release:1.168
	sid-snapshot-20120801:1.168
	cgen-snapshot-20120801:1.168
	binutils-2_23-branch:1.168.0.4
	binutils-2_23-branchpoint:1.168
	gdb_7_5-branch:1.168.0.2
	gdb_7_5-2012-07-18-branchpoint:1.168
	sid-snapshot-20120701:1.168
	cgen-snapshot-20120701:1.168
	sid-snapshot-20120601:1.167
	cgen-snapshot-20120601:1.167
	cygwin-1_7_15-release:1.166
	sid-snapshot-20120501:1.165
	cgen-snapshot-20120501:1.165
	binutils-2_22_branch:1.158.0.4
	gdb_7_4_1-2012-04-26-release:1.161
	cygwin-1_7_14_2-release:1.165
	cygwin-1_7_14-release:1.165
	cygwin-1_7_12-release:1.164
	sid-snapshot-20120401:1.164
	cgen-snapshot-20120401:1.164
	sid-snapshot-20120301:1.161
	cgen-snapshot-20120301:1.161
	cygwin-1_7_11-release:1.161
	cygwin-1_7_10-release:1.161
	sid-snapshot-20120201:1.161
	cgen-snapshot-20120201:1.161
	gdb_7_4-2012-01-24-release:1.161
	sid-snapshot-20120101:1.161
	cgen-snapshot-20120101:1.161
	newlib-1_20_0:1.161
	gdb_7_4-branch:1.161.0.2
	gdb_7_4-2011-12-13-branchpoint:1.161
	sid-snapshot-20111201:1.161
	cgen-snapshot-20111201:1.161
	binutils-2_22:1.158
	sid-snapshot-20111101:1.158
	cgen-snapshot-20111101:1.158
	sid-snapshot-20111001:1.158
	cgen-snapshot-20111001:1.158
	binutils-2_22-branch:1.158.0.2
	binutils-2_22-branchpoint:1.158
	gdb_7_3_1-2011-09-04-release:1.140.2.5
	sid-snapshot-20110901:1.158
	cgen-snapshot-20110901:1.158
	sid-snapshot-20110801:1.157
	cgen-snapshot-20110801:1.157
	gdb_7_3-2011-07-26-release:1.140.2.5
	sid-snapshot-20110701:1.155
	cgen-snapshot-20110701:1.155
	sid-snapshot-20110601:1.154
	cgen-snapshot-20110601:1.154
	sid-snapshot-20110501:1.150
	cgen-snapshot-20110501:1.150
	gdb_7_3-branch:1.140.0.2
	gdb_7_3-2011-04-01-branchpoint:1.140
	sid-snapshot-20110401:1.144
	cgen-snapshot-20110401:1.144
	cygwin-1_7_9-release:1.140
	sid-snapshot-20110301:1.127
	cgen-snapshot-20110301:1.127
	sid-snapshot-20110201:1.126
	cgen-snapshot-20110201:1.126
	sid-snapshot-20110101:1.122
	cgen-snapshot-20110101:1.122
	newlib-1_19_0:1.122
	binutils-2_21:1.111.2.2
	sid-snapshot-20101201:1.118
	cgen-snapshot-20101201:1.118
	binutils-2_21-branch:1.111.0.2
	binutils-2_21-branchpoint:1.111
	sid-snapshot-20101101:1.109
	cgen-snapshot-20101101:1.109
	sid-snapshot-20101001:1.106
	cgen-snapshot-20101001:1.106
	binutils-2_20_1:1.74
	gdb_7_2-2010-09-02-release:1.104
	sid-snapshot-20100901:1.105
	cgen-snapshot-20100901:1.105
	sid-snapshot-20100801:1.105
	cgen-snapshot-20100801:1.105
	gdb_7_2-branch:1.104.0.2
	gdb_7_2-2010-07-07-branchpoint:1.104
	sid-snapshot-20100701:1.104
	cgen-snapshot-20100701:1.104
	sid-snapshot-20100601:1.103
	cgen-snapshot-20100601:1.103
	sid-snapshot-20100501:1.102
	cgen-snapshot-20100501:1.102
	cygwin-1_7_5-release:1.100
	cygwin-1_7_4-release:1.99
	sid-snapshot-20100401:1.99
	cgen-snapshot-20100401:1.99
	cygwin-1_7_3-release:1.98
	cygwin-1_7_2-release:1.96
	gdb_7_1-2010-03-18-release:1.95
	sid-snapshot-20100301:1.95
	cgen-snapshot-20100301:1.95
	gdb_7_1-branch:1.95.0.2
	gdb_7_1-2010-02-18-branchpoint:1.95
	sid-snapshot-20100201:1.92
	cgen-snapshot-20100201:1.92
	sid-snapshot-20100101:1.87
	cgen-snapshot-20100101:1.87
	gdb_7_0_1-2009-12-22-release:1.77
	newlib-1_18_0:1.87
	cygwin-1_7_1-release:1.86
	sid-snapshot-20091201:1.86
	cgen-snapshot-20091201:1.86
	sid-snapshot-20091101:1.85
	cgen-snapshot-20091101:1.85
	binutils-2_20:1.74
	gdb_7_0-2009-10-06-release:1.77
	sid-snapshot-20091001:1.83
	cgen-snapshot-20091001:1.83
	gdb_7_0-branch:1.77.0.2
	gdb_7_0-2009-09-16-branchpoint:1.77
	arc-sim-20090309:1.37.4.1
	binutils-arc-20081103-branch:1.53.0.4
	binutils-arc-20081103-branchpoint:1.53
	newlib-1_17_0-arc:1.57.0.4
	binutils-2_20-branch:1.74.0.2
	binutils-2_20-branchpoint:1.74
	sid-snapshot-20090901:1.73
	cgen-snapshot-20090901:1.73
	sid-snapshot-20090801:1.68
	cgen-snapshot-20090801:1.68
	msnyder-checkpoint-072509-branch:1.68.0.2
	msnyder-checkpoint-072509-branchpoint:1.68
	sid-snapshot-20090701:1.67
	cgen-snapshot-20090701:1.67
	dje-cgen-play1-branch:1.67.0.2
	dje-cgen-play1-branchpoint:1.67
	cgen-1_1-branch:1.66.0.2
	cgen-1_1-branchpoint:1.66
	sid-snapshot-20090601:1.65
	cgen-snapshot-20090601:1.65
	sid-snapshot-20090501:1.64
	cgen-snapshot-20090501:1.64
	sid-snapshot-20090401:1.61
	cgen-snapshot-20090401:1.61
	binutils-arc-20080908-branch:1.51.0.6
	binutils-arc-20080908-branchpoint:1.51
	arc-20081103-branch:1.53.0.2
	arc-20081103-branchpoint:1.53
	arc-insight_6_8-branch:1.37.4.1.0.2
	arc-insight_6_8-branchpoint:1.37.4.1
	insight_6_8-branch:1.37.0.4
	insight_6_8-branchpoint:1.37
	sid-snapshot-20090301:1.58
	cgen-snapshot-20090301:1.58
	binutils-2_19_1:1.51
	sid-snapshot-20090201:1.58
	cgen-snapshot-20090201:1.58
	sid-snapshot-20090101:1.57
	cgen-snapshot-20090101:1.57
	reverse-20081226-branch:1.57.0.2
	reverse-20081226-branchpoint:1.57
	newlib-1_17_0:1.57
	sid-snapshot-20081201:1.56
	cgen-snapshot-20081201:1.56
	multiprocess-20081120-branch:1.54.0.2
	multiprocess-20081120-branchpoint:1.54
	sid-snapshot-20081101:1.53
	cgen-snapshot-20081101:1.53
	binutils-2_19:1.51
	sid-snapshot-20081001:1.51
	cgen-snapshot-20081001:1.51
	reverse-20080930-branch:1.51.0.4
	reverse-20080930-branchpoint:1.51
	binutils-2_19-branch:1.51.0.2
	binutils-2_19-branchpoint:1.51
	sid-snapshot-20080901:1.50
	cgen-snapshot-20080901:1.50
	sid-snapshot-20080801:1.48
	cgen-snapshot-20080801:1.48
	reverse-20080717-branch:1.47.0.2
	reverse-20080717-branchpoint:1.47
	sid-snapshot-20080701:1.47
	cgen-snapshot-20080701:1.47
	msnyder-reverse-20080609-branch:1.44.0.2
	msnyder-reverse-20080609-branchpoint:1.44
	drow-reverse-20070409-branch:1.10.0.2
	drow-reverse-20070409-branchpoint:1.10
	sid-snapshot-20080601:1.44
	cgen-snapshot-20080601:1.44
	sid-snapshot-20080501:1.44
	cgen-snapshot-20080501:1.44
	sid-snapshot-20080403:1.39
	sid-snapshot-20080401:1.39
	cgen-snapshot-20080401:1.39
	gdb_6_8-2008-03-27-release:1.37
	sid-snapshot-20080301:1.37
	cgen-snapshot-20080301:1.37
	gdb_6_8-branch:1.37.0.2
	gdb_6_8-2008-02-26-branchpoint:1.37
	sid-snapshot-20080201:1.34
	cgen-snapshot-20080201:1.34
	sid-snapshot-20080101:1.33
	cgen-snapshot-20080101:1.33
	newlib-1_16_0:1.33
	sid-snapshot-20071201:1.31
	cgen-snapshot-20071201:1.31
	sid-snapshot-20071101:1.31
	cgen-snapshot-20071101:1.31
	gdb_6_7_1-2007-10-29-release:1.20.2.1
	gdb_6_7-2007-10-10-release:1.20
	sid-snapshot-20071001:1.30
	cgen-snapshot-20071001:1.30
	gdb_6_7-branch:1.20.0.2
	gdb_6_7-2007-09-07-branchpoint:1.20
	binutils-2_18:1.16
	binutils-2_18-branch:1.16.0.2
	binutils-2_18-branchpoint:1.16
	binutils_latest_snapshot:1.196;
locks; strict;
comment	@# @;


1.197
date	2014.07.05.21.09.07;	author ro;	state Exp;
branches;
next	1.196;

1.196
date	2014.05.14.23.24.37;	author sandra;	state Exp;
branches;
next	1.195;

1.195
date	2013.10.16.20.36.39;	author jbglaw;	state Exp;
branches;
next	1.194;

1.194
date	2013.10.08.14.14.12;	author jbglaw;	state Exp;
branches;
next	1.193;

1.193
date	2013.09.21.00.05.18;	author jbglaw;	state Exp;
branches;
next	1.192;

1.192
date	2013.08.12.11.36.35;	author jbglaw;	state Exp;
branches;
next	1.191;

1.191
date	2013.08.05.16.05.32;	author mrs;	state Exp;
branches;
next	1.190;

1.190
date	2013.07.10.20.55.59;	author mrs;	state Exp;
branches;
next	1.189;

1.189
date	2013.06.22.16.44.13;	author rsandifo;	state Exp;
branches;
next	1.188;

1.188
date	2013.04.22.15.25.09;	author jbglaw;	state Exp;
branches;
next	1.187;

1.187
date	2013.02.15.17.55.25;	author yufeng;	state Exp;
branches;
next	1.186;

1.186
date	2013.02.05.22.39.30;	author ian;	state Exp;
branches;
next	1.185;

1.185
date	2013.01.15.21.47.02;	author jbglaw;	state Exp;
branches;
next	1.184;

1.184
date	2012.12.16.07.10.07;	author tschwinge;	state Exp;
branches;
next	1.183;

1.183
date	2012.12.12.13.52.58;	author hjl;	state Exp;
branches;
next	1.182;

1.182
date	2012.11.30.15.02.40;	author jbglaw;	state Exp;
branches;
next	1.181;

1.181
date	2012.11.28.11.43.47;	author jbglaw;	state Exp;
branches;
next	1.180;

1.180
date	2012.11.15.14.10.39;	author hjl;	state Exp;
branches;
next	1.179;

1.179
date	2012.11.15.00.16.49;	author hjl;	state Exp;
branches;
next	1.178;

1.178
date	2012.11.04.00.09.53;	author hjl;	state Exp;
branches;
next	1.177;

1.177
date	2012.10.24.13.41.36;	author corinna;	state Exp;
branches;
next	1.176;

1.176
date	2012.10.23.23.02.33;	author ebotcazou;	state Exp;
branches;
next	1.175;

1.175
date	2012.10.22.07.32.04;	author ebotcazou;	state Exp;
branches;
next	1.174;

1.174
date	2012.09.29.15.35.53;	author hjl;	state Exp;
branches;
next	1.173;

1.173
date	2012.09.21.15.16.59;	author sje;	state Exp;
branches;
next	1.172;

1.172
date	2012.09.20.00.04.27;	author ian;	state Exp;
branches;
next	1.171;

1.171
date	2012.09.15.17.11.26;	author walt;	state Exp;
branches;
next	1.170;

1.170
date	2012.09.14.23.55.22;	author dje;	state Exp;
branches;
next	1.169;

1.169
date	2012.08.26.14.34.40;	author hjl;	state Exp;
branches;
next	1.168;

1.168
date	2012.06.28.11.50.52;	author aoliva;	state Exp;
branches;
next	1.167;

1.167
date	2012.05.10.13.42.03;	author nickc;	state Exp;
branches;
next	1.166;

1.166
date	2012.05.02.21.37.22;	author roland;	state Exp;
branches;
next	1.165;

1.165
date	2012.04.12.07.34.57;	author nickc;	state Exp;
branches;
next	1.164;

1.164
date	2012.03.15.14.13.31;	author ro;	state Exp;
branches;
next	1.163;

1.163
date	2012.03.15.14.11.38;	author ro;	state Exp;
branches;
next	1.162;

1.162
date	2012.03.05.11.57.17;	author gingold;	state Exp;
branches;
next	1.161;

1.161
date	2011.11.09.18.57.28;	author dj;	state Exp;
branches;
next	1.160;

1.160
date	2011.11.08.18.23.33;	author rth;	state Exp;
branches;
next	1.159;

1.159
date	2011.11.02.03.08.52;	author dj;	state Exp;
branches;
next	1.158;

1.158
date	2011.08.14.12.28.16;	author qiyao;	state Exp;
branches;
next	1.157;

1.157
date	2011.07.26.18.48.08;	author ian;	state Exp;
branches;
next	1.156;

1.156
date	2011.07.07.09.28.08;	author ro;	state Exp;
branches;
next	1.155;

1.155
date	2011.06.13.15.24.42;	author nickc;	state Exp;
branches;
next	1.154;

1.154
date	2011.05.09.17.56.47;	author dougkwan;	state Exp;
branches;
next	1.153;

1.153
date	2011.05.05.12.39.33;	author jsm28;	state Exp;
branches;
next	1.152;

1.152
date	2011.05.04.21.45.47;	author jsm28;	state Exp;
branches;
next	1.151;

1.151
date	2011.05.04.09.51.31;	author jsm28;	state Exp;
branches;
next	1.150;

1.150
date	2011.04.28.16.46.34;	author jsm28;	state Exp;
branches;
next	1.149;

1.149
date	2011.04.28.13.33.02;	author jsm28;	state Exp;
branches;
next	1.148;

1.148
date	2011.04.28.13.26.23;	author jsm28;	state Exp;
branches;
next	1.147;

1.147
date	2011.04.28.13.24.52;	author jsm28;	state Exp;
branches;
next	1.146;

1.146
date	2011.04.06.12.21.20;	author jsm28;	state Exp;
branches;
next	1.145;

1.145
date	2011.04.01.19.16.09;	author jsm28;	state Exp;
branches;
next	1.144;

1.144
date	2011.04.01.13.44.53;	author jsm28;	state Exp;
branches;
next	1.143;

1.143
date	2011.04.01.13.42.02;	author jsm28;	state Exp;
branches;
next	1.142;

1.142
date	2011.04.01.12.00.58;	author jsm28;	state Exp;
branches;
next	1.141;

1.141
date	2011.04.01.11.58.07;	author jsm28;	state Exp;
branches;
next	1.140;

1.140
date	2011.03.28.13.14.27;	author jsm28;	state Exp;
branches
	1.140.2.1;
next	1.139;

1.139
date	2011.03.28.11.18.20;	author nickc;	state Exp;
branches;
next	1.138;

1.138
date	2011.03.25.13.08.19;	author jsm28;	state Exp;
branches;
next	1.137;

1.137
date	2011.03.25.11.36.41;	author jsm28;	state Exp;
branches;
next	1.136;

1.136
date	2011.03.24.17.50.32;	author bonzini;	state Exp;
branches;
next	1.135;

1.135
date	2011.03.24.17.31.09;	author bonzini;	state Exp;
branches;
next	1.134;

1.134
date	2011.03.24.16.52.10;	author jsm28;	state Exp;
branches;
next	1.133;

1.133
date	2011.03.24.13.25.45;	author jsm28;	state Exp;
branches;
next	1.132;

1.132
date	2011.03.22.20.04.36;	author jsm28;	state Exp;
branches;
next	1.131;

1.131
date	2011.03.22.20.01.13;	author jsm28;	state Exp;
branches;
next	1.130;

1.130
date	2011.03.21.13.03.34;	author ro;	state Exp;
branches;
next	1.129;

1.129
date	2011.03.04.04.21.34;	author spop;	state Exp;
branches;
next	1.128;

1.128
date	2011.03.02.03.49.37;	author spop;	state Exp;
branches;
next	1.127;

1.127
date	2011.02.12.14.40.08;	author rwild;	state Exp;
branches;
next	1.126;

1.126
date	2011.01.31.05.26.01;	author aoliva;	state Exp;
branches;
next	1.125;

1.125
date	2011.01.21.13.29.47;	author schwab;	state Exp;
branches;
next	1.124;

1.124
date	2011.01.13.16.24.08;	author brobecke;	state Exp;
branches;
next	1.123;

1.123
date	2011.01.02.16.40.07;	author rwild;	state Exp;
branches;
next	1.122;

1.122
date	2010.12.10.14.50.10;	author ian;	state Exp;
branches;
next	1.121;

1.121
date	2010.12.10.12.09.34;	author bonzini;	state Exp;
branches;
next	1.120;

1.120
date	2010.12.07.21.20.22;	author ian;	state Exp;
branches;
next	1.119;

1.119
date	2010.12.06.01.55.25;	author hp;	state Exp;
branches;
next	1.118;

1.118
date	2010.11.29.11.01.42;	author schwab;	state Exp;
branches;
next	1.117;

1.117
date	2010.11.26.04.56.39;	author aoliva;	state Exp;
branches;
next	1.116;

1.116
date	2010.11.23.18.10.14;	author hjl;	state Exp;
branches;
next	1.115;

1.115
date	2010.11.23.13.39.56;	author nickc;	state Exp;
branches;
next	1.114;

1.114
date	2010.11.21.01.56.30;	author ian;	state Exp;
branches;
next	1.113;

1.113
date	2010.11.20.19.37.57;	author rwild;	state Exp;
branches;
next	1.112;

1.112
date	2010.11.19.22.06.27;	author ian;	state Exp;
branches;
next	1.111;

1.111
date	2010.11.03.14.27.05;	author davek;	state Exp;
branches
	1.111.2.1;
next	1.110;

1.110
date	2010.11.02.00.22.10;	author amodra;	state Exp;
branches;
next	1.109;

1.109
date	2010.10.07.20.50.01;	author davek;	state Exp;
branches;
next	1.108;

1.108
date	2010.10.02.14.54.05;	author rwild;	state Exp;
branches;
next	1.107;

1.107
date	2010.10.02.14.42.47;	author rwild;	state Exp;
branches;
next	1.106;

1.106
date	2010.09.27.20.22.46;	author rwild;	state Exp;
branches;
next	1.105;

1.105
date	2010.07.23.14.52.42;	author nickc;	state Exp;
branches;
next	1.104;

1.104
date	2010.06.01.17.28.08;	author rwild;	state Exp;
branches;
next	1.103;

1.103
date	2010.05.26.05.16.30;	author davek;	state Exp;
branches;
next	1.102;

1.102
date	2010.04.27.14.24.37;	author nickc;	state Exp;
branches;
next	1.101;

1.101
date	2010.04.14.09.28.48;	author gingold;	state Exp;
branches;
next	1.100;

1.100
date	2010.04.08.19.44.08;	author rwild;	state Exp;
branches;
next	1.99;

1.99
date	2010.03.31.05.44.01;	author rwild;	state Exp;
branches;
next	1.98;

1.98
date	2010.03.23.16.05.34;	author jsm28;	state Exp;
branches;
next	1.97;

1.97
date	2010.03.23.14.30.59;	author jsm28;	state Exp;
branches;
next	1.96;

1.96
date	2010.03.04.17.12.46;	author ro;	state Exp;
branches;
next	1.95;

1.95
date	2010.02.17.10.05.50;	author nickc;	state Exp;
branches;
next	1.94;

1.94
date	2010.02.15.10.53.35;	author nickc;	state Exp;
branches;
next	1.93;

1.93
date	2010.02.15.10.37.54;	author nickc;	state Exp;
branches;
next	1.92;

1.92
date	2010.01.31.18.40.33;	author ghazi;	state Exp;
branches;
next	1.91;

1.91
date	2010.01.25.18.06.22;	author amylaar;	state Exp;
branches;
next	1.90;

1.90
date	2010.01.23.11.32.15;	author amylaar;	state Exp;
branches;
next	1.89;

1.89
date	2010.01.22.16.28.25;	author amylaar;	state Exp;
branches;
next	1.88;

1.88
date	2010.01.08.15.59.17;	author ghazi;	state Exp;
branches;
next	1.87;

1.87
date	2009.12.07.20.24.59;	author ghazi;	state Exp;
branches;
next	1.86;

1.86
date	2009.11.16.18.42.36;	author aoliva;	state Exp;
branches;
next	1.85;

1.85
date	2009.10.13.03.32.18;	author rwild;	state Exp;
branches;
next	1.84;

1.84
date	2009.10.07.05.57.49;	author ian;	state Exp;
branches;
next	1.83;

1.83
date	2009.09.29.21.31.07;	author bonzini;	state Exp;
branches;
next	1.82;

1.82
date	2009.09.25.19.25.04;	author nickc;	state Exp;
branches;
next	1.81;

1.81
date	2009.09.22.18.00.40;	author rwild;	state Exp;
branches;
next	1.80;

1.80
date	2009.09.21.20.32.59;	author rwild;	state Exp;
branches;
next	1.79;

1.79
date	2009.09.21.20.31.02;	author rwild;	state Exp;
branches;
next	1.78;

1.78
date	2009.09.21.19.25.05;	author rwild;	state Exp;
branches;
next	1.77;

1.77
date	2009.09.16.00.45.55;	author jiez;	state Exp;
branches;
next	1.76;

1.76
date	2009.09.08.17.55.50;	author rwild;	state Exp;
branches;
next	1.75;

1.75
date	2009.09.07.00.44.07;	author aoliva;	state Exp;
branches;
next	1.74;

1.74
date	2009.09.02.07.05.02;	author bonzini;	state Exp;
branches;
next	1.73;

1.73
date	2009.08.24.19.12.54;	author rwild;	state Exp;
branches;
next	1.72;

1.72
date	2009.08.22.17.08.06;	author rwild;	state Exp;
branches;
next	1.71;

1.71
date	2009.08.19.22.21.10;	author rwild;	state Exp;
branches;
next	1.70;

1.70
date	2009.08.19.19.49.26;	author rwild;	state Exp;
branches;
next	1.69;

1.69
date	2009.08.06.17.46.43;	author nickc;	state Exp;
branches;
next	1.68;

1.68
date	2009.07.02.08.24.01;	author gingold;	state Exp;
branches;
next	1.67;

1.67
date	2009.06.26.17.19.07;	author devans;	state Exp;
branches;
next	1.66;

1.66
date	2009.06.15.14.08.41;	author nickc;	state Exp;
branches
	1.66.2.1;
next	1.65;

1.65
date	2009.05.29.00.15.11;	author dougkwan;	state Exp;
branches;
next	1.64;

1.64
date	2009.04.16.15.39.40;	author nickc;	state Exp;
branches;
next	1.63;

1.63
date	2009.04.09.15.54.10;	author hjl;	state Exp;
branches;
next	1.62;

1.62
date	2009.04.09.15.40.57;	author hjl;	state Exp;
branches;
next	1.61;

1.61
date	2009.03.18.23.33.26;	author tromey;	state Exp;
branches;
next	1.60;

1.60
date	2009.03.16.17.00.47;	author brobecke;	state Exp;
branches;
next	1.59;

1.59
date	2009.03.16.13.29.49;	author jsm28;	state Exp;
branches;
next	1.58;

1.58
date	2009.01.15.12.55.46;	author nickc;	state Exp;
branches;
next	1.57;

1.57
date	2008.12.16.12.31.18;	author bonzini;	state Exp;
branches;
next	1.56;

1.56
date	2008.11.27.17.14.58;	author jsm28;	state Exp;
branches;
next	1.55;

1.55
date	2008.11.27.15.20.39;	author gingold;	state Exp;
branches;
next	1.54;

1.54
date	2008.11.14.15.10.50;	author drow;	state Exp;
branches;
next	1.53;

1.53
date	2008.10.29.19.39.13;	author uweigand;	state Exp;
branches;
next	1.52;

1.52
date	2008.10.22.13.35.30;	author drow;	state Exp;
branches;
next	1.51;

1.51
date	2008.09.04.02.18.16;	author aaronwl;	state Exp;
branches;
next	1.50;

1.50
date	2008.08.28.10.20.05;	author gingold;	state Exp;
branches;
next	1.49;

1.49
date	2008.08.16.06.47.17;	author rsandifo;	state Exp;
branches;
next	1.48;

1.48
date	2008.07.30.15.03.57;	author bonzini;	state Exp;
branches;
next	1.47;

1.47
date	2008.06.16.21.38.13;	author rwild;	state Exp;
branches;
next	1.46;

1.46
date	2008.06.13.13.05.13;	author jules;	state Exp;
branches;
next	1.45;

1.45
date	2008.06.12.17.07.34;	author dje;	state Exp;
branches;
next	1.44;

1.44
date	2008.04.18.11.07.31;	author bonzini;	state Exp;
branches;
next	1.43;

1.43
date	2008.04.18.08.45.05;	author nickc;	state Exp;
branches;
next	1.42;

1.42
date	2008.04.15.05.16.51;	author davem;	state Exp;
branches;
next	1.41;

1.41
date	2008.04.04.11.45.58;	author nickc;	state Exp;
branches;
next	1.40;

1.40
date	2008.04.04.11.15.58;	author nickc;	state Exp;
branches;
next	1.39;

1.39
date	2008.03.21.15.42.41;	author ian;	state Exp;
branches;
next	1.38;

1.38
date	2008.03.17.22.17.27;	author rwild;	state Exp;
branches;
next	1.37;

1.37
date	2008.02.20.14.26.58;	author bonzini;	state Exp;
branches
	1.37.4.1;
next	1.36;

1.36
date	2008.02.02.22.19.04;	author hp;	state Exp;
branches;
next	1.35;

1.35
date	2008.02.01.18.32.06;	author bwilson;	state Exp;
branches;
next	1.34;

1.34
date	2008.01.31.10.39.43;	author bonzini;	state Exp;
branches;
next	1.33;

1.33
date	2007.12.18.07.37.34;	author rsandifo;	state Exp;
branches;
next	1.32;

1.32
date	2007.12.14.01.28.55;	author dj;	state Exp;
branches;
next	1.31;

1.31
date	2007.10.08.09.30.35;	author nickc;	state Exp;
branches;
next	1.30;

1.30
date	2007.10.01.07.55.47;	author bonzini;	state Exp;
branches;
next	1.29;

1.29
date	2007.09.20.21.56.16;	author dj;	state Exp;
branches;
next	1.28;

1.28
date	2007.09.20.20.03.31;	author rsandifo;	state Exp;
branches;
next	1.27;

1.27
date	2007.09.17.20.59.06;	author schwab;	state Exp;
branches;
next	1.26;

1.26
date	2007.09.14.15.47.01;	author amodra;	state Exp;
branches;
next	1.25;

1.25
date	2007.09.14.14.51.36;	author rsandifo;	state Exp;
branches;
next	1.24;

1.24
date	2007.09.12.17.51.22;	author daney;	state Exp;
branches;
next	1.23;

1.23
date	2007.09.11.13.10.20;	author aph;	state Exp;
branches;
next	1.22;

1.22
date	2007.09.11.00.22.05;	author dj;	state Exp;
branches;
next	1.21;

1.21
date	2007.09.09.08.19.50;	author aph;	state Exp;
branches;
next	1.20;

1.20
date	2007.08.21.04.15.07;	author bje;	state Exp;
branches
	1.20.2.1;
next	1.19;

1.19
date	2007.08.18.15.19.09;	author jsm28;	state Exp;
branches;
next	1.18;

1.18
date	2007.08.17.13.15.24;	author rsandifo;	state Exp;
branches;
next	1.17;

1.17
date	2007.08.13.01.32.36;	author bje;	state Exp;
branches;
next	1.16;

1.16
date	2007.07.12.11.51.39;	author bernds;	state Exp;
branches
	1.16.2.1;
next	1.15;

1.15
date	2007.07.11.19.12.27;	author dj;	state Exp;
branches;
next	1.14;

1.14
date	2007.07.09.09.16.05;	author nickc;	state Exp;
branches;
next	1.13;

1.13
date	2007.06.29.11.33.56;	author bernds;	state Exp;
branches;
next	1.12;

1.12
date	2007.06.28.19.31.44;	author dj;	state Exp;
branches;
next	1.11;

1.11
date	2007.06.04.08.32.52;	author bonzini;	state Exp;
branches;
next	1.10;

1.10
date	2007.03.21.20.11.06;	author rsandifo;	state Exp;
branches;
next	1.9;

1.9
date	2007.03.05.23.19.10;	author dj;	state Exp;
branches;
next	1.8;

1.8
date	2007.02.19.17.24.25;	author jsm28;	state Exp;
branches;
next	1.7;

1.7
date	2007.02.18.22.46.28;	author aoliva;	state Exp;
branches;
next	1.6;

1.6
date	2007.02.17.13.33.51;	author jsm28;	state Exp;
branches;
next	1.5;

1.5
date	2007.02.13.21.33.14;	author drow;	state Exp;
branches;
next	1.4;

1.4
date	2007.02.13.14.40.31;	author drow;	state Exp;
branches;
next	1.3;

1.3
date	2007.02.09.22.35.45;	author drow;	state Exp;
branches;
next	1.2;

1.2
date	2007.02.09.19.24.41;	author bonzini;	state Exp;
branches;
next	1.1;

1.1
date	2007.02.09.15.15.38;	author drow;	state Exp;
branches;
next	;

1.140.2.1
date	2011.05.17.21.23.41;	author brobecke;	state Exp;
branches;
next	1.140.2.2;

1.140.2.2
date	2011.05.17.21.23.56;	author brobecke;	state Exp;
branches;
next	1.140.2.3;

1.140.2.3
date	2011.05.17.21.24.10;	author brobecke;	state Exp;
branches;
next	1.140.2.4;

1.140.2.4
date	2011.05.17.21.24.53;	author brobecke;	state Exp;
branches;
next	1.140.2.5;

1.140.2.5
date	2011.05.17.21.26.52;	author brobecke;	state Exp;
branches;
next	;

1.111.2.1
date	2010.11.23.13.38.35;	author nickc;	state Exp;
branches;
next	1.111.2.2;

1.111.2.2
date	2010.11.24.13.27.41;	author gingold;	state Exp;
branches;
next	1.111.2.3;

1.111.2.3
date	2011.06.03.16.32.11;	author nickc;	state Exp;
branches;
next	;

1.66.2.1
date	2009.06.26.17.27.08;	author devans;	state Exp;
branches;
next	;

1.37.4.1
date	2009.03.09.14.54.20;	author amylaar;	state Exp;
branches;
next	;

1.20.2.1
date	2007.10.12.14.05.09;	author drow;	state Exp;
branches;
next	;

1.16.2.1
date	2007.10.12.14.03.20;	author drow;	state Exp;
branches;
next	;


desc
@@


1.197
log
@	* configure.ac: Don't accept isl 0.10.
	* configure: Regenerate.
@
text
@#   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,
#   2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012
#   Free Software Foundation, Inc.
#
# This file is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; see the file COPYING3.  If not see
# <http://www.gnu.org/licenses/>.

##############################################################################
### WARNING: this file contains embedded tabs.  Do not run untabify on this file.

m4_include(config/acx.m4)
m4_include(config/override.m4)
m4_include(config/proginstall.m4)
m4_include(config/elf.m4)
m4_include([libtool.m4])
m4_include([ltoptions.m4])
m4_include([ltsugar.m4])
m4_include([ltversion.m4])
m4_include([lt~obsolete.m4])
m4_include([config/isl.m4])
m4_include([config/cloog.m4])

AC_INIT(move-if-change)
AC_PREREQ(2.64)
AC_DISABLE_OPTION_CHECKING

progname=$0
# if PWD already has a value, it is probably wrong.
if test -n "$PWD" ; then PWD=`${PWDCMD-pwd}`; fi

# Export original configure arguments for use by sub-configures.
# Quote arguments with shell meta charatcers.
TOPLEVEL_CONFIGURE_ARGUMENTS=
set -- "$progname" "$@@"
for ac_arg
do
  case "$ac_arg" in
  *" "*|*"	"*|*[[\[\]\~\#\$\^\&\*\(\)\{\}\\\|\;\<\>\?\']]*)
    ac_arg=`echo "$ac_arg" | sed "s/'/'\\\\\\\\''/g"`
    # if the argument is of the form -foo=baz, quote the baz part only
    ac_arg=`echo "'$ac_arg'" | sed "s/^'\([[-a-zA-Z0-9]]*=\)/\\1'/"` ;;
  *) ;;
  esac
  # Add the quoted argument to the list.
  TOPLEVEL_CONFIGURE_ARGUMENTS="$TOPLEVEL_CONFIGURE_ARGUMENTS $ac_arg"
done
if test "$silent" = yes; then
  TOPLEVEL_CONFIGURE_ARGUMENTS="$TOPLEVEL_CONFIGURE_ARGUMENTS --silent"
fi
# Remove the initial space we just introduced and, as these will be
# expanded by make, quote '$'.
TOPLEVEL_CONFIGURE_ARGUMENTS=`echo "x$TOPLEVEL_CONFIGURE_ARGUMENTS" | sed -e 's/^x *//' -e 's,\\$,$$,g'`
AC_SUBST(TOPLEVEL_CONFIGURE_ARGUMENTS)

# Find the build, host, and target systems.
ACX_NONCANONICAL_BUILD
ACX_NONCANONICAL_HOST
ACX_NONCANONICAL_TARGET

dnl Autoconf 2.5x and later will set a default program prefix if
dnl --target was used, even if it was the same as --host.  Disable
dnl that behavior.  This must be done before AC_CANONICAL_SYSTEM
dnl to take effect.
test "$host_noncanonical" = "$target_noncanonical" &&
  test "$program_prefix$program_suffix$program_transform_name" = \
    NONENONEs,x,x, &&
  program_transform_name=s,y,y,

AC_CANONICAL_SYSTEM
AC_ARG_PROGRAM

m4_pattern_allow([^AS_FOR_TARGET$])dnl
m4_pattern_allow([^AS_FOR_BUILD$])dnl

# Get 'install' or 'install-sh' and its variants.
AC_PROG_INSTALL
ACX_PROG_LN
AC_PROG_LN_S
AC_PROG_SED
AC_PROG_AWK

srcpwd=`cd ${srcdir} ; ${PWDCMD-pwd}`

# We pass INSTALL explicitly to sub-makes.  Make sure that it is not
# a relative path.
if test "$INSTALL" = "${srcdir}/install-sh -c"; then
  INSTALL="${srcpwd}/install-sh -c"
fi

# Set srcdir to "." if that's what it is.
# This is important for multilib support.
pwd=`${PWDCMD-pwd}`
if test "${pwd}" = "${srcpwd}" ; then
  srcdir=.
fi

topsrcdir=$srcpwd

extra_host_args=

### To add a new directory to the tree, first choose whether it is a target
### or a host dependent tool.  Then put it into the appropriate list
### (library or tools, host or target), doing a dependency sort.

# Subdirs will be configured in the order listed in build_configdirs, 
# configdirs, or target_configdirs; see the serialization section below.

# Dependency sorting is only needed when *configuration* must be done in 
# a particular order.  In all cases a dependency should be specified in 
# the Makefile, whether or not it's implicitly specified here.

# Double entries in build_configdirs, configdirs, or target_configdirs may
# cause circular dependencies and break everything horribly.

# these library is used by various programs built for the build
# environment
#
build_libs="build-libiberty"

# these tools are built for the build environment
build_tools="build-texinfo build-flex build-bison build-m4 build-fixincludes"

# these libraries are used by various programs built for the host environment
#
host_libs="intl libiberty opcodes bfd readline tcl tk itcl libgui zlib libbacktrace libcpp libdecnumber gmp mpfr mpc isl cloog libelf libiconv"

# these tools are built for the host environment
# Note, the powerpc-eabi build depends on sim occurring before gdb in order to
# know that we are building the simulator.
# binutils, gas and ld appear in that order because it makes sense to run
# "make check" in that particular order.
# If --enable-gold is used, "gold" may replace "ld".
host_tools="texinfo flex bison binutils gas ld fixincludes gcc cgen sid sim gdb gprof etc expect dejagnu m4 utils guile fastjar gnattools"

# libgcj represents the runtime libraries only used by gcj.
libgcj="target-libffi \
	target-zlib \
	target-libjava"

# these libraries are built for the target environment, and are built after
# the host libraries and the host tools (which may be a cross compiler)
# Note that libiberty is not a target library.
target_libraries="target-libgcc \
		target-libbacktrace \
		target-libgloss \
		target-newlib \
		target-libgomp \
		target-libatomic \
		target-libitm \
		target-libstdc++-v3 \
		target-libmudflap \
		target-libsanitizer \
		target-libvtv \
		target-libssp \
		target-libquadmath \
		target-libgfortran \
		target-boehm-gc \
		${libgcj} \
		target-libobjc \
		target-libada \
		target-libgo"

# these tools are built using the target libraries, and are intended to
# run only in the target environment
#
# note: any program that *uses* libraries that are in the "target_libraries"
# list belongs in this list.
#
target_tools="target-rda"

################################################################################

## All tools belong in one of the four categories, and are assigned above
## We assign ${configdirs} this way to remove all embedded newlines.  This
## is important because configure will choke if they ever get through.
## ${configdirs} is directories we build using the host tools.
## ${target_configdirs} is directories we build using the target tools.
configdirs=`echo ${host_libs} ${host_tools}`
target_configdirs=`echo ${target_libraries} ${target_tools}`
build_configdirs=`echo ${build_libs} ${build_tools}`

m4_divert_text([PARSE_ARGS],
[case $srcdir in
  *" "*)
m4_pushdef([AS_MESSAGE_LOG_FD], [])dnl
    AC_MSG_ERROR([path to source, $srcdir, contains spaces])
m4_popdef([AS_MESSAGE_LOG_FD])dnl
    ;;
esac
ac_subdirs_all=`cd $srcdir && echo */configure | sed 's,/configure,,g'`
])

################################################################################

srcname="gnu development package"

# This gets set non-empty for some net releases of packages.
appdirs=""

# Define is_cross_compiler to save on calls to 'test'.
is_cross_compiler=
if test x"${host}" = x"${target}" ; then
  is_cross_compiler=no
else
  is_cross_compiler=yes
fi	

# Find the build and target subdir names.
GCC_TOPLEV_SUBDIRS
# Be sure to cover against remnants of an in-tree build.
if test $srcdir != .  && test -d $srcdir/host-${host_noncanonical}; then
  AC_MSG_ERROR([building out of tree but $srcdir contains host-${host_noncanonical}.
Use a pristine source tree when building in a separate tree])
fi

# Skipdirs are removed silently.
skipdirs=
# Noconfigdirs are removed loudly.
noconfigdirs=""

use_gnu_ld=
# Make sure we don't let GNU ld be added if we didn't want it.
if test x$with_gnu_ld = xno ; then
  use_gnu_ld=no
  noconfigdirs="$noconfigdirs ld gold"
fi

use_gnu_as=
# Make sure we don't let GNU as be added if we didn't want it.
if test x$with_gnu_as = xno ; then
  use_gnu_as=no
  noconfigdirs="$noconfigdirs gas"
fi

use_included_zlib=
# Make sure we don't let ZLIB be added if we didn't want it.
if test x$with_system_zlib = xyes ; then
  use_included_zlib=no
  noconfigdirs="$noconfigdirs zlib"
fi

# some tools are so dependent upon X11 that if we're not building with X, 
# it's not even worth trying to configure, much less build, that tool.

case ${with_x} in
  yes | "") ;; # the default value for this tree is that X11 is available
  no)
    skipdirs="${skipdirs} tk itcl libgui"
    # We won't be able to build gdbtk without X.
    enable_gdbtk=no 
    ;;
  *)  echo "*** bad value \"${with_x}\" for -with-x flag; ignored" 1>&2 ;;
esac

# Some are only suitable for cross toolchains.
# Remove these if host=target.
cross_only="target-libgloss target-newlib target-opcodes"

case $is_cross_compiler in
  no) skipdirs="${skipdirs} ${cross_only}" ;;
esac

# If both --with-headers and --with-libs are specified, default to
# --without-newlib.
if test x"${with_headers}" != x && test x"${with_headers}" != xno \
   && test x"${with_libs}" != x && test x"${with_libs}" != xno ; then
  if test x"${with_newlib}" = x ; then
    with_newlib=no
  fi
fi

# Recognize --with-newlib/--without-newlib.
case ${with_newlib} in
  no) skipdirs="${skipdirs} target-newlib" ;;
  yes) skipdirs=`echo " ${skipdirs} " | sed -e 's/ target-newlib / /'` ;;
esac

# Handle --enable-gold, --enable-ld.
# --disable-gold [--enable-ld]
#     Build only ld.  Default option.
# --enable-gold [--enable-ld]
#     Build both gold and ld.  Install gold as "ld.gold", install ld
#     as "ld.bfd" and "ld".
# --enable-gold=default [--enable-ld]
#     Build both gold and ld.  Install gold as "ld.gold" and "ld",
#     install ld as "ld.bfd".
# --enable-gold[=default] --disable-ld
#     Build only gold, which is then installed as both "ld.gold" and "ld".
# --enable-gold --enable-ld=default
#     Build both gold (installed as "ld.gold") and ld (installed as "ld"
#     and ld.bfd).
#     In other words, ld is default
# --enable-gold=default --enable-ld=default
#     Error.

default_ld=
AC_ARG_ENABLE(gold,
[AS_HELP_STRING([[--enable-gold[=ARG]]],
		[build gold @@<:@@ARG={default,yes,no}@@:>@@])],
ENABLE_GOLD=$enableval,
ENABLE_GOLD=no)
case "${ENABLE_GOLD}" in
  yes|default)
    # Check for ELF target.
    is_elf=no
    case "${target}" in
      *-*-elf* | *-*-sysv4* | *-*-unixware* | *-*-eabi* | hppa*64*-*-hpux* \
      | *-*-linux* | *-*-gnu* | frv-*-uclinux* | *-*-irix5* | *-*-irix6* \
      | *-*-netbsd* | *-*-openbsd* | *-*-freebsd* | *-*-dragonfly* \
      | *-*-solaris2* | *-*-nto* | *-*-nacl*)
        case "${target}" in
          *-*-linux*aout* | *-*-linux*oldld*)
            ;;
          *)
            is_elf=yes
            ;;
        esac
    esac

    if test "$is_elf" = "yes"; then
      # Check for target supported by gold.
      case "${target}" in
        i?86-*-* | x86_64-*-* | sparc*-*-* | powerpc*-*-* | arm*-*-* | tilegx*-*-*)
	  configdirs="$configdirs gold"
	  if test x${ENABLE_GOLD} = xdefault; then
	    default_ld=gold
	  fi
	  ENABLE_GOLD=yes
          ;;
      esac
    fi
    ;;
  no)
    ;;
  *)
    AC_MSG_ERROR([invalid --enable-gold argument])
    ;;
esac

AC_ARG_ENABLE(ld,
[AS_HELP_STRING([[--enable-ld[=ARG]]],
		[build ld @@<:@@ARG={default,yes,no}@@:>@@])],
ENABLE_LD=$enableval,
ENABLE_LD=yes)

case "${ENABLE_LD}" in
  default)
    if test x${default_ld} != x; then
      AC_MSG_ERROR([either gold or ld can be the default ld])
    fi
    ;;
  yes)
    ;;
  no)
    if test x${ENABLE_GOLD} != xyes; then
      AC_MSG_WARN([neither ld nor gold are enabled])
    fi
    configdirs=`echo " ${configdirs} " | sed -e 's/ ld / /'`
    ;;
  *)
    AC_MSG_ERROR([invalid --enable-ld argument])
    ;;
esac

# Configure extra directories which are host specific

case "${host}" in
  *-cygwin*)
    configdirs="$configdirs libtermcap" ;;
esac

# A target can indicate whether a language isn't supported for some reason.
# Only spaces may be used in this macro; not newlines or tabs.
unsupported_languages=

# Remove more programs from consideration, based on the host or 
# target this usually means that a port of the program doesn't
# exist yet.

case "${host}" in
  i[[3456789]]86-*-msdosdjgpp*)
    noconfigdirs="$noconfigdirs tcl tk itcl"
    ;;
esac


AC_ARG_ENABLE(libquadmath,
AS_HELP_STRING([--disable-libquadmath],
  [do not build libquadmath directory]),
ENABLE_LIBQUADMATH=$enableval,
ENABLE_LIBQUADMATH=yes)
if test "${ENABLE_LIBQUADMATH}" = "no" ; then
  noconfigdirs="$noconfigdirs target-libquadmath"
fi


AC_ARG_ENABLE(libquadmath-support,
AS_HELP_STRING([--disable-libquadmath-support],
  [disable libquadmath support for Fortran]),
ENABLE_LIBQUADMATH_SUPPORT=$enableval,
ENABLE_LIBQUADMATH_SUPPORT=yes)
enable_libquadmath_support=
if test "${ENABLE_LIBQUADMATH_SUPPORT}" = "no" ; then
  enable_libquadmath_support=no
fi


AC_ARG_ENABLE(libada,
[AS_HELP_STRING([--enable-libada], [build libada directory])],
ENABLE_LIBADA=$enableval,
ENABLE_LIBADA=yes)
if test "${ENABLE_LIBADA}" != "yes" ; then
  noconfigdirs="$noconfigdirs gnattools"
fi

AC_ARG_ENABLE(libssp,
[AS_HELP_STRING([--enable-libssp], [build libssp directory])],
ENABLE_LIBSSP=$enableval,
ENABLE_LIBSSP=yes)

AC_ARG_ENABLE(libstdcxx,
AS_HELP_STRING([--disable-libstdcxx],
  [do not build libstdc++-v3 directory]),
ENABLE_LIBSTDCXX=$enableval,
ENABLE_LIBSTDCXX=default)
[if test "${ENABLE_LIBSTDCXX}" = "no" ; then
  noconfigdirs="$noconfigdirs libstdc++-v3"
fi]

# Save it here so that, even in case of --enable-libgcj, if the Java
# front-end isn't enabled, we still get libgcj disabled.
libgcj_saved=$libgcj
case $enable_libgcj in
yes)
  # If we reset it here, it won't get added to noconfigdirs in the
  # target-specific build rules, so it will be forcibly enabled
  # (unless the Java language itself isn't enabled).
  libgcj=
  ;;
no)
  # Make sure we get it printed in the list of not supported target libs.
  # Don't disable libffi, though, other languages use it.
  noconfigdirs="$noconfigdirs `echo ${libgcj} | sed -e 's/target-libffi//'`"
  # Clear libgcj_saved so that even if java is enabled libffi won't be
  # built.
  libgcj_saved=
  ;;
esac

AC_ARG_ENABLE(static-libjava,
[AS_HELP_STRING([[--enable-static-libjava[=ARG]]],
		[build static libjava @@<:@@default=no@@:>@@])],
ENABLE_STATIC_LIBJAVA=$enableval,
ENABLE_STATIC_LIBJAVA=no)
enable_static_libjava=
if test "${ENABLE_STATIC_LIBJAVA}" = "yes" ; then
  enable_static_libjava=yes
fi

if test x$enable_static_libjava != xyes ; then
  EXTRA_CONFIGARGS_LIBJAVA=--disable-static
fi
AC_SUBST(EXTRA_CONFIGARGS_LIBJAVA)

# Disable libmudflap on some systems.
if test x$enable_libmudflap = x ; then
    case "${target}" in
    *-*-linux* | *-*-gnu* | *-*-k*bsd*-gnu | bfin*-*-uclinux* | *-*-kopensolaris*-gnu)
        # Enable libmudflap by default in GNU and friends.
	;;
    *-*-freebsd*)
        # Enable libmudflap by default in FreeBSD.
	;;
    *)
        # Disable it by default everywhere else.
	noconfigdirs="$noconfigdirs target-libmudflap"
	;;
    esac
fi

# Disable libgomp on non POSIX hosted systems.
if test x$enable_libgomp = x ; then
    # Enable libgomp by default on hosted POSIX systems.
    case "${target}" in
    *-*-linux* | *-*-gnu* | *-*-k*bsd*-gnu | *-*-kopensolaris*-gnu)
	;;
    *-*-netbsd* | *-*-freebsd* | *-*-openbsd* | *-*-dragonfly*)
	;;
    *-*-solaris2* | *-*-hpux11*)
	;;
    *-*-darwin* | *-*-aix*)
	;;
    *)
	noconfigdirs="$noconfigdirs target-libgomp"
	;;
    esac
fi

# Disable libatomic on unsupported systems.
if test -d ${srcdir}/libatomic; then
    if test x$enable_libatomic = x; then
	AC_MSG_CHECKING([for libatomic support])
	if (srcdir=${srcdir}/libatomic; \
		. ${srcdir}/configure.tgt; \
		test -n "$UNSUPPORTED")
	then
	    AC_MSG_RESULT([no])
	    noconfigdirs="$noconfigdirs target-libatomic"
	else
	    AC_MSG_RESULT([yes])
	fi
    fi
fi

# Disable libitm on unsupported systems.
if test -d ${srcdir}/libitm; then
    if test x$enable_libitm = x; then
	AC_MSG_CHECKING([for libitm support])
	if (srcdir=${srcdir}/libitm; \
		. ${srcdir}/configure.tgt; \
		test -n "$UNSUPPORTED")
	then
	    AC_MSG_RESULT([no])
	    noconfigdirs="$noconfigdirs target-libitm"
	else
	    AC_MSG_RESULT([yes])
	fi
    fi
fi

# Disable libsanitizer on unsupported systems.
if test -d ${srcdir}/libsanitizer; then
    if test x$enable_libsanitizer = x; then
	AC_MSG_CHECKING([for libsanitizer support])
	if (srcdir=${srcdir}/libsanitizer; \
		. ${srcdir}/configure.tgt; \
		test -n "$UNSUPPORTED")
	then
	    AC_MSG_RESULT([no])
	    noconfigdirs="$noconfigdirs target-libsanitizer"
	else
	    AC_MSG_RESULT([yes])
	fi
    fi
fi

# Disable libvtv on unsupported systems.
if test -d ${srcdir}/libvtv; then
    if test x$enable_libvtv = x; then
	AC_MSG_CHECKING([for libvtv support])
	if (srcdir=${srcdir}/libvtv; \
		. ${srcdir}/configure.tgt; \
		test "$VTV_SUPPORTED" != "yes")
	then
	    AC_MSG_RESULT([no])
	    noconfigdirs="$noconfigdirs target-libvtv"
	else
	    AC_MSG_RESULT([yes])
	fi
    fi
fi

# Disable libquadmath for some systems.
case "${target}" in
  avr-*-*)
    noconfigdirs="$noconfigdirs target-libquadmath"
    ;;
  # libquadmath is unused on AIX and libquadmath build process use of
  # LD_LIBRARY_PATH can break AIX bootstrap.
  powerpc-*-aix* | rs6000-*-aix*)
    noconfigdirs="$noconfigdirs target-libquadmath"
    ;;
esac

# Disable libssp for some systems.
case "${target}" in
  avr-*-*)
    # No hosted I/O support.
    noconfigdirs="$noconfigdirs target-libssp"
    ;;
  powerpc-*-aix* | rs6000-*-aix*)
    noconfigdirs="$noconfigdirs target-libssp"
    ;;
  rl78-*-*)
    # libssp uses a misaligned load to trigger a fault, but the RL78
    # doesn't fault for those - instead, it gives a build-time error
    # for explicit misaligned loads.
    noconfigdirs="$noconfigdirs target-libssp"
    ;;
esac

# Disable libstdc++-v3 for some systems.
# Allow user to override this if they pass --enable-libstdc++-v3
if test "${ENABLE_LIBSTDCXX}" = "default" ; then
  case "${target}" in
    *-*-vxworks*)
      # VxWorks uses the Dinkumware C++ library.
      noconfigdirs="$noconfigdirs target-libstdc++-v3"
      ;;
    arm*-wince-pe*)
      # the C++ libraries don't build on top of CE's C libraries
      noconfigdirs="$noconfigdirs target-libstdc++-v3"
      ;;
    avr-*-*)
      noconfigdirs="$noconfigdirs target-libstdc++-v3"
      ;;
  esac
fi

# Disable Fortran for some systems.
case "${target}" in
  mmix-*-*)
    # See <http://gcc.gnu.org/ml/gcc-patches/2004-11/msg00572.html>.
    unsupported_languages="$unsupported_languages fortran"
    ;;
esac

# Disable Java if libffi is not supported.
case "${target}" in
  aarch64-*-*)
    ;;
  alpha*-*-*)
    ;;
  arm*-*-*)
    ;;
  cris-*-*)
    ;;
  frv-*-*)
    ;;
  hppa*-*-linux*)
    ;;
  hppa*-*-hpux*)
    ;;
  i?86-*-*)
    ;;
  ia64*-*-*)
    ;;
  m32r*-*-*)
    ;;
  m68k-*-*)
    ;;
  mips*-*-rtems*)
    ;;
  mips*-*-linux*)
    ;;
  powerpc*-*-linux*)
    ;;
  powerpc-*-darwin*)
    ;;
  powerpc-*-aix* | rs6000-*-aix*)
    ;;
  powerpc-*-freebsd*)
    ;;
  powerpc64-*-freebsd*)
    ;;
  powerpc*-*-rtems*)
    ;;
  s390-*-* | s390x-*-*)
    ;;
  sh-*-* | sh[[34]]*-*-*)
    ;;
  sh64-*-* | sh5*-*-*)
    ;;
  sparc*-*-*)
    ;;
  x86_64-*-*)
    ;;
  *-*-*)
    unsupported_languages="$unsupported_languages java"
    ;;
esac

# Disable Java, libgcj or related libraries for some systems.
case "${target}" in
  powerpc-*-darwin*)
    ;;
  i[[3456789]]86-*-darwin*)
    ;;
  x86_64-*-darwin[[912]]*)
    ;;
  *-*-darwin*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
  *-*-netware*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
  *-*-rtems*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
  *-*-tpf*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
  *-*-uclinux*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
  *-*-vxworks*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
  alpha*-*-*vms*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
  arm-wince-pe)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
  arm*-*-symbianelf*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
  bfin-*-*)
    noconfigdirs="$noconfigdirs target-boehm-gc"
    ;;
  cris-*-* | crisv32-*-*)
    unsupported_languages="$unsupported_languages java"
    case "${target}" in
      *-*-linux*)
	;;
      *) # See PR46792 regarding target-libffi.
	noconfigdirs="$noconfigdirs target-libffi target-boehm-gc";;
    esac
    ;;
  hppa*64*-*-linux*)
    # In this case, it's because the hppa64-linux target is for
    # the kernel only at this point and has no libc, and thus no
    # headers, crt*.o, etc., all of which are needed by these.
    unsupported_languages="$unsupported_languages java"
    ;;
  hppa*64*-*-hpux*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
  hppa*-hp-hpux11*)
    ;;
  hppa*-*-hpux*)
    # According to Alexandre Oliva <aoliva@@redhat.com>, libjava won't
    # build on HP-UX 10.20.
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
  ia64*-*-*vms*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
  i[[3456789]]86-w64-mingw*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
  i[[3456789]]86-*-mingw*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
  x86_64-*-mingw*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
  mmix-*-*)
    noconfigdirs="$noconfigdirs target-libffi target-boehm-gc"
    ;;
  powerpc-*-aix*)
    # copied from rs6000-*-* entry
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
  rs6000-*-aix*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
  *-*-lynxos*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;; 
esac

# Disable libgo for some systems where it is known to not work.
# For testing, you can easily override this with --enable-libgo.
if test x$enable_libgo = x; then
    case "${target}" in
    *-*-darwin*)
	# PR 46986
	noconfigdirs="$noconfigdirs target-libgo"
	;;
    *-*-cygwin* | *-*-mingw*)
	noconfigdirs="$noconfigdirs target-libgo"
	;;
    *-*-aix*)
	noconfigdirs="$noconfigdirs target-libgo"
	;;
    esac
fi

# Default libgloss CPU subdirectory.
libgloss_dir="$target_cpu"

case "${target}" in
  sh*-*-pe|mips*-*-pe|*arm-wince-pe)
    libgloss_dir=wince
    ;;
  aarch64*-*-* )
    libgloss_dir=aarch64
    ;;
  arm*-*-*)
    libgloss_dir=arm
    ;;
  cris-*-* | crisv32-*-*)
    libgloss_dir=cris
    ;;
  hppa*-*-*)
    libgloss_dir=pa
    ;;
  i[[3456789]]86-*-*)
    libgloss_dir=i386
    ;;
  m68hc11-*-*|m6811-*-*|m68hc12-*-*|m6812-*-*)
    libgloss_dir=m68hc11
    ;;
  m68*-*-* | fido-*-*)
    libgloss_dir=m68k
    ;;
  mips*-*-*)
    libgloss_dir=mips
    ;;
  powerpc*-*-*)
    libgloss_dir=rs6000
    ;;
  sparc*-*-*)
    libgloss_dir=sparc
    ;;
esac

# Disable newlib and libgloss for various target OSes.
case "${target}" in
  alpha*-dec-osf*)
    noconfigdirs="$noconfigdirs target-newlib target-libgloss"
    ;;
  i[[3456789]]86-*-linux*)
    # This section makes it possible to build newlib natively on linux.
    # If we are using a cross compiler then don't configure newlib.
    if test x${is_cross_compiler} != xno ; then
      noconfigdirs="$noconfigdirs target-newlib"
    fi
    noconfigdirs="$noconfigdirs target-libgloss"
    # If we are not using a cross compiler, do configure newlib.
    # Note however, that newlib will only be configured in this situation
    # if the --with-newlib option has been given, because otherwise
    # 'target-newlib' will appear in skipdirs.
    ;;
  i[[3456789]]86-*-rdos*)
    noconfigdirs="$noconfigdirs target-newlib target-libgloss"
    ;;
  sh*-*-pe|mips*-*-pe|arm-wince-pe)
    noconfigdirs="$noconfigdirs target-newlib target-libgloss"
    ;;
  sparc-*-sunos4*)
    noconfigdirs="$noconfigdirs target-newlib target-libgloss"
    ;;
  *-*-aix*)
    noconfigdirs="$noconfigdirs target-newlib target-libgloss"
    ;;
  *-*-beos*)
    noconfigdirs="$noconfigdirs target-newlib target-libgloss"
    ;;
  *-*-chorusos)
    noconfigdirs="$noconfigdirs target-newlib target-libgloss"
    ;;
  *-*-dragonfly*)
    noconfigdirs="$noconfigdirs target-newlib target-libgloss"
    ;;
  *-*-freebsd*)
    noconfigdirs="$noconfigdirs target-newlib target-libgloss"
    ;;
  *-*-linux* | *-*-gnu* | *-*-k*bsd*-gnu | *-*-kopensolaris*-gnu)
    noconfigdirs="$noconfigdirs target-newlib target-libgloss"
    ;;
  *-*-lynxos*)
    noconfigdirs="$noconfigdirs target-newlib target-libgloss"
    ;; 
  *-*-mingw*)
    noconfigdirs="$noconfigdirs target-newlib target-libgloss"
    ;;
  *-*-netbsd*)
    noconfigdirs="$noconfigdirs target-newlib target-libgloss"
    ;;
  *-*-netware*)
    noconfigdirs="$noconfigdirs target-newlib target-libgloss"
    ;;
  *-*-tpf*)
    noconfigdirs="$noconfigdirs target-newlib target-libgloss"
    ;;
  *-*-uclinux*)
    noconfigdirs="$noconfigdirs target-newlib target-libgloss"
    ;;
  *-*-vxworks*)
    noconfigdirs="$noconfigdirs target-newlib target-libgloss"
    ;;
esac

case "${target}" in
  *-*-chorusos)
    ;;
  powerpc-*-darwin*)
    noconfigdirs="$noconfigdirs ld gas gdb gprof"
    noconfigdirs="$noconfigdirs sim target-rda"
    ;;
  i[[3456789]]86-*-darwin*)
    noconfigdirs="$noconfigdirs ld gprof"
    noconfigdirs="$noconfigdirs sim target-rda"
    ;;
  x86_64-*-darwin[[912]]*)
    noconfigdirs="$noconfigdirs ld gas gprof"
    noconfigdirs="$noconfigdirs sim target-rda"
    ;;
  *-*-darwin*)
    noconfigdirs="$noconfigdirs ld gas gdb gprof"
    noconfigdirs="$noconfigdirs sim target-rda"
    ;;
  *-*-dragonfly*)
    ;;
  *-*-freebsd*)
    if test "x$with_gmp" = x && test "x$with_gmp_dir" = x \
	&& test -f /usr/local/include/gmp.h; then
      with_gmp=/usr/local
    fi
    ;;
  *-*-kaos*)
    # Remove unsupported stuff on all kaOS configurations.
    noconfigdirs="$noconfigdirs target-libgloss"
    ;;
  *-*-netbsd*)
    ;;
  *-*-netware*)
    ;;
  *-*-rtems*)
    noconfigdirs="$noconfigdirs target-libgloss"
    ;;
    # The tpf target doesn't support gdb yet.
  *-*-tpf*)
    noconfigdirs="$noconfigdirs gdb tcl tk libgui itcl"
    ;;
  *-*-uclinux*)
    noconfigdirs="$noconfigdirs target-rda"
    ;;
  *-*-vxworks*)
    ;;
  alpha*-dec-osf*)
    # ld works, but does not support shared libraries.
    # gas doesn't generate exception information.
    noconfigdirs="$noconfigdirs gas ld"
    ;;
  alpha*-*-*vms*)
    noconfigdirs="$noconfigdirs gdb target-newlib target-libgloss"
    ;;
  alpha*-*-*)
    # newlib is not 64 bit ready
    noconfigdirs="$noconfigdirs target-newlib target-libgloss"
    ;;
  sh*-*-pe|mips*-*-pe|*arm-wince-pe)
    noconfigdirs="$noconfigdirs tcl tk itcl libgui sim"
    ;;
  arc-*-*|arceb-*-*)
    noconfigdirs="$noconfigdirs target-libgloss"
    ;;
  arm-*-pe*)
    noconfigdirs="$noconfigdirs target-libgloss"
    ;;
  arm-*-riscix*)
    noconfigdirs="$noconfigdirs ld target-libgloss"
    ;;
  avr-*-rtems*)
    ;;
  avr-*-*)
    if test x${with_avrlibc} != xno; then
      noconfigdirs="$noconfigdirs target-newlib target-libgloss"
    fi
    ;;
  c4x-*-* | tic4x-*-*)
    noconfigdirs="$noconfigdirs target-libgloss"
    ;;
  tic54x-*-*)
    noconfigdirs="$noconfigdirs target-libgloss gdb"
    ;;
  d10v-*-*)
    noconfigdirs="$noconfigdirs target-libgloss"
    ;;
  d30v-*-*)
    noconfigdirs="$noconfigdirs gdb"
    ;;
  fr30-*-elf*)
    noconfigdirs="$noconfigdirs gdb"
    ;;
  moxie-*-*)
    noconfigdirs="$noconfigdirs gprof"
    ;;
  h8300*-*-*)
    noconfigdirs="$noconfigdirs target-libgloss"
    ;;
  h8500-*-*)
    noconfigdirs="$noconfigdirs target-libgloss"
    ;;
  hppa1.1-*-osf* | hppa1.1-*-bsd* )
    ;;
  hppa*64*-*-linux*)
    ;;
  hppa*-*-linux*)
    ;;
  hppa*-*-*elf* | \
  hppa*-*-lites* | \
  hppa*-*-openbsd* | \
  hppa*64*-*-*)
    ;;
  hppa*-hp-hpux11*)
    noconfigdirs="$noconfigdirs ld"
    ;;
  hppa*-*-pro*)
    ;;
  hppa*-*-*)
    noconfigdirs="$noconfigdirs ld"
    ;;
  i960-*-*)
    noconfigdirs="$noconfigdirs gdb"
    ;;
  ia64*-*-elf*)
    # No gdb support yet.
    noconfigdirs="$noconfigdirs readline libgui itcl gdb"
    ;;
  ia64*-**-hpux*)
    # No ld support yet.
    noconfigdirs="$noconfigdirs libgui itcl ld"
    ;;
  ia64*-*-*vms*)
    # No ld support yet.
    noconfigdirs="$noconfigdirs libgui itcl ld"
    ;;
  i[[3456789]]86-w64-mingw*)
    ;;
  i[[3456789]]86-*-mingw*)
    target_configdirs="$target_configdirs target-winsup"
    ;;
  *-*-cygwin*)
    target_configdirs="$target_configdirs target-libtermcap target-winsup"
    noconfigdirs="$noconfigdirs target-libgloss"
    # always build newlib if winsup directory is present.
    if test -d "$srcdir/winsup/cygwin"; then
      skipdirs=`echo " ${skipdirs} " | sed -e 's/ target-newlib / /'`
    elif test -d "$srcdir/newlib"; then
      echo "Warning: winsup/cygwin is missing so newlib can't be built."
    fi
    ;;
  i[[3456789]]86-*-pe)
    noconfigdirs="$noconfigdirs target-libgloss"
    ;;
  i[[3456789]]86-*-sco3.2v5*)
    # The linker does not yet know about weak symbols in COFF,
    # and is not configured to handle mixed ELF and COFF.
    noconfigdirs="$noconfigdirs ld target-libgloss"
    ;;
  i[[3456789]]86-*-sco*)
    noconfigdirs="$noconfigdirs gprof target-libgloss"
    ;;
  i[[3456789]]86-*-solaris2* | x86_64-*-solaris2.1[[0-9]]*)
    noconfigdirs="$noconfigdirs target-libgloss"
    ;;
  i[[3456789]]86-*-sysv4*)
    noconfigdirs="$noconfigdirs target-libgloss"
    ;;
  i[[3456789]]86-*-beos*)
    noconfigdirs="$noconfigdirs gdb"
    ;;
  i[[3456789]]86-*-rdos*)
    noconfigdirs="$noconfigdirs gdb"
    ;;
  mmix-*-*)
    noconfigdirs="$noconfigdirs gdb"
    ;;
  mt-*-*)
    noconfigdirs="$noconfigdirs sim"
    ;;
  powerpc-*-aix*)
    # copied from rs6000-*-* entry
    noconfigdirs="$noconfigdirs gprof"
    ;;
  powerpc*-*-winnt* | powerpc*-*-pe*)
    target_configdirs="$target_configdirs target-winsup"
    noconfigdirs="$noconfigdirs gdb tcl tk target-libgloss itcl"
    # always build newlib.
    skipdirs=`echo " ${skipdirs} " | sed -e 's/ target-newlib / /'`
    ;;
    # This is temporary until we can link against shared libraries
  powerpcle-*-solaris*)
    noconfigdirs="$noconfigdirs gdb sim tcl tk itcl"
    ;;
  powerpc-*-beos*)
    noconfigdirs="$noconfigdirs gdb"
    ;;
  rs6000-*-lynxos*)
    noconfigdirs="$noconfigdirs gprof"
    ;;
  rs6000-*-aix*)
    noconfigdirs="$noconfigdirs gprof"
    ;;
  rs6000-*-*)
    noconfigdirs="$noconfigdirs gprof"
    ;;
  m68k-apollo-*)
    noconfigdirs="$noconfigdirs ld binutils gprof target-libgloss"
    ;;
  microblaze*)
    noconfigdirs="$noconfigdirs gprof"
    ;;
  mips*-sde-elf* | mips*-mti-elf*)
    if test x$with_newlib = xyes; then
      noconfigdirs="$noconfigdirs gprof"
    fi
    ;;
  mips*-*-irix5*)
    noconfigdirs="$noconfigdirs gprof target-libgloss"
    ;;
  mips*-*-irix6*)
    noconfigdirs="$noconfigdirs gprof target-libgloss"
    ;;
  mips*-*-bsd*)
    noconfigdirs="$noconfigdirs ld gas gprof target-libgloss"
    ;;
  mips*-*-linux*)
    ;;
  mips*-*-ultrix* | mips*-*-osf* | mips*-*-ecoff* | mips*-*-pe* \
  | mips*-*-irix* | mips*-*-lnews* | mips*-*-riscos*)
    noconfigdirs="$noconfigdirs ld gas gprof"
    ;;
  mips*-*-*)
    noconfigdirs="$noconfigdirs gprof"
    ;;
  sh-*-* | sh64-*-*)
    case "${target}" in
      sh*-*-elf)
         ;;
      *)
         noconfigdirs="$noconfigdirs target-libgloss" ;;
    esac
    ;;
  sparc-*-sunos4*)
    if test x${is_cross_compiler} = xno ; then
           use_gnu_ld=no
    fi
    ;;
  tic6x-*-*)
    noconfigdirs="$noconfigdirs sim"
    ;;
  tilepro-*-* | tilegx-*-*)
    noconfigdirs="$noconfigdirs sim"
    ;;
  v810-*-*)
    noconfigdirs="$noconfigdirs bfd binutils gas gdb ld opcodes target-libgloss"
    ;;
  vax-*-*)
    noconfigdirs="$noconfigdirs target-newlib target-libgloss"
    ;;
esac

# If we aren't building newlib, then don't build libgloss, since libgloss
# depends upon some newlib header files.
case "${noconfigdirs}" in
  *target-libgloss*) ;;
  *target-newlib*) noconfigdirs="$noconfigdirs target-libgloss" ;;
esac

# Work in distributions that contain no compiler tools, like Autoconf.
host_makefile_frag=/dev/null
if test -d ${srcdir}/config ; then
case "${host}" in
  i[[3456789]]86-*-msdosdjgpp*)
    host_makefile_frag="config/mh-djgpp"
    ;;
  *-cygwin*)
    ACX_CHECK_CYGWIN_CAT_WORKS
    host_makefile_frag="config/mh-cygwin"
    ;;
  *-mingw*)
    host_makefile_frag="config/mh-mingw"
    ;;
  hppa*-hp-hpux10*)
    host_makefile_frag="config/mh-pa-hpux10"
    ;;
  hppa*-hp-hpux*)
    host_makefile_frag="config/mh-pa"
    ;;
  hppa*-*)	
    host_makefile_frag="config/mh-pa"
    ;;
  *-*-darwin*)
    host_makefile_frag="config/mh-darwin"
    ;;
  powerpc-*-aix*)
    host_makefile_frag="config/mh-ppc-aix"
    ;;
  rs6000-*-aix*)
    host_makefile_frag="config/mh-ppc-aix"
    ;;
esac
fi

if test "${build}" != "${host}" ; then
  AR_FOR_BUILD=${AR_FOR_BUILD-ar}
  AS_FOR_BUILD=${AS_FOR_BUILD-as}
  CC_FOR_BUILD=${CC_FOR_BUILD-gcc}
  CXX_FOR_BUILD=${CXX_FOR_BUILD-g++}
  GCJ_FOR_BUILD=${GCJ_FOR_BUILD-gcj}
  GFORTRAN_FOR_BUILD=${GFORTRAN_FOR_BUILD-gfortran}
  GOC_FOR_BUILD=${GOC_FOR_BUILD-gccgo}
  DLLTOOL_FOR_BUILD=${DLLTOOL_FOR_BUILD-dlltool}
  LD_FOR_BUILD=${LD_FOR_BUILD-ld}
  NM_FOR_BUILD=${NM_FOR_BUILD-nm}
  RANLIB_FOR_BUILD=${RANLIB_FOR_BUILD-ranlib}
  WINDRES_FOR_BUILD=${WINDRES_FOR_BUILD-windres}
  WINDMC_FOR_BUILD=${WINDMC_FOR_BUILD-windmc}
else
  AR_FOR_BUILD="\$(AR)"
  AS_FOR_BUILD="\$(AS)"
  CC_FOR_BUILD="\$(CC)"
  CXX_FOR_BUILD="\$(CXX)"
  GCJ_FOR_BUILD="\$(GCJ)"
  GFORTRAN_FOR_BUILD="\$(GFORTRAN)"
  GOC_FOR_BUILD="\$(GOC)"
  DLLTOOL_FOR_BUILD="\$(DLLTOOL)"
  LD_FOR_BUILD="\$(LD)"
  NM_FOR_BUILD="\$(NM)"
  RANLIB_FOR_BUILD="\$(RANLIB)"
  WINDRES_FOR_BUILD="\$(WINDRES)"
  WINDMC_FOR_BUILD="\$(WINDMC)"
fi

AC_PROG_CC
AC_PROG_CXX

# We must set the default linker to the linker used by gcc for the correct
# operation of libtool.  If LD is not defined and we are using gcc, try to
# set the LD default to the ld used by gcc.
if test -z "$LD"; then
  if test "$GCC" = yes; then
    case $build in
    *-*-mingw*)
      gcc_prog_ld=`$CC -print-prog-name=ld 2>&1 | tr -d '\015'` ;;
    *)
      gcc_prog_ld=`$CC -print-prog-name=ld 2>&1` ;;
    esac
    case $gcc_prog_ld in
    # Accept absolute paths.
    [[\\/]* | [A-Za-z]:[\\/]*)]
      LD="$gcc_prog_ld" ;;
    esac
  fi
fi

# Check whether -static-libstdc++ -static-libgcc is supported.
have_static_libs=no
if test "$GCC" = yes; then
  saved_LDFLAGS="$LDFLAGS"

  LDFLAGS="$LDFLAGS -static-libstdc++ -static-libgcc"
  AC_MSG_CHECKING([whether g++ accepts -static-libstdc++ -static-libgcc])
  AC_LANG_PUSH(C++)
  AC_LINK_IFELSE([
#if (__GNUC__ < 4) || (__GNUC__ == 4 && __GNUC_MINOR__ < 5)
#error -static-libstdc++ not implemented
#endif
int main() {}],
    [AC_MSG_RESULT([yes]); have_static_libs=yes],
    [AC_MSG_RESULT([no])])
  AC_LANG_POP(C++)

  LDFLAGS="$saved_LDFLAGS"
fi

ACX_PROG_GNAT
ACX_PROG_CMP_IGNORE_INITIAL

AC_ARG_ENABLE([bootstrap],
[AS_HELP_STRING([--enable-bootstrap],
		[enable bootstrapping @@<:@@yes if native build@@:>@@])],,
enable_bootstrap=default)

# Issue errors and warnings for invalid/strange bootstrap combinations.
if test -r $srcdir/gcc/configure; then
  have_compiler=yes
else
  have_compiler=no
fi

case "$have_compiler:$host:$target:$enable_bootstrap" in
  *:*:*:no) ;;

  # Default behavior.  Enable bootstrap if we have a compiler
  # and we are in a native configuration.
  yes:$build:$build:default)
    enable_bootstrap=yes ;;

  *:*:*:default)
    enable_bootstrap=no ;;

  # We have a compiler and we are in a native configuration, bootstrap is ok
  yes:$build:$build:yes)
    ;;

  # Other configurations, but we have a compiler.  Assume the user knows
  # what he's doing.
  yes:*:*:yes)
    AC_MSG_WARN([trying to bootstrap a cross compiler])
    ;;

  # No compiler: if they passed --enable-bootstrap explicitly, fail
  no:*:*:yes)
    AC_MSG_ERROR([cannot bootstrap without a compiler]) ;;

  # Fail if wrong command line
  *)
    AC_MSG_ERROR([invalid option for --enable-bootstrap])
    ;;
esac

# Used for setting $lt_cv_objdir
_LT_CHECK_OBJDIR

# Check for GMP, MPFR and MPC
gmplibs="-lmpc -lmpfr -lgmp"
gmpinc=
have_gmp=no

# Specify a location for mpc
# check for this first so it ends up on the link line before mpfr.
AC_ARG_WITH(mpc,
[AS_HELP_STRING([--with-mpc=PATH],
		[specify prefix directory for installed MPC package.
		 Equivalent to --with-mpc-include=PATH/include
		 plus --with-mpc-lib=PATH/lib])])
AC_ARG_WITH(mpc-include,
[AS_HELP_STRING([--with-mpc-include=PATH],
		[specify directory for installed MPC include files])])
AC_ARG_WITH(mpc-lib,
[AS_HELP_STRING([--with-mpc-lib=PATH],
		[specify directory for the installed MPC library])])

if test "x$with_mpc" != x; then
  gmplibs="-L$with_mpc/lib $gmplibs"
  gmpinc="-I$with_mpc/include $gmpinc"
fi
if test "x$with_mpc_include" != x; then
  gmpinc="-I$with_mpc_include $gmpinc"
fi
if test "x$with_mpc_lib" != x; then
  gmplibs="-L$with_mpc_lib $gmplibs"
fi
if test "x$with_mpc$with_mpc_include$with_mpc_lib" = x && test -d ${srcdir}/mpc; then
  gmplibs='-L$$r/$(HOST_SUBDIR)/mpc/src/'"$lt_cv_objdir $gmplibs"
  gmpinc='-I$$s/mpc/src '"$gmpinc"
  # Do not test the mpc version.  Assume that it is sufficient, since
  # it is in the source tree, and the library has not been built yet
  # but it would be included on the link line in the version check below
  # hence making the test fail.
  have_gmp=yes
fi

# Specify a location for mpfr
# check for this first so it ends up on the link line before gmp.
AC_ARG_WITH(mpfr-dir,
[AS_HELP_STRING([--with-mpfr-dir=PATH], [this option has been REMOVED])],
[AC_MSG_ERROR([The --with-mpfr-dir=PATH option has been removed.
Use --with-mpfr=PATH or --with-mpfr-include=PATH plus --with-mpfr-lib=PATH])])

AC_ARG_WITH(mpfr,
[AS_HELP_STRING([--with-mpfr=PATH],
		[specify prefix directory for installed MPFR package.
		 Equivalent to --with-mpfr-include=PATH/include
		 plus --with-mpfr-lib=PATH/lib])])
AC_ARG_WITH(mpfr-include,
[AS_HELP_STRING([--with-mpfr-include=PATH],
		[specify directory for installed MPFR include files])])
AC_ARG_WITH(mpfr-lib,
[AS_HELP_STRING([--with-mpfr-lib=PATH],
		[specify directory for the installed MPFR library])])

if test "x$with_mpfr" != x; then
  gmplibs="-L$with_mpfr/lib $gmplibs"
  gmpinc="-I$with_mpfr/include $gmpinc"
fi
if test "x$with_mpfr_include" != x; then
  gmpinc="-I$with_mpfr_include $gmpinc"
fi
if test "x$with_mpfr_lib" != x; then
  gmplibs="-L$with_mpfr_lib $gmplibs"
fi
if test "x$with_mpfr$with_mpfr_include$with_mpfr_lib" = x && test -d ${srcdir}/mpfr; then
  # MPFR v3.1.0 moved the sources into a src sub-directory.
  if test -d ${srcdir}/mpfr/src; then
    gmplibs='-L$$r/$(HOST_SUBDIR)/mpfr/src/'"$lt_cv_objdir $gmplibs"
    gmpinc='-I$$r/$(HOST_SUBDIR)/mpfr/src -I$$s/mpfr/src '"$gmpinc"
    extra_mpc_mpfr_configure_flags='--with-mpfr-include=$$s/mpfr/src --with-mpfr-lib=$$r/$(HOST_SUBDIR)/mpfr/src/'"$lt_cv_objdir"
  else
    gmplibs='-L$$r/$(HOST_SUBDIR)/mpfr/'"$lt_cv_objdir $gmplibs"
    gmpinc='-I$$r/$(HOST_SUBDIR)/mpfr -I$$s/mpfr '"$gmpinc"
    extra_mpc_mpfr_configure_flags='--with-mpfr-include=$$s/mpfr --with-mpfr-lib=$$r/$(HOST_SUBDIR)/mpfr/'"$lt_cv_objdir"
  fi
  # Do not test the mpfr version.  Assume that it is sufficient, since
  # it is in the source tree, and the library has not been built yet
  # but it would be included on the link line in the version check below
  # hence making the test fail.
  have_gmp=yes
fi

# Specify a location for gmp
AC_ARG_WITH(gmp-dir,
[AS_HELP_STRING([--with-gmp-dir=PATH], [this option has been REMOVED])],
[AC_MSG_ERROR([The --with-gmp-dir=PATH option has been removed.
Use --with-gmp=PATH or --with-gmp-include=PATH plus --with-gmp-lib=PATH])])

AC_ARG_WITH(gmp,
[AS_HELP_STRING([--with-gmp=PATH],
		[specify prefix directory for the installed GMP package.
		 Equivalent to --with-gmp-include=PATH/include
		 plus --with-gmp-lib=PATH/lib])])
AC_ARG_WITH(gmp-include,
[AS_HELP_STRING([--with-gmp-include=PATH],
		[specify directory for installed GMP include files])])
AC_ARG_WITH(gmp-lib,
[AS_HELP_STRING([--with-gmp-lib=PATH],
		[specify directory for the installed GMP library])])


if test "x$with_gmp" != x; then
  gmplibs="-L$with_gmp/lib $gmplibs"
  gmpinc="-I$with_gmp/include $gmpinc"
fi
if test "x$with_gmp_include" != x; then
  gmpinc="-I$with_gmp_include $gmpinc"
fi
if test "x$with_gmp_lib" != x; then
  gmplibs="-L$with_gmp_lib $gmplibs"
fi
if test "x$with_gmp$with_gmp_include$with_gmp_lib" = x && test -d ${srcdir}/gmp; then
  gmplibs='-L$$r/$(HOST_SUBDIR)/gmp/'"$lt_cv_objdir $gmplibs"
  gmpinc='-I$$r/$(HOST_SUBDIR)/gmp -I$$s/gmp '"$gmpinc"
  extra_mpfr_configure_flags='--with-gmp-include=$$r/$(HOST_SUBDIR)/gmp --with-gmp-lib=$$r/$(HOST_SUBDIR)/gmp/'"$lt_cv_objdir"
  extra_mpc_gmp_configure_flags='--with-gmp-include=$$r/$(HOST_SUBDIR)/gmp --with-gmp-lib=$$r/$(HOST_SUBDIR)/gmp/'"$lt_cv_objdir"
  extra_isl_gmp_configure_flags='--with-gmp-builddir=$$r/$(HOST_SUBDIR)/gmp'
  # Do not test the gmp version.  Assume that it is sufficient, since
  # it is in the source tree, and the library has not been built yet
  # but it would be included on the link line in the version check below
  # hence making the test fail.
  have_gmp=yes
fi

if test -d ${srcdir}/gcc && test "x$have_gmp" = xno; then
  have_gmp=yes
  saved_CFLAGS="$CFLAGS"
  CFLAGS="$CFLAGS $gmpinc"
  # Check for the recommended and required versions of GMP.
  AC_MSG_CHECKING([for the correct version of gmp.h])
  AC_TRY_COMPILE([#include "gmp.h"],[
  #define GCC_GMP_VERSION_NUM(a,b,c) (((a) << 16L) | ((b) << 8) | (c))
  #define GCC_GMP_VERSION GCC_GMP_VERSION_NUM(__GNU_MP_VERSION,__GNU_MP_VERSION_MINOR,__GNU_MP_VERSION_PATCHLEVEL)
  #if GCC_GMP_VERSION < GCC_GMP_VERSION_NUM(4,2,3)
  choke me
  #endif
  ], [AC_TRY_COMPILE([#include <gmp.h>],[
  #define GCC_GMP_VERSION_NUM(a,b,c) (((a) << 16L) | ((b) << 8) | (c))
  #define GCC_GMP_VERSION GCC_GMP_VERSION_NUM(__GNU_MP_VERSION,__GNU_MP_VERSION_MINOR,__GNU_MP_VERSION_PATCHLEVEL)
  #if GCC_GMP_VERSION < GCC_GMP_VERSION_NUM(4,3,2)
  choke me
  #endif
  ], [AC_MSG_RESULT([yes])], [AC_MSG_RESULT([buggy but acceptable])])],
   [AC_MSG_RESULT([no]); have_gmp=no])

  # If we have GMP, check the MPFR version.
  if test x"$have_gmp" = xyes; then
    # Check for the recommended and required versions of MPFR.
    AC_MSG_CHECKING([for the correct version of mpfr.h])
    AC_TRY_COMPILE([#include <gmp.h>
    #include <mpfr.h>],[
    #if MPFR_VERSION < MPFR_VERSION_NUM(2,4,0)
    choke me
    #endif
    ], [AC_TRY_COMPILE([#include <gmp.h>
    #include <mpfr.h>],[
    #if MPFR_VERSION < MPFR_VERSION_NUM(2,4,2)
    choke me
    #endif
    ], [AC_MSG_RESULT([yes])], [AC_MSG_RESULT([buggy but acceptable])])],
     [AC_MSG_RESULT([no]); have_gmp=no])
  fi

  # Check for the MPC header version.
  if test x"$have_gmp" = xyes ; then
    # Check for the recommended and required versions of MPC.
    AC_MSG_CHECKING([for the correct version of mpc.h])
    AC_TRY_COMPILE([#include <mpc.h>],[
    #if MPC_VERSION < MPC_VERSION_NUM(0,8,0)
    choke me
    #endif
    ], [AC_TRY_COMPILE([#include <mpc.h>],[
    #if MPC_VERSION < MPC_VERSION_NUM(0,8,1)
    choke me
    #endif
    ], [AC_MSG_RESULT([yes])], [AC_MSG_RESULT([buggy but acceptable])])],
     [AC_MSG_RESULT([no]); have_gmp=no])
  fi

  # Now check the MPFR library.
  if test x"$have_gmp" = xyes; then
    saved_LIBS="$LIBS"
    LIBS="$LIBS $gmplibs"
    AC_MSG_CHECKING([for the correct version of the gmp/mpfr/mpc libraries])
    AC_TRY_LINK([#include <mpc.h>],[
    mpfr_t n;
    mpfr_t x;
    mpc_t c;
    int t;
    mpfr_init (n);
    mpfr_init (x);
    mpfr_atan2 (n, n, x, GMP_RNDN);
    mpfr_erfc (n, x, GMP_RNDN);
    mpfr_subnormalize (x, t, GMP_RNDN);
    mpfr_clear(n);
    mpfr_clear(x);
    mpc_init2 (c, 53);
    mpc_set_ui_ui (c, 1, 1, MPC_RNDNN);
    mpc_cosh (c, c, MPC_RNDNN);
    mpc_pow (c, c, c, MPC_RNDNN);
    mpc_acosh (c, c, MPC_RNDNN);
    mpc_clear (c);
    ], [AC_MSG_RESULT([yes])], [AC_MSG_RESULT([no]); have_gmp=no])
    LIBS="$saved_LIBS"
  fi

  CFLAGS="$saved_CFLAGS"

# The library versions listed in the error message below should match
# the HARD-minimums enforced above.
  if test x$have_gmp != xyes; then
    AC_MSG_ERROR([Building GCC requires GMP 4.2+, MPFR 2.4.0+ and MPC 0.8.0+.
Try the --with-gmp, --with-mpfr and/or --with-mpc options to specify
their locations.  Source code for these libraries can be found at
their respective hosting sites as well as at
ftp://gcc.gnu.org/pub/gcc/infrastructure/.  See also
http://gcc.gnu.org/install/prerequisites.html for additional info.  If
you obtained GMP, MPFR and/or MPC from a vendor distribution package,
make sure that you have installed both the libraries and the header
files.  They may be located in separate packages.])
  fi
fi

# Flags needed for both GMP, MPFR and/or MPC.
AC_SUBST(gmplibs)
AC_SUBST(gmpinc)
AC_SUBST(extra_mpfr_configure_flags)
AC_SUBST(extra_mpc_gmp_configure_flags)
AC_SUBST(extra_mpc_mpfr_configure_flags)
AC_SUBST(extra_isl_gmp_configure_flags)

# Allow host libstdc++ to be specified for static linking with PPL.
AC_ARG_WITH(host-libstdcxx,
[AS_HELP_STRING([--with-host-libstdcxx=L],
		[use linker arguments L to link with libstdc++
		 when linking with PPL])])

case $with_host_libstdcxx in
  no|yes)
    AC_MSG_ERROR([-with-host-libstdcxx needs an argument])
    ;;
esac

# Libraries to use for stage1 or when not bootstrapping.
AC_ARG_WITH(stage1-libs,
[AS_HELP_STRING([--with-stage1-libs=LIBS], [libraries for stage1])],
[if test "$withval" = "no" -o "$withval" = "yes"; then
   stage1_libs=
 else
   stage1_libs=$withval
 fi],
[stage1_libs=$with_host_libstdcxx])
AC_SUBST(stage1_libs)

# Linker flags to use for stage1 or when not bootstrapping.
AC_ARG_WITH(stage1-ldflags,
[AS_HELP_STRING([--with-stage1-ldflags=FLAGS], [linker flags for stage1])],
[if test "$withval" = "no" -o "$withval" = "yes"; then
   stage1_ldflags=
 else
   stage1_ldflags=$withval
 fi],
[stage1_ldflags=
 # In stage 1, default to linking libstdc++ and libgcc statically with GCC
 # if supported.  But if the user explicitly specified the libraries to use,
 # trust that they are doing what they want.
 if test "$stage1_libs" = "" -a "$have_static_libs" = yes; then
   stage1_ldflags="-static-libstdc++ -static-libgcc"
 fi])
AC_SUBST(stage1_ldflags)

# Libraries to use for stage2 and later builds.  This defaults to the
# argument passed to --with-host-libstdcxx.
AC_ARG_WITH(boot-libs,
[AS_HELP_STRING([--with-boot-libs=LIBS], [libraries for stage2 and later])],
[if test "$withval" = "no" -o "$withval" = "yes"; then
   poststage1_libs=
 else
   poststage1_libs=$withval
 fi],
[poststage1_libs=$with_host_libstdcxx])
AC_SUBST(poststage1_libs)

# Linker flags to use for stage2 and later builds.
AC_ARG_WITH(boot-ldflags,
[AS_HELP_STRING([--with-boot-ldflags=FLAGS],
		[linker flags for stage2 and later])],
[if test "$withval" = "no" -o "$withval" = "yes"; then
   poststage1_ldflags=
 else
   poststage1_ldflags=$withval
 fi],
[poststage1_ldflags=
 # In stages 2 and 3, default to linking libstdc++ and libgcc
 # statically.  But if the user explicitly specified the libraries to
 # use, trust that they are doing what they want.
 if test "$poststage1_libs" = ""; then
   poststage1_ldflags="-static-libstdc++ -static-libgcc"
 fi])
AC_SUBST(poststage1_ldflags)

# GCC GRAPHITE dependences, ISL and CLOOG which in turn requires ISL.
# Basic setup is inlined here, actual checks are in config/cloog.m4 and
# config/isl.m4

AC_ARG_WITH(cloog,
  [AS_HELP_STRING(
    [--with-cloog=PATH],
    [Specify prefix directory for the installed CLooG-ISL package.
     Equivalent to --with-cloog-include=PATH/include
     plus --with-cloog-lib=PATH/lib])])
AC_ARG_WITH(isl,
  [AS_HELP_STRING(
   [--with-isl=PATH],
   [Specify prefix directory for the installed ISL package.
    Equivalent to --with-isl-include=PATH/include
    plus --with-isl-lib=PATH/lib])])

# Treat either --without-cloog or --without-isl as a request to disable
# GRAPHITE support and skip all following checks.
if test "x$with_isl" != "xno" &&
   test "x$with_cloog" != "xno"; then
  # Check for ISL
  dnl Provide configure switches and initialize islinc & isllibs
  dnl with user input.
  ISL_INIT_FLAGS
  dnl The versions of ISL that work for Graphite
  ISL_CHECK_VERSION(0,11)
  if test "${gcc_cv_isl}" = no ; then
    ISL_CHECK_VERSION(0,12)
  fi
  dnl Only execute fail-action, if ISL has been requested.
  ISL_IF_FAILED([
    AC_MSG_ERROR([Unable to find a usable ISL.  See config.log for details.])])

  if test "x$gcc_cv_isl" != "xno"; then
    # Check for CLOOG
    dnl Provide configure switches and initialize clooginc & clooglibs
    dnl with user input.
    CLOOG_INIT_FLAGS
    dnl The versions of CLooG that work for Graphite.
    CLOOG_CHECK_VERSION(0,17,0)
    if test "${gcc_cv_cloog}" = no ; then
      CLOOG_CHECK_VERSION(0,18,0)
    fi

    dnl Only execute fail-action, if CLooG has been requested.
    CLOOG_IF_FAILED([
      AC_MSG_ERROR([Unable to find a usable CLooG.  See config.log for details.])])
  fi
fi

# If either the ISL or the CLooG check failed, disable builds of in-tree
# variants of both
if test "x$with_isl" = xno ||
   test "x$with_cloog" = xno ||
   test "x$gcc_cv_cloog" = xno ||
   test "x$gcc_cv_isl" = xno; then
  noconfigdirs="$noconfigdirs cloog isl"
  islinc=
  clooginc=
  clooglibs=
fi

AC_SUBST(islinc)
AC_SUBST(clooglibs)
AC_SUBST(clooginc)


# Check for LTO support.
AC_ARG_ENABLE(lto,
[AS_HELP_STRING([--enable-lto], [enable link time optimization support])],
enable_lto=$enableval,
enable_lto=yes; default_enable_lto=yes)

ACX_ELF_TARGET_IFELSE([# ELF platforms build the lto-plugin always.
  build_lto_plugin=yes
],[if test x"$default_enable_lto" = x"yes" ; then
    case $target in
      *-apple-darwin9* | *-cygwin* | *-mingw*) ;;
      # On other non-ELF platforms, LTO has yet to be validated.
      *) enable_lto=no ;;
    esac
  else
  # Apart from ELF platforms, only Windows and Darwin support LTO so far.
  # It would also be nice to check the binutils support, but we don't
  # have gcc_GAS_CHECK_FEATURE available here.  For now, we'll just
  # warn during gcc/ subconfigure; unless you're bootstrapping with
  # -flto it won't be needed until after installation anyway.
    case $target in
      *-cygwin* | *-mingw* | *-apple-darwin*) ;;
      *) if test x"$enable_lto" = x"yes"; then
	AC_MSG_ERROR([LTO support is not enabled for this target.])
        fi
      ;;
    esac
  fi
  # Among non-ELF, only Windows platforms support the lto-plugin so far.
  # Build it unless LTO was explicitly disabled.
  case $target in
    *-cygwin* | *-mingw*) build_lto_plugin=$enable_lto ;;
    *) ;;
  esac
])


# By default, C and C++ are the only stage 1 languages.
stage1_languages=,c,

# Target libraries that we bootstrap.
bootstrap_target_libs=,target-libgcc,

# Figure out what language subdirectories are present.
# Look if the user specified --enable-languages="..."; if not, use
# the environment variable $LANGUAGES if defined. $LANGUAGES might
# go away some day.
# NB:  embedded tabs in this IF block -- do not untabify
if test -d ${srcdir}/gcc; then
  if test x"${enable_languages+set}" != xset; then
    if test x"${LANGUAGES+set}" = xset; then
      enable_languages="${LANGUAGES}"
        echo configure.in: warning: setting LANGUAGES is deprecated, use --enable-languages instead 1>&2
    else
      enable_languages=all
    fi
  else
    if test x"${enable_languages}" = x ||
       test x"${enable_languages}" = xyes;
       then
      echo configure.in: --enable-languages needs at least one language argument 1>&2
      exit 1
    fi
  fi
  enable_languages=`echo "${enable_languages}" | sed -e 's/[[ 	,]][[ 	,]]*/,/g' -e 's/,$//'`

  # 'f95' is the old name for the 'fortran' language. We issue a warning
  # and make the substitution.
  case ,${enable_languages}, in
    *,f95,*)
      echo configure.in: warning: 'f95' as language name is deprecated, use 'fortran' instead 1>&2
      enable_languages=`echo "${enable_languages}" | sed -e 's/f95/fortran/g'`
      ;;
  esac

  # If bootstrapping, C++ must be enabled.
  case ",$enable_languages,:$enable_bootstrap" in
    *,c++,*:*) ;;
    *:yes)
      if test -f ${srcdir}/gcc/cp/config-lang.in; then
        enable_languages="${enable_languages},c++"
      else
        AC_MSG_ERROR([bootstrapping requires c++ sources])
      fi
      ;;
  esac

  # First scan to see if an enabled language requires some other language.
  # We assume that a given config-lang.in will list all the language
  # front ends it requires, even if some are required indirectly.
  for lang_frag in ${srcdir}/gcc/*/config-lang.in .. ; do
    case ${lang_frag} in
      ..) ;;
      # The odd quoting in the next line works around
      # an apparent bug in bash 1.12 on linux.
      ${srcdir}/gcc/[[*]]/config-lang.in) ;;
      *)
        # From the config-lang.in, get $language, $lang_requires, and
        # $lang_requires_boot_languages.
        language=
        lang_requires=
        lang_requires_boot_languages=
        . ${lang_frag}
        for other in ${lang_requires} ${lang_requires_boot_languages}; do
          case ,${enable_languages}, in
	    *,$other,*) ;;
	    *,all,*) ;;
	    *,$language,*)
	      echo " \`$other' language required by \`$language'; enabling" 1>&2
	      enable_languages="${enable_languages},${other}"
	      ;;
	  esac
        done
	for other in ${lang_requires_boot_languages} ; do
	  if test "$other" != "c"; then
	    case ,${enable_stage1_languages}, in
	      *,$other,*) ;;
	      *,all,*) ;;
	      *)
		case ,${enable_languages}, in
		  *,$language,*)
		    echo " '$other' language required by '$language' in stage 1; enabling" 1>&2
		    enable_stage1_languages="$enable_stage1_languages,${other}"
		    ;;
		esac
		;;
	    esac
          fi
        done
        ;;
    esac
  done

  new_enable_languages=,c,

  # If LTO is enabled, add the LTO front end.
  extra_host_libiberty_configure_flags=
  if test "$enable_lto" = "yes" ; then
    case ,${enable_languages}, in
      *,lto,*) ;;
      *) enable_languages="${enable_languages},lto" ;;
    esac
    if test "${build_lto_plugin}" = "yes" ; then
      configdirs="$configdirs lto-plugin"
      extra_host_libiberty_configure_flags=--enable-shared
    fi
  fi
  AC_SUBST(extra_host_libiberty_configure_flags)

  missing_languages=`echo ",$enable_languages," | sed -e s/,all,/,/ -e s/,c,/,/ `
  potential_languages=,c,

  enabled_target_libs=
  disabled_target_libs=

  for lang_frag in ${srcdir}/gcc/*/config-lang.in .. ; do
    case ${lang_frag} in
      ..) ;;
      # The odd quoting in the next line works around
      # an apparent bug in bash 1.12 on linux.
      ${srcdir}/gcc/[[*]]/config-lang.in) ;;
      *)
        # From the config-lang.in, get $language, $target_libs, 
        # $lang_dirs, $boot_language, and $build_by_default
        language=
        target_libs=
        lang_dirs=
        subdir_requires=
        boot_language=no
        build_by_default=yes
        . ${lang_frag}
        if test x${language} = x; then
          echo "${lang_frag} doesn't set \$language." 1>&2
          exit 1
        fi

	if test "$language" = "c++"; then
	  boot_language=yes
	fi

        add_this_lang=no
        case ,${enable_languages}, in
          *,${language},*)
            # Language was explicitly selected; include it
	    # unless it is C, which is enabled by default.
	    if test "$language" != "c"; then
	      add_this_lang=yes
	    fi
            ;;
          *,all,*)
            # 'all' was selected, select it if it is a default language
	    if test "$language" != "c"; then
	      add_this_lang=${build_by_default}
	    fi
            ;;
        esac

        # Disable languages that need other directories if these aren't available.
	for i in $subdir_requires; do
	  test -f "$srcdir/gcc/$i/config-lang.in" && continue
	  case ,${enable_languages}, in
            *,${language},*)
              # Specifically requested language; tell them.
              AC_MSG_ERROR([The gcc/$i directory contains parts of $language but is missing])
              ;;
            *)
              # Silently disable.
              add_this_lang=unsupported
              ;;
          esac
	done

        # Disable Ada if no preexisting GNAT is available.
        case ,${enable_languages},:${language}:${have_gnat} in
          *,${language},*:ada:no)
            # Specifically requested language; tell them.
            AC_MSG_ERROR([GNAT is required to build $language])
            ;;
          *:ada:no)
            # Silently disable.
            add_this_lang=unsupported
            ;;
        esac

	# Disable a language that is unsupported by the target.
	case " $unsupported_languages " in
	  *" $language "*)
	    add_this_lang=unsupported
	    ;;
	esac

	case $add_this_lang in
	  unsupported)
            # Remove language-dependent dirs.
	    disabled_target_libs="$disabled_target_libs $target_libs"
	    noconfigdirs="$noconfigdirs $lang_dirs"
	    ;;
	  no)
            # Remove language-dependent dirs; still show language as supported.
	    disabled_target_libs="$disabled_target_libs $target_libs"
	    noconfigdirs="$noconfigdirs $lang_dirs"
            potential_languages="${potential_languages}${language},"
	    ;;
          yes)
	    new_enable_languages="${new_enable_languages}${language},"
            potential_languages="${potential_languages}${language},"
	    missing_languages=`echo "$missing_languages" | sed "s/,$language,/,/"`
	    enabled_target_libs="$enabled_target_libs $target_libs"
	    case "${boot_language}:,$enable_stage1_languages," in
	      yes:* | *:*,$language,* | *:*,yes, | *:*,all,)
		# Add to (comma-separated) list of stage 1 languages.
		case ",$stage1_languages," in
		  *,$language,* | ,yes, | ,all,) ;;
		  *) stage1_languages="${stage1_languages}${language}," ;;
		esac
		# We need to bootstrap any supporting libraries.
		bootstrap_target_libs="${bootstrap_target_libs}${target_libs},"
		;;
	    esac
	    ;;
        esac
        ;;
    esac
  done

  # Add target libraries which are only needed for disabled languages
  # to noconfigdirs.
  if test -n "$disabled_target_libs"; then
    for dir in $disabled_target_libs; do
      case " $enabled_target_libs " in
      *" ${dir} "*) ;;
      *) noconfigdirs="$noconfigdirs $dir" ;;
      esac
    done
  fi

  AC_ARG_ENABLE(stage1-languages,
  [AS_HELP_STRING([[--enable-stage1-languages[=all]]],
		  [choose additional languages to build during
		  stage1.  Mostly useful for compiler development])],
  [case ,${enable_stage1_languages}, in
    ,no,|,,)
      # Set it to something that will have no effect in the loop below
      enable_stage1_languages=c ;;
    ,yes,)
      enable_stage1_languages=`echo $new_enable_languages | \
	sed -e "s/^,//" -e "s/,$//" ` ;;
    *,all,*)
      enable_stage1_languages=`echo ,$enable_stage1_languages, | \
	sed -e "s/,all,/$new_enable_languages/" -e "s/^,//" -e "s/,$//" ` ;;
  esac

  # Add "good" languages from enable_stage1_languages to stage1_languages,
  # while "bad" languages go in missing_languages.  Leave no duplicates.
  for i in `echo $enable_stage1_languages | sed 's/,/ /g' `; do
    case $potential_languages in
      *,$i,*)
        case $stage1_languages in
          *,$i,*) ;;
          *) stage1_languages="$stage1_languages$i," ;;
        esac ;;
      *)
        case $missing_languages in
          *,$i,*) ;;
          *) missing_languages="$missing_languages$i," ;;
        esac ;;
     esac
  done])

  # Remove leading/trailing commas that were added for simplicity
  potential_languages=`echo "$potential_languages" | sed -e "s/^,//" -e "s/,$//"`
  missing_languages=`echo "$missing_languages" | sed -e "s/^,//" -e "s/,$//"`
  stage1_languages=`echo "$stage1_languages" | sed -e "s/^,//" -e "s/,$//"`
  new_enable_languages=`echo "$new_enable_languages" | sed -e "s/^,//" -e "s/,$//"`

  if test "x$missing_languages" != x; then
    AC_MSG_ERROR([
The following requested languages could not be built: ${missing_languages}
Supported languages are: ${potential_languages}])
  fi
  if test "x$new_enable_languages" != "x$enable_languages"; then
    echo The following languages will be built: ${new_enable_languages}
    enable_languages="$new_enable_languages"
  fi

  AC_SUBST(stage1_languages)
  ac_configure_args=`echo " $ac_configure_args" | sed -e "s/ '--enable-languages=[[^ ]]*'//g" -e "s/$/ '--enable-languages="$enable_languages"'/" `
fi

# Handle --disable-<component> generically.
for dir in $configdirs $build_configdirs $target_configdirs ; do
  dirname=`echo $dir | sed -e s/target-//g -e s/build-//g -e s/-/_/g`
  varname=`echo $dirname | sed -e s/+/_/g`
  if eval test x\${enable_${varname}} "=" xno ; then
    noconfigdirs="$noconfigdirs $dir"
  fi
done

# Check for Boehm's garbage collector
AC_ARG_ENABLE(objc-gc,
[AS_HELP_STRING([--enable-objc-gc],
		[enable use of Boehm's garbage collector with the
		 GNU Objective-C runtime])],
[case ,${enable_languages},:${enable_objc_gc}:${noconfigdirs} in
  *,objc,*:*:yes:*target-boehm-gc*)
    AC_MSG_ERROR([Boehm's garbage collector was requested yet not supported in this configuration])
    ;;
esac])

# Make sure we only build Boehm's garbage collector if required.
case ,${enable_languages},:${enable_objc_gc} in
  *,objc,*:yes)
    # Keep target-boehm-gc if requested for Objective-C.
    ;;
  *)
    # Otherwise remove target-boehm-gc depending on target-libjava.
    if echo " ${noconfigdirs} " | grep "target-libjava" >/dev/null 2>&1; then
      noconfigdirs="$noconfigdirs target-boehm-gc"
    fi
    ;;
esac

# Disable libitm, libsanitizer, libvtv if we're not building C++
case ,${enable_languages}, in
  *,c++,*) ;;
  *)
    noconfigdirs="$noconfigdirs target-libitm target-libsanitizer target-libvtv"
    ;;
esac

# Remove the entries in $skipdirs and $noconfigdirs from $configdirs,
# $build_configdirs and $target_configdirs.
# If we have the source for $noconfigdirs entries, add them to $notsupp.

notsupp=""
for dir in . $skipdirs $noconfigdirs ; do
  dirname=`echo $dir | sed -e s/target-//g -e s/build-//g`
  if test $dir != .  && echo " ${configdirs} " | grep " ${dir} " >/dev/null 2>&1; then
    configdirs=`echo " ${configdirs} " | sed -e "s/ ${dir} / /"`
    if test -r $srcdir/$dirname/configure ; then
      if echo " ${skipdirs} " | grep " ${dir} " >/dev/null 2>&1; then
	true
      else
	notsupp="$notsupp $dir"
      fi
    fi
  fi
  if test $dir != .  && echo " ${build_configdirs} " | grep " ${dir} " >/dev/null 2>&1; then
    build_configdirs=`echo " ${build_configdirs} " | sed -e "s/ ${dir} / /"`
    if test -r $srcdir/$dirname/configure ; then
      if echo " ${skipdirs} " | grep " ${dir} " >/dev/null 2>&1; then
	true
      else
	notsupp="$notsupp $dir"
      fi
    fi
  fi
  if test $dir != . && echo " ${target_configdirs} " | grep " ${dir} " >/dev/null 2>&1; then
    target_configdirs=`echo " ${target_configdirs} " | sed -e "s/ ${dir} / /"`
    if test -r $srcdir/$dirname/configure ; then
      if echo " ${skipdirs} " | grep " ${dir} " >/dev/null 2>&1; then
	true
      else
	notsupp="$notsupp $dir"
      fi
    fi
  fi
done

# Quietly strip out all directories which aren't configurable in this tree.
# This relies on all configurable subdirectories being autoconfiscated, which
# is now the case.
build_configdirs_all="$build_configdirs"
build_configdirs=
for i in ${build_configdirs_all} ; do
  j=`echo $i | sed -e s/build-//g` 
  if test -f ${srcdir}/$j/configure ; then
    build_configdirs="${build_configdirs} $i"
  fi
done

configdirs_all="$configdirs"
configdirs=
for i in ${configdirs_all} ; do
  if test -f ${srcdir}/$i/configure ; then
    configdirs="${configdirs} $i"
  fi
done

target_configdirs_all="$target_configdirs"
target_configdirs=
for i in ${target_configdirs_all} ; do
  j=`echo $i | sed -e s/target-//g` 
  if test -f ${srcdir}/$j/configure ; then
    target_configdirs="${target_configdirs} $i"
  fi
done

# Produce a warning message for the subdirs we can't configure.
# This isn't especially interesting in the Cygnus tree, but in the individual
# FSF releases, it's important to let people know when their machine isn't
# supported by the one or two programs in a package.

if test -n "${notsupp}" && test -z "${norecursion}" ; then
  # If $appdirs is non-empty, at least one of those directories must still
  # be configured, or we error out.  (E.g., if the gas release supports a
  # specified target in some subdirs but not the gas subdir, we shouldn't
  # pretend that all is well.)
  if test -n "$appdirs" ; then
    for dir in $appdirs ; do
      if test -r $dir/Makefile.in ; then
	if echo " ${configdirs} " | grep " ${dir} " >/dev/null 2>&1; then
	  appdirs=""
	  break
	fi
	if echo " ${target_configdirs} " | grep " target-${dir} " >/dev/null 2>&1; then
	  appdirs=""
	  break
	fi
      fi
    done
    if test -n "$appdirs" ; then
      echo "*** This configuration is not supported by this package." 1>&2
      exit 1
    fi
  fi
  # Okay, some application will build, or we don't care to check.  Still
  # notify of subdirs not getting built.
  echo "*** This configuration is not supported in the following subdirectories:" 1>&2
  echo "    ${notsupp}" 1>&2
  echo "    (Any other directories should still work fine.)" 1>&2
fi

case "$host" in
  *msdosdjgpp*)
    enable_gdbtk=no ;;
esac

# To find our prefix, in gcc_cv_tool_prefix.
ACX_TOOL_DIRS

copy_dirs=

AC_ARG_WITH([build-sysroot], 
  [AS_HELP_STRING([--with-build-sysroot=SYSROOT],
		  [use sysroot as the system root during the build])],
  [if test x"$withval" != x ; then
     SYSROOT_CFLAGS_FOR_TARGET="--sysroot=$withval"
   fi],
  [SYSROOT_CFLAGS_FOR_TARGET=])
AC_SUBST(SYSROOT_CFLAGS_FOR_TARGET)

AC_ARG_WITH([debug-prefix-map],
  [AS_HELP_STRING([--with-debug-prefix-map='A=B C=D ...'],
		  [map A to B, C to D ... in debug information])],
  [if test x"$withval" != x; then
     DEBUG_PREFIX_CFLAGS_FOR_TARGET=
     for debug_map in $withval; do
       DEBUG_PREFIX_CFLAGS_FOR_TARGET="$DEBUG_PREFIX_CFLAGS_FOR_TARGET -fdebug-prefix-map=$debug_map"
     done
   fi],
  [DEBUG_PREFIX_CFLAGS_FOR_TARGET=])
AC_SUBST(DEBUG_PREFIX_CFLAGS_FOR_TARGET)

# During gcc bootstrap, if we use some random cc for stage1 then CFLAGS
# might be empty or "-g".  We don't require a C++ compiler, so CXXFLAGS
# might also be empty (or "-g", if a non-GCC C++ compiler is in the path).
# We want to ensure that TARGET libraries (which we know are built with
# gcc) are built with "-O2 -g", so include those options when setting
# CFLAGS_FOR_TARGET and CXXFLAGS_FOR_TARGET.
if test "x$CFLAGS_FOR_TARGET" = x; then
  CFLAGS_FOR_TARGET=$CFLAGS
  case " $CFLAGS " in
    *" -O2 "*) ;;
    *) CFLAGS_FOR_TARGET="-O2 $CFLAGS_FOR_TARGET" ;;
  esac
  case " $CFLAGS " in
    *" -g "* | *" -g3 "*) ;;
    *) CFLAGS_FOR_TARGET="-g $CFLAGS_FOR_TARGET" ;;
  esac
fi
AC_SUBST(CFLAGS_FOR_TARGET)

if test "x$CXXFLAGS_FOR_TARGET" = x; then
  CXXFLAGS_FOR_TARGET=$CXXFLAGS
  case " $CXXFLAGS " in
    *" -O2 "*) ;;
    *) CXXFLAGS_FOR_TARGET="-O2 $CXXFLAGS_FOR_TARGET" ;;
  esac
  case " $CXXFLAGS " in
    *" -g "* | *" -g3 "*) ;;
    *) CXXFLAGS_FOR_TARGET="-g $CXXFLAGS_FOR_TARGET" ;;
  esac
fi
AC_SUBST(CXXFLAGS_FOR_TARGET)

AC_SUBST(LDFLAGS_FOR_TARGET)

# Handle --with-headers=XXX.  If the value is not "yes", the contents of
# the named directory are copied to $(tooldir)/sys-include.
if test x"${with_headers}" != x && test x"${with_headers}" != xno ; then
  if test x${is_cross_compiler} = xno ; then
    echo 1>&2 '***' --with-headers is only supported when cross compiling
    exit 1
  fi
  if test x"${with_headers}" != xyes ; then
    x=${gcc_cv_tool_prefix}
    copy_dirs="${copy_dirs} ${with_headers} $x/${target_noncanonical}/sys-include"
  fi
fi

# Handle --with-libs=XXX.  If the value is not "yes", the contents of
# the name directories are copied to $(tooldir)/lib.  Multiple directories
# are permitted.
if test x"${with_libs}" != x && test x"${with_libs}" != xno ; then
  if test x${is_cross_compiler} = xno ; then
    echo 1>&2 '***' --with-libs is only supported when cross compiling
    exit 1
  fi
  if test x"${with_libs}" != xyes ; then
    # Copy the libraries in reverse order, so that files in the first named
    # library override files in subsequent libraries.
    x=${gcc_cv_tool_prefix}
    for l in ${with_libs}; do
      copy_dirs="$l $x/${target_noncanonical}/lib ${copy_dirs}"
    done
  fi
fi

# Set with_gnu_as, with_gnu_ld, and with_system_zlib as appropriate.
#
# This is done by determining whether or not the appropriate directory
# is available, and by checking whether or not specific configurations
# have requested that this magic not happen.
# 
# The command line options always override the explicit settings in 
# configure.in, and the settings in configure.in override this magic.
#
# If the default for a toolchain is to use GNU as and ld, and you don't 
# want to do that, then you should use the --without-gnu-as and
# --without-gnu-ld options for the configure script.  Similarly, if
# the default is to use the included zlib and you don't want to do that,
# you should use the --with-system-zlib option for the configure script.

if test x${use_gnu_as} = x &&
   echo " ${configdirs} " | grep " gas " > /dev/null 2>&1 ; then
  with_gnu_as=yes
  extra_host_args="$extra_host_args --with-gnu-as"
fi

if test x${use_gnu_ld} = x &&
   echo " ${configdirs} " | egrep " (go)?ld " > /dev/null 2>&1 ; then
  with_gnu_ld=yes
  extra_host_args="$extra_host_args --with-gnu-ld"
fi

if test x${use_included_zlib} = x &&
   echo " ${configdirs} " | grep " zlib " > /dev/null 2>&1 ; then
  :
else
  with_system_zlib=yes
  extra_host_args="$extra_host_args --with-system-zlib"
fi

# If using newlib, add --with-newlib to the extra_host_args so that gcc/configure
# can detect this case.

if test x${with_newlib} != xno && echo " ${target_configdirs} " | grep " target-newlib " > /dev/null 2>&1 ; then
  with_newlib=yes
  extra_host_args="$extra_host_args --with-newlib"
fi

# Handle ${copy_dirs}
set fnord ${copy_dirs}
shift
while test $# != 0 ; do
  if test -f $2/COPIED && test x"`cat $2/COPIED`" = x"$1" ; then
    :
  else
    echo Copying $1 to $2

    # Use the install script to create the directory and all required
    # parent directories.
    if test -d $2 ; then
      :
    else
      echo >config.temp
      ${srcdir}/install-sh -c -m 644 config.temp $2/COPIED
    fi

    # Copy the directory, assuming we have tar.
    # FIXME: Should we use B in the second tar?  Not all systems support it.
    (cd $1; tar -cf - .) | (cd $2; tar -xpf -)

    # It is the responsibility of the user to correctly adjust all
    # symlinks.  If somebody can figure out how to handle them correctly
    # here, feel free to add the code.

    echo $1 > $2/COPIED
  fi
  shift; shift
done

# Determine a target-dependent exec_prefix that the installed
# gcc will search in.  Keep this list sorted by triplet, with
# the *-*-osname triplets last.
md_exec_prefix=
case "${target}" in
  i[[34567]]86-pc-msdosdjgpp*)
    md_exec_prefix=/dev/env/DJDIR/bin
    ;;
  *-*-hpux* | \
  *-*-nto-qnx* | \
  *-*-solaris2*)
    md_exec_prefix=/usr/ccs/bin
    ;;
esac

extra_arflags_for_target=
extra_nmflags_for_target=
extra_ranlibflags_for_target=
target_makefile_frag=/dev/null
case "${target}" in
  spu-*-*)
    target_makefile_frag="config/mt-spu"
    ;;
  mips*-sde-elf* | mips*-mti-elf*)
    target_makefile_frag="config/mt-sde"
    ;;
  mipsisa*-*-elfoabi*)
    target_makefile_frag="config/mt-mips-elfoabi"
    ;;
  mips*-*-*linux* | mips*-*-gnu*)
    target_makefile_frag="config/mt-mips-gnu"
    ;;
  nios2-*-elf*)
    target_makefile_frag="config/mt-nios2-elf"
    ;;
  *-*-linux* | *-*-gnu* | *-*-k*bsd*-gnu | *-*-kopensolaris*-gnu)
    target_makefile_frag="config/mt-gnu"
    ;;
  *-*-aix4.[[3456789]]* | *-*-aix[[56789]].*)
    # nm and ar from AIX 4.3 and above require -X32_64 flag to all ar and nm 
    # commands to handle both 32-bit and 64-bit objects.  These flags are
    # harmless if we're using GNU nm or ar.
    extra_arflags_for_target=" -X32_64"
    extra_nmflags_for_target=" -B -X32_64"
    ;;
esac

alphaieee_frag=/dev/null
case $target in
  alpha*-*-*)
    # This just makes sure to use the -mieee option to build target libs.
    # This should probably be set individually by each library.
    alphaieee_frag="config/mt-alphaieee"
    ;;
esac

# If --enable-target-optspace always use -Os instead of -O2 to build
# the target libraries, similarly if it is not specified, use -Os
# on selected platforms.
ospace_frag=/dev/null
case "${enable_target_optspace}:${target}" in
  yes:*)
    ospace_frag="config/mt-ospace"
    ;;
  :d30v-*)
    ospace_frag="config/mt-d30v"
    ;;
  :m32r-* | :d10v-* | :fr30-*)
    ospace_frag="config/mt-ospace"
    ;;
  no:* | :*)
    ;;
  *)
    echo "*** bad value \"${enable_target_optspace}\" for --enable-target-optspace flag; ignored" 1>&2
    ;;
esac

# Some systems (e.g., one of the i386-aix systems the gas testers are
# using) don't handle "\$" correctly, so don't use it here.
tooldir='${exec_prefix}'/${target_noncanonical}
build_tooldir=${tooldir}

# Create a .gdbinit file which runs the one in srcdir
# and tells GDB to look there for source files.

if test -r ${srcdir}/.gdbinit ; then
  case ${srcdir} in
    .) ;;
    *) cat > ./.gdbinit <<EOF
# ${NO_EDIT}
dir ${srcdir}
dir .
source ${srcdir}/.gdbinit
EOF
    ;;
  esac
fi

# Make sure that the compiler is able to generate an executable.  If it
# can't, we are probably in trouble.  We don't care whether we can run the
# executable--we might be using a cross compiler--we only care whether it
# can be created.  At this point the main configure script has set CC.
we_are_ok=no
echo "int main () { return 0; }" > conftest.c
${CC} -o conftest ${CFLAGS} ${CPPFLAGS} ${LDFLAGS} conftest.c
if test $? = 0 ; then
  if test -s conftest || test -s conftest.exe ; then
    we_are_ok=yes
  fi
fi 
case $we_are_ok in
  no)
    echo 1>&2 "*** The command '${CC} -o conftest ${CFLAGS} ${CPPFLAGS} ${LDFLAGS} conftest.c' failed."
    echo 1>&2 "*** You must set the environment variable CC to a working compiler."
    rm -f conftest*
    exit 1
    ;;
esac
rm -f conftest*

# Decide which environment variable is used to find dynamic libraries.
case "${host}" in
  *-*-hpux*) RPATH_ENVVAR=SHLIB_PATH ;;
  *-*-darwin*) RPATH_ENVVAR=DYLD_LIBRARY_PATH ;;
  *-*-mingw* | *-*-cygwin ) RPATH_ENVVAR=PATH ;;
  *) RPATH_ENVVAR=LD_LIBRARY_PATH ;;
esac

# On systems where the dynamic library environment variable is PATH,
# gcc/ will put dynamic libraries into a subdirectory to avoid adding
# built executables to PATH.
if test "$RPATH_ENVVAR" = PATH; then
  GCC_SHLIB_SUBDIR=/shlib
else
  GCC_SHLIB_SUBDIR=
fi

# Record target_configdirs and the configure arguments for target and
# build configuration in Makefile.
target_configdirs=`echo "${target_configdirs}" | sed -e 's/target-//g'`
build_configdirs=`echo "${build_configdirs}" | sed -e 's/build-//g'`

# If we are building libgomp, bootstrap it.
if echo " ${target_configdirs} " | grep " libgomp " > /dev/null 2>&1 ; then
  bootstrap_target_libs=${bootstrap_target_libs}target-libgomp,
fi

# If we are building libsanitizer, bootstrap it.
if echo " ${target_configdirs} " | grep " libsanitizer " > /dev/null 2>&1 ; then
  bootstrap_target_libs=${bootstrap_target_libs}target-libsanitizer,
fi

# If we are building libvtv, bootstrap it.
if echo " ${target_configdirs} " | grep " libvtv " > /dev/null 2>&1 ; then
  bootstrap_target_libs=${bootstrap_target_libs}target-libvtv,
fi

# Determine whether gdb needs tk/tcl or not.
# Use 'maybe' since enable_gdbtk might be true even if tk isn't available
# and in that case we want gdb to be built without tk.  Ugh!
# In fact I believe gdb is the *only* package directly dependent on tk,
# so we should be able to put the 'maybe's in unconditionally and
# leave out the maybe dependencies when enable_gdbtk is false.  I'm not
# 100% sure that that's safe though.

gdb_tk="maybe-all-tcl maybe-all-tk maybe-all-itcl maybe-all-libgui"
case "$enable_gdbtk" in
  no)
    GDB_TK="" ;;
  yes)
    GDB_TK="${gdb_tk}" ;;
  *)
    # Only add the dependency on gdbtk when GDBtk is part of the gdb
    # distro.  Eventually someone will fix this and move Insight, nee
    # gdbtk to a separate directory.
    if test -d ${srcdir}/gdb/gdbtk ; then
      GDB_TK="${gdb_tk}"
    else
      GDB_TK=""
    fi
    ;;
esac
CONFIGURE_GDB_TK=`echo ${GDB_TK} | sed s/-all-/-configure-/g`
INSTALL_GDB_TK=`echo ${GDB_TK} | sed s/-all-/-install-/g`

# Strip out unwanted targets.

# While at that, we remove Makefiles if we were started for recursive
# configuration, so that the top-level Makefile reconfigures them,
# like we used to do when configure itself was recursive.

# Loop over modules.  We used to use the "$extrasub" feature from Autoconf
# but now we're fixing up the Makefile ourselves with the additional
# commands passed to AC_CONFIG_FILES.  Use separate variables
# extrasub-{build,host,target} not because there is any reason to split
# the substitutions up that way, but only to remain below the limit of
# 99 commands in a script, for HP-UX sed.
# Do not nest @@if/@@endif pairs, because configure will not warn you at all.

case "$enable_bootstrap:$ENABLE_GOLD: $configdirs :,$stage1_languages," in
  yes:yes:*\ gold\ *:*,c++,*) ;;
  yes:yes:*\ gold\ *:*)
    AC_MSG_ERROR([in a combined tree, bootstrapping with --enable-gold requires c++ in stage1_languages])
    ;;
esac

# Adjust the toplevel makefile according to whether bootstrap was selected.
case $enable_bootstrap in
  yes)
    bootstrap_suffix=bootstrap
    BUILD_CONFIG=bootstrap-debug
    ;;
  no)
    bootstrap_suffix=no-bootstrap
    BUILD_CONFIG=
    ;;
esac

AC_MSG_CHECKING(for default BUILD_CONFIG)

AC_ARG_WITH([build-config],
  [AS_HELP_STRING([--with-build-config='NAME NAME2...'],
		  [use config/NAME.mk build configuration])],
  [case $with_build_config in
   yes) with_build_config= ;;
   no) with_build_config= BUILD_CONFIG= ;;
   esac])

if test "x${with_build_config}" != x; then
  BUILD_CONFIG=$with_build_config
else
  case $BUILD_CONFIG in
  bootstrap-debug)
    if echo "int f (void) { return 0; }" > conftest.c &&
       ${CC} -c conftest.c &&
       mv conftest.o conftest.o.g0 &&
       ${CC} -c -g conftest.c &&
       mv conftest.o conftest.o.g &&
       ${srcdir}/contrib/compare-debug conftest.o.g0 conftest.o.g > /dev/null 2>&1; then
      :
    else
      BUILD_CONFIG=
    fi
    rm -f conftest.c conftest.o conftest.o.g0 conftest.o.g
    ;;
  esac
fi
AC_MSG_RESULT($BUILD_CONFIG)
AC_SUBST(BUILD_CONFIG)

extrasub_build=
for module in ${build_configdirs} ; do
  if test -z "${no_recursion}" \
     && test -f ${build_subdir}/${module}/Makefile; then
    echo 1>&2 "*** removing ${build_subdir}/${module}/Makefile to force reconfigure"
    rm -f ${build_subdir}/${module}/Makefile
  fi
  extrasub_build="$extrasub_build
/^@@if build-$module\$/d
/^@@endif build-$module\$/d
/^@@if build-$module-$bootstrap_suffix\$/d
/^@@endif build-$module-$bootstrap_suffix\$/d"
done
extrasub_host=
for module in ${configdirs} ; do
  if test -z "${no_recursion}"; then
    for file in stage*-${module}/Makefile prev-${module}/Makefile ${module}/Makefile; do
      if test -f ${file}; then
	echo 1>&2 "*** removing ${file} to force reconfigure"
	rm -f ${file}
      fi
    done
  fi
  extrasub_host="$extrasub_host
/^@@if $module\$/d
/^@@endif $module\$/d
/^@@if $module-$bootstrap_suffix\$/d
/^@@endif $module-$bootstrap_suffix\$/d"
done
extrasub_target=
for module in ${target_configdirs} ; do
  if test -z "${no_recursion}" \
     && test -f ${target_subdir}/${module}/Makefile; then
    echo 1>&2 "*** removing ${target_subdir}/${module}/Makefile to force reconfigure"
    rm -f ${target_subdir}/${module}/Makefile
  fi

  # We only bootstrap target libraries listed in bootstrap_target_libs.
  case $bootstrap_target_libs in
    *,target-$module,*) target_bootstrap_suffix=$bootstrap_suffix ;;
    *) target_bootstrap_suffix=no-bootstrap ;;
  esac

  extrasub_target="$extrasub_target
/^@@if target-$module\$/d
/^@@endif target-$module\$/d
/^@@if target-$module-$target_bootstrap_suffix\$/d
/^@@endif target-$module-$target_bootstrap_suffix\$/d"
done

# Do the final fixup along with target modules.
extrasub_target="$extrasub_target
/^@@if /,/^@@endif /d"

# Create the serialization dependencies.  This uses a temporary file.

AC_ARG_ENABLE([serial-configure],
[AS_HELP_STRING([[--enable-serial-[{host,target,build}-]configure]],
		[force sequential configuration of
		 sub-packages for the host, target or build
		 machine, or all sub-packages])])

case ${enable_serial_configure} in
  yes)
    enable_serial_build_configure=yes
    enable_serial_host_configure=yes
    enable_serial_target_configure=yes
    ;;
esac

# These force 'configure's to be done one at a time, to avoid problems
# with contention over a shared config.cache.
rm -f serdep.tmp
echo '# serdep.tmp' > serdep.tmp
olditem=
test "x${enable_serial_build_configure}" = xyes &&
for item in ${build_configdirs} ; do
  case ${olditem} in
    "") ;;
    *) echo "configure-build-${item}: configure-build-${olditem}" >> serdep.tmp ;;
  esac
  olditem=${item}
done
olditem=
test "x${enable_serial_host_configure}" = xyes &&
for item in ${configdirs} ; do
  case ${olditem} in
    "") ;;
    *) echo "configure-${item}: configure-${olditem}" >> serdep.tmp ;;
  esac
  olditem=${item}
done
olditem=
test "x${enable_serial_target_configure}" = xyes &&
for item in ${target_configdirs} ; do
  case ${olditem} in
    "") ;;
    *) echo "configure-target-${item}: configure-target-${olditem}" >> serdep.tmp ;;
  esac
  olditem=${item}
done
serialization_dependencies=serdep.tmp
AC_SUBST_FILE(serialization_dependencies)

# Base args.  Strip norecursion, cache-file, srcdir, host, build,
# target, nonopt, and variable assignments.  These are the ones we
# might not want to pass down to subconfigures.  The exception being
# --cache-file=/dev/null, which is used to turn off the use of cache
# files altogether, and which should be passed on to subconfigures.
# Also strip program-prefix, program-suffix, and program-transform-name,
# so that we can pass down a consistent program-transform-name.
baseargs=
tbaseargs=
keep_next=no
skip_next=no
eval "set -- $ac_configure_args"
for ac_arg
do
  if test X"$skip_next" = X"yes"; then
    skip_next=no
    continue
  fi
  if test X"$keep_next" = X"yes"; then
    case $ac_arg in
      *\'*)
	ac_arg=`echo "$ac_arg" | sed "s/'/'\\\\\\\\''/g"` ;;
    esac
    baseargs="$baseargs '$ac_arg'"
    tbaseargs="$tbaseargs '$ac_arg'"
    keep_next=no
    continue
  fi

  # Handle separated arguments.  Based on the logic generated by
  # autoconf 2.59.
  case $ac_arg in
    *=* | --config-cache | -C | -disable-* | --disable-* \
      | -enable-* | --enable-* | -gas | --g* | -nfp | --nf* \
      | -q | -quiet | --q* | -silent | --sil* | -v | -verb* \
      | -with-* | --with-* | -without-* | --without-* | --x)
      separate_arg=no
      ;;
    -*)
      separate_arg=yes
      ;;
    *)
      separate_arg=no
      ;;
  esac

  skip_targ=no
  case $ac_arg in
changequote(,)
  --with-* | --without-*)
    libopt=`echo "$ac_arg" | sed -e 's,^--[^-_]*[-_],,' -e 's,=.*$,,'`

    case $libopt in
    *[-_]include)
      lib=`echo "$libopt" | sed 's,[-_]include$,,'`
      ;;
    *[-_]lib)
      lib=`echo "$libopt" | sed 's,[-_]lib$,,'`
      ;;
    *)
      lib=$libopt
      ;;
    esac
changequote([,])

    case $lib in
    mpc | mpfr | gmp | cloog)
      # If we're processing --with-$lib, --with-$lib-include or
      # --with-$lib-lib, for one of the libs above, and target is
      # different from host, don't pass the current argument to any
      # target library's configure.
      if test x$is_cross_compiler = xyes; then
        skip_targ=yes
      fi
      ;;
    esac
    ;;
  esac

  case "$ac_arg" in
    --cache-file=/dev/null | \
    -cache-file=/dev/null )
      # Handled here to avoid the test to skip args below.
      baseargs="$baseargs '$ac_arg'"
      tbaseargs="$tbaseargs '$ac_arg'"
      # Assert: $separate_arg should always be no.
      keep_next=$separate_arg
      ;;
    --no*)
      continue
      ;;
    --c* | \
    --sr* | \
    --ho* | \
    --bu* | \
    --t* | \
    --program-* | \
    -cache_file* | \
    -srcdir* | \
    -host* | \
    -build* | \
    -target* | \
    -program-prefix* | \
    -program-suffix* | \
    -program-transform-name* )
      skip_next=$separate_arg
      continue
      ;;
    -*)
      # An option.  Add it.
      case $ac_arg in
	*\'*)
	  ac_arg=`echo "$ac_arg" | sed "s/'/'\\\\\\\\''/g"` ;;
      esac
      baseargs="$baseargs '$ac_arg'"
      if test X"$skip_targ" = Xno; then
        tbaseargs="$tbaseargs '$ac_arg'"
      fi
      keep_next=$separate_arg
      ;;
    *)
      # Either a variable assignment, or a nonopt (triplet).  Don't
      # pass it down; let the Makefile handle this.
      continue
      ;;
  esac
done
# Remove the initial space we just introduced and, as these will be
# expanded by make, quote '$'.
baseargs=`echo "x$baseargs" | sed -e 's/^x *//' -e 's,\\$,$$,g'`

# Add in --program-transform-name, after --program-prefix and
# --program-suffix have been applied to it.  Autoconf has already
# doubled dollar signs and backslashes in program_transform_name; we want
# the backslashes un-doubled, and then the entire thing wrapped in single
# quotes, because this will be expanded first by make and then by the shell. 
# Also, because we want to override the logic in subdir configure scripts to
# choose program_transform_name, replace any s,x,x, with s,y,y,.
sed -e "s,\\\\\\\\,\\\\,g; s,','\\\\'',g; s/s,x,x,/s,y,y,/" <<EOF_SED > conftestsed.out
${program_transform_name}
EOF_SED
gcc_transform_name=`cat conftestsed.out`
rm -f conftestsed.out
baseargs="$baseargs --program-transform-name='${gcc_transform_name}'"
tbaseargs="$tbaseargs --program-transform-name='${gcc_transform_name}'"
if test "$silent" = yes; then
  baseargs="$baseargs --silent"
  tbaseargs="$tbaseargs --silent"
fi
baseargs="$baseargs --disable-option-checking"
tbaseargs="$tbaseargs --disable-option-checking"

# Record and document user additions to sub configure arguments.
AC_ARG_VAR([build_configargs],
	   [additional configure arguments for build directories])
AC_ARG_VAR([host_configargs],
	   [additional configure arguments for host directories])
AC_ARG_VAR([target_configargs],
	   [additional configure arguments for target directories])

# For the build-side libraries, we just need to pretend we're native,
# and not use the same cache file.  Multilibs are neither needed nor
# desired.
build_configargs="$build_configargs --cache-file=../config.cache ${baseargs}"

# For host modules, accept cache file option, or specification as blank.
case "${cache_file}" in
"") # empty
  cache_file_option="" ;;
/* | [[A-Za-z]]:[[\\/]]* ) # absolute path
  cache_file_option="--cache-file=${cache_file}" ;;
*) # relative path
  cache_file_option="--cache-file=../${cache_file}" ;;
esac

# Host dirs don't like to share a cache file either, horribly enough.
# This seems to be due to autoconf 2.5x stupidity.
host_configargs="$host_configargs --cache-file=./config.cache ${extra_host_args} ${baseargs}"

target_configargs="$target_configargs ${tbaseargs}"

# Passing a --with-cross-host argument lets the target libraries know
# whether they are being built with a cross-compiler or being built
# native.  However, it would be better to use other mechanisms to make the
# sorts of decisions they want to make on this basis.  Please consider
# this option to be deprecated.  FIXME.
if test x${is_cross_compiler} = xyes ; then
  target_configargs="--with-cross-host=${host_noncanonical} ${target_configargs}"
fi

# Default to --enable-multilib.
if test x${enable_multilib} = x ; then
  target_configargs="--enable-multilib ${target_configargs}"
fi

# Pass --with-newlib if appropriate.  Note that target_configdirs has
# changed from the earlier setting of with_newlib.
if test x${with_newlib} != xno && echo " ${target_configdirs} " | grep " newlib " > /dev/null 2>&1 && test -d ${srcdir}/newlib ; then
  target_configargs="--with-newlib ${target_configargs}"
fi

# Different target subdirs use different values of certain variables
# (notably CXX).  Worse, multilibs use *lots* of different values.
# Worse yet, autoconf 2.5x makes some of these 'precious', meaning that
# it doesn't automatically accept command-line overrides of them.
# This means it's not safe for target subdirs to share a cache file,
# which is disgusting, but there you have it.  Hopefully this can be
# fixed in future.  It's still worthwhile to use a cache file for each
# directory.  I think.

# Pass the appropriate --build, --host, --target and --cache-file arguments.
# We need to pass --target, as newer autoconf's requires consistency
# for target_alias and gcc doesn't manage it consistently.
target_configargs="--cache-file=./config.cache ${target_configargs}"

FLAGS_FOR_TARGET=
case " $target_configdirs " in
 *" newlib "*)
  case " $target_configargs " in
  *" --with-newlib "*)
   case "$target" in
    *-cygwin*)
      FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -L$$r/$(TARGET_SUBDIR)/winsup/cygwin -isystem $$s/winsup/cygwin/include'
      ;;
   esac

   # If we're not building GCC, don't discard standard headers.
   if test -d ${srcdir}/gcc; then
     FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -nostdinc'

     if test "${build}" != "${host}"; then
       # On Canadian crosses, CC_FOR_TARGET will have already been set
       # by `configure', so we won't have an opportunity to add -Bgcc/
       # to it.  This is right: we don't want to search that directory
       # for binaries, but we want the header files in there, so add
       # them explicitly.
       FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -isystem $$r/$(HOST_SUBDIR)/gcc/include -isystem $$r/$(HOST_SUBDIR)/gcc/include-fixed'

       # Someone might think of using the pre-installed headers on
       # Canadian crosses, in case the installed compiler is not fully
       # compatible with the compiler being built.  In this case, it
       # would be better to flag an error than risking having
       # incompatible object files being constructed.  We can't
       # guarantee that an error will be flagged, but let's hope the
       # compiler will do it, when presented with incompatible header
       # files.
     fi
   fi

   case "${target}-${is_cross_compiler}" in
   i[[3456789]]86-*-linux*-no)
      # Here host == target, so we don't need to build gcc,
      # so we don't want to discard standard headers.
      FLAGS_FOR_TARGET=`echo " $FLAGS_FOR_TARGET " | sed -e 's/ -nostdinc / /'`
      ;;
   *)
      # If we're building newlib, use its generic headers last, but search
      # for any libc-related directories first (so make it the last -B
      # switch).
      FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -B$$r/$(TARGET_SUBDIR)/newlib/ -isystem $$r/$(TARGET_SUBDIR)/newlib/targ-include -isystem $$s/newlib/libc/include'

      # If we're building libgloss, find the startup file, simulator library
      # and linker script.
      case " $target_configdirs " in
	*" libgloss "*)
	# Look for startup file, simulator library and maybe linker script.
	FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -B$$r/$(TARGET_SUBDIR)/libgloss/'"$libgloss_dir"
	# Look for libnosys.a in case the target needs it.
	FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -L$$r/$(TARGET_SUBDIR)/libgloss/libnosys'
	# Most targets have the linker script in the source directory.
	FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -L$$s/libgloss/'"$libgloss_dir"
	;;
      esac
      ;;
   esac
   ;;
  esac
  ;;
esac

case "$target" in
  x86_64-*mingw* | *-w64-mingw*)
  # MinGW-w64 does not use newlib, nor does it use winsup. It may,
  # however, use a symlink named 'mingw' in ${prefix} .
    FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -L${prefix}/${target}/lib -L${prefix}/mingw/lib -isystem ${prefix}/${target}/include -isystem ${prefix}/mingw/include'
    ;;
  *-mingw*)
  # MinGW can't be handled as Cygwin above since it does not use newlib.
    FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -L$$r/$(TARGET_SUBDIR)/winsup/mingw -L$$r/$(TARGET_SUBDIR)/winsup/w32api/lib -isystem $$s/winsup/mingw/include -isystem $$s/winsup/w32api/include'
    ;;
esac

# Allow the user to override the flags for
# our build compiler if desired.
if test x"${build}" = x"${host}" ; then
  CFLAGS_FOR_BUILD=${CFLAGS_FOR_BUILD-${CFLAGS}}
  CXXFLAGS_FOR_BUILD=${CXXFLAGS_FOR_BUILD-${CXXFLAGS}}
  LDFLAGS_FOR_BUILD=${LDFLAGS_FOR_BUILD-${LDFLAGS}}
fi

# On Canadian crosses, we'll be searching the right directories for
# the previously-installed cross compiler, so don't bother to add
# flags for directories within the install tree of the compiler
# being built; programs in there won't even run.
if test "${build}" = "${host}" && test -d ${srcdir}/gcc; then
  # Search for pre-installed headers if nothing else fits.
  FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -B$(build_tooldir)/bin/ -B$(build_tooldir)/lib/ -isystem $(build_tooldir)/include -isystem $(build_tooldir)/sys-include'
fi

if test "x${use_gnu_ld}" = x &&
   echo " ${configdirs} " | grep " ld " > /dev/null ; then
  # Arrange for us to find uninstalled linker scripts.
  FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -L$$r/$(HOST_SUBDIR)/ld'
fi

# Search for other target-specific linker scripts and such.
case "${target}" in
  mep*)
    FLAGS_FOR_TARGET="$FLAGS_FOR_TARGET -mlibrary"
    ;;
esac

# Makefile fragments.
for frag in host_makefile_frag target_makefile_frag alphaieee_frag ospace_frag;
do
  eval fragval=\$$frag
  if test $fragval != /dev/null; then
    eval $frag=${srcdir}/$fragval
  fi
done
AC_SUBST_FILE(host_makefile_frag)
AC_SUBST_FILE(target_makefile_frag)
AC_SUBST_FILE(alphaieee_frag)
AC_SUBST_FILE(ospace_frag)

# Miscellanea: directories, flags, etc.
AC_SUBST(RPATH_ENVVAR)
AC_SUBST(GCC_SHLIB_SUBDIR)
AC_SUBST(tooldir)
AC_SUBST(build_tooldir)
AC_SUBST(CONFIGURE_GDB_TK)
AC_SUBST(GDB_TK)
AC_SUBST(INSTALL_GDB_TK)

# Build module lists & subconfigure args.
AC_SUBST(build_configargs)
AC_SUBST(build_configdirs)

# Host module lists & subconfigure args.
AC_SUBST(host_configargs)
AC_SUBST(configdirs)
AC_SUBST(target_configdirs)

# Target module lists & subconfigure args.
AC_SUBST(target_configargs)


# Build tools.
AC_SUBST(AR_FOR_BUILD)
AC_SUBST(AS_FOR_BUILD)
AC_SUBST(CC_FOR_BUILD)
AC_SUBST(CFLAGS_FOR_BUILD)
AC_SUBST(CXXFLAGS_FOR_BUILD)
AC_SUBST(CXX_FOR_BUILD)
AC_SUBST(DLLTOOL_FOR_BUILD)
AC_SUBST(GCJ_FOR_BUILD)
AC_SUBST(GFORTRAN_FOR_BUILD)
AC_SUBST(GOC_FOR_BUILD)
AC_SUBST(LDFLAGS_FOR_BUILD)
AC_SUBST(LD_FOR_BUILD)
AC_SUBST(NM_FOR_BUILD)
AC_SUBST(RANLIB_FOR_BUILD)
AC_SUBST(WINDMC_FOR_BUILD)
AC_SUBST(WINDRES_FOR_BUILD)

# Generate default definitions for YACC, M4, LEX and other programs that run
# on the build machine.  These are used if the Makefile can't locate these
# programs in objdir.
MISSING=`cd $ac_aux_dir && ${PWDCMD-pwd}`/missing

AC_CHECK_PROGS([YACC], ['bison -y' byacc yacc], [$MISSING bison -y])
case " $build_configdirs " in
  *" bison "*) YACC='$$r/$(BUILD_SUBDIR)/bison/tests/bison -y' ;;
esac

AC_CHECK_PROGS([BISON], [bison], [$MISSING bison])
case " $build_configdirs " in
  *" bison "*) BISON='$$r/$(BUILD_SUBDIR)/bison/tests/bison' ;;
esac

AC_CHECK_PROGS([M4], [gm4 gnum4 m4], [$MISSING m4])
case " $build_configdirs " in
  *" m4 "*) M4='$$r/$(BUILD_SUBDIR)/m4/m4' ;;
esac

AC_CHECK_PROGS([LEX], [flex lex], [$MISSING flex])
case " $build_configdirs " in
  *" flex "*) LEX='$$r/$(BUILD_SUBDIR)/flex/flex' ;;
  *" lex "*) LEX='$$r/$(BUILD_SUBDIR)/lex/lex' ;;
esac

AC_CHECK_PROGS([FLEX], [flex], [$MISSING flex])
case " $build_configdirs " in
  *" flex "*) FLEX='$$r/$(BUILD_SUBDIR)/flex/flex' ;;
esac

AC_CHECK_PROGS([MAKEINFO], makeinfo, [$MISSING makeinfo])
case " $build_configdirs " in
  *" texinfo "*) MAKEINFO='$$r/$(BUILD_SUBDIR)/texinfo/makeinfo/makeinfo' ;;
  *)
changequote(,)
    # For an installed makeinfo, we require it to be from texinfo 4.7 or
    # higher, else we use the "missing" dummy.
    if ${MAKEINFO} --version \
       | egrep 'texinfo[^0-9]*(4\.([7-9]|[1-9][0-9])|[5-9]|[1-9][0-9])' >/dev/null 2>&1; then
      :
    else
      MAKEINFO="$MISSING makeinfo"
    fi
    ;;
changequote([,])
esac

# FIXME: expect and dejagnu may become build tools?

AC_CHECK_PROGS(EXPECT, expect, expect)
case " $configdirs " in
  *" expect "*)
    test $host = $build && EXPECT='$$r/$(HOST_SUBDIR)/expect/expect'
    ;;
esac

AC_CHECK_PROGS(RUNTEST, runtest, runtest)
case " $configdirs " in
  *" dejagnu "*)
    test $host = $build && RUNTEST='$$s/$(HOST_SUBDIR)/dejagnu/runtest'
    ;;
esac


# Host tools.
NCN_STRICT_CHECK_TOOLS(AR, ar)
NCN_STRICT_CHECK_TOOLS(AS, as)
NCN_STRICT_CHECK_TOOLS(DLLTOOL, dlltool)
NCN_STRICT_CHECK_TOOLS(LD, ld)
NCN_STRICT_CHECK_TOOLS(LIPO, lipo)
NCN_STRICT_CHECK_TOOLS(NM, nm)
NCN_STRICT_CHECK_TOOLS(RANLIB, ranlib, true)
NCN_STRICT_CHECK_TOOLS(STRIP, strip, true)
NCN_STRICT_CHECK_TOOLS(WINDRES, windres)
NCN_STRICT_CHECK_TOOLS(WINDMC, windmc)
NCN_STRICT_CHECK_TOOLS(OBJCOPY, objcopy)
NCN_STRICT_CHECK_TOOLS(OBJDUMP, objdump)
NCN_STRICT_CHECK_TOOLS(READELF, readelf)
AC_SUBST(CC)
AC_SUBST(CXX)
AC_SUBST(CFLAGS)
AC_SUBST(CXXFLAGS)

# Target tools.
AC_ARG_WITH([build-time-tools], 
  [AS_HELP_STRING([--with-build-time-tools=PATH],
		  [use given path to find target tools during the build])],
  [case x"$withval" in
     x/*) ;;
     *)
       with_build_time_tools=
       AC_MSG_WARN([argument to --with-build-time-tools must be an absolute path])
       ;;
   esac],
  [with_build_time_tools=])

NCN_STRICT_CHECK_TARGET_TOOLS(CC_FOR_TARGET, cc gcc)
NCN_STRICT_CHECK_TARGET_TOOLS(CXX_FOR_TARGET, c++ g++ cxx gxx)
NCN_STRICT_CHECK_TARGET_TOOLS(GCC_FOR_TARGET, gcc, ${CC_FOR_TARGET})
NCN_STRICT_CHECK_TARGET_TOOLS(GCJ_FOR_TARGET, gcj)
NCN_STRICT_CHECK_TARGET_TOOLS(GFORTRAN_FOR_TARGET, gfortran)
NCN_STRICT_CHECK_TARGET_TOOLS(GOC_FOR_TARGET, gccgo)

ACX_CHECK_INSTALLED_TARGET_TOOL(AR_FOR_TARGET, ar)
ACX_CHECK_INSTALLED_TARGET_TOOL(AS_FOR_TARGET, as)
ACX_CHECK_INSTALLED_TARGET_TOOL(DLLTOOL_FOR_TARGET, dlltool)
ACX_CHECK_INSTALLED_TARGET_TOOL(LD_FOR_TARGET, ld)
ACX_CHECK_INSTALLED_TARGET_TOOL(LIPO_FOR_TARGET, lipo)
ACX_CHECK_INSTALLED_TARGET_TOOL(NM_FOR_TARGET, nm)
ACX_CHECK_INSTALLED_TARGET_TOOL(OBJDUMP_FOR_TARGET, objdump)
ACX_CHECK_INSTALLED_TARGET_TOOL(RANLIB_FOR_TARGET, ranlib)
ACX_CHECK_INSTALLED_TARGET_TOOL(READELF_FOR_TARGET, readelf)
ACX_CHECK_INSTALLED_TARGET_TOOL(STRIP_FOR_TARGET, strip)
ACX_CHECK_INSTALLED_TARGET_TOOL(WINDRES_FOR_TARGET, windres)
ACX_CHECK_INSTALLED_TARGET_TOOL(WINDMC_FOR_TARGET, windmc)

RAW_CXX_FOR_TARGET="$CXX_FOR_TARGET"

GCC_TARGET_TOOL(ar, AR_FOR_TARGET, AR, [binutils/ar])
GCC_TARGET_TOOL(as, AS_FOR_TARGET, AS, [gas/as-new])
GCC_TARGET_TOOL(cc, CC_FOR_TARGET, CC, [gcc/xgcc -B$$r/$(HOST_SUBDIR)/gcc/])
dnl see comments for CXX_FOR_TARGET_FLAG_TO_PASS
GCC_TARGET_TOOL(c++, CXX_FOR_TARGET, CXX,
		[gcc/xg++ -B$$r/$(HOST_SUBDIR)/gcc/ -nostdinc++ `if test -f $$r/$(TARGET_SUBDIR)/libstdc++-v3/scripts/testsuite_flags; then $(SHELL) $$r/$(TARGET_SUBDIR)/libstdc++-v3/scripts/testsuite_flags --build-includes; else echo -funconfigured-libstdc++-v3 ; fi` -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src/.libs -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/libsupc++/.libs],
		c++)
GCC_TARGET_TOOL(c++ for libstdc++, RAW_CXX_FOR_TARGET, CXX,
		[gcc/xgcc -shared-libgcc -B$$r/$(HOST_SUBDIR)/gcc -nostdinc++ -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src/.libs -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/libsupc++/.libs],
		c++)
GCC_TARGET_TOOL(dlltool, DLLTOOL_FOR_TARGET, DLLTOOL, [binutils/dlltool])
GCC_TARGET_TOOL(gcc, GCC_FOR_TARGET, , [gcc/xgcc -B$$r/$(HOST_SUBDIR)/gcc/])
GCC_TARGET_TOOL(gcj, GCJ_FOR_TARGET, GCJ,
		[gcc/gcj -B$$r/$(HOST_SUBDIR)/gcc/], java)
GCC_TARGET_TOOL(gfortran, GFORTRAN_FOR_TARGET, GFORTRAN,
		[gcc/gfortran -B$$r/$(HOST_SUBDIR)/gcc/], fortran)
GCC_TARGET_TOOL(gccgo, GOC_FOR_TARGET, GOC,
		[gcc/gccgo -B$$r/$(HOST_SUBDIR)/gcc/], go)
GCC_TARGET_TOOL(ld, LD_FOR_TARGET, LD, [ld/ld-new])
GCC_TARGET_TOOL(lipo, LIPO_FOR_TARGET, LIPO)
GCC_TARGET_TOOL(nm, NM_FOR_TARGET, NM, [binutils/nm-new])
GCC_TARGET_TOOL(objdump, OBJDUMP_FOR_TARGET, OBJDUMP, [binutils/objdump])
GCC_TARGET_TOOL(ranlib, RANLIB_FOR_TARGET, RANLIB, [binutils/ranlib])
GCC_TARGET_TOOL(readelf, READELF_FOR_TARGET, READELF, [binutils/readelf])
GCC_TARGET_TOOL(strip, STRIP_FOR_TARGET, STRIP, [binutils/strip-new])
GCC_TARGET_TOOL(windres, WINDRES_FOR_TARGET, WINDRES, [binutils/windres])
GCC_TARGET_TOOL(windmc, WINDMC_FOR_TARGET, WINDMC, [binutils/windmc])

AC_SUBST(FLAGS_FOR_TARGET)
AC_SUBST(RAW_CXX_FOR_TARGET)

# Certain tools may need extra flags.
AR_FOR_TARGET=${AR_FOR_TARGET}${extra_arflags_for_target}
RANLIB_FOR_TARGET=${RANLIB_FOR_TARGET}${extra_ranlibflags_for_target}
NM_FOR_TARGET=${NM_FOR_TARGET}${extra_nmflags_for_target}

# When building target libraries, except in a Canadian cross, we use
# the same toolchain as the compiler we just built.
COMPILER_AS_FOR_TARGET='$(AS_FOR_TARGET)'
COMPILER_LD_FOR_TARGET='$(LD_FOR_TARGET)'
COMPILER_NM_FOR_TARGET='$(NM_FOR_TARGET)'
if test $host = $build; then
  case " $configdirs " in
    *" gcc "*)
      COMPILER_AS_FOR_TARGET='$$r/$(HOST_SUBDIR)/gcc/as'
      COMPILER_LD_FOR_TARGET='$$r/$(HOST_SUBDIR)/gcc/collect-ld'
      COMPILER_NM_FOR_TARGET='$$r/$(HOST_SUBDIR)/gcc/nm'${extra_nmflags_for_target}
      ;;
  esac
fi

AC_SUBST(COMPILER_AS_FOR_TARGET)
AC_SUBST(COMPILER_LD_FOR_TARGET)
AC_SUBST(COMPILER_NM_FOR_TARGET)

AC_MSG_CHECKING([whether to enable maintainer-specific portions of Makefiles])
AC_ARG_ENABLE(maintainer-mode,
[AS_HELP_STRING([--enable-maintainer-mode],
		[enable make rules and dependencies not useful
		 (and sometimes confusing) to the casual installer])],
      USE_MAINTAINER_MODE=$enableval,
      USE_MAINTAINER_MODE=no)
AC_MSG_RESULT($USE_MAINTAINER_MODE)
AC_SUBST(MAINTAINER_MODE_TRUE)
AC_SUBST(MAINTAINER_MODE_FALSE)
if test "$USE_MAINTAINER_MODE" = yes; then
  MAINTAINER_MODE_TRUE=
  MAINTAINER_MODE_FALSE='#'
else
  MAINTAINER_MODE_TRUE='#'
  MAINTAINER_MODE_FALSE=
fi	
MAINT=$MAINTAINER_MODE_TRUE
AC_SUBST(MAINT)dnl

# ---------------------
# GCC bootstrap support
# ---------------------

# Stage specific cflags for build.
stage1_cflags="-g"
case $build in
  vax-*-*)
    case ${GCC} in
      yes) stage1_cflags="-g -Wa,-J" ;;
      *) stage1_cflags="-g -J" ;;
    esac ;;
esac

AC_SUBST(stage1_cflags)

# Enable --enable-checking in stage1 of the compiler.
AC_ARG_ENABLE(stage1-checking,
[AS_HELP_STRING([[--enable-stage1-checking[=all]]],
		[choose additional checking for stage1 of the compiler])],
[stage1_checking=--enable-checking=${enable_stage1_checking}],
[if test "x$enable_checking" = xno || test "x$enable_checking" = x; then
  stage1_checking=--enable-checking=yes,types
else
  stage1_checking=--enable-checking=$enable_checking,types
fi])
AC_SUBST(stage1_checking)

# Enable -Werror in bootstrap stage2 and later.
AC_ARG_ENABLE(werror,
[AS_HELP_STRING([--enable-werror],
		[enable -Werror in bootstrap stage2 and later])], [],
[if test -d ${srcdir}/gcc && test x"`cat $srcdir/gcc/DEV-PHASE`" = xexperimental; then
  enable_werror=yes
else
  enable_werror=no
fi])
case ${enable_werror} in
  yes) stage2_werror_flag="--enable-werror-always" ;;
  *) stage2_werror_flag="" ;;
esac
AC_SUBST(stage2_werror_flag)

# Enable --enable-host-shared.
AC_ARG_ENABLE(host-shared,
[AS_HELP_STRING([--enable-host-shared],
		[build host code as shared libraries])],
[host_shared=$enableval], [host_shared=no])
AC_SUBST(host_shared)

# Specify what files to not compare during bootstrap.

compare_exclusions="gcc/cc*-checksum\$(objext) | gcc/ada/*tools/*"
case "$target" in
  hppa*64*-*-hpux*) ;;
  hppa*-*-hpux*) compare_exclusions="gcc/cc*-checksum\$(objext) | */libgcc/lib2funcs* | gcc/ada/*tools/*" ;;
  powerpc*-ibm-aix*) compare_exclusions="gcc/cc*-checksum\$(objext) | gcc/ada/*tools/* | *libgomp*\$(objext)" ;;
esac
AC_SUBST(compare_exclusions)

AC_CONFIG_FILES([Makefile],
  [sed "$extrasub_build" Makefile |
   sed "$extrasub_host" |
   sed "$extrasub_target" > mf$$
   mv -f mf$$ Makefile],
  [extrasub_build="$extrasub_build"
   extrasub_host="$extrasub_host"
   extrasub_target="$extrasub_target"])
AC_OUTPUT
@


1.196
log
@2014-05-14  Sandra Loosemore  <sandra@@codesourcery.com>

	Sync from GCC mainline.

	* configure.ac (target_makefile_frag): Set for nios2-*-elf*.
	* configure: Regenerated.

	config/
	* mt-nios2-elf: New file.
@
text
@d1653 1
a1653 1
  ISL_CHECK_VERSION(0,10)
d1655 1
a1655 4
    ISL_CHECK_VERSION(0,11)
    if test "${gcc_cv_isl}" = no ; then
      ISL_CHECK_VERSION(0,12)
    fi
@


1.195
log
@2013-10-16  Jan-Benedict Glaw  <jbglaw@@lug-owl.de>

	* configure.ac: Update from GCC.
	* configure: Regenerate.
@
text
@d2373 3
@


1.194
log
@2013-10-08  Jan-Benedict Glaw  <jbglaw@@lug-owl.de>

	* configure.ac: Update from GCC.
	* configure: Regenerate.
@
text
@d3304 7
@


1.193
log
@2013-09-21  Jan-Benedict Glaw  <jbglaw@@lug-owl.de>

	* configure.ac: Update from GCC.
	* configure: Regenerate.
@
text
@d959 1
a959 1
  arc-*-*)
@


1.192
log
@2013-08-12  Jan-Benedict Glaw  <jbglaw@@lug-owl.de>

	* configure.ac: Sync with GCC repo.
	* Makefile.def: Ditto.
	* configure: Regenerate.
	* Makefile.in: Ditto.
@
text
@d1656 3
@


1.191
log
@Remove:
2013-07-10  Jack Howarth  <howarth@@bromo.med.uc.edu>

       PR target/57792
       * configure.ac: Use --with-sysroot=\"`xcrun --show-sdk-path`\" on darwin13 and later.
       * configure: Regenerated.
@
text
@d164 1
d558 16
d2057 1
a2057 1
# Disable libitm and libsanitizer if we're not building C++
d2061 1
a2061 1
    noconfigdirs="$noconfigdirs target-libitm target-libsanitizer"
d2487 5
d3188 1
a3188 1
		[gcc/xg++ -B$$r/$(HOST_SUBDIR)/gcc/ -nostdinc++ `if test -f $$r/$(TARGET_SUBDIR)/libstdc++-v3/scripts/testsuite_flags; then $(SHELL) $$r/$(TARGET_SUBDIR)/libstdc++-v3/scripts/testsuite_flags --build-includes; else echo -funconfigured-libstdc++-v3 ; fi` -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src/.libs],
d3191 1
a3191 1
		[gcc/xgcc -shared-libgcc -B$$r/$(HOST_SUBDIR)/gcc -nostdinc++ -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src/.libs],
@


1.190
log
@2013-07-10  Jack Howarth  <howarth@@bromo.med.uc.edu>

	    PR target/57792
	    * configure.ac: Use --with-sysroot=\"`xcrun --show-sdk-path`\" on darwin13 and later.
	    * configure: Regenerated.
@
text
@a2856 7
# Pass --with-sysroot on darwin without SDK in /
case "${target}" in
  x86_64-*-darwin1[[3-9]]*)
    host_configargs="--with-sysroot=\"`xcrun --show-sdk-path`\"  ${host_configargs}"
    ;;
esac

@


1.189
log
@	* configure.ac (mips*-*-bsd*, mips*-*-ultrix*, mips*-*-osf*)
	(mips*-*-ecoff*, mips*-*-pe*, mips*-*-irix* [v4 and earlier])
	(mips*-*-lnews*, mips*-*-riscos*): Add gas and ld to noconfigdirs.
	* configure: Regenerate.

gas/
	* NEWS: Note removal of ECOFF support.
	* doc/as.texinfo (--emulation): Update for the removal of MIPS ECOFF.
	* Makefile.am (TARG_ENV_HFILES): Remove config/te-lnews.h.
	(MULTI_CFILES): Remove config/e-mipsecoff.c.
	* Makefile.in: Regenerate.
	* configure.in: Remove MIPS ECOFF references.
	(mips-sony-bsd*, mips-*-bsd*, mips-*-lnews*-ecoff, mips-*-*-ecoff):
	Delete cases.
	(mips-*-irix5*-*, mips*-*-linux*-*, mips*-*-freebsd*)
	(mips*-*-kfreebsd*-gnu, mips-*-*-elf): Fold into...
	(mips-*-*): ...this single case.
	(mipsbecoff, mipslecoff, mipsecoff): Remove emulations.  Expect
	MIPS emulations to be e-mipself*.
	* configure: Regenerate.
	* configure.tgt (mips-sony-bsd*, mips-*-ultrix*, mips-*-osf*)
	(mips-*-ecoff*, mips-*-pe*, mips-*-irix*, ips-*-lnews*, mips-*-riscos*)
	(mips-*-sysv*): Remove coff and ecoff cases.
	* as.c (mipsbecoff, mipslecoff, mipsecoff): Remove.
	* ecoff.c: Remove reference to MIPS ECOFF.
	* config/e-mipsecoff.c, config/te-lnews.h: Delete files.
	* config/tc-mips.c (ECOFF_LITTLE_FORMAT): Delete.
	(RDATA_SECTION_NAME, mips_target_form): Remove COFF and ECOFF cases.
	(mips_hi_fixup): Tweak comment.
	(append_insn): Require a howto.
	(mips_after_parse_args): Remove OBJ_MAYBE_ECOFF code.

gas/testsuite/
	* gas/all/gas.exp: Remove reference to mips-ecoff.
	* gas/mips/branch-misc-1.d, gas/mips/branch-misc-2.d,
	gas/mips/branch-misc-2-64.d, gas/mips/branch-misc-2pic.d,
	gas/mips/branch-misc-2pic-64.d, gas/mips/branch-swap.d: Remove
	skips for mips-*-ecoff.

ld/
	* NEWS: Document the removal of MIPS ECOFF targets.
	* ld.texinfo (--gpsize=@@var{value}): Use MIPS ELF rather than
	MIPS ECOFF as an example of a target that supports small data.
	* ldmain.c (g_switch_value): Likewise.
	* configure.tgt (mips*-*-pe, mips*-dec-ultrix*, mips*-dec-osf*)
	(mips*-sgi-irix* [v4 and earlier], mips*el-*-ecoff*, mips*-*-ecoff*)
	(mips*-*-bsd*, mips*-*-lnews*): Remove cases.
	* Makefile.am (ALL_EMULATION_SOURCES): Remove emipsbig.c, emipsbsd.c,
	emipsidt.c, emipsidtl.c, emipslit.c, emipslnews.c and emipspe.c.
	(emipsbig.c, emipsbsd.c, emipsidt.c, emipsidtl.c, emipslit.c)
	(emipslnews.c, emipspe.c): Delete rules.
	* Makefile.in: Regenerate.
	* emulparams/mipsbig.sh, emulparams/mipsbsd.sh, emulparams/mipsidt.sh,
	emulparams/mipsidtl.sh, emulparams/mipslit.sh, emulparams/mipslnews.sh,
	emulparams/mipspe.sh, emultempl/mipsecoff.em: Delete.
	* emultempl/m68kcoff.em: Update comment to say that MIPS ECOFF support
	has now been removed.
	* emultempl/pe.em: Remove TARGET_IS_mipspe checks.
@
text
@d2857 7
@


1.188
log
@2013-04-22  Jan-Benedict Glaw  <jbglaw@@lug-owl.de>

	* configure.ac: Sync with GCC.
	* configure: Regenerated.
@
text
@d1104 1
a1104 1
    noconfigdirs="$noconfigdirs gprof target-libgloss"
d1108 4
@


1.187
log
@	* configure.ac: Sync with GCC repo.
	* configure: Ditto.
@
text
@d614 2
@


1.186
log
@	PR go/55969
	* configure.ac: Disable libgo on some systems where it does not
	work.
	* configure: Rebuild.
@
text
@d779 3
@


1.185
log
@	* configure.ac: Sync with GCC repo.
	* configure: Ditto.
	* Makefile.def: Ditto.
	* Makefile.in: Ditto.
@
text
@d755 17
@


1.184
log
@	* configure.ac (ENABLE_GOLD): Consider *-*-gnu* targets ELF.
	* configure: Regenerate.
@
text
@d1609 1
a1609 1
  dnl The minimal version of ISL required for Graphite.
d1611 3
d1623 1
a1623 4
    dnl The minimal version of CLooG required for Graphite.
    dnl
    dnl If we use CLooG-Legacy, the provided version information is
    dnl ignored.
d1625 3
@


1.183
log
@Add --with-build-config=bootstrap-asan support

	* Makefile.def (target_modules): Add bootstrap=true and
	raw_cxx=true to libsanitizer.
	* configure.ac (bootstrap_target_libs): Add libsanitizer.
	* Makefile.in: Regenerated.
	* configure: Likewise.
@
text
@d318 1
a318 1
      | *-*-linux* | frv-*-uclinux* | *-*-irix5* | *-*-irix6* \
@


1.182
log
@Merge g++/xg++ changes from GCC

	* configure.ac: Merge from GCC.
	* Makefile.tpl: Dito.
	* Makefile.in: Dito.
	* configure: Dito.
@
text
@d2436 5
@


1.181
log
@Disable libsanitizer for non-C++ builds.

	* configure.ac (noconfigdirs): Merge from GCC.
	* configure: Regenerate.
@
text
@d3132 1
a3132 1
		[gcc/g++ -B$$r/$(HOST_SUBDIR)/gcc/ -nostdinc++ `if test -f $$r/$(TARGET_SUBDIR)/libstdc++-v3/scripts/testsuite_flags; then $(SHELL) $$r/$(TARGET_SUBDIR)/libstdc++-v3/scripts/testsuite_flags --build-includes; else echo -funconfigured-libstdc++-v3 ; fi` -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src/.libs],
@


1.180
log
@Restore "Consider *-*-nacl* targets ELF for gold"

	* configure.ac (ENABLE_GOLD): Consider *-*-nacl* targets ELF.
	* configure: Regenerate.
@
text
@d2011 1
a2011 1
# Disable libitm if we're not building C++
d2015 1
a2015 1
    noconfigdirs="$noconfigdirs target-libitm"
@


1.179
log
@Sync toplevel files with GCC

2012-11-13  Richard Henderson  <rth@@redhat.com>

	* configure.ac: Move libsanitizer logic to subdirectory.
	* configure: Regenerate.

2012-11-13  Dodji Seketeli  <dodji@@redhat.com>

	* configure.ac: Enable libsanitizer just on x86 linux for now.
	* configure: Re-generate.

2012-11-13  David Edelsohn  <dje.gcc@@gmail.com>

	* configure.ac: Merge libquadmath sections.
	* configure: Regenerate.

2012-11-12  Wei Mi <wmi@@google.com>

	* configure.ac: Add libsanitizer to target_libraries.
	* Makefile.def: Ditto.
	* configure: Regenerate.
	* Makefile.in: Regenerate.
@
text
@d320 1
a320 1
      | *-*-solaris2* | *-*-nto*)
@


1.178
log
@Add --disable-libstdcxx configure option

2012-11-03  H.J. Lu  <hongjiu.lu@@intel.com>

	* configure: Regenerated.

2012-11-03  Robert Mason  <rbmj@@verizon.net>

	* configure.ac: add --disable-libstdcxx configure option
	and handle defaulted state only for VxWorks, ARM-wince-pe and AVR.
@
text
@d163 1
d541 16
d559 3
a585 7
# Disable libquadmath for some systems.
case "${target}" in
  avr-*-*)
    noconfigdirs="$noconfigdirs target-libquadmath"
    ;;
esac

@


1.177
log
@	* configure.ac (FLAGS_FOR_TARGET,target=cygwin): Fix for building
	against Mingw64 w32api.
	* configure: Regenerate.
@
text
@d430 9
d574 16
a589 13
case "${target}" in
  *-*-vxworks*)
    # VxWorks uses the Dinkumware C++ library.
    noconfigdirs="$noconfigdirs target-libstdc++-v3"
    ;;
  arm*-wince-pe*)
    # the C++ libraries don't build on top of CE's C libraries
    noconfigdirs="$noconfigdirs target-libstdc++-v3"
    ;;
  avr-*-*)
    noconfigdirs="$noconfigdirs target-libstdc++-v3"
    ;;
esac
@


1.176
log
@	PR bootstrap/54820
	* configure.ac (have_static_libs): Force 'no' for GCC version < 4.5.
	* configure: Regenerate.
@
text
@d2830 1
a2830 1
      FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -L$$r/$(TARGET_SUBDIR)/winsup -L$$r/$(TARGET_SUBDIR)/winsup/cygwin -L$$r/$(TARGET_SUBDIR)/winsup/w32api/lib -isystem $$s/winsup/include -isystem $$s/winsup/cygwin/include -isystem $$s/winsup/w32api/include'
@


1.175
log
@	PR bootstrap/54820
	* Makefile.tpl (STAGE1_FLAGS_TO_PASS): New variable.
	(all-[+prefix+][+module+]): Pass stage1_args to sub-makes.
	(all-stage[+id+]-[+prefix+][+module+]): Likewise, if prev is false.
	(clean-stage[+id+]-[+prefix+][+module+]): Likewise, if prev is false.
	(host_modules): Set stage1_args to STAGE1_FLAGS_TO_PASS.
	* Makefile.in: Regenerate.
	* configure.ac (have_static_libs): New variable and associated check.
	(stage1-ldflags): Move to after stage1_libs and set to -static-libstdc++
	-static-libgcc if stage1_libs is empty and have_static_libs is yes.
	* configure: Regenerate.
@
text
@d1193 5
a1197 1
  AC_LINK_IFELSE([int main() {}],
@


1.174
log
@Sync toplevel files with GCC tree

2012-09-28  Ian Lance Taylor  <iant@@google.com>

	* Makefile.def: Make all-target-libgo depend on
	all-target-libbacktrace.
	* Makefile.in: Rebuild.

2012-09-26  Ian Lance Taylor  <iant@@google.com>

	* Makefile.def: Make all-gcc depend on all-libbacktrace.
	* Makefile.in: Rebuild.

2012-09-06  Diego Novillo  <dnovillo@@google.com>

	* configure.ac: Bump minimum GMP version to 4.2.3.
	* configure: Re-generate.

2012-09-05  Georg-Johann Lay  <avr@@gjlay.de>

	PR target/54461
	* configure.ac (noconfigdirs,target=avr-*-*): Add target-newlib,
	target-libgloss if not configured --with-avrlibc=no.
	* configure: Regenerate.

2012-09-04  Jason Merrill  <jason@@redhat.com>

	* configure.ac: Fix --enable-languages=all.

2012-09-03  Richard Guenther  <rguenther@@suse.de>

	PR bootstrap/54138
	* configure.ac: Re-organize ISL / CLOOG checks to allow
	disabling with either --without-isl or --without-cloog.
	* configure: Regenerated.

2012-09-03  Georg-Johann Lay  <avr@@gjlay.de>

	* configure.ac (noconfigdirs,target=avr): Add target-libquadmath.
	* configure: Regenerate.
@
text
@d1185 16
a1496 11
# Linker flags to use for stage1 or when not boostrapping.
AC_ARG_WITH(stage1-ldflags,
[AS_HELP_STRING([--with-stage1-ldflags=FLAGS], [linker flags for stage1])],
[if test "$withval" = "no" -o "$withval" = "yes"; then
   stage1_ldflags=
 else
   stage1_ldflags=$withval
 fi],
[stage1_ldflags=])
AC_SUBST(stage1_ldflags)

d1508 17
@


1.173
log
@2012-09-21  Steve Ellcey  <sellcey@@mips.com>

	* configure.ac: Add mips*-mti-elf* target.
	* configure: Regenerate.
@
text
@d557 7
d904 7
d1371 1
a1371 1
  #if GCC_GMP_VERSION < GCC_GMP_VERSION_NUM(4,2,0)
d1533 25
a1557 5
# Check for ISL
dnl Provide configure switches and initialize islinc & isllibs
dnl with user input.
ISL_INIT_FLAGS
if test "x$with_isl" != "xno"; then
a1559 1

a1562 1
fi
d1564 15
a1578 17
# Check for CLOOG
dnl Provide configure switches and initialize clooginc & clooglibs
dnl with user input.
CLOOG_INIT_FLAGS
if test "x$isllibs" = x && test "x$islinc" = x; then
  clooglibs=
  clooginc=
elif test "x$with_cloog" != "xno"; then
  dnl The minimal version of CLooG required for Graphite.
  dnl
  dnl If we use CLooG-Legacy, the provided version information is
  dnl ignored.
  CLOOG_CHECK_VERSION(0,17,0)

  dnl Only execute fail-action, if CLooG has been requested.
  CLOOG_IF_FAILED([
    AC_MSG_ERROR([Unable to find a usable CLooG.  See config.log for details.])])
d1583 4
a1586 1
if test "x$clooglibs" = x && test "x$clooginc" = x; then
d1588 3
d1593 5
d1778 1
d1789 3
a1791 4
            add_this_lang=${build_by_default}
            ;;
          *)
            add_this_lang=no
@


1.172
log
@	* configure.ac (host_libs): Add libbacktrace.
	(target_libraries): Add libbacktrace.
	* Makefile.def (host_modules): Add libbacktrace.
	(target_modules): Likewise.
	* configure, Makefile.in: Rebuild.
@
text
@d1031 1
a1031 1
  mips*-sde-elf*)
d2223 1
a2223 1
  mips*-sde-elf*)
@


1.171
log
@Add support for tilegx in gold.
	* configure.ac (ENABLE_GOLD): support tilegx*
	* configure: rebuild
elfcpp:
	* tilegx.h: New file.
	* elfcpp.h: add EM_TILEGX.
gold:
	* tilegx.cc: New file.
	* Makefile.am (TARGETSOURCES): Add tilegx.cc
	(ALL_TARGETOBJS): Add tilegx.$(OBJEXT)
	* configure.tgt: Add entries for tilegx*.
	* configure.ac: Likewise.
	* Makefile.in: Rebuild.
	* configure: Likewise.
	* testsuite/icf_safe_test.sh (arch_specific_safe_fold): Handle
	tilegx.
@
text
@d136 1
a136 1
host_libs="intl libiberty opcodes bfd readline tcl tk itcl libgui zlib libcpp libdecnumber gmp mpfr mpc isl cloog libelf libiconv"
d155 1
@


1.170
log
@        PR target/38607
        Merge upstream change.
        * libtool.m4 (_LT_COMPILER_PIC): Add -fPIC to GCC and GXX for AIX.

        * configure.ac: Add target-libquadmath to noconfigdirs for AIX.
        Add libgomp*.o to compare_exclusions for AIX.
        * configure: Regenerate.
@
text
@d331 1
a331 1
        i?86-*-* | x86_64-*-* | sparc*-*-* | powerpc*-*-* | arm*-*-*)
@


1.169
log
@Sync toplevel files with GCC tree

2012-08-14   Diego Novillo  <dnovillo@@google.com>

	Merge from cxx-conversion branch.

	* Makefile.tpl (STAGE[+id+]_CXXFLAGS): Remove
	POSTSTAGE1_CONFIGURE_FLAGS.
	* Makefile.in: Regenerate.
	* configure.ac (ENABLE_BUILD_WITH_CXX): Remove.  Update all users.
	Force C++ when bootstrapping.
	* configure: Regenerate.

2012-07-06  Richard Guenther  <rguenther@@suse.de>

	* Makefile.def (cloog): Pass $(HOST_GMPINC) and $(HOST_ISLINC)
	as CPPFLAGS, pass path to built gmp as LDFLAGS, always use
	--with-gmp=system.
	* Makefile.in: Regenerated.
	* configure: Likewise.

2012-07-06  Richard Guenther  <rguenther@@suse.de>

	* configure.ac (extra_isl_gmp_configure_flags): Initialize and subst.
	* Makefile.def (isl): Use extra_isl_gmp_configure_flags and
	supply V=1 as extra_make_flags.
	* configure: Regenerated.
	* Makefile.in: Likewise.

2012-07-03  Richard Guenther  <rguenther@@suse.de>

	* Makfile.def (isl): Remove not necessary extra_exports and
	extra_make_flags.
	(cloog): Use $$CPPFLAGS instead of ${CPPFLAGS}.
	* Makefile.in: Regenerated.

2012-07-03  Richard Guenther  <rguenther@@suse.de>

	* Makefile.def (cloog): Add V=1 to extra_make_flags.
	* configure.ac: If either the ISL or the CLooG check failed
	do not try to build in-tree versions.
	* Makefile.in: Regenerated.
	* configure: Regenerated.

2012-07-02  Richard Guenther  <rguenther@@suse.de>
	Michael Matz  <matz@@suse.de>
	Tobias Grosser <tobias@@grosser.es>
	Sebastian Pop <sebpop@@gmail.com>

	* Makefile.def: Add ISL host module, remove PPL host module.
	Adjust ClooG host module to use the proper ISL.
	* Makefile.tpl: Pass ISL include flags instead of PPL ones.
	* configure.ac: Include config/isl.m4.  Add ISL host library,
	remove PPL.  Remove PPL configury, add ISL configury, adjust
	ClooG configury.
	* Makefile.in: Regenerated.
	* configure: Likewise.

2012-07-02  Richard Guenther  <rguenther@@suse.de>

	Merge from graphite branch
	2011-07-21  Tobias Grosser  <tobias@@grosser.es>

	* configure: Regenerated.
	* config/cloog.m4: Remove support for CLooG-ppl and CLooG-parma,
	both cloog.org and legacy versions. The only supported version will
	be CLooG with the isl backend.

	2011-07-21  Tobias Grosser  <tobias@@grosser.es>

	* configure: Regenerated.
	* configure.ac: Require cloog isl 0.17.0

	2011-07-21  Tobias Grosser  <tobias@@grosser.es>

	* configure: Regenerated.
	* config/cloog.m4: Do not define CLOOG_ORG

2012-06-29  Steven Bosscher  <steven@@gcc.gnu.org>

	* configure.ac: Skip C if explicitly selected.
	* configure: Regenerate.

2012-06-28  Christophe Lyon <christophe.lyon@@st.com>

	* configure.ac (CFLAGS_FOR_TARGET, CXXFLAGS_FOR_TARGET): Make sure
	they contain -O2.
	* configure: Regenerate.

2012-06-20  Jason Merrill  <jason@@redhat.com>

	* Makefile.tpl (check-target-libgomp-c++): New.
	(check-target-libitm-c++): New.
	* Makefile.def (c++): Add them.
	* Makefile.in: Regenerate.

2012-05-16  Olivier Hainque  <hainque@@adacore.com>

	* Makefile.tpl (gcc-no-fixedincludes): Rename into ...
	(gcc-install-no-fixedincludes): Now forwarder to local target in gcc/
	(install-no-fixedincludes): Adjust accordingly.
	* Makefile.in: Regenerate.

2012-05-09  Nick Clifton  <nickc@@redhat.com>
	    Paul Smith  <psmith@@gnu.org>

	PR bootstrap/50461
	* configure.ac (mpfr-dir): When using in-tree MPFR sources
	allow for the fact that from release v3.1.0 of MPFR the source
	files were moved into a src sub-directory.
	* configure: Regenerate.

2012-05-07  Janne Blomqvist  <jb@@gcc.gnu.org>

	* configure.ac: Bump minimum MPFR version to 2.4.0.
	* configure: Regenerated.

2012-05-01  Richard Henderson  <rth@@redhat.com>

	* Makefile.def (libatomic): New target_module.
	* configure.ac (target_libraries): Add libatomic.
	(noconfigdirs): Check if libatomic is supported.
	* Makefile.in, configure: Rebuild.

config/

2012-08-26  Art Haas <ahaas@@impactweather.com>

	* cloog.m4 (CLOOG_INIT_FLAGS): Use = instead of == in test.

2012-07-04  Tristan Gingold  <gingold@@adacore.com>

	* isl.m4 (ISL_CHECK_VERSION): Set to yes if cross-compiling.
	Fix comments.

2012-07-03  Richard Guenther  <rguenther@@suse.de>

	* cloog.m4: Remove debugging print.

2012-07-03  Rainer Orth  <ro@@CeBiTec.Uni-Bielefeld.DE>

	* isl.m4 (ISL_CHECK_VERSION): Add -lisl to LIBS, not LDFLAGS.

2012-07-02  Richard Guenther  <rguenther@@suse.de>

	* isl.m4 (_ISL_CHECK_CT_PROG): Omit main function header/footer.
	Fix version test.

2012-07-02  Richard Guenther  <rguenther@@suse.de>
	Michael Matz  <matz@@suse.de>
	Tobias Grosser <tobias@@grosser.es>
	Sebastian Pop <sebpop@@gmail.com>

	* cloog.m4: Set up to work against ISL only.
	* isl.m4: New file.
@
text
@d530 9
d3158 1
@


1.168
log
@* configure.ac (CFLAGS_FOR_TARGET, CXXFLAGS_FOR_TARGET): Make sure
they contain -O2.
* configure: Regenerate.
@
text
@d31 1
d116 1
a116 1
# Subdirs will be configured in the order listed in build_configdirs,
d119 2
a120 2
# Dependency sorting is only needed when *configuration* must be done in
# a particular order.  In all cases a dependency should be specified in
d136 1
a136 1
host_libs="intl libiberty opcodes bfd readline tcl tk itcl libgui zlib libcpp libdecnumber gmp mpfr mpc ppl cloog libelf libiconv"
d158 1
d214 1
a214 1
fi
d250 1
a250 1
# some tools are so dependent upon X11 that if we're not building with X,
d258 1
a258 1
    enable_gdbtk=no
d318 1
a318 1
      | *-*-solaris2* | *-*-nto* | *-*-nacl*)
d384 1
a384 1
# Remove more programs from consideration, based on the host or
d498 16
d710 1
a710 1
    ;;
d795 1
a795 1
    ;;
a892 3
  cr16-*-*)
    noconfigdirs="$noconfigdirs gdb"
    ;;
d942 2
a943 1
    noconfigdirs="$noconfigdirs libgui itcl"
a1087 3
  *-interix*)
    host_makefile_frag="config/mh-interix"
    ;;
d1094 1
a1094 1
  hppa*-*)
a1206 14
# See if we are building gcc with C++.
AC_ARG_ENABLE(build-with-cxx,
[AS_HELP_STRING([--enable-build-with-cxx],
		[build with C++ compiler instead of C compiler])],
ENABLE_BUILD_WITH_CXX=$enableval,
ENABLE_BUILD_WITH_CXX=no)

# Build stage1 with C and build stages 2 and 3 with C++.
AC_ARG_ENABLE(build-poststage1-with-cxx,
[AS_HELP_STRING([--enable-build-poststage1-with-cxx],
		[build stages 2 and 3 with C++, not C])],
ENABLE_BUILD_POSTSTAGE1_WITH_CXX=$enableval,
ENABLE_BUILD_POSTSTAGE1_WITH_CXX=yes)

d1330 1
d1365 1
a1365 1
    #if MPFR_VERSION < MPFR_VERSION_NUM(2,3,1)
d1425 1
a1425 1
    AC_MSG_ERROR([Building GCC requires GMP 4.2+, MPFR 2.3.1+ and MPC 0.8.0+.
d1443 1
d1509 11
a1519 76
# Check for PPL
ppllibs=
pplinc=
pwllib=

AC_ARG_WITH(ppl,
[AS_HELP_STRING([--with-ppl=PATH],
		[specify prefix directory for the installed PPL package.
		 Equivalent to --with-ppl-include=PATH/include
		 plus --with-ppl-lib=PATH/lib])])
AC_ARG_WITH(ppl-include,
[AS_HELP_STRING([--with-ppl-include=PATH],
		[specify directory for installed PPL include files])])
AC_ARG_WITH(ppl-lib,
[AS_HELP_STRING([--with-ppl-lib=PATH],
		[specify directory for the installed PPL library])])

AC_ARG_ENABLE(ppl-version-check,
[AS_HELP_STRING([--disable-ppl-version-check],
		[disable check for PPL version])])

case $with_ppl in
  yes | no | "")
    ;;
  *)
    ppllibs="-L$with_ppl/lib"
    pplinc="-I$with_ppl/include $pplinc"
    if test -d "$with_ppl/lib" && test -d "$with_ppl/include"; then
      with_ppl=yes
    else
      AC_MSG_ERROR([cannot find directories "$with_ppl/lib" or "$with_ppl/include"])
    fi
    ;;
esac

if test x"$with_ppl_include" != x; then
  pplinc="-I$with_ppl_include $pplinc"
  with_ppl=yes
fi

if test "x$with_ppl_lib" != x; then
  ppllibs="-L$with_ppl_lib"
  with_ppl=yes
fi

if test x"$with_ppl$with_ppl_include$with_ppl_lib" = x && test -d ${srcdir}/ppl; then
  if test x"$enable_watchdog" = xyes; then
    pwllib="-lpwl"
  fi
  ppllibs='-L$$r/$(HOST_SUBDIR)/ppl/interfaces/C/'"$lt_cv_objdir"' -L$$r/$(HOST_SUBDIR)/ppl/src/'"$lt_cv_objdir"
  pplinc='-I$$r/$(HOST_SUBDIR)/ppl/src -I$$r/$(HOST_SUBDIR)/ppl/interfaces/C '
  enable_ppl_version_check=no
  with_ppl=yes
fi

if test "x$with_ppl" != xno; then
  if test "x$pwllib" = x; then
    saved_LIBS="$LIBS"
    LIBS="$LIBS $ppllibs -lstdc++ -lm"
    AC_CHECK_LIB(pwl, PWL_handle_timeout, [pwllib="-lpwl"])
    LIBS="$saved_LIBS"
  fi

  ppllibs="$ppllibs -lppl_c -lppl $pwllib -lgmpxx"

  if test "$enable_ppl_version_check" != no; then
    saved_CFLAGS="$CFLAGS"
    CFLAGS="$CFLAGS $pplinc $gmpinc"
    AC_MSG_CHECKING([for version 0.11 (revision 0 or later) of PPL])
    AC_TRY_COMPILE([#include "ppl_c.h"],[
    #if PPL_VERSION_MAJOR != 0 || PPL_VERSION_MINOR < 11
    choke me
    #endif
    ], [AC_MSG_RESULT([yes])], [AC_MSG_RESULT([no]); ppllibs= ; pplinc= ; with_ppl=no ])
    CFLAGS="$saved_CFLAGS"
  fi
a1521 5
# Flags needed for PPL
AC_SUBST(ppllibs)
AC_SUBST(pplinc)


a1522 1

d1526 4
a1529 14
if test "x$with_ppl" = "xno"; then
  dnl Only execute fail-action, if CLooG has been requested.
  CLOOG_REQUESTED([graphite_requested=yes], [graphite_requested=no])
  if test "${graphite_requested}" = yes; then
    AC_MSG_ERROR([Unable to find a usable PPL.  See config.log for details.])
  fi
  with_cloog=no
fi
if test "x${with_cloog}" = x && test "x${with_cloog_include}" = x \
  && test "x${with_cloog_lib}" = x && test -d ${srcdir}/cloog; then
  clooglibs='-L$$r/$(HOST_SUBDIR)/cloog/'"$lt_cv_objdir"' '
  clooginc='-I$$r/$(HOST_SUBDIR)/cloog/include -I$$s/cloog/include '
fi
if test "x$with_cloog" != "xno"; then
d1534 1
a1534 1
  CLOOG_CHECK_VERSION(0,16,1)
d1541 6
d1584 1
a1584 1
# By default, C is the only stage 1 language.
d1622 4
a1625 5
  # If bootstrapping, then using --enable-build-with-cxx or
  # --enable-build-poststage1-with-cxx requires enabling C++.
  case ",$enable_languages,:,$ENABLE_BUILD_WITH_CXX,$ENABLE_BUILD_POSTSTAGE1_WITH_CXX,:$enable_bootstrap" in
    *,c++,*:*:*) ;;
    *:*,yes,*:yes)
d1629 1
a1629 1
        AC_MSG_ERROR([bootstrapping with --enable-build-with-cxx or --enable-build-poststage1-with-cxx requires c++ sources])
d1709 1
a1709 1
        # From the config-lang.in, get $language, $target_libs,
d1724 1
a1724 4
	  if test "$ENABLE_BUILD_WITH_CXX" = "yes" \
	     || test "$ENABLE_BUILD_POSTSTAGE1_WITH_CXX" = "yes"; then
	    boot_language=yes
	  fi
d1729 5
a1733 2
            # Language was explicitly selected; include it.
            add_this_lang=yes
d1909 8
d1962 1
a1962 1
  j=`echo $i | sed -e s/build-//g`
d1979 1
a1979 1
  j=`echo $i | sed -e s/target-//g`
d2030 1
a2030 1
AC_ARG_WITH([build-sysroot],
d2121 2
a2122 2
#
# The command line options always override the explicit settings in
d2125 1
a2125 1
# If the default for a toolchain is to use GNU as and ld, and you don't
d2226 1
a2226 1
    # nm and ar from AIX 4.3 and above require -X32_64 flag to all ar and nm
a2231 4
  *-*-darwin[[3-9]]*)
    # ranlib before Darwin10 requires the -c flag to look at common symbols.
    extra_ranlibflags_for_target=" -c"
    ;;
d2296 1
a2296 1
fi
d2597 1
a2597 1
    mpc | mpfr | gmp | ppl | cloog)
d2666 1
a2666 1
# quotes, because this will be expanded first by make and then by the shell.
d2991 1
a2991 1
AC_ARG_WITH([build-time-tools],
d3096 1
a3096 1
fi
a3113 20
# This is aimed to mimic bootstrap with a non-GCC compiler to catch problems.
if test "$GCC" = yes -a "$ENABLE_BUILD_WITH_CXX" != yes; then
  saved_CFLAGS="$CFLAGS"

  # Pass -fkeep-inline-functions for stage 1 if the GCC version supports it.
  CFLAGS="$CFLAGS -fkeep-inline-functions"
  AC_MSG_CHECKING([whether -fkeep-inline-functions is supported])
  AC_TRY_COMPILE([
#if (__GNUC__ < 3) \
    || (__GNUC__ == 3 && (__GNUC_MINOR__ < 3 \
			  || (__GNUC_MINOR__ == 3 && __GNUC_PATCHLEVEL__ < 1)))
#error http://gcc.gnu.org/PR29382
#endif
    ],,
    [AC_MSG_RESULT([yes]); stage1_cflags="$stage1_cflags -fkeep-inline-functions"],
    [AC_MSG_RESULT([no])])

  CFLAGS="$saved_CFLAGS"
fi

a3142 9
# If using ENABLE_BUILD_POSTSTAGE1_WITH_CXX, pass
# --enable-build-with-cxx after stage1.
if test "$ENABLE_BUILD_POSTSTAGE1_WITH_CXX" = "yes"; then
  POSTSTAGE1_CONFIGURE_FLAGS=--enable-build-with-cxx
else
  POSTSTAGE1_CONFIGURE_FLAGS=
fi
AC_SUBST(POSTSTAGE1_CONFIGURE_FLAGS)

a3149 3
case " $configdirs " in
*" ppl "*) compare_exclusions="$compare_exclusions | ppl/src/ppl-config.o" ;;
esac
@


1.167
log
@	PR bootstrap/50461
	* configure.ac (mpfr-dir): When using in-tree MPFR sources
	allow for the fact that from release v3.1.0 of MPFR the source
	files were moved into a src sub-directory.
	* configure: Regenerate.
@
text
@d2128 1
a2128 1
    *) CFLAGS_FOR_TARGET="-O2 $CFLAGS" ;;
d2132 1
a2132 1
    *) CFLAGS_FOR_TARGET="-g $CFLAGS" ;;
d2141 1
a2141 1
    *) CXXFLAGS_FOR_TARGET="-O2 $CXXFLAGS" ;;
d2145 1
a2145 1
    *) CXXFLAGS_FOR_TARGET="-g $CXXFLAGS" ;;
@


1.166
log
@	* configure.ac (ENABLE_GOLD): Consider *-*-nacl* targets ELF.
	* configure: Regenerate.

gold/
	* nacl.cc: New file.
	* nacl.h: New file.
	* Makefile.am (CCFILES, HFILES): Add them.
	* Makefile.in: Regenerate.
	* i386.cc (Output_data_plt_i386_nacl): New class.
	(Output_data_plt_i386_nacl_exec): New class.
	(Output_data_plt_i386_nacl_dyn): New class.
	(Target_i386_nacl): New class.
	(Target_selector_i386_nacl): New class.
	(target_selector_i386): Use it instead of Target_selector_i386.
	* x86_64.cc (Output_data_plt_x86_64_nacl): New class.
	(Target_x86_64_nacl): New class.
	(Target_selector_x86_64_nacl): New class.
	(target_selector_x86_64, target_selector_x32): Use it instead of
	Target_selector_x86_64.
	* arm.cc (Output_data_plt_arm_nacl): New class.
	(Target_arm_nacl): New class.
	(Target_selector_arm_nacl): New class.
	(target_selector_arm, target_selector_armbe): Use it instead of
	Target_selector_arm.

	* target-select.cc (select_target): Take new Input_file* and off_t
	arguments, pass them on to recognize method of selector.
	* object.cc (make_elf_sized_object): Update caller.
	* parameters.cc (parameters_force_valid_target): Likewise.
	* incremental.cc (make_sized_incremental_binary): Likewise.
	* target-select.h: Update decl.
	(Target_selector::recognize): Take new Input_file* argument,
	pass it on to do_recognize.
	(Target_selector::do_recognize): Take new Input_file* argument.
	* freebsd.h (Target_selector_freebsd::do_recognize): Likewise.
	* powerpc.cc (Target_selector_powerpc::do_recognize): Likewise.
	* sparc.cc (Target_selector_sparc::do_recognize): Likewise.
	* testsuite/testfile.cc (Target_selector::do_recognize): Likewise.

	* target.h (Target::Target_info): New members isolate_execinstr
	and rosegment_gap.
	(Target::isolate_execinstr, Target::rosegment_gap): New methods.
	* arm.cc (Target_arm::arm_info): Update initializer.
	* i386.cc (Target_i386::i386_info): Likewise.
	* powerpc.cc (Target_powerpc::powerpc_info): Likewise.
	* sparc.cc (Target_sparc::sparc_info): Likewise.
	* x86_64.cc (Target_x86_64::x86_64_info): Likewise.
	* testsuite/testfile.cc (Target_test::test_target_info): Likewise.
	* layout.cc (Layout::attach_allocated_section_to_segment):
	Take new const Target* argument.  If target->isolate_execinstr(), act
	like --rosegment.
	(Layout::find_first_load_seg): Take new const Target* argument;
	if target->isolate_execinstr(), reject PF_X segments.
	(Layout::relaxation_loop_body): Update caller.
	(Layout::set_segment_offsets): If target->isolate_execinstr(),
	reset file offset to zero when we hit LOAD_SEG, and then do a second
	loop over the segments before LOAD_SEG to reassign offsets after
	addresses have been determined.  Handle target->rosegment_gap().
	(Layout::attach_section_to_segment): Take new const Target* argument;
	pass it to attach_allocated_section_to_segment.
	(Layout::make_output_section): Update caller.
	(Layout::attach_sections_to_segments): Take new const Target* argument;
	pass it to attach_section_to_segment.
	* gold.cc (queue_middle_tasks): Update caller.
	* layout.h (Layout): Update method decls with new arguments.

	* arm.cc (Target_arm::Target_arm): Take optional argument for the
	Target_info pointer to use.
	(Target_arm::do_make_data_plt): New virtual method.
	(Target_arm::make_data_plt): New method that calls it.
	(Target_arm::make_plt_entry): Use it.
	(Output_data_plt_arm::Output_data_plt_arm): Take additional argument
	for the section alignment.
	(Output_data_plt_arm::do_first_plt_entry_offset): New abstract virtual
	method.
	(Output_data_plt_arm::first_plt_entry_offset): Call it.
	(Output_data_plt_arm::do_get_plt_entry_size): New abstract virtual
	method.
	(Output_data_plt_arm::get_plt_entry_size): Call it.
	(Output_data_plt_arm::do_fill_plt_entry): New abstract virtual method.
	(Output_data_plt_arm::fill_plt_entry): New method that calls it.
	(Output_data_plt_arm::do_fill_first_plt_entry): New abstract virtual
	method.
	(Output_data_plt_arm::fill_first_plt_entry): New method that calls it.
	(Output_data_plt_arm::set_final_data_size): Use get_plt_entry_size
	method instead of sizeof(plt_entry).
	(Output_data_plt_arm::add_entry): Likewise.
	Use first_plt_entry_offset method instead of sizeof(first_plt_entry).
	(Target_arm::first_plt_entry_offset): Call method on this->plt_ rather
	than static method.
	(Target_arm::plt_entry_size): Likewise.
	(Output_data_plt_arm::first_plt_entry, Output_data_plt_arm::plt_entry):
	Move to ...
	(Output_data_plt_arm_standard): ... here, new class.
	(Output_data_plt_arm::do_write): Move guts of PLT filling to...
	(Output_data_plt_arm_standard::do_fill_first_plt_entry): ... here ...
	(Output_data_plt_arm_standard::do_fill_plt_entry): ... and here.

	* x86_64.cc (Output_data_plt_x86_64::Output_data_plt_x86_64):
	Take additional argument for the PLT entry size.
	(Output_data_plt_x86_64::get_tlsdesc_plt_offset):
	Use get_plt_entry_size method rather than plt_entry_size variable.
	(Output_data_plt_x86_64::reserve_slot): Likewise.
	(Output_data_plt_x86_64::do_adjust_output_section): Likewise.
	(Output_data_plt_x86_64::add_entry): Likewise.
	(Output_data_plt_x86_64::add_local_ifunc_entry): Likewise.
	(Output_data_plt_x86_64::address_for_global): Likewise.
	(Output_data_plt_x86_64::address_for_local): Likewise.
	(Output_data_plt_x86_64::set_final_data_size): Likewise.
	(Output_data_plt_x86_64::first_plt_entry_offset): Likewise.
	Make method non-static.
	(Output_data_plt_x86_64::do_get_plt_entry_size): New abstract virtual
	method.
	(Output_data_plt_x86_64::get_plt_entry_size): Just call that.
	(Output_data_plt_x86_64::do_add_eh_frame): New abstract virtual method.
	(Output_data_plt_x86_64::add_eh_frame): New method to call it.
	(Output_data_plt_x86_64::do_fill_first_plt_entry): New abstract
	virtual method.
	(Output_data_plt_x86_64::fill_first_plt_entry): New method to call it.
	(Output_data_plt_x86_64::do_fill_plt_entry): New abstract
	virtual method.
	(Output_data_plt_x86_64::fill_plt_entry): New method to call it.
	(Output_data_plt_x86_64::do_fill_tlsdesc_entry): New abstract
	virtual method.
	(Output_data_plt_x86_64::fill_tlsdesc_entry): New method to call it.
	(Output_data_plt_x86_64::plt_entry_size)
	(Output_data_plt_x86_64::first_plt_entry)
	(Output_data_plt_x86_64::plt_entry)
	(Output_data_plt_x86_64::tlsdesc_plt_entry)
	(Output_data_plt_x86_64::plt_eh_frame_fde_size)
	(Output_data_plt_x86_64::plt_eh_frame_fde): Move to ...
	(Output_data_plt_x86_64_standard): ... here, new class.
	(Target_x86_64::Target_x86_64): Take optional argument for the
	Target_info pointer to use.
	(Target_x86_64::do_make_data_plt): New virtual method.
	(Target_x86_64::make_data_plt): New method to call it.
	(Target_x86_64::init_got_plt_for_update): Use that.
	Call this->plt_->add_eh_frame method here.
	(Output_data_plt_x86_64::init):	Don't do add_eh_frame_for_plt here.
	(Target_x86_64::first_plt_entry_offset): Call method on this->plt_
	rather than static method.
	(Target_x86_64::plt_entry_size): Likewise.
	(Output_data_plt_x86_64::do_write): Use get_plt_entry_size method
	rather than plt_entry_size variable.  Move guts of PLT filling to...
	(Output_data_plt_x86_64_standard::do_fill_first_plt_entry): ... here ...
	(Output_data_plt_x86_64_standard::do_fill_plt_entry): ... and here ...
	(Output_data_plt_x86_64_standard::do_fill_tlsdesc_entry): ... and here.

	* i386.cc (Output_data_plt_i386::Output_data_plt_i386): Take
	additional argument for the section alignment.
	Don't do add_eh_frame_for_plt here.
	(Output_data_plt_i386::first_plt_entry_offset): Make the method
	non-static.  Use get_plt_entry_size method rather than plt_entry_size
	variable.
	(Output_data_plt_i386::do_get_plt_entry_size): New abstract virtual
	method.
	(Output_data_plt_i386::get_plt_entry_size): Call it.
	(Output_data_plt_i386::do_add_eh_frame): New abstract virtual method.
	(Output_data_plt_i386::add_eh_frame): New method to call it.
	(Output_data_plt_i386::do_fill_first_plt_entry): New abstract virtual
	method.
	(Output_data_plt_i386::fill_first_plt_entry): New method to call it.
	(Output_data_plt_i386::do_fill_plt_entry): New abstract virtual
	method.
	(Output_data_plt_i386::fill_plt_entry): New method to call it.
	(Output_data_plt_i386::set_final_data_size): Use get_plt_entry_size
	method instead of plt_entry_size.
	(Output_data_plt_i386::plt_entry_size)
	(Output_data_plt_i386::plt_eh_frame_fde_size)
	(Output_data_plt_i386::plt_eh_frame_fde): Move to ...
	(Output_data_plt_i386_standard): ... here, new class.
	(Output_data_plt_i386_exec): New class.
	(Output_data_plt_i386::exec_first_plt_entry): Move to ...
	(Output_data_plt_i386_exec::first_plt_entry): ... here.
	(Output_data_plt_i386::exec_plt_entry): Move to ...
	(Output_data_plt_i386_exec::plt_entry): ... here.
	(Output_data_plt_i386_dyn): New class.
	(Output_data_plt_i386::first_plt_entry): Move to ...
	(Output_data_plt_i386_dyn::first_plt_entry): ... here.
	(Output_data_plt_i386::dyn_plt_entry): Move to ...
	(Output_data_plt_i386_dyn::plt_entry): ... here.
	(Target_i386::Target_i386): Take optional argument for the Target_info
	pointer to use.
	(Target_i386::do_make_data_plt): New virtual method.
	(Target_i386::make_data_plt): New method to call it.
	(Target_i386::make_plt_section): Use that.
	Call this->plt_->add_eh_frame method here.
	(Output_data_plt_i386::add_entry): Use get_plt_entry_size method
	rather than plt_entry_size variable.
	(Output_data_plt_i386::add_local_ifunc_entry): Likewise.
	(Output_data_plt_i386::address_for_local): Likewise.
	(Output_data_plt_i386::do_write): Likewise.
	Move guts of PLT filling to...
	(Output_data_plt_i386_exec::do_fill_first_plt_entry): ... here ...
	(Output_data_plt_i386_exec::do_fill_plt_entry): ... and here ...
	(Output_data_plt_i386_dyn::do_fill_first_plt_entry): ... and here ...
	(Output_data_plt_i386_dyn::do_fill_plt_entry): ... and here.

Change-Id: Id24b95600489835ff5e860a39c147203d4380c2b
@
text
@d1280 10
a1289 3
  gmplibs='-L$$r/$(HOST_SUBDIR)/mpfr/'"$lt_cv_objdir $gmplibs"
  gmpinc='-I$$r/$(HOST_SUBDIR)/mpfr -I$$s/mpfr '"$gmpinc"
  extra_mpc_mpfr_configure_flags='--with-mpfr-include=$$s/mpfr --with-mpfr-lib=$$r/$(HOST_SUBDIR)/mpfr/'"$lt_cv_objdir"
@


1.165
log
@	* configure.ac (ia64*-*-*vms*): Add support for ld.
	* configure: Regenerate.

	* scripttempl/ia64vms.sc: New file.
	* emultempl/vms.em (_before_parse): Support for ia64.
	(elf64-ia64-vms): New fragment for ia64.
	* emulparams/elf64_ia64_vms.sh: New file.
	* configure.tgt (ia64-*-*vms*): Add.
	* Makefile.am (ALL_64_EMULATION_SOURCES): Add eelf64_ia64_vms.c
	(eelf64_ia64_vms.c): New rule.
	* Makefile.in: Regenerate.

	* elflink.c (elf_link_output_extsym): Add a guard.
	(bfd_elf_final_link): Remove assertion.
	(bfd_elf_final_link): Add a guard.
	* elfnn-ia64.c (INCLUDE_IA64_VMS): Removed.
	(elfNN_vms_section_from_shdr, elfNN_vms_object_p)
	(elfNN_vms_post_process_headers, elfNN_vms_section_processing)
	(elfNN_vms_final_write_processing, elfNN_vms_close_and_cleanup):
	Remove.
	(elfNN-ia64-vms target): Move to ...
	* elf64-ia64-vms.c: New file.
	* configure.in (bfd_elf64_ia64_vms_vec): Add elf64-ia64-vms.lo
	* Makefile.am (BFD64_BACKENDS): Add elf64-ia64-vms.lo.
	(BFD64_BACKENDS_CFILES): Ad elf64-ia64-vms.c.
	* configure: Regenerate.
	* Makefile.in: Regenerate.
@
text
@d115 1
a115 1
# Subdirs will be configured in the order listed in build_configdirs, 
d118 2
a119 2
# Dependency sorting is only needed when *configuration* must be done in 
# a particular order.  In all cases a dependency should be specified in 
d212 1
a212 1
fi	
d248 1
a248 1
# some tools are so dependent upon X11 that if we're not building with X, 
d256 1
a256 1
    enable_gdbtk=no 
d316 1
a316 1
      | *-*-solaris2* | *-*-nto*)
d382 1
a382 1
# Remove more programs from consideration, based on the host or 
d692 1
a692 1
    ;; 
d777 1
a777 1
    ;; 
d1081 1
a1081 1
  hppa*-*)	
d1777 1
a1777 1
        # From the config-lang.in, get $language, $target_libs, 
d2022 1
a2022 1
  j=`echo $i | sed -e s/build-//g` 
d2039 1
a2039 1
  j=`echo $i | sed -e s/target-//g` 
d2090 1
a2090 1
AC_ARG_WITH([build-sysroot], 
d2181 2
a2182 2
# 
# The command line options always override the explicit settings in 
d2185 1
a2185 1
# If the default for a toolchain is to use GNU as and ld, and you don't 
d2286 1
a2286 1
    # nm and ar from AIX 4.3 and above require -X32_64 flag to all ar and nm 
d2360 1
a2360 1
fi 
d2730 1
a2730 1
# quotes, because this will be expanded first by make and then by the shell. 
d3055 1
a3055 1
AC_ARG_WITH([build-time-tools], 
d3160 1
a3160 1
fi	
@


1.164
log
@	* configure.ac (enable_libgomp): Remove *-*-irix6*.
	(unsupported_languages): Remove mips-sgi-irix6.*.
	(noconfigdirs): Don't add ${libgcj} for mips*-*-irix6*.
	(with_stabs): Remove.
	* configure: Regenerate.
@
text
@d2 1
a2 1
#   2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011
d522 3
a524 1
    # Dereferencing -1 is a compile-time error
d927 1
a927 2
    # No ld support yet.
    noconfigdirs="$noconfigdirs libgui itcl ld"
@


1.163
log
@	* configure.ac (enable_libgomp): Remove *-*-osf*.
	(with_stabs): Remove alpha*-*-osf*.
	* configure: Regenerate.
@
text
@d486 1
a486 1
    *-*-solaris2* | *-*-irix6* | *-*-hpux11*)
d572 1
a572 1
  mips-sgi-irix6.* | mips*-*-rtems*)
a687 7
  mips*-*-irix6*)
    # Linking libjava exceeds command-line length limits on at least
    # IRIX 6.2, but not on IRIX 6.5.
    # Also, boehm-gc won't build on IRIX 6.5, according to Jeffrey Oldham
    # <oldham@@codesourcery.com>
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
a2326 12
# Default to using --with-stabs for certain targets.
if test x${with_stabs} = x ; then
  case "${target}" in
  mips*-*-irix[[56]]*)
    ;;
  mips*-*-*)
    with_stabs=yes;
    extra_host_args="${extra_host_args} --with-stabs"
    ;;
  esac
fi

@


1.162
log
@2012-03-05  Tristan Gingold  <gingold@@adacore.com>

	* configure.ac: Enable gdb and readline for ia64*-*-*vms*.
	* configure: Regenerate.
@
text
@d486 1
a486 1
    *-*-solaris2* | *-*-irix6* | *-*-osf* | *-*-hpux11*)
d2339 1
a2339 1
  mips*-*-* | alpha*-*-osf*)
@


1.161
log
@2011-11-09  Roland McGrath  <mcgrathr@@google.com>
* configure.ac: Add tool checks for READELF and READELF_FOR_TARGET.
* configure: Rebuild.
* Makefile.def (flags_to_pass): Add READELF_FOR_TARGET.
* Makefile.tpl (READELF, READELF_FOR_TARGET): New variables.
(HOST_EXPORTS): Add READELF, READELF_FOR_TARGET.
(BASE_FLAGS_TO_PASS): Add READELF_FOR_TARGET.
(BASE_TARGET_EXPORTS, EXTRA_HOST_FLAGS, EXTRA_TARGET_FLAGS):
Add READELF.
* Makefile.in: Rebuild.
@
text
@d932 2
a933 2
    # No gdb or ld support yet.
    noconfigdirs="$noconfigdirs readline libgui itcl gdb ld"
@


1.160
log
@Merge libitm changes to configure.ac from gcc master.
@
text
@d3066 1
d3100 1
d3130 1
@


1.159
log
@[.]
	* configure.ac (rl78-*-*) New case.
	* configure: Regenerate.

[bfd]
	* Makefile.am (ALL_MACHINES): Add cpu-rl78.lo.
	(ALL_MACHINES_CFILES): Add cpu-rl78.c.
	(BFD32_BACKENDS): Add elf32-rl78.lo.
	(BFD32_BACKENDS_CFILES): Add elf32-rl78.c.
	(Makefile.in): Regenerate.
	* archures.c (bfd_architecture): Define bfd_arch_rl78.
	(bfd_archures_list): Add bfd_rl78_arch.
	* config.bfd: Add rl78-*-elf.
	* configure.in: Add bfd_elf32_rl78_vec.
	* reloc.c (bfd_reloc_code_type): Add BFD_RELOC_RL78_* relocations.
	* targets.c (bfd_target_vector): Add bfd_elf32_rl78_vec.
	* Makefile.in: Regenerate.
	* bfd-in2.h: Regenerate.
	* configure: Regenerate.
	* libbfd.h: Regenerate.
	* cpu-rl78.c: New file.
	* elf32-rl78.c: New file.

[binutils]
	* readelf.c: Include elf/rl78.h
	(guess_is_rela): Handle EM_RL78.
	(dump_relocations): Likewise.
	(get_machine_name): Likewise.
	(is_32bit_abs_reloc): Likewise.
	* NEWS: Mention addition of RL78 support.
	* MAINTAINERS: Add myself as RL78 port maintainer.

[gas]
	* Makefile.am (TARGET_CPU_CFILES): Add tc-rl78.c.
	(TARGET_CPU_HFILES): Add rc-rl78.h.
	(EXTRA_DIST): Add rl78-parse.c and rl78-parse.y.
	(rl78-parse.c, rl78-parse.h, rl78-parse.o, rl78-defs.h): New rules.
	* Makefile.in: Regenerate.
	* configure.in: Add rl78 case.
	* configure: Regenerate.
	* configure.tgt: Add rl78 case.
	* config/rl78-defs.h: New file.
	* config/rl78-parse.y: New file.
	* config/tc-rl78.c: New file.
	* config/tc-rl78.h: New file.
	* NEWS: Add Renesas RL78.

	* doc/Makefile.am (c-rl78.texi): New.
	* doc/Makefile.in: Likewise.
	* doc/all.texi: Enable it.
	* doc/as.texi: Add it.

[include]
	* dis-asm.h (print_insn_rl78): Declare.

[include/elf]
	* common.h (EM_RL78, EM_78K0R): New.
	* rl78.h: New.

[include/opcode]
	* rl78.h: New file.

[ld]
	* Makefile.am (ALL_EMULATION_SOURCES): Add eelf32rl78.c.
	(+eelf32rl78.c): New rule.
	* Makefile.in: Regenerate.
	* configure.tgt: Add rl78-*-* case.
	* emulparams/elf32rl78.sh: New file.
	* NEWS: Mention addition of Renesas RL78 support.

[opcodes]
	* Makefile.am (TARGET_LIBOPCODES_CFILES): Add rl78-decode.c and
	rl78-dis.c.
	(MAINTAINERCLEANFILES): Add rl78-decode.c.
	(rl78-decode.c): New rule, built from rl78-decode.opc and opc2c.
	* Makefile.in: Regenerate.
	* configure.in: Add bfd_rl78_arch case.
	* configure: Regenerate.
	* disassemble.c: Define ARCH_rl78.
	(disassembler): Add ARCH_rl78 case.
	* rl78-decode.c: New file.
	* rl78-decode.opc: New file.
	* rl78-dis.c: New file.
@
text
@d157 1
d496 16
@


1.158
log
@	Merge from gcc:

	2011-08-14  Yao Qi  <yao@@codesourcery.com>
	* configure.ac (tic6x-*-*): Remove gdb from noconfigdirs.
	* configure: Regenerate.
@
text
@d504 4
@


1.157
log
@	Merge from gcc:

	2011-07-26  Ian Lance Taylor  <iant@@google.com>
	* configure.ac: Set have_compiler based on whether gcc directory
	exists, rather than on whether gcc is in configdirs.
	* configure: Rebuild.

	2011-07-20  David Edelsohn  <dje.gcc@@gmail.com>
	* Makefile.tpl (POSTSTAGE1_CONFIGURE_FLAGS): Add libsupc++ to
	link directories.
	* Makefile.in: Rebuild.

	2011-07-20  Ian Lance Taylor  <iant@@google.com>
	PR bootstrap/49787
	* configure.ac: Move --enable-bootstrap handling earlier in file.
	If --enable-bootstrap and either --enable-build-with-cxx or
	--enable-build-poststage1-with-cxx, enable C++ automatically.
	* configure: Rebuild.

	2011-07-19  Ian Lance Taylor  <iant@@google.com>
	* configure.ac: Add --enable-build-poststage1-with-cxx.  If set,
	make C++ a boot_language.  Set and substitute
	POSTSTAGE1_CONFIGURE_FLAGS.
	* Makefile.tpl (POSTSTAGE1_CONFIGURE_FLAGS): New variable.
	(STAGE[+id+]_CONFIGURE_FLAGS): Add $(POSTSTAGE1_CONFIGURE_FLAGS).
	* configure, Makefile.in: Rebuild.

	2011-07-16  Jason Merrill  <jason@@redhat.com>
	* Makefile.def (language=c++): Add check-c++0x and
	check-target-libmudflap-c++.
	* Makefile.tpl (check-target-libmudflap-c++): New.
	* Makefile.in: Regenerate.

	2011-07-16  Matthias Klose  <doko@@ubuntu.com>
	* Makefile.tpl (EXTRA_CONFIGARGS_LIBJAVA): Define.
	* Makefile.def (target_modules/libjava): Pass
	$(EXTRA_CONFIGARGS_LIBJAVA).
	* configure.ac: Pass --disable-static in EXTRA_CONFIGARGS_LIBJAVA,
	if not configured with --enable-static-libjava.
	* Makefile.in: Regenerate.
	* configure: Likewise.

	2011-06-22  Hans-Peter Nilsson  <hp@@axis.com>
	PR regression/47836
	PR bootstrap/23656
	PR other/47733
	PR bootstrap/49247
	PR c/48825
	* configure.ac (target_libraries): Remove target-libiberty.
	Remove case-statement setting skipdirs=target-libiberty for
	multiple targets.  Remove checking target_configdirs and
	removing target-libiberty but keeping target-libgcc if
	otherwise empty.
	* Makefile.def (target_modules): Don't add libiberty.
	(dependencies): Remove all traces of target-libiberty.
	* configure, Makefile.in: Regenerate.
@
text
@d1023 1
a1023 1
    noconfigdirs="$noconfigdirs gdb sim"
@


1.156
log
@	PR target/39150
	* configure.ac (i[3456789]86-*-solaris2*): Also accept
	x86_64-*-solaris2.1[0-9]*.
	* configure: Regenerate.
@
text
@d152 1
a152 1
#
a153 1
		target-libiberty \
d446 14
a505 45
# Disable target libiberty for some systems.
case "${target}" in
  *-*-kaos*)
    # Remove unsupported stuff on all kaOS configurations.
    skipdirs="target-libiberty"
    ;;
  *-*-netbsd*)
    # Skip some stuff on all NetBSD configurations.
    noconfigdirs="$noconfigdirs target-libiberty"
    ;;
  *-*-netware*)
    noconfigdirs="$noconfigdirs target-libiberty"
    ;;
  *-*-rtems*)
    skipdirs="${skipdirs} target-libiberty"
    ;;
  *-*-tpf*)
    noconfigdirs="$noconfigdirs target-libiberty"
    ;;
  *-*-vxworks*)
    noconfigdirs="$noconfigdirs target-libiberty"
    ;;
  sh*-*-pe|mips*-*-pe|*arm-wince-pe)
    noconfigdirs="$noconfigdirs target-libiberty"
    ;;
  arm*-*-symbianelf*)
    noconfigdirs="$noconfigdirs target-libiberty"
    ;;
  avr-*-*)
    noconfigdirs="$noconfigdirs target-libiberty"
    ;;
  m68hc11-*-*|m6811-*-*|m68hc12-*-*|m6812-*-*)
    noconfigdirs="$noconfigdirs target-libiberty"
    ;;
  picochip-*-*)
    noconfigdirs="$noconfigdirs target-libiberty"
    ;;
  mips*-sde-elf*)
    skipdirs="$skipdirs target-libiberty"
    ;;
  ip2k-*-*)
    noconfigdirs="$noconfigdirs target-libiberty"
    ;;
esac

d1136 43
d1186 7
d1674 13
d1776 5
a1780 3
	if test "$language" = "c++" \
	   && test "$ENABLE_BUILD_WITH_CXX" = "yes"; then
	  boot_language=yes
a2000 21
# Sometimes the tools are distributed with libiberty but with no other
# libraries.  In that case, we don't want to build target-libiberty.
# Don't let libgcc imply libiberty either.
if test -n "${target_configdirs}" ; then
  libgcc=
  others=
  for i in `echo ${target_configdirs} | sed -e s/target-//g` ; do
    if test "$i" = "libgcc"; then
      libgcc=target-libgcc
    elif test "$i" != "libiberty" ; then
      if test -r $srcdir/$i/configure ; then
	others=yes;
	break;
      fi
    fi
  done
  if test -z "${others}" ; then
    target_configdirs=$libgcc
  fi
fi

a2436 49
AC_ARG_ENABLE([bootstrap],
[AS_HELP_STRING([--enable-bootstrap],
		[enable bootstrapping @@<:@@yes if native build@@:>@@])],,
enable_bootstrap=default)

# Issue errors and warnings for invalid/strange bootstrap combinations.
case "$configdirs" in
  *gcc*) have_compiler=yes ;;
  *) have_compiler=no ;;
esac

case "$have_compiler:$host:$target:$enable_bootstrap" in
  *:*:*:no) ;;

  # Default behavior.  Enable bootstrap if we have a compiler
  # and we are in a native configuration.
  yes:$build:$build:default)
    enable_bootstrap=yes ;;

  *:*:*:default)
    enable_bootstrap=no ;;

  # We have a compiler and we are in a native configuration, bootstrap is ok
  yes:$build:$build:yes)
    ;;

  # Other configurations, but we have a compiler.  Assume the user knows
  # what he's doing.
  yes:*:*:yes)
    AC_MSG_WARN([trying to bootstrap a cross compiler])
    ;;

  # No compiler: if they passed --enable-bootstrap explicitly, fail
  no:*:*:yes)
    AC_MSG_ERROR([cannot bootstrap without a compiler]) ;;

  # Fail if wrong command line
  *)
    AC_MSG_ERROR([invalid option for --enable-bootstrap])
    ;;
esac

case ",$enable_languages,:$ENABLE_BUILD_WITH_CXX:$enable_bootstrap" in
  *,c++,*:yes:yes) ;;
  *:yes:yes)
    AC_MSG_ERROR([bootstrapping with --enable-build-with-cxx requires c++ in --enable-languages])
    ;;
esac

d3221 9
@


1.155
log
@	* configure.ac (tilepro-*-*) New case.
	(tilegx-*-*): Likewise.
	* configure: Regenerate.
@
text
@d972 1
a972 1
  i[[3456789]]86-*-solaris2*)
@


1.154
log
@2011-05-08  Doug Kwan  <dougkwan@@google.com>

	Merge from gcc:

	2011-05-08  Doug Kwan  <dougkwan@@google.com>

		* configure.ac: Propagate LDFLAGS_FOR_TARGET.
		* configure: Regenerated.
		* Makefile.tpl (LDFLAGS_FOR_TARGET): Use LDFLAGS_FOR_TARGET
		value from configure.
		* Makefile.in: Regenerated.
@
text
@d1057 3
@


1.153
log
@	* configure.ac (alpha*-dec-osf*, i[[3456789]]86-*-rdos*,
	sh*-*-pe|mips*-*-pe|arm-wince-pe, sparc-*-sunos4*, *-*-aix*,
	*-*-beos*, *-*-chorusos, *-*-dragonfly*, *-*-freebsd*, *-*-linux*
	| *-*-gnu* | *-*-k*bsd*-gnu | *-*-kopensolaris*-gnu, *-*-lynxos*,
	*-*-mingw*, *-*-netbsd*, *-*-netware*, *-*-tpf*, *-*-uclinux*,
	*-*-vxworks*): Disable newlib and libgloss in separate case
	statement.
	(i[[3456789]]86-*-linux*): Move logic allowing newlib to be built
	to separate case statement.
	(*-*-chorusos, *-*-dragonfly*, *-*-freebsd*, *-*-netbsd*,
	*-*-netware*, *-*-tpf*, *-*-uclinux*, *-*-vxworks*,
	alpha*-dec-osf*, alpha*-*-linux*, am33_2.0-*-linux*, sh-*-linux*,
	sh*-*-pe|mips*-*-pe|*arm-wince-pe, arm-*-coff, arm-*-elf* |
	arm*-*-eabi*, arm*-*-linux-gnueabi, arm*-*-symbianelf*, avr-*-*,
	bfin-*-*, cris-*-* | crisv32-*-*, frv-*-*, i[[3456789]]86-*-coff |
	i[[3456789]]86-*-elf, i[[3456789]]86-w64-mingw*,
	i[[3456789]]86-*-mingw*, x86_64-*-mingw*,
	i[[3456789]]86-*-interix*, i[[3456789]]86-*-beos*,
	i[[3456789]]86-*-rdos*, m32r-*-*,
	m68hc11-*-*|m6811-*-*|m68hc12-*-*|m6812-*-*, m68k-*-elf*, m68*-*-*
	| fido-*-*, powerpc-*-aix*, powerpc-*-beos*, powerpc-*-eabi,
	powerpc-*-eabi* | powerpcle-*-eabi* | powerpc-*-rtems*,
	rs6000-*-lynxos*, rs6000-*-aix*, mips*-*-linux*, sparclet-*-aout*
	| sparc86x-*-*, sparc-*-elf*, sparc64-*-elf*, sparclite-*-*,
	sparc-*-sunos4*, sparc-*-solaris* | sparc64-*-solaris* |
	sparcv9-*-solaris*, *-*-linux* | *-*-gnu* | *-*-k*bsd*-gnu |
	*-*-kopensolaris*-gnu, *-*-lynxos*, *-*-*): Don't disable newlib
	and libgloss in main case over targets.  Remove most empty cases
	in main case over targets.
	* configure: Regenerate.
@
text
@d2113 2
@


1.152
log
@	* configure.ac: Remove code setting special library locations for
	hppa*64*-*-hpux11*.  Remove code setting compiler for
	sparc-sun-solaris2*.
	* configure: Regenerate.
@
text
@d747 1
d749 30
d782 35
a833 1
    noconfigdirs="$noconfigdirs target-newlib target-libgloss"
a835 1
    noconfigdirs="$noconfigdirs target-newlib target-libgloss"
a845 2
    # Skip some stuff on all NetBSD configurations.
    noconfigdirs="$noconfigdirs target-newlib target-libgloss"
a847 1
    noconfigdirs="$noconfigdirs target-newlib target-libgloss"
d854 1
a854 1
    noconfigdirs="$noconfigdirs target-newlib target-libgloss gdb tcl tk libgui itcl"
d857 1
a857 1
    noconfigdirs="$noconfigdirs target-newlib target-libgloss target-rda"
a859 1
    noconfigdirs="$noconfigdirs target-newlib target-libgloss"
a862 1
    # newlib is not 64 bit ready.
d864 1
a864 1
    noconfigdirs="$noconfigdirs gas ld target-newlib target-libgloss"
a868 4
  alpha*-*-linux*)
    # newlib is not 64 bit ready
    noconfigdirs="$noconfigdirs target-newlib target-libgloss"
    ;;
a872 6
  am33_2.0-*-linux*)
    noconfigdirs="$noconfigdirs target-newlib target-libgloss"
    ;;
  sh-*-linux*)
    noconfigdirs="$noconfigdirs target-newlib target-libgloss"
    ;;    
a874 1
    noconfigdirs="$noconfigdirs target-newlib"
a878 11
  arm-*-coff)
    ;;
  arm-*-elf* | arm*-*-eabi* )
    ;;
  arm*-*-linux-gnueabi)
    case ${with_newlib} in
      no) noconfigdirs="$noconfigdirs target-newlib target-libgloss"
    esac
    ;;
  arm*-*-symbianelf*)
    ;;
a884 4
  avr-*-*)
    ;;
  bfin-*-*)
    ;;
a893 6
  cris-*-* | crisv32-*-*)
    case "${target}" in
      *-*-linux*)
	noconfigdirs="$noconfigdirs target-newlib target-libgloss";;
    esac
    ;;
a902 2
  frv-*-*)
    ;;
a945 14
  i[[3456789]]86-*-coff | i[[3456789]]86-*-elf)
    ;;
  i[[3456789]]86-*-linux*)
    # This section makes it possible to build newlib natively on linux.
    # If we are using a cross compiler then don't configure newlib.
    if test x${is_cross_compiler} != xno ; then
      noconfigdirs="$noconfigdirs target-newlib"
    fi
    noconfigdirs="$noconfigdirs target-libgloss"
    # If we are not using a cross compiler, do configure newlib.
    # Note however, that newlib will only be configured in this situation
    # if the --with-newlib option has been given, because otherwise
    # 'target-newlib' will appear in skipdirs.
    ;;
a946 1
    noconfigdirs="$noconfigdirs target-libgloss target-newlib"
a949 4
    noconfigdirs="$noconfigdirs target-libgloss target-newlib"
    ;;
  x86_64-*-mingw*)
    noconfigdirs="$noconfigdirs target-libgloss target-newlib"
a960 2
  i[[3456789]]86-*-interix* )
    ;;
d979 1
a979 1
    noconfigdirs="$noconfigdirs gdb target-newlib target-libgloss"
d982 1
a982 9
    noconfigdirs="$noconfigdirs gdb target-newlib target-libgloss"
    ;;
  m32r-*-*)
    ;;
  m68hc11-*-*|m6811-*-*|m68hc12-*-*|m6812-*-*)
    ;;
  m68k-*-elf*)
    ;;
  m68*-*-* | fido-*-*)
d992 1
a992 1
    noconfigdirs="$noconfigdirs gprof target-libgloss target-newlib"
d1005 1
a1005 5
    noconfigdirs="$noconfigdirs gdb target-newlib target-libgloss"
    ;;
  powerpc-*-eabi)
    ;;
  powerpc-*-eabi* | powerpcle-*-eabi* | powerpc-*-rtems* )
d1008 1
a1008 1
    noconfigdirs="$noconfigdirs target-newlib gprof"
d1011 1
a1011 1
    noconfigdirs="$noconfigdirs gprof target-libgloss target-newlib"
a1036 1
    noconfigdirs="$noconfigdirs target-newlib target-libgloss"
a1048 8
  sparclet-*-aout* | sparc86x-*-*)
    ;;
  sparc-*-elf*)
    ;;
  sparc64-*-elf*)
    ;;
  sparclite-*-*)
    ;;
d1050 1
a1050 3
    if test x${is_cross_compiler} != xno ; then
           noconfigdirs="$noconfigdirs gdb target-newlib target-libgloss"
    else
a1053 2
  sparc-*-solaris* | sparc64-*-solaris* | sparcv9-*-solaris*)
    ;;
a1062 8
  *-*-linux* | *-*-gnu* | *-*-k*bsd*-gnu | *-*-kopensolaris*-gnu)
    noconfigdirs="$noconfigdirs target-newlib target-libgloss"
    ;;
  *-*-lynxos*)
    noconfigdirs="$noconfigdirs target-newlib target-libgloss"
    ;; 
  *-*-*)
    ;;
@


1.151
log
@	* configure.ac: Separate libgloss_dir settings from general case
	over targets.
	* configure: Regenerate.
@
text
@a2336 8
# hpux11 in 64bit mode has libraries in a weird place.  Arrange to find
# them automatically.
case "${host}" in
  hppa*64*-*-hpux11*)	
    extra_host_args="$extra_host_args -x-libraries=/usr/lib/pa20_64 -x-includes=/usr/X11R6/include"
    ;;
esac

a2379 28
# The Solaris /usr/ucb/cc compiler does not appear to work.
case "${host}" in
  sparc-sun-solaris2*)
      CCBASE="`echo ${CC-cc} | sed 's/ .*$//'`"
      if test "`type $CCBASE | sed 's/^[[^/]]*//'`" = "/usr/ucb/cc" ; then
          could_use=
          test -d /opt/SUNWspro/bin && could_use="/opt/SUNWspro/bin"
          if test -d /opt/cygnus/bin ; then
              if test "$could_use" = "" ; then
                  could_use="/opt/cygnus/bin"
              else
                  could_use="$could_use or /opt/cygnus/bin"
              fi
          fi
        if test "$could_use" = "" ; then
            echo "Warning: compilation may fail because you're using"
            echo "/usr/ucb/cc.  You should change your PATH or CC "
            echo "variable and rerun configure."
        else
            echo "Warning: compilation may fail because you're using"
            echo "/usr/ucb/cc, when you should use the C compiler from"
            echo "$could_use.  You should change your"
            echo "PATH or CC variable and rerun configure."
        fi
      fi
  ;;
esac

@


1.150
log
@	* configure.ac (*-*-dragonfly*, *-*-freebsd*, *-*-netbsd*,
	alpha*-dec-osf*, alpha*-*-linux*, alpha*-*-*, sh-*-linux*,
	arm-*-elf* | arm*-*-eabi*, arm*-*-linux-gnueabi, frv-*-*): Remove
	cases in libgcj-disabling case statement.
	(hppa*64*-*-linux*): Set unsupported_languages instead of
	disabling target-zlib.
	(hppa*64*-*-*): Restrict case in libgcj-disabling case statement
	to hppa*64*-*-hpux*.
	(hppa*-*-*): Restrict case in libgcj-disabling case statement to
	hppa*-*-hpux*.
	(ia64*-*-elf*, ia64*-**-hpux*, i[[3456789]]86-*-elf,
	i[[3456789]]86-*-linux*, *-*-cygwin*, i[[3456789]]86-*-interix*,
	i[[3456789]]86-*-solaris2*, m32r-*-*, m68k-*-elf*, m68*-*-* |
	fido-*-*, powerpc-*-eabi, powerpc-*-eabi* | powerpcle-*-eabi* |
	powerpc-*-rtems*, mips*-*-linux*, mips*-*-*, sh-*-* | sh64-*-*,
	sparc-*-elf*, sparc64-*-elf*, sparc-*-solaris* |
	sparc64-*-solaris* | sparcv9-*-solaris*, *-*-linux* | *-*-gnu* |
	*-*-k*bsd*-gnu | *-*-kopensolaris*-gnu, *-*-*): Remove cases in
	libgcj-disabling case statement.
	* configure: Regenerate.
@
text
@d715 33
a826 1
    libgloss_dir=wince
a831 1
    libgloss_dir=arm
a833 1
    libgloss_dir=arm
a838 1
    libgloss_dir=arm
a840 1
    libgloss_dir=arm
a865 1
    libgloss_dir=cris
a901 1
    libgloss_dir=pa
a921 1
    libgloss_dir=i386
a982 1
    libgloss_dir=m68hc11
a986 1
    libgloss_dir=m68k
a1006 1
    libgloss_dir=rs6000
a1011 1
    libgloss_dir=rs6000
a1013 1
    libgloss_dir=rs6000
a1033 1
    libgloss_dir=mips
a1048 1
    libgloss_dir=mips
a1058 1
    libgloss_dir=sparc
a1062 1
    libgloss_dir=sparc
a1064 1
    libgloss_dir=sparc
@


1.149
log
@	* configure.ac: Disable Java for targets not supporting libffi.
	(*-*-chorusos, *-*-kaos*, am33_2.0-*-linux*, sh*-*-pe|mips*-*-pe):
	Remove cases in Java-disabling statement.
	(*arm-wince-pe): Change to arm-wince-pe.
	(arc-*-*, arm-*-coff, arm-*-pe*, arm-*-riscix*, avr-*-*): Remove
	cases in Java-disabling statement.
	(bfin-*-*): Don't disable Java again.
	(c4x-*-* | tic4x-*-*, tic54x-*-*, cr16-*-*, d10v-*-*, d30v-*-*,
	fr30-*-elf*, moxie-*-*, h8300*-*-*, h8500-*-*, hppa1.1-*-osf* |
	hppa1.1-*-bsd*, hppa*-*-*elf* | hppa*-*-lites* | hppa*-*-openbsd*,
	hppa*-*-pro*, i960-*-*, i[[3456789]]86-*-coff,
	i[[3456789]]86-*-pe, i[[3456789]]86-*-sco3.2v5*,
	i[[3456789]]86-*-sco*, i[[3456789]]86-*-sysv4*,
	i[[3456789]]86-*-beos*, i[[3456789]]86-*-rdos*,
	m68hc11-*-*|m6811-*-*|m68hc12-*-*|m6812-*-*): Remove cases in
	Java-disabling statement.
	(mmix-*-*): Don't disable Java again.
	(mt-*-*, powerpc*-*-winnt* | powerpc*-*-pe*, powerpcle-*-solaris*,
	powerpc-*-beos*, rs6000-*-lynxos*, rs6000-*-*, m68k-apollo-*,
	microblaze*, mips*-sde-elf*, mips*-*-irix5*, mips*-*-bsd*,
	sparclet-*-aout* | sparc86x-*-*, sparclite-*-*, sparc-*-sunos4*,
	tic6x-*-*, v810-*-*, vax-*-*): Remove cases in Java-disabling
	statement.
	* configure: Regenerate.
@
text
@a624 23
  *-*-dragonfly*)
    ;;
  *-*-freebsd*)
    # Skip some stuff that's unsupported on some FreeBSD configurations.
    case "${target}" in
      i*86-*-*) ;;
      alpha*-*-*) ;;
      x86_64-*-*) ;;
      *)
	noconfigdirs="$noconfigdirs ${libgcj}"
	;;
    esac
    ;;
  *-*-netbsd*)
    # Skip some stuff that's unsupported on some NetBSD configurations.
    case "${target}" in
      i*86-*-netbsdelf*) ;;
      arm*-*-netbsdelf*) ;;
      *)
	noconfigdirs="$noconfigdirs ${libgcj}"
	;;
    esac
    ;;
a639 2
  alpha*-dec-osf*)
    ;;
a642 8
  alpha*-*-linux*)
    ;;
  alpha*-*-*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
  sh-*-linux*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;    
a645 5
  arm-*-elf* | arm*-*-eabi* )
    noconfigdirs="$noconfigdirs target-libffi"
    ;;
  arm*-*-linux-gnueabi)
    ;;
a660 3
  frv-*-*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
d665 1
a665 1
    noconfigdirs="$noconfigdirs target-zlib"
d667 1
a667 3
  hppa*-*-linux*)
    ;;
  hppa*64*-*-*)
d672 1
a672 1
  hppa*-*-*)
a676 4
  ia64*-*-elf*)
    ;;
  ia64*-**-hpux*)
    ;;
a679 5
  i[[3456789]]86-*-elf)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
  i[[3456789]]86-*-linux*)
    ;;
a688 14
  *-*-cygwin*)
    ;;
  i[[3456789]]86-*-interix* )
    ;;
  i[[3456789]]86-*-solaris2*)
    ;;
  m32r-*-*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
  m68k-*-elf*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
  m68*-*-* | fido-*-*)
    ;;
a695 5
  powerpc-*-eabi)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
  powerpc-*-eabi* | powerpcle-*-eabi* | powerpc-*-rtems* )
    ;;
a705 18
  mips*-*-linux*)
    ;;
  mips*-*-*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
  sh-*-* | sh64-*-*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
  sparc-*-elf*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
  sparc64-*-elf*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
  sparc-*-solaris* | sparc64-*-solaris* | sparcv9-*-solaris*)
    ;;
  *-*-linux* | *-*-gnu* | *-*-k*bsd*-gnu | *-*-kopensolaris*-gnu)
    ;;
a708 3
  *-*-*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
@


1.148
log
@	Merge from GCC:

	2011-04-18  Jack Howarth  <howarth@@bromo.med.uc.edu>

	PR lto/48086
	* configure.ac: Re-enable LTO on *-apple-darwin9*.
	* configure: Regenerate.
@
text
@d561 53
a615 2
  *-*-chorusos)
    ;;
a637 2
  *-*-kaos*)
    ;;
a672 3
  am33_2.0-*-linux*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
d676 1
a676 1
  sh*-*-pe|mips*-*-pe|*arm-wince-pe)
a678 4
  arc-*-*)
    ;;
  arm-*-coff)
    ;;
a686 8
  arm-*-pe*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
  arm-*-riscix*)
    ;;
  avr-*-*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
a687 1
    unsupported_languages="$unsupported_languages java"
a689 7
  c4x-*-* | tic4x-*-*)
    ;;
  tic54x-*-*)
    ;;
  cr16-*-*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
a698 7
  d10v-*-*)
    ;;
  d30v-*-*)
    ;;
  fr30-*-elf*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
a701 10
  moxie-*-*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
  h8300*-*-*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
  h8500-*-*)
    ;;
  hppa1.1-*-osf* | hppa1.1-*-bsd* )
    ;;
a709 3
  hppa*-*-*elf* | \
  hppa*-*-lites* | \
  hppa*-*-openbsd* | \
a714 2
  hppa*-*-pro*)
    ;;
a719 2
  i960-*-*)
    ;;
d727 1
a727 1
  i[[3456789]]86-*-coff | i[[3456789]]86-*-elf)
a744 6
  i[[3456789]]86-*-pe)
    ;;
  i[[3456789]]86-*-sco3.2v5*)
    ;;
  i[[3456789]]86-*-sco*)
    ;;
a746 6
  i[[3456789]]86-*-sysv4*)
    ;;
  i[[3456789]]86-*-beos*)
    ;;
  i[[3456789]]86-*-rdos*)
    ;;
a749 2
  m68hc11-*-*|m6811-*-*|m68hc12-*-*|m6812-*-*)
    ;;
a756 3
    unsupported_languages="$unsupported_languages java"
    ;;
  mt-*-*)
a761 6
  powerpc*-*-winnt* | powerpc*-*-pe*)
    ;;
  powerpcle-*-solaris*)
    ;;
  powerpc-*-beos*)
    ;;
a766 3
  rs6000-*-lynxos*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
a769 13
  rs6000-*-*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
  m68k-apollo-*)
    ;;
  microblaze*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
  mips*-sde-elf*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
  mips*-*-irix5*)
    ;;
a776 2
  mips*-*-bsd*)
    ;;
a784 2
  sparclet-*-aout* | sparc86x-*-*)
    ;;
a790 4
  sparclite-*-*)
    ;;
  sparc-*-sunos4*)
    ;;
a792 8
  tic6x-*-*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
  v810-*-*)
    ;;
  vax-*-*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
@


1.147
log
@	* configure.ac: Separate cases disabling Java and Java libraries
	from general case over targets.
	* configure: Regenerate.
@
text
@d1747 1
a1747 1
      *-apple-darwin9 | *-cygwin* | *-mingw*) ;;
@


1.146
log
@	* configure.ac (build_tools): Remove build-byacc.
	(host_libs): Remove mmalloc.
	(host_tools): Remove byacc make patch prms send-pr ash bash bzip2
	autoconf automake libtool diff rcs fileutils shellutils time
	textutils wdiff find uudecode hello tar gzip indent recode release
	sed perl gawk findutils gettext zip.
	(libgcj): Remove target-qthreads.
	(target_tools): Remove target-examples target-gperf.
	(YACC): Don't handle building byacc.
	* configure: Regenerate.
	* Makefile.def (ash, autoconf, automake, bash, byacc, bzip2, diff,
	dosutils, examples, fileutils, find, findutils, gawk, gettext,
	gnuserv, gperf, gzip, hello, indent, libtool, make, mmalloc,
	patch, perl, prms, qthreads, rcs, recode, release, sed, send-pr,
	shellutils, tar, textutils, time, uudecode, wdiff, zip): Don't
	handle building components.
	* Makefile.in: Regenerate.
@
text
@d561 295
a877 1
    noconfigdirs="$noconfigdirs ${libgcj}"
a887 10

    # Skip some stuff that's unsupported on some FreeBSD configurations.
    case "${target}" in
      i*86-*-*) ;;
      alpha*-*-*) ;;
      x86_64-*-*) ;;
      *)
	noconfigdirs="$noconfigdirs ${libgcj}"
	;;
    esac
a895 9

    # Skip some stuff that's unsupported on some NetBSD configurations.
    case "${target}" in
      i*86-*-netbsdelf*) ;;
      arm*-*-netbsdelf*) ;;
      *)
	noconfigdirs="$noconfigdirs ${libgcj}"
	;;
    esac
d898 1
a898 1
    noconfigdirs="$noconfigdirs target-newlib target-libgloss ${libgcj}"
d901 1
a901 1
    noconfigdirs="$noconfigdirs target-libgloss ${libgcj}"
d905 1
a905 1
    noconfigdirs="$noconfigdirs target-newlib target-libgloss ${libgcj} gdb tcl tk libgui itcl"
d908 1
a908 1
    noconfigdirs="$noconfigdirs target-newlib target-libgloss target-rda ${libgcj}"
d911 1
a911 1
    noconfigdirs="$noconfigdirs target-newlib target-libgloss ${libgcj}"
d920 1
a920 1
    noconfigdirs="$noconfigdirs gdb target-newlib target-libgloss ${libgcj}"
d928 1
a928 1
    noconfigdirs="$noconfigdirs target-newlib target-libgloss ${libgcj}"
d931 1
a931 1
    noconfigdirs="$noconfigdirs ${libgcj} target-newlib target-libgloss"
d934 1
a934 1
    noconfigdirs="$noconfigdirs ${libgcj} target-newlib target-libgloss"
a936 1
    noconfigdirs="$noconfigdirs ${libgcj}"
a947 1
    noconfigdirs="$noconfigdirs target-libffi"
a956 1
    noconfigdirs="$noconfigdirs ${libgcj}"
d960 1
a960 1
    noconfigdirs="$noconfigdirs target-libgloss ${libgcj}"
a965 1
    noconfigdirs="$noconfigdirs ${libgcj}"
a967 2
    unsupported_languages="$unsupported_languages java"
    noconfigdirs="$noconfigdirs target-boehm-gc"
d976 1
a976 1
    noconfigdirs="$noconfigdirs ${libgcj} gdb"
a978 1
    unsupported_languages="$unsupported_languages java"
a981 2
      *) # See PR46792 regarding target-libffi.
	noconfigdirs="$noconfigdirs target-libffi target-boehm-gc";;
d992 1
a992 1
    noconfigdirs="$noconfigdirs ${libgcj} gdb"
a994 1
    noconfigdirs="$noconfigdirs ${libgcj}"
a996 1
    noconfigdirs="$noconfigdirs ${libgcj}"
d1000 1
a1000 1
    noconfigdirs="$noconfigdirs target-libgloss ${libgcj}"
a1007 4
    # In this case, it's because the hppa64-linux target is for
    # the kernel only at this point and has no libc, and thus no
    # headers, crt*.o, etc., all of which are needed by these.
    noconfigdirs="$noconfigdirs target-zlib"
a1014 1
    noconfigdirs="$noconfigdirs ${libgcj}"
d1023 1
a1023 3
    # According to Alexandre Oliva <aoliva@@redhat.com>, libjava won't
    # build on HP-UX 10.20.
    noconfigdirs="$noconfigdirs ld ${libgcj}"
d1034 1
a1034 1
    noconfigdirs="$noconfigdirs ${libgcj} libgui itcl ld"
d1038 1
a1038 1
    noconfigdirs="$noconfigdirs ${libgcj} readline libgui itcl gdb ld"
a1040 1
    noconfigdirs="$noconfigdirs ${libgcj}"
d1056 1
a1056 1
    noconfigdirs="$noconfigdirs target-libgloss target-newlib ${libgcj}"
d1060 1
a1060 1
    noconfigdirs="$noconfigdirs target-libgloss target-newlib ${libgcj}"
d1063 1
a1063 1
    noconfigdirs="$noconfigdirs target-libgloss target-newlib ${libgcj}"
a1100 1
    noconfigdirs="$noconfigdirs ${libgcj}"
a1105 1
    noconfigdirs="$noconfigdirs ${libgcj}"
d1111 1
a1111 2
    noconfigdirs="$noconfigdirs target-libffi target-boehm-gc gdb"
    unsupported_languages="$unsupported_languages java"
d1118 1
a1118 1
    noconfigdirs="$noconfigdirs gprof target-libgloss target-newlib ${libgcj}"
a1134 1
    noconfigdirs="$noconfigdirs ${libgcj}"
d1141 1
a1141 1
    noconfigdirs="$noconfigdirs target-newlib gprof ${libgcj}"
d1144 1
a1144 1
    noconfigdirs="$noconfigdirs gprof target-libgloss target-newlib ${libgcj}"
d1147 1
a1147 1
    noconfigdirs="$noconfigdirs gprof ${libgcj}"
d1153 1
a1153 1
    noconfigdirs="$noconfigdirs gprof ${libgcj}"
a1155 1
    noconfigdirs="$noconfigdirs ${libgcj}"
d1165 1
a1165 5
    # Linking libjava exceeds command-line length limits on at least
    # IRIX 6.2, but not on IRIX 6.5.
    # Also, boehm-gc won't build on IRIX 6.5, according to Jeffrey Oldham
    # <oldham@@codesourcery.com>
    noconfigdirs="$noconfigdirs gprof target-libgloss ${libgcj}"
d1174 1
a1174 1
    noconfigdirs="$noconfigdirs gprof ${libgcj}"
d1180 1
a1180 1
         noconfigdirs="$noconfigdirs ${libgcj}" ;;
d1182 1
a1182 1
         noconfigdirs="$noconfigdirs target-libgloss ${libgcj}" ;;
a1188 1
    noconfigdirs="$noconfigdirs ${libgcj}"
a1190 1
    noconfigdirs="$noconfigdirs ${libgcj}"
d1206 1
a1206 1
    noconfigdirs="$noconfigdirs gdb sim ${libgcj}"
d1212 1
a1212 1
    noconfigdirs="$noconfigdirs target-newlib target-libgloss ${libgcj}"
d1218 1
a1218 1
    noconfigdirs="$noconfigdirs target-newlib target-libgloss ${libgcj}"
a1220 1
    noconfigdirs="$noconfigdirs ${libgcj}"
@


1.145
log
@	* configure.ac (avr-*-*): Add comment about why libssp is disabled.
	(microblaze*): Don't disable libssp.
	* configure: Regenerate.
@
text
@d131 1
a131 1
build_tools="build-texinfo build-byacc build-flex build-bison build-m4 build-fixincludes"
d135 1
a135 1
host_libs="intl mmalloc libiberty opcodes bfd readline tcl tk itcl libgui zlib libcpp libdecnumber gmp mpfr mpc ppl cloog libelf libiconv"
d143 1
a143 1
host_tools="texinfo byacc flex bison binutils gas ld fixincludes gcc cgen sid sim gdb make patch prms send-pr gprof etc expect dejagnu ash bash bzip2 m4 autoconf automake libtool diff rcs fileutils shellutils time textutils wdiff find uudecode hello tar gzip indent recode release sed utils guile perl gawk findutils gettext zip fastjar gnattools"
a147 1
	target-qthreads \
d175 1
a175 1
target_tools="target-examples target-gperf target-rda"
a2957 1
  *" byacc "*) YACC='$$r/$(BUILD_SUBDIR)/byacc/byacc' ;;
@


1.144
log
@	* configure.ac: Remove code setting CONFIG_SHELL, config_shell and
	moveifchange.
	* configure: Regenerate.
	* Makefile.tpl: Use @@SHELL@@ not @@config_shell@@.
	* Makefile.in: Regenerate.
@
text
@d486 1
a491 3
  microblaze*)
    noconfigdirs="$noconfigdirs target-libssp"
    ;;
@


1.143
log
@	* configure.ac (*-*-sysv4*): Don't enable libgomp.
	(alpha*-*-*vms*, i[[34567]]86-*-sco3.2v5*, mn10300-*-*,
	powerpc-*-chorusos*, powerpc*-*-eabi*, powerpc*-*-sysv*,
	powerpc*-*-kaos*, s390x-ibm-tpf*, sparc64-*-elf*, v850*-*-*,
	xtensa*-*-elf*, *-*-beos*, *-*-elf*, *-*-netware*, *-*-rtems*,
	*-*-sysv[[45]]*, *-*-vxworks*, *-wrs-windiss): Remove
	md_exec_prefix cases.
	* configure: Regenerate.
@
text
@a91 36
### we might need to use some other shell than /bin/sh for running subshells
### If we are on Windows, search for the shell.  This will permit people
### to not have /bin/sh, but to be able to see /SOME/PATH/sh configure
### without also having to set CONFIG_SHELL.  This code will work when
### using bash, which sets OSTYPE.
case "${OSTYPE}" in
*win32*)
  if test x${CONFIG_SHELL} = x ; then
    if test ! -f /bin/sh ; then
      if test x${SHELL} != x && test -f ${SHELL} ; then
	CONFIG_SHELL=${SHELL}
	export CONFIG_SHELL
      else
	for prog in sh sh.exe bash bash.exe; do
	  IFS="${IFS=	}"; save_ifs="$IFS"; IFS="${IFS}:"
	  for dir in $PATH; do
	    test -z "$dir" && dir=.
	    if test -f $dir/$prog; then
	      CONFIG_SHELL=$dir/$prog
	      export CONFIG_SHELL
	      break
	    fi
	  done
	  IFS="$save_ifs"
	  test -n "${CONFIG_SHELL}" && break
	done
      fi
    fi
  fi
  ;;
esac

config_shell=${CONFIG_SHELL-/bin/sh}

moveifchange=${srcdir}/move-if-change

a2951 1
AC_SUBST(config_shell)
@


1.142
log
@	* configure.ac: Separate cases disabling target-libssp,
	target-libiberty, target-libstdc++-v3 and Fortran from general
	case over targets.
	* configure: Regenerate.
@
text
@d509 1
a509 1
    *-*-solaris2* | *-*-sysv4* | *-*-irix6* | *-*-osf* | *-*-hpux11*)
a2176 3
  alpha*-*-*vms*)
    md_exec_prefix=/gnu/lib/gcc-lib
    ;;
a2179 26
  i[[34567]]86-*-sco3.2v5*)
    if test $with_gnu_as = yes; then
      md_exec_prefix=/usr/gnu/bin
    else
      md_exec_prefix=/usr/ccs/bin/elf
    fi
    ;;

  mn10300-*-* | \
  powerpc-*-chorusos* | \
  powerpc*-*-eabi* | \
  powerpc*-*-sysv* | \
  powerpc*-*-kaos* | \
  s390x-ibm-tpf*)
    md_exec_prefix=/usr/ccs/bin
    ;;
  sparc64-*-elf*)
    ;;
  v850*-*-*)
    md_exec_prefix=/usr/ccs/bin
    ;;
  xtensa*-*-elf*)
    ;;

  *-*-beos* | \
  *-*-elf* | \
a2180 1
  *-*-netware* | \
d2182 1
a2182 5
  *-*-rtems* | \
  *-*-solaris2* | \
  *-*-sysv[[45]]* | \
  *-*-vxworks* | \
  *-wrs-windiss)
@


1.141
log
@	* configure.ac (*-*-chorusos): Don't disable libgcj.
	(*-*-freebsd[[12]] | *-*-freebsd[[12]].* | *-*-freebsd*aout*):
	Remove case.
	(*-*-kaos*): Don't disable GCC libraries, zlib or fastjar.
	(arm-*-coff): Don't disable libgcj.
	(arm*-*-linux-gnueabi): Remove useless assignment.
	(arm-*-riscix*): Don't disable libgcj.
	(bfin-*-*): Don't enable target-bsp and target-cygmon depending on
	configuration.
	(c4x-*-* | tic4x-*-*): Don't disable GCC libraries.
	(c54x*-*-*): Remove case.
	(tic54x-*-*): Don't disable GCC or GCC libraries.
	(cris-*-* | crisv32-*-*): Don't handle *-*-aout.  Change *-*-elf
	to *.
	(d10v-*-*): Don't disable GCC libraries.
	(d30v-*-*): Don't disable libgcj.
	(h8500-*-*): Don't disable GCC libraries.
	(i960-*-*): Don't disable libgcj.
	(i[[3456789]]86-*-linux*): Don't handle *-*-*libc1*.
	(i[[3456789]]86-*-sco3.2v5*, i[[3456789]]86-*-sco*,
	i[[3456789]]86-*-sysv4*, i[[3456789]]86-*-beos*): Don't disable
	libgcj.
	(m68k-*-coff*): Remove case.
	(mmix-*-*): Don't disable libgloss on host.
	(mn10200-*-*, mn10300-*-*): Remove cases.
	(powerpc*-*-winnt* | powerpc*-*-pe*, powerpcle-*-solaris*,
	powerpc-*-beos*, m68k-apollo-*, mips*-*-irix5*, mips*-*-bsd*):
	Don't disable libgcj.
	(romp-*-*): Remove case.
	(sparclite-*-*, sparc-*-sunos4*): Don't disable libgcj.
	(sparc-*-solaris2.[[0-6]] | sparc-*-solaris2.[[0-6]].*): Remove
	case.
	(v810-*-*): Don't disable GCC libraries.
	(v850*-*-*, vax-*-vms, xtensa*-*-*): Remove cases.
	(ip2k-*-*): Don't disable GCC libraries.
	* configure: Regenerate.
@
text
@d519 81
a645 1
    skipdirs="target-libiberty"
d650 1
a650 1
    noconfigdirs="$noconfigdirs target-newlib target-libiberty target-libgloss"
d662 1
a662 1
    noconfigdirs="$noconfigdirs target-newlib target-libiberty target-libgloss ${libgcj}"
a664 1
    skipdirs="${skipdirs} target-libiberty"
d669 1
a669 1
    noconfigdirs="$noconfigdirs target-newlib target-libgloss target-libiberty ${libgcj} gdb tcl tk libgui itcl"
d675 1
a675 1
    noconfigdirs="$noconfigdirs target-newlib target-libgloss target-libiberty target-libstdc++-v3 ${libgcj}"
a701 1
    noconfigdirs="$noconfigdirs target-libiberty"
a702 2
    # the C++ libraries don't build on top of CE's C libraries
    noconfigdirs="$noconfigdirs target-libstdc++-v3"
d723 1
a723 1
    noconfigdirs="$noconfigdirs ${libgcj} target-libiberty"
d733 1
a733 1
    noconfigdirs="$noconfigdirs target-libiberty target-libstdc++-v3 ${libgcj} target-libssp"
a886 1
    noconfigdirs="$noconfigdirs target-libiberty"
d897 1
a897 1
    unsupported_languages="$unsupported_languages fortran java"
a901 3
  picochip-*-*)
    noconfigdirs="$noconfigdirs target-libiberty"
    ;;
d904 1
a904 1
    noconfigdirs="$noconfigdirs gprof target-libgloss target-libssp target-newlib ${libgcj}"
d931 1
a931 1
    noconfigdirs="$noconfigdirs gprof target-libgloss target-libssp target-newlib ${libgcj}"
d940 1
a940 1
    noconfigdirs="$noconfigdirs gprof target-libssp ${libgcj}"
a942 1
    skipdirs="$skipdirs target-libiberty"
a1007 3
  ip2k-*-*)
    noconfigdirs="$noconfigdirs target-libiberty"
    ;;
@


1.140
log
@	* configure.ac (i[[3456789]]86-*-msdosdjgpp*): Don't disable
	libffi on host.
	(x86_64-*-mingw*, i[[3456789]]86-*-mingw32*): Don't disable newlib
	on host.
	(c54x*-*-* | tic54x-*-*): Don't disable newlib on host.
	* configure: Regenerate.
@
text
@d524 1
a524 1
    noconfigdirs="$noconfigdirs target-newlib target-libgloss ${libgcj}"
a545 3
  *-*-freebsd[[12]] | *-*-freebsd[[12]].* | *-*-freebsd*aout*)
    noconfigdirs="$noconfigdirs target-newlib target-libgloss ${libgcj}"
    ;;
d565 1
a565 3
    skipdirs="target-libiberty ${libgcj} target-libstdc++-v3"
    skipdirs="$skipdirs target-libobjc"
    skipdirs="$skipdirs zlib fastjar target-libjava target-boehm-gc target-zlib"
a633 1
    noconfigdirs="$noconfigdirs ${libgcj}"
a640 1
    noconfigdirs="$noconfigdirs"
d654 1
a654 1
    noconfigdirs="$noconfigdirs ld target-libgloss ${libgcj}"
a661 3
    if test x${is_cross_compiler} != xno ; then
      target_configdirs="${target_configdirs} target-bsp target-cygmon"
    fi
d664 1
a664 1
    noconfigdirs="$noconfigdirs target-libstdc++-v3 target-libgloss ${libgcj}"
d666 2
a667 2
  c54x*-*-* | tic54x-*-*)
    noconfigdirs="$noconfigdirs target-libstdc++-v3 target-libgloss ${libgcj} gcc gdb"
a674 5
      *-*-aout)
	unsupported_languages="$unsupported_languages fortran"
	noconfigdirs="$noconfigdirs target-libffi target-boehm-gc";;
      *-*-elf) # See PR46792 regarding target-libffi.
	noconfigdirs="$noconfigdirs target-libffi target-boehm-gc";;
d677 2
a678 3
      *)
	unsupported_languages="$unsupported_languages fortran"
	noconfigdirs="$noconfigdirs ${libgcj} target-newlib target-libgloss";;
d683 1
a683 1
    noconfigdirs="$noconfigdirs target-libstdc++-v3 target-libgloss ${libgcj}"
d686 1
a686 1
    noconfigdirs="$noconfigdirs ${libgcj} gdb"
d702 1
a702 1
    noconfigdirs="$noconfigdirs target-libstdc++-v3 target-libgloss ${libgcj}"
d732 1
a732 1
    noconfigdirs="$noconfigdirs ${libgcj} gdb"
a750 7
    # The GCC port for glibc1 has no MD_FALLBACK_FRAME_STATE_FOR, so let's
    # not build java stuff by default.
    case "${target}" in
      *-*-*libc1*)
	noconfigdirs="$noconfigdirs ${libgcj}";;
    esac

d790 1
a790 1
    noconfigdirs="$noconfigdirs ld target-libgloss ${libgcj}"
d793 1
a793 1
    noconfigdirs="$noconfigdirs gprof target-libgloss ${libgcj}"
d799 1
a799 1
    noconfigdirs="$noconfigdirs target-libgloss ${libgcj}"
d802 1
a802 1
    noconfigdirs="$noconfigdirs gdb target-newlib target-libgloss ${libgcj}"
a816 3
  m68k-*-coff*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
d821 1
a821 1
    noconfigdirs="$noconfigdirs target-libffi target-boehm-gc gdb libgloss"
a823 6
  mn10200-*-*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
  mn10300-*-*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
d836 1
a836 1
    noconfigdirs="$noconfigdirs gdb tcl tk target-libgloss itcl ${libgcj}"
d842 1
a842 1
    noconfigdirs="$noconfigdirs gdb sim tcl tk itcl ${libgcj}"
d846 1
a846 1
    noconfigdirs="$noconfigdirs gdb target-newlib target-libgloss ${libgcj}"
d865 1
a865 1
    noconfigdirs="$noconfigdirs ld binutils gprof target-libgloss ${libgcj}"
d879 1
a879 1
    noconfigdirs="$noconfigdirs gprof target-libgloss ${libgcj}"
d889 1
a889 1
    noconfigdirs="$noconfigdirs gprof target-libgloss ${libgcj}"
a897 3
  romp-*-*)
    noconfigdirs="$noconfigdirs bfd binutils ld gas opcodes target-libgloss ${libgcj}"
    ;;
a916 1
    noconfigdirs="$noconfigdirs ${libgcj}"
a919 1
    noconfigdirs="$noconfigdirs ${libgcj}"
a925 3
  sparc-*-solaris2.[[0-6]] | sparc-*-solaris2.[[0-6]].*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
d932 1
a932 7
    noconfigdirs="$noconfigdirs bfd binutils gas gcc gdb ld target-libstdc++-v3 opcodes target-libgloss ${libgcj}"
    ;;
  v850*-*-*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
  vax-*-vms)
    noconfigdirs="$noconfigdirs bfd binutils gdb ld target-newlib opcodes target-libgloss ${libgcj}"
a936 3
  xtensa*-*-*)
    noconfigdirs="$noconfigdirs ${libgcj}"
    ;;
d938 1
a938 1
    noconfigdirs="$noconfigdirs target-libiberty target-libstdc++-v3 ${libgcj}"
@


1.140.2.1
log
@	* configure.ac (*-*-chorusos): Don't disable libgcj.
	(*-*-freebsd[[12]] | *-*-freebsd[[12]].* | *-*-freebsd*aout*):
	Remove case.
	(*-*-kaos*): Don't disable GCC libraries, zlib or fastjar.
	(arm-*-coff): Don't disable libgcj.
	(arm*-*-linux-gnueabi): Remove useless assignment.
	(arm-*-riscix*): Don't disable libgcj.
	(bfin-*-*): Don't enable target-bsp and target-cygmon depending on
	configuration.
	(c4x-*-* | tic4x-*-*): Don't disable GCC libraries.
	(c54x*-*-*): Remove case.
	(tic54x-*-*): Don't disable GCC or GCC libraries.
	(cris-*-* | crisv32-*-*): Don't handle *-*-aout.  Change *-*-elf
	to *.
	(d10v-*-*): Don't disable GCC libraries.
	(d30v-*-*): Don't disable libgcj.
	(h8500-*-*): Don't disable GCC libraries.
	(i960-*-*): Don't disable libgcj.
	(i[[3456789]]86-*-linux*): Don't handle *-*-*libc1*.
	(i[[3456789]]86-*-sco3.2v5*, i[[3456789]]86-*-sco*,
	i[[3456789]]86-*-sysv4*, i[[3456789]]86-*-beos*): Don't disable
	libgcj.
	(m68k-*-coff*): Remove case.
	(mmix-*-*): Don't disable libgloss on host.
	(mn10200-*-*, mn10300-*-*): Remove cases.
	(powerpc*-*-winnt* | powerpc*-*-pe*, powerpcle-*-solaris*,
	powerpc-*-beos*, m68k-apollo-*, mips*-*-irix5*, mips*-*-bsd*):
	Don't disable libgcj.
	(romp-*-*): Remove case.
	(sparclite-*-*, sparc-*-sunos4*): Don't disable libgcj.
	(sparc-*-solaris2.[[0-6]] | sparc-*-solaris2.[[0-6]].*): Remove
	case.
	(v810-*-*): Don't disable GCC libraries.
	(v850*-*-*, vax-*-vms, xtensa*-*-*): Remove cases.
	(ip2k-*-*): Don't disable GCC libraries.
	* configure: Regenerate.
@
text
@d524 1
a524 1
    noconfigdirs="$noconfigdirs target-newlib target-libgloss"
d546 3
d568 3
a570 1
    skipdirs="target-libiberty"
d639 1
d647 1
d661 1
a661 1
    noconfigdirs="$noconfigdirs ld target-libgloss"
d669 3
d674 1
a674 1
    noconfigdirs="$noconfigdirs target-libgloss"
d676 2
a677 2
  tic54x-*-*)
    noconfigdirs="$noconfigdirs target-libgloss gdb"
d685 5
d692 3
a694 2
      *) # See PR46792 regarding target-libffi.
	noconfigdirs="$noconfigdirs target-libffi target-boehm-gc";;
d699 1
a699 1
    noconfigdirs="$noconfigdirs target-libgloss"
d702 1
a702 1
    noconfigdirs="$noconfigdirs gdb"
d718 1
a718 1
    noconfigdirs="$noconfigdirs target-libgloss"
d748 1
a748 1
    noconfigdirs="$noconfigdirs gdb"
d767 7
d813 1
a813 1
    noconfigdirs="$noconfigdirs ld target-libgloss"
d816 1
a816 1
    noconfigdirs="$noconfigdirs gprof target-libgloss"
d822 1
a822 1
    noconfigdirs="$noconfigdirs target-libgloss"
d825 1
a825 1
    noconfigdirs="$noconfigdirs gdb target-newlib target-libgloss"
d840 3
d847 1
a847 1
    noconfigdirs="$noconfigdirs target-libffi target-boehm-gc gdb"
d850 6
d868 1
a868 1
    noconfigdirs="$noconfigdirs gdb tcl tk target-libgloss itcl"
d874 1
a874 1
    noconfigdirs="$noconfigdirs gdb sim tcl tk itcl"
d878 1
a878 1
    noconfigdirs="$noconfigdirs gdb target-newlib target-libgloss"
d897 1
a897 1
    noconfigdirs="$noconfigdirs ld binutils gprof target-libgloss"
d911 1
a911 1
    noconfigdirs="$noconfigdirs gprof target-libgloss"
d921 1
a921 1
    noconfigdirs="$noconfigdirs gprof target-libgloss"
d930 3
d952 1
d956 1
d963 3
d972 7
a978 1
    noconfigdirs="$noconfigdirs bfd binutils gas gdb ld opcodes target-libgloss"
d983 3
d987 1
a987 1
    noconfigdirs="$noconfigdirs target-libiberty"
@


1.140.2.2
log
@	* configure.ac: Separate cases disabling target-libssp,
	target-libiberty, target-libstdc++-v3 and Fortran from general
	case over targets.
	* configure: Regenerate.
@
text
@a518 81
# Disable libssp for some systems.
case "${target}" in
  avr-*-*)
    noconfigdirs="$noconfigdirs target-libssp"
    ;;
  powerpc-*-aix* | rs6000-*-aix*)
    noconfigdirs="$noconfigdirs target-libssp"
    ;;
  microblaze*)
    noconfigdirs="$noconfigdirs target-libssp"
    ;;
esac

# Disable target libiberty for some systems.
case "${target}" in
  *-*-kaos*)
    # Remove unsupported stuff on all kaOS configurations.
    skipdirs="target-libiberty"
    ;;
  *-*-netbsd*)
    # Skip some stuff on all NetBSD configurations.
    noconfigdirs="$noconfigdirs target-libiberty"
    ;;
  *-*-netware*)
    noconfigdirs="$noconfigdirs target-libiberty"
    ;;
  *-*-rtems*)
    skipdirs="${skipdirs} target-libiberty"
    ;;
  *-*-tpf*)
    noconfigdirs="$noconfigdirs target-libiberty"
    ;;
  *-*-vxworks*)
    noconfigdirs="$noconfigdirs target-libiberty"
    ;;
  sh*-*-pe|mips*-*-pe|*arm-wince-pe)
    noconfigdirs="$noconfigdirs target-libiberty"
    ;;
  arm*-*-symbianelf*)
    noconfigdirs="$noconfigdirs target-libiberty"
    ;;
  avr-*-*)
    noconfigdirs="$noconfigdirs target-libiberty"
    ;;
  m68hc11-*-*|m6811-*-*|m68hc12-*-*|m6812-*-*)
    noconfigdirs="$noconfigdirs target-libiberty"
    ;;
  picochip-*-*)
    noconfigdirs="$noconfigdirs target-libiberty"
    ;;
  mips*-sde-elf*)
    skipdirs="$skipdirs target-libiberty"
    ;;
  ip2k-*-*)
    noconfigdirs="$noconfigdirs target-libiberty"
    ;;
esac

# Disable libstdc++-v3 for some systems.
case "${target}" in
  *-*-vxworks*)
    # VxWorks uses the Dinkumware C++ library.
    noconfigdirs="$noconfigdirs target-libstdc++-v3"
    ;;
  arm*-wince-pe*)
    # the C++ libraries don't build on top of CE's C libraries
    noconfigdirs="$noconfigdirs target-libstdc++-v3"
    ;;
  avr-*-*)
    noconfigdirs="$noconfigdirs target-libstdc++-v3"
    ;;
esac

# Disable Fortran for some systems.
case "${target}" in
  mmix-*-*)
    # See <http://gcc.gnu.org/ml/gcc-patches/2004-11/msg00572.html>.
    unsupported_languages="$unsupported_languages fortran"
    ;;
esac

d565 1
d570 1
a570 1
    noconfigdirs="$noconfigdirs target-newlib target-libgloss"
d582 1
a582 1
    noconfigdirs="$noconfigdirs target-newlib target-libgloss ${libgcj}"
d585 1
d590 1
a590 1
    noconfigdirs="$noconfigdirs target-newlib target-libgloss ${libgcj} gdb tcl tk libgui itcl"
d596 1
a596 1
    noconfigdirs="$noconfigdirs target-newlib target-libgloss ${libgcj}"
d623 1
d625 2
d647 1
a647 1
    noconfigdirs="$noconfigdirs ${libgcj}"
d657 1
a657 1
    noconfigdirs="$noconfigdirs ${libgcj}"
d811 1
d822 1
a822 1
    unsupported_languages="$unsupported_languages java"
d827 3
d832 1
a832 1
    noconfigdirs="$noconfigdirs gprof target-libgloss target-newlib ${libgcj}"
d859 1
a859 1
    noconfigdirs="$noconfigdirs gprof target-libgloss target-newlib ${libgcj}"
d868 1
a868 1
    noconfigdirs="$noconfigdirs gprof ${libgcj}"
d871 1
d937 3
@


1.140.2.3
log
@	* configure.ac (*-*-sysv4*): Don't enable libgomp.
	(alpha*-*-*vms*, i[[34567]]86-*-sco3.2v5*, mn10300-*-*,
	powerpc-*-chorusos*, powerpc*-*-eabi*, powerpc*-*-sysv*,
	powerpc*-*-kaos*, s390x-ibm-tpf*, sparc64-*-elf*, v850*-*-*,
	xtensa*-*-elf*, *-*-beos*, *-*-elf*, *-*-netware*, *-*-rtems*,
	*-*-sysv[[45]]*, *-*-vxworks*, *-wrs-windiss): Remove
	md_exec_prefix cases.
	* configure: Regenerate.
@
text
@d509 1
a509 1
    *-*-solaris2* | *-*-irix6* | *-*-osf* | *-*-hpux11*)
d2177 3
d2183 26
d2210 1
d2212 5
a2216 1
  *-*-solaris2*)
@


1.140.2.4
log
@	* configure.ac: Remove code setting CONFIG_SHELL, config_shell and
	moveifchange.
	* configure: Regenerate.
	* Makefile.tpl: Use @@SHELL@@ not @@config_shell@@.
	* Makefile.in: Regenerate.
@
text
@d92 36
d2988 1
@


1.140.2.5
log
@	* configure.ac (avr-*-*): Add comment about why libssp is disabled.
	(microblaze*): Don't disable libssp.
	* configure: Regenerate.
@
text
@a485 1
    # No hosted I/O support.
d491 3
@


1.139
log
@Add support for DragonFlyBSD target.
@
text
@d425 1
a425 7
    noconfigdirs="$noconfigdirs tcl tk itcl libffi"
    ;;
  x86_64-*-mingw*)
    noconfigdirs="$noconfigdirs newlib"
    ;;
  i[[3456789]]86-*-mingw32*)
    noconfigdirs="$noconfigdirs newlib"
d677 1
a677 1
    noconfigdirs="$noconfigdirs target-libstdc++-v3 target-libgloss ${libgcj} gcc gdb newlib"
@


1.138
log
@	* configure.ac (native_only): Remove.
	(i[[3456789]]86-*-msdosdjgpp*): Don't disable expect dejagnu
	send-pr uudecode guile gnuserv on host.
	(x86_64-*-mingw*): Don't disable expect dejagnu autoconf automake
	send-pr rcs guile perl texinfo libtool on host.
	(i[[3456789]]86-*-mingw32*): Don't disable expect dejagnu autoconf
	automake send-pr rcs guile perl texinfo libtool on host.
	(*-*-cygwin*, *-*-netbsd*): Remove host cases.
	(*-*-kaos*): Don't disable target-examples target-gperf on target.
	(alpha*-dec-osf*): Don't disable fileutils on target.
	(sh*-*-pe|mips*-*-pe|*arm-wince-pe): Don't disable target-examples
	texinfo send-pr expect dejagnu on target.
	(arm-*-elf* | arm*-*-eabi*, arm*-*-linux-gnueabi): Don't disable
	target-qthreads on target.
	(hppa*-hp-hpux11*, hppa*-*-*): Don't disable shellutils on target.
	(ia64*-*-elf*, ia64*-*-*vms*): Don't disable mmalloc on target.
	(i[[3456789]]86-w64-mingw*, i[[3456789]]86-*-mingw*,
	x86_64-*-mingw*): Don't disable expect on target.
	(*-*-cygwin*): Don't disable target-gperf on target.
	(powerpc*-*-winnt* | powerpc*-*-pe*): Don't disable make expect
	gnuserv on target.
	(powerpcle-*-solaris*): Don't disable make expect gnuserv on
	target.
	* configure: Regenerate.
@
text
@d352 2
a353 1
      | *-*-netbsd* | *-*-openbsd* | *-*-freebsd* | *-*-solaris2* | *-*-nto*)
d513 1
a513 1
    *-*-netbsd* | *-*-freebsd* | *-*-openbsd*)
d549 3
@


1.137
log
@	* configure.ac (target_tools): Remove target-groff.
	(native_only): Remove target-groff.
	(hppa*64*-*-*): Don't disable byacc.
	(i[[3456789]]86-*-mingw32*): Remove commented-out noconfigdirs
	setting.
	(*-*-kaos*): Don't skip target-librx and target-groff.
	(*-*-netware*): Don't skip target-libmudflap.
	(*-*-tpf*): Don't skip target-libmudflap.
	(sh*-*-pe|mips*-*-pe|*arm-wince-pe): Don't condition configured
	directories on the host.
	(ia64*-*-*vms*): Don't skip tix.
	(sh-*-* | sh64-*-*): Don't condition skipped directories on the
	host.
	* configure: Regenerate.
@
text
@d210 1
a210 2
# list belongs in this list.  those programs are also very likely
# candidates for the "native_only" list which follows
d298 1
a298 5
# Some tools are only suitable for building in a "native" situation.
# Remove these if host!=target.  
native_only="autoconf automake libtool fileutils find gawk gettext gzip hello indent m4 rcs recode sed shellutils tar textutils uudecode wdiff guile perl time ash bash bzip2 prms gnuserv target-gperf"

# Similarly, some are only suitable for cross toolchains.
a303 1
  yes) skipdirs="${skipdirs} ${native_only}" ;;
d424 1
a424 1
    noconfigdirs="$noconfigdirs tcl tk expect dejagnu send-pr uudecode guile itcl gnuserv libffi"
d427 1
a427 1
    noconfigdirs="$noconfigdirs expect dejagnu autoconf automake send-pr rcs guile perl texinfo libtool newlib"
d430 1
a430 7
    noconfigdirs="$noconfigdirs expect dejagnu autoconf automake send-pr rcs guile perl texinfo libtool newlib"
    ;;
  *-*-cygwin*)
    noconfigdirs="$noconfigdirs autoconf automake send-pr rcs guile perl"
    ;;
  *-*-netbsd*)
    noconfigdirs="$noconfigdirs rcs"
d571 1
a571 1
    skipdirs="$skipdirs target-libobjc target-examples target-gperf"
d607 1
a607 1
    # newlib is not 64 bit ready.  I'm not sure about fileutils.
d609 1
a609 1
    noconfigdirs="$noconfigdirs gas ld fileutils target-newlib target-libgloss"
d630 1
a630 2
    noconfigdirs="$noconfigdirs target-examples"
    noconfigdirs="$noconfigdirs target-libiberty texinfo send-pr"
a631 1
    noconfigdirs="$noconfigdirs expect dejagnu"
d645 1
a645 1
    noconfigdirs="$noconfigdirs target-libffi target-qthreads"
d649 1
a649 1
    noconfigdirs="$noconfigdirs target-qthreads"
d739 1
a739 1
    noconfigdirs="$noconfigdirs ld shellutils"
d747 1
a747 1
    noconfigdirs="$noconfigdirs ld shellutils ${libgcj}"
d754 1
a754 1
    noconfigdirs="$noconfigdirs readline mmalloc libgui itcl gdb"
d762 1
a762 1
    noconfigdirs="$noconfigdirs ${libgcj} readline mmalloc libgui itcl gdb ld"
d788 1
a788 1
    noconfigdirs="$noconfigdirs expect target-libgloss target-newlib ${libgcj}"
d792 1
a792 1
    noconfigdirs="$noconfigdirs expect target-libgloss target-newlib ${libgcj}"
d795 1
a795 1
    noconfigdirs="$noconfigdirs expect target-libgloss target-newlib ${libgcj}"
d799 1
a799 1
    noconfigdirs="$noconfigdirs target-gperf target-libgloss"
d870 1
a870 1
    noconfigdirs="$noconfigdirs gdb tcl tk make expect target-libgloss itcl gnuserv ${libgcj}"
d876 1
a876 1
    noconfigdirs="$noconfigdirs gdb sim make tcl tk expect itcl gnuserv ${libgcj}"
@


1.136
log
@2011-03-24  Paolo Bonzini  <pbonzini@@redhat.com>

        * configure.ac: Remove references to mt-mep, mt-netware,
        mt-wince.
        * Makefile.def: Add all-utils soft dependencies.
        * Makefile.tpl: Remove GDB_NLM_DEPS.
        * configure: Regenerate.
        * Makefile.in: Regenerate.

config:
2011-03-24  Paolo Bonzini  <pbonzini@@redhat.com>

        * mt-mep: Remove, obsolete.
        * mt-netware: Remove, obsolete.
        * mt-wince: Remove, obsolete.
        * mt-v810: Remove, unused.
@
text
@d213 1
a213 1
target_tools="target-examples target-groff target-gperf target-rda"
d301 1
a301 1
native_only="autoconf automake libtool fileutils find gawk gettext gzip hello indent m4 rcs recode sed shellutils tar textutils uudecode wdiff target-groff guile perl time ash bash bzip2 prms gnuserv target-gperf"
a428 3
  hppa*64*-*-*)
    noconfigdirs="$noconfigdirs byacc"
    ;;
a435 1
    # noconfigdirs="tcl tk expect dejagnu make texinfo bison patch flex byacc send-pr uudecode dejagnu diff guile perl itcl gnuserv"
d582 2
a583 2
    skipdirs="target-libiberty ${libgcj} target-libstdc++-v3 target-librx"
    skipdirs="$skipdirs target-libobjc target-examples target-groff target-gperf"
d601 1
a601 1
    noconfigdirs="$noconfigdirs target-newlib target-libiberty target-libgloss ${libgcj} target-libmudflap"
d609 1
a609 1
    noconfigdirs="$noconfigdirs target-newlib target-libgloss target-libiberty ${libgcj} target-libmudflap gdb tcl tk libgui itcl"
a648 5
    case "${host}" in
      *-*-cygwin*) ;; # keep gdb and readline
      *) noconfigdirs="$noconfigdirs gdb readline"
	 ;;
    esac
d776 1
a776 1
    noconfigdirs="$noconfigdirs ${libgcj} tix readline mmalloc libgui itcl gdb ld"
a949 4
    case "${host}" in
      i[[3456789]]86-*-msdosdjgpp*) ;; # don't add gprof back in
      *) skipdirs=`echo " ${skipdirs} " | sed -e 's/ gprof / /'` ;;
    esac
@


1.135
log
@2011-03-24  Paolo Bonzini  <bonzini@@gnu.org>

	Sync from GCC:

	2011-03-24  Paolo Bonzini  <bonzini@@gnu.org>

	* configure.ac: Remove empty cases.
	* configure: Regenerate.

	2011-03-24  Paolo Bonzini  <bonzini@@gnu.org>

	* Makefile.def: Add dependency from termcap to gdb.
	* Makefile.in: Regenerate.

	2011-03-24  Paolo Bonzini  <bonzini@@gnu.org>

	* configure.ac: Remove all mentions of mh-sysv4 and mh-solaris.
	* configure: Regenerate.
	* Makefile.def: Remove all mentions of X11_FLAGS_TO_PASS.
	* Makefile.tpl: Likewise.
	* Makefile.in: Regenerate.

	2011-03-24  Paolo Bonzini  <bonzini@@gnu.org>

	* configure.ac: Remove all mentions of tentative_cc.
	* configure: Regenerate.

	2011-03-16  Jack Howarth  <howarth@@bromo.med.uc.edu>

	PR lto/48086
	* configure.ac: Re-enable LTO on *-apple-darwin9.
	* configure: Regenerate.

config:
2011-03-24  Paolo Bonzini  <bonzini@@gnu.org>

	Sync from GCC:

	2011-03-24  Paolo Bonzini  <bonzini@@gnu.org>

	* mh-cygwin: Remove obsolete variables and dependencies.

	2011-03-24  Paolo Bonzini  <bonzini@@gnu.org>

	* mh-sysv4: Remove.
	* mh-solaris: Remove.

	2011-03-24  Paolo Bonzini  <bonzini@@gnu.org>

	* mh-sysv4: Remove AR_CFLAGS.
@
text
@a2235 3
  mep*-*-*)
    target_makefile_frag="config/mt-mep"
    ;;
a2247 3
  *-*-netware*)
    target_makefile_frag="config/mt-netware"
    ;;
a2261 3
  mips*-*-pe | sh*-*-pe | *arm-wince-pe)
    target_makefile_frag="config/mt-wince"
    ;;
@


1.134
log
@	* configure.ac (i[[3456789]]86-*-vsta, i[[3456789]]86-*-go32*,
	i[[3456789]]86-*-beos*, powerpc-*-beos*, m68k-hp-hpux*,
	m68k-apollo-sysv*, m68k-apollo-bsd*, m88k-dg-dgux*,
	m88k-harris-cxux*, m88k-motorola-sysv*, mips*-dec-ultrix*,
	mips*-nec-sysv4*, mips*-sgi-irix4*, mips*-*-sysv4*, mips*-*-sysv*,
	i370-ibm-opened*, i[[3456789]]86-*-sysv5*, i[[3456789]]86-*-dgux*,
	i[[3456789]]86-ncr-sysv4.3*, i[[3456789]]86-ncr-sysv4*,
	i[[3456789]]86-*-sco3.2v5*, i[[3456789]]86-*-sco*,
	i[[3456789]]86-*-udk*, vax-*-ultrix2*, m68k-sun-sunos*,
	hppa*-*-hiux*, *-*-hiux*, rs6000-*-lynxos*, *-*-sysv4*,
	*-*-rhapsody*): Remove host cases.
	* configure: Regenerate.

config:
	* mh-cxux, mh-decstation, mh-dgux386, mh-lynxrs6k, mh-ncr3000,
	mh-necv4, mh-sco, mh-sysv5: Remove.
@
text
@a1036 1
tentative_cc=""
a1039 3
  i[[3456789]]86-*-solaris2*)
    host_makefile_frag="config/mh-sysv4"
    ;;
a1052 3
  *-*-solaris2*)
    host_makefile_frag="config/mh-solaris"
    ;;
a1053 1
    tentative_cc="cc -Wp,-H256000"
a1056 1
    tentative_cc="cc -Wp,-H256000"
a1061 3
  *-hp-hpux*)
    tentative_cc="cc -Wp,-H256000"
    ;;
a1070 9
  *-*-lynxos*)
    # /bin/cc is less than useful for our purposes.  Always use GCC
    tentative_cc="/bin/gcc"
    ;;
  # This is placed last to prevent interfering with the cases above.
  i[[3456789]]86-*-*)
    # Build the stage2 and stage3 compilers with -fomit-frame-pointer.
    host_makefile_frag="config/mh-x86omitfp"
    ;;
a1073 19
# If we aren't going to be using gcc, see if we can extract a definition
# of CC from the fragment.
# Actually, use the 'pre-extracted' version above.
if test -z "${CC}" && test "${build}" = "${host}" ; then
  IFS="${IFS= 	}"; save_ifs="$IFS"; IFS="${IFS}:"
  found=
  for dir in $PATH; do
    test -z "$dir" && dir=.
    if test -f $dir/gcc; then
      found=yes
      break
    fi
  done
  IFS="$save_ifs"
  if test -z "${found}" && test -n "${tentative_cc}" ; then
    CC=$tentative_cc
  fi
fi

d1552 1
a1552 1
      *-apple-darwin* | *-cygwin* | *-mingw*) ;;
@


1.133
log
@	* configure.ac (ppc*-*-pe): Remove host case.
	(strongarm-*-coff | xscale-*-coff, strongarm-*-elf* |
	xscale-*-elf*, thumb-*-coff, thumb-*-elf, thumb-*-pe, ep9312-*-elf
	| ep9312-*-coff, parisc*64*-*-linux*, ppc*-*-pe): Remove target
	cases.
	* configure: Regenerate.
@
text
@d432 1
a432 4
  i[[3456789]]86-*-vsta)
    noconfigdirs="$noconfigdirs tcl expect dejagnu make texinfo bison patch flex byacc send-pr gprof uudecode dejagnu diff guile perl itcl gnuserv gettext"
    ;;
  i[[3456789]]86-*-go32* | i[[3456789]]86-*-msdosdjgpp*)
a441 3
  i[[3456789]]86-*-beos*)
    noconfigdirs="$noconfigdirs tk itcl libgui gdb"
    ;;
a447 3
  powerpc-*-beos*)
    noconfigdirs="$noconfigdirs tk itcl libgui gdb dejagnu readline"
    ;;
a959 2
      i[[3456789]]86-*-vsta) ;; # don't add gprof back in
      i[[3456789]]86-*-go32*) ;; # don't add gprof back in
a1040 98
  m68k-hp-hpux*)
    # Avoid "too much defining" errors from HPUX compiler.
    tentative_cc="cc -Wp,-H256000"
    # If "ar" in $PATH is GNU ar, the symbol table may need rebuilding.
    # If it's HP/UX ar, this should be harmless.
    RANLIB="ar ts"
    ;;
  m68k-apollo-sysv*)
    tentative_cc="cc -A ansi -A runtype,any -A systype,any -U__STDC__ -DUSG"
    ;;
  m68k-apollo-bsd*)
    #None of the Apollo compilers can compile gas or binutils.  The preprocessor
    # chokes on bfd, the compiler won't let you assign integers to enums, and
    # other problems.  Defining CC to gcc is a questionable way to say "don't use
    # the apollo compiler" (the preferred version of GCC could be called cc,
    # or whatever), but I'm not sure leaving CC as cc is any better...
    #CC=cc -A ansi -A runtype,any -A systype,any -U__STDC__ -DNO_STDARG
    # Used to have BISON=yacc.
    tentative_cc=gcc
    ;;
  m88k-dg-dgux*)
    tentative_cc="gcc -Wall -ansi -D__using_DGUX"
    ;;
  m88k-harris-cxux*)
    # Under CX/UX, we want to tell the compiler to use ANSI mode.
    tentative_cc="cc -Xa"
    host_makefile_frag="config/mh-cxux"
    ;;
  m88k-motorola-sysv*)
    ;;
  mips*-dec-ultrix*)
    tentative_cc="cc -Wf,-XNg1000"
    host_makefile_frag="config/mh-decstation"
    ;;
  mips*-nec-sysv4*)
    # The C compiler on NEC MIPS SVR4 needs bigger tables.
    tentative_cc="cc -ZXNd=5000 -ZXNg=1000"
    host_makefile_frag="config/mh-necv4"
    ;;
  mips*-sgi-irix4*)
    # Tell compiler to use K&R C.  We can't compile under the SGI Ansi
    # environment.  Also bump switch table size so that cp-parse will
    # compile.  Bump string length limit so linker builds.
    tentative_cc="cc -cckr -Wf,-XNg1500 -Wf,-XNk1000 -Wf,-XNh2000 -Wf,-XNl8192"
    ;;
  mips*-*-sysv4*)
    host_makefile_frag="config/mh-sysv4"
    ;;
  mips*-*-sysv*)
    # This is for a MIPS running RISC/os 4.52C.

    # This is needed for GDB, but needs to be in the top-level make because
    # if a library is compiled with the bsd headers and gets linked with the
    # sysv system libraries all hell can break loose (e.g. a jmp_buf might be
    # a different size).
    # ptrace(2) apparently has problems in the BSD environment.  No workaround is
    # known except to select the sysv environment.  Could we use /proc instead?
    # These "sysv environments" and "bsd environments" often end up being a pain.
    #
    # This is not part of CFLAGS because perhaps not all C compilers have this
    # option.
    tentative_cc="cc -systype sysv"
    ;;
  i370-ibm-opened*)
    tentative_cc="c89"
    ;;
  i[[3456789]]86-*-sysv5*)
    host_makefile_frag="config/mh-sysv5"
    ;;
  i[[3456789]]86-*-dgux*)
    tentative_cc="gcc -Wall -ansi -D__using_DGUX"
    host_makefile_frag="config/mh-dgux386"
    ;;
  i[[3456789]]86-ncr-sysv4.3*)
    # The MetaWare compiler will generate a copyright message unless you
    # turn it off by adding the -Hnocopyr flag.
    tentative_cc="cc -Hnocopyr"
    ;;
  i[[3456789]]86-ncr-sysv4*)
    # for an NCR 3000 (i486/SVR4) system.
    # The NCR 3000 ships with a MetaWare compiler installed as /bin/cc.
    # This compiler not only emits obnoxious copyright messages every time
    # you run it, but it chokes and dies on a whole bunch of GNU source
    # files.  Default to using the AT&T compiler installed in /usr/ccs/ATT/cc.
    tentative_cc="/usr/ccs/ATT/cc"
    host_makefile_frag="config/mh-ncr3000"
    ;;
  i[[3456789]]86-*-sco3.2v5*)
    ;;
  i[[3456789]]86-*-sco*)
    # The native C compiler botches some simple uses of const.  Unfortunately,
    # it doesn't defined anything like "__sco__" for us to test for in ansidecl.h.
    tentative_cc="cc -Dconst="
    host_makefile_frag="config/mh-sco"
    ;;
  i[[3456789]]86-*-udk*)
    host_makefile_frag="config/mh-sysv5"
    ;;
a1056 4
  vax-*-ultrix2*)
    # The old BSD pcc isn't up to compiling parts of gdb so use gcc
    tentative_cc=gcc
    ;;
a1059 5
  m68k-sun-sunos*)
    # Sun's C compiler needs the -J flag to be able to compile cp-parse.c
    # without overflowing the jump tables (-J says to use a 32 bit table)
    tentative_cc="cc -J"
    ;;
d1064 1
a1064 1
  hppa*-hp-hpux* | hppa*-*-hiux*)
d1071 1
a1071 1
  *-hp-hpux* | *-*-hiux*)
a1073 5
  rs6000-*-lynxos*)
    # /bin/cc is less than useful for our purposes.  Always use GCC
    tentative_cc="/usr/cygnus/progressive/bin/gcc"
    host_makefile_frag="config/mh-lynxrs6k"
    ;;
a1086 3
  *-*-sysv4*)
    host_makefile_frag="config/mh-sysv4"
    ;;
d2437 1
a2437 1
  *-*-darwin* | *-*-rhapsody* ) RPATH_ENVVAR=DYLD_LIBRARY_PATH ;;
@


1.132
log
@	* configure.ac (arm-semi-aof, crx-*-*, parisc*-*-linux*,
	i370-*-opened*, i[[3456789]]86-moss-msdos | i[[3456789]]86-*-moss*
	| i[[3456789]]86-*-uwin*, mcore-*-pe*): Remove empty cases.
	* configure: Regenerate.
@
text
@a453 3
  ppc*-*-pe)
    noconfigdirs="$noconfigdirs patch diff make tk tcl expect dejagnu autoconf automake texinfo bison send-pr gprof rcs guile perl itcl gnuserv"
    ;;
d672 1
a672 1
  arm-*-coff | strongarm-*-coff | xscale-*-coff)
d676 1
a676 1
  arm-*-elf* | strongarm-*-elf* | xscale-*-elf* | arm*-*-eabi* )
a693 9
  thumb-*-coff)
    noconfigdirs="$noconfigdirs target-libgloss ${libgcj}"
    ;;
  thumb-*-elf)
    noconfigdirs="$noconfigdirs target-libgloss ${libgcj}"
    ;;
  thumb-*-pe)
    noconfigdirs="$noconfigdirs target-libgloss ${libgcj}"
    ;;
a737 3
  ep9312-*-elf | ep9312-*-coff)
    libgloss_dir=arm
    ;;
d756 1
a756 1
  hppa*64*-*-linux* | parisc*64*-*-linux*)
d900 1
a900 1
  powerpc*-*-winnt* | powerpc*-*-pe* | ppc*-*-pe)
@


1.131
log
@	* config-ml.in: Don't handle arc-*-elf*.
	* configure.ac (arc-*-*, crx-*-*, i[[3456789]]86-*-pe,
	m68hc11-*-*|m6811-*-*|m68hc12-*-*|m6812-*-*, mcore-*-pe*): Don't
	handle GCC libraries.
	* configure: Regenerate.
@
text
@a674 2
  arm-semi-aof )
    ;;
a743 2
  crx-*-*)
    ;;
d777 1
a777 1
  parisc*-*-linux* | hppa*-*-linux*)
a810 2
  i370-*-opened*)
    ;;
d854 1
a854 2
  i[[3456789]]86-moss-msdos | i[[3456789]]86-*-moss* | \
  i[[3456789]]86-*-uwin* | i[[3456789]]86-*-interix* )
a894 2
  mcore-*-pe*)
    ;;
@


1.130
log
@	PR bootstrap/48120:
	* configure.ac (pwllib): Use LIBS instead of LDFLAGS.
	Add -lstdc++ -lm to LIBS.
	* configure: Regenerate.
@
text
@d673 1
a673 1
    noconfigdirs="$noconfigdirs target-libgloss ${libgcj}"
a746 1
    noconfigdirs="$noconfigdirs target-libstdc++-v3 target-mudflap ${libgcj}"
d864 1
a864 1
    noconfigdirs="$noconfigdirs target-libstdc++-v3 target-libgloss ${libgcj}"
d890 1
a890 1
    noconfigdirs="$noconfigdirs target-libiberty target-libstdc++-v3 ${libgcj}"
a902 3
  # The EPOC C++ environment does not support exceptions or rtti,
  # and so building libstdc++-v3 tends not to always work.
    noconfigdirs="$noconfigdirs target-libstdc++-v3"
@


1.129
log
@Adjust test of with_ppl.

2011-03-03  Sebastian Pop  <sebastian.pop@@amd.com>

        * configure.ac: Adjust test of with_ppl.
        * configure: Regenerated.
@
text
@d1680 4
a1683 4
    saved_LDFLAGS="$LDFLAGS"
    LDFLAGS="$LDFLAGS $ppllibs"
    AC_CHECK_LIB(pwl,PWL_handle_timeout,[pwllib="-lpwl"])
    LDFLAGS="$saved_LDFLAGS"
@


1.128
log
@Add -lpwl to ppllibs, and -lisl to clooglibs.

2011-03-02  Sebastian Pop  <sebastian.pop@@amd.com>

	* configure.ac: Add -lpwl to ppllibs.
	* config/cloog.m4: Add -lisl to clooglibs.
	* configure: Regenerated.
@
text
@d1678 1
a1678 1
if test "x$with_ppl" = xyes; then
@


1.127
log
@Sync toplevel and config/ from GCC.

/:
	Sync from GCC:

	2011-02-12  Alexandre Oliva  <aoliva@@redhat.com>

	PR lto/47225
	* Makefile.def (lto-plugin): Double dash for enable-shared.
	(configure-gcc): Depend on all-lto-plugin.
	* Makefile.in: Rebuilt.

	2011-02-11  Ralf Wildenhues  <Ralf.Wildenhues@@gmx.de>

	* configure.ac: Remove extra bracket.
	* configure: Regenerate.

	2011-02-06  Kai Tietz  <kai.tietz@@onevision.com>

	PR lto/47225
	* Makefile.def: Add dependency for install-gcc
	on install-lto-plugin.
	* Makfile.in: Regenerated

	2011-01-25  Jakub Jelinek  <jakub@@redhat.com>

	* configure.ac: If with_ppl is no, move setting with_cloog=no
	after CLOOG_REQUESTED check.
	* configure: Regenerated.

	2011-01-25  Sebastian Pop  <sebastian.pop@@amd.com>

	* configure.ac: Call AC_MSG_ERROR when PPL 0.11 is not present and
	CLooG has been requested.
	* configure: Regenerated.

	2011-01-25  Sebastian Pop  <sebastian.pop@@amd.com>

	* configure: Regenerated.
	* configure.ac: Check for version 0.11 (or later revision) of PPL.

	2011-01-25  Tobias Grosser  <grosser@@fim.uni-passau.de>

	* configure: Regenerated.
	* configure.ac: Use CLOOG_CHECK_VERSION(0,16,1).

	2011-01-07  Jan Hubicka  <jh@@suse.cz>

	PR lto/47225
	* Makefile.in: Regenerate.
	* Makefile.def (lto-plugin): Always pass enable-shared to the plugin
	configure.

config/:
2011-01-25  Jakub Jelinek  <jakub@@redhat.com>

	* cloog.m4 (CLOOG_REQUESTED): Use $2 if --without-cloog.

2011-01-10  Jan Hubicka  <jh@@suse.cz>

	* bootstrap-lto.mk: -fuse-linker-plugin is default now;
	pass -fno-lto to STAGEprofile.
@
text
@d1624 1
a1624 1
ppllibs=" -lppl_c -lppl -lgmpxx"
d1626 1
d1640 6
a1645 5
case $with_ppl in 
  no)
    ppllibs=
    ;;
  "" | yes)
d1648 1
a1648 1
    ppllibs="-L$with_ppl/lib -lppl_c -lppl -lgmpxx"
d1650 5
d1657 2
a1658 1
if test "x$with_ppl_include" != x; then
d1660 1
d1662 1
d1664 2
a1665 1
  ppllibs="-L$with_ppl_lib -lppl_c -lppl -lgmpxx"
d1667 6
a1672 2
if test "x$with_ppl$with_ppl_include$with_ppl_lib" = x && test -d ${srcdir}/ppl; then
  ppllibs='-L$$r/$(HOST_SUBDIR)/ppl/interfaces/C/'"$lt_cv_objdir"' -L$$r/$(HOST_SUBDIR)/ppl/src/'"$lt_cv_objdir"' -lppl_c -lppl -lgmpxx '
d1675 1
d1678 21
a1698 16
AC_ARG_ENABLE(ppl-version-check,
[AS_HELP_STRING([--disable-ppl-version-check],
		[disable check for PPL version])],
ENABLE_PPL_CHECK=$enableval,
ENABLE_PPL_CHECK=yes)

if test "x$with_ppl" != "xno" -a "${ENABLE_PPL_CHECK}" = "yes"; then
  saved_CFLAGS="$CFLAGS"
  CFLAGS="$CFLAGS $pplinc $gmpinc"
  AC_MSG_CHECKING([for version 0.11 (or later revision) of PPL])
  AC_TRY_COMPILE([#include "ppl_c.h"],[
  #if PPL_VERSION_MAJOR != 0 || PPL_VERSION_MINOR < 11
  choke me
  #endif
  ], [AC_MSG_RESULT([yes])], [AC_MSG_RESULT([no]); ppllibs= ; pplinc= ; with_ppl=no ])
  CFLAGS="$saved_CFLAGS"
@


1.126
log
@PR libgcj/44341
* configure.ac: Discard --with-* flags for host when configuring
target libraries for cross build.
* configure: Rebuilt.
@
text
@d1671 1
a1671 1
  AC_MSG_CHECKING([for version 0.10 (or later revision) of PPL])
d1673 1
a1673 1
  #if PPL_VERSION_MAJOR != 0 || PPL_VERSION_MINOR < 10
d1691 5
d1704 1
a1704 9
  dnl Version check for CLooG-Org
  dnl As long as there is no new release of CLooG,
  dnl we will check for 0.14.0.
  dnl
  dnl The first git revision that will work with
  dnl GCC is: bd91b845a65805c290d43fc1bef8139864a163fb
  dnl This is enforced implictly, as this is the commit that
  dnl introduced the versioning information used within our
  dnl checks.
d1706 3
a1708 3
  dnl If we're using CLooG-Legacy, the provided version information
  dnl will be ignored.
  CLOOG_CHECK_VERSION(0,14,0)
d1710 1
a1710 2
  dnl Only execute fail-action, if CLooG has been
  dnl requested.
d1712 1
a1712 1
    AC_MSG_ERROR([Unable to find a usable CLooG. See config.log for details.])])
@


1.125
log
@Sync toplevel configure from GCC

	2011-01-21  Andreas Schwab  <schwab@@redhat.com>

	* configure.ac: Use AS_HELP_STRING throughout.
	* configure: Regenerate.

	2011-01-18  Jie Zhang  <jie.zhang@@analog.com>

	* configure.ac (bfin-*-*): Remove gdb from noconfigdirs.
	* configure: Regenerate.
@
text
@d2852 1
d2868 1
d2890 33
d2928 1
d2959 3
d2988 1
d2991 1
d2994 1
d3023 1
a3023 1
target_configargs="$target_configargs ${baseargs}"
@


1.124
log
@port GDB to ia64-hpux (native).

ChangeLog:

        * configure.ac: Remove readline, mmalloc, and gdb from noconfigdirs
        for ia64-hpux.
        * configure: Regenerate.

gdb/ChangeLog:

        * config/ia64/hpux.mh, ia64-hpux-nat.c, ia64-hpux-tdep.c,
        ia64-hpux-tdep.h, solib-ia64-hpux.c, solib-ia64-hpux.h: New files.

        * configure.host: Add handling for ia64-hpux hosts.  Add associated
        floatformats.
        * configure.tgt: Add handling for ia64-hpux targets.
        * Makefile.in (ALL_64_TARGET_OBS): Add ia64-hpux-tdep.o.
        (HFILES_NO_SRCDIR): Add ia64-hpux-tdep.h.
        (ALLDEPFILES): Add ia64-hpux-nat.c ia64-hpux-tdep.c.
@
text
@d2 1
a2 1
#   2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010
d347 2
a348 1
[[  --enable-gold[=ARG]     build gold [ARG={default,yes,no}]]],
d389 2
a390 1
[[  --enable-ld[=ARG]     build ld [ARG={default,yes,no}]]],
d485 1
a485 1
[  --enable-libada         build libada directory],
d493 1
a493 1
[  --enable-libssp         build libssp directory],
d716 1
a716 1
    noconfigdirs="$noconfigdirs target-boehm-gc gdb"
d1325 2
a1326 1
[  --enable-build-with-cxx build with C++ compiler instead of C compiler],
d1340 11
a1350 6
AC_ARG_WITH(mpc, [  --with-mpc=PATH        specify prefix directory for installed MPC package.
                          Equivalent to --with-mpc-include=PATH/include
                          plus --with-mpc-lib=PATH/lib])
AC_ARG_WITH(mpc-include, [  --with-mpc-include=PATH
                          specify directory for installed MPC include files])
AC_ARG_WITH(mpc-lib, [  --with-mpc-lib=PATH    specify directory for the installed MPC library])
d1374 16
a1389 10
AC_ARG_WITH(mpfr-dir, [  --with-mpfr-dir=PATH    this option has been REMOVED],
  AC_MSG_ERROR([The --with-mpfr-dir=PATH option has been removed.
Use --with-mpfr=PATH or --with-mpfr-include=PATH plus --with-mpfr-lib=PATH]))

AC_ARG_WITH(mpfr, [  --with-mpfr=PATH        specify prefix directory for installed MPFR package.
                          Equivalent to --with-mpfr-include=PATH/include
                          plus --with-mpfr-lib=PATH/lib])
AC_ARG_WITH(mpfr-include, [  --with-mpfr-include=PATH
                          specify directory for installed MPFR include files])
AC_ARG_WITH(mpfr-lib, [  --with-mpfr-lib=PATH    specify directory for the installed MPFR library])
d1413 16
a1428 9
AC_ARG_WITH(gmp-dir, [  --with-gmp-dir=PATH     this option has been REMOVED],
  AC_MSG_ERROR([The --with-gmp-dir=PATH option has been removed.
Use --with-gmp=PATH or --with-gmp-include=PATH plus --with-gmp-lib=PATH]))

AC_ARG_WITH(gmp, [  --with-gmp=PATH         specify prefix directory for the installed GMP package.
                          Equivalent to --with-gmp-include=PATH/include
                          plus --with-gmp-lib=PATH/lib])
AC_ARG_WITH(gmp-include, [  --with-gmp-include=PATH specify directory for installed GMP include files])
AC_ARG_WITH(gmp-lib, [  --with-gmp-lib=PATH     specify directory for the installed GMP library])
d1560 4
a1563 2
AC_ARG_WITH(host-libstdcxx, [  --with-host-libstdcxx=L Use linker arguments L to link with libstdc++
                          when linking with PPL])
d1573 1
a1573 1
[  --with-stage1-ldflags=FLAGS Linker flags for stage1],
d1584 1
a1584 1
[  -with-stage1-libs=LIBS      Libraries for stage1],
d1596 1
a1596 1
[  --with-boot-libs=LIBS     Libraries for stage2 and later],
d1607 2
a1608 1
[  --with-boot-ldflags=FLAGS Linker flags for stage2 and later],
d1627 11
a1637 5
AC_ARG_WITH(ppl, [  --with-ppl=PATH         Specify prefix directory for the installed PPL package
                          Equivalent to --with-ppl-include=PATH/include
                          plus --with-ppl-lib=PATH/lib])
AC_ARG_WITH(ppl-include, [  --with-ppl-include=PATH Specify directory for installed PPL include files])
AC_ARG_WITH(ppl-lib, [  --with-ppl-lib=PATH     Specify the directory for the installed PPL library])
d1663 2
a1664 1
[  --disable-ppl-version-check    disable check for PPL version],
d1721 1
a1721 1
[  --enable-lto            enable link time optimization support],
d1982 3
a1984 2
[  --enable-stage1-languages@@<:@@=all@@:>@@   choose additional languages to build during
                          stage1.  Mostly useful for compiler development.],
d2045 3
a2047 2
[  --enable-objc-gc        enable use of Boehm's garbage collector with the
                          GNU Objective-C runtime],
d2202 2
a2203 2
  [  --with-build-sysroot=SYSROOT
                          use sysroot as the system root during the build],
d2211 2
a2212 2
  [  --with-debug-prefix-map='A=B C=D ...'
                             map A to B, C to D ... in debug information],
d2641 2
a2642 1
[  --enable-bootstrap      enable bootstrapping @@<:@@yes if native build@@:>@@],,
d2711 2
a2712 2
  [--with-build-config='NAME NAME2...'
                          Use config/NAME.mk build configuration],
d2797 4
a2800 4
[  --enable-serial-@@<:@@{host,target,build}-@@:>@@configure
                          force sequential configuration of
                          sub-packages for the host, target or build
                          machine, or all sub-packages])
d3264 2
a3265 2
  [  --with-build-time-tools=PATH
                          use given path to find target tools during the build],
d3352 3
a3354 2
[  --enable-maintainer-mode enable make rules and dependencies not useful
                          (and sometimes confusing) to the casual installer],
d3408 2
a3409 2
[  --enable-stage1-checking@@<:@@=all@@:>@@   choose additional checking for stage1
                          of the compiler],
d3420 2
a3421 1
[  --enable-werror         enable -Werror in bootstrap stage2 and later], [],
@


1.123
log
@Sync toplevel configure from GCC.

/:
	Sync from GCC:
	2010-12-22  Hariharan Sandanagobalane  <hariharan@@picochip.com>

	* configure.ac: (picochip): Disable libiberty.
	* configure: Regenerate.
@
text
@d807 2
a808 2
    # No gdb or ld support yet.
    noconfigdirs="$noconfigdirs ${libgcj} readline mmalloc libgui itcl gdb ld"
@


1.122
log
@	PR bootstrap/46819
	* configure.ac: For --disable-libgcj clear libgcj_saved.
	* configure: Rebuild.
@
text
@d919 3
@


1.121
log
@2010-12-10  Tobias Burnus  <burnus@@net-b.de>

	PR fortran/46540
	* configure.ac: Add --disable-libquadmath and
	--disable-libquadmath-support.
@
text
@d509 3
@


1.120
log
@	* configure.ac: Always set default for poststage1_ldflags to
	-static-libstdc++ -static-libgcc.
@
text
@d461 21
@


1.119
log
@	PR libffi/46792
	* configure.ac (cris-*-elf, crisv32-*-elf): Disable target-libffi.
	* configure: Regenerate.
@
text
@d1564 4
a1567 4
 # With --enable-build-with-cxx, default to linking libstdc++ and
 # libgcc statically.  But if the user explicitly specified the
 # libraries to use, trust that they are doing what they want.
 if test "$ENABLE_BUILD_WITH_CXX" = "yes" -a "$poststage1_libs" = ""; then
@


1.118
log
@* configure.ac: Move comment to remove extra space in last argument
of GCC_TARGET_TOOL.
@
text
@d710 2
a711 2
      *-*-elf)
	noconfigdirs="$noconfigdirs target-boehm-gc";;
@


1.117
log
@PR other/46020
* configure.ac (CXX_FOR_TARGET): Add -funconfigured-libstdc++-v3.
* Makefile.def (CXX_FOR_TARGET): Removed from flags_to_pass.
* Makefile.tpl (CXX_FOR_TARGET_FLAG_TO_PASS): New.
(BASE_FLAGS_TO_PASS): Use it.
* configure: Rebuilt.
* Makefile.in: Rebuilt.
@
text
@d3238 1
d3240 1
a3240 1
		[gcc/g++ -B$$r/$(HOST_SUBDIR)/gcc/ -nostdinc++ `if test -f $$r/$(TARGET_SUBDIR)/libstdc++-v3/scripts/testsuite_flags; then $(SHELL) $$r/$(TARGET_SUBDIR)/libstdc++-v3/scripts/testsuite_flags --build-includes; else echo -funconfigured-libstdc++-v3 ; fi` -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src/.libs],dnl see comments for CXX_FOR_TARGET_FLAG_TO_PASS
@


1.116
log
@Properly check default linker.

2010-11-23  H.J. Lu  <hongjiu.lu@@intel.com>

	PR binutils/12258
	* configure.ac: Correct comments for --enable-gold/--enable-ld.
	Properly check default linker.
	* configure: Regnerated.
@
text
@d3239 1
a3239 1
		[gcc/g++ -B$$r/$(HOST_SUBDIR)/gcc/ -nostdinc++ `test ! -f $$r/$(TARGET_SUBDIR)/libstdc++-v3/scripts/testsuite_flags || $(SHELL) $$r/$(TARGET_SUBDIR)/libstdc++-v3/scripts/testsuite_flags --build-includes` -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src/.libs],
@


1.115
log
@	* configure.ac: For --enable-gold, handle value `default' instead of
	`both*'.   New configure option --{en,dis}able-ld.

ld, gold/
	* configure.ac: For --enable-gold, handle value `default' instead of
	`both*'. Always install ld as ld.gold, install as ld if gold is
	the default.
@
text
@d330 4
a333 1
# --enable-gold[=default] [--enable-ld]
d339 2
a340 1
#     Build both gold (installed as "gold") and ld (installed as "ld").
d394 1
a394 1
    if test x${default_ld} != xgold; then
@


1.114
log
@	* configure.ac: Only disable a language library if no language needs
	it.  Don't let --disable-libgcj uncondtionally disable libffi.
	* configure: Rebuild.

Also moved ChangeLog entry to correct file.
@
text
@d327 13
a339 6
# Handle --enable-gold.
#   --enable-gold		Build only gold
#   --disable-gold [default]	Build only ld
#   --enable-gold=both		Build both gold and ld, ld is default
#   --enable-gold=both/ld	Same
#   --enable-gold=both/gold	Build both gold and ld, gold is default, ld is renamed ld.bfd
d341 1
d343 1
a343 1
[[  --enable-gold[=ARG]     build gold [ARG={both}[/{gold,ld}]]]],
d346 2
a347 2
  case "${ENABLE_GOLD}" in
  yes|both|both/gold|both/ld)
d367 4
a370 8
	  case "${ENABLE_GOLD}" in 
	  both*)
            configdirs="$configdirs gold"
	    ;;
	  *)
            configdirs=`echo " ${configdirs} " | sed -e 's/ ld / gold /'`
	    ;;
	  esac
d381 25
a405 1
  esac
@


1.113
log
@PR other/46202: implement install-strip.

/:
	PR other/46202
	* configure.ac: Fix just-built in-tree STRIP name to be
	binutils/strip-new.
	* configure: Regenerate.
	* Makefile.def (install-strip-gcc, install-strip-binutils)
	(install-strip-opcodes, install-strip-ld, install-strip-itcl)
	(install-strip-sid): Mirror dependencies on non-strip variants
	of these targets on the respective -strip prerequisites.
	* Makefile.tpl (install-strip, install-strip-host)
	(install-strip-target): New targets.
	(install-strip-[+module+], install-strip-target-[+module+]):
	New targets.
	* Makefile.in: Regenerate.

etc/:
	* Makefile.in (install-strip): New target.


libiberty/:
	PR other/46202
	* Makefile.in (install-strip): New phony target.
	(install): Also mark as phony.
@
text
@d454 2
a455 1
  noconfigdirs="$noconfigdirs ${libgcj}"
d1769 3
d1849 2
a1850 1
            eval noconfigdirs='"$noconfigdirs "'\"$target_libs $lang_dirs\"
d1854 2
a1855 1
            eval noconfigdirs='"$noconfigdirs "'\"$target_libs $lang_dirs\"
d1862 1
d1880 11
@


1.112
log
@Merge from gcc top-level.

./:
	* configure.ac: Add target-libgo to target_libraries.  Set
	and substitute GOC_FOR_BUILD and GOC_FOR_TARGET.
	* Makefile.tpl (BUILD_EXPORTS): Add GOC and GOCFLAGS.
	(HOST_EXPORTS): Add GOC.
	(BASE_TARGET_EXPORTS): Add GOC.
	(GOC_FOR_BUILD, GOCFLAGS, GOC_FOR_TARGET): New variables.
	(GOCFLAGS_FOR_TARGET): New variable.
	(EXTRA_HOST_FLAGS): Add GOC.
	(EXTRA_TARGET_FLAGS): Add GOC and GOCFLAGS.
	* Makefile.def (target_modules): Add libgo.
	(flags_to_pass): Add GOC_FOR_TARGET and GOCFLAGS_FOR_TARGET.
	(dependencies): Add dependency from configure-target-libgo to
	configure-target-libffi and all-target-libstdc++-v3.  Add
	dependencies from all-target-libgo to all-target-libffi.
	(languages): Add go.
	* configure: Rebuild.
	* Makefile.in: Rebuild.

	* config-ml.in: Add Go support: treat GOC and GOCFLAGS like other
	compiler/flag environment variables.

	* configure.ac: Check for lang_requires_boot_languages in
	config-lang.in files.
	* configure: Rebuild.

	PR fortran/32049
	* Makefile.def: Add libquadmath; build it with language=fortran.
	* configure.ac: Add libquadmath.
	* Makefile.tpl: Handle multiple libs in check-[+language+].
	* Makefile.in: Regenerate.
	* configure: Regenerate.

	* configure.ac: Fix spelling in option names.
	* configure: Regenerated.

	PR bootstrap/39622
	* configure.ac (FLAGS_FOR_TARGET): Add include-fixed path.
	* configure: Regenerated.

	* config/cloog.m4: Add -enable-cloog-backend=(isl|ppl|ppl-legacy) to
	define the cloog backend to use. Furthermore, only pass the ppllibs to
	the configure checks, if necessary.
	* configure: Regenerate.

	* config/cloog.m4: Use CLooG predefined macro to check for CLooG PPL.
	* configure: regenerate

	* config/cloog.m4: Fix typo.  verison -> version.
	* configure: Regenerate.

	* config/cloog.m4: Pass ppl libraries to the CLooG version check.
	* configure: Regenerate.

	* configure.ac: Support official CLooG.org versions.
	* configure: Regenerate.
	* config/cloog.m4: New.

	* configure.ac (*-*-darwin*): Use mh-darwin for all Darwin variants.
	* configure: Regenerate.

config/:
	* cloog.m4 (CLOOG_INIT_FLAGS): Fix spelling in option names.

	* bootstrap-lto: Use -flto.

	* mh-darwin: Renamed from mh-ppc-darwin.
@
text
@d3207 1
a3207 1
GCC_TARGET_TOOL(strip, STRIP_FOR_TARGET, STRIP, [binutils/strip])
@


1.111
log
@Sync from gcc/

	PR lto/46273
	* configure.ac: Remove libelf tests.  Build lto-plugin on ELF always
	and on other supported platforms whenever LTO is enabled.
	* configure: Rebuild.
@
text
@d31 1
d198 1
d203 2
a204 1
		target-libada"
d1163 2
a1164 2
  powerpc-*-darwin*)
    host_makefile_frag="config/mh-ppc-darwin"
d1213 1
d1227 1
d1280 1
a1280 1
AC_ARG_WITH(mpc_include, [  --with-mpc-include=PATH
d1282 1
a1282 1
AC_ARG_WITH(mpc_lib, [  --with-mpc-lib=PATH    specify directory for the installed MPC library])
d1313 1
a1313 1
AC_ARG_WITH(mpfr_include, [  --with-mpfr-include=PATH
d1315 1
a1315 1
AC_ARG_WITH(mpfr_lib, [  --with-mpfr-lib=PATH    specify directory for the installed MPFR library])
d1346 2
a1347 2
AC_ARG_WITH(gmp_include, [  --with-gmp-include=PATH specify directory for installed GMP include files])
AC_ARG_WITH(gmp_lib, [  --with-gmp-lib=PATH     specify directory for the installed GMP library])
d1546 2
a1547 2
AC_ARG_WITH(ppl_include, [  --with-ppl-include=PATH Specify directory for installed PPL include files])
AC_ARG_WITH(ppl_lib, [  --with-ppl-lib=PATH     Specify the directory for the installed PPL library])
a1594 8
clooglibs=" -lcloog "
clooginc=" -DCLOOG_PPL_BACKEND "

AC_ARG_WITH(cloog, [  --with-cloog=PATH       Specify prefix directory for the installed CLooG-PPL package
                          Equivalent to --with-cloog-include=PATH/include
                          plus --with-cloog-lib=PATH/lib])
AC_ARG_WITH(cloog_include, [  --with-cloog-include=PATH Specify directory for installed CLooG include files])
AC_ARG_WITH(cloog_lib, [  --with-cloog-lib=PATH   Specify the directory for the installed CLooG library])
d1596 3
d1602 24
a1625 18

case $with_cloog in 
  no)
    clooglibs=
    clooginc=
    ;;
  "" | yes)
    ;;
  *)
    clooglibs="-L$with_cloog/lib -lcloog"
    clooginc="-I$with_cloog/include -DCLOOG_PPL_BACKEND "
    ;;
esac
if test "x$with_cloog_include" != x; then
  clooginc="-I$with_cloog_include -DCLOOG_PPL_BACKEND "
fi
if test "x$with_cloog_lib" != x; then
  clooglibs="-L$with_cloog_lib -lcloog"
a1626 31
if test "x$with_cloog$with_cloog_include$with_cloog_lib" = x && test -d ${srcdir}/cloog; then
  clooglibs='-L$$r/$(HOST_SUBDIR)/cloog/'"$lt_cv_objdir"' -lcloog '
  clooginc='-I$$r/$(HOST_SUBDIR)/cloog/include -I$$s/cloog/include -DCLOOG_PPL_BACKEND '
  enable_cloog_version_check=no
fi

AC_ARG_ENABLE(cloog-version-check,
[  --disable-cloog-version-check  disable check for CLooG version],
ENABLE_CLOOG_CHECK=$enableval,
ENABLE_CLOOG_CHECK=yes)

if test "x$with_cloog" != "xno" -a "${ENABLE_CLOOG_CHECK}" = "yes"; then
  saved_CFLAGS="$CFLAGS"
  CFLAGS="$CFLAGS $clooginc $gmpinc $pplinc"
  AC_MSG_CHECKING([for version 0.15.5 (or later revision) of CLooG])
  AC_TRY_COMPILE([#include "cloog/cloog.h"],[
  #if CLOOG_VERSION_MAJOR != 0 || CLOOG_VERSION_MINOR != 15 || CLOOG_VERSION_REVISION < 5
  choke me
  #endif
  ], [AC_TRY_COMPILE([#include "cloog/cloog.h"],[
  #if CLOOG_VERSION_MAJOR != 0 || CLOOG_VERSION_MINOR != 15 || CLOOG_VERSION_REVISION < 9
  choke me
  #endif
  ], [AC_MSG_RESULT([yes])], [AC_MSG_RESULT([buggy but acceptable])])],
  [AC_MSG_RESULT([no]); clooglibs= ; clooginc= ])
  CFLAGS="$saved_CFLAGS"
fi

# Flags needed for CLOOG
AC_SUBST(clooglibs)
AC_SUBST(clooginc)
d1713 2
a1714 1
        # From the config-lang.in, get $language, $lang_requires
d1717 1
d1719 1
a1719 1
        for other in ${lang_requires} ; do
d1729 16
d2927 1
a2927 1
       FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -isystem $$r/$(HOST_SUBDIR)/gcc/include'
d3058 1
d3169 1
d3200 2
@


1.111.2.1
log
@	* configure.ac: For --enable-gold, handle value `default' instead of
	`both*'. Always install ld as ld.gold, install as ld if gold is
	the default.
	* configure: Regenerate.
@
text
@d324 6
a329 13
# Handle --enable-gold, --enable-ld.
# --disable-gold [--enable-ld]
#     Build only ld.  Default option.
# --enable-gold[=default] [--enable-ld]
#     Build both gold and ld.  Install gold as "ld.gold" and "ld",
#     install ld as "ld.bfd".
# --enable-gold[=default] --disable-ld
#     Build only gold, which is then installed as both "ld.gold" and "ld".
# --enable-gold --enable-ld=default
#     Build both gold (installed as "gold") and ld (installed as "ld").
#     In other words, ld is default
# --enable-gold=default --enable-ld=default
#     Error.
a330 1
default_ld=
d332 1
a332 1
[[  --enable-gold[=ARG]     build gold [ARG={default,yes,no}]]],
d335 2
a336 2
case "${ENABLE_GOLD}" in
  yes|default)
d356 8
a363 4
	  configdirs="$configdirs gold"
	  if test x${ENABLE_GOLD} = xdefault; then
	    default_ld=gold
	  fi
d374 1
a374 25
esac

AC_ARG_ENABLE(ld,
[[  --enable-ld[=ARG]     build ld [ARG={default,yes,no}]]],
ENABLE_LD=$enableval,
ENABLE_LD=yes)

case "${ENABLE_LD}" in
  default)
    if test x${default_ld} != xgold; then
      AC_MSG_ERROR([either gold or ld can be the default ld])
    fi
    ;;
  yes)
    ;;
  no)
    if test x${ENABLE_GOLD} != xyes; then
      AC_MSG_WARN([neither ld nor gold are enabled])
    fi
    configdirs=`echo " ${configdirs} " | sed -e 's/ ld / /'`
    ;;
  *)
    AC_MSG_ERROR([invalid --enable-ld argument])
    ;;
esac
@


1.111.2.2
log
@Backport from trunk:

2010-11-23  H.J. Lu  <hongjiu.lu@@intel.com>

	PR binutils/12258
	* configure.ac: Correct comments for --enable-gold/--enable-ld.
	Properly check default linker.
	* configure: Regnerated.
@
text
@d327 1
a327 4
# --enable-gold [--enable-ld]
#     Build both gold and ld.  Install gold as "ld.gold", install ld
#     as "ld.bfd" and "ld".
# --enable-gold=default [--enable-ld]
d333 1
a333 2
#     Build both gold (installed as "ld.gold") and ld (installed as "ld"
#     and ld.bfd).
d387 1
a387 1
    if test x${default_ld} != x; then
@


1.111.2.3
log
@	PR binutils/12665
	* configure.ac: Correct for minimum CLOOG version.
	* configure: Regenerate.
@
text
@d1669 1
a1669 1
  #if ((CLOOG_VERSION_MAJOR < 0) || (CLOOG_VERSION_MAJOR == 0 && CLOOG_VERSION_MINOR < 15) || (CLOOG_VERSION_MAJOR == 0 && CLOOG_VERSION_MINOR == 15 && CLOOG_VERSION_REVISION < 5))
d1673 1
a1673 1
  #if ((CLOOG_VERSION_MAJOR < 0) || (CLOOG_VERSION_MAJOR == 0 && CLOOG_VERSION_MINOR < 15) || (CLOOG_VERSION_MAJOR == 0 && CLOOG_VERSION_MINOR == 15 && CLOOG_VERSION_REVISION < 5))
@


1.110
log
@	PR binutils/12110
	* configure.ac: Error when source path contains spaces.
	* configure: Regenerate.
@
text
@d1659 3
a1661 140

ACX_ELF_TARGET_IFELSE([if test x"$enable_lto" = x"yes" ; then
  # Make sure that libelf.h and gelf.h are available.
  AC_ARG_WITH(libelf, [  --with-libelf=PATH       Specify prefix directory for the installed libelf package
                          Equivalent to --with-libelf-include=PATH/include
                          plus --with-libelf-lib=PATH/lib])

  AC_ARG_WITH(libelf_include, [  --with-libelf-include=PATH Specify directory for installed libelf include files])

  AC_ARG_WITH(libelf_lib, [  --with-libelf-lib=PATH   Specify the directory for the installed libelf library])

  saved_CFLAGS="$CFLAGS"
  saved_CPPFLAGS="$CPPFLAGS"
  saved_LIBS="$LIBS"

  case $with_libelf in 
    "")
      libelflibs="-lelf"
      libelfinc="-I/usr/include/libelf"
      ;;
    *)
      libelflibs="-L$with_libelf/lib -lelf"
      libelfinc="-I$with_libelf/include -I$with_libelf/include/libelf"
      LIBS="$libelflibs $LIBS"
      ;;
  esac

  if test "x$with_libelf_include" != x; then
    libelfinc="-I$with_libelf_include"
  fi

  if test "x$with_libelf_lib" != x; then
    libelflibs="-L$with_libelf_lib -lelf"
    LIBS="$libelflibs $LIBS"
  fi

  if test "x$with_libelf$with_libelf_include$with_libelf_lib" = x \
     && test -d ${srcdir}/libelf; then
    libelflibs='-L$$r/$(HOST_SUBDIR)/libelf/lib -lelf '
    libelfinc='-D__LIBELF_INTERNAL__ -I$$r/$(HOST_SUBDIR)/libelf/lib -I$$s/libelf/lib'
    LIBS="$libelflibs $LIBS"

 else

  CFLAGS="$CFLAGS $libelfinc"
  CPPFLAGS="$CPPFLAGS $libelfinc"
  LIBS="$LIBS $libelflibs"

  AC_CHECK_HEADERS(libelf.h, [have_libelf_h=yes])
  AC_CHECK_HEADERS(gelf.h, [have_gelf_h=yes])

  AC_CHECK_HEADERS(libelf/libelf.h, [have_libelf_libelf_h=yes])
  AC_CHECK_HEADERS(libelf/gelf.h, [have_libelf_gelf_h=yes])

  # If we couldn't find libelf.h and the user forced it, emit an error.
  if test x"$have_libelf_h" != x"yes" \
     && test x"$have_libelf_libelf_h" != x"yes" ; then
    if test x"$default_enable_lto" != x"yes" ; then
      AC_MSG_ERROR([LTO support requires libelf.h or libelf/libelf.h.])
    else
      enable_lto=no
      libelflibs=
      libelfinc=
    fi
  fi

  # If we couldn't find gelf.h and the user forced it, emit an error.
  if test x"$have_gelf_h" != x"yes" \
     && test x"$have_libelf_gelf_h" != x"yes" ; then
    if test x"$default_enable_lto" != x"yes" ; then
      AC_MSG_ERROR([LTO support requires gelf.h or libelf/gelf.h.])
    else
      enable_lto=no
      libelflibs=
      libelfinc=
    fi
  fi

  # Check that the detected libelf has the functions we need.  We cannot
  # rely on just detecting the headers since they do not include 
  # versioning information.  Add functions, if needed.
  if test x"$enable_lto" = x"yes" ; then
    AC_MSG_CHECKING([for the correct version of libelf])
    AC_TRY_LINK(
      [#include <libelf.h>],[
      elf_errmsg (0);
      elf_getscn (0, 0);
      elf_nextscn (0, 0);
      elf_strptr (0, 0, 0);
      elf_getident (0, 0);
      elf_begin (0, 0, 0);
      elf_ndxscn (0);
      elf_end (0);
      ],
      [AC_MSG_RESULT([yes]);],
      [AC_MSG_RESULT([no]); enable_lto=no; libelflibs= ; libelfinc= ]
    )

    # Check for elf_getshdrstrndx or elf_getshstrndx.  The latter's flavor
    # is determined in gcc/configure.ac.
    if test x"$enable_lto" = x"yes" ; then
      AC_MSG_CHECKING([for elf_getshdrstrndx])
      AC_TRY_LINK(
        [#include <libelf.h>],[
	elf_getshdrstrndx (0, 0);
        ],
        [AC_MSG_RESULT([yes]);],
        [AC_MSG_RESULT([no]);
	 AC_MSG_CHECKING([for elf_getshstrndx])
         AC_TRY_LINK(
           [#include <libelf.h>],[
	   elf_getshstrndx (0, 0);
           ],
           [AC_MSG_RESULT([yes]);],
           [AC_MSG_RESULT([no]); enable_lto=no; libelflibs= ; libelfinc= ]
         )]
      )
    fi

    # If we couldn't enable LTO and the user forced it, emit an error.
    if test x"$enable_lto" = x"no" \
       && test x"$default_enable_lto" != x"yes" ; then
      AC_MSG_ERROR([To enable LTO, GCC requires libelf v0.8.12+.
Try the --with-libelf, --with-libelf-include and --with-libelf-lib options
to specify its location.])
    fi
  fi

  CFLAGS="$saved_CFLAGS"
  CPPFLAGS="$saved_CPPFLAGS"
  LIBS="$saved_LIBS"

 fi

  # Flags needed for libelf.
  AC_SUBST(libelflibs)
  AC_SUBST(libelfinc)
  # ELF platforms build the lto-plugin when GOLD is in use.
  build_lto_plugin=${ENABLE_GOLD}
fi],[if test x"$default_enable_lto" = x"yes" ; then
d1664 1
a1664 1
      # On other non-ELF platforms, LTO must be explicitly enabled.
d1682 1
d1684 1
a1684 1
    *-cygwin* | *-mingw*) build_lto_plugin=yes ;;
d1687 1
a1687 1
  default_enable_lto=no])
@


1.109
log
@	* configure.ac (build_lto_plugin): New shell variable.
	(--enable-lto): Turn on by default for all non-ELF platforms that
	have had LTO support added so far.  Set build_lto_plugin appropriately
	for both ELF and non-ELF.
	(configdirs): Add lto-plugin or not based on build_lto_plugin.
	* configure: Regenerate.
@
text
@d224 8
a231 1
[ac_subdirs_all=`cd $srcdir && echo */configure | sed 's,/configure,,g'`
@


1.108
log
@Allow to pass separate configure arguments for build, host and target.

/:
	PR bootstrap/45326
	PR bootstrap/45174
	* configure.ac: Honor initial values of $build_configargs,
	$host_configargs, $target_configargs.  Mark the precious, so
	environment settings get recorded.
	* configure: Regenerate.
@
text
@d1789 2
d1793 1
a1793 1
      *-apple-darwin*) ;;
d1804 1
a1804 1
      *-cygwin*|*-mingw* | *-apple-darwin*) ;;
d1811 5
d1894 1
a1894 1
    if test "${ENABLE_GOLD}" = "yes" ; then
@


1.107
log
@Sync toplevel and config from GCC.

/:
	Sync from GCC:

	2010-09-30  Michael Eager  <eager@@eagercon.com>

	* configure.ac (microblaze): Add target-libssp to noconfigdirs.
	* configure: Regenerate.

	2010-09-21  Iain Sandoe  <iains@@gcc.gnu.org>

	* configure.ac (enable-lto): Add Darwin to the list of supported lto
	targets and amend comment.
	* configure: Regenerate.

	2010-09-03  Jack Howarth <howarth@@bromo.med.uc.edu>

	* configure.ac: Enable LTO by default on Darwin.
	* configure: Regenerate.

	2010-07-23  Marc Glisse <marc.glisse@@normalesup.org>

	PR bootstrap/44455
	* configure.ac (extra_mpfr_configure_flags): Copy from
	extra_mpc_gmp_configure_flags.
	* configure: Re-generated.

config/:
	Sync from GCC:

	2010-09-10  Jonathan Yong  <jon_y@@users.sourceforge.net>

	* dfp.m4: Enable decimal float for i?86 cygwin
	and mingw, and for x86_64 mingw.
@
text
@d2972 8
d2983 1
a2983 1
build_configargs="--cache-file=../config.cache ${baseargs}"
d2997 1
a2997 1
host_configargs="--cache-file=./config.cache ${extra_host_args} ${baseargs}"
d2999 1
a2999 1
target_configargs=${baseargs}
@


1.106
log
@Fix unportable shell quoting.

/:
	Sync from GCC:

	PR bootstrap/44621
	* configure.ac: Fix unportable shell quoting.
	* configure: Regenerate.

config/:
	* po.m4 (AM_PO_SUBDIRS): Fix unportable shell quoting.

bfd/:
	* configure: Regenerate.

gas/:
	* configure: Regenerate.

gold/:
	* configure: Regenerate.

intl/:
	* configure: Regenerate.

ld/:
	* configure: Regenerate.

opcodes/:
	* configure: Regenerate.

binutils/:
	* configure: Regenerate.

gprof/:
	* configure: Regenerate.
@
text
@d890 1
a890 1
    noconfigdirs="$noconfigdirs gprof ${libgcj}"
d1351 1
a1351 1
  extra_mpfr_configure_flags='--with-gmp-build=$$r/$(HOST_SUBDIR)/gmp'
d1790 5
a1794 2
    # On non-ELF platforms, LTO must be explicitly enabled.
    enable_lto=no
d1796 2
a1797 2
  # Apart from ELF platforms, only Windows supports LTO so far.  It
  # would also be nice to check the binutils support, but we don't
d1802 1
a1802 2
      *-cygwin*|*-mingw*) ;;
      *-apple-darwin*) ;;
@


1.105
log
@Add support for v850E2 and v850E2V3
@
text
@d354 1
a354 1
            configdirs="`echo " ${configdirs} " | sed -e 's/ ld / gold /'`"
@


1.104
log
@Sync toplevel files from GCC.

/:
        Sync from GCC:

        2010-05-05  Sebastian Pop  <sebastian.pop@@amd.com>
        * configure.ac: Allow all the versions greater than 0.10 of PPL.
        * configure: Regenerated.

        2010-04-20  Eric Botcazou  <ebotcazou@@adacore.com>
        * configure.ac (BUILD_CONFIG): Redirect output to /dev/null.
        * configure: Regenerate.

        2010-04-17  Ralf Corsépius  <ralf.corsepius@@rtems.org>
        * configure.ac (*-*-rtems*): Add target-libiberty to $skipdirs.
        * configure: Regenerate.

        2010-04-16  Rainer Orth  <ro@@CeBiTec.Uni-Bielefeld.DE>
        * configure.ac: Check for elf_getshdrstrndx or elf_getshstrndx
        separately.
        * configure: Regenerate.

        2010-04-13  Steve Ellcey  <sje@@cup.hp.com>
        * configure: Regenerate after change to elf.m4.

        2010-04-02  Sebastian Pop  <sebastian.pop@@amd.com>
        * configure.ac: Add brackets around AC_TRY_COMPILE alternative.
        * configure: Regenerated.

        2010-04-02  Sebastian Pop  <sebastian.pop@@amd.com>
        * configure.ac: Print "buggy but acceptable" when CLooG
        revision is less than 9.
        * configure: Regenerated.

config/:
        Sync from GCC:

        2010-04-13  Steve Ellcey  <sje@@cup.hp.com>
        * elf.m4: Add hppa[12]*-*-hpux* to list of non-elf platforms.

        2010-01-05  Rainer Orth  <ro@@CeBiTec.Uni-Bielefeld.DE>
        * stdint.m4 (GCC_HEADER_STDINT): Don't typedef uint8_t etc. if
        corresponding macros already exist.

bfd/:
        * configure: Regenerate.
@
text
@d970 2
a971 8
  v850-*-*)
    noconfigdirs="$noconfigdirs target-libgloss ${libgcj}"
    ;;
  v850e-*-*)
    noconfigdirs="$noconfigdirs target-libgloss ${libgcj}"
    ;;
  v850ea-*-*)
    noconfigdirs="$noconfigdirs target-libgloss ${libgcj}"
@


1.103
log
@Merge from gcc:

	2010-05-18  Steven Bosscher  <steven AT gcc.gnu.org>
	* configure.ac (--enable-lto): All *-apple-darwin* now support LTO.
	* configure: Regenerate.

	2010-05-07  Steven Bosscher  <steven AT gcc.gnu.org>
	* configure.ac (--enable-lto): Add x86_64-apple-darwin* as
	a platform that supports LTO.
	* configure: Regenerate.

	2010-04-27  Dave Korn  <dave.korn.cygwin AT gmail.com>
	PR lto/42776
	* configure.ac (--enable-lto): Refactor handling so libelf tests
	are only performed inside then-clause of ACX_ELF_TARGET_IFELSE,
	and allow LTO to be explicitly enabled on non-ELF platforms that
	are known to support it inside else-clause.
	* configure: Regenerate.
@
text
@d551 1
d1378 1
a1378 1
  ], AC_TRY_COMPILE([#include <gmp.h>],[
d1384 1
a1384 1
  ], [AC_MSG_RESULT([yes])], [AC_MSG_RESULT([buggy but acceptable])]),
d1396 1
a1396 1
    ], AC_TRY_COMPILE([#include <gmp.h>
d1401 1
a1401 1
    ], [AC_MSG_RESULT([yes])], [AC_MSG_RESULT([buggy but acceptable])]),
d1413 1
a1413 1
    ], AC_TRY_COMPILE([#include <mpc.h>],[
d1417 1
a1417 1
    ], [AC_MSG_RESULT([yes])], [AC_MSG_RESULT([buggy but acceptable])]),
a1533 2
ppl_major_version=0
ppl_minor_version=10
d1574 1
a1574 1
  AC_MSG_CHECKING([for version $ppl_major_version.$ppl_minor_version of PPL])
d1576 1
a1576 1
  #if PPL_VERSION_MAJOR != $ppl_major_version || PPL_VERSION_MINOR != $ppl_minor_version
d1639 6
a1644 1
  ], [AC_MSG_RESULT([yes])], [AC_MSG_RESULT([no]); clooglibs= ; clooginc= ])
a1747 1
      elf_getshdrstrndx (0, 0);
d1756 21
d2750 1
a2750 1
       ${srcdir}/contrib/compare-debug conftest.o.g0 conftest.o.g; then
@


1.102
log
@        * configure.ac (--enable-gold): Support both, both/gold and
        both/bfd to add gold to configdirs without removing ld.
        * configure: Regenerated.

        * Makefile.def: Add install-gold dependency to install-ld.
        * Makefile.in: Regenerated.
@
text
@a1653 9
ACX_ELF_TARGET_IFELSE([],
if test x"$default_enable_lto" = x"yes" ; then
  enable_lto=no
else
  if test x"$enable_lto" = x"yes"; then
    AC_MSG_ERROR([LTO support requires an ELF target.])
  fi
fi
default_enable_lto=no)
d1655 1
a1655 1
if test x"$enable_lto" = x"yes" ; then
d1771 19
a1789 1
fi
@


1.101
log
@2010-04-14  Tristan Gingold  <gingold@@adacore.com>

	* configure.ac (alpha*-*-*vms*): Remove ld from noconfigdirs.
	* configure: Regenerate.
@
text
@d177 1
a177 1
# If --enable-gold is used, "gold" will replace "ld".
d318 5
d325 1
a325 1
[  --enable-gold           use gold instead of ld],
d328 19
a346 7
if test "${ENABLE_GOLD}" = "yes"; then
  # Check for ELF target.
  is_elf=no
  case "${target}" in
    *-*-elf* | *-*-sysv4* | *-*-unixware* | *-*-eabi* | hppa*64*-*-hpux* \
    | *-*-linux* | frv-*-uclinux* | *-*-irix5* | *-*-irix6* \
    | *-*-netbsd* | *-*-openbsd* | *-*-freebsd* | *-*-solaris2* | *-*-nto*)
d348 10
a357 4
        *-*-linux*aout* | *-*-linux*oldld*)
          ;;
        *)
          is_elf=yes
d360 7
a368 10
  if test "$is_elf" = "yes"; then
    # Check for target supported by gold.
    case "${target}" in
      i?86-*-* | x86_64-*-* | sparc*-*-* | powerpc*-*-* | arm*-*-*)
        configdirs="`echo " ${configdirs} " | sed -e 's/ ld / gold /'`"
        ;;
    esac
  fi
fi

@


1.100
log
@/:
	Merge from gcc:
	PR bootstrap/43615
	PR bootstrap/43328
	Revert:
	2010-03-31  Ralf Wildenhues  <Ralf.Wildenhues@@gmx.de>
	* configure.ac: Do not pass --enable-multilib nor
	--disable-multilib in baseargs.  Accept explicitly passed
	--enable_multilib.
	* configure: Regenerate.
@
text
@d550 1
a550 1
    noconfigdirs="$noconfigdirs gdb ld target-newlib target-libgloss ${libgcj}"
@


1.99
log
@Fix toplevel configure --enable-multilib handling.

/:
	PR bootstrap/43328
	* configure.ac: Do not pass --enable-multilib nor
	--disable-multilib in baseargs.  Accept explicitly passed
	--enable_multilib.
	* configure: Regenerate.
@
text
@a2884 3
    --enable-multilib | --disable-multilib)
      continue
      ;;
d2953 2
a2954 3
# Pass --enable-multilib to target dirs; default to --enable-multilib.
case $enable_multilib in
'' | yes)
d2956 1
a2956 2
  ;;
esac
@


1.98
log
@	* configure.ac (tic6x-*-*): New case.
	* configure: Regenerate.
@
text
@d2885 3
d2956 3
a2958 2
# Default to --enable-multilib.
if test x${enable_multilib} = x ; then
d2960 2
a2961 1
fi
@


1.97
log
@	Merge from gcc:
	2010-03-19  Jack Howarth <howarth@@bromo.med.uc.edu>
	PR ada/42554
	* configure.ac: Only pass -c to ranlib for darwin9 and earlier.
	* configure: Regenerate.
@
text
@d943 3
@


1.96
log
@	PR libstdc++/32499
	* configure.ac (RANLIB): Default to true.
	(STRIP): Likewise.
	(RANLIB_FOR_TARGET): Remove superfluous : argument.
	* configure: Regenerate.
@
text
@d2408 2
a2409 2
  *-*-darwin*)
    # ranlib from Darwin requires the -c flag to look at common symbols.
@


1.95
log
@        PR 11238
        * Makefile.tpl (local-distclean): Also remove config.cache files in
        sub-directories as there may not be Makefiles present in the
        sub-directories.
        * Makefile.in: Regenerate.
        * configure.ac: Revert previous delta.
        * configure: Regenerate.
@
text
@d2 2
a3 2
#   2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009 Free Software Foundation,
#   Inc.
d3208 2
a3209 2
NCN_STRICT_CHECK_TOOLS(RANLIB, ranlib, :)
NCN_STRICT_CHECK_TOOLS(STRIP, strip, :)
d3245 1
a3245 1
ACX_CHECK_INSTALLED_TARGET_TOOL(RANLIB_FOR_TARGET, ranlib, :)
@


1.94
log
@        PR 11238
        * configure.ac: Delete config.cache files in sub-directories when
        deleting Makefiles.
        * configure: Regenerate.
@
text
@a2712 6
  # PR 11238: Also remove config.cache files.
  if test -z "${no_recursion}" \
     && test -f ${build_subdir}/${module}/config.cache; then
    echo 1>&2 "*** removing ${build_subdir}/${module}/config.cache to allow reconfigure"
    rm -f ${build_subdir}/${module}/config.cache
  fi
a2727 5
    # PR 11238: Also remove config.cache files.
    if test -f ${module}/config.cache; then
      echo 1>&2 "*** removing ${module}/config.cache to allow reconfigure"
      rm -f ${module}/config.cache
    fi
a2741 6
  # PR 11238: Also remove config.cache files.
  if test -z "${no_recursion}" \
     && test -f ${target_subdir}/${module}/config.cache; then
    echo 1>&2 "*** removing ${target_subdir}/${module}/config.cache to allow reconfigure"
    rm -f ${target_subdir}/${module}/config.cache
  fi
@


1.93
log
@Sync from gcc mainline.
@
text
@d2713 6
d2734 5
d2753 6
@


1.92
log
@	* configure.ac: Add "recommended" version checks for GMP/MPC.
	Update recommended GMP/MPFR/MPC versions.
	* configure: Regenerate.
@
text
@d25 1
d501 1
a1479 15
# Linker flags to use for stage2 and later builds.
AC_ARG_WITH(boot-ldflags,
[  --with-boot-ldflags=FLAGS Linker flags for stage2 and later],
[if test "$withval" = "no" -o "$withval" = "yes"; then
   poststage1_ldflags=
 else
   poststage1_ldflags=$withval
 fi],
[if test "$ENABLE_BUILD_WITH_CXX" = "yes"; then
   poststage1_ldflags=-static-libstdc++
 else
   poststage1_ldflags=
 fi])
AC_SUBST(poststage1_ldflags)

d1492 17
d1612 1
a1612 1
  AC_MSG_CHECKING([for correct version of CLooG])
d1614 1
a1614 1
  #if CLOOG_VERSION_MAJOR != 0 || CLOOG_VERSION_MINOR != 15
d1631 10
@


1.91
log
@	gcc PR libstdc++/36101, gcc PR libstdc++/42813
	* configure.ac (bootstrap_target_libs): Make inclusion of
	target-libgomp conditional on libgomb being in target_configdirs.
	* configure: Regenerate.
@
text
@d1344 2
a1345 2
  # Check GMP actually works
  AC_MSG_CHECKING([for correct version of gmp.h])
d1347 3
a1349 1
  #if __GNU_MP_VERSION < 4 || (__GNU_MP_VERSION == 4 && __GNU_MP_VERSION_MINOR < 2)
d1352 8
a1359 1
  ], [AC_MSG_RESULT([yes])], [AC_MSG_RESULT([no]); have_gmp=no])
d1363 2
a1364 2
    dnl MPFR 2.3.1 is acceptable, but MPFR 2.3.2 is better.
    AC_MSG_CHECKING([for correct version of mpfr.h])
d1372 1
a1372 1
    #if MPFR_VERSION < MPFR_VERSION_NUM(2,3,2)
d1381 1
d1384 5
a1388 1
    #if MPC_VERSION < MPC_VERSION_NUM (0,8,0)
d1391 2
a1392 1
    ], [AC_MSG_RESULT([yes])], [AC_MSG_RESULT([no]); have_gmp=no])
d1424 2
d1427 1
a1427 1
    AC_MSG_ERROR([Building GCC requires GMP 4.2+, MPFR 2.3.2+ and MPC 0.8.0+.
@


1.90
log
@	gcc PR libstdc++/36101, gcc PR libstdc++/42813
	* configure.ac (bootstrap_target_libs): Include target-libgomp.
	* configure: Regenerate.
@
text
@d1733 1
a1733 1
bootstrap_target_libs=,target-libgcc,target-libgomp,
d2529 5
@


1.89
log
@	gcc PR libstdc++/36101, gcc PR libstdc++/42813
	* configure.ac (target_configdirs): Substitute.
	* Makefile.def: Bootstrap target module libgomp.
	Add dependency of all-target-libstdc++-v3 on configure-target-libgomp.
	* Makefile.tpl (TARGET_CONFIGDIRS): New makefile variable.
	(BASE_TARGET_EXPORTS): Export TARGET_CONFIGDIRS.
	* configure, Makefile.in: Regenerate.
@
text
@d1733 1
a1733 1
bootstrap_target_libs=,target-libgcc,
@


1.88
log
@	PR bootstrap/42424
	* configure.ac: Include libtool m4 files.
        (_LT_CHECK_OBJDIR): Call it.
	(extra_mpc_mpfr_configure_flags, extra_mpc_gmp_configure_flags,
	gmplibs, ppllibs, clooglibs): Use $lt_cv_objdir.

	* configure: Regenerate.
@
text
@d3075 1
@


1.87
log
@Sync with GCC:

	PR middle-end/30447
	PR middle-end/30789
	PR other/40302

	* configure.ac: Require MPC.
	* configure: Regenerate.

	* configure.ac: Update minimum MPC version to 0.8.
	* configure: Regenerate.
@
text
@d25 5
d1235 3
d1263 1
a1263 1
  gmplibs='-L$$r/$(HOST_SUBDIR)/mpc/src/.libs -L$$r/$(HOST_SUBDIR)/mpc/src/_libs '"$gmplibs"
d1296 1
a1296 1
  gmplibs='-L$$r/$(HOST_SUBDIR)/mpfr/.libs -L$$r/$(HOST_SUBDIR)/mpfr/_libs '"$gmplibs"
d1298 1
a1298 1
  extra_mpc_mpfr_configure_flags='--with-mpfr-include=$$s/mpfr'
d1329 1
a1329 1
  gmplibs='-L$$r/$(HOST_SUBDIR)/gmp/.libs -L$$r/$(HOST_SUBDIR)/gmp/_libs '"$gmplibs"
d1332 1
a1332 1
  extra_mpc_gmp_configure_flags='--with-gmp-include=$$r/$(HOST_SUBDIR)/gmp'
d1518 1
a1518 1
  ppllibs='-L$$r/$(HOST_SUBDIR)/ppl/interfaces/C/.libs -L$$r/$(HOST_SUBDIR)/ppl/interfaces/C/_libs -L$$r/$(HOST_SUBDIR)/ppl/src/.libs -L$$r/$(HOST_SUBDIR)/ppl/src/_libs -lppl_c -lppl -lgmpxx '
d1578 1
a1578 1
  clooglibs='-L$$r/$(HOST_SUBDIR)/cloog/.libs -L$$r/$(HOST_SUBDIR)/cloog/_libs -lcloog '
@


1.86
log
@* configure.ac: Add libelf to host_libs.  Enable in-tree configury
of ppl and cloog.  Fix in-tree configury of libelf, skip tests.
Fix portability of test of C++ as bootstrap language.  Add
ppl/src/ppl-config.o to the bootstrap compare exclusion list.
* configure: Rebuild.
* Makefile.def: Drop host and target settings from gmp, mpfr, ppl,
and cloog.  Fix in-tree ppl configuration.  Introduce libelf
in-tree building.
* Makefile.tpl (POSTSTAGE1_CXX_EXPORT): New.
(POSTSTAGE1_HOST_EXPORTS): Use it.
(STAGE[+id+]_CXXFLAGS): New.
(BASE_FLAGS_TO_PASS): Pass it down.
(configure-stage[+id+]-[+prefix+][+module+]): Use it.  Add
extra_exports.
(all-stage[+id+]-[+prefix+][+module+]): Likewise.
(configure-[+prefix+][+module+], all-[+prefix+][+module+]): Add
extra_exports.
* Makefile.in: Rebuild.
* configure.ac (FLAGS_FOR_TARGET):  Add -L and -isystem
paths for *-w64-mingw* and x86_64-*mingw*.
* configure: Regenerated.
* configure.ac: Disable target-winsup & co for
x86_64-*-mingw* and *-w64-mingw* targets.
* configure: Regenerated.
* configure.ac (CLooG test): Use = with test.
* configure: Regenerate.
* configure.ac: Do not set LIBS for ppl/cloog checks.  Disable
cloog if the ppl version check failed.  Move flags saving
before setting in libelf check.
* configure: Regenerate.
* configure.ac: Adjust the ppl and cloog configure to work as
documented.  Disable cloog if ppl was disabled.  Omit the version
checks if they were disabled.
* configure: Re-generate.
@
text
@d1231 1
a1231 1
gmplibs="-lmpfr -lgmp"
a1233 3
mpclibs=-lmpc
mpcinc=
have_mpc=no
d1245 2
a1246 2
  mpclibs="-L$with_mpc/lib -lmpc"
  mpcinc="-I$with_mpc/include $mpcinc"
d1249 1
a1249 1
  mpcinc="-I$with_mpc_include $mpcinc"
d1252 1
a1252 1
  mpclibs="-L$with_mpc_lib -lmpc"
d1255 2
a1256 2
  mpclibs='-L$$r/$(HOST_SUBDIR)/mpc/src/.libs -L$$r/$(HOST_SUBDIR)/mpc/src/_libs -lmpc'
  mpcinc='-I$$s/mpc/src '"$mpcinc"
d1261 1
a1261 1
  have_mpc=yes
d1279 1
a1279 1
  gmpinc="-I$with_mpfr/include"
d1282 1
a1282 1
  gmpinc="-I$with_mpfr_include"
d1363 1
a1363 2
  if test x"$have_mpc" != xyes ; then
    CFLAGS="$CFLAGS $mpcinc"
d1366 1
a1366 1
    #if MPC_VERSION < MPC_VERSION_NUM (0,7,0)
d1369 1
a1369 2
    ], [AC_MSG_RESULT([yes]); have_mpc=maybe],
       [AC_MSG_RESULT([no]); have_mpc=no; mpclibs= ; mpcinc= ])
d1376 2
a1377 3
    AC_MSG_CHECKING([for the correct version of the gmp/mpfr libraries])
    AC_TRY_LINK([#include <gmp.h>
    #include <mpfr.h>],[
d1380 1
d1387 8
a1398 27
  if test x"$have_mpc" = xmaybe; then
    saved_LIBS="$LIBS"
    LIBS="$LIBS $mpclibs $gmplibs"
    AC_MSG_CHECKING([for the correct version of the mpc library])
    AC_TRY_LINK([#include <mpc.h>],[
    mpc_t n;
    mpc_init2 (n, 53);
    mpc_set_ui_ui (n, 1, 1, MPC_RNDNN);
    mpc_sin (n, n, MPC_RNDNN);
    mpc_cos (n, n, MPC_RNDNN);
    mpc_tan (n, n, MPC_RNDNN);
    mpc_sinh (n, n, MPC_RNDNN);
    mpc_cosh (n, n, MPC_RNDNN);
    mpc_tanh (n, n, MPC_RNDNN);
    mpc_exp (n, n, MPC_RNDNN);
    mpc_log (n, n, MPC_RNDNN);
    mpc_sqrt (n, n, MPC_RNDNN);
    mpc_proj (n, n, MPC_RNDNN);
    mpc_neg (n, n, MPC_RNDNN);
    mpc_sqr (n, n, MPC_RNDNN);
    mpc_pow (n, n, n, MPC_RNDNN);
    mpc_clear (n);
    ], [AC_MSG_RESULT([yes]); have_mpc=yes],
       [AC_MSG_RESULT([no]); have_mpc=no; mpclibs= ; mpcinc= ])
    LIBS="$saved_LIBS"
  fi

d1402 9
a1410 8
    AC_MSG_ERROR([Building GCC requires GMP 4.2+ and MPFR 2.3.2+.
Try the --with-gmp and/or --with-mpfr options to specify their locations.
Copies of these libraries' source code can be found at their respective
hosting sites as well as at ftp://gcc.gnu.org/pub/gcc/infrastructure/.
See also http://gcc.gnu.org/install/prerequisites.html for additional info.
If you obtained GMP and/or MPFR from a vendor distribution package, make
sure that you have installed both the libraries and the header files.
They may be located in separate packages.])
a1413 8
if test x$have_mpc != xyes ; then
  mpcinc=
  mpclibs=
fi

gmpinc="$mpcinc $gmpinc"
gmplibs="$mpclibs $gmplibs"

@


1.85
log
@Fix toplevel 'config.status --recheck' for --enable-lto.

/:
	* configure.ac: Add 'lto' to enable_languages, not
	new_enable_languages, and only if not already present.
	* configure: Regenerate.
@
text
@d164 1
a164 1
host_libs="intl mmalloc libiberty opcodes bfd readline tcl tk itcl libgui zlib libcpp libdecnumber gmp mpfr mpc ppl cloog libiconv"
d744 4
a747 1
  i[[3456789]]86-*-mingw32*)
d750 1
a750 1
    ;;    
a751 1
    target_configdirs="$target_configdirs target-winsup"
d753 1
a753 1
    ;;    
d763 1
a763 1
    ;;    
d1519 1
a1519 1
                          plus --with-ppl-lib=PATH/lib],, with_ppl=no)
d1527 2
a1531 1
    LIBS="$ppllibs $LIBS"
a1538 1
  LIBS="$ppllibs $LIBS"
d1541 3
a1543 3
  ppllibs='-L$$r/$(HOST_SUBDIR)/ppl/.libs -L$$r/$(HOST_SUBDIR)/ppl/_libs -lppl_c -lppl -lgmpxx '
  pplinc='-I$$r/$(HOST_SUBDIR)/ppl/include -I$$s/ppl/include '
  LIBS="$ppllibs $LIBS"
d1551 1
a1551 1
if test "${ENABLE_PPL_CHECK}" = "yes"; then
d1559 1
a1559 1
  ], [AC_MSG_RESULT([yes])], [AC_MSG_RESULT([no]); ppllibs= ; pplinc= ])
d1574 1
a1574 1
                          plus --with-cloog-lib=PATH/lib],, with_cloog=no)
d1578 4
d1587 2
a1591 1
    LIBS="$clooglibs $LIBS"
a1598 1
  LIBS="$clooglibs $LIBS"
d1603 1
a1603 1
  LIBS="$clooglibs $LIBS"
d1611 1
a1611 1
if test "${ENABLE_CLOOG_CHECK}" = "yes"; then
d1643 4
d1670 2
a1671 2
    libelflibs='-L$$r/$(HOST_SUBDIR)/libelf/.libs -L$$r/$(HOST_SUBDIR)/libelf/_libs -lelf '
    libelfinc='-I$$r/$(HOST_SUBDIR)/libelf/include -I$$s/libelf/include'
a1672 1
  fi
d1674 1
a1674 3
  saved_CFLAGS="$CFLAGS"
  saved_CPPFLAGS="$CPPFLAGS"
  saved_LIBS="$LIBS"
d1744 2
d1858 2
a1859 1
	if test "$language" = "c++" -a "$ENABLE_BUILD_WITH_CXX" = "yes"; then
d2968 3
a2970 2
   *-cygwin*)
     FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -L$$r/$(TARGET_SUBDIR)/winsup -L$$r/$(TARGET_SUBDIR)/winsup/cygwin -L$$r/$(TARGET_SUBDIR)/winsup/w32api/lib -isystem $$s/winsup/include -isystem $$s/winsup/cygwin/include -isystem $$s/winsup/w32api/include' ;;
d3026 1
d3028 9
a3036 3
*-mingw*)
  # Can't be handled as Cygwin above since Mingw does not use newlib.
  FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -L$$r/$(TARGET_SUBDIR)/winsup/mingw -L$$r/$(TARGET_SUBDIR)/winsup/w32api/lib -isystem $$s/winsup/mingw/include -isystem $$s/winsup/w32api/include' ;;
d3377 3
@


1.84
log
@Sync with gcc repository.
@
text
@d1814 4
a1817 1
    new_enable_languages="${new_enable_languages}lto,"
@


1.83
log
@2009-09-29  Paolo Bonzini  <bonzini@@gnu.org>

	Sync from gcc:
	2009-09-26  Kaveh R. Ghazi  <ghazi@@caip.rutgers.edu>

	* configure.ac: Update minimum MPC version to 0.7.
	* configure: Regenerate.
@
text
@d263 7
d1621 121
d1810 12
d2231 1
a2231 1
# Set with_gnu_as and with_gnu_ld as appropriate.
d2242 3
a2244 1
# --without-gnu-ld options for the configure script.
d2258 8
@


1.82
log
@        * configure.ac: Pass any --cache-file=/dev/null option on to
        subconfigures.
        * configure: Regenerate.
@
text
@d1361 1
a1361 1
    #if MPC_VERSION < MPC_VERSION_NUM (0,6,0)
d1407 1
@


1.81
log
@Error out if building separately but srcdir has build remnants.

/:
	PR bootstrap/32272
	* configure.ac: Error out if $srcdir isn't '.' but contains
	host-${host_noncanonical}.
	* configure: Regenerate.
@
text
@d2635 5
a2639 3
# might not want to pass down to subconfigures.  Also strip
# program-prefix, program-suffix, and program-transform-name, so that
# we can pass down a consistent program-transform-name.
d2678 7
@


1.80
log
@Require c++ in stage1_languages with --enable-gold in combined bootstrap.

/:
	* configure.ac: If bootstrapping a combined tree with
	--enable-gold, require c++ in stage1_languages.
	* configure: Regenerate.
@
text
@d238 5
@


1.79
log
@toplevel configure: bootstrap target_libs of stage1_languages.

/:
	* configure.ac: Also add target_libs of stage1_languages to
	bootstrap_target_libs.
	* configure: Regenerate.
@
text
@d2473 7
@


1.78
log
@Diagnose --enable-build-with-cxx --enable-bootstrap --enable-languages w/o c++

/:
	* configure.ac: Diagnose --enable-build-with-cxx bootstrap
	with --enable-languages not containing c++.
	* configure: Regenerate.
@
text
@d1766 2
a1767 2
	    case ${boot_language} in
	      yes)
d1769 4
a1772 1
		stage1_languages="${stage1_languages}${language},"
@


1.77
log
@	* configure.ac: Disable java and boehm-gc for bfin-*-*.
	* configure: Regenerate.
@
text
@d2463 7
@


1.76
log
@Fix toplevel config.status for HP-UX sed.

/:
	* configure.ac: Do not use $extrasub for replacing @@if/@@endif
	parts in Makefile; instead, use additional arguments to
	AC_CONFIG_COMMANDS to do the replacement manually, with several
	sed invocations, to avoid HP-UX sed command limits.
	* configure: Regenerate.
@
text
@d606 2
a607 1
    noconfigdirs="$noconfigdirs gdb"
@


1.75
log
@ChangeLog:
* configure.ac (with-build-config): Document.  Handle without.
Handle missing argument.
* configure: Rebuilt.
config/ChangeLog:
* bootstrap-debug-big.mk (STAGE2_CFLAGS): Drop -gtoggle.
* bootstrap-debug-lean.mk: Update comments.
(STAGE2_CFLAGS): Likewise.
(do-compare): Don't override.
ChangeLog:
* configure.ac (with-build-config): Document.  Handle without.
Handle missing argument.
* configure: Rebuilt.
@
text
@d2413 7
a2419 6
# Loop over modules.  $extrasub must be used with care, limiting as
# much as possible the usage of range addresses.  That's because autoconf
# splits the sed script to overcome limits in the number of commands,
# and relying on carefully-timed sed passes may turn out to be very hard
# to maintain later.  In this particular case, you just have to be careful
# not to nest @@if/@@endif pairs, because configure will not warn you at all.
d2506 1
d2513 1
a2513 1
  extrasub="$extrasub
d2519 1
d2529 1
a2529 1
  extrasub="$extrasub
d2535 1
d2549 1
a2549 1
  extrasub="$extrasub
d2556 2
a2557 1
extrasub="$extrasub
d3175 9
a3183 1
AC_OUTPUT(Makefile)
@


1.74
log
@2009-09-02  Paolo Bonzini  <bonzini@@gnu.org>

	* Makefile.tpl (AWK): Fix typo.
	* Makefile.in: Regenerate.

2009-09-02  Paolo Bonzini  <bonzini@@gnu.org>

	* configure.ac: Detect awk and sed.
	* Makefile.def (flags_to_pass): Add AWK and SED.
	* Makefile.tpl (AWK, SED): New.
	(BASE_FLAGS_TO_PASS): Add AWK and SED.
	* configure: Regenerate.
	* Makefile.in: Regenerate.
@
text
@d2462 1
a2462 1
case "$enable_bootstrap" in
d2464 3
a2466 1
    bootstrap_suffix=bootstrap ;;
d2468 3
a2470 1
    bootstrap_suffix=no-bootstrap ;;
d2473 32
@


1.73
log
@Sync from GCC: Update AC_PREREQ entries to 2.64.

/:
	* configure.ac (AC_PREREQ): Bump to 2.64.

intl/:
	* configure.ac (AC_PREREQ): Bump to 2.64.

libdecnumber/:
	* configure.ac (AC_PREREQ): Bump to 2.64.

libiberty/:
	* configure.ac (AC_PREREQ): Bump to 2.64.
@
text
@d82 2
@


1.72
log
@Cleanups after the update to Autoconf 2.64, Automake 1.11.

/:
	* README-maintainer-mode: Point directly to upstream locations
	for autoconf, automake, libtool, gettext, instead of copies on
	sources.redhat.com.  Document required versions.
	* configure.ac: Do not substitute datarootdir, htmldir,
	pdfdir, docdir.  Do not process --with-datarootdir,
	--with-htmldir, --with-pdfdir, --with-docdir.
	* configure: Regenerate.

gdb/:
	* CONTRIBUTE: Bump documented Autoconf version.
	* configure.ac: Do not substitute datarootdir, htmldir,
	pdfdir, docdir.  Do not process --with-datarootdir,
	--with-htmldir, --with-pdfdir, --with-docdir.
	* configure: Regenerate.

gdb/doc/:
	* gdbint.texinfo (Releasing GDB): Point to
	README-maintainer-mode file for required autoconf version.
	* configure.ac: Do not substitute datarootdir, htmldir,
	pdfdir, docdir.  Do not process --with-datarootdir,
	--with-htmldir, --with-pdfdir, --with-docdir.
	* configure: Regenerate.

gprof/:
	* Makefile.am (pdf__strip_dir, install-pdf, install-pdf-am)
	(install-pdf-recursive, html__strip_dir, install-html)
	(install-html-am, install-html-recursive): Remove.
	* Makefile.in: Regenerate.

opcodes/:
	* Makefile.am (install-pdf, install-html): Remove.
	* Makefile.in: Regenerate.

gas/:
	* Makefile.am (install-pdf, install-pdf-recursive, install-html)
	(install-html-recursive): Remove.
	* Makefile.in: Regenerate.
	* doc/Makefile.am (pdf__strip_dir, install-pdf, install-pdf-am)
	(html__strip_dir, install-html, install-html-am): Remove.
	* doc/Makefile.in: Regenerate.

ld/:
	* Makefile.am (pdf__strip_dir, install-pdf, install-pdf-am)
	(install-pdf-recursive, html__strip_dir, install-html)
	(install-html-am, install-html-recursive): Remove.
	* Makefile.in: Regenerate.

binutils/:
	* Makefile.am (install-pdf, install-pdf-recursive, install-html)
	(install-html-recursive): Remove.
	* Makefile.in: Regenerate.
	* doc/Makefile.am (pdf__strip_dir, install-pdf, install-pdf-am)
	(html__strip_dir, install-html, install-html-am): Remove.
	* doc/Makefile.in: Regenerate.

bfd/:
	* Makefile.am (datarootdir, docdir, htmldor, pdfdir)
	(install-pdf, install-pdf-recursive, install-html)
	(install-html-recursive): Remove.
	* Makefile.in: Regenerate.

bfd/doc/:
	* Makefile.am (pdf__strip_dir, install-pdf, install-pdf-am)
	(html__strip_dir, install-html, install-html-am): Remove.
	* Makefile.in: Regenerate.
@
text
@d27 1
a27 1
AC_PREREQ(2.59)
@


1.71
log
@Disable option checking in the toplevel, avoid 2.64 fopen glitch.

/:
	* configure.ac: Call AC_DISABLE_OPTION_CHECKING.
	(baseargs): Add --disable-option-checking.
	* configure: Regenerate.

config/:
	* override.m4 (AC_DISABLE_OPTION_CHECKING): Define to be
	empty if not defined, to avoid error with 2.59.
	(_AC_LANG_IO_PROGRAM): When the Autoconf version is exactly
	2.64, avoid per-language instances to drop fopen from test
	program.
@
text
@a3122 26
# Flags needed to enable html installing and building
AC_ARG_WITH(datarootdir,
[  --with-datarootdir      use datarootdir as the data root directory.],
[datarootdir="\${prefix}/${withval}"],
[datarootdir="\${prefix}/share"])

AC_ARG_WITH(docdir,
[  --with-docdir           install documentation in this directory.],
[docdir="\${prefix}/${withval}"],
[docdir="\${datarootdir}/doc"])

AC_ARG_WITH(pdfdir,
[  --with-pdfdir           install pdf in this directory.],
[pdfdir="\${prefix}/${withval}"],
[pdfdir="\${docdir}"])

AC_ARG_WITH(htmldir,
[  --with-htmldir          install html in this directory.],
[htmldir="\${prefix}/${withval}"],
[htmldir="\${docdir}"])

AC_SUBST(datarootdir)
AC_SUBST(docdir)
AC_SUBST(pdfdir)
AC_SUBST(htmldir)

@


1.70
log
@Sync toplevel with GCC, merge.

/:
	2009-07-31  Christian Bruel  <christian.bruel@@st.com>

	* configure.ac (sh*-*-elf): Don't add target-libgloss to noconfigdirs.
	* configure: Regenerate.

	2009-07-06  Ian Lance Taylor  <iant@@google.com>

	* configure.ac: Add missing comma in AC_ARG_WITH(boot-libs).
	* configure: Rebuild.

	2009-06-26  Steve Ellcey  <sje@@cup.hp.com>

	PR bootstrap/40338
	* configure.ac (comparestring): Create new variable.
	* Makefile.tpl (comparestring): Use to skip some comparisions.
	* configure: Regenerate.
	* Makefile.in: Regenerate.

	2009-06-23  Ian Lance Taylor  <iant@@google.com>

	* configure.ac: Add --enable-build-with-cxx.  When set, add c++ to
	boot_languages.  Only bootstrap target libraries listed in
	target_libs for some boot language.  Add --with-stage1-ldflags,
	--with-stage1-libs, --with-boot-ldflags, --with-boot-libs.  Remove
	with_host_libstdcxx from ppllibs.  Only add -fkeep-inline-functions
	if not building with C++.
	* Makefile.def: For target_module libstdc++-v3, set bootstrap=true.
	* Makefile.tpl (STAGE1_LDFLAGS, STAGE1_LIBS): New variables.
	(POSTSTAGE1_LDFLAGS, POSTSTAGE1_LIBS): New variables.
	(HOST_EXPORTS): Add STAGE1_LDFLAGS to LDFLAGS.  Export HOST_LIBS.
	(POSTSTAGE1_HOST_EXPORTS): Set CXX and CXX_FOR_BUILD.  Add
	POSTSTAGE1_LDFLAGS to LDFLAGS.  Export HOST_LIBS.
	(POSTSTAGE1_FLAGS_TO_PASS): Likewise.
	* configure, Makefile.in: Rebuild.

	2009-06-08  Kaveh R. Ghazi  <ghazi@@caip.rutgers.edu>

	* configure.ac: Detect MPC in default directory.
	* configure: Regenerate.

	2009-06-02  Richard Sandiford  <r.sandiford@@uk.ibm.com>

	* configure.ac (powerpc-*-aix*, rs6000-*-aix*): Add target-newlib
	to noconfdirs.
	* configure: Regenerate.

	2009-05-29  Kaveh R. Ghazi  <ghazi@@caip.rutgers.edu>

	* Makefile.def: Add MPC support and dependencies.
	* configure.ac: Likewise.  Reorganize GMP/MPFR checks.

	* Makefile.in, configure: Regenerate.

	2009-05-24  Nicolas Roche  <roche@@adacore.com>

	* Makefile.tpl (compare-target): Skip ./ada/*tools directories.
	* Makefile.in: Regenerate.

	2009-05-21  Dave Korn  <dave.korn.cygwin@@gmail.com>

	* configure.ac (cygwin noconfigdirs):  Remove libgcj.
	* configure:  Regenerate.

	2009-05-07  Dave Korn  <dave.korn.cygwin@@gmail.com>

	* configure.ac ($with_ppl):  Default to no if not supplied.
	($with_cloog):  Likewise.
	configure:  Regenerate.

	2009-04-24  Kaveh R. Ghazi  <ghazi@@caip.rutgers.edu>

	PR bootstrap/39739
	* configure.ac (extra_mpfr_configure_flags): Set and AC_SUBST.
	* Makefile.def (module=mpfr): Use extra_mpfr_configure_flags.

	* configure, Makefile.in: Regenerate.

	2009-04-14  Jakub Jelinek  <jakub@@redhat.com>

	* configure.ac: Change copyright header to refer to version
	3 of the GNU General Public License and to point readers at the
	COPYING3 file and the FSF's license web page.
	* Makefile.def: Likewise.
	* Makefile.tpl: Likewise.
	* Makefile.in: Regenerate.

	2009-04-09  Jack Howarth  <howarth@@bromo.med.uc.edu>

	* configure.ac: Restore match for darwin9 or later. Use double
	brackets since regeneration eats one pair.
	* configure: Regenerate.
@
text
@d28 1
d2666 1
@


1.69
log
@        * configure.ac: Add Microblaze target.
        * configure: Regenerate.
@
text
@d7 1
a7 1
# the Free Software Foundation; either version 2 of the License, or
d16 2
a17 2
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
d161 1
a161 1
host_libs="intl mmalloc libiberty opcodes bfd readline tcl tk itcl libgui zlib libcpp libdecnumber gmp mpfr ppl cloog libiconv"
d457 1
a457 1
  x86_64-*-darwin9*)
d738 1
a738 1
    noconfigdirs="$noconfigdirs target-gperf target-libgloss ${libgcj}"
d808 1
a808 1
    noconfigdirs="$noconfigdirs gprof target-libgloss target-libssp ${libgcj}"
d835 1
a835 1
    noconfigdirs="$noconfigdirs gprof target-libgloss target-libssp ${libgcj}"
d884 6
a889 1
    noconfigdirs="$noconfigdirs target-libgloss ${libgcj}"
d1206 7
a1212 1
# Check for GMP and MPFR
d1216 32
d1275 1
d1308 2
d1329 1
a1330 2
    saved_LIBS="$LIBS"
    LIBS="$LIBS $gmplibs"
d1333 1
a1333 1
    AC_TRY_LINK([#include <gmp.h>
d1338 28
d1374 28
a1401 9
    ], [AC_TRY_LINK([#include <gmp.h>
    #include <mpfr.h>],[
    #if MPFR_VERSION < MPFR_VERSION_NUM(2,3,2)
    choke me
    #endif
    mpfr_t n; mpfr_init(n);
    ], [AC_MSG_RESULT([yes])], [AC_MSG_RESULT([buggy but acceptable])])],
     [AC_MSG_RESULT([no]); have_gmp=no])
      LIBS="$saved_LIBS"
d1403 1
d1418 9
a1426 1
# Flags needed for both GMP and/or MPFR
d1429 3
d1443 49
d1495 1
a1495 1
ppllibs=" -lppl_c -lppl -lgmpxx $with_host_libstdcxx "
d1500 1
a1500 1
                          plus --with-ppl-lib=PATH/lib])
d1509 1
a1509 1
    ppllibs="-L$with_ppl/lib -lppl_c -lppl -lgmpxx $with_host_libstdcxx"
d1518 1
a1518 1
  ppllibs="-L$with_ppl_lib -lppl_c -lppl -lgmpxx $with_host_libstdcxx"
d1522 1
a1522 1
  ppllibs='-L$$r/$(HOST_SUBDIR)/ppl/.libs -L$$r/$(HOST_SUBDIR)/ppl/_libs -lppl_c -lppl -lgmpxx '"$with_host_libstdcxx "
d1555 1
a1555 1
                          plus --with-cloog-lib=PATH/lib])
d1608 3
d1696 4
d1766 2
d2499 7
d2509 2
a2510 2
/^@@if target-$module-$bootstrap_suffix\$/d
/^@@endif target-$module-$bootstrap_suffix\$/d"
d3074 1
a3074 1
if test "$GCC" = yes; then
d3147 9
@


1.68
log
@2009-07-02  Tristan Gingold  <gingold@@adacore.com>

	* configure.ac: Do not exclude gas for i386-*-darwin.
	Add a case for x86_64-*-darwin.
	* configure: Regenerate.
@
text
@d843 3
@


1.67
log
@	* Makefile.def (host_modules): Add cgen.
	* Makefile.in: Regenerate.
	* configure.ac (host_tools): Add cgen.
	* configure: Regenerate.
@
text
@d453 5
a457 1
  i[[3456789]]86-*-darwin* | x86_64-*-darwin9*)
@


1.66
log
@        * configure.ac: Define is_elf for QNX Neutrino targets.
        * configure: Regenerate.
@
text
@d169 1
a169 1
host_tools="texinfo byacc flex bison binutils gas ld fixincludes gcc sid sim gdb make patch prms send-pr gprof etc expect dejagnu ash bash bzip2 m4 autoconf automake libtool diff rcs fileutils shellutils time textutils wdiff find uudecode hello tar gzip indent recode release sed utils guile perl gawk findutils gettext zip fastjar gnattools"
@


1.66.2.1
log
@	* Makefile.def (host_modules): Add cgen.
	* Makefile.in: Regenerate.
	* configure.ac (host_tools): Add cgen.
	* configure: Regenerate.
@
text
@d169 1
a169 1
host_tools="texinfo byacc flex bison binutils gas ld fixincludes gcc cgen sid sim gdb make patch prms send-pr gprof etc expect dejagnu ash bash bzip2 m4 autoconf automake libtool diff rcs fileutils shellutils time textutils wdiff find uudecode hello tar gzip indent recode release sed utils guile perl gawk findutils gettext zip fastjar gnattools"
@


1.65
log
@2009-05-28  Doug Kwan  <dougkwan@@google.com>

        * configure.ac: Support gold for target arm*-*-*.
        * configure: Regenerate.
        * gold/Makefile.am (TARGETSOURCES): Add arm.cc.
        (ALL_TARGETOBJECTS): Add arm.$(OBJEXT)
        * gold/Makefile.in: Regenerate.
        * gold/arm.cc: New file.
        * gold/configure.tgt: Add armbe*-*-*, armeb*-*-* and arm*-*-* targets.
@
text
@d308 1
a308 1
    | *-*-netbsd* | *-*-openbsd* | *-*-freebsd* | *-*-solaris2*)
@


1.64
log
@Add new binutils target: moxie
@
text
@d321 1
a321 1
      i?86-*-* | x86_64-*-* | sparc*-*-* | powerpc*-*-*)
@


1.63
log
@2009-04-09  Kaveh R. Ghazi  <ghazi@@caip.rutgers.edu>

	* configure.ac: Bump minimum GMP/MPFR versions to 4.2 and 2.3.1.
	* configure: Regenerate.
@
text
@d647 4
@


1.62
log
@2009-04-09  H.J. Lu  <hongjiu.lu@@intel.com>

	PR gas/10039
	* configure.ac: Require texinfo 4.7.
	* configure: Regenerated.
@
text
@d1267 1
a1267 1
  #if __GNU_MP_VERSION < 4 || (__GNU_MP_VERSION == 4 && __GNU_MP_VERSION_MINOR < 1)
d1275 1
a1275 1
    dnl MPFR 2.3.0 is acceptable, but MPFR 2.3.2 is better.
d1279 1
a1279 1
    #if MPFR_VERSION < MPFR_VERSION_NUM(2,3,0)
d1303 1
a1303 1
    AC_MSG_ERROR([Building GCC requires GMP 4.1+ and MPFR 2.3.2+.
@


1.61
log
@	* configure: Rebuild.
	* configure.ac (host_libs): Add libiconv.
	* Makefile.in: Rebuild.
	* Makefile.def (host_modules): Add libiconv.
	(configure-gdb, all-gdb): Depend on libiconv.
@
text
@d2729 1
a2729 1
    # For an installed makeinfo, we require it to be from texinfo 4.6 or
d2732 1
a2732 1
       | egrep 'texinfo[^0-9]*(4\.([6-9]|[1-9][0-9])|[5-9]|[1-9][0-9])' >/dev/null 2>&1; then
@


1.60
log
@        * configure.ac: Treat gdb as supported on x86_64-darwin.
        * configure: Regenerate.
@
text
@d2 1
a2 1
#   2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008 Free Software Foundation,
d161 1
a161 1
host_libs="intl mmalloc libiberty opcodes bfd readline tcl tk itcl libgui zlib libcpp libdecnumber gmp mpfr ppl cloog"
@


1.59
log
@	Merge from GCC:

	2009-03-16  Joseph Myers  <joseph@@codesourcery.com>

	* configure.ac (--with-host-libstdcxx): New option.
	* configure: Regenerate.

	2009-01-29  Robert Millan  <rmh@@aybabtu.com>

	* configure.ac: Recognize GNU/kOpenSolaris (*-*-kopensolaris*-gnu).
	* configure: Regenerate.

	2009-01-12  Sebastian Pop <sebastian.pop@@amd.com>

	PR tree-optimization/38515
	* configure.ac (cloog-polylib): Removed.
	(with_ppl, with_cloog): Test for "no".
	* configure: Regenerated.
@
text
@d449 1
a449 1
  powerpc-*-darwin* | x86_64-*-darwin[[912]]*)
d453 1
a453 1
  i[[3456789]]86-*-darwin*)
@


1.58
log
@        * configure.ac (ia64*-*-*vms*): Add case with no gdb or ld support.
        * configure: Regenerate.
@
text
@d411 1
a411 1
    *-*-linux* | *-*-gnu* | *-*-k*bsd*-gnu | bfin*-*-uclinux*)
d428 1
a428 1
    *-*-linux* | *-*-gnu* | *-*-k*bsd*-gnu)
d926 1
a926 1
  *-*-linux* | *-*-gnu* | *-*-k*bsd*-gnu)
d1318 9
d1331 1
a1331 1
ppllibs=" -lppl_c -lppl -lgmpxx "
d1340 10
a1349 5
if test "x$with_ppl" != x; then
  ppllibs="-L$with_ppl/lib -lppl_c -lppl -lgmpxx"
  pplinc="-I$with_ppl/include $pplinc"
  LIBS="$ppllibs $LIBS"
fi
d1354 1
a1354 1
  ppllibs="-L$with_ppl_lib -lppl_c -lppl -lgmpxx"
d1358 1
a1358 1
  ppllibs='-L$$r/$(HOST_SUBDIR)/ppl/.libs -L$$r/$(HOST_SUBDIR)/ppl/_libs -lppl_c -lppl -lgmpxx '
a1393 1
AC_ARG_WITH(cloog-polylib, [  --with-cloog-polylib=PATH Specify prefix directory for the installed CLooG-PolyLib package])
d1395 11
a1405 10
if test "x$with_cloog" != x; then
  clooglibs="-L$with_cloog/lib -lcloog"
  clooginc="-I$with_cloog/include -DCLOOG_PPL_BACKEND "
  LIBS="$clooglibs $LIBS"
fi
if test "x$with_cloog_polylib" != x; then
  clooglibs="-L$with_cloog/lib -lcloog"
  clooginc="-I$with_cloog/include "
  LIBS="$clooglibs $LIBS"
fi
d2041 1
a2041 1
  *-*-linux* | *-*-gnu* | *-*-k*bsd*-gnu)
@


1.57
log
@2008-12-16  Paolo Bonzini  <bonzini@@gnu.org>

	Sync with GCC:

	2008-12-12  Sebastian Pop  <sebastian.pop@@amd.com>

	* configure.ac (ppllibs): Add by default the lib flags.
	* configure: Regenerate.

	2008-12-04  Jack Howarth  <howarth@@bromo.med.uc.edu>

        * configure.ac: Add double brackets on darwin[912].
        * configure: Regenerate.

	2008-12-02  Jack Howarth  <howarth@@bromo.med.uc.edu>

        * configure.ac: Expand to darwin10 and later.
        * configure: Regenerate.
@
text
@d691 4
@


1.56
log
@	Merge from GCC:

	2007-12-02  Matthias Klose  <doko@@ubuntu.com>

	* config-ml.in: Remove 64bit configure tests.

	2008-05-14  Rafael Espindola  <espindola@@google.com>

	* config-ml.in: don't handle --enable-shared and --enable-static.

	2008-09-02  Sebastian Pop  <sebastian.pop@@amd.com>
	    Tobias Grosser  <grosser@@fim.uni-passau.de>
	    Jan Sjodin  <jan.sjodin@@amd.com>
	    Harsha Jagasia  <harsha.jagasia@@amd.com>
	    Dwarakanath Rajagopal  <dwarak.rajagopal@@amd.com>
	    Konrad Trifunovic  <konrad.trifunovic@@inria.fr>
	    Adrien Eliche  <aeliche@@isty.uvsq.fr>

	Merge from graphite branch.
	* configure: Regenerate.
	* Makefile.in: Regenerate.
	* configure.ac (host_libs): Add ppl and cloog.
	Add checks for PPL and CLooG.
	* Makefile.def (ppl, cloog): Added modules and dependences.
	* Makefile.tpl (PPLLIBS, PPLINC, CLOOGLIBS, CLOOGINC): New.
	(HOST_PPLLIBS, HOST_PPLINC, HOST_CLOOGLIBS, HOST_CLOOGINC): New.

	2008-09-03  Richard Guenther  <rguenther@@suse.de>

	* configure.ac: Always pass -DCLOOG_PPL_BACKEND to the
	cloog test.
	* configure: Re-generate.

	2008-09-03  Sebastian Pop  <sebastian.pop@@amd.com>

	* configure.ac (--with-cloog-polylib): New.
	(--disable-cloog-version-check): New.
	(--disable-ppl-version-check): New.
	* configure: Re-generate.

	2008-09-05  Richard Guenther  <rguenther@@suse.de>

	* configure.ac: Initialize clooglibs to -lcloog.
	* configure: Re-generate.

	2008-10-13  Kaveh R. Ghazi  <ghazi@@caip.rutgers.edu>

	* configure.ac (MPFR check): Bump minimum version to 2.3.0 and
	recommended version to 2.3.2.

	* configure: Regenerate.

	2008-10-31  Ben Elliston  <bje@@au.ibm.com>

	* configure.ac (spu-*-*): Remove special case.
	* configure: Regenerate.

	Complete comment text from GCC version of:

	2008-08-31  Aaron W. LaFramboise  <aaronavay62@@aaronwl.com>

	* configure.ac (RPATH_ENVVAR): Use PATH on Windows.
	(GCC_SHLIB_SUBDIR): New.
	* Makefile.tpl (HOST_LIB_PATH_gcc): Use GCC_SHLIB_SUBDIR.
	* configure: Regenerate.
	* Makefile.in: Regenerate.
@
text
@d449 1
a449 1
  powerpc-*-darwin* | x86_64-*-darwin9*)
d1318 1
a1318 1
ppllibs=
@


1.55
log
@2008-11-27  Tristan Gingold  <gingold@@adacore.com>

	* configure.ac: Build gdb for i?86-*-darwin*
	* configure: Regenerated.
@
text
@d161 1
a161 1
host_libs="intl mmalloc libiberty opcodes bfd readline tcl tk itcl libgui zlib libcpp libdecnumber gmp mpfr"
a897 2
  spu-*-*)
    ;;
d1271 1
a1271 1
    dnl MPFR 2.2.1 is acceptable, but MPFR 2.3.0 is better.
d1275 1
a1275 1
    #if MPFR_VERSION < MPFR_VERSION_NUM(2,2,1)
d1288 1
a1288 1
    #if MPFR_VERSION < MPFR_VERSION_NUM(2,3,0)
d1299 1
a1299 1
    AC_MSG_ERROR([Building GCC requires GMP 4.1+ and MPFR 2.3.0+.
d1314 109
d2172 2
@


1.54
log
@	Revert:

	2008-10-24  Daniel Jacobowitz  <dan@@codesourcery.com>

	* Makefile.tpl (HOST_EXPORTS): Correct CPPFLAGS typo.
	* Makefile.in: Regenerated.

	2008-10-22  Daniel Jacobowitz  <dan@@codesourcery.com>

	* Makefile.def (flags_to_pass): Add CPPFLAGS_FOR_BUILD and CPPFLAGS.
	* Makefile.tpl (BUILD_EXPORTS): Set CPPFLAGS.
	(EXTRA_BUILD_FLAGS): Correct typo.  Pass CPPFLAGS.
	(HOST_EXPORTS): Pass CPPFLAGS.
	(CPPFLAGS_FOR_BUILD, CPPFLAGS, CPPFLAGS_FOR_TARGET): Define.
	(LDFLAGS_FOR_TARGET): Initialize from configure script.
	(EXTRA_TARGET_FLAGS): Set CPPFLAGS.
	* Makefile.in, configure: Regenerated.
	* configure.ac: Set CPPFLAGS_FOR_TARGET, LDFLAGS_FOR_TARGET,
	and CPPFLAGS_FOR_BUILD.
@
text
@d449 1
a449 1
  powerpc-*-darwin* | i[[3456789]]86-*-darwin* | x86_64-*-darwin9*)
d453 4
@


1.53
log
@2008-10-29  Stefan Schulze Frielinghaus  <xxschulz@@de.ibm.com>

	* configure.ac [spu-*-*]: Do not set skipdirs.
	* configure: Re-generate.
@
text
@a1744 6
# Other target tools.
CPPFLAGS_FOR_TARGET=${CPPFLAGS_FOR_TARGET-${CPPFLAGS}}
AC_SUBST(CPPFLAGS_FOR_TARGET)
LDFLAGS_FOR_TARGET=${LDFLAGS_FOR_TARGET-${LDFLAGS}}
AC_SUBST(LDFLAGS_FOR_TARGET)

a2482 1
  CPPFLAGS_FOR_BUILD=${CPPFLAGS_FOR_BUILD-${CPPFLAGS}}
a2547 1
AC_SUBST(CPPFLAGS_FOR_BUILD)
@


1.52
log
@	PR gdb/921
	PR gdb/1646
	PR gdb/2175
	PR gdb/2176

	* Makefile.def (flags_to_pass): Add CPPFLAGS_FOR_BUILD and CPPFLAGS.
	* Makefile.tpl (BUILD_EXPORTS): Set CPPFLAGS.
	(EXTRA_BUILD_FLAGS): Correct typo.  Pass CPPFLAGS.
	(HOST_EXPORTS): Pass CPPFLAGS.
	(CPPFLAGS_FOR_BUILD, CPPFLAGS, CPPFLAGS_FOR_TARGET): Define.
	(LDFLAGS_FOR_TARGET): Initialize from configure script.
	(EXTRA_TARGET_FLAGS): Set CPPFLAGS.
	* Makefile.in, configure: Regenerated.
	* configure.ac: Set CPPFLAGS_FOR_TARGET, LDFLAGS_FOR_TARGET,
	and CPPFLAGS_FOR_BUILD.

	libiberty/
	* Makefile.in (CPPFLAGS): Define.
	(FLAGS_TO_PASS, COMPILE.c): Add CPPFLAGS.
@
text
@a894 1
    skipdirs="target-libssp"
@


1.51
log
@2008-08-31  Aaron W. LaFramboise  <aaronavay62@@aaronwl.com>

	* configure.ac (RPATH_ENVVAR): Use PATH on Windows.
	(GCC_SHLIB_SUBDIR): New.
	* Makefile.tpl (HOST_LIB_PATH_gcc): Use GCC_SHLIB_SUBDIR.
	* configure: Regenerate.
	* Makefile.in: Regenerate.
@
text
@d1746 6
d2490 1
d2556 1
@


1.50
log
@2008-08-28  Tristan Gingold  <gingold@@adacore.com>

	* configure.ac (powerpc-*-darwin*, i?86-*-darwin*,x86_64-*-darwin9):
	Enable bfd, binutils and opcodes.
	* configure: Regenerate.
@
text
@d2053 1
d2057 1
d2061 7
d2525 1
@


1.49
log
@	* configure.ac (mips*-*-*linux*, mips*-*-gnu*): Use mt-mips-gnu.
	* configure: Regenerate.

config/
	* mt-mips16-compat: New file, taken from mt-mips-elfoabi.
	* mt-mips-elfoabi: Include mt-mips16-compat.
	* mt-mips-gnu: New file.
@
text
@d450 1
a450 1
    noconfigdirs="$noconfigdirs bfd binutils ld gas opcodes gdb gprof"
@


1.48
log
@2008-07-30 Paolo Bonzini  <bonzini@@gnu.org>

	Sync with gcc:
	2008-07-30 Paolo Bonzini  <bonzini@@gnu.org>

        * configure.ac: Add makefile fragments for hpux.
        * Makefile.def (flags_to_pass): Add ADA_CFLAGS.
        * Makefile.tpl (HOST_EXPORTS): Pass ADA_CFLAGS.
        * configure: Regenerate.
        * Makefile.in: Regenerate.

	2008-06-17  Ralf Wildenhues  <Ralf.Wildenhues@@gmx.de>

        * Makefile.tpl ($(srcdir)/configure): Update dependencies.
        * Makefile.in: Regenerate.
        * configure: Regenerate.

config:
2008-07-30  Paolo Bonzini  <bonzini@@gnu.org>

	* mh-pa: New, from gcc/config/pa/x-ada.
	* mh-pa-hpux10: New, from gcc/config/pa/x-ada-hpux10.

2008-06-11  Bernhard Fischer  <aldot@@gcc.gnu.org>

        * tls.m4: Fix typos.
@
text
@d1907 3
@


1.47
log
@	* configure.ac: Set TOPLEVEL_CONFIGURE_ARGUMENTS early, when
	"$@@" is still intact with both Autoconf 2.59 and 2.62.
	* configure: Regenerate.
@
text
@d1070 1
a1070 1
  *-hp-hpux*)
d1072 1
d1074 8
a1081 1
  *-*-hiux*)
@


1.46
log
@    * configure.ac (arm*-*-linux-gnueabi): Don't disable building
    of libobjc for ARM EABI Linux.
    * configure: Regenerate.
@
text
@d2 2
a3 1
#   2001, 2002, 2003, 2004, 2005, 2006, 2007 Free Software Foundation, Inc.
d29 28
a115 28
progname=$0
# if PWD already has a value, it is probably wrong.
if test -n "$PWD" ; then PWD=`${PWDCMD-pwd}`; fi

# Export original configure arguments for use by sub-configures.
# Quote arguments with shell meta charatcers.
TOPLEVEL_CONFIGURE_ARGUMENTS=
set -- "$progname" "$@@"
for ac_arg
do
  case "$ac_arg" in
  *" "*|*"	"*|*[[\[\]\~\#\$\^\&\*\(\)\{\}\\\|\;\<\>\?\']]*)
    ac_arg=`echo "$ac_arg" | sed "s/'/'\\\\\\\\''/g"`
    # if the argument is of the form -foo=baz, quote the baz part only
    ac_arg=`echo "'$ac_arg'" | sed "s/^'\([[-a-zA-Z0-9]]*=\)/\\1'/"` ;;
  *) ;;
  esac
  # Add the quoted argument to the list.
  TOPLEVEL_CONFIGURE_ARGUMENTS="$TOPLEVEL_CONFIGURE_ARGUMENTS $ac_arg"
done
if test "$silent" = yes; then
  TOPLEVEL_CONFIGURE_ARGUMENTS="$TOPLEVEL_CONFIGURE_ARGUMENTS --silent"
fi
# Remove the initial space we just introduced and, as these will be
# expanded by make, quote '$'.
TOPLEVEL_CONFIGURE_ARGUMENTS=`echo "x$TOPLEVEL_CONFIGURE_ARGUMENTS" | sed -e 's/^x *//' -e 's,\\$,$$,g'`
AC_SUBST(TOPLEVEL_CONFIGURE_ARGUMENTS)

@


1.45
log
@2008-06-12  David S. Miller  <davem@@davemloft.net>
            David Edelsohn  <edelsohn@@gnu.org>

        * configure.ac: Add powerpc*-*-* to gold supported targets.
        * configure: Regenerate.
@
text
@a565 1
    noconfigdirs="$noconfigdirs target-libobjc"
@


1.44
log
@2008-04-18  Paolo Bonzini  <bonzini@@gnu.org>

	Sync with gcc:
	2008-04-18  Paolo Bonzini  <bonzini@@gnu.org>

	PR bootstrap/35457
	* configure.ac: Include override.m4.
	* configure: Regenerate.

	2008-04-18  Paolo Bonzini  <bonzini@@gnu.org>

        * Makefile.tpl (restrap): Call `make all' using double-colon rules.
        * Makefile.in: Regenerate.

	2008-04-11  Eric B. Weddington  <eweddington@@cso.atmel.com>

        * configure.ac: Do not build libssp for the AVR.
        * configure: Regenerate.

config:
2008-04-18  Paolo Bonzini  <bonzini@@gnu.org>

	PR bootstrap/35457

	* override.m4: Add this.  Make sure aclocal always picks it.
	Add more lenient precious variable check, backported from
	autoconf trunk.
@
text
@d320 1
a320 1
      i?86-*-* | x86_64-*-* | sparc*-*-*)
@


1.43
log
@ * configure.ac (cr16-*-*): Add case for cr16 target and include gdb
   as nonconfigurable directories list.
 * configure: Regenerate.
@
text
@d21 2
a22 1
sinclude(config/acx.m4)
d592 1
a592 1
    noconfigdirs="$noconfigdirs target-libiberty target-libstdc++-v3 ${libgcj}"
@


1.42
log
@toplevel/

	* configure.ac: Add sparc*-*-* to gold supported targets.
	* configure: Regenerate.

gold/

	* sparc.cc: New file.
	* Makefile.am (TARGETSOURCES): Add sparc.cc
	(ALL_TARGETOBJS): Add sparc.$(OBJEXT)
	* configure.tgt: Document targ_extra_size and
	targ_extra_big_endian.  Add entries for sparc-* and
	sparc64-*.
	* configure.ac: Handle targ_extra_size and
	targ_extra_big_endian.
	* Makefile.in: Rebuild.
	* configure: Likewise.
	* po/POTFILES.in: Likewise.
	* po/gold.pot: Likewise.
@
text
@d605 3
@


1.41
log
@        PR binutils/4334
        * acx.m4 (ACX_CHECK_CYGWIN_CAT_WORKS): New macro to check that
        cygwin builds are not running in textmode.

        * configure.ac: Run ACX_CHECK_CYGWIN_CAT_WORKS for cygwin hosted
        builds.
        * configure: Regenerate.
@
text
@d319 1
a319 1
      i?86-*-* | x86_64-*-*)
@


1.40
log
@PR other/35151
       * configure.ac: Combine rules for mingw32 and mingw64.
       * configure: Regenerate.
@
text
@d1045 1
@


1.39
log
@Copy this patch over from master gcc repository:

	* configure.ac: Add support for --enable-gold.
	* Makefile.def: Add gold as a directory like ld.
	* configure, Makefile.in: Regenerate.
@
text
@d1047 1
a1047 4
  *-mingw32*)
    host_makefile_frag="config/mh-mingw"
    ;;
  *-mingw64*)
@


1.38
log
@        * configure.ac: m4_include config/proginstall.m4.
        * configure: Regenerate.
config/
        * proginstall.m4: New file, with fixed AC_PROG_INSTALL.
bfd/
        * aclocal.m4: Regenerate.
        * configure: Likewise.
        * Makefile.in: Likewise.
bfd/doc/
        * Makefile.in: Regenerate.
intl/
        * aclocal.m4: Regenerate.
        * configure: Likewise.
gas/
        * aclocal.m4: Regenerate.
        * configure: Likewise.
        * Makefile.in: Likewise.
        * doc/Makefile.in: Likewise.
ld/
        * aclocal.m4: Regenerate.
        * configure: Likewise.
        * Makefile.in: Likewise.
opcodes/
        * aclocal.m4: Regenerate.
        * configure: Likewise.
        * Makefile.in: Likewise.
binutils/
        * aclocal.m4: Regenerate.
        * configure: Likewise.
        * Makefile.in: Likewise.
        * doc/Makefile.in: Likewise.
gprof/
        * aclocal.m4: Regenerate.
        * configure: Likewise.
        * Makefile.in: Likewise.
@
text
@d166 1
d243 1
a243 1
  noconfigdirs="$noconfigdirs ld"
d294 32
d1787 1
a1787 1
   echo " ${configdirs} " | grep " ld " > /dev/null 2>&1 ; then
@


1.37
log
@2008-02-20  Paolo Bonzini  <bonzini@@gnu.org>

        PR bootstrap/32009
        PR bootstrap/32161

        * configure.ac (CFLAGS_FOR_TARGET, CXXFLAGS_FOR_TARGET): Compute here.
        * configure: Regenerate.

        * Makefile.def: Define stage_libcflags for all bootstrap stages.
        * Makefile.tpl (BOOT_LIBCFLAGS, STAGE2_LIBCFLAGS, STAGE3_LIBCFLAGS,
        STAGE4_LIBCFLAGS): New.
        (CFLAGS_FOR_TARGET, CXXFLAGS_FOR_TARGET): Subst from autoconf, without
        $(SYSROOT_CFLAGS_FOR_TARGET) and $(DEBUG_PREFIX_CFLAGS_FOR_TARGET).
        (BASE_TARGET_EXPORTS): Append them here to C{,XX}FLAGS.
        (EXTRA_TARGET_FLAGS): Append them here to {LIB,}C{,XX}FLAGS.
        (configure-stage[+id+]-[+prefix+][+module+]): Pass stage_libcflags
        for target modules.  Don't export LIBCFLAGS.
        (all-stage[+id+]-[+prefix+][+module+]): Pass stage_libcflags; pass
        $(BASE_FLAGS_TO_PASS) where [+args+] was passed, and [+args+] after
        the overridden CFLAGS_FOR_TARGET and CXXFLAGS_FOR_TARGET.
        (invocations of `all'): Replace $(TARGET_FLAGS_TO_PASS) with
        $(EXTRA_TARGET_FLAGS), $(FLAGS_TO_PASS) with $(EXTRA_HOST_FLAGS).
        * Makefile.in: Regenerate.

config:
2008-02-20  Paolo Bonzini  <bonzini@@gnu.org>

        PR bootstrap/32009
        * mh-ppc-darwin (BOOT_CFLAGS): Reenable.
@
text
@d22 1
@


1.37.4.1
log
@Retrospectively check in source files modified in insight 6.8 release.
@
text
@d165 1
a165 1
host_tools="byacc flex bison binutils gas ld fixincludes gcc sid sim gdb make patch prms send-pr gprof etc expect dejagnu ash bash bzip2 m4 autoconf automake libtool diff rcs fileutils shellutils time textutils wdiff find uudecode hello tar gzip indent recode release sed utils guile perl gawk findutils gettext zip fastjar gnattools"
@


1.36
log
@	* configure.ac: Enable fortran for cris-*-elf and crisv32-*-elf.
	* configure: Regenerate.
@
text
@d1670 32
@


1.35
log
@2008-01-31  Marc Gauthier  <marc@@tensilica.com>
	* configure.ac (xtensa*-*-*): Recognize processor variants.
	* configure: Regenerate.
@
text
@a577 1
	unsupported_languages="$unsupported_languages fortran"
@


1.34
log
@2008-01-30  Ralf Wildenhues  <Ralf.Wildenhues@@gmx.de>

        PR bootstrap/34922
        * configure.ac (PARSE_ARGS): Push suitable setting of
        ac_subdirs_all, for `./configure --help=recursive'.
        Handle `+' in generic toplevel directory disabling.
        * configure: Regenerate.
@
text
@d878 1
a878 1
  xtensa-*-*)
d1798 1
a1798 1
  xtensa-*-elf*)
@


1.33
log
@/tmp/foo.diff
@
text
@d210 4
d1487 2
a1488 1
  if eval test x\${enable_${dirname}} "=" xno ; then
@


1.32
log
@Merge from gcc:
2007-12-10  Andreas Tobler  <a.tobler@@schweiz.org>

	* configure.ac: Enable libjava for x86_64-*-darwin9.
	* configure: Regenerate.
@
text
@d1223 1
a1223 1
    dnl MPFR 2.2.0 is acceptable but buggy, MPFR 2.2.1 is better.
d1227 1
a1227 1
    #if MPFR_VERSION < MPFR_VERSION_NUM(2,2,0)
d1240 1
a1240 1
    #if MPFR_VERSION < MPFR_VERSION_NUM(2,2,1)
d1251 1
a1251 1
    AC_MSG_ERROR([Building GCC requires GMP 4.1+ and MPFR 2.2.1+.
@


1.31
log
@* configure.ac (CFLAGS_FOR_BUILD, CXXFLAGS_FOR_BUILD, LDFLAGS_FOR_BUILD): Default them to host flags
  only for $host = $build.
  Set default CXXFLAGS_FOR_BUILD to CXXFLAGS, not CFLAGS.
  Set default LDFLAGS_FOR_BUILD to LDFLAGS, not CFLAGS.
* configure: Regenerate.
@
text
@d409 1
a409 1
  powerpc-*-darwin* | i[[3456789]]86-*-darwin*)
@


1.30
log
@2007-10-01  Paolo Bonzini  <bonzini@@gnu.org>

	* Makefile.tpl (AR_FOR_BUILD, AS_FOR_BUILD, CXX_FOR_BUILD,
	DLLTOOL_FOR_BUILD, GCJ_FOR_BUILD, GFORTRAN_FOR_BUILD,
	LDFLAGS_FOR_BUILD, LD_FOR_BUILD, NM_FOR_BUILD, RANLIB_FOR_BUILD,
	WINDMC_FOR_BUILD, WINDRES_FOR_BUILD): Use autoconf substitutions.
	* configure.ac: Default them to host tools for $host = $build.
	Subst them.

	* configure: Regenerate.
	* Makefile.in: Regenerate.
@
text
@d2390 5
a2394 3
CFLAGS_FOR_BUILD=${CFLAGS_FOR_BUILD-${CFLAGS}}
CXXFLAGS_FOR_BUILD=${CXXFLAGS_FOR_BUILD-${CFLAGS}}
LDFLAGS_FOR_BUILD=${LDFLAGS_FOR_BUILD-${CFLAGS}}
@


1.29
log
@Merge from gcc:

2007-09-19  Benjamin Kosnik  <bkoz@@redhat.com>
* configure.ac (TOPLEVEL_CONFIGURE_ARGUMENTS): Move libgomp before
libstdc++.
* Makefile.def: Add libgomp config as a maybe dependency for libstdc++.
* configure: Regenerate.
* Makefile.in: Regenerate.
@
text
@d44 1
d1086 2
d1089 9
d1099 2
d1102 9
d2391 2
d2450 2
d2453 12
a2548 1
AC_SUBST(CFLAGS_FOR_BUILD)
@


1.28
log
@	* configure.ac (mipsisa*-*-elfoabi*): New stanza.
	* configure: Regenerate.

config/
	* mt-mips-elfoabi: New file.
@
text
@d179 1
d187 1
a187 2
		target-libada \
		target-libgomp"
@


1.27
log
@	* configure.ac: Raise minimum makeinfo version to 4.6.
	* configure: Regenerate.
@
text
@d1801 3
@


1.26
log
@	* configure.ac: Correct makeinfo version check.
	* configure: Regenerate.
@
text
@d2462 1
a2462 1
    # For an installed makeinfo, we require it to be from texinfo 4.4 or
d2465 1
a2465 1
       | egrep 'texinfo[^0-9]*(4\.([4-9]|[1-9][0-9])|[5-9]|[1-9][0-9])' >/dev/null 2>&1; then
@


1.25
log
@	* configure.ac (mips*-sde-elf*): New stanza.  Add target-libiberty
	to $skipdirs and only disable gprof for newlib.  Use the normal
	mips*-elf* handling in other respects.
	* configure: Regnerate.
@
text
@d2465 1
a2465 1
       | egrep 'texinfo[^0-9]*([1-3][0-9]|4\.[4-9]|[5-9])' >/dev/null 2>&1; then
@


1.24
log
@2007-09-12  David Daney  <ddaney@@avtrex.com>

	* configure.ac: Remove mips64*-*-linux* noconfigdirs section, thus
	enabling libgcj.
	* configure: Regenerate.

2007-09-12  Richard Guenther  <rguenther@@suse.de>

	* configure.ac (--enable-stage1-checking): If neither --enable-checking
	nor --disable-checking is provided also turn on yes and types
	checking for stage1.
	* configure: Re-generate.
@
text
@d785 8
@


1.23
log
@2007-09-06  Francois-Xavier Coudert  <fxcoudert@@gcc.gnu.org>

        PR target/33281
        * configure.ac: Use config/mh-mingw on mingw.
        * configure: Regenerate.
        * config/mh-mingw: New host makefile fragment.
@
text
@a797 3
  mips64*-*-linux*)
    noconfigdirs="$noconfigdirs target-newlib target-libgloss ${libgcj}"
    ;;
d2646 1
a2646 1
[if test "x$enable_checking" = xno; then
d2649 1
a2649 1
  stage1_checking=--enable-checking=types${enable_checking+,}$enable_checking
@


1.22
log
@2007-09-10  Rask Ingemann Lambertsen  <rask@@sygehus.dk>
PR other/32154
* configure.ac: For libgloss targets, point the linker to the linker
script, startup code and simulator library.
* configure: Regenerate.
@
text
@d1005 1
d1008 1
@


1.21
log
@2007-09-09  Andrew Haley  <aph@@redhat.com>

        * configure.ac (noconfigdirs): Remove target-libffi and
        target-libjava.
@
text
@d401 2
d509 1
d518 1
d522 1
d530 1
d534 1
d581 1
d592 3
d626 3
d649 1
d719 1
d727 3
d761 1
d768 1
d771 1
d806 1
d820 3
d828 1
d832 1
d2330 13
a2375 10
  m32c-*-* )
    if test -d ${srcdir}/libgloss/m32c; then
      # This is for crt0.o
      FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -B$$r/$(TARGET_SUBDIR)/libgloss/m32c'
      # This is for r8c.ld
      FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -L$$r/$(TARGET_SUBDIR)/libgloss/m32c'
      # This is for libnosys.a
      FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -L$$r/$(TARGET_SUBDIR)/libgloss/libnosys'
    fi
    ;;
@


1.20
log
@Bring over from the GCC tree:

2007-08-21  Richard Guenther  <rguenther@@suse.de>

 	* configure.ac: Add types checking to stage1 checking flags.
	* configure: Regenerate.
@
text
@d520 2
a521 2
    noconfigdirs="$noconfigdirs target-libffi target-qthreads"
    noconfigdirs="$noconfigdirs target-libjava target-libobjc"
@


1.20.2.1
log
@	* configure.ac: Correct makeinfo version check.
	* configure: Regenerate.
@
text
@d2427 1
a2427 1
       | egrep 'texinfo[^0-9]*(4\.([4-9]|[1-9][0-9])|[5-9]|[1-9][0-9])' >/dev/null 2>&1; then
@


1.19
log
@2007-08-18  Paul Brook  <paul@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* Makefile.tpl (DEBUG_PREFIX_CFLAGS_FOR_TARGET): New.
	(CFLAGS_FOR_TARGET, CXXFLAGS_FOR_TARGET): Include it.
	* Makefile.in: Regenerate.
	* configure.ac (--with-debug-prefix-map): New.
	* configure: Regenerate.

config:
2007-08-18  Paul Brook  <paul@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* mt-gnu (CXXFLAGS_FOR_TARGET): Add
	$(DEBUG_PREFIX_CFLAGS_FOR_TARGET).
@
text
@d2617 1
a2617 1
  stage1_checking=--enable-checking
d2619 1
a2619 1
  stage1_checking=--enable-checking${enable_checking+=}$enable_checking
@


1.18
log
@2007-08-17  Richard Sandiford  <richard@@codesourcery.com>
	    Nigel Stephens  <nigel@@mips.com>

	* config/mt-sde: New file.
	* configure.ac (mips*-sde-elf*): New stanza.  Use config/mt-sde
	as target_makefile_frag.
	* configure: Regenerate.
@
text
@d1596 12
@


1.17
log
@	* configure.ac (TOPLEVEL_CONFIGURE_ARGUMENTS, baseargs): Pass
	--silent if $silent.
	* configure: Regenerate.
@
text
@d1751 3
@


1.16
log
@	* configure.ac: Fix my previous change to really match GCC.
	* configure: Regenerate.
@
text
@d104 3
d2184 3
@


1.16.2.1
log
@	* configure.ac: Correct makeinfo version check.
	* configure: Regenerate.
@
text
@d2406 1
a2406 1
       | egrep 'texinfo[^0-9]*(4\.([4-9]|[1-9][0-9])|[5-9]|[1-9][0-9])' >/dev/null 2>&1; then
@


1.15
log
@Merge from gcc:
2007-07-11  Ralf Wildenhues  <Ralf.Wildenhues@@gmx.de>
* configure.ac: Rewrite 'configure --help' strings to look nicer.
* configure: Regenerate.

2007-07-11  Ralf Wildenhues  <Ralf.Wildenhues@@gmx.de>
* configure.ac: Add some missing m4 quotation.
* configure: Regenerate.
@
text
@d367 1
a367 1
    *-*-linux* | *-*-gnu* | *-*-k*bsd*-gnu | *-*-linux-uclibc* | *-*-uclinux*)
@


1.14
log
@Import patch from FSF gcc sources to add support for building windmc tool.
@
text
@d335 1
a335 1
[  --enable-libada        Builds libada directory],
d343 1
a343 1
[  --enable-libssp        Builds libssp directory],
d1084 1
a1084 1
AC_ARG_WITH(mpfr-dir, [  --with-mpfr-dir=PATH    This option has been REMOVED],
d1088 1
a1088 1
AC_ARG_WITH(mpfr, [  --with-mpfr=PATH        Specify prefix directory for installed MPFR package
d1092 2
a1093 2
                          Specify directory for installed MPFR include files])
AC_ARG_WITH(mpfr_lib, [  --with-mpfr-lib=PATH    Specify the directory for the installed MPFR library])
d1116 1
a1116 1
AC_ARG_WITH(gmp-dir, [  --with-gmp-dir=PATH     This option has been REMOVED],
d1120 1
a1120 1
AC_ARG_WITH(gmp, [  --with-gmp=PATH         Specify prefix directory for the installed GMP package
d1123 2
a1124 2
AC_ARG_WITH(gmp_include, [  --with-gmp-include=PATH Specify directory for installed GMP include files])
AC_ARG_WITH(gmp_lib, [  --with-gmp-lib=PATH     Specify the directory for the installed GMP library])
d1368 1
a1368 1
[  --enable-stage1-languages[=all]   choose additional languages to build during
d1429 2
a1430 2
[  --enable-objc-gc       enable the use of Boehm's garbage collector with
                          the GNU Objective-C runtime.],
d1585 1
a1585 1
  [  --with-build-sysroot=sysroot
d1696 1
a1696 1
  i[34567]86-pc-msdosdjgpp*)
d1699 1
a1699 1
  i[34567]86-*-sco3.2v5*)
d1730 1
a1730 1
  *-*-sysv[45]* | \
d1944 1
a1944 1
[  --enable-bootstrap           Enable bootstrapping [yes if native build]],,
d2038 2
a2039 2
[  --enable-serial-[{host,target,build}-]configure
                          Force sequential configuration of
d2041 1
a2041 1
			  machine, or all sub-packages])
d2453 1
a2453 1
  [  --with-build-time-tools=path
d2592 2
a2593 2
[  --enable-stage1-checking[=all]   choose additional checking for stage1
                          of the compiler.],
d2618 1
a2618 1
[  --with-datarootdir	Use datarootdir as the data root directory.],
d2623 1
a2623 1
[  --with-docdir	Install documentation in this directory.],
d2628 1
a2628 1
[  --with-pdfdir	Install pdf in this directory.],
d2633 1
a2633 1
[  --with-htmldir	Install html in this directory.],
@


1.13
log
@	* configure.ac: Don't add target-libmudflap to noconfigdirs for
	uclinux and linux-uclibc targets.
	* configure: Regenerate.
@
text
@d2442 1
d2480 1
d2506 1
@


1.12
log
@* configure.ac (arm*-*-linux-gnueabi): Don't build libgloss if we're
not building newlib.
* configure: Regenerated.
@
text
@d367 1
a367 1
    *-*-linux* | *-*-gnu* | *-*-k*bsd*-gnu)
@


1.11
log
@2007-06-04  Paolo Bonzini  <bonzini@@gnu.org>

	Sync with gcc:
	2007-05-30  Jakub Jelinek  <jakub@@redhat.com>

        PR bootstrap/29382
        * configure.ac: Don't use -fkeep-inline-functions for GCC < 3.3.1.
        * configure: Rebuilt.
@
text
@d519 3
@


1.10
log
@	* configure.ac (TOPLEVEL_CONFIGURE_ARGUMENTS): Fix m4 quoting
	of glob.  Quote arguments with single quotes too.
	* configure: Regenerate.
@
text
@d2569 7
a2575 1
  AC_TRY_COMPILE(,,
@


1.9
log
@Merge from gcc:

+2007-03-01  Brooks Moses  <brooks.moses@@codesourcery.com>
+
+	* configure.ac: Add "--with-pdfdir" configure option,
+	which defines pdfdir variable.
+	* Makefile.def (target=fixincludes): Add install-pdf to
+	missing targets.
+	(recursive_targets): Add install-pdf target.
+	(flags_to_pass): Add pdfdir.
+	* Makefile.tpl: Add pdfdir handling, add do-install-pdf
+	target.
+	* configure: Regenerate
+	* Makefile.in: Regenerate
+
+2007-02-28  Eric Christopher  <echristo@@apple.com>
+
+	Revert:
+	2006-12-07  Mike Stump  <mrs@@apple.com>
+
+	* Makefile.def (dependencies): Add dependency for
+	install-target-libssp and install-target-libgomp on
+	install-gcc.
+	* Makefile.in: Regenerate.
+
+2007-02-27  Matt Kraai  <kraai@@ftbfs.org>
+
+	* configure: Regenerate.
+	* configure.ac: Move statements after variable declarations.
+
@
text
@d95 1
a95 1
  *" "*|*"	"*|*[\[\]\~\#\$\^\&\*\(\)\{\}\\\|\;\<\>\?]*)
@


1.8
log
@	* configure.ac: Adjust for loop syntax.
	* configure: Regenerate.
@
text
@d1166 2
a1167 2
    mpfr_t n; mpfr_init(n);
    mpfr_t x; mpfr_init(x);
d1169 2
d2615 5
d2627 1
@


1.7
log
@* configure.ac: Drop multiple occurrences of --enable-languages,
and fix its quoting.
* configure: Rebuilt.
@
text
@d92 2
a93 1
for ac_arg; do
@


1.6
log
@top level:
2007-02-17  Mark Mitchell  <mark@@codesourcery.com>
            Nathan Sidwell  <nathan@@codesourcery.com>
            Vladimir Prus  <vladimir@@codesourcery.com
            Joseph Myers  <joseph@@codesourcery.com>

	* configure.ac (TOPLEVEL_CONFIGURE_ARGUMENTS): Fix quoting.
	* configure: Regenerate.

bfd:
2007-02-17  Mark Mitchell  <mark@@codesourcery.com>
            Nathan Sidwell  <nathan@@codesourcery.com>
            Vladimir Prus  <vladimir@@codesourcery.com
            Joseph Myers  <joseph@@codesourcery.com>

	* configure.in (--with-pkgversion): New option.
	* configure: Regenerate.
	* Makefile.am (bfdver.h): Substitute for @@bfd_version_package@@.
	* Makefile.in: Regenerate.
	* version.h (BFD_VERSION_STRING): Define using
	@@bfd_version_package@@.

bfd/doc:
2007-02-17  Mark Mitchell  <mark@@codesourcery.com>
            Nathan Sidwell  <nathan@@codesourcery.com>
            Vladimir Prus  <vladimir@@codesourcery.com
            Joseph Myers  <joseph@@codesourcery.com>

	* Makefile.in: Regenerate.

binutils:
2007-02-17  Mark Mitchell  <mark@@codesourcery.com>
            Nathan Sidwell  <nathan@@codesourcery.com>
            Vladimir Prus  <vladimir@@codesourcery.com
            Joseph Myers  <joseph@@codesourcery.com>

	* configure.in (--with-bugurl): New option.
	* configure: Regenerate.
	* Makefile.am (REPORT_BUGS_TO): Define.
	(INCLUDES): Define REPORT_BUGS_TO.
	Regenerate dependencies.
	* Makefile.in: Regenerate.
	* doc/Makefile.in: Regenerate.
	* bucomm.h: Remove include of bin-bugs.h.
	* addr2line.c (usage): Don't print empty REPORT_BUGS_TO.
	* ar.c (usage): Pass s to list_supported_targets.  Don't print
	empty REPORT_BUGS_TO.
	* coffdump.c (show_usage): Don't print empty REPORT_BUGS_TO.
	* cxxfilt.c (usage): Print bug url when giving help.
	* dlltool.c (usage): Likewise.
	* dllwrap.c (usage): Likewise.
	* nlmconv.c (show_usage): Don't print empty REPORT_BUGS_TO.
	* nm.c (usage): Likewise.
	* objcopy.c (copy_usage, strip_usage): Likewise.
	* objdump.c (usage): Likewise.
	* readelf.c ((usage): Likewise. Add STREAM argument.  Adjust
	callers.
	* size.c (usage): Don't print empty REPORT_BUGS_TO.
	* srconv.c (show_usage): Likewise.
	* strings.c (usage): Likewise.
	* sysdymp.c (show_usage): Likewise.
	* windres.c (usage): Likewise.

gas:
2007-02-17  Mark Mitchell  <mark@@codesourcery.com>
            Nathan Sidwell  <nathan@@codesourcery.com>
            Vladimir Prus  <vladimir@@codesourcery.com
            Joseph Myers  <joseph@@codesourcery.com>

	* configure.in (--with-bugurl): New option.
	* configure: Regenerate.
	* dep-in.sed: Remove bin-bugs.h.
	* Makefile.am (REPORT_BUGS_TO): Define.
	(INCLUDES): Define REPORT_BUGS_TO.
	(DEP_INCLUDES): Likewise.
	($(OBJS)): No longer depend on bin-bugs.h.
	* Makefile.in: Regenerate.
	* doc/Makefile.in: Regenerate.
	* as.c (show_usage): Don't print empty REPORT_BUGS_TO.
	* as.h: Remove include of bin-bugs.h.

gprof:
2007-02-17  Mark Mitchell  <mark@@codesourcery.com>
            Nathan Sidwell  <nathan@@codesourcery.com>
            Vladimir Prus  <vladimir@@codesourcery.com
            Joseph Myers  <joseph@@codesourcery.com>

	* configure.in (--with-pkgversion, --with-bugurl): New options.
	* configure: Regenerate.
	* Makefile.am (PKGVERSION, REPORT_BUGS_TO): Define.
	(INCLUDES): Define PKGVERSION and REPORT_BUGS_TO.
	Regenerate dependencies.
	* Makefile.in: Regenerate.
	* gprof.c (usage): Don't print empty REPORT_BUGS_TO.
	(main): Include PKGVERSION in version output.
	* gprof.h: Remove include of bin-bugs.h.

include:
2007-02-17  Mark Mitchell  <mark@@codesourcery.com>
            Nathan Sidwell  <nathan@@codesourcery.com>
            Vladimir Prus  <vladimir@@codesourcery.com
            Joseph Myers  <joseph@@codesourcery.com>

	* bin-bugs.h: Remove.

ld:
2007-02-17  Mark Mitchell  <mark@@codesourcery.com>
            Nathan Sidwell  <nathan@@codesourcery.com>
            Vladimir Prus  <vladimir@@codesourcery.com
            Joseph Myers  <joseph@@codesourcery.com>

	* configure.in (--with-bugurl): New option.
	* configure: Regenerate.
	* Makefile.am (REPORT_BUGS_TO): Define.
	(INCLUDES): Define REPORT_BUGS_TO.
	Regenerate dependencies.
	* Makefile.in: Regenerate.
	* ld.h: Remove include of bin-bugs.h.
	* lexsup.c (help): Don't print empty REPORT_BUGS_TO.
@
text
@d1410 1
a1410 1
  ac_configure_args=`echo " $ac_configure_args" | sed -e 's/ --enable-languages=[[^ ]]*//' -e 's/$/ --enable-languages='"$enable_languages"/ `
@


1.5
log
@	* configure.ac (target_libraries): Move libgcc before libiberty.
	* configure: Regenerated.
@
text
@d1 2
a2 2
#   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
#   2000, 2001, 2002, 2003, 2004, 2005, 2006 Free Software Foundation, Inc.
d88 18
a105 8
# Export original configure arguments for use by sub-configures.  These
# will be expanded by make, so quote '$'.
tmp="$progname $@@"
sed -e 's,\$,$$,g' <<EOF_SED > conftestsed.out
$tmp
EOF_SED
TOPLEVEL_CONFIGURE_ARGUMENTS=`cat conftestsed.out`
rm -f conftestsed.out
@


1.4
log
@	PR bootstrap/30753
	* configure.ac: Remove obsolete build / host tests.  Use AC_PROG_CC
	unconditionally.  Use AC_PROG_CXX.  Use ACX_TOOL_DIRS to find $prefix.
	* configure: Regenerated.
@
text
@d161 2
a162 2
target_libraries="target-libiberty \
		target-libgcc \
@


1.3
log
@	PR bootstrap/30748
	* configure.ac: Correct syntax for Solaris ksh.
	* configure: Regenerated.
@
text
@a1032 7
  # If we are doing a Canadian Cross, in which the host and build systems
  # are not the same, we set reasonable default values for the tools.

  CC=${CC-${host_noncanonical}-gcc}
  CFLAGS=${CFLAGS-"-g -O2"}
  CXX=${CXX-${host_noncanonical}-c++}
  CXXFLAGS=${CXXFLAGS-"-g -O2"}
a1033 1

d1035 2
a1036 7
  # Set reasonable default values for some tools even if not Canadian.
  # Of course, these are different reasonable default values, originally
  # specified directly in the Makefile.
  # We don't export, so that autoconf can do its job.
  # Note that all these settings are above the fragment inclusion point
  # in Makefile.in, so can still be overridden by fragments.
  # This is all going to change when we autoconfiscate...
d1038 2
a1039 2
  CC_FOR_BUILD="\$(CC)"
  AC_PROG_CC
d1041 16
a1056 17
  # We must set the default linker to the linker used by gcc for the correct
  # operation of libtool.  If LD is not defined and we are using gcc, try to
  # set the LD default to the ld used by gcc.
  if test -z "$LD"; then
    if test "$GCC" = yes; then
      case $build in
      *-*-mingw*)
	gcc_prog_ld=`$CC -print-prog-name=ld 2>&1 | tr -d '\015'` ;;
      *)
	gcc_prog_ld=`$CC -print-prog-name=ld 2>&1` ;;
      esac
      case $gcc_prog_ld in
      # Accept absolute paths.
      [[\\/]* | [A-Za-z]:[\\/]*)]
        LD="$gcc_prog_ld" ;;
      esac
    fi
a1057 4

  CXX=${CXX-"c++"}
  CFLAGS=${CFLAGS-"-g"}
  CXXFLAGS=${CXXFLAGS-"-g -O2"}
d1563 3
d1585 1
a1585 4
    case "${exec_prefixoption}" in
    "") x=${prefix} ;;
    *) x=${exec_prefix} ;;
    esac
d1601 1
a1601 4
    case "${exec_prefixoption}" in
    "") x=${prefix} ;;
    *) x=${exec_prefix} ;;
    esac
@


1.2
log
@2007-02-09  Paolo Bonzini  <bonzini@@gnu.org>

	* Makefile.def: Sync with GCC.
	* Makefile.tpl: Sync with GCC.
	* Makefile.in: Regenerate.
	* configure: Regenerate.

	* config/acx.m4: Sync with GCC.
	* config/depstand.m4: Sync with GCC.
	* config/tls.m4: Sync with GCC.
@
text
@d2099 2
a2100 1
for ac_arg; do
@


1.1
log
@	* Makefile.tpl (build_alias, host_alias, target_alias): Use
	noncanonical equivalents.
	* configure.in: Rename to...
	* configure.ac: ...this.  Update AC_PREREQ.  Prevent error for
	AS_FOR_TARGET.  Set build_noncanonical, host_noncanonical, and
	target_noncanonical.  Use them.  Rewrite removal of configure
	arguments for autoconf 2.59.  Discard variable settings.  Force
	program_transform_name for native tools.

	* Makefile.in: Regenerated.
	* configure: Regenerated with autoconf 2.59.

	* src-release (DEVO_SUPPORT, do-proto-toplev): Expect configure.ac.

	* acx.m4 (ACX_CHECK_INSTALLED_TARGET_TOOL): Avoid AC_PATH_PROG
	with an empty path.
@
text
@a2327 3
esac

case $target in
d2600 1
a2600 1
[if test -d gcc && test x"`cat $srcdir/gcc/DEV-PHASE`" = xexperimental; then
@

