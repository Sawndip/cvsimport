head	1.14;
access;
symbols
	gdb_6_1-2004-04-05-release:1.13
	gdb_6_1-branch:1.13.0.8
	gdb_6_1-2004-03-01-gmt-branchpoint:1.13
	gdb_6_0-2003-10-04-release:1.13
	gdb_6_0-branch:1.13.0.6
	gdb_6_0-2003-06-23-branchpoint:1.13
	gdb_5_3-2002-12-12-release:1.13
	gdb_5_3-branch:1.13.0.4
	gdb_5_3-2002-09-04-branchpoint:1.13
	gdb_5_2_1-2002-07-23-release:1.13
	gdb_5_2-2002-04-29-release:1.13
	gdb_5_2-branch:1.13.0.2
	gdb_5_2-2002-03-03-branchpoint:1.13
	gdb_5_1_1-2002-01-24-release:1.3
	cygnus_cvs_20020108_pre:1.13
	gdb_5_1_0_1-2002-01-03-branch:1.3.0.6
	gdb_5_1_0_1-2002-01-03-branchpoint:1.3
	gdb_5_1-2001-11-21-release:1.3
	gdb_s390-2001-09-26-branch:1.3.0.4
	gdb_s390-2001-09-26-branchpoint:1.3
	LIBGUI_TCL_8_3:1.1.1.2
	NET:1.1.1
	gdb_5_1-2001-07-29-branch:1.3.0.2
	gdb_5_1-2001-07-29-branchpoint:1.3
	insight-precleanup-2001-01-01:1.2
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	insight-2000-02-04:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.14
date	2005.01.13.22.30.06;	author kseitz;	state dead;
branches;
next	1.13;

1.13
date	2001.10.28.16.22.24;	author cgf;	state Exp;
branches;
next	1.12;

1.12
date	2001.10.26.17.40.36;	author kseitz;	state Exp;
branches;
next	1.11;

1.11
date	2001.10.25.01.25.25;	author kseitz;	state Exp;
branches;
next	1.10;

1.10
date	2001.10.12.05.21.57;	author cgf;	state Exp;
branches;
next	1.9;

1.9
date	2001.09.08.22.34.45;	author irox;	state Exp;
branches;
next	1.8;

1.8
date	2001.09.08.22.32.04;	author irox;	state Exp;
branches;
next	1.7;

1.7
date	2001.08.13.17.53.52;	author kseitz;	state Exp;
branches;
next	1.6;

1.6
date	2001.08.06.22.20.17;	author mdejong;	state Exp;
branches;
next	1.5;

1.5
date	2001.08.04.00.02.59;	author mdejong;	state Exp;
branches;
next	1.4;

1.4
date	2001.08.02.21.48.17;	author mdejong;	state Exp;
branches;
next	1.3;

1.3
date	2001.04.10.20.08.25;	author cgf;	state Exp;
branches;
next	1.2;

1.2
date	2000.06.27.21.53.32;	author spolk;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.07.00.19.47;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.07.00.19.47;	author jsm;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2001.09.08.21.55.17;	author irox;	state Exp;
branches;
next	;


desc
@@


1.14
log
@        * configure.in: Rename to ...
        * configure.ac: ... this.
        * configure: Regenerate with autoconf 2.59.
@
text
@dnl Process this file with autoconf to produce configure.

AC_INIT(src/subcommand.h)
AM_INIT_AUTOMAKE(libgui, 0.0)
AM_CONFIG_HEADER(config.h)
AM_MAINTAINER_MODE
AC_CANONICAL_HOST
AC_PROG_CC
AC_EXEEXT
AC_OBJEXT
AC_ARG_ENABLE(install-libgui, \
  [  --enable-install-libgui Install libgui.a and library header files])
AM_CONDITIONAL(CROSS_COMPILING, test x$cross_compiling = xyes)
AM_CONDITIONAL(INSTALL_LIBGUI, test x$enable_install_libgui = xyes)
AC_CHECK_TOOL(RANLIB, ranlib, :)
AC_CHECK_TOOL(AR, ar, :)
AC_CHECK_PROG(ITCL_SH, itcl_sh, itcl_sh,
	[\$\$here/\$(top_builddir)/../itcl/itcl/unix/itcl_sh\$(EXEEXT)])

AC_FUNC_ALLOCA
AC_HAVE_HEADERS(stddef.h stdlib.h getopt.h unistd.h fcntl.h sys/file.h sys/wait.h string.h strings.h)
AC_CHECK_FUNCS(raise)

AC_ARG_ENABLE(ide, [  --enable-ide            Enable IDE support],
[case "${enableval}" in
  yes) ide=yes ;;
  no)  ide=no ;;
  *)   AC_MSG_ERROR(bad value ${enableval} for enable-ide option) ;;
esac],
[ide=no])
AM_CONDITIONAL(IDE_ENABLED, test x$ide = xyes)
if test x$ide = xyes; then
  AC_DEFINE(IDE_ENABLED)
fi

# If we have random, assume we have srandom.  If we have drand48,
# assume we have srand48.  If we have rand, assume we have srand.
AC_CHECK_FUNCS(random drand48 rand, break)

dnl Tcl ensures that strncasecmp is provided everywhere.  But in some
dnl situations we might need to declare it.  We check for that case
dnl here.
AC_EGREP_CPP(strncasecmp, [#include <string.h>],
  AC_DEFINE(HAVE_STRNCASECMP_DECL))

# Tcl8.1 requires writable strings for gcc

if test "$GCC" = "yes"; then
   LIBGUI_CFLAGS=-fwritable-strings
else
   LIBGUI_CFLAGS=
fi

AC_CACHE_CHECK([for cygwin32], ide_cv_os_cygwin32,
[AC_EGREP_CPP(lose, [
#ifdef __CYGWIN32__
lose
#endif],[ide_cv_os_cygwin32=yes],[ide_cv_os_cygwin32=no])])
ac_win_build="no"
if test x$ide_cv_os_cygwin32 = xyes; then
  ac_win_build="yes"
fi

case "${host}" in
*-*-cygwin*)
        touch ac$$.c
        if ${CC} -c -mwin32 ac$$.c >/dev/null 2>&1; then
            case "$LIBGUI_CFLAGS" in
                *-mwin32*) ;;
                *) LIBGUI_CFLAGS="-mwin32 $LIBGUI_CFLAGS" ;;
            esac
        fi
        rm -f ac$$.o ac$$.c
        ;;
esac
case "${host}" in
*-*-cygwin*)
	LIBGUI_CFLAGS="-DWIN32 $LIBGUI_CFLAGS" ;;
esac
AC_SUBST(LIBGUI_CFLAGS) 

tmp="`cd $srcdir/library; pwd`"
if test x"$ac_cv_prog_CC" = xcl ; then
  tmp2="`cygpath --windows $tmp`"
  LIBGUI_LIBRARY_DIR="`echo $tmp2 | sed -e s#\\\\\\\\#/#g`"
else
  LIBGUI_LIBRARY_DIR=$tmp
fi
AC_SUBST(LIBGUI_LIBRARY_DIR)

# Find the init.tcl file.

AC_MSG_CHECKING(for init.tcl)
AC_CACHE_VAL(ac_cv_c_tcl_libdir,[
dnl currently, only check the source tree
if test -f $srcdir/../tcl/library/init.tcl ; then
  ac_cv_c_tcl_libdir=`cd $srcdir/../tcl/library; pwd`
elif test -f $srcdir/../tcl8.1/library/init.tcl; then
  ac_cv_c_tcl_libdir=`cd $srcdir/../tcl8.1/library; pwd`
fi
])
AC_MSG_RESULT(${ac_cv_c_tcl_libdir})

if test x"$ac_cv_prog_CC" = xcl; then
  tmp2="`cygpath --windows $ac_cv_c_tcl_libdir`"
  TCL_LIBRARY="`echo $tmp2 | sed -e s#\\\\\\\\#/#g`"
else
  TCL_LIBRARY=$ac_cv_c_tcl_libdir
fi
AC_SUBST(TCL_LIBRARY)

# Check for Tcl and Tk.
CYG_AC_PATH_TCLCONFIG
CYG_AC_LOAD_TCLCONFIG
CYG_AC_PATH_TKCONFIG
CYG_AC_LOAD_TKCONFIG
CYG_AC_PATH_TCLH
# FIXME: consider only doing this if --with-x given.
CYG_AC_PATH_TKH

AC_SUBST(TCL_DEFS)
AC_SUBST(TK_DEFS)
AC_SUBST(TCLHDIR)
AC_SUBST(TKHDIR)
AC_SUBST(TK_XINCLUDES)
AC_SUBST(TCL_LIBS)
AC_SUBST(TK_BUILD_LIB_SPEC)
AC_SUBST(TCL_BUILD_LIB_SPEC)
AC_SUBST(TK_LIBS)

AM_CONDITIONAL(TCL_SHARED, test x$TCL_SHARED_BUILD = x1)

AC_SUBST(RPATH_ENVVAR)

AC_OUTPUT([Makefile library/Makefile src/Makefile])



@


1.13
log
@* configure.in: Modify 2001-10-12 change to check for cygwin host rather than
cygwin target.
* configure: Regenerate.
@
text
@@


1.12
log
@	* configure.in (ac_win_build): Actually want "-DWIN32" with
	cygwin hosts, not just cygwin targets.
	* configure: Regenerate.
@
text
@d64 1
a64 1
case "${target}" in
@


1.11
log
@	* configure.in (ac_win_build): Put "-DWIN32" back into LIBGUI_CFLAGS.
	* configure: Regenerate.
@
text
@a65 1
	LIBGUI_CFLAGS="-DWIN32 $LIBGUI_CFLAGS"
d75 4
@


1.10
log
@* win/configure.in: Add detection for -mwin32 option requirement under cygwin.
* win/configure: Regenerate.
@
text
@d66 1
@


1.9
log
@touched all files to ease next import
@
text
@a52 1
AC_SUBST(LIBGUI_CFLAGS) 
d63 14
@


1.8
log
@Libgui Tcl/tk upgrade merge
@
text
@@


1.7
log
@	Update tkTable to version 2.7:
	* src/tkTableCmds.c, src/tkTable.tcl.h, src/tkTableCellSort.c,
	src/tkTableEdit.c, src/tkTableInitScript.h, src/tkTablePs.c,
	src/tkTableUtil.c, doc/tkTable.html: New files.
	* src/tkTable.c, src/tkTable.h, src/TkTable.tcl, src/tkTableCell.c,
	src/tkTableTag.c, src/tkTableWin.c, src/tkTable_version.in: Update to
	version 2.7.
	* configure.in: If compiling with cygwin, we need to have
	WIN32 defined to build tkTable modules.
	* configure: Regenerate.
	* src/Makefile.am: Add new tkTable files and update build rules
	for new version of tkTable.
	* src/Makefile.in: Regenerate.
@
text
@d17 2
d53 1
a64 4
if test x"$ac_win_build" = xyes; then
  LIBGUI_CFLAGS="-DWIN32 $LIBGUI_CFLAGS"
fi

a102 2
CYG_AC_PATH_ITCLCONFIG
CYG_AC_LOAD_ITCLCONFIG
a103 16
case ${host} in
*cygwin*)
        touch ac$$.c
        if ${CC} -c -mwin32 ac$$.c >/dev/null 2>&1; then
            case "$LIBGUI_CFLAGS" in
                *-mwin32*) ;;
                *) LIBGUI_CFLAGS="-mwin32 $LIBGUI_CFLAGS" ;;
            esac
        fi
        rm -f ac$$.o ac$$.c
	;;
*)
	;;
esac

AC_SUBST(LIBGUI_CFLAGS) 
@


1.6
log
@	* Makefile.in: Regen.
	* configure: Regen.
	* configure.in: Remove unused ITCL_DIR variable.
	* library/Makefile.in: Regen.
	* src/Makefile.in: Regen.
@
text
@d62 4
@


1.5
log
@	* configure: Regen.
	* configure.in: Check for cross AR using the
	AC_CHECK_TOOL macro to fix cross compile. Use
	AC_CHECK_TOOL instead of AC_PROG_RANLIB for
	ranlib. The ranlib change is not required
	but it is more correct. Move the call to
	AC_CANONICAL_HOST up in the file.
@
text
@a102 1
dnl what is the path to itclsh?
a104 1
	ITCL_DIR=itcl/itcl/win
d114 2
a115 1
*)		ITCL_DIR=itcl/itcl/unix ;;
a127 1
AC_SUBST(ITCL_DIR)
@


1.4
log
@	* config.h.in: Regen.
	* configure: Regen.
	* configure.in: Don't check for strdup since it
	is no longer used in libgui.
	* src/tclhelp.c (help_initialize_command): Replace
	use of strdup with calls to malloc and strcpy.
@
text
@d7 1
d15 2
a16 1
AC_PROG_RANLIB
a103 1
AC_CANONICAL_HOST
@


1.3
log
@Fixes for newer cygwin gccs.
Use modern Cygwin conditional.
@
text
@d18 1
a18 1
AC_CHECK_FUNCS(raise strdup)
@


1.2
log
@2000-06-22  Mo DeJong  <mdejong@@redhat.com>

	* library/tree.tcl: Remove use of watch
	command. Add check to see if toplevel
	exists to avoid error.

2000-06-22  Mo DeJong  <mdejong@@redhat.com>

	* src/tkGraphCanvas.c (GetEdgeNodes): Fixed
	crash in ckfree caused by call to strdup that
	was later freed using ckfree.

2000-06-19  Syd Polk  <spolk@@redhat.com>

	* configure.in: Use CYG_AC_PATH_ITCLCONFIG and CYG_AC_LOAD_ITCLCONFIG
	instead of using exising itclsh.
	* aclocal.m4: Regenerated with new ../config/acinclude.m4.
	* configure: Regenerate.
	* Makefile.in library/Makefile.in src/Makefile.in: Regenerate.
@
text
@a48 1
AC_SUBST(LIBGUI_CFLAGS) 
d104 11
a114 1
*cygwin*)	ITCL_DIR=itcl/itcl/win  ;;
d118 1
@


1.1
log
@Initial revision
@
text
@a14 2
AC_CHECK_PROG(ITCL_SH, itcl_sh, itcl_sh,
	[\$\$here/\$(top_builddir)/../itcl/itcl/unix/itcl_sh\$(EXEEXT)])
d99 2
@


1.1.1.1
log
@import insight-2000-02-04 snapshot (2nd try)
@
text
@@


1.1.1.2
log
@libgui import for Tcl/Tk8.3 upgrade
@
text
@a6 1
AC_CANONICAL_HOST
d14 1
a14 2
AC_CHECK_TOOL(RANLIB, ranlib, :)
AC_CHECK_TOOL(AR, ar, :)
d20 1
a20 1
AC_CHECK_FUNCS(raise)
d102 7
d118 1
@

