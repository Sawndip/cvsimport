head	1.3;
access;
symbols
	insight_7_6-2013-04-10-branchpoint:1.3
	gdb_7_6-branch:1.3.0.12
	gdb_7_5-branch:1.3.0.10
	gdb_7_4-branch:1.3.0.8
	gdb_7_3-branch:1.3.0.6
	gdb_7_1-branch:1.3.0.4
	gdb_7_0-branch:1.3.0.2
	arc-sim-20090309:1.2
	arc-insight_6_8-branch:1.2.0.20
	arc-insight_6_8-branchpoint:1.2
	insight_6_8-branch:1.2.0.18
	insight_6_8-branchpoint:1.2
	gdb_6_8-branch:1.2.0.16
	insight_6_6-20070208-release:1.2
	gdb_6_6-branch:1.2.0.14
	gdb_6_6-2006-11-15-branchpoint:1.2
	insight_6_5-20061003-release:1.2
	gdb_6_5-branch:1.2.0.12
	gdb_6_5-2006-05-14-branchpoint:1.2
	gdb_6_4-branch:1.2.0.10
	gdb_6_4-2005-11-01-branchpoint:1.2
	gdb_6_1-2004-04-05-release:1.2
	gdb_6_1-branch:1.2.0.8
	gdb_6_1-2004-03-01-gmt-branchpoint:1.2
	gdb_6_0-2003-10-04-release:1.2
	gdb_6_0-branch:1.2.0.6
	gdb_6_0-2003-06-23-branchpoint:1.2
	gdb_5_3-2002-12-12-release:1.2
	gdb_5_3-branch:1.2.0.4
	gdb_5_3-2002-09-04-branchpoint:1.2
	gdb_5_2_1-2002-07-23-release:1.2
	gdb_5_2-2002-04-29-release:1.2
	gdb_5_2-branch:1.2.0.2
	gdb_5_2-2002-03-03-branchpoint:1.2
	gdb_5_1_1-2002-01-24-release:1.1.1.1
	cygnus_cvs_20020108_pre:1.2
	gdb_5_1_0_1-2002-01-03-branch:1.1.1.1.0.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.1.1.1
	gdb_5_1-2001-11-21-release:1.1.1.1
	gdb_s390-2001-09-26-branch:1.1.1.1.0.6
	gdb_s390-2001-09-26-branchpoint:1.1.1.1
	LIBGUI_TCL_8_3:1.1.1.1
	NET:1.1.1
	gdb_5_1-2001-07-29-branch:1.1.1.1.0.4
	gdb_5_1-2001-07-29-branchpoint:1.1.1.1
	insight-precleanup-2001-01-01:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	insight-2000-02-04:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.3
date	2008.07.22.20.11.35;	author kseitz;	state Exp;
branches;
next	1.2;

1.2
date	2001.09.08.22.34.46;	author irox;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.07.00.19.47;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.07.00.19.47;	author jsm;	state Exp;
branches;
next	;


desc
@@


1.3
log
@        * tcl.m4: New file.
        * acinclude.m4: Include tcl.m4 instead of ../config/acinclude.m4
        * aclocal.m4: Regenerated.
        * configure.ac: Do not check for ITCL_SH.
        Use SC_PATH_TCLCONFIG, SC_PATH_TKCONFIG, SC_LOAD_TCLCONFIG, and
        SC_LOAD_TKCONFIG to find Tcl and Tk.
        Add some logic for when using in-tree Tcl/Tk.
        Change substitutes for TCL_BUILD_LIB_SPEC, TK_BUILD_LIB_SPEC, and
        TCLHDIR to accommodate using system-supplied Tcl and Tk.
        * configure: Regenerated.
        * Makefile.in: Regenerated.
        * library/Makefile.am: Replace ITCL_SH with TCLSH.
        Remove TCL_SHARED rules.
        (tclIndex): Update build rules.
        * library/Makefile.in: Regenerate.
        * library/balloon.tcl: Update for Itcl 3.2/3.3.
        * library/cframe.tcl: Likewise.
        * library/lframe.tcl: Likewise.
        * library/multibox.tcl: Likewise.
        * library/sendpr.tcl: Likewise.
        * library/ventry.tcl: Likewise.
        * library/wframe.tcl: Likewise.
        * src/Makefile.am (INCLUDES): Update.
        * src/Makefile.in: Regenerate.
        * src/paths.c (init_script): Accommodate builddir != srcdir.
@
text
@# ventry.tcl - Entry with validation
# Copyright (C) 1997,2008 Red Hat, Inc.
# Written by Tom Tromey <tromey@@cygnus.com>.

itcl::class Validated_entry {
  # The validation command.  It is passed the contents of the entry.
  # It should throw an error if there is a problem; the error text
  # will be displayed to the user.
  public variable command {}

  constructor {} {
    upvar \#0 $this state

    # The standard widget-making trick.
    set class [$this info class]
    set hull [namespace tail $this]
    set old_name $this
    ::rename $this $this-tmp-
    ::frame $hull -class $class -borderwidth 0
    ::rename $hull $old_name-win-
    ::rename $this $old_name

    ::set ${this}(value) ""
    ::entry [namespace tail $this].entry -textvariable ${this}(value)
    pack [namespace tail $this].entry -expand 1 -fill both

    bind [namespace tail $this].entry <Map> [list $this _map]
    bind [namespace tail $this].entry <Unmap> [list $this _unmap]
    bind [namespace tail $this].entry <Destroy> \
	[itcl::code itcl::delete object $this]
    # We never want the focus on the frame.
    bind [namespace tail $this] <FocusIn> [list focus [namespace tail $this].entry]

    # This window is used when the user enters a bad name for the new
    # executable.  The color here is "plum3".  We use a toplevel here
    # both to get a nice black border and because a frame would be
    # clipped by its parents.
    toplevel [namespace tail $this].badname -borderwidth 1 -background black -relief flat
    wm withdraw [namespace tail $this].badname
    wm overrideredirect [namespace tail $this].badname 1

    ::set state(message) ""

    # FIXME: -textvariable didn't work; I suspect itcl.
    ::label [namespace tail $this].badname.text -anchor w -justify left \
      -background \#cdd29687cdd2 ;# -textvariable ${this}(message)
    pack [namespace tail $this].badname.text -expand 1 -fill both

    # Trace the entry contents.
    uplevel \#0 [list trace variable ${this}(value) w [list $this _trace]]
  }

  destructor {
    upvar \#0 $this state
    catch {destroy $this}
    uplevel \#0 [list trace vdelete ${this}(value) w [list $this _trace]]
    unset state
  }

  # Return 1 if we're in the error state, 0 otherwise.
  method is_error {} {
    upvar \#0 $this state
    return [expr {$state(message) != ""}]
  }

  # Return error text.
  method error_text {} {
    upvar \#0 $this state
    return $state(message)
  }

  # Some methods to forward messages to the entry.  Add more as
  # required.

  # FIXME: itcl 1.5 won't let us have a `delete' method.  Sigh.
  method delete_hack {args} {
    return [eval [namespace tail $this].entry delete $args]
  }

  method get {} {
    return [[namespace tail $this].entry get]
  }

  method insert {index string} {
    return [[namespace tail $this].entry insert $index $string]
  }


  # This is run to display the label.  Private method.
  method _display {} {
    # FIXME: place above if it would go offscreen.
    set y [expr {[winfo rooty [namespace tail $this].entry] + [winfo height [namespace tail $this].entry] + 1}]
    set x [expr {round ([winfo rootx [namespace tail $this].entry]
			+ 0.12 * [winfo width [namespace tail $this].entry])}]
    wm positionfrom [namespace tail $this].badname user
    wm geometry [namespace tail $this].badname +$x+$y
    # Workaround for Tk 8.0b2 bug on NT.
    update
    wm deiconify [namespace tail $this].badname
    raise [namespace tail $this].badname
  }

  # This is run when the entry widget is mapped.  If we have an error,
  # map our error label.  Private method.
  method _map {} {
    if {[is_error]} then {
      _display
    }
  }

  # This is run when the entry widget is unmapped.  Private method.
  method _unmap {} {
    wm withdraw [namespace tail $this].badname
  }

  # This is called when the entry contents change.  Private method.
  method _trace {args} {
    upvar \#0 $this state

    if {$command != ""} then {
      set cmd $command
      lappend cmd $state(value)
      set cmd [list uplevel \#0 $cmd]
    }
    if {[info exists cmd] && [catch $cmd msg]} then {
      # FIXME: for some reason, the -textvariable on the label doesn't
      # work.  I suspect itcl.
      set state(message) $msg
      [namespace tail $this].badname.text configure -text $msg
      _display
    } else {
      set state(message) ""
      wm withdraw [namespace tail $this].badname
    }
  }
}
@


1.2
log
@touched all files to ease next import
@
text
@d2 1
a2 1
# Copyright (C) 1997 Cygnus Solutions.
d5 1
a5 1
itcl_class Validated_entry {
d9 1
a9 1
  public command {}
d11 1
a11 1
  constructor {config} {
d29 2
a30 1
    bind [namespace tail $this].entry <Destroy> [list $this delete]
a59 2
  method configure {config} {}

@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import insight-2000-02-04 snapshot (2nd try)
@
text
@@
