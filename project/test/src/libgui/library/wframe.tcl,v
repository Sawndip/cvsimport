head	1.3;
access;
symbols
	insight_7_6-2013-04-10-branchpoint:1.3
	gdb_7_6-branch:1.3.0.12
	gdb_7_5-branch:1.3.0.10
	gdb_7_4-branch:1.3.0.8
	gdb_7_3-branch:1.3.0.6
	gdb_7_1-branch:1.3.0.4
	gdb_7_0-branch:1.3.0.2
	arc-sim-20090309:1.2
	arc-insight_6_8-branch:1.2.0.20
	arc-insight_6_8-branchpoint:1.2
	insight_6_8-branch:1.2.0.18
	insight_6_8-branchpoint:1.2
	gdb_6_8-branch:1.2.0.16
	insight_6_6-20070208-release:1.2
	gdb_6_6-branch:1.2.0.14
	gdb_6_6-2006-11-15-branchpoint:1.2
	insight_6_5-20061003-release:1.2
	gdb_6_5-branch:1.2.0.12
	gdb_6_5-2006-05-14-branchpoint:1.2
	gdb_6_4-branch:1.2.0.10
	gdb_6_4-2005-11-01-branchpoint:1.2
	gdb_6_1-2004-04-05-release:1.2
	gdb_6_1-branch:1.2.0.8
	gdb_6_1-2004-03-01-gmt-branchpoint:1.2
	gdb_6_0-2003-10-04-release:1.2
	gdb_6_0-branch:1.2.0.6
	gdb_6_0-2003-06-23-branchpoint:1.2
	gdb_5_3-2002-12-12-release:1.2
	gdb_5_3-branch:1.2.0.4
	gdb_5_3-2002-09-04-branchpoint:1.2
	gdb_5_2_1-2002-07-23-release:1.2
	gdb_5_2-2002-04-29-release:1.2
	gdb_5_2-branch:1.2.0.2
	gdb_5_2-2002-03-03-branchpoint:1.2
	gdb_5_1_1-2002-01-24-release:1.1.1.1
	cygnus_cvs_20020108_pre:1.2
	gdb_5_1_0_1-2002-01-03-branch:1.1.1.1.0.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.1.1.1
	gdb_5_1-2001-11-21-release:1.1.1.1
	gdb_s390-2001-09-26-branch:1.1.1.1.0.6
	gdb_s390-2001-09-26-branchpoint:1.1.1.1
	LIBGUI_TCL_8_3:1.1.1.1
	NET:1.1.1
	gdb_5_1-2001-07-29-branch:1.1.1.1.0.4
	gdb_5_1-2001-07-29-branchpoint:1.1.1.1
	insight-precleanup-2001-01-01:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	insight-2000-02-04:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.3
date	2008.07.22.20.11.35;	author kseitz;	state Exp;
branches;
next	1.2;

1.2
date	2001.09.08.22.34.46;	author irox;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.07.00.19.47;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.07.00.19.47;	author jsm;	state Exp;
branches;
next	;


desc
@@


1.3
log
@        * tcl.m4: New file.
        * acinclude.m4: Include tcl.m4 instead of ../config/acinclude.m4
        * aclocal.m4: Regenerated.
        * configure.ac: Do not check for ITCL_SH.
        Use SC_PATH_TCLCONFIG, SC_PATH_TKCONFIG, SC_LOAD_TCLCONFIG, and
        SC_LOAD_TKCONFIG to find Tcl and Tk.
        Add some logic for when using in-tree Tcl/Tk.
        Change substitutes for TCL_BUILD_LIB_SPEC, TK_BUILD_LIB_SPEC, and
        TCLHDIR to accommodate using system-supplied Tcl and Tk.
        * configure: Regenerated.
        * Makefile.in: Regenerated.
        * library/Makefile.am: Replace ITCL_SH with TCLSH.
        Remove TCL_SHARED rules.
        (tclIndex): Update build rules.
        * library/Makefile.in: Regenerate.
        * library/balloon.tcl: Update for Itcl 3.2/3.3.
        * library/cframe.tcl: Likewise.
        * library/lframe.tcl: Likewise.
        * library/multibox.tcl: Likewise.
        * library/sendpr.tcl: Likewise.
        * library/ventry.tcl: Likewise.
        * library/wframe.tcl: Likewise.
        * src/Makefile.am (INCLUDES): Update.
        * src/Makefile.in: Regenerate.
        * src/paths.c (init_script): Accommodate builddir != srcdir.
@
text
@# wframe.tcl - Frame with a widget on its border.
# Copyright (C) 1997,2008 Red Hat, Inc.
# Written by Tom Tromey <tromey@@cygnus.com>.

itcl::class Widgetframe {
  # Where to put the widget.  For now, we don't support many anchors.
  # Augment as you like.
  public variable anchor nw {
    if {$anchor != "nw" && $anchor != "n"} then {
      error "anchors nw and n are the only ones supported"
    }
    _layout
  }

  # The name of the widget to put on the frame.  This is set by some
  # subclass calling the _add method.  Private variable.
  protected variable _widget {}

  constructor {} {
    # The standard widget-making trick.
    set class [$this info class]
    set hull [namespace tail $this]
    set old_name $this
    ::rename $this $this-tmp-
    ::frame $hull -class $class -relief flat -borderwidth 0
    ::rename $hull $old_name-win-
    ::rename $this $old_name

    frame [namespace tail $this].iframe -relief groove -borderwidth 2
    grid [namespace tail $this].iframe -row 1 -sticky news
    grid rowconfigure  [namespace tail $this] 1 -weight 1
    grid columnconfigure  [namespace tail $this] 0 -weight 1

    # Make an internal frame so that user stuff isn't obscured.  Note
    # that we can't use the placer, because it doesn't set the
    # geometry of the parent.
    frame [namespace tail $this].iframe.frame -borderwidth 4 -relief flat
    grid [namespace tail $this].iframe.frame -row 1 -sticky news
    grid rowconfigure [namespace tail $this].iframe 1 -weight 1
    grid columnconfigure [namespace tail $this].iframe 0 -weight 1

    bind [namespace tail $this].iframe <Destroy> \
	[itcl::code itcl::delete object $this]
  }

  destructor {
    catch {destroy $this}
  }

  # Return name of internal frame.
  method get_frame {} {
    return [namespace tail $this].iframe.frame
  }

  # Name a certain widget to be put on the frame.  This should be
  # called by some subclass after making the widget.  Protected
  # method.
  method _add {widget} {
    set _widget $widget
    set height [expr {int ([winfo reqheight $_widget] / 2)}]
    grid rowconfigure  [namespace tail $this] 0 -minsize $height -weight 0
    grid rowconfigure [namespace tail $this].iframe 0 -minsize $height -weight 0
    _layout
  }

  # Re-layout according to the anchor.  Private method.
  method _layout {} {
    if {$_widget == "" || ! [winfo exists $_widget]} then {
      return
    }

    switch -- $anchor {
      n {
	# Put the label over the border, in the center.
	place $_widget -in [namespace tail $this].iframe -relx 0.5 -rely 0 -y -2 \
	  -anchor center
      }
      nw {
	# Put the label over the border, at the top left.
	place $_widget -in [namespace tail $this].iframe -relx 0 -x 6 -rely 0 -y -2 \
	  -anchor w
      }
      default {
	error "unsupported anchor \"$anchor\""
      }
    }
  }
}
@


1.2
log
@touched all files to ease next import
@
text
@d2 1
a2 1
# Copyright (C) 1997 Cygnus Solutions.
d5 1
a5 1
itcl_class Widgetframe {
d8 1
a8 1
  public anchor nw {
d17 1
a17 1
  protected _widget {}
d19 1
a19 1
  constructor {config} {
d42 2
a43 1
    bind [namespace tail $this].iframe <Destroy> [list $this delete]
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import insight-2000-02-04 snapshot (2nd try)
@
text
@@
