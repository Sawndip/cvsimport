head	1.3;
access;
symbols
	msnyder-fork-checkpoint-branch:1.1.0.2
	msnyder-fork-checkpoint-branchpoint:1.1;
locks; strict;
comment	@ * @;


1.3
date	2009.12.01.00.27.09;	author kevinb;	state Exp;
branches;
next	1.2;

1.2
date	2005.12.07.17.51.48;	author kevinb;	state Exp;
branches;
next	1.1;

1.1
date	2005.11.08.21.58.36;	author kevinb;	state Exp;
branches;
next	;


desc
@@


1.3
log
@	* diagnostics.h, diagnostics.c (print_sigint_message): New function.
	* linux-target.c (linux_process_rcmd): Add monitor commands
	"interrupt-with-SIGSTOP and interrupt-with-SIGINT".
	* server.h (struct child_process): Add new field
	interrupt_with_SIGSTOP.
	* thread-db.c (thread_db_break_program): Interrupt using either
	SIGSTOP or SIGINT depending upon user's preference.
@
text
@/* diagnostics.h - Functions and variables used in RDA diagnostics.

   Copyright 2005 Red Hat, Inc.

   This file is part of RDA, the Red Hat Debug Agent (and library).

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.
   
   Alternative licenses for RDA may be arranged by contacting Red Hat,
   Inc.  */

/* When non-zero, print thread-db related diagnostic messages.  */
extern int thread_db_noisy;

/* When non-zero, print lwp pool related diagnostic messages.  */
extern int debug_lwp_pool;

/* Fetch the PC value for a given pid.  */
struct gdbserv;
extern unsigned long debug_get_pc (struct gdbserv *serv, pid_t pid);

/* Output an "O" packet.  */
void output_O_packet (struct gdbserv *serv, char *message);

/* Print out a helpful message regarding SIGSTOP to the GDB console using
   an "O" packet.  This message will only be printed at most once per
   session.  */
void print_sigstop_message (struct gdbserv *serv);

/* Print out a helpful message regarding SIGINT to the GDB console using
   an "O" packet.  This message will only be printed at most once per
   session.  */
void print_sigint_message (struct gdbserv *serv);
@


1.2
log
@	* Makefile.am (EXTRA_rda_SOURCES): Add diagnostics.c.
	* configure.in (TARGET_MODULES): Add diagnostics.o.
	* Makefile.in, configure: Regenerate.
	* diagnostics.c: New file.
	* diagnostics.h (output_O_packet, print_sigstop_message): New
	functions.
	* ptrace-target.c (diagnostics.h): Include.
	(ptrace_break_program): Call print_sigstop_message().
	* thread_db.c (thread_db_break_program): Likewise.
@
text
@d42 5
@


1.1
log
@Add diagnostic messages.
@
text
@d34 8
@

