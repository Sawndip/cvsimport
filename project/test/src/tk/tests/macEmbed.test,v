head	1.5;
access;
symbols
	sid-snapshot-20180601:1.5
	sid-snapshot-20180501:1.5
	sid-snapshot-20180401:1.5
	sid-snapshot-20180301:1.5
	sid-snapshot-20180201:1.5
	sid-snapshot-20180101:1.5
	sid-snapshot-20171201:1.5
	sid-snapshot-20171101:1.5
	sid-snapshot-20171001:1.5
	sid-snapshot-20170901:1.5
	sid-snapshot-20170801:1.5
	sid-snapshot-20170701:1.5
	sid-snapshot-20170601:1.5
	sid-snapshot-20170501:1.5
	sid-snapshot-20170401:1.5
	sid-snapshot-20170301:1.5
	sid-snapshot-20170201:1.5
	sid-snapshot-20170101:1.5
	sid-snapshot-20161201:1.5
	sid-snapshot-20161101:1.5
	sid-snapshot-20160901:1.5
	sid-snapshot-20160801:1.5
	sid-snapshot-20160701:1.5
	sid-snapshot-20160601:1.5
	sid-snapshot-20160501:1.5
	sid-snapshot-20160401:1.5
	sid-snapshot-20160301:1.5
	sid-snapshot-20160201:1.5
	sid-snapshot-20160101:1.5
	sid-snapshot-20151201:1.5
	sid-snapshot-20151101:1.5
	sid-snapshot-20151001:1.5
	sid-snapshot-20150901:1.5
	sid-snapshot-20150801:1.5
	sid-snapshot-20150701:1.5
	sid-snapshot-20150601:1.5
	sid-snapshot-20150501:1.5
	sid-snapshot-20150401:1.5
	sid-snapshot-20150301:1.5
	sid-snapshot-20150201:1.5
	sid-snapshot-20150101:1.5
	sid-snapshot-20141201:1.5
	sid-snapshot-20141101:1.5
	sid-snapshot-20141001:1.5
	sid-snapshot-20140901:1.5
	sid-snapshot-20140801:1.5
	sid-snapshot-20140701:1.5
	sid-snapshot-20140601:1.5
	sid-snapshot-20140501:1.5
	sid-snapshot-20140401:1.5
	sid-snapshot-20140301:1.5
	sid-snapshot-20140201:1.5
	sid-snapshot-20140101:1.5
	sid-snapshot-20131201:1.5
	sid-snapshot-20131101:1.5
	sid-snapshot-20131001:1.5
	sid-snapshot-20130901:1.5
	sid-snapshot-20130801:1.5
	sid-snapshot-20130701:1.5
	sid-snapshot-20130601:1.5
	insight_7_6-2013-04-10-branchpoint:1.5
	gdb_7_6-branch:1.5.0.28
	sid-snapshot-20130501:1.5
	sid-snapshot-20130401:1.5
	sid-snapshot-20130301:1.5
	sid-snapshot-20130201:1.5
	sid-snapshot-20130101:1.5
	sid-snapshot-20121201:1.5
	sid-snapshot-20121101:1.5
	sid-snapshot-20121001:1.5
	sid-snapshot-20120901:1.5
	gdb_7_5-branch:1.5.0.26
	sid-snapshot-20120801:1.5
	sid-snapshot-20120701:1.5
	sid-snapshot-20120601:1.5
	sid-snapshot-20120501:1.5
	sid-snapshot-20120401:1.5
	gdb_7_4-branch:1.5.0.24
	sid-snapshot-20120301:1.5
	sid-snapshot-20120201:1.5
	sid-snapshot-20120101:1.5
	sid-snapshot-20111201:1.5
	sid-snapshot-20111101:1.5
	sid-snapshot-20111001:1.5
	sid-snapshot-20110901:1.5
	gdb_7_3-branch:1.5.0.22
	sid-snapshot-20110801:1.5
	sid-snapshot-20110701:1.5
	sid-snapshot-20110601:1.5
	sid-snapshot-20110501:1.5
	sid-snapshot-20110401:1.5
	sid-snapshot-20110301:1.5
	sid-snapshot-20110201:1.5
	sid-snapshot-20110101:1.5
	sid-snapshot-20101201:1.5
	sid-snapshot-20101101:1.5
	sid-snapshot-20101001:1.5
	sid-snapshot-20100901:1.5
	sid-snapshot-20100801:1.5
	sid-snapshot-20100701:1.5
	sid-snapshot-20100601:1.5
	sid-snapshot-20100501:1.5
	sid-snapshot-20100401:1.5
	sid-snapshot-20100301:1.5
	gdb_7_1-branch:1.5.0.20
	gdb_7_0-branch:1.5.0.18
	sid-snapshot-20100201:1.5
	sid-snapshot-20100101:1.5
	sid-snapshot-20091201:1.5
	sid-snapshot-20091101:1.5
	sid-snapshot-20091001:1.5
	arc-sim-20090309:1.5
	sid-snapshot-20090901:1.5
	sid-snapshot-20090801:1.5
	sid-snapshot-20090701:1.5
	sid-snapshot-20090601:1.5
	sid-snapshot-20090501:1.5
	kevinb-pre-tk8_5_7_merge:1.5
	sid-snapshot-20090401:1.5
	arc-insight_6_8-branch:1.5.0.16
	arc-insight_6_8-branchpoint:1.5
	insight_6_8-branch:1.5.0.14
	insight_6_8-branchpoint:1.5
	sid-snapshot-20090301:1.5
	sid-snapshot-20090201:1.5
	sid-snapshot-20090101:1.5
	sid-snapshot-20081201:1.5
	sid-snapshot-20081101:1.5
	sid-snapshot-20081001:1.5
	sid-snapshot-20080901:1.5
	sid-snapshot-20080801:1.5
	sid-snapshot-20080701:1.5
	sid-snapshot-20080601:1.5
	sid-snapshot-20080501:1.5
	sid-snapshot-20080403:1.5
	sid-snapshot-20080401:1.5
	gdb_6_8-branch:1.5.0.12
	sid-snapshot-20080301:1.5
	sid-snapshot-20080201:1.5
	sid-snapshot-20080101:1.5
	sid-snapshot-20071201:1.5
	sid-snapshot-20071101:1.5
	sid-snapshot-20071001:1.5
	insight_6_6-20070208-release:1.5
	gdb_6_6-branch:1.5.0.10
	gdb_6_6-2006-11-15-branchpoint:1.5
	insight_6_5-20061003-release:1.5
	gdb_6_5-branch:1.5.0.8
	gdb_6_5-2006-05-14-branchpoint:1.5
	gdb_6_4-branch:1.5.0.6
	gdb_6_4-2005-11-01-branchpoint:1.5
	gdb_6_1-2004-04-05-release:1.5
	gdb_6_1-branch:1.5.0.4
	gdb_6_1-2004-03-01-gmt-branchpoint:1.5
	gdb_6_0-2003-10-04-release:1.5
	gdb_6_0-branch:1.5.0.2
	gdb_6_0-2003-06-23-branchpoint:1.5
	TK8_4_1:1.1.1.3
	gdb_5_3-2002-12-12-release:1.2
	tcltk840-20020924-branch:1.3.0.2
	tcltk840-20020924-branchpoint:1.3
	TK_8_4_0:1.1.1.3
	sid-20020905-branchpoint:1.2
	sid-20020905-branch:1.2.0.6
	gdb_5_3-branch:1.2.0.4
	gdb_5_3-2002-09-04-branchpoint:1.2
	gdb_5_2_1-2002-07-23-release:1.2
	gdb_5_2-2002-04-29-release:1.2
	gdb_5_2-branch:1.2.0.2
	gdb_5_2-2002-03-03-branchpoint:1.2
	gdb_5_1_1-2002-01-24-release:1.1.1.1
	cygnus_cvs_20020108_pre:1.2
	gdb_5_1_0_1-2002-01-03-branch:1.1.1.1.0.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.1.1.1
	gdb_5_1-2001-11-21-release:1.1.1.1
	gdb_s390-2001-09-26-branch:1.1.1.1.0.6
	gdb_s390-2001-09-26-branchpoint:1.1.1.1
	TK_8_3:1.1.1.2
	NET:1.1.1
	gdb_5_1-2001-07-29-branch:1.1.1.1.0.4
	gdb_5_1-2001-07-29-branchpoint:1.1.1.1
	insight-precleanup-2001-01-01:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	insight-2000-02-04:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.5
date	2003.01.21.20.24.51;	author hunt;	state Exp;
branches;
next	1.4;

1.4
date	2003.01.21.19.53.16;	author hunt;	state Exp;
branches;
next	1.3;

1.3
date	2002.09.24.18.39.29;	author kseitz;	state Exp;
branches;
next	1.2;

1.2
date	2001.09.10.01.16.53;	author irox;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.07.00.19.30;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.07.00.19.30;	author jsm;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2001.09.10.00.22.36;	author irox;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.09.24.20.39.07;	author kseitz;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Updated to tk 8.4.1
@
text
@# This file is a Tcl script to test out the procedures in the file 
# tkMacEmbed.c.  It is organized in the standard fashion for Tcl
# tests.
#
# Copyright (c) 1997 Sun Microsystems, Inc.
# Copyright (c) 1998-1999 by Scriptics Corporation.
# All rights reserved.
#
# RCS: @@(#) $Id: macEmbed.test,v 1.8 2002/07/14 05:48:46 dgp Exp $

package require tcltest 2.1
namespace import -force tcltest::configure
namespace import -force tcltest::testsDirectory
configure -testdir [file join [pwd] [file dirname [info script]]]
configure -loadfile [file join [testsDirectory] constraints.tcl]
tcltest::loadTestedCommands

test macEmbed-1.1 {TkpUseWindow procedure, bad window identifier} {macOnly} {
    catch {destroy .t}
    list [catch {toplevel .t -use xyz} msg] $msg
} {1 {expected integer but got "xyz"}}
test macEmbed-1.2 {TkpUseWindow procedure, bad window identifier} {macOnly} {
    catch {destroy .t}
    list [catch {toplevel .t -use 47} msg] $msg
} {1 {The window ID 47 does not correspond to a valid Tk Window.}}

test macEmbed-1.3 {TkpUseWindow procedure, creating Container records} {testembed macOnly} {
    deleteWindows
    frame .f1 -container 1 -width 200 -height 50
    frame .f2 -container 1 -width 200 -height 50
    pack .f1 .f2
    set w [winfo id .f1]
	toplevel .t -use $w
	list [testembed] [expr [lindex [lindex [testembed all] 1] 0] - $w]
} {{{XXX .f2 {} {}} {XXX .f1 XXX .t}} 0}
test macEmbed-1.4 {TkpUseWindow procedure, creating Container records} {testembed macOnly} {
    deleteWindows
    frame .f1 -container 1 -width 200 -height 50
    frame .f2 -container 1 -width 200 -height 50
    pack .f1 .f2
    set w1 [winfo id .f1]
    set w2 [winfo id .f2]
	toplevel .t1 -use $w1
	toplevel .t2 -use $w2
	testembed
} {{XXX .f2 XXX .t2} {XXX .f1 XXX .t1}}

# Can't think of any way to test the procedures TkpMakeWindow,
# TkpMakeContainer, or EmbedErrorProc.

test macEmbed-2.1 {EmbeddedEventProc procedure} {testembed macOnly} {
    deleteWindows
    frame .f1 -container 1 -width 200 -height 50
    pack .f1
    set w1 [winfo id .f1]
	toplevel .t1 -use $w1
	testembed
    destroy .t1
    update
	testembed
} {}
test macEmbed-2.2 {EmbeddedEventProc procedure} {testembed macOnly} {
    deleteWindows
    frame .f1 -container 1 -width 200 -height 50
    pack .f1
    toplevel .t1 -use [winfo id .f1]
    update
    destroy .f1
    testembed
} {}
test macEmbed-2.3 {EmbeddedEventProc procedure} {testembed macOnly} {
    deleteWindows
    frame .f1 -container 1 -width 200 -height 50
    pack .f1
    toplevel .t1 -use [winfo id .f1]
    update
    destroy .t1
    update
    list [testembed] [winfo children .]
} {{} {}}

test macEmbed-3.1 {EmbeddedEventProc procedure, detect creation} {testembed macOnly} {
    deleteWindows
    frame .f1 -container 1 -width 200 -height 50
    pack .f1
    set w1 [winfo id .f1]
    set x [testembed]
	toplevel .t1 -use $w1
	wm withdraw .t1
    list $x [testembed]
} {{{XXX .f1 {} {}}} {{XXX .f1 XXX .t1}}}
test macEmbed-3.2 {EmbeddedEventProc procedure, disallow position changes} \
	{macOnly} {
    deleteWindows
    frame .f1 -container 1 -width 200 -height 50
    pack .f1
    set w1 [winfo id .f1]
	toplevel .t1 -use $w1 -bd 2 -relief raised
	update
	wm geometry .t1 +30+40
    update
	wm geometry .t1
} {200x200+0+0}
test macEmbed-3.3 {EmbeddedEventProc procedure, disallow position changes} \
	{macOnly} {
    deleteWindows
    frame .f1 -container 1 -width 200 -height 50
    pack .f1
    set w1 [winfo id .f1]
	toplevel .t1 -use $w1
	update
	wm geometry .t1 300x100+30+40
    update
	wm geometry .t1
} {300x100+0+0}
test macEmbed-3.4 {EmbeddedEventProc procedure, geometry requests} {macOnly} {
    deleteWindows
    toplevel .t1 -container 1 -width 200 -height 50
    set w1 [winfo id .t1]
	toplevel .t2 -use $w1
    update
	.t1 configure -width 300 -height 80
    update
    list [winfo width .t1] [winfo height .t1] [wm geometry .t2]
} {300 80 300x80+0+0}
test macEmbed-3.5 {EmbeddedEventProc procedure, map requests} {macOnly} {
    deleteWindows
    frame .f1 -container 1 -width 200 -height 50
    pack .f1
    set w1 [winfo id .f1]
	toplevel .t1 -use $w1
	set x unmapped
	bind .t1 <Map> {set x mapped}
    update
	after 100
	update
	set x
} {mapped}
test macEmbed-3.6 {EmbeddedEventProc procedure, destroy events} {macOnly} {
    deleteWindows
    frame .f1 -container 1 -width 200 -height 50
    pack .f1
    set w1 [winfo id .f1]
    bind .f1 <Destroy> {set x dead}
    set x alive
	toplevel .t1 -use $w1
    update
	destroy .t1
    update
    list $x [winfo exists .f1]
} {dead 0}

test macEmbed-4.1 {EmbedStructureProc procedure, configure events} {macOnly} {
    deleteWindows
    frame .f1 -container 1 -width 200 -height 50
    pack .f1
    set w1 [winfo id .f1]
	toplevel .t1 -use $w1
    update
	.t1 configure -width 180 -height 100
    update
	winfo geometry .t1
} {180x100+0+0}
test macEmbed-4.2 {EmbedStructureProc procedure, destroy events} {testembed macOnly} {
    deleteWindows
    frame .f1 -container 1 -width 200 -height 50
    pack .f1
    set w1 [winfo id .f1]
	toplevel .t1 -use $w1
    update
    set x [testembed]
    destroy .f1
    list $x [testembed]
} {{{XXX .f1 XXX .t1}} {}}

# Can't think up any tests for TkpGetOtherWindow procedure.

test unixEmbed-5.1 {TkpClaimFocus procedure} {macOnly tempNotMac} {
    catch {interp delete child}
    deleteWindows
    frame .f1 -container 1 -width 200 -height 50
    frame .f2 -width 200 -height 50
    pack .f1 .f2
    interp create child
    child eval "set argv {-use [winfo id .f1]}"
    load {} Tk child
    child eval {
	. configure -bd 2 -highlightthickness 2 -relief sunken
    }
    focus -force .f2
    update
    list [child eval {
	focus .
	set x [list [focus]]
	update
	lappend x [focus]
    }] [focus]
} {{{} .} .f1}
catch {interp delete child}

test macEmbed-6.1 {EmbedWindowDeleted procedure, check parentPtr} {testembed macOnly} {
    deleteWindows
    frame .f1 -container 1 -width 200 -height 50
    frame .f2 -container 1 -width 200 -height 50
    frame .f3 -container 1 -width 200 -height 50
    frame .f4 -container 1 -width 200 -height 50
    pack .f1 .f2 .f3 .f4
    set x {}
    lappend x [testembed]
    foreach w {.f3 .f4 .f1 .f2} {
	destroy $w
	lappend x [testembed]
    }
    set x
} {{{XXX .f4 {} {}} {XXX .f3 {} {}} {XXX .f2 {} {}} {XXX .f1 {} {}}} {{XXX .f4 {} {}} {XXX .f2 {} {}} {XXX .f1 {} {}}} {{XXX .f2 {} {}} {XXX .f1 {} {}}} {{XXX .f2 {} {}}} {}}
test macEmbed-6.2 {EmbedWindowDeleted procedure, check embeddedPtr} {testembed macOnly} {
    deleteWindows
    frame .f1 -container 1 -width 200 -height 50
    pack .f1
    set w1 [winfo id .f1]
	toplevel .t1 -use $w1 -highlightthickness 2 -bd 2 -relief sunken
	set x {}
	lappend x [testembed]
	destroy .t1
	update
	lappend x [testembed]
} {{{XXX .f1 XXX .t1}} {}}

test macEmbed-7.1 {geometry propagation in tkUnixWm.c/UpdateGeometryInfo} {macOnly} {
    deleteWindows
    frame .f1 -container 1 -width 200 -height 50
    pack .f1
    toplevel .t1 -use [winfo id .f1] -width 150 -height 80
    update
    wm geometry .t1 +40+50
    update
    wm geometry .t1
} {150x80+0+0}
test macEmbed-7.2 {geometry propagation in tkUnixWm.c/UpdateGeometryInfo} {macOnly} {
    deleteWindows
    frame .f1 -container 1 -width 200 -height 50
    pack .f1
    toplevel .t1 -use [winfo id .f1] -width 150 -height 80
    update
    wm geometry .t1 70x300+10+20
    update
    wm geometry .t1
} {70x300+0+0}



deleteWindows

# cleanup
::tcltest::cleanupTests
return













@


1.4
log
@touched all sources to ease next import
@
text
@d9 1
a9 9
# RCS: @@(#) $Id: macEmbed.test,v 1.7.6.1 2000/05/04 21:26:29 spolk Exp $

if {[lsearch [namespace children] ::tcltest] == -1} {
    source [file join [pwd] [file dirname [info script]] defs.tcl]
}

eval destroy [winfo children .]
wm geometry . {}
raise .
d11 6
d27 2
a28 9
if {[string compare testembed [info commands testembed]] != 0} {
    puts "This application hasn't been compiled with the testembed command,"
    puts "therefore I am skipping all of these tests."
    ::tcltest::cleanupTests
    return
}

test macEmbed-1.3 {TkpUseWindow procedure, creating Container records} {macOnly} {
    eval destroy [winfo child .]
d36 2
a37 2
test macEmbed-1.4 {TkpUseWindow procedure, creating Container records} {macOnly} {
    eval destroy [winfo child .]
d51 2
a52 4
test macEmbed-2.1 {EmbeddedEventProc procedure} {macOnly} {
    foreach w [winfo child .] {
	catch {destroy $w}
    }
d62 2
a63 4
test macEmbed-2.2 {EmbeddedEventProc procedure} {macOnly} {
    foreach w [winfo child .] {
	catch {destroy $w}
    }
d71 2
a72 4
test macEmbed-2.3 {EmbeddedEventProc procedure} {macOnly} {
    foreach w [winfo child .] {
	catch {destroy $w}
    }
d82 2
a83 4
test macEmbed-3.1 {EmbeddedEventProc procedure, detect creation} {macOnly} {
    foreach w [winfo child .] {
	catch {destroy $w}
    }
d94 1
a94 3
    foreach w [winfo child .] {
	catch {destroy $w}
    }
d106 1
a106 3
    foreach w [winfo child .] {
	catch {destroy $w}
    }
d117 1
a117 3
    foreach w [winfo child .] {
	catch {destroy $w}
    }
d127 1
a127 3
    foreach w [winfo child .] {
	catch {destroy $w}
    }
d140 1
a140 3
    foreach w [winfo child .] {
	catch {destroy $w}
    }
d154 1
a154 3
    foreach w [winfo child .] {
	catch {destroy $w}
    }
d164 2
a165 4
test macEmbed-4.2 {EmbedStructureProc procedure, destroy events} {macOnly} {
    foreach w [winfo child .] {
	catch {destroy $w}
    }
d180 1
a180 3
    foreach w [winfo child .] {
	catch {destroy $w}
    }
d186 1
a186 1
    load {} tk child
d201 2
a202 4
test macEmbed-6.1 {EmbedWindowDeleted procedure, check parentPtr} {macOnly} {
    foreach w [winfo child .] {
	catch {destroy $w}
    }
d216 2
a217 4
test macEmbed-6.2 {EmbedWindowDeleted procedure, check embeddedPtr} {macOnly} {
    foreach w [winfo child .] {
	catch {destroy $w}
    }
d230 1
a230 3
    foreach w [winfo child .] {
	catch {destroy $w}
    }
d240 1
a240 3
    foreach w [winfo child .] {
	catch {destroy $w}
    }
d252 1
a252 3
foreach w [winfo child .] {
    catch {destroy $w}
}
@


1.3
log
@touched all sources to ease next import
@
text
@@


1.2
log
@touched all tk files to ease next import
@
text
@@


1.1
log
@Initial revision
@
text
@d6 2
d9 1
a9 4
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
# RCS: @@(#) $Id: macEmbed.test,v 1.3 1998/09/14 18:23:48 stanton Exp $
d11 2
a12 6
if {$tcl_platform(platform) != "macintosh"} {
    return
}

if {[info procs test] != "test"} {
    source defs
d20 1
a20 1
test macEmbed-1.1 {TkpUseWindow procedure, bad window identifier} {
d24 1
a24 1
test macEmbed-1.2 {TkpUseWindow procedure, bad window identifier} {
d32 1
d36 1
a36 1
test macEmbed-1.3 {TkpUseWindow procedure, creating Container records} {
d45 1
a45 1
test macEmbed-1.4 {TkpUseWindow procedure, creating Container records} {
d60 1
a60 1
test macEmbed-2.1 {EmbeddedEventProc procedure} {
d73 1
a73 1
test macEmbed-2.2 {EmbeddedEventProc procedure} {
d84 1
a84 1
test macEmbed-2.3 {EmbeddedEventProc procedure} {
d97 1
a97 1
test macEmbed-3.1 {EmbeddedEventProc procedure, detect creation} {
d109 2
a110 1
test macEmbed-3.2 {EmbeddedEventProc procedure, disallow position changes} {
d123 2
a124 1
test macEmbed-3.3 {EmbeddedEventProc procedure, disallow position changes} {
d137 1
a137 1
test macEmbed-3.4 {EmbeddedEventProc procedure, geometry requests} {
d149 1
a149 1
test macEmbed-3.5 {EmbeddedEventProc procedure, map requests} {
d164 1
a164 1
test macEmbed-3.6 {EmbeddedEventProc procedure, destroy events} {
d180 1
a180 1
test macEmbed-4.1 {EmbedStructureProc procedure, configure events} {
d193 1
a193 1
test macEmbed-4.2 {EmbedStructureProc procedure, destroy events} {
d209 1
a209 1
test unixEmbed-5.1 {TkpClaimFocus procedure} {tempNotMac} {
d234 1
a234 1
test macEmbed-6.1 {EmbedWindowDeleted procedure, check parentPtr} {
d251 1
a251 1
test macEmbed-6.2 {EmbedWindowDeleted procedure, check embeddedPtr} {
d266 1
a266 1
test macEmbed-7.1 {geometry propagation in tkUnixWm.c/UpdateGeometryInfo} {
d278 1
a278 1
test macEmbed-7.2 {geometry propagation in tkUnixWm.c/UpdateGeometryInfo} {
d296 17
@


1.1.1.1
log
@import insight-2000-02-04 snapshot (2nd try)
@
text
@@


1.1.1.2
log
@Tk 8.3 upgrade
@
text
@a5 2
# Copyright (c) 1998-1999 by Scriptics Corporation.
# All rights reserved.
d7 4
a10 1
# RCS: @@(#) $Id: macEmbed.test,v 1.7.6.1 2000/05/04 21:26:29 spolk Exp $
d12 6
a17 2
if {[lsearch [namespace children] ::tcltest] == -1} {
    source [file join [pwd] [file dirname [info script]] defs.tcl]
d25 1
a25 1
test macEmbed-1.1 {TkpUseWindow procedure, bad window identifier} {macOnly} {
d29 1
a29 1
test macEmbed-1.2 {TkpUseWindow procedure, bad window identifier} {macOnly} {
a36 1
    ::tcltest::cleanupTests
d40 1
a40 1
test macEmbed-1.3 {TkpUseWindow procedure, creating Container records} {macOnly} {
d49 1
a49 1
test macEmbed-1.4 {TkpUseWindow procedure, creating Container records} {macOnly} {
d64 1
a64 1
test macEmbed-2.1 {EmbeddedEventProc procedure} {macOnly} {
d77 1
a77 1
test macEmbed-2.2 {EmbeddedEventProc procedure} {macOnly} {
d88 1
a88 1
test macEmbed-2.3 {EmbeddedEventProc procedure} {macOnly} {
d101 1
a101 1
test macEmbed-3.1 {EmbeddedEventProc procedure, detect creation} {macOnly} {
d113 1
a113 2
test macEmbed-3.2 {EmbeddedEventProc procedure, disallow position changes} \
	{macOnly} {
d126 1
a126 2
test macEmbed-3.3 {EmbeddedEventProc procedure, disallow position changes} \
	{macOnly} {
d139 1
a139 1
test macEmbed-3.4 {EmbeddedEventProc procedure, geometry requests} {macOnly} {
d151 1
a151 1
test macEmbed-3.5 {EmbeddedEventProc procedure, map requests} {macOnly} {
d166 1
a166 1
test macEmbed-3.6 {EmbeddedEventProc procedure, destroy events} {macOnly} {
d182 1
a182 1
test macEmbed-4.1 {EmbedStructureProc procedure, configure events} {macOnly} {
d195 1
a195 1
test macEmbed-4.2 {EmbedStructureProc procedure, destroy events} {macOnly} {
d211 1
a211 1
test unixEmbed-5.1 {TkpClaimFocus procedure} {macOnly tempNotMac} {
d236 1
a236 1
test macEmbed-6.1 {EmbedWindowDeleted procedure, check parentPtr} {macOnly} {
d253 1
a253 1
test macEmbed-6.2 {EmbedWindowDeleted procedure, check embeddedPtr} {macOnly} {
d268 1
a268 1
test macEmbed-7.1 {geometry propagation in tkUnixWm.c/UpdateGeometryInfo} {macOnly} {
d280 1
a280 1
test macEmbed-7.2 {geometry propagation in tkUnixWm.c/UpdateGeometryInfo} {macOnly} {
a297 17

# cleanup
::tcltest::cleanupTests
return













@


1.1.1.3
log
@import tk 8.4.0
@
text
@d9 9
a17 1
# RCS: @@(#) $Id: macEmbed.test,v 1.8 2002/07/14 05:48:46 dgp Exp $
a18 6
package require tcltest 2.1
namespace import -force tcltest::configure
namespace import -force tcltest::testsDirectory
configure -testdir [file join [pwd] [file dirname [info script]]]
configure -loadfile [file join [testsDirectory] constraints.tcl]
tcltest::loadTestedCommands
d29 9
a37 2
test macEmbed-1.3 {TkpUseWindow procedure, creating Container records} {testembed macOnly} {
    deleteWindows
d45 2
a46 2
test macEmbed-1.4 {TkpUseWindow procedure, creating Container records} {testembed macOnly} {
    deleteWindows
d60 4
a63 2
test macEmbed-2.1 {EmbeddedEventProc procedure} {testembed macOnly} {
    deleteWindows
d73 4
a76 2
test macEmbed-2.2 {EmbeddedEventProc procedure} {testembed macOnly} {
    deleteWindows
d84 4
a87 2
test macEmbed-2.3 {EmbeddedEventProc procedure} {testembed macOnly} {
    deleteWindows
d97 4
a100 2
test macEmbed-3.1 {EmbeddedEventProc procedure, detect creation} {testembed macOnly} {
    deleteWindows
d111 3
a113 1
    deleteWindows
d125 3
a127 1
    deleteWindows
d138 3
a140 1
    deleteWindows
d150 3
a152 1
    deleteWindows
d165 3
a167 1
    deleteWindows
d181 3
a183 1
    deleteWindows
d193 4
a196 2
test macEmbed-4.2 {EmbedStructureProc procedure, destroy events} {testembed macOnly} {
    deleteWindows
d211 3
a213 1
    deleteWindows
d219 1
a219 1
    load {} Tk child
d234 4
a237 2
test macEmbed-6.1 {EmbedWindowDeleted procedure, check parentPtr} {testembed macOnly} {
    deleteWindows
d251 4
a254 2
test macEmbed-6.2 {EmbedWindowDeleted procedure, check embeddedPtr} {testembed macOnly} {
    deleteWindows
d267 3
a269 1
    deleteWindows
d279 3
a281 1
    deleteWindows
d293 3
a295 1
deleteWindows
@


