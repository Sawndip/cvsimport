head	1.5;
access;
symbols
	sid-snapshot-20180601:1.5
	sid-snapshot-20180501:1.5
	sid-snapshot-20180401:1.5
	sid-snapshot-20180301:1.5
	sid-snapshot-20180201:1.5
	sid-snapshot-20180101:1.5
	sid-snapshot-20171201:1.5
	sid-snapshot-20171101:1.5
	sid-snapshot-20171001:1.5
	sid-snapshot-20170901:1.5
	sid-snapshot-20170801:1.5
	sid-snapshot-20170701:1.5
	sid-snapshot-20170601:1.5
	sid-snapshot-20170501:1.5
	sid-snapshot-20170401:1.5
	sid-snapshot-20170301:1.5
	sid-snapshot-20170201:1.5
	sid-snapshot-20170101:1.5
	sid-snapshot-20161201:1.5
	sid-snapshot-20161101:1.5
	sid-snapshot-20160901:1.5
	sid-snapshot-20160801:1.5
	sid-snapshot-20160701:1.5
	sid-snapshot-20160601:1.5
	sid-snapshot-20160501:1.5
	sid-snapshot-20160401:1.5
	sid-snapshot-20160301:1.5
	sid-snapshot-20160201:1.5
	sid-snapshot-20160101:1.5
	sid-snapshot-20151201:1.5
	sid-snapshot-20151101:1.5
	sid-snapshot-20151001:1.5
	sid-snapshot-20150901:1.5
	sid-snapshot-20150801:1.5
	sid-snapshot-20150701:1.5
	sid-snapshot-20150601:1.5
	sid-snapshot-20150501:1.5
	sid-snapshot-20150401:1.5
	sid-snapshot-20150301:1.5
	sid-snapshot-20150201:1.5
	sid-snapshot-20150101:1.5
	sid-snapshot-20141201:1.5
	sid-snapshot-20141101:1.5
	sid-snapshot-20141001:1.5
	sid-snapshot-20140901:1.5
	sid-snapshot-20140801:1.5
	sid-snapshot-20140701:1.5
	sid-snapshot-20140601:1.5
	sid-snapshot-20140501:1.5
	sid-snapshot-20140401:1.5
	sid-snapshot-20140301:1.5
	sid-snapshot-20140201:1.5
	sid-snapshot-20140101:1.5
	sid-snapshot-20131201:1.5
	sid-snapshot-20131101:1.5
	sid-snapshot-20131001:1.5
	sid-snapshot-20130901:1.5
	sid-snapshot-20130801:1.5
	sid-snapshot-20130701:1.5
	sid-snapshot-20130601:1.5
	insight_7_6-2013-04-10-branchpoint:1.5
	gdb_7_6-branch:1.5.0.28
	sid-snapshot-20130501:1.5
	sid-snapshot-20130401:1.5
	sid-snapshot-20130301:1.5
	sid-snapshot-20130201:1.5
	sid-snapshot-20130101:1.5
	sid-snapshot-20121201:1.5
	sid-snapshot-20121101:1.5
	sid-snapshot-20121001:1.5
	sid-snapshot-20120901:1.5
	gdb_7_5-branch:1.5.0.26
	sid-snapshot-20120801:1.5
	sid-snapshot-20120701:1.5
	sid-snapshot-20120601:1.5
	sid-snapshot-20120501:1.5
	sid-snapshot-20120401:1.5
	gdb_7_4-branch:1.5.0.24
	sid-snapshot-20120301:1.5
	sid-snapshot-20120201:1.5
	sid-snapshot-20120101:1.5
	sid-snapshot-20111201:1.5
	sid-snapshot-20111101:1.5
	sid-snapshot-20111001:1.5
	sid-snapshot-20110901:1.5
	gdb_7_3-branch:1.5.0.22
	sid-snapshot-20110801:1.5
	sid-snapshot-20110701:1.5
	sid-snapshot-20110601:1.5
	sid-snapshot-20110501:1.5
	sid-snapshot-20110401:1.5
	sid-snapshot-20110301:1.5
	sid-snapshot-20110201:1.5
	sid-snapshot-20110101:1.5
	sid-snapshot-20101201:1.5
	sid-snapshot-20101101:1.5
	sid-snapshot-20101001:1.5
	sid-snapshot-20100901:1.5
	sid-snapshot-20100801:1.5
	sid-snapshot-20100701:1.5
	sid-snapshot-20100601:1.5
	sid-snapshot-20100501:1.5
	sid-snapshot-20100401:1.5
	sid-snapshot-20100301:1.5
	gdb_7_1-branch:1.5.0.20
	gdb_7_0-branch:1.5.0.18
	sid-snapshot-20100201:1.5
	sid-snapshot-20100101:1.5
	sid-snapshot-20091201:1.5
	sid-snapshot-20091101:1.5
	sid-snapshot-20091001:1.5
	arc-sim-20090309:1.5
	sid-snapshot-20090901:1.5
	sid-snapshot-20090801:1.5
	sid-snapshot-20090701:1.5
	sid-snapshot-20090601:1.5
	sid-snapshot-20090501:1.5
	kevinb-pre-tk8_5_7_merge:1.5
	sid-snapshot-20090401:1.5
	arc-insight_6_8-branch:1.5.0.16
	arc-insight_6_8-branchpoint:1.5
	insight_6_8-branch:1.5.0.14
	insight_6_8-branchpoint:1.5
	sid-snapshot-20090301:1.5
	sid-snapshot-20090201:1.5
	sid-snapshot-20090101:1.5
	sid-snapshot-20081201:1.5
	sid-snapshot-20081101:1.5
	sid-snapshot-20081001:1.5
	sid-snapshot-20080901:1.5
	sid-snapshot-20080801:1.5
	sid-snapshot-20080701:1.5
	sid-snapshot-20080601:1.5
	sid-snapshot-20080501:1.5
	sid-snapshot-20080403:1.5
	sid-snapshot-20080401:1.5
	gdb_6_8-branch:1.5.0.12
	sid-snapshot-20080301:1.5
	sid-snapshot-20080201:1.5
	sid-snapshot-20080101:1.5
	sid-snapshot-20071201:1.5
	sid-snapshot-20071101:1.5
	sid-snapshot-20071001:1.5
	insight_6_6-20070208-release:1.5
	gdb_6_6-branch:1.5.0.10
	gdb_6_6-2006-11-15-branchpoint:1.5
	insight_6_5-20061003-release:1.5
	gdb_6_5-branch:1.5.0.8
	gdb_6_5-2006-05-14-branchpoint:1.5
	gdb_6_4-branch:1.5.0.6
	gdb_6_4-2005-11-01-branchpoint:1.5
	gdb_6_1-2004-04-05-release:1.5
	gdb_6_1-branch:1.5.0.4
	gdb_6_1-2004-03-01-gmt-branchpoint:1.5
	gdb_6_0-2003-10-04-release:1.5
	gdb_6_0-branch:1.5.0.2
	gdb_6_0-2003-06-23-branchpoint:1.5
	TK8_4_1:1.1.1.2
	gdb_5_3-2002-12-12-release:1.2
	tcltk840-20020924-branch:1.3.0.2
	tcltk840-20020924-branchpoint:1.3
	TK_8_4_0:1.1.1.2
	sid-20020905-branchpoint:1.2
	sid-20020905-branch:1.2.0.6
	gdb_5_3-branch:1.2.0.4
	gdb_5_3-2002-09-04-branchpoint:1.2
	gdb_5_2_1-2002-07-23-release:1.2
	gdb_5_2-2002-04-29-release:1.2
	gdb_5_2-branch:1.2.0.2
	gdb_5_2-2002-03-03-branchpoint:1.2
	cygnus_cvs_20020108_pre:1.2
	TK_8_3:1.1.1.1
	NET:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.5
date	2003.01.21.20.24.50;	author hunt;	state Exp;
branches;
next	1.4;

1.4
date	2003.01.21.19.53.16;	author hunt;	state Exp;
branches;
next	1.3;

1.3
date	2002.09.24.18.39.29;	author kseitz;	state Exp;
branches;
next	1.2;

1.2
date	2001.09.10.01.16.53;	author irox;	state Exp;
branches;
next	1.1;

1.1
date	2001.09.10.00.22.36;	author irox;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.09.10.00.22.36;	author irox;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.09.24.20.39.05;	author kseitz;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Updated to tk 8.4.1
@
text
@# This file is a Tcl script to test out the procedures in the file
# tkCursor.c.  It is organized in the standard white-box fashion for
# Tcl tests.
#
# Copyright (c) 1998 Sun Microsystems, Inc.
# Copyright (c) 1998-1999 by Scriptics Corporation.
# All rights reserved.
#
# RCS: @@(#) $Id: cursor.test,v 1.8 2002/09/03 00:22:37 hobbs Exp $

package require tcltest 2.1
namespace import -force tcltest::configure
namespace import -force tcltest::testsDirectory
configure -testdir [file join [pwd] [file dirname [info script]]]
configure -loadfile [file join [testsDirectory] constraints.tcl]
tcltest::loadTestedCommands

testConstraint testcursor [llength [info commands testcursor]]

test cursor-1.1 {Tk_AllocCursorFromObj - converting internal reps} {testcursor} {
    set x watch
    lindex $x 0
    destroy .b1
    button .b1 -cursor $x
    lindex $x 0
    testcursor watch
} {{1 0}}
test cursor-1.2 {Tk_AllocCursorFromObj - discard stale cursor} {testcursor} {
    set x watch
    destroy .b1 .b2
    button .b1 -cursor $x
    destroy .b1
    set result {}
    lappend result [testcursor watch]
    button .b2 -cursor $x
    lappend result [testcursor watch]
} {{} {{1 1}}}
test cursor-1.3 {Tk_AllocCursorFromObj - reuse existing cursor} {testcursor} {
    set x watch
    destroy .b1 .b2
    button .b1 -cursor $x
    set result {}
    lappend result [testcursor watch]
    button .b2 -cursor $x
    pack .b1 .b2 -side top
    lappend result [testcursor watch]
} {{{1 1}} {{2 1}}}

test cursor-2.1 {Tk_GetCursor procedure} {
    destroy .b1
    list [catch {button .b1 -cursor bad_name} msg] $msg
} {1 {bad cursor spec "bad_name"}}
test cursor-2.2 {Tk_GetCursor procedure} {
    destroy .b1
    list [catch {button .b1 -cursor @@xyzzy} msg] $msg
} {1 {bad cursor spec "@@xyzzy"}}
# Next two tests need a helper file with a very specific name and
# controlled format.
set wincur(data_octal) {
    000 000 002 000 001 000 040 040 000 000 007 000 007 000 060 001
    000 000 026 000 000 000 050 000 000 000 040 000 000 000 100 000
    000 000 001 000 001 000 000 000 000 000 000 000 000 000 000 000
    000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000
    000 000 377 377 377 000 000 000 000 000 000 000 000 000 000 000
    000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000
    000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000
    000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000
    000 000 000 000 000 000 000 000 000 000 160 016 000 000 170 036
    000 000 174 076 000 000 076 174 000 000 037 370 000 000 017 360
    000 000 007 340 000 000 007 340 000 000 017 360 000 000 037 370
    000 000 076 174 000 000 174 076 000 000 170 036 000 000 160 016
    000 000 000 000 000 000 377 377 377 377 377 377 377 377 377 377
    377 377 377 377 377 377 377 377 377 377 377 377 377 377 377 377
    377 377 377 377 377 377 377 377 377 377 377 377 377 377 377 377
    377 377 377 377 377 377 377 377 377 377 377 377 377 377 377 377
    377 377 377 377 377 377 017 360 377 377 007 340 377 377 003 300
    377 377 001 200 377 377 200 001 377 377 300 003 377 377 340 007
    377 377 360 017 377 377 360 017 377 377 340 007 377 377 300 003
    377 377 200 001 377 377 001 200 377 377 003 300 377 377 007 340
    377 377 017 360 377 377
}
set wincur(data_binary) {}
foreach wincur(num) $wincur(data_octal) {
    append wincur(data_binary) [binary format c 0$wincur(num)]
}
set wincur(dir) [::tcltest::makeDirectory {dir with spaces}]
set wincur(file) [::tcltest::makeFile $wincur(data_binary) "test file.cur" $wincur(dir)]
test cursor-2.3 {Tk_GetCursor procedure: cursor specs are lists} {pcOnly} {
    destroy .b1
    button .b1 -cursor [list @@$wincur(file)]
} {.b1}
test cursor-2.4 {Tk_GetCursor procedure: cursor specs are lists} {pcOnly} {
    destroy .b1
    button .b1 -cursor @@[regsub -all {[][ \\{}""$#]} $wincur(file) {\\&}]
} {.b1}
::tcltest::removeDirectory $wincur(dir)
unset wincur

test cursor-3.1 {Tk_FreeCursorFromObj - reference counts} {testcursor} {
    set x heart
    destroy .b1 .b2 .b3
    button .b1 -cursor $x
    button .b3 -cursor $x
    button .b2 -cursor $x
    set result {}
    lappend result [testcursor heart]
    destroy .b1
    lappend result [testcursor heart]
    destroy .b2
    lappend result [testcursor heart]
    destroy .b3
    lappend result [testcursor heart]
} {{{3 1}} {{2 1}} {{1 1}} {}}

test cursor-4.1 {FreeCursorObjProc} {testcursor} {
    destroy .b
    set x [format heart]
    button .b -cursor $x
    set y [format heart]
    .b configure -cursor $y
    set z [format heart]
    .b configure -cursor $z
    set result {}
    lappend result [testcursor heart]
    set x red
    lappend result [testcursor heart]
    set z 32
    lappend result [testcursor heart]
    destroy .b
    lappend result [testcursor heart]
    set y bogus
    set result
} {{{1 3}} {{1 2}} {{1 1}} {}}

destroy .t

# cleanup
::tcltest::cleanupTests
return
@


1.4
log
@touched all sources to ease next import
@
text
@d9 1
a9 1
# RCS: @@(#) $Id: cursor.test,v 1.7.6.1 2000/05/04 21:26:29 spolk Exp $
d11 6
a16 9
if {[lsearch [namespace children] ::tcltest] == -1} {
    source [file join [pwd] [file dirname [info script]] defs.tcl]
}

if {[info commands testcursor] != "testcursor"} {
    puts "testcursor command not available; skipping tests"
    ::tcltest::cleanupTests
    return
}
d18 1
a18 3
eval destroy [winfo children .]
wm geometry . {}
raise .
d20 1
a20 1
test cursor-1.1 {Tk_AllocCursorFromObj - converting internal reps} {
d28 1
a28 1
test cursor-1.2 {Tk_AllocCursorFromObj - discard stale cursor} {
d38 1
a38 1
test cursor-1.3 {Tk_AllocCursorFromObj - reuse existing cursor} {
d57 41
d99 2
a100 2
test cursor-3.1 {Tk_FreeCursorFromObj - reference counts} {
    set x arrow
d106 1
a106 1
    lappend result [testcursor arrow]
d108 1
a108 1
    lappend result [testcursor arrow]
d110 1
a110 1
    lappend result [testcursor arrow]
d112 1
a112 1
    lappend result [testcursor arrow]
d115 1
a115 1
test cursor-4.1 {FreeCursorObjProc} {
d117 1
a117 1
    set x [format arrow]
d119 1
a119 1
    set y [format arrow]
d121 1
a121 1
    set z [format arrow]
d124 1
a124 1
    lappend result [testcursor arrow]
d126 1
a126 1
    lappend result [testcursor arrow]
d128 1
a128 1
    lappend result [testcursor arrow]
d130 1
a130 1
    lappend result [testcursor arrow]
a139 13













@


1.3
log
@touched all sources to ease next import
@
text
@@


1.2
log
@touched all tk files to ease next import
@
text
@@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Tk 8.3 upgrade
@
text
@@


1.1.1.2
log
@import tk 8.4.0
@
text
@d9 1
a9 1
# RCS: @@(#) $Id: cursor.test,v 1.8 2002/09/03 00:22:37 hobbs Exp $
d11 9
a19 6
package require tcltest 2.1
namespace import -force tcltest::configure
namespace import -force tcltest::testsDirectory
configure -testdir [file join [pwd] [file dirname [info script]]]
configure -loadfile [file join [testsDirectory] constraints.tcl]
tcltest::loadTestedCommands
d21 3
a23 1
testConstraint testcursor [llength [info commands testcursor]]
d25 1
a25 1
test cursor-1.1 {Tk_AllocCursorFromObj - converting internal reps} {testcursor} {
d33 1
a33 1
test cursor-1.2 {Tk_AllocCursorFromObj - discard stale cursor} {testcursor} {
d43 1
a43 1
test cursor-1.3 {Tk_AllocCursorFromObj - reuse existing cursor} {testcursor} {
a61 41
# Next two tests need a helper file with a very specific name and
# controlled format.
set wincur(data_octal) {
    000 000 002 000 001 000 040 040 000 000 007 000 007 000 060 001
    000 000 026 000 000 000 050 000 000 000 040 000 000 000 100 000
    000 000 001 000 001 000 000 000 000 000 000 000 000 000 000 000
    000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000
    000 000 377 377 377 000 000 000 000 000 000 000 000 000 000 000
    000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000
    000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000
    000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000
    000 000 000 000 000 000 000 000 000 000 160 016 000 000 170 036
    000 000 174 076 000 000 076 174 000 000 037 370 000 000 017 360
    000 000 007 340 000 000 007 340 000 000 017 360 000 000 037 370
    000 000 076 174 000 000 174 076 000 000 170 036 000 000 160 016
    000 000 000 000 000 000 377 377 377 377 377 377 377 377 377 377
    377 377 377 377 377 377 377 377 377 377 377 377 377 377 377 377
    377 377 377 377 377 377 377 377 377 377 377 377 377 377 377 377
    377 377 377 377 377 377 377 377 377 377 377 377 377 377 377 377
    377 377 377 377 377 377 017 360 377 377 007 340 377 377 003 300
    377 377 001 200 377 377 200 001 377 377 300 003 377 377 340 007
    377 377 360 017 377 377 360 017 377 377 340 007 377 377 300 003
    377 377 200 001 377 377 001 200 377 377 003 300 377 377 007 340
    377 377 017 360 377 377
}
set wincur(data_binary) {}
foreach wincur(num) $wincur(data_octal) {
    append wincur(data_binary) [binary format c 0$wincur(num)]
}
set wincur(dir) [::tcltest::makeDirectory {dir with spaces}]
set wincur(file) [::tcltest::makeFile $wincur(data_binary) "test file.cur" $wincur(dir)]
test cursor-2.3 {Tk_GetCursor procedure: cursor specs are lists} {pcOnly} {
    destroy .b1
    button .b1 -cursor [list @@$wincur(file)]
} {.b1}
test cursor-2.4 {Tk_GetCursor procedure: cursor specs are lists} {pcOnly} {
    destroy .b1
    button .b1 -cursor @@[regsub -all {[][ \\{}""$#]} $wincur(file) {\\&}]
} {.b1}
::tcltest::removeDirectory $wincur(dir)
unset wincur
d63 2
a64 2
test cursor-3.1 {Tk_FreeCursorFromObj - reference counts} {testcursor} {
    set x heart
d70 1
a70 1
    lappend result [testcursor heart]
d72 1
a72 1
    lappend result [testcursor heart]
d74 1
a74 1
    lappend result [testcursor heart]
d76 1
a76 1
    lappend result [testcursor heart]
d79 1
a79 1
test cursor-4.1 {FreeCursorObjProc} {testcursor} {
d81 1
a81 1
    set x [format heart]
d83 1
a83 1
    set y [format heart]
d85 1
a85 1
    set z [format heart]
d88 1
a88 1
    lappend result [testcursor heart]
d90 1
a90 1
    lappend result [testcursor heart]
d92 1
a92 1
    lappend result [testcursor heart]
d94 1
a94 1
    lappend result [testcursor heart]
d104 13
@

