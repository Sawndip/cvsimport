head	1.5;
access;
symbols
	sid-snapshot-20180601:1.5
	sid-snapshot-20180501:1.5
	sid-snapshot-20180401:1.5
	sid-snapshot-20180301:1.5
	sid-snapshot-20180201:1.5
	sid-snapshot-20180101:1.5
	sid-snapshot-20171201:1.5
	sid-snapshot-20171101:1.5
	sid-snapshot-20171001:1.5
	sid-snapshot-20170901:1.5
	sid-snapshot-20170801:1.5
	sid-snapshot-20170701:1.5
	sid-snapshot-20170601:1.5
	sid-snapshot-20170501:1.5
	sid-snapshot-20170401:1.5
	sid-snapshot-20170301:1.5
	sid-snapshot-20170201:1.5
	sid-snapshot-20170101:1.5
	sid-snapshot-20161201:1.5
	sid-snapshot-20161101:1.5
	sid-snapshot-20160901:1.5
	sid-snapshot-20160801:1.5
	sid-snapshot-20160701:1.5
	sid-snapshot-20160601:1.5
	sid-snapshot-20160501:1.5
	sid-snapshot-20160401:1.5
	sid-snapshot-20160301:1.5
	sid-snapshot-20160201:1.5
	sid-snapshot-20160101:1.5
	sid-snapshot-20151201:1.5
	sid-snapshot-20151101:1.5
	sid-snapshot-20151001:1.5
	sid-snapshot-20150901:1.5
	sid-snapshot-20150801:1.5
	sid-snapshot-20150701:1.5
	sid-snapshot-20150601:1.5
	sid-snapshot-20150501:1.5
	sid-snapshot-20150401:1.5
	sid-snapshot-20150301:1.5
	sid-snapshot-20150201:1.5
	sid-snapshot-20150101:1.5
	sid-snapshot-20141201:1.5
	sid-snapshot-20141101:1.5
	sid-snapshot-20141001:1.5
	sid-snapshot-20140901:1.5
	sid-snapshot-20140801:1.5
	sid-snapshot-20140701:1.5
	sid-snapshot-20140601:1.5
	sid-snapshot-20140501:1.5
	sid-snapshot-20140401:1.5
	sid-snapshot-20140301:1.5
	sid-snapshot-20140201:1.5
	sid-snapshot-20140101:1.5
	sid-snapshot-20131201:1.5
	sid-snapshot-20131101:1.5
	sid-snapshot-20131001:1.5
	sid-snapshot-20130901:1.5
	sid-snapshot-20130801:1.5
	sid-snapshot-20130701:1.5
	sid-snapshot-20130601:1.5
	insight_7_6-2013-04-10-branchpoint:1.5
	gdb_7_6-branch:1.5.0.28
	sid-snapshot-20130501:1.5
	sid-snapshot-20130401:1.5
	sid-snapshot-20130301:1.5
	sid-snapshot-20130201:1.5
	sid-snapshot-20130101:1.5
	sid-snapshot-20121201:1.5
	sid-snapshot-20121101:1.5
	sid-snapshot-20121001:1.5
	sid-snapshot-20120901:1.5
	gdb_7_5-branch:1.5.0.26
	sid-snapshot-20120801:1.5
	sid-snapshot-20120701:1.5
	sid-snapshot-20120601:1.5
	sid-snapshot-20120501:1.5
	sid-snapshot-20120401:1.5
	gdb_7_4-branch:1.5.0.24
	sid-snapshot-20120301:1.5
	sid-snapshot-20120201:1.5
	sid-snapshot-20120101:1.5
	sid-snapshot-20111201:1.5
	sid-snapshot-20111101:1.5
	sid-snapshot-20111001:1.5
	sid-snapshot-20110901:1.5
	gdb_7_3-branch:1.5.0.22
	sid-snapshot-20110801:1.5
	sid-snapshot-20110701:1.5
	sid-snapshot-20110601:1.5
	sid-snapshot-20110501:1.5
	sid-snapshot-20110401:1.5
	sid-snapshot-20110301:1.5
	sid-snapshot-20110201:1.5
	sid-snapshot-20110101:1.5
	sid-snapshot-20101201:1.5
	sid-snapshot-20101101:1.5
	sid-snapshot-20101001:1.5
	sid-snapshot-20100901:1.5
	sid-snapshot-20100801:1.5
	sid-snapshot-20100701:1.5
	sid-snapshot-20100601:1.5
	sid-snapshot-20100501:1.5
	sid-snapshot-20100401:1.5
	sid-snapshot-20100301:1.5
	gdb_7_1-branch:1.5.0.20
	gdb_7_0-branch:1.5.0.18
	sid-snapshot-20100201:1.5
	sid-snapshot-20100101:1.5
	sid-snapshot-20091201:1.5
	sid-snapshot-20091101:1.5
	sid-snapshot-20091001:1.5
	arc-sim-20090309:1.5
	sid-snapshot-20090901:1.5
	sid-snapshot-20090801:1.5
	sid-snapshot-20090701:1.5
	sid-snapshot-20090601:1.5
	sid-snapshot-20090501:1.5
	kevinb-pre-tk8_5_7_merge:1.5
	sid-snapshot-20090401:1.5
	arc-insight_6_8-branch:1.5.0.16
	arc-insight_6_8-branchpoint:1.5
	insight_6_8-branch:1.5.0.14
	insight_6_8-branchpoint:1.5
	sid-snapshot-20090301:1.5
	sid-snapshot-20090201:1.5
	sid-snapshot-20090101:1.5
	sid-snapshot-20081201:1.5
	sid-snapshot-20081101:1.5
	sid-snapshot-20081001:1.5
	sid-snapshot-20080901:1.5
	sid-snapshot-20080801:1.5
	sid-snapshot-20080701:1.5
	sid-snapshot-20080601:1.5
	sid-snapshot-20080501:1.5
	sid-snapshot-20080403:1.5
	sid-snapshot-20080401:1.5
	gdb_6_8-branch:1.5.0.12
	sid-snapshot-20080301:1.5
	sid-snapshot-20080201:1.5
	sid-snapshot-20080101:1.5
	sid-snapshot-20071201:1.5
	sid-snapshot-20071101:1.5
	sid-snapshot-20071001:1.5
	insight_6_6-20070208-release:1.5
	gdb_6_6-branch:1.5.0.10
	gdb_6_6-2006-11-15-branchpoint:1.5
	insight_6_5-20061003-release:1.5
	gdb_6_5-branch:1.5.0.8
	gdb_6_5-2006-05-14-branchpoint:1.5
	gdb_6_4-branch:1.5.0.6
	gdb_6_4-2005-11-01-branchpoint:1.5
	gdb_6_1-2004-04-05-release:1.5
	gdb_6_1-branch:1.5.0.4
	gdb_6_1-2004-03-01-gmt-branchpoint:1.5
	gdb_6_0-2003-10-04-release:1.5
	gdb_6_0-branch:1.5.0.2
	gdb_6_0-2003-06-23-branchpoint:1.5
	TK8_4_1:1.1.1.3
	gdb_5_3-2002-12-12-release:1.2
	tcltk840-20020924-branch:1.3.0.2
	tcltk840-20020924-branchpoint:1.3
	TK_8_4_0:1.1.1.3
	sid-20020905-branchpoint:1.2
	sid-20020905-branch:1.2.0.6
	gdb_5_3-branch:1.2.0.4
	gdb_5_3-2002-09-04-branchpoint:1.2
	gdb_5_2_1-2002-07-23-release:1.2
	gdb_5_2-2002-04-29-release:1.2
	gdb_5_2-branch:1.2.0.2
	gdb_5_2-2002-03-03-branchpoint:1.2
	gdb_5_1_1-2002-01-24-release:1.1.1.1
	cygnus_cvs_20020108_pre:1.2
	gdb_5_1_0_1-2002-01-03-branch:1.1.1.1.0.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.1.1.1
	gdb_5_1-2001-11-21-release:1.1.1.1
	gdb_s390-2001-09-26-branch:1.1.1.1.0.6
	gdb_s390-2001-09-26-branchpoint:1.1.1.1
	TK_8_3:1.1.1.2
	NET:1.1.1
	gdb_5_1-2001-07-29-branch:1.1.1.1.0.4
	gdb_5_1-2001-07-29-branchpoint:1.1.1.1
	insight-precleanup-2001-01-01:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	insight-2000-02-04:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.5
date	2003.01.21.20.24.50;	author hunt;	state Exp;
branches;
next	1.4;

1.4
date	2003.01.21.19.53.16;	author hunt;	state Exp;
branches;
next	1.3;

1.3
date	2002.09.24.18.39.28;	author kseitz;	state Exp;
branches;
next	1.2;

1.2
date	2001.09.10.01.16.53;	author irox;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.07.00.19.30;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.07.00.19.30;	author jsm;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2001.09.10.00.22.36;	author irox;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.09.24.20.39.05;	author kseitz;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Updated to tk 8.4.1
@
text
@# This file is a Tcl script to test out Tk's clipboard management code,
# especially the "clipboard" command.  It is organized in the standard
# fashion for Tcl tests.
#
# Copyright (c) 1994 Sun Microsystems, Inc.
# Copyright (c) 1998-1999 by Scriptics Corporation.
# All rights reserved.
#
# RCS: @@(#) $Id: clipboard.test,v 1.6 2002/07/14 05:48:46 dgp Exp $

#
# Note: Multiple display clipboard handling will only be tested if the
# environment variable TK_ALT_DISPLAY is set to an alternate display.
#

package require tcltest 2.1
namespace import -force tcltest::configure
namespace import -force tcltest::testsDirectory
configure -testdir [file join [pwd] [file dirname [info script]]]
configure -loadfile [file join [testsDirectory] constraints.tcl]
tcltest::loadTestedCommands

# set up a very large buffer to test INCR retrievals
set longValue ""
foreach i {a b c d e f g j h i j k l m o p q r s t u v w x y z} {
    set j $i.1$i.2$i.3$i.4$i.5$i.6$i.7$i.8$i.9$i.10$i.11$i.12$i.13$i.14
    append longValue A$j B$j C$j D$j E$j F$j G$j H$j I$j K$j L$j M$j N$j
}

# Now we start the main body of the test code

test clipboard-1.1 {ClipboardHandler procedure} {
    clipboard clear
    clipboard append "test"
    clipboard get
} {test}
test clipboard-1.2 {ClipboardHandler procedure} {
    clipboard clear
    clipboard append "test"
    clipboard append "ing"
    clipboard get
} {testing}
test clipboard-1.3 {ClipboardHandler procedure} {
    clipboard clear
    clipboard append "t"
    clipboard append "e"
    clipboard append "s"
    clipboard append "t"
    clipboard get
} {test}
test clipboard-1.4 {ClipboardHandler procedure} {
    clipboard clear
    clipboard append $longValue
    clipboard get
} "$longValue"
test clipboard-1.5 {ClipboardHandler procedure} {
    clipboard clear
    clipboard append $longValue
    clipboard append "test"
    clipboard get
} "${longValue}test"
test clipboard-1.6 {ClipboardHandler procedure} {
    clipboard clear
    clipboard append -t TEST $longValue
    clipboard append -t STRING "test"
    list [clipboard get -t STRING] \
	[clipboard get -t TEST]
} [list test $longValue]
test clipboard-1.7 {ClipboardHandler procedure} {
    clipboard clear
    clipboard append -t TEST [string range $longValue 1 4000]
    clipboard append -t STRING "test"
    list [clipboard get -t STRING] \
	[clipboard get -t TEST]
} [list test [string range $longValue 1 4000]]
test clipboard-1.8 {ClipboardHandler procedure} {
    clipboard clear
    clipboard append ""
    clipboard get
} {}
test clipboard-1.9 {ClipboardHandler procedure} {
    clipboard clear
    clipboard append ""
    clipboard append "Test"
    clipboard get
} {Test}

##############################################################################

test clipboard-2.1 {ClipboardAppHandler procedure} {
    set oldAppName [tk appname]
    tk appname UnexpectedName
    clipboard clear
    clipboard append -type NEW_TYPE Data
    set result [selection get -selection CLIPBOARD -type TK_APPLICATION]
    tk appname $oldAppName
    set result
} {UnexpectedName}

##############################################################################

test clipboard-3.1 {ClipboardWindowHandler procedure} {
    set oldAppName [tk appname]
    tk appname UnexpectedName
    clipboard clear
    clipboard append -type NEW_TYPE Data
    set result [selection get -selection CLIPBOARD -type TK_WINDOW]
    tk appname $oldAppName
    set result
} {.}

##############################################################################

test clipboard-4.1 {ClipboardLostSel procedure} {
    clipboard clear
    clipboard append "Test"
    selection clear -s CLIPBOARD
    list [catch {clipboard get} msg] $msg
} {1 {CLIPBOARD selection doesn't exist or form "STRING" not defined}}
test clipboard-4.2 {ClipboardLostSel procedure} {
    clipboard clear
    clipboard append "Test"
    clipboard append -t TEST "Test2"
    selection clear -s CLIPBOARD
    list [catch {clipboard get} msg] $msg \
	[catch {clipboard get -t TEST} msg] $msg
} {1 {CLIPBOARD selection doesn't exist or form "STRING" not defined} 1 {CLIPBOARD selection doesn't exist or form "TEST" not defined}}
test clipboard-4.3 {ClipboardLostSel procedure} {
    clipboard clear
    clipboard append "Test"
    clipboard append -t TEST "Test2"
    clipboard append "Test3"
    selection clear -s CLIPBOARD
    list [catch {clipboard get} msg] $msg \
	[catch {clipboard get -t TEST} msg] $msg
} {1 {CLIPBOARD selection doesn't exist or form "STRING" not defined} 1 {CLIPBOARD selection doesn't exist or form "TEST" not defined}}

##############################################################################

test clipboard-5.1 {Tk_ClipboardClear procedure} {
    clipboard clear
    clipboard append -t TEST "test"
    set result [lsort [clipboard get TARGETS]]
    clipboard clear
    list $result [lsort [clipboard get TARGETS]]
} {{MULTIPLE TARGETS TEST TIMESTAMP TK_APPLICATION TK_WINDOW} {MULTIPLE TARGETS TIMESTAMP TK_APPLICATION TK_WINDOW}}
test clipboard-5.2 {Tk_ClipboardClear procedure} {
    clipboard clear
    clipboard append -t TEST "test"
    set result [lsort [clipboard get TARGETS]]
    selection own -s CLIPBOARD .
    lappend result [lsort [clipboard get TARGETS]]
    clipboard clear
    clipboard append -t TEST "test"
    lappend result [lsort [clipboard get TARGETS]]
} {MULTIPLE TARGETS TEST TIMESTAMP TK_APPLICATION TK_WINDOW {MULTIPLE TARGETS TIMESTAMP TK_APPLICATION TK_WINDOW} {MULTIPLE TARGETS TEST TIMESTAMP TK_APPLICATION TK_WINDOW}}

##############################################################################

test clipboard-6.1 {Tk_ClipboardAppend procedure} {
    clipboard clear
    clipboard append "first chunk"
    selection own -s CLIPBOARD .
    list [catch {
	clipboard append " second chunk"
	clipboard get
    } msg] $msg
} {0 {first chunk second chunk}}
test clipboard-6.2 {Tk_ClipboardAppend procedure} {unixOnly} {
    setupbg
    clipboard clear
    clipboard append -f INTEGER -t TEST "16"
    set result [dobg {clipboard get TEST}]
    cleanupbg
    set result
} {0x10}
test clipboard-6.3 {Tk_ClipboardAppend procedure} {
    clipboard clear
    clipboard append -f INTEGER -t TEST "16"
    list [catch {clipboard append -t TEST "test"} msg] $msg
} {1 {format "STRING" does not match current format "INTEGER" for TEST}}

##############################################################################

test clipboard-7.1 {Tk_ClipboardCmd procedure} {
    list [catch {clipboard} msg] $msg
} {1 {wrong # args: should be "clipboard option ?arg arg ...?"}}
test clipboard-7.2 {Tk_ClipboardCmd procedure} {
    clipboard clear
    list [catch {clipboard append --} msg] $msg \
	    [selection get -selection CLIPBOARD]
} {0 {} --}
test clipboard-7.3 {Tk_ClipboardCmd procedure} {
    clipboard clear
    list [catch {clipboard append -- information} msg] $msg \
	    [selection get -selection CLIPBOARD]
} {0 {} information}
test clipboard-7.4 {Tk_ClipboardCmd procedure} {
    list [catch {clipboard append --x a b} msg] $msg
} {1 {bad option "--x": must be -displayof, -format, or -type}}
test clipboard-7.5 {Tk_ClipboardCmd procedure} {
    list [catch {clipboard append -- a b} msg] $msg
} {1 {wrong # args: should be "clipboard append ?options? data"}}
test clipboard-7.6 {Tk_ClipboardCmd procedure} {
    clipboard clear
    list [catch {clipboard append -format} msg] $msg \
	    [selection get -selection CLIPBOARD]
} {0 {} -format}
test clipboard-7.7 {Tk_ClipboardCmd procedure} {
    list [catch {clipboard append -displayofoo f} msg] $msg
} {1 {bad option "-displayofoo": must be -displayof, -format, or -type}}
test clipboard-7.8 {Tk_ClipboardCmd procedure} {
    list [catch {clipboard append -type TEST} msg] $msg
} {1 {wrong # args: should be "clipboard append ?options? data"}}
test clipboard-7.9 {Tk_ClipboardCmd procedure} {
    list [catch {clipboard append -displayof foo "test"} msg] $msg
} {1 {bad window path name "foo"}}

test clipboard-7.10 {Tk_ClipboardCmd procedure} {
    list [catch {clipboard clear -displayof} msg] $msg
} {1 {wrong # args: should be "clipboard clear ?-displayof window?"}}
test clipboard-7.11 {Tk_ClipboardCmd procedure} {
    list [catch {clipboard clear -displayofoo f} msg] $msg
} {1 {bad option "-displayofoo": must be -displayof}}
test clipboard-7.12 {Tk_ClipboardCmd procedure} {
    list [catch {clipboard clear foo} msg] $msg
} {1 {wrong # args: should be "clipboard clear ?-displayof window?"}}
test clipboard-7.13 {Tk_ClipboardCmd procedure} {
    list [catch {clipboard clear -displayof foo} msg] $msg
} {1 {bad window path name "foo"}}

test clipboard-7.14 {Tk_ClipboardCmd procedure} {
    list [catch {clipboard error} msg] $msg
} {1 {bad option "error": must be append, clear, or get}}

test clipboard-7.15 {Tk_ClipboardCmd procedure} {
    clipboard clear
    list [catch {clipboard append -displayof} msg] $msg \
	    [selection get -selection CLIPBOARD]
} {0 {} -displayof}
test clipboard-7.16 {Tk_ClipboardCmd procedure} {
    clipboard clear
    list [catch {clipboard append -type} msg] $msg \
	    [selection get -selection CLIPBOARD]
} {0 {} -type}

# cleanup
::tcltest::cleanupTests
return













@


1.4
log
@touched all sources to ease next import
@
text
@d9 1
a9 1
# RCS: @@(#) $Id: clipboard.test,v 1.7.6.1 2000/05/04 21:26:29 spolk Exp $
d16 6
a21 5
if {[lsearch [namespace children] ::tcltest] == -1} {
    source [file join [pwd] [file dirname [info script]] defs.tcl]
}

eval destroy [winfo child .]
d35 1
a35 1
    selection get -s CLIPBOARD
d41 1
a41 1
    selection get -s CLIPBOARD
d49 1
a49 1
    selection get -s CLIPBOARD
d54 1
a54 1
    selection get -s CLIPBOARD
d60 1
a60 1
    selection get -s CLIPBOARD
d66 2
a67 2
    list [selection get -s CLIPBOARD -t STRING] \
	[selection get -s CLIPBOARD -t TEST]
d73 2
a74 2
    list [selection get -s CLIPBOARD -t STRING] \
	[selection get -s CLIPBOARD -t TEST]
d79 1
a79 1
    selection get -s CLIPBOARD
d85 1
a85 1
    selection get -s CLIPBOARD
d118 1
a118 1
    list [catch {selection get -s CLIPBOARD} msg] $msg
d125 2
a126 2
    list [catch {selection get -s CLIPBOARD} msg] $msg \
	[catch {selection get -s CLIPBOARD -t TEST} msg] $msg
d134 2
a135 2
    list [catch {selection get -s CLIPBOARD} msg] $msg \
	[catch {selection get -s CLIPBOARD -t TEST} msg] $msg
d143 1
a143 1
    set result [lsort [selection get -s CLIPBOARD TARGETS]]
d145 1
a145 1
    list $result [lsort [selection get -s CLIPBOARD TARGETS]]
d150 1
a150 1
    set result [lsort [selection get -s CLIPBOARD TARGETS]]
d152 1
a152 1
    lappend result [lsort [selection get -s CLIPBOARD TARGETS]]
d155 1
a155 1
    lappend result [lsort [selection get -s CLIPBOARD TARGETS]]
d166 1
a166 1
	selection get -s CLIPBOARD
d173 1
a173 1
    set result [dobg {selection get -s CLIPBOARD TEST}]
d200 1
a200 1
} {1 {unknown option "--x"}}
d211 1
a211 1
} {1 {unknown option "-displayofoo"}}
d221 1
a221 1
} {1 {value for "-displayof" missing}}
d224 1
a224 1
} {1 {unknown option "-displayofoo"}}
d227 1
a227 1
} {1 {wrong # args: should be "clipboard clear ?options?"}}
d234 12
a245 1
} {1 {bad option "error": must be clear or append}}
@


1.3
log
@touched all sources to ease next import
@
text
@@


1.2
log
@touched all tk files to ease next import
@
text
@@


1.1
log
@Initial revision
@
text
@d6 2
d9 1
a9 4
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
# RCS: @@(#) $Id: clipboard.test,v 1.8 1999/01/26 04:11:34 jingham Exp $
d16 2
a17 2
if {[string compare test [info procs test]] == 1} {
    source defs
d234 17
@


1.1.1.1
log
@import insight-2000-02-04 snapshot (2nd try)
@
text
@@


1.1.1.2
log
@Tk 8.3 upgrade
@
text
@a5 2
# Copyright (c) 1998-1999 by Scriptics Corporation.
# All rights reserved.
d7 4
a10 1
# RCS: @@(#) $Id: clipboard.test,v 1.7.6.1 2000/05/04 21:26:29 spolk Exp $
d17 2
a18 2
if {[lsearch [namespace children] ::tcltest] == -1} {
    source [file join [pwd] [file dirname [info script]] defs.tcl]
a234 17

# cleanup
::tcltest::cleanupTests
return













@


1.1.1.3
log
@import tk 8.4.0
@
text
@d9 1
a9 1
# RCS: @@(#) $Id: clipboard.test,v 1.6 2002/07/14 05:48:46 dgp Exp $
d16 5
a20 6
package require tcltest 2.1
namespace import -force tcltest::configure
namespace import -force tcltest::testsDirectory
configure -testdir [file join [pwd] [file dirname [info script]]]
configure -loadfile [file join [testsDirectory] constraints.tcl]
tcltest::loadTestedCommands
d34 1
a34 1
    clipboard get
d40 1
a40 1
    clipboard get
d48 1
a48 1
    clipboard get
d53 1
a53 1
    clipboard get
d59 1
a59 1
    clipboard get
d65 2
a66 2
    list [clipboard get -t STRING] \
	[clipboard get -t TEST]
d72 2
a73 2
    list [clipboard get -t STRING] \
	[clipboard get -t TEST]
d78 1
a78 1
    clipboard get
d84 1
a84 1
    clipboard get
d117 1
a117 1
    list [catch {clipboard get} msg] $msg
d124 2
a125 2
    list [catch {clipboard get} msg] $msg \
	[catch {clipboard get -t TEST} msg] $msg
d133 2
a134 2
    list [catch {clipboard get} msg] $msg \
	[catch {clipboard get -t TEST} msg] $msg
d142 1
a142 1
    set result [lsort [clipboard get TARGETS]]
d144 1
a144 1
    list $result [lsort [clipboard get TARGETS]]
d149 1
a149 1
    set result [lsort [clipboard get TARGETS]]
d151 1
a151 1
    lappend result [lsort [clipboard get TARGETS]]
d154 1
a154 1
    lappend result [lsort [clipboard get TARGETS]]
d165 1
a165 1
	clipboard get
d172 1
a172 1
    set result [dobg {clipboard get TEST}]
d199 1
a199 1
} {1 {bad option "--x": must be -displayof, -format, or -type}}
d210 1
a210 1
} {1 {bad option "-displayofoo": must be -displayof, -format, or -type}}
d220 1
a220 1
} {1 {wrong # args: should be "clipboard clear ?-displayof window?"}}
d223 1
a223 1
} {1 {bad option "-displayofoo": must be -displayof}}
d226 1
a226 1
} {1 {wrong # args: should be "clipboard clear ?-displayof window?"}}
d233 1
a233 12
} {1 {bad option "error": must be append, clear, or get}}

test clipboard-7.15 {Tk_ClipboardCmd procedure} {
    clipboard clear
    list [catch {clipboard append -displayof} msg] $msg \
	    [selection get -selection CLIPBOARD]
} {0 {} -displayof}
test clipboard-7.16 {Tk_ClipboardCmd procedure} {
    clipboard clear
    list [catch {clipboard append -type} msg] $msg \
	    [selection get -selection CLIPBOARD]
} {0 {} -type}
@


