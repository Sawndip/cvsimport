head	1.5;
access;
symbols
	sid-snapshot-20180601:1.5
	sid-snapshot-20180501:1.5
	sid-snapshot-20180401:1.5
	sid-snapshot-20180301:1.5
	sid-snapshot-20180201:1.5
	sid-snapshot-20180101:1.5
	sid-snapshot-20171201:1.5
	sid-snapshot-20171101:1.5
	sid-snapshot-20171001:1.5
	sid-snapshot-20170901:1.5
	sid-snapshot-20170801:1.5
	sid-snapshot-20170701:1.5
	sid-snapshot-20170601:1.5
	sid-snapshot-20170501:1.5
	sid-snapshot-20170401:1.5
	sid-snapshot-20170301:1.5
	sid-snapshot-20170201:1.5
	sid-snapshot-20170101:1.5
	sid-snapshot-20161201:1.5
	sid-snapshot-20161101:1.5
	sid-snapshot-20160901:1.5
	sid-snapshot-20160801:1.5
	sid-snapshot-20160701:1.5
	sid-snapshot-20160601:1.5
	sid-snapshot-20160501:1.5
	sid-snapshot-20160401:1.5
	sid-snapshot-20160301:1.5
	sid-snapshot-20160201:1.5
	sid-snapshot-20160101:1.5
	sid-snapshot-20151201:1.5
	sid-snapshot-20151101:1.5
	sid-snapshot-20151001:1.5
	sid-snapshot-20150901:1.5
	sid-snapshot-20150801:1.5
	sid-snapshot-20150701:1.5
	sid-snapshot-20150601:1.5
	sid-snapshot-20150501:1.5
	sid-snapshot-20150401:1.5
	sid-snapshot-20150301:1.5
	sid-snapshot-20150201:1.5
	sid-snapshot-20150101:1.5
	sid-snapshot-20141201:1.5
	sid-snapshot-20141101:1.5
	sid-snapshot-20141001:1.5
	sid-snapshot-20140901:1.5
	sid-snapshot-20140801:1.5
	sid-snapshot-20140701:1.5
	sid-snapshot-20140601:1.5
	sid-snapshot-20140501:1.5
	sid-snapshot-20140401:1.5
	sid-snapshot-20140301:1.5
	sid-snapshot-20140201:1.5
	sid-snapshot-20140101:1.5
	sid-snapshot-20131201:1.5
	sid-snapshot-20131101:1.5
	sid-snapshot-20131001:1.5
	sid-snapshot-20130901:1.5
	sid-snapshot-20130801:1.5
	sid-snapshot-20130701:1.5
	sid-snapshot-20130601:1.5
	insight_7_6-2013-04-10-branchpoint:1.5
	gdb_7_6-branch:1.5.0.28
	sid-snapshot-20130501:1.5
	sid-snapshot-20130401:1.5
	sid-snapshot-20130301:1.5
	sid-snapshot-20130201:1.5
	sid-snapshot-20130101:1.5
	sid-snapshot-20121201:1.5
	sid-snapshot-20121101:1.5
	sid-snapshot-20121001:1.5
	sid-snapshot-20120901:1.5
	gdb_7_5-branch:1.5.0.26
	sid-snapshot-20120801:1.5
	sid-snapshot-20120701:1.5
	sid-snapshot-20120601:1.5
	sid-snapshot-20120501:1.5
	sid-snapshot-20120401:1.5
	gdb_7_4-branch:1.5.0.24
	sid-snapshot-20120301:1.5
	sid-snapshot-20120201:1.5
	sid-snapshot-20120101:1.5
	sid-snapshot-20111201:1.5
	sid-snapshot-20111101:1.5
	sid-snapshot-20111001:1.5
	sid-snapshot-20110901:1.5
	gdb_7_3-branch:1.5.0.22
	sid-snapshot-20110801:1.5
	sid-snapshot-20110701:1.5
	sid-snapshot-20110601:1.5
	sid-snapshot-20110501:1.5
	sid-snapshot-20110401:1.5
	sid-snapshot-20110301:1.5
	sid-snapshot-20110201:1.5
	sid-snapshot-20110101:1.5
	sid-snapshot-20101201:1.5
	sid-snapshot-20101101:1.5
	sid-snapshot-20101001:1.5
	sid-snapshot-20100901:1.5
	sid-snapshot-20100801:1.5
	sid-snapshot-20100701:1.5
	sid-snapshot-20100601:1.5
	sid-snapshot-20100501:1.5
	sid-snapshot-20100401:1.5
	sid-snapshot-20100301:1.5
	gdb_7_1-branch:1.5.0.20
	gdb_7_0-branch:1.5.0.18
	sid-snapshot-20100201:1.5
	sid-snapshot-20100101:1.5
	sid-snapshot-20091201:1.5
	sid-snapshot-20091101:1.5
	sid-snapshot-20091001:1.5
	arc-sim-20090309:1.5
	sid-snapshot-20090901:1.5
	sid-snapshot-20090801:1.5
	sid-snapshot-20090701:1.5
	sid-snapshot-20090601:1.5
	sid-snapshot-20090501:1.5
	kevinb-pre-tk8_5_7_merge:1.5
	sid-snapshot-20090401:1.5
	arc-insight_6_8-branch:1.5.0.16
	arc-insight_6_8-branchpoint:1.5
	insight_6_8-branch:1.5.0.14
	insight_6_8-branchpoint:1.5
	sid-snapshot-20090301:1.5
	sid-snapshot-20090201:1.5
	sid-snapshot-20090101:1.5
	sid-snapshot-20081201:1.5
	sid-snapshot-20081101:1.5
	sid-snapshot-20081001:1.5
	sid-snapshot-20080901:1.5
	sid-snapshot-20080801:1.5
	sid-snapshot-20080701:1.5
	sid-snapshot-20080601:1.5
	sid-snapshot-20080501:1.5
	sid-snapshot-20080403:1.5
	sid-snapshot-20080401:1.5
	gdb_6_8-branch:1.5.0.12
	sid-snapshot-20080301:1.5
	sid-snapshot-20080201:1.5
	sid-snapshot-20080101:1.5
	sid-snapshot-20071201:1.5
	sid-snapshot-20071101:1.5
	sid-snapshot-20071001:1.5
	insight_6_6-20070208-release:1.5
	gdb_6_6-branch:1.5.0.10
	gdb_6_6-2006-11-15-branchpoint:1.5
	insight_6_5-20061003-release:1.5
	gdb_6_5-branch:1.5.0.8
	gdb_6_5-2006-05-14-branchpoint:1.5
	gdb_6_4-branch:1.5.0.6
	gdb_6_4-2005-11-01-branchpoint:1.5
	gdb_6_1-2004-04-05-release:1.5
	gdb_6_1-branch:1.5.0.4
	gdb_6_1-2004-03-01-gmt-branchpoint:1.5
	gdb_6_0-2003-10-04-release:1.5
	gdb_6_0-branch:1.5.0.2
	gdb_6_0-2003-06-23-branchpoint:1.5
	TK8_4_1:1.1.1.3
	gdb_5_3-2002-12-12-release:1.2
	tcltk840-20020924-branch:1.3.0.2
	tcltk840-20020924-branchpoint:1.3
	TK_8_4_0:1.1.1.3
	sid-20020905-branchpoint:1.2
	sid-20020905-branch:1.2.0.6
	gdb_5_3-branch:1.2.0.4
	gdb_5_3-2002-09-04-branchpoint:1.2
	gdb_5_2_1-2002-07-23-release:1.2
	gdb_5_2-2002-04-29-release:1.2
	gdb_5_2-branch:1.2.0.2
	gdb_5_2-2002-03-03-branchpoint:1.2
	gdb_5_1_1-2002-01-24-release:1.1.1.1
	cygnus_cvs_20020108_pre:1.2
	gdb_5_1_0_1-2002-01-03-branch:1.1.1.1.0.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.1.1.1
	gdb_5_1-2001-11-21-release:1.1.1.1
	gdb_s390-2001-09-26-branch:1.1.1.1.0.6
	gdb_s390-2001-09-26-branchpoint:1.1.1.1
	TK_8_3:1.1.1.2
	NET:1.1.1
	gdb_5_1-2001-07-29-branch:1.1.1.1.0.4
	gdb_5_1-2001-07-29-branchpoint:1.1.1.1
	insight-precleanup-2001-01-01:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	insight-2000-02-04:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.5
date	2003.01.21.20.24.51;	author hunt;	state Exp;
branches;
next	1.4;

1.4
date	2003.01.21.19.53.16;	author hunt;	state Exp;
branches;
next	1.3;

1.3
date	2002.09.24.18.39.29;	author kseitz;	state Exp;
branches;
next	1.2;

1.2
date	2001.09.10.01.16.54;	author irox;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.07.00.19.30;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.07.00.19.30;	author jsm;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2001.09.10.00.22.36;	author irox;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.09.24.20.39.08;	author kseitz;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Updated to tk 8.4.1
@
text
@# This file is a Tcl script to test out the "place" command.  It is
# organized in the standard fashion for Tcl tests.
#
# Copyright (c) 1995 Sun Microsystems, Inc.
# Copyright (c) 1998-1999 by Scriptics Corporation.
# All rights reserved.
#
# RCS: @@(#) $Id: place.test,v 1.7 2002/07/13 20:28:35 dgp Exp $

package require tcltest 2.1
namespace import -force tcltest::configure
namespace import -force tcltest::testsDirectory
configure -testdir [file join [pwd] [file dirname [info script]]]
configure -loadfile [file join [testsDirectory] constraints.tcl]
tcltest::loadTestedCommands

# XXX - This test file is woefully incomplete.  At present, only a
# few of the features are tested.

toplevel .t -width 300 -height 200 -bd 0
wm geom .t +0+0
frame .t.f -width 154 -height 84 -bd 2 -relief raised
place .t.f -x 48 -y 38
frame .t.f2 -width 30 -height 60 -bd 2 -relief raised
update

test place-1.1 {Tk_PlaceCmd procedure, "info" option} {
    place .t.f2 -x 0
    place info .t.f2
} {-x 0 -relx 0 -y 0 -rely 0 -width {} -relwidth {} -height {} -relheight {} -anchor nw}
test place-1.2 {Tk_PlaceCmd procedure, "info" option} {
    place .t.f2 -x 1 -y 2 -width 3 -height 4 -relx 0.1 -rely 0.2 \
	    -relwidth 0.3 -relheight 0.4 -anchor se -in .t.f  \
	    -bordermode outside
    place info .t.f2
} {-x 1 -relx 0.1 -y 2 -rely 0.2 -width 3 -relwidth 0.3 -height 4 -relheight 0.4 -anchor se -bordermode outside -in .t.f}

test place-2.1 {ConfigureSlave procedure, -height option} {
    list [catch {place .t.f2 -height abcd} msg] $msg
} {1 {bad screen distance "abcd"}}
test place-2.2 {ConfigureSlave procedure, -height option} {
    place forget .t.f2
    place .t.f2 -in .t.f -height 40
    update
    winfo height .t.f2
} {40}
test place-2.3 {ConfigureSlave procedure, -height option} {
    place forget .t.f2
    place .t.f2 -in .t.f -height 120
    update
    place .t.f2 -height {}
    update
    winfo height .t.f2
} {60}

test place-3.1 {ConfigureSlave procedure, -relheight option} {
    list [catch {place .t.f2 -relheight abcd} msg] $msg
} {1 {expected floating-point number but got "abcd"}}
test place-3.2 {ConfigureSlave procedure, -relheight option} {
    place forget .t.f2
    place .t.f2 -in .t.f -relheight .5
    update
    winfo height .t.f2
} {40}
test place-3.3 {ConfigureSlave procedure, -relheight option} {
    place forget .t.f2
    place .t.f2 -in .t.f -relheight .8
    update
    place .t.f2 -relheight {}
    update
    winfo height .t.f2
} {60}

test place-4.1 {ConfigureSlave procedure, bad -in options} {
    place forget .t.f2
    list [catch {place .t.f2 -in .t.f2} msg] $msg
} [list 1 "can't place .t.f2 relative to itself"]
test place-4.2 {ConfigureSlave procedure, bad -in option} {
    place forget .t.f2
    list [catch {place .t.f2 -in .} msg] $msg
} [list 1 "can't place .t.f2 relative to ."]

test place-5.1 {ConfigureSlave procedure, -relwidth option} {
    list [catch {place .t.f2 -relwidth abcd} msg] $msg
} {1 {expected floating-point number but got "abcd"}}
test place-5.2 {ConfigureSlave procedure, -relwidth option} {
    place forget .t.f2
    place .t.f2 -in .t.f -relwidth .5
    update
    winfo width .t.f2
} {75}
test place-5.3 {ConfigureSlave procedure, -relwidth option} {
    place forget .t.f2
    place .t.f2 -in .t.f -relwidth .8
    update
    place .t.f2 -relwidth {}
    update
    winfo width .t.f2
} {30}

test place-6.1 {ConfigureSlave procedure, -width option} {
    list [catch {place .t.f2 -width abcd} msg] $msg
} {1 {bad screen distance "abcd"}}
test place-6.2 {ConfigureSlave procedure, -width option} {
    place forget .t.f2
    place .t.f2 -in .t.f -width 100
    update
    winfo width .t.f2
} {100}
test place-6.3 {ConfigureSlave procedure, -width option} {
    place forget .t.f2
    place .t.f2 -in .t.f -width 120
    update
    place .t.f2 -width {}
    update
    winfo width .t.f2
} {30}

test place-7.1 {ReconfigurePlacement procedure, computing position} {
    place forget .t.f2
    place .t.f2 -in .t.f -x -2 -relx .5 -y 3 -rely .4
    update
    winfo geometry .t.f2
} {30x60+123+75}
test place-7.2 {ReconfigurePlacement procedure, position rounding} {
    place forget .t.f2
    place .t.f2 -in .t.f -x -1.4 -y -2.3
    update
    winfo geometry .t.f2
} {30x60+49+38}
test place-7.3 {ReconfigurePlacement procedure, position rounding} {
    place forget .t.f2
    place .t.f2 -in .t.f -x 1.4 -y 2.3
    update
    winfo geometry .t.f2
} {30x60+51+42}
test place-7.4 {ReconfigurePlacement procedure, position rounding} {
    place forget .t.f2
    place .t.f2 -in .t.f -x -1.6 -y -2.7
    update
    winfo geometry .t.f2
} {30x60+48+37}
test place-7.5 {ReconfigurePlacement procedure, position rounding} {
    place forget .t.f2
    place .t.f2 -in .t.f -x 1.6 -y 2.7
    update
    winfo geometry .t.f2
} {30x60+52+43}
test place-7.6 {ReconfigurePlacement procedure, position rounding} {
    frame .t.f3 -width 100 -height 100 -bg #f00000 -bd 0
    place .t.f3 -x 0 -y 0
    raise .t.f2
    place forget .t.f2
    place .t.f2 -in .t.f3 -relx .303 -rely .406 -relwidth .304 -relheight .206
    update
    winfo geometry .t.f2
} {31x20+30+41}
catch {destroy .t.f3}
test place-7.7 {ReconfigurePlacement procedure, computing size} {
    place forget .t.f2
    place .t.f2 -in .t.f -width 120 -height 89
    update
    list [winfo width .t.f2] [winfo height .t.f2]
} {120 89}
test place-7.8 {ReconfigurePlacement procedure, computing size} {
    place forget .t.f2
    place .t.f2 -in .t.f -relwidth .4 -relheight .5
    update
    list [winfo width .t.f2] [winfo height .t.f2]
} {60 40}
test place-7.9 {ReconfigurePlacement procedure, computing size} {
    place forget .t.f2
    place .t.f2 -in .t.f -width 10 -relwidth .4 -height -4 -relheight .5
    update
    list [winfo width .t.f2] [winfo height .t.f2]
} {70 36}
test place-7.10 {ReconfigurePlacement procedure, computing size} {
    place forget .t.f2
    place .t.f2 -in .t.f -width 10 -relwidth .4 -height -4 -relheight .5
    place .t.f2 -width {} -relwidth {} -height {} -relheight {}
    update
    list [winfo width .t.f2] [winfo height .t.f2]
} {30 60}


test place-8.1 {MasterStructureProc, mapping and unmapping slaves} {
    place forget .t.f2
    place forget .t.f
    place .t.f2 -relx 1.0 -rely 1.0 -anchor sw
    update
    set result [winfo ismapped .t.f2]
    wm iconify .t
    update
    lappend result [winfo ismapped .t.f2]
    place .t.f2 -x 40 -y 30 -relx 0 -rely 0 -anchor nw
    update
    lappend result [winfo x .t.f2] [winfo y .t.f2] [winfo ismapped .t.f2]
    wm deiconify .t
    update
    lappend result [winfo ismapped .t.f2]
} {1 0 40 30 0 1}
test place-8.2 {MasterStructureProc, mapping and unmapping slaves} {
    place forget .t.f2
    place forget .t.f
    place .t.f -x 0 -y 0 -width 200 -height 100
    place .t.f2 -in .t.f -relx 1.0 -rely 1.0 -anchor sw -width 50 -height 20
    update
    set result [winfo ismapped .t.f2]
    wm iconify .t
    update
    lappend result [winfo ismapped .t.f2]
    place .t.f2 -x 40 -y 30 -relx 0 -rely 0 -anchor nw
    update
    lappend result [winfo x .t.f2] [winfo y .t.f2] [winfo ismapped .t.f2]
    wm deiconify .t
    update
    lappend result [winfo ismapped .t.f2]
} {1 0 42 32 0 1}

test place-9.1 {PlaceObjCmd} {
    list [catch {place} msg] $msg
} [list 1 "wrong # args: should be \"place option|pathName args\""]
test place-9.2 {PlaceObjCmd} {
    list [catch {place foo} msg] $msg
} [list 1 "wrong # args: should be \"place option|pathName args\""]
test place-9.3 {PlaceObjCmd} {
    catch {destroy .foo}
    list [catch {place .foo bar} msg] $msg
} [list 1 "bad window path name \".foo\""]
test place-9.4 {PlaceObjCmd} {
    catch {destroy .foo}
    list [catch {place bar .foo} msg] $msg
} [list 1 "bad window path name \".foo\""]
test place-9.5 {PlaceObjCmd} {
    catch {destroy .foo}
    frame .foo
    set res [list [catch {place badopt .foo} msg] $msg]
    destroy .foo
    set res
} [list 1 "bad option \"badopt\": must be configure, forget, info, or slaves"]
test place-9.6 {PlaceObjCmd, configure errors} {
    catch {destroy .foo}
    frame .foo
    set res [list [catch {place configure .foo} msg] $msg]
    destroy .foo
    set res
} [list 0 ""]
test place-9.7 {PlaceObjCmd, configure errors} {
    catch {destroy .foo}
    frame .foo
    set res [list [catch {place configure .foo bar} msg] $msg]
    destroy .foo
    set res
} [list 0 ""]
test place-9.8 {PlaceObjCmd, configure} {
    catch {destroy .foo}
    frame .foo
    place .foo -x 0 -y 0
    set res [place configure .foo]
    destroy .foo
    set res
} [list {-anchor {} {} nw nw} {-bordermode {} {} inside inside} {-height {} {} {} {}} {-in {} {} {} .} {-relheight {} {} {} {}} {-relwidth {} {} {} {}} {-relx {} {} 0 0.0} {-rely {} {} 0 0.0} {-width {} {} {} {}} {-x {} {} 0 0} {-y {} {} 0 0}]
test place-9.9 {PlaceObjCmd, configure} {
    catch {destroy .foo}
    frame .foo
    place .foo -x 0 -y 0
    set res [place configure .foo -x]
    destroy .foo
    set res
} [list -x {} {} 0 0]
test place-9.10 {PlaceObjCmd, forget errors} {
    catch {destroy .foo}
    frame .foo
    set res [list [catch {place forget .foo bar} msg] $msg]
    destroy .foo
    set res
} [list 1 "wrong # args: should be \"place forget pathName\""]
test place-9.11 {PlaceObjCmd, info errors} {
    catch {destroy .foo}
    frame .foo
    set res [list [catch {place info .foo bar} msg] $msg]
    destroy .foo
    set res
} [list 1 "wrong # args: should be \"place info pathName\""]
test place-9.12 {PlaceObjCmd, slaves errors} {
    catch {destroy .foo}
    frame .foo
    set res [list [catch {place slaves .foo bar} msg] $msg]
    destroy .foo
    set res
} [list 1 "wrong # args: should be \"place slaves pathName\""]
    
test place-10.1 {ConfigureSlave} {
    catch {destroy .foo}
    frame .foo
    set res [list [catch {place .foo -badopt} msg] $msg]
    destroy .foo
    set res
} [list 1 "unknown option \"-badopt\""]
test place-10.2 {ConfigureSlave} {
    catch {destroy .foo}
    frame .foo
    set res [list [catch {place .foo -anchor} msg] $msg]
    destroy .foo
    set res
} [list 1 "value for \"-anchor\" missing"]
test place-10.3 {ConfigureSlave} {
    catch {destroy .foo}
    frame .foo
    set res [list [catch {place .foo -bordermode j} msg] $msg]
    destroy .foo
    set res
} [list 1 "bad bordermode \"j\": must be inside, outside, or ignore"]
test place-10.4 {ConfigureSlave} {
    catch {destroy .foo}
    frame .foo
    set res [list [catch {place configure .foo -x 0 -y} msg] $msg]
    destroy .foo
    set res
} [list 1 "value for \"-y\" missing"]
	
test place-11.1 {PlaceObjCmd, slaves command} {
    catch {destroy .foo}
    frame .foo
    set res [place slaves .foo]
    destroy .foo
    set res
} {}
test place-11.2 {PlaceObjCmd, slaves command} {
    catch {destroy .foo .bar}
    frame .foo
    frame .bar
    place .bar -in .foo
    set res [place slaves .foo]
    destroy .foo
    destroy .bar
    set res
} [list .bar]

test place-12.1 {PlaceObjCmd, forget command} {
    catch {destroy .foo}
    frame .foo
    place .foo -width 50 -height 50
    update
    set res [winfo ismapped .foo]
    place forget .foo
    update
    lappend res [winfo ismapped .foo]
    destroy .foo
    set res
} [list 1 0]

test place-13.1 {test respect for internalborder} {
    toplevel .pack
    wm geometry .pack 200x200
    frame .pack.l -width 15 -height 10
    labelframe .pack.lf -labelwidget .pack.l
    pack .pack.lf -fill both -expand 1
    frame .pack.lf.f
    place .pack.lf.f -x 0 -y 0 -relwidth 1.0 -relheight 1.0
    update
    set res [list [winfo geometry .pack.lf.f]]
    .pack.lf configure -labelanchor e -padx 3 -pady 5
    update
    lappend res [winfo geometry .pack.lf.f]
    destroy .pack
    set res
} {196x188+2+10 177x186+5+7}

catch {destroy .t}

# cleanup
::tcltest::cleanupTests
return
@


1.4
log
@touched all sources to ease next import
@
text
@d8 1
a8 1
# RCS: @@(#) $Id: place.test,v 1.7.6.1 2000/05/04 21:26:29 spolk Exp $
d10 6
a15 9
if {[lsearch [namespace children] ::tcltest] == -1} {
    source [file join [pwd] [file dirname [info script]] defs.tcl]
}

foreach i [winfo children .] {
    destroy $i
}
wm geometry . {}
raise .
d77 5
a81 1
} {1 {can't place .t.f2 relative to itself}}
d220 150
a374 13













@


1.3
log
@touched all sources to ease next import
@
text
@@


1.2
log
@touched all tk files to ease next import
@
text
@@


1.1
log
@Initial revision
@
text
@d5 2
d8 1
a8 4
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
# RCS: @@(#) $Id: place.test,v 1.7 1999/01/26 04:11:36 jingham Exp $
d10 2
a11 2
if {[info procs test] != "test"} {
    source defs
d220 17
a236 1
concat
@


1.1.1.1
log
@import insight-2000-02-04 snapshot (2nd try)
@
text
@@


1.1.1.2
log
@Tk 8.3 upgrade
@
text
@a4 2
# Copyright (c) 1998-1999 by Scriptics Corporation.
# All rights reserved.
d6 4
a9 1
# RCS: @@(#) $Id: place.test,v 1.7.6.1 2000/05/04 21:26:29 spolk Exp $
d11 2
a12 2
if {[lsearch [namespace children] ::tcltest] == -1} {
    source [file join [pwd] [file dirname [info script]] defs.tcl]
d221 1
a221 17

# cleanup
::tcltest::cleanupTests
return













@


1.1.1.3
log
@import tk 8.4.0
@
text
@d8 1
a8 1
# RCS: @@(#) $Id: place.test,v 1.7 2002/07/13 20:28:35 dgp Exp $
d10 9
a18 6
package require tcltest 2.1
namespace import -force tcltest::configure
namespace import -force tcltest::testsDirectory
configure -testdir [file join [pwd] [file dirname [info script]]]
configure -loadfile [file join [testsDirectory] constraints.tcl]
tcltest::loadTestedCommands
d80 1
a80 5
} [list 1 "can't place .t.f2 relative to itself"]
test place-4.2 {ConfigureSlave procedure, bad -in option} {
    place forget .t.f2
    list [catch {place .t.f2 -in .} msg] $msg
} [list 1 "can't place .t.f2 relative to ."]
a218 150
test place-9.1 {PlaceObjCmd} {
    list [catch {place} msg] $msg
} [list 1 "wrong # args: should be \"place option|pathName args\""]
test place-9.2 {PlaceObjCmd} {
    list [catch {place foo} msg] $msg
} [list 1 "wrong # args: should be \"place option|pathName args\""]
test place-9.3 {PlaceObjCmd} {
    catch {destroy .foo}
    list [catch {place .foo bar} msg] $msg
} [list 1 "bad window path name \".foo\""]
test place-9.4 {PlaceObjCmd} {
    catch {destroy .foo}
    list [catch {place bar .foo} msg] $msg
} [list 1 "bad window path name \".foo\""]
test place-9.5 {PlaceObjCmd} {
    catch {destroy .foo}
    frame .foo
    set res [list [catch {place badopt .foo} msg] $msg]
    destroy .foo
    set res
} [list 1 "bad option \"badopt\": must be configure, forget, info, or slaves"]
test place-9.6 {PlaceObjCmd, configure errors} {
    catch {destroy .foo}
    frame .foo
    set res [list [catch {place configure .foo} msg] $msg]
    destroy .foo
    set res
} [list 0 ""]
test place-9.7 {PlaceObjCmd, configure errors} {
    catch {destroy .foo}
    frame .foo
    set res [list [catch {place configure .foo bar} msg] $msg]
    destroy .foo
    set res
} [list 0 ""]
test place-9.8 {PlaceObjCmd, configure} {
    catch {destroy .foo}
    frame .foo
    place .foo -x 0 -y 0
    set res [place configure .foo]
    destroy .foo
    set res
} [list {-anchor {} {} nw nw} {-bordermode {} {} inside inside} {-height {} {} {} {}} {-in {} {} {} .} {-relheight {} {} {} {}} {-relwidth {} {} {} {}} {-relx {} {} 0 0.0} {-rely {} {} 0 0.0} {-width {} {} {} {}} {-x {} {} 0 0} {-y {} {} 0 0}]
test place-9.9 {PlaceObjCmd, configure} {
    catch {destroy .foo}
    frame .foo
    place .foo -x 0 -y 0
    set res [place configure .foo -x]
    destroy .foo
    set res
} [list -x {} {} 0 0]
test place-9.10 {PlaceObjCmd, forget errors} {
    catch {destroy .foo}
    frame .foo
    set res [list [catch {place forget .foo bar} msg] $msg]
    destroy .foo
    set res
} [list 1 "wrong # args: should be \"place forget pathName\""]
test place-9.11 {PlaceObjCmd, info errors} {
    catch {destroy .foo}
    frame .foo
    set res [list [catch {place info .foo bar} msg] $msg]
    destroy .foo
    set res
} [list 1 "wrong # args: should be \"place info pathName\""]
test place-9.12 {PlaceObjCmd, slaves errors} {
    catch {destroy .foo}
    frame .foo
    set res [list [catch {place slaves .foo bar} msg] $msg]
    destroy .foo
    set res
} [list 1 "wrong # args: should be \"place slaves pathName\""]
    
test place-10.1 {ConfigureSlave} {
    catch {destroy .foo}
    frame .foo
    set res [list [catch {place .foo -badopt} msg] $msg]
    destroy .foo
    set res
} [list 1 "unknown option \"-badopt\""]
test place-10.2 {ConfigureSlave} {
    catch {destroy .foo}
    frame .foo
    set res [list [catch {place .foo -anchor} msg] $msg]
    destroy .foo
    set res
} [list 1 "value for \"-anchor\" missing"]
test place-10.3 {ConfigureSlave} {
    catch {destroy .foo}
    frame .foo
    set res [list [catch {place .foo -bordermode j} msg] $msg]
    destroy .foo
    set res
} [list 1 "bad bordermode \"j\": must be inside, outside, or ignore"]
test place-10.4 {ConfigureSlave} {
    catch {destroy .foo}
    frame .foo
    set res [list [catch {place configure .foo -x 0 -y} msg] $msg]
    destroy .foo
    set res
} [list 1 "value for \"-y\" missing"]
	
test place-11.1 {PlaceObjCmd, slaves command} {
    catch {destroy .foo}
    frame .foo
    set res [place slaves .foo]
    destroy .foo
    set res
} {}
test place-11.2 {PlaceObjCmd, slaves command} {
    catch {destroy .foo .bar}
    frame .foo
    frame .bar
    place .bar -in .foo
    set res [place slaves .foo]
    destroy .foo
    destroy .bar
    set res
} [list .bar]

test place-12.1 {PlaceObjCmd, forget command} {
    catch {destroy .foo}
    frame .foo
    place .foo -width 50 -height 50
    update
    set res [winfo ismapped .foo]
    place forget .foo
    update
    lappend res [winfo ismapped .foo]
    destroy .foo
    set res
} [list 1 0]

test place-13.1 {test respect for internalborder} {
    toplevel .pack
    wm geometry .pack 200x200
    frame .pack.l -width 15 -height 10
    labelframe .pack.lf -labelwidget .pack.l
    pack .pack.lf -fill both -expand 1
    frame .pack.lf.f
    place .pack.lf.f -x 0 -y 0 -relwidth 1.0 -relheight 1.0
    update
    set res [list [winfo geometry .pack.lf.f]]
    .pack.lf configure -labelanchor e -padx 3 -pady 5
    update
    lappend res [winfo geometry .pack.lf.f]
    destroy .pack
    set res
} {196x188+2+10 177x186+5+7}

d224 13
@


