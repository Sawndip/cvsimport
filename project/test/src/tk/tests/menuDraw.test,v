head	1.5;
access;
symbols
	sid-snapshot-20180601:1.5
	sid-snapshot-20180501:1.5
	sid-snapshot-20180401:1.5
	sid-snapshot-20180301:1.5
	sid-snapshot-20180201:1.5
	sid-snapshot-20180101:1.5
	sid-snapshot-20171201:1.5
	sid-snapshot-20171101:1.5
	sid-snapshot-20171001:1.5
	sid-snapshot-20170901:1.5
	sid-snapshot-20170801:1.5
	sid-snapshot-20170701:1.5
	sid-snapshot-20170601:1.5
	sid-snapshot-20170501:1.5
	sid-snapshot-20170401:1.5
	sid-snapshot-20170301:1.5
	sid-snapshot-20170201:1.5
	sid-snapshot-20170101:1.5
	sid-snapshot-20161201:1.5
	sid-snapshot-20161101:1.5
	sid-snapshot-20160901:1.5
	sid-snapshot-20160801:1.5
	sid-snapshot-20160701:1.5
	sid-snapshot-20160601:1.5
	sid-snapshot-20160501:1.5
	sid-snapshot-20160401:1.5
	sid-snapshot-20160301:1.5
	sid-snapshot-20160201:1.5
	sid-snapshot-20160101:1.5
	sid-snapshot-20151201:1.5
	sid-snapshot-20151101:1.5
	sid-snapshot-20151001:1.5
	sid-snapshot-20150901:1.5
	sid-snapshot-20150801:1.5
	sid-snapshot-20150701:1.5
	sid-snapshot-20150601:1.5
	sid-snapshot-20150501:1.5
	sid-snapshot-20150401:1.5
	sid-snapshot-20150301:1.5
	sid-snapshot-20150201:1.5
	sid-snapshot-20150101:1.5
	sid-snapshot-20141201:1.5
	sid-snapshot-20141101:1.5
	sid-snapshot-20141001:1.5
	sid-snapshot-20140901:1.5
	sid-snapshot-20140801:1.5
	sid-snapshot-20140701:1.5
	sid-snapshot-20140601:1.5
	sid-snapshot-20140501:1.5
	sid-snapshot-20140401:1.5
	sid-snapshot-20140301:1.5
	sid-snapshot-20140201:1.5
	sid-snapshot-20140101:1.5
	sid-snapshot-20131201:1.5
	sid-snapshot-20131101:1.5
	sid-snapshot-20131001:1.5
	sid-snapshot-20130901:1.5
	sid-snapshot-20130801:1.5
	sid-snapshot-20130701:1.5
	sid-snapshot-20130601:1.5
	insight_7_6-2013-04-10-branchpoint:1.5
	gdb_7_6-branch:1.5.0.28
	sid-snapshot-20130501:1.5
	sid-snapshot-20130401:1.5
	sid-snapshot-20130301:1.5
	sid-snapshot-20130201:1.5
	sid-snapshot-20130101:1.5
	sid-snapshot-20121201:1.5
	sid-snapshot-20121101:1.5
	sid-snapshot-20121001:1.5
	sid-snapshot-20120901:1.5
	gdb_7_5-branch:1.5.0.26
	sid-snapshot-20120801:1.5
	sid-snapshot-20120701:1.5
	sid-snapshot-20120601:1.5
	sid-snapshot-20120501:1.5
	sid-snapshot-20120401:1.5
	gdb_7_4-branch:1.5.0.24
	sid-snapshot-20120301:1.5
	sid-snapshot-20120201:1.5
	sid-snapshot-20120101:1.5
	sid-snapshot-20111201:1.5
	sid-snapshot-20111101:1.5
	sid-snapshot-20111001:1.5
	sid-snapshot-20110901:1.5
	gdb_7_3-branch:1.5.0.22
	sid-snapshot-20110801:1.5
	sid-snapshot-20110701:1.5
	sid-snapshot-20110601:1.5
	sid-snapshot-20110501:1.5
	sid-snapshot-20110401:1.5
	sid-snapshot-20110301:1.5
	sid-snapshot-20110201:1.5
	sid-snapshot-20110101:1.5
	sid-snapshot-20101201:1.5
	sid-snapshot-20101101:1.5
	sid-snapshot-20101001:1.5
	sid-snapshot-20100901:1.5
	sid-snapshot-20100801:1.5
	sid-snapshot-20100701:1.5
	sid-snapshot-20100601:1.5
	sid-snapshot-20100501:1.5
	sid-snapshot-20100401:1.5
	sid-snapshot-20100301:1.5
	gdb_7_1-branch:1.5.0.20
	gdb_7_0-branch:1.5.0.18
	sid-snapshot-20100201:1.5
	sid-snapshot-20100101:1.5
	sid-snapshot-20091201:1.5
	sid-snapshot-20091101:1.5
	sid-snapshot-20091001:1.5
	arc-sim-20090309:1.5
	sid-snapshot-20090901:1.5
	sid-snapshot-20090801:1.5
	sid-snapshot-20090701:1.5
	sid-snapshot-20090601:1.5
	sid-snapshot-20090501:1.5
	kevinb-pre-tk8_5_7_merge:1.5
	sid-snapshot-20090401:1.5
	arc-insight_6_8-branch:1.5.0.16
	arc-insight_6_8-branchpoint:1.5
	insight_6_8-branch:1.5.0.14
	insight_6_8-branchpoint:1.5
	sid-snapshot-20090301:1.5
	sid-snapshot-20090201:1.5
	sid-snapshot-20090101:1.5
	sid-snapshot-20081201:1.5
	sid-snapshot-20081101:1.5
	sid-snapshot-20081001:1.5
	sid-snapshot-20080901:1.5
	sid-snapshot-20080801:1.5
	sid-snapshot-20080701:1.5
	sid-snapshot-20080601:1.5
	sid-snapshot-20080501:1.5
	sid-snapshot-20080403:1.5
	sid-snapshot-20080401:1.5
	gdb_6_8-branch:1.5.0.12
	sid-snapshot-20080301:1.5
	sid-snapshot-20080201:1.5
	sid-snapshot-20080101:1.5
	sid-snapshot-20071201:1.5
	sid-snapshot-20071101:1.5
	sid-snapshot-20071001:1.5
	insight_6_6-20070208-release:1.5
	gdb_6_6-branch:1.5.0.10
	gdb_6_6-2006-11-15-branchpoint:1.5
	insight_6_5-20061003-release:1.5
	gdb_6_5-branch:1.5.0.8
	gdb_6_5-2006-05-14-branchpoint:1.5
	gdb_6_4-branch:1.5.0.6
	gdb_6_4-2005-11-01-branchpoint:1.5
	gdb_6_1-2004-04-05-release:1.5
	gdb_6_1-branch:1.5.0.4
	gdb_6_1-2004-03-01-gmt-branchpoint:1.5
	gdb_6_0-2003-10-04-release:1.5
	gdb_6_0-branch:1.5.0.2
	gdb_6_0-2003-06-23-branchpoint:1.5
	TK8_4_1:1.1.1.3
	gdb_5_3-2002-12-12-release:1.2
	tcltk840-20020924-branch:1.3.0.2
	tcltk840-20020924-branchpoint:1.3
	TK_8_4_0:1.1.1.3
	sid-20020905-branchpoint:1.2
	sid-20020905-branch:1.2.0.6
	gdb_5_3-branch:1.2.0.4
	gdb_5_3-2002-09-04-branchpoint:1.2
	gdb_5_2_1-2002-07-23-release:1.2
	gdb_5_2-2002-04-29-release:1.2
	gdb_5_2-branch:1.2.0.2
	gdb_5_2-2002-03-03-branchpoint:1.2
	gdb_5_1_1-2002-01-24-release:1.1.1.1
	cygnus_cvs_20020108_pre:1.2
	gdb_5_1_0_1-2002-01-03-branch:1.1.1.1.0.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.1.1.1
	gdb_5_1-2001-11-21-release:1.1.1.1
	gdb_s390-2001-09-26-branch:1.1.1.1.0.6
	gdb_s390-2001-09-26-branchpoint:1.1.1.1
	TK_8_3:1.1.1.2
	NET:1.1.1
	gdb_5_1-2001-07-29-branch:1.1.1.1.0.4
	gdb_5_1-2001-07-29-branchpoint:1.1.1.1
	insight-precleanup-2001-01-01:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	insight-2000-02-04:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.5
date	2003.01.21.20.24.51;	author hunt;	state Exp;
branches;
next	1.4;

1.4
date	2003.01.21.19.53.16;	author hunt;	state Exp;
branches;
next	1.3;

1.3
date	2002.09.24.18.39.29;	author kseitz;	state Exp;
branches;
next	1.2;

1.2
date	2001.09.10.01.16.54;	author irox;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.07.00.19.30;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.07.00.19.30;	author jsm;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2001.09.10.00.22.36;	author irox;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.09.24.20.39.07;	author kseitz;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Updated to tk 8.4.1
@
text
@# This file is a Tcl script to test drawing of menus in Tk.  It is
# organized in the standard fashion for Tcl tests.
#
# Copyright (c) 1996-1997 Sun Microsystems, Inc.
# Copyright (c) 1998-1999 by Scriptics Corporation.
# All rights reserved.
#
# RCS: @@(#) $Id: menuDraw.test,v 1.5 2002/07/13 20:28:35 dgp Exp $

package require tcltest 2.1
namespace import -force tcltest::configure
namespace import -force tcltest::testsDirectory
configure -testdir [file join [pwd] [file dirname [info script]]]
configure -loadfile [file join [testsDirectory] constraints.tcl]
tcltest::loadTestedCommands

test menuDraw-1.1 {TkMenuInitializeDrawingFields} {
    catch {destroy .m1}
    list [menu .m1] [destroy .m1]
} {.m1 {}}

test menuDraw-2.1 {TkIntializeMenuEntryDrawingFields} {
    catch {destroy .m1}
    menu .m1
    list [.m1 add command] [destroy .m1]
} {{} {}}

test menuDraw-3.1 {TkMenuFreeDrawOptions} {
    catch {destroy .m1}
    menu .m1
    list [destroy .m1]
} {{}}

test menuDraw-4.1 {TkMenuEntryFreeDrawOptions} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label "This is a test"
    list [destroy .m1]
} {{}}
test menuDraw-4.2 {TkMenuEntryFreeDrawOptions} {
	catch {destroy .m1}
	menu .m1
	.m1 add checkbutton -label "This is a test." -font "Courier 12" -activeforeground red -background green -selectcolor purple
	list [destroy .m1]
} {{}}

test menuDraw-5.1 {TkMenuConfigureDrawOptions - new menu} {
    catch {destroy .m1}
    list [menu .m1] [destroy .m1]
} {.m1 {}}
test menuDraw-5.2 {TkMenuConfigureDrawOptions - old menu} {
    catch {destroy .m1}
    menu .m1
    list [.m1 configure -fg red] [destroy .m1]
} {{} {}}
test menuDraw-5.3 {TkMenuConfigureDrawOptions - no disabledFg} {
	catch {destroy .m1}
	list [menu .m1 -disabledforeground ""] [destroy .m1]
} {.m1 {}}	

test menuDraw-6.1 {TkMenuConfigureEntryDrawOptions - no tkfont specified} {
    catch {destroy .m1}
    menu .m1
    list [.m1 add command -label "foo"] [destroy .m1]
} {{} {}}
test menuDraw-6.2 {TkMenuConfigureEntryDrawOptions - tkfont specified} {
    catch {destroy .m1}
    menu .m1
    list [.m1 add command -label "foo" -font "Courier 12"] [destroy .m1]
} {{} {}}
test menuDraw-6.3 {TkMenuConfigureEntryDrawOptions - active state - wrong entry} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label "foo"
    list [.m1 entryconfigure 1 -state active] [destroy .m1]
} {{} {}}
test menuDraw-6.4 {TkMenuConfigureEntryDrawOptions - active state - correct entry} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label "foo"
    .m1 activate 1
    list [.m1 entryconfigure 1 -state active] [destroy .m1]
} {{} {}}
test menuDraw-6.5 {TkMenuConfigureEntryDrawOptions - deactivate entry} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label "foo"
    .m1 activate 1
    list [.m1 entryconfigure 1 -state normal] [destroy .m1]
} {{} {}}
test menuDraw-6.6 {TkMenuConfigureEntryDrawOptions - bad state} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label "foo"
    list [catch {.m1 entryconfigure 1 -state foo} msg] $msg [destroy .m1]
} {1 {bad state "foo": must be active, normal, or disabled} {}}
test menuDraw-6.7 {TkMenuConfigureEntryDrawOptions - tkfont specified} {
    catch {destroy .m1}
    menu .m1
    list [.m1 add command -label "foo" -font "Courier 12"] [destroy .m1]
} {{} {}}
test menuDraw-6.8 {TkMenuConfigureEntryDrawOptions - border specified} {
    catch {destroy .m1}
    menu .m1
    list [.m1 add command -label "foo" -background "red"] [destroy .m1]
} {{} {}}
test menuDraw-6.9 {TkMenuConfigureEntryDrawOptions - foreground specified} {
    catch {destroy .m1}
    menu .m1
    list [.m1 add command -label "foo" -foreground "red"] [destroy .m1]
} {{} {}}
test menuDraw-6.10 {TkMenuConfigureEntryDrawOptions - activeBorder specified} {
    catch {destroy .m1}
    menu .m1
    list [.m1 add command -label "foo" -activebackground "red"] [destroy .m1]
} {{} {}}
test menuDraw-6.11 {TkMenuConfigureEntryDrawOptions - activeforeground specified} {
    catch {destroy .m1}
    menu .m1
    list [.m1 add command -label "foo" -activeforeground "red"] [destroy .m1]
} {{} {}}
test menuDraw-6.12 {TkMenuConfigureEntryDrawOptions - selectcolor specified} {
    catch {destroy .m1}
    menu .m1
    list [.m1 add radiobutton -label "foo" -selectcolor "red"] [destroy .m1]
} {{} {}}
test menuDraw-6.13 {TkMenuConfigureEntryDrawOptions - textGC disposal} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label "foo" -font "Helvetica 12"
    list [.m1 entryconfigure 1 -font "Courier 12"] [destroy .m1]
} {{} {}}
test menuDraw-6.14 {TkMenuConfigureEntryDrawOptions - activeGC disposal} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label "foo" -activeforeground "red"
    list [.m1 entryconfigure 1 -activeforeground "green"] [destroy .m1]
} {{} {}}
test menuDraw-6.15 {TkMenuConfigureEntryDrawOptions - disabledGC disposal} {
    catch {destroy .m1}
    menu .m1 -disabledforeground "red"
    .m1 add command -label "foo"
    list [.m1 configure -disabledforeground "green"] [destroy .m1]
} {{} {}}
test menuDraw-6.16 {TkMenuConfigureEntryDrawOptions - indicatorGC disposal} {
    catch {destroy .m1}
    menu .m1
    .m1 add radiobutton -label "foo" -selectcolor "red"
    list [.m1 entryconfigure 1 -selectcolor "green"] [destroy .m1]
} {{} {}}

test menuDraw-7.1 {TkEventuallyRecomputeMenu} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label "This is a long label"
    set tearoff [tk::TearOffMenu .m1]
    update idletasks
    list [.m1 entryconfigure 1 -label "foo"] [destroy .m1]
} {{} {}}
test menuDraw-7.2 {TkEventuallyRecomputeMenu - update pending} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label "This is a long label"
    set tearoff [tk::TearOffMenu .m1]
    list [.m1 entryconfigure 1 -label "foo"] [destroy .m1]
} {{} {}}


test menuDraw-8.1 {TkRecomputeMenu} {pcOnly userInteraction} {
    catch {destroy .m1}
    menu .m1
    .m1 configure -postcommand [.m1 add command -label foo]
    .m1 add command -label "Hit ESCAPE to make this menu go away."
    list [.m1 post 0 0] [destroy .m1]
} {{} {}}


test menuDraw-9.1 {TkEventuallyRedrawMenu - entry test} {
    catch {destroy .m1}
    catch {unset foo}
    menu .m1
    set foo 0
    .m1 add radiobutton -variable foo -label test
    tk::TearOffMenu .m1
    update idletasks
    list [set foo test] [destroy .m1] [unset foo]
} {test {} {}}
test menuDraw-9.2 {TkEventuallyRedrawMenu - whole menu} {
    catch {destroy .m1}
    menu .m1
    list [catch {tk::TearOffMenu .m1}] [destroy .m1]
} {0 {}}

# Don't know how to test when window has been deleted and ComputeMenuGeometry
# gets called.
test menuDraw-10.1 {ComputeMenuGeometry - menubar} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label test
    . configure -menu .m1
    list [update idletasks] [. configure -menu ""] [destroy .m1]
} {{} {} {}}
test menuDraw-10.2 {ComputeMenuGeometry - non-menubar} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label test
    list [update idletasks] [destroy .m1]
} {{} {}}
test menuDraw-10.3 {ComputeMenuGeometry - Resize necessary} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label test
    list [update idletasks] [destroy .m1]
} {{} {}}
test menuDraw-10.4 {ComputeMenuGeometry - resize not necessary} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label test
    update idletasks
    .m1 entryconfigure 1 -label test
    list [update idletasks] [destroy .m1]
} {{} {}}

test menuDraw-11.1 {TkMenuSelectImageProc - entry selected; redraw not pending} testImageType {
    catch {destroy .m1}
    catch {eval image delete [image names]}
    image create test image1
    image create test image2
    menu .m1
    .m1 add checkbutton -image image1 -selectimage image2
    .m1 invoke 1
    set tearoff [tk::TearOffMenu .m1 40 40]
    update idletasks
    list [image delete image2] [destroy .m1] [eval image delete [image names]]
} {{} {} {}}
test menuDraw-11.2 {TkMenuSelectImageProc - entry selected; redraw pending} testImageType {
    catch {destroy .m1}
    catch {eval image delete [image names]}
    image create test image1
    image create test image2
    menu .m1
    .m1 add checkbutton -image image1 -selectimage image2
    .m1 invoke 1
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [image delete image2] [destroy .m1] [eval image delete [image names]]
} {{} {} {}}
test menuDraw-11.3 {TkMenuSelectImageProc - entry not selected} testImageType {
    catch {destroy .m1}
    catch {eval image delete [image names]}
    image create test image1
    image create test image2
    menu .m1
    .m1 add checkbutton -image image1 -selectimage image2
    set tearoff [tk::TearOffMenu .m1 40 40]
    update idletasks
    list [image delete image2] [destroy .m1] [eval image delete [image names]]
} {{} {} {}}

#Don't know how to test missing tkwin in DisplayMenu
test menuDraw-12.1 {DisplayMenu - menubar background} {unixOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add cascade -label foo -menu .m2
    . configure -menu .m1
    list [update] [. configure -menu ""] [destroy .m1]
} {{} {} {}}
test menuDraw-12.2 {Display menu - no entries} {
    catch {destroy .m1}
    menu .m1
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [update] [destroy .m1]
} {{} {}}
test menuDraw-12.3 {DisplayMenu - one entry} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label foo
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [update] [destroy .m1]
} {{} {}}
test menuDraw-12.4 {DisplayMenu - two entries} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label "one"
    .m1 add command -label "two"
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [update] [destroy .m1]
} {{} {}}
test menuDraw.12.5 {DisplayMenu - two columns - first bigger} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label "one"
    .m1 add command -label "two"
    .m1 add command -label "three" -columnbreak 1
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [update] [destroy .m1]
} {{} {}}
test menuDraw-12.5 {DisplayMenu - two column - second  bigger} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label "one"
    .m1 add command -label "two" -columnbreak 1
    .m1 add command -label "three"
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [update] [destroy .m1]
} {{} {}}
test menuDraw.12.7 {DisplayMenu - three columns} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label "one"
    .m1 add command -label "two" -columnbreak 1
    .m1 add command -label "three"
    .m1 add command -label "four"
    .m1 add command -label "five"
    .m1 add command -label "six"
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [update] [destroy .m1]
} {{} {}}
test menuDraw-12.6 {Display menu - testing for extra space and menubars} {unixOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add cascade -label foo
    . configure -menu .m1
    list [update] [. configure -menu ""] [destroy .m1]
} {{} {} {}}
test menuDraw-12.7 {Display menu - extra space at end of menu} {
    catch {destroy .m1}
    menu .m1
    .m1 add cascade -label foo
    set tearoff [tk::TearOffMenu .m1 40 40]
    wm geometry $tearoff 200x100
    list [update] [destroy .m1]
} {{} {}}

test menuDraw-13.1 {TkMenuEventProc - Expose} {
    catch {destroy .m1}
    catch {destroy .m2}
    menu .m1
    .m1 add command -label "one"
    menu .m2
    .m2 add command -label "two"
    set tearoff1 [tk::TearOffMenu .m1 40 40]
    set tearoff2 [tk::TearOffMenu .m2 40 40]
    list [raise $tearoff2] [update] [destroy .m1] [destroy .m2]
} {{} {} {} {}}
test menuDraw-13.2 {TkMenuEventProc - ConfigureNotify} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label "foo"
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [wm geometry $tearoff 200x100] [update] [destroy .m1]
} {{} {} {}}
test menuDraw-13.3 {TkMenuEventProc - ActivateNotify} {macOnly} {
    catch {destroy .t2}
    toplevel .t2 -menu .t2.m1
    menu .t2.m1
    .t2.m1 add command -label foo
    tk::TearOffMenu .t2.m1 40 40
    list [catch {update} msg] $msg [destroy .t2]
} {0 {} {}}
# Testing deletes is hard, and I am going to do my best. Don't know how
# to test the case where we have already cleared the tkwin field in the
# menuPtr.
test menuDraw-13.4 {TkMenuEventProc - simple delete} {
    catch {destroy .m1}
    menu .m1
    list [destroy .m1]
} {{}}
test menuDraw-13.5 {TkMenuEventProc - nothing pending} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label foo
    update idletasks
    list [destroy .m1]
} {{}}

test menuDraw-14.1 {TkMenuImageProc} testImageType {
    catch {destroy .m1}
    catch {image delete image1}
    menu .m1
    image create test image1
    .m1 add command -image image1
    update idletasks
    list [image delete image1] [destroy .m1]
} {{} {}}
test menuDraw-14.2 {TkMenuImageProc} testImageType {
    catch {destroy .m1}
    catch {image delete image1}
    menu .m1
    image create test image1
    .m1 add command -image image1
    list [image delete image1] [destroy .m1]
} {{} {}}

test menuDraw-15.1 {TkPostTearoffMenu - Basic posting} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label "foo"
    list [catch {tk::TearOffMenu .m1 40 40}] [destroy .m1]
} {0 {}}
test menuDraw-15.2 {TkPostTearoffMenu - Deactivation} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label "foo" -state active
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [$tearoff index active] [destroy .m1]
} {none {}}
test menuDraw-15.3 {TkPostTearoffMenu - post command} {
    catch {destroy .m1}
    catch {unset foo}
    menu .m1 -postcommand "set foo .m1"
    .m1 add command -label "foo"
    list [catch {tk::TearOffMenu .m1 40 40}] [set foo] [unset foo] [destroy .m1]
} {0 .m1 {} {}}
test menuDraw-15.4 {TkPostTearoffMenu - post command deleting the menu} {
    catch {destroy .m1}
    menu .m1 -postcommand "destroy .m1"
    .m1 add command -label "foo"
    list [catch {tk::TearOffMenu .m1 40 40} msg] $msg [winfo exists .m1]
} {0 {} 0}
test menuDraw-15.5 {TkPostTearoffMenu - tearoff at edge of screen} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label "foo"
    set height [winfo screenheight .m1]
    list [catch {tk::TearOffMenu .m1 40 $height}] [destroy .m1]
} {0 {}}
test menuDraw-15.6 {TkPostTearoffMenu - tearoff off right} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label "foo"
    set width [winfo screenwidth .m1]
    list [catch {tk::TearOffMenu .m1 $width 40}] [destroy .m1]
} {0 {}}


test menuDraw-16.1 {TkPostSubmenu} {unixOnly} {
    catch {destroy .m1}
    catch {destroy .m2}
    menu .m1
    .m1 add cascade -label test -menu .m2
    menu .m2
    .m2 add command -label "Hit ESCAPE to make this menu go away."
    set tearoff [tk::TearOffMenu .m1 40 40]
    $tearoff postcascade 0
    list [$tearoff postcascade 0] [destroy .m1] [destroy .m2]
} {{} {} {}}
test menuDraw-16.2 {TkPostSubMenu} {unixOnly} {
    catch {destroy .m1}
    catch {destroy .m2}
    catch {destroy .m3}
    menu .m1
    .m1 add cascade -label "two" -menu .m2
    .m1 add cascade -label "three" -menu .m3
    menu .m2
    .m2 add command -label "two"
    menu .m3
    .m3 add command -label "three"
    set tearoff [tk::TearOffMenu .m1 40 40]
    $tearoff postcascade 0
    list [$tearoff postcascade 1] [destroy .m1] [destroy .m2] [destroy .m3]
} {{} {} {} {}}
test menuDraw-16.3 {TkPostSubMenu} {
    catch {destroy .m1}
    menu .m1
    .m1 add cascade -label test -menu .m2
    list [.m1 postcascade 1] [destroy .m1]
} {{} {}}
test menuDraw-16.4 {TkPostSubMenu} {
    catch {destroy .m1}
    menu .m1
    .m1 add cascade -label test
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [$tearoff postcascade 0] [destroy .m1]
} {{} {}}
test menuDraw-16.5 {TkPostSubMenu} {unixOnly} {
    catch {destroy .m1}
    catch {destroy .m2}
    menu .m1
    .m1 add cascade -label test -menu .m2
    menu .m2 -postcommand "glorp"
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [catch {$tearoff postcascade test} msg] $msg [destroy .m1] [destroy .m2]
} {1 {invalid command name "glorp"} {} {}}
test menuDraw-16.6 {TkPostSubMenu} {pcOnly userInteraction} {
    catch {destroy .m1}
    catch {destroy .m2}
    menu .m1
    .m1 add cascade -label test -menu .m2
    menu .m2
    .m2 add command -label "Hit ESCAPE to get rid of this menu"
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [$tearoff postcascade 0] [destroy .m1] [destroy .m2]
} {{} {} {}}

test menuDraw-17.1 {AdjustMenuCoords - menubar} {unixOnly} {
    catch {destroy .m1}
    catch {destroy .m2}
    menu .m1 -tearoff 0
    .m1 add cascade -label test -menu .m2
    menu .m2 -tearoff 0
    .m2 add command -label foo
    . configure -menu .m1
    foreach w [winfo children .] {
	if {[$w cget -type] == "menubar"} {
		break
	}
    }
    list [$w postcascade 0] [. configure -menu ""] [destroy .m1] [destroy .m2]
} {{} {} {} {}}
test menuDraw-17.2 {AdjustMenuCoords - menu} {pcOnly userInteraction} {
    catch {destroy .m1}
    catch {destroy .m2}
    menu .m1
    .m1 add cascade -label test -menu .m2
    menu .m2
    .m2 add command -label "Hit ESCAPE to make this menu go away"
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [$tearoff postcascade 0] [destroy .m1] [destroy .m2]
} {{} {} {}}

# cleanup
deleteWindows
::tcltest::cleanupTests
return













@


1.4
log
@touched all sources to ease next import
@
text
@d8 1
a8 1
# RCS: @@(#) $Id: menuDraw.test,v 1.7.6.1 2000/05/04 21:26:29 spolk Exp $
d10 6
a15 21
if {[lsearch [namespace children] ::tcltest] == -1} {
    source [file join [pwd] [file dirname [info script]] defs.tcl]
}

if {[lsearch [image types] test] < 0} {
    puts "This application hasn't been compiled with the \"test\" image"
    puts "type, so I can't run this test.  Are you sure you're using"
    puts "tktest instead of wish?"
    ::tcltest::cleanupTests
    return
}

proc deleteWindows {} {
    foreach i [winfo children .] {
    	catch [destroy $i]
    }
}

deleteWindows
wm geometry . {}
raise .
d156 1
a156 1
    set tearoff [tkTearOffMenu .m1]
d164 1
a164 1
    set tearoff [tkTearOffMenu .m1]
d184 1
a184 1
    tkTearOffMenu .m1
d191 1
a191 1
    list [catch {tkTearOffMenu .m1}] [destroy .m1]
d224 1
a224 1
test menuDraw-11.1 {TkMenuSelectImageProc - entry selected; redraw not pending} {
d232 1
a232 1
    set tearoff [tkTearOffMenu .m1 40 40]
d236 1
a236 1
test menuDraw-11.2 {TkMenuSelectImageProc - entry selected; redraw pending} {
d244 1
a244 1
    set tearoff [tkTearOffMenu .m1 40 40]
d247 1
a247 1
test menuDraw-11.3 {TkMenuSelectImageProc - entry not selected} {
d254 1
a254 1
    set tearoff [tkTearOffMenu .m1 40 40]
d270 1
a270 1
    set tearoff [tkTearOffMenu .m1 40 40]
d277 1
a277 1
    set tearoff [tkTearOffMenu .m1 40 40]
d285 1
a285 1
    set tearoff [tkTearOffMenu .m1 40 40]
d294 1
a294 1
    set tearoff [tkTearOffMenu .m1 40 40]
d303 1
a303 1
    set tearoff [tkTearOffMenu .m1 40 40]
d315 1
a315 1
    set tearoff [tkTearOffMenu .m1 40 40]
d329 1
a329 1
    set tearoff [tkTearOffMenu .m1 40 40]
d341 2
a342 2
    set tearoff1 [tkTearOffMenu .m1 40 40]
    set tearoff2 [tkTearOffMenu .m2 40 40]
d349 1
a349 1
    set tearoff [tkTearOffMenu .m1 40 40]
d357 1
a357 1
    tkTearOffMenu .t2.m1 40 40
d376 1
a376 1
test menuDraw-14.1 {TkMenuImageProc} {
d385 1
a385 1
test menuDraw-14.2 {TkMenuImageProc} {
d398 1
a398 1
    list [catch {tkTearOffMenu .m1 40 40}] [destroy .m1]
d404 1
a404 1
    set tearoff [tkTearOffMenu .m1 40 40]
d412 1
a412 1
    list [catch {tkTearOffMenu .m1 40 40}] [set foo] [unset foo] [destroy .m1]
d418 1
a418 1
    list [catch {tkTearOffMenu .m1 40 40} msg] $msg [winfo exists .m1]
d425 1
a425 1
    list [catch {tkTearOffMenu .m1 40 $height}] [destroy .m1]
d432 1
a432 1
    list [catch {tkTearOffMenu .m1 $width 40}] [destroy .m1]
d443 1
a443 1
    set tearoff [tkTearOffMenu .m1 40 40]
d458 1
a458 1
    set tearoff [tkTearOffMenu .m1 40 40]
d472 1
a472 1
    set tearoff [tkTearOffMenu .m1 40 40]
d481 1
a481 1
    set tearoff [tkTearOffMenu .m1 40 40]
d491 1
a491 1
    set tearoff [tkTearOffMenu .m1 40 40]
d517 1
a517 1
    set tearoff [tkTearOffMenu .m1 40 40]
@


1.3
log
@touched all sources to ease next import
@
text
@@


1.2
log
@touched all tk files to ease next import
@
text
@@


1.1
log
@Initial revision
@
text
@d5 2
d8 5
a12 4
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
# RCS: @@(#) $Id: menuDraw.test,v 1.2 1998/09/14 18:23:48 stanton Exp $
d18 1
a21 4
if {[info procs test] != "test"} {
    source defs
}

a31 10
if {$tcl_platform(platform) == "windows" && ![info exists INTERACTIVE]} {
    puts " Some tests were skipped because they could not be performed"
    puts " automatically on this platform. If you wish to execute them"
    puts " interactively, set the TCL variable INTERACTIVE and re-run"
    puts " the test."
    set testConfig(menuInteractive) 0
} else {
    set testConfig(menuInteractive) 1
}

d111 1
a111 1
} {1 {bad state value "foo": must be normal, active, or disabled} {}}
d184 1
a184 1
test menuDraw-8.1 {TkRecomputeMenu} {menuInteractive} {
d499 1
a499 1
test menuDraw-16.6 {TkPostSubMenu} {menuInteractive} {
d525 1
a525 1
test menuDraw-17.2 {AdjustMenuCoords - menu} {menuInteractive} {
d536 1
d538 15
@


1.1.1.1
log
@import insight-2000-02-04 snapshot (2nd try)
@
text
@@


1.1.1.2
log
@Tk 8.3 upgrade
@
text
@a4 2
# Copyright (c) 1998-1999 by Scriptics Corporation.
# All rights reserved.
d6 4
a9 5
# RCS: @@(#) $Id: menuDraw.test,v 1.7.6.1 2000/05/04 21:26:29 spolk Exp $

if {[lsearch [namespace children] ::tcltest] == -1} {
    source [file join [pwd] [file dirname [info script]] defs.tcl]
}
a14 1
    ::tcltest::cleanupTests
d18 4
d32 10
d121 1
a121 1
} {1 {bad state "foo": must be active, normal, or disabled} {}}
d194 1
a194 1
test menuDraw-8.1 {TkRecomputeMenu} {pcOnly userInteraction} {
d509 1
a509 1
test menuDraw-16.6 {TkPostSubMenu} {pcOnly userInteraction} {
d535 1
a535 1
test menuDraw-17.2 {AdjustMenuCoords - menu} {pcOnly userInteraction} {
a545 1
# cleanup
a546 15
::tcltest::cleanupTests
return













@


1.1.1.3
log
@import tk 8.4.0
@
text
@d8 1
a8 1
# RCS: @@(#) $Id: menuDraw.test,v 1.5 2002/07/13 20:28:35 dgp Exp $
d10 21
a30 6
package require tcltest 2.1
namespace import -force tcltest::configure
namespace import -force tcltest::testsDirectory
configure -testdir [file join [pwd] [file dirname [info script]]]
configure -loadfile [file join [testsDirectory] constraints.tcl]
tcltest::loadTestedCommands
d171 1
a171 1
    set tearoff [tk::TearOffMenu .m1]
d179 1
a179 1
    set tearoff [tk::TearOffMenu .m1]
d199 1
a199 1
    tk::TearOffMenu .m1
d206 1
a206 1
    list [catch {tk::TearOffMenu .m1}] [destroy .m1]
d239 1
a239 1
test menuDraw-11.1 {TkMenuSelectImageProc - entry selected; redraw not pending} testImageType {
d247 1
a247 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d251 1
a251 1
test menuDraw-11.2 {TkMenuSelectImageProc - entry selected; redraw pending} testImageType {
d259 1
a259 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d262 1
a262 1
test menuDraw-11.3 {TkMenuSelectImageProc - entry not selected} testImageType {
d269 1
a269 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d285 1
a285 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d292 1
a292 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d300 1
a300 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d309 1
a309 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d318 1
a318 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d330 1
a330 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d344 1
a344 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d356 2
a357 2
    set tearoff1 [tk::TearOffMenu .m1 40 40]
    set tearoff2 [tk::TearOffMenu .m2 40 40]
d364 1
a364 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d372 1
a372 1
    tk::TearOffMenu .t2.m1 40 40
d391 1
a391 1
test menuDraw-14.1 {TkMenuImageProc} testImageType {
d400 1
a400 1
test menuDraw-14.2 {TkMenuImageProc} testImageType {
d413 1
a413 1
    list [catch {tk::TearOffMenu .m1 40 40}] [destroy .m1]
d419 1
a419 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d427 1
a427 1
    list [catch {tk::TearOffMenu .m1 40 40}] [set foo] [unset foo] [destroy .m1]
d433 1
a433 1
    list [catch {tk::TearOffMenu .m1 40 40} msg] $msg [winfo exists .m1]
d440 1
a440 1
    list [catch {tk::TearOffMenu .m1 40 $height}] [destroy .m1]
d447 1
a447 1
    list [catch {tk::TearOffMenu .m1 $width 40}] [destroy .m1]
d458 1
a458 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d473 1
a473 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d487 1
a487 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d496 1
a496 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d506 1
a506 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d532 1
a532 1
    set tearoff [tk::TearOffMenu .m1 40 40]
@


