head	1.5;
access;
symbols
	sid-snapshot-20180601:1.5
	sid-snapshot-20180501:1.5
	sid-snapshot-20180401:1.5
	sid-snapshot-20180301:1.5
	sid-snapshot-20180201:1.5
	sid-snapshot-20180101:1.5
	sid-snapshot-20171201:1.5
	sid-snapshot-20171101:1.5
	sid-snapshot-20171001:1.5
	sid-snapshot-20170901:1.5
	sid-snapshot-20170801:1.5
	sid-snapshot-20170701:1.5
	sid-snapshot-20170601:1.5
	sid-snapshot-20170501:1.5
	sid-snapshot-20170401:1.5
	sid-snapshot-20170301:1.5
	sid-snapshot-20170201:1.5
	sid-snapshot-20170101:1.5
	sid-snapshot-20161201:1.5
	sid-snapshot-20161101:1.5
	sid-snapshot-20160901:1.5
	sid-snapshot-20160801:1.5
	sid-snapshot-20160701:1.5
	sid-snapshot-20160601:1.5
	sid-snapshot-20160501:1.5
	sid-snapshot-20160401:1.5
	sid-snapshot-20160301:1.5
	sid-snapshot-20160201:1.5
	sid-snapshot-20160101:1.5
	sid-snapshot-20151201:1.5
	sid-snapshot-20151101:1.5
	sid-snapshot-20151001:1.5
	sid-snapshot-20150901:1.5
	sid-snapshot-20150801:1.5
	sid-snapshot-20150701:1.5
	sid-snapshot-20150601:1.5
	sid-snapshot-20150501:1.5
	sid-snapshot-20150401:1.5
	sid-snapshot-20150301:1.5
	sid-snapshot-20150201:1.5
	sid-snapshot-20150101:1.5
	sid-snapshot-20141201:1.5
	sid-snapshot-20141101:1.5
	sid-snapshot-20141001:1.5
	sid-snapshot-20140901:1.5
	sid-snapshot-20140801:1.5
	sid-snapshot-20140701:1.5
	sid-snapshot-20140601:1.5
	sid-snapshot-20140501:1.5
	sid-snapshot-20140401:1.5
	sid-snapshot-20140301:1.5
	sid-snapshot-20140201:1.5
	sid-snapshot-20140101:1.5
	sid-snapshot-20131201:1.5
	sid-snapshot-20131101:1.5
	sid-snapshot-20131001:1.5
	sid-snapshot-20130901:1.5
	sid-snapshot-20130801:1.5
	sid-snapshot-20130701:1.5
	sid-snapshot-20130601:1.5
	insight_7_6-2013-04-10-branchpoint:1.5
	gdb_7_6-branch:1.5.0.28
	sid-snapshot-20130501:1.5
	sid-snapshot-20130401:1.5
	sid-snapshot-20130301:1.5
	sid-snapshot-20130201:1.5
	sid-snapshot-20130101:1.5
	sid-snapshot-20121201:1.5
	sid-snapshot-20121101:1.5
	sid-snapshot-20121001:1.5
	sid-snapshot-20120901:1.5
	gdb_7_5-branch:1.5.0.26
	sid-snapshot-20120801:1.5
	sid-snapshot-20120701:1.5
	sid-snapshot-20120601:1.5
	sid-snapshot-20120501:1.5
	sid-snapshot-20120401:1.5
	gdb_7_4-branch:1.5.0.24
	sid-snapshot-20120301:1.5
	sid-snapshot-20120201:1.5
	sid-snapshot-20120101:1.5
	sid-snapshot-20111201:1.5
	sid-snapshot-20111101:1.5
	sid-snapshot-20111001:1.5
	sid-snapshot-20110901:1.5
	gdb_7_3-branch:1.5.0.22
	sid-snapshot-20110801:1.5
	sid-snapshot-20110701:1.5
	sid-snapshot-20110601:1.5
	sid-snapshot-20110501:1.5
	sid-snapshot-20110401:1.5
	sid-snapshot-20110301:1.5
	sid-snapshot-20110201:1.5
	sid-snapshot-20110101:1.5
	sid-snapshot-20101201:1.5
	sid-snapshot-20101101:1.5
	sid-snapshot-20101001:1.5
	sid-snapshot-20100901:1.5
	sid-snapshot-20100801:1.5
	sid-snapshot-20100701:1.5
	sid-snapshot-20100601:1.5
	sid-snapshot-20100501:1.5
	sid-snapshot-20100401:1.5
	sid-snapshot-20100301:1.5
	gdb_7_1-branch:1.5.0.20
	gdb_7_0-branch:1.5.0.18
	sid-snapshot-20100201:1.5
	sid-snapshot-20100101:1.5
	sid-snapshot-20091201:1.5
	sid-snapshot-20091101:1.5
	sid-snapshot-20091001:1.5
	arc-sim-20090309:1.5
	sid-snapshot-20090901:1.5
	sid-snapshot-20090801:1.5
	sid-snapshot-20090701:1.5
	sid-snapshot-20090601:1.5
	sid-snapshot-20090501:1.5
	kevinb-pre-tk8_5_7_merge:1.5
	sid-snapshot-20090401:1.5
	arc-insight_6_8-branch:1.5.0.16
	arc-insight_6_8-branchpoint:1.5
	insight_6_8-branch:1.5.0.14
	insight_6_8-branchpoint:1.5
	sid-snapshot-20090301:1.5
	sid-snapshot-20090201:1.5
	sid-snapshot-20090101:1.5
	sid-snapshot-20081201:1.5
	sid-snapshot-20081101:1.5
	sid-snapshot-20081001:1.5
	sid-snapshot-20080901:1.5
	sid-snapshot-20080801:1.5
	sid-snapshot-20080701:1.5
	sid-snapshot-20080601:1.5
	sid-snapshot-20080501:1.5
	sid-snapshot-20080403:1.5
	sid-snapshot-20080401:1.5
	gdb_6_8-branch:1.5.0.12
	sid-snapshot-20080301:1.5
	sid-snapshot-20080201:1.5
	sid-snapshot-20080101:1.5
	sid-snapshot-20071201:1.5
	sid-snapshot-20071101:1.5
	sid-snapshot-20071001:1.5
	insight_6_6-20070208-release:1.5
	gdb_6_6-branch:1.5.0.10
	gdb_6_6-2006-11-15-branchpoint:1.5
	insight_6_5-20061003-release:1.5
	gdb_6_5-branch:1.5.0.8
	gdb_6_5-2006-05-14-branchpoint:1.5
	gdb_6_4-branch:1.5.0.6
	gdb_6_4-2005-11-01-branchpoint:1.5
	gdb_6_1-2004-04-05-release:1.5
	gdb_6_1-branch:1.5.0.4
	gdb_6_1-2004-03-01-gmt-branchpoint:1.5
	gdb_6_0-2003-10-04-release:1.5
	gdb_6_0-branch:1.5.0.2
	gdb_6_0-2003-06-23-branchpoint:1.5
	TK8_4_1:1.1.1.3
	gdb_5_3-2002-12-12-release:1.2
	tcltk840-20020924-branch:1.3.0.2
	tcltk840-20020924-branchpoint:1.3
	TK_8_4_0:1.1.1.3
	sid-20020905-branchpoint:1.2
	sid-20020905-branch:1.2.0.6
	gdb_5_3-branch:1.2.0.4
	gdb_5_3-2002-09-04-branchpoint:1.2
	gdb_5_2_1-2002-07-23-release:1.2
	gdb_5_2-2002-04-29-release:1.2
	gdb_5_2-branch:1.2.0.2
	gdb_5_2-2002-03-03-branchpoint:1.2
	gdb_5_1_1-2002-01-24-release:1.1.1.1
	cygnus_cvs_20020108_pre:1.2
	gdb_5_1_0_1-2002-01-03-branch:1.1.1.1.0.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.1.1.1
	gdb_5_1-2001-11-21-release:1.1.1.1
	gdb_s390-2001-09-26-branch:1.1.1.1.0.6
	gdb_s390-2001-09-26-branchpoint:1.1.1.1
	TK_8_3:1.1.1.2
	NET:1.1.1
	gdb_5_1-2001-07-29-branch:1.1.1.1.0.4
	gdb_5_1-2001-07-29-branchpoint:1.1.1.1
	insight-precleanup-2001-01-01:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	insight-2000-02-04:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.5
date	2003.01.21.20.24.51;	author hunt;	state Exp;
branches;
next	1.4;

1.4
date	2003.01.21.19.53.16;	author hunt;	state Exp;
branches;
next	1.3;

1.3
date	2002.09.24.18.39.29;	author kseitz;	state Exp;
branches;
next	1.2;

1.2
date	2001.09.10.01.16.54;	author irox;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.07.00.19.30;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.07.00.19.30;	author jsm;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2001.09.10.00.22.37;	author irox;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.09.24.20.39.10;	author kseitz;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Updated to tk 8.4.1
@
text
@# This file is a Tcl script to test menus in Tk.  It is
# organized in the standard fashion for Tcl tests. This
# file tests the Macintosh-specific features of the menu
# system.
#
# Copyright (c) 1995-1996 Sun Microsystems, Inc.
# Copyright (c) 1998-1999 by Scriptics Corporation.
# All rights reserved.
#
# RCS: @@(#) $Id: winMenu.test,v 1.6 2002/07/13 20:28:36 dgp Exp $

package require tcltest 2.1
namespace import -force tcltest::configure
namespace import -force tcltest::testsDirectory
configure -testdir [file join [pwd] [file dirname [info script]]]
configure -loadfile [file join [testsDirectory] constraints.tcl]
tcltest::loadTestedCommands

test winMenu-1.1 {GetNewID} {pcOnly} {
    catch {destroy .m1}
    list [catch {menu .m1} msg] $msg [destroy .m1]
} {0 .m1 {}}
# Basically impossible to test menu IDs wrapping.

test winMenu-2.1 {FreeID} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    list [catch {destroy .m1} msg] $msg
} {0 {}}

test winMenu-3.1 {TkpNewMenu} {pcOnly} {
    catch {destroy .m1}
    list [catch {menu .m1} msg] $msg [catch {destroy .m1} msg2] $msg2
} {0 .m1 0 {}}
test winMenu-3.2 {TkpNewMenu} {pcOnly} {
    catch {destroy .m1}
    . configure -menu ""
    menu .m1
    .m1 add command -label "foo"
    list [catch {. configure -menu .m1} msg] $msg [. configure -menu ""] [catch {destroy .m1} msg2] $msg2
} {0 {} {} 0 {}}

test winMenu-4.1 {TkpDestroyMenu} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    list [catch {destroy .m1} msg] $msg
} {0 {}}
test winMenu-4.2 {TkpDestroyMenu - help menu} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add cascade -menu .m1.system
    . configure -menu .m1
    list [catch {destroy .m1.system} msg] $msg [. configure -menu ""] [destroy .m1]
} {0 {} {} {}}

test winMenu-5.1 {TkpDestroyMenuEntry} {pcOnly} {
    catch {destroy .m1}
    . configure -menu ""
    menu .m1
    .m1 add command -label "test"
    update idletasks
    list [catch {.m1 delete 1} msg] $msg [destroy .m1]
} {0 {} {}}

test winMenu-6.1 {GetEntryText} {pcOnly} {
    catch {destroy .m1}
    list [catch {menu .m1} msg] $msg [destroy .m1]
} {0 .m1 {}}
test winMenu-6.2 {GetEntryText} {testImageType pcOnly} {
    catch {destroy .m1}
    catch {image delete image1}
    menu .m1
    image create test image1
    list [catch {.m1 add command -image image1} msg] $msg [destroy .m1] [image delete image1]
} {0 {} {} {}}
test winMenu-6.3 {GetEntryText} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    list [catch {.m1 add command -bitmap questhead} msg] $msg [destroy .m1]
} {0 {} {}}
test winMenu-6.4 {GetEntryText} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    list [catch {.m1 add command} msg] $msg [destroy .m1]
} {0 {} {}}
test winMenu-6.5 {GetEntryText} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    list [catch {.m1 add command -label "foo"} msg] $msg [destroy .m1]
} {0 {} {}}
test winMenu-6.6 {GetEntryText} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    list [catch {.m1 add command -label "This string has one & in it"} msg] $msg [destroy .m1]
} {0 {} {}}
test winMenu-6.7 {GetEntryText} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    list [catch {.m1 add command -label "The & should be underlined." -underline 4} msg] $msg [destroy .m1]
} {0 {} {}}
test winMenu-6.8 {GetEntryText} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    list [catch {.m1 add command -label "The * should be underlined." -underline 4} msg] $msg [destroy .m1]
} {0 {} {}}
test winMenu-6.9 {GetEntryText} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    list [catch {.m1 add command -label "foo" -accel "bar"} msg] $msg [destroy .m1]
} {0 {} {}}
test winMenu-6.10 {GetEntryText} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    list [catch {.m1 add command -label "This string has one & in it" -accel "bar"} msg] $msg [destroy .m1]
} {0 {} {}}
test winMenu-6.11 {GetEntryText} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    list [catch {.m1 add command -label "The & should be underlined." -underline 4 -accel "bar"} msg] $msg [destroy .m1]
} {0 {} {}}
test winMenu-6.12 {GetEntryText} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    list [catch {.m1 add command -label "The * should be underlined." -underline 4 -accel "bar"} msg] $msg [destroy .m1]
} {0 {} {}}
test winMenu-6.13 {GetEntryText} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    list [catch {.m1 add command -label "foo" -accel "&bar"} msg] $msg [destroy .m1]
} {0 {} {}}
test winMenu-6.14 {GetEntryText} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    list [catch {.m1 add command -label "This string has one & in it" -accel "&bar"} msg] $msg [destroy .m1]
} {0 {} {}}
test winMenu-6.15 {GetEntryText} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    list [catch {.m1 add command -label "The & should be underlined." -underline 4 -accel "&bar"} msg] $msg [destroy .m1]
} {0 {} {}}
test winMenu-6.16 {GetEntryText} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    list [catch {.m1 add command -label "The * should be underlined." -underline 4 -accel "&bar"} msg] $msg [destroy .m1]
} {0 {} {}}

test winMenu-7.1 {ReconfigureWindowsMenu - system menu item removal} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add cascade -menu .m1.system
    menu .m1.system
    .m1.system add command -label foo
    update idletasks
    .m1.system add command -label bar
    list [catch {update idletasks} msg] $msg [. configure -menu ""] [destroy .m1]
} {0 {} {} {}}
test winMenu-7.2 {ReconfigureWindowsMenu - menu item removal} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label Hello
    update idletasks
    .m1 add command -label foo
    list [catch {update idletasks} msg] $msg [destroy .m1]
} {0 {} {}}
test winMenu-7.3 {ReconfigureWindowsMenu - zero items} {pcOnly} {
    catch {destroy .m1}
    menu .m1 -tearoff 0
    .m1 add command -label Hello
    .m1 delete Hello
    list [catch {update idletasks} msg] $msg [destroy .m1]
} {0 {} {}}
test winMenu-7.4 {ReconfigureWindowsMenu - one item} {pcOnly} {
    catch {destroy .m1}
    menu .m1 -tearoff 0
    .m1 add command -label Hello
    list [catch {update idletasks} msg] $msg [destroy .m1]
} {0 {} {}}
test winMenu-7.5 {ReconfigureWindowsMenu - two items} {pcOnly} {
    catch {destroy .m1}
    menu .m1 -tearoff 0
    .m1 add command -label One
    .m1 add command -label Two
    list [catch {update idletasks} msg] $msg [destroy .m1]
} {0 {} {}}
test winMenu-7.6 {ReconfigureWindowsMenu - separator item} {pcOnly} {
    catch {destroy .m1}
    menu .m1 -tearoff 0
    .m1 add separator
    list [catch {update idletasks} msg] $msg [destroy .m1]
} {0 {} {}}
test winMenu-7.7 {ReconfigureWindowsMenu - non-text item} {pcOnly} {
    catch {destroy .m1}
    menu .m1 -tearoff 0
    .m1 add command -label Hello
    list [catch {update idletasks} msg] $msg [destroy .m1]
} {0 {} {}}
test winMenu-7.8 {ReconfigureWindowsMenu - disabled item} {pcOnly} {
    catch {destroy .m1}
    menu .m1 -tearoff 0
    .m1 add command -label Hello -state disabled
    list [catch {update idletasks} msg] $msg [destroy .m1]
} {0 {} {}}
test winMenu-7.9 {ReconfigureWindowsMenu - non-selected checkbutton} {pcOnly} {
    catch {destroy .m1}
    menu .m1 -tearoff 0
    .m1 add checkbutton -label Hello
    list [catch {update idletasks} msg] $msg [destroy .m1]
} {0 {} {}}
test winMenu-7.10 {ReconfigureWindowsMenu - non-selected radiobutton} {pcOnly} {
    catch {destroy .m1}
    menu .m1 -tearoff 0
    .m1 add radiobutton -label Hello
    list [catch {update idletasks} msg] $msg [destroy .m1]
} {0 {} {}}
test winMenu-7.11 {ReconfigureWindowsMenu - selected checkbutton} {pcOnly} {
    catch {destroy .m1}
    menu .m1 -tearoff 0
    .m1 add checkbutton -label Hello
    .m1 invoke Hello
    list [catch {update idletasks} msg] $msg [destroy .m1]
} {0 {} {}}
test winMenu-7.12 {ReconfigureWindowsMenu - selected radiobutton} {pcOnly} {
    catch {destroy .m1}
    menu .m1 -tearoff 0
    .m1 add radiobutton -label Hello
    .m1 invoke Hello
    list [catch {update idletasks} msg] $msg [destroy .m1]
} {0 {} {}}
test winMenu-7.13 {ReconfigureWindowsMenu - cascade missing} {pcOnly} {
    catch {destroy .m1}
    menu .m1 -tearoff 0
    .m1 add cascade -label Hello
    list [catch {update idletasks} msg] $msg [destroy .m1]
} {0 {} {}}
test winMenu-7.14 {ReconfigureWindowsMenu - cascade} {pcOnly} {
    catch {destroy .m1}
    catch {destroy .m2}
    menu .m1 -tearoff 0
    menu .m2
    .m1 add cascade -menu .m2 -label Hello
    list [catch {update idletasks} msg] $msg [destroy .m1] [destroy .m2]
} {0 {} {} {}}
test winMenu-7.15 {ReconfigureWindowsMenu - menubar without system menu} {pcOnly} {
    catch {destroy .m1}
    menu .m1 -tearoff 0
    .m1 add cascade -menu .m1.file
    menu .m1.file -tearoff 0
    . configure -menu .m1
    list [catch {update idletasks} msg] $msg [. configure -menu ""] [destroy .m1]
} {0 {} {} {}}
test winMenu-7.16 {ReconfigureWindowsMenu - system menu already created} {pcOnly} {
    catch {destroy .m1}
    menu .m1 -tearoff 0
    .m1 add cascade -menu .m1.system
    menu .m1.system -tearoff 0
    . configure -menu .m1
    update idletasks
    .m1.system add command -label Hello
    list [catch {update idletasks} msg] $msg [. configure -menu ""] [destroy .m1]
} {0 {} {} {}}
test winMenu-7.17 {ReconfigureWindowsMenu - system menu update pending} {pcOnly} {
    catch {destroy .m1}
    menu .m1 -tearoff 0
    .m1 add cascade -menu .m1.system
    menu .m1.system -tearoff 0
    . configure -menu .m1
    list [catch {update idletasks} msg] $msg [. configure -menu ""] [destroy .m1]
} {0 {} {} {}}
test winMenu-7.18 {ReconfigureWindowsMenu - system menu update not pending} {pcOnly} {
    catch {destroy .m1}
    menu .m1 -tearoff 0
    .m1 add cascade -menu .m1.system
    menu .m1.system -tearoff 0
    .m1.system add command -label Hello
    update idletasks
    . configure -menu .m1
    list [catch {update idletasks} msg] $msg [. configure -menu ""] [destroy .m1]
} {0 {} {} {}}
test winMenu-7.19 {ReconfigureWindowsMenu - column break} {pcOnly} {
    catch {destroy .m1}
    menu .m1 -tearoff 0
    .m1 add command -label one
    .m1 add command -label two -columnbreak 1
    list [catch {update idletasks} msg] $msg [destroy .m1]
} {0 {} {}}

#Don't know how to generate nested post menus
test winMenu-8.1 {TkpPostMenu} {pcOnly} {
    catch {destroy .m1}
    menu .m1 -postcommand "blork"
    list [catch {.m1 post 40 40} msg] $msg [destroy .m1]
} {1 {invalid command name "blork"} {}}
test winMenu-8.2 {TkpPostMenu} {pcOnly} {
    catch {destroy .m1}
    menu .m1 -postcommand "destroy .m1"
    list [.m1 post 40 40] [winfo exists .m1]
} {{} 0}
test winMenu-8.3 {TkpPostMenu - popup menu} {pcOnly userInteraction} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label "winMenu-8.3: Hit ESCAPE."
    list [.m1 post 40 40] [destroy .m1]
} {{} {}}
test winMenu-8.4 {TkpPostMenu - menu button} {pcOnly userInteraction} {
    catch {destroy .mb}
    menubutton .mb -text test -menu .mb.menu
    menu .mb.menu
    .mb.menu add command -label "winMenu-8.4 - Hit ESCAPE."
    pack .mb
    list [tk::MbPost .mb] [destroy .m1]
} {{} {}}
test winMenu-8.5 {TkpPostMenu - update not pending} {pcOnly userInteraction} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label "winMenu-8.5 - Hit ESCAPE."
    update idletasks
    list [catch {.m1 post 40 40} msg] $msg [destroy .m1]
} {0 {} {}}

test winMenu-9.1 {TkpMenuNewEntry} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    list [catch {.m1 add command} msg] $msg [destroy .m1]
} {0 {} {}}

test winMenu-10.1 {TkwinMenuProc} {pcOnly userInteraction} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label "winMenu-10.1: Hit ESCAPE."
    list [.m1 post 40 40] [destroy .m1]
} {{} {}}

# Can't generate a WM_INITMENU without a Tk menu yet.
test winMenu-11.1 {TkWinHandleMenuEvent - WM_INITMENU} {pcOnly userInteraction} {
    catch {destroy .m1}
    catch {unset foo}
    menu .m1 -postcommand "set foo test"
    .m1 add command -label "winMenu-11.1: Hit ESCAPE."
    list [.m1 post 40 40] [set foo] [unset foo] [destroy .m1]
} {test test {} {}}
test winMenu-11.2 {TkWinHandleMenuEvent - WM_COMMAND} {pcOnly userInteraction} {
    catch {destroy .m1}
    catch {unset foo}
    menu .m1
    .m1 add checkbutton -variable foo -label "winMenu-11.2: Please select this menu item."
    list [.m1 post 40 40] [update] [set foo] [unset foo] [destroy .m1]
} {{} {} 1 {} {}}
test winMenu-11.3 {TkWinHandleMenuEvent - WM_COMMAND} {pcOnly userInteraction} {
    catch {destroy .m1}
    catch {unset foo}
    proc bgerror {args} {
	global foo errorInfo
	set foo [list $args $errorInfo]
    }
    menu .m1
    .m1 add command -command {error 1} -label "winMenu-11.2: Please select this menu item."
    list [.m1 post 40 40] [update] [set foo] [unset foo] [destroy .m1]
} {{} {} {1 {1
    while executing
"error 1"
    (menu invoke)}} {} {}}

# Can't test WM_MENUCHAR
test winMenu-11.4 {TkWinHandleMenuEvent - WM_MEASUREITEM} {pcOnly userInteraction} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label "winMenu-11.3: Hit ESCAPE."
    list [.m1 post 40 40] [destroy .m1]
} {{} {}}
test winMenu-11.5 {TkWinHandleMenuEvent - WM_MEASUREITEM} {pcOnly userInteraction} {
    catch {destroy .m1}
    menu .m1
    .m1 add checkbutton -label "winMenu-11.4: Hit ESCAPE" -hidemargin 1
    list [.m1 post 40 40] [destroy .m1]
} {{} {}}
test winMenu-11.6 {TkWinHandleMenuEvent - WM_DRAWITEM} {pcOnly userInteraction} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label "winMenu-11.5: Hit ESCAPE."
    list [.m1 post 40 40] [destroy .m1]
} {{} {}}
test winMenu-11.7 {TkWinHandleMenuEvent - WM_DRAWITEM - item disabled} \
	{pcOnly userInteraction} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label "winMenu-11.6: Hit ESCAPE." -state disabled
    list [.m1 post 40 40] [destroy .m1]
} {{} {}}
test winMenu-11.8 {TkWinHandleMenuEvent - WM_INITMENU - not pending} \
	{pcOnly userInteraction} {
    catch {destroy .m1}
    menu .m1 -tearoff 0
    .m1 add command -label "winMenu-11.7: Hit ESCAPE"
    update idletasks
    list [catch {.m1 post 40 40} msg] $msg [destroy .m1]
} {0 {} {}}

test winMenu-12.1 {TkpSetWindowMenuBar} {pcOnly} {
    catch {destroy .m1}
    . configure -menu ""
    menu .m1
    .m1 add command -label foo
    list [catch {. configure -menu .m1} msg] $msg [. configure -menu ""] [catch {destroy .m1} msg2] $msg2
} {0 {} {} 0 {}}
test winMenu-12.2 {TkpSetWindowMenuBar} {pcOnly} {
    catch {destroy .m1}
    . configure -menu ""
    menu .m1
    .m1 add command -label foo
    . configure -menu .m1
    list [catch {. configure -menu ""} msg] $msg [catch {destroy .m1} msg2] $msg2
} {0 {} 0 {}}
test winMenu-12.3 {TkpSetWindowMenuBar - no update pending} {pcOnly} {
    catch {destroy .m1}
    . configure -menu ""
    menu .m1 -tearoff 0
    .m1 add command -label foo
    update idletasks
    list [catch {. configure -menu .m1} msg] $msg [. configure -menu ""] [destroy .m1]
} {0 {} {} {}}

test winMenu-13.1 {TkpSetMainMenubar - nothing to do} {emptyTest pcOnly} {} {}

test winMenu-14.1 {GetMenuIndicatorGeometry} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add checkbutton -label foo
    list [catch {tk::TearOffMenu .m1 40 40}] [destroy .m1]
} {0 {}}
test winMenu-14.2 {GetMenuIndicatorGeometry} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add checkbutton -label foo -hidemargin 1
    list [catch {tk::TearOffMenu .m1 40 40}] [destroy .m1]
} {0 {}}

test winMenu-15.1 {GetMenuAccelGeometry} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add cascade -label foo -accel Ctrl+U
    list [catch {tk::TearOffMenu .m1 40 40}] [destroy .m1]
} {0 {}}
test winMenu-15.2 {GetMenuAccelGeometry} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label foo
    list [catch {tk::TearOffMenu .m1 40 40}] [destroy .m1]
} {0 {}}
test winMenu-15.3 {GetMenuAccelGeometry} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label foo -accel "Ctrl+U"
    list [catch {tk::TearOffMenu .m1 40 40}] [destroy .m1]
} {0 {}}

test winMenu-16.1 {GetTearoffEntryGeometry} {pcOnly userInteraction} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label "winMenu-19.1: Hit ESCAPE."
    list [.m1 post 40 40] [destroy .m1]
} {{} {}}

test winMenu-17.1 {GetMenuSeparatorGeometry} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add separator
    list [catch {tk::TearOffMenu .m1 40 40}] [destroy .m1]
} {0 {}}

# Currently, the only callers to DrawWindowsSystemBitmap want things
# centered vertically, and either centered or right aligned horizontally.
test winMenu-18.1 {DrawWindowsSystemBitmap - center aligned} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add checkbutton -label foo
    .m1 invoke foo
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [update] [destroy .m1]
} {{} {}}
test winMenu-18.2 {DrawWindowsSystemBitmap - right aligned} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add cascade -label foo
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [update] [destroy .m1]
} {{} {}}

test winMenu-19.1 {DrawMenuEntryIndicator - not checkbutton or radiobutton} \
	{pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label foo
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [update] [destroy .m1]
} {{} {}}
test winMenu-19.2 {DrawMenuEntryIndicator - not selected} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add checkbutton -label foo
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [update] [destroy .m1]
} {{} {}}
test winMenu-19.3 {DrawMenuEntryIndicator - checkbutton} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add checkbutton -label foo
    .m1 invoke foo
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [update] [destroy .m1]
} {{} {}}
test winMenu-19.4 {DrawMenuEntryIndicator - radiobutton} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add radiobutton -label foo
    .m1 invoke foo
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [update] [destroy .m1]
} {{} {}}
test winMenu-19.5 {DrawMenuEntryIndicator - disabled} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add checkbutton -label foo
    .m1 invoke foo
    .m1 entryconfigure foo -state disabled
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [update] [destroy .m1]
} {{} {}}
test winMenu-19.6 {DrawMenuEntryIndicator - indicator not on} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add checkbutton -label foo -indicatoron 0
    .m1 invoke foo
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [update] [destroy .m1]
} {{} {}}

test winMenu-20.1 {DrawMenuEntryAccelerator - disabled} {pcOnly} {
    catch {destroy .m1}
    menu .m1 -disabledforeground red
    .m1 add command -label foo -accel "Ctrl+U" -state disabled
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [update] [destroy .m1]
} {{} {}}
test winMenu-20.2 {DrawMenuEntryAccelerator - normal text} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label foo -accel "Ctrl+U"
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [update] [destroy .m1]
} {{} {}}
test winMenu-20.3 {DrawMenuEntryAccelerator - disabled, no disabledforeground} \
	{pcOnly} {
    catch {destroy .m1}
    menu .m1 -disabledforeground ""
    .m1 add command -label foo -accel "Ctrl+U" -state disabled
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [update] [destroy .m1]
} {{} {}}
test winMenu-20.4 {DrawMenuEntryAccelerator - cascade, drawArrow true} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add cascade -label foo
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [update] [destroy .m1]
} {{} {}}
test winMenu-20.5 {DrawMenuEntryAccelerator - cascade, drawArrow false} \
	{pcOnly userInteraction} {
    catch {destroy .m1}
    menu .m1
    .m1 add cascade -label "winMenu-23.5: Hit ESCAPE."
    list [.m1 post 40 40] [destroy .m1]
} {{} {}}

test winMenu-21.1 {DrawMenuSeparator} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add separator
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [update] [destroy .m1]
} {{} {}}

test winMenu-22.1 {DrawMenuUnderline} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label foo -underline 0
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [update] [destroy .m1]
} {{} {}}   

test winMenu-23.1 {Don't know how to test MenuKeyBindProc} \
	{pcOnly emptyTest} {} {}
test winMenu-24.1 {TkpInitializeMenuBindings called at boot time} \
	{pcOnly emptyTest} {} {}

test winMenu-25.1 {DrawMenuEntryLabel - normal} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label foo
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [update] [destroy .m1]
} {{} {}}
test winMenu-25.2 {DrawMenuEntryLabel - disabled with fg} {pcOnly} {
    catch {destroy .m1}
    menu .m1 -disabledforeground red
    .m1 add command -label foo -state disabled
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [update] [destroy .m1]
} {{} {}}
test winMenu-25.3 {DrawMenuEntryLabel - disabled with no fg} {pcOnly} {
    catch {destroy .m1}
    menu .m1 -disabledforeground ""
    .m1 add command -label foo -state disabled
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [update] [destroy .m1]
} {{} {}}

test winMenu-26.1 {TkpComputeMenubarGeometry} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add cascade -label File
    list [. configure -menu .m1] [. configure -menu ""] [destroy .m1]
} {{} {} {}}

test winMenu-27.1 {DrawTearoffEntry} {pcOnly userInteraction} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label "winMenu-24.4: Hit ESCAPE."
    list [.m1 post 40 40] [destroy .m1]
} {{} {}}

test winMenu-28.1 {TkpConfigureMenuEntry - update pending} {pcOnly} {
    catch {destroy .m1}
    menu .m1 -tearoff 0
    .m1 add command -label Hello
    list [catch {.m1 add command -label Two} msg] $msg [destroy .m1]
} {0 {} {}}
test winMenu-28.2 {TkpConfigureMenuEntry - update not pending} {pcOnly} {
    catch {destroy .m1}
    menu .m1 -tearoff 0
    .m1 add command -label One
    update idletasks
    list [catch {.m1 add command -label Two} msg] $msg [destroy .m1]
} {0 {} {}}

test winMenu-29.1 {TkpDrawMenuEntry - gc for active and not strict motif} \
	{pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label foo
    set tearoff [tk::TearOffMenu .m1 40 40]
    .m1 entryconfigure 1 -state active
    list [update] [destroy .m1]
} {{} {}}
test winMenu-29.2 {TkpDrawMenuEntry - gc for active menu item with its own gc} \
	{pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label foo -activeforeground red
    set tearoff [tk::TearOffMenu .m1 40 40]
    .m1 entryconfigure 1 -state active
    list [update] [destroy .m1]
} {{} {}}
test winMenu-29.3 {TkpDrawMenuEntry - gc for active and strict motif} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    set tk_strictMotif 1
    .m1 add command -label foo
    set tearoff [tk::TearOffMenu .m1 40 40]
    .m1 entryconfigure 1 -state active
    list [update] [destroy .m1] [set tk_strictMotif 0]
} {{} {} 0}
test winMenu-29.4 \
	{TkpDrawMenuEntry - gc for disabled with disabledfg and custom entry} \
	{pcOnly} {
    catch {destroy .m1}
    menu .m1 -disabledforeground blue
    .m1 add command -label foo -state disabled -background red
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [update] [destroy .m1]
} {{} {}}
test winMenu-29.5 {TkpDrawMenuEntry - gc for disabled with disabledFg} {pcOnly} {
    catch {destroy .m1}
    menu .m1 -disabledforeground blue
    .m1 add command -label foo -state disabled
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [update] [destroy .m1]
} {{} {}}
test winMenu-29.6 {TkpDrawMenuEntry - gc for disabled - no disabledFg} {pcOnly} {
    catch {destroy .m1}
    menu .m1 -disabledforeground ""
    .m1 add command -label foo -state disabled
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [update] [destroy .m1]
} {{} {}}
test winMenu-29.7 {TkpDrawMenuEntry - gc for normal - custom entry} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label foo -foreground red
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [update] [destroy .m1]
} {{} {}}
test winMenu-29.8 {TkpDrawMenuEntry - gc for normal} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label foo
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [update] [destroy .m1]
} {{} {}}
test winMenu-29.9 {TkpDrawMenuEntry - gc for indicator - custom entry} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add checkbutton -label foo -selectcolor orange
    .m1 invoke 1
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [update] [destroy .m1]
} {{} {}}
test winMenu-29.10 {TkpDrawMenuEntry - gc for indicator} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add checkbutton -label foo
    .m1 invoke 1
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [update] [destroy .m1]
} {{} {}}
test winMenu-29.11 {TkpDrawMenuEntry - border - custom entry} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label foo -activebackground green
    set tearoff [tk::TearOffMenu .m1 40 40]
    .m1 entryconfigure 1 -state active
    list [update] [destroy .m1]
} {{} {}}
test winMenu-29.12 {TkpDrawMenuEntry - border} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label foo
    set tearoff [tk::TearOffMenu .m1 40 40]
    .m1 entryconfigure 1 -state active
    list [update] [destroy .m1]
} {{} {}}
test winMenu-29.13 {TkpDrawMenuEntry - active border - strict motif} {pcOnly} {
    catch {destroy .m1}
    set tk_strictMotif 1
    menu .m1
    .m1 add command -label foo
    set tearoff [tk::TearOffMenu .m1 40 40]
    .m1 entryconfigure 1 -state active
    list [update] [destroy .m1] [set tk_strictMotif 0]
} {{} {} 0}
test winMenu-29.14 {TkpDrawMenuEntry - active border - custom entry} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label foo -activeforeground yellow
    set tearoff [tk::TearOffMenu .m1 40 40]
    .m1 entryconfigure 1 -state active
    list [update] [destroy .m1]
} {{} {}}
test winMenu-29.15 {TkpDrawMenuEntry - active border} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label foo
    set tearoff [tk::TearOffMenu .m1 40 40]
    .m1 entryconfigure 1 -state active
    list [update] [destroy .m1]
} {{} {}}
test winMenu-29.16 {TkpDrawMenuEntry - font - custom entry} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label foo -font "Helvectica 72"
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [update] [destroy .m1]
} {{} {}}
test winMenu-29.17 {TkpDrawMenuEntry - font} {pcOnly} {
    catch {destroy .m1}
    menu .m1 -font "Courier 72"
    .m1 add command -label foo
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [update] [destroy .m1]
} {{} {}}
test winMenu-29.18 {TkpDrawMenuEntry - separator} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add separator
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [update] [destroy .m1]
} {{} {}}
test winMenu-29.19 {TkpDrawMenuEntry - standard} {pcOnly} {
    catch {destroy .mb}
    menu .m1
    .m1 add command -label foo
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [update] [destroy .m1]
} {{} {}}
test winMenu-29.20 {TkpDrawMenuEntry - disabled cascade item} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add cascade -label File -menu .m1.file
    menu .m1.file
    .m1.file add command -label foo
    .m1 entryconfigure File -state disabled
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [update] [destroy .m1]
} {{} {}}
test winMenu-29.21 {TkpDrawMenuEntry - indicator} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add checkbutton -label winMenu-31.20
    .m1 invoke winMenu-31.20
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [update] [destroy .m1]
} {{} {}}
test winMenu-29.22 {TkpDrawMenuEntry - indicator} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add checkbutton -label winMenu-31.21 -hidemargin 1
    .m1 invoke winMenu-31.21
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [update] [destroy .m1]
} {{} {}}

test winMenu-30.1 {GetMenuLabelGeometry - image} {testImageType pcOnly} {
    catch {destroy .m1}
    catch {image delete image1}
    menu .m1
    image create test image1
    .m1 add command -image image1
    list [update idletasks] [destroy .m1] [image delete image1]
} {{} {} {}}
test winMenu-30.2 {GetMenuLabelGeometry - bitmap} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -bitmap questhead
    list [update idletasks] [destroy .m1]
} {{} {}}
test winMenu-30.3 {GetMenuLabelGeometry - no text} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add command
    list [update idletasks] [destroy .m1]
} {{} {}}
test winMenu-30.4 {GetMenuLabelGeometry - text} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label "This is a test."
    list [update idletasks] [destroy .m1]
} {{} {}}

test winMenu-31.1 {DrawMenuEntryBackground} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label foo
    set tearoff [tk::TearOffMenu .m1 40 40]
    list [update] [destroy .m1]
} {{} {}}
test winMenu-31.2 {DrawMenuEntryBackground} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label foo
    set tearoff [tk::TearOffMenu .m1 40 40]
    $tearoff activate 0
    list [update] [destroy .m1]
} {{} {}}

test winMenu-32.1 {TkpComputeStandardMenuGeometry - no entries} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    list [update idletasks] [destroy .m1]
} {{} {}}
test winMenu-32.2 {TkpComputeStandardMenuGeometry - one entry} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label "one"
    list [update idletasks] [destroy .m1]
} {{} {}}
test winMenu-32.3 {TkpComputeStandardMenuGeometry - more than one entry} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label "one"
    .m1 add command -label "two"
    list [update idletasks] [destroy .m1]
} {{} {}}
test winMenu-32.4 {TkpComputeStandardMenuGeometry - separator} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add separator
    list [update idletasks] [destroy .m1]
} {{} {}}
test winMenu-32.5 {TkpComputeStandardMenuGeometry - tearoff entry} {unixOnly} {
    catch {destroy .m1}
    menubutton .mb -text "test" -menu .mb.m
    menu .mb.m
    .mb.m add command -label test
    pack .mb
    catch {tk::MbPost .mb}
    list [update] [destroy .mb]
} {{} {}}
test winMenu-32.6 {TkpComputeStandardMenuGeometry - standard label geometry} \
	{pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label "test"
    list [update idletasks] [destroy .m1]
} {{} {}}
test winMenu-32.7 {TkpComputeStandardMenuGeometry - different font for entry} \
	{pcOnly} {
    catch {destroy .m1}
    menu .m1 -font "Helvetica 12"
    .m1 add command -label "test" -font "Courier 12"
    list [update idletasks] [destroy .m1]
} {{} {}}
test winMenu-32.8 {TkpComputeStandardMenuGeometry - second entry larger} \
	{pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label "test"
    .m1 add command -label "test test"
    list [update idletasks] [destroy .m1]
} {{} {}}
test winMenu-32.9 {TkpComputeStandardMenuGeometry - first entry larger} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label "test test"
    .m1 add command -label "test"
    list [update idletasks] [destroy .m1]
} {{} {}}
test winMenu-32.10 {TkpComputeStandardMenuGeometry - accelerator} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label "test" -accel "Ctrl+S"
    list [update idletasks] [destroy .m1]
} {{} {}}
test winMenu-32.11 {TkpComputeStandardMenuGeometry - second accel larger} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label "test" -accel "1"
    .m1 add command -label "test" -accel "1 1"
    list [update idletasks] [destroy .m1]
} {{} {}}
test winMenu-32.12 {TkpComputeStandardMenuGeometry - second accel smaller} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label "test" -accel "1 1"
    .m1 add command -label "test" -accel "1"
    list [update idletasks] [destroy .m1]
} {{} {}}
test winMenu-32.13 {TkpComputeStandardMenuGeometry - indicator} {pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add checkbutton -label test
    .m1 invoke 1
    list [update idletasks] [destroy .m1]
} {{} {}}
test winMenu-32.14 \
	{TkpComputeStandardMenuGeometry - second indicator less or equal} \
	{testImageType pcOnly} {
    catch {destroy .m1}
    catch {image delete image1}
    image create test image1
    menu .m1
    .m1 add checkbutton -image image1
    .m1 invoke 1
    .m1 add checkbutton -label test
    .m1 invoke 2
    list [update idletasks] [destroy .m1] [image delete image1]
} {{} {} {}}
test winMenu-32.15 {TkpComputeStandardMenuGeometry - second indicator larger} \
	{testImageType unixOnly} {
    catch {destroy .m1}
    catch {image delete image1}
    image create test image1
    menu .m1
    .m1 add checkbutton -image image1
    .m1 invoke 1
    .m1 add checkbutton -label test
    .m1 invoke 2
    list [update idletasks] [destroy .m1] [image delete image1]
} {{} {} {}}
test winMenu-32.16 {TkpComputeStandardMenuGeometry - zero sized menus} \
	{pcOnly} {
    catch {destroy .m1}
    menu .m1 -tearoff 0
    list [update idletasks] [destroy .m1]
} {{} {}}
test winMenu-32.17 {TkpComputeStandardMenuGeometry - first column bigger} \
	{pcOnly} {
    catch {destroy .m1}
    menu .m1
    .m1 add command -label one
    .m1 add command -label two
    .m1 add command -label three -columnbreak 1
    list [update idletasks] [destroy .m1]
} {{} {}}
test winMenu-32.18 {TkpComputeStandardMenuGeometry - second column bigger} \
	{pcOnly} {
    catch {destroy .m1}
    menu .m1 -tearoff 0
    .m1 add command -label one
    .m1 add command -label two -columnbreak 1
    .m1 add command -label three
    list [update idletasks] [destroy .m1]
} {{} {}}
test winMenu-32.19 {TkpComputeStandardMenuGeometry - three columns} {pcOnly} {
    catch {destroy .m1}
    menu .m1 -tearoff 0
    .m1 add command -label one
    .m1 add command -label two -columnbreak 1
    .m1 add command -label three
    .m1 add command -label four
    .m1 add command -label five -columnbreak 1
    .m1 add command -label six
    list [update idletasks] [destroy .m1]    
} {{} {}}

test winMenu-33.1 {TkpNotifyTopLevelCreate - no menu yet} {pcOnly} {
    catch {destroy .t2}
    catch {destroy .m1}
    toplevel .t2 -menu .m1
    wm geometry .t2 +0+0
    list [update idletasks] [destroy .t2]
} {{} {}}
test winMenu-33.2 {TkpNotifyTopLevelCreate - menu} {pcOnly} {
    catch {destroy .t2}
    catch {destroy .m1}
    menu .m1
    menu .m1.system
    .m1 add cascade -menu .m1.system
    .m1.system add separator
    .m1.system add command -label foo
    toplevel .t2 -menu .m1
    wm geometry .t2 +0+0
    list [update idletasks] [destroy .m1] [destroy .t2]
} {{} {} {}}

test winMenu-34.1 {TkpMenuInit called at boot time} {emptyTest pcOnly} {} {}

# cleanup
deleteWindows
::tcltest::cleanupTests
return












@


1.4
log
@touched all sources to ease next import
@
text
@d10 1
a10 1
# RCS: @@(#) $Id: winMenu.test,v 1.7.6.1 2000/05/04 21:26:30 spolk Exp $
d12 6
a17 21
if {[lsearch [namespace children] ::tcltest] == -1} {
    source [file join [pwd] [file dirname [info script]] defs.tcl]
}

if {[lsearch [image types] test] < 0} {
    puts "This application hasn't been compiled with the \"test\" image"
    puts "type, so I can't run this test.  Are you sure you're using"
    puts "tktest instead of wish?"
    ::tcltest::cleanupTests
    return
}

proc deleteWindows {} {
    foreach i [winfo children .] {
    	catch [destroy $i]
    }
}

deleteWindows
wm geometry . {}
raise .
d69 1
a69 1
test winMenu-6.2 {GetEntryText} {pcOnly} {
d310 1
a310 1
    list [tkMbPost .mb] [destroy .m1]
d428 1
a428 1
    list [catch {tkTearOffMenu .m1 40 40}] [destroy .m1]
d434 1
a434 1
    list [catch {tkTearOffMenu .m1 40 40}] [destroy .m1]
d441 1
a441 1
    list [catch {tkTearOffMenu .m1 40 40}] [destroy .m1]
d447 1
a447 1
    list [catch {tkTearOffMenu .m1 40 40}] [destroy .m1]
d453 1
a453 1
    list [catch {tkTearOffMenu .m1 40 40}] [destroy .m1]
d467 1
a467 1
    list [catch {tkTearOffMenu .m1 40 40}] [destroy .m1]
d477 1
a477 1
    set tearoff [tkTearOffMenu .m1 40 40]
d484 1
a484 1
    set tearoff [tkTearOffMenu .m1 40 40]
d493 1
a493 1
    set tearoff [tkTearOffMenu .m1 40 40]
d500 1
a500 1
    set tearoff [tkTearOffMenu .m1 40 40]
d508 1
a508 1
    set tearoff [tkTearOffMenu .m1 40 40]
d516 1
a516 1
    set tearoff [tkTearOffMenu .m1 40 40]
d525 1
a525 1
    set tearoff [tkTearOffMenu .m1 40 40]
d533 1
a533 1
    set tearoff [tkTearOffMenu .m1 40 40]
d541 1
a541 1
    set tearoff [tkTearOffMenu .m1 40 40]
d548 1
a548 1
    set tearoff [tkTearOffMenu .m1 40 40]
d556 1
a556 1
    set tearoff [tkTearOffMenu .m1 40 40]
d563 1
a563 1
    set tearoff [tkTearOffMenu .m1 40 40]
d578 1
a578 1
    set tearoff [tkTearOffMenu .m1 40 40]
d586 1
a586 1
    set tearoff [tkTearOffMenu .m1 40 40]
d599 1
a599 1
    set tearoff [tkTearOffMenu .m1 40 40]
d606 1
a606 1
    set tearoff [tkTearOffMenu .m1 40 40]
d613 1
a613 1
    set tearoff [tkTearOffMenu .m1 40 40]
d650 1
a650 1
    set tearoff [tkTearOffMenu .m1 40 40]
d659 1
a659 1
    set tearoff [tkTearOffMenu .m1 40 40]
d668 1
a668 1
    set tearoff [tkTearOffMenu .m1 40 40]
d678 1
a678 1
    set tearoff [tkTearOffMenu .m1 40 40]
d685 1
a685 1
    set tearoff [tkTearOffMenu .m1 40 40]
d692 1
a692 1
    set tearoff [tkTearOffMenu .m1 40 40]
d699 1
a699 1
    set tearoff [tkTearOffMenu .m1 40 40]
d706 1
a706 1
    set tearoff [tkTearOffMenu .m1 40 40]
d714 1
a714 1
    set tearoff [tkTearOffMenu .m1 40 40]
d722 1
a722 1
    set tearoff [tkTearOffMenu .m1 40 40]
d729 1
a729 1
    set tearoff [tkTearOffMenu .m1 40 40]
d737 1
a737 1
    set tearoff [tkTearOffMenu .m1 40 40]
d746 1
a746 1
    set tearoff [tkTearOffMenu .m1 40 40]
d754 1
a754 1
    set tearoff [tkTearOffMenu .m1 40 40]
d762 1
a762 1
    set tearoff [tkTearOffMenu .m1 40 40]
d770 1
a770 1
    set tearoff [tkTearOffMenu .m1 40 40]
d777 1
a777 1
    set tearoff [tkTearOffMenu .m1 40 40]
d784 1
a784 1
    set tearoff [tkTearOffMenu .m1 40 40]
d791 1
a791 1
    set tearoff [tkTearOffMenu .m1 40 40]
d801 1
a801 1
    set tearoff [tkTearOffMenu .m1 40 40]
d809 1
a809 1
    set tearoff [tkTearOffMenu .m1 40 40]
d817 1
a817 1
    set tearoff [tkTearOffMenu .m1 40 40]
d821 1
a821 1
test winMenu-30.1 {GetMenuLabelGeometry - image} {pcOnly} {
d852 1
a852 1
    set tearoff [tkTearOffMenu .m1 40 40]
d859 1
a859 1
    set tearoff [tkTearOffMenu .m1 40 40]
d894 1
a894 1
    catch {tkMbPost .mb}
d955 1
a955 1
	{pcOnly} {
d967 1
a967 1
	{unixOnly} {
@


1.3
log
@touched all sources to ease next import
@
text
@@


1.2
log
@touched all tk files to ease next import
@
text
@@


1.1
log
@Initial revision
@
text
@d7 2
d10 1
a10 8
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
# RCS: @@(#) $Id: winMenu.test,v 1.2 1998/09/14 18:23:53 stanton Exp $

if {$tcl_platform(platform) != "windows"} {
    return
}
d12 2
a13 8
if {![info exists INTERACTIVE]} {
    puts " Some tests were skipped because they could not be performed"
    puts " automatically on this platform. If you wish to execute them"
    puts " interactively, set the TCL variable INTERACTIVE and re-run"
    puts " the test."
    set testConfig(menuInteractive) 0
} else {
    set testConfig(menuInteractive) 1
d20 1
a23 4
if {[info procs test] != "test"} {
    source defs
}

d34 1
a34 1
test winMenu-1.1 {GetNewID} {
d40 1
a40 1
test winMenu-2.1 {FreeID} {
d46 1
a46 1
test winMenu-3.1 {TkpNewMenu} {
d50 1
a50 1
test winMenu-3.2 {TkpNewMenu} {
d58 1
a58 1
test winMenu-4.1 {TkpDestroyMenu} {
d63 1
a63 1
test winMenu-4.2 {TkpDestroyMenu - help menu} {
d71 1
a71 1
test winMenu-5.1 {TkpDestroyMenuEntry} {
d80 1
a80 1
test winMenu-6.1 {GetEntryText} {
d84 1
a84 1
test winMenu-6.2 {GetEntryText} {
d91 1
a91 1
test winMenu-6.3 {GetEntryText} {
d96 1
a96 1
test winMenu-6.4 {GetEntryText} {
d101 1
a101 1
test winMenu-6.5 {GetEntryText} {
d106 1
a106 1
test winMenu-6.6 {GetEntryText} {
d111 1
a111 1
test winMenu-6.7 {GetEntryText} {
d116 1
a116 1
test winMenu-6.8 {GetEntryText} {
d121 1
a121 1
test winMenu-6.9 {GetEntryText} {
d126 1
a126 1
test winMenu-6.10 {GetEntryText} {
d131 1
a131 1
test winMenu-6.11 {GetEntryText} {
d136 1
a136 1
test winMenu-6.12 {GetEntryText} {
d141 1
a141 1
test winMenu-6.13 {GetEntryText} {
d146 1
a146 1
test winMenu-6.14 {GetEntryText} {
d151 1
a151 1
test winMenu-6.15 {GetEntryText} {
d156 1
a156 1
test winMenu-6.16 {GetEntryText} {
d162 1
a162 1
test winMenu-7.1 {ReconfigureWindowsMenu - system menu item removal} {
d172 1
a172 1
test winMenu-7.2 {ReconfigureWindowsMenu - menu item removal} {
d180 1
a180 1
test winMenu-7.3 {ReconfigureWindowsMenu - zero items} {
d187 1
a187 1
test winMenu-7.4 {ReconfigureWindowsMenu - one item} {
d193 1
a193 1
test winMenu-7.5 {ReconfigureWindowsMenu - two items} {
d200 1
a200 1
test winMenu-7.6 {ReconfigureWindowsMenu - separator item} {
d206 1
a206 1
test winMenu-7.7 {ReconfigureWindowsMenu - non-text item} {
d212 1
a212 1
test winMenu-7.8 {ReconfigureWindowsMenu - disabled item} {
d218 1
a218 1
test winMenu-7.9 {ReconfigureWindowsMenu - non-selected checkbutton} {
d224 1
a224 1
test winMenu-7.10 {ReconfigureWindowsMenu - non-selected radiobutton} {
d230 1
a230 1
test winMenu-7.11 {ReconfigureWindowsMenu - selected checkbutton} {
d237 1
a237 1
test winMenu-7.12 {ReconfigureWindowsMenu - selected radiobutton} {
d244 1
a244 1
test winMenu-7.13 {ReconfigureWindowsMenu - cascade missing} {
d250 1
a250 1
test winMenu-7.14 {ReconfigureWindowsMenu - cascade} {
d258 1
a258 1
test winMenu-7.15 {ReconfigureWindowsMenu - menubar without system menu} {
d266 1
a266 1
test winMenu-7.16 {ReconfigureWindowsMenu - system menu already created} {
d276 1
a276 1
test winMenu-7.17 {ReconfigureWindowsMenu - system menu update pending} {
d284 1
a284 1
test winMenu-7.18 {ReconfigureWindowsMenu - system menu update not pending} {
d294 1
a294 1
test winMenu-7.19 {ReconfigureWindowsMenu - column break} {
d303 1
a303 1
test winMenu-8.1 {TkpPostMenu} {
d308 1
a308 1
test winMenu-8.2 {TkpPostMenu} {
d313 1
a313 1
test winMenu-8.3 {TkpPostMenu - popup menu} {menuInteractive} {
d319 1
a319 1
test winMenu-8.4 {TkpPostMenu - menu button} {menuInteractive} {
d327 1
a327 1
test winMenu-8.5 {TkpPostMenu - update not pending} {menuInteractive} {
d335 1
a335 1
test winMenu-9.1 {TkpMenuNewEntry} {
d341 1
a341 1
test winMenu-10.1 {TkwinMenuProc} {menuInteractive} {
d349 1
a349 1
test winMenu-11.1 {TkWinHandleMenuEvent - WM_INITMENU} {menuInteractive} {
d356 1
a356 1
test winMenu-11.2 {TkWinHandleMenuEvent - WM_COMMAND} {menuInteractive} {
d363 15
d379 1
a379 1
test winMenu-11.3 {TkWinHandleMenuEvent - WM_MEASUREITEM} {menuInteractive} {
d385 1
a385 1
test winMenu-11.4 {TkWinHandleMenuEvent - WM_MEASUREITEM} {menuInteractive} {
d391 1
a391 1
test winMenu-11.5 {TkWinHandleMenuEvent - WM_DRAWITEM} {menuInteractive} {
d397 2
a398 1
test winMenu-11.6 {TkWinHandleMenuEvent - WM_DRAWITEM - item disabled} {menuInteractive} {
d404 2
a405 1
test winMenu-11.7 {TkWinHandleMenuEvent - WM_INITMENU - not pending} {menuInteractive} {
d413 1
a413 1
test winMenu-12.1 {TkpSetWindowMenuBar} {
d420 1
a420 1
test winMenu-12.2 {TkpSetWindowMenuBar} {
d428 1
a428 1
test winMenu-12.3 {TkpSetWindowMenuBar - no update pending} {
d437 1
a437 1
test winMenu-13.1 {TkpSetMainMenubar - nothing to do} {} {}
d439 1
a439 1
test winMenu-14.1 {GetMenuIndicatorGeometry} {
d445 1
a445 1
test winMenu-14.2 {GetMenuIndicatorGeometry} {
d452 1
a452 1
test winMenu-15.1 {GetMenuAccelGeometry} {
d458 1
a458 1
test winMenu-15.2 {GetMenuAccelGeometry} {
d464 1
a464 1
test winMenu-15.3 {GetMenuAccelGeometry} {
d471 1
a471 1
test winMenu-16.1 {GetTearoffEntryGeometry} {menuInteractive} {
d478 1
a478 1
test winMenu-17.1 {GetMenuSeparatorGeometry} {
d487 1
a487 1
test winMenu-18.1 {DrawWindowsSystemBitmap - center aligned} {
d495 1
a495 1
test winMenu-18.2 {DrawWindowsSystemBitmap - right aligned} {
d503 2
a504 1
test winMenu-19.1 {DrawMenuEntryIndicator - not checkbutton or radiobutton} {
d511 1
a511 1
test winMenu-19.2 {DrawMenuEntryIndicator - not selected} {
d518 1
a518 1
test winMenu-19.3 {DrawMenuEntryIndicator - checkbutton} {
d526 1
a526 1
test winMenu-19.4 {DrawMenuEntryIndicator - radiobutton} {
d534 1
a534 1
test winMenu-19.5 {DrawMenuEntryIndicator - disabled} {
d543 1
a543 1
test winMenu-19.6 {DrawMenuEntryIndicator - indicator not on} {
d552 1
a552 1
test winMenu-20.1 {DrawMenuEntryAccelerator - disabled} {
d559 1
a559 1
test winMenu-20.2 {DrawMenuEntryAccelerator - normal text} {
d566 2
a567 1
test winMenu-20.3 {DrawMenuEntryAccelerator - disabled, no disabledforeground} {
d574 1
a574 1
test winMenu-20.4 {DrawMenuEntryAccelerator - cascade, drawArrow true} {
d581 2
a582 1
test winMenu-20.5 {DrawMenuEntryAccelerator - cascade, drawArrow false} {menuInteractive} {
d589 1
a589 1
test winMenu-21.1 {DrawMenuSeparator} {
d597 1
a597 1
test winMenu-22.1 {DrawMenuUnderline} {
d605 4
a608 2
test winMenu-23.1 {Don't know how to test MenuKeyBindProc} {} {}
test winMenu-24.1 {TkpInitializeMenuBindings called at boot time} {} {}
d610 1
a610 1
test winMenu-25.1 {DrawMenuEntryLabel - normal} {
d617 1
a617 1
test winMenu-25.2 {DrawMenuEntryLabel - disabled with fg} {
d624 1
a624 1
test winMenu-25.3 {DrawMenuEntryLabel - disabled with no fg} {
d632 1
a632 1
test winMenu-26.1 {TkpComputeMenubarGeometry} {
d639 1
a639 1
test winMenu-27.1 {DrawTearoffEntry} {menuInteractive} {
d646 1
a646 1
test winMenu-28.1 {TkpConfigureMenuEntry - update pending} {
d652 1
a652 1
test winMenu-28.2 {TkpConfigureMenuEntry - update not pending} {
d660 2
a661 1
test winMenu-29.1 {TkpDrawMenuEntry - gc for active and not strict motif} {
d669 2
a670 1
test winMenu-29.2 {TkpDrawMenuEntry - gc for active menu item with its own gc} {
d678 1
a678 1
test winMenu-29.3 {TkpDrawMenuEntry - gc for active and strict motif} {
d687 3
a689 1
test winMenu-29.4 {TkpDrawMenuEntry - gc for disabled with disabledfg and custom entry} {
d696 1
a696 1
test winMenu-29.5 {TkpDrawMenuEntry - gc for disabled with disabledFg} {
d703 1
a703 1
test winMenu-29.6 {TkpDrawMenuEntry - gc for disabled - no disabledFg} {
d710 1
a710 1
test winMenu-29.7 {TkpDrawMenuEntry - gc for normal - custom entry} {
d717 1
a717 1
test winMenu-29.8 {TkpDrawMenuEntry - gc for normal} {
d724 1
a724 1
test winMenu-29.9 {TkpDrawMenuEntry - gc for indicator - custom entry} {
d732 1
a732 1
test winMenu-29.10 {TkpDrawMenuEntry - gc for indicator} {
d740 1
a740 1
test winMenu-29.11 {TkpDrawMenuEntry - border - custom entry} {
d748 1
a748 1
test winMenu-29.12 {TkpDrawMenuEntry - border} {
d756 1
a756 1
test winMenu-29.13 {TkpDrawMenuEntry - active border - strict motif} {
d765 1
a765 1
test winMenu-29.14 {TkpDrawMenuEntry - active border - custom entry} {
d773 1
a773 1
test winMenu-29.15 {TkpDrawMenuEntry - active border} {
d781 1
a781 1
test winMenu-29.16 {TkpDrawMenuEntry - font - custom entry} {
d788 1
a788 1
test winMenu-29.17 {TkpDrawMenuEntry - font} {
d795 1
a795 1
test winMenu-29.18 {TkpDrawMenuEntry - separator} {
d802 1
a802 1
test winMenu-29.19 {TkpDrawMenuEntry - standard} {
d809 1
a809 1
test winMenu-29.20 {TkpDrawMenuEntry - disabled cascade item} {
d819 1
a819 1
test winMenu-29.21 {TkpDrawMenuEntry - indicator} {
d827 1
a827 1
test winMenu-29.22 {TkpDrawMenuEntry - indicator} {
d836 1
a836 1
test winMenu-30.1 {GetMenuLabelGeometry - image} {
d844 1
a844 1
test winMenu-30.2 {GetMenuLabelGeometry - bitmap} {
d850 1
a850 1
test winMenu-30.3 {GetMenuLabelGeometry - no text} {
d856 1
a856 1
test winMenu-30.4 {GetMenuLabelGeometry - text} {
d863 1
a863 1
test winMenu-31.1 {DrawMenuEntryBackground} {
d870 1
a870 1
test winMenu-31.2 {DrawMenuEntryBackground} {
d879 1
a879 1
test winMenu-32.1 {TkpComputeStandardMenuGeometry - no entries} {
d884 1
a884 1
test winMenu-32.2 {TkpComputeStandardMenuGeometry - one entry} {
d890 1
a890 1
test winMenu-32.3 {TkpComputeStandardMenuGeometry - more than one entry} {
d897 1
a897 1
test winMenu-32.4 {TkpComputeStandardMenuGeometry - separator} {
d912 2
a913 1
test winMenu-32.6 {TkpComputeStandardMenuGeometry - standard label geometry} {
d919 2
a920 1
test winMenu-32.7 {TkpComputeStandardMenuGeometry - different font for entry} {
d926 2
a927 1
test winMenu-32.8 {TkpComputeStandardMenuGeometry - second entry larger} {
d934 1
a934 1
test winMenu-32.9 {TkpComputeStandardMenuGeometry - first entry larger} {
d941 1
a941 1
test winMenu-32.10 {TkpComputeStandardMenuGeometry - accelerator} {
d947 1
a947 1
test winMenu-32.11 {TkpComputeStandardMenuGeometry - second accel larger} {
d954 1
a954 1
test winMenu-32.12 {TkpComputeStandardMenuGeometry - second accel smaller} {
d961 1
a961 1
test winMenu-32.13 {TkpComputeStandardMenuGeometry - indicator} {
d968 3
a970 1
test winMenu-32.14 {TkpComputeStandardMenuGeometry - second indicator less or equal } {
d981 2
a982 1
test winMenu-32.15 {TkpComputeStandardMenuGeometry - second indicator larger } {unixOnly} {
d993 2
a994 1
test winMenu-32.16 {TkpComputeStandardMenuGeometry - zero sized menus} {
d999 2
a1000 1
test winMenu-32.17 {TkpComputeStandardMenuGeometry - first column bigger} {
d1008 2
a1009 1
test winMenu-32.18 {TkpComputeStandardMenuGeometry - second column bigger} {
d1017 1
a1017 1
test winMenu-32.19 {TkpComputeStandardMenuGeometry - three columns} {
d1029 1
a1029 1
test winMenu-33.1 {TkpNotifyTopLevelCreate - no menu yet} {
d1036 1
a1036 1
test winMenu-33.2 {TkpNotifyTopLevelCreate - menu} {
d1049 1
a1049 1
test winMenu-34.1 {TkpMenuInit called at boot time} {} {}
d1051 1
d1053 14
@


1.1.1.1
log
@import insight-2000-02-04 snapshot (2nd try)
@
text
@@


1.1.1.2
log
@Tk 8.3 upgrade
@
text
@a6 2
# Copyright (c) 1998-1999 by Scriptics Corporation.
# All rights reserved.
d8 8
a15 1
# RCS: @@(#) $Id: winMenu.test,v 1.7.6.1 2000/05/04 21:26:30 spolk Exp $
d17 8
a24 2
if {[lsearch [namespace children] ::tcltest] == -1} {
    source [file join [pwd] [file dirname [info script]] defs.tcl]
a30 1
    ::tcltest::cleanupTests
d34 4
d48 1
a48 1
test winMenu-1.1 {GetNewID} {pcOnly} {
d54 1
a54 1
test winMenu-2.1 {FreeID} {pcOnly} {
d60 1
a60 1
test winMenu-3.1 {TkpNewMenu} {pcOnly} {
d64 1
a64 1
test winMenu-3.2 {TkpNewMenu} {pcOnly} {
d72 1
a72 1
test winMenu-4.1 {TkpDestroyMenu} {pcOnly} {
d77 1
a77 1
test winMenu-4.2 {TkpDestroyMenu - help menu} {pcOnly} {
d85 1
a85 1
test winMenu-5.1 {TkpDestroyMenuEntry} {pcOnly} {
d94 1
a94 1
test winMenu-6.1 {GetEntryText} {pcOnly} {
d98 1
a98 1
test winMenu-6.2 {GetEntryText} {pcOnly} {
d105 1
a105 1
test winMenu-6.3 {GetEntryText} {pcOnly} {
d110 1
a110 1
test winMenu-6.4 {GetEntryText} {pcOnly} {
d115 1
a115 1
test winMenu-6.5 {GetEntryText} {pcOnly} {
d120 1
a120 1
test winMenu-6.6 {GetEntryText} {pcOnly} {
d125 1
a125 1
test winMenu-6.7 {GetEntryText} {pcOnly} {
d130 1
a130 1
test winMenu-6.8 {GetEntryText} {pcOnly} {
d135 1
a135 1
test winMenu-6.9 {GetEntryText} {pcOnly} {
d140 1
a140 1
test winMenu-6.10 {GetEntryText} {pcOnly} {
d145 1
a145 1
test winMenu-6.11 {GetEntryText} {pcOnly} {
d150 1
a150 1
test winMenu-6.12 {GetEntryText} {pcOnly} {
d155 1
a155 1
test winMenu-6.13 {GetEntryText} {pcOnly} {
d160 1
a160 1
test winMenu-6.14 {GetEntryText} {pcOnly} {
d165 1
a165 1
test winMenu-6.15 {GetEntryText} {pcOnly} {
d170 1
a170 1
test winMenu-6.16 {GetEntryText} {pcOnly} {
d176 1
a176 1
test winMenu-7.1 {ReconfigureWindowsMenu - system menu item removal} {pcOnly} {
d186 1
a186 1
test winMenu-7.2 {ReconfigureWindowsMenu - menu item removal} {pcOnly} {
d194 1
a194 1
test winMenu-7.3 {ReconfigureWindowsMenu - zero items} {pcOnly} {
d201 1
a201 1
test winMenu-7.4 {ReconfigureWindowsMenu - one item} {pcOnly} {
d207 1
a207 1
test winMenu-7.5 {ReconfigureWindowsMenu - two items} {pcOnly} {
d214 1
a214 1
test winMenu-7.6 {ReconfigureWindowsMenu - separator item} {pcOnly} {
d220 1
a220 1
test winMenu-7.7 {ReconfigureWindowsMenu - non-text item} {pcOnly} {
d226 1
a226 1
test winMenu-7.8 {ReconfigureWindowsMenu - disabled item} {pcOnly} {
d232 1
a232 1
test winMenu-7.9 {ReconfigureWindowsMenu - non-selected checkbutton} {pcOnly} {
d238 1
a238 1
test winMenu-7.10 {ReconfigureWindowsMenu - non-selected radiobutton} {pcOnly} {
d244 1
a244 1
test winMenu-7.11 {ReconfigureWindowsMenu - selected checkbutton} {pcOnly} {
d251 1
a251 1
test winMenu-7.12 {ReconfigureWindowsMenu - selected radiobutton} {pcOnly} {
d258 1
a258 1
test winMenu-7.13 {ReconfigureWindowsMenu - cascade missing} {pcOnly} {
d264 1
a264 1
test winMenu-7.14 {ReconfigureWindowsMenu - cascade} {pcOnly} {
d272 1
a272 1
test winMenu-7.15 {ReconfigureWindowsMenu - menubar without system menu} {pcOnly} {
d280 1
a280 1
test winMenu-7.16 {ReconfigureWindowsMenu - system menu already created} {pcOnly} {
d290 1
a290 1
test winMenu-7.17 {ReconfigureWindowsMenu - system menu update pending} {pcOnly} {
d298 1
a298 1
test winMenu-7.18 {ReconfigureWindowsMenu - system menu update not pending} {pcOnly} {
d308 1
a308 1
test winMenu-7.19 {ReconfigureWindowsMenu - column break} {pcOnly} {
d317 1
a317 1
test winMenu-8.1 {TkpPostMenu} {pcOnly} {
d322 1
a322 1
test winMenu-8.2 {TkpPostMenu} {pcOnly} {
d327 1
a327 1
test winMenu-8.3 {TkpPostMenu - popup menu} {pcOnly userInteraction} {
d333 1
a333 1
test winMenu-8.4 {TkpPostMenu - menu button} {pcOnly userInteraction} {
d341 1
a341 1
test winMenu-8.5 {TkpPostMenu - update not pending} {pcOnly userInteraction} {
d349 1
a349 1
test winMenu-9.1 {TkpMenuNewEntry} {pcOnly} {
d355 1
a355 1
test winMenu-10.1 {TkwinMenuProc} {pcOnly userInteraction} {
d363 1
a363 1
test winMenu-11.1 {TkWinHandleMenuEvent - WM_INITMENU} {pcOnly userInteraction} {
d370 1
a370 1
test winMenu-11.2 {TkWinHandleMenuEvent - WM_COMMAND} {pcOnly userInteraction} {
a376 15
test winMenu-11.3 {TkWinHandleMenuEvent - WM_COMMAND} {pcOnly userInteraction} {
    catch {destroy .m1}
    catch {unset foo}
    proc bgerror {args} {
	global foo errorInfo
	set foo [list $args $errorInfo]
    }
    menu .m1
    .m1 add command -command {error 1} -label "winMenu-11.2: Please select this menu item."
    list [.m1 post 40 40] [update] [set foo] [unset foo] [destroy .m1]
} {{} {} {1 {1
    while executing
"error 1"
    (menu invoke)}} {} {}}

d378 1
a378 1
test winMenu-11.4 {TkWinHandleMenuEvent - WM_MEASUREITEM} {pcOnly userInteraction} {
d384 1
a384 1
test winMenu-11.5 {TkWinHandleMenuEvent - WM_MEASUREITEM} {pcOnly userInteraction} {
d390 1
a390 1
test winMenu-11.6 {TkWinHandleMenuEvent - WM_DRAWITEM} {pcOnly userInteraction} {
d396 1
a396 2
test winMenu-11.7 {TkWinHandleMenuEvent - WM_DRAWITEM - item disabled} \
	{pcOnly userInteraction} {
d402 1
a402 2
test winMenu-11.8 {TkWinHandleMenuEvent - WM_INITMENU - not pending} \
	{pcOnly userInteraction} {
d410 1
a410 1
test winMenu-12.1 {TkpSetWindowMenuBar} {pcOnly} {
d417 1
a417 1
test winMenu-12.2 {TkpSetWindowMenuBar} {pcOnly} {
d425 1
a425 1
test winMenu-12.3 {TkpSetWindowMenuBar - no update pending} {pcOnly} {
d434 1
a434 1
test winMenu-13.1 {TkpSetMainMenubar - nothing to do} {emptyTest pcOnly} {} {}
d436 1
a436 1
test winMenu-14.1 {GetMenuIndicatorGeometry} {pcOnly} {
d442 1
a442 1
test winMenu-14.2 {GetMenuIndicatorGeometry} {pcOnly} {
d449 1
a449 1
test winMenu-15.1 {GetMenuAccelGeometry} {pcOnly} {
d455 1
a455 1
test winMenu-15.2 {GetMenuAccelGeometry} {pcOnly} {
d461 1
a461 1
test winMenu-15.3 {GetMenuAccelGeometry} {pcOnly} {
d468 1
a468 1
test winMenu-16.1 {GetTearoffEntryGeometry} {pcOnly userInteraction} {
d475 1
a475 1
test winMenu-17.1 {GetMenuSeparatorGeometry} {pcOnly} {
d484 1
a484 1
test winMenu-18.1 {DrawWindowsSystemBitmap - center aligned} {pcOnly} {
d492 1
a492 1
test winMenu-18.2 {DrawWindowsSystemBitmap - right aligned} {pcOnly} {
d500 1
a500 2
test winMenu-19.1 {DrawMenuEntryIndicator - not checkbutton or radiobutton} \
	{pcOnly} {
d507 1
a507 1
test winMenu-19.2 {DrawMenuEntryIndicator - not selected} {pcOnly} {
d514 1
a514 1
test winMenu-19.3 {DrawMenuEntryIndicator - checkbutton} {pcOnly} {
d522 1
a522 1
test winMenu-19.4 {DrawMenuEntryIndicator - radiobutton} {pcOnly} {
d530 1
a530 1
test winMenu-19.5 {DrawMenuEntryIndicator - disabled} {pcOnly} {
d539 1
a539 1
test winMenu-19.6 {DrawMenuEntryIndicator - indicator not on} {pcOnly} {
d548 1
a548 1
test winMenu-20.1 {DrawMenuEntryAccelerator - disabled} {pcOnly} {
d555 1
a555 1
test winMenu-20.2 {DrawMenuEntryAccelerator - normal text} {pcOnly} {
d562 1
a562 2
test winMenu-20.3 {DrawMenuEntryAccelerator - disabled, no disabledforeground} \
	{pcOnly} {
d569 1
a569 1
test winMenu-20.4 {DrawMenuEntryAccelerator - cascade, drawArrow true} {pcOnly} {
d576 1
a576 2
test winMenu-20.5 {DrawMenuEntryAccelerator - cascade, drawArrow false} \
	{pcOnly userInteraction} {
d583 1
a583 1
test winMenu-21.1 {DrawMenuSeparator} {pcOnly} {
d591 1
a591 1
test winMenu-22.1 {DrawMenuUnderline} {pcOnly} {
d599 2
a600 4
test winMenu-23.1 {Don't know how to test MenuKeyBindProc} \
	{pcOnly emptyTest} {} {}
test winMenu-24.1 {TkpInitializeMenuBindings called at boot time} \
	{pcOnly emptyTest} {} {}
d602 1
a602 1
test winMenu-25.1 {DrawMenuEntryLabel - normal} {pcOnly} {
d609 1
a609 1
test winMenu-25.2 {DrawMenuEntryLabel - disabled with fg} {pcOnly} {
d616 1
a616 1
test winMenu-25.3 {DrawMenuEntryLabel - disabled with no fg} {pcOnly} {
d624 1
a624 1
test winMenu-26.1 {TkpComputeMenubarGeometry} {pcOnly} {
d631 1
a631 1
test winMenu-27.1 {DrawTearoffEntry} {pcOnly userInteraction} {
d638 1
a638 1
test winMenu-28.1 {TkpConfigureMenuEntry - update pending} {pcOnly} {
d644 1
a644 1
test winMenu-28.2 {TkpConfigureMenuEntry - update not pending} {pcOnly} {
d652 1
a652 2
test winMenu-29.1 {TkpDrawMenuEntry - gc for active and not strict motif} \
	{pcOnly} {
d660 1
a660 2
test winMenu-29.2 {TkpDrawMenuEntry - gc for active menu item with its own gc} \
	{pcOnly} {
d668 1
a668 1
test winMenu-29.3 {TkpDrawMenuEntry - gc for active and strict motif} {pcOnly} {
d677 1
a677 3
test winMenu-29.4 \
	{TkpDrawMenuEntry - gc for disabled with disabledfg and custom entry} \
	{pcOnly} {
d684 1
a684 1
test winMenu-29.5 {TkpDrawMenuEntry - gc for disabled with disabledFg} {pcOnly} {
d691 1
a691 1
test winMenu-29.6 {TkpDrawMenuEntry - gc for disabled - no disabledFg} {pcOnly} {
d698 1
a698 1
test winMenu-29.7 {TkpDrawMenuEntry - gc for normal - custom entry} {pcOnly} {
d705 1
a705 1
test winMenu-29.8 {TkpDrawMenuEntry - gc for normal} {pcOnly} {
d712 1
a712 1
test winMenu-29.9 {TkpDrawMenuEntry - gc for indicator - custom entry} {pcOnly} {
d720 1
a720 1
test winMenu-29.10 {TkpDrawMenuEntry - gc for indicator} {pcOnly} {
d728 1
a728 1
test winMenu-29.11 {TkpDrawMenuEntry - border - custom entry} {pcOnly} {
d736 1
a736 1
test winMenu-29.12 {TkpDrawMenuEntry - border} {pcOnly} {
d744 1
a744 1
test winMenu-29.13 {TkpDrawMenuEntry - active border - strict motif} {pcOnly} {
d753 1
a753 1
test winMenu-29.14 {TkpDrawMenuEntry - active border - custom entry} {pcOnly} {
d761 1
a761 1
test winMenu-29.15 {TkpDrawMenuEntry - active border} {pcOnly} {
d769 1
a769 1
test winMenu-29.16 {TkpDrawMenuEntry - font - custom entry} {pcOnly} {
d776 1
a776 1
test winMenu-29.17 {TkpDrawMenuEntry - font} {pcOnly} {
d783 1
a783 1
test winMenu-29.18 {TkpDrawMenuEntry - separator} {pcOnly} {
d790 1
a790 1
test winMenu-29.19 {TkpDrawMenuEntry - standard} {pcOnly} {
d797 1
a797 1
test winMenu-29.20 {TkpDrawMenuEntry - disabled cascade item} {pcOnly} {
d807 1
a807 1
test winMenu-29.21 {TkpDrawMenuEntry - indicator} {pcOnly} {
d815 1
a815 1
test winMenu-29.22 {TkpDrawMenuEntry - indicator} {pcOnly} {
d824 1
a824 1
test winMenu-30.1 {GetMenuLabelGeometry - image} {pcOnly} {
d832 1
a832 1
test winMenu-30.2 {GetMenuLabelGeometry - bitmap} {pcOnly} {
d838 1
a838 1
test winMenu-30.3 {GetMenuLabelGeometry - no text} {pcOnly} {
d844 1
a844 1
test winMenu-30.4 {GetMenuLabelGeometry - text} {pcOnly} {
d851 1
a851 1
test winMenu-31.1 {DrawMenuEntryBackground} {pcOnly} {
d858 1
a858 1
test winMenu-31.2 {DrawMenuEntryBackground} {pcOnly} {
d867 1
a867 1
test winMenu-32.1 {TkpComputeStandardMenuGeometry - no entries} {pcOnly} {
d872 1
a872 1
test winMenu-32.2 {TkpComputeStandardMenuGeometry - one entry} {pcOnly} {
d878 1
a878 1
test winMenu-32.3 {TkpComputeStandardMenuGeometry - more than one entry} {pcOnly} {
d885 1
a885 1
test winMenu-32.4 {TkpComputeStandardMenuGeometry - separator} {pcOnly} {
d900 1
a900 2
test winMenu-32.6 {TkpComputeStandardMenuGeometry - standard label geometry} \
	{pcOnly} {
d906 1
a906 2
test winMenu-32.7 {TkpComputeStandardMenuGeometry - different font for entry} \
	{pcOnly} {
d912 1
a912 2
test winMenu-32.8 {TkpComputeStandardMenuGeometry - second entry larger} \
	{pcOnly} {
d919 1
a919 1
test winMenu-32.9 {TkpComputeStandardMenuGeometry - first entry larger} {pcOnly} {
d926 1
a926 1
test winMenu-32.10 {TkpComputeStandardMenuGeometry - accelerator} {pcOnly} {
d932 1
a932 1
test winMenu-32.11 {TkpComputeStandardMenuGeometry - second accel larger} {pcOnly} {
d939 1
a939 1
test winMenu-32.12 {TkpComputeStandardMenuGeometry - second accel smaller} {pcOnly} {
d946 1
a946 1
test winMenu-32.13 {TkpComputeStandardMenuGeometry - indicator} {pcOnly} {
d953 1
a953 3
test winMenu-32.14 \
	{TkpComputeStandardMenuGeometry - second indicator less or equal} \
	{pcOnly} {
d964 1
a964 2
test winMenu-32.15 {TkpComputeStandardMenuGeometry - second indicator larger} \
	{unixOnly} {
d975 1
a975 2
test winMenu-32.16 {TkpComputeStandardMenuGeometry - zero sized menus} \
	{pcOnly} {
d980 1
a980 2
test winMenu-32.17 {TkpComputeStandardMenuGeometry - first column bigger} \
	{pcOnly} {
d988 1
a988 2
test winMenu-32.18 {TkpComputeStandardMenuGeometry - second column bigger} \
	{pcOnly} {
d996 1
a996 1
test winMenu-32.19 {TkpComputeStandardMenuGeometry - three columns} {pcOnly} {
d1008 1
a1008 1
test winMenu-33.1 {TkpNotifyTopLevelCreate - no menu yet} {pcOnly} {
d1015 1
a1015 1
test winMenu-33.2 {TkpNotifyTopLevelCreate - menu} {pcOnly} {
d1028 1
a1028 1
test winMenu-34.1 {TkpMenuInit called at boot time} {emptyTest pcOnly} {} {}
a1029 1
# cleanup
a1030 14
::tcltest::cleanupTests
return












@


1.1.1.3
log
@import tk 8.4.0
@
text
@d10 1
a10 1
# RCS: @@(#) $Id: winMenu.test,v 1.6 2002/07/13 20:28:36 dgp Exp $
d12 21
a32 6
package require tcltest 2.1
namespace import -force tcltest::configure
namespace import -force tcltest::testsDirectory
configure -testdir [file join [pwd] [file dirname [info script]]]
configure -loadfile [file join [testsDirectory] constraints.tcl]
tcltest::loadTestedCommands
d84 1
a84 1
test winMenu-6.2 {GetEntryText} {testImageType pcOnly} {
d325 1
a325 1
    list [tk::MbPost .mb] [destroy .m1]
d443 1
a443 1
    list [catch {tk::TearOffMenu .m1 40 40}] [destroy .m1]
d449 1
a449 1
    list [catch {tk::TearOffMenu .m1 40 40}] [destroy .m1]
d456 1
a456 1
    list [catch {tk::TearOffMenu .m1 40 40}] [destroy .m1]
d462 1
a462 1
    list [catch {tk::TearOffMenu .m1 40 40}] [destroy .m1]
d468 1
a468 1
    list [catch {tk::TearOffMenu .m1 40 40}] [destroy .m1]
d482 1
a482 1
    list [catch {tk::TearOffMenu .m1 40 40}] [destroy .m1]
d492 1
a492 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d499 1
a499 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d508 1
a508 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d515 1
a515 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d523 1
a523 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d531 1
a531 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d540 1
a540 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d548 1
a548 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d556 1
a556 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d563 1
a563 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d571 1
a571 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d578 1
a578 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d593 1
a593 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d601 1
a601 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d614 1
a614 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d621 1
a621 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d628 1
a628 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d665 1
a665 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d674 1
a674 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d683 1
a683 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d693 1
a693 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d700 1
a700 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d707 1
a707 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d714 1
a714 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d721 1
a721 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d729 1
a729 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d737 1
a737 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d744 1
a744 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d752 1
a752 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d761 1
a761 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d769 1
a769 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d777 1
a777 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d785 1
a785 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d792 1
a792 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d799 1
a799 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d806 1
a806 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d816 1
a816 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d824 1
a824 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d832 1
a832 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d836 1
a836 1
test winMenu-30.1 {GetMenuLabelGeometry - image} {testImageType pcOnly} {
d867 1
a867 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d874 1
a874 1
    set tearoff [tk::TearOffMenu .m1 40 40]
d909 1
a909 1
    catch {tk::MbPost .mb}
d970 1
a970 1
	{testImageType pcOnly} {
d982 1
a982 1
	{testImageType unixOnly} {
@


