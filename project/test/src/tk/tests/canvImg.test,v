head	1.5;
access;
symbols
	sid-snapshot-20180601:1.5
	sid-snapshot-20180501:1.5
	sid-snapshot-20180401:1.5
	sid-snapshot-20180301:1.5
	sid-snapshot-20180201:1.5
	sid-snapshot-20180101:1.5
	sid-snapshot-20171201:1.5
	sid-snapshot-20171101:1.5
	sid-snapshot-20171001:1.5
	sid-snapshot-20170901:1.5
	sid-snapshot-20170801:1.5
	sid-snapshot-20170701:1.5
	sid-snapshot-20170601:1.5
	sid-snapshot-20170501:1.5
	sid-snapshot-20170401:1.5
	sid-snapshot-20170301:1.5
	sid-snapshot-20170201:1.5
	sid-snapshot-20170101:1.5
	sid-snapshot-20161201:1.5
	sid-snapshot-20161101:1.5
	sid-snapshot-20160901:1.5
	sid-snapshot-20160801:1.5
	sid-snapshot-20160701:1.5
	sid-snapshot-20160601:1.5
	sid-snapshot-20160501:1.5
	sid-snapshot-20160401:1.5
	sid-snapshot-20160301:1.5
	sid-snapshot-20160201:1.5
	sid-snapshot-20160101:1.5
	sid-snapshot-20151201:1.5
	sid-snapshot-20151101:1.5
	sid-snapshot-20151001:1.5
	sid-snapshot-20150901:1.5
	sid-snapshot-20150801:1.5
	sid-snapshot-20150701:1.5
	sid-snapshot-20150601:1.5
	sid-snapshot-20150501:1.5
	sid-snapshot-20150401:1.5
	sid-snapshot-20150301:1.5
	sid-snapshot-20150201:1.5
	sid-snapshot-20150101:1.5
	sid-snapshot-20141201:1.5
	sid-snapshot-20141101:1.5
	sid-snapshot-20141001:1.5
	sid-snapshot-20140901:1.5
	sid-snapshot-20140801:1.5
	sid-snapshot-20140701:1.5
	sid-snapshot-20140601:1.5
	sid-snapshot-20140501:1.5
	sid-snapshot-20140401:1.5
	sid-snapshot-20140301:1.5
	sid-snapshot-20140201:1.5
	sid-snapshot-20140101:1.5
	sid-snapshot-20131201:1.5
	sid-snapshot-20131101:1.5
	sid-snapshot-20131001:1.5
	sid-snapshot-20130901:1.5
	sid-snapshot-20130801:1.5
	sid-snapshot-20130701:1.5
	sid-snapshot-20130601:1.5
	insight_7_6-2013-04-10-branchpoint:1.5
	gdb_7_6-branch:1.5.0.28
	sid-snapshot-20130501:1.5
	sid-snapshot-20130401:1.5
	sid-snapshot-20130301:1.5
	sid-snapshot-20130201:1.5
	sid-snapshot-20130101:1.5
	sid-snapshot-20121201:1.5
	sid-snapshot-20121101:1.5
	sid-snapshot-20121001:1.5
	sid-snapshot-20120901:1.5
	gdb_7_5-branch:1.5.0.26
	sid-snapshot-20120801:1.5
	sid-snapshot-20120701:1.5
	sid-snapshot-20120601:1.5
	sid-snapshot-20120501:1.5
	sid-snapshot-20120401:1.5
	gdb_7_4-branch:1.5.0.24
	sid-snapshot-20120301:1.5
	sid-snapshot-20120201:1.5
	sid-snapshot-20120101:1.5
	sid-snapshot-20111201:1.5
	sid-snapshot-20111101:1.5
	sid-snapshot-20111001:1.5
	sid-snapshot-20110901:1.5
	gdb_7_3-branch:1.5.0.22
	sid-snapshot-20110801:1.5
	sid-snapshot-20110701:1.5
	sid-snapshot-20110601:1.5
	sid-snapshot-20110501:1.5
	sid-snapshot-20110401:1.5
	sid-snapshot-20110301:1.5
	sid-snapshot-20110201:1.5
	sid-snapshot-20110101:1.5
	sid-snapshot-20101201:1.5
	sid-snapshot-20101101:1.5
	sid-snapshot-20101001:1.5
	sid-snapshot-20100901:1.5
	sid-snapshot-20100801:1.5
	sid-snapshot-20100701:1.5
	sid-snapshot-20100601:1.5
	sid-snapshot-20100501:1.5
	sid-snapshot-20100401:1.5
	sid-snapshot-20100301:1.5
	gdb_7_1-branch:1.5.0.20
	gdb_7_0-branch:1.5.0.18
	sid-snapshot-20100201:1.5
	sid-snapshot-20100101:1.5
	sid-snapshot-20091201:1.5
	sid-snapshot-20091101:1.5
	sid-snapshot-20091001:1.5
	arc-sim-20090309:1.5
	sid-snapshot-20090901:1.5
	sid-snapshot-20090801:1.5
	sid-snapshot-20090701:1.5
	sid-snapshot-20090601:1.5
	sid-snapshot-20090501:1.5
	kevinb-pre-tk8_5_7_merge:1.5
	sid-snapshot-20090401:1.5
	arc-insight_6_8-branch:1.5.0.16
	arc-insight_6_8-branchpoint:1.5
	insight_6_8-branch:1.5.0.14
	insight_6_8-branchpoint:1.5
	sid-snapshot-20090301:1.5
	sid-snapshot-20090201:1.5
	sid-snapshot-20090101:1.5
	sid-snapshot-20081201:1.5
	sid-snapshot-20081101:1.5
	sid-snapshot-20081001:1.5
	sid-snapshot-20080901:1.5
	sid-snapshot-20080801:1.5
	sid-snapshot-20080701:1.5
	sid-snapshot-20080601:1.5
	sid-snapshot-20080501:1.5
	sid-snapshot-20080403:1.5
	sid-snapshot-20080401:1.5
	gdb_6_8-branch:1.5.0.12
	sid-snapshot-20080301:1.5
	sid-snapshot-20080201:1.5
	sid-snapshot-20080101:1.5
	sid-snapshot-20071201:1.5
	sid-snapshot-20071101:1.5
	sid-snapshot-20071001:1.5
	insight_6_6-20070208-release:1.5
	gdb_6_6-branch:1.5.0.10
	gdb_6_6-2006-11-15-branchpoint:1.5
	insight_6_5-20061003-release:1.5
	gdb_6_5-branch:1.5.0.8
	gdb_6_5-2006-05-14-branchpoint:1.5
	gdb_6_4-branch:1.5.0.6
	gdb_6_4-2005-11-01-branchpoint:1.5
	gdb_6_1-2004-04-05-release:1.5
	gdb_6_1-branch:1.5.0.4
	gdb_6_1-2004-03-01-gmt-branchpoint:1.5
	gdb_6_0-2003-10-04-release:1.5
	gdb_6_0-branch:1.5.0.2
	gdb_6_0-2003-06-23-branchpoint:1.5
	TK8_4_1:1.1.1.3
	gdb_5_3-2002-12-12-release:1.2
	tcltk840-20020924-branch:1.3.0.2
	tcltk840-20020924-branchpoint:1.3
	TK_8_4_0:1.1.1.3
	sid-20020905-branchpoint:1.2
	sid-20020905-branch:1.2.0.6
	gdb_5_3-branch:1.2.0.4
	gdb_5_3-2002-09-04-branchpoint:1.2
	gdb_5_2_1-2002-07-23-release:1.2
	gdb_5_2-2002-04-29-release:1.2
	gdb_5_2-branch:1.2.0.2
	gdb_5_2-2002-03-03-branchpoint:1.2
	gdb_5_1_1-2002-01-24-release:1.1.1.1
	cygnus_cvs_20020108_pre:1.2
	gdb_5_1_0_1-2002-01-03-branch:1.1.1.1.0.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.1.1.1
	gdb_5_1-2001-11-21-release:1.1.1.1
	gdb_s390-2001-09-26-branch:1.1.1.1.0.6
	gdb_s390-2001-09-26-branchpoint:1.1.1.1
	TK_8_3:1.1.1.2
	NET:1.1.1
	gdb_5_1-2001-07-29-branch:1.1.1.1.0.4
	gdb_5_1-2001-07-29-branchpoint:1.1.1.1
	insight-precleanup-2001-01-01:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	insight-2000-02-04:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.5
date	2003.01.21.20.24.50;	author hunt;	state Exp;
branches;
next	1.4;

1.4
date	2003.01.21.19.53.16;	author hunt;	state Exp;
branches;
next	1.3;

1.3
date	2002.09.24.18.39.28;	author kseitz;	state Exp;
branches;
next	1.2;

1.2
date	2001.09.10.01.16.53;	author irox;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.07.00.19.30;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.07.00.19.30;	author jsm;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2001.09.10.00.22.36;	author irox;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.09.24.20.39.05;	author kseitz;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Updated to tk 8.4.1
@
text
@# This file is a Tcl script to test out the procedures in tkCanvImg.c,
# which implement canvas "image" items.  It is organized in the standard
# fashion for Tcl tests.
#
# Copyright (c) 1994 The Regents of the University of California.
# Copyright (c) 1994-1996 Sun Microsystems, Inc.
# Copyright (c) 1998-1999 by Scriptics Corporation.
# All rights reserved.
#
# RCS: @@(#) $Id: canvImg.test,v 1.5 2002/07/14 05:48:46 dgp Exp $

package require tcltest 2.1
namespace import -force tcltest::configure
namespace import -force tcltest::testsDirectory
configure -testdir [file join [pwd] [file dirname [info script]]]
configure -loadfile [file join [testsDirectory] constraints.tcl]
tcltest::loadTestedCommands

eval image delete [image names]
canvas .c
pack .c
update
if {[testConstraint testImageType]} {
    image create test foo -variable x
    image create test foo2 -variable y
    foo2 changed 0 0 0 0 80 60
}
test canvImg-1.1 {options for image items} {
    .c delete all
    .c create image 50 50 -anchor nw -tags i1
    .c itemconfigure i1 -anchor
} {-anchor {} {} center nw}
test canvImg-1.2 {options for image items} {
    .c delete all
    list [catch {.c create image 50 50 -anchor gorp -tags i1} msg] $msg
} {1 {bad anchor position "gorp": must be n, ne, e, se, s, sw, w, nw, or center}}
test canvImg-1.3 {options for image items} testImageType {
    .c delete all
    .c create image 50 50 -image foo -tags i1
    .c itemconfigure i1 -image
} {-image {} {} {} foo}
test canvImg-1.4 {options for image items} {
    .c delete all
    list [catch {.c create image 50 50 -image unknown -tags i1} msg] $msg
} {1 {image "unknown" doesn't exist}}
test canvImg-1.5 {options for image items} testImageType {
    .c delete all
    .c create image 50 50 -image foo -tags {i1 foo}
    .c itemconfigure i1 -tags
} {-tags {} {} {} {i1 foo}}

test canvImg-2.1 {CreateImage procedure} {
    list [catch {.c create image 40} msg] $msg
} {1 {wrong # coordinates: expected 2, got 1}}
test canvImg-2.2 {CreateImage procedure} {
    list [catch {.c create image 40 50 60} msg] $msg
} {1 {unknown option "60"}}
test canvImg-2.3 {CreateImage procedure} {
    .c delete all
    set i [.c create image 50 50]
    list [lindex [.c itemconf $i -anchor] 4] \
	    [lindex [.c itemconf $i -image] 4] \
	    [lindex [.c itemconf $i -tags] 4]
} {center {} {}}
test canvImg-2.4 {CreateImage procedure} {
    list [catch {.c create image xyz 40} msg] $msg
} {1 {bad screen distance "xyz"}}
test canvImg-2.5 {CreateImage procedure} {
    list [catch {.c create image 50 qrs} msg] $msg
} {1 {bad screen distance "qrs"}}
test canvImg-2.6 {CreateImage procedure} testImageType {
    list [catch {.c create image 50 50 -gorp foo} msg] $msg
} {1 {unknown option "-gorp"}}

test canvImg-3.1 {ImageCoords procedure} testImageType {
    .c delete all
    .c create image 50 100 -image foo -tags i1
    .c coords i1
} {50.0 100.0}
test canvImg-3.2 {ImageCoords procedure} testImageType {
    .c delete all
    .c create image 50 100 -image foo -tags i1
    list [catch {.c coords i1 dumb 100} msg] $msg
} {1 {bad screen distance "dumb"}}
test canvImg-3.3 {ImageCoords procedure} testImageType {
    .c delete all
    .c create image 50 100 -image foo -tags i1
    list [catch {.c coords i1 250 dumb0} msg] $msg
} {1 {bad screen distance "dumb0"}}
test canvImg-3.4 {ImageCoords procedure} testImageType {
    .c delete all
    .c create image 50 100 -image foo -tags i1
    list [catch {.c coords i1 250} msg] $msg
} {1 {wrong # coordinates: expected 2, got 1}}
test canvImg-3.5 {ImageCoords procedure} testImageType {
    .c delete all
    .c create image 50 100 -image foo -tags i1
    list [catch {.c coords i1 250 300 400} msg] $msg
} {1 {wrong # coordinates: expected 0 or 2, got 3}}

test canvImg-4.1 {ConfiugreImage procedure} testImageType {
    .c delete all
    .c create image 50 100 -image foo -tags i1
    update
    set x {}
    .c itemconfigure i1 -image {}
    update
    list $x [.c bbox i1]
} {{{foo free}} {}}
test canvImg-4.2 {ConfiugreImage procedure} testImageType {
    .c delete all
    .c create image 50 100 -image foo -tags i1 -anchor nw
    update
    set x {}
    set y {}
    .c itemconfigure i1 -image foo2
    update
    list $x $y [.c bbox i1]
} {{{foo free}} {{foo2 get} {foo2 display 0 0 80 60 30 30}} {50 100 130 160}}
test canvImg-4.3 {ConfiugreImage procedure} testImageType {
    .c delete all
    .c create image 50 100 -image foo -tags i1 -anchor nw
    update
    set x {}
    set y {}
    list [catch {.c itemconfigure i1 -image lousy} msg] $msg
} {1 {image "lousy" doesn't exist}}

test canvImg-5.1 {DeleteImage procedure} testImageType {
    image create test xyzzy -variable z
    .c delete all
    .c create image 50 100 -image xyzzy -tags i1
    update
    image delete xyzzy
    set z {}
    set names [lsort [image names]]
    .c delete i1
    update
    list $names $z [lsort [image names]]
} {{foo foo2 xyzzy} {} {foo foo2}}
test canvImg-5.2 {DeleteImage procedure (don't delete non-existent image)} {
    .c delete all
    .c create image 50 100 -tags i1
    update
    .c delete i1
    update
} {}

test canvImg-6.1 {ComputeImageBbox procedure} testImageType {
    .c delete all
    .c create image 15.51 17.51 -image foo -tags i1 -anchor nw
    .c bbox i1
} {16 18 46 33}
test canvImg-6.2 {ComputeImageBbox procedure} testImageType {
    .c delete all
    .c create image 15.49 17.49 -image foo -tags i1 -anchor nw
    .c bbox i1
} {15 17 45 32}
test canvImg-6.3 {ComputeImageBbox procedure} {
    .c delete all
    .c create image 20 30 -tags i1 -anchor nw
    .c bbox i1
} {}
test canvImg-6.4 {ComputeImageBbox procedure} testImageType {
    .c delete all
    .c create image 20 30 -image foo -tags i1 -anchor nw
    .c bbox i1
} {20 30 50 45}
test canvImg-6.5 {ComputeImageBbox procedure} testImageType {
    .c delete all
    .c create image 20 30 -image foo -tags i1 -anchor n
    .c bbox i1
} {5 30 35 45}
test canvImg-6.6 {ComputeImageBbox procedure} testImageType {
    .c delete all
    .c create image 20 30 -image foo -tags i1 -anchor ne
    .c bbox i1
} {-10 30 20 45}
test canvImg-6.7 {ComputeImageBbox procedure} testImageType {
    .c delete all
    .c create image 20 30 -image foo -tags i1 -anchor e
    .c bbox i1
} {-10 23 20 38}
test canvImg-6.8 {ComputeImageBbox procedure} testImageType {
    .c delete all
    .c create image 20 30 -image foo -tags i1 -anchor se
    .c bbox i1
} {-10 15 20 30}
test canvImg-6.9 {ComputeImageBbox procedure} testImageType {
    .c delete all
    .c create image 20 30 -image foo -tags i1 -anchor s
    .c bbox i1
} {5 15 35 30}
test canvImg-6.10 {ComputeImageBbox procedure} testImageType {
    .c delete all
    .c create image 20 30 -image foo -tags i1 -anchor sw
    .c bbox i1
} {20 15 50 30}
test canvImg-6.11 {ComputeImageBbox procedure} testImageType {
    .c delete all
    .c create image 20 30 -image foo -tags i1 -anchor w
    .c bbox i1
} {20 23 50 38}
test canvImg-6.12 {ComputeImageBbox procedure} testImageType {
    .c delete all
    .c create image 20 30 -image foo -tags i1 -anchor center
    .c bbox i1
} {5 23 35 38}

# The following test is non-portable because of differences in
# coordinate rounding on some machines (does 0.5 round  up?).

test canvImg-7.1 {DisplayImage procedure} {nonPortable testImageType} {
    .c delete all
    .c create image 50 100 -image foo -tags i1 -anchor nw
    update
    set x {}
    .c create rect 55 110 65 115 -width 1 -outline black -fill white
    update
    set x
} {{foo display 4 9 12 6 30 30}}
test canvImg-7.2 {DisplayImage procedure, no image} {
    .c delete all
    .c create image 50 100 -tags i1
    update
    .c create rect 55 110 65 115 -width 1 -outline black -fill white
    update
} {}

set i 1
.c delete all
if {[testConstraint testImageType]} {
    .c create image 50 100 -image foo -tags image -anchor nw
}
.c create rect 10 10 20 20 -tags rect -fill black -width 0 -outline {}
foreach check {
    {{50 70 80 81} {70 90} {rect}}
    {{50 70 80 79} {70 90} {image}}
    {{99 70 110 81} {90 90} {rect}}
    {{101 70 110 79} {90 90} {image}}
    {{99 100 110 115} {90 110} {rect}}
    {{101 100 110 115} {90 110} {image}}
    {{99 134 110 145} {90 125} {rect}}
    {{101 136 110 145} {90 125} {image}}
    {{50 134 80 145} {70 125} {rect}}
    {{50 136 80 145} {70 125} {image}}
    {{20 134 31 145} {40 125} {rect}}
    {{20 136 29 145} {40 125} {image}}
    {{20 100 31 115} {40 110} {rect}}
    {{20 100 29 115} {40 110} {image}}
    {{20 70 31 80} {40 90} {rect}}
    {{20 70 29 79} {40 90} {image}}
    {{60 70 69 109} {70 110} {image}}
    {{60 70 71 111} {70 110} {rect}}
} {
    test canvImg-8.$i {ImageToPoint procedure} testImageType {
	eval .c coords rect [lindex $check 0]
	.c gettags [eval .c find closest [lindex $check 1]]
    } [lindex $check 2]
    incr i
}

.c delete all
if {[testConstraint testImageType]} {
    .c create image 50 100 -image foo -tags image -anchor nw
}
test canvImg-8.19 {ImageToArea procedure} testImageType {
    .c gettags [.c find overlapping 60 0 70 99]
} {}
test canvImg-8.20 {ImageToArea procedure} testImageType {
    .c gettags [.c find overlapping 60 0 70 99.999]
} {}
test canvImg-8.21 {ImageToArea procedure} testImageType {
    .c gettags [.c find overlapping 60 0 70 101]
} {image}
test canvImg-8.22 {ImageToArea procedure} testImageType {
    .c gettags [.c find overlapping 81 105 120 115]
} {}
test canvImg-8.23 {ImageToArea procedure} testImageType {
    .c gettags [.c find overlapping 80.001 105 120 115]
} {}
test canvImg-8.24 {ImageToArea procedure} testImageType {
    .c gettags [.c find overlapping 79 105 120 115]
} {image}
test canvImg-8.25 {ImageToArea procedure} testImageType {
    .c gettags [.c find overlapping 60 116 70 150]
} {}
test canvImg-8.26 {ImageToArea procedure} testImageType {
    .c gettags [.c find overlapping 60 115.001 70 150]
} {}
test canvImg-8.27 {ImageToArea procedure} testImageType {
    .c gettags [.c find overlapping 60 114 70 150]
} {image}
test canvImg-8.28 {ImageToArea procedure} testImageType {
    .c gettags [.c find overlapping 0 105 49 115]
} {}
test canvImg-8.29 {ImageToArea procedure} testImageType {
    .c gettags [.c find overlapping 0 105 50 114.999]
} {}
test canvImg-8.30 {ImageToArea procedure} testImageType {
    .c gettags [.c find overlapping 0 105 51 115]
} {image}
test canvImg-8.31 {ImageToArea procedure} testImageType {
    .c gettags [.c find overlapping 0 0 49.999 99.999]
} {}
test canvImg-8.32 {ImageToArea procedure} testImageType {
    .c gettags [.c find overlapping 0 0 51 101]
} {image}
test canvImg-8.33 {ImageToArea procedure} testImageType {
    .c gettags [.c find overlapping 80 0 150 100]
} {}
test canvImg-8.34 {ImageToArea procedure} testImageType {
    .c gettags [.c find overlapping 79 0 150 101]
} {image}
test canvImg-8.35 {ImageToArea procedure} testImageType {
    .c gettags [.c find overlapping 80.001 115.001 150 180]
} {}
test canvImg-8.36 {ImageToArea procedure} testImageType {
    .c gettags [.c find overlapping 79 114 150 180]
} {image}
test canvImg-8.37 {ImageToArea procedure} testImageType {
    .c gettags [.c find overlapping 0 115 50 180]
} {}
test canvImg-8.38 {ImageToArea procedure} testImageType {
    .c gettags [.c find overlapping 0 114 51 180]
} {image}
test canvImg-8.39 {ImageToArea procedure} testImageType {
    .c gettags [.c find enclosed 0 0 200 200]
} {image}
test canvImg-8.40 {ImageToArea procedure} testImageType {
    .c gettags [.c find enclosed 49.999 99.999 80.001 115.001]
} {image}
test canvImg-8.41 {ImageToArea procedure} testImageType {
    .c gettags [.c find enclosed 51 100 80 115]
} {}
test canvImg-8.42 {ImageToArea procedure} testImageType {
    .c gettags [.c find enclosed 50 101 80 115]
} {}
test canvImg-8.43 {ImageToArea procedure} testImageType {
    .c gettags [.c find enclosed 50 100 79 115]
} {}
test canvImg-8.44 {ImageToArea procedure} testImageType {
    .c gettags [.c find enclosed 50 100 80 114]
} {}

test canvImg-9.1 {DisplayImage procedure} testImageType {
    .c delete all
    .c create image 50 100 -image foo -tags image -anchor nw
    .c scale image 25 0 2.0 1.5
    .c bbox image
} {75 150 105 165}

test canvImg-10.1 {TranslateImage procedure} testImageType {
    .c delete all
    .c create image 50 100 -image foo -tags image -anchor nw
    update
    set x {}
    foo changed 2 4 6 8 30 15
    update
    set x
} {{foo display 2 4 6 8 30 30}}

test canvImg-11.1 {TranslateImage procedure} testImageType {
    .c delete all
    .c create image 50 100 -image foo -tags image -anchor nw
    update
    set x {}
    foo changed 2 4 6 8 40 50
    update
    set x
} {{foo display 0 0 40 50 30 30}}
test canvImg-11.2 {ImageChangedProc procedure} testImageType {
    .c delete all
    image create test foo -variable x
    .c create image 50 100 -image foo -tags image -anchor center
    update
    set x {}
    foo changed 0 0 0 0 40 50
    .c bbox image
} {30 75 70 125}
test canvImg-11.3 {ImageChangedProc procedure} testImageType {
    .c delete all
    image create test foo -variable x
    foo changed 0 0 0 0 40 50
    .c create image 50 100 -image foo -tags image -anchor nw
    .c create image 70 110 -image foo2 -anchor nw
    update
    set y {}
    image create test foo -variable x
    update
    set y
} {{foo2 display 0 0 20 40 50 40}}

# cleanup
::tcltest::cleanupTests
return













@


1.4
log
@touched all sources to ease next import
@
text
@d10 1
a10 1
# RCS: @@(#) $Id: canvImg.test,v 1.7.6.1 2000/05/04 21:26:29 spolk Exp $
d12 6
a17 17
if {[lsearch [namespace children] ::tcltest] == -1} {
    source [file join [pwd] [file dirname [info script]] defs.tcl]
}

if {[lsearch [image types] test] < 0} {
    puts "This application hasn't been compiled with the \"test\" image"
    puts "type, so I can't run this test.  Are you sure you're using"
    puts "tktest instead of wish?"
    ::tcltest::cleanupTests
    return
}

foreach i [winfo children .] {
    destroy $i
}
wm geometry . {}
raise .
d23 5
a27 3
image create test foo -variable x
image create test foo2 -variable y
foo2 changed 0 0 0 0 80 60
d37 1
a37 1
test canvImg-1.3 {options for image items} {
d46 1
a46 1
test canvImg-1.5 {options for image items} {
d71 1
a71 1
test canvImg-2.6 {CreateImage procedure} {
d75 1
a75 1
test canvImg-3.1 {ImageCoords procedure} {
d80 1
a80 1
test canvImg-3.2 {ImageCoords procedure} {
d85 1
a85 1
test canvImg-3.3 {ImageCoords procedure} {
d90 1
a90 1
test canvImg-3.4 {ImageCoords procedure} {
d95 1
a95 1
test canvImg-3.5 {ImageCoords procedure} {
d101 1
a101 1
test canvImg-4.1 {ConfiugreImage procedure} {
d110 1
a110 1
test canvImg-4.2 {ConfiugreImage procedure} {
d120 1
a120 1
test canvImg-4.3 {ConfiugreImage procedure} {
d129 1
a129 1
test canvImg-5.1 {DeleteImage procedure} {
d149 1
a149 1
test canvImg-6.1 {ComputeImageBbox procedure} {
d154 1
a154 1
test canvImg-6.2 {ComputeImageBbox procedure} {
d164 1
a164 1
test canvImg-6.4 {ComputeImageBbox procedure} {
d169 1
a169 1
test canvImg-6.5 {ComputeImageBbox procedure} {
d174 1
a174 1
test canvImg-6.6 {ComputeImageBbox procedure} {
d179 1
a179 1
test canvImg-6.7 {ComputeImageBbox procedure} {
d184 1
a184 1
test canvImg-6.8 {ComputeImageBbox procedure} {
d189 1
a189 1
test canvImg-6.9 {ComputeImageBbox procedure} {
d194 1
a194 1
test canvImg-6.10 {ComputeImageBbox procedure} {
d199 1
a199 1
test canvImg-6.11 {ComputeImageBbox procedure} {
d204 1
a204 1
test canvImg-6.12 {ComputeImageBbox procedure} {
d213 1
a213 1
test canvImg-7.1 {DisplayImage procedure} {nonPortable} {
d232 3
a234 1
.c create image 50 100 -image foo -tags image -anchor nw
d256 1
a256 1
    test canvImg-8.$i {ImageToPoint procedure} {
d264 4
a267 2
.c create image 50 100 -image foo -tags image -anchor nw
test canvImg-8.19 {ImageToArea procedure} {
d270 1
a270 1
test canvImg-8.20 {ImageToArea procedure} {
d273 1
a273 1
test canvImg-8.21 {ImageToArea procedure} {
d276 1
a276 1
test canvImg-8.22 {ImageToArea procedure} {
d279 1
a279 1
test canvImg-8.23 {ImageToArea procedure} {
d282 1
a282 1
test canvImg-8.24 {ImageToArea procedure} {
d285 1
a285 1
test canvImg-8.25 {ImageToArea procedure} {
d288 1
a288 1
test canvImg-8.26 {ImageToArea procedure} {
d291 1
a291 1
test canvImg-8.27 {ImageToArea procedure} {
d294 1
a294 1
test canvImg-8.28 {ImageToArea procedure} {
d297 1
a297 1
test canvImg-8.29 {ImageToArea procedure} {
d300 1
a300 1
test canvImg-8.30 {ImageToArea procedure} {
d303 1
a303 1
test canvImg-8.31 {ImageToArea procedure} {
d306 1
a306 1
test canvImg-8.32 {ImageToArea procedure} {
d309 1
a309 1
test canvImg-8.33 {ImageToArea procedure} {
d312 1
a312 1
test canvImg-8.34 {ImageToArea procedure} {
d315 1
a315 1
test canvImg-8.35 {ImageToArea procedure} {
d318 1
a318 1
test canvImg-8.36 {ImageToArea procedure} {
d321 1
a321 1
test canvImg-8.37 {ImageToArea procedure} {
d324 1
a324 1
test canvImg-8.38 {ImageToArea procedure} {
d327 1
a327 1
test canvImg-8.39 {ImageToArea procedure} {
d330 1
a330 1
test canvImg-8.40 {ImageToArea procedure} {
d333 1
a333 1
test canvImg-8.41 {ImageToArea procedure} {
d336 1
a336 1
test canvImg-8.42 {ImageToArea procedure} {
d339 1
a339 1
test canvImg-8.43 {ImageToArea procedure} {
d342 1
a342 1
test canvImg-8.44 {ImageToArea procedure} {
d346 1
a346 1
test canvImg-9.1 {DisplayImage procedure} {
d353 1
a353 1
test canvImg-10.1 {TranslateImage procedure} {
d363 1
a363 1
test canvImg-11.1 {TranslateImage procedure} {
d372 1
a372 1
test canvImg-11.2 {ImageChangedProc procedure} {
d381 1
a381 1
test canvImg-11.3 {ImageChangedProc procedure} {
@


1.3
log
@touched all sources to ease next import
@
text
@@


1.2
log
@touched all tk files to ease next import
@
text
@@


1.1
log
@Initial revision
@
text
@d7 2
d10 5
a14 4
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
# RCS: @@(#) $Id: canvImg.test,v 1.8 1999/01/26 04:11:34 jingham Exp $
d20 1
a23 4
if {[info procs test] != "test"} {
    source defs
}

d63 1
a63 1
} {1 {wrong # args: should be ".c create image x y ?options?"}}
d103 1
a103 1
} {1 {wrong # coordinates: expected 0 or 2, got 1}}
d398 17
@


1.1.1.1
log
@import insight-2000-02-04 snapshot (2nd try)
@
text
@@


1.1.1.2
log
@Tk 8.3 upgrade
@
text
@a6 2
# Copyright (c) 1998-1999 by Scriptics Corporation.
# All rights reserved.
d8 4
a11 5
# RCS: @@(#) $Id: canvImg.test,v 1.7.6.1 2000/05/04 21:26:29 spolk Exp $

if {[lsearch [namespace children] ::tcltest] == -1} {
    source [file join [pwd] [file dirname [info script]] defs.tcl]
}
a16 1
    ::tcltest::cleanupTests
d20 4
d63 1
a63 1
} {1 {wrong # coordinates: expected 2, got 1}}
d103 1
a103 1
} {1 {wrong # coordinates: expected 2, got 1}}
a397 17

# cleanup
::tcltest::cleanupTests
return













@


1.1.1.3
log
@import tk 8.4.0
@
text
@d10 1
a10 1
# RCS: @@(#) $Id: canvImg.test,v 1.5 2002/07/14 05:48:46 dgp Exp $
d12 17
a28 6
package require tcltest 2.1
namespace import -force tcltest::configure
namespace import -force tcltest::testsDirectory
configure -testdir [file join [pwd] [file dirname [info script]]]
configure -loadfile [file join [testsDirectory] constraints.tcl]
tcltest::loadTestedCommands
d34 3
a36 5
if {[testConstraint testImageType]} {
    image create test foo -variable x
    image create test foo2 -variable y
    foo2 changed 0 0 0 0 80 60
}
d46 1
a46 1
test canvImg-1.3 {options for image items} testImageType {
d55 1
a55 1
test canvImg-1.5 {options for image items} testImageType {
d80 1
a80 1
test canvImg-2.6 {CreateImage procedure} testImageType {
d84 1
a84 1
test canvImg-3.1 {ImageCoords procedure} testImageType {
d89 1
a89 1
test canvImg-3.2 {ImageCoords procedure} testImageType {
d94 1
a94 1
test canvImg-3.3 {ImageCoords procedure} testImageType {
d99 1
a99 1
test canvImg-3.4 {ImageCoords procedure} testImageType {
d104 1
a104 1
test canvImg-3.5 {ImageCoords procedure} testImageType {
d110 1
a110 1
test canvImg-4.1 {ConfiugreImage procedure} testImageType {
d119 1
a119 1
test canvImg-4.2 {ConfiugreImage procedure} testImageType {
d129 1
a129 1
test canvImg-4.3 {ConfiugreImage procedure} testImageType {
d138 1
a138 1
test canvImg-5.1 {DeleteImage procedure} testImageType {
d158 1
a158 1
test canvImg-6.1 {ComputeImageBbox procedure} testImageType {
d163 1
a163 1
test canvImg-6.2 {ComputeImageBbox procedure} testImageType {
d173 1
a173 1
test canvImg-6.4 {ComputeImageBbox procedure} testImageType {
d178 1
a178 1
test canvImg-6.5 {ComputeImageBbox procedure} testImageType {
d183 1
a183 1
test canvImg-6.6 {ComputeImageBbox procedure} testImageType {
d188 1
a188 1
test canvImg-6.7 {ComputeImageBbox procedure} testImageType {
d193 1
a193 1
test canvImg-6.8 {ComputeImageBbox procedure} testImageType {
d198 1
a198 1
test canvImg-6.9 {ComputeImageBbox procedure} testImageType {
d203 1
a203 1
test canvImg-6.10 {ComputeImageBbox procedure} testImageType {
d208 1
a208 1
test canvImg-6.11 {ComputeImageBbox procedure} testImageType {
d213 1
a213 1
test canvImg-6.12 {ComputeImageBbox procedure} testImageType {
d222 1
a222 1
test canvImg-7.1 {DisplayImage procedure} {nonPortable testImageType} {
d241 1
a241 3
if {[testConstraint testImageType]} {
    .c create image 50 100 -image foo -tags image -anchor nw
}
d263 1
a263 1
    test canvImg-8.$i {ImageToPoint procedure} testImageType {
d271 2
a272 4
if {[testConstraint testImageType]} {
    .c create image 50 100 -image foo -tags image -anchor nw
}
test canvImg-8.19 {ImageToArea procedure} testImageType {
d275 1
a275 1
test canvImg-8.20 {ImageToArea procedure} testImageType {
d278 1
a278 1
test canvImg-8.21 {ImageToArea procedure} testImageType {
d281 1
a281 1
test canvImg-8.22 {ImageToArea procedure} testImageType {
d284 1
a284 1
test canvImg-8.23 {ImageToArea procedure} testImageType {
d287 1
a287 1
test canvImg-8.24 {ImageToArea procedure} testImageType {
d290 1
a290 1
test canvImg-8.25 {ImageToArea procedure} testImageType {
d293 1
a293 1
test canvImg-8.26 {ImageToArea procedure} testImageType {
d296 1
a296 1
test canvImg-8.27 {ImageToArea procedure} testImageType {
d299 1
a299 1
test canvImg-8.28 {ImageToArea procedure} testImageType {
d302 1
a302 1
test canvImg-8.29 {ImageToArea procedure} testImageType {
d305 1
a305 1
test canvImg-8.30 {ImageToArea procedure} testImageType {
d308 1
a308 1
test canvImg-8.31 {ImageToArea procedure} testImageType {
d311 1
a311 1
test canvImg-8.32 {ImageToArea procedure} testImageType {
d314 1
a314 1
test canvImg-8.33 {ImageToArea procedure} testImageType {
d317 1
a317 1
test canvImg-8.34 {ImageToArea procedure} testImageType {
d320 1
a320 1
test canvImg-8.35 {ImageToArea procedure} testImageType {
d323 1
a323 1
test canvImg-8.36 {ImageToArea procedure} testImageType {
d326 1
a326 1
test canvImg-8.37 {ImageToArea procedure} testImageType {
d329 1
a329 1
test canvImg-8.38 {ImageToArea procedure} testImageType {
d332 1
a332 1
test canvImg-8.39 {ImageToArea procedure} testImageType {
d335 1
a335 1
test canvImg-8.40 {ImageToArea procedure} testImageType {
d338 1
a338 1
test canvImg-8.41 {ImageToArea procedure} testImageType {
d341 1
a341 1
test canvImg-8.42 {ImageToArea procedure} testImageType {
d344 1
a344 1
test canvImg-8.43 {ImageToArea procedure} testImageType {
d347 1
a347 1
test canvImg-8.44 {ImageToArea procedure} testImageType {
d351 1
a351 1
test canvImg-9.1 {DisplayImage procedure} testImageType {
d358 1
a358 1
test canvImg-10.1 {TranslateImage procedure} testImageType {
d368 1
a368 1
test canvImg-11.1 {TranslateImage procedure} testImageType {
d377 1
a377 1
test canvImg-11.2 {ImageChangedProc procedure} testImageType {
d386 1
a386 1
test canvImg-11.3 {ImageChangedProc procedure} testImageType {
@


