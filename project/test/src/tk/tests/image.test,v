head	1.5;
access;
symbols
	sid-snapshot-20180601:1.5
	sid-snapshot-20180501:1.5
	sid-snapshot-20180401:1.5
	sid-snapshot-20180301:1.5
	sid-snapshot-20180201:1.5
	sid-snapshot-20180101:1.5
	sid-snapshot-20171201:1.5
	sid-snapshot-20171101:1.5
	sid-snapshot-20171001:1.5
	sid-snapshot-20170901:1.5
	sid-snapshot-20170801:1.5
	sid-snapshot-20170701:1.5
	sid-snapshot-20170601:1.5
	sid-snapshot-20170501:1.5
	sid-snapshot-20170401:1.5
	sid-snapshot-20170301:1.5
	sid-snapshot-20170201:1.5
	sid-snapshot-20170101:1.5
	sid-snapshot-20161201:1.5
	sid-snapshot-20161101:1.5
	sid-snapshot-20160901:1.5
	sid-snapshot-20160801:1.5
	sid-snapshot-20160701:1.5
	sid-snapshot-20160601:1.5
	sid-snapshot-20160501:1.5
	sid-snapshot-20160401:1.5
	sid-snapshot-20160301:1.5
	sid-snapshot-20160201:1.5
	sid-snapshot-20160101:1.5
	sid-snapshot-20151201:1.5
	sid-snapshot-20151101:1.5
	sid-snapshot-20151001:1.5
	sid-snapshot-20150901:1.5
	sid-snapshot-20150801:1.5
	sid-snapshot-20150701:1.5
	sid-snapshot-20150601:1.5
	sid-snapshot-20150501:1.5
	sid-snapshot-20150401:1.5
	sid-snapshot-20150301:1.5
	sid-snapshot-20150201:1.5
	sid-snapshot-20150101:1.5
	sid-snapshot-20141201:1.5
	sid-snapshot-20141101:1.5
	sid-snapshot-20141001:1.5
	sid-snapshot-20140901:1.5
	sid-snapshot-20140801:1.5
	sid-snapshot-20140701:1.5
	sid-snapshot-20140601:1.5
	sid-snapshot-20140501:1.5
	sid-snapshot-20140401:1.5
	sid-snapshot-20140301:1.5
	sid-snapshot-20140201:1.5
	sid-snapshot-20140101:1.5
	sid-snapshot-20131201:1.5
	sid-snapshot-20131101:1.5
	sid-snapshot-20131001:1.5
	sid-snapshot-20130901:1.5
	sid-snapshot-20130801:1.5
	sid-snapshot-20130701:1.5
	sid-snapshot-20130601:1.5
	insight_7_6-2013-04-10-branchpoint:1.5
	gdb_7_6-branch:1.5.0.28
	sid-snapshot-20130501:1.5
	sid-snapshot-20130401:1.5
	sid-snapshot-20130301:1.5
	sid-snapshot-20130201:1.5
	sid-snapshot-20130101:1.5
	sid-snapshot-20121201:1.5
	sid-snapshot-20121101:1.5
	sid-snapshot-20121001:1.5
	sid-snapshot-20120901:1.5
	gdb_7_5-branch:1.5.0.26
	sid-snapshot-20120801:1.5
	sid-snapshot-20120701:1.5
	sid-snapshot-20120601:1.5
	sid-snapshot-20120501:1.5
	sid-snapshot-20120401:1.5
	gdb_7_4-branch:1.5.0.24
	sid-snapshot-20120301:1.5
	sid-snapshot-20120201:1.5
	sid-snapshot-20120101:1.5
	sid-snapshot-20111201:1.5
	sid-snapshot-20111101:1.5
	sid-snapshot-20111001:1.5
	sid-snapshot-20110901:1.5
	gdb_7_3-branch:1.5.0.22
	sid-snapshot-20110801:1.5
	sid-snapshot-20110701:1.5
	sid-snapshot-20110601:1.5
	sid-snapshot-20110501:1.5
	sid-snapshot-20110401:1.5
	sid-snapshot-20110301:1.5
	sid-snapshot-20110201:1.5
	sid-snapshot-20110101:1.5
	sid-snapshot-20101201:1.5
	sid-snapshot-20101101:1.5
	sid-snapshot-20101001:1.5
	sid-snapshot-20100901:1.5
	sid-snapshot-20100801:1.5
	sid-snapshot-20100701:1.5
	sid-snapshot-20100601:1.5
	sid-snapshot-20100501:1.5
	sid-snapshot-20100401:1.5
	sid-snapshot-20100301:1.5
	gdb_7_1-branch:1.5.0.20
	gdb_7_0-branch:1.5.0.18
	sid-snapshot-20100201:1.5
	sid-snapshot-20100101:1.5
	sid-snapshot-20091201:1.5
	sid-snapshot-20091101:1.5
	sid-snapshot-20091001:1.5
	arc-sim-20090309:1.5
	sid-snapshot-20090901:1.5
	sid-snapshot-20090801:1.5
	sid-snapshot-20090701:1.5
	sid-snapshot-20090601:1.5
	sid-snapshot-20090501:1.5
	kevinb-pre-tk8_5_7_merge:1.5
	sid-snapshot-20090401:1.5
	arc-insight_6_8-branch:1.5.0.16
	arc-insight_6_8-branchpoint:1.5
	insight_6_8-branch:1.5.0.14
	insight_6_8-branchpoint:1.5
	sid-snapshot-20090301:1.5
	sid-snapshot-20090201:1.5
	sid-snapshot-20090101:1.5
	sid-snapshot-20081201:1.5
	sid-snapshot-20081101:1.5
	sid-snapshot-20081001:1.5
	sid-snapshot-20080901:1.5
	sid-snapshot-20080801:1.5
	sid-snapshot-20080701:1.5
	sid-snapshot-20080601:1.5
	sid-snapshot-20080501:1.5
	sid-snapshot-20080403:1.5
	sid-snapshot-20080401:1.5
	gdb_6_8-branch:1.5.0.12
	sid-snapshot-20080301:1.5
	sid-snapshot-20080201:1.5
	sid-snapshot-20080101:1.5
	sid-snapshot-20071201:1.5
	sid-snapshot-20071101:1.5
	sid-snapshot-20071001:1.5
	insight_6_6-20070208-release:1.5
	gdb_6_6-branch:1.5.0.10
	gdb_6_6-2006-11-15-branchpoint:1.5
	insight_6_5-20061003-release:1.5
	gdb_6_5-branch:1.5.0.8
	gdb_6_5-2006-05-14-branchpoint:1.5
	gdb_6_4-branch:1.5.0.6
	gdb_6_4-2005-11-01-branchpoint:1.5
	gdb_6_1-2004-04-05-release:1.5
	gdb_6_1-branch:1.5.0.4
	gdb_6_1-2004-03-01-gmt-branchpoint:1.5
	gdb_6_0-2003-10-04-release:1.5
	gdb_6_0-branch:1.5.0.2
	gdb_6_0-2003-06-23-branchpoint:1.5
	TK8_4_1:1.1.1.3
	gdb_5_3-2002-12-12-release:1.2
	tcltk840-20020924-branch:1.3.0.2
	tcltk840-20020924-branchpoint:1.3
	TK_8_4_0:1.1.1.3
	sid-20020905-branchpoint:1.2
	sid-20020905-branch:1.2.0.6
	gdb_5_3-branch:1.2.0.4
	gdb_5_3-2002-09-04-branchpoint:1.2
	gdb_5_2_1-2002-07-23-release:1.2
	gdb_5_2-2002-04-29-release:1.2
	gdb_5_2-branch:1.2.0.2
	gdb_5_2-2002-03-03-branchpoint:1.2
	gdb_5_1_1-2002-01-24-release:1.1.1.1
	cygnus_cvs_20020108_pre:1.2
	gdb_5_1_0_1-2002-01-03-branch:1.1.1.1.0.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.1.1.1
	gdb_5_1-2001-11-21-release:1.1.1.1
	gdb_s390-2001-09-26-branch:1.1.1.1.0.6
	gdb_s390-2001-09-26-branchpoint:1.1.1.1
	TK_8_3:1.1.1.2
	NET:1.1.1
	gdb_5_1-2001-07-29-branch:1.1.1.1.0.4
	gdb_5_1-2001-07-29-branchpoint:1.1.1.1
	insight-precleanup-2001-01-01:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	insight-2000-02-04:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.5
date	2003.01.21.20.24.50;	author hunt;	state Exp;
branches;
next	1.4;

1.4
date	2003.01.21.19.53.16;	author hunt;	state Exp;
branches;
next	1.3;

1.3
date	2002.09.24.18.39.29;	author kseitz;	state Exp;
branches;
next	1.2;

1.2
date	2001.09.10.01.16.53;	author irox;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.07.00.19.30;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.07.00.19.30;	author jsm;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2001.09.10.00.22.36;	author irox;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.09.24.20.39.06;	author kseitz;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Updated to tk 8.4.1
@
text
@# This file is a Tcl script to test out the "image" command and the
# other procedures in the file tkImage.c.  It is organized in the
# standard fashion for Tcl tests.
#
# Copyright (c) 1994 The Regents of the University of California.
# Copyright (c) 1994 Sun Microsystems, Inc.
# Copyright (c) 1998-1999 by Scriptics Corporation.
# All rights reserved.
#
# RCS: @@(#) $Id: image.test,v 1.7 2002/07/13 21:52:34 dgp Exp $

package require tcltest 2.1
namespace import -force tcltest::configure
namespace import -force tcltest::testsDirectory
configure -testdir [file join [pwd] [file dirname [info script]]]
configure -loadfile [file join [testsDirectory] constraints.tcl]
tcltest::loadTestedCommands

namespace import -force tcltest::interpreter
namespace import -force tcltest::makeFile
namespace import -force tcltest::removeFile

eval image delete [image names]
canvas .c -highlightthickness 2
pack .c
update
test image-1.1 {Tk_ImageCmd procedure, "create" option} {
    list [catch image msg] $msg
} {1 {wrong # args: should be "image option ?args?"}}
test image-1.2 {Tk_ImageCmd procedure, "create" option} {
    list [catch {image gorp} msg] $msg
} {1 {bad option "gorp": must be create, delete, height, inuse, names, type, types, or width}}
test image-1.3 {Tk_ImageCmd procedure, "create" option} {
    list [catch {image create} msg] $msg
} {1 {wrong # args: should be "image create type ?name? ?options?"}}
test image-1.4 {Tk_ImageCmd procedure, "create" option} {
    list [catch {image c bad_type} msg] $msg
} {1 {image type "bad_type" doesn't exist}}
test image-1.5 {Tk_ImageCmd procedure, "create" option} testImageType {
    list [image create test myimage] [image names]
} {myimage myimage}
test image-1.6 {Tk_ImageCmd procedure, "create" option} testImageType {
    scan [image create test] image%d first
    image create test myimage
    scan [image create test -variable x] image%d second
    expr $second-$first
} {1}
test image-1.7 {Tk_ImageCmd procedure, "create" option} testImageType {
    image delete myimage
    image create test myimage -variable x
    .c create image 100 50 -image myimage
    .c create image 100 150 -image myimage
    update
    set x {}
    image create test myimage -variable x
    update
    set x
} {{myimage free} {myimage free} {myimage delete} {myimage get} {myimage get} {myimage display 0 0 30 15 30 30} {myimage display 0 0 30 15 30 130}}
test image-1.8 {Tk_ImageCmd procedure, "create" option} testImageType {
    .c delete all
    image create test myimage -variable x
    .c create image 100 50 -image myimage
    .c create image 100 150 -image myimage
    image delete myimage
    update
    set x {}
    image create test myimage -variable x
    update
    set x
} {{myimage get} {myimage get} {myimage display 0 0 30 15 30 30} {myimage display 0 0 30 15 30 130}}
test image-1.9 {Tk_ImageCmd procedure, "create" option} testImageType {
    .c delete all
    eval image delete [image names]
    list [catch {image create test -badName foo} msg] $msg [image names]
} {1 {bad option name "-badName"} {}}
test image-1.10 {Tk_ImageCmd procedure, "create" option with "." as name} {
    set script [makeFile {
	update
	puts [list [catch {image create photo .} msg] $msg]
	exit
    } script]
    set x [list [catch {exec [interpreter] <$script} msg] $msg]
    removeFile script
    set x
} {0 {1 {this isn't a Tk applicationNULL main window}}}
# I don't like the error message!

test image-2.1 {Tk_ImageCmd procedure, "delete" option} {
    list [catch {image delete} msg] $msg
} {0 {}}
test image-2.2 {Tk_ImageCmd procedure, "delete" option} testImageType {
    .c delete all
    eval image delete [image names]
    image create test myimage
    image create test img2
    set result {}
    lappend result [lsort [image names]]
    image d myimage img2
    lappend result [image names]
} {{img2 myimage} {}}
test image-2.3 {Tk_ImageCmd procedure, "delete" option} testImageType {
    .c delete all
    eval image delete [image names]
    image create test myimage
    image create test img2
    list [catch {image delete myimage gorp img2} msg] $msg [image names]
} {1 {image "gorp" doesn't exist} img2}

test image-3.1 {Tk_ImageCmd procedure, "height" option} {
    list [catch {image height} msg] $msg
} {1 {wrong # args: should be "image height name"}}
test image-3.2 {Tk_ImageCmd procedure, "height" option} {
    list [catch {image height a b} msg] $msg
} {1 {wrong # args: should be "image height name"}}
test image-3.3 {Tk_ImageCmd procedure, "height" option} {
    list [catch {image height foo} msg] $msg
} {1 {image "foo" doesn't exist}}
test image-3.4 {Tk_ImageCmd procedure, "height" option} testImageType {
    image create test myimage
    set x [image h myimage]
    myimage changed 0 0 0 0 60 50
    list $x [image height myimage]
} {15 50}

test image-4.1 {Tk_ImageCmd procedure, "names" option} {
    list [catch {image names x} msg] $msg
} {1 {wrong # args: should be "image names"}}
test image-4.2 {Tk_ImageCmd procedure, "names" option} testImageType {
    .c delete all
    eval image delete [image names]
    image create test myimage
    image create test img2
    image create test 24613
    lsort [image names]
} {24613 img2 myimage}
test image-4.3 {Tk_ImageCmd procedure, "names" option} {
    .c delete all
    eval image delete [image names]
    lsort [image names]
} {}

test image-5.1 {Tk_ImageCmd procedure, "type" option} {
    list [catch {image type} msg] $msg
} {1 {wrong # args: should be "image type name"}}
test image-5.2 {Tk_ImageCmd procedure, "type" option} {
    list [catch {image type a b} msg] $msg
} {1 {wrong # args: should be "image type name"}}
test image-5.3 {Tk_ImageCmd procedure, "type" option} {
    list [catch {image type foo} msg] $msg
} {1 {image "foo" doesn't exist}}
test image-5.4 {Tk_ImageCmd procedure, "type" option} testImageType {
    image create test myimage
    image type myimage
} {test}
test image-5.5 {Tk_ImageCmd procedure, "type" option} testImageType {
    image create test myimage
    .c create image 50 50 -image myimage
    image delete myimage
    image type myimage
} {}

test image-6.1 {Tk_ImageCmd procedure, "types" option} {
    list [catch {image types x} msg] $msg
} {1 {wrong # args: should be "image types"}}
test image-6.2 {Tk_ImageCmd procedure, "types" option} testImageType {
    lsort [image types]
} {bitmap photo test}

test image-7.1 {Tk_ImageCmd procedure, "width" option} {
    list [catch {image width} msg] $msg
} {1 {wrong # args: should be "image width name"}}
test image-7.2 {Tk_ImageCmd procedure, "width" option} {
    list [catch {image width a b} msg] $msg
} {1 {wrong # args: should be "image width name"}}
test image-7.3 {Tk_ImageCmd procedure, "width" option} {
    list [catch {image width foo} msg] $msg
} {1 {image "foo" doesn't exist}}
test image-7.4 {Tk_ImageCmd procedure, "width" option} testImageType {
    image create test myimage
    set x [image w myimage]
    myimage changed 0 0 0 0 60 50
    list $x [image width myimage]
} {30 60}

test image-8.1 {Tk_ImageCmd procedure, "inuse" option} testImageType {
    catch {image delete myimage2}
    image create test myimage2
    set res {}
    lappend res [image inuse myimage2]
    catch {destroy .b}
    button .b -image myimage2
    lappend res [image inuse myimage2]
    catch {destroy .b}
    image delete myimage2
    set res
} [list 0 1]
    

test image-9.1 {Tk_ImageChanged procedure} testImageType {
    .c delete all
    eval image delete [image names]
    image create test foo -variable x
    .c create image 50 50 -image foo
    update
    set x {}
    foo changed 5 6 7 8 30 15
    update
    set x
} {{foo display 5 6 7 8 30 30}}
test image-9.2 {Tk_ImageChanged procedure} testImageType {
    .c delete all
    eval image delete [image names]
    image create test foo -variable x
    .c create image 50 50 -image foo
    .c create image 90 100 -image foo
    update
    set x {}
    foo changed 5 6 7 8 30 15
    update
    set x
} {{foo display 5 6 25 9 30 30} {foo display 0 0 12 14 65 74}}

test image-10.1 {Tk_GetImage procedure} {
    list [catch {.c create image 100 10 -image bad_name} msg] $msg
} {1 {image "bad_name" doesn't exist}}
test image-10.2 {Tk_GetImage procedure} testImageType {
    image create test mytest
    catch {destroy .l}
    label .l -image mytest
    image delete  mytest
    set result [list [catch {label .l2 -image mytest} msg] $msg]
    destroy .l
    set result
} {1 {image "mytest" doesn't exist}}

test image-11.1 {Tk_FreeImage procedure} testImageType {
    .c delete all
    eval image delete [image names]
    image create test foo -variable x
    .c create image 50 50 -image foo -tags i1
    .c create image 90 100 -image foo -tags i2
    pack forget .c
    update
    set x {}
    .c delete i1
    pack .c
    update
    list [image names] $x
} {foo {{foo free} {foo display 0 0 30 15 103 121}}}
test image-11.2 {Tk_FreeImage procedure} testImageType {
    .c delete all
    eval image delete [image names]
    image create test foo -variable x
    .c create image 50 50 -image foo -tags i1
    image delete foo
    update
    set names [image names]
    set x {}
    .c delete i1
    pack forget .c
    pack .c
    update
    list $names [image names] $x
} {foo {} {}}

# Non-portable, apparently due to differences in rounding:

test image-12.1 {Tk_RedrawImage procedure, redisplay area clipping} \
	{testImageType nonPortable} {
    .c delete all
    eval image delete [image names]
    image create test foo -variable x
    .c create image 50 60 -image foo -tags i1 -anchor nw
    update
    .c create rectangle 30 40 55 65 -width 0 -fill black -outline {}
    set x {}
    update
    set x
} {{foo display 0 0 5 5 50 50}}
test image-12.2 {Tk_RedrawImage procedure, redisplay area clipping} \
	{testImageType nonPortable} {
    .c delete all
    eval image delete [image names]
    image create test foo -variable x
    .c create image 50 60 -image foo -tags i1 -anchor nw
    update
    .c create rectangle 60 40 100 65 -width 0 -fill black -outline {}
    set x {}
    update
    set x
} {{foo display 10 0 20 5 30 50}}
test image-12.3 {Tk_RedrawImage procedure, redisplay area clipping} \
	{testImageType nonPortable} {
    .c delete all
    eval image delete [image names]
    image create test foo -variable x
    .c create image 50 60 -image foo -tags i1 -anchor nw
    update
    .c create rectangle 60 70 100 200 -width 0 -fill black -outline {}
    set x {}
    update
    set x
} {{foo display 10 10 20 5 30 30}}
test image-12.4 {Tk_RedrawImage procedure, redisplay area clipping} \
	{testImageType nonPortable} {
    .c delete all
    eval image delete [image names]
    image create test foo -variable x
    .c create image 50 60 -image foo -tags i1 -anchor nw
    update
    .c create rectangle 30 70 55 200 -width 0 -fill black -outline {}
    set x {}
    update
    set x
} {{foo display 0 10 5 5 50 30}}
test image-12.5 {Tk_RedrawImage procedure, redisplay area clipping} \
	{testImageType nonPortable} {
    .c delete all
    eval image delete [image names]
    image create test foo -variable x
    .c create image 50 60 -image foo -tags i1 -anchor nw
    update
    .c create rectangle 10 20 120 130 -width 0 -fill black -outline {}
    set x {}
    update
    set x
} {{foo display 0 0 30 15 70 70}}
test image-12.6 {Tk_RedrawImage procedure, redisplay area clipping} \
	{testImageType nonPortable} {
    .c delete all
    eval image delete [image names]
    image create test foo -variable x
    .c create image 50 60 -image foo -tags i1 -anchor nw
    update
    .c create rectangle 55 65 75 70 -width 0 -fill black -outline {}
    set x {}
    update
    set x
} {{foo display 5 5 20 5 30 30}}

test image-13.1 {Tk_SizeOfImage procedure} testImageType {
    eval image delete [image names]
    image create test foo -variable x
    set result [list [image width foo] [image height foo]]
    foo changed 0 0 0 0 85 60
    lappend result [image width foo] [image height foo]
} {30 15 85 60}

test image-13.2 {DeleteImage procedure} testImageType {
    .c delete all
    eval image delete [image names]
    image create test foo -variable x
    .c create image 50 50 -image foo -tags i1
    .c create image 90 100 -image foo -tags i2
    set x {}
    image delete foo
    lappend x | [image names] |
    image delete foo
    lappend x | [image names] |
} {{foo free} {foo free} {foo delete} | foo | | foo |}

catch {image delete hidden}
set l [image names]
set h [interp hidden]

test image-14.1 {image command vs hidden commands} {
    catch {image delete hidden}
    image create photo hidden
    interp hide {} hidden
    image delete hidden
    list [image names] [interp hidden]
} [list $l $h]
    
destroy .c
eval image delete [image names]

# cleanup
::tcltest::cleanupTests
return
@


1.4
log
@touched all sources to ease next import
@
text
@d10 1
a10 1
# RCS: @@(#) $Id: image.test,v 1.7.6.1 2000/05/04 21:26:29 spolk Exp $
d12 10
a21 17
if {[lsearch [namespace children] ::tcltest] == -1} {
    source [file join [pwd] [file dirname [info script]] defs.tcl]
}

if {[lsearch [image types] test] < 0} {
    puts "This application hasn't been compiled with the \"test\" image"
    puts "type, so I can't run this test.  Are you sure you're using"
    puts "tktest instead of wish?"
    ::tcltest::cleanupTests
    return
}

foreach i [winfo children .] {
    destroy $i
}
wm geometry . {}
raise .
d32 1
a32 1
} {1 {bad option "gorp": must be create, delete, height, names, type, types, or width}}
d39 1
a39 1
test image-1.5 {Tk_ImageCmd procedure, "create" option} {
d42 1
a42 1
test image-1.6 {Tk_ImageCmd procedure, "create" option} {
d48 1
a48 1
test image-1.7 {Tk_ImageCmd procedure, "create" option} {
d59 1
a59 1
test image-1.8 {Tk_ImageCmd procedure, "create" option} {
d71 1
a71 1
test image-1.9 {Tk_ImageCmd procedure, "create" option} {
d76 11
d91 1
a91 1
test image-2.2 {Tk_ImageCmd procedure, "delete" option} {
d101 1
a101 1
test image-2.3 {Tk_ImageCmd procedure, "delete" option} {
d118 1
a118 1
test image-3.4 {Tk_ImageCmd procedure, "height" option} {
d128 1
a128 1
test image-4.2 {Tk_ImageCmd procedure, "names" option} {
d151 1
a151 1
test image-5.4 {Tk_ImageCmd procedure, "type" option} {
d155 1
a155 1
test image-5.5 {Tk_ImageCmd procedure, "type" option} {
d165 1
a165 1
test image-6.2 {Tk_ImageCmd procedure, "types" option} {
d178 1
a178 1
test image-7.4 {Tk_ImageCmd procedure, "width" option} {
d185 15
a199 1
test image-8.1 {Tk_ImageChanged procedure} {
d210 1
a210 1
test image-8.2 {Tk_ImageChanged procedure} {
d223 1
a223 1
test image-9.1 {Tk_GetImage procedure} {
d226 1
a226 1
test image-9.2 {Tk_GetImage procedure} {
d236 1
a236 1
test image-10.1 {Tk_FreeImage procedure} {
d250 1
a250 1
test image-10.2 {Tk_FreeImage procedure} {
d268 2
a269 2
test image-11.1 {Tk_RedrawImage procedure, redisplay area clipping} \
	{nonPortable} {
d280 2
a281 2
test image-11.2 {Tk_RedrawImage procedure, redisplay area clipping} \
	{nonPortable} {
d292 2
a293 2
test image-11.3 {Tk_RedrawImage procedure, redisplay area clipping} \
	{nonPortable} {
d304 2
a305 2
test image-11.4 {Tk_RedrawImage procedure, redisplay area clipping} \
	{nonPortable} {
d316 2
a317 2
test image-11.5 {Tk_RedrawImage procedure, redisplay area clipping} \
	{nonPortable} {
d328 2
a329 2
test image-11.6 {Tk_RedrawImage procedure, redisplay area clipping} \
	{nonPortable} {
d341 1
a341 1
test image-12.1 {Tk_SizeOfImage procedure} {
d349 1
a349 1
test image-12.2 {DeleteImage procedure} {
d366 1
a366 1
test image-13.1 {image command vs hidden commands} {
a379 13













@


1.3
log
@touched all sources to ease next import
@
text
@@


1.2
log
@touched all tk files to ease next import
@
text
@@


1.1
log
@Initial revision
@
text
@d7 2
d10 5
a14 4
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
# RCS: @@(#) $Id: image.test,v 1.9 1999/01/26 04:11:35 jingham Exp $
d20 1
a23 4
if {[info procs test] != "test"} {
    source defs
}

d358 17
@


1.1.1.1
log
@import insight-2000-02-04 snapshot (2nd try)
@
text
@@


1.1.1.2
log
@Tk 8.3 upgrade
@
text
@a6 2
# Copyright (c) 1998-1999 by Scriptics Corporation.
# All rights reserved.
d8 4
a11 5
# RCS: @@(#) $Id: image.test,v 1.7.6.1 2000/05/04 21:26:29 spolk Exp $

if {[lsearch [namespace children] ::tcltest] == -1} {
    source [file join [pwd] [file dirname [info script]] defs.tcl]
}
a16 1
    ::tcltest::cleanupTests
d20 4
a357 17

# cleanup
::tcltest::cleanupTests
return













@


1.1.1.3
log
@import tk 8.4.0
@
text
@d10 1
a10 1
# RCS: @@(#) $Id: image.test,v 1.7 2002/07/13 21:52:34 dgp Exp $
d12 17
a28 10
package require tcltest 2.1
namespace import -force tcltest::configure
namespace import -force tcltest::testsDirectory
configure -testdir [file join [pwd] [file dirname [info script]]]
configure -loadfile [file join [testsDirectory] constraints.tcl]
tcltest::loadTestedCommands

namespace import -force tcltest::interpreter
namespace import -force tcltest::makeFile
namespace import -force tcltest::removeFile
d39 1
a39 1
} {1 {bad option "gorp": must be create, delete, height, inuse, names, type, types, or width}}
d46 1
a46 1
test image-1.5 {Tk_ImageCmd procedure, "create" option} testImageType {
d49 1
a49 1
test image-1.6 {Tk_ImageCmd procedure, "create" option} testImageType {
d55 1
a55 1
test image-1.7 {Tk_ImageCmd procedure, "create" option} testImageType {
d66 1
a66 1
test image-1.8 {Tk_ImageCmd procedure, "create" option} testImageType {
d78 1
a78 1
test image-1.9 {Tk_ImageCmd procedure, "create" option} testImageType {
a82 11
test image-1.10 {Tk_ImageCmd procedure, "create" option with "." as name} {
    set script [makeFile {
	update
	puts [list [catch {image create photo .} msg] $msg]
	exit
    } script]
    set x [list [catch {exec [interpreter] <$script} msg] $msg]
    removeFile script
    set x
} {0 {1 {this isn't a Tk applicationNULL main window}}}
# I don't like the error message!
d87 1
a87 1
test image-2.2 {Tk_ImageCmd procedure, "delete" option} testImageType {
d97 1
a97 1
test image-2.3 {Tk_ImageCmd procedure, "delete" option} testImageType {
d114 1
a114 1
test image-3.4 {Tk_ImageCmd procedure, "height" option} testImageType {
d124 1
a124 1
test image-4.2 {Tk_ImageCmd procedure, "names" option} testImageType {
d147 1
a147 1
test image-5.4 {Tk_ImageCmd procedure, "type" option} testImageType {
d151 1
a151 1
test image-5.5 {Tk_ImageCmd procedure, "type" option} testImageType {
d161 1
a161 1
test image-6.2 {Tk_ImageCmd procedure, "types" option} testImageType {
d174 1
a174 1
test image-7.4 {Tk_ImageCmd procedure, "width" option} testImageType {
d181 1
a181 15
test image-8.1 {Tk_ImageCmd procedure, "inuse" option} testImageType {
    catch {image delete myimage2}
    image create test myimage2
    set res {}
    lappend res [image inuse myimage2]
    catch {destroy .b}
    button .b -image myimage2
    lappend res [image inuse myimage2]
    catch {destroy .b}
    image delete myimage2
    set res
} [list 0 1]
    

test image-9.1 {Tk_ImageChanged procedure} testImageType {
d192 1
a192 1
test image-9.2 {Tk_ImageChanged procedure} testImageType {
d205 1
a205 1
test image-10.1 {Tk_GetImage procedure} {
d208 1
a208 1
test image-10.2 {Tk_GetImage procedure} testImageType {
d218 1
a218 1
test image-11.1 {Tk_FreeImage procedure} testImageType {
d232 1
a232 1
test image-11.2 {Tk_FreeImage procedure} testImageType {
d250 2
a251 2
test image-12.1 {Tk_RedrawImage procedure, redisplay area clipping} \
	{testImageType nonPortable} {
d262 2
a263 2
test image-12.2 {Tk_RedrawImage procedure, redisplay area clipping} \
	{testImageType nonPortable} {
d274 2
a275 2
test image-12.3 {Tk_RedrawImage procedure, redisplay area clipping} \
	{testImageType nonPortable} {
d286 2
a287 2
test image-12.4 {Tk_RedrawImage procedure, redisplay area clipping} \
	{testImageType nonPortable} {
d298 2
a299 2
test image-12.5 {Tk_RedrawImage procedure, redisplay area clipping} \
	{testImageType nonPortable} {
d310 2
a311 2
test image-12.6 {Tk_RedrawImage procedure, redisplay area clipping} \
	{testImageType nonPortable} {
d323 1
a323 1
test image-13.1 {Tk_SizeOfImage procedure} testImageType {
d331 1
a331 1
test image-13.2 {DeleteImage procedure} testImageType {
d348 1
a348 1
test image-14.1 {image command vs hidden commands} {
d362 13
@


