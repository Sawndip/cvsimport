head	1.5;
access;
symbols
	sid-snapshot-20180601:1.5
	sid-snapshot-20180501:1.5
	sid-snapshot-20180401:1.5
	sid-snapshot-20180301:1.5
	sid-snapshot-20180201:1.5
	sid-snapshot-20180101:1.5
	sid-snapshot-20171201:1.5
	sid-snapshot-20171101:1.5
	sid-snapshot-20171001:1.5
	sid-snapshot-20170901:1.5
	sid-snapshot-20170801:1.5
	sid-snapshot-20170701:1.5
	sid-snapshot-20170601:1.5
	sid-snapshot-20170501:1.5
	sid-snapshot-20170401:1.5
	sid-snapshot-20170301:1.5
	sid-snapshot-20170201:1.5
	sid-snapshot-20170101:1.5
	sid-snapshot-20161201:1.5
	sid-snapshot-20161101:1.5
	sid-snapshot-20160901:1.5
	sid-snapshot-20160801:1.5
	sid-snapshot-20160701:1.5
	sid-snapshot-20160601:1.5
	sid-snapshot-20160501:1.5
	sid-snapshot-20160401:1.5
	sid-snapshot-20160301:1.5
	sid-snapshot-20160201:1.5
	sid-snapshot-20160101:1.5
	sid-snapshot-20151201:1.5
	sid-snapshot-20151101:1.5
	sid-snapshot-20151001:1.5
	sid-snapshot-20150901:1.5
	sid-snapshot-20150801:1.5
	sid-snapshot-20150701:1.5
	sid-snapshot-20150601:1.5
	sid-snapshot-20150501:1.5
	sid-snapshot-20150401:1.5
	sid-snapshot-20150301:1.5
	sid-snapshot-20150201:1.5
	sid-snapshot-20150101:1.5
	sid-snapshot-20141201:1.5
	sid-snapshot-20141101:1.5
	sid-snapshot-20141001:1.5
	sid-snapshot-20140901:1.5
	sid-snapshot-20140801:1.5
	sid-snapshot-20140701:1.5
	sid-snapshot-20140601:1.5
	sid-snapshot-20140501:1.5
	sid-snapshot-20140401:1.5
	sid-snapshot-20140301:1.5
	sid-snapshot-20140201:1.5
	sid-snapshot-20140101:1.5
	sid-snapshot-20131201:1.5
	sid-snapshot-20131101:1.5
	sid-snapshot-20131001:1.5
	sid-snapshot-20130901:1.5
	sid-snapshot-20130801:1.5
	sid-snapshot-20130701:1.5
	sid-snapshot-20130601:1.5
	insight_7_6-2013-04-10-branchpoint:1.5
	gdb_7_6-branch:1.5.0.28
	sid-snapshot-20130501:1.5
	sid-snapshot-20130401:1.5
	sid-snapshot-20130301:1.5
	sid-snapshot-20130201:1.5
	sid-snapshot-20130101:1.5
	sid-snapshot-20121201:1.5
	sid-snapshot-20121101:1.5
	sid-snapshot-20121001:1.5
	sid-snapshot-20120901:1.5
	gdb_7_5-branch:1.5.0.26
	sid-snapshot-20120801:1.5
	sid-snapshot-20120701:1.5
	sid-snapshot-20120601:1.5
	sid-snapshot-20120501:1.5
	sid-snapshot-20120401:1.5
	gdb_7_4-branch:1.5.0.24
	sid-snapshot-20120301:1.5
	sid-snapshot-20120201:1.5
	sid-snapshot-20120101:1.5
	sid-snapshot-20111201:1.5
	sid-snapshot-20111101:1.5
	sid-snapshot-20111001:1.5
	sid-snapshot-20110901:1.5
	gdb_7_3-branch:1.5.0.22
	sid-snapshot-20110801:1.5
	sid-snapshot-20110701:1.5
	sid-snapshot-20110601:1.5
	sid-snapshot-20110501:1.5
	sid-snapshot-20110401:1.5
	sid-snapshot-20110301:1.5
	sid-snapshot-20110201:1.5
	sid-snapshot-20110101:1.5
	sid-snapshot-20101201:1.5
	sid-snapshot-20101101:1.5
	sid-snapshot-20101001:1.5
	sid-snapshot-20100901:1.5
	sid-snapshot-20100801:1.5
	sid-snapshot-20100701:1.5
	sid-snapshot-20100601:1.5
	sid-snapshot-20100501:1.5
	sid-snapshot-20100401:1.5
	sid-snapshot-20100301:1.5
	gdb_7_1-branch:1.5.0.20
	gdb_7_0-branch:1.5.0.18
	sid-snapshot-20100201:1.5
	sid-snapshot-20100101:1.5
	sid-snapshot-20091201:1.5
	sid-snapshot-20091101:1.5
	sid-snapshot-20091001:1.5
	arc-sim-20090309:1.5
	sid-snapshot-20090901:1.5
	sid-snapshot-20090801:1.5
	sid-snapshot-20090701:1.5
	sid-snapshot-20090601:1.5
	sid-snapshot-20090501:1.5
	kevinb-pre-tk8_5_7_merge:1.5
	sid-snapshot-20090401:1.5
	arc-insight_6_8-branch:1.5.0.16
	arc-insight_6_8-branchpoint:1.5
	insight_6_8-branch:1.5.0.14
	insight_6_8-branchpoint:1.5
	sid-snapshot-20090301:1.5
	sid-snapshot-20090201:1.5
	sid-snapshot-20090101:1.5
	sid-snapshot-20081201:1.5
	sid-snapshot-20081101:1.5
	sid-snapshot-20081001:1.5
	sid-snapshot-20080901:1.5
	sid-snapshot-20080801:1.5
	sid-snapshot-20080701:1.5
	sid-snapshot-20080601:1.5
	sid-snapshot-20080501:1.5
	sid-snapshot-20080403:1.5
	sid-snapshot-20080401:1.5
	gdb_6_8-branch:1.5.0.12
	sid-snapshot-20080301:1.5
	sid-snapshot-20080201:1.5
	sid-snapshot-20080101:1.5
	sid-snapshot-20071201:1.5
	sid-snapshot-20071101:1.5
	sid-snapshot-20071001:1.5
	insight_6_6-20070208-release:1.5
	gdb_6_6-branch:1.5.0.10
	gdb_6_6-2006-11-15-branchpoint:1.5
	insight_6_5-20061003-release:1.5
	gdb_6_5-branch:1.5.0.8
	gdb_6_5-2006-05-14-branchpoint:1.5
	gdb_6_4-branch:1.5.0.6
	gdb_6_4-2005-11-01-branchpoint:1.5
	gdb_6_1-2004-04-05-release:1.5
	gdb_6_1-branch:1.5.0.4
	gdb_6_1-2004-03-01-gmt-branchpoint:1.5
	gdb_6_0-2003-10-04-release:1.5
	gdb_6_0-branch:1.5.0.2
	gdb_6_0-2003-06-23-branchpoint:1.5
	TK8_4_1:1.1.1.3
	gdb_5_3-2002-12-12-release:1.2
	tcltk840-20020924-branch:1.3.0.2
	tcltk840-20020924-branchpoint:1.3
	TK_8_4_0:1.1.1.3
	sid-20020905-branchpoint:1.2
	sid-20020905-branch:1.2.0.6
	gdb_5_3-branch:1.2.0.4
	gdb_5_3-2002-09-04-branchpoint:1.2
	gdb_5_2_1-2002-07-23-release:1.2
	gdb_5_2-2002-04-29-release:1.2
	gdb_5_2-branch:1.2.0.2
	gdb_5_2-2002-03-03-branchpoint:1.2
	gdb_5_1_1-2002-01-24-release:1.1.1.1
	cygnus_cvs_20020108_pre:1.2
	gdb_5_1_0_1-2002-01-03-branch:1.1.1.1.0.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.1.1.1
	gdb_5_1-2001-11-21-release:1.1.1.1
	gdb_s390-2001-09-26-branch:1.1.1.1.0.6
	gdb_s390-2001-09-26-branchpoint:1.1.1.1
	TK_8_3:1.1.1.2
	NET:1.1.1
	gdb_5_1-2001-07-29-branch:1.1.1.1.0.4
	gdb_5_1-2001-07-29-branchpoint:1.1.1.1
	insight-precleanup-2001-01-01:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	insight-2000-02-04:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.5
date	2003.01.21.20.24.51;	author hunt;	state Exp;
branches;
next	1.4;

1.4
date	2003.01.21.19.53.16;	author hunt;	state Exp;
branches;
next	1.3;

1.3
date	2002.09.24.18.39.29;	author kseitz;	state Exp;
branches;
next	1.2;

1.2
date	2001.09.10.01.16.54;	author irox;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.07.00.19.30;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.07.00.19.30;	author jsm;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2001.09.10.00.22.36;	author irox;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.09.24.20.39.07;	author kseitz;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Updated to tk 8.4.1
@
text
@# This file is a Tcl script to test menubuttons in Tk.  It is
# organized in the standard fashion for Tcl tests.
#
# Copyright (c) 1994 The Regents of the University of California.
# Copyright (c) 1994-1996 Sun Microsystems, Inc.
# Copyright (c) 1998-1999 by Scriptics Corporation.
# All rights reserved.
#
# RCS: @@(#) $Id: menubut.test,v 1.7 2002/07/13 20:28:35 dgp Exp $

# XXX This test file is woefully incomplete right now.  If any part
# XXX of a procedure has tests then the whole procedure has tests,
# XXX but many procedures have no tests.

package require tcltest 2.1
namespace import -force tcltest::configure
namespace import -force tcltest::testsDirectory
configure -testdir [file join [pwd] [file dirname [info script]]]
configure -loadfile [file join [testsDirectory] constraints.tcl]
tcltest::loadTestedCommands

# Create entries in the option database to be sure that geometry options
# like border width have predictable values.

option add *Menubutton.borderWidth 2
option add *Menubutton.highlightThickness 2
option add *Menubutton.font {Helvetica -12 bold}
option add *Button.borderWidth 2
option add *Button.highlightThickness 2
option add *Button.font {Helvetica -12 bold}

eval image delete [image names]
if {[testConstraint testImageType]} {
    image create test image1
}
menubutton .mb -text "Test"
pack .mb
update
set i 1
foreach test {
    {-activebackground #012345 #012345 non-existent
	    {unknown color name "non-existent"}}
    {-activeforeground #ff0000 #ff0000 non-existent
	    {unknown color name "non-existent"}}
    {-anchor nw nw bogus {bad anchor "bogus": must be n, ne, e, se, s, sw, w, nw, or center}}
    {-background #ff0000 #ff0000 non-existent
	    {unknown color name "non-existent"}}
    {-bd 4 4 badValue {bad screen distance "badValue"}}
    {-bg #ff0000 #ff0000 non-existent {unknown color name "non-existent"}}
    {-bitmap questhead questhead badValue {bitmap "badValue" not defined}}
    {-borderwidth 1.3 1 badValue {bad screen distance "badValue"}}
    {-cursor arrow arrow badValue {bad cursor spec "badValue"}}
    {-direction below below badValue {bad direction "badValue": must be above, below, flush, left, or right}}
    {-disabledforeground #00ff00 #00ff00 xyzzy {unknown color name "xyzzy"}}
    {-fg #110022 #110022 bogus {unknown color name "bogus"}}
    {-font {Helvetica 12} {Helvetica 12} {} {font "" doesn't exist}}
    {-foreground #110022 #110022 bogus {unknown color name "bogus"}}
    {-height 18 18 20.0 {expected integer but got "20.0"}}
    {-highlightbackground #112233 #112233 ugly {unknown color name "ugly"}}
    {-highlightcolor #110022 #110022 bogus {unknown color name "bogus"}}
    {-highlightthickness 18 18 badValue {bad screen distance "badValue"}}
    {-image image1 image1 bogus {image "bogus" doesn't exist}}
    {-indicatoron yes 1 no_way {expected boolean value but got "no_way"}}
    {-justify right right bogus {bad justification "bogus": must be left, right, or center}}
    {-menu "any old string" "any old string" {} {}}
    {-padx 12 12 420x {bad screen distance "420x"}}
    {-pady 12 12 420x {bad screen distance "420x"}}
    {-relief groove groove 1.5 {bad relief "1.5": must be flat, groove, raised, ridge, solid, or sunken}}
    {-state normal normal bogus {bad state "bogus": must be active, disabled, or normal}}
    {-takefocus "any string" "any string" {} {}}
    {-text "Sample text" {Sample text} {} {}}
    {-textvariable i i {} {}}
    {-underline 5 5 3p {expected integer but got "3p"}}
    {-width 402 402 3p {expected integer but got "3p"}}
    {-wraplength 100 100 6x {bad screen distance "6x"}}
} {
    set name [lindex $test 0]
    test menubutton-1.$i {configuration options} testImageType {
	.mb configure $name [lindex $test 1]
	lindex [.mb configure $name] 4
    } [lindex $test 2]
    incr i
    if {[lindex $test 3] != ""} {
	test menubutton-1.$i {configuration options} {
	    list [catch {.mb configure $name [lindex $test 3]} msg] $msg
	} [list 1 [lindex $test 4]]
    }
    .mb configure $name [lindex [.mb configure $name] 3]
    incr i
}

test menubutton-2.1 {Tk_MenubuttonCmd procedure} {
    list [catch {menubutton} msg] $msg
} {1 {wrong # args: should be "menubutton pathName ?options?"}}
test menubutton-2.2 {Tk_MenubuttonCmd procedure} {
    list [catch {menubutton foo} msg] $msg
} {1 {bad window path name "foo"}}
test menubutton-2.3 {Tk_MenubuttonCmd procedure} {
    catch {destroy .mb}
    menubutton .mb
    winfo class .mb
} {Menubutton}
test menubutton-2.4 {Tk_ButtonCmd procedure} {
    catch {destroy .mb}
    list [catch {menubutton .mb -gorp foo} msg] $msg [winfo exists .mb]
} {1 {unknown option "-gorp"} 0}

catch {destroy .mb}
menubutton .mb -text "Test Menu"
pack .mb
test menubutton-3.1 {MenuButtonWidgetCmd procedure} {
    list [catch {.mb} msg] $msg
} {1 {wrong # args: should be ".mb option ?arg arg ...?"}}
test menubutton-3.2 {ButtonWidgetCmd procedure, "cget" option} {
    list [catch {.mb c} msg] $msg
} {1 {ambiguous option "c": must be cget or configure}}
test menubutton-3.3 {ButtonWidgetCmd procedure, "cget" option} {
    list [catch {.mb cget} msg] $msg
} {1 {wrong # args: should be ".mb cget option"}}
test menubutton-3.4 {ButtonWidgetCmd procedure, "cget" option} {
    list [catch {.mb cget a b} msg] $msg
} {1 {wrong # args: should be ".mb cget option"}}
test menubutton-3.5 {ButtonWidgetCmd procedure, "cget" option} {
    list [catch {.mb cget -gorp} msg] $msg
} {1 {unknown option "-gorp"}}
test menubutton-3.6 {ButtonWidgetCmd procedure, "cget" option} {
    .mb configure -highlightthickness 3
    .mb cget -highlightthickness
} {3}
test menubutton-3.7 {ButtonWidgetCmd procedure, "configure" option} {
    llength [.mb configure]
} {33}
test menubutton-3.8 {ButtonWidgetCmd procedure, "configure" option} {
    list [catch {.mb configure -gorp} msg] $msg
} {1 {unknown option "-gorp"}}
test menubutton-3.9 {ButtonWidgetCmd procedure, "configure" option} {
    list [catch {.mb co -bg #ffffff -fg} msg] $msg
} {1 {value for "-fg" missing}}
test menubutton-3.10 {ButtonWidgetCmd procedure, "configure" option} {
    .mb configure -fg #123456
    .mb configure -bg #654321
    lindex [.mb configure -fg] 4
} {#123456}
test menubutton-3.11 {ButtonWidgetCmd procedure, "configure" option} {
    list [catch {.mb foobar} msg] $msg
} {1 {bad option "foobar": must be cget or configure}}

# XXX Need to add tests for several procedures here.   The tests for   XXX
# XXX ConfigureMenuButton aren't complete either.                      XXX

test menubutton-4.1 {ConfigureMenuButton procedure} {
    catch {destroy .mb1}
    button .mb1 -text "Menubutton 1"
    list [catch {.mb1 configure -width 1i} msg] $msg $errorInfo
} {1 {expected integer but got "1i"} {expected integer but got "1i"
    (processing -width option)
    invoked from within
".mb1 configure -width 1i"}}
test menubutton-4.2 {ConfigureMenuButton procedure} {
    catch {destroy .mb1}
    button .mb1 -text "Menubutton 1"
    list [catch {.mb1 configure -height 0.5c} msg] $msg $errorInfo
} {1 {expected integer but got "0.5c"} {expected integer but got "0.5c"
    (processing -height option)
    invoked from within
".mb1 configure -height 0.5c"}}
test menubutton-4.3 {ConfigureMenuButton procedure} {
    catch {destroy .mb1}
    button .mb1 -bitmap questhead
    list [catch {.mb1 configure -width abc} msg] $msg $errorInfo
} {1 {bad screen distance "abc"} {bad screen distance "abc"
    (processing -width option)
    invoked from within
".mb1 configure -width abc"}}
test menubutton-4.4 {ConfigureMenuButton procedure} testImageType {
    catch {destroy .mb1}
    eval image delete [image names]
    image create test image1
    button .mb1 -image image1
    list [catch {.mb1 configure -height 0.5x} msg] $msg $errorInfo
} {1 {bad screen distance "0.5x"} {bad screen distance "0.5x"
    (processing -height option)
    invoked from within
".mb1 configure -height 0.5x"}}
test menubutton-4.5 {ConfigureMenuButton procedure} {nonPortable fonts} {
    catch {destroy .mb1}
    button .mb1 -text "Sample text" -width 10 -height 2
    pack .mb1
    set result "[winfo reqwidth .mb1] [winfo reqheight .mb1]"
    .mb1 configure -bitmap questhead
    lappend result [winfo reqwidth .mb1] [winfo reqheight .mb1]
} {102 46 20 12}
test menubutton-4.6 {ConfigureMenuButton procedure - bad direction} {
    catch {destroy .mb}
    menubutton .mb -text "Test"
    list [catch {.mb configure -direction badValue} msg] $msg \
	[.mb cget -direction] [destroy .mb]
} {1 {bad direction "badValue": must be above, below, flush, left, or right} below {}}

# XXX Need to add tests for several procedures here. XXX

test menubutton-5.1 {MenuButtonEventProc procedure} {
    deleteWindows
    menubutton .mb1 -bg #543210
    rename .mb1 .mb2
    set x {}
    lappend x [winfo children .]
    lappend x [.mb2 cget -bg]
    destroy .mb1
    lappend x [info command .mb*] [winfo children .]
} {.mb1 #543210 {} {}}

test menubutton-6.1 {MenuButtonCmdDeletedProc procedure} {
    deleteWindows
    menubutton .mb1
    rename .mb1 {}
    list [info command .mb*] [winfo children .]
} {{} {}}

test menubutton-7.1 {ComputeMenuButtonGeometry procedure} testImageType {
    catch {destroy .mb}
    menubutton .mb -image image1 -bd 4 -highlightthickness 0
    pack .mb
    list [winfo reqwidth .mb] [winfo reqheight .mb]
} {38 23}
test menubutton-7.2 {ComputeMenuButtonGeometry procedure} testImageType {
    catch {destroy .mb}
    menubutton .mb -image image1 -bd 1 -highlightthickness 2
    pack .mb
    list [winfo reqwidth .mb] [winfo reqheight .mb]
} {36 21}
test menubutton-7.3 {ComputeMenuButtonGeometry procedure} testImageType {
    catch {destroy .mb}
    menubutton .mb -image image1 -bd 0 -highlightthickness 2 -padx 5 -pady 5
    pack .mb
    list [winfo reqwidth .mb] [winfo reqheight .mb]
} {34 19}
test menubutton-7.4 {ComputeMenuButtonGeometry procedure} testImageType {
    catch {destroy .mb}
    menubutton .mb -image image1 -bd 2 -relief raised -width 40 \
	    -highlightthickness 2
    pack .mb
    list [winfo reqwidth .mb] [winfo reqheight .mb]
} {48 23}
test menubutton-7.5 {ComputeMenuButtonGeometry procedure} testImageType {
    catch {destroy .mb}
    menubutton .mb -image image1 -bd 2 -relief raised -height 30 \
	    -highlightthickness 2
    pack .mb
    list [winfo reqwidth .mb] [winfo reqheight .mb]
} {38 38}
test menubutton-7.6 {ComputeMenuButtonGeometry procedure} {
    catch {destroy .mb}
    menubutton .mb -bitmap question -bd 2 -relief raised \
	    -highlightthickness 2
    pack .mb
    list [winfo reqwidth .mb] [winfo reqheight .mb]
} {25 35}
test menubutton-7.7 {ComputeMenuButtonGeometry procedure} {
    catch {destroy .mb}
    menubutton .mb -bitmap question -bd 2 -relief raised -width 40 \
	    -highlightthickness 1
    pack .mb
    list [winfo reqwidth .mb] [winfo reqheight .mb]
} {46 33}
test menubutton-7.8 {ComputeMenuButtonGeometry procedure} {
    catch {destroy .mb}
    menubutton .mb -bitmap question -bd 2 -relief raised -height 50 \
	    -highlightthickness 1
    pack .mb
    list [winfo reqwidth .mb] [winfo reqheight .mb]
} {23 56}
test menubutton-7.9 {ComputeMenuButtonGeometry procedure} {fonts} {
    catch {destroy .mb}
    menubutton .mb -text String -bd 2 -relief raised -padx 0 -pady 0 \
	    -highlightthickness 1
    pack .mb
    list [winfo reqwidth .mb] [winfo reqheight .mb]
} {42 20}
test menubutton-7.10 {ComputeMenuButtonGeometry procedure} {fonts} {
    catch {destroy .mb}
    menubutton .mb -text String -bd 2 -relief raised -width 20 \
	    -padx 0 -pady 0 -highlightthickness 1
    pack .mb
    list [winfo reqwidth .mb] [winfo reqheight .mb]
} {146 20}
test menubutton-7.11 {ComputeMenuButtonGeometry procedure} {fonts} {
    catch {destroy .mb}
    menubutton .mb -text String -bd 2 -relief raised -height 2 \
	    -padx 0 -pady 0 -highlightthickness 1
    pack .mb
    list [winfo reqwidth .mb] [winfo reqheight .mb]
} {42 34}
test menubutton-7.12 {ComputeMenuButtonGeometry procedure} {fonts} {
    catch {destroy .mb}
    menubutton .mb -text String -bd 2 -relief raised -padx 10 -pady 5 \
	    -highlightthickness 1
    pack .mb
    list [winfo reqwidth .mb] [winfo reqheight .mb]
} {62 30}
test menubutton-7.13 {ComputeMenuButtonGeometry procedure} {nonPortable fonts} {
    catch {destroy .mb}
    menubutton .mb -text String -bd 2 -relief raised \
	    -highlightthickness 1 -indicatoron 1
    pack .mb
    list [winfo reqwidth .mb] [winfo reqheight .mb]
} {78 28}
test menubutton-7.14 {ComputeMenuButtonGeometry procedure} {testImageType unixOnly nonPortable} {
    # The following test is non-portable because the indicator's pixel
    # size varies to maintain constant absolute size.

    catch {destroy .mb}
    menubutton .mb -image image1 -bd 2 -relief raised \
	    -highlightthickness 2 -indicatoron 1
    pack .mb
    list [winfo reqwidth .mb] [winfo reqheight .mb]
} {64 23}
test menubutton-7.15 {ComputeMenuButtonGeometry procedure} {testImageType pcOnly nonPortable} {
    # The following test is non-portable because the indicator's pixel
    # size varies to maintain constant absolute size.

    catch {destroy .mb}
    menubutton .mb -image image1 -bd 2 -relief raised \
	    -highlightthickness 2 -indicatoron 1
    pack .mb
    list [winfo reqwidth .mb] [winfo reqheight .mb]
} {65 23}

set l [interp hidden]
deleteWindows

test menubutton-8.1 {menubutton vs hidden commands} {
    catch {destroy .mb}
    menubutton .mb
    interp hide {} .mb
    destroy .mb
    list [winfo children .] [interp hidden]
} [list {} $l]

eval image delete [image names]
deleteWindows
option clear

# cleanup
::tcltest::cleanupTests
return













@


1.4
log
@touched all sources to ease next import
@
text
@d9 1
a9 1
# RCS: @@(#) $Id: menubut.test,v 1.7.6.1 2000/05/04 21:26:29 spolk Exp $
d15 6
a20 17
if {[lsearch [namespace children] ::tcltest] == -1} {
    source [file join [pwd] [file dirname [info script]] defs.tcl]
}

if {[lsearch [image types] test] < 0} {
    puts "This application hasn't been compiled with the \"test\" image"
    puts "type, so I can't run this test.  Are you sure you're using"
    puts "tktest instead of wish?"
    ::tcltest::cleanupTests
    return
}

foreach i [winfo children .] {
    destroy $i
}
wm geometry . {}
raise .
d33 3
a35 1
image create test image1
d78 1
a78 1
    test menubutton-1.$i {configuration options} {
d132 1
a132 1
} {32}
d175 1
a175 1
test menubutton-4.4 {ConfigureMenuButton procedure} {
d203 1
a203 1
    eval destroy [winfo children .]
d214 1
a214 1
    eval destroy [winfo children .]
d220 1
a220 1
test menubutton-7.1 {ComputeMenuButtonGeometry procedure} {
d226 1
a226 1
test menubutton-7.2 {ComputeMenuButtonGeometry procedure} {
d232 1
a232 1
test menubutton-7.3 {ComputeMenuButtonGeometry procedure} {
d238 1
a238 1
test menubutton-7.4 {ComputeMenuButtonGeometry procedure} {
d245 1
a245 1
test menubutton-7.5 {ComputeMenuButtonGeometry procedure} {
d308 1
a308 1
test menubutton-7.14 {ComputeMenuButtonGeometry procedure} {unixOnly nonPortable} {
d318 1
a318 1
test menubutton-7.15 {ComputeMenuButtonGeometry procedure} {pcOnly nonPortable} {
d330 1
a330 1
eval destroy [winfo children .]
d341 1
a341 1
eval destroy [winfo children .]
@


1.3
log
@touched all sources to ease next import
@
text
@@


1.2
log
@touched all tk files to ease next import
@
text
@@


1.1
log
@Initial revision
@
text
@d6 2
d9 1
a9 4
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
# RCS: @@(#) $Id: menubut.test,v 1.10 1999/01/26 04:11:35 jingham Exp $
d15 4
d23 1
a26 4
if {[info procs test] != "test"} {
    source defs
}

d54 1
a54 1
    {-anchor nw nw bogus {bad anchor position "bogus": must be n, ne, e, se, s, sw, w, nw, or center}}
d62 1
a62 1
    {-direction below below badValue {bad direction value "badValue": must be above, below, left, right, or flush}}
d77 2
a78 2
    {-relief groove groove 1.5 {bad relief type "1.5": must be flat, groove, raised, ridge, solid, or sunken}}
    {-state normal normal bogus {bad state value "bogus": must be normal, active, or disabled}}
d125 1
a125 1
} {1 {bad option "c": must be cget or configure}}
d194 1
a194 1
test menubutton-4.5 {ConfigureMenuButton procedure} {fonts} {
d207 1
a207 1
} {1 {bad direction value "badValue": must be above, below, left, right, or flush} below {}}
d310 1
a310 1
test menubutton-7.13 {ComputeMenuButtonGeometry procedure} {fonts} {
d317 1
a317 1
test menubutton-7.14 {ComputeMenuButtonGeometry procedure} {unix nonPortable} {
d327 1
a327 1
test menubutton-7.15 {ComputeMenuButtonGeometry procedure} {pc nonPortable} {
d352 16
@


1.1.1.1
log
@import insight-2000-02-04 snapshot (2nd try)
@
text
@@


1.1.1.2
log
@Tk 8.3 upgrade
@
text
@a5 2
# Copyright (c) 1998-1999 by Scriptics Corporation.
# All rights reserved.
d7 4
a10 1
# RCS: @@(#) $Id: menubut.test,v 1.7.6.1 2000/05/04 21:26:29 spolk Exp $
a15 4
if {[lsearch [namespace children] ::tcltest] == -1} {
    source [file join [pwd] [file dirname [info script]] defs.tcl]
}

a19 1
    ::tcltest::cleanupTests
d23 4
d54 1
a54 1
    {-anchor nw nw bogus {bad anchor "bogus": must be n, ne, e, se, s, sw, w, nw, or center}}
d62 1
a62 1
    {-direction below below badValue {bad direction "badValue": must be above, below, flush, left, or right}}
d77 2
a78 2
    {-relief groove groove 1.5 {bad relief "1.5": must be flat, groove, raised, ridge, solid, or sunken}}
    {-state normal normal bogus {bad state "bogus": must be active, disabled, or normal}}
d125 1
a125 1
} {1 {ambiguous option "c": must be cget or configure}}
d194 1
a194 1
test menubutton-4.5 {ConfigureMenuButton procedure} {nonPortable fonts} {
d207 1
a207 1
} {1 {bad direction "badValue": must be above, below, flush, left, or right} below {}}
d310 1
a310 1
test menubutton-7.13 {ComputeMenuButtonGeometry procedure} {nonPortable fonts} {
d317 1
a317 1
test menubutton-7.14 {ComputeMenuButtonGeometry procedure} {unixOnly nonPortable} {
d327 1
a327 1
test menubutton-7.15 {ComputeMenuButtonGeometry procedure} {pcOnly nonPortable} {
a351 16

# cleanup
::tcltest::cleanupTests
return












@


1.1.1.3
log
@import tk 8.4.0
@
text
@d9 1
a9 1
# RCS: @@(#) $Id: menubut.test,v 1.7 2002/07/13 20:28:35 dgp Exp $
d15 17
a31 6
package require tcltest 2.1
namespace import -force tcltest::configure
namespace import -force tcltest::testsDirectory
configure -testdir [file join [pwd] [file dirname [info script]]]
configure -loadfile [file join [testsDirectory] constraints.tcl]
tcltest::loadTestedCommands
d44 1
a44 3
if {[testConstraint testImageType]} {
    image create test image1
}
d87 1
a87 1
    test menubutton-1.$i {configuration options} testImageType {
d141 1
a141 1
} {33}
d184 1
a184 1
test menubutton-4.4 {ConfigureMenuButton procedure} testImageType {
d212 1
a212 1
    deleteWindows
d223 1
a223 1
    deleteWindows
d229 1
a229 1
test menubutton-7.1 {ComputeMenuButtonGeometry procedure} testImageType {
d235 1
a235 1
test menubutton-7.2 {ComputeMenuButtonGeometry procedure} testImageType {
d241 1
a241 1
test menubutton-7.3 {ComputeMenuButtonGeometry procedure} testImageType {
d247 1
a247 1
test menubutton-7.4 {ComputeMenuButtonGeometry procedure} testImageType {
d254 1
a254 1
test menubutton-7.5 {ComputeMenuButtonGeometry procedure} testImageType {
d317 1
a317 1
test menubutton-7.14 {ComputeMenuButtonGeometry procedure} {testImageType unixOnly nonPortable} {
d327 1
a327 1
test menubutton-7.15 {ComputeMenuButtonGeometry procedure} {testImageType pcOnly nonPortable} {
d339 1
a339 1
deleteWindows
d350 1
a350 1
deleteWindows
@


