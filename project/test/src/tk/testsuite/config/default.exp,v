head	1.4;
access;
symbols
	sid-snapshot-20180601:1.4
	sid-snapshot-20180501:1.4
	sid-snapshot-20180401:1.4
	sid-snapshot-20180301:1.4
	sid-snapshot-20180201:1.4
	sid-snapshot-20180101:1.4
	sid-snapshot-20171201:1.4
	sid-snapshot-20171101:1.4
	sid-snapshot-20171001:1.4
	sid-snapshot-20170901:1.4
	sid-snapshot-20170801:1.4
	sid-snapshot-20170701:1.4
	sid-snapshot-20170601:1.4
	sid-snapshot-20170501:1.4
	sid-snapshot-20170401:1.4
	sid-snapshot-20170301:1.4
	sid-snapshot-20170201:1.4
	sid-snapshot-20170101:1.4
	sid-snapshot-20161201:1.4
	sid-snapshot-20161101:1.4
	sid-snapshot-20160901:1.4
	sid-snapshot-20160801:1.4
	sid-snapshot-20160701:1.4
	sid-snapshot-20160601:1.4
	sid-snapshot-20160501:1.4
	sid-snapshot-20160401:1.4
	sid-snapshot-20160301:1.4
	sid-snapshot-20160201:1.4
	sid-snapshot-20160101:1.4
	sid-snapshot-20151201:1.4
	sid-snapshot-20151101:1.4
	sid-snapshot-20151001:1.4
	sid-snapshot-20150901:1.4
	sid-snapshot-20150801:1.4
	sid-snapshot-20150701:1.4
	sid-snapshot-20150601:1.4
	sid-snapshot-20150501:1.4
	sid-snapshot-20150401:1.4
	sid-snapshot-20150301:1.4
	sid-snapshot-20150201:1.4
	sid-snapshot-20150101:1.4
	sid-snapshot-20141201:1.4
	sid-snapshot-20141101:1.4
	sid-snapshot-20141001:1.4
	sid-snapshot-20140901:1.4
	sid-snapshot-20140801:1.4
	sid-snapshot-20140701:1.4
	sid-snapshot-20140601:1.4
	sid-snapshot-20140501:1.4
	sid-snapshot-20140401:1.4
	sid-snapshot-20140301:1.4
	sid-snapshot-20140201:1.4
	sid-snapshot-20140101:1.4
	sid-snapshot-20131201:1.4
	sid-snapshot-20131101:1.4
	sid-snapshot-20131001:1.4
	sid-snapshot-20130901:1.4
	sid-snapshot-20130801:1.4
	sid-snapshot-20130701:1.4
	sid-snapshot-20130601:1.4
	insight_7_6-2013-04-10-branchpoint:1.4
	gdb_7_6-branch:1.4.0.28
	sid-snapshot-20130501:1.4
	sid-snapshot-20130401:1.4
	sid-snapshot-20130301:1.4
	sid-snapshot-20130201:1.4
	sid-snapshot-20130101:1.4
	sid-snapshot-20121201:1.4
	sid-snapshot-20121101:1.4
	sid-snapshot-20121001:1.4
	sid-snapshot-20120901:1.4
	gdb_7_5-branch:1.4.0.26
	sid-snapshot-20120801:1.4
	sid-snapshot-20120701:1.4
	sid-snapshot-20120601:1.4
	sid-snapshot-20120501:1.4
	sid-snapshot-20120401:1.4
	gdb_7_4-branch:1.4.0.24
	sid-snapshot-20120301:1.4
	sid-snapshot-20120201:1.4
	sid-snapshot-20120101:1.4
	sid-snapshot-20111201:1.4
	sid-snapshot-20111101:1.4
	sid-snapshot-20111001:1.4
	sid-snapshot-20110901:1.4
	gdb_7_3-branch:1.4.0.22
	sid-snapshot-20110801:1.4
	sid-snapshot-20110701:1.4
	sid-snapshot-20110601:1.4
	sid-snapshot-20110501:1.4
	sid-snapshot-20110401:1.4
	sid-snapshot-20110301:1.4
	sid-snapshot-20110201:1.4
	sid-snapshot-20110101:1.4
	sid-snapshot-20101201:1.4
	sid-snapshot-20101101:1.4
	sid-snapshot-20101001:1.4
	sid-snapshot-20100901:1.4
	sid-snapshot-20100801:1.4
	sid-snapshot-20100701:1.4
	sid-snapshot-20100601:1.4
	sid-snapshot-20100501:1.4
	sid-snapshot-20100401:1.4
	sid-snapshot-20100301:1.4
	gdb_7_1-branch:1.4.0.20
	gdb_7_0-branch:1.4.0.18
	sid-snapshot-20100201:1.4
	sid-snapshot-20100101:1.4
	sid-snapshot-20091201:1.4
	sid-snapshot-20091101:1.4
	sid-snapshot-20091001:1.4
	arc-sim-20090309:1.4
	sid-snapshot-20090901:1.4
	sid-snapshot-20090801:1.4
	sid-snapshot-20090701:1.4
	sid-snapshot-20090601:1.4
	sid-snapshot-20090501:1.4
	kevinb-pre-tk8_5_7_merge:1.4
	sid-snapshot-20090401:1.4
	arc-insight_6_8-branch:1.4.0.16
	arc-insight_6_8-branchpoint:1.4
	insight_6_8-branch:1.4.0.14
	insight_6_8-branchpoint:1.4
	sid-snapshot-20090301:1.4
	sid-snapshot-20090201:1.4
	sid-snapshot-20090101:1.4
	sid-snapshot-20081201:1.4
	sid-snapshot-20081101:1.4
	sid-snapshot-20081001:1.4
	sid-snapshot-20080901:1.4
	sid-snapshot-20080801:1.4
	sid-snapshot-20080701:1.4
	sid-snapshot-20080601:1.4
	sid-snapshot-20080501:1.4
	sid-snapshot-20080403:1.4
	sid-snapshot-20080401:1.4
	gdb_6_8-branch:1.4.0.12
	sid-snapshot-20080301:1.4
	sid-snapshot-20080201:1.4
	sid-snapshot-20080101:1.4
	sid-snapshot-20071201:1.4
	sid-snapshot-20071101:1.4
	sid-snapshot-20071001:1.4
	insight_6_6-20070208-release:1.4
	gdb_6_6-branch:1.4.0.10
	gdb_6_6-2006-11-15-branchpoint:1.4
	insight_6_5-20061003-release:1.4
	gdb_6_5-branch:1.4.0.8
	gdb_6_5-2006-05-14-branchpoint:1.4
	gdb_6_4-branch:1.4.0.6
	gdb_6_4-2005-11-01-branchpoint:1.4
	gdb_6_1-2004-04-05-release:1.4
	gdb_6_1-branch:1.4.0.4
	gdb_6_1-2004-03-01-gmt-branchpoint:1.4
	gdb_6_0-2003-10-04-release:1.4
	gdb_6_0-branch:1.4.0.2
	gdb_6_0-2003-06-23-branchpoint:1.4
	gdb_5_3-2002-12-12-release:1.2
	tcltk840-20020924-branch:1.3.0.2
	tcltk840-20020924-branchpoint:1.3
	sid-20020905-branchpoint:1.2
	sid-20020905-branch:1.2.0.6
	gdb_5_3-branch:1.2.0.4
	gdb_5_3-2002-09-04-branchpoint:1.2
	gdb_5_2_1-2002-07-23-release:1.2
	gdb_5_2-2002-04-29-release:1.2
	gdb_5_2-branch:1.2.0.2
	gdb_5_2-2002-03-03-branchpoint:1.2
	gdb_5_1_1-2002-01-24-release:1.1.1.1
	cygnus_cvs_20020108_pre:1.2
	gdb_5_1_0_1-2002-01-03-branch:1.1.1.1.0.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.1.1.1
	gdb_5_1-2001-11-21-release:1.1.1.1
	gdb_s390-2001-09-26-branch:1.1.1.1.0.6
	gdb_s390-2001-09-26-branchpoint:1.1.1.1
	TK_8_3:1.1.1.1
	NET:1.1.1
	gdb_5_1-2001-07-29-branch:1.1.1.1.0.4
	gdb_5_1-2001-07-29-branchpoint:1.1.1.1
	insight-precleanup-2001-01-01:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	insight-2000-02-04:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.4
date	2003.01.21.19.53.16;	author hunt;	state Exp;
branches;
next	1.3;

1.3
date	2002.09.24.18.39.29;	author kseitz;	state Exp;
branches;
next	1.2;

1.2
date	2001.09.10.01.16.54;	author irox;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.07.00.19.30;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.07.00.19.30;	author jsm;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.09.25.02.59.14;	author kseitz;	state dead;
branches;
next	;


desc
@@


1.4
log
@touched all sources to ease next import
@
text
@# Copyright (C) 1996 Cygnus Support

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  

# Please email any bugs, comments, and/or additions to this file to:
# bug-dejagnu@@prep.ai.mit.edu

# This file was written by Tom Tromey <tromey@@cygnus.com>

set testdrv "unix/tktest"
set tprompt "%"

#
# Extract and print the version number of wish.
#
proc tk_version {} {
  global testdrv
  if {! [catch {exec $testdrv -version} output]
      && ! [regsub {^.*version } $output {} version]} then {
    clone_output "Tk library is version\t$version\n"
  }
}

#
# Source a file.
#
proc tk_load {file} {
  global subdir testdrv spawn_id

  if {! [file exists $file]} then {
    perror "$file does not exist."
    return -1
  }

  verbose "Sourcing $file..."
  send "source $file\n"
  return 0
}

#
# Exit the test driver.
#
proc tk_exit {} {
  # If we started Xvfb, we should kill it.  This doesn't happen right
  # now, so this proc does nothing.
  # xvfb_exit
}

#
# Find X display to use.  Return 0 if not found.  Set DISPLAY
# environment variable if display found.
#
proc find_x_display {} {
  global env

  if {[info exists env(TEST_DISPLAY)]} then {
    set env(DISPLAY) $env(TEST_DISPLAY)
    return 1
  }

  return 0
}

#
# Start the test driver.
#
proc tk_start {} {
  global testdrv objdir subdir srcdir spawn_id tprompt

  set testdrv "$objdir/$testdrv"
  set defs "$srcdir/../tests/defs"

  set timeout 100
  set timetol 0

  if {! [find_x_display]} then {
      return -1
  }

  spawn $testdrv

  if ![file exists ${srcdir}/../tests] {
    perror "The source for the test cases is missing." 0
    return -1
  }

  send "[list set srcdir ${srcdir}/../tests]\r"
  expect {
    -re "set VERBOSE 1\[\r\n\]*1\[\r\n\]*%" {
      verbose "Set verbose flag for tests"
      exp_continue
    }
    -re "${srcdir}/../tests\[\r\n\]*$tprompt" {
      verbose "Set srcdir to $srcdir/../tests" 2
    }
    -re "no files matched glob pattern" {
      warning "Didn't set srcdir to $srcdir/../tests"
    }
    timeout {
      perror "Couldn't set srcdir"
      return -1
    }
  }

  if ![file exists $defs] then {
    perror "$defs does not exist."
    return -1
  }

  verbose "Sourcing $defs..."
  send "source $defs\r\n"
  
  expect {
    -re ".*source $defs.*$" {
      verbose "Sourced $defs"
    }
    "Error: couldn't read file*" {
      perror "Couldn't source $defs"
      return -1
    }
    "%" {
      verbose "Got prompt, sourced $defs"
    }
    timeout {
      warning "Timed out sourcing $defs."
      if { $timetol <= 3 } {
	incr timetol
	exp_continue
      } else {
	return -1
      }
    }
  }

  set timetol 0
  sleep 2
  send "set VERBOSE 1\n"
  expect {
    -re "% 1.*%" {
      verbose "Set verbose flag for tests"
    }
    -re "set VERBOSE 1.*1.*%" {
      verbose "Set verbose flag for tests"
    }
    timeout {
      perror "Timed out setting verbose flag."
      if { $timetol <= 3 } {
	exp_continue
      } else {
	return -1
      }
    }
  }
  return $spawn_id
}

################################################################
#
# Utility functions.
#

proc read_file {name} {
  set id [open $name r]
  set contents [read $id]
  close $id
  return $contents
}

proc write_file {name contents} {
  set id [open $name w]
  puts -nonewline $id $contents
  close $id
}

# NOTE that this fails to copy files with NULs in them.  Change
# implementation to "exec cp" if required.
proc copy_file {from to} {
  write_file $to [read_file $from]
}

################################################################
#
# Start/stop Xvfb.  These procs aren't used right now; we assume Xvfb
# is already running.
#

#
# Stop Xvfb.
#
proc xvfb_exit {} {
  global Xvfb_spawn_id

  # Send C-c to kill it.
  send -i $Xvfb_spawn_id "\003"
}

#
# Start Xvfb.  Return 0 on error, 1 if started.  Set DISPLAY
# environment variable on successful start.
# 
#
proc xvfb_start {} {
  global spawn_id Xvfb_spawn_id Xvfb_screen env

  # FIXME should look for Xvfb in build directory.  Do this later,
  # when we actually build Xvfb.

  set Xvfb [which Xvfb]
  # Why "0"?  I don't know, but that is what the manual says.
  if {$Xvfb == 0} then {
    perror "Couldn't find Xvfb"
    return 0
  }
  verbose "Xvfb is $Xvfb"

  # Pick a number at random...
  set Xvfb_screen 23

  while {$Xvfb_screen < 100} {
    spawn $Xvfb :$Xvfb_screen

    expect {
      "Server is already active" {
	incr Xvfb_screen
      }

      timeout {
	break
      }
    }
  }

  if {$Xvfb_screen == 100} then {
    perror "Xvfb screen is 100!"
    return 0
  }

  set Xvfb_spawn_id $spawn_id
  set env(DISPLAY) :$Xvfb_screen
  verbose "Screen is :$Xvfb_screen"
  return 1
}
@


1.3
log
@touched all sources to ease next import
@
text
@@


1.2
log
@touched all tk files to ease next import
@
text
@@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import insight-2000-02-04 snapshot (2nd try)
@
text
@@


1.1.1.2
log
@Remove local and dead files.
@
text
@@

