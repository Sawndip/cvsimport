head	1.4;
access;
symbols
	sid-snapshot-20180601:1.4
	sid-snapshot-20180501:1.4
	sid-snapshot-20180401:1.4
	sid-snapshot-20180301:1.4
	sid-snapshot-20180201:1.4
	sid-snapshot-20180101:1.4
	sid-snapshot-20171201:1.4
	sid-snapshot-20171101:1.4
	sid-snapshot-20171001:1.4
	sid-snapshot-20170901:1.4
	sid-snapshot-20170801:1.4
	sid-snapshot-20170701:1.4
	sid-snapshot-20170601:1.4
	sid-snapshot-20170501:1.4
	sid-snapshot-20170401:1.4
	sid-snapshot-20170301:1.4
	sid-snapshot-20170201:1.4
	sid-snapshot-20170101:1.4
	sid-snapshot-20161201:1.4
	sid-snapshot-20161101:1.4
	sid-snapshot-20160901:1.4
	sid-snapshot-20160801:1.4
	sid-snapshot-20160701:1.4
	sid-snapshot-20160601:1.4
	sid-snapshot-20160501:1.4
	sid-snapshot-20160401:1.4
	sid-snapshot-20160301:1.4
	sid-snapshot-20160201:1.4
	sid-snapshot-20160101:1.4
	sid-snapshot-20151201:1.4
	sid-snapshot-20151101:1.4
	sid-snapshot-20151001:1.4
	sid-snapshot-20150901:1.4
	sid-snapshot-20150801:1.4
	sid-snapshot-20150701:1.4
	sid-snapshot-20150601:1.4
	sid-snapshot-20150501:1.4
	sid-snapshot-20150401:1.4
	sid-snapshot-20150301:1.4
	sid-snapshot-20150201:1.4
	sid-snapshot-20150101:1.4
	sid-snapshot-20141201:1.4
	sid-snapshot-20141101:1.4
	sid-snapshot-20141001:1.4
	sid-snapshot-20140901:1.4
	sid-snapshot-20140801:1.4
	sid-snapshot-20140701:1.4
	sid-snapshot-20140601:1.4
	sid-snapshot-20140501:1.4
	sid-snapshot-20140401:1.4
	sid-snapshot-20140301:1.4
	sid-snapshot-20140201:1.4
	sid-snapshot-20140101:1.4
	sid-snapshot-20131201:1.4
	sid-snapshot-20131101:1.4
	sid-snapshot-20131001:1.4
	sid-snapshot-20130901:1.4
	sid-snapshot-20130801:1.4
	sid-snapshot-20130701:1.4
	sid-snapshot-20130601:1.4
	insight_7_6-2013-04-10-branchpoint:1.4
	gdb_7_6-branch:1.4.0.28
	sid-snapshot-20130501:1.4
	sid-snapshot-20130401:1.4
	sid-snapshot-20130301:1.4
	sid-snapshot-20130201:1.4
	sid-snapshot-20130101:1.4
	sid-snapshot-20121201:1.4
	sid-snapshot-20121101:1.4
	sid-snapshot-20121001:1.4
	sid-snapshot-20120901:1.4
	gdb_7_5-branch:1.4.0.26
	sid-snapshot-20120801:1.4
	sid-snapshot-20120701:1.4
	sid-snapshot-20120601:1.4
	sid-snapshot-20120501:1.4
	sid-snapshot-20120401:1.4
	gdb_7_4-branch:1.4.0.24
	sid-snapshot-20120301:1.4
	sid-snapshot-20120201:1.4
	sid-snapshot-20120101:1.4
	sid-snapshot-20111201:1.4
	sid-snapshot-20111101:1.4
	sid-snapshot-20111001:1.4
	sid-snapshot-20110901:1.4
	gdb_7_3-branch:1.4.0.22
	sid-snapshot-20110801:1.4
	sid-snapshot-20110701:1.4
	sid-snapshot-20110601:1.4
	sid-snapshot-20110501:1.4
	sid-snapshot-20110401:1.4
	sid-snapshot-20110301:1.4
	sid-snapshot-20110201:1.4
	sid-snapshot-20110101:1.4
	sid-snapshot-20101201:1.4
	sid-snapshot-20101101:1.4
	sid-snapshot-20101001:1.4
	sid-snapshot-20100901:1.4
	sid-snapshot-20100801:1.4
	sid-snapshot-20100701:1.4
	sid-snapshot-20100601:1.4
	sid-snapshot-20100501:1.4
	sid-snapshot-20100401:1.4
	sid-snapshot-20100301:1.4
	gdb_7_1-branch:1.4.0.20
	gdb_7_0-branch:1.4.0.18
	sid-snapshot-20100201:1.4
	sid-snapshot-20100101:1.4
	sid-snapshot-20091201:1.4
	sid-snapshot-20091101:1.4
	sid-snapshot-20091001:1.4
	arc-sim-20090309:1.4
	sid-snapshot-20090901:1.4
	sid-snapshot-20090801:1.4
	sid-snapshot-20090701:1.4
	sid-snapshot-20090601:1.4
	sid-snapshot-20090501:1.4
	kevinb-pre-tk8_5_7_merge:1.4
	sid-snapshot-20090401:1.4
	arc-insight_6_8-branch:1.4.0.16
	arc-insight_6_8-branchpoint:1.4
	insight_6_8-branch:1.4.0.14
	insight_6_8-branchpoint:1.4
	sid-snapshot-20090301:1.4
	sid-snapshot-20090201:1.4
	sid-snapshot-20090101:1.4
	sid-snapshot-20081201:1.4
	sid-snapshot-20081101:1.4
	sid-snapshot-20081001:1.4
	sid-snapshot-20080901:1.4
	sid-snapshot-20080801:1.4
	sid-snapshot-20080701:1.4
	sid-snapshot-20080601:1.4
	sid-snapshot-20080501:1.4
	sid-snapshot-20080403:1.4
	sid-snapshot-20080401:1.4
	gdb_6_8-branch:1.4.0.12
	sid-snapshot-20080301:1.4
	sid-snapshot-20080201:1.4
	sid-snapshot-20080101:1.4
	sid-snapshot-20071201:1.4
	sid-snapshot-20071101:1.4
	sid-snapshot-20071001:1.4
	insight_6_6-20070208-release:1.4
	gdb_6_6-branch:1.4.0.10
	gdb_6_6-2006-11-15-branchpoint:1.4
	insight_6_5-20061003-release:1.4
	gdb_6_5-branch:1.4.0.8
	gdb_6_5-2006-05-14-branchpoint:1.4
	gdb_6_4-branch:1.4.0.6
	gdb_6_4-2005-11-01-branchpoint:1.4
	gdb_6_1-2004-04-05-release:1.4
	gdb_6_1-branch:1.4.0.4
	gdb_6_1-2004-03-01-gmt-branchpoint:1.4
	gdb_6_0-2003-10-04-release:1.4
	gdb_6_0-branch:1.4.0.2
	gdb_6_0-2003-06-23-branchpoint:1.4
	gdb_5_3-2002-12-12-release:1.2
	tcltk840-20020924-branch:1.3.0.2
	tcltk840-20020924-branchpoint:1.3
	sid-20020905-branchpoint:1.2
	sid-20020905-branch:1.2.0.6
	gdb_5_3-branch:1.2.0.4
	gdb_5_3-2002-09-04-branchpoint:1.2
	gdb_5_2_1-2002-07-23-release:1.2
	gdb_5_2-2002-04-29-release:1.2
	gdb_5_2-branch:1.2.0.2
	gdb_5_2-2002-03-03-branchpoint:1.2
	cygnus_cvs_20020108_pre:1.2
	TK_8_3:1.1.1.1
	NET:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.4
date	2003.01.21.19.53.11;	author hunt;	state Exp;
branches;
next	1.3;

1.3
date	2002.09.24.18.39.22;	author kseitz;	state Exp;
branches;
next	1.2;

1.2
date	2001.09.10.01.16.49;	author irox;	state Exp;
branches;
next	1.1;

1.1
date	2001.09.10.00.22.29;	author irox;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.09.10.00.22.29;	author irox;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.09.25.02.59.14;	author kseitz;	state dead;
branches;
next	;


desc
@@


1.4
log
@touched all sources to ease next import
@
text
@# CYGNUS LOCAL
#
# This entire file is Cygnus local, it contains a set of cross
# platform autoconf macros to be used by Tcl extensions.

# FIXME: There seems to be a problem with variable
# names that still need an expansion (like $foo_FILE)
# since another eval might be needed in these macros.

#--------------------------------------------------------------------
# TCL_TOOL_PATH
#
#	Return a file path that the build system tool will understand.
#	This path might be different than the path used in the
#	Makefiles.
#
# Arguments:
#	
#	VAR
#	PATH
#	
# Results:
#
#
# Example:
#
# TCL_TOOL_PATH(TCL_CC_PATH, /usr/local/compiler)
#
#--------------------------------------------------------------------

AC_DEFUN(TCL_TOOL_PATH, [
  val=$2

  if test "$val" = "" ; then
    AC_MSG_ERROR([Empty value for variable $1])
  fi

  case "${host}" in
    *windows32* | *mingw32*)
      if test "${CYGPATH}" = ""; then
        AC_MSG_ERROR([CYGPATH variable is not defined.])
      elif test "${CYGPATH}" = "echo"; then
        # No cygpath when cross compiling
        $1=$val
      else
        # store literal argument text in a variable
        val=$val
        # Convert Cygwin to Windows path (/tmp/foo -> C:\Tmp\foo)
        val="`${CYGPATH} $val`"
        # Convert path like C:\Tmp\foo to C:/Tmp/foo
        $1="`echo $val | sed -e s#\\\\\\\\#/#g`"
      fi
    ;;
    *)
      # Default to a no-op under Unix or Cygwin gcc
      $1=$val
    ;;
  esac
])

# FIXME: It would simplify things if no SUFFIX had to be passed
# into these LONGNAME macros. Using the TCL_SHARED_LIB_SUFFIX
# and TCL_UNSHARED_LIB_SUFFIX from tclConfig.sh might do the trick!

#--------------------------------------------------------------------
# TCL_TOOL_STATIC_LIB_LONGNAME
#
#	Return static library name in the "long format" understood by
#	the build tools. This might involve prepending a suffix
#	and appending version information to the library name.
#
# Arguments:
#	
#	VAR
#	LIBNAME
#	SUFFIX
#	
# Depends on:
#	TCL_DBGX
#	TCL_VENDOR_PREFIX
#
# Example:
#
# TCL_TOOL_STATIC_LIB_LONGNAME(TCL_LIB, tcl, $TCL_UNSHARED_LIB_SUFFIX)
#
# Results:
#
#	TCL_LIB=libtcl83.a
#
#	or
#
#	TCL_LIB=tcl83.lib
#
#--------------------------------------------------------------------

AC_DEFUN(TCL_TOOL_STATIC_LIB_LONGNAME, [
  libname=$2
  suffix=$3

  case "${host}" in
    *windows32* | *mingw32*)
      if test "$GCC" != yes; then
        eval "long_libname=\"${TCL_VENDOR_PREFIX}${libname}${suffix}\""
      else
        eval "long_libname=\"lib${TCL_VENDOR_PREFIX}${libname}${suffix}\""
      fi
    ;;
    *)
      eval "long_libname=\"lib${TCL_VENDOR_PREFIX}${libname}${suffix}\""
    ;;
  esac

  eval "long_libname=${long_libname}"

  # Trick to replace DBGX with TCL_DBGX
  DBGX='${TCL_DBGX}'
  eval "long_libname=${long_libname}"

  $1=$long_libname
])

#--------------------------------------------------------------------
# TCL_TOOL_SHARED_LIB_LONGNAME
#
#	Return the shared library name in the "long format" understood by
#	the build tools. This might involve prepending a suffix
#	and appending version information to the shared library name.
#
# Arguments:
#	
#	VAR
#	LIBNAME
#	SUFFIX
#	
# Depends on:
#	TCL_DBGX
#	TCL_VENDOR_PREFIX
#
# Example:
#
# TCL_TOOL_SHARED_LIB_LONGNAME(TCL_SHLIB, tcl, $TCL_SHARED_LIB_SUFFIX)
#
# Results:
#	The above example could result in the following.
#
#	TCL_SHLIB=libtcl83.so
#
#	or
#
#	TCL_SHLIB=tcl83.dll
#
#--------------------------------------------------------------------

AC_DEFUN(TCL_TOOL_SHARED_LIB_LONGNAME, [
  libname=$2
  suffix=$3

  case "${host}" in
    *windows32* | *mingw32* | *cygwin*)
      eval "long_libname=\"${TCL_VENDOR_PREFIX}${libname}${suffix}\""
    ;;
    *)
      eval "long_libname=\"lib${TCL_VENDOR_PREFIX}${libname}${suffix}\""
    ;;
  esac

  eval "long_libname=${long_libname}"

  # Trick to replace DBGX with TCL_DBGX
  DBGX='${TCL_DBGX}'
  eval "long_libname=${long_libname}"

  $1=$long_libname
])

#--------------------------------------------------------------------
# TCL_TOOL_LIB_SHORTNAME
#
#	Return the library name in the "short format" understood by
#	the build tools. This might involve prepending a suffix
#	and appending version information to the library name.
#	The VC++ compiler does not support short library names
#	so we just use the static import lib name in that case.
#
# Arguments:
#	
#	VAR
#	LIBNAME
#	VERSION
#	
# Depends on:
#	TCL_LIB_VERSIONS_OK
#	TCL_DBGX
#	SHARED_BUILD
#	
#
# Example:
#
# TCL_TOOL_LIB_SHORTNAME(TCL_LIB, tcl, 8.3)
#
# Results:
#	The above example could result in the following.
#
#	TCL_LIB=-ltcl83
#
#	or
#
#	TCL_LIB=tcl83.lib
#
#--------------------------------------------------------------------

AC_DEFUN(TCL_TOOL_LIB_SHORTNAME, [
  libname=$2
  version=$3

  if test "$TCL_LIB_SUFFIX" = "" ; then
    AC_MSG_ERROR([The TCL_LIB_SUFFIX variable is not defined])
  fi

  # If the . character is not allowed in lib name, remove it from version
  if test "${TCL_LIB_VERSIONS_OK}" != "ok"; then
        version=`echo $version | tr -d .`
  fi

  case "${host}" in
    *windows32* | *mingw32*)
      if test "$GCC" != yes; then
        eval "short_libname=\"${TCL_VENDOR_PREFIX}${libname}${version}${TCL_LIB_SUFFIX}\""
      else
        short_libname="-l${TCL_VENDOR_PREFIX}${libname}${version}${TCL_DBGX}"
      fi
    ;;
    *)
      short_libname="-l${TCL_VENDOR_PREFIX}${libname}${version}\${TCL_DBGX}"
    ;;
  esac

  $1=$short_libname
])

#--------------------------------------------------------------------
# TCL_TOOL_LIB_SPEC
#
#	Return the "lib spec format" understood by the build tools.
#
# Arguments:
#	
#	VAR
#	DIR
#	LIBARG
#	
# Depends on:
#	
#
# Example:
#
# TCL_TOOL_LIB_SPEC(SPEC, /usr/lib, -ltcl)
#
# Results:
#	The above example could result in the following.
#
#	SPEC="-L/usr/lib -ltcl83"
#
#--------------------------------------------------------------------

AC_DEFUN(TCL_TOOL_LIB_SPEC, [
  case "${host}" in
    *windows32* | *mingw32*)
      if test "$GCC" != yes; then
        TCL_TOOL_PATH($1, "$2/$3")
      else
        TCL_TOOL_PATH(dirname, $2)
        $1="-L${dirname} $3"
      fi
    ;;
    *)
      $1="-L$2 $3"
    ;;
  esac
])

#--------------------------------------------------------------------
# TCL_TOOL_LIB_PATH
#
#	Return the "lib path format" understood by the build tools.
#	Typically, this is the fully qualified path name of the library.
#
# Arguments:
#	
#	VAR
#	DIR
#	LIBARG
#	
# Depends on:
#	
#
# Example:
#
# TCL_TOOL_LIB_PATH(TMP_PATH, /usr/lib, libtcl83.a)
#
# Results:
#	The above example could result in the following.
#
#	TMP_PATH="/usr/lib/libtcl83.a"
#
#--------------------------------------------------------------------

AC_DEFUN(TCL_TOOL_LIB_PATH, [
  TCL_TOOL_PATH($1, "$2/$3")
])
@


1.3
log
@touched all sources to ease next import
@
text
@@


1.2
log
@touched all tk files to ease next import
@
text
@@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Tk 8.3 upgrade
@
text
@@


1.1.1.2
log
@Remove local and dead files.
@
text
@@

