head	1.1;
access;
symbols
	gdb-csl-arm-20050325-2005-q1b:1.1.2.1
	gdb-csl-arm-20050325-2005-q1a:1.1.2.1
	csl-arm-20050325-branch:1.1.0.2;
locks; strict;
comment	@ * @;


1.1
date	2005.03.28.19.34.58;	author mmitchel;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2005.03.28.19.34.58;	author mmitchel;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2005.06.08.16.38.25;	author mmitchel;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2005.06.14.15.40.06;	author mmitchel;	state Exp;
branches;
next	;


desc
@@


1.1
log
@file rlnotty.c was initially added on branch csl-arm-20050325-branch.
@
text
@@


1.1.2.1
log
@	* readline/Makefile.in (RLTTYOBJ): New variable.
	(OBJECTS): Use RLTTYOBJ.
	* readline/aclocal.m4: Use AC_RTY_LINK to check for mbstate_t.
	* readline/complete.c (pwd.h): Guard with HAVE_PWD_H.
	(getpwent): Guard with HAVE_GETPWENT.
	(rl_username_completion_function): Guard use of getpwent.
	(endpwent): Likewise.
	* readline/config.h.in (HAVE_FCNTL): New macro.
	(HAVE_GETPWENT): Likewise.
	(HAVE_GETPWNAM): Likewise.
	(HAVE_GETPWUID): Likewise.
	(HAVE_PWD_H): Likewise.
	* readline/configure: Regenerated.
	* readline/configure.in: Handle MinGW when cross compiling.  Check for
	getpwnam, getpwent, getpwuid, and pwd.h.  Set RLTTYOBJ.
	* readline/display.c (rl_clear_screen): Treat Windows like DOS.
	(insert_some_chars): Likewise.
	(delete_chars): Likewise.
	* readline/rldefs.h (NEW_TTY_DRIVER): Do not define for Windows.
	* readline/rlnotty.c: New file.
	* readline/shell.c (pwd.h): Guard with HAVE_PWD_H.
	(getpwuid): Guard with HAVE_GETPWUID.
	(sh_unset_nodelay_mode): Guard use of fnctl with HAVE_FNCTL_H.
	* readline/signals.c (rl_signal_handler): Don't use SIGALRM or
	SIGQUIT if not defined.  Use "raise" rather than "kill".
	(rl_set_signals): Don't set handlers for SIGQUIT or SIGALRM if
	they are not defined.
	(rl_clear_signals): Likewise.
	* readline/tilde.c (pwd.h): Guard with HAVE_PWD_H.
	(getpwuid): Guard declaration with HAVE_GETPWUID.
	(getpwnam): Guard declaration with HAVE_GETPWNAM.
	(tilde_expand_word): Guard use of getpwnam with HAVE_GETPWNAM.
@
text
@a0 91
#define READLINE_LIBRARY

#if defined (HAVE_CONFIG_H)
#  include <config.h>
#endif

#include <stdio.h>
#include "readline.h"
#include "rlprivate.h"

rl_vintfunc_t *rl_prep_term_function = rl_prep_terminal;
rl_voidfunc_t *rl_deprep_term_function = rl_deprep_terminal;

int
tgetent (buffer, termtype)
     char *buffer;
     char *termtype;
{
  return -1;
}

int
tgetnum (name)
     char *name;
{
  return -1;
}

int
tgetflag (name)
     char *name;
{
  return -1;
}

char *
tgetstr (name, area)
     char *name;
     char **area;
{
  return NULL;
}

int
tputs (string, nlines, outfun)
     char *string;
     int nlines;
     int (*outfun) ();
{
  while (*string)
    outfun (*string);
}

int
_rl_disable_tty_signals ()
{
  return 0;
}

int
_rl_restore_tty_signals ()
{
  return 0;
}

void 
rl_prep_terminal (meta_flag)
     int meta_flag;
{
  return;
}

void
rl_deprep_terminal ()
{
  return;
}

int
rl_restart_output (count, key)
     int count;
     int key;
{
  return 0;
}

void
rl_tty_set_default_bindings (kmap)
     Keymap kmap;
{
}
@


1.1.2.2
log
@	* readline/input.c (rL_getc): Use getch, not getche.
	* readline/readline.c (bind_arrow_keys_internal): Translate
	Windows keysequences into POSIX key sequences.
	* readline/rlnotty.c (tputs): Fix thinko.
	(rl_prep_terminal): Set readline_echoing_p.
@
text
@d51 1
a51 1
    outfun (*string++);
a69 1
  readline_echoing_p = 1;
@


1.1.2.3
log
@	* readline/rlnotty.c (tgoto): New function.
@
text
@a53 9
char *
tgoto (cap, col, row)
     const char *cap;
     int col;
     int row;
{
  return NULL;
}
     
@


