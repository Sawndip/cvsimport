head	1.11;
access;
symbols
	binutils-2_24-branch:1.11.0.22
	binutils-2_24-branchpoint:1.11
	binutils-2_21_1:1.11
	binutils-2_23_2:1.11
	binutils-2_23_1:1.11
	binutils-2_23:1.11
	binutils-2_23-branch:1.11.0.20
	binutils-2_23-branchpoint:1.11
	binutils-2_22_branch:1.11.0.18
	binutils-2_22:1.11
	binutils-2_22-branch:1.11.0.16
	binutils-2_22-branchpoint:1.11
	binutils-2_21:1.11
	binutils-2_21-branch:1.11.0.14
	binutils-2_21-branchpoint:1.11
	binutils-2_20_1:1.11
	binutils-2_20:1.11
	binutils-arc-20081103-branch:1.11.0.12
	binutils-arc-20081103-branchpoint:1.11
	binutils-2_20-branch:1.11.0.10
	binutils-2_20-branchpoint:1.11
	dje-cgen-play1-branch:1.11.0.8
	dje-cgen-play1-branchpoint:1.11
	arc-20081103-branch:1.11.0.6
	arc-20081103-branchpoint:1.11
	binutils-2_19_1:1.11
	binutils-2_19:1.11
	binutils-2_19-branch:1.11.0.4
	binutils-2_19-branchpoint:1.11
	binutils-2_18:1.11
	binutils-2_18-branch:1.11.0.2
	binutils-2_18-branchpoint:1.11
	binutils-csl-coldfire-4_1-32:1.10
	binutils-csl-sourcerygxx-4_1-32:1.10
	binutils-csl-innovasic-fido-3_4_4-33:1.10
	binutils-csl-sourcerygxx-3_4_4-32:1.9
	binutils-csl-coldfire-4_1-30:1.10
	binutils-csl-sourcerygxx-4_1-30:1.10
	binutils-csl-coldfire-4_1-28:1.10
	binutils-csl-sourcerygxx-4_1-29:1.10
	binutils-csl-sourcerygxx-4_1-28:1.10
	binutils-csl-arm-2006q3-27:1.10
	binutils-csl-sourcerygxx-4_1-27:1.10
	binutils-csl-arm-2006q3-26:1.10
	binutils-csl-sourcerygxx-4_1-26:1.10
	binutils-csl-sourcerygxx-4_1-25:1.10
	binutils-csl-sourcerygxx-4_1-24:1.10
	binutils-csl-sourcerygxx-4_1-23:1.10
	binutils-csl-sourcerygxx-4_1-21:1.10
	binutils-csl-arm-2006q3-21:1.10
	binutils-csl-sourcerygxx-4_1-22:1.10
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.10
	binutils-csl-sourcerygxx-4_1-20:1.10
	binutils-csl-arm-2006q3-19:1.10
	binutils-csl-sourcerygxx-4_1-19:1.10
	binutils-csl-sourcerygxx-4_1-18:1.10
	binutils-csl-renesas-4_1-9:1.10
	binutils-csl-sourcerygxx-3_4_4-25:1.9
	binutils-csl-renesas-4_1-8:1.10
	binutils-csl-renesas-4_1-7:1.10
	binutils-csl-renesas-4_1-6:1.10
	binutils-csl-sourcerygxx-4_1-17:1.10
	binutils-csl-sourcerygxx-4_1-14:1.10
	binutils-csl-sourcerygxx-4_1-15:1.10
	binutils-csl-sourcerygxx-4_1-13:1.10
	binutils-2_17:1.10
	binutils-csl-sourcerygxx-4_1-12:1.10
	binutils-csl-sourcerygxx-3_4_4-21:1.10
	binutils-csl-wrs-linux-3_4_4-24:1.9
	binutils-csl-wrs-linux-3_4_4-23:1.9
	binutils-csl-sourcerygxx-4_1-9:1.10
	binutils-csl-sourcerygxx-4_1-8:1.10
	binutils-csl-sourcerygxx-4_1-7:1.10
	binutils-csl-arm-2006q1-6:1.10
	binutils-csl-sourcerygxx-4_1-6:1.10
	binutils-csl-wrs-linux-3_4_4-22:1.9
	binutils-csl-coldfire-4_1-11:1.10
	binutils-csl-sourcerygxx-3_4_4-19:1.10
	binutils-csl-coldfire-4_1-10:1.10
	binutils-csl-sourcerygxx-4_1-5:1.10
	binutils-csl-sourcerygxx-4_1-4:1.10
	binutils-csl-wrs-linux-3_4_4-21:1.9
	binutils-csl-morpho-4_1-4:1.10
	binutils-csl-sourcerygxx-3_4_4-17:1.10
	binutils-csl-wrs-linux-3_4_4-20:1.9
	binutils-2_17-branch:1.10.0.4
	binutils-2_17-branchpoint:1.10
	binutils-csl-2_17-branch:1.10.0.2
	binutils-csl-2_17-branchpoint:1.10
	binutils-csl-gxxpro-3_4-branch:1.9.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.9
	binutils-2_16_1:1.9
	binutils-csl-arm-2005q1b:1.9
	binutils-2_16:1.9
	binutils-csl-arm-2005q1a:1.9
	binutils-csl-arm-2005q1-branch:1.9.0.4
	binutils-csl-arm-2005q1-branchpoint:1.9
	binutils-2_16-branch:1.9.0.2
	binutils-2_16-branchpoint:1.9
	csl-arm-2004-q3d:1.8
	csl-arm-2004-q3:1.8
	gprof-pre-ansify-2004-05-26:1.7
	gprof-post-ansify-2004-05-26:1.8
	binutils-2_15:1.7
	binutils-2_15-branchpoint:1.7
	csl-arm-2004-q1a:1.7
	csl-arm-2004-q1:1.7
	binutils-2_15-branch:1.7.0.12
	cagney_bfdfile-20040213-branch:1.7.0.10
	cagney_bfdfile-20040213-branchpoint:1.7
	cagney_bigcore-20040122-branch:1.7.0.8
	cagney_bigcore-20040122-branchpoint:1.7
	csl-arm-2003-q4:1.7
	binutils-2_14:1.7
	binutils-2_14-branch:1.7.0.6
	binutils-2_14-branchpoint:1.7
	binutils-2_13_2_1:1.7
	binutils-2_13_2:1.7
	binutils-2_13_1:1.7
	binutils-2_13:1.7
	binutils-2_13-branchpoint:1.7
	binutils-2_13-branch:1.7.0.4
	binutils-2_12_1:1.7
	binutils-2_12:1.7
	binutils-2_12-branch:1.7.0.2
	binutils-2_12-branchpoint:1.7
	cygnus_cvs_20020108_pre:1.5
	binutils-2_11_2:1.3.2.2
	binutils-2_11_1:1.3.2.2
	binutils-2_11:1.3
	x86_64versiong3:1.3
	binutils-2_11-branch:1.3.0.2
	binutils-2_10_1:1.2
	binutils-2_10:1.2
	binutils-2_10-branch:1.2.0.2
	binutils-2_10-branchpoint:1.2
	binutils_latest_snapshot:1.11
	repo-unification-2000-02-06:1.2
	binu_ss_19990721:1.2
	binu_ss_19990602:1.1.1.1
	binu_ss_19990502:1.1.1.1
	cygnus:1.1.1;
locks; strict;
comment	@ * @;


1.11
date	2007.07.06.10.40.34;	author nickc;	state Exp;
branches;
next	1.10;

1.10
date	2005.05.09.06.55.24;	author nickc;	state Exp;
branches;
next	1.9;

1.9
date	2005.03.03.12.05.12;	author amodra;	state Exp;
branches;
next	1.8;

1.8
date	2004.05.26.04.55.55;	author bje;	state Exp;
branches;
next	1.7;

1.7
date	2002.02.01.08.24.15;	author amodra;	state Exp;
branches;
next	1.6;

1.6
date	2002.01.31.12.56.06;	author amodra;	state Exp;
branches;
next	1.5;

1.5
date	2001.03.14.03.14.56;	author amodra;	state Exp;
branches;
next	1.4;

1.4
date	2001.03.13.21.07.29;	author nickc;	state Exp;
branches;
next	1.3;

1.3
date	2000.07.24.20.59.03;	author nickc;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	99.06.30.22.38.18;	author ian;	state Exp;
branches;
next	1.1;

1.1
date	99.05.03.07.29.11;	author rth;	state Exp;
branches
	1.1.1.1;
next	;

1.3.2.1
date	2001.06.07.03.16.26;	author amodra;	state Exp;
branches;
next	1.3.2.2;

1.3.2.2
date	2001.06.11.10.05.03;	author amodra;	state Exp;
branches;
next	;

1.1.1.1
date	99.05.03.07.29.11;	author rth;	state Exp;
branches;
next	;


desc
@@


1.11
log
@CHange FSF sources over to GPLv3
@
text
@/* call_graph.c  -  Create call graphs.

   Copyright 1999, 2000, 2001, 2002, 2004, 2007 Free Software Foundation, Inc.

   This file is part of GNU Binutils.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA
   02110-1301, USA.  */

#include "gprof.h"
#include "search_list.h"
#include "source.h"
#include "symtab.h"
#include "cg_arcs.h"
#include "call_graph.h"
#include "corefile.h"
#include "gmon_io.h"
#include "gmon_out.h"
#include "sym_ids.h"

void
cg_tally (bfd_vma from_pc, bfd_vma self_pc, unsigned long count)
{
  Sym *parent;
  Sym *child;

  parent = sym_lookup (&symtab, from_pc);
  child = sym_lookup (&symtab, self_pc);

  if (child == NULL || parent == NULL)
    return;

  /* If we're doing line-by-line profiling, both the parent and the
     child will probably point to line symbols instead of function
     symbols.  For the parent this is fine, since this identifies the
     line number in the calling routing, but the child should always
     point to a function entry point, so we back up in the symbol
     table until we find it.

     For normal profiling, is_func will be set on all symbols, so this
     code will do nothing.  */
  while (child >= symtab.base && ! child->is_func)
    --child;

  if (child < symtab.base)
    return;

  /* Keep arc if it is on INCL_ARCS table or if the INCL_ARCS table
     is empty and it is not in the EXCL_ARCS table.  */
  if (sym_id_arc_is_present (&syms[INCL_ARCS], parent, child)
      || (syms[INCL_ARCS].len == 0
	  && !sym_id_arc_is_present (&syms[EXCL_ARCS], parent, child)))
    {
      child->ncalls += count;
      DBG (TALLYDEBUG,
	   printf (_("[cg_tally] arc from %s to %s traversed %lu times\n"),
		   parent->name, child->name, count));
      arc_add (parent, child, count);
    }
}

/* Read a record from file IFP describing an arc in the function
   call-graph and the count of how many times the arc has been
   traversed.  FILENAME is the name of file IFP and is provided
   for formatting error-messages only.  */

void
cg_read_rec (FILE *ifp, const char *filename)
{
  bfd_vma from_pc, self_pc;
  unsigned int count;

  if (gmon_io_read_vma (ifp, &from_pc)
      || gmon_io_read_vma (ifp, &self_pc)
      || gmon_io_read_32 (ifp, &count))
    {
      fprintf (stderr, _("%s: %s: unexpected end of file\n"),
	       whoami, filename);
      done (1);
    }

  DBG (SAMPLEDEBUG,
       printf ("[cg_read_rec] frompc 0x%lx selfpc 0x%lx count %lu\n",
	       (unsigned long) from_pc, (unsigned long) self_pc,
	       (unsigned long) count));
  /* Add this arc:  */
  cg_tally (from_pc, self_pc, count);
}

/* Write all the arcs in the call-graph to file OFP.  FILENAME is
   the name of OFP and is provided for formatting error-messages
   only.  */

void
cg_write_arcs (FILE *ofp, const char *filename)
{
  Arc *arc;
  Sym *sym;

  for (sym = symtab.base; sym < symtab.limit; sym++)
    {
      for (arc = sym->cg.children; arc; arc = arc->next_child)
	{
	  if (gmon_io_write_8 (ofp, GMON_TAG_CG_ARC)
	      || gmon_io_write_vma (ofp, arc->parent->addr)
	      || gmon_io_write_vma (ofp, arc->child->addr)
	      || gmon_io_write_32 (ofp, arc->count))
	    {
	      perror (filename);
	      done (1);
	    }
	  DBG (SAMPLEDEBUG,
	     printf ("[cg_write_arcs] frompc 0x%lx selfpc 0x%lx count %lu\n",
		     (unsigned long) arc->parent->addr,
		     (unsigned long) arc->child->addr, arc->count));
	}
    }
}
@


1.10
log
@Update the address of the FSF
@
text
@d3 1
a3 1
   Copyright 1999, 2000, 2001, 2002, 2004 Free Software Foundation, Inc.
d9 1
a9 1
   the Free Software Foundation; either version 2 of the License, or
@


1.9
log
@update copyright dates
@
text
@d19 2
a20 2
   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
   02111-1307, USA.  */
@


1.8
log
@	* alpha.c, basic_blocks.c, basic_blocks.h, bb_exit_func.c,
	call_graph.c, call_graph.h, cg_arcs.c, cg_arcs.h, cg_dfn.c,
	cg_dfn.h, cg_print.c, cg_print.h, corefile.c, corefile.h,
	gmon_io.c, gmon_io.h, gprof.c, gprof.h, hertz.h, hist.c, hist.h,
	i386.c, mips.c, search_list.c, search_list.h, source.c, source.h,
	sparc.c, sym_ids.c, sym_ids.h, symtab.c, symtab.h, tahoe.c,
	utils.c, utils.h, vax.c, gen-c-prog.awk: Convert K&R C to ANSI C.
@
text
@d3 1
a3 1
   Copyright 2000, 2001, 2002 Free Software Foundation, Inc.
@


1.7
log
@	* alpha.c (alpha_find_call): Warning fixes.
	* mips.c (mips_find_call): Likewise.
	* sparc.c (sparc_find_call): Likewise.
	* basic_blocks.c: Warning fixes.  Eliminate DEFUN.
	* call_graph.c: Likewise.
	* cg_arcs.c: Likewise.
	* cg_dfn.cp: Likewise.
	* gprof.c: Likewise.
	* gprof.h: Likewise.
	* hist.c: Likewise.
	* search_list.c: Likewise.
	* source.c: Likewise.
	* source.h: Likewise.
	* sym_ids.c: Likewise.
	* symtab.c: Likewise.
	* symtab.h: Likewise.
	* utils.c: Likewise.
	* cg_print.c: Likewise.
	(struct function_map, symbol_map, symbol_map_count): Move
	declaration to..
	* corefile: ..here.
	* corefile.c: Warning fixes.  Eliminate DEFUN.
	(struct function_map): Remove declaration.
	* gmon_io.c: Warning fixes.  Eliminate DEFUN.
	(gmon_io_read_64): Make static.
	(gmon_io_write_64): Likewise.
	(gmon_read_raw_arc): Likewise.
	(gmon_write_raw_arc): Likewise.
	(gmon_io_write_8): Don't pass char, pass int param.
	* gmon_io.h (gmon_io_write_8): Likewise.

and a few copyright dates that should have been done previously.
@
text
@d34 1
a34 4
cg_tally (from_pc, self_pc, count)
     bfd_vma from_pc;
     bfd_vma self_pc;
     unsigned long count;
d80 1
a80 3
cg_read_rec (ifp, filename)
     FILE *ifp;
     const char *filename;
d107 1
a107 3
cg_write_arcs (ofp, filename)
     FILE *ofp;
     const char *filename;
@


1.6
log
@	* alpha.c (alpha_Instruction): Don't use.
	(alpha_find_call): Avoid use of bitfields and casts between
	pointers and integers of different sizes.  Avoid endian problems
	when cross-compiling.
	* vax.c (vax_find_call): Likewise.
	(struct modebyte): Don't use.
	(vax_operandmode): Pass in an unsigned char *.
	(vax_operandlength): Likewise.
	(vax_reladdr): Rename to vax_offset and return relative offset
	rather than address.
	* i386.c (i386_find_call): Avoid casts between pointers and
	integers of different sizes.
	* sparc.c (sparc_find_call): Likewise.  Avoid endian problems.
	* tahoe.c (tahoe_find_call): Likewise.
	(tahoe_reladdr): Rename to tahoe_offset and return relative offset
	rather than address.

	* basic_blocks.h: Don't include headers here.
	* call_graph.h: Likewise.
	* cg_arcs.h: Likewise.
	* cg_print.h: Likewise.
	* corefile.h: Likewise.
	* gmon_io.h: Likewise.
	* gmon_out.h: Likewise.
	* hertz.h: Likewise.
	* hist.h: Likewise.
	* source.h: Likewise.
	* sym_ids.h: Likewise.
	* symtab.h: Likewise.
	* gprof.h: Don't include ansidecl.h, do include bfd.h.
	(bool): Don't typedef.
	* alpha.c: Adjust #include's for above header changes.
	* basic_blocks.c: Likewise.
	* call_graph.c: Likewise.
	* cg_arcs.c: Likewise.
	* cg_dfn.c: Likewise.
	* cg_print.c: Likewise.
	* corefile.c: Likewise.
	* gmon_io.c: Likewise.
	* gprof.c: Likewise.
	* hertz.c: Likewise.
	* hist.c: Likewise.
	* i386.c: Likewise.
	* mips.c: Likewise.
	* sparc.c: Likewise.
	* sym_ids.c: Likewise.
	* symtab.c: Likewise.
	* tahoe.c: Likewise.
	* utils.c: Likewise.
	* vax.c: Likewise.

	* po/POTFILES.in: Regenerate.
@
text
@d3 1
a3 1
   Copyright 2000, 2001 Free Software Foundation, Inc.
d33 5
a37 3
extern void
DEFUN (cg_tally, (from_pc, self_pc, count),
       bfd_vma from_pc AND bfd_vma self_pc AND unsigned long count)
d83 3
a85 1
DEFUN (cg_read_rec, (ifp, filename), FILE * ifp AND CONST char *filename)
d112 3
a114 1
DEFUN (cg_write_arcs, (ofp, filename), FILE * ofp AND const char *filename)
@


1.5
log
@David Mosberger's fixes for cross compiling gprof.
@
text
@d22 4
a30 1
#include "symtab.h"
@


1.4
log
@Fix typos in ChangeLog; fix dates in copyright notices
@
text
@d3 1
a3 1
   Copyright 2000 Free Software Foundation, Inc.
d49 1
a49 1
   
d81 1
a81 2
  struct gmon_cg_arc_record arc;
  unsigned long count;
d83 3
a85 1
  if (fread (&arc, sizeof (arc), 1, ifp) != 1)
d91 1
a91 4
  
  from_pc = get_vma (core_bfd, (bfd_byte *) arc.from_pc);
  self_pc = get_vma (core_bfd, (bfd_byte *) arc.self_pc);
  count = bfd_get_32 (core_bfd, (bfd_byte *) arc.count);
d94 2
a95 1
	       (unsigned long) from_pc, (unsigned long) self_pc, count));
a106 2
  const unsigned char tag = GMON_TAG_CG_ARC;
  struct gmon_cg_arc_record raw_arc;
d114 4
a117 5
	  put_vma (core_bfd, arc->parent->addr, (bfd_byte *) raw_arc.from_pc);
	  put_vma (core_bfd, arc->child->addr, (bfd_byte *) raw_arc.self_pc);
	  bfd_put_32 (core_bfd, arc->count, (bfd_byte *) raw_arc.count);
	  if (fwrite (&tag, sizeof (tag), 1, ofp) != 1
	      || fwrite (&raw_arc, sizeof (raw_arc), 1, ofp) != 1)
@


1.3
log
@Add GPL copyright notices to uncopyrighted files.
Add copy of GPL.
@
text
@d3 1
a3 1
   Copyright (C) 2000  Free Software Foundation, Inc.
@


1.3.2.1
log
@Update copyright notices.
@
text
@d3 1
a3 1
   Copyright 2000, 2001 Free Software Foundation, Inc.
@


1.3.2.2
log
@Merge from mainline.
@
text
@d49 1
a49 1

d81 2
a82 1
  unsigned int count;
d84 1
a84 3
  if (gmon_io_read_vma (ifp, &from_pc)
      || gmon_io_read_vma (ifp, &self_pc)
      || gmon_io_read_32 (ifp, &count))
d90 4
a93 1

d96 1
a96 2
	       (unsigned long) from_pc, (unsigned long) self_pc,
	       (unsigned long) count));
d108 2
d117 5
a121 4
	  if (gmon_io_write_8 (ofp, GMON_TAG_CG_ARC)
	      || gmon_io_write_vma (ofp, arc->parent->addr)
	      || gmon_io_write_vma (ofp, arc->child->addr)
	      || gmon_io_write_32 (ofp, arc->count))
@


1.2
log
@	* Many files: Add casts in many print statements to cast bfd_vma
	values to unsigned long when calling printf.
	* Makefile.am ($(OBJECTS)): Add gmon.h.
	* Makefile.in: Rebuild.
@
text
@d1 21
a51 1

d58 2
a59 4
  /*
   * Keep arc if it is on INCL_ARCS table or if the INCL_ARCS table
   * is empty and it is not in the EXCL_ARCS table.
   */
d72 4
a76 6
/*
 * Read a record from file IFP describing an arc in the function
 * call-graph and the count of how many times the arc has been
 * traversed.  FILENAME is the name of file IFP and is provided
 * for formatting error-messages only.
 */
d90 1
d97 1
a97 1
  /* add this arc: */
d101 3
a104 5
/*
 * Write all the arcs in the call-graph to file OFP.  FILENAME is
 * the name of OFP and is provided for formatting error-messages
 * only.
 */
@


1.1
log
@Initial revision
@
text
@d79 1
a79 1
	       from_pc, self_pc, count));
d113 2
a114 1
		     arc->parent->addr, arc->child->addr, arc->count));
@


1.1.1.1
log
@19990502 sourceware import
@
text
@@

