head	1.5;
access;
symbols
	binutils-2_24-branch:1.5.0.32
	binutils-2_24-branchpoint:1.5
	binutils-2_21_1:1.5
	binutils-2_23_2:1.5
	binutils-2_23_1:1.5
	binutils-2_23:1.5
	binutils-2_23-branch:1.5.0.30
	binutils-2_23-branchpoint:1.5
	binutils-2_22_branch:1.5.0.28
	binutils-2_22:1.5
	binutils-2_22-branch:1.5.0.26
	binutils-2_22-branchpoint:1.5
	binutils-2_21:1.5
	binutils-2_21-branch:1.5.0.24
	binutils-2_21-branchpoint:1.5
	binutils-2_20_1:1.5
	binutils-2_20:1.5
	binutils-arc-20081103-branch:1.5.0.22
	binutils-arc-20081103-branchpoint:1.5
	binutils-2_20-branch:1.5.0.20
	binutils-2_20-branchpoint:1.5
	dje-cgen-play1-branch:1.5.0.18
	dje-cgen-play1-branchpoint:1.5
	arc-20081103-branch:1.5.0.16
	arc-20081103-branchpoint:1.5
	binutils-2_19_1:1.5
	binutils-2_19:1.5
	binutils-2_19-branch:1.5.0.14
	binutils-2_19-branchpoint:1.5
	binutils-2_18:1.5
	binutils-2_18-branch:1.5.0.12
	binutils-2_18-branchpoint:1.5
	binutils-csl-coldfire-4_1-32:1.5
	binutils-csl-sourcerygxx-4_1-32:1.5
	binutils-csl-innovasic-fido-3_4_4-33:1.5
	binutils-csl-sourcerygxx-3_4_4-32:1.5
	binutils-csl-coldfire-4_1-30:1.5
	binutils-csl-sourcerygxx-4_1-30:1.5
	binutils-csl-coldfire-4_1-28:1.5
	binutils-csl-sourcerygxx-4_1-29:1.5
	binutils-csl-sourcerygxx-4_1-28:1.5
	binutils-csl-arm-2006q3-27:1.5
	binutils-csl-sourcerygxx-4_1-27:1.5
	binutils-csl-arm-2006q3-26:1.5
	binutils-csl-sourcerygxx-4_1-26:1.5
	binutils-csl-sourcerygxx-4_1-25:1.5
	binutils-csl-sourcerygxx-4_1-24:1.5
	binutils-csl-sourcerygxx-4_1-23:1.5
	binutils-csl-sourcerygxx-4_1-21:1.5
	binutils-csl-arm-2006q3-21:1.5
	binutils-csl-sourcerygxx-4_1-22:1.5
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.5
	binutils-csl-sourcerygxx-4_1-20:1.5
	binutils-csl-arm-2006q3-19:1.5
	binutils-csl-sourcerygxx-4_1-19:1.5
	binutils-csl-sourcerygxx-4_1-18:1.5
	binutils-csl-renesas-4_1-9:1.5
	binutils-csl-sourcerygxx-3_4_4-25:1.5
	binutils-csl-renesas-4_1-8:1.5
	binutils-csl-renesas-4_1-7:1.5
	binutils-csl-renesas-4_1-6:1.5
	binutils-csl-sourcerygxx-4_1-17:1.5
	binutils-csl-sourcerygxx-4_1-14:1.5
	binutils-csl-sourcerygxx-4_1-15:1.5
	binutils-csl-sourcerygxx-4_1-13:1.5
	binutils-2_17:1.5
	binutils-csl-sourcerygxx-4_1-12:1.5
	binutils-csl-sourcerygxx-3_4_4-21:1.5
	binutils-csl-wrs-linux-3_4_4-24:1.5
	binutils-csl-wrs-linux-3_4_4-23:1.5
	binutils-csl-sourcerygxx-4_1-9:1.5
	binutils-csl-sourcerygxx-4_1-8:1.5
	binutils-csl-sourcerygxx-4_1-7:1.5
	binutils-csl-arm-2006q1-6:1.5
	binutils-csl-sourcerygxx-4_1-6:1.5
	binutils-csl-wrs-linux-3_4_4-22:1.5
	binutils-csl-coldfire-4_1-11:1.5
	binutils-csl-sourcerygxx-3_4_4-19:1.5
	binutils-csl-coldfire-4_1-10:1.5
	binutils-csl-sourcerygxx-4_1-5:1.5
	binutils-csl-sourcerygxx-4_1-4:1.5
	binutils-csl-wrs-linux-3_4_4-21:1.5
	binutils-csl-morpho-4_1-4:1.5
	binutils-csl-sourcerygxx-3_4_4-17:1.5
	binutils-csl-wrs-linux-3_4_4-20:1.5
	binutils-2_17-branch:1.5.0.10
	binutils-2_17-branchpoint:1.5
	binutils-csl-2_17-branch:1.5.0.8
	binutils-csl-2_17-branchpoint:1.5
	binutils-csl-gxxpro-3_4-branch:1.5.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.5
	binutils-2_16_1:1.5
	binutils-csl-arm-2005q1b:1.5
	binutils-2_16:1.5
	binutils-csl-arm-2005q1a:1.5
	binutils-csl-arm-2005q1-branch:1.5.0.4
	binutils-csl-arm-2005q1-branchpoint:1.5
	binutils-2_16-branch:1.5.0.2
	binutils-2_16-branchpoint:1.5
	csl-arm-2004-q3d:1.4
	csl-arm-2004-q3:1.4
	gprof-pre-ansify-2004-05-26:1.4
	gprof-post-ansify-2004-05-26:1.4
	binutils-2_15:1.4
	binutils-2_15-branchpoint:1.4
	csl-arm-2004-q1a:1.4
	csl-arm-2004-q1:1.4
	binutils-2_15-branch:1.4.0.8
	cagney_bfdfile-20040213-branch:1.4.0.6
	cagney_bfdfile-20040213-branchpoint:1.4
	cagney_bigcore-20040122-branch:1.4.0.4
	cagney_bigcore-20040122-branchpoint:1.4
	csl-arm-2003-q4:1.4
	binutils-2_14:1.4
	binutils-2_14-branch:1.4.0.2
	binutils-2_14-branchpoint:1.4
	binutils-2_13_2_1:1.3.4.1
	binutils-2_13_2:1.3.4.1
	binutils-2_13_1:1.3.4.1
	binutils-2_13:1.3.4.1
	binutils-2_13-branchpoint:1.3
	binutils-2_13-branch:1.3.0.4
	binutils-2_12_1:1.3
	binutils-2_12:1.3
	binutils-2_12-branch:1.3.0.2
	binutils-2_12-branchpoint:1.3
	cygnus_cvs_20020108_pre:1.2
	binutils-2_11_2:1.1.1.1.4.2
	binutils-2_11_1:1.1.1.1.4.2
	binutils-2_11:1.1.1.1
	x86_64versiong3:1.1.1.1
	binutils-2_11-branch:1.1.1.1.0.4
	binutils-2_10_1:1.1.1.1
	binutils-2_10:1.1.1.1
	binutils-2_10-branch:1.1.1.1.0.2
	binutils-2_10-branchpoint:1.1.1.1
	binutils_latest_snapshot:1.5
	repo-unification-2000-02-06:1.1.1.1
	binu_ss_19990721:1.1.1.1
	binu_ss_19990602:1.1.1.1
	binu_ss_19990502:1.1.1.1
	cygnus:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2005.01.20.23.37.57;	author bje;	state Exp;
branches;
next	1.4;

1.4
date	2002.07.30.09.07.00;	author nickc;	state Exp;
branches;
next	1.3;

1.3
date	2002.01.31.18.37.56;	author nickc;	state Exp;
branches
	1.3.4.1;
next	1.2;

1.2
date	2001.03.14.03.14.56;	author amodra;	state Exp;
branches;
next	1.1;

1.1
date	99.05.03.07.29.11;	author rth;	state Exp;
branches
	1.1.1.1;
next	;

1.3.4.1
date	2002.07.30.18.20.36;	author drow;	state Exp;
branches;
next	;

1.1.1.1
date	99.05.03.07.29.11;	author rth;	state Exp;
branches
	1.1.1.1.4.1;
next	;

1.1.1.1.4.1
date	2001.06.07.03.16.27;	author amodra;	state Exp;
branches;
next	1.1.1.1.4.2;

1.1.1.1.4.2
date	2001.06.11.10.05.03;	author amodra;	state Exp;
branches;
next	;


desc
@@


1.5
log
@	* gmon.h, alpha.c, vax.c: Remove #if 0'd chunks.
@
text
@/*
 * Copyright (c) 1983, 1991, 1993, 2001
 *      The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */
#ifndef gmon_h
#define gmon_h

/* Size of the 4.4BSD gmon header */
#define GMON_HDRSIZE_BSD44_32 (4 + 4 + 4 + 4 + 4 + (3 * 4))
#define GMON_HDRSIZE_BSD44_64 (8 + 8 + 4 + 4 + 4 + (3 * 4))

/* *INDENT-OFF* */
/* For documentation purposes only.

   struct raw_phdr
    {
      char low_pc[sizeof(void *)];   -- base pc address of sample buffer
      char high_pc[sizeof(void *)];  -- max pc address of sampled buffer
      char ncnt[4];		     -- size of sample buffer (plus this
				        header)

      char version[4];		     -- version number
      char profrate[4];		     -- profiling clock rate
      char spare[3*4];		     -- reserved
    };
*/
/* *INDENT-ON* */

#define GMONVERSION     0x00051879

/* Size of the old BSD gmon header */
#define GMON_HDRSIZE_OLDBSD_32 (4 + 4 + 4) 

/* FIXME: Checking host compiler defines here means that we can't
   use a cross gprof alpha OSF.  */
#if defined(__alpha__) && defined (__osf__) 
#define GMON_HDRSIZE_OLDBSD_64 (8 + 8 + 4 + 4)
#else
#define GMON_HDRSIZE_OLDBSD_64 (8 + 8 + 4)
#endif

/* *INDENT-OFF* */
/* For documentation purposes only.

  struct old_raw_phdr
    {
      char low_pc[sizeof(void *)];  -- base pc address of sample buffer
      char high_pc[sizeof(void *)]  -- max pc address of sampled buffer
      char ncnt[4];		    -- size of sample buffer (plus this
				       header)

      if defined (__alpha__) && defined (__osf__)
      char pad[4];		    -- DEC's OSF v3.0 uses 4 bytes of padding
				    -- to bring the header to a size that is a
				    -- multiple of 8.
      endif
    };
*/
/* *INDENT-ON* */

/*
 * Histogram counters are unsigned shorts:
 */
#define	HISTCOUNTER unsigned short

/*
 * Fraction of text space to allocate for histogram counters here, 1/2:
 */
#define	HISTFRACTION	2

/*
 * Fraction of text space to allocate for from hash buckets.  The
 * value of HASHFRACTION is based on the minimum number of bytes of
 * separation between two subroutine call points in the object code.
 * Given MIN_SUBR_SEPARATION bytes of separation the value of
 * HASHFRACTION is calculated as:
 *
 *      HASHFRACTION = MIN_SUBR_SEPARATION / (2 * sizeof(short) - 1);
 *
 * For the VAX, the shortest two call sequence is:
 *
 *      calls   $0,(r0)
 *      calls   $0,(r0)
 *
 * which is separated by only three bytes, thus HASHFRACTION is
 * calculated as:
 *
 *      HASHFRACTION = 3 / (2 * 2 - 1) = 1
 *
 * Note that the division above rounds down, thus if MIN_SUBR_FRACTION
 * is less than three, this algorithm will not work!
 */
#define	HASHFRACTION 1

/*
 * Percent of text space to allocate for tostructs with a minimum:
 */
#define ARCDENSITY	2
#define MINARCS		50

struct tostruct
  {
    char *selfpc;
    int count;
    unsigned short link;
  };

/*
 * A raw arc, with pointers to the calling site and the called site
 * and a count.  Everything is defined in terms of characters so
 * as to get a packed representation (otherwise, different compilers
 * might introduce different padding):
 */

/* *INDENT-OFF* */
/* For documentation purposes only.

  struct raw_arc
    {
      char from_pc[sizeof(void *)];
      char self_pc[sizeof(void *)];
      char count[sizeof(long)];
    };
*/
/* *INDENT-ON* */

/*
 * General rounding functions:
 */
#define ROUNDDOWN(x,y)	(((x)/(y))*(y))
#define ROUNDUP(x,y)	((((x)+(y)-1)/(y))*(y))

#endif /* gmon_h */
@


1.4
log
@Update copyright notice
@
text
@d36 4
a39 2
#if 0 /* For documentation purposes only.  */
  struct raw_phdr
d41 8
a48 8
      char low_pc[sizeof(void *)]; /* base pc address of sample buffer */
      char high_pc[sizeof(void *)];/* max pc address of sampled buffer */
      char ncnt[4];		   /* size of sample buffer (plus this
				      header) */

      char version[4];		   /* version number */
      char profrate[4];		   /* profiling clock rate */
      char spare[3*4];		   /* reserved */
d50 2
a51 1
#endif
d66 3
a68 1
#if 0 /* For documentation purposes only.  */
d71 10
a80 11
      char low_pc[sizeof(void *)]; /* base pc address of sample buffer */
      char high_pc[sizeof(void *)];/* max pc address of sampled buffer */
      char ncnt[4];		   /* size of sample buffer (plus this
				      header) */
#if defined (__alpha__) && defined (__osf__)
      /*
       * DEC's OSF v3.0 uses 4 bytes of padding to bring the header to
       * a size that is a multiple of 8.
       */
      char pad[4];
#endif
d82 2
a83 1
#endif
d138 4
a141 1
#if 0 /* For documentation purposes only.  */
d148 2
a149 1
#endif
@


1.3
log
@Deal with target architecture that have a pointer size that is different from
the host architectures pointer size.
@
text
@d1 3
a3 3
/*-
 * Copyright (c) 1991, 2001 The Regents of the University of California.
 * All rights reserved.
d13 1
a13 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
a27 2
 *
 *	@@(#)gmon.h	5.2 (Berkeley) 5/6/91
@


1.3.4.1
log
@        Merge from mainline:
        2002-07-30  Nick Clifton  <nickc@@redhat.com>
        * po/tr.po: Updated Turkish translation.

        2002-07-30  Nick Clifton  <nickc@@redhat.com>
        * alpha.c, cg_arcs.c, cg_dfn.c, gmon.h, gprof.c, gprof.h, hertz.c,
        i386.c, mips.c, sparc.c, tahoe.c, utils.c, vax.c: Update Copyright
        notice so that it applies even if the sources are modified.
@
text
@d1 3
a3 3
/*
 * Copyright (c) 1983, 1991, 1993, 2001
 *      The Regents of the University of California.  All rights reserved.
d13 5
a17 1
 * 3. Neither the name of the University nor the names of its contributors
d32 2
@


1.2
log
@David Mosberger's fixes for cross compiling gprof.
@
text
@d38 17
a54 12
struct raw_phdr
  {
    /* FIXME: Checking a host compiler define means that we can't use
       a cross gprof to the alpha.  */
    char low_pc[GMON_PTR_SIZE];	/* base pc address of sample buffer */
    char high_pc[GMON_PTR_SIZE];/* max pc address of sampled buffer */
    char ncnt[4];		/* size of sample buffer (plus this header) */

    char version[4];		/* version number */
    char profrate[4];		/* profiling clock rate */
    char spare[3*4];		/* reserved */
  };
d58 10
a67 5
struct old_raw_phdr
  {
    char low_pc[GMON_PTR_SIZE];	/* base pc address of sample buffer */
    char high_pc[GMON_PTR_SIZE];/* max pc address of sampled buffer */
    char ncnt[4];		/* size of sample buffer (plus this header) */
d69 7
a75 2
    /* FIXME: Checking host compiler defines here means that we can't
       use a cross gprof alpha OSF.  */
d77 7
a83 5
    /*
     * DEC's OSF v3.0 uses 4 bytes of padding to bring the header to
     * a size that is a multiple of 8.
     */
    char pad[4];
a84 1
  };
d139 8
a146 6
struct raw_arc
  {
    char from_pc[GMON_PTR_SIZE];
    char self_pc[GMON_PTR_SIZE];
    char count[4];
  };
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
 * Copyright (c) 1991 The Regents of the University of California.
d42 2
a43 7
#ifdef __alpha__
    char low_pc[8];		/* base pc address of sample buffer */
    char high_pc[8];		/* max pc address of sampled buffer */
#else
    char low_pc[4];		/* base pc address of sample buffer */
    char high_pc[4];		/* max pc address of sampled buffer */
#endif
d55 2
a56 9
    /* FIXME: Checking a host compiler define means that we can't use
       a cross gprof to the alpha.  */
#ifdef __alpha__
    char low_pc[8];		/* base pc address of sample buffer */
    char high_pc[8];		/* max pc address of sampled buffer */
#else
    char low_pc[4];		/* base pc address of sample buffer */
    char high_pc[4];		/* max pc address of sampled buffer */
#endif
d94 1
a94 1
 * which is separated by only three bytes, thus HASHFRACTION is 
d125 2
a126 9
    /* FIXME: Checking a host compiler define means that we can't use
       a cross gprof to the alpha.  */
#ifdef __alpha__
    char from_pc[8];
    char self_pc[8];
    char count[8];
#else
    char from_pc[4];
    char self_pc[4];
a127 1
#endif
@


1.1.1.1
log
@19990502 sourceware import
@
text
@@


1.1.1.1.4.1
log
@Update copyright notices.
@
text
@d2 1
a2 1
 * Copyright (c) 1991, 2001 The Regents of the University of California.
@


1.1.1.1.4.2
log
@Merge from mainline.
@
text
@d42 7
a48 2
    char low_pc[GMON_PTR_SIZE];	/* base pc address of sample buffer */
    char high_pc[GMON_PTR_SIZE];/* max pc address of sampled buffer */
d60 9
a68 2
    char low_pc[GMON_PTR_SIZE];	/* base pc address of sample buffer */
    char high_pc[GMON_PTR_SIZE];/* max pc address of sampled buffer */
d106 1
a106 1
 * which is separated by only three bytes, thus HASHFRACTION is
d137 9
a145 2
    char from_pc[GMON_PTR_SIZE];
    char self_pc[GMON_PTR_SIZE];
d147 1
@


