head	1.34;
access;
symbols
	binutils-2_24-branch:1.34.0.14
	binutils-2_24-branchpoint:1.34
	binutils-2_21_1:1.34
	binutils-2_23_2:1.34
	binutils-2_23_1:1.34
	binutils-2_23:1.34
	binutils-2_23-branch:1.34.0.12
	binutils-2_23-branchpoint:1.34
	binutils-2_22_branch:1.34.0.10
	binutils-2_22:1.34
	binutils-2_22-branch:1.34.0.8
	binutils-2_22-branchpoint:1.34
	binutils-2_21:1.34
	binutils-2_21-branch:1.34.0.6
	binutils-2_21-branchpoint:1.34
	binutils-2_20_1:1.34
	binutils-2_20:1.34
	binutils-arc-20081103-branch:1.32.0.6
	binutils-arc-20081103-branchpoint:1.32
	binutils-2_20-branch:1.34.0.4
	binutils-2_20-branchpoint:1.34
	dje-cgen-play1-branch:1.34.0.2
	dje-cgen-play1-branchpoint:1.34
	arc-20081103-branch:1.32.0.4
	arc-20081103-branchpoint:1.32
	binutils-2_19_1:1.32
	binutils-2_19:1.32
	binutils-2_19-branch:1.32.0.2
	binutils-2_19-branchpoint:1.32
	binutils-2_18:1.31
	binutils-2_18-branch:1.31.0.2
	binutils-2_18-branchpoint:1.31
	binutils-csl-coldfire-4_1-32:1.25.2.4
	binutils-csl-sourcerygxx-4_1-32:1.25.2.4
	binutils-csl-innovasic-fido-3_4_4-33:1.25.2.4
	binutils-csl-sourcerygxx-3_4_4-32:1.21
	binutils-csl-coldfire-4_1-30:1.25.2.3
	binutils-csl-sourcerygxx-4_1-30:1.25.2.3
	binutils-csl-coldfire-4_1-28:1.25.2.3
	binutils-csl-sourcerygxx-4_1-29:1.25.2.4
	binutils-csl-sourcerygxx-4_1-28:1.25.2.3
	binutils-csl-arm-2006q3-27:1.25.2.3
	binutils-csl-sourcerygxx-4_1-27:1.25.2.3
	binutils-csl-arm-2006q3-26:1.25.2.3
	binutils-csl-sourcerygxx-4_1-26:1.25.2.3
	binutils-csl-sourcerygxx-4_1-25:1.25.2.3
	binutils-csl-sourcerygxx-4_1-24:1.25.2.2
	binutils-csl-sourcerygxx-4_1-23:1.25.2.2
	binutils-csl-sourcerygxx-4_1-21:1.25.2.2
	binutils-csl-arm-2006q3-21:1.25.2.2
	binutils-csl-sourcerygxx-4_1-22:1.25.2.2
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.25.2.2
	binutils-csl-sourcerygxx-4_1-20:1.25.2.2
	binutils-csl-arm-2006q3-19:1.25.2.2
	binutils-csl-sourcerygxx-4_1-19:1.25.2.2
	binutils-csl-sourcerygxx-4_1-18:1.25.2.1
	binutils-csl-renesas-4_1-9:1.25.2.1
	binutils-csl-sourcerygxx-3_4_4-25:1.21
	binutils-csl-renesas-4_1-8:1.25.2.1
	binutils-csl-renesas-4_1-7:1.25.2.1
	binutils-csl-renesas-4_1-6:1.25.2.1
	binutils-csl-sourcerygxx-4_1-17:1.25.2.1
	binutils-csl-sourcerygxx-4_1-14:1.25
	binutils-csl-sourcerygxx-4_1-15:1.25
	binutils-csl-sourcerygxx-4_1-13:1.25
	binutils-2_17:1.25
	binutils-csl-sourcerygxx-4_1-12:1.25
	binutils-csl-sourcerygxx-3_4_4-21:1.25
	binutils-csl-wrs-linux-3_4_4-24:1.21
	binutils-csl-wrs-linux-3_4_4-23:1.21
	binutils-csl-sourcerygxx-4_1-9:1.25
	binutils-csl-sourcerygxx-4_1-8:1.25
	binutils-csl-sourcerygxx-4_1-7:1.25
	binutils-csl-arm-2006q1-6:1.25
	binutils-csl-sourcerygxx-4_1-6:1.25
	binutils-csl-wrs-linux-3_4_4-22:1.21
	binutils-csl-coldfire-4_1-11:1.25
	binutils-csl-sourcerygxx-3_4_4-19:1.25
	binutils-csl-coldfire-4_1-10:1.25
	binutils-csl-sourcerygxx-4_1-5:1.25
	binutils-csl-sourcerygxx-4_1-4:1.25
	binutils-csl-wrs-linux-3_4_4-21:1.21
	binutils-csl-morpho-4_1-4:1.25
	binutils-csl-sourcerygxx-3_4_4-17:1.25
	binutils-csl-wrs-linux-3_4_4-20:1.21
	binutils-2_17-branch:1.25.0.4
	binutils-2_17-branchpoint:1.25
	binutils-csl-2_17-branch:1.25.0.2
	binutils-csl-2_17-branchpoint:1.25
	binutils-csl-gxxpro-3_4-branch:1.21.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.21
	binutils-2_16_1:1.21
	binutils-csl-arm-2005q1b:1.21
	binutils-2_16:1.21
	binutils-csl-arm-2005q1a:1.21
	binutils-csl-arm-2005q1-branch:1.21.0.4
	binutils-csl-arm-2005q1-branchpoint:1.21
	binutils-2_16-branch:1.21.0.2
	binutils-2_16-branchpoint:1.21
	csl-arm-2004-q3d:1.21
	csl-arm-2004-q3:1.21
	gprof-pre-ansify-2004-05-26:1.18
	gprof-post-ansify-2004-05-26:1.19
	binutils-2_15:1.17
	binutils-2_15-branchpoint:1.17
	csl-arm-2004-q1a:1.17
	csl-arm-2004-q1:1.17
	binutils-2_15-branch:1.17.0.8
	cagney_bfdfile-20040213-branch:1.17.0.6
	cagney_bfdfile-20040213-branchpoint:1.17
	cagney_bigcore-20040122-branch:1.17.0.4
	cagney_bigcore-20040122-branchpoint:1.17
	csl-arm-2003-q4:1.17
	binutils-2_14:1.17
	binutils-2_14-branch:1.17.0.2
	binutils-2_14-branchpoint:1.17
	binutils-2_13_2_1:1.13.2.2
	binutils-2_13_2:1.13.2.2
	binutils-2_13_1:1.13.2.2
	binutils-2_13:1.13.2.1
	binutils-2_13-branchpoint:1.13
	binutils-2_13-branch:1.13.0.2
	binutils-2_12_1:1.11.2.2
	binutils-2_12:1.11.2.2
	binutils-2_12-branch:1.11.0.2
	binutils-2_12-branchpoint:1.11
	cygnus_cvs_20020108_pre:1.8
	binutils-2_11_2:1.6.2.2
	binutils-2_11_1:1.6.2.2
	binutils-2_11:1.6
	x86_64versiong3:1.6
	binutils-2_11-branch:1.6.0.2
	binutils-2_10_1:1.1.1.1.2.2
	binutils-2_10:1.1.1.1.2.2
	binutils-2_10-branch:1.1.1.1.0.2
	binutils-2_10-branchpoint:1.1.1.1
	binutils_latest_snapshot:1.34
	repo-unification-2000-02-06:1.1.1.1
	binu_ss_19990721:1.1.1.1
	binu_ss_19990602:1.1.1.1
	binu_ss_19990502:1.1.1.1
	cygnus:1.1.1;
locks; strict;
comment	@ * @;


1.34
date	2009.06.12.15.33.30;	author nickc;	state Exp;
branches;
next	1.33;

1.33
date	2009.02.12.12.47.39;	author amodra;	state Exp;
branches;
next	1.32;

1.32
date	2008.06.19.16.30.29;	author schwab;	state Exp;
branches;
next	1.31;

1.31
date	2007.04.19.10.46.56;	author amodra;	state Exp;
branches;
next	1.30;

1.30
date	2007.03.01.15.48.36;	author jsm28;	state Exp;
branches;
next	1.29;

1.29
date	2007.02.17.13.33.57;	author jsm28;	state Exp;
branches;
next	1.28;

1.28
date	2006.10.18.17.42.43;	author bwilson;	state Exp;
branches;
next	1.27;

1.27
date	2006.10.17.04.45.32;	author bwilson;	state Exp;
branches;
next	1.26;

1.26
date	2006.05.02.18.03.02;	author wilson;	state Exp;
branches;
next	1.25;

1.25
date	2005.10.30.18.08.52;	author mmitchel;	state Exp;
branches
	1.25.2.1;
next	1.24;

1.24
date	2005.09.30.16.37.32;	author mmitchel;	state Exp;
branches;
next	1.23;

1.23
date	2005.09.30.11.42.05;	author nickc;	state Exp;
branches;
next	1.22;

1.22
date	2005.04.23.17.13.31;	author bje;	state Exp;
branches;
next	1.21;

1.21
date	2004.07.13.12.18.57;	author bje;	state Exp;
branches;
next	1.20;

1.20
date	2004.05.26.05.56.22;	author bje;	state Exp;
branches;
next	1.19;

1.19
date	2004.05.26.04.55.55;	author bje;	state Exp;
branches;
next	1.18;

1.18
date	2004.05.26.04.06.26;	author bje;	state Exp;
branches;
next	1.17;

1.17
date	2002.11.30.08.39.44;	author amodra;	state Exp;
branches;
next	1.16;

1.16
date	2002.08.22.11.07.15;	author nickc;	state Exp;
branches;
next	1.15;

1.15
date	2002.07.30.09.07.00;	author nickc;	state Exp;
branches;
next	1.14;

1.14
date	2002.07.23.09.58.03;	author nickc;	state Exp;
branches;
next	1.13;

1.13
date	2002.02.10.19.01.19;	author drow;	state Exp;
branches
	1.13.2.1;
next	1.12;

1.12
date	2002.02.10.18.52.30;	author drow;	state Exp;
branches;
next	1.11;

1.11
date	2002.02.01.08.24.16;	author amodra;	state Exp;
branches
	1.11.2.1;
next	1.10;

1.10
date	2002.02.01.01.18.06;	author amodra;	state Exp;
branches;
next	1.9;

1.9
date	2002.01.31.12.56.07;	author amodra;	state Exp;
branches;
next	1.8;

1.8
date	2001.09.19.05.33.31;	author hjl;	state Exp;
branches;
next	1.7;

1.7
date	2001.03.14.03.14.56;	author amodra;	state Exp;
branches;
next	1.6;

1.6
date	2000.07.20.18.02.56;	author nickc;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	2000.05.26.21.11.33;	author nickc;	state Exp;
branches;
next	1.4;

1.4
date	2000.04.05.20.53.15;	author aoliva;	state Exp;
branches;
next	1.3;

1.3
date	2000.04.04.14.32.31;	author amodra;	state Exp;
branches;
next	1.2;

1.2
date	2000.04.03.14.10.04;	author amodra;	state Exp;
branches;
next	1.1;

1.1
date	99.05.03.07.29.11;	author rth;	state Exp;
branches
	1.1.1.1;
next	;

1.25.2.1
date	2006.07.26.18.46.24;	author nathan;	state Exp;
branches;
next	1.25.2.2;

1.25.2.2
date	2006.09.11.09.45.50;	author nathan;	state Exp;
branches;
next	1.25.2.3;

1.25.2.3
date	2006.10.16.20.21.24;	author nathan;	state Exp;
branches;
next	1.25.2.4;

1.25.2.4
date	2006.11.29.16.31.58;	author drow;	state Exp;
branches;
next	;

1.13.2.1
date	2002.07.30.18.20.36;	author drow;	state Exp;
branches;
next	1.13.2.2;

1.13.2.2
date	2002.08.22.13.39.26;	author nickc;	state Exp;
branches;
next	;

1.11.2.1
date	2002.02.10.18.52.00;	author drow;	state Exp;
branches;
next	1.11.2.2;

1.11.2.2
date	2002.02.10.19.01.01;	author drow;	state Exp;
branches;
next	;

1.6.2.1
date	2001.06.07.03.16.27;	author amodra;	state Exp;
branches;
next	1.6.2.2;

1.6.2.2
date	2001.06.11.10.05.03;	author amodra;	state Exp;
branches;
next	;

1.1.1.1
date	99.05.03.07.29.11;	author rth;	state Exp;
branches
	1.1.1.1.2.1;
next	;

1.1.1.1.2.1
date	2000.04.05.05.36.42;	author amodra;	state Exp;
branches;
next	1.1.1.1.2.2;

1.1.1.1.2.2
date	2000.04.05.20.53.21;	author aoliva;	state Exp;
branches;
next	;


desc
@@


1.34
log
@        * corefile.c (num_of_syms_in): New function - computes the number
        of symbols in a given file.
        (core_create_syms_from): New function - populates a symbol table
        from the symbols found in a specified file.
        * corefile.h: Prototype core_create_syms_from.
        * gprof.c (long_options): Add --external-symbol-table.
        (usage): Mention it.
        (main): Initiailize external_symbol_table from
        --external-symbol-table option.  If set use it.
        * gprof.texi: Document the new option.

        * NEWS: Mention new feature added to gprof.
@
text
@/*
 * Copyright (c) 1983, 1993, 1998, 2001, 2002
 *      The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include "gprof.h"
#include "libiberty.h"
#include "bfdver.h"
#include "search_list.h"
#include "source.h"
#include "symtab.h"
#include "basic_blocks.h"
#include "call_graph.h"
#include "cg_arcs.h"
#include "cg_print.h"
#include "corefile.h"
#include "gmon_io.h"
#include "hertz.h"
#include "hist.h"
#include "sym_ids.h"
#include "demangle.h"
#include "getopt.h"

static void usage (FILE *, int) ATTRIBUTE_NORETURN;

const char * whoami;
const char * function_mapping_file;
static const char * external_symbol_table;
const char * a_out_name = A_OUTNAME;
long hz = HZ_WRONG;

/*
 * Default options values:
 */
int debug_level = 0;
int output_style = 0;
int output_width = 80;
bfd_boolean bsd_style_output = FALSE;
bfd_boolean demangle = TRUE;
bfd_boolean ignore_direct_calls = FALSE;
bfd_boolean ignore_static_funcs = FALSE;
bfd_boolean ignore_zeros = TRUE;
bfd_boolean line_granularity = FALSE;
bfd_boolean print_descriptions = TRUE;
bfd_boolean print_path = FALSE;
bfd_boolean ignore_non_functions = FALSE;
File_Format file_format = FF_AUTO;

bfd_boolean first_output = TRUE;

char copyright[] =
 "@@(#) Copyright (c) 1983 Regents of the University of California.\n\
 All rights reserved.\n";

static char *gmon_name = GMONNAME;	/* profile filename */

/*
 * Functions that get excluded by default:
 */
static char *default_excluded_list[] =
{
  "_gprof_mcount", "mcount", "_mcount", "__mcount", "__mcount_internal",
  "__mcleanup",
  0
};

/* Codes used for the long options with no short synonyms.  150 isn't
   special; it's just an arbitrary non-ASCII char value.  */

#define OPTION_DEMANGLE		(150)
#define OPTION_NO_DEMANGLE	(OPTION_DEMANGLE + 1)

static struct option long_options[] =
{
  {"line", no_argument, 0, 'l'},
  {"no-static", no_argument, 0, 'a'},
  {"ignore-non-functions", no_argument, 0, 'D'},
  {"external-symbol-table", required_argument, 0, 'S'},

    /* output styles: */

  {"annotated-source", optional_argument, 0, 'A'},
  {"no-annotated-source", optional_argument, 0, 'J'},
  {"flat-profile", optional_argument, 0, 'p'},
  {"no-flat-profile", optional_argument, 0, 'P'},
  {"graph", optional_argument, 0, 'q'},
  {"no-graph", optional_argument, 0, 'Q'},
  {"exec-counts", optional_argument, 0, 'C'},
  {"no-exec-counts", optional_argument, 0, 'Z'},
  {"function-ordering", no_argument, 0, 'r'},
  {"file-ordering", required_argument, 0, 'R'},
  {"file-info", no_argument, 0, 'i'},
  {"sum", no_argument, 0, 's'},

    /* various options to affect output: */

  {"all-lines", no_argument, 0, 'x'},
  {"demangle", optional_argument, 0, OPTION_DEMANGLE},
  {"no-demangle", no_argument, 0, OPTION_NO_DEMANGLE},
  {"directory-path", required_argument, 0, 'I'},
  {"display-unused-functions", no_argument, 0, 'z'},
  {"min-count", required_argument, 0, 'm'},
  {"print-path", no_argument, 0, 'L'},
  {"separate-files", no_argument, 0, 'y'},
  {"static-call-graph", no_argument, 0, 'c'},
  {"table-length", required_argument, 0, 't'},
  {"time", required_argument, 0, 'n'},
  {"no-time", required_argument, 0, 'N'},
  {"width", required_argument, 0, 'w'},
    /*
     * These are for backwards-compatibility only.  Their functionality
     * is provided by the output style options already:
     */
  {"", required_argument, 0, 'e'},
  {"", required_argument, 0, 'E'},
  {"", required_argument, 0, 'f'},
  {"", required_argument, 0, 'F'},
  {"", required_argument, 0, 'k'},

    /* miscellaneous: */

  {"brief", no_argument, 0, 'b'},
  {"debug", optional_argument, 0, 'd'},
  {"help", no_argument, 0, 'h'},
  {"file-format", required_argument, 0, 'O'},
  {"traditional", no_argument, 0, 'T'},
  {"version", no_argument, 0, 'v'},
  {0, no_argument, 0, 0}
};


static void
usage (FILE *stream, int status)
{
  fprintf (stream, _("\
Usage: %s [-[abcDhilLsTvwxyz]] [-[ACeEfFJnNOpPqSQZ][name]] [-I dirs]\n\
	[-d[num]] [-k from/to] [-m min-count] [-t table-length]\n\
	[--[no-]annotated-source[=name]] [--[no-]exec-counts[=name]]\n\
	[--[no-]flat-profile[=name]] [--[no-]graph[=name]]\n\
	[--[no-]time=name] [--all-lines] [--brief] [--debug[=level]]\n\
	[--function-ordering] [--file-ordering]\n\
	[--directory-path=dirs] [--display-unused-functions]\n\
	[--file-format=name] [--file-info] [--help] [--line] [--min-count=n]\n\
	[--no-static] [--print-path] [--separate-files]\n\
	[--static-call-graph] [--sum] [--table-length=len] [--traditional]\n\
	[--version] [--width=n] [--ignore-non-functions]\n\
	[--demangle[=STYLE]] [--no-demangle] [--external-symbol-table=name] [@@FILE]\n\
	[image-file] [profile-file...]\n"),
	   whoami);
  if (REPORT_BUGS_TO[0] && status == 0)
    fprintf (stream, _("Report bugs to %s\n"), REPORT_BUGS_TO);
  done (status);
}


int
main (int argc, char **argv)
{
  char **sp, *str;
  Sym **cg = 0;
  int ch, user_specified = 0;

#if defined (HAVE_SETLOCALE) && defined (HAVE_LC_MESSAGES)
  setlocale (LC_MESSAGES, "");
#endif
#if defined (HAVE_SETLOCALE)
  setlocale (LC_CTYPE, "");
#endif
#ifdef ENABLE_NLS
  bindtextdomain (PACKAGE, LOCALEDIR);
  textdomain (PACKAGE);
#endif

  whoami = argv[0];
  xmalloc_set_program_name (whoami);

  expandargv (&argc, &argv);

  while ((ch = getopt_long (argc, argv,
	"aA::bBcC::d::De:E:f:F:hiI:J::k:lLm:n:N:O:p::P::q::Q::rR:sS:t:Tvw:xyzZ::",
			    long_options, 0))
	 != EOF)
    {
      switch (ch)
	{
	case 'a':
	  ignore_static_funcs = TRUE;
	  break;
	case 'A':
	  if (optarg)
	    {
	      sym_id_add (optarg, INCL_ANNO);
	    }
	  output_style |= STYLE_ANNOTATED_SOURCE;
	  user_specified |= STYLE_ANNOTATED_SOURCE;
	  break;
	case 'b':
	  print_descriptions = FALSE;
	  break;
	case 'B':
	  output_style |= STYLE_CALL_GRAPH;
	  user_specified |= STYLE_CALL_GRAPH;
	  break;
	case 'c':
	  ignore_direct_calls = TRUE;
	  break;
	case 'C':
	  if (optarg)
	    {
	      sym_id_add (optarg, INCL_EXEC);
	    }
	  output_style |= STYLE_EXEC_COUNTS;
	  user_specified |= STYLE_EXEC_COUNTS;
	  break;
	case 'd':
	  if (optarg)
	    {
	      debug_level |= atoi (optarg);
	      debug_level |= ANYDEBUG;
	    }
	  else
	    {
	      debug_level = ~0;
	    }
	  DBG (ANYDEBUG, printf ("[main] debug-level=0x%x\n", debug_level));
#ifndef DEBUG
	  printf (_("%s: debugging not supported; -d ignored\n"), whoami);
#endif	/* DEBUG */
	  break;
	case 'D':
	  ignore_non_functions = TRUE;
	  break;
	case 'E':
	  sym_id_add (optarg, EXCL_TIME);
	case 'e':
	  sym_id_add (optarg, EXCL_GRAPH);
	  break;
	case 'F':
	  sym_id_add (optarg, INCL_TIME);
	case 'f':
	  sym_id_add (optarg, INCL_GRAPH);
	  break;
	case 'g':
	  sym_id_add (optarg, EXCL_FLAT);
	  break;
	case 'G':
	  sym_id_add (optarg, INCL_FLAT);
	  break;
	case 'h':
	  usage (stdout, 0);
	case 'i':
	  output_style |= STYLE_GMON_INFO;
	  user_specified |= STYLE_GMON_INFO;
	  break;
	case 'I':
	  search_list_append (&src_search_list, optarg);
	  break;
	case 'J':
	  if (optarg)
	    {
	      sym_id_add (optarg, EXCL_ANNO);
	      output_style |= STYLE_ANNOTATED_SOURCE;
	    }
	  else
	    {
	      output_style &= ~STYLE_ANNOTATED_SOURCE;
	    }
	  user_specified |= STYLE_ANNOTATED_SOURCE;
	  break;
	case 'k':
	  sym_id_add (optarg, EXCL_ARCS);
	  break;
	case 'l':
	  line_granularity = TRUE;
	  break;
	case 'L':
	  print_path = TRUE;
	  break;
	case 'm':
	  bb_min_calls = (unsigned long) strtoul (optarg, (char **) NULL, 10);
	  break;
	case 'n':
	  sym_id_add (optarg, INCL_TIME);
	  break;
	case 'N':
	  sym_id_add (optarg, EXCL_TIME);
	  break;
	case 'O':
	  switch (optarg[0])
	    {
	    case 'a':
	      file_format = FF_AUTO;
	      break;
	    case 'm':
	      file_format = FF_MAGIC;
	      break;
	    case 'b':
	      file_format = FF_BSD;
	      break;
	    case '4':
	      file_format = FF_BSD44;
	      break;
	    case 'p':
	      file_format = FF_PROF;
	      break;
	    default:
	      fprintf (stderr, _("%s: unknown file format %s\n"),
		       optarg, whoami);
	      done (1);
	    }
	  break;
	case 'p':
	  if (optarg)
	    {
	      sym_id_add (optarg, INCL_FLAT);
	    }
	  output_style |= STYLE_FLAT_PROFILE;
	  user_specified |= STYLE_FLAT_PROFILE;
	  break;
	case 'P':
	  if (optarg)
	    {
	      sym_id_add (optarg, EXCL_FLAT);
	      output_style |= STYLE_FLAT_PROFILE;
	    }
	  else
	    {
	      output_style &= ~STYLE_FLAT_PROFILE;
	    }
	  user_specified |= STYLE_FLAT_PROFILE;
	  break;
	case 'q':
	  if (optarg)
	    {
	      if (strchr (optarg, '/'))
		{
		  sym_id_add (optarg, INCL_ARCS);
		}
	      else
		{
		  sym_id_add (optarg, INCL_GRAPH);
		}
	    }
	  output_style |= STYLE_CALL_GRAPH;
	  user_specified |= STYLE_CALL_GRAPH;
	  break;
	case 'r':
	  output_style |= STYLE_FUNCTION_ORDER;
	  user_specified |= STYLE_FUNCTION_ORDER;
	  break;
	case 'R':
	  output_style |= STYLE_FILE_ORDER;
	  user_specified |= STYLE_FILE_ORDER;
	  function_mapping_file = optarg;
	  break;
	case 'Q':
	  if (optarg)
	    {
	      if (strchr (optarg, '/'))
		{
		  sym_id_add (optarg, EXCL_ARCS);
		}
	      else
		{
		  sym_id_add (optarg, EXCL_GRAPH);
		}
	      output_style |= STYLE_CALL_GRAPH;
	    }
	  else
	    {
	      output_style &= ~STYLE_CALL_GRAPH;
	    }
	  user_specified |= STYLE_CALL_GRAPH;
	  break;
	case 's':
	  output_style |= STYLE_SUMMARY_FILE;
	  user_specified |= STYLE_SUMMARY_FILE;
	  break;
	case 'S':
	  external_symbol_table = optarg;
	  DBG (AOUTDEBUG, printf ("external-symbol-table: %s\n", optarg));
	  break;
	case 't':
	  bb_table_length = atoi (optarg);
	  if (bb_table_length < 0)
	    {
	      bb_table_length = 0;
	    }
	  break;
	case 'T':
	  bsd_style_output = TRUE;
	  break;
	case 'v':
	  /* This output is intended to follow the GNU standards document.  */
	  printf (_("GNU gprof %s\n"), BFD_VERSION_STRING);
	  printf (_("Based on BSD gprof, copyright 1983 Regents of the University of California.\n"));
	  printf (_("\
This program is free software.  This program has absolutely no warranty.\n"));
	  done (0);
	case 'w':
	  output_width = atoi (optarg);
	  if (output_width < 1)
	    {
	      output_width = 1;
	    }
	  break;
	case 'x':
	  bb_annotate_all_lines = TRUE;
	  break;
	case 'y':
	  create_annotation_files = TRUE;
	  break;
	case 'z':
	  ignore_zeros = FALSE;
	  break;
	case 'Z':
	  if (optarg)
	    {
	      sym_id_add (optarg, EXCL_EXEC);
	      output_style |= STYLE_EXEC_COUNTS;
	    }
	  else
	    {
	      output_style &= ~STYLE_EXEC_COUNTS;
	    }
	  user_specified |= STYLE_ANNOTATED_SOURCE;
	  break;
	case OPTION_DEMANGLE:
	  demangle = TRUE;
	  if (optarg != NULL)
	    {
	      enum demangling_styles style;

	      style = cplus_demangle_name_to_style (optarg);
	      if (style == unknown_demangling)
		{
		  fprintf (stderr,
			   _("%s: unknown demangling style `%s'\n"),
			   whoami, optarg);
		  xexit (1);
		}

	      cplus_demangle_set_style (style);
	   }
	  break;
	case OPTION_NO_DEMANGLE:
	  demangle = FALSE;
	  break;
	default:
	  usage (stderr, 1);
	}
    }

  /* Don't allow both ordering options, they modify the arc data in-place.  */
  if ((user_specified & STYLE_FUNCTION_ORDER)
      && (user_specified & STYLE_FILE_ORDER))
    {
      fprintf (stderr,_("\
%s: Only one of --function-ordering and --file-ordering may be specified.\n"),
	       whoami);
      done (1);
    }

  /* --sum implies --line, otherwise we'd lose basic block counts in
       gmon.sum */
  if (output_style & STYLE_SUMMARY_FILE)
    line_granularity = 1;

  /* append value of GPROF_PATH to source search list if set: */
  str = (char *) getenv ("GPROF_PATH");
  if (str)
    search_list_append (&src_search_list, str);

  if (optind < argc)
    a_out_name = argv[optind++];

  if (optind < argc)
    gmon_name = argv[optind++];

  /* Turn off default functions.  */
  for (sp = &default_excluded_list[0]; *sp; sp++)
    {
      sym_id_add (*sp, EXCL_TIME);
      sym_id_add (*sp, EXCL_GRAPH);
      sym_id_add (*sp, EXCL_FLAT);
    }

  /* Read symbol table from core file.  */
  core_init (a_out_name);

  /* If we should ignore direct function calls, we need to load to
     core's text-space.  */
  if (ignore_direct_calls)
    core_get_text_space (core_bfd);

  /* Create symbols from core image.  */
  if (external_symbol_table)
    core_create_syms_from (external_symbol_table);
  else if (line_granularity)
    core_create_line_syms ();
  else
    core_create_function_syms ();

  /* Translate sym specs into syms.  */
  sym_id_parse ();

  if (file_format == FF_PROF)
    {
      fprintf (stderr,
	       _("%s: sorry, file format `prof' is not yet supported\n"),
	       whoami);
      done (1);
    }
  else
    {
      /* Get information about gmon.out file(s).  */
      do
	{
	  gmon_out_read (gmon_name);
	  if (optind < argc)
	    gmon_name = argv[optind];
	}
      while (optind++ < argc);
    }

  /* If user did not specify output style, try to guess something
     reasonable.  */
  if (output_style == 0)
    {
      if (gmon_input & (INPUT_HISTOGRAM | INPUT_CALL_GRAPH))
	{
	  if (gmon_input & INPUT_HISTOGRAM)
	    output_style |= STYLE_FLAT_PROFILE;
	  if (gmon_input & INPUT_CALL_GRAPH)
	    output_style |= STYLE_CALL_GRAPH;
	}
      else
	output_style = STYLE_EXEC_COUNTS;

      output_style &= ~user_specified;
    }

  /* Dump a gmon.sum file if requested (before any other
     processing!)  */
  if (output_style & STYLE_SUMMARY_FILE)
    {
      gmon_out_write (GMONSUM);
    }

  if (gmon_input & INPUT_HISTOGRAM)
    {
      hist_assign_samples ();
    }

  if (gmon_input & INPUT_CALL_GRAPH)
    {
      cg = cg_assemble ();
    }

  /* Do some simple sanity checks.  */
  if ((output_style & STYLE_FLAT_PROFILE)
      && !(gmon_input & INPUT_HISTOGRAM))
    {
      fprintf (stderr, _("%s: gmon.out file is missing histogram\n"), whoami);
      done (1);
    }

  if ((output_style & STYLE_CALL_GRAPH) && !(gmon_input & INPUT_CALL_GRAPH))
    {
      fprintf (stderr,
	       _("%s: gmon.out file is missing call-graph data\n"), whoami);
      done (1);
    }

  /* Output whatever user whishes to see.  */
  if (cg && (output_style & STYLE_CALL_GRAPH) && bsd_style_output)
    {
      /* Print the dynamic profile.  */
      cg_print (cg);
    }

  if (output_style & STYLE_FLAT_PROFILE)
    {
      /* Print the flat profile.  */
      hist_print ();		
    }

  if (cg && (output_style & STYLE_CALL_GRAPH))
    {
      if (!bsd_style_output)
	{
	  /* Print the dynamic profile.  */
	  cg_print (cg);	
	}
      cg_print_index ();
    }

  if (output_style & STYLE_EXEC_COUNTS)
    print_exec_counts ();
  
  if (output_style & STYLE_ANNOTATED_SOURCE)
    print_annotated_source ();
  
  if (output_style & STYLE_FUNCTION_ORDER)
    cg_print_function_ordering ();
  
  if (output_style & STYLE_FILE_ORDER)
    cg_print_file_ordering ();

  return 0;
}

void
done (int status)
{
  exit (status);
}
@


1.33
log
@        * corefile.c (core_create_function_syms): Remove "<locore>" and
        "<hicore>" sentinels.
        * gprof.c: Likewise.
        * cg_print.c (cg_print_function_ordering): Likewise.
        * alpha.c (alpha_find_call): Add check for return value of sym_lookup.
        * mips.c (mips_find_call): Likewise.
        * sparc.c (sparc_find_call): Likewise.
        * tahoe.c (tahoe_find_call): Likewise.
        * vax.c (vax_find_call): Likewise.
@
text
@d50 4
a53 3
const char *whoami;
const char *function_mapping_file;
const char *a_out_name = A_OUTNAME;
d102 1
d160 1
a160 1
Usage: %s [-[abcDhilLsTvwxyz]] [-[ACeEfFJnNOpPqQZ][name]] [-I dirs]\n\
d171 1
a171 1
	[--demangle[=STYLE]] [--no-demangle] [@@FILE]\n\
d204 1
a204 1
	"aA::bBcC::d::De:E:f:F:hiI:J::k:lLm:n:N:O:p::P::q::Q::rR:st:Tvw:xyzZ::",
d403 4
d521 3
a523 1
  if (line_granularity)
@


1.32
log
@* basic_blocks.c: Always include "gprof.h" first.
* cg_arcs.c: Likewise.
* cg_dfn.c: Likewise.
* cg_print.c: Likewise.
* corefile.c: Likewise.
* gprof.c: Likewise.
* hist.c: Likewise.
* search_list.c: Likewise.
* sym_ids.c: Likewise.
* utils.c: Likewise.
@
text
@a86 1
  "<locore>", "<hicore>",
@


1.31
log
@	* corefile.c (core_create_function_syms, core_create_line_syms): Don't
	set discard_underscores.
	* gprof.c (discard_underscores): Delete.
	* gprof.h (discard_underscores): Delete.
	* sym_ids.c (match): Use bfd_get_symbol_leading_char to check for
	leading underscores.
	* utils.c (print_name_only): Call bfd_demangle rather than
	cplus_demangle.
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
@
text
@d30 1
a31 1
#include "gprof.h"
@


1.30
log
@bfd:
	* Makefile.am (bfdver.h): Use "." not " " between version number
	and date.
	* Makefile.in: Regenerate.
	* configure.in (PKGVERSION): Default to "(GNU Binutils) ".
	* configure: Regenerate.

binutils:
	* version.c (print_version): Update copyright date.

gas:
	* as.c (parse_args): Update copyright date.

gprof:
	* gprof.c: Include bfdver.h
	(main): Use BFD_VERSION_STRING for version number and package
	name.
	* Makefile.am (PKGVERSION): Remove.
	(INCLUDES): Update.
	Regenerate dependencies.
	* Makefile.in: Regenerate.
	* configure.in (PKGVERSION): Remove.
	* configure: Regenerate.

ld:
	* ldver.c (ldversion): Remove word "version" from output.  Update
	copyright date.
@
text
@a62 1
bfd_boolean discard_underscores = TRUE;
@


1.29
log
@top level:
2007-02-17  Mark Mitchell  <mark@@codesourcery.com>
            Nathan Sidwell  <nathan@@codesourcery.com>
            Vladimir Prus  <vladimir@@codesourcery.com
            Joseph Myers  <joseph@@codesourcery.com>

	* configure.ac (TOPLEVEL_CONFIGURE_ARGUMENTS): Fix quoting.
	* configure: Regenerate.

bfd:
2007-02-17  Mark Mitchell  <mark@@codesourcery.com>
            Nathan Sidwell  <nathan@@codesourcery.com>
            Vladimir Prus  <vladimir@@codesourcery.com
            Joseph Myers  <joseph@@codesourcery.com>

	* configure.in (--with-pkgversion): New option.
	* configure: Regenerate.
	* Makefile.am (bfdver.h): Substitute for @@bfd_version_package@@.
	* Makefile.in: Regenerate.
	* version.h (BFD_VERSION_STRING): Define using
	@@bfd_version_package@@.

bfd/doc:
2007-02-17  Mark Mitchell  <mark@@codesourcery.com>
            Nathan Sidwell  <nathan@@codesourcery.com>
            Vladimir Prus  <vladimir@@codesourcery.com
            Joseph Myers  <joseph@@codesourcery.com>

	* Makefile.in: Regenerate.

binutils:
2007-02-17  Mark Mitchell  <mark@@codesourcery.com>
            Nathan Sidwell  <nathan@@codesourcery.com>
            Vladimir Prus  <vladimir@@codesourcery.com
            Joseph Myers  <joseph@@codesourcery.com>

	* configure.in (--with-bugurl): New option.
	* configure: Regenerate.
	* Makefile.am (REPORT_BUGS_TO): Define.
	(INCLUDES): Define REPORT_BUGS_TO.
	Regenerate dependencies.
	* Makefile.in: Regenerate.
	* doc/Makefile.in: Regenerate.
	* bucomm.h: Remove include of bin-bugs.h.
	* addr2line.c (usage): Don't print empty REPORT_BUGS_TO.
	* ar.c (usage): Pass s to list_supported_targets.  Don't print
	empty REPORT_BUGS_TO.
	* coffdump.c (show_usage): Don't print empty REPORT_BUGS_TO.
	* cxxfilt.c (usage): Print bug url when giving help.
	* dlltool.c (usage): Likewise.
	* dllwrap.c (usage): Likewise.
	* nlmconv.c (show_usage): Don't print empty REPORT_BUGS_TO.
	* nm.c (usage): Likewise.
	* objcopy.c (copy_usage, strip_usage): Likewise.
	* objdump.c (usage): Likewise.
	* readelf.c ((usage): Likewise. Add STREAM argument.  Adjust
	callers.
	* size.c (usage): Don't print empty REPORT_BUGS_TO.
	* srconv.c (show_usage): Likewise.
	* strings.c (usage): Likewise.
	* sysdymp.c (show_usage): Likewise.
	* windres.c (usage): Likewise.

gas:
2007-02-17  Mark Mitchell  <mark@@codesourcery.com>
            Nathan Sidwell  <nathan@@codesourcery.com>
            Vladimir Prus  <vladimir@@codesourcery.com
            Joseph Myers  <joseph@@codesourcery.com>

	* configure.in (--with-bugurl): New option.
	* configure: Regenerate.
	* dep-in.sed: Remove bin-bugs.h.
	* Makefile.am (REPORT_BUGS_TO): Define.
	(INCLUDES): Define REPORT_BUGS_TO.
	(DEP_INCLUDES): Likewise.
	($(OBJS)): No longer depend on bin-bugs.h.
	* Makefile.in: Regenerate.
	* doc/Makefile.in: Regenerate.
	* as.c (show_usage): Don't print empty REPORT_BUGS_TO.
	* as.h: Remove include of bin-bugs.h.

gprof:
2007-02-17  Mark Mitchell  <mark@@codesourcery.com>
            Nathan Sidwell  <nathan@@codesourcery.com>
            Vladimir Prus  <vladimir@@codesourcery.com
            Joseph Myers  <joseph@@codesourcery.com>

	* configure.in (--with-pkgversion, --with-bugurl): New options.
	* configure: Regenerate.
	* Makefile.am (PKGVERSION, REPORT_BUGS_TO): Define.
	(INCLUDES): Define PKGVERSION and REPORT_BUGS_TO.
	Regenerate dependencies.
	* Makefile.in: Regenerate.
	* gprof.c (usage): Don't print empty REPORT_BUGS_TO.
	(main): Include PKGVERSION in version output.
	* gprof.h: Remove include of bin-bugs.h.

include:
2007-02-17  Mark Mitchell  <mark@@codesourcery.com>
            Nathan Sidwell  <nathan@@codesourcery.com>
            Vladimir Prus  <vladimir@@codesourcery.com
            Joseph Myers  <joseph@@codesourcery.com>

	* bin-bugs.h: Remove.

ld:
2007-02-17  Mark Mitchell  <mark@@codesourcery.com>
            Nathan Sidwell  <nathan@@codesourcery.com>
            Vladimir Prus  <vladimir@@codesourcery.com
            Joseph Myers  <joseph@@codesourcery.com>

	* configure.in (--with-bugurl): New option.
	* configure: Regenerate.
	* Makefile.am (REPORT_BUGS_TO): Define.
	(INCLUDES): Define REPORT_BUGS_TO.
	Regenerate dependencies.
	* Makefile.in: Regenerate.
	* ld.h: Remove include of bin-bugs.h.
	* lexsup.c (help): Don't print empty REPORT_BUGS_TO.
@
text
@d32 1
d415 1
a415 1
	  printf (_("GNU gprof %s\n"), PKGVERSION VERSION);
@


1.28
log
@	* gprof.c (main): Fix option string for -r and -R.
@
text
@d173 1
a173 1
  if (status == 0)
d414 1
a414 1
	  printf (_("GNU gprof %s\n"), VERSION);
@


1.27
log
@        * gprof.c (main): Fix option string for -C, -n and -N.
@
text
@d203 1
a203 1
	"aA::bBcC::d::De:E:f:F:hiI:J::k:lLm:n:N:O:p::P::q::Q::st:Tvw:xyzZ::",
@


1.26
log
@Avoid confusing error message for trivial profiled testcase.
* gprof.c (main): When setting default output_style, add separate
checks for INPUT_HISTOGRAM and INPUT_CALL_GRAPH.
@
text
@d203 1
a203 1
	"aA::bBcCd::De:E:f:F:hiI:J::k:lLm:n::N::O:p::P::q::Q::st:Tvw:xyzZ::",
@


1.25
log
@	* as.c (show_usage): Document "@@FILE".

	* gprof.c (usage): Document "@@FILE".

	* lexsup.c (help): Document "@@FILE".
@
text
@d548 6
a553 1
	output_style = STYLE_FLAT_PROFILE | STYLE_CALL_GRAPH;
@


1.25.2.1
log
@	bfd/
	* Makefile.am: (VERSUFFIX_s): New. Pass it to compiler
	via -D.
	* Makefile.in: Regenerated.
	* configure: Regenerated.
	* configure.in: Add --with-versuffix option.
	* version.h: Add BFD_VERSION_SUFFIX, use it
	in BFD_VERSION_STRING.

	binutils/
	* Makefile.am: (REPORT_BUGS_TO_s): New. Pass it to compiler
	via -D.
	* Makefile.in: Regenerated.
	* configure: Regenerated.
	* configure.in: Add --with-bugurl option.

	gas/
	* Makefile.am: (REPORT_BUGS_TO_s): New. Pass it to compiler
	via -D.
	* Makefile.in: Regenerated.
	* configure: Regenerated.
	* configure.in: Add --with-bugurl option.

	gprof/
	* Makefile.am: (VERSUFFIX_s, REPORT_BUGS_TO_s): New. Pass
	them to compiler via -D.
	* Makefile.in: Regenerated.
	* configure: Regenerated.
	* configure.in: Add --with-versuffix and --with-bugurl option.
	* gprof.c: Print version suffix.

	ld/
	* Makefile.am: (REPORT_BUGS_TO_s): New. Pass it to compiler
	via -D.
	* Makefile.in: Regenerated.
	* configure: Regenerated.
	* configure.in: Add --with-bugurl option.
@
text
@d414 1
a414 1
	  printf (_("GNU gprof %s\n"), VERSION VERSUFFIX);
@


1.25.2.2
log
@	bfd/
	* Makefile.am (VERSUFFIX_s): Remove.
	(bfdver.h): Replace bfd_version_suffix with bfd_version_package.
	* configure.in: Replace --with-versuffix with --with-pkgversion.
	* version.h: Remove BFD_VERSION_SUFFIX. Update BFD_VERSION_STRING.
	* Makefile.in: Rebuilt.
	* configure: Rebuilt.

	binutils/
	* Makefile.am (REPORT_BUGS_TO_s): Replace with ...
	(REPORT_BUGS_TO): ... this.
	(INCLUDES): Update.
	* Makefile.in: Rebuilt.

	gas/
	* Makefile.am (REPORT_BUGS_TO_s): Replace with ...
	(REPORT_BUGS_TO): ... this.
	(INCLUDES, DEP_INCLUDES): Update.
	* Makefile.in: Rebuilt.

	gprof/
	* Makefile.am (REPORT_BUGS_TO_s): Replace with ...
	(REPORT_BUGS_TO): ... this.
	(VERSUFFIX_s): Remove.
	(INCLUDES): Update.
	* configure.in: Replace --with-versuffix with --with-pkgversion.
	* gprof.c (main): Update version printing.
	* Makefile.in: Rebuilt.
	* configure: Rebuilt.

	ld/
	* Makefile.am (REPORT_BUGS_TO_s): Replace with ...
	(REPORT_BUGS_TO): ... this.
	(INCLUDES): Update.
	* Makefile.in: Rebuilt.
@
text
@d414 1
a414 1
	  printf (_("GNU gprof %s\n"), PKGVERSION VERSION);
@


1.25.2.3
log
@	binutils/
	* Makefile.am: Rebuild dependencies.
	(REPORT_BUGS_TO): Always defined.
	(INCLUDES): Adjust.
	* Makefile.in: Rebuilt.
	* configure.in (REPORT_BUGS_TO): Provide default value.
	* configure: Rebuilt.
	* bucomm.h: Remove bin-bugs.h.
	* addr2line.c (usage): Don't print empty REPORT_BUGS_TO.
	* coffdump.c (show_usage): Likewise.
	* cxxfilt.c (usage): Likewise.
	* nlmconv.c (show_usage): Likewise.
	* nm.c (usage): Likewise.
	* objcopy.c (copy_usage, strip_usage): Likewise.
	* objdump.c (usage): Likewise.
	* size.c (usage): Likewise.
	* srconv.c (show_usage): Likewise.
	* string.c (usage): Likewise.
	* sysdymp.c (show_usage): Likewise.
	* windres.c (usage): Likewise.
	* readelf (usage): Likewise. Add STREAM argument.  Adjust callers.

	gas/
	* Makefile.am: Rebuild dependencies.
	(REPORT_BUGS_TO): Always defined.
	(INCLUDES): Adjust.
	* Makefile.in: Rebuilt.
	* configure.in (REPORT_BUGS_TO): Provide default value.
	* configure: Rebuilt.
	* as.c (show_usage): Don't print empty REPORT_BUGS_TO.
	* as.h: Remove bin-bugs.h.

	ld/
	* Makefile.am: Rebuild dependencies.
	(REPORT_BUGS_TO): Always defined.
	(INCLUDES): Adjust.
	* Makefile.in: Rebuilt.
	* configure.in (REPORT_BUGS_TO): Provide default value.
	* configure: Rebuilt.
	* ld.h: Remove bin-bugs.h
	* lexsup.c (help):  Don't print empty REPORT_BUGS_TO.

	gprof/
	* Makefile.am: Rebuild dependencies.
	(REPORT_BUGS_TO): Always defined.
	(PKGVERSION): Define.
	(INCLUDES): Adjust.
	* Makefile.in: Rebuilt.
	* configure.in (REPORT_BUGS_TO): Provide default value.
	* configure: Rebuilt.
	* gprof.c (usage): Don't print empty REPORT_BUGS_TO.
	* gprof.h: Remove bin-bugs.h

	include/
	* bin-bugs.h: Remove.
@
text
@d173 1
a173 1
  if (REPORT_BUGS_TO[0] && status == 0)
@


1.25.2.4
log
@	Backport:
	2006-05-02  James E Wilson  <wilson@@specifix.com>
	* gprof.c (main): When setting default output_style, add separate
	checks for INPUT_HISTOGRAM and INPUT_CALL_GRAPH.
@
text
@d548 1
a548 6
	{
	  if (gmon_input & INPUT_HISTOGRAM)
	    output_style |= STYLE_FLAT_PROFILE;
	  if (gmon_input & INPUT_CALL_GRAPH)
	    output_style |= STYLE_CALL_GRAPH;
	}
@


1.24
log
@	* addr2line.c (main): Likewise.
	* ar.c (main): Likewise.
	* coffdump.c (main): Likewise.
	* cxxfilt.c (main): Likewise.
	* dlltool.c (main): Likewise.
	* dllwrap.c (main): Likewise.
	* nlmconv.c (main): Likewise.
	* nm.c (main): Likewise.
	* objcopy.c (main): Likewise.
	* objdump.c (main): Likewise.
	* readelf.c (main): Likewise.
	* size.c (main): Likeiwse.
	* srcconv.c (main): Likewise.
	* strings.c (main): Likewise.
	* sysdump.c (main): Likewise.
	* sysinfo.c (main): Likewise.
	* windres.c (main): Likewise.

	* ldmain.c (main): Use expandargv.

	* gprof.c (main): Use expandargv.

	* as.c (main): Use expandargv.
@
text
@d170 1
a170 1
	[--demangle[=STYLE]] [--no-demangle]\n\
@


1.23
log
@asintl.h/bucomm.h/ld.h: Prevent the inclusion of <libintl.h> from the Solaris
  version of <locale.h> when ENABLE_NLS is not defined.
gprof.c (main):Only invoke bindtextdomain() and textdomain() if ENABLE_NLS is
  defined.
@
text
@d200 2
@


1.22
log
@	* corefile.c (core_num_syms): Make static.
	(core_syms): Likewise.
	(min_insn_size): Likewise.
	* gprof.c (abfd): Remove unused variable.
	* hist.c (hist_dimension): Make static.
	(hist_dimension_abbrev): Likewise.
	* sym_ids.c (id_list): Likewise.
	(table_name): Likewise.
@
text
@d192 1
d195 1
@


1.21
log
@	* gprof.c (main): For line-by-line profiling, there is no need to
	specially exclude the default function set from the flat profile.
@
text
@a79 2
bfd *abfd;

@


1.20
log
@	* gprof.c (main): Clean up some more.
@
text
@a504 8
  /*
   * For line-by-line profiling, also want to keep those
   * functions off the flat profile:
   */
  if (line_granularity)
    for (sp = &default_excluded_list[0]; *sp; sp++)
      sym_id_add (*sp, EXCL_FLAT);

@


1.19
log
@	* alpha.c, basic_blocks.c, basic_blocks.h, bb_exit_func.c,
	call_graph.c, call_graph.h, cg_arcs.c, cg_arcs.h, cg_dfn.c,
	cg_dfn.h, cg_print.c, cg_print.h, corefile.c, corefile.h,
	gmon_io.c, gmon_io.h, gprof.c, gprof.h, hertz.h, hist.c, hist.h,
	i386.c, mips.c, search_list.c, search_list.h, source.c, source.h,
	sparc.c, sym_ids.c, sym_ids.h, symtab.c, symtab.h, tahoe.c,
	utils.c, utils.h, vax.c, gen-c-prog.awk: Convert K&R C to ANSI C.
@
text
@a47 1
int main (int, char **);
d484 1
a484 3
    {
      line_granularity = 1;
    }
d489 1
a489 3
    {
      search_list_append (&src_search_list, str);
    }
d492 2
a493 3
    {
      a_out_name = argv[optind++];
    }
d495 1
a495 3
    {
      gmon_name = argv[optind++];
    }
d497 1
a497 3
  /*
   * Turn off default functions:
   */
d544 1
a544 3
	    {
	      gmon_name = argv[optind];
	    }
d549 2
a550 4
  /*
   * If user did not specify output style, try to guess something
   * reasonable:
   */
d593 1
a593 2
  /* output whatever user whishes to see: */

d596 2
a597 1
      cg_print (cg);		/* print the dynamic profile */
d602 2
a603 1
      hist_print ();		/* print the flat profile */
d610 2
a611 1
	  cg_print (cg);	/* print the dynamic profile */
d617 2
a618 4
    {
      print_exec_counts ();
    }

d620 2
a621 3
    {
      print_annotated_source ();
    }
d623 2
a624 3
    {
      cg_print_function_ordering ();
    }
d626 2
a627 3
    {
      cg_print_file_ordering ();
    }
@


1.18
log
@	* corefile.c (core_init): Use a separate local variable,
	core_sym_bytes, to make the units from bfd_get_symtab_upper_bound
	more obvious.
	(core_create_function_syms): Discard cbfd argument.  Eliminate
	`offset' variable and calculate VMA directly. Update all users.
	* corefile.h (core_create_function_syms): Update prototype.
	(core_create_line_syms): Likewise.
	* gprof.c (main): Remove #ifdef PROF_SUPPORT_IMPLEMENTED code.
	Tidy.
@
text
@d47 2
a48 2
static void usage PARAMS ((FILE *, int)) ATTRIBUTE_NORETURN;
int main PARAMS ((int, char **));
d159 1
a159 3
usage (stream, status)
     FILE *stream;
     int status;
d183 1
a183 3
main (argc, argv)
     int argc;
     char **argv;
d649 1
a649 2
done (status)
     int status;
@


1.17
log
@s/boolean/bfd_boolean/ s/true/TRUE/ s/false/FALSE/.  Simplify
comparisons of bfd_boolean vars with TRUE/FALSE.  Formatting.
@
text
@d486 2
a487 1
  /* --sum implies --line, otherwise we'd lose b-b counts in gmon.sum */
d524 2
a525 6
    {
      for (sp = &default_excluded_list[0]; *sp; sp++)
	{
	  sym_id_add (*sp, EXCL_FLAT);
	}
    }
d527 1
a527 3
  /*
   * Read symbol table from core file:
   */
d530 2
a531 4
  /*
   * If we should ignore direct function calls, we need to load
   * to core's text-space:
   */
d533 1
a533 3
    {
      core_get_text_space (core_bfd);
    }
d535 1
a535 3
  /*
   * Create symbols from core image:
   */
d537 1
a537 3
    {
      core_create_line_syms (core_bfd);
    }
d539 1
a539 3
    {
      core_create_function_syms (core_bfd);
    }
d541 1
a541 3
  /*
   * Translate sym specs into syms:
   */
a545 14
#ifdef PROF_SUPPORT_IMPLEMENTED
      /*
       * Get information about mon.out file(s):
       */
      do
	{
	  mon_out_read (gmon_name);
	  if (optind < argc)
	    {
	      gmon_name = argv[optind];
	    }
	}
      while (optind++ < argc);
#else
a549 1
#endif
d553 1
a553 3
      /*
       * Get information about gmon.out file(s):
       */
d572 1
a572 3
	{
	  output_style = STYLE_FLAT_PROFILE | STYLE_CALL_GRAPH;
	}
d574 2
a575 3
	{
	  output_style = STYLE_EXEC_COUNTS;
	}
d579 2
a580 3
  /*
   * Dump a gmon.sum file if requested (before any other processing!):
   */
d596 1
a596 2
  /* do some simple sanity checks: */

@


1.16
log
@Turn off default excluded functions in FLAT profile.
@
text
@d61 10
a70 10
boolean bsd_style_output = false;
boolean demangle = true;
boolean discard_underscores = true;
boolean ignore_direct_calls = false;
boolean ignore_static_funcs = false;
boolean ignore_zeros = true;
boolean line_granularity = false;
boolean print_descriptions = true;
boolean print_path = false;
boolean ignore_non_functions = false;
d73 1
a73 1
boolean first_output = true;
d213 1
a213 1
	  ignore_static_funcs = true;
d224 1
a224 1
	  print_descriptions = false;
d231 1
a231 1
	  ignore_direct_calls = true;
d257 1
a257 1
	  ignore_non_functions = true;
d300 1
a300 1
	  line_granularity = true;
d303 1
a303 1
	  print_path = true;
d413 1
a413 1
	  bsd_style_output = true;
d430 1
a430 1
	  bb_annotate_all_lines = true;
d433 1
a433 1
	  create_annotation_files = true;
d436 1
a436 1
	  ignore_zeros = false;
d451 1
a451 1
	  demangle = true;
d469 1
a469 1
	  demangle = false;
@


1.15
log
@Update copyright notice
@
text
@a514 1
#ifdef __alpha__
a515 1
#endif
@


1.14
log
@update translations.
@
text
@d1 28
a28 26
/* Copyright (c) 1983, 1998, 2001, 2002 Regents of the University of California.
   All rights reserved.

   Redistribution and use in source and binary forms, with or without
   modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright notice,
      this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.
    * Neither the name of the University of California, Berkeley nor the
      names of its contributors may be used to endorse or promote products
      derived from this software without specific prior written permission.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
  THE POSSIBILITY OF SUCH DAMAGE.  */
@


1.13
log
@Update copyright date per last commit.
@
text
@d1 27
a27 18
/*
 * Copyright (c) 1983, 1998, 2001, 2002 Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms are permitted
 * provided that: (1) source distributions retain this entire copyright
 * notice and comment, and (2) distributions including binaries display
 * the following acknowledgement:  ``This product includes software
 * developed by the University of California, Berkeley and its contributors''
 * in the documentation or other materials provided with the distribution
 * and in all advertising materials mentioning features or use of this
 * software. Neither the name of the University nor the names of its
 * contributors may be used to endorse or promote products derived
 * from this software without specific prior written permission.
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */
@


1.13.2.1
log
@        Merge from mainline:
        2002-07-30  Nick Clifton  <nickc@@redhat.com>
        * po/tr.po: Updated Turkish translation.

        2002-07-30  Nick Clifton  <nickc@@redhat.com>
        * alpha.c, cg_arcs.c, cg_dfn.c, gmon.h, gprof.c, gprof.h, hertz.c,
        i386.c, mips.c, sparc.c, tahoe.c, utils.c, vax.c: Update Copyright
        notice so that it applies even if the sources are modified.
@
text
@d2 2
a3 2
 * Copyright (c) 1983, 1993, 1998, 2001, 2002
 *      The Regents of the University of California.  All rights reserved.
d5 13
a17 23
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
a18 1

@


1.13.2.2
log
@Turn off default excluded functions in FLAT profile.
@
text
@d515 1
d517 1
@


1.12
log
@2002-02-10  Daniel Jacobowitz  <drow@@mvista.com>

	* gprof.c: Include "getopt.h" after other includes, so that
	the proper macros are defined.
	* gen-c-prog.awk: Emit a prototype for the generated function.
@
text
@d2 1
a2 1
 * Copyright (c) 1983, 1998, 2001 Regents of the University of California.
@


1.11
log
@	* alpha.c (alpha_find_call): Warning fixes.
	* mips.c (mips_find_call): Likewise.
	* sparc.c (sparc_find_call): Likewise.
	* basic_blocks.c: Warning fixes.  Eliminate DEFUN.
	* call_graph.c: Likewise.
	* cg_arcs.c: Likewise.
	* cg_dfn.cp: Likewise.
	* gprof.c: Likewise.
	* gprof.h: Likewise.
	* hist.c: Likewise.
	* search_list.c: Likewise.
	* source.c: Likewise.
	* source.h: Likewise.
	* sym_ids.c: Likewise.
	* symtab.c: Likewise.
	* symtab.h: Likewise.
	* utils.c: Likewise.
	* cg_print.c: Likewise.
	(struct function_map, symbol_map, symbol_map_count): Move
	declaration to..
	* corefile: ..here.
	* corefile.c: Warning fixes.  Eliminate DEFUN.
	(struct function_map): Remove declaration.
	* gmon_io.c: Warning fixes.  Eliminate DEFUN.
	(gmon_io_read_64): Make static.
	(gmon_io_write_64): Likewise.
	(gmon_read_raw_arc): Likewise.
	(gmon_write_raw_arc): Likewise.
	(gmon_io_write_8): Don't pass char, pass int param.
	* gmon_io.h (gmon_io_write_8): Likewise.

and a few copyright dates that should have been done previously.
@
text
@a18 1
#include "getopt.h"
d34 1
@


1.11.2.1
log
@2002-02-10  Daniel Jacobowitz  <drow@@mvista.com>

	* gprof.c: Include "getopt.h" after other includes, so that
	the proper macros are defined.
	* gen-c-prog.awk: Emit a prototype for the generated function.
@
text
@d19 1
a34 1
#include "getopt.h"
@


1.11.2.2
log
@Update copyright date per last commit.
@
text
@d2 1
a2 1
 * Copyright (c) 1983, 1998, 2001, 2002 Regents of the University of California.
@


1.10
log
@	* basic_blocks.c: Replace bool with boolean, TRUE with true and
	FALSE with false throughout.
	* basic_blocks.h: Likewise.
	* cg_arcs.c: Likewise.
	* cg_dfn.c: Likewise.
	* cg_print.c: Likewise.
	* corefile.c: Likewise.
	* gmon_io.c: Likewise.
	* gprof.c: Likewise.
	* hist.c: Likewise.
	* mips.c: Likewise.
	* source.c: Likewise.
	* source.h: Likewise.
	* sym_ids.c: Likewise.
	* sym_ids.h: Likewise.
	* symtab.h: Likewise.
	* tahoe.c: Likewise.
	* vax.c: Likewise.
	* gprof.h: Likewise.
	(TRUE): Don't define.
	(FALSE): Don't define.
@
text
@d36 3
d148 3
a150 1
DEFUN (usage, (stream, status), FILE * stream AND int status)
d174 3
a176 1
DEFUN (main, (argc, argv), int argc AND char **argv)
@


1.9
log
@	* alpha.c (alpha_Instruction): Don't use.
	(alpha_find_call): Avoid use of bitfields and casts between
	pointers and integers of different sizes.  Avoid endian problems
	when cross-compiling.
	* vax.c (vax_find_call): Likewise.
	(struct modebyte): Don't use.
	(vax_operandmode): Pass in an unsigned char *.
	(vax_operandlength): Likewise.
	(vax_reladdr): Rename to vax_offset and return relative offset
	rather than address.
	* i386.c (i386_find_call): Avoid casts between pointers and
	integers of different sizes.
	* sparc.c (sparc_find_call): Likewise.  Avoid endian problems.
	* tahoe.c (tahoe_find_call): Likewise.
	(tahoe_reladdr): Rename to tahoe_offset and return relative offset
	rather than address.

	* basic_blocks.h: Don't include headers here.
	* call_graph.h: Likewise.
	* cg_arcs.h: Likewise.
	* cg_print.h: Likewise.
	* corefile.h: Likewise.
	* gmon_io.h: Likewise.
	* gmon_out.h: Likewise.
	* hertz.h: Likewise.
	* hist.h: Likewise.
	* source.h: Likewise.
	* sym_ids.h: Likewise.
	* symtab.h: Likewise.
	* gprof.h: Don't include ansidecl.h, do include bfd.h.
	(bool): Don't typedef.
	* alpha.c: Adjust #include's for above header changes.
	* basic_blocks.c: Likewise.
	* call_graph.c: Likewise.
	* cg_arcs.c: Likewise.
	* cg_dfn.c: Likewise.
	* cg_print.c: Likewise.
	* corefile.c: Likewise.
	* gmon_io.c: Likewise.
	* gprof.c: Likewise.
	* hertz.c: Likewise.
	* hist.c: Likewise.
	* i386.c: Likewise.
	* mips.c: Likewise.
	* sparc.c: Likewise.
	* sym_ids.c: Likewise.
	* symtab.c: Likewise.
	* tahoe.c: Likewise.
	* utils.c: Likewise.
	* vax.c: Likewise.

	* po/POTFILES.in: Regenerate.
@
text
@d47 10
a56 10
bool bsd_style_output = FALSE;
bool demangle = TRUE;
bool discard_underscores = TRUE;
bool ignore_direct_calls = FALSE;
bool ignore_static_funcs = FALSE;
bool ignore_zeros = TRUE;
bool line_granularity = FALSE;
bool print_descriptions = TRUE;
bool print_path = FALSE;
bool ignore_non_functions = FALSE;
d59 1
a59 1
bool first_output = TRUE;
d195 1
a195 1
	  ignore_static_funcs = TRUE;
d206 1
a206 1
	  print_descriptions = FALSE;
d213 1
a213 1
	  ignore_direct_calls = TRUE;
d239 1
a239 1
	  ignore_non_functions = TRUE;
d282 1
a282 1
	  line_granularity = TRUE;
d285 1
a285 1
	  print_path = TRUE;
d395 1
a395 1
	  bsd_style_output = TRUE;
d412 1
a412 1
	  bb_annotate_all_lines = TRUE;
d415 1
a415 1
	  create_annotation_files = TRUE;
d418 1
a418 1
	  ignore_zeros = FALSE;
d433 1
a433 1
	  demangle = TRUE;
d451 1
a451 1
	  demangle = FALSE;
@


1.8
log
@Locale changes from Bruno Haible  <haible@@clisp.cons.org>.
@
text
@d22 3
a32 1
#include "source.h"
@


1.7
log
@David Mosberger's fixes for cross compiling gprof.
@
text
@d176 3
@


1.6
log
@Add optional style argument to --demangle switch.
@
text
@d2 1
a2 1
 * Copyright (c) 1983, 1998 Regents of the University of California.
d432 1
a432 1
	      
d434 1
a434 1
	      if (style == unknown_demangling) 
d441 1
a441 1
	      
d443 1
a443 1
           }
@


1.6.2.1
log
@Update copyright notices.
@
text
@d2 1
a2 1
 * Copyright (c) 1983, 1998, 2001 Regents of the University of California.
@


1.6.2.2
log
@Merge from mainline.
@
text
@d432 1
a432 1

d434 1
a434 1
	      if (style == unknown_demangling)
d441 1
a441 1

d443 1
a443 1
	   }
@


1.5
log
@When calling getopt_long indicate that the 'd' switch takes an optional
argument, whereas the 'D' switch takes no argument at all.
@
text
@d32 1
d108 1
a108 1
  {"demangle", no_argument, 0, OPTION_DEMANGLE},
d157 1
a157 1
	[--demangle] [--no-demangle]\n\
d429 15
@


1.4
log
@* gprof.c (copyright): Do not use N_ in array initializer.
@
text
@d182 1
a182 1
	"aA::bBcCdD::e:E:f:F:hiI:J::k:lLm:n::N::O:p::P::q::Q::st:Tvw:xyzZ::",
@


1.3
log
@Move translated part of bug report string back into .c files so
xgettext can find it.  Regnerate .pot files.
@
text
@d59 2
a60 2
 N_("@@(#) Copyright (c) 1983 Regents of the University of California.\n\
 All rights reserved.\n");
@


1.2
log
@Move bug report string to one place.
@
text
@d160 1
a160 1
    fprintf (stream, REPORT_BUGS_TO);
@


1.1
log
@Initial revision
@
text
@d160 1
a160 1
    fprintf (stream, _("Report bugs to bug-gnu-utils@@gnu.org\n"));
@


1.1.1.1
log
@19990502 sourceware import
@
text
@@


1.1.1.1.2.1
log
@This is a grab-bag of my stuff from the head branch.
Should have done it separately, I know.
- move bug report address to include file
- objcopy --redefine-sym
- update makefile dependencies (but use automake-000227)
- H.J. Lu's fix to readelf.c
@
text
@d160 1
a160 1
    fprintf (stream, _("Report bugs to %s\n"), REPORT_BUGS_TO);
@


1.1.1.1.2.2
log
@* gprof.c (copyright): Do not use N_ in array initializer.
@
text
@d59 2
a60 2
 "@@(#) Copyright (c) 1983 Regents of the University of California.\n\
 All rights reserved.\n";
@


