head	1.2;
access;
symbols
	msnyder-tracepoint-checkpoint-branch:1.1.0.50
	msnyder-tracepoint-checkpoint-branchpoint:1.1
	ezannoni_pie-20040323-branch:1.1.0.48
	ezannoni_pie-20040323-branchpoint:1.1
	cagney_tramp-20040321-mergepoint:1.1
	gdb_6_1-branch:1.1.0.46
	gdb_6_1-2004-03-01-gmt-branchpoint:1.1
	drow-cplus-merge-20040208:1.1
	carlton_dictionary-20040126-merge:1.1
	drow-cplus-merge-20040113:1.1
	drow-cplus-merge-20031224:1.1
	drow-cplus-merge-20031220:1.1
	carlton_dictionary-20031215-merge:1.1
	drow-cplus-merge-20031214:1.1
	carlton-dictionary-20031111-merge:1.1
	carlton_dictionary-20030917-merge:1.1
	ezannoni_pie-20030916-branchpoint:1.1
	ezannoni_pie-20030916-branch:1.1.0.44
	cagney_x86i386-20030821-branch:1.1.0.42
	cagney_x86i386-20030821-branchpoint:1.1
	carlton_dictionary-20030805-merge:1.1
	carlton_dictionary-20030627-merge:1.1
	gdb_6_0-branch:1.1.0.40
	gdb_6_0-2003-06-23-branchpoint:1.1
	cagney_convert-20030606-branch:1.1.0.38
	cagney_convert-20030606-branchpoint:1.1
	cagney_writestrings-20030508-branch:1.1.0.36
	cagney_writestrings-20030508-branchpoint:1.1
	carlton_dictionary-20030523-merge:1.1
	cagney_fileio-20030521-branch:1.1.0.34
	cagney_fileio-20030521-branchpoint:1.1
	carlton_dictionary-20030430-merge:1.1
	carlton_dictionary-20030416-merge:1.1
	cagney_frameaddr-20030409-mergepoint:1.1
	cagney_frameaddr-20030403-branchpoint:1.1
	cagney_frameaddr-20030403-branch:1.1.0.32
	cagney_framebase-20030330-mergepoint:1.1
	cagney_framebase-20030326-branch:1.1.0.30
	cagney_framebase-20030326-branchpoint:1.1
	cagney_lazyid-20030317-branch:1.1.0.28
	cagney_lazyid-20030317-branchpoint:1.1
	offbyone-20030313-branch:1.1.0.26
	offbyone-20030313-branchpoint:1.1
	carlton_dictionary-20030305-merge:1.1
	cagney_offbyone-20030303-branch:1.1.0.24
	cagney_offbyone-20030303-branchpoint:1.1
	carlton_dictionary-20030207-merge:1.1
	interps-20030202-branch:1.1.0.22
	interps-20030202-branchpoint:1.1
	cagney-unwind-20030108-branch:1.1.0.20
	cagney-unwind-20030108-branchpoint:1.1
	carlton_dictionary-20021223-merge:1.1
	carlton_dictionary-20021115-merge:1.1
	kseitz_interps-20021105-merge:1.1
	kseitz_interps-20021103-merge:1.1
	drow-cplus-merge-20021020:1.1
	drow-cplus-merge-20021025:1.1
	carlton_dictionary-20021025-merge:1.1
	carlton_dictionary-20021011-merge:1.1
	drow-cplus-branch:1.1.0.18
	drow-cplus-branchpoint:1.1
	kseitz_interps-20020930-merge:1.1
	carlton_dictionary-20020927-merge:1.1
	carlton_dictionary-branch:1.1.0.16
	carlton_dictionary-20020920-branchpoint:1.1
	sid-20020905-branchpoint:1.1
	sid-20020905-branch:1.1.0.14
	gdb_5_3-branch:1.1.0.12
	gdb_5_3-2002-09-04-branchpoint:1.1
	kseitz_interps-20020829-merge:1.1
	cagney_sysregs-20020825-branch:1.1.0.10
	cagney_sysregs-20020825-branchpoint:1.1
	readline_4_3-import-branch:1.1.0.8
	readline_4_3-import-branchpoint:1.1
	kseitz_interps-20020528-branch:1.1.0.6
	kseitz_interps-20020528-branchpoint:1.1
	cagney_regbuf-20020515-branch:1.1.0.4
	cagney_regbuf-20020515-branchpoint:1.1
	gdb_5_2-branch:1.1.0.2
	gdb_5_2-2002-03-03-branchpoint:1.1
	cygnus_cvs_20020108_pre:1.1;
locks; strict;
comment	@ * @;


1.2
date	2005.06.28.05.02.30;	author bje;	state dead;
branches;
next	1.1;

1.1
date	2001.09.08.06.26.30;	author irox;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove this old version of Expect.
@
text
@/*
 * Definitions etc. for regexp(3) routines.
 *
 * Caveat:  this is V8 regexp(3) [actually, a reimplementation thereof],
 * not the System V one.
 *
 * RCS: @@(#) $Id: tcl_regexp.h,v 1.1 2001/09/08 06:26:30 irox Exp $
 */

#ifndef _TCL_REGEXP
#define _TCL_REGEXP 1

/*
 * NSUBEXP must be at least 10, and no greater than 117 or the parser
 * will not work properly.
 */

#define NSUBEXP  20

typedef struct Expect_regexp {
	char *startp[NSUBEXP];
	char *endp[NSUBEXP];
	char regstart;		/* Internal use only. */
	char reganch;		/* Internal use only. */
	char *regmust;		/* Internal use only. */
	int regmlen;		/* Internal use only. */
	char program[1];	/* Unwarranted chumminess with compiler. */
} Expect_regexp;

EXTERN Expect_regexp *Expect_TclRegComp _ANSI_ARGS_((char *exp));
EXTERN int Expect_TclRegExec _ANSI_ARGS_((Expect_regexp *prog, char *string, char *start));
EXTERN void Expect_TclRegSub _ANSI_ARGS_((Expect_regexp *prog, char *source, char *dest));
EXTERN void Expect_TclRegError _ANSI_ARGS_((char *msg));
EXTERN char *Expect_TclGetRegError _ANSI_ARGS_((void));

#endif /* TCL_REGEXP */

@


1.1
log
@	* tclParse-compat.c: New file.
	* tcl_regexp.c:
	* tcl_regexp.h: New file.  Contains Tcl8.0's regexp.
	* Makefile.in: Added new files to be compiled and linked.
	* exp_clib.c (exp_expectl, exp_fexpectl):
	* exp_inter.c (in_keymap, Exp_InteractCmd ):
	* exp_regexp.c (regtry, regdump, regprop):
	* expect.c (parse_expect_args, eval_case_string,
	  exp_background_filehandler, Exp_ExpectCmd):
	* expect.h:
	* expect_comm.h:
	* Dbg.c (breakpoint_test, cmdBreak): Use newly built in
	  regexp, not external Tcl regexp.
	* exp_tty.c (exec_stty):
	* exp_command.c (Exp_CloseCmd, Tcl_CloseCmd): Handle Tcl API
	  changes in Tcl8.3.
@
text
@d7 1
a7 1
 * RCS: @@(#) $Id: tclRegexp.h,v 1.7 1999/01/26 03:53:17 jingham Exp $
@

