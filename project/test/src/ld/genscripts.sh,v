head	1.33;
access;
symbols
	binutils-2_24-branch:1.32.0.8
	binutils-2_24-branchpoint:1.32
	binutils-2_21_1:1.31
	binutils-2_23_2:1.32
	binutils-2_23_1:1.32
	binutils-2_23:1.32
	binutils-2_23-branch:1.32.0.6
	binutils-2_23-branchpoint:1.32
	binutils-2_22_branch:1.32.0.4
	binutils-2_22:1.32
	binutils-2_22-branch:1.32.0.2
	binutils-2_22-branchpoint:1.32
	binutils-2_21:1.31
	binutils-2_21-branch:1.31.0.4
	binutils-2_21-branchpoint:1.31
	binutils-2_20_1:1.31
	binutils-2_20:1.31
	binutils-arc-20081103-branch:1.29.0.6
	binutils-arc-20081103-branchpoint:1.29
	binutils-2_20-branch:1.31.0.2
	binutils-2_20-branchpoint:1.31
	dje-cgen-play1-branch:1.30.0.2
	dje-cgen-play1-branchpoint:1.30
	arc-20081103-branch:1.29.0.4
	arc-20081103-branchpoint:1.29
	binutils-2_19_1:1.29
	binutils-2_19:1.29
	binutils-2_19-branch:1.29.0.2
	binutils-2_19-branchpoint:1.29
	binutils-2_18:1.24.2.1
	binutils-2_18-branch:1.24.0.2
	binutils-2_18-branchpoint:1.24
	binutils-csl-coldfire-4_1-32:1.20.8.1
	binutils-csl-sourcerygxx-4_1-32:1.20.8.1
	binutils-csl-innovasic-fido-3_4_4-33:1.20.8.1
	binutils-csl-sourcerygxx-3_4_4-32:1.20
	binutils-csl-coldfire-4_1-30:1.20.8.1
	binutils-csl-sourcerygxx-4_1-30:1.20.8.1
	binutils-csl-coldfire-4_1-28:1.20.8.1
	binutils-csl-sourcerygxx-4_1-29:1.20.8.1
	binutils-csl-sourcerygxx-4_1-28:1.20.8.1
	binutils-csl-arm-2006q3-27:1.20.8.1
	binutils-csl-sourcerygxx-4_1-27:1.20.8.1
	binutils-csl-arm-2006q3-26:1.20.8.1
	binutils-csl-sourcerygxx-4_1-26:1.20.8.1
	binutils-csl-sourcerygxx-4_1-25:1.20.8.1
	binutils-csl-sourcerygxx-4_1-24:1.20.8.1
	binutils-csl-sourcerygxx-4_1-23:1.20.8.1
	binutils-csl-sourcerygxx-4_1-21:1.20.8.1
	binutils-csl-arm-2006q3-21:1.20.8.1
	binutils-csl-sourcerygxx-4_1-22:1.20.8.1
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.20.8.1
	binutils-csl-sourcerygxx-4_1-20:1.20.8.1
	binutils-csl-arm-2006q3-19:1.20.8.1
	binutils-csl-sourcerygxx-4_1-19:1.20.8.1
	binutils-csl-sourcerygxx-4_1-18:1.20.8.1
	binutils-csl-renesas-4_1-9:1.20.8.1
	binutils-csl-sourcerygxx-3_4_4-25:1.20
	binutils-csl-renesas-4_1-8:1.20
	binutils-csl-renesas-4_1-7:1.20
	binutils-csl-renesas-4_1-6:1.20
	binutils-csl-sourcerygxx-4_1-17:1.20
	binutils-csl-sourcerygxx-4_1-14:1.20
	binutils-csl-sourcerygxx-4_1-15:1.20
	binutils-csl-sourcerygxx-4_1-13:1.20
	binutils-2_17:1.21
	binutils-csl-sourcerygxx-4_1-12:1.20
	binutils-csl-sourcerygxx-3_4_4-21:1.20
	binutils-csl-wrs-linux-3_4_4-24:1.20
	binutils-csl-wrs-linux-3_4_4-23:1.20
	binutils-csl-sourcerygxx-4_1-9:1.20
	binutils-csl-sourcerygxx-4_1-8:1.20
	binutils-csl-sourcerygxx-4_1-7:1.20
	binutils-csl-arm-2006q1-6:1.20
	binutils-csl-sourcerygxx-4_1-6:1.20
	binutils-csl-wrs-linux-3_4_4-22:1.20
	binutils-csl-coldfire-4_1-11:1.20
	binutils-csl-sourcerygxx-3_4_4-19:1.20
	binutils-csl-coldfire-4_1-10:1.20
	binutils-csl-sourcerygxx-4_1-5:1.20
	binutils-csl-sourcerygxx-4_1-4:1.20
	binutils-csl-wrs-linux-3_4_4-21:1.20
	binutils-csl-morpho-4_1-4:1.20
	binutils-csl-sourcerygxx-3_4_4-17:1.20
	binutils-csl-wrs-linux-3_4_4-20:1.20
	binutils-2_17-branch:1.21.0.2
	binutils-2_17-branchpoint:1.21
	binutils-csl-2_17-branch:1.20.0.8
	binutils-csl-2_17-branchpoint:1.20
	binutils-csl-gxxpro-3_4-branch:1.20.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.20
	binutils-2_16_1:1.20
	binutils-csl-arm-2005q1b:1.20
	binutils-2_16:1.20
	binutils-csl-arm-2005q1a:1.20
	binutils-csl-arm-2005q1-branch:1.20.0.4
	binutils-csl-arm-2005q1-branchpoint:1.20
	binutils-2_16-branch:1.20.0.2
	binutils-2_16-branchpoint:1.20
	csl-arm-2004-q3d:1.20
	csl-arm-2004-q3:1.19
	binutils-2_15:1.18
	binutils-2_15-branchpoint:1.18
	csl-arm-2004-q1a:1.18
	csl-arm-2004-q1:1.18
	binutils-2_15-branch:1.18.0.4
	cagney_bfdfile-20040213-branch:1.18.0.2
	cagney_bfdfile-20040213-branchpoint:1.18
	cagney_bigcore-20040122-branch:1.16.0.2
	cagney_bigcore-20040122-branchpoint:1.16
	csl-arm-2003-q4:1.16
	binutils-2_14:1.12
	binutils-2_14-branch:1.12.0.2
	binutils-2_14-branchpoint:1.12
	binutils-2_13_2_1:1.9
	binutils-2_13_2:1.9
	binutils-2_13_1:1.9
	binutils-2_13:1.9
	binutils-2_13-branchpoint:1.9
	binutils-2_13-branch:1.9.0.2
	binutils-2_12_1:1.7.2.1
	binutils-2_12:1.7
	binutils-2_12-branch:1.7.0.2
	binutils-2_12-branchpoint:1.7
	cygnus_cvs_20020108_pre:1.7
	binutils-2_11_2:1.3
	binutils-2_11_1:1.3
	binutils-2_11:1.3
	x86_64versiong3:1.3
	binutils-2_11-branch:1.3.0.2
	binutils-2_10_1:1.2
	binutils-2_10:1.2
	binutils-2_10-branch:1.2.0.2
	binutils-2_10-branchpoint:1.2
	binutils_latest_snapshot:1.33
	repo-unification-2000-02-06:1.2
	binu_ss_19990721:1.2
	binu_ss_19990602:1.1.1.1
	binu_ss_19990502:1.1.1.1
	cygnus:1.1.1;
locks; strict;
comment	@# @;


1.33
date	2013.09.24.05.59.55;	author amodra;	state Exp;
branches;
next	1.32;

1.32
date	2010.12.15.14.56.37;	author hjl;	state Exp;
branches;
next	1.31;

1.31
date	2009.09.02.07.25.35;	author amodra;	state Exp;
branches;
next	1.30;

1.30
date	2009.04.24.15.06.15;	author amodra;	state Exp;
branches;
next	1.29;

1.29
date	2008.01.28.11.07.44;	author nickc;	state Exp;
branches;
next	1.28;

1.28
date	2007.12.24.17.27.34;	author nickc;	state Exp;
branches;
next	1.27;

1.27
date	2007.10.26.06.33.59;	author amodra;	state Exp;
branches;
next	1.26;

1.26
date	2007.10.01.09.54.57;	author nickc;	state Exp;
branches;
next	1.25;

1.25
date	2007.08.09.11.02.23;	author amodra;	state Exp;
branches;
next	1.24;

1.24
date	2007.07.19.19.56.10;	author roland;	state Exp;
branches
	1.24.2.1;
next	1.23;

1.23
date	2007.07.06.14.09.41;	author nickc;	state Exp;
branches;
next	1.22;

1.22
date	2006.10.06.20.10.37;	author vapier;	state Exp;
branches;
next	1.21;

1.21
date	2006.04.05.15.40.40;	author amodra;	state Exp;
branches;
next	1.20;

1.20
date	2004.10.21.15.20.35;	author hjl;	state Exp;
branches
	1.20.8.1;
next	1.19;

1.19
date	2004.05.11.17.08.34;	author jakub;	state Exp;
branches;
next	1.18;

1.18
date	2004.01.28.13.42.26;	author amodra;	state Exp;
branches;
next	1.17;

1.17
date	2004.01.28.13.31.30;	author amodra;	state Exp;
branches;
next	1.16;

1.16
date	2003.10.16.08.46.34;	author amodra;	state Exp;
branches;
next	1.15;

1.15
date	2003.08.13.08.38.23;	author amodra;	state Exp;
branches;
next	1.14;

1.14
date	2003.05.30.15.50.11;	author jakub;	state Exp;
branches;
next	1.13;

1.13
date	2003.05.30.13.23.24;	author hjl;	state Exp;
branches;
next	1.12;

1.12
date	2003.02.07.14.21.03;	author jakub;	state Exp;
branches;
next	1.11;

1.11
date	2003.01.06.16.13.57;	author drow;	state Exp;
branches;
next	1.10;

1.10
date	2002.09.25.07.21.07;	author amodra;	state Exp;
branches;
next	1.9;

1.9
date	2002.05.22.08.44.50;	author amodra;	state Exp;
branches;
next	1.8;

1.8
date	2002.03.21.05.35.39;	author amodra;	state Exp;
branches;
next	1.7;

1.7
date	2001.10.05.16.40.23;	author hjl;	state Exp;
branches
	1.7.2.1;
next	1.6;

1.6
date	2001.10.03.21.36.43;	author jimb;	state Exp;
branches;
next	1.5;

1.5
date	2001.08.23.15.14.18;	author jakub;	state Exp;
branches;
next	1.4;

1.4
date	2001.08.08.13.14.38;	author amodra;	state Exp;
branches;
next	1.3;

1.3
date	2001.01.22.13.50.17;	author amodra;	state Exp;
branches;
next	1.2;

1.2
date	99.06.18.15.25.45;	author rth;	state Exp;
branches;
next	1.1;

1.1
date	99.05.03.07.29.06;	author rth;	state Exp;
branches
	1.1.1.1;
next	;

1.24.2.1
date	2007.08.09.11.35.58;	author amodra;	state Exp;
branches;
next	;

1.20.8.1
date	2006.08.22.15.08.43;	author jsm28;	state Exp;
branches;
next	;

1.7.2.1
date	2002.03.28.06.26.57;	author amodra;	state Exp;
branches;
next	;

1.1.1.1
date	99.05.03.07.29.06;	author rth;	state Exp;
branches;
next	;


desc
@@


1.33
log
@	* genscripts.sh (LIB_PATH): Don't exclude libdir or tooldir when
	sysrooted.  Also, don't always add tooldir when non-sysrooted.
	Instead add both when native and tooldir also when TOOL_DIR is
	defined.  Always prepend '=' to paths when sysrooted.  Always
	put paths with LIBPATH_SUFFIX first in search order.
@
text
@#!/bin/sh
# genscripts.sh - generate the ld-emulation-target specific files
# Copyright 2004, 2006, 2007, 2008, 2009 Free Software Foundation, Inc.
#
# This file is part of the Gnu Linker.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GLD; see the file COPYING.  If not, write to the Free
# Software Foundation, 51 Franklin Street - Fifth Floor, Boston, MA
# 02110-1301, USA.
#
# Usage: genscripts_extra.sh \
#          srcdir \
#          libdir \
#          prefix \
#          exec_prefix \
#          host \
#          target \
#          target_alias \
#          default_emulation \
#          native_lib_dirs \
#          use_sysroot \
#          enable_initfini_array \
#          this_emulation \
# optional:
#          tool_dir \
#          customizer_script
#
# Sample usage:
#
#   genscripts_extra.sh \
#    /sources/ld \
#    /usr/local/lib \
#    /usr/local \
#    /usr/local \
#    sparc-sun-sunos4.1.3 \
#    sparc-sun-sunos4.1.3 \
#    sparc-sun-sunos4.1.3 \
#    sun4 \
#    "" \
#    no \
#    sun3 \
#    sparc-sun-sunos4.1.3 \
#    sparc.sh
#
# produces the linker scripts:
#
#   sun3.x       [default linker script]
#   sun3.xbn     [used when the linker is invoked with "-N"]
#   sun3.xn      [used when the linker is invoked with "-n"]
#   sun3.xr      [used when the linker is invoked with "-r"]
#   sun3.xu      [used when the linker is invoked with "-Ur"]
# and maybe:
#   sun3.xc      [used when the linker is invoked with "-z combreloc"]
#   sun3.xsc     [used when the linker is invoked with "--shared"]
#   sun3.xdc     [used when the linker is invoked with "-pie"]
#   sun3.xa      [used when the linker is invoked with "--enable-auto-import"]
#
# It also produced the C source file:
#
#   em_sun3.c
#
# which is then compiled into the linker.
#
# The linker scripts are created by running the shell script
# /sources/ld/emulparams/sparc.sh to set the value of ${SCRIPT_NAME}
# (and any other variables it wants to).  ${SCRIPT_NAME} is then
# invoked with a variable called ${LD_FLAG} to tell it which version
# of the linker script to create.


srcdir=$1
libdir=$2
prefix=$3
exec_prefix=$4
host=$5
target=$6
target_alias=$7
EMULATION_LIBPATH=$8
NATIVE_LIB_DIRS=$9
shift 9
use_sysroot=$1
ENABLE_INITFINI_ARRAY=$2
EMULATION_NAME=$3
TOOL_LIB=$4
CUSTOMIZER_SCRIPT=$5

if [ "x${CUSTOMIZER_SCRIPT}" = "x" ] ; then
  CUSTOMIZER_SCRIPT=${EMULATION_NAME}
fi
CUSTOMIZER_SCRIPT="${srcdir}/emulparams/${CUSTOMIZER_SCRIPT}.sh"

# Include the emulation-specific parameters:
. ${CUSTOMIZER_SCRIPT}

if test -d ldscripts; then
  true
else
  mkdir ldscripts
fi

# Set some flags for the emultempl scripts.  USE_LIBPATH will
# be set for any libpath-using emulation; NATIVE will be set for a
# libpath-using emulation where ${host} = ${target}.  NATIVE
# may already have been set by the emulparams file, but that's OK
# (it'll just get set to "yes" twice).

case " $EMULATION_LIBPATH " in
  *" ${EMULATION_NAME} "*)
    if [ "x${host}" = "x${target}" ] ; then
      NATIVE=yes
      USE_LIBPATH=yes
    elif [ "x${use_sysroot}" = "xyes" ] ; then
      USE_LIBPATH=yes
    fi
    ;;
esac

# If the emulparams file sets NATIVE, make sure USE_LIBPATH is set also.
if test "x$NATIVE" = "xyes" ; then
  USE_LIBPATH=yes
fi

# Set the library search path, for libraries named by -lfoo.
# If LIB_PATH is defined (e.g., by Makefile) and non-empty, it is used.
# Otherwise, the default is set here.
#
# The format is the usual list of colon-separated directories.
# To force a logically empty LIB_PATH, do LIBPATH=":".
#
# If we are using a sysroot, prefix library paths with "=" to indicate this.
#
# If the emulparams file set LIBPATH_SUFFIX, prepend an extra copy of
# the library path with the suffix applied.

# Paths with LIBPATH_SUFFIX
lib_path1=
# Paths without LIBPATH_SUFFIX
lib_path2=
if [ "${LIB_PATH}" != ":" ] ; then
  lib_path2=${LIB_PATH}
fi

# Add args to lib_path1 and lib_path2, discarding any duplicates
append_to_lib_path()
{
  if [ $# != 0 ]; then
    for lib in "$@@"; do
      # The "=" is harmless if we aren't using a sysroot, but also needless.
      if [ "x${use_sysroot}" = "xyes" ] ; then
	lib="=${lib}"
      fi
      if test -n "${LIBPATH_SUFFIX}"; then
	case "${lib}" in
	  *${LIBPATH_SUFFIX})
	    case :${lib_path1}: in
	      *:${lib}:*) ;;
	      ::) lib_path1=${lib} ;;
	      *) lib_path1=${lib_path1}:${lib} ;;
	    esac ;;
	  *)
	    case :${lib_path1}: in
	      *:${lib}${LIBPATH_SUFFIX}:*) ;;
	      ::) lib_path1=${lib}${LIBPATH_SUFFIX} ;;
	      *) lib_path1=${lib_path1}:${lib}${LIBPATH_SUFFIX} ;;
	    esac ;;
	esac
      fi
      case :${lib_path1}:${lib_path2}: in
	*:${lib}:*) ;;
	*::) lib_path2=${lib} ;;
	*) lib_path2=${lib_path2}:${lib} ;;
      esac
    done
  fi
}

# Always search $(tooldir)/lib, aka /usr/local/TARGET/lib when native
# except when LIBPATH=":".
if [ "${LIB_PATH}" != ":" ] ; then
  libs=
  if [ "x${TOOL_LIB}" = "x" ] ; then
    if [ "x${NATIVE}" = "xyes" ] ; then
      libs="${exec_prefix}/${target_alias}/lib"
    fi
  else
    # For multilib'ed targets, ensure both ${target_alias}/lib${LIBPATH_SUFFIX}
    # and ${TOOL_LIB}/lib${LIBPATH_SUFFIX} are in the default search path,
    # because 64bit libraries may be in both places, depending on
    # cross-development setup method (e.g.: /usr/s390x-linux/lib64
    # vs. /usr/s390-linux/lib64)
    case "${NATIVE}:${LIBPATH_SUFFIX}:${TOOL_LIB}" in
      :* | *::* | *:*:*${LIBPATH_SUFFIX}) ;;
      *) libs="${exec_prefix}/${target_alias}/lib${LIBPATH_SUFFIX}" ;;
    esac
    libs="${exec_prefix}/${TOOL_LIB}/lib ${libs}"
  fi
  append_to_lib_path ${libs}
fi

if [ "x${LIB_PATH}" = "x" ] && [ "x${USE_LIBPATH}" = xyes ] ; then
  libs=${NATIVE_LIB_DIRS}
  if [ "x${NATIVE}" = "xyes" ] ; then
    case " ${libs} " in
      *" ${libdir} "*) ;;
      *) libs="${libdir} ${libs}" ;;
    esac
  fi
  append_to_lib_path ${libs}
fi

case :${lib_path1}:${lib_path2}: in
  *:: | ::*) LIB_PATH=${lib_path1}${lib_path2} ;;
  *) LIB_PATH=${lib_path1}:${lib_path2} ;;
esac

LIB_SEARCH_DIRS=`echo ${LIB_PATH} | sed -e 's/:/ /g' -e 's/\([^ ][^ ]*\)/SEARCH_DIR(\\"\1\\");/g'`

# We need it for testsuite.
set $EMULATION_LIBPATH
if [ "x$1" = "x$EMULATION_NAME" ]; then
    test -d tmpdir || mkdir tmpdir
    rm -f tmpdir/libpath.exp
    echo "set libpath \"${LIB_PATH}\"" | sed -e 's/:/ /g' > tmpdir/libpath.exp
fi

# Generate 5 or 6 script files from a master script template in
# ${srcdir}/scripttempl/${SCRIPT_NAME}.sh.  Which one of the 5 or 6
# script files is actually used depends on command line options given
# to ld.  (SCRIPT_NAME was set in the emulparams_file.)
#
# A .x script file is the default script.
# A .xr script is for linking without relocation (-r flag).
# A .xu script is like .xr, but *do* create constructors (-Ur flag).
# A .xn script is for linking with -n flag (mix text and data on same page).
# A .xbn script is for linking with -N flag (mix text and data on same page).
# A .xs script is for generating a shared library with the --shared
#   flag; it is only generated if $GENERATE_SHLIB_SCRIPT is set by the
#   emulation parameters.
# A .xc script is for linking with -z combreloc; it is only generated if
#   $GENERATE_COMBRELOC_SCRIPT is set by the emulation parameters or
#   $SCRIPT_NAME is "elf".
# A .xsc script is for linking with --shared -z combreloc; it is generated
#   if $GENERATE_COMBRELOC_SCRIPT is set by the emulation parameters or
#   $SCRIPT_NAME is "elf" and $GENERATE_SHLIB_SCRIPT is set by the emulation
#   parameters too.

if [ "x$SCRIPT_NAME" = "xelf" ]; then
  GENERATE_COMBRELOC_SCRIPT=yes
fi

SEGMENT_SIZE=${SEGMENT_SIZE-${MAXPAGESIZE-${TARGET_PAGE_SIZE}}}

# Determine DATA_ALIGNMENT for the 5 variants, using
# values specified in the emulparams/<script_to_run>.sh file or default.

DATA_ALIGNMENT_="${DATA_ALIGNMENT_-${DATA_ALIGNMENT-ALIGN(${SEGMENT_SIZE})}}"
DATA_ALIGNMENT_n="${DATA_ALIGNMENT_n-${DATA_ALIGNMENT_}}"
DATA_ALIGNMENT_N="${DATA_ALIGNMENT_N-${DATA_ALIGNMENT-.}}"
DATA_ALIGNMENT_r="${DATA_ALIGNMENT_r-${DATA_ALIGNMENT-}}"
DATA_ALIGNMENT_u="${DATA_ALIGNMENT_u-${DATA_ALIGNMENT_r}}"

LD_FLAG=r
DATA_ALIGNMENT=${DATA_ALIGNMENT_r}
DEFAULT_DATA_ALIGNMENT="ALIGN(${SEGMENT_SIZE})"
( echo "/* Script for ld -r: link without relocation */"
  . ${CUSTOMIZER_SCRIPT}
  . ${srcdir}/scripttempl/${SCRIPT_NAME}.sc
) | sed -e '/^ *$/d;s/[ 	]*$//' > ldscripts/${EMULATION_NAME}.xr

LD_FLAG=u
DATA_ALIGNMENT=${DATA_ALIGNMENT_u}
CONSTRUCTING=" "
( echo "/* Script for ld -Ur: link w/out relocation, do create constructors */"
  . ${CUSTOMIZER_SCRIPT}
  . ${srcdir}/scripttempl/${SCRIPT_NAME}.sc
) | sed -e '/^ *$/d;s/[ 	]*$//' > ldscripts/${EMULATION_NAME}.xu

LD_FLAG=
DATA_ALIGNMENT=${DATA_ALIGNMENT_}
RELOCATING=" "
( echo "/* Default linker script, for normal executables */"
  . ${CUSTOMIZER_SCRIPT}
  . ${srcdir}/scripttempl/${SCRIPT_NAME}.sc
) | sed -e '/^ *$/d;s/[ 	]*$//' > ldscripts/${EMULATION_NAME}.x

LD_FLAG=n
DATA_ALIGNMENT=${DATA_ALIGNMENT_n}
( echo "/* Script for -n: mix text and data on same page */"
  . ${CUSTOMIZER_SCRIPT}
  . ${srcdir}/scripttempl/${SCRIPT_NAME}.sc
) | sed -e '/^ *$/d;s/[ 	]*$//' > ldscripts/${EMULATION_NAME}.xn

LD_FLAG=N
DATA_ALIGNMENT=${DATA_ALIGNMENT_N}
( echo "/* Script for -N: mix text and data on same page; don't align data */"
  . ${CUSTOMIZER_SCRIPT}
  . ${srcdir}/scripttempl/${SCRIPT_NAME}.sc
) | sed -e '/^ *$/d;s/[ 	]*$//' > ldscripts/${EMULATION_NAME}.xbn

if test -n "$GENERATE_COMBRELOC_SCRIPT"; then
  DATA_ALIGNMENT=${DATA_ALIGNMENT_c-${DATA_ALIGNMENT_}}
  LD_FLAG=c
  COMBRELOC=ldscripts/${EMULATION_NAME}.xc.tmp
  ( echo "/* Script for -z combreloc: combine and sort reloc sections */"
    . ${CUSTOMIZER_SCRIPT}
    . ${srcdir}/scripttempl/${SCRIPT_NAME}.sc
  ) | sed -e '/^ *$/d;s/[ 	]*$//' > ldscripts/${EMULATION_NAME}.xc
  rm -f ${COMBRELOC}
  LD_FLAG=w
  RELRO_NOW=" "
  COMBRELOC=ldscripts/${EMULATION_NAME}.xw.tmp
  ( echo "/* Script for -z combreloc -z now -z relro: combine and sort reloc sections */"
    . ${CUSTOMIZER_SCRIPT}
    . ${srcdir}/scripttempl/${SCRIPT_NAME}.sc
  ) | sed -e '/^ *$/d;s/[ 	]*$//' > ldscripts/${EMULATION_NAME}.xw
  rm -f ${COMBRELOC}
  COMBRELOC=
  unset RELRO_NOW
fi

if test -n "$GENERATE_SHLIB_SCRIPT"; then
  LD_FLAG=shared
  DATA_ALIGNMENT=${DATA_ALIGNMENT_s-${DATA_ALIGNMENT_}}
  CREATE_SHLIB=" "
  (
    echo "/* Script for ld --shared: link shared library */"
    . ${CUSTOMIZER_SCRIPT}
    . ${srcdir}/scripttempl/${SCRIPT_NAME}.sc
  ) | sed -e '/^ *$/d;s/[ 	]*$//' > ldscripts/${EMULATION_NAME}.xs
  if test -n "$GENERATE_COMBRELOC_SCRIPT"; then
    LD_FLAG=cshared
    DATA_ALIGNMENT=${DATA_ALIGNMENT_sc-${DATA_ALIGNMENT}}
    COMBRELOC=ldscripts/${EMULATION_NAME}.xsc.tmp
    ( echo "/* Script for --shared -z combreloc: shared library, combine & sort relocs */"
      . ${CUSTOMIZER_SCRIPT}
      . ${srcdir}/scripttempl/${SCRIPT_NAME}.sc
    ) | sed -e '/^ *$/d;s/[ 	]*$//' > ldscripts/${EMULATION_NAME}.xsc
    rm -f ${COMBRELOC}
    LD_FLAG=wshared
    RELRO_NOW=" "
    COMBRELOC=ldscripts/${EMULATION_NAME}.xsw.tmp
    ( echo "/* Script for --shared -z combreloc -z now -z relro: shared library, combine & sort relocs */"
      . ${CUSTOMIZER_SCRIPT}
      . ${srcdir}/scripttempl/${SCRIPT_NAME}.sc
    ) | sed -e '/^ *$/d;s/[ 	]*$//' > ldscripts/${EMULATION_NAME}.xsw
    rm -f ${COMBRELOC}
    COMBRELOC=
    unset RELRO_NOW
  fi
  unset CREATE_SHLIB
fi

if test -n "$GENERATE_PIE_SCRIPT"; then
  LD_FLAG=pie
  DATA_ALIGNMENT=${DATA_ALIGNMENT_s-${DATA_ALIGNMENT_}}
  CREATE_PIE=" "
  (
    echo "/* Script for ld -pie: link position independent executable */"
    . ${CUSTOMIZER_SCRIPT}
    . ${srcdir}/scripttempl/${SCRIPT_NAME}.sc
  ) | sed -e '/^ *$/d;s/[ 	]*$//' > ldscripts/${EMULATION_NAME}.xd
  if test -n "$GENERATE_COMBRELOC_SCRIPT"; then
    LD_FLAG=cpie
    DATA_ALIGNMENT=${DATA_ALIGNMENT_sc-${DATA_ALIGNMENT}}
    COMBRELOC=ldscripts/${EMULATION_NAME}.xdc.tmp
    ( echo "/* Script for -pie -z combreloc: position independent executable, combine & sort relocs */"
      . ${CUSTOMIZER_SCRIPT}
      . ${srcdir}/scripttempl/${SCRIPT_NAME}.sc
    ) | sed -e '/^ *$/d;s/[ 	]*$//' > ldscripts/${EMULATION_NAME}.xdc
    rm -f ${COMBRELOC}
    LD_FLAG=wpie
    RELRO_NOW=" "
    COMBRELOC=ldscripts/${EMULATION_NAME}.xdw.tmp
    ( echo "/* Script for -pie -z combreloc -z now -z relro: position independent executable, combine & sort relocs */"
      . ${CUSTOMIZER_SCRIPT}
      . ${srcdir}/scripttempl/${SCRIPT_NAME}.sc
    ) | sed -e '/^ *$/d;s/[ 	]*$//' > ldscripts/${EMULATION_NAME}.xdw
    rm -f ${COMBRELOC}
    COMBRELOC=
    unset RELRO_NOW
  fi
  unset CREATE_PIE
fi

if test -n "$GENERATE_AUTO_IMPORT_SCRIPT"; then
  LD_FLAG=auto_import
  DATA_ALIGNMENT=${DATA_ALIGNMENT_}
  (
    echo "/* Script for ld --enable-auto-import: Like the default script except read only data is placed into .data  */"
    . ${CUSTOMIZER_SCRIPT}
    . ${srcdir}/scripttempl/${SCRIPT_NAME}.sc
  ) | sed -e '/^ *$/d;s/[ 	]*$//' > ldscripts/${EMULATION_NAME}.xa
fi

case " $EMULATION_LIBPATH " in
    *" ${EMULATION_NAME} "*) COMPILE_IN=true;;
esac

# PR ld/5652:
# Determine if the shell has support for the variable BASH_LINENO.
# When it is the case, it is only available inside functions.
has_lineno()
{
  test "x$BASH_LINENO" != "x"
}

# Enable accruate error source in the compiler error messages, if possible.
if has_lineno; then
  . ${srcdir}/genscrba.sh
else
  source_em()
  {
    . $1
  }
  fragment()
  {
    cat >> e${EMULATION_NAME}.c
  }
fi

# Generate e${EMULATION_NAME}.c.
# Start with an empty file, then the sourced .em script
# can use the "fragment" function to append.
> e${EMULATION_NAME}.c
source_em ${srcdir}/emultempl/${TEMPLATE_NAME-generic}.em
@


1.32
log
@Add SORT_BY_INIT_PRIORITY.

bfd/

2010-12-15  H.J. Lu  <hongjiu.lu@@intel.com>

	* elf.c (_bfd_elf_new_section_hook): Special handling for
	.init_array/.fini_array output sections.

ld/

2010-12-15  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.am (GENSCRIPTS): Add @@enable_initfini_array@@.

	* NEWS: Mention SORT_BY_INIT_PRIORITY.

	* configure.in: Add AC_CANONICAL_BUILD.
	Add --enable-initfini-array.

	* genscripts.sh (ENABLE_INITFINI_ARRAY): New.

	* ld.h (sort_type): Add by_init_priority.

	* ld.texinfo: Document SORT_BY_INIT_PRIORITY.

	* ldgram.y (SORT_BY_INIT_PRIORITY): New.
	(wildcard_spec): Handle SORT_BY_INIT_PRIORITY.

	* ldlang.c (get_init_priority): New.
	(compare_section): Use get_init_priority for by_init_priority.

	* ldlex.l (SORT_BY_INIT_PRIORITY): New.

	* scripttempl/elf.sc: Support ENABLE_INITFINI_ARRAY.

	* Makefile.in: Regenerated.
	* aclocal.m4: Regenerated.
	* config.in: Likewise.
	* configure: Likewise.

ld/testsuite/

2010-12-15  H.J. Lu  <hongjiu.lu@@intel.com>

	* ld-elf/elf.exp (array_tests): Add init-mixed.
	(array_tests_static): Likewise.
	Also delete tmpdir/init-mixed.

	* ld-elf/init-mixed.c: New.
	* ld-elf/init-mixed.out: Likewise.
@
text
@a97 7
# Can't use ${TOOL_LIB:-$target_alias} here due to an Ultrix shell bug.
if [ "x${TOOL_LIB}" = "x" ] ; then
  tool_lib=${exec_prefix}/${target_alias}/lib
else
  tool_lib=${exec_prefix}/${TOOL_LIB}/lib
fi

d146 7
a152 2
if [ "x${LIB_PATH}" = "x" ] && [ "x${USE_LIBPATH}" = xyes ] ; then
  LIB_PATH2=
d154 31
a184 10
  libs=${NATIVE_LIB_DIRS}
  if [ "x${use_sysroot}" != "xyes" ] ; then
    case " ${libs} " in
      *" ${libdir} "*) ;;
      *) libs="${libdir} ${libs}" ;;
    esac
    case " ${libs} " in
      *" ${tool_lib} "*) ;;
      *) libs="${tool_lib} ${libs}" ;;
    esac
d186 1
d188 7
a194 4
  for lib in ${libs}; do
    # The "=" is harmless if we aren't using a sysroot, but also needless.
    if [ "x${use_sysroot}" = "xyes" ] ; then
      lib="=${lib}"
d196 9
a204 5
    addsuffix=
    case "${LIBPATH_SUFFIX}:${lib}" in
      :*) ;;
      *:*${LIBPATH_SUFFIX}) ;;
      *) addsuffix=yes ;;
d206 3
a208 45
    if test -n "$addsuffix"; then
      case :${LIB_PATH}: in
	*:${lib}${LIBPATH_SUFFIX}:*) ;;
	::) LIB_PATH=${lib}${LIBPATH_SUFFIX} ;;
	*) LIB_PATH=${LIB_PATH}:${lib}${LIBPATH_SUFFIX} ;;
      esac
      case :${LIB_PATH}:${LIB_PATH2}: in
	*:${lib}:*) ;;
	*::) LIB_PATH2=${lib} ;;
	*) LIB_PATH2=${LIB_PATH2}:${lib} ;;
      esac
    else
      case :${LIB_PATH2}: in
	*:${lib}:*) ;;
	::) LIB_PATH2=${lib} ;;
	*) LIB_PATH2=${LIB_PATH2}:${lib} ;;
      esac
    fi
  done

  case :${LIB_PATH}:${LIB_PATH2}: in
    *:: | ::*) LIB_PATH=${LIB_PATH}${LIB_PATH2} ;;
    *) LIB_PATH=${LIB_PATH}:${LIB_PATH2} ;;
  esac

  # For multilib'ed targets, ensure both ${target_alias}/lib${LIBPATH_SUFFIX}
  # and ${TOOL_LIB}/lib${LIBPATH_SUFFIX} are in the default search path, because
  # 64bit libraries may be in both places, depending on cross-development
  # setup method (e.g.: /usr/s390x-linux/lib64 vs /usr/s390-linux/lib64)
  case "${LIBPATH_SUFFIX}:${tool_lib}" in
    :*) ;;
    *:*${LIBPATH_SUFFIX}) ;;
    *)
      paths="${exec_prefix}/${target_alias}/lib${LIBPATH_SUFFIX}"
      if [ x"${TOOL_LIB}" != x ]; then
        paths="${paths} ${exec_prefix}/${TOOL_LIB}/lib${LIBPATH_SUFFIX}"
      fi
      for path in $paths; do
        case :${LIB_PATH}: in
          ::: | *:${path}:*) ;;
          *) LIB_PATH=${path}:${LIB_PATH} ;;
        esac
      done
    ;;
  esac
d211 6
a216 14
# Always search $(tooldir)/lib, aka /usr/local/TARGET/lib, except for
# sysrooted configurations and when LIBPATH=":".
if [ "x${use_sysroot}" != "xyes" ] ; then
  case :${LIB_PATH}: in
  ::: | *:${tool_lib}:*) ;;
  ::) LIB_PATH=${tool_lib} ;;
  *) LIB_PATH=${tool_lib}:${LIB_PATH} ;;
  esac
  # For multilib targets, search both $tool_lib dirs
  if [ "x${LIBPATH_SUFFIX}" != "x" ] ; then
    case :${LIB_PATH}: in
      ::: | *:${tool_lib}${LIBPATH_SUFFIX}:*) ;;
      ::) LIB_PATH=${tool_lib}${LIBPATH_SUFFIX} ;;
      *) LIB_PATH=${tool_lib}${LIBPATH_SUFFIX}:${LIB_PATH} ;;
d219 1
d222 5
@


1.31
log
@update copyright dates
@
text
@d33 1
d93 4
a96 3
EMULATION_NAME=$2
TOOL_LIB=$3
CUSTOMIZER_SCRIPT=$4
@


1.30
log
@     	PR 10061
	* genscripts.sh: Don't pass $EMULATION_NAME as $CUSTOMIZER_SCRIPT
	param.
@
text
@d3 1
a3 1
# Copyright 2007, 2008 Free Software Foundation, Inc.
@


1.29
log
@PR ld/5652
* genscripts.sh: Check for the existence of BASH_LINENO not just the BASH
  shell before generating line numbers in the emulation file.
@
text
@d109 1
a109 1
. ${CUSTOMIZER_SCRIPT} ${EMULATION_NAME}
d292 1
a292 1
  . ${CUSTOMIZER_SCRIPT} ${EMULATION_NAME}
d300 1
a300 1
  . ${CUSTOMIZER_SCRIPT} ${EMULATION_NAME}
d308 1
a308 1
  . ${CUSTOMIZER_SCRIPT} ${EMULATION_NAME}
d315 1
a315 1
  . ${CUSTOMIZER_SCRIPT} ${EMULATION_NAME}
d322 1
a322 1
  . ${CUSTOMIZER_SCRIPT} ${EMULATION_NAME}
d331 1
a331 1
    . ${CUSTOMIZER_SCRIPT} ${EMULATION_NAME}
d339 1
a339 1
    . ${CUSTOMIZER_SCRIPT} ${EMULATION_NAME}
d353 1
a353 1
    . ${CUSTOMIZER_SCRIPT} ${EMULATION_NAME}
d361 1
a361 1
      . ${CUSTOMIZER_SCRIPT} ${EMULATION_NAME}
d369 1
a369 1
      . ${CUSTOMIZER_SCRIPT} ${EMULATION_NAME}
d385 1
a385 1
    . ${CUSTOMIZER_SCRIPT} ${EMULATION_NAME}
d393 1
a393 1
      . ${CUSTOMIZER_SCRIPT} ${EMULATION_NAME}
d401 1
a401 1
      . ${CUSTOMIZER_SCRIPT} ${EMULATION_NAME}
d416 1
a416 1
    . ${CUSTOMIZER_SCRIPT} ${EMULATION_NAME}
@


1.28
log
@* genscripts.sh (LIB_PATH): Include both {target_alias} and
  {TOOL_LIB} in the search paths for multilibbed targets.
@
text
@d3 1
a3 1
# Copyright 2007 Free Software Foundation, Inc.
d425 10
a434 1
if test -n "${BASH+set}"; then
@


1.27
log
@	PR 5215
	* genscripts.sh: Move bash script to..
	* genscrba.sh: ..here.
@
text
@d201 21
@


1.26
log
@PR linker/4844
* genscript.sh: Add support for generating a .xa script for use with the --auto-import option.
* ld.texinfo: Document the new behaviour of the --auto-import option.
* ldint.texinfo: Document new script generation.
* emulparams/i386pe.sh (GENERATE_AUTO_IMPORT): Define.
* emulparams/i386pe_posix.sh (GENERATE_AUTO_IMPORT): Define.
* emulparams/i386pep.sh (GENERATE_AUTO_IMPORT): Define.
* emultemp/pe.em (..._get_script): Support the use of the auto import script.
* scripttempl/pe.sc: Put the .rdata input sections into the .data output section when creating an auto import script.
* scripttempl/pep.sc: Likewise.
@
text
@d405 1
a405 13
  source_em()
  {
    local current_script="$em_script"
    em_script=$1
    . $em_script
    em_script=$current_script
  }
  fragment()
  {
    local lineno=$[${BASH_LINENO[0]} + 1]
    echo >> e${EMULATION_NAME}.c "#line $lineno \"$em_script\""
    cat >> e${EMULATION_NAME}.c
  }
@


1.25
log
@	PR 4515
	* genscripts.sh: Delete all references to NONPAGED_TEXT_START_ADDR.
	* ldint.texinfo: Likewise.
	* emulparams/armaoutb.sh (NONPAGED_TEXT_START_ADDRESS): Delete.
	* emulparams/armaoutl.sh: Likewise.
	* emulparams/arcelf.sh (NONPAGED_TEXT_START_ADDR): Delete.
	* emulparams/bfin.sh: Likewise
	* emulparams/crisaout.sh: Likewise
	* emulparams/elf32_sparc.sh: Likewise
	* emulparams/elf32am33lin.sh: Likewise
	* emulparams/elf32b4300.sh: Likewise
	* emulparams/elf32bmip.sh: Likewise
	* emulparams/elf32mcore.sh: Likewise
	* emulparams/elf32xtensa.sh: Likewise
	* emulparams/elf64_s390.sh: Likewise
	* emulparams/elf64_sparc.sh: Likewise
	* emulparams/elf64alpha.sh: Likewise
	* emulparams/elf_i386.sh: Likewise
	* emulparams/elf_i386_be.sh: Likewise
	* emulparams/elf_i386_chaos.sh: Likewise
	* emulparams/elf_i386_ldso.sh: Likewise
	* emulparams/elf_i386_vxworks.sh: Likewise
	* emulparams/elf_s390.sh: Likewise
	* emulparams/elf_x86_64.sh: Likewise
	* emulparams/i386aout.sh: Likewise
	* emulparams/i386moss.sh: Likewise
	* emulparams/i386msdos.sh: Likewise
	* emulparams/i386nto.sh: Likewise
	* emulparams/i386nw.sh: Likewise
	* emulparams/m68kaout.sh: Likewise
	* emulparams/m68kelf.sh: Likewise
	* emulparams/ppcnw.sh: Likewise
	* emulparams/sun4.sh: Likewise
	* emulparams/tic80coff.sh: Likewise
	* emulparams/vaxnbsd.sh: Likewise
	* emulparams/armnbsd.sh (NONPAGED_TEXT_START_ADDR): Delete.
	(TEXT_START_ADDR): Set for -n, -N.
	* emulparams/coff_sparc.sh: Likewise
	* emulparams/elf32vax.sh: Likewise
	* emulparams/i386bsd.sh: Likewise
	* emulparams/i386go32.sh: Likewise
	* emulparams/i386linux.sh: Likewise
	* emulparams/i386lynx.sh: Likewise
	* emulparams/i386mach.sh: Likewise
	* emulparams/m68k4knbsd.sh: Likewise
	* emulparams/m68klinux.sh: Likewise
	* emulparams/m68knbsd.sh: Likewise
	* emulparams/ns32knbsd.sh: Likewise
	* emulparams/pc532macha.sh: Likewise
	* emulparams/ppclynx.sh: Likewise
	* emulparams/scoreelf.sh: Likewise
	* emulparams/sparcaout.sh: Likewise
	* emulparams/sparclinux.sh: Likewise
	* emulparams/sun3.sh: Likewise
	* emulparams/vsta.sh: Likewise
@
text
@d66 1
d390 10
@


1.24
log
@2007-07-19  Roland McGrath  <roland@@redhat.com>

	* genscripts.sh (source_em, fragment): New sh functions.
	Truncate e${EMULATION_NAME}.c file before .em script fills it.
	Use source_em in place of . for the .em script.
	* emultempl/generic.em: Use fragment and source_em functions.
	* emultempl/aix.em: Likewise.
	* emultempl/alphaelf.em: Likewise.
	* emultempl/armcoff.em: Likewise.
	* emultempl/armelf.em: Likewise.
	* emultempl/avrelf.em: Likewise.
	* emultempl/beos.em: Likewise.
	* emultempl/cr16elf.em: Likewise.
	* emultempl/crxelf.em: Likewise.
	* emultempl/elf-generic.em: Likewise.
	* emultempl/elf32.em: Likewise.
	* emultempl/genelf.em: Likewise.
	* emultempl/gld960.em: Likewise.
	* emultempl/gld960c.em: Likewise.
	* emultempl/hppaelf.em: Likewise.
	* emultempl/ia64elf.em: Likewise.
	* emultempl/irix.em: Likewise.
	* emultempl/linux.em: Likewise.
	* emultempl/lnk960.em: Likewise.
	* emultempl/m68hc1xelf.em: Likewise.
	* emultempl/m68kcoff.em: Likewise.
	* emultempl/m68kelf.em: Likewise.
	* emultempl/mipsecoff.em: Likewise.
	* emultempl/mipself.em: Likewise.
	* emultempl/mmix-elfnmmo.em: Likewise.
	* emultempl/mmixelf.em: Likewise.
	* emultempl/mmo.em: Likewise.
	* emultempl/needrelax.em: Likewise.
	* emultempl/netbsd.em: Likewise.
	* emultempl/pe.em: Likewise.
	* emultempl/pep.em: Likewise.
	* emultempl/ppc32elf.em: Likewise.
	* emultempl/ppc64elf.em: Likewise.
	* emultempl/scoreelf.em: Likewise.
	* emultempl/sh64elf.em: Likewise.
	* emultempl/spuelf.em: Likewise.
	* emultempl/sunos.em: Likewise.
	* emultempl/ticoff.em: Likewise.
	* emultempl/vanilla.em: Likewise.
	* emultempl/vxworks.em: Likewise.
	* emultempl/xtensaelf.em: Likewise.
	* emultempl/z80.em: Likewise.
@
text
@a291 1
TEXT_START_ADDR=${NONPAGED_TEXT_START_ADDR-${TEXT_START_ADDR}}
a328 1
  # Note that TEXT_START_ADDR is set to NONPAGED_TEXT_START_ADDR.
a360 1
  # Note that TEXT_START_ADDR is set to NONPAGED_TEXT_START_ADDR.
@


1.24.2.1
log
@	PR 4515
	* genscripts.sh: Delete all references to NONPAGED_TEXT_START_ADDR.
	* ldint.texinfo: Likewise.
	* emulparams/armaoutb.sh (NONPAGED_TEXT_START_ADDRESS): Delete.
	* emulparams/armaoutl.sh: Likewise.
	* emulparams/arcelf.sh (NONPAGED_TEXT_START_ADDR): Delete.
	* emulparams/bfin.sh: Likewise
	* emulparams/crisaout.sh: Likewise
	* emulparams/elf32_sparc.sh: Likewise
	* emulparams/elf32am33lin.sh: Likewise
	* emulparams/elf32b4300.sh: Likewise
	* emulparams/elf32bmip.sh: Likewise
	* emulparams/elf32mcore.sh: Likewise
	* emulparams/elf32xtensa.sh: Likewise
	* emulparams/elf64_s390.sh: Likewise
	* emulparams/elf64_sparc.sh: Likewise
	* emulparams/elf64alpha.sh: Likewise
	* emulparams/elf_i386.sh: Likewise
	* emulparams/elf_i386_be.sh: Likewise
	* emulparams/elf_i386_chaos.sh: Likewise
	* emulparams/elf_i386_ldso.sh: Likewise
	* emulparams/elf_i386_vxworks.sh: Likewise
	* emulparams/elf_s390.sh: Likewise
	* emulparams/elf_x86_64.sh: Likewise
	* emulparams/i386aout.sh: Likewise
	* emulparams/i386moss.sh: Likewise
	* emulparams/i386msdos.sh: Likewise
	* emulparams/i386nto.sh: Likewise
	* emulparams/i386nw.sh: Likewise
	* emulparams/m68kaout.sh: Likewise
	* emulparams/m68kelf.sh: Likewise
	* emulparams/ppcnw.sh: Likewise
	* emulparams/sun4.sh: Likewise
	* emulparams/tic80coff.sh: Likewise
	* emulparams/vaxnbsd.sh: Likewise
	* emulparams/armnbsd.sh (NONPAGED_TEXT_START_ADDR): Delete.
	(TEXT_START_ADDR): Set for -n, -N.
	* emulparams/coff_sparc.sh: Likewise
	* emulparams/elf32vax.sh: Likewise
	* emulparams/i386bsd.sh: Likewise
	* emulparams/i386go32.sh: Likewise
	* emulparams/i386linux.sh: Likewise
	* emulparams/i386lynx.sh: Likewise
	* emulparams/i386mach.sh: Likewise
	* emulparams/m68k4knbsd.sh: Likewise
	* emulparams/m68klinux.sh: Likewise
	* emulparams/m68knbsd.sh: Likewise
	* emulparams/ns32knbsd.sh: Likewise
	* emulparams/pc532macha.sh: Likewise
	* emulparams/ppclynx.sh: Likewise
	* emulparams/scoreelf.sh: Likewise
	* emulparams/sparcaout.sh: Likewise
	* emulparams/sparclinux.sh: Likewise
	* emulparams/sun3.sh: Likewise
	* emulparams/vsta.sh: Likewise
@
text
@d292 1
d330 1
d363 1
@


1.23
log
@Update sources to GPLv3
@
text
@d396 25
d422 4
a425 1
. ${srcdir}/emultempl/${TEMPLATE_NAME-generic}.em
@


1.22
log
@* genscripts.sh: Respect LIBPATH_SUFFIX when not using sysroot.
@
text
@d3 18
@


1.21
log
@	* Makefile.am (GENSCRIPTS): Pass prefix.
	* Makefile.in: Regenerate.
	* genscripts.sh: Adjust for extra parameter.
	* emultempl/elf32.em (parse_ld_so_conf): Return true iff file
	exists.
	(check_ld_so_conf): Use ${prefix}/etc/ld.so.conf if it exists.
	* NEWS: Update.
@
text
@d192 8
@


1.20
log
@2004-10-21  H.J. Lu  <hongjiu.lu@@intel.com>

	* genscripts.sh (libpath.exp): Really generate for first
	emulation only.
@
text
@d7 1
d26 1
d64 7
a70 7
exec_prefix=$3
host=$4
target=$5
target_alias=$6
EMULATION_LIBPATH=$7
NATIVE_LIB_DIRS=$8
use_sysroot=$9
d72 4
a75 3
EMULATION_NAME=$1
TOOL_LIB=$2
CUSTOMIZER_SCRIPT=$3
@


1.20.8.1
log
@Merge changes between binutils-csl-2_17-branchpoint and
binutils-2_17, except for the addition of generated files to CVS.
@
text
@a6 1
#          prefix \
a24 1
#    /usr/local \
d62 7
a68 7
prefix=$3
exec_prefix=$4
host=$5
target=$6
target_alias=$7
EMULATION_LIBPATH=$8
NATIVE_LIB_DIRS=$9
d70 3
a72 4
use_sysroot=$1
EMULATION_NAME=$2
TOOL_LIB=$3
CUSTOMIZER_SCRIPT=$4
@


1.19
log
@bfd/
	* elflink.c (elf_bfd_final_link): Don't output STT_SECTION symbol
	into .dynsym if elf_section_data (sec)->dynindx <= 0.
	Adjust counting of last_local.
	(_bfd_elf_link_renumber_dynsyms): Don't assign dynindx to sections
	other than SHT_PROGBITS/SHT_NOBITS and neither for .got/.got.plt/.plt
	created by the linker nor !SHF_ALLOC.

	* elf32-i386.c (elf_i386_finish_dynamic_sections): Point
	DT_PLTGOT to the start of the .got.plt section instead of the
	.got output section.  Set sh_entsize for .got section in addition
	to .got.plt.
	(elf_i386_relocate_section): Don't assume _GLOBAL_OFFSET_TABLE_
	is at sgot->output_section->vma.
	* elf64-x86-64.c (elf64_x86_64_finish_dynamic_sections): Point
	DT_PLTGOT to the start of the .got.plt section instead of the
	.got output section.
	(elf64_x86_64_relocate_section): Don't assume _GLOBAL_OFFSET_TABLE_
	is at sgot->output_section->vma.  Set sh_entsize for .got section
	in addition to .got.plt.
	* elf.c (_bfd_elf_print_private_bfd_data): Handle PT_GNU_RELRO.
	(bfd_section_from_phdr): Likewise.
	(map_sections_to_segments): Likewise.
	(assign_file_positions_for_segments): Likewise.
	(get_program_header_size): Likewise.
	* elflink.c (bfd_elf_size_dynamic_sections): Set
	elf_tdata (output_bfd)->relro from info->relro.
	* elf-bfd.h (struct elf_obj_tdata): Add relro field.
include/
	* bfdlink.h (struct bfd_link_info): Add relro, relro_start and
	relro_end fields.
	* elf/common.h (PT_GNU_EH_FRAME, PT_GNU_STACK): Add comments.
	(PT_GNU_RELRO): Define.
binutils/
	* readelf.c (get_segment_type): Handle PT_GNU_RELRO.
ld/
	* genscripts.sh: Generate -z combreloc -z now -z relro scripts
	for binaries, -shared and -pie.
	* emulparams/elf_i386.sh (SEPARATE_GOTPLT): Set.
	* emulparams/elf_x86_64.sh (SEPARATE_GOTPLT): Set.
	* emulparams/elf32ppc.sh (OTHER_READWRITE_SECTIONS): Rename to...
	(OTHER_RELRO_SECTIONS): ... this.
	* ldlex.l (DATA_SEGMENT_RELRO_END): Add.
	* emultempl/elf32.em (gld${EMULATION_NAME}_handle_option): Handle
	-z relro and -z norelro.
	(gld${EMULATION_NAME}_list_options): Add it to usage.
	(gld${EMULATION_NAME}_get_script): Return -z combreloc -z now
	-z relro scripts when appropriate.
	* scripttempl/elf.sc: Unset SEPARATE_GOTPLT if RELRO_NOW is set.
	Create separate .got.plt section if SEPARATE_GOTPLT.
	Move sections which are only written during relocation handling
	to the beginning of RW segment.  If NO_SMALL_DATA, move .got
	before .data.  Add DATA_SEGMENT_RELRO_END directive.
	Include OTHER_RELRO_SECTIONS.
	* ldgram.y (DATA_SEGMENT_RELRO_END): Add.
	* ldexp.c (exp_print_token): Handle DATA_SEGMENT_RELRO_END.
	(fold_unary): Likewise.
	(fold_binary): Handle -z relro.
	* ldexp.h (struct exp_data_seg): Add exp_dataseg_relro_seen and
	exp_dataseg_relro_adjust phases.  Add relro_end field.
	* ldmain.c (main): Initialize link_info.relro to FALSE.
	* ldlang.c (lang_size_sections): Handle -z relro.
ld/testsuite/
	* ld-i386/tlspic.rd: Adjust for section reordering changes
	and removal of unneeded STT_SECTION symbols from .dynsym.
	* ld-i386/tlspic.dd: Likewise.
	* ld-i386/tlspic.sd: Likewise.
	* ld-i386/tlsbin.rd: Likewise.
	* ld-i386/tlsbinpic.s: Likewise.
	* ld-i386/tlsbin.dd: Likewise.
	* ld-i386/tlsbin.sd: Likewise.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlsnopic1.s: Likewise.
	* ld-i386/combreloc.d: Likewise.
	* ld-i386/tlsnopic.dd: Likewise.
	* ld-i386/tlsnopic.sd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
	* ld-x86-64/tlspic.dd: Likewise.
	* ld-x86-64/tlsbin.dd: Likewise.
	* ld-x86-64/tlspic.sd: Likewise.
	* ld-x86-64/tlsbin.sd: Likewise.
	* ld-x86-64/tlspic.td: Likewise.
	* ld-x86-64/tlsbin.td: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-s390/tlspic1.s: Likewise.
	* ld-s390/tlsbinpic.s: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlspic.dd: Likewise.
	* ld-s390/tlsbin.dd: Likewise.
	* ld-s390/tlsbin.sd: Likewise.
	* ld-s390/tlsbin.td: Likewise.
	* ld-s390/tlspic.sd: Likewise.
	* ld-s390/tlspic.td: Likewise.
	* ld-s390/tlspic1_64.s: Likewise.
	* ld-s390/tlsbinpic_64.s: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlspic_64.dd: Likewise.
	* ld-s390/tlsbin_64.dd: Likewise.
	* ld-s390/tlspic_64.sd: Likewise.
	* ld-s390/tlspic_64.td: Likewise.
	* ld-s390/tlsbin_64.td: Likewise.
	* ld-s390/tlsbin_64.sd: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlsso32.d: Likewise.
	* ld-powerpc/tlsso32.g: Likewise.
	* ld-powerpc/tlsso32.t: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso.g: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
	* ld-powerpc/tlstocso.g: Likewise.
	* ld-ia64/tlspic.rd: Likewise.
	* ld-ia64/tlspic.dd: Likewise.
	* ld-ia64/tlspic.sd: Likewise.
	* ld-ia64/tlspic.td: Likewise.
	* ld-ia64/tlsbin.rd: Likewise.
	* ld-ia64/tlsbin.sd: Likewise.
	* ld-ia64/tlsbin.td: Likewise.
	* ld-elfvsb/elfvsb.exp: XFAIL non-PIC load offset tests on s390x.
	* ld-shared/shared.exp: Likewise.
@
text
@d194 2
a195 2
case " $EMULATION_LIBPATH " in
  *" ${EMULATION_NAME} "*)
d197 1
a197 1
    test -f tmpdir/libpath.exp || \
d199 1
a199 2
    ;;
esac
@


1.18
log
@	* genscripts.sh: Fix typo.
@
text
@d286 8
d295 1
d311 1
a311 1
    COMBRELOC=ldscripts/${EMULATION_NAME}.xc.tmp
d317 8
d326 1
d344 1
a344 1
    COMBRELOC=ldscripts/${EMULATION_NAME}.xc.tmp
d350 8
d359 1
@


1.17
log
@	* genscripts.sh: Apply $LIBPATH_SUFFIX to $tool_lib and $libdir too.
@
text
@d136 1
a136 1
      *) libs="${libdir} ${libs}"
d140 1
a140 1
      *) libs="${tool_lib} ${libs}"
@


1.16
log
@	* Makefile.am (GENSCRIPTS_EXTRA, GEN_EXTRA_DEPENDS): Remove.  Use
	GENSCRIPTS and GEN_DEPENDS in place of these.
	* Makefile.in: Regenerate.
	* genscripts_extra.sh: Delete.  Merge extra functionality to..
	* genscripts.sh: ..here.

	* emulparams/gld960.sh (TEXT_START_ADDR, TARGET_PAGE_SIZE): Define.
	* emulparams/gld960coff.sh (TEXT_START_ADDR, TARGET_PAGE_SIZE): Ditto.
	* emulparams/lnk960.sh (TEXT_START_ADDR, TARGET_PAGE_SIZE): Ditto.
	* emulparams/m88kbcs.sh (TEXT_START_ADDR, TARGET_PAGE_SIZE): Ditto.
	* emulparams/vanilla.sh (TEXT_START_ADDR, TARGET_PAGE_SIZE): Ditto.
@
text
@d131 11
a141 2
  if [ x"$use_sysroot" != xyes ] ; then
    LIB_PATH2=${libdir}
d143 2
a144 1
  for lib in ${NATIVE_LIB_DIRS}; do
d174 1
a179 1

@


1.15
log
@	* genscripts.sh (libpath.exp): Only generate for first emulation.
	(LIB_PATH): Correct order of paths.  Don't add $tool_lib when
	already present or when LIB_PATH is set to ":".
@
text
@d4 14
a17 3
# Usage: genscripts.sh srcdir libdir exec_prefix \
#        host target target_alias default_emulation \
#        native_lib_dirs use_sysroot this_emulation tool_dir
d20 39
a58 4
# genscripts.sh /djm/ld-devo/devo/ld /usr/local/lib /usr/local \
#  sparc-sun-sunos4.1.3 sparc-sun-sunos4.1.3 sparc-sun-sunos4.1.3 sun4 \
#  "" no sun3 sparc-sun-sunos4.1.3
# produces sun3.x sun3.xbn sun3.xn sun3.xr sun3.xu em_sun3.c
d71 5
a75 3
shift
# Can't use ${1:-$target_alias} here due to an Ultrix shell bug.
if [ "x$1" = "x" ] ; then
d78 5
a82 1
  tool_lib=${exec_prefix}/$1/lib
d84 1
d87 1
a87 1
. ${srcdir}/emulparams/${EMULATION_NAME}.sh
d220 1
a220 1
# values specified in the emulparams/<emulation>.sh file or default.
d232 1
a232 1
  . ${srcdir}/emulparams/${EMULATION_NAME}.sh
d240 1
a240 1
  . ${srcdir}/emulparams/${EMULATION_NAME}.sh
d248 1
a248 1
  . ${srcdir}/emulparams/${EMULATION_NAME}.sh
d256 1
a256 1
  . ${srcdir}/emulparams/${EMULATION_NAME}.sh
d263 1
a263 1
  . ${srcdir}/emulparams/${EMULATION_NAME}.sh
d272 1
a272 1
    . ${srcdir}/emulparams/${EMULATION_NAME}.sh
d286 1
a286 1
    . ${srcdir}/emulparams/${EMULATION_NAME}.sh
d294 1
a294 1
      . ${srcdir}/emulparams/${EMULATION_NAME}.sh
d310 1
a310 1
    . ${srcdir}/emulparams/${EMULATION_NAME}.sh
d318 1
a318 1
      . ${srcdir}/emulparams/${EMULATION_NAME}.sh
@


1.14
log
@bfd/
	* elflink.h (elf_link_add_object_symbols): Use !info->executable
	instead of info->shared where appropriate.
	(bfd_elfNN_size_dynamic_sections, elf_link_output_extsym): Likewise.
	* elflink.c (_bfd_elf_create_got_section): Likewise.
	(_bfd_elf_link_create_dynamic_sections): Likewise.
	(_bfd_elf_link_assign_sym_version): Likewise.
	* elf32-i386.c (elf_i386_size_dynamic_sections): Create .interp section
	and DT_DEBUG dynamic tag even for position independent executables.
	* elf32-ppc.c (ppc_elf_size_dynamic_sections): Likewise.
	* elf32-s390.c (elf_s390_size_dynamic_sections: Likewise.
	* elf64-ppc.c (ppc64_elf_size_dynamic_sections: Likewise.
	* elf64-s390.c (elf_s390_size_dynamic_sections: Likewise.
	* elf64-x86-64.c (elf64_x86_64_size_dynamic_sections: Likewise.
	* elfxx-ia64.c (elfNN_ia64_size_dynamic_sections: Likewise.
	* elf32-sparc.c (elf32_sparc_size_dynamic_sections: Likewise.
	* elf64-alpha.c (elf64_alpha_size_dynamic_sections: Likewise.
	* elf64-sparc.c (sparc64_elf_size_dynamic_sections: Likewise.
include/
	* bfdlink.h (struct bfd_link_info): Add pie and executable
	bits.
ld/
	* lexsup.c (OPTION_PIE): Define.
	(ld_options): Add -pie and --pic-executable options.
	(parse_args): Handle OPTION_PIE.
	* ldmain.c (main): Initialize link_info.pie and
	link_info.executable.
	* genscripts.sh: Generate PIE scripts.
	* ld.texinfo: Document -pie and --pic-executable options.
	* emultempl/elf32.em (gld${EMULATION_NAME}_after_open):
	(gld${EMULATION_NAME}_place_orphan): Likewise.
	(gld${EMULATION_NAME}_get_script): Include PIE scripts.
	* scripttempl/elf.sc: In PIE scripts set . the same way as in
	shared scripts.
	* emulparams/elf_i386.sh (GENERATE_PIE_SCRIPT): Set to yes.
	* emulparams/elf64_ia64.sh (GENERATE_PIE_SCRIPT): Likewise.
	* emulparams/elf32ppc.sh (GENERATE_PIE_SCRIPT): Likewise.
	* emulparams/elf64ppc.sh (GENERATE_PIE_SCRIPT): Likewise.
	* emulparams/elf_x86_64.sh (GENERATE_PIE_SCRIPT): Likewise.
	* emulparams/elf_s390.sh (GENERATE_PIE_SCRIPT): Likewise.
	* emulparams/elf32_sparc.sh (GENERATE_PIE_SCRIPT): Likewise.
	* emulparams/elf64_sparc.sh (GENERATE_PIE_SCRIPT): Likewise.
	* emulparams/elf64alpha.sh (GENERATE_PIE_SCRIPT): Likewise.
	* emulparams/elf64_s390.sh (GENERATE_PIE_SCRIPT): Likewise.
	* emulparams/elf_i386.sh (GENERATE_PIE_SCRIPT): Likewise.
@
text
@d77 1
d79 1
a79 1
    LIB_PATH=${libdir}
a80 1
  LIB_PATH2=""
d98 1
a98 1
      case :${LIB_PATH}${LIB_PATH2}: in
d100 2
a101 1
        *) LIB_PATH2=${LIB_PATH2}:${lib} ;;
d104 4
a107 4
      case :${LIB_PATH}: in
        *:${lib}:*) ;;
        ::) LIB_PATH=${lib} ;;
        *) LIB_PATH=${LIB_PATH}:${lib} ;;
d111 4
a114 1
  LIB_PATH=${LIB_PATH}${LIB_PATH2}
d119 1
a119 1
# sysrooted configurations.
d121 5
a125 1
  LIB_PATH=${tool_lib}:${LIB_PATH}
d134 1
a134 1
    rm -f tmpdir/libpath
@


1.13
log
@ld/

2003-05-30  H.J. Lu <hongjiu.lu@@intel.com>

	* genscripts.sh: Create tmpdir/libpath.exp.

ld/testsuite/

2003-05-30  H.J. Lu <hongjiu.lu@@intel.com>

	* config/default.exp: Load tmpdir/libpath.exp.
	(gcc_ld_flag): Set from $libpath.
@
text
@d239 25
@


1.12
log
@	* genscripts.sh (LIB_PATH): Don't append LIBPATH_SUFFIX to paths
	which already have it.  Avoid duplicates.
@
text
@d122 9
@


1.11
log
@	* Makefile.am (eelf32iq10.c): Fix tab/whitespace mixup.

	* Makefile.am (ldmain.o): Add @@TARGET_SYSTEM_ROOT_DEFINE@@.
	(GENSCRIPTS): Add @@use_sysroot@@.
	* Makefile.in: Regenerated.
	* configure.host: Move setting of NATIVE_LIB_DIRS to...
	* configure.tgt: ... here.  Use ${target} instead of ${host}
	for NATIVE_LIB_DIRS.
	* configure.in: Add --with-sysroot.
	* configure: Regenerated.
	* genscripts.sh: Accept use_sysroot option.  Set new variables
	NATIVE and USE_LIBPATH.  Prepend "=" to directory names if
	$use_sysroot.  Don't search $tool_lib if $use_sysroot.
	* ldfile.c (ldfile_add_library_path): Handle leading '='.
	* ldmain.c (TARGET_SYSTEM_ROOT): Define if not defined.
	(ld_sysroot): New variable.
	(main): Initialize ld_sysroot.
	* ldmain.h (ld_sysroot): New extern.
	* emultempl/elf32.em: Use NATIVE and USE_LIBPATH instead of
	searching $EMULATION_LIBPATH.
	(gld${EMULATION_NAME}_add_sysroot): New function.
	(gld${EMULATION_NAME}_check_ld_so_conf): Use it.  Honor ld_sysroot.
	(gld${EMULATION_NAME}_after_open): Likewise.  Only search
	environment variables if $NATIVE.
	* ld.texinfo (Options): Mention "=" prefix in the description of -L.
	* NEWS: Mention --with-sysroot.

	* emulparams/elf32bmipn32-defs.sh: Set NATIVE and LIBPATH_SUFFIX
	instead of setting LIB_PATH.
	* emulparams/elf32ppc.sh: Likewise.
	* emulparams/elf64_s390.sh: Likewise.
	* emulparams/elf64_sparc.sh: Likewise.
	* emulparams/elf64ppc.sh: Likewise.
	* emulparams/elf_x86_64.sh: Likewise.

	* emulparams/elf64_aix.sh: Add "=" prefixes to LIB_PATH.
	* emulparams/elf64hppa.sh: Add "=" prefixes to LIB_PATH.
@
text
@d80 1
d86 5
a90 4
    case :${LIB_PATH}: in
      *:${lib}:*) ;;
      ::) LIB_PATH=${lib} ;;
      *) LIB_PATH=${LIB_PATH}:${lib} ;;
d92 17
d110 1
a110 3
  if test -n "$LIBPATH_SUFFIX" ; then
    LIB_PATH=`echo ${LIB_PATH}: | sed -e s,:,${LIBPATH_SUFFIX}:,g`$LIB_PATH
  fi
@


1.10
log
@	* genscripts.sh (SEGMENT_SIZE): Use MAXPAGESIZE before
	TARGET_PAGE_SIZE.
	* scripttempl/elf.sc (DATA_SEGMENT_ALIGN): Incorporate
	SEGMENT_SIZE alignment.
	* emulparams/elf64ppc.sh (DATA_ADDR): Delete.
	(SEGMENT_SIZE): Define.
@
text
@d6 1
a6 1
#        native_lib_dirs this_emulation tool_dir
d11 1
a11 1
#  "" sun3 sparc-sun-sunos4.1.3
d22 1
a22 1
EMULATION_NAME=$9
d24 2
d42 22
d70 5
d76 13
a88 12
if [ "x${LIB_PATH}" = "x" ] ; then
  if [ "x${host}" = "x${target}" ] ; then
    case " $EMULATION_LIBPATH " in
      *" ${EMULATION_NAME} "*)
        # Native, and default or emulation requesting LIB_PATH.
	LIB_PATH=${libdir}
	for lib in ${NATIVE_LIB_DIRS}; do
	  case :${LIB_PATH}: in
	    *:${lib}:*) ;;
	    *) LIB_PATH=${LIB_PATH}:${lib} ;;
	  esac
	done
d90 3
d96 6
a101 2
# Always search $(tooldir)/lib, aka /usr/local/TARGET/lib.
LIB_PATH=${tool_lib}:${LIB_PATH}
@


1.9
log
@	* genscripts.sh (LIB_PATH): For native targets, concatenate $libdir
	and $NATIVE_LIB_DIRS.  Add $tool_lib before other libs.
	(LIB_SEARCH_DIRS): No need to use "tr".
	(COMPILE_IN): Only set for native targets.
	* configure.host (NATIVE_LIB_DIRS): Specify all native search dirs
	here, rather than adding lib:/usr/lib:/usr/local/lib in genscripts.sh.
	* configure.tgt (powerpc*): Set tdir_*.
	(powerpcle*): Correct targ_extra_emuls.
	* emulparams/elf32ppc.sh (LIB_PATH): Set up native 64 bit dirs.
	* emulparams/elf64ppc.sh (LIB_PATH): Likewise.
@
text
@d93 1
a93 1
SEGMENT_SIZE=${SEGMENT_SIZE-${TARGET_PAGE_SIZE}}
@


1.8
log
@	* genscripts.sh (LIB_SEARCH_DIRS): Quote path.
@
text
@a47 3
  # Cross, or native non-default emulation not requesting LIB_PATH.
  LIB_PATH=

d52 7
a58 10
        LIB_PATH=/lib:/usr/lib
        if [ -n "${NATIVE_LIB_DIRS}" ]; then
	  LIB_PATH=${LIB_PATH}:${NATIVE_LIB_DIRS}
        fi
        if [ "${libdir}" != /usr/lib ]; then
	  LIB_PATH=${LIB_PATH}:${libdir}
        fi
        if [ "${libdir}" != /usr/local/lib ] ; then
	  LIB_PATH=${LIB_PATH}:/usr/local/lib
        fi
d64 1
a64 1
LIB_PATH=${LIB_PATH}:${tool_lib}
d66 1
a66 1
LIB_SEARCH_DIRS=`echo ${LIB_PATH} | tr ':' ' ' | sed -e 's/\([^ ][^ ]*\)/SEARCH_DIR(\\"\1\\");/g'`
d178 3
a180 3
for i in $EMULATION_LIBPATH ; do
  test "$i" = "$EMULATION_NAME" && COMPILE_IN=true
done
@


1.7
log
@2001-10-05  H.J. Lu  <hjl@@gnu.org>

	* genscripts.sh: Fix a typo in the last change.
@
text
@d72 1
a72 1
LIB_SEARCH_DIRS=`echo ${LIB_PATH} | tr ':' ' ' | sed -e 's/\([^ ][^ ]*\)/SEARCH_DIR(\1);/g'`
@


1.7.2.1
log
@	Merge from mainline.
	2002-03-21  Albert Chin-A-Young  <china@@thewrittenword.com>
	* genscripts.sh (LIB_SEARCH_DIRS): Quote path.

	2002-03-20  Alan Modra  <amodra@@bigpond.net.au>
	* ldlang.c (ldlang_add_undef): If the output bfd has been opened,
	add the symbol to the linker hash table immediately.
	(lang_place_undefineds): Split symbol creation out..
	(insert_undefined): ..to here.

	2002-03-18  Alan Modra  <amodra@@bigpond.net.au>
	* ldmain.c (main): Move .text readonly flag fudges from here..
	* ldlang.c (lang_process): ..to here.

	2002-03-14  Alan Modra  <amodra@@bigpond.net.au>
	* ldlang.c (lang_check): Remove the word size check added in last
	change.  Treat emitrelocations case as for relocatable links.

	2002-03-13  Alan Modra  <amodra@@bigpond.net.au>
	* ldlang.c (lang_check): Do relocatable link checks first, so that
	warn_mismatch can't override.  Check compatible and word size too.

	2002-03-04  H.J. Lu <hjl@@gnu.org>
	* scripttempl/elf.sc: Put .preinit_array, .init_array and
	.fini_array in the data segment.

	2002-03-04  Alan Modra  <amodra@@bigpond.net.au>
	* scripttempl/elf.sc: Correct syntax errors in 2002-03-01 commit.

	2002-03-01  David Mosberger  <davidm@@hpl.hp.com>
	* scripttempl/elf.sc (SECTIONS): Add entries for .preinit_array,
	.init_array, and .fini_array.
@
text
@d72 1
a72 1
LIB_SEARCH_DIRS=`echo ${LIB_PATH} | tr ':' ' ' | sed -e 's/\([^ ][^ ]*\)/SEARCH_DIR(\\"\1\\");/g'`
@


1.6
log
@* genscripts.sh: Include a comment at the top of each generated
script, explaining its purpose.
@
text
@d153 1
a153 1
  ( echo "'/* Script for -z combreloc: combine and sort reloc sections */"
@


1.5
log
@	* elf-bfd.h (enum elf_reloc_type_class): New.
	(struct elf_backend_data): Add elf_backend_reloc_type_class.
	(_bfd_elf_reloc_type_class): New.
	* elfxx-target.h (elf_backend_reloc_type_class): Define.
	(elfNN_bed): Add elf_backend_reloc_type_class.
	* elf.c (_bfd_elf_reloc_type_class): New.
	* elf32-i386.c (elf_i386_check_relocs): Set DF_TEXTREL if the reloc
	is against read-only section.
	(elf_i386_size_dynamic_sections): Use DF_TEXTREL flag instead of
	looking up section names for DT_TEXTREL.
	(elf_i386_reloc_type_class): New.
	(elf_backend_reloc_type_class): Define.
	* elf32-sparc.c (elf32_sparc_check_relocs): Set DF_TEXTREL if the
	reloc is against read-only section.
	(elf32_sparc_size_dynamic_sections): Use DF_TEXTREL flag instead of
	looking up section names for DT_TEXTREL.
	(elf32_sparc_reloc_type_class): New.
	(elf_backend_reloc_type_class): Define.
	* elf64-sparc.c (sparc64_elf_check_relocs): Set DF_TEXTREL if the
	reloc is against read-only section.
	(sparc64_elf_size_dynamic_sections): Use DF_TEXTREL flag instead of
	looking up section names for DT_TEXTREL.
	(sparc64_elf_reloc_type_class): New.
	(elf_backend_reloc_type_class): Define.
	* elfxx-ia64.c (struct elfNN_ia64_link_hash_table): Add reltext field.
	(elfNN_ia64_hash_table_create): Clear ia64_info.
	(get_reloc_section): Set DF_TEXTREL if the reloc is against read-only
	section.
	(elfNN_ia64_size_dynamic_sections): Use ia64_info->reltext flag
	instead of looking up section names for DT_TEXTREL.
	(elfNN_ia64_reloc_type_class): New.
	(elf_backend_reloc_type_class): Define.
	* elflink.h (size_dynamic_sections): Add spare DT_NULL tags.
	(struct elf_link_sort_rela): New.
	(elf_link_sort_cmp1, elf_link_sort_cmp2, elf_link_sort_relocs): New.
	(elf_bfd_final_link): Call elf_link_sort_relocs.
	Convert one spare DT_NULL into DT_RELCOUNT resp. DT_RELACOUNT if
	necessary.

	* bfdlink.h (struct bfd_link_info): Add combreloc and
	spare_dynamic_tags fields.

	* emultempl/elf32.em (place_orphan): Place orphan .rel* sections
	into .rel.dyn resp. .rela.dyn if combreloc.
	(get_script): If .x linker script is equal to .xn, only put it
	once into the binary.
	Add .xc and .xsc scripts.
	(parse_args): Handle -z combreloc and -z nocombreloc.
	* scripttempl/elf.sc (.rela.sbss): Fix a typo.
	For .xc and .xsc scripts put all .rel* or .rela* input sections
	but .rel*.plt and PLT-like sections into .rel.dyn resp. .rela.dyn.
	* genscripts.sh (GENERATE_COMBRELOC_SCRIPT): Set if SCRIPT_NAME
	is elf.
	Strip trailing whitespace from script.
	Generate .xc and .xsc scripts if requested.
	* ldmain.c (main): Initialize link_info.combreloc and
	link_info.spare_dynamic_tags.
	* lexsup.c (OPTION_SPARE_DYNAMIC_TAGS): Define.
	(ld_options): Add --spare-dynamic-tags option.
	(parse_args): Likewise.
	* ld.texinfo: Document -z combreloc and -z nocombreloc.
	* ldint.texinfo: Document .xc and .xsc linker scripts.
	* NEWS: Add notes about -z combreloc and SHF_MERGE.
@
text
@d113 2
a114 1
( . ${srcdir}/emulparams/${EMULATION_NAME}.sh
d121 2
a122 1
( . ${srcdir}/emulparams/${EMULATION_NAME}.sh
d129 2
a130 1
( . ${srcdir}/emulparams/${EMULATION_NAME}.sh
d137 2
a138 1
( . ${srcdir}/emulparams/${EMULATION_NAME}.sh
d144 2
a145 1
( . ${srcdir}/emulparams/${EMULATION_NAME}.sh
d153 2
a154 1
  ( . ${srcdir}/emulparams/${EMULATION_NAME}.sh
d166 3
a168 1
  ( . ${srcdir}/emulparams/${EMULATION_NAME}.sh
d175 2
a176 1
    ( . ${srcdir}/emulparams/${EMULATION_NAME}.sh
@


1.4
log
@	* genscripts.sh: Source the emulparams script before each output
	script is generated so that variables like `RELOCATING' may affect
	variables defined in the emulparams script.
@
text
@d87 11
d115 1
a115 1
) | sed -e '/^ *$/d' > ldscripts/${EMULATION_NAME}.xr
d122 1
a122 1
) | sed -e '/^ *$/d' > ldscripts/${EMULATION_NAME}.xu
d129 1
a129 1
) | sed -e '/^ *$/d' > ldscripts/${EMULATION_NAME}.x
d136 1
a136 1
) | sed -e '/^ *$/d' > ldscripts/${EMULATION_NAME}.xn
d142 12
a153 1
) | sed -e '/^ *$/d' > ldscripts/${EMULATION_NAME}.xbn
d162 11
a172 1
  ) | sed -e '/^ *$/d' > ldscripts/${EMULATION_NAME}.xs
@


1.3
log
@Allow Maciej to select weird --libdir options and still select
tooldir correctly.
@
text
@d102 3
a104 2
(. ${srcdir}/scripttempl/${SCRIPT_NAME}.sc) | sed -e '/^ *$/d' > \
  ldscripts/${EMULATION_NAME}.xr
d109 3
a111 2
(. ${srcdir}/scripttempl/${SCRIPT_NAME}.sc) | sed -e '/^ *$/d' > \
  ldscripts/${EMULATION_NAME}.xu
d116 3
a118 2
(. ${srcdir}/scripttempl/${SCRIPT_NAME}.sc) | sed -e '/^ *$/d' > \
  ldscripts/${EMULATION_NAME}.x
d123 3
a125 2
(. ${srcdir}/scripttempl/${SCRIPT_NAME}.sc) | sed -e '/^ *$/d' > \
  ldscripts/${EMULATION_NAME}.xn
d129 3
a131 2
(. ${srcdir}/scripttempl/${SCRIPT_NAME}.sc) | sed -e '/^ *$/d' > \
  ldscripts/${EMULATION_NAME}.xbn
d138 3
a140 2
  (. ${srcdir}/scripttempl/${SCRIPT_NAME}.sc) | sed -e '/^ *$/d' > \
    ldscripts/${EMULATION_NAME}.xs
@


1.2
log
@        * Makefile.am (GENSCRIPTS): Pass EMULATION_LIBPATH, not EMUL.
        * configure.in (all_emuls): Add targ_extra_libpath.
        (all_libpath, EMULATION_LIBPATH): Define.
        * configure.tgt (powerpc-*-linux-gnu*): Define targ_extra_libpath.
        * genscripts.sh (LIB_PATH): Define if emulation in EMULATION_LIBPATH.
@
text
@d4 3
a6 2
# Usage: genscripts.sh srcdir libdir host target target_alias \
# default_emulation native_lib_dirs this_emulation tool_dir
d9 3
a11 2
# genscripts.sh /djm/ld-devo/devo/ld /usr/local/lib sparc-sun-sunos4.1.3 \
# sparc-sun-sunos4.1.3 sparc-sun-sunos4.1.3 sun4 "" sun3 sparc-sun-sunos4.1.3
d16 14
a29 7
host=$3
target=$4
target_alias=$5
EMULATION_LIBPATH=$6
NATIVE_LIB_DIRS=$7
EMULATION_NAME=$8
tool_lib=`echo ${libdir} | sed -e 's|/lib$||'`/${9-$target_alias}/lib
@


1.1
log
@Initial revision
@
text
@d17 1
a17 1
DEFAULT_EMULATION=$6
d39 3
d43 14
a56 19
    if [ "x${DEFAULT_EMULATION}" = "x${EMULATION_NAME}" ] ; then
      # Native.
      LIB_PATH=/lib:/usr/lib
      if [ -n "${NATIVE_LIB_DIRS}" ]; then
	LIB_PATH=${LIB_PATH}:${NATIVE_LIB_DIRS}
      fi
      if [ "${libdir}" != /usr/lib ]; then
	LIB_PATH=${LIB_PATH}:${libdir}
      fi
      if [ "${libdir}" != /usr/local/lib ] ; then
	LIB_PATH=${LIB_PATH}:/usr/local/lib
      fi
    else
      # Native, but not default emulation.
      LIB_PATH=
    fi
  else
    # Cross.
    LIB_PATH=
d128 3
a130 1
test "$DEFAULT_EMULATION" = "$EMULATION_NAME" && COMPILE_IN=true
@


1.1.1.1
log
@19990502 sourceware import
@
text
@@

