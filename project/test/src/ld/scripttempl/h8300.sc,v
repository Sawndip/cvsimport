head	1.6;
access;
symbols
	binutils-2_24-branch:1.6.0.10
	binutils-2_24-branchpoint:1.6
	binutils-2_21_1:1.6
	binutils-2_23_2:1.6
	binutils-2_23_1:1.6
	binutils-2_23:1.6
	binutils-2_23-branch:1.6.0.8
	binutils-2_23-branchpoint:1.6
	binutils-2_22_branch:1.6.0.6
	binutils-2_22:1.6
	binutils-2_22-branch:1.6.0.4
	binutils-2_22-branchpoint:1.6
	binutils-2_21:1.6
	binutils-2_21-branch:1.6.0.2
	binutils-2_21-branchpoint:1.6
	binutils-2_20_1:1.5.28.1
	binutils-2_20:1.5.28.1
	binutils-arc-20081103-branch:1.5.0.30
	binutils-arc-20081103-branchpoint:1.5
	binutils-2_20-branch:1.5.0.28
	binutils-2_20-branchpoint:1.5
	dje-cgen-play1-branch:1.5.0.26
	dje-cgen-play1-branchpoint:1.5
	arc-20081103-branch:1.5.0.24
	arc-20081103-branchpoint:1.5
	binutils-2_19_1:1.5
	binutils-2_19:1.5
	binutils-2_19-branch:1.5.0.22
	binutils-2_19-branchpoint:1.5
	binutils-2_18:1.5
	binutils-2_18-branch:1.5.0.20
	binutils-2_18-branchpoint:1.5
	binutils-csl-coldfire-4_1-32:1.5
	binutils-csl-sourcerygxx-4_1-32:1.5
	binutils-csl-innovasic-fido-3_4_4-33:1.5
	binutils-csl-sourcerygxx-3_4_4-32:1.5
	binutils-csl-coldfire-4_1-30:1.5
	binutils-csl-sourcerygxx-4_1-30:1.5
	binutils-csl-coldfire-4_1-28:1.5
	binutils-csl-sourcerygxx-4_1-29:1.5
	binutils-csl-sourcerygxx-4_1-28:1.5
	binutils-csl-arm-2006q3-27:1.5
	binutils-csl-sourcerygxx-4_1-27:1.5
	binutils-csl-arm-2006q3-26:1.5
	binutils-csl-sourcerygxx-4_1-26:1.5
	binutils-csl-sourcerygxx-4_1-25:1.5
	binutils-csl-sourcerygxx-4_1-24:1.5
	binutils-csl-sourcerygxx-4_1-23:1.5
	binutils-csl-sourcerygxx-4_1-21:1.5
	binutils-csl-arm-2006q3-21:1.5
	binutils-csl-sourcerygxx-4_1-22:1.5
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.5
	binutils-csl-sourcerygxx-4_1-20:1.5
	binutils-csl-arm-2006q3-19:1.5
	binutils-csl-sourcerygxx-4_1-19:1.5
	binutils-csl-sourcerygxx-4_1-18:1.5
	binutils-csl-renesas-4_1-9:1.5
	binutils-csl-sourcerygxx-3_4_4-25:1.5
	binutils-csl-renesas-4_1-8:1.5
	binutils-csl-renesas-4_1-7:1.5
	binutils-csl-renesas-4_1-6:1.5
	binutils-csl-sourcerygxx-4_1-17:1.5
	binutils-csl-sourcerygxx-4_1-14:1.5
	binutils-csl-sourcerygxx-4_1-15:1.5
	binutils-csl-sourcerygxx-4_1-13:1.5
	binutils-2_17:1.5
	binutils-csl-sourcerygxx-4_1-12:1.5
	binutils-csl-sourcerygxx-3_4_4-21:1.5
	binutils-csl-wrs-linux-3_4_4-24:1.5
	binutils-csl-wrs-linux-3_4_4-23:1.5
	binutils-csl-sourcerygxx-4_1-9:1.5
	binutils-csl-sourcerygxx-4_1-8:1.5
	binutils-csl-sourcerygxx-4_1-7:1.5
	binutils-csl-arm-2006q1-6:1.5
	binutils-csl-sourcerygxx-4_1-6:1.5
	binutils-csl-wrs-linux-3_4_4-22:1.5
	binutils-csl-coldfire-4_1-11:1.5
	binutils-csl-sourcerygxx-3_4_4-19:1.5
	binutils-csl-coldfire-4_1-10:1.5
	binutils-csl-sourcerygxx-4_1-5:1.5
	binutils-csl-sourcerygxx-4_1-4:1.5
	binutils-csl-wrs-linux-3_4_4-21:1.5
	binutils-csl-morpho-4_1-4:1.5
	binutils-csl-sourcerygxx-3_4_4-17:1.5
	binutils-csl-wrs-linux-3_4_4-20:1.5
	binutils-2_17-branch:1.5.0.18
	binutils-2_17-branchpoint:1.5
	binutils-csl-2_17-branch:1.5.0.16
	binutils-csl-2_17-branchpoint:1.5
	binutils-csl-gxxpro-3_4-branch:1.5.0.14
	binutils-csl-gxxpro-3_4-branchpoint:1.5
	binutils-2_16_1:1.5
	binutils-csl-arm-2005q1b:1.5
	binutils-2_16:1.5
	binutils-csl-arm-2005q1a:1.5
	binutils-csl-arm-2005q1-branch:1.5.0.12
	binutils-csl-arm-2005q1-branchpoint:1.5
	binutils-2_16-branch:1.5.0.10
	binutils-2_16-branchpoint:1.5
	csl-arm-2004-q3d:1.5
	csl-arm-2004-q3:1.5
	binutils-2_15:1.5
	binutils-2_15-branchpoint:1.5
	csl-arm-2004-q1a:1.5
	csl-arm-2004-q1:1.5
	binutils-2_15-branch:1.5.0.8
	cagney_bfdfile-20040213-branch:1.5.0.6
	cagney_bfdfile-20040213-branchpoint:1.5
	cagney_bigcore-20040122-branch:1.5.0.4
	cagney_bigcore-20040122-branchpoint:1.5
	csl-arm-2003-q4:1.5
	binutils-2_14:1.5
	binutils-2_14-branch:1.5.0.2
	binutils-2_14-branchpoint:1.5
	binutils-2_13_2_1:1.4
	binutils-2_13_2:1.4
	binutils-2_13_1:1.4
	binutils-2_13:1.4
	binutils-2_13-branchpoint:1.4
	binutils-2_13-branch:1.4.0.6
	binutils-2_12_1:1.4
	binutils-2_12:1.4
	binutils-2_12-branch:1.4.0.4
	binutils-2_12-branchpoint:1.4
	cygnus_cvs_20020108_pre:1.4
	binutils-2_11_2:1.4
	binutils-2_11_1:1.4
	binutils-2_11:1.4
	x86_64versiong3:1.4
	binutils-2_11-branch:1.4.0.2
	binutils-2_10_1:1.1.1.1
	binutils-2_10:1.1.1.1
	binutils-2_10-branch:1.1.1.1.0.2
	binutils-2_10-branchpoint:1.1.1.1
	binutils_latest_snapshot:1.6
	repo-unification-2000-02-06:1.1.1.1
	binu_ss_19990721:1.1.1.1
	binu_ss_19990602:1.1.1.1
	binu_ss_19990502:1.1.1.1
	cygnus:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2009.09.09.11.59.14;	author amodra;	state Exp;
branches;
next	1.5;

1.5
date	2003.04.24.12.36.08;	author nickc;	state Exp;
branches
	1.5.28.1;
next	1.4;

1.4
date	2001.01.10.11.42.27;	author kazu;	state Exp;
branches;
next	1.3;

1.3
date	2000.11.14.19.17.52;	author kazu;	state Exp;
branches;
next	1.2;

1.2
date	2000.11.03.19.49.05;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	99.05.03.07.29.08;	author rth;	state Exp;
branches
	1.1.1.1;
next	;

1.5.28.1
date	2009.09.09.12.00.22;	author amodra;	state Exp;
branches;
next	;

1.1.1.1
date	99.05.03.07.29.08;	author rth;	state Exp;
branches
	1.1.1.1.2.1;
next	;

1.1.1.1.2.1
date	2000.11.08.22.57.05;	author nickc;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Only provide ENTRY on final link.
@
text
@TORS=".tors :
	{
	  ___ctors = . ;
	  *(.ctors)
	  ___ctors_end = . ;
	  ___dtors = . ;
	  *(.dtors)
	  ___dtors_end = . ;
	} > ram"

cat <<EOF
OUTPUT_FORMAT("${OUTPUT_FORMAT}")
OUTPUT_ARCH(${ARCH})
${RELOCATING+ENTRY ("_start")}

MEMORY
{
	/* 0xc4 is a magic entry.  We should have the linker just
	   skip over it one day...  */
	vectors : o = 0x0000, l = 0xc4
	magicvectors : o = 0xc4, l = 0x3c
	ram    : o = 0x0100, l = 0xfdfc
	/* The stack starts at the top of main ram.  */
	topram : o = 0xfefc, l = 0x4
	/* At the very top of the address space is the 8-bit area.  */
	eight : o = 0xff00, l = 0x100
}

SECTIONS
{
.vectors :
	{
	  /* Use something like this to place a specific
	     function's address into the vector table.

	     SHORT (ABSOLUTE (_foobar)).  */

	  *(.vectors)
	} ${RELOCATING+ > vectors}

.init :
	{ 
	  *(.init)
	} ${RELOCATING+ > ram}

.text :
	{
	  *(.rodata)
	  *(.text)
	  *(.text.*)
	  *(.strings)
   	  ${RELOCATING+ _etext = . ; }
	} ${RELOCATING+ > ram}

${CONSTRUCTING+${TORS}}

.data :
	{
	  *(.data)
	  *(.data.*)
	  *(.tiny)
	  ${RELOCATING+ _edata = . ; }
	} ${RELOCATING+ > ram}

.bss :
	{
	  ${RELOCATING+ _bss_start = . ;}
	  *(.bss)
	  *(COMMON)
	  ${RELOCATING+ _end = . ;  }
	} ${RELOCATING+ >ram}

.stack :
	{
	  ${RELOCATING+ _stack = . ; }
	  *(.stack)
	} ${RELOCATING+ > topram}

.eight :
	{
	  *(.eight)
	} ${RELOCATING+ > eight}

.stab 0 ${RELOCATING+(NOLOAD)} :
	{
	  [ .stab ]
	}

.stabstr 0 ${RELOCATING+(NOLOAD)} :
	{
	  [ .stabstr ]
	}
}
EOF
@


1.5
log
@Add support for h8300hn and h8300sn
@
text
@d14 1
a14 1
ENTRY("_start")
@


1.5.28.1
log
@Only provide ENTRY on final link.
@
text
@d14 1
a14 1
${RELOCATING+ENTRY ("_start")}
@


1.4
log
@2001-01-10  Kazu Hirata  <kazu@@hxi.com>

	* scripttempl/h8300.sc: Fix formatting.  Fix a comment typo.
	* scripttempl/h8300h.sc: Fix formatting.
	* scripttempl/h8300s.sc: Likewise.
@
text
@d41 5
d50 1
d60 1
@


1.3
log
@2000-11-14  Kazu Hirata  <kazu@@hxi.com>

	* scripttempl/h8300.sc: Fix formatting.
	* scripttempl/h8300h.sc: Likewise.
	* scripttempl/h8300s.sc: Likewise.
@
text
@d19 1
a19 1
	   skip over it one day... */
d25 1
a25 1
	/* At the very to of the address space is the 8-bit area.  */
d29 2
a30 2
SECTIONS 				
{ 					
d34 1
a34 1
	     function's address into the vector table. 
d42 3
a44 3
	{ 					
	  *(.rodata) 				
	  *(.text) 				
d48 1
a48 1
	
d50 1
a50 1
	
d57 1
a57 1
	
d65 1
a65 1
	
d71 1
a71 1
	
d76 1
a76 1
	
d81 1
a81 1
	
@


1.2
log
@Use ${CONSTRUCTING...} to enclose constructors and destructors.
@
text
@d2 8
a9 8
  {
    ___ctors = . ;
    *(.ctors)
    ___ctors_end = . ;
    ___dtors = . ;
    *(.dtors)
    ___dtors_end = . ;
  } > ram"
d32 1
a32 1
	 {
d39 1
a39 1
        } ${RELOCATING+ > vectors}
d49 1
a49 1
	${CONSTRUCTING+${TORS}}
@


1.1
log
@Initial revision
@
text
@d1 10
d31 4
a34 3
.vectors : {
	/* Use something like this to place a specific function's address
	   into the vector table. 
d36 1
a36 1
	SHORT(ABSOLUTE(_foobar)) */
d38 1
a38 1
	*(.vectors)
d41 6
a46 13
.text :	{ 					
	*(.rodata) 				
	*(.text) 				
	*(.strings)
   	${RELOCATING+ _etext = . ; }
	} ${RELOCATING+ > ram}
.tors : {
	___ctors = . ;
	*(.ctors)
	___ctors_end = . ;
	___dtors = . ;
	*(.dtors)
	___dtors_end = . ;
d48 8
a55 4
.data : {
	*(.data)
	*(.tiny)
	${RELOCATING+ _edata = . ; }
d57 7
a63 5
.bss : {
	${RELOCATING+ _bss_start = . ;}
	*(.bss)
	*(COMMON)
	${RELOCATING+ _end = . ;  }
d65 5
a69 3
.stack : {
	${RELOCATING+ _stack = . ; }
	*(.stack)
d71 4
a74 2
.eight : {
	*(.eight)
d76 4
a79 2
.stab 0 ${RELOCATING+(NOLOAD)} : {
	[ .stab ]
d81 4
a84 2
.stabstr 0 ${RELOCATING+(NOLOAD)} : {
	[ .stabstr ]
@


1.1.1.1
log
@19990502 sourceware import
@
text
@@


1.1.1.1.2.1
log
@Use ${CONSTRUCTING...} to enclose constructors and destructors.
@
text
@a0 10
TORS=".tors :
  {
    ___ctors = . ;
    *(.ctors)
    ___ctors_end = . ;
    ___dtors = . ;
    *(.dtors)
    ___dtors_end = . ;
  } > ram"

d21 3
a23 4
.vectors :
	 {
	  /* Use something like this to place a specific
	     function's address into the vector table. 
d25 1
a25 1
	     SHORT (ABSOLUTE (_foobar)).  */
d27 1
a27 1
	  *(.vectors)
d30 13
a42 6
.text :
	{ 					
	  *(.rodata) 				
	  *(.text) 				
	  *(.strings)
   	  ${RELOCATING+ _etext = . ; }
d44 4
a47 8
	
	${CONSTRUCTING+${TORS}}
	
.data :
	{
	  *(.data)
	  *(.tiny)
	  ${RELOCATING+ _edata = . ; }
d49 5
a53 7
	
.bss :
	{
	  ${RELOCATING+ _bss_start = . ;}
	  *(.bss)
	  *(COMMON)
	  ${RELOCATING+ _end = . ;  }
d55 3
a57 5
	
.stack :
	{
	  ${RELOCATING+ _stack = . ; }
	  *(.stack)
d59 2
a60 4
	
.eight :
	{
	  *(.eight)
d62 2
a63 4
	
.stab 0 ${RELOCATING+(NOLOAD)} :
	{
	  [ .stab ]
d65 2
a66 4
	
.stabstr 0 ${RELOCATING+(NOLOAD)} :
	{
	  [ .stabstr ]
@


