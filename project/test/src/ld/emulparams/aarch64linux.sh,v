head	1.3;
access;
symbols
	binutils-2_24-branch:1.3.0.2
	binutils-2_24-branchpoint:1.3
	binutils-2_23_2:1.1.2.1
	binutils-2_23_1:1.1.2.1
	binutils-2_23:1.1.2.1
	binutils-2_23-branch:1.1.0.2
	binutils_latest_snapshot:1.3;
locks; strict;
comment	@# @;


1.3
date	2013.04.24.17.22.31;	author yufeng;	state Exp;
branches;
next	1.2;

1.2
date	2013.03.14.08.56.05;	author jakub;	state Exp;
branches;
next	1.1;

1.1
date	2012.08.13.14.52.51;	author nickc;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2012.08.16.09.21.51;	author nickc;	state Exp;
branches;
next	;


desc
@@


1.3
log
@ld/

	* emulparams/aarch64elf.sh: Define ELFSIZE=64.
	* emulparams/aarch64linux.sh: Ditto.
	* emultempl/aarch64elf.em (aarch64_elf_before_allocation):
	Replace elf64 with elf${ELFSIZE}.
	(elf64_aarch64_add_stub_section): Likewise.
	(build_section_lists): Likewise.
	(gld${EMULATION_NAME}_after_allocation): Likewise.
	(gld${EMULATION_NAME}_finish): Likewise.
	(aarch64_elf_create_output_section_statements): Likewise.
@
text
@ARCH=aarch64
MACHINE=
NOP=0

SCRIPT_NAME=elf
ELFSIZE=64
OUTPUT_FORMAT="elf64-littleaarch64"
BIG_OUTPUT_FORMAT="elf64-bigaarch64"
LITTLE_OUTPUT_FORMAT="elf64-littleaarch64"
NO_REL_RELOCS=yes

TEMPLATE_NAME=elf32
EXTRA_EM_FILE=aarch64elf

GENERATE_SHLIB_SCRIPT=yes
GENERATE_PIE_SCRIPT=yes

MAXPAGESIZE="CONSTANT (MAXPAGESIZE)"
COMMONPAGESIZE="CONSTANT (COMMONPAGESIZE)"
SEPARATE_GOTPLT=24
IREL_IN_PLT=

TEXT_START_ADDR=0x400000

DATA_START_SYMBOLS='PROVIDE (__data_start = .);';

# AArch64 does not support .s* sections.
NO_SMALL_DATA=yes

OTHER_BSS_SYMBOLS='__bss_start__ = .;'
OTHER_BSS_END_SYMBOLS='_bss_end__ = . ; __bss_end__ = . ;'
OTHER_END_SYMBOLS='__end__ = . ;'

OTHER_SECTIONS='.note.gnu.arm.ident 0 : { KEEP (*(.note.gnu.arm.ident)) }'
ATTRS_SECTIONS='.ARM.attributes 0 : { KEEP (*(.ARM.attributes)) KEEP (*(.gnu.attributes)) }'
# Ensure each PLT entry is aligned to a cache line.
PLT=".plt          ${RELOCATING-0} : ALIGN(16) { *(.plt)${IREL_IN_PLT+ *(.iplt)} }"

# Linux modifies the default library search path to first include
# a 64-bit specific directory.
case "$target" in
  aarch64*-linux*)
    case "$EMULATION_NAME" in
      aarch64linux*) LIBPATH_SUFFIX=64 ;;
    esac
    ;;
esac
@


1.2
log
@	* emulparams/aarch64linux.sh (LIBPATH_SUFFIX): Set to 64 for
	aarch64linux* emulations.
@
text
@d6 1
@


1.1
log
@Add support for 64-bit ARM architecture: AArch64
@
text
@d37 10
@


1.1.2.1
log
@Add support for 64-bit ARM architecture: aarch64
@
text
@@

