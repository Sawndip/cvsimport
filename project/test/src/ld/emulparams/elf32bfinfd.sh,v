head	1.7;
access;
symbols
	binutils-2_24-branch:1.7.0.8
	binutils-2_24-branchpoint:1.7
	binutils-2_21_1:1.6
	binutils-2_23_2:1.7
	binutils-2_23_1:1.7
	binutils-2_23:1.7
	binutils-2_23-branch:1.7.0.6
	binutils-2_23-branchpoint:1.7
	binutils-2_22_branch:1.7.0.4
	binutils-2_22:1.7
	binutils-2_22-branch:1.7.0.2
	binutils-2_22-branchpoint:1.7
	binutils-2_21:1.6
	binutils-2_21-branch:1.6.0.4
	binutils-2_21-branchpoint:1.6
	binutils-2_20_1:1.6
	binutils-2_20:1.6
	binutils-arc-20081103-branch:1.5.0.8
	binutils-arc-20081103-branchpoint:1.5
	binutils-2_20-branch:1.6.0.2
	binutils-2_20-branchpoint:1.6
	dje-cgen-play1-branch:1.5.0.6
	dje-cgen-play1-branchpoint:1.5
	arc-20081103-branch:1.5.0.4
	arc-20081103-branchpoint:1.5
	binutils-2_19_1:1.5
	binutils-2_19:1.5
	binutils-2_19-branch:1.5.0.2
	binutils-2_19-branchpoint:1.5
	binutils-2_18:1.2
	binutils-2_18-branch:1.2.0.4
	binutils-2_18-branchpoint:1.2
	binutils-csl-coldfire-4_1-32:1.2.2.1
	binutils-csl-sourcerygxx-4_1-32:1.2.2.1
	binutils-csl-innovasic-fido-3_4_4-33:1.2.2.1
	binutils-csl-coldfire-4_1-30:1.2.2.1
	binutils-csl-sourcerygxx-4_1-30:1.2.2.1
	binutils-csl-coldfire-4_1-28:1.2.2.1
	binutils-csl-sourcerygxx-4_1-29:1.2.2.1
	binutils-csl-sourcerygxx-4_1-28:1.2.2.1
	binutils-csl-arm-2006q3-27:1.2.2.1
	binutils-csl-sourcerygxx-4_1-27:1.2.2.1
	binutils-csl-arm-2006q3-26:1.2.2.1
	binutils-csl-sourcerygxx-4_1-26:1.2.2.1
	binutils-csl-sourcerygxx-4_1-25:1.2.2.1
	binutils-csl-sourcerygxx-4_1-24:1.2.2.1
	binutils-csl-sourcerygxx-4_1-23:1.2.2.1
	binutils-csl-sourcerygxx-4_1-21:1.2.2.1
	binutils-csl-arm-2006q3-21:1.2.2.1
	binutils-csl-sourcerygxx-4_1-22:1.2.2.1
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.2.2.1
	binutils-csl-sourcerygxx-4_1-20:1.2.2.1
	binutils-csl-arm-2006q3-19:1.2.2.1
	binutils-csl-sourcerygxx-4_1-19:1.2.2.1
	binutils-csl-sourcerygxx-4_1-18:1.2.2.1
	binutils-csl-renesas-4_1-9:1.2.2.1
	binutils-csl-2_17-branch:1.2.0.2
	binutils-2_17:1.1
	binutils-2_17-branch:1.1.0.2
	binutils-2_17-branchpoint:1.1
	binutils_latest_snapshot:1.7;
locks; strict;
comment	@# @;


1.7
date	2010.11.15.22.30.47;	author vapier;	state Exp;
branches;
next	1.6;

1.6
date	2009.09.04.04.07.58;	author jiez;	state Exp;
branches;
next	1.5;

1.5
date	2008.07.15.13.09.47;	author jiez;	state Exp;
branches;
next	1.4;

1.4
date	2008.07.12.08.54.13;	author jiez;	state Exp;
branches;
next	1.3;

1.3
date	2008.07.11.19.24.39;	author jiez;	state Exp;
branches;
next	1.2;

1.2
date	2006.05.30.16.45.32;	author hjl;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2006.03.29.14.17.57;	author bernds;	state Exp;
branches;
next	;

1.2.2.1
date	2006.08.22.15.08.43;	author jsm28;	state Exp;
branches;
next	;


desc
@@


1.7
log
@blackfin: add support for L1 code/data flags

Add new linker options for marking programs to load into L1 memory
at runtime.  This needs new EF flag bits, so declare them.

Signed-off-by: Jie Zhang <jie.zhang@@analog.com>
Signed-off-by: Mike Frysinger <vapier@@gentoo.org>
@
text
@. ${srcdir}/emulparams/bfin.sh
unset STACK_ADDR
OUTPUT_FORMAT="elf32-bfinfdpic"
MAXPAGESIZE="CONSTANT (MAXPAGESIZE)"
TEMPLATE_NAME=elf32
GENERATE_SHLIB_SCRIPT=yes
GENERATE_PIE_SCRIPT=yes
EMBEDDED= # This gets us program headers mapped as part of the text segment.
OTHER_GOT_SYMBOLS=
OTHER_READONLY_SECTIONS="
  .rofixup        : {
    ${RELOCATING+__ROFIXUP_LIST__ = .;}
    *(.rofixup)
    ${RELOCATING+__ROFIXUP_END__ = .;}
  }
"
# 0xfeb00000, 0xfec00000, 0xff700000, 0xff800000, 0xff900000
# 0xffa00000 are also used in Dynamic linker and linux kernel.
# They need to be kept synchronized.
OTHER_SECTIONS="
  .l2.text 0xfeb00000	:
  {
    *(.l2.text)
  }
  .l2.data 0xfec00000	:
  {
    *(.l2.data)
  }
  .l1.data 0xff700000	:
  {
    *(.l1.data)
  }
  .l1.data.A 0xff800000	:
  {
    *(.l1.data.A)
  }
  .l1.data.B 0xff900000	:
  {
    *(.l1.data.B)
  }
  .l1.text  0xffa00000	:
  {
    *(.l1.text)
  }
"
EXTRA_EM_FILE=bfin
@


1.6
log
@	* emulparams/elf32bfinfd.sh (OTHER_SECTIONS): Add .l2.text
	and .l2.data.
@
text
@d46 1
@


1.5
log
@	bfd/
	* elf32-bfin.c (elf32_bfin_special_sections[]): New.
	(elf_backend_special_sections): Define.

	ld/
	* emulparams/elf32bfinfd.sh (OTHER_SECTIONS): Define.
@
text
@d17 3
a19 2
# 0xff700000, 0xff800000, 0xff900000 and 0xffa00000 are also used in
# Dynamic linker and linux kernel. They need to be keep synchronized.
d21 8
@


1.4
log
@Revert my last change since it has not been approved.
@
text
@d17 20
@


1.3
log
@	bfd/
	* elf.c (_bfd_elf_map_sections_to_segments): Don't put
	executable sections into the same segment with other
	read only sections if --sep-code.
	* elf32-bfin.c (elf32_bfin_code_in_l1): New variable.
	(elf32_bfin_data_in_l1): New variable.
	(elf32_bfin_final_write_processing): New.
	(elf32_bfin_special_sections[]): New.
	(elf_backend_final_write_processing): Define.
	(elf_backend_special_sections): Define.

	binutils/
	* readelf.c (get_machine_flags): Deal with Blackfin specific
	flags.

	include/
	* bfdlink.h (struct bfd_link_info): Add sep_code member
	variable.
	* elf/bfin.h (EF_BFIN_CODE_IN_L1): Define.
	(EF_BFIN_DATA_IN_L1): Define.

	ld/
	* Makefile.am (eelf32bfin.c): Depend on bfin.em.
	(eelf32bfinfd.c): Likewise.
	* Makefile.in: Regenerate.
	* gen-doc.texi: Set Blackfin.
	* ld.texinfo: Document --sep-code and Blackfin specific
	options.
	* ldmain.c (main): Initialize link_info.sep_code.
	* lexsup.c (enum option_values): Add OPTION_SEP_CODE.
	(ld_options[]): Add --sep-code.
	(parse_args): Deal with --sep-code.
	* emulparams/bfin.sh (EXTRA_EM_FILE): Define.
	* emulparams/elf32bfinfd.sh (OTHER_SECTIONS): Define.
	* emultempl/bfin.em: New file.
@
text
@a16 21
# 0xff700000, 0xff800000, 0xff900000 and 0xffa00000 are also used in
# Dynamic linker and linux kernel. They need to be keep synchronized.
OTHER_SECTIONS="
  .l1.data 0xff700000	:
  {
    *(.l1.data)
  }
  .l1.data.A 0xff800000	:
  {
    *(.l1.data.A)
  }
  .l1.data.B 0xff900000	:
  {
    *(.l1.data.B)
  }
  .l1.text  0xffa00000	:
  {
    *(.l1.text)
  }
"
EXTRA_EM_FILE=bfin
@


1.2
log
@bfd/

2006-05-30  H.J. Lu  <hongjiu.lu@@intel.com>

	* bfd.c (bfd_emul_get_maxpagesize): New.
	(bfd_elf_set_pagesize): Likewise.
	(bfd_emul_set_maxpagesize): Likewise.
	(bfd_emul_get_commonpagesize): Likewise.
	(bfd_emul_set_commonpagesize): Likewise.
	* bfd-in2.h: Regenerated.

	* elf-bfd.h (elf_backend_data): Add commonpagesize.
	(xvec_get_elf_backend_data): New.
	(get_elf_backend_data): Use xvec_get_elf_backend_data.

	* elf32-arm.c (elf32_arm_vxworks_bed): Remove const.
	* elfxx-target.h (elfNN_bed): Likewise.

	* elf32-arm.c (ELF_COMMONPAGESIZE): Defined.
	* elf32-mips.c (ELF_COMMONPAGESIZE): Likewise.
	* elf32-ppc.c (ELF_COMMONPAGESIZE): Likewise.
	* elf32-sh.c (ELF_COMMONPAGESIZE): Likewise.
	* elf32-sh64.c (ELF_COMMONPAGESIZE): Likewise.
	* elf32-sparc.c (ELF_COMMONPAGESIZE): Likewise.
	* elf64-alpha.c (ELF_COMMONPAGESIZE): Likewise.
	* elf64-ppc.c (ELF_COMMONPAGESIZE): Likewise.
	* elf64-sparc.c (ELF_COMMONPAGESIZE): Likewise.
	* elf64-x86-64.c (ELF_COMMONPAGESIZE): Likewise.
	* elfn32-mips.c (ELF_COMMONPAGESIZE): Likewise.
	* elfxx-ia64.c (ELF_COMMONPAGESIZE): Likewise.

	* elfxx-target.h (ELF_COMMONPAGESIZE): Define if not defined.
	(elfNN_bed): Initialize commonpagesize with ELF_COMMONPAGESIZE.

	* targets.c (bfd_find_target): Support NULL abfd.

ld/

2006-05-30  H.J. Lu  <hongjiu.lu@@intel.com>

	* emulparams/arcelf.sh (MAXPAGESIZE): Changed to
	"CONSTANT (MAXPAGESIZE)".
	* emulparams/armelf_nbsd.sh: Likewise.
	* emulparams/armelf_vxworks.sh: Likewise.
	* emulparams/armnto.sh: Likewise.
	* emulparams/armsymbian.sh: Likewise.
	* emulparams/crislinux.sh: Likewise.
	* emulparams/elf32_i860.sh: Likewise.
	* emulparams/elf32_i960.sh: Likewise.
	* emulparams/elf32am33lin.sh: Likewise.
	* emulparams/elf32bfinfd.sh: Likewise.
	* emulparams/elf32bmipn32-defs.sh: Likewise.
	* emulparams/elf32frvfd.sh: Likewise.
	* emulparams/elf32i370.sh: Likewise.
	* emulparams/elf32lppcnto.sh: Likewise.
	* emulparams/elf32mcore.sh: Likewise.
	* emulparams/elf32openrisc.sh: Likewise.
	* emulparams/elf32ppcnto.sh: Likewise.
	* emulparams/elf32ppcwindiss.sh: Likewise.
	* emulparams/elf32vax.sh: Likewise.
	* emulparams/elf32xc16x.sh: Likewise.
	* emulparams/elf32xc16xl.sh: Likewise.
	* emulparams/elf32xc16xs.sh: Likewise.
	* emulparams/elf64_aix.sh: Likewise.
	* emulparams/elf64hppa.sh: Likewise.
	* emulparams/elf64mmix.sh: Likewise.
	* emulparams/elf_i386_be.sh: Likewise.
	* emulparams/elf_i386_chaos.sh: Likewise.
	* emulparams/elf_i386_ldso.sh: Likewise.
	* emulparams/hppa64linux.sh: Likewise.
	* emulparams/hppalinux.sh: Likewise.
	* emulparams/hppaobsd.sh: Likewise.
	* emulparams/i386lynx.sh: Likewise.
	* emulparams/i386moss.sh: Likewise.
	* emulparams/i386nto.sh: Likewise.
	* emulparams/i386nw.sh: Likewise.
	* emulparams/m32relf_linux.sh: Likewise.
	* emulparams/m68kpsos.sh: Likewise.
	* emulparams/or32elf.sh: Likewise.
	* emulparams/pjelf.sh: Likewise.
	* emulparams/pjlelf.sh: Likewise.
	* emulparams/ppclynx.sh: Likewise.
	* emulparams/ppcnw.sh: Likewise.
	* emulparams/shelf32_nbsd.sh : Likewise.
	* emulparams/shelf_nbsd.sh: Likewise.
	* emulparams/shelf_nto.sh: Likewise.
	* emulparams/shlelf_nto.sh: Likewise.
	* emulparams/xtensa-config.sh: Likewise.

	* emulparams/armelf_linux.sh (MAXPAGESIZE): Changed to
	"CONSTANT (MAXPAGESIZE)".
	(COMMONPAGESIZE): Changed to "CONSTANT (COMMONPAGESIZE)".
	* emulparams/elf32_sparc.sh: Likewise.
	* emulparams/elf32bmip.sh: Likewise.
	* emulparams/elf32ppccommon.sh: Likewise.
	* emulparams/elf64_ia64.sh: Likewise.
	* emulparams/elf64_s390.sh: Likewise.
	* emulparams/elf64_sparc.sh: Likewise.
	* emulparams/elf64alpha.sh: Likewise.
	* emulparams/elf64ppc.sh: Likewise.
	* emulparams/elf_i386.sh: Likewise.
	* emulparams/elf_i386_vxworks.sh: Likewise.
	* emulparams/elf_s390.sh: Likewise.
	* emulparams/elf_x86_64.sh: Likewise.
	* emulparams/shlelf32_linux.sh: Likewise.
	* emulparams/shlelf_linux.sh: Likewise.

	* emulparams/elf32bmipn32.sh (COMMONPAGESIZE): Changed to
	"CONSTANT (COMMONPAGESIZE)".
	* emulparams/elf32btsmipn32.sh: Likewise.

	* emultempl/elf32.em (gld${EMULATION_NAME}_handle_option): Add
	"-z max-page-size=" and "-z common-page-size=".
	(gld${EMULATION_NAME}_list_options): Likewise.

	* ld.h (ld_config_type): Add maxpagesize and commonpagesize.

	* ld.texinfo: Document "-z max-page-size=" and
	"-z common-page-size=".

	* ldexp.c (exp_print_token): Handle CONSTANT.
	(fold_name): Likewise.
	* ldgram.y: Likewise.
	* ldlex.l: Likewise.

	* ldmain.c (main): Initiliaze config.maxpagesize and
	config.commonpagesize. Call bfd_emul_set_maxpagesize if
	config.maxpagesize isn't 0. Call bfd_emul_set_commonpagesize if
	config.commonpagesize config.maxpagesize isn't 0.
ld/testsuite/

2006-05-30  H.J. Lu  <hongjiu.lu@@intel.com>

	* ld-elf/binutils.exp: New file.
	* ld-elf/commonpage1.d: Likewise.
	* ld-elf/maxpage1.d: Likewise.
	* ld-elf/maxpage1.s: Likewise.
@
text
@d17 21
@


1.2.2.1
log
@Merge changes between binutils-csl-2_17-branchpoint and
binutils-2_17, except for the addition of generated files to CVS.
@
text
@d4 1
a4 1
MAXPAGESIZE=0x4000
@


1.1
log
@Add missing file that got left out of a previous commit.
@
text
@d4 1
a4 1
MAXPAGESIZE=0x4000
@

