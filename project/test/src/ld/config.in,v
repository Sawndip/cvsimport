head	1.37;
access;
symbols
	binutils-2_24-branch:1.37.0.2
	binutils-2_24-branchpoint:1.37
	binutils-2_21_1:1.30
	binutils-2_23_2:1.36.2.1
	binutils-2_23_1:1.36.2.1
	binutils-2_23:1.36.2.1
	binutils-2_23-branch:1.36.0.2
	binutils-2_23-branchpoint:1.36
	binutils-2_22_branch:1.32.0.4
	binutils-2_22:1.32
	binutils-2_22-branch:1.32.0.2
	binutils-2_22-branchpoint:1.32
	binutils-2_21:1.30
	binutils-2_21-branch:1.30.0.2
	binutils-2_21-branchpoint:1.30
	binutils-2_20_1:1.28
	binutils-2_20:1.28
	binutils-arc-20081103-branch:1.27.0.6
	binutils-arc-20081103-branchpoint:1.27
	binutils-2_20-branch:1.28.0.2
	binutils-2_20-branchpoint:1.28
	dje-cgen-play1-branch:1.27.0.4
	dje-cgen-play1-branchpoint:1.27
	arc-20081103-branch:1.27.0.2
	arc-20081103-branchpoint:1.27
	binutils-2_19_1:1.26
	binutils-2_19:1.26
	binutils-2_19-branch:1.26.0.2
	binutils-2_19-branchpoint:1.26
	binutils-2_18:1.21
	binutils-2_18-branch:1.21.0.2
	binutils-2_18-branchpoint:1.21
	binutils-csl-coldfire-4_1-32:1.16.2.1
	binutils-csl-sourcerygxx-4_1-32:1.16.2.1
	binutils-csl-innovasic-fido-3_4_4-33:1.16.2.1
	binutils-csl-sourcerygxx-3_4_4-32:1.12
	binutils-csl-coldfire-4_1-30:1.16.2.1
	binutils-csl-sourcerygxx-4_1-30:1.16.2.1
	binutils-csl-coldfire-4_1-28:1.16.2.1
	binutils-csl-sourcerygxx-4_1-29:1.16.2.1
	binutils-csl-sourcerygxx-4_1-28:1.16.2.1
	binutils-csl-arm-2006q3-27:1.16.2.1
	binutils-csl-sourcerygxx-4_1-27:1.16.2.1
	binutils-csl-arm-2006q3-26:1.16.2.1
	binutils-csl-sourcerygxx-4_1-26:1.16.2.1
	binutils-csl-sourcerygxx-4_1-25:1.16.2.1
	binutils-csl-sourcerygxx-4_1-24:1.16.2.1
	binutils-csl-sourcerygxx-4_1-23:1.16.2.1
	binutils-csl-sourcerygxx-4_1-21:1.16.2.1
	binutils-csl-arm-2006q3-21:1.16.2.1
	binutils-csl-sourcerygxx-4_1-22:1.16.2.1
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.16.2.1
	binutils-csl-sourcerygxx-4_1-20:1.16.2.1
	binutils-csl-arm-2006q3-19:1.16.2.1
	binutils-csl-sourcerygxx-4_1-19:1.16.2.1
	binutils-csl-sourcerygxx-4_1-18:1.16.2.1
	binutils-csl-renesas-4_1-9:1.16.2.1
	binutils-csl-sourcerygxx-3_4_4-25:1.12
	binutils-csl-renesas-4_1-8:1.16
	binutils-csl-renesas-4_1-7:1.16
	binutils-csl-renesas-4_1-6:1.16
	binutils-csl-sourcerygxx-4_1-17:1.16
	binutils-csl-sourcerygxx-4_1-14:1.16
	binutils-csl-sourcerygxx-4_1-15:1.16
	binutils-csl-sourcerygxx-4_1-13:1.16
	binutils-2_17:1.16.4.1
	binutils-csl-sourcerygxx-4_1-12:1.16
	binutils-csl-sourcerygxx-3_4_4-21:1.16
	binutils-csl-wrs-linux-3_4_4-24:1.12
	binutils-csl-wrs-linux-3_4_4-23:1.12
	binutils-csl-sourcerygxx-4_1-9:1.16
	binutils-csl-sourcerygxx-4_1-8:1.16
	binutils-csl-sourcerygxx-4_1-7:1.16
	binutils-csl-arm-2006q1-6:1.16
	binutils-csl-sourcerygxx-4_1-6:1.16
	binutils-csl-wrs-linux-3_4_4-22:1.12
	binutils-csl-coldfire-4_1-11:1.16
	binutils-csl-sourcerygxx-3_4_4-19:1.16
	binutils-csl-coldfire-4_1-10:1.16
	binutils-csl-sourcerygxx-4_1-5:1.16
	binutils-csl-sourcerygxx-4_1-4:1.16
	binutils-csl-wrs-linux-3_4_4-21:1.12
	binutils-csl-morpho-4_1-4:1.16
	binutils-csl-sourcerygxx-3_4_4-17:1.16
	binutils-csl-wrs-linux-3_4_4-20:1.12
	binutils-2_17-branch:1.16.0.4
	binutils-2_17-branchpoint:1.16
	binutils-csl-2_17-branch:1.16.0.2
	binutils-csl-2_17-branchpoint:1.16
	binutils-csl-gxxpro-3_4-branch:1.12.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.12
	binutils-2_16_1:1.12
	binutils-csl-arm-2005q1b:1.12
	binutils-2_16:1.12
	binutils-csl-arm-2005q1a:1.12
	binutils-csl-arm-2005q1-branch:1.12.0.4
	binutils-csl-arm-2005q1-branchpoint:1.12
	binutils-2_16-branch:1.12.0.2
	binutils-2_16-branchpoint:1.12
	csl-arm-2004-q3d:1.11
	csl-arm-2004-q3:1.11
	binutils-2_15:1.9
	binutils-2_15-branchpoint:1.9
	csl-arm-2004-q1a:1.10
	csl-arm-2004-q1:1.10
	binutils-2_15-branch:1.9.0.8
	cagney_bfdfile-20040213-branch:1.9.0.6
	cagney_bfdfile-20040213-branchpoint:1.9
	cagney_bigcore-20040122-branch:1.9.0.4
	cagney_bigcore-20040122-branchpoint:1.9
	csl-arm-2003-q4:1.9
	binutils-2_14:1.9
	binutils-2_14-branch:1.9.0.2
	binutils-2_14-branchpoint:1.9
	binutils-2_13_2_1:1.8
	binutils-2_13_2:1.8
	binutils-2_13_1:1.8
	binutils-2_13:1.8
	binutils-2_13-branchpoint:1.8
	binutils-2_13-branch:1.8.0.2
	binutils-2_12_1:1.7
	binutils-2_12:1.7
	binutils-2_12-branch:1.7.0.2
	binutils-2_12-branchpoint:1.7
	cygnus_cvs_20020108_pre:1.6
	binutils-2_11_2:1.4
	binutils-2_11_1:1.4
	binutils-2_11:1.4
	x86_64versiong3:1.4
	binutils-2_11-branch:1.4.0.2
	binutils-2_10_1:1.2
	binutils-2_10:1.2
	binutils-2_10-branch:1.2.0.2
	binutils-2_10-branchpoint:1.2
	binutils_latest_snapshot:1.37
	repo-unification-2000-02-06:1.2
	binu_ss_19990721:1.1.1.1
	binu_ss_19990602:1.1.1.1
	binu_ss_19990502:1.1.1.1
	cygnus:1.1.1;
locks; strict;
comment	@# @;


1.37
date	2012.09.10.22.30.56;	author amodra;	state Exp;
branches;
next	1.36;

1.36
date	2012.05.17.15.13.21;	author nickc;	state Exp;
branches
	1.36.2.1;
next	1.35;

1.35
date	2012.05.11.14.25.27;	author nickc;	state Exp;
branches;
next	1.34;

1.34
date	2012.04.06.16.48.59;	author roland;	state Exp;
branches;
next	1.33;

1.33
date	2012.04.05.08.43.40;	author nickc;	state Exp;
branches;
next	1.32;

1.32
date	2011.06.06.14.51.42;	author amodra;	state Exp;
branches;
next	1.31;

1.31
date	2010.12.15.14.56.36;	author hjl;	state Exp;
branches;
next	1.30;

1.30
date	2010.10.15.16.21.41;	author davek;	state Exp;
branches;
next	1.29;

1.29
date	2010.10.14.01.31.30;	author davek;	state Exp;
branches;
next	1.28;

1.28
date	2009.08.22.16.56.45;	author rwild;	state Exp;
branches;
next	1.27;

1.27
date	2008.09.11.19.02.03;	author jkratoch;	state Exp;
branches;
next	1.26;

1.26
date	2008.08.15.08.31.51;	author amodra;	state Exp;
branches;
next	1.25;

1.25
date	2008.07.12.21.36.53;	author csilvers;	state Exp;
branches;
next	1.24;

1.24
date	2008.06.17.23.14.43;	author rwild;	state Exp;
branches;
next	1.23;

1.23
date	2008.05.21.12.01.35;	author nickc;	state Exp;
branches;
next	1.22;

1.22
date	2007.10.24.04.56.48;	author amodra;	state Exp;
branches;
next	1.21;

1.21
date	2007.07.02.07.12.52;	author amodra;	state Exp;
branches;
next	1.20;

1.20
date	2007.03.26.11.10.44;	author amodra;	state Exp;
branches;
next	1.19;

1.19
date	2006.10.23.16.44.17;	author hjl;	state Exp;
branches;
next	1.18;

1.18
date	2006.06.05.12.30.16;	author amodra;	state Exp;
branches;
next	1.17;

1.17
date	2006.04.16.18.20.09;	author drow;	state Exp;
branches;
next	1.16;

1.16
date	2005.06.09.18.39.34;	author wilson;	state Exp;
branches
	1.16.2.1
	1.16.4.1;
next	1.15;

1.15
date	2005.05.15.18.19.45;	author drow;	state Exp;
branches;
next	1.14;

1.14
date	2005.04.12.02.50.28;	author amodra;	state Exp;
branches;
next	1.13;

1.13
date	2005.04.04.11.27.14;	author nickc;	state Exp;
branches;
next	1.12;

1.12
date	2005.02.21.11.49.47;	author amodra;	state Exp;
branches;
next	1.11;

1.11
date	2004.09.17.06.15.38;	author amodra;	state Exp;
branches;
next	1.10;

1.10
date	2004.03.19.07.06.35;	author amodra;	state Exp;
branches;
next	1.9;

1.9
date	2002.12.30.12.37.58;	author nickc;	state Exp;
branches;
next	1.8;

1.8
date	2002.05.31.04.33.55;	author amodra;	state Exp;
branches;
next	1.7;

1.7
date	2002.02.08.06.38.57;	author aoliva;	state Exp;
branches;
next	1.6;

1.6
date	2001.04.27.17.12.15;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	2001.03.13.06.14.27;	author nickc;	state Exp;
branches;
next	1.4;

1.4
date	2000.09.06.00.13.34;	author nickc;	state Exp;
branches;
next	1.3;

1.3
date	2000.09.02.21.35.46;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	99.11.04.06.45.07;	author law;	state Exp;
branches;
next	1.1;

1.1
date	99.05.03.07.29.06;	author rth;	state Exp;
branches
	1.1.1.1;
next	;

1.36.2.1
date	2012.09.10.22.32.44;	author amodra;	state Exp;
branches;
next	;

1.16.2.1
date	2006.08.22.15.08.43;	author jsm28;	state Exp;
branches;
next	;

1.16.4.1
date	2006.04.16.18.20.45;	author drow;	state Exp;
branches;
next	;

1.1.1.1
date	99.05.03.07.29.06;	author rth;	state Exp;
branches;
next	;


desc
@@


1.37
log
@	* config.in: Disable sanity check for kfreebsd.
@
text
@/* config.in.  Generated from configure.in by autoheader.  */

/* Check that config.h is #included before system headers
   (this works only for glibc, but that should be enough).  */
#if defined(__GLIBC__) && !defined(__FreeBSD_kernel__) && !defined(__CONFIG_H__)
#  error config.h must be #included before system headers
#endif
#define __CONFIG_H__ 1

/* Define to 1 if translation of program messages to the user's native
   language is requested. */
#undef ENABLE_NLS

/* Additional extension a shared object might have. */
#undef EXTRA_SHLIB_EXTENSION

/* Define to choose default GOT handling scheme */
#undef GOT_HANDLING_DEFAULT

/* Define to 1 if you have the `close' function. */
#undef HAVE_CLOSE

/* Define to 1 if you have the declaration of `environ', and to 0 if you
   don't. */
#undef HAVE_DECL_ENVIRON

/* Define to 1 if you have the declaration of `free', and to 0 if you don't.
   */
#undef HAVE_DECL_FREE

/* Define to 1 if you have the declaration of `getenv', and to 0 if you don't.
   */
#undef HAVE_DECL_GETENV

/* Is the prototype for getopt in <unistd.h> in the expected format? */
#undef HAVE_DECL_GETOPT

/* Define to 1 if you have the declaration of `sbrk', and to 0 if you don't.
   */
#undef HAVE_DECL_SBRK

/* Define to 1 if you have the declaration of `strstr', and to 0 if you don't.
   */
#undef HAVE_DECL_STRSTR

/* Define to 1 if you have the <dirent.h> header file, and it defines `DIR'.
   */
#undef HAVE_DIRENT_H

/* Define to 1 if you have the `dlclose' function. */
#undef HAVE_DLCLOSE

/* Define to 1 if you have the <dlfcn.h> header file. */
#undef HAVE_DLFCN_H

/* Define to 1 if you have the `dlopen' function. */
#undef HAVE_DLOPEN

/* Define to 1 if you have the `dlsym' function. */
#undef HAVE_DLSYM

/* Define to 1 if you have the <elf-hints.h> header file. */
#undef HAVE_ELF_HINTS_H

/* Define to 1 if you have the <fcntl.h> header file. */
#undef HAVE_FCNTL_H

/* Define to 1 if you have the `glob' function. */
#undef HAVE_GLOB

/* Define .init_array/.fini_array sections are available and working. */
#undef HAVE_INITFINI_ARRAY

/* Define to 1 if you have the <inttypes.h> header file. */
#undef HAVE_INTTYPES_H

/* Define if your <locale.h> file defines LC_MESSAGES. */
#undef HAVE_LC_MESSAGES

/* Define to 1 if you have the <limits.h> header file. */
#undef HAVE_LIMITS_H

/* Define to 1 if you have the <locale.h> header file. */
#undef HAVE_LOCALE_H

/* Define to 1 if you have the `lseek' function. */
#undef HAVE_LSEEK

/* Define to 1 if you have the <memory.h> header file. */
#undef HAVE_MEMORY_H

/* Define to 1 if you have the `mkstemp' function. */
#undef HAVE_MKSTEMP

/* Define to 1 if you have the <ndir.h> header file, and it defines `DIR'. */
#undef HAVE_NDIR_H

/* Define to 1 if you have the `open' function. */
#undef HAVE_OPEN

/* Define to 1 if you have the `realpath' function. */
#undef HAVE_REALPATH

/* Define to 1 if you have the `sbrk' function. */
#undef HAVE_SBRK

/* Define to 1 if you have the `setlocale' function. */
#undef HAVE_SETLOCALE

/* Define to 1 if you have the <stdint.h> header file. */
#undef HAVE_STDINT_H

/* Define to 1 if you have the <stdlib.h> header file. */
#undef HAVE_STDLIB_H

/* Define to 1 if you have the <strings.h> header file. */
#undef HAVE_STRINGS_H

/* Define to 1 if you have the <string.h> header file. */
#undef HAVE_STRING_H

/* Define to 1 if you have the <sys/dir.h> header file, and it defines `DIR'.
   */
#undef HAVE_SYS_DIR_H

/* Define to 1 if you have the <sys/file.h> header file. */
#undef HAVE_SYS_FILE_H

/* Define to 1 if you have the <sys/ndir.h> header file, and it defines `DIR'.
   */
#undef HAVE_SYS_NDIR_H

/* Define to 1 if you have the <sys/param.h> header file. */
#undef HAVE_SYS_PARAM_H

/* Define to 1 if you have the <sys/stat.h> header file. */
#undef HAVE_SYS_STAT_H

/* Define to 1 if you have the <sys/time.h> header file. */
#undef HAVE_SYS_TIME_H

/* Define to 1 if you have the <sys/types.h> header file. */
#undef HAVE_SYS_TYPES_H

/* Define to 1 if you have the <unistd.h> header file. */
#undef HAVE_UNISTD_H

/* Define to 1 if you have the `waitpid' function. */
#undef HAVE_WAITPID

/* Define to 1 if you have the <windows.h> header file. */
#undef HAVE_WINDOWS_H

/* Define to 1 if you have the <zlib.h> header file. */
#undef HAVE_ZLIB_H

/* Define to the sub-directory in which libtool stores uninstalled libraries.
   */
#undef LT_OBJDIR

/* Name of package */
#undef PACKAGE

/* Define to the address where bug reports for this package should be sent. */
#undef PACKAGE_BUGREPORT

/* Define to the full name of this package. */
#undef PACKAGE_NAME

/* Define to the full name and version of this package. */
#undef PACKAGE_STRING

/* Define to the one symbol short name of this package. */
#undef PACKAGE_TARNAME

/* Define to the home page for this package. */
#undef PACKAGE_URL

/* Define to the version of this package. */
#undef PACKAGE_VERSION

/* The size of `void *', as computed by sizeof. */
#undef SIZEOF_VOID_P

/* Define to 1 if you have the ANSI C header files. */
#undef STDC_HEADERS

/* Define if you can safely include both <string.h> and <strings.h>. */
#undef STRING_WITH_STRINGS

/* Use b modifier when opening binary files? */
#undef USE_BINARY_FOPEN

/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# undef _ALL_SOURCE
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# undef _GNU_SOURCE
#endif
/* Enable threading extensions on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# undef _POSIX_PTHREAD_SEMANTICS
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# undef _TANDEM_SOURCE
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# undef __EXTENSIONS__
#endif


/* Version number of package */
#undef VERSION

/* Define to 1 if `lex' declares `yytext' as a `char *' by default, not a
   `char[]'. */
#undef YYTEXT_POINTER

/* Number of bits in a file offset, on hosts where this is settable. */
#undef _FILE_OFFSET_BITS

/* Define for large files, on AIX-style hosts. */
#undef _LARGE_FILES

/* Define to 1 if on MINIX. */
#undef _MINIX

/* Define to 2 if the system does not provide POSIX.1 features except with
   this defined. */
#undef _POSIX_1_SOURCE

/* Define to 1 if you need to in order for `stat' and other things to work. */
#undef _POSIX_SOURCE
@


1.36
log
@	PR 14072
	* configure.in: Add check that sysdep.h has been included before
	any system header files.
	* configure: Regenerate.
	* config.in: Regenerate.
	* sysdep.h: Generate an error if included before config.h.
	* alpha-opc.c: Include sysdep.h before any other header file.
	* alpha-dis.c: Likewise.
	* avr-dis.c: Likewise.
	* cgen-opc.c: Likewise.
	* cr16-dis.c: Likewise.
	* cris-dis.c: Likewise.
	* crx-dis.c: Likewise.
	* d10v-dis.c: Likewise.
	* d10v-opc.c: Likewise.
	* d30v-dis.c: Likewise.
	* d30v-opc.c: Likewise.
	* h8500-dis.c: Likewise.
	* i370-dis.c: Likewise.
	* i370-opc.c: Likewise.
	* m10200-dis.c: Likewise.
	* m10300-dis.c: Likewise.
	* micromips-opc.c: Likewise.
	* mips-opc.c: Likewise.
	* mips61-opc.c: Likewise.
	* moxie-dis.c: Likewise.
	* or32-opc.c: Likewise.
	* pj-dis.c: Likewise.
	* ppc-dis.c: Likewise.
	* ppc-opc.c: Likewise.
	* s390-dis.c: Likewise.
	* sh-dis.c: Likewise.
	* sh64-dis.c: Likewise.
	* sparc-dis.c: Likewise.
	* sparc-opc.c: Likewise.
	* spu-dis.c: Likewise.
	* tic30-dis.c: Likewise.
	* tic54x-dis.c: Likewise.
	* tic80-dis.c: Likewise.
	* tic80-opc.c: Likewise.
	* tilegx-dis.c: Likewise.
	* tilepro-dis.c: Likewise.
	* v850-dis.c: Likewise.
	* v850-opc.c: Likewise.
	* vax-dis.c: Likewise.
	* w65-dis.c: Likewise.
	* xgate-dis.c: Likewise.
	* xtensa-dis.c: Likewise.
	* rl78-decode.opc: Likewise.
	* rl78-decode.c: Regenerate.
	* rx-decode.opc: Likewise.
	* rx-decode.c: Regenerate.

	* configure.in: Add check that sysdep.h has been included before
	any system header files.
	* configure: Regenerate.
	* config.in: Regenerate.
	* sysdep.h: Generate an error if included before config.h.

	* configure.in: Add check that sysdep.h has been included before
	any system header files.
	* configure: Regenerate.
	* config.in: Regenerate.
	* aclocal.m4: Regenerate.
	* bfd-in.h: Generate an error if included before config.h.
	* sysdep.h: Likewise.
	* bfd-in2.h: Regenerate.
	* compress.c: Remove #include "config.h".
	* plugin.c: Likewise.
	* elf32-m68hc1x.c: Include sysdep.h before alloca-conf.h.
	* elf64-hppa.c: Likewise.
	* som.c: Likewise.
	* xsymc.c: Likewise.

	* configure.in: Add check that sysdep.h has been included before
	any system header files.
	* configure: Regenerate.
	* config.in: Regenerate.

	* configure.in: Add check that sysdep.h has been included before
	any system header files.
	* configure: Regenerate.
	* config.in: Regenerate.
	* aclocal.m4: Regenerate.
	* Makefile.am: Use wrappers around C files generated by flex.
	* Makefile.in: Regenerate.
	* doc/Makefile.in: Regenerate.
	* itbl-lex-wrapper.c: New file.
	* config/bfin-lex-wrapper.c: New file.
	* cgen.c: Include as.h before setjmp.h.
	* config/tc-dlx.c: Include as.h before any other header.
	* config/tc-h8300.c: Likewise.
	* config/tc-lm32.c: Likewise.
	* config/tc-mep.c: Likewise.
	* config/tc-microblaze.c: Likewise.
	* config/tc-mmix.c: Likewise.
	* config/tc-msp430.c: Likewise.
	* config/tc-or32.c: Likewise.
	* config/tc-tic4x.c: Likewise.
	* config/tc-tic54x.c: Likewise.
	* config/tc-xtensa.c: Likewise.

	* configure.in: Add check that sysdep.h has been included before
	any system header files.
	* configure: Regenerate.
	* config.in: Regenerate.
	* unwind-ia64.h: Include config.h.
@
text
@d5 1
a5 1
#if defined(__GLIBC__) && !defined(__CONFIG_H__)
@


1.36.2.1
log
@	* config.in: Disable sanity check for kfreebsd.
@
text
@d5 1
a5 1
#if defined(__GLIBC__) && !defined(__FreeBSD_kernel__) && !defined(__CONFIG_H__)
@


1.35
log
@	PR binutils/14028
	* configure.in: Invoke ACX_HEADER_STRING.
	* configure: Regenerate.
	* config.in: Regenerate.
	* sysdep.h: If STRINGS_WITH_STRING is defined then include both
	string.h and strings.h.
@
text
@d3 7
@


1.34
log
@binutils/
2012-04-06  Roland McGrath  <mcgrathr@@google.com>

	* configure.in (AC_CHECK_HEADERS): Add locale.h.
	* config.in: Regenerate.
	* configure: Regenerate.

gas/
2012-04-06  Roland McGrath  <mcgrathr@@google.com>

	* configure.in (AC_CHECK_HEADERS): Add locale.h.
	* config.in: Regenerate.
	* configure: Regenerate.

gold/
2012-04-06  Roland McGrath  <mcgrathr@@google.com>

	* configure.in (AC_CHECK_HEADERS): Add locale.h.
	* config.in: Regenerate.
	* configure: Regenerate.

ld/
2012-04-06  Roland McGrath  <mcgrathr@@google.com>

	* configure.in (AC_CHECK_HEADERS): Add locale.h.
	* config.in: Regenerate.
	* configure: Regenerate.
@
text
@d181 3
@


1.33
log
@	* configure.in (AC_CHECK_FUNCS): Add setlocale.
	(AM_LC_MESSAGES): Add.
	* aclocal.m4: Regenerate.
	* config.in: Regenerate.
	* configure: Regenerate.
@
text
@d76 3
d100 3
a108 3
/* Define to 1 if you have the `setlocale' function. */
#undef HAVE_SETLOCALE

d175 2
a176 2
/* The size of `long', as computed by sizeof. */
#undef SIZEOF_LONG
@


1.32
log
@Regenerate.
@
text
@d70 3
d103 3
@


1.31
log
@Add SORT_BY_INIT_PRIORITY.

bfd/

2010-12-15  H.J. Lu  <hongjiu.lu@@intel.com>

	* elf.c (_bfd_elf_new_section_hook): Special handling for
	.init_array/.fini_array output sections.

ld/

2010-12-15  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.am (GENSCRIPTS): Add @@enable_initfini_array@@.

	* NEWS: Mention SORT_BY_INIT_PRIORITY.

	* configure.in: Add AC_CANONICAL_BUILD.
	Add --enable-initfini-array.

	* genscripts.sh (ENABLE_INITFINI_ARRAY): New.

	* ld.h (sort_type): Add by_init_priority.

	* ld.texinfo: Document SORT_BY_INIT_PRIORITY.

	* ldgram.y (SORT_BY_INIT_PRIORITY): New.
	(wildcard_spec): Handle SORT_BY_INIT_PRIORITY.

	* ldlang.c (get_init_priority): New.
	(compare_section): Use get_init_priority for by_init_priority.

	* ldlex.l (SORT_BY_INIT_PRIORITY): New.

	* scripttempl/elf.sc: Support ENABLE_INITFINI_ARRAY.

	* Makefile.in: Regenerated.
	* aclocal.m4: Regenerated.
	* config.in: Likewise.
	* configure: Likewise.

ld/testsuite/

2010-12-15  H.J. Lu  <hongjiu.lu@@intel.com>

	* ld-elf/elf.exp (array_tests): Add init-mixed.
	(array_tests_static): Likewise.
	Also delete tmpdir/init-mixed.

	* ld-elf/init-mixed.c: New.
	* ld-elf/init-mixed.out: Likewise.
@
text
@d135 1
a135 1
/* Define to 1 if you have the <Windows.h> header file. */
@


1.30
log
@Provide win32-based dlapi replacements on windows platforms without dlfcn.h.

ld/ChangeLog:

	* configure.in: If <dlfcn.h> can't be found, try for <Windows.h>
	* configure: Regenerate.
	* config.in: Likewise.
	* plugin.c [!HAVE_DLFCN_H && HAVE_WINDOWS_H] (dlopen): Provide
	trival LoadLibrary-based replacement for Windows systems.
	[!HAVE_DLFCN_H && HAVE_WINDOWS_H] (dlsym): Likewise trivial
	replacement based on GetProcAddress.
	[!HAVE_DLFCN_H && HAVE_WINDOWS_H] (dlsym): Likewise FreeLibrary.
	* sysdep.h: Don't infer presence of <dlfcn.h> from ENABLE_PLUGINS
	anymore, use its own guard.
@
text
@d64 3
@


1.29
log
@Applied patch series for LD plugin interface (six parts).

[PATCH] Add infrastructure for plugin API; functionality to follow.

    include/ChangeLog:

2010-10-14  Dave Korn  <dave.korn.cygwin@@gmail.com>

	Apply LD plugin patch series (part 1/6).
	* plugin-api.h (LDPT_GNU_LD_VERSION): New ld_plugin_tag enum member.

    ld/ChangeLog:

2010-10-14  Dave Korn  <dave.korn.cygwin@@gmail.com>

	Apply LD plugin patch series (part 1/6).
	* configure.in: Add AC_CHECKs for file io and dlfcn headers and
	functions and AC_SEARCH for -ldl.
	(enable_plugins): New shell variable set if above tests find dlopen
	functionality.
	(ENABLE_PLUGINS): Add related automake conditional.
	* configure: Regenerate.
	* config.in: Likewise.
	* Makefile.am (PLUGIN_C): Declare plugin C source file, conditional
	on ENABLE_PLUGINS being defined.
	(PLUGIN_H): Likewise for header file.
	(PLUGIN_OBJECT): Likewise for object file.
	(PLUGIN_CFLAGS): Likewise -D flag required to compile plugin support.
	(AM_CPPFLAGS): Use PLUGIN_CFLAGS.
	(CFILES): Use PLUGIN_C.
	(HFILES): Use PLUGIN_H.
	(OFILES): Use PLUGIN_OBJECT.
	(ld_new_SOURCES): Use PLUGIN_C.
	(noinst_LTLIBRARIES)[ENABLE_PLUGINS]: Declare test plugin.
	(libldtestplug_la_SOURCES)[ENABLE_PLUGINS]: Add automake definition
	for test plugin.
	(libldtestplug_la_CFLAGS)[ENABLE_PLUGINS]: Likewise.
	(libldtestplug_la_LDFLAGS)[ENABLE_PLUGINS]: Likewise.
	* Makefile.in: Regenerate.
	* sysdep.h: Include stdarg.h, unistd.h and one of fcntl.h or
	sys/file.h where available.  Include dlfcn.h when ENABLE_PLUGINS.
	(O_RDONLY): Supply default definition likewise to bfd's sysdep.h
	(O_WRONLY): Likewise.
	(O_RDWR): Likewise.
	(O_ACCMODE): Likewise.
	(O_BINARY): Likewise.
	(SEEK_SET): Likewise.
	(SEEK_CUR): Likewise.
	(SEEK_END): Likewise.
	* ldmisc.c (vfinfo): Make non-static.  Add %p format char.
	* ldmisc.h (vfinfo): Declare extern prototype.
	* lexsup.c (enum option_values)[ENABLE_PLUGINS]: Add new entries for
	OPTION_PLUGIN and OPTION_PLUGIN_OPT.
	(ld_options[])[ENABLE_PLUGINS]: Add option data for the above two.
	(parse_args)[ENABLE_PLUGINS]: Handle them, and load all plugins once
	option parsing is complete.
	* ldmain.c (main)[ENABLE_PLUGINS]: Call plugin cleanup hooks just
	after lang_finish.
	* plugin.c: New source file.
	* plugin.h: Likewise new header.
	* testplug.c: New source file.

    ld/testsuite/ChangeLog:

2010-10-14  Dave Korn  <dave.korn.cygwin@@gmail.com>

	Apply LD plugin patch series (part 1/6).
	* ld-bootstrap/bootstrap.exp: Skip static tests also if LD plugins
	are enabled.
	* lib/ld-lib.exp (proc regexp_diff): Extend verbose debug output.
	(proc set_file_contents): Write a file with the supplied content.
	(run_ld_link_tests): Add new 'ld' action to test linker output.
	(proc check_plugin_api_available): Return true if linker under test
	supports the plugin API.
	* ld-plugin/func.c: New test source file.
	* ld-plugin/main.c: Likewise.
	* ld-plugin/text.c: Likewise.
	* ld-plugin/plugin-1.d: New dump test output pattern script.
	* ld-plugin/plugin-2.d: Likewise.
	* ld-plugin/plugin-3.d: Likewise.
	* ld-plugin/plugin-4.d: Likewise.
	* ld-plugin/plugin-5.d: Likewise.
	* ld-plugin/plugin.exp: New test control script.
---
[PATCH] Implement claim file and all symbols read hooks and add symbols callback.

  ld/ChangeLog:

2010-10-14  Dave Korn  <dave.korn.cygwin@@gmail.com>

	Apply LD plugin patch series (part 2/6).
	* ldfile.c (ldfile_try_open_bfd)[ENABLE_PLUGINS]: Don't return early
	during compat checks if they pass, instead offer any successfully
	opened and accepted file to the plugin claim file hooks chain.  Create
	a dummy bfd to accept symbols added by the plugin, if the plugin
	claims the file.
	* ldlang.c (lang_process)[ENABLE_PLUGINS]: Call plugin all symbols
	read hook chain before ldemul_after_open.
	* ldlang.h (struct lang_input_statement_struct): Add new single-bit
	'claimed' flag.
	* plugin.c (IRONLY_SUFFIX): New macro for dummy bfd file suffix.
	(IRONLY_SUFFIX_LEN): Length of the above string.
	(plugin_get_ir_dummy_bfd): New function to create the dummy bfd used
	to store symbols for ir-only files.
	(is_ir_dummy_bfd): New function to check if a bfd is ir-only.
	(asymbol_from_plugin_symbol): New function converts symbol formats.
	(add_symbols): Call it to convert plugin syms to bfd syms and add
	them to the dummy bfd.
	* plugin.h: Add missing include guards.
	(plugin_get_ir_dummy_bfd): Add prototype.
	(is_ir_dummy_bfd): Likewise.
	* testplug.c (TV_MESSAGE): New helper macro.
	(struct claim_file): New struct.
	(claim_file_t): New typedef.
	(tag_names[]): Make static and const.
	(claimfiles_list): New variable.
	(claimfiles_tail_chain_ptr): Likewise.
	(last_claimfile): Likewise.
	(record_claim_file): Record a file to claim on a singly-linked list.
	(parse_symdefstr): Parse an ASCII representation of a symbol from a
	plugin option into the fields of a struct ld_plugin_symbol.
	(record_claimed_file_symbol):  Use it to parse plugin option for
	adding a symbol.
	(parse_option): Parse claim file and add symbol options.
	(dump_tv_tag): Use TV_MESSAGE.
	(onload): Likewise.
	(onclaim_file): Make static.  Use TV_MESSAGE.  Scan list of files to
	claim and claim this file if required, adding any symbols specified.
	(onall_symbols_read): Make static and use TV_MESSAGE.
	(oncleanup): Likewise.

  ld/testsuite/ChangeLog:

2010-10-14  Dave Korn  <dave.korn.cygwin@@gmail.com>

	Apply LD plugin patch series (part 2/6).
	* ld-plugin/plugin-3.d: Enable regexes for new functionality.
	* ld-plugin/plugin-5.d: Likewise.
	* ld-plugin/plugin-6.d: New testcase.
	* ld-plugin/plugin-7.d: Likewise.
	* ld-plugin/plugin.exp: Use 'nm' on compiled test objects to determine
	whether symbols in plugin arguments need an underscore prefix.  Add
	new plugin-6.d and plugin-7.d testcases.
---
[PATCH] Implement get symbols callback.

  ld/ChangeLog:

2010-10-14  Dave Korn  <dave.korn.cygwin@@gmail.com>

	Apply LD plugin patch series (part 3/6).
	* ldmain.c (notice)[ENABLE_PLUGINS]: Call plugin_notice.
	* plugin.c (non_ironly_hash): Add new bfd hash table.
	(plugin_load_plugins): Exit early if no plugins to load.  If plugins
	do load successfully, set notice_all flag in link info.
	(get_symbols): Implement.
	(plugin_load_plugins): Exit early if no plugins to load, else after
	loading plugins successfully enable notice_all mode.
	(init_non_ironly_hash): Lazily init non_ironly_hash table.
	(plugin_notice): Record symbols referenced from non-IR files in the
	non_ironly_hash.  Suppress tracing, cref generation and nocrossrefs
	tracking for symbols from dummy IR bfds.
	* plugin.h: Fix formatting.
	(plugin_notice): Add prototype.
	* testplug.c (dumpresolutions): New global var.
	(parse_options): Accept "dumpresolutions".
	(onall_symbols_read): Get syms and dump resolutions if it was given.

  ld/testsuite/ChangeLog:

2010-10-14  Dave Korn  <dave.korn.cygwin@@gmail.com>

	Apply LD plugin patch series (part 3/6).
	* ld-plugin/plugin-8.d: New testcase.
	* ld-plugin/plugin.exp: Invoke it.
---
[PATCH] Implement add input file, add input lib and set extra lib path callbacks.

  ld/ChangeLog:

2010-10-14  Dave Korn  <dave.korn.cygwin@@gmail.com>

	Apply LD plugin patch series (part 4/6).
	* ldlang.c (lang_process)[ENABLE_PLUGINS]: Move invocation of
	plugin_call_all_symbols_read to before setting of gc_sym_list, and
	open any new input files that may have been added during it.
	* ldmain.c (multiple_definition)[ENABLE_PLUGINS]: Call out to
	plugin_multiple_definition and let it have first say over what to do
	with the clashing definitions.
	* plugin.c (no_more_claiming): New boolean variable.
	(plugin_cached_allow_multiple_defs): Likewise.
	(add_input_file): Implement.
	(add_input_library): Likewise.
	(set_extra_library_path): Likewise.
	(plugin_call_claim_file): Don't do anything when no_more_claiming set.
	(plugin_call_all_symbols_read): Set it.  Disable link info
	"allow_multiple_definition" flag, but cache its value.
	(plugin_multiple_definition): New function.
	* plugin.h (plugin_multiple_definition): Add prototype.
	* testplug.c (addfile_enum_t): New enumerated typedef.
	(add_file_t): New struct typedef.
	(addfiles_list): New variable.
	(addfiles_tail_chain_ptr): Likewise.
	(record_add_file): New function.
	(parse_option): Parse "add:", "lib:" and "dir:" options and call it.
	(onall_symbols_read): Iterate the list of new files, libs and dirs,
	adding them.

  ld/testsuite/ChangeLog:

2010-10-14  Dave Korn  <dave.korn.cygwin@@gmail.com>

	Apply LD plugin patch series (part 4/6).
	* ld-plugin/plugin-9.d: New testcase.
	* ld-plugin/plugin.exp: Invoke it.
---
[PATCH] Add ELF symbol visibility support to plugin interface.

  ld/ChangeLog:

2010-10-14  Dave Korn  <dave.korn.cygwin@@gmail.com>

	Apply LD plugin patch series (part 5/6).
	* plugin.c (asymbol_from_plugin_symbol): If the bfd is an ELF bfd,
	find the elf symbol data and set the visibility in the st_other field.

  ld/testsuite/ChangeLog:

2010-10-14  Dave Korn  <dave.korn.cygwin@@gmail.com>

	Apply LD plugin patch series (part 5/6).
	* ld-plugin/plugin-ignore.d: New dump test control script.
	* ld-plugin/plugin-vis-1.d: Likewise.
	* ld-plugin/plugin.exp: Add list of ELF-only tests and run them if
	testing on an ELF target.
---
[PATCH] Add archive support to plugin interface.

  bfd/ChangeLog:

2010-10-14  Dave Korn  <dave.korn.cygwin@@gmail.com>

	Apply LD plugin patch series (part 6/6).
	* aoutx.h (aout_link_check_ar_symbols): Take new "subsbfd" reference
	parameter and pass it when invoking add_archive_element callback.
	(aout_link_check_archive_element): Handle substitute bfd if it
	was set during add_archive_element callback in the above.
	* cofflink.c (coff_link_check_ar_symbols): Take new "subsbfd" reference
	parameter and pass it when invoking add_archive_element callback.
	(coff_link_check_archive_element): Handle substitute bfd if it
	was set during add_archive_element callback in the above.
	* ecoff.c (read_ext_syms_and_strs): New function holds symbol-reading
	code factored-out from ecoff_link_check_archive_element.
	(reread_ext_syms_and_strs): Clear old symbols and call it.
	(ecoff_link_check_archive_element):  Use the above.  Handle substitute
	BFD if one is set by add_archive_element callback.
	(ecoff_link_add_archive_symbols): Likewise allow bfd substitution.
	* elflink.c (elf_link_add_archive_symbols): Likewise.
	* linker.c (generic_link_check_archive_element): Likewise.
	* pdp11.c (aout_link_check_ar_symbols): Take new "subsbfd" reference
	parameter and pass it when invoking add_archive_element callback.
	(aout_link_check_archive_element): Handle substitute bfd if it was
	set during add_archive_element callback in the above.
	* vms-alpha.c (alpha_vms_link_add_archive_symbols): Handle substitute
	BFD if one is set by add_archive_element callback.
	* xcofflink.c (xcoff_link_check_dynamic_ar_symbols): Take new "subsbfd"
	reference parameter and pass it when invoking add_archive_element
	callback.
	(xcoff_link_check_ar_symbols): Likewise.
	(xcoff_link_check_archive_element): Handle bfd substitution if it was
	set by callback in the above.

  include/ChangeLog:

2010-10-14  Dave Korn  <dave.korn.cygwin@@gmail.com>

	Apply LD plugin patch series (part 6/6).
	* bfdlink.h (struct_bfd_link_callbacks): Document new argument
	to add_archive_element callback used to return a replacement bfd which
	is to be added to the hash table in place of the original element.

  ld/ChangeLog:

2010-10-14  Dave Korn  <dave.korn.cygwin@@gmail.com>

	Apply LD plugin patch series (part 6/6).
	* ldlang.c (load_symbols): Handle bfd subsitution when calling the
	add_archive_element callback.
	* ldmain.c (add_archive_element)[ENABLE_PLUGINS]: Offer the archive
	member to the plugins and if claimed set "subsbfd" output parameter to
	point to the dummy IR-only BFD.

  ld/testsuite/ChangeLog:

2010-10-14  Dave Korn  <dave.korn.cygwin@@gmail.com>

	Apply LD plugin patch series (part 6/6).
	* ld-plugin/plugin-10.d: New dump test control script.
	* ld-plugin/plugin-11.d: Likewise.
	* ld-plugin/plugin.exp: Run them.
---
@
text
@d132 3
@


1.28
log
@Regenerate tree using Autoconf 2.64 and Automake 1.11.

config/:
	* override.m4 (_GCC_AUTOCONF_VERSION): Bump to 2.64.

/:
	* configure: Regenerate.

etc/:
	* configure: Regenerate.

sim/common/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/iq2000/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/d10v/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/igen/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/m32r/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/frv/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/:
	* avr/config.in: Regenerate.
	* avr/configure: Likewise.
	* configure: Likewise.
	* cris/config.in: Likewise.
	* cris/configure: Likewise.

sim/h8300/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/mn10300/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/ppc/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/erc32/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/arm/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/m68hc11/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/lm32/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/sh64/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/v850/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/cr16/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/moxie/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/m32c/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/mips/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/mcore/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/testsuite/d10v-elf/:
	* configure: Regenerate.

sim/testsuite/:
	* configure: Regenerate.

sim/testsuite/frv-elf/:
	* configure: Regenerate.

sim/testsuite/m32r-elf/:
	* configure: Regenerate.

sim/testsuite/mips64el-elf/:
	* configure: Regenerate.

sim/sh/:
	* config.in: Regenerate.
	* configure: Likewise.

gold/:
	* Makefile.in: Regenerate.
	* aclocal.m4: Likewise.
	* config.in: Likewise.
	* configure: Likewise.
	* testsuite/Makefile.in: Likewise.

gprof/:
	* Makefile.in: Regenerate.
	* aclocal.m4: Likewise.
	* configure: Likewise.
	* gconfig.in: Likewise.

opcodes/:
	* Makefile.in: Regenerate.
	* aclocal.m4: Likewise.
	* config.in: Likewise.
	* configure: Likewise.

gas/:
	* Makefile.in: Regenerate.
	* aclocal.m4: Likewise.
	* config.in: Likewise.
	* configure: Likewise.
	* doc/Makefile.in: Likewise.

ld/:
	* Makefile.in: Regenerate.
	* aclocal.m4: Likewise.
	* config.in: Likewise.
	* configure: Likewise.

gdb/:
	* aclocal.m4: Regenerate.
	* config.in: Likewise.
	* configure: Likewise.
	* gnulib/Makefile.in: Likewise.

gdb/doc/:
	* configure: Regenerate.

gdb/gdbserver/:
	* aclocal.m4: Regenerate.
	* config.in: Likewise.
	* configure: Likewise.

gdb/testsuite/:
	* configure: Regenerate.
	* gdb.hp/configure: Likewise.
	* gdb.hp/gdb.aCC/configure: Likewise.
	* gdb.hp/gdb.base-hp/configure: Likewise.
	* gdb.hp/gdb.compat/configure: Likewise.
	* gdb.hp/gdb.defects/configure: Likewise.
	* gdb.hp/gdb.objdbg/configure: Likewise.
	* gdb.stabs/configure: Likewise.

binutils/:
	* Makefile.in: Regenerate.
	* aclocal.m4: Likewise.
	* config.in: Likewise.
	* configure: Likewise.
	* doc/Makefile.in: Likewise.

bfd/:
	* Makefile.in: Regenerate.
	* aclocal.m4: Likewise.
	* config.in: Likewise.
	* configure: Likewise.

bfd/doc/:
	* Makefile.in: Regenerate.

readline/:
	* configure: Regenerate.

readline/examples/rlfe/:
	* configure: Regenerate.
@
text
@d13 3
d43 3
d49 6
d58 3
d70 3
d82 3
d107 3
d120 3
@


1.27
log
@bfd/
	Fix loading large elf64 binaries on 32bit hosts.
	* configure.in: Call AC_SYS_LARGEFILE.
	* config.in: Regenerate.
	* configure: Regenerate.

binutils/
	Fix loading large elf64 binaries on 32bit hosts.
	* configure.in: Call AC_SYS_LARGEFILE.
	* config.in: Regenerate.
	* configure: Regenerate.

gas/
	* configure.in: Call AC_SYS_LARGEFILE.
	* config.in: Regenerate.
	* configure: Regenerate.

gprof/
	* configure.in: Call AC_SYS_LARGEFILE.
	* gconfig.in: Regenerate.
	* configure: Regenerate.

ld/
	* configure.in: Call AC_SYS_LARGEFILE.
	* config.in: Regenerate.
	* configure: Regenerate.

libiberty/
	* configure.in: Call AC_SYS_LARGEFILE.
	* config.in: Regenerate.
	* configure: Regenerate.
@
text
@d127 3
d133 1
a133 1
/* The size of a `long', as computed by sizeof. */
d142 22
a173 5
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# undef _GNU_SOURCE
#endif

a185 22

/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# undef _ALL_SOURCE
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# undef _GNU_SOURCE
#endif
/* Enable threading extensions on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# undef _POSIX_PTHREAD_SEMANTICS
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# undef _TANDEM_SOURCE
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# undef __EXTENSIONS__
#endif

@


1.26
log
@	PR 6526
	* configure.in: Invoke AC_USE_SYSTEM_EXTENSIONS.
@
text
@d146 3
d154 3
@


1.25
log
@2008-07-12  Craig Silverstein  <csilvers@@google.com>

        * configure.in: Check for, and include, libz.a if it is
          present.
        * configure: Regenerate.
        * config.in: Regenerate.
@
text
@d150 32
@


1.24
log
@	* configure: Regenerate.

config/
	* override.m4: Use m4_version_prereq throughout.
	(_AC_ARG_VAR_VALIDATE, AC_MSG_FAILURE): Backport from git
	Autoconf: output pwd along with fatal errors, so the right
	config.log file is hinted at more prominently.
	(PARSE_ARGS): Push setting of ac_pwd in this diversion.
	(_GCC_AUTOCONF_VERSION): New, define to 2.59 if not defined.
	(_GCC_AUTOCONF_VERSION_CHECK): New macro, require use of Autoconf
	version _GCC_AUTOCONF_VERSION throughout the tree.
	(m4_wrap): New override, fix for Posix semantics of m4wrap.

binutils/
	* configure: Regenerate.

opcodes/
	* configure: Regenerate.

bfd/
	* configure: Regenerate.

gas/
	* configure: Regenerate.

gprof/
	* configure: Regenerate.

ld/
	* config.in: Regenerate.
	* configure: Regenerate.
@
text
@d105 3
@


1.23
log
@        Multi-GOT support for m68k.

        bfd/

        * elf32-m68k.c (struct elf_m68k_link_hash_entry: got_entry_key,
        glist): New fields.
        (struct elf_m68k_got_entry_key, struct elf_m68k_got_entry,
        struct elf_m68k_got, struct elf_m68k_bfd2got_entry,
        struct elf_m68k_multi_got): New data structures.
        (struct elf_m68k_link_hash_table: local_gp_p, use_neg_got_offsets_p,
        allow_multigot_p, multi_got_): New fields.
        (elf_m68k_multi_got): New macro.
        (elf_m68k_link_hash_newfunc): Initialize new fields of
        struct elf_m68k_link_hash_entry.
        (elf_m68k_link_hash_table_create): Initialize new fields of
        struct elf_m68k_link_hash_table.
        (elf_m68k_link_hash_table_free): New static function implementing hook.
        (elf_m68k_init_got, elf_m68k_clear_got, elf_m68k_create_empty_got): New
        static functions for struct elf_m68k_got.
        (elf_m68k_init_got_entry_key, elf_m68k_got_entry_hash,
        elf_m68k_got_entry_eq): New static functions for
        struct elf_m68k_got_entry.
        (ELF_M68K_REL_8O_MAX_N_ENTRIES_IN_GOT,
        ELF_M68K_REL_8O_16O_MAX_N_ENTRIES_IN_GOT): New macros.
        (enum elf_m68k_get_entry_howto): New enum.
        (elf_m68k_get_got_entry, elf_m68k_update_got_entry_type,
        elf_m68k_remove_got_entry_type): New static functions for
        struct elf_m68k_got_entry.
        (elf_m68k_add_entry_to_got): New static function.
        (elf_m68k_bfd2got_entry_hash, elf_m68k_bfd2got_entry_eq,
        elf_m68k_bfd2got_entry_del, elf_m68k_get_bfd2got_entry): New static
        functions for struct elf_m68k_bfd2got_entry.
        (struct elf_m68k_can_merge_gots_arg, elf_m68k_can_merge_gots_1,
        elf_m68k_can_merge_gots): New traversal.
        (struct elf_m68k_merge_gots_arg, elf_m68k_merge_gots_1,
        elf_m68k_merge_gots): Ditto.
        (struct elf_m68k_finalize_got_offsets_arg,
        elf_m68k_finalize_got_offsets_1, elf_m68k_finalize_got_offsets): Ditto.
        (struct elf_m68k_partition_multi_got_arg,
        elf_m68k_partition_multi_got_1, elf_m68k_init_symndx2h_1,
        elf_m68k_partition_multi_got): Ditto.
        (elf_m68k_find_got_entry_ptr, elf_m68k_remove_got_entry): New static
        functions.
        (elf_m68k_copy_indirect_symbol): New static function implementing
        a hook.
        (elf_m68k_check_relocs): Update to add entries to multi-GOT.
        (elf_m68k_gc_sweep_hook): Update to remove entries from multi-GOT.
        (elf_m68k_always_size_sections): Assign BFDs to GOTs.
        (elf_m68k_relocate_section): Update to properly handle GOT relocations.
        (elf_m68k_finish_dynamic_symbol): Update to traverse all GOT entries
        of a global symbol.
        (bfd_elf_m68k_set_target_options): New function.
        (bfd_elf32_bfd_link_hash_table_free): Define hook.
        (bfd_elf32_bfd_final_link): Change expansion to bfd_elf_final_link
        to skip generic calculation of GOT offsets.
        (elf_backend_copy_indirect_symbol): Define hook.

        * bfd-in.h (bfd_elf_m68k_set_target_options): Declare function.
        * bfd-in2.h: Regenerate.

        ld/

        * configure.in (--enable-got): New option.  Handle it.
        * configure: Regenerate.
        * config.in: Regenerate.

        * emultempl/m68kelf.em: (got_handling_target_default): New shell
        variable.
        (GOT_HANDLING_TARGET_DEFAULT): New macro.
        (GOT_HANDLING_DEFAULT): New macro.  Initialize it from configure
        option if one was given.
        (got_handling): New static variable.
        (elf_m68k_create_output_section_statements): New static function
        implementing hook.
        (PARSE_AND_LIST_PROLOGUE): Define shell variable.
        (OPTION_GOT): New macro.
        (PARSE_AND_LIST_LONGOPTS): Define shell variable.  Specify
        --got option.
        (got): New linker option.
        (PARSE_AND_LIST_OPTIONS): Define shell variable.  Print help string
        for --got option.
        (PARSE_AND_LIST_ARGS_CASES): Define shell variable.  Handle --got
        option.

        * ld.texinfo: Document --got=<type> option.
        * gen-doc.texi: Add M68K.
        * NEWS: Mention the new feature.

        ld/testsuite/

        * ld-m68k/got-12.s: New file.
        * ld-m68k/got-13.s: New file.
        * ld-m68k/got-14.s: New file.
        * ld-m68k/got-15.s: New file.
        * ld-m68k/got-34.s: New file.
        * ld-m68k/got-35.s: New file.
        * ld-m68k/got-single-12-ok.d: New dump test.
        * ld-m68k/got-single-13-er.d: New dump test.
        * ld-m68k/got-negative-14-ok.d: New dump test.
        * ld-m68k/got-negative-15-er.d: New dump test.
        * ld-m68k/got-negative-12-13-14-34-ok.d: New dump test.
        * ld-m68k/got-negative-12-13-14-35-er.d: New dump test.
        * ld-m68k/got-multigot-14-ok.d: New dump test.
        * ld-m68k/got-multigot-15-er.d: New dump test.
        * ld-m68k/got-multigot-12-13-14-34-35-ok.d: New dump test.
        * ld-m68k/xgot-15.s: New source.
        * ld-m68k/got-xgot-15-ok.d: New test.
        * ld-m68k/got-xgot-12-13-14-15-34-35-ok.d: New test.
        * ld-m68k/m68k.exp: Run new tests.
@
text
@d10 1
a10 1
/* Define to choose default GOT handling scheme.  */
@


1.22
log
@	* Makefile.am (INCLUDES): Remove -D_GNU_SOURCE.
	* configure.in: Invoke AC_GNU_SOURCE.
	* Makefile.in: Regenerate.
	* config.in: Regenerate.
	* configure: Regenerate.
	* po/POTFILES.in: Regenerate.
@
text
@d10 3
@


1.21
log
@Regenerate files.
@
text
@d139 5
@


1.20
log
@	* Makefile.am: Add dependency on ldemul-list.h for powerpc and
	spu target emul files.
	* configure.in: Check for mkstemp and waitpid.
	* Makefile.in: Regenerate.
	* configure: Regenerate.
	* config.in: Regenerate.
	* ldlang.c (input_file_chain): Make global.
	(lang_add_input_file): Don't set lang_has_input_file here.
	* ldlang.h (input_file_chain): Declare.
	* emultempl/ppc32elf.em (ppc_recognized_file): New function.
	(LDEMUL_RECOGNIZED_FILE): Define.
	* emultempl/ppc64elf.em (ppc64_recognized_file): New function.
	(LDEMUL_RECOGNIZED_FILE): Define.
	* emultempl/spuelf.em (struct tflist): New.
	(tmp_file_list): New var.
@
text
@d37 3
d102 4
@


1.19
log
@2006-10-24  H.J. Lu  <hongjiu.lu@@intel.com>

	* configure.in (AC_CHECK_HEADERS): Add limits.h and sys/param.h.
	* configure: Regenerated.
	* config.in: Likewise.
@
text
@d52 3
d96 3
@


1.18
log
@	* config.in: Regenerate.
@
text
@d46 3
d81 3
@


1.17
log
@	* config.in: Regenerated.
@
text
@d3 2
a4 9
/* Define to one of `_getb67', `GETB67', `getb67' for Cray-2 and Cray-YMP
   systems. This function is required for `alloca.c' support on those systems.
   */
#undef CRAY_STACKSEG_END

/* Define to 1 if using `alloca.c'. */
#undef C_ALLOCA

/* Define to 1 if NLS is requested */
a9 13
/* Define to 1 if you have `alloca', as a function or macro. */
#undef HAVE_ALLOCA

/* Define to 1 if you have <alloca.h> and it should be used (not on Ultrix).
   */
#undef HAVE_ALLOCA_H

/* Define to 1 if you have the <argz.h> header file. */
#undef HAVE_ARGZ_H

/* Define to 1 if you have the `dcgettext' function. */
#undef HAVE_DCGETTEXT

a39 9
/* Define to 1 if you have the `getcwd' function. */
#undef HAVE_GETCWD

/* Define to 1 if you have the `getpagesize' function. */
#undef HAVE_GETPAGESIZE

/* Define as 1 if you have gettext and don't want to use GNU gettext. */
#undef HAVE_GETTEXT

a45 12
/* Define if your locale.h file contains LC_MESSAGES. */
#undef HAVE_LC_MESSAGES

/* Define to 1 if you have the <limits.h> header file. */
#undef HAVE_LIMITS_H

/* Define to 1 if you have the <locale.h> header file. */
#undef HAVE_LOCALE_H

/* Define to 1 if you have the <malloc.h> header file. */
#undef HAVE_MALLOC_H

a48 6
/* Define to 1 if you have a working `mmap' system call. */
#undef HAVE_MMAP

/* Define to 1 if you have the `munmap' function. */
#undef HAVE_MUNMAP

a51 6
/* Define to 1 if you have the <nl_types.h> header file. */
#undef HAVE_NL_TYPES_H

/* Define to 1 if you have the `putenv' function. */
#undef HAVE_PUTENV

a57 6
/* Define to 1 if you have the `setenv' function. */
#undef HAVE_SETENV

/* Define to 1 if you have the `setlocale' function. */
#undef HAVE_SETLOCALE

a63 9
/* Define if you have the stpcpy function */
#undef HAVE_STPCPY

/* Define to 1 if you have the `strcasecmp' function. */
#undef HAVE_STRCASECMP

/* Define to 1 if you have the `strchr' function. */
#undef HAVE_STRCHR

a77 3
/* Define to 1 if you have the <sys/param.h> header file. */
#undef HAVE_SYS_PARAM_H

a86 12
/* Define to 1 if you have the <values.h> header file. */
#undef HAVE_VALUES_H

/* Define to 1 if you have the `__argz_count' function. */
#undef HAVE___ARGZ_COUNT

/* Define to 1 if you have the `__argz_next' function. */
#undef HAVE___ARGZ_NEXT

/* Define to 1 if you have the `__argz_stringify' function. */
#undef HAVE___ARGZ_STRINGIFY

d105 2
a106 7
/* If using the C implementation of alloca, define if you know the
   direction of stack growth for your system; otherwise it will be
   automatically deduced at run-time.
	STACK_DIRECTION > 0 => grows toward higher addresses
	STACK_DIRECTION < 0 => grows toward lower addresses
	STACK_DIRECTION = 0 => direction of growth unknown */
#undef STACK_DIRECTION
a119 15

/* Define to empty if `const' does not conform to ANSI C. */
#undef const

/* Define to `__inline__' or `__inline' if that's what the C compiler
   calls it, or to nothing if 'inline' is not supported under any name.  */
#ifndef __cplusplus
#undef inline
#endif

/* Define to `long' if <sys/types.h> does not define. */
#undef off_t

/* Define to `unsigned' if <sys/types.h> does not define. */
#undef size_t
@


1.16
log
@configure clean up patch from Steve Ellcey.
* configure.in (AM_BINUTILS_WARNINGS): Add.
(BFD_NEED_DECLARATION) Replace with AC_CHECK_DECLS.
* config.in: Regenerate.
* configure: Regenerate.
* sysdep.h (NEED_DECLARATION_*): Replace with HAVE_DECL_*
* ldmain.c: Ditto.
@
text
@d57 3
@


1.16.2.1
log
@Merge changes between binutils-csl-2_17-branchpoint and
binutils-2_17, except for the addition of generated files to CVS.
@
text
@a56 3
/* Define to 1 if you have the <elf-hints.h> header file. */
#undef HAVE_ELF_HINTS_H

@


1.16.4.1
log
@	* config.in: Regenerated.
@
text
@a56 3
/* Define to 1 if you have the <elf-hints.h> header file. */
#undef HAVE_ELF_HINTS_H

@


1.15
log
@./
	* ylwrap: Import from Automake 1.9.5.
binutils/
	* acinclude.m4: Remove obsolete code.
	* configure.in: Update AC_PREREQ.
	* doc/Makefile.am (binutils_TEXINFOS): Define.
	(config.texi): Depend on distributed files instead of built
	files.
	(binutils.dvi, binutils.info): Remove unnecessary rules.
	(DISTCLEANFILES): Remove.
	(install-data-local): Renamed from install.
	(info-local): Renamed from info.
	* Makefile.in, aclocal.m4, config.in, configure,
	doc/Makefile.in: Regenerated.
gas/
	* Makefile.am (m68k-parse.c, itbl-parse.c): Update ylwrap
	invocation.
	* Makefile.in: Regenerated.
ld/
	* Makefile.am (AM_MAKEINFOFLAGS): Define.
	(TEXI2DVI): Define.
	(ldver.texi): Depend on distributed files instead of built files.
	(ld.info): Include $(srcdir) in the rule target.  Remove actions.
	(ld.dvi): Remove actions.
	(MAINTAINERCLEANFILES): Add configdoc.texi.
	(CONFIG_STATUS_DEPENDENCIES): Add bfd/configure.in.
	(install-data-local): Renamed from install.
	(Makefile): Remove explicit dependency.
	* acinclude.m4: Remove obsolete code.
	* configure.in: Update AC_PREREQ.  Remove extra $CONFIG_SHELL.
	* Makefile.in, aclocal.m4, config.in, configure: Regenerated.
gdb/
	* Makefile.in (.y.c): Update ylwrap invocation.
@
text
@d30 12
d45 8
a166 15
/* Define if environ is not declared in system header files. */
#undef NEED_DECLARATION_ENVIRON

/* Define if free is not declared in system header files. */
#undef NEED_DECLARATION_FREE

/* Define if getenv is not declared in system header files. */
#undef NEED_DECLARATION_GETENV

/* Define if sbrk is not declared in system header files. */
#undef NEED_DECLARATION_SBRK

/* Define if strstr is not declared in system header files. */
#undef NEED_DECLARATION_STRSTR

@


1.14
log
@bfd/
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
	* aclocal.m4: Regenerate.
	* libcoff.h: Regenerate.
bfd/doc/
	* Makefile.in: Regenerate.
binutils/
	* Makefile.am: Run "make dep-am".
	(syslex.o, sysinfo.o, arparse.o, arlex.o): Add -Wno-error to command.
	(sysroff.o, defparse.o, deflex.o): Likewise.
	(nlmheader.o, rcparse.o, rclex.o): Likewise.
	* Makefile.in: Regenerate.
	* aclocal.m4: Regenerate.
	* config.in: Regenerate.
	* configure: Regenerate.
gas/
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
ld/
	* Makefile.am: Run "make dep-am".
	(ldgram.o, ldlex.o, deffilep.o): Add -Wno-error to command.
	* Makefile.in: Regenerate.
	* config.in: Regenerate.
@
text
@d1 1
a1 1
/* config.in.  Generated automatically from configure.in by autoheader.  */
d3 6
a8 1
/* Define if using alloca.c.  */
d11 2
a12 2
/* Define to empty if the keyword does not work.  */
#undef const
d14 2
a15 3
/* Define to one of _getb67, GETB67, getb67 for Cray-2 and Cray-YMP systems.
   This function is required for alloca.c support on those systems.  */
#undef CRAY_STACKSEG_END
d17 1
a17 1
/* Define if you have alloca, as a function or macro.  */
d20 2
a21 1
/* Define if you have <alloca.h> and it should be used (not on Ultrix).  */
d24 5
a28 2
/* Define if you have a working `mmap' system call.  */
#undef HAVE_MMAP
d30 2
a31 2
/* Define as __inline if that's what the C compiler calls it.  */
#undef inline
d33 3
a35 2
/* Define to `long' if <sys/types.h> doesn't define.  */
#undef off_t
d37 2
a38 2
/* Define to `unsigned' if <sys/types.h> doesn't define.  */
#undef size_t
d40 2
a41 8
/* If using the C implementation of alloca, define if you know the
   direction of stack growth for your system; otherwise it will be
   automatically deduced at run-time.
 STACK_DIRECTION > 0 => grows toward higher addresses
 STACK_DIRECTION < 0 => grows toward lower addresses
 STACK_DIRECTION = 0 => direction of growth unknown
 */
#undef STACK_DIRECTION
d43 2
a44 2
/* Define if you have the ANSI C header files.  */
#undef STDC_HEADERS
d46 2
a47 2
/* Define if lex declares yytext as a char * by default, not a char[].  */
#undef YYTEXT_POINTER
d49 2
a50 2
/* Define if you have the __argz_count function.  */
#undef HAVE___ARGZ_COUNT
d52 2
a53 2
/* Define if you have the __argz_next function.  */
#undef HAVE___ARGZ_NEXT
d55 2
a56 2
/* Define if you have the __argz_stringify function.  */
#undef HAVE___ARGZ_STRINGIFY
d58 2
a59 2
/* Define if you have the dcgettext function.  */
#undef HAVE_DCGETTEXT
d61 2
a62 2
/* Define if you have the getcwd function.  */
#undef HAVE_GETCWD
d64 2
a65 2
/* Define if you have the getpagesize function.  */
#undef HAVE_GETPAGESIZE
d67 2
a68 2
/* Define if you have the glob function.  */
#undef HAVE_GLOB
d70 1
a70 1
/* Define if you have the munmap function.  */
d73 7
a79 1
/* Define if you have the putenv function.  */
d82 1
a82 1
/* Define if you have the realpath function.  */
d85 1
a85 1
/* Define if you have the sbrk function.  */
d88 1
a88 1
/* Define if you have the setenv function.  */
d91 1
a91 1
/* Define if you have the setlocale function.  */
d94 7
a100 1
/* Define if you have the stpcpy function.  */
d103 1
a103 1
/* Define if you have the strcasecmp function.  */
d106 1
a106 1
/* Define if you have the strchr function.  */
d109 9
a117 2
/* Define if you have the <argz.h> header file.  */
#undef HAVE_ARGZ_H
d119 3
a121 2
/* Define if you have the <dirent.h> header file.  */
#undef HAVE_DIRENT_H
d123 2
a124 2
/* Define if you have the <limits.h> header file.  */
#undef HAVE_LIMITS_H
d126 2
a127 2
/* Define if you have the <locale.h> header file.  */
#undef HAVE_LOCALE_H
d129 2
a130 2
/* Define if you have the <malloc.h> header file.  */
#undef HAVE_MALLOC_H
d132 2
a133 2
/* Define if you have the <ndir.h> header file.  */
#undef HAVE_NDIR_H
d135 2
a136 2
/* Define if you have the <nl_types.h> header file.  */
#undef HAVE_NL_TYPES_H
d138 2
a139 2
/* Define if you have the <stdlib.h> header file.  */
#undef HAVE_STDLIB_H
d141 2
a142 2
/* Define if you have the <string.h> header file.  */
#undef HAVE_STRING_H
d144 2
a145 2
/* Define if you have the <strings.h> header file.  */
#undef HAVE_STRINGS_H
d147 2
a148 2
/* Define if you have the <sys/dir.h> header file.  */
#undef HAVE_SYS_DIR_H
d150 2
a151 2
/* Define if you have the <sys/ndir.h> header file.  */
#undef HAVE_SYS_NDIR_H
d153 2
a154 2
/* Define if you have the <sys/param.h> header file.  */
#undef HAVE_SYS_PARAM_H
d156 2
a157 2
/* Define if you have the <unistd.h> header file.  */
#undef HAVE_UNISTD_H
d159 2
a160 2
/* Define if you have the <values.h> header file.  */
#undef HAVE_VALUES_H
d165 5
a169 2
/* Version number of package */
#undef VERSION
d171 2
a172 2
/* Define if you have the stpcpy function */
#undef HAVE_STPCPY
d174 2
a175 2
/* Define if your locale.h file contains LC_MESSAGES. */
#undef HAVE_LC_MESSAGES
d177 2
a178 2
/* Define as 1 if you have gettext and don't want to use GNU gettext. */
#undef HAVE_GETTEXT
d180 7
a186 2
/* Define to 1 if NLS is requested */
#undef ENABLE_NLS
d188 2
a189 2
/* Is the prototype for getopt in <unistd.h> in the expected format? */
#undef HAVE_DECL_GETOPT
d194 2
a195 2
/* Define if strstr is not declared in system header files. */
#undef NEED_DECLARATION_STRSTR
d197 3
a199 2
/* Define if free is not declared in system header files. */
#undef NEED_DECLARATION_FREE
d201 2
a202 2
/* Define if sbrk is not declared in system header files. */
#undef NEED_DECLARATION_SBRK
d204 5
a208 2
/* Define if getenv is not declared in system header files. */
#undef NEED_DECLARATION_GETENV
d210 2
a211 5
/* Define if environ is not declared in system header files. */
#undef NEED_DECLARATION_ENVIRON

/* Additional extension a shared object might have. */
#undef EXTRA_SHLIB_EXTENSION
d213 2
@


1.13
log
@Add a check for <unistd.h> providing a prototype for getopt() which is compatible
with the one in	include/getopt.h.  If so then define HAVE_DECL_GETOPT.
@
text
@d157 3
a180 2
/* Is the prototype for getopt in <unistd.h> in the expected format?  */
#undef HAVE_DECL_GETOPT
@


1.12
log
@	* config.in: Regenerate.
	* configure: Regenerate.
@
text
@d178 2
@


1.11
log
@	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
	* config.in: Regenerate.
	* configure: Regenerate.
	* aclocal.m4: Regenerate.
	* po/ld.pot: Regenerate.
@
text
@d64 3
d151 3
a156 3
/* Define as 1 if you have gettext and don't want to use GNU gettext. */
#undef HAVE_GETTEXT

@


1.10
log
@	* config.in: Regenerate.
	* po/ld.pot: Regenerate.
@
text
@a129 6
/* Define if you have the <sys/stat.h> header file.  */
#undef HAVE_SYS_STAT_H

/* Define if you have the <sys/types.h> header file.  */
#undef HAVE_SYS_TYPES_H

@


1.9
log
@(HAVE_REALPATH): New entry.
(HAVE_SYS_STAT_H, HAVE_SYS_TYPES_H): Removed: obsolete.
@
text
@a27 3
/* Define if you need to in order for stat and other things to work.  */
#undef _POSIX_SOURCE

d129 6
@


1.8
log
@	* Makefile.in: Regenerate.
	* aclocal.m4: Regenerate.
	* config.in: Regenerate.
	* configure: Regenerate.
@
text
@d73 3
a131 6

/* Define if you have the <sys/stat.h> header file.  */
#undef HAVE_SYS_STAT_H

/* Define if you have the <sys/types.h> header file.  */
#undef HAVE_SYS_TYPES_H
@


1.7
log
@Contribute sh64-elf.
2002-01-24  Alexandre Oliva  <aoliva@@redhat.com>
* emulparams/shelf32.sh (STACK_ADDR): Define as formerly defined
in OTHER_RELOCATABLE_SECTIONS.
2002-01-18  Alexandre Oliva  <aoliva@@redhat.com>
* emulparams/shelf32.sh (STACK_ADDR): Define.
(OTHER_RELOCATABLE_SECTIONS): Renamed to...
(OTHER_SECTIONS): this.	 Removed stack settings.
* emulparams/shelf64.sh (OTHER_RELOCATABLE_SECTIONS): Do not set.
(OTHER_SECTIONS): Reset after sourcing shelf32.sh.
2001-03-12  DJ Delorie	<dj@@redhat.com>
* emultempl/sh64elf.em (sh64_elf_$_before_allocation): Disable
relaxing if any shmedia or mixed sections are found.
2001-03-07  DJ Delorie	<dj@@redhat.com>
* emultempl/sh64elf.em (sh64_elf_before_allocation): Pass f to
einfo.	Gracefully decline to output to non-elf formats.
2001-03-06  Hans-Peter Nilsson	<hpn@@redhat.com>
* emulparams/shelf64.sh (OTHER_RELOCATING_SECTIONS) <.stack>:
Default to _end aligned to next multiple of 0x40000, plus 0x40000.
* emulparams/shelf32.sh: Ditto.
2001-01-14  Hans-Peter Nilsson	<hpn@@cygnus.com>
* emulparams/shelf32.sh (OTHER_RELOCATING_SECTIONS): Tweak
comment.
2001-01-10  Ben Elliston  <bje@@redhat.com>
* emulparams/shelf32.sh (OTHER_RELOCATING_SECTIONS): Avoid
non-portable shell constructs. From Hans-Peter Nilsson.
2001-01-09  Hans-Peter Nilsson	<hpn@@cygnus.com>
* emulparams/shelf64.sh (EXTRA_EM_FILE): Define empty.
* Makefile.am (eshelf64.c, eshlelf64.c, eshlelf32.c): Adjust
dependencies to the shell script include chain.
* Makefile.in: Regenerate.
2001-01-06  Hans-Peter Nilsson	<hpn@@cygnus.com>
* emultempl/sh64elf.em: Update and tweak comments.
(sh64_elf_${EMULATION_NAME}_after_allocation): Always allocate and
make a .cranges section SEC_IN_MEMORY.
2000-12-30  Hans-Peter Nilsson	<hpn@@cygnus.com>
* emultempl/sh64elf.em
(sh64_elf_${EMULATION_NAME}_before_allocation): Don't stop when
.cranges section found to be necessary; continue and set stored
section contents flags for sections with non-mixed contents.
Use a struct sh64_section_data container and sh64_elf_section_data
to store contents-type flags.
Remove unused update of "isec".
(sh64_elf_${EMULATION_NAME}_after_allocation): Only process
sections marked SHF_SH5_ISA32_MIXED.  Use sh64_elf_section_data to
access contents-type flags.  Assert that the associated container
is initialized.	 Use that container, not elf_gp_size, to hold size
of linker-generated cranges contents.
2000-12-18  Hans-Peter Nilsson	<hpn@@cygnus.com>
* emultempl/sh64elf.em
(sh64_elf_${EMULATION_NAME}_before_allocation): Exit early if
there's already a .cranges section.  When section flag difference
is found, don't NULL-check cranges a second time.  Tweak comments.
(sh64_elf_${EMULATION_NAME}_after_allocation): Use size after
merging, not max size, as size of ld-generated .cranges contents.
Don't set ELF section flags in output section.	When checking for
needed .cranges descriptors, don't use a variable; compare
incoming ELF section flags directly to SHF_SH5_ISA32_MIXED.  Tweak
comments.
2000-12-18  Hans-Peter Nilsson	<hpn@@cygnus.com>
* emultempl/sh64elf.em: New file.
* Makefile.am (eshelf32.c, eshlelf32.c): Adjust dependencies.
* Makefile.in: Regenerate.
* emulparams/shelf32.sh (OUTPUT_FORMAT): Only set if not set.
(OTHER_RELOCATING_SECTIONS): Ditto.
(EXTRA_EM_FILE): New, set to sh64elf if not set.
* emulparams/shlelf32.sh: Stub out all settings except
OUTPUT_FORMAT.	Source shelf32.sh.
* emulparams/shelf64.sh: Similar, but also keep ELF_SIZE and
OTHER_RELOCATING_SECTIONS.
(OTHER_RELOCATING_SECTIONS): Remove .cranges.
* emulparams/shlelf64.sh: Stub out all settings except
OUTPUT_FORMAT.	Source shelf64.sh.
2000-12-15  Hans-Peter Nilsson	<hpn@@cygnus.com>
* emulparams/shelf64.sh (OTHER_RELOCATING_SECTIONS): Include
.cranges section.
(DATA_START_SYMBOLS): Define, provide ___data.
(OTHER_READONLY_SYMBOLS): Define, provide ___rodata and align to 8
for consecutive .data section.
(OTHER_GOT_SECTIONS): Define, align to 8 for consecutive .bss
section after .data section.
* emulparams/shlelf64.sh: Ditto.
* emulparams/shelf32.sh: Ditto.
(ALIGNMENT): Define to 8.
* emulparams/shelf32.sh: Ditto.
2000-12-12  Hans-Peter Nilsson	<hpn@@cygnus.com>
* configure.tgt (sh64-*-elf*): Assign targ_extra_libpath to get
built-in linker scripts.
2000-11-30  Hans-Peter Nilsson	<hpn@@cygnus.com>
* emulparams/shlelf64.sh: New.
* emulparams/shelf64.sh: New.
* configure.tgt (sh64-*-elf*): Add shelf64 and shlelf64 to
targ_extra_emuls.
* Makefile.am: Add support for shlelf64 and shelf64.
* Makefile.in: Regenerate.
2000-11-29  Hans-Peter Nilsson	<hpn@@cygnus.com>
* configure.tgt (sh64-*-elf*): Add shelf as default.
Add shlelf to targ_extra_emuls.
2000-11-24  Hans-Peter Nilsson	<hpn@@cygnus.com>
* emulparams/shelf32.sh: New file.
* emulparams/shlelf32.sh: New file.
* Makefile.am: Add support for shlelf32 and shelf32.
* configure.tgt: Map sh64-*-elf* to shlelf32 and shelf32.
* Makefile.in: Regenerate.
@
text
@d28 3
d129 6
@


1.6
log
@Add support for arm-vxworks target
@
text
@d3 1
a3 6
/* Define to one of `_getb67', `GETB67', `getb67' for Cray-2 and Cray-YMP
   systems. This function is required for `alloca.c' support on those systems.
   */
#undef CRAY_STACKSEG_END

/* Define if using `alloca.c'. */
d6 2
a7 2
/* Define to 1 if NLS is requested */
#undef ENABLE_NLS
d9 3
a11 2
/* Additional extension a shared object might have. */
#undef EXTRA_SHLIB_EXTENSION
d13 1
a13 1
/* Define if you have `alloca', as a function or macro. */
d16 1
a16 1
/* Define if you have <alloca.h> and it should be used (not on Ultrix). */
d19 2
a20 2
/* Define if you have the <argz.h> header file. */
#undef HAVE_ARGZ_H
d22 2
a23 2
/* Define if you have the `dcgettext' function. */
#undef HAVE_DCGETTEXT
d25 2
a26 2
/* Define if you have the <dirent.h> header file, and it defines `DIR'. */
#undef HAVE_DIRENT_H
d28 2
a29 2
/* Define if you have the `getcwd' function. */
#undef HAVE_GETCWD
d31 8
a38 2
/* Define if you have the `getpagesize' function. */
#undef HAVE_GETPAGESIZE
d40 2
a41 2
/* Define as 1 if you have gettext and don't want to use GNU gettext. */
#undef HAVE_GETTEXT
d43 2
a44 2
/* Define if you have the <inttypes.h> header file. */
#undef HAVE_INTTYPES_H
d46 2
a47 2
/* Define if your locale.h file contains LC_MESSAGES. */
#undef HAVE_LC_MESSAGES
d49 2
a50 2
/* Define if you have the <limits.h> header file. */
#undef HAVE_LIMITS_H
d52 2
a53 2
/* Define if you have the <locale.h> header file. */
#undef HAVE_LOCALE_H
d55 2
a56 2
/* Define if you have the <malloc.h> header file. */
#undef HAVE_MALLOC_H
d58 2
a59 2
/* Define if you have the <memory.h> header file. */
#undef HAVE_MEMORY_H
d61 2
a62 2
/* Define if you have a working `mmap' system call. */
#undef HAVE_MMAP
d64 1
a64 1
/* Define if you have the `munmap' function. */
d67 1
a67 7
/* Define if you have the <ndir.h> header file, and it defines `DIR'. */
#undef HAVE_NDIR_H

/* Define if you have the <nl_types.h> header file. */
#undef HAVE_NL_TYPES_H

/* Define if you have the `putenv' function. */
d70 1
a70 1
/* Define if you have the `sbrk' function. */
d73 1
a73 1
/* Define if you have the `setenv' function. */
d76 1
a76 1
/* Define if you have the `setlocale' function. */
d79 1
a79 4
/* Define if you have the <stdlib.h> header file. */
#undef HAVE_STDLIB_H

/* Define if you have the stpcpy function */
d82 1
a82 1
/* Define if you have the `strcasecmp' function. */
d85 1
a85 1
/* Define if you have the `strchr' function. */
d88 23
a110 2
/* Define if you have the <strings.h> header file. */
#undef HAVE_STRINGS_H
d112 1
a112 1
/* Define if you have the <string.h> header file. */
d115 4
a118 1
/* Define if you have the <sys/dir.h> header file, and it defines `DIR'. */
d121 1
a121 1
/* Define if you have the <sys/ndir.h> header file, and it defines `DIR'. */
d124 1
a124 1
/* Define if you have the <sys/param.h> header file. */
d127 1
a127 1
/* Define if you have the <unistd.h> header file. */
d130 1
a130 1
/* Define if you have the <values.h> header file. */
d133 2
a134 2
/* Define if you have the `__argz_count' function. */
#undef HAVE___ARGZ_COUNT
d136 2
a137 2
/* Define if you have the `__argz_next' function. */
#undef HAVE___ARGZ_NEXT
d139 2
a140 2
/* Define if you have the `__argz_stringify' function. */
#undef HAVE___ARGZ_STRINGIFY
d142 2
a143 2
/* Define if environ is not declared in system header files. */
#undef NEED_DECLARATION_ENVIRON
d145 2
a146 2
/* Define if free is not declared in system header files. */
#undef NEED_DECLARATION_FREE
d148 2
a149 2
/* Define if getenv is not declared in system header files. */
#undef NEED_DECLARATION_GETENV
d151 2
a152 2
/* Define if sbrk is not declared in system header files. */
#undef NEED_DECLARATION_SBRK
d157 2
a158 2
/* Name of package */
#undef PACKAGE
d160 2
a161 7
/* If using the C implementation of alloca, define if you know the
   direction of stack growth for your system; otherwise it will be
   automatically deduced at run-time.
        STACK_DIRECTION > 0 => grows toward higher addresses
        STACK_DIRECTION < 0 => grows toward lower addresses
        STACK_DIRECTION = 0 => direction of growth unknown */
#undef STACK_DIRECTION
d163 2
a164 2
/* Define if you have the ANSI C header files. */
#undef STDC_HEADERS
d166 2
a167 2
/* Use b modifier when opening binary files? */
#undef USE_BINARY_FOPEN
d169 2
a170 6
/* Version number of package */
#undef VERSION

/* Define if `lex' declares `yytext' as a `char *' by default, not a `char[]'.
   */
#undef YYTEXT_POINTER
a171 12
/* Define to empty if `const' does not conform to ANSI C. */
#undef const

/* Define as `__inline' if that's what the C compiler calls it, or to nothing
   if it is not supported. */
#undef inline

/* Define to `long' if <sys/types.h> does not define. */
#undef off_t

/* Define to `unsigned' if <sys/types.h> does not define. */
#undef size_t
@


1.5
log
@Fixtypos in ChangeLogs, fix copyright dates in files
@
text
@d3 6
a8 1
/* Define if using alloca.c.  */
d11 2
a12 2
/* Define to empty if the keyword does not work.  */
#undef const
d14 2
a15 3
/* Define to one of _getb67, GETB67, getb67 for Cray-2 and Cray-YMP systems.
   This function is required for alloca.c support on those systems.  */
#undef CRAY_STACKSEG_END
d17 1
a17 1
/* Define if you have alloca, as a function or macro.  */
d20 1
a20 1
/* Define if you have <alloca.h> and it should be used (not on Ultrix).  */
d23 2
a24 2
/* Define if you have a working `mmap' system call.  */
#undef HAVE_MMAP
d26 2
a27 2
/* Define as __inline if that's what the C compiler calls it.  */
#undef inline
d29 2
a30 2
/* Define to `long' if <sys/types.h> doesn't define.  */
#undef off_t
d32 2
a33 2
/* Define to `unsigned' if <sys/types.h> doesn't define.  */
#undef size_t
d35 2
a36 8
/* If using the C implementation of alloca, define if you know the
   direction of stack growth for your system; otherwise it will be
   automatically deduced at run-time.
 STACK_DIRECTION > 0 => grows toward higher addresses
 STACK_DIRECTION < 0 => grows toward lower addresses
 STACK_DIRECTION = 0 => direction of growth unknown
 */
#undef STACK_DIRECTION
d38 2
a39 2
/* Define if you have the ANSI C header files.  */
#undef STDC_HEADERS
d41 2
a42 2
/* Define if lex declares yytext as a char * by default, not a char[].  */
#undef YYTEXT_POINTER
d44 2
a45 2
/* Define if you have the __argz_count function.  */
#undef HAVE___ARGZ_COUNT
d47 2
a48 2
/* Define if you have the __argz_next function.  */
#undef HAVE___ARGZ_NEXT
d50 2
a51 2
/* Define if you have the __argz_stringify function.  */
#undef HAVE___ARGZ_STRINGIFY
d53 2
a54 2
/* Define if you have the dcgettext function.  */
#undef HAVE_DCGETTEXT
d56 2
a57 2
/* Define if you have the getcwd function.  */
#undef HAVE_GETCWD
d59 2
a60 2
/* Define if you have the getpagesize function.  */
#undef HAVE_GETPAGESIZE
d62 1
a62 1
/* Define if you have the munmap function.  */
d65 7
a71 1
/* Define if you have the putenv function.  */
d74 1
a74 1
/* Define if you have the sbrk function.  */
d77 1
a77 1
/* Define if you have the setenv function.  */
d80 1
a80 1
/* Define if you have the setlocale function.  */
d83 4
a86 1
/* Define if you have the stpcpy function.  */
d89 1
a89 1
/* Define if you have the strcasecmp function.  */
d92 1
a92 1
/* Define if you have the strchr function.  */
d95 2
a96 2
/* Define if you have the <argz.h> header file.  */
#undef HAVE_ARGZ_H
d98 2
a99 2
/* Define if you have the <dirent.h> header file.  */
#undef HAVE_DIRENT_H
d101 2
a102 2
/* Define if you have the <limits.h> header file.  */
#undef HAVE_LIMITS_H
d104 2
a105 2
/* Define if you have the <locale.h> header file.  */
#undef HAVE_LOCALE_H
d107 2
a108 2
/* Define if you have the <malloc.h> header file.  */
#undef HAVE_MALLOC_H
d110 2
a111 2
/* Define if you have the <ndir.h> header file.  */
#undef HAVE_NDIR_H
d113 2
a114 2
/* Define if you have the <nl_types.h> header file.  */
#undef HAVE_NL_TYPES_H
d116 2
a117 2
/* Define if you have the <stdlib.h> header file.  */
#undef HAVE_STDLIB_H
d119 2
a120 2
/* Define if you have the <string.h> header file.  */
#undef HAVE_STRING_H
d122 2
a123 2
/* Define if you have the <strings.h> header file.  */
#undef HAVE_STRINGS_H
d125 2
a126 2
/* Define if you have the <sys/dir.h> header file.  */
#undef HAVE_SYS_DIR_H
d128 2
a129 2
/* Define if you have the <sys/ndir.h> header file.  */
#undef HAVE_SYS_NDIR_H
d131 2
a132 2
/* Define if you have the <sys/param.h> header file.  */
#undef HAVE_SYS_PARAM_H
d134 2
a135 2
/* Define if you have the <unistd.h> header file.  */
#undef HAVE_UNISTD_H
d137 2
a138 2
/* Define if you have the <values.h> header file.  */
#undef HAVE_VALUES_H
d143 7
a149 2
/* Version number of package */
#undef VERSION
d151 2
a152 11
/* Define if you have the stpcpy function */
#undef HAVE_STPCPY

/* Define if your locale.h file contains LC_MESSAGES. */
#undef HAVE_LC_MESSAGES

/* Define to 1 if NLS is requested */
#undef ENABLE_NLS

/* Define as 1 if you have gettext and don't want to use GNU gettext. */
#undef HAVE_GETTEXT
d157 2
a158 2
/* Define if strstr is not declared in system header files. */
#undef NEED_DECLARATION_STRSTR
d160 3
a162 2
/* Define if free is not declared in system header files. */
#undef NEED_DECLARATION_FREE
d164 2
a165 2
/* Define if sbrk is not declared in system header files. */
#undef NEED_DECLARATION_SBRK
d167 3
a169 2
/* Define if getenv is not declared in system header files. */
#undef NEED_DECLARATION_GETENV
d171 2
a172 5
/* Define if environ is not declared in system header files. */
#undef NEED_DECLARATION_ENVIRON

/* Additional extension a shared object might have. */
#undef EXTRA_SHLIB_EXTENSION
d174 2
@


1.4
log
@Regenerate files using fixed aclocal install.
@
text
@a27 3
/* Define if you need to in order for stat and other things to work.  */
#undef _POSIX_SOURCE

@


1.3
log
@Increase minor version number (to 2.10.91) to help tools detect the new
ability to support removal of duplciate DWARF@@ debug information.
@
text
@a135 12
/* Define if you have the stpcpy function */
#undef HAVE_STPCPY

/* Define if your locale.h file contains LC_MESSAGES. */
#undef HAVE_LC_MESSAGES

/* Define to 1 if NLS is requested */
#undef ENABLE_NLS

/* Define as 1 if you have gettext and don't want to use GNU gettext. */
#undef HAVE_GETTEXT

@


1.2
log
@Wed Nov  3 23:31:19 1999  Jeffrey A Law  (law@@cygnus.com)

        * emultempl/elf32.em (gld${EMULATION_NAME}_open_dynamic_archive):
        Clean up code to use EXTRA_SHLIB_EXTENSION.

1999-09-14  Ulrich Drepper  <drepper@@cygnus.com>

        * configure.in: Define EXTRA_SHLIB_EXTENSION to ".sl" for HP target.
        * config.in: Add EXTRA_SHLIB_EXTENSION.

        * emultempl/elf32.em (gld${EMULATION_NAME}_open_dynamic_archive):
        Search for second shared lib extension only if EXTRA_SHLIB_EXTENSION
        is defined.
@
text
@d136 12
@


1.1
log
@Initial revision
@
text
@d172 3
@


1.1.1.1
log
@19990502 sourceware import
@
text
@@

