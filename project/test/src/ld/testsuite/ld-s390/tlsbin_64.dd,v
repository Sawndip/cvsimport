head	1.3;
access;
symbols
	binutils-2_24-branch:1.3.0.10
	binutils-2_24-branchpoint:1.3
	binutils-2_21_1:1.3
	binutils-2_23_2:1.3
	binutils-2_23_1:1.3
	binutils-2_23:1.3
	binutils-2_23-branch:1.3.0.8
	binutils-2_23-branchpoint:1.3
	binutils-2_22_branch:1.3.0.6
	binutils-2_22:1.3
	binutils-2_22-branch:1.3.0.4
	binutils-2_22-branchpoint:1.3
	binutils-2_21:1.3
	binutils-2_21-branch:1.3.0.2
	binutils-2_21-branchpoint:1.3
	binutils-2_20_1:1.2
	binutils-2_20:1.2
	binutils-arc-20081103-branch:1.2.0.22
	binutils-arc-20081103-branchpoint:1.2
	binutils-2_20-branch:1.2.0.20
	binutils-2_20-branchpoint:1.2
	dje-cgen-play1-branch:1.2.0.18
	dje-cgen-play1-branchpoint:1.2
	arc-20081103-branch:1.2.0.16
	arc-20081103-branchpoint:1.2
	binutils-2_19_1:1.2
	binutils-2_19:1.2
	binutils-2_19-branch:1.2.0.14
	binutils-2_19-branchpoint:1.2
	binutils-2_18:1.2
	binutils-2_18-branch:1.2.0.12
	binutils-2_18-branchpoint:1.2
	binutils-csl-coldfire-4_1-32:1.2
	binutils-csl-sourcerygxx-4_1-32:1.2
	binutils-csl-innovasic-fido-3_4_4-33:1.2
	binutils-csl-sourcerygxx-3_4_4-32:1.2
	binutils-csl-coldfire-4_1-30:1.2
	binutils-csl-sourcerygxx-4_1-30:1.2
	binutils-csl-coldfire-4_1-28:1.2
	binutils-csl-sourcerygxx-4_1-29:1.2
	binutils-csl-sourcerygxx-4_1-28:1.2
	binutils-csl-arm-2006q3-27:1.2
	binutils-csl-sourcerygxx-4_1-27:1.2
	binutils-csl-arm-2006q3-26:1.2
	binutils-csl-sourcerygxx-4_1-26:1.2
	binutils-csl-sourcerygxx-4_1-25:1.2
	binutils-csl-sourcerygxx-4_1-24:1.2
	binutils-csl-sourcerygxx-4_1-23:1.2
	binutils-csl-sourcerygxx-4_1-21:1.2
	binutils-csl-arm-2006q3-21:1.2
	binutils-csl-sourcerygxx-4_1-22:1.2
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.2
	binutils-csl-sourcerygxx-4_1-20:1.2
	binutils-csl-arm-2006q3-19:1.2
	binutils-csl-sourcerygxx-4_1-19:1.2
	binutils-csl-sourcerygxx-4_1-18:1.2
	binutils-csl-renesas-4_1-9:1.2
	binutils-csl-sourcerygxx-3_4_4-25:1.2
	binutils-csl-renesas-4_1-8:1.2
	binutils-csl-renesas-4_1-7:1.2
	binutils-csl-renesas-4_1-6:1.2
	binutils-csl-sourcerygxx-4_1-17:1.2
	binutils-csl-sourcerygxx-4_1-14:1.2
	binutils-csl-sourcerygxx-4_1-15:1.2
	binutils-csl-sourcerygxx-4_1-13:1.2
	binutils-2_17:1.2
	binutils-csl-sourcerygxx-4_1-12:1.2
	binutils-csl-sourcerygxx-3_4_4-21:1.2
	binutils-csl-wrs-linux-3_4_4-24:1.2
	binutils-csl-wrs-linux-3_4_4-23:1.2
	binutils-csl-sourcerygxx-4_1-9:1.2
	binutils-csl-sourcerygxx-4_1-8:1.2
	binutils-csl-sourcerygxx-4_1-7:1.2
	binutils-csl-arm-2006q1-6:1.2
	binutils-csl-sourcerygxx-4_1-6:1.2
	binutils-csl-wrs-linux-3_4_4-22:1.2
	binutils-csl-coldfire-4_1-11:1.2
	binutils-csl-sourcerygxx-3_4_4-19:1.2
	binutils-csl-coldfire-4_1-10:1.2
	binutils-csl-sourcerygxx-4_1-5:1.2
	binutils-csl-sourcerygxx-4_1-4:1.2
	binutils-csl-wrs-linux-3_4_4-21:1.2
	binutils-csl-morpho-4_1-4:1.2
	binutils-csl-sourcerygxx-3_4_4-17:1.2
	binutils-csl-wrs-linux-3_4_4-20:1.2
	binutils-2_17-branch:1.2.0.10
	binutils-2_17-branchpoint:1.2
	binutils-csl-2_17-branch:1.2.0.8
	binutils-csl-2_17-branchpoint:1.2
	binutils-csl-gxxpro-3_4-branch:1.2.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.2
	binutils-2_16_1:1.2
	binutils-csl-arm-2005q1b:1.2
	binutils-2_16:1.2
	binutils-csl-arm-2005q1a:1.2
	binutils-csl-arm-2005q1-branch:1.2.0.4
	binutils-csl-arm-2005q1-branchpoint:1.2
	binutils-2_16-branch:1.2.0.2
	binutils-2_16-branchpoint:1.2
	csl-arm-2004-q3d:1.2
	csl-arm-2004-q3:1.2
	binutils-2_15:1.1
	binutils-2_15-branchpoint:1.1
	csl-arm-2004-q1a:1.1
	csl-arm-2004-q1:1.1
	binutils-2_15-branch:1.1.0.8
	cagney_bfdfile-20040213-branch:1.1.0.6
	cagney_bfdfile-20040213-branchpoint:1.1
	cagney_bigcore-20040122-branch:1.1.0.4
	cagney_bigcore-20040122-branchpoint:1.1
	csl-arm-2003-q4:1.1
	binutils-2_14:1.1
	binutils-2_14-branch:1.1.0.2
	binutils-2_14-branchpoint:1.1
	binutils_latest_snapshot:1.3;
locks; strict;
comment	@# @;
expand	@o@;


1.3
date	2010.09.27.13.32.59;	author krebbel;	state Exp;
branches;
next	1.2;

1.2
date	2004.05.11.17.08.35;	author jakub;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.24.17.18.12;	author sky;	state Exp;
branches;
next	;


desc
@@


1.3
log
@2010-09-27  Andreas Krebbel  <Andreas.Krebbel@@de.ibm.com>

	* s390-dis.c (print_insn_s390): Pick instruction with most
	specific mask.
	* s390-opc.c: Add unused bits to the insn mask.
	* s390-opc.txt: Reorder some instructions to prefer more recent
	versions.

2010-09-27  Andreas Krebbel  <Andreas.Krebbel@@de.ibm.com>

	* gas/s390/esa-g5.d: Adjust serveral instructions.
	* gas/s390/esa-reloc.d: Likewise.
	* gas/s390/esa-z990.d: Likewise.
	* gas/s390/zarch-reloc.d: Likewise.
	* gas/s390/zarch-z10.d: Likewise.
	* gas/s390/zarch-z9-ec.d: Likewise.
	* gas/s390/zarch-z900.d: Likewise.

2010-09-27  Andreas Krebbel  <Andreas.Krebbel@@de.ibm.com>

	* ld-s390/tlsbin.dd: bcr 0,%r7 -> nopr %r7.
	* ld-s390/tlsbin_64.dd: Likewise.
	* ld-s390/tlspic.dd: Likewise.
	* ld-s390/tlspic_64.dd: Likewise.
@
text
@#source: tlsbinpic_64.s
#source: tlsbin_64.s
#as: -m64 -Aesame
#ld: -shared -melf64_s390
#objdump: -dzrj.text
#target: s390x-*-*

# PT_TLS layout is:
# Offset from   Offset from     Name
# TCB base      TCB end
# 0x00          -0xa0           sg1..sg2
# 0x20          -0x80           sl1..sl2
# 0x40          -0x60           sh1..sh2
# 0x60          -0x40           bg1..bg2
# 0x80          -0x20           bl1..bl2

.*: +file format elf64-s390

Disassembly of section .text:

0+[0-9a-f]+ <fn2>:
# function prolog
 +[0-9a-f]+:	eb 6e f0 30 00 24 	stmg	%r6,%r14,48\(%r15\)
 +[0-9a-f]+:	a7 d5 00 3e       	bras	%r13,[0-9a-f]+ <fn2\+0x82>
# sG1@@tlsgd
 +[0-9a-f]+:	00 00 00 00       	.long	0x00000000
 +[0-9a-f]+:	00 00 00 60       	.long	0x00000060
# sG2@@tlsgd
 +[0-9a-f]+:	00 00 00 00       	.long	0x00000000
 +[0-9a-f]+:	00 00 00 48       	.long	0x00000048
# sg1@@tlsgd
 +[0-9a-f]+:	ff ff ff ff       	.long	0xffffffff
 +[0-9a-f]+:	ff ff ff 60       	.long	0xffffff60
# sl1@@tlsgd
 +[0-9a-f]+:	ff ff ff ff       	.long	0xffffffff
 +[0-9a-f]+:	ff ff ff 80       	.long	0xffffff80
# sh1@@tlsgd
 +[0-9a-f]+:	ff ff ff ff       	.long	0xffffffff
 +[0-9a-f]+:	ff ff ff a0       	.long	0xffffffa0
# sl1@@tlsldm
 +[0-9a-f]+:	00 00 00 00       	.long	0x00000000
 +[0-9a-f]+:	00 00 00 00       	.long	0x00000000
# sl1@@dtpoff
 +[0-9a-f]+:	ff ff ff ff       	.long	0xffffffff
 +[0-9a-f]+:	ff ff ff 80       	.long	0xffffff80
# sl2@@dtpoff
 +[0-9a-f]+:	ff ff ff ff       	.long	0xffffffff
 +[0-9a-f]+:	ff ff ff 84       	.long	0xffffff84
# sh1@@tlsldm
 +[0-9a-f]+:	00 00 00 00       	.long	0x00000000
 +[0-9a-f]+:	00 00 00 00       	.long	0x00000000
# sh1@@dtpoff
 +[0-9a-f]+:	ff ff ff ff       	.long	0xffffffff
 +[0-9a-f]+:	ff ff ff a0       	.long	0xffffffa0
# sh2@@dtpoff
 +[0-9a-f]+:	ff ff ff ff       	.long	0xffffffff
 +[0-9a-f]+:	ff ff ff a4       	.long	0xffffffa4
# sG2@@gotntpoff
 +[0-9a-f]+:	00 00 00 00       	.long	0x00000000
 +[0-9a-f]+:	00 00 00 48       	.long	0x00000048
# sg1@@gotntpoff
 +[0-9a-f]+:	ff ff ff ff       	.long	0xffffffff
 +[0-9a-f]+:	ff ff ff 60       	.long	0xffffff60
# sl1@@gotntpoff
 +[0-9a-f]+:	ff ff ff ff       	.long	0xffffffff
 +[0-9a-f]+:	ff ff ff 80       	.long	0xffffff80
# sh1@@gotntpoff
 +[0-9a-f]+:	ff ff ff ff       	.long	0xffffffff
 +[0-9a-f]+:	ff ff ff a0       	.long	0xffffffa0
# function prolog
 +[0-9a-f]+:	b9 04 00 ef       	lgr	%r14,%r15
 +[0-9a-f]+:	a7 fb ff 60       	aghi	%r15,-160
 +[0-9a-f]+:	c0 c0 [0-9a-f ]+ 	larl	%r12,[0-9a-f]+ <_GLOBAL_OFFSET_TABLE_>
 +[0-9a-f]+:	e3 e0 e0 00 00 24 	stg	%r14,0\(%r14\)
# extract TCB
 +[0-9a-f]+:	b2 4f 00 90       	ear	%r9,%a0
 +[0-9a-f]+:	eb 94 00 20 00 0d 	sllg	%r9,%r4,32
 +[0-9a-f]+:	b2 4f 00 91       	ear	%r9,%a1
# GD -> IE because variable is not defined in executable
 +[0-9a-f]+:	e3 c0 d0 00 00 04 	lg	%r12,0\(%r13\)
 +[0-9a-f]+:	e3 22 c0 00 00 04 	lg	%r2,0\(%r2,%r12\)
 +[0-9a-f]+:	41 22 90 00       	la	%r2,0\(%r2,%r9\)
# GD -> IE because variable is not defined in executable where
# the variable is referenced through IE too
 +[0-9a-f]+:	e3 20 d0 08 00 04 	lg	%r2,8\(%r13\)
 +[0-9a-f]+:	e3 22 c0 00 00 04 	lg	%r2,0\(%r2,%r12\)
 +[0-9a-f]+:	41 22 90 00       	la	%r2,0\(%r2,%r9\)
# GD -> LE with global variable defined in executable
 +[0-9a-f]+:	e3 20 d0 10 00 04 	lg	%r2,16\(%r13\)
 +[0-9a-f]+:	c0 04 00 00 00 00 	brcl	0,[0-9a-f]+ <fn2\+0xca>
 +[0-9a-f]+:	41 22 90 00       	la	%r2,0\(%r2,%r9\)
# GD -> LE with local variable defined in executable
 +[0-9a-f]+:	e3 20 d0 18 00 04 	lg	%r2,24\(%r13\)
 +[0-9a-f]+:	c0 04 00 00 00 00 	brcl	0,[0-9a-f]+ <fn2\+0xda>
 +[0-9a-f]+:	41 22 90 00       	la	%r2,0\(%r2,%r9\)
# GD -> LE with hidden variable defined in executable
 +[0-9a-f]+:	e3 20 d0 20 00 04 	lg	%r2,32\(%r13\)
 +[0-9a-f]+:	c0 04 00 00 00 00 	brcl	0,[0-9a-f]+ <fn2\+0xea>
 +[0-9a-f]+:	41 22 90 00       	la	%r2,0\(%r2,%r9\)
# LD -> LE
 +[0-9a-f]+:	e3 20 d0 28 00 04 	lg	%r2,40\(%r13\)
 +[0-9a-f]+:	c0 04 00 00 00 00 	brcl	0,[0-9a-f]+ <fn2\+0xfa>
 +[0-9a-f]+:	41 32 90 00       	la	%r3,0\(%r2,%r9\)
 +[0-9a-f]+:	e3 40 d0 30 00 04 	lg	%r4,48\(%r13\)
 +[0-9a-f]+:	41 54 30 00       	la	%r5,0\(%r4,%r3\)
 +[0-9a-f]+:	e3 40 d0 38 00 04 	lg	%r4,56\(%r13\)
 +[0-9a-f]+:	41 54 30 00       	la	%r5,0\(%r4,%r3\)
 +[0-9a-f]+:	e3 20 d0 40 00 04 	lg	%r2,64\(%r13\)
 +[0-9a-f]+:	c0 04 00 00 00 00 	brcl	0,[0-9a-f]+ <fn2\+0x11e>
 +[0-9a-f]+:	41 32 90 00       	la	%r3,0\(%r2,%r9\)
 +[0-9a-f]+:	e3 40 d0 48 00 04 	lg	%r4,72\(%r13\)
 +[0-9a-f]+:	41 54 30 00       	la	%r5,0\(%r4,%r3\)
 +[0-9a-f]+:	e3 40 d0 50 00 04 	lg	%r4,80\(%r13\)
 +[0-9a-f]+:	41 54 30 00       	la	%r5,0\(%r4,%r3\)
# IE against global var
 +[0-9a-f]+:	e3 30 d0 58 00 04 	lg	%r3,88\(%r13\)
 +[0-9a-f]+:	e3 33 c0 00 00 04 	lg	%r3,0\(%r3,%r12\)
 +[0-9a-f]+:	41 33 90 00       	la	%r3,0\(%r3,%r9\)
# IE -> LE against global var defined in exec
 +[0-9a-f]+:	e3 30 d0 60 00 04 	lg	%r3,96\(%r13\)
 +[0-9a-f]+:	eb 43 00 00 00 0d 	sllg	%r4,%r3,0
 +[0-9a-f]+:	41 54 90 00       	la	%r5,0\(%r4,%r9\)
# IE -> LE against local var
 +[0-9a-f]+:	e3 30 d0 68 00 04 	lg	%r3,104\(%r13\)
 +[0-9a-f]+:	eb 43 00 00 00 0d 	sllg	%r4,%r3,0
 +[0-9a-f]+:	41 54 90 00       	la	%r5,0\(%r4,%r9\)
# IE -> LE against hidden var
 +[0-9a-f]+:	e3 30 d0 70 00 04 	lg	%r3,112\(%r13\)
 +[0-9a-f]+:	eb 43 00 00 00 0d 	sllg	%r4,%r3,0
 +[0-9a-f]+:	41 54 90 00       	la	%r5,0\(%r4,%r9\)
# IE against global var with larl got access
 +[0-9a-f]+:	c0 30 [0-9a-f ]+ 	larl	%r3,[0-9a-f]+ <_GLOBAL_OFFSET_TABLE_\+0x28>
 +[0-9a-f]+:	e3 33 c0 00 00 04 	lg	%r3,0\(%r3,%r12\)
 +[0-9a-f]+:	41 33 90 00       	la	%r3,0\(%r3,%r9\)
# IE against global var defined in exec with larl got access
 +[0-9a-f]+:	c0 30 [0-9a-f ]+ 	larl	%r3,[0-9a-f]+ <_GLOBAL_OFFSET_TABLE_\+0x38>
 +[0-9a-f]+:	eb 43 00 00 00 0d 	sllg	%r4,%r3,0
 +[0-9a-f]+:	41 54 90 00       	la	%r5,0\(%r4,%r9\)
# IE against local var with larl got access
 +[0-9a-f]+:	c0 30 [0-9a-f ]+ 	larl	%r3,[0-9a-f]+ <_GLOBAL_OFFSET_TABLE_\+0x20>
 +[0-9a-f]+:	eb 43 00 00 00 0d 	sllg	%r4,%r3,0
 +[0-9a-f]+:	41 54 90 00       	la	%r5,0\(%r4,%r9\)
# IE against hidden var with larl got access
 +[0-9a-f]+:	c0 30 [0-9a-f ]+ 	larl	%r3,[0-9a-f]+ <_GLOBAL_OFFSET_TABLE_\+0x40>
 +[0-9a-f]+:	eb 43 00 00 00 0d 	sllg	%r4,%r3,0
 +[0-9a-f]+:	41 54 90 00       	la	%r5,0\(%r4,%r9\)
# IE against global var with small got access (no optimization)
 +[0-9a-f]+:	e3 30 c0 28 00 04 	lg	%r3,40\(%r12\)
 +[0-9a-f]+:	41 33 90 00       	la	%r3,0\(%r3,%r9\)
# IE against global var defined in exec with small got access
# (no optimization)
 +[0-9a-f]+:	e3 30 c0 38 00 04 	lg	%r3,56\(%r12\)
 +[0-9a-f]+:	41 33 90 00       	la	%r3,0\(%r3,%r9\)
# IE against local var with small got access (no optimization)
 +[0-9a-f]+:	e3 30 c0 20 00 04 	lg	%r3,32\(%r12\)
 +[0-9a-f]+:	41 33 90 00       	la	%r3,0\(%r3,%r9\)
# IE against hidden var with small got access (no optimization)
 +[0-9a-f]+:	e3 30 c0 40 00 04 	lg	%r3,64\(%r12\)
 +[0-9a-f]+:	41 33 90 00       	la	%r3,0\(%r3,%r9\)
# function epilog
 +[0-9a-f]+:	eb 6e f0 d0 00 04 	lmg	%r6,%r14,208\(%r15\)
 +[0-9a-f]+:	07 fe             	br	%r14
 +[0-9a-f]+:	07 07             	nopr	%r7
 +[0-9a-f]+:	07 07             	nopr	%r7
 +[0-9a-f]+:	07 07             	nopr	%r7
 +[0-9a-f]+:	07 07             	nopr	%r7
 +[0-9a-f]+:	07 07             	nopr	%r7
 +[0-9a-f]+:	07 07             	nopr	%r7
 +[0-9a-f]+:	07 07             	nopr	%r7
 +[0-9a-f]+:	07 07             	nopr	%r7
 +[0-9a-f]+:	07 07             	nopr	%r7
 +[0-9a-f]+:	07 07             	nopr	%r7

0+[0-9a-f]+ <_start>:
# function prolog
 +[0-9a-f]+:	90 6e f0 18       	stm	%r6,%r14,24\(%r15\)
 +[0-9a-f]+:	a7 d5 00 16       	bras	%r13,[0-9a-f]+ <_start\+0x30>
# sG6@@indntpoff
 +[0-9a-f]+:	00 00 00 00       	.long	0x00000000
 +[0-9a-f]+:	80 00 [0-9a-f ]+       	ssm	[0-9]+\(%r1\)
# bg6@@indntpoff
 +[0-9a-f]+:	ff ff ff ff       	.long	0xffffffff
 +[0-9a-f]+:	ff ff ff d4       	.long	0xffffffd4
# bl6@@indntpoff
 +[0-9a-f]+:	ff ff ff ff       	.long	0xffffffff
 +[0-9a-f]+:	ff ff ff f4       	.long	0xfffffff4
# sh6@@indntpoff
 +[0-9a-f]+:	ff ff ff ff       	.long	0xffffffff
 +[0-9a-f]+:	ff ff ff b4       	.long	0xffffffb4
# sg3@@indntpoff
 +[0-9a-f]+:	ff ff ff ff       	.long	0xffffffff
 +[0-9a-f]+:	ff ff ff 68       	.long	0xffffff68
# function prolog
 +[0-9a-f]+:	b9 04 00 ef       	lgr	%r14,%r15
 +[0-9a-f]+:	a7 fb ff 60       	aghi	%r15,-160
 +[0-9a-f]+:	e3 e0 e0 00 00 24 	stg	%r14,0\(%r14\)
# extract TCB
 +[0-9a-f]+:	b2 4f 00 90       	ear	%r9,%a0
 +[0-9a-f]+:	eb 94 00 20 00 0d 	sllg	%r9,%r4,32
 +[0-9a-f]+:	b2 4f 00 91       	ear	%r9,%a1
# IE against global var
 +[0-9a-f]+:	e3 30 d0 00 00 04 	lg	%r3,0\(%r13\)
 +[0-9a-f]+:	e3 33 c0 00 00 04 	lg	%r3,0\(%r3,%r12\)
 +[0-9a-f]+:	41 33 90 00       	la	%r3,0\(%r3,%r9\)
# IE -> LE against global var defined in exec
 +[0-9a-f]+:	e3 30 d0 08 00 04 	lg	%r3,8\(%r13\)
 +[0-9a-f]+:	eb 43 00 00 00 0d 	sllg	%r4,%r3,0
 +[0-9a-f]+:	41 54 90 00       	la	%r5,0\(%r4,%r9\)
# IE -> LE against local var
 +[0-9a-f]+:	e3 30 d0 10 00 04 	lg	%r3,16\(%r13\)
 +[0-9a-f]+:	eb 43 00 00 00 0d 	sllg	%r4,%r3,0
 +[0-9a-f]+:	41 54 90 00       	la	%r5,0\(%r4,%r9\)
# IE -> LE against hidden but not local var
 +[0-9a-f]+:	e3 30 d0 18 00 04 	lg	%r3,24\(%r13\)
 +[0-9a-f]+:	eb 43 00 00 00 0d 	sllg	%r4,%r3,0
 +[0-9a-f]+:	41 54 90 00       	la	%r5,0\(%r4,%r9\)
# LE, global var defined in exec
 +[0-9a-f]+:	e3 40 d0 20 00 04 	lg	%r4,32\(%r13\)
 +[0-9a-f]+:	41 54 90 00       	la	%r5,0\(%r4,%r9\)
# function epilog
 +[0-9a-f]+:	eb 6e f0 d0 00 04 	lmg	%r6,%r14,208\(%r15\)
 +[0-9a-f]+:	07 fe             	br	%r14
 +[0-9a-f]+:	07 07             	nopr	%r7
@


1.2
log
@bfd/
	* elflink.c (elf_bfd_final_link): Don't output STT_SECTION symbol
	into .dynsym if elf_section_data (sec)->dynindx <= 0.
	Adjust counting of last_local.
	(_bfd_elf_link_renumber_dynsyms): Don't assign dynindx to sections
	other than SHT_PROGBITS/SHT_NOBITS and neither for .got/.got.plt/.plt
	created by the linker nor !SHF_ALLOC.

	* elf32-i386.c (elf_i386_finish_dynamic_sections): Point
	DT_PLTGOT to the start of the .got.plt section instead of the
	.got output section.  Set sh_entsize for .got section in addition
	to .got.plt.
	(elf_i386_relocate_section): Don't assume _GLOBAL_OFFSET_TABLE_
	is at sgot->output_section->vma.
	* elf64-x86-64.c (elf64_x86_64_finish_dynamic_sections): Point
	DT_PLTGOT to the start of the .got.plt section instead of the
	.got output section.
	(elf64_x86_64_relocate_section): Don't assume _GLOBAL_OFFSET_TABLE_
	is at sgot->output_section->vma.  Set sh_entsize for .got section
	in addition to .got.plt.
	* elf.c (_bfd_elf_print_private_bfd_data): Handle PT_GNU_RELRO.
	(bfd_section_from_phdr): Likewise.
	(map_sections_to_segments): Likewise.
	(assign_file_positions_for_segments): Likewise.
	(get_program_header_size): Likewise.
	* elflink.c (bfd_elf_size_dynamic_sections): Set
	elf_tdata (output_bfd)->relro from info->relro.
	* elf-bfd.h (struct elf_obj_tdata): Add relro field.
include/
	* bfdlink.h (struct bfd_link_info): Add relro, relro_start and
	relro_end fields.
	* elf/common.h (PT_GNU_EH_FRAME, PT_GNU_STACK): Add comments.
	(PT_GNU_RELRO): Define.
binutils/
	* readelf.c (get_segment_type): Handle PT_GNU_RELRO.
ld/
	* genscripts.sh: Generate -z combreloc -z now -z relro scripts
	for binaries, -shared and -pie.
	* emulparams/elf_i386.sh (SEPARATE_GOTPLT): Set.
	* emulparams/elf_x86_64.sh (SEPARATE_GOTPLT): Set.
	* emulparams/elf32ppc.sh (OTHER_READWRITE_SECTIONS): Rename to...
	(OTHER_RELRO_SECTIONS): ... this.
	* ldlex.l (DATA_SEGMENT_RELRO_END): Add.
	* emultempl/elf32.em (gld${EMULATION_NAME}_handle_option): Handle
	-z relro and -z norelro.
	(gld${EMULATION_NAME}_list_options): Add it to usage.
	(gld${EMULATION_NAME}_get_script): Return -z combreloc -z now
	-z relro scripts when appropriate.
	* scripttempl/elf.sc: Unset SEPARATE_GOTPLT if RELRO_NOW is set.
	Create separate .got.plt section if SEPARATE_GOTPLT.
	Move sections which are only written during relocation handling
	to the beginning of RW segment.  If NO_SMALL_DATA, move .got
	before .data.  Add DATA_SEGMENT_RELRO_END directive.
	Include OTHER_RELRO_SECTIONS.
	* ldgram.y (DATA_SEGMENT_RELRO_END): Add.
	* ldexp.c (exp_print_token): Handle DATA_SEGMENT_RELRO_END.
	(fold_unary): Likewise.
	(fold_binary): Handle -z relro.
	* ldexp.h (struct exp_data_seg): Add exp_dataseg_relro_seen and
	exp_dataseg_relro_adjust phases.  Add relro_end field.
	* ldmain.c (main): Initialize link_info.relro to FALSE.
	* ldlang.c (lang_size_sections): Handle -z relro.
ld/testsuite/
	* ld-i386/tlspic.rd: Adjust for section reordering changes
	and removal of unneeded STT_SECTION symbols from .dynsym.
	* ld-i386/tlspic.dd: Likewise.
	* ld-i386/tlspic.sd: Likewise.
	* ld-i386/tlsbin.rd: Likewise.
	* ld-i386/tlsbinpic.s: Likewise.
	* ld-i386/tlsbin.dd: Likewise.
	* ld-i386/tlsbin.sd: Likewise.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlsnopic1.s: Likewise.
	* ld-i386/combreloc.d: Likewise.
	* ld-i386/tlsnopic.dd: Likewise.
	* ld-i386/tlsnopic.sd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
	* ld-x86-64/tlspic.dd: Likewise.
	* ld-x86-64/tlsbin.dd: Likewise.
	* ld-x86-64/tlspic.sd: Likewise.
	* ld-x86-64/tlsbin.sd: Likewise.
	* ld-x86-64/tlspic.td: Likewise.
	* ld-x86-64/tlsbin.td: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-s390/tlspic1.s: Likewise.
	* ld-s390/tlsbinpic.s: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlspic.dd: Likewise.
	* ld-s390/tlsbin.dd: Likewise.
	* ld-s390/tlsbin.sd: Likewise.
	* ld-s390/tlsbin.td: Likewise.
	* ld-s390/tlspic.sd: Likewise.
	* ld-s390/tlspic.td: Likewise.
	* ld-s390/tlspic1_64.s: Likewise.
	* ld-s390/tlsbinpic_64.s: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlspic_64.dd: Likewise.
	* ld-s390/tlsbin_64.dd: Likewise.
	* ld-s390/tlspic_64.sd: Likewise.
	* ld-s390/tlspic_64.td: Likewise.
	* ld-s390/tlsbin_64.td: Likewise.
	* ld-s390/tlsbin_64.sd: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlsso32.d: Likewise.
	* ld-powerpc/tlsso32.g: Likewise.
	* ld-powerpc/tlsso32.t: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso.g: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
	* ld-powerpc/tlstocso.g: Likewise.
	* ld-ia64/tlspic.rd: Likewise.
	* ld-ia64/tlspic.dd: Likewise.
	* ld-ia64/tlspic.sd: Likewise.
	* ld-ia64/tlspic.td: Likewise.
	* ld-ia64/tlsbin.rd: Likewise.
	* ld-ia64/tlsbin.sd: Likewise.
	* ld-ia64/tlsbin.td: Likewise.
	* ld-elfvsb/elfvsb.exp: XFAIL non-PIC load offset tests on s390x.
	* ld-shared/shared.exp: Likewise.
@
text
@d163 10
a172 10
 +[0-9a-f]+:	07 07             	bcr	0,%r7
 +[0-9a-f]+:	07 07             	bcr	0,%r7
 +[0-9a-f]+:	07 07             	bcr	0,%r7
 +[0-9a-f]+:	07 07             	bcr	0,%r7
 +[0-9a-f]+:	07 07             	bcr	0,%r7
 +[0-9a-f]+:	07 07             	bcr	0,%r7
 +[0-9a-f]+:	07 07             	bcr	0,%r7
 +[0-9a-f]+:	07 07             	bcr	0,%r7
 +[0-9a-f]+:	07 07             	bcr	0,%r7
 +[0-9a-f]+:	07 07             	bcr	0,%r7
d223 1
a223 1
 +[0-9a-f]+:	07 07             	bcr	0,%r7
@


1.1
log
@	* ld-s390/s390.exp: New file.
	* ld-s390/tlsbin_64.dd: New file.
	* ld-s390/tlsbin_64.rd: New file.
	* ld-s390/tlsbin_64.s: New file.
	* ld-s390/tlsbin_64.sd: New file.
	* ld-s390/tlsbin_64.td: New file.
	* ld-s390/tlsbin.dd: New file.
	* ld-s390/tlsbinpic_64.s: New file.
	* ld-s390/tlsbinpic.s: New file.
	* ld-s390/tlsbin.rd: New file.
	* ld-s390/tlsbin.s: New file.
	* ld-s390/tlsbin.sd: New file.
	* ld-s390/tlsbin.td: New file.
	* ld-s390/tlslib_64.s: New file.
	* ld-s390/tlslib.s: New file.
	* ld-s390/tlspic1_64.s: New file.
	* ld-s390/tlspic1.s: New file.
	* ld-s390/tlspic2_64.s: New file.
	* ld-s390/tlspic2.s: New file.
	* ld-s390/tlspic_64.dd: New file.
	* ld-s390/tlspic_64.rd: New file.
	* ld-s390/tlspic_64.sd: New file.
	* ld-s390/tlspic_64.td: New file.
	* ld-s390/tlspic.dd: New file.
	* ld-s390/tlspic.rd: New file.
	* ld-s390/tlspic.sd: New file.
	* ld-s390/tlspic.td: New file.
@
text
@d21 1
a21 1
0+80000458 <fn2>:
d23 2
a24 2
 +80000458:	eb 6e f0 30 00 24 	stmg	%r6,%r14,48\(%r15\)
 +8000045e:	a7 d5 00 3e       	bras	%r13,800004da <fn2\+0x82>
d26 2
a27 2
 +80000462:	00 00 00 00       	.long	0x00000000
 +80000466:	00 00 00 60       	.long	0x00000060
d29 2
a30 2
 +8000046a:	00 00 00 00       	.long	0x00000000
 +8000046e:	00 00 00 48       	.long	0x00000048
d32 2
a33 2
 +80000472:	ff ff ff ff       	.long	0xffffffff
 +80000476:	ff ff ff 60       	.long	0xffffff60
d35 2
a36 2
 +8000047a:	ff ff ff ff       	.long	0xffffffff
 +8000047e:	ff ff ff 80       	.long	0xffffff80
d38 2
a39 2
 +80000482:	ff ff ff ff       	.long	0xffffffff
 +80000486:	ff ff ff a0       	.long	0xffffffa0
d41 2
a42 2
 +8000048a:	00 00 00 00       	.long	0x00000000
 +8000048e:	00 00 00 00       	.long	0x00000000
d44 2
a45 2
 +80000492:	ff ff ff ff       	.long	0xffffffff
 +80000496:	ff ff ff 80       	.long	0xffffff80
d47 2
a48 2
 +8000049a:	ff ff ff ff       	.long	0xffffffff
 +8000049e:	ff ff ff 84       	.long	0xffffff84
d50 2
a51 2
 +800004a2:	00 00 00 00       	.long	0x00000000
 +800004a6:	00 00 00 00       	.long	0x00000000
d53 2
a54 2
 +800004aa:	ff ff ff ff       	.long	0xffffffff
 +800004ae:	ff ff ff a0       	.long	0xffffffa0
d56 2
a57 2
 +800004b2:	ff ff ff ff       	.long	0xffffffff
 +800004b6:	ff ff ff a4       	.long	0xffffffa4
d59 2
a60 2
 +800004ba:	00 00 00 00       	.long	0x00000000
 +800004be:	00 00 00 48       	.long	0x00000048
d62 2
a63 2
 +800004c2:	ff ff ff ff       	.long	0xffffffff
 +800004c6:	ff ff ff 60       	.long	0xffffff60
d65 2
a66 2
 +800004ca:	ff ff ff ff       	.long	0xffffffff
 +800004ce:	ff ff ff 80       	.long	0xffffff80
d68 2
a69 2
 +800004d2:	ff ff ff ff       	.long	0xffffffff
 +800004d6:	ff ff ff a0       	.long	0xffffffa0
d71 4
a74 4
 +800004da:	b9 04 00 ef       	lgr	%r14,%r15
 +800004de:	a7 fb ff 60       	aghi	%r15,-160
 +800004e2:	c0 c0 00 00 09 d3 	larl	%r12,80001888 <_GLOBAL_OFFSET_TABLE_>
 +800004e8:	e3 e0 e0 00 00 24 	stg	%r14,0\(%r14\)
d76 3
a78 3
 +800004ee:	b2 4f 00 90       	ear	%r9,%a0
 +800004f2:	eb 94 00 20 00 0d 	sllg	%r9,%r4,32
 +800004f8:	b2 4f 00 91       	ear	%r9,%a1
d80 3
a82 3
 +800004fc:	e3 c0 d0 00 00 04 	lg	%r12,0\(%r13\)
 +80000502:	e3 22 c0 00 00 04 	lg	%r2,0\(%r2,%r12\)
 +80000508:	41 22 90 00       	la	%r2,0\(%r2,%r9\)
d85 3
a87 3
 +8000050c:	e3 20 d0 08 00 04 	lg	%r2,8\(%r13\)
 +80000512:	e3 22 c0 00 00 04 	lg	%r2,0\(%r2,%r12\)
 +80000518:	41 22 90 00       	la	%r2,0\(%r2,%r9\)
d89 3
a91 3
 +8000051c:	e3 20 d0 10 00 04 	lg	%r2,16\(%r13\)
 +80000522:	c0 04 00 00 00 00 	brcl	0,80000522 <fn2\+0xca>
 +80000528:	41 22 90 00       	la	%r2,0\(%r2,%r9\)
d93 3
a95 3
 +8000052c:	e3 20 d0 18 00 04 	lg	%r2,24\(%r13\)
 +80000532:	c0 04 00 00 00 00 	brcl	0,80000532 <fn2\+0xda>
 +80000538:	41 22 90 00       	la	%r2,0\(%r2,%r9\)
d97 3
a99 3
 +8000053c:	e3 20 d0 20 00 04 	lg	%r2,32\(%r13\)
 +80000542:	c0 04 00 00 00 00 	brcl	0,80000542 <fn2\+0xea>
 +80000548:	41 22 90 00       	la	%r2,0\(%r2,%r9\)
d101 14
a114 14
 +8000054c:	e3 20 d0 28 00 04 	lg	%r2,40\(%r13\)
 +80000552:	c0 04 00 00 00 00 	brcl	0,80000552 <fn2\+0xfa>
 +80000558:	41 32 90 00       	la	%r3,0\(%r2,%r9\)
 +8000055c:	e3 40 d0 30 00 04 	lg	%r4,48\(%r13\)
 +80000562:	41 54 30 00       	la	%r5,0\(%r4,%r3\)
 +80000566:	e3 40 d0 38 00 04 	lg	%r4,56\(%r13\)
 +8000056c:	41 54 30 00       	la	%r5,0\(%r4,%r3\)
 +80000570:	e3 20 d0 40 00 04 	lg	%r2,64\(%r13\)
 +80000576:	c0 04 00 00 00 00 	brcl	0,80000576 <fn2\+0x11e>
 +8000057c:	41 32 90 00       	la	%r3,0\(%r2,%r9\)
 +80000580:	e3 40 d0 48 00 04 	lg	%r4,72\(%r13\)
 +80000586:	41 54 30 00       	la	%r5,0\(%r4,%r3\)
 +8000058a:	e3 40 d0 50 00 04 	lg	%r4,80\(%r13\)
 +80000590:	41 54 30 00       	la	%r5,0\(%r4,%r3\)
d116 3
a118 3
 +80000594:	e3 30 d0 58 00 04 	lg	%r3,88\(%r13\)
 +8000059a:	e3 33 c0 00 00 04 	lg	%r3,0\(%r3,%r12\)
 +800005a0:	41 33 90 00       	la	%r3,0\(%r3,%r9\)
d120 3
a122 3
 +800005a4:	e3 30 d0 60 00 04 	lg	%r3,96\(%r13\)
 +800005aa:	eb 43 00 00 00 0d 	sllg	%r4,%r3,0
 +800005b0:	41 54 90 00       	la	%r5,0\(%r4,%r9\)
d124 3
a126 3
 +800005b4:	e3 30 d0 68 00 04 	lg	%r3,104\(%r13\)
 +800005ba:	eb 43 00 00 00 0d 	sllg	%r4,%r3,0
 +800005c0:	41 54 90 00       	la	%r5,0\(%r4,%r9\)
d128 3
a130 3
 +800005c4:	e3 30 d0 70 00 04 	lg	%r3,112\(%r13\)
 +800005ca:	eb 43 00 00 00 0d 	sllg	%r4,%r3,0
 +800005d0:	41 54 90 00       	la	%r5,0\(%r4,%r9\)
d132 3
a134 3
 +800005d4:	c0 30 00 00 09 6e 	larl	%r3,800018b0 <\_GLOBAL\_OFFSET\_TABLE\_\+0x28>
 +800005da:	e3 33 c0 00 00 04 	lg	%r3,0\(%r3,%r12\)
 +800005e0:	41 33 90 00       	la	%r3,0\(%r3,%r9\)
d136 3
a138 3
 +800005e4:	c0 30 00 00 09 6e 	larl	%r3,800018c0 <\_GLOBAL\_OFFSET\_TABLE\_\+0x38>
 +800005ea:	eb 43 00 00 00 0d 	sllg	%r4,%r3,0
 +800005f0:	41 54 90 00       	la	%r5,0\(%r4,%r9\)
d140 3
a142 3
 +800005f4:	c0 30 00 00 09 5a 	larl	%r3,800018a8 <\_GLOBAL\_OFFSET\_TABLE\_\+0x20>
 +800005fa:	eb 43 00 00 00 0d 	sllg	%r4,%r3,0
 +80000600:	41 54 90 00       	la	%r5,0\(%r4,%r9\)
d144 3
a146 3
 +80000604:	c0 30 00 00 09 62 	larl	%r3,800018c8 <\_GLOBAL\_OFFSET\_TABLE\_\+0x40>
 +8000060a:	eb 43 00 00 00 0d 	sllg	%r4,%r3,0
 +80000610:	41 54 90 00       	la	%r5,0\(%r4,%r9\)
d148 2
a149 2
 +80000614:	e3 30 c0 28 00 04 	lg	%r3,40\(%r12\)
 +8000061a:	41 33 90 00       	la	%r3,0\(%r3,%r9\)
d152 2
a153 2
 +8000061e:	e3 30 c0 38 00 04 	lg	%r3,56\(%r12\)
 +80000624:	41 33 90 00       	la	%r3,0\(%r3,%r9\)
d155 2
a156 2
 +80000628:	e3 30 c0 20 00 04 	lg	%r3,32\(%r12\)
 +8000062e:	41 33 90 00       	la	%r3,0\(%r3,%r9\)
d158 2
a159 2
 +80000632:	e3 30 c0 40 00 04 	lg	%r3,64\(%r12\)
 +80000638:	41 33 90 00       	la	%r3,0\(%r3,%r9\)
d161 12
a172 2
 +8000063c:	eb 6e f0 d0 00 04 	lmg	%r6,%r14,208\(%r15\)
 +80000642:	07 fe             	br	%r14
d174 1
a174 1
0+80000644 <_start>:
d176 2
a177 2
 +80000644:	90 6e f0 18       	stm	%r6,%r14,24\(%r15\)
 +80000648:	a7 d5 00 16       	bras	%r13,80000674 <_start\+0x30>
d179 2
a180 2
 +8000064c:	00 00 00 00       	.long	0x00000000
 +80000650:	80 00 18 e0       	ssm	2272\(%r1\)
d182 2
a183 2
 +80000654:	ff ff ff ff       	.long	0xffffffff
 +80000658:	ff ff ff d4       	.long	0xffffffd4
d185 2
a186 2
 +8000065c:	ff ff ff ff       	.long	0xffffffff
 +80000660:	ff ff ff f4       	.long	0xfffffff4
d188 2
a189 2
 +80000664:	ff ff ff ff       	.long	0xffffffff
 +80000668:	ff ff ff b4       	.long	0xffffffb4
d191 2
a192 2
 +8000066c:	ff ff ff ff       	.long	0xffffffff
 +80000670:	ff ff ff 68       	.long	0xffffff68
d194 3
a196 3
 +80000674:	b9 04 00 ef       	lgr	%r14,%r15
 +80000678:	a7 fb ff 60       	aghi	%r15,-160
 +8000067c:	e3 e0 e0 00 00 24 	stg	%r14,0\(%r14\)
d198 3
a200 3
 +80000682:	b2 4f 00 90       	ear	%r9,%a0
 +80000686:	eb 94 00 20 00 0d 	sllg	%r9,%r4,32
 +8000068c:	b2 4f 00 91       	ear	%r9,%a1
d202 3
a204 3
 +80000690:	e3 30 d0 00 00 04 	lg	%r3,0\(%r13\)
 +80000696:	e3 33 c0 00 00 04 	lg	%r3,0\(%r3,%r12\)
 +8000069c:	41 33 90 00       	la	%r3,0\(%r3,%r9\)
d206 3
a208 3
 +800006a0:	e3 30 d0 08 00 04 	lg	%r3,8\(%r13\)
 +800006a6:	eb 43 00 00 00 0d 	sllg	%r4,%r3,0
 +800006ac:	41 54 90 00       	la	%r5,0\(%r4,%r9\)
d210 3
a212 3
 +800006b0:	e3 30 d0 10 00 04 	lg	%r3,16\(%r13\)
 +800006b6:	eb 43 00 00 00 0d 	sllg	%r4,%r3,0
 +800006bc:	41 54 90 00       	la	%r5,0\(%r4,%r9\)
d214 3
a216 3
 +800006c0:	e3 30 d0 18 00 04 	lg	%r3,24\(%r13\)
 +800006c6:	eb 43 00 00 00 0d 	sllg	%r4,%r3,0
 +800006cc:	41 54 90 00       	la	%r5,0\(%r4,%r9\)
d218 2
a219 2
 +800006d0:	e3 40 d0 20 00 04 	lg	%r4,32\(%r13\)
 +800006d6:	41 54 90 00       	la	%r5,0\(%r4,%r9\)
d221 3
a223 3
 +800006da:	eb 6e f0 d0 00 04 	lmg	%r6,%r14,208\(%r15\)
 +800006e0:	07 fe             	br	%r14
 +800006e2:	07 07             	bcr	0,%r7
@

