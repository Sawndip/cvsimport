head	1.15;
access;
symbols
	binutils-2_24-branch:1.15.0.4
	binutils-2_24-branchpoint:1.15
	binutils-2_21_1:1.12
	binutils-2_23_2:1.15
	binutils-2_23_1:1.15
	binutils-2_23:1.15
	binutils-2_23-branch:1.15.0.2
	binutils-2_23-branchpoint:1.15
	binutils-2_22_branch:1.12.0.6
	binutils-2_22:1.12
	binutils-2_22-branch:1.12.0.4
	binutils-2_22-branchpoint:1.12
	binutils-2_21:1.12
	binutils-2_21-branch:1.12.0.2
	binutils-2_21-branchpoint:1.12
	binutils-2_20_1:1.10
	binutils-2_20:1.10
	binutils-arc-20081103-branch:1.10.0.10
	binutils-arc-20081103-branchpoint:1.10
	binutils-2_20-branch:1.10.0.8
	binutils-2_20-branchpoint:1.10
	dje-cgen-play1-branch:1.10.0.6
	dje-cgen-play1-branchpoint:1.10
	arc-20081103-branch:1.10.0.4
	arc-20081103-branchpoint:1.10
	binutils-2_19_1:1.10
	binutils-2_19:1.10
	binutils-2_19-branch:1.10.0.2
	binutils-2_19-branchpoint:1.10
	binutils-2_18:1.9
	binutils-2_18-branch:1.9.0.2
	binutils-2_18-branchpoint:1.9
	binutils-csl-coldfire-4_1-32:1.7
	binutils-csl-sourcerygxx-4_1-32:1.7
	binutils-csl-innovasic-fido-3_4_4-33:1.7
	binutils-csl-sourcerygxx-3_4_4-32:1.3
	binutils-csl-coldfire-4_1-30:1.7
	binutils-csl-sourcerygxx-4_1-30:1.7
	binutils-csl-coldfire-4_1-28:1.7
	binutils-csl-sourcerygxx-4_1-29:1.7
	binutils-csl-sourcerygxx-4_1-28:1.7
	binutils-csl-arm-2006q3-27:1.7
	binutils-csl-sourcerygxx-4_1-27:1.7
	binutils-csl-arm-2006q3-26:1.7
	binutils-csl-sourcerygxx-4_1-26:1.7
	binutils-csl-sourcerygxx-4_1-25:1.7
	binutils-csl-sourcerygxx-4_1-24:1.7
	binutils-csl-sourcerygxx-4_1-23:1.7
	binutils-csl-sourcerygxx-4_1-21:1.7
	binutils-csl-arm-2006q3-21:1.7
	binutils-csl-sourcerygxx-4_1-22:1.7
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.7
	binutils-csl-sourcerygxx-4_1-20:1.7
	binutils-csl-arm-2006q3-19:1.7
	binutils-csl-sourcerygxx-4_1-19:1.7
	binutils-csl-sourcerygxx-4_1-18:1.7
	binutils-csl-renesas-4_1-9:1.7
	binutils-csl-sourcerygxx-3_4_4-25:1.3
	binutils-csl-renesas-4_1-8:1.7
	binutils-csl-renesas-4_1-7:1.7
	binutils-csl-renesas-4_1-6:1.7
	binutils-csl-sourcerygxx-4_1-17:1.7
	binutils-csl-sourcerygxx-4_1-14:1.7
	binutils-csl-sourcerygxx-4_1-15:1.7
	binutils-csl-sourcerygxx-4_1-13:1.7
	binutils-2_17:1.7
	binutils-csl-sourcerygxx-4_1-12:1.7
	binutils-csl-sourcerygxx-3_4_4-21:1.7
	binutils-csl-wrs-linux-3_4_4-24:1.3
	binutils-csl-wrs-linux-3_4_4-23:1.3
	binutils-csl-sourcerygxx-4_1-9:1.7
	binutils-csl-sourcerygxx-4_1-8:1.7
	binutils-csl-sourcerygxx-4_1-7:1.7
	binutils-csl-arm-2006q1-6:1.7
	binutils-csl-sourcerygxx-4_1-6:1.7
	binutils-csl-wrs-linux-3_4_4-22:1.3
	binutils-csl-coldfire-4_1-11:1.7
	binutils-csl-sourcerygxx-3_4_4-19:1.7
	binutils-csl-coldfire-4_1-10:1.7
	binutils-csl-sourcerygxx-4_1-5:1.7
	binutils-csl-sourcerygxx-4_1-4:1.7
	binutils-csl-wrs-linux-3_4_4-21:1.3
	binutils-csl-morpho-4_1-4:1.7
	binutils-csl-sourcerygxx-3_4_4-17:1.7
	binutils-csl-wrs-linux-3_4_4-20:1.3
	binutils-2_17-branch:1.7.0.4
	binutils-2_17-branchpoint:1.7
	binutils-csl-2_17-branch:1.7.0.2
	binutils-csl-2_17-branchpoint:1.7
	binutils-csl-gxxpro-3_4-branch:1.3.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.3
	binutils-2_16_1:1.3
	binutils-csl-arm-2005q1b:1.3
	binutils-2_16:1.3
	binutils-csl-arm-2005q1a:1.3
	binutils-csl-arm-2005q1-branch:1.3.0.4
	binutils-csl-arm-2005q1-branchpoint:1.3
	binutils-2_16-branch:1.3.0.2
	binutils-2_16-branchpoint:1.3
	csl-arm-2004-q3d:1.3
	csl-arm-2004-q3:1.3
	binutils-2_15:1.1
	binutils-2_15-branchpoint:1.1
	csl-arm-2004-q1a:1.1
	csl-arm-2004-q1:1.1
	binutils-2_15-branch:1.1.0.8
	cagney_bfdfile-20040213-branch:1.1.0.6
	cagney_bfdfile-20040213-branchpoint:1.1
	cagney_bigcore-20040122-branch:1.1.0.4
	cagney_bigcore-20040122-branchpoint:1.1
	csl-arm-2003-q4:1.1
	binutils-2_14:1.1
	binutils-2_14-branch:1.1.0.2
	binutils-2_14-branchpoint:1.1
	binutils_latest_snapshot:1.15;
locks; strict;
comment	@# @;
expand	@o@;


1.15
date	2012.06.15.15.13.38;	author amodra;	state Exp;
branches;
next	1.14;

1.14
date	2012.06.06.10.50.17;	author amodra;	state Exp;
branches;
next	1.13;

1.13
date	2012.05.12.13.46.26;	author hjl;	state Exp;
branches;
next	1.12;

1.12
date	2009.09.24.15.56.51;	author hjl;	state Exp;
branches;
next	1.11;

1.11
date	2009.09.23.03.12.27;	author amodra;	state Exp;
branches;
next	1.10;

1.10
date	2007.09.30.01.33.15;	author vapier;	state Exp;
branches;
next	1.9;

1.9
date	2006.10.17.13.41.48;	author amodra;	state Exp;
branches;
next	1.8;

1.8
date	2006.06.02.07.53.30;	author amodra;	state Exp;
branches;
next	1.7;

1.7
date	2006.02.02.22.53.46;	author hjl;	state Exp;
branches;
next	1.6;

1.6
date	2006.02.02.22.05.56;	author hjl;	state Exp;
branches;
next	1.5;

1.5
date	2005.08.15.15.39.48;	author amodra;	state Exp;
branches;
next	1.4;

1.4
date	2005.03.16.21.52.47;	author hjl;	state Exp;
branches;
next	1.3;

1.3
date	2004.09.22.07.24.14;	author amodra;	state Exp;
branches;
next	1.2;

1.2
date	2004.05.11.17.08.35;	author jakub;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.24.17.18.12;	author sky;	state Exp;
branches;
next	;


desc
@@


1.15
log
@ld/
	* ldlang.h (lang_output_section_statement_type): Add after_end field.
	(lang_abs_symbol_at_beginning_of, lang_abs_symbol_at_end_of): Delete.
	(section_for_dot): Declare.
	* ldlang.c (lang_size_sections_1): Correct comment.
	(current_section): Move earlier.
	(current_assign, prefer_next_section): New static vars.
	(lang_do_assignments_1): Add found_end param.  Detect _end
	assignment to set found_end.  Set os->after_end.  Set above statics.
	(lang_do_assignments): Adjust lang_do_assignments_1 call.  Init
	vars.
	(section_for_dot): New function.
	(lang_set_startof): Don't make an absolute symbol.
	(lang_abs_symbol_at_beginning_of, lang_abs_symbol_at_end_of): Delete.
	* ldexp.c (new_rel_from_abs): Use section_for_dot.
	* emultempl/lnk960.em (symbol_at_beginning_of): New function.
	(symbol_at_end_of): Likewise.
	(lnk960_after_allocation): Use them.
	* scripttempl/elf.sc: Precede OTHER_GOT_SYMBOLS with . = .; and
	likewise before __bss_start.

ld/testsuite/
Update far too many tests.
@
text
@#source: tlspic1.s
#source: tlspic2.s
#as: -m64 -Aesame
#ld: -shared -melf64_s390
#readelf: -WSsrl
#target: s390x-*-*

There are [0-9]+ section headers, starting at offset 0x[0-9a-f]+:

Section Headers:
 +\[Nr\] Name +Type +Address +Off +Size +ES Flg Lk Inf Al
 +\[[ 0-9]+\] +NULL +0+ 0+ 0+ 0+ +0 +0 +0
 +\[[ 0-9]+\] .hash .*
 +\[[ 0-9]+\] .dynsym .*
 +\[[ 0-9]+\] .dynstr .*
 +\[[ 0-9]+\] .rela.dyn .*
 +\[[ 0-9]+\] .rela.plt .*
 +\[[ 0-9]+\] .plt .*
 +\[[ 0-9]+\] .text +PROGBITS .*
 +\[[ 0-9]+\] .tdata +PROGBITS .* 0+60 00 WAT +0 +0 +32
 +\[[ 0-9]+\] .tbss +NOBITS .* 0+20 00 WAT +0 +0 +1
 +\[[ 0-9]+\] .dynamic +DYNAMIC .*
 +\[[ 0-9]+\] .got +PROGBITS .*
 +\[[ 0-9]+\] .shstrtab .*
 +\[[ 0-9]+\] .symtab .*
 +\[[ 0-9]+\] .strtab .*
Key to Flags:
.*
.*
.*

Elf file type is DYN \(Shared object file\)
Entry point 0x[0-9a-f]+
There are [0-9]+ program headers, starting at offset [0-9]+

Program Headers:
 +Type +Offset +VirtAddr +PhysAddr +FileSiz +MemSiz +Flg Align
 +LOAD .* R E 0x1000
 +LOAD .* RW +0x1000
 +DYNAMIC .* RW +0x8
 +TLS .* 0x0+60 0x0+80 R +0x20

 Section to Segment mapping:
 +Segment Sections...
 +00 +.hash .dynsym .dynstr .rela.dyn .rela.plt .plt .text *
 +01 +.tdata .dynamic .got *
 +02 +.dynamic *
 +03 +.tdata .tbss *

Relocation section '.rela.dyn' at offset 0x[0-9a-f]+ contains 14 entries:
 +Offset +Info +Type +Symbol's Value +Symbol's Name \+ Addend
[0-9a-f ]+R_390_TLS_DTPMOD +0
[0-9a-f ]+R_390_TLS_TPOFF +24
[0-9a-f ]+R_390_TLS_TPOFF +30
[0-9a-f ]+R_390_TLS_DTPMOD +0
[0-9a-f ]+R_390_TLS_DTPMOD +0
[0-9a-f ]+R_390_TLS_TPOFF +64
[0-9a-f ]+R_390_TLS_TPOFF +50
[0-9a-f ]+R_390_TLS_TPOFF +70
[0-9a-f ]+R_390_TLS_DTPMOD +0
[0-9a-f ]+R_390_TLS_TPOFF +44
[0-9a-f ]+R_390_TLS_TPOFF +0+10 sg5 \+ 0
[0-9a-f ]+R_390_TLS_DTPMOD +0+ sg1 \+ 0
[0-9a-f ]+R_390_TLS_DTPOFF +0+ sg1 \+ 0
[0-9a-f ]+R_390_TLS_TPOFF +0+4 sg2 \+ 0

Relocation section '.rela.plt' at offset 0x[0-9a-f]+ contains 1 entries:
 +Offset +Info +Type +Symbol's Value +Symbol's Name \+ Addend
[0-9a-f ]+R_390_JMP_SLOT +0+ __tls_get_offset \+ 0

Symbol table '\.dynsym' contains [0-9]+ entries:
 +Num: +Value +Size +Type +Bind +Vis +Ndx +Name
.* NOTYPE +LOCAL +DEFAULT +UND 
.* SECTION +LOCAL +DEFAULT +7 
.* SECTION +LOCAL +DEFAULT +8 
.* TLS +GLOBAL +DEFAULT +8 sg8
.* TLS +GLOBAL +DEFAULT +8 sg3
.* TLS +GLOBAL +DEFAULT +8 sg4
.* TLS +GLOBAL +DEFAULT +8 sg5
.* NOTYPE +GLOBAL +DEFAULT +UND __tls_get_offset
.* TLS +GLOBAL +DEFAULT +8 sg1
.* FUNC +GLOBAL +DEFAULT +7 fn1
.* NOTYPE +GLOBAL +DEFAULT +11 __bss_start
.* TLS +GLOBAL +DEFAULT +8 sg2
.* TLS +GLOBAL +DEFAULT +8 sg6
.* TLS +GLOBAL +DEFAULT +8 sg7
.* NOTYPE +GLOBAL +DEFAULT +11 _edata
.* NOTYPE +GLOBAL +DEFAULT +11 _end

Symbol table '\.symtab' contains [0-9]+ entries:
 +Num: +Value +Size +Type +Bind +Vis +Ndx +Name
.* NOTYPE +LOCAL +DEFAULT +UND 
.* SECTION +LOCAL +DEFAULT +1 
.* SECTION +LOCAL +DEFAULT +2 
.* SECTION +LOCAL +DEFAULT +3 
.* SECTION +LOCAL +DEFAULT +4 
.* SECTION +LOCAL +DEFAULT +5 
.* SECTION +LOCAL +DEFAULT +6 
.* SECTION +LOCAL +DEFAULT +7 
.* SECTION +LOCAL +DEFAULT +8 
.* SECTION +LOCAL +DEFAULT +9 
.* SECTION +LOCAL +DEFAULT +10 
.* SECTION +LOCAL +DEFAULT +11 
.* FILE +LOCAL +DEFAULT +ABS .*
.* TLS +LOCAL +DEFAULT +8 sl1
.* TLS +LOCAL +DEFAULT +8 sl2
.* TLS +LOCAL +DEFAULT +8 sl3
.* TLS +LOCAL +DEFAULT +8 sl4
.* TLS +LOCAL +DEFAULT +8 sl5
.* TLS +LOCAL +DEFAULT +8 sl6
.* TLS +LOCAL +DEFAULT +8 sl7
.* TLS +LOCAL +DEFAULT +8 sl8
.* TLS +LOCAL +DEFAULT +9 sH1
.* TLS +LOCAL +DEFAULT +8 sh3
.* TLS +LOCAL +DEFAULT +9 sH2
.* TLS +LOCAL +DEFAULT +9 sH7
.* TLS +LOCAL +DEFAULT +8 sh7
.* TLS +LOCAL +DEFAULT +8 sh8
.* TLS +LOCAL +DEFAULT +9 sH4
.* TLS +LOCAL +DEFAULT +8 sh4
.* TLS +LOCAL +DEFAULT +9 sH3
.* TLS +LOCAL +DEFAULT +8 sh5
.* TLS +LOCAL +DEFAULT +9 sH5
.* TLS +LOCAL +DEFAULT +9 sH6
.* TLS +LOCAL +DEFAULT +9 sH8
.* TLS +LOCAL +DEFAULT +8 sh1
.* TLS +LOCAL +DEFAULT +8 sh2
.* TLS +LOCAL +DEFAULT +8 sh6
.* FILE +LOCAL +DEFAULT +ABS .*
.* OBJECT +LOCAL +DEFAULT +ABS _DYNAMIC
.* OBJECT +LOCAL +DEFAULT +ABS _GLOBAL_OFFSET_TABLE_
.* TLS +GLOBAL +DEFAULT +8 sg8
.* TLS +GLOBAL +DEFAULT +8 sg3
.* TLS +GLOBAL +DEFAULT +8 sg4
.* TLS +GLOBAL +DEFAULT +8 sg5
.* NOTYPE +GLOBAL +DEFAULT +UND __tls_get_offset
.* TLS +GLOBAL +DEFAULT +8 sg1
.* FUNC +GLOBAL +DEFAULT +7 fn1
.* NOTYPE +GLOBAL +DEFAULT +11 __bss_start
.* TLS +GLOBAL +DEFAULT +8 sg2
.* TLS +GLOBAL +DEFAULT +8 sg6
.* TLS +GLOBAL +DEFAULT +8 sg7
.* NOTYPE +GLOBAL +DEFAULT +11 _edata
.* NOTYPE +GLOBAL +DEFAULT +11 _end
@


1.14
log
@bfd/
	* elflink.c (elf_link_input_bfd): Provide a file symbol for
	each input file with local syms, if the input lacks such.
	(bfd_elf_final_link): Add a file symbol to mark end of locals
	for which we can associate with input files.
	(struct elf_final_link_info): Add filesym_count field.
	(struct elf_outext_info): Add need_second_pass and second_pass.
	(elf_link_output_extsym): Detect symbols defined in the output
	file, emit them on second pass over locals.
ld/testsuite/
Update to suit added STT_FILE symbols.
@
text
@d83 1
a83 1
.* NOTYPE +GLOBAL +DEFAULT +ABS __bss_start
d87 2
a88 2
.* NOTYPE +GLOBAL +DEFAULT +ABS _edata
.* NOTYPE +GLOBAL +DEFAULT +ABS _end
d139 1
a139 1
.* NOTYPE +GLOBAL +DEFAULT +ABS __bss_start
d143 2
a144 2
.* NOTYPE +GLOBAL +DEFAULT +ABS _edata
.* NOTYPE +GLOBAL +DEFAULT +ABS _end
@


1.13
log
@Adjust testcases for readelf addend change

gas/testsuite/

	* gas/mips/elf-rel10.d: Updated.
	* gas/mips/elf-rel22.d: Likewise.
	* gas/mmix/comment-1.d: Likewise.

ld/testsuite/

	* ld-alpha/tlspic.rd: Updated.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/vxworks1-lib.rd: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-sh/shared-1.d: Likewise.
	* ld-sh/tlspic-2.d: Likewise.
	* ld-sparc/tlssunnopic32.rd: Likewise.
	* ld-sparc/tlssunnopic64.rd: Likewise.
	* ld-sparc/tlssunpic32.rd: Likewise.
	* ld-sparc/tlssunpic64.rd: Likewise.
@
text
@d104 1
a113 1
.* OBJECT +LOCAL +DEFAULT +ABS _DYNAMIC
a126 1
.* OBJECT +LOCAL +DEFAULT +ABS _GLOBAL_OFFSET_TABLE_
d129 3
@


1.12
log
@bfd/

2009-09-24  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/10630
	* elflink.c (elf_link_output_extsym): Turn off visibility on
	local symbol.
	(bfd_elf_final_link): Turn off visibility on dynamic local
	symbol.

ld/testsuite/

2009-09-24  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/10630
	* ld-alpha/tlsbin.rd: Remove HIDDEN/.hidden on local symbols.
	* ld-alpha/tlsbinr.rd: Likewise.
	* ld-alpha/tlspic.rd: Likewise.
	* ld-cris/libdso-2.d: Likewise.
	* ld-cris/locref1.d: Likewise.
	* ld-cris/locref2.d: Likewise.
	* ld-cris/tls-e-20a.d: Likewise.
	* ld-cris/tls-e-20.d: Likewise.
	* ld-cris/tls-e-80.d: Likewise.
	* ld-cris/tls-gc-68.d: Likewise.
	* ld-cris/tls-gc-69.d: Likewise.
	* ld-cris/tls-gc-70.d: Likewise.
	* ld-cris/tls-gc-75.d: Likewise.
	* ld-cris/tls-gc-76.d: Likewise.
	* ld-cris/tls-gc-79.d: Likewise.
	* ld-cris/tls-gd-1h.d: Likewise.
	* ld-cris/tls-gd-2h.d: Likewise.
	* ld-cris/tls-ld-4.d: Likewise.
	* ld-cris/tls-ld-5.d: Likewise.
	* ld-cris/tls-ld-6.d: Likewise.
	* ld-cris/tls-ld-7.d: Likewise.
	* ld-cris/tls-ldgd-14.d: Likewise.
	* ld-cris/tls-ldgd-15.d: Likewise.
	* ld-cris/tls-local-63.d: Likewise.
	* ld-cris/tls-local-64.d: Likewise.
	* ld-elf/pr9676.rd: Likewise.
	* ld-elf/pr9679.rd: Likewise.
	* ld-elfvsb/hidden2.d: Likewise.
	* ld-i386/tlsbindesc.rd: Likewise.
	* ld-i386/tlsbin.rd: Likewise.
	* ld-i386/tlsdesc.rd: Likewise.
	* ld-i386/tlsgdesc.rd: Likewise.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlspic.rd: Likewise.
	* ld-ia64/tlsbin.rd: Likewise.
	* ld-ia64/tlspic.rd: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-sparc/gotop32.rd: Likewise.
	* ld-sparc/gotop64.rd: Likewise.
	* ld-sparc/tlssunbin32.rd: Likewise.
	* ld-sparc/tlssunbin64.rd: Likewise.
	* ld-sparc/tlssunnopic32.rd: Likewise.
	* ld-sparc/tlssunnopic64.rd: Likewise.
	* ld-sparc/tlssunpic32.rd: Likewise.
	* ld-sparc/tlssunpic64.rd: Likewise.
	* ld-x86-64/tlsbindesc.rd: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-x86-64/tlsdesc.rd: Likewise.
	* ld-x86-64/tlsgdesc.rd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
	* ld-xtensa/tlsbin.rd: Likewise.
	* ld-xtensa/tlspic.rd: Likewise.

	* ld-elf/local1.d: New.
	* ld-elf/local1.map: Likewise.
	* ld-elf/local1.s: Likewise.
	* ld-ia64/local1.d: Likewise.
	* ld-ia64/local1.map: Likewise.
	* ld-ia64/local1.s: Likewise.
@
text
@d52 10
a61 10
[0-9a-f ]+R_390_TLS_DTPMOD +0+
[0-9a-f ]+R_390_TLS_TPOFF +0+24
[0-9a-f ]+R_390_TLS_TPOFF +0+30
[0-9a-f ]+R_390_TLS_DTPMOD +0+
[0-9a-f ]+R_390_TLS_DTPMOD +0+
[0-9a-f ]+R_390_TLS_TPOFF +0+64
[0-9a-f ]+R_390_TLS_TPOFF +0+50
[0-9a-f ]+R_390_TLS_TPOFF +0+70
[0-9a-f ]+R_390_TLS_DTPMOD +0+
[0-9a-f ]+R_390_TLS_TPOFF +0+44
@


1.11
log
@Tolerate some whitespace differences in readelf output.
@
text
@d112 18
a129 18
.* TLS +LOCAL +HIDDEN +9 sH1
.* OBJECT +LOCAL +HIDDEN +ABS _DYNAMIC
.* TLS +LOCAL +HIDDEN +8 sh3
.* TLS +LOCAL +HIDDEN +9 sH2
.* TLS +LOCAL +HIDDEN +9 sH7
.* TLS +LOCAL +HIDDEN +8 sh7
.* TLS +LOCAL +HIDDEN +8 sh8
.* TLS +LOCAL +HIDDEN +9 sH4
.* TLS +LOCAL +HIDDEN +8 sh4
.* TLS +LOCAL +HIDDEN +9 sH3
.* TLS +LOCAL +HIDDEN +8 sh5
.* TLS +LOCAL +HIDDEN +9 sH5
.* TLS +LOCAL +HIDDEN +9 sH6
.* TLS +LOCAL +HIDDEN +9 sH8
.* TLS +LOCAL +HIDDEN +8 sh1
.* OBJECT +LOCAL +HIDDEN +ABS _GLOBAL_OFFSET_TABLE_
.* TLS +LOCAL +HIDDEN +8 sh2
.* TLS +LOCAL +HIDDEN +8 sh6
@


1.10
log
@2007-09-29  Mike Frysinger  <vapier@@gentoo.org>

	* ld-alpha/tlsbin.rd: Use [0-9]+ to match section header count and
	0x[0-9a-f]+ to match section header offset.  Match section indexes
	with \[[ 0-9]+\].  Use [0-9]+ to match program header count and
	0x[0-9a-f]+ to match program header offset.  Match .dynsym and
	.symtab entry counts with [0-9]+.
	* ld-alpha/tlsbinr.rd: Likewise.
	* ld-alpha/tlspic.rd: Likewise.
	* ld-i386/tlsbin.rd: Likewise.
	* ld-i386/tlsbindesc.rd: Likewise.
	* ld-i386/tlsdesc.rd: Likewise.
	* ld-i386/tlsgdesc.rd: Likewise.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlspic.rd: Likewise.
	* ld-ia64/tlsbin.rd: Likewise.
	* ld-ia64/tlspic.rd: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-sparc/tlssunbin32.rd: Likewise.
	* ld-sparc/tlssunbin64.rd: Likewise.
	* ld-sparc/tlssunnopic32.rd: Likewise.
	* ld-sparc/tlssunnopic64.rd: Likewise.
	* ld-sparc/tlssunpic32.rd: Likewise.
	* ld-sparc/tlssunpic64.rd: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-x86-64/tlsbindesc.rd: Likewise.
	* ld-x86-64/tlsdesc.rd: Likewise.
	* ld-x86-64/tlsgdesc.rd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
@
text
@d11 1
a11 1
  \[Nr\] Name +Type +Address +Off +Size +ES Flg Lk Inf Al
d37 5
a41 5
  Type +Offset +VirtAddr +PhysAddr +FileSiz +MemSiz +Flg Align
  LOAD .* R E 0x1000
  LOAD .* RW +0x1000
  DYNAMIC .* RW +0x8
  TLS .* 0x0+60 0x0+80 R +0x20
d44 5
a48 5
  Segment Sections...
   00 +.hash .dynsym .dynstr .rela.dyn .rela.plt .plt .text *
   01 +.tdata .dynamic .got *
   02 +.dynamic *
   03 +.tdata .tbss *
d51 1
a51 1
 +Offset +Info +Type +Symbol's Value  Symbol's Name \+ Addend
d68 1
a68 1
 +Offset +Info +Type +Symbol's Value  Symbol's Name \+ Addend
d72 17
a88 17
 +Num: +Value +Size Type +Bind +Vis +Ndx Name
.* NOTYPE  LOCAL  DEFAULT  UND 
.* SECTION LOCAL  DEFAULT +7 
.* SECTION LOCAL  DEFAULT +8 
.* TLS +GLOBAL DEFAULT +8 sg8
.* TLS +GLOBAL DEFAULT +8 sg3
.* TLS +GLOBAL DEFAULT +8 sg4
.* TLS +GLOBAL DEFAULT +8 sg5
.* NOTYPE  GLOBAL DEFAULT  UND __tls_get_offset
.* TLS +GLOBAL DEFAULT +8 sg1
.* FUNC +GLOBAL DEFAULT +7 fn1
.* NOTYPE  GLOBAL DEFAULT  ABS __bss_start
.* TLS +GLOBAL DEFAULT +8 sg2
.* TLS +GLOBAL DEFAULT +8 sg6
.* TLS +GLOBAL DEFAULT +8 sg7
.* NOTYPE  GLOBAL DEFAULT  ABS _edata
.* NOTYPE  GLOBAL DEFAULT  ABS _end
d91 52
a142 52
 +Num: +Value +Size Type +Bind +Vis +Ndx Name
.* NOTYPE  LOCAL  DEFAULT  UND 
.* SECTION LOCAL  DEFAULT +1 
.* SECTION LOCAL  DEFAULT +2 
.* SECTION LOCAL  DEFAULT +3 
.* SECTION LOCAL  DEFAULT +4 
.* SECTION LOCAL  DEFAULT +5 
.* SECTION LOCAL  DEFAULT +6 
.* SECTION LOCAL  DEFAULT +7 
.* SECTION LOCAL  DEFAULT +8 
.* SECTION LOCAL  DEFAULT +9 
.* SECTION LOCAL  DEFAULT +10 
.* SECTION LOCAL  DEFAULT +11 
.* TLS +LOCAL  DEFAULT +8 sl1
.* TLS +LOCAL  DEFAULT +8 sl2
.* TLS +LOCAL  DEFAULT +8 sl3
.* TLS +LOCAL  DEFAULT +8 sl4
.* TLS +LOCAL  DEFAULT +8 sl5
.* TLS +LOCAL  DEFAULT +8 sl6
.* TLS +LOCAL  DEFAULT +8 sl7
.* TLS +LOCAL  DEFAULT +8 sl8
.* TLS +LOCAL  HIDDEN +9 sH1
.* OBJECT  LOCAL  HIDDEN  ABS _DYNAMIC
.* TLS +LOCAL  HIDDEN +8 sh3
.* TLS +LOCAL  HIDDEN +9 sH2
.* TLS +LOCAL  HIDDEN +9 sH7
.* TLS +LOCAL  HIDDEN +8 sh7
.* TLS +LOCAL  HIDDEN +8 sh8
.* TLS +LOCAL  HIDDEN +9 sH4
.* TLS +LOCAL  HIDDEN +8 sh4
.* TLS +LOCAL  HIDDEN +9 sH3
.* TLS +LOCAL  HIDDEN +8 sh5
.* TLS +LOCAL  HIDDEN +9 sH5
.* TLS +LOCAL  HIDDEN +9 sH6
.* TLS +LOCAL  HIDDEN +9 sH8
.* TLS +LOCAL  HIDDEN +8 sh1
.* OBJECT  LOCAL  HIDDEN  ABS _GLOBAL_OFFSET_TABLE_
.* TLS +LOCAL  HIDDEN +8 sh2
.* TLS +LOCAL  HIDDEN +8 sh6
.* TLS +GLOBAL DEFAULT +8 sg8
.* TLS +GLOBAL DEFAULT +8 sg3
.* TLS +GLOBAL DEFAULT +8 sg4
.* TLS +GLOBAL DEFAULT +8 sg5
.* NOTYPE  GLOBAL DEFAULT  UND __tls_get_offset
.* TLS +GLOBAL DEFAULT +8 sg1
.* FUNC +GLOBAL DEFAULT +7 fn1
.* NOTYPE  GLOBAL DEFAULT  ABS __bss_start
.* TLS +GLOBAL DEFAULT +8 sg2
.* TLS +GLOBAL DEFAULT +8 sg6
.* TLS +GLOBAL DEFAULT +8 sg7
.* NOTYPE  GLOBAL DEFAULT  ABS _edata
.* NOTYPE  GLOBAL DEFAULT  ABS _end
@


1.9
log
@bfd/
	* elf-bfd.h (struct elf_link_hash_table): Reorder.  Add
	text_index_section and data_index_section.
	(struct elf_backend_data): Add elf_backend_init_index_section.
	(_bfd_elf_init_1_index_section): Declare.
	(_bfd_elf_init_2_index_sections): Declare.
	* elfxx-target.h (elf_backend_init_index_section): Define.
	(elfNN_bed): Init new field.
	* elflink.c (_bfd_elf_link_omit_section_dynsym): Keep first tls
	section and text_index_section plus data_index_section.
	(_bfd_elf_link_renumber_dynsyms): Clear dynindx on omitted sections.
	(_bfd_elf_init_1_index_section): New function.
	(_bfd_elf_init_2_index_sections): New function.
	(bfd_elf_size_dynsym_hash_dynstr): Call elf_backend_init_index_section.
	(elf_link_input_bfd): When emitting relocs, use text_index_section
	and data_index_section for removed sections.
	* elf-m10300.c (elf_backend_omit_section_dynsym): Define.
	* elf32-i386.c: Likewise.
	* elf32-m32r.c: Likewise.
	* elf32-sh.c: Likewise.
	* elf32-xstormy16.c: Likewise.
	* elf32-xtensa.c: Likewise.
	* elf64-alpha.c: Likewise.
	* elf64-hppa.c: Likewise.
	* elf64-mmix.c: Likewise.
	* elf64-sh64.c: Likewise.
	* elfxx-ia64.c: Likewise.
	* elf32-arm.c (elf32_arm_final_link_relocate): Use text_index_section
	and data_index_section sym for relocs against sections with no dynamic
	section sym.
	(elf_backend_init_index_section): Define.
	* elf32-cris.c: Similarly.
	* elf32-hppa.c: Similarly.
	* elf32-i370.c: Similarly.
	* elf32-m68k.c: Similarly.
	* elf32-mips.c: Similarly.
	* elf32-ppc.c: Similarly.
	* elf32-s390.c: Similarly.
	* elf32-sparc.c: Similarly.
	* elf32-vax.c: Similarly.
	* elf64-mips.c: Similarly.
	* elf64-ppc.c: Similarly.
	* elf64-s390.c: Similarly.
	* elf64-sparc.c: Similarly.
	* elf64-x86-64.c: Similarly.
	* elfn32-mips.c: Similarly.
	* elfxx-mips.c: Similarly.
	* elfxx-sparc.c: Similarly.
	* linker.c (fix_syms): Base symbols in removed sections on
	previous section in preference to using absolute section.

ld/
	* ldlang.c (strip_excluded_output_sections): Do strip sections
	that define syms, but don't ignore them.
	* ld.texinfo (Output Section Discarding): Revise.
	* emultempl/armcoff.em (gld${EMULATION_NAME}_finish): Always call
	finish_default.

ld/testsuite/
	Update for section sym changes.
@
text
@d8 1
a8 1
There are 15 section headers, starting at offset 0x[0-9a-f]+:
d12 15
a26 15
  \[ 0\] +NULL +0+ 0+ 0+ 0+ +0 +0 +0
  \[ 1\] .hash .*
  \[ 2\] .dynsym .*
  \[ 3\] .dynstr .*
  \[ 4\] .rela.dyn .*
  \[ 5\] .rela.plt .*
  \[ 6\] .plt .*
  \[ 7\] .text +PROGBITS .*
  \[ 8\] .tdata +PROGBITS .* 0+60 00 WAT +0 +0 +32
  \[ 9\] .tbss +NOBITS .* 0+20 00 WAT +0 +0 +1
  \[10\] .dynamic +DYNAMIC .*
  \[11\] .got +PROGBITS .*
  \[12\] .shstrtab .*
  \[13\] .symtab .*
  \[14\] .strtab .*
d34 1
a34 1
There are 4 program headers, starting at offset [0-9]+
d71 1
a71 1
Symbol table '.dynsym' contains [0-9]+ entries:
d90 1
a90 1
Symbol table '.symtab' contains .* entries:
@


1.8
log
@	* ld-powerpc/tlsexe.r: Update for removal of some section syms.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
@
text
@a75 1
.* SECTION LOCAL  DEFAULT +9 
@


1.7
log
@Updo the last change to binutils and ld/testsuite.
@
text
@d91 1
a91 1
Symbol table '.symtab' contains 54 entries:
a104 3
.* SECTION LOCAL  DEFAULT +12 
.* SECTION LOCAL  DEFAULT +13 
.* SECTION LOCAL  DEFAULT +14 
@


1.6
log
@binutils/

2006-02-02  H.J. Lu  <hongjiu.lu@@intel.com>

	* readelf.c (process_program_headers): Undo the change made on
	2004-09-22.  Match PT_DYNAMIC segment only with SHT_DYNAMIC
	sections.

ld/testsuite/

2006-02-02  H.J. Lu  <hongjiu.lu@@intel.com>

	* ld-i386/tlsbin.rd: Update for changed segment map.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlspic.rd: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-sh/tlsbin-2.d: Likewise.
	* ld-sh/tlspic-2.d: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
@
text
@d46 1
a46 1
   01 +.tdata .tbss .dynamic .got *
@


1.5
log
@Adjust for dynamic sym changes.
@
text
@d46 1
a46 1
   01 +.tdata .dynamic .got *
@


1.4
log
@bfd/

2005-03-16  H.J. Lu  <hongjiu.lu@@intel.com>

	* elflink.c (elf_mark_used_section): New.
	(bfd_elf_gc_sections): Call elf_gc_mark_section for
	non-relocatable link if we don't do GC.

include/

2005-03-16  H.J. Lu  <hongjiu.lu@@intel.com>

	* bfdlink.h (bfd_link_info): Add gc_sections.

ld/

2005-03-16  H.J. Lu  <hongjiu.lu@@intel.com>

	* emultempl/elf32.em (gld${EMULATION_NAME}_finish): Remove
	unused empty output sections for non-relocatable link.

	* ld.h (args_type): Remove gc_sections.

	* ldlang.c (lang_mark_used_section): New.
	(lang_gc_sections): Use link_info.gc_sections instead of
	command_line.gc_sections.
	* ldmain.c (main): Likewise.
	* lexsup.c (parse_args): Likewise.
	* ldlang.c (lang_process): Call lang_mark_used_section.

	* ldmain.c (main): Initialize link_info.gc_sections to FALSE.

ld/testsuite/

2005-03-16  H.J. Lu  <hongjiu.lu@@intel.com>

	* ld-alpha/tlsbin.rd: Updated for empty section removal.
	* ld-alpha/tlsbinr.rd: Likewise.
	* ld-alpha/tlspic.rd: Likewise.
	* ld-arm/mixed-lib.sym: Likewise.
	* ld-i386/tlsbin.rd: Likewise.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlspic.rd: Likewise.
	* ld-ia64/tlsbin.rd: Likewise.
	* ld-ia64/tlspic.rd: Likewise.
	* ld-powerpc/apuinfo.rd: Likewise.
	* ld-powerpc/powerpc.exp: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-sh/tlsbin-2.d: Likewise.
	* ld-sh/tlspic-2.d: Likewise.
	* ld-sparc/tlssunbin32.rd: Likewise.
	* ld-sparc/tlssunnopic32.rd: Likewise.
	* ld-sparc/tlssunpic32.rd: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
@
text
@d13 14
a26 14
  \[ 1\] .hash +.*
  \[ 2\] .dynsym +.*
  \[ 3\] .dynstr +.*
  \[ 4\] .rela.dyn +.*
  \[ 5\] .rela.plt +.*
  \[ 6\] .plt +.*
  \[ 7\] .text +PROGBITS +.*
  \[ 8\] .tdata +PROGBITS +0+18c0 0+8c0 0+60 00 WAT +0 +0 +32
  \[ 9\] .tbss +NOBITS +0+1920 0+920 0+20 00 WAT +0 +0 +1
  \[10\] .dynamic +DYNAMIC +0+1920 0+920 0+130 10 +WA +3 +0 +8
  \[11\] .got +PROGBITS +0+1a50 0+a50 0+b0 08 +WA +0 +0 +8
  \[12\] .shstrtab +.*
  \[13\] .symtab +.*
  \[14\] .strtab +.*
d38 4
a41 4
  LOAD +0x0+ 0x0+ 0x0+ 0x[0-9a-f]+ 0x[0-9a-f]+ R E 0x1000
  LOAD +0x0+8c0 0x0+18c0 0x0+18c0 0x0+240 0x0+240 RW +0x1000
  DYNAMIC +0x0+920 0x0+1920 0x0+1920 0x0+130 0x0+130 RW +0x8
  TLS +0x0+8c0 0x0+18c0 0x0+18c0 0x0+60 0x0+80 R +0x20
d52 14
a65 14
[0-9a-f]+  0+36 R_390_TLS_DTPMOD +0+
[0-9a-f]+  0+38 R_390_TLS_TPOFF +0+24
[0-9a-f]+  0+38 R_390_TLS_TPOFF +0+30
[0-9a-f]+  0+36 R_390_TLS_DTPMOD +0+
[0-9a-f]+  0+36 R_390_TLS_DTPMOD +0+
[0-9a-f]+  0+38 R_390_TLS_TPOFF +0+64
[0-9a-f]+  0+38 R_390_TLS_TPOFF +0+50
[0-9a-f]+  0+38 R_390_TLS_TPOFF +0+70
[0-9a-f]+  0+36 R_390_TLS_DTPMOD +0+
[0-9a-f]+  0+38 R_390_TLS_TPOFF +0+44
[0-9a-f]+  0+a0+38 R_390_TLS_TPOFF +0+10 sg5 \+ 0
[0-9a-f]+  0+c0+36 R_390_TLS_DTPMOD +0+ sg1 \+ 0
[0-9a-f]+  0+c0+37 R_390_TLS_DTPOFF +0+ sg1 \+ 0
[0-9a-f]+  0+f0+38 R_390_TLS_TPOFF +0+4 sg2 \+ 0
d69 1
a69 1
[0-9a-f]+  0+b0+b R_390_JMP_SLOT +0+ __tls_get_offset \+ 0
d71 1
a71 1
Symbol table '.dynsym' contains 20 entries:
d73 17
a89 20
 +[0-9]+: 0+ +0 NOTYPE  LOCAL  DEFAULT  UND 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL  DEFAULT +7 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL  DEFAULT +8 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL  DEFAULT +9 
 +[0-9]+: 0+ +0 NOTYPE  LOCAL  DEFAULT  UND 
 +[0-9]+: 0+ +0 NOTYPE  LOCAL  DEFAULT  UND 
 +[0-9]+: 0+1c +0 TLS +GLOBAL DEFAULT +8 sg8
 +[0-9]+: [0-9a-f]+ +0 OBJECT  GLOBAL DEFAULT  ABS _DYNAMIC
 +[0-9]+: 0+8 +0 TLS +GLOBAL DEFAULT +8 sg3
 +[0-9]+: 0+c +0 TLS +GLOBAL DEFAULT +8 sg4
 +[0-9]+: 0+10 +0 TLS +GLOBAL DEFAULT +8 sg5
 +[0-9]+: 0+ +0 NOTYPE  GLOBAL DEFAULT  UND __tls_get_offset
 +[0-9]+: 0+ +0 TLS +GLOBAL DEFAULT +8 sg1
 +[0-9]+: [0-9a-f]+ +0 FUNC +GLOBAL DEFAULT +7 fn1
 +[0-9]+: [0-9a-f]+ +0 NOTYPE  GLOBAL DEFAULT  ABS __bss_start
 +[0-9]+: 0+4 +0 TLS +GLOBAL DEFAULT +8 sg2
 +[0-9]+: 0+14 +0 TLS +GLOBAL DEFAULT +8 sg6
 +[0-9]+: 0+18 +0 TLS +GLOBAL DEFAULT +8 sg7
 +[0-9]+: [0-9a-f]+ +0 NOTYPE  GLOBAL DEFAULT  ABS _edata
 +[0-9]+: [0-9a-f]+ +0 NOTYPE  GLOBAL DEFAULT  ABS _end
d93 54
a146 54
 +[0-9]+: 0+ +0 NOTYPE  LOCAL  DEFAULT  UND 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL  DEFAULT +1 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL  DEFAULT +2 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL  DEFAULT +3 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL  DEFAULT +4 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL  DEFAULT +5 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL  DEFAULT +6 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL  DEFAULT +7 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL  DEFAULT +8 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL  DEFAULT +9 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL  DEFAULT +10 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL  DEFAULT +11 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL  DEFAULT +12 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL  DEFAULT +13 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL  DEFAULT +14 
 +[0-9]+: 0+20 +0 TLS +LOCAL  DEFAULT +8 sl1
 +[0-9]+: 0+24 +0 TLS +LOCAL  DEFAULT +8 sl2
 +[0-9]+: 0+28 +0 TLS +LOCAL  DEFAULT +8 sl3
 +[0-9]+: 0+2c +0 TLS +LOCAL  DEFAULT +8 sl4
 +[0-9]+: 0+30 +0 TLS +LOCAL  DEFAULT +8 sl5
 +[0-9]+: 0+34 +0 TLS +LOCAL  DEFAULT +8 sl6
 +[0-9]+: 0+38 +0 TLS +LOCAL  DEFAULT +8 sl7
 +[0-9]+: 0+3c +0 TLS +LOCAL  DEFAULT +8 sl8
 +[0-9]+: 0+60 +0 TLS +LOCAL  HIDDEN +9 sH1
 +[0-9]+: 0+48 +0 TLS +LOCAL  HIDDEN +8 sh3
 +[0-9]+: 0+64 +0 TLS +LOCAL  HIDDEN +9 sH2
 +[0-9]+: 0+78 +0 TLS +LOCAL  HIDDEN +9 sH7
 +[0-9]+: 0+58 +0 TLS +LOCAL  HIDDEN +8 sh7
 +[0-9]+: 0+5c +0 TLS +LOCAL  HIDDEN +8 sh8
 +[0-9]+: 0+6c +0 TLS +LOCAL  HIDDEN +9 sH4
 +[0-9]+: 0+4c +0 TLS +LOCAL  HIDDEN +8 sh4
 +[0-9]+: 0+68 +0 TLS +LOCAL  HIDDEN +9 sH3
 +[0-9]+: 0+50 +0 TLS +LOCAL  HIDDEN +8 sh5
 +[0-9]+: 0+70 +0 TLS +LOCAL  HIDDEN +9 sH5
 +[0-9]+: 0+74 +0 TLS +LOCAL  HIDDEN +9 sH6
 +[0-9]+: 0+7c +0 TLS +LOCAL  HIDDEN +9 sH8
 +[0-9]+: 0+40 +0 TLS +LOCAL  HIDDEN +8 sh1
 +[0-9]+: [0-9a-f]+ +0 OBJECT  LOCAL  HIDDEN  ABS _GLOBAL_OFFSET_TABLE_
 +[0-9]+: 0+44 +0 TLS +LOCAL  HIDDEN +8 sh2
 +[0-9]+: 0+54 +0 TLS +LOCAL  HIDDEN +8 sh6
 +[0-9]+: 0+1c +0 TLS +GLOBAL DEFAULT +8 sg8
 +[0-9]+: [0-9a-f]+ +0 OBJECT  GLOBAL DEFAULT  ABS _DYNAMIC
 +[0-9]+: 0+8 +0 TLS +GLOBAL DEFAULT +8 sg3
 +[0-9]+: 0+c +0 TLS +GLOBAL DEFAULT +8 sg4
 +[0-9]+: 0+10 +0 TLS +GLOBAL DEFAULT +8 sg5
 +[0-9]+: 0+ +0 NOTYPE  GLOBAL DEFAULT  UND __tls_get_offset
 +[0-9]+: 0+ +0 TLS +GLOBAL DEFAULT +8 sg1
 +[0-9]+: [0-9a-f]+ +0 FUNC +GLOBAL DEFAULT +7 fn1
 +[0-9]+: [0-9a-f]+ +0 NOTYPE  GLOBAL DEFAULT  ABS __bss_start
 +[0-9]+: 0+4 +0 TLS +GLOBAL DEFAULT +8 sg2
 +[0-9]+: 0+14 +0 TLS +GLOBAL DEFAULT +8 sg6
 +[0-9]+: 0+18 +0 TLS +GLOBAL DEFAULT +8 sg7
 +[0-9]+: [0-9a-f]+ +0 NOTYPE  GLOBAL DEFAULT  ABS _edata
 +[0-9]+: [0-9a-f]+ +0 NOTYPE  GLOBAL DEFAULT  ABS _end
@


1.3
log
@binutils/
	* readelf.c (process_program_headers): Don't include .tbss in non-TLS
	segments.

ld/testsuite/
	* ld-i386/tlsbin.rd: Update for changed segment map.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlspic.rd: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-sh/tlsbin-2.d: Likewise.
	* ld-sh/tlspic-2.d: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
@
text
@d8 1
a8 1
There are 17 section headers, starting at offset 0x[0-9a-f]+:
d20 7
a26 9
  \[ 8\] .tdata +PROGBITS +0+1900 0+900 0+60 00 WAT +0 +0 +32
  \[ 9\] .tbss +NOBITS +0+1960 0+960 0+20 00 WAT +0 +0 +1
  \[10\] .dynamic +DYNAMIC +0+1960 0+960 0+130 10 +WA +3 +0 +8
  \[11\] .got +PROGBITS +0+1a90 0+a90 0+b0 08 +WA +0 +0 +8
  \[12\] .data +.*
  \[13\] .bss +.*
  \[14\] .shstrtab +.*
  \[15\] .symtab +.*
  \[16\] .strtab +.*
d39 3
a41 3
  LOAD +0x0+900 0x0+1900 0x0+1900 0x0+240 0x0+240 RW +0x1000
  DYNAMIC +0x0+960 0x0+1960 0x0+1960 0x0+130 0x0+130 RW +0x8
  TLS +0x0+900 0x0+1900 0x0+1900 0x0+60 0x0+80 R +0x20
d71 1
a71 1
Symbol table '.dynsym' contains 21 entries:
d77 2
a78 2
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL  DEFAULT +12 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL  DEFAULT +13 
a91 1
 +[0-9]+: [0-9a-f]+ +0 OBJECT  GLOBAL DEFAULT  ABS _GLOBAL_OFFSET_TABLE_
d94 1
a94 1
Symbol table '.symtab' contains 56 entries:
a110 2
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL  DEFAULT +15 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL  DEFAULT +16 
d133 1
a148 1
 +[0-9]+: [0-9a-f]+ +0 OBJECT  GLOBAL DEFAULT  ABS _GLOBAL_OFFSET_TABLE_
@


1.2
log
@bfd/
	* elflink.c (elf_bfd_final_link): Don't output STT_SECTION symbol
	into .dynsym if elf_section_data (sec)->dynindx <= 0.
	Adjust counting of last_local.
	(_bfd_elf_link_renumber_dynsyms): Don't assign dynindx to sections
	other than SHT_PROGBITS/SHT_NOBITS and neither for .got/.got.plt/.plt
	created by the linker nor !SHF_ALLOC.

	* elf32-i386.c (elf_i386_finish_dynamic_sections): Point
	DT_PLTGOT to the start of the .got.plt section instead of the
	.got output section.  Set sh_entsize for .got section in addition
	to .got.plt.
	(elf_i386_relocate_section): Don't assume _GLOBAL_OFFSET_TABLE_
	is at sgot->output_section->vma.
	* elf64-x86-64.c (elf64_x86_64_finish_dynamic_sections): Point
	DT_PLTGOT to the start of the .got.plt section instead of the
	.got output section.
	(elf64_x86_64_relocate_section): Don't assume _GLOBAL_OFFSET_TABLE_
	is at sgot->output_section->vma.  Set sh_entsize for .got section
	in addition to .got.plt.
	* elf.c (_bfd_elf_print_private_bfd_data): Handle PT_GNU_RELRO.
	(bfd_section_from_phdr): Likewise.
	(map_sections_to_segments): Likewise.
	(assign_file_positions_for_segments): Likewise.
	(get_program_header_size): Likewise.
	* elflink.c (bfd_elf_size_dynamic_sections): Set
	elf_tdata (output_bfd)->relro from info->relro.
	* elf-bfd.h (struct elf_obj_tdata): Add relro field.
include/
	* bfdlink.h (struct bfd_link_info): Add relro, relro_start and
	relro_end fields.
	* elf/common.h (PT_GNU_EH_FRAME, PT_GNU_STACK): Add comments.
	(PT_GNU_RELRO): Define.
binutils/
	* readelf.c (get_segment_type): Handle PT_GNU_RELRO.
ld/
	* genscripts.sh: Generate -z combreloc -z now -z relro scripts
	for binaries, -shared and -pie.
	* emulparams/elf_i386.sh (SEPARATE_GOTPLT): Set.
	* emulparams/elf_x86_64.sh (SEPARATE_GOTPLT): Set.
	* emulparams/elf32ppc.sh (OTHER_READWRITE_SECTIONS): Rename to...
	(OTHER_RELRO_SECTIONS): ... this.
	* ldlex.l (DATA_SEGMENT_RELRO_END): Add.
	* emultempl/elf32.em (gld${EMULATION_NAME}_handle_option): Handle
	-z relro and -z norelro.
	(gld${EMULATION_NAME}_list_options): Add it to usage.
	(gld${EMULATION_NAME}_get_script): Return -z combreloc -z now
	-z relro scripts when appropriate.
	* scripttempl/elf.sc: Unset SEPARATE_GOTPLT if RELRO_NOW is set.
	Create separate .got.plt section if SEPARATE_GOTPLT.
	Move sections which are only written during relocation handling
	to the beginning of RW segment.  If NO_SMALL_DATA, move .got
	before .data.  Add DATA_SEGMENT_RELRO_END directive.
	Include OTHER_RELRO_SECTIONS.
	* ldgram.y (DATA_SEGMENT_RELRO_END): Add.
	* ldexp.c (exp_print_token): Handle DATA_SEGMENT_RELRO_END.
	(fold_unary): Likewise.
	(fold_binary): Handle -z relro.
	* ldexp.h (struct exp_data_seg): Add exp_dataseg_relro_seen and
	exp_dataseg_relro_adjust phases.  Add relro_end field.
	* ldmain.c (main): Initialize link_info.relro to FALSE.
	* ldlang.c (lang_size_sections): Handle -z relro.
ld/testsuite/
	* ld-i386/tlspic.rd: Adjust for section reordering changes
	and removal of unneeded STT_SECTION symbols from .dynsym.
	* ld-i386/tlspic.dd: Likewise.
	* ld-i386/tlspic.sd: Likewise.
	* ld-i386/tlsbin.rd: Likewise.
	* ld-i386/tlsbinpic.s: Likewise.
	* ld-i386/tlsbin.dd: Likewise.
	* ld-i386/tlsbin.sd: Likewise.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlsnopic1.s: Likewise.
	* ld-i386/combreloc.d: Likewise.
	* ld-i386/tlsnopic.dd: Likewise.
	* ld-i386/tlsnopic.sd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
	* ld-x86-64/tlspic.dd: Likewise.
	* ld-x86-64/tlsbin.dd: Likewise.
	* ld-x86-64/tlspic.sd: Likewise.
	* ld-x86-64/tlsbin.sd: Likewise.
	* ld-x86-64/tlspic.td: Likewise.
	* ld-x86-64/tlsbin.td: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-s390/tlspic1.s: Likewise.
	* ld-s390/tlsbinpic.s: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlspic.dd: Likewise.
	* ld-s390/tlsbin.dd: Likewise.
	* ld-s390/tlsbin.sd: Likewise.
	* ld-s390/tlsbin.td: Likewise.
	* ld-s390/tlspic.sd: Likewise.
	* ld-s390/tlspic.td: Likewise.
	* ld-s390/tlspic1_64.s: Likewise.
	* ld-s390/tlsbinpic_64.s: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlspic_64.dd: Likewise.
	* ld-s390/tlsbin_64.dd: Likewise.
	* ld-s390/tlspic_64.sd: Likewise.
	* ld-s390/tlspic_64.td: Likewise.
	* ld-s390/tlsbin_64.td: Likewise.
	* ld-s390/tlsbin_64.sd: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlsso32.d: Likewise.
	* ld-powerpc/tlsso32.g: Likewise.
	* ld-powerpc/tlsso32.t: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso.g: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
	* ld-powerpc/tlstocso.g: Likewise.
	* ld-ia64/tlspic.rd: Likewise.
	* ld-ia64/tlspic.dd: Likewise.
	* ld-ia64/tlspic.sd: Likewise.
	* ld-ia64/tlspic.td: Likewise.
	* ld-ia64/tlsbin.rd: Likewise.
	* ld-ia64/tlsbin.sd: Likewise.
	* ld-ia64/tlsbin.td: Likewise.
	* ld-elfvsb/elfvsb.exp: XFAIL non-PIC load offset tests on s390x.
	* ld-shared/shared.exp: Likewise.
@
text
@d48 2
a49 2
   01 +.tdata .tbss .dynamic .got *
   02 +.tbss .dynamic *
@


1.1
log
@	* ld-s390/s390.exp: New file.
	* ld-s390/tlsbin_64.dd: New file.
	* ld-s390/tlsbin_64.rd: New file.
	* ld-s390/tlsbin_64.s: New file.
	* ld-s390/tlsbin_64.sd: New file.
	* ld-s390/tlsbin_64.td: New file.
	* ld-s390/tlsbin.dd: New file.
	* ld-s390/tlsbinpic_64.s: New file.
	* ld-s390/tlsbinpic.s: New file.
	* ld-s390/tlsbin.rd: New file.
	* ld-s390/tlsbin.s: New file.
	* ld-s390/tlsbin.sd: New file.
	* ld-s390/tlsbin.td: New file.
	* ld-s390/tlslib_64.s: New file.
	* ld-s390/tlslib.s: New file.
	* ld-s390/tlspic1_64.s: New file.
	* ld-s390/tlspic1.s: New file.
	* ld-s390/tlspic2_64.s: New file.
	* ld-s390/tlspic2.s: New file.
	* ld-s390/tlspic_64.dd: New file.
	* ld-s390/tlspic_64.rd: New file.
	* ld-s390/tlspic_64.sd: New file.
	* ld-s390/tlspic_64.td: New file.
	* ld-s390/tlspic.dd: New file.
	* ld-s390/tlspic.rd: New file.
	* ld-s390/tlspic.sd: New file.
	* ld-s390/tlspic.td: New file.
@
text
@d8 1
a8 1
There are 18 section headers, starting at offset 0x[0-9a-f]+:
d19 10
a28 11
  \[ 7\] .text +PROGBITS +0+790 0+790 0+270 00 +AX +0 +0 +4
  \[ 8\] .data +.*
  \[ 9\] .tdata +PROGBITS +0+1a00 0+a00 0+60 00 WAT +0 +0 +1
  \[10\] .tbss +NOBITS +0+1a60 0+a60 0+20 00 WAT +0 +0 +1
  \[11\] .dynamic +DYNAMIC +0+1a60 0+a60 0+130 10 +WA +3 +0 +8
  \[12\] .got +PROGBITS +0+1b90 0+b90 0+b0 08 +WA +0 +0 +8
  \[13\] .sbss +.*
  \[14\] .bss +.*
  \[15\] .shstrtab +.*
  \[16\] .symtab +.*
  \[17\] .strtab +.*
d35 1
a35 1
Entry point 0x790
d41 3
a43 3
  LOAD +0x0+a00 0x0+1a00 0x0+1a00 0x0+240 0x0+240 RW +0x1000
  DYNAMIC +0x0+a60 0x0+1a60 0x0+1a60 0x0+130 0x0+130 RW +0x8
  TLS +0x0+a00 0x0+1a00 0x0+1a00 0x0+60 0x0+80 R +0x1
d54 14
a67 14
[0-9a-z]+  0+36 R_390_TLS_DTPMOD +0+
[0-9a-z]+  0+38 R_390_TLS_TPOFF +0+24
[0-9a-z]+  0+38 R_390_TLS_TPOFF +0+30
[0-9a-z]+  0+36 R_390_TLS_DTPMOD +0+
[0-9a-z]+  0+36 R_390_TLS_DTPMOD +0+
[0-9a-z]+  0+38 R_390_TLS_TPOFF +0+64
[0-9a-z]+  0+38 R_390_TLS_TPOFF +0+50
[0-9a-z]+  0+38 R_390_TLS_TPOFF +0+70
[0-9a-z]+  0+36 R_390_TLS_DTPMOD +0+
[0-9a-z]+  0+38 R_390_TLS_TPOFF +0+44
[0-9a-z]+  0+130+38 R_390_TLS_TPOFF +0+10 sg5 \+ 0
[0-9a-z]+  0+150+36 R_390_TLS_DTPMOD +0+ sg1 \+ 0
[0-9a-z]+  0+150+37 R_390_TLS_DTPOFF +0+ sg1 \+ 0
[0-9a-z]+  0+180+38 R_390_TLS_TPOFF +0+4 sg2 \+ 0
d69 1
a69 1
Relocation section '.rela.plt' at offset 0x738 contains 1 entries:
d71 1
a71 1
0+1ba8  0+140+b R_390_JMP_SLOT +0+ __tls_get_offset \+ 0
d73 1
a73 1
Symbol table '.dynsym' contains 30 entries:
d75 21
a95 30
 +0: 0+ +0 NOTYPE  LOCAL  DEFAULT  UND 
 +1: [0-9a-z]+ +0 SECTION LOCAL  DEFAULT +1 
 +2: [0-9a-z]+ +0 SECTION LOCAL  DEFAULT +2 
 +3: [0-9a-z]+ +0 SECTION LOCAL  DEFAULT +3 
 +4: [0-9a-z]+ +0 SECTION LOCAL  DEFAULT +4 
 +5: [0-9a-z]+ +0 SECTION LOCAL  DEFAULT +5 
 +6: [0-9a-z]+ +0 SECTION LOCAL  DEFAULT +6 
 +7: [0-9a-z]+ +0 SECTION LOCAL  DEFAULT +7 
 +8: [0-9a-z]+ +0 SECTION LOCAL  DEFAULT +8 
 +9: [0-9a-z]+ +0 SECTION LOCAL  DEFAULT +9 
 +10: [0-9a-z]+ +0 SECTION LOCAL  DEFAULT +10 
 +11: [0-9a-z]+ +0 SECTION LOCAL  DEFAULT +11 
 +12: [0-9a-z]+ +0 SECTION LOCAL  DEFAULT +12 
 +13: [0-9a-z]+ +0 SECTION LOCAL  DEFAULT +13 
 +14: [0-9a-z]+ +0 SECTION LOCAL  DEFAULT +14 
 +15: 0+1c +0 TLS +GLOBAL DEFAULT +9 sg8
 +16: [0-9a-z]+ +0 OBJECT  GLOBAL DEFAULT  ABS _DYNAMIC
 +17: 0+8 +0 TLS +GLOBAL DEFAULT +9 sg3
 +18: 0+c +0 TLS +GLOBAL DEFAULT +9 sg4
 +19: 0+10 +0 TLS +GLOBAL DEFAULT +9 sg5
 +20: 0+ +0 NOTYPE  GLOBAL DEFAULT  UND __tls_get_offset
 +21: 0+ +0 TLS +GLOBAL DEFAULT +9 sg1
 +22: [0-9a-z]+ +0 FUNC +GLOBAL DEFAULT +7 fn1
 +23: [0-9a-z]+ +0 NOTYPE  GLOBAL DEFAULT  ABS __bss_start
 +24: 0+4 +0 TLS +GLOBAL DEFAULT +9 sg2
 +25: 0+14 +0 TLS +GLOBAL DEFAULT +9 sg6
 +26: 0+18 +0 TLS +GLOBAL DEFAULT +9 sg7
 +27: [0-9a-z]+ +0 NOTYPE  GLOBAL DEFAULT  ABS _edata
 +28: [0-9a-z]+ +0 OBJECT  GLOBAL DEFAULT  ABS _GLOBAL_OFFSET_TABLE_
 +29: 0+1c40 +0 NOTYPE  GLOBAL DEFAULT  ABS _end
d97 1
a97 1
Symbol table '.symtab' contains 57 entries:
d99 56
a154 57
 +0: 0+ +0 NOTYPE  LOCAL  DEFAULT  UND 
 +1: [0-9a-z]+ +0 SECTION LOCAL  DEFAULT +1 
 +2: [0-9a-z]+ +0 SECTION LOCAL  DEFAULT +2 
 +3: [0-9a-z]+ +0 SECTION LOCAL  DEFAULT +3 
 +4: [0-9a-z]+ +0 SECTION LOCAL  DEFAULT +4 
 +5: [0-9a-z]+ +0 SECTION LOCAL  DEFAULT +5 
 +6: [0-9a-z]+ +0 SECTION LOCAL  DEFAULT +6 
 +7: [0-9a-z]+ +0 SECTION LOCAL  DEFAULT +7 
 +8: [0-9a-z]+ +0 SECTION LOCAL  DEFAULT +8 
 +9: [0-9a-z]+ +0 SECTION LOCAL  DEFAULT +9 
 +10: [0-9a-z]+ +0 SECTION LOCAL  DEFAULT +10 
 +11: [0-9a-z]+ +0 SECTION LOCAL  DEFAULT +11 
 +12: [0-9a-z]+ +0 SECTION LOCAL  DEFAULT +12 
 +13: [0-9a-z]+ +0 SECTION LOCAL  DEFAULT +13 
 +14: [0-9a-z]+ +0 SECTION LOCAL  DEFAULT +14 
 +15: [0-9a-z]+ +0 SECTION LOCAL  DEFAULT +15 
 +16: [0-9a-z]+ +0 SECTION LOCAL  DEFAULT +16 
 +17: [0-9a-z]+ +0 SECTION LOCAL  DEFAULT +17 
 +18: 0+20 +0 TLS +LOCAL  DEFAULT +9 sl1
 +19: 0+24 +0 TLS +LOCAL  DEFAULT +9 sl2
 +20: 0+28 +0 TLS +LOCAL  DEFAULT +9 sl3
 +21: 0+2c +0 TLS +LOCAL  DEFAULT +9 sl4
 +22: 0+30 +0 TLS +LOCAL  DEFAULT +9 sl5
 +23: 0+34 +0 TLS +LOCAL  DEFAULT +9 sl6
 +24: 0+38 +0 TLS +LOCAL  DEFAULT +9 sl7
 +25: 0+3c +0 TLS +LOCAL  DEFAULT +9 sl8
 +26: 0+60 +0 TLS +LOCAL  HIDDEN +10 sH1
 +27: 0+48 +0 TLS +LOCAL  HIDDEN +9 sh3
 +28: 0+64 +0 TLS +LOCAL  HIDDEN +10 sH2
 +29: 0+78 +0 TLS +LOCAL  HIDDEN +10 sH7
 +30: 0+58 +0 TLS +LOCAL  HIDDEN +9 sh7
 +31: 0+5c +0 TLS +LOCAL  HIDDEN +9 sh8
 +32: 0+6c +0 TLS +LOCAL  HIDDEN +10 sH4
 +33: 0+4c +0 TLS +LOCAL  HIDDEN +9 sh4
 +34: 0+68 +0 TLS +LOCAL  HIDDEN +10 sH3
 +35: 0+50 +0 TLS +LOCAL  HIDDEN +9 sh5
 +36: 0+70 +0 TLS +LOCAL  HIDDEN +10 sH5
 +37: 0+74 +0 TLS +LOCAL  HIDDEN +10 sH6
 +38: 0+7c +0 TLS +LOCAL  HIDDEN +10 sH8
 +39: 0+40 +0 TLS +LOCAL  HIDDEN +9 sh1
 +40: 0+44 +0 TLS +LOCAL  HIDDEN +9 sh2
 +41: 0+54 +0 TLS +LOCAL  HIDDEN +9 sh6
 +42: 0+1c +0 TLS +GLOBAL DEFAULT +9 sg8
 +43: [0-9a-z]+ +0 OBJECT  GLOBAL DEFAULT  ABS _DYNAMIC
 +44: 0+8 +0 TLS +GLOBAL DEFAULT +9 sg3
 +45: 0+c +0 TLS +GLOBAL DEFAULT +9 sg4
 +46: 0+10 +0 TLS +GLOBAL DEFAULT +9 sg5
 +47: 0+ +0 NOTYPE  GLOBAL DEFAULT  UND __tls_get_offset
 +48: 0+ +0 TLS +GLOBAL DEFAULT +9 sg1
 +49: [0-9a-z]+ +0 FUNC +GLOBAL DEFAULT +7 fn1
 +50: [0-9a-z]+ +0 NOTYPE  GLOBAL DEFAULT  ABS __bss_start
 +51: 0+4 +0 TLS +GLOBAL DEFAULT +9 sg2
 +52: 0+14 +0 TLS +GLOBAL DEFAULT +9 sg6
 +53: 0+18 +0 TLS +GLOBAL DEFAULT +9 sg7
 +54: [0-9a-z]+ +0 NOTYPE  GLOBAL DEFAULT  ABS _edata
 +55: [0-9a-z]+ +0 OBJECT  GLOBAL DEFAULT  ABS _GLOBAL_OFFSET_TABLE_
 +56: [0-9a-z]+ +0 NOTYPE  GLOBAL DEFAULT  ABS _end
@

