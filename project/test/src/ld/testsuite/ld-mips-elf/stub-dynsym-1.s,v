head	1.1;
access;
symbols
	binutils-2_24-branch:1.1.0.26
	binutils-2_24-branchpoint:1.1
	binutils-2_21_1:1.1
	binutils-2_23_2:1.1
	binutils-2_23_1:1.1
	binutils-2_23:1.1
	binutils-2_23-branch:1.1.0.24
	binutils-2_23-branchpoint:1.1
	binutils-2_22_branch:1.1.0.22
	binutils-2_22:1.1
	binutils-2_22-branch:1.1.0.20
	binutils-2_22-branchpoint:1.1
	binutils-2_21:1.1
	binutils-2_21-branch:1.1.0.18
	binutils-2_21-branchpoint:1.1
	binutils-2_20_1:1.1
	binutils-2_20:1.1
	binutils-arc-20081103-branch:1.1.0.16
	binutils-arc-20081103-branchpoint:1.1
	binutils-2_20-branch:1.1.0.14
	binutils-2_20-branchpoint:1.1
	dje-cgen-play1-branch:1.1.0.12
	dje-cgen-play1-branchpoint:1.1
	arc-20081103-branch:1.1.0.10
	arc-20081103-branchpoint:1.1
	binutils-2_19_1:1.1
	binutils-2_19:1.1
	binutils-2_19-branch:1.1.0.8
	binutils-2_19-branchpoint:1.1
	binutils-2_18:1.1
	binutils-2_18-branch:1.1.0.6
	binutils-2_18-branchpoint:1.1
	binutils-csl-coldfire-4_1-32:1.1.4.1
	binutils-csl-sourcerygxx-4_1-32:1.1.4.1
	binutils-csl-innovasic-fido-3_4_4-33:1.1.4.1
	binutils-csl-coldfire-4_1-30:1.1.4.1
	binutils-csl-sourcerygxx-4_1-30:1.1.4.1
	binutils-csl-coldfire-4_1-28:1.1.4.1
	binutils-csl-sourcerygxx-4_1-29:1.1.4.1
	binutils-csl-sourcerygxx-4_1-28:1.1.4.1
	binutils-csl-arm-2006q3-27:1.1.4.1
	binutils-csl-sourcerygxx-4_1-27:1.1.4.1
	binutils-csl-arm-2006q3-26:1.1.4.1
	binutils-csl-sourcerygxx-4_1-26:1.1.4.1
	binutils-csl-sourcerygxx-4_1-25:1.1.4.1
	binutils-csl-sourcerygxx-4_1-24:1.1.4.1
	binutils-csl-sourcerygxx-4_1-23:1.1.4.1
	binutils-csl-sourcerygxx-4_1-21:1.1.4.1
	binutils-csl-arm-2006q3-21:1.1.4.1
	binutils-csl-sourcerygxx-4_1-22:1.1.4.1
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.1.4.1
	binutils-csl-sourcerygxx-4_1-20:1.1.4.1
	binutils-csl-arm-2006q3-19:1.1.4.1
	binutils-csl-sourcerygxx-4_1-19:1.1.4.1
	binutils-csl-sourcerygxx-4_1-18:1.1.4.1
	binutils-csl-renesas-4_1-9:1.1.4.1
	binutils-csl-2_17-branch:1.1.0.4
	binutils-2_17:1.1.2.1
	binutils_latest_snapshot:1.1
	binutils-2_17-branch:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2006.06.11.08.33.27;	author rsandifo;	state Exp;
branches
	1.1.2.1
	1.1.4.1;
next	;

1.1.2.1
date	2006.06.11.08.38.29;	author rsandifo;	state Exp;
branches;
next	;

1.1.4.1
date	2006.08.22.15.08.44;	author jsm28;	state Exp;
branches;
next	;


desc
@@


1.1
log
@bfd/
	* elfxx-mips.c (mips_elf_link_hash_table): Add function_stub_size.
	(STUB_ORI): New macro.
	(STUB_LI16U): Fix formatting.
	(MIPS_FUNCTION_STUB_SIZE): Delete.
	(MIPS_FUNCTION_STUB_MAX_SIZE): Likewise.
	(MIPS_FUNCTION_STUB_NORMAL_SIZE): New macro.
	(MIPS_FUNCTION_STUB_BIG_SIZE): Likewise.
	(_bfd_mips_elf_adjust_dynamic_symbol): Use htab->function_stub_size
	instead of MIPS_FUNCTION_STUB_SIZE.
	(count_section_dynsyms): New function, split out from
	_bfd_mips_elf_final_link.
	(_bfd_mips_elf_always_size_sections): Get a worst-case estimate
	of the number of dynamic symbols needed and use it to set up
	function_stub_size.  Use function_stub_size rather than
	MIPS_FUNCTION_STUB_SIZE to determine the size of the stub section.
	Use 16-byte stubs for 0x10000 dynamic symbols.
	(_bfd_mips_elf_size_dynamic_sections): Use htab->function_stub_size
	instead of MIPS_FUNCTION_STUB_SIZE.  Fix formatting.
	(_bfd_mips_elf_finish_dynamic_symbol): Likewise.  Change the
	size of the stub buffer from MIPS_FUNCTION_STUB_MAX_SIZE to
	MIPS_FUNCTION_STUB_BIG_SIZE.  Tweak the check for unhandled dynindxes.
	Use MIPS_FUNCTION_STUB_BIG_SIZE rather than a hard-coded 20.
	Use STUB_ORI rather than STUB_LI16U for big stubs.
	(_bfd_mips_elf_link_hash_table_create): Initialize function_stub_size.
	(_bfd_mips_elf_final_link): Use count_section_dynsyms.

ld/testsuite/
	* ld-mips-elf/stub-dynsym-1.s,
	* ld-mips-elf/stub-dynsym-1.ld,
	* ld-mips-elf/stub-dynsym-1-7fff.d,
	* ld-mips-elf/stub-dynsym-1-8000.d,
	* ld-mips-elf/stub-dynsym-1-fff0.d,
	* ld-mips-elf/stub-dynsym-1-10000.d,
	* ld-mips-elf/stub-dynsym-1-2fe80.d: New test.
	* ld-mips-elf/mips-elf.exp: Run it.
@
text
@	.macro	decl
	.global	exported\@@
	.equ	exported\@@,\@@
	.endm

	.rept	dynsym - base_syms
	decl
	.endr

	lw	$25,%call16(foo)($gp)
@


1.1.4.1
log
@Merge changes between binutils-csl-2_17-branchpoint and
binutils-2_17, except for the addition of generated files to CVS.
@
text
@@


1.1.2.1
log
@bfd/
	* elfxx-mips.c (mips_elf_link_hash_table): Add function_stub_size.
	(STUB_ORI): New macro.
	(STUB_LI16U): Fix formatting.
	(MIPS_FUNCTION_STUB_SIZE): Delete.
	(MIPS_FUNCTION_STUB_MAX_SIZE): Likewise.
	(MIPS_FUNCTION_STUB_NORMAL_SIZE): New macro.
	(MIPS_FUNCTION_STUB_BIG_SIZE): Likewise.
	(_bfd_mips_elf_adjust_dynamic_symbol): Use htab->function_stub_size
	instead of MIPS_FUNCTION_STUB_SIZE.
	(count_section_dynsyms): New function, split out from
	_bfd_mips_elf_final_link.
	(_bfd_mips_elf_always_size_sections): Get a worst-case estimate
	of the number of dynamic symbols needed and use it to set up
	function_stub_size.  Use function_stub_size rather than
	MIPS_FUNCTION_STUB_SIZE to determine the size of the stub section.
	Use 16-byte stubs for 0x10000 dynamic symbols.
	(_bfd_mips_elf_size_dynamic_sections): Use htab->function_stub_size
	instead of MIPS_FUNCTION_STUB_SIZE.  Fix formatting.
	(_bfd_mips_elf_finish_dynamic_symbol): Likewise.  Change the
	size of the stub buffer from MIPS_FUNCTION_STUB_MAX_SIZE to
	MIPS_FUNCTION_STUB_BIG_SIZE.  Tweak the check for unhandled dynindxes.
	Use MIPS_FUNCTION_STUB_BIG_SIZE rather than a hard-coded 20.
	Use STUB_ORI rather than STUB_LI16U for big stubs.
	(_bfd_mips_elf_link_hash_table_create): Initialize function_stub_size.
	(_bfd_mips_elf_final_link): Use count_section_dynsyms.

ld/testsuite/
	* ld-mips-elf/stub-dynsym-1.s,
	* ld-mips-elf/stub-dynsym-1.ld,
	* ld-mips-elf/stub-dynsym-1-7fff.d,
	* ld-mips-elf/stub-dynsym-1-8000.d,
	* ld-mips-elf/stub-dynsym-1-fff0.d,
	* ld-mips-elf/stub-dynsym-1-10000.d,
	* ld-mips-elf/stub-dynsym-1-2fe80.d: New test.
	* ld-mips-elf/mips-elf.exp: Run it.
@
text
@@

