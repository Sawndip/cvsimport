head	1.2;
access;
symbols
	binutils-2_24-branch:1.2.0.32
	binutils-2_24-branchpoint:1.2
	binutils-2_21_1:1.2
	binutils-2_23_2:1.2
	binutils-2_23_1:1.2
	binutils-2_23:1.2
	binutils-2_23-branch:1.2.0.30
	binutils-2_23-branchpoint:1.2
	binutils-2_22_branch:1.2.0.28
	binutils-2_22:1.2
	binutils-2_22-branch:1.2.0.26
	binutils-2_22-branchpoint:1.2
	binutils-2_21:1.2
	binutils-2_21-branch:1.2.0.24
	binutils-2_21-branchpoint:1.2
	binutils-2_20_1:1.2
	binutils-2_20:1.2
	binutils-arc-20081103-branch:1.2.0.22
	binutils-arc-20081103-branchpoint:1.2
	binutils-2_20-branch:1.2.0.20
	binutils-2_20-branchpoint:1.2
	dje-cgen-play1-branch:1.2.0.18
	dje-cgen-play1-branchpoint:1.2
	arc-20081103-branch:1.2.0.16
	arc-20081103-branchpoint:1.2
	binutils-2_19_1:1.2
	binutils-2_19:1.2
	binutils-2_19-branch:1.2.0.14
	binutils-2_19-branchpoint:1.2
	binutils-2_18:1.2
	binutils-2_18-branch:1.2.0.12
	binutils-2_18-branchpoint:1.2
	binutils-csl-coldfire-4_1-32:1.2
	binutils-csl-sourcerygxx-4_1-32:1.2
	binutils-csl-innovasic-fido-3_4_4-33:1.2
	binutils-csl-sourcerygxx-3_4_4-32:1.2
	binutils-csl-coldfire-4_1-30:1.2
	binutils-csl-sourcerygxx-4_1-30:1.2
	binutils-csl-coldfire-4_1-28:1.2
	binutils-csl-sourcerygxx-4_1-29:1.2
	binutils-csl-sourcerygxx-4_1-28:1.2
	binutils-csl-arm-2006q3-27:1.2
	binutils-csl-sourcerygxx-4_1-27:1.2
	binutils-csl-arm-2006q3-26:1.2
	binutils-csl-sourcerygxx-4_1-26:1.2
	binutils-csl-sourcerygxx-4_1-25:1.2
	binutils-csl-sourcerygxx-4_1-24:1.2
	binutils-csl-sourcerygxx-4_1-23:1.2
	binutils-csl-sourcerygxx-4_1-21:1.2
	binutils-csl-arm-2006q3-21:1.2
	binutils-csl-sourcerygxx-4_1-22:1.2
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.2
	binutils-csl-sourcerygxx-4_1-20:1.2
	binutils-csl-arm-2006q3-19:1.2
	binutils-csl-sourcerygxx-4_1-19:1.2
	binutils-csl-sourcerygxx-4_1-18:1.2
	binutils-csl-renesas-4_1-9:1.2
	binutils-csl-sourcerygxx-3_4_4-25:1.2
	binutils-csl-renesas-4_1-8:1.2
	binutils-csl-renesas-4_1-7:1.2
	binutils-csl-renesas-4_1-6:1.2
	binutils-csl-sourcerygxx-4_1-17:1.2
	binutils-csl-sourcerygxx-4_1-14:1.2
	binutils-csl-sourcerygxx-4_1-15:1.2
	binutils-csl-sourcerygxx-4_1-13:1.2
	binutils-2_17:1.2
	binutils-csl-sourcerygxx-4_1-12:1.2
	binutils-csl-sourcerygxx-3_4_4-21:1.2
	binutils-csl-wrs-linux-3_4_4-24:1.2
	binutils-csl-wrs-linux-3_4_4-23:1.2
	binutils-csl-sourcerygxx-4_1-9:1.2
	binutils-csl-sourcerygxx-4_1-8:1.2
	binutils-csl-sourcerygxx-4_1-7:1.2
	binutils-csl-arm-2006q1-6:1.2
	binutils-csl-sourcerygxx-4_1-6:1.2
	binutils-csl-wrs-linux-3_4_4-22:1.2
	binutils-csl-coldfire-4_1-11:1.2
	binutils-csl-sourcerygxx-3_4_4-19:1.2
	binutils-csl-coldfire-4_1-10:1.2
	binutils-csl-sourcerygxx-4_1-5:1.2
	binutils-csl-sourcerygxx-4_1-4:1.2
	binutils-csl-wrs-linux-3_4_4-21:1.2
	binutils-csl-morpho-4_1-4:1.2
	binutils-csl-sourcerygxx-3_4_4-17:1.2
	binutils-csl-wrs-linux-3_4_4-20:1.2
	binutils-2_17-branch:1.2.0.10
	binutils-2_17-branchpoint:1.2
	binutils-csl-2_17-branch:1.2.0.8
	binutils-csl-2_17-branchpoint:1.2
	binutils-csl-gxxpro-3_4-branch:1.2.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.2
	binutils-2_16_1:1.2
	binutils-csl-arm-2005q1b:1.2
	binutils-2_16:1.2
	binutils-csl-arm-2005q1a:1.2
	binutils-csl-arm-2005q1-branch:1.2.0.4
	binutils-csl-arm-2005q1-branchpoint:1.2
	binutils-2_16-branch:1.2.0.2
	binutils-2_16-branchpoint:1.2
	binutils_latest_snapshot:1.2;
locks; strict;
comment	@# @;


1.2
date	2005.01.31.20.39.11;	author rsandifo;	state Exp;
branches;
next	1.1;

1.1
date	2004.11.16.10.16.30;	author rsandifo;	state Exp;
branches;
next	;


desc
@@


1.2
log
@	* elf-bfd.h (elf_backend_data): Add elf_backend_eh_frame_address_size.
	(_bfd_elf_eh_frame_address_size): Declare.
	* elfxx-target.h (elf_backend_eh_frame_address_size): Define a default.
	(elfNN_bed): Initialize elf_backend_eh_frame_address_size.
	* elfxx-mips.h (_bfd_mips_elf_eh_frame_address_size): Declare.
	(elf_backend_eh_frame_address_size): Define.
	* elfxx-mips.c (_bfd_mips_elf_eh_frame_address_size): New function.
	* elf-eh-frame.c (_bfd_elf_discard_section_eh_frame): Get the address
	size from the new backend hook.
	(_bfd_elf_write_section_eh_frame): Likewise.
	(_bfd_elf_eh_frame_address_size): New function.
@
text
@#----------------------------------------------------------------------------
# Macros
#----------------------------------------------------------------------------

	mask = (1 << alignment) - 1

	# Output VALUE as an unaligned pointer-sized quantity.
	.macro pbyte value
	.if alignment == 2
	.4byte		\value
	.else
	.8byte		\value
	.endif
	.endm


	# Start a new CIE, and emit everything up to the augmentation data.
	# Use LABEL to mark the start of the entry and AUG as the augmentation
	# string.
	.macro start_cie label,aug
	.section	.eh_frame,"aw",@@progbits
\label:
	.word		2f-1f		# Length
1:
	.word		0		# Identifier
	.byte		1		# Version
	.string		"\aug"		# Augmentation
	.byte		1		# Code alignment
	.byte		4		# Data alignment
	.byte		31		# Return address column
	.endm


	# Create a dummy function of SIZE bytes in SECTION and emit the
	# first four entries of an FDE for it.
	.macro start_fde cie,section,size
	.section	\section,"ax",@@progbits
3:
	.rept		\size / 4
	nop
	.endr
4:
	.section	.eh_frame,"aw",@@progbits
	.word		2f-1f		# Length
1:
	.word		.-\cie		# CIE offset
	pbyte		3b		# Initial PC
	pbyte		4b-3b		# Size of code
	.endm


	# Finish a CIE or FDE entry.
	.macro end_entry
	.p2align	alignment,fill
2:
	.endm


	# Start the augmentation data for a CIE that has a 'P' entry
	# followed by EXTRA bytes.  AUGLEN is the length of augmentation
	# string (including zero terminator), ENCODING is the encoding to
	# use for the personality routine and VALUE is the value it
	# should have.
	.macro		persaug auglen,extra,encoding,value
	.if (\encoding & 0xf0) == 0x50
	.byte		(-(9 + \auglen + 3 + 2) & mask) + 2 + mask + \extra
	.byte		\encoding
	.fill		-(9 + \auglen + 3 + 2) & mask,1,0
	.else
	.byte		2 + mask + \extra
	.byte		\encoding
	.endif
	pbyte		\value
	.endm


	.macro cie_basic label
	start_cie	\label,""
	end_entry
	.endm

	.macro fde_basic cie,section,size
	start_fde	\cie,\section,\size
	end_entry
	.endm


	.macro cie_zP label,encoding,value
	start_cie	 \label,"zP"
	persaug		3,0,\encoding,\value
	end_entry
	.endm

	.macro fde_zP cie,section,size
	start_fde	 \cie,\section,\size
	.byte		 0		# Augmentation length
	end_entry
	.endm


	.macro cie_zPR label,encoding,value
	start_cie	 \label,"zPR"
	persaug		4,1,\encoding,\value
	.byte		0		# FDE enconding
	end_entry
	.endm

	.macro fde_zPR cie,section,size
	start_fde	\cie,\section,\size
	.byte		0		# Augmentation length
	end_entry
	.endm

#----------------------------------------------------------------------------
# Test code
#----------------------------------------------------------------------------

	cie_basic	basic1
	fde_basic	basic1,.text,0x10
	fde_basic	basic1,.text,0x20

	cie_basic	basic2
	fde_basic	basic2,.text,0x30

	cie_basic	basic3
	fde_basic	basic3,.text,0x40

	cie_basic	basic4
	fde_basic	basic4,.text,0x50

	cie_zP		zP_unalign1,0x00,foo
	fde_zP		zP_unalign1,.text,0x10
	fde_zP		zP_unalign1,.text,0x20

	cie_zP		zP_align1,0x50,foo
	fde_zP		zP_align1,.text,0x10
	fde_zP		zP_align1,.text,0x20

	cie_zPR		zPR1,0x00,foo
	fde_zPR		zPR1,.text,0x10
	fde_zPR		zPR1,.discard,0x20

	cie_zPR		zPR2,0x00,foo
	fde_zPR		zPR2,.text,0x30
	fde_zPR		zPR2,.text,0x40

	cie_basic	basic5
	fde_basic	basic5,.text,0x10

	.if alignment == 2
	.section	.gcc_compiled_long32
	.endif
@


1.1
log
@	* elf-bfd.h (eh_cie_fde): Add new fields: add_augmentation_size and
	add_fde_encoding.  Remove need_relative.
	* elf-eh-frame.c (extra_augmentation_string_bytes)
	(extra_augmentation_data_bytes, size_of_output_cie_fde): New functions.
	(_bfd_elf_discard_section_eh_frame): Consider changing the FDE encoding
	in cases where the CIE has no existing 'R' augmentation.  Use
	size_of_output_cie_fde when assigning offsets.  Use the final offset
	as the new section size.
	(_bfd_elf_eh_frame_section_offset): Remove need_relative handling.
	Account for any extra augmentation bytes in the returned offset.
	(_bfd_elf_write_section_eh_frame): Rework so that the entries are
	moved before being modified.  Pad growing entries with DW_CFA_nops.
	Add 'z' and 'R' augmentations as directed by add_augmentation_size
	and add_fde_encoding.
@
text
@d149 4
@

