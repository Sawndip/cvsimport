head	1.4;
access;
symbols
	binutils-2_24-branch:1.4.0.2
	binutils-2_24-branchpoint:1.4
	binutils-2_21_1:1.2
	binutils-2_23_2:1.2.12.1
	binutils-2_23_1:1.2.12.1
	binutils-2_23:1.2.12.1
	binutils-2_23-branch:1.2.0.12
	binutils-2_23-branchpoint:1.2
	binutils-2_22_branch:1.2.0.10
	binutils-2_22:1.2
	binutils-2_22-branch:1.2.0.8
	binutils-2_22-branchpoint:1.2
	binutils-2_21:1.2
	binutils-2_21-branch:1.2.0.6
	binutils-2_21-branchpoint:1.2
	binutils-2_20_1:1.2
	binutils-2_20:1.2
	binutils-arc-20081103-branch:1.1.0.24
	binutils-arc-20081103-branchpoint:1.1
	binutils-2_20-branch:1.2.0.4
	binutils-2_20-branchpoint:1.2
	dje-cgen-play1-branch:1.2.0.2
	dje-cgen-play1-branchpoint:1.2
	arc-20081103-branch:1.1.0.22
	arc-20081103-branchpoint:1.1
	binutils-2_19_1:1.1
	binutils-2_19:1.1
	binutils-2_19-branch:1.1.0.20
	binutils-2_19-branchpoint:1.1
	binutils-2_18:1.1
	binutils-2_18-branch:1.1.0.18
	binutils-2_18-branchpoint:1.1
	binutils-csl-coldfire-4_1-32:1.1
	binutils-csl-sourcerygxx-4_1-32:1.1
	binutils-csl-innovasic-fido-3_4_4-33:1.1
	binutils-csl-sourcerygxx-3_4_4-32:1.1
	binutils-csl-coldfire-4_1-30:1.1
	binutils-csl-sourcerygxx-4_1-30:1.1
	binutils-csl-coldfire-4_1-28:1.1
	binutils-csl-sourcerygxx-4_1-29:1.1
	binutils-csl-sourcerygxx-4_1-28:1.1
	binutils-csl-arm-2006q3-27:1.1
	binutils-csl-sourcerygxx-4_1-27:1.1
	binutils-csl-arm-2006q3-26:1.1
	binutils-csl-sourcerygxx-4_1-26:1.1
	binutils-csl-sourcerygxx-4_1-25:1.1
	binutils-csl-sourcerygxx-4_1-24:1.1
	binutils-csl-sourcerygxx-4_1-23:1.1
	binutils-csl-sourcerygxx-4_1-21:1.1
	binutils-csl-arm-2006q3-21:1.1
	binutils-csl-sourcerygxx-4_1-22:1.1
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.1
	binutils-csl-sourcerygxx-4_1-20:1.1
	binutils-csl-arm-2006q3-19:1.1
	binutils-csl-sourcerygxx-4_1-19:1.1
	binutils-csl-sourcerygxx-4_1-18:1.1
	binutils-csl-renesas-4_1-9:1.1
	binutils-csl-sourcerygxx-3_4_4-25:1.1
	binutils-csl-renesas-4_1-8:1.1
	binutils-csl-renesas-4_1-7:1.1
	binutils-csl-renesas-4_1-6:1.1
	binutils-csl-sourcerygxx-4_1-17:1.1
	binutils-csl-sourcerygxx-4_1-14:1.1
	binutils-csl-sourcerygxx-4_1-15:1.1
	binutils-csl-sourcerygxx-4_1-13:1.1
	binutils-2_17:1.1
	binutils-csl-sourcerygxx-4_1-12:1.1
	binutils-csl-sourcerygxx-3_4_4-21:1.1
	binutils-csl-wrs-linux-3_4_4-24:1.1
	binutils-csl-wrs-linux-3_4_4-23:1.1
	binutils-csl-sourcerygxx-4_1-9:1.1
	binutils-csl-sourcerygxx-4_1-8:1.1
	binutils-csl-sourcerygxx-4_1-7:1.1
	binutils-csl-arm-2006q1-6:1.1
	binutils-csl-sourcerygxx-4_1-6:1.1
	binutils-csl-wrs-linux-3_4_4-22:1.1
	binutils-csl-coldfire-4_1-11:1.1
	binutils-csl-sourcerygxx-3_4_4-19:1.1
	binutils-csl-coldfire-4_1-10:1.1
	binutils-csl-sourcerygxx-4_1-5:1.1
	binutils-csl-sourcerygxx-4_1-4:1.1
	binutils-csl-wrs-linux-3_4_4-21:1.1
	binutils-csl-morpho-4_1-4:1.1
	binutils-csl-sourcerygxx-3_4_4-17:1.1
	binutils-csl-wrs-linux-3_4_4-20:1.1
	binutils-2_17-branch:1.1.0.16
	binutils-2_17-branchpoint:1.1
	binutils-csl-2_17-branch:1.1.0.14
	binutils-csl-2_17-branchpoint:1.1
	binutils-csl-gxxpro-3_4-branch:1.1.0.12
	binutils-csl-gxxpro-3_4-branchpoint:1.1
	binutils-2_16_1:1.1
	binutils-csl-arm-2005q1b:1.1
	binutils-2_16:1.1
	binutils-csl-arm-2005q1a:1.1
	binutils-csl-arm-2005q1-branch:1.1.0.10
	binutils-csl-arm-2005q1-branchpoint:1.1
	binutils-2_16-branch:1.1.0.8
	binutils-2_16-branchpoint:1.1
	csl-arm-2004-q3d:1.1
	csl-arm-2004-q3:1.1
	binutils-2_15:1.1
	binutils-2_15-branchpoint:1.1
	csl-arm-2004-q1a:1.1
	csl-arm-2004-q1:1.1
	binutils-2_15-branch:1.1.0.6
	cagney_bfdfile-20040213-branch:1.1.0.4
	cagney_bfdfile-20040213-branchpoint:1.1
	cagney_bigcore-20040122-branch:1.1.0.2
	cagney_bigcore-20040122-branchpoint:1.1
	csl-arm-2003-q4:1.1
	binutils_latest_snapshot:1.4;
locks; strict;
comment	@# @;


1.4
date	2012.08.06.21.28.45;	author macro;	state Exp;
branches;
next	1.3;

1.3
date	2012.08.06.21.18.50;	author macro;	state Exp;
branches;
next	1.2;

1.2
date	2008.12.03.14.51.00;	author nickc;	state Exp;
branches
	1.2.12.1;
next	1.1;

1.1
date	2003.12.18.10.25.12;	author rsandifo;	state Exp;
branches;
next	;

1.2.12.1
date	2012.09.04.14.38.03;	author gingold;	state Exp;
branches;
next	;


desc
@@


1.4
log
@	gas/testsuite/
	* gas/mips/mips.exp: Set has_newabi for all Linux targets.
	* gas/mips/cfi-n64-1.d: Adjust for targets that do not infer the
	ISA from the ABI.
	* gas/mips/elf-rel-got-n32.d: Likewise.
	* gas/mips/elf-rel-got-n64.d: Likewise.
	* gas/mips/elf-rel-xgot-n32.d: Likewise.
	* gas/mips/elf-rel-xgot-n64.d: Likewise.
	* gas/mips/elf-rel18.d: Likewise.
	* gas/mips/elf-rel28-n32.d: Likewise.
	* gas/mips/elf-rel28-n64.d: Likewise.
	* gas/mips/jal-newabi.d: Likewise.
	* gas/mips/ldstla-n64-shared.d: Likewise.
	* gas/mips/ldstla-n64-sym32.d: Likewise.
	* gas/mips/ldstla-n64.d: Likewise.
	* gas/mips/macro-warn-1-n32.d: Likewise.
	* gas/mips/macro-warn-2-n32.d: Likewise.
	* gas/mips/n32-consec.d: Likewise.

	ld/testsuite/
	* ld-mips-elf/mips-elf.exp: Set has_newabi for all Linux targets.
	Adjust abi_asflags for targets that do not infer the ISA from the
	ABI.
	* ld-mips-elf/eh-frame1-n32.d: Adjust for targets that do not
	infer the ISA from the ABI.
	* ld-mips-elf/eh-frame1-n64.d: Likewise.
	* ld-mips-elf/eh-frame2-n32.d: Likewise.
	* ld-mips-elf/eh-frame2-n64.d: Likewise.
	* ld-mips-elf/elf-rel-got-n32-embed.d: Likewise.
	* ld-mips-elf/elf-rel-got-n32.d: Likewise.
	* ld-mips-elf/elf-rel-got-n64-embed.d: Likewise.
	* ld-mips-elf/elf-rel-got-n64-linux.d: Likewise.
	* ld-mips-elf/elf-rel-got-n64.d: Likewise.
	* ld-mips-elf/elf-rel-xgot-n32-embed.d: Likewise.
	* ld-mips-elf/elf-rel-xgot-n32.d: Likewise.
	* ld-mips-elf/elf-rel-xgot-n64-embed.d: Likewise.
	* ld-mips-elf/elf-rel-xgot-n64-linux.d: Likewise.
	* ld-mips-elf/elf-rel-xgot-n64.d: Likewise.
	* ld-mips-elf/emit-relocs-1.d: Likewise.
	* ld-mips-elf/got-page-2.d: Likewise.
	* ld-mips-elf/no-shared-1-n32.d: Likewise.
	* ld-mips-elf/no-shared-1-n64.d: Likewise.
	* ld-mips-elf/rel32-n32.d: Likewise.
	* ld-mips-elf/rel64.d: Likewise.
	* ld-mips-elf/relax-jalr-n32-shared.d: Likewise.
	* ld-mips-elf/relax-jalr-n32.d: Likewise.
	* ld-mips-elf/relax-jalr-n64-shared.d: Likewise.
	* ld-mips-elf/relax-jalr-n64.d: Likewise.
	* ld-mips-elf/reloc-1-n32.d: Likewise.
	* ld-mips-elf/reloc-1-n64.d: Likewise.
	* ld-mips-elf/textrel-1.d: Likewise.
@
text
@#source: reloc-1a.s -march=from-abi -mabi=n32 -EB
#source: reloc-1b.s -march=from-abi -mabi=n32 -EB
#ld: -r
#readelf: --relocs

Relocation section '\.rela\.text' .*
.*
#
# Relocations against tstarta
#
.* R_MIPS_HI16 .* \.text \- 8010
.* R_MIPS_LO16 .* \.text \- 8010
.* R_MIPS_HI16 .* \.text \- 8000
.* R_MIPS_LO16 .* \.text \- 8000
.* R_MIPS_HI16 .* \.text \+ 0
.* R_MIPS_LO16 .* \.text \+ 0
.* R_MIPS_HI16 .* \.text \+ 7ff0
.* R_MIPS_LO16 .* \.text \+ 7ff0
.* R_MIPS_HI16 .* \.text \+ 8010
.* R_MIPS_LO16 .* \.text \+ 8010
#
# Relocations against t32a
#
.* R_MIPS_HI16 .* \.text \- 7ff0
.* R_MIPS_LO16 .* \.text \- 7ff0
.* R_MIPS_HI16 .* \.text \- 7fe0
.* R_MIPS_LO16 .* \.text \- 7fe0
.* R_MIPS_HI16 .* \.text \+ 20
.* R_MIPS_LO16 .* \.text \+ 20
.* R_MIPS_HI16 .* \.text \+ 8010
.* R_MIPS_LO16 .* \.text \+ 8010
.* R_MIPS_HI16 .* \.text \+ 8030
.* R_MIPS_LO16 .* \.text \+ 8030
#
# Relocations against _start
#
.* R_MIPS_HI16 .* _start \- 8010
.* R_MIPS_LO16 .* _start \- 8010
.* R_MIPS_HI16 .* _start \- 8000
.* R_MIPS_LO16 .* _start \- 8000
.* R_MIPS_HI16 .* _start \+ 0
.* R_MIPS_LO16 .* _start \+ 0
.* R_MIPS_HI16 .* _start \+ 7ff0
.* R_MIPS_LO16 .* _start \+ 7ff0
.* R_MIPS_HI16 .* _start \+ 8010
.* R_MIPS_LO16 .* _start \+ 8010
#
# Relocations against tstarta
#
.* R_MIPS_GOT16 .* \.text \- 8010
.* R_MIPS_LO16 .* \.text \- 8010
.* R_MIPS_GOT16 .* \.text \- 8000
.* R_MIPS_LO16 .* \.text \- 8000
.* R_MIPS_GOT16 .* \.text \+ 0
.* R_MIPS_LO16 .* \.text \+ 0
.* R_MIPS_GOT16 .* \.text \+ 7ff0
.* R_MIPS_LO16 .* \.text \+ 7ff0
.* R_MIPS_GOT16 .* \.text \+ 8010
.* R_MIPS_LO16 .* \.text \+ 8010
#
# Relocations against t32a
#
.* R_MIPS_GOT16 .* \.text \- 7ff0
.* R_MIPS_LO16 .* \.text \- 7ff0
.* R_MIPS_GOT16 .* \.text \- 7fe0
.* R_MIPS_LO16 .* \.text \- 7fe0
.* R_MIPS_GOT16 .* \.text \+ 20
.* R_MIPS_LO16 .* \.text \+ 20
.* R_MIPS_GOT16 .* \.text \+ 8010
.* R_MIPS_LO16 .* \.text \+ 8010
.* R_MIPS_GOT16 .* \.text \+ 8030
.* R_MIPS_LO16 .* \.text \+ 8030
#
# Relocations against sdg
#
.* R_MIPS_GPREL16 .* sdg \- 4
.* R_MIPS_GPREL16 .* sdg \+ 0
.* R_MIPS_GPREL16 .* sdg \+ 4
#
# Relocations against sdla.  .sdata should be the first piece of gp-relative
# data, which the linker script should put _gp - 0x7ff0.
#
.* R_MIPS_GPREL16 .* \.sdata \- 7fe4
.* R_MIPS_GPREL16 .* \.sdata \- 7fe0
.* R_MIPS_GPREL16 .* \.sdata \- 7fdc
#
# Relocations against tstarta
#
.* R_MIPS_26 .* \.text \- 4
.* R_MIPS_26 .* \.text \+ 0
.* R_MIPS_26 .* \.text \+ 4
#
# Relocations against t32a
#
.* R_MIPS_26 .* \.text \+ 1c
.* R_MIPS_26 .* \.text \+ 20
.* R_MIPS_26 .* \.text \+ 24
#
# Relocations against _start
#
.* R_MIPS_26 .* _start \- 4
.* R_MIPS_26 .* _start \+ 0
.* R_MIPS_26 .* _start \+ 4
#
# Relocations against tstartb
#
.* R_MIPS_HI16 .* \.text \+ 7fe0
.* R_MIPS_LO16 .* \.text \+ 7fe0
.* R_MIPS_HI16 .* \.text \+ 7ff0
.* R_MIPS_LO16 .* \.text \+ 7ff0
.* R_MIPS_HI16 .* \.text \+ fff0
.* R_MIPS_LO16 .* \.text \+ fff0
.* R_MIPS_HI16 .* \.text \+ 17fe0
.* R_MIPS_LO16 .* \.text \+ 17fe0
.* R_MIPS_HI16 .* \.text \+ 18000
.* R_MIPS_LO16 .* \.text \+ 18000
#
# Relocations against t32b
#
.* R_MIPS_HI16 .* \.text \+ 8000
.* R_MIPS_LO16 .* \.text \+ 8000
.* R_MIPS_HI16 .* \.text \+ 8010
.* R_MIPS_LO16 .* \.text \+ 8010
.* R_MIPS_HI16 .* \.text \+ 10010
.* R_MIPS_LO16 .* \.text \+ 10010
.* R_MIPS_HI16 .* \.text \+ 18000
.* R_MIPS_LO16 .* \.text \+ 18000
.* R_MIPS_HI16 .* \.text \+ 18020
.* R_MIPS_LO16 .* \.text \+ 18020
#
# Relocations against _start
#
.* R_MIPS_HI16 .* _start \- 8010
.* R_MIPS_LO16 .* _start \- 8010
.* R_MIPS_HI16 .* _start \- 8000
.* R_MIPS_LO16 .* _start \- 8000
.* R_MIPS_HI16 .* _start \+ 0
.* R_MIPS_LO16 .* _start \+ 0
.* R_MIPS_HI16 .* _start \+ 7ff0
.* R_MIPS_LO16 .* _start \+ 7ff0
.* R_MIPS_HI16 .* _start \+ 8010
.* R_MIPS_LO16 .* _start \+ 8010
#
# Relocations against tstartb
#
.* R_MIPS_GOT16 .* \.text \+ 7fe0
.* R_MIPS_LO16 .* \.text \+ 7fe0
.* R_MIPS_GOT16 .* \.text \+ 7ff0
.* R_MIPS_LO16 .* \.text \+ 7ff0
.* R_MIPS_GOT16 .* \.text \+ fff0
.* R_MIPS_LO16 .* \.text \+ fff0
.* R_MIPS_GOT16 .* \.text \+ 17fe0
.* R_MIPS_LO16 .* \.text \+ 17fe0
.* R_MIPS_GOT16 .* \.text \+ 18000
.* R_MIPS_LO16 .* \.text \+ 18000
#
# Relocations against t32b
#
.* R_MIPS_GOT16 .* \.text \+ 8000
.* R_MIPS_LO16 .* \.text \+ 8000
.* R_MIPS_GOT16 .* \.text \+ 8010
.* R_MIPS_LO16 .* \.text \+ 8010
.* R_MIPS_GOT16 .* \.text \+ 10010
.* R_MIPS_LO16 .* \.text \+ 10010
.* R_MIPS_GOT16 .* \.text \+ 18000
.* R_MIPS_LO16 .* \.text \+ 18000
.* R_MIPS_GOT16 .* \.text \+ 18020
.* R_MIPS_LO16 .* \.text \+ 18020
#
# Relocations against sdg
#
.* R_MIPS_GPREL16 .* sdg \- 4
.* R_MIPS_GPREL16 .* sdg \+ 0
.* R_MIPS_GPREL16 .* sdg \+ 4
#
# Relocations against sdlb
#
.* R_MIPS_GPREL16 .* \.sdata \- 7fc4
.* R_MIPS_GPREL16 .* \.sdata \- 7fc0
.* R_MIPS_GPREL16 .* \.sdata \- 7fbc
#
# Relocations against tstartb
#
.* R_MIPS_26 .* \.text \+ ffec
.* R_MIPS_26 .* \.text \+ fff0
.* R_MIPS_26 .* \.text \+ fff4
#
# Relocations against t32b
#
.* R_MIPS_26 .* \.text \+ 1000c
.* R_MIPS_26 .* \.text \+ 10010
.* R_MIPS_26 .* \.text \+ 10014
#
# Relocations against _start
#
.* R_MIPS_26 .* _start \- 4
.* R_MIPS_26 .* _start \+ 0
.* R_MIPS_26 .* _start \+ 4
#pass
@


1.3
log
@	* ld-mips-elf/reloc-1-n32.d: Add -EB to GAS flags.
	* ld-mips-elf/mips-elf.exp: Update GAS flags in reloc test 6.
@
text
@d1 2
a2 2
#source: reloc-1a.s -mabi=n32 -EB
#source: reloc-1b.s -mabi=n32 -EB
@


1.2
log
@include/elf/
            * common.h (STT_IFUNC): Define.
elfcpp/
            * elfcpp.h (enum STT): Add STT_IFUNC.
bfd/
            * syms.c (struct bfd_symbol): Add new flag BSF_INDIRECT_FUNCTION.
            Remove redundant flag BFD_FORT_COMM_DEFAULT_VALUE.  Renumber flags
            to remove gaps.
            (bfd_print_symbol_vandf): Return 'i' for BSF_INDIRECT_FUNCTION.
            (bfd_decode_symclass): Likewise.
            * elf.c (swap_out_syms): Translate BSF_INDIRECT_FUNCTION into
            STT_IFUNC.
            (elf_find_function): Treat STT_IFUNC in the same way as STT_FUNC.
            (_bfd_elf_is_function_type): Likewise.
            * elf32-arm.c (arm_elf_find_function): Likewise.
            (elf32_arm_adjust_dynamic_symbol): Likewise.
            (elf32_arm_swap_symbol_in): Likewise.
            (elf32_arm_additional_program_headers): Likewise.
            * elf32-i386.c (is_indirect_symbol): New function.
            (elf_i386_check_relocs): Also generate dynamic relocs for
            relocations against STT_IFUNC symbols.
            (allocate_dynrelocs): Likewise.
            (elf_i386_relocate_section): Likewise.
            * elf64-x86-64.c (is_indirect_symbol): New function.
            (elf64_x86_64_check_relocs): Also generate dynamic relocs for
            relocations against STT_IFUNC symbols.
            (allocate_dynrelocs): Likewise.
            (elf64_x86_64_relocate_section): Likewise.
            * elfcode.h (elf_slurp_symbol_table): Translate STT_IFUNC into
            BSF_INDIRECT_FUNCTION.
            * elflink.c (_bfd_elf_adjust_dynamic_reloc_section): Add support
            for STT_IFUNC symbols.
            (get_ifunc_reloc_section_name): New function.
            (_bfd_elf_make_ifunc_reloc_section): New function.
            * elf-bfd.h (struct bfd_elf_section_data): Add indirect_relocs field.
            * bfd-in2.h: Regenerate.
gas/
            * config/obj-elf.c (obj_elf_type): Add support for STT_IFUNC type.
            * doc/as.texinfo: Document new feature.
            * NEWS: Mention new feature.
gas/testsuite/
            * gas/elf/type.s: Add test of STT_IFUNC symbol type.
            * gas/elf/type.e: Update expected disassembly.
            * gas/elf/elf.exp: Update grep of symbol types.
ld/
            * NEWS: Mention new feature.
            * pe-dll.c (process_def_file): Replace use of redundant
            BFD_FORT_COMM_DEFAULT_VALUE with 0.
            * scripttempl/elf.sc: Add .rel.ifunc.dyn and .rela.ifunc.dyn
            sections.
ld/testsuite/
            * ld-mips-elf/reloc-1-n32.d: Updated expected output for reloc
            descriptions.
            * ld-mips-elf/reloc-1-n64.d: Likewise.
            * ld-i386/ifunc.d: New test.
            * ld-i386/ifunc.s: Source file for the new test.
            * ld-i386/i386.exp: Run the new test.
@
text
@d1 2
a2 2
#source: reloc-1a.s -mabi=n32
#source: reloc-1b.s -mabi=n32
@


1.2.12.1
log
@bfd/
2012-08-09  Maciej W. Rozycki  <macro@@codesourcery.com>

	* elfxx-mips.c (LA25_LUI_MICROMIPS_1, LA25_LUI_MICROMIPS_2):
	Remove macros, folding them into...
	(LA25_LUI_MICROMIPS): ... this new macro.
	(LA25_J_MICROMIPS_1, LA25_J_MICROMIPS_2): Likewise into...
	(LA25_J_MICROMIPS): ... this new macro.
	(LA25_ADDIU_MICROMIPS_1, LA25_ADDIU_MICROMIPS_2): Likewise
	into...
	(LA25_ADDIU_MICROMIPS): ... this new macro.
	(bfd_put_micromips_32, bfd_get_micromips_32): New functions.
	(mips_elf_create_la25_stub): Use them.
	(check_br32_dslot, check_br32, check_relocated_bzc): Likewise.
	(_bfd_mips_elf_relax_section): Likewise.

gas/
	* config/tc-mips.c (NO_ISA_COP, COP_INSN): Remove macros.
	(is_opcode_valid): Remove coprocessor instruction exclusions.
	Replace OPCODE_IS_MEMBER with opcode_is_member.
	(is_opcode_valid_16): Replace OPCODE_IS_MEMBER with
	opcode_is_member.
	(macro): Remove coprocessor instruction exclusions.

gas/
	* gas/mips/mips.exp: Set has_newabi for all Linux targets.
	* gas/mips/cfi-n64-1.d: Adjust for targets that do not infer the
	ISA from the ABI.
	* gas/mips/elf-rel-got-n32.d: Likewise.
	* gas/mips/elf-rel-got-n64.d: Likewise.
	* gas/mips/elf-rel-xgot-n32.d: Likewise.
	* gas/mips/elf-rel-xgot-n64.d: Likewise.
	* gas/mips/elf-rel18.d: Likewise.
	* gas/mips/elf-rel28-n32.d: Likewise.
	* gas/mips/elf-rel28-n64.d: Likewise.
	* gas/mips/jal-newabi.d: Likewise.
	* gas/mips/ldstla-n64-shared.d: Likewise.
	* gas/mips/ldstla-n64-sym32.d: Likewise.
	* gas/mips/ldstla-n64.d: Likewise.
	* gas/mips/macro-warn-1-n32.d: Likewise.
	* gas/mips/macro-warn-2-n32.d: Likewise.
	* gas/mips/n32-consec.d: Likewise.

include/
2012-08-13  Richard Sandiford  <rdsandiford@@googlemail.com>
            Maciej W. Rozycki  <macro@@codesourcery.com>

	* mips.h (mips_opcode): Add the exclusions field.
	(OPCODE_IS_MEMBER): Remove macro.
	(cpu_is_member): New inline function.
	(opcode_is_member): Likewise.

ld/
	* emulparams/elf32bmip.sh: Make _gp hidden.
	* emulparams/elf32bmipn32-defs.sh: Likewise.
	* emulparams/elf32mipswindiss.sh: Likewise.
	* scripttempl/mips.sc: Likewise.

ld/
2012-08-28  Maciej W. Rozycki  <macro@@codesourcery.com>

	* ld-elf/export-class.sd: New test.
	* ld-elf/export-class.vd: New test.
	* ld-elf/export-class-def.s: New test source.
	* ld-elf/export-class-dep.s: New test source.
	* ld-elf/export-class-lib.s: New test source.
	* ld-elf/export-class-ref.s: New test source.
	* ld-elf/export-class-lib.ver: New test version script.
	* ld-elf/export-class.exp: New test script.
	* ld-arm/arm-export-class.rd: New test.
	* ld-arm/arm-export-class.xd: New test.
	* ld-arm/export-class.exp: New test script.
	* ld-i386/i386-export-class.rd: New test.
	* ld-i386/i386-export-class.xd: New test.
	* ld-i386/export-class.exp: New test script.
	* ld-mips-elf/mips-32-export-class.rd: New test.
	* ld-mips-elf/mips-32-export-class.xd: New test.
	* ld-mips-elf/mips-64-export-class.rd: New test.
	* ld-mips-elf/mips-64-export-class.xd: New test.
	* ld-mips-elf/export-class.exp: New test script.
	* ld-powerpc/powerpc-32-export-class.rd: New test.
	* ld-powerpc/powerpc-32-export-class.xd: New test.
	* ld-powerpc/powerpc-64-export-class.rd: New test.
	* ld-powerpc/powerpc-64-export-class.xd: New test.
	* ld-powerpc/export-class.exp: New test script.
	* ld-x86-64/x86-64-64-export-class.rd: New test.
	* ld-x86-64/x86-64-x32-export-class.rd: New test.
	* ld-x86-64/export-class.exp: New test script.

opcodes/
2012-08-14  Maciej W. Rozycki  <macro@@codesourcery.com>

	* mips-dis.c (print_insn_args): Add GET_OP and GET_OP_S local
	macros, use local variables for info struct member accesses,
	update the type of the variable used to hold the instruction
	word.
	(print_insn_mips, print_mips16_insn_arg): Likewise.
	(print_insn_mips16): Add GET_OP and GET_OP_S local macros, use
	local variables for info struct member accesses.
	(print_insn_micromips): Add GET_OP_S local macro.
	(_print_insn_mips): Update the type of the variable used to hold
	the instruction word.
@
text
@d1 2
a2 2
#source: reloc-1a.s -march=from-abi -mabi=n32 -EB
#source: reloc-1b.s -march=from-abi -mabi=n32 -EB
@


1.1
log
@	* ld-mips-elf/reloc-1[ab].s: New source files.
	* ld-mips-elf/reloc-1-{n32,n64,rel}.d: New tests.
	* ld-mips-elf/reloc-2[ab].s: New source files.
	* ld-mips-elf/reloc-2.{d,ld}: New test.
	* ld-mips-elf/reloc-3[ab].s: New source files.
	* ld-mips-elf/reloc-3-{r,srec}.d: New tests.
	* ld-mips-elf/mips-elf.exp: Run them.
@
text
@d11 4
a14 4
.* R_MIPS_HI16 .* \.text \+ ffff7ff0
.* R_MIPS_LO16 .* \.text \+ ffff7ff0
.* R_MIPS_HI16 .* \.text \+ ffff8000
.* R_MIPS_LO16 .* \.text \+ ffff8000
d24 4
a27 4
.* R_MIPS_HI16 .* \.text \+ ffff8010
.* R_MIPS_LO16 .* \.text \+ ffff8010
.* R_MIPS_HI16 .* \.text \+ ffff8020
.* R_MIPS_LO16 .* \.text \+ ffff8020
d37 4
a40 4
.* R_MIPS_HI16 .* _start \+ ffff7ff0
.* R_MIPS_LO16 .* _start \+ ffff7ff0
.* R_MIPS_HI16 .* _start \+ ffff8000
.* R_MIPS_LO16 .* _start \+ ffff8000
d50 4
a53 4
.* R_MIPS_GOT16 .* \.text \+ ffff7ff0
.* R_MIPS_LO16 .* \.text \+ ffff7ff0
.* R_MIPS_GOT16 .* \.text \+ ffff8000
.* R_MIPS_LO16 .* \.text \+ ffff8000
d63 4
a66 4
.* R_MIPS_GOT16 .* \.text \+ ffff8010
.* R_MIPS_LO16 .* \.text \+ ffff8010
.* R_MIPS_GOT16 .* \.text \+ ffff8020
.* R_MIPS_LO16 .* \.text \+ ffff8020
d76 1
a76 1
.* R_MIPS_GPREL16 .* sdg \+ fffffffc
d83 3
a85 3
.* R_MIPS_GPREL16 .* \.sdata \+ ffff801c
.* R_MIPS_GPREL16 .* \.sdata \+ ffff8020
.* R_MIPS_GPREL16 .* \.sdata \+ ffff8024
d89 1
a89 1
.* R_MIPS_26 .* \.text \+ fffffffc
d101 1
a101 1
.* R_MIPS_26 .* _start \+ fffffffc
d133 4
a136 4
.* R_MIPS_HI16 .* _start \+ ffff7ff0
.* R_MIPS_LO16 .* _start \+ ffff7ff0
.* R_MIPS_HI16 .* _start \+ ffff8000
.* R_MIPS_LO16 .* _start \+ ffff8000
d172 1
a172 1
.* R_MIPS_GPREL16 .* sdg \+ fffffffc
d178 3
a180 3
.* R_MIPS_GPREL16 .* \.sdata \+ ffff803c
.* R_MIPS_GPREL16 .* \.sdata \+ ffff8040
.* R_MIPS_GPREL16 .* \.sdata \+ ffff8044
d196 1
a196 1
.* R_MIPS_26 .* _start \+ fffffffc
@

