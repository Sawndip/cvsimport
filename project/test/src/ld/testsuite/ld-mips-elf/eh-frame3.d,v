head	1.6;
access;
symbols
	binutils-2_24-branch:1.6.0.2
	binutils-2_24-branchpoint:1.6
	binutils-2_21_1:1.4
	binutils-2_23_2:1.5
	binutils-2_23_1:1.5
	binutils-2_23:1.5
	binutils-2_23-branch:1.5.0.2
	binutils-2_23-branchpoint:1.5
	binutils-2_22_branch:1.4.0.6
	binutils-2_22:1.4
	binutils-2_22-branch:1.4.0.4
	binutils-2_22-branchpoint:1.4
	binutils-2_21:1.4
	binutils-2_21-branch:1.4.0.2
	binutils-2_21-branchpoint:1.4
	binutils-2_20_1:1.3.6.1
	binutils-2_20:1.3.6.1
	binutils-arc-20081103-branch:1.3.0.8
	binutils-arc-20081103-branchpoint:1.3
	binutils-2_20-branch:1.3.0.6
	binutils-2_20-branchpoint:1.3
	dje-cgen-play1-branch:1.3.0.4
	dje-cgen-play1-branchpoint:1.3
	arc-20081103-branch:1.3.0.2
	arc-20081103-branchpoint:1.3
	binutils-2_19_1:1.2
	binutils-2_19:1.2
	binutils-2_19-branch:1.2.0.14
	binutils-2_19-branchpoint:1.2
	binutils-2_18:1.2
	binutils-2_18-branch:1.2.0.12
	binutils-2_18-branchpoint:1.2
	binutils-csl-coldfire-4_1-32:1.2
	binutils-csl-sourcerygxx-4_1-32:1.2
	binutils-csl-innovasic-fido-3_4_4-33:1.2
	binutils-csl-sourcerygxx-3_4_4-32:1.2
	binutils-csl-coldfire-4_1-30:1.2
	binutils-csl-sourcerygxx-4_1-30:1.2
	binutils-csl-coldfire-4_1-28:1.2
	binutils-csl-sourcerygxx-4_1-29:1.2
	binutils-csl-sourcerygxx-4_1-28:1.2
	binutils-csl-arm-2006q3-27:1.2
	binutils-csl-sourcerygxx-4_1-27:1.2
	binutils-csl-arm-2006q3-26:1.2
	binutils-csl-sourcerygxx-4_1-26:1.2
	binutils-csl-sourcerygxx-4_1-25:1.2
	binutils-csl-sourcerygxx-4_1-24:1.2
	binutils-csl-sourcerygxx-4_1-23:1.2
	binutils-csl-sourcerygxx-4_1-21:1.2
	binutils-csl-arm-2006q3-21:1.2
	binutils-csl-sourcerygxx-4_1-22:1.2
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.2
	binutils-csl-sourcerygxx-4_1-20:1.2
	binutils-csl-arm-2006q3-19:1.2
	binutils-csl-sourcerygxx-4_1-19:1.2
	binutils-csl-sourcerygxx-4_1-18:1.2
	binutils-csl-renesas-4_1-9:1.2
	binutils-csl-sourcerygxx-3_4_4-25:1.2
	binutils-csl-renesas-4_1-8:1.2
	binutils-csl-renesas-4_1-7:1.2
	binutils-csl-renesas-4_1-6:1.2
	binutils-csl-sourcerygxx-4_1-17:1.2
	binutils-csl-sourcerygxx-4_1-14:1.2
	binutils-csl-sourcerygxx-4_1-15:1.2
	binutils-csl-sourcerygxx-4_1-13:1.2
	binutils-2_17:1.2
	binutils-csl-sourcerygxx-4_1-12:1.2
	binutils-csl-sourcerygxx-3_4_4-21:1.2
	binutils-csl-wrs-linux-3_4_4-24:1.2
	binutils-csl-wrs-linux-3_4_4-23:1.2
	binutils-csl-sourcerygxx-4_1-9:1.2
	binutils-csl-sourcerygxx-4_1-8:1.2
	binutils-csl-sourcerygxx-4_1-7:1.2
	binutils-csl-arm-2006q1-6:1.2
	binutils-csl-sourcerygxx-4_1-6:1.2
	binutils-csl-wrs-linux-3_4_4-22:1.2
	binutils-csl-coldfire-4_1-11:1.2
	binutils-csl-sourcerygxx-3_4_4-19:1.2
	binutils-csl-coldfire-4_1-10:1.2
	binutils-csl-sourcerygxx-4_1-5:1.2
	binutils-csl-sourcerygxx-4_1-4:1.2
	binutils-csl-wrs-linux-3_4_4-21:1.2
	binutils-csl-morpho-4_1-4:1.2
	binutils-csl-sourcerygxx-3_4_4-17:1.2
	binutils-csl-wrs-linux-3_4_4-20:1.2
	binutils-2_17-branch:1.2.0.10
	binutils-2_17-branchpoint:1.2
	binutils-csl-2_17-branch:1.2.0.8
	binutils-csl-2_17-branchpoint:1.2
	binutils-csl-gxxpro-3_4-branch:1.2.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.2
	binutils-2_16_1:1.2
	binutils-csl-arm-2005q1b:1.2
	binutils-2_16:1.2
	binutils-csl-arm-2005q1a:1.2
	binutils-csl-arm-2005q1-branch:1.2.0.4
	binutils-csl-arm-2005q1-branchpoint:1.2
	binutils-2_16-branch:1.2.0.2
	binutils-2_16-branchpoint:1.2
	binutils_latest_snapshot:1.6;
locks; strict;
comment	@# @;


1.6
date	2013.09.12.09.14.47;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	2012.05.13.09.45.44;	author rsandifo;	state Exp;
branches;
next	1.4;

1.4
date	2009.09.13.18.56.03;	author rsandifo;	state Exp;
branches;
next	1.3;

1.3
date	2008.10.06.16.27.35;	author nickc;	state Exp;
branches
	1.3.6.1;
next	1.2;

1.2
date	2005.02.02.20.19.35;	author drow;	state Exp;
branches;
next	1.1;

1.1
date	2005.01.31.20.39.11;	author rsandifo;	state Exp;
branches;
next	;

1.3.6.1
date	2009.09.14.18.49.18;	author rsandifo;	state Exp;
branches;
next	;


desc
@@


1.6
log
@	* dwarf.c (dwarf_vmatoa): Rename to dwarf_vmatoa_1 and add a
	precision parameter.
	(dwarf_vmatoa): New wrapper for dwarf_vmatoa_1.
	(print_dwarf_vma): Use dwarf_vmatoa_1.
	(SAFE_BYTE_GET): Add check that VAL is big enough to contain
	AMOUNT bytes.
	(process_debug_info): Use an unsigned int for the offset size.
	(process_debug_pubnames): Likewise.
	(display_debug_aranges): Likewise.
	(struct Frame_Chunk): Use dwarf_vma type for pc_begin and pc_range
	fields.
	(frame_display_row): Use print_dwarf_vma to display dwarf_vma
	values.
	(display_debug_frames): Likewise.

	* binutils-all/x86-64/compressed-1a.d: Update expected output to
	allow for 64-bit addresses.

	* ld-elf/eh1.d: Update expected output to allow for
	64-bit addresses.
	* ld-elf/eh2.d: Likewise.
	* ld-elf/eh3.d: Likewise.
	* ld-elf/eh4.d: Likewise.
	* ld-elf/eh5.d: Likewise.
	* ld-elf/eh6.d: Likewise.
	* ld-mips-elf/eh-frame1-n64.d: Likewise.
	* ld-mips-elf/eh-frame2-n64.d: Likewise.
	* ld-mips-elf/eh-frame3.d: Likewise.

	* gas/cfi/cfi-alpha-1.d: Update expected output to allow for
	64-bit addresses.
	* gas/cfi/cfi-alpha-3.d: Likewise.
	* gas/cfi/cfi-arm-1.d: Likewise.
	* gas/cfi/cfi-common-1.d: Likewise.
	* gas/cfi/cfi-common-2.d: Likewise.
	* gas/cfi/cfi-common-3.d: Likewise.
	* gas/cfi/cfi-common-4.d: Likewise.
	* gas/cfi/cfi-common-5.d: Likewise.
	* gas/cfi/cfi-common-6.d: Likewise.
	* gas/cfi/cfi-common-7.d: Likewise.
	* gas/cfi/cfi-hppa-1.d: Likewise.
	* gas/cfi/cfi-i386-2.d: Likewise.
	* gas/cfi/cfi-i386.d: Likewise.
	* gas/cfi/cfi-m68k.d: Likewise.
	* gas/cfi/cfi-mips-1.d: Likewise.
	* gas/cfi/cfi-ppc-1.d: Likewise.
	* gas/cfi/cfi-s390-1.d: Likewise.
	* gas/cfi/cfi-s390x-1.d: Likewise.
	* gas/cfi/cfi-sh-1.d: Likewise.
	* gas/cfi/cfi-sparc-1.d: Likewise.
	* gas/cfi/cfi-sparc64-1.d: Likewise.
	* gas/cfi/cfi-x86_64.d: Likewise.
@
text
@#name: MIPS eh-frame 3
#source: eh-frame1.s
#source: eh-frame1.s
#as: -EB -mips3 -mabi=eabi --defsym alignment=3 --defsym fill=0
#readelf: -wf
#ld: -EB -Teh-frame1.ld --defsym foo=0x50607080
#
# This test is for the official LP64 version of EABI64, which uses a
# combination of 32-bit objects and 64-bit FDE addresses.
#

Contents of the \.eh_frame section:

0+0000 0+000c 0+0000 CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 1
  Data alignment factor: 4
  Return address column: 31

  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

0+0010 0+0014 0+0014 FDE cie=0+0000 pc=0+020000..0+020010

0+0028 0+0014 0+002c FDE cie=0+0000 pc=0+020010..0+020030

# basic2 removed
0+0040 0+0014 0+0044 FDE cie=0+0000 pc=0+020030..0+020060

# basic3 removed
0+0058 0+0014 0+005c FDE cie=0+0000 pc=0+020060..0+0200a0

# basic4 removed
0+0070 0+0014 0+0074 FDE cie=0+0000 pc=0+0200a0..0+0200f0

0+0088 0+001c 0+0000 CIE
  Version:               1
  Augmentation:          "zP"
  Code alignment factor: 1
  Data alignment factor: 4
  Return address column: 31
  Augmentation data:     00 00 00 00 00 50 60 70 80

  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

0+00a8 0+001c 0+0024 FDE cie=0+0088 pc=0+0200f0..0+020100
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

0+00c8 0+001c 0+0044 FDE cie=0+0088 pc=0+020100..0+020120
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

0+00e8 0+001c 0+0000 CIE
  Version:               1
  Augmentation:          "zP"
  Code alignment factor: 1
  Data alignment factor: 4
  Return address column: 31
  Augmentation data:     50 00 00 00 00 00 00 00 00 00 00 00 50 60 70 80


0+0108 0+001c 0+0024 FDE cie=0+00e8 pc=0+020120..0+020130
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

0+0128 0+001c 0+0044 FDE cie=0+00e8 pc=0+020130..0+020150
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

0+0148 0+001c 0+0000 CIE
  Version:               1
  Augmentation:          "zPR"
  Code alignment factor: 1
  Data alignment factor: 4
  Return address column: 31
  Augmentation data:     00 00 00 00 00 50 60 70 80 00

  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

0+0168 0+001c 0+0024 FDE cie=0+0148 pc=0+020150..0+020160
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

# FDE for .discard removed
# zPR2 removed
0+0188 0+001c 0+0044 FDE cie=0+0148 pc=0+020160..0+020190
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

0+01a8 0+001c 0+0064 FDE cie=0+0148 pc=0+020190..0+0201d0
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

0+01c8 0+0014 0+01cc FDE cie=0+0000 pc=0+0201d0..0+0201e0

# basic1 removed, followed by repeat of above
0+01e0 0+0014 0+01e4 FDE cie=0+0000 pc=0+0201e0..0+0201f0

0+01f8 0+0014 0+01fc FDE cie=0+0000 pc=0+0201f0..0+020210

0+0210 0+0014 0+0214 FDE cie=0+0000 pc=0+020210..0+020240

0+0228 0+0014 0+022c FDE cie=0+0000 pc=0+020240..0+020280

0+0240 0+0014 0+0244 FDE cie=0+0000 pc=0+020280..0+0202d0

0+0258 0+001c 0+01d4 FDE cie=0+0088 pc=0+0202d0..0+0202e0
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

0+0278 0+001c 0+01f4 FDE cie=0+0088 pc=0+0202e0..0+020300
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

0+0298 0+001c 0+01b4 FDE cie=0+00e8 pc=0+020300..0+020310
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

0+02b8 0+001c 0+01d4 FDE cie=0+00e8 pc=0+020310..0+020330
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

0+02d8 0+001c 0+0194 FDE cie=0+0148 pc=0+020330..0+020340
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

# FDE for .discard removed
# zPR2 removed
0+02f8 0+001c 0+01b4 FDE cie=0+0148 pc=0+020340..0+020370
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

0+0318 0+001c 0+01d4 FDE cie=0+0148 pc=0+020370..0+0203b0
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

0+0338 0+0014 0+033c FDE cie=0+0000 pc=0+0203b0..0+0203c0
@


1.5
log
@ld/testsuite/
	* ld-mips-elf/eh-frame1.ld (.gcc_compiled_long32): Add KEEP.
	* ld-mips-elf/eh-frame3.d: Move definition of foo to the link line
	and change to a 32-bit value.  Expect CIEs to be marged.
	* ld-mips-elf/eh-frame4.d: Move definition of foo to the link line.
@
text
@d14 1
a14 1
00000000 0000000c 00000000 CIE
d25 1
a25 1
00000010 00000014 00000014 FDE cie=00000000 pc=00020000..00020010
d27 1
a27 1
00000028 00000014 0000002c FDE cie=00000000 pc=00020010..00020030
d30 1
a30 1
00000040 00000014 00000044 FDE cie=00000000 pc=00020030..00020060
d33 1
a33 1
00000058 00000014 0000005c FDE cie=00000000 pc=00020060..000200a0
d36 1
a36 1
00000070 00000014 00000074 FDE cie=00000000 pc=000200a0..000200f0
d38 1
a38 1
00000088 0000001c 00000000 CIE
d54 1
a54 1
000000a8 0000001c 00000024 FDE cie=00000088 pc=000200f0..00020100
d63 1
a63 1
000000c8 0000001c 00000044 FDE cie=00000088 pc=00020100..00020120
d72 1
a72 1
000000e8 0000001c 00000000 CIE
d81 1
a81 1
00000108 0000001c 00000024 FDE cie=000000e8 pc=00020120..00020130
d90 1
a90 1
00000128 0000001c 00000044 FDE cie=000000e8 pc=00020130..00020150
d99 1
a99 1
00000148 0000001c 00000000 CIE
d113 1
a113 1
00000168 0000001c 00000024 FDE cie=00000148 pc=00020150..00020160
d124 1
a124 1
00000188 0000001c 00000044 FDE cie=00000148 pc=00020160..00020190
d133 1
a133 1
000001a8 0000001c 00000064 FDE cie=00000148 pc=00020190..000201d0
d142 1
a142 1
000001c8 00000014 000001cc FDE cie=00000000 pc=000201d0..000201e0
d145 1
a145 1
000001e0 00000014 000001e4 FDE cie=00000000 pc=000201e0..000201f0
d147 1
a147 1
000001f8 00000014 000001fc FDE cie=00000000 pc=000201f0..00020210
d149 1
a149 1
00000210 00000014 00000214 FDE cie=00000000 pc=00020210..00020240
d151 1
a151 1
00000228 00000014 0000022c FDE cie=00000000 pc=00020240..00020280
d153 1
a153 1
00000240 00000014 00000244 FDE cie=00000000 pc=00020280..000202d0
d155 1
a155 1
00000258 0000001c 000001d4 FDE cie=00000088 pc=000202d0..000202e0
d164 1
a164 1
00000278 0000001c 000001f4 FDE cie=00000088 pc=000202e0..00020300
d173 1
a173 1
00000298 0000001c 000001b4 FDE cie=000000e8 pc=00020300..00020310
d182 1
a182 1
000002b8 0000001c 000001d4 FDE cie=000000e8 pc=00020310..00020330
d191 1
a191 1
000002d8 0000001c 00000194 FDE cie=00000148 pc=00020330..00020340
d202 1
a202 1
000002f8 0000001c 000001b4 FDE cie=00000148 pc=00020340..00020370
d211 1
a211 1
00000318 0000001c 000001d4 FDE cie=00000148 pc=00020370..000203b0
d220 1
a220 1
00000338 00000014 0000033c FDE cie=00000000 pc=000203b0..000203c0
@


1.4
log
@gas/testsuite/
	* gas/mips/mips16-dwarf2-n32.d: Expect odd addresses.

ld/testsuite/
	* ld-mips-elf/eh-frame1-n32.d: Change "the section \.eh_frame"
	to "the \.eh_frame section".
	* ld-mips-elf/eh-frame1-n64.d: Likewise.
	* ld-mips-elf/eh-frame2-n32.d: Likewise.
	* ld-mips-elf/eh-frame2-n64.d: Likewise.
	* ld-mips-elf/eh-frame3.d: Likewise.
	* ld-mips-elf/eh-frame4.d: Likewise.
	* ld-mips-elf/elf-rel-got-n32.d: Expect bals.
	* ld-mips-elf/elf-rel-xgot-n32.d: Likewise.
	* ld-mips-elf/mips-elf.exp: Force the MIPS16 PIC tests to use -mips1.
@
text
@d4 1
a4 1
#as: -EB -mips3 -mabi=eabi --defsym alignment=3 --defsym fill=0 --defsym foo=0x1020304050607080
d6 1
a6 1
#ld: -EB -Teh-frame1.ld
d44 1
a44 1
  Augmentation data:     00 10 20 30 40 50 60 70 80
d78 1
a78 1
  Augmentation data:     50 00 00 00 00 00 00 00 10 20 30 40 50 60 70 80
d105 1
a105 1
  Augmentation data:     00 10 20 30 40 50 60 70 80 00
d142 1
a142 12
000001c8 0000000c 00000000 CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 1
  Data alignment factor: 4
  Return address column: 31

  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

000001d8 00000014 00000014 FDE cie=000001c8 pc=000201d0..000201e0
d145 1
a145 1
000001f0 00000014 0000002c FDE cie=000001c8 pc=000201e0..000201f0
d147 1
a147 1
00000208 00000014 00000044 FDE cie=000001c8 pc=000201f0..00020210
d149 1
a149 1
00000220 00000014 0000005c FDE cie=000001c8 pc=00020210..00020240
d151 1
a151 1
00000238 00000014 00000074 FDE cie=000001c8 pc=00020240..00020280
d153 1
a153 9
00000250 00000014 0000008c FDE cie=000001c8 pc=00020280..000202d0

00000268 0000001c 00000000 CIE
  Version:               1
  Augmentation:          "zP"
  Code alignment factor: 1
  Data alignment factor: 4
  Return address column: 31
  Augmentation data:     00 10 20 30 40 50 60 70 80
d155 1
d164 1
a164 1
00000288 0000001c 00000024 FDE cie=00000268 pc=000202d0..000202e0
d173 1
a173 1
000002a8 0000001c 00000044 FDE cie=00000268 pc=000202e0..00020300
d182 1
a182 10
000002c8 0000001c 00000000 CIE
  Version:               1
  Augmentation:          "zP"
  Code alignment factor: 1
  Data alignment factor: 4
  Return address column: 31
  Augmentation data:     50 00 00 00 00 00 00 00 10 20 30 40 50 60 70 80


000002e8 0000001c 00000024 FDE cie=000002c8 pc=00020300..00020310
d191 1
a191 24
00000308 0000001c 00000044 FDE cie=000002c8 pc=00020310..00020330
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000328 0000001c 00000000 CIE
  Version:               1
  Augmentation:          "zPR"
  Code alignment factor: 1
  Data alignment factor: 4
  Return address column: 31
  Augmentation data:     00 10 20 30 40 50 60 70 80 00

  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000348 0000001c 00000024 FDE cie=00000328 pc=00020330..00020340
d202 1
a202 1
00000368 0000001c 00000044 FDE cie=00000328 pc=00020340..00020370
d211 1
a211 2
00000388 0000001c 00000064 FDE cie=00000328 pc=00020370..000203b0
  DW_CFA_nop
a217 10

000003a8 0000000c 00000000 CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 1
  Data alignment factor: 4
  Return address column: 31

  DW_CFA_nop
  DW_CFA_nop
d220 1
a220 1
000003b8 00000014 00000014 FDE cie=000003a8 pc=000203b0..000203c0
@


1.3
log
@            * dwarf.c (display_debug_frames): Change text for uniformity.
            (process_debug_info): Likewise.
            (display_debug_aranges): Likewise.  Indent address output.
            (display_debug_pubnames): Print offset in hex.

            * binutils-all/objdump.W: Update.

            * gas/cfi/cfi-alpha-1.d, gas/cfi/cfi-alpha-3.d,
            gas/cfi/cfi-arm-1.d, gas/cfi/cfi-common-1.d,
            gas/cfi/cfi-common-2.d, gas/cfi/cfi-common-3.d,
            gas/cfi/cfi-common-4.d, gas/cfi/cfi-common-5.d,
            gas/cfi/cfi-common-6.d, gas/cfi/cfi-hppa-1.d,
            gas/cfi/cfi-i386-2.d, gas/cfi/cfi-i386.d, gas/cfi/cfi-m68k.d,
            gas/cfi/cfi-mips-1.d, gas/cfi/cfi-ppc-1.d, gas/cfi/cfi-s390-1.d,
            gas/cfi/cfi-s390x-1.d, gas/cfi/cfi-sh-1.d, gas/cfi/cfi-sparc-1.d,
            gas/cfi/cfi-sparc64-1.d, gas/cfi/cfi-x86_64.d: Update for readelf
            change.

            * ld-elf/eh1.d, ld-elf/eh2.d, ld-elf/eh3.d, ld-elf/eh4.d,
            ld-elf/eh5.d, ld-elf/eh6.d, ld-mips-elf/eh-frame1-n32.d,
            ld-mips-elf/eh-frame1-n64.d, ld-mips-elf/eh-frame2-n32.d,
            ld-mips-elf/eh-frame2-n64.d, ld-mips-elf/eh-frame3.d,
            ld-mips-elf/eh-frame4.d: Update for readelf change.
@
text
@d12 1
a12 1
Contents of the section \.eh_frame:
@


1.3.6.1
log
@gas/testsuite/
	* gas/mips/mips16-dwarf2-n32.d: Expect odd addresses.

ld/testsuite/
	* ld-mips-elf/eh-frame1-n32.d: Change "the section \.eh_frame"
	to "the \.eh_frame section".
	* ld-mips-elf/eh-frame1-n64.d: Likewise.
	* ld-mips-elf/eh-frame2-n32.d: Likewise.
	* ld-mips-elf/eh-frame2-n64.d: Likewise.
	* ld-mips-elf/eh-frame3.d: Likewise.
	* ld-mips-elf/eh-frame4.d: Likewise.
	* ld-mips-elf/elf-rel-got-n32.d: Expect bals.
	* ld-mips-elf/elf-rel-xgot-n32.d: Likewise.
	* ld-mips-elf/mips-elf.exp: Force the MIPS16 PIC tests to use -mips1.
@
text
@d12 1
a12 1
Contents of the \.eh_frame section:
@


1.2
log
@	* ld-mips-elf/eh-frame3.d, ld-mips-elf/eh-frame4.d: Move comments
	after test commands.
	* ld-mips-elf/mips-elf.exp: Skip multi-got-1 on non-GNU/Linux
	systems.
@
text
@d12 1
a12 1
The section \.eh_frame contains:
@


1.1
log
@	* elf-bfd.h (elf_backend_data): Add elf_backend_eh_frame_address_size.
	(_bfd_elf_eh_frame_address_size): Declare.
	* elfxx-target.h (elf_backend_eh_frame_address_size): Define a default.
	(elfNN_bed): Initialize elf_backend_eh_frame_address_size.
	* elfxx-mips.h (_bfd_mips_elf_eh_frame_address_size): Declare.
	(elf_backend_eh_frame_address_size): Define.
	* elfxx-mips.c (_bfd_mips_elf_eh_frame_address_size): New function.
	* elf-eh-frame.c (_bfd_elf_discard_section_eh_frame): Get the address
	size from the new backend hook.
	(_bfd_elf_write_section_eh_frame): Likewise.
	(_bfd_elf_eh_frame_address_size): New function.
@
text
@a0 3
# This test is for the official LP64 version of EABI64, which uses a
# combination of 32-bit objects and 64-bit FDE addresses.
#
d6 5
a10 1
#ld: -melf32ebmip -Teh-frame1.ld
@

