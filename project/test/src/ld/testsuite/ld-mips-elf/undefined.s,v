head	1.1;
access;
symbols
	binutils-2_24-branch:1.1.0.10
	binutils-2_24-branchpoint:1.1
	binutils-2_21_1:1.1
	binutils-2_23_2:1.1
	binutils-2_23_1:1.1
	binutils-2_23:1.1
	binutils-2_23-branch:1.1.0.8
	binutils-2_23-branchpoint:1.1
	binutils-2_22_branch:1.1.0.6
	binutils-2_22:1.1
	binutils-2_22-branch:1.1.0.4
	binutils-2_22-branchpoint:1.1
	binutils-2_21:1.1
	binutils-2_21-branch:1.1.0.2
	binutils-2_21-branchpoint:1.1
	binutils_latest_snapshot:1.1;
locks; strict;
comment	@# @;


1.1
date	2009.12.10.14.20.04;	author macro;	state Exp;
branches;
next	;


desc
@@


1.1
log
@	bfd/
	* elfxx-mips.c (mips_elf_calculate_relocation): Correct handling
	of undefined symbols.

	ld/testsuite/
	* ld-mips-elf/undefined.d: New test.
	* ld-mips-elf/undefined.s: Source for the new test.
	* ld-mips-elf/mips-elf.exp: Run the new test.
@
text
@# Relocations against undefined symbols would be incorrectly let through
# by mips_elf_calculate_relocation() once the result of the
# ->undefined_symbol() callback has been interpreted in the opposite
# sense.  The link would fail anyway, but for R_MIPS_GOT_PAGE relocations
# a failure of the following assertion:
#
# BFD_ASSERT (h->dynindx >= global_got_dynindx);
#
# would additionally be reported in mips_elf_global_got_index(), because
# at this point h->dynindx for the undefined symbol would be set to -1.
# Other kinds of GOT relocations allocate a GOT index for the symbol
# referred and set its h->dynindx in _bfd_mips_elf_check_relocs(), but
# R_MIPS_GOT_PAGE relocations only allocate a GOT page at that point and
# for undefined symbols the page never gets resolved any further.

	.abicalls
	.text
	.globl	foo
	.type	foo, @@function
	.ent	foo
foo:
	li	$2, %got_page(bar)
	.end	foo
	.size	foo, . - foo
@
