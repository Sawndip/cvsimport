head	1.8;
access;
symbols
	binutils-2_24-branch:1.8.0.2
	binutils-2_24-branchpoint:1.8
	binutils-2_21_1:1.6
	binutils-2_23_2:1.6.8.1
	binutils-2_23_1:1.6.8.1
	binutils-2_23:1.6.8.1
	binutils-2_23-branch:1.6.0.8
	binutils-2_23-branchpoint:1.6
	binutils-2_22_branch:1.6.0.6
	binutils-2_22:1.6
	binutils-2_22-branch:1.6.0.4
	binutils-2_22-branchpoint:1.6
	binutils-2_21:1.6
	binutils-2_21-branch:1.6.0.2
	binutils-2_21-branchpoint:1.6
	binutils-2_20_1:1.4.6.1
	binutils-2_20:1.4.6.1
	binutils-arc-20081103-branch:1.4.0.8
	binutils-arc-20081103-branchpoint:1.4
	binutils-2_20-branch:1.4.0.6
	binutils-2_20-branchpoint:1.4
	dje-cgen-play1-branch:1.4.0.4
	dje-cgen-play1-branchpoint:1.4
	arc-20081103-branch:1.4.0.2
	arc-20081103-branchpoint:1.4
	binutils-2_19_1:1.3
	binutils-2_19:1.3
	binutils-2_19-branch:1.3.0.2
	binutils-2_19-branchpoint:1.3
	binutils-2_18:1.2
	binutils-2_18-branch:1.2.0.2
	binutils-2_18-branchpoint:1.2
	binutils-csl-coldfire-4_1-32:1.1
	binutils-csl-sourcerygxx-4_1-32:1.1
	binutils-csl-innovasic-fido-3_4_4-33:1.1
	binutils-csl-sourcerygxx-3_4_4-32:1.1
	binutils-csl-coldfire-4_1-30:1.1
	binutils-csl-sourcerygxx-4_1-30:1.1
	binutils-csl-coldfire-4_1-28:1.1
	binutils-csl-sourcerygxx-4_1-29:1.1
	binutils-csl-sourcerygxx-4_1-28:1.1
	binutils-csl-arm-2006q3-27:1.1
	binutils-csl-sourcerygxx-4_1-27:1.1
	binutils-csl-arm-2006q3-26:1.1
	binutils-csl-sourcerygxx-4_1-26:1.1
	binutils-csl-sourcerygxx-4_1-25:1.1
	binutils-csl-sourcerygxx-4_1-24:1.1
	binutils-csl-sourcerygxx-4_1-23:1.1
	binutils-csl-sourcerygxx-4_1-21:1.1
	binutils-csl-arm-2006q3-21:1.1
	binutils-csl-sourcerygxx-4_1-22:1.1
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.1
	binutils-csl-sourcerygxx-4_1-20:1.1
	binutils-csl-arm-2006q3-19:1.1
	binutils-csl-sourcerygxx-4_1-19:1.1
	binutils-csl-sourcerygxx-4_1-18:1.1
	binutils-csl-renesas-4_1-9:1.1
	binutils-csl-sourcerygxx-3_4_4-25:1.1
	binutils-csl-renesas-4_1-8:1.1
	binutils-csl-renesas-4_1-7:1.1
	binutils-csl-renesas-4_1-6:1.1
	binutils-csl-sourcerygxx-4_1-17:1.1
	binutils-csl-sourcerygxx-4_1-14:1.1
	binutils-csl-sourcerygxx-4_1-15:1.1
	binutils-csl-sourcerygxx-4_1-13:1.1
	binutils-2_17:1.1
	binutils-csl-sourcerygxx-4_1-12:1.1
	binutils-csl-sourcerygxx-3_4_4-21:1.1
	binutils-csl-wrs-linux-3_4_4-24:1.1
	binutils-csl-wrs-linux-3_4_4-23:1.1
	binutils-csl-sourcerygxx-4_1-9:1.1
	binutils-csl-sourcerygxx-4_1-8:1.1
	binutils-csl-sourcerygxx-4_1-7:1.1
	binutils-csl-arm-2006q1-6:1.1
	binutils-csl-sourcerygxx-4_1-6:1.1
	binutils-csl-wrs-linux-3_4_4-22:1.1
	binutils-csl-coldfire-4_1-11:1.1
	binutils-csl-sourcerygxx-3_4_4-19:1.1
	binutils-csl-coldfire-4_1-10:1.1
	binutils-csl-sourcerygxx-4_1-5:1.1
	binutils-csl-sourcerygxx-4_1-4:1.1
	binutils-csl-wrs-linux-3_4_4-21:1.1
	binutils-csl-morpho-4_1-4:1.1
	binutils-csl-sourcerygxx-3_4_4-17:1.1
	binutils-csl-wrs-linux-3_4_4-20:1.1
	binutils-2_17-branch:1.1.0.10
	binutils-2_17-branchpoint:1.1
	binutils-csl-2_17-branch:1.1.0.8
	binutils-csl-2_17-branchpoint:1.1
	binutils-csl-gxxpro-3_4-branch:1.1.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.1
	binutils-2_16_1:1.1
	binutils-csl-arm-2005q1b:1.1
	binutils-2_16:1.1
	binutils-csl-arm-2005q1a:1.1
	binutils-csl-arm-2005q1-branch:1.1.0.4
	binutils-csl-arm-2005q1-branchpoint:1.1
	binutils-2_16-branch:1.1.0.2
	binutils-2_16-branchpoint:1.1
	binutils_latest_snapshot:1.8;
locks; strict;
comment	@# @;


1.8
date	2013.09.12.09.14.47;	author nickc;	state Exp;
branches;
next	1.7;

1.7
date	2012.08.06.21.28.45;	author macro;	state Exp;
branches;
next	1.6;

1.6
date	2009.09.21.18.55.08;	author rsandifo;	state Exp;
branches
	1.6.8.1;
next	1.5;

1.5
date	2009.09.13.18.56.03;	author rsandifo;	state Exp;
branches;
next	1.4;

1.4
date	2008.10.06.16.27.35;	author nickc;	state Exp;
branches
	1.4.6.1;
next	1.3;

1.3
date	2008.03.17.18.52.04;	author rsandifo;	state Exp;
branches;
next	1.2;

1.2
date	2006.10.17.13.41.48;	author amodra;	state Exp;
branches;
next	1.1;

1.1
date	2004.11.16.10.16.30;	author rsandifo;	state Exp;
branches;
next	;

1.6.8.1
date	2012.09.04.14.38.02;	author gingold;	state Exp;
branches;
next	;

1.4.6.1
date	2009.09.14.18.49.18;	author rsandifo;	state Exp;
branches;
next	;


desc
@@


1.8
log
@	* dwarf.c (dwarf_vmatoa): Rename to dwarf_vmatoa_1 and add a
	precision parameter.
	(dwarf_vmatoa): New wrapper for dwarf_vmatoa_1.
	(print_dwarf_vma): Use dwarf_vmatoa_1.
	(SAFE_BYTE_GET): Add check that VAL is big enough to contain
	AMOUNT bytes.
	(process_debug_info): Use an unsigned int for the offset size.
	(process_debug_pubnames): Likewise.
	(display_debug_aranges): Likewise.
	(struct Frame_Chunk): Use dwarf_vma type for pc_begin and pc_range
	fields.
	(frame_display_row): Use print_dwarf_vma to display dwarf_vma
	values.
	(display_debug_frames): Likewise.

	* binutils-all/x86-64/compressed-1a.d: Update expected output to
	allow for 64-bit addresses.

	* ld-elf/eh1.d: Update expected output to allow for
	64-bit addresses.
	* ld-elf/eh2.d: Likewise.
	* ld-elf/eh3.d: Likewise.
	* ld-elf/eh4.d: Likewise.
	* ld-elf/eh5.d: Likewise.
	* ld-elf/eh6.d: Likewise.
	* ld-mips-elf/eh-frame1-n64.d: Likewise.
	* ld-mips-elf/eh-frame2-n64.d: Likewise.
	* ld-mips-elf/eh-frame3.d: Likewise.

	* gas/cfi/cfi-alpha-1.d: Update expected output to allow for
	64-bit addresses.
	* gas/cfi/cfi-alpha-3.d: Likewise.
	* gas/cfi/cfi-arm-1.d: Likewise.
	* gas/cfi/cfi-common-1.d: Likewise.
	* gas/cfi/cfi-common-2.d: Likewise.
	* gas/cfi/cfi-common-3.d: Likewise.
	* gas/cfi/cfi-common-4.d: Likewise.
	* gas/cfi/cfi-common-5.d: Likewise.
	* gas/cfi/cfi-common-6.d: Likewise.
	* gas/cfi/cfi-common-7.d: Likewise.
	* gas/cfi/cfi-hppa-1.d: Likewise.
	* gas/cfi/cfi-i386-2.d: Likewise.
	* gas/cfi/cfi-i386.d: Likewise.
	* gas/cfi/cfi-m68k.d: Likewise.
	* gas/cfi/cfi-mips-1.d: Likewise.
	* gas/cfi/cfi-ppc-1.d: Likewise.
	* gas/cfi/cfi-s390-1.d: Likewise.
	* gas/cfi/cfi-s390x-1.d: Likewise.
	* gas/cfi/cfi-sh-1.d: Likewise.
	* gas/cfi/cfi-sparc-1.d: Likewise.
	* gas/cfi/cfi-sparc64-1.d: Likewise.
	* gas/cfi/cfi-x86_64.d: Likewise.
@
text
@#name: MIPS eh-frame 1, n64
#source: eh-frame1.s
#source: eh-frame1.s
#as: -march=from-abi -EB -64 --defsym alignment=3 --defsym fill=0x40
#readelf: --relocs -wf
#ld: -shared -melf64btsmip -Teh-frame1.ld
#warning: fde encoding in.*prevents \.eh_frame_hdr table being created.

Relocation section '\.rel\.dyn' .*:
 *Offset .*
0+00+000  [0-9a-f]+ R_MIPS_NONE *
 *Type2: R_MIPS_NONE *
 *Type3: R_MIPS_NONE *
# Initial PCs for the FDEs attached to CIE 0x120
0+00030148  [0-9a-f]+ R_MIPS_REL32 *
 *Type2: R_MIPS_64 *
 *Type3: R_MIPS_NONE *
0+00030168  [0-9a-f]+ R_MIPS_REL32 *
 *Type2: R_MIPS_64 *
 *Type3: R_MIPS_NONE *
0+00030308  [0-9a-f]+ R_MIPS_REL32 *
 *Type2: R_MIPS_64 *
 *Type3: R_MIPS_NONE *
0+00030328  [0-9a-f]+ R_MIPS_REL32 *
 *Type2: R_MIPS_64 *
 *Type3: R_MIPS_NONE *
0+000300cb  [0-9a-f]+ R_MIPS_REL32      0+00+00+00 foo
 *Type2: R_MIPS_64 *
 *Type3: R_MIPS_NONE *
0+00030138  [0-9a-f]+ R_MIPS_REL32      0+00+00+00 foo
 *Type2: R_MIPS_64 *
 *Type3: R_MIPS_NONE *
0+00030192  [0-9a-f]+ R_MIPS_REL32      0+00+00+00 foo
 *Type2: R_MIPS_64 *
 *Type3: R_MIPS_NONE *
Contents of the \.eh_frame section:

0+0000 0+0014 0+0000 CIE
  Version:               1
  Augmentation:          "zR"
  Code alignment factor: 1
  Data alignment factor: 4
  Return address column: 31
  Augmentation data:     1c

  DW_CFA_advance_loc: 0 to 0+0000
  DW_CFA_advance_loc: 0 to 0+0000
  DW_CFA_advance_loc: 0 to 0+0000
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

0+0018 0+001c 0+001c FDE cie=0+0000 pc=0+020000..0+020010
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

0+0038 0+001c 0+003c FDE cie=0+0000 pc=0+020010..0+020030
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

# basic2 removed
0+0058 0+001c 0+005c FDE cie=0+0000 pc=0+020030..0+020060
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

# basic3 removed
0+0078 0+001c 0+007c FDE cie=0+0000 pc=0+020060..0+0200a0
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

# basic4 removed
0+0098 0+001c 0+009c FDE cie=0+0000 pc=0+0200a0..0+0200f0
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

0+00b8 0+0024 0+0000 CIE
  Version:               1
  Augmentation:          "zRP"
  Code alignment factor: 1
  Data alignment factor: 4
  Return address column: 31
  Augmentation data:     1c 00 00 00 00 00 00 00 00 00

  DW_CFA_advance_loc: 0 to 0+0000
  DW_CFA_advance_loc: 0 to 0+0000
  DW_CFA_advance_loc: 0 to 0+0000
  DW_CFA_advance_loc: 0 to 0+0000
  DW_CFA_advance_loc: 0 to 0+0000
  DW_CFA_advance_loc: 0 to 0+0000
  DW_CFA_advance_loc: 0 to 0+0000
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

0+00e0 0+001c 0+002c FDE cie=0+00b8 pc=0+0200f0..0+020100
  DW_CFA_advance_loc: 0 to 0+0200f0
  DW_CFA_advance_loc: 0 to 0+0200f0
  DW_CFA_advance_loc: 0 to 0+0200f0
  DW_CFA_advance_loc: 0 to 0+0200f0
  DW_CFA_advance_loc: 0 to 0+0200f0
  DW_CFA_advance_loc: 0 to 0+0200f0
  DW_CFA_advance_loc: 0 to 0+0200f0

0+0100 0+001c 0+004c FDE cie=0+00b8 pc=0+020100..0+020120
  DW_CFA_advance_loc: 0 to 0+020100
  DW_CFA_advance_loc: 0 to 0+020100
  DW_CFA_advance_loc: 0 to 0+020100
  DW_CFA_advance_loc: 0 to 0+020100
  DW_CFA_advance_loc: 0 to 0+020100
  DW_CFA_advance_loc: 0 to 0+020100
  DW_CFA_advance_loc: 0 to 0+020100

0+0120 0+001c 0+0000 CIE
  Version:               1
  Augmentation:          "zP"
  Code alignment factor: 1
  Data alignment factor: 4
  Return address column: 31
  Augmentation data:     50 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00


0+0140 0+001c 0+0024 FDE cie=0+0120 pc=0+020120..0+020130
  DW_CFA_advance_loc: 0 to 0+020120
  DW_CFA_advance_loc: 0 to 0+020120
  DW_CFA_advance_loc: 0 to 0+020120
  DW_CFA_advance_loc: 0 to 0+020120
  DW_CFA_advance_loc: 0 to 0+020120
  DW_CFA_advance_loc: 0 to 0+020120
  DW_CFA_advance_loc: 0 to 0+020120

0+0160 0+001c 0+0044 FDE cie=0+0120 pc=0+020130..0+020150
  DW_CFA_advance_loc: 0 to 0+020130
  DW_CFA_advance_loc: 0 to 0+020130
  DW_CFA_advance_loc: 0 to 0+020130
  DW_CFA_advance_loc: 0 to 0+020130
  DW_CFA_advance_loc: 0 to 0+020130
  DW_CFA_advance_loc: 0 to 0+020130
  DW_CFA_advance_loc: 0 to 0+020130

0+0180 0+001c 0+0000 CIE
  Version:               1
  Augmentation:          "zPR"
  Code alignment factor: 1
  Data alignment factor: 4
  Return address column: 31
  Augmentation data:     00 00 00 00 00 00 00 00 00 1c

  DW_CFA_advance_loc: 0 to 0+0000
  DW_CFA_advance_loc: 0 to 0+0000
  DW_CFA_advance_loc: 0 to 0+0000
  DW_CFA_advance_loc: 0 to 0+0000
  DW_CFA_advance_loc: 0 to 0+0000

0+01a0 0+001c 0+0024 FDE cie=0+0180 pc=0+020150..0+020160
  DW_CFA_advance_loc: 0 to 0+020150
  DW_CFA_advance_loc: 0 to 0+020150
  DW_CFA_advance_loc: 0 to 0+020150
  DW_CFA_advance_loc: 0 to 0+020150
  DW_CFA_advance_loc: 0 to 0+020150
  DW_CFA_advance_loc: 0 to 0+020150
  DW_CFA_advance_loc: 0 to 0+020150

# FDE for .discard removed
# zPR2 removed
0+01c0 0+001c 0+0044 FDE cie=0+0180 pc=0+020160..0+020190
  DW_CFA_advance_loc: 0 to 0+020160
  DW_CFA_advance_loc: 0 to 0+020160
  DW_CFA_advance_loc: 0 to 0+020160
  DW_CFA_advance_loc: 0 to 0+020160
  DW_CFA_advance_loc: 0 to 0+020160
  DW_CFA_advance_loc: 0 to 0+020160
  DW_CFA_advance_loc: 0 to 0+020160

0+01e0 0+001c 0+0064 FDE cie=0+0180 pc=0+020190..0+0201d0
  DW_CFA_advance_loc: 0 to 0+020190
  DW_CFA_advance_loc: 0 to 0+020190
  DW_CFA_advance_loc: 0 to 0+020190
  DW_CFA_advance_loc: 0 to 0+020190
  DW_CFA_advance_loc: 0 to 0+020190
  DW_CFA_advance_loc: 0 to 0+020190
  DW_CFA_advance_loc: 0 to 0+020190

0+0200 0+001c 0+0204 FDE cie=0+0000 pc=0+0201d0..0+0201e0
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

# basic1 removed, followed by repeat of above
0+0220 0+001c 0+0224 FDE cie=0+0000 pc=0+0201e0..0+0201f0
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

0+0240 0+001c 0+0244 FDE cie=0+0000 pc=0+0201f0..0+020210
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

0+0260 0+001c 0+0264 FDE cie=0+0000 pc=0+020210..0+020240
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

0+0280 0+001c 0+0284 FDE cie=0+0000 pc=0+020240..0+020280
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

0+02a0 0+001c 0+02a4 FDE cie=0+0000 pc=0+020280..0+0202d0
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

0+02c0 0+001c 0+020c FDE cie=0+00b8 pc=0+0202d0..0+0202e0
  DW_CFA_advance_loc: 0 to 0+0202d0
  DW_CFA_advance_loc: 0 to 0+0202d0
  DW_CFA_advance_loc: 0 to 0+0202d0
  DW_CFA_advance_loc: 0 to 0+0202d0
  DW_CFA_advance_loc: 0 to 0+0202d0
  DW_CFA_advance_loc: 0 to 0+0202d0
  DW_CFA_advance_loc: 0 to 0+0202d0

0+02e0 0+001c 0+022c FDE cie=0+00b8 pc=0+0202e0..0+020300
  DW_CFA_advance_loc: 0 to 0+0202e0
  DW_CFA_advance_loc: 0 to 0+0202e0
  DW_CFA_advance_loc: 0 to 0+0202e0
  DW_CFA_advance_loc: 0 to 0+0202e0
  DW_CFA_advance_loc: 0 to 0+0202e0
  DW_CFA_advance_loc: 0 to 0+0202e0
  DW_CFA_advance_loc: 0 to 0+0202e0

0+0300 0+001c 0+01e4 FDE cie=0+0120 pc=0+020300..0+020310
  DW_CFA_advance_loc: 0 to 0+020300
  DW_CFA_advance_loc: 0 to 0+020300
  DW_CFA_advance_loc: 0 to 0+020300
  DW_CFA_advance_loc: 0 to 0+020300
  DW_CFA_advance_loc: 0 to 0+020300
  DW_CFA_advance_loc: 0 to 0+020300
  DW_CFA_advance_loc: 0 to 0+020300

0+0320 0+001c 0+0204 FDE cie=0+0120 pc=0+020310..0+020330
  DW_CFA_advance_loc: 0 to 0+020310
  DW_CFA_advance_loc: 0 to 0+020310
  DW_CFA_advance_loc: 0 to 0+020310
  DW_CFA_advance_loc: 0 to 0+020310
  DW_CFA_advance_loc: 0 to 0+020310
  DW_CFA_advance_loc: 0 to 0+020310
  DW_CFA_advance_loc: 0 to 0+020310

0+0340 0+001c 0+01c4 FDE cie=0+0180 pc=0+020330..0+020340
  DW_CFA_advance_loc: 0 to 0+020330
  DW_CFA_advance_loc: 0 to 0+020330
  DW_CFA_advance_loc: 0 to 0+020330
  DW_CFA_advance_loc: 0 to 0+020330
  DW_CFA_advance_loc: 0 to 0+020330
  DW_CFA_advance_loc: 0 to 0+020330
  DW_CFA_advance_loc: 0 to 0+020330

0+0360 0+001c 0+01e4 FDE cie=0+0180 pc=0+020340..0+020370
  DW_CFA_advance_loc: 0 to 0+020340
  DW_CFA_advance_loc: 0 to 0+020340
  DW_CFA_advance_loc: 0 to 0+020340
  DW_CFA_advance_loc: 0 to 0+020340
  DW_CFA_advance_loc: 0 to 0+020340
  DW_CFA_advance_loc: 0 to 0+020340
  DW_CFA_advance_loc: 0 to 0+020340

0+0380 0+001c 0+0204 FDE cie=0+0180 pc=0+020370..0+0203b0
  DW_CFA_advance_loc: 0 to 0+020370
  DW_CFA_advance_loc: 0 to 0+020370
  DW_CFA_advance_loc: 0 to 0+020370
  DW_CFA_advance_loc: 0 to 0+020370
  DW_CFA_advance_loc: 0 to 0+020370
  DW_CFA_advance_loc: 0 to 0+020370
  DW_CFA_advance_loc: 0 to 0+020370

0+03a0 0+001c 0+03a4 FDE cie=0+0000 pc=0+0203b0..0+0203c0
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

@


1.7
log
@	gas/testsuite/
	* gas/mips/mips.exp: Set has_newabi for all Linux targets.
	* gas/mips/cfi-n64-1.d: Adjust for targets that do not infer the
	ISA from the ABI.
	* gas/mips/elf-rel-got-n32.d: Likewise.
	* gas/mips/elf-rel-got-n64.d: Likewise.
	* gas/mips/elf-rel-xgot-n32.d: Likewise.
	* gas/mips/elf-rel-xgot-n64.d: Likewise.
	* gas/mips/elf-rel18.d: Likewise.
	* gas/mips/elf-rel28-n32.d: Likewise.
	* gas/mips/elf-rel28-n64.d: Likewise.
	* gas/mips/jal-newabi.d: Likewise.
	* gas/mips/ldstla-n64-shared.d: Likewise.
	* gas/mips/ldstla-n64-sym32.d: Likewise.
	* gas/mips/ldstla-n64.d: Likewise.
	* gas/mips/macro-warn-1-n32.d: Likewise.
	* gas/mips/macro-warn-2-n32.d: Likewise.
	* gas/mips/n32-consec.d: Likewise.

	ld/testsuite/
	* ld-mips-elf/mips-elf.exp: Set has_newabi for all Linux targets.
	Adjust abi_asflags for targets that do not infer the ISA from the
	ABI.
	* ld-mips-elf/eh-frame1-n32.d: Adjust for targets that do not
	infer the ISA from the ABI.
	* ld-mips-elf/eh-frame1-n64.d: Likewise.
	* ld-mips-elf/eh-frame2-n32.d: Likewise.
	* ld-mips-elf/eh-frame2-n64.d: Likewise.
	* ld-mips-elf/elf-rel-got-n32-embed.d: Likewise.
	* ld-mips-elf/elf-rel-got-n32.d: Likewise.
	* ld-mips-elf/elf-rel-got-n64-embed.d: Likewise.
	* ld-mips-elf/elf-rel-got-n64-linux.d: Likewise.
	* ld-mips-elf/elf-rel-got-n64.d: Likewise.
	* ld-mips-elf/elf-rel-xgot-n32-embed.d: Likewise.
	* ld-mips-elf/elf-rel-xgot-n32.d: Likewise.
	* ld-mips-elf/elf-rel-xgot-n64-embed.d: Likewise.
	* ld-mips-elf/elf-rel-xgot-n64-linux.d: Likewise.
	* ld-mips-elf/elf-rel-xgot-n64.d: Likewise.
	* ld-mips-elf/emit-relocs-1.d: Likewise.
	* ld-mips-elf/got-page-2.d: Likewise.
	* ld-mips-elf/no-shared-1-n32.d: Likewise.
	* ld-mips-elf/no-shared-1-n64.d: Likewise.
	* ld-mips-elf/rel32-n32.d: Likewise.
	* ld-mips-elf/rel64.d: Likewise.
	* ld-mips-elf/relax-jalr-n32-shared.d: Likewise.
	* ld-mips-elf/relax-jalr-n32.d: Likewise.
	* ld-mips-elf/relax-jalr-n64-shared.d: Likewise.
	* ld-mips-elf/relax-jalr-n64.d: Likewise.
	* ld-mips-elf/reloc-1-n32.d: Likewise.
	* ld-mips-elf/reloc-1-n64.d: Likewise.
	* ld-mips-elf/textrel-1.d: Likewise.
@
text
@d11 1
a11 1
000000000000  [0-9a-f]+ R_MIPS_NONE *
d15 1
a15 1
000000030148  [0-9a-f]+ R_MIPS_REL32 *
d18 1
a18 1
000000030168  [0-9a-f]+ R_MIPS_REL32 *
d21 1
a21 1
000000030308  [0-9a-f]+ R_MIPS_REL32 *
d24 1
a24 1
000000030328  [0-9a-f]+ R_MIPS_REL32 *
d27 1
a27 1
0000000300cb  [0-9a-f]+ R_MIPS_REL32      0000000000000000 foo
d30 1
a30 1
000000030138  [0-9a-f]+ R_MIPS_REL32      0000000000000000 foo
d33 1
a33 1
000000030192  [0-9a-f]+ R_MIPS_REL32      0000000000000000 foo
d38 1
a38 1
00000000 00000014 00000000 CIE
d46 3
a48 3
  DW_CFA_advance_loc: 0 to 00000000
  DW_CFA_advance_loc: 0 to 00000000
  DW_CFA_advance_loc: 0 to 00000000
d54 1
a54 1
00000018 0000001c 0000001c FDE cie=00000000 pc=00020000..00020010
d63 1
a63 1
00000038 0000001c 0000003c FDE cie=00000000 pc=00020010..00020030
d73 1
a73 1
00000058 0000001c 0000005c FDE cie=00000000 pc=00020030..00020060
d83 1
a83 1
00000078 0000001c 0000007c FDE cie=00000000 pc=00020060..000200a0
d93 1
a93 1
00000098 0000001c 0000009c FDE cie=00000000 pc=000200a0..000200f0
d102 1
a102 1
000000b8 00000024 00000000 CIE
d110 7
a116 7
  DW_CFA_advance_loc: 0 to 00000000
  DW_CFA_advance_loc: 0 to 00000000
  DW_CFA_advance_loc: 0 to 00000000
  DW_CFA_advance_loc: 0 to 00000000
  DW_CFA_advance_loc: 0 to 00000000
  DW_CFA_advance_loc: 0 to 00000000
  DW_CFA_advance_loc: 0 to 00000000
d124 8
a131 8
000000e0 0000001c 0000002c FDE cie=000000b8 pc=000200f0..00020100
  DW_CFA_advance_loc: 0 to 000200f0
  DW_CFA_advance_loc: 0 to 000200f0
  DW_CFA_advance_loc: 0 to 000200f0
  DW_CFA_advance_loc: 0 to 000200f0
  DW_CFA_advance_loc: 0 to 000200f0
  DW_CFA_advance_loc: 0 to 000200f0
  DW_CFA_advance_loc: 0 to 000200f0
d133 8
a140 8
00000100 0000001c 0000004c FDE cie=000000b8 pc=00020100..00020120
  DW_CFA_advance_loc: 0 to 00020100
  DW_CFA_advance_loc: 0 to 00020100
  DW_CFA_advance_loc: 0 to 00020100
  DW_CFA_advance_loc: 0 to 00020100
  DW_CFA_advance_loc: 0 to 00020100
  DW_CFA_advance_loc: 0 to 00020100
  DW_CFA_advance_loc: 0 to 00020100
d142 1
a142 1
00000120 0000001c 00000000 CIE
d151 17
a167 17
00000140 0000001c 00000024 FDE cie=00000120 pc=00020120..00020130
  DW_CFA_advance_loc: 0 to 00020120
  DW_CFA_advance_loc: 0 to 00020120
  DW_CFA_advance_loc: 0 to 00020120
  DW_CFA_advance_loc: 0 to 00020120
  DW_CFA_advance_loc: 0 to 00020120
  DW_CFA_advance_loc: 0 to 00020120
  DW_CFA_advance_loc: 0 to 00020120

00000160 0000001c 00000044 FDE cie=00000120 pc=00020130..00020150
  DW_CFA_advance_loc: 0 to 00020130
  DW_CFA_advance_loc: 0 to 00020130
  DW_CFA_advance_loc: 0 to 00020130
  DW_CFA_advance_loc: 0 to 00020130
  DW_CFA_advance_loc: 0 to 00020130
  DW_CFA_advance_loc: 0 to 00020130
  DW_CFA_advance_loc: 0 to 00020130
d169 1
a169 1
00000180 0000001c 00000000 CIE
d177 14
a190 14
  DW_CFA_advance_loc: 0 to 00000000
  DW_CFA_advance_loc: 0 to 00000000
  DW_CFA_advance_loc: 0 to 00000000
  DW_CFA_advance_loc: 0 to 00000000
  DW_CFA_advance_loc: 0 to 00000000

000001a0 0000001c 00000024 FDE cie=00000180 pc=00020150..00020160
  DW_CFA_advance_loc: 0 to 00020150
  DW_CFA_advance_loc: 0 to 00020150
  DW_CFA_advance_loc: 0 to 00020150
  DW_CFA_advance_loc: 0 to 00020150
  DW_CFA_advance_loc: 0 to 00020150
  DW_CFA_advance_loc: 0 to 00020150
  DW_CFA_advance_loc: 0 to 00020150
d194 17
a210 17
000001c0 0000001c 00000044 FDE cie=00000180 pc=00020160..00020190
  DW_CFA_advance_loc: 0 to 00020160
  DW_CFA_advance_loc: 0 to 00020160
  DW_CFA_advance_loc: 0 to 00020160
  DW_CFA_advance_loc: 0 to 00020160
  DW_CFA_advance_loc: 0 to 00020160
  DW_CFA_advance_loc: 0 to 00020160
  DW_CFA_advance_loc: 0 to 00020160

000001e0 0000001c 00000064 FDE cie=00000180 pc=00020190..000201d0
  DW_CFA_advance_loc: 0 to 00020190
  DW_CFA_advance_loc: 0 to 00020190
  DW_CFA_advance_loc: 0 to 00020190
  DW_CFA_advance_loc: 0 to 00020190
  DW_CFA_advance_loc: 0 to 00020190
  DW_CFA_advance_loc: 0 to 00020190
  DW_CFA_advance_loc: 0 to 00020190
d212 1
a212 1
00000200 0000001c 00000204 FDE cie=00000000 pc=000201d0..000201e0
d222 1
a222 1
00000220 0000001c 00000224 FDE cie=00000000 pc=000201e0..000201f0
d231 1
a231 1
00000240 0000001c 00000244 FDE cie=00000000 pc=000201f0..00020210
d240 1
a240 1
00000260 0000001c 00000264 FDE cie=00000000 pc=00020210..00020240
d249 1
a249 1
00000280 0000001c 00000284 FDE cie=00000000 pc=00020240..00020280
d258 1
a258 1
000002a0 0000001c 000002a4 FDE cie=00000000 pc=00020280..000202d0
d267 8
a274 8
000002c0 0000001c 0000020c FDE cie=000000b8 pc=000202d0..000202e0
  DW_CFA_advance_loc: 0 to 000202d0
  DW_CFA_advance_loc: 0 to 000202d0
  DW_CFA_advance_loc: 0 to 000202d0
  DW_CFA_advance_loc: 0 to 000202d0
  DW_CFA_advance_loc: 0 to 000202d0
  DW_CFA_advance_loc: 0 to 000202d0
  DW_CFA_advance_loc: 0 to 000202d0
d276 8
a283 8
000002e0 0000001c 0000022c FDE cie=000000b8 pc=000202e0..00020300
  DW_CFA_advance_loc: 0 to 000202e0
  DW_CFA_advance_loc: 0 to 000202e0
  DW_CFA_advance_loc: 0 to 000202e0
  DW_CFA_advance_loc: 0 to 000202e0
  DW_CFA_advance_loc: 0 to 000202e0
  DW_CFA_advance_loc: 0 to 000202e0
  DW_CFA_advance_loc: 0 to 000202e0
d285 8
a292 8
00000300 0000001c 000001e4 FDE cie=00000120 pc=00020300..00020310
  DW_CFA_advance_loc: 0 to 00020300
  DW_CFA_advance_loc: 0 to 00020300
  DW_CFA_advance_loc: 0 to 00020300
  DW_CFA_advance_loc: 0 to 00020300
  DW_CFA_advance_loc: 0 to 00020300
  DW_CFA_advance_loc: 0 to 00020300
  DW_CFA_advance_loc: 0 to 00020300
d294 8
a301 8
00000320 0000001c 00000204 FDE cie=00000120 pc=00020310..00020330
  DW_CFA_advance_loc: 0 to 00020310
  DW_CFA_advance_loc: 0 to 00020310
  DW_CFA_advance_loc: 0 to 00020310
  DW_CFA_advance_loc: 0 to 00020310
  DW_CFA_advance_loc: 0 to 00020310
  DW_CFA_advance_loc: 0 to 00020310
  DW_CFA_advance_loc: 0 to 00020310
d303 8
a310 8
00000340 0000001c 000001c4 FDE cie=00000180 pc=00020330..00020340
  DW_CFA_advance_loc: 0 to 00020330
  DW_CFA_advance_loc: 0 to 00020330
  DW_CFA_advance_loc: 0 to 00020330
  DW_CFA_advance_loc: 0 to 00020330
  DW_CFA_advance_loc: 0 to 00020330
  DW_CFA_advance_loc: 0 to 00020330
  DW_CFA_advance_loc: 0 to 00020330
d312 8
a319 8
00000360 0000001c 000001e4 FDE cie=00000180 pc=00020340..00020370
  DW_CFA_advance_loc: 0 to 00020340
  DW_CFA_advance_loc: 0 to 00020340
  DW_CFA_advance_loc: 0 to 00020340
  DW_CFA_advance_loc: 0 to 00020340
  DW_CFA_advance_loc: 0 to 00020340
  DW_CFA_advance_loc: 0 to 00020340
  DW_CFA_advance_loc: 0 to 00020340
d321 8
a328 8
00000380 0000001c 00000204 FDE cie=00000180 pc=00020370..000203b0
  DW_CFA_advance_loc: 0 to 00020370
  DW_CFA_advance_loc: 0 to 00020370
  DW_CFA_advance_loc: 0 to 00020370
  DW_CFA_advance_loc: 0 to 00020370
  DW_CFA_advance_loc: 0 to 00020370
  DW_CFA_advance_loc: 0 to 00020370
  DW_CFA_advance_loc: 0 to 00020370
d330 1
a330 1
000003a0 0000001c 000003a4 FDE cie=00000000 pc=000203b0..000203c0
@


1.6
log
@bfd/
	* elf-eh-frame.c (make_pc_relative): New function.
	(_bfd_elf_write_section_eh_frame): Use it.

ld/testsuite/
	* ld-mips-elf/eh-frame1-n32.d: Expect PC-relative encodings
	to include DW_EH_PE_sdata4.
	* ld-mips-elf/eh-frame2-n32.d: Likewise.
	* ld-mips-elf/eh-frame1-n64.d: Expect PC-relative encodings
	to include DW_EH_PE_sdata8.
	* ld-mips-elf/eh-frame2-n64.d: Likewise.
@
text
@d4 1
a4 1
#as: -EB -64 --defsym alignment=3 --defsym fill=0x40
@


1.6.8.1
log
@bfd/
2012-08-09  Maciej W. Rozycki  <macro@@codesourcery.com>

	* elfxx-mips.c (LA25_LUI_MICROMIPS_1, LA25_LUI_MICROMIPS_2):
	Remove macros, folding them into...
	(LA25_LUI_MICROMIPS): ... this new macro.
	(LA25_J_MICROMIPS_1, LA25_J_MICROMIPS_2): Likewise into...
	(LA25_J_MICROMIPS): ... this new macro.
	(LA25_ADDIU_MICROMIPS_1, LA25_ADDIU_MICROMIPS_2): Likewise
	into...
	(LA25_ADDIU_MICROMIPS): ... this new macro.
	(bfd_put_micromips_32, bfd_get_micromips_32): New functions.
	(mips_elf_create_la25_stub): Use them.
	(check_br32_dslot, check_br32, check_relocated_bzc): Likewise.
	(_bfd_mips_elf_relax_section): Likewise.

gas/
	* config/tc-mips.c (NO_ISA_COP, COP_INSN): Remove macros.
	(is_opcode_valid): Remove coprocessor instruction exclusions.
	Replace OPCODE_IS_MEMBER with opcode_is_member.
	(is_opcode_valid_16): Replace OPCODE_IS_MEMBER with
	opcode_is_member.
	(macro): Remove coprocessor instruction exclusions.

gas/
	* gas/mips/mips.exp: Set has_newabi for all Linux targets.
	* gas/mips/cfi-n64-1.d: Adjust for targets that do not infer the
	ISA from the ABI.
	* gas/mips/elf-rel-got-n32.d: Likewise.
	* gas/mips/elf-rel-got-n64.d: Likewise.
	* gas/mips/elf-rel-xgot-n32.d: Likewise.
	* gas/mips/elf-rel-xgot-n64.d: Likewise.
	* gas/mips/elf-rel18.d: Likewise.
	* gas/mips/elf-rel28-n32.d: Likewise.
	* gas/mips/elf-rel28-n64.d: Likewise.
	* gas/mips/jal-newabi.d: Likewise.
	* gas/mips/ldstla-n64-shared.d: Likewise.
	* gas/mips/ldstla-n64-sym32.d: Likewise.
	* gas/mips/ldstla-n64.d: Likewise.
	* gas/mips/macro-warn-1-n32.d: Likewise.
	* gas/mips/macro-warn-2-n32.d: Likewise.
	* gas/mips/n32-consec.d: Likewise.

include/
2012-08-13  Richard Sandiford  <rdsandiford@@googlemail.com>
            Maciej W. Rozycki  <macro@@codesourcery.com>

	* mips.h (mips_opcode): Add the exclusions field.
	(OPCODE_IS_MEMBER): Remove macro.
	(cpu_is_member): New inline function.
	(opcode_is_member): Likewise.

ld/
	* emulparams/elf32bmip.sh: Make _gp hidden.
	* emulparams/elf32bmipn32-defs.sh: Likewise.
	* emulparams/elf32mipswindiss.sh: Likewise.
	* scripttempl/mips.sc: Likewise.

ld/
2012-08-28  Maciej W. Rozycki  <macro@@codesourcery.com>

	* ld-elf/export-class.sd: New test.
	* ld-elf/export-class.vd: New test.
	* ld-elf/export-class-def.s: New test source.
	* ld-elf/export-class-dep.s: New test source.
	* ld-elf/export-class-lib.s: New test source.
	* ld-elf/export-class-ref.s: New test source.
	* ld-elf/export-class-lib.ver: New test version script.
	* ld-elf/export-class.exp: New test script.
	* ld-arm/arm-export-class.rd: New test.
	* ld-arm/arm-export-class.xd: New test.
	* ld-arm/export-class.exp: New test script.
	* ld-i386/i386-export-class.rd: New test.
	* ld-i386/i386-export-class.xd: New test.
	* ld-i386/export-class.exp: New test script.
	* ld-mips-elf/mips-32-export-class.rd: New test.
	* ld-mips-elf/mips-32-export-class.xd: New test.
	* ld-mips-elf/mips-64-export-class.rd: New test.
	* ld-mips-elf/mips-64-export-class.xd: New test.
	* ld-mips-elf/export-class.exp: New test script.
	* ld-powerpc/powerpc-32-export-class.rd: New test.
	* ld-powerpc/powerpc-32-export-class.xd: New test.
	* ld-powerpc/powerpc-64-export-class.rd: New test.
	* ld-powerpc/powerpc-64-export-class.xd: New test.
	* ld-powerpc/export-class.exp: New test script.
	* ld-x86-64/x86-64-64-export-class.rd: New test.
	* ld-x86-64/x86-64-x32-export-class.rd: New test.
	* ld-x86-64/export-class.exp: New test script.

opcodes/
2012-08-14  Maciej W. Rozycki  <macro@@codesourcery.com>

	* mips-dis.c (print_insn_args): Add GET_OP and GET_OP_S local
	macros, use local variables for info struct member accesses,
	update the type of the variable used to hold the instruction
	word.
	(print_insn_mips, print_mips16_insn_arg): Likewise.
	(print_insn_mips16): Add GET_OP and GET_OP_S local macros, use
	local variables for info struct member accesses.
	(print_insn_micromips): Add GET_OP_S local macro.
	(_print_insn_mips): Update the type of the variable used to hold
	the instruction word.
@
text
@d4 1
a4 1
#as: -march=from-abi -EB -64 --defsym alignment=3 --defsym fill=0x40
@


1.5
log
@gas/testsuite/
	* gas/mips/mips16-dwarf2-n32.d: Expect odd addresses.

ld/testsuite/
	* ld-mips-elf/eh-frame1-n32.d: Change "the section \.eh_frame"
	to "the \.eh_frame section".
	* ld-mips-elf/eh-frame1-n64.d: Likewise.
	* ld-mips-elf/eh-frame2-n32.d: Likewise.
	* ld-mips-elf/eh-frame2-n64.d: Likewise.
	* ld-mips-elf/eh-frame3.d: Likewise.
	* ld-mips-elf/eh-frame4.d: Likewise.
	* ld-mips-elf/elf-rel-got-n32.d: Expect bals.
	* ld-mips-elf/elf-rel-xgot-n32.d: Likewise.
	* ld-mips-elf/mips-elf.exp: Force the MIPS16 PIC tests to use -mips1.
@
text
@d44 1
a44 1
  Augmentation data:     10
d108 1
a108 1
  Augmentation data:     10 00 00 00 00 00 00 00 00 00
d175 1
a175 1
  Augmentation data:     00 00 00 00 00 00 00 00 00 10
@


1.4
log
@            * dwarf.c (display_debug_frames): Change text for uniformity.
            (process_debug_info): Likewise.
            (display_debug_aranges): Likewise.  Indent address output.
            (display_debug_pubnames): Print offset in hex.

            * binutils-all/objdump.W: Update.

            * gas/cfi/cfi-alpha-1.d, gas/cfi/cfi-alpha-3.d,
            gas/cfi/cfi-arm-1.d, gas/cfi/cfi-common-1.d,
            gas/cfi/cfi-common-2.d, gas/cfi/cfi-common-3.d,
            gas/cfi/cfi-common-4.d, gas/cfi/cfi-common-5.d,
            gas/cfi/cfi-common-6.d, gas/cfi/cfi-hppa-1.d,
            gas/cfi/cfi-i386-2.d, gas/cfi/cfi-i386.d, gas/cfi/cfi-m68k.d,
            gas/cfi/cfi-mips-1.d, gas/cfi/cfi-ppc-1.d, gas/cfi/cfi-s390-1.d,
            gas/cfi/cfi-s390x-1.d, gas/cfi/cfi-sh-1.d, gas/cfi/cfi-sparc-1.d,
            gas/cfi/cfi-sparc64-1.d, gas/cfi/cfi-x86_64.d: Update for readelf
            change.

            * ld-elf/eh1.d, ld-elf/eh2.d, ld-elf/eh3.d, ld-elf/eh4.d,
            ld-elf/eh5.d, ld-elf/eh6.d, ld-mips-elf/eh-frame1-n32.d,
            ld-mips-elf/eh-frame1-n64.d, ld-mips-elf/eh-frame2-n32.d,
            ld-mips-elf/eh-frame2-n64.d, ld-mips-elf/eh-frame3.d,
            ld-mips-elf/eh-frame4.d: Update for readelf change.
@
text
@d36 1
a36 1
Contents of the section \.eh_frame:
@


1.4.6.1
log
@gas/testsuite/
	* gas/mips/mips16-dwarf2-n32.d: Expect odd addresses.

ld/testsuite/
	* ld-mips-elf/eh-frame1-n32.d: Change "the section \.eh_frame"
	to "the \.eh_frame section".
	* ld-mips-elf/eh-frame1-n64.d: Likewise.
	* ld-mips-elf/eh-frame2-n32.d: Likewise.
	* ld-mips-elf/eh-frame2-n64.d: Likewise.
	* ld-mips-elf/eh-frame3.d: Likewise.
	* ld-mips-elf/eh-frame4.d: Likewise.
	* ld-mips-elf/elf-rel-got-n32.d: Expect bals.
	* ld-mips-elf/elf-rel-xgot-n32.d: Likewise.
	* ld-mips-elf/mips-elf.exp: Force the MIPS16 PIC tests to use -mips1.
@
text
@d36 1
a36 1
Contents of the \.eh_frame section:
@


1.3
log
@ld/testsuite/
	* ld-mips-elf/eh-frame1-n32.d: Expect a warning about .eh_frame_hdr.
	Remove duplicate CIEs.  Adjust relocation addresses and .eh_frame
	offsets accordingly.  Do not allow there to be any trailing
	R_MIPS_NONE relocations.
	* ld-mips-elf/eh-frame1-n64.d: Likewise.
	* ld-mips-elf/eh-frame2-n32.d: Likewise.
	* ld-mips-elf/eh-frame2-n64.d: Likewise.
@
text
@d36 1
a36 1
The section \.eh_frame contains:
@


1.2
log
@bfd/
	* elf-bfd.h (struct elf_link_hash_table): Reorder.  Add
	text_index_section and data_index_section.
	(struct elf_backend_data): Add elf_backend_init_index_section.
	(_bfd_elf_init_1_index_section): Declare.
	(_bfd_elf_init_2_index_sections): Declare.
	* elfxx-target.h (elf_backend_init_index_section): Define.
	(elfNN_bed): Init new field.
	* elflink.c (_bfd_elf_link_omit_section_dynsym): Keep first tls
	section and text_index_section plus data_index_section.
	(_bfd_elf_link_renumber_dynsyms): Clear dynindx on omitted sections.
	(_bfd_elf_init_1_index_section): New function.
	(_bfd_elf_init_2_index_sections): New function.
	(bfd_elf_size_dynsym_hash_dynstr): Call elf_backend_init_index_section.
	(elf_link_input_bfd): When emitting relocs, use text_index_section
	and data_index_section for removed sections.
	* elf-m10300.c (elf_backend_omit_section_dynsym): Define.
	* elf32-i386.c: Likewise.
	* elf32-m32r.c: Likewise.
	* elf32-sh.c: Likewise.
	* elf32-xstormy16.c: Likewise.
	* elf32-xtensa.c: Likewise.
	* elf64-alpha.c: Likewise.
	* elf64-hppa.c: Likewise.
	* elf64-mmix.c: Likewise.
	* elf64-sh64.c: Likewise.
	* elfxx-ia64.c: Likewise.
	* elf32-arm.c (elf32_arm_final_link_relocate): Use text_index_section
	and data_index_section sym for relocs against sections with no dynamic
	section sym.
	(elf_backend_init_index_section): Define.
	* elf32-cris.c: Similarly.
	* elf32-hppa.c: Similarly.
	* elf32-i370.c: Similarly.
	* elf32-m68k.c: Similarly.
	* elf32-mips.c: Similarly.
	* elf32-ppc.c: Similarly.
	* elf32-s390.c: Similarly.
	* elf32-sparc.c: Similarly.
	* elf32-vax.c: Similarly.
	* elf64-mips.c: Similarly.
	* elf64-ppc.c: Similarly.
	* elf64-s390.c: Similarly.
	* elf64-sparc.c: Similarly.
	* elf64-x86-64.c: Similarly.
	* elfn32-mips.c: Similarly.
	* elfxx-mips.c: Similarly.
	* elfxx-sparc.c: Similarly.
	* linker.c (fix_syms): Base symbols in removed sections on
	previous section in preference to using absolute section.

ld/
	* ldlang.c (strip_excluded_output_sections): Do strip sections
	that define syms, but don't ignore them.
	* ld.texinfo (Output Section Discarding): Revise.
	* emultempl/armcoff.em (gld${EMULATION_NAME}_finish): Always call
	finish_default.

ld/testsuite/
	Update for section sym changes.
@
text
@d7 1
d21 1
a21 2
# Likewise CIE 0x340
000000030368  [0-9a-f]+ R_MIPS_REL32 *
d24 1
a24 1
000000030388  [0-9a-f]+ R_MIPS_REL32 *
a35 10
0000000302eb  [0-9a-f]+ R_MIPS_REL32      0000000000000000 foo
 *Type2: R_MIPS_64 *
 *Type3: R_MIPS_NONE *
000000030358  [0-9a-f]+ R_MIPS_REL32      0000000000000000 foo
 *Type2: R_MIPS_64 *
 *Type3: R_MIPS_NONE *
0000000303b2  [0-9a-f]+ R_MIPS_REL32      0000000000000000 foo
 *Type2: R_MIPS_64 *
 *Type3: R_MIPS_NONE *
#...
d212 1
a212 17
00000200 00000014 00000000 CIE
  Version:               1
  Augmentation:          "zR"
  Code alignment factor: 1
  Data alignment factor: 4
  Return address column: 31
  Augmentation data:     10

  DW_CFA_advance_loc: 0 to 00000000
  DW_CFA_advance_loc: 0 to 00000000
  DW_CFA_advance_loc: 0 to 00000000
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000218 0000001c 0000001c FDE cie=00000200 pc=000201d0..000201e0
d222 1
a222 1
00000238 0000001c 0000003c FDE cie=00000200 pc=000201e0..000201f0
d231 1
a231 1
00000258 0000001c 0000005c FDE cie=00000200 pc=000201f0..00020210
d240 1
a240 1
00000278 0000001c 0000007c FDE cie=00000200 pc=00020210..00020240
d249 1
a249 1
00000298 0000001c 0000009c FDE cie=00000200 pc=00020240..00020280
d258 1
a258 5
000002b8 0000001c 000000bc FDE cie=00000200 pc=00020280..000202d0
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
a261 18

000002d8 00000024 00000000 CIE
  Version:               1
  Augmentation:          "zRP"
  Code alignment factor: 1
  Data alignment factor: 4
  Return address column: 31
  Augmentation data:     10 00 00 00 00 00 00 00 00 00

  DW_CFA_advance_loc: 0 to 00000000
  DW_CFA_advance_loc: 0 to 00000000
  DW_CFA_advance_loc: 0 to 00000000
  DW_CFA_advance_loc: 0 to 00000000
  DW_CFA_advance_loc: 0 to 00000000
  DW_CFA_advance_loc: 0 to 00000000
  DW_CFA_advance_loc: 0 to 00000000
  DW_CFA_nop
  DW_CFA_nop
d267 1
a267 1
00000300 0000001c 0000002c FDE cie=000002d8 pc=000202d0..000202e0
d276 1
a276 1
00000320 0000001c 0000004c FDE cie=000002d8 pc=000202e0..00020300
d285 1
a285 10
00000340 0000001c 00000000 CIE
  Version:               1
  Augmentation:          "zP"
  Code alignment factor: 1
  Data alignment factor: 4
  Return address column: 31
  Augmentation data:     50 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00


00000360 0000001c 00000024 FDE cie=00000340 pc=00020300..00020310
d294 1
a294 1
00000380 0000001c 00000044 FDE cie=00000340 pc=00020310..00020330
d303 1
a303 15
000003a0 0000001c 00000000 CIE
  Version:               1
  Augmentation:          "zPR"
  Code alignment factor: 1
  Data alignment factor: 4
  Return address column: 31
  Augmentation data:     00 00 00 00 00 00 00 00 00 10

  DW_CFA_advance_loc: 0 to 00000000
  DW_CFA_advance_loc: 0 to 00000000
  DW_CFA_advance_loc: 0 to 00000000
  DW_CFA_advance_loc: 0 to 00000000
  DW_CFA_advance_loc: 0 to 00000000

000003c0 0000001c 00000024 FDE cie=000003a0 pc=00020330..00020340
d312 1
a312 1
000003e0 0000001c 00000044 FDE cie=000003a0 pc=00020340..00020370
d321 1
a321 1
00000400 0000001c 00000064 FDE cie=000003a0 pc=00020370..000203b0
d330 1
a330 17
00000420 00000014 00000000 CIE
  Version:               1
  Augmentation:          "zR"
  Code alignment factor: 1
  Data alignment factor: 4
  Return address column: 31
  Augmentation data:     10

  DW_CFA_advance_loc: 0 to 00000000
  DW_CFA_advance_loc: 0 to 00000000
  DW_CFA_advance_loc: 0 to 00000000
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000438 0000001c 0000001c FDE cie=00000420 pc=000203b0..000203c0
@


1.1
log
@	* elf-bfd.h (eh_cie_fde): Add new fields: add_augmentation_size and
	add_fde_encoding.  Remove need_relative.
	* elf-eh-frame.c (extra_augmentation_string_bytes)
	(extra_augmentation_data_bytes, size_of_output_cie_fde): New functions.
	(_bfd_elf_discard_section_eh_frame): Consider changing the FDE encoding
	in cases where the CIE has no existing 'R' augmentation.  Use
	size_of_output_cie_fde when assigning offsets.  Use the final offset
	as the new section size.
	(_bfd_elf_eh_frame_section_offset): Remove need_relative handling.
	Account for any extra augmentation bytes in the returned offset.
	(_bfd_elf_write_section_eh_frame): Rework so that the entries are
	moved before being modified.  Pad growing entries with DW_CFA_nops.
	Add 'z' and 'R' augmentations as directed by add_augmentation_size
	and add_fde_encoding.
@
text
@d10 1
a10 1
000000000000  000000000000 R_MIPS_NONE *
d14 1
a14 1
000000030148  000000001203 R_MIPS_REL32 *
d17 1
a17 1
000000030168  000000001203 R_MIPS_REL32 *
d21 1
a21 1
000000030368  000000001203 R_MIPS_REL32 *
d24 1
a24 1
000000030388  000000001203 R_MIPS_REL32 *
d27 1
a27 1
0000000300cb  000500001203 R_MIPS_REL32      0000000000000000 foo
d30 1
a30 1
000000030138  000500001203 R_MIPS_REL32      0000000000000000 foo
d33 1
a33 1
000000030192  000500001203 R_MIPS_REL32      0000000000000000 foo
d36 1
a36 1
0000000302eb  000500001203 R_MIPS_REL32      0000000000000000 foo
d39 1
a39 1
000000030358  000500001203 R_MIPS_REL32      0000000000000000 foo
d42 1
a42 1
0000000303b2  000500001203 R_MIPS_REL32      0000000000000000 foo
@

