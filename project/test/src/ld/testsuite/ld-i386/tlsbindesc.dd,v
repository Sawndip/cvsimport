head	1.8;
access;
symbols
	binutils-2_24-branch:1.8.0.2
	binutils-2_24-branchpoint:1.8
	binutils-2_21_1:1.4
	binutils-2_23_2:1.7
	binutils-2_23_1:1.7
	binutils-2_23:1.7
	binutils-2_23-branch:1.7.0.2
	binutils-2_23-branchpoint:1.7
	binutils-2_22_branch:1.5.0.4
	binutils-2_22:1.5
	binutils-2_22-branch:1.5.0.2
	binutils-2_22-branchpoint:1.5
	binutils-2_21:1.4
	binutils-2_21-branch:1.4.0.12
	binutils-2_21-branchpoint:1.4
	binutils-2_20_1:1.4
	binutils-2_20:1.4
	binutils-arc-20081103-branch:1.4.0.10
	binutils-arc-20081103-branchpoint:1.4
	binutils-2_20-branch:1.4.0.8
	binutils-2_20-branchpoint:1.4
	dje-cgen-play1-branch:1.4.0.6
	dje-cgen-play1-branchpoint:1.4
	arc-20081103-branch:1.4.0.4
	arc-20081103-branchpoint:1.4
	binutils-2_19_1:1.4
	binutils-2_19:1.4
	binutils-2_19-branch:1.4.0.2
	binutils-2_19-branchpoint:1.4
	binutils-2_18:1.3
	binutils-2_18-branch:1.3.0.2
	binutils-2_18-branchpoint:1.3
	binutils-csl-coldfire-4_1-32:1.1
	binutils-csl-sourcerygxx-4_1-32:1.1
	binutils-csl-innovasic-fido-3_4_4-33:1.1
	binutils-csl-coldfire-4_1-30:1.1
	binutils-csl-sourcerygxx-4_1-30:1.1
	binutils-csl-coldfire-4_1-28:1.1
	binutils-csl-sourcerygxx-4_1-29:1.1
	binutils-csl-sourcerygxx-4_1-28:1.1
	binutils-csl-arm-2006q3-27:1.1
	binutils-csl-sourcerygxx-4_1-27:1.1
	binutils-csl-arm-2006q3-26:1.1
	binutils-csl-sourcerygxx-4_1-26:1.1
	binutils-csl-sourcerygxx-4_1-25:1.1
	binutils-csl-sourcerygxx-4_1-24:1.1
	binutils-csl-sourcerygxx-4_1-23:1.1
	binutils-csl-sourcerygxx-4_1-21:1.1
	binutils-csl-arm-2006q3-21:1.1
	binutils-csl-sourcerygxx-4_1-22:1.1
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.1
	binutils-csl-sourcerygxx-4_1-20:1.1
	binutils-csl-arm-2006q3-19:1.1
	binutils-csl-sourcerygxx-4_1-19:1.1
	binutils-csl-sourcerygxx-4_1-18:1.1
	binutils-csl-renesas-4_1-9:1.1
	binutils-csl-renesas-4_1-8:1.1
	binutils-csl-renesas-4_1-7:1.1
	binutils-csl-renesas-4_1-6:1.1
	binutils-csl-sourcerygxx-4_1-17:1.1
	binutils-csl-sourcerygxx-4_1-14:1.1
	binutils-csl-sourcerygxx-4_1-15:1.1
	binutils-csl-sourcerygxx-4_1-13:1.1
	binutils-2_17:1.1
	binutils-csl-sourcerygxx-4_1-12:1.1
	binutils-csl-sourcerygxx-3_4_4-21:1.1
	binutils-csl-sourcerygxx-4_1-9:1.1
	binutils-csl-sourcerygxx-4_1-8:1.1
	binutils-csl-sourcerygxx-4_1-7:1.1
	binutils-csl-arm-2006q1-6:1.1
	binutils-csl-sourcerygxx-4_1-6:1.1
	binutils-csl-coldfire-4_1-11:1.1
	binutils-csl-sourcerygxx-3_4_4-19:1.1
	binutils-csl-coldfire-4_1-10:1.1
	binutils-csl-sourcerygxx-4_1-5:1.1
	binutils-csl-sourcerygxx-4_1-4:1.1
	binutils-csl-morpho-4_1-4:1.1
	binutils-csl-sourcerygxx-3_4_4-17:1.1
	binutils-2_17-branch:1.1.0.4
	binutils-2_17-branchpoint:1.1
	binutils-csl-2_17-branch:1.1.0.2
	binutils-csl-2_17-branchpoint:1.1
	binutils_latest_snapshot:1.8;
locks; strict;
comment	@# @;


1.8
date	2013.05.31.17.27.28;	author hjl;	state Exp;
branches;
next	1.7;

1.7
date	2012.04.03.16.01.36;	author roland;	state Exp;
branches;
next	1.6;

1.6
date	2012.01.31.17.54.38;	author hjl;	state Exp;
branches;
next	1.5;

1.5
date	2011.06.20.13.18.49;	author jakub;	state Exp;
branches;
next	1.4;

1.4
date	2008.07.28.18.07.05;	author aoliva;	state Exp;
branches;
next	1.3;

1.3
date	2007.04.27.04.22.00;	author hjl;	state Exp;
branches;
next	1.2;

1.2
date	2006.06.30.14.16.13;	author hjl;	state Exp;
branches;
next	1.1;

1.1
date	2006.01.18.21.07.49;	author aoliva;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Don't align text/data/bss sections for ELF

binutils/testsuite/

	* binutils-all/i386/compressed-1b.d: Updated for text/data/bss
	section alignment change.
	* binutils-all/i386/compressed-1c.d: Likewise.
	* binutils-all/x86-64/compressed-1b.d: Likewise.
	* binutils-all/x86-64/compressed-1c.d: Likewise.

gas/

	* config/tc-i386.c (md_begin): Don't align text/data/bss sections
	for ELF.

gas/testsuite/

	* gas/i386/size-3.d: Updated for text/data/bss section alignment
	change.
	* gas/i386/x86-64-size-1.d: Likewise.
	* gas/i386/x86-64-unwind.d: Likewise.
	* gas/i386/ilp32/x86-64-size-1.d: Likewise.
	* gas/i386/ilp32/x86-64-size-5.d: Likewise.
	* gas/i386/ilp32/x86-64-unwind.d: Likewise.

ld/testsuite/

	* ld-i386/pr12718.d: Updated for text/data/bss section alignment
	change.
	* ld-i386/tlsbindesc.dd: Likewise.
	* ld-i386/tlsbindesc.rd: Likewise.
	* ld-i386/tlsnopic.dd: Likewise.
	* ld-i386/tlspic.dd: Likewise.
	* ld-x86-64/ilp32-4.d: Likewise.
	* ld-x86-64/pr12718.d: Likewise.
	* ld-x86-64/split-by-file.rd: Likewise.
	* ld-x86-64/tlsbin.dd: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-x86-64/tlsbindesc.dd: Likewise.
	* ld-x86-64/tlsbindesc.rd: Likewise.
	* ld-x86-64/tlsdesc.dd: Likewise.
	* ld-x86-64/tlsdesc.rd: Likewise.
	* ld-x86-64/tlspic.dd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
@
text
@#source: tlsbindesc.s
#source: tlsbin.s
#as: --32
#ld: -melf_i386 tmpdir/libtlslib.so --no-ld-generated-unwind-info
#objdump: -drj.text
#target: i?86-*-*

# PT_TLS layout is:
# Offset from	Offset from	Name
# TCB base	TCB end
# 0x00		-0xa0		sg1..sg8
# 0x20		-0x80		sl1..sl8
# 0x40		-0x60		sh1..sh8
# 0x60		-0x40		bg1..bg8
# 0x80		-0x20		bl1..bl8

.*: +file format elf32-i386.*

Disassembly of section .text:

[0-9a-f]+ <fn2>:
 +[0-9a-f]+:	55[ 	]+push   %ebp
 +[0-9a-f]+:	89 e5[ 	]+mov    %esp,%ebp
 +[0-9a-f]+:	53[ 	]+push   %ebx
 +[0-9a-f]+:	50[ 	]+push   %eax
 +[0-9a-f]+:	e8 00 00 00 00[ 	]+call   [0-9a-f]+ <fn2\+0xa>
 +[0-9a-f]+:	5b[ 	]+pop    %ebx
 +[0-9a-f]+:	81 c3 ([0-9a-f]{2} ){4}[ 	]+add    \$0x[0-9a-f]*10fa,%ebx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  GD -> IE because variable is not defined in executable
 +[0-9a-f]+:	8b 83 f8 ff ff ff[ 	]+mov    -0x8\(%ebx\),%eax
#				->R_386_TLS_TPOFF32	sG1
 +[0-9a-f]+:	f7 d8[ 	]+neg    %eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  GD -> IE because variable is not defined in executable where
#  the variable is referenced through @@gottpoff too
 +[0-9a-f]+:	8b 83 e8 ff ff ff[ 	]+mov    -0x18\(%ebx\),%eax
#				->R_386_TLS_TPOFF32	sG2
 +[0-9a-f]+:	f7 d8[ 	]+neg    %eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  GD -> IE because variable is not defined in executable where
#  the variable is referenced through @@gotntpoff too
 +[0-9a-f]+:	8b 83 dc ff ff ff[ 	]+mov    -0x24\(%ebx\),%eax
#				->R_386_TLS_TPOFF	sG3
 +[0-9a-f]+:	66 90[ 	]+xchg   %ax,%ax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  GD -> IE because variable is not defined in executable where
#  the variable is referenced through @@gottpoff and @@gotntpoff too
 +[0-9a-f]+:	8b 83 f0 ff ff ff[ 	]+mov    -0x10\(%ebx\),%eax
#				->R_386_TLS_TPOFF32	sG4
 +[0-9a-f]+:	66 90[ 	]+xchg   %ax,%ax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  GD -> LE with global variable defined in executable
 +[0-9a-f]+:	8d 05 00 f0 ff ff[ 	]+lea    0xfffff000,%eax
#							sg1
 +[0-9a-f]+:	66 90[ 	]+xchg   %ax,%ax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  GD -> LE with local variable defined in executable
 +[0-9a-f]+:	8d 05 20 f0 ff ff[ 	]+lea    0xfffff020,%eax
#							sl1
 +[0-9a-f]+:	66 90[ 	]+xchg   %ax,%ax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  GD -> LE with hidden variable defined in executable
 +[0-9a-f]+:	8d 05 40 f0 ff ff[ 	]+lea    0xfffff040,%eax
#							sh1
 +[0-9a-f]+:	66 90[ 	]+xchg   %ax,%ax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  LD -> LE
 +[0-9a-f]+:	8d 05 00 00 00 00[ 	]+lea    0x0,%eax
 +[0-9a-f]+:	66 90[ 	]+xchg   %ax,%ax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	8d 90 20 f0 ff ff[ 	]+lea    -0xfe0\(%eax\),%edx
#							sl1
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	8d 88 24 f0 ff ff[ 	]+lea    -0xfdc\(%eax\),%ecx
#							sl2
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  LD -> LE against hidden variables
 +[0-9a-f]+:	8d 05 00 00 00 00[ 	]+lea    0x0,%eax
 +[0-9a-f]+:	66 90[ 	]+xchg   %ax,%ax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	8d 90 40 f0 ff ff[ 	]+lea    -0xfc0\(%eax\),%edx
#							sh1
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	8d 88 44 f0 ff ff[ 	]+lea    -0xfbc\(%eax\),%ecx
#							sh2
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gottpoff IE against global var
 +[0-9a-f]+:	65 8b 0d 00 00 00 00[ 	]+mov    %gs:0x0,%ecx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	2b 8b e8 ff ff ff[ 	]+sub    -0x18\(%ebx\),%ecx
#				->R_386_TLS_TPOFF32	sG2
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gottpoff IE against global var
 +[0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	2b 83 ec ff ff ff[ 	]+sub    -0x14\(%ebx\),%eax
#				->R_386_TLS_TPOFF32	sG4
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gotntpoff IE against global var
 +[0-9a-f]+:	65 8b 0d 00 00 00 00[ 	]+mov    %gs:0x0,%ecx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	03 8b dc ff ff ff[ 	]+add    -0x24\(%ebx\),%ecx
#				->R_386_TLS_TPOFF	sG3
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gotntpoff IE against global var
 +[0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	03 83 f0 ff ff ff[ 	]+add    -0x10\(%ebx\),%eax
#				->R_386_TLS_TPOFF	sG4
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gottpoff IE -> LE against global var defined in exec
 +[0-9a-f]+:	65 8b 0d 00 00 00 00[ 	]+mov    %gs:0x0,%ecx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	81 e9 00 10 00 00[ 	]+sub    \$0x1000,%ecx
#							sg1
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gotntpoff IE -> LE against local var
 +[0-9a-f]+:	65 8b 0d 00 00 00 00[ 	]+mov    %gs:0x0,%ecx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	81 c0 20 f0 ff ff[ 	]+add    \$0xfffff020,%eax
#							sl1
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gottpoff IE -> LE against hidden var
 +[0-9a-f]+:	65 8b 0d 00 00 00 00[ 	]+mov    %gs:0x0,%ecx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	81 e9 c0 0f 00 00[ 	]+sub    \$0xfc0,%ecx
#							sh1
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  Direct access through %gs
#  @@gotntpoff IE against global var
 +[0-9a-f]+:	8b 8b e0 ff ff ff[ 	]+mov    -0x20\(%ebx\),%ecx
#				->R_386_TLS_TPOFF	sG5
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	65 8b 11[ 	]+mov    %gs:\(%ecx\),%edx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gotntpoff IE->LE against local var
 +[0-9a-f]+:	c7 c0 30 f0 ff ff[ 	]+mov    \$0xfffff030,%eax
#							sl5
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	65 8b 10[ 	]+mov    %gs:\(%eax\),%edx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gotntpoff IE->LE against hidden var
 +[0-9a-f]+:	c7 c2 50 f0 ff ff[ 	]+mov    \$0xfffff050,%edx
#							sh5
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	65 8b 12[ 	]+mov    %gs:\(%edx\),%edx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	8b 5d fc[ 	]+mov    -0x4\(%ebp\),%ebx
 +[0-9a-f]+:	c9[ 	]+leave *
 +[0-9a-f]+:	c3[ 	]+ret *

[0-9a-f]+ <_start>:
 +[0-9a-f]+:	55[ 	]+push   %ebp
 +[0-9a-f]+:	89 e5[ 	]+mov    %esp,%ebp
 +[0-9a-f]+:	e8 00 00 00 00[ 	]+call   [0-9a-f]+ <_start\+0x8>
 +[0-9a-f]+:	59[ 	]+pop    %ecx
 +[0-9a-f]+:	81 c1 ([0-9a-f]{2} ){4}[ 	]+add    \$0x[0-9a-f]*fa6,%ecx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gottpoff IE against global var
 +[0-9a-f]+:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	2b 91 f4 ff ff ff[ 	]+sub    -0xc\(%ecx\),%edx
#				->R_386_TLS_TPOFF32	sG6
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@indntpoff IE against global var
 +[0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	03 05 ([0-9a-f]{2} ){4}[ 	]+add    0x[0-9a-f]+0e8,%eax
#				->R_386_TLS_TPOFF	sG7
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@indntpoff direct %gs access IE against global var
 +[0-9a-f]+:	8b 15 ([0-9a-f]{2} ){4}[ 	]+mov    0x[0-9a-f]+100,%edx
#				->R_386_TLS_TPOFF	sG8
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	65 8b 02[ 	]+mov    %gs:\(%edx\),%eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gottpoff IE -> LE against global var defined in exec
 +[0-9a-f]+:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	81 ea 8c 0f 00 00[ 	]+sub    \$0xf8c,%edx
#							bg6
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@indntpoff IE -> LE against global var defined in exec
 +[0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	81 c0 78 f0 ff ff[ 	]+add    \$0xfffff078,%eax
#							bg7
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@indntpoff direct %gs access IE -> LE against global var defined
#  in exec
 +[0-9a-f]+:	c7 c2 7c f0 ff ff[ 	]+mov    \$0xfffff07c,%edx
#							bg8
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	65 8b 02[ 	]+mov    %gs:\(%edx\),%eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gottpoff IE -> LE against local var
 +[0-9a-f]+:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	81 ea 6c 0f 00 00[ 	]+sub    \$0xf6c,%edx
#							bl6
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@indntpoff IE -> LE against local var
 +[0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	81 c0 98 f0 ff ff[ 	]+add    \$0xfffff098,%eax
#							bl7
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@indntpoff direct %gs access IE -> LE against local var
 +[0-9a-f]+:	c7 c2 9c f0 ff ff[ 	]+mov    \$0xfffff09c,%edx
#							bl8
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	65 8b 02[ 	]+mov    %gs:\(%edx\),%eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gottpoff IE -> LE against hidden but not local var
 +[0-9a-f]+:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	81 ea ac 0f 00 00[ 	]+sub    \$0xfac,%edx
#							sh6
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@indntpoff IE -> LE against hidden but not local var
 +[0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	81 c0 58 f0 ff ff[ 	]+add    \$0xfffff058,%eax
#							sh7
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@indntpoff direct %gs access IE -> LE against hidden but not
#  local var
 +[0-9a-f]+:	c7 c2 5c f0 ff ff[ 	]+mov    \$0xfffff05c,%edx
#							sh8
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	65 8b 02[ 	]+mov    %gs:\(%edx\),%eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  LE @@tpoff, global var defined in exec
 +[0-9a-f]+:	ba 00 10 00 00[ 	]+mov    \$0x1000,%edx
#							sg1
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	29 d0[ 	]+sub    %edx,%eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  LE @@tpoff, local var
 +[0-9a-f]+:	b8 7f 0f 00 00[ 	]+mov    \$0xf7f,%eax
#							bl1+1
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	29 c2[ 	]+sub    %eax,%edx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  LE @@tpoff, hidden var defined in exec
 +[0-9a-f]+:	b8 bd 0f 00 00[ 	]+mov    \$0xfbd,%eax
#							sh1+3
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	29 c2[ 	]+sub    %eax,%edx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  LE @@ntpoff, global var defined in exec
 +[0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	8d 90 04 f0 ff ff[ 	]+lea    -0xffc\(%eax\),%edx
#							sg2
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  LE @@ntpoff, local var, non-canonical sequence
 +[0-9a-f]+:	b8 86 f0 ff ff[ 	]+mov    \$0xfffff086,%eax
#							bl2+2
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	01 c2[ 	]+add    %eax,%edx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  LE @@ntpoff, hidden var defined in exec, non-canonical sequence
 +[0-9a-f]+:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	81 c2 45 f0 ff ff[ 	]+add    \$0xfffff045,%edx
#							sh2+1
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  LE @@ntpoff, global var defined in exec
 +[0-9a-f]+:	65 a1 08 f0 ff ff[ 	]+mov    %gs:0xfffff008,%eax
#							sg3
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  LE @@ntpoff, local var
 +[0-9a-f]+:	65 8b 15 8b f0 ff ff[ 	]+mov    %gs:0xfffff08b,%edx
#							bl3+3
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  LE @@ntpoff, hidden var defined in exec
 +[0-9a-f]+:	65 8b 15 49 f0 ff ff[ 	]+mov    %gs:0xfffff049,%edx
#							sh3+1
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	8b 5d fc[ 	]+mov    -0x4\(%ebp\),%ebx
 +[0-9a-f]+:	c9[ 	]+leave *
 +[0-9a-f]+:	c3[ 	]+ret *
@


1.7
log
@bfd/
2012-04-03  Roland McGrath  <mcgrathr@@google.com>

	* elf-nacl.c: New file.
	* elf-nacl.h: New file.
	* elf32-i386.c (elf_backend_modify_segment_map): Define for
	bfd_elf32_i386_nacl_vec.
	(elf_backend_modify_program_headers): Likewise.
	* elf64-x86-64.c (elf_backend_modify_segment_map): Define for
	bfd_elf64_x86_64_nacl_vec and bfd_elf32_x86_64_nacl_vec.
	(elf_backend_modify_program_headers): Likewise.
	* Makefile.am (BFD32_BACKENDS, BFD64_BACKENDS): Add elf-nacl.lo here.
	(BFD32_BACKENDS_CFILES, BFD64_BACKENDS_CFILES): Add elf-nacl.c here.
	* Makefile.in: Regenerated.
	* configure.in (bfd_elf64_x86_64_nacl_vec): Add elf-nacl.o to tb here.
	(bfd_elf32_x86_64_nacl_vec): Likewise.
	(bfd_elf64_x86_64_vec, bfd_elf32_x86_64_vec): Likewise.
	(bfd_elf64_x86_64_freebsd_vec, bfd_elf64_x86_64_sol2_vec): Likewise.
	(bfd_elf64_l1om_vec, bfd_elf64_l1om_freebsd_vec): Likewise.
	(bfd_elf64_k1om_vec, bfd_elf64_k1om_freebsd_vec): Likewise.
	(bfd_elf32_i386_nacl_vec): Likewise.
	(bfd_elf32_i386_sol2_vec, bfd_elf32_i386_freebsd_vec): Likewise.
	(bfd_elf32_i386_vxworks_vec, bfd_elf32_i386_vec): Likewise.
	* configure: Regenerated.

binutils/testsuite/
2012-04-03  Roland McGrath  <mcgrathr@@google.com>

	* lib/binutils-common.exp (is_elf_format): Consider *-*-nacl* to
	be ELF too.

	* binutils-all/elfedit-4.d: Add "#as: --64" option.

	* binutils-all/i386/i386.exp: Accept nacl targets too.
	* binutils-all/x86-64/x86-64.exp: Likewise.

gas/testsuite/
2012-04-03  Roland McGrath  <mcgrathr@@google.com>

	* gas/i386/k1om.d: Add not-target match for *-*-nacl*.
	* gas/i386/l1om.d: Likewise.

ld/
2012-04-03  Roland McGrath  <mcgrathr@@google.com>

	* configure.tgt (i[3-7]86-*-nacl*, x86_64-*-nacl*): Handle them.
	* emulparams/elf_nacl.sh: New file.
	* emulparams/elf_i386_nacl.sh: New file.
	* emulparams/elf32_x86_64_nacl.sh: New file.
	* emulparams/elf_x86_64_nacl.sh: New file.
	* Makefile.am (ALL_EMULATION_SOURCES): Add eelf_i386_nacl.c here.
	(ALL_64_EMULATION_SOURCES): Add eelf32_x86_64_nacl.c and
	eelf_x86_64_nacl.c here.
	(eelf_i386_nacl.c, eelf32_x86_64_nacl.c, eelf_x86_64_nacl.c):
	New targets.
	* Makefile.in: Regenerated.

	* scripttempl/elf.sc: Handle SEPARATE_CODE cases.

ld/testsuite/
2012-04-03  Roland McGrath  <mcgrathr@@google.com>

	* ld-x86-64/ilp32-4-nacl.d: New file.
	* ld-x86-64/x86-64.exp: Run it.

	* ld-discard/discard.exp: Accept nacl targets too.
	* ld-elf/binutils.exp: Likewise.
	* ld-elf/comm-data.exp: Likewise.
	* ld-elf/elf.exp: Likewise.
	* ld-elf/tls_common.exp: Likewise.
	* ld-elfvers/vers.exp: Likewise.
	* ld-elfvsb/elfvsb.exp: Likewise.
	* ld-elfweak/elfweak.exp: Likewise.
	* ld-gc/gc.exp: Likewise.
	* ld-ifunc/binutils.exp: Likewise.
	* ld-ifunc/ifunc.exp: Likewise.
	* ld-linkonce/linkonce.exp:Likewise.
	* ld-pie/pie.exp: Likewise.
	* ld-shared/shared.exp: Likewise.
	* ld-undefined/weak-undef.exp: Likewise.
	* ld-unique/unique.exp: Likewise.
	* ld-x86-64/dwarfreloc.exp: Likewise.
	* ld-x86-64/line.exp: Likewise.

	* lib/ld-lib.exp (slurp_options): Support global array
	options_regsub to apply substitutions to the contents
	of options lines read from the file.
	* ld-i386/emit-relocs.d: Renamed to ...
	* ld-i386/emit-relocs.rd: ... this.
	* ld-i386/i386.exp: Accept nacl targets too.
	For them, use options_regsub to replace elf_i386 with
	elf_i386_nacl in run_dump_test cases; apply the same
	substitution in $i386tests; replace foo.rd expectations
	files with foo-nacl.rd in $i386tests.
	(i386tests): Change emit-relocs.d to emit-relocs.rd here.
	* ld-i386/emit-relocs-nacl.rd: New file.
	* ld-i386/plt-nacl.pd: New file.
	* ld-i386/plt-pic-nacl.pd: New file.
	* ld-i386/tlsbin-nacl.rd: New file.
	* ld-i386/tlsbindesc-nacl.rd: New file.
	* ld-i386/tlsdesc-nacl.rd: New file.
	* ld-i386/tlsgdesc-nacl.rd: New file.
	* ld-i386/tlsnopic-nacl.rd: New file.
	* ld-i386/tlspic-nacl.rd: New file.
	* ld-x86-64/x86-64.exp: Accept nacl targets too.
	For them, use options_regsub to replace elf_x86_64 with
	elf_x86_64_nacl in run_dump_test cases; apply the same
	substitution in $x86_64tests; replace foo.rd expectations
	files with foo-nacl.rd in $x86_64tests.
	Add explicit -melf_x86_64 to ld options in tests that need it,
	in case the default emulation is x32 (as it is for x86_64-nacl).
	* ld/testsuite/ld-x86-64/plt-nacl.pd: New file.
	* ld/testsuite/ld-x86-64/split-by-file-nacl.rd: New file.
	* ld/testsuite/ld-x86-64/tlsbin-nacl.rd: New file.
	* ld/testsuite/ld-x86-64/tlsbindesc-nacl.rd: New file.
	* ld/testsuite/ld-x86-64/tlsdesc-nacl.pd: New file.
	* ld/testsuite/ld-x86-64/tlsdesc-nacl.rd: New file.
	* ld/testsuite/ld-x86-64/tlsgdesc-nacl.rd: New file.
	* ld/testsuite/ld-x86-64/tlspic-nacl.rd: New file.

	* ld-i386/hidden2.d: Loosen regexps to match any file format variant,
	and not to depend on exact addresses, displacements, etc. where
	they are irrelevant.
	* ld-i386/pcrel16.d: Likewise.
	* ld-i386/pcrel16abs.d: Likewise.
	* ld-i386/pr12718.d: Likewise.
	* ld-i386/pr12921.d: Likewise.
	* ld-i386/reloc.d: Likewise.
	* ld-i386/tlsbin.dd: Likewise.
	* ld-i386/tlsbin.sd: Likewise.
	* ld-i386/tlsbin.td: Likewise.
	* ld-i386/tlsbindesc.dd: Likewise.
	* ld-i386/tlsbindesc.sd: Likewise.
	* ld-i386/tlsbindesc.td: Likewise.
	* ld-i386/tlsdesc.dd: Likewise.
	* ld-i386/tlsdesc.sd: Likewise.
	* ld-i386/tlsdesc.td: Likewise.
	* ld-i386/tlsg.sd: Likewise.
	* ld-i386/tlsgdesc.dd: Likewise.
	* ld-i386/tlsindntpoff.dd: Likewise.
	* ld-i386/tlsnopic.dd: Likewise.
	* ld-i386/tlsnopic.sd: Likewise.
	* ld-i386/tlspic.dd: Likewise.
	* ld-i386/tlspic.sd: Likewise.
	* ld-i386/tlspic.td: Likewise.
	* ld-i386/tlspie2.d: Likewise.
	* ld-x86-64/hidden2.d: Likewise.
	* ld-x86-64/pcrel16.d: Likewise.
	* ld-x86-64/pr12718.d: Likewise.
	* ld-x86-64/pr12921.d: Likewise.
	* ld-x86-64/protected3.d: Likewise.
	* ld-x86-64/tlsbin.dd: Likewise.
	* ld-x86-64/tlsbin.sd: Likewise.
	* ld-x86-64/tlsbin.td: Likewise.
	* ld-x86-64/tlsbindesc.dd: Likewise.
	* ld-x86-64/tlsbindesc.sd: Likewise.
	* ld-x86-64/tlsbindesc.td: Likewise.
	* ld-x86-64/tlsdesc.dd: Likewise.
	* ld-x86-64/tlsdesc.sd: Likewise.
	* ld-x86-64/tlsdesc.td: Likewise.
	* ld-x86-64/tlsg.sd: Likewise.
	* ld-x86-64/tlsgd5.dd: Likewise.
	* ld-x86-64/tlsgd6.dd: Likewise.
	* ld-x86-64/tlsgdesc.dd: Likewise.
	* ld-x86-64/tlspic.dd: Likewise.
	* ld-x86-64/tlspic.sd: Likewise.
	* ld-x86-64/tlspic.td: Likewise.

	* ld-x86-64/ilp32-8.d: Match any file format variant.
	Use a -Ttext and adjust expected results, to handle variant layouts.
	* ld-x86-64/ilp32-9.d: Likewise.

	* ld-i386/alloc.t: Remove superfluous OUTPUT_FORMAT statement.
	* ld-i386/pr12627.t: Likewise.

	* ld-x86-64/abs-l1om.d: Add target: constraint.
	* ld-x86-64/protected2-l1om.d: Likewise.
	* ld-x86-64/protected3-l1om.d: Likewise.
	* ld-x86-64/ilp32-4.d: Likewise.

	* ld-x86-64/plt.s: New file.
	* ld-x86-64/pltlib.s: New file.
	* ld-x86-64/plt.pd: New file.
	* ld-x86-64/x86-64.exp (x86_64tests): Add them.

	* ld-i386/plt.s: New file.
	* ld-i386/pltlib.s: New file.
	* ld-i386/plt.pd: New file.
	* ld-i386/plt-pic.s: New file.
	* ld-i386/plt-pic.pd: New file.
	* ld-i386/i386.exp (i386tests): Add them.
@
text
@a225 1
 +[0-9a-f]+:	66 90[ 	]+xchg   %ax,%ax
d232 1
a232 1
 +[0-9a-f]+:	81 c1 ([0-9a-f]{2} ){4}[ 	]+add    \$0x[0-9a-f]*fa4,%ecx
@


1.6
log
@Support arch-dependent fill

bfd/

2012-01-31  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/13616
	* archures.c (bfd_arch_info): Add fill.
	(bfd_default_arch_struct): Add bfd_arch_default_fill.
	(bfd_arch_default_fill): New.

	* configure.in: Set bfd version to 2.22.52.
	* configure: Regenerated.

	* cpu-alpha.c: Add bfd_arch_default_fill to bfd_arch_info
	initializer.
	* cpu-arc.c: Likewise.
	* cpu-arm.c: Likewise.
	* cpu-avr.c: Likewise.
	* cpu-bfin.c: Likewise.
	* cpu-cr16.c: Likewise.
	* cpu-cr16c.c: Likewise.
	* cpu-cris.c: Likewise.
	* cpu-crx.c: Likewise.
	* cpu-d10v.c: Likewise.
	* cpu-d30v.c: Likewise.
	* cpu-dlx.c: Likewise.
	* cpu-epiphany.c: Likewise.
	* cpu-fr30.c: Likewise.
	* cpu-frv.c: Likewise.
	* cpu-h8300.c: Likewise.
	* cpu-h8500.c: Likewise.
	* cpu-hppa.c: Likewise.
	* cpu-i370.c: Likewise.
	* cpu-i860.c: Likewise.
	* cpu-i960.c: Likewise.
	* cpu-ia64.c: Likewise.
	* cpu-ip2k.c: Likewise.
	* cpu-iq2000.c: Likewise.
	* cpu-lm32.c: Likewise.
	* cpu-m10200.c: Likewise.
	* cpu-m10300.c: Likewise.
	* cpu-m32c.c: Likewise.
	* cpu-m32r.c: Likewise.
	* cpu-m68hc11.c: Likewise.
	* cpu-m68hc12.c: Likewise.
	* cpu-m68k.c: Likewise.
	* cpu-m88k.c: Likewise.
	* cpu-mcore.c: Likewise.
	* cpu-mep.c: Likewise.
	* cpu-microblaze.c: Likewise.
	* cpu-mips.c: Likewise.
	* cpu-mmix.c: Likewise.
	* cpu-moxie.c: Likewise.
	* cpu-msp430.c: Likewise.
	* cpu-mt.c: Likewise.
	* cpu-ns32k.c: Likewise.
	* cpu-openrisc.c: Likewise.
	* cpu-or32.c: Likewise.
	* cpu-pdp11.c: Likewise.
	* cpu-pj.c: Likewise.
	* cpu-plugin.c: Likewise.
	* cpu-powerpc.c: Likewise.
	* cpu-rl78.c: Likewise.
	* cpu-rs6000.c: Likewise.
	* cpu-rx.c: Likewise.
	* cpu-s390.c: Likewise.
	* cpu-score.c: Likewise.
	* cpu-sh.c: Likewise.
	* cpu-sparc.c: Likewise.
	* cpu-spu.c: Likewise.
	* cpu-tic30.c: Likewise.
	* cpu-tic4x.c: Likewise.
	* cpu-tic54x.c: Likewise.
	* cpu-tic6x.c: Likewise.
	* cpu-tic80.c: Likewise.
	* cpu-tilegx.c: Likewise.
	* cpu-tilepro.c: Likewise.
	* cpu-v850.c: Likewise.
	* cpu-vax.c: Likewise.
	* cpu-w65.c: Likewise.
	* cpu-we32k.c: Likewise.
	* cpu-xc16x.c: Likewise.
	* cpu-xstormy16.c: Likewise.
	* cpu-xtensa.c: Likewise.
	* cpu-z80.c: Likewise.
	* cpu-z8k.c: Likewise.

	* cpu-i386.c: Include "libiberty.h".
	(bfd_arch_i386_fill): New.
	Add bfd_arch_i386_fill to  bfd_arch_info initializer.

	* cpu-k1om.c: Add bfd_arch_i386_fill to  bfd_arch_info initializer.
	* cpu-l1om.c: Likewise.

	* linker.c (default_data_link_order): Call abfd->arch_info->fill
	if fill size is 0.

	* bfd-in2.h: Regenerated.

include/

2012-01-31  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/13616
	* bfdlink.h (bfd_link_order): Update comments on data size.

ld/

2012-01-31  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/13616
	* emulparams/elf32_x86_64.sh: Remove NOP.
	* emulparams/elf_i386.sh: Likewise.
	* emulparams/elf_i386_be.sh: Likewise.
	* emulparams/elf_i386_ldso.sh: Likewise.
	* emulparams/elf_i386_vxworks.sh: Likewise.
	* emulparams/elf_k1om.sh: Likewise.
	* emulparams/elf_l1om.sh: Likewise.
	* emulparams/elf_x86_64.sh: Likewise.

	* ldlang.c (zero_fill): Initialized to 0.

	* ldwrite.c (build_link_order): Set data size to linker odrder
	size when they are the same.

	* scripttempl/elf.sc: Don't specify fill if NOP is undefined.

ld/testsuite/

2012-01-31  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/13616
	* ld-i386/tlsbindesc.dd: Update no-op padding.
	* ld-i386/tlsnopic.dd: Likewise.
	* ld-i386/tlspic.dd: Likewise.
	* ld-x86-64/tlsbin.dd: Likewise.
	* ld-x86-64/tlsbindesc.dd: Likewise.
	* ld-x86-64/tlspic.dd: Likewise.
@
text
@d17 1
a17 1
.*: +file format elf32-i386
d22 11
a32 11
 [0-9a-f]+:	55[ 	]+push   %ebp
 [0-9a-f]+:	89 e5[ 	]+mov    %esp,%ebp
 [0-9a-f]+:	53[ 	]+push   %ebx
 [0-9a-f]+:	50[ 	]+push   %eax
 [0-9a-f]+:	e8 00 00 00 00[ 	]+call   [0-9a-f]+ <fn2\+0xa>
 [0-9a-f]+:	5b[ 	]+pop    %ebx
 [0-9a-f]+:	81 c3 fa 10 00 00[ 	]+add    \$0x10fa,%ebx
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d34 1
a34 1
 [0-9a-f]+:	8b 83 f8 ff ff ff[ 	]+mov    -0x8\(%ebx\),%eax
d36 5
a40 5
 [0-9a-f]+:	f7 d8[ 	]+neg    %eax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d43 1
a43 1
 [0-9a-f]+:	8b 83 e8 ff ff ff[ 	]+mov    -0x18\(%ebx\),%eax
d45 5
a49 5
 [0-9a-f]+:	f7 d8[ 	]+neg    %eax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d52 1
a52 1
 [0-9a-f]+:	8b 83 dc ff ff ff[ 	]+mov    -0x24\(%ebx\),%eax
d54 5
a58 5
 [0-9a-f]+:	66 90[ 	]+xchg   %ax,%ax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d61 1
a61 1
 [0-9a-f]+:	8b 83 f0 ff ff ff[ 	]+mov    -0x10\(%ebx\),%eax
d63 5
a67 5
 [0-9a-f]+:	66 90[ 	]+xchg   %ax,%ax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d69 1
a69 1
 [0-9a-f]+:	8d 05 00 f0 ff ff[ 	]+lea    0xfffff000,%eax
d71 5
a75 5
 [0-9a-f]+:	66 90[ 	]+xchg   %ax,%ax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d77 1
a77 1
 [0-9a-f]+:	8d 05 20 f0 ff ff[ 	]+lea    0xfffff020,%eax
d79 5
a83 5
 [0-9a-f]+:	66 90[ 	]+xchg   %ax,%ax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d85 1
a85 1
 [0-9a-f]+:	8d 05 40 f0 ff ff[ 	]+lea    0xfffff040,%eax
d87 5
a91 5
 [0-9a-f]+:	66 90[ 	]+xchg   %ax,%ax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d93 5
a97 5
 [0-9a-f]+:	8d 05 00 00 00 00[ 	]+lea    0x0,%eax
 [0-9a-f]+:	66 90[ 	]+xchg   %ax,%ax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	8d 90 20 f0 ff ff[ 	]+lea    -0xfe0\(%eax\),%edx
d99 3
a101 3
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	8d 88 24 f0 ff ff[ 	]+lea    -0xfdc\(%eax\),%ecx
d103 4
a106 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d108 5
a112 5
 [0-9a-f]+:	8d 05 00 00 00 00[ 	]+lea    0x0,%eax
 [0-9a-f]+:	66 90[ 	]+xchg   %ax,%ax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	8d 90 40 f0 ff ff[ 	]+lea    -0xfc0\(%eax\),%edx
d114 3
a116 3
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	8d 88 44 f0 ff ff[ 	]+lea    -0xfbc\(%eax\),%ecx
d118 4
a121 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d123 4
a126 4
 [0-9a-f]+:	65 8b 0d 00 00 00 00[ 	]+mov    %gs:0x0,%ecx
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	2b 8b e8 ff ff ff[ 	]+sub    -0x18\(%ebx\),%ecx
d128 4
a131 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d133 4
a136 4
 [0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	2b 83 ec ff ff ff[ 	]+sub    -0x14\(%ebx\),%eax
d138 4
a141 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d143 4
a146 4
 [0-9a-f]+:	65 8b 0d 00 00 00 00[ 	]+mov    %gs:0x0,%ecx
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	03 8b dc ff ff ff[ 	]+add    -0x24\(%ebx\),%ecx
d148 4
a151 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d153 4
a156 4
 [0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	03 83 f0 ff ff ff[ 	]+add    -0x10\(%ebx\),%eax
d158 4
a161 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d163 4
a166 4
 [0-9a-f]+:	65 8b 0d 00 00 00 00[ 	]+mov    %gs:0x0,%ecx
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	81 e9 00 10 00 00[ 	]+sub    \$0x1000,%ecx
d168 4
a171 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d173 4
a176 4
 [0-9a-f]+:	65 8b 0d 00 00 00 00[ 	]+mov    %gs:0x0,%ecx
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	81 c0 20 f0 ff ff[ 	]+add    \$0xfffff020,%eax
d178 4
a181 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d183 4
a186 4
 [0-9a-f]+:	65 8b 0d 00 00 00 00[ 	]+mov    %gs:0x0,%ecx
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	81 e9 c0 0f 00 00[ 	]+sub    \$0xfc0,%ecx
d188 4
a191 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d194 1
a194 1
 [0-9a-f]+:	8b 8b e0 ff ff ff[ 	]+mov    -0x20\(%ebx\),%ecx
d196 7
a202 7
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	65 8b 11[ 	]+mov    %gs:\(%ecx\),%edx
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d204 1
a204 1
 [0-9a-f]+:	c7 c0 30 f0 ff ff[ 	]+mov    \$0xfffff030,%eax
d206 7
a212 7
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	65 8b 10[ 	]+mov    %gs:\(%eax\),%edx
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d214 1
a214 1
 [0-9a-f]+:	c7 c2 50 f0 ff ff[ 	]+mov    \$0xfffff050,%edx
d216 11
a226 11
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	65 8b 12[ 	]+mov    %gs:\(%edx\),%edx
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	8b 5d fc[ 	]+mov    -0x4\(%ebp\),%ebx
 [0-9a-f]+:	c9[ 	]+leave *
 [0-9a-f]+:	c3[ 	]+ret *
 [0-9a-f]+:	66 90[ 	]+xchg   %ax,%ax
d229 9
a237 9
 [0-9a-f]+:	55[ 	]+push   %ebp
 [0-9a-f]+:	89 e5[ 	]+mov    %esp,%ebp
 [0-9a-f]+:	e8 00 00 00 00[ 	]+call   [0-9a-f]+ <_start\+0x8>
 [0-9a-f]+:	59[ 	]+pop    %ecx
 [0-9a-f]+:	81 c1 a4 0f 00 00[ 	]+add    \$0xfa4,%ecx
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d239 4
a242 4
 [0-9a-f]+:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	2b 91 f4 ff ff ff[ 	]+sub    -0xc\(%ecx\),%edx
d244 4
a247 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d249 4
a252 4
 [0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	03 05 e8 a0 04 08[ 	]+add    0x804a0e8,%eax
d254 4
a257 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d259 1
a259 1
 [0-9a-f]+:	8b 15 00 a1 04 08[ 	]+mov    0x804a100,%edx
d261 7
a267 7
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	65 8b 02[ 	]+mov    %gs:\(%edx\),%eax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d269 4
a272 4
 [0-9a-f]+:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	81 ea 8c 0f 00 00[ 	]+sub    \$0xf8c,%edx
d274 4
a277 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d279 4
a282 4
 [0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	81 c0 78 f0 ff ff[ 	]+add    \$0xfffff078,%eax
d284 4
a287 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d290 1
a290 1
 [0-9a-f]+:	c7 c2 7c f0 ff ff[ 	]+mov    \$0xfffff07c,%edx
d292 7
a298 7
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	65 8b 02[ 	]+mov    %gs:\(%edx\),%eax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d300 4
a303 4
 [0-9a-f]+:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	81 ea 6c 0f 00 00[ 	]+sub    \$0xf6c,%edx
d305 4
a308 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d310 4
a313 4
 [0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	81 c0 98 f0 ff ff[ 	]+add    \$0xfffff098,%eax
d315 4
a318 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d320 1
a320 1
 [0-9a-f]+:	c7 c2 9c f0 ff ff[ 	]+mov    \$0xfffff09c,%edx
d322 7
a328 7
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	65 8b 02[ 	]+mov    %gs:\(%edx\),%eax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d330 4
a333 4
 [0-9a-f]+:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	81 ea ac 0f 00 00[ 	]+sub    \$0xfac,%edx
d335 4
a338 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d340 4
a343 4
 [0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	81 c0 58 f0 ff ff[ 	]+add    \$0xfffff058,%eax
d345 4
a348 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d351 1
a351 1
 [0-9a-f]+:	c7 c2 5c f0 ff ff[ 	]+mov    \$0xfffff05c,%edx
d353 7
a359 7
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	65 8b 02[ 	]+mov    %gs:\(%edx\),%eax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d361 1
a361 1
 [0-9a-f]+:	ba 00 10 00 00[ 	]+mov    \$0x1000,%edx
d363 10
a372 10
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	29 d0[ 	]+sub    %edx,%eax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d374 1
a374 1
 [0-9a-f]+:	b8 7f 0f 00 00[ 	]+mov    \$0xf7f,%eax
d376 10
a385 10
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	29 c2[ 	]+sub    %eax,%edx
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d387 1
a387 1
 [0-9a-f]+:	b8 bd 0f 00 00[ 	]+mov    \$0xfbd,%eax
d389 10
a398 10
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	29 c2[ 	]+sub    %eax,%edx
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d400 4
a403 4
 [0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	8d 90 04 f0 ff ff[ 	]+lea    -0xffc\(%eax\),%edx
d405 4
a408 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d410 1
a410 1
 [0-9a-f]+:	b8 86 f0 ff ff[ 	]+mov    \$0xfffff086,%eax
d412 10
a421 10
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	01 c2[ 	]+add    %eax,%edx
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d423 4
a426 4
 [0-9a-f]+:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	81 c2 45 f0 ff ff[ 	]+add    \$0xfffff045,%edx
d428 4
a431 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d433 1
a433 1
 [0-9a-f]+:	65 a1 08 f0 ff ff[ 	]+mov    %gs:0xfffff008,%eax
d435 4
a438 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d440 1
a440 1
 [0-9a-f]+:	65 8b 15 8b f0 ff ff[ 	]+mov    %gs:0xfffff08b,%edx
d442 4
a445 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d447 1
a447 1
 [0-9a-f]+:	65 8b 15 49 f0 ff ff[ 	]+mov    %gs:0xfffff049,%edx
d449 7
a455 7
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	8b 5d fc[ 	]+mov    -0x4\(%ebp\),%ebx
 [0-9a-f]+:	c9[ 	]+leave *
 [0-9a-f]+:	c3[ 	]+ret *
@


1.5
log
@	PR ld/12570
include/
	* bfdlink.h (struct bfd_link_info): Add no_ld_generated_unwind_info
	option.
ld/
	* emultempl/elf32.em (OPTION_LD_GENERATED_UNWIND_INFO,
	OPTION_NO_LD_GENERATED_UNWIND_INFO): Define.
	(gld${EMULATION_NAME}_handle_option): Handle
	--ld-generated-unwind-info and --no-ld-generated-unwind-info.
	* ld.texinfo (--ld-generated-unwind-info,
	--no-ld-generated-unwind-info): Document.
bfd/
	* elf-eh-frame.c (_bfd_elf_parse_eh_frame): Allow no relocations
	at all for linker created .eh_frame sections.
	(_bfd_elf_discard_section_eh_frame): Handle linker created
	.eh_frame sections with no relocations.
	* elf64-x86-64.c: Include dwarf2.h.
	(elf_x86_64_eh_frame_plt): New variable.
	(PLT_CIE_LENGTH, PLT_FDE_LENGTH, PLT_FDE_START_OFFSET,
	PLT_FDE_LEN_OFFSET): Define.
	(struct elf_x86_64_link_hash_table): Add plt_eh_frame field.
	(elf_x86_64_create_dynamic_sections): Create and fill in
	.eh_frame section for .plt section.
	(elf_x86_64_size_dynamic_sections): Write .plt section size
	into .eh_frame FDE covering .plt section.
	(elf_x86_64_finish_dynamic_sections): Write .plt section
	start into .eh_frame FDE covering .plt section.  Call
	_bfd_elf_write_section_eh_frame on htab->plt_eh_frame section.
	(elf_backend_plt_alignment): Define to 4.
	* elf32-i386.c: Include dwarf2.h.
	(elf_i386_eh_frame_plt): New variable.
	(PLT_CIE_LENGTH, PLT_FDE_LENGTH, PLT_FDE_START_OFFSET,
	PLT_FDE_LEN_OFFSET): Define.
	(struct elf_i386_link_hash_table): Add plt_eh_frame field.
	(elf_i386_create_dynamic_sections): Create and fill in
	.eh_frame section for .plt section.
	(elf_i386_size_dynamic_sections): Write .plt section size
	into .eh_frame FDE covering .plt section.
	(elf_i386_finish_dynamic_sections): Write .plt section
	start into .eh_frame FDE covering .plt section.  Call
	_bfd_elf_write_section_eh_frame on htab->plt_eh_frame section.
	(elf_backend_plt_alignment): Define to 4.
ld/testsuite/
	* ld-x86-64/x86-64.exp: Link some testcases with
	--no-ld-generated-unwind-info.
	* ld-x86-64/tlsbin.rd: Add --no-ld-generated-unwind-info to ld
	comment.
	* ld-x86-64/tlsdesc.dd: Likewise.
	* ld-x86-64/tlspic.dd: Likewise.
	* ld-x86-64/tlsdesc.sd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
	* ld-x86-64/tlsbindesc.rd: Likewise.
	* ld-x86-64/tlsbindesc.sd: Likewise.
	* ld-x86-64/tlsbin.td: Likewise.
	* ld-x86-64/tlsdesc.pd: Likewise.
	* ld-x86-64/tlsdesc.td: Likewise.
	* ld-x86-64/tlsbindesc.dd: Likewise.
	* ld-x86-64/tlsbin.dd: Likewise.
	* ld-x86-64/tlsgdesc.rd: Likewise.
	* ld-x86-64/tlspic.sd: Likewise.
	* ld-x86-64/tlsbindesc.td: Likewise.
	* ld-x86-64/tlspic.td: Likewise.
	* ld-x86-64/tlsbin.sd: Likewise.
	* ld-x86-64/ilp32-4.d: Likewise.
	* ld-x86-64/tlsgdesc.dd: Add --no-ld-generated-unwind-info to ld
	comment.  Adjust.
	* ld-x86-64/tlsdesc.rd: Likewise.
	* ld-x86-64/tlsgd6.dd: Adjust.
	* ld-x86-64/tlsgd5.dd: Likewise.
	* ld-i386/i386.exp: Link some testcases with
	--no-ld-generated-unwind-info.
	* ld-i386/tlsbin.rd: Add --no-ld-generated-unwind-info to ld
	comment..
	* ld-i386/tlsdesc.dd: Likewise.
	* ld-i386/tlspic.dd: Likewise.
	* ld-i386/tlsdesc.sd: Likewise.
	* ld-i386/tlsgdesc.dd: Likewise.
	* ld-i386/tlsnopic.sd: Likewise.
	* ld-i386/tlspic.rd: Likewise.
	* ld-i386/tlsdesc.rd: Likewise.
	* ld-i386/tlsbindesc.rd: Likewise.
	* ld-i386/tlsbindesc.sd: Likewise.
	* ld-i386/tlsbin.td: Likewise.
	* ld-i386/tlsdesc.td: Likewise.
	* ld-i386/tlsnopic.dd: Likewise.
	* ld-i386/tlsbindesc.dd: Likewise.
	* ld-i386/tlsbin.dd: Likewise.
	* ld-i386/tlsgdesc.rd: Likewise.
	* ld-i386/tlspic.sd: Likewise.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlsbindesc.td: Likewise.
	* ld-i386/tlspic.td: Likewise.
	* ld-i386/tlsbin.sd: Likewise.
@
text
@d226 1
a226 2
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
@


1.4
log
@bfd/ChangeLog:
* elf32-i386.c (struct elf_i386_link_hash_table): Added field
tls_module_base.
(elf_i386_link_hash_table_create): Initialize it.
(elf_i386_always_size_sections): Set it.
(set_tls_module_base): New.
(elf_i386_relocate_sections): Call it.
* elf64-x86-64.c (struct elf64_x86_64_link_hash_table): Added
field tls_module_base.
(elf64_x86_64_link_hash_table_create): Initialize it.
(elf64_x86_64_always_size_sections): Set it.
(set_tls_module_base): New.
(elf64_x86_64_relocate_sections): Call it.
Reported by Cary Coutant <ccoutant@@google.com>
ld/testsuite/ChangeLog:
* ld-i386/tlsbindesc.dd: Adjust incorrect expectations for LD to
LE relaxation.
* ld-x86-64/tlsbindesc.dd: Likewise.
* ld-i386/tlsbindesc.rd: Adjust address of _TLS_MODULE_BASE_.
* ld-x86-64/tlsbindesc.rd: Likewise.
Reported by Cary Coutant <ccoutant@@google.com>
@
text
@d4 1
a4 1
#ld: -melf_i386 tmpdir/libtlslib.so
@


1.3
log
@gas/testsuite/

2007-04-26  H.J. Lu  <hongjiu.lu@@intel.com>

	PR binutils/4430
	* gas/i386/amd.d: Updated.
	* gas/i386/immed32.d: Likewise.
	* gas/i386/intel.d: Likewise.
	* gas/i386/intel16.d: Likewise.
	* gas/i386/intelok.d: Likewise.
	* gas/i386/jump16.d: Likewise.
	* gas/i386/naked.d: Likewise.
	* gas/i386/opcode-suffix.d: Likewise.
	* gas/i386/opcode.d: Likewise.
	* gas/i386/prescott.d: Likewise.
	* gas/i386/ssemmx2.d: Likewise.
	* gas/i386/tlsd.d: Likewise.
	* gas/i386/tlspic.d: Likewise.
	* gas/i386/x86-64-addr32.d: Likewise.
	* gas/i386/x86-64-prescott.d: Likewise.
	* gas/i386/x86-64-rip.d: Likewise.
	* gas/i386/x86_64.d: Likewise.

ld/testsuite/

2007-04-26  H.J. Lu  <hongjiu.lu@@intel.com>

	PR binutils/4430
	* ld-i386/tlsbin.dd: Updated.
	* ld-i386/tlsbindesc.dd: Likewise
	* ld-i386/tlsdesc.dd: Likewise
	* ld-i386/tlsgdesc.dd: Likewise
	* ld-i386/tlsnopic.dd: Likewise
	* ld-i386/tlspic.dd: Likewise
	* ld-x86-64/tlsbin.dd: Likewise
	* ld-x86-64/tlsbindesc.dd: Likewise
	* ld-x86-64/tlsdesc.dd: Likewise
	* ld-x86-64/tlsgdesc.dd: Likewise
	* ld-x86-64/tlspic.dd: Likewise

opcodes/

2007-04-26  H.J. Lu  <hongjiu.lu@@intel.com>

	PR binutils/4430
	* i386-dis.c (print_displacement): New.
	(OP_E): Call print_displacement instead of print_operand_value
	to output displacement when either base or index exist.  Print
	the explicit zero displacement in 16bit mode.
@
text
@d93 1
a93 1
 [0-9a-f]+:	8d 05 00 f0 ff ff[ 	]+lea    0xfffff000,%eax
d108 1
a108 1
 [0-9a-f]+:	8d 05 00 f0 ff ff[ 	]+lea    0xfffff000,%eax
@


1.2
log
@bfd/

2006-06-30  H.J. Lu  <hongjiu.lu@@intel.com>

	* elf32-i386.c (elf_i386_relocate_section): Use xchg %ax,%ax
	instead of 2 nops.
	* elf64-x86-64.c (elf64_x86_64_relocate_section): Likewise.
	(elf64_x86_64_plt0_entry): Use nopl 0(%rax) instead of 4 nops.

ld/testsuite/

2006-06-30  H.J. Lu  <hongjiu.lu@@intel.com>

	* ld-i386/tlsbindesc.dd: Updated to expect xchg %ax,%ax instead
	of 2 nops.
	* ld-i386/tlsdesc.dd: Likewise.
	* ld-i386/tlsgdesc.dd: Likewise.
	* ld-x86-64/tlsbindesc.dd: Likewise.
	* ld-x86-64/tlsdesc.dd: Likewise.
	* ld-x86-64/tlsdesc.pd: Likewise.
	* ld-x86-64/tlsgdesc.dd: Likewise.
@
text
@d34 1
a34 1
 [0-9a-f]+:	8b 83 f8 ff ff ff[ 	]+mov    0xfffffff8\(%ebx\),%eax
d43 1
a43 1
 [0-9a-f]+:	8b 83 e8 ff ff ff[ 	]+mov    0xffffffe8\(%ebx\),%eax
d52 1
a52 1
 [0-9a-f]+:	8b 83 dc ff ff ff[ 	]+mov    0xffffffdc\(%ebx\),%eax
d61 1
a61 1
 [0-9a-f]+:	8b 83 f0 ff ff ff[ 	]+mov    0xfffffff0\(%ebx\),%eax
d97 1
a97 1
 [0-9a-f]+:	8d 90 20 f0 ff ff[ 	]+lea    0xfffff020\(%eax\),%edx
d101 1
a101 1
 [0-9a-f]+:	8d 88 24 f0 ff ff[ 	]+lea    0xfffff024\(%eax\),%ecx
d112 1
a112 1
 [0-9a-f]+:	8d 90 40 f0 ff ff[ 	]+lea    0xfffff040\(%eax\),%edx
d116 1
a116 1
 [0-9a-f]+:	8d 88 44 f0 ff ff[ 	]+lea    0xfffff044\(%eax\),%ecx
d126 1
a126 1
 [0-9a-f]+:	2b 8b e8 ff ff ff[ 	]+sub    0xffffffe8\(%ebx\),%ecx
d136 1
a136 1
 [0-9a-f]+:	2b 83 ec ff ff ff[ 	]+sub    0xffffffec\(%ebx\),%eax
d146 1
a146 1
 [0-9a-f]+:	03 8b dc ff ff ff[ 	]+add    0xffffffdc\(%ebx\),%ecx
d156 1
a156 1
 [0-9a-f]+:	03 83 f0 ff ff ff[ 	]+add    0xfffffff0\(%ebx\),%eax
d194 1
a194 1
 [0-9a-f]+:	8b 8b e0 ff ff ff[ 	]+mov    0xffffffe0\(%ebx\),%ecx
d223 1
a223 1
 [0-9a-f]+:	8b 5d fc[ 	]+mov    0xfffffffc\(%ebp\),%ebx
d243 1
a243 1
 [0-9a-f]+:	2b 91 f4 ff ff ff[ 	]+sub    0xfffffff4\(%ecx\),%edx
d404 1
a404 1
 [0-9a-f]+:	8d 90 04 f0 ff ff[ 	]+lea    0xfffff004\(%eax\),%edx
d454 1
a454 1
 [0-9a-f]+:	8b 5d fc[ 	]+mov    0xfffffffc\(%ebp\),%ebx
@


1.1
log
@include/elf/ChangeLog:
Introduce TLS descriptors for i386 and x86_64.
* common.h (DT_TLSDESC_GOT, DT_TLSDESC_PLT): New.
* i386.h (R_386_TLS_GOTDESC, R_386_TLS_DESC_CALL, R_386_TLS_DESC):
New.
* x86-64.h (R_X86_64_GOTPC32_TLSDESC, R_X86_64_TLSDESC_CALL,
R_X86_64_TLSDESC): New.
bfd/ChangeLog:
Introduce TLS descriptors for i386 and x86_64.
* reloc.c (BFD_RELOC_386_TLS_GOTDESC, BFD_RELOC_386_TLS_DESC,
BFD_RELOC_386_TLS_DESC_CALL, BFD_RELOC_X86_64_GOTPC32_TLSDESC,
BFD_RELOC_X86_64_TLSDESC, BFD_RELOC_X86_64_TLSDESC_CALL): New.
* libbfd.h, bfd-in2.h: Rebuilt.
* elf32-i386.c (elf_howto_table): New relocations.
(R_386_tls): Adjust.
(elf_i386_reloc_type_lookup): Map new relocations.
(GOT_TLS_GDESC, GOT_TLS_GD_BOTH_P): New macros.
(GOT_TLS_GD_P, GOT_TLS_GDESC_P, GOT_TLS_GD_ANY_P): New macros.
(struct elf_i386_link_hash_entry): Add tlsdesc_got field.
(struct elf_i386_obj_tdata): Add local_tlsdesc_gotent field.
(elf_i386_local_tlsdesc_gotent): New macro.
(struct elf_i386_link_hash_table): Add sgotplt_jump_table_size.
(elf_i386_compute_jump_table_size): New macro.
(link_hash_newfunc): Initialize tlsdesc_got.
(elf_i386_link_hash_table_create): Set sgotplt_jump_table_size.
(elf_i386_tls_transition): Handle R_386_TLS_GOTDESC and
R_386_TLS_DESC_CALL.
(elf_i386_check_relocs): Likewise.  Allocate space for
local_tlsdesc_gotent.
(elf_i386_gc_sweep_hook): Handle R_386_TLS_GOTDESC and
R_386_TLS_DESC_CALL.
(allocate_dynrelocs): Count function PLT relocations.  Reserve
space for TLS descriptors and relocations.
(elf_i386_size_dynamic_sections): Reserve space for TLS
descriptors and relocations.  Set up sgotplt_jump_table_size.
Don't zero reloc_count in srelplt.
(elf_i386_always_size_sections): New.  Set up _TLS_MODULE_BASE_.
(elf_i386_relocate_section): Handle R_386_TLS_GOTDESC and
R_386_TLS_DESC_CALL.
(elf_i386_finish_dynamic_symbol): Use GOT_TLS_GD_ANY_P.
(elf_backend_always_size_sections): Define.
* elf64-x86-64.c (x86_64_elf_howto): Add R_X86_64_GOTPC32_TLSDESC,
R_X86_64_TLSDESC, R_X86_64_TLSDESC_CALL.
(R_X86_64_standard): Adjust.
(x86_64_reloc_map): Map new relocs.
(elf64_x86_64_rtype_to_howto): New, split out of...
(elf64_x86_64_info_to_howto): ... this function, and...
(elf64_x86_64_reloc_type_lookup): ... use it to map elf_reloc_val.
(GOT_TLS_GDESC, GOT_TLS_GD_BOTH_P): New macros.
(GOT_TLS_GD_P, GOT_TLS_GDESC_P, GOT_TLS_GD_ANY_P): New macros.
(struct elf64_x86_64_link_hash_entry): Add tlsdesc_got field.
(struct elf64_x86_64_obj_tdata): Add local_tlsdesc_gotent field.
(elf64_x86_64_local_tlsdesc_gotent): New macro.
(struct elf64_x86_64_link_hash_table): Add tlsdesc_plt,
tlsdesc_got and sgotplt_jump_table_size fields.
(elf64_x86_64_compute_jump_table_size): New macro.
(link_hash_newfunc): Initialize tlsdesc_got.
(elf64_x86_64_link_hash_table_create): Initialize new fields.
(elf64_x86_64_tls_transition): Handle R_X86_64_GOTPC32_TLSDESC and
R_X86_64_TLSDESC_CALL.
(elf64_x86_64_check_relocs): Likewise.  Allocate space for
local_tlsdesc_gotent.
(elf64_x86_64_gc_sweep_hook): Handle R_X86_64_GOTPC32_TLSDESC and
R_X86_64_TLSDESC_CALL.
(allocate_dynrelocs): Count function PLT relocations.  Reserve
space for TLS descriptors and relocations.
(elf64_x86_64_size_dynamic_sections): Reserve space for TLS
descriptors and relocations.  Set up sgotplt_jump_table_size,
tlsdesc_plt and tlsdesc_got.  Make room for them.  Don't zero
reloc_count in srelplt.  Add dynamic entries for DT_TLSDESC_PLT
and DT_TLSDESC_GOT.
(elf64_x86_64_always_size_sections): New.  Set up
_TLS_MODULE_BASE_.
(elf64_x86_64_relocate_section): Handle R_386_TLS_GOTDESC and
R_386_TLS_DESC_CALL.
(elf64_x86_64_finish_dynamic_symbol): Use GOT_TLS_GD_ANY_P.
(elf64_x86_64_finish_dynamic_sections): Set DT_TLSDESC_PLT and
DT_TLSDESC_GOT.  Set up TLS descriptor lazy resolver PLT entry.
(elf_backend_always_size_sections): Define.
binutils/ChangeLog:
Introduce TLS descriptors for i386 and x86_64.
* readelf.c (get_dynamic_type): Handle DT_TLSDESC_GOT and
DT_TLSDESC_PLT.
gas/ChangeLog:
Introduce TLS descriptors for i386 and x86_64.
* config/tc-i386.c (tc_i386_fix_adjustable): Handle
BFD_RELOC_386_TLS_GOTDESC, BFD_RELOC_386_TLS_DESC_CALL,
BFD_RELOC_X86_64_GOTPC32_TLSDESC, BFD_RELOC_X86_64_TLSDESC_CALL.
(optimize_disp): Emit fix up for BFD_RELOC_386_TLS_DESC_CALL and
BFD_RELOC_X86_64_TLSDESC_CALL immediately, and clear the
displacement bits.
(build_modrm_byte): Set up zero modrm for TLS desc calls.
(lex_got): Handle @@tlsdesc and @@tlscall.
(md_apply_fix, tc_gen_reloc): Handle the new relocations.
ld/testsuite/ChangeLog:
Introduce TLS descriptors for i386 and x86_64.
* ld-i386/i386.exp: Run on x86_64-*-linux* and amd64-*-linux*.
Add new tests.
* ld-i386/pcrel16.d: Add -melf_i386.
* ld-i386/pcrel8.d: Likewise.
* ld-i386/tlsbindesc.dd: New.
* ld-i386/tlsbindesc.rd: New.
* ld-i386/tlsbindesc.s: New.
* ld-i386/tlsbindesc.sd: New.
* ld-i386/tlsbindesc.td: New.
* ld-i386/tlsdesc.dd: New.
* ld-i386/tlsdesc.rd: New.
* ld-i386/tlsdesc.s: New.
* ld-i386/tlsdesc.sd: New.
* ld-i386/tlsdesc.td: New.
* ld-i386/tlsgdesc.dd: New.
* ld-i386/tlsgdesc.rd: New.
* ld-i386/tlsgdesc.s: New.
* ld-x86-64/x86-64.exp: Run new tests.
* ld-x86-64/tlsbindesc.dd: New.
* ld-x86-64/tlsbindesc.rd: New.
* ld-x86-64/tlsbindesc.s: New.
* ld-x86-64/tlsbindesc.sd: New.
* ld-x86-64/tlsbindesc.td: New.
* ld-x86-64/tlsdesc.dd: New.
* ld-x86-64/tlsdesc.pd: New.
* ld-x86-64/tlsdesc.rd: New.
* ld-x86-64/tlsdesc.s: New.
* ld-x86-64/tlsdesc.sd: New.
* ld-x86-64/tlsdesc.td: New.
* ld-x86-64/tlsgdesc.dd: New.
* ld-x86-64/tlsgdesc.rd: New.
* ld-x86-64/tlsgdesc.s: New.
@
text
@d54 1
a54 2
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d63 1
a63 2
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d71 1
a71 2
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d79 1
a79 2
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d87 1
a87 2
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d94 1
a94 2
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d109 1
a109 2
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
@

