head	1.10;
access;
symbols
	binutils-2_24-branch:1.10.0.4
	binutils-2_24-branchpoint:1.10
	binutils-2_21_1:1.8
	binutils-2_23_2:1.10
	binutils-2_23_1:1.10
	binutils-2_23:1.10
	binutils-2_23-branch:1.10.0.2
	binutils-2_23-branchpoint:1.10
	binutils-2_22_branch:1.9.0.4
	binutils-2_22:1.9
	binutils-2_22-branch:1.9.0.2
	binutils-2_22-branchpoint:1.9
	binutils-2_21:1.8
	binutils-2_21-branch:1.8.0.12
	binutils-2_21-branchpoint:1.8
	binutils-2_20_1:1.8
	binutils-2_20:1.8
	binutils-arc-20081103-branch:1.8.0.10
	binutils-arc-20081103-branchpoint:1.8
	binutils-2_20-branch:1.8.0.8
	binutils-2_20-branchpoint:1.8
	dje-cgen-play1-branch:1.8.0.6
	dje-cgen-play1-branchpoint:1.8
	arc-20081103-branch:1.8.0.4
	arc-20081103-branchpoint:1.8
	binutils-2_19_1:1.8
	binutils-2_19:1.8
	binutils-2_19-branch:1.8.0.2
	binutils-2_19-branchpoint:1.8
	binutils-2_18:1.6
	binutils-2_18-branch:1.6.0.2
	binutils-2_18-branchpoint:1.6
	binutils-csl-coldfire-4_1-32:1.4
	binutils-csl-sourcerygxx-4_1-32:1.4
	binutils-csl-innovasic-fido-3_4_4-33:1.4
	binutils-csl-sourcerygxx-3_4_4-32:1.4
	binutils-csl-coldfire-4_1-30:1.4
	binutils-csl-sourcerygxx-4_1-30:1.4
	binutils-csl-coldfire-4_1-28:1.4
	binutils-csl-sourcerygxx-4_1-29:1.4
	binutils-csl-sourcerygxx-4_1-28:1.4
	binutils-csl-arm-2006q3-27:1.4
	binutils-csl-sourcerygxx-4_1-27:1.4
	binutils-csl-arm-2006q3-26:1.4
	binutils-csl-sourcerygxx-4_1-26:1.4
	binutils-csl-sourcerygxx-4_1-25:1.4
	binutils-csl-sourcerygxx-4_1-24:1.4
	binutils-csl-sourcerygxx-4_1-23:1.4
	binutils-csl-sourcerygxx-4_1-21:1.4
	binutils-csl-arm-2006q3-21:1.4
	binutils-csl-sourcerygxx-4_1-22:1.4
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.4
	binutils-csl-sourcerygxx-4_1-20:1.4
	binutils-csl-arm-2006q3-19:1.4
	binutils-csl-sourcerygxx-4_1-19:1.4
	binutils-csl-sourcerygxx-4_1-18:1.4
	binutils-csl-renesas-4_1-9:1.4
	binutils-csl-sourcerygxx-3_4_4-25:1.4
	binutils-csl-renesas-4_1-8:1.4
	binutils-csl-renesas-4_1-7:1.4
	binutils-csl-renesas-4_1-6:1.4
	binutils-csl-sourcerygxx-4_1-17:1.4
	binutils-csl-sourcerygxx-4_1-14:1.4
	binutils-csl-sourcerygxx-4_1-15:1.4
	binutils-csl-sourcerygxx-4_1-13:1.4
	binutils-2_17:1.4
	binutils-csl-sourcerygxx-4_1-12:1.4
	binutils-csl-sourcerygxx-3_4_4-21:1.4
	binutils-csl-wrs-linux-3_4_4-24:1.4
	binutils-csl-wrs-linux-3_4_4-23:1.4
	binutils-csl-sourcerygxx-4_1-9:1.4
	binutils-csl-sourcerygxx-4_1-8:1.4
	binutils-csl-sourcerygxx-4_1-7:1.4
	binutils-csl-arm-2006q1-6:1.4
	binutils-csl-sourcerygxx-4_1-6:1.4
	binutils-csl-wrs-linux-3_4_4-22:1.4
	binutils-csl-coldfire-4_1-11:1.4
	binutils-csl-sourcerygxx-3_4_4-19:1.4
	binutils-csl-coldfire-4_1-10:1.4
	binutils-csl-sourcerygxx-4_1-5:1.4
	binutils-csl-sourcerygxx-4_1-4:1.4
	binutils-csl-wrs-linux-3_4_4-21:1.4
	binutils-csl-morpho-4_1-4:1.4
	binutils-csl-sourcerygxx-3_4_4-17:1.4
	binutils-csl-wrs-linux-3_4_4-20:1.4
	binutils-2_17-branch:1.4.0.10
	binutils-2_17-branchpoint:1.4
	binutils-csl-2_17-branch:1.4.0.8
	binutils-csl-2_17-branchpoint:1.4
	binutils-csl-gxxpro-3_4-branch:1.4.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.4
	binutils-2_16_1:1.4
	binutils-csl-arm-2005q1b:1.4
	binutils-2_16:1.4
	binutils-csl-arm-2005q1a:1.4
	binutils-csl-arm-2005q1-branch:1.4.0.4
	binutils-csl-arm-2005q1-branchpoint:1.4
	binutils-2_16-branch:1.4.0.2
	binutils-2_16-branchpoint:1.4
	csl-arm-2004-q3d:1.4
	csl-arm-2004-q3:1.4
	binutils-2_15:1.3
	binutils-2_15-branchpoint:1.3
	csl-arm-2004-q1a:1.3
	csl-arm-2004-q1:1.3
	binutils-2_15-branch:1.3.0.6
	cagney_bfdfile-20040213-branch:1.3.0.4
	cagney_bfdfile-20040213-branchpoint:1.3
	cagney_bigcore-20040122-branch:1.3.0.2
	cagney_bigcore-20040122-branchpoint:1.3
	csl-arm-2003-q4:1.2
	binutils-2_14:1.2
	binutils-2_14-branch:1.2.0.2
	binutils-2_14-branchpoint:1.2
	binutils-2_13_2_1:1.1.2.1
	binutils-2_13_2:1.1.2.1
	binutils-2_13_1:1.1.2.1
	binutils-2_13-branch:1.1.0.2
	binutils_latest_snapshot:1.10;
locks; strict;
comment	@# @;


1.10
date	2012.04.03.16.01.36;	author roland;	state Exp;
branches;
next	1.9;

1.9
date	2011.06.20.13.18.49;	author jakub;	state Exp;
branches;
next	1.8;

1.8
date	2007.09.20.17.38.37;	author hjl;	state Exp;
branches;
next	1.7;

1.7
date	2007.08.23.16.13.37;	author hjl;	state Exp;
branches;
next	1.6;

1.6
date	2007.04.27.04.22.00;	author hjl;	state Exp;
branches;
next	1.5;

1.5
date	2006.06.29.12.34.37;	author jakub;	state Exp;
branches;
next	1.4;

1.4
date	2004.05.11.17.08.36;	author jakub;	state Exp;
branches;
next	1.3;

1.3
date	2004.01.18.23.14.13;	author amodra;	state Exp;
branches;
next	1.2;

1.2
date	2002.10.01.09.10.45;	author jakub;	state Exp;
branches;
next	1.1;

1.1
date	2002.09.19.19.01.15;	author jakub;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2002.09.23.22.15.25;	author drow;	state Exp;
branches;
next	;


desc
@@


1.10
log
@bfd/
2012-04-03  Roland McGrath  <mcgrathr@@google.com>

	* elf-nacl.c: New file.
	* elf-nacl.h: New file.
	* elf32-i386.c (elf_backend_modify_segment_map): Define for
	bfd_elf32_i386_nacl_vec.
	(elf_backend_modify_program_headers): Likewise.
	* elf64-x86-64.c (elf_backend_modify_segment_map): Define for
	bfd_elf64_x86_64_nacl_vec and bfd_elf32_x86_64_nacl_vec.
	(elf_backend_modify_program_headers): Likewise.
	* Makefile.am (BFD32_BACKENDS, BFD64_BACKENDS): Add elf-nacl.lo here.
	(BFD32_BACKENDS_CFILES, BFD64_BACKENDS_CFILES): Add elf-nacl.c here.
	* Makefile.in: Regenerated.
	* configure.in (bfd_elf64_x86_64_nacl_vec): Add elf-nacl.o to tb here.
	(bfd_elf32_x86_64_nacl_vec): Likewise.
	(bfd_elf64_x86_64_vec, bfd_elf32_x86_64_vec): Likewise.
	(bfd_elf64_x86_64_freebsd_vec, bfd_elf64_x86_64_sol2_vec): Likewise.
	(bfd_elf64_l1om_vec, bfd_elf64_l1om_freebsd_vec): Likewise.
	(bfd_elf64_k1om_vec, bfd_elf64_k1om_freebsd_vec): Likewise.
	(bfd_elf32_i386_nacl_vec): Likewise.
	(bfd_elf32_i386_sol2_vec, bfd_elf32_i386_freebsd_vec): Likewise.
	(bfd_elf32_i386_vxworks_vec, bfd_elf32_i386_vec): Likewise.
	* configure: Regenerated.

binutils/testsuite/
2012-04-03  Roland McGrath  <mcgrathr@@google.com>

	* lib/binutils-common.exp (is_elf_format): Consider *-*-nacl* to
	be ELF too.

	* binutils-all/elfedit-4.d: Add "#as: --64" option.

	* binutils-all/i386/i386.exp: Accept nacl targets too.
	* binutils-all/x86-64/x86-64.exp: Likewise.

gas/testsuite/
2012-04-03  Roland McGrath  <mcgrathr@@google.com>

	* gas/i386/k1om.d: Add not-target match for *-*-nacl*.
	* gas/i386/l1om.d: Likewise.

ld/
2012-04-03  Roland McGrath  <mcgrathr@@google.com>

	* configure.tgt (i[3-7]86-*-nacl*, x86_64-*-nacl*): Handle them.
	* emulparams/elf_nacl.sh: New file.
	* emulparams/elf_i386_nacl.sh: New file.
	* emulparams/elf32_x86_64_nacl.sh: New file.
	* emulparams/elf_x86_64_nacl.sh: New file.
	* Makefile.am (ALL_EMULATION_SOURCES): Add eelf_i386_nacl.c here.
	(ALL_64_EMULATION_SOURCES): Add eelf32_x86_64_nacl.c and
	eelf_x86_64_nacl.c here.
	(eelf_i386_nacl.c, eelf32_x86_64_nacl.c, eelf_x86_64_nacl.c):
	New targets.
	* Makefile.in: Regenerated.

	* scripttempl/elf.sc: Handle SEPARATE_CODE cases.

ld/testsuite/
2012-04-03  Roland McGrath  <mcgrathr@@google.com>

	* ld-x86-64/ilp32-4-nacl.d: New file.
	* ld-x86-64/x86-64.exp: Run it.

	* ld-discard/discard.exp: Accept nacl targets too.
	* ld-elf/binutils.exp: Likewise.
	* ld-elf/comm-data.exp: Likewise.
	* ld-elf/elf.exp: Likewise.
	* ld-elf/tls_common.exp: Likewise.
	* ld-elfvers/vers.exp: Likewise.
	* ld-elfvsb/elfvsb.exp: Likewise.
	* ld-elfweak/elfweak.exp: Likewise.
	* ld-gc/gc.exp: Likewise.
	* ld-ifunc/binutils.exp: Likewise.
	* ld-ifunc/ifunc.exp: Likewise.
	* ld-linkonce/linkonce.exp:Likewise.
	* ld-pie/pie.exp: Likewise.
	* ld-shared/shared.exp: Likewise.
	* ld-undefined/weak-undef.exp: Likewise.
	* ld-unique/unique.exp: Likewise.
	* ld-x86-64/dwarfreloc.exp: Likewise.
	* ld-x86-64/line.exp: Likewise.

	* lib/ld-lib.exp (slurp_options): Support global array
	options_regsub to apply substitutions to the contents
	of options lines read from the file.
	* ld-i386/emit-relocs.d: Renamed to ...
	* ld-i386/emit-relocs.rd: ... this.
	* ld-i386/i386.exp: Accept nacl targets too.
	For them, use options_regsub to replace elf_i386 with
	elf_i386_nacl in run_dump_test cases; apply the same
	substitution in $i386tests; replace foo.rd expectations
	files with foo-nacl.rd in $i386tests.
	(i386tests): Change emit-relocs.d to emit-relocs.rd here.
	* ld-i386/emit-relocs-nacl.rd: New file.
	* ld-i386/plt-nacl.pd: New file.
	* ld-i386/plt-pic-nacl.pd: New file.
	* ld-i386/tlsbin-nacl.rd: New file.
	* ld-i386/tlsbindesc-nacl.rd: New file.
	* ld-i386/tlsdesc-nacl.rd: New file.
	* ld-i386/tlsgdesc-nacl.rd: New file.
	* ld-i386/tlsnopic-nacl.rd: New file.
	* ld-i386/tlspic-nacl.rd: New file.
	* ld-x86-64/x86-64.exp: Accept nacl targets too.
	For them, use options_regsub to replace elf_x86_64 with
	elf_x86_64_nacl in run_dump_test cases; apply the same
	substitution in $x86_64tests; replace foo.rd expectations
	files with foo-nacl.rd in $x86_64tests.
	Add explicit -melf_x86_64 to ld options in tests that need it,
	in case the default emulation is x32 (as it is for x86_64-nacl).
	* ld/testsuite/ld-x86-64/plt-nacl.pd: New file.
	* ld/testsuite/ld-x86-64/split-by-file-nacl.rd: New file.
	* ld/testsuite/ld-x86-64/tlsbin-nacl.rd: New file.
	* ld/testsuite/ld-x86-64/tlsbindesc-nacl.rd: New file.
	* ld/testsuite/ld-x86-64/tlsdesc-nacl.pd: New file.
	* ld/testsuite/ld-x86-64/tlsdesc-nacl.rd: New file.
	* ld/testsuite/ld-x86-64/tlsgdesc-nacl.rd: New file.
	* ld/testsuite/ld-x86-64/tlspic-nacl.rd: New file.

	* ld-i386/hidden2.d: Loosen regexps to match any file format variant,
	and not to depend on exact addresses, displacements, etc. where
	they are irrelevant.
	* ld-i386/pcrel16.d: Likewise.
	* ld-i386/pcrel16abs.d: Likewise.
	* ld-i386/pr12718.d: Likewise.
	* ld-i386/pr12921.d: Likewise.
	* ld-i386/reloc.d: Likewise.
	* ld-i386/tlsbin.dd: Likewise.
	* ld-i386/tlsbin.sd: Likewise.
	* ld-i386/tlsbin.td: Likewise.
	* ld-i386/tlsbindesc.dd: Likewise.
	* ld-i386/tlsbindesc.sd: Likewise.
	* ld-i386/tlsbindesc.td: Likewise.
	* ld-i386/tlsdesc.dd: Likewise.
	* ld-i386/tlsdesc.sd: Likewise.
	* ld-i386/tlsdesc.td: Likewise.
	* ld-i386/tlsg.sd: Likewise.
	* ld-i386/tlsgdesc.dd: Likewise.
	* ld-i386/tlsindntpoff.dd: Likewise.
	* ld-i386/tlsnopic.dd: Likewise.
	* ld-i386/tlsnopic.sd: Likewise.
	* ld-i386/tlspic.dd: Likewise.
	* ld-i386/tlspic.sd: Likewise.
	* ld-i386/tlspic.td: Likewise.
	* ld-i386/tlspie2.d: Likewise.
	* ld-x86-64/hidden2.d: Likewise.
	* ld-x86-64/pcrel16.d: Likewise.
	* ld-x86-64/pr12718.d: Likewise.
	* ld-x86-64/pr12921.d: Likewise.
	* ld-x86-64/protected3.d: Likewise.
	* ld-x86-64/tlsbin.dd: Likewise.
	* ld-x86-64/tlsbin.sd: Likewise.
	* ld-x86-64/tlsbin.td: Likewise.
	* ld-x86-64/tlsbindesc.dd: Likewise.
	* ld-x86-64/tlsbindesc.sd: Likewise.
	* ld-x86-64/tlsbindesc.td: Likewise.
	* ld-x86-64/tlsdesc.dd: Likewise.
	* ld-x86-64/tlsdesc.sd: Likewise.
	* ld-x86-64/tlsdesc.td: Likewise.
	* ld-x86-64/tlsg.sd: Likewise.
	* ld-x86-64/tlsgd5.dd: Likewise.
	* ld-x86-64/tlsgd6.dd: Likewise.
	* ld-x86-64/tlsgdesc.dd: Likewise.
	* ld-x86-64/tlspic.dd: Likewise.
	* ld-x86-64/tlspic.sd: Likewise.
	* ld-x86-64/tlspic.td: Likewise.

	* ld-x86-64/ilp32-8.d: Match any file format variant.
	Use a -Ttext and adjust expected results, to handle variant layouts.
	* ld-x86-64/ilp32-9.d: Likewise.

	* ld-i386/alloc.t: Remove superfluous OUTPUT_FORMAT statement.
	* ld-i386/pr12627.t: Likewise.

	* ld-x86-64/abs-l1om.d: Add target: constraint.
	* ld-x86-64/protected2-l1om.d: Likewise.
	* ld-x86-64/protected3-l1om.d: Likewise.
	* ld-x86-64/ilp32-4.d: Likewise.

	* ld-x86-64/plt.s: New file.
	* ld-x86-64/pltlib.s: New file.
	* ld-x86-64/plt.pd: New file.
	* ld-x86-64/x86-64.exp (x86_64tests): Add them.

	* ld-i386/plt.s: New file.
	* ld-i386/pltlib.s: New file.
	* ld-i386/plt.pd: New file.
	* ld-i386/plt-pic.s: New file.
	* ld-i386/plt-pic.pd: New file.
	* ld-i386/i386.exp (i386tests): Add them.
@
text
@#source: tlsbinpic.s
#source: tlsbin.s
#as: --32
#ld: -melf_i386 tmpdir/libtlslib.so --no-ld-generated-unwind-info
#objdump: -drj.text
#target: i?86-*-*

# PT_TLS layout is:
# Offset from	Offset from	Name
# TCB base	TCB end
# 0x00		-0xa0		sg1..sg8
# 0x20		-0x80		sl1..sl8
# 0x40		-0x60		sh1..sh8
# 0x60		-0x40		bg1..bg8
# 0x80		-0x20		bl1..bl8

.*: +file format elf32-i386.*

Disassembly of section .text:

[0-9a-f]+ <fn2>:
 +[0-9a-f]+:	55[ 	]+push   %ebp
 +[0-9a-f]+:	89 e5[ 	]+mov    %esp,%ebp
 +[0-9a-f]+:	53[ 	]+push   %ebx
 +[0-9a-f]+:	50[ 	]+push   %eax
 +[0-9a-f]+:	e8 00 00 00 00[ 	]+call   [0-9a-f]+ <fn2\+0xa>
 +[0-9a-f]+:	5b[ 	]+pop    %ebx
 +[0-9a-f]+:	81 c3 ([0-9a-f]{2} ){4}[ 	]+add    \$0x[0-9a-f]+,%ebx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  GD -> IE because variable is not defined in executable
 +[0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 +[0-9a-f]+:	2b 83 f8 ff ff ff[ 	]+sub    -0x8\(%ebx\),%eax
#				->R_386_TLS_TPOFF32	sG1
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  GD -> IE because variable is not defined in executable where
#  the variable is referenced through @@gottpoff too
 +[0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 +[0-9a-f]+:	2b 83 e8 ff ff ff[ 	]+sub    -0x18\(%ebx\),%eax
#				->R_386_TLS_TPOFF32	sG2
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  GD -> IE because variable is not defined in executable where
#  the variable is referenced through @@gotntpoff too
 +[0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 +[0-9a-f]+:	03 83 dc ff ff ff[ 	]+add    -0x24\(%ebx\),%eax
#				->R_386_TLS_TPOFF	sG3
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  GD -> IE because variable is not defined in executable where
#  the variable is referenced through @@gottpoff and @@gotntpoff too
 +[0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 +[0-9a-f]+:	2b 83 ec ff ff ff[ 	]+sub    -0x14\(%ebx\),%eax
#				->R_386_TLS_TPOFF32	sG4
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  GD -> LE with global variable defined in executable
 +[0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 +[0-9a-f]+:	81 e8 00 10 00 00[ 	]+sub    \$0x1000,%eax
#							sg1
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  GD -> LE with local variable defined in executable
 +[0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 +[0-9a-f]+:	81 e8 e0 0f 00 00[ 	]+sub    \$0xfe0,%eax
#							sl1
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  GD -> LE with hidden variable defined in executable
 +[0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 +[0-9a-f]+:	81 e8 c0 0f 00 00[ 	]+sub    \$0xfc0,%eax
#							sh1
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  LD -> LE
 +[0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	8d 74 26 00[ 	]+lea    0x0\(%esi,%eiz,1\),%esi
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	8d 90 20 f0 ff ff[ 	]+lea    -0xfe0\(%eax\),%edx
#							sl1
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	8d 88 24 f0 ff ff[ 	]+lea    -0xfdc\(%eax\),%ecx
#							sl2
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  LD -> LE against hidden variables
 +[0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	8d 74 26 00[ 	]+lea    0x0\(%esi,%eiz,1\),%esi
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	8d 90 40 f0 ff ff[ 	]+lea    -0xfc0\(%eax\),%edx
#							sh1
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	8d 88 44 f0 ff ff[ 	]+lea    -0xfbc\(%eax\),%ecx
#							sh2
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gottpoff IE against global var
 +[0-9a-f]+:	65 8b 0d 00 00 00 00[ 	]+mov    %gs:0x0,%ecx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	2b 8b e8 ff ff ff[ 	]+sub    -0x18\(%ebx\),%ecx
#				->R_386_TLS_TPOFF32	sG2
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gottpoff IE against global var
 +[0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	2b 83 ec ff ff ff[ 	]+sub    -0x14\(%ebx\),%eax
#				->R_386_TLS_TPOFF32	sG4
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gotntpoff IE against global var
 +[0-9a-f]+:	65 8b 0d 00 00 00 00[ 	]+mov    %gs:0x0,%ecx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	03 8b dc ff ff ff[ 	]+add    -0x24\(%ebx\),%ecx
#				->R_386_TLS_TPOFF	sG3
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gotntpoff IE against global var
 +[0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	03 83 f0 ff ff ff[ 	]+add    -0x10\(%ebx\),%eax
#				->R_386_TLS_TPOFF	sG4
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gottpoff IE -> LE against global var defined in exec
 +[0-9a-f]+:	65 8b 0d 00 00 00 00[ 	]+mov    %gs:0x0,%ecx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	81 e9 00 10 00 00[ 	]+sub    \$0x1000,%ecx
#							sg1
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gotntpoff IE -> LE against local var
 +[0-9a-f]+:	65 8b 0d 00 00 00 00[ 	]+mov    %gs:0x0,%ecx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	81 c0 20 f0 ff ff[ 	]+add    \$0xfffff020,%eax
#							sl1
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gottpoff IE -> LE against hidden var
 +[0-9a-f]+:	65 8b 0d 00 00 00 00[ 	]+mov    %gs:0x0,%ecx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	81 e9 c0 0f 00 00[ 	]+sub    \$0xfc0,%ecx
#							sh1
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  Direct access through %gs
#  @@gotntpoff IE against global var
 +[0-9a-f]+:	8b 8b e0 ff ff ff[ 	]+mov    -0x20\(%ebx\),%ecx
#				->R_386_TLS_TPOFF	sG5
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	65 8b 11[ 	]+mov    %gs:\(%ecx\),%edx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gotntpoff IE->LE against local var
 +[0-9a-f]+:	c7 c0 30 f0 ff ff[ 	]+mov    \$0xfffff030,%eax
#							sl5
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	65 8b 10[ 	]+mov    %gs:\(%eax\),%edx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gotntpoff IE->LE against hidden var
 +[0-9a-f]+:	c7 c2 50 f0 ff ff[ 	]+mov    \$0xfffff050,%edx
#							sh5
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	65 8b 12[ 	]+mov    %gs:\(%edx\),%edx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  GD -> IE because variable is not defined in executable
 +[0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 +[0-9a-f]+:	2b 83 f8 ff ff ff[ 	]+sub    -0x8\(%ebx\),%eax
#				->R_386_TLS_TPOFF32	sG1
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	8b 5d fc[ 	]+mov    -0x4\(%ebp\),%ebx
 +[0-9a-f]+:	c9[ 	]+leave *
 +[0-9a-f]+:	c3[ 	]+ret *

[0-9a-f]+ <_start>:
 +[0-9a-f]+:	55[ 	]+push   %ebp
 +[0-9a-f]+:	89 e5[ 	]+mov    %esp,%ebp
 +[0-9a-f]+:	e8 00 00 00 00[ 	]+call   [0-9a-f]+ <_start\+0x8>
 +[0-9a-f]+:	59[ 	]+pop    %ecx
 +[0-9a-f]+:	81 c1 ([0-9a-f]{2} ){4}[ 	]+add    \$0x[0-9a-f]*f94,%ecx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gottpoff IE against global var
 +[0-9a-f]+:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	2b 91 f4 ff ff ff[ 	]+sub    -0xc\(%ecx\),%edx
#				->R_386_TLS_TPOFF32	sG6
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@indntpoff IE against global var
 +[0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	03 05 ([0-9a-f]{2} ){4}[ 	]+add    0x[0-9a-f]+108,%eax
#				->R_386_TLS_TPOFF	sG7
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@indntpoff direct %gs access IE against global var
 +[0-9a-f]+:	8b 15 ([0-9a-f]{2} ){4}[ 	]+mov    0x[0-9a-f]+120,%edx
#				->R_386_TLS_TPOFF	sG8
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	65 8b 02[ 	]+mov    %gs:\(%edx\),%eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gottpoff IE -> LE against global var defined in exec
 +[0-9a-f]+:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	81 ea 8c 0f 00 00[ 	]+sub    \$0xf8c,%edx
#							bg6
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@indntpoff IE -> LE against global var defined in exec
 +[0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	81 c0 78 f0 ff ff[ 	]+add    \$0xfffff078,%eax
#							bg7
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@indntpoff direct %gs access IE -> LE against global var defined
#  in exec
 +[0-9a-f]+:	c7 c2 7c f0 ff ff[ 	]+mov    \$0xfffff07c,%edx
#							bg8
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	65 8b 02[ 	]+mov    %gs:\(%edx\),%eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gottpoff IE -> LE against local var
 +[0-9a-f]+:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	81 ea 6c 0f 00 00[ 	]+sub    \$0xf6c,%edx
#							bl6
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@indntpoff IE -> LE against local var
 +[0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	81 c0 98 f0 ff ff[ 	]+add    \$0xfffff098,%eax
#							bl7
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@indntpoff direct %gs access IE -> LE against local var
 +[0-9a-f]+:	c7 c2 9c f0 ff ff[ 	]+mov    \$0xfffff09c,%edx
#							bl8
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	65 8b 02[ 	]+mov    %gs:\(%edx\),%eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gottpoff IE -> LE against hidden but not local var
 +[0-9a-f]+:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	81 ea ac 0f 00 00[ 	]+sub    \$0xfac,%edx
#							sh6
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@indntpoff IE -> LE against hidden but not local var
 +[0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	81 c0 58 f0 ff ff[ 	]+add    \$0xfffff058,%eax
#							sh7
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@indntpoff direct %gs access IE -> LE against hidden but not
#  local var
 +[0-9a-f]+:	c7 c2 5c f0 ff ff[ 	]+mov    \$0xfffff05c,%edx
#							sh8
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	65 8b 02[ 	]+mov    %gs:\(%edx\),%eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  LE @@tpoff, global var defined in exec
 +[0-9a-f]+:	ba 00 10 00 00[ 	]+mov    \$0x1000,%edx
#							sg1
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	29 d0[ 	]+sub    %edx,%eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  LE @@tpoff, local var
 +[0-9a-f]+:	b8 7f 0f 00 00[ 	]+mov    \$0xf7f,%eax
#							bl1+1
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	29 c2[ 	]+sub    %eax,%edx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  LE @@tpoff, hidden var defined in exec
 +[0-9a-f]+:	b8 bd 0f 00 00[ 	]+mov    \$0xfbd,%eax
#							sh1+3
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	29 c2[ 	]+sub    %eax,%edx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  LE @@ntpoff, global var defined in exec
 +[0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	8d 90 04 f0 ff ff[ 	]+lea    -0xffc\(%eax\),%edx
#							sg2
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  LE @@ntpoff, local var, non-canonical sequence
 +[0-9a-f]+:	b8 86 f0 ff ff[ 	]+mov    \$0xfffff086,%eax
#							bl2+2
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	01 c2[ 	]+add    %eax,%edx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  LE @@ntpoff, hidden var defined in exec, non-canonical sequence
 +[0-9a-f]+:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	81 c2 45 f0 ff ff[ 	]+add    \$0xfffff045,%edx
#							sh2+1
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  LE @@ntpoff, global var defined in exec
 +[0-9a-f]+:	65 a1 08 f0 ff ff[ 	]+mov    %gs:0xfffff008,%eax
#							sg3
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  LE @@ntpoff, local var
 +[0-9a-f]+:	65 8b 15 8b f0 ff ff[ 	]+mov    %gs:0xfffff08b,%edx
#							bl3+3
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  LE @@ntpoff, hidden var defined in exec
 +[0-9a-f]+:	65 8b 15 49 f0 ff ff[ 	]+mov    %gs:0xfffff049,%edx
#							sh3+1
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	8b 5d fc[ 	]+mov    -0x4\(%ebp\),%ebx
 +[0-9a-f]+:	c9[ 	]+leave *
 +[0-9a-f]+:	c3[ 	]+ret *
@


1.9
log
@	PR ld/12570
include/
	* bfdlink.h (struct bfd_link_info): Add no_ld_generated_unwind_info
	option.
ld/
	* emultempl/elf32.em (OPTION_LD_GENERATED_UNWIND_INFO,
	OPTION_NO_LD_GENERATED_UNWIND_INFO): Define.
	(gld${EMULATION_NAME}_handle_option): Handle
	--ld-generated-unwind-info and --no-ld-generated-unwind-info.
	* ld.texinfo (--ld-generated-unwind-info,
	--no-ld-generated-unwind-info): Document.
bfd/
	* elf-eh-frame.c (_bfd_elf_parse_eh_frame): Allow no relocations
	at all for linker created .eh_frame sections.
	(_bfd_elf_discard_section_eh_frame): Handle linker created
	.eh_frame sections with no relocations.
	* elf64-x86-64.c: Include dwarf2.h.
	(elf_x86_64_eh_frame_plt): New variable.
	(PLT_CIE_LENGTH, PLT_FDE_LENGTH, PLT_FDE_START_OFFSET,
	PLT_FDE_LEN_OFFSET): Define.
	(struct elf_x86_64_link_hash_table): Add plt_eh_frame field.
	(elf_x86_64_create_dynamic_sections): Create and fill in
	.eh_frame section for .plt section.
	(elf_x86_64_size_dynamic_sections): Write .plt section size
	into .eh_frame FDE covering .plt section.
	(elf_x86_64_finish_dynamic_sections): Write .plt section
	start into .eh_frame FDE covering .plt section.  Call
	_bfd_elf_write_section_eh_frame on htab->plt_eh_frame section.
	(elf_backend_plt_alignment): Define to 4.
	* elf32-i386.c: Include dwarf2.h.
	(elf_i386_eh_frame_plt): New variable.
	(PLT_CIE_LENGTH, PLT_FDE_LENGTH, PLT_FDE_START_OFFSET,
	PLT_FDE_LEN_OFFSET): Define.
	(struct elf_i386_link_hash_table): Add plt_eh_frame field.
	(elf_i386_create_dynamic_sections): Create and fill in
	.eh_frame section for .plt section.
	(elf_i386_size_dynamic_sections): Write .plt section size
	into .eh_frame FDE covering .plt section.
	(elf_i386_finish_dynamic_sections): Write .plt section
	start into .eh_frame FDE covering .plt section.  Call
	_bfd_elf_write_section_eh_frame on htab->plt_eh_frame section.
	(elf_backend_plt_alignment): Define to 4.
ld/testsuite/
	* ld-x86-64/x86-64.exp: Link some testcases with
	--no-ld-generated-unwind-info.
	* ld-x86-64/tlsbin.rd: Add --no-ld-generated-unwind-info to ld
	comment.
	* ld-x86-64/tlsdesc.dd: Likewise.
	* ld-x86-64/tlspic.dd: Likewise.
	* ld-x86-64/tlsdesc.sd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
	* ld-x86-64/tlsbindesc.rd: Likewise.
	* ld-x86-64/tlsbindesc.sd: Likewise.
	* ld-x86-64/tlsbin.td: Likewise.
	* ld-x86-64/tlsdesc.pd: Likewise.
	* ld-x86-64/tlsdesc.td: Likewise.
	* ld-x86-64/tlsbindesc.dd: Likewise.
	* ld-x86-64/tlsbin.dd: Likewise.
	* ld-x86-64/tlsgdesc.rd: Likewise.
	* ld-x86-64/tlspic.sd: Likewise.
	* ld-x86-64/tlsbindesc.td: Likewise.
	* ld-x86-64/tlspic.td: Likewise.
	* ld-x86-64/tlsbin.sd: Likewise.
	* ld-x86-64/ilp32-4.d: Likewise.
	* ld-x86-64/tlsgdesc.dd: Add --no-ld-generated-unwind-info to ld
	comment.  Adjust.
	* ld-x86-64/tlsdesc.rd: Likewise.
	* ld-x86-64/tlsgd6.dd: Adjust.
	* ld-x86-64/tlsgd5.dd: Likewise.
	* ld-i386/i386.exp: Link some testcases with
	--no-ld-generated-unwind-info.
	* ld-i386/tlsbin.rd: Add --no-ld-generated-unwind-info to ld
	comment..
	* ld-i386/tlsdesc.dd: Likewise.
	* ld-i386/tlspic.dd: Likewise.
	* ld-i386/tlsdesc.sd: Likewise.
	* ld-i386/tlsgdesc.dd: Likewise.
	* ld-i386/tlsnopic.sd: Likewise.
	* ld-i386/tlspic.rd: Likewise.
	* ld-i386/tlsdesc.rd: Likewise.
	* ld-i386/tlsbindesc.rd: Likewise.
	* ld-i386/tlsbindesc.sd: Likewise.
	* ld-i386/tlsbin.td: Likewise.
	* ld-i386/tlsdesc.td: Likewise.
	* ld-i386/tlsnopic.dd: Likewise.
	* ld-i386/tlsbindesc.dd: Likewise.
	* ld-i386/tlsbin.dd: Likewise.
	* ld-i386/tlsgdesc.rd: Likewise.
	* ld-i386/tlspic.sd: Likewise.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlsbindesc.td: Likewise.
	* ld-i386/tlspic.td: Likewise.
	* ld-i386/tlsbin.sd: Likewise.
@
text
@d17 1
a17 1
.*: +file format elf32-i386
d21 12
a32 12
0+8049000 <fn2>:
 8049000:	55[ 	]+push   %ebp
 8049001:	89 e5[ 	]+mov    %esp,%ebp
 8049003:	53[ 	]+push   %ebx
 8049004:	50[ 	]+push   %eax
 8049005:	e8 00 00 00 00[ 	]+call   804900a <fn2\+0xa>
 804900a:	5b[ 	]+pop    %ebx
 804900b:	81 c3 1a 11 00 00[ 	]+add    \$0x111a,%ebx
 8049011:	90[ 	]+nop *
 8049012:	90[ 	]+nop *
 8049013:	90[ 	]+nop *
 8049014:	90[ 	]+nop *
d34 2
a35 2
 8049015:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 804901b:	2b 83 f8 ff ff ff[ 	]+sub    -0x8\(%ebx\),%eax
d37 4
a40 4
 8049021:	90[ 	]+nop *
 8049022:	90[ 	]+nop *
 8049023:	90[ 	]+nop *
 8049024:	90[ 	]+nop *
d43 2
a44 2
 8049025:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 804902b:	2b 83 e8 ff ff ff[ 	]+sub    -0x18\(%ebx\),%eax
d46 4
a49 4
 8049031:	90[ 	]+nop *
 8049032:	90[ 	]+nop *
 8049033:	90[ 	]+nop *
 8049034:	90[ 	]+nop *
d52 2
a53 2
 8049035:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 804903b:	03 83 dc ff ff ff[ 	]+add    -0x24\(%ebx\),%eax
d55 4
a58 4
 8049041:	90[ 	]+nop *
 8049042:	90[ 	]+nop *
 8049043:	90[ 	]+nop *
 8049044:	90[ 	]+nop *
d61 2
a62 2
 8049045:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 804904b:	2b 83 ec ff ff ff[ 	]+sub    -0x14\(%ebx\),%eax
d64 4
a67 4
 8049051:	90[ 	]+nop *
 8049052:	90[ 	]+nop *
 8049053:	90[ 	]+nop *
 8049054:	90[ 	]+nop *
d69 2
a70 2
 8049055:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 804905b:	81 e8 00 10 00 00[ 	]+sub    \$0x1000,%eax
d72 4
a75 4
 8049061:	90[ 	]+nop *
 8049062:	90[ 	]+nop *
 8049063:	90[ 	]+nop *
 8049064:	90[ 	]+nop *
d77 2
a78 2
 8049065:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 804906b:	81 e8 e0 0f 00 00[ 	]+sub    \$0xfe0,%eax
d80 4
a83 4
 8049071:	90[ 	]+nop *
 8049072:	90[ 	]+nop *
 8049073:	90[ 	]+nop *
 8049074:	90[ 	]+nop *
d85 2
a86 2
 8049075:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 804907b:	81 e8 c0 0f 00 00[ 	]+sub    \$0xfc0,%eax
d88 4
a91 4
 8049081:	90[ 	]+nop *
 8049082:	90[ 	]+nop *
 8049083:	90[ 	]+nop *
 8049084:	90[ 	]+nop *
d93 6
a98 6
 8049085:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 804908b:	90[ 	]+nop *
 804908c:	8d 74 26 00[ 	]+lea    0x0\(%esi,%eiz,1\),%esi
 8049090:	90[ 	]+nop *
 8049091:	90[ 	]+nop *
 8049092:	8d 90 20 f0 ff ff[ 	]+lea    -0xfe0\(%eax\),%edx
d100 3
a102 3
 8049098:	90[ 	]+nop *
 8049099:	90[ 	]+nop *
 804909a:	8d 88 24 f0 ff ff[ 	]+lea    -0xfdc\(%eax\),%ecx
d104 4
a107 4
 80490a0:	90[ 	]+nop *
 80490a1:	90[ 	]+nop *
 80490a2:	90[ 	]+nop *
 80490a3:	90[ 	]+nop *
d109 6
a114 6
 80490a4:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 80490aa:	90[ 	]+nop *
 80490ab:	8d 74 26 00[ 	]+lea    0x0\(%esi,%eiz,1\),%esi
 80490af:	90[ 	]+nop *
 80490b0:	90[ 	]+nop *
 80490b1:	8d 90 40 f0 ff ff[ 	]+lea    -0xfc0\(%eax\),%edx
d116 3
a118 3
 80490b7:	90[ 	]+nop *
 80490b8:	90[ 	]+nop *
 80490b9:	8d 88 44 f0 ff ff[ 	]+lea    -0xfbc\(%eax\),%ecx
d120 4
a123 4
 80490bf:	90[ 	]+nop *
 80490c0:	90[ 	]+nop *
 80490c1:	90[ 	]+nop *
 80490c2:	90[ 	]+nop *
d125 4
a128 4
 80490c3:	65 8b 0d 00 00 00 00[ 	]+mov    %gs:0x0,%ecx
 80490ca:	90[ 	]+nop *
 80490cb:	90[ 	]+nop *
 80490cc:	2b 8b e8 ff ff ff[ 	]+sub    -0x18\(%ebx\),%ecx
d130 4
a133 4
 80490d2:	90[ 	]+nop *
 80490d3:	90[ 	]+nop *
 80490d4:	90[ 	]+nop *
 80490d5:	90[ 	]+nop *
d135 4
a138 4
 80490d6:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 80490dc:	90[ 	]+nop *
 80490dd:	90[ 	]+nop *
 80490de:	2b 83 ec ff ff ff[ 	]+sub    -0x14\(%ebx\),%eax
d140 4
a143 4
 80490e4:	90[ 	]+nop *
 80490e5:	90[ 	]+nop *
 80490e6:	90[ 	]+nop *
 80490e7:	90[ 	]+nop *
d145 4
a148 4
 80490e8:	65 8b 0d 00 00 00 00[ 	]+mov    %gs:0x0,%ecx
 80490ef:	90[ 	]+nop *
 80490f0:	90[ 	]+nop *
 80490f1:	03 8b dc ff ff ff[ 	]+add    -0x24\(%ebx\),%ecx
d150 4
a153 4
 80490f7:	90[ 	]+nop *
 80490f8:	90[ 	]+nop *
 80490f9:	90[ 	]+nop *
 80490fa:	90[ 	]+nop *
d155 4
a158 4
 80490fb:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 8049101:	90[ 	]+nop *
 8049102:	90[ 	]+nop *
 8049103:	03 83 f0 ff ff ff[ 	]+add    -0x10\(%ebx\),%eax
d160 4
a163 4
 8049109:	90[ 	]+nop *
 804910a:	90[ 	]+nop *
 804910b:	90[ 	]+nop *
 804910c:	90[ 	]+nop *
d165 4
a168 4
 804910d:	65 8b 0d 00 00 00 00[ 	]+mov    %gs:0x0,%ecx
 8049114:	90[ 	]+nop *
 8049115:	90[ 	]+nop *
 8049116:	81 e9 00 10 00 00[ 	]+sub    \$0x1000,%ecx
d170 4
a173 4
 804911c:	90[ 	]+nop *
 804911d:	90[ 	]+nop *
 804911e:	90[ 	]+nop *
 804911f:	90[ 	]+nop *
d175 4
a178 4
 8049120:	65 8b 0d 00 00 00 00[ 	]+mov    %gs:0x0,%ecx
 8049127:	90[ 	]+nop *
 8049128:	90[ 	]+nop *
 8049129:	81 c0 20 f0 ff ff[ 	]+add    \$0xfffff020,%eax
d180 4
a183 4
 804912f:	90[ 	]+nop *
 8049130:	90[ 	]+nop *
 8049131:	90[ 	]+nop *
 8049132:	90[ 	]+nop *
d185 4
a188 4
 8049133:	65 8b 0d 00 00 00 00[ 	]+mov    %gs:0x0,%ecx
 804913a:	90[ 	]+nop *
 804913b:	90[ 	]+nop *
 804913c:	81 e9 c0 0f 00 00[ 	]+sub    \$0xfc0,%ecx
d190 4
a193 4
 8049142:	90[ 	]+nop *
 8049143:	90[ 	]+nop *
 8049144:	90[ 	]+nop *
 8049145:	90[ 	]+nop *
d196 1
a196 1
 8049146:	8b 8b e0 ff ff ff[ 	]+mov    -0x20\(%ebx\),%ecx
d198 7
a204 7
 804914c:	90[ 	]+nop *
 804914d:	90[ 	]+nop *
 804914e:	65 8b 11[ 	]+mov    %gs:\(%ecx\),%edx
 8049151:	90[ 	]+nop *
 8049152:	90[ 	]+nop *
 8049153:	90[ 	]+nop *
 8049154:	90[ 	]+nop *
d206 1
a206 1
 8049155:	c7 c0 30 f0 ff ff[ 	]+mov    \$0xfffff030,%eax
d208 7
a214 7
 804915b:	90[ 	]+nop *
 804915c:	90[ 	]+nop *
 804915d:	65 8b 10[ 	]+mov    %gs:\(%eax\),%edx
 8049160:	90[ 	]+nop *
 8049161:	90[ 	]+nop *
 8049162:	90[ 	]+nop *
 8049163:	90[ 	]+nop *
d216 1
a216 1
 8049164:	c7 c2 50 f0 ff ff[ 	]+mov    \$0xfffff050,%edx
d218 7
a224 7
 804916a:	90[ 	]+nop *
 804916b:	90[ 	]+nop *
 804916c:	65 8b 12[ 	]+mov    %gs:\(%edx\),%edx
 804916f:	90[ 	]+nop *
 8049170:	90[ 	]+nop *
 8049171:	90[ 	]+nop *
 8049172:	90[ 	]+nop *
d226 2
a227 2
 8049173:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 8049179:	2b 83 f8 ff ff ff[ 	]+sub    -0x8\(%ebx\),%eax
d229 7
a235 7
 804917f:	90[ 	]+nop *
 8049180:	90[ 	]+nop *
 8049181:	90[ 	]+nop *
 8049182:	90[ 	]+nop *
 8049183:	8b 5d fc[ 	]+mov    -0x4\(%ebp\),%ebx
 8049186:	c9[ 	]+leave *
 8049187:	c3[ 	]+ret *
d237 10
a246 10
0+8049188 <_start>:
 8049188:	55[ 	]+push   %ebp
 8049189:	89 e5[ 	]+mov    %esp,%ebp
 804918b:	e8 00 00 00 00[ 	]+call   8049190 <_start\+0x8>
 8049190:	59[ 	]+pop    %ecx
 8049191:	81 c1 94 0f 00 00[ 	]+add    \$0xf94,%ecx
 8049197:	90[ 	]+nop *
 8049198:	90[ 	]+nop *
 8049199:	90[ 	]+nop *
 804919a:	90[ 	]+nop *
d248 4
a251 4
 804919b:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
 80491a2:	90[ 	]+nop *
 80491a3:	90[ 	]+nop *
 80491a4:	2b 91 f4 ff ff ff[ 	]+sub    -0xc\(%ecx\),%edx
d253 4
a256 4
 80491aa:	90[ 	]+nop *
 80491ab:	90[ 	]+nop *
 80491ac:	90[ 	]+nop *
 80491ad:	90[ 	]+nop *
d258 4
a261 4
 80491ae:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 80491b4:	90[ 	]+nop *
 80491b5:	90[ 	]+nop *
 80491b6:	03 05 08 a1 04 08[ 	]+add    0x804a108,%eax
d263 4
a266 4
 80491bc:	90[ 	]+nop *
 80491bd:	90[ 	]+nop *
 80491be:	90[ 	]+nop *
 80491bf:	90[ 	]+nop *
d268 1
a268 1
 80491c0:	8b 15 20 a1 04 08[ 	]+mov    0x804a120,%edx
d270 7
a276 7
 80491c6:	90[ 	]+nop *
 80491c7:	90[ 	]+nop *
 80491c8:	65 8b 02[ 	]+mov    %gs:\(%edx\),%eax
 80491cb:	90[ 	]+nop *
 80491cc:	90[ 	]+nop *
 80491cd:	90[ 	]+nop *
 80491ce:	90[ 	]+nop *
d278 4
a281 4
 80491cf:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
 80491d6:	90[ 	]+nop *
 80491d7:	90[ 	]+nop *
 80491d8:	81 ea 8c 0f 00 00[ 	]+sub    \$0xf8c,%edx
d283 4
a286 4
 80491de:	90[ 	]+nop *
 80491df:	90[ 	]+nop *
 80491e0:	90[ 	]+nop *
 80491e1:	90[ 	]+nop *
d288 4
a291 4
 80491e2:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 80491e8:	90[ 	]+nop *
 80491e9:	90[ 	]+nop *
 80491ea:	81 c0 78 f0 ff ff[ 	]+add    \$0xfffff078,%eax
d293 4
a296 4
 80491f0:	90[ 	]+nop *
 80491f1:	90[ 	]+nop *
 80491f2:	90[ 	]+nop *
 80491f3:	90[ 	]+nop *
d299 1
a299 1
 80491f4:	c7 c2 7c f0 ff ff[ 	]+mov    \$0xfffff07c,%edx
d301 7
a307 7
 80491fa:	90[ 	]+nop *
 80491fb:	90[ 	]+nop *
 80491fc:	65 8b 02[ 	]+mov    %gs:\(%edx\),%eax
 80491ff:	90[ 	]+nop *
 8049200:	90[ 	]+nop *
 8049201:	90[ 	]+nop *
 8049202:	90[ 	]+nop *
d309 4
a312 4
 8049203:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
 804920a:	90[ 	]+nop *
 804920b:	90[ 	]+nop *
 804920c:	81 ea 6c 0f 00 00[ 	]+sub    \$0xf6c,%edx
d314 4
a317 4
 8049212:	90[ 	]+nop *
 8049213:	90[ 	]+nop *
 8049214:	90[ 	]+nop *
 8049215:	90[ 	]+nop *
d319 4
a322 4
 8049216:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 804921c:	90[ 	]+nop *
 804921d:	90[ 	]+nop *
 804921e:	81 c0 98 f0 ff ff[ 	]+add    \$0xfffff098,%eax
d324 4
a327 4
 8049224:	90[ 	]+nop *
 8049225:	90[ 	]+nop *
 8049226:	90[ 	]+nop *
 8049227:	90[ 	]+nop *
d329 1
a329 1
 8049228:	c7 c2 9c f0 ff ff[ 	]+mov    \$0xfffff09c,%edx
d331 7
a337 7
 804922e:	90[ 	]+nop *
 804922f:	90[ 	]+nop *
 8049230:	65 8b 02[ 	]+mov    %gs:\(%edx\),%eax
 8049233:	90[ 	]+nop *
 8049234:	90[ 	]+nop *
 8049235:	90[ 	]+nop *
 8049236:	90[ 	]+nop *
d339 4
a342 4
 8049237:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
 804923e:	90[ 	]+nop *
 804923f:	90[ 	]+nop *
 8049240:	81 ea ac 0f 00 00[ 	]+sub    \$0xfac,%edx
d344 4
a347 4
 8049246:	90[ 	]+nop *
 8049247:	90[ 	]+nop *
 8049248:	90[ 	]+nop *
 8049249:	90[ 	]+nop *
d349 4
a352 4
 804924a:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 8049250:	90[ 	]+nop *
 8049251:	90[ 	]+nop *
 8049252:	81 c0 58 f0 ff ff[ 	]+add    \$0xfffff058,%eax
d354 4
a357 4
 8049258:	90[ 	]+nop *
 8049259:	90[ 	]+nop *
 804925a:	90[ 	]+nop *
 804925b:	90[ 	]+nop *
d360 1
a360 1
 804925c:	c7 c2 5c f0 ff ff[ 	]+mov    \$0xfffff05c,%edx
d362 7
a368 7
 8049262:	90[ 	]+nop *
 8049263:	90[ 	]+nop *
 8049264:	65 8b 02[ 	]+mov    %gs:\(%edx\),%eax
 8049267:	90[ 	]+nop *
 8049268:	90[ 	]+nop *
 8049269:	90[ 	]+nop *
 804926a:	90[ 	]+nop *
d370 1
a370 1
 804926b:	ba 00 10 00 00[ 	]+mov    \$0x1000,%edx
d372 10
a381 10
 8049270:	90[ 	]+nop *
 8049271:	90[ 	]+nop *
 8049272:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 8049278:	90[ 	]+nop *
 8049279:	90[ 	]+nop *
 804927a:	29 d0[ 	]+sub    %edx,%eax
 804927c:	90[ 	]+nop *
 804927d:	90[ 	]+nop *
 804927e:	90[ 	]+nop *
 804927f:	90[ 	]+nop *
d383 1
a383 1
 8049280:	b8 7f 0f 00 00[ 	]+mov    \$0xf7f,%eax
d385 10
a394 10
 8049285:	90[ 	]+nop *
 8049286:	90[ 	]+nop *
 8049287:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
 804928e:	90[ 	]+nop *
 804928f:	90[ 	]+nop *
 8049290:	29 c2[ 	]+sub    %eax,%edx
 8049292:	90[ 	]+nop *
 8049293:	90[ 	]+nop *
 8049294:	90[ 	]+nop *
 8049295:	90[ 	]+nop *
d396 1
a396 1
 8049296:	b8 bd 0f 00 00[ 	]+mov    \$0xfbd,%eax
d398 10
a407 10
 804929b:	90[ 	]+nop *
 804929c:	90[ 	]+nop *
 804929d:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
 80492a4:	90[ 	]+nop *
 80492a5:	90[ 	]+nop *
 80492a6:	29 c2[ 	]+sub    %eax,%edx
 80492a8:	90[ 	]+nop *
 80492a9:	90[ 	]+nop *
 80492aa:	90[ 	]+nop *
 80492ab:	90[ 	]+nop *
d409 4
a412 4
 80492ac:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 80492b2:	90[ 	]+nop *
 80492b3:	90[ 	]+nop *
 80492b4:	8d 90 04 f0 ff ff[ 	]+lea    -0xffc\(%eax\),%edx
d414 4
a417 4
 80492ba:	90[ 	]+nop *
 80492bb:	90[ 	]+nop *
 80492bc:	90[ 	]+nop *
 80492bd:	90[ 	]+nop *
d419 1
a419 1
 80492be:	b8 86 f0 ff ff[ 	]+mov    \$0xfffff086,%eax
d421 10
a430 10
 80492c3:	90[ 	]+nop *
 80492c4:	90[ 	]+nop *
 80492c5:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
 80492cc:	90[ 	]+nop *
 80492cd:	90[ 	]+nop *
 80492ce:	01 c2[ 	]+add    %eax,%edx
 80492d0:	90[ 	]+nop *
 80492d1:	90[ 	]+nop *
 80492d2:	90[ 	]+nop *
 80492d3:	90[ 	]+nop *
d432 4
a435 4
 80492d4:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
 80492db:	90[ 	]+nop *
 80492dc:	90[ 	]+nop *
 80492dd:	81 c2 45 f0 ff ff[ 	]+add    \$0xfffff045,%edx
d437 4
a440 4
 80492e3:	90[ 	]+nop *
 80492e4:	90[ 	]+nop *
 80492e5:	90[ 	]+nop *
 80492e6:	90[ 	]+nop *
d442 1
a442 1
 80492e7:	65 a1 08 f0 ff ff[ 	]+mov    %gs:0xfffff008,%eax
d444 4
a447 4
 80492ed:	90[ 	]+nop *
 80492ee:	90[ 	]+nop *
 80492ef:	90[ 	]+nop *
 80492f0:	90[ 	]+nop *
d449 1
a449 1
 80492f1:	65 8b 15 8b f0 ff ff[ 	]+mov    %gs:0xfffff08b,%edx
d451 4
a454 4
 80492f8:	90[ 	]+nop *
 80492f9:	90[ 	]+nop *
 80492fa:	90[ 	]+nop *
 80492fb:	90[ 	]+nop *
d456 1
a456 1
 80492fc:	65 8b 15 49 f0 ff ff[ 	]+mov    %gs:0xfffff049,%edx
d458 7
a464 7
 8049303:	90[ 	]+nop *
 8049304:	90[ 	]+nop *
 8049305:	90[ 	]+nop *
 8049306:	90[ 	]+nop *
 8049307:	8b 5d fc[ 	]+mov    -0x4\(%ebp\),%ebx
 804930a:	c9[ 	]+leave *
 804930b:	c3[ 	]+ret *
@


1.8
log
@gas/

2007-09-20  H.J. Lu  <hongjiu.lu@@intel.com>

	PR 658
	* config/tc-i386.c (SCALE1_WHEN_NO_INDEX): Removed.
	(set_allow_index_reg): New.
	(allow_index_reg): Likewise.
	(md_pseudo_table): Add "allow_index_reg" and
	"disallow_index_reg".
	(build_modrm_byte): Set i.sib.index to NO_INDEX_REGISTER for
	fake index registers.
	(i386_scale): Updated.
	(i386_index_check): Support fake index registers.
	(parse_real_register): Return NULL on eiz/riz if fake index
	registers aren't allowed.

gas/testsuite/

2007-09-20  H.J. Lu  <hongjiu.lu@@intel.com>

	PR 658
	* gas/i386/i386.exp: Run sib-intel, x86-64-sib and
	x86-64-sib-intel.

	* gas/i386/nops-1-i386-i686.d: Updated.
	* gas/i386/nops-1-i386.d: Likewise.
	* gas/i386/nops-1.d: Likewise.
	* gas/i386/nops-2-i386.d: Likewise.
	* gas/i386/nops-2-merom.d: Likewise.
	* gas/i386/nops-2.d: Likewise.
	* gas/i386/nops-3-i386.d: Likewise.
	* gas/i386/nops-3.d : Likewise.
	* gas/i386/sib.d: Likewise.

	* gas/i386/sib.s: Use %eiz in testcases.

	* gas/i386/sib-intel.d: New.
	* gas/i386/x86-64-sib-intel.d: Likewise.
	* gas/i386/x86-64-sib.d: Likewise.
	* gas/i386/x86-64-sib.s: Likewise.

ld/testsuite/

2007-09-20  H.J. Lu  <hongjiu.lu@@intel.com>

	PR 658
	* ld-i386/tlsbin.dd: Updated.
	* ld-i386/tlsld1.dd: Likewise.

opcodes/

2007-09-20  H.J. Lu  <hongjiu.lu@@intel.com>

	PR 658
	* 386-dis.c (index64): New.
	(index32): Likewise.
	(intel_index64): Likewise.
	(intel_index32): Likewise.
	(att_index64): Likewise.
	(att_index32): Likewise.
	(print_insn): Set index64 and index32.
	(OP_E_extended): Use index64/index32 for index register for
	SIB with INDEX == 4.

	* i386-opc.h (RegEiz): New.
	(RegRiz): Likewise.

	* i386-reg.tbl: Add eiz and riz.
	* i386-tbl.h: Regenerated.
@
text
@d4 1
a4 1
#ld: -melf_i386 tmpdir/libtlslib.so
@


1.7
log
@bfd/

2007-08-23  H.J. Lu  <hongjiu.lu@@intel.com>

	* elf32-i386.c: Include "bfd_stdint.h".
	(elf_i386_rtype_to_howto): New function.
	(elf_i386_info_to_howto_rel): Use it.
	(x86_64_opcode16): New union type.
	(elf_i386_check_tls_transition): New function.
	(elf_i386_tls_transition): Updated to check transition and
	issue an error if a transition isn't supported.
	(elf_i386_check_relocs): Return FALSE if
	elf_i386_tls_transition returns FALSE.
	(elf_i386_gc_sweep_hook): Likewise.
	(elf_i386_relocate_section): Likewise. Remove BFD_ASSERT
	on TLS transitions.

	* elf64-x86-64.c: Include "bfd_stdint.h".
	(x86_64_opcode16): New union type.
	(x86_64_opcode32): Likewise.
	(elf64_x86_64_check_tls_transition): New function.
	(elf64_x86_64_tls_transition): Updated to check transition and
	issue an error if a transition isn't supported.
	(elf64_x86_64_check_relocs): Return FALSE if
	elf64_x86_64_tls_transition returns FALSE.
	(elf64_x86_64_gc_sweep_hook): Likewise.
	(elf64_x86_64_relocate_section): Likewise. Remove BFD_ASSERT
	on TLS transitions.

ld/testsuite/

2007-08-23  H.J. Lu  <hongjiu.lu@@intel.com>

	* ld-i386/tlsbinpic.s: Add a new GD -> IE test.

	* ld-i386/tlsgd1.s: Add a new GD -> LE test.

	* ld-i386/tlsbin.dd: Updated.
	* ld-i386/tlsbin.rd: Likewise.
	* ld-i386/tlsgd1.dd: Likewise.
@
text
@d95 1
a95 1
 804908c:	8d 74 26 00[ 	]+lea    0x0\(%esi\),%esi
d111 1
a111 1
 80490ab:	8d 74 26 00[ 	]+lea    0x0\(%esi\),%esi
@


1.6
log
@gas/testsuite/

2007-04-26  H.J. Lu  <hongjiu.lu@@intel.com>

	PR binutils/4430
	* gas/i386/amd.d: Updated.
	* gas/i386/immed32.d: Likewise.
	* gas/i386/intel.d: Likewise.
	* gas/i386/intel16.d: Likewise.
	* gas/i386/intelok.d: Likewise.
	* gas/i386/jump16.d: Likewise.
	* gas/i386/naked.d: Likewise.
	* gas/i386/opcode-suffix.d: Likewise.
	* gas/i386/opcode.d: Likewise.
	* gas/i386/prescott.d: Likewise.
	* gas/i386/ssemmx2.d: Likewise.
	* gas/i386/tlsd.d: Likewise.
	* gas/i386/tlspic.d: Likewise.
	* gas/i386/x86-64-addr32.d: Likewise.
	* gas/i386/x86-64-prescott.d: Likewise.
	* gas/i386/x86-64-rip.d: Likewise.
	* gas/i386/x86_64.d: Likewise.

ld/testsuite/

2007-04-26  H.J. Lu  <hongjiu.lu@@intel.com>

	PR binutils/4430
	* ld-i386/tlsbin.dd: Updated.
	* ld-i386/tlsbindesc.dd: Likewise
	* ld-i386/tlsdesc.dd: Likewise
	* ld-i386/tlsgdesc.dd: Likewise
	* ld-i386/tlsnopic.dd: Likewise
	* ld-i386/tlspic.dd: Likewise
	* ld-x86-64/tlsbin.dd: Likewise
	* ld-x86-64/tlsbindesc.dd: Likewise
	* ld-x86-64/tlsdesc.dd: Likewise
	* ld-x86-64/tlsgdesc.dd: Likewise
	* ld-x86-64/tlspic.dd: Likewise

opcodes/

2007-04-26  H.J. Lu  <hongjiu.lu@@intel.com>

	PR binutils/4430
	* i386-dis.c (print_displacement): New.
	(OP_E): Call print_displacement instead of print_operand_value
	to output displacement when either base or index exist.  Print
	the explicit zero displacement in 16bit mode.
@
text
@d225 11
a235 3
 8049173:	8b 5d fc[ 	]+mov    -0x4\(%ebp\),%ebx
 8049176:	c9[ 	]+leave *
 8049177:	c3[ 	]+ret *
d237 10
a246 10
0+8049178 <_start>:
 8049178:	55[ 	]+push   %ebp
 8049179:	89 e5[ 	]+mov    %esp,%ebp
 804917b:	e8 00 00 00 00[ 	]+call   8049180 <_start\+0x8>
 8049180:	59[ 	]+pop    %ecx
 8049181:	81 c1 a4 0f 00 00[ 	]+add    \$0xfa4,%ecx
 8049187:	90[ 	]+nop *
 8049188:	90[ 	]+nop *
 8049189:	90[ 	]+nop *
 804918a:	90[ 	]+nop *
d248 4
a251 4
 804918b:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
 8049192:	90[ 	]+nop *
 8049193:	90[ 	]+nop *
 8049194:	2b 91 f4 ff ff ff[ 	]+sub    -0xc\(%ecx\),%edx
d253 4
a256 4
 804919a:	90[ 	]+nop *
 804919b:	90[ 	]+nop *
 804919c:	90[ 	]+nop *
 804919d:	90[ 	]+nop *
d258 4
a261 4
 804919e:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 80491a4:	90[ 	]+nop *
 80491a5:	90[ 	]+nop *
 80491a6:	03 05 08 a1 04 08[ 	]+add    0x804a108,%eax
a262 11
 80491ac:	90[ 	]+nop *
 80491ad:	90[ 	]+nop *
 80491ae:	90[ 	]+nop *
 80491af:	90[ 	]+nop *
#  @@indntpoff direct %gs access IE against global var
 80491b0:	8b 15 20 a1 04 08[ 	]+mov    0x804a120,%edx
#				->R_386_TLS_TPOFF	sG8
 80491b6:	90[ 	]+nop *
 80491b7:	90[ 	]+nop *
 80491b8:	65 8b 02[ 	]+mov    %gs:\(%edx\),%eax
 80491bb:	90[ 	]+nop *
d266 4
a269 2
#  @@gottpoff IE -> LE against global var defined in exec
 80491bf:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
d272 10
a281 1
 80491c8:	81 ea 8c 0f 00 00[ 	]+sub    \$0xf8c,%edx
d283 4
a286 4
 80491ce:	90[ 	]+nop *
 80491cf:	90[ 	]+nop *
 80491d0:	90[ 	]+nop *
 80491d1:	90[ 	]+nop *
d288 4
a291 4
 80491d2:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 80491d8:	90[ 	]+nop *
 80491d9:	90[ 	]+nop *
 80491da:	81 c0 78 f0 ff ff[ 	]+add    \$0xfffff078,%eax
d293 4
a296 4
 80491e0:	90[ 	]+nop *
 80491e1:	90[ 	]+nop *
 80491e2:	90[ 	]+nop *
 80491e3:	90[ 	]+nop *
d299 1
a299 1
 80491e4:	c7 c2 7c f0 ff ff[ 	]+mov    \$0xfffff07c,%edx
a300 9
 80491ea:	90[ 	]+nop *
 80491eb:	90[ 	]+nop *
 80491ec:	65 8b 02[ 	]+mov    %gs:\(%edx\),%eax
 80491ef:	90[ 	]+nop *
 80491f0:	90[ 	]+nop *
 80491f1:	90[ 	]+nop *
 80491f2:	90[ 	]+nop *
#  @@gottpoff IE -> LE against local var
 80491f3:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
d303 10
a312 1
 80491fc:	81 ea 6c 0f 00 00[ 	]+sub    \$0xf6c,%edx
d314 4
a317 4
 8049202:	90[ 	]+nop *
 8049203:	90[ 	]+nop *
 8049204:	90[ 	]+nop *
 8049205:	90[ 	]+nop *
d319 4
a322 4
 8049206:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 804920c:	90[ 	]+nop *
 804920d:	90[ 	]+nop *
 804920e:	81 c0 98 f0 ff ff[ 	]+add    \$0xfffff098,%eax
a323 11
 8049214:	90[ 	]+nop *
 8049215:	90[ 	]+nop *
 8049216:	90[ 	]+nop *
 8049217:	90[ 	]+nop *
#  @@indntpoff direct %gs access IE -> LE against local var
 8049218:	c7 c2 9c f0 ff ff[ 	]+mov    \$0xfffff09c,%edx
#							bl8
 804921e:	90[ 	]+nop *
 804921f:	90[ 	]+nop *
 8049220:	65 8b 02[ 	]+mov    %gs:\(%edx\),%eax
 8049223:	90[ 	]+nop *
d327 4
a330 2
#  @@gottpoff IE -> LE against hidden but not local var
 8049227:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
d333 10
a342 1
 8049230:	81 ea ac 0f 00 00[ 	]+sub    \$0xfac,%edx
d344 4
a347 4
 8049236:	90[ 	]+nop *
 8049237:	90[ 	]+nop *
 8049238:	90[ 	]+nop *
 8049239:	90[ 	]+nop *
d349 4
a352 4
 804923a:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 8049240:	90[ 	]+nop *
 8049241:	90[ 	]+nop *
 8049242:	81 c0 58 f0 ff ff[ 	]+add    \$0xfffff058,%eax
d354 4
a357 4
 8049248:	90[ 	]+nop *
 8049249:	90[ 	]+nop *
 804924a:	90[ 	]+nop *
 804924b:	90[ 	]+nop *
d360 1
a360 1
 804924c:	c7 c2 5c f0 ff ff[ 	]+mov    \$0xfffff05c,%edx
d362 7
a368 7
 8049252:	90[ 	]+nop *
 8049253:	90[ 	]+nop *
 8049254:	65 8b 02[ 	]+mov    %gs:\(%edx\),%eax
 8049257:	90[ 	]+nop *
 8049258:	90[ 	]+nop *
 8049259:	90[ 	]+nop *
 804925a:	90[ 	]+nop *
d370 1
a370 1
 804925b:	ba 00 10 00 00[ 	]+mov    \$0x1000,%edx
d372 10
a381 10
 8049260:	90[ 	]+nop *
 8049261:	90[ 	]+nop *
 8049262:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 8049268:	90[ 	]+nop *
 8049269:	90[ 	]+nop *
 804926a:	29 d0[ 	]+sub    %edx,%eax
 804926c:	90[ 	]+nop *
 804926d:	90[ 	]+nop *
 804926e:	90[ 	]+nop *
 804926f:	90[ 	]+nop *
d383 1
a383 1
 8049270:	b8 7f 0f 00 00[ 	]+mov    \$0xf7f,%eax
a384 9
 8049275:	90[ 	]+nop *
 8049276:	90[ 	]+nop *
 8049277:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
 804927e:	90[ 	]+nop *
 804927f:	90[ 	]+nop *
 8049280:	29 c2[ 	]+sub    %eax,%edx
 8049282:	90[ 	]+nop *
 8049283:	90[ 	]+nop *
 8049284:	90[ 	]+nop *
d386 9
d396 1
a396 1
 8049286:	b8 bd 0f 00 00[ 	]+mov    \$0xfbd,%eax
a397 9
 804928b:	90[ 	]+nop *
 804928c:	90[ 	]+nop *
 804928d:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
 8049294:	90[ 	]+nop *
 8049295:	90[ 	]+nop *
 8049296:	29 c2[ 	]+sub    %eax,%edx
 8049298:	90[ 	]+nop *
 8049299:	90[ 	]+nop *
 804929a:	90[ 	]+nop *
d399 7
a405 6
#  LE @@ntpoff, global var defined in exec
 804929c:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 80492a2:	90[ 	]+nop *
 80492a3:	90[ 	]+nop *
 80492a4:	8d 90 04 f0 ff ff[ 	]+lea    -0xffc\(%eax\),%edx
#							sg2
d408 3
a410 5
 80492ac:	90[ 	]+nop *
 80492ad:	90[ 	]+nop *
#  LE @@ntpoff, local var, non-canonical sequence
 80492ae:	b8 86 f0 ff ff[ 	]+mov    \$0xfffff086,%eax
#							bl2+2
d412 4
a415 2
 80492b4:	90[ 	]+nop *
 80492b5:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
d418 3
a420 4
 80492be:	01 c2[ 	]+add    %eax,%edx
 80492c0:	90[ 	]+nop *
 80492c1:	90[ 	]+nop *
 80492c2:	90[ 	]+nop *
d422 9
d432 4
a435 4
 80492c4:	65 8b 15 00 00 00 00[ 	]+mov    %gs:0x0,%edx
 80492cb:	90[ 	]+nop *
 80492cc:	90[ 	]+nop *
 80492cd:	81 c2 45 f0 ff ff[ 	]+add    \$0xfffff045,%edx
d437 4
a440 4
 80492d3:	90[ 	]+nop *
 80492d4:	90[ 	]+nop *
 80492d5:	90[ 	]+nop *
 80492d6:	90[ 	]+nop *
d442 1
a442 1
 80492d7:	65 a1 08 f0 ff ff[ 	]+mov    %gs:0xfffff008,%eax
d444 4
a447 4
 80492dd:	90[ 	]+nop *
 80492de:	90[ 	]+nop *
 80492df:	90[ 	]+nop *
 80492e0:	90[ 	]+nop *
d449 1
a449 1
 80492e1:	65 8b 15 8b f0 ff ff[ 	]+mov    %gs:0xfffff08b,%edx
d451 4
a454 4
 80492e8:	90[ 	]+nop *
 80492e9:	90[ 	]+nop *
 80492ea:	90[ 	]+nop *
 80492eb:	90[ 	]+nop *
d456 1
a456 1
 80492ec:	65 8b 15 49 f0 ff ff[ 	]+mov    %gs:0xfffff049,%edx
d458 7
a464 7
 80492f3:	90[ 	]+nop *
 80492f4:	90[ 	]+nop *
 80492f5:	90[ 	]+nop *
 80492f6:	90[ 	]+nop *
 80492f7:	8b 5d fc[ 	]+mov    -0x4\(%ebp\),%ebx
 80492fa:	c9[ 	]+leave *
 80492fb:	c3[ 	]+ret *
@


1.5
log
@	PR ld/2513
	* elf32-i386.c (GOT_TLS_MASK, GOT_TLS_IE_IE, GOT_TLS_IE_GD,
	GOT_TLS_IE_MASK, elf_i386_check_relocs, allocate_dynrelocs): Revert
	2006-04-08 changes.
	(elf_i386_relocate_section): Likewise.  For GD->IE transition
	change subl into addl whenever tls_type is GOT_TLS_IE_POS.

	* ld-i386/tlsbin.dd: Fix expected output.
@
text
@d35 1
a35 1
 804901b:	2b 83 f8 ff ff ff[ 	]+sub    0xfffffff8\(%ebx\),%eax
d44 1
a44 1
 804902b:	2b 83 e8 ff ff ff[ 	]+sub    0xffffffe8\(%ebx\),%eax
d53 1
a53 1
 804903b:	03 83 dc ff ff ff[ 	]+add    0xffffffdc\(%ebx\),%eax
d62 1
a62 1
 804904b:	2b 83 ec ff ff ff[ 	]+sub    0xffffffec\(%ebx\),%eax
d98 1
a98 1
 8049092:	8d 90 20 f0 ff ff[ 	]+lea    0xfffff020\(%eax\),%edx
d102 1
a102 1
 804909a:	8d 88 24 f0 ff ff[ 	]+lea    0xfffff024\(%eax\),%ecx
d114 1
a114 1
 80490b1:	8d 90 40 f0 ff ff[ 	]+lea    0xfffff040\(%eax\),%edx
d118 1
a118 1
 80490b9:	8d 88 44 f0 ff ff[ 	]+lea    0xfffff044\(%eax\),%ecx
d128 1
a128 1
 80490cc:	2b 8b e8 ff ff ff[ 	]+sub    0xffffffe8\(%ebx\),%ecx
d138 1
a138 1
 80490de:	2b 83 ec ff ff ff[ 	]+sub    0xffffffec\(%ebx\),%eax
d148 1
a148 1
 80490f1:	03 8b dc ff ff ff[ 	]+add    0xffffffdc\(%ebx\),%ecx
d158 1
a158 1
 8049103:	03 83 f0 ff ff ff[ 	]+add    0xfffffff0\(%ebx\),%eax
d196 1
a196 1
 8049146:	8b 8b e0 ff ff ff[ 	]+mov    0xffffffe0\(%ebx\),%ecx
d225 1
a225 1
 8049173:	8b 5d fc[ 	]+mov    0xfffffffc\(%ebp\),%ebx
d243 1
a243 1
 8049194:	2b 91 f4 ff ff ff[ 	]+sub    0xfffffff4\(%ecx\),%edx
d404 1
a404 1
 80492a4:	8d 90 04 f0 ff ff[ 	]+lea    0xfffff004\(%eax\),%edx
d454 1
a454 1
 80492f7:	8b 5d fc[ 	]+mov    0xfffffffc\(%ebp\),%ebx
@


1.4
log
@bfd/
	* elflink.c (elf_bfd_final_link): Don't output STT_SECTION symbol
	into .dynsym if elf_section_data (sec)->dynindx <= 0.
	Adjust counting of last_local.
	(_bfd_elf_link_renumber_dynsyms): Don't assign dynindx to sections
	other than SHT_PROGBITS/SHT_NOBITS and neither for .got/.got.plt/.plt
	created by the linker nor !SHF_ALLOC.

	* elf32-i386.c (elf_i386_finish_dynamic_sections): Point
	DT_PLTGOT to the start of the .got.plt section instead of the
	.got output section.  Set sh_entsize for .got section in addition
	to .got.plt.
	(elf_i386_relocate_section): Don't assume _GLOBAL_OFFSET_TABLE_
	is at sgot->output_section->vma.
	* elf64-x86-64.c (elf64_x86_64_finish_dynamic_sections): Point
	DT_PLTGOT to the start of the .got.plt section instead of the
	.got output section.
	(elf64_x86_64_relocate_section): Don't assume _GLOBAL_OFFSET_TABLE_
	is at sgot->output_section->vma.  Set sh_entsize for .got section
	in addition to .got.plt.
	* elf.c (_bfd_elf_print_private_bfd_data): Handle PT_GNU_RELRO.
	(bfd_section_from_phdr): Likewise.
	(map_sections_to_segments): Likewise.
	(assign_file_positions_for_segments): Likewise.
	(get_program_header_size): Likewise.
	* elflink.c (bfd_elf_size_dynamic_sections): Set
	elf_tdata (output_bfd)->relro from info->relro.
	* elf-bfd.h (struct elf_obj_tdata): Add relro field.
include/
	* bfdlink.h (struct bfd_link_info): Add relro, relro_start and
	relro_end fields.
	* elf/common.h (PT_GNU_EH_FRAME, PT_GNU_STACK): Add comments.
	(PT_GNU_RELRO): Define.
binutils/
	* readelf.c (get_segment_type): Handle PT_GNU_RELRO.
ld/
	* genscripts.sh: Generate -z combreloc -z now -z relro scripts
	for binaries, -shared and -pie.
	* emulparams/elf_i386.sh (SEPARATE_GOTPLT): Set.
	* emulparams/elf_x86_64.sh (SEPARATE_GOTPLT): Set.
	* emulparams/elf32ppc.sh (OTHER_READWRITE_SECTIONS): Rename to...
	(OTHER_RELRO_SECTIONS): ... this.
	* ldlex.l (DATA_SEGMENT_RELRO_END): Add.
	* emultempl/elf32.em (gld${EMULATION_NAME}_handle_option): Handle
	-z relro and -z norelro.
	(gld${EMULATION_NAME}_list_options): Add it to usage.
	(gld${EMULATION_NAME}_get_script): Return -z combreloc -z now
	-z relro scripts when appropriate.
	* scripttempl/elf.sc: Unset SEPARATE_GOTPLT if RELRO_NOW is set.
	Create separate .got.plt section if SEPARATE_GOTPLT.
	Move sections which are only written during relocation handling
	to the beginning of RW segment.  If NO_SMALL_DATA, move .got
	before .data.  Add DATA_SEGMENT_RELRO_END directive.
	Include OTHER_RELRO_SECTIONS.
	* ldgram.y (DATA_SEGMENT_RELRO_END): Add.
	* ldexp.c (exp_print_token): Handle DATA_SEGMENT_RELRO_END.
	(fold_unary): Likewise.
	(fold_binary): Handle -z relro.
	* ldexp.h (struct exp_data_seg): Add exp_dataseg_relro_seen and
	exp_dataseg_relro_adjust phases.  Add relro_end field.
	* ldmain.c (main): Initialize link_info.relro to FALSE.
	* ldlang.c (lang_size_sections): Handle -z relro.
ld/testsuite/
	* ld-i386/tlspic.rd: Adjust for section reordering changes
	and removal of unneeded STT_SECTION symbols from .dynsym.
	* ld-i386/tlspic.dd: Likewise.
	* ld-i386/tlspic.sd: Likewise.
	* ld-i386/tlsbin.rd: Likewise.
	* ld-i386/tlsbinpic.s: Likewise.
	* ld-i386/tlsbin.dd: Likewise.
	* ld-i386/tlsbin.sd: Likewise.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlsnopic1.s: Likewise.
	* ld-i386/combreloc.d: Likewise.
	* ld-i386/tlsnopic.dd: Likewise.
	* ld-i386/tlsnopic.sd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
	* ld-x86-64/tlspic.dd: Likewise.
	* ld-x86-64/tlsbin.dd: Likewise.
	* ld-x86-64/tlspic.sd: Likewise.
	* ld-x86-64/tlsbin.sd: Likewise.
	* ld-x86-64/tlspic.td: Likewise.
	* ld-x86-64/tlsbin.td: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-s390/tlspic1.s: Likewise.
	* ld-s390/tlsbinpic.s: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlspic.dd: Likewise.
	* ld-s390/tlsbin.dd: Likewise.
	* ld-s390/tlsbin.sd: Likewise.
	* ld-s390/tlsbin.td: Likewise.
	* ld-s390/tlspic.sd: Likewise.
	* ld-s390/tlspic.td: Likewise.
	* ld-s390/tlspic1_64.s: Likewise.
	* ld-s390/tlsbinpic_64.s: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlspic_64.dd: Likewise.
	* ld-s390/tlsbin_64.dd: Likewise.
	* ld-s390/tlspic_64.sd: Likewise.
	* ld-s390/tlspic_64.td: Likewise.
	* ld-s390/tlsbin_64.td: Likewise.
	* ld-s390/tlsbin_64.sd: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlsso32.d: Likewise.
	* ld-powerpc/tlsso32.g: Likewise.
	* ld-powerpc/tlsso32.t: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso.g: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
	* ld-powerpc/tlstocso.g: Likewise.
	* ld-ia64/tlspic.rd: Likewise.
	* ld-ia64/tlspic.dd: Likewise.
	* ld-ia64/tlspic.sd: Likewise.
	* ld-ia64/tlspic.td: Likewise.
	* ld-ia64/tlsbin.rd: Likewise.
	* ld-ia64/tlsbin.sd: Likewise.
	* ld-ia64/tlsbin.td: Likewise.
	* ld-elfvsb/elfvsb.exp: XFAIL non-PIC load offset tests on s390x.
	* ld-shared/shared.exp: Likewise.
@
text
@d53 1
a53 1
 804903b:	2b 83 dc ff ff ff[ 	]+sub    0xffffffdc\(%ebx\),%eax
@


1.3
log
@	* ld-i386/tlsbin.dd: Adjust for changed sib printing.
@
text
@d28 1
a28 1
 804900b:	81 c3 f6 10 00 00[ 	]+add    \$0x10f6,%ebx
d35 1
a35 1
 804901b:	2b 83 2c 00 00 00[ 	]+sub    0x2c\(%ebx\),%eax
d44 1
a44 1
 804902b:	2b 83 1c 00 00 00[ 	]+sub    0x1c\(%ebx\),%eax
d53 1
a53 1
 804903b:	2b 83 10 00 00 00[ 	]+sub    0x10\(%ebx\),%eax
d62 1
a62 1
 804904b:	2b 83 20 00 00 00[ 	]+sub    0x20\(%ebx\),%eax
d70 1
a70 1
 804905b:	81 e8 a0 00 00 00[ 	]+sub    \$0xa0,%eax
d78 1
a78 1
 804906b:	81 e8 80 00 00 00[ 	]+sub    \$0x80,%eax
d86 1
a86 1
 804907b:	81 e8 60 00 00 00[ 	]+sub    \$0x60,%eax
d98 1
a98 1
 8049092:	8d 90 80 ff ff ff[ 	]+lea    0xffffff80\(%eax\),%edx
d102 1
a102 1
 804909a:	8d 88 84 ff ff ff[ 	]+lea    0xffffff84\(%eax\),%ecx
d114 1
a114 1
 80490b1:	8d 90 a0 ff ff ff[ 	]+lea    0xffffffa0\(%eax\),%edx
d118 1
a118 1
 80490b9:	8d 88 a4 ff ff ff[ 	]+lea    0xffffffa4\(%eax\),%ecx
d125 1
a125 1
 80490c3:	65 8b 0d 00 00 00 00 	mov    %gs:0x0,%ecx
d128 1
a128 1
 80490cc:	2b 8b 1c 00 00 00[ 	]+sub    0x1c\(%ebx\),%ecx
d138 1
a138 1
 80490de:	2b 83 20 00 00 00[ 	]+sub    0x20\(%ebx\),%eax
d145 1
a145 1
 80490e8:	65 8b 0d 00 00 00 00 	mov    %gs:0x0,%ecx
d148 1
a148 1
 80490f1:	03 8b 10 00 00 00[ 	]+add    0x10\(%ebx\),%ecx
d158 1
a158 1
 8049103:	03 83 24 00 00 00[ 	]+add    0x24\(%ebx\),%eax
d165 1
a165 1
 804910d:	65 8b 0d 00 00 00 00 	mov    %gs:0x0,%ecx
d168 1
a168 1
 8049116:	81 e9 a0 00 00 00[ 	]+sub    \$0xa0,%ecx
d175 1
a175 1
 8049120:	65 8b 0d 00 00 00 00 	mov    %gs:0x0,%ecx
d178 1
a178 1
 8049129:	81 c0 80 ff ff ff[ 	]+add    \$0xffffff80,%eax
d185 1
a185 1
 8049133:	65 8b 0d 00 00 00 00 	mov    %gs:0x0,%ecx
d188 1
a188 1
 804913c:	81 e9 60 00 00 00[ 	]+sub    \$0x60,%ecx
d196 1
a196 1
 8049146:	8b 8b 14 00 00 00[ 	]+mov    0x14\(%ebx\),%ecx
d206 1
a206 1
 8049155:	c7 c0 90 ff ff ff[ 	]+mov    \$0xffffff90,%eax
d216 1
a216 1
 8049164:	c7 c2 b0 ff ff ff[ 	]+mov    \$0xffffffb0,%edx
d229 1
a229 1
08049178 <_start>:
d234 1
a234 1
 8049181:	81 c1 80 0f 00 00[ 	]+add    \$0xf80,%ecx
d240 1
a240 1
 804918b:	65 8b 15 00 00 00 00 	mov    %gs:0x0,%edx
d243 1
a243 1
 8049194:	2b 91 28 00 00 00[ 	]+sub    0x28\(%ecx\),%edx
d253 1
a253 1
 80491a6:	03 05 18 a1 04 08[ 	]+add    0x804a118,%eax
d260 1
a260 1
 80491b0:	8b 15 30 a1 04 08[ 	]+mov    0x804a130,%edx
d270 1
a270 1
 80491bf:	65 8b 15 00 00 00 00 	mov    %gs:0x0,%edx
d273 1
a273 1
 80491c8:	81 ea 2c 00 00 00[ 	]+sub    \$0x2c,%edx
d283 1
a283 1
 80491da:	81 c0 d8 ff ff ff[ 	]+add    \$0xffffffd8,%eax
d291 1
a291 1
 80491e4:	c7 c2 dc ff ff ff[ 	]+mov    \$0xffffffdc,%edx
d301 1
a301 1
 80491f3:	65 8b 15 00 00 00 00 	mov    %gs:0x0,%edx
d304 1
a304 1
 80491fc:	81 ea 0c 00 00 00[ 	]+sub    \$0xc,%edx
d314 1
a314 1
 804920e:	81 c0 f8 ff ff ff[ 	]+add    \$0xfffffff8,%eax
d321 1
a321 1
 8049218:	c7 c2 fc ff ff ff[ 	]+mov    \$0xfffffffc,%edx
d331 1
a331 1
 8049227:	65 8b 15 00 00 00 00 	mov    %gs:0x0,%edx
d334 1
a334 1
 8049230:	81 ea 4c 00 00 00[ 	]+sub    \$0x4c,%edx
d344 1
a344 1
 8049242:	81 c0 b8 ff ff ff[ 	]+add    \$0xffffffb8,%eax
d352 1
a352 1
 804924c:	c7 c2 bc ff ff ff[ 	]+mov    \$0xffffffbc,%edx
d362 1
a362 1
 804925b:	ba a0 00 00 00[ 	]+mov    \$0xa0,%edx
d375 1
a375 1
 8049270:	b8 1f 00 00 00[ 	]+mov    \$0x1f,%eax
d379 1
a379 1
 8049277:	65 8b 15 00 00 00 00 	mov    %gs:0x0,%edx
d388 1
a388 1
 8049286:	b8 5d 00 00 00[ 	]+mov    \$0x5d,%eax
d392 1
a392 1
 804928d:	65 8b 15 00 00 00 00 	mov    %gs:0x0,%edx
d404 1
a404 1
 80492a4:	8d 90 64 ff ff ff[ 	]+lea    0xffffff64\(%eax\),%edx
d411 1
a411 1
 80492ae:	b8 e6 ff ff ff[ 	]+mov    \$0xffffffe6,%eax
d415 1
a415 1
 80492b5:	65 8b 15 00 00 00 00 	mov    %gs:0x0,%edx
d424 1
a424 1
 80492c4:	65 8b 15 00 00 00 00 	mov    %gs:0x0,%edx
d427 1
a427 1
 80492cd:	81 c2 a5 ff ff ff[ 	]+add    \$0xffffffa5,%edx
d434 1
a434 1
 80492d7:	65 a1 68 ff ff ff[ 	]+mov    %gs:0xffffff68,%eax
d441 1
a441 1
 80492e1:	65 8b 15 eb ff ff ff 	mov    %gs:0xffffffeb,%edx
d448 1
a448 1
 80492ec:	65 8b 15 a9 ff ff ff 	mov    %gs:0xffffffa9,%edx
@


1.2
log
@bfd/
	* elf32-i386.c (elf_i386_relocate_section): Resolve R_386_TLS_LDO_32
	to st_value + addend in non-code sections.
	* elf64-x86-64.c (elf64_x86_64_relocate_section): Resolve
	R_X86_64_DTPOFF32 to st_value + addend in non-code sections.

ld/testsuite/
	* ld-i386/i386.exp: Add tlsg test.
	* ld-i386/tlsg.s: New test.
	* ld-i386/tlsg.sd: New test.
	* ld-i386/tlsbin.dd: Change LD into LD -> LE in comments.
	* ld-i386/tlsbinpic.s: Likewise.
	* ld-x86-64/x86-64.exp: Add tlsg test.
	* ld-x86-64/tlsg.s: New test.
	* ld-x86-64/tlsg.sd: New test.
	* ld-x86-64/tlsbin.dd: Change LD into LD -> LE in comments.
	* ld-x86-64/tlsbinpic.s: Likewise.
@
text
@d95 1
a95 1
 804908c:	8d 74 26 00[ 	]+lea    0x0\(%esi,1\),%esi
d111 1
a111 1
 80490ab:	8d 74 26 00[ 	]+lea    0x0\(%esi,1\),%esi
@


1.1
log
@bfd/
	* reloc.c (BFD_RELOC_386_TLS_TPOFF, BFD_RELOC_386_TLS_IE,
	BFD_RELOC_386_TLS_GOTIE): Add.
	* bfd-in2.h, libbfd.h: Rebuilt.
	* elf32-i386.c (elf_howto_table): Add R_386_TLS_TPOFF, R_386_TLS_IE
	and R_386_TLS_GOTIE.
	(elf_i386_reloc_type_lookup): Handle it.
	(struct elf_i386_link_hash_entry): Change tls_type type to unsigned
	char instead of enum, change GOT_* into defines.
	(GOT_TLS_IE_POS, GOT_TLS_IE_NEG, GOT_TLS_IE_BOTH): Define.
	(elf_i386_tls_transition): Handle R_386_TLS_IE and R_386_TLS_GOTIE.
	(elf_i386_check_relocs): Likewise.  Avoid crash if local symbol is
	accessed both as normal and TLS symbol.  Move R_386_TLS_LDM and
	R_386_PLT32 cases so that R_386_TLS_IE can fall through.
	Handle R_386_TLS_LE_32 and R_386_TLS_LE in shared libs.
	(elf_i386_gc_sweep_hook): Handle R_386_TLS_IE and R_386_TLS_GOTIE.
	Handle R_386_TLS_LE_32 and R_386_TLS_LE in shared libs.
	(allocate_dynrelocs): Allocate 2 .got and 2 .rel.got entries if
	tls_type is GOT_TLS_IE_BOTH.
	(elf_i386_size_dynamic_sections): Likewise.
	(elf_i386_relocate_section): Handle R_386_TLS_IE and R_386_TLS_GOTIE.
	Handle R_386_TLS_LE_32 and R_386_TLS_LE in shared libs.
	(elf_i386_finish_dynamic_symbol): Use tls_type & GOT_TLS_IE to catch
	all 4 GOT_TLS_* TLS types.
gas/
	* config/tc-i386.c (tc_i386_fix_adjustable): Handle
	BFD_RELOC_386_TLS_IE and BFD_RELOC_386_TLS_GOTIE.
	(BFD_RELOC_386_TLS_IE, BFD_RELOC_386_TLS_GOTIE): Define to 0
	if not defined.
	(lex_got): Handle @@GOTNTPOFF and @@INDNTPOFF.
	(md_apply_fix3, tc_gen_reloc): Handle BFD_RELOC_386_TLS_IE and
	BFD_RELOC_386_TLS_GOTIE.
gas/testsuite/
	* gas/i386/tlspic.s: Add tests.
	* gas/i386/tlspic.d: Regenerated.
	* gas/i386/tlsnopic.s: Add tests.
	* gas/i386/tlsnopic.d: Regenerated.
include/
	* elf/i386.h (R_386_TLS_TPOFF, R_386_TLS_IE, R_386_TLS_GOTIE):
	Define.
ld/testsuite/
	* ld-i386/i386.exp: New.
	* ld-i386/tlsbin.dd: New test.
	* ld-i386/tlsbinpic.s: New test.
	* ld-i386/tlsbin.rd: New test.
	* ld-i386/tlsbin.s: New test.
	* ld-i386/tlsbin.sd: New test.
	* ld-i386/tlsbin.td: New test.
	* ld-i386/tlslib.s: New test.
	* ld-i386/tlsnopic1.s: New test.
	* ld-i386/tlsnopic2.s: New test.
	* ld-i386/tlsnopic.dd: New test.
	* ld-i386/tlsnopic.rd: New test.
	* ld-i386/tlsnopic.sd: New test.
	* ld-i386/tlspic1.s: New test.
	* ld-i386/tlspic2.s: New test.
	* ld-i386/tlspic.dd: New test.
	* ld-i386/tlspic.rd: New test.
	* ld-i386/tlspic.sd: New test.
	* ld-i386/tlspic.td: New test.
@
text
@d92 1
a92 1
#  LD
d108 1
a108 1
#  LD against hidden variables
@


1.1.2.1
log
@2002-09-23  Daniel Jacobowitz  <drow@@mvista.com>

	Merge from mainline:
	2002-09-19  Jakub Jelinek  <jakub@@redhat.com>
	* ld-i386/i386.exp: New.
	* ld-i386/tlsbin.dd: New test.
	* ld-i386/tlsbinpic.s: New test.
	* ld-i386/tlsbin.rd: New test.
	* ld-i386/tlsbin.s: New test.
	* ld-i386/tlsbin.sd: New test.
	* ld-i386/tlsbin.td: New test.
	* ld-i386/tlslib.s: New test.
	* ld-i386/tlsnopic1.s: New test.
	* ld-i386/tlsnopic2.s: New test.
	* ld-i386/tlsnopic.dd: New test.
	* ld-i386/tlsnopic.rd: New test.
	* ld-i386/tlsnopic.sd: New test.
	* ld-i386/tlspic1.s: New test.
	* ld-i386/tlspic2.s: New test.
	* ld-i386/tlspic.dd: New test.
	* ld-i386/tlspic.rd: New test.
	* ld-i386/tlspic.sd: New test.
	* ld-i386/tlspic.td: New test.

	2002-08-13  H.J. Lu <hjl@@gnu.org>
	* ld-elfvers/vers.exp: Add vers23c and vers23d.

	* ld-elfvers/vers23c.ver: New.
	* ld-elfvers/vers23d.dsym: New.

	2002-08-12  H.J. Lu <hjl@@gnu.org>
	* ld-elfvers/vers.exp: Add vers23.

	* ld-elfvers/vers23.c: New.
	* ld-elfvers/vers23.dsym: New.
	* ld-elfvers/vers23.ver: New.
	* ld-elfvers/vers23a.c: New.
	* ld-elfvers/vers23a.dsym: New.
	* ld-elfvers/vers23a.map: New.
	* ld-elfvers/vers23a.sym: New.
	* ld-elfvers/vers23a.ver: New.
	* ld-elfvers/vers23b.c: New.
	* ld-elfvers/vers23b.dsym: New.
	* ld-elfvers/vers23b.map: New.
	* ld-elfvers/vers23b.ver: New.

	2002-08-10  Alan Modra  <amodra@@bigpond.net.au>
	* ld-discard/discard.exp: Don't run on linuxaout or linuxoldld.
	* ld-linkonce/linkonce.exp: Likewise.
	* ld-selective/sel-dump.exp: Likewise.
	* ld-selective/selective.exp: Don't run on aout or bout.

	2002-08-08  H.J. Lu <hjl@@gnu.org>
	* ld-elfvers/vers.exp: Add vers22.

	* ld-elfvers/vers22.c: New.
	* ld-elfvers/vers22.dsym: New.
	* ld-elfvers/vers22.map: New.
	* ld-elfvers/vers22.ver: New.
	* ld-elfvers/vers22a.c: New.
	* ld-elfvers/vers22a.dsym: New.
	* ld-elfvers/vers22a.sym: New.
	* ld-elfvers/vers22a.ver: New.
	* ld-elfvers/vers22b.c: New.
	* ld-elfvers/vers22b.dsym: New.
	* ld-elfvers/vers22b.ver: New.

	2002-08-08  Stephen Clarke <stephen.clarke@@superh.com>
	* ld-sh/sh64/abi32.xd: Adjust whitespace in elf32 section
	listing.
	* ld-sh/sh64/cmpct1.xd, ld-sh/sh64/mix1.xd, ld-sh/sh64/mix2.xd,
	ld-sh/sh64/rel32.xd, ld-sh/sh64/shdl32.xd: Likewise.

	2002-08-07  H.J. Lu <hjl@@gnu.org>
	* ld-elfvers/vers.exp: Add --no-undefined-version.

	* ld-elfvers/vers1.map: Remove the unused foo1 and foo2.
	* ld-elfvers/vers8.map: Likewise.
	* ld-elfvers/vers18.map: Likewise.

	2002-08-07  Stephen Clarke <stephen.clarke@@superh.com>
	* ld-sh/sh64/abi32.xd: Adjust as type of linker-script-symbols
	is no longer set to object.
	* ld-sh/sh64/abi64.xd, ld-sh/sh64/cmpct1.xd, ld-sh/sh64/crange1.rd,
	ld-sh/sh64/crange2.rd, ld-sh/sh64/crange3-cmpct.rd,
	ld-sh/sh64/crange3-media.rd, ld-sh/sh64/crange3.rd,
	ld-sh/sh64/mix1.xd, ld-sh/sh64/mix2.xd, ld-sh/sh64/shdl32.xd,
	ld-sh/sh64/shdl64.xd: Likewise.

	2002-08-06  H.J. Lu <hjl@@gnu.org>
	* ld-elfvers/vers.exp: Add --no-undefined-version.

	* ld-elfvers/vers1.map: Remove the unused foo1 and foo2.
	* ld-elfvers/vers8.map: Likewise.
	* ld-elfvers/vers18.map: Likewise.

	2002-07-28  John David Anglin  <dave@@hiauly1.hia.nrc.ca>
	* ld-discard/discard.exp, ld-scripts/phdrs.exp, ld-scripts/phdrs2.exp,
	ld-selective/sel-dump.exp: Test hppa*64*-*-hpux* target.
	* ld-elfvers/vers.exp, ld-elfvsb/elfvsb.exp, ld-elfweak/elfweak.exp,
	ld-linkonce/linkonce.exp, ld-shared/shared.exp,
	ld-undefined/weak-undef.exp:  Test hppa*64*-*-hpux* and hppa*-*-linux*
	targets.
	* ld-discard/exit.s, ld-discard/extern.s, ld-discard/start.s,
	ld-discard/static.s: Add whitespace before assembler directives.

	2002-07-15  H.J. Lu <hjl@@gnu.org>
	* ld-elfvers/vers.exp: Add vers21.

	* ld-elfvers/vers21.c: New.
	* ld-elfvers/vers21.dsym: New.
	* ld-elfvers/vers21.map: New.
	* ld-elfvers/vers21.sym: New.
	* ld-elfvers/vers21.ver: New.
@
text
@@

