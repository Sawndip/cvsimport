head	1.3;
access;
symbols
	binutils_latest_snapshot:1.2;
locks; strict;
comment	@# @;


1.3
date	2008.12.23.09.01.50;	author nickc;	state dead;
branches;
next	1.2;

1.2
date	2008.12.04.11.00.18;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	2008.12.03.14.51.00;	author nickc;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Remove STT_IFUNC support.
@
text
@#name: Generation of dynamic relocs for STT_IFUNC symbols
#source: ifunc.s
#as: --32
#ld: -melf_i386 -lc --defsym _start=0 -L/usr/lib
#readelf: --relocs --syms

Relocation section '.rel.ifunc.dyn' at offset 0x[0-9a-f]+ contains 2 entries:
 +Offset +Info +Type +Sym.Value +Sym. Name
[0-9a-f]+  0+0202 R_386_PC32        func\(\)     func
[0-9a-f]+  0+0102 R_386_PC32        long_fun\(\) long_func_name
#...
    ..: [0-9a-f]+    .. IFUNC   GLOBAL DEFAULT   .. long_func_name
    ..: [0-9a-f]+    .. IFUNC   GLOBAL DEFAULT   .. func
#pass
@


1.2
log
@        * ld-x86-64/ifunc.d: New test (of STT_IFUNC for x86_64).
        * ld-x86-64/ifunc.s: Source file for new test.
        * ld-x86-64/x86-64.exp: Run the new test.
        * ld-i386/ifunc.d: Tidy up regexps for expected output.
@
text
@@


1.1
log
@include/elf/
            * common.h (STT_IFUNC): Define.
elfcpp/
            * elfcpp.h (enum STT): Add STT_IFUNC.
bfd/
            * syms.c (struct bfd_symbol): Add new flag BSF_INDIRECT_FUNCTION.
            Remove redundant flag BFD_FORT_COMM_DEFAULT_VALUE.  Renumber flags
            to remove gaps.
            (bfd_print_symbol_vandf): Return 'i' for BSF_INDIRECT_FUNCTION.
            (bfd_decode_symclass): Likewise.
            * elf.c (swap_out_syms): Translate BSF_INDIRECT_FUNCTION into
            STT_IFUNC.
            (elf_find_function): Treat STT_IFUNC in the same way as STT_FUNC.
            (_bfd_elf_is_function_type): Likewise.
            * elf32-arm.c (arm_elf_find_function): Likewise.
            (elf32_arm_adjust_dynamic_symbol): Likewise.
            (elf32_arm_swap_symbol_in): Likewise.
            (elf32_arm_additional_program_headers): Likewise.
            * elf32-i386.c (is_indirect_symbol): New function.
            (elf_i386_check_relocs): Also generate dynamic relocs for
            relocations against STT_IFUNC symbols.
            (allocate_dynrelocs): Likewise.
            (elf_i386_relocate_section): Likewise.
            * elf64-x86-64.c (is_indirect_symbol): New function.
            (elf64_x86_64_check_relocs): Also generate dynamic relocs for
            relocations against STT_IFUNC symbols.
            (allocate_dynrelocs): Likewise.
            (elf64_x86_64_relocate_section): Likewise.
            * elfcode.h (elf_slurp_symbol_table): Translate STT_IFUNC into
            BSF_INDIRECT_FUNCTION.
            * elflink.c (_bfd_elf_adjust_dynamic_reloc_section): Add support
            for STT_IFUNC symbols.
            (get_ifunc_reloc_section_name): New function.
            (_bfd_elf_make_ifunc_reloc_section): New function.
            * elf-bfd.h (struct bfd_elf_section_data): Add indirect_relocs field.
            * bfd-in2.h: Regenerate.
gas/
            * config/obj-elf.c (obj_elf_type): Add support for STT_IFUNC type.
            * doc/as.texinfo: Document new feature.
            * NEWS: Mention new feature.
gas/testsuite/
            * gas/elf/type.s: Add test of STT_IFUNC symbol type.
            * gas/elf/type.e: Update expected disassembly.
            * gas/elf/elf.exp: Update grep of symbol types.
ld/
            * NEWS: Mention new feature.
            * pe-dll.c (process_def_file): Replace use of redundant
            BFD_FORT_COMM_DEFAULT_VALUE with 0.
            * scripttempl/elf.sc: Add .rel.ifunc.dyn and .rela.ifunc.dyn
            sections.
ld/testsuite/
            * ld-mips-elf/reloc-1-n32.d: Updated expected output for reloc
            descriptions.
            * ld-mips-elf/reloc-1-n64.d: Likewise.
            * ld-i386/ifunc.d: New test.
            * ld-i386/ifunc.s: Source file for the new test.
            * ld-i386/i386.exp: Run the new test.
@
text
@d1 1
a1 1
#name: Generatiion of dynamic relocs for STT_IFUNC symbols
d8 3
a10 3
 Offset     Info    Type            Sym.Value  Sym. Name
[0-9a-f]+  00000202 R_386_PC32        func\(\)     func
[0-9a-f]+  00000102 R_386_PC32        long_fun\(\) long_func_name
d12 2
a13 2
    ..: 080482e0    29 IFUNC   GLOBAL DEFAULT   10 long_func_name
    ..: 08048300    29 IFUNC   GLOBAL DEFAULT   10 func
@

