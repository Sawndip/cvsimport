head	1.5;
access;
symbols
	binutils-2_24-branch:1.5.0.4
	binutils-2_24-branchpoint:1.5
	binutils-2_21_1:1.3
	binutils-2_23_2:1.5
	binutils-2_23_1:1.5
	binutils-2_23:1.5
	binutils-2_23-branch:1.5.0.2
	binutils-2_23-branchpoint:1.5
	binutils-2_22_branch:1.4.0.4
	binutils-2_22:1.4
	binutils-2_22-branch:1.4.0.2
	binutils-2_22-branchpoint:1.4
	binutils-2_21:1.3
	binutils-2_21-branch:1.3.0.14
	binutils-2_21-branchpoint:1.3
	binutils-2_20_1:1.3
	binutils-2_20:1.3
	binutils-arc-20081103-branch:1.3.0.12
	binutils-arc-20081103-branchpoint:1.3
	binutils-2_20-branch:1.3.0.10
	binutils-2_20-branchpoint:1.3
	dje-cgen-play1-branch:1.3.0.8
	dje-cgen-play1-branchpoint:1.3
	arc-20081103-branch:1.3.0.6
	arc-20081103-branchpoint:1.3
	binutils-2_19_1:1.3
	binutils-2_19:1.3
	binutils-2_19-branch:1.3.0.4
	binutils-2_19-branchpoint:1.3
	binutils-2_18:1.3
	binutils-2_18-branch:1.3.0.2
	binutils-2_18-branchpoint:1.3
	binutils-csl-coldfire-4_1-32:1.1
	binutils-csl-sourcerygxx-4_1-32:1.1
	binutils-csl-innovasic-fido-3_4_4-33:1.1
	binutils-csl-coldfire-4_1-30:1.1
	binutils-csl-sourcerygxx-4_1-30:1.1
	binutils-csl-coldfire-4_1-28:1.1
	binutils-csl-sourcerygxx-4_1-29:1.1
	binutils-csl-sourcerygxx-4_1-28:1.1
	binutils-csl-arm-2006q3-27:1.1
	binutils-csl-sourcerygxx-4_1-27:1.1
	binutils-csl-arm-2006q3-26:1.1
	binutils-csl-sourcerygxx-4_1-26:1.1
	binutils-csl-sourcerygxx-4_1-25:1.1
	binutils-csl-sourcerygxx-4_1-24:1.1
	binutils-csl-sourcerygxx-4_1-23:1.1
	binutils-csl-sourcerygxx-4_1-21:1.1
	binutils-csl-arm-2006q3-21:1.1
	binutils-csl-sourcerygxx-4_1-22:1.1
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.1
	binutils-csl-sourcerygxx-4_1-20:1.1
	binutils-csl-arm-2006q3-19:1.1
	binutils-csl-sourcerygxx-4_1-19:1.1
	binutils-csl-sourcerygxx-4_1-18:1.1
	binutils-csl-renesas-4_1-9:1.1
	binutils-csl-renesas-4_1-8:1.1
	binutils-csl-renesas-4_1-7:1.1
	binutils-csl-renesas-4_1-6:1.1
	binutils-csl-sourcerygxx-4_1-17:1.1
	binutils-csl-sourcerygxx-4_1-14:1.1
	binutils-csl-sourcerygxx-4_1-15:1.1
	binutils-csl-sourcerygxx-4_1-13:1.1
	binutils-2_17:1.1
	binutils-csl-sourcerygxx-4_1-12:1.1
	binutils-csl-sourcerygxx-3_4_4-21:1.1
	binutils-csl-sourcerygxx-4_1-9:1.1
	binutils-csl-sourcerygxx-4_1-8:1.1
	binutils-csl-sourcerygxx-4_1-7:1.1
	binutils-csl-arm-2006q1-6:1.1
	binutils-csl-sourcerygxx-4_1-6:1.1
	binutils-csl-coldfire-4_1-11:1.1
	binutils-csl-sourcerygxx-3_4_4-19:1.1
	binutils-csl-coldfire-4_1-10:1.1
	binutils-csl-sourcerygxx-4_1-5:1.1
	binutils-csl-sourcerygxx-4_1-4:1.1
	binutils-csl-morpho-4_1-4:1.1
	binutils-csl-sourcerygxx-3_4_4-17:1.1
	binutils-2_17-branch:1.1.0.4
	binutils-2_17-branchpoint:1.1
	binutils-csl-2_17-branch:1.1.0.2
	binutils-csl-2_17-branchpoint:1.1
	binutils_latest_snapshot:1.5;
locks; strict;
comment	@# @;


1.5
date	2012.04.03.16.01.37;	author roland;	state Exp;
branches;
next	1.4;

1.4
date	2011.06.20.13.18.49;	author jakub;	state Exp;
branches;
next	1.3;

1.3
date	2007.04.27.04.22.00;	author hjl;	state Exp;
branches;
next	1.2;

1.2
date	2006.06.30.14.16.13;	author hjl;	state Exp;
branches;
next	1.1;

1.1
date	2006.01.18.21.07.49;	author aoliva;	state Exp;
branches;
next	;


desc
@@


1.5
log
@bfd/
2012-04-03  Roland McGrath  <mcgrathr@@google.com>

	* elf-nacl.c: New file.
	* elf-nacl.h: New file.
	* elf32-i386.c (elf_backend_modify_segment_map): Define for
	bfd_elf32_i386_nacl_vec.
	(elf_backend_modify_program_headers): Likewise.
	* elf64-x86-64.c (elf_backend_modify_segment_map): Define for
	bfd_elf64_x86_64_nacl_vec and bfd_elf32_x86_64_nacl_vec.
	(elf_backend_modify_program_headers): Likewise.
	* Makefile.am (BFD32_BACKENDS, BFD64_BACKENDS): Add elf-nacl.lo here.
	(BFD32_BACKENDS_CFILES, BFD64_BACKENDS_CFILES): Add elf-nacl.c here.
	* Makefile.in: Regenerated.
	* configure.in (bfd_elf64_x86_64_nacl_vec): Add elf-nacl.o to tb here.
	(bfd_elf32_x86_64_nacl_vec): Likewise.
	(bfd_elf64_x86_64_vec, bfd_elf32_x86_64_vec): Likewise.
	(bfd_elf64_x86_64_freebsd_vec, bfd_elf64_x86_64_sol2_vec): Likewise.
	(bfd_elf64_l1om_vec, bfd_elf64_l1om_freebsd_vec): Likewise.
	(bfd_elf64_k1om_vec, bfd_elf64_k1om_freebsd_vec): Likewise.
	(bfd_elf32_i386_nacl_vec): Likewise.
	(bfd_elf32_i386_sol2_vec, bfd_elf32_i386_freebsd_vec): Likewise.
	(bfd_elf32_i386_vxworks_vec, bfd_elf32_i386_vec): Likewise.
	* configure: Regenerated.

binutils/testsuite/
2012-04-03  Roland McGrath  <mcgrathr@@google.com>

	* lib/binutils-common.exp (is_elf_format): Consider *-*-nacl* to
	be ELF too.

	* binutils-all/elfedit-4.d: Add "#as: --64" option.

	* binutils-all/i386/i386.exp: Accept nacl targets too.
	* binutils-all/x86-64/x86-64.exp: Likewise.

gas/testsuite/
2012-04-03  Roland McGrath  <mcgrathr@@google.com>

	* gas/i386/k1om.d: Add not-target match for *-*-nacl*.
	* gas/i386/l1om.d: Likewise.

ld/
2012-04-03  Roland McGrath  <mcgrathr@@google.com>

	* configure.tgt (i[3-7]86-*-nacl*, x86_64-*-nacl*): Handle them.
	* emulparams/elf_nacl.sh: New file.
	* emulparams/elf_i386_nacl.sh: New file.
	* emulparams/elf32_x86_64_nacl.sh: New file.
	* emulparams/elf_x86_64_nacl.sh: New file.
	* Makefile.am (ALL_EMULATION_SOURCES): Add eelf_i386_nacl.c here.
	(ALL_64_EMULATION_SOURCES): Add eelf32_x86_64_nacl.c and
	eelf_x86_64_nacl.c here.
	(eelf_i386_nacl.c, eelf32_x86_64_nacl.c, eelf_x86_64_nacl.c):
	New targets.
	* Makefile.in: Regenerated.

	* scripttempl/elf.sc: Handle SEPARATE_CODE cases.

ld/testsuite/
2012-04-03  Roland McGrath  <mcgrathr@@google.com>

	* ld-x86-64/ilp32-4-nacl.d: New file.
	* ld-x86-64/x86-64.exp: Run it.

	* ld-discard/discard.exp: Accept nacl targets too.
	* ld-elf/binutils.exp: Likewise.
	* ld-elf/comm-data.exp: Likewise.
	* ld-elf/elf.exp: Likewise.
	* ld-elf/tls_common.exp: Likewise.
	* ld-elfvers/vers.exp: Likewise.
	* ld-elfvsb/elfvsb.exp: Likewise.
	* ld-elfweak/elfweak.exp: Likewise.
	* ld-gc/gc.exp: Likewise.
	* ld-ifunc/binutils.exp: Likewise.
	* ld-ifunc/ifunc.exp: Likewise.
	* ld-linkonce/linkonce.exp:Likewise.
	* ld-pie/pie.exp: Likewise.
	* ld-shared/shared.exp: Likewise.
	* ld-undefined/weak-undef.exp: Likewise.
	* ld-unique/unique.exp: Likewise.
	* ld-x86-64/dwarfreloc.exp: Likewise.
	* ld-x86-64/line.exp: Likewise.

	* lib/ld-lib.exp (slurp_options): Support global array
	options_regsub to apply substitutions to the contents
	of options lines read from the file.
	* ld-i386/emit-relocs.d: Renamed to ...
	* ld-i386/emit-relocs.rd: ... this.
	* ld-i386/i386.exp: Accept nacl targets too.
	For them, use options_regsub to replace elf_i386 with
	elf_i386_nacl in run_dump_test cases; apply the same
	substitution in $i386tests; replace foo.rd expectations
	files with foo-nacl.rd in $i386tests.
	(i386tests): Change emit-relocs.d to emit-relocs.rd here.
	* ld-i386/emit-relocs-nacl.rd: New file.
	* ld-i386/plt-nacl.pd: New file.
	* ld-i386/plt-pic-nacl.pd: New file.
	* ld-i386/tlsbin-nacl.rd: New file.
	* ld-i386/tlsbindesc-nacl.rd: New file.
	* ld-i386/tlsdesc-nacl.rd: New file.
	* ld-i386/tlsgdesc-nacl.rd: New file.
	* ld-i386/tlsnopic-nacl.rd: New file.
	* ld-i386/tlspic-nacl.rd: New file.
	* ld-x86-64/x86-64.exp: Accept nacl targets too.
	For them, use options_regsub to replace elf_x86_64 with
	elf_x86_64_nacl in run_dump_test cases; apply the same
	substitution in $x86_64tests; replace foo.rd expectations
	files with foo-nacl.rd in $x86_64tests.
	Add explicit -melf_x86_64 to ld options in tests that need it,
	in case the default emulation is x32 (as it is for x86_64-nacl).
	* ld/testsuite/ld-x86-64/plt-nacl.pd: New file.
	* ld/testsuite/ld-x86-64/split-by-file-nacl.rd: New file.
	* ld/testsuite/ld-x86-64/tlsbin-nacl.rd: New file.
	* ld/testsuite/ld-x86-64/tlsbindesc-nacl.rd: New file.
	* ld/testsuite/ld-x86-64/tlsdesc-nacl.pd: New file.
	* ld/testsuite/ld-x86-64/tlsdesc-nacl.rd: New file.
	* ld/testsuite/ld-x86-64/tlsgdesc-nacl.rd: New file.
	* ld/testsuite/ld-x86-64/tlspic-nacl.rd: New file.

	* ld-i386/hidden2.d: Loosen regexps to match any file format variant,
	and not to depend on exact addresses, displacements, etc. where
	they are irrelevant.
	* ld-i386/pcrel16.d: Likewise.
	* ld-i386/pcrel16abs.d: Likewise.
	* ld-i386/pr12718.d: Likewise.
	* ld-i386/pr12921.d: Likewise.
	* ld-i386/reloc.d: Likewise.
	* ld-i386/tlsbin.dd: Likewise.
	* ld-i386/tlsbin.sd: Likewise.
	* ld-i386/tlsbin.td: Likewise.
	* ld-i386/tlsbindesc.dd: Likewise.
	* ld-i386/tlsbindesc.sd: Likewise.
	* ld-i386/tlsbindesc.td: Likewise.
	* ld-i386/tlsdesc.dd: Likewise.
	* ld-i386/tlsdesc.sd: Likewise.
	* ld-i386/tlsdesc.td: Likewise.
	* ld-i386/tlsg.sd: Likewise.
	* ld-i386/tlsgdesc.dd: Likewise.
	* ld-i386/tlsindntpoff.dd: Likewise.
	* ld-i386/tlsnopic.dd: Likewise.
	* ld-i386/tlsnopic.sd: Likewise.
	* ld-i386/tlspic.dd: Likewise.
	* ld-i386/tlspic.sd: Likewise.
	* ld-i386/tlspic.td: Likewise.
	* ld-i386/tlspie2.d: Likewise.
	* ld-x86-64/hidden2.d: Likewise.
	* ld-x86-64/pcrel16.d: Likewise.
	* ld-x86-64/pr12718.d: Likewise.
	* ld-x86-64/pr12921.d: Likewise.
	* ld-x86-64/protected3.d: Likewise.
	* ld-x86-64/tlsbin.dd: Likewise.
	* ld-x86-64/tlsbin.sd: Likewise.
	* ld-x86-64/tlsbin.td: Likewise.
	* ld-x86-64/tlsbindesc.dd: Likewise.
	* ld-x86-64/tlsbindesc.sd: Likewise.
	* ld-x86-64/tlsbindesc.td: Likewise.
	* ld-x86-64/tlsdesc.dd: Likewise.
	* ld-x86-64/tlsdesc.sd: Likewise.
	* ld-x86-64/tlsdesc.td: Likewise.
	* ld-x86-64/tlsg.sd: Likewise.
	* ld-x86-64/tlsgd5.dd: Likewise.
	* ld-x86-64/tlsgd6.dd: Likewise.
	* ld-x86-64/tlsgdesc.dd: Likewise.
	* ld-x86-64/tlspic.dd: Likewise.
	* ld-x86-64/tlspic.sd: Likewise.
	* ld-x86-64/tlspic.td: Likewise.

	* ld-x86-64/ilp32-8.d: Match any file format variant.
	Use a -Ttext and adjust expected results, to handle variant layouts.
	* ld-x86-64/ilp32-9.d: Likewise.

	* ld-i386/alloc.t: Remove superfluous OUTPUT_FORMAT statement.
	* ld-i386/pr12627.t: Likewise.

	* ld-x86-64/abs-l1om.d: Add target: constraint.
	* ld-x86-64/protected2-l1om.d: Likewise.
	* ld-x86-64/protected3-l1om.d: Likewise.
	* ld-x86-64/ilp32-4.d: Likewise.

	* ld-x86-64/plt.s: New file.
	* ld-x86-64/pltlib.s: New file.
	* ld-x86-64/plt.pd: New file.
	* ld-x86-64/x86-64.exp (x86_64tests): Add them.

	* ld-i386/plt.s: New file.
	* ld-i386/pltlib.s: New file.
	* ld-i386/plt.pd: New file.
	* ld-i386/plt-pic.s: New file.
	* ld-i386/plt-pic.pd: New file.
	* ld-i386/i386.exp (i386tests): Add them.
@
text
@#source: tlsdesc.s
#source: tlspic2.s
#as: --32
#ld: -shared -melf_i386 --no-ld-generated-unwind-info
#objdump: -drj.text
#target: i?86-*-*

.*: +file format elf32-i386.*

Disassembly of section .text:

[0-9a-f]+ <fn1>:
 +[0-9a-f]+:	55[ 	]+push   %ebp
 +[0-9a-f]+:	89 e5[ 	]+mov    %esp,%ebp
 +[0-9a-f]+:	53[ 	]+push   %ebx
 +[0-9a-f]+:	50[ 	]+push   %eax
 +[0-9a-f]+:	e8 00 00 00 00[ 	]+call   [0-9a-f]+ <.*>
 +[0-9a-f]+:	5b[ 	]+pop    %ebx
 +[0-9a-f]+:	81 c3 ([0-9a-f]{2} ){4}[ 	]+add    \$0x[0-9a-f]+,%ebx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  GDesc
 +[0-9a-f]+:	8d 83 24 00 00 00[ 	]+lea    0x24\(%ebx\),%eax
#				->R_386_TLS_DESC	sg1
 +[0-9a-f]+:	ff 10[ 	]+call   \*\(%eax\)
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  GD -> IE because variable is referenced through @@gottpoff too
 +[0-9a-f]+:	8b 83 f8 ff ff ff[ 	]+mov    -0x8\(%ebx\),%eax
#				->R_386_TLS_TPOFF	sg2
 +[0-9a-f]+:	f7 d8[ 	]+neg    %eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  GD -> IE because variable is referenced through @@gotntpoff too
 +[0-9a-f]+:	8b 83 c4 ff ff ff[ 	]+mov    -0x3c\(%ebx\),%eax
#				->R_386_TLS_TPOFF32	sg3
 +[0-9a-f]+:	66 90[ 	]+xchg   %ax,%ax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  GD -> IE because variable is referenced through @@gottpoff and
 +[0-9a-f]+:	8b 83 d4 ff ff ff[ 	]+mov    -0x2c\(%ebx\),%eax
#				->R_386_TLS_TPOFF32	sg4
 +[0-9a-f]+:	66 90[ 	]+xchg   %ax,%ax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  GD against local variable
 +[0-9a-f]+:	8d 83 0c 00 00 00[ 	]+lea    0xc\(%ebx\),%eax
#				->R_386_TLS_DESC	sl1
 +[0-9a-f]+:	ff 10[ 	]+call   \*\(%eax\)
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  GD -> IE against local variable referenced through @@gottpoff too
 +[0-9a-f]+:	8b 83 b0 ff ff ff[ 	]+mov    -0x50\(%ebx\),%eax
#				->R_386_TLS_TPOFF	sl2
 +[0-9a-f]+:	f7 d8[ 	]+neg    %eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  GD -> IE against local variable referenced through @@gotntpoff
 +[0-9a-f]+:	8b 83 b4 ff ff ff[ 	]+mov    -0x4c\(%ebx\),%eax
#				->R_386_TLS_TPOFF32	sl3
 +[0-9a-f]+:	66 90[ 	]+xchg   %ax,%ax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  GD -> IE against local variable referenced through @@gottpoff and
 +[0-9a-f]+:	8b 83 bc ff ff ff[ 	]+mov    -0x44\(%ebx\),%eax
#				->R_386_TLS_TPOFF32	sl4
 +[0-9a-f]+:	66 90[ 	]+xchg   %ax,%ax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  GD against hidden and local variable
 +[0-9a-f]+:	8d 83 2c 00 00 00[ 	]+lea    0x2c\(%ebx\),%eax
#				->R_386_TLS_DESC	sh1
 +[0-9a-f]+:	ff 10[ 	]+call   \*\(%eax\)
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  GD -> IE against hidden and local variable referenced through @@gottpoff too
 +[0-9a-f]+:	8b 83 fc ff ff ff[ 	]+mov    -0x4\(%ebx\),%eax
#				->R_386_TLS_TPOFF	sh2
 +[0-9a-f]+:	f7 d8[ 	]+neg    %eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  GD -> IE against hidden and local variable referenced through @@gotntpoff too
 +[0-9a-f]+:	8b 83 c8 ff ff ff[ 	]+mov    -0x38\(%ebx\),%eax
#				->R_386_TLS_TPOFF32	sh3
 +[0-9a-f]+:	66 90[ 	]+xchg   %ax,%ax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  GD -> IE against hidden and local variable referenced through @@gottpoff and @@gotntpoff too
 +[0-9a-f]+:	8b 83 e8 ff ff ff[ 	]+mov    -0x18\(%ebx\),%eax
#				->R_386_TLS_TPOFF32	sh4
 +[0-9a-f]+:	66 90[ 	]+xchg   %ax,%ax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  GD against hidden but not local variable
 +[0-9a-f]+:	8d 83 14 00 00 00[ 	]+lea    0x14\(%ebx\),%eax
#				->R_386_TLS_DESC	sH1
 +[0-9a-f]+:	ff 10[ 	]+call   \*\(%eax\)
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  GD -> IE against hidden but not local variable referenced through
 +[0-9a-f]+:	8b 83 cc ff ff ff[ 	]+mov    -0x34\(%ebx\),%eax
#				->R_386_TLS_TPOFF	sH2
 +[0-9a-f]+:	f7 d8[ 	]+neg    %eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  GD -> IE against hidden but not local variable referenced through
 +[0-9a-f]+:	8b 83 ec ff ff ff[ 	]+mov    -0x14\(%ebx\),%eax
#				->R_386_TLS_TPOFF32	sH3
 +[0-9a-f]+:	66 90[ 	]+xchg   %ax,%ax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  GD -> IE against hidden but not local variable referenced through
 +[0-9a-f]+:	8b 83 e0 ff ff ff[ 	]+mov    -0x20\(%ebx\),%eax
#				->R_386_TLS_TPOFF32	sH4
 +[0-9a-f]+:	66 90[ 	]+xchg   %ax,%ax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  LD
 +[0-9a-f]+:	8d 83 1c 00 00 00[ 	]+lea    0x1c\(%ebx\),%eax
#				->R_386_TLS_DESC	_TLS_MODULE_BASE_
 +[0-9a-f]+:	ff 10[ 	]+call   \*\(%eax\)
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	8d 90 20 00 00 00[ 	]+lea    0x20\(%eax\),%edx
#							sl1
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	8d 88 26 00 00 00[ 	]+lea    0x26\(%eax\),%ecx
#							sl2+2
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  LD against hidden and local variables
 +[0-9a-f]+:	8d 90 40 00 00 00[ 	]+lea    0x40\(%eax\),%edx
#							sh1
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	8d 88 47 00 00 00[ 	]+lea    0x47\(%eax\),%ecx
#							sh2+3
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  LD against hidden but not local variables
 +[0-9a-f]+:	8d 90 60 00 00 00[ 	]+lea    0x60\(%eax\),%edx
#							sH1
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	8d 88 65 00 00 00[ 	]+lea    0x65\(%eax\),%ecx
#							sH2+1
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gottpoff IE against global var
 +[0-9a-f]+:	65 8b 0d 00 00 00 00[ 	]+mov    %gs:0x0,%ecx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	2b 8b f8 ff ff ff[ 	]+sub    -0x8\(%ebx\),%ecx
#				->R_386_TLS_TPOFF32	sg2
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gottpoff IE against global var
 +[0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	2b 83 d0 ff ff ff[ 	]+sub    -0x30\(%ebx\),%eax
#				->R_386_TLS_TPOFF32	sg4
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gotntpoff IE against global var
 +[0-9a-f]+:	65 8b 0d 00 00 00 00[ 	]+mov    %gs:0x0,%ecx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	03 8b c4 ff ff ff[ 	]+add    -0x3c\(%ebx\),%ecx
#				->R_386_TLS_TPOFF	sg3
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gotntpoff IE against global var
 +[0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	03 83 d4 ff ff ff[ 	]+add    -0x2c\(%ebx\),%eax
#				->R_386_TLS_TPOFF	sg4
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gottpoff IE against local var
 +[0-9a-f]+:	65 8b 0d 00 00 00 00[ 	]+mov    %gs:0x0,%ecx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	2b 8b b0 ff ff ff[ 	]+sub    -0x50\(%ebx\),%ecx
#				->R_386_TLS_TPOFF32	[0xdcffffff]
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gottpoff IE against local var
 +[0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	2b 83 b8 ff ff ff[ 	]+sub    -0x48\(%ebx\),%eax
#				->R_386_TLS_TPOFF32	[0xd4ffffff]
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gotntpoff IE against local var
 +[0-9a-f]+:	65 8b 0d 00 00 00 00[ 	]+mov    %gs:0x0,%ecx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	03 8b b4 ff ff ff[ 	]+add    -0x4c\(%ebx\),%ecx
#				->R_386_TLS_TPOFF	[0x28000000]
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gotntpoff IE against local var
 +[0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	03 83 bc ff ff ff[ 	]+add    -0x44\(%ebx\),%eax
#				->R_386_TLS_TPOFF	[0x2c000000]
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gottpoff IE against hidden and local var
 +[0-9a-f]+:	65 8b 0d 00 00 00 00[ 	]+mov    %gs:0x0,%ecx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	2b 8b fc ff ff ff[ 	]+sub    -0x4\(%ebx\),%ecx
#				->R_386_TLS_TPOFF32	[0xbcffffff]
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gottpoff IE against hidden and local var
 +[0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	2b 83 e4 ff ff ff[ 	]+sub    -0x1c\(%ebx\),%eax
#				->R_386_TLS_TPOFF32	[0xb4ffffff]
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gotntpoff IE against hidden and local var
 +[0-9a-f]+:	65 8b 0d 00 00 00 00[ 	]+mov    %gs:0x0,%ecx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	03 8b c8 ff ff ff[ 	]+add    -0x38\(%ebx\),%ecx
#				->R_386_TLS_TPOFF	[0x48000000]
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gotntpoff IE against hidden and local var
 +[0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	03 83 e8 ff ff ff[ 	]+add    -0x18\(%ebx\),%eax
#				->R_386_TLS_TPOFF	[0x4c000000]
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gottpoff IE against hidden but not local var
 +[0-9a-f]+:	65 8b 0d 00 00 00 00[ 	]+mov    %gs:0x0,%ecx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	2b 8b cc ff ff ff[ 	]+sub    -0x34\(%ebx\),%ecx
#				->R_386_TLS_TPOFF32	[0x9cffffff]
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gottpoff IE against hidden but not local var
 +[0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	2b 83 dc ff ff ff[ 	]+sub    -0x24\(%ebx\),%eax
#				->R_386_TLS_TPOFF32	[0x94ffffff]
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gotntpoff IE against hidden but not local var
 +[0-9a-f]+:	65 8b 0d 00 00 00 00[ 	]+mov    %gs:0x0,%ecx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	03 8b ec ff ff ff[ 	]+add    -0x14\(%ebx\),%ecx
#				->R_386_TLS_TPOFF	[0x68000000]
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gotntpoff IE against hidden but not local var
 +[0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	03 83 e0 ff ff ff[ 	]+add    -0x20\(%ebx\),%eax
#				->R_386_TLS_TPOFF	[0x6c000000]
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  Direct access through %gs
#  @@gotntpoff IE against global var
 +[0-9a-f]+:	8b 8b d8 ff ff ff[ 	]+mov    -0x28\(%ebx\),%ecx
#				->R_386_TLS_TPOFF	sg5
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	65 8b 11[ 	]+mov    %gs:\(%ecx\),%edx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gotntpoff IE against local var
 +[0-9a-f]+:	8b 83 c0 ff ff ff[ 	]+mov    -0x40\(%ebx\),%eax
#				->R_386_TLS_TPOFF	[0x30000000]
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	65 8b 10[ 	]+mov    %gs:\(%eax\),%edx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gotntpoff IE against hidden and local var
 +[0-9a-f]+:	8b 93 f0 ff ff ff[ 	]+mov    -0x10\(%ebx\),%edx
#				->R_386_TLS_TPOFF	[0x50000000]
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	65 8b 12[ 	]+mov    %gs:\(%edx\),%edx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
#  @@gotntpoff IE against hidden but not local var
 +[0-9a-f]+:	8b 8b f4 ff ff ff[ 	]+mov    -0xc\(%ebx\),%ecx
#				->R_386_TLS_TPOFF	[0x70000000]
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	65 8b 11[ 	]+mov    %gs:\(%ecx\),%edx
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	90[ 	]+nop *
 +[0-9a-f]+:	8b 5d fc[ 	]+mov    -0x4\(%ebp\),%ebx
 +[0-9a-f]+:	c9[ 	]+leave *
 +[0-9a-f]+:	c3[ 	]+ret *
@


1.4
log
@	PR ld/12570
include/
	* bfdlink.h (struct bfd_link_info): Add no_ld_generated_unwind_info
	option.
ld/
	* emultempl/elf32.em (OPTION_LD_GENERATED_UNWIND_INFO,
	OPTION_NO_LD_GENERATED_UNWIND_INFO): Define.
	(gld${EMULATION_NAME}_handle_option): Handle
	--ld-generated-unwind-info and --no-ld-generated-unwind-info.
	* ld.texinfo (--ld-generated-unwind-info,
	--no-ld-generated-unwind-info): Document.
bfd/
	* elf-eh-frame.c (_bfd_elf_parse_eh_frame): Allow no relocations
	at all for linker created .eh_frame sections.
	(_bfd_elf_discard_section_eh_frame): Handle linker created
	.eh_frame sections with no relocations.
	* elf64-x86-64.c: Include dwarf2.h.
	(elf_x86_64_eh_frame_plt): New variable.
	(PLT_CIE_LENGTH, PLT_FDE_LENGTH, PLT_FDE_START_OFFSET,
	PLT_FDE_LEN_OFFSET): Define.
	(struct elf_x86_64_link_hash_table): Add plt_eh_frame field.
	(elf_x86_64_create_dynamic_sections): Create and fill in
	.eh_frame section for .plt section.
	(elf_x86_64_size_dynamic_sections): Write .plt section size
	into .eh_frame FDE covering .plt section.
	(elf_x86_64_finish_dynamic_sections): Write .plt section
	start into .eh_frame FDE covering .plt section.  Call
	_bfd_elf_write_section_eh_frame on htab->plt_eh_frame section.
	(elf_backend_plt_alignment): Define to 4.
	* elf32-i386.c: Include dwarf2.h.
	(elf_i386_eh_frame_plt): New variable.
	(PLT_CIE_LENGTH, PLT_FDE_LENGTH, PLT_FDE_START_OFFSET,
	PLT_FDE_LEN_OFFSET): Define.
	(struct elf_i386_link_hash_table): Add plt_eh_frame field.
	(elf_i386_create_dynamic_sections): Create and fill in
	.eh_frame section for .plt section.
	(elf_i386_size_dynamic_sections): Write .plt section size
	into .eh_frame FDE covering .plt section.
	(elf_i386_finish_dynamic_sections): Write .plt section
	start into .eh_frame FDE covering .plt section.  Call
	_bfd_elf_write_section_eh_frame on htab->plt_eh_frame section.
	(elf_backend_plt_alignment): Define to 4.
ld/testsuite/
	* ld-x86-64/x86-64.exp: Link some testcases with
	--no-ld-generated-unwind-info.
	* ld-x86-64/tlsbin.rd: Add --no-ld-generated-unwind-info to ld
	comment.
	* ld-x86-64/tlsdesc.dd: Likewise.
	* ld-x86-64/tlspic.dd: Likewise.
	* ld-x86-64/tlsdesc.sd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
	* ld-x86-64/tlsbindesc.rd: Likewise.
	* ld-x86-64/tlsbindesc.sd: Likewise.
	* ld-x86-64/tlsbin.td: Likewise.
	* ld-x86-64/tlsdesc.pd: Likewise.
	* ld-x86-64/tlsdesc.td: Likewise.
	* ld-x86-64/tlsbindesc.dd: Likewise.
	* ld-x86-64/tlsbin.dd: Likewise.
	* ld-x86-64/tlsgdesc.rd: Likewise.
	* ld-x86-64/tlspic.sd: Likewise.
	* ld-x86-64/tlsbindesc.td: Likewise.
	* ld-x86-64/tlspic.td: Likewise.
	* ld-x86-64/tlsbin.sd: Likewise.
	* ld-x86-64/ilp32-4.d: Likewise.
	* ld-x86-64/tlsgdesc.dd: Add --no-ld-generated-unwind-info to ld
	comment.  Adjust.
	* ld-x86-64/tlsdesc.rd: Likewise.
	* ld-x86-64/tlsgd6.dd: Adjust.
	* ld-x86-64/tlsgd5.dd: Likewise.
	* ld-i386/i386.exp: Link some testcases with
	--no-ld-generated-unwind-info.
	* ld-i386/tlsbin.rd: Add --no-ld-generated-unwind-info to ld
	comment..
	* ld-i386/tlsdesc.dd: Likewise.
	* ld-i386/tlspic.dd: Likewise.
	* ld-i386/tlsdesc.sd: Likewise.
	* ld-i386/tlsgdesc.dd: Likewise.
	* ld-i386/tlsnopic.sd: Likewise.
	* ld-i386/tlspic.rd: Likewise.
	* ld-i386/tlsdesc.rd: Likewise.
	* ld-i386/tlsbindesc.rd: Likewise.
	* ld-i386/tlsbindesc.sd: Likewise.
	* ld-i386/tlsbin.td: Likewise.
	* ld-i386/tlsdesc.td: Likewise.
	* ld-i386/tlsnopic.dd: Likewise.
	* ld-i386/tlsbindesc.dd: Likewise.
	* ld-i386/tlsbin.dd: Likewise.
	* ld-i386/tlsgdesc.rd: Likewise.
	* ld-i386/tlspic.sd: Likewise.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlsbindesc.td: Likewise.
	* ld-i386/tlspic.td: Likewise.
	* ld-i386/tlsbin.sd: Likewise.
@
text
@d8 1
a8 1
.*: +file format elf32-i386
d13 11
a23 11
 [0-9a-f]+:	55[ 	]+push   %ebp
 [0-9a-f]+:	89 e5[ 	]+mov    %esp,%ebp
 [0-9a-f]+:	53[ 	]+push   %ebx
 [0-9a-f]+:	50[ 	]+push   %eax
 [0-9a-f]+:	e8 00 00 00 00[ 	]+call   [0-9a-f]+ <fn1\+0xa>
 [0-9a-f]+:	5b[ 	]+pop    %ebx
 [0-9a-f]+:	81 c3 9a 13 00 00[ 	]+add    \$0x[0-9a-f]+,%ebx
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d25 1
a25 1
 [0-9a-f]+:	8d 83 24 00 00 00[ 	]+lea    0x24\(%ebx\),%eax
d27 5
a31 5
 [0-9a-f]+:	ff 10[ 	]+call   \*\(%eax\)
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d33 1
a33 1
 [0-9a-f]+:	8b 83 f8 ff ff ff[ 	]+mov    -0x8\(%ebx\),%eax
d35 5
a39 5
 [0-9a-f]+:	f7 d8[ 	]+neg    %eax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d41 1
a41 1
 [0-9a-f]+:	8b 83 c4 ff ff ff[ 	]+mov    -0x3c\(%ebx\),%eax
d43 5
a47 5
 [0-9a-f]+:	66 90[ 	]+xchg   %ax,%ax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d49 1
a49 1
 [0-9a-f]+:	8b 83 d4 ff ff ff[ 	]+mov    -0x2c\(%ebx\),%eax
d51 5
a55 5
 [0-9a-f]+:	66 90[ 	]+xchg   %ax,%ax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d57 1
a57 1
 [0-9a-f]+:	8d 83 0c 00 00 00[ 	]+lea    0xc\(%ebx\),%eax
d59 5
a63 5
 [0-9a-f]+:	ff 10[ 	]+call   \*\(%eax\)
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d65 1
a65 1
 [0-9a-f]+:	8b 83 b0 ff ff ff[ 	]+mov    -0x50\(%ebx\),%eax
d67 5
a71 5
 [0-9a-f]+:	f7 d8[ 	]+neg    %eax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d73 1
a73 1
 [0-9a-f]+:	8b 83 b4 ff ff ff[ 	]+mov    -0x4c\(%ebx\),%eax
d75 5
a79 5
 [0-9a-f]+:	66 90[ 	]+xchg   %ax,%ax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d81 1
a81 1
 [0-9a-f]+:	8b 83 bc ff ff ff[ 	]+mov    -0x44\(%ebx\),%eax
d83 5
a87 5
 [0-9a-f]+:	66 90[ 	]+xchg   %ax,%ax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d89 1
a89 1
 [0-9a-f]+:	8d 83 2c 00 00 00[ 	]+lea    0x2c\(%ebx\),%eax
d91 5
a95 5
 [0-9a-f]+:	ff 10[ 	]+call   \*\(%eax\)
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d97 1
a97 1
 [0-9a-f]+:	8b 83 fc ff ff ff[ 	]+mov    -0x4\(%ebx\),%eax
d99 5
a103 5
 [0-9a-f]+:	f7 d8[ 	]+neg    %eax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d105 1
a105 1
 [0-9a-f]+:	8b 83 c8 ff ff ff[ 	]+mov    -0x38\(%ebx\),%eax
d107 5
a111 5
 [0-9a-f]+:	66 90[ 	]+xchg   %ax,%ax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d113 1
a113 1
 [0-9a-f]+:	8b 83 e8 ff ff ff[ 	]+mov    -0x18\(%ebx\),%eax
d115 5
a119 5
 [0-9a-f]+:	66 90[ 	]+xchg   %ax,%ax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d121 1
a121 1
 [0-9a-f]+:	8d 83 14 00 00 00[ 	]+lea    0x14\(%ebx\),%eax
d123 5
a127 5
 [0-9a-f]+:	ff 10[ 	]+call   \*\(%eax\)
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d129 1
a129 1
 [0-9a-f]+:	8b 83 cc ff ff ff[ 	]+mov    -0x34\(%ebx\),%eax
d131 5
a135 5
 [0-9a-f]+:	f7 d8[ 	]+neg    %eax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d137 1
a137 1
 [0-9a-f]+:	8b 83 ec ff ff ff[ 	]+mov    -0x14\(%ebx\),%eax
d139 5
a143 5
 [0-9a-f]+:	66 90[ 	]+xchg   %ax,%ax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d145 1
a145 1
 [0-9a-f]+:	8b 83 e0 ff ff ff[ 	]+mov    -0x20\(%ebx\),%eax
d147 5
a151 5
 [0-9a-f]+:	66 90[ 	]+xchg   %ax,%ax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d153 1
a153 1
 [0-9a-f]+:	8d 83 1c 00 00 00[ 	]+lea    0x1c\(%ebx\),%eax
d155 4
a158 4
 [0-9a-f]+:	ff 10[ 	]+call   \*\(%eax\)
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	8d 90 20 00 00 00[ 	]+lea    0x20\(%eax\),%edx
d160 3
a162 3
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	8d 88 26 00 00 00[ 	]+lea    0x26\(%eax\),%ecx
d164 4
a167 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d169 1
a169 1
 [0-9a-f]+:	8d 90 40 00 00 00[ 	]+lea    0x40\(%eax\),%edx
d171 3
a173 3
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	8d 88 47 00 00 00[ 	]+lea    0x47\(%eax\),%ecx
d175 4
a178 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d180 1
a180 1
 [0-9a-f]+:	8d 90 60 00 00 00[ 	]+lea    0x60\(%eax\),%edx
d182 3
a184 3
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	8d 88 65 00 00 00[ 	]+lea    0x65\(%eax\),%ecx
d186 2
a187 2
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d189 4
a192 4
 [0-9a-f]+:	65 8b 0d 00 00 00 00[ 	]+mov    %gs:0x0,%ecx
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	2b 8b f8 ff ff ff[ 	]+sub    -0x8\(%ebx\),%ecx
d194 4
a197 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d199 4
a202 4
 [0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	2b 83 d0 ff ff ff[ 	]+sub    -0x30\(%ebx\),%eax
d204 4
a207 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d209 4
a212 4
 [0-9a-f]+:	65 8b 0d 00 00 00 00[ 	]+mov    %gs:0x0,%ecx
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	03 8b c4 ff ff ff[ 	]+add    -0x3c\(%ebx\),%ecx
d214 4
a217 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d219 4
a222 4
 [0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	03 83 d4 ff ff ff[ 	]+add    -0x2c\(%ebx\),%eax
d224 4
a227 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d229 4
a232 4
 [0-9a-f]+:	65 8b 0d 00 00 00 00[ 	]+mov    %gs:0x0,%ecx
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	2b 8b b0 ff ff ff[ 	]+sub    -0x50\(%ebx\),%ecx
d234 4
a237 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d239 4
a242 4
 [0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	2b 83 b8 ff ff ff[ 	]+sub    -0x48\(%ebx\),%eax
d244 4
a247 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d249 4
a252 4
 [0-9a-f]+:	65 8b 0d 00 00 00 00[ 	]+mov    %gs:0x0,%ecx
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	03 8b b4 ff ff ff[ 	]+add    -0x4c\(%ebx\),%ecx
d254 4
a257 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d259 4
a262 4
 [0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	03 83 bc ff ff ff[ 	]+add    -0x44\(%ebx\),%eax
d264 4
a267 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d269 4
a272 4
 [0-9a-f]+:	65 8b 0d 00 00 00 00[ 	]+mov    %gs:0x0,%ecx
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	2b 8b fc ff ff ff[ 	]+sub    -0x4\(%ebx\),%ecx
d274 4
a277 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d279 4
a282 4
 [0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	2b 83 e4 ff ff ff[ 	]+sub    -0x1c\(%ebx\),%eax
d284 4
a287 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d289 4
a292 4
 [0-9a-f]+:	65 8b 0d 00 00 00 00[ 	]+mov    %gs:0x0,%ecx
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	03 8b c8 ff ff ff[ 	]+add    -0x38\(%ebx\),%ecx
d294 4
a297 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d299 4
a302 4
 [0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	03 83 e8 ff ff ff[ 	]+add    -0x18\(%ebx\),%eax
d304 4
a307 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d309 4
a312 4
 [0-9a-f]+:	65 8b 0d 00 00 00 00[ 	]+mov    %gs:0x0,%ecx
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	2b 8b cc ff ff ff[ 	]+sub    -0x34\(%ebx\),%ecx
d314 4
a317 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d319 4
a322 4
 [0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	2b 83 dc ff ff ff[ 	]+sub    -0x24\(%ebx\),%eax
d324 4
a327 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d329 4
a332 4
 [0-9a-f]+:	65 8b 0d 00 00 00 00[ 	]+mov    %gs:0x0,%ecx
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	03 8b ec ff ff ff[ 	]+add    -0x14\(%ebx\),%ecx
d334 4
a337 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d339 4
a342 4
 [0-9a-f]+:	65 a1 00 00 00 00[ 	]+mov    %gs:0x0,%eax
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	03 83 e0 ff ff ff[ 	]+add    -0x20\(%ebx\),%eax
d344 4
a347 4
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d350 1
a350 1
 [0-9a-f]+:	8b 8b d8 ff ff ff[ 	]+mov    -0x28\(%ebx\),%ecx
d352 7
a358 7
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	65 8b 11[ 	]+mov    %gs:\(%ecx\),%edx
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d360 1
a360 1
 [0-9a-f]+:	8b 83 c0 ff ff ff[ 	]+mov    -0x40\(%ebx\),%eax
d362 7
a368 7
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	65 8b 10[ 	]+mov    %gs:\(%eax\),%edx
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d370 1
a370 1
 [0-9a-f]+:	8b 93 f0 ff ff ff[ 	]+mov    -0x10\(%ebx\),%edx
d372 7
a378 7
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	65 8b 12[ 	]+mov    %gs:\(%edx\),%edx
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d380 1
a380 1
 [0-9a-f]+:	8b 8b f4 ff ff ff[ 	]+mov    -0xc\(%ebx\),%ecx
d382 10
a391 10
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	65 8b 11[ 	]+mov    %gs:\(%ecx\),%edx
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	8b 5d fc[ 	]+mov    -0x4\(%ebp\),%ebx
 [0-9a-f]+:	c9[ 	]+leave *
 [0-9a-f]+:	c3[ 	]+ret *
@


1.3
log
@gas/testsuite/

2007-04-26  H.J. Lu  <hongjiu.lu@@intel.com>

	PR binutils/4430
	* gas/i386/amd.d: Updated.
	* gas/i386/immed32.d: Likewise.
	* gas/i386/intel.d: Likewise.
	* gas/i386/intel16.d: Likewise.
	* gas/i386/intelok.d: Likewise.
	* gas/i386/jump16.d: Likewise.
	* gas/i386/naked.d: Likewise.
	* gas/i386/opcode-suffix.d: Likewise.
	* gas/i386/opcode.d: Likewise.
	* gas/i386/prescott.d: Likewise.
	* gas/i386/ssemmx2.d: Likewise.
	* gas/i386/tlsd.d: Likewise.
	* gas/i386/tlspic.d: Likewise.
	* gas/i386/x86-64-addr32.d: Likewise.
	* gas/i386/x86-64-prescott.d: Likewise.
	* gas/i386/x86-64-rip.d: Likewise.
	* gas/i386/x86_64.d: Likewise.

ld/testsuite/

2007-04-26  H.J. Lu  <hongjiu.lu@@intel.com>

	PR binutils/4430
	* ld-i386/tlsbin.dd: Updated.
	* ld-i386/tlsbindesc.dd: Likewise
	* ld-i386/tlsdesc.dd: Likewise
	* ld-i386/tlsgdesc.dd: Likewise
	* ld-i386/tlsnopic.dd: Likewise
	* ld-i386/tlspic.dd: Likewise
	* ld-x86-64/tlsbin.dd: Likewise
	* ld-x86-64/tlsbindesc.dd: Likewise
	* ld-x86-64/tlsdesc.dd: Likewise
	* ld-x86-64/tlsgdesc.dd: Likewise
	* ld-x86-64/tlspic.dd: Likewise

opcodes/

2007-04-26  H.J. Lu  <hongjiu.lu@@intel.com>

	PR binutils/4430
	* i386-dis.c (print_displacement): New.
	(OP_E): Call print_displacement instead of print_operand_value
	to output displacement when either base or index exist.  Print
	the explicit zero displacement in 16bit mode.
@
text
@d4 1
a4 1
#ld: -shared -melf_i386
@


1.2
log
@bfd/

2006-06-30  H.J. Lu  <hongjiu.lu@@intel.com>

	* elf32-i386.c (elf_i386_relocate_section): Use xchg %ax,%ax
	instead of 2 nops.
	* elf64-x86-64.c (elf64_x86_64_relocate_section): Likewise.
	(elf64_x86_64_plt0_entry): Use nopl 0(%rax) instead of 4 nops.

ld/testsuite/

2006-06-30  H.J. Lu  <hongjiu.lu@@intel.com>

	* ld-i386/tlsbindesc.dd: Updated to expect xchg %ax,%ax instead
	of 2 nops.
	* ld-i386/tlsdesc.dd: Likewise.
	* ld-i386/tlsgdesc.dd: Likewise.
	* ld-x86-64/tlsbindesc.dd: Likewise.
	* ld-x86-64/tlsdesc.dd: Likewise.
	* ld-x86-64/tlsdesc.pd: Likewise.
	* ld-x86-64/tlsgdesc.dd: Likewise.
@
text
@d33 1
a33 1
 [0-9a-f]+:	8b 83 f8 ff ff ff[ 	]+mov    0xfffffff8\(%ebx\),%eax
d41 1
a41 1
 [0-9a-f]+:	8b 83 c4 ff ff ff[ 	]+mov    0xffffffc4\(%ebx\),%eax
d49 1
a49 1
 [0-9a-f]+:	8b 83 d4 ff ff ff[ 	]+mov    0xffffffd4\(%ebx\),%eax
d65 1
a65 1
 [0-9a-f]+:	8b 83 b0 ff ff ff[ 	]+mov    0xffffffb0\(%ebx\),%eax
d73 1
a73 1
 [0-9a-f]+:	8b 83 b4 ff ff ff[ 	]+mov    0xffffffb4\(%ebx\),%eax
d81 1
a81 1
 [0-9a-f]+:	8b 83 bc ff ff ff[ 	]+mov    0xffffffbc\(%ebx\),%eax
d97 1
a97 1
 [0-9a-f]+:	8b 83 fc ff ff ff[ 	]+mov    0xfffffffc\(%ebx\),%eax
d105 1
a105 1
 [0-9a-f]+:	8b 83 c8 ff ff ff[ 	]+mov    0xffffffc8\(%ebx\),%eax
d113 1
a113 1
 [0-9a-f]+:	8b 83 e8 ff ff ff[ 	]+mov    0xffffffe8\(%ebx\),%eax
d129 1
a129 1
 [0-9a-f]+:	8b 83 cc ff ff ff[ 	]+mov    0xffffffcc\(%ebx\),%eax
d137 1
a137 1
 [0-9a-f]+:	8b 83 ec ff ff ff[ 	]+mov    0xffffffec\(%ebx\),%eax
d145 1
a145 1
 [0-9a-f]+:	8b 83 e0 ff ff ff[ 	]+mov    0xffffffe0\(%ebx\),%eax
d192 1
a192 1
 [0-9a-f]+:	2b 8b f8 ff ff ff[ 	]+sub    0xfffffff8\(%ebx\),%ecx
d202 1
a202 1
 [0-9a-f]+:	2b 83 d0 ff ff ff[ 	]+sub    0xffffffd0\(%ebx\),%eax
d212 1
a212 1
 [0-9a-f]+:	03 8b c4 ff ff ff[ 	]+add    0xffffffc4\(%ebx\),%ecx
d222 1
a222 1
 [0-9a-f]+:	03 83 d4 ff ff ff[ 	]+add    0xffffffd4\(%ebx\),%eax
d232 1
a232 1
 [0-9a-f]+:	2b 8b b0 ff ff ff[ 	]+sub    0xffffffb0\(%ebx\),%ecx
d242 1
a242 1
 [0-9a-f]+:	2b 83 b8 ff ff ff[ 	]+sub    0xffffffb8\(%ebx\),%eax
d252 1
a252 1
 [0-9a-f]+:	03 8b b4 ff ff ff[ 	]+add    0xffffffb4\(%ebx\),%ecx
d262 1
a262 1
 [0-9a-f]+:	03 83 bc ff ff ff[ 	]+add    0xffffffbc\(%ebx\),%eax
d272 1
a272 1
 [0-9a-f]+:	2b 8b fc ff ff ff[ 	]+sub    0xfffffffc\(%ebx\),%ecx
d282 1
a282 1
 [0-9a-f]+:	2b 83 e4 ff ff ff[ 	]+sub    0xffffffe4\(%ebx\),%eax
d292 1
a292 1
 [0-9a-f]+:	03 8b c8 ff ff ff[ 	]+add    0xffffffc8\(%ebx\),%ecx
d302 1
a302 1
 [0-9a-f]+:	03 83 e8 ff ff ff[ 	]+add    0xffffffe8\(%ebx\),%eax
d312 1
a312 1
 [0-9a-f]+:	2b 8b cc ff ff ff[ 	]+sub    0xffffffcc\(%ebx\),%ecx
d322 1
a322 1
 [0-9a-f]+:	2b 83 dc ff ff ff[ 	]+sub    0xffffffdc\(%ebx\),%eax
d332 1
a332 1
 [0-9a-f]+:	03 8b ec ff ff ff[ 	]+add    0xffffffec\(%ebx\),%ecx
d342 1
a342 1
 [0-9a-f]+:	03 83 e0 ff ff ff[ 	]+add    0xffffffe0\(%ebx\),%eax
d350 1
a350 1
 [0-9a-f]+:	8b 8b d8 ff ff ff[ 	]+mov    0xffffffd8\(%ebx\),%ecx
d360 1
a360 1
 [0-9a-f]+:	8b 83 c0 ff ff ff[ 	]+mov    0xffffffc0\(%ebx\),%eax
d370 1
a370 1
 [0-9a-f]+:	8b 93 f0 ff ff ff[ 	]+mov    0xfffffff0\(%ebx\),%edx
d380 1
a380 1
 [0-9a-f]+:	8b 8b f4 ff ff ff[ 	]+mov    0xfffffff4\(%ebx\),%ecx
d389 1
a389 1
 [0-9a-f]+:	8b 5d fc[ 	]+mov    0xfffffffc\(%ebp\),%ebx
@


1.1
log
@include/elf/ChangeLog:
Introduce TLS descriptors for i386 and x86_64.
* common.h (DT_TLSDESC_GOT, DT_TLSDESC_PLT): New.
* i386.h (R_386_TLS_GOTDESC, R_386_TLS_DESC_CALL, R_386_TLS_DESC):
New.
* x86-64.h (R_X86_64_GOTPC32_TLSDESC, R_X86_64_TLSDESC_CALL,
R_X86_64_TLSDESC): New.
bfd/ChangeLog:
Introduce TLS descriptors for i386 and x86_64.
* reloc.c (BFD_RELOC_386_TLS_GOTDESC, BFD_RELOC_386_TLS_DESC,
BFD_RELOC_386_TLS_DESC_CALL, BFD_RELOC_X86_64_GOTPC32_TLSDESC,
BFD_RELOC_X86_64_TLSDESC, BFD_RELOC_X86_64_TLSDESC_CALL): New.
* libbfd.h, bfd-in2.h: Rebuilt.
* elf32-i386.c (elf_howto_table): New relocations.
(R_386_tls): Adjust.
(elf_i386_reloc_type_lookup): Map new relocations.
(GOT_TLS_GDESC, GOT_TLS_GD_BOTH_P): New macros.
(GOT_TLS_GD_P, GOT_TLS_GDESC_P, GOT_TLS_GD_ANY_P): New macros.
(struct elf_i386_link_hash_entry): Add tlsdesc_got field.
(struct elf_i386_obj_tdata): Add local_tlsdesc_gotent field.
(elf_i386_local_tlsdesc_gotent): New macro.
(struct elf_i386_link_hash_table): Add sgotplt_jump_table_size.
(elf_i386_compute_jump_table_size): New macro.
(link_hash_newfunc): Initialize tlsdesc_got.
(elf_i386_link_hash_table_create): Set sgotplt_jump_table_size.
(elf_i386_tls_transition): Handle R_386_TLS_GOTDESC and
R_386_TLS_DESC_CALL.
(elf_i386_check_relocs): Likewise.  Allocate space for
local_tlsdesc_gotent.
(elf_i386_gc_sweep_hook): Handle R_386_TLS_GOTDESC and
R_386_TLS_DESC_CALL.
(allocate_dynrelocs): Count function PLT relocations.  Reserve
space for TLS descriptors and relocations.
(elf_i386_size_dynamic_sections): Reserve space for TLS
descriptors and relocations.  Set up sgotplt_jump_table_size.
Don't zero reloc_count in srelplt.
(elf_i386_always_size_sections): New.  Set up _TLS_MODULE_BASE_.
(elf_i386_relocate_section): Handle R_386_TLS_GOTDESC and
R_386_TLS_DESC_CALL.
(elf_i386_finish_dynamic_symbol): Use GOT_TLS_GD_ANY_P.
(elf_backend_always_size_sections): Define.
* elf64-x86-64.c (x86_64_elf_howto): Add R_X86_64_GOTPC32_TLSDESC,
R_X86_64_TLSDESC, R_X86_64_TLSDESC_CALL.
(R_X86_64_standard): Adjust.
(x86_64_reloc_map): Map new relocs.
(elf64_x86_64_rtype_to_howto): New, split out of...
(elf64_x86_64_info_to_howto): ... this function, and...
(elf64_x86_64_reloc_type_lookup): ... use it to map elf_reloc_val.
(GOT_TLS_GDESC, GOT_TLS_GD_BOTH_P): New macros.
(GOT_TLS_GD_P, GOT_TLS_GDESC_P, GOT_TLS_GD_ANY_P): New macros.
(struct elf64_x86_64_link_hash_entry): Add tlsdesc_got field.
(struct elf64_x86_64_obj_tdata): Add local_tlsdesc_gotent field.
(elf64_x86_64_local_tlsdesc_gotent): New macro.
(struct elf64_x86_64_link_hash_table): Add tlsdesc_plt,
tlsdesc_got and sgotplt_jump_table_size fields.
(elf64_x86_64_compute_jump_table_size): New macro.
(link_hash_newfunc): Initialize tlsdesc_got.
(elf64_x86_64_link_hash_table_create): Initialize new fields.
(elf64_x86_64_tls_transition): Handle R_X86_64_GOTPC32_TLSDESC and
R_X86_64_TLSDESC_CALL.
(elf64_x86_64_check_relocs): Likewise.  Allocate space for
local_tlsdesc_gotent.
(elf64_x86_64_gc_sweep_hook): Handle R_X86_64_GOTPC32_TLSDESC and
R_X86_64_TLSDESC_CALL.
(allocate_dynrelocs): Count function PLT relocations.  Reserve
space for TLS descriptors and relocations.
(elf64_x86_64_size_dynamic_sections): Reserve space for TLS
descriptors and relocations.  Set up sgotplt_jump_table_size,
tlsdesc_plt and tlsdesc_got.  Make room for them.  Don't zero
reloc_count in srelplt.  Add dynamic entries for DT_TLSDESC_PLT
and DT_TLSDESC_GOT.
(elf64_x86_64_always_size_sections): New.  Set up
_TLS_MODULE_BASE_.
(elf64_x86_64_relocate_section): Handle R_386_TLS_GOTDESC and
R_386_TLS_DESC_CALL.
(elf64_x86_64_finish_dynamic_symbol): Use GOT_TLS_GD_ANY_P.
(elf64_x86_64_finish_dynamic_sections): Set DT_TLSDESC_PLT and
DT_TLSDESC_GOT.  Set up TLS descriptor lazy resolver PLT entry.
(elf_backend_always_size_sections): Define.
binutils/ChangeLog:
Introduce TLS descriptors for i386 and x86_64.
* readelf.c (get_dynamic_type): Handle DT_TLSDESC_GOT and
DT_TLSDESC_PLT.
gas/ChangeLog:
Introduce TLS descriptors for i386 and x86_64.
* config/tc-i386.c (tc_i386_fix_adjustable): Handle
BFD_RELOC_386_TLS_GOTDESC, BFD_RELOC_386_TLS_DESC_CALL,
BFD_RELOC_X86_64_GOTPC32_TLSDESC, BFD_RELOC_X86_64_TLSDESC_CALL.
(optimize_disp): Emit fix up for BFD_RELOC_386_TLS_DESC_CALL and
BFD_RELOC_X86_64_TLSDESC_CALL immediately, and clear the
displacement bits.
(build_modrm_byte): Set up zero modrm for TLS desc calls.
(lex_got): Handle @@tlsdesc and @@tlscall.
(md_apply_fix, tc_gen_reloc): Handle the new relocations.
ld/testsuite/ChangeLog:
Introduce TLS descriptors for i386 and x86_64.
* ld-i386/i386.exp: Run on x86_64-*-linux* and amd64-*-linux*.
Add new tests.
* ld-i386/pcrel16.d: Add -melf_i386.
* ld-i386/pcrel8.d: Likewise.
* ld-i386/tlsbindesc.dd: New.
* ld-i386/tlsbindesc.rd: New.
* ld-i386/tlsbindesc.s: New.
* ld-i386/tlsbindesc.sd: New.
* ld-i386/tlsbindesc.td: New.
* ld-i386/tlsdesc.dd: New.
* ld-i386/tlsdesc.rd: New.
* ld-i386/tlsdesc.s: New.
* ld-i386/tlsdesc.sd: New.
* ld-i386/tlsdesc.td: New.
* ld-i386/tlsgdesc.dd: New.
* ld-i386/tlsgdesc.rd: New.
* ld-i386/tlsgdesc.s: New.
* ld-x86-64/x86-64.exp: Run new tests.
* ld-x86-64/tlsbindesc.dd: New.
* ld-x86-64/tlsbindesc.rd: New.
* ld-x86-64/tlsbindesc.s: New.
* ld-x86-64/tlsbindesc.sd: New.
* ld-x86-64/tlsbindesc.td: New.
* ld-x86-64/tlsdesc.dd: New.
* ld-x86-64/tlsdesc.pd: New.
* ld-x86-64/tlsdesc.rd: New.
* ld-x86-64/tlsdesc.s: New.
* ld-x86-64/tlsdesc.sd: New.
* ld-x86-64/tlsdesc.td: New.
* ld-x86-64/tlsgdesc.dd: New.
* ld-x86-64/tlsgdesc.rd: New.
* ld-x86-64/tlsgdesc.s: New.
@
text
@d43 1
a43 2
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d51 1
a51 2
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d75 1
a75 2
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d83 1
a83 2
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d107 1
a107 2
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d115 1
a115 2
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d139 1
a139 2
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
d147 1
a147 2
 [0-9a-f]+:	90[ 	]+nop *
 [0-9a-f]+:	90[ 	]+nop *
@

