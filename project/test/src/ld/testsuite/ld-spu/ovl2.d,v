head	1.13;
access;
symbols
	binutils-2_24-branch:1.13.0.14
	binutils-2_24-branchpoint:1.13
	binutils-2_21_1:1.13
	binutils-2_23_2:1.13
	binutils-2_23_1:1.13
	binutils-2_23:1.13
	binutils-2_23-branch:1.13.0.12
	binutils-2_23-branchpoint:1.13
	binutils-2_22_branch:1.13.0.10
	binutils-2_22:1.13
	binutils-2_22-branch:1.13.0.8
	binutils-2_22-branchpoint:1.13
	binutils-2_21:1.13
	binutils-2_21-branch:1.13.0.6
	binutils-2_21-branchpoint:1.13
	binutils-2_20_1:1.13
	binutils-2_20:1.13
	binutils-arc-20081103-branch:1.10.0.6
	binutils-arc-20081103-branchpoint:1.10
	binutils-2_20-branch:1.13.0.4
	binutils-2_20-branchpoint:1.13
	dje-cgen-play1-branch:1.13.0.2
	dje-cgen-play1-branchpoint:1.13
	arc-20081103-branch:1.10.0.4
	arc-20081103-branchpoint:1.10
	binutils-2_19_1:1.10
	binutils-2_19:1.10
	binutils-2_19-branch:1.10.0.2
	binutils-2_19-branchpoint:1.10
	binutils-2_18:1.3
	binutils-2_18-branch:1.3.0.2
	binutils-2_18-branchpoint:1.3
	binutils_latest_snapshot:1.13;
locks; strict;
comment	@# @;


1.13
date	2009.05.14.15.26.36;	author uweigand;	state Exp;
branches;
next	1.12;

1.12
date	2009.05.14.04.30.03;	author amodra;	state Exp;
branches;
next	1.11;

1.11
date	2009.01.12.00.23.58;	author amodra;	state Exp;
branches;
next	1.10;

1.10
date	2008.06.19.16.15.17;	author amodra;	state Exp;
branches;
next	1.9;

1.9
date	2008.04.07.23.37.25;	author amodra;	state Exp;
branches;
next	1.8;

1.8
date	2008.03.14.04.43.08;	author amodra;	state Exp;
branches;
next	1.7;

1.7
date	2008.02.07.11.03.06;	author amodra;	state Exp;
branches;
next	1.6;

1.6
date	2008.01.28.05.59.24;	author amodra;	state Exp;
branches;
next	1.5;

1.5
date	2008.01.25.12.03.37;	author amodra;	state Exp;
branches;
next	1.4;

1.4
date	2007.09.25.08.27.39;	author amodra;	state Exp;
branches;
next	1.3;

1.3
date	2007.06.14.08.53.09;	author amodra;	state Exp;
branches;
next	1.2;

1.2
date	2007.04.05.07.01.53;	author amodra;	state Exp;
branches;
next	1.1;

1.1
date	2007.03.27.08.36.27;	author amodra;	state Exp;
branches;
next	;


desc
@@


1.13
log
@bfd/
	* elf32-spu.c (spu_elf_modify_segment_map): Move all PF_OVERLAY
	segments first amongst the program headers.

ld/testsuite/
	* ld-spu/icache.d: Update file offsets.
	* ld-spu/ovl.d: Likewise.
	* ld-spu/ovl1.d: Likewise.
@
text
@#source: ovl2.s
#ld: -N -T ovl2.lnk -T ovl.lnk --emit-relocs
#objdump: -D -r

.*elf32-spu

Disassembly of section \.text:

00000100 <_start>:
.*	brsl	\$0,.* <00000000\.ovl_call\.f1_a1>.*
.*SPU_REL16	f1_a1
.*	brsl	\$0,.* <00000000\.ovl_call\.setjmp>.*
.*SPU_REL16	setjmp
.*	br	100 <_start>	# 100
.*SPU_REL16	_start

0000010c <setjmp>:
.*	bi	\$0

00000110 <longjmp>:
.*	bi	\$0

.*00 00 03 40.*
.*SPU_ADDR32	\.ov_a1\+0x14
	\.\.\.
#...
00000320 <00000000\.ovl_call.f1_a1>:
.*	ila	\$78,1
.*	lnop
.*	ila	\$79,1040	# 410
.*	bra?	.* <__ovly_load>.*

00000330 <00000000\.ovl_call.setjmp>:
.*	ila	\$78,0
.*	lnop
.*	ila	\$79,268	# 10c
.*	bra?	.* <__ovly_load>.*

00000340 <00000000\.ovl_call\.13:5>:
.* 	ila	\$78,1
.* 	lnop
.* 	ila	\$79,1044	# 414
.* 	bra?	.* <__ovly_load>.*

00000350 <_SPUEAR_f1_a2>:
.*	ila	\$78,2
.*	lnop
.*	ila	\$79,1040	# 410
.*	bra?	.* <__ovly_load>.*

#00000318 <00000000\.ovl_call.f1_a1>:
#.*	bra?sl	\$75,.* <__ovly_load>.*
#.*00 04 04 00.*
#
#00000320 <00000000\.ovl_call.setjmp>:
#.*	bra?sl	\$75,.* <__ovly_load>.*
#.*00 00 01 0c.*
#
#00000328 <_SPUEAR_f1_a2>:
#.*	bra?sl	\$75,.* <__ovly_load>.*
#.*00 08 04 00.*

Disassembly of section \.ov_a1:

00000400 <00000001\.ovl_call\.14:6>:
.* 	ila	\$78,2
.* 	lnop
.* 	ila	\$79,1044	# 414
.* 	bra?	.* <__ovly_load>.*

00000410 <f1_a1>:
.*	bi	\$0
.*00 00 04 14.*
.*SPU_ADDR32	\.ov_a1\+0x14
.*00 00 04 20.*
.*SPU_ADDR32	\.ov_a1\+0x20
.*00 00 04 00.*
.*SPU_ADDR32	\.ov_a2\+0x14

Disassembly of section \.ov_a2:

00000400 <00000002\.ovl_call\.13:5>:
.*	ila	\$78,1
.*	lnop
.*	ila	\$79,1056	# 420
.*	bra?	.* <__ovly_load>.*

00000410 <f1_a2>:
.*	br	.* <longjmp>.*
.*SPU_REL16	longjmp
.*00 00 04 00.*
.*SPU_ADDR32	\.ov_a1\+0x20
.*00 00 04 1c.*
.*SPU_ADDR32	\.ov_a2\+0x1c
.*00 00 00 00.*

Disassembly of section \.data:

00000420 <_ovly_table-0x10>:
.*00 00 00 00 .*
.*00 00 00 01 .*
	\.\.\.
00000430 <_ovly_table>:
.*00 00 04 00 .*
.*00 00 00 20 .*
#.*00 00 03 10 .*
.*00 00 01 00 .*
.*00 00 00 01 .*
.*00 00 04 00 .*
.*00 00 00 20 .*
#.*00 00 03 20 .*
.*00 00 01 20 .*
.*00 00 00 01 .*

00000450 <_ovly_buf_table>:
.*00 00 00 00 .*

Disassembly of section \.toe:

00000460 <_EAR_>:
	\.\.\.

Disassembly of section .nonalloc:

00000000 <.nonalloc>:
.*00 00 04 14.*
.*SPU_ADDR32	\.ov_a1\+0x14
.*00 00 04 20.*
.*SPU_ADDR32	\.ov_a1\+0x20
.*00 00 04 14.*
.*SPU_ADDR32	\.ov_a2\+0x14
.*00 00 04 1c.*
.*SPU_ADDR32	\.ov_a2\+0x1c

Disassembly of section \.note\.spu_name:

.* <\.note\.spu_name>:
.*:	00 00 00 08 .*
.*:	00 00 00 0c .*
.*:	00 00 00 01 .*
.*:	53 50 55 4e .*
.*:	41 4d 45 00 .*
.*:	74 6d 70 64 .*
.*:	69 72 2f 64 .*
.*:	75 6d 70 00 .*
@


1.12
log
@bfd/
	* elf32-spu.c (spu_elf_size_stubs): Split out section placement to..
	(spu_elf_place_overlay_data): ..here.  New function.
	* elf32-spu.h (spu_elf_place_overlay_data): Declare.
ld/
	* emultempl/spuelf.em (spu_before_allocation): Call
	spu_elf_place_overlay_data.
ld/testsuite/
	* ld-spu/icache1.d: Update for changed overlay manager placement.
	* ld-spu/ovl.d: Likewise.
	* ld-spu/ovl2.d: Likewise.
@
text
@d107 1
a107 1
.*00 00 03 60 .*
d112 1
a112 1
.*00 00 03 80 .*
@


1.11
log
@bfd/
	* elf32-spu.c (struct spu_link_hash_table): Add init, line_size_log2,
	num_lines_log2.
	(struct got_entry): Add br_addr.
	(struct call_info): Add priority.
	(struct function_info): Add lr_store and sp_adjust.
	(spu_elf_setup): Init line_size_log2 and num_lines_log2.
	(spu_elf_find_overlays): For soft-icache, mark any section within cache
	area as an overlay, and check that no other overlays exist.  Look up
	icache overlay manager entry sym.
	(BRA_STUBS, BRA, BRASL): Define.
	(enum _stub_type): Replace ovl_stub with call_ovl_stub and br*_ovl_stub.
	(needs_ovl_stub): Adjust for soft-icache.  Return priority encoded
	in branch insn.
	(count_stub, build_stub): Support soft-icache.
	(build_spuear_stubs, process_stubs): Adjust build_stub call.
	(spu_elf_size_stubs): Size soft-icache stubs.
	(overlay_index): New function.
	(spu_elf_build_stubs): Make static.  Support soft-icache.
	(spu_elf_check_vma): Don't turn off auto_overlay if soft-icache.
	(find_function_stack_adjust): Save lr store and stack adjust insn
	offsets.
	(maybe_insert_function): Adjust find_function_stack_adjust call.
	(mark_functions_via_relocs): Retrieve priority.
	(remove_cycles): Only warn about pruned arcs when stack_analysis.
	(sort_calls): Sort by priority first.
	(mark_overlay_section): Ignore .ovl.init.
	(sum_stack): Only print when stack_analysis.
	(print_one_overlay_section): New function, extracted from..
	(spu_elf_auto_overlay): ..here.  Support soft-icache overlays.
	(spu_elf_stack_analysis): Only print when htab->stack_analysis.
	(spu_elf_final_link): Call spu_elf_stack_analysis for lrlive
	analysis.  Call spu_elf_build_stubs.
	(spu_elf_relocate_section): For soft-icache encode overlay index
	into addresses.
	(spu_elf_output_symbol_hook): Support soft-icache.
	(spu_elf_modify_program_headers: Likewise.
	* elf32-spu.h (struct spu_elf_params): Add lrlive_analysis.  Rename
	num_regions to num_lines.  Add line_size and max_branch.
	(enum _ovly_flavour): Add ovly_soft_icache.
	(spu_elf_build_stubs): Delete.
gas/
	* config/tc-spu.c (md_pseudo_table): Add "brinfo".
	(brinfo): New var.
	(md_assemble): Poke brinfo into branch instructions.
	(spu_brinfo): New function.
	(md_apply_fix): Don't assume insn fields start off at zero, mask
	them to remove possible brinfo.
ld/
	* emultempl/spuelf.em (params): Init new fields.
	(num_lines_set, line_size_set, icache_mgr, icache_mgr_stream): New vars.
	(spu_place_special_section): Adjust placement for soft-icache.  Pad
	soft-icache section to a fixed size.  Clear addr_tree.
	(spu_elf_load_ovl_mgr): Support soft-icache.  Map overlay manager
	sections a little more intelligently.
	(gld${EMULATION_NAME}_finish): Don't call spu_elf_build_stubs.
	(OPTION_SPU_NUM_LINES): Rename from OPTION_SPU_NUM_REGIONS.
	(OPTION_SPU_SOFT_ICACHE, OPTION_SPU_LINE_SIZE): Define.
	(OPTION_SPU_LRLIVE): Define.
	(PARSE_AND_LIST_LONGOPTS): Add new soft-icache options.
	(PARSE_AND_LIST_OPTIONS): Likewise.
	(PARSE_AND_LIST_ARGS_CASES): Handle them.
	* emultempl/spu_icache.S: Dummy file.
	* emultempl/spu_icache.o_c: Regenerate.
	* Makefile.am (eelf32_spu.c): Depend on spu_icache.o_c.
	(spu_icache.o_c): Add rule to build.
	(CLEANFILES): Zap temp files.
	(EXTRA_DIST): Add spu_icache.o_c.
	* Makefile.in: Regenerate.
ld/testsuite/
	* ld-spu/ovl.d: Allow for absolute branches in stubs.
	* ld-spu/ovl2.d: Likewise.
@
text
@d22 2
a23 1
.*00 00 01 40.*
d26 2
a27 14

#00000118 <00000000\.ovl_call.f1_a1>:
#.*	bra?sl	\$75,.* <__ovly_load>.*
#.*00 04 04 00.*
#
#00000120 <00000000\.ovl_call.setjmp>:
#.*	bra?sl	\$75,.* <__ovly_load>.*
#.*00 00 01 0c.*
#
#00000128 <_SPUEAR_f1_a2>:
#.*	bra?sl	\$75,.* <__ovly_load>.*
#.*00 08 04 00.*

00000120 <00000000\.ovl_call.f1_a1>:
d33 1
a33 1
00000130 <00000000\.ovl_call.setjmp>:
d39 1
a39 1
00000140 <00000000\.ovl_call\.13:5>:
d45 1
a45 1
00000150 <_SPUEAR_f1_a2>:
d51 12
a62 1
#...
@


1.10
log
@update
@
text
@d27 1
a27 1
#.*	brsl	\$75,.* <__ovly_load>.*
d31 1
a31 1
#.*	brsl	\$75,.* <__ovly_load>.*
d35 1
a35 1
#.*	brsl	\$75,.* <__ovly_load>.*
d42 1
a42 1
.*	br	.* <__ovly_load>.*
d48 1
a48 1
.*	br	.* <__ovly_load>.*
d54 1
a54 1
.* 	br	.* <__ovly_load>.*
d60 1
a60 1
.*	br	.* <__ovly_load>.*
d69 1
a69 1
.* 	br	.* <__ovly_load>.*
d86 1
a86 1
.*	br	.* <__ovly_load>.*
@


1.9
log
@	* ld-spu/ovl2.s: Extend to test jump table references and
	absolute _SPUEAR_ syms.
	* ld-spu/ovl2.d: Update.
@
text
@d107 1
a107 1
.*00 00 03 40 .*
d112 1
a112 1
.*00 00 03 60 .*
@


1.8
log
@	* ld-spu/ovl2.s: Make setjmp global.
	* ld-spu/ovl2.d: Update.
@
text
@d22 3
a24 1
.*
d41 1
a41 1
.*	ila	\$79,1024	# 400
d50 7
a56 1
00000140 <_SPUEAR_f1_a2>:
d59 1
a59 1
.*	ila	\$79,1024	# 400
d65 15
a79 3
00000400 <f1_a1>:
 400:	35 00 00 00 	bi	\$0
	\.\.\.
d82 15
a96 4
00000400 <f1_a2>:
 400:	32 7f a2 00 	br	110 <longjmp>	# 110
			400: SPU_REL16	longjmp
	\.\.\.
d99 3
a101 3
00000410 <_ovly_table-0x10>:
 410:	00 00 00 00 .*
 414:	00 00 00 01 .*
d103 11
a113 11
00000420 <_ovly_table>:
 420:	00 00 04 00 .*
 424:	00 00 00 10 .*
# 428:	00 00 03 10 .*
 428:	00 00 03 30 .*
 42c:	00 00 00 01 .*
 430:	00 00 04 00 .*
 434:	00 00 00 10 .*
# 438:	00 00 03 20 .*
 438:	00 00 03 40 .*
 43c:	00 00 00 01 .*
d115 2
a116 2
00000440 <_ovly_buf_table>:
 440:	00 00 00 00 .*
d120 1
a120 1
00000450 <_EAR_>:
d122 13
@


1.7
log
@	* ld-spu/ovl.d: Update.
	* ld-spu/ovl2.d: Update.
@
text
@d12 1
a12 1
.*	brsl	\$0,.* <00000000\.ovl_call\.10:4>.*
d28 1
a28 1
#00000120 <00000000\.ovl_call.10:4>:
d42 1
a42 1
00000130 <00000000\.ovl_call.10:4>:
@


1.6
log
@	Rewrite SPU overlay handling code.  Put overlay calls stubs in the
	overlays where possible.  Use a faster call stub, or optionally at
	compile time, a more compact stub.  Double size of _ovly_buf_table
	so that low bit of _ovly_table.buf can be used as a "present" bit.
	Reserve an extra _ovly_table entry for index zero.
@
text
@d69 2
a71 1
 41c:	00 00 00 01 	.*
d73 10
a82 10
 420:	00 00 04 00 	.*
 424:	00 00 00 10 	.*
# 428:	00 00 03 10 	.*
 428:	00 00 03 30 	.*
 42c:	00 00 00 02 	.*
 430:	00 00 04 00 	.*
 434:	00 00 00 10 	.*
# 438:	00 00 03 20 	.*
 438:	00 00 03 40 	.*
 43c:	00 00 00 02 	.*
d85 1
a85 1
	\.\.\.
@


1.5
log
@ld/
	* ld.texinfo (INSERT): Describe.
	* ldgram.y (ldgram_in_script, ldgram_had_equals): Delete.
	(INSERT_K, AFTER, BEFORE): Add as tokens.
	(ifile_p1): Handle INSERT statements.
	(saved_script_handle, force_make_executable): Move to..
	* ldmain.c: ..here.
	(previous_script_handle): New global var.
	* ldmain.h (saved_script_handle, force_make_executable): Declare.
	(previous_script_handle): Likewise.
	* ldlex.l (INSERT_K, AFTER, BEFORE): Add tokens.
	* lexsup.c (parge_args <-T>): Set previous_script_handle.
	* ldlang.c (lang_for_each_statement_worker): Handle insert statement.
	(map_input_to_output_sections, print_statement): Likewise.
	(lang_size_sections_1, lang_do_assignments_1): Likewise.
	(insert_os_after): New function, extracted from..
	(lang_insert_orphan): ..here.
	(process_insert_statements): New function.
	(lang_process): Call it.
	(lang_add_insert): New function.
	* ldlang.h (lang_insert_statement_enum): New.
	(lang_insert_statement_type): New.
	(lang_statement_union_type): Add insert_statement.
	(lang_add_insert): Declare.
ld/testsuite/
	* ld-spu/ovl.lnk: Delete overlay.
	* ld-spu/ovl1.lnk: New file.
	* ld-spu/ovl2.lnk: New file.
	* ld-spu/ovl.d: Update.
	* ld-spu/ovl2.d: Update.
@
text
@d10 6
a15 6
 100:	33 00 06 00 	brsl	\$0,130 <00000000\.ovl_call\.f1_a1>	# 130
			100: SPU_REL16	f1_a1
 104:	33 00 03 80 	brsl	\$0,120 <00000000\.ovl_call\.10:4>	# 120
			104: SPU_REL16	setjmp
 108:	32 7f ff 00 	br	100 <_start>	# 100
			108: SPU_REL16	_start
d18 1
a18 1
 10c:	35 00 00 00 	bi	\$0
d21 2
a22 2
 110:	35 00 00 00 	bi	\$0
	...
d24 23
a46 13
00000120 <00000000\.ovl_call.10:4>:
 120:	42 00 86 4f 	ila	\$79,268	# 10c
 124:	40 20 00 00 	nop	\$0
 128:	42 00 00 4e 	ila	\$78,0
 12c:	32 00 0a 80 	br	180 <__ovly_load>	# 180
			12c: SPU_REL16	__ovly_load

00000130 <00000000\.ovl_call.f1_a1>:
 130:	42 02 00 4f 	ila	\$79,1024	# 400
 134:	40 20 00 00 	nop	\$0
 138:	42 00 00 ce 	ila	\$78,1
 13c:	32 00 08 80 	br	180 <__ovly_load>	# 180
			13c: SPU_REL16	__ovly_load
d49 5
a53 5
 140:	42 02 00 4f 	ila	\$79,1024	# 400
 144:	40 20 00 00 	nop	\$0
 148:	42 00 01 4e 	ila	\$78,2
 14c:	32 00 06 80 	br	180 <__ovly_load>	# 180
			14c: SPU_REL16	__ovly_load
d68 2
a69 4
00000410 <_ovly_table>:
 410:	00 00 04 00 	.*
 414:	00 00 00 10 	.*
 418:	00 00 02 d0 	.*
d71 1
d74 11
a84 2
 428:	00 00 02 e0 	.*
 42c:	00 00 00 01 	.*
a85 2
00000430 <_ovly_buf_table>:
 430:	00 00 00 00 	.*
d88 1
a88 1
00000440 <_EAR_>:
@


1.4
log
@bfd/
	* elf32-spu.c (struct spu_link_hash_table): Add ovly_load_r_symndx.
	(spu_elf_size_stubs): Count stub relocs.
	(write_one_stub): Emit relocs on overlay call stubs.
ld/testsuite/
	* ld-spu/ovl.d: Adjust for stub relocs.
	* ld-spu/ovl2.d: Likewise.
@
text
@d2 1
a2 1
#ld: -N -T ovl.lnk --emit-relocs
@


1.3
log
@Update.
@
text
@d29 1
d36 1
d43 1
@


1.2
log
@bfd/
	* elf32-spu.c (spu_elf_output_symbol_hook): New function.
	(elf_backend_link_output_symbol_hook): Define.
ld/testsuite/
	* ld-spu/ovl2.d: Update.
@
text
@d58 1
a58 1
 418:	00 00 02 c0 	.*
d62 1
a62 1
 428:	00 00 02 d0 	.*
@


1.1
log
@	* ld-spu/spu.exp (embed_test): New.
	* ld-spu/ear.s: New.
	* ld-spu/ear.d: New.
	* ld-spu/embed.rd: New.
	* ld-spu/ovl2.s: New.
	* ld-spu/ovl2.d: New.
@
text
@d36 1
a36 1
00000140 <00000000\.ovl_call\._SPUEAR_f1_a2>:
d49 1
a49 1
00000400 <_SPUEAR_f1_a2>:
@

