head	1.34;
access;
symbols
	binutils-2_24-branch:1.34.0.2
	binutils-2_24-branchpoint:1.34
	binutils-2_21_1:1.26
	binutils-2_23_2:1.31.2.1
	binutils-2_23_1:1.31
	binutils-2_23:1.31
	binutils-2_23-branch:1.31.0.2
	binutils-2_23-branchpoint:1.31
	binutils-2_22_branch:1.28.2.1.0.2
	binutils-2_22:1.28.2.1
	binutils-2_22-branch:1.28.0.2
	binutils-2_22-branchpoint:1.28
	binutils-2_21:1.26
	binutils-2_21-branch:1.26.0.2
	binutils-2_21-branchpoint:1.26
	binutils-2_20_1:1.21.8.2
	binutils-2_20:1.21.8.2
	binutils-arc-20081103-branch:1.21.0.10
	binutils-arc-20081103-branchpoint:1.21
	binutils-2_20-branch:1.21.0.8
	binutils-2_20-branchpoint:1.21
	dje-cgen-play1-branch:1.21.0.6
	dje-cgen-play1-branchpoint:1.21
	arc-20081103-branch:1.21.0.4
	arc-20081103-branchpoint:1.21
	binutils-2_19_1:1.21
	binutils-2_19:1.21
	binutils-2_19-branch:1.21.0.2
	binutils-2_19-branchpoint:1.21
	binutils-2_18:1.19.2.1
	binutils-2_18-branch:1.19.0.2
	binutils-2_18-branchpoint:1.19
	binutils-csl-coldfire-4_1-32:1.16
	binutils-csl-sourcerygxx-4_1-32:1.16
	binutils-csl-innovasic-fido-3_4_4-33:1.16
	binutils-csl-sourcerygxx-3_4_4-32:1.10
	binutils-csl-coldfire-4_1-30:1.16
	binutils-csl-sourcerygxx-4_1-30:1.16
	binutils-csl-coldfire-4_1-28:1.16
	binutils-csl-sourcerygxx-4_1-29:1.16
	binutils-csl-sourcerygxx-4_1-28:1.16
	binutils-csl-arm-2006q3-27:1.16
	binutils-csl-sourcerygxx-4_1-27:1.16
	binutils-csl-arm-2006q3-26:1.16
	binutils-csl-sourcerygxx-4_1-26:1.16
	binutils-csl-sourcerygxx-4_1-25:1.16
	binutils-csl-sourcerygxx-4_1-24:1.16
	binutils-csl-sourcerygxx-4_1-23:1.16
	binutils-csl-sourcerygxx-4_1-21:1.16
	binutils-csl-arm-2006q3-21:1.16
	binutils-csl-sourcerygxx-4_1-22:1.16
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.16
	binutils-csl-sourcerygxx-4_1-20:1.16
	binutils-csl-arm-2006q3-19:1.16
	binutils-csl-sourcerygxx-4_1-19:1.16
	binutils-csl-sourcerygxx-4_1-18:1.16
	binutils-csl-renesas-4_1-9:1.16
	binutils-csl-sourcerygxx-3_4_4-25:1.10
	binutils-csl-renesas-4_1-8:1.16
	binutils-csl-renesas-4_1-7:1.16
	binutils-csl-renesas-4_1-6:1.16
	binutils-csl-sourcerygxx-4_1-17:1.16
	binutils-csl-sourcerygxx-4_1-14:1.16
	binutils-csl-sourcerygxx-4_1-15:1.16
	binutils-csl-sourcerygxx-4_1-13:1.16
	binutils-2_17:1.16
	binutils-csl-sourcerygxx-4_1-12:1.16
	binutils-csl-sourcerygxx-3_4_4-21:1.16
	binutils-csl-wrs-linux-3_4_4-24:1.10
	binutils-csl-wrs-linux-3_4_4-23:1.10
	binutils-csl-sourcerygxx-4_1-9:1.16
	binutils-csl-sourcerygxx-4_1-8:1.16
	binutils-csl-sourcerygxx-4_1-7:1.16
	binutils-csl-arm-2006q1-6:1.16
	binutils-csl-sourcerygxx-4_1-6:1.16
	binutils-csl-wrs-linux-3_4_4-22:1.10
	binutils-csl-coldfire-4_1-11:1.16
	binutils-csl-sourcerygxx-3_4_4-19:1.16
	binutils-csl-coldfire-4_1-10:1.16
	binutils-csl-sourcerygxx-4_1-5:1.16
	binutils-csl-sourcerygxx-4_1-4:1.16
	binutils-csl-wrs-linux-3_4_4-21:1.10
	binutils-csl-morpho-4_1-4:1.16
	binutils-csl-sourcerygxx-3_4_4-17:1.16
	binutils-csl-wrs-linux-3_4_4-20:1.10
	binutils-2_17-branch:1.16.0.4
	binutils-2_17-branchpoint:1.16
	binutils-csl-2_17-branch:1.16.0.2
	binutils-csl-2_17-branchpoint:1.16
	binutils-csl-gxxpro-3_4-branch:1.10.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.10
	binutils-2_16_1:1.10
	binutils-csl-arm-2005q1b:1.10
	binutils-2_16:1.10
	binutils-csl-arm-2005q1a:1.10
	binutils-csl-arm-2005q1-branch:1.10.0.4
	binutils-csl-arm-2005q1-branchpoint:1.10
	binutils-2_16-branch:1.10.0.2
	binutils-2_16-branchpoint:1.10
	csl-arm-2004-q3d:1.9
	csl-arm-2004-q3:1.9
	binutils-2_15:1.5.6.1
	binutils-2_15-branchpoint:1.5
	csl-arm-2004-q1a:1.6
	csl-arm-2004-q1:1.6
	binutils-2_15-branch:1.5.0.6
	cagney_bfdfile-20040213-branch:1.5.0.4
	cagney_bfdfile-20040213-branchpoint:1.5
	cagney_bigcore-20040122-branch:1.5.0.2
	cagney_bigcore-20040122-branchpoint:1.5
	csl-arm-2003-q4:1.5
	binutils-2_14:1.3
	binutils-2_14-branch:1.3.0.2
	binutils-2_14-branchpoint:1.3
	binutils_latest_snapshot:1.34;
locks; strict;
comment	@# @;


1.34
date	2013.04.22.03.11.40;	author amodra;	state Exp;
branches;
next	1.33;

1.33
date	2013.01.31.06.28.48;	author amodra;	state Exp;
branches;
next	1.32;

1.32
date	2012.10.29.09.25.53;	author amodra;	state Exp;
branches;
next	1.31;

1.31
date	2012.06.15.15.13.37;	author amodra;	state Exp;
branches
	1.31.2.1;
next	1.30;

1.30
date	2012.06.06.10.50.17;	author amodra;	state Exp;
branches;
next	1.29;

1.29
date	2011.10.10.09.05.41;	author amodra;	state Exp;
branches;
next	1.28;

1.28
date	2011.08.05.06.22.22;	author amodra;	state Exp;
branches
	1.28.2.1;
next	1.27;

1.27
date	2011.07.14.03.28.22;	author amodra;	state Exp;
branches;
next	1.26;

1.26
date	2010.07.20.14.08.32;	author amodra;	state Exp;
branches;
next	1.25;

1.25
date	2009.10.02.15.00.30;	author amodra;	state Exp;
branches;
next	1.24;

1.24
date	2009.09.24.15.56.51;	author hjl;	state Exp;
branches;
next	1.23;

1.23
date	2009.09.23.03.12.27;	author amodra;	state Exp;
branches;
next	1.22;

1.22
date	2009.09.21.11.51.02;	author amodra;	state Exp;
branches;
next	1.21;

1.21
date	2007.09.30.01.33.15;	author vapier;	state Exp;
branches
	1.21.8.1;
next	1.20;

1.20
date	2007.08.13.00.20.59;	author amodra;	state Exp;
branches;
next	1.19;

1.19
date	2007.02.13.01.53.03;	author amodra;	state Exp;
branches
	1.19.2.1;
next	1.18;

1.18
date	2006.08.17.08.21.06;	author amodra;	state Exp;
branches;
next	1.17;

1.17
date	2006.06.02.07.53.30;	author amodra;	state Exp;
branches;
next	1.16;

1.16
date	2006.02.02.22.53.46;	author hjl;	state Exp;
branches;
next	1.15;

1.15
date	2006.02.02.22.05.55;	author hjl;	state Exp;
branches;
next	1.14;

1.14
date	2005.08.17.10.04.32;	author amodra;	state Exp;
branches;
next	1.13;

1.13
date	2005.08.15.15.39.47;	author amodra;	state Exp;
branches;
next	1.12;

1.12
date	2005.07.08.06.22.04;	author amodra;	state Exp;
branches;
next	1.11;

1.11
date	2005.03.21.09.39.54;	author amodra;	state Exp;
branches;
next	1.10;

1.10
date	2005.03.05.11.56.47;	author amodra;	state Exp;
branches;
next	1.9;

1.9
date	2004.09.22.07.24.13;	author amodra;	state Exp;
branches;
next	1.8;

1.8
date	2004.05.11.17.08.36;	author jakub;	state Exp;
branches;
next	1.7;

1.7
date	2004.05.05.13.31.04;	author amodra;	state Exp;
branches;
next	1.6;

1.6
date	2004.03.26.06.14.18;	author amodra;	state Exp;
branches;
next	1.5;

1.5
date	2003.07.25.01.39.42;	author hjl;	state Exp;
branches
	1.5.6.1;
next	1.4;

1.4
date	2003.06.10.04.36.01;	author amodra;	state Exp;
branches;
next	1.3;

1.3
date	2003.02.18.12.54.56;	author amodra;	state Exp;
branches;
next	1.2;

1.2
date	2003.02.09.04.37.04;	author amodra;	state Exp;
branches;
next	1.1;

1.1
date	2003.02.04.14.52.11;	author amodra;	state Exp;
branches;
next	;

1.31.2.1
date	2013.01.21.13.48.52;	author amodra;	state Exp;
branches;
next	;

1.28.2.1
date	2011.10.25.02.58.57;	author amodra;	state Exp;
branches;
next	;

1.21.8.1
date	2009.09.21.11.55.17;	author amodra;	state Exp;
branches;
next	1.21.8.2;

1.21.8.2
date	2009.10.02.15.20.07;	author amodra;	state Exp;
branches;
next	;

1.19.2.1
date	2007.08.15.04.34.01;	author amodra;	state Exp;
branches;
next	;

1.5.6.1
date	2004.04.08.12.41.55;	author amodra;	state Exp;
branches;
next	;


desc
@@


1.34
log
@bfd/
	* elf64-ppc.c (ppc64_elf_check_relocs): Don't call
	create_linkage_sections here..
	(ppc64_elf_init_stub_bfd): ..do so here.  Return status.
	(create_linkage_sections): Move earlier in file.
	(ppc64_elf_setup_section_lists): Remove now useless htab->brlt test.
	* elf64-ppc.h (ppc64_elf_init_stub_bfd): Update proto.
ld/
	* emultempl/ppc64elf.em (ppc_create_output_section_statements):
	Check return from ppc64_elf_init_stub_bfd.
ld/testsuite/
	* ld-powerpc/tlsexe.d: Adjust.
	* ld-powerpc/tlsexe.r: Adjust.
	* ld-powerpc/tlsexetoc.d: Adjust.
	* ld-powerpc/tlsexetoc.r: Adjust.
	* ld-powerpc/tlsso.d: Adjust.
	* ld-powerpc/tlsso.r: Adjust.
	* ld-powerpc/tlstocso.d: Adjust.
	* ld-powerpc/tlstocso.r: Adjust.
@
text
@#source: tls.s
#source: tlslib.s
#as: -a64
#ld: 
#readelf: -WSsrl
#target: powerpc64*-*-*

There are [0-9]+ section headers, starting at offset 0x[0-9a-f]+:

Section Headers:
 +\[Nr\] Name +Type +Address +Off +Size +ES Flg Lk Inf Al
 +\[[ 0-9]+\] +NULL +0+ 0+ 0+ 0+ +0 +0 +0
 +\[[ 0-9]+\] \.interp +.*
 +\[[ 0-9]+\] \.hash +.*
 +\[[ 0-9]+\] \.dynsym +.*
 +\[[ 0-9]+\] \.dynstr +.*
 +\[[ 0-9]+\] \.rela\.dyn +.*
 +\[[ 0-9]+\] \.rela\.plt +.*
 +\[[ 0-9]+\] \.text +PROGBITS .* 0+128 0+ +AX +0 +0 +32
 +\[[ 0-9]+\] \.tdata +PROGBITS .* 0+38 0+ WAT +0 +0 +8
 +\[[ 0-9]+\] \.tbss +NOBITS .* 0+38 0+ WAT +0 +0 +8
 +\[[ 0-9]+\] \.dynamic +DYNAMIC .* 0+160 10 +WA +4 +0 +8
 +\[[ 0-9]+\] \.got +PROGBITS .* 0+30 08 +WA +0 +0 +8
 +\[[ 0-9]+\] \.plt +.*
 +\[[ 0-9]+\] \.shstrtab +.*
 +\[[ 0-9]+\] \.symtab +.*
 +\[[ 0-9]+\] \.strtab +.*
#...

Elf file type is EXEC \(Executable file\)
Entry point .*
There are [0-9]+ program headers, starting at offset [0-9]+

Program Headers:
 +Type +Offset +VirtAddr +PhysAddr +FileSiz +MemSiz +Flg Align
 +PHDR +0x0+40 0x0+10000040 0x0+10000040 0x0+150 0x0+150 R E 0x8
 +INTERP +0x0+190 0x0+10000190 0x0+10000190 0x0+11 0x0+11 R +0x1
 +\[Requesting program interpreter: .*\]
 +LOAD .* R E 0x10000
 +LOAD .* RW +0x10000
 +DYNAMIC .* RW +0x8
 +TLS .* 0x0+38 0x0+70 R +0x8

 Section to Segment mapping:
 +Segment Sections\.\.\.
 +0+ +
 +01 +\.interp 
 +02 +\.interp \.hash \.dynsym \.dynstr \.rela\.dyn \.rela\.plt \.text 
 +03 +\.tdata \.dynamic \.got \.plt 
 +04 +\.dynamic 
 +05 +\.tdata \.tbss 

Relocation section '\.rela\.dyn' at offset .* contains 3 entries:
 +Offset +Info +Type +Symbol's Value +Symbol's Name \+ Addend
[0-9a-f ]+R_PPC64_TPREL64 +0+ gd \+ 0
[0-9a-f ]+R_PPC64_DTPMOD64 +0+ ld \+ 0
[0-9a-f ]+R_PPC64_DTPREL64 +0+50 ld2 \+ 0

Relocation section '\.rela\.plt' at offset .* contains 1 entries:
 +Offset +Info +Type +Symbol's Value +Symbol's Name \+ Addend
[0-9a-f ]+R_PPC64_JMP_SLOT +0+ __tls_get_addr_opt \+ 0

Symbol table '\.dynsym' contains [0-9]+ entries:
 +Num: +Value +Size +Type +Bind +Vis +Ndx +Name
.* NOTYPE +LOCAL +DEFAULT +UND 
.* TLS +GLOBAL +DEFAULT +UND gd
.* TLS +GLOBAL +DEFAULT +UND ld
.* TLS +GLOBAL +DEFAULT +9 ld2
.* NOTYPE +GLOBAL +DEFAULT +12 __bss_start
.* FUNC +GLOBAL +DEFAULT +UND __tls_get_addr_opt
.* NOTYPE +GLOBAL +DEFAULT +11 _edata
.* NOTYPE +GLOBAL +DEFAULT +12 _end

Symbol table '\.symtab' contains [0-9]+ entries:
 +Num: +Value +Size +Type +Bind +Vis +Ndx +Name
.* 0+ +0 +NOTYPE +LOCAL +DEFAULT +UND 
.* SECTION +LOCAL +DEFAULT +1 
.* SECTION +LOCAL +DEFAULT +2 
.* SECTION +LOCAL +DEFAULT +3 
.* SECTION +LOCAL +DEFAULT +4 
.* SECTION +LOCAL +DEFAULT +5 
.* SECTION +LOCAL +DEFAULT +6 
.* SECTION +LOCAL +DEFAULT +7 
.* SECTION +LOCAL +DEFAULT +8 
.* SECTION +LOCAL +DEFAULT +9 
.* SECTION +LOCAL +DEFAULT +10 
.* SECTION +LOCAL +DEFAULT +11 
.* SECTION +LOCAL +DEFAULT +12 
.* FILE +LOCAL +DEFAULT +ABS .*
.* TLS +LOCAL +DEFAULT +8 gd4
.* TLS +LOCAL +DEFAULT +8 ld4
.* TLS +LOCAL +DEFAULT +8 ld5
.* TLS +LOCAL +DEFAULT +8 ld6
.* TLS +LOCAL +DEFAULT +8 ie4
.* TLS +LOCAL +DEFAULT +8 le4
.* TLS +LOCAL +DEFAULT +8 le5
.* (FUNC|NOTYPE) +LOCAL +DEFAULT +UND \.__tls_get_addr(|_opt)
.* FILE +LOCAL +DEFAULT +ABS .*
.* OBJECT +LOCAL +DEFAULT +10 _DYNAMIC
.* NOTYPE +LOCAL +DEFAULT +7 __glink_PLTresolve
.* NOTYPE +LOCAL +DEFAULT +7 .*\.plt_call\.__tls_get_addr(|_opt)
.* GLOBAL +DEFAULT +UND gd
.* GLOBAL +DEFAULT +9 le0
.* GLOBAL +DEFAULT +9 ld0
.* GLOBAL +DEFAULT +9 le1
.* GLOBAL +DEFAULT +UND ld
.* NOTYPE +GLOBAL +DEFAULT +7 _start
.* TLS +GLOBAL +DEFAULT +9 ld2
.* TLS +GLOBAL +DEFAULT +9 ld1
.* NOTYPE +GLOBAL +DEFAULT +12 __bss_start
.* FUNC +GLOBAL +DEFAULT +UND __tls_get_addr_opt
.* NOTYPE +GLOBAL +DEFAULT +11 _edata
.* NOTYPE +GLOBAL +DEFAULT +12 _end
.* TLS +GLOBAL +DEFAULT +9 gd0
.* TLS +GLOBAL +DEFAULT +9 ie0
@


1.33
log
@bfd/
	* elf64-ppc.c (ppc_stub_name): Trim off trailing "+0".
ld/testsuite/
	* ld-powerpc/tlsexe.d: Update for changed stub names.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexetoc.d: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.d: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlstocso.d: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
@
text
@a98 1
.* NOTYPE +LOCAL +DEFAULT +7 00000010\.plt_call\.__tls_get_addr(|_opt)
d101 1
@


1.32
log
@	* ld-powerpc/powerpc.exp: Modify emulation option passed to ld
	when little-endian.
	* ld-powerpc/apuinfo-nul.rd: Update for le output.
	* ld-powerpc/apuinfo.rd: Likewise.
	* ld-powerpc/plt1.d: Likewise.
	* ld-powerpc/relax.d: Likewise.
	* ld-powerpc/relaxr.d: Likewise.
	* ld-powerpc/sdadyn.d: Likewise.
	* ld-powerpc/tls.d: Likewise.
	* ld-powerpc/tls.g: Likewise.
	* ld-powerpc/tls.t: Likewise.
	* ld-powerpc/tls32.d: Likewise.
	* ld-powerpc/tls32.g: Likewise.
	* ld-powerpc/tls32.t: Likewise.
	* ld-powerpc/tlsexe.d: Likewise.
	* ld-powerpc/tlsexe.g: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexe.t: Likewise.
	* ld-powerpc/tlsexe32.d: Likewise.
	* ld-powerpc/tlsexe32.g: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsexe32.t: Likewise.
	* ld-powerpc/tlsexetoc.d: Likewise.
	* ld-powerpc/tlsexetoc.g: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsexetoc.t: Likewise.
	* ld-powerpc/tlsmark.d: Likewise.
	* ld-powerpc/tlsmark32.d: Likewise.
	* ld-powerpc/tlsopt1.d: Likewise.
	* ld-powerpc/tlsopt1_32.d: Likewise.
	* ld-powerpc/tlsopt2.d: Likewise.
	* ld-powerpc/tlsopt2_32.d: Likewise.
	* ld-powerpc/tlsopt3.d: Likewise.
	* ld-powerpc/tlsopt3_32.d: Likewise.
	* ld-powerpc/tlsopt4.d: Likewise.
	* ld-powerpc/tlsopt4_32.d: Likewise.
	* ld-powerpc/tlsso.d: Likewise.
	* ld-powerpc/tlsso.g: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso.t: Likewise.
	* ld-powerpc/tlsso32.d: Likewise.
	* ld-powerpc/tlsso32.g: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlsso32.t: Likewise.
	* ld-powerpc/tlstoc.d: Likewise.
	* ld-powerpc/tlstoc.g: Likewise.
	* ld-powerpc/tlstoc.t: Likewise.
	* ld-powerpc/tlstocso.d: Likewise.
	* ld-powerpc/tlstocso.g: Likewise.
	* ld-powerpc/tlstocso.t: Likewise.
	* ld-powerpc/tocopt.out: Likewise.
@
text
@d99 1
a100 1
.* NOTYPE +LOCAL +DEFAULT +7 00000010\.plt_call\.__tls_get_addr(|_opt)\+0
@


1.31
log
@ld/
	* ldlang.h (lang_output_section_statement_type): Add after_end field.
	(lang_abs_symbol_at_beginning_of, lang_abs_symbol_at_end_of): Delete.
	(section_for_dot): Declare.
	* ldlang.c (lang_size_sections_1): Correct comment.
	(current_section): Move earlier.
	(current_assign, prefer_next_section): New static vars.
	(lang_do_assignments_1): Add found_end param.  Detect _end
	assignment to set found_end.  Set os->after_end.  Set above statics.
	(lang_do_assignments): Adjust lang_do_assignments_1 call.  Init
	vars.
	(section_for_dot): New function.
	(lang_set_startof): Don't make an absolute symbol.
	(lang_abs_symbol_at_beginning_of, lang_abs_symbol_at_end_of): Delete.
	* ldexp.c (new_rel_from_abs): Use section_for_dot.
	* emultempl/lnk960.em (symbol_at_beginning_of): New function.
	(symbol_at_end_of): Likewise.
	(lnk960_after_allocation): Use them.
	* scripttempl/elf.sc: Precede OTHER_GOT_SYMBOLS with . = .; and
	likewise before __bss_start.

ld/testsuite/
Update far too many tests.
@
text
@d4 1
a4 1
#ld: -melf64ppc
@


1.31.2.1
log
@	PR 12549
	PR 14493
	PR 14567
	PR 14662
	PR 14758
	PR 14813
	PR 14904
	PR 14915
	PR 14926
	PR 14950
	PR 14962
	Apply mainline patches
@
text
@d4 1
a4 1
#ld: 
@


1.30
log
@bfd/
	* elflink.c (elf_link_input_bfd): Provide a file symbol for
	each input file with local syms, if the input lacks such.
	(bfd_elf_final_link): Add a file symbol to mark end of locals
	for which we can associate with input files.
	(struct elf_final_link_info): Add filesym_count field.
	(struct elf_outext_info): Add need_second_pass and second_pass.
	(elf_link_output_extsym): Detect symbols defined in the output
	file, emit them on second pass over locals.
ld/testsuite/
Update to suit added STT_FILE symbols.
@
text
@d69 1
a69 1
.* NOTYPE +GLOBAL +DEFAULT +ABS __bss_start
d71 2
a72 2
.* NOTYPE +GLOBAL +DEFAULT +ABS _edata
.* NOTYPE +GLOBAL +DEFAULT +ABS _end
d110 1
a110 1
.* NOTYPE +GLOBAL +DEFAULT +ABS __bss_start
d112 2
a113 2
.* NOTYPE +GLOBAL +DEFAULT +ABS _edata
.* NOTYPE +GLOBAL +DEFAULT +ABS _end
@


1.29
log
@ld/
	* emultempl/ppc64elf.em (ppc_add_stub_section): Align to 32 bytes.
ld/testsuite/
	* ld-powerpc/relbrlt.d: Update for stub alignment change.
	* ld-powerpc/tlsexe.g: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexetoc.g: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.g: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
@
text
@d89 1
d97 2
d100 2
a101 3
.* (NOTYPE +LOCAL +DEFAULT +7 00000010\.plt_call\.__tls_get_addr(|_opt)\+0|(FUNC|NOTYPE) +LOCAL +DEFAULT +UND \.__tls_get_addr(|_opt))
.* (NOTYPE +LOCAL +DEFAULT +7 __glink_PLTresolve|NOTYPE +LOCAL +DEFAULT +7 00000010\.plt_call\.__tls_get_addr(|_opt)\+0)
.* ((FUNC|NOTYPE) +LOCAL +DEFAULT +UND \.__tls_get_addr(|_opt)|NOTYPE +LOCAL +DEFAULT +7 __glink_PLTresolve)
@


1.28
log
@bfd/
	* elf64-ppc.c (maybe_strip_output): New function.
	(ppc64_elf_size_stubs): Use it to strip .branch_lt and .eh_frame.
ld/testsuite/
	* ld-powerpc/tlsexe.r: Update for stripped .branch_lt.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
@
text
@d19 1
a19 1
 +\[[ 0-9]+\] \.text +PROGBITS .* 0+128 0+ +AX +0 +0 +8
@


1.28.2.1
log
@ld/
	2011-10-10  Alan Modra  <amodra@@gmail.com>
	* emultempl/ppc64elf.em (ppc_add_stub_section): Align to 32 bytes.
ld/testsuite/
	2011-10-10  Alan Modra  <amodra@@gmail.com>
	* ld-powerpc/relbrlt.d: Update for stub alignment change.
	* ld-powerpc/tlsexe.g: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexetoc.g: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.g: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
@
text
@d19 1
a19 1
 +\[[ 0-9]+\] \.text +PROGBITS .* 0+128 0+ +AX +0 +0 +32
@


1.27
log
@bfd/
	* elf64-ppc.c (struct ppc_link_hash_table): Add plt_static_chain.
	(build_plt_stub): Add plt_static_chain param, don't load r11 if false.
	(build_tls_get_addr_stub): Likewise.
	(ppc_build_one_stub): Update calls to above.
	(ppc_size_one_stub): Adjust stub size.
	(ppc64_elf_size_stubs): Add plt_static_chain param, save to htab.
	* elf64-ppc.h (ppc64_elf_size_stubs): Update prototype.
ld/
	* emultempl/ppc64elf.em (plt_static_chain): New var.
	(gld${EMULATION_NAME}_after_allocation): Pass to ppc64_elf_size_stubs.
	(PARSE_AND_LIST_PROLOGUE, PARSE_AND_LIST_LONGOPTS,
	PARSE_AND_LIST_OPTIONS, PARSE_AND_LIST_ARGS_CASES): Handle
	--plt-static-chain and --no-plt-static-chain.
ld/testsuite/
	* ld-powerpc/tlsexe.d, * ld-powerpc/tlsexe.g. *ld-powerpc/tlsexe.r,
	* ld-powerpc/tlsexetoc.d, * ld-powerpc/tlsexetoc.g,
	* ld-powerpc/tlsexetoc.r, * ld-powerpc/tlsso.d,
	* ld-powerpc/tlstocso.d: Update for plt stub change.
@
text
@a22 1
 +\[[ 0-9]+\] \.branch_lt + PROGBITS .* 0+ 0+ +WA +0 +0 +8
d49 1
a49 1
 +03 +\.tdata \.dynamic (\.branch_lt |)\.got \.plt 
a88 1
.* SECTION +LOCAL +DEFAULT +13 
@


1.26
log
@include/elf/
	* internal.h (ELF_TBSS_SPECIAL): New macro, extracted from..
	(ELF_SECTION_SIZE): ..here.
	(ELF_SECTION_IN_SEGMENT_1): Add "strict" arg.
	(ELF_SECTION_IN_SEGMENT_STRICT): New macro.
bfd/
	* elf.c (assign_file_positions_for_load_sections): Check that
	zero size sections are allocated in segments too.
	(assign_file_positions_for_non_load_sections): Warn if zero
	size alloc sections are found here.
	(copy_elf_program_header): Don't drop zero size sections from
	segment map.
	(copy_private_bfd_data): Check for changes in zero size sections.
binutils/
	* readelf.c (process_program_headers): Don't ignore all zero size
	sections.
ld/testsuite/
	* ld-powerpc/tlsexe.r: Update.
	* ld-powerpc/tlsexetoc.r: Update.
	* ld-powerpc/tlsso.r: Update.
	* ld-powerpc/tlstocso.r: Update.
@
text
@d19 1
a19 1
 +\[[ 0-9]+\] \.text +PROGBITS .* 0+130 0+ +AX +0 +0 +8
@


1.25
log
@ld/
	* emultempl/ppc32elf.em (emit_stub_syms): Init to -1.
	(ppc_after_open): Set emit_stubs_syms by default when shared.
	(OPTION_NO_STUBSYMS): Define.
	(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS,
	PARSE_AND_LIST_ARGS_CASES): Handle --no-emit-stub-syms.
	* emultempl/ppc64elf.em (emit_stub_syms): Init to -1.
	(gld${EMULATION_NAME}_finish): Set emit_stubs_syms by default.
	(OPTION_NO_STUBSYMS): Define.
	(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS,
	PARSE_AND_LIST_ARGS_CASES): Handle --no-emit-stub-syms.
ld/testsuite/
	* ld-powerpc/tlsexe.d: Update.
	* ld-powerpc/tlsexe.r: Update.
	* ld-powerpc/tlsexetoc.d: Update.
	* ld-powerpc/tlsexetoc.r: Update.
	* ld-powerpc/tlsso.d: Update.
	* ld-powerpc/tlsso.r: Update.
	* ld-powerpc/tlstocso.d: Update.
	* ld-powerpc/tlstocso.r: Update.
@
text
@d50 1
a50 1
 +03 +\.tdata \.dynamic \.got \.plt 
@


1.24
log
@bfd/

2009-09-24  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/10630
	* elflink.c (elf_link_output_extsym): Turn off visibility on
	local symbol.
	(bfd_elf_final_link): Turn off visibility on dynamic local
	symbol.

ld/testsuite/

2009-09-24  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/10630
	* ld-alpha/tlsbin.rd: Remove HIDDEN/.hidden on local symbols.
	* ld-alpha/tlsbinr.rd: Likewise.
	* ld-alpha/tlspic.rd: Likewise.
	* ld-cris/libdso-2.d: Likewise.
	* ld-cris/locref1.d: Likewise.
	* ld-cris/locref2.d: Likewise.
	* ld-cris/tls-e-20a.d: Likewise.
	* ld-cris/tls-e-20.d: Likewise.
	* ld-cris/tls-e-80.d: Likewise.
	* ld-cris/tls-gc-68.d: Likewise.
	* ld-cris/tls-gc-69.d: Likewise.
	* ld-cris/tls-gc-70.d: Likewise.
	* ld-cris/tls-gc-75.d: Likewise.
	* ld-cris/tls-gc-76.d: Likewise.
	* ld-cris/tls-gc-79.d: Likewise.
	* ld-cris/tls-gd-1h.d: Likewise.
	* ld-cris/tls-gd-2h.d: Likewise.
	* ld-cris/tls-ld-4.d: Likewise.
	* ld-cris/tls-ld-5.d: Likewise.
	* ld-cris/tls-ld-6.d: Likewise.
	* ld-cris/tls-ld-7.d: Likewise.
	* ld-cris/tls-ldgd-14.d: Likewise.
	* ld-cris/tls-ldgd-15.d: Likewise.
	* ld-cris/tls-local-63.d: Likewise.
	* ld-cris/tls-local-64.d: Likewise.
	* ld-elf/pr9676.rd: Likewise.
	* ld-elf/pr9679.rd: Likewise.
	* ld-elfvsb/hidden2.d: Likewise.
	* ld-i386/tlsbindesc.rd: Likewise.
	* ld-i386/tlsbin.rd: Likewise.
	* ld-i386/tlsdesc.rd: Likewise.
	* ld-i386/tlsgdesc.rd: Likewise.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlspic.rd: Likewise.
	* ld-ia64/tlsbin.rd: Likewise.
	* ld-ia64/tlspic.rd: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-sparc/gotop32.rd: Likewise.
	* ld-sparc/gotop64.rd: Likewise.
	* ld-sparc/tlssunbin32.rd: Likewise.
	* ld-sparc/tlssunbin64.rd: Likewise.
	* ld-sparc/tlssunnopic32.rd: Likewise.
	* ld-sparc/tlssunnopic64.rd: Likewise.
	* ld-sparc/tlssunpic32.rd: Likewise.
	* ld-sparc/tlssunpic64.rd: Likewise.
	* ld-x86-64/tlsbindesc.rd: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-x86-64/tlsdesc.rd: Likewise.
	* ld-x86-64/tlsgdesc.rd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
	* ld-xtensa/tlsbin.rd: Likewise.
	* ld-xtensa/tlspic.rd: Likewise.

	* ld-elf/local1.d: New.
	* ld-elf/local1.map: Likewise.
	* ld-elf/local1.s: Likewise.
	* ld-ia64/local1.d: Likewise.
	* ld-ia64/local1.map: Likewise.
	* ld-ia64/local1.s: Likewise.
@
text
@d99 3
a101 1
.* (FUNC|NOTYPE) +LOCAL +DEFAULT +UND \.__tls_get_addr(|_opt)
@


1.23
log
@Tolerate some whitespace differences in readelf output.
@
text
@d98 1
a98 1
.* OBJECT +LOCAL +HIDDEN +10 _DYNAMIC
@


1.22
log
@include/elf/
	* ppc.h (DT_PPC_TLSOPT): Define.
	* ppc64.h (DT_PPC64_TLSOPT): Define.
bfd/
	* elf32-ppc.c (TLS_GET_ADDR_GLINK_SIZE): Define.
	(ADD_3_12_2, BEQLR, CMPWI_11_0, LWZ_11_3, LWZ_12_3): Define.
	(MR_0_3, MR_3_0): Define.
	(struct ppc_elf_link_hash_table): Add no_tls_get_addr_opt.
	(ppc_elf_select_plt_layout): Save emit_stub_syms param earlier.
	(ppc_elf_tls_setup): Add no_tls_get_addr_opt param and save to hash
	table.  Check for presense of __tls_get_addr_opt
	(allocate_dynrelocs): Increase glink entry size for __tls_get_addr.
	(ppc_elf_size_dynamic_sections): Add DT_PPC_TLS_OPT tag.
	(write_glink_stub): Add param p.
	(ppc_elf_relocate_section): Adjust write_glink_stub call.
	(ppc_elf_finish_dynamic_symbol): Emit special glink call stub for
	__tls_get_addr.
	* elf32-ppc.h (ppc_elf_tls_setup): Update prototype.
	* elf64-ppc.c (struct ppc_link_hash_table): Add no_tls_get_addr_opt.
	(ppc64_elf_tls_setup): Add no_tls_get_addr_opt param and save to hash
	table.  Check for presense of __tls_get_addr_opt.
	(ppc64_elf_size_dynamic_sections): Add DT_PPC64_TLS_OPT tag.
	(LD_R11_0R3, LD_R12_0R3, MR_R0_R3, CMPDI_R11_0, ADD_R3_R12_R13,
	BEQLR, MR_R3_R0, MFLR_R11, STD_R11_0R1, BCTRL, LD_R11_0R1,
	LD_R2_0R1, MTLR_R11): Define.
	(build_tls_get_addr_stub): New function.
	(ppc_build_one_stub): Call it.
	(ppc_size_one_stub): Add extra size for __tls_get_addr stub.
	(ppc64_elf_relocate_section): Don't change nop to ld 2,40(1) for
	__tls_get_addr plt call.
	* elf64-ppc.h (ppc64_elf_tls_setup): Update prototype.
binutils/
	* readelf.c (get_ppc_dynamic_type): Add TLSOPT.
	(get_ppc64_dynamic_type): Likewise.
ld/
	* emultempl/ppc32elf.em (no_tls_get_addr_opt): New var.
	(ppc_before_allocation): Pass to ppc_elf_tls_setup.
	(OPTION_NO_TLS_GET_ADDR_OPT): Define.  Redefine other options in
	terms of previous option.
	(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS): Add
	--no-tls-get-addr-optimize.
	(PARSE_AND_LIST_ARGS_CASES): Handle it.
	* emultempl/ppc64elf.em (no_tls_get_addr_opt): New var.
	(ppc_before_allocation): Pass to ppc64_elf_tls_setup.
	(OPTION_NO_TLS_GET_ADDR_OPT): Define.
	(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS): Add
	--no-tls-get-addr-optimize.
	(PARSE_AND_LIST_ARGS_CASES): Handle it.
ld/testsuite/
	* ld-powerpc/tlslib.s: Delete dot-symbol entry syms.  Add
	__tls_get_addr_opt.
	* ld-powerpc/tlslib32.s: Add __tls_get_addr_opt.
	* ld-powerpc/oldtlslib.s: New file, old-abi version of tlslib.s.
	* ld-powerpc/powerpc.exp: Build old-abi library and use it in
	two new link tests.
	* ld-powerpc/tlsexe.d: Update for new __tls_get_addr stub.
	* ld-powerpc/tlsexe.g, * ld-powerpc/tlsexe.r, *ld-powerpc/tlsexe32.d,
	* ld-powerpc/tlsexe32.g, * ld-powerpc/tlsexe32.r,
	* ld-powerpc/tlsexetoc.d, * ld-powerpc/tlsexetoc.g,
	* ld-powerpc/tlsexetoc.r: Likewise.
@
text
@d65 1
a65 1
 +Num: +Value +Size Type +Bind +Vis +Ndx Name
d67 7
a73 7
.* TLS +GLOBAL DEFAULT +UND gd
.* TLS +GLOBAL DEFAULT +UND ld
.* TLS +GLOBAL DEFAULT +9 ld2
.* NOTYPE +GLOBAL DEFAULT +ABS __bss_start
.* FUNC +GLOBAL DEFAULT +UND __tls_get_addr_opt
.* NOTYPE +GLOBAL DEFAULT +ABS _edata
.* NOTYPE +GLOBAL DEFAULT +ABS _end
d76 15
a90 15
 +Num: +Value +Size Type +Bind +Vis +Ndx Name
.* 0+ +0 NOTYPE +LOCAL +DEFAULT +UND 
.* SECTION LOCAL +DEFAULT +1 
.* SECTION LOCAL +DEFAULT +2 
.* SECTION LOCAL +DEFAULT +3 
.* SECTION LOCAL +DEFAULT +4 
.* SECTION LOCAL +DEFAULT +5 
.* SECTION LOCAL +DEFAULT +6 
.* SECTION LOCAL +DEFAULT +7 
.* SECTION LOCAL +DEFAULT +8 
.* SECTION LOCAL +DEFAULT +9 
.* SECTION LOCAL +DEFAULT +10 
.* SECTION LOCAL +DEFAULT +11 
.* SECTION LOCAL +DEFAULT +12 
.* SECTION LOCAL +DEFAULT +13 
d100 9
a108 9
.* GLOBAL DEFAULT +UND gd
.* GLOBAL DEFAULT +9 le0
.* GLOBAL DEFAULT +9 ld0
.* GLOBAL DEFAULT +9 le1
.* GLOBAL DEFAULT +UND ld
.* NOTYPE +GLOBAL DEFAULT +7 _start
.* TLS +GLOBAL DEFAULT +9 ld2
.* TLS +GLOBAL DEFAULT +9 ld1
.* NOTYPE +GLOBAL DEFAULT +ABS __bss_start
d110 4
a113 4
.* NOTYPE +GLOBAL DEFAULT +ABS _edata
.* NOTYPE +GLOBAL DEFAULT +ABS _end
.* TLS +GLOBAL DEFAULT +9 gd0
.* TLS +GLOBAL DEFAULT +9 ie0
@


1.21
log
@2007-09-29  Mike Frysinger  <vapier@@gentoo.org>

	* ld-alpha/tlsbin.rd: Use [0-9]+ to match section header count and
	0x[0-9a-f]+ to match section header offset.  Match section indexes
	with \[[ 0-9]+\].  Use [0-9]+ to match program header count and
	0x[0-9a-f]+ to match program header offset.  Match .dynsym and
	.symtab entry counts with [0-9]+.
	* ld-alpha/tlsbinr.rd: Likewise.
	* ld-alpha/tlspic.rd: Likewise.
	* ld-i386/tlsbin.rd: Likewise.
	* ld-i386/tlsbindesc.rd: Likewise.
	* ld-i386/tlsdesc.rd: Likewise.
	* ld-i386/tlsgdesc.rd: Likewise.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlspic.rd: Likewise.
	* ld-ia64/tlsbin.rd: Likewise.
	* ld-ia64/tlspic.rd: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-sparc/tlssunbin32.rd: Likewise.
	* ld-sparc/tlssunbin64.rd: Likewise.
	* ld-sparc/tlssunnopic32.rd: Likewise.
	* ld-sparc/tlssunnopic64.rd: Likewise.
	* ld-sparc/tlssunpic32.rd: Likewise.
	* ld-sparc/tlssunpic64.rd: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-x86-64/tlsbindesc.rd: Likewise.
	* ld-x86-64/tlsdesc.rd: Likewise.
	* ld-x86-64/tlsgdesc.rd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
@
text
@d19 1
a19 1
 +\[[ 0-9]+\] \.text +PROGBITS .* 0+f8 0+ +AX +0 +0 +8
d22 1
a22 1
 +\[[ 0-9]+\] \.dynamic +DYNAMIC .* 0+150 10 +WA +4 +0 +8
d62 1
a62 1
[0-9a-f ]+R_PPC64_JMP_SLOT +0+ __tls_get_addr \+ 0
a67 1
.* FUNC +GLOBAL DEFAULT +UND __tls_get_addr
d71 1
d99 1
a99 1
.* FUNC +LOCAL +DEFAULT +UND \.__tls_get_addr
a101 1
.* GLOBAL DEFAULT +UND __tls_get_addr
d109 1
@


1.21.8.1
log
@include/elf/
	* ppc.h (DT_PPC_TLSOPT): Define.
	* ppc64.h (DT_PPC64_TLSOPT): Define.
bfd/
	* elf32-ppc.c (TLS_GET_ADDR_GLINK_SIZE): Define.
	(ADD_3_12_2, BEQLR, CMPWI_11_0, LWZ_11_3, LWZ_12_3): Define.
	(MR_0_3, MR_3_0): Define.
	(struct ppc_elf_link_hash_table): Add no_tls_get_addr_opt.
	(ppc_elf_select_plt_layout): Save emit_stub_syms param earlier.
	(ppc_elf_tls_setup): Add no_tls_get_addr_opt param and save to hash
	table.  Check for presense of __tls_get_addr_opt
	(allocate_dynrelocs): Increase glink entry size for __tls_get_addr.
	(ppc_elf_size_dynamic_sections): Add DT_PPC_TLS_OPT tag.
	(write_glink_stub): Add param p.
	(ppc_elf_relocate_section): Adjust write_glink_stub call.
	(ppc_elf_finish_dynamic_symbol): Emit special glink call stub for
	__tls_get_addr.
	* elf32-ppc.h (ppc_elf_tls_setup): Update prototype.
	* elf64-ppc.c (struct ppc_link_hash_table): Add no_tls_get_addr_opt.
	(ppc64_elf_tls_setup): Add no_tls_get_addr_opt param and save to hash
	table.  Check for presense of __tls_get_addr_opt.
	(ppc64_elf_size_dynamic_sections): Add DT_PPC64_TLS_OPT tag.
	(LD_R11_0R3, LD_R12_0R3, MR_R0_R3, CMPDI_R11_0, ADD_R3_R12_R13,
	BEQLR, MR_R3_R0, MFLR_R11, STD_R11_0R1, BCTRL, LD_R11_0R1,
	LD_R2_0R1, MTLR_R11): Define.
	(build_tls_get_addr_stub): New function.
	(ppc_build_one_stub): Call it.
	(ppc_size_one_stub): Add extra size for __tls_get_addr stub.
	(ppc64_elf_relocate_section): Don't change nop to ld 2,40(1) for
	__tls_get_addr plt call.
	* elf64-ppc.h (ppc64_elf_tls_setup): Update prototype.
binutils/
	* readelf.c (get_ppc_dynamic_type): Add TLSOPT.
	(get_ppc64_dynamic_type): Likewise.
ld/
	* emultempl/ppc32elf.em (no_tls_get_addr_opt): New var.
	(ppc_before_allocation): Pass to ppc_elf_tls_setup.
	(OPTION_NO_TLS_GET_ADDR_OPT): Define.  Redefine other options in
	terms of previous option.
	(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS): Add
	--no-tls-get-addr-optimize.
	(PARSE_AND_LIST_ARGS_CASES): Handle it.
	* emultempl/ppc64elf.em (no_tls_get_addr_opt): New var.
	(ppc_before_allocation): Pass to ppc64_elf_tls_setup.
	(OPTION_NO_TLS_GET_ADDR_OPT): Define.
	(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS): Add
	--no-tls-get-addr-optimize.
	(PARSE_AND_LIST_ARGS_CASES): Handle it.
ld/testsuite/
	* ld-powerpc/tlslib.s: Delete dot-symbol entry syms.  Add
	__tls_get_addr_opt.
	* ld-powerpc/tlslib32.s: Add __tls_get_addr_opt.
	* ld-powerpc/oldtlslib.s: New file, old-abi version of tlslib.s.
	* ld-powerpc/powerpc.exp: Build old-abi library and use it in
	two new link tests.
	* ld-powerpc/tlsexe.d: Update for new __tls_get_addr stub.
	* ld-powerpc/tlsexe.g, * ld-powerpc/tlsexe.r, *ld-powerpc/tlsexe32.d,
	* ld-powerpc/tlsexe32.g, * ld-powerpc/tlsexe32.r,
	* ld-powerpc/tlsexetoc.d, * ld-powerpc/tlsexetoc.g,
	* ld-powerpc/tlsexetoc.r: Likewise.
@
text
@d19 1
a19 1
 +\[[ 0-9]+\] \.text +PROGBITS .* 0+130 0+ +AX +0 +0 +8
d22 1
a22 1
 +\[[ 0-9]+\] \.dynamic +DYNAMIC .* 0+160 10 +WA +4 +0 +8
d62 1
a62 1
[0-9a-f ]+R_PPC64_JMP_SLOT +0+ __tls_get_addr_opt \+ 0
d68 1
a71 1
.* FUNC +GLOBAL DEFAULT +UND __tls_get_addr_opt
d99 1
a99 1
.* (FUNC|NOTYPE) +LOCAL +DEFAULT +UND \.__tls_get_addr(|_opt)
d102 1
a109 1
.* FUNC +GLOBAL +DEFAULT +UND __tls_get_addr_opt
@


1.21.8.2
log
@ld/
	* emultempl/ppc32elf.em (emit_stub_syms): Init to -1.
	(ppc_after_open): Set emit_stubs_syms by default when shared.
	(OPTION_NO_STUBSYMS): Define.
	(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS,
	PARSE_AND_LIST_ARGS_CASES): Handle --no-emit-stub-syms.
	* emultempl/ppc64elf.em (emit_stub_syms): Init to -1.
	(gld${EMULATION_NAME}_finish): Set emit_stubs_syms by default.
	(OPTION_NO_STUBSYMS): Define.
	(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS,
	PARSE_AND_LIST_ARGS_CASES): Handle --no-emit-stub-syms.
ld/testsuite/
	* ld-powerpc/tlsexe.d: Update.
	* ld-powerpc/tlsexe.r: Update.
	* ld-powerpc/tlsexetoc.d: Update.
	* ld-powerpc/tlsexetoc.r: Update.
	* ld-powerpc/tlsso.d: Update.
	* ld-powerpc/tlsso.r: Update.
	* ld-powerpc/tlstocso.d: Update.
	* ld-powerpc/tlstocso.r: Update.
@
text
@d99 1
a99 3
.* (NOTYPE +LOCAL +DEFAULT +7 00000010\.plt_call\.__tls_get_addr(|_opt)\+0|(FUNC|NOTYPE) +LOCAL +DEFAULT +UND \.__tls_get_addr(|_opt))
.* (NOTYPE +LOCAL +DEFAULT +7 __glink_PLTresolve|NOTYPE +LOCAL +DEFAULT +7 00000010\.plt_call\.__tls_get_addr(|_opt)\+0)
.* ((FUNC|NOTYPE) +LOCAL +DEFAULT +UND \.__tls_get_addr(|_opt)|NOTYPE +LOCAL +DEFAULT +7 __glink_PLTresolve)
@


1.20
log
@bfd/
	* elf64-ppc.c (ADDI_R12_R12, LD_R11_0R2, LD_R2_0R2): Define.
	Update stub comments.
	(build_plt_stub): Build two variants, one without "addis".
	(ppc_build_one_stub): Build stubs without "addis" if possible.
	(ppc_size_one_stub): Size new stubs.
ld/testsuite/
	* ld-powerpc/relbrlt.s (.text.pad2): Adjust space.
	* ld-powerpc/relbrlt.d: Update.
	* ld-powerpc/tlsexe.d: Update.
	* ld-powerpc/tlsexe.g: Update.
	* ld-powerpc/tlsexe.r: Update.
	* ld-powerpc/tlsexetoc.d: Update.
	* ld-powerpc/tlsexetoc.g: Update.
	* ld-powerpc/tlsexetoc.r: Update.
	* ld-powerpc/tlsso.d: Update.
	* ld-powerpc/tlsso.g: Update.
	* ld-powerpc/tlsso.r: Update.
	* ld-powerpc/tlstocso.d: Update.
	* ld-powerpc/tlstocso.g: Update.
@
text
@d8 1
a8 1
There are 17 section headers.*
d12 17
a28 17
 +\[ 0\] +NULL +0+ 0+ 0+ 0+ +0 +0 +0
 +\[ 1\] \.interp +.*
 +\[ 2\] \.hash +.*
 +\[ 3\] \.dynsym +.*
 +\[ 4\] \.dynstr +.*
 +\[ 5\] \.rela\.dyn +.*
 +\[ 6\] \.rela\.plt +.*
 +\[ 7\] \.text +PROGBITS .* 0+f8 0+ +AX +0 +0 +8
 +\[ 8\] \.tdata +PROGBITS .* 0+38 0+ WAT +0 +0 +8
 +\[ 9\] \.tbss +NOBITS .* 0+38 0+ WAT +0 +0 +8
 +\[10\] \.dynamic +DYNAMIC .* 0+150 10 +WA +4 +0 +8
 +\[11\] \.branch_lt + PROGBITS .* 0+ 0+ +WA +0 +0 +8
 +\[12\] \.got +PROGBITS .* 0+30 08 +WA +0 +0 +8
 +\[13\] \.plt +.*
 +\[14\] \.shstrtab +.*
 +\[15\] \.symtab +.*
 +\[16\] \.strtab +.*
d33 1
a33 1
There are 6 program headers.*
d75 1
a75 1
Symbol table '\.symtab' contains .* entries:
@


1.19
log
@bfd/
	* elf64-ppc.c (create_linkage_sections): Use section ".branch_lt"
	for branch lookup table.
ld/
	* emulparams/elf64ppc.sh (OTHER_READWRITE_SECTIONS): Add ".branch_lt".
	* emultempl/ppc64elf.em (ppc_add_stub_section): Create without
	SEC_RELOC flag set.
ld/testsuite/
	* ld-powerpc/relbrlt.d: Update.
	* ld-powerpc/tlsexe.r: Update.
	* ld-powerpc/tlsexetoc.r: Update.
	* ld-powerpc/tlsso.r: Update.
	* ld-powerpc/tlstocso.r: Update.
@
text
@d19 1
a19 1
 +\[ 7\] \.text +PROGBITS .* 0+100 0+ +AX +0 +0 +8
@


1.19.2.1
log
@bfd/
	* elf64-ppc.c (ADDI_R12_R12, LD_R11_0R2, LD_R2_0R2): Define.
	Update stub comments.
	(build_plt_stub): Build two variants, one without "addis".
	(ppc_build_one_stub): Build stubs without "addis" if possible.
	(ppc_size_one_stub): Size new stubs.
ld/testsuite/
	* ld-powerpc/relbrlt.s (.text.pad2): Adjust space.
	* ld-powerpc/relbrlt.d: Update.
	* ld-powerpc/tlsexe.d: Update.
	* ld-powerpc/tlsexe.g: Update.
	* ld-powerpc/tlsexe.r: Update.
	* ld-powerpc/tlsexetoc.d: Update.
	* ld-powerpc/tlsexetoc.g: Update.
	* ld-powerpc/tlsexetoc.r: Update.
	* ld-powerpc/tlsso.d: Update.
	* ld-powerpc/tlsso.g: Update.
	* ld-powerpc/tlsso.r: Update.
	* ld-powerpc/tlstocso.d: Update.
	* ld-powerpc/tlstocso.g: Update.
@
text
@d19 1
a19 1
 +\[ 7\] \.text +PROGBITS .* 0+f8 0+ +AX +0 +0 +8
@


1.18
log
@bfd/
	* elf64-ppc.c (create_linkage_sections): Align .glink to 8 bytes.
	(ppc64_elf_build_stubs): Use new lazy linking stub.
ld/testsuite/
	* ld-powerpc/tlsexe.d: Update for lazy link stub change.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexetoc.d: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.d: Likewise.
	* ld-powerpc/tlstocso.d: Likewise.
@
text
@d20 4
a23 4
 +\[ 8\] \.rodata + PROGBITS .* 0+ 0+ +A +0 +0 +8
 +\[ 9\] \.tdata +PROGBITS .* 0+38 0+ WAT +0 +0 +8
 +\[10\] \.tbss +NOBITS .* 0+38 0+ WAT +0 +0 +8
 +\[11\] \.dynamic +DYNAMIC .* 0+150 10 +WA +4 +0 +8
d70 1
a70 1
.* TLS +GLOBAL DEFAULT +10 ld2
d91 8
a98 8
.* TLS +LOCAL +DEFAULT +9 gd4
.* TLS +LOCAL +DEFAULT +9 ld4
.* TLS +LOCAL +DEFAULT +9 ld5
.* TLS +LOCAL +DEFAULT +9 ld6
.* TLS +LOCAL +DEFAULT +9 ie4
.* TLS +LOCAL +DEFAULT +9 le4
.* TLS +LOCAL +DEFAULT +9 le5
.* OBJECT +LOCAL +HIDDEN +11 _DYNAMIC
d101 1
a101 1
.* GLOBAL DEFAULT +10 le0
d103 2
a104 2
.* GLOBAL DEFAULT +10 ld0
.* GLOBAL DEFAULT +10 le1
d107 2
a108 2
.* TLS +GLOBAL DEFAULT +10 ld2
.* TLS +GLOBAL DEFAULT +10 ld1
d112 2
a113 2
.* TLS +GLOBAL DEFAULT +10 gd0
.* TLS +GLOBAL DEFAULT +10 ie0
@


1.17
log
@	* ld-powerpc/tlsexe.r: Update for removal of some section syms.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
@
text
@d19 1
a19 1
 +\[ 7\] \.text +PROGBITS .* 0+fc 0+ +AX +0 +0 +4
@


1.16
log
@Updo the last change to binutils and ld/testsuite.
@
text
@d75 1
a75 1
Symbol table '\.symtab' contains 40 entries:
a90 3
.* SECTION LOCAL +DEFAULT +14 
.* SECTION LOCAL +DEFAULT +15 
.* SECTION LOCAL +DEFAULT +16 
@


1.15
log
@binutils/

2006-02-02  H.J. Lu  <hongjiu.lu@@intel.com>

	* readelf.c (process_program_headers): Undo the change made on
	2004-09-22.  Match PT_DYNAMIC segment only with SHT_DYNAMIC
	sections.

ld/testsuite/

2006-02-02  H.J. Lu  <hongjiu.lu@@intel.com>

	* ld-i386/tlsbin.rd: Update for changed segment map.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlspic.rd: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-sh/tlsbin-2.d: Likewise.
	* ld-sh/tlspic-2.d: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
@
text
@d50 1
a50 1
 +03 +\.tdata \.tbss \.dynamic \.got \.plt 
@


1.14
log
@bfd/
	* elf32-cris.c (elf_cris_adjust_gotplt_to_got): Move assert later.
	* elfxx-mips.c (_bfd_mips_elf_hide_symbol): Cope with being called
	without any got section.

ld/testsuite/
	* ld-alpha/tlsbin.rd: Update.
	* ld-alpha/tlsbinr.rd: Update.
	* ld-cris/locref1.d: Update.
	* ld-cris/locref2.d: Update.
	* ld-i386/tlsbin.rd: Update.
	* ld-ia64/tlsbin.rd: Update.
	* ld-powerpc/tlsexe.r: Update.
	* ld-powerpc/tlsexe32.r: Update.
	* ld-powerpc/tlsexetoc.r: Update.
	* ld-s390/tlsbin.rd: Update.
	* ld-s390/tlsbin_64.rd: Update.
	* ld-sparc/tlssunbin32.rd: Update.
	* ld-sparc/tlssunbin64.rd: Update.
	* ld-x86-64/tlsbin.rd: Update.
@
text
@d50 1
a50 1
 +03 +\.tdata \.dynamic \.got \.plt 
@


1.13
log
@Adjust for dynamic sym changes.
@
text
@d101 1
a102 1
.* OBJECT +GLOBAL HIDDEN +11 _DYNAMIC
@


1.12
log
@	* ld-cris/pv32.s: Give expobj a size.
	* ld-cris/pv32-1.d: Update.
	* ld-alpha/tlsbin.dd: Update for empty section removal change.
	* ld-alpha/tlsbin.sd: Likewise.
	* ld-alpha/tlsbin.td: Likewise.
	* ld-alpha/tlsbinr.dd: Likewise.
	* ld-alpha/tlsbinr.rd: Likewise.
	* ld-alpha/tlspic.dd: Likewise.
	* ld-alpha/tlspic.rd: Likewise.
	* ld-alpha/tlspic.sd: Likewise.
	* ld-alpha/tlspic.td: Likewise.
	* ld-arm/tls-lib.d: Likewise.
	* ld-arm/tls-lib.r: Likewise.
	* ld-cris/gotplt2.d: Likewise.
	* ld-cris/gotplt3.d: Likewise.
	* ld-cris/hiddef1.d: Likewise.
	* ld-cris/libdso-10.d: Likewise.
	* ld-cris/libdso-11.d: Likewise.
	* ld-cris/libdso-12.d: Likewise.
	* ld-cris/libdso-14.d: Likewise.
	* ld-cris/libdso-2.d: Likewise.
	* ld-i386/tlsnopic.dd: Likewise.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlsnopic.sd: Likewise.
	* ld-i386/tlspic.rd: Likewise.
	* ld-mmix/bpo-10.d: Likewise.
	* ld-mmix/bpo-22.d: Likewise.
	* ld-mmix/sec-7m.d: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.g: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso32.d: Likewise.
	* ld-powerpc/tlsso32.g: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlstocso.g: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
@
text
@d40 4
a43 4
 +LOAD +0x0+ 0x0+10000000 0x0+10000000 0x0+468 0x0+468 R E 0x10000
 +LOAD +0x0+468 0x0+10010468 0x0+10010468 0x0+1b8 0x0+1e8 RW +0x10000
 +DYNAMIC +0x0+4a0 0x0+100104a0 0x0+100104a0 0x0+150 0x0+150 RW +0x8
 +TLS +0x0+468 0x0+10010468 0x0+10010468 0x0+38 0x0+70 R +0x8
d62 1
a62 1
0+10010638 +0+300000015 R_PPC64_JMP_SLOT +0+ __tls_get_addr \+ 0
d64 1
a64 1
Symbol table '\.dynsym' contains 9 entries:
d66 8
a73 9
.* 0+ +0 NOTYPE +LOCAL +DEFAULT +UND 
.* 0+100104a0 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
.* 0+ +0 TLS +GLOBAL DEFAULT +UND gd
.* 0+ +0 FUNC +GLOBAL DEFAULT +UND __tls_get_addr
.* 0+ +0 TLS +GLOBAL DEFAULT +UND ld
.* 0+50 +0 TLS +GLOBAL DEFAULT +10 ld2
.* 0+10010620 +0 NOTYPE +GLOBAL DEFAULT +ABS __bss_start
.* 0+10010620 +0 NOTYPE +GLOBAL DEFAULT +ABS _edata
.* 0+10010650 +0 NOTYPE +GLOBAL DEFAULT +ABS _end
d78 39
a116 39
.* [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +1 
.* [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +2 
.* [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +3 
.* [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +4 
.* [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +5 
.* [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +6 
.* 0+10000368 +0 SECTION LOCAL +DEFAULT +7 
.* 0+10000468 +0 SECTION LOCAL +DEFAULT +8 
.* 0+10010468 +0 SECTION LOCAL +DEFAULT +9 
.* 0+100104a0 +0 SECTION LOCAL +DEFAULT +10 
.* 0+100104a0 +0 SECTION LOCAL +DEFAULT +11 
.* 0+100105f0 +0 SECTION LOCAL +DEFAULT +12 
.* [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +13 
.* [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +14 
.* [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +15 
.* [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +16 
.* 0+ +0 TLS +LOCAL +DEFAULT +9 gd4
.* 0+8 +0 TLS +LOCAL +DEFAULT +9 ld4
.* 0+10 +0 TLS +LOCAL +DEFAULT +9 ld5
.* 0+18 +0 TLS +LOCAL +DEFAULT +9 ld6
.* 0+20 +0 TLS +LOCAL +DEFAULT +9 ie4
.* 0+28 +0 TLS +LOCAL +DEFAULT +9 le4
.* 0+30 +0 TLS +LOCAL +DEFAULT +9 le5
.* 0+ +0 FUNC +LOCAL +DEFAULT +UND \.__tls_get_addr
.* 0+100104a0 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
.* 0+ +0 TLS +GLOBAL DEFAULT +UND gd
.* 0+60 +0 TLS +GLOBAL DEFAULT +10 le0
.* 0+ +0 FUNC +GLOBAL DEFAULT +UND __tls_get_addr
.* 0+40 +0 TLS +GLOBAL DEFAULT +10 ld0
.* 0+68 +0 TLS +GLOBAL DEFAULT +10 le1
.* 0+ +0 TLS +GLOBAL DEFAULT +UND ld
.* [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +7 _start
.* 0+50 +0 TLS +GLOBAL DEFAULT +10 ld2
.* 0+48 +0 TLS +GLOBAL DEFAULT +10 ld1
.* [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS __bss_start
.* [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS _edata
.* [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS _end
.* 0+38 +0 TLS +GLOBAL DEFAULT +10 gd0
.* 0+58 +0 TLS +GLOBAL DEFAULT +10 ie0
@


1.11
log
@ld/
	* emultempl/ppc64elf.em (ppc_finish): Rename from
	gld${EMULATION_NAME}_finish.  Call gld${EMULATION_NAME}_finish.
	(LDEMUL_FINISH): Update.
	* emultempl/hppaelf.em (hppaelf_finish, LDEMUL_FINISH): Likewise.
	* emultempl/m68hc1xelf.em (m68hc11elf_finish, LDEMUL_FINISH): Likewise.
ld/testsuite/
	* ld-powerpc/tlsexe.r: Update.
	* ld-powerpc/tlsexetoc.r: Update.
	* ld-powerpc/tlsso.r: Update.
	* ld-powerpc/tlstocso.r: Update.
@
text
@d8 1
a8 1
There are 16 section headers.*
d20 9
a28 8
 +\[ 8\] \.tdata +PROGBITS .* 0+38 0+ WAT +0 +0 +8
 +\[ 9\] \.tbss +NOBITS .* 0+38 0+ WAT +0 +0 +8
 +\[10\] \.dynamic +DYNAMIC .* 0+150 10 +WA +4 +0 +8
 +\[11\] \.got +PROGBITS .* 0+30 08 +WA +0 +0 +8
 +\[12\] \.plt +.*
 +\[13\] \.shstrtab +.*
 +\[14\] \.symtab +.*
 +\[15\] \.strtab +.*
d40 1
a40 1
 +LOAD +0x0+ 0x0+10000000 0x0+10000000 0x0+464 0x0+464 R E 0x10000
d56 3
a58 3
0+10010600 +0+200000049 R_PPC64_TPREL64 +0+ gd \+ 0
0+10010608 +0+400000044 R_PPC64_DTPMOD64 +0+ ld \+ 0
0+10010618 +0+50000004e R_PPC64_DTPREL64 +0+50 ld2 \+ 0
d71 1
a71 1
.* 0+50 +0 TLS +GLOBAL DEFAULT +9 ld2
d76 1
a76 1
Symbol table '\.symtab' contains 39 entries:
d86 2
a87 2
.* 0+10010468 +0 SECTION LOCAL +DEFAULT +8 
.* 0+100104a0 +0 SECTION LOCAL +DEFAULT +9 
d89 2
a90 2
.* 0+100105f0 +0 SECTION LOCAL +DEFAULT +11 
.* [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +12 
d94 8
a101 7
.* 0+ +0 TLS +LOCAL +DEFAULT +8 gd4
.* 0+8 +0 TLS +LOCAL +DEFAULT +8 ld4
.* 0+10 +0 TLS +LOCAL +DEFAULT +8 ld5
.* 0+18 +0 TLS +LOCAL +DEFAULT +8 ld6
.* 0+20 +0 TLS +LOCAL +DEFAULT +8 ie4
.* 0+28 +0 TLS +LOCAL +DEFAULT +8 le4
.* 0+30 +0 TLS +LOCAL +DEFAULT +8 le5
d105 1
a105 1
.* 0+60 +0 TLS +GLOBAL DEFAULT +9 le0
d107 2
a108 2
.* 0+40 +0 TLS +GLOBAL DEFAULT +9 ld0
.* 0+68 +0 TLS +GLOBAL DEFAULT +9 le1
d111 2
a112 2
.* 0+50 +0 TLS +GLOBAL DEFAULT +9 ld2
.* 0+48 +0 TLS +GLOBAL DEFAULT +9 ld1
d116 2
a117 2
.* 0+38 +0 TLS +GLOBAL DEFAULT +9 gd0
.* 0+58 +0 TLS +GLOBAL DEFAULT +9 ie0
@


1.10
log
@	* ld-powerpc/tlsexe.g: Update.
	* ld-powerpc/tlsexe.r: Update.
	* ld-powerpc/tlsexetoc.g: Update.
	* ld-powerpc/tlsexetoc.r: Update.
@
text
@d8 1
a8 1
There are 20 section headers.*
d23 5
a27 9
 +\[11\] \.data +PROGBITS .* 0+ 0+ +WA +0 +0 +1
 +\[12\] \.branch_lt +.*
 +\[13\] \.got +PROGBITS .* 0+30 08 +WA +0 +0 +8
 +\[14\] \.sbss +.*
 +\[15\] \.plt +.*
 +\[16\] \.bss +.*
 +\[17\] \.shstrtab +.*
 +\[18\] \.symtab +.*
 +\[19\] \.strtab +.*
d75 1
a75 1
Symbol table '\.symtab' contains 43 entries:
d90 1
a90 1
.* 0+100105f0 +0 SECTION LOCAL +DEFAULT +13 
a92 4
.* [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +16 
.* 0+ +0 SECTION LOCAL +DEFAULT +17 
.* 0+ +0 SECTION LOCAL +DEFAULT +18 
.* 0+ +0 SECTION LOCAL +DEFAULT +19 
@


1.9
log
@binutils/
	* readelf.c (process_program_headers): Don't include .tbss in non-TLS
	segments.

ld/testsuite/
	* ld-i386/tlsbin.rd: Update for changed segment map.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlspic.rd: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-sh/tlsbin-2.d: Likewise.
	* ld-sh/tlspic-2.d: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
@
text
@d19 5
a23 5
 +\[ 7\] \.text +PROGBITS +0+10000388 0+388 0+fc 0+ +AX +0 +0 +4
 +\[ 8\] \.tdata +PROGBITS +0+10010488 0+488 0+38 0+ WAT +0 +0 +8
 +\[ 9\] \.tbss +NOBITS +0+100104c0 0+4c0 0+38 0+ WAT +0 +0 +8
 +\[10\] \.dynamic +DYNAMIC +0+100104c0 0+4c0 0+150 10 +WA +4 +0 +8
 +\[11\] \.data +PROGBITS +0+10010610 0+610 0+ 0+ +WA +0 +0 +1
d25 1
a25 1
 +\[13\] \.got +PROGBITS +0+10010610 0+610 0+30 08 +WA +0 +0 +8
d35 1
a35 1
Entry point 0x100003a4
d43 4
a46 4
 +LOAD +0x0+ 0x0+10000000 0x0+10000000 0x0+484 0x0+484 R E 0x10000
 +LOAD +0x0+488 0x0+10010488 0x0+10010488 0x0+1b8 0x0+1e8 RW +0x10000
 +DYNAMIC +0x0+4c0 0x0+100104c0 0x0+100104c0 0x0+150 0x0+150 RW +0x8
 +TLS +0x0+488 0x0+10010488 0x0+10010488 0x0+38 0x0+70 R +0x8
d59 3
a61 3
0+10010620 +0+200000049 R_PPC64_TPREL64 +0+ gd \+ 0
0+10010628 +0+500000044 R_PPC64_DTPMOD64 +0+ ld \+ 0
0+10010638 +0+60000004e R_PPC64_DTPREL64 +0+50 ld2 \+ 0
d65 1
a65 1
0+10010658 +0+300000015 R_PPC64_JMP_SLOT +0+ __tls_get_addr \+ 0
d67 1
a67 1
Symbol table '\.dynsym' contains 10 entries:
d69 9
a77 10
 +0: 0+ +0 NOTYPE +LOCAL +DEFAULT +UND 
 +1: 0+100104c0 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
 +2: 0+ +0 TLS +GLOBAL DEFAULT +UND gd
 +3: 0+ +0 FUNC +GLOBAL DEFAULT +UND __tls_get_addr
 +4: 0+ +0 FUNC +GLOBAL DEFAULT +UND \.__tls_get_addr
 +5: 0+ +0 TLS +GLOBAL DEFAULT +UND ld
 +6: 0+50 +0 TLS +GLOBAL DEFAULT +9 ld2
 +7: 0+10010640 +0 NOTYPE +GLOBAL DEFAULT +ABS __bss_start
 +8: 0+10010640 +0 NOTYPE +GLOBAL DEFAULT +ABS _edata
 +9: 0+10010670 +0 NOTYPE +GLOBAL DEFAULT +ABS _end
d81 43
a123 43
 +0: 0+ +0 NOTYPE +LOCAL +DEFAULT +UND 
 +1: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +1 
 +2: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +2 
 +3: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +3 
 +4: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +4 
 +5: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +5 
 +6: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +6 
 +7: 0+10000388 +0 SECTION LOCAL +DEFAULT +7 
 +8: 0+10010488 +0 SECTION LOCAL +DEFAULT +8 
 +9: 0+100104c0 +0 SECTION LOCAL +DEFAULT +9 
 +10: 0+100104c0 +0 SECTION LOCAL +DEFAULT +10 
 +11: 0+10010610 +0 SECTION LOCAL +DEFAULT +11 
 +12: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +12 
 +13: 0+10010610 +0 SECTION LOCAL +DEFAULT +13 
 +14: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +14 
 +15: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +15 
 +16: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +16 
 +17: 0+ +0 SECTION LOCAL +DEFAULT +17 
 +18: 0+ +0 SECTION LOCAL +DEFAULT +18 
 +19: 0+ +0 SECTION LOCAL +DEFAULT +19 
 +20: 0+ +0 TLS +LOCAL +DEFAULT +8 gd4
 +21: 0+8 +0 TLS +LOCAL +DEFAULT +8 ld4
 +22: 0+10 +0 TLS +LOCAL +DEFAULT +8 ld5
 +23: 0+18 +0 TLS +LOCAL +DEFAULT +8 ld6
 +24: 0+20 +0 TLS +LOCAL +DEFAULT +8 ie4
 +25: 0+28 +0 TLS +LOCAL +DEFAULT +8 le4
 +26: 0+30 +0 TLS +LOCAL +DEFAULT +8 le5
 +27: 0+100104c0 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
 +28: 0+ +0 TLS +GLOBAL DEFAULT +UND gd
 +29: 0+60 +0 TLS +GLOBAL DEFAULT +9 le0
 +30: 0+ +0 FUNC +GLOBAL DEFAULT +UND __tls_get_addr
 +31: 0+ +0 FUNC +GLOBAL DEFAULT +UND \.__tls_get_addr
 +32: 0+40 +0 TLS +GLOBAL DEFAULT +9 ld0
 +33: 0+68 +0 TLS +GLOBAL DEFAULT +9 le1
 +34: 0+ +0 TLS +GLOBAL DEFAULT +UND ld
 +35: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +7 _start
 +36: 0+50 +0 TLS +GLOBAL DEFAULT +9 ld2
 +37: 0+48 +0 TLS +GLOBAL DEFAULT +9 ld1
 +38: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS __bss_start
 +39: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS _edata
 +40: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS _end
 +41: 0+38 +0 TLS +GLOBAL DEFAULT +9 gd0
 +42: 0+58 +0 TLS +GLOBAL DEFAULT +9 ie0
@


1.8
log
@bfd/
	* elflink.c (elf_bfd_final_link): Don't output STT_SECTION symbol
	into .dynsym if elf_section_data (sec)->dynindx <= 0.
	Adjust counting of last_local.
	(_bfd_elf_link_renumber_dynsyms): Don't assign dynindx to sections
	other than SHT_PROGBITS/SHT_NOBITS and neither for .got/.got.plt/.plt
	created by the linker nor !SHF_ALLOC.

	* elf32-i386.c (elf_i386_finish_dynamic_sections): Point
	DT_PLTGOT to the start of the .got.plt section instead of the
	.got output section.  Set sh_entsize for .got section in addition
	to .got.plt.
	(elf_i386_relocate_section): Don't assume _GLOBAL_OFFSET_TABLE_
	is at sgot->output_section->vma.
	* elf64-x86-64.c (elf64_x86_64_finish_dynamic_sections): Point
	DT_PLTGOT to the start of the .got.plt section instead of the
	.got output section.
	(elf64_x86_64_relocate_section): Don't assume _GLOBAL_OFFSET_TABLE_
	is at sgot->output_section->vma.  Set sh_entsize for .got section
	in addition to .got.plt.
	* elf.c (_bfd_elf_print_private_bfd_data): Handle PT_GNU_RELRO.
	(bfd_section_from_phdr): Likewise.
	(map_sections_to_segments): Likewise.
	(assign_file_positions_for_segments): Likewise.
	(get_program_header_size): Likewise.
	* elflink.c (bfd_elf_size_dynamic_sections): Set
	elf_tdata (output_bfd)->relro from info->relro.
	* elf-bfd.h (struct elf_obj_tdata): Add relro field.
include/
	* bfdlink.h (struct bfd_link_info): Add relro, relro_start and
	relro_end fields.
	* elf/common.h (PT_GNU_EH_FRAME, PT_GNU_STACK): Add comments.
	(PT_GNU_RELRO): Define.
binutils/
	* readelf.c (get_segment_type): Handle PT_GNU_RELRO.
ld/
	* genscripts.sh: Generate -z combreloc -z now -z relro scripts
	for binaries, -shared and -pie.
	* emulparams/elf_i386.sh (SEPARATE_GOTPLT): Set.
	* emulparams/elf_x86_64.sh (SEPARATE_GOTPLT): Set.
	* emulparams/elf32ppc.sh (OTHER_READWRITE_SECTIONS): Rename to...
	(OTHER_RELRO_SECTIONS): ... this.
	* ldlex.l (DATA_SEGMENT_RELRO_END): Add.
	* emultempl/elf32.em (gld${EMULATION_NAME}_handle_option): Handle
	-z relro and -z norelro.
	(gld${EMULATION_NAME}_list_options): Add it to usage.
	(gld${EMULATION_NAME}_get_script): Return -z combreloc -z now
	-z relro scripts when appropriate.
	* scripttempl/elf.sc: Unset SEPARATE_GOTPLT if RELRO_NOW is set.
	Create separate .got.plt section if SEPARATE_GOTPLT.
	Move sections which are only written during relocation handling
	to the beginning of RW segment.  If NO_SMALL_DATA, move .got
	before .data.  Add DATA_SEGMENT_RELRO_END directive.
	Include OTHER_RELRO_SECTIONS.
	* ldgram.y (DATA_SEGMENT_RELRO_END): Add.
	* ldexp.c (exp_print_token): Handle DATA_SEGMENT_RELRO_END.
	(fold_unary): Likewise.
	(fold_binary): Handle -z relro.
	* ldexp.h (struct exp_data_seg): Add exp_dataseg_relro_seen and
	exp_dataseg_relro_adjust phases.  Add relro_end field.
	* ldmain.c (main): Initialize link_info.relro to FALSE.
	* ldlang.c (lang_size_sections): Handle -z relro.
ld/testsuite/
	* ld-i386/tlspic.rd: Adjust for section reordering changes
	and removal of unneeded STT_SECTION symbols from .dynsym.
	* ld-i386/tlspic.dd: Likewise.
	* ld-i386/tlspic.sd: Likewise.
	* ld-i386/tlsbin.rd: Likewise.
	* ld-i386/tlsbinpic.s: Likewise.
	* ld-i386/tlsbin.dd: Likewise.
	* ld-i386/tlsbin.sd: Likewise.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlsnopic1.s: Likewise.
	* ld-i386/combreloc.d: Likewise.
	* ld-i386/tlsnopic.dd: Likewise.
	* ld-i386/tlsnopic.sd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
	* ld-x86-64/tlspic.dd: Likewise.
	* ld-x86-64/tlsbin.dd: Likewise.
	* ld-x86-64/tlspic.sd: Likewise.
	* ld-x86-64/tlsbin.sd: Likewise.
	* ld-x86-64/tlspic.td: Likewise.
	* ld-x86-64/tlsbin.td: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-s390/tlspic1.s: Likewise.
	* ld-s390/tlsbinpic.s: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlspic.dd: Likewise.
	* ld-s390/tlsbin.dd: Likewise.
	* ld-s390/tlsbin.sd: Likewise.
	* ld-s390/tlsbin.td: Likewise.
	* ld-s390/tlspic.sd: Likewise.
	* ld-s390/tlspic.td: Likewise.
	* ld-s390/tlspic1_64.s: Likewise.
	* ld-s390/tlsbinpic_64.s: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlspic_64.dd: Likewise.
	* ld-s390/tlsbin_64.dd: Likewise.
	* ld-s390/tlspic_64.sd: Likewise.
	* ld-s390/tlspic_64.td: Likewise.
	* ld-s390/tlsbin_64.td: Likewise.
	* ld-s390/tlsbin_64.sd: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlsso32.d: Likewise.
	* ld-powerpc/tlsso32.g: Likewise.
	* ld-powerpc/tlsso32.t: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso.g: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
	* ld-powerpc/tlstocso.g: Likewise.
	* ld-ia64/tlspic.rd: Likewise.
	* ld-ia64/tlspic.dd: Likewise.
	* ld-ia64/tlspic.sd: Likewise.
	* ld-ia64/tlspic.td: Likewise.
	* ld-ia64/tlsbin.rd: Likewise.
	* ld-ia64/tlsbin.sd: Likewise.
	* ld-ia64/tlsbin.td: Likewise.
	* ld-elfvsb/elfvsb.exp: XFAIL non-PIC load offset tests on s390x.
	* ld-shared/shared.exp: Likewise.
@
text
@d53 2
a54 2
 +03 +\.tdata \.tbss \.dynamic \.got \.plt 
 +04 +\.tbss \.dynamic 
@


1.7
log
@	* ld-powerpc/tlsexe.r: Update sh_info to decimal.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
@
text
@d13 6
a18 6
 +\[ 1\] \.interp +PROGBITS +0+10000190 0+190 0+11 0+ +A +0 +0 +1
 +\[ 2\] \.hash +HASH +0+100001a8 0+1a8 0+3c 04 +A +3 +0 +8
 +\[ 3\] \.dynsym +DYNSYM +0+100001e8 0+1e8 0+f0 18 +A +4 +1 +8
 +\[ 4\] \.dynstr +STRTAB +0+100002d8 0+2d8 0+50 0+ +A +0 +0 +1
 +\[ 5\] \.rela\.dyn +RELA +0+10000328 0+328 0+48 18 +A +3 +0 +8
 +\[ 6\] \.rela\.plt +RELA +0+10000370 0+370 0+18 18 +A +3 +15 +8
d20 5
a24 5
 +\[ 8\] \.data +PROGBITS +0+10010488 0+488 0+ 0+ +WA +0 +0 +1
 +\[ 9\] \.branch_lt +PROGBITS +0+10010488 0+488 0+ 0+ +WA +0 +0 +8
 +\[10\] \.tdata +PROGBITS +0+10010488 0+488 0+38 0+ WAT +0 +0 +8
 +\[11\] \.tbss +NOBITS +0+100104c0 0+4c0 0+38 0+ WAT +0 +0 +8
 +\[12\] \.dynamic +DYNAMIC +0+100104c0 0+4c0 0+150 10 +WA +4 +0 +8
d26 6
a31 6
 +\[14\] \.sbss +NOBITS +0+10010640 0+640 0+ 0+ +W +0 +0 +1
 +\[15\] \.plt +NOBITS +0+10010640 0+640 0+30 18 +WA +0 +0 +8
 +\[16\] \.bss +NOBITS +0+10010670 0+640 0+ 0+ +WA +0 +0 +1
 +\[17\] \.shstrtab +STRTAB +0+ 0+640 0+8a 0+ +0 +0 +1
 +\[18\] \.symtab +SYMTAB +0+ 0+bd0 0+408 18 +19 +27 +8
 +\[19\] \.strtab +STRTAB +0+ 0+fd8 0+86 0+ +0 +0 +1
d75 1
a75 1
 +6: 0+50 +0 TLS +GLOBAL DEFAULT +11 ld2
d83 6
a88 6
 +1: 0+10000190 +0 SECTION LOCAL +DEFAULT +1 
 +2: 0+100001a8 +0 SECTION LOCAL +DEFAULT +2 
 +3: 0+100001e8 +0 SECTION LOCAL +DEFAULT +3 
 +4: 0+100002d8 +0 SECTION LOCAL +DEFAULT +4 
 +5: 0+10000328 +0 SECTION LOCAL +DEFAULT +5 
 +6: 0+10000370 +0 SECTION LOCAL +DEFAULT +6 
d91 4
a94 4
 +9: 0+10010488 +0 SECTION LOCAL +DEFAULT +9 
 +10: 0+10010488 +0 SECTION LOCAL +DEFAULT +10 
 +11: 0+100104c0 +0 SECTION LOCAL +DEFAULT +11 
 +12: 0+100104c0 +0 SECTION LOCAL +DEFAULT +12 
d96 3
a98 3
 +14: 0+10010640 +0 SECTION LOCAL +DEFAULT +14 
 +15: 0+10010640 +0 SECTION LOCAL +DEFAULT +15 
 +16: 0+10010670 +0 SECTION LOCAL +DEFAULT +16 
d102 7
a108 7
 +20: 0+ +0 TLS +LOCAL +DEFAULT +10 gd4
 +21: 0+8 +0 TLS +LOCAL +DEFAULT +10 ld4
 +22: 0+10 +0 TLS +LOCAL +DEFAULT +10 ld5
 +23: 0+18 +0 TLS +LOCAL +DEFAULT +10 ld6
 +24: 0+20 +0 TLS +LOCAL +DEFAULT +10 ie4
 +25: 0+28 +0 TLS +LOCAL +DEFAULT +10 le4
 +26: 0+30 +0 TLS +LOCAL +DEFAULT +10 le5
d111 1
a111 1
 +29: 0+60 +0 TLS +GLOBAL DEFAULT +11 le0
d114 2
a115 2
 +32: 0+40 +0 TLS +GLOBAL DEFAULT +11 ld0
 +33: 0+68 +0 TLS +GLOBAL DEFAULT +11 le1
d117 8
a124 8
 +35: 0+100003a4 +0 NOTYPE +GLOBAL DEFAULT +7 _start
 +36: 0+50 +0 TLS +GLOBAL DEFAULT +11 ld2
 +37: 0+48 +0 TLS +GLOBAL DEFAULT +11 ld1
 +38: 0+10010640 +0 NOTYPE +GLOBAL DEFAULT +ABS __bss_start
 +39: 0+10010640 +0 NOTYPE +GLOBAL DEFAULT +ABS _edata
 +40: 0+10010670 +0 NOTYPE +GLOBAL DEFAULT +ABS _end
 +41: 0+38 +0 TLS +GLOBAL DEFAULT +11 gd0
 +42: 0+58 +0 TLS +GLOBAL DEFAULT +11 ie0
@


1.6
log
@	* ld-powerpc/tlsexe.r: Update for changed sym type.
	* ld-powerpc/tlsexetoc.r: Likewise.
@
text
@d18 1
a18 1
 +\[ 6\] \.rela\.plt +RELA +0+10000370 0+370 0+18 18 +A +3 +f +8
d30 1
a30 1
 +\[18\] \.symtab +SYMTAB +0+ 0+bd0 0+408 18 +19 +1b +8
@


1.5
log
@2003-07-24  H.J. Lu  <hongjiu.lu@@intel.com>

	* ld-powerpc/tlsexe.r: .sbss is NOBITS, not PROGBITS.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
@
text
@d72 1
a72 1
 +3: 0+ +0 NOTYPE +GLOBAL DEFAULT +UND __tls_get_addr
d112 1
a112 1
 +30: 0+ +0 NOTYPE +GLOBAL DEFAULT +UND __tls_get_addr
@


1.5.6.1
log
@Merge from mainline
@
text
@d72 1
a72 1
 +3: 0+ +0 FUNC +GLOBAL DEFAULT +UND __tls_get_addr
d112 1
a112 1
 +30: 0+ +0 FUNC +GLOBAL DEFAULT +UND __tls_get_addr
@


1.4
log
@	* ld-elfvsb/elfvsb.exp: Run for powerpc64 too.
	* ld-powerpc/tls.t: Update.
	* ld-powerpc/tlsexe.d: Update.
	* ld-powerpc/tlsexe.r: Update.
	* ld-powerpc/tlsexetoc.d: Update.
	* ld-powerpc/tlsexetoc.r: Update.
	* ld-powerpc/tlsexetoc.t: Update.
	* ld-powerpc/tlsso.d: Update.
	* ld-powerpc/tlsso.g: Update.
	* ld-powerpc/tlsso.r: Update.
	* ld-powerpc/tlsso.t: Update.
	* ld-powerpc/tlstocso.d: Update.
	* ld-powerpc/tlstocso.g: Update.
	* ld-powerpc/tlstocso.r: Update.
	* ld-powerpc/tlstocso.t: Update.
@
text
@d26 1
a26 1
 +\[14\] \.sbss +PROGBITS +0+10010640 0+640 0+ 0+ +W +0 +0 +1
@


1.3
log
@	* ld-powerpc/tlsexe.d: Update for changed handling of invalid LD
	relocs.
	* ld-powerpc/tlsexe.g: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexe.t: Likewise.
@
text
@d8 1
a8 1
There are 22 section headers.*
d14 6
a19 6
 +\[ 2\] \.hash +HASH +0+100001a8 0+1a8 0+40 04 +A +3 +0 +8
 +\[ 3\] \.dynsym +DYNSYM +0+100001e8 0+1e8 0+108 18 +A +4 +1 +8
 +\[ 4\] \.dynstr +STRTAB +0+100002f0 0+2f0 0+51 0+ +A +0 +0 +1
 +\[ 5\] \.rela\.dyn +RELA +0+10000348 0+348 0+48 18 +A +3 +0 +8
 +\[ 6\] \.rela\.plt +RELA +0+10000390 0+390 0+18 18 +A +3 +11 +8
 +\[ 7\] \.text +PROGBITS +0+100003a8 0+3a8 0+dc 0+ +AX +0 +0 +4
d25 7
a31 9
 +\[13\] \.ctors +PROGBITS +0+10010610 0+640 0+ 0+ +W +0 +0 +1
 +\[14\] \.dtors +PROGBITS +0+10010610 0+640 0+ 0+ +W +0 +0 +1
 +\[15\] \.got +PROGBITS +0+10010610 0+610 0+30 08 +WA +0 +0 +8
 +\[16\] \.sbss +PROGBITS +0+10010640 0+640 0+ 0+ +W +0 +0 +1
 +\[17\] \.plt +NOBITS +0+10010640 0+640 0+30 18 +WA +0 +0 +8
 +\[18\] \.bss +NOBITS +0+10010670 0+640 0+ 0+ +WA +0 +0 +1
 +\[19\] \.shstrtab +STRTAB +0+ 0+640 0+98 0+ +0 +0 +1
 +\[20\] \.symtab +SYMTAB +0+ 0+c58 0+450 18 +21 +1d +8
 +\[21\] \.strtab +STRTAB +0+ 0+10a8 0+8c 0+ +0 +0 +1
d35 1
a35 1
Entry point 0x100003c4
d61 1
a61 1
0+10010638 +0+70000004e R_PPC64_DTPREL64 +0+50 ld2 \+ 0
d67 1
a67 1
Symbol table '\.dynsym' contains 11 entries:
d75 4
a78 5
 +6: 0+10010670 +0 NOTYPE +GLOBAL DEFAULT +ABS __end
 +7: 0+50 +0 TLS +GLOBAL DEFAULT +11 ld2
 +8: 0+10010640 +0 NOTYPE +GLOBAL DEFAULT +ABS __bss_start
 +9: 0+10010640 +0 NOTYPE +GLOBAL DEFAULT +ABS _edata
 +10: 0+10010670 +0 NOTYPE +GLOBAL DEFAULT +ABS _end
d80 1
a80 1
Symbol table '\.symtab' contains 46 entries:
d86 4
a89 4
 +4: 0+100002f0 +0 SECTION LOCAL +DEFAULT +4 
 +5: 0+10000348 +0 SECTION LOCAL +DEFAULT +5 
 +6: 0+10000390 +0 SECTION LOCAL +DEFAULT +6 
 +7: 0+100003a8 +0 SECTION LOCAL +DEFAULT +7 
d96 5
a100 5
 +14: 0+10010610 +0 SECTION LOCAL +DEFAULT +14 
 +15: 0+10010610 +0 SECTION LOCAL +DEFAULT +15 
 +16: 0+10010640 +0 SECTION LOCAL +DEFAULT +16 
 +17: 0+10010640 +0 SECTION LOCAL +DEFAULT +17 
 +18: 0+10010670 +0 SECTION LOCAL +DEFAULT +18 
d102 23
a124 26
 +20: 0+ +0 SECTION LOCAL +DEFAULT +20 
 +21: 0+ +0 SECTION LOCAL +DEFAULT +21 
 +22: 0+ +0 TLS +LOCAL +DEFAULT +10 gd4
 +23: 0+8 +0 TLS +LOCAL +DEFAULT +10 ld4
 +24: 0+10 +0 TLS +LOCAL +DEFAULT +10 ld5
 +25: 0+18 +0 TLS +LOCAL +DEFAULT +10 ld6
 +26: 0+20 +0 TLS +LOCAL +DEFAULT +10 ie4
 +27: 0+28 +0 TLS +LOCAL +DEFAULT +10 le4
 +28: 0+30 +0 TLS +LOCAL +DEFAULT +10 le5
 +29: 0+100104c0 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
 +30: 0+ +0 TLS +GLOBAL DEFAULT +UND gd
 +31: 0+60 +0 TLS +GLOBAL DEFAULT +11 le0
 +32: 0+ +0 NOTYPE +GLOBAL DEFAULT +UND __tls_get_addr
 +33: 0+ +0 FUNC +GLOBAL DEFAULT +UND \.__tls_get_addr
 +34: 0+40 +0 TLS +GLOBAL DEFAULT +11 ld0
 +35: 0+68 +0 TLS +GLOBAL DEFAULT +11 le1
 +36: 0+ +0 TLS +GLOBAL DEFAULT +UND ld
 +37: 0+100003c4 +0 NOTYPE +GLOBAL DEFAULT +7 _start
 +38: 0+10010670 +0 NOTYPE +GLOBAL DEFAULT +ABS __end
 +39: 0+50 +0 TLS +GLOBAL DEFAULT +11 ld2
 +40: 0+48 +0 TLS +GLOBAL DEFAULT +11 ld1
 +41: 0+10010640 +0 NOTYPE +GLOBAL DEFAULT +ABS __bss_start
 +42: 0+10010640 +0 NOTYPE +GLOBAL DEFAULT +ABS _edata
 +43: 0+10010670 +0 NOTYPE +GLOBAL DEFAULT +ABS _end
 +44: 0+38 +0 TLS +GLOBAL DEFAULT +11 gd0
 +45: 0+58 +0 TLS +GLOBAL DEFAULT +11 ie0
@


1.2
log
@	* ld-powerpc/tlslib.s: Give .__tls_get_addr function type.
	* ld-powerpc/tlsexe.d: Update for changed handling of (invalid) ld var
	in dynamic lib.
	* ld-powerpc/tlsexe.g: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexe.t: Likewise.
	* ld-powerpc/tlsexetoc.d: Likewise.
	* ld-powerpc/tlsexetoc.g: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsexetoc.t: Likewise.
@
text
@d17 17
a33 17
 +\[ 5\] \.rela\.dyn +RELA +0+10000348 0+348 0+30 18 +A +3 +0 +8
 +\[ 6\] \.rela\.plt +RELA +0+10000378 0+378 0+18 18 +A +3 +11 +8
 +\[ 7\] \.text +PROGBITS +0+10000390 0+390 0+dc 0+ +AX +0 +0 +4
 +\[ 8\] \.data +PROGBITS +0+10010470 0+470 0+ 0+ +WA +0 +0 +1
 +\[ 9\] \.branch_lt +PROGBITS +0+10010470 0+470 0+ 0+ +WA +0 +0 +8
 +\[10\] \.tdata +PROGBITS +0+10010470 0+470 0+38 0+ WAT +0 +0 +8
 +\[11\] \.tbss +NOBITS +0+100104a8 0+4a8 0+38 0+ WAT +0 +0 +8
 +\[12\] \.dynamic +DYNAMIC +0+100104a8 0+4a8 0+150 10 +WA +4 +0 +8
 +\[13\] \.ctors +PROGBITS +0+100105f8 0+628 0+ 0+ +W +0 +0 +1
 +\[14\] \.dtors +PROGBITS +0+100105f8 0+628 0+ 0+ +W +0 +0 +1
 +\[15\] \.got +PROGBITS +0+100105f8 0+5f8 0+30 08 +WA +0 +0 +8
 +\[16\] \.sbss +PROGBITS +0+10010628 0+628 0+ 0+ +W +0 +0 +1
 +\[17\] \.plt +NOBITS +0+10010628 0+628 0+30 18 +WA +0 +0 +8
 +\[18\] \.bss +NOBITS +0+10010658 0+628 0+ 0+ +WA +0 +0 +1
 +\[19\] \.shstrtab +STRTAB +0+ 0+628 0+98 0+ +0 +0 +1
 +\[20\] \.symtab +SYMTAB +0+ 0+c40 0+450 18 +21 +1d +8
 +\[21\] \.strtab +STRTAB +0+ 0+1090 0+8c 0+ +0 +0 +1
d37 1
a37 1
Entry point 0x100003ac
d45 4
a48 4
 +LOAD +0x0+ 0x0+10000000 0x0+10000000 0x0+46c 0x0+46c R E 0x10000
 +LOAD +0x0+470 0x0+10010470 0x0+10010470 0x0+1b8 0x0+1e8 RW +0x10000
 +DYNAMIC +0x0+4a8 0x0+100104a8 0x0+100104a8 0x0+150 0x0+150 RW +0x8
 +TLS +0x0+470 0x0+10010470 0x0+10010470 0x0+38 0x0+70 R +0x8
d59 1
a59 1
Relocation section '\.rela\.dyn' at offset .* contains 2 entries:
d61 3
a63 2
0+10010618 +0+200000049 R_PPC64_TPREL64 +0+ gd \+ 0
0+10010620 +0+70000004e R_PPC64_DTPREL64 +0+50 ld2 \+ 0
d67 1
a67 1
0+10010640 +0+300000015 R_PPC64_JMP_SLOT +0+ __tls_get_addr \+ 0
d72 1
a72 1
 +1: 0+100104a8 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
d77 1
a77 1
 +6: 0+10010658 +0 NOTYPE +GLOBAL DEFAULT +ABS __end
d79 3
a81 3
 +8: 0+10010628 +0 NOTYPE +GLOBAL DEFAULT +ABS __bss_start
 +9: 0+10010628 +0 NOTYPE +GLOBAL DEFAULT +ABS _edata
 +10: 0+10010658 +0 NOTYPE +GLOBAL DEFAULT +ABS _end
d91 13
a103 13
 +6: 0+10000378 +0 SECTION LOCAL +DEFAULT +6 
 +7: 0+10000390 +0 SECTION LOCAL +DEFAULT +7 
 +8: 0+10010470 +0 SECTION LOCAL +DEFAULT +8 
 +9: 0+10010470 +0 SECTION LOCAL +DEFAULT +9 
 +10: 0+10010470 +0 SECTION LOCAL +DEFAULT +10 
 +11: 0+100104a8 +0 SECTION LOCAL +DEFAULT +11 
 +12: 0+100104a8 +0 SECTION LOCAL +DEFAULT +12 
 +13: 0+100105f8 +0 SECTION LOCAL +DEFAULT +13 
 +14: 0+100105f8 +0 SECTION LOCAL +DEFAULT +14 
 +15: 0+100105f8 +0 SECTION LOCAL +DEFAULT +15 
 +16: 0+10010628 +0 SECTION LOCAL +DEFAULT +16 
 +17: 0+10010628 +0 SECTION LOCAL +DEFAULT +17 
 +18: 0+10010658 +0 SECTION LOCAL +DEFAULT +18 
d114 1
a114 1
 +29: 0+100104a8 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
d122 2
a123 2
 +37: 0+100003ac +0 NOTYPE +GLOBAL DEFAULT +7 _start
 +38: 0+10010658 +0 NOTYPE +GLOBAL DEFAULT +ABS __end
d126 3
a128 3
 +41: 0+10010628 +0 NOTYPE +GLOBAL DEFAULT +ABS __bss_start
 +42: 0+10010628 +0 NOTYPE +GLOBAL DEFAULT +ABS _edata
 +43: 0+10010658 +0 NOTYPE +GLOBAL DEFAULT +ABS _end
@


1.1
log
@new ppc64 tls tests
@
text
@d4 1
a4 1
#ld: -shared -melf64ppc
d8 1
a8 1
There are 20 section headers.*
d14 20
a33 18
 +\[ 2\] \.hash +HASH +0+100001a8 0+1a8 0+3c 04 +A +3 +0 +8
 +\[ 3\] \.dynsym +DYNSYM +0+100001e8 0+1e8 0+f0 18 +A +4 +1 +8
 +\[ 4\] \.dynstr +STRTAB +0+100002d8 0+2d8 0+51 0+ +A +0 +0 +1
 +\[ 5\] \.rela\.dyn +RELA +0+10000330 0+330 0+48 18 +A +3 +0 +8
 +\[ 6\] \.text +PROGBITS +0+10000378 0+378 0+98 0+ +AX +0 +0 +4
 +\[ 7\] \.data +PROGBITS +0+10010410 0+410 0+ 0+ +WA +0 +0 +1
 +\[ 8\] \.branch_lt +PROGBITS +0+10010410 0+410 0+ 0+ +WA +0 +0 +8
 +\[ 9\] \.tdata +PROGBITS +0+10010410 0+410 0+38 0+ WAT +0 +0 +8
 +\[10\] \.tbss +NOBITS +0+10010448 0+448 0+38 0+ WAT +0 +0 +8
 +\[11\] \.dynamic +DYNAMIC +0+10010448 0+448 0+100 10 +WA +4 +0 +8
 +\[12\] \.ctors +PROGBITS +0+10010548 0+570 0+ 0+ +W +0 +0 +1
 +\[13\] \.dtors +PROGBITS +0+10010548 0+570 0+ 0+ +W +0 +0 +1
 +\[14\] \.got +PROGBITS +0+10010548 0+548 0+28 08 +WA +0 +0 +8
 +\[15\] \.sbss +PROGBITS +0+10010570 0+570 0+ 0+ +W +0 +0 +1
 +\[16\] \.bss +NOBITS +0+10010570 0+570 0+ 0+ +WA +0 +0 +1
 +\[17\] \.shstrtab +STRTAB +0+ 0+570 0+8e 0+ +0 +0 +1
 +\[18\] \.symtab +SYMTAB +0+ 0+b00 0+408 18 +19 +1b +8
 +\[19\] \.strtab +STRTAB +0+ 0+f08 0+7d 0+ +0 +0 +1
d37 1
a37 1
Entry point 0x10000378
d45 4
a48 4
 +LOAD +0x0+ 0x0+10000000 0x0+10000000 0x0+410 0x0+410 R E 0x10000
 +LOAD +0x0+410 0x0+10010410 0x0+10010410 0x0+160 0x0+160 RW +0x10000
 +DYNAMIC +0x0+448 0x0+10010448 0x0+10010448 0x0+100 0x0+100 RW +0x8
 +TLS +0x0+410 0x0+10010410 0x0+10010410 0x0+38 0x0+70 R +0x8
d52 1
a52 1
 +00 +
d54 2
a55 2
 +02 +\.interp \.hash \.dynsym \.dynstr \.rela\.dyn \.text 
 +03 +\.tdata \.tbss \.dynamic \.got 
d59 1
a59 1
Relocation section '\.rela\.dyn' at offset .* contains 3 entries:
d61 2
a62 3
0+10010558 +0+200000049 R_PPC64_TPREL64 +0+ gd \+ 0
0+10010560 +0+400000049 R_PPC64_TPREL64 +0+ ld \+ 0
0+10010568 +0+60000004e R_PPC64_DTPREL64 +0+50 ld2 \+ 0
d64 5
a68 1
Symbol table '\.dynsym' contains 10 entries:
d71 1
a71 1
 +1: 0+10010448 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
d73 8
a80 7
 +3: 0+ +0 NOTYPE +GLOBAL DEFAULT +UND \.__tls_get_addr
 +4: 0+ +0 TLS +GLOBAL DEFAULT +UND ld
 +5: 0+10010570 +0 NOTYPE +GLOBAL DEFAULT +ABS __end
 +6: 0+50 +0 TLS +GLOBAL DEFAULT +10 ld2
 +7: 0+10010570 +0 NOTYPE +GLOBAL DEFAULT +ABS __bss_start
 +8: 0+10010570 +0 NOTYPE +GLOBAL DEFAULT +ABS _edata
 +9: 0+10010570 +0 NOTYPE +GLOBAL DEFAULT +ABS _end
d82 1
a82 1
Symbol table '\.symtab' contains 43 entries:
d88 2
a89 2
 +4: 0+100002d8 +0 SECTION LOCAL +DEFAULT +4 
 +5: 0+10000330 +0 SECTION LOCAL +DEFAULT +5 
d91 12
a102 12
 +7: 0+10010410 +0 SECTION LOCAL +DEFAULT +7 
 +8: 0+10010410 +0 SECTION LOCAL +DEFAULT +8 
 +9: 0+10010410 +0 SECTION LOCAL +DEFAULT +9 
 +10: 0+10010448 +0 SECTION LOCAL +DEFAULT +10 
 +11: 0+10010448 +0 SECTION LOCAL +DEFAULT +11 
 +12: 0+10010548 +0 SECTION LOCAL +DEFAULT +12 
 +13: 0+10010548 +0 SECTION LOCAL +DEFAULT +13 
 +14: 0+10010548 +0 SECTION LOCAL +DEFAULT +14 
 +15: 0+10010570 +0 SECTION LOCAL +DEFAULT +15 
 +16: 0+10010570 +0 SECTION LOCAL +DEFAULT +16 
 +17: 0+ +0 SECTION LOCAL +DEFAULT +17 
 +18: 0+ +0 SECTION LOCAL +DEFAULT +18 
d104 26
a129 23
 +20: 0+ +0 TLS +LOCAL +DEFAULT +9 gd4
 +21: 0+8 +0 TLS +LOCAL +DEFAULT +9 ld4
 +22: 0+10 +0 TLS +LOCAL +DEFAULT +9 ld5
 +23: 0+18 +0 TLS +LOCAL +DEFAULT +9 ld6
 +24: 0+20 +0 TLS +LOCAL +DEFAULT +9 ie4
 +25: 0+28 +0 TLS +LOCAL +DEFAULT +9 le4
 +26: 0+30 +0 TLS +LOCAL +DEFAULT +9 le5
 +27: 0+10010448 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
 +28: 0+ +0 TLS +GLOBAL DEFAULT +UND gd
 +29: 0+60 +0 TLS +GLOBAL DEFAULT +10 le0
 +30: 0+ +0 NOTYPE +GLOBAL DEFAULT +UND \.__tls_get_addr
 +31: 0+40 +0 TLS +GLOBAL DEFAULT +10 ld0
 +32: 0+68 +0 TLS +GLOBAL DEFAULT +10 le1
 +33: 0+ +0 TLS +GLOBAL DEFAULT +UND ld
 +34: 0+10000378 +0 NOTYPE +GLOBAL DEFAULT +6 _start
 +35: 0+10010570 +0 NOTYPE +GLOBAL DEFAULT +ABS __end
 +36: 0+50 +0 TLS +GLOBAL DEFAULT +10 ld2
 +37: 0+48 +0 TLS +GLOBAL DEFAULT +10 ld1
 +38: 0+10010570 +0 NOTYPE +GLOBAL DEFAULT +ABS __bss_start
 +39: 0+10010570 +0 NOTYPE +GLOBAL DEFAULT +ABS _edata
 +40: 0+10010570 +0 NOTYPE +GLOBAL DEFAULT +ABS _end
 +41: 0+38 +0 TLS +GLOBAL DEFAULT +10 gd0
 +42: 0+58 +0 TLS +GLOBAL DEFAULT +10 ie0
@

