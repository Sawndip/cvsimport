head	1.37;
access;
symbols
	binutils-2_24-branch:1.37.0.2
	binutils-2_24-branchpoint:1.37
	binutils-2_21_1:1.27
	binutils-2_23_2:1.33.2.1
	binutils-2_23_1:1.33
	binutils-2_23:1.33
	binutils-2_23-branch:1.33.0.2
	binutils-2_23-branchpoint:1.33
	binutils-2_22_branch:1.28.2.1.0.2
	binutils-2_22:1.28.2.1
	binutils-2_22-branch:1.28.0.2
	binutils-2_22-branchpoint:1.28
	binutils-2_21:1.27
	binutils-2_21-branch:1.27.0.2
	binutils-2_21-branchpoint:1.27
	binutils-2_20_1:1.22.8.2
	binutils-2_20:1.22.8.2
	binutils-arc-20081103-branch:1.22.0.10
	binutils-arc-20081103-branchpoint:1.22
	binutils-2_20-branch:1.22.0.8
	binutils-2_20-branchpoint:1.22
	dje-cgen-play1-branch:1.22.0.6
	dje-cgen-play1-branchpoint:1.22
	arc-20081103-branch:1.22.0.4
	arc-20081103-branchpoint:1.22
	binutils-2_19_1:1.22
	binutils-2_19:1.22
	binutils-2_19-branch:1.22.0.2
	binutils-2_19-branchpoint:1.22
	binutils-2_18:1.19.2.1
	binutils-2_18-branch:1.19.0.2
	binutils-2_18-branchpoint:1.19
	binutils-csl-coldfire-4_1-32:1.15.2.1
	binutils-csl-sourcerygxx-4_1-32:1.15.2.1
	binutils-csl-innovasic-fido-3_4_4-33:1.15.2.1
	binutils-csl-sourcerygxx-3_4_4-32:1.10
	binutils-csl-coldfire-4_1-30:1.15
	binutils-csl-sourcerygxx-4_1-30:1.15
	binutils-csl-coldfire-4_1-28:1.15
	binutils-csl-sourcerygxx-4_1-29:1.15.2.1
	binutils-csl-sourcerygxx-4_1-28:1.15
	binutils-csl-arm-2006q3-27:1.15
	binutils-csl-sourcerygxx-4_1-27:1.15
	binutils-csl-arm-2006q3-26:1.15
	binutils-csl-sourcerygxx-4_1-26:1.15
	binutils-csl-sourcerygxx-4_1-25:1.15
	binutils-csl-sourcerygxx-4_1-24:1.15
	binutils-csl-sourcerygxx-4_1-23:1.15
	binutils-csl-sourcerygxx-4_1-21:1.15
	binutils-csl-arm-2006q3-21:1.15
	binutils-csl-sourcerygxx-4_1-22:1.15
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.15
	binutils-csl-sourcerygxx-4_1-20:1.15
	binutils-csl-arm-2006q3-19:1.15
	binutils-csl-sourcerygxx-4_1-19:1.15
	binutils-csl-sourcerygxx-4_1-18:1.15
	binutils-csl-renesas-4_1-9:1.15
	binutils-csl-sourcerygxx-3_4_4-25:1.10
	binutils-csl-renesas-4_1-8:1.15
	binutils-csl-renesas-4_1-7:1.15
	binutils-csl-renesas-4_1-6:1.15
	binutils-csl-sourcerygxx-4_1-17:1.15
	binutils-csl-sourcerygxx-4_1-14:1.15
	binutils-csl-sourcerygxx-4_1-15:1.15
	binutils-csl-sourcerygxx-4_1-13:1.15
	binutils-2_17:1.15
	binutils-csl-sourcerygxx-4_1-12:1.15
	binutils-csl-sourcerygxx-3_4_4-21:1.15
	binutils-csl-wrs-linux-3_4_4-24:1.10
	binutils-csl-wrs-linux-3_4_4-23:1.10
	binutils-csl-sourcerygxx-4_1-9:1.15
	binutils-csl-sourcerygxx-4_1-8:1.15
	binutils-csl-sourcerygxx-4_1-7:1.15
	binutils-csl-arm-2006q1-6:1.15
	binutils-csl-sourcerygxx-4_1-6:1.15
	binutils-csl-wrs-linux-3_4_4-22:1.10
	binutils-csl-coldfire-4_1-11:1.15
	binutils-csl-sourcerygxx-3_4_4-19:1.15
	binutils-csl-coldfire-4_1-10:1.15
	binutils-csl-sourcerygxx-4_1-5:1.15
	binutils-csl-sourcerygxx-4_1-4:1.15
	binutils-csl-wrs-linux-3_4_4-21:1.10
	binutils-csl-morpho-4_1-4:1.15
	binutils-csl-sourcerygxx-3_4_4-17:1.15
	binutils-csl-wrs-linux-3_4_4-20:1.10
	binutils-2_17-branch:1.15.0.4
	binutils-2_17-branchpoint:1.15
	binutils-csl-2_17-branch:1.15.0.2
	binutils-csl-2_17-branchpoint:1.15
	binutils-csl-gxxpro-3_4-branch:1.10.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.10
	binutils-2_16_1:1.10
	binutils-csl-arm-2005q1b:1.10
	binutils-2_16:1.10
	binutils-csl-arm-2005q1a:1.10
	binutils-csl-arm-2005q1-branch:1.10.0.4
	binutils-csl-arm-2005q1-branchpoint:1.10
	binutils-2_16-branch:1.10.0.2
	binutils-2_16-branchpoint:1.10
	csl-arm-2004-q3d:1.9
	csl-arm-2004-q3:1.8
	binutils-2_15:1.5
	binutils-2_15-branchpoint:1.5
	csl-arm-2004-q1a:1.5
	csl-arm-2004-q1:1.5
	binutils-2_15-branch:1.5.0.6
	cagney_bfdfile-20040213-branch:1.5.0.4
	cagney_bfdfile-20040213-branchpoint:1.5
	cagney_bigcore-20040122-branch:1.5.0.2
	cagney_bigcore-20040122-branchpoint:1.5
	csl-arm-2003-q4:1.5
	binutils-2_14:1.2
	binutils-2_14-branch:1.2.0.2
	binutils-2_14-branchpoint:1.2
	binutils_latest_snapshot:1.37;
locks; strict;
comment	@# @;


1.37
date	2013.04.22.03.11.40;	author amodra;	state Exp;
branches;
next	1.36;

1.36
date	2013.01.31.06.28.48;	author amodra;	state Exp;
branches;
next	1.35;

1.35
date	2013.01.15.06.13.26;	author amodra;	state Exp;
branches;
next	1.34;

1.34
date	2012.10.29.09.25.53;	author amodra;	state Exp;
branches;
next	1.33;

1.33
date	2012.06.15.15.13.37;	author amodra;	state Exp;
branches
	1.33.2.1;
next	1.32;

1.32
date	2012.06.06.10.50.17;	author amodra;	state Exp;
branches;
next	1.31;

1.31
date	2012.05.17.02.43.35;	author amodra;	state Exp;
branches;
next	1.30;

1.30
date	2012.05.12.13.46.26;	author hjl;	state Exp;
branches;
next	1.29;

1.29
date	2011.10.10.09.05.41;	author amodra;	state Exp;
branches;
next	1.28;

1.28
date	2011.08.05.06.22.22;	author amodra;	state Exp;
branches
	1.28.2.1;
next	1.27;

1.27
date	2010.07.20.14.08.32;	author amodra;	state Exp;
branches;
next	1.26;

1.26
date	2009.10.02.15.00.30;	author amodra;	state Exp;
branches;
next	1.25;

1.25
date	2009.09.24.15.56.51;	author hjl;	state Exp;
branches;
next	1.24;

1.24
date	2009.09.23.03.12.27;	author amodra;	state Exp;
branches;
next	1.23;

1.23
date	2009.09.18.03.30.34;	author amodra;	state Exp;
branches;
next	1.22;

1.22
date	2007.11.06.13.49.19;	author amodra;	state Exp;
branches
	1.22.8.1;
next	1.21;

1.21
date	2007.09.30.01.33.15;	author vapier;	state Exp;
branches;
next	1.20;

1.20
date	2007.08.13.00.20.59;	author amodra;	state Exp;
branches;
next	1.19;

1.19
date	2007.02.13.01.53.03;	author amodra;	state Exp;
branches
	1.19.2.1;
next	1.18;

1.18
date	2006.10.17.13.41.48;	author amodra;	state Exp;
branches;
next	1.17;

1.17
date	2006.07.10.21.40.25;	author jakub;	state Exp;
branches;
next	1.16;

1.16
date	2006.06.02.07.53.30;	author amodra;	state Exp;
branches;
next	1.15;

1.15
date	2006.02.02.22.53.46;	author hjl;	state Exp;
branches
	1.15.2.1;
next	1.14;

1.14
date	2006.02.02.22.05.55;	author hjl;	state Exp;
branches;
next	1.13;

1.13
date	2005.08.15.15.39.47;	author amodra;	state Exp;
branches;
next	1.12;

1.12
date	2005.07.08.06.22.04;	author amodra;	state Exp;
branches;
next	1.11;

1.11
date	2005.03.21.09.39.54;	author amodra;	state Exp;
branches;
next	1.10;

1.10
date	2005.02.01.04.22.40;	author amodra;	state Exp;
branches;
next	1.9;

1.9
date	2004.10.01.02.19.04;	author amodra;	state Exp;
branches;
next	1.8;

1.8
date	2004.09.22.07.24.13;	author amodra;	state Exp;
branches;
next	1.7;

1.7
date	2004.05.11.17.08.36;	author jakub;	state Exp;
branches;
next	1.6;

1.6
date	2004.05.05.13.31.04;	author amodra;	state Exp;
branches;
next	1.5;

1.5
date	2003.07.29.06.53.41;	author amodra;	state Exp;
branches;
next	1.4;

1.4
date	2003.07.25.01.39.42;	author hjl;	state Exp;
branches;
next	1.3;

1.3
date	2003.06.10.04.36.01;	author amodra;	state Exp;
branches;
next	1.2;

1.2
date	2003.03.10.23.25.13;	author amodra;	state Exp;
branches;
next	1.1;

1.1
date	2003.02.04.14.52.11;	author amodra;	state Exp;
branches;
next	;

1.33.2.1
date	2013.01.21.13.48.52;	author amodra;	state Exp;
branches;
next	;

1.28.2.1
date	2011.10.25.02.58.57;	author amodra;	state Exp;
branches;
next	;

1.22.8.1
date	2009.09.18.03.32.17;	author amodra;	state Exp;
branches;
next	1.22.8.2;

1.22.8.2
date	2009.10.02.15.20.07;	author amodra;	state Exp;
branches;
next	;

1.19.2.1
date	2007.08.15.04.34.01;	author amodra;	state Exp;
branches;
next	;

1.15.2.1
date	2006.11.29.16.31.09;	author shinwell;	state Exp;
branches;
next	;


desc
@@


1.37
log
@bfd/
	* elf64-ppc.c (ppc64_elf_check_relocs): Don't call
	create_linkage_sections here..
	(ppc64_elf_init_stub_bfd): ..do so here.  Return status.
	(create_linkage_sections): Move earlier in file.
	(ppc64_elf_setup_section_lists): Remove now useless htab->brlt test.
	* elf64-ppc.h (ppc64_elf_init_stub_bfd): Update proto.
ld/
	* emultempl/ppc64elf.em (ppc_create_output_section_statements):
	Check return from ppc64_elf_init_stub_bfd.
ld/testsuite/
	* ld-powerpc/tlsexe.d: Adjust.
	* ld-powerpc/tlsexe.r: Adjust.
	* ld-powerpc/tlsexetoc.d: Adjust.
	* ld-powerpc/tlsexetoc.r: Adjust.
	* ld-powerpc/tlsso.d: Adjust.
	* ld-powerpc/tlsso.r: Adjust.
	* ld-powerpc/tlstocso.d: Adjust.
	* ld-powerpc/tlstocso.r: Adjust.
@
text
@#source: tls.s
#as: -a64
#ld: -shared
#readelf: -WSsrl
#target: powerpc64*-*-*

There are [0-9]+ section headers, starting at offset 0x[0-9a-f]+:

Section Headers:
 +\[Nr\] Name +Type +Address +Off +Size +ES Flg Lk Inf Al
 +\[[ 0-9]+\] +NULL +0+ 0+ 0+ 0+ +0 +0 +0
 +\[[ 0-9]+\] \.hash .*
 +\[[ 0-9]+\] \.dynsym .*
 +\[[ 0-9]+\] \.dynstr .*
 +\[[ 0-9]+\] \.rela\.dyn .*
 +\[[ 0-9]+\] \.rela\.plt .*
 +\[[ 0-9]+\] \.text .*
 +\[[ 0-9]+\] \.tdata +PROGBITS .* 0+38 0+ WAT +0 +0 +8
 +\[[ 0-9]+\] \.tbss +NOBITS .* 0+38 0+ WAT +0 +0 +8
 +\[[ 0-9]+\] \.dynamic .*
 +\[[ 0-9]+\] \.got .*
 +\[[ 0-9]+\] \.plt .*
 +\[[ 0-9]+\] \.shstrtab .*
 +\[[ 0-9]+\] \.symtab .*
 +\[[ 0-9]+\] \.strtab .*
#...

Elf file type is DYN \(Shared object file\)
Entry point 0x[0-9a-f]+
There are [0-9]+ program headers, starting at offset [0-9]+

Program Headers:
 +Type +Offset +VirtAddr +PhysAddr +FileSiz +MemSiz +Flg Align
 +LOAD .* R E 0x10000
 +LOAD .* RW +0x10000
 +DYNAMIC .* RW +0x8
 +TLS .* 0x0+38 0x0+70 R +0x8

 Section to Segment mapping:
 +Segment Sections\.\.\.
 +0+ +\.hash \.dynsym \.dynstr \.rela\.dyn \.rela\.plt \.text 
 +01 +\.tdata \.dynamic .got \.plt 
 +02 +\.dynamic 
 +03 +\.tdata \.tbss 

Relocation section '\.rela\.dyn' at offset .* contains 16 entries:
 +Offset +Info +Type +Symbol's Value +Symbol's Name \+ Addend
[0-9a-f ]+R_PPC64_TPREL16 +0+60 le0 \+ 0
[0-9a-f ]+R_PPC64_TPREL16_HA +0+68 le1 \+ 0
[0-9a-f ]+R_PPC64_TPREL16_LO +0+68 le1 \+ 0
[0-9a-f ]+R_PPC64_TPREL16_DS +[0-9a-f]+ \.tdata \+ 28
[0-9a-f ]+R_PPC64_TPREL16_HA +[0-9a-f]+ \.tdata \+ 30
[0-9a-f ]+R_PPC64_TPREL16_LO +[0-9a-f]+ \.tdata \+ 30
[0-9a-f ]+R_PPC64_DTPMOD64 +0
[0-9a-f ]+R_PPC64_DTPREL64 +0
[0-9a-f ]+R_PPC64_DTPREL64 +18
[0-9a-f ]+R_PPC64_DTPMOD64 +0
[0-9a-f ]+R_PPC64_DTPMOD64 +0+ gd \+ 0
[0-9a-f ]+R_PPC64_DTPREL64 +0+ gd \+ 0
[0-9a-f ]+R_PPC64_DTPREL64 +0+50 ld2 \+ 0
[0-9a-f ]+R_PPC64_DTPMOD64 +0+38 gd0 \+ 0
[0-9a-f ]+R_PPC64_DTPREL64 +0+38 gd0 \+ 0
[0-9a-f ]+R_PPC64_TPREL64 +0+58 ie0 \+ 0

Relocation section '\.rela\.plt' at offset .* contains 1 entries:
 +Offset +Info +Type +Symbol's Value +Symbol's Name \+ Addend
[0-9a-f ]+R_PPC64_JMP_SLOT +0+ __tls_get_addr \+ 0

Symbol table '\.dynsym' contains [0-9]+ entries:
 +Num: +Value +Size +Type +Bind +Vis +Ndx +Name
.* NOTYPE +LOCAL +DEFAULT +UND 
.* SECTION +LOCAL +DEFAULT +6 
.* SECTION +LOCAL +DEFAULT +7 
.* TLS +GLOBAL +DEFAULT +UND gd
.* TLS +GLOBAL +DEFAULT +8 le0
.* NOTYPE +GLOBAL +DEFAULT +UND __tls_get_addr
.* TLS +GLOBAL +DEFAULT +8 ld0
.* TLS +GLOBAL +DEFAULT +8 le1
.* TLS +GLOBAL +DEFAULT +UND ld
.* NOTYPE +GLOBAL +DEFAULT +6 _start
.* TLS +GLOBAL +DEFAULT +8 ld2
.* TLS +GLOBAL +DEFAULT +8 ld1
.* NOTYPE +GLOBAL +DEFAULT +11 __bss_start
.* NOTYPE +GLOBAL +DEFAULT +10 _edata
.* NOTYPE +GLOBAL +DEFAULT +11 _end
.* TLS +GLOBAL +DEFAULT +8 gd0
.* TLS +GLOBAL +DEFAULT +8 ie0

Symbol table '\.symtab' contains [0-9]+ entries:
 +Num: +Value +Size +Type +Bind +Vis +Ndx +Name
.* NOTYPE +LOCAL +DEFAULT +UND 
.* SECTION +LOCAL +DEFAULT +1 
.* SECTION +LOCAL +DEFAULT +2 
.* SECTION +LOCAL +DEFAULT +3 
.* SECTION +LOCAL +DEFAULT +4 
.* SECTION +LOCAL +DEFAULT +5 
.* SECTION +LOCAL +DEFAULT +6 
.* SECTION +LOCAL +DEFAULT +7 
.* SECTION +LOCAL +DEFAULT +8 
.* SECTION +LOCAL +DEFAULT +9 
.* SECTION +LOCAL +DEFAULT +10 
.* SECTION +LOCAL +DEFAULT +11 
.* FILE +LOCAL +DEFAULT +ABS .*
.* TLS +LOCAL +DEFAULT +7 gd4
.* TLS +LOCAL +DEFAULT +7 ld4
.* TLS +LOCAL +DEFAULT +7 ld5
.* TLS +LOCAL +DEFAULT +7 ld6
.* TLS +LOCAL +DEFAULT +7 ie4
.* TLS +LOCAL +DEFAULT +7 le4
.* TLS +LOCAL +DEFAULT +7 le5
.* NOTYPE +LOCAL +DEFAULT +UND \.__tls_get_addr
.* FILE +LOCAL +DEFAULT +ABS .*
.* OBJECT +LOCAL +DEFAULT +9 _DYNAMIC
.* NOTYPE +LOCAL +DEFAULT +6 .*\.plt_call\.__tls_get_addr
.* NOTYPE +LOCAL +DEFAULT +6 __glink_PLTresolve
.* TLS +GLOBAL +DEFAULT +UND gd
.* TLS +GLOBAL +DEFAULT +8 le0
.* NOTYPE +GLOBAL +DEFAULT +UND __tls_get_addr
.* TLS +GLOBAL +DEFAULT +8 ld0
.* TLS +GLOBAL +DEFAULT +8 le1
.* TLS +GLOBAL +DEFAULT +UND ld
.* NOTYPE +GLOBAL +DEFAULT +6 _start
.* TLS +GLOBAL +DEFAULT +8 ld2
.* TLS +GLOBAL +DEFAULT +8 ld1
.* NOTYPE +GLOBAL +DEFAULT +11 __bss_start
.* NOTYPE +GLOBAL +DEFAULT +10 _edata
.* NOTYPE +GLOBAL +DEFAULT +11 _end
.* TLS +GLOBAL +DEFAULT +8 gd0
.* TLS +GLOBAL +DEFAULT +8 ie0
@


1.36
log
@bfd/
	* elf64-ppc.c (ppc_stub_name): Trim off trailing "+0".
ld/testsuite/
	* ld-powerpc/tlsexe.d: Update for changed stub names.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexetoc.d: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.d: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlstocso.d: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
@
text
@d114 1
a114 1
.* NOTYPE +LOCAL +DEFAULT +6 00000010\.plt_call\.__tls_get_addr
@


1.35
log
@bfd/
	* elf64-ppc.c (ppc64_elf_size_stubs): Default shared libs to
	plt-thread-safe.
gold/
	* powerpc.cc (Target_powerpc::do_relax): Default shared libs to
	plt-thread-safe.
ld/testsuite/
	* ld-powerpc/tlsso.d: Adjust for plt-thread-safe stubs.
	* ld-powerpc/tlsso.g: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlstocso.d: Likewise.
	* ld-powerpc/tlstocso.g: Likewise.
@
text
@d114 1
a114 1
.* NOTYPE +LOCAL +DEFAULT +6 00000010\.plt_call\.__tls_get_addr\+0
@


1.34
log
@	* ld-powerpc/powerpc.exp: Modify emulation option passed to ld
	when little-endian.
	* ld-powerpc/apuinfo-nul.rd: Update for le output.
	* ld-powerpc/apuinfo.rd: Likewise.
	* ld-powerpc/plt1.d: Likewise.
	* ld-powerpc/relax.d: Likewise.
	* ld-powerpc/relaxr.d: Likewise.
	* ld-powerpc/sdadyn.d: Likewise.
	* ld-powerpc/tls.d: Likewise.
	* ld-powerpc/tls.g: Likewise.
	* ld-powerpc/tls.t: Likewise.
	* ld-powerpc/tls32.d: Likewise.
	* ld-powerpc/tls32.g: Likewise.
	* ld-powerpc/tls32.t: Likewise.
	* ld-powerpc/tlsexe.d: Likewise.
	* ld-powerpc/tlsexe.g: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexe.t: Likewise.
	* ld-powerpc/tlsexe32.d: Likewise.
	* ld-powerpc/tlsexe32.g: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsexe32.t: Likewise.
	* ld-powerpc/tlsexetoc.d: Likewise.
	* ld-powerpc/tlsexetoc.g: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsexetoc.t: Likewise.
	* ld-powerpc/tlsmark.d: Likewise.
	* ld-powerpc/tlsmark32.d: Likewise.
	* ld-powerpc/tlsopt1.d: Likewise.
	* ld-powerpc/tlsopt1_32.d: Likewise.
	* ld-powerpc/tlsopt2.d: Likewise.
	* ld-powerpc/tlsopt2_32.d: Likewise.
	* ld-powerpc/tlsopt3.d: Likewise.
	* ld-powerpc/tlsopt3_32.d: Likewise.
	* ld-powerpc/tlsopt4.d: Likewise.
	* ld-powerpc/tlsopt4_32.d: Likewise.
	* ld-powerpc/tlsso.d: Likewise.
	* ld-powerpc/tlsso.g: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso.t: Likewise.
	* ld-powerpc/tlsso32.d: Likewise.
	* ld-powerpc/tlsso32.g: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlsso32.t: Likewise.
	* ld-powerpc/tlstoc.d: Likewise.
	* ld-powerpc/tlstoc.g: Likewise.
	* ld-powerpc/tlstoc.t: Likewise.
	* ld-powerpc/tlstocso.d: Likewise.
	* ld-powerpc/tlstocso.g: Likewise.
	* ld-powerpc/tlstocso.t: Likewise.
	* ld-powerpc/tocopt.out: Likewise.
@
text
@d51 3
a53 3
[0-9a-f ]+R_PPC64_TPREL16_DS +0+105f8 \.tdata \+ 28
[0-9a-f ]+R_PPC64_TPREL16_HA +0+105f8 \.tdata \+ 30
[0-9a-f ]+R_PPC64_TPREL16_LO +0+105f8 \.tdata \+ 30
@


1.33
log
@ld/
	* ldlang.h (lang_output_section_statement_type): Add after_end field.
	(lang_abs_symbol_at_beginning_of, lang_abs_symbol_at_end_of): Delete.
	(section_for_dot): Declare.
	* ldlang.c (lang_size_sections_1): Correct comment.
	(current_section): Move earlier.
	(current_assign, prefer_next_section): New static vars.
	(lang_do_assignments_1): Add found_end param.  Detect _end
	assignment to set found_end.  Set os->after_end.  Set above statics.
	(lang_do_assignments): Adjust lang_do_assignments_1 call.  Init
	vars.
	(section_for_dot): New function.
	(lang_set_startof): Don't make an absolute symbol.
	(lang_abs_symbol_at_beginning_of, lang_abs_symbol_at_end_of): Delete.
	* ldexp.c (new_rel_from_abs): Use section_for_dot.
	* emultempl/lnk960.em (symbol_at_beginning_of): New function.
	(symbol_at_end_of): Likewise.
	(lnk960_after_allocation): Use them.
	* scripttempl/elf.sc: Precede OTHER_GOT_SYMBOLS with . = .; and
	likewise before __bss_start.

ld/testsuite/
Update far too many tests.
@
text
@d3 1
a3 1
#ld: -shared -melf64ppc
@


1.33.2.1
log
@	PR 12549
	PR 14493
	PR 14567
	PR 14662
	PR 14758
	PR 14813
	PR 14904
	PR 14915
	PR 14926
	PR 14950
	PR 14962
	Apply mainline patches
@
text
@d3 1
a3 1
#ld: -shared
d51 3
a53 3
[0-9a-f ]+R_PPC64_TPREL16_DS +[0-9a-f]+ \.tdata \+ 28
[0-9a-f ]+R_PPC64_TPREL16_HA +[0-9a-f]+ \.tdata \+ 30
[0-9a-f ]+R_PPC64_TPREL16_LO +[0-9a-f]+ \.tdata \+ 30
@


1.32
log
@bfd/
	* elflink.c (elf_link_input_bfd): Provide a file symbol for
	each input file with local syms, if the input lacks such.
	(bfd_elf_final_link): Add a file symbol to mark end of locals
	for which we can associate with input files.
	(struct elf_final_link_info): Add filesym_count field.
	(struct elf_outext_info): Add need_second_pass and second_pass.
	(elf_link_output_extsym): Detect symbols defined in the output
	file, emit them on second pass over locals.
ld/testsuite/
Update to suit added STT_FILE symbols.
@
text
@d83 3
a85 3
.* NOTYPE +GLOBAL +DEFAULT +ABS __bss_start
.* NOTYPE +GLOBAL +DEFAULT +ABS _edata
.* NOTYPE +GLOBAL +DEFAULT +ABS _end
d125 3
a127 3
.* NOTYPE +GLOBAL +DEFAULT +ABS __bss_start
.* NOTYPE +GLOBAL +DEFAULT +ABS _edata
.* NOTYPE +GLOBAL +DEFAULT +ABS _end
@


1.31
log
@bfd/
	* elf32-ppc.c (ppc_elf_finish_dynamic_symbol): Don't make _DYNAMIC,
	_GLOBAL_OFFSET_TABLE_ or _PROCEDURE_LINKAGE_TABLE_ absolute.
	* elf64-ppc.c (ppc64_elf_finish_dynamic_symbol): Don't make _DYNAMIC
	absolute.
ld/testsuite/
	* ld-powerpc/tlsso.r: Update for dynamic sym changes.
	* ld-powerpc/tlsso32.d: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
@
text
@d103 1
d111 2
a115 1
.* NOTYPE +LOCAL +DEFAULT +UND \.__tls_get_addr
@


1.30
log
@Adjust testcases for readelf addend change

gas/testsuite/

	* gas/mips/elf-rel10.d: Updated.
	* gas/mips/elf-rel22.d: Likewise.
	* gas/mmix/comment-1.d: Likewise.

ld/testsuite/

	* ld-alpha/tlspic.rd: Updated.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/vxworks1-lib.rd: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-sh/shared-1.d: Likewise.
	* ld-sh/tlspic-2.d: Likewise.
	* ld-sparc/tlssunnopic32.rd: Likewise.
	* ld-sparc/tlssunnopic64.rd: Likewise.
	* ld-sparc/tlssunpic32.rd: Likewise.
	* ld-sparc/tlssunpic64.rd: Likewise.
@
text
@d110 1
a110 1
.* OBJECT +LOCAL +DEFAULT +ABS _DYNAMIC
@


1.29
log
@ld/
	* emultempl/ppc64elf.em (ppc_add_stub_section): Align to 32 bytes.
ld/testsuite/
	* ld-powerpc/relbrlt.d: Update for stub alignment change.
	* ld-powerpc/tlsexe.g: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexetoc.g: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.g: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
@
text
@d54 4
a57 4
[0-9a-f ]+R_PPC64_DTPMOD64 +0+
[0-9a-f ]+R_PPC64_DTPREL64 +0+
[0-9a-f ]+R_PPC64_DTPREL64 +0+18
[0-9a-f ]+R_PPC64_DTPMOD64 +0+
@


1.28
log
@bfd/
	* elf64-ppc.c (maybe_strip_output): New function.
	(ppc64_elf_size_stubs): Use it to strip .branch_lt and .eh_frame.
ld/testsuite/
	* ld-powerpc/tlsexe.r: Update for stripped .branch_lt.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
@
text
@d51 3
a53 3
[0-9a-f ]+R_PPC64_TPREL16_DS +0+105f0 \.tdata \+ 28
[0-9a-f ]+R_PPC64_TPREL16_HA +0+105f0 \.tdata \+ 30
[0-9a-f ]+R_PPC64_TPREL16_LO +0+105f0 \.tdata \+ 30
@


1.28.2.1
log
@ld/
	2011-10-10  Alan Modra  <amodra@@gmail.com>
	* emultempl/ppc64elf.em (ppc_add_stub_section): Align to 32 bytes.
ld/testsuite/
	2011-10-10  Alan Modra  <amodra@@gmail.com>
	* ld-powerpc/relbrlt.d: Update for stub alignment change.
	* ld-powerpc/tlsexe.g: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexetoc.g: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.g: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
@
text
@d51 3
a53 3
[0-9a-f ]+R_PPC64_TPREL16_DS +0+105f8 \.tdata \+ 28
[0-9a-f ]+R_PPC64_TPREL16_HA +0+105f8 \.tdata \+ 30
[0-9a-f ]+R_PPC64_TPREL16_LO +0+105f8 \.tdata \+ 30
@


1.27
log
@include/elf/
	* internal.h (ELF_TBSS_SPECIAL): New macro, extracted from..
	(ELF_SECTION_SIZE): ..here.
	(ELF_SECTION_IN_SEGMENT_1): Add "strict" arg.
	(ELF_SECTION_IN_SEGMENT_STRICT): New macro.
bfd/
	* elf.c (assign_file_positions_for_load_sections): Check that
	zero size sections are allocated in segments too.
	(assign_file_positions_for_non_load_sections): Warn if zero
	size alloc sections are found here.
	(copy_elf_program_header): Don't drop zero size sections from
	segment map.
	(copy_private_bfd_data): Check for changes in zero size sections.
binutils/
	* readelf.c (process_program_headers): Don't ignore all zero size
	sections.
ld/testsuite/
	* ld-powerpc/tlsexe.r: Update.
	* ld-powerpc/tlsexetoc.r: Update.
	* ld-powerpc/tlsso.r: Update.
	* ld-powerpc/tlstocso.r: Update.
@
text
@a20 1
 +\[[ 0-9]+\] \.branch_lt .*
d42 1
a42 1
 +01 +\.tdata \.dynamic (\.branch_lt |)\.got \.plt 
a102 1
.* SECTION +LOCAL +DEFAULT +12 
@


1.26
log
@ld/
	* emultempl/ppc32elf.em (emit_stub_syms): Init to -1.
	(ppc_after_open): Set emit_stubs_syms by default when shared.
	(OPTION_NO_STUBSYMS): Define.
	(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS,
	PARSE_AND_LIST_ARGS_CASES): Handle --no-emit-stub-syms.
	* emultempl/ppc64elf.em (emit_stub_syms): Init to -1.
	(gld${EMULATION_NAME}_finish): Set emit_stubs_syms by default.
	(OPTION_NO_STUBSYMS): Define.
	(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS,
	PARSE_AND_LIST_ARGS_CASES): Handle --no-emit-stub-syms.
ld/testsuite/
	* ld-powerpc/tlsexe.d: Update.
	* ld-powerpc/tlsexe.r: Update.
	* ld-powerpc/tlsexetoc.d: Update.
	* ld-powerpc/tlsexetoc.r: Update.
	* ld-powerpc/tlsso.d: Update.
	* ld-powerpc/tlsso.r: Update.
	* ld-powerpc/tlstocso.d: Update.
	* ld-powerpc/tlstocso.r: Update.
@
text
@d43 1
a43 1
 +01 +\.tdata \.dynamic \.got \.plt 
@


1.25
log
@bfd/

2009-09-24  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/10630
	* elflink.c (elf_link_output_extsym): Turn off visibility on
	local symbol.
	(bfd_elf_final_link): Turn off visibility on dynamic local
	symbol.

ld/testsuite/

2009-09-24  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/10630
	* ld-alpha/tlsbin.rd: Remove HIDDEN/.hidden on local symbols.
	* ld-alpha/tlsbinr.rd: Likewise.
	* ld-alpha/tlspic.rd: Likewise.
	* ld-cris/libdso-2.d: Likewise.
	* ld-cris/locref1.d: Likewise.
	* ld-cris/locref2.d: Likewise.
	* ld-cris/tls-e-20a.d: Likewise.
	* ld-cris/tls-e-20.d: Likewise.
	* ld-cris/tls-e-80.d: Likewise.
	* ld-cris/tls-gc-68.d: Likewise.
	* ld-cris/tls-gc-69.d: Likewise.
	* ld-cris/tls-gc-70.d: Likewise.
	* ld-cris/tls-gc-75.d: Likewise.
	* ld-cris/tls-gc-76.d: Likewise.
	* ld-cris/tls-gc-79.d: Likewise.
	* ld-cris/tls-gd-1h.d: Likewise.
	* ld-cris/tls-gd-2h.d: Likewise.
	* ld-cris/tls-ld-4.d: Likewise.
	* ld-cris/tls-ld-5.d: Likewise.
	* ld-cris/tls-ld-6.d: Likewise.
	* ld-cris/tls-ld-7.d: Likewise.
	* ld-cris/tls-ldgd-14.d: Likewise.
	* ld-cris/tls-ldgd-15.d: Likewise.
	* ld-cris/tls-local-63.d: Likewise.
	* ld-cris/tls-local-64.d: Likewise.
	* ld-elf/pr9676.rd: Likewise.
	* ld-elf/pr9679.rd: Likewise.
	* ld-elfvsb/hidden2.d: Likewise.
	* ld-i386/tlsbindesc.rd: Likewise.
	* ld-i386/tlsbin.rd: Likewise.
	* ld-i386/tlsdesc.rd: Likewise.
	* ld-i386/tlsgdesc.rd: Likewise.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlspic.rd: Likewise.
	* ld-ia64/tlsbin.rd: Likewise.
	* ld-ia64/tlspic.rd: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-sparc/gotop32.rd: Likewise.
	* ld-sparc/gotop64.rd: Likewise.
	* ld-sparc/tlssunbin32.rd: Likewise.
	* ld-sparc/tlssunbin64.rd: Likewise.
	* ld-sparc/tlssunnopic32.rd: Likewise.
	* ld-sparc/tlssunnopic64.rd: Likewise.
	* ld-sparc/tlssunpic32.rd: Likewise.
	* ld-sparc/tlssunpic64.rd: Likewise.
	* ld-x86-64/tlsbindesc.rd: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-x86-64/tlsdesc.rd: Likewise.
	* ld-x86-64/tlsgdesc.rd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
	* ld-xtensa/tlsbin.rd: Likewise.
	* ld-xtensa/tlspic.rd: Likewise.

	* ld-elf/local1.d: New.
	* ld-elf/local1.map: Likewise.
	* ld-elf/local1.s: Likewise.
	* ld-ia64/local1.d: Likewise.
	* ld-ia64/local1.map: Likewise.
	* ld-ia64/local1.s: Likewise.
@
text
@d113 2
@


1.24
log
@Tolerate some whitespace differences in readelf output.
@
text
@d112 1
a112 1
.* OBJECT +LOCAL +HIDDEN +ABS _DYNAMIC
@


1.23
log
@bfd/
	* elf64-ppc.c (follow_link, elf_follow_link, ppc_follow_link): New
	functions.  Use throughout.
	(ppc64_elf_copy_indirect_symbol): Set direct symbol "oh" field
	from indirect symbol.
	(lookup_fdh): Rename from get_fdh.  Follow indirect sym links.
	(add_symbol_adjust): Simplify.
	(defined_code_entry, defined_func_desc): New functions.
	(ppc64_elf_gc_keep): Follow indirect sym links.  Use defined_code_entry.
	(ppc64_elf_gc_mark_dynamic_ref): Use defined_func_desc and
	defined_code_entry to follow indirect sym links.
	(ppc64_elf_gc_mark_hook, func_desc_adjust): Likewise.
	(ppc_type_of_stub): Follow indirect sym links.
	(toc_adjusting_stub_needed): Likewise.
	(ppc_build_one_stub): Likewise.  Make undefined dot-symbols weak
	rather than defining them at stub.
	(ppc64_elf_relocate_section): Rewrite call test to avoid multiple
	assignments in test.
ld/testsuite/
	* ld-powerpc/tlsso.d: Update.
	* ld-powerpc/tlsso.r: Update.
	* ld-powerpc/tlstocso.d: Update.
	* ld-powerpc/tlstocso.r: Update.
@
text
@d71 1
a71 1
 +Num: +Value +Size Type +Bind +Vis +Ndx Name
d73 16
a88 16
.* SECTION LOCAL +DEFAULT +6 
.* SECTION LOCAL +DEFAULT +7 
.* TLS +GLOBAL DEFAULT +UND gd
.* TLS +GLOBAL DEFAULT +8 le0
.* NOTYPE +GLOBAL DEFAULT +UND __tls_get_addr
.* TLS +GLOBAL DEFAULT +8 ld0
.* TLS +GLOBAL DEFAULT +8 le1
.* TLS +GLOBAL DEFAULT +UND ld
.* NOTYPE +GLOBAL DEFAULT +6 _start
.* TLS +GLOBAL DEFAULT +8 ld2
.* TLS +GLOBAL DEFAULT +8 ld1
.* NOTYPE +GLOBAL DEFAULT +ABS __bss_start
.* NOTYPE +GLOBAL DEFAULT +ABS _edata
.* NOTYPE +GLOBAL DEFAULT +ABS _end
.* TLS +GLOBAL DEFAULT +8 gd0
.* TLS +GLOBAL DEFAULT +8 ie0
d91 1
a91 1
 +Num: +Value +Size Type +Bind +Vis +Ndx Name
d93 12
a104 12
.* SECTION LOCAL +DEFAULT +1 
.* SECTION LOCAL +DEFAULT +2 
.* SECTION LOCAL +DEFAULT +3 
.* SECTION LOCAL +DEFAULT +4 
.* SECTION LOCAL +DEFAULT +5 
.* SECTION LOCAL +DEFAULT +6 
.* SECTION LOCAL +DEFAULT +7 
.* SECTION LOCAL +DEFAULT +8 
.* SECTION LOCAL +DEFAULT +9 
.* SECTION LOCAL +DEFAULT +10 
.* SECTION LOCAL +DEFAULT +11 
.* SECTION LOCAL +DEFAULT +12 
d114 14
a127 14
.* TLS +GLOBAL DEFAULT +UND gd
.* TLS +GLOBAL DEFAULT +8 le0
.* NOTYPE +GLOBAL DEFAULT +UND __tls_get_addr
.* TLS +GLOBAL DEFAULT +8 ld0
.* TLS +GLOBAL DEFAULT +8 le1
.* TLS +GLOBAL DEFAULT +UND ld
.* NOTYPE +GLOBAL DEFAULT +6 _start
.* TLS +GLOBAL DEFAULT +8 ld2
.* TLS +GLOBAL DEFAULT +8 ld1
.* NOTYPE +GLOBAL DEFAULT +ABS __bss_start
.* NOTYPE +GLOBAL DEFAULT +ABS _edata
.* NOTYPE +GLOBAL DEFAULT +ABS _end
.* TLS +GLOBAL DEFAULT +8 gd0
.* TLS +GLOBAL DEFAULT +8 ie0
@


1.22
log
@bfd/
	* elf64-ppc.c (ppc64_elf_check_relocs): Don't refcount tlsld_got here..
	(ppc64_elf_gc_sweep_hook): ..or here..
	(ppc64_elf_tls_optimize): ..or here.  Make two passes through the
	relocs, ensuring that tls_get_addr calls follow gd and ld relocs.
	(allocate_dynrelocs): Refcount tlsld_got here.
	(ppc64_elf_size_dynamic_sections): Allocate local got and call
	allocate_dynrelocs before allocating tlsld_got.
	(ppc64_elf_relocate_section): Remove check that a tls_get_addr
	call follows gd and ld relocs.
ld/testsuite/
	* ld-powerpc/tlsso.d: Update for changed got alloc order.
	* ld-powerpc/tlsso.r: Likewise.
@
text
@d113 1
a113 1
.* NOTYPE +LOCAL +DEFAULT +6 \.__tls_get_addr
@


1.22.8.1
log
@bfd/
	* elf64-ppc.c (follow_link, elf_follow_link, ppc_follow_link): New
	functions.  Use throughout.
	(ppc64_elf_copy_indirect_symbol): Set direct symbol "oh" field
	from indirect symbol.
	(lookup_fdh): Rename from get_fdh.  Follow indirect sym links.
	(add_symbol_adjust): Simplify.
	(defined_code_entry, defined_func_desc): New functions.
	(ppc64_elf_gc_keep): Follow indirect sym links.  Use defined_code_entry.
	(ppc64_elf_gc_mark_dynamic_ref): Use defined_func_desc and
	defined_code_entry to follow indirect sym links.
	(ppc64_elf_gc_mark_hook, func_desc_adjust): Likewise.
	(ppc_type_of_stub): Follow indirect sym links.
	(toc_adjusting_stub_needed): Likewise.
	(ppc_build_one_stub): Likewise.  Make undefined dot-symbols weak
	rather than defining them at stub.
	(ppc64_elf_relocate_section): Rewrite call test to avoid multiple
	assignments in test.
ld/testsuite/
	* ld-powerpc/tlsso.d: Update.
	* ld-powerpc/tlsso.r: Update.
	* ld-powerpc/tlstocso.d: Update.
	* ld-powerpc/tlstocso.r: Update.
@
text
@d113 1
a113 1
.* NOTYPE +LOCAL +DEFAULT +UND \.__tls_get_addr
@


1.22.8.2
log
@ld/
	* emultempl/ppc32elf.em (emit_stub_syms): Init to -1.
	(ppc_after_open): Set emit_stubs_syms by default when shared.
	(OPTION_NO_STUBSYMS): Define.
	(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS,
	PARSE_AND_LIST_ARGS_CASES): Handle --no-emit-stub-syms.
	* emultempl/ppc64elf.em (emit_stub_syms): Init to -1.
	(gld${EMULATION_NAME}_finish): Set emit_stubs_syms by default.
	(OPTION_NO_STUBSYMS): Define.
	(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS,
	PARSE_AND_LIST_ARGS_CASES): Handle --no-emit-stub-syms.
ld/testsuite/
	* ld-powerpc/tlsexe.d: Update.
	* ld-powerpc/tlsexe.r: Update.
	* ld-powerpc/tlsexetoc.d: Update.
	* ld-powerpc/tlsexetoc.r: Update.
	* ld-powerpc/tlsso.d: Update.
	* ld-powerpc/tlsso.r: Update.
	* ld-powerpc/tlstocso.d: Update.
	* ld-powerpc/tlstocso.r: Update.
@
text
@a112 2
.* NOTYPE +LOCAL +DEFAULT +6 00000010\.plt_call\.__tls_get_addr\+0
.* NOTYPE +LOCAL +DEFAULT +6 __glink_PLTresolve
@


1.21
log
@2007-09-29  Mike Frysinger  <vapier@@gentoo.org>

	* ld-alpha/tlsbin.rd: Use [0-9]+ to match section header count and
	0x[0-9a-f]+ to match section header offset.  Match section indexes
	with \[[ 0-9]+\].  Use [0-9]+ to match program header count and
	0x[0-9a-f]+ to match program header offset.  Match .dynsym and
	.symtab entry counts with [0-9]+.
	* ld-alpha/tlsbinr.rd: Likewise.
	* ld-alpha/tlspic.rd: Likewise.
	* ld-i386/tlsbin.rd: Likewise.
	* ld-i386/tlsbindesc.rd: Likewise.
	* ld-i386/tlsdesc.rd: Likewise.
	* ld-i386/tlsgdesc.rd: Likewise.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlspic.rd: Likewise.
	* ld-ia64/tlsbin.rd: Likewise.
	* ld-ia64/tlspic.rd: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-sparc/tlssunbin32.rd: Likewise.
	* ld-sparc/tlssunbin64.rd: Likewise.
	* ld-sparc/tlssunnopic32.rd: Likewise.
	* ld-sparc/tlssunnopic64.rd: Likewise.
	* ld-sparc/tlssunpic32.rd: Likewise.
	* ld-sparc/tlssunpic64.rd: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-x86-64/tlsbindesc.rd: Likewise.
	* ld-x86-64/tlsdesc.rd: Likewise.
	* ld-x86-64/tlsgdesc.rd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
@
text
@a55 1
[0-9a-f ]+R_PPC64_DTPMOD64 +0+
d58 1
@


1.20
log
@bfd/
	* elf64-ppc.c (ADDI_R12_R12, LD_R11_0R2, LD_R2_0R2): Define.
	Update stub comments.
	(build_plt_stub): Build two variants, one without "addis".
	(ppc_build_one_stub): Build stubs without "addis" if possible.
	(ppc_size_one_stub): Size new stubs.
ld/testsuite/
	* ld-powerpc/relbrlt.s (.text.pad2): Adjust space.
	* ld-powerpc/relbrlt.d: Update.
	* ld-powerpc/tlsexe.d: Update.
	* ld-powerpc/tlsexe.g: Update.
	* ld-powerpc/tlsexe.r: Update.
	* ld-powerpc/tlsexetoc.d: Update.
	* ld-powerpc/tlsexetoc.g: Update.
	* ld-powerpc/tlsexetoc.r: Update.
	* ld-powerpc/tlsso.d: Update.
	* ld-powerpc/tlsso.g: Update.
	* ld-powerpc/tlsso.r: Update.
	* ld-powerpc/tlstocso.d: Update.
	* ld-powerpc/tlstocso.g: Update.
@
text
@d7 1
a7 1
There are 16 section headers.*
d11 16
a26 16
 +\[ 0\] +NULL +0+ 0+ 0+ 0+ +0 +0 +0
 +\[ 1\] \.hash .*
 +\[ 2\] \.dynsym .*
 +\[ 3\] \.dynstr .*
 +\[ 4\] \.rela\.dyn .*
 +\[ 5\] \.rela\.plt .*
 +\[ 6\] \.text .*
 +\[ 7\] \.tdata +PROGBITS .* 0+38 0+ WAT +0 +0 +8
 +\[ 8\] \.tbss +NOBITS .* 0+38 0+ WAT +0 +0 +8
 +\[ 9\] \.dynamic .*
 +\[10\] \.branch_lt .*
 +\[11\] \.got .*
 +\[12\] \.plt .*
 +\[13\] \.shstrtab .*
 +\[14\] \.symtab .*
 +\[15\] \.strtab .*
d31 1
a31 1
There are 4 program headers.*
d70 1
a70 1
Symbol table '\.dynsym' contains .* entries:
d90 1
a90 1
Symbol table '\.symtab' contains .* entries:
@


1.19
log
@bfd/
	* elf64-ppc.c (create_linkage_sections): Use section ".branch_lt"
	for branch lookup table.
ld/
	* emulparams/elf64ppc.sh (OTHER_READWRITE_SECTIONS): Add ".branch_lt".
	* emultempl/ppc64elf.em (ppc_add_stub_section): Create without
	SEC_RELOC flag set.
ld/testsuite/
	* ld-powerpc/relbrlt.d: Update.
	* ld-powerpc/tlsexe.r: Update.
	* ld-powerpc/tlsexetoc.r: Update.
	* ld-powerpc/tlsso.r: Update.
	* ld-powerpc/tlstocso.r: Update.
@
text
@d52 3
a54 3
[0-9a-f ]+R_PPC64_TPREL16_DS +0+105f8 \.tdata \+ 28
[0-9a-f ]+R_PPC64_TPREL16_HA +0+105f8 \.tdata \+ 30
[0-9a-f ]+R_PPC64_TPREL16_LO +0+105f8 \.tdata \+ 30
@


1.19.2.1
log
@bfd/
	* elf64-ppc.c (ADDI_R12_R12, LD_R11_0R2, LD_R2_0R2): Define.
	Update stub comments.
	(build_plt_stub): Build two variants, one without "addis".
	(ppc_build_one_stub): Build stubs without "addis" if possible.
	(ppc_size_one_stub): Size new stubs.
ld/testsuite/
	* ld-powerpc/relbrlt.s (.text.pad2): Adjust space.
	* ld-powerpc/relbrlt.d: Update.
	* ld-powerpc/tlsexe.d: Update.
	* ld-powerpc/tlsexe.g: Update.
	* ld-powerpc/tlsexe.r: Update.
	* ld-powerpc/tlsexetoc.d: Update.
	* ld-powerpc/tlsexetoc.g: Update.
	* ld-powerpc/tlsexetoc.r: Update.
	* ld-powerpc/tlsso.d: Update.
	* ld-powerpc/tlsso.g: Update.
	* ld-powerpc/tlsso.r: Update.
	* ld-powerpc/tlstocso.d: Update.
	* ld-powerpc/tlstocso.g: Update.
@
text
@d52 3
a54 3
[0-9a-f ]+R_PPC64_TPREL16_DS +0+105f0 \.tdata \+ 28
[0-9a-f ]+R_PPC64_TPREL16_HA +0+105f0 \.tdata \+ 30
[0-9a-f ]+R_PPC64_TPREL16_LO +0+105f0 \.tdata \+ 30
@


1.18
log
@bfd/
	* elf-bfd.h (struct elf_link_hash_table): Reorder.  Add
	text_index_section and data_index_section.
	(struct elf_backend_data): Add elf_backend_init_index_section.
	(_bfd_elf_init_1_index_section): Declare.
	(_bfd_elf_init_2_index_sections): Declare.
	* elfxx-target.h (elf_backend_init_index_section): Define.
	(elfNN_bed): Init new field.
	* elflink.c (_bfd_elf_link_omit_section_dynsym): Keep first tls
	section and text_index_section plus data_index_section.
	(_bfd_elf_link_renumber_dynsyms): Clear dynindx on omitted sections.
	(_bfd_elf_init_1_index_section): New function.
	(_bfd_elf_init_2_index_sections): New function.
	(bfd_elf_size_dynsym_hash_dynstr): Call elf_backend_init_index_section.
	(elf_link_input_bfd): When emitting relocs, use text_index_section
	and data_index_section for removed sections.
	* elf-m10300.c (elf_backend_omit_section_dynsym): Define.
	* elf32-i386.c: Likewise.
	* elf32-m32r.c: Likewise.
	* elf32-sh.c: Likewise.
	* elf32-xstormy16.c: Likewise.
	* elf32-xtensa.c: Likewise.
	* elf64-alpha.c: Likewise.
	* elf64-hppa.c: Likewise.
	* elf64-mmix.c: Likewise.
	* elf64-sh64.c: Likewise.
	* elfxx-ia64.c: Likewise.
	* elf32-arm.c (elf32_arm_final_link_relocate): Use text_index_section
	and data_index_section sym for relocs against sections with no dynamic
	section sym.
	(elf_backend_init_index_section): Define.
	* elf32-cris.c: Similarly.
	* elf32-hppa.c: Similarly.
	* elf32-i370.c: Similarly.
	* elf32-m68k.c: Similarly.
	* elf32-mips.c: Similarly.
	* elf32-ppc.c: Similarly.
	* elf32-s390.c: Similarly.
	* elf32-sparc.c: Similarly.
	* elf32-vax.c: Similarly.
	* elf64-mips.c: Similarly.
	* elf64-ppc.c: Similarly.
	* elf64-s390.c: Similarly.
	* elf64-sparc.c: Similarly.
	* elf64-x86-64.c: Similarly.
	* elfn32-mips.c: Similarly.
	* elfxx-mips.c: Similarly.
	* elfxx-sparc.c: Similarly.
	* linker.c (fix_syms): Base symbols in removed sections on
	previous section in preference to using absolute section.

ld/
	* ldlang.c (strip_excluded_output_sections): Do strip sections
	that define syms, but don't ignore them.
	* ld.texinfo (Output Section Discarding): Revise.
	* emultempl/armcoff.em (gld${EMULATION_NAME}_finish): Always call
	finish_default.

ld/testsuite/
	Update for section sym changes.
@
text
@d20 2
a21 2
 +\[ 9\] \.data\.rel\.ro .*
 +\[10\] \.dynamic .*
@


1.17
log
@include/
	* bfdlink.h (struct bfd_link_info): Add emit_hash and
	emit_gnu_hash bitfields.
include/elf/
	* common.h (SHT_GNU_HASH, DT_GNU_HASH): Define.
ld/
	* scripttempl/elf.sc: Add .gnu.hash section.
	* emultempl/elf32.em (OPTION_HASH_STYLE): Define.
	(gld${EMULATION_NAME}_add_options): Register --hash-style option.
	(gld${EMULATION_NAME}_handle_option): Handle it.
	(gld${EMULATION_NAME}_list_options): Document it.
	* ldmain.c (main): Initialize emit_hash and emit_gnu_hash.
	* ld.texinfo: Document --hash-style option.
bfd/
	* elf.c (_bfd_elf_print_private_bfd_data): Handle DT_GNU_HASH.
	(bfd_section_from_shdr, elf_fake_sections, assign_section_numbers):
	Handle SHT_GNU_HASH.
	(special_sections_g): Include .gnu.hash section.
	(bfd_elf_gnu_hash): New function.
	* elf-bfd.h (bfd_elf_gnu_hash, _bfd_elf_hash_symbol): New prototypes.
	(struct elf_backend_data): Add elf_hash_symbol method.
	* elflink.c (_bfd_elf_link_create_dynamic_sections): Create .hash
	only if info->emit_hash, create .gnu.hash section if
	info->emit_gnu_hash.
	(struct collect_gnu_hash_codes): New type.
	(elf_collect_gnu_hash_codes, elf_renumber_gnu_hash_syms,
	_bfd_elf_hash_symbol): New functions.
	(compute_bucket_count): Don't compute HASHCODES array, instead add
	that and NSYMS as arguments.  Use bed->s->sizeof_hash_entry
	instead of bed->s->arch_size / 8.  Fix .hash size estimation.
	When not optimizing, use the number of hashed symbols rather than
	dynsymcount.
	(bfd_elf_size_dynamic_sections): Only add DT_HASH if info->emit_hash,
	and ADD DT_GNU_HASH if info->emit_gnu_hash.
	(bfd_elf_size_dynsym_hash_dynstr): Size .hash only if info->emit_hash,
	adjust compute_bucket_count caller.  Create and populate .gnu.hash
	section if info->emit_gnu_hash.
	(elf_link_output_extsym): Only populate .hash section if
	finfo->hash_sec != NULL.
	(bfd_elf_final_link): Adjust assertion.  Handle DT_GNU_HASH.
	* elfxx-target.h (elf_backend_hash_symbol): Define if not yet defined.
	(elfNN_bed): Add elf_backend_hash_symbol.
	* elf64-x86-64.c (elf64_x86_64_hash_symbol): New function.
	(elf_backend_hash_symbol): Define.
	* elf32-i386.c (elf_i386_hash_symbol): New function.
	(elf_backend_hash_symbol): Define.
binutils/
	* readelf.c (get_dynamic_type): Handle DT_GNU_HASH.
	(get_section_type_name): Handle SHT_GNU_HASH.
	(dynamic_info_DT_GNU_HASH): New variable.
	(process_dynamic_section): Handle DT_GNU_HASH.
	(process_symbol_table): Print also DT_GNU_HASH histogram.
ld/testsuite/
	* ld-powerpc/tlsso32.r: Adjust.
	* ld-powerpc/tlsso32.d: Adjust.
	* ld-powerpc/tlsso32.g: Adjust.
	* ld-powerpc/tlsso.r: Adjust.
	* ld-powerpc/tlsso.g: Adjust.
	* ld-powerpc/tlstocso.g: Adjust.
@
text
@d52 3
a54 3
[0-9a-f ]+R_PPC64_TPREL16_DS +0+10630 \.tdata \+ 28
[0-9a-f ]+R_PPC64_TPREL16_HA +0+10630 \.tdata \+ 30
[0-9a-f ]+R_PPC64_TPREL16_LO +0+10630 \.tdata \+ 30
a74 2
.* SECTION LOCAL +DEFAULT +8 
.* SECTION LOCAL +DEFAULT +9 
@


1.16
log
@	* ld-powerpc/tlsexe.r: Update for removal of some section syms.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
@
text
@d52 3
a54 3
[0-9a-f ]+R_PPC64_TPREL16_DS +0+10668 \.tdata \+ 28
[0-9a-f ]+R_PPC64_TPREL16_HA +0+10668 \.tdata \+ 30
[0-9a-f ]+R_PPC64_TPREL16_LO +0+10668 \.tdata \+ 30
@


1.15
log
@Updo the last change to binutils and ld/testsuite.
@
text
@d92 1
a92 1
Symbol table '\.symtab' contains 39 entries:
a106 3
.* SECTION LOCAL +DEFAULT +13 
.* SECTION LOCAL +DEFAULT +14 
.* SECTION LOCAL +DEFAULT +15 
@


1.15.2.1
log
@        Backport from mainline:

        2006-07-29  Richard Sandiford  <richard@@codesourcery.com>

        ld/
        * Makefile.am (eelf32b4300.c): Update dependencies.
        (eelf32bmip.c): Likewise.
        (eelf32bsmip.c): Likewise.
        (eelf32btsmip.c): Likewise.
        (eelf32btsmipn32.c): Likewise.
        (eelf32ltsmip.c): Likewise.
        (eelf32ltsmipn32.c): Likewise.
        (eelf32ebmip.c): Likewise.
        (eelf32ebmipvxworks.c): Likewise.
        (eelf32elmip.c): Likewise.
        (eelf32elmipvxworks.c): Likewise.
        (eelf32bmipn32.c): Likewise.
        (eelf32lmip.c): Likewise.
        (eelf32mipswindiss.c): Likewise.
        (eelf32lsmip.c): Likewise.
        (eelf64bmip.c): Likewise.
        (eelf64btsmip.c): Likewise.
        (eelf64ltsmip.c): Likewise.
        (emipsbig.c): Likewise.  Canonicalize ${GENSCRIPTS} line.
        (emipsbsd.c): Likewise.
        (emipsidt.c): Update dependencies.
        (emipsidtl.c): Likewise.
        (emipslit.c): Likewise.
        (emipslnews.c): Likewise.
        (emipspe.c): Likewise.  Fix ${GENSCRIPTS} invocation.
        * Makefile.in: Regenerate.
        * emulparams/elf32bmip.sh (EXTRA_EM_FILE): Define.
        * emulparams/elf32bmipn32-defs.sh (EXTRA_EM_FILE): Likewise.
        * emultempl/irix.em: Include emultempl/mipself.em.
        * emultempl/mipself.em: New file.

        ld/testsuite/
        * ld-mips-elf/hash1.s, ld-mips-elf/hash1a.d,
        * ld-mips-elf/hash1b.d, ld-mips-elf/hash1c.d: New tests.
        * ld-mips-elf/mips-elf.exp: Run them.

        2006-07-14  Jakub Jelinek  <jakub@@redhat.com>

        * elflink.c (bfd_elf_size_dynsym_hash_dynstr): Fix cinfo.shift2 value.

        2006-07-10  Jakub Jelinek  <jakub@@redhat.com>

        include/
        * bfdlink.h (struct bfd_link_info): Add emit_hash and
        emit_gnu_hash bitfields.

        include/elf/
        * common.h (SHT_GNU_HASH, DT_GNU_HASH): Define.

        ld/
        * scripttempl/elf.sc: Add .gnu.hash section.
        * emultempl/elf32.em (OPTION_HASH_STYLE): Define.
        (gld${EMULATION_NAME}_add_options): Register --hash-style option.
        (gld${EMULATION_NAME}_handle_option): Handle it.
        (gld${EMULATION_NAME}_list_options): Document it.
        * ldmain.c (main): Initialize emit_hash and emit_gnu_hash.
        * ld.texinfo: Document --hash-style option.

        ld/testsuite/
        * ld-powerpc/tlsso32.r: Adjust.
        * ld-powerpc/tlsso32.d: Adjust.
        * ld-powerpc/tlsso32.g: Adjust.
        * ld-powerpc/tlsso.r: Adjust.
        * ld-powerpc/tlsso.g: Adjust.
        * ld-powerpc/tlstocso.g: Adjust.

        bfd/
        * elf.c (_bfd_elf_print_private_bfd_data): Handle DT_GNU_HASH.
        (bfd_section_from_shdr, elf_fake_sections, assign_section_numbers):
        Handle SHT_GNU_HASH.
        (special_sections_g): Include .gnu.hash section.
        (bfd_elf_gnu_hash): New function.
        * elf-bfd.h (bfd_elf_gnu_hash, _bfd_elf_hash_symbol): New prototypes.
        (struct elf_backend_data): Add elf_hash_symbol method.
        * elflink.c (_bfd_elf_link_create_dynamic_sections): Create .hash
        only if info->emit_hash, create .gnu.hash section if
        info->emit_gnu_hash.
        (struct collect_gnu_hash_codes): New type.
        (elf_collect_gnu_hash_codes, elf_renumber_gnu_hash_syms,
        _bfd_elf_hash_symbol): New functions.
        (compute_bucket_count): Don't compute HASHCODES array, instead add
        that and NSYMS as arguments.  Use bed->s->sizeof_hash_entry
        instead of bed->s->arch_size / 8.  Fix .hash size estimation.
        When not optimizing, use the number of hashed symbols rather than
        dynsymcount.
        (bfd_elf_size_dynamic_sections): Only add DT_HASH if info->emit_hash,
        and ADD DT_GNU_HASH if info->emit_gnu_hash.
        (bfd_elf_size_dynsym_hash_dynstr): Size .hash only if info->emit_hash,
        adjust compute_bucket_count caller.  Create and populate .gnu.hash
        section if info->emit_gnu_hash.
        (elf_link_output_extsym): Only populate .hash section if
        finfo->hash_sec != NULL.
        (bfd_elf_final_link): Adjust assertion.  Handle DT_GNU_HASH.
        * elfxx-target.h (elf_backend_hash_symbol): Define if not yet defined.
        (elfNN_bed): Add elf_backend_hash_symbol.
        * elf64-x86-64.c (elf64_x86_64_hash_symbol): New function.
        (elf_backend_hash_symbol): Define.
        * elf32-i386.c (elf_i386_hash_symbol): New function.
        (elf_backend_hash_symbol): Define.

        binutils/
        * readelf.c (get_dynamic_type): Handle DT_GNU_HASH.
        (get_section_type_name): Handle SHT_GNU_HASH.
        (dynamic_info_DT_GNU_HASH): New variable.
        (process_dynamic_section): Handle DT_GNU_HASH.
        (process_symbol_table): Print also DT_GNU_HASH histogram.
@
text
@d52 3
a54 3
[0-9a-f ]+R_PPC64_TPREL16_DS +0+10630 \.tdata \+ 28
[0-9a-f ]+R_PPC64_TPREL16_HA +0+10630 \.tdata \+ 30
[0-9a-f ]+R_PPC64_TPREL16_LO +0+10630 \.tdata \+ 30
@


1.14
log
@binutils/

2006-02-02  H.J. Lu  <hongjiu.lu@@intel.com>

	* readelf.c (process_program_headers): Undo the change made on
	2004-09-22.  Match PT_DYNAMIC segment only with SHT_DYNAMIC
	sections.

ld/testsuite/

2006-02-02  H.J. Lu  <hongjiu.lu@@intel.com>

	* ld-i386/tlsbin.rd: Update for changed segment map.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlspic.rd: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-sh/tlsbin-2.d: Likewise.
	* ld-sh/tlspic-2.d: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
@
text
@d43 1
a43 1
 +01 +\.tdata \.tbss \.dynamic \.got \.plt 
@


1.13
log
@Adjust for dynamic sym changes.
@
text
@d43 1
a43 1
 +01 +\.tdata \.dynamic \.got \.plt 
@


1.12
log
@	* ld-cris/pv32.s: Give expobj a size.
	* ld-cris/pv32-1.d: Update.
	* ld-alpha/tlsbin.dd: Update for empty section removal change.
	* ld-alpha/tlsbin.sd: Likewise.
	* ld-alpha/tlsbin.td: Likewise.
	* ld-alpha/tlsbinr.dd: Likewise.
	* ld-alpha/tlsbinr.rd: Likewise.
	* ld-alpha/tlspic.dd: Likewise.
	* ld-alpha/tlspic.rd: Likewise.
	* ld-alpha/tlspic.sd: Likewise.
	* ld-alpha/tlspic.td: Likewise.
	* ld-arm/tls-lib.d: Likewise.
	* ld-arm/tls-lib.r: Likewise.
	* ld-cris/gotplt2.d: Likewise.
	* ld-cris/gotplt3.d: Likewise.
	* ld-cris/hiddef1.d: Likewise.
	* ld-cris/libdso-10.d: Likewise.
	* ld-cris/libdso-11.d: Likewise.
	* ld-cris/libdso-12.d: Likewise.
	* ld-cris/libdso-14.d: Likewise.
	* ld-cris/libdso-2.d: Likewise.
	* ld-i386/tlsnopic.dd: Likewise.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlsnopic.sd: Likewise.
	* ld-i386/tlspic.rd: Likewise.
	* ld-mmix/bpo-10.d: Likewise.
	* ld-mmix/bpo-22.d: Likewise.
	* ld-mmix/sec-7m.d: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.g: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso32.d: Likewise.
	* ld-powerpc/tlsso32.g: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlstocso.g: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
@
text
@d12 15
a26 15
 +\[ 1\] \.hash +.*
 +\[ 2\] \.dynsym +.*
 +\[ 3\] \.dynstr +.*
 +\[ 4\] \.rela\.dyn +.*
 +\[ 5\] \.rela\.plt +.*
 +\[ 6\] \.text +PROGBITS +0+590 0+590 0+fc 0+ +AX +0 +0 +4
 +\[ 7\] \.tdata +PROGBITS +0+10690 0+690 0+38 0+ WAT +0 +0 +8
 +\[ 8\] \.tbss +NOBITS +0+106c8 0+6c8 0+38 0+ WAT +0 +0 +8
 +\[ 9\] \.data\.rel\.ro +PROGBITS .*
 +\[10\] \.dynamic +DYNAMIC +0+106c8 0+6c8 0+150 10 +WA +3 +0 +8
 +\[11\] \.got +PROGBITS +0+10818 0+818 0+60 08 +WA +0 +0 +8
 +\[12\] \.plt +.*
 +\[13\] \.shstrtab +.*
 +\[14\] \.symtab +.*
 +\[15\] \.strtab +.*
d35 4
a38 4
 +LOAD +0x0+ 0x0+ 0x0+ 0x0+68c 0x0+68c R E 0x10000
 +LOAD +0x0+690 0x0+10690 0x0+10690 0x0+1e8 0x0+218 RW +0x10000
 +DYNAMIC +0x0+6c8 0x0+106c8 0x0+106c8 0x0+150 0x0+150 RW +0x8
 +TLS +0x0+690 0x0+10690 0x0+10690 0x0+38 0x0+70 R +0x8
d52 3
a54 3
[0-9a-f ]+R_PPC64_TPREL16_DS +0+10690 \.tdata \+ 28
[0-9a-f ]+R_PPC64_TPREL16_HA +0+10690 \.tdata \+ 30
[0-9a-f ]+R_PPC64_TPREL16_LO +0+10690 \.tdata \+ 30
d70 1
a70 1
Symbol table '\.dynsym' contains 20 entries:
d72 19
a90 20
 +[0-9]+: 0+ +0 NOTYPE +LOCAL +DEFAULT +UND 
 +[0-9]+: 0+590 +0 SECTION LOCAL +DEFAULT +6 
 +[0-9]+: 0+10690 +0 SECTION LOCAL +DEFAULT +7 
 +[0-9]+: 0+106c8 +0 SECTION LOCAL +DEFAULT +8 
 +[0-9]+: 0+106c8 +0 SECTION LOCAL +DEFAULT +9 
 +[0-9]+: 0+106c8 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
 +[0-9]+: 0+ +0 TLS +GLOBAL DEFAULT +UND gd
 +[0-9]+: 0+60 +0 TLS +GLOBAL DEFAULT +8 le0
 +[0-9]+: 0+ +0 NOTYPE +GLOBAL DEFAULT +UND __tls_get_addr
 +[0-9]+: 0+40 +0 TLS +GLOBAL DEFAULT +8 ld0
 +[0-9]+: 0+68 +0 TLS +GLOBAL DEFAULT +8 le1
 +[0-9]+: 0+ +0 TLS +GLOBAL DEFAULT +UND ld
 +[0-9]+: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +6 _start
 +[0-9]+: 0+50 +0 TLS +GLOBAL DEFAULT +8 ld2
 +[0-9]+: 0+48 +0 TLS +GLOBAL DEFAULT +8 ld1
 +[0-9]+: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS __bss_start
 +[0-9]+: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS _edata
 +[0-9]+: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS _end
 +[0-9]+: 0+38 +0 TLS +GLOBAL DEFAULT +8 gd0
 +[0-9]+: 0+58 +0 TLS +GLOBAL DEFAULT +8 ie0
d94 39
a132 39
 +[0-9]+: 0+ +0 NOTYPE +LOCAL +DEFAULT +UND 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +1 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +2 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +3 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +4 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +5 
 +[0-9]+: 0+590 +0 SECTION LOCAL +DEFAULT +6 
 +[0-9]+: 0+10690 +0 SECTION LOCAL +DEFAULT +7 
 +[0-9]+: 0+106c8 +0 SECTION LOCAL +DEFAULT +8 
 +[0-9]+: 0+106c8 +0 SECTION LOCAL +DEFAULT +9 
 +[0-9]+: 0+106c8 +0 SECTION LOCAL +DEFAULT +10 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +11 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +12 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +13 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +14 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +15 
 +[0-9]+: 0+ +0 TLS +LOCAL +DEFAULT +7 gd4
 +[0-9]+: 0+8 +0 TLS +LOCAL +DEFAULT +7 ld4
 +[0-9]+: 0+10 +0 TLS +LOCAL +DEFAULT +7 ld5
 +[0-9]+: 0+18 +0 TLS +LOCAL +DEFAULT +7 ld6
 +[0-9]+: 0+20 +0 TLS +LOCAL +DEFAULT +7 ie4
 +[0-9]+: 0+28 +0 TLS +LOCAL +DEFAULT +7 le4
 +[0-9]+: 0+30 +0 TLS +LOCAL +DEFAULT +7 le5
 +[0-9]+: [0-9a-f]+ +0 NOTYPE +LOCAL +DEFAULT +6 \.__tls_get_addr
 +[0-9]+: 0+106c8 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
 +[0-9]+: 0+ +0 TLS +GLOBAL DEFAULT +UND gd
 +[0-9]+: 0+60 +0 TLS +GLOBAL DEFAULT +8 le0
 +[0-9]+: 0+ +0 NOTYPE +GLOBAL DEFAULT +UND __tls_get_addr
 +[0-9]+: 0+40 +0 TLS +GLOBAL DEFAULT +8 ld0
 +[0-9]+: 0+68 +0 TLS +GLOBAL DEFAULT +8 le1
 +[0-9]+: 0+ +0 TLS +GLOBAL DEFAULT +UND ld
 +[0-9]+: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +6 _start
 +[0-9]+: 0+50 +0 TLS +GLOBAL DEFAULT +8 ld2
 +[0-9]+: 0+48 +0 TLS +GLOBAL DEFAULT +8 ld1
 +[0-9]+: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS __bss_start
 +[0-9]+: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS _edata
 +[0-9]+: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS _end
 +[0-9]+: 0+38 +0 TLS +GLOBAL DEFAULT +8 gd0
 +[0-9]+: 0+58 +0 TLS +GLOBAL DEFAULT +8 ie0
@


1.11
log
@ld/
	* emultempl/ppc64elf.em (ppc_finish): Rename from
	gld${EMULATION_NAME}_finish.  Call gld${EMULATION_NAME}_finish.
	(LDEMUL_FINISH): Update.
	* emultempl/hppaelf.em (hppaelf_finish, LDEMUL_FINISH): Likewise.
	* emultempl/m68hc1xelf.em (m68hc11elf_finish, LDEMUL_FINISH): Likewise.
ld/testsuite/
	* ld-powerpc/tlsexe.r: Update.
	* ld-powerpc/tlsexetoc.r: Update.
	* ld-powerpc/tlsso.r: Update.
	* ld-powerpc/tlstocso.r: Update.
@
text
@d7 1
a7 1
There are 15 section headers.*
d17 10
a26 9
 +\[ 6\] \.text +PROGBITS +0+5c8 0+5c8 0+fc 0+ +AX +0 +0 +4
 +\[ 7\] \.tdata +PROGBITS +0+106c8 0+6c8 0+38 0+ WAT +0 +0 +8
 +\[ 8\] \.tbss +NOBITS +0+10700 0+700 0+38 0+ WAT +0 +0 +8
 +\[ 9\] \.dynamic +DYNAMIC +0+10700 0+700 0+150 10 +WA +3 +0 +8
 +\[10\] \.got +PROGBITS +0+10850 0+850 0+60 08 +WA +0 +0 +8
 +\[11\] \.plt +.*
 +\[12\] \.shstrtab +.*
 +\[13\] \.symtab +.*
 +\[14\] \.strtab +.*
d35 4
a38 4
 +LOAD +0x0+ 0x0+ 0x0+ 0x0+6c4 0x0+6c4 R E 0x10000
 +LOAD +0x0+6c8 0x0+106c8 0x0+106c8 0x0+1e8 0x0+218 RW +0x10000
 +DYNAMIC +0x0+700 0x0+10700 0x0+10700 0x0+150 0x0+150 RW +0x8
 +TLS +0x0+6c8 0x0+106c8 0x0+106c8 0x0+38 0x0+70 R +0x8
d49 16
a64 16
0+632 +0+90+45 R_PPC64_TPREL16 +0+60 le0 \+ 0
0+636 +0+c0+48 R_PPC64_TPREL16_HA +0+68 le1 \+ 0
0+63a +0+c0+46 R_PPC64_TPREL16_LO +0+68 le1 \+ 0
0+672 +0+20+5f R_PPC64_TPREL16_DS +0+106c8 \.tdata \+ 28
0+676 +0+20+48 R_PPC64_TPREL16_HA +0+106c8 \.tdata \+ 30
0+67a +0+20+46 R_PPC64_TPREL16_LO +0+106c8 \.tdata \+ 30
0+10858 +0+44 R_PPC64_DTPMOD64 +0+
0+10868 +0+44 R_PPC64_DTPMOD64 +0+
0+10870 +0+4e R_PPC64_DTPREL64 +0+
0+10878 +0+4e R_PPC64_DTPREL64 +0+18
0+10880 +0+80+44 R_PPC64_DTPMOD64 +0+ gd \+ 0
0+10888 +0+80+4e R_PPC64_DTPREL64 +0+ gd \+ 0
0+10890 +0+f0+4e R_PPC64_DTPREL64 +0+50 ld2 \+ 0
0+10898 +0+140+44 R_PPC64_DTPMOD64 +0+38 gd0 \+ 0
0+108a0 +0+140+4e R_PPC64_DTPREL64 +0+38 gd0 \+ 0
0+108a8 +0+150+49 R_PPC64_TPREL64 +0+58 ie0 \+ 0
d68 1
a68 1
0+108c8 +0+a0+15 R_PPC64_JMP_SLOT +0+ __tls_get_addr \+ 0
d70 1
a70 1
Symbol table '\.dynsym' contains 22 entries:
d73 5
a77 7
 +[0-9]+: 0+5c8 +0 SECTION LOCAL +DEFAULT +6 
 +[0-9]+: 0+106c8 +0 SECTION LOCAL +DEFAULT +7 
 +[0-9]+: 0+10700 +0 SECTION LOCAL +DEFAULT +8 
 +[0-9]+: 0+ +0 NOTYPE +LOCAL +DEFAULT +UND 
 +[0-9]+: 0+ +0 NOTYPE +LOCAL +DEFAULT +UND 
 +[0-9]+: 0+ +0 NOTYPE +LOCAL +DEFAULT +UND 
 +[0-9]+: 0+10700 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
d93 1
a93 1
Symbol table '\.symtab' contains 38 entries:
d101 5
a105 5
 +[0-9]+: 0+5c8 +0 SECTION LOCAL +DEFAULT +6 
 +[0-9]+: 0+106c8 +0 SECTION LOCAL +DEFAULT +7 
 +[0-9]+: 0+10700 +0 SECTION LOCAL +DEFAULT +8 
 +[0-9]+: 0+10700 +0 SECTION LOCAL +DEFAULT +9 
 +[0-9]+: 0+10850 +0 SECTION LOCAL +DEFAULT +10 
d110 1
d119 1
a119 1
 +[0-9]+: 0+10700 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
@


1.10
log
@bfd/
	* elf64-ppc.c (func_desc_adjust): Move code creating func desc sym to..
	(make_fdh): ..here.  New function.  Don't set BSF_OBJECT for
	undefined syms.
	(struct add_symbol_adjust_data): New.
	(add_symbol_adjust): Make an undefweak func desc for old ABI
	objects to link with --as-needed shared libs.  Return fail status.
	Don't adjust old ABI func entry sym to weak if func desc syms
	isn't defined.
	(ppc64_elf_check_directives): Adjust call to add_symbol_adjust,
	and return status.
ld/testsuite/
	* ld-powerpc/tlsso.r: Update.
	* ld-powerpc/tlstocso.r: Update.
@
text
@d7 1
a7 1
There are 19 section headers.*
d21 5
a25 9
 +\[10\] \.data +PROGBITS +0+10850 0+850 0+ 0+ +WA +0 +0 +1
 +\[11\] \.branch_lt +.*
 +\[12\] \.got +PROGBITS +0+10850 0+850 0+60 08 +WA +0 +0 +8
 +\[13\] \.sbss +.*
 +\[14\] \.plt +.*
 +\[15\] \.bss +.*
 +\[16\] \.shstrtab +.*
 +\[17\] \.symtab +.*
 +\[18\] \.strtab +.*
d75 3
a77 3
 +[0-9]+: 0+10850 +0 SECTION LOCAL +DEFAULT +10 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +11 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +15 
d94 1
a94 1
Symbol table '\.symtab' contains 42 entries:
a110 4
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +15 
 +[0-9]+: 0+ +0 SECTION LOCAL +DEFAULT +16 
 +[0-9]+: 0+ +0 SECTION LOCAL +DEFAULT +17 
 +[0-9]+: 0+ +0 SECTION LOCAL +DEFAULT +18 
@


1.9
log
@	* ld-powerpc/tls.s (gd, ld): Set tls type for undefined syms.
	* ld-powerpc/tls32.s (gd, ld): Likewise.
	* ld-powerpc/tlstoc.s (gd, ld): Likewise.
	* ld-powerpc/tlsso.r: Update.
	* ld-powerpc/tlsso32.r: Update.
	* ld-powerpc/tlstocso.r: Update.
@
text
@d85 1
a85 1
 +[0-9]+: 0+ +24 OBJECT +GLOBAL DEFAULT +UND __tls_get_addr
d130 1
a130 1
 +[0-9]+: 0+ +24 OBJECT +GLOBAL DEFAULT +UND __tls_get_addr
@


1.8
log
@binutils/
	* readelf.c (process_program_headers): Don't include .tbss in non-TLS
	segments.

ld/testsuite/
	* ld-i386/tlsbin.rd: Update for changed segment map.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlspic.rd: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-sh/tlsbin-2.d: Likewise.
	* ld-sh/tlspic-2.d: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
@
text
@d83 1
a83 1
 +[0-9]+: 0+ +0 NOTYPE +GLOBAL DEFAULT +UND gd
d88 1
a88 1
 +[0-9]+: 0+ +0 NOTYPE +GLOBAL DEFAULT +UND ld
d128 1
a128 1
 +[0-9]+: 0+ +0 NOTYPE +GLOBAL DEFAULT +UND gd
d133 1
a133 1
 +[0-9]+: 0+ +0 NOTYPE +GLOBAL DEFAULT +UND ld
@


1.7
log
@bfd/
	* elflink.c (elf_bfd_final_link): Don't output STT_SECTION symbol
	into .dynsym if elf_section_data (sec)->dynindx <= 0.
	Adjust counting of last_local.
	(_bfd_elf_link_renumber_dynsyms): Don't assign dynindx to sections
	other than SHT_PROGBITS/SHT_NOBITS and neither for .got/.got.plt/.plt
	created by the linker nor !SHF_ALLOC.

	* elf32-i386.c (elf_i386_finish_dynamic_sections): Point
	DT_PLTGOT to the start of the .got.plt section instead of the
	.got output section.  Set sh_entsize for .got section in addition
	to .got.plt.
	(elf_i386_relocate_section): Don't assume _GLOBAL_OFFSET_TABLE_
	is at sgot->output_section->vma.
	* elf64-x86-64.c (elf64_x86_64_finish_dynamic_sections): Point
	DT_PLTGOT to the start of the .got.plt section instead of the
	.got output section.
	(elf64_x86_64_relocate_section): Don't assume _GLOBAL_OFFSET_TABLE_
	is at sgot->output_section->vma.  Set sh_entsize for .got section
	in addition to .got.plt.
	* elf.c (_bfd_elf_print_private_bfd_data): Handle PT_GNU_RELRO.
	(bfd_section_from_phdr): Likewise.
	(map_sections_to_segments): Likewise.
	(assign_file_positions_for_segments): Likewise.
	(get_program_header_size): Likewise.
	* elflink.c (bfd_elf_size_dynamic_sections): Set
	elf_tdata (output_bfd)->relro from info->relro.
	* elf-bfd.h (struct elf_obj_tdata): Add relro field.
include/
	* bfdlink.h (struct bfd_link_info): Add relro, relro_start and
	relro_end fields.
	* elf/common.h (PT_GNU_EH_FRAME, PT_GNU_STACK): Add comments.
	(PT_GNU_RELRO): Define.
binutils/
	* readelf.c (get_segment_type): Handle PT_GNU_RELRO.
ld/
	* genscripts.sh: Generate -z combreloc -z now -z relro scripts
	for binaries, -shared and -pie.
	* emulparams/elf_i386.sh (SEPARATE_GOTPLT): Set.
	* emulparams/elf_x86_64.sh (SEPARATE_GOTPLT): Set.
	* emulparams/elf32ppc.sh (OTHER_READWRITE_SECTIONS): Rename to...
	(OTHER_RELRO_SECTIONS): ... this.
	* ldlex.l (DATA_SEGMENT_RELRO_END): Add.
	* emultempl/elf32.em (gld${EMULATION_NAME}_handle_option): Handle
	-z relro and -z norelro.
	(gld${EMULATION_NAME}_list_options): Add it to usage.
	(gld${EMULATION_NAME}_get_script): Return -z combreloc -z now
	-z relro scripts when appropriate.
	* scripttempl/elf.sc: Unset SEPARATE_GOTPLT if RELRO_NOW is set.
	Create separate .got.plt section if SEPARATE_GOTPLT.
	Move sections which are only written during relocation handling
	to the beginning of RW segment.  If NO_SMALL_DATA, move .got
	before .data.  Add DATA_SEGMENT_RELRO_END directive.
	Include OTHER_RELRO_SECTIONS.
	* ldgram.y (DATA_SEGMENT_RELRO_END): Add.
	* ldexp.c (exp_print_token): Handle DATA_SEGMENT_RELRO_END.
	(fold_unary): Likewise.
	(fold_binary): Handle -z relro.
	* ldexp.h (struct exp_data_seg): Add exp_dataseg_relro_seen and
	exp_dataseg_relro_adjust phases.  Add relro_end field.
	* ldmain.c (main): Initialize link_info.relro to FALSE.
	* ldlang.c (lang_size_sections): Handle -z relro.
ld/testsuite/
	* ld-i386/tlspic.rd: Adjust for section reordering changes
	and removal of unneeded STT_SECTION symbols from .dynsym.
	* ld-i386/tlspic.dd: Likewise.
	* ld-i386/tlspic.sd: Likewise.
	* ld-i386/tlsbin.rd: Likewise.
	* ld-i386/tlsbinpic.s: Likewise.
	* ld-i386/tlsbin.dd: Likewise.
	* ld-i386/tlsbin.sd: Likewise.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlsnopic1.s: Likewise.
	* ld-i386/combreloc.d: Likewise.
	* ld-i386/tlsnopic.dd: Likewise.
	* ld-i386/tlsnopic.sd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
	* ld-x86-64/tlspic.dd: Likewise.
	* ld-x86-64/tlsbin.dd: Likewise.
	* ld-x86-64/tlspic.sd: Likewise.
	* ld-x86-64/tlsbin.sd: Likewise.
	* ld-x86-64/tlspic.td: Likewise.
	* ld-x86-64/tlsbin.td: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-s390/tlspic1.s: Likewise.
	* ld-s390/tlsbinpic.s: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlspic.dd: Likewise.
	* ld-s390/tlsbin.dd: Likewise.
	* ld-s390/tlsbin.sd: Likewise.
	* ld-s390/tlsbin.td: Likewise.
	* ld-s390/tlspic.sd: Likewise.
	* ld-s390/tlspic.td: Likewise.
	* ld-s390/tlspic1_64.s: Likewise.
	* ld-s390/tlsbinpic_64.s: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlspic_64.dd: Likewise.
	* ld-s390/tlsbin_64.dd: Likewise.
	* ld-s390/tlspic_64.sd: Likewise.
	* ld-s390/tlspic_64.td: Likewise.
	* ld-s390/tlsbin_64.td: Likewise.
	* ld-s390/tlsbin_64.sd: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlsso32.d: Likewise.
	* ld-powerpc/tlsso32.g: Likewise.
	* ld-powerpc/tlsso32.t: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso.g: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
	* ld-powerpc/tlstocso.g: Likewise.
	* ld-ia64/tlspic.rd: Likewise.
	* ld-ia64/tlspic.dd: Likewise.
	* ld-ia64/tlspic.sd: Likewise.
	* ld-ia64/tlspic.td: Likewise.
	* ld-ia64/tlsbin.rd: Likewise.
	* ld-ia64/tlsbin.sd: Likewise.
	* ld-ia64/tlsbin.td: Likewise.
	* ld-elfvsb/elfvsb.exp: XFAIL non-PIC load offset tests on s390x.
	* ld-shared/shared.exp: Likewise.
@
text
@d46 2
a47 2
 +01 +\.tdata \.tbss \.dynamic \.got \.plt 
 +02 +\.tbss \.dynamic 
@


1.6
log
@	* ld-powerpc/tlsexe.r: Update sh_info to decimal.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
@
text
@d12 18
a29 18
 +\[ 1\] \.hash +HASH +0+120 0+120 0+c8 04 +A +2 +0 +8
 +\[ 2\] \.dynsym +DYNSYM +0+1e8 0+1e8 0+2e8 18 +A +3 +16 +8
 +\[ 3\] \.dynstr +STRTAB +0+4d0 0+4d0 0+53 0+ +A +0 +0 +1
 +\[ 4\] \.rela\.dyn +RELA +0+528 0+528 0+180 18 +A +2 +0 +8
 +\[ 5\] \.rela\.plt +RELA +0+6a8 0+6a8 0+18 18 +A +2 +14 +8
 +\[ 6\] \.text +PROGBITS +0+6c0 0+6c0 0+fc 0+ +AX +0 +0 +4
 +\[ 7\] \.data +PROGBITS +0+107c0 0+7c0 0+ 0+ +WA +0 +0 +1
 +\[ 8\] \.branch_lt +PROGBITS +0+107c0 0+7c0 0+ 0+ +WA +0 +0 +8
 +\[ 9\] \.tdata +PROGBITS +0+107c0 0+7c0 0+38 0+ WAT +0 +0 +8
 +\[10\] \.tbss +NOBITS +0+107f8 0+7f8 0+38 0+ WAT +0 +0 +8
 +\[11\] \.dynamic +DYNAMIC +0+107f8 0+7f8 0+150 10 +WA +3 +0 +8
 +\[12\] \.got +PROGBITS +0+10948 0+948 0+60 08 +WA +0 +0 +8
 +\[13\] \.sbss +NOBITS +0+109a8 0+9a8 0+ 0+ +W +0 +0 +1
 +\[14\] \.plt +NOBITS +0+109a8 0+9a8 0+30 18 +WA +0 +0 +8
 +\[15\] \.bss +NOBITS +0+109d8 0+9a8 0+ 0+ +WA +0 +0 +1
 +\[16\] \.shstrtab +STRTAB +0+ 0+9a8 0+82 0+ +0 +0 +1
 +\[17\] \.symtab +SYMTAB +0+ 0+ef0 0+3f0 18 +18 +27 +8
 +\[18\] \.strtab +STRTAB +0+ 0+12e0 0+86 0+ +0 +0 +1
d33 1
a33 1
Entry point 0x6dc
d38 4
a41 4
 +LOAD +0x0+ 0x0+ 0x0+ 0x0+7bc 0x0+7bc R E 0x10000
 +LOAD +0x0+7c0 0x0+107c0 0x0+107c0 0x0+1e8 0x0+218 RW +0x10000
 +DYNAMIC +0x0+7f8 0x0+107f8 0x0+107f8 0x0+150 0x0+150 RW +0x8
 +TLS +0x0+7c0 0x0+107c0 0x0+107c0 0x0+38 0x0+70 R +0x8
d52 16
a67 16
0+72a +0+1200000045 R_PPC64_TPREL16 +0+60 le0 \+ 0
0+72e +0+1500000048 R_PPC64_TPREL16_HA +0+68 le1 \+ 0
0+732 +0+1500000046 R_PPC64_TPREL16_LO +0+68 le1 \+ 0
0+76a +0+90000005f R_PPC64_TPREL16_DS +0+107c0 \.tdata \+ 28
0+76e +0+900000048 R_PPC64_TPREL16_HA +0+107c0 \.tdata \+ 30
0+772 +0+900000046 R_PPC64_TPREL16_LO +0+107c0 \.tdata \+ 30
0+10950 +0+44 R_PPC64_DTPMOD64 +0+
0+10960 +0+44 R_PPC64_DTPMOD64 +0+
0+10968 +0+4e R_PPC64_DTPREL64 +0+
0+10970 +0+4e R_PPC64_DTPREL64 +0+18
0+10978 +0+1100000044 R_PPC64_DTPMOD64 +0+ gd \+ 0
0+10980 +0+110000004e R_PPC64_DTPREL64 +0+ gd \+ 0
0+10988 +0+180000004e R_PPC64_DTPREL64 +0+50 ld2 \+ 0
0+10990 +0+1d00000044 R_PPC64_DTPMOD64 +0+38 gd0 \+ 0
0+10998 +0+1d0000004e R_PPC64_DTPREL64 +0+38 gd0 \+ 0
0+109a0 +0+1e00000049 R_PPC64_TPREL64 +0+58 ie0 \+ 0
d71 1
a71 1
0+109c0 +0+1300000015 R_PPC64_JMP_SLOT +0+ __tls_get_addr \+ 0
d73 1
a73 1
Symbol table '\.dynsym' contains 31 entries:
d75 22
a96 31
 +0: 0+ +0 NOTYPE +LOCAL +DEFAULT +UND 
 +1: 0+120 +0 SECTION LOCAL +DEFAULT +1 
 +2: 0+1e8 +0 SECTION LOCAL +DEFAULT +2 
 +3: 0+4d0 +0 SECTION LOCAL +DEFAULT +3 
 +4: 0+528 +0 SECTION LOCAL +DEFAULT +4 
 +5: 0+6a8 +0 SECTION LOCAL +DEFAULT +5 
 +6: 0+6c0 +0 SECTION LOCAL +DEFAULT +6 
 +7: 0+107c0 +0 SECTION LOCAL +DEFAULT +7 
 +8: 0+107c0 +0 SECTION LOCAL +DEFAULT +8 
 +9: 0+107c0 +0 SECTION LOCAL +DEFAULT +9 
 +10: 0+107f8 +0 SECTION LOCAL +DEFAULT +10 
 +11: 0+107f8 +0 SECTION LOCAL +DEFAULT +11 
 +12: 0+10948 +0 SECTION LOCAL +DEFAULT +12 
 +13: 0+109a8 +0 SECTION LOCAL +DEFAULT +13 
 +14: 0+109a8 +0 SECTION LOCAL +DEFAULT +14 
 +15: 0+109d8 +0 SECTION LOCAL +DEFAULT +15 
 +16: 0+107f8 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
 +17: 0+ +0 NOTYPE +GLOBAL DEFAULT +UND gd
 +18: 0+60 +0 TLS +GLOBAL DEFAULT +10 le0
 +19: 0+ +24 OBJECT +GLOBAL DEFAULT +UND __tls_get_addr
 +20: 0+40 +0 TLS +GLOBAL DEFAULT +10 ld0
 +21: 0+68 +0 TLS +GLOBAL DEFAULT +10 le1
 +22: 0+ +0 NOTYPE +GLOBAL DEFAULT +UND ld
 +23: 0+6dc +0 NOTYPE +GLOBAL DEFAULT +6 _start
 +24: 0+50 +0 TLS +GLOBAL DEFAULT +10 ld2
 +25: 0+48 +0 TLS +GLOBAL DEFAULT +10 ld1
 +26: 0+109a8 +0 NOTYPE +GLOBAL DEFAULT +ABS __bss_start
 +27: 0+109a8 +0 NOTYPE +GLOBAL DEFAULT +ABS _edata
 +28: 0+109d8 +0 NOTYPE +GLOBAL DEFAULT +ABS _end
 +29: 0+38 +0 TLS +GLOBAL DEFAULT +10 gd0
 +30: 0+58 +0 TLS +GLOBAL DEFAULT +10 ie0
d100 42
a141 42
 +0: 0+ +0 NOTYPE +LOCAL +DEFAULT +UND 
 +1: 0+120 +0 SECTION LOCAL +DEFAULT +1 
 +2: 0+1e8 +0 SECTION LOCAL +DEFAULT +2 
 +3: 0+4d0 +0 SECTION LOCAL +DEFAULT +3 
 +4: 0+528 +0 SECTION LOCAL +DEFAULT +4 
 +5: 0+6a8 +0 SECTION LOCAL +DEFAULT +5 
 +6: 0+6c0 +0 SECTION LOCAL +DEFAULT +6 
 +7: 0+107c0 +0 SECTION LOCAL +DEFAULT +7 
 +8: 0+107c0 +0 SECTION LOCAL +DEFAULT +8 
 +9: 0+107c0 +0 SECTION LOCAL +DEFAULT +9 
 +10: 0+107f8 +0 SECTION LOCAL +DEFAULT +10 
 +11: 0+107f8 +0 SECTION LOCAL +DEFAULT +11 
 +12: 0+10948 +0 SECTION LOCAL +DEFAULT +12 
 +13: 0+109a8 +0 SECTION LOCAL +DEFAULT +13 
 +14: 0+109a8 +0 SECTION LOCAL +DEFAULT +14 
 +15: 0+109d8 +0 SECTION LOCAL +DEFAULT +15 
 +16: 0+ +0 SECTION LOCAL +DEFAULT +16 
 +17: 0+ +0 SECTION LOCAL +DEFAULT +17 
 +18: 0+ +0 SECTION LOCAL +DEFAULT +18 
 +19: 0+ +0 TLS +LOCAL +DEFAULT +9 gd4
 +20: 0+8 +0 TLS +LOCAL +DEFAULT +9 ld4
 +21: 0+10 +0 TLS +LOCAL +DEFAULT +9 ld5
 +22: 0+18 +0 TLS +LOCAL +DEFAULT +9 ld6
 +23: 0+20 +0 TLS +LOCAL +DEFAULT +9 ie4
 +24: 0+28 +0 TLS +LOCAL +DEFAULT +9 le4
 +25: 0+30 +0 TLS +LOCAL +DEFAULT +9 le5
 +26: 0+6c0 +0 NOTYPE +LOCAL +DEFAULT +6 \.__tls_get_addr
 +27: 0+107f8 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
 +28: 0+ +0 NOTYPE +GLOBAL DEFAULT +UND gd
 +29: 0+60 +0 TLS +GLOBAL DEFAULT +10 le0
 +30: 0+ +24 OBJECT +GLOBAL DEFAULT +UND __tls_get_addr
 +31: 0+40 +0 TLS +GLOBAL DEFAULT +10 ld0
 +32: 0+68 +0 TLS +GLOBAL DEFAULT +10 le1
 +33: 0+ +0 NOTYPE +GLOBAL DEFAULT +UND ld
 +34: 0+6dc +0 NOTYPE +GLOBAL DEFAULT +6 _start
 +35: 0+50 +0 TLS +GLOBAL DEFAULT +10 ld2
 +36: 0+48 +0 TLS +GLOBAL DEFAULT +10 ld1
 +37: 0+109a8 +0 NOTYPE +GLOBAL DEFAULT +ABS __bss_start
 +38: 0+109a8 +0 NOTYPE +GLOBAL DEFAULT +ABS _edata
 +39: 0+109d8 +0 NOTYPE +GLOBAL DEFAULT +ABS _end
 +40: 0+38 +0 TLS +GLOBAL DEFAULT +10 gd0
 +41: 0+58 +0 TLS +GLOBAL DEFAULT +10 ie0
@


1.5
log
@	* ld-powerpc/tlsso.r: Update.
	* ld-powerpc/tlstocso.r: Update.
@
text
@d13 1
a13 1
 +\[ 2\] \.dynsym +DYNSYM +0+1e8 0+1e8 0+2e8 18 +A +3 +10 +8
d16 1
a16 1
 +\[ 5\] \.rela\.plt +RELA +0+6a8 0+6a8 0+18 18 +A +2 +e +8
d28 1
a28 1
 +\[17\] \.symtab +SYMTAB +0+ 0+ef0 0+3f0 18 +18 +1b +8
@


1.4
log
@2003-07-24  H.J. Lu  <hongjiu.lu@@intel.com>

	* ld-powerpc/tlsexe.r: .sbss is NOBITS, not PROGBITS.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
@
text
@d94 1
a94 1
 +19: 0+ +0 NOTYPE +GLOBAL DEFAULT +UND __tls_get_addr
d139 1
a139 1
 +30: 0+ +0 NOTYPE +GLOBAL DEFAULT +UND __tls_get_addr
@


1.3
log
@	* ld-elfvsb/elfvsb.exp: Run for powerpc64 too.
	* ld-powerpc/tls.t: Update.
	* ld-powerpc/tlsexe.d: Update.
	* ld-powerpc/tlsexe.r: Update.
	* ld-powerpc/tlsexetoc.d: Update.
	* ld-powerpc/tlsexetoc.r: Update.
	* ld-powerpc/tlsexetoc.t: Update.
	* ld-powerpc/tlsso.d: Update.
	* ld-powerpc/tlsso.g: Update.
	* ld-powerpc/tlsso.r: Update.
	* ld-powerpc/tlsso.t: Update.
	* ld-powerpc/tlstocso.d: Update.
	* ld-powerpc/tlstocso.g: Update.
	* ld-powerpc/tlstocso.r: Update.
	* ld-powerpc/tlstocso.t: Update.
@
text
@d24 1
a24 1
 +\[13\] \.sbss +PROGBITS +0+109a8 0+9a8 0+ 0+ +W +0 +0 +1
@


1.2
log
@	* elf32-ppc.c (ppc_elf_relocate_section): Subtract tls seg vma from
	zero index dynamic tls relocs generated for the GOT.  Tidy code.
	Set "relocation" to 1 on DTPMOD32 relocs.  Optimize HA adjustment.
	* elf64-ppc.c (ppc64_elf_relocate_section): Likewise.

	* ld-powerpc/tlsso.r: Adjust for corrected zero symbol index relocs.
	* ld-powerpc/tlsso32.r: Likewise.
@
text
@d7 1
a7 1
There are 21 section headers.*
d12 18
a29 20
 +\[ 1\] \.hash +HASH +0+120 0+120 0+d4 04 +A +2 +0 +8
 +\[ 2\] \.dynsym +DYNSYM +0+1f8 0+1f8 0+330 18 +A +3 +12 +8
 +\[ 3\] \.dynstr +STRTAB +0+528 0+528 0+54 0+ +A +0 +0 +1
 +\[ 4\] \.rela\.dyn +RELA +0+580 0+580 0+180 18 +A +2 +0 +8
 +\[ 5\] \.rela\.plt +RELA +0+700 0+700 0+18 18 +A +2 +10 +8
 +\[ 6\] \.text +PROGBITS +0+718 0+718 0+dc 0+ +AX +0 +0 +4
 +\[ 7\] \.data +PROGBITS +0+107f8 0+7f8 0+ 0+ +WA +0 +0 +1
 +\[ 8\] \.branch_lt +PROGBITS +0+107f8 0+7f8 0+ 0+ +WA +0 +0 +8
 +\[ 9\] \.tdata +PROGBITS +0+107f8 0+7f8 0+38 0+ WAT +0 +0 +8
 +\[10\] \.tbss +NOBITS +0+10830 0+830 0+38 0+ WAT +0 +0 +8
 +\[11\] \.dynamic +DYNAMIC +0+10830 0+830 0+150 10 +WA +3 +0 +8
 +\[12\] \.ctors +PROGBITS +0+10980 0+9e0 0+ 0+ +W +0 +0 +1
 +\[13\] \.dtors +PROGBITS +0+10980 0+9e0 0+ 0+ +W +0 +0 +1
 +\[14\] \.got +PROGBITS +0+10980 0+980 0+60 08 +WA +0 +0 +8
 +\[15\] \.sbss +PROGBITS +0+109e0 0+9e0 0+ 0+ +W +0 +0 +1
 +\[16\] \.plt +NOBITS +0+109e0 0+9e0 0+30 18 +WA +0 +0 +8
 +\[17\] \.bss +NOBITS +0+10a10 0+9e0 0+ 0+ +WA +0 +0 +1
 +\[18\] \.shstrtab +STRTAB +0+ 0+9e0 0+90 0+ +0 +0 +1
 +\[19\] \.symtab +SYMTAB +0+ 0+fb0 0+438 18 +20 +1d +8
 +\[20\] \.strtab +STRTAB +0+ 0+13e8 0+8c 0+ +0 +0 +1
d33 1
a33 1
Entry point 0x734
d38 4
a41 4
 +LOAD +0x0+ 0x0+ 0x0+ 0x0+7f4 0x0+7f4 R E 0x10000
 +LOAD +0x0+7f8 0x0+107f8 0x0+107f8 0x0+1e8 0x0+218 RW +0x10000
 +DYNAMIC +0x0+830 0x0+10830 0x0+10830 0x0+150 0x0+150 RW +0x8
 +TLS +0x0+7f8 0x0+107f8 0x0+107f8 0x0+38 0x0+70 R +0x8
d52 16
a67 16
0+782 +0+1400000045 R_PPC64_TPREL16 +0+60 le0 \+ 0
0+786 +0+1700000048 R_PPC64_TPREL16_HA +0+68 le1 \+ 0
0+78a +0+1700000046 R_PPC64_TPREL16_LO +0+68 le1 \+ 0
0+7c2 +0+90000005f R_PPC64_TPREL16_DS +0+107f8 \.tdata \+ 28
0+7c6 +0+900000048 R_PPC64_TPREL16_HA +0+107f8 \.tdata \+ 30
0+7ca +0+900000046 R_PPC64_TPREL16_LO +0+107f8 \.tdata \+ 30
0+10988 +0+44 R_PPC64_DTPMOD64 +0+
0+10998 +0+44 R_PPC64_DTPMOD64 +0+
0+109a0 +0+4e R_PPC64_DTPREL64 +0+
0+109a8 +0+4e R_PPC64_DTPREL64 +0+18
0+109b0 +0+1300000044 R_PPC64_DTPMOD64 +0+ gd \+ 0
0+109b8 +0+130000004e R_PPC64_DTPREL64 +0+ gd \+ 0
0+109c0 +0+1b0000004e R_PPC64_DTPREL64 +0+50 ld2 \+ 0
0+109c8 +0+2000000044 R_PPC64_DTPMOD64 +0+38 gd0 \+ 0
0+109d0 +0+200000004e R_PPC64_DTPREL64 +0+38 gd0 \+ 0
0+109d8 +0+2100000049 R_PPC64_TPREL64 +0+58 ie0 \+ 0
d71 1
a71 1
0+109f8 +0+1500000015 R_PPC64_JMP_SLOT +0+ __tls_get_addr \+ 0
d73 1
a73 1
Symbol table '\.dynsym' contains 34 entries:
d77 29
a105 32
 +2: 0+1f8 +0 SECTION LOCAL +DEFAULT +2 
 +3: 0+528 +0 SECTION LOCAL +DEFAULT +3 
 +4: 0+580 +0 SECTION LOCAL +DEFAULT +4 
 +5: 0+700 +0 SECTION LOCAL +DEFAULT +5 
 +6: 0+718 +0 SECTION LOCAL +DEFAULT +6 
 +7: 0+107f8 +0 SECTION LOCAL +DEFAULT +7 
 +8: 0+107f8 +0 SECTION LOCAL +DEFAULT +8 
 +9: 0+107f8 +0 SECTION LOCAL +DEFAULT +9 
 +10: 0+10830 +0 SECTION LOCAL +DEFAULT +10 
 +11: 0+10830 +0 SECTION LOCAL +DEFAULT +11 
 +12: 0+10980 +0 SECTION LOCAL +DEFAULT +12 
 +13: 0+10980 +0 SECTION LOCAL +DEFAULT +13 
 +14: 0+10980 +0 SECTION LOCAL +DEFAULT +14 
 +15: 0+109e0 +0 SECTION LOCAL +DEFAULT +15 
 +16: 0+109e0 +0 SECTION LOCAL +DEFAULT +16 
 +17: 0+10a10 +0 SECTION LOCAL +DEFAULT +17 
 +18: 0+10830 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
 +19: 0+ +0 NOTYPE +GLOBAL DEFAULT +UND gd
 +20: 0+60 +0 TLS +GLOBAL DEFAULT +10 le0
 +21: 0+ +0 NOTYPE +GLOBAL DEFAULT +UND __tls_get_addr
 +22: 0+40 +0 TLS +GLOBAL DEFAULT +10 ld0
 +23: 0+68 +0 TLS +GLOBAL DEFAULT +10 le1
 +24: 0+ +0 NOTYPE +GLOBAL DEFAULT +UND ld
 +25: 0+734 +0 NOTYPE +GLOBAL DEFAULT +6 _start
 +26: 0+10a10 +0 NOTYPE +GLOBAL DEFAULT +ABS __end
 +27: 0+50 +0 TLS +GLOBAL DEFAULT +10 ld2
 +28: 0+48 +0 TLS +GLOBAL DEFAULT +10 ld1
 +29: 0+109e0 +0 NOTYPE +GLOBAL DEFAULT +ABS __bss_start
 +30: 0+109e0 +0 NOTYPE +GLOBAL DEFAULT +ABS _edata
 +31: 0+10a10 +0 NOTYPE +GLOBAL DEFAULT +ABS _end
 +32: 0+38 +0 TLS +GLOBAL DEFAULT +10 gd0
 +33: 0+58 +0 TLS +GLOBAL DEFAULT +10 ie0
d107 1
a107 1
Symbol table '\.symtab' contains 45 entries:
d111 16
a126 16
 +2: 0+1f8 +0 SECTION LOCAL +DEFAULT +2 
 +3: 0+528 +0 SECTION LOCAL +DEFAULT +3 
 +4: 0+580 +0 SECTION LOCAL +DEFAULT +4 
 +5: 0+700 +0 SECTION LOCAL +DEFAULT +5 
 +6: 0+718 +0 SECTION LOCAL +DEFAULT +6 
 +7: 0+107f8 +0 SECTION LOCAL +DEFAULT +7 
 +8: 0+107f8 +0 SECTION LOCAL +DEFAULT +8 
 +9: 0+107f8 +0 SECTION LOCAL +DEFAULT +9 
 +10: 0+10830 +0 SECTION LOCAL +DEFAULT +10 
 +11: 0+10830 +0 SECTION LOCAL +DEFAULT +11 
 +12: 0+10980 +0 SECTION LOCAL +DEFAULT +12 
 +13: 0+10980 +0 SECTION LOCAL +DEFAULT +13 
 +14: 0+10980 +0 SECTION LOCAL +DEFAULT +14 
 +15: 0+109e0 +0 SECTION LOCAL +DEFAULT +15 
 +16: 0+109e0 +0 SECTION LOCAL +DEFAULT +16 
 +17: 0+10a10 +0 SECTION LOCAL +DEFAULT +17 
d128 23
a150 26
 +19: 0+ +0 SECTION LOCAL +DEFAULT +19 
 +20: 0+ +0 SECTION LOCAL +DEFAULT +20 
 +21: 0+ +0 TLS +LOCAL +DEFAULT +9 gd4
 +22: 0+8 +0 TLS +LOCAL +DEFAULT +9 ld4
 +23: 0+10 +0 TLS +LOCAL +DEFAULT +9 ld5
 +24: 0+18 +0 TLS +LOCAL +DEFAULT +9 ld6
 +25: 0+20 +0 TLS +LOCAL +DEFAULT +9 ie4
 +26: 0+28 +0 TLS +LOCAL +DEFAULT +9 le4
 +27: 0+30 +0 TLS +LOCAL +DEFAULT +9 le5
 +28: 0+718 +0 NOTYPE +LOCAL +DEFAULT +6 \.__tls_get_addr
 +29: 0+10830 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
 +30: 0+ +0 NOTYPE +GLOBAL DEFAULT +UND gd
 +31: 0+60 +0 TLS +GLOBAL DEFAULT +10 le0
 +32: 0+ +0 NOTYPE +GLOBAL DEFAULT +UND __tls_get_addr
 +33: 0+40 +0 TLS +GLOBAL DEFAULT +10 ld0
 +34: 0+68 +0 TLS +GLOBAL DEFAULT +10 le1
 +35: 0+ +0 NOTYPE +GLOBAL DEFAULT +UND ld
 +36: 0+734 +0 NOTYPE +GLOBAL DEFAULT +6 _start
 +37: 0+10a10 +0 NOTYPE +GLOBAL DEFAULT +ABS __end
 +38: 0+50 +0 TLS +GLOBAL DEFAULT +10 ld2
 +39: 0+48 +0 TLS +GLOBAL DEFAULT +10 ld1
 +40: 0+109e0 +0 NOTYPE +GLOBAL DEFAULT +ABS __bss_start
 +41: 0+109e0 +0 NOTYPE +GLOBAL DEFAULT +ABS _edata
 +42: 0+10a10 +0 NOTYPE +GLOBAL DEFAULT +ABS _end
 +43: 0+38 +0 TLS +GLOBAL DEFAULT +10 gd0
 +44: 0+58 +0 TLS +GLOBAL DEFAULT +10 ie0
@


1.1
log
@new ppc64 tls tests
@
text
@d62 2
a63 2
0+109a0 +0+4e R_PPC64_DTPREL64 +0+107f8
0+109a8 +0+4e R_PPC64_DTPREL64 +0+10810
@

