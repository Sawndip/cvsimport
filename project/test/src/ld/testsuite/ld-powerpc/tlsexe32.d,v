head	1.11;
access;
symbols
	binutils-2_24-branch:1.11.0.2
	binutils-2_24-branchpoint:1.11
	binutils-2_21_1:1.10
	binutils-2_23_2:1.10.8.1
	binutils-2_23_1:1.10
	binutils-2_23:1.10
	binutils-2_23-branch:1.10.0.8
	binutils-2_23-branchpoint:1.10
	binutils-2_22_branch:1.10.0.6
	binutils-2_22:1.10
	binutils-2_22-branch:1.10.0.4
	binutils-2_22-branchpoint:1.10
	binutils-2_21:1.10
	binutils-2_21-branch:1.10.0.2
	binutils-2_21-branchpoint:1.10
	binutils-2_20_1:1.9.14.1
	binutils-2_20:1.9.14.1
	binutils-arc-20081103-branch:1.9.0.16
	binutils-arc-20081103-branchpoint:1.9
	binutils-2_20-branch:1.9.0.14
	binutils-2_20-branchpoint:1.9
	dje-cgen-play1-branch:1.9.0.12
	dje-cgen-play1-branchpoint:1.9
	arc-20081103-branch:1.9.0.10
	arc-20081103-branchpoint:1.9
	binutils-2_19_1:1.9
	binutils-2_19:1.9
	binutils-2_19-branch:1.9.0.8
	binutils-2_19-branchpoint:1.9
	binutils-2_18:1.9
	binutils-2_18-branch:1.9.0.6
	binutils-2_18-branchpoint:1.9
	binutils-csl-coldfire-4_1-32:1.9
	binutils-csl-sourcerygxx-4_1-32:1.9
	binutils-csl-innovasic-fido-3_4_4-33:1.9
	binutils-csl-sourcerygxx-3_4_4-32:1.6.2.1
	binutils-csl-coldfire-4_1-30:1.9
	binutils-csl-sourcerygxx-4_1-30:1.9
	binutils-csl-coldfire-4_1-28:1.9
	binutils-csl-sourcerygxx-4_1-29:1.9
	binutils-csl-sourcerygxx-4_1-28:1.9
	binutils-csl-arm-2006q3-27:1.9
	binutils-csl-sourcerygxx-4_1-27:1.9
	binutils-csl-arm-2006q3-26:1.9
	binutils-csl-sourcerygxx-4_1-26:1.9
	binutils-csl-sourcerygxx-4_1-25:1.9
	binutils-csl-sourcerygxx-4_1-24:1.9
	binutils-csl-sourcerygxx-4_1-23:1.9
	binutils-csl-sourcerygxx-4_1-21:1.9
	binutils-csl-arm-2006q3-21:1.9
	binutils-csl-sourcerygxx-4_1-22:1.9
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.9
	binutils-csl-sourcerygxx-4_1-20:1.9
	binutils-csl-arm-2006q3-19:1.9
	binutils-csl-sourcerygxx-4_1-19:1.9
	binutils-csl-sourcerygxx-4_1-18:1.9
	binutils-csl-renesas-4_1-9:1.9
	binutils-csl-sourcerygxx-3_4_4-25:1.6.2.1
	binutils-csl-renesas-4_1-8:1.9
	binutils-csl-renesas-4_1-7:1.9
	binutils-csl-renesas-4_1-6:1.9
	binutils-csl-sourcerygxx-4_1-17:1.9
	binutils-csl-sourcerygxx-4_1-14:1.9
	binutils-csl-sourcerygxx-4_1-15:1.9
	binutils-csl-sourcerygxx-4_1-13:1.9
	binutils-2_17:1.9
	binutils-csl-sourcerygxx-4_1-12:1.9
	binutils-csl-sourcerygxx-3_4_4-21:1.9
	binutils-csl-wrs-linux-3_4_4-24:1.6.2.1
	binutils-csl-wrs-linux-3_4_4-23:1.6.2.1
	binutils-csl-sourcerygxx-4_1-9:1.9
	binutils-csl-sourcerygxx-4_1-8:1.9
	binutils-csl-sourcerygxx-4_1-7:1.9
	binutils-csl-arm-2006q1-6:1.9
	binutils-csl-sourcerygxx-4_1-6:1.9
	binutils-csl-wrs-linux-3_4_4-22:1.6.2.1
	binutils-csl-coldfire-4_1-11:1.9
	binutils-csl-sourcerygxx-3_4_4-19:1.9
	binutils-csl-coldfire-4_1-10:1.9
	binutils-csl-sourcerygxx-4_1-5:1.9
	binutils-csl-sourcerygxx-4_1-4:1.9
	binutils-csl-wrs-linux-3_4_4-21:1.6.2.1
	binutils-csl-morpho-4_1-4:1.9
	binutils-csl-sourcerygxx-3_4_4-17:1.9
	binutils-csl-wrs-linux-3_4_4-20:1.6.2.1
	binutils-2_17-branch:1.9.0.4
	binutils-2_17-branchpoint:1.9
	binutils-csl-2_17-branch:1.9.0.2
	binutils-csl-2_17-branchpoint:1.9
	binutils-csl-gxxpro-3_4-branch:1.6.2.1.0.4
	binutils-csl-gxxpro-3_4-branchpoint:1.6.2.1
	binutils-2_16_1:1.6.2.1
	binutils-csl-arm-2005q1b:1.6.2.1
	binutils-2_16:1.6.2.1
	binutils-csl-arm-2005q1a:1.6.2.1
	binutils-csl-arm-2005q1-branch:1.6.2.1.0.2
	binutils-csl-arm-2005q1-branchpoint:1.6.2.1
	binutils-2_16-branch:1.6.0.2
	binutils-2_16-branchpoint:1.6
	csl-arm-2004-q3d:1.6
	csl-arm-2004-q3:1.5
	binutils-2_15:1.3.6.1
	binutils-2_15-branchpoint:1.3
	csl-arm-2004-q1a:1.5
	csl-arm-2004-q1:1.4
	binutils-2_15-branch:1.3.0.6
	cagney_bfdfile-20040213-branch:1.3.0.4
	cagney_bfdfile-20040213-branchpoint:1.3
	cagney_bigcore-20040122-branch:1.3.0.2
	cagney_bigcore-20040122-branchpoint:1.3
	csl-arm-2003-q4:1.3
	binutils-2_14:1.1
	binutils-2_14-branch:1.1.0.2
	binutils-2_14-branchpoint:1.1
	binutils_latest_snapshot:1.11;
locks; strict;
comment	@# @;


1.11
date	2012.10.29.09.25.53;	author amodra;	state Exp;
branches;
next	1.10;

1.10
date	2009.09.21.11.51.02;	author amodra;	state Exp;
branches
	1.10.8.1;
next	1.9;

1.9
date	2005.08.15.15.39.47;	author amodra;	state Exp;
branches
	1.9.14.1;
next	1.8;

1.8
date	2005.05.07.02.55.55;	author amodra;	state Exp;
branches;
next	1.7;

1.7
date	2005.03.16.02.41.27;	author amodra;	state Exp;
branches;
next	1.6;

1.6
date	2004.11.02.05.40.05;	author hp;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	2004.04.24.12.41.02;	author amodra;	state Exp;
branches;
next	1.4;

1.4
date	2004.03.16.00.58.43;	author amodra;	state Exp;
branches;
next	1.3;

1.3
date	2003.11.19.03.46.08;	author amodra;	state Exp;
branches
	1.3.6.1;
next	1.2;

1.2
date	2003.07.26.10.22.01;	author amodra;	state Exp;
branches;
next	1.1;

1.1
date	2003.02.18.06.11.32;	author amodra;	state Exp;
branches;
next	;

1.10.8.1
date	2013.01.21.13.48.52;	author amodra;	state Exp;
branches;
next	;

1.9.14.1
date	2009.09.21.11.55.17;	author amodra;	state Exp;
branches;
next	;

1.6.2.1
date	2005.03.16.02.42.27;	author amodra;	state Exp;
branches;
next	;

1.3.6.1
date	2004.03.16.00.59.35;	author amodra;	state Exp;
branches;
next	;


desc
@@


1.11
log
@	* ld-powerpc/powerpc.exp: Modify emulation option passed to ld
	when little-endian.
	* ld-powerpc/apuinfo-nul.rd: Update for le output.
	* ld-powerpc/apuinfo.rd: Likewise.
	* ld-powerpc/plt1.d: Likewise.
	* ld-powerpc/relax.d: Likewise.
	* ld-powerpc/relaxr.d: Likewise.
	* ld-powerpc/sdadyn.d: Likewise.
	* ld-powerpc/tls.d: Likewise.
	* ld-powerpc/tls.g: Likewise.
	* ld-powerpc/tls.t: Likewise.
	* ld-powerpc/tls32.d: Likewise.
	* ld-powerpc/tls32.g: Likewise.
	* ld-powerpc/tls32.t: Likewise.
	* ld-powerpc/tlsexe.d: Likewise.
	* ld-powerpc/tlsexe.g: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexe.t: Likewise.
	* ld-powerpc/tlsexe32.d: Likewise.
	* ld-powerpc/tlsexe32.g: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsexe32.t: Likewise.
	* ld-powerpc/tlsexetoc.d: Likewise.
	* ld-powerpc/tlsexetoc.g: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsexetoc.t: Likewise.
	* ld-powerpc/tlsmark.d: Likewise.
	* ld-powerpc/tlsmark32.d: Likewise.
	* ld-powerpc/tlsopt1.d: Likewise.
	* ld-powerpc/tlsopt1_32.d: Likewise.
	* ld-powerpc/tlsopt2.d: Likewise.
	* ld-powerpc/tlsopt2_32.d: Likewise.
	* ld-powerpc/tlsopt3.d: Likewise.
	* ld-powerpc/tlsopt3_32.d: Likewise.
	* ld-powerpc/tlsopt4.d: Likewise.
	* ld-powerpc/tlsopt4_32.d: Likewise.
	* ld-powerpc/tlsso.d: Likewise.
	* ld-powerpc/tlsso.g: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso.t: Likewise.
	* ld-powerpc/tlsso32.d: Likewise.
	* ld-powerpc/tlsso32.g: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlsso32.t: Likewise.
	* ld-powerpc/tlstoc.d: Likewise.
	* ld-powerpc/tlstoc.g: Likewise.
	* ld-powerpc/tlstoc.t: Likewise.
	* ld-powerpc/tlstocso.d: Likewise.
	* ld-powerpc/tlstocso.g: Likewise.
	* ld-powerpc/tlstocso.t: Likewise.
	* ld-powerpc/tocopt.out: Likewise.
@
text
@#source: tls32.s
#as: -a32
#ld: tmpdir/libtlslib32.so
#objdump: -dr
#target: powerpc*-*-*

.*

Disassembly of section \.text:

.* <_start>:
.*:	(80 7f ff f0|f0 ff 7f 80) 	lwz     r3,-16\(r31\)
.*:	(7c 63 12 14|14 12 63 7c) 	add     r3,r3,r2
.*:	(38 7f ff f4|f4 ff 7f 38) 	addi    r3,r31,-12
.*:	(48 01 01 85|85 01 01 48) 	bl      .*<__tls_get_addr_opt@@plt>
.*:	(3c 62 00 00|00 00 62 3c) 	addis   r3,r2,0
.*:	(38 63 90 1c|1c 90 63 38) 	addi    r3,r3,-28644
.*:	(3c 62 00 00|00 00 62 3c) 	addis   r3,r2,0
.*:	(38 63 10 00|00 10 63 38) 	addi    r3,r3,4096
.*:	(39 23 80 20|20 80 23 39) 	addi    r9,r3,-32736
.*:	(3d 23 00 00|00 00 23 3d) 	addis   r9,r3,0
.*:	(81 49 80 24|24 80 49 81) 	lwz     r10,-32732\(r9\)
.*:	(3d 22 00 00|00 00 22 3d) 	addis   r9,r2,0
.*:	(a1 49 90 2c|2c 90 49 a1) 	lhz     r10,-28628\(r9\)
.*:	(89 42 90 30|30 90 42 89) 	lbz     r10,-28624\(r2\)
.*:	(3d 22 00 00|00 00 22 3d) 	addis   r9,r2,0
.*:	(99 49 90 34|34 90 49 99) 	stb     r10,-28620\(r9\)
.*:	(3c 62 00 00|00 00 62 3c) 	addis   r3,r2,0
.*:	(38 63 90 00|00 90 63 38) 	addi    r3,r3,-28672
.*:	(3c 62 00 00|00 00 62 3c) 	addis   r3,r2,0
.*:	(38 63 10 00|00 10 63 38) 	addi    r3,r3,4096
.*:	(91 43 80 04|04 80 43 91) 	stw     r10,-32764\(r3\)
.*:	(3d 23 00 00|00 00 23 3d) 	addis   r9,r3,0
.*:	(91 49 80 08|08 80 49 91) 	stw     r10,-32760\(r9\)
.*:	(3d 22 00 00|00 00 22 3d) 	addis   r9,r2,0
.*:	(b1 49 90 2c|2c 90 49 b1) 	sth     r10,-28628\(r9\)
.*:	(a1 42 90 14|14 90 42 a1) 	lhz     r10,-28652\(r2\)
.*:	(3d 22 00 00|00 00 22 3d) 	addis   r9,r2,0
.*:	(a9 49 90 18|18 90 49 a9) 	lha     r10,-28648\(r9\)
Disassembly of section \.got:

.* <_GLOBAL_OFFSET_TABLE_-0x10>:
	\.\.\.
.*:	(4e 80 00 21|21 00 80 4e) 	blrl

.* <_GLOBAL_OFFSET_TABLE_>:
.*:	(01 81 02 b8|b8 02 81 01) 00 00 00 00 00 00 00 00  .*
@


1.10
log
@include/elf/
	* ppc.h (DT_PPC_TLSOPT): Define.
	* ppc64.h (DT_PPC64_TLSOPT): Define.
bfd/
	* elf32-ppc.c (TLS_GET_ADDR_GLINK_SIZE): Define.
	(ADD_3_12_2, BEQLR, CMPWI_11_0, LWZ_11_3, LWZ_12_3): Define.
	(MR_0_3, MR_3_0): Define.
	(struct ppc_elf_link_hash_table): Add no_tls_get_addr_opt.
	(ppc_elf_select_plt_layout): Save emit_stub_syms param earlier.
	(ppc_elf_tls_setup): Add no_tls_get_addr_opt param and save to hash
	table.  Check for presense of __tls_get_addr_opt
	(allocate_dynrelocs): Increase glink entry size for __tls_get_addr.
	(ppc_elf_size_dynamic_sections): Add DT_PPC_TLS_OPT tag.
	(write_glink_stub): Add param p.
	(ppc_elf_relocate_section): Adjust write_glink_stub call.
	(ppc_elf_finish_dynamic_symbol): Emit special glink call stub for
	__tls_get_addr.
	* elf32-ppc.h (ppc_elf_tls_setup): Update prototype.
	* elf64-ppc.c (struct ppc_link_hash_table): Add no_tls_get_addr_opt.
	(ppc64_elf_tls_setup): Add no_tls_get_addr_opt param and save to hash
	table.  Check for presense of __tls_get_addr_opt.
	(ppc64_elf_size_dynamic_sections): Add DT_PPC64_TLS_OPT tag.
	(LD_R11_0R3, LD_R12_0R3, MR_R0_R3, CMPDI_R11_0, ADD_R3_R12_R13,
	BEQLR, MR_R3_R0, MFLR_R11, STD_R11_0R1, BCTRL, LD_R11_0R1,
	LD_R2_0R1, MTLR_R11): Define.
	(build_tls_get_addr_stub): New function.
	(ppc_build_one_stub): Call it.
	(ppc_size_one_stub): Add extra size for __tls_get_addr stub.
	(ppc64_elf_relocate_section): Don't change nop to ld 2,40(1) for
	__tls_get_addr plt call.
	* elf64-ppc.h (ppc64_elf_tls_setup): Update prototype.
binutils/
	* readelf.c (get_ppc_dynamic_type): Add TLSOPT.
	(get_ppc64_dynamic_type): Likewise.
ld/
	* emultempl/ppc32elf.em (no_tls_get_addr_opt): New var.
	(ppc_before_allocation): Pass to ppc_elf_tls_setup.
	(OPTION_NO_TLS_GET_ADDR_OPT): Define.  Redefine other options in
	terms of previous option.
	(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS): Add
	--no-tls-get-addr-optimize.
	(PARSE_AND_LIST_ARGS_CASES): Handle it.
	* emultempl/ppc64elf.em (no_tls_get_addr_opt): New var.
	(ppc_before_allocation): Pass to ppc64_elf_tls_setup.
	(OPTION_NO_TLS_GET_ADDR_OPT): Define.
	(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS): Add
	--no-tls-get-addr-optimize.
	(PARSE_AND_LIST_ARGS_CASES): Handle it.
ld/testsuite/
	* ld-powerpc/tlslib.s: Delete dot-symbol entry syms.  Add
	__tls_get_addr_opt.
	* ld-powerpc/tlslib32.s: Add __tls_get_addr_opt.
	* ld-powerpc/oldtlslib.s: New file, old-abi version of tlslib.s.
	* ld-powerpc/powerpc.exp: Build old-abi library and use it in
	two new link tests.
	* ld-powerpc/tlsexe.d: Update for new __tls_get_addr stub.
	* ld-powerpc/tlsexe.g, * ld-powerpc/tlsexe.r, *ld-powerpc/tlsexe32.d,
	* ld-powerpc/tlsexe32.g, * ld-powerpc/tlsexe32.r,
	* ld-powerpc/tlsexetoc.d, * ld-powerpc/tlsexetoc.g,
	* ld-powerpc/tlsexetoc.r: Likewise.
@
text
@d3 1
a3 1
#ld: -melf32ppc tmpdir/libtlslib32.so
d7 1
a7 1
.*: +file format elf32-powerpc
d12 28
a39 28
.*:	80 7f ff f0 	lwz     r3,-16\(r31\)
.*:	7c 63 12 14 	add     r3,r3,r2
.*:	38 7f ff f4 	addi    r3,r31,-12
.*:	48 01 01 85 	bl      .*<__tls_get_addr_opt@@plt>
.*:	3c 62 00 00 	addis   r3,r2,0
.*:	38 63 90 1c 	addi    r3,r3,-28644
.*:	3c 62 00 00 	addis   r3,r2,0
.*:	38 63 10 00 	addi    r3,r3,4096
.*:	39 23 80 20 	addi    r9,r3,-32736
.*:	3d 23 00 00 	addis   r9,r3,0
.*:	81 49 80 24 	lwz     r10,-32732\(r9\)
.*:	3d 22 00 00 	addis   r9,r2,0
.*:	a1 49 90 2c 	lhz     r10,-28628\(r9\)
.*:	89 42 90 30 	lbz     r10,-28624\(r2\)
.*:	3d 22 00 00 	addis   r9,r2,0
.*:	99 49 90 34 	stb     r10,-28620\(r9\)
.*:	3c 62 00 00 	addis   r3,r2,0
.*:	38 63 90 00 	addi    r3,r3,-28672
.*:	3c 62 00 00 	addis   r3,r2,0
.*:	38 63 10 00 	addi    r3,r3,4096
.*:	91 43 80 04 	stw     r10,-32764\(r3\)
.*:	3d 23 00 00 	addis   r9,r3,0
.*:	91 49 80 08 	stw     r10,-32760\(r9\)
.*:	3d 22 00 00 	addis   r9,r2,0
.*:	b1 49 90 2c 	sth     r10,-28628\(r9\)
.*:	a1 42 90 14 	lhz     r10,-28652\(r2\)
.*:	3d 22 00 00 	addis   r9,r2,0
.*:	a9 49 90 18 	lha     r10,-28648\(r9\)
d44 1
a44 1
.*:	4e 80 00 21 	blrl
d47 1
a47 1
.*:	01 81 02 b8 00 00 00 00 00 00 00 00  .*
@


1.10.8.1
log
@	PR 12549
	PR 14493
	PR 14567
	PR 14662
	PR 14758
	PR 14813
	PR 14904
	PR 14915
	PR 14926
	PR 14950
	PR 14962
	Apply mainline patches
@
text
@d3 1
a3 1
#ld: tmpdir/libtlslib32.so
d7 1
a7 1
.*
d12 28
a39 28
.*:	(80 7f ff f0|f0 ff 7f 80) 	lwz     r3,-16\(r31\)
.*:	(7c 63 12 14|14 12 63 7c) 	add     r3,r3,r2
.*:	(38 7f ff f4|f4 ff 7f 38) 	addi    r3,r31,-12
.*:	(48 01 01 85|85 01 01 48) 	bl      .*<__tls_get_addr_opt@@plt>
.*:	(3c 62 00 00|00 00 62 3c) 	addis   r3,r2,0
.*:	(38 63 90 1c|1c 90 63 38) 	addi    r3,r3,-28644
.*:	(3c 62 00 00|00 00 62 3c) 	addis   r3,r2,0
.*:	(38 63 10 00|00 10 63 38) 	addi    r3,r3,4096
.*:	(39 23 80 20|20 80 23 39) 	addi    r9,r3,-32736
.*:	(3d 23 00 00|00 00 23 3d) 	addis   r9,r3,0
.*:	(81 49 80 24|24 80 49 81) 	lwz     r10,-32732\(r9\)
.*:	(3d 22 00 00|00 00 22 3d) 	addis   r9,r2,0
.*:	(a1 49 90 2c|2c 90 49 a1) 	lhz     r10,-28628\(r9\)
.*:	(89 42 90 30|30 90 42 89) 	lbz     r10,-28624\(r2\)
.*:	(3d 22 00 00|00 00 22 3d) 	addis   r9,r2,0
.*:	(99 49 90 34|34 90 49 99) 	stb     r10,-28620\(r9\)
.*:	(3c 62 00 00|00 00 62 3c) 	addis   r3,r2,0
.*:	(38 63 90 00|00 90 63 38) 	addi    r3,r3,-28672
.*:	(3c 62 00 00|00 00 62 3c) 	addis   r3,r2,0
.*:	(38 63 10 00|00 10 63 38) 	addi    r3,r3,4096
.*:	(91 43 80 04|04 80 43 91) 	stw     r10,-32764\(r3\)
.*:	(3d 23 00 00|00 00 23 3d) 	addis   r9,r3,0
.*:	(91 49 80 08|08 80 49 91) 	stw     r10,-32760\(r9\)
.*:	(3d 22 00 00|00 00 22 3d) 	addis   r9,r2,0
.*:	(b1 49 90 2c|2c 90 49 b1) 	sth     r10,-28628\(r9\)
.*:	(a1 42 90 14|14 90 42 a1) 	lhz     r10,-28652\(r2\)
.*:	(3d 22 00 00|00 00 22 3d) 	addis   r9,r2,0
.*:	(a9 49 90 18|18 90 49 a9) 	lha     r10,-28648\(r9\)
d44 1
a44 1
.*:	(4e 80 00 21|21 00 80 4e) 	blrl
d47 1
a47 1
.*:	(01 81 02 b8|b8 02 81 01) 00 00 00 00 00 00 00 00  .*
@


1.9
log
@Adjust for dynamic sym changes.
@
text
@d15 1
a15 1
.*:	48 01 01 85 	bl      .*<__tls_get_addr@@plt>
d47 1
a47 1
.*:	01 81 02 b4 00 00 00 00 00 00 00 00  .*
@


1.9.14.1
log
@include/elf/
	* ppc.h (DT_PPC_TLSOPT): Define.
	* ppc64.h (DT_PPC64_TLSOPT): Define.
bfd/
	* elf32-ppc.c (TLS_GET_ADDR_GLINK_SIZE): Define.
	(ADD_3_12_2, BEQLR, CMPWI_11_0, LWZ_11_3, LWZ_12_3): Define.
	(MR_0_3, MR_3_0): Define.
	(struct ppc_elf_link_hash_table): Add no_tls_get_addr_opt.
	(ppc_elf_select_plt_layout): Save emit_stub_syms param earlier.
	(ppc_elf_tls_setup): Add no_tls_get_addr_opt param and save to hash
	table.  Check for presense of __tls_get_addr_opt
	(allocate_dynrelocs): Increase glink entry size for __tls_get_addr.
	(ppc_elf_size_dynamic_sections): Add DT_PPC_TLS_OPT tag.
	(write_glink_stub): Add param p.
	(ppc_elf_relocate_section): Adjust write_glink_stub call.
	(ppc_elf_finish_dynamic_symbol): Emit special glink call stub for
	__tls_get_addr.
	* elf32-ppc.h (ppc_elf_tls_setup): Update prototype.
	* elf64-ppc.c (struct ppc_link_hash_table): Add no_tls_get_addr_opt.
	(ppc64_elf_tls_setup): Add no_tls_get_addr_opt param and save to hash
	table.  Check for presense of __tls_get_addr_opt.
	(ppc64_elf_size_dynamic_sections): Add DT_PPC64_TLS_OPT tag.
	(LD_R11_0R3, LD_R12_0R3, MR_R0_R3, CMPDI_R11_0, ADD_R3_R12_R13,
	BEQLR, MR_R3_R0, MFLR_R11, STD_R11_0R1, BCTRL, LD_R11_0R1,
	LD_R2_0R1, MTLR_R11): Define.
	(build_tls_get_addr_stub): New function.
	(ppc_build_one_stub): Call it.
	(ppc_size_one_stub): Add extra size for __tls_get_addr stub.
	(ppc64_elf_relocate_section): Don't change nop to ld 2,40(1) for
	__tls_get_addr plt call.
	* elf64-ppc.h (ppc64_elf_tls_setup): Update prototype.
binutils/
	* readelf.c (get_ppc_dynamic_type): Add TLSOPT.
	(get_ppc64_dynamic_type): Likewise.
ld/
	* emultempl/ppc32elf.em (no_tls_get_addr_opt): New var.
	(ppc_before_allocation): Pass to ppc_elf_tls_setup.
	(OPTION_NO_TLS_GET_ADDR_OPT): Define.  Redefine other options in
	terms of previous option.
	(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS): Add
	--no-tls-get-addr-optimize.
	(PARSE_AND_LIST_ARGS_CASES): Handle it.
	* emultempl/ppc64elf.em (no_tls_get_addr_opt): New var.
	(ppc_before_allocation): Pass to ppc64_elf_tls_setup.
	(OPTION_NO_TLS_GET_ADDR_OPT): Define.
	(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS): Add
	--no-tls-get-addr-optimize.
	(PARSE_AND_LIST_ARGS_CASES): Handle it.
ld/testsuite/
	* ld-powerpc/tlslib.s: Delete dot-symbol entry syms.  Add
	__tls_get_addr_opt.
	* ld-powerpc/tlslib32.s: Add __tls_get_addr_opt.
	* ld-powerpc/oldtlslib.s: New file, old-abi version of tlslib.s.
	* ld-powerpc/powerpc.exp: Build old-abi library and use it in
	two new link tests.
	* ld-powerpc/tlsexe.d: Update for new __tls_get_addr stub.
	* ld-powerpc/tlsexe.g, * ld-powerpc/tlsexe.r, *ld-powerpc/tlsexe32.d,
	* ld-powerpc/tlsexe32.g, * ld-powerpc/tlsexe32.r,
	* ld-powerpc/tlsexetoc.d, * ld-powerpc/tlsexetoc.g,
	* ld-powerpc/tlsexetoc.r: Likewise.
@
text
@d15 1
a15 1
.*:	48 01 01 85 	bl      .*<__tls_get_addr_opt@@plt>
d47 1
a47 1
.*:	01 81 02 b8 00 00 00 00 00 00 00 00  .*
@


1.8
log
@bfd/
	* elf-bfd.h (struct elf_backend_data): Remove got_symbol_offset.
	* elfxx-target.h (elf_backend_got_symbol_offset): Delete.
	* elflink.c (_bfd_elf_create_got_section): Use zero in place of
	got_symbol_offset.
	* elf-m10300.c (_bfd_mn10300_elf_create_got_section): Likewise.
	* elf32-frv.c (_frv_create_got_section): Likewise.
	* elf32-i370.c (i370_elf_finish_dynamic_sections): Delete ppc code.
	(elf_backend_got_symbol_offset): Don't define.
	* elf64-ppc.c (elf_backend_got_symbol_offset): Don't define.
	* elf32-ppc.c (struct ppc_elf_link_hash_table): Add got_header_size
	and got_gap.
	(ppc_elf_create_got): Tidy.
	(ppc_elf_create_dynamic_sections): Don't set SEC_IN_MEMORY for .plt.
	(ppc_elf_check_relocs): Reduce string comparisons by using elf.hgot.
	(ppc_elf_gc_sweep_hook): Likewise.
	(ppc_elf_relocate_section): Likewise.
	(ppc_elf_finish_dynamic_symbol): Likewise.
	(allocate_got): New function.
	(allocate_dynrelocs): Use allocate_got.
	(ppc_elf_size_dynamic_sections): Likewise.  Delay tlsld_got allocation
	so that local got can refcount it.  Set got_header_size.
	(ppc_elf_relocate_section): Use value of elf.hgot rather than hard-
	coded 4.
	(ppc_elf_finish_dynamic_sections): Likewise.
	(elf_backend_got_symbol_offset): Don't define.
	(elf_backend_got_header_size): Ditto.
ld/testsuite/
	* ld-powerpc/tlsexe32.d: Update for changed got layout.
	* ld-powerpc/tlsexe32.g: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsso32.d: Likewise.
	* ld-powerpc/tlsso32.g: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
@
text
@d47 1
a47 1
.*:	01 81 02 d0 00 00 00 00 00 00 00 00  .*
@


1.7
log
@bfd/
	* elf32-ppc.c (ppc_elf_create_linker_section): Set SEC_LINKER_CREATED
	on section.  Correct comment, and add FIXME.
	(ppc_elf_additional_program_headers): Don't bump header count for
	interp.  Test SEC_ALLOC, not SEC_LOAD, and don't test size.
	(ppc_elf_size_dynamic_sections): Don't strip sdata and sdata2, but
	do allocate memory if they need it.
ld/
	* emulparams/elf32ppclinux.sh (OTHER_READWRITE_SECTION): Delete.
	(OTHER_RELRO_SECTIONS): Set this instead.
ld/testsuite/
	* ld-powerpc/tlsexe32.d: Update.
	* ld-powerpc/tlsexe32.g: Update.
	* ld-powerpc/tlsexe32.r: Update.
	* ld-powerpc/tlsexe32.t: Update.
	* ld-powerpc/tlsso32.d: Update.
	* ld-powerpc/tlsso32.g: Update.
	* ld-powerpc/tlsso32.r: Update.
	* ld-powerpc/tlsso32.t: Update.
@
text
@d12 1
a12 1
.*:	80 7f 00 0c 	lwz     r3,12\(r31\)
d14 1
a14 1
.*:	38 7f 00 10 	addi    r3,r31,16
d42 2
a43 1
.* <_GLOBAL_OFFSET_TABLE_-0x4>:
d45 1
d47 1
a47 2
.*:	01 81 02 d0 00 00 00 00 00 00 00 00 00 00 00 00     .*
	\.\.\.
@


1.6
log
@	* ld-cris/expdyn1.d, ld-cris/expdyn5.d, ld-cris/expdyn6.d,
	ld-cris/expdyn7.d, ld-cris/gotplt1.d, ld-cris/gotplt2.d,
	ld-cris/gotplt3.d, ld-cris/hiddef1.d, ld-cris/libdso-2.d,
	ld-cris/locref1.d, ld-cris/locref2.d, ld-cris/weakref2.d,
	ld-i386/tlsbin.rd, ld-i386/tlsnopic.rd, ld-i386/tlspic.rd,
	ld-ia64/tlsbin.dd, ld-ia64/tlsbin.rd, ld-ia64/tlspic.dd,
	ld-ia64/tlspic.rd, ld-powerpc/tlsexe32.d, ld-powerpc/tlsexe32.g,
	ld-powerpc/tlsexe32.r, ld-powerpc/tlsexe32.t,
	ld-powerpc/tlsso32.d, ld-powerpc/tlsso32.g, ld-powerpc/tlsso32.r,
	ld-powerpc/tlsso32.t, ld-s390/tlsbin.dd, ld-s390/tlsbin.rd,
	ld-s390/tlspic.rd, ld-sparc/tlssunbin32.rd,
	ld-sparc/tlssunpic32.rd, ld-x86-64/tlsbin.rd, ld-x86-64/tlspic.dd,
	ld-x86-64/tlspic.rd: Adjust for _GLOBAL_OFFSET_TABLE_ now hidden.
@
text
@d11 29
a39 29
01800264 <_start>:
 1800264:	80 7f 00 0c 	lwz     r3,12\(r31\)
 1800268:	7c 63 12 14 	add     r3,r3,r2
 180026c:	38 7f 00 10 	addi    r3,r31,16
 1800270:	48 01 01 85 	bl      18103f4 .*
 1800274:	3c 62 00 00 	addis   r3,r2,0
 1800278:	38 63 90 1c 	addi    r3,r3,-28644
 180027c:	3c 62 00 00 	addis   r3,r2,0
 1800280:	38 63 10 00 	addi    r3,r3,4096
 1800284:	39 23 80 20 	addi    r9,r3,-32736
 1800288:	3d 23 00 00 	addis   r9,r3,0
 180028c:	81 49 80 24 	lwz     r10,-32732\(r9\)
 1800290:	3d 22 00 00 	addis   r9,r2,0
 1800294:	a1 49 90 2c 	lhz     r10,-28628\(r9\)
 1800298:	89 42 90 30 	lbz     r10,-28624\(r2\)
 180029c:	3d 22 00 00 	addis   r9,r2,0
 18002a0:	99 49 90 34 	stb     r10,-28620\(r9\)
 18002a4:	3c 62 00 00 	addis   r3,r2,0
 18002a8:	38 63 90 00 	addi    r3,r3,-28672
 18002ac:	3c 62 00 00 	addis   r3,r2,0
 18002b0:	38 63 10 00 	addi    r3,r3,4096
 18002b4:	91 43 80 04 	stw     r10,-32764\(r3\)
 18002b8:	3d 23 00 00 	addis   r9,r3,0
 18002bc:	91 49 80 08 	stw     r10,-32760\(r9\)
 18002c0:	3d 22 00 00 	addis   r9,r2,0
 18002c4:	b1 49 90 2c 	sth     r10,-28628\(r9\)
 18002c8:	a1 42 90 14 	lhz     r10,-28652\(r2\)
 18002cc:	3d 22 00 00 	addis   r9,r2,0
 18002d0:	a9 49 90 18 	lha     r10,-28648\(r9\)
d42 4
a45 4
01810390 <_GLOBAL_OFFSET_TABLE_-0x4>:
 1810390:	4e 80 00 21 	blrl
01810394 <_GLOBAL_OFFSET_TABLE_>:
 1810394:	01 81 02 f0 00 00 00 00 00 00 00 00 00 00 00 00     .*
@


1.6.2.1
log
@bfd/
	* elf32-ppc.c (ppc_elf_create_linker_section): Set SEC_LINKER_CREATED
	on section.  Correct comment, and add FIXME.
	(ppc_elf_additional_program_headers): Don't bump header count for
	interp.  Test SEC_ALLOC, not SEC_LOAD, and don't test size.
	(ppc_elf_size_dynamic_sections): Don't strip sdata and sdata2, but
	do allocate memory if they need it.
ld/
	* emulparams/elf32ppclinux.sh (OTHER_READWRITE_SECTION): Delete.
	(OTHER_RELRO_SECTIONS): Set this instead.
ld/testsuite/
	* ld-powerpc/tlsexe32.d: Update.
	* ld-powerpc/tlsexe32.g: Update.
	* ld-powerpc/tlsexe32.r: Update.
	* ld-powerpc/tlsexe32.t: Update.
	* ld-powerpc/tlsso32.d: Update.
	* ld-powerpc/tlsso32.g: Update.
	* ld-powerpc/tlsso32.r: Update.
	* ld-powerpc/tlsso32.t: Update.
@
text
@d11 29
a39 29
.* <_start>:
.*:	80 7f 00 0c 	lwz     r3,12\(r31\)
.*:	7c 63 12 14 	add     r3,r3,r2
.*:	38 7f 00 10 	addi    r3,r31,16
.*:	48 01 01 85 	bl      .*<__tls_get_addr@@plt>
.*:	3c 62 00 00 	addis   r3,r2,0
.*:	38 63 90 1c 	addi    r3,r3,-28644
.*:	3c 62 00 00 	addis   r3,r2,0
.*:	38 63 10 00 	addi    r3,r3,4096
.*:	39 23 80 20 	addi    r9,r3,-32736
.*:	3d 23 00 00 	addis   r9,r3,0
.*:	81 49 80 24 	lwz     r10,-32732\(r9\)
.*:	3d 22 00 00 	addis   r9,r2,0
.*:	a1 49 90 2c 	lhz     r10,-28628\(r9\)
.*:	89 42 90 30 	lbz     r10,-28624\(r2\)
.*:	3d 22 00 00 	addis   r9,r2,0
.*:	99 49 90 34 	stb     r10,-28620\(r9\)
.*:	3c 62 00 00 	addis   r3,r2,0
.*:	38 63 90 00 	addi    r3,r3,-28672
.*:	3c 62 00 00 	addis   r3,r2,0
.*:	38 63 10 00 	addi    r3,r3,4096
.*:	91 43 80 04 	stw     r10,-32764\(r3\)
.*:	3d 23 00 00 	addis   r9,r3,0
.*:	91 49 80 08 	stw     r10,-32760\(r9\)
.*:	3d 22 00 00 	addis   r9,r2,0
.*:	b1 49 90 2c 	sth     r10,-28628\(r9\)
.*:	a1 42 90 14 	lhz     r10,-28652\(r2\)
.*:	3d 22 00 00 	addis   r9,r2,0
.*:	a9 49 90 18 	lha     r10,-28648\(r9\)
d42 4
a45 4
.* <_GLOBAL_OFFSET_TABLE_-0x4>:
.*:	4e 80 00 21 	blrl
.* <_GLOBAL_OFFSET_TABLE_>:
.*:	01 81 02 d0 00 00 00 00 00 00 00 00 00 00 00 00     .*
@


1.5
log
@	* ld-powerpc/tlsexe32.d: Update.
	* ld-powerpc/tlsso32.d: Update.
@
text
@d11 17
a27 7
0180028c <_start>:
 180028c:	80 7f 00 0c 	lwz     r3,12\(r31\)
 1800290:	7c 63 12 14 	add     r3,r3,r2
 1800294:	38 7f 00 10 	addi    r3,r31,16
 1800298:	48 01 01 85 	bl      181041c .*
 180029c:	3c 62 00 00 	addis   r3,r2,0
 18002a0:	38 63 90 1c 	addi    r3,r3,-28644
d29 11
a39 21
 18002a8:	38 63 10 00 	addi    r3,r3,4096
 18002ac:	39 23 80 20 	addi    r9,r3,-32736
 18002b0:	3d 23 00 00 	addis   r9,r3,0
 18002b4:	81 49 80 24 	lwz     r10,-32732\(r9\)
 18002b8:	3d 22 00 00 	addis   r9,r2,0
 18002bc:	a1 49 90 2c 	lhz     r10,-28628\(r9\)
 18002c0:	89 42 90 30 	lbz     r10,-28624\(r2\)
 18002c4:	3d 22 00 00 	addis   r9,r2,0
 18002c8:	99 49 90 34 	stb     r10,-28620\(r9\)
 18002cc:	3c 62 00 00 	addis   r3,r2,0
 18002d0:	38 63 90 00 	addi    r3,r3,-28672
 18002d4:	3c 62 00 00 	addis   r3,r2,0
 18002d8:	38 63 10 00 	addi    r3,r3,4096
 18002dc:	91 43 80 04 	stw     r10,-32764\(r3\)
 18002e0:	3d 23 00 00 	addis   r9,r3,0
 18002e4:	91 49 80 08 	stw     r10,-32760\(r9\)
 18002e8:	3d 22 00 00 	addis   r9,r2,0
 18002ec:	b1 49 90 2c 	sth     r10,-28628\(r9\)
 18002f0:	a1 42 90 14 	lhz     r10,-28652\(r2\)
 18002f4:	3d 22 00 00 	addis   r9,r2,0
 18002f8:	a9 49 90 18 	lha     r10,-28648\(r9\)
d42 4
a45 3
018103b8 <\.got>:
 18103b8:	4e 80 00 21 	blrl
 18103bc:	01 81 03 18 	\.long 0x1810318
@


1.4
log
@opcodes/
	* ppc-dis.c (print_insn_powerpc): Don't print tabs.  Handle
	PPC_OPERANDS_GPR_0.
	* ppc-opc.c (RA0): Define.
	(RAQ, RAL, RAM, RAS, RSQ, RTQ, RSO): Use PPC_OPERAND_GPR_0.
	(RAOPT): Rename from RAO.  Update all uses.
	(powerpc_opcodes): Use RA0 as appropriate.  Add "lsdx", "lsdi",
	"stsdx", "stsdi", "lmd" and "stmd" insns.

include/opcode/
	* ppc.h (PPC_OPERAND_GPR_0): Define.  Bump other operand defines.

gas/testsuite/
	Update gas/ppc/.

ld/testsuite/
	Update ld-powerpc/.
@
text
@a45 4
Disassembly of section \.plt:

018103d4 <\.plt>:
	\.\.\.
@


1.3
log
@	* ld-powerpc/tlsexe32.d: Update for changed symbols from objdump.
	* ld-powerpc/tlsso32.d: Likewise.
@
text
@d12 28
a39 28
 180028c:	80 7f 00 0c 	lwz	r3,12\(r31\)
 1800290:	7c 63 12 14 	add	r3,r3,r2
 1800294:	38 7f 00 10 	addi	r3,r31,16
 1800298:	48 01 01 85 	bl	181041c .*
 180029c:	3c 62 00 00 	addis	r3,r2,0
 18002a0:	38 63 90 1c 	addi	r3,r3,-28644
 18002a4:	3c 62 00 00 	addis	r3,r2,0
 18002a8:	38 63 10 00 	addi	r3,r3,4096
 18002ac:	39 23 80 20 	addi	r9,r3,-32736
 18002b0:	3d 23 00 00 	addis	r9,r3,0
 18002b4:	81 49 80 24 	lwz	r10,-32732\(r9\)
 18002b8:	3d 22 00 00 	addis	r9,r2,0
 18002bc:	a1 49 90 2c 	lhz	r10,-28628\(r9\)
 18002c0:	89 42 90 30 	lbz	r10,-28624\(r2\)
 18002c4:	3d 22 00 00 	addis	r9,r2,0
 18002c8:	99 49 90 34 	stb	r10,-28620\(r9\)
 18002cc:	3c 62 00 00 	addis	r3,r2,0
 18002d0:	38 63 90 00 	addi	r3,r3,-28672
 18002d4:	3c 62 00 00 	addis	r3,r2,0
 18002d8:	38 63 10 00 	addi	r3,r3,4096
 18002dc:	91 43 80 04 	stw	r10,-32764\(r3\)
 18002e0:	3d 23 00 00 	addis	r9,r3,0
 18002e4:	91 49 80 08 	stw	r10,-32760\(r9\)
 18002e8:	3d 22 00 00 	addis	r9,r2,0
 18002ec:	b1 49 90 2c 	sth	r10,-28628\(r9\)
 18002f0:	a1 42 90 14 	lhz	r10,-28652\(r2\)
 18002f4:	3d 22 00 00 	addis	r9,r2,0
 18002f8:	a9 49 90 18 	lha	r10,-28648\(r9\)
@


1.3.6.1
log
@opcodes/
	* ppc-dis.c (print_insn_powerpc): Don't print tabs.  Handle
	PPC_OPERANDS_GPR_0.
	* ppc-opc.c (RA0): Define.
	(RAQ, RAL, RAM, RAS, RSQ, RTQ, RSO): Use PPC_OPERAND_GPR_0.
	(RAOPT): Rename from RAO.  Update all uses.
	(powerpc_opcodes): Use RA0 as appropriate.  Add "lsdx", "lsdi",
	"stsdx", "stsdi", "lmd" and "stmd" insns.

include/opcode/
	* ppc.h (PPC_OPERAND_GPR_0): Define.  Bump other operand defines.

gas/testsuite/
	Update gas/ppc/.

ld/testsuite/
	Update ld-powerpc/.
@
text
@d12 28
a39 28
 180028c:	80 7f 00 0c 	lwz     r3,12\(r31\)
 1800290:	7c 63 12 14 	add     r3,r3,r2
 1800294:	38 7f 00 10 	addi    r3,r31,16
 1800298:	48 01 01 85 	bl      181041c .*
 180029c:	3c 62 00 00 	addis   r3,r2,0
 18002a0:	38 63 90 1c 	addi    r3,r3,-28644
 18002a4:	3c 62 00 00 	addis   r3,r2,0
 18002a8:	38 63 10 00 	addi    r3,r3,4096
 18002ac:	39 23 80 20 	addi    r9,r3,-32736
 18002b0:	3d 23 00 00 	addis   r9,r3,0
 18002b4:	81 49 80 24 	lwz     r10,-32732\(r9\)
 18002b8:	3d 22 00 00 	addis   r9,r2,0
 18002bc:	a1 49 90 2c 	lhz     r10,-28628\(r9\)
 18002c0:	89 42 90 30 	lbz     r10,-28624\(r2\)
 18002c4:	3d 22 00 00 	addis   r9,r2,0
 18002c8:	99 49 90 34 	stb     r10,-28620\(r9\)
 18002cc:	3c 62 00 00 	addis   r3,r2,0
 18002d0:	38 63 90 00 	addi    r3,r3,-28672
 18002d4:	3c 62 00 00 	addis   r3,r2,0
 18002d8:	38 63 10 00 	addi    r3,r3,4096
 18002dc:	91 43 80 04 	stw     r10,-32764\(r3\)
 18002e0:	3d 23 00 00 	addis   r9,r3,0
 18002e4:	91 49 80 08 	stw     r10,-32760\(r9\)
 18002e8:	3d 22 00 00 	addis   r9,r2,0
 18002ec:	b1 49 90 2c 	sth     r10,-28628\(r9\)
 18002f0:	a1 42 90 14 	lhz     r10,-28652\(r2\)
 18002f4:	3d 22 00 00 	addis   r9,r2,0
 18002f8:	a9 49 90 18 	lha     r10,-28648\(r9\)
@


1.2
log
@Update tests for corrected section attributes and objdump change.
@
text
@d15 1
a15 1
 1800298:	48 01 01 85 	bl	181041c <__bss_start\+0x48>
@


1.1
log
@New tests.
@
text
@d46 4
@

