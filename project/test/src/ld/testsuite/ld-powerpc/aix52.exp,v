head	1.17;
access;
symbols
	binutils-2_24-branch:1.17.0.2
	binutils-2_24-branchpoint:1.17
	binutils-2_21_1:1.16
	binutils-2_23_2:1.16
	binutils-2_23_1:1.16
	binutils-2_23:1.16
	binutils-2_23-branch:1.16.0.8
	binutils-2_23-branchpoint:1.16
	binutils-2_22_branch:1.16.0.6
	binutils-2_22:1.16
	binutils-2_22-branch:1.16.0.4
	binutils-2_22-branchpoint:1.16
	binutils-2_21:1.16
	binutils-2_21-branch:1.16.0.2
	binutils-2_21-branchpoint:1.16
	binutils-2_20_1:1.15.4.1
	binutils-2_20:1.15
	binutils-2_20-branch:1.15.0.4
	binutils-2_20-branchpoint:1.15
	dje-cgen-play1-branch:1.15.0.2
	dje-cgen-play1-branchpoint:1.15
	binutils_latest_snapshot:1.17;
locks; strict;
comment	@# @;


1.17
date	2013.02.19.01.10.01;	author macro;	state Exp;
branches;
next	1.16;

1.16
date	2010.01.23.12.05.33;	author rsandifo;	state Exp;
branches;
next	1.15;

1.15
date	2009.06.02.18.51.33;	author rsandifo;	state Exp;
branches
	1.15.4.1;
next	1.14;

1.14
date	2009.04.16.23.07.00;	author rsandifo;	state Exp;
branches;
next	1.13;

1.13
date	2009.04.01.20.09.03;	author rsandifo;	state Exp;
branches;
next	1.12;

1.12
date	2009.04.01.19.27.38;	author rsandifo;	state Exp;
branches;
next	1.11;

1.11
date	2009.03.14.09.35.46;	author rsandifo;	state Exp;
branches;
next	1.10;

1.10
date	2009.03.14.09.35.06;	author rsandifo;	state Exp;
branches;
next	1.9;

1.9
date	2009.03.14.09.34.27;	author rsandifo;	state Exp;
branches;
next	1.8;

1.8
date	2009.03.14.09.33.38;	author rsandifo;	state Exp;
branches;
next	1.7;

1.7
date	2009.03.14.09.32.56;	author rsandifo;	state Exp;
branches;
next	1.6;

1.6
date	2009.03.14.09.32.33;	author rsandifo;	state Exp;
branches;
next	1.5;

1.5
date	2009.03.14.09.18.22;	author rsandifo;	state Exp;
branches;
next	1.4;

1.4
date	2009.03.14.09.17.32;	author rsandifo;	state Exp;
branches;
next	1.3;

1.3
date	2009.03.14.09.16.01;	author rsandifo;	state Exp;
branches;
next	1.2;

1.2
date	2009.03.14.09.15.34;	author rsandifo;	state Exp;
branches;
next	1.1;

1.1
date	2009.03.14.09.14.30;	author rsandifo;	state Exp;
branches;
next	;

1.15.4.1
date	2010.01.30.09.58.03;	author rsandifo;	state Exp;
branches;
next	;


desc
@@


1.17
log
@	* lib/ld-lib.exp (run_ld_link_tests): Add another argument, pass
	its contents to ar_simple_create and ld_simple_link after
	objfiles.
	* ld-aarch64/aarch64-elf.exp: Adjust accordingly.
	* ld-alpha/alpha.exp: Likewise.
	* ld-arm/arm-elf.exp: Likewise.
	* ld-arm/export-class.exp: Likewise.
	* ld-elf/comm-data.exp: Likewise.
	* ld-elf/eh-group.exp: Likewise.
	* ld-elf/elf.exp: Likewise.
	* ld-elf/export-class.exp: Likewise.
	* ld-elfvers/vers.exp: Likewise.
	* ld-frv/tls.exp: Likewise.
	* ld-i386/export-class.exp: Likewise.
	* ld-i386/i386.exp: Likewise.
	* ld-ia64/ia64.exp: Likewise.
	* ld-libs/libs.exp: Likewise.
	* ld-m68k/m68k.exp: Likewise.
	* ld-metag/metag.exp: Likewise.
	* ld-mips-elf/comm-data.exp: Likewise.
	* ld-mips-elf/export-class.exp: Likewise.
	* ld-mips-elf/mips-elf.exp: Likewise.
	* ld-mn10300/mn10300.exp: Likewise.
	* ld-pe/pe-compile.exp: Likewise.
	* ld-pe/pe.exp: Likewise.
	* ld-plugin/plugin.exp: Likewise.
	* ld-powerpc/aix52.exp: Likewise.
	* ld-powerpc/export-class.exp: Likewise.
	* ld-powerpc/powerpc.exp: Likewise.
	* ld-s390/s390.exp: Likewise.
	* ld-sh/sh-vxworks.exp: Likewise.
	* ld-sh/sh64/sh64.exp: Likewise.
	* ld-sparc/sparc.exp: Likewise.
	* ld-tic6x/tic6x.exp: Likewise.
	* ld-tilegx/tilegx.exp: Likewise.
	* ld-tilepro/tilepro.exp: Likewise.
	* ld-undefined/entry.exp: Likewise.
	* ld-vax-elf/vax-elf.exp: Likewise.
	* ld-x86-64/dwarfreloc.exp: Likewise.
	* ld-x86-64/export-class.exp: Likewise.
	* ld-x86-64/x86-64.exp: Likewise.
	* ld-xc16x/xc16x.exp: Likewise.
	* ld-xstormy16/xstormy16.exp: Likewise.
	* ld-xtensa/xtensa.exp: Likewise.
@
text
@# Expect script for AIX 5.2+ tests
#   Copyright 2009 Free Software Foundation
#
# This file is part of the GNU Binutils.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
# MA 02110-1301, USA.
#

if { ![istarget "powerpc*-*-aix\[5-9\]*"]
     || [istarget "powerpc*-*-aix5.\[01\]*"] } {
    return
}

# Run a run_link_tests-style test for AIX.  SIZE selects the target size
# (32 or 64).  The other arguments are elements of a run_link_tests test.
#
# Make the following changes before running the test:
#
#    - Mention SIZE in the test name.
#    - Add "-aSIZE --defsym size=SIZE" to the assembler options.
#    - Add the source directory to any "-bI:" and "-bE:" linker options.
#    - Add "-bSIZE" to the linker options.
#    - Add "-XSIZE" to the archiver options.
#    - Replace "SIZE" with SIZE in TOOLS.
#    - When testing 64-bit targets:
#      - Turn tmpdir/aix-* into tmpdir/aix64-*.
#      - Turn tmpdir/libaix-* into tmpdir/libaix64-*.
#      - Turn -laix* into -laix64*, to compensate for the above.
proc run_aix_test { size name ldopts asopts sources tools output } {
    global srcdir subdir

    if { $size == 64 } {
	regsub -all {tmpdir/aix-} $ldopts {tmpdir/aix64-} ldopts
	regsub {^aix} $output {aix64} output

	regsub -all -- {-laix-} $ldopts {-laix64-} ldopts
	regsub {^libaix} $output {libaix64} output
    }
    if { [regexp {.a$} $output] } {
	append ldopts " -X$size"
    } else {
	regsub -all {(-b[IE]):} $ldopts "\\1:$srcdir/$subdir/" ldopts
	append ldopts " -b$size"
    }
    regsub -all {SIZE} $tools $size tools
    run_ld_link_tests [list [list "$name ($size-bit)" \
				 $ldopts "" \
				 "$asopts -a$size --defsym size=$size" \
				 $sources \
				 $tools \
				 $output]]
}

foreach file { "aix-lineno-1.txt" } {
    remote_upload host "$srcdir/$subdir/$file" "tmpdir/$file"
}

set aix52tests {
    {"Absolute branch test 1"
     "-shared -bI:aix-abs-branch-1.im -bE:aix-abs-branch-1.ex"
     "" {aix-abs-branch-1.s}
     {{objdump {-dR} aix-abs-branch-1.dd} {nm {} aix-abs-branch-1.nd}}
     "aix-abs-branch-1.so"}

    {"Relocations against absolute symbols 1"
     "-shared -bI:aix-abs-reloc-1.im -bE:aix-abs-reloc-1.ex"
     {} {aix-abs-reloc-1.s}
     {{objdump -sRj.data aix-abs-reloc-1.od} {nm {} aix-abs-reloc-1.nd}}
     "aix-abs-reloc-1.so"}

    {"Core sections test 1" "-shared -bE:aix-core-sec-1.ex"
     "" {aix-core-sec-1.s}
     {{objdump -h aix-core-sec-1.hd}}
     "aix-core-sec-1.so"}

    {"Core sections test 2" "-shared -bE:aix-core-sec-2.ex"
     "" {aix-core-sec-2.s}
     {{objdump -h aix-core-sec-2.hd}}
     "aix-core-sec-2.so"}

    {"Core sections test 3" "-shared -bE:aix-core-sec-3.ex"
     "" {aix-core-sec-3.s}
     {{objdump -h aix-core-sec-3.hd}}
     "aix-core-sec-3.so"}

    {"Duplicate symbol check 1 (rel)" "-r"
     "" {aix-no-dup-syms-1a.s aix-no-dup-syms-1b.s}
     {{nm {} aix-no-dup-syms-1-rel.nd} {objdump -r aix-no-dup-syms-1-rel.rd}}
     "aix-no-dup-syms-1.o"}

    {"Duplicate symbol check 1 (shared)"
     "-shared --allow-multiple-definition -bI:aix-no-dup-syms-1.im -bE:aix-no-dup-syms-1.ex"
     "" {aix-no-dup-syms-1a.s aix-no-dup-syms-1b.s}
     {{nm {} aix-no-dup-syms-1-dso.nd} {objdump -r aix-no-dup-syms-1-dso.rd}
      {nm -D aix-no-dup-syms-1-dso.dnd} {objdump -R aix-no-dup-syms-1-dso.drd}}
     "aix-no-dup-syms-1.so"}

    {"Export test 1 (archive)" ""
      "" {aix-export-1a.s}
      {} "libaix-export-1.a"}

    {"Export test 1 (object)" "-r"
      "" {aix-export-1b.s}
      {} "aix-export-1.o"}

    {"Export test 1 (-bexpall)"
     "-shared -bexpall tmpdir/aix-export-1.o -Ltmpdir -laix-export-1"
     "" {}
     {{objdump -dj.data aix-export-1-all.dd}}
     "aix-export-1-all.so"}

    {"Export test 1 (-bexpfull)"
     "-shared -bexpfull tmpdir/aix-export-1.o -Ltmpdir -laix-export-1"
     "" {}
     {{objdump -dj.data aix-export-1-full.dd}}
     "aix-export-1-full.so"}

    {"Export test 2" "-shared -bexpall"
     {} {aix-export-2.s}
     {{nm -D aix-export-2.nd}} "aix-export-2.so"}

    {"Garbage collection test 1"
     "-shared -binitfini:init_function:fini_function -bE:aix-gc-1.ex"
     "" {aix-gc-1.s}
     {{objdump {-dz -j.text -j.data} aix-gc-1-SIZE.dd}
      {nm {} aix-gc-1.nd}}
     "aix-gc-1.so"}

    {"Glink test 1"
     "-shared -bE:aix-glink-1.ex --unresolved-symbols=ignore-all"
     "" {aix-glink-1.s}
     {{objdump {-D -j.text -j.data} aix-glink-1-SIZE.dd}}
     "aix-glink-1.so"}

    {"Glink test 2 (part a)" "-shared -bE:aix-glink-2a.ex"
     "" {aix-glink-2a.s}
     {}
     "aix-glink-2a.so"}

    {"Glink test 2 (part b)" "-r"
     "" {aix-glink-2b.s}
     {}
     "aix-glink-2b.ro"}

    {"Glink test 2 (part c)" "-shared -bE:aix-glink-2c.ex"
     "" {aix-glink-2c.s}
     {}
     "aix-glink-2c.so"}

    {"Glink test 2"
     "-e.main tmpdir/aix-glink-2a.so tmpdir/aix-glink-2b.ro tmpdir/aix-glink-2c.so"
     "" {aix-glink-2d.s}
     {{objdump -d aix-glink-2-SIZE.dd}}
     "aix-glink-2"}

    {"Glink test 3 (shared library a)"
     "-shared -bexpall"
     "" {aix-glink-3a.s}
     {} "aix-glink-3a.so"}

    {"Glink test 3 (shared library b)"
     "-shared -bexpall"
     "" {aix-glink-3b.s}
     {} "aix-glink-3b.so"}

    {"Glink test 3 (main test)"
     "-bnoautoimp tmpdir/aix-glink-3b.so tmpdir/aix-glink-3a.so"
     "" {aix-glink-3.s}
     {{objdump -d aix-glink-3.dd}}
     "aix-glink-3"}

    {"Line number test 1 (no discards)" "-e.main"
     "" {aix-lineno-1.s}
     {{objdump -dS aix-lineno-1a.dd} {nm {} aix-lineno-1a.nd}}
     "aix-lineno-1a.exe"}

    {"Line number test 1 (discard locals)" "-e.main -x"
     "" {aix-lineno-1.s}
     {{objdump -dS aix-lineno-1b.dd} {nm {} aix-lineno-1b.nd}}
     "aix-lineno-1b.exe"}

    {"Relocatable test 1" "-r"
     "" {aix-rel-1.s}
     {{objdump -hr aix-rel-1.od}} "aix-rel-1.ro"}

    {".ref test 1" "-efoo1"
     "" {aix-ref-1.s}
     {{objdump -dr aix-ref-1-SIZE.od}}
     "aix-ref-1"}

    {"Weak test 1 (rel)" "-r"
     "" {aix-weak-1a.s aix-weak-1b.s}
     {{nm {} aix-weak-1-rel.nd} {objdump -h aix-weak-1-rel.hd}}
     "aix-weak-1.o"}

    {"Weak test 1 (shared, nogc)" "-shared -bE:aix-weak-1.ex -bnogc"
     "" {aix-weak-1a.s aix-weak-1b.s}
     {{nm {} aix-weak-1-dso.nd} {objdump -h aix-weak-1-dso.hd}
      {nm -D aix-weak-1-dso.dnd}}
     "aix-weak-1-nogc.so"}

    {"Weak test 1 (shared, gc)" "-shared -bE:aix-weak-1.ex"
     "" {aix-weak-1a.s aix-weak-1b.s}
     {{nm {} aix-weak-1-gcdso.nd} {objdump -h aix-weak-1-gcdso.hd}
      {nm -D aix-weak-1-gcdso.dnd}}
     "aix-weak-1-gc.so"}

    {"Weak test 2 (library 1)" "-shared -bE:aix-weak-2a.ex"
     "" {aix-weak-2a.s}
     {{nm -D aix-weak-2a.nd}}
     "aix-weak-2a.so"}

    {"Weak test 2 (library 2)" "-shared -bE:aix-weak-2a.ex"
     "" {aix-weak-2b.s}
     {{nm -D aix-weak-2b.nd}}
     "aix-weak-2b.so"}

    {"Weak test 2 (main library)"
     "-shared -bE:aix-weak-2c.ex tmpdir/aix-weak-2a.so tmpdir/aix-weak-2b.so"
     "" {aix-weak-2c.s}
     {{nm {} aix-weak-2c.nd} {objdump {-sj.data -R} aix-weak-2c.od}}
     "aix-weak-2c.so"}

    {"Weak test 3 (library)" "-shared -bE:aix-weak-3a.ex"
     "" {aix-weak-3a.s}
     {}
     "aix-weak-3a.so"}

    {"Weak test 3 (main, dynamic)" "-e.main tmpdir/aix-weak-3a.so"
     "" {aix-weak-3b.s}
     {{objdump -Dzrj.data aix-weak-3-SIZE.dd}}
     "aix-weak-3"}

    {"TOC test 1" "-shared -bE:aix-toc-1.ex"
     "" {aix-toc-1a.s aix-toc-1b.s}
     {{objdump -dr aix-toc-1-SIZE.dd}}
     "aix-toc-1.so"}
}

foreach test $aix52tests {
    foreach { name ldopts asopts sources tools output } $test {
	run_aix_test 32 $name $ldopts $asopts $sources $tools $output
	run_aix_test 64 $name $ldopts $asopts $sources $tools $output
    }
}

run_dump_test "aix-glink-1-32"
run_dump_test "aix-glink-1-64"
run_dump_test "aix-glink-3-32"
run_dump_test "aix-glink-3-64"
run_dump_test "aix-weak-3-32"
run_dump_test "aix-weak-3-64"
@


1.16
log
@bfd/
	* coff-rs6000.c (xcoff_howto_table): Change size to 0 and bitsize to 1.
	(_bfd_xcoff_reloc_type_lookup): Handle BFD_RELOC_NONE.
	* coff64-rs6000.c (xcoff64_howto_table): Change size to 0 and
	bitsize to 1.
	(xcoff64_reloc_type_lookup): Handle BFD_RELOC_NONE.

gas/
	* write.h (fix_at_start): Declare.
	* write.c (fix_new_internal): Add at_beginning parameter.
	Use it instead of REVERSE_SORT_RELOCS.  Fix the handling of
	seg_fix_tailP for the at_beginning/REVERSE_SORT_RELOCS case.
	(fix_new, fix_new_exp): Update accordingly.
	(fix_at_start): New function.
	* config/tc-ppc.c (md_pseudo_table): Add .ref to the OBJ_XCOFF section.
	(ppc_ref): New function, for OBJ_XCOFF.
	(md_apply_fix): Handle BFD_RELOC_NONE for OBJ_XCOFF.
	* config/te-i386aix.h (REVERSE_SORT_RELOCS): Remove #undef.

gas/testsuite/
	* gas/ppc/xcoff-ref-1.s, gas/ppc/xcoff-ref-1.l: New test.
	* gas/ppc/aix.exp: Run it.


ld/testsuite/
	* ld-powerpc/aix-ref-1-32.od, ld-powerpc/aix-ref-1-64.od,
	ld-powerpc/aix-ref-1.s: New tests.
	* ld-powerpc/aix52.exp: Run them.
@
text
@d60 1
a60 1
				 $ldopts \
@


1.15
log
@bfd/
	* coff-rs6000.c (xcoff_ppc_relocate_section): Allow undefined
	symbols to be left unimported when linking statically.
	* xcofflink.c (xcoff_link_add_symbols): Ignore global linkage
	code when linking statically.

ld/testsuite/
	* ld-powerpc/aix-glink-3.s, ld-powerpc/aix-glink-3a.s,
	ld-powerpc/aix-glink-3b.s, ld-powerpc/aix-glink-3.dd,
	ld-powerpc/aix-glink-3-32.d, ld-powerpc/aix-glink-3-64.d: New tests.
	* ld-powerpc/aix52.exp: Run them.  Move the lineno tests to maintain
	alphabetical order.
@
text
@d199 5
@


1.15.4.1
log
@bfd/
	* coff-rs6000.c (xcoff_howto_table): Change size to 0 and bitsize to 1.
	(_bfd_xcoff_reloc_type_lookup): Handle BFD_RELOC_NONE.
	* coff64-rs6000.c (xcoff64_howto_table): Change size to 0 and
	bitsize to 1.
	(xcoff64_reloc_type_lookup): Handle BFD_RELOC_NONE.

gas/
	* write.h (fix_at_start): Declare.
	* write.c (fix_new_internal): Add at_beginning parameter.
	Use it instead of REVERSE_SORT_RELOCS.  Fix the handling of
	seg_fix_tailP for the at_beginning/REVERSE_SORT_RELOCS case.
	(fix_new, fix_new_exp): Update accordingly.
	(fix_at_start): New function.
	* config/tc-ppc.c (md_pseudo_table): Add .ref to the OBJ_XCOFF section.
	(ppc_ref): New function, for OBJ_XCOFF.
	(md_apply_fix): Handle BFD_RELOC_NONE for OBJ_XCOFF.
	* config/te-i386aix.h (REVERSE_SORT_RELOCS): Remove #undef.

gas/testsuite/
	* gas/ppc/xcoff-ref-1.s, gas/ppc/xcoff-ref-1.l: New test.
	* gas/ppc/aix.exp: Run it.


ld/testsuite/
	* ld-powerpc/aix-ref-1-32.od, ld-powerpc/aix-ref-1-64.od,
	ld-powerpc/aix-ref-1.s: New tests.
	* ld-powerpc/aix52.exp: Run them.
@
text
@a198 5
    {".ref test 1" "-efoo1"
     "" {aix-ref-1.s}
     {{objdump -dr aix-ref-1-SIZE.od}}
     "aix-ref-1"}

@


1.14
log
@bfd/
	* aout-adobe.c (aout_32_bfd_define_common_symbol): Define.
	* aout-target.h (MY_bfd_define_common_symbol): Likewise.
	* aout-tic30.c (MY_bfd_define_common_symbol): Likewise.
	* binary.c (binary_bfd_define_common_symbol): Likewise.
	* bout.c (b_out_bfd_define_common_symbol): Likewise.
	* coff-alpha.c (_bfd_ecoff_bfd_define_common_symbol): Likewise.
	* coff-mips.c (_bfd_ecoff_bfd_define_common_symbol): Likewise.
	* coffcode.h (coff_bfd_define_common_symbol): Likewise.
	* elfxx-target.h (bfd_elfNN_bfd_define_common_symbol): Likewise.
	* i386msdos.c (msdos_bfd_define_common_symbol): Likewise.
	* i386os9k.c (os9k_bfd_define_common_symbol): Likewise.
	* ieee.c (ieee_bfd_define_common_symbol): Likewise.
	* ihex.c (ihex_bfd_define_common_symbol): Likewise.
	* libbfd-in.h (_bfd_nolink_bfd_define_common_symbol): Likewise.
	* mach-o.c (bfd_mach_o_bfd_define_common_symbol): Likewise.
	* mmo.c (mmo_bfd_define_common_symbol): Likewise.
	* nlm-target.h (nlm_bfd_define_common_symbol): Likewise.
	* oasys.c (oasys_bfd_define_common_symbol): Likewise.
	* pef.c (bfd_pef_bfd_define_common_symbol): Likewise.
	* ppcboot.c (ppcboot_bfd_define_common_symbol): Likewise.
	* som.c (som_bfd_define_common_symbol): Likewise.
	* srec.c (srec_bfd_define_common_symbol): Likewise.
	* tekhex.c (tekhex_bfd_define_common_symbol): Likewise.
	* versados.c (versados_bfd_define_common_symbol): Likewise.
	* vms.c (vms_bfd_define_common_symbol): Likewise.
	* xcoff-target.h (_bfd_xcoff_bfd_define_common_symbol): Likewise.
	* xsym.c (bfd_sym_bfd_define_common_symbol): Likewise.
	* coff-rs6000.c (rs6000coff_vec): Add _bfd_xcoff_define_common_symbol.
	(pmac_xcoff_vec): Likewise.
	* coff64-rs6000.c (rs6000coff64_vec): Likewise.
	(aix5coff64_vec): Likewise.
	* linker.c (bfd_generic_define_common_symbol): New function.
	* targets.c (BFD_JUMP_TABLE_LINK): Add NAME##_bfd_define_common_symbol.
	(_bfd_define_common_symbol): New field.
	* libcoff-in.h (_bfd_xcoff_define_common_symbol): Declare.
	* xcofflink.c (_bfd_xcoff_define_common_symbol): New function.
	(xcoff_build_ldsyms): Don't set XCOFF_DEF_REGULAR for common
	symbols here.
	* bfd-in2.h: Regenerate.
	* libbfd.h: Likewise.
	* libcoff.h: Likewise.

ld/
	* ldlang.c (lang_one_common): Use bfd_define_common_symbol.

ld/testsuite/
	* ld-powerpc/aix-export-2.s, ld-powerpc/aix-export-2.nd: New test.
	* ld-powerpc/aix52.exp: Run it.
@
text
@a147 10
    {"Line number test 1 (no discards)" "-e.main"
     "" {aix-lineno-1.s}
     {{objdump -dS aix-lineno-1a.dd} {nm {} aix-lineno-1a.nd}}
     "aix-lineno-1a.exe"}

    {"Line number test 1 (discard locals)" "-e.main -x"
     "" {aix-lineno-1.s}
     {{objdump -dS aix-lineno-1b.dd} {nm {} aix-lineno-1b.nd}}
     "aix-lineno-1b.exe"}

d169 26
d255 4
@


1.13
log
@bfd/
	* xcofflink.c (bfd_link_input_bfd): Treat __rtinit as C_HIDEXT
	rather than C_EXT.

ld/testsuite/
	* ld-powerpc/aix-gc-1.nd: New test.
	* ld-powerpc/aix52.exp: Run it.
@
text
@d131 4
@


1.12
log
@bfd/
	* xcofflink.c (xcoff_link_create_extra_sections): Don't create
	a .loader section for relocatable links.
	(xcoff_need_ldrel_p): New function.
	(xcoff_mark): Use it.
	(bfd_xcoff_link_count_reloc): Only count loader relocs if there's
	a loader section.
	(xcoff_build_ldsym): New function, split out from...
	(xcoff_build_ldsyms): ...here.  Rename to...
	(xcoff_post_gc_symbol): ...this.  Only export symbols, and only
	call xcoff_build_ldsym, if there's a loader section.
	(xcoff_build_loader_section): New function, extracted verbatim from...
	(bfd_xcoff_size_dynamic_sections): ...here.  Only call it if
	there's a loader section.  Only add an __rtinit loader symbol
	if there's a loader section.  Update after above name change.
	(xcoff_symbol_section, xcoff_create_ldrel): New functions.
	(bfd_link_input_bfd): Use xcoff_need_ldrel_p, xcoff_symbol_section
	and xcoff_create_ldrel.
	(xcoff_write_global_symbol): Use xcoff_create_ldrel.
	(xcoff_reloc_link_order): Likewise, but only call it if there's
	a loader section.  Use xcoff_symbol_section.
	(_bfd_xcoff_bfd_final_link): Only use fdinfo.ldrel and fdinfo.ldsym
	if there's a loader section.

ld/testsuite/
	* ld-powerpc/aix-rel-1.s, ld-powerpc/aix-rel-1.od: New test.
	* ld-powerpc/aix52.exp: Run it.
@
text
@d134 2
a135 1
     {{objdump {-dz -j.text -j.data} aix-gc-1-SIZE.dd}}
@


1.11
log
@include/coff/
	* xcoff.h (XCOFF_EXPALL, XCOFF_EXPFULL): New flags.
	(xcoff_loader_info): Add auto_export_flags.

bfd/
	* bfd-in.h (bfd_xcoff_size_dynamic_sections): Replace the
	bfd_boolean export_defineds parameter with an unsigned int
	auto_export_flags parameter.
	* bfd-in2.h: Regenerate.
	* xcofflink.c (xcoff_archive_contains_shared_object_p): New function,
	split out from xcoff_build_ldsyms.
	(xcoff_covered_by_expall_p): New function.
	(xcoff_auto_export_p): New function, split out from xcoff_build_ldsyms
	but with extra code to handle -bexpfull and -bexpall.
	(xcoff_mark_auto_exports): New function.
	(xcoff_build_ldsyms): Use xcoff_auto_export_p to decide whether
	a function should be automatically exported.
	(bfd_xcoff_size_dynamic_sections): Replace the export_defineds
	parameter with an auto_export_flags parameter.  Update ldinfo
	accordingly.  Use xcoff_mark_auto_exports to mark all automatically-
	exported symbols.

ld/
	* emultempl/aix.em (auto_export_flags): New variable.
	(explicit_auto_export_flags): Likewise.
	(OPTION_EXPALL, OPTION_EXPFULL): New enum values.
	(OPTION_NOEXPALL, OPTION_NOEXPFULL): Likewise.
	(gld${EMULATION_NAME}_add_options): Add -bexpall, -bexpfull,
	-bnoexpall and -bnoexpfull.
	(gld${EMULATION_NAME}_handle_option): Handle them.
	(gld${EMULATION_NAME}_before_allocation): Update the call to
	bfd_size_dynamic_sections.

ld/testsuite/
	* ld-powerpc/aix-export-1-all.dd, ld-powerpc/aix-export-1-full.dd,
	ld-powerpc/aix-export-1a.s, ld-powerpc/aix-export-1b.s: New tests.
	* ld-powerpc/aix52.exp: Run them.
@
text
@d174 4
@


1.10
log
@bfd/
	* xcofflink.c (xcoff_mark_symbol_by_name): New function.
	(bfd_xcoff_size_dynamic_sections): Use it to mark the entry,
	init and fini functions.  Do garbage collection for objects
	without an entry point too.

ld/testsuite/
	* ld-powerpc/aix-gc-1.s, ld-powerpc/aix-gc-1.ex,
	ld-powerpc/aix-gc-1-32.dd, ld-powerpc/aix-gc-1-64.dd,
	ld-powerpc/aix-weak-1-gcdso.dnd, ld-powerpc/aix-weak-1-gcdso.hd,
	ld-powerpc/aix-weak-1-gcdso.nd: New tests.
	* ld-powerpc/aix52.exp: Run them.
@
text
@d111 20
@


1.9
log
@include/coff/
	* internal.h (C_AIX_WEAKEXT): New macro.
	(C_WEAKEXT): Use the GNU definition in the generic part of the file,
	and conditionally reset it to C_AIX_WEAKEXT in the XCOFF part of
	the file.
	(CSECT_SYM_P): New macro.
	* xcoff.h (L_WEAK): Define.
	(EXTERN_SYM_P): New macro.

bfd/
	* coffcode.h (coff_pointerize_aux_hook): Update CSECT_SYM_P to
	check whether a symbol has csect information.
	(coff_print_aux): Likewise.
	* coff-rs6000.c (_bfd_xcoff_swap_aux_in): Handle auxillary csect
	information for C_AIX_WEAKEXT too.
	(_bfd_xcoff_swap_aux_out): Likewise.
	(xcoff_reloc_type_br): Handle defweak symbols too.
	* coff64-rs6000.c (_bfd_xcoff64_swap_aux_in): Handle auxillary csect
	information for C_AIX_WEAKEXT too.
	(_bfd_xcoff64_swap_aux_out): Likewise.
	(xcoff64_reloc_type_br): Handle defweak symbols too.
	* coffgen.c (coff_print_symbol): Handle auxillary function
	information for C_AIX_WEAKEXT too.
	* xcofflink.c (_bfd_xcoff_canonicalize_dynamic_symtab): Set BSF_WEAK
	instead of BSF_GLOBAL if the L_WEAK flag is set.
	(xcoff_dynamic_definition_p): New function.
	(xcoff_link_add_dynamic_symbols): Use it to decide whether ldsym
	defines h.  Don't change h if ldsym isn't the definition.  Otherwise,
	always take the symbol class from the ldsym.  Use weak bfd symbol
	types for weak ldsyms.
	(xcoff_link_add_symbols): Use CSECT_SYM_P and EXTERN_SYM_P.
	Fix the check for whether a definition is from a shared object.
	Allow redefinitions of weak symbols.
	(xcoff_link_check_ar_symbols): Use EXTERN_SYM_P.
	(xcoff_keep_symbol_p): Likewise.
	(bfd_xcoff_size_dynamic_sections): Use CSECT_SYM_P.
	(xcoff_link_input_bfd): Use CSECT_SYM_P and EXTERN_SYM_P.
	Add .loader entries for C_AIX_WEAKEXT as well as C_EXT symbols,
	but mark them as L_WEAK.
	(xcoff_write_global_symbol): Treat weak symbols as C_AIX_WEAKEXT
	instead of C_EXT if C_AIX_WEAKEXT == C_WEAKEXT.

gas/
	* config/tc-ppc.c (ppc_frob_symbol): Add csect information for
	C_AIX_WEAKEXT too.

ld/testsuite/
	* ld-powerpc/aix-glink-2a.s, ld-powerpc/aix-glink-2a.ex,
	ld-powerpc/aix-glink-2b.s, ld-powerpc/aix-glink-2c.s,
	ld-powerpc/aix-glink-2c.ex, ld-powerpc/aix-glink-2d.s,
	ld-powerpc/aix-glink-2-32.dd, ld-powerpc/aix-glink-2-64.dd,
	ld-powerpc/aix-weak-1a.s, ld-powerpc/aix-weak-1b.s,
	ld-powerpc/aix-weak-1-rel.hd, ld-powerpc/aix-weak-1-rel.nd,
	ld-powerpc/aix-weak-1-dso.hd, ld-powerpc/aix-weak-1-dso.nd,
	ld-powerpc/aix-weak-1-dso.dnd, ld-powerpc/aix-weak-1.ex,
	ld-powerpc/aix-weak-2a.s, ld-powerpc/aix-weak-2a.ex,
	ld-powerpc/aix-weak-2a.nd, ld-powerpc/aix-weak-2b.s,
	ld-powerpc/aix-weak-2b.nd, ld-powerpc/aix-weak-2c.s,
	ld-powerpc/aix-weak-2c.ex, ld-powerpc/aix-weak-2c.nd,
	ld-powerpc/aix-weak-2c.od, ld-powerpc/aix-weak-3a.s,
	ld-powerpc/aix-weak-3a.ex, ld-powerpc/aix-weak-3b.s,
	ld-powerpc/aix-weak-3b.ex, ld-powerpc/aix-weak-3-32.d,
	ld-powerpc/aix-weak-3-32.dd, ld-powerpc/aix-weak-3-64.d,
	ld-powerpc/aix-weak-3-64.dd: New tests.
	* ld-powerpc/aix52.exp: Run them.  Replace tmp/aix-* with
	tmp/aix64-* in 64-bit ld options.
@
text
@d111 6
d165 6
@


1.8
log
@include/coff/
	* xcoff.h (XCOFF_ALLOCATED): New flag.

bfd/
	* xcofflink.c (xcoff_mark): When walking the relocations,
	only mark the target symbol or the target section, not both.
	(xcoff_final_definition_p): New function.
	(xcoff_keep_symbol_p): Use it to check whether an external XCOFF
	symbol is a valid definition of the associated output symbol.
	Use XCOFF_ALLOCATED to stop the same hash table entry having
	two output symbols.
	(bfd_xcoff_size_dynamic_sections): Set XCOFF_ALLOCATED when
	keeping a symbol.
	(xcoff_link_input_bfd): Use xcoff_final_definition_p.

ld/testsuite/
	* ld-powerpc/aix-no-dup-syms-1a.s, ld-powerpc/aix-no-dup-syms-1b.s,
	ld-powerpc/aix-no-dup-syms-1.ex, ld-powerpc/aix-no-dup-syms-1.im,
	ld-powerpc/aix-no-dup-syms-1-dso.dnd,
	ld-powerpc/aix-no-dup-syms-1-dso.drd,
	ld-powerpc/aix-no-dup-syms-1-dso.nd,
	ld-powerpc/aix-no-dup-syms-1-dso.rd,
	ld-powerpc/aix-no-dup-syms-1-rel.nd,
	ld-powerpc/aix-no-dup-syms-1-rel.rd: New tests.
	* ld-powerpc/aix52.exp: Run them.
@
text
@d127 58
d197 3
@


1.7
log
@bfd/
	* xcofflink.c (bfd_xcoff_import_symbol): Treat imported absolute
	symbols as XMC_XO.

ld/testsuite/
	* ld-powerpc/aix-abs-branch-1.nd,
	ld-powerpc/aix-abs-reloc-1.nd: New tests.
	* ld-powerpc/aix52.exp: Run them.
@
text
@d99 12
@


1.6
log
@bfd/
	* libcoff-in.h (xcoff_tdata): Add a lineno_counts field.
	* libcoff.h: Regenerate.
	* xcofflink.c (xcoff_link_add_symbols): Record per-symbol
	line-number counts in the bfd's lineno_counts field.
	Don't keep per-csect line-number counts.
	(xcoff_sweep): Don't update per-csect line-number counts.
	(bfd_xcoff_size_dynamic_sections): Count the number of line-number
	entries in each output section.
	(xcoff_link_input_bfd): Get the number of line numbers from
	the bfd's lineno_counts field, rather than recalculating it
	from scratch.  Fix the range check when updating C_BINCL and
	C_EINCL symbols.
	(_bfd_xcoff_bfd_final_link): Don't count the output line numbers
	here.  Don't expect csects to have line-number counts.

ld/testsuite/
	* ld-powerpc/aix-lineno-1.s, ld-powerpc/aix-lineno-1.txt,
	ld-powerpc/aix-lineno-1a.dd, ld-powerpc/aix-lineno-1a.nd,
	ld-powerpc/aix-lineno-1b.dd, ld-powerpc/aix-lineno-1b.nd: New tests.
	* ld-powerpc/aix52.exp: Run them.  Copy aix-lineno-1.txt to tmpdir.
@
text
@d75 1
a75 1
     {{objdump {-dR} aix-abs-branch-1.dd}}
d81 1
a81 1
     {{objdump -sRj.data aix-abs-reloc-1.od}}
@


1.5
log
@bfd/
	* xcofflink.c: (xcoff_mark_symbol): Mark the TOC section when
	creating a descriptor.
	(xcoff_sweep): Don't mark toc_section unless it's needed.
	(bfd_xcoff_size_dynamic_sections): Skip the toc_section
	when marking every bfd.
	(xcoff_link_input_bfd): Skip all TOC anchors.
	(xcoff_toc_section_p, xcoff_find_tc0): New functions.
	(_bfd_xcoff_bfd_final_link): Don't set the output bfd's TOC anchor
	to -1; call xcoff_find_tc0 instead.

ld/testsuite/
	* ld-powerpc/aix-toc-1.ex, ld-powerpc/aix-toc-1a.s,
	ld-powerpc/aix-toc-1b.s, ld-powerpc/aix-toc-1-32.dd,
	ld-powerpc/aix-toc-1-64.dd: New tests.
	* ld-powerpc/aix52.exp: Run them.
@
text
@d67 4
d105 10
@


1.4
log
@include/coff/
	* xcoff.h (XCOFF_CALLED, XCOFF_IMPORT): Update comments.
	(XCOFF_WAS_UNDEFINED): New flag.
	(xcoff_link_hash_table): Add an "rtld" field.

bfd/
	* coff-rs6000.c (xcoff_ppc_relocate_section): Report relocations
	against undefined symbols if the symbol's XCOFF_WAS_UNDEFINED
	flag is set.  Assert that all undefined symbols are either
	imported or defined by a dynamic object.
	* coff64-rs6000.c (xcoff64_ppc_relocate_section): Likewise.
	* xcofflink.c (xcoff_link_add_symbols): Extend function-symbol
	handling to all relocations.  Only set XCOFF_CALLED for function
	symbols.
	(xcoff_find_function): New function, split out from...
	(bfd_xcoff_export_symbol) ...here.
	(xcoff_set_import_path): New function, split out from...
	(bfd_xcoff_import_symbol): ...here.  Remove assertion for old
	meaning of XCOFF_CALLED.
	(xcoff_mark_symbol): If we mark an undefined and unimported
	symbol, find some way of defining it.  If the symbol is a function
	descriptor, fill in its definition automatically.  If the symbol
	is a function, mark its descriptor and allocate room for global
	linkage code.  Otherwise mark the symbol as implicitly imported.
	Move the code for creating function descriptors from...
	(xcoff_build_ldsyms): ...here.  Use XCOFF_WAS_UNDEFINED to
	check for symbols that were implicitly defined.
	(xcoff_mark): Don't count any dynamic relocations against
	function symbols.
	(bfd_xcoff_size_dynamic_sections): Save the rtld parameter
	in the xcoff link info.
	(xcoff_link_input_bfd): Remove handling of undefined and
	unexported symbols.

ld/
	* emultempl/aix.em (gld${EMULATION_NAME}_handle_option): Make
	-berok and -bernotok control link_info.unresolved_syms_in_objects
	and link_info.unresolved_syms_in_shared_libs instead of
	force_make_executable.

ld/testsuite/
	* ld-powerpc/aix-glink-1.ex, ld-powerpc/aix-glink-1.s,
	ld-powerpc/aix-glink-1-32.dd, ld-powerpc/aix-glink-1-64.dd,
	ld-powerpc/aix-glink-1-32.d, ld-powerpc/aix-glink-1-64.d: New tests.
	* ld-powerpc/aix52.exp: Run them.
@
text
@d100 5
@


1.3
log
@bfd/
	* coff-rs6000.c (xcoff_reloc_type_br): Make the branch absolute
	if the target is absolute.  Fix comment typo.
	(xcoff_ppc_relocate_section): Remove FIXME.
	* coff64-rs6000.c (xcoff64_reloc_type_br): Make the branch absolute
	if the target is absolute.

ld/testsuite/
	* ld-powerpc/aix-abs-branch-1.im, ld-powerpc/aix-abs-branch-1.ex,
	ld-powerpc/aix-abs-branch-1.s,
	ld-powerpc/aix-abs-branch-1.dd: New test.
	* ld-powerpc/aix52.exp: Run it.
@
text
@d94 6
@


1.2
log
@bfd/
	* xcofflink.c (xcoff_mark, xcoff_link_input_bfd): Don't copy
	R_POS and R_NEG relocations against absolute symbols to the
	.loader section.

ld/testsuite/
	* ld-powerpc/aix-abs-reloc-1.ex, ld-powerpc/aix-abs-reloc-1.im,
	ld-powerpc/aix-abs-reloc-1.od, ld-powerpc/aix-abs-reloc-1.s: New test.
	* ld-powerpc/aix52.exp: Run it.
@
text
@d68 6
@


1.1
log
@ld/
	* emultempl/aix.em (gld${EMULATION_NAME}_before_allocation): Mark
	.text, .data and .bss output sections as SEC_KEEP.

ld/testsuite/
	* ld-powerpc/aix-core-sec-1.s, ld-powerpc/aix-core-sec-1.ex,
	ld-powerpc/aix-core-sec-1.hd, ld-powerpc/aix-core-sec-2.s,
	ld-powerpc/aix-core-sec-2.ex, ld-powerpc/aix-core-sec-2.hd,
	ld-powerpc/aix-core-sec-3.s, ld-powerpc/aix-core-sec-3.ex,
	ld-powerpc/aix-core-sec-3.hd: New tests.
	* ld-powerpc/aix52.exp: New harness.
@
text
@d68 6
@

