head	1.15;
access;
symbols
	binutils-2_24-branch:1.15.0.2
	binutils-2_24-branchpoint:1.15
	binutils-2_21_1:1.10
	binutils-2_23_2:1.11.6.1
	binutils-2_23_1:1.11
	binutils-2_23:1.11
	binutils-2_23-branch:1.11.0.6
	binutils-2_23-branchpoint:1.11
	binutils-2_22_branch:1.11.0.4
	binutils-2_22:1.11
	binutils-2_22-branch:1.11.0.2
	binutils-2_22-branchpoint:1.11
	binutils-2_21:1.10
	binutils-2_21-branch:1.10.0.2
	binutils-2_21-branchpoint:1.10
	binutils-2_20_1:1.8.8.2
	binutils-2_20:1.8.8.2
	binutils-arc-20081103-branch:1.8.0.10
	binutils-arc-20081103-branchpoint:1.8
	binutils-2_20-branch:1.8.0.8
	binutils-2_20-branchpoint:1.8
	dje-cgen-play1-branch:1.8.0.6
	dje-cgen-play1-branchpoint:1.8
	arc-20081103-branch:1.8.0.4
	arc-20081103-branchpoint:1.8
	binutils-2_19_1:1.8
	binutils-2_19:1.8
	binutils-2_19-branch:1.8.0.2
	binutils-2_19-branchpoint:1.8
	binutils-2_18:1.7.2.1
	binutils-2_18-branch:1.7.0.2
	binutils-2_18-branchpoint:1.7
	binutils-csl-coldfire-4_1-32:1.6
	binutils-csl-sourcerygxx-4_1-32:1.6
	binutils-csl-innovasic-fido-3_4_4-33:1.6
	binutils-csl-sourcerygxx-3_4_4-32:1.6
	binutils-csl-coldfire-4_1-30:1.6
	binutils-csl-sourcerygxx-4_1-30:1.6
	binutils-csl-coldfire-4_1-28:1.6
	binutils-csl-sourcerygxx-4_1-29:1.6
	binutils-csl-sourcerygxx-4_1-28:1.6
	binutils-csl-arm-2006q3-27:1.6
	binutils-csl-sourcerygxx-4_1-27:1.6
	binutils-csl-arm-2006q3-26:1.6
	binutils-csl-sourcerygxx-4_1-26:1.6
	binutils-csl-sourcerygxx-4_1-25:1.6
	binutils-csl-sourcerygxx-4_1-24:1.6
	binutils-csl-sourcerygxx-4_1-23:1.6
	binutils-csl-sourcerygxx-4_1-21:1.6
	binutils-csl-arm-2006q3-21:1.6
	binutils-csl-sourcerygxx-4_1-22:1.6
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.6
	binutils-csl-sourcerygxx-4_1-20:1.6
	binutils-csl-arm-2006q3-19:1.6
	binutils-csl-sourcerygxx-4_1-19:1.6
	binutils-csl-sourcerygxx-4_1-18:1.6
	binutils-csl-renesas-4_1-9:1.6
	binutils-csl-sourcerygxx-3_4_4-25:1.6
	binutils-csl-renesas-4_1-8:1.6
	binutils-csl-renesas-4_1-7:1.6
	binutils-csl-renesas-4_1-6:1.6
	binutils-csl-sourcerygxx-4_1-17:1.6
	binutils-csl-sourcerygxx-4_1-14:1.6
	binutils-csl-sourcerygxx-4_1-15:1.6
	binutils-csl-sourcerygxx-4_1-13:1.6
	binutils-2_17:1.6
	binutils-csl-sourcerygxx-4_1-12:1.6
	binutils-csl-sourcerygxx-3_4_4-21:1.6
	binutils-csl-wrs-linux-3_4_4-24:1.6
	binutils-csl-wrs-linux-3_4_4-23:1.6
	binutils-csl-sourcerygxx-4_1-9:1.6
	binutils-csl-sourcerygxx-4_1-8:1.6
	binutils-csl-sourcerygxx-4_1-7:1.6
	binutils-csl-arm-2006q1-6:1.6
	binutils-csl-sourcerygxx-4_1-6:1.6
	binutils-csl-wrs-linux-3_4_4-22:1.6
	binutils-csl-coldfire-4_1-11:1.6
	binutils-csl-sourcerygxx-3_4_4-19:1.6
	binutils-csl-coldfire-4_1-10:1.6
	binutils-csl-sourcerygxx-4_1-5:1.6
	binutils-csl-sourcerygxx-4_1-4:1.6
	binutils-csl-wrs-linux-3_4_4-21:1.6
	binutils-csl-morpho-4_1-4:1.6
	binutils-csl-sourcerygxx-3_4_4-17:1.6
	binutils-csl-wrs-linux-3_4_4-20:1.6
	binutils-2_17-branch:1.6.0.10
	binutils-2_17-branchpoint:1.6
	binutils-csl-2_17-branch:1.6.0.8
	binutils-csl-2_17-branchpoint:1.6
	binutils-csl-gxxpro-3_4-branch:1.6.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.6
	binutils-2_16_1:1.6
	binutils-csl-arm-2005q1b:1.6
	binutils-2_16:1.6
	binutils-csl-arm-2005q1a:1.6
	binutils-csl-arm-2005q1-branch:1.6.0.4
	binutils-csl-arm-2005q1-branchpoint:1.6
	binutils-2_16-branch:1.6.0.2
	binutils-2_16-branchpoint:1.6
	csl-arm-2004-q3d:1.6
	csl-arm-2004-q3:1.6
	binutils-2_15:1.5.6.1
	binutils-2_15-branchpoint:1.5
	csl-arm-2004-q1a:1.6
	csl-arm-2004-q1:1.6
	binutils-2_15-branch:1.5.0.6
	cagney_bfdfile-20040213-branch:1.5.0.4
	cagney_bfdfile-20040213-branchpoint:1.5
	cagney_bigcore-20040122-branch:1.5.0.2
	cagney_bigcore-20040122-branchpoint:1.5
	csl-arm-2003-q4:1.5
	binutils-2_14:1.2
	binutils-2_14-branch:1.2.0.2
	binutils-2_14-branchpoint:1.2
	binutils_latest_snapshot:1.15;
locks; strict;
comment	@# @;


1.15
date	2013.04.22.03.11.40;	author amodra;	state Exp;
branches;
next	1.14;

1.14
date	2013.01.31.06.28.48;	author amodra;	state Exp;
branches;
next	1.13;

1.13
date	2012.11.23.03.28.13;	author amodra;	state Exp;
branches;
next	1.12;

1.12
date	2012.10.29.09.25.53;	author amodra;	state Exp;
branches;
next	1.11;

1.11
date	2011.07.14.03.28.22;	author amodra;	state Exp;
branches
	1.11.6.1;
next	1.10;

1.10
date	2009.10.02.15.00.30;	author amodra;	state Exp;
branches;
next	1.9;

1.9
date	2009.09.21.11.51.02;	author amodra;	state Exp;
branches;
next	1.8;

1.8
date	2007.08.13.00.20.59;	author amodra;	state Exp;
branches
	1.8.8.1;
next	1.7;

1.7
date	2006.08.17.08.21.06;	author amodra;	state Exp;
branches
	1.7.2.1;
next	1.6;

1.6
date	2004.03.16.00.58.43;	author amodra;	state Exp;
branches;
next	1.5;

1.5
date	2003.10.23.09.03.02;	author amodra;	state Exp;
branches
	1.5.6.1;
next	1.4;

1.4
date	2003.06.16.10.51.07;	author amodra;	state Exp;
branches;
next	1.3;

1.3
date	2003.06.10.04.36.01;	author amodra;	state Exp;
branches;
next	1.2;

1.2
date	2003.02.09.04.37.04;	author amodra;	state Exp;
branches;
next	1.1;

1.1
date	2003.02.04.14.52.11;	author amodra;	state Exp;
branches;
next	;

1.11.6.1
date	2013.01.21.13.48.52;	author amodra;	state Exp;
branches;
next	;

1.8.8.1
date	2009.09.21.11.55.17;	author amodra;	state Exp;
branches;
next	1.8.8.2;

1.8.8.2
date	2009.10.02.15.20.07;	author amodra;	state Exp;
branches;
next	;

1.7.2.1
date	2007.08.15.04.34.01;	author amodra;	state Exp;
branches;
next	;

1.5.6.1
date	2004.03.16.00.59.35;	author amodra;	state Exp;
branches;
next	;


desc
@@


1.15
log
@bfd/
	* elf64-ppc.c (ppc64_elf_check_relocs): Don't call
	create_linkage_sections here..
	(ppc64_elf_init_stub_bfd): ..do so here.  Return status.
	(create_linkage_sections): Move earlier in file.
	(ppc64_elf_setup_section_lists): Remove now useless htab->brlt test.
	* elf64-ppc.h (ppc64_elf_init_stub_bfd): Update proto.
ld/
	* emultempl/ppc64elf.em (ppc_create_output_section_statements):
	Check return from ppc64_elf_init_stub_bfd.
ld/testsuite/
	* ld-powerpc/tlsexe.d: Adjust.
	* ld-powerpc/tlsexe.r: Adjust.
	* ld-powerpc/tlsexetoc.d: Adjust.
	* ld-powerpc/tlsexetoc.r: Adjust.
	* ld-powerpc/tlsso.d: Adjust.
	* ld-powerpc/tlsso.r: Adjust.
	* ld-powerpc/tlstocso.d: Adjust.
	* ld-powerpc/tlstocso.r: Adjust.
@
text
@#source: tlstoc.s
#as: -a64
#ld: tmpdir/libtlslib.so
#objdump: -dr
#target: powerpc64*-*-*

.*

Disassembly of section \.text:

.* <.*plt_call\.__tls_get_addr(|_opt)>:
.*	(e9 63 00 00|00 00 63 e9) 	ld      r11,0\(r3\)
.*	(e9 83 00 08|08 00 83 e9) 	ld      r12,8\(r3\)
.*	(7c 60 1b 78|78 1b 60 7c) 	mr      r0,r3
.*	(2c 2b 00 00|00 00 2b 2c) 	cmpdi   r11,0
.*	(7c 6c 6a 14|14 6a 6c 7c) 	add     r3,r12,r13
.*	(4d 82 00 20|20 00 82 4d) 	beqlr   
.*	(7c 03 03 78|78 03 03 7c) 	mr      r3,r0
.*	(7d 68 02 a6|a6 02 68 7d) 	mflr    r11
.*	(f9 61 00 20|20 00 61 f9) 	std     r11,32\(r1\)
.*	(f8 41 00 28|28 00 41 f8) 	std     r2,40\(r1\)
.*	(e9 62 80 70|70 80 62 e9) 	ld      r11,-32656\(r2\)
.*	(7d 69 03 a6|a6 03 69 7d) 	mtctr   r11
.*	(e8 42 80 78|78 80 42 e8) 	ld      r2,-32648\(r2\)
.*	(4e 80 04 21|21 04 80 4e) 	bctrl
.*	(e9 61 00 20|20 00 61 e9) 	ld      r11,32\(r1\)
.*	(e8 41 00 28|28 00 41 e8) 	ld      r2,40\(r1\)
.*	(7d 68 03 a6|a6 03 68 7d) 	mtlr    r11
.*	(4e 80 00 20|20 00 80 4e) 	blr

.* <_start>:
.*	(38 62 80 08|08 80 62 38) 	addi    r3,r2,-32760
.*	(4b ff ff b5|b5 ff ff 4b) 	bl      .*
.*	(60 00 00 00|00 00 00 60) 	nop
.*	(38 62 80 18|18 80 62 38) 	addi    r3,r2,-32744
.*	(4b ff ff a9|a9 ff ff 4b) 	bl      .*
.*	(60 00 00 00|00 00 00 60) 	nop
.*	(3c 6d 00 00|00 00 6d 3c) 	addis   r3,r13,0
.*	(60 00 00 00|00 00 00 60) 	nop
.*	(38 63 90 38|38 90 63 38) 	addi    r3,r3,-28616
.*	(3c 6d 00 00|00 00 6d 3c) 	addis   r3,r13,0
.*	(60 00 00 00|00 00 00 60) 	nop
.*	(38 63 10 00|00 10 63 38) 	addi    r3,r3,4096
.*	(39 23 80 40|40 80 23 39) 	addi    r9,r3,-32704
.*	(3d 23 00 00|00 00 23 3d) 	addis   r9,r3,0
.*	(81 49 80 48|48 80 49 81) 	lwz     r10,-32696\(r9\)
.*	(e9 22 80 48|48 80 22 e9) 	ld      r9,-32696\(r2\)
.*	(7d 49 18 2a|2a 18 49 7d) 	ldx     r10,r9,r3
.*	(3d 2d 00 00|00 00 2d 3d) 	addis   r9,r13,0
.*	(a1 49 90 58|58 90 49 a1) 	lhz     r10,-28584\(r9\)
.*	(89 4d 90 60|60 90 4d 89) 	lbz     r10,-28576\(r13\)
.*	(3d 2d 00 00|00 00 2d 3d) 	addis   r9,r13,0
.*	(99 49 90 68|68 90 49 99) 	stb     r10,-28568\(r9\)
.*	(00 00 00 00|28 02 01 00) .*
.*	(00 01 02 28|00 00 00 00) .*
.* <__glink_PLTresolve>:
.*	(7d 88 02 a6|a6 02 88 7d) 	mflr    r12
.*	(42 9f 00 05|05 00 9f 42) 	bcl     20,4\*cr7\+so,.*
.*	(7d 68 02 a6|a6 02 68 7d) 	mflr    r11
.*	(e8 4b ff f0|f0 ff 4b e8) 	ld      r2,-16\(r11\)
.*	(7d 88 03 a6|a6 03 88 7d) 	mtlr    r12
.*	(7d 82 5a 14|14 5a 82 7d) 	add     r12,r2,r11
.*	(e9 6c 00 00|00 00 6c e9) 	ld      r11,0\(r12\)
.*	(e8 4c 00 08|08 00 4c e8) 	ld      r2,8\(r12\)
.*	(7d 69 03 a6|a6 03 69 7d) 	mtctr   r11
.*	(e9 6c 00 10|10 00 6c e9) 	ld      r11,16\(r12\)
.*	(4e 80 04 20|20 04 80 4e) 	bctr
.*	(60 00 00 00|00 00 00 60) 	nop
.*	(60 00 00 00|00 00 00 60) 	nop
.*	(60 00 00 00|00 00 00 60) 	nop
.*	(38 00 00 00|00 00 00 38) 	li      r0,0
.*	(4b ff ff c4|c4 ff ff 4b) 	b       .*
@


1.14
log
@bfd/
	* elf64-ppc.c (ppc_stub_name): Trim off trailing "+0".
ld/testsuite/
	* ld-powerpc/tlsexe.d: Update for changed stub names.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexetoc.d: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.d: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlstocso.d: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
@
text
@d11 1
a11 1
.* <00000010\.plt_call\.__tls_get_addr(|_opt)>:
@


1.13
log
@include/opcode/
	* ppc.h (ppc_parse_cpu): Update prototype.
opcodes/
	* ppc-dis.c (ppc_parse_cpu): Add "sticky" param.  Track bits
	set from ppc_opts.sticky in it.  Delete "retain_mask".
	(powerpc_init_dialect): Choose default dialect from info->mach
	before parsing -M options.  Handle more bfd_mach_ppc variants.
	Update common default to power7.
gas/
	* config/tc-ppc.c (sticky): New var.
	(md_parse_option, ppc_machine): Update ppc_parse_cpu calls.
gas/testsuite/
	* gas/ppc/astest2.d: Pass -Mppc to objdump.
ld/testsuite/
	* ld-powerpc/plt1.d: Update for default "at" branch hints.
	* ld-powerpc/tlsexe.d: Likewise.
	* ld-powerpc/tlsexetoc.d: Likewise.
	* ld-powerpc/tlsopt1.d: Likewise.
	* ld-powerpc/tlsopt1_32.d: Likewise.
	* ld-powerpc/tlsopt2.d: Likewise.
	* ld-powerpc/tlsopt2_32.d: Likewise.
	* ld-powerpc/tlsopt4.d: Likewise.
	* ld-powerpc/tlsopt4_32.d: Likewise.
	* ld-powerpc/tlsso.d: Likewise.
	* ld-powerpc/tlstocso.d: Likewise.
@
text
@d11 1
a11 1
.* <00000010\.plt_call\.__tls_get_addr(|_opt)\+0>:
@


1.12
log
@	* ld-powerpc/powerpc.exp: Modify emulation option passed to ld
	when little-endian.
	* ld-powerpc/apuinfo-nul.rd: Update for le output.
	* ld-powerpc/apuinfo.rd: Likewise.
	* ld-powerpc/plt1.d: Likewise.
	* ld-powerpc/relax.d: Likewise.
	* ld-powerpc/relaxr.d: Likewise.
	* ld-powerpc/sdadyn.d: Likewise.
	* ld-powerpc/tls.d: Likewise.
	* ld-powerpc/tls.g: Likewise.
	* ld-powerpc/tls.t: Likewise.
	* ld-powerpc/tls32.d: Likewise.
	* ld-powerpc/tls32.g: Likewise.
	* ld-powerpc/tls32.t: Likewise.
	* ld-powerpc/tlsexe.d: Likewise.
	* ld-powerpc/tlsexe.g: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexe.t: Likewise.
	* ld-powerpc/tlsexe32.d: Likewise.
	* ld-powerpc/tlsexe32.g: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsexe32.t: Likewise.
	* ld-powerpc/tlsexetoc.d: Likewise.
	* ld-powerpc/tlsexetoc.g: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsexetoc.t: Likewise.
	* ld-powerpc/tlsmark.d: Likewise.
	* ld-powerpc/tlsmark32.d: Likewise.
	* ld-powerpc/tlsopt1.d: Likewise.
	* ld-powerpc/tlsopt1_32.d: Likewise.
	* ld-powerpc/tlsopt2.d: Likewise.
	* ld-powerpc/tlsopt2_32.d: Likewise.
	* ld-powerpc/tlsopt3.d: Likewise.
	* ld-powerpc/tlsopt3_32.d: Likewise.
	* ld-powerpc/tlsopt4.d: Likewise.
	* ld-powerpc/tlsopt4_32.d: Likewise.
	* ld-powerpc/tlsso.d: Likewise.
	* ld-powerpc/tlsso.g: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso.t: Likewise.
	* ld-powerpc/tlsso32.d: Likewise.
	* ld-powerpc/tlsso32.g: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlsso32.t: Likewise.
	* ld-powerpc/tlstoc.d: Likewise.
	* ld-powerpc/tlstoc.g: Likewise.
	* ld-powerpc/tlstoc.t: Likewise.
	* ld-powerpc/tlstocso.d: Likewise.
	* ld-powerpc/tlstocso.g: Likewise.
	* ld-powerpc/tlstocso.t: Likewise.
	* ld-powerpc/tocopt.out: Likewise.
@
text
@d58 1
a58 1
.*	(42 9f 00 05|05 00 9f 42) 	bcl-    20,4\*cr7\+so,.*
@


1.11
log
@bfd/
	* elf64-ppc.c (struct ppc_link_hash_table): Add plt_static_chain.
	(build_plt_stub): Add plt_static_chain param, don't load r11 if false.
	(build_tls_get_addr_stub): Likewise.
	(ppc_build_one_stub): Update calls to above.
	(ppc_size_one_stub): Adjust stub size.
	(ppc64_elf_size_stubs): Add plt_static_chain param, save to htab.
	* elf64-ppc.h (ppc64_elf_size_stubs): Update prototype.
ld/
	* emultempl/ppc64elf.em (plt_static_chain): New var.
	(gld${EMULATION_NAME}_after_allocation): Pass to ppc64_elf_size_stubs.
	(PARSE_AND_LIST_PROLOGUE, PARSE_AND_LIST_LONGOPTS,
	PARSE_AND_LIST_OPTIONS, PARSE_AND_LIST_ARGS_CASES): Handle
	--plt-static-chain and --no-plt-static-chain.
ld/testsuite/
	* ld-powerpc/tlsexe.d, * ld-powerpc/tlsexe.g. *ld-powerpc/tlsexe.r,
	* ld-powerpc/tlsexetoc.d, * ld-powerpc/tlsexetoc.g,
	* ld-powerpc/tlsexetoc.r, * ld-powerpc/tlsso.d,
	* ld-powerpc/tlstocso.d: Update for plt stub change.
@
text
@d3 1
a3 1
#ld: -melf64ppc tmpdir/libtlslib.so
d7 1
a7 1
.*: +file format elf64-powerpc
d12 18
a29 18
.*	e9 63 00 00 	ld      r11,0\(r3\)
.*	e9 83 00 08 	ld      r12,8\(r3\)
.*	7c 60 1b 78 	mr      r0,r3
.*	2c 2b 00 00 	cmpdi   r11,0
.*	7c 6c 6a 14 	add     r3,r12,r13
.*	4d 82 00 20 	beqlr   
.*	7c 03 03 78 	mr      r3,r0
.*	7d 68 02 a6 	mflr    r11
.*	f9 61 00 20 	std     r11,32\(r1\)
.*	f8 41 00 28 	std     r2,40\(r1\)
.*	e9 62 80 70 	ld      r11,-32656\(r2\)
.*	7d 69 03 a6 	mtctr   r11
.*	e8 42 80 78 	ld      r2,-32648\(r2\)
.*	4e 80 04 21 	bctrl
.*	e9 61 00 20 	ld      r11,32\(r1\)
.*	e8 41 00 28 	ld      r2,40\(r1\)
.*	7d 68 03 a6 	mtlr    r11
.*	4e 80 00 20 	blr
d32 24
a55 24
.*	38 62 80 08 	addi    r3,r2,-32760
.*	4b ff ff b5 	bl      .*
.*	60 00 00 00 	nop
.*	38 62 80 18 	addi    r3,r2,-32744
.*	4b ff ff a9 	bl      .*
.*	60 00 00 00 	nop
.*	3c 6d 00 00 	addis   r3,r13,0
.*	60 00 00 00 	nop
.*	38 63 90 38 	addi    r3,r3,-28616
.*	3c 6d 00 00 	addis   r3,r13,0
.*	60 00 00 00 	nop
.*	38 63 10 00 	addi    r3,r3,4096
.*	39 23 80 40 	addi    r9,r3,-32704
.*	3d 23 00 00 	addis   r9,r3,0
.*	81 49 80 48 	lwz     r10,-32696\(r9\)
.*	e9 22 80 48 	ld      r9,-32696\(r2\)
.*	7d 49 18 2a 	ldx     r10,r9,r3
.*	3d 2d 00 00 	addis   r9,r13,0
.*	a1 49 90 58 	lhz     r10,-28584\(r9\)
.*	89 4d 90 60 	lbz     r10,-28576\(r13\)
.*	3d 2d 00 00 	addis   r9,r13,0
.*	99 49 90 68 	stb     r10,-28568\(r9\)
.*	00 00 00 00 .*
.*	00 01 02 28 .*
d57 16
a72 16
.*	7d 88 02 a6 	mflr    r12
.*	42 9f 00 05 	bcl-    20,4\*cr7\+so,.*
.*	7d 68 02 a6 	mflr    r11
.*	e8 4b ff f0 	ld      r2,-16\(r11\)
.*	7d 88 03 a6 	mtlr    r12
.*	7d 82 5a 14 	add     r12,r2,r11
.*	e9 6c 00 00 	ld      r11,0\(r12\)
.*	e8 4c 00 08 	ld      r2,8\(r12\)
.*	7d 69 03 a6 	mtctr   r11
.*	e9 6c 00 10 	ld      r11,16\(r12\)
.*	4e 80 04 20 	bctr
.*	60 00 00 00 	nop
.*	60 00 00 00 	nop
.*	60 00 00 00 	nop
.*	38 00 00 00 	li      r0,0
.*	4b ff ff c4 	b       .*
@


1.11.6.1
log
@	PR 12549
	PR 14493
	PR 14567
	PR 14662
	PR 14758
	PR 14813
	PR 14904
	PR 14915
	PR 14926
	PR 14950
	PR 14962
	Apply mainline patches
@
text
@d3 1
a3 1
#ld: tmpdir/libtlslib.so
d7 1
a7 1
.*
d12 18
a29 18
.*	(e9 63 00 00|00 00 63 e9) 	ld      r11,0\(r3\)
.*	(e9 83 00 08|08 00 83 e9) 	ld      r12,8\(r3\)
.*	(7c 60 1b 78|78 1b 60 7c) 	mr      r0,r3
.*	(2c 2b 00 00|00 00 2b 2c) 	cmpdi   r11,0
.*	(7c 6c 6a 14|14 6a 6c 7c) 	add     r3,r12,r13
.*	(4d 82 00 20|20 00 82 4d) 	beqlr   
.*	(7c 03 03 78|78 03 03 7c) 	mr      r3,r0
.*	(7d 68 02 a6|a6 02 68 7d) 	mflr    r11
.*	(f9 61 00 20|20 00 61 f9) 	std     r11,32\(r1\)
.*	(f8 41 00 28|28 00 41 f8) 	std     r2,40\(r1\)
.*	(e9 62 80 70|70 80 62 e9) 	ld      r11,-32656\(r2\)
.*	(7d 69 03 a6|a6 03 69 7d) 	mtctr   r11
.*	(e8 42 80 78|78 80 42 e8) 	ld      r2,-32648\(r2\)
.*	(4e 80 04 21|21 04 80 4e) 	bctrl
.*	(e9 61 00 20|20 00 61 e9) 	ld      r11,32\(r1\)
.*	(e8 41 00 28|28 00 41 e8) 	ld      r2,40\(r1\)
.*	(7d 68 03 a6|a6 03 68 7d) 	mtlr    r11
.*	(4e 80 00 20|20 00 80 4e) 	blr
d32 24
a55 24
.*	(38 62 80 08|08 80 62 38) 	addi    r3,r2,-32760
.*	(4b ff ff b5|b5 ff ff 4b) 	bl      .*
.*	(60 00 00 00|00 00 00 60) 	nop
.*	(38 62 80 18|18 80 62 38) 	addi    r3,r2,-32744
.*	(4b ff ff a9|a9 ff ff 4b) 	bl      .*
.*	(60 00 00 00|00 00 00 60) 	nop
.*	(3c 6d 00 00|00 00 6d 3c) 	addis   r3,r13,0
.*	(60 00 00 00|00 00 00 60) 	nop
.*	(38 63 90 38|38 90 63 38) 	addi    r3,r3,-28616
.*	(3c 6d 00 00|00 00 6d 3c) 	addis   r3,r13,0
.*	(60 00 00 00|00 00 00 60) 	nop
.*	(38 63 10 00|00 10 63 38) 	addi    r3,r3,4096
.*	(39 23 80 40|40 80 23 39) 	addi    r9,r3,-32704
.*	(3d 23 00 00|00 00 23 3d) 	addis   r9,r3,0
.*	(81 49 80 48|48 80 49 81) 	lwz     r10,-32696\(r9\)
.*	(e9 22 80 48|48 80 22 e9) 	ld      r9,-32696\(r2\)
.*	(7d 49 18 2a|2a 18 49 7d) 	ldx     r10,r9,r3
.*	(3d 2d 00 00|00 00 2d 3d) 	addis   r9,r13,0
.*	(a1 49 90 58|58 90 49 a1) 	lhz     r10,-28584\(r9\)
.*	(89 4d 90 60|60 90 4d 89) 	lbz     r10,-28576\(r13\)
.*	(3d 2d 00 00|00 00 2d 3d) 	addis   r9,r13,0
.*	(99 49 90 68|68 90 49 99) 	stb     r10,-28568\(r9\)
.*	(00 00 00 00|28 02 01 00) .*
.*	(00 01 02 28|00 00 00 00) .*
d57 16
a72 16
.*	(7d 88 02 a6|a6 02 88 7d) 	mflr    r12
.*	(42 9f 00 05|05 00 9f 42) 	bcl     20,4\*cr7\+so,.*
.*	(7d 68 02 a6|a6 02 68 7d) 	mflr    r11
.*	(e8 4b ff f0|f0 ff 4b e8) 	ld      r2,-16\(r11\)
.*	(7d 88 03 a6|a6 03 88 7d) 	mtlr    r12
.*	(7d 82 5a 14|14 5a 82 7d) 	add     r12,r2,r11
.*	(e9 6c 00 00|00 00 6c e9) 	ld      r11,0\(r12\)
.*	(e8 4c 00 08|08 00 4c e8) 	ld      r2,8\(r12\)
.*	(7d 69 03 a6|a6 03 69 7d) 	mtctr   r11
.*	(e9 6c 00 10|10 00 6c e9) 	ld      r11,16\(r12\)
.*	(4e 80 04 20|20 04 80 4e) 	bctr
.*	(60 00 00 00|00 00 00 60) 	nop
.*	(60 00 00 00|00 00 00 60) 	nop
.*	(60 00 00 00|00 00 00 60) 	nop
.*	(38 00 00 00|00 00 00 38) 	li      r0,0
.*	(4b ff ff c4|c4 ff ff 4b) 	b       .*
@


1.10
log
@ld/
	* emultempl/ppc32elf.em (emit_stub_syms): Init to -1.
	(ppc_after_open): Set emit_stubs_syms by default when shared.
	(OPTION_NO_STUBSYMS): Define.
	(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS,
	PARSE_AND_LIST_ARGS_CASES): Handle --no-emit-stub-syms.
	* emultempl/ppc64elf.em (emit_stub_syms): Init to -1.
	(gld${EMULATION_NAME}_finish): Set emit_stubs_syms by default.
	(OPTION_NO_STUBSYMS): Define.
	(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS,
	PARSE_AND_LIST_ARGS_CASES): Handle --no-emit-stub-syms.
ld/testsuite/
	* ld-powerpc/tlsexe.d: Update.
	* ld-powerpc/tlsexe.r: Update.
	* ld-powerpc/tlsexetoc.d: Update.
	* ld-powerpc/tlsexetoc.r: Update.
	* ld-powerpc/tlsso.d: Update.
	* ld-powerpc/tlsso.r: Update.
	* ld-powerpc/tlstocso.d: Update.
	* ld-powerpc/tlstocso.r: Update.
@
text
@a23 1
.*	e9 62 80 80 	ld      r11,-32640\(r2\)
d33 1
a33 1
.*	4b ff ff b1 	bl      .*
d36 1
a36 1
.*	4b ff ff a5 	bl      .*
a53 1
.*	60 00 00 00 	nop
@


1.9
log
@include/elf/
	* ppc.h (DT_PPC_TLSOPT): Define.
	* ppc64.h (DT_PPC64_TLSOPT): Define.
bfd/
	* elf32-ppc.c (TLS_GET_ADDR_GLINK_SIZE): Define.
	(ADD_3_12_2, BEQLR, CMPWI_11_0, LWZ_11_3, LWZ_12_3): Define.
	(MR_0_3, MR_3_0): Define.
	(struct ppc_elf_link_hash_table): Add no_tls_get_addr_opt.
	(ppc_elf_select_plt_layout): Save emit_stub_syms param earlier.
	(ppc_elf_tls_setup): Add no_tls_get_addr_opt param and save to hash
	table.  Check for presense of __tls_get_addr_opt
	(allocate_dynrelocs): Increase glink entry size for __tls_get_addr.
	(ppc_elf_size_dynamic_sections): Add DT_PPC_TLS_OPT tag.
	(write_glink_stub): Add param p.
	(ppc_elf_relocate_section): Adjust write_glink_stub call.
	(ppc_elf_finish_dynamic_symbol): Emit special glink call stub for
	__tls_get_addr.
	* elf32-ppc.h (ppc_elf_tls_setup): Update prototype.
	* elf64-ppc.c (struct ppc_link_hash_table): Add no_tls_get_addr_opt.
	(ppc64_elf_tls_setup): Add no_tls_get_addr_opt param and save to hash
	table.  Check for presense of __tls_get_addr_opt.
	(ppc64_elf_size_dynamic_sections): Add DT_PPC64_TLS_OPT tag.
	(LD_R11_0R3, LD_R12_0R3, MR_R0_R3, CMPDI_R11_0, ADD_R3_R12_R13,
	BEQLR, MR_R3_R0, MFLR_R11, STD_R11_0R1, BCTRL, LD_R11_0R1,
	LD_R2_0R1, MTLR_R11): Define.
	(build_tls_get_addr_stub): New function.
	(ppc_build_one_stub): Call it.
	(ppc_size_one_stub): Add extra size for __tls_get_addr stub.
	(ppc64_elf_relocate_section): Don't change nop to ld 2,40(1) for
	__tls_get_addr plt call.
	* elf64-ppc.h (ppc64_elf_tls_setup): Update prototype.
binutils/
	* readelf.c (get_ppc_dynamic_type): Add TLSOPT.
	(get_ppc64_dynamic_type): Likewise.
ld/
	* emultempl/ppc32elf.em (no_tls_get_addr_opt): New var.
	(ppc_before_allocation): Pass to ppc_elf_tls_setup.
	(OPTION_NO_TLS_GET_ADDR_OPT): Define.  Redefine other options in
	terms of previous option.
	(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS): Add
	--no-tls-get-addr-optimize.
	(PARSE_AND_LIST_ARGS_CASES): Handle it.
	* emultempl/ppc64elf.em (no_tls_get_addr_opt): New var.
	(ppc_before_allocation): Pass to ppc64_elf_tls_setup.
	(OPTION_NO_TLS_GET_ADDR_OPT): Define.
	(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS): Add
	--no-tls-get-addr-optimize.
	(PARSE_AND_LIST_ARGS_CASES): Handle it.
ld/testsuite/
	* ld-powerpc/tlslib.s: Delete dot-symbol entry syms.  Add
	__tls_get_addr_opt.
	* ld-powerpc/tlslib32.s: Add __tls_get_addr_opt.
	* ld-powerpc/oldtlslib.s: New file, old-abi version of tlslib.s.
	* ld-powerpc/powerpc.exp: Build old-abi library and use it in
	two new link tests.
	* ld-powerpc/tlsexe.d: Update for new __tls_get_addr stub.
	* ld-powerpc/tlsexe.g, * ld-powerpc/tlsexe.r, *ld-powerpc/tlsexe32.d,
	* ld-powerpc/tlsexe32.g, * ld-powerpc/tlsexe32.r,
	* ld-powerpc/tlsexetoc.d, * ld-powerpc/tlsexetoc.g,
	* ld-powerpc/tlsexetoc.r: Likewise.
@
text
@d11 1
a11 1
.* <_start-0x4c>:
d58 1
@


1.8
log
@bfd/
	* elf64-ppc.c (ADDI_R12_R12, LD_R11_0R2, LD_R2_0R2): Define.
	Update stub comments.
	(build_plt_stub): Build two variants, one without "addis".
	(ppc_build_one_stub): Build stubs without "addis" if possible.
	(ppc_size_one_stub): Size new stubs.
ld/testsuite/
	* ld-powerpc/relbrlt.s (.text.pad2): Adjust space.
	* ld-powerpc/relbrlt.d: Update.
	* ld-powerpc/tlsexe.d: Update.
	* ld-powerpc/tlsexe.g: Update.
	* ld-powerpc/tlsexe.r: Update.
	* ld-powerpc/tlsexetoc.d: Update.
	* ld-powerpc/tlsexetoc.g: Update.
	* ld-powerpc/tlsexetoc.r: Update.
	* ld-powerpc/tlsso.d: Update.
	* ld-powerpc/tlsso.g: Update.
	* ld-powerpc/tlsso.r: Update.
	* ld-powerpc/tlstocso.d: Update.
	* ld-powerpc/tlstocso.g: Update.
@
text
@d11 10
a20 1
.* <_start-0x18>:
d26 5
a30 1
.*	4e 80 04 20 	bctr
d34 2
a35 2
.*	4b ff ff e5 	bl      .*
.*	e8 41 00 28 	ld      r2,40\(r1\)
d37 2
a38 2
.*	4b ff ff d9 	bl      .*
.*	e8 41 00 28 	ld      r2,40\(r1\)
d55 1
d57 1
a57 1
.*	00 01 02 18 .*
@


1.8.8.1
log
@include/elf/
	* ppc.h (DT_PPC_TLSOPT): Define.
	* ppc64.h (DT_PPC64_TLSOPT): Define.
bfd/
	* elf32-ppc.c (TLS_GET_ADDR_GLINK_SIZE): Define.
	(ADD_3_12_2, BEQLR, CMPWI_11_0, LWZ_11_3, LWZ_12_3): Define.
	(MR_0_3, MR_3_0): Define.
	(struct ppc_elf_link_hash_table): Add no_tls_get_addr_opt.
	(ppc_elf_select_plt_layout): Save emit_stub_syms param earlier.
	(ppc_elf_tls_setup): Add no_tls_get_addr_opt param and save to hash
	table.  Check for presense of __tls_get_addr_opt
	(allocate_dynrelocs): Increase glink entry size for __tls_get_addr.
	(ppc_elf_size_dynamic_sections): Add DT_PPC_TLS_OPT tag.
	(write_glink_stub): Add param p.
	(ppc_elf_relocate_section): Adjust write_glink_stub call.
	(ppc_elf_finish_dynamic_symbol): Emit special glink call stub for
	__tls_get_addr.
	* elf32-ppc.h (ppc_elf_tls_setup): Update prototype.
	* elf64-ppc.c (struct ppc_link_hash_table): Add no_tls_get_addr_opt.
	(ppc64_elf_tls_setup): Add no_tls_get_addr_opt param and save to hash
	table.  Check for presense of __tls_get_addr_opt.
	(ppc64_elf_size_dynamic_sections): Add DT_PPC64_TLS_OPT tag.
	(LD_R11_0R3, LD_R12_0R3, MR_R0_R3, CMPDI_R11_0, ADD_R3_R12_R13,
	BEQLR, MR_R3_R0, MFLR_R11, STD_R11_0R1, BCTRL, LD_R11_0R1,
	LD_R2_0R1, MTLR_R11): Define.
	(build_tls_get_addr_stub): New function.
	(ppc_build_one_stub): Call it.
	(ppc_size_one_stub): Add extra size for __tls_get_addr stub.
	(ppc64_elf_relocate_section): Don't change nop to ld 2,40(1) for
	__tls_get_addr plt call.
	* elf64-ppc.h (ppc64_elf_tls_setup): Update prototype.
binutils/
	* readelf.c (get_ppc_dynamic_type): Add TLSOPT.
	(get_ppc64_dynamic_type): Likewise.
ld/
	* emultempl/ppc32elf.em (no_tls_get_addr_opt): New var.
	(ppc_before_allocation): Pass to ppc_elf_tls_setup.
	(OPTION_NO_TLS_GET_ADDR_OPT): Define.  Redefine other options in
	terms of previous option.
	(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS): Add
	--no-tls-get-addr-optimize.
	(PARSE_AND_LIST_ARGS_CASES): Handle it.
	* emultempl/ppc64elf.em (no_tls_get_addr_opt): New var.
	(ppc_before_allocation): Pass to ppc64_elf_tls_setup.
	(OPTION_NO_TLS_GET_ADDR_OPT): Define.
	(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS): Add
	--no-tls-get-addr-optimize.
	(PARSE_AND_LIST_ARGS_CASES): Handle it.
ld/testsuite/
	* ld-powerpc/tlslib.s: Delete dot-symbol entry syms.  Add
	__tls_get_addr_opt.
	* ld-powerpc/tlslib32.s: Add __tls_get_addr_opt.
	* ld-powerpc/oldtlslib.s: New file, old-abi version of tlslib.s.
	* ld-powerpc/powerpc.exp: Build old-abi library and use it in
	two new link tests.
	* ld-powerpc/tlsexe.d: Update for new __tls_get_addr stub.
	* ld-powerpc/tlsexe.g, * ld-powerpc/tlsexe.r, *ld-powerpc/tlsexe32.d,
	* ld-powerpc/tlsexe32.g, * ld-powerpc/tlsexe32.r,
	* ld-powerpc/tlsexetoc.d, * ld-powerpc/tlsexetoc.g,
	* ld-powerpc/tlsexetoc.r: Likewise.
@
text
@d11 1
a11 10
.* <_start-0x4c>:
.*	e9 63 00 00 	ld      r11,0\(r3\)
.*	e9 83 00 08 	ld      r12,8\(r3\)
.*	7c 60 1b 78 	mr      r0,r3
.*	2c 2b 00 00 	cmpdi   r11,0
.*	7c 6c 6a 14 	add     r3,r12,r13
.*	4d 82 00 20 	beqlr   
.*	7c 03 03 78 	mr      r3,r0
.*	7d 68 02 a6 	mflr    r11
.*	f9 61 00 20 	std     r11,32\(r1\)
d17 1
a17 5
.*	4e 80 04 21 	bctrl
.*	e9 61 00 20 	ld      r11,32\(r1\)
.*	e8 41 00 28 	ld      r2,40\(r1\)
.*	7d 68 03 a6 	mtlr    r11
.*	4e 80 00 20 	blr
d21 2
a22 2
.*	4b ff ff b1 	bl      .*
.*	60 00 00 00 	nop
d24 2
a25 2
.*	4b ff ff a5 	bl      .*
.*	60 00 00 00 	nop
a41 1
.*	60 00 00 00 	nop
d43 1
a43 1
.*	00 01 02 28 .*
@


1.8.8.2
log
@ld/
	* emultempl/ppc32elf.em (emit_stub_syms): Init to -1.
	(ppc_after_open): Set emit_stubs_syms by default when shared.
	(OPTION_NO_STUBSYMS): Define.
	(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS,
	PARSE_AND_LIST_ARGS_CASES): Handle --no-emit-stub-syms.
	* emultempl/ppc64elf.em (emit_stub_syms): Init to -1.
	(gld${EMULATION_NAME}_finish): Set emit_stubs_syms by default.
	(OPTION_NO_STUBSYMS): Define.
	(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS,
	PARSE_AND_LIST_ARGS_CASES): Handle --no-emit-stub-syms.
ld/testsuite/
	* ld-powerpc/tlsexe.d: Update.
	* ld-powerpc/tlsexe.r: Update.
	* ld-powerpc/tlsexetoc.d: Update.
	* ld-powerpc/tlsexetoc.r: Update.
	* ld-powerpc/tlsso.d: Update.
	* ld-powerpc/tlsso.r: Update.
	* ld-powerpc/tlstocso.d: Update.
	* ld-powerpc/tlstocso.r: Update.
@
text
@d11 1
a11 1
.* <00000010\.plt_call\.__tls_get_addr(|_opt)\+0>:
a57 1
.* <__glink_PLTresolve>:
@


1.7
log
@bfd/
	* elf64-ppc.c (create_linkage_sections): Align .glink to 8 bytes.
	(ppc64_elf_build_stubs): Use new lazy linking stub.
ld/testsuite/
	* ld-powerpc/tlsexe.d: Update for lazy link stub change.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexetoc.d: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.d: Likewise.
	* ld-powerpc/tlstocso.d: Likewise.
@
text
@d11 1
a11 2
.* <_start-0x1c>:
.*	3d 82 00 00 	addis   r12,r2,0
d13 1
a13 2
.*	e9 6c 80 70 	ld      r11,-32656\(r12\)
.*	e8 4c 80 78 	ld      r2,-32648\(r12\)
d15 2
a16 1
.*	e9 6c 80 80 	ld      r11,-32640\(r12\)
d21 1
a21 1
.*	4b ff ff e1 	bl      .*
d24 1
a24 1
.*	4b ff ff d5 	bl      .*
a41 1
.*	60 00 00 00 	nop
@


1.7.2.1
log
@bfd/
	* elf64-ppc.c (ADDI_R12_R12, LD_R11_0R2, LD_R2_0R2): Define.
	Update stub comments.
	(build_plt_stub): Build two variants, one without "addis".
	(ppc_build_one_stub): Build stubs without "addis" if possible.
	(ppc_size_one_stub): Size new stubs.
ld/testsuite/
	* ld-powerpc/relbrlt.s (.text.pad2): Adjust space.
	* ld-powerpc/relbrlt.d: Update.
	* ld-powerpc/tlsexe.d: Update.
	* ld-powerpc/tlsexe.g: Update.
	* ld-powerpc/tlsexe.r: Update.
	* ld-powerpc/tlsexetoc.d: Update.
	* ld-powerpc/tlsexetoc.g: Update.
	* ld-powerpc/tlsexetoc.r: Update.
	* ld-powerpc/tlsso.d: Update.
	* ld-powerpc/tlsso.g: Update.
	* ld-powerpc/tlsso.r: Update.
	* ld-powerpc/tlstocso.d: Update.
	* ld-powerpc/tlstocso.g: Update.
@
text
@d11 2
a12 1
.* <_start-0x18>:
d14 2
a15 1
.*	e9 62 80 70 	ld      r11,-32656\(r2\)
d17 1
a17 2
.*	e9 62 80 80 	ld      r11,-32640\(r2\)
.*	e8 42 80 78 	ld      r2,-32648\(r2\)
d22 1
a22 1
.*	4b ff ff e5 	bl      .*
d25 1
a25 1
.*	4b ff ff d9 	bl      .*
d43 1
@


1.6
log
@opcodes/
	* ppc-dis.c (print_insn_powerpc): Don't print tabs.  Handle
	PPC_OPERANDS_GPR_0.
	* ppc-opc.c (RA0): Define.
	(RAQ, RAL, RAM, RAS, RSQ, RTQ, RSO): Use PPC_OPERAND_GPR_0.
	(RAOPT): Rename from RAO.  Update all uses.
	(powerpc_opcodes): Use RA0 as appropriate.  Add "lsdx", "lsdi",
	"stsdx", "stsdi", "lmd" and "stmd" insns.

include/opcode/
	* ppc.h (PPC_OPERAND_GPR_0): Define.  Bump other operand defines.

gas/testsuite/
	Update gas/ppc/.

ld/testsuite/
	Update ld-powerpc/.
@
text
@d43 10
a52 12
.*	7d 89 02 a6 	mfctr   r12
.*	78 0b 1f 24 	rldicr  r11,r0,3,60
.*	34 40 80 00 	addic\.  r2,r0,-32768
.*	7d 8b 60 50 	subf    r12,r11,r12
.*	7c 42 fe 76 	sradi   r2,r2,63
.*	78 0b 17 64 	rldicr  r11,r0,2,61
.*	7c 42 58 38 	and     r2,r2,r11
.*	7d 8b 60 50 	subf    r12,r11,r12
.*	7d 8c 12 14 	add     r12,r12,r2
.*	3d 8c 00 01 	addis   r12,r12,1
.*	e9 6c 01 ec 	ld      r11,492\(r12\)
.*	39 8c 01 ec 	addi    r12,r12,492
d57 3
d61 1
a61 1
.*	4b ff ff bc 	b       .*
@


1.5
log
@	* ld-powerpc/tlsexetoc.d: Correct.
	* ld-powerpc/tlstoc.d: Correct.
@
text
@d12 6
a17 6
.*	3d 82 00 00 	addis	r12,r2,0
.*	f8 41 00 28 	std	r2,40\(r1\)
.*	e9 6c 80 70 	ld	r11,-32656\(r12\)
.*	e8 4c 80 78 	ld	r2,-32648\(r12\)
.*	7d 69 03 a6 	mtctr	r11
.*	e9 6c 80 80 	ld	r11,-32640\(r12\)
d21 7
a27 7
.*	38 62 80 08 	addi	r3,r2,-32760
.*	4b ff ff e1 	bl	.*
.*	e8 41 00 28 	ld	r2,40\(r1\)
.*	38 62 80 18 	addi	r3,r2,-32744
.*	4b ff ff d5 	bl	.*
.*	e8 41 00 28 	ld	r2,40\(r1\)
.*	3c 6d 00 00 	addis	r3,r13,0
d29 2
a30 2
.*	38 63 90 38 	addi	r3,r3,-28616
.*	3c 6d 00 00 	addis	r3,r13,0
d32 26
a57 26
.*	38 63 10 00 	addi	r3,r3,4096
.*	39 23 80 40 	addi	r9,r3,-32704
.*	3d 23 00 00 	addis	r9,r3,0
.*	81 49 80 48 	lwz	r10,-32696\(r9\)
.*	e9 22 80 48 	ld	r9,-32696\(r2\)
.*	7d 49 18 2a 	ldx	r10,r9,r3
.*	3d 2d 00 00 	addis	r9,r13,0
.*	a1 49 90 58 	lhz	r10,-28584\(r9\)
.*	89 4d 90 60 	lbz	r10,-28576\(r13\)
.*	3d 2d 00 00 	addis	r9,r13,0
.*	99 49 90 68 	stb	r10,-28568\(r9\)
.*	7d 89 02 a6 	mfctr	r12
.*	78 0b 1f 24 	rldicr	r11,r0,3,60
.*	34 40 80 00 	addic\.	r2,r0,-32768
.*	7d 8b 60 50 	subf	r12,r11,r12
.*	7c 42 fe 76 	sradi	r2,r2,63
.*	78 0b 17 64 	rldicr	r11,r0,2,61
.*	7c 42 58 38 	and	r2,r2,r11
.*	7d 8b 60 50 	subf	r12,r11,r12
.*	7d 8c 12 14 	add	r12,r12,r2
.*	3d 8c 00 01 	addis	r12,r12,1
.*	e9 6c 01 ec 	ld	r11,492\(r12\)
.*	39 8c 01 ec 	addi	r12,r12,492
.*	e8 4c 00 08 	ld	r2,8\(r12\)
.*	7d 69 03 a6 	mtctr	r11
.*	e9 6c 00 10 	ld	r11,16\(r12\)
d59 2
a60 2
.*	38 00 00 00 	li	r0,0
.*	4b ff ff bc 	b	.*
@


1.5.6.1
log
@opcodes/
	* ppc-dis.c (print_insn_powerpc): Don't print tabs.  Handle
	PPC_OPERANDS_GPR_0.
	* ppc-opc.c (RA0): Define.
	(RAQ, RAL, RAM, RAS, RSQ, RTQ, RSO): Use PPC_OPERAND_GPR_0.
	(RAOPT): Rename from RAO.  Update all uses.
	(powerpc_opcodes): Use RA0 as appropriate.  Add "lsdx", "lsdi",
	"stsdx", "stsdi", "lmd" and "stmd" insns.

include/opcode/
	* ppc.h (PPC_OPERAND_GPR_0): Define.  Bump other operand defines.

gas/testsuite/
	Update gas/ppc/.

ld/testsuite/
	Update ld-powerpc/.
@
text
@d12 6
a17 6
.*	3d 82 00 00 	addis   r12,r2,0
.*	f8 41 00 28 	std     r2,40\(r1\)
.*	e9 6c 80 70 	ld      r11,-32656\(r12\)
.*	e8 4c 80 78 	ld      r2,-32648\(r12\)
.*	7d 69 03 a6 	mtctr   r11
.*	e9 6c 80 80 	ld      r11,-32640\(r12\)
d21 7
a27 7
.*	38 62 80 08 	addi    r3,r2,-32760
.*	4b ff ff e1 	bl      .*
.*	e8 41 00 28 	ld      r2,40\(r1\)
.*	38 62 80 18 	addi    r3,r2,-32744
.*	4b ff ff d5 	bl      .*
.*	e8 41 00 28 	ld      r2,40\(r1\)
.*	3c 6d 00 00 	addis   r3,r13,0
d29 2
a30 2
.*	38 63 90 38 	addi    r3,r3,-28616
.*	3c 6d 00 00 	addis   r3,r13,0
d32 26
a57 26
.*	38 63 10 00 	addi    r3,r3,4096
.*	39 23 80 40 	addi    r9,r3,-32704
.*	3d 23 00 00 	addis   r9,r3,0
.*	81 49 80 48 	lwz     r10,-32696\(r9\)
.*	e9 22 80 48 	ld      r9,-32696\(r2\)
.*	7d 49 18 2a 	ldx     r10,r9,r3
.*	3d 2d 00 00 	addis   r9,r13,0
.*	a1 49 90 58 	lhz     r10,-28584\(r9\)
.*	89 4d 90 60 	lbz     r10,-28576\(r13\)
.*	3d 2d 00 00 	addis   r9,r13,0
.*	99 49 90 68 	stb     r10,-28568\(r9\)
.*	7d 89 02 a6 	mfctr   r12
.*	78 0b 1f 24 	rldicr  r11,r0,3,60
.*	34 40 80 00 	addic\.  r2,r0,-32768
.*	7d 8b 60 50 	subf    r12,r11,r12
.*	7c 42 fe 76 	sradi   r2,r2,63
.*	78 0b 17 64 	rldicr  r11,r0,2,61
.*	7c 42 58 38 	and     r2,r2,r11
.*	7d 8b 60 50 	subf    r12,r11,r12
.*	7d 8c 12 14 	add     r12,r12,r2
.*	3d 8c 00 01 	addis   r12,r12,1
.*	e9 6c 01 ec 	ld      r11,492\(r12\)
.*	39 8c 01 ec 	addi    r12,r12,492
.*	e8 4c 00 08 	ld      r2,8\(r12\)
.*	7d 69 03 a6 	mtctr   r11
.*	e9 6c 00 10 	ld      r11,16\(r12\)
d59 2
a60 2
.*	38 00 00 00 	li      r0,0
.*	4b ff ff bc 	b       .*
@


1.4
log
@	* ld-powerpc/tlsexetoc.d: Update.
	* ld-powerpc/tlsso.d: Update.
	* ld-powerpc/tlstoc.d: Update.
	* ld-powerpc/tlstocso.d: Update.
	* ld-powerpc/tlstocso.r: Update.
@
text
@d21 3
a23 3
.*	e8 62 80 08 	ld	r3,-32760\(r2\)
.*	60 00 00 00 	nop
.*	7c 63 6a 14 	add	r3,r3,r13
d29 1
a29 1
.*	38 63 91 90 	addi	r3,r3,-28272
d39 1
a39 1
.*	a1 49 91 d8 	lhz	r10,-28200\(r9\)
@


1.3
log
@	* ld-elfvsb/elfvsb.exp: Run for powerpc64 too.
	* ld-powerpc/tls.t: Update.
	* ld-powerpc/tlsexe.d: Update.
	* ld-powerpc/tlsexe.r: Update.
	* ld-powerpc/tlsexetoc.d: Update.
	* ld-powerpc/tlsexetoc.r: Update.
	* ld-powerpc/tlsexetoc.t: Update.
	* ld-powerpc/tlsso.d: Update.
	* ld-powerpc/tlsso.g: Update.
	* ld-powerpc/tlsso.r: Update.
	* ld-powerpc/tlsso.t: Update.
	* ld-powerpc/tlstocso.d: Update.
	* ld-powerpc/tlstocso.g: Update.
	* ld-powerpc/tlstocso.r: Update.
	* ld-powerpc/tlstocso.t: Update.
@
text
@d36 1
a36 1
.*	3d 2d 00 00 	addis	r9,r13,0
@


1.2
log
@	* ld-powerpc/tlslib.s: Give .__tls_get_addr function type.
	* ld-powerpc/tlsexe.d: Update for changed handling of (invalid) ld var
	in dynamic lib.
	* ld-powerpc/tlsexe.g: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexe.t: Likewise.
	* ld-powerpc/tlsexetoc.d: Likewise.
	* ld-powerpc/tlsexetoc.g: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsexetoc.t: Likewise.
@
text
@d11 8
a18 8
0+10000370 <_start-0x1c>:
    10000370:	3d 82 00 00 	addis	r12,r2,0
    10000374:	f8 41 00 28 	std	r2,40\(r1\)
    10000378:	e9 6c 80 70 	ld	r11,-32656\(r12\)
    1000037c:	e8 4c 80 78 	ld	r2,-32648\(r12\)
    10000380:	7d 69 03 a6 	mtctr	r11
    10000384:	e9 6c 80 80 	ld	r11,-32640\(r12\)
    10000388:	4e 80 04 20 	bctr
d20 41
a60 33
0+1000038c <_start>:
    1000038c:	e8 62 80 08 	ld	r3,-32760\(r2\)
    10000390:	60 00 00 00 	nop
    10000394:	7c 63 6a 14 	add	r3,r3,r13
    10000398:	38 62 80 18 	addi	r3,r2,-32744
    1000039c:	4b ff ff d5 	bl	10000370 <le1\+0x10000308>
    100003a0:	e8 41 00 28 	ld	r2,40\(r1\)
    100003a4:	3c 6d 00 00 	addis	r3,r13,0
    100003a8:	60 00 00 00 	nop
    100003ac:	38 63 91 90 	addi	r3,r3,-28272
    100003b0:	3c 6d 00 00 	addis	r3,r13,0
    100003b4:	60 00 00 00 	nop
    100003b8:	38 63 10 00 	addi	r3,r3,4096
    100003bc:	39 23 80 40 	addi	r9,r3,-32704
    100003c0:	3d 23 00 00 	addis	r9,r3,0
    100003c4:	81 49 80 48 	lwz	r10,-32696\(r9\)
    100003c8:	3d 2d 00 00 	addis	r9,r13,0
    100003cc:	7d 49 18 2a 	ldx	r10,r9,r3
    100003d0:	3d 2d 00 00 	addis	r9,r13,0
    100003d4:	a1 49 91 d8 	lhz	r10,-28200\(r9\)
    100003d8:	89 4d 90 60 	lbz	r10,-28576\(r13\)
    100003dc:	3d 2d 00 00 	addis	r9,r13,0
    100003e0:	99 49 90 68 	stb	r10,-28568\(r9\)
    100003e4:	e8 41 00 28 	ld	r2,40\(r1\)
    100003e8:	3d 82 00 00 	addis	r12,r2,0
    100003ec:	e9 6c 80 58 	ld	r11,-32680\(r12\)
    100003f0:	e8 4c 80 60 	ld	r2,-32672\(r12\)
    100003f4:	7d 69 03 a6 	mtctr	r11
    100003f8:	e9 6c 80 68 	ld	r11,-32664\(r12\)
    100003fc:	4e 80 04 20 	bctr
    10000400:	60 00 00 00 	nop
    10000404:	38 00 00 00 	li	r0,0
    10000408:	4b ff ff dc 	b	100003e4 <_start\+0x58>
@


1.1
log
@new ppc64 tls tests
@
text
@d11 42
a52 23
0+10000338 <_start>:
    10000338:	e8 62 80 08 	ld	r3,-32760\(r2\)
    1000033c:	60 00 00 00 	nop
    10000340:	7c 63 6a 14 	add	r3,r3,r13
    10000344:	e8 62 80 18 	ld	r3,-32744\(r2\)
    10000348:	60 00 00 00 	nop
    1000034c:	7c 63 6a 14 	add	r3,r3,r13
    10000350:	3c 6d 00 00 	addis	r3,r13,0
    10000354:	60 00 00 00 	nop
    10000358:	38 63 91 40 	addi	r3,r3,-28352
    1000035c:	3c 6d 00 00 	addis	r3,r13,0
    10000360:	60 00 00 00 	nop
    10000364:	38 63 10 00 	addi	r3,r3,4096
    10000368:	39 23 80 40 	addi	r9,r3,-32704
    1000036c:	3d 23 00 00 	addis	r9,r3,0
    10000370:	81 49 80 48 	lwz	r10,-32696\(r9\)
    10000374:	3d 2d 00 00 	addis	r9,r13,0
    10000378:	7d 49 18 2a 	ldx	r10,r9,r3
    1000037c:	3d 2d 00 00 	addis	r9,r13,0
    10000380:	a1 49 91 88 	lhz	r10,-28280\(r9\)
    10000384:	89 4d 90 60 	lbz	r10,-28576\(r13\)
    10000388:	3d 2d 00 00 	addis	r9,r13,0
    1000038c:	99 49 90 68 	stb	r10,-28568\(r9\)
@

