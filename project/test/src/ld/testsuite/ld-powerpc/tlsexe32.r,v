head	1.21;
access;
symbols
	binutils-2_24-branch:1.21.0.2
	binutils-2_24-branchpoint:1.21
	binutils-2_21_1:1.18
	binutils-2_23_2:1.20.2.1
	binutils-2_23_1:1.20
	binutils-2_23:1.20
	binutils-2_23-branch:1.20.0.2
	binutils-2_23-branchpoint:1.20
	binutils-2_22_branch:1.18.0.6
	binutils-2_22:1.18
	binutils-2_22-branch:1.18.0.4
	binutils-2_22-branchpoint:1.18
	binutils-2_21:1.18
	binutils-2_21-branch:1.18.0.2
	binutils-2_21-branchpoint:1.18
	binutils-2_20_1:1.15.8.1
	binutils-2_20:1.15.8.1
	binutils-arc-20081103-branch:1.15.0.10
	binutils-arc-20081103-branchpoint:1.15
	binutils-2_20-branch:1.15.0.8
	binutils-2_20-branchpoint:1.15
	dje-cgen-play1-branch:1.15.0.6
	dje-cgen-play1-branchpoint:1.15
	arc-20081103-branch:1.15.0.4
	arc-20081103-branchpoint:1.15
	binutils-2_19_1:1.15
	binutils-2_19:1.15
	binutils-2_19-branch:1.15.0.2
	binutils-2_19-branchpoint:1.15
	binutils-2_18:1.14
	binutils-2_18-branch:1.14.0.2
	binutils-2_18-branchpoint:1.14
	binutils-csl-coldfire-4_1-32:1.13
	binutils-csl-sourcerygxx-4_1-32:1.13
	binutils-csl-innovasic-fido-3_4_4-33:1.13
	binutils-csl-sourcerygxx-3_4_4-32:1.5.2.1
	binutils-csl-coldfire-4_1-30:1.13
	binutils-csl-sourcerygxx-4_1-30:1.13
	binutils-csl-coldfire-4_1-28:1.13
	binutils-csl-sourcerygxx-4_1-29:1.13
	binutils-csl-sourcerygxx-4_1-28:1.13
	binutils-csl-arm-2006q3-27:1.13
	binutils-csl-sourcerygxx-4_1-27:1.13
	binutils-csl-arm-2006q3-26:1.13
	binutils-csl-sourcerygxx-4_1-26:1.13
	binutils-csl-sourcerygxx-4_1-25:1.13
	binutils-csl-sourcerygxx-4_1-24:1.13
	binutils-csl-sourcerygxx-4_1-23:1.13
	binutils-csl-sourcerygxx-4_1-21:1.13
	binutils-csl-arm-2006q3-21:1.13
	binutils-csl-sourcerygxx-4_1-22:1.13
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.13
	binutils-csl-sourcerygxx-4_1-20:1.13
	binutils-csl-arm-2006q3-19:1.13
	binutils-csl-sourcerygxx-4_1-19:1.13
	binutils-csl-sourcerygxx-4_1-18:1.13
	binutils-csl-renesas-4_1-9:1.13
	binutils-csl-sourcerygxx-3_4_4-25:1.5.2.1
	binutils-csl-renesas-4_1-8:1.13
	binutils-csl-renesas-4_1-7:1.13
	binutils-csl-renesas-4_1-6:1.13
	binutils-csl-sourcerygxx-4_1-17:1.13
	binutils-csl-sourcerygxx-4_1-14:1.13
	binutils-csl-sourcerygxx-4_1-15:1.13
	binutils-csl-sourcerygxx-4_1-13:1.13
	binutils-2_17:1.13
	binutils-csl-sourcerygxx-4_1-12:1.13
	binutils-csl-sourcerygxx-3_4_4-21:1.13
	binutils-csl-wrs-linux-3_4_4-24:1.5.2.1
	binutils-csl-wrs-linux-3_4_4-23:1.5.2.1
	binutils-csl-sourcerygxx-4_1-9:1.13
	binutils-csl-sourcerygxx-4_1-8:1.13
	binutils-csl-sourcerygxx-4_1-7:1.13
	binutils-csl-arm-2006q1-6:1.13
	binutils-csl-sourcerygxx-4_1-6:1.13
	binutils-csl-wrs-linux-3_4_4-22:1.5.2.1
	binutils-csl-coldfire-4_1-11:1.13
	binutils-csl-sourcerygxx-3_4_4-19:1.13
	binutils-csl-coldfire-4_1-10:1.13
	binutils-csl-sourcerygxx-4_1-5:1.13
	binutils-csl-sourcerygxx-4_1-4:1.13
	binutils-csl-wrs-linux-3_4_4-21:1.5.2.1
	binutils-csl-morpho-4_1-4:1.13
	binutils-csl-sourcerygxx-3_4_4-17:1.13
	binutils-csl-wrs-linux-3_4_4-20:1.5.2.1
	binutils-2_17-branch:1.13.0.4
	binutils-2_17-branchpoint:1.13
	binutils-csl-2_17-branch:1.13.0.2
	binutils-csl-2_17-branchpoint:1.13
	binutils-csl-gxxpro-3_4-branch:1.5.2.1.0.4
	binutils-csl-gxxpro-3_4-branchpoint:1.5.2.1
	binutils-2_16_1:1.5.2.1
	binutils-csl-arm-2005q1b:1.5.2.1
	binutils-2_16:1.5.2.1
	binutils-csl-arm-2005q1a:1.5.2.1
	binutils-csl-arm-2005q1-branch:1.5.2.1.0.2
	binutils-csl-arm-2005q1-branchpoint:1.5.2.1
	binutils-2_16-branch:1.5.0.2
	binutils-2_16-branchpoint:1.5
	csl-arm-2004-q3d:1.5
	csl-arm-2004-q3:1.4
	binutils-2_15:1.1
	binutils-2_15-branchpoint:1.1
	csl-arm-2004-q1a:1.1
	csl-arm-2004-q1:1.1
	binutils-2_15-branch:1.1.0.8
	cagney_bfdfile-20040213-branch:1.1.0.6
	cagney_bfdfile-20040213-branchpoint:1.1
	cagney_bigcore-20040122-branch:1.1.0.4
	cagney_bigcore-20040122-branchpoint:1.1
	csl-arm-2003-q4:1.1
	binutils-2_14:1.1
	binutils-2_14-branch:1.1.0.2
	binutils-2_14-branchpoint:1.1
	binutils_latest_snapshot:1.21;
locks; strict;
comment	@# @;


1.21
date	2012.10.29.09.25.53;	author amodra;	state Exp;
branches;
next	1.20;

1.20
date	2012.06.15.15.13.37;	author amodra;	state Exp;
branches
	1.20.2.1;
next	1.19;

1.19
date	2012.06.06.10.50.17;	author amodra;	state Exp;
branches;
next	1.18;

1.18
date	2009.09.24.15.56.51;	author hjl;	state Exp;
branches;
next	1.17;

1.17
date	2009.09.23.03.12.27;	author amodra;	state Exp;
branches;
next	1.16;

1.16
date	2009.09.21.11.51.02;	author amodra;	state Exp;
branches;
next	1.15;

1.15
date	2007.09.30.01.33.15;	author vapier;	state Exp;
branches
	1.15.8.1;
next	1.14;

1.14
date	2006.06.02.00.32.00;	author amodra;	state Exp;
branches;
next	1.13;

1.13
date	2006.02.02.22.53.46;	author hjl;	state Exp;
branches;
next	1.12;

1.12
date	2006.02.02.22.05.55;	author hjl;	state Exp;
branches;
next	1.11;

1.11
date	2005.08.17.10.04.32;	author amodra;	state Exp;
branches;
next	1.10;

1.10
date	2005.08.15.15.39.47;	author amodra;	state Exp;
branches;
next	1.9;

1.9
date	2005.05.07.02.55.55;	author amodra;	state Exp;
branches;
next	1.8;

1.8
date	2005.03.21.13.56.56;	author amodra;	state Exp;
branches;
next	1.7;

1.7
date	2005.03.16.21.52.47;	author hjl;	state Exp;
branches;
next	1.6;

1.6
date	2005.03.16.02.41.28;	author amodra;	state Exp;
branches;
next	1.5;

1.5
date	2004.11.02.05.40.05;	author hp;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	2004.09.22.07.24.13;	author amodra;	state Exp;
branches;
next	1.3;

1.3
date	2004.05.11.17.08.36;	author jakub;	state Exp;
branches;
next	1.2;

1.2
date	2004.05.05.13.31.04;	author amodra;	state Exp;
branches;
next	1.1;

1.1
date	2003.02.18.06.11.32;	author amodra;	state Exp;
branches;
next	;

1.20.2.1
date	2013.01.21.13.48.52;	author amodra;	state Exp;
branches;
next	;

1.15.8.1
date	2009.09.21.11.55.17;	author amodra;	state Exp;
branches;
next	;

1.5.2.1
date	2005.03.16.02.42.27;	author amodra;	state Exp;
branches;
next	;


desc
@@


1.21
log
@	* ld-powerpc/powerpc.exp: Modify emulation option passed to ld
	when little-endian.
	* ld-powerpc/apuinfo-nul.rd: Update for le output.
	* ld-powerpc/apuinfo.rd: Likewise.
	* ld-powerpc/plt1.d: Likewise.
	* ld-powerpc/relax.d: Likewise.
	* ld-powerpc/relaxr.d: Likewise.
	* ld-powerpc/sdadyn.d: Likewise.
	* ld-powerpc/tls.d: Likewise.
	* ld-powerpc/tls.g: Likewise.
	* ld-powerpc/tls.t: Likewise.
	* ld-powerpc/tls32.d: Likewise.
	* ld-powerpc/tls32.g: Likewise.
	* ld-powerpc/tls32.t: Likewise.
	* ld-powerpc/tlsexe.d: Likewise.
	* ld-powerpc/tlsexe.g: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexe.t: Likewise.
	* ld-powerpc/tlsexe32.d: Likewise.
	* ld-powerpc/tlsexe32.g: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsexe32.t: Likewise.
	* ld-powerpc/tlsexetoc.d: Likewise.
	* ld-powerpc/tlsexetoc.g: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsexetoc.t: Likewise.
	* ld-powerpc/tlsmark.d: Likewise.
	* ld-powerpc/tlsmark32.d: Likewise.
	* ld-powerpc/tlsopt1.d: Likewise.
	* ld-powerpc/tlsopt1_32.d: Likewise.
	* ld-powerpc/tlsopt2.d: Likewise.
	* ld-powerpc/tlsopt2_32.d: Likewise.
	* ld-powerpc/tlsopt3.d: Likewise.
	* ld-powerpc/tlsopt3_32.d: Likewise.
	* ld-powerpc/tlsopt4.d: Likewise.
	* ld-powerpc/tlsopt4_32.d: Likewise.
	* ld-powerpc/tlsso.d: Likewise.
	* ld-powerpc/tlsso.g: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso.t: Likewise.
	* ld-powerpc/tlsso32.d: Likewise.
	* ld-powerpc/tlsso32.g: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlsso32.t: Likewise.
	* ld-powerpc/tlstoc.d: Likewise.
	* ld-powerpc/tlstoc.g: Likewise.
	* ld-powerpc/tlstoc.t: Likewise.
	* ld-powerpc/tlstocso.d: Likewise.
	* ld-powerpc/tlstocso.g: Likewise.
	* ld-powerpc/tlstocso.t: Likewise.
	* ld-powerpc/tocopt.out: Likewise.
@
text
@#source: tls32.s
#source: tlslib32.s
#as: -a32
#ld: 
#readelf: -WSsrl
#target: powerpc*-*-*

There are [0-9]+ section headers, starting at offset 0x[0-9a-f]+:

Section Headers:
 +\[Nr\] Name +Type +Addr +Off +Size +ES Flg Lk Inf Al
 +\[[ 0-9]+\] +NULL +0+ 0+ 0+ 00 +0 +0 +0
 +\[[ 0-9]+\] \.interp +.*
 +\[[ 0-9]+\] \.hash +.*
 +\[[ 0-9]+\] \.dynsym +.*
 +\[[ 0-9]+\] \.dynstr +.*
 +\[[ 0-9]+\] \.rela\.dyn +.*
 +\[[ 0-9]+\] \.rela\.plt +.*
 +\[[ 0-9]+\] \.text +PROGBITS +[0-9a-f]+ [0-9a-f]+ 000070 00 +AX +0 +0 +1
 +\[[ 0-9]+\] \.tdata +PROGBITS +[0-9a-f]+ [0-9a-f]+ 00001c 00 WAT +0 +0 +4
 +\[[ 0-9]+\] \.tbss +NOBITS +[0-9a-f]+ [0-9a-f]+ 00001c 00 WAT +0 +0 +4
 +\[[ 0-9]+\] \.dynamic +DYNAMIC +[0-9a-f]+ [0-9a-f]+ [0-9a-f]+ 08 +WA +4 +0 +4
 +\[[ 0-9]+\] \.got +PROGBITS +[0-9a-f]+ [0-9a-f]+ 00001c 04 WAX +0 +0 +4
 +\[[ 0-9]+\] \.plt +NOBITS +.*
 +\[[ 0-9]+\] \.shstrtab +STRTAB +.*
 +\[[ 0-9]+\] \.symtab +SYMTAB +.*
 +\[[ 0-9]+\] \.strtab +STRTAB +.*
#...

Elf file type is EXEC \(Executable file\)
Entry point .*
There are [0-9]+ program headers, starting at offset [0-9]+

Program Headers:
 +Type +Offset +VirtAddr +PhysAddr +FileSiz MemSiz +Flg Align
 +PHDR +0x000034 0x01800034 0x01800034 0x000c0 0x000c0 R E 0x4
 +INTERP +0x0000f4 0x018000f4 0x018000f4 0x00011 0x00011 R +0x1
 +\[Requesting program interpreter: .*\]
 +LOAD .* R E 0x10000
 +LOAD .* RWE 0x10000
 +DYNAMIC .* RW +0x4
 +TLS .* 0x0001c 0x00038 R +0x4

 Section to Segment mapping:
 +Segment Sections\.\.\.
 +00 +
 +01 +\.interp 
 +02 +\.interp \.hash \.dynsym \.dynstr \.rela\.dyn \.rela\.plt \.text 
 +03 +\.tdata \.dynamic \.got \.plt 
 +04 +\.dynamic 
 +05 +\.tdata \.tbss 

Relocation section '\.rela\.dyn' at offset .* contains 2 entries:
 Offset +Info +Type +Sym\. Value +Symbol's Name \+ Addend
[0-9a-f ]+R_PPC_TPREL32 +00000000 +gd \+ 0
[0-9a-f ]+R_PPC_DTPMOD32 +00000000 +ld \+ 0

Relocation section '\.rela\.plt' at offset .* contains 1 entries:
 Offset +Info +Type +Sym\. Value +Symbol's Name \+ Addend
[0-9a-f ]+R_PPC_JMP_SLOT[0-9a-f ]+__tls_get_addr_opt \+ 0

Symbol table '\.dynsym' contains [0-9]+ entries:
 +Num: +Value +Size +Type +Bind +Vis +Ndx +Name
.* NOTYPE +LOCAL +DEFAULT +UND 
.* TLS +GLOBAL +DEFAULT +UND gd
.* TLS +GLOBAL +DEFAULT +UND ld
.* NOTYPE +GLOBAL +DEFAULT +12 __end
.* NOTYPE +GLOBAL +DEFAULT +12 __bss_start
.* FUNC +GLOBAL +DEFAULT +UND __tls_get_addr_opt
.* NOTYPE +GLOBAL +DEFAULT +11 _edata
.* NOTYPE +GLOBAL +DEFAULT +12 _end

Symbol table '\.symtab' contains [0-9]+ entries:
 +Num: +Value +Size +Type +Bind +Vis +Ndx +Name
.* NOTYPE +LOCAL +DEFAULT +UND 
.* SECTION +LOCAL +DEFAULT +1 
.* SECTION +LOCAL +DEFAULT +2 
.* SECTION +LOCAL +DEFAULT +3 
.* SECTION +LOCAL +DEFAULT +4 
.* SECTION +LOCAL +DEFAULT +5 
.* SECTION +LOCAL +DEFAULT +6 
.* SECTION +LOCAL +DEFAULT +7 
.* SECTION +LOCAL +DEFAULT +8 
.* SECTION +LOCAL +DEFAULT +9 
.* SECTION +LOCAL +DEFAULT +10 
.* SECTION +LOCAL +DEFAULT +11 
.* SECTION +LOCAL +DEFAULT +12 
.* FILE +LOCAL +DEFAULT +ABS .*
.* TLS +LOCAL +DEFAULT +8 gd4
.* TLS +LOCAL +DEFAULT +8 ld4
.* TLS +LOCAL +DEFAULT +8 ld5
.* TLS +LOCAL +DEFAULT +8 ld6
.* TLS +LOCAL +DEFAULT +8 ie4
.* TLS +LOCAL +DEFAULT +8 le4
.* TLS +LOCAL +DEFAULT +8 le5
.* FILE +LOCAL +DEFAULT +ABS .*
.* OBJECT +LOCAL +DEFAULT +10 _DYNAMIC
.* OBJECT +LOCAL +DEFAULT +11 _GLOBAL_OFFSET_TABLE_
.* TLS +GLOBAL +DEFAULT +UND gd
.* TLS +GLOBAL +DEFAULT +9 le0
.* TLS +GLOBAL +DEFAULT +9 ld0
.* TLS +GLOBAL +DEFAULT +9 le1
.* TLS +GLOBAL +DEFAULT +UND ld
.* NOTYPE +GLOBAL +DEFAULT +7 _start
.* NOTYPE +GLOBAL +DEFAULT +12 __end
.* TLS +GLOBAL +DEFAULT +9 ld2
.* TLS +GLOBAL +DEFAULT +9 ld1
.* NOTYPE +GLOBAL +DEFAULT +12 __bss_start
.* FUNC +GLOBAL +DEFAULT +UND __tls_get_addr_opt
.* NOTYPE +GLOBAL +DEFAULT +11 _edata
.* NOTYPE +GLOBAL +DEFAULT +12 _end
.* TLS +GLOBAL +DEFAULT +9 gd0
.* TLS +GLOBAL +DEFAULT +9 ie0
@


1.20
log
@ld/
	* ldlang.h (lang_output_section_statement_type): Add after_end field.
	(lang_abs_symbol_at_beginning_of, lang_abs_symbol_at_end_of): Delete.
	(section_for_dot): Declare.
	* ldlang.c (lang_size_sections_1): Correct comment.
	(current_section): Move earlier.
	(current_assign, prefer_next_section): New static vars.
	(lang_do_assignments_1): Add found_end param.  Detect _end
	assignment to set found_end.  Set os->after_end.  Set above statics.
	(lang_do_assignments): Adjust lang_do_assignments_1 call.  Init
	vars.
	(section_for_dot): New function.
	(lang_set_startof): Don't make an absolute symbol.
	(lang_abs_symbol_at_beginning_of, lang_abs_symbol_at_end_of): Delete.
	* ldexp.c (new_rel_from_abs): Use section_for_dot.
	* emultempl/lnk960.em (symbol_at_beginning_of): New function.
	(symbol_at_end_of): Likewise.
	(lnk960_after_allocation): Use them.
	* scripttempl/elf.sc: Precede OTHER_GOT_SYMBOLS with . = .; and
	likewise before __bss_start.

ld/testsuite/
Update far too many tests.
@
text
@d4 1
a4 1
#ld: -melf32ppc
@


1.20.2.1
log
@	PR 12549
	PR 14493
	PR 14567
	PR 14662
	PR 14758
	PR 14813
	PR 14904
	PR 14915
	PR 14926
	PR 14950
	PR 14962
	Apply mainline patches
@
text
@d4 1
a4 1
#ld: 
@


1.19
log
@bfd/
	* elflink.c (elf_link_input_bfd): Provide a file symbol for
	each input file with local syms, if the input lacks such.
	(bfd_elf_final_link): Add a file symbol to mark end of locals
	for which we can associate with input files.
	(struct elf_final_link_info): Add filesym_count field.
	(struct elf_outext_info): Add need_second_pass and second_pass.
	(elf_link_output_extsym): Detect symbols defined in the output
	file, emit them on second pass over locals.
ld/testsuite/
Update to suit added STT_FILE symbols.
@
text
@d67 2
a68 2
.* NOTYPE +GLOBAL +DEFAULT +ABS __end
.* NOTYPE +GLOBAL +DEFAULT +ABS __bss_start
d70 2
a71 2
.* NOTYPE +GLOBAL +DEFAULT +ABS _edata
.* NOTYPE +GLOBAL +DEFAULT +ABS _end
d105 1
a105 1
.* NOTYPE +GLOBAL +DEFAULT +ABS __end
d108 1
a108 1
.* NOTYPE +GLOBAL +DEFAULT +ABS __bss_start
d110 2
a111 2
.* NOTYPE +GLOBAL +DEFAULT +ABS _edata
.* NOTYPE +GLOBAL +DEFAULT +ABS _end
@


1.18
log
@bfd/

2009-09-24  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/10630
	* elflink.c (elf_link_output_extsym): Turn off visibility on
	local symbol.
	(bfd_elf_final_link): Turn off visibility on dynamic local
	symbol.

ld/testsuite/

2009-09-24  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/10630
	* ld-alpha/tlsbin.rd: Remove HIDDEN/.hidden on local symbols.
	* ld-alpha/tlsbinr.rd: Likewise.
	* ld-alpha/tlspic.rd: Likewise.
	* ld-cris/libdso-2.d: Likewise.
	* ld-cris/locref1.d: Likewise.
	* ld-cris/locref2.d: Likewise.
	* ld-cris/tls-e-20a.d: Likewise.
	* ld-cris/tls-e-20.d: Likewise.
	* ld-cris/tls-e-80.d: Likewise.
	* ld-cris/tls-gc-68.d: Likewise.
	* ld-cris/tls-gc-69.d: Likewise.
	* ld-cris/tls-gc-70.d: Likewise.
	* ld-cris/tls-gc-75.d: Likewise.
	* ld-cris/tls-gc-76.d: Likewise.
	* ld-cris/tls-gc-79.d: Likewise.
	* ld-cris/tls-gd-1h.d: Likewise.
	* ld-cris/tls-gd-2h.d: Likewise.
	* ld-cris/tls-ld-4.d: Likewise.
	* ld-cris/tls-ld-5.d: Likewise.
	* ld-cris/tls-ld-6.d: Likewise.
	* ld-cris/tls-ld-7.d: Likewise.
	* ld-cris/tls-ldgd-14.d: Likewise.
	* ld-cris/tls-ldgd-15.d: Likewise.
	* ld-cris/tls-local-63.d: Likewise.
	* ld-cris/tls-local-64.d: Likewise.
	* ld-elf/pr9676.rd: Likewise.
	* ld-elf/pr9679.rd: Likewise.
	* ld-elfvsb/hidden2.d: Likewise.
	* ld-i386/tlsbindesc.rd: Likewise.
	* ld-i386/tlsbin.rd: Likewise.
	* ld-i386/tlsdesc.rd: Likewise.
	* ld-i386/tlsgdesc.rd: Likewise.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlspic.rd: Likewise.
	* ld-ia64/tlsbin.rd: Likewise.
	* ld-ia64/tlspic.rd: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-sparc/gotop32.rd: Likewise.
	* ld-sparc/gotop64.rd: Likewise.
	* ld-sparc/tlssunbin32.rd: Likewise.
	* ld-sparc/tlssunbin64.rd: Likewise.
	* ld-sparc/tlssunnopic32.rd: Likewise.
	* ld-sparc/tlssunnopic64.rd: Likewise.
	* ld-sparc/tlssunpic32.rd: Likewise.
	* ld-sparc/tlssunpic64.rd: Likewise.
	* ld-x86-64/tlsbindesc.rd: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-x86-64/tlsdesc.rd: Likewise.
	* ld-x86-64/tlsgdesc.rd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
	* ld-xtensa/tlsbin.rd: Likewise.
	* ld-xtensa/tlspic.rd: Likewise.

	* ld-elf/local1.d: New.
	* ld-elf/local1.map: Likewise.
	* ld-elf/local1.s: Likewise.
	* ld-ia64/local1.d: Likewise.
	* ld-ia64/local1.map: Likewise.
	* ld-ia64/local1.s: Likewise.
@
text
@d88 1
d96 1
@


1.17
log
@Tolerate some whitespace differences in readelf output.
@
text
@d95 2
a96 2
.* OBJECT +LOCAL +HIDDEN +10 _DYNAMIC
.* OBJECT +LOCAL +HIDDEN +11 _GLOBAL_OFFSET_TABLE_
@


1.16
log
@include/elf/
	* ppc.h (DT_PPC_TLSOPT): Define.
	* ppc64.h (DT_PPC64_TLSOPT): Define.
bfd/
	* elf32-ppc.c (TLS_GET_ADDR_GLINK_SIZE): Define.
	(ADD_3_12_2, BEQLR, CMPWI_11_0, LWZ_11_3, LWZ_12_3): Define.
	(MR_0_3, MR_3_0): Define.
	(struct ppc_elf_link_hash_table): Add no_tls_get_addr_opt.
	(ppc_elf_select_plt_layout): Save emit_stub_syms param earlier.
	(ppc_elf_tls_setup): Add no_tls_get_addr_opt param and save to hash
	table.  Check for presense of __tls_get_addr_opt
	(allocate_dynrelocs): Increase glink entry size for __tls_get_addr.
	(ppc_elf_size_dynamic_sections): Add DT_PPC_TLS_OPT tag.
	(write_glink_stub): Add param p.
	(ppc_elf_relocate_section): Adjust write_glink_stub call.
	(ppc_elf_finish_dynamic_symbol): Emit special glink call stub for
	__tls_get_addr.
	* elf32-ppc.h (ppc_elf_tls_setup): Update prototype.
	* elf64-ppc.c (struct ppc_link_hash_table): Add no_tls_get_addr_opt.
	(ppc64_elf_tls_setup): Add no_tls_get_addr_opt param and save to hash
	table.  Check for presense of __tls_get_addr_opt.
	(ppc64_elf_size_dynamic_sections): Add DT_PPC64_TLS_OPT tag.
	(LD_R11_0R3, LD_R12_0R3, MR_R0_R3, CMPDI_R11_0, ADD_R3_R12_R13,
	BEQLR, MR_R3_R0, MFLR_R11, STD_R11_0R1, BCTRL, LD_R11_0R1,
	LD_R2_0R1, MTLR_R11): Define.
	(build_tls_get_addr_stub): New function.
	(ppc_build_one_stub): Call it.
	(ppc_size_one_stub): Add extra size for __tls_get_addr stub.
	(ppc64_elf_relocate_section): Don't change nop to ld 2,40(1) for
	__tls_get_addr plt call.
	* elf64-ppc.h (ppc64_elf_tls_setup): Update prototype.
binutils/
	* readelf.c (get_ppc_dynamic_type): Add TLSOPT.
	(get_ppc64_dynamic_type): Likewise.
ld/
	* emultempl/ppc32elf.em (no_tls_get_addr_opt): New var.
	(ppc_before_allocation): Pass to ppc_elf_tls_setup.
	(OPTION_NO_TLS_GET_ADDR_OPT): Define.  Redefine other options in
	terms of previous option.
	(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS): Add
	--no-tls-get-addr-optimize.
	(PARSE_AND_LIST_ARGS_CASES): Handle it.
	* emultempl/ppc64elf.em (no_tls_get_addr_opt): New var.
	(ppc_before_allocation): Pass to ppc64_elf_tls_setup.
	(OPTION_NO_TLS_GET_ADDR_OPT): Define.
	(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS): Add
	--no-tls-get-addr-optimize.
	(PARSE_AND_LIST_ARGS_CASES): Handle it.
ld/testsuite/
	* ld-powerpc/tlslib.s: Delete dot-symbol entry syms.  Add
	__tls_get_addr_opt.
	* ld-powerpc/tlslib32.s: Add __tls_get_addr_opt.
	* ld-powerpc/oldtlslib.s: New file, old-abi version of tlslib.s.
	* ld-powerpc/powerpc.exp: Build old-abi library and use it in
	two new link tests.
	* ld-powerpc/tlsexe.d: Update for new __tls_get_addr stub.
	* ld-powerpc/tlsexe.g, * ld-powerpc/tlsexe.r, *ld-powerpc/tlsexe32.d,
	* ld-powerpc/tlsexe32.g, * ld-powerpc/tlsexe32.r,
	* ld-powerpc/tlsexetoc.d, * ld-powerpc/tlsexetoc.g,
	* ld-powerpc/tlsexetoc.r: Likewise.
@
text
@d63 1
a63 1
 +Num: +Value +Size Type +Bind +Vis +Ndx Name
d65 7
a71 7
.* TLS +GLOBAL DEFAULT +UND gd
.* TLS +GLOBAL DEFAULT +UND ld
.* NOTYPE +GLOBAL DEFAULT +ABS __end
.* NOTYPE +GLOBAL DEFAULT +ABS __bss_start
.* FUNC +GLOBAL DEFAULT +UND __tls_get_addr_opt
.* NOTYPE +GLOBAL DEFAULT +ABS _edata
.* NOTYPE +GLOBAL DEFAULT +ABS _end
d74 1
a74 1
 +Num: +Value +Size Type +Bind +Vis +Ndx Name
d76 12
a87 12
.* SECTION LOCAL +DEFAULT +1 
.* SECTION LOCAL +DEFAULT +2 
.* SECTION LOCAL +DEFAULT +3 
.* SECTION LOCAL +DEFAULT +4 
.* SECTION LOCAL +DEFAULT +5 
.* SECTION LOCAL +DEFAULT +6 
.* SECTION LOCAL +DEFAULT +7 
.* SECTION LOCAL +DEFAULT +8 
.* SECTION LOCAL +DEFAULT +9 
.* SECTION LOCAL +DEFAULT +10 
.* SECTION LOCAL +DEFAULT +11 
.* SECTION LOCAL +DEFAULT +12 
d97 15
a111 15
.* TLS +GLOBAL DEFAULT +UND gd
.* TLS +GLOBAL DEFAULT +9 le0
.* TLS +GLOBAL DEFAULT +9 ld0
.* TLS +GLOBAL DEFAULT +9 le1
.* TLS +GLOBAL DEFAULT +UND ld
.* NOTYPE +GLOBAL DEFAULT +7 _start
.* NOTYPE +GLOBAL DEFAULT +ABS __end
.* TLS +GLOBAL DEFAULT +9 ld2
.* TLS +GLOBAL DEFAULT +9 ld1
.* NOTYPE +GLOBAL DEFAULT +ABS __bss_start
.* FUNC +GLOBAL DEFAULT +UND __tls_get_addr_opt
.* NOTYPE +GLOBAL DEFAULT +ABS _edata
.* NOTYPE +GLOBAL DEFAULT +ABS _end
.* TLS +GLOBAL DEFAULT +9 gd0
.* TLS +GLOBAL DEFAULT +9 ie0
@


1.15
log
@2007-09-29  Mike Frysinger  <vapier@@gentoo.org>

	* ld-alpha/tlsbin.rd: Use [0-9]+ to match section header count and
	0x[0-9a-f]+ to match section header offset.  Match section indexes
	with \[[ 0-9]+\].  Use [0-9]+ to match program header count and
	0x[0-9a-f]+ to match program header offset.  Match .dynsym and
	.symtab entry counts with [0-9]+.
	* ld-alpha/tlsbinr.rd: Likewise.
	* ld-alpha/tlspic.rd: Likewise.
	* ld-i386/tlsbin.rd: Likewise.
	* ld-i386/tlsbindesc.rd: Likewise.
	* ld-i386/tlsdesc.rd: Likewise.
	* ld-i386/tlsgdesc.rd: Likewise.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlspic.rd: Likewise.
	* ld-ia64/tlsbin.rd: Likewise.
	* ld-ia64/tlspic.rd: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-sparc/tlssunbin32.rd: Likewise.
	* ld-sparc/tlssunbin64.rd: Likewise.
	* ld-sparc/tlssunnopic32.rd: Likewise.
	* ld-sparc/tlssunnopic64.rd: Likewise.
	* ld-sparc/tlssunpic32.rd: Likewise.
	* ld-sparc/tlssunpic64.rd: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-x86-64/tlsbindesc.rd: Likewise.
	* ld-x86-64/tlsdesc.rd: Likewise.
	* ld-x86-64/tlsgdesc.rd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
@
text
@d60 1
a60 1
[0-9a-f ]+R_PPC_JMP_SLOT[0-9a-f ]+__tls_get_addr \+ 0
a65 1
.* FUNC +GLOBAL DEFAULT +UND __tls_get_addr
d69 1
a98 1
.* FUNC +GLOBAL DEFAULT +UND __tls_get_addr
d107 1
@


1.15.8.1
log
@include/elf/
	* ppc.h (DT_PPC_TLSOPT): Define.
	* ppc64.h (DT_PPC64_TLSOPT): Define.
bfd/
	* elf32-ppc.c (TLS_GET_ADDR_GLINK_SIZE): Define.
	(ADD_3_12_2, BEQLR, CMPWI_11_0, LWZ_11_3, LWZ_12_3): Define.
	(MR_0_3, MR_3_0): Define.
	(struct ppc_elf_link_hash_table): Add no_tls_get_addr_opt.
	(ppc_elf_select_plt_layout): Save emit_stub_syms param earlier.
	(ppc_elf_tls_setup): Add no_tls_get_addr_opt param and save to hash
	table.  Check for presense of __tls_get_addr_opt
	(allocate_dynrelocs): Increase glink entry size for __tls_get_addr.
	(ppc_elf_size_dynamic_sections): Add DT_PPC_TLS_OPT tag.
	(write_glink_stub): Add param p.
	(ppc_elf_relocate_section): Adjust write_glink_stub call.
	(ppc_elf_finish_dynamic_symbol): Emit special glink call stub for
	__tls_get_addr.
	* elf32-ppc.h (ppc_elf_tls_setup): Update prototype.
	* elf64-ppc.c (struct ppc_link_hash_table): Add no_tls_get_addr_opt.
	(ppc64_elf_tls_setup): Add no_tls_get_addr_opt param and save to hash
	table.  Check for presense of __tls_get_addr_opt.
	(ppc64_elf_size_dynamic_sections): Add DT_PPC64_TLS_OPT tag.
	(LD_R11_0R3, LD_R12_0R3, MR_R0_R3, CMPDI_R11_0, ADD_R3_R12_R13,
	BEQLR, MR_R3_R0, MFLR_R11, STD_R11_0R1, BCTRL, LD_R11_0R1,
	LD_R2_0R1, MTLR_R11): Define.
	(build_tls_get_addr_stub): New function.
	(ppc_build_one_stub): Call it.
	(ppc_size_one_stub): Add extra size for __tls_get_addr stub.
	(ppc64_elf_relocate_section): Don't change nop to ld 2,40(1) for
	__tls_get_addr plt call.
	* elf64-ppc.h (ppc64_elf_tls_setup): Update prototype.
binutils/
	* readelf.c (get_ppc_dynamic_type): Add TLSOPT.
	(get_ppc64_dynamic_type): Likewise.
ld/
	* emultempl/ppc32elf.em (no_tls_get_addr_opt): New var.
	(ppc_before_allocation): Pass to ppc_elf_tls_setup.
	(OPTION_NO_TLS_GET_ADDR_OPT): Define.  Redefine other options in
	terms of previous option.
	(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS): Add
	--no-tls-get-addr-optimize.
	(PARSE_AND_LIST_ARGS_CASES): Handle it.
	* emultempl/ppc64elf.em (no_tls_get_addr_opt): New var.
	(ppc_before_allocation): Pass to ppc64_elf_tls_setup.
	(OPTION_NO_TLS_GET_ADDR_OPT): Define.
	(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS): Add
	--no-tls-get-addr-optimize.
	(PARSE_AND_LIST_ARGS_CASES): Handle it.
ld/testsuite/
	* ld-powerpc/tlslib.s: Delete dot-symbol entry syms.  Add
	__tls_get_addr_opt.
	* ld-powerpc/tlslib32.s: Add __tls_get_addr_opt.
	* ld-powerpc/oldtlslib.s: New file, old-abi version of tlslib.s.
	* ld-powerpc/powerpc.exp: Build old-abi library and use it in
	two new link tests.
	* ld-powerpc/tlsexe.d: Update for new __tls_get_addr stub.
	* ld-powerpc/tlsexe.g, * ld-powerpc/tlsexe.r, *ld-powerpc/tlsexe32.d,
	* ld-powerpc/tlsexe32.g, * ld-powerpc/tlsexe32.r,
	* ld-powerpc/tlsexetoc.d, * ld-powerpc/tlsexetoc.g,
	* ld-powerpc/tlsexetoc.r: Likewise.
@
text
@d60 1
a60 1
[0-9a-f ]+R_PPC_JMP_SLOT[0-9a-f ]+__tls_get_addr_opt \+ 0
d66 1
a69 1
.* FUNC +GLOBAL DEFAULT +UND __tls_get_addr_opt
d99 1
a107 1
.* FUNC +GLOBAL DEFAULT +UND __tls_get_addr_opt
@


1.14
log
@bfd/
	PR ld/2723
	* elflink.c (bfd_elf_final_link): Don't output section symbols
	for special ELF sections.
ld/testsuite/
Update for removal of some section syms.
@
text
@d8 1
a8 1
There are 16 section headers.*
d12 16
a27 16
 +\[ 0\] +NULL +0+ 0+ 0+ 00 +0 +0 +0
 +\[ 1\] \.interp +.*
 +\[ 2\] \.hash +.*
 +\[ 3\] \.dynsym +.*
 +\[ 4\] \.dynstr +.*
 +\[ 5\] \.rela\.dyn +.*
 +\[ 6\] \.rela\.plt +.*
 +\[ 7\] \.text +PROGBITS +[0-9a-f]+ [0-9a-f]+ 000070 00 +AX +0 +0 +1
 +\[ 8\] \.tdata +PROGBITS +[0-9a-f]+ [0-9a-f]+ 00001c 00 WAT +0 +0 +4
 +\[ 9\] \.tbss +NOBITS +[0-9a-f]+ [0-9a-f]+ 00001c 00 WAT +0 +0 +4
 +\[10\] \.dynamic +DYNAMIC +[0-9a-f]+ [0-9a-f]+ [0-9a-f]+ 08 +WA +4 +0 +4
 +\[11\] \.got +PROGBITS +[0-9a-f]+ [0-9a-f]+ 00001c 04 WAX +0 +0 +4
 +\[12\] \.plt +NOBITS +.*
 +\[13\] \.shstrtab +STRTAB +.*
 +\[14\] \.symtab +SYMTAB +.*
 +\[15\] \.strtab +STRTAB +.*
d32 1
a32 1
There are 6 program headers, starting at offset 52
d73 1
a73 1
Symbol table '\.symtab' contains 37 entries:
@


1.13
log
@Updo the last change to binutils and ld/testsuite.
@
text
@d73 1
a73 1
Symbol table '\.symtab' contains 40 entries:
a87 3
.* SECTION LOCAL +DEFAULT +13 
.* SECTION LOCAL +DEFAULT +14 
.* SECTION LOCAL +DEFAULT +15 
@


1.12
log
@binutils/

2006-02-02  H.J. Lu  <hongjiu.lu@@intel.com>

	* readelf.c (process_program_headers): Undo the change made on
	2004-09-22.  Match PT_DYNAMIC segment only with SHT_DYNAMIC
	sections.

ld/testsuite/

2006-02-02  H.J. Lu  <hongjiu.lu@@intel.com>

	* ld-i386/tlsbin.rd: Update for changed segment map.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlspic.rd: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-sh/tlsbin-2.d: Likewise.
	* ld-sh/tlspic-2.d: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
@
text
@d49 1
a49 1
 +03 +\.tdata \.tbss \.dynamic \.got \.plt 
@


1.11
log
@bfd/
	* elf32-cris.c (elf_cris_adjust_gotplt_to_got): Move assert later.
	* elfxx-mips.c (_bfd_mips_elf_hide_symbol): Cope with being called
	without any got section.

ld/testsuite/
	* ld-alpha/tlsbin.rd: Update.
	* ld-alpha/tlsbinr.rd: Update.
	* ld-cris/locref1.d: Update.
	* ld-cris/locref2.d: Update.
	* ld-i386/tlsbin.rd: Update.
	* ld-ia64/tlsbin.rd: Update.
	* ld-powerpc/tlsexe.r: Update.
	* ld-powerpc/tlsexe32.r: Update.
	* ld-powerpc/tlsexetoc.r: Update.
	* ld-s390/tlsbin.rd: Update.
	* ld-s390/tlsbin_64.rd: Update.
	* ld-sparc/tlssunbin32.rd: Update.
	* ld-sparc/tlssunbin64.rd: Update.
	* ld-x86-64/tlsbin.rd: Update.
@
text
@d49 1
a49 1
 +03 +\.tdata \.dynamic \.got \.plt 
@


1.10
log
@Adjust for dynamic sym changes.
@
text
@d98 2
a99 1
.* OBJECT +GLOBAL HIDDEN +10 _DYNAMIC
a111 1
.* OBJECT +GLOBAL +HIDDEN +11 _GLOBAL_OFFSET_TABLE_
@


1.9
log
@bfd/
	* elf-bfd.h (struct elf_backend_data): Remove got_symbol_offset.
	* elfxx-target.h (elf_backend_got_symbol_offset): Delete.
	* elflink.c (_bfd_elf_create_got_section): Use zero in place of
	got_symbol_offset.
	* elf-m10300.c (_bfd_mn10300_elf_create_got_section): Likewise.
	* elf32-frv.c (_frv_create_got_section): Likewise.
	* elf32-i370.c (i370_elf_finish_dynamic_sections): Delete ppc code.
	(elf_backend_got_symbol_offset): Don't define.
	* elf64-ppc.c (elf_backend_got_symbol_offset): Don't define.
	* elf32-ppc.c (struct ppc_elf_link_hash_table): Add got_header_size
	and got_gap.
	(ppc_elf_create_got): Tidy.
	(ppc_elf_create_dynamic_sections): Don't set SEC_IN_MEMORY for .plt.
	(ppc_elf_check_relocs): Reduce string comparisons by using elf.hgot.
	(ppc_elf_gc_sweep_hook): Likewise.
	(ppc_elf_relocate_section): Likewise.
	(ppc_elf_finish_dynamic_symbol): Likewise.
	(allocate_got): New function.
	(allocate_dynrelocs): Use allocate_got.
	(ppc_elf_size_dynamic_sections): Likewise.  Delay tlsld_got allocation
	so that local got can refcount it.  Set got_header_size.
	(ppc_elf_relocate_section): Use value of elf.hgot rather than hard-
	coded 4.
	(ppc_elf_finish_dynamic_sections): Likewise.
	(elf_backend_got_symbol_offset): Don't define.
	(elf_backend_got_header_size): Ditto.
ld/testsuite/
	* ld-powerpc/tlsexe32.d: Update for changed got layout.
	* ld-powerpc/tlsexe32.g: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsso32.d: Likewise.
	* ld-powerpc/tlsso32.g: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
@
text
@d12 1
a12 1
 +\[ 0\] +NULL +00000000 000000 000000 00 +0 +0 +0
d19 5
a23 5
 +\[ 7\] \.text +PROGBITS +01800244 000244 000070 00 +AX +0 +0 +1
 +\[ 8\] \.tdata +PROGBITS +018102b4 0002b4 00001c 00 WAT +0 +0 +4
 +\[ 9\] \.tbss +NOBITS +018102d0 0002d0 00001c 00 WAT +0 +0 +4
 +\[10\] \.dynamic +DYNAMIC +018102d0 0002d0 0000a0 08 +WA +4 +0 +4
 +\[11\] \.got +PROGBITS +01810370 000370 00001c 04 WAX +0 +0 +4
d31 1
a31 1
Entry point 0x1800244
d39 4
a42 4
 +LOAD +0x000000 0x01800000 0x01800000 0x002b4 0x002b4 R E 0x10000
 +LOAD +0x0002b4 0x018102b4 0x018102b4 0x000d8 0x0012c RWE 0x10000
 +DYNAMIC +0x0002d0 0x018102d0 0x018102d0 0x000a0 0x000a0 RW +0x4
 +TLS +0x0002b4 0x018102b4 0x018102b4 0x0001c 0x00038 R +0x4
d53 1
a53 1
Relocation section '\.rela\.dyn' at offset 0x220 contains 2 entries:
d55 2
a56 2
01810370 +00000249 R_PPC_TPREL32 +00000000 +gd \+ 0
01810374 +00000444 R_PPC_DTPMOD32 +00000000 +ld \+ 0
d58 1
a58 1
Relocation section '\.rela\.plt' at offset 0x238 contains 1 entries:
d60 1
a60 1
018103d4 +00000315 R_PPC_JMP_SLOT +018103d4 +__tls_get_addr \+ 0
d62 1
a62 1
Symbol table '\.dynsym' contains 9 entries:
d64 8
a71 9
.*: 00000000 +0 NOTYPE +LOCAL +DEFAULT +UND 
.*: 018102d0 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
.*: 00000000 +0 TLS +GLOBAL DEFAULT +UND gd
.*: 018103d4 +0 FUNC +GLOBAL DEFAULT +UND __tls_get_addr
.*: 00000000 +0 TLS +GLOBAL DEFAULT +UND ld
.*: 018103e0 +0 NOTYPE +GLOBAL DEFAULT +ABS __end
.*: 0181038c +0 NOTYPE +GLOBAL DEFAULT +ABS __bss_start
.*: 0181038c +0 NOTYPE +GLOBAL DEFAULT +ABS _edata
.*: 018103e0 +0 NOTYPE +GLOBAL DEFAULT +ABS _end
d75 40
a114 40
.*: 00000000 +0 NOTYPE +LOCAL +DEFAULT +UND 
.*: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +1 
.*: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +2 
.*: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +3 
.*: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +4 
.*: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +5 
.*: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +6 
.*: 01800244 +0 SECTION LOCAL +DEFAULT +7 
.*: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +8 
.*: 018102d0 +0 SECTION LOCAL +DEFAULT +9 
.*: 018102d0 +0 SECTION LOCAL +DEFAULT +10 
.*: 01810370 +0 SECTION LOCAL +DEFAULT +11 
.*: 0181038c +0 SECTION LOCAL +DEFAULT +12 
.*: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +13 
.*: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +14 
.*: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +15 
.*: 00000000 +0 TLS +LOCAL +DEFAULT +8 gd4
.*: 00000004 +0 TLS +LOCAL +DEFAULT +8 ld4
.*: 00000008 +0 TLS +LOCAL +DEFAULT +8 ld5
.*: 0000000c +0 TLS +LOCAL +DEFAULT +8 ld6
.*: 00000010 +0 TLS +LOCAL +DEFAULT +8 ie4
.*: 00000014 +0 TLS +LOCAL +DEFAULT +8 le4
.*: 00000018 +0 TLS +LOCAL +DEFAULT +8 le5
.*: 018102d0 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
.*: 00000000 +0 TLS +GLOBAL DEFAULT +UND gd
.*: 00000030 +0 TLS +GLOBAL DEFAULT +9 le0
.*: [0-9a-f]+ +0 FUNC +GLOBAL DEFAULT +UND __tls_get_addr
.*: 00000020 +0 TLS +GLOBAL DEFAULT +9 ld0
.*: 00000034 +0 TLS +GLOBAL DEFAULT +9 le1
.*: 00000000 +0 TLS +GLOBAL DEFAULT +UND ld
.*: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +7 _start
.*: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS __end
.*: 00000028 +0 TLS +GLOBAL DEFAULT +9 ld2
.*: 00000024 +0 TLS +GLOBAL DEFAULT +9 ld1
.*: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS __bss_start
.*: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS _edata
.*: 01810380 +0 OBJECT +GLOBAL +HIDDEN +11 _GLOBAL_OFFSET_TABLE_
.*: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS _end
.*: 0000001c +0 TLS +GLOBAL DEFAULT +9 gd0
.*: 0000002c +0 TLS +GLOBAL DEFAULT +9 ie0
@


1.8
log
@bfd/
	* elf32-ppc.c (ppc_elf_add_symbol_hook): Make htab->sbss
	SEC_LINKER_CREATED.  Attach to dynobj.
	(ppc_elf_size_dynamic_sections): Strip htab->sbss if zero size.
ld/
	* scripttempl/elf.sc (SBSS): Don't provide sbss start and end syms.
ld/testsuite/
	* ld-powerpc/tlsexe32.r: Update.
	* ld-powerpc/tlsso32.d: Update.
	* ld-powerpc/tlsso32.g: Update.
	* ld-powerpc/tlsso32.r: Update.
@
text
@d55 2
a56 2
01810380 +00000249 R_PPC_TPREL32 +00000000 +gd \+ 0
01810384 +00000444 R_PPC_DTPMOD32 +00000000 +ld \+ 0
d112 1
a112 1
.*: 01810374 +0 OBJECT +GLOBAL +HIDDEN +11 _GLOBAL_OFFSET_TABLE_
@


1.7
log
@bfd/

2005-03-16  H.J. Lu  <hongjiu.lu@@intel.com>

	* elflink.c (elf_mark_used_section): New.
	(bfd_elf_gc_sections): Call elf_gc_mark_section for
	non-relocatable link if we don't do GC.

include/

2005-03-16  H.J. Lu  <hongjiu.lu@@intel.com>

	* bfdlink.h (bfd_link_info): Add gc_sections.

ld/

2005-03-16  H.J. Lu  <hongjiu.lu@@intel.com>

	* emultempl/elf32.em (gld${EMULATION_NAME}_finish): Remove
	unused empty output sections for non-relocatable link.

	* ld.h (args_type): Remove gc_sections.

	* ldlang.c (lang_mark_used_section): New.
	(lang_gc_sections): Use link_info.gc_sections instead of
	command_line.gc_sections.
	* ldmain.c (main): Likewise.
	* lexsup.c (parse_args): Likewise.
	* ldlang.c (lang_process): Call lang_mark_used_section.

	* ldmain.c (main): Initialize link_info.gc_sections to FALSE.

ld/testsuite/

2005-03-16  H.J. Lu  <hongjiu.lu@@intel.com>

	* ld-alpha/tlsbin.rd: Updated for empty section removal.
	* ld-alpha/tlsbinr.rd: Likewise.
	* ld-alpha/tlspic.rd: Likewise.
	* ld-arm/mixed-lib.sym: Likewise.
	* ld-i386/tlsbin.rd: Likewise.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlspic.rd: Likewise.
	* ld-ia64/tlsbin.rd: Likewise.
	* ld-ia64/tlspic.rd: Likewise.
	* ld-powerpc/apuinfo.rd: Likewise.
	* ld-powerpc/powerpc.exp: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-sh/tlsbin-2.d: Likewise.
	* ld-sh/tlspic-2.d: Likewise.
	* ld-sparc/tlssunbin32.rd: Likewise.
	* ld-sparc/tlssunnopic32.rd: Likewise.
	* ld-sparc/tlssunpic32.rd: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
@
text
@d8 1
a8 1
There are 18 section headers.*
d20 8
a27 10
 +\[ 8\] \.sdata2 +PROGBITS +.*
 +\[ 9\] \.tdata +PROGBITS +018102b4 0002b4 00001c 00 WAT +0 +0 +4
 +\[10\] \.tbss +NOBITS +018102d0 0002d0 00001c 00 WAT +0 +0 +4
 +\[11\] \.dynamic +DYNAMIC +018102d0 0002d0 0000a0 08 +WA +4 +0 +4
 +\[12\] \.got +PROGBITS +01810370 000370 00001c 04 WAX +0 +0 +4
 +\[13\] \.sdata +PROGBITS +0181038c 00038c 000000 00 +WA +0 +0 +4
 +\[14\] \.plt +NOBITS +.*
 +\[15\] \.shstrtab +STRTAB +.*
 +\[16\] \.symtab +SYMTAB +.*
 +\[17\] \.strtab +STRTAB +.*
d64 9
a72 9
 +0: 00000000 +0 NOTYPE +LOCAL +DEFAULT +UND 
 +1: 018102d0 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
 +2: 00000000 +0 TLS +GLOBAL DEFAULT +UND gd
 +3: 018103d4 +0 FUNC +GLOBAL DEFAULT +UND __tls_get_addr
 +4: 00000000 +0 TLS +GLOBAL DEFAULT +UND ld
 +5: 018103e0 +0 NOTYPE +GLOBAL DEFAULT +ABS __end
 +6: 0181038c +0 NOTYPE +GLOBAL DEFAULT +ABS __bss_start
 +7: 0181038c +0 NOTYPE +GLOBAL DEFAULT +ABS _edata
 +8: 018103e0 +0 NOTYPE +GLOBAL DEFAULT +ABS _end
d74 1
a74 1
Symbol table '\.symtab' contains 44 entries:
d76 40
a115 44
 +[0-9]+: 00000000 +0 NOTYPE +LOCAL +DEFAULT +UND 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +1 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +2 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +3 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +4 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +5 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +6 
 +[0-9]+: 01800244 +0 SECTION LOCAL +DEFAULT +7 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +8 
 +[0-9]+: 018102b4 +0 SECTION LOCAL +DEFAULT +9 
 +[0-9]+: 018102d0 +0 SECTION LOCAL +DEFAULT +10 
 +[0-9]+: 018102d0 +0 SECTION LOCAL +DEFAULT +11 
 +[0-9]+: 01810370 +0 SECTION LOCAL +DEFAULT +12 
 +[0-9]+: 0181038c +0 SECTION LOCAL +DEFAULT +13 
 +[0-9]+: 0181038c +0 SECTION LOCAL +DEFAULT +14 
 +[0-9]+: 00000000 +0 SECTION LOCAL +DEFAULT +15 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +16 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +17 
 +[0-9]+: 00000000 +0 TLS +LOCAL +DEFAULT +9 gd4
 +[0-9]+: 00000004 +0 TLS +LOCAL +DEFAULT +9 ld4
 +[0-9]+: 00000008 +0 TLS +LOCAL +DEFAULT +9 ld5
 +[0-9]+: 0000000c +0 TLS +LOCAL +DEFAULT +9 ld6
 +[0-9]+: 00000010 +0 TLS +LOCAL +DEFAULT +9 ie4
 +[0-9]+: 00000014 +0 TLS +LOCAL +DEFAULT +9 le4
 +[0-9]+: 00000018 +0 TLS +LOCAL +DEFAULT +9 le5
 +[0-9]+: 018102d0 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
 +[0-9]+: 00000000 +0 TLS +GLOBAL DEFAULT +UND gd
 +[0-9]+: 00000030 +0 TLS +GLOBAL DEFAULT +10 le0
 +[0-9]+: [0-9a-f]+ +0 FUNC +GLOBAL DEFAULT +UND __tls_get_addr
 +[0-9]+: 00000020 +0 TLS +GLOBAL DEFAULT +10 ld0
 +[0-9]+: 00000034 +0 TLS +GLOBAL DEFAULT +10 le1
 +[0-9]+: 00000000 +0 TLS +GLOBAL DEFAULT +UND ld
 +[0-9]+: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +7 _start
 +[0-9]+: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS __end
 +[0-9]+: [0-9a-f]+ +0 OBJECT +GLOBAL DEFAULT +13 _SDA_BASE_
 +[0-9]+: 00000028 +0 TLS +GLOBAL DEFAULT +10 ld2
 +[0-9]+: 00000024 +0 TLS +GLOBAL DEFAULT +10 ld1
 +[0-9]+: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS __bss_start
 +[0-9]+: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS _edata
 +[0-9]+: 01810374 +0 OBJECT +GLOBAL +HIDDEN +12 _GLOBAL_OFFSET_TABLE_
 +[0-9]+: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS _end
 +[0-9]+: 0000001c +0 TLS +GLOBAL DEFAULT +10 gd0
 +[0-9]+: 0000002c +0 TLS +GLOBAL DEFAULT +10 ie0
 +[0-9]+: [0-9a-f]+ +0 OBJECT +GLOBAL DEFAULT +8 _SDA2_BASE_
@


1.6
log
@bfd/
	* elf32-ppc.c (ppc_elf_create_linker_section): Set SEC_LINKER_CREATED
	on section.  Correct comment, and add FIXME.
	(ppc_elf_additional_program_headers): Don't bump header count for
	interp.  Test SEC_ALLOC, not SEC_LOAD, and don't test size.
	(ppc_elf_size_dynamic_sections): Don't strip sdata and sdata2, but
	do allocate memory if they need it.
ld/
	* emulparams/elf32ppclinux.sh (OTHER_READWRITE_SECTION): Delete.
	(OTHER_RELRO_SECTIONS): Set this instead.
ld/testsuite/
	* ld-powerpc/tlsexe32.d: Update.
	* ld-powerpc/tlsexe32.g: Update.
	* ld-powerpc/tlsexe32.r: Update.
	* ld-powerpc/tlsexe32.t: Update.
	* ld-powerpc/tlsso32.d: Update.
	* ld-powerpc/tlsso32.g: Update.
	* ld-powerpc/tlsso32.r: Update.
	* ld-powerpc/tlsso32.t: Update.
@
text
@d8 1
a8 1
There are 21 section headers.*
d24 6
a29 9
 +\[12\] \.data +PROGBITS +01810370 000370 000000 00 +WA +0 +0 +1
 +\[13\] \.got +PROGBITS +01810370 000370 00001c 04 WAX +0 +0 +4
 +\[14\] \.sdata +PROGBITS +0181038c 00038c 000000 00 +WA +0 +0 +4
 +\[15\] \.sbss +NOBITS +0181038c 00038c 000000 00 +WA +0 +0 +1
 +\[16\] \.plt +NOBITS +.*
 +\[17\] \.bss +NOBITS +.*
 +\[18\] \.shstrtab +STRTAB +.*
 +\[19\] \.symtab +SYMTAB +.*
 +\[20\] \.strtab +STRTAB +.*
d76 1
a76 1
Symbol table '\.symtab' contains 47 entries:
d78 44
a121 47
 +0: 00000000 +0 NOTYPE +LOCAL +DEFAULT +UND 
 +1: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +1 
 +2: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +2 
 +3: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +3 
 +4: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +4 
 +5: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +5 
 +6: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +6 
 +7: 01800244 +0 SECTION LOCAL +DEFAULT +7 
 +8: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +8 
 +9: 018102b4 +0 SECTION LOCAL +DEFAULT +9 
 +10: 018102d0 +0 SECTION LOCAL +DEFAULT +10 
 +11: 018102d0 +0 SECTION LOCAL +DEFAULT +11 
 +12: 01810370 +0 SECTION LOCAL +DEFAULT +12 
 +13: 01810370 +0 SECTION LOCAL +DEFAULT +13 
 +14: 0181038c +0 SECTION LOCAL +DEFAULT +14 
 +15: 0181038c +0 SECTION LOCAL +DEFAULT +15 
 +16: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +16 
 +17: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +17 
 +18: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +18 
 +19: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +19 
 +20: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +20 
 +21: 00000000 +0 TLS +LOCAL +DEFAULT +9 gd4
 +22: 00000004 +0 TLS +LOCAL +DEFAULT +9 ld4
 +23: 00000008 +0 TLS +LOCAL +DEFAULT +9 ld5
 +24: 0000000c +0 TLS +LOCAL +DEFAULT +9 ld6
 +25: 00000010 +0 TLS +LOCAL +DEFAULT +9 ie4
 +26: 00000014 +0 TLS +LOCAL +DEFAULT +9 le4
 +27: 00000018 +0 TLS +LOCAL +DEFAULT +9 le5
 +28: 018102d0 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
 +29: 00000000 +0 TLS +GLOBAL DEFAULT +UND gd
 +30: 00000030 +0 TLS +GLOBAL DEFAULT +10 le0
 +31: [0-9a-f]+ +0 FUNC +GLOBAL DEFAULT +UND __tls_get_addr
 +32: 00000020 +0 TLS +GLOBAL DEFAULT +10 ld0
 +33: 00000034 +0 TLS +GLOBAL DEFAULT +10 le1
 +34: 00000000 +0 TLS +GLOBAL DEFAULT +UND ld
 +35: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +7 _start
 +36: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS __end
 +37: [0-9a-f]+ +0 OBJECT +GLOBAL DEFAULT +14 _SDA_BASE_
 +38: 00000028 +0 TLS +GLOBAL DEFAULT +10 ld2
 +39: 00000024 +0 TLS +GLOBAL DEFAULT +10 ld1
 +40: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS __bss_start
 +41: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS _edata
 +42: 01810374 +0 OBJECT +GLOBAL +HIDDEN +13 _GLOBAL_OFFSET_TABLE_
 +43: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS _end
 +44: 0000001c +0 TLS +GLOBAL DEFAULT +10 gd0
 +45: 0000002c +0 TLS +GLOBAL DEFAULT +10 ie0
 +46: [0-9a-f]+ +0 OBJECT +GLOBAL DEFAULT +8 _SDA2_BASE_
@


1.5
log
@	* ld-cris/expdyn1.d, ld-cris/expdyn5.d, ld-cris/expdyn6.d,
	ld-cris/expdyn7.d, ld-cris/gotplt1.d, ld-cris/gotplt2.d,
	ld-cris/gotplt3.d, ld-cris/hiddef1.d, ld-cris/libdso-2.d,
	ld-cris/locref1.d, ld-cris/locref2.d, ld-cris/weakref2.d,
	ld-i386/tlsbin.rd, ld-i386/tlsnopic.rd, ld-i386/tlspic.rd,
	ld-ia64/tlsbin.dd, ld-ia64/tlsbin.rd, ld-ia64/tlspic.dd,
	ld-ia64/tlspic.rd, ld-powerpc/tlsexe32.d, ld-powerpc/tlsexe32.g,
	ld-powerpc/tlsexe32.r, ld-powerpc/tlsexe32.t,
	ld-powerpc/tlsso32.d, ld-powerpc/tlsso32.g, ld-powerpc/tlsso32.r,
	ld-powerpc/tlsso32.t, ld-s390/tlsbin.dd, ld-s390/tlsbin.rd,
	ld-s390/tlspic.rd, ld-sparc/tlssunbin32.rd,
	ld-sparc/tlssunpic32.rd, ld-x86-64/tlsbin.rd, ld-x86-64/tlspic.dd,
	ld-x86-64/tlspic.rd: Adjust for _GLOBAL_OFFSET_TABLE_ now hidden.
@
text
@d19 1
a19 1
 +\[ 7\] \.text +PROGBITS +01800264 000264 000070 00 +AX +0 +0 +1
d21 7
a27 7
 +\[ 9\] \.tdata +PROGBITS +018102d4 0002d4 00001c 00 WAT +0 +0 +4
 +\[10\] \.tbss +NOBITS +018102f0 0002f0 00001c 00 WAT +0 +0 +4
 +\[11\] \.dynamic +DYNAMIC +018102f0 0002f0 0000a0 08 +WA +4 +0 +4
 +\[12\] \.data +PROGBITS +01810390 000390 000000 00 +WA +0 +0 +1
 +\[13\] \.got +PROGBITS +01810390 000390 00001c 04 WAX +0 +0 +4
 +\[14\] \.sdata +PROGBITS +018103ac 0003ac 000000 00 +WA +0 +0 +4
 +\[15\] \.sbss +NOBITS +018103ac 0003ac 000000 00 +WA +0 +0 +1
d36 1
a36 1
Entry point 0x1800264
d41 2
a42 2
 +PHDR +0x000034 0x01800034 0x01800034 0x000e0 0x000e0 R E 0x4
 +INTERP +0x000114 0x01800114 0x01800114 0x00011 0x00011 R +0x1
d44 4
a47 4
 +LOAD +0x000000 0x01800000 0x01800000 0x002d4 0x002d4 R E 0x10000
 +LOAD +0x0002d4 0x018102d4 0x018102d4 0x000d8 0x0012c RWE 0x10000
 +DYNAMIC +0x0002f0 0x018102f0 0x018102f0 0x000a0 0x000a0 RW +0x4
 +TLS +0x0002d4 0x018102d4 0x018102d4 0x0001c 0x00038 R +0x4
d58 1
a58 1
Relocation section '\.rela\.dyn' at offset 0x240 contains 2 entries:
d60 2
a61 2
018103a0 +00000249 R_PPC_TPREL32 +00000000 +gd \+ 0
018103a4 +00000444 R_PPC_DTPMOD32 +00000000 +ld \+ 0
d63 1
a63 1
Relocation section '\.rela\.plt' at offset 0x258 contains 1 entries:
d65 1
a65 1
018103f4 +00000315 R_PPC_JMP_SLOT +018103f4 +__tls_get_addr \+ 0
d70 1
a70 1
 +1: 018102f0 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
d72 1
a72 1
 +3: 018103f4 +0 FUNC +GLOBAL DEFAULT +UND __tls_get_addr
d74 4
a77 4
 +5: 01810400 +0 NOTYPE +GLOBAL DEFAULT +ABS __end
 +6: 018103ac +0 NOTYPE +GLOBAL DEFAULT +ABS __bss_start
 +7: 018103ac +0 NOTYPE +GLOBAL DEFAULT +ABS _edata
 +8: 01810400 +0 NOTYPE +GLOBAL DEFAULT +ABS _end
d88 1
a88 1
 +7: 01800264 +0 SECTION LOCAL +DEFAULT +7 
d90 7
a96 7
 +9: 018102d4 +0 SECTION LOCAL +DEFAULT +9 
 +10: 018102f0 +0 SECTION LOCAL +DEFAULT +10 
 +11: 018102f0 +0 SECTION LOCAL +DEFAULT +11 
 +12: 01810390 +0 SECTION LOCAL +DEFAULT +12 
 +13: 01810390 +0 SECTION LOCAL +DEFAULT +13 
 +14: 018103ac +0 SECTION LOCAL +DEFAULT +14 
 +15: 018103ac +0 SECTION LOCAL +DEFAULT +15 
d109 1
a109 1
 +28: 018102f0 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
d123 1
a123 1
 +42: 01810394 +0 OBJECT +GLOBAL +HIDDEN +13 _GLOBAL_OFFSET_TABLE_
@


1.5.2.1
log
@bfd/
	* elf32-ppc.c (ppc_elf_create_linker_section): Set SEC_LINKER_CREATED
	on section.  Correct comment, and add FIXME.
	(ppc_elf_additional_program_headers): Don't bump header count for
	interp.  Test SEC_ALLOC, not SEC_LOAD, and don't test size.
	(ppc_elf_size_dynamic_sections): Don't strip sdata and sdata2, but
	do allocate memory if they need it.
ld/
	* emulparams/elf32ppclinux.sh (OTHER_READWRITE_SECTION): Delete.
	(OTHER_RELRO_SECTIONS): Set this instead.
ld/testsuite/
	* ld-powerpc/tlsexe32.d: Update.
	* ld-powerpc/tlsexe32.g: Update.
	* ld-powerpc/tlsexe32.r: Update.
	* ld-powerpc/tlsexe32.t: Update.
	* ld-powerpc/tlsso32.d: Update.
	* ld-powerpc/tlsso32.g: Update.
	* ld-powerpc/tlsso32.r: Update.
	* ld-powerpc/tlsso32.t: Update.
@
text
@d19 1
a19 1
 +\[ 7\] \.text +PROGBITS +01800244 000244 000070 00 +AX +0 +0 +1
d21 7
a27 7
 +\[ 9\] \.tdata +PROGBITS +018102b4 0002b4 00001c 00 WAT +0 +0 +4
 +\[10\] \.tbss +NOBITS +018102d0 0002d0 00001c 00 WAT +0 +0 +4
 +\[11\] \.dynamic +DYNAMIC +018102d0 0002d0 0000a0 08 +WA +4 +0 +4
 +\[12\] \.data +PROGBITS +01810370 000370 000000 00 +WA +0 +0 +1
 +\[13\] \.got +PROGBITS +01810370 000370 00001c 04 WAX +0 +0 +4
 +\[14\] \.sdata +PROGBITS +0181038c 00038c 000000 00 +WA +0 +0 +4
 +\[15\] \.sbss +NOBITS +0181038c 00038c 000000 00 +WA +0 +0 +1
d36 1
a36 1
Entry point 0x1800244
d41 2
a42 2
 +PHDR +0x000034 0x01800034 0x01800034 0x000c0 0x000c0 R E 0x4
 +INTERP +0x0000f4 0x018000f4 0x018000f4 0x00011 0x00011 R +0x1
d44 4
a47 4
 +LOAD +0x000000 0x01800000 0x01800000 0x002b4 0x002b4 R E 0x10000
 +LOAD +0x0002b4 0x018102b4 0x018102b4 0x000d8 0x0012c RWE 0x10000
 +DYNAMIC +0x0002d0 0x018102d0 0x018102d0 0x000a0 0x000a0 RW +0x4
 +TLS +0x0002b4 0x018102b4 0x018102b4 0x0001c 0x00038 R +0x4
d58 1
a58 1
Relocation section '\.rela\.dyn' at offset 0x220 contains 2 entries:
d60 2
a61 2
01810380 +00000249 R_PPC_TPREL32 +00000000 +gd \+ 0
01810384 +00000444 R_PPC_DTPMOD32 +00000000 +ld \+ 0
d63 1
a63 1
Relocation section '\.rela\.plt' at offset 0x238 contains 1 entries:
d65 1
a65 1
018103d4 +00000315 R_PPC_JMP_SLOT +018103d4 +__tls_get_addr \+ 0
d70 1
a70 1
 +1: 018102d0 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
d72 1
a72 1
 +3: 018103d4 +0 FUNC +GLOBAL DEFAULT +UND __tls_get_addr
d74 4
a77 4
 +5: 018103e0 +0 NOTYPE +GLOBAL DEFAULT +ABS __end
 +6: 0181038c +0 NOTYPE +GLOBAL DEFAULT +ABS __bss_start
 +7: 0181038c +0 NOTYPE +GLOBAL DEFAULT +ABS _edata
 +8: 018103e0 +0 NOTYPE +GLOBAL DEFAULT +ABS _end
d88 1
a88 1
 +7: 01800244 +0 SECTION LOCAL +DEFAULT +7 
d90 7
a96 7
 +9: 018102b4 +0 SECTION LOCAL +DEFAULT +9 
 +10: 018102d0 +0 SECTION LOCAL +DEFAULT +10 
 +11: 018102d0 +0 SECTION LOCAL +DEFAULT +11 
 +12: 01810370 +0 SECTION LOCAL +DEFAULT +12 
 +13: 01810370 +0 SECTION LOCAL +DEFAULT +13 
 +14: 0181038c +0 SECTION LOCAL +DEFAULT +14 
 +15: 0181038c +0 SECTION LOCAL +DEFAULT +15 
d109 1
a109 1
 +28: 018102d0 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
d123 1
a123 1
 +42: 01810374 +0 OBJECT +GLOBAL +HIDDEN +13 _GLOBAL_OFFSET_TABLE_
@


1.4
log
@binutils/
	* readelf.c (process_program_headers): Don't include .tbss in non-TLS
	segments.

ld/testsuite/
	* ld-i386/tlsbin.rd: Update for changed segment map.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlspic.rd: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-sh/tlsbin-2.d: Likewise.
	* ld-sh/tlspic-2.d: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
@
text
@d19 1
a19 1
 +\[ 7\] \.text +PROGBITS +0180028c 00028c 000070 00 +AX +0 +0 +1
d21 7
a27 7
 +\[ 9\] \.tdata +PROGBITS +018102fc 0002fc 00001c 00 WAT +0 +0 +4
 +\[10\] \.tbss +NOBITS +01810318 000318 00001c 00 WAT +0 +0 +4
 +\[11\] \.dynamic +DYNAMIC +01810318 000318 0000a0 08 +WA +4 +0 +4
 +\[12\] \.data +PROGBITS +018103b8 0003b8 000000 00 +WA +0 +0 +1
 +\[13\] \.got +PROGBITS +018103b8 0003b8 00001c 04 WAX +0 +0 +4
 +\[14\] \.sdata +PROGBITS +018103d4 0003d4 000000 00 +WA +0 +0 +4
 +\[15\] \.sbss +NOBITS +018103d4 0003d4 000000 00 +WA +0 +0 +1
d36 1
a36 1
Entry point 0x180028c
d44 4
a47 4
 +LOAD +0x000000 0x01800000 0x01800000 0x002fc 0x002fc R E 0x10000
 +LOAD +0x0002fc 0x018102fc 0x018102fc 0x000d8 0x0012c RWE 0x10000
 +DYNAMIC +0x000318 0x01810318 0x01810318 0x000a0 0x000a0 RW +0x4
 +TLS +0x0002fc 0x018102fc 0x018102fc 0x0001c 0x00038 R +0x4
d58 1
a58 1
Relocation section '\.rela\.dyn' at offset 0x268 contains 2 entries:
d60 2
a61 2
018103c8 +00000249 R_PPC_TPREL32 +00000000 +gd \+ 0
018103cc +00000444 R_PPC_DTPMOD32 +00000000 +ld \+ 0
d63 1
a63 1
Relocation section '\.rela\.plt' at offset 0x280 contains 1 entries:
d65 1
a65 1
0181041c +00000315 R_PPC_JMP_SLOT +0181041c +__tls_get_addr \+ 0
d67 1
a67 1
Symbol table '\.dynsym' contains 10 entries:
d70 1
a70 1
 +1: 01810318 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
d72 1
a72 1
 +3: 0181041c +0 FUNC +GLOBAL DEFAULT +UND __tls_get_addr
d74 4
a77 5
 +5: 01810428 +0 NOTYPE +GLOBAL DEFAULT +ABS __end
 +6: 018103d4 +0 NOTYPE +GLOBAL DEFAULT +ABS __bss_start
 +7: 018103d4 +0 NOTYPE +GLOBAL DEFAULT +ABS _edata
 +8: 018103bc +0 OBJECT +GLOBAL DEFAULT +ABS _GLOBAL_OFFSET_TABLE_
 +9: 01810428 +0 NOTYPE +GLOBAL DEFAULT +ABS _end
d88 1
a88 1
 +7: 0180028c +0 SECTION LOCAL +DEFAULT +7 
d90 7
a96 7
 +9: 018102fc +0 SECTION LOCAL +DEFAULT +9 
 +10: 01810318 +0 SECTION LOCAL +DEFAULT +10 
 +11: 01810318 +0 SECTION LOCAL +DEFAULT +11 
 +12: 018103b8 +0 SECTION LOCAL +DEFAULT +12 
 +13: 018103b8 +0 SECTION LOCAL +DEFAULT +13 
 +14: 018103d4 +0 SECTION LOCAL +DEFAULT +14 
 +15: 018103d4 +0 SECTION LOCAL +DEFAULT +15 
d109 1
a109 1
 +28: 01810318 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
d123 1
a123 1
 +42: 018103bc +0 OBJECT +GLOBAL DEFAULT +ABS _GLOBAL_OFFSET_TABLE_
@


1.3
log
@bfd/
	* elflink.c (elf_bfd_final_link): Don't output STT_SECTION symbol
	into .dynsym if elf_section_data (sec)->dynindx <= 0.
	Adjust counting of last_local.
	(_bfd_elf_link_renumber_dynsyms): Don't assign dynindx to sections
	other than SHT_PROGBITS/SHT_NOBITS and neither for .got/.got.plt/.plt
	created by the linker nor !SHF_ALLOC.

	* elf32-i386.c (elf_i386_finish_dynamic_sections): Point
	DT_PLTGOT to the start of the .got.plt section instead of the
	.got output section.  Set sh_entsize for .got section in addition
	to .got.plt.
	(elf_i386_relocate_section): Don't assume _GLOBAL_OFFSET_TABLE_
	is at sgot->output_section->vma.
	* elf64-x86-64.c (elf64_x86_64_finish_dynamic_sections): Point
	DT_PLTGOT to the start of the .got.plt section instead of the
	.got output section.
	(elf64_x86_64_relocate_section): Don't assume _GLOBAL_OFFSET_TABLE_
	is at sgot->output_section->vma.  Set sh_entsize for .got section
	in addition to .got.plt.
	* elf.c (_bfd_elf_print_private_bfd_data): Handle PT_GNU_RELRO.
	(bfd_section_from_phdr): Likewise.
	(map_sections_to_segments): Likewise.
	(assign_file_positions_for_segments): Likewise.
	(get_program_header_size): Likewise.
	* elflink.c (bfd_elf_size_dynamic_sections): Set
	elf_tdata (output_bfd)->relro from info->relro.
	* elf-bfd.h (struct elf_obj_tdata): Add relro field.
include/
	* bfdlink.h (struct bfd_link_info): Add relro, relro_start and
	relro_end fields.
	* elf/common.h (PT_GNU_EH_FRAME, PT_GNU_STACK): Add comments.
	(PT_GNU_RELRO): Define.
binutils/
	* readelf.c (get_segment_type): Handle PT_GNU_RELRO.
ld/
	* genscripts.sh: Generate -z combreloc -z now -z relro scripts
	for binaries, -shared and -pie.
	* emulparams/elf_i386.sh (SEPARATE_GOTPLT): Set.
	* emulparams/elf_x86_64.sh (SEPARATE_GOTPLT): Set.
	* emulparams/elf32ppc.sh (OTHER_READWRITE_SECTIONS): Rename to...
	(OTHER_RELRO_SECTIONS): ... this.
	* ldlex.l (DATA_SEGMENT_RELRO_END): Add.
	* emultempl/elf32.em (gld${EMULATION_NAME}_handle_option): Handle
	-z relro and -z norelro.
	(gld${EMULATION_NAME}_list_options): Add it to usage.
	(gld${EMULATION_NAME}_get_script): Return -z combreloc -z now
	-z relro scripts when appropriate.
	* scripttempl/elf.sc: Unset SEPARATE_GOTPLT if RELRO_NOW is set.
	Create separate .got.plt section if SEPARATE_GOTPLT.
	Move sections which are only written during relocation handling
	to the beginning of RW segment.  If NO_SMALL_DATA, move .got
	before .data.  Add DATA_SEGMENT_RELRO_END directive.
	Include OTHER_RELRO_SECTIONS.
	* ldgram.y (DATA_SEGMENT_RELRO_END): Add.
	* ldexp.c (exp_print_token): Handle DATA_SEGMENT_RELRO_END.
	(fold_unary): Likewise.
	(fold_binary): Handle -z relro.
	* ldexp.h (struct exp_data_seg): Add exp_dataseg_relro_seen and
	exp_dataseg_relro_adjust phases.  Add relro_end field.
	* ldmain.c (main): Initialize link_info.relro to FALSE.
	* ldlang.c (lang_size_sections): Handle -z relro.
ld/testsuite/
	* ld-i386/tlspic.rd: Adjust for section reordering changes
	and removal of unneeded STT_SECTION symbols from .dynsym.
	* ld-i386/tlspic.dd: Likewise.
	* ld-i386/tlspic.sd: Likewise.
	* ld-i386/tlsbin.rd: Likewise.
	* ld-i386/tlsbinpic.s: Likewise.
	* ld-i386/tlsbin.dd: Likewise.
	* ld-i386/tlsbin.sd: Likewise.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlsnopic1.s: Likewise.
	* ld-i386/combreloc.d: Likewise.
	* ld-i386/tlsnopic.dd: Likewise.
	* ld-i386/tlsnopic.sd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
	* ld-x86-64/tlspic.dd: Likewise.
	* ld-x86-64/tlsbin.dd: Likewise.
	* ld-x86-64/tlspic.sd: Likewise.
	* ld-x86-64/tlsbin.sd: Likewise.
	* ld-x86-64/tlspic.td: Likewise.
	* ld-x86-64/tlsbin.td: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-s390/tlspic1.s: Likewise.
	* ld-s390/tlsbinpic.s: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlspic.dd: Likewise.
	* ld-s390/tlsbin.dd: Likewise.
	* ld-s390/tlsbin.sd: Likewise.
	* ld-s390/tlsbin.td: Likewise.
	* ld-s390/tlspic.sd: Likewise.
	* ld-s390/tlspic.td: Likewise.
	* ld-s390/tlspic1_64.s: Likewise.
	* ld-s390/tlsbinpic_64.s: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlspic_64.dd: Likewise.
	* ld-s390/tlsbin_64.dd: Likewise.
	* ld-s390/tlspic_64.sd: Likewise.
	* ld-s390/tlspic_64.td: Likewise.
	* ld-s390/tlsbin_64.td: Likewise.
	* ld-s390/tlsbin_64.sd: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlsso32.d: Likewise.
	* ld-powerpc/tlsso32.g: Likewise.
	* ld-powerpc/tlsso32.t: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso.g: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
	* ld-powerpc/tlstocso.g: Likewise.
	* ld-ia64/tlspic.rd: Likewise.
	* ld-ia64/tlspic.dd: Likewise.
	* ld-ia64/tlspic.sd: Likewise.
	* ld-ia64/tlspic.td: Likewise.
	* ld-ia64/tlsbin.rd: Likewise.
	* ld-ia64/tlsbin.sd: Likewise.
	* ld-ia64/tlsbin.td: Likewise.
	* ld-elfvsb/elfvsb.exp: XFAIL non-PIC load offset tests on s390x.
	* ld-shared/shared.exp: Likewise.
@
text
@d54 2
a55 2
 +03 +\.tdata \.tbss \.dynamic \.got \.plt 
 +04 +\.tbss \.dynamic 
@


1.2
log
@	* ld-powerpc/tlsexe.r: Update sh_info to decimal.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
@
text
@d13 6
a18 6
 +\[ 1\] \.interp +PROGBITS +01800114 000114 000011 00 +A +0 +0 +1
 +\[ 2\] \.hash +HASH +01800128 000128 00003c 04 +A +3 +0 +4
 +\[ 3\] \.dynsym +DYNSYM +01800164 000164 0000a0 10 +A +4 +1 +4
 +\[ 4\] \.dynstr +STRTAB +01800204 000204 000064 00 +A +0 +0 +1
 +\[ 5\] \.rela\.dyn +RELA +01800268 000268 000018 0c +A +3 +0 +4
 +\[ 6\] \.rela\.plt +RELA +01800280 000280 00000c 0c +A +3 +16 +4
d20 5
a24 5
 +\[ 8\] \.sdata2 +PROGBITS +018002fc 0002fc 000000 00 +A +0 +0 +4
 +\[ 9\] \.data +PROGBITS +018102fc 0002fc 000000 00 +WA +0 +0 +1
 +\[10\] \.tdata +PROGBITS +018102fc 0002fc 00001c 00 WAT +0 +0 +4
 +\[11\] \.tbss +NOBITS +01810318 000318 00001c 00 WAT +0 +0 +4
 +\[12\] \.dynamic +DYNAMIC +01810318 000318 0000a0 08 +WA +4 +0 +4
d28 5
a32 5
 +\[16\] \.plt +NOBITS +018103d4 0003d4 000054 00 WAX +0 +0 +4
 +\[17\] \.bss +NOBITS +01810428 0003d4 000000 00 +WA +0 +0 +1
 +\[18\] \.shstrtab +STRTAB +00000000 0003d4 00008e 00 +0 +0 +1
 +\[19\] \.symtab +SYMTAB +00000000 0007ac 0002f0 10 +20 +28 +4
 +\[20\] \.strtab +STRTAB +00000000 000a9c 0000a9 00 +0 +0 +1
d83 6
a88 6
 +1: 01800114 +0 SECTION LOCAL +DEFAULT +1 
 +2: 01800128 +0 SECTION LOCAL +DEFAULT +2 
 +3: 01800164 +0 SECTION LOCAL +DEFAULT +3 
 +4: 01800204 +0 SECTION LOCAL +DEFAULT +4 
 +5: 01800268 +0 SECTION LOCAL +DEFAULT +5 
 +6: 01800280 +0 SECTION LOCAL +DEFAULT +6 
d90 1
a90 1
 +8: 018002fc +0 SECTION LOCAL +DEFAULT +8 
d92 1
a92 1
 +10: 018102fc +0 SECTION LOCAL +DEFAULT +10 
d94 1
a94 1
 +12: 01810318 +0 SECTION LOCAL +DEFAULT +12 
d98 12
a109 12
 +16: 018103d4 +0 SECTION LOCAL +DEFAULT +16 
 +17: 01810428 +0 SECTION LOCAL +DEFAULT +17 
 +18: 00000000 +0 SECTION LOCAL +DEFAULT +18 
 +19: 00000000 +0 SECTION LOCAL +DEFAULT +19 
 +20: 00000000 +0 SECTION LOCAL +DEFAULT +20 
 +21: 00000000 +0 TLS +LOCAL +DEFAULT +10 gd4
 +22: 00000004 +0 TLS +LOCAL +DEFAULT +10 ld4
 +23: 00000008 +0 TLS +LOCAL +DEFAULT +10 ld5
 +24: 0000000c +0 TLS +LOCAL +DEFAULT +10 ld6
 +25: 00000010 +0 TLS +LOCAL +DEFAULT +10 ie4
 +26: 00000014 +0 TLS +LOCAL +DEFAULT +10 le4
 +27: 00000018 +0 TLS +LOCAL +DEFAULT +10 le5
d112 4
a115 4
 +30: 00000030 +0 TLS +GLOBAL DEFAULT +11 le0
 +31: 0181041c +0 FUNC +GLOBAL DEFAULT +UND __tls_get_addr
 +32: 00000020 +0 TLS +GLOBAL DEFAULT +11 ld0
 +33: 00000034 +0 TLS +GLOBAL DEFAULT +11 le1
d117 7
a123 7
 +35: 0180028c +0 NOTYPE +GLOBAL DEFAULT +7 _start
 +36: 01810428 +0 NOTYPE +GLOBAL DEFAULT +ABS __end
 +37: 018183d4 +0 OBJECT +GLOBAL DEFAULT +14 _SDA_BASE_
 +38: 00000028 +0 TLS +GLOBAL DEFAULT +11 ld2
 +39: 00000024 +0 TLS +GLOBAL DEFAULT +11 ld1
 +40: 018103d4 +0 NOTYPE +GLOBAL DEFAULT +ABS __bss_start
 +41: 018103d4 +0 NOTYPE +GLOBAL DEFAULT +ABS _edata
d125 4
a128 4
 +43: 01810428 +0 NOTYPE +GLOBAL DEFAULT +ABS _end
 +44: 0000001c +0 TLS +GLOBAL DEFAULT +11 gd0
 +45: 0000002c +0 TLS +GLOBAL DEFAULT +11 ie0
 +46: 018082fc +0 OBJECT +GLOBAL DEFAULT +8 _SDA2_BASE_
@


1.1
log
@New tests.
@
text
@d18 1
a18 1
 +\[ 6\] \.rela\.plt +RELA +01800280 000280 00000c 0c +A +3 +10 +4
d31 1
a31 1
 +\[19\] \.symtab +SYMTAB +00000000 0007ac 0002f0 10 +20 +1c +4
@

