head	1.16;
access;
symbols
	binutils-2_24-branch:1.16.0.2
	binutils-2_24-branchpoint:1.16
	binutils-2_21_1:1.9
	binutils-2_23_2:1.10.6.1
	binutils-2_23_1:1.10
	binutils-2_23:1.10
	binutils-2_23-branch:1.10.0.6
	binutils-2_23-branchpoint:1.10
	binutils-2_22_branch:1.10.0.4
	binutils-2_22:1.10
	binutils-2_22-branch:1.10.0.2
	binutils-2_22-branchpoint:1.10
	binutils-2_21:1.9
	binutils-2_21-branch:1.9.0.2
	binutils-2_21-branchpoint:1.9
	binutils-2_20_1:1.7.8.2
	binutils-2_20:1.7.8.2
	binutils-arc-20081103-branch:1.7.0.10
	binutils-arc-20081103-branchpoint:1.7
	binutils-2_20-branch:1.7.0.8
	binutils-2_20-branchpoint:1.7
	dje-cgen-play1-branch:1.7.0.6
	dje-cgen-play1-branchpoint:1.7
	arc-20081103-branch:1.7.0.4
	arc-20081103-branchpoint:1.7
	binutils-2_19_1:1.7
	binutils-2_19:1.7
	binutils-2_19-branch:1.7.0.2
	binutils-2_19-branchpoint:1.7
	binutils-2_18:1.5.2.1
	binutils-2_18-branch:1.5.0.2
	binutils-2_18-branchpoint:1.5
	binutils-csl-coldfire-4_1-32:1.4
	binutils-csl-sourcerygxx-4_1-32:1.4
	binutils-csl-innovasic-fido-3_4_4-33:1.4
	binutils-csl-sourcerygxx-3_4_4-32:1.4
	binutils-csl-coldfire-4_1-30:1.4
	binutils-csl-sourcerygxx-4_1-30:1.4
	binutils-csl-coldfire-4_1-28:1.4
	binutils-csl-sourcerygxx-4_1-29:1.4
	binutils-csl-sourcerygxx-4_1-28:1.4
	binutils-csl-arm-2006q3-27:1.4
	binutils-csl-sourcerygxx-4_1-27:1.4
	binutils-csl-arm-2006q3-26:1.4
	binutils-csl-sourcerygxx-4_1-26:1.4
	binutils-csl-sourcerygxx-4_1-25:1.4
	binutils-csl-sourcerygxx-4_1-24:1.4
	binutils-csl-sourcerygxx-4_1-23:1.4
	binutils-csl-sourcerygxx-4_1-21:1.4
	binutils-csl-arm-2006q3-21:1.4
	binutils-csl-sourcerygxx-4_1-22:1.4
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.4
	binutils-csl-sourcerygxx-4_1-20:1.4
	binutils-csl-arm-2006q3-19:1.4
	binutils-csl-sourcerygxx-4_1-19:1.4
	binutils-csl-sourcerygxx-4_1-18:1.4
	binutils-csl-renesas-4_1-9:1.4
	binutils-csl-sourcerygxx-3_4_4-25:1.4
	binutils-csl-renesas-4_1-8:1.4
	binutils-csl-renesas-4_1-7:1.4
	binutils-csl-renesas-4_1-6:1.4
	binutils-csl-sourcerygxx-4_1-17:1.4
	binutils-csl-sourcerygxx-4_1-14:1.4
	binutils-csl-sourcerygxx-4_1-15:1.4
	binutils-csl-sourcerygxx-4_1-13:1.4
	binutils-2_17:1.4
	binutils-csl-sourcerygxx-4_1-12:1.4
	binutils-csl-sourcerygxx-3_4_4-21:1.4
	binutils-csl-wrs-linux-3_4_4-24:1.4
	binutils-csl-wrs-linux-3_4_4-23:1.4
	binutils-csl-sourcerygxx-4_1-9:1.4
	binutils-csl-sourcerygxx-4_1-8:1.4
	binutils-csl-sourcerygxx-4_1-7:1.4
	binutils-csl-arm-2006q1-6:1.4
	binutils-csl-sourcerygxx-4_1-6:1.4
	binutils-csl-wrs-linux-3_4_4-22:1.4
	binutils-csl-coldfire-4_1-11:1.4
	binutils-csl-sourcerygxx-3_4_4-19:1.4
	binutils-csl-coldfire-4_1-10:1.4
	binutils-csl-sourcerygxx-4_1-5:1.4
	binutils-csl-sourcerygxx-4_1-4:1.4
	binutils-csl-wrs-linux-3_4_4-21:1.4
	binutils-csl-morpho-4_1-4:1.4
	binutils-csl-sourcerygxx-3_4_4-17:1.4
	binutils-csl-wrs-linux-3_4_4-20:1.4
	binutils-2_17-branch:1.4.0.10
	binutils-2_17-branchpoint:1.4
	binutils-csl-2_17-branch:1.4.0.8
	binutils-csl-2_17-branchpoint:1.4
	binutils-csl-gxxpro-3_4-branch:1.4.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.4
	binutils-2_16_1:1.4
	binutils-csl-arm-2005q1b:1.4
	binutils-2_16:1.4
	binutils-csl-arm-2005q1a:1.4
	binutils-csl-arm-2005q1-branch:1.4.0.4
	binutils-csl-arm-2005q1-branchpoint:1.4
	binutils-2_16-branch:1.4.0.2
	binutils-2_16-branchpoint:1.4
	csl-arm-2004-q3d:1.4
	csl-arm-2004-q3:1.4
	binutils-2_15:1.3.6.1
	binutils-2_15-branchpoint:1.3
	csl-arm-2004-q1a:1.4
	csl-arm-2004-q1:1.4
	binutils-2_15-branch:1.3.0.6
	cagney_bfdfile-20040213-branch:1.3.0.4
	cagney_bfdfile-20040213-branchpoint:1.3
	cagney_bigcore-20040122-branch:1.3.0.2
	cagney_bigcore-20040122-branchpoint:1.3
	csl-arm-2003-q4:1.3
	binutils-2_14:1.1
	binutils-2_14-branch:1.1.0.2
	binutils-2_14-branchpoint:1.1
	binutils_latest_snapshot:1.16;
locks; strict;
comment	@# @;


1.16
date	2013.08.22.07.34.27;	author amodra;	state Exp;
branches;
next	1.15;

1.15
date	2013.04.22.03.11.40;	author amodra;	state Exp;
branches;
next	1.14;

1.14
date	2013.01.31.06.28.48;	author amodra;	state Exp;
branches;
next	1.13;

1.13
date	2013.01.15.06.13.26;	author amodra;	state Exp;
branches;
next	1.12;

1.12
date	2012.11.23.03.28.13;	author amodra;	state Exp;
branches;
next	1.11;

1.11
date	2012.10.29.09.25.53;	author amodra;	state Exp;
branches;
next	1.10;

1.10
date	2011.07.14.03.28.22;	author amodra;	state Exp;
branches
	1.10.6.1;
next	1.9;

1.9
date	2009.10.02.15.00.30;	author amodra;	state Exp;
branches;
next	1.8;

1.8
date	2009.09.18.03.30.34;	author amodra;	state Exp;
branches;
next	1.7;

1.7
date	2007.11.06.13.49.19;	author amodra;	state Exp;
branches
	1.7.8.1;
next	1.6;

1.6
date	2007.08.13.00.20.59;	author amodra;	state Exp;
branches;
next	1.5;

1.5
date	2006.08.17.08.21.06;	author amodra;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	2004.03.16.00.58.43;	author amodra;	state Exp;
branches;
next	1.3;

1.3
date	2003.06.16.10.51.07;	author amodra;	state Exp;
branches
	1.3.6.1;
next	1.2;

1.2
date	2003.06.10.04.36.01;	author amodra;	state Exp;
branches;
next	1.1;

1.1
date	2003.02.04.14.52.11;	author amodra;	state Exp;
branches;
next	;

1.10.6.1
date	2013.01.21.13.48.52;	author amodra;	state Exp;
branches;
next	;

1.7.8.1
date	2009.09.18.03.32.17;	author amodra;	state Exp;
branches;
next	1.7.8.2;

1.7.8.2
date	2009.10.02.15.20.07;	author amodra;	state Exp;
branches;
next	;

1.5.2.1
date	2007.08.15.04.34.01;	author amodra;	state Exp;
branches;
next	;

1.3.6.1
date	2004.03.16.00.59.35;	author amodra;	state Exp;
branches;
next	;


desc
@@


1.16
log
@	* ld-powerpc/powerpc.exp: Substitute for le in options_regsub(ld).
	Correct ppc64elftests option replacement.
	(supports_ppc64): Match elf64lppc too.
	* ld-powerpc/relbrlt.d: Update for little-endian.
	* ld-powerpc/symtocbase.d: Likewise.
	* ld-powerpc/tls.t: Likewise.
	* ld-powerpc/tlsexetoc.g: Likewise.
	* ld-powerpc/tlsso.d: Likewise.
	* ld-powerpc/tlsso.g: Likewise.
	* ld-powerpc/tlstoc.t: Likewise.
	* ld-powerpc/tlstocso.d: Likewise.
	* ld-powerpc/tlstocso.g: Likewise.
	* ld-powerpc/tlstocso.t: Likewise.
	* ld-powerpc/tocopt.d: Likewise.
	* ld-powerpc/tocopt2.d: Likewise.
	* ld-powerpc/tocopt3.d: Likewise.
	* ld-powerpc/tocopt4.d: Likewise.
	* ld-powerpc/tocopt5.d: Likewise.
@
text
@#source: tls.s
#as: -a64
#ld: -shared
#objdump: -dr
#target: powerpc64*-*-*

.*

Disassembly of section \.text:

.* <.*plt_call\.__tls_get_addr(|_opt)>:
.*	(f8 41 00 28|28 00 41 f8) 	std     r2,40\(r1\)
.*	(e9 62 80 78|78 80 62 e9) 	ld      r11,-32648\(r2\)
.*	(7d 69 03 a6|a6 03 69 7d) 	mtctr   r11
.*	(e8 42 80 80|80 80 42 e8) 	ld      r2,-32640\(r2\)
.*	(28 22 00 00|00 00 22 28) 	cmpldi  r2,0
.*	(4c e2 04 20|20 04 e2 4c) 	bnectr\+ 
.*	(48 00 00 ..|.. 00 00 48) 	b       .* <__glink_PLTresolve\+0x38>

.* <_start>:
.*	(38 62 80 20|20 80 62 38) 	addi    r3,r2,-32736
.*	(4b ff ff ..|.. ff ff 4b) 	bl      .*plt_call.__tls_get_addr.*
.*	(e8 41 00 28|28 00 41 e8) 	ld      r2,40\(r1\)
.*	(38 62 80 50|50 80 62 38) 	addi    r3,r2,-32688
.*	(4b ff ff ..|.. ff ff 4b) 	bl      .*plt_call.__tls_get_addr.*
.*	(e8 41 00 28|28 00 41 e8) 	ld      r2,40\(r1\)
.*	(38 62 80 38|38 80 62 38) 	addi    r3,r2,-32712
.*	(4b ff ff ..|.. ff ff 4b) 	bl      .*plt_call.__tls_get_addr.*
.*	(e8 41 00 28|28 00 41 e8) 	ld      r2,40\(r1\)
.*	(38 62 80 50|50 80 62 38) 	addi    r3,r2,-32688
.*	(4b ff ff ..|.. ff ff 4b) 	bl      .*plt_call.__tls_get_addr.*
.*	(e8 41 00 28|28 00 41 e8) 	ld      r2,40\(r1\)
.*	(39 23 80 40|40 80 23 39) 	addi    r9,r3,-32704
.*	(3d 23 00 00|00 00 23 3d) 	addis   r9,r3,0
.*	(81 49 80 48|48 80 49 81) 	lwz     r10,-32696\(r9\)
.*	(e9 22 80 30|30 80 22 e9) 	ld      r9,-32720\(r2\)
.*	(7d 49 18 2a|2a 18 49 7d) 	ldx     r10,r9,r3
.*	(e9 22 80 48|48 80 22 e9) 	ld      r9,-32696\(r2\)
.*	(7d 49 6a 2e|2e 6a 49 7d) 	lhzx    r10,r9,r13
.*	(89 4d 00 00|00 00 4d 89) 	lbz     r10,0\(r13\)
.*	(3d 2d 00 00|00 00 2d 3d) 	addis   r9,r13,0
.*	(99 49 00 00|00 00 49 99) 	stb     r10,0\(r9\)
.*	(38 62 80 08|08 80 62 38) 	addi    r3,r2,-32760
.*	(4b ff ff ..|.. ff ff 4b) 	bl      .*plt_call.__tls_get_addr.*
.*	(e8 41 00 28|28 00 41 e8) 	ld      r2,40\(r1\)
.*	(38 62 80 50|50 80 62 38) 	addi    r3,r2,-32688
.*	(4b ff ff ..|.. ff ff 4b) 	bl      .*plt_call.__tls_get_addr.*
.*	(e8 41 00 28|28 00 41 e8) 	ld      r2,40\(r1\)
.*	(f9 43 80 08|08 80 43 f9) 	std     r10,-32760\(r3\)
.*	(3d 23 00 00|00 00 23 3d) 	addis   r9,r3,0
.*	(91 49 80 10|10 80 49 91) 	stw     r10,-32752\(r9\)
.*	(e9 22 80 18|18 80 22 e9) 	ld      r9,-32744\(r2\)
.*	(7d 49 19 2a|2a 19 49 7d) 	stdx    r10,r9,r3
.*	(e9 22 80 48|48 80 22 e9) 	ld      r9,-32696\(r2\)
.*	(7d 49 6b 2e|2e 6b 49 7d) 	sthx    r10,r9,r13
.*	(e9 4d 00 02|02 00 4d e9) 	lwa     r10,0\(r13\)
.*	(3d 2d 00 00|00 00 2d 3d) 	addis   r9,r13,0
.*	(a9 49 00 00|00 00 49 a9) 	lha     r10,0\(r9\)
.*	(60 00 00 00|00 00 00 60) 	nop
.*	(00 00 00 00|20 02 01 00) .*
.*	(00 01 02 20|00 00 00 00) .*
.* <__glink_PLTresolve>:
.*	(7d 88 02 a6|a6 02 88 7d) 	mflr    r12
.*	(42 9f 00 05|05 00 9f 42) 	bcl     20,4\*cr7\+so,.*
.*	(7d 68 02 a6|a6 02 68 7d) 	mflr    r11
.*	(e8 4b ff f0|f0 ff 4b e8) 	ld      r2,-16\(r11\)
.*	(7d 88 03 a6|a6 03 88 7d) 	mtlr    r12
.*	(7d 82 5a 14|14 5a 82 7d) 	add     r12,r2,r11
.*	(e9 6c 00 00|00 00 6c e9) 	ld      r11,0\(r12\)
.*	(e8 4c 00 08|08 00 4c e8) 	ld      r2,8\(r12\)
.*	(7d 69 03 a6|a6 03 69 7d) 	mtctr   r11
.*	(e9 6c 00 10|10 00 6c e9) 	ld      r11,16\(r12\)
.*	(4e 80 04 20|20 04 80 4e) 	bctr
.*	(60 00 00 00|00 00 00 60) 	nop
.*	(60 00 00 00|00 00 00 60) 	nop
.*	(60 00 00 00|00 00 00 60) 	nop
.*	(38 00 00 00|00 00 00 38) 	li      r0,0
.*	(4b ff ff c4|c4 ff ff 4b) 	b       .*
@


1.15
log
@bfd/
	* elf64-ppc.c (ppc64_elf_check_relocs): Don't call
	create_linkage_sections here..
	(ppc64_elf_init_stub_bfd): ..do so here.  Return status.
	(create_linkage_sections): Move earlier in file.
	(ppc64_elf_setup_section_lists): Remove now useless htab->brlt test.
	* elf64-ppc.h (ppc64_elf_init_stub_bfd): Update proto.
ld/
	* emultempl/ppc64elf.em (ppc_create_output_section_statements):
	Check return from ppc64_elf_init_stub_bfd.
ld/testsuite/
	* ld-powerpc/tlsexe.d: Adjust.
	* ld-powerpc/tlsexe.r: Adjust.
	* ld-powerpc/tlsexetoc.d: Adjust.
	* ld-powerpc/tlsexetoc.r: Adjust.
	* ld-powerpc/tlsso.d: Adjust.
	* ld-powerpc/tlsso.r: Adjust.
	* ld-powerpc/tlstocso.d: Adjust.
	* ld-powerpc/tlstocso.r: Adjust.
@
text
@d7 1
a7 1
.*: +file format elf64-powerpc
@


1.14
log
@bfd/
	* elf64-ppc.c (ppc_stub_name): Trim off trailing "+0".
ld/testsuite/
	* ld-powerpc/tlsexe.d: Update for changed stub names.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexetoc.d: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.d: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlstocso.d: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
@
text
@d11 1
a11 1
.* <00000010\.plt_call\.__tls_get_addr(|_opt)>:
@


1.13
log
@bfd/
	* elf64-ppc.c (ppc64_elf_size_stubs): Default shared libs to
	plt-thread-safe.
gold/
	* powerpc.cc (Target_powerpc::do_relax): Default shared libs to
	plt-thread-safe.
ld/testsuite/
	* ld-powerpc/tlsso.d: Adjust for plt-thread-safe stubs.
	* ld-powerpc/tlsso.g: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlstocso.d: Likewise.
	* ld-powerpc/tlstocso.g: Likewise.
@
text
@d11 1
a11 1
.* <00000010\.plt_call\.__tls_get_addr(|_opt)\+0>:
@


1.12
log
@include/opcode/
	* ppc.h (ppc_parse_cpu): Update prototype.
opcodes/
	* ppc-dis.c (ppc_parse_cpu): Add "sticky" param.  Track bits
	set from ppc_opts.sticky in it.  Delete "retain_mask".
	(powerpc_init_dialect): Choose default dialect from info->mach
	before parsing -M options.  Handle more bfd_mach_ppc variants.
	Update common default to power7.
gas/
	* config/tc-ppc.c (sticky): New var.
	(md_parse_option, ppc_machine): Update ppc_parse_cpu calls.
gas/testsuite/
	* gas/ppc/astest2.d: Pass -Mppc to objdump.
ld/testsuite/
	* ld-powerpc/plt1.d: Update for default "at" branch hints.
	* ld-powerpc/tlsexe.d: Likewise.
	* ld-powerpc/tlsexetoc.d: Likewise.
	* ld-powerpc/tlsopt1.d: Likewise.
	* ld-powerpc/tlsopt1_32.d: Likewise.
	* ld-powerpc/tlsopt2.d: Likewise.
	* ld-powerpc/tlsopt2_32.d: Likewise.
	* ld-powerpc/tlsopt4.d: Likewise.
	* ld-powerpc/tlsopt4_32.d: Likewise.
	* ld-powerpc/tlsso.d: Likewise.
	* ld-powerpc/tlstocso.d: Likewise.
@
text
@d16 3
a18 1
.*	(4e 80 04 20|20 04 80 4e) 	bctr
d22 1
a22 1
.*	(4b ff ff e9|e9 ff ff 4b) 	bl      .*
d25 1
a25 1
.*	(4b ff ff dd|dd ff ff 4b) 	bl      .*
d28 1
a28 1
.*	(4b ff ff d1|d1 ff ff 4b) 	bl      .*
d31 1
a31 1
.*	(4b ff ff c5|c5 ff ff 4b) 	bl      .*
d44 1
a44 1
.*	(4b ff ff 91|91 ff ff 4b) 	bl      .*
d47 1
a47 1
.*	(4b ff ff 85|85 ff ff 4b) 	bl      .*
@


1.11
log
@	* ld-powerpc/powerpc.exp: Modify emulation option passed to ld
	when little-endian.
	* ld-powerpc/apuinfo-nul.rd: Update for le output.
	* ld-powerpc/apuinfo.rd: Likewise.
	* ld-powerpc/plt1.d: Likewise.
	* ld-powerpc/relax.d: Likewise.
	* ld-powerpc/relaxr.d: Likewise.
	* ld-powerpc/sdadyn.d: Likewise.
	* ld-powerpc/tls.d: Likewise.
	* ld-powerpc/tls.g: Likewise.
	* ld-powerpc/tls.t: Likewise.
	* ld-powerpc/tls32.d: Likewise.
	* ld-powerpc/tls32.g: Likewise.
	* ld-powerpc/tls32.t: Likewise.
	* ld-powerpc/tlsexe.d: Likewise.
	* ld-powerpc/tlsexe.g: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexe.t: Likewise.
	* ld-powerpc/tlsexe32.d: Likewise.
	* ld-powerpc/tlsexe32.g: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsexe32.t: Likewise.
	* ld-powerpc/tlsexetoc.d: Likewise.
	* ld-powerpc/tlsexetoc.g: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsexetoc.t: Likewise.
	* ld-powerpc/tlsmark.d: Likewise.
	* ld-powerpc/tlsmark32.d: Likewise.
	* ld-powerpc/tlsopt1.d: Likewise.
	* ld-powerpc/tlsopt1_32.d: Likewise.
	* ld-powerpc/tlsopt2.d: Likewise.
	* ld-powerpc/tlsopt2_32.d: Likewise.
	* ld-powerpc/tlsopt3.d: Likewise.
	* ld-powerpc/tlsopt3_32.d: Likewise.
	* ld-powerpc/tlsopt4.d: Likewise.
	* ld-powerpc/tlsopt4_32.d: Likewise.
	* ld-powerpc/tlsso.d: Likewise.
	* ld-powerpc/tlsso.g: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso.t: Likewise.
	* ld-powerpc/tlsso32.d: Likewise.
	* ld-powerpc/tlsso32.g: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlsso32.t: Likewise.
	* ld-powerpc/tlstoc.d: Likewise.
	* ld-powerpc/tlstoc.g: Likewise.
	* ld-powerpc/tlstoc.t: Likewise.
	* ld-powerpc/tlstocso.d: Likewise.
	* ld-powerpc/tlstocso.g: Likewise.
	* ld-powerpc/tlstocso.t: Likewise.
	* ld-powerpc/tocopt.out: Likewise.
@
text
@d62 1
a62 1
.*	(42 9f 00 05|05 00 9f 42) 	bcl-    20,4\*cr7\+so,.*
@


1.10
log
@bfd/
	* elf64-ppc.c (struct ppc_link_hash_table): Add plt_static_chain.
	(build_plt_stub): Add plt_static_chain param, don't load r11 if false.
	(build_tls_get_addr_stub): Likewise.
	(ppc_build_one_stub): Update calls to above.
	(ppc_size_one_stub): Adjust stub size.
	(ppc64_elf_size_stubs): Add plt_static_chain param, save to htab.
	* elf64-ppc.h (ppc64_elf_size_stubs): Update prototype.
ld/
	* emultempl/ppc64elf.em (plt_static_chain): New var.
	(gld${EMULATION_NAME}_after_allocation): Pass to ppc64_elf_size_stubs.
	(PARSE_AND_LIST_PROLOGUE, PARSE_AND_LIST_LONGOPTS,
	PARSE_AND_LIST_OPTIONS, PARSE_AND_LIST_ARGS_CASES): Handle
	--plt-static-chain and --no-plt-static-chain.
ld/testsuite/
	* ld-powerpc/tlsexe.d, * ld-powerpc/tlsexe.g. *ld-powerpc/tlsexe.r,
	* ld-powerpc/tlsexetoc.d, * ld-powerpc/tlsexetoc.g,
	* ld-powerpc/tlsexetoc.r, * ld-powerpc/tlsso.d,
	* ld-powerpc/tlstocso.d: Update for plt stub change.
@
text
@d3 1
a3 1
#ld: -shared -melf64ppc
d12 5
a16 5
.*	f8 41 00 28 	std     r2,40\(r1\)
.*	e9 62 80 78 	ld      r11,-32648\(r2\)
.*	7d 69 03 a6 	mtctr   r11
.*	e8 42 80 80 	ld      r2,-32640\(r2\)
.*	4e 80 04 20 	bctr
d19 41
a59 41
.*	38 62 80 20 	addi    r3,r2,-32736
.*	4b ff ff e9 	bl      .*
.*	e8 41 00 28 	ld      r2,40\(r1\)
.*	38 62 80 50 	addi    r3,r2,-32688
.*	4b ff ff dd 	bl      .*
.*	e8 41 00 28 	ld      r2,40\(r1\)
.*	38 62 80 38 	addi    r3,r2,-32712
.*	4b ff ff d1 	bl      .*
.*	e8 41 00 28 	ld      r2,40\(r1\)
.*	38 62 80 50 	addi    r3,r2,-32688
.*	4b ff ff c5 	bl      .*
.*	e8 41 00 28 	ld      r2,40\(r1\)
.*	39 23 80 40 	addi    r9,r3,-32704
.*	3d 23 00 00 	addis   r9,r3,0
.*	81 49 80 48 	lwz     r10,-32696\(r9\)
.*	e9 22 80 30 	ld      r9,-32720\(r2\)
.*	7d 49 18 2a 	ldx     r10,r9,r3
.*	e9 22 80 48 	ld      r9,-32696\(r2\)
.*	7d 49 6a 2e 	lhzx    r10,r9,r13
.*	89 4d 00 00 	lbz     r10,0\(r13\)
.*	3d 2d 00 00 	addis   r9,r13,0
.*	99 49 00 00 	stb     r10,0\(r9\)
.*	38 62 80 08 	addi    r3,r2,-32760
.*	4b ff ff 91 	bl      .*
.*	e8 41 00 28 	ld      r2,40\(r1\)
.*	38 62 80 50 	addi    r3,r2,-32688
.*	4b ff ff 85 	bl      .*
.*	e8 41 00 28 	ld      r2,40\(r1\)
.*	f9 43 80 08 	std     r10,-32760\(r3\)
.*	3d 23 00 00 	addis   r9,r3,0
.*	91 49 80 10 	stw     r10,-32752\(r9\)
.*	e9 22 80 18 	ld      r9,-32744\(r2\)
.*	7d 49 19 2a 	stdx    r10,r9,r3
.*	e9 22 80 48 	ld      r9,-32696\(r2\)
.*	7d 49 6b 2e 	sthx    r10,r9,r13
.*	e9 4d 00 02 	lwa     r10,0\(r13\)
.*	3d 2d 00 00 	addis   r9,r13,0
.*	a9 49 00 00 	lha     r10,0\(r9\)
.*	60 00 00 00 	nop
.*	00 00 00 00 .*
.*	00 01 02 20 .*
d61 16
a76 16
.*	7d 88 02 a6 	mflr    r12
.*	42 9f 00 05 	bcl-    20,4\*cr7\+so,.*
.*	7d 68 02 a6 	mflr    r11
.*	e8 4b ff f0 	ld      r2,-16\(r11\)
.*	7d 88 03 a6 	mtlr    r12
.*	7d 82 5a 14 	add     r12,r2,r11
.*	e9 6c 00 00 	ld      r11,0\(r12\)
.*	e8 4c 00 08 	ld      r2,8\(r12\)
.*	7d 69 03 a6 	mtctr   r11
.*	e9 6c 00 10 	ld      r11,16\(r12\)
.*	4e 80 04 20 	bctr
.*	60 00 00 00 	nop
.*	60 00 00 00 	nop
.*	60 00 00 00 	nop
.*	38 00 00 00 	li      r0,0
.*	4b ff ff c4 	b       .*
@


1.10.6.1
log
@	PR 12549
	PR 14493
	PR 14567
	PR 14662
	PR 14758
	PR 14813
	PR 14904
	PR 14915
	PR 14926
	PR 14950
	PR 14962
	Apply mainline patches
@
text
@d3 1
a3 1
#ld: -shared
d12 5
a16 7
.*	(f8 41 00 28|28 00 41 f8) 	std     r2,40\(r1\)
.*	(e9 62 80 78|78 80 62 e9) 	ld      r11,-32648\(r2\)
.*	(7d 69 03 a6|a6 03 69 7d) 	mtctr   r11
.*	(e8 42 80 80|80 80 42 e8) 	ld      r2,-32640\(r2\)
.*	(28 22 00 00|00 00 22 28) 	cmpldi  r2,0
.*	(4c e2 04 20|20 04 e2 4c) 	bnectr\+ 
.*	(48 00 00 ..|.. 00 00 48) 	b       .* <__glink_PLTresolve\+0x38>
d19 41
a59 41
.*	(38 62 80 20|20 80 62 38) 	addi    r3,r2,-32736
.*	(4b ff ff ..|.. ff ff 4b) 	bl      .*plt_call.__tls_get_addr.*
.*	(e8 41 00 28|28 00 41 e8) 	ld      r2,40\(r1\)
.*	(38 62 80 50|50 80 62 38) 	addi    r3,r2,-32688
.*	(4b ff ff ..|.. ff ff 4b) 	bl      .*plt_call.__tls_get_addr.*
.*	(e8 41 00 28|28 00 41 e8) 	ld      r2,40\(r1\)
.*	(38 62 80 38|38 80 62 38) 	addi    r3,r2,-32712
.*	(4b ff ff ..|.. ff ff 4b) 	bl      .*plt_call.__tls_get_addr.*
.*	(e8 41 00 28|28 00 41 e8) 	ld      r2,40\(r1\)
.*	(38 62 80 50|50 80 62 38) 	addi    r3,r2,-32688
.*	(4b ff ff ..|.. ff ff 4b) 	bl      .*plt_call.__tls_get_addr.*
.*	(e8 41 00 28|28 00 41 e8) 	ld      r2,40\(r1\)
.*	(39 23 80 40|40 80 23 39) 	addi    r9,r3,-32704
.*	(3d 23 00 00|00 00 23 3d) 	addis   r9,r3,0
.*	(81 49 80 48|48 80 49 81) 	lwz     r10,-32696\(r9\)
.*	(e9 22 80 30|30 80 22 e9) 	ld      r9,-32720\(r2\)
.*	(7d 49 18 2a|2a 18 49 7d) 	ldx     r10,r9,r3
.*	(e9 22 80 48|48 80 22 e9) 	ld      r9,-32696\(r2\)
.*	(7d 49 6a 2e|2e 6a 49 7d) 	lhzx    r10,r9,r13
.*	(89 4d 00 00|00 00 4d 89) 	lbz     r10,0\(r13\)
.*	(3d 2d 00 00|00 00 2d 3d) 	addis   r9,r13,0
.*	(99 49 00 00|00 00 49 99) 	stb     r10,0\(r9\)
.*	(38 62 80 08|08 80 62 38) 	addi    r3,r2,-32760
.*	(4b ff ff ..|.. ff ff 4b) 	bl      .*plt_call.__tls_get_addr.*
.*	(e8 41 00 28|28 00 41 e8) 	ld      r2,40\(r1\)
.*	(38 62 80 50|50 80 62 38) 	addi    r3,r2,-32688
.*	(4b ff ff ..|.. ff ff 4b) 	bl      .*plt_call.__tls_get_addr.*
.*	(e8 41 00 28|28 00 41 e8) 	ld      r2,40\(r1\)
.*	(f9 43 80 08|08 80 43 f9) 	std     r10,-32760\(r3\)
.*	(3d 23 00 00|00 00 23 3d) 	addis   r9,r3,0
.*	(91 49 80 10|10 80 49 91) 	stw     r10,-32752\(r9\)
.*	(e9 22 80 18|18 80 22 e9) 	ld      r9,-32744\(r2\)
.*	(7d 49 19 2a|2a 19 49 7d) 	stdx    r10,r9,r3
.*	(e9 22 80 48|48 80 22 e9) 	ld      r9,-32696\(r2\)
.*	(7d 49 6b 2e|2e 6b 49 7d) 	sthx    r10,r9,r13
.*	(e9 4d 00 02|02 00 4d e9) 	lwa     r10,0\(r13\)
.*	(3d 2d 00 00|00 00 2d 3d) 	addis   r9,r13,0
.*	(a9 49 00 00|00 00 49 a9) 	lha     r10,0\(r9\)
.*	(60 00 00 00|00 00 00 60) 	nop
.*	(00 00 00 00|20 02 01 00) .*
.*	(00 01 02 20|00 00 00 00) .*
d61 16
a76 16
.*	(7d 88 02 a6|a6 02 88 7d) 	mflr    r12
.*	(42 9f 00 05|05 00 9f 42) 	bcl     20,4\*cr7\+so,.*
.*	(7d 68 02 a6|a6 02 68 7d) 	mflr    r11
.*	(e8 4b ff f0|f0 ff 4b e8) 	ld      r2,-16\(r11\)
.*	(7d 88 03 a6|a6 03 88 7d) 	mtlr    r12
.*	(7d 82 5a 14|14 5a 82 7d) 	add     r12,r2,r11
.*	(e9 6c 00 00|00 00 6c e9) 	ld      r11,0\(r12\)
.*	(e8 4c 00 08|08 00 4c e8) 	ld      r2,8\(r12\)
.*	(7d 69 03 a6|a6 03 69 7d) 	mtctr   r11
.*	(e9 6c 00 10|10 00 6c e9) 	ld      r11,16\(r12\)
.*	(4e 80 04 20|20 04 80 4e) 	bctr
.*	(60 00 00 00|00 00 00 60) 	nop
.*	(60 00 00 00|00 00 00 60) 	nop
.*	(60 00 00 00|00 00 00 60) 	nop
.*	(38 00 00 00|00 00 00 38) 	li      r0,0
.*	(4b ff ff c4|c4 ff ff 4b) 	b       .*
@


1.9
log
@ld/
	* emultempl/ppc32elf.em (emit_stub_syms): Init to -1.
	(ppc_after_open): Set emit_stubs_syms by default when shared.
	(OPTION_NO_STUBSYMS): Define.
	(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS,
	PARSE_AND_LIST_ARGS_CASES): Handle --no-emit-stub-syms.
	* emultempl/ppc64elf.em (emit_stub_syms): Init to -1.
	(gld${EMULATION_NAME}_finish): Set emit_stubs_syms by default.
	(OPTION_NO_STUBSYMS): Define.
	(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS,
	PARSE_AND_LIST_ARGS_CASES): Handle --no-emit-stub-syms.
ld/testsuite/
	* ld-powerpc/tlsexe.d: Update.
	* ld-powerpc/tlsexe.r: Update.
	* ld-powerpc/tlsexetoc.d: Update.
	* ld-powerpc/tlsexetoc.r: Update.
	* ld-powerpc/tlsso.d: Update.
	* ld-powerpc/tlsso.r: Update.
	* ld-powerpc/tlstocso.d: Update.
	* ld-powerpc/tlstocso.r: Update.
@
text
@a14 1
.*	e9 62 80 88 	ld      r11,-32632\(r2\)
d20 1
a20 1
.*	4b ff ff e5 	bl      .*
d23 1
a23 1
.*	4b ff ff d9 	bl      .*
d26 1
a26 1
.*	4b ff ff cd 	bl      .*
d29 1
a29 1
.*	4b ff ff c1 	bl      .*
d42 1
a42 1
.*	4b ff ff 8d 	bl      .*
d45 1
a45 1
.*	4b ff ff 81 	bl      .*
d57 1
@


1.8
log
@bfd/
	* elf64-ppc.c (follow_link, elf_follow_link, ppc_follow_link): New
	functions.  Use throughout.
	(ppc64_elf_copy_indirect_symbol): Set direct symbol "oh" field
	from indirect symbol.
	(lookup_fdh): Rename from get_fdh.  Follow indirect sym links.
	(add_symbol_adjust): Simplify.
	(defined_code_entry, defined_func_desc): New functions.
	(ppc64_elf_gc_keep): Follow indirect sym links.  Use defined_code_entry.
	(ppc64_elf_gc_mark_dynamic_ref): Use defined_func_desc and
	defined_code_entry to follow indirect sym links.
	(ppc64_elf_gc_mark_hook, func_desc_adjust): Likewise.
	(ppc_type_of_stub): Follow indirect sym links.
	(toc_adjusting_stub_needed): Likewise.
	(ppc_build_one_stub): Likewise.  Make undefined dot-symbols weak
	rather than defining them at stub.
	(ppc64_elf_relocate_section): Rewrite call test to avoid multiple
	assignments in test.
ld/testsuite/
	* ld-powerpc/tlsso.d: Update.
	* ld-powerpc/tlsso.r: Update.
	* ld-powerpc/tlstocso.d: Update.
	* ld-powerpc/tlstocso.r: Update.
@
text
@d11 1
a11 1
.*:
d60 1
@


1.7
log
@bfd/
	* elf64-ppc.c (ppc64_elf_check_relocs): Don't refcount tlsld_got here..
	(ppc64_elf_gc_sweep_hook): ..or here..
	(ppc64_elf_tls_optimize): ..or here.  Make two passes through the
	relocs, ensuring that tls_get_addr calls follow gd and ld relocs.
	(allocate_dynrelocs): Refcount tlsld_got here.
	(ppc64_elf_size_dynamic_sections): Allocate local got and call
	allocate_dynrelocs before allocating tlsld_got.
	(ppc64_elf_relocate_section): Remove check that a tls_get_addr
	call follows gd and ld relocs.
ld/testsuite/
	* ld-powerpc/tlsso.d: Update for changed got alloc order.
	* ld-powerpc/tlsso.r: Likewise.
@
text
@d11 1
a11 1
.* <\.__tls_get_addr>:
d21 1
a21 1
.*	4b ff ff e5 	bl      .* <\.__tls_get_addr>
d24 1
a24 1
.*	4b ff ff d9 	bl      .* <\.__tls_get_addr>
d27 1
a27 1
.*	4b ff ff cd 	bl      .* <\.__tls_get_addr>
d30 1
a30 1
.*	4b ff ff c1 	bl      .* <\.__tls_get_addr>
d43 1
a43 1
.*	4b ff ff 8d 	bl      .* <\.__tls_get_addr>
d46 1
a46 1
.*	4b ff ff 81 	bl      .* <\.__tls_get_addr>
@


1.7.8.1
log
@bfd/
	* elf64-ppc.c (follow_link, elf_follow_link, ppc_follow_link): New
	functions.  Use throughout.
	(ppc64_elf_copy_indirect_symbol): Set direct symbol "oh" field
	from indirect symbol.
	(lookup_fdh): Rename from get_fdh.  Follow indirect sym links.
	(add_symbol_adjust): Simplify.
	(defined_code_entry, defined_func_desc): New functions.
	(ppc64_elf_gc_keep): Follow indirect sym links.  Use defined_code_entry.
	(ppc64_elf_gc_mark_dynamic_ref): Use defined_func_desc and
	defined_code_entry to follow indirect sym links.
	(ppc64_elf_gc_mark_hook, func_desc_adjust): Likewise.
	(ppc_type_of_stub): Follow indirect sym links.
	(toc_adjusting_stub_needed): Likewise.
	(ppc_build_one_stub): Likewise.  Make undefined dot-symbols weak
	rather than defining them at stub.
	(ppc64_elf_relocate_section): Rewrite call test to avoid multiple
	assignments in test.
ld/testsuite/
	* ld-powerpc/tlsso.d: Update.
	* ld-powerpc/tlsso.r: Update.
	* ld-powerpc/tlstocso.d: Update.
	* ld-powerpc/tlstocso.r: Update.
@
text
@d11 1
a11 1
.*:
d21 1
a21 1
.*	4b ff ff e5 	bl      .*
d24 1
a24 1
.*	4b ff ff d9 	bl      .*
d27 1
a27 1
.*	4b ff ff cd 	bl      .*
d30 1
a30 1
.*	4b ff ff c1 	bl      .*
d43 1
a43 1
.*	4b ff ff 8d 	bl      .*
d46 1
a46 1
.*	4b ff ff 81 	bl      .*
@


1.7.8.2
log
@ld/
	* emultempl/ppc32elf.em (emit_stub_syms): Init to -1.
	(ppc_after_open): Set emit_stubs_syms by default when shared.
	(OPTION_NO_STUBSYMS): Define.
	(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS,
	PARSE_AND_LIST_ARGS_CASES): Handle --no-emit-stub-syms.
	* emultempl/ppc64elf.em (emit_stub_syms): Init to -1.
	(gld${EMULATION_NAME}_finish): Set emit_stubs_syms by default.
	(OPTION_NO_STUBSYMS): Define.
	(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS,
	PARSE_AND_LIST_ARGS_CASES): Handle --no-emit-stub-syms.
ld/testsuite/
	* ld-powerpc/tlsexe.d: Update.
	* ld-powerpc/tlsexe.r: Update.
	* ld-powerpc/tlsexetoc.d: Update.
	* ld-powerpc/tlsexetoc.r: Update.
	* ld-powerpc/tlsso.d: Update.
	* ld-powerpc/tlsso.r: Update.
	* ld-powerpc/tlstocso.d: Update.
	* ld-powerpc/tlstocso.r: Update.
@
text
@d11 1
a11 1
.* <00000010\.plt_call\.__tls_get_addr(|_opt)\+0>:
a59 1
.* <__glink_PLTresolve>:
@


1.6
log
@bfd/
	* elf64-ppc.c (ADDI_R12_R12, LD_R11_0R2, LD_R2_0R2): Define.
	Update stub comments.
	(build_plt_stub): Build two variants, one without "addis".
	(ppc_build_one_stub): Build stubs without "addis" if possible.
	(ppc_size_one_stub): Size new stubs.
ld/testsuite/
	* ld-powerpc/relbrlt.s (.text.pad2): Adjust space.
	* ld-powerpc/relbrlt.d: Update.
	* ld-powerpc/tlsexe.d: Update.
	* ld-powerpc/tlsexe.g: Update.
	* ld-powerpc/tlsexe.r: Update.
	* ld-powerpc/tlsexetoc.d: Update.
	* ld-powerpc/tlsexetoc.g: Update.
	* ld-powerpc/tlsexetoc.r: Update.
	* ld-powerpc/tlsso.d: Update.
	* ld-powerpc/tlsso.g: Update.
	* ld-powerpc/tlsso.r: Update.
	* ld-powerpc/tlstocso.d: Update.
	* ld-powerpc/tlstocso.g: Update.
@
text
@d20 1
a20 1
.*	38 62 80 30 	addi    r3,r2,-32720
d23 1
a23 1
.*	38 62 80 08 	addi    r3,r2,-32760
d26 1
a26 1
.*	38 62 80 48 	addi    r3,r2,-32696
d29 1
a29 1
.*	38 62 80 08 	addi    r3,r2,-32760
d35 1
a35 1
.*	e9 22 80 40 	ld      r9,-32704\(r2\)
d37 1
a37 1
.*	e9 22 80 58 	ld      r9,-32680\(r2\)
d42 1
a42 1
.*	38 62 80 18 	addi    r3,r2,-32744
d45 1
a45 1
.*	38 62 80 08 	addi    r3,r2,-32760
d51 1
a51 1
.*	e9 22 80 28 	ld      r9,-32728\(r2\)
d53 1
a53 1
.*	e9 22 80 58 	ld      r9,-32680\(r2\)
@


1.5
log
@bfd/
	* elf64-ppc.c (create_linkage_sections): Align .glink to 8 bytes.
	(ppc64_elf_build_stubs): Use new lazy linking stub.
ld/testsuite/
	* ld-powerpc/tlsexe.d: Update for lazy link stub change.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexetoc.d: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.d: Likewise.
	* ld-powerpc/tlstocso.d: Likewise.
@
text
@a11 1
.*	3d 82 00 00 	addis   r12,r2,0
d13 1
a13 2
.*	e9 6c 80 78 	ld      r11,-32648\(r12\)
.*	e8 4c 80 80 	ld      r2,-32640\(r12\)
d15 2
a16 1
.*	e9 6c 80 88 	ld      r11,-32632\(r12\)
d21 1
a21 1
.*	4b ff ff e1 	bl      .* <\.__tls_get_addr>
d24 1
a24 1
.*	4b ff ff d5 	bl      .* <\.__tls_get_addr>
d27 1
a27 1
.*	4b ff ff c9 	bl      .* <\.__tls_get_addr>
d30 1
a30 1
.*	4b ff ff bd 	bl      .* <\.__tls_get_addr>
d43 1
a43 1
.*	4b ff ff 89 	bl      .* <\.__tls_get_addr>
d46 1
a46 1
.*	4b ff ff 7d 	bl      .* <\.__tls_get_addr>
a57 1
.*	60 00 00 00 	nop
@


1.5.2.1
log
@bfd/
	* elf64-ppc.c (ADDI_R12_R12, LD_R11_0R2, LD_R2_0R2): Define.
	Update stub comments.
	(build_plt_stub): Build two variants, one without "addis".
	(ppc_build_one_stub): Build stubs without "addis" if possible.
	(ppc_size_one_stub): Size new stubs.
ld/testsuite/
	* ld-powerpc/relbrlt.s (.text.pad2): Adjust space.
	* ld-powerpc/relbrlt.d: Update.
	* ld-powerpc/tlsexe.d: Update.
	* ld-powerpc/tlsexe.g: Update.
	* ld-powerpc/tlsexe.r: Update.
	* ld-powerpc/tlsexetoc.d: Update.
	* ld-powerpc/tlsexetoc.g: Update.
	* ld-powerpc/tlsexetoc.r: Update.
	* ld-powerpc/tlsso.d: Update.
	* ld-powerpc/tlsso.g: Update.
	* ld-powerpc/tlsso.r: Update.
	* ld-powerpc/tlstocso.d: Update.
	* ld-powerpc/tlstocso.g: Update.
@
text
@d12 1
d14 2
a15 1
.*	e9 62 80 78 	ld      r11,-32648\(r2\)
d17 1
a17 2
.*	e9 62 80 88 	ld      r11,-32632\(r2\)
.*	e8 42 80 80 	ld      r2,-32640\(r2\)
d22 1
a22 1
.*	4b ff ff e5 	bl      .* <\.__tls_get_addr>
d25 1
a25 1
.*	4b ff ff d9 	bl      .* <\.__tls_get_addr>
d28 1
a28 1
.*	4b ff ff cd 	bl      .* <\.__tls_get_addr>
d31 1
a31 1
.*	4b ff ff c1 	bl      .* <\.__tls_get_addr>
d44 1
a44 1
.*	4b ff ff 8d 	bl      .* <\.__tls_get_addr>
d47 1
a47 1
.*	4b ff ff 81 	bl      .* <\.__tls_get_addr>
d59 1
@


1.4
log
@opcodes/
	* ppc-dis.c (print_insn_powerpc): Don't print tabs.  Handle
	PPC_OPERANDS_GPR_0.
	* ppc-opc.c (RA0): Define.
	(RAQ, RAL, RAM, RAS, RSQ, RTQ, RSO): Use PPC_OPERAND_GPR_0.
	(RAOPT): Rename from RAO.  Update all uses.
	(powerpc_opcodes): Use RA0 as appropriate.  Add "lsdx", "lsdi",
	"stsdx", "stsdi", "lmd" and "stmd" insns.

include/opcode/
	* ppc.h (PPC_OPERAND_GPR_0): Define.  Bump other operand defines.

gas/testsuite/
	Update gas/ppc/.

ld/testsuite/
	Update ld-powerpc/.
@
text
@d59 10
a68 12
.*	7d 89 02 a6 	mfctr   r12
.*	78 0b 1f 24 	rldicr  r11,r0,3,60
.*	34 40 80 00 	addic\.  r2,r0,-32768
.*	7d 8b 60 50 	subf    r12,r11,r12
.*	7c 42 fe 76 	sradi   r2,r2,63
.*	78 0b 17 64 	rldicr  r11,r0,2,61
.*	7c 42 58 38 	and     r2,r2,r11
.*	7d 8b 60 50 	subf    r12,r11,r12
.*	7d 8c 12 14 	add     r12,r12,r2
.*	3d 8c 00 01 	addis   r12,r12,1
.*	e9 6c 01 f4 	ld      r11,500\(r12\)
.*	39 8c 01 f4 	addi    r12,r12,500
d73 3
d77 1
a77 1
.*	4b ff ff bc 	b       .*
@


1.3
log
@	* ld-powerpc/tlsexetoc.d: Update.
	* ld-powerpc/tlsso.d: Update.
	* ld-powerpc/tlstoc.d: Update.
	* ld-powerpc/tlstocso.d: Update.
	* ld-powerpc/tlstocso.r: Update.
@
text
@d12 6
a17 6
.*	3d 82 00 00 	addis	r12,r2,0
.*	f8 41 00 28 	std	r2,40\(r1\)
.*	e9 6c 80 78 	ld	r11,-32648\(r12\)
.*	e8 4c 80 80 	ld	r2,-32640\(r12\)
.*	7d 69 03 a6 	mtctr	r11
.*	e9 6c 80 88 	ld	r11,-32632\(r12\)
d21 53
a73 53
.*	38 62 80 30 	addi	r3,r2,-32720
.*	4b ff ff e1 	bl	.* <\.__tls_get_addr>
.*	e8 41 00 28 	ld	r2,40\(r1\)
.*	38 62 80 08 	addi	r3,r2,-32760
.*	4b ff ff d5 	bl	.* <\.__tls_get_addr>
.*	e8 41 00 28 	ld	r2,40\(r1\)
.*	38 62 80 48 	addi	r3,r2,-32696
.*	4b ff ff c9 	bl	.* <\.__tls_get_addr>
.*	e8 41 00 28 	ld	r2,40\(r1\)
.*	38 62 80 08 	addi	r3,r2,-32760
.*	4b ff ff bd 	bl	.* <\.__tls_get_addr>
.*	e8 41 00 28 	ld	r2,40\(r1\)
.*	39 23 80 40 	addi	r9,r3,-32704
.*	3d 23 00 00 	addis	r9,r3,0
.*	81 49 80 48 	lwz	r10,-32696\(r9\)
.*	e9 22 80 40 	ld	r9,-32704\(r2\)
.*	7d 49 18 2a 	ldx	r10,r9,r3
.*	e9 22 80 58 	ld	r9,-32680\(r2\)
.*	7d 49 6a 2e 	lhzx	r10,r9,r13
.*	89 4d 00 00 	lbz	r10,0\(r13\)
.*	3d 2d 00 00 	addis	r9,r13,0
.*	99 49 00 00 	stb	r10,0\(r9\)
.*	38 62 80 18 	addi	r3,r2,-32744
.*	4b ff ff 89 	bl	.* <\.__tls_get_addr>
.*	e8 41 00 28 	ld	r2,40\(r1\)
.*	38 62 80 08 	addi	r3,r2,-32760
.*	4b ff ff 7d 	bl	.* <\.__tls_get_addr>
.*	e8 41 00 28 	ld	r2,40\(r1\)
.*	f9 43 80 08 	std	r10,-32760\(r3\)
.*	3d 23 00 00 	addis	r9,r3,0
.*	91 49 80 10 	stw	r10,-32752\(r9\)
.*	e9 22 80 28 	ld	r9,-32728\(r2\)
.*	7d 49 19 2a 	stdx	r10,r9,r3
.*	e9 22 80 58 	ld	r9,-32680\(r2\)
.*	7d 49 6b 2e 	sthx	r10,r9,r13
.*	e9 4d 00 02 	lwa	r10,0\(r13\)
.*	3d 2d 00 00 	addis	r9,r13,0
.*	a9 49 00 00 	lha	r10,0\(r9\)
.*	7d 89 02 a6 	mfctr	r12
.*	78 0b 1f 24 	rldicr	r11,r0,3,60
.*	34 40 80 00 	addic\.	r2,r0,-32768
.*	7d 8b 60 50 	subf	r12,r11,r12
.*	7c 42 fe 76 	sradi	r2,r2,63
.*	78 0b 17 64 	rldicr	r11,r0,2,61
.*	7c 42 58 38 	and	r2,r2,r11
.*	7d 8b 60 50 	subf	r12,r11,r12
.*	7d 8c 12 14 	add	r12,r12,r2
.*	3d 8c 00 01 	addis	r12,r12,1
.*	e9 6c 01 f4 	ld	r11,500\(r12\)
.*	39 8c 01 f4 	addi	r12,r12,500
.*	e8 4c 00 08 	ld	r2,8\(r12\)
.*	7d 69 03 a6 	mtctr	r11
.*	e9 6c 00 10 	ld	r11,16\(r12\)
d75 2
a76 2
.*	38 00 00 00 	li	r0,0
.*	4b ff ff bc 	b	.*
@


1.3.6.1
log
@opcodes/
	* ppc-dis.c (print_insn_powerpc): Don't print tabs.  Handle
	PPC_OPERANDS_GPR_0.
	* ppc-opc.c (RA0): Define.
	(RAQ, RAL, RAM, RAS, RSQ, RTQ, RSO): Use PPC_OPERAND_GPR_0.
	(RAOPT): Rename from RAO.  Update all uses.
	(powerpc_opcodes): Use RA0 as appropriate.  Add "lsdx", "lsdi",
	"stsdx", "stsdi", "lmd" and "stmd" insns.

include/opcode/
	* ppc.h (PPC_OPERAND_GPR_0): Define.  Bump other operand defines.

gas/testsuite/
	Update gas/ppc/.

ld/testsuite/
	Update ld-powerpc/.
@
text
@d12 6
a17 6
.*	3d 82 00 00 	addis   r12,r2,0
.*	f8 41 00 28 	std     r2,40\(r1\)
.*	e9 6c 80 78 	ld      r11,-32648\(r12\)
.*	e8 4c 80 80 	ld      r2,-32640\(r12\)
.*	7d 69 03 a6 	mtctr   r11
.*	e9 6c 80 88 	ld      r11,-32632\(r12\)
d21 53
a73 53
.*	38 62 80 30 	addi    r3,r2,-32720
.*	4b ff ff e1 	bl      .* <\.__tls_get_addr>
.*	e8 41 00 28 	ld      r2,40\(r1\)
.*	38 62 80 08 	addi    r3,r2,-32760
.*	4b ff ff d5 	bl      .* <\.__tls_get_addr>
.*	e8 41 00 28 	ld      r2,40\(r1\)
.*	38 62 80 48 	addi    r3,r2,-32696
.*	4b ff ff c9 	bl      .* <\.__tls_get_addr>
.*	e8 41 00 28 	ld      r2,40\(r1\)
.*	38 62 80 08 	addi    r3,r2,-32760
.*	4b ff ff bd 	bl      .* <\.__tls_get_addr>
.*	e8 41 00 28 	ld      r2,40\(r1\)
.*	39 23 80 40 	addi    r9,r3,-32704
.*	3d 23 00 00 	addis   r9,r3,0
.*	81 49 80 48 	lwz     r10,-32696\(r9\)
.*	e9 22 80 40 	ld      r9,-32704\(r2\)
.*	7d 49 18 2a 	ldx     r10,r9,r3
.*	e9 22 80 58 	ld      r9,-32680\(r2\)
.*	7d 49 6a 2e 	lhzx    r10,r9,r13
.*	89 4d 00 00 	lbz     r10,0\(r13\)
.*	3d 2d 00 00 	addis   r9,r13,0
.*	99 49 00 00 	stb     r10,0\(r9\)
.*	38 62 80 18 	addi    r3,r2,-32744
.*	4b ff ff 89 	bl      .* <\.__tls_get_addr>
.*	e8 41 00 28 	ld      r2,40\(r1\)
.*	38 62 80 08 	addi    r3,r2,-32760
.*	4b ff ff 7d 	bl      .* <\.__tls_get_addr>
.*	e8 41 00 28 	ld      r2,40\(r1\)
.*	f9 43 80 08 	std     r10,-32760\(r3\)
.*	3d 23 00 00 	addis   r9,r3,0
.*	91 49 80 10 	stw     r10,-32752\(r9\)
.*	e9 22 80 28 	ld      r9,-32728\(r2\)
.*	7d 49 19 2a 	stdx    r10,r9,r3
.*	e9 22 80 58 	ld      r9,-32680\(r2\)
.*	7d 49 6b 2e 	sthx    r10,r9,r13
.*	e9 4d 00 02 	lwa     r10,0\(r13\)
.*	3d 2d 00 00 	addis   r9,r13,0
.*	a9 49 00 00 	lha     r10,0\(r9\)
.*	7d 89 02 a6 	mfctr   r12
.*	78 0b 1f 24 	rldicr  r11,r0,3,60
.*	34 40 80 00 	addic\.  r2,r0,-32768
.*	7d 8b 60 50 	subf    r12,r11,r12
.*	7c 42 fe 76 	sradi   r2,r2,63
.*	78 0b 17 64 	rldicr  r11,r0,2,61
.*	7c 42 58 38 	and     r2,r2,r11
.*	7d 8b 60 50 	subf    r12,r11,r12
.*	7d 8c 12 14 	add     r12,r12,r2
.*	3d 8c 00 01 	addis   r12,r12,1
.*	e9 6c 01 f4 	ld      r11,500\(r12\)
.*	39 8c 01 f4 	addi    r12,r12,500
.*	e8 4c 00 08 	ld      r2,8\(r12\)
.*	7d 69 03 a6 	mtctr   r11
.*	e9 6c 00 10 	ld      r11,16\(r12\)
d75 2
a76 2
.*	38 00 00 00 	li      r0,0
.*	4b ff ff bc 	b       .*
@


1.2
log
@	* ld-elfvsb/elfvsb.exp: Run for powerpc64 too.
	* ld-powerpc/tls.t: Update.
	* ld-powerpc/tlsexe.d: Update.
	* ld-powerpc/tlsexe.r: Update.
	* ld-powerpc/tlsexetoc.d: Update.
	* ld-powerpc/tlsexetoc.r: Update.
	* ld-powerpc/tlsexetoc.t: Update.
	* ld-powerpc/tlsso.d: Update.
	* ld-powerpc/tlsso.g: Update.
	* ld-powerpc/tlsso.r: Update.
	* ld-powerpc/tlsso.t: Update.
	* ld-powerpc/tlstocso.d: Update.
	* ld-powerpc/tlstocso.g: Update.
	* ld-powerpc/tlstocso.r: Update.
	* ld-powerpc/tlstocso.t: Update.
@
text
@d56 1
a56 1
.*	e9 4d 90 2a 	lwa	r10,-28632\(r13\)
d58 1
a58 1
.*	a9 49 90 30 	lha	r10,-28624\(r9\)
@


1.1
log
@new ppc64 tls tests
@
text
@d11 8
a18 8
0+718 <\.__tls_get_addr>:
 718:	3d 82 00 00 	addis	r12,r2,0
 71c:	f8 41 00 28 	std	r2,40\(r1\)
 720:	e9 6c 80 78 	ld	r11,-32648\(r12\)
 724:	e8 4c 80 80 	ld	r2,-32640\(r12\)
 728:	7d 69 03 a6 	mtctr	r11
 72c:	e9 6c 80 88 	ld	r11,-32632\(r12\)
 730:	4e 80 04 20 	bctr
d20 57
a76 49
0+734 <_start>:
 734:	38 62 80 30 	addi	r3,r2,-32720
 738:	4b ff ff e1 	bl	718 <\.__tls_get_addr>
 73c:	e8 41 00 28 	ld	r2,40\(r1\)
 740:	38 62 80 08 	addi	r3,r2,-32760
 744:	4b ff ff d5 	bl	718 <\.__tls_get_addr>
 748:	e8 41 00 28 	ld	r2,40\(r1\)
 74c:	38 62 80 48 	addi	r3,r2,-32696
 750:	4b ff ff c9 	bl	718 <\.__tls_get_addr>
 754:	e8 41 00 28 	ld	r2,40\(r1\)
 758:	38 62 80 08 	addi	r3,r2,-32760
 75c:	4b ff ff bd 	bl	718 <\.__tls_get_addr>
 760:	e8 41 00 28 	ld	r2,40\(r1\)
 764:	39 23 80 40 	addi	r9,r3,-32704
 768:	3d 23 00 00 	addis	r9,r3,0
 76c:	81 49 80 48 	lwz	r10,-32696\(r9\)
 770:	e9 22 80 40 	ld	r9,-32704\(r2\)
 774:	7d 49 18 2a 	ldx	r10,r9,r3
 778:	e9 22 80 58 	ld	r9,-32680\(r2\)
 77c:	7d 49 6a 2e 	lhzx	r10,r9,r13
 780:	89 4d 00 00 	lbz	r10,0\(r13\)
 784:	3d 2d 00 00 	addis	r9,r13,0
 788:	99 49 00 00 	stb	r10,0\(r9\)
 78c:	38 62 80 18 	addi	r3,r2,-32744
 790:	4b ff ff 89 	bl	718 <\.__tls_get_addr>
 794:	e8 41 00 28 	ld	r2,40\(r1\)
 798:	38 62 80 08 	addi	r3,r2,-32760
 79c:	4b ff ff 7d 	bl	718 <\.__tls_get_addr>
 7a0:	e8 41 00 28 	ld	r2,40\(r1\)
 7a4:	f9 43 80 08 	std	r10,-32760\(r3\)
 7a8:	3d 23 00 00 	addis	r9,r3,0
 7ac:	91 49 80 10 	stw	r10,-32752\(r9\)
 7b0:	e9 22 80 28 	ld	r9,-32728\(r2\)
 7b4:	7d 49 19 2a 	stdx	r10,r9,r3
 7b8:	e9 22 80 58 	ld	r9,-32680\(r2\)
 7bc:	7d 49 6b 2e 	sthx	r10,r9,r13
 7c0:	e9 4d 90 2a 	lwa	r10,-28632\(r13\)
 7c4:	3d 2d 00 00 	addis	r9,r13,0
 7c8:	a9 49 90 30 	lha	r10,-28624\(r9\)
 7cc:	e8 41 00 28 	ld	r2,40\(r1\)
 7d0:	3d 82 00 00 	addis	r12,r2,0
 7d4:	e9 6c 80 60 	ld	r11,-32672\(r12\)
 7d8:	e8 4c 80 68 	ld	r2,-32664\(r12\)
 7dc:	7d 69 03 a6 	mtctr	r11
 7e0:	e9 6c 80 70 	ld	r11,-32656\(r12\)
 7e4:	4e 80 04 20 	bctr
 7e8:	60 00 00 00 	nop
 7ec:	38 00 00 00 	li	r0,0
 7f0:	4b ff ff dc 	b	7cc <_start\+0x98>
@

