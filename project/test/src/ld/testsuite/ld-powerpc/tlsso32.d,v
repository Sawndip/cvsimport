head	1.17;
access;
symbols
	binutils-2_24-branch:1.17.0.2
	binutils-2_24-branchpoint:1.17
	binutils-2_21_1:1.15
	binutils-2_23_2:1.16.2.1
	binutils-2_23_1:1.16
	binutils-2_23:1.16
	binutils-2_23-branch:1.16.0.2
	binutils-2_23-branchpoint:1.16
	binutils-2_22_branch:1.15.0.16
	binutils-2_22:1.15
	binutils-2_22-branch:1.15.0.14
	binutils-2_22-branchpoint:1.15
	binutils-2_21:1.15
	binutils-2_21-branch:1.15.0.12
	binutils-2_21-branchpoint:1.15
	binutils-2_20_1:1.15
	binutils-2_20:1.15
	binutils-arc-20081103-branch:1.15.0.10
	binutils-arc-20081103-branchpoint:1.15
	binutils-2_20-branch:1.15.0.8
	binutils-2_20-branchpoint:1.15
	dje-cgen-play1-branch:1.15.0.6
	dje-cgen-play1-branchpoint:1.15
	arc-20081103-branch:1.15.0.4
	arc-20081103-branchpoint:1.15
	binutils-2_19_1:1.15
	binutils-2_19:1.15
	binutils-2_19-branch:1.15.0.2
	binutils-2_19-branchpoint:1.15
	binutils-2_18:1.14
	binutils-2_18-branch:1.14.0.2
	binutils-2_18-branchpoint:1.14
	binutils-csl-coldfire-4_1-32:1.12.2.1
	binutils-csl-sourcerygxx-4_1-32:1.12.2.1
	binutils-csl-innovasic-fido-3_4_4-33:1.12.2.1
	binutils-csl-sourcerygxx-3_4_4-32:1.7.2.1
	binutils-csl-coldfire-4_1-30:1.12
	binutils-csl-sourcerygxx-4_1-30:1.12
	binutils-csl-coldfire-4_1-28:1.12
	binutils-csl-sourcerygxx-4_1-29:1.12.2.1
	binutils-csl-sourcerygxx-4_1-28:1.12
	binutils-csl-arm-2006q3-27:1.12
	binutils-csl-sourcerygxx-4_1-27:1.12
	binutils-csl-arm-2006q3-26:1.12
	binutils-csl-sourcerygxx-4_1-26:1.12
	binutils-csl-sourcerygxx-4_1-25:1.12
	binutils-csl-sourcerygxx-4_1-24:1.12
	binutils-csl-sourcerygxx-4_1-23:1.12
	binutils-csl-sourcerygxx-4_1-21:1.12
	binutils-csl-arm-2006q3-21:1.12
	binutils-csl-sourcerygxx-4_1-22:1.12
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.12
	binutils-csl-sourcerygxx-4_1-20:1.12
	binutils-csl-arm-2006q3-19:1.12
	binutils-csl-sourcerygxx-4_1-19:1.12
	binutils-csl-sourcerygxx-4_1-18:1.12
	binutils-csl-renesas-4_1-9:1.12
	binutils-csl-sourcerygxx-3_4_4-25:1.7.2.1
	binutils-csl-renesas-4_1-8:1.12
	binutils-csl-renesas-4_1-7:1.12
	binutils-csl-renesas-4_1-6:1.12
	binutils-csl-sourcerygxx-4_1-17:1.12
	binutils-csl-sourcerygxx-4_1-14:1.12
	binutils-csl-sourcerygxx-4_1-15:1.12
	binutils-csl-sourcerygxx-4_1-13:1.12
	binutils-2_17:1.12
	binutils-csl-sourcerygxx-4_1-12:1.12
	binutils-csl-sourcerygxx-3_4_4-21:1.12
	binutils-csl-wrs-linux-3_4_4-24:1.7.2.1
	binutils-csl-wrs-linux-3_4_4-23:1.7.2.1
	binutils-csl-sourcerygxx-4_1-9:1.12
	binutils-csl-sourcerygxx-4_1-8:1.12
	binutils-csl-sourcerygxx-4_1-7:1.12
	binutils-csl-arm-2006q1-6:1.12
	binutils-csl-sourcerygxx-4_1-6:1.12
	binutils-csl-wrs-linux-3_4_4-22:1.7.2.1
	binutils-csl-coldfire-4_1-11:1.12
	binutils-csl-sourcerygxx-3_4_4-19:1.12
	binutils-csl-coldfire-4_1-10:1.12
	binutils-csl-sourcerygxx-4_1-5:1.12
	binutils-csl-sourcerygxx-4_1-4:1.12
	binutils-csl-wrs-linux-3_4_4-21:1.7.2.1
	binutils-csl-morpho-4_1-4:1.12
	binutils-csl-sourcerygxx-3_4_4-17:1.12
	binutils-csl-wrs-linux-3_4_4-20:1.7.2.1
	binutils-2_17-branch:1.12.0.4
	binutils-2_17-branchpoint:1.12
	binutils-csl-2_17-branch:1.12.0.2
	binutils-csl-2_17-branchpoint:1.12
	binutils-csl-gxxpro-3_4-branch:1.7.2.1.0.4
	binutils-csl-gxxpro-3_4-branchpoint:1.7.2.1
	binutils-2_16_1:1.7.2.1
	binutils-csl-arm-2005q1b:1.7.2.1
	binutils-2_16:1.7.2.1
	binutils-csl-arm-2005q1a:1.7.2.1
	binutils-csl-arm-2005q1-branch:1.7.2.1.0.2
	binutils-csl-arm-2005q1-branchpoint:1.7.2.1
	binutils-2_16-branch:1.7.0.2
	binutils-2_16-branchpoint:1.7
	csl-arm-2004-q3d:1.7
	csl-arm-2004-q3:1.6
	binutils-2_15:1.3.6.1
	binutils-2_15-branchpoint:1.3
	csl-arm-2004-q1a:1.5
	csl-arm-2004-q1:1.4
	binutils-2_15-branch:1.3.0.6
	cagney_bfdfile-20040213-branch:1.3.0.4
	cagney_bfdfile-20040213-branchpoint:1.3
	cagney_bigcore-20040122-branch:1.3.0.2
	cagney_bigcore-20040122-branchpoint:1.3
	csl-arm-2003-q4:1.3
	binutils-2_14:1.1
	binutils-2_14-branch:1.1.0.2
	binutils-2_14-branchpoint:1.1
	binutils_latest_snapshot:1.17;
locks; strict;
comment	@# @;


1.17
date	2012.10.29.09.25.53;	author amodra;	state Exp;
branches;
next	1.16;

1.16
date	2012.05.17.02.43.35;	author amodra;	state Exp;
branches
	1.16.2.1;
next	1.15;

1.15
date	2007.11.06.03.59.16;	author amodra;	state Exp;
branches;
next	1.14;

1.14
date	2006.10.17.13.41.48;	author amodra;	state Exp;
branches;
next	1.13;

1.13
date	2006.07.10.21.40.25;	author jakub;	state Exp;
branches;
next	1.12;

1.12
date	2005.08.15.15.39.47;	author amodra;	state Exp;
branches
	1.12.2.1;
next	1.11;

1.11
date	2005.07.08.06.22.04;	author amodra;	state Exp;
branches;
next	1.10;

1.10
date	2005.05.07.02.55.55;	author amodra;	state Exp;
branches;
next	1.9;

1.9
date	2005.03.21.13.56.57;	author amodra;	state Exp;
branches;
next	1.8;

1.8
date	2005.03.16.02.41.28;	author amodra;	state Exp;
branches;
next	1.7;

1.7
date	2004.11.02.05.40.05;	author hp;	state Exp;
branches
	1.7.2.1;
next	1.6;

1.6
date	2004.05.11.17.08.36;	author jakub;	state Exp;
branches;
next	1.5;

1.5
date	2004.04.24.12.41.02;	author amodra;	state Exp;
branches;
next	1.4;

1.4
date	2004.03.16.00.58.43;	author amodra;	state Exp;
branches;
next	1.3;

1.3
date	2003.11.19.03.46.08;	author amodra;	state Exp;
branches
	1.3.6.1;
next	1.2;

1.2
date	2003.07.26.10.22.01;	author amodra;	state Exp;
branches;
next	1.1;

1.1
date	2003.02.18.06.11.32;	author amodra;	state Exp;
branches;
next	;

1.16.2.1
date	2013.01.21.13.48.52;	author amodra;	state Exp;
branches;
next	;

1.12.2.1
date	2006.11.29.16.31.09;	author shinwell;	state Exp;
branches;
next	;

1.7.2.1
date	2005.03.16.02.42.27;	author amodra;	state Exp;
branches;
next	;

1.3.6.1
date	2004.03.16.00.59.35;	author amodra;	state Exp;
branches;
next	;


desc
@@


1.17
log
@	* ld-powerpc/powerpc.exp: Modify emulation option passed to ld
	when little-endian.
	* ld-powerpc/apuinfo-nul.rd: Update for le output.
	* ld-powerpc/apuinfo.rd: Likewise.
	* ld-powerpc/plt1.d: Likewise.
	* ld-powerpc/relax.d: Likewise.
	* ld-powerpc/relaxr.d: Likewise.
	* ld-powerpc/sdadyn.d: Likewise.
	* ld-powerpc/tls.d: Likewise.
	* ld-powerpc/tls.g: Likewise.
	* ld-powerpc/tls.t: Likewise.
	* ld-powerpc/tls32.d: Likewise.
	* ld-powerpc/tls32.g: Likewise.
	* ld-powerpc/tls32.t: Likewise.
	* ld-powerpc/tlsexe.d: Likewise.
	* ld-powerpc/tlsexe.g: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexe.t: Likewise.
	* ld-powerpc/tlsexe32.d: Likewise.
	* ld-powerpc/tlsexe32.g: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsexe32.t: Likewise.
	* ld-powerpc/tlsexetoc.d: Likewise.
	* ld-powerpc/tlsexetoc.g: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsexetoc.t: Likewise.
	* ld-powerpc/tlsmark.d: Likewise.
	* ld-powerpc/tlsmark32.d: Likewise.
	* ld-powerpc/tlsopt1.d: Likewise.
	* ld-powerpc/tlsopt1_32.d: Likewise.
	* ld-powerpc/tlsopt2.d: Likewise.
	* ld-powerpc/tlsopt2_32.d: Likewise.
	* ld-powerpc/tlsopt3.d: Likewise.
	* ld-powerpc/tlsopt3_32.d: Likewise.
	* ld-powerpc/tlsopt4.d: Likewise.
	* ld-powerpc/tlsopt4_32.d: Likewise.
	* ld-powerpc/tlsso.d: Likewise.
	* ld-powerpc/tlsso.g: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso.t: Likewise.
	* ld-powerpc/tlsso32.d: Likewise.
	* ld-powerpc/tlsso32.g: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlsso32.t: Likewise.
	* ld-powerpc/tlstoc.d: Likewise.
	* ld-powerpc/tlstoc.g: Likewise.
	* ld-powerpc/tlstoc.t: Likewise.
	* ld-powerpc/tlstocso.d: Likewise.
	* ld-powerpc/tlstocso.g: Likewise.
	* ld-powerpc/tlstocso.t: Likewise.
	* ld-powerpc/tocopt.out: Likewise.
@
text
@#source: tls32.s
#as: -a32
#ld: -shared
#objdump: -dr
#target: powerpc*-*-*

.*

Disassembly of section \.text:

.* <_start>:
.*:	(38 7f ff e0|e0 ff 7f 38) 	addi    r3,r31,-32
.*:	(48 00 00 01|01 00 00 48) 	bl      .*
.*:	(38 7f ff f4|f4 ff 7f 38) 	addi    r3,r31,-12
.*:	(48 00 00 01|01 00 00 48) 	bl      .*
.*:	(38 7f ff e8|e8 ff 7f 38) 	addi    r3,r31,-24
.*:	(48 01 01 95|95 01 01 48) 	bl      .*<__tls_get_addr@@plt>
.*:	(38 7f ff f4|f4 ff 7f 38) 	addi    r3,r31,-12
.*:	(48 01 01 8d|8d 01 01 48) 	bl      .*<__tls_get_addr@@plt>
.*:	(39 23 80 20|20 80 23 39) 	addi    r9,r3,-32736
.*:	(3d 23 00 00|00 00 23 3d) 	addis   r9,r3,0
.*:	(81 49 80 24|24 80 49 81) 	lwz     r10,-32732\(r9\)
.*:	(81 3f ff f0|f0 ff 3f 81) 	lwz     r9,-16\(r31\)
.*:	(7d 49 12 2e|2e 12 49 7d) 	lhzx    r10,r9,r2
.*:	(89 42 00 00|00 00 42 89) 	lbz     r10,0\(r2\)
.*:	(3d 22 00 00|00 00 22 3d) 	addis   r9,r2,0
.*:	(99 49 00 00|00 00 49 99) 	stb     r10,0\(r9\)
.*:	(38 7e ff d8|d8 ff 7e 38) 	addi    r3,r30,-40
.*:	(48 00 00 01|01 00 00 48) 	bl      .*
.*:	(38 7e ff f4|f4 ff 7e 38) 	addi    r3,r30,-12
.*:	(48 00 00 01|01 00 00 48) 	bl      .*
.*:	(91 43 80 04|04 80 43 91) 	stw     r10,-32764\(r3\)
.*:	(3d 23 00 00|00 00 23 3d) 	addis   r9,r3,0
.*:	(91 49 80 08|08 80 49 91) 	stw     r10,-32760\(r9\)
.*:	(81 3e ff f0|f0 ff 3e 81) 	lwz     r9,-16\(r30\)
.*:	(7d 49 13 2e|2e 13 49 7d) 	sthx    r10,r9,r2
.*:	(a1 42 00 00|00 00 42 a1) 	lhz     r10,0\(r2\)
.*:	(3d 22 00 00|00 00 22 3d) 	addis   r9,r2,0
.*:	(a9 49 00 00|00 00 49 a9) 	lha     r10,0\(r9\)
Disassembly of section \.got:

.* <_GLOBAL_OFFSET_TABLE_-0x28>:
#...
.*:	(4e 80 00 21|21 00 80 4e) 	blrl
.* <_GLOBAL_OFFSET_TABLE_>:
.*:	(00 01 03 ec|ec 03 01 00) .*
#pass
@


1.16
log
@bfd/
	* elf32-ppc.c (ppc_elf_finish_dynamic_symbol): Don't make _DYNAMIC,
	_GLOBAL_OFFSET_TABLE_ or _PROCEDURE_LINKAGE_TABLE_ absolute.
	* elf64-ppc.c (ppc64_elf_finish_dynamic_symbol): Don't make _DYNAMIC
	absolute.
ld/testsuite/
	* ld-powerpc/tlsso.r: Update for dynamic sym changes.
	* ld-powerpc/tlsso32.d: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
@
text
@d3 1
a3 1
#ld: -shared -melf32ppc
d7 1
a7 1
.*: +file format elf32-powerpc
d12 28
a39 28
.*:	38 7f ff e0 	addi    r3,r31,-32
.*:	48 00 00 01 	bl      .*
.*:	38 7f ff f4 	addi    r3,r31,-12
.*:	48 00 00 01 	bl      .*
.*:	38 7f ff e8 	addi    r3,r31,-24
.*:	48 01 01 95 	bl      .*<__tls_get_addr@@plt>
.*:	38 7f ff f4 	addi    r3,r31,-12
.*:	48 01 01 8d 	bl      .*<__tls_get_addr@@plt>
.*:	39 23 80 20 	addi    r9,r3,-32736
.*:	3d 23 00 00 	addis   r9,r3,0
.*:	81 49 80 24 	lwz     r10,-32732\(r9\)
.*:	81 3f ff f0 	lwz     r9,-16\(r31\)
.*:	7d 49 12 2e 	lhzx    r10,r9,r2
.*:	89 42 00 00 	lbz     r10,0\(r2\)
.*:	3d 22 00 00 	addis   r9,r2,0
.*:	99 49 00 00 	stb     r10,0\(r9\)
.*:	38 7e ff d8 	addi    r3,r30,-40
.*:	48 00 00 01 	bl      .*
.*:	38 7e ff f4 	addi    r3,r30,-12
.*:	48 00 00 01 	bl      .*
.*:	91 43 80 04 	stw     r10,-32764\(r3\)
.*:	3d 23 00 00 	addis   r9,r3,0
.*:	91 49 80 08 	stw     r10,-32760\(r9\)
.*:	81 3e ff f0 	lwz     r9,-16\(r30\)
.*:	7d 49 13 2e 	sthx    r10,r9,r2
.*:	a1 42 00 00 	lhz     r10,0\(r2\)
.*:	3d 22 00 00 	addis   r9,r2,0
.*:	a9 49 00 00 	lha     r10,0\(r9\)
d44 1
a44 1
.*:	4e 80 00 21 	blrl
d46 1
a46 1
.*:	00 01 03 ec .*
@


1.16.2.1
log
@	PR 12549
	PR 14493
	PR 14567
	PR 14662
	PR 14758
	PR 14813
	PR 14904
	PR 14915
	PR 14926
	PR 14950
	PR 14962
	Apply mainline patches
@
text
@d3 1
a3 1
#ld: -shared
d7 1
a7 1
.*
d12 28
a39 28
.*:	(38 7f ff e0|e0 ff 7f 38) 	addi    r3,r31,-32
.*:	(48 00 00 01|01 00 00 48) 	bl      .*
.*:	(38 7f ff f4|f4 ff 7f 38) 	addi    r3,r31,-12
.*:	(48 00 00 01|01 00 00 48) 	bl      .*
.*:	(38 7f ff e8|e8 ff 7f 38) 	addi    r3,r31,-24
.*:	(48 01 01 95|95 01 01 48) 	bl      .*<__tls_get_addr@@plt>
.*:	(38 7f ff f4|f4 ff 7f 38) 	addi    r3,r31,-12
.*:	(48 01 01 8d|8d 01 01 48) 	bl      .*<__tls_get_addr@@plt>
.*:	(39 23 80 20|20 80 23 39) 	addi    r9,r3,-32736
.*:	(3d 23 00 00|00 00 23 3d) 	addis   r9,r3,0
.*:	(81 49 80 24|24 80 49 81) 	lwz     r10,-32732\(r9\)
.*:	(81 3f ff f0|f0 ff 3f 81) 	lwz     r9,-16\(r31\)
.*:	(7d 49 12 2e|2e 12 49 7d) 	lhzx    r10,r9,r2
.*:	(89 42 00 00|00 00 42 89) 	lbz     r10,0\(r2\)
.*:	(3d 22 00 00|00 00 22 3d) 	addis   r9,r2,0
.*:	(99 49 00 00|00 00 49 99) 	stb     r10,0\(r9\)
.*:	(38 7e ff d8|d8 ff 7e 38) 	addi    r3,r30,-40
.*:	(48 00 00 01|01 00 00 48) 	bl      .*
.*:	(38 7e ff f4|f4 ff 7e 38) 	addi    r3,r30,-12
.*:	(48 00 00 01|01 00 00 48) 	bl      .*
.*:	(91 43 80 04|04 80 43 91) 	stw     r10,-32764\(r3\)
.*:	(3d 23 00 00|00 00 23 3d) 	addis   r9,r3,0
.*:	(91 49 80 08|08 80 49 91) 	stw     r10,-32760\(r9\)
.*:	(81 3e ff f0|f0 ff 3e 81) 	lwz     r9,-16\(r30\)
.*:	(7d 49 13 2e|2e 13 49 7d) 	sthx    r10,r9,r2
.*:	(a1 42 00 00|00 00 42 a1) 	lhz     r10,0\(r2\)
.*:	(3d 22 00 00|00 00 22 3d) 	addis   r9,r2,0
.*:	(a9 49 00 00|00 00 49 a9) 	lha     r10,0\(r9\)
d44 1
a44 1
.*:	(4e 80 00 21|21 00 80 4e) 	blrl
d46 1
a46 1
.*:	(00 01 03 ec|ec 03 01 00) .*
@


1.15
log
@bfd/
	* elf32-ppc.c (ppc_elf_check_relocs): Don't refcount tlsld_got here..
	(ppc_elf_gc_sweep_hook): ..or here..
	(ppc_elf_tls_optimize): ..or here.  Make two passes through the
	relocs, ensuring that tls_get_addr calls follow gd and ld relocs.
	(allocate_dynrelocs): Refcount tlsld_got here.
	(ppc_elf_size_dynamic_sections): Call allocate_dynrelocs before
	allocating tlsld_got.
	(ppc_elf_relocate_section): Remove check that a tls_get_addr
	call follows gd and ld relocs.
ld/testsuite/
	* ld-powerpc/tlsso32.d: Update for changed got alloc order.
@
text
@d42 2
a43 2
.* <\.got>:
	\.\.\.
d45 3
a47 2
.*:	00 01 03 ec 	.*
	\.\.\.
@


1.14
log
@bfd/
	* elf-bfd.h (struct elf_link_hash_table): Reorder.  Add
	text_index_section and data_index_section.
	(struct elf_backend_data): Add elf_backend_init_index_section.
	(_bfd_elf_init_1_index_section): Declare.
	(_bfd_elf_init_2_index_sections): Declare.
	* elfxx-target.h (elf_backend_init_index_section): Define.
	(elfNN_bed): Init new field.
	* elflink.c (_bfd_elf_link_omit_section_dynsym): Keep first tls
	section and text_index_section plus data_index_section.
	(_bfd_elf_link_renumber_dynsyms): Clear dynindx on omitted sections.
	(_bfd_elf_init_1_index_section): New function.
	(_bfd_elf_init_2_index_sections): New function.
	(bfd_elf_size_dynsym_hash_dynstr): Call elf_backend_init_index_section.
	(elf_link_input_bfd): When emitting relocs, use text_index_section
	and data_index_section for removed sections.
	* elf-m10300.c (elf_backend_omit_section_dynsym): Define.
	* elf32-i386.c: Likewise.
	* elf32-m32r.c: Likewise.
	* elf32-sh.c: Likewise.
	* elf32-xstormy16.c: Likewise.
	* elf32-xtensa.c: Likewise.
	* elf64-alpha.c: Likewise.
	* elf64-hppa.c: Likewise.
	* elf64-mmix.c: Likewise.
	* elf64-sh64.c: Likewise.
	* elfxx-ia64.c: Likewise.
	* elf32-arm.c (elf32_arm_final_link_relocate): Use text_index_section
	and data_index_section sym for relocs against sections with no dynamic
	section sym.
	(elf_backend_init_index_section): Define.
	* elf32-cris.c: Similarly.
	* elf32-hppa.c: Similarly.
	* elf32-i370.c: Similarly.
	* elf32-m68k.c: Similarly.
	* elf32-mips.c: Similarly.
	* elf32-ppc.c: Similarly.
	* elf32-s390.c: Similarly.
	* elf32-sparc.c: Similarly.
	* elf32-vax.c: Similarly.
	* elf64-mips.c: Similarly.
	* elf64-ppc.c: Similarly.
	* elf64-s390.c: Similarly.
	* elf64-sparc.c: Similarly.
	* elf64-x86-64.c: Similarly.
	* elfn32-mips.c: Similarly.
	* elfxx-mips.c: Similarly.
	* elfxx-sparc.c: Similarly.
	* linker.c (fix_syms): Base symbols in removed sections on
	previous section in preference to using absolute section.

ld/
	* ldlang.c (strip_excluded_output_sections): Do strip sections
	that define syms, but don't ignore them.
	* ld.texinfo (Output Section Discarding): Revise.
	* emultempl/armcoff.em (gld${EMULATION_NAME}_finish): Always call
	finish_default.

ld/testsuite/
	Update for section sym changes.
@
text
@d12 1
a12 1
.*:	38 7f ff e8 	addi    r3,r31,-24
d14 1
a14 1
.*:	38 7f ff e0 	addi    r3,r31,-32
d16 1
a16 1
.*:	38 7f ff f0 	addi    r3,r31,-16
d18 1
a18 1
.*:	38 7f ff e0 	addi    r3,r31,-32
d23 1
a23 1
.*:	81 3f ff f8 	lwz     r9,-8\(r31\)
d30 1
a30 1
.*:	38 7e ff e0 	addi    r3,r30,-32
d35 1
a35 1
.*:	81 3e ff f8 	lwz     r9,-8\(r30\)
@


1.13
log
@include/
	* bfdlink.h (struct bfd_link_info): Add emit_hash and
	emit_gnu_hash bitfields.
include/elf/
	* common.h (SHT_GNU_HASH, DT_GNU_HASH): Define.
ld/
	* scripttempl/elf.sc: Add .gnu.hash section.
	* emultempl/elf32.em (OPTION_HASH_STYLE): Define.
	(gld${EMULATION_NAME}_add_options): Register --hash-style option.
	(gld${EMULATION_NAME}_handle_option): Handle it.
	(gld${EMULATION_NAME}_list_options): Document it.
	* ldmain.c (main): Initialize emit_hash and emit_gnu_hash.
	* ld.texinfo: Document --hash-style option.
bfd/
	* elf.c (_bfd_elf_print_private_bfd_data): Handle DT_GNU_HASH.
	(bfd_section_from_shdr, elf_fake_sections, assign_section_numbers):
	Handle SHT_GNU_HASH.
	(special_sections_g): Include .gnu.hash section.
	(bfd_elf_gnu_hash): New function.
	* elf-bfd.h (bfd_elf_gnu_hash, _bfd_elf_hash_symbol): New prototypes.
	(struct elf_backend_data): Add elf_hash_symbol method.
	* elflink.c (_bfd_elf_link_create_dynamic_sections): Create .hash
	only if info->emit_hash, create .gnu.hash section if
	info->emit_gnu_hash.
	(struct collect_gnu_hash_codes): New type.
	(elf_collect_gnu_hash_codes, elf_renumber_gnu_hash_syms,
	_bfd_elf_hash_symbol): New functions.
	(compute_bucket_count): Don't compute HASHCODES array, instead add
	that and NSYMS as arguments.  Use bed->s->sizeof_hash_entry
	instead of bed->s->arch_size / 8.  Fix .hash size estimation.
	When not optimizing, use the number of hashed symbols rather than
	dynsymcount.
	(bfd_elf_size_dynamic_sections): Only add DT_HASH if info->emit_hash,
	and ADD DT_GNU_HASH if info->emit_gnu_hash.
	(bfd_elf_size_dynsym_hash_dynstr): Size .hash only if info->emit_hash,
	adjust compute_bucket_count caller.  Create and populate .gnu.hash
	section if info->emit_gnu_hash.
	(elf_link_output_extsym): Only populate .hash section if
	finfo->hash_sec != NULL.
	(bfd_elf_final_link): Adjust assertion.  Handle DT_GNU_HASH.
	* elfxx-target.h (elf_backend_hash_symbol): Define if not yet defined.
	(elfNN_bed): Add elf_backend_hash_symbol.
	* elf64-x86-64.c (elf64_x86_64_hash_symbol): New function.
	(elf_backend_hash_symbol): Define.
	* elf32-i386.c (elf_i386_hash_symbol): New function.
	(elf_backend_hash_symbol): Define.
binutils/
	* readelf.c (get_dynamic_type): Handle DT_GNU_HASH.
	(get_section_type_name): Handle SHT_GNU_HASH.
	(dynamic_info_DT_GNU_HASH): New variable.
	(process_dynamic_section): Handle DT_GNU_HASH.
	(process_symbol_table): Print also DT_GNU_HASH histogram.
ld/testsuite/
	* ld-powerpc/tlsso32.r: Adjust.
	* ld-powerpc/tlsso32.d: Adjust.
	* ld-powerpc/tlsso32.g: Adjust.
	* ld-powerpc/tlsso.r: Adjust.
	* ld-powerpc/tlsso.g: Adjust.
	* ld-powerpc/tlstocso.g: Adjust.
@
text
@d45 1
a45 1
.*:	00 01 04 00 	.*
@


1.12
log
@Adjust for dynamic sym changes.
@
text
@d45 1
a45 1
.*:	00 01 04 38 	.*
@


1.12.2.1
log
@        Backport from mainline:

        2006-07-29  Richard Sandiford  <richard@@codesourcery.com>

        ld/
        * Makefile.am (eelf32b4300.c): Update dependencies.
        (eelf32bmip.c): Likewise.
        (eelf32bsmip.c): Likewise.
        (eelf32btsmip.c): Likewise.
        (eelf32btsmipn32.c): Likewise.
        (eelf32ltsmip.c): Likewise.
        (eelf32ltsmipn32.c): Likewise.
        (eelf32ebmip.c): Likewise.
        (eelf32ebmipvxworks.c): Likewise.
        (eelf32elmip.c): Likewise.
        (eelf32elmipvxworks.c): Likewise.
        (eelf32bmipn32.c): Likewise.
        (eelf32lmip.c): Likewise.
        (eelf32mipswindiss.c): Likewise.
        (eelf32lsmip.c): Likewise.
        (eelf64bmip.c): Likewise.
        (eelf64btsmip.c): Likewise.
        (eelf64ltsmip.c): Likewise.
        (emipsbig.c): Likewise.  Canonicalize ${GENSCRIPTS} line.
        (emipsbsd.c): Likewise.
        (emipsidt.c): Update dependencies.
        (emipsidtl.c): Likewise.
        (emipslit.c): Likewise.
        (emipslnews.c): Likewise.
        (emipspe.c): Likewise.  Fix ${GENSCRIPTS} invocation.
        * Makefile.in: Regenerate.
        * emulparams/elf32bmip.sh (EXTRA_EM_FILE): Define.
        * emulparams/elf32bmipn32-defs.sh (EXTRA_EM_FILE): Likewise.
        * emultempl/irix.em: Include emultempl/mipself.em.
        * emultempl/mipself.em: New file.

        ld/testsuite/
        * ld-mips-elf/hash1.s, ld-mips-elf/hash1a.d,
        * ld-mips-elf/hash1b.d, ld-mips-elf/hash1c.d: New tests.
        * ld-mips-elf/mips-elf.exp: Run them.

        2006-07-14  Jakub Jelinek  <jakub@@redhat.com>

        * elflink.c (bfd_elf_size_dynsym_hash_dynstr): Fix cinfo.shift2 value.

        2006-07-10  Jakub Jelinek  <jakub@@redhat.com>

        include/
        * bfdlink.h (struct bfd_link_info): Add emit_hash and
        emit_gnu_hash bitfields.

        include/elf/
        * common.h (SHT_GNU_HASH, DT_GNU_HASH): Define.

        ld/
        * scripttempl/elf.sc: Add .gnu.hash section.
        * emultempl/elf32.em (OPTION_HASH_STYLE): Define.
        (gld${EMULATION_NAME}_add_options): Register --hash-style option.
        (gld${EMULATION_NAME}_handle_option): Handle it.
        (gld${EMULATION_NAME}_list_options): Document it.
        * ldmain.c (main): Initialize emit_hash and emit_gnu_hash.
        * ld.texinfo: Document --hash-style option.

        ld/testsuite/
        * ld-powerpc/tlsso32.r: Adjust.
        * ld-powerpc/tlsso32.d: Adjust.
        * ld-powerpc/tlsso32.g: Adjust.
        * ld-powerpc/tlsso.r: Adjust.
        * ld-powerpc/tlsso.g: Adjust.
        * ld-powerpc/tlstocso.g: Adjust.

        bfd/
        * elf.c (_bfd_elf_print_private_bfd_data): Handle DT_GNU_HASH.
        (bfd_section_from_shdr, elf_fake_sections, assign_section_numbers):
        Handle SHT_GNU_HASH.
        (special_sections_g): Include .gnu.hash section.
        (bfd_elf_gnu_hash): New function.
        * elf-bfd.h (bfd_elf_gnu_hash, _bfd_elf_hash_symbol): New prototypes.
        (struct elf_backend_data): Add elf_hash_symbol method.
        * elflink.c (_bfd_elf_link_create_dynamic_sections): Create .hash
        only if info->emit_hash, create .gnu.hash section if
        info->emit_gnu_hash.
        (struct collect_gnu_hash_codes): New type.
        (elf_collect_gnu_hash_codes, elf_renumber_gnu_hash_syms,
        _bfd_elf_hash_symbol): New functions.
        (compute_bucket_count): Don't compute HASHCODES array, instead add
        that and NSYMS as arguments.  Use bed->s->sizeof_hash_entry
        instead of bed->s->arch_size / 8.  Fix .hash size estimation.
        When not optimizing, use the number of hashed symbols rather than
        dynsymcount.
        (bfd_elf_size_dynamic_sections): Only add DT_HASH if info->emit_hash,
        and ADD DT_GNU_HASH if info->emit_gnu_hash.
        (bfd_elf_size_dynsym_hash_dynstr): Size .hash only if info->emit_hash,
        adjust compute_bucket_count caller.  Create and populate .gnu.hash
        section if info->emit_gnu_hash.
        (elf_link_output_extsym): Only populate .hash section if
        finfo->hash_sec != NULL.
        (bfd_elf_final_link): Adjust assertion.  Handle DT_GNU_HASH.
        * elfxx-target.h (elf_backend_hash_symbol): Define if not yet defined.
        (elfNN_bed): Add elf_backend_hash_symbol.
        * elf64-x86-64.c (elf64_x86_64_hash_symbol): New function.
        (elf_backend_hash_symbol): Define.
        * elf32-i386.c (elf_i386_hash_symbol): New function.
        (elf_backend_hash_symbol): Define.

        binutils/
        * readelf.c (get_dynamic_type): Handle DT_GNU_HASH.
        (get_section_type_name): Handle SHT_GNU_HASH.
        (dynamic_info_DT_GNU_HASH): New variable.
        (process_dynamic_section): Handle DT_GNU_HASH.
        (process_symbol_table): Print also DT_GNU_HASH histogram.
@
text
@d45 1
a45 1
.*:	00 01 04 00 	.*
@


1.11
log
@	* ld-cris/pv32.s: Give expobj a size.
	* ld-cris/pv32-1.d: Update.
	* ld-alpha/tlsbin.dd: Update for empty section removal change.
	* ld-alpha/tlsbin.sd: Likewise.
	* ld-alpha/tlsbin.td: Likewise.
	* ld-alpha/tlsbinr.dd: Likewise.
	* ld-alpha/tlsbinr.rd: Likewise.
	* ld-alpha/tlspic.dd: Likewise.
	* ld-alpha/tlspic.rd: Likewise.
	* ld-alpha/tlspic.sd: Likewise.
	* ld-alpha/tlspic.td: Likewise.
	* ld-arm/tls-lib.d: Likewise.
	* ld-arm/tls-lib.r: Likewise.
	* ld-cris/gotplt2.d: Likewise.
	* ld-cris/gotplt3.d: Likewise.
	* ld-cris/hiddef1.d: Likewise.
	* ld-cris/libdso-10.d: Likewise.
	* ld-cris/libdso-11.d: Likewise.
	* ld-cris/libdso-12.d: Likewise.
	* ld-cris/libdso-14.d: Likewise.
	* ld-cris/libdso-2.d: Likewise.
	* ld-i386/tlsnopic.dd: Likewise.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlsnopic.sd: Likewise.
	* ld-i386/tlspic.rd: Likewise.
	* ld-mmix/bpo-10.d: Likewise.
	* ld-mmix/bpo-22.d: Likewise.
	* ld-mmix/sec-7m.d: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.g: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso32.d: Likewise.
	* ld-powerpc/tlsso32.g: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlstocso.g: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
@
text
@d45 1
a45 1
.*:	00 01 04 54 	.*
@


1.10
log
@bfd/
	* elf-bfd.h (struct elf_backend_data): Remove got_symbol_offset.
	* elfxx-target.h (elf_backend_got_symbol_offset): Delete.
	* elflink.c (_bfd_elf_create_got_section): Use zero in place of
	got_symbol_offset.
	* elf-m10300.c (_bfd_mn10300_elf_create_got_section): Likewise.
	* elf32-frv.c (_frv_create_got_section): Likewise.
	* elf32-i370.c (i370_elf_finish_dynamic_sections): Delete ppc code.
	(elf_backend_got_symbol_offset): Don't define.
	* elf64-ppc.c (elf_backend_got_symbol_offset): Don't define.
	* elf32-ppc.c (struct ppc_elf_link_hash_table): Add got_header_size
	and got_gap.
	(ppc_elf_create_got): Tidy.
	(ppc_elf_create_dynamic_sections): Don't set SEC_IN_MEMORY for .plt.
	(ppc_elf_check_relocs): Reduce string comparisons by using elf.hgot.
	(ppc_elf_gc_sweep_hook): Likewise.
	(ppc_elf_relocate_section): Likewise.
	(ppc_elf_finish_dynamic_symbol): Likewise.
	(allocate_got): New function.
	(allocate_dynrelocs): Use allocate_got.
	(ppc_elf_size_dynamic_sections): Likewise.  Delay tlsld_got allocation
	so that local got can refcount it.  Set got_header_size.
	(ppc_elf_relocate_section): Use value of elf.hgot rather than hard-
	coded 4.
	(ppc_elf_finish_dynamic_sections): Likewise.
	(elf_backend_got_symbol_offset): Don't define.
	(elf_backend_got_header_size): Ditto.
ld/testsuite/
	* ld-powerpc/tlsexe32.d: Update for changed got layout.
	* ld-powerpc/tlsexe32.g: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsso32.d: Likewise.
	* ld-powerpc/tlsso32.g: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
@
text
@d45 1
a45 1
.*:	00 01 04 90 	.*
@


1.9
log
@bfd/
	* elf32-ppc.c (ppc_elf_add_symbol_hook): Make htab->sbss
	SEC_LINKER_CREATED.  Attach to dynobj.
	(ppc_elf_size_dynamic_sections): Strip htab->sbss if zero size.
ld/
	* scripttempl/elf.sc (SBSS): Don't provide sbss start and end syms.
ld/testsuite/
	* ld-powerpc/tlsexe32.r: Update.
	* ld-powerpc/tlsso32.d: Update.
	* ld-powerpc/tlsso32.g: Update.
	* ld-powerpc/tlsso32.r: Update.
@
text
@d12 1
a12 1
.*:	38 7f 00 1c 	addi    r3,r31,28
d14 1
a14 1
.*:	38 7f 00 0c 	addi    r3,r31,12
d16 1
a16 1
.*:	38 7f 00 24 	addi    r3,r31,36
d18 1
a18 1
.*:	38 7f 00 0c 	addi    r3,r31,12
d23 1
a23 1
.*:	81 3f 00 2c 	lwz     r9,44\(r31\)
d28 1
a28 1
.*:	38 7e 00 14 	addi    r3,r30,20
d30 1
a30 1
.*:	38 7e 00 0c 	addi    r3,r30,12
d35 1
a35 1
.*:	81 3e 00 2c 	lwz     r9,44\(r30\)
d43 1
@


1.8
log
@bfd/
	* elf32-ppc.c (ppc_elf_create_linker_section): Set SEC_LINKER_CREATED
	on section.  Correct comment, and add FIXME.
	(ppc_elf_additional_program_headers): Don't bump header count for
	interp.  Test SEC_ALLOC, not SEC_LOAD, and don't test size.
	(ppc_elf_size_dynamic_sections): Don't strip sdata and sdata2, but
	do allocate memory if they need it.
ld/
	* emulparams/elf32ppclinux.sh (OTHER_READWRITE_SECTION): Delete.
	(OTHER_RELRO_SECTIONS): Set this instead.
ld/testsuite/
	* ld-powerpc/tlsexe32.d: Update.
	* ld-powerpc/tlsexe32.g: Update.
	* ld-powerpc/tlsexe32.r: Update.
	* ld-powerpc/tlsexe32.t: Update.
	* ld-powerpc/tlsso32.d: Update.
	* ld-powerpc/tlsso32.g: Update.
	* ld-powerpc/tlsso32.r: Update.
	* ld-powerpc/tlsso32.t: Update.
@
text
@d44 1
a44 1
.*:	00 01 04 e4 	.*
@


1.7
log
@	* ld-cris/expdyn1.d, ld-cris/expdyn5.d, ld-cris/expdyn6.d,
	ld-cris/expdyn7.d, ld-cris/gotplt1.d, ld-cris/gotplt2.d,
	ld-cris/gotplt3.d, ld-cris/hiddef1.d, ld-cris/libdso-2.d,
	ld-cris/locref1.d, ld-cris/locref2.d, ld-cris/weakref2.d,
	ld-i386/tlsbin.rd, ld-i386/tlsnopic.rd, ld-i386/tlspic.rd,
	ld-ia64/tlsbin.dd, ld-ia64/tlsbin.rd, ld-ia64/tlspic.dd,
	ld-ia64/tlspic.rd, ld-powerpc/tlsexe32.d, ld-powerpc/tlsexe32.g,
	ld-powerpc/tlsexe32.r, ld-powerpc/tlsexe32.t,
	ld-powerpc/tlsso32.d, ld-powerpc/tlsso32.g, ld-powerpc/tlsso32.r,
	ld-powerpc/tlsso32.t, ld-s390/tlsbin.dd, ld-s390/tlsbin.rd,
	ld-s390/tlspic.rd, ld-sparc/tlssunbin32.rd,
	ld-sparc/tlssunpic32.rd, ld-x86-64/tlsbin.rd, ld-x86-64/tlspic.dd,
	ld-x86-64/tlspic.rd: Adjust for _GLOBAL_OFFSET_TABLE_ now hidden.
@
text
@d11 29
a39 29
0+46c <_start>:
 46c:	38 7f 00 1c 	addi    r3,r31,28
 470:	48 00 00 01 	bl      470 .*
 474:	38 7f 00 0c 	addi    r3,r31,12
 478:	48 00 00 01 	bl      478 .*
 47c:	38 7f 00 24 	addi    r3,r31,36
 480:	48 01 01 95 	bl      10614 .*
 484:	38 7f 00 0c 	addi    r3,r31,12
 488:	48 01 01 8d 	bl      10614 .*
 48c:	39 23 80 20 	addi    r9,r3,-32736
 490:	3d 23 00 00 	addis   r9,r3,0
 494:	81 49 80 24 	lwz     r10,-32732\(r9\)
 498:	81 3f 00 2c 	lwz     r9,44\(r31\)
 49c:	7d 49 12 2e 	lhzx    r10,r9,r2
 4a0:	89 42 00 00 	lbz     r10,0\(r2\)
 4a4:	3d 22 00 00 	addis   r9,r2,0
 4a8:	99 49 00 00 	stb     r10,0\(r9\)
 4ac:	38 7e 00 14 	addi    r3,r30,20
 4b0:	48 00 00 01 	bl      4b0 .*
 4b4:	38 7e 00 0c 	addi    r3,r30,12
 4b8:	48 00 00 01 	bl      4b8 .*
 4bc:	91 43 80 04 	stw     r10,-32764\(r3\)
 4c0:	3d 23 00 00 	addis   r9,r3,0
 4c4:	91 49 80 08 	stw     r10,-32760\(r9\)
 4c8:	81 3e 00 2c 	lwz     r9,44\(r30\)
 4cc:	7d 49 13 2e 	sthx    r10,r9,r2
 4d0:	a1 42 00 00 	lhz     r10,0\(r2\)
 4d4:	3d 22 00 00 	addis   r9,r2,0
 4d8:	a9 49 00 00 	lha     r10,0\(r9\)
d42 3
a44 3
00010598 <\.got>:
   10598:	4e 80 00 21 	blrl
   1059c:	00 01 04 f8 	\.long 0x104f8
@


1.7.2.1
log
@bfd/
	* elf32-ppc.c (ppc_elf_create_linker_section): Set SEC_LINKER_CREATED
	on section.  Correct comment, and add FIXME.
	(ppc_elf_additional_program_headers): Don't bump header count for
	interp.  Test SEC_ALLOC, not SEC_LOAD, and don't test size.
	(ppc_elf_size_dynamic_sections): Don't strip sdata and sdata2, but
	do allocate memory if they need it.
ld/
	* emulparams/elf32ppclinux.sh (OTHER_READWRITE_SECTION): Delete.
	(OTHER_RELRO_SECTIONS): Set this instead.
ld/testsuite/
	* ld-powerpc/tlsexe32.d: Update.
	* ld-powerpc/tlsexe32.g: Update.
	* ld-powerpc/tlsexe32.r: Update.
	* ld-powerpc/tlsexe32.t: Update.
	* ld-powerpc/tlsso32.d: Update.
	* ld-powerpc/tlsso32.g: Update.
	* ld-powerpc/tlsso32.r: Update.
	* ld-powerpc/tlsso32.t: Update.
@
text
@d11 29
a39 29
.* <_start>:
.*:	38 7f 00 1c 	addi    r3,r31,28
.*:	48 00 00 01 	bl      .*
.*:	38 7f 00 0c 	addi    r3,r31,12
.*:	48 00 00 01 	bl      .*
.*:	38 7f 00 24 	addi    r3,r31,36
.*:	48 01 01 95 	bl      .*<__tls_get_addr@@plt>
.*:	38 7f 00 0c 	addi    r3,r31,12
.*:	48 01 01 8d 	bl      .*<__tls_get_addr@@plt>
.*:	39 23 80 20 	addi    r9,r3,-32736
.*:	3d 23 00 00 	addis   r9,r3,0
.*:	81 49 80 24 	lwz     r10,-32732\(r9\)
.*:	81 3f 00 2c 	lwz     r9,44\(r31\)
.*:	7d 49 12 2e 	lhzx    r10,r9,r2
.*:	89 42 00 00 	lbz     r10,0\(r2\)
.*:	3d 22 00 00 	addis   r9,r2,0
.*:	99 49 00 00 	stb     r10,0\(r9\)
.*:	38 7e 00 14 	addi    r3,r30,20
.*:	48 00 00 01 	bl      .*
.*:	38 7e 00 0c 	addi    r3,r30,12
.*:	48 00 00 01 	bl      .*
.*:	91 43 80 04 	stw     r10,-32764\(r3\)
.*:	3d 23 00 00 	addis   r9,r3,0
.*:	91 49 80 08 	stw     r10,-32760\(r9\)
.*:	81 3e 00 2c 	lwz     r9,44\(r30\)
.*:	7d 49 13 2e 	sthx    r10,r9,r2
.*:	a1 42 00 00 	lhz     r10,0\(r2\)
.*:	3d 22 00 00 	addis   r9,r2,0
.*:	a9 49 00 00 	lha     r10,0\(r9\)
d42 3
a44 3
.* <\.got>:
.*:	4e 80 00 21 	blrl
.*:	00 01 04 e4 	.*
@


1.6
log
@bfd/
	* elflink.c (elf_bfd_final_link): Don't output STT_SECTION symbol
	into .dynsym if elf_section_data (sec)->dynindx <= 0.
	Adjust counting of last_local.
	(_bfd_elf_link_renumber_dynsyms): Don't assign dynindx to sections
	other than SHT_PROGBITS/SHT_NOBITS and neither for .got/.got.plt/.plt
	created by the linker nor !SHF_ALLOC.

	* elf32-i386.c (elf_i386_finish_dynamic_sections): Point
	DT_PLTGOT to the start of the .got.plt section instead of the
	.got output section.  Set sh_entsize for .got section in addition
	to .got.plt.
	(elf_i386_relocate_section): Don't assume _GLOBAL_OFFSET_TABLE_
	is at sgot->output_section->vma.
	* elf64-x86-64.c (elf64_x86_64_finish_dynamic_sections): Point
	DT_PLTGOT to the start of the .got.plt section instead of the
	.got output section.
	(elf64_x86_64_relocate_section): Don't assume _GLOBAL_OFFSET_TABLE_
	is at sgot->output_section->vma.  Set sh_entsize for .got section
	in addition to .got.plt.
	* elf.c (_bfd_elf_print_private_bfd_data): Handle PT_GNU_RELRO.
	(bfd_section_from_phdr): Likewise.
	(map_sections_to_segments): Likewise.
	(assign_file_positions_for_segments): Likewise.
	(get_program_header_size): Likewise.
	* elflink.c (bfd_elf_size_dynamic_sections): Set
	elf_tdata (output_bfd)->relro from info->relro.
	* elf-bfd.h (struct elf_obj_tdata): Add relro field.
include/
	* bfdlink.h (struct bfd_link_info): Add relro, relro_start and
	relro_end fields.
	* elf/common.h (PT_GNU_EH_FRAME, PT_GNU_STACK): Add comments.
	(PT_GNU_RELRO): Define.
binutils/
	* readelf.c (get_segment_type): Handle PT_GNU_RELRO.
ld/
	* genscripts.sh: Generate -z combreloc -z now -z relro scripts
	for binaries, -shared and -pie.
	* emulparams/elf_i386.sh (SEPARATE_GOTPLT): Set.
	* emulparams/elf_x86_64.sh (SEPARATE_GOTPLT): Set.
	* emulparams/elf32ppc.sh (OTHER_READWRITE_SECTIONS): Rename to...
	(OTHER_RELRO_SECTIONS): ... this.
	* ldlex.l (DATA_SEGMENT_RELRO_END): Add.
	* emultempl/elf32.em (gld${EMULATION_NAME}_handle_option): Handle
	-z relro and -z norelro.
	(gld${EMULATION_NAME}_list_options): Add it to usage.
	(gld${EMULATION_NAME}_get_script): Return -z combreloc -z now
	-z relro scripts when appropriate.
	* scripttempl/elf.sc: Unset SEPARATE_GOTPLT if RELRO_NOW is set.
	Create separate .got.plt section if SEPARATE_GOTPLT.
	Move sections which are only written during relocation handling
	to the beginning of RW segment.  If NO_SMALL_DATA, move .got
	before .data.  Add DATA_SEGMENT_RELRO_END directive.
	Include OTHER_RELRO_SECTIONS.
	* ldgram.y (DATA_SEGMENT_RELRO_END): Add.
	* ldexp.c (exp_print_token): Handle DATA_SEGMENT_RELRO_END.
	(fold_unary): Likewise.
	(fold_binary): Handle -z relro.
	* ldexp.h (struct exp_data_seg): Add exp_dataseg_relro_seen and
	exp_dataseg_relro_adjust phases.  Add relro_end field.
	* ldmain.c (main): Initialize link_info.relro to FALSE.
	* ldlang.c (lang_size_sections): Handle -z relro.
ld/testsuite/
	* ld-i386/tlspic.rd: Adjust for section reordering changes
	and removal of unneeded STT_SECTION symbols from .dynsym.
	* ld-i386/tlspic.dd: Likewise.
	* ld-i386/tlspic.sd: Likewise.
	* ld-i386/tlsbin.rd: Likewise.
	* ld-i386/tlsbinpic.s: Likewise.
	* ld-i386/tlsbin.dd: Likewise.
	* ld-i386/tlsbin.sd: Likewise.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlsnopic1.s: Likewise.
	* ld-i386/combreloc.d: Likewise.
	* ld-i386/tlsnopic.dd: Likewise.
	* ld-i386/tlsnopic.sd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
	* ld-x86-64/tlspic.dd: Likewise.
	* ld-x86-64/tlsbin.dd: Likewise.
	* ld-x86-64/tlspic.sd: Likewise.
	* ld-x86-64/tlsbin.sd: Likewise.
	* ld-x86-64/tlspic.td: Likewise.
	* ld-x86-64/tlsbin.td: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-s390/tlspic1.s: Likewise.
	* ld-s390/tlsbinpic.s: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlspic.dd: Likewise.
	* ld-s390/tlsbin.dd: Likewise.
	* ld-s390/tlsbin.sd: Likewise.
	* ld-s390/tlsbin.td: Likewise.
	* ld-s390/tlspic.sd: Likewise.
	* ld-s390/tlspic.td: Likewise.
	* ld-s390/tlspic1_64.s: Likewise.
	* ld-s390/tlsbinpic_64.s: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlspic_64.dd: Likewise.
	* ld-s390/tlsbin_64.dd: Likewise.
	* ld-s390/tlspic_64.sd: Likewise.
	* ld-s390/tlspic_64.td: Likewise.
	* ld-s390/tlsbin_64.td: Likewise.
	* ld-s390/tlsbin_64.sd: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlsso32.d: Likewise.
	* ld-powerpc/tlsso32.g: Likewise.
	* ld-powerpc/tlsso32.t: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso.g: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
	* ld-powerpc/tlstocso.g: Likewise.
	* ld-ia64/tlspic.rd: Likewise.
	* ld-ia64/tlspic.dd: Likewise.
	* ld-ia64/tlspic.sd: Likewise.
	* ld-ia64/tlspic.td: Likewise.
	* ld-ia64/tlsbin.rd: Likewise.
	* ld-ia64/tlsbin.sd: Likewise.
	* ld-ia64/tlsbin.td: Likewise.
	* ld-elfvsb/elfvsb.exp: XFAIL non-PIC load offset tests on s390x.
	* ld-shared/shared.exp: Likewise.
@
text
@d11 29
a39 29
0+498 <_start>:
 498:	38 7f 00 1c 	addi    r3,r31,28
 49c:	48 00 00 01 	bl      49c .*
 4a0:	38 7f 00 0c 	addi    r3,r31,12
 4a4:	48 00 00 01 	bl      4a4 .*
 4a8:	38 7f 00 24 	addi    r3,r31,36
 4ac:	48 01 01 95 	bl      10640 .*
 4b0:	38 7f 00 0c 	addi    r3,r31,12
 4b4:	48 01 01 8d 	bl      10640 .*
 4b8:	39 23 80 20 	addi    r9,r3,-32736
 4bc:	3d 23 00 00 	addis   r9,r3,0
 4c0:	81 49 80 24 	lwz     r10,-32732\(r9\)
 4c4:	81 3f 00 2c 	lwz     r9,44\(r31\)
 4c8:	7d 49 12 2e 	lhzx    r10,r9,r2
 4cc:	89 42 00 00 	lbz     r10,0\(r2\)
 4d0:	3d 22 00 00 	addis   r9,r2,0
 4d4:	99 49 00 00 	stb     r10,0\(r9\)
 4d8:	38 7e 00 14 	addi    r3,r30,20
 4dc:	48 00 00 01 	bl      4dc .*
 4e0:	38 7e 00 0c 	addi    r3,r30,12
 4e4:	48 00 00 01 	bl      4e4 .*
 4e8:	91 43 80 04 	stw     r10,-32764\(r3\)
 4ec:	3d 23 00 00 	addis   r9,r3,0
 4f0:	91 49 80 08 	stw     r10,-32760\(r9\)
 4f4:	81 3e 00 2c 	lwz     r9,44\(r30\)
 4f8:	7d 49 13 2e 	sthx    r10,r9,r2
 4fc:	a1 42 00 00 	lhz     r10,0\(r2\)
 500:	3d 22 00 00 	addis   r9,r2,0
 504:	a9 49 00 00 	lha     r10,0\(r9\)
d42 3
a44 3
000105c4 <\.got>:
   105c4:	4e 80 00 21 	blrl
   105c8:	00 01 05 24 	\.long 0x10524
@


1.5
log
@	* ld-powerpc/tlsexe32.d: Update.
	* ld-powerpc/tlsso32.d: Update.
@
text
@d11 29
a39 29
0+538 <_start>:
 538:	38 7f 00 1c 	addi    r3,r31,28
 53c:	48 00 00 01 	bl      53c .*
 540:	38 7f 00 0c 	addi    r3,r31,12
 544:	48 00 00 01 	bl      544 .*
 548:	38 7f 00 24 	addi    r3,r31,36
 54c:	48 01 01 95 	bl      106e0 .*
 550:	38 7f 00 0c 	addi    r3,r31,12
 554:	48 01 01 8d 	bl      106e0 .*
 558:	39 23 80 20 	addi    r9,r3,-32736
 55c:	3d 23 00 00 	addis   r9,r3,0
 560:	81 49 80 24 	lwz     r10,-32732\(r9\)
 564:	81 3f 00 2c 	lwz     r9,44\(r31\)
 568:	7d 49 12 2e 	lhzx    r10,r9,r2
 56c:	89 42 00 00 	lbz     r10,0\(r2\)
 570:	3d 22 00 00 	addis   r9,r2,0
 574:	99 49 00 00 	stb     r10,0\(r9\)
 578:	38 7e 00 14 	addi    r3,r30,20
 57c:	48 00 00 01 	bl      57c .*
 580:	38 7e 00 0c 	addi    r3,r30,12
 584:	48 00 00 01 	bl      584 .*
 588:	91 43 80 04 	stw     r10,-32764\(r3\)
 58c:	3d 23 00 00 	addis   r9,r3,0
 590:	91 49 80 08 	stw     r10,-32760\(r9\)
 594:	81 3e 00 2c 	lwz     r9,44\(r30\)
 598:	7d 49 13 2e 	sthx    r10,r9,r2
 59c:	a1 42 00 00 	lhz     r10,0\(r2\)
 5a0:	3d 22 00 00 	addis   r9,r2,0
 5a4:	a9 49 00 00 	lha     r10,0\(r9\)
d42 3
a44 3
00010664 <\.got>:
   10664:	4e 80 00 21 	blrl
   10668:	00 01 05 c4 	\.long 0x105c4
@


1.4
log
@opcodes/
	* ppc-dis.c (print_insn_powerpc): Don't print tabs.  Handle
	PPC_OPERANDS_GPR_0.
	* ppc-opc.c (RA0): Define.
	(RAQ, RAL, RAM, RAS, RSQ, RTQ, RSO): Use PPC_OPERAND_GPR_0.
	(RAOPT): Rename from RAO.  Update all uses.
	(powerpc_opcodes): Use RA0 as appropriate.  Add "lsdx", "lsdi",
	"stsdx", "stsdi", "lmd" and "stmd" insns.

include/opcode/
	* ppc.h (PPC_OPERAND_GPR_0): Define.  Bump other operand defines.

gas/testsuite/
	Update gas/ppc/.

ld/testsuite/
	Update ld-powerpc/.
@
text
@a45 4
Disassembly of section \.plt:

00010698 <\.plt>:
	\.\.\.
@


1.3
log
@	* ld-powerpc/tlsexe32.d: Update for changed symbols from objdump.
	* ld-powerpc/tlsso32.d: Likewise.
@
text
@d12 28
a39 28
 538:	38 7f 00 1c 	addi	r3,r31,28
 53c:	48 00 00 01 	bl	53c .*
 540:	38 7f 00 0c 	addi	r3,r31,12
 544:	48 00 00 01 	bl	544 .*
 548:	38 7f 00 24 	addi	r3,r31,36
 54c:	48 01 01 95 	bl	106e0 .*
 550:	38 7f 00 0c 	addi	r3,r31,12
 554:	48 01 01 8d 	bl	106e0 .*
 558:	39 23 80 20 	addi	r9,r3,-32736
 55c:	3d 23 00 00 	addis	r9,r3,0
 560:	81 49 80 24 	lwz	r10,-32732\(r9\)
 564:	81 3f 00 2c 	lwz	r9,44\(r31\)
 568:	7d 49 12 2e 	lhzx	r10,r9,r2
 56c:	89 42 00 00 	lbz	r10,0\(r2\)
 570:	3d 22 00 00 	addis	r9,r2,0
 574:	99 49 00 00 	stb	r10,0\(r9\)
 578:	38 7e 00 14 	addi	r3,r30,20
 57c:	48 00 00 01 	bl	57c .*
 580:	38 7e 00 0c 	addi	r3,r30,12
 584:	48 00 00 01 	bl	584 .*
 588:	91 43 80 04 	stw	r10,-32764\(r3\)
 58c:	3d 23 00 00 	addis	r9,r3,0
 590:	91 49 80 08 	stw	r10,-32760\(r9\)
 594:	81 3e 00 2c 	lwz	r9,44\(r30\)
 598:	7d 49 13 2e 	sthx	r10,r9,r2
 59c:	a1 42 00 00 	lhz	r10,0\(r2\)
 5a0:	3d 22 00 00 	addis	r9,r2,0
 5a4:	a9 49 00 00 	lha	r10,0\(r9\)
@


1.3.6.1
log
@opcodes/
	* ppc-dis.c (print_insn_powerpc): Don't print tabs.  Handle
	PPC_OPERANDS_GPR_0.
	* ppc-opc.c (RA0): Define.
	(RAQ, RAL, RAM, RAS, RSQ, RTQ, RSO): Use PPC_OPERAND_GPR_0.
	(RAOPT): Rename from RAO.  Update all uses.
	(powerpc_opcodes): Use RA0 as appropriate.  Add "lsdx", "lsdi",
	"stsdx", "stsdi", "lmd" and "stmd" insns.

include/opcode/
	* ppc.h (PPC_OPERAND_GPR_0): Define.  Bump other operand defines.

gas/testsuite/
	Update gas/ppc/.

ld/testsuite/
	Update ld-powerpc/.
@
text
@d12 28
a39 28
 538:	38 7f 00 1c 	addi    r3,r31,28
 53c:	48 00 00 01 	bl      53c .*
 540:	38 7f 00 0c 	addi    r3,r31,12
 544:	48 00 00 01 	bl      544 .*
 548:	38 7f 00 24 	addi    r3,r31,36
 54c:	48 01 01 95 	bl      106e0 .*
 550:	38 7f 00 0c 	addi    r3,r31,12
 554:	48 01 01 8d 	bl      106e0 .*
 558:	39 23 80 20 	addi    r9,r3,-32736
 55c:	3d 23 00 00 	addis   r9,r3,0
 560:	81 49 80 24 	lwz     r10,-32732\(r9\)
 564:	81 3f 00 2c 	lwz     r9,44\(r31\)
 568:	7d 49 12 2e 	lhzx    r10,r9,r2
 56c:	89 42 00 00 	lbz     r10,0\(r2\)
 570:	3d 22 00 00 	addis   r9,r2,0
 574:	99 49 00 00 	stb     r10,0\(r9\)
 578:	38 7e 00 14 	addi    r3,r30,20
 57c:	48 00 00 01 	bl      57c .*
 580:	38 7e 00 0c 	addi    r3,r30,12
 584:	48 00 00 01 	bl      584 .*
 588:	91 43 80 04 	stw     r10,-32764\(r3\)
 58c:	3d 23 00 00 	addis   r9,r3,0
 590:	91 49 80 08 	stw     r10,-32760\(r9\)
 594:	81 3e 00 2c 	lwz     r9,44\(r30\)
 598:	7d 49 13 2e 	sthx    r10,r9,r2
 59c:	a1 42 00 00 	lhz     r10,0\(r2\)
 5a0:	3d 22 00 00 	addis   r9,r2,0
 5a4:	a9 49 00 00 	lha     r10,0\(r9\)
@


1.2
log
@Update tests for corrected section attributes and objdump change.
@
text
@d13 1
a13 1
 53c:	48 00 00 01 	bl	53c <_start\+0x4>
d15 1
a15 1
 544:	48 00 00 01 	bl	544 <_start\+0xc>
d17 1
a17 1
 54c:	48 01 01 95 	bl	106e0 <__bss_start\+0x48>
d19 1
a19 1
 554:	48 01 01 8d 	bl	106e0 <__bss_start\+0x48>
d29 1
a29 1
 57c:	48 00 00 01 	bl	57c <_start\+0x44>
d31 1
a31 1
 584:	48 00 00 01 	bl	584 <_start\+0x4c>
@


1.1
log
@New tests.
@
text
@d46 4
@

