head	1.4;
access;
symbols
	binutils-2_24-branch:1.4.0.2
	binutils-2_24-branchpoint:1.4
	binutils-2_21_1:1.3
	binutils-2_23_2:1.3.8.1
	binutils-2_23_1:1.3
	binutils-2_23:1.3
	binutils-2_23-branch:1.3.0.8
	binutils-2_23-branchpoint:1.3
	binutils-2_22_branch:1.3.0.6
	binutils-2_22:1.3
	binutils-2_22-branch:1.3.0.4
	binutils-2_22-branchpoint:1.3
	binutils-2_21:1.3
	binutils-2_21-branch:1.3.0.2
	binutils-2_21-branchpoint:1.3
	binutils-2_20_1:1.2
	binutils-2_20:1.2
	binutils-2_20-branch:1.2.0.2
	binutils-2_20-branchpoint:1.2
	binutils_latest_snapshot:1.4;
locks; strict;
comment	@# @;


1.4
date	2012.10.29.09.25.53;	author amodra;	state Exp;
branches;
next	1.3;

1.3
date	2010.07.06.09.29.47;	author amodra;	state Exp;
branches
	1.3.8.1;
next	1.2;

1.2
date	2009.08.23.09.43.35;	author schwab;	state Exp;
branches;
next	1.1;

1.1
date	2009.08.10.13.38.44;	author nathan;	state Exp;
branches;
next	;

1.3.8.1
date	2013.01.21.13.48.52;	author amodra;	state Exp;
branches;
next	;


desc
@@


1.4
log
@	* ld-powerpc/powerpc.exp: Modify emulation option passed to ld
	when little-endian.
	* ld-powerpc/apuinfo-nul.rd: Update for le output.
	* ld-powerpc/apuinfo.rd: Likewise.
	* ld-powerpc/plt1.d: Likewise.
	* ld-powerpc/relax.d: Likewise.
	* ld-powerpc/relaxr.d: Likewise.
	* ld-powerpc/sdadyn.d: Likewise.
	* ld-powerpc/tls.d: Likewise.
	* ld-powerpc/tls.g: Likewise.
	* ld-powerpc/tls.t: Likewise.
	* ld-powerpc/tls32.d: Likewise.
	* ld-powerpc/tls32.g: Likewise.
	* ld-powerpc/tls32.t: Likewise.
	* ld-powerpc/tlsexe.d: Likewise.
	* ld-powerpc/tlsexe.g: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexe.t: Likewise.
	* ld-powerpc/tlsexe32.d: Likewise.
	* ld-powerpc/tlsexe32.g: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsexe32.t: Likewise.
	* ld-powerpc/tlsexetoc.d: Likewise.
	* ld-powerpc/tlsexetoc.g: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsexetoc.t: Likewise.
	* ld-powerpc/tlsmark.d: Likewise.
	* ld-powerpc/tlsmark32.d: Likewise.
	* ld-powerpc/tlsopt1.d: Likewise.
	* ld-powerpc/tlsopt1_32.d: Likewise.
	* ld-powerpc/tlsopt2.d: Likewise.
	* ld-powerpc/tlsopt2_32.d: Likewise.
	* ld-powerpc/tlsopt3.d: Likewise.
	* ld-powerpc/tlsopt3_32.d: Likewise.
	* ld-powerpc/tlsopt4.d: Likewise.
	* ld-powerpc/tlsopt4_32.d: Likewise.
	* ld-powerpc/tlsso.d: Likewise.
	* ld-powerpc/tlsso.g: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso.t: Likewise.
	* ld-powerpc/tlsso32.d: Likewise.
	* ld-powerpc/tlsso32.g: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlsso32.t: Likewise.
	* ld-powerpc/tlstoc.d: Likewise.
	* ld-powerpc/tlstoc.g: Likewise.
	* ld-powerpc/tlstoc.t: Likewise.
	* ld-powerpc/tlstocso.d: Likewise.
	* ld-powerpc/tlstocso.g: Likewise.
	* ld-powerpc/tlstocso.t: Likewise.
	* ld-powerpc/tocopt.out: Likewise.
@
text
@
.*:     file format .*

Disassembly of section .text:

00000000 <_start>:
   0:	(48 00 00 15|15 00 00 48) 	bl      14 <_start\+0x14>
   4:	(48 00 00 21|21 00 00 48) 	bl      24 <_start\+0x24>
   8:	(48 00 00 0d|0d 00 00 48) 	bl      14 <_start\+0x14>
			8: R_PPC_NONE	\*ABS\*
   c:	(48 00 00 19|19 00 00 48) 	bl      24 <_start\+0x24>
			c: R_PPC_NONE	\*ABS\*
  10:	(48 00 00 00|00 00 00 48) 	b       10 <_start\+0x10>
			10: R_PPC_REL24	_start
  14:	(3d 80 00 00|00 00 80 3d) 	lis     r12,0
			1(6|4): R_PPC_ADDR16_HA	near
  18:	(39 8c 00 00|00 00 8c 39) 	addi    r12,r12,0
			1(a|8): R_PPC_ADDR16_LO	near
  1c:	(7d 89 03 a6|a6 03 89 7d) 	mtctr   r12
  20:	(4e 80 04 20|20 04 80 4e) 	bctr
  24:	(3d 80 00 00|00 00 80 3d) 	lis     r12,0
			2(6|4): R_PPC_ADDR16_HA	far
  28:	(39 8c 00 00|00 00 8c 39) 	addi    r12,r12,0
			2(a|8): R_PPC_ADDR16_LO	far
  2c:	(7d 89 03 a6|a6 03 89 7d) 	mtctr   r12
  30:	(4e 80 04 20|20 04 80 4e) 	bctr
@


1.3
log
@bfd/
	* elf32-ppc.c (ppc_elf_relax_section): Insert branch around
	trampolines only for .init and .fini sections.
ld/testsuite/
	* ld-powerpc/relax.s: Add branch back to _start.
	* ld-powerpc/relax.d: Update.
	* ld-powerpc/relaxr.d: Update.
@
text
@d7 3
a9 3
   0:	48 00 00 15 	bl      14 <_start\+0x14>
   4:	48 00 00 21 	bl      24 <_start\+0x24>
   8:	48 00 00 0d 	bl      14 <_start\+0x14>
d11 1
a11 1
   c:	48 00 00 19 	bl      24 <_start\+0x24>
d13 1
a13 1
  10:	48 00 00 00 	b       10 <_start\+0x10>
d15 12
a26 12
  14:	3d 80 00 00 	lis     r12,0
			16: R_PPC_ADDR16_HA	near
  18:	39 8c 00 00 	addi    r12,r12,0
			1a: R_PPC_ADDR16_LO	near
  1c:	7d 89 03 a6 	mtctr   r12
  20:	4e 80 04 20 	bctr
  24:	3d 80 00 00 	lis     r12,0
			26: R_PPC_ADDR16_HA	far
  28:	39 8c 00 00 	addi    r12,r12,0
			2a: R_PPC_ADDR16_LO	far
  2c:	7d 89 03 a6 	mtctr   r12
  30:	4e 80 04 20 	bctr
@


1.3.8.1
log
@	PR 12549
	PR 14493
	PR 14567
	PR 14662
	PR 14758
	PR 14813
	PR 14904
	PR 14915
	PR 14926
	PR 14950
	PR 14962
	Apply mainline patches
@
text
@d7 3
a9 3
   0:	(48 00 00 15|15 00 00 48) 	bl      14 <_start\+0x14>
   4:	(48 00 00 21|21 00 00 48) 	bl      24 <_start\+0x24>
   8:	(48 00 00 0d|0d 00 00 48) 	bl      14 <_start\+0x14>
d11 1
a11 1
   c:	(48 00 00 19|19 00 00 48) 	bl      24 <_start\+0x24>
d13 1
a13 1
  10:	(48 00 00 00|00 00 00 48) 	b       10 <_start\+0x10>
d15 12
a26 12
  14:	(3d 80 00 00|00 00 80 3d) 	lis     r12,0
			1(6|4): R_PPC_ADDR16_HA	near
  18:	(39 8c 00 00|00 00 8c 39) 	addi    r12,r12,0
			1(a|8): R_PPC_ADDR16_LO	near
  1c:	(7d 89 03 a6|a6 03 89 7d) 	mtctr   r12
  20:	(4e 80 04 20|20 04 80 4e) 	bctr
  24:	(3d 80 00 00|00 00 80 3d) 	lis     r12,0
			2(6|4): R_PPC_ADDR16_HA	far
  28:	(39 8c 00 00|00 00 8c 39) 	addi    r12,r12,0
			2(a|8): R_PPC_ADDR16_LO	far
  2c:	(7d 89 03 a6|a6 03 89 7d) 	mtctr   r12
  30:	(4e 80 04 20|20 04 80 4e) 	bctr
@


1.2
log
@* ld-powerpc/relax.d: Fix whitespace.
* ld-powerpc/relaxr.d: Likewise.
@
text
@d13 2
a14 1
  10:	48 00 00 24 	b       34 <_start\+0x34>
@


1.1
log
@	bfd/
	* elf32-ppc.c (shared_stub_entry, stub_entry): Use r12, not r11.
	(ppc_elf_relax_section): Use symbol index to distinguish
	relocatable stubs.

	ld/testsuite/
	* ld-powerpc/relax.s: New.
	* ld-powerpc/relax.d: New.
	* ld-powerpc/relaxr.d: New.
	* ld-powerpc/powerpc.exp: Add new tests.
@
text
@d7 3
a9 3
   0:	48 00 00 15 	bl	14 <_start\+0x14>
   4:	48 00 00 21 	bl	24 <_start\+0x24>
   8:	48 00 00 0d 	bl	14 <_start\+0x14>
d11 1
a11 1
   c:	48 00 00 19 	bl	24 <_start\+0x24>
d13 2
a14 2
  10:	48 00 00 24 	b	34 <_start\+0x34>
  14:	3d 80 00 00 	lis	r12,0
d16 1
a16 1
  18:	39 8c 00 00 	addi	r12,r12,0
d18 1
a18 1
  1c:	7d 89 03 a6 	mtctr	r12
d20 1
a20 1
  24:	3d 80 00 00 	lis	r12,0
d22 1
a22 1
  28:	39 8c 00 00 	addi	r12,r12,0
d24 1
a24 1
  2c:	7d 89 03 a6 	mtctr	r12
@

