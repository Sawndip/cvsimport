head	1.3;
access;
symbols
	binutils-2_24-branch:1.3.0.2
	binutils-2_24-branchpoint:1.3
	binutils-2_21_1:1.1.6.1
	binutils-2_23_2:1.2.6.1
	binutils-2_23_1:1.2
	binutils-2_23:1.2
	binutils-2_23-branch:1.2.0.6
	binutils-2_23-branchpoint:1.2
	binutils-2_22_branch:1.2.0.4
	binutils-2_22:1.2
	binutils-2_22-branch:1.2.0.2
	binutils-2_22-branchpoint:1.2
	binutils-2_21:1.1
	binutils-2_21-branch:1.1.0.6
	binutils-2_21-branchpoint:1.1
	binutils-2_20_1:1.1
	binutils-2_20:1.1
	binutils-2_20-branch:1.1.0.4
	binutils-2_20-branchpoint:1.1
	dje-cgen-play1-branch:1.1.0.2
	dje-cgen-play1-branchpoint:1.1
	binutils_latest_snapshot:1.3;
locks; strict;
comment	@# @;


1.3
date	2012.10.29.09.25.53;	author amodra;	state Exp;
branches;
next	1.2;

1.2
date	2011.03.23.15.25.06;	author amodra;	state Exp;
branches
	1.2.6.1;
next	1.1;

1.1
date	2009.03.04.05.50.50;	author amodra;	state Exp;
branches
	1.1.6.1;
next	;

1.2.6.1
date	2013.01.21.13.48.52;	author amodra;	state Exp;
branches;
next	;

1.1.6.1
date	2011.03.23.15.26.20;	author amodra;	state Exp;
branches;
next	;


desc
@@


1.3
log
@	* ld-powerpc/powerpc.exp: Modify emulation option passed to ld
	when little-endian.
	* ld-powerpc/apuinfo-nul.rd: Update for le output.
	* ld-powerpc/apuinfo.rd: Likewise.
	* ld-powerpc/plt1.d: Likewise.
	* ld-powerpc/relax.d: Likewise.
	* ld-powerpc/relaxr.d: Likewise.
	* ld-powerpc/sdadyn.d: Likewise.
	* ld-powerpc/tls.d: Likewise.
	* ld-powerpc/tls.g: Likewise.
	* ld-powerpc/tls.t: Likewise.
	* ld-powerpc/tls32.d: Likewise.
	* ld-powerpc/tls32.g: Likewise.
	* ld-powerpc/tls32.t: Likewise.
	* ld-powerpc/tlsexe.d: Likewise.
	* ld-powerpc/tlsexe.g: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexe.t: Likewise.
	* ld-powerpc/tlsexe32.d: Likewise.
	* ld-powerpc/tlsexe32.g: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsexe32.t: Likewise.
	* ld-powerpc/tlsexetoc.d: Likewise.
	* ld-powerpc/tlsexetoc.g: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsexetoc.t: Likewise.
	* ld-powerpc/tlsmark.d: Likewise.
	* ld-powerpc/tlsmark32.d: Likewise.
	* ld-powerpc/tlsopt1.d: Likewise.
	* ld-powerpc/tlsopt1_32.d: Likewise.
	* ld-powerpc/tlsopt2.d: Likewise.
	* ld-powerpc/tlsopt2_32.d: Likewise.
	* ld-powerpc/tlsopt3.d: Likewise.
	* ld-powerpc/tlsopt3_32.d: Likewise.
	* ld-powerpc/tlsopt4.d: Likewise.
	* ld-powerpc/tlsopt4_32.d: Likewise.
	* ld-powerpc/tlsso.d: Likewise.
	* ld-powerpc/tlsso.g: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso.t: Likewise.
	* ld-powerpc/tlsso32.d: Likewise.
	* ld-powerpc/tlsso32.g: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlsso32.t: Likewise.
	* ld-powerpc/tlstoc.d: Likewise.
	* ld-powerpc/tlstoc.g: Likewise.
	* ld-powerpc/tlstoc.t: Likewise.
	* ld-powerpc/tlstocso.d: Likewise.
	* ld-powerpc/tlstocso.g: Likewise.
	* ld-powerpc/tlstocso.t: Likewise.
	* ld-powerpc/tocopt.out: Likewise.
@
text
@#source: tlsmark.s
#source: tlslib.s
#as: -a64
#ld: 
#objdump: -dr
#target: powerpc64*-*-*

.*

Disassembly of section \.text:

0+100000e8 <_start>:
.*:	(48 00 00 18|18 00 00 48) 	b       10000100 <_start\+0x18>
.*:	(60 00 00 00|00 00 00 60) 	nop
.*:	(38 63 90 00|00 90 63 38) 	addi    r3,r3,-28672
.*:	(e8 83 00 00|00 00 83 e8) 	ld      r4,0\(r3\)
.*:	(3c 6d 00 00|00 00 6d 3c) 	addis   r3,r13,0
.*:	(48 00 00 0c|0c 00 00 48) 	b       10000108 <_start\+0x20>
.*:	(3c 6d 00 00|00 00 6d 3c) 	addis   r3,r13,0
.*:	(4b ff ff e8|e8 ff ff 4b) 	b       100000ec <_start\+0x4>
.*:	(60 00 00 00|00 00 00 60) 	nop
.*:	(38 63 10 00|00 10 63 38) 	addi    r3,r3,4096
.*:	(e8 83 80 00|00 80 83 e8) 	ld      r4,-32768\(r3\)
.*:	(3c 6d 00 00|00 00 6d 3c) 	addis   r3,r13,0
.*:	(48 00 00 0c|0c 00 00 48) 	b       10000124 <_start\+0x3c>
.*:	(3c 6d 00 00|00 00 6d 3c) 	addis   r3,r13,0
.*:	(48 00 00 14|14 00 00 48) 	b       10000134 <_start\+0x4c>
.*:	(60 00 00 00|00 00 00 60) 	nop
.*:	(38 63 90 04|04 90 63 38) 	addi    r3,r3,-28668
.*:	(e8 a3 00 00|00 00 a3 e8) 	ld      r5,0\(r3\)
.*:	(4b ff ff ec|ec ff ff 4b) 	b       1000011c <_start\+0x34>
.*:	(60 00 00 00|00 00 00 60) 	nop
.*:	(38 63 10 00|00 10 63 38) 	addi    r3,r3,4096
.*:	(e8 a3 80 04|04 80 a3 e8) 	ld      r5,-32764\(r3\)

0+10000140 <\.__tls_get_addr>:
.*:	(4e 80 00 20|20 00 80 4e) 	blr
@


1.2
log
@bfd/
	* elf32-ppc.c (ppc_elf_tls_optimize): Catch more cases where
	old-style __tls_get_addr calls without marker relocs don't match
	their arg setup insn one for one.  If such mismatches are found
	report the reloc and don't do any tls optimization.
	* elf64-ppc.c (ppc64_elf_tls_optimize): Likewise.
ld/testsuite/
	* ld-powerpc/tlsmark.s: Delete non-optimizable section.
	* ld-powerpc/tlsmark32.s: Likewise.
	* ld-powerpc/tlsmark.d: Adjust to suit.
	* ld-powerpc/tlsmark32.d: Likewise.
	* ld-powerpc/tlsopt1.d, * ld-powerpc/tlsopt1.s: New.
	* ld-powerpc/tlsopt2.d, * ld-powerpc/tlsopt2.s: New.
	* ld-powerpc/tlsopt3.d, * ld-powerpc/tlsopt3.s: New.
	* ld-powerpc/tlsopt4.d, * ld-powerpc/tlsopt4.s: New.
	* ld-powerpc/tlsopt1_32.d, * ld-powerpc/tlsopt1_32.s: New.
	* ld-powerpc/tlsopt2_32.d, * ld-powerpc/tlsopt2_32.s: New.
	* ld-powerpc/tlsopt3_32.d, * ld-powerpc/tlsopt3_32.s: New.
	* ld-powerpc/tlsopt4_32.d, * ld-powerpc/tlsopt4_32.s: New.
	* ld-powerpc/powerpc.exp: Run new tests.
@
text
@d4 1
a4 1
#ld: -melf64ppc
d8 1
a8 1
.*: +file format elf64-powerpc
d13 22
a34 22
    100000e8:	48 00 00 18 	b       10000100 <_start\+0x18>
    100000ec:	60 00 00 00 	nop
    100000f0:	38 63 90 00 	addi    r3,r3,-28672
    100000f4:	e8 83 00 00 	ld      r4,0\(r3\)
    100000f8:	3c 6d 00 00 	addis   r3,r13,0
    100000fc:	48 00 00 0c 	b       10000108 <_start\+0x20>
    10000100:	3c 6d 00 00 	addis   r3,r13,0
    10000104:	4b ff ff e8 	b       100000ec <_start\+0x4>
    10000108:	60 00 00 00 	nop
    1000010c:	38 63 10 00 	addi    r3,r3,4096
    10000110:	e8 83 80 00 	ld      r4,-32768\(r3\)
    10000114:	3c 6d 00 00 	addis   r3,r13,0
    10000118:	48 00 00 0c 	b       10000124 <_start\+0x3c>
    1000011c:	3c 6d 00 00 	addis   r3,r13,0
    10000120:	48 00 00 14 	b       10000134 <_start\+0x4c>
    10000124:	60 00 00 00 	nop
    10000128:	38 63 90 04 	addi    r3,r3,-28668
    1000012c:	e8 a3 00 00 	ld      r5,0\(r3\)
    10000130:	4b ff ff ec 	b       1000011c <_start\+0x34>
    10000134:	60 00 00 00 	nop
    10000138:	38 63 10 00 	addi    r3,r3,4096
    1000013c:	e8 a3 80 04 	ld      r5,-32764\(r3\)
d37 1
a37 1
    10000140:	4e 80 00 20 	blr
@


1.2.6.1
log
@	PR 12549
	PR 14493
	PR 14567
	PR 14662
	PR 14758
	PR 14813
	PR 14904
	PR 14915
	PR 14926
	PR 14950
	PR 14962
	Apply mainline patches
@
text
@d4 1
a4 1
#ld: 
d8 1
a8 1
.*
d13 22
a34 22
.*:	(48 00 00 18|18 00 00 48) 	b       10000100 <_start\+0x18>
.*:	(60 00 00 00|00 00 00 60) 	nop
.*:	(38 63 90 00|00 90 63 38) 	addi    r3,r3,-28672
.*:	(e8 83 00 00|00 00 83 e8) 	ld      r4,0\(r3\)
.*:	(3c 6d 00 00|00 00 6d 3c) 	addis   r3,r13,0
.*:	(48 00 00 0c|0c 00 00 48) 	b       10000108 <_start\+0x20>
.*:	(3c 6d 00 00|00 00 6d 3c) 	addis   r3,r13,0
.*:	(4b ff ff e8|e8 ff ff 4b) 	b       100000ec <_start\+0x4>
.*:	(60 00 00 00|00 00 00 60) 	nop
.*:	(38 63 10 00|00 10 63 38) 	addi    r3,r3,4096
.*:	(e8 83 80 00|00 80 83 e8) 	ld      r4,-32768\(r3\)
.*:	(3c 6d 00 00|00 00 6d 3c) 	addis   r3,r13,0
.*:	(48 00 00 0c|0c 00 00 48) 	b       10000124 <_start\+0x3c>
.*:	(3c 6d 00 00|00 00 6d 3c) 	addis   r3,r13,0
.*:	(48 00 00 14|14 00 00 48) 	b       10000134 <_start\+0x4c>
.*:	(60 00 00 00|00 00 00 60) 	nop
.*:	(38 63 90 04|04 90 63 38) 	addi    r3,r3,-28668
.*:	(e8 a3 00 00|00 00 a3 e8) 	ld      r5,0\(r3\)
.*:	(4b ff ff ec|ec ff ff 4b) 	b       1000011c <_start\+0x34>
.*:	(60 00 00 00|00 00 00 60) 	nop
.*:	(38 63 10 00|00 10 63 38) 	addi    r3,r3,4096
.*:	(e8 a3 80 04|04 80 a3 e8) 	ld      r5,-32764\(r3\)
d37 1
a37 1
.*:	(4e 80 00 20|20 00 80 4e) 	blr
@


1.1
log
@include/elf/
	* ppc.h (R_PPC_TLSGD, R_PPC_TLSLD): Add new relocs.
	* ppc64.h (R_PPC64_TLSGD, R_PPC64_TLSLD): Add new relocs.
bfd/
	* reloc.c (BFD_RELOC_PPC_TLSGD, BFD_RELOC_PPC_TLSLD): New.
	* section.c (struct bfd_section): Add has_tls_get_addr_call.
	(BFD_FAKE_SECTION): Init new flag.
	* ecoff.c (bfd_debug_section): Likewise.
	* bfd-in2.h: Regenerate.
	* libbfd.h: Regenerate.
	* elf32-ppc.c (ppc_elf_howto_raw): Add R_PPC_TLSGD and R_PPC_TLSLD.
	(ppc_elf_reloc_type_lookup): Handle new relocs.
	(ppc_elf_check_relocs): Set has_tls_get_addr_call on finding such
	without marker relocs.
	(ppc_elf_tls_optimize): Allow out-of-order __tls_get_addr relocs
	if section has no old-style calls.
	(ppc_elf_relocate_section): Set tls_mask for non-tls relocs too.
	Don't try to optimize new-style __tls_get_addr call when handling
	arg setup relocs.  Instead do so for R_PPC_TLSGD and R_PPC_TLSLD
	relocs.
	* elf64-ppc.c (ppc64_elf_howto_raw): Add R_PPC64_TLSGD, R_PPC64_TLSLD.
	(ppc64_elf_reloc_type_lookup): Handle new relocs.
	(ppc64_elf_check_relocs): Set has_tls_get_addr_call on finding such
	without marker relocs.
	(ppc64_elf_tls_optimize): Allow out-of-order __tls_get_addr relocs
	if section has no old-style calls.  Set toc_ref for new relocs as
	appropriate.
	(ppc64_elf_relocate_section): Set tls_mask for non-tls relocs too.
	Don't try to optimize new-style __tls_get_addr call when handling
	arg setup relocs.  Instead do so for R_PPC_TLSGD and R_PPC_TLSLD
	relocs.
gas/
	* config/tc-ppc.c (ppc_elf_suffix): Error if ppc32 tls got relocs
	have non-zero addend.
	(md_assemble): Parse args of __tls_get_addr calls.
	(md_apply_fix): Handle BFD_RELOC_PPC_TLSGD and BFD_RELOC_PPC_TLSLD.
ld/testsuite/
	* ld-powerpc/tlsmark.s, * ld-powerpc/tlsmark.d: New test.
	* ld-powerpc/tlsmark32.s, * ld-powerpc/tlsmark32.d: New test.
	* ld-powerpc/powerpc.exp: Run them.
@
text
@a34 5
    10000140:	38 62 80 28 	addi    r3,r2,-32728
    10000144:	3f a0 10 01 	lis     r29,4097
    10000148:	3b bd 01 68 	addi    r29,r29,360
    1000014c:	48 00 00 09 	bl      10000154 <\.__tls_get_addr>
    10000150:	60 00 00 00 	nop
d36 2
a37 2
0+10000154 <\.__tls_get_addr>:
    10000154:	4e 80 00 20 	blr
@


1.1.6.1
log
@bfd/
	* elf32-ppc.c (ppc_elf_tls_optimize): Catch more cases where
	old-style __tls_get_addr calls without marker relocs don't match
	their arg setup insn one for one.  If such mismatches are found
	report the reloc and don't do any tls optimization.
	* elf64-ppc.c (ppc64_elf_tls_optimize): Likewise.
ld/testsuite/
	* ld-powerpc/tlsmark.s: Delete non-optimizable section.
	* ld-powerpc/tlsmark32.s: Likewise.
	* ld-powerpc/tlsmark.d: Adjust to suit.
	* ld-powerpc/tlsmark32.d: Likewise.
	* ld-powerpc/tlsopt1.d, * ld-powerpc/tlsopt1.s: New.
	* ld-powerpc/tlsopt2.d, * ld-powerpc/tlsopt2.s: New.
	* ld-powerpc/tlsopt3.d, * ld-powerpc/tlsopt3.s: New.
	* ld-powerpc/tlsopt4.d, * ld-powerpc/tlsopt4.s: New.
	* ld-powerpc/tlsopt1_32.d, * ld-powerpc/tlsopt1_32.s: New.
	* ld-powerpc/tlsopt2_32.d, * ld-powerpc/tlsopt2_32.s: New.
	* ld-powerpc/tlsopt3_32.d, * ld-powerpc/tlsopt3_32.s: New.
	* ld-powerpc/tlsopt4_32.d, * ld-powerpc/tlsopt4_32.s: New.
	* ld-powerpc/powerpc.exp: Run new tests.
@
text
@d35 5
d41 2
a42 2
0+10000140 <\.__tls_get_addr>:
    10000140:	4e 80 00 20 	blr
@


