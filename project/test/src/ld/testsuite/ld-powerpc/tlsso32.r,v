head	1.26;
access;
symbols
	binutils-2_24-branch:1.26.0.2
	binutils-2_24-branchpoint:1.26
	binutils-2_21_1:1.21
	binutils-2_23_2:1.25.2.1
	binutils-2_23_1:1.25
	binutils-2_23:1.25
	binutils-2_23-branch:1.25.0.2
	binutils-2_23-branchpoint:1.25
	binutils-2_22_branch:1.21.0.6
	binutils-2_22:1.21
	binutils-2_22-branch:1.21.0.4
	binutils-2_22-branchpoint:1.21
	binutils-2_21:1.21
	binutils-2_21-branch:1.21.0.2
	binutils-2_21-branchpoint:1.21
	binutils-2_20_1:1.19
	binutils-2_20:1.19
	binutils-arc-20081103-branch:1.19.0.10
	binutils-arc-20081103-branchpoint:1.19
	binutils-2_20-branch:1.19.0.8
	binutils-2_20-branchpoint:1.19
	dje-cgen-play1-branch:1.19.0.6
	dje-cgen-play1-branchpoint:1.19
	arc-20081103-branch:1.19.0.4
	arc-20081103-branchpoint:1.19
	binutils-2_19_1:1.19
	binutils-2_19:1.19
	binutils-2_19-branch:1.19.0.2
	binutils-2_19-branchpoint:1.19
	binutils-2_18:1.18
	binutils-2_18-branch:1.18.0.2
	binutils-2_18-branchpoint:1.18
	binutils-csl-coldfire-4_1-32:1.15.2.1
	binutils-csl-sourcerygxx-4_1-32:1.15.2.1
	binutils-csl-innovasic-fido-3_4_4-33:1.15.2.1
	binutils-csl-sourcerygxx-3_4_4-32:1.7.2.1
	binutils-csl-coldfire-4_1-30:1.15
	binutils-csl-sourcerygxx-4_1-30:1.15
	binutils-csl-coldfire-4_1-28:1.15
	binutils-csl-sourcerygxx-4_1-29:1.15.2.1
	binutils-csl-sourcerygxx-4_1-28:1.15
	binutils-csl-arm-2006q3-27:1.15
	binutils-csl-sourcerygxx-4_1-27:1.15
	binutils-csl-arm-2006q3-26:1.15
	binutils-csl-sourcerygxx-4_1-26:1.15
	binutils-csl-sourcerygxx-4_1-25:1.15
	binutils-csl-sourcerygxx-4_1-24:1.15
	binutils-csl-sourcerygxx-4_1-23:1.15
	binutils-csl-sourcerygxx-4_1-21:1.15
	binutils-csl-arm-2006q3-21:1.15
	binutils-csl-sourcerygxx-4_1-22:1.15
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.15
	binutils-csl-sourcerygxx-4_1-20:1.15
	binutils-csl-arm-2006q3-19:1.15
	binutils-csl-sourcerygxx-4_1-19:1.15
	binutils-csl-sourcerygxx-4_1-18:1.15
	binutils-csl-renesas-4_1-9:1.15
	binutils-csl-sourcerygxx-3_4_4-25:1.7.2.1
	binutils-csl-renesas-4_1-8:1.15
	binutils-csl-renesas-4_1-7:1.15
	binutils-csl-renesas-4_1-6:1.15
	binutils-csl-sourcerygxx-4_1-17:1.15
	binutils-csl-sourcerygxx-4_1-14:1.15
	binutils-csl-sourcerygxx-4_1-15:1.15
	binutils-csl-sourcerygxx-4_1-13:1.15
	binutils-2_17:1.15
	binutils-csl-sourcerygxx-4_1-12:1.15
	binutils-csl-sourcerygxx-3_4_4-21:1.15
	binutils-csl-wrs-linux-3_4_4-24:1.7.2.1
	binutils-csl-wrs-linux-3_4_4-23:1.7.2.1
	binutils-csl-sourcerygxx-4_1-9:1.15
	binutils-csl-sourcerygxx-4_1-8:1.15
	binutils-csl-sourcerygxx-4_1-7:1.15
	binutils-csl-arm-2006q1-6:1.15
	binutils-csl-sourcerygxx-4_1-6:1.15
	binutils-csl-wrs-linux-3_4_4-22:1.7.2.1
	binutils-csl-coldfire-4_1-11:1.15
	binutils-csl-sourcerygxx-3_4_4-19:1.15
	binutils-csl-coldfire-4_1-10:1.15
	binutils-csl-sourcerygxx-4_1-5:1.15
	binutils-csl-sourcerygxx-4_1-4:1.15
	binutils-csl-wrs-linux-3_4_4-21:1.7.2.1
	binutils-csl-morpho-4_1-4:1.15
	binutils-csl-sourcerygxx-3_4_4-17:1.15
	binutils-csl-wrs-linux-3_4_4-20:1.7.2.1
	binutils-2_17-branch:1.15.0.4
	binutils-2_17-branchpoint:1.15
	binutils-csl-2_17-branch:1.15.0.2
	binutils-csl-2_17-branchpoint:1.15
	binutils-csl-gxxpro-3_4-branch:1.7.2.1.0.4
	binutils-csl-gxxpro-3_4-branchpoint:1.7.2.1
	binutils-2_16_1:1.7.2.1
	binutils-csl-arm-2005q1b:1.7.2.1
	binutils-2_16:1.7.2.1
	binutils-csl-arm-2005q1a:1.7.2.1
	binutils-csl-arm-2005q1-branch:1.7.2.1.0.2
	binutils-csl-arm-2005q1-branchpoint:1.7.2.1
	binutils-2_16-branch:1.7.0.2
	binutils-2_16-branchpoint:1.7
	csl-arm-2004-q3d:1.7
	csl-arm-2004-q3:1.5
	binutils-2_15:1.2
	binutils-2_15-branchpoint:1.2
	csl-arm-2004-q1a:1.2
	csl-arm-2004-q1:1.2
	binutils-2_15-branch:1.2.0.8
	cagney_bfdfile-20040213-branch:1.2.0.6
	cagney_bfdfile-20040213-branchpoint:1.2
	cagney_bigcore-20040122-branch:1.2.0.4
	cagney_bigcore-20040122-branchpoint:1.2
	csl-arm-2003-q4:1.2
	binutils-2_14:1.2
	binutils-2_14-branch:1.2.0.2
	binutils-2_14-branchpoint:1.2
	binutils_latest_snapshot:1.26;
locks; strict;
comment	@# @;


1.26
date	2012.10.29.09.25.53;	author amodra;	state Exp;
branches;
next	1.25;

1.25
date	2012.06.15.15.13.37;	author amodra;	state Exp;
branches
	1.25.2.1;
next	1.24;

1.24
date	2012.06.06.10.50.17;	author amodra;	state Exp;
branches;
next	1.23;

1.23
date	2012.05.17.02.43.36;	author amodra;	state Exp;
branches;
next	1.22;

1.22
date	2012.05.12.13.46.26;	author hjl;	state Exp;
branches;
next	1.21;

1.21
date	2009.09.24.15.56.51;	author hjl;	state Exp;
branches;
next	1.20;

1.20
date	2009.09.23.03.12.27;	author amodra;	state Exp;
branches;
next	1.19;

1.19
date	2007.09.30.01.33.15;	author vapier;	state Exp;
branches;
next	1.18;

1.18
date	2006.10.17.13.41.48;	author amodra;	state Exp;
branches;
next	1.17;

1.17
date	2006.07.10.21.40.25;	author jakub;	state Exp;
branches;
next	1.16;

1.16
date	2006.06.02.00.32.00;	author amodra;	state Exp;
branches;
next	1.15;

1.15
date	2006.02.02.22.53.46;	author hjl;	state Exp;
branches
	1.15.2.1;
next	1.14;

1.14
date	2006.02.02.22.05.56;	author hjl;	state Exp;
branches;
next	1.13;

1.13
date	2005.08.15.15.39.47;	author amodra;	state Exp;
branches;
next	1.12;

1.12
date	2005.07.08.06.22.04;	author amodra;	state Exp;
branches;
next	1.11;

1.11
date	2005.05.07.02.55.55;	author amodra;	state Exp;
branches;
next	1.10;

1.10
date	2005.03.21.13.56.57;	author amodra;	state Exp;
branches;
next	1.9;

1.9
date	2005.03.16.21.52.47;	author hjl;	state Exp;
branches;
next	1.8;

1.8
date	2005.03.16.02.41.28;	author amodra;	state Exp;
branches;
next	1.7;

1.7
date	2004.11.02.05.40.05;	author hp;	state Exp;
branches
	1.7.2.1;
next	1.6;

1.6
date	2004.10.01.02.19.04;	author amodra;	state Exp;
branches;
next	1.5;

1.5
date	2004.09.22.07.24.14;	author amodra;	state Exp;
branches;
next	1.4;

1.4
date	2004.05.11.17.08.36;	author jakub;	state Exp;
branches;
next	1.3;

1.3
date	2004.05.05.13.31.05;	author amodra;	state Exp;
branches;
next	1.2;

1.2
date	2003.03.10.23.25.13;	author amodra;	state Exp;
branches;
next	1.1;

1.1
date	2003.02.18.06.11.32;	author amodra;	state Exp;
branches;
next	;

1.25.2.1
date	2013.01.21.13.48.52;	author amodra;	state Exp;
branches;
next	;

1.15.2.1
date	2006.11.29.16.31.09;	author shinwell;	state Exp;
branches;
next	;

1.7.2.1
date	2005.03.16.02.42.27;	author amodra;	state Exp;
branches;
next	;


desc
@@


1.26
log
@	* ld-powerpc/powerpc.exp: Modify emulation option passed to ld
	when little-endian.
	* ld-powerpc/apuinfo-nul.rd: Update for le output.
	* ld-powerpc/apuinfo.rd: Likewise.
	* ld-powerpc/plt1.d: Likewise.
	* ld-powerpc/relax.d: Likewise.
	* ld-powerpc/relaxr.d: Likewise.
	* ld-powerpc/sdadyn.d: Likewise.
	* ld-powerpc/tls.d: Likewise.
	* ld-powerpc/tls.g: Likewise.
	* ld-powerpc/tls.t: Likewise.
	* ld-powerpc/tls32.d: Likewise.
	* ld-powerpc/tls32.g: Likewise.
	* ld-powerpc/tls32.t: Likewise.
	* ld-powerpc/tlsexe.d: Likewise.
	* ld-powerpc/tlsexe.g: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexe.t: Likewise.
	* ld-powerpc/tlsexe32.d: Likewise.
	* ld-powerpc/tlsexe32.g: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsexe32.t: Likewise.
	* ld-powerpc/tlsexetoc.d: Likewise.
	* ld-powerpc/tlsexetoc.g: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsexetoc.t: Likewise.
	* ld-powerpc/tlsmark.d: Likewise.
	* ld-powerpc/tlsmark32.d: Likewise.
	* ld-powerpc/tlsopt1.d: Likewise.
	* ld-powerpc/tlsopt1_32.d: Likewise.
	* ld-powerpc/tlsopt2.d: Likewise.
	* ld-powerpc/tlsopt2_32.d: Likewise.
	* ld-powerpc/tlsopt3.d: Likewise.
	* ld-powerpc/tlsopt3_32.d: Likewise.
	* ld-powerpc/tlsopt4.d: Likewise.
	* ld-powerpc/tlsopt4_32.d: Likewise.
	* ld-powerpc/tlsso.d: Likewise.
	* ld-powerpc/tlsso.g: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso.t: Likewise.
	* ld-powerpc/tlsso32.d: Likewise.
	* ld-powerpc/tlsso32.g: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlsso32.t: Likewise.
	* ld-powerpc/tlstoc.d: Likewise.
	* ld-powerpc/tlstoc.g: Likewise.
	* ld-powerpc/tlstoc.t: Likewise.
	* ld-powerpc/tlstocso.d: Likewise.
	* ld-powerpc/tlstocso.g: Likewise.
	* ld-powerpc/tlstocso.t: Likewise.
	* ld-powerpc/tocopt.out: Likewise.
@
text
@#source: tls32.s
#as: -a32
#ld: -shared
#readelf: -WSsrl
#target: powerpc*-*-*

There are [0-9]+ section headers, starting at offset 0x[0-9a-f]+:

Section Headers:
 +\[Nr\] Name +Type +Addr +Off +Size +ES Flg Lk Inf Al
 +\[[ 0-9]+\] +NULL +0+ 0+ 0+ 0+ +0 +0 +0
 +\[[ 0-9]+\] \.hash +.*
 +\[[ 0-9]+\] \.dynsym +.*
 +\[[ 0-9]+\] \.dynstr +.*
 +\[[ 0-9]+\] \.rela\.dyn +.*
 +\[[ 0-9]+\] \.rela\.plt +.*
 +\[[ 0-9]+\] \.text +PROGBITS .* 0+70 0+ +AX +0 +0 +1
 +\[[ 0-9]+\] \.tdata +PROGBITS .* 0+1c 0+ WAT +0 +0 +4
 +\[[ 0-9]+\] \.tbss +NOBITS .* 0+1c 0+ WAT +0 +0 +4
 +\[[ 0-9]+\] \.dynamic +DYNAMIC .* 08 +WA +3 +0 +4
 +\[[ 0-9]+\] \.got +PROGBITS .* 0+34 04 WAX +0 +0 +4
 +\[[ 0-9]+\] \.plt +.*
 +\[[ 0-9]+\] \.shstrtab +.*
 +\[[ 0-9]+\] \.symtab +.*
 +\[[ 0-9]+\] \.strtab +.*
#...

Elf file type is DYN \(Shared object file\)
Entry point 0x[0-9a-f]+
There are [0-9]+ program headers, starting at offset [0-9]+

Program Headers:
 +Type +Offset +VirtAddr +PhysAddr +FileSiz MemSiz +Flg Align
 +LOAD .* R E 0x10000
 +LOAD .* RWE 0x10000
 +DYNAMIC .* RW +0x4
 +TLS .* 0x0+1c 0x0+38 R +0x4

 Section to Segment mapping:
 +Segment Sections\.\.\.
 +0+ +\.hash \.dynsym \.dynstr \.rela\.dyn \.rela\.plt \.text 
 +01 +\.tdata \.dynamic \.got \.plt 
 +02 +\.dynamic 
 +03 +\.tdata \.tbss 

Relocation section '\.rela\.dyn' at offset 0x[0-9a-f]+ contains 18 entries:
 Offset +Info +Type +Sym\. Value +Symbol's Name \+ Addend
[0-9a-f ]+R_PPC_REL24 +0+ +__tls_get_addr \+ 0
[0-9a-f ]+R_PPC_REL24 +0+ +__tls_get_addr \+ 0
[0-9a-f ]+R_PPC_REL24 +0+ +__tls_get_addr \+ 0
[0-9a-f ]+R_PPC_REL24 +0+ +__tls_get_addr \+ 0
[0-9a-f ]+R_PPC_TPREL16 +0+30 +le0 \+ 0
[0-9a-f ]+R_PPC_TPREL16_HA +0+34 +le1 \+ 0
[0-9a-f ]+R_PPC_TPREL16_LO +0+34 +le1 \+ 0
[0-9a-f ]+R_PPC_TPREL16 +0+103d0 +\.tdata \+ 103e4
[0-9a-f ]+R_PPC_TPREL16_HA +0+103d0 +\.tdata \+ 103e8
[0-9a-f ]+R_PPC_TPREL16_LO +0+103d0 +\.tdata \+ 103e8
[0-9a-f ]+R_PPC_DTPMOD32 +0
[0-9a-f ]+R_PPC_DTPREL32 +0
[0-9a-f ]+R_PPC_DTPMOD32 +0
[0-9a-f ]+R_PPC_DTPMOD32 +0+ +gd \+ 0
[0-9a-f ]+R_PPC_DTPREL32 +0+ +gd \+ 0
[0-9a-f ]+R_PPC_DTPMOD32 +0+1c +gd0 \+ 0
[0-9a-f ]+R_PPC_DTPREL32 +0+1c +gd0 \+ 0
[0-9a-f ]+R_PPC_TPREL32 +0+2c +ie0 \+ 0

Relocation section '\.rela\.plt' at offset 0x[0-9a-f]+ contains 1 entries:
 Offset +Info +Type +Sym\. Value +Symbol's Name \+ Addend
[0-9a-f ]+R_PPC_JMP_SLOT +0+ +__tls_get_addr \+ 0

Symbol table '\.dynsym' contains [0-9]+ entries:
 +Num: +Value +Size +Type +Bind +Vis +Ndx +Name
.* NOTYPE +LOCAL +DEFAULT +UND 
.* SECTION +LOCAL +DEFAULT +6 
.* SECTION +LOCAL +DEFAULT +7 
.* TLS +GLOBAL +DEFAULT +UND gd
.* TLS +GLOBAL +DEFAULT +8 le0
.* NOTYPE +GLOBAL +DEFAULT +UND __tls_get_addr
.* TLS +GLOBAL +DEFAULT +8 ld0
.* TLS +GLOBAL +DEFAULT +8 le1
.* TLS +GLOBAL +DEFAULT +UND ld
.* NOTYPE +GLOBAL +DEFAULT +6 _start
.* NOTYPE +GLOBAL +DEFAULT +11 __end
.* TLS +GLOBAL +DEFAULT +8 ld2
.* TLS +GLOBAL +DEFAULT +8 ld1
.* NOTYPE +GLOBAL +DEFAULT +11 __bss_start
.* NOTYPE +GLOBAL +DEFAULT +10 _edata
.* NOTYPE +GLOBAL +DEFAULT +11 _end
.* TLS +GLOBAL +DEFAULT +8 gd0
.* TLS +GLOBAL +DEFAULT +8 ie0

Symbol table '\.symtab' contains [0-9]+ entries:
 +Num: +Value +Size +Type +Bind +Vis +Ndx +Name
.* NOTYPE +LOCAL +DEFAULT +UND 
.* SECTION +LOCAL +DEFAULT +1 
.* SECTION +LOCAL +DEFAULT +2 
.* SECTION +LOCAL +DEFAULT +3 
.* SECTION +LOCAL +DEFAULT +4 
.* SECTION +LOCAL +DEFAULT +5 
.* SECTION +LOCAL +DEFAULT +6 
.* SECTION +LOCAL +DEFAULT +7 
.* SECTION +LOCAL +DEFAULT +8 
.* SECTION +LOCAL +DEFAULT +9 
.* SECTION +LOCAL +DEFAULT +10 
.* SECTION +LOCAL +DEFAULT +11 
.* FILE +LOCAL +DEFAULT +ABS .*
.* TLS +LOCAL +DEFAULT +7 gd4
.* TLS +LOCAL +DEFAULT +7 ld4
.* TLS +LOCAL +DEFAULT +7 ld5
.* TLS +LOCAL +DEFAULT +7 ld6
.* TLS +LOCAL +DEFAULT +7 ie4
.* TLS +LOCAL +DEFAULT +7 le4
.* TLS +LOCAL +DEFAULT +7 le5
.* FILE +LOCAL +DEFAULT +ABS .*
.* OBJECT +LOCAL +DEFAULT +9 _DYNAMIC
.* OBJECT +LOCAL +DEFAULT +10 _GLOBAL_OFFSET_TABLE_
.* TLS +GLOBAL +DEFAULT +UND gd
.* TLS +GLOBAL +DEFAULT +8 le0
.* NOTYPE +GLOBAL +DEFAULT +UND __tls_get_addr
.* TLS +GLOBAL +DEFAULT +8 ld0
.* TLS +GLOBAL +DEFAULT +8 le1
.* TLS +GLOBAL +DEFAULT +UND ld
.* NOTYPE +GLOBAL +DEFAULT +6 _start
.* NOTYPE +GLOBAL +DEFAULT +11 __end
.* TLS +GLOBAL +DEFAULT +8 ld2
.* TLS +GLOBAL +DEFAULT +8 ld1
.* NOTYPE +GLOBAL +DEFAULT +11 __bss_start
.* NOTYPE +GLOBAL +DEFAULT +10 _edata
.* NOTYPE +GLOBAL +DEFAULT +11 _end
.* TLS +GLOBAL +DEFAULT +8 gd0
.* TLS +GLOBAL +DEFAULT +8 ie0
@


1.25
log
@ld/
	* ldlang.h (lang_output_section_statement_type): Add after_end field.
	(lang_abs_symbol_at_beginning_of, lang_abs_symbol_at_end_of): Delete.
	(section_for_dot): Declare.
	* ldlang.c (lang_size_sections_1): Correct comment.
	(current_section): Move earlier.
	(current_assign, prefer_next_section): New static vars.
	(lang_do_assignments_1): Add found_end param.  Detect _end
	assignment to set found_end.  Set os->after_end.  Set above statics.
	(lang_do_assignments): Adjust lang_do_assignments_1 call.  Init
	vars.
	(section_for_dot): New function.
	(lang_set_startof): Don't make an absolute symbol.
	(lang_abs_symbol_at_beginning_of, lang_abs_symbol_at_end_of): Delete.
	* ldexp.c (new_rel_from_abs): Use section_for_dot.
	* emultempl/lnk960.em (symbol_at_beginning_of): New function.
	(symbol_at_end_of): Likewise.
	(lnk960_after_allocation): Use them.
	* scripttempl/elf.sc: Precede OTHER_GOT_SYMBOLS with . = .; and
	likewise before __bss_start.

ld/testsuite/
Update far too many tests.
@
text
@d3 1
a3 1
#ld: -shared -melf32ppc
@


1.25.2.1
log
@	PR 12549
	PR 14493
	PR 14567
	PR 14662
	PR 14758
	PR 14813
	PR 14904
	PR 14915
	PR 14926
	PR 14950
	PR 14962
	Apply mainline patches
@
text
@d3 1
a3 1
#ld: -shared
@


1.24
log
@bfd/
	* elflink.c (elf_link_input_bfd): Provide a file symbol for
	each input file with local syms, if the input lacks such.
	(bfd_elf_final_link): Add a file symbol to mark end of locals
	for which we can associate with input files.
	(struct elf_final_link_info): Add filesym_count field.
	(struct elf_outext_info): Add need_second_pass and second_pass.
	(elf_link_output_extsym): Detect symbols defined in the output
	file, emit them on second pass over locals.
ld/testsuite/
Update to suit added STT_FILE symbols.
@
text
@d83 1
a83 1
.* NOTYPE +GLOBAL +DEFAULT +ABS __end
d86 3
a88 3
.* NOTYPE +GLOBAL +DEFAULT +ABS __bss_start
.* NOTYPE +GLOBAL +DEFAULT +ABS _edata
.* NOTYPE +GLOBAL +DEFAULT +ABS _end
d124 1
a124 1
.* NOTYPE +GLOBAL +DEFAULT +ABS __end
d127 3
a129 3
.* NOTYPE +GLOBAL +DEFAULT +ABS __bss_start
.* NOTYPE +GLOBAL +DEFAULT +ABS _edata
.* NOTYPE +GLOBAL +DEFAULT +ABS _end
@


1.23
log
@bfd/
	* elf32-ppc.c (ppc_elf_finish_dynamic_symbol): Don't make _DYNAMIC,
	_GLOBAL_OFFSET_TABLE_ or _PROCEDURE_LINKAGE_TABLE_ absolute.
	* elf64-ppc.c (ppc64_elf_finish_dynamic_symbol): Don't make _DYNAMIC
	absolute.
ld/testsuite/
	* ld-powerpc/tlsso.r: Update for dynamic sym changes.
	* ld-powerpc/tlsso32.d: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
@
text
@d106 1
d114 1
@


1.22
log
@Adjust testcases for readelf addend change

gas/testsuite/

	* gas/mips/elf-rel10.d: Updated.
	* gas/mips/elf-rel22.d: Likewise.
	* gas/mmix/comment-1.d: Likewise.

ld/testsuite/

	* ld-alpha/tlspic.rd: Updated.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/vxworks1-lib.rd: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-sh/shared-1.d: Likewise.
	* ld-sh/tlspic-2.d: Likewise.
	* ld-sparc/tlssunnopic32.rd: Likewise.
	* ld-sparc/tlssunnopic64.rd: Likewise.
	* ld-sparc/tlssunpic32.rd: Likewise.
	* ld-sparc/tlssunpic64.rd: Likewise.
@
text
@d113 2
a114 2
.* OBJECT +LOCAL +DEFAULT +ABS _DYNAMIC
.* OBJECT +LOCAL +DEFAULT +ABS _GLOBAL_OFFSET_TABLE_
@


1.21
log
@bfd/

2009-09-24  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/10630
	* elflink.c (elf_link_output_extsym): Turn off visibility on
	local symbol.
	(bfd_elf_final_link): Turn off visibility on dynamic local
	symbol.

ld/testsuite/

2009-09-24  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/10630
	* ld-alpha/tlsbin.rd: Remove HIDDEN/.hidden on local symbols.
	* ld-alpha/tlsbinr.rd: Likewise.
	* ld-alpha/tlspic.rd: Likewise.
	* ld-cris/libdso-2.d: Likewise.
	* ld-cris/locref1.d: Likewise.
	* ld-cris/locref2.d: Likewise.
	* ld-cris/tls-e-20a.d: Likewise.
	* ld-cris/tls-e-20.d: Likewise.
	* ld-cris/tls-e-80.d: Likewise.
	* ld-cris/tls-gc-68.d: Likewise.
	* ld-cris/tls-gc-69.d: Likewise.
	* ld-cris/tls-gc-70.d: Likewise.
	* ld-cris/tls-gc-75.d: Likewise.
	* ld-cris/tls-gc-76.d: Likewise.
	* ld-cris/tls-gc-79.d: Likewise.
	* ld-cris/tls-gd-1h.d: Likewise.
	* ld-cris/tls-gd-2h.d: Likewise.
	* ld-cris/tls-ld-4.d: Likewise.
	* ld-cris/tls-ld-5.d: Likewise.
	* ld-cris/tls-ld-6.d: Likewise.
	* ld-cris/tls-ld-7.d: Likewise.
	* ld-cris/tls-ldgd-14.d: Likewise.
	* ld-cris/tls-ldgd-15.d: Likewise.
	* ld-cris/tls-local-63.d: Likewise.
	* ld-cris/tls-local-64.d: Likewise.
	* ld-elf/pr9676.rd: Likewise.
	* ld-elf/pr9679.rd: Likewise.
	* ld-elfvsb/hidden2.d: Likewise.
	* ld-i386/tlsbindesc.rd: Likewise.
	* ld-i386/tlsbin.rd: Likewise.
	* ld-i386/tlsdesc.rd: Likewise.
	* ld-i386/tlsgdesc.rd: Likewise.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlspic.rd: Likewise.
	* ld-ia64/tlsbin.rd: Likewise.
	* ld-ia64/tlspic.rd: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-sparc/gotop32.rd: Likewise.
	* ld-sparc/gotop64.rd: Likewise.
	* ld-sparc/tlssunbin32.rd: Likewise.
	* ld-sparc/tlssunbin64.rd: Likewise.
	* ld-sparc/tlssunnopic32.rd: Likewise.
	* ld-sparc/tlssunnopic64.rd: Likewise.
	* ld-sparc/tlssunpic32.rd: Likewise.
	* ld-sparc/tlssunpic64.rd: Likewise.
	* ld-x86-64/tlsbindesc.rd: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-x86-64/tlsdesc.rd: Likewise.
	* ld-x86-64/tlsgdesc.rd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
	* ld-xtensa/tlsbin.rd: Likewise.
	* ld-xtensa/tlspic.rd: Likewise.

	* ld-elf/local1.d: New.
	* ld-elf/local1.map: Likewise.
	* ld-elf/local1.s: Likewise.
	* ld-ia64/local1.d: Likewise.
	* ld-ia64/local1.map: Likewise.
	* ld-ia64/local1.s: Likewise.
@
text
@d58 3
a60 3
[0-9a-f ]+R_PPC_DTPMOD32 +0+
[0-9a-f ]+R_PPC_DTPREL32 +0+
[0-9a-f ]+R_PPC_DTPMOD32 +0+
@


1.20
log
@Tolerate some whitespace differences in readelf output.
@
text
@d113 2
a114 2
.* OBJECT +LOCAL +HIDDEN +ABS _DYNAMIC
.* OBJECT +LOCAL +HIDDEN +ABS _GLOBAL_OFFSET_TABLE_
@


1.19
log
@2007-09-29  Mike Frysinger  <vapier@@gentoo.org>

	* ld-alpha/tlsbin.rd: Use [0-9]+ to match section header count and
	0x[0-9a-f]+ to match section header offset.  Match section indexes
	with \[[ 0-9]+\].  Use [0-9]+ to match program header count and
	0x[0-9a-f]+ to match program header offset.  Match .dynsym and
	.symtab entry counts with [0-9]+.
	* ld-alpha/tlsbinr.rd: Likewise.
	* ld-alpha/tlspic.rd: Likewise.
	* ld-i386/tlsbin.rd: Likewise.
	* ld-i386/tlsbindesc.rd: Likewise.
	* ld-i386/tlsdesc.rd: Likewise.
	* ld-i386/tlsgdesc.rd: Likewise.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlspic.rd: Likewise.
	* ld-ia64/tlsbin.rd: Likewise.
	* ld-ia64/tlspic.rd: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-sparc/tlssunbin32.rd: Likewise.
	* ld-sparc/tlssunbin64.rd: Likewise.
	* ld-sparc/tlssunnopic32.rd: Likewise.
	* ld-sparc/tlssunnopic64.rd: Likewise.
	* ld-sparc/tlssunpic32.rd: Likewise.
	* ld-sparc/tlssunpic64.rd: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-x86-64/tlsbindesc.rd: Likewise.
	* ld-x86-64/tlsdesc.rd: Likewise.
	* ld-x86-64/tlsgdesc.rd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
@
text
@d72 1
a72 1
 +Num: +Value +Size Type +Bind +Vis +Ndx Name
d74 17
a90 17
.* SECTION LOCAL +DEFAULT +6 
.* SECTION LOCAL +DEFAULT +7 
.* TLS +GLOBAL DEFAULT +UND gd
.* TLS +GLOBAL DEFAULT +8 le0
.* NOTYPE +GLOBAL DEFAULT +UND __tls_get_addr
.* TLS +GLOBAL DEFAULT +8 ld0
.* TLS +GLOBAL DEFAULT +8 le1
.* TLS +GLOBAL DEFAULT +UND ld
.* NOTYPE +GLOBAL DEFAULT +6 _start
.* NOTYPE +GLOBAL DEFAULT +ABS __end
.* TLS +GLOBAL DEFAULT +8 ld2
.* TLS +GLOBAL DEFAULT +8 ld1
.* NOTYPE +GLOBAL DEFAULT +ABS __bss_start
.* NOTYPE +GLOBAL DEFAULT +ABS _edata
.* NOTYPE +GLOBAL DEFAULT +ABS _end
.* TLS +GLOBAL DEFAULT +8 gd0
.* TLS +GLOBAL DEFAULT +8 ie0
d93 1
a93 1
 +Num: +Value +Size Type +Bind +Vis +Ndx Name
d95 11
a105 11
.* SECTION LOCAL +DEFAULT +1 
.* SECTION LOCAL +DEFAULT +2 
.* SECTION LOCAL +DEFAULT +3 
.* SECTION LOCAL +DEFAULT +4 
.* SECTION LOCAL +DEFAULT +5 
.* SECTION LOCAL +DEFAULT +6 
.* SECTION LOCAL +DEFAULT +7 
.* SECTION LOCAL +DEFAULT +8 
.* SECTION LOCAL +DEFAULT +9 
.* SECTION LOCAL +DEFAULT +10 
.* SECTION LOCAL +DEFAULT +11 
d115 15
a129 15
.* TLS +GLOBAL DEFAULT +UND gd
.* TLS +GLOBAL DEFAULT +8 le0
.* NOTYPE +GLOBAL DEFAULT +UND __tls_get_addr
.* TLS +GLOBAL DEFAULT +8 ld0
.* TLS +GLOBAL DEFAULT +8 le1
.* TLS +GLOBAL DEFAULT +UND ld
.* NOTYPE +GLOBAL DEFAULT +6 _start
.* NOTYPE +GLOBAL DEFAULT +ABS __end
.* TLS +GLOBAL DEFAULT +8 ld2
.* TLS +GLOBAL DEFAULT +8 ld1
.* NOTYPE +GLOBAL DEFAULT +ABS __bss_start
.* NOTYPE +GLOBAL DEFAULT +ABS _edata
.* NOTYPE +GLOBAL DEFAULT +ABS _end
.* TLS +GLOBAL DEFAULT +8 gd0
.* TLS +GLOBAL DEFAULT +8 ie0
@


1.18
log
@bfd/
	* elf-bfd.h (struct elf_link_hash_table): Reorder.  Add
	text_index_section and data_index_section.
	(struct elf_backend_data): Add elf_backend_init_index_section.
	(_bfd_elf_init_1_index_section): Declare.
	(_bfd_elf_init_2_index_sections): Declare.
	* elfxx-target.h (elf_backend_init_index_section): Define.
	(elfNN_bed): Init new field.
	* elflink.c (_bfd_elf_link_omit_section_dynsym): Keep first tls
	section and text_index_section plus data_index_section.
	(_bfd_elf_link_renumber_dynsyms): Clear dynindx on omitted sections.
	(_bfd_elf_init_1_index_section): New function.
	(_bfd_elf_init_2_index_sections): New function.
	(bfd_elf_size_dynsym_hash_dynstr): Call elf_backend_init_index_section.
	(elf_link_input_bfd): When emitting relocs, use text_index_section
	and data_index_section for removed sections.
	* elf-m10300.c (elf_backend_omit_section_dynsym): Define.
	* elf32-i386.c: Likewise.
	* elf32-m32r.c: Likewise.
	* elf32-sh.c: Likewise.
	* elf32-xstormy16.c: Likewise.
	* elf32-xtensa.c: Likewise.
	* elf64-alpha.c: Likewise.
	* elf64-hppa.c: Likewise.
	* elf64-mmix.c: Likewise.
	* elf64-sh64.c: Likewise.
	* elfxx-ia64.c: Likewise.
	* elf32-arm.c (elf32_arm_final_link_relocate): Use text_index_section
	and data_index_section sym for relocs against sections with no dynamic
	section sym.
	(elf_backend_init_index_section): Define.
	* elf32-cris.c: Similarly.
	* elf32-hppa.c: Similarly.
	* elf32-i370.c: Similarly.
	* elf32-m68k.c: Similarly.
	* elf32-mips.c: Similarly.
	* elf32-ppc.c: Similarly.
	* elf32-s390.c: Similarly.
	* elf32-sparc.c: Similarly.
	* elf32-vax.c: Similarly.
	* elf64-mips.c: Similarly.
	* elf64-ppc.c: Similarly.
	* elf64-s390.c: Similarly.
	* elf64-sparc.c: Similarly.
	* elf64-x86-64.c: Similarly.
	* elfn32-mips.c: Similarly.
	* elfxx-mips.c: Similarly.
	* elfxx-sparc.c: Similarly.
	* linker.c (fix_syms): Base symbols in removed sections on
	previous section in preference to using absolute section.

ld/
	* ldlang.c (strip_excluded_output_sections): Do strip sections
	that define syms, but don't ignore them.
	* ld.texinfo (Output Section Discarding): Revise.
	* emultempl/armcoff.em (gld${EMULATION_NAME}_finish): Always call
	finish_default.

ld/testsuite/
	Update for section sym changes.
@
text
@d7 1
a7 1
There are 15 section headers.*
d11 15
a25 15
 +\[ 0\] +NULL +0+ 0+ 0+ 0+ +0 +0 +0
 +\[ 1\] \.hash +.*
 +\[ 2\] \.dynsym +.*
 +\[ 3\] \.dynstr +.*
 +\[ 4\] \.rela\.dyn +.*
 +\[ 5\] \.rela\.plt +.*
 +\[ 6\] \.text +PROGBITS .* 0+70 0+ +AX +0 +0 +1
 +\[ 7\] \.tdata +PROGBITS .* 0+1c 0+ WAT +0 +0 +4
 +\[ 8\] \.tbss +NOBITS .* 0+1c 0+ WAT +0 +0 +4
 +\[ 9\] \.dynamic +DYNAMIC .* 08 +WA +3 +0 +4
 +\[10\] \.got +PROGBITS .* 0+34 04 WAX +0 +0 +4
 +\[11\] \.plt +.*
 +\[12\] \.shstrtab +.*
 +\[13\] \.symtab +.*
 +\[14\] \.strtab +.*
d30 1
a30 1
There are 4 program headers.*
d92 1
a92 1
Symbol table '\.symtab' contains 36 entries:
@


1.17
log
@include/
	* bfdlink.h (struct bfd_link_info): Add emit_hash and
	emit_gnu_hash bitfields.
include/elf/
	* common.h (SHT_GNU_HASH, DT_GNU_HASH): Define.
ld/
	* scripttempl/elf.sc: Add .gnu.hash section.
	* emultempl/elf32.em (OPTION_HASH_STYLE): Define.
	(gld${EMULATION_NAME}_add_options): Register --hash-style option.
	(gld${EMULATION_NAME}_handle_option): Handle it.
	(gld${EMULATION_NAME}_list_options): Document it.
	* ldmain.c (main): Initialize emit_hash and emit_gnu_hash.
	* ld.texinfo: Document --hash-style option.
bfd/
	* elf.c (_bfd_elf_print_private_bfd_data): Handle DT_GNU_HASH.
	(bfd_section_from_shdr, elf_fake_sections, assign_section_numbers):
	Handle SHT_GNU_HASH.
	(special_sections_g): Include .gnu.hash section.
	(bfd_elf_gnu_hash): New function.
	* elf-bfd.h (bfd_elf_gnu_hash, _bfd_elf_hash_symbol): New prototypes.
	(struct elf_backend_data): Add elf_hash_symbol method.
	* elflink.c (_bfd_elf_link_create_dynamic_sections): Create .hash
	only if info->emit_hash, create .gnu.hash section if
	info->emit_gnu_hash.
	(struct collect_gnu_hash_codes): New type.
	(elf_collect_gnu_hash_codes, elf_renumber_gnu_hash_syms,
	_bfd_elf_hash_symbol): New functions.
	(compute_bucket_count): Don't compute HASHCODES array, instead add
	that and NSYMS as arguments.  Use bed->s->sizeof_hash_entry
	instead of bed->s->arch_size / 8.  Fix .hash size estimation.
	When not optimizing, use the number of hashed symbols rather than
	dynsymcount.
	(bfd_elf_size_dynamic_sections): Only add DT_HASH if info->emit_hash,
	and ADD DT_GNU_HASH if info->emit_gnu_hash.
	(bfd_elf_size_dynsym_hash_dynstr): Size .hash only if info->emit_hash,
	adjust compute_bucket_count caller.  Create and populate .gnu.hash
	section if info->emit_gnu_hash.
	(elf_link_output_extsym): Only populate .hash section if
	finfo->hash_sec != NULL.
	(bfd_elf_final_link): Adjust assertion.  Handle DT_GNU_HASH.
	* elfxx-target.h (elf_backend_hash_symbol): Define if not yet defined.
	(elfNN_bed): Add elf_backend_hash_symbol.
	* elf64-x86-64.c (elf64_x86_64_hash_symbol): New function.
	(elf_backend_hash_symbol): Define.
	* elf32-i386.c (elf_i386_hash_symbol): New function.
	(elf_backend_hash_symbol): Define.
binutils/
	* readelf.c (get_dynamic_type): Handle DT_GNU_HASH.
	(get_section_type_name): Handle SHT_GNU_HASH.
	(dynamic_info_DT_GNU_HASH): New variable.
	(process_dynamic_section): Handle DT_GNU_HASH.
	(process_symbol_table): Print also DT_GNU_HASH histogram.
ld/testsuite/
	* ld-powerpc/tlsso32.r: Adjust.
	* ld-powerpc/tlsso32.d: Adjust.
	* ld-powerpc/tlsso32.g: Adjust.
	* ld-powerpc/tlsso.r: Adjust.
	* ld-powerpc/tlsso.g: Adjust.
	* ld-powerpc/tlstocso.g: Adjust.
@
text
@d55 3
a57 3
[0-9a-f ]+R_PPC_TPREL16 +0+103e4 +\.tdata \+ 103f8
[0-9a-f ]+R_PPC_TPREL16_HA +0+103e4 +\.tdata \+ 103fc
[0-9a-f ]+R_PPC_TPREL16_LO +0+103e4 +\.tdata \+ 103fc
a75 1
.* SECTION LOCAL +DEFAULT +8 
@


1.16
log
@bfd/
	PR ld/2723
	* elflink.c (bfd_elf_final_link): Don't output section symbols
	for special ELF sections.
ld/testsuite/
Update for removal of some section syms.
@
text
@d55 3
a57 3
[0-9a-f ]+R_PPC_TPREL16 +0+1041c +\.tdata \+ 10430
[0-9a-f ]+R_PPC_TPREL16_HA +0+1041c +\.tdata \+ 10434
[0-9a-f ]+R_PPC_TPREL16_LO +0+1041c +\.tdata \+ 10434
@


1.15
log
@Updo the last change to binutils and ld/testsuite.
@
text
@d93 1
a93 1
Symbol table '\.symtab' contains 39 entries:
a106 3
.* SECTION LOCAL +DEFAULT +12 
.* SECTION LOCAL +DEFAULT +13 
.* SECTION LOCAL +DEFAULT +14 
@


1.15.2.1
log
@        Backport from mainline:

        2006-07-29  Richard Sandiford  <richard@@codesourcery.com>

        ld/
        * Makefile.am (eelf32b4300.c): Update dependencies.
        (eelf32bmip.c): Likewise.
        (eelf32bsmip.c): Likewise.
        (eelf32btsmip.c): Likewise.
        (eelf32btsmipn32.c): Likewise.
        (eelf32ltsmip.c): Likewise.
        (eelf32ltsmipn32.c): Likewise.
        (eelf32ebmip.c): Likewise.
        (eelf32ebmipvxworks.c): Likewise.
        (eelf32elmip.c): Likewise.
        (eelf32elmipvxworks.c): Likewise.
        (eelf32bmipn32.c): Likewise.
        (eelf32lmip.c): Likewise.
        (eelf32mipswindiss.c): Likewise.
        (eelf32lsmip.c): Likewise.
        (eelf64bmip.c): Likewise.
        (eelf64btsmip.c): Likewise.
        (eelf64ltsmip.c): Likewise.
        (emipsbig.c): Likewise.  Canonicalize ${GENSCRIPTS} line.
        (emipsbsd.c): Likewise.
        (emipsidt.c): Update dependencies.
        (emipsidtl.c): Likewise.
        (emipslit.c): Likewise.
        (emipslnews.c): Likewise.
        (emipspe.c): Likewise.  Fix ${GENSCRIPTS} invocation.
        * Makefile.in: Regenerate.
        * emulparams/elf32bmip.sh (EXTRA_EM_FILE): Define.
        * emulparams/elf32bmipn32-defs.sh (EXTRA_EM_FILE): Likewise.
        * emultempl/irix.em: Include emultempl/mipself.em.
        * emultempl/mipself.em: New file.

        ld/testsuite/
        * ld-mips-elf/hash1.s, ld-mips-elf/hash1a.d,
        * ld-mips-elf/hash1b.d, ld-mips-elf/hash1c.d: New tests.
        * ld-mips-elf/mips-elf.exp: Run them.

        2006-07-14  Jakub Jelinek  <jakub@@redhat.com>

        * elflink.c (bfd_elf_size_dynsym_hash_dynstr): Fix cinfo.shift2 value.

        2006-07-10  Jakub Jelinek  <jakub@@redhat.com>

        include/
        * bfdlink.h (struct bfd_link_info): Add emit_hash and
        emit_gnu_hash bitfields.

        include/elf/
        * common.h (SHT_GNU_HASH, DT_GNU_HASH): Define.

        ld/
        * scripttempl/elf.sc: Add .gnu.hash section.
        * emultempl/elf32.em (OPTION_HASH_STYLE): Define.
        (gld${EMULATION_NAME}_add_options): Register --hash-style option.
        (gld${EMULATION_NAME}_handle_option): Handle it.
        (gld${EMULATION_NAME}_list_options): Document it.
        * ldmain.c (main): Initialize emit_hash and emit_gnu_hash.
        * ld.texinfo: Document --hash-style option.

        ld/testsuite/
        * ld-powerpc/tlsso32.r: Adjust.
        * ld-powerpc/tlsso32.d: Adjust.
        * ld-powerpc/tlsso32.g: Adjust.
        * ld-powerpc/tlsso.r: Adjust.
        * ld-powerpc/tlsso.g: Adjust.
        * ld-powerpc/tlstocso.g: Adjust.

        bfd/
        * elf.c (_bfd_elf_print_private_bfd_data): Handle DT_GNU_HASH.
        (bfd_section_from_shdr, elf_fake_sections, assign_section_numbers):
        Handle SHT_GNU_HASH.
        (special_sections_g): Include .gnu.hash section.
        (bfd_elf_gnu_hash): New function.
        * elf-bfd.h (bfd_elf_gnu_hash, _bfd_elf_hash_symbol): New prototypes.
        (struct elf_backend_data): Add elf_hash_symbol method.
        * elflink.c (_bfd_elf_link_create_dynamic_sections): Create .hash
        only if info->emit_hash, create .gnu.hash section if
        info->emit_gnu_hash.
        (struct collect_gnu_hash_codes): New type.
        (elf_collect_gnu_hash_codes, elf_renumber_gnu_hash_syms,
        _bfd_elf_hash_symbol): New functions.
        (compute_bucket_count): Don't compute HASHCODES array, instead add
        that and NSYMS as arguments.  Use bed->s->sizeof_hash_entry
        instead of bed->s->arch_size / 8.  Fix .hash size estimation.
        When not optimizing, use the number of hashed symbols rather than
        dynsymcount.
        (bfd_elf_size_dynamic_sections): Only add DT_HASH if info->emit_hash,
        and ADD DT_GNU_HASH if info->emit_gnu_hash.
        (bfd_elf_size_dynsym_hash_dynstr): Size .hash only if info->emit_hash,
        adjust compute_bucket_count caller.  Create and populate .gnu.hash
        section if info->emit_gnu_hash.
        (elf_link_output_extsym): Only populate .hash section if
        finfo->hash_sec != NULL.
        (bfd_elf_final_link): Adjust assertion.  Handle DT_GNU_HASH.
        * elfxx-target.h (elf_backend_hash_symbol): Define if not yet defined.
        (elfNN_bed): Add elf_backend_hash_symbol.
        * elf64-x86-64.c (elf64_x86_64_hash_symbol): New function.
        (elf_backend_hash_symbol): Define.
        * elf32-i386.c (elf_i386_hash_symbol): New function.
        (elf_backend_hash_symbol): Define.

        binutils/
        * readelf.c (get_dynamic_type): Handle DT_GNU_HASH.
        (get_section_type_name): Handle SHT_GNU_HASH.
        (dynamic_info_DT_GNU_HASH): New variable.
        (process_dynamic_section): Handle DT_GNU_HASH.
        (process_symbol_table): Print also DT_GNU_HASH histogram.
@
text
@d55 3
a57 3
[0-9a-f ]+R_PPC_TPREL16 +0+103e4 +\.tdata \+ 103f8
[0-9a-f ]+R_PPC_TPREL16_HA +0+103e4 +\.tdata \+ 103fc
[0-9a-f ]+R_PPC_TPREL16_LO +0+103e4 +\.tdata \+ 103fc
@


1.14
log
@binutils/

2006-02-02  H.J. Lu  <hongjiu.lu@@intel.com>

	* readelf.c (process_program_headers): Undo the change made on
	2004-09-22.  Match PT_DYNAMIC segment only with SHT_DYNAMIC
	sections.

ld/testsuite/

2006-02-02  H.J. Lu  <hongjiu.lu@@intel.com>

	* ld-i386/tlsbin.rd: Update for changed segment map.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlspic.rd: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-sh/tlsbin-2.d: Likewise.
	* ld-sh/tlspic-2.d: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
@
text
@d42 1
a42 1
 +01 +\.tdata \.tbss \.dynamic \.got \.plt 
@


1.13
log
@Adjust for dynamic sym changes.
@
text
@d42 1
a42 1
 +01 +\.tdata \.dynamic \.got \.plt 
@


1.12
log
@	* ld-cris/pv32.s: Give expobj a size.
	* ld-cris/pv32-1.d: Update.
	* ld-alpha/tlsbin.dd: Update for empty section removal change.
	* ld-alpha/tlsbin.sd: Likewise.
	* ld-alpha/tlsbin.td: Likewise.
	* ld-alpha/tlsbinr.dd: Likewise.
	* ld-alpha/tlsbinr.rd: Likewise.
	* ld-alpha/tlspic.dd: Likewise.
	* ld-alpha/tlspic.rd: Likewise.
	* ld-alpha/tlspic.sd: Likewise.
	* ld-alpha/tlspic.td: Likewise.
	* ld-arm/tls-lib.d: Likewise.
	* ld-arm/tls-lib.r: Likewise.
	* ld-cris/gotplt2.d: Likewise.
	* ld-cris/gotplt3.d: Likewise.
	* ld-cris/hiddef1.d: Likewise.
	* ld-cris/libdso-10.d: Likewise.
	* ld-cris/libdso-11.d: Likewise.
	* ld-cris/libdso-12.d: Likewise.
	* ld-cris/libdso-14.d: Likewise.
	* ld-cris/libdso-2.d: Likewise.
	* ld-i386/tlsnopic.dd: Likewise.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlsnopic.sd: Likewise.
	* ld-i386/tlspic.rd: Likewise.
	* ld-mmix/bpo-10.d: Likewise.
	* ld-mmix/bpo-22.d: Likewise.
	* ld-mmix/sec-7m.d: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.g: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso32.d: Likewise.
	* ld-powerpc/tlsso32.g: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlstocso.g: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
@
text
@d17 5
a21 5
 +\[ 6\] \.text +PROGBITS +0+3c8 0+3c8 0+70 0+ +AX +0 +0 +1
 +\[ 7\] \.tdata +PROGBITS +0+10438 0+438 0+1c 0+ WAT +0 +0 +4
 +\[ 8\] \.tbss +NOBITS +0+10454 0+454 0+1c 0+ WAT +0 +0 +4
 +\[ 9\] \.dynamic +DYNAMIC +0+10454 0+454 0+a0 08 +WA +3 +0 +4
 +\[10\] \.got +PROGBITS +0+104f4 0+4f4 0+34 04 WAX +0 +0 +4
d34 4
a37 4
 +LOAD +0x0+ 0x0+ 0x0+ 0x0+438 0x0+438 R E 0x10000
 +LOAD +0x0+438 0x0+10438 0x0+10438 0x0+f0 0x0+144 RWE 0x10000
 +DYNAMIC +0x0+454 0x0+10454 0x0+10454 0x0+a0 0x0+a0 RW +0x4
 +TLS +0x0+438 0x0+10438 0x0+10438 0x0+1c 0x0+38 R +0x4
d55 3
a57 3
[0-9a-f ]+R_PPC_TPREL16 +0+10438 +\.tdata \+ 1044c
[0-9a-f ]+R_PPC_TPREL16_HA +0+10438 +\.tdata \+ 10450
[0-9a-f ]+R_PPC_TPREL16_LO +0+10438 +\.tdata \+ 10450
d71 1
a71 1
Symbol table '\.dynsym' contains 20 entries:
d73 19
a91 20
 +[0-9]+: 0+ +0 NOTYPE +LOCAL +DEFAULT +UND 
 +[0-9]+: 0+3c8 +0 SECTION LOCAL +DEFAULT +6 
 +[0-9]+: 0+10438 +0 SECTION LOCAL +DEFAULT +7 
 +[0-9]+: 0+10454 +0 SECTION LOCAL +DEFAULT +8 
 +[0-9]+: 0+10454 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
 +[0-9]+: 0+ +0 TLS +GLOBAL DEFAULT +UND gd
 +[0-9]+: 0+30 +0 TLS +GLOBAL DEFAULT +8 le0
 +[0-9]+: 0+ +0 NOTYPE +GLOBAL DEFAULT +UND __tls_get_addr
 +[0-9]+: 0+20 +0 TLS +GLOBAL DEFAULT +8 ld0
 +[0-9]+: 0+34 +0 TLS +GLOBAL DEFAULT +8 le1
 +[0-9]+: 0+ +0 TLS +GLOBAL DEFAULT +UND ld
 +[0-9]+: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +6 _start
 +[0-9]+: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS __end
 +[0-9]+: 0+28 +0 TLS +GLOBAL DEFAULT +8 ld2
 +[0-9]+: 0+24 +0 TLS +GLOBAL DEFAULT +8 ld1
 +[0-9]+: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS __bss_start
 +[0-9]+: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS _edata
 +[0-9]+: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS _end
 +[0-9]+: 0+1c +0 TLS +GLOBAL DEFAULT +8 gd0
 +[0-9]+: 0+2c +0 TLS +GLOBAL DEFAULT +8 ie0
d95 39
a133 39
 +[0-9]+: 0+ +0 NOTYPE +LOCAL +DEFAULT +UND 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +1 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +2 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +3 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +4 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +5 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +6 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +7 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +8 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +9 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +10 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +11 
 +[0-9]+: 0+ +0 SECTION LOCAL +DEFAULT +12 
 +[0-9]+: 0+ +0 SECTION LOCAL +DEFAULT +13 
 +[0-9]+: 0+ +0 SECTION LOCAL +DEFAULT +14 
 +[0-9]+: 0+ +0 TLS +LOCAL +DEFAULT +7 gd4
 +[0-9]+: 0+4 +0 TLS +LOCAL +DEFAULT +7 ld4
 +[0-9]+: 0+8 +0 TLS +LOCAL +DEFAULT +7 ld5
 +[0-9]+: 0+c +0 TLS +LOCAL +DEFAULT +7 ld6
 +[0-9]+: 0+10 +0 TLS +LOCAL +DEFAULT +7 ie4
 +[0-9]+: 0+14 +0 TLS +LOCAL +DEFAULT +7 le4
 +[0-9]+: 0+18 +0 TLS +LOCAL +DEFAULT +7 le5
 +[0-9]+: 0+1051c +0 OBJECT +LOCAL +HIDDEN +ABS _GLOBAL_OFFSET_TABLE_
 +[0-9]+: 0+10454 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
 +[0-9]+: 0+ +0 TLS +GLOBAL DEFAULT +UND gd
 +[0-9]+: 0+30 +0 TLS +GLOBAL DEFAULT +8 le0
 +[0-9]+: 0+ +0 NOTYPE +GLOBAL DEFAULT +UND __tls_get_addr
 +[0-9]+: 0+20 +0 TLS +GLOBAL DEFAULT +8 ld0
 +[0-9]+: 0+34 +0 TLS +GLOBAL DEFAULT +8 le1
 +[0-9]+: 0+ +0 TLS +GLOBAL DEFAULT +UND ld
 +[0-9]+: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +6 _start
 +[0-9]+: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS __end
 +[0-9]+: 0+28 +0 TLS +GLOBAL DEFAULT +8 ld2
 +[0-9]+: 0+24 +0 TLS +GLOBAL DEFAULT +8 ld1
 +[0-9]+: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS __bss_start
 +[0-9]+: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS _edata
 +[0-9]+: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS _end
 +[0-9]+: 0+1c +0 TLS +GLOBAL DEFAULT +8 gd0
 +[0-9]+: 0+2c +0 TLS +GLOBAL DEFAULT +8 ie0
@


1.11
log
@bfd/
	* elf-bfd.h (struct elf_backend_data): Remove got_symbol_offset.
	* elfxx-target.h (elf_backend_got_symbol_offset): Delete.
	* elflink.c (_bfd_elf_create_got_section): Use zero in place of
	got_symbol_offset.
	* elf-m10300.c (_bfd_mn10300_elf_create_got_section): Likewise.
	* elf32-frv.c (_frv_create_got_section): Likewise.
	* elf32-i370.c (i370_elf_finish_dynamic_sections): Delete ppc code.
	(elf_backend_got_symbol_offset): Don't define.
	* elf64-ppc.c (elf_backend_got_symbol_offset): Don't define.
	* elf32-ppc.c (struct ppc_elf_link_hash_table): Add got_header_size
	and got_gap.
	(ppc_elf_create_got): Tidy.
	(ppc_elf_create_dynamic_sections): Don't set SEC_IN_MEMORY for .plt.
	(ppc_elf_check_relocs): Reduce string comparisons by using elf.hgot.
	(ppc_elf_gc_sweep_hook): Likewise.
	(ppc_elf_relocate_section): Likewise.
	(ppc_elf_finish_dynamic_symbol): Likewise.
	(allocate_got): New function.
	(allocate_dynrelocs): Use allocate_got.
	(ppc_elf_size_dynamic_sections): Likewise.  Delay tlsld_got allocation
	so that local got can refcount it.  Set got_header_size.
	(ppc_elf_relocate_section): Use value of elf.hgot rather than hard-
	coded 4.
	(ppc_elf_finish_dynamic_sections): Likewise.
	(elf_backend_got_symbol_offset): Don't define.
	(elf_backend_got_header_size): Ditto.
ld/testsuite/
	* ld-powerpc/tlsexe32.d: Update for changed got layout.
	* ld-powerpc/tlsexe32.g: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsso32.d: Likewise.
	* ld-powerpc/tlsso32.g: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
@
text
@d17 5
a21 5
 +\[ 6\] \.text +PROGBITS +0+404 0+404 0+70 0+ +AX +0 +0 +1
 +\[ 7\] \.tdata +PROGBITS +0+10474 0+474 0+1c 0+ WAT +0 +0 +4
 +\[ 8\] \.tbss +NOBITS +0+10490 0+490 0+1c 0+ WAT +0 +0 +4
 +\[ 9\] \.dynamic +DYNAMIC +0+10490 0+490 0+a0 08 +WA +3 +0 +4
 +\[10\] \.got +PROGBITS +0+10530 0+530 0+34 04 WAX +0 +0 +4
d34 4
a37 4
 +LOAD +0x0+ 0x0+ 0x0+ 0x0+474 0x0+474 R E 0x10000
 +LOAD +0x0+474 0x0+10474 0x0+10474 0x0+f0 0x0+144 RWE 0x10000
 +DYNAMIC +0x0+490 0x0+10490 0x0+10490 0x0+a0 0x0+a0 RW +0x4
 +TLS +0x0+474 0x0+10474 0x0+10474 0x0+1c 0x0+38 R +0x4
d48 18
a65 18
0+408 +0+a0a R_PPC_REL24 +0+ +__tls_get_addr \+ 0
0+410 +0+a0a R_PPC_REL24 +0+ +__tls_get_addr \+ 0
0+448 +0+a0a R_PPC_REL24 +0+ +__tls_get_addr \+ 0
0+450 +0+a0a R_PPC_REL24 +0+ +__tls_get_addr \+ 0
0+43a +0+945 R_PPC_TPREL16 +0+30 +le0 \+ 0
0+43e +0+c48 R_PPC_TPREL16_HA +0+34 +le1 \+ 0
0+442 +0+c46 R_PPC_TPREL16_LO +0+34 +le1 \+ 0
0+46a +0+245 R_PPC_TPREL16 +0+10474 +\.tdata \+ 10488
0+46e +0+248 R_PPC_TPREL16_HA +0+10474 +\.tdata \+ 1048c
0+472 +0+246 R_PPC_TPREL16_LO +0+10474 +\.tdata \+ 1048c
0+10530 +0+44 R_PPC_DTPMOD32 +0+
0+10534 +0+4e R_PPC_DTPREL32 +0+
0+10538 +0+44 R_PPC_DTPMOD32 +0+
0+10540 +0+844 R_PPC_DTPMOD32 +0+ +gd \+ 0
0+10544 +0+84e R_PPC_DTPREL32 +0+ +gd \+ 0
0+10548 +0+1544 R_PPC_DTPMOD32 +0+1c +gd0 \+ 0
0+1054c +0+154e R_PPC_DTPREL32 +0+1c +gd0 \+ 0
0+10550 +0+1649 R_PPC_TPREL32 +0+2c +ie0 \+ 0
d69 1
a69 1
0+105ac +0+a15 R_PPC_JMP_SLOT +0+ +__tls_get_addr \+ 0
d71 1
a71 1
Symbol table '\.dynsym' contains 23 entries:
d74 4
a77 7
 +[0-9]+: 0+404 +0 SECTION LOCAL +DEFAULT +6 
 +[0-9]+: 0+10474 +0 SECTION LOCAL +DEFAULT +7 
 +[0-9]+: 0+10490 +0 SECTION LOCAL +DEFAULT +8 
 +[0-9]+: 0+ +0 NOTYPE +LOCAL +DEFAULT +UND 
 +[0-9]+: 0+ +0 NOTYPE +LOCAL +DEFAULT +UND 
 +[0-9]+: 0+ +0 NOTYPE +LOCAL +DEFAULT +UND 
 +[0-9]+: 0+10490 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
d102 3
a104 3
 +[0-9]+: 0+404 +0 SECTION LOCAL +DEFAULT +6 
 +[0-9]+: 0+10474 +0 SECTION LOCAL +DEFAULT +7 
 +[0-9]+: 0+10490 +0 SECTION LOCAL +DEFAULT +8 
d106 1
a106 1
 +[0-9]+: 0+10530 +0 SECTION LOCAL +DEFAULT +10 
d118 2
a119 2
 +[0-9]+: 0+10558 +0 OBJECT +LOCAL +HIDDEN +ABS _GLOBAL_OFFSET_TABLE_
 +[0-9]+: 0+10490 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
@


1.10
log
@bfd/
	* elf32-ppc.c (ppc_elf_add_symbol_hook): Make htab->sbss
	SEC_LINKER_CREATED.  Attach to dynobj.
	(ppc_elf_size_dynamic_sections): Strip htab->sbss if zero size.
ld/
	* scripttempl/elf.sc (SBSS): Don't provide sbss start and end syms.
ld/testsuite/
	* ld-powerpc/tlsexe32.r: Update.
	* ld-powerpc/tlsso32.d: Update.
	* ld-powerpc/tlsso32.g: Update.
	* ld-powerpc/tlsso32.r: Update.
@
text
@d58 8
a65 8
0+10540 +0+44 R_PPC_DTPMOD32 +0+
0+10548 +0+44 R_PPC_DTPMOD32 +0+
0+1054c +0+4e R_PPC_DTPREL32 +0+
0+10550 +0+844 R_PPC_DTPMOD32 +0+ +gd \+ 0
0+10554 +0+84e R_PPC_DTPREL32 +0+ +gd \+ 0
0+10558 +0+1544 R_PPC_DTPMOD32 +0+1c +gd0 \+ 0
0+1055c +0+154e R_PPC_DTPREL32 +0+1c +gd0 \+ 0
0+10560 +0+1649 R_PPC_TPREL32 +0+2c +ie0 \+ 0
d121 1
a121 1
 +[0-9]+: 0+10534 +0 OBJECT +LOCAL +HIDDEN +ABS _GLOBAL_OFFSET_TABLE_
@


1.9
log
@bfd/

2005-03-16  H.J. Lu  <hongjiu.lu@@intel.com>

	* elflink.c (elf_mark_used_section): New.
	(bfd_elf_gc_sections): Call elf_gc_mark_section for
	non-relocatable link if we don't do GC.

include/

2005-03-16  H.J. Lu  <hongjiu.lu@@intel.com>

	* bfdlink.h (bfd_link_info): Add gc_sections.

ld/

2005-03-16  H.J. Lu  <hongjiu.lu@@intel.com>

	* emultempl/elf32.em (gld${EMULATION_NAME}_finish): Remove
	unused empty output sections for non-relocatable link.

	* ld.h (args_type): Remove gc_sections.

	* ldlang.c (lang_mark_used_section): New.
	(lang_gc_sections): Use link_info.gc_sections instead of
	command_line.gc_sections.
	* ldmain.c (main): Likewise.
	* lexsup.c (parse_args): Likewise.
	* ldlang.c (lang_process): Call lang_mark_used_section.

	* ldmain.c (main): Initialize link_info.gc_sections to FALSE.

ld/testsuite/

2005-03-16  H.J. Lu  <hongjiu.lu@@intel.com>

	* ld-alpha/tlsbin.rd: Updated for empty section removal.
	* ld-alpha/tlsbinr.rd: Likewise.
	* ld-alpha/tlspic.rd: Likewise.
	* ld-arm/mixed-lib.sym: Likewise.
	* ld-i386/tlsbin.rd: Likewise.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlspic.rd: Likewise.
	* ld-ia64/tlsbin.rd: Likewise.
	* ld-ia64/tlspic.rd: Likewise.
	* ld-powerpc/apuinfo.rd: Likewise.
	* ld-powerpc/powerpc.exp: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-sh/tlsbin-2.d: Likewise.
	* ld-sh/tlspic-2.d: Likewise.
	* ld-sparc/tlssunbin32.rd: Likewise.
	* ld-sparc/tlssunnopic32.rd: Likewise.
	* ld-sparc/tlssunpic32.rd: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
@
text
@d7 1
a7 1
There are 17 section headers.*
d17 9
a25 13
 +\[ 6\] \.text +PROGBITS +0+458 0+458 0+70 0+ +AX +0 +0 +1
 +\[ 7\] \.tdata +PROGBITS +0+104c8 0+4c8 0+1c 0+ WAT +0 +0 +4
 +\[ 8\] \.tbss +NOBITS +0+104e4 0+4e4 0+1c 0+ WAT +0 +0 +4
 +\[ 9\] \.dynamic +DYNAMIC +0+104e4 0+4e4 0+a0 08 +WA +3 +0 +4
 +\[10\] \.data +PROGBITS +0+10584 0+584 0+ 0+ +WA +0 +0 +1
 +\[11\] \.got +PROGBITS +0+10584 0+584 0+34 04 WAX +0 +0 +4
 +\[12\] \.sdata +.*
 +\[13\] \.sbss +.*
 +\[14\] \.plt +.*
 +\[15\] \.bss +.*
 +\[16\] \.shstrtab +.*
 +\[17\] \.symtab +.*
 +\[18\] \.strtab +.*
d34 4
a37 4
 +LOAD +0x0+ 0x0+ 0x0+ 0x0+4c8 0x0+4c8 R E 0x10000
 +LOAD +0x0+4c8 0x0+104c8 0x0+104c8 0x0+f0 0x0+144 RWE 0x10000
 +DYNAMIC +0x0+4e4 0x0+104e4 0x0+104e4 0x0+a0 0x0+a0 RW +0x4
 +TLS +0x0+4c8 0x0+104c8 0x0+104c8 0x0+1c 0x0+38 R +0x4
d48 18
a65 18
0+45c +0+b0a R_PPC_REL24 +0+ +__tls_get_addr \+ 0
0+464 +0+b0a R_PPC_REL24 +0+ +__tls_get_addr \+ 0
0+49c +0+b0a R_PPC_REL24 +0+ +__tls_get_addr \+ 0
0+4a4 +0+b0a R_PPC_REL24 +0+ +__tls_get_addr \+ 0
0+48e +0+a45 R_PPC_TPREL16 +0+30 +le0 \+ 0
0+492 +0+d48 R_PPC_TPREL16_HA +0+34 +le1 \+ 0
0+496 +0+d46 R_PPC_TPREL16_LO +0+34 +le1 \+ 0
0+4be +0+245 R_PPC_TPREL16 +0+104c8 +\.tdata \+ 104dc
0+4c2 +0+248 R_PPC_TPREL16_HA +0+104c8 +\.tdata \+ 104e0
0+4c6 +0+246 R_PPC_TPREL16_LO +0+104c8 +\.tdata \+ 104e0
0+10594 +0+44 R_PPC_DTPMOD32 +0+
0+1059c +0+44 R_PPC_DTPMOD32 +0+
0+105a0 +0+4e R_PPC_DTPREL32 +0+
0+105a4 +0+944 R_PPC_DTPMOD32 +0+ +gd \+ 0
0+105a8 +0+94e R_PPC_DTPREL32 +0+ +gd \+ 0
0+105ac +0+1744 R_PPC_DTPMOD32 +0+1c +gd0 \+ 0
0+105b0 +0+174e R_PPC_DTPREL32 +0+1c +gd0 \+ 0
0+105b4 +0+1849 R_PPC_TPREL32 +0+2c +ie0 \+ 0
d69 1
a69 1
0+10600 +0+b15 R_PPC_JMP_SLOT +0+ +__tls_get_addr \+ 0
d71 1
a71 1
Symbol table '\.dynsym' contains 26 entries:
d74 7
a80 8
 +[0-9]+: 0+458 +0 SECTION LOCAL +DEFAULT +6 
 +[0-9]+: 0+104c8 +0 SECTION LOCAL +DEFAULT +7 
 +[0-9]+: 0+104e4 +0 SECTION LOCAL +DEFAULT +8 
 +[0-9]+: 0+10584 +0 SECTION LOCAL +DEFAULT +10 
 +[0-9]+: 0+105b8 +0 SECTION LOCAL +DEFAULT +12 
 +[0-9]+: 0+105b8 +0 SECTION LOCAL +DEFAULT +13 
 +[0-9]+: 0+1060c +0 SECTION LOCAL +DEFAULT +15 
 +[0-9]+: 0+104e4 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
a88 1
 +[0-9]+: [0-9a-f]+ +0 OBJECT +GLOBAL DEFAULT +12 _SDA_BASE_
a95 1
 +[0-9]+: [0-9a-f]+ +0 OBJECT +GLOBAL DEFAULT +12 _SDA2_BASE_
d97 1
a97 1
Symbol table '\.symtab' contains 45 entries:
d105 3
a107 3
 +[0-9]+: 0+458 +0 SECTION LOCAL +DEFAULT +6 
 +[0-9]+: 0+104c8 +0 SECTION LOCAL +DEFAULT +7 
 +[0-9]+: 0+104e4 +0 SECTION LOCAL +DEFAULT +8 
d109 1
a109 1
 +[0-9]+: 0+10584 +0 SECTION LOCAL +DEFAULT +10 
d111 3
a113 7
 +[0-9]+: 0+105b8 +0 SECTION LOCAL +DEFAULT +12 
 +[0-9]+: 0+105b8 +0 SECTION LOCAL +DEFAULT +13 
 +[0-9]+: 0+105b8 +0 SECTION LOCAL +DEFAULT +14 
 +[0-9]+: 0+1060c +0 SECTION LOCAL +DEFAULT +15 
 +[0-9]+: 0+ +0 SECTION LOCAL +DEFAULT +16 
 +[0-9]+: 0+ +0 SECTION LOCAL +DEFAULT +17 
 +[0-9]+: 0+ +0 SECTION LOCAL +DEFAULT +18 
d121 2
a122 2
 +[0-9]+: 0+10588 +0 OBJECT +LOCAL +HIDDEN +ABS _GLOBAL_OFFSET_TABLE_
 +[0-9]+: 0+104e4 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
a130 1
 +[0-9]+: [0-9a-f]+ +0 OBJECT +GLOBAL DEFAULT +12 _SDA_BASE_
a137 1
 +[0-9]+: [0-9a-f]+ +0 OBJECT +GLOBAL DEFAULT +11 _SDA2_BASE_
@


1.8
log
@bfd/
	* elf32-ppc.c (ppc_elf_create_linker_section): Set SEC_LINKER_CREATED
	on section.  Correct comment, and add FIXME.
	(ppc_elf_additional_program_headers): Don't bump header count for
	interp.  Test SEC_ALLOC, not SEC_LOAD, and don't test size.
	(ppc_elf_size_dynamic_sections): Don't strip sdata and sdata2, but
	do allocate memory if they need it.
ld/
	* emulparams/elf32ppclinux.sh (OTHER_READWRITE_SECTION): Delete.
	(OTHER_RELRO_SECTIONS): Set this instead.
ld/testsuite/
	* ld-powerpc/tlsexe32.d: Update.
	* ld-powerpc/tlsexe32.g: Update.
	* ld-powerpc/tlsexe32.r: Update.
	* ld-powerpc/tlsexe32.t: Update.
	* ld-powerpc/tlsso32.d: Update.
	* ld-powerpc/tlsso32.g: Update.
	* ld-powerpc/tlsso32.r: Update.
	* ld-powerpc/tlsso32.t: Update.
@
text
@d7 1
a7 1
There are 19 section headers.*
d150 1
a150 1
 +[0-9]+: [0-9a-f]+ +0 OBJECT +GLOBAL DEFAULT +12 _SDA2_BASE_
@


1.7
log
@	* ld-cris/expdyn1.d, ld-cris/expdyn5.d, ld-cris/expdyn6.d,
	ld-cris/expdyn7.d, ld-cris/gotplt1.d, ld-cris/gotplt2.d,
	ld-cris/gotplt3.d, ld-cris/hiddef1.d, ld-cris/libdso-2.d,
	ld-cris/locref1.d, ld-cris/locref2.d, ld-cris/weakref2.d,
	ld-i386/tlsbin.rd, ld-i386/tlsnopic.rd, ld-i386/tlspic.rd,
	ld-ia64/tlsbin.dd, ld-ia64/tlsbin.rd, ld-ia64/tlspic.dd,
	ld-ia64/tlspic.rd, ld-powerpc/tlsexe32.d, ld-powerpc/tlsexe32.g,
	ld-powerpc/tlsexe32.r, ld-powerpc/tlsexe32.t,
	ld-powerpc/tlsso32.d, ld-powerpc/tlsso32.g, ld-powerpc/tlsso32.r,
	ld-powerpc/tlsso32.t, ld-s390/tlsbin.dd, ld-s390/tlsbin.rd,
	ld-s390/tlspic.rd, ld-sparc/tlssunbin32.rd,
	ld-sparc/tlssunpic32.rd, ld-x86-64/tlsbin.rd, ld-x86-64/tlspic.dd,
	ld-x86-64/tlspic.rd: Adjust for _GLOBAL_OFFSET_TABLE_ now hidden.
@
text
@d7 1
a7 1
There are 20 section headers.*
d17 13
a29 14
 +\[ 6\] \.text +PROGBITS +0+46c 0+46c 0+70 0+ +AX +0 +0 +1
 +\[ 7\] \.tdata +PROGBITS +0+104dc 0+4dc 0+1c 0+ WAT +0 +0 +4
 +\[ 8\] \.tbss +NOBITS +0+104f8 0+4f8 0+1c 0+ WAT +0 +0 +4
 +\[ 9\] \.dynamic +DYNAMIC +0+104f8 0+4f8 0+a0 08 +WA +3 +0 +4
 +\[10\] \.data +PROGBITS +0+10598 0+598 0+ 0+ +WA +0 +0 +1
 +\[11\] \.got +PROGBITS +0+10598 0+598 0+34 04 WAX +0 +0 +4
 +\[12\] \.sdata2 +.*
 +\[13\] \.sdata +.*
 +\[14\] \.sbss +.*
 +\[15\] \.plt +.*
 +\[16\] \.bss +.*
 +\[17\] \.shstrtab +.*
 +\[18\] \.symtab +.*
 +\[19\] \.strtab +.*
d38 4
a41 4
 +LOAD +0x0+ 0x0+ 0x0+ 0x0+4dc 0x0+4dc R E 0x10000
 +LOAD +0x0+4dc 0x0+104dc 0x0+104dc 0x0+f0 0x0+144 RWE 0x10000
 +DYNAMIC +0x0+4f8 0x0+104f8 0x0+104f8 0x0+a0 0x0+a0 RW +0x4
 +TLS +0x0+4dc 0x0+104dc 0x0+104dc 0x0+1c 0x0+38 R +0x4
d52 18
a69 18
0+470 +0+c0a R_PPC_REL24 +0+ +__tls_get_addr \+ 0
0+478 +0+c0a R_PPC_REL24 +0+ +__tls_get_addr \+ 0
0+4b0 +0+c0a R_PPC_REL24 +0+ +__tls_get_addr \+ 0
0+4b8 +0+c0a R_PPC_REL24 +0+ +__tls_get_addr \+ 0
0+4a2 +0+b45 R_PPC_TPREL16 +0+30 +le0 \+ 0
0+4a6 +0+e48 R_PPC_TPREL16_HA +0+34 +le1 \+ 0
0+4aa +0+e46 R_PPC_TPREL16_LO +0+34 +le1 \+ 0
0+4d2 +0+245 R_PPC_TPREL16 +0+104dc +\.tdata \+ 104f0
0+4d6 +0+248 R_PPC_TPREL16_HA +0+104dc +\.tdata \+ 104f4
0+4da +0+246 R_PPC_TPREL16_LO +0+104dc +\.tdata \+ 104f4
0+105a8 +0+44 R_PPC_DTPMOD32 +0+
0+105b0 +0+44 R_PPC_DTPMOD32 +0+
0+105b4 +0+4e R_PPC_DTPREL32 +0+
0+105b8 +0+a44 R_PPC_DTPMOD32 +0+ +gd \+ 0
0+105bc +0+a4e R_PPC_DTPREL32 +0+ +gd \+ 0
0+105c0 +0+1844 R_PPC_DTPMOD32 +0+1c +gd0 \+ 0
0+105c4 +0+184e R_PPC_DTPREL32 +0+1c +gd0 \+ 0
0+105c8 +0+1949 R_PPC_TPREL32 +0+2c +ie0 \+ 0
d73 1
a73 1
0+10614 +0+c15 R_PPC_JMP_SLOT +0+ +__tls_get_addr \+ 0
d75 1
a75 1
Symbol table '\.dynsym' contains 27 entries:
d78 8
a85 9
 +[0-9]+: 0+46c +0 SECTION LOCAL +DEFAULT +6 
 +[0-9]+: 0+104dc +0 SECTION LOCAL +DEFAULT +7 
 +[0-9]+: 0+104f8 +0 SECTION LOCAL +DEFAULT +8 
 +[0-9]+: 0+10598 +0 SECTION LOCAL +DEFAULT +10 
 +[0-9]+: 0+105cc +0 SECTION LOCAL +DEFAULT +12 
 +[0-9]+: 0+105cc +0 SECTION LOCAL +DEFAULT +13 
 +[0-9]+: 0+105cc +0 SECTION LOCAL +DEFAULT +14 
 +[0-9]+: 0+10620 +0 SECTION LOCAL +DEFAULT +16 
 +[0-9]+: 0+104f8 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
d94 1
a94 1
 +[0-9]+: [0-9a-f]+ +0 OBJECT +GLOBAL DEFAULT +13 _SDA_BASE_
d104 1
a104 1
Symbol table '\.symtab' contains 46 entries:
d112 3
a114 3
 +[0-9]+: 0+46c +0 SECTION LOCAL +DEFAULT +6 
 +[0-9]+: 0+104dc +0 SECTION LOCAL +DEFAULT +7 
 +[0-9]+: 0+104f8 +0 SECTION LOCAL +DEFAULT +8 
d116 1
a116 1
 +[0-9]+: 0+10598 +0 SECTION LOCAL +DEFAULT +10 
d118 5
a122 5
 +[0-9]+: 0+105cc +0 SECTION LOCAL +DEFAULT +12 
 +[0-9]+: 0+105cc +0 SECTION LOCAL +DEFAULT +13 
 +[0-9]+: 0+105cc +0 SECTION LOCAL +DEFAULT +14 
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +15 
 +[0-9]+: 0+10620 +0 SECTION LOCAL +DEFAULT +16 
a124 1
 +[0-9]+: 0+ +0 SECTION LOCAL +DEFAULT +19 
d132 2
a133 2
 +[0-9]+: 0+1059c +0 OBJECT +LOCAL +HIDDEN +ABS _GLOBAL_OFFSET_TABLE_
 +[0-9]+: 0+104f8 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
d142 1
a142 1
 +[0-9]+: [0-9a-f]+ +0 OBJECT +GLOBAL DEFAULT +13 _SDA_BASE_
@


1.7.2.1
log
@bfd/
	* elf32-ppc.c (ppc_elf_create_linker_section): Set SEC_LINKER_CREATED
	on section.  Correct comment, and add FIXME.
	(ppc_elf_additional_program_headers): Don't bump header count for
	interp.  Test SEC_ALLOC, not SEC_LOAD, and don't test size.
	(ppc_elf_size_dynamic_sections): Don't strip sdata and sdata2, but
	do allocate memory if they need it.
ld/
	* emulparams/elf32ppclinux.sh (OTHER_READWRITE_SECTION): Delete.
	(OTHER_RELRO_SECTIONS): Set this instead.
ld/testsuite/
	* ld-powerpc/tlsexe32.d: Update.
	* ld-powerpc/tlsexe32.g: Update.
	* ld-powerpc/tlsexe32.r: Update.
	* ld-powerpc/tlsexe32.t: Update.
	* ld-powerpc/tlsso32.d: Update.
	* ld-powerpc/tlsso32.g: Update.
	* ld-powerpc/tlsso32.r: Update.
	* ld-powerpc/tlsso32.t: Update.
@
text
@d7 1
a7 1
There are 19 section headers.*
d17 14
a30 13
 +\[ 6\] \.text +PROGBITS +0+458 0+458 0+70 0+ +AX +0 +0 +1
 +\[ 7\] \.tdata +PROGBITS +0+104c8 0+4c8 0+1c 0+ WAT +0 +0 +4
 +\[ 8\] \.tbss +NOBITS +0+104e4 0+4e4 0+1c 0+ WAT +0 +0 +4
 +\[ 9\] \.dynamic +DYNAMIC +0+104e4 0+4e4 0+a0 08 +WA +3 +0 +4
 +\[10\] \.data +PROGBITS +0+10584 0+584 0+ 0+ +WA +0 +0 +1
 +\[11\] \.got +PROGBITS +0+10584 0+584 0+34 04 WAX +0 +0 +4
 +\[12\] \.sdata +.*
 +\[13\] \.sbss +.*
 +\[14\] \.plt +.*
 +\[15\] \.bss +.*
 +\[16\] \.shstrtab +.*
 +\[17\] \.symtab +.*
 +\[18\] \.strtab +.*
d39 4
a42 4
 +LOAD +0x0+ 0x0+ 0x0+ 0x0+4c8 0x0+4c8 R E 0x10000
 +LOAD +0x0+4c8 0x0+104c8 0x0+104c8 0x0+f0 0x0+144 RWE 0x10000
 +DYNAMIC +0x0+4e4 0x0+104e4 0x0+104e4 0x0+a0 0x0+a0 RW +0x4
 +TLS +0x0+4c8 0x0+104c8 0x0+104c8 0x0+1c 0x0+38 R +0x4
d53 18
a70 18
0+45c +0+b0a R_PPC_REL24 +0+ +__tls_get_addr \+ 0
0+464 +0+b0a R_PPC_REL24 +0+ +__tls_get_addr \+ 0
0+49c +0+b0a R_PPC_REL24 +0+ +__tls_get_addr \+ 0
0+4a4 +0+b0a R_PPC_REL24 +0+ +__tls_get_addr \+ 0
0+48e +0+a45 R_PPC_TPREL16 +0+30 +le0 \+ 0
0+492 +0+d48 R_PPC_TPREL16_HA +0+34 +le1 \+ 0
0+496 +0+d46 R_PPC_TPREL16_LO +0+34 +le1 \+ 0
0+4be +0+245 R_PPC_TPREL16 +0+104c8 +\.tdata \+ 104dc
0+4c2 +0+248 R_PPC_TPREL16_HA +0+104c8 +\.tdata \+ 104e0
0+4c6 +0+246 R_PPC_TPREL16_LO +0+104c8 +\.tdata \+ 104e0
0+10594 +0+44 R_PPC_DTPMOD32 +0+
0+1059c +0+44 R_PPC_DTPMOD32 +0+
0+105a0 +0+4e R_PPC_DTPREL32 +0+
0+105a4 +0+944 R_PPC_DTPMOD32 +0+ +gd \+ 0
0+105a8 +0+94e R_PPC_DTPREL32 +0+ +gd \+ 0
0+105ac +0+1744 R_PPC_DTPMOD32 +0+1c +gd0 \+ 0
0+105b0 +0+174e R_PPC_DTPREL32 +0+1c +gd0 \+ 0
0+105b4 +0+1849 R_PPC_TPREL32 +0+2c +ie0 \+ 0
d74 1
a74 1
0+10600 +0+b15 R_PPC_JMP_SLOT +0+ +__tls_get_addr \+ 0
d76 1
a76 1
Symbol table '\.dynsym' contains 26 entries:
d79 9
a87 8
 +[0-9]+: 0+458 +0 SECTION LOCAL +DEFAULT +6 
 +[0-9]+: 0+104c8 +0 SECTION LOCAL +DEFAULT +7 
 +[0-9]+: 0+104e4 +0 SECTION LOCAL +DEFAULT +8 
 +[0-9]+: 0+10584 +0 SECTION LOCAL +DEFAULT +10 
 +[0-9]+: 0+105b8 +0 SECTION LOCAL +DEFAULT +12 
 +[0-9]+: 0+105b8 +0 SECTION LOCAL +DEFAULT +13 
 +[0-9]+: 0+1060c +0 SECTION LOCAL +DEFAULT +15 
 +[0-9]+: 0+104e4 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
d96 1
a96 1
 +[0-9]+: [0-9a-f]+ +0 OBJECT +GLOBAL DEFAULT +12 _SDA_BASE_
d106 1
a106 1
Symbol table '\.symtab' contains 45 entries:
d114 3
a116 3
 +[0-9]+: 0+458 +0 SECTION LOCAL +DEFAULT +6 
 +[0-9]+: 0+104c8 +0 SECTION LOCAL +DEFAULT +7 
 +[0-9]+: 0+104e4 +0 SECTION LOCAL +DEFAULT +8 
d118 1
a118 1
 +[0-9]+: 0+10584 +0 SECTION LOCAL +DEFAULT +10 
d120 5
a124 5
 +[0-9]+: 0+105b8 +0 SECTION LOCAL +DEFAULT +12 
 +[0-9]+: 0+105b8 +0 SECTION LOCAL +DEFAULT +13 
 +[0-9]+: 0+105b8 +0 SECTION LOCAL +DEFAULT +14 
 +[0-9]+: 0+1060c +0 SECTION LOCAL +DEFAULT +15 
 +[0-9]+: 0+ +0 SECTION LOCAL +DEFAULT +16 
d127 1
d135 2
a136 2
 +[0-9]+: 0+10588 +0 OBJECT +LOCAL +HIDDEN +ABS _GLOBAL_OFFSET_TABLE_
 +[0-9]+: 0+104e4 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
d145 1
a145 1
 +[0-9]+: [0-9a-f]+ +0 OBJECT +GLOBAL DEFAULT +12 _SDA_BASE_
@


1.6
log
@	* ld-powerpc/tls.s (gd, ld): Set tls type for undefined syms.
	* ld-powerpc/tls32.s (gd, ld): Likewise.
	* ld-powerpc/tlstoc.s (gd, ld): Likewise.
	* ld-powerpc/tlsso.r: Update.
	* ld-powerpc/tlsso32.r: Update.
	* ld-powerpc/tlstocso.r: Update.
@
text
@d17 6
a22 6
 +\[ 6\] \.text +PROGBITS +0+498 0+498 0+70 0+ +AX +0 +0 +1
 +\[ 7\] \.tdata +PROGBITS +0+10508 0+508 0+1c 0+ WAT +0 +0 +4
 +\[ 8\] \.tbss +NOBITS +0+10524 0+524 0+1c 0+ WAT +0 +0 +4
 +\[ 9\] \.dynamic +DYNAMIC +0+10524 0+524 0+a0 08 +WA +3 +0 +4
 +\[10\] \.data +PROGBITS +0+105c4 0+5c4 0+ 0+ +WA +0 +0 +1
 +\[11\] \.got +PROGBITS +0+105c4 0+5c4 0+34 04 WAX +0 +0 +4
d39 4
a42 4
 +LOAD +0x0+ 0x0+ 0x0+ 0x0+508 0x0+508 R E 0x10000
 +LOAD +0x0+508 0x0+10508 0x0+10508 0x0+f0 0x0+144 RWE 0x10000
 +DYNAMIC +0x0+524 0x0+10524 0x0+10524 0x0+a0 0x0+a0 RW +0x4
 +TLS +0x0+508 0x0+10508 0x0+10508 0x0+1c 0x0+38 R +0x4
d53 18
a70 18
0+49c +0+c0a R_PPC_REL24 +0+ +__tls_get_addr \+ 0
0+4a4 +0+c0a R_PPC_REL24 +0+ +__tls_get_addr \+ 0
0+4dc +0+c0a R_PPC_REL24 +0+ +__tls_get_addr \+ 0
0+4e4 +0+c0a R_PPC_REL24 +0+ +__tls_get_addr \+ 0
0+4ce +0+b45 R_PPC_TPREL16 +0+30 +le0 \+ 0
0+4d2 +0+e48 R_PPC_TPREL16_HA +0+34 +le1 \+ 0
0+4d6 +0+e46 R_PPC_TPREL16_LO +0+34 +le1 \+ 0
0+4fe +0+245 R_PPC_TPREL16 +0+10508 +\.tdata \+ 1051c
0+502 +0+248 R_PPC_TPREL16_HA +0+10508 +\.tdata \+ 10520
0+506 +0+246 R_PPC_TPREL16_LO +0+10508 +\.tdata \+ 10520
0+105d4 +0+44 R_PPC_DTPMOD32 +0+
0+105dc +0+44 R_PPC_DTPMOD32 +0+
0+105e0 +0+4e R_PPC_DTPREL32 +0+
0+105e4 +0+a44 R_PPC_DTPMOD32 +0+ +gd \+ 0
0+105e8 +0+a4e R_PPC_DTPREL32 +0+ +gd \+ 0
0+105ec +0+1944 R_PPC_DTPMOD32 +0+1c +gd0 \+ 0
0+105f0 +0+194e R_PPC_DTPREL32 +0+1c +gd0 \+ 0
0+105f4 +0+1a49 R_PPC_TPREL32 +0+2c +ie0 \+ 0
d74 1
a74 1
0+10640 +0+c15 R_PPC_JMP_SLOT +0+ +__tls_get_addr \+ 0
d76 1
a76 1
Symbol table '\.dynsym' contains 28 entries:
d79 9
a87 9
 +[0-9]+: 0+498 +0 SECTION LOCAL +DEFAULT +6 
 +[0-9]+: 0+10508 +0 SECTION LOCAL +DEFAULT +7 
 +[0-9]+: 0+10524 +0 SECTION LOCAL +DEFAULT +8 
 +[0-9]+: 0+105c4 +0 SECTION LOCAL +DEFAULT +10 
 +[0-9]+: 0+105f8 +0 SECTION LOCAL +DEFAULT +12 
 +[0-9]+: 0+105f8 +0 SECTION LOCAL +DEFAULT +13 
 +[0-9]+: 0+105f8 +0 SECTION LOCAL +DEFAULT +14 
 +[0-9]+: 0+1064c +0 SECTION LOCAL +DEFAULT +16 
 +[0-9]+: 0+10524 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
a100 1
 +[0-9]+: 0+105c8 +0 OBJECT +GLOBAL DEFAULT +ABS _GLOBAL_OFFSET_TABLE_
d114 3
a116 3
 +[0-9]+: 0+498 +0 SECTION LOCAL +DEFAULT +6 
 +[0-9]+: 0+10508 +0 SECTION LOCAL +DEFAULT +7 
 +[0-9]+: 0+10524 +0 SECTION LOCAL +DEFAULT +8 
d118 1
a118 1
 +[0-9]+: 0+105c4 +0 SECTION LOCAL +DEFAULT +10 
d120 3
a122 3
 +[0-9]+: 0+105f8 +0 SECTION LOCAL +DEFAULT +12 
 +[0-9]+: 0+105f8 +0 SECTION LOCAL +DEFAULT +13 
 +[0-9]+: 0+105f8 +0 SECTION LOCAL +DEFAULT +14 
d124 1
a124 1
 +[0-9]+: 0+1064c +0 SECTION LOCAL +DEFAULT +16 
d135 2
a136 1
 +[0-9]+: 0+10524 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
a149 1
 +[0-9]+: 0+105c8 +0 OBJECT +GLOBAL DEFAULT +ABS _GLOBAL_OFFSET_TABLE_
@


1.5
log
@binutils/
	* readelf.c (process_program_headers): Don't include .tbss in non-TLS
	segments.

ld/testsuite/
	* ld-i386/tlsbin.rd: Update for changed segment map.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlspic.rd: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-sh/tlsbin-2.d: Likewise.
	* ld-sh/tlspic-2.d: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
@
text
@d88 1
a88 1
 +[0-9]+: 0+ +0 NOTYPE +GLOBAL DEFAULT +UND gd
d93 1
a93 1
 +[0-9]+: 0+ +0 NOTYPE +GLOBAL DEFAULT +UND ld
d137 1
a137 1
 +[0-9]+: 0+ +0 NOTYPE +GLOBAL DEFAULT +UND gd
d142 1
a142 1
 +[0-9]+: 0+ +0 NOTYPE +GLOBAL DEFAULT +UND ld
@


1.4
log
@bfd/
	* elflink.c (elf_bfd_final_link): Don't output STT_SECTION symbol
	into .dynsym if elf_section_data (sec)->dynindx <= 0.
	Adjust counting of last_local.
	(_bfd_elf_link_renumber_dynsyms): Don't assign dynindx to sections
	other than SHT_PROGBITS/SHT_NOBITS and neither for .got/.got.plt/.plt
	created by the linker nor !SHF_ALLOC.

	* elf32-i386.c (elf_i386_finish_dynamic_sections): Point
	DT_PLTGOT to the start of the .got.plt section instead of the
	.got output section.  Set sh_entsize for .got section in addition
	to .got.plt.
	(elf_i386_relocate_section): Don't assume _GLOBAL_OFFSET_TABLE_
	is at sgot->output_section->vma.
	* elf64-x86-64.c (elf64_x86_64_finish_dynamic_sections): Point
	DT_PLTGOT to the start of the .got.plt section instead of the
	.got output section.
	(elf64_x86_64_relocate_section): Don't assume _GLOBAL_OFFSET_TABLE_
	is at sgot->output_section->vma.  Set sh_entsize for .got section
	in addition to .got.plt.
	* elf.c (_bfd_elf_print_private_bfd_data): Handle PT_GNU_RELRO.
	(bfd_section_from_phdr): Likewise.
	(map_sections_to_segments): Likewise.
	(assign_file_positions_for_segments): Likewise.
	(get_program_header_size): Likewise.
	* elflink.c (bfd_elf_size_dynamic_sections): Set
	elf_tdata (output_bfd)->relro from info->relro.
	* elf-bfd.h (struct elf_obj_tdata): Add relro field.
include/
	* bfdlink.h (struct bfd_link_info): Add relro, relro_start and
	relro_end fields.
	* elf/common.h (PT_GNU_EH_FRAME, PT_GNU_STACK): Add comments.
	(PT_GNU_RELRO): Define.
binutils/
	* readelf.c (get_segment_type): Handle PT_GNU_RELRO.
ld/
	* genscripts.sh: Generate -z combreloc -z now -z relro scripts
	for binaries, -shared and -pie.
	* emulparams/elf_i386.sh (SEPARATE_GOTPLT): Set.
	* emulparams/elf_x86_64.sh (SEPARATE_GOTPLT): Set.
	* emulparams/elf32ppc.sh (OTHER_READWRITE_SECTIONS): Rename to...
	(OTHER_RELRO_SECTIONS): ... this.
	* ldlex.l (DATA_SEGMENT_RELRO_END): Add.
	* emultempl/elf32.em (gld${EMULATION_NAME}_handle_option): Handle
	-z relro and -z norelro.
	(gld${EMULATION_NAME}_list_options): Add it to usage.
	(gld${EMULATION_NAME}_get_script): Return -z combreloc -z now
	-z relro scripts when appropriate.
	* scripttempl/elf.sc: Unset SEPARATE_GOTPLT if RELRO_NOW is set.
	Create separate .got.plt section if SEPARATE_GOTPLT.
	Move sections which are only written during relocation handling
	to the beginning of RW segment.  If NO_SMALL_DATA, move .got
	before .data.  Add DATA_SEGMENT_RELRO_END directive.
	Include OTHER_RELRO_SECTIONS.
	* ldgram.y (DATA_SEGMENT_RELRO_END): Add.
	* ldexp.c (exp_print_token): Handle DATA_SEGMENT_RELRO_END.
	(fold_unary): Likewise.
	(fold_binary): Handle -z relro.
	* ldexp.h (struct exp_data_seg): Add exp_dataseg_relro_seen and
	exp_dataseg_relro_adjust phases.  Add relro_end field.
	* ldmain.c (main): Initialize link_info.relro to FALSE.
	* ldlang.c (lang_size_sections): Handle -z relro.
ld/testsuite/
	* ld-i386/tlspic.rd: Adjust for section reordering changes
	and removal of unneeded STT_SECTION symbols from .dynsym.
	* ld-i386/tlspic.dd: Likewise.
	* ld-i386/tlspic.sd: Likewise.
	* ld-i386/tlsbin.rd: Likewise.
	* ld-i386/tlsbinpic.s: Likewise.
	* ld-i386/tlsbin.dd: Likewise.
	* ld-i386/tlsbin.sd: Likewise.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlsnopic1.s: Likewise.
	* ld-i386/combreloc.d: Likewise.
	* ld-i386/tlsnopic.dd: Likewise.
	* ld-i386/tlsnopic.sd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
	* ld-x86-64/tlspic.dd: Likewise.
	* ld-x86-64/tlsbin.dd: Likewise.
	* ld-x86-64/tlspic.sd: Likewise.
	* ld-x86-64/tlsbin.sd: Likewise.
	* ld-x86-64/tlspic.td: Likewise.
	* ld-x86-64/tlsbin.td: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-s390/tlspic1.s: Likewise.
	* ld-s390/tlsbinpic.s: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlspic.dd: Likewise.
	* ld-s390/tlsbin.dd: Likewise.
	* ld-s390/tlsbin.sd: Likewise.
	* ld-s390/tlsbin.td: Likewise.
	* ld-s390/tlspic.sd: Likewise.
	* ld-s390/tlspic.td: Likewise.
	* ld-s390/tlspic1_64.s: Likewise.
	* ld-s390/tlsbinpic_64.s: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlspic_64.dd: Likewise.
	* ld-s390/tlsbin_64.dd: Likewise.
	* ld-s390/tlspic_64.sd: Likewise.
	* ld-s390/tlspic_64.td: Likewise.
	* ld-s390/tlsbin_64.td: Likewise.
	* ld-s390/tlsbin_64.sd: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlsso32.d: Likewise.
	* ld-powerpc/tlsso32.g: Likewise.
	* ld-powerpc/tlsso32.t: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso.g: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
	* ld-powerpc/tlstocso.g: Likewise.
	* ld-ia64/tlspic.rd: Likewise.
	* ld-ia64/tlspic.dd: Likewise.
	* ld-ia64/tlspic.sd: Likewise.
	* ld-ia64/tlspic.td: Likewise.
	* ld-ia64/tlsbin.rd: Likewise.
	* ld-ia64/tlsbin.sd: Likewise.
	* ld-ia64/tlsbin.td: Likewise.
	* ld-elfvsb/elfvsb.exp: XFAIL non-PIC load offset tests on s390x.
	* ld-shared/shared.exp: Likewise.
@
text
@d47 2
a48 2
 +01 +\.tdata \.tbss \.dynamic \.got \.plt 
 +02 +\.tbss \.dynamic 
@


1.3
log
@	* ld-powerpc/tlsexe.r: Update sh_info to decimal.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
@
text
@d12 19
a30 19
 +\[ 1\] \.hash +HASH +0+b4 0+b4 0+dc 04 +A +2 +0 +4
 +\[ 2\] \.dynsym +DYNSYM +0+190 0+190 0+240 10 +A +3 +17 +4
 +\[ 3\] \.dynstr +STRTAB +0+3d0 0+3d0 0+81 0+ +A +0 +0 +1
 +\[ 4\] \.rela\.dyn +RELA +0+454 0+454 0+d8 0c +A +2 +0 +4
 +\[ 5\] \.rela\.plt +RELA +0+52c 0+52c 0+c 0c +A +2 +15 +4
 +\[ 6\] \.text +PROGBITS +0+538 0+538 0+70 0+ +AX +0 +0 +1
 +\[ 7\] \.data +PROGBITS +0+105a8 0+5a8 0+ 0+ +WA +0 +0 +1
 +\[ 8\] \.tdata +PROGBITS +0+105a8 0+5a8 0+1c 0+ WAT +0 +0 +4
 +\[ 9\] \.tbss +NOBITS +0+105c4 0+5c4 0+1c 0+ WAT +0 +0 +4
 +\[10\] \.dynamic +DYNAMIC +0+105c4 0+5c4 0+a0 08 +WA +3 +0 +4
 +\[11\] \.got +PROGBITS +0+10664 0+664 0+34 04 WAX +0 +0 +4
 +\[12\] \.sdata2 +PROGBITS +0+10698 0+698 0+ 0+ +A +0 +0 +4
 +\[13\] \.sdata +PROGBITS +0+10698 0+698 0+ 0+ +WA +0 +0 +4
 +\[14\] \.sbss +NOBITS +0+10698 0+698 0+ 0+ +WA +0 +0 +1
 +\[15\] \.plt +NOBITS +0+10698 0+698 0+54 0+ WAX +0 +0 +4
 +\[16\] \.bss +NOBITS +0+106ec 0+698 0+ 0+ +WA +0 +0 +1
 +\[17\] \.shstrtab +STRTAB +0+ 0+698 0+86 0+ +0 +0 +1
 +\[18\] \.symtab +SYMTAB +0+ 0+a40 0+2e0 10 +19 +27 +4
 +\[19\] \.strtab +STRTAB +0+ 0+d20 0+a9 0+ +0 +0 +1
d34 1
a34 1
Entry point 0x538
d39 4
a42 4
 +LOAD +0x0+ 0x0+ 0x0+ 0x0+5a8 0x0+5a8 R E 0x10000
 +LOAD +0x0+5a8 0x0+105a8 0x0+105a8 0x0+f0 0x0+144 RWE 0x10000
 +DYNAMIC +0x0+5c4 0x0+105c4 0x0+105c4 0x0+a0 0x0+a0 RW +0x4
 +TLS +0x0+5a8 0x0+105a8 0x0+105a8 0x0+1c 0x0+38 R +0x4
d51 1
a51 1
Relocation section '\.rela\.dyn' at offset 0x454 contains 18 entries:
d53 18
a70 18
0+53c +0+140a R_PPC_REL24 +0+ +__tls_get_addr \+ 0
0+544 +0+140a R_PPC_REL24 +0+ +__tls_get_addr \+ 0
0+57c +0+140a R_PPC_REL24 +0+ +__tls_get_addr \+ 0
0+584 +0+140a R_PPC_REL24 +0+ +__tls_get_addr \+ 0
0+56e +0+1345 R_PPC_TPREL16 +0+30 +le0 \+ 0
0+572 +0+1648 R_PPC_TPREL16_HA +0+34 +le1 \+ 0
0+576 +0+1646 R_PPC_TPREL16_LO +0+34 +le1 \+ 0
0+59e +0+845 R_PPC_TPREL16 +0+105a8 +\.tdata \+ 105bc
0+5a2 +0+848 R_PPC_TPREL16_HA +0+105a8 +\.tdata \+ 105c0
0+5a6 +0+846 R_PPC_TPREL16_LO +0+105a8 +\.tdata \+ 105c0
0+10674 +0+44 R_PPC_DTPMOD32 +0+
0+1067c +0+44 R_PPC_DTPMOD32 +0+
0+10680 +0+4e R_PPC_DTPREL32 +0+
0+10684 +0+1244 R_PPC_DTPMOD32 +0+ +gd \+ 0
0+10688 +0+124e R_PPC_DTPREL32 +0+ +gd \+ 0
0+1068c +0+2144 R_PPC_DTPMOD32 +0+1c +gd0 \+ 0
0+10690 +0+214e R_PPC_DTPREL32 +0+1c +gd0 \+ 0
0+10694 +0+2249 R_PPC_TPREL32 +0+2c +ie0 \+ 0
d72 1
a72 1
Relocation section '\.rela\.plt' at offset 0x52c contains 1 entries:
d74 1
a74 1
0+106e0 +0+1415 R_PPC_JMP_SLOT +0+ +__tls_get_addr \+ 0
d76 1
a76 1
Symbol table '\.dynsym' contains 36 entries:
d78 28
a105 36
 +0: 0+ +0 NOTYPE +LOCAL +DEFAULT +UND 
 +1: 0+b4 +0 SECTION LOCAL +DEFAULT +1 
 +2: 0+190 +0 SECTION LOCAL +DEFAULT +2 
 +3: 0+3d0 +0 SECTION LOCAL +DEFAULT +3 
 +4: 0+454 +0 SECTION LOCAL +DEFAULT +4 
 +5: 0+52c +0 SECTION LOCAL +DEFAULT +5 
 +6: 0+538 +0 SECTION LOCAL +DEFAULT +6 
 +7: 0+105a8 +0 SECTION LOCAL +DEFAULT +7 
 +8: 0+105a8 +0 SECTION LOCAL +DEFAULT +8 
 +9: 0+105c4 +0 SECTION LOCAL +DEFAULT +9 
 +10: 0+105c4 +0 SECTION LOCAL +DEFAULT +10 
 +11: 0+10664 +0 SECTION LOCAL +DEFAULT +11 
 +12: 0+10698 +0 SECTION LOCAL +DEFAULT +12 
 +13: 0+10698 +0 SECTION LOCAL +DEFAULT +13 
 +14: 0+10698 +0 SECTION LOCAL +DEFAULT +14 
 +15: 0+10698 +0 SECTION LOCAL +DEFAULT +15 
 +16: 0+106ec +0 SECTION LOCAL +DEFAULT +16 
 +17: 0+105c4 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
 +18: 0+ +0 NOTYPE +GLOBAL DEFAULT +UND gd
 +19: 0+30 +0 TLS +GLOBAL DEFAULT +9 le0
 +20: 0+ +0 NOTYPE +GLOBAL DEFAULT +UND __tls_get_addr
 +21: 0+20 +0 TLS +GLOBAL DEFAULT +9 ld0
 +22: 0+34 +0 TLS +GLOBAL DEFAULT +9 le1
 +23: 0+ +0 NOTYPE +GLOBAL DEFAULT +UND ld
 +24: 0+538 +0 NOTYPE +GLOBAL DEFAULT +6 _start
 +25: 0+106ec +0 NOTYPE +GLOBAL DEFAULT +ABS __end
 +26: 0+18698 +0 OBJECT +GLOBAL DEFAULT +13 _SDA_BASE_
 +27: 0+28 +0 TLS +GLOBAL DEFAULT +9 ld2
 +28: 0+24 +0 TLS +GLOBAL DEFAULT +9 ld1
 +29: 0+10698 +0 NOTYPE +GLOBAL DEFAULT +ABS __bss_start
 +30: 0+10698 +0 NOTYPE +GLOBAL DEFAULT +ABS _edata
 +31: 0+10668 +0 OBJECT +GLOBAL DEFAULT +ABS _GLOBAL_OFFSET_TABLE_
 +32: 0+106ec +0 NOTYPE +GLOBAL DEFAULT +ABS _end
 +33: 0+1c +0 TLS +GLOBAL DEFAULT +9 gd0
 +34: 0+2c +0 TLS +GLOBAL DEFAULT +9 ie0
 +35: 0+18698 +0 OBJECT +GLOBAL DEFAULT +12 _SDA2_BASE_
d109 46
a154 46
 +0: 0+ +0 NOTYPE +LOCAL +DEFAULT +UND 
 +1: 0+b4 +0 SECTION LOCAL +DEFAULT +1 
 +2: 0+190 +0 SECTION LOCAL +DEFAULT +2 
 +3: 0+3d0 +0 SECTION LOCAL +DEFAULT +3 
 +4: 0+454 +0 SECTION LOCAL +DEFAULT +4 
 +5: 0+52c +0 SECTION LOCAL +DEFAULT +5 
 +6: 0+538 +0 SECTION LOCAL +DEFAULT +6 
 +7: 0+105a8 +0 SECTION LOCAL +DEFAULT +7 
 +8: 0+105a8 +0 SECTION LOCAL +DEFAULT +8 
 +9: 0+105c4 +0 SECTION LOCAL +DEFAULT +9 
 +10: 0+105c4 +0 SECTION LOCAL +DEFAULT +10 
 +11: 0+10664 +0 SECTION LOCAL +DEFAULT +11 
 +12: 0+10698 +0 SECTION LOCAL +DEFAULT +12 
 +13: 0+10698 +0 SECTION LOCAL +DEFAULT +13 
 +14: 0+10698 +0 SECTION LOCAL +DEFAULT +14 
 +15: 0+10698 +0 SECTION LOCAL +DEFAULT +15 
 +16: 0+106ec +0 SECTION LOCAL +DEFAULT +16 
 +17: 0+ +0 SECTION LOCAL +DEFAULT +17 
 +18: 0+ +0 SECTION LOCAL +DEFAULT +18 
 +19: 0+ +0 SECTION LOCAL +DEFAULT +19 
 +20: 0+ +0 TLS +LOCAL +DEFAULT +8 gd4
 +21: 0+4 +0 TLS +LOCAL +DEFAULT +8 ld4
 +22: 0+8 +0 TLS +LOCAL +DEFAULT +8 ld5
 +23: 0+c +0 TLS +LOCAL +DEFAULT +8 ld6
 +24: 0+10 +0 TLS +LOCAL +DEFAULT +8 ie4
 +25: 0+14 +0 TLS +LOCAL +DEFAULT +8 le4
 +26: 0+18 +0 TLS +LOCAL +DEFAULT +8 le5
 +27: 0+105c4 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
 +28: 0+ +0 NOTYPE +GLOBAL DEFAULT +UND gd
 +29: 0+30 +0 TLS +GLOBAL DEFAULT +9 le0
 +30: 0+ +0 NOTYPE +GLOBAL DEFAULT +UND __tls_get_addr
 +31: 0+20 +0 TLS +GLOBAL DEFAULT +9 ld0
 +32: 0+34 +0 TLS +GLOBAL DEFAULT +9 le1
 +33: 0+ +0 NOTYPE +GLOBAL DEFAULT +UND ld
 +34: 0+538 +0 NOTYPE +GLOBAL DEFAULT +6 _start
 +35: 0+106ec +0 NOTYPE +GLOBAL DEFAULT +ABS __end
 +36: 0+18698 +0 OBJECT +GLOBAL DEFAULT +13 _SDA_BASE_
 +37: 0+28 +0 TLS +GLOBAL DEFAULT +9 ld2
 +38: 0+24 +0 TLS +GLOBAL DEFAULT +9 ld1
 +39: 0+10698 +0 NOTYPE +GLOBAL DEFAULT +ABS __bss_start
 +40: 0+10698 +0 NOTYPE +GLOBAL DEFAULT +ABS _edata
 +41: 0+10668 +0 OBJECT +GLOBAL DEFAULT +ABS _GLOBAL_OFFSET_TABLE_
 +42: 0+106ec +0 NOTYPE +GLOBAL DEFAULT +ABS _end
 +43: 0+1c +0 TLS +GLOBAL DEFAULT +9 gd0
 +44: 0+2c +0 TLS +GLOBAL DEFAULT +9 ie0
 +45: 0+18698 +0 OBJECT +GLOBAL DEFAULT +12 _SDA2_BASE_
@


1.2
log
@	* elf32-ppc.c (ppc_elf_relocate_section): Subtract tls seg vma from
	zero index dynamic tls relocs generated for the GOT.  Tidy code.
	Set "relocation" to 1 on DTPMOD32 relocs.  Optimize HA adjustment.
	* elf64-ppc.c (ppc64_elf_relocate_section): Likewise.

	* ld-powerpc/tlsso.r: Adjust for corrected zero symbol index relocs.
	* ld-powerpc/tlsso32.r: Likewise.
@
text
@d13 1
a13 1
 +\[ 2\] \.dynsym +DYNSYM +0+190 0+190 0+240 10 +A +3 +11 +4
d16 1
a16 1
 +\[ 5\] \.rela\.plt +RELA +0+52c 0+52c 0+c 0c +A +2 +f +4
d29 1
a29 1
 +\[18\] \.symtab +SYMTAB +0+ 0+a40 0+2e0 10 +19 +1b +4
@


1.1
log
@New tests.
@
text
@d65 1
a65 1
0+10680 +0+4e R_PPC_DTPREL32 +0+105a8
@

