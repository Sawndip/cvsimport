head	1.60;
access;
symbols
	binutils-2_24-branch:1.60.0.2
	binutils-2_24-branchpoint:1.60
	binutils-2_21_1:1.49.2.1
	binutils-2_23_2:1.56.2.1
	binutils-2_23_1:1.56.2.1
	binutils-2_23:1.56.2.1
	binutils-2_23-branch:1.56.0.2
	binutils-2_23-branchpoint:1.56
	binutils-2_22_branch:1.53.0.4
	binutils-2_22:1.53
	binutils-2_22-branch:1.53.0.2
	binutils-2_22-branchpoint:1.53
	binutils-2_21:1.49
	binutils-2_21-branch:1.49.0.2
	binutils-2_21-branchpoint:1.49
	binutils-2_20_1:1.46
	binutils-2_20:1.46
	binutils-arc-20081103-branch:1.44.0.6
	binutils-arc-20081103-branchpoint:1.44
	binutils-2_20-branch:1.46.0.2
	binutils-2_20-branchpoint:1.46
	dje-cgen-play1-branch:1.45.0.2
	dje-cgen-play1-branchpoint:1.45
	arc-20081103-branch:1.44.0.4
	arc-20081103-branchpoint:1.44
	binutils-2_19_1:1.44
	binutils-2_19:1.44
	binutils-2_19-branch:1.44.0.2
	binutils-2_19-branchpoint:1.44
	binutils-2_18:1.43
	binutils-2_18-branch:1.43.0.2
	binutils-2_18-branchpoint:1.43
	binutils-csl-coldfire-4_1-32:1.39.2.1
	binutils-csl-sourcerygxx-4_1-32:1.39.2.1
	binutils-csl-innovasic-fido-3_4_4-33:1.39.2.1
	binutils-csl-sourcerygxx-3_4_4-32:1.36.6.1
	binutils-csl-coldfire-4_1-30:1.39.2.1
	binutils-csl-sourcerygxx-4_1-30:1.39.2.1
	binutils-csl-coldfire-4_1-28:1.39.2.1
	binutils-csl-sourcerygxx-4_1-29:1.39.2.1
	binutils-csl-sourcerygxx-4_1-28:1.39.2.1
	binutils-csl-arm-2006q3-27:1.39.2.1
	binutils-csl-sourcerygxx-4_1-27:1.39.2.1
	binutils-csl-arm-2006q3-26:1.39.2.1
	binutils-csl-sourcerygxx-4_1-26:1.39.2.1
	binutils-csl-sourcerygxx-4_1-25:1.39.2.1
	binutils-csl-sourcerygxx-4_1-24:1.39.2.1
	binutils-csl-sourcerygxx-4_1-23:1.39.2.1
	binutils-csl-sourcerygxx-4_1-21:1.39.2.1
	binutils-csl-arm-2006q3-21:1.39.2.1
	binutils-csl-sourcerygxx-4_1-22:1.39.2.1
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.39.2.1
	binutils-csl-sourcerygxx-4_1-20:1.39.2.1
	binutils-csl-arm-2006q3-19:1.39.2.1
	binutils-csl-sourcerygxx-4_1-19:1.39.2.1
	binutils-csl-sourcerygxx-4_1-18:1.39.2.1
	binutils-csl-renesas-4_1-9:1.39.2.1
	binutils-csl-sourcerygxx-3_4_4-25:1.36.6.1
	binutils-csl-renesas-4_1-8:1.39
	binutils-csl-renesas-4_1-7:1.39
	binutils-csl-renesas-4_1-6:1.39
	binutils-csl-sourcerygxx-4_1-17:1.39
	binutils-csl-sourcerygxx-4_1-14:1.39
	binutils-csl-sourcerygxx-4_1-15:1.39
	binutils-csl-sourcerygxx-4_1-13:1.39
	binutils-2_17:1.39.4.1
	binutils-csl-sourcerygxx-4_1-12:1.39
	binutils-csl-sourcerygxx-3_4_4-21:1.39
	binutils-csl-wrs-linux-3_4_4-24:1.36
	binutils-csl-wrs-linux-3_4_4-23:1.36
	binutils-csl-sourcerygxx-4_1-9:1.39
	binutils-csl-sourcerygxx-4_1-8:1.39
	binutils-csl-sourcerygxx-4_1-7:1.39
	binutils-csl-arm-2006q1-6:1.39
	binutils-csl-sourcerygxx-4_1-6:1.39
	binutils-csl-wrs-linux-3_4_4-22:1.36
	binutils-csl-coldfire-4_1-11:1.39
	binutils-csl-sourcerygxx-3_4_4-19:1.39
	binutils-csl-coldfire-4_1-10:1.39
	binutils-csl-sourcerygxx-4_1-5:1.39
	binutils-csl-sourcerygxx-4_1-4:1.39
	binutils-csl-wrs-linux-3_4_4-21:1.36
	binutils-csl-morpho-4_1-4:1.39
	binutils-csl-sourcerygxx-3_4_4-17:1.39
	binutils-csl-wrs-linux-3_4_4-20:1.36
	binutils-2_17-branch:1.39.0.4
	binutils-2_17-branchpoint:1.39
	binutils-csl-2_17-branch:1.39.0.2
	binutils-csl-2_17-branchpoint:1.39
	binutils-csl-gxxpro-3_4-branch:1.36.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.36
	binutils-2_16_1:1.36
	binutils-csl-arm-2005q1b:1.36
	binutils-2_16:1.36
	binutils-csl-arm-2005q1a:1.36
	binutils-csl-arm-2005q1-branch:1.36.0.4
	binutils-csl-arm-2005q1-branchpoint:1.36
	binutils-2_16-branch:1.36.0.2
	binutils-2_16-branchpoint:1.36
	csl-arm-2004-q3d:1.34
	csl-arm-2004-q3:1.33
	binutils-2_15:1.31.6.1
	binutils-2_15-branchpoint:1.31
	csl-arm-2004-q1a:1.32
	csl-arm-2004-q1:1.32
	binutils-2_15-branch:1.31.0.6
	cagney_bfdfile-20040213-branch:1.31.0.4
	cagney_bfdfile-20040213-branchpoint:1.31
	cagney_bigcore-20040122-branch:1.31.0.2
	cagney_bigcore-20040122-branchpoint:1.31
	csl-arm-2003-q4:1.31
	binutils-2_14:1.22.2.3
	binutils-2_14-branch:1.22.0.2
	binutils-2_14-branchpoint:1.22
	binutils-2_13_2_1:1.14.2.1
	binutils-2_13_2:1.14.2.1
	binutils-2_13_1:1.14.2.1
	binutils-2_13:1.14
	binutils-2_13-branchpoint:1.14
	binutils-2_13-branch:1.14.0.2
	binutils-2_12_1:1.13.2.1
	binutils-2_12:1.13.2.1
	binutils-2_12-branch:1.13.0.2
	binutils-2_12-branchpoint:1.13
	cygnus_cvs_20020108_pre:1.13
	binutils-2_11_2:1.5.2.2
	binutils-2_11_1:1.5.2.2
	binutils-2_11:1.5
	x86_64versiong3:1.6
	binutils-2_11-branch:1.5.0.2
	binutils-2_10_1:1.4
	binutils-2_10:1.4
	binutils-2_10-branch:1.4.0.2
	binutils-2_10-branchpoint:1.4
	binutils_latest_snapshot:1.60
	repo-unification-2000-02-06:1.4
	binu_ss_19990721:1.3
	binu_ss_19990602:1.1.1.1
	binu_ss_19990502:1.1.1.1
	cygnus:1.1.1;
locks; strict;
comment	@# @;


1.60
date	2013.03.20.12.46.26;	author willnewton;	state Exp;
branches;
next	1.59;

1.59
date	2013.03.20.02.28.17;	author amodra;	state Exp;
branches;
next	1.58;

1.58
date	2013.02.19.01.09.58;	author macro;	state Exp;
branches;
next	1.57;

1.57
date	2012.08.13.14.52.53;	author nickc;	state Exp;
branches;
next	1.56;

1.56
date	2012.04.03.16.01.35;	author roland;	state Exp;
branches
	1.56.2.1;
next	1.55;

1.55
date	2012.03.15.01.57.57;	author amodra;	state Exp;
branches;
next	1.54;

1.54
date	2011.12.16.06.18.53;	author daney;	state Exp;
branches;
next	1.53;

1.53
date	2011.03.15.23.34.30;	author vapier;	state Exp;
branches;
next	1.52;

1.52
date	2010.12.04.18.07.42;	author hjl;	state Exp;
branches;
next	1.51;

1.51
date	2010.11.18.06.57.56;	author amodra;	state Exp;
branches;
next	1.50;

1.50
date	2010.11.08.06.43.37;	author tschwinge;	state Exp;
branches;
next	1.49;

1.49
date	2010.11.05.03.54.21;	author amodra;	state Exp;
branches
	1.49.2.1;
next	1.48;

1.48
date	2010.10.28.09.08.34;	author amodra;	state Exp;
branches;
next	1.47;

1.47
date	2010.04.06.11.53.16;	author davem;	state Exp;
branches;
next	1.46;

1.46
date	2009.09.02.07.25.39;	author amodra;	state Exp;
branches;
next	1.45;

1.45
date	2009.04.29.17.24.27;	author cgd;	state Exp;
branches;
next	1.44;

1.44
date	2008.01.28.16.41.05;	author nickc;	state Exp;
branches;
next	1.43;

1.43
date	2007.07.10.14.51.55;	author hjl;	state Exp;
branches;
next	1.42;

1.42
date	2007.07.06.14.09.43;	author nickc;	state Exp;
branches;
next	1.41;

1.41
date	2006.06.06.04.30.21;	author amodra;	state Exp;
branches;
next	1.40;

1.40
date	2006.04.30.00.23.00;	author hjl;	state Exp;
branches;
next	1.39;

1.39
date	2005.10.13.17.29.57;	author mmitchel;	state Exp;
branches
	1.39.2.1
	1.39.4.1;
next	1.38;

1.38
date	2005.08.17.10.08.30;	author jakub;	state Exp;
branches;
next	1.37;

1.37
date	2005.05.12.07.32.06;	author nickc;	state Exp;
branches;
next	1.36;

1.36
date	2005.03.03.11.52.08;	author amodra;	state Exp;
branches
	1.36.6.1;
next	1.35;

1.35
date	2005.02.14.08.02.50;	author jbeulich;	state Exp;
branches;
next	1.34;

1.34
date	2004.10.26.13.46.05;	author pbrook;	state Exp;
branches;
next	1.33;

1.33
date	2004.06.24.15.07.43;	author hjl;	state Exp;
branches;
next	1.32;

1.32
date	2004.03.19.17.02.31;	author hjl;	state Exp;
branches;
next	1.31;

1.31
date	2003.10.23.17.52.00;	author hjl;	state Exp;
branches
	1.31.6.1;
next	1.30;

1.30
date	2003.05.16.05.04.34;	author hjl;	state Exp;
branches;
next	1.29;

1.29
date	2003.05.13.11.39.58;	author nickc;	state Exp;
branches;
next	1.28;

1.28
date	2003.05.08.19.51.48;	author hjl;	state Exp;
branches;
next	1.27;

1.27
date	2003.05.08.05.10.47;	author hjl;	state Exp;
branches;
next	1.26;

1.26
date	2003.05.06.15.55.09;	author hjl;	state Exp;
branches;
next	1.25;

1.25
date	2003.05.03.16.51.05;	author hjl;	state Exp;
branches;
next	1.24;

1.24
date	2003.05.02.08.16.25;	author aj;	state Exp;
branches;
next	1.23;

1.23
date	2003.04.28.16.58.00;	author hjl;	state Exp;
branches;
next	1.22;

1.22
date	2003.04.23.16.34.39;	author hjl;	state Exp;
branches
	1.22.2.1;
next	1.21;

1.21
date	2003.02.13.22.14.11;	author jakub;	state Exp;
branches;
next	1.20;

1.20
date	2002.08.14.03.26.48;	author hjl;	state Exp;
branches;
next	1.19;

1.19
date	2002.08.12.19.21.59;	author hjl;	state Exp;
branches;
next	1.18;

1.18
date	2002.08.09.04.42.44;	author hjl;	state Exp;
branches;
next	1.17;

1.17
date	2002.08.08.03.50.18;	author hjl;	state Exp;
branches;
next	1.16;

1.16
date	2002.07.30.07.41.10;	author amodra;	state Exp;
branches;
next	1.15;

1.15
date	2002.07.16.00.15.57;	author hjl;	state Exp;
branches;
next	1.14;

1.14
date	2002.02.18.03.23.28;	author drow;	state Exp;
branches
	1.14.2.1;
next	1.13;

1.13
date	2001.11.30.15.41.17;	author hjl;	state Exp;
branches
	1.13.2.1;
next	1.12;

1.12
date	2001.11.30.08.07.34;	author hjl;	state Exp;
branches;
next	1.11;

1.11
date	2001.06.06.21.03.59;	author hjl;	state Exp;
branches;
next	1.10;

1.10
date	2001.05.25.07.21.01;	author amodra;	state Exp;
branches;
next	1.9;

1.9
date	2001.05.18.16.15.41;	author hjl;	state Exp;
branches;
next	1.8;

1.8
date	2001.05.18.01.25.34;	author hjl;	state Exp;
branches;
next	1.7;

1.7
date	2001.03.13.06.14.28;	author nickc;	state Exp;
branches;
next	1.6;

1.6
date	2001.02.15.01.17.06;	author hjl;	state Exp;
branches;
next	1.5;

1.5
date	2001.01.01.14.52.34;	author pb;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	99.08.09.14.49.32;	author ian;	state Exp;
branches;
next	1.3;

1.3
date	99.07.09.22.45.24;	author ian;	state Exp;
branches;
next	1.2;

1.2
date	99.07.07.15.36.27;	author ian;	state Exp;
branches;
next	1.1;

1.1
date	99.05.03.07.29.08;	author rth;	state Exp;
branches
	1.1.1.1;
next	;

1.56.2.1
date	2012.08.16.09.21.53;	author nickc;	state Exp;
branches;
next	;

1.49.2.1
date	2011.02.10.03.41.08;	author amodra;	state Exp;
branches;
next	;

1.39.2.1
date	2006.08.22.15.08.44;	author jsm28;	state Exp;
branches;
next	;

1.39.4.1
date	2006.06.12.13.45.08;	author drow;	state Exp;
branches;
next	;

1.36.6.1
date	2005.10.13.22.14.23;	author mmitchel;	state Exp;
branches;
next	;

1.31.6.1
date	2004.04.08.12.41.55;	author amodra;	state Exp;
branches;
next	;

1.22.2.1
date	2003.05.03.16.02.16;	author drow;	state Exp;
branches;
next	1.22.2.2;

1.22.2.2
date	2003.05.06.01.15.09;	author drow;	state Exp;
branches;
next	1.22.2.3;

1.22.2.3
date	2003.05.15.19.15.11;	author drow;	state Exp;
branches;
next	;

1.14.2.1
date	2002.09.23.22.15.21;	author drow;	state Exp;
branches;
next	;

1.13.2.1
date	2002.02.18.03.21.56;	author drow;	state Exp;
branches;
next	;

1.5.2.1
date	2001.06.07.03.17.20;	author amodra;	state Exp;
branches;
next	1.5.2.2;

1.5.2.2
date	2001.06.11.10.05.13;	author amodra;	state Exp;
branches;
next	;

1.1.1.1
date	99.05.03.07.29.08;	author rth;	state Exp;
branches;
next	;


desc
@@


1.60
log
@
ld/testsuite/ChangeLog:

2013-03-20  Will Newton  <will.newton@@linaro.org>

        * ld-elfvers/vers.exp (objdump_symstuff): Sort objdump output
	based on the symbol name rather than address.
	* ld-elfvers/vers1.sym: Reorder contents to match changes to vers.exp.
	* ld-elfvers/vers15.sym: Likewise.
	* ld-elfvers/vers18.sym: Likewise.
	* ld-elfvers/vers21.sym: Likewise.
	* ld-elfvers/vers9.sym: Likewise.
@
text
@# Expect script for ld-version tests
#   Copyright 1997, 1998, 1999, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008,
#   2009, 2010, 2011, 2012 Free Software Foundation, Inc.
#
# This file is part of the GNU Binutils.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
# MA 02110-1301, USA.
#
# Written by Eric Youngdale (eric@@andante.jic.com)

#

# This test can only be run if ld generates native executables.
if ![isnative] then {return}

# This test can only be run on a couple of ELF platforms.
# Square bracket expressions seem to confuse istarget.
# This is similar to the test that is used in ld-shared, BTW.
if { ![istarget hppa*64*-*-hpux*]
     && ![istarget hppa*-*-linux*]
     && ![istarget i?86-*-sysv4*]
     && ![istarget i?86-*-unixware]
     && ![istarget i?86-*-elf*]
     && ![istarget i?86-*-linux*]
     && ![istarget i?86-*-gnu*]
     && ![istarget i?86-*-nacl*]
     && ![istarget ia64-*-elf*]
     && ![istarget ia64-*-linux*]
     && ![istarget m68k-*-linux*]
     && ![istarget mips*-*-irix5*]
     && ![istarget powerpc*-*-elf*]
     && ![istarget powerpc*-*-linux*]
     && ![istarget powerpc*-*-sysv4*]
     && ![istarget sparc*-*-elf]
     && ![istarget sparc*-*-solaris2*]
     && ![istarget sparc*-*-linux*]
     && ![istarget aarch64*-*-linux*]
     && ![istarget arm*-*-linux*]
     && ![istarget mips*-*-linux*]
     && ![istarget alpha*-*-linux*]
     && ![istarget s390*-*-linux*]
     && ![istarget sh\[34\]*-*-linux*]
     && ![istarget x86_64-*-linux*]
     && ![istarget x86_64-*-nacl*] } {
    return
}

if { [istarget *-*-linux*aout*]
     || [istarget *-*-linux*oldld*] } {
    return
}

if { [istarget rs6000*-*-aix*] || [istarget powerpc*-*-aix*] } {
    return
}

set diff diff
set tmpdir tmpdir
set VOBJDUMP_FLAGS --private-headers
set DOBJDUMP_FLAGS --dynamic-syms
set SOBJDUMP_FLAGS --syms
set shared "--shared --no-undefined-version"
set script --version-script

# Old version of GCC for MIPS default to enabling -fpic
# and get confused if it is used on the command line.
if { [istarget mips*-*-*] && ! [at_least_gcc_version 4 3] } then {
    set picflag ""
} else {
    # Unfortunately, the gcc argument is -fpic and the cc argument is
    # -KPIC.  We have to try both.
    set picflag "-fpic"
    send_log "$CC $picflag\n"
    verbose "$CC $picflag"
    catch "exec $CC $picflag" exec_output
    send_log "$exec_output\n"
    verbose "--" "$exec_output"
    if { [string match "*illegal option*" $exec_output]
	 || [string match "*option ignored*" $exec_output]
	 || [string match "*unrecognized option*" $exec_output]
	 || [string match "*passed to ld*" $exec_output] } {
	if [istarget *-*-sunos4*] {
	    set picflag "-pic"
	} else {
	    set picflag "-KPIC"
	}
    }
}

case $target_triplet in {
    { ia64-*-* } { set as_options "-x" }
    { sparc-*-* } { set as_options "-Av9a" }
    default { set as_options "" }
}

proc test_ar { test lib object expect } {
    global ar
    global nm
    global tmpdir
    global srcdir
    global subdir
    global diff

    verbose -log "$ar -cr $tmpdir/$lib $tmpdir/$object"
    catch "exec $ar -cr $tmpdir/$lib $tmpdir/$object" exec_output
    set exec_output [prune_warnings $exec_output]
    if ![string match "" $exec_output] {
	verbose -log "$exec_output"
	unresolved "$test"
	return
    }

    verbose -log "$nm --print-armap $tmpdir/$lib | grep \" in \" | egrep \"VERS\\|bar\\|foo\" | sort > $tmpdir/nm.out"

    catch "exec $nm --print-armap $tmpdir/$lib | grep \\\ in\\\  | egrep VERS\\\|bar\\\|foo | sort > $tmpdir/nm.out" exec_output
    if [string match "" $exec_output] then {
	catch "exec sort $srcdir/$subdir/$expect | $diff $tmpdir/nm.out -" exec_output
	set exec_output [prune_warnings $exec_output]
	if [string match "" $exec_output] then {
	    pass $test
	    return
	} else {
	    verbose -log "$exec_output"
	    fail "$test"
	    return
	}
    } else {
	verbose -log "$exec_output"
	fail "$test"
    }
}

#
# objdump_emptysymstuff
#	Check non-dynamic symbols and make sure there are none with '@@'.
#
proc objdump_emptysymstuff { objdump object } {
    global SOBJDUMP_FLAGS
    global version_output
    global diff

    if ![info exists SOBJDUMP_FLAGS] { set SOBJDUMP_FLAGS "" }

    verbose -log "$objdump $SOBJDUMP_FLAGS $object | sed -n /\@@/p"

    catch "exec $objdump $SOBJDUMP_FLAGS $object | sed -n /\@@/p" exec_output
    set exec_output [prune_warnings $exec_output]
    if [string match "" $exec_output] then {
# We shouldn't get anything here.
	return 1
    } else {
# it is not normal to come here - we have no output to compare.
	verbose -log "$exec_output"
	verbose -log "objdump_emptysymstuff: did not expect any output from objdump"
	return 0
    }

}

#
# objdump_emptydynsymstuff
#	Check dynamic symbols and make sure there are none with '@@'.
#
proc objdump_emptydynsymstuff { objdump object } {
    global DOBJDUMP_FLAGS
    global version_output
    global diff

    if ![info exists VOBJDUMP_FLAGS] { set VOBJDUMP_FLAGS "" }

    verbose -log "$objdump $DOBJDUMP_FLAGS $object | sed -n /VERS/p\\\;/show/p"

    catch "exec $objdump $DOBJDUMP_FLAGS $object | sed -n /VERS/p\\\;/show/p" exec_output
    set exec_output [prune_warnings $exec_output]
    if [string match "" $exec_output] then {
# We shouldn't get anything here.
	return 1
    } else { if [string match "*objdump: *: not a dynamic object" $exec_output] then {
	return 1
    } else {
# it is not normal to come here - we have no output to compare.
	verbose -log "$exec_output"
	verbose -log "objdump_emptydynsymstuff: did not expect any output from objdump"
	return 0
    } }
}

#
# objdump_emptyverstuff
#	Make sure there is no version information
#
proc objdump_emptyverstuff { objdump object } {
    global VOBJDUMP_FLAGS
    global version_output
    global diff
    global tmpdir

    if {[which $objdump] == 0} then {
	perror "$objdump does not exist"
	return 0
    }

    if ![info exists VOBJDUMP_FLAGS] { set VOBJDUMP_FLAGS "" }

    verbose -log "$objdump $VOBJDUMP_FLAGS $object | sed -n /Version/,\\\$p > $tmpdir/objdump.out"

    catch "exec $objdump $VOBJDUMP_FLAGS $object | sed -n /Version/,\\\$p" exec_output
    set exec_output [prune_warnings $exec_output]
    if [string match "" $exec_output] then {
# it is normal to fail here - we have no output to compare.
	return 1
    } else { if { [string match "*libc*" $exec_output] } then {
# this probably means that there is version information in libc, so we
# can't really perform this test.
	return 1
    } else {
	verbose -log "$exec_output"
	verbose -log "objdump_emptyverstuff: did not expect any output from objdump"
	return 0
    } }

}

#
# objdump_symstuff
#	Dump non-dynamic symbol stuff and make sure that it is sane.
#
proc objdump_symstuff { objdump object expectfile } {
    global SOBJDUMP_FLAGS
    global version_output
    global diff
    global tmpdir

    if ![info exists SOBJDUMP_FLAGS] { set SOBJDUMP_FLAGS "" }

    verbose -log "$objdump $SOBJDUMP_FLAGS $object | grep \@@ | sort -k 6  > $tmpdir/objdump.out"

    catch "exec $objdump $SOBJDUMP_FLAGS $object | grep \@@ | sort -k 6 > $tmpdir/objdump.out" exec_output
    set exec_output [prune_warnings $exec_output]
    if [string match "" $exec_output] then {

# Now do a line-by-line comparison to effectively diff the darned things
# The stuff coming from the expectfile is actually a regex, so we can
# skip over the actual addresses and so forth.  This is currently very
# simpleminded - it expects a one-to-one correspondence in terms of line
# numbers.

	if [file exists $expectfile] then {
	    set file_a [open $expectfile r]
	} else {
	    perror "$expectfile doesn't exist"
	    return 0
	}

	if [file exists $tmpdir/objdump.out] then {
	    set file_b [open $tmpdir/objdump.out r]
	} else {
	    perror "$tmpdir/objdump.out doesn't exist"
	    return 0
	}

	verbose "# Diff'ing: $expectfile $tmpdir/objdump.out" 2

	set eof -1
	set differences 0

	while { [gets $file_a line] != $eof } {
	    if [regexp "^#.*$" $line] then {
		continue
	    } else {
		lappend list_a $line
	    }
	}
	close $file_a

	while { [gets $file_b line] != $eof } {
	    if [regexp "^#.*$" $line] then {
		continue
	    } else {
		lappend list_b $line
	    }
	}
	close $file_b

	for { set i 0 } { $i < [llength $list_a] } { incr i } {
	    set line_a [lindex $list_a $i]
	    set line_b [lindex $list_b $i]


	    verbose "\t$expectfile: $i: $line_a" 3
	    verbose "\t/tmp/objdump.out: $i: $line_b" 3
	    if [regexp $line_a $line_b] then {
		continue
	    } else {
		verbose -log "\t$expectfile: $i: $line_a"
		verbose -log "\t$tmpdir/objdump.out: $i: $line_b"

		return 0
	    }
	}

	if { [llength $list_a] != [llength $list_b] } {
	    verbose -log "Line count"
	    return 0
	}

	if $differences<1 then {
	    return 1
	}

	return 0
    } else {
	verbose -log "$exec_output"
	return 0
    }

}

#
# objdump_dymsymstuff
#	Dump dynamic symbol stuff and make sure that it is sane.
#
proc objdump_dynsymstuff { objdump object expectfile } {
    global DOBJDUMP_FLAGS
    global version_output
    global diff
    global tmpdir

    if ![info exists DOBJDUMP_FLAGS] { set DOBJDUMP_FLAGS "" }

    verbose -log "$objdump $DOBJDUMP_FLAGS $object | sed -n /VERS/p\\\;/show/p | sort | uniq  > $tmpdir/objdump.out"

    catch "exec $objdump $DOBJDUMP_FLAGS $object | sed -n /VERS/p\\\;/show/p | sort | uniq  > $tmpdir/objdump.out" exec_output
    set exec_output [prune_warnings $exec_output]
    if [string match "" $exec_output] then {

# Now do a line-by-line comparison to effectively diff the darned things
# The stuff coming from the expectfile is actually a regex, so we can
# skip over the actual addresses and so forth.  This is currently very
# simpleminded - it expects a one-to-one correspondence in terms of line
# numbers.

	if [file exists $expectfile] then {
	    set file_a [open $expectfile r]
	} else {
	    warning "$expectfile doesn't exist"
	    return 0
	}

	if [file exists $tmpdir/objdump.out] then {
	    set file_b [open $tmpdir/objdump.out r]
	} else {
	    fail "$tmpdir/objdump.out doesn't exist"
	    return 0
	}

	verbose "# Diff'ing: $expectfile $tmpdir/objdump.out" 2

	set eof -1
	set differences 0

	while { [gets $file_a line] != $eof } {
	    if [regexp "^#.*$" $line] then {
		continue
	    } else {
		lappend list_a $line
	    }
	}
	close $file_a

	while { [gets $file_b line] != $eof } {
	    if [regexp "^#.*$" $line] then {
		continue
	    } else {
		lappend list_b $line
	    }
	}
	close $file_b

	# Support empty files.
	if { ![info exists list_a] && ![info exists list_b] } then {
	    return 1
	}

	for { set i 0 } { $i < [llength $list_b] } { incr i } {
	    set line_b [lindex $list_b $i]

# The tests are rigged so that we should never export a symbol with the
# word 'hide' in it.  Thus we just search for it, and bail if we find it.
	    if [regexp "hide" $line_b] then {
		verbose -log "\t$tmpdir/objdump.out: $i: $line_b"

		return 0
	    }

	    verbose "\t$expectfile: $i: $line_b" 3

	    # We can't assume that the sort is consistent across
	    # systems, so we must check each regexp.  When we find a
	    # regexp, we null it out, so we don't match it twice.
	    for { set j 0 } { $j < [llength $list_a] } { incr j } {
		set line_a [lindex $list_a $j]

		if [regexp $line_a $line_b] then {
		    lreplace $list_a $j $j "CAN NOT MATCH"
		    break
		}
	    }

	    if { $j >= [llength $list_a] } {
		verbose -log "\t$tmpdir/objdump.out: $i: $line_b"

		return 0
	    }
	}

	if { [llength $list_a] != [llength $list_b] } {
	    verbose -log "Line count"
	    return 0
	}

	if $differences<1 then {
	    return 1
	}

	return 0
    } else {
	verbose -log "$exec_output"
	return 0
    }

}

#
# objdump_versionstuff
#	Dump version definitions/references and make sure that it is sane.
#
proc objdump_versionstuff { objdump object expectfile } {
    global VOBJDUMP_FLAGS
    global version_output
    global diff
    global tmpdir

    if {[which $objdump] == 0} then {
	perror "$objdump does not exist"
	return 0
    }

    if ![info exists VOBJDUMP_FLAGS] { set VOBJDUMP_FLAGS "" }

    verbose -log "$objdump $VOBJDUMP_FLAGS $object | sed -n /Version/,\\\$p > $tmpdir/objdump.out"

    catch "exec $objdump $VOBJDUMP_FLAGS $object | sed -n /Version/,\\\$p > $tmpdir/objdump.out" exec_output
    set exec_output [prune_warnings $exec_output]
    if [string match "" $exec_output] then {

	# It's OK if there are extra lines in the actual output; they
	# may come from version information in libc.  We require that
	# every line in EXPECTFILE appear in the output in any order.

	set f2 [open $expectfile r]
	while { [gets $f2 l2] != -1 } {
	    if { ![regexp "^#.*$" $l2] } then {
		set f1 [open $tmpdir/objdump.out r]
		while { [gets $f1 l1] != -1 } {
		    if { [string match $l2 $l1] } then {
			break
		    }
		}
		close $f1

		if { ![string match $l2 $l1] } then {
		    verbose -log "Did not find \"$l2\""
		    set f1 [open $tmpdir/objdump.out r]
		    while { [gets $f1 l1] != -1 } {
			verbose -log $l1
		    }
		    close $f1
		    close $f2
		    return 0
		}
	    }
	}
	close $f2
	return 1
    } else {
	verbose -log "$exec_output"
	return 0
    }
}

proc build_binary { shared pic test source libname other mapfile verexp versymexp symexp ldargs } {
    global ld
    global srcdir
    global subdir
    global exec_output
    global host_triplet
    global tmpdir
    global as
    global as_options
    global objdump
    global CC
    global CFLAGS
    global script

    if ![ld_compile "$CC -S $pic $CFLAGS" $srcdir/$subdir/$source $tmpdir/$libname.s]     {
	unresolved "$test"
	return
    }

    if ![ld_assemble $as "$as_options $tmpdir/$libname.s" $tmpdir/$libname.o ]     {
	unresolved "$test"
	return
    }

    set other_lib ""
    if ![string match "" $other] then {
	foreach o $other {
	    set other_lib "$other_lib $tmpdir/$o"
	}
    }

    if [string match "" $mapfile] then {
	set script_arg ""
    } else {
	set script_arg "$script $srcdir/$subdir/$mapfile"
    }

    if {![ld_simple_link $ld $tmpdir/$libname.so "$shared $tmpdir/$libname.o $other_lib $script_arg $ldargs"]}     {
	fail "$test"
	return
    }

    if {![objdump_versionstuff $objdump $tmpdir/$libname.so $srcdir/$subdir/$verexp ]}     {
	fail "$test"
	return
    }

    if {![objdump_dynsymstuff $objdump $tmpdir/$libname.so $srcdir/$subdir/$versymexp ]}     {
	fail "$test"
	return
    }

    if [string match "" $symexp] then {
	if {![objdump_emptysymstuff $objdump $tmpdir/$libname.o ]}     {
	    fail "$test"
	    return
	}
    } else {
	if {![objdump_symstuff $objdump $tmpdir/$libname.o $srcdir/$subdir/$symexp ]}     {
	    fail "$test"
	    return
	}
    }

    pass $test

}

proc build_executable { test source libname other mapfile verexp versymexp symexp } {
  build_binary "" "" $test $source $libname $other $mapfile $verexp $versymexp $symexp ""
}

proc build_vers_lib_no_pic { test source libname other mapfile verexp versymexp symexp } {
  global shared
  build_binary $shared "" $test $source $libname $other $mapfile $verexp $versymexp $symexp ""
}

proc build_vers_lib_pic { test source libname other mapfile verexp versymexp symexp } {
  global picflag
  global shared
  build_binary $shared $picflag $test $source $libname $other $mapfile $verexp $versymexp $symexp ""
}

proc build_vers_lib_pic_flags { test source libname other mapfile verexp versymexp symexp ldargs } {
  global picflag
  global shared
  build_binary $shared $picflag $test $source $libname $other $mapfile $verexp $versymexp $symexp $ldargs
}

proc test_ldfail { test flag source execname other mapfile whyfail } {
    global srcdir
    global subdir
    global exec_output
    global host_triplet
    global tmpdir
    global as
    global as_options
    global objdump
    global CC
    global CFLAGS
    global script

    if [string match "" $other] then {
	set other_lib ""
    } else {
	set other_lib $tmpdir/$other
    }

    if ![ld_compile "$CC -S $flag $CFLAGS" $srcdir/$subdir/$source $tmpdir/$execname.s]     {
	unresolved "$test"
	return
    }

    if ![ld_assemble $as "$as_options $tmpdir/$execname.s" $tmpdir/$execname.o ]     {
	unresolved "$test"
	return
    }

    verbose -log "This link should fail because of $whyfail"

    if [string match "" $mapfile] then {
	set script_arg ""
    } else {
	set script_arg "-Wl,$script $srcdir/$subdir/$mapfile"
    }

    if {![ld_simple_link $CC $tmpdir/$execname "$tmpdir/$execname.o $other_lib $script_arg"]}     {
	pass "$test"
	return
    }
    fail "$test"
}

proc test_asfail { test flag source execname whyfail } {
    global srcdir
    global subdir
    global tmpdir
    global as
    global CC
    global CFLAGS

    if ![ld_compile "$CC -S $flag $CFLAGS" $srcdir/$subdir/$source $tmpdir/$execname.s]     {
	unresolved "$test"
	return
    }

    verbose -log "This assemble should fail because of $whyfail"
    catch "exec $as -o $tmpdir/$execname.o $tmpdir/$execname.s" exec_output
    set exec_output [prune_warnings $exec_output]
    if [string match "" $exec_output] then {
	fail "$test"
	return
    }
    verbose -log "$exec_output"
    pass "$test"
}

proc test_strip_vers_lib { test srclib libname verexp versymexp } {
    global strip
    global srcdir
    global subdir
    global exec_output
    global host_triplet
    global tmpdir
    global objdump

    verbose -log "cp $tmpdir/$srclib $tmpdir/$libname.so"
    exec cp $tmpdir/$srclib $tmpdir/$libname.so

    verbose -log "$strip $tmpdir/$libname.so"
    catch "exec $strip $tmpdir/$libname.so" exec_output
    if [string match "" $exec_output] then {

# If strip went OK, then run the usual tests on the thing to make sure that
# it is sane.
	if {![objdump_versionstuff $objdump $tmpdir/$libname.so $srcdir/$subdir/$verexp ]}     {
	    fail "$test"
	    return
	}

	if {![objdump_dynsymstuff $objdump $tmpdir/$libname.so $srcdir/$subdir/$versymexp ]}     {
	    fail "$test"
	    return
	}

    } else {
	verbose -log "$exec_output"
	fail "$test"
	return
    }
    pass $test
}


proc build_exec { test source execname flags solibname verexp versymexp symexp } {
    global srcdir
    global subdir
    global exec_output
    global host_triplet
    global tmpdir
    global as
    global as_options
    global objdump
    global CC
    global CFLAGS

    set shared "--shared --no-undefined-version"
    set script --version-script
    if ![ld_compile "$CC -S $CFLAGS" $srcdir/$subdir/$source $tmpdir/$execname.s]     {
	unresolved "$test"
	return
    }

    if ![ld_assemble $as "$as_options $tmpdir/$execname.s" $tmpdir/$execname.o ]     {
	unresolved "$test"
	return
    }

    if [string match "" $solibname] then {
	set solibname_lib ""
    } else {
	set solibname_lib $tmpdir/$solibname
    }

    if {![ld_simple_link $CC $tmpdir/$execname "$flags $tmpdir/$execname.o $solibname_lib"]}     {
	fail "$test"
	return
    }

    if [string match "" $verexp] then {
#
# Make sure we get nothing back.
#
	if {![objdump_emptyverstuff $objdump $tmpdir/$execname ]}     {
	    fail "$test"
	    return
	}
    } else {
	if {![objdump_versionstuff $objdump $tmpdir/$execname $srcdir/$subdir/$verexp ]}     {
	    fail "$test"
	    return
	}
    }

    if [string match "" $versymexp] then {
	if {![objdump_emptydynsymstuff $objdump $tmpdir/$execname ]}     {
	    fail "$test"
	    return
	}
    } else {
	if {![objdump_dynsymstuff $objdump $tmpdir/$execname $srcdir/$subdir/$versymexp ]}     {
	    fail "$test"
	    return
	}
    }

    if [string match "" $symexp] then {
	if {![objdump_emptysymstuff $objdump $tmpdir/$execname.o ]}     {
	    fail "$test"
	    return
	}
    } else {
	if {![objdump_symstuff $objdump $tmpdir/$execname.o $srcdir/$subdir/$symexp ]}     {
	    fail "$test"
	    return
	}
    }

    pass $test
}

if { [istarget x86_64-*-linux*] \
     || ( [istarget mips*-*-linux*] && [at_least_gcc_version 4 3] ) } {
    # x86_64 and newer MIPS toolchains do not like non-pic shared libraries
    set pic "yes"
} else {
    set pic "no"
}

#
# Basic test - build a library with versioned symbols.
#
build_vers_lib_pic "vers1" vers1.c vers1 "" vers1.map vers1.ver vers1.dsym vers1.sym


#
# Test #2 - build a library, and link it against the library we built in step
# 1.
#
build_vers_lib_pic "vers2" vers2.c vers2 vers1.so vers2.map vers2.ver vers2.dsym ""

#
# Test #3 - build an executable, and link it against vers1.so.
#
build_exec "vers3" vers3.c vers3 "-Wl,--no-as-needed" vers1.so vers3.ver vers3.dsym ""

#
# Test #4 - Make sure a version implicitly defined in an executable
# causes a version node to be created.  Verify this both with and without
# --export-dynamic.
#

# This test fails on MIPS.  On the MIPS we must put foo in the dynamic
# symbol table, which the test does not expect.
setup_xfail "mips*-*-*"
build_exec "vers4" vers4.c vers4 "" "" "" "" vers4.sym

build_exec "vers4a" vers4.c vers4a "-Wl,-export-dynamic" "" vers4a.ver vers4a.dsym vers4a.sym

# Verify that --no-export-dynamic undoes the effect of --export-dynamic.
setup_xfail "mips*-*-*"
build_exec "vers4b" vers4.c vers4b "-Wl,-export-dynamic -Wl,--no-export-dynamic" "" "" "" vers4.sym


#
# Try multiple definitions foo@@BAR and foo@@@@BAR and make sure the linker
# complains.
#
test_ldfail "vers5" "" vers5.c vers5 "" "" "multiple definition of foo@@VERS_1.2"

#
#
# Now build a test that should reference a bunch of versioned symbols.
# All of them should be correctly referenced.
#
build_exec "vers6" vers6.c vers6 "-Wl,--no-as-needed" vers1.so vers6.ver vers6.dsym vers6.sym

#
# Another test to verify that something made local via 'local' is truly not
# accessible.
#
if [string match "yes" $pic] then {
    xfail "vers7a"
    xfail "vers7"
} else {
    build_vers_lib_no_pic "vers7a" vers7a.c vers7a "" vers7.map vers7a.ver vers7a.dsym vers7a.sym

    test_ldfail "vers7" "" vers7.c vers7 vers7a.so "" "undefined reference to hide_a"
}


#
# This test is designed to verify that we can pass a linker script on the
# command line as if it were a normal .o file.
#
catch "exec cp $srcdir/$subdir/vers8.map $tmpdir/" ignore_output
build_vers_lib_pic "vers8" vers1.c vers8 vers8.map "" vers8.ver vers1.dsym vers1.sym

#
# This test tries to make sure that version references to versioned symbols
# don't collide with default definitions with the same symbol.
#
build_exec "vers9" vers9.c vers9 "-Wl,-export-dynamic" "" vers9.ver vers9.dsym vers9.sym


#
# Try and use a non-existant version node.  The linker should fail with
# an error message.
#
test_ldfail "vers10" "-DDO_TEST10" vers1.c vers10 "" "vers1.map --shared" "invalid version"

#
# Try and some things the assembler should complain about.
#
test_asfail "vers11" "-DDO_TEST11" vers1.c vers11 "no @@ in symver"

test_asfail "vers12" "-DDO_TEST12" vers1.c vers12 "extern version definition"

#
# Put a shared library in an archive library, and make sure the global
# archive symbol table is sane.
#
test_ar "ar with versioned solib" vers13.a vers1.so vers13.asym

#
# Strip a shared library, and make sure we didn't screw something up in there.
#
test_strip_vers_lib "vers14" vers1.so vers14 vers1.ver vers1.dsym


#
# Build another test with some versioned symbols.  Here we are going to
# try and override something from the library, and we shouldn't get
# any errors.
#
build_exec "vers15" vers15.c vers15 "-Wl,--no-as-needed" vers1.so vers15.ver vers15.dsym vers15.sym

#
# Test that when we override a versioned symbol from the library this
# symbol appears in the dynamic symbol table of the executable.
#
build_vers_lib_pic "vers16a" vers16a.c vers16a "" vers16.map vers16a.ver vers16a.dsym ""
build_exec "vers16" vers16.c vers16 "-Wl,--no-as-needed" vers16a.so "" vers16.dsym ""

# Test a weak versioned symbol.
build_vers_lib_pic "vers17" vers17.c vers17 "" vers17.map vers17.ver vers17.dsym ""
build_vers_lib_pic "vers18" vers18.c vers18 vers17.so vers18.map vers18.ver vers18.dsym vers18.sym
build_exec "vers19" vers19.c vers19 "-Wl,-rpath,. -Wl,-rpath-link,--no-as-needed" vers18.so vers19.ver vers19.dsym ""

build_vers_lib_no_pic "vers20a" vers20.c vers20a "" vers20.map vers20a.ver vers20.dsym ""
exec cp $tmpdir/vers20a.so $tmpdir/vers20b.so
build_vers_lib_no_pic "vers20" vers20.c vers20 "vers20a.so vers20b.so" vers20.map vers20.ver vers20.dsym ""

# Test .symver override.
build_vers_lib_pic "vers21" vers21.c vers21 "" vers21.map vers21.ver vers21.dsym vers21.sym

# Test moving default definition from one DSO to another.
build_vers_lib_pic "vers22a" vers22a.c vers22a "" vers22.map vers22a.ver vers22a.dsym vers22a.sym
build_vers_lib_pic "vers22b" vers22b.c vers22b "" vers22.map vers22b.ver vers22b.dsym ""
build_vers_lib_pic "vers22" vers22.c vers22 "vers22a.so vers22b.so" "" vers22.ver vers22.dsym ""

# Test versioned definitions in different files.
if [string match "yes" $pic] then {
    xfail "vers23a"
    xfail "vers23b"
    xfail "vers23c"
    xfail "vers23d"
    xfail "vers23"
} else {
    build_vers_lib_no_pic "vers23a" vers23a.c vers23a "" vers23a.map vers23a.ver vers23a.dsym vers23a.sym
    build_vers_lib_no_pic "vers23b" vers23b.c vers23b "" vers23b.map vers23b.ver vers23b.dsym ""
    build_vers_lib_no_pic "vers23c" vers23b.c vers23c "vers23a.so" vers23b.map vers23c.ver vers23b.dsym ""
    build_exec "vers23d" vers23.c vers23d "-Wl,--no-as-needed tmpdir/vers23a.so tmpdir/vers23c.so" "" vers23.ver vers23d.dsym ""
    build_exec "vers23" vers23.c vers23 "-Wl,--no-as-needed tmpdir/vers23a.so tmpdir/vers23b.o tmpdir/vers23b.so" "" vers23.ver vers23.dsym ""
}

# Test .symver x,x@@VERS.0
set as_pic_flags ""
if [istarget sparc*-*-*] {
  set as_pic_flags "-K PIC"
}
run_ld_link_tests [list "\"vers24a\"
			 \"-shared --version-script $srcdir/$subdir/vers24.map\" \"\"
			 \"$as_pic_flags $as_options\" {vers24a.c vers24b.c} { { readelf -Wrs vers24.rd } }
			 \"libvers24a.so\" \"-fpic\""]
run_ld_link_tests [list "\"vers24b\"
			 \"-shared --version-script $srcdir/$subdir/vers24.map\" \"\"
			 \"$as_pic_flags $as_options\" {vers24b.c vers24a.c} { { readelf -Wrs vers24.rd } }
			 \"libvers24b.so\" \"-fpic\""]
run_ld_link_tests [list "\"vers24c\"
			 \"-shared --version-script $srcdir/$subdir/vers24.map\" \"\"
			 \"$as_pic_flags $as_options\" {vers24c.c} { { readelf -Wrs vers24.rd } }
			 \"libvers24c.so\" \"-fpic\""]

# Test versioned definition vs. normal definition in different files.
if [string match "yes" $pic] then {
    xfail "vers25a"
    xfail "vers25b1"
    xfail "vers25b2"
} else {
    build_vers_lib_no_pic "vers25a" vers25a.c vers25a "" vers25a.map vers25a.ver vers25a.dsym ""
    build_vers_lib_no_pic "vers25b1" vers25b.c vers25b1 "vers25a.o vers25a.so" "" vers25b.ver vers25b.dsym ""
    build_vers_lib_no_pic "vers25b2" vers25b.c vers25b2 "vers25a.so vers25a.o" "" vers25b.ver vers25b.dsym ""
}

build_vers_lib_pic "vers26a" vers26a.c vers26a "" vers26a.map vers26a.ver vers26a.dsym ""
build_vers_lib_pic "vers26b1" vers26b.c vers26b1 "" "" vers26b.ver vers26b.dsym ""
build_vers_lib_pic "vers26b2" vers26b.c vers26b2 "vers26a.so vers26b1.so vers26a.o" "" vers26b.ver vers26b.dsym ""
if [string match "yes" $pic] then {
    xfail "vers26b3"
} else {
    build_vers_lib_no_pic "vers26b3" vers26b.c vers26b3 "vers26a.so vers26b1.so vers26a.o" "" vers26b.ver vers26b.dsym ""
}

# Test versioned definition vs. hidden definition in different files.
if [string match "yes" $pic] then {
    xfail "vers27a"
    xfail "vers27b"
    xfail "vers27c1"
    xfail "vers27c2"
    xfail "vers27d1"
    xfail "vers27d2"
    xfail "vers27d3"
    xfail "vers27d4"
    xfail "vers27d5"
} else {
    build_vers_lib_no_pic "vers27a" vers27a.c vers27a "" vers27a.map vers27a.ver vers27a.dsym ""
    build_vers_lib_no_pic "vers27b" vers27b.c vers27b "" "" vers27b.ver vers27b.dsym ""
    build_vers_lib_no_pic "vers27c1" vers27c.c vers27c1 "vers27b.o vers27a.so" "" vers27c.ver vers27c.dsym ""
    build_vers_lib_no_pic "vers27c2" vers27c.c vers27c2 "vers27a.so vers27b.o" "" vers27c.ver vers27c.dsym ""
    build_vers_lib_pic "vers27d1" vers27d1.c vers27d1 "" vers27a.map vers27d.ver vers27d.dsym vers27d.sym
   build_vers_lib_pic "vers27d2" vers27d2.c vers27d2 "" "" vers27b.ver vers27b.dsym ""
    build_executable "vers27d3" vers27d3.c vers27d3 "vers27b.o vers27d2.so vers27d1.so" "" vers27b.ver vers27b.dsym ""
    build_vers_lib_pic "vers27d4" vers27d2.c vers27d4 "vers27a.so" "" vers27d4.ver vers27d4.dsym ""
    build_executable "vers27d5" vers27d3.c vers27d5 "vers27d4.so vers27b.o vers27a.so" "" vers27b.ver vers27b.dsym ""
}

# Test weak versioned definition vs. strong definition in different
# files.
build_vers_lib_pic "vers28a" vers28a.c vers28a "" "" vers28a.ver vers28a.dsym ""
build_vers_lib_pic "vers28b" vers28b.c vers28b "" vers28b.map vers28b.ver vers28b.dsym ""
build_vers_lib_pic "vers28c" vers28c.c vers28c "vers28b.so vers28a.so" "" vers28c.ver vers28c.dsym ""
build_vers_lib_pic_flags "vers29" vers29.c vers29 "" "" vers29.ver vers29.dsym "" "--default-symver"

# Test #30 - test handling of symbol names global, local and extern in the
# version script.
build_vers_lib_pic "vers30" vers30.c vers30 "" vers30.map vers30.ver vers30.dsym ""

# Test #31 -- quoted strings in version sections.
build_vers_lib_pic "vers31" vers31.c vers31 "" vers31.map vers31.ver vers31.dsym ""

# Test #32 -- linker --defsym
build_vers_lib_pic "vers32a" vers32a.c vers32a "" vers32.map vers32a.ver vers32a.dsym ""
build_vers_lib_pic_flags "vers32b" vers32b.c vers32b "vers32a.so" vers32.map vers32b.ver vers32b.dsym "" "--defsym foo=0"
@


1.59
log
@	* ld-elfvers/vers.exp: Add -Wl,--no-as-needed to all tests
	linking against shared libraries.
	* ld-elfweak/elfweak.exp: Likewise.  Enable for x86_64-linux.
	Build main1.o using $picflag.
@
text
@d249 1
a249 1
    verbose -log "$objdump $SOBJDUMP_FLAGS $object | grep \@@ | sort  > $tmpdir/objdump.out"
d251 1
a251 1
    catch "exec $objdump $SOBJDUMP_FLAGS $object | grep \@@ | sort  > $tmpdir/objdump.out" exec_output
@


1.58
log
@	* lib/ld-lib.exp (run_ld_link_tests): Add another argument, pass
	its contents to ar_simple_create and ld_simple_link after
	objfiles.
	* ld-aarch64/aarch64-elf.exp: Adjust accordingly.
	* ld-alpha/alpha.exp: Likewise.
	* ld-arm/arm-elf.exp: Likewise.
	* ld-arm/export-class.exp: Likewise.
	* ld-elf/comm-data.exp: Likewise.
	* ld-elf/eh-group.exp: Likewise.
	* ld-elf/elf.exp: Likewise.
	* ld-elf/export-class.exp: Likewise.
	* ld-elfvers/vers.exp: Likewise.
	* ld-frv/tls.exp: Likewise.
	* ld-i386/export-class.exp: Likewise.
	* ld-i386/i386.exp: Likewise.
	* ld-ia64/ia64.exp: Likewise.
	* ld-libs/libs.exp: Likewise.
	* ld-m68k/m68k.exp: Likewise.
	* ld-metag/metag.exp: Likewise.
	* ld-mips-elf/comm-data.exp: Likewise.
	* ld-mips-elf/export-class.exp: Likewise.
	* ld-mips-elf/mips-elf.exp: Likewise.
	* ld-mn10300/mn10300.exp: Likewise.
	* ld-pe/pe-compile.exp: Likewise.
	* ld-pe/pe.exp: Likewise.
	* ld-plugin/plugin.exp: Likewise.
	* ld-powerpc/aix52.exp: Likewise.
	* ld-powerpc/export-class.exp: Likewise.
	* ld-powerpc/powerpc.exp: Likewise.
	* ld-s390/s390.exp: Likewise.
	* ld-sh/sh-vxworks.exp: Likewise.
	* ld-sh/sh64/sh64.exp: Likewise.
	* ld-sparc/sparc.exp: Likewise.
	* ld-tic6x/tic6x.exp: Likewise.
	* ld-tilegx/tilegx.exp: Likewise.
	* ld-tilepro/tilepro.exp: Likewise.
	* ld-undefined/entry.exp: Likewise.
	* ld-vax-elf/vax-elf.exp: Likewise.
	* ld-x86-64/dwarfreloc.exp: Likewise.
	* ld-x86-64/export-class.exp: Likewise.
	* ld-x86-64/x86-64.exp: Likewise.
	* ld-xc16x/xc16x.exp: Likewise.
	* ld-xstormy16/xstormy16.exp: Likewise.
	* ld-xtensa/xtensa.exp: Likewise.
@
text
@d799 1
a799 1
build_exec "vers3" vers3.c vers3 "" vers1.so vers3.ver vers3.dsym ""
d830 1
a830 1
build_exec "vers6" vers6.c vers6 "" vers1.so vers6.ver vers6.dsym vers6.sym
d897 1
a897 1
build_exec "vers16" vers16.c vers16 "" vers16a.so "" vers16.dsym ""
d902 1
a902 1
build_exec "vers19" vers19.c vers19 "-Wl,-rpath,. -Wl,-rpath-link,." vers18.so vers19.ver vers19.dsym ""
d927 2
a928 2
    build_exec "vers23d" vers23.c vers23d "tmpdir/vers23a.so tmpdir/vers23c.so" "" vers23.ver vers23d.dsym ""
    build_exec "vers23" vers23.c vers23 "tmpdir/vers23a.so tmpdir/vers23b.o tmpdir/vers23b.so" "" vers23.ver vers23.dsym ""
@


1.57
log
@Add support for 64-bit ARM architecture: AArch64
@
text
@d937 1
a937 1
			 \"-shared --version-script $srcdir/$subdir/vers24.map\"
d941 1
a941 1
			 \"-shared --version-script $srcdir/$subdir/vers24.map\"
d945 1
a945 1
			 \"-shared --version-script $srcdir/$subdir/vers24.map\"
@


1.56
log
@bfd/
2012-04-03  Roland McGrath  <mcgrathr@@google.com>

	* elf-nacl.c: New file.
	* elf-nacl.h: New file.
	* elf32-i386.c (elf_backend_modify_segment_map): Define for
	bfd_elf32_i386_nacl_vec.
	(elf_backend_modify_program_headers): Likewise.
	* elf64-x86-64.c (elf_backend_modify_segment_map): Define for
	bfd_elf64_x86_64_nacl_vec and bfd_elf32_x86_64_nacl_vec.
	(elf_backend_modify_program_headers): Likewise.
	* Makefile.am (BFD32_BACKENDS, BFD64_BACKENDS): Add elf-nacl.lo here.
	(BFD32_BACKENDS_CFILES, BFD64_BACKENDS_CFILES): Add elf-nacl.c here.
	* Makefile.in: Regenerated.
	* configure.in (bfd_elf64_x86_64_nacl_vec): Add elf-nacl.o to tb here.
	(bfd_elf32_x86_64_nacl_vec): Likewise.
	(bfd_elf64_x86_64_vec, bfd_elf32_x86_64_vec): Likewise.
	(bfd_elf64_x86_64_freebsd_vec, bfd_elf64_x86_64_sol2_vec): Likewise.
	(bfd_elf64_l1om_vec, bfd_elf64_l1om_freebsd_vec): Likewise.
	(bfd_elf64_k1om_vec, bfd_elf64_k1om_freebsd_vec): Likewise.
	(bfd_elf32_i386_nacl_vec): Likewise.
	(bfd_elf32_i386_sol2_vec, bfd_elf32_i386_freebsd_vec): Likewise.
	(bfd_elf32_i386_vxworks_vec, bfd_elf32_i386_vec): Likewise.
	* configure: Regenerated.

binutils/testsuite/
2012-04-03  Roland McGrath  <mcgrathr@@google.com>

	* lib/binutils-common.exp (is_elf_format): Consider *-*-nacl* to
	be ELF too.

	* binutils-all/elfedit-4.d: Add "#as: --64" option.

	* binutils-all/i386/i386.exp: Accept nacl targets too.
	* binutils-all/x86-64/x86-64.exp: Likewise.

gas/testsuite/
2012-04-03  Roland McGrath  <mcgrathr@@google.com>

	* gas/i386/k1om.d: Add not-target match for *-*-nacl*.
	* gas/i386/l1om.d: Likewise.

ld/
2012-04-03  Roland McGrath  <mcgrathr@@google.com>

	* configure.tgt (i[3-7]86-*-nacl*, x86_64-*-nacl*): Handle them.
	* emulparams/elf_nacl.sh: New file.
	* emulparams/elf_i386_nacl.sh: New file.
	* emulparams/elf32_x86_64_nacl.sh: New file.
	* emulparams/elf_x86_64_nacl.sh: New file.
	* Makefile.am (ALL_EMULATION_SOURCES): Add eelf_i386_nacl.c here.
	(ALL_64_EMULATION_SOURCES): Add eelf32_x86_64_nacl.c and
	eelf_x86_64_nacl.c here.
	(eelf_i386_nacl.c, eelf32_x86_64_nacl.c, eelf_x86_64_nacl.c):
	New targets.
	* Makefile.in: Regenerated.

	* scripttempl/elf.sc: Handle SEPARATE_CODE cases.

ld/testsuite/
2012-04-03  Roland McGrath  <mcgrathr@@google.com>

	* ld-x86-64/ilp32-4-nacl.d: New file.
	* ld-x86-64/x86-64.exp: Run it.

	* ld-discard/discard.exp: Accept nacl targets too.
	* ld-elf/binutils.exp: Likewise.
	* ld-elf/comm-data.exp: Likewise.
	* ld-elf/elf.exp: Likewise.
	* ld-elf/tls_common.exp: Likewise.
	* ld-elfvers/vers.exp: Likewise.
	* ld-elfvsb/elfvsb.exp: Likewise.
	* ld-elfweak/elfweak.exp: Likewise.
	* ld-gc/gc.exp: Likewise.
	* ld-ifunc/binutils.exp: Likewise.
	* ld-ifunc/ifunc.exp: Likewise.
	* ld-linkonce/linkonce.exp:Likewise.
	* ld-pie/pie.exp: Likewise.
	* ld-shared/shared.exp: Likewise.
	* ld-undefined/weak-undef.exp: Likewise.
	* ld-unique/unique.exp: Likewise.
	* ld-x86-64/dwarfreloc.exp: Likewise.
	* ld-x86-64/line.exp: Likewise.

	* lib/ld-lib.exp (slurp_options): Support global array
	options_regsub to apply substitutions to the contents
	of options lines read from the file.
	* ld-i386/emit-relocs.d: Renamed to ...
	* ld-i386/emit-relocs.rd: ... this.
	* ld-i386/i386.exp: Accept nacl targets too.
	For them, use options_regsub to replace elf_i386 with
	elf_i386_nacl in run_dump_test cases; apply the same
	substitution in $i386tests; replace foo.rd expectations
	files with foo-nacl.rd in $i386tests.
	(i386tests): Change emit-relocs.d to emit-relocs.rd here.
	* ld-i386/emit-relocs-nacl.rd: New file.
	* ld-i386/plt-nacl.pd: New file.
	* ld-i386/plt-pic-nacl.pd: New file.
	* ld-i386/tlsbin-nacl.rd: New file.
	* ld-i386/tlsbindesc-nacl.rd: New file.
	* ld-i386/tlsdesc-nacl.rd: New file.
	* ld-i386/tlsgdesc-nacl.rd: New file.
	* ld-i386/tlsnopic-nacl.rd: New file.
	* ld-i386/tlspic-nacl.rd: New file.
	* ld-x86-64/x86-64.exp: Accept nacl targets too.
	For them, use options_regsub to replace elf_x86_64 with
	elf_x86_64_nacl in run_dump_test cases; apply the same
	substitution in $x86_64tests; replace foo.rd expectations
	files with foo-nacl.rd in $x86_64tests.
	Add explicit -melf_x86_64 to ld options in tests that need it,
	in case the default emulation is x32 (as it is for x86_64-nacl).
	* ld/testsuite/ld-x86-64/plt-nacl.pd: New file.
	* ld/testsuite/ld-x86-64/split-by-file-nacl.rd: New file.
	* ld/testsuite/ld-x86-64/tlsbin-nacl.rd: New file.
	* ld/testsuite/ld-x86-64/tlsbindesc-nacl.rd: New file.
	* ld/testsuite/ld-x86-64/tlsdesc-nacl.pd: New file.
	* ld/testsuite/ld-x86-64/tlsdesc-nacl.rd: New file.
	* ld/testsuite/ld-x86-64/tlsgdesc-nacl.rd: New file.
	* ld/testsuite/ld-x86-64/tlspic-nacl.rd: New file.

	* ld-i386/hidden2.d: Loosen regexps to match any file format variant,
	and not to depend on exact addresses, displacements, etc. where
	they are irrelevant.
	* ld-i386/pcrel16.d: Likewise.
	* ld-i386/pcrel16abs.d: Likewise.
	* ld-i386/pr12718.d: Likewise.
	* ld-i386/pr12921.d: Likewise.
	* ld-i386/reloc.d: Likewise.
	* ld-i386/tlsbin.dd: Likewise.
	* ld-i386/tlsbin.sd: Likewise.
	* ld-i386/tlsbin.td: Likewise.
	* ld-i386/tlsbindesc.dd: Likewise.
	* ld-i386/tlsbindesc.sd: Likewise.
	* ld-i386/tlsbindesc.td: Likewise.
	* ld-i386/tlsdesc.dd: Likewise.
	* ld-i386/tlsdesc.sd: Likewise.
	* ld-i386/tlsdesc.td: Likewise.
	* ld-i386/tlsg.sd: Likewise.
	* ld-i386/tlsgdesc.dd: Likewise.
	* ld-i386/tlsindntpoff.dd: Likewise.
	* ld-i386/tlsnopic.dd: Likewise.
	* ld-i386/tlsnopic.sd: Likewise.
	* ld-i386/tlspic.dd: Likewise.
	* ld-i386/tlspic.sd: Likewise.
	* ld-i386/tlspic.td: Likewise.
	* ld-i386/tlspie2.d: Likewise.
	* ld-x86-64/hidden2.d: Likewise.
	* ld-x86-64/pcrel16.d: Likewise.
	* ld-x86-64/pr12718.d: Likewise.
	* ld-x86-64/pr12921.d: Likewise.
	* ld-x86-64/protected3.d: Likewise.
	* ld-x86-64/tlsbin.dd: Likewise.
	* ld-x86-64/tlsbin.sd: Likewise.
	* ld-x86-64/tlsbin.td: Likewise.
	* ld-x86-64/tlsbindesc.dd: Likewise.
	* ld-x86-64/tlsbindesc.sd: Likewise.
	* ld-x86-64/tlsbindesc.td: Likewise.
	* ld-x86-64/tlsdesc.dd: Likewise.
	* ld-x86-64/tlsdesc.sd: Likewise.
	* ld-x86-64/tlsdesc.td: Likewise.
	* ld-x86-64/tlsg.sd: Likewise.
	* ld-x86-64/tlsgd5.dd: Likewise.
	* ld-x86-64/tlsgd6.dd: Likewise.
	* ld-x86-64/tlsgdesc.dd: Likewise.
	* ld-x86-64/tlspic.dd: Likewise.
	* ld-x86-64/tlspic.sd: Likewise.
	* ld-x86-64/tlspic.td: Likewise.

	* ld-x86-64/ilp32-8.d: Match any file format variant.
	Use a -Ttext and adjust expected results, to handle variant layouts.
	* ld-x86-64/ilp32-9.d: Likewise.

	* ld-i386/alloc.t: Remove superfluous OUTPUT_FORMAT statement.
	* ld-i386/pr12627.t: Likewise.

	* ld-x86-64/abs-l1om.d: Add target: constraint.
	* ld-x86-64/protected2-l1om.d: Likewise.
	* ld-x86-64/protected3-l1om.d: Likewise.
	* ld-x86-64/ilp32-4.d: Likewise.

	* ld-x86-64/plt.s: New file.
	* ld-x86-64/pltlib.s: New file.
	* ld-x86-64/plt.pd: New file.
	* ld-x86-64/x86-64.exp (x86_64tests): Add them.

	* ld-i386/plt.s: New file.
	* ld-i386/pltlib.s: New file.
	* ld-i386/plt.pd: New file.
	* ld-i386/plt-pic.s: New file.
	* ld-i386/plt-pic.pd: New file.
	* ld-i386/i386.exp (i386tests): Add them.
@
text
@d50 1
@


1.56.2.1
log
@Add support for 64-bit ARM architecture: aarch64
@
text
@a49 1
     && ![istarget aarch64*-*-linux*]
@


1.55
log
@	* config/default.exp: Update copyright date.
	* ld-elf/shared.exp: Pass --no-as-needed to various tests linking
	shared libs.
	* ld-elfvers/vers.exp: Likewise.
@
text
@d39 1
d55 2
a56 1
     && ![istarget x86_64-*-linux*] } {
d124 1
a124 1
    
d266 1
a266 1
	
d296 1
a296 1
	
d300 1
a300 1
	    
d309 1
a309 1
		
d313 1
a313 1
	
d318 1
a318 1
	
d322 1
a322 1
	
d361 1
a361 1
	
d391 1
a391 1
	
d399 1
a399 1
	    
d404 1
a404 1
		
d424 1
a424 1
		
d428 1
a428 1
	
d433 1
a433 1
	
d437 1
a437 1
	
d569 1
a569 1
    
d683 1
a683 1
	
d688 1
a688 1
	
d881 1
a881 1
test_strip_vers_lib "vers14" vers1.so vers14 vers1.ver vers1.dsym 
d885 1
a885 1
# Build another test with some versioned symbols.  Here we are going to 
d917 1
a917 1
    xfail "vers23a" 
@


1.54
log
@2011-12-15  David Daney  <david.daney@@cavium.com>
	    Nick Clifton <nickc@@redhat.com>

	* ld-elfvers/vers.exp (picflag): Set to -fpic for mips*-*-* when
	using GCC-4.3 or later.
	(pic): Set to "yes" for mips*-*-linux*.
	* ld-elfvsb/elfvsb.exp: Don't test non-PIC shared libraried on
	mips*-*-linux*.
	(picflag): Set to -fpic for mips*-*-* when using GCC-4.3 or later.
	* ld-elfweak/elfweak.exp (picflag): Set to -fpic for mips*-*-*
	when using GCC-4.3 or later.
	* ld-shared/shared.exp (picflag): Same.
	* lib/ld-lib.exp (at_least_gcc_version): New proc.
@
text
@d3 1
a3 1
#   2009, 2010 Free Software Foundation, Inc.
d887 1
a887 1
build_exec "vers15" vers15.c vers15 "" vers1.so vers15.ver vers15.dsym vers15.sym
@


1.53
log
@ld: vers19 test: add -rpath-link

Using -Wl,-rpath,. isn't sufficient for cross-linkers to locate the
necessary libraries.  So throw in -Wl,-rpath-link,. to make it work.

Signed-off-by: Mike Frysinger <vapier@@gentoo.org>
@
text
@d75 3
a77 1
if [istarget mips*-*-*] {
d773 3
a775 2
if [istarget x86_64-*-linux*] {
    # x86_64 doesn't like non-pic shared libraries
@


1.52
log
@Replace -export-dynamic with -Wl,-export-dynamic.

2010-12-04  H.J. Lu  <hongjiu.lu@@intel.com>

	* ld-elfvers/vers.exp: Replace -export-dynamic with
	-Wl,-export-dynamic.
@
text
@d896 1
a896 1
build_exec "vers19" vers19.c vers19 "-Wl,-rpath,." vers18.so vers19.ver vers19.dsym ""
@


1.51
log
@	* ld-elf/binutils.exp: Correct x86 gnu target match.
	* ld-i386/i386.exp: Likewise.
	* ld-ifunc/binutils.exp: Likewise.
	* ld-ifunc/ifunc.exp: Likewise.
	* ld-discard/discard.exp: Remove unnecessary line continuations.
	* ld-elfvers/vers.exp: Likewise.  Simplify linuxaout and linuxoldld
	test.
	* ld-elfweak/elfweak.exp: Likewise.
@
text
@d806 1
a806 1
build_exec "vers4a" vers4.c vers4a "-export-dynamic" "" vers4a.ver vers4a.dsym vers4a.sym
d810 1
a810 1
build_exec "vers4b" vers4.c vers4b "-export-dynamic -Wl,--no-export-dynamic" "" "" "" vers4.sym
d851 1
a851 1
build_exec "vers9" vers9.c vers9 "-export-dynamic" "" vers9.ver vers9.dsym vers9.sym
@


1.50
log
@Improve binutils testsuite coverage for GNU/Hurd.

binutils/testsuite/

	* lib/utils-lib.exp (is_elf_format): Consider for *-*-gnu*, too.
	* binutils-all/elfedit-2.d (target): Likewise.
	* binutils-all/elfedit-3.d (target): Likewise.
	* binutils-all/i386/i386.exp: Likewise.
	* binutils-all/objcopy.exp: Likewise.
	* binutils-all/strip-3.d (target): Likewise.

gas/testsuite/

	* lib/gas-defs.exp (is_elf_format): Consider for *-*-gnu*, too.
	* gas/elf/elf.exp: Likewise.
	* gas/symver/symver.exp: Likewise.

ld/

	* configure.host: Add stanza for *-*-gnu*.

ld/testsuite/

	* lib/ld-lib.exp (is_elf_format): Consider for *-*-gnu*, too.
	* ld-discard/discard.exp: Likewise.
	* ld-elf/binutils.exp: Likewise.
	* ld-elf/commonpage1.d (target): Likewise.
	* ld-elf/compress1c.d (target): Likewise.
	* ld-elf/discard1.d (target): Likewise.
	* ld-elf/discard2.d (target): Likewise.
	* ld-elf/discard3.d (target): Likewise.
	* ld-elf/dynsym1.d (target): Likewise.
	* ld-elf/eh6.d (target): Likewise.
	* ld-elf/elf.exp: Likewise.
	(array_tests): Move -static tests to...
	(array_tests_static): ... here, and handle it accordingly.
	* ld-elf/hash.d (target): Likewise.
	* ld-elf/header.d (target): Likewise.
	* ld-elf/loadaddr1.d (target): Likewise.
	* ld-elf/loadaddr2.d (target): Likewise.
	* ld-elf/loadaddr3a.d (target): Likewise.
	* ld-elf/loadaddr3b.d (target): Likewise.
	* ld-elf/local1.d (target): Likewise.
	* ld-elf/maxpage1.d (target): Likewise.
	* ld-elf/maxpage2.d (target): Likewise.
	* ld-elf/maxpage3a.d (target): Likewise.
	* ld-elf/multibss1.d (target): Likewise.
	* ld-elf/noload-2.d (target): Likewise.
	* ld-elf/seg.d (target): Likewise.
	* ld-elf/textaddr1.d (target): Likewise.
	* ld-elf/textaddr2.d (target): Likewise.
	* ld-elf/textaddr3.d (target): Likewise.
	* ld-elf/textaddr4.d (target): Likewise.
	* ld-elf/textaddr5.d (target): Likewise.
	* ld-elf/textaddr6.d (target): Likewise.
	* ld-elf/textaddr7.d (target): Likewise.
	* ld-elf/tls_common.exp: Likewise.
	* ld-elf/unknown2.d (target): Likewise.
	* ld-elfvers/vers.exp: Likewise.
	* ld-elfvsb/elfvsb.exp: Likewise.
	* ld-elfweak/elfweak.exp: Likewise.
	(setup_xfail_gnu_hurd): New function.  Use it where appropriate.
	* ld-gc/abi-note.d (target): Likewise.
	* ld-gc/gc.exp: Likewise.
	* ld-gc/pr11218.d (target): Likewise.
	* ld-gc/start.d (target): Likewise.
	* ld-i386/i386.exp: Likewise.
	* ld-ifunc/binutils.exp: Likewise.
	* ld-ifunc/ifunc.exp: Likewise.
	* ld-linkonce/linkonce.exp: Likewise.
	* ld-linkonce/zeroehl32.d (target): Likewise.
	* ld-pie/pie.exp: Likewise.
	* ld-scripts/phdrs2.exp: Likewise.
	* ld-scripts/rgn-at5.d (target): Likewise.
	* ld-shared/shared.exp: Likewise.
	* ld-undefined/entry-3.d (target): Likewise.
	* ld-undefined/entry-4.d (target): Likewise.
	* ld-undefined/weak-undef.exp: Likewise.
@
text
@d32 22
a53 22
if { ![istarget hppa*64*-*-hpux*] \
     && ![istarget hppa*-*-linux*] \
     && ![istarget i?86-*-sysv4*] \
     && ![istarget i?86-*-unixware] \
     && ![istarget i?86-*-elf*] \
     && ![istarget i?86-*-linux*] \
     && ![istarget i?86-*-gnu*] \
     && ![istarget ia64-*-elf*] \
     && ![istarget ia64-*-linux*] \
     && ![istarget m68k-*-linux*] \
     && ![istarget mips*-*-irix5*] \
     && ![istarget powerpc*-*-elf*] \
     && ![istarget powerpc*-*-linux*] \
     && ![istarget powerpc*-*-sysv4*] \
     && ![istarget sparc*-*-elf] \
     && ![istarget sparc*-*-solaris2*] \
     && ![istarget sparc*-*-linux*] \
     && ![istarget arm*-*-linux*] \
     && ![istarget mips*-*-linux*] \
     && ![istarget alpha*-*-linux*] \
     && ![istarget s390*-*-linux*] \
     && ![istarget sh\[34\]*-*-linux*] \
d58 2
a59 3
if { [istarget i?86-*-linux*aout*] \
     || [istarget i?86-*-linux*oldld*] \
     || [istarget m68k-*-linux*aout*] } {
d86 3
a88 3
    if { [string match "*illegal option*" $exec_output] \
	 || [string match "*option ignored*" $exec_output] \
	 || [string match "*unrecognized option*" $exec_output] \
@


1.49
log
@	* ld-elfvers/vers32c.dsym, * ld-elfvers/vers32c.ver: Delete.
	* ld-elfvers/vers32d.ver: Delete.
	* ld-elfvers/vers.exp: Don't run them.
@
text
@d38 1
@


1.49.2.1
log
@apply mainline testsuite fixes and tweaks
@
text
@d32 21
a52 22
if { ![istarget hppa*64*-*-hpux*]
     && ![istarget hppa*-*-linux*]
     && ![istarget i?86-*-sysv4*]
     && ![istarget i?86-*-unixware]
     && ![istarget i?86-*-elf*]
     && ![istarget i?86-*-linux*]
     && ![istarget i?86-*-gnu*]
     && ![istarget ia64-*-elf*]
     && ![istarget ia64-*-linux*]
     && ![istarget m68k-*-linux*]
     && ![istarget mips*-*-irix5*]
     && ![istarget powerpc*-*-elf*]
     && ![istarget powerpc*-*-linux*]
     && ![istarget powerpc*-*-sysv4*]
     && ![istarget sparc*-*-elf]
     && ![istarget sparc*-*-solaris2*]
     && ![istarget sparc*-*-linux*]
     && ![istarget arm*-*-linux*]
     && ![istarget mips*-*-linux*]
     && ![istarget alpha*-*-linux*]
     && ![istarget s390*-*-linux*]
     && ![istarget sh\[34\]*-*-linux*]
d57 3
a59 2
if { [istarget *-*-linux*aout*]
     || [istarget *-*-linux*oldld*] } {
d86 3
a88 3
    if { [string match "*illegal option*" $exec_output]
	 || [string match "*option ignored*" $exec_output]
	 || [string match "*unrecognized option*" $exec_output]
d806 1
a806 1
build_exec "vers4a" vers4.c vers4a "-Wl,-export-dynamic" "" vers4a.ver vers4a.dsym vers4a.sym
d810 1
a810 1
build_exec "vers4b" vers4.c vers4b "-Wl,-export-dynamic -Wl,--no-export-dynamic" "" "" "" vers4.sym
d851 1
a851 1
build_exec "vers9" vers9.c vers9 "-Wl,-export-dynamic" "" vers9.ver vers9.dsym vers9.sym
@


1.48
log
@	* ld-elfvers/vers.exp: Enable test for powerpc64.
	* ld-elfweak/elfweak.exp: Likewise
	* ld-shared/shared.exp: Likewise.  Xfail non-pic dso tests for ppc64.
	* ld-elfvers/vers1.dsym, * ld-elfvers/vers1.sym,
	* ld-elfvers/vers2.dsym, * ld-elfvers/vers3.dsym,
	* ld-elfvers/vers4.sym, * ld-elfvers/vers4a.dsym,
	* ld-elfvers/vers4a.sym, * ld-elfvers/vers6.dsym,
	* ld-elfvers/vers6.sym, * ld-elfvers/vers7a.dsym,
	* ld-elfvers/vers7a.sym, * ld-elfvers/vers9.dsym,
	* ld-elfvers/vers9.sym, * ld-elfvers/vers15.dsym,
	* ld-elfvers/vers15.sym, * ld-elfvers/vers16.dsym,
	* ld-elfvers/vers16a.dsym, * ld-elfvers/vers17.dsym,
	* ld-elfvers/vers18.dsym, * ld-elfvers/vers18.sym,
	* ld-elfvers/vers19.dsym, * ld-elfvers/vers20.dsym,
	* ld-elfvers/vers21.dsym, * ld-elfvers/vers21.sym,
	* ld-elfvers/vers22.dsym, * ld-elfvers/vers22a.dsym,
	* ld-elfvers/vers22a.sym, * ld-elfvers/vers22b.dsym,
	* ld-elfvers/vers23.dsym, * ld-elfvers/vers23a.dsym,
	* ld-elfvers/vers23a.sym, * ld-elfvers/vers23b.dsym,
	* ld-elfvers/vers25a.dsym, * ld-elfvers/vers26a.dsym,
	* ld-elfvers/vers27a.dsym, * ld-elfvers/vers27d.dsym,
	* ld-elfvers/vers27d.sym, * ld-elfvers/vers27d4.dsym,
	* ld-elfvers/vers28b.dsym, * ld-elfvers/vers28c.dsym,
	* ld-elfvers/vers29.dsym, * ld-elfvers/vers30.dsym,
	* ld-elfvers/vers31.dsym, * ld-elfvers/vers32a.dsym,
	* ld-elfvers/vers32b.dsym, * ld-elfvers/vers32c.dsym,
	* ld-elfweak/dso.dsym, * ld-elfweak/dsodata.dsym,
	* ld-elfweak/dsow.dsym, * ld-elfweak/dsowdata.dsym,
	* ld-elfweak/strong.sym, * ld-elfweak/strongcomm.sym,
	* ld-elfweak/strongdata.sym, * ld-elfweak/weak.dsym,
	* ld-elfweak/weakdata.dsym: Relax whitespace matching, tighten
	non-whitespace matching.  Match powerpc64 functions in .opd section.
	* ld-shared/elf-offset.ld: Place powerpc64 .toc sections.
@
text
@d3 1
a3 1
#   2009 Free Software Foundation, Inc.
a1002 2
build_vers_lib_pic_flags "vers32c" vers32a.c vers32c "vers32a.so" vers32.map vers32c.ver vers32c.dsym "" "--defsym foo=0"
build_vers_lib_pic_flags "vers32d" vers32a.c vers32d "" vers32.map vers32d.ver vers32c.dsym "" "--defsym foo=0"
@


1.47
log
@	* ld-elfvers/vers.exp: Pass -Av9a to assembler on sparc-*-*
@
text
@d42 3
a44 3
     && ![istarget powerpc-*-elf*] \
     && ![istarget powerpc-*-linux*] \
     && ![istarget powerpc-*-sysv4*] \
@


1.46
log
@update copyright dates
@
text
@d100 1
@


1.45
log
@[ld/ChangeLog]
2009-04-29  Chris Demetriou  <cgd@@google.com>

        * lexsup.c (option_values): Add OPTION_NO_EXPORT_DYNAMIC.
        (ld_options): Likewise.
        (parse_args): Likewise.
        * ld.texinfo: Document --no-export-dynamic.
        * NEWS: Mention --no-export-dynamic.

[ld/testsuite/ChangeLog]
2009-04-29  Chris Demetriou  <cgd@@google.com>

        * ld-elfvers/vers.exp (vers4b): New test to verify that
        --no-export-dynamic undoes --export-dynamic.
@
text
@d2 2
a3 2
#   Copyright 1997, 1998, 1999, 2001, 2002, 2003, 2004, 2005, 2007
#   Free Software Foundation, Inc.
@


1.44
log
@* ld-elfvers/vers.exp (test_ar): Sort the expected output so that
  it has matches the ordering of the obtained output.
@
text
@d807 4
@


1.43
log
@2007-07-10  H.J. Lu  <hongjiu.lu@@intel.com>

	* ld-elfvers/vers.exp: Add tests for --defsym.

	* ld-elfvers/vers32.map: Likewise.
	* ld-elfvers/vers32a.c: Likewise.
	* ld-elfvers/vers32a.dsym: Likewise.
	* ld-elfvers/vers32a.ver: Likewise.
	* ld-elfvers/vers32b.c: Likewise.
	* ld-elfvers/vers32b.dsym: Likewise.
	* ld-elfvers/vers32b.ver: Likewise.
	* ld-elfvers/vers32c.dsym: Likewise.
	* ld-elfvers/vers32c.ver: Likewise.
	* ld-elfvers/vers32d.ver: Likewise.
@
text
@d124 1
a124 1
	catch "exec $diff $tmpdir/nm.out $srcdir/$subdir/$expect" exec_output
@


1.42
log
@Update sources to GPLv3
@
text
@d994 6
@


1.41
log
@	* ld-elfvers/vers.exp (objdump_versionstuff): Allow versions in
	any order.
	* ld-elfvers/vers1.ver: Update.
	* ld-elfvers/vers2.ver: Update.
	* ld-elfvers/vers4a.ver: Update.
	* ld-elfvers/vers7a.ver: Update.
	* ld-elfvers/vers8.ver: Update.
	* ld-elfvers/vers9.ver: Update.
	* ld-elfvers/vers15.ver: Update.
	* ld-elfvers/vers16a.ver: Update.
	* ld-elfvers/vers17.ver: Update.
	* ld-elfvers/vers18.ver: Update.
	* ld-elfvers/vers20.ver: Update.
	* ld-elfvers/vers20a.ver: Update.
	* ld-elfvers/vers21.ver: Update.
	* ld-elfvers/vers22a.ver: Update.
	* ld-elfvers/vers22b.ver: Update.
	* ld-elfvers/vers23a.ver: Update.
	* ld-elfvers/vers23b.ver: Update.
	* ld-elfvers/vers23c.ver: Update.
	* ld-elfvers/vers25a.ver: Update.
	* ld-elfvers/vers26a.ver: Update.
	* ld-elfvers/vers27a.ver: Update.
	* ld-elfvers/vers27d.ver: Update.
	* ld-elfvers/vers28b.ver: Update.
	* ld-elfvers/vers29.ver: Update.
	* ld-elfvers/vers30.ver: Update.
	* ld-elfvers/vers31.ver: Update.
@
text
@d2 1
a2 1
#   Copyright 1997, 1998, 1999, 2001, 2002, 2003, 2004, 2005
d5 3
a7 1
# This file is free software; you can redistribute it and/or modify
d9 1
a9 1
# the Free Software Foundation; either version 2 of the License, or
d11 1
a11 1
# 
d16 1
a16 1
# 
d19 2
a20 1
# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.
@


1.40
log
@2006-04-26  H.J. Lu  <hongjiu.lu@@intel.com>

	* ld-elfvers/vers.exp: Xfail vers7a, vers7, vers23a, vers23b,
	vers23c, vers23d, vers23, vers25a, vers25b1, vers25b2, vers27a,
	vers27b, vers27c1, vers27c2, vers27d4 and vers27d5 if PIC is
	required.
@
text
@d463 1
a463 1
	# every line in EXPECTFILE appear in the output in order.
a464 1
	set f1 [open $tmpdir/objdump.out r]
d468 14
a481 6
		break
	    }
	} 
	while { [gets $f1 l1] != -1 } {
	    if { [string match $l2 $l1] } then {
		if { [gets $f2 l2] == -1 } then {
d484 1
a484 1
		    return 1
a487 5

	# We reached the end of the output without seeing the line we
	# expected.  This is a test failure.

	close $f1
d489 1
a489 14

	# Support empty expected file.
	if [string match "" $l2] then {
	    return 1
	}

	verbose -log "Did not find \"$l2\""
	set f1 [open $tmpdir/objdump.out r]
	while { [gets $f1 l1] != -1 } {
	    verbose -log $l1
	}

	verbose -log "$exec_output"
	return 0
@


1.39
log
@	* ld.texino: Describe double-quoted string syntax for version
	nodes.
	* ldlang.h (lang_new_vers_pattern): Add literal_p parameter.
	* ldgram.y (vers_defns): Allow NAME as well as VERS_IDENTIFIER.
	Adjust calls to lang_new_vers_pattern to pass literal_p argument.
	* ldlang.c (lang_vers_match): Fix indentation.  Do not glob-match
	version nodes without a pattern.
	(lang_new_vers_pattern): Add literal_p parameter.
	(lang_do_version_exports_section): Pass it.

	* ld-elfvers/vers.exp: Add vers31.
	* ld-elfvers/vers31.c: New file.
	* ld-elfvers/vers31.dsym: Likewise.
	* ld-elfvers/vers31.map: Likewise.
	* ld-elfvers/vers31.ver: Likewise.
@
text
@d833 5
a837 1
build_vers_lib_no_pic "vers7a" vers7a.c vers7a "" vers7.map vers7a.ver vers7a.dsym vers7a.sym
d839 2
a840 1
test_ldfail "vers7" "" vers7.c vers7 vers7a.so "" "undefined reference to hide_a"
d914 13
a926 5
build_vers_lib_no_pic "vers23a" vers23a.c vers23a "" vers23a.map vers23a.ver vers23a.dsym vers23a.sym
build_vers_lib_no_pic "vers23b" vers23b.c vers23b "" vers23b.map vers23b.ver vers23b.dsym ""
build_vers_lib_no_pic "vers23c" vers23b.c vers23c "vers23a.so" vers23b.map vers23c.ver vers23b.dsym ""
build_exec "vers23d" vers23.c vers23d "tmpdir/vers23a.so tmpdir/vers23c.so" "" vers23.ver vers23d.dsym ""
build_exec "vers23" vers23.c vers23 "tmpdir/vers23a.so tmpdir/vers23b.o tmpdir/vers23b.so" "" vers23.ver vers23.dsym ""
d947 10
a956 3
build_vers_lib_no_pic "vers25a" vers25a.c vers25a "" vers25a.map vers25a.ver vers25a.dsym ""
build_vers_lib_no_pic "vers25b1" vers25b.c vers25b1 "vers25a.o vers25a.so" "" vers25b.ver vers25b.dsym ""
build_vers_lib_no_pic "vers25b2" vers25b.c vers25b2 "vers25a.so vers25a.o" "" vers25b.ver vers25b.dsym ""
d967 21
a987 9
build_vers_lib_no_pic "vers27a" vers27a.c vers27a "" vers27a.map vers27a.ver vers27a.dsym ""
build_vers_lib_no_pic "vers27b" vers27b.c vers27b "" "" vers27b.ver vers27b.dsym ""
build_vers_lib_no_pic "vers27c1" vers27c.c vers27c1 "vers27b.o vers27a.so" "" vers27c.ver vers27c.dsym ""
build_vers_lib_no_pic "vers27c2" vers27c.c vers27c2 "vers27a.so vers27b.o" "" vers27c.ver vers27c.dsym ""
build_vers_lib_pic "vers27d1" vers27d1.c vers27d1 "" vers27a.map vers27d.ver vers27d.dsym vers27d.sym
build_vers_lib_pic "vers27d2" vers27d2.c vers27d2 "" "" vers27b.ver vers27b.dsym ""
build_executable "vers27d3" vers27d3.c vers27d3 "vers27b.o vers27d2.so vers27d1.so" "" vers27b.ver vers27b.dsym ""
build_vers_lib_pic "vers27d4" vers27d2.c vers27d4 "vers27a.so" "" vers27d4.ver vers27d4.dsym ""
build_executable "vers27d5" vers27d3.c vers27d5 "vers27d4.so vers27b.o vers27a.so" "" vers27b.ver vers27b.dsym ""
@


1.39.2.1
log
@Merge changes between binutils-csl-2_17-branchpoint and
binutils-2_17, except for the addition of generated files to CVS.
@
text
@d833 1
a833 5
if [string match "yes" $pic] then {
    xfail "vers7a"
    xfail "vers7"
} else {
    build_vers_lib_no_pic "vers7a" vers7a.c vers7a "" vers7.map vers7a.ver vers7a.dsym vers7a.sym
d835 1
a835 2
    test_ldfail "vers7" "" vers7.c vers7 vers7a.so "" "undefined reference to hide_a"
}
d909 5
a913 13
if [string match "yes" $pic] then {
    xfail "vers23a" 
    xfail "vers23b"
    xfail "vers23c"
    xfail "vers23d"
    xfail "vers23"
} else {
    build_vers_lib_no_pic "vers23a" vers23a.c vers23a "" vers23a.map vers23a.ver vers23a.dsym vers23a.sym
    build_vers_lib_no_pic "vers23b" vers23b.c vers23b "" vers23b.map vers23b.ver vers23b.dsym ""
    build_vers_lib_no_pic "vers23c" vers23b.c vers23c "vers23a.so" vers23b.map vers23c.ver vers23b.dsym ""
    build_exec "vers23d" vers23.c vers23d "tmpdir/vers23a.so tmpdir/vers23c.so" "" vers23.ver vers23d.dsym ""
    build_exec "vers23" vers23.c vers23 "tmpdir/vers23a.so tmpdir/vers23b.o tmpdir/vers23b.so" "" vers23.ver vers23.dsym ""
}
d934 3
a936 10
if [string match "yes" $pic] then {
    xfail "vers25a"
    xfail "vers25b1"
    xfail "vers25b2"
} else {
    build_vers_lib_no_pic "vers25a" vers25a.c vers25a "" vers25a.map vers25a.ver vers25a.dsym ""
    build_vers_lib_no_pic "vers25b1" vers25b.c vers25b1 "vers25a.o vers25a.so" "" vers25b.ver vers25b.dsym ""
    build_vers_lib_no_pic "vers25b2" vers25b.c vers25b2 "vers25a.so vers25a.o" "" vers25b.ver vers25b.dsym ""
}

d947 9
a955 21
if [string match "yes" $pic] then {
    xfail "vers27a"
    xfail "vers27b"
    xfail "vers27c1"
    xfail "vers27c2"
    xfail "vers27d1"
    xfail "vers27d2"
    xfail "vers27d3"
    xfail "vers27d4"
    xfail "vers27d5"
} else {
    build_vers_lib_no_pic "vers27a" vers27a.c vers27a "" vers27a.map vers27a.ver vers27a.dsym ""
    build_vers_lib_no_pic "vers27b" vers27b.c vers27b "" "" vers27b.ver vers27b.dsym ""
    build_vers_lib_no_pic "vers27c1" vers27c.c vers27c1 "vers27b.o vers27a.so" "" vers27c.ver vers27c.dsym ""
    build_vers_lib_no_pic "vers27c2" vers27c.c vers27c2 "vers27a.so vers27b.o" "" vers27c.ver vers27c.dsym ""
    build_vers_lib_pic "vers27d1" vers27d1.c vers27d1 "" vers27a.map vers27d.ver vers27d.dsym vers27d.sym
   build_vers_lib_pic "vers27d2" vers27d2.c vers27d2 "" "" vers27b.ver vers27b.dsym ""
    build_executable "vers27d3" vers27d3.c vers27d3 "vers27b.o vers27d2.so vers27d1.so" "" vers27b.ver vers27b.dsym ""
    build_vers_lib_pic "vers27d4" vers27d2.c vers27d4 "vers27a.so" "" vers27d4.ver vers27d4.dsym ""
    build_executable "vers27d5" vers27d3.c vers27d5 "vers27d4.so vers27b.o vers27a.so" "" vers27b.ver vers27b.dsym ""
}
@


1.39.4.1
log
@	Backport:
	2006-04-29  H.J. Lu  <hongjiu.lu@@intel.com>
	* ld-elfvers/vers.exp: Xfail vers7a, vers7, vers23a, vers23b,
	vers23c, vers23d, vers23, vers25a, vers25b1, vers25b2, vers27a,
	vers27b, vers27c1, vers27c2, vers27d4 and vers27d5 if PIC is
	required.
@
text
@d833 1
a833 5
if [string match "yes" $pic] then {
    xfail "vers7a"
    xfail "vers7"
} else {
    build_vers_lib_no_pic "vers7a" vers7a.c vers7a "" vers7.map vers7a.ver vers7a.dsym vers7a.sym
d835 1
a835 2
    test_ldfail "vers7" "" vers7.c vers7 vers7a.so "" "undefined reference to hide_a"
}
d909 5
a913 13
if [string match "yes" $pic] then {
    xfail "vers23a" 
    xfail "vers23b"
    xfail "vers23c"
    xfail "vers23d"
    xfail "vers23"
} else {
    build_vers_lib_no_pic "vers23a" vers23a.c vers23a "" vers23a.map vers23a.ver vers23a.dsym vers23a.sym
    build_vers_lib_no_pic "vers23b" vers23b.c vers23b "" vers23b.map vers23b.ver vers23b.dsym ""
    build_vers_lib_no_pic "vers23c" vers23b.c vers23c "vers23a.so" vers23b.map vers23c.ver vers23b.dsym ""
    build_exec "vers23d" vers23.c vers23d "tmpdir/vers23a.so tmpdir/vers23c.so" "" vers23.ver vers23d.dsym ""
    build_exec "vers23" vers23.c vers23 "tmpdir/vers23a.so tmpdir/vers23b.o tmpdir/vers23b.so" "" vers23.ver vers23.dsym ""
}
d934 3
a936 10
if [string match "yes" $pic] then {
    xfail "vers25a"
    xfail "vers25b1"
    xfail "vers25b2"
} else {
    build_vers_lib_no_pic "vers25a" vers25a.c vers25a "" vers25a.map vers25a.ver vers25a.dsym ""
    build_vers_lib_no_pic "vers25b1" vers25b.c vers25b1 "vers25a.o vers25a.so" "" vers25b.ver vers25b.dsym ""
    build_vers_lib_no_pic "vers25b2" vers25b.c vers25b2 "vers25a.so vers25a.o" "" vers25b.ver vers25b.dsym ""
}

d947 9
a955 21
if [string match "yes" $pic] then {
    xfail "vers27a"
    xfail "vers27b"
    xfail "vers27c1"
    xfail "vers27c2"
    xfail "vers27d1"
    xfail "vers27d2"
    xfail "vers27d3"
    xfail "vers27d4"
    xfail "vers27d5"
} else {
    build_vers_lib_no_pic "vers27a" vers27a.c vers27a "" vers27a.map vers27a.ver vers27a.dsym ""
    build_vers_lib_no_pic "vers27b" vers27b.c vers27b "" "" vers27b.ver vers27b.dsym ""
    build_vers_lib_no_pic "vers27c1" vers27c.c vers27c1 "vers27b.o vers27a.so" "" vers27c.ver vers27c.dsym ""
    build_vers_lib_no_pic "vers27c2" vers27c.c vers27c2 "vers27a.so vers27b.o" "" vers27c.ver vers27c.dsym ""
    build_vers_lib_pic "vers27d1" vers27d1.c vers27d1 "" vers27a.map vers27d.ver vers27d.dsym vers27d.sym
   build_vers_lib_pic "vers27d2" vers27d2.c vers27d2 "" "" vers27b.ver vers27b.dsym ""
    build_executable "vers27d3" vers27d3.c vers27d3 "vers27b.o vers27d2.so vers27d1.so" "" vers27b.ver vers27b.dsym ""
    build_vers_lib_pic "vers27d4" vers27d2.c vers27d4 "vers27a.so" "" vers27d4.ver vers27d4.dsym ""
    build_executable "vers27d5" vers27d3.c vers27d5 "vers27d4.so vers27b.o vers27a.so" "" vers27b.ver vers27b.dsym ""
}
@


1.38
log
@	* ldgram.y (vers_defns): Don't lose pattern list before
	extern NAME {}.  Handle global, local and extern symbol names.
ld/testsuite/
	* ld-elfvers/vers.exp: Add a new test, vers30.
	* ld-elfvers/vers30.c: New file.
	* ld-elfvers/vers30.map: New file.
	* ld-elfvers/vers30.ver: New file.
	* ld-elfvers/vers30.dsym: New file.
@
text
@d967 3
@


1.37
log
@Update FSF addresses
@
text
@d963 4
@


1.36
log
@update copyright dates
@
text
@d17 1
a17 1
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
@


1.36.6.1
log
@	Issue #439
	Backport:
	2005-10-13  Mark Mitchell  <mark@@codesourcery.com>
	* ld.texino: Describe double-quoted string syntax for version
	nodes.
	* ldlang.h (lang_new_vers_pattern): Add literal_p parameter.
	* ldgram.y (vers_defns): Allow NAME as well as VERS_IDENTIFIER.
	Adjust calls to lang_new_vers_pattern to pass literal_p argument.
	* ldlang.c (lang_vers_match): Fix indentation.  Do not glob-match
	version nodes without a pattern.
	(lang_new_vers_pattern): Add literal_p parameter.
	(lang_do_version_exports_section): Pass it.
@
text
@a962 3

# Test #31 -- quoted strings in version sections.
build_vers_lib_pic "vers31" vers31.c vers31 "" vers31.map vers31.ver vers31.dsym ""
@


1.35
log
@gas/
2005-02-13  Jan Beulich  <jbeulich@@novell.com>

	* config/tc-ia64.c (md_parse_option): Handle -xnone and -xdebugn.
	(md_show_usage): Add -xnone, -xdebugn, and -xdebugx. Relocate default
	indicator.
	(ia64_init): Set md.detect_dv.
	(ia64_start_line): New static variable warned. Warn only once when
	encountering explicit stops in automatic mode.
	* doc/c-ia64.texi: Describe -xnone, -xdebugn, and -xdebugx.
	* NEWS: Mention new default mode.

gas/testsuite/
2005-02-13  Jan Beulich  <jbeulich@@novell.com>

	* gas/ia64/label.l: Adjust line numbers.
	* gas/ia64/label.s: Add .explicit.
	* gas/ia64/nop_x.s: Likewise.
	* gas/ia64/opc-a.d: Add assembler option -xnone.
	* gas/ia64/opc-b.d: Likewise.
	* gas/ia64/opc-f.d: Likewise.
	* gas/ia64/opc-i.d: Likewise.
	* gas/ia64/opc-m.d: Likewise.
	* gas/ia64/opc-x.d: Likewise.
	* gas/ia64/pseudo.d: Likewise.
	* gas/ia64/regs.d: Likewise.
	* gas/ia64/tls.d: Likewise.
	* gas/ia64/unwind-err.l: Adjust line numbers.
	* gas/ia64/unwind-err.s: Remove explicit stops.

ld/testsuite/
2005-02-13  Jan Beulich  <jbeulich@@novell.com>

	* ld-elfvers/vers.exp (as_options): New. Set to -x for ia64.
	(build_binary): Pass as_options to ld_assemble.
	(test_ldfail): Likewise.
	(build_exec): Likewise.
	Pass as_options to run_ld_link_tests.
	* ld-ia64/tlsbin.s: Add .explicit.
	* ld-ia64/tlsbinpic.s: Likewise.
	* ld-ia64/tlspic1.s: Likewise.
@
text
@d2 2
a3 1
#   Copyright 1997, 1998, 1999, 2001, 2003 Free Software Foundation, Inc.
@


1.34
log
@bfd/
	* elflink.c (elf_finalize_dynstr): Skip shared aux structure.
	(bfd_elf_size_dynamic_sections): Create default version definition.
	(elf_link_output_extsym): Adjust for default symbol version.
include/
	* bfdlink.h (struct bfd_link_info): Add create_default_symver.
ld/
	* ld.texinfo: Document --default-symver.
	* ldmain.c (main): Set link_info.create_default_symver.
	* lexsup.c (enum option_values): Add OPTION_DEFAULT_SYMVER.
	(ld_options): Add default-symver.
	(parse_args): Handle OPTION_DEFAULT_SYMVER.
ld/testsuite/
	* ld-elfvers/vers.exp (build_binary): Add ldargs parameter.
	(build_vers_lib_pic_flags): New function.
	Add vers29 test.
	* ld-elfvers/vers29.c: New file.
	* ld-elfvers/vers29.dsym: New file.
	* ld-elfvers/vers29.ver: New file.
@
text
@d94 5
d514 1
d525 1
a525 1
    if ![ld_assemble $as $tmpdir/$libname.s $tmpdir/$libname.o ]     {
d602 1
d619 1
a619 1
    if ![ld_assemble $as $tmpdir/$execname.s $tmpdir/$execname.o ]     {
d707 1
d719 1
a719 1
    if ![ld_assemble $as $tmpdir/$execname.s $tmpdir/$execname.o ]     {
d921 1
a921 1
			 \"$as_pic_flags\" {vers24a.c vers24b.c} { { readelf -Wrs vers24.rd } }
d925 1
a925 1
			 \"$as_pic_flags\" {vers24b.c vers24a.c} { { readelf -Wrs vers24.rd } }
d929 1
a929 1
			 \"$as_pic_flags\" {vers24c.c} { { readelf -Wrs vers24.rd } }
@


1.33
log
@2004-06-24  H.J. Lu  <hongjiu.lu@@intel.com>

	* ld-elfvers/vers.exp: Use PIC for shared libraries by default.
@
text
@d501 1
a501 1
proc build_binary { shared pic test source libname other mapfile verexp versymexp symexp } {
d537 1
a537 1
    if {![ld_simple_link $ld $tmpdir/$libname.so "$shared $tmpdir/$libname.o $other_lib $script_arg"]}     {
d569 1
a569 1
  build_binary "" "" $test $source $libname $other $mapfile $verexp $versymexp $symexp 
d574 1
a574 1
  build_binary $shared "" $test $source $libname $other $mapfile $verexp $versymexp $symexp 
d580 7
a586 1
  build_binary $shared $picflag $test $source $libname $other $mapfile $verexp $versymexp $symexp 
d953 1
@


1.32
log
@2004-03-19  H.J. Lu  <hongjiu.lu@@intel.com>

	* ld-elfvers/vers.exp: Add new tests for versioned weak
	definition.

	* ld-elfvers/vers28a.c: New file.
	* ld-elfvers/vers28a.dsym: Likewise.
	* ld-elfvers/vers28a.ver: Likewise.
	* ld-elfvers/vers28b.c: Likewise.
	* ld-elfvers/vers28b.dsym: Likewise.
	* ld-elfvers/vers28b.map: Likewise.
	* ld-elfvers/vers28b.ver: Likewise.
	* ld-elfvers/vers28c.c: Likewise.
	* ld-elfvers/vers28c.dsym: Likewise.
	* ld-elfvers/vers28c.ver: Likewise.
@
text
@d763 6
d773 1
a773 1
build_vers_lib_no_pic "vers1" vers1.c vers1 "" vers1.map vers1.ver vers1.dsym vers1.sym
d780 1
a780 6
if [istarget x86_64-*-linux*] {
    # x86_64 doesn't like non-pic shared libraries
    xfail "vers2"
} else {
    build_vers_lib_no_pic "vers2" vers2.c vers2 vers1.so vers2.map vers2.ver vers2.dsym ""
}
d828 1
a828 1
build_vers_lib_no_pic "vers8" vers1.c vers8 vers8.map "" vers8.ver vers1.dsym vers1.sym
d873 1
a873 1
build_vers_lib_no_pic "vers16a" vers16a.c vers16a "" vers16.map vers16a.ver vers16a.dsym ""
d877 2
a878 2
build_vers_lib_no_pic "vers17" vers17.c vers17 "" vers17.map vers17.ver vers17.dsym ""
build_vers_lib_no_pic "vers18" vers18.c vers18 vers17.so vers18.map vers18.ver vers18.dsym vers18.sym
d886 1
a886 1
build_vers_lib_no_pic "vers21" vers21.c vers21 "" vers21.map vers21.ver vers21.dsym vers21.sym
d889 3
a891 3
build_vers_lib_no_pic "vers22a" vers22a.c vers22a "" vers22.map vers22a.ver vers22a.dsym vers22a.sym
build_vers_lib_no_pic "vers22b" vers22b.c vers22b "" vers22.map vers22b.ver vers22b.dsym ""
build_vers_lib_no_pic "vers22" vers22.c vers22 "vers22a.so vers22b.so" "" vers22.ver vers22.dsym ""
d925 1
a925 2
if [istarget x86_64-*-linux*] {
    # x86_64 doesn't like non-pic shared libraries
@


1.31
log
@2003-10-23  H.J. Lu  <hongjiu.lu@@intel.com>

	* ld-elfvers/vers.exp (test_ldfail): Add "-Wl," to pass the
	linker option from gcc.
@
text
@d941 6
@


1.31.6.1
log
@Merge from mainline
@
text
@a940 6

# Test weak versioned definition vs. strong definition in different
# files.
build_vers_lib_pic "vers28a" vers28a.c vers28a "" "" vers28a.ver vers28a.dsym ""
build_vers_lib_pic "vers28b" vers28b.c vers28b "" vers28b.map vers28b.ver vers28b.dsym ""
build_vers_lib_pic "vers28c" vers28c.c vers28c "vers28b.so vers28a.so" "" vers28c.ver vers28c.dsym ""
@


1.30
log
@2003-05-15  H.J. Lu <hongjiu.lu@@intel.com>

	* config/default.exp (gcc_ld_flag): New. Make the newly built
	linker available to gcc.
	* lib/ld-lib.exp (default_ld_simple_link): Pass $gcc_ld_flag
	to gcc.

	* ld-elfvers/vers.exp: Use "ld_simple_link $CC" to build shared
	libraries.
	* ld-elfvsb/elfvsb.exp: Likewise.
	* ld-elfweak/elfweak.exp: Likewise.
	* ld-shared/shared.exp: Likewise.

	* ld-elfvers/vers.exp: Use "-Wl,-rpath,." to build shared
	libraries.
	* ld-elfvsb/elfvsb.exp: Likewise.

	* ld-elfvsb/elfvsb.exp: Remove xfail for powerpc-*-linux*.

	* ld-elfweak/elfweak.exp: Use PIC for shared libraries.
@
text
@d616 1
a616 1
	set script_arg "$script $srcdir/$subdir/$mapfile"
@


1.29
log
@Run on sh[34]*-*-linux*.
@
text
@a583 1
    global ld
d619 1
a619 1
    if {![ld_link $ld $tmpdir/$execname "$tmpdir/$execname.o $other_lib $script_arg"]}     {
a687 1
    global ld
d716 1
a716 1
    if {![ld_link $ld $tmpdir/$execname "$flags $tmpdir/$execname.o $solibname_lib"]}     {
d878 1
a878 1
build_exec "vers19" vers19.c vers19 "-rpath ." vers18.so vers19.ver vers19.dsym ""
@


1.28
log
@2003-05-08  H.J. Lu <hongjiu.lu@@intel.com>

	* ld-elfvers/vers.exp: Add vers27d4 and vers27d5 to test
	versioned reference for hidden symbol.

	* ld-elfvers/vers27d4.dsym: New file.
	* ld-elfvers/vers27d4.ver: Likewise.
@
text
@d48 1
@


1.27
log
@2003-05-07  H.J. Lu <hongjiu.lu@@intel.com>

	* ld-elfvers/vers.exp (build_binary): Support build exeutable.
	(build_binary): Renamed from ...
	(build_vers_lib): This.
	(build_vers_lib_no_pic): Updated.
	(build_vers_lib_pic): Likewise.
	Add vers27d1, vers27d2 and vers27d3 to test versioned
	definition for hidden symbol referenced by a DSO.

	* ld-elfvers/vers27d.dsym: New file.
	* ld-elfvers/vers27d.sym: Likewise.
	* ld-elfvers/vers27d.ver: Likewise.
	* ld-elfvers/vers27d1.c: Likewise.
	* ld-elfvers/vers27d2.c: Likewise.
	* ld-elfvers/vers27d3.c: Likewise.
@
text
@d940 2
@


1.26
log
@2003-05-06  H.J. Lu <hjl@@gnu.org>

	* ld-elfvers/vers.exp (objdump_versionstuff): Support comment
	in expected version file.

	* ld-elfvers/vers25b.c: Add a line of comment.
	* ld-elfvers/vers25b.dsym: Likwise.
	* ld-elfvers/vers25b.ver: Likwise.
	* ld-elfvers/vers26b.dsym: Likwise.
	* ld-elfvers/vers26b.ver: Likwise.
	* ld-elfvers/vers27b.dsym: Likwise.
	* ld-elfvers/vers27b.ver: Likwise.
	* ld-elfvers/vers27c.c: Likwise.
	* ld-elfvers/vers27c.dsym: Likwise.
	* ld-elfvers/vers27c.ver: Likwise.
@
text
@d500 1
a500 1
proc build_vers_lib { pic test source libname other mapfile verexp versymexp symexp } {
a510 1
    global shared
d567 4
d572 2
a573 1
  build_vers_lib "" $test $source $libname $other $mapfile $verexp $versymexp $symexp 
d578 2
a579 1
  build_vers_lib $picflag $test $source $libname $other $mapfile $verexp $versymexp $symexp 
d937 3
@


1.25
log
@2003-05-03  H.J. Lu <hjl@@gnu.org>

	* ld-elfvers/vers.exp: Add vers27a, vers27b, vers27c1 and
	vers27c2 to test versioned definition vs. hidden definition in
	different files.

	* ld-elfvers/vers27a.c: New file.
	* ld-elfvers/vers27a.dsym: Likewise.
	* ld-elfvers/vers27a.map: Likewise.
	* ld-elfvers/vers27a.ver: Likewise.
	* ld-elfvers/vers27b.c: Likewise.

	* ld-elfvers/vers27b.dsym: New empty file.
	* ld-elfvers/vers27b.ver: Likwise.
	* ld-elfvers/vers27c.c: Likwise.
	* ld-elfvers/vers27c.dsym: Likwise.
	* ld-elfvers/vers27c.ver: Likwise.
@
text
@d460 5
a464 1
	gets $f2 l2
@


1.24
log
@	* ld-elfvers/vers.exp (build_exec): Disable vers26b3 on x86-64-linux.
@
text
@d922 6
@


1.23
log
@bfd/

2003-04-28  H.J. Lu <hjl@@gnu.org>

	* elflink.h (elf_merge_symbol): Call elf_backend_copy_indirect_symbol
	to copy any information related to dynamic linking when we flip
	the indirection.

ld/testsuite/

2003-04-28  H.J. Lu <hjl@@gnu.org>

	* ld-elfvers/vers.exp (picflag): Set PIC flag for compiler.
	(build_vers_lib): Support PIC.
	(build_vers_lib_no_pic): New. Change all calls to build_vers_lib
	to build_vers_lib_no_pic.
	(build_vers_lib_pic): New.
	Add tests vers26a, vers26b1, vers26b2 and vers26b3 for versioned
	definition vs. normal definition in different files.

	* ld-elfvers/vers26a.c: New file.
	* ld-elfvers/vers26a.dsym: Likewise.
	* ld-elfvers/vers26a.map: Likewise.
	* ld-elfvers/vers26a.ver: Likewise.
	* ld-elfvers/vers26b.c: Likewise.

	* ld-elfvers/vers26b.dsym: New empty file.
	* ld-elfvers/vers26b.ver: Likewise.
@
text
@d2 1
a2 1
#   Copyright 1997, 1998, 1999, 2001 Free Software Foundation, Inc.
d916 6
a921 1
build_vers_lib_no_pic "vers26b3" vers26b.c vers26b3 "vers26a.so vers26b1.so vers26a.o" "" vers26b.ver vers26b.dsym ""
@


1.22
log
@2003-04-23  H.J. Lu <hjl@@gnu.org>

	* ld-elfvers/vers.exp (objdump_dynsymstuff): Support empty
	files.
	(objdump_versionstuff): Likewise.
	Add tests vers25a, vers25b1 and vers25b2 for versioned
	definition vs. normal definition in different files.

	* ld-elfvers/vers25a.c: New file.
	* ld-elfvers/vers25a.dsym: Likewise.
	* ld-elfvers/vers25a.map: Likewise.
	* ld-elfvers/vers25a.ver: Likewise.

	* ld-elfvers/vers25b.c: New empty file.
	* ld-elfvers/vers25b.dsym: Likewise.
	* ld-elfvers/vers25b.ver: Likewise.
@
text
@d70 23
d496 1
a496 1
proc build_vers_lib { test source libname other mapfile verexp versymexp symexp } {
d510 1
a510 1
    if ![ld_compile "$CC -S $CFLAGS" $srcdir/$subdir/$source $tmpdir/$libname.s]     {
d564 9
d759 1
a759 1
build_vers_lib "vers1" vers1.c vers1 "" vers1.map vers1.ver vers1.dsym vers1.sym
d770 1
a770 1
    build_vers_lib "vers2" vers2.c vers2 vers1.so vers2.map vers2.ver vers2.dsym ""
d809 1
a809 1
build_vers_lib "vers7a" vers7a.c vers7a "" vers7.map vers7a.ver vers7a.dsym vers7a.sym
d819 1
a819 1
build_vers_lib "vers8" vers1.c vers8 vers8.map "" vers8.ver vers1.dsym vers1.sym
d864 1
a864 1
build_vers_lib "vers16a" vers16a.c vers16a "" vers16.map vers16a.ver vers16a.dsym ""
d868 2
a869 2
build_vers_lib "vers17" vers17.c vers17 "" vers17.map vers17.ver vers17.dsym ""
build_vers_lib "vers18" vers18.c vers18 vers17.so vers18.map vers18.ver vers18.dsym vers18.sym
d872 1
a872 1
build_vers_lib "vers20a" vers20.c vers20a "" vers20.map vers20a.ver vers20.dsym ""
d874 1
a874 1
build_vers_lib "vers20" vers20.c vers20 "vers20a.so vers20b.so" vers20.map vers20.ver vers20.dsym ""
d877 1
a877 1
build_vers_lib "vers21" vers21.c vers21 "" vers21.map vers21.ver vers21.dsym vers21.sym
d880 3
a882 3
build_vers_lib "vers22a" vers22a.c vers22a "" vers22.map vers22a.ver vers22a.dsym vers22a.sym
build_vers_lib "vers22b" vers22b.c vers22b "" vers22.map vers22b.ver vers22b.dsym ""
build_vers_lib "vers22" vers22.c vers22 "vers22a.so vers22b.so" "" vers22.ver vers22.dsym ""
d885 3
a887 3
build_vers_lib "vers23a" vers23a.c vers23a "" vers23a.map vers23a.ver vers23a.dsym vers23a.sym
build_vers_lib "vers23b" vers23b.c vers23b "" vers23b.map vers23b.ver vers23b.dsym ""
build_vers_lib "vers23c" vers23b.c vers23c "vers23a.so" vers23b.map vers23c.ver vers23b.dsym ""
d910 7
a916 3
build_vers_lib "vers25a" vers25a.c vers25a "" vers25a.map vers25a.ver vers25a.dsym ""
build_vers_lib "vers25b1" vers25b.c vers25b1 "vers25a.o vers25a.so" "" vers25b.ver vers25b.dsym ""
build_vers_lib "vers25b2" vers25b.c vers25b2 "vers25a.so vers25a.o" "" vers25b.ver vers25b.dsym ""
@


1.22.2.1
log
@	Merge from mainline:
	2003-04-28  H.J. Lu <hjl@@gnu.org>
	* ld-elfvers/vers.exp (picflag): Set PIC flag for compiler.
	(build_vers_lib): Support PIC.
	(build_vers_lib_no_pic): New. Change all calls to build_vers_lib
	to build_vers_lib_no_pic.
	(build_vers_lib_pic): New.
	Add tests vers26a, vers26b1, vers26b2 and vers26b3 for versioned
	definition vs. normal definition in different files.

	* ld-elfvers/vers26a.c: New file.
	* ld-elfvers/vers26a.dsym: Likewise.
	* ld-elfvers/vers26a.map: Likewise.
	* ld-elfvers/vers26a.ver: Likewise.
	* ld-elfvers/vers26b.c: Likewise.

	* ld-elfvers/vers26b.dsym: New empty file.
	* ld-elfvers/vers26b.ver: Likewise.

	2003-04-27  H.J. Lu <hjl@@gnu.org>
	* ld-elfvsb/elfvsb.dat: Updated.
	* ld-elfvsb/elfvsb.exp: Likewise.
	* ld-elfvsb/main.c: Likewise.
	* ld-elfvsb/sh1.c: Likewise.
	* ld-elfvsb/sh2.c: Likewise.
@
text
@a69 23
if [istarget mips*-*-*] {
    set picflag ""
} else {
    # Unfortunately, the gcc argument is -fpic and the cc argument is
    # -KPIC.  We have to try both.
    set picflag "-fpic"
    send_log "$CC $picflag\n"
    verbose "$CC $picflag"
    catch "exec $CC $picflag" exec_output
    send_log "$exec_output\n"
    verbose "--" "$exec_output"
    if { [string match "*illegal option*" $exec_output] \
	 || [string match "*option ignored*" $exec_output] \
	 || [string match "*unrecognized option*" $exec_output] \
	 || [string match "*passed to ld*" $exec_output] } {
	if [istarget *-*-sunos4*] {
	    set picflag "-pic"
	} else {
	    set picflag "-KPIC"
	}
    }
}

d473 1
a473 1
proc build_vers_lib { pic test source libname other mapfile verexp versymexp symexp } {
d487 1
a487 1
    if ![ld_compile "$CC -S $pic $CFLAGS" $srcdir/$subdir/$source $tmpdir/$libname.s]     {
a540 9
proc build_vers_lib_no_pic { test source libname other mapfile verexp versymexp symexp } {
  build_vers_lib "" $test $source $libname $other $mapfile $verexp $versymexp $symexp 
}

proc build_vers_lib_pic { test source libname other mapfile verexp versymexp symexp } {
  global picflag
  build_vers_lib $picflag $test $source $libname $other $mapfile $verexp $versymexp $symexp 
}

d727 1
a727 1
build_vers_lib_no_pic "vers1" vers1.c vers1 "" vers1.map vers1.ver vers1.dsym vers1.sym
d738 1
a738 1
    build_vers_lib_no_pic "vers2" vers2.c vers2 vers1.so vers2.map vers2.ver vers2.dsym ""
d777 1
a777 1
build_vers_lib_no_pic "vers7a" vers7a.c vers7a "" vers7.map vers7a.ver vers7a.dsym vers7a.sym
d787 1
a787 1
build_vers_lib_no_pic "vers8" vers1.c vers8 vers8.map "" vers8.ver vers1.dsym vers1.sym
d832 1
a832 1
build_vers_lib_no_pic "vers16a" vers16a.c vers16a "" vers16.map vers16a.ver vers16a.dsym ""
d836 2
a837 2
build_vers_lib_no_pic "vers17" vers17.c vers17 "" vers17.map vers17.ver vers17.dsym ""
build_vers_lib_no_pic "vers18" vers18.c vers18 vers17.so vers18.map vers18.ver vers18.dsym vers18.sym
d840 1
a840 1
build_vers_lib_no_pic "vers20a" vers20.c vers20a "" vers20.map vers20a.ver vers20.dsym ""
d842 1
a842 1
build_vers_lib_no_pic "vers20" vers20.c vers20 "vers20a.so vers20b.so" vers20.map vers20.ver vers20.dsym ""
d845 1
a845 1
build_vers_lib_no_pic "vers21" vers21.c vers21 "" vers21.map vers21.ver vers21.dsym vers21.sym
d848 3
a850 3
build_vers_lib_no_pic "vers22a" vers22a.c vers22a "" vers22.map vers22a.ver vers22a.dsym vers22a.sym
build_vers_lib_no_pic "vers22b" vers22b.c vers22b "" vers22.map vers22b.ver vers22b.dsym ""
build_vers_lib_no_pic "vers22" vers22.c vers22 "vers22a.so vers22b.so" "" vers22.ver vers22.dsym ""
d853 3
a855 3
build_vers_lib_no_pic "vers23a" vers23a.c vers23a "" vers23a.map vers23a.ver vers23a.dsym vers23a.sym
build_vers_lib_no_pic "vers23b" vers23b.c vers23b "" vers23b.map vers23b.ver vers23b.dsym ""
build_vers_lib_no_pic "vers23c" vers23b.c vers23c "vers23a.so" vers23b.map vers23c.ver vers23b.dsym ""
d878 3
a880 7
build_vers_lib_no_pic "vers25a" vers25a.c vers25a "" vers25a.map vers25a.ver vers25a.dsym ""
build_vers_lib_no_pic "vers25b1" vers25b.c vers25b1 "vers25a.o vers25a.so" "" vers25b.ver vers25b.dsym ""
build_vers_lib_no_pic "vers25b2" vers25b.c vers25b2 "vers25a.so vers25a.o" "" vers25b.ver vers25b.dsym ""
build_vers_lib_pic "vers26a" vers26a.c vers26a "" vers26a.map vers26a.ver vers26a.dsym ""
build_vers_lib_pic "vers26b1" vers26b.c vers26b1 "" "" vers26b.ver vers26b.dsym ""
build_vers_lib_pic "vers26b2" vers26b.c vers26b2 "vers26a.so vers26b1.so vers26a.o" "" vers26b.ver vers26b.dsym ""
build_vers_lib_no_pic "vers26b3" vers26b.c vers26b3 "vers26a.so vers26b1.so vers26a.o" "" vers26b.ver vers26b.dsym ""
@


1.22.2.2
log
@	Merge from mainline:
	2003-05-04  H.J. Lu <hjl@@gnu.org>
	* ld-elfvers/vers18.dsym: Updated for weak definiton change.
	* ld-elfvers/vers18.ver: Likewise.
	* ld-elfvers/vers19.ver: Likewise.
	* ld-elfweak/dsowdata.dsym: Likewise.
	* ld-elfweak/elfweak.exp: Likewise.
	* ld-elfweak/weakdata.dsym: Likewise.

	* ld-elfweak/elfweak.exp: Remove xfail.

	2003-05-03  H.J. Lu <hjl@@gnu.org>
	* ld-elfvers/vers.exp: Add vers27a, vers27b, vers27c1 and
	vers27c2 to test versioned definition vs. hidden definition in
	different files.

	* ld-elfvers/vers27a.c: New file.
	* ld-elfvers/vers27a.dsym: Likewise.
	* ld-elfvers/vers27a.map: Likewise.
	* ld-elfvers/vers27a.ver: Likewise.
	* ld-elfvers/vers27b.c: Likewise.

	* ld-elfvers/vers27b.dsym: New empty file.
	* ld-elfvers/vers27b.ver: Likwise.
	* ld-elfvers/vers27c.c: Likwise.
	* ld-elfvers/vers27c.dsym: Likwise.
	* ld-elfvers/vers27c.ver: Likwise.

	2003-05-02  Andreas Jaeger  <aj@@suse.de>
	* ld-elfvers/vers.exp (build_exec): Disable vers26b3 on x86-64-linux.
@
text
@d2 1
a2 1
#   Copyright 1997, 1998, 1999, 2001, 2003 Free Software Foundation, Inc.
d916 1
a916 12
if [istarget x86_64-*-linux*] {
    # x86_64 doesn't like non-pic shared libraries
    xfail "vers26b3"
} else {
    build_vers_lib_no_pic "vers26b3" vers26b.c vers26b3 "vers26a.so vers26b1.so vers26a.o" "" vers26b.ver vers26b.dsym ""
}

# Test versioned definition vs. hidden definition in different files.
build_vers_lib_no_pic "vers27a" vers27a.c vers27a "" vers27a.map vers27a.ver vers27a.dsym ""
build_vers_lib_no_pic "vers27b" vers27b.c vers27b "" "" vers27b.ver vers27b.dsym ""
build_vers_lib_no_pic "vers27c1" vers27c.c vers27c1 "vers27b.o vers27a.so" "" vers27c.ver vers27c.dsym ""
build_vers_lib_no_pic "vers27c2" vers27c.c vers27c2 "vers27a.so vers27b.o" "" vers27c.ver vers27c.dsym ""
@


1.22.2.3
log
@	Merge from mainline:

	2003-05-13  H.J. Lu <hongjiu.lu@@intel.com>
	* ld-elfweak/elfweak.exp: Fix typo.

	2003-05-13  Kaz Kojima  <kkojima@@rr.iij4u.or.jp>
	* ld-elfvers/vers.exp: Run on sh[34]*-*-linux*.
	* ld-elfvsb/elfvsb.exp: Likewise.
	* ld-elfweak/elfweak.exp: Likewise.

	2003-05-09  Martin Schwidefsky  <schwidefsky@@de.ibm.com>
	* ld-elfvsb/elf-offset.ld: Add .rel.eh_frame and .rela.eh_frame
	to linker script.
	* ld-elfvsb/elfvsb.exp (visibility_run): Add setup_xfails for s390x.
	* ld-selective/selective.exp: Disable for s390 and s390x.
	* ld-shared/elf-offset.ld: Add .rel.eh_frame and .rela.eh_frame
	to linker script.
	* ld-shared/shared.exp (shared_test): Add setup_xfails for s390x.
	* ld-undefined/undefined.exp (checkund): Remove setup_xfail for s390x.

	2003-05-08  H.J. Lu <hongjiu.lu@@intel.com>
	* ld-elfvers/vers.exp: Add vers27d4 and vers27d5 to test
	versioned reference for hidden symbol.

	* ld-elfvers/vers27d4.dsym: New file.
	* ld-elfvers/vers27d4.ver: Likewise.

	2003-05-07  H.J. Lu <hongjiu.lu@@intel.com>
	* ld-elfvers/vers27d3.c (__start): New.
	(start): New.

	2003-05-07  H.J. Lu <hongjiu.lu@@intel.com>
	* ld-elfvers/vers.exp (build_binary): Support build exeutable.
	(build_binary): Renamed from ...
	(build_vers_lib): This.
	(build_vers_lib_no_pic): Updated.
	(build_vers_lib_pic): Likewise.
	Add vers27d1, vers27d2 and vers27d3 to test versioned
	definition for hidden symbol referenced by a DSO.

	* ld-elfvers/vers27d.dsym: New file.
	* ld-elfvers/vers27d.sym: Likewise.
	* ld-elfvers/vers27d.ver: Likewise.
	* ld-elfvers/vers27d1.c: Likewise.
	* ld-elfvers/vers27d2.c: Likewise.
	* ld-elfvers/vers27d3.c: Likewise.

	2003-05-07  Andreas Schwab  <schwab@@suse.de>
	* ld-elfvsb/elfvsb.exp: Run dump tests even when cross
	compiling.

	2003-05-06  Alexandre Oliva  <aoliva@@redhat.com>
	* config/default.exp (gcc_gas_flags): Force ABI to n32 on
	mips64-linux.
	* ld-elf/merge.d: Xfail on mips64*-linux-gnu*.
	* ld-mips-elf/mips-elf-flags.exp (ldemul): Set to o32-compatible
	on mips-sgi-irix6*, mips64-linux-gnu and mips64el-linux-gnu.
	(good_combination, bad_combination): Use it.
	Add -32 or -mabi=o64 wherever the ABI was formerly implied.

	2003-05-06  H.J. Lu <hjl@@gnu.org>
	* ld-elfvers/vers.exp (objdump_versionstuff): Support comment
	in expected version file.

	* ld-elfvers/vers25b.c: Add a line of comment.
	* ld-elfvers/vers25b.dsym: Likwise.
	* ld-elfvers/vers25b.ver: Likwise.
	* ld-elfvers/vers26b.dsym: Likwise.
	* ld-elfvers/vers26b.ver: Likwise.
	* ld-elfvers/vers27b.dsym: Likwise.
	* ld-elfvers/vers27b.ver: Likwise.
	* ld-elfvers/vers27c.c: Likwise.
	* ld-elfvers/vers27c.dsym: Likwise.
	* ld-elfvers/vers27c.ver: Likwise.
@
text
@a47 1
     && ![istarget sh\[34\]*-*-linux*] \
d460 1
a460 5
	while { [gets $f2 l2] != -1 } {
	    if { ![regexp "^#.*$" $l2] } then {
		break
	    }
	} 
d496 1
a496 1
proc build_binary { shared pic test source libname other mapfile verexp versymexp symexp } {
d507 1
a563 4
proc build_executable { test source libname other mapfile verexp versymexp symexp } {
  build_binary "" "" $test $source $libname $other $mapfile $verexp $versymexp $symexp 
}

d565 1
a565 2
  global shared
  build_binary $shared "" $test $source $libname $other $mapfile $verexp $versymexp $symexp 
d570 1
a570 2
  global shared
  build_binary $shared $picflag $test $source $libname $other $mapfile $verexp $versymexp $symexp 
a927 5
build_vers_lib_pic "vers27d1" vers27d1.c vers27d1 "" vers27a.map vers27d.ver vers27d.dsym vers27d.sym
build_vers_lib_pic "vers27d2" vers27d2.c vers27d2 "" "" vers27b.ver vers27b.dsym ""
build_executable "vers27d3" vers27d3.c vers27d3 "vers27b.o vers27d2.so vers27d1.so" "" vers27b.ver vers27b.dsym ""
build_vers_lib_pic "vers27d4" vers27d2.c vers27d4 "vers27a.so" "" vers27d4.ver vers27d4.dsym ""
build_executable "vers27d5" vers27d3.c vers27d5 "vers27d4.so vers27b.o vers27a.so" "" vers27b.ver vers27b.dsym ""
@


1.21
log
@bfd/
	* elflink.h (elf_link_add_object_symbols): Handle .symver x, x@@FOO.
ld/testsuite/
	* ld-shared/shared.exp: Run on s390*-*-linux* and x86_64-*-linux* too.
	xfail tests linking non-pic code into shared libs on x86_64-*-linux*.
	* ld-elfvsb/elfvsb.exp: Likewise.
	* ld-elfvers/vers.exp: Likewise.  Add vers24a, vers24b and vers24c
	tests.
	* ld-elfvers/vers3.ver: Allow VERS_2.0 to come before GLIBC_*
	version.
	* ld-elfvers/vers19.ver: Likewise.
	* ld-elfvers/vers24a.c: New test.
	* ld-elfvers/vers24b.c: New test.
	* ld-elfvers/vers24c.c: New test.
	* ld-elfvers/vers24.map: New test.
	* ld-elfvers/vers24.rd: New test.
	* lib/ld-lib.exp (run_ld_link_tests): Add optional 7th argument
	cflags.  If source files have .c extension, compile them first.
@
text
@d354 5
d454 5
d876 5
@


1.20
log
@2002-08-13  H.J. Lu <hjl@@gnu.org>

	* ld-elfvers/vers.exp: Add vers23c and vers23d.

	* ld-elfvers/vers23c.ver: New.
	* ld-elfvers/vers23d.dsym: New.
@
text
@d46 3
a48 1
     && ![istarget alpha*-*-linux*] } {
d724 6
a729 1
build_vers_lib "vers2" vers2.c vers2 vers1.so vers2.map vers2.ver vers2.dsym ""
d848 18
@


1.19
log
@2002-08-12  H.J. Lu <hjl@@gnu.org>

	* ld-elfvers/vers.exp: Add vers23.

	* ld-elfvers/vers23.c: New.
	* ld-elfvers/vers23.dsym: New.
	* ld-elfvers/vers23.ver: New.
	* ld-elfvers/vers23a.c: New.
	* ld-elfvers/vers23a.dsym: New.
	* ld-elfvers/vers23a.map: New.
	* ld-elfvers/vers23a.sym: New.
	* ld-elfvers/vers23a.ver: New.
	* ld-elfvers/vers23b.c: New.
	* ld-elfvers/vers23b.dsym: New.
	* ld-elfvers/vers23b.map: New.
	* ld-elfvers/vers23b.ver: New.
@
text
@d838 2
@


1.18
log
@2002-08-08  H.J. Lu <hjl@@gnu.org>

	* ld-elfvers/vers.exp: Add vers22.

	* ld-elfvers/vers22.c: New.
	* ld-elfvers/vers22.dsym: New.
	* ld-elfvers/vers22.map: New.
	* ld-elfvers/vers22.ver: New.
	* ld-elfvers/vers22a.c: New.
	* ld-elfvers/vers22a.dsym: New.
	* ld-elfvers/vers22a.sym: New.
	* ld-elfvers/vers22a.ver: New.
	* ld-elfvers/vers22b.c: New.
	* ld-elfvers/vers22b.dsym: New.
	* ld-elfvers/vers22b.ver: New.
@
text
@d834 5
@


1.17
log
@Check symbols with undefine version.
@
text
@d829 5
@


1.16
log
@	* ld-discard/discard.exp, ld-scripts/phdrs.exp, ld-scripts/phdrs2.exp,
	ld-selective/sel-dump.exp: Test hppa*64*-*-hpux* target.
	* ld-elfvers/vers.exp, ld-elfvsb/elfvsb.exp, ld-elfweak/elfweak.exp,
	ld-linkonce/linkonce.exp, ld-shared/shared.exp,
	ld-undefined/weak-undef.exp:  Test hppa*64*-*-hpux* and hppa*-*-linux*
	targets.
	* ld-discard/exit.s, ld-discard/extern.s, ld-discard/start.s,
	ld-discard/static.s: Add whitespace before assembler directives.
@
text
@d65 1
a65 1
set shared --shared
d646 1
a646 1
    set shared --shared
@


1.15
log
@2002-07-15  H.J. Lu <hjl@@gnu.org>

	* ld-elfvers/vers.exp: Add vers21.

	* ld-elfvers/vers21.c: New.
	* ld-elfvers/vers21.dsym: New.
	* ld-elfvers/vers21.map: New.
	* ld-elfvers/vers21.sym: New.
	* ld-elfvers/vers21.ver: New.
@
text
@d28 3
a30 1
if { ![istarget i?86-*-sysv4*] \
@


1.14
log
@2002-02-17  Daniel Jacobowitz  <drow@@mvista.com>

        * vers.exp: Do not call diff -q.
@
text
@d824 3
@


1.14.2.1
log
@2002-09-23  Daniel Jacobowitz  <drow@@mvista.com>

	Merge from mainline:
	2002-09-19  Jakub Jelinek  <jakub@@redhat.com>
	* ld-i386/i386.exp: New.
	* ld-i386/tlsbin.dd: New test.
	* ld-i386/tlsbinpic.s: New test.
	* ld-i386/tlsbin.rd: New test.
	* ld-i386/tlsbin.s: New test.
	* ld-i386/tlsbin.sd: New test.
	* ld-i386/tlsbin.td: New test.
	* ld-i386/tlslib.s: New test.
	* ld-i386/tlsnopic1.s: New test.
	* ld-i386/tlsnopic2.s: New test.
	* ld-i386/tlsnopic.dd: New test.
	* ld-i386/tlsnopic.rd: New test.
	* ld-i386/tlsnopic.sd: New test.
	* ld-i386/tlspic1.s: New test.
	* ld-i386/tlspic2.s: New test.
	* ld-i386/tlspic.dd: New test.
	* ld-i386/tlspic.rd: New test.
	* ld-i386/tlspic.sd: New test.
	* ld-i386/tlspic.td: New test.

	2002-08-13  H.J. Lu <hjl@@gnu.org>
	* ld-elfvers/vers.exp: Add vers23c and vers23d.

	* ld-elfvers/vers23c.ver: New.
	* ld-elfvers/vers23d.dsym: New.

	2002-08-12  H.J. Lu <hjl@@gnu.org>
	* ld-elfvers/vers.exp: Add vers23.

	* ld-elfvers/vers23.c: New.
	* ld-elfvers/vers23.dsym: New.
	* ld-elfvers/vers23.ver: New.
	* ld-elfvers/vers23a.c: New.
	* ld-elfvers/vers23a.dsym: New.
	* ld-elfvers/vers23a.map: New.
	* ld-elfvers/vers23a.sym: New.
	* ld-elfvers/vers23a.ver: New.
	* ld-elfvers/vers23b.c: New.
	* ld-elfvers/vers23b.dsym: New.
	* ld-elfvers/vers23b.map: New.
	* ld-elfvers/vers23b.ver: New.

	2002-08-10  Alan Modra  <amodra@@bigpond.net.au>
	* ld-discard/discard.exp: Don't run on linuxaout or linuxoldld.
	* ld-linkonce/linkonce.exp: Likewise.
	* ld-selective/sel-dump.exp: Likewise.
	* ld-selective/selective.exp: Don't run on aout or bout.

	2002-08-08  H.J. Lu <hjl@@gnu.org>
	* ld-elfvers/vers.exp: Add vers22.

	* ld-elfvers/vers22.c: New.
	* ld-elfvers/vers22.dsym: New.
	* ld-elfvers/vers22.map: New.
	* ld-elfvers/vers22.ver: New.
	* ld-elfvers/vers22a.c: New.
	* ld-elfvers/vers22a.dsym: New.
	* ld-elfvers/vers22a.sym: New.
	* ld-elfvers/vers22a.ver: New.
	* ld-elfvers/vers22b.c: New.
	* ld-elfvers/vers22b.dsym: New.
	* ld-elfvers/vers22b.ver: New.

	2002-08-08  Stephen Clarke <stephen.clarke@@superh.com>
	* ld-sh/sh64/abi32.xd: Adjust whitespace in elf32 section
	listing.
	* ld-sh/sh64/cmpct1.xd, ld-sh/sh64/mix1.xd, ld-sh/sh64/mix2.xd,
	ld-sh/sh64/rel32.xd, ld-sh/sh64/shdl32.xd: Likewise.

	2002-08-07  H.J. Lu <hjl@@gnu.org>
	* ld-elfvers/vers.exp: Add --no-undefined-version.

	* ld-elfvers/vers1.map: Remove the unused foo1 and foo2.
	* ld-elfvers/vers8.map: Likewise.
	* ld-elfvers/vers18.map: Likewise.

	2002-08-07  Stephen Clarke <stephen.clarke@@superh.com>
	* ld-sh/sh64/abi32.xd: Adjust as type of linker-script-symbols
	is no longer set to object.
	* ld-sh/sh64/abi64.xd, ld-sh/sh64/cmpct1.xd, ld-sh/sh64/crange1.rd,
	ld-sh/sh64/crange2.rd, ld-sh/sh64/crange3-cmpct.rd,
	ld-sh/sh64/crange3-media.rd, ld-sh/sh64/crange3.rd,
	ld-sh/sh64/mix1.xd, ld-sh/sh64/mix2.xd, ld-sh/sh64/shdl32.xd,
	ld-sh/sh64/shdl64.xd: Likewise.

	2002-08-06  H.J. Lu <hjl@@gnu.org>
	* ld-elfvers/vers.exp: Add --no-undefined-version.

	* ld-elfvers/vers1.map: Remove the unused foo1 and foo2.
	* ld-elfvers/vers8.map: Likewise.
	* ld-elfvers/vers18.map: Likewise.

	2002-07-28  John David Anglin  <dave@@hiauly1.hia.nrc.ca>
	* ld-discard/discard.exp, ld-scripts/phdrs.exp, ld-scripts/phdrs2.exp,
	ld-selective/sel-dump.exp: Test hppa*64*-*-hpux* target.
	* ld-elfvers/vers.exp, ld-elfvsb/elfvsb.exp, ld-elfweak/elfweak.exp,
	ld-linkonce/linkonce.exp, ld-shared/shared.exp,
	ld-undefined/weak-undef.exp:  Test hppa*64*-*-hpux* and hppa*-*-linux*
	targets.
	* ld-discard/exit.s, ld-discard/extern.s, ld-discard/start.s,
	ld-discard/static.s: Add whitespace before assembler directives.

	2002-07-15  H.J. Lu <hjl@@gnu.org>
	* ld-elfvers/vers.exp: Add vers21.

	* ld-elfvers/vers21.c: New.
	* ld-elfvers/vers21.dsym: New.
	* ld-elfvers/vers21.map: New.
	* ld-elfvers/vers21.sym: New.
	* ld-elfvers/vers21.ver: New.
@
text
@d28 1
a28 3
if { ![istarget hppa*64*-*-hpux*] \
     && ![istarget hppa*-*-linux*] \
     && ![istarget i?86-*-sysv4*] \
d63 1
a63 1
set shared "--shared --no-undefined-version"
d644 1
a644 1
    set shared "--shared --no-undefined-version"
a823 15

# Test .symver override.
build_vers_lib "vers21" vers21.c vers21 "" vers21.map vers21.ver vers21.dsym vers21.sym

# Test moving default definition from one DSO to another.
build_vers_lib "vers22a" vers22a.c vers22a "" vers22.map vers22a.ver vers22a.dsym vers22a.sym
build_vers_lib "vers22b" vers22b.c vers22b "" vers22.map vers22b.ver vers22b.dsym ""
build_vers_lib "vers22" vers22.c vers22 "vers22a.so vers22b.so" "" vers22.ver vers22.dsym ""

# Test versioned definitions in different files.
build_vers_lib "vers23a" vers23a.c vers23a "" vers23a.map vers23a.ver vers23a.dsym vers23a.sym
build_vers_lib "vers23b" vers23b.c vers23b "" vers23b.map vers23b.ver vers23b.dsym ""
build_vers_lib "vers23c" vers23b.c vers23c "vers23a.so" vers23b.map vers23c.ver vers23b.dsym ""
build_exec "vers23d" vers23.c vers23d "tmpdir/vers23a.so tmpdir/vers23c.so" "" vers23.ver vers23d.dsym ""
build_exec "vers23" vers23.c vers23 "tmpdir/vers23a.so tmpdir/vers23b.o tmpdir/vers23b.so" "" vers23.ver vers23.dsym ""
@


1.13
log
@2001-11-30  H.J. Lu <hjl@@gnu.org>

	* ld-elfvers/vers.exp (build_vers_lib): Preserve the library
	order.
@
text
@d87 1
a87 1
	catch "exec $diff -q $tmpdir/nm.out $srcdir/$subdir/$expect" exec_output
@


1.13.2.1
log
@2002-02-17  Daniel Jacobowitz  <drow@@mvista.com>

        * vers.exp: Do not call diff -q.
@
text
@d87 1
a87 1
	catch "exec $diff $tmpdir/nm.out $srcdir/$subdir/$expect" exec_output
@


1.12
log
@2001-11-29  H.J. Lu <hjl@@gnu.org>

	* ld-elfvers/vers.exp (build_vers_lib): Support linking against
	more than one libraries.
	Add "vers20a" and "vers20" tests for common symbols.

	* ld-elfvers/vers20.c: New.
	* ld-elfvers/vers20.dsym: New.
	* ld-elfvers/vers20.map: New.
	* ld-elfvers/vers20.ver: New.
	* ld-elfvers/vers20a.ver: New.
@
text
@d486 1
a486 1
	    set other_lib "$tmpdir/$o $other_lib"
@


1.11
log
@2001-06-06  H.J. Lu  <hjl@@gnu.org>

	* ld-bootstrap/bootstrap.exp: Rebuild tmpdir/ld2 with tmpdir/ld3
	on Linux/mips.

	* ld-elfvers/vers.exp: Also run on istarget Linux/mips.
	* ld-elfvsb/elfvsb.exp: Likewise.
	* ld-shared/shared.exp: Likewise.

	* ld-selective/selective.exp: Mark selective2, selective3,
	selective4 and selective5 xfail on Linux/mips.

	* ld-shared/main.c: Skip invalid -Bsymbolic tests on Linux/mips.

	* symbolic.dat: Remove invalid -Bsymbolic tests on Linux/mips.

	* ld-srec/srec.exp: Add Linux/mips to xfail.
@
text
@d483 5
a487 4
    if [string match "" $other] then {
	set other_lib ""
    } else {
	set other_lib $tmpdir/$other
d820 4
@


1.10
log
@s/linuxaout/linux*aout/, s/linuxoldld/linux*oldld/
@
text
@d43 1
@


1.9
log
@2001-05-18  H.J. Lu  <hjl@@gnu.org>

	* ld-elfvers/vers.exp: Revert the last change.

	* ld-elfvers/vers2.ver: Put back "tmpdir/" the version
	references.
	* ld-elfvers/vers3.ver: Likewise.
	* ld-elfvers/vers6.ver: Likewise.
	* ld-elfvers/vers18.ver: Likewise.
@
text
@d47 3
a49 3
if { [istarget i?86-*-linuxaout*] \
     || [istarget i?86-*-linuxoldld*] \
     || [istarget m68k-*-linuxaout*] } {
@


1.8
log
@2001-05-17  H.J. Lu  <hjl@@gnu.org>

	* ld-elfvers/vers.exp: Pass "-rpath .:$tmpdir" to "vers19".

	* ld-elfvers/vers1.ver: Remove "tmpdir/" from the version
	definition.
	* ld-elfvers/vers2.ver: Likewise.
	* ld-elfvers/vers3.ver: Likewise.
	* ld-elfvers/vers4a.ver: Likewise.
	* ld-elfvers/vers6.ver: Likewise.
	* ld-elfvers/vers7a.ver: Likewise.
	* ld-elfvers/vers8.ver: Likewise.
	* ld-elfvers/vers9.ver: Likewise.
	* ld-elfvers/vers15.ver: Likewise.
	* ld-elfvers/vers16a.ver: Likewise.
	* ld-elfvers/vers17.ver: Likewise.
	* ld-elfvers/vers18.ver: Likewise.
@
text
@d817 1
a817 1
build_exec "vers19" vers19.c vers19 "-rpath .:$tmpdir" vers18.so vers19.ver vers19.dsym ""
@


1.7
log
@Fixtypos in ChangeLogs, fix copyright dates in files
@
text
@d817 1
a817 1
build_exec "vers19" vers19.c vers19 "-rpath ." vers18.so vers19.ver vers19.dsym ""
@


1.6
log
@2001-02-14  H.J. Lu  <hjl@@gnu.org>

	* ld-bootstrap/bootstrap.exp: Rebuild tmpdir/ld2 with tmpdir/ld3
	for -static on ia64.

	* ld-checks/checks.exp: Don't run on ia64-*-elf* nor
	ia64-*-linux*.

	* ld-elfvers/vers.exp: Also run ia64-*-elf* and ia64-*-linux*.

	* ld-elfvsb/elfvsb.exp: Use i?86-*-*. Also run on ia64-*-linux*.
	Set up expected failures for ia64-*-linux*.
	* ld-shared/shared.exp: Likewise.
@
text
@d2 1
a2 1
#   Copyright (C) 1997, 1998, 1999, 2001 Free Software Foundation
@


1.5
log
@2001-01-01  Philip Blundell  <philb@@gnu.org>

	* ld-elfvers/vers.exp: Run test on Linux/ARM.
	* ld-elfvsb/elfvsb.exp: Likewise.
	* ld-shared/shared.exp: Likewise.
@
text
@d32 2
@


1.5.2.1
log
@Update copyright notices.
@
text
@d2 1
a2 1
#   Copyright 1997, 1998, 1999, 2001 Free Software Foundation, Inc.
@


1.5.2.2
log
@Merge from mainline.
@
text
@a31 2
     && ![istarget ia64-*-elf*] \
     && ![istarget ia64-*-linux*] \
a40 1
     && ![istarget mips*-*-linux*] \
d45 3
a47 3
if { [istarget i?86-*-linux*aout*] \
     || [istarget i?86-*-linux*oldld*] \
     || [istarget m68k-*-linux*aout*] } {
@


1.4
log
@1999-08-09  Jakub Jelinek  <jj@@ultra.linux.cz>

	* ld-elfvers/vers.exp: Run tests on sparc*-*-linux*.
	* ld-shared/shared.exp: Likewise.
@
text
@d2 1
a2 1
#   Copyright (C) 1997, 1998, 1999 Free Software Foundation
d40 1
@


1.3
log
@	* ld-elfvers/vers.exp: Use -rpath in new vers19 test.
@
text
@d38 2
a39 1
     && ![istarget sparc*-*-solaris2*]
@


1.2
log
@	* ld-elfvers/vers.exp: Add new tests vers17 to vers19.
	* ld/elfvers/{vers17.*, vers18.*, vers19.*}: New files.
@
text
@d2 1
a2 1
#   Copyright (C) 1997, 1998 Free Software Foundation
d813 1
a813 1
build_exec "vers19" vers19.c vers19 "" vers18.so vers19.ver vers19.dsym ""
@


1.1
log
@Initial revision
@
text
@d809 5
@


1.1.1.1
log
@19990502 sourceware import
@
text
@@

