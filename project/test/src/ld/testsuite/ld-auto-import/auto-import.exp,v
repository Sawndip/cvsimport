head	1.7;
access;
symbols
	binutils-2_24-branch:1.7.0.12
	binutils-2_24-branchpoint:1.7
	binutils-2_21_1:1.7
	binutils-2_23_2:1.7
	binutils-2_23_1:1.7
	binutils-2_23:1.7
	binutils-2_23-branch:1.7.0.10
	binutils-2_23-branchpoint:1.7
	binutils-2_22_branch:1.7.0.8
	binutils-2_22:1.7
	binutils-2_22-branch:1.7.0.6
	binutils-2_22-branchpoint:1.7
	binutils-2_21:1.7
	binutils-2_21-branch:1.7.0.4
	binutils-2_21-branchpoint:1.7
	binutils-2_20_1:1.7
	binutils-2_20:1.7
	binutils-arc-20081103-branch:1.5.0.6
	binutils-arc-20081103-branchpoint:1.5
	binutils-2_20-branch:1.7.0.2
	binutils-2_20-branchpoint:1.7
	dje-cgen-play1-branch:1.6.0.2
	dje-cgen-play1-branchpoint:1.6
	arc-20081103-branch:1.5.0.4
	arc-20081103-branchpoint:1.5
	binutils-2_19_1:1.5
	binutils-2_19:1.5
	binutils-2_19-branch:1.5.0.2
	binutils-2_19-branchpoint:1.5
	binutils-2_18:1.3
	binutils-2_18-branch:1.3.0.2
	binutils-2_18-branchpoint:1.3
	binutils-csl-coldfire-4_1-32:1.2
	binutils-csl-sourcerygxx-4_1-32:1.2
	binutils-csl-innovasic-fido-3_4_4-33:1.2
	binutils-csl-sourcerygxx-3_4_4-32:1.1
	binutils-csl-coldfire-4_1-30:1.2
	binutils-csl-sourcerygxx-4_1-30:1.2
	binutils-csl-coldfire-4_1-28:1.2
	binutils-csl-sourcerygxx-4_1-29:1.2
	binutils-csl-sourcerygxx-4_1-28:1.2
	binutils-csl-arm-2006q3-27:1.2
	binutils-csl-sourcerygxx-4_1-27:1.2
	binutils-csl-arm-2006q3-26:1.2
	binutils-csl-sourcerygxx-4_1-26:1.2
	binutils-csl-sourcerygxx-4_1-25:1.2
	binutils-csl-sourcerygxx-4_1-24:1.2
	binutils-csl-sourcerygxx-4_1-23:1.2
	binutils-csl-sourcerygxx-4_1-21:1.2
	binutils-csl-arm-2006q3-21:1.2
	binutils-csl-sourcerygxx-4_1-22:1.2
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.2
	binutils-csl-sourcerygxx-4_1-20:1.2
	binutils-csl-arm-2006q3-19:1.2
	binutils-csl-sourcerygxx-4_1-19:1.2
	binutils-csl-sourcerygxx-4_1-18:1.2
	binutils-csl-renesas-4_1-9:1.2
	binutils-csl-sourcerygxx-3_4_4-25:1.1
	binutils-csl-renesas-4_1-8:1.2
	binutils-csl-renesas-4_1-7:1.2
	binutils-csl-renesas-4_1-6:1.2
	binutils-csl-sourcerygxx-4_1-17:1.2
	binutils-csl-sourcerygxx-4_1-14:1.2
	binutils-csl-sourcerygxx-4_1-15:1.2
	binutils-csl-sourcerygxx-4_1-13:1.2
	binutils-2_17:1.2
	binutils-csl-sourcerygxx-4_1-12:1.2
	binutils-csl-sourcerygxx-3_4_4-21:1.2
	binutils-csl-wrs-linux-3_4_4-24:1.1
	binutils-csl-wrs-linux-3_4_4-23:1.1
	binutils-csl-sourcerygxx-4_1-9:1.2
	binutils-csl-sourcerygxx-4_1-8:1.2
	binutils-csl-sourcerygxx-4_1-7:1.2
	binutils-csl-arm-2006q1-6:1.2
	binutils-csl-sourcerygxx-4_1-6:1.2
	binutils-csl-wrs-linux-3_4_4-22:1.1
	binutils-csl-coldfire-4_1-11:1.2
	binutils-csl-sourcerygxx-3_4_4-19:1.2
	binutils-csl-coldfire-4_1-10:1.2
	binutils-csl-sourcerygxx-4_1-5:1.2
	binutils-csl-sourcerygxx-4_1-4:1.2
	binutils-csl-wrs-linux-3_4_4-21:1.1
	binutils-csl-morpho-4_1-4:1.2
	binutils-csl-sourcerygxx-3_4_4-17:1.2
	binutils-csl-wrs-linux-3_4_4-20:1.1
	binutils-2_17-branch:1.2.0.4
	binutils-2_17-branchpoint:1.2
	binutils-csl-2_17-branch:1.2.0.2
	binutils-csl-2_17-branchpoint:1.2
	binutils-csl-gxxpro-3_4-branch:1.1.0.14
	binutils-csl-gxxpro-3_4-branchpoint:1.1
	binutils-2_16_1:1.1
	binutils-csl-arm-2005q1b:1.1
	binutils-2_16:1.1
	binutils-csl-arm-2005q1a:1.1
	binutils-csl-arm-2005q1-branch:1.1.0.12
	binutils-csl-arm-2005q1-branchpoint:1.1
	binutils-2_16-branch:1.1.0.10
	binutils-2_16-branchpoint:1.1
	csl-arm-2004-q3d:1.1
	csl-arm-2004-q3:1.1
	binutils-2_15:1.1
	binutils-2_15-branchpoint:1.1
	csl-arm-2004-q1a:1.1
	csl-arm-2004-q1:1.1
	binutils-2_15-branch:1.1.0.8
	cagney_bfdfile-20040213-branch:1.1.0.6
	cagney_bfdfile-20040213-branchpoint:1.1
	cagney_bigcore-20040122-branch:1.1.0.4
	cagney_bigcore-20040122-branchpoint:1.1
	csl-arm-2003-q4:1.1
	binutils-2_14:1.1
	binutils-2_14-branch:1.1.0.2
	binutils-2_14-branchpoint:1.1
	binutils_latest_snapshot:1.7;
locks; strict;
comment	@# @;


1.7
date	2009.09.02.07.25.38;	author amodra;	state Exp;
branches;
next	1.6;

1.6
date	2009.03.15.14.17.28;	author davek;	state Exp;
branches;
next	1.5;

1.5
date	2008.02.20.17.51.18;	author nickc;	state Exp;
branches;
next	1.4;

1.4
date	2007.10.02.12.47.08;	author nickc;	state Exp;
branches;
next	1.3;

1.3
date	2007.07.06.14.09.42;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	2005.05.12.07.32.04;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	2002.12.18.16.05.10;	author nickc;	state Exp;
branches;
next	;


desc
@@


1.7
log
@update copyright dates
@
text
@# Expect script for ld-auto-import tests
#   Copyright 2002, 2005, 2007, 2008, 2009
#   Free Software Foundation, Inc.
#
# This file is part of the GNU Binutils.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
# MA 02110-1301, USA.
#
# Written by Ralf.Habacker@@freenet.de
# Based on ls-shared/shared.exp by Ian Lance Taylor (ian@@cygnus.com)
#
 
# Note: 
# 
# This script tests some auto-import functionality:
#
#  A. "auto importing direct from a dll" functionality, which dramatically reduces the 
#     linking time for big libraries and applications by skipping creating/using 
#     import libraries. Instead it links directly to the related dll or to a symlinked 
#     dll for replacing regular import libraries. The test has 6 stages: 
#  
#     1. compile and link a test dll exporting some text and data symbols and a 
#     standard import library
#
#     2. create a symbolic link to this dll to simulate a replaced import library. 
#
#     3. compile and link a client application with the standard import library. 
#     This should produce no errors. 
#
#     4. compile and link a client application with the created dll. 
#     This should also produce no errors. 
#
#     5. compile and link a client application using the "import library". 
#     This should also produce no errors. 
#
#     6. compile and link a client application with auto-import disabled. 
#     This should produce a linking error. 
#
# B. runtime check if there are no segfaults when importing const data variables 
#

# This test can only be run if ld generates native executables.
if ![isnative] then {return}

# This test can only be run on a couple of platforms.
# Square bracket expressions seem to confuse istarget.
if { ![istarget *-pc-cygwin]    
     && ![istarget *-pc-mingw*] } {
    return
}

if [istarget *-pc-mingw*] {
    # FIXME: Add support for this target.
    unsupported "mingw currently not supported"
}

# No compiler, no test.
if { [which $CC] == 0 } {
    untested "Auto import test (compiler not found)"
    return
}

# ld_special_link
#	link a program using ld, without including any libraries
#
proc ld_special_link { ld target objects } {
    global host_triplet
    global link_output

    if { [which $ld] == 0 } then {
	perror "$ld does not exist"
	return 0
    }

    if [is_endian_output_format $objects] then {
	set flags [big_or_little_endian]
    } else {
	set flags ""
    }

    verbose -log "$ld $flags -o $target $objects"

    catch "exec $ld $flags -o $target $objects" link_output
    set exec_output [prune_warnings $link_output]

    # We don't care if we get a warning about a non-existent start
    # symbol, since the default linker script might use ENTRY.
    regsub -all "(^|\n)(\[^\n\]*: warning: cannot find entry symbol\[^\n\]*\n?)" $exec_output "\\1" exec_output

    # We don't care if we get a message about creating a library file.
    regsub -all "(^|\n)(Creating library file\[^\n\]*\n?)" $exec_output "\\1" exec_output

    if [string match "" $exec_output] then {
	return 1
    }

    verbose -log "$exec_output"
    return 0
}

set tmpdir tmpdir
set SHCFLAG ""

if [istarget *-pc-cygwin] {
    # Set some libs needed for cygwin.
    set MYLIBS "-L/usr/lib -lcygwin -L/usr/lib/w32api -lkernel32"
    
    # Compile the dll.
    if ![ld_compile "$CC $CFLAGS $SHCFLAG" $srcdir/$subdir/dll.c $tmpdir/dll.o] {
	fail "compiling shared lib"
    }
    if ![ld_special_link "$ld -shared --enable-auto-import -e __cygwin_dll_entry@@12 --out-implib=$tmpdir/libstandard.dll.a" $tmpdir/dll.dll "$tmpdir/dll.o $MYLIBS"] {
	fail "linking shared lib"
    }

    # Create symbolic link.
    catch "exec ln -fs dll.dll $tmpdir/libsymlinked_dll.dll.a" ln_catch

    # Compile and link the client program.
    if ![ld_compile "$CC $CFLAGS $SHCFLAG" $srcdir/$subdir/client.c $tmpdir/client.o] {
        fail "compiling client"
    }

    # Check linking with import library.
    set msg "linking auto-import client using a standard import library"
    if [ld_special_link $ld $tmpdir/client-linklib.exe "--enable-auto-import --enable-runtime-pseudo-reloc /lib/crt0.o $tmpdir/client.o -L$tmpdir -lstandard $MYLIBS"] {
	pass $msg
    } else {
	fail $msg 
    }

    # Check linking directly with dll.
    set msg "linking auto-import client using the dll"
    if [ld_special_link $ld $tmpdir/client-linkdll.exe "--enable-auto-import --enable-runtime-pseudo-reloc /lib/crt0.o $tmpdir/client.o -L$tmpdir -ldll $MYLIBS"] {
	pass $msg
    } else {
	fail $msg 
    }

    # Check linking with symlinked dll.
    set msg "linking auto-import client using symbolic linked dll"
    if [ld_special_link $ld $tmpdir/client-symlinkeddll.exe "--enable-auto-import --enable-runtime-pseudo-reloc /lib/crt0.o $tmpdir/client.o -L$tmpdir -lsymlinked_dll $MYLIBS"] {
	pass $msg
    } else {
	fail $msg 
    }

    # Check linking with disabled auto-import, this must produce linking error.
    set msg "linking with disabled auto-import"
    if ![ld_special_link $ld $tmpdir/client-failed.exe "--disable-auto-import --enable-runtime-pseudo-reloc /lib/crt0.o $tmpdir/client.o -L$tmpdir -ldll $MYLIBS"] {
	pass $msg
    } else {
	fail $msg
    }

    # Check that the app works - ie that there is output when the applications runs.
    set msg "application runtime segfault check" 
    catch "exec $tmpdir/client-linklib.exe" exec_output
    if ![string match "" $exec_output] then {
    	pass $msg
    } else {
    	fail $msg
    }
}
@


1.6
log
@
	* ld-auto-import/auto-import.exp:  Add missing dll entrypoint.
@
text
@d2 1
a2 1
#   Copyright 2002, 2007, 2008
@


1.5
log
@        * ld-auto-import/auto-import.exp: Use $ld to link the dll for
        cygwin, not $CC.
@
text
@d125 1
a125 1
    if ![ld_special_link "$ld -shared --enable-auto-import --out-implib=$tmpdir/libstandard.dll.a" $tmpdir/dll.dll "$tmpdir/dll.o $MYLIBS"] {
@


1.4
log
@PR linker/4844
* ld-auto-import/auto-import.exp: Extend test to include running the application and checking for some output.
* ld-auto-import/client.c (struct TEST): Include a variable field with an offset.
  (const_xyz): A const version of the xyz structure used to test the initialization of constant data.
@
text
@d2 1
a2 1
#   Copyright 2002, 2007
d125 1
a125 1
    if ![ld_special_link "$CC -shared --enable-auto-import --out-implib=$tmpdir/libstandard.dll.a" $tmpdir/dll.dll "$tmpdir/dll.o $MYLIBS"] {
@


1.3
log
@Update sources to GPLv3
@
text
@d28 1
a28 14
# This test checks the "auto importing direct from a dll" functionality, 
# which dramatically reduces the linking time for big libraries and applications 
# by skipping creating/using import libraries. Instead it links directly to the 
# related dll or to a symlinked dll for replacing regular import libraries. 
# 
# The test has 4 stages: 
# 
# 1. compile and link a test dll exporting some text and data symbols and a 
#    standard import library
#
# 2. create a symbolic link to this dll to simulate a replaced import library. 
#
# 3. compile and link a client application with the standard import library. 
#    This should produce no errors. 
d30 7
a36 2
# 4. compile and link a client application with the created dll. 
#    This should also produce no errors. 
d38 15
a52 2
# 5. compile and link a client application using the "import library". 
#    This should also produce no errors. 
a53 2
# 6. compile and link a client application with auto-import disabled. 
#    This should produce a linking error. 
d58 1
a58 1
# This test can only be run on a couple of ELF platforms.
d65 5
d72 1
a72 1
    untested "Auto import test"
a107 3
    } else {
	verbose -log "$exec_output"
	return 0
d109 3
d122 1
a122 1
    if ![ld_compile "$CC $CFLAGS $SHCFLAG" $srcdir/$subdir/dll.c $tmpdir/dll.o ] {
d124 2
a125 1
    } elseif ![ld_special_link "$ld -shared --out-implib=$tmpdir/libstandard.dll.a" $tmpdir/dll.dll "$tmpdir/dll.o $MYLIBS" ] {
d127 30
d158 9
a166 39
	# Create symbolic link.
	catch "exec ln -fs dll.dll $tmpdir/libsymlinked_dll.dll.a" ln_catch
	
	# Compile and link the client program.
	if ![ld_compile "$CC $CFLAGS $SHCFLAG" $srcdir/$subdir/client.c $tmpdir/client.o ] {
	    fail "compiling client"
	} else {
	    # Check linking with import library.
	    set msg "linking auto-import client using a standard import library"
	    if [ld_special_link $ld $tmpdir/client.exe "--enable-auto-import /lib/crt0.o $tmpdir/client.o -L$tmpdir -lstandard $MYLIBS" ] {
		pass $msg
	    } else {
		fail $msg 
	    }

	    # Check linking directly with dll.
	    set msg "linking auto-import client using the dll"
	    if [ld_special_link $ld $tmpdir/client.exe "--enable-auto-import /lib/crt0.o $tmpdir/client.o -L$tmpdir -ldll $MYLIBS" ] {
		pass $msg
	    } else {
		fail $msg 
	    }

	    # Check linking with symlinked dll.
	    set msg "linking auto-import client using symbolic linked dll"
	    if [ld_special_link $ld $tmpdir/clientimport.exe "--enable-auto-import /lib/crt0.o $tmpdir/client.o -L$tmpdir -lsymlinked_dll $MYLIBS" ] {
		pass $msg
	    }	else {
		fail $msg 
	    }

	    # Check linking with disabled auto-import, this must produce linking error.
	    set msg "linking with disabled auto-import"
	    if ![ld_special_link $ld $tmpdir/clientimport.exe "--disable-auto-import /lib/crt0.o $tmpdir/client.o -L$tmpdir -ldll $MYLIBS" ] {
		pass $msg
	    }	else {
		fail $msg
	    }
	}
a167 1
}
d169 8
a176 2
if [istarget *-pc-mingw*] {
    unsupported "mingw currently not supported"
@


1.2
log
@Update FSF addresses
@
text
@d2 1
a2 1
#   Copyright 2002
d5 3
a7 1
# This file is free software; you can redistribute it and/or modify
d9 1
a9 1
# the Free Software Foundation; either version 2 of the License, or
d11 1
a11 1
# 
d16 1
a16 1
# 
d19 2
a20 1
# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.
@


1.1
log
@Test the auto importing direct from a dll functionality.
@
text
@d17 1
a17 1
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
@

