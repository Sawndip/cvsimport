head	1.43;
access;
symbols
	binutils-2_24-branch:1.43.0.2
	binutils-2_24-branchpoint:1.43
	binutils-2_21_1:1.16.2.1
	binutils-2_23_2:1.36
	binutils-2_23_1:1.36
	binutils-2_23:1.36
	binutils-2_23-branch:1.36.0.2
	binutils-2_23-branchpoint:1.36
	binutils-2_22_branch:1.28.2.1.0.2
	binutils-2_22:1.28.2.1
	binutils-2_22-branch:1.28.0.2
	binutils-2_22-branchpoint:1.28
	binutils-2_21:1.16
	binutils-2_21-branch:1.16.0.2
	binutils-2_21-branchpoint:1.16
	binutils-2_20_1:1.15
	binutils-2_20:1.15
	binutils-arc-20081103-branch:1.13.0.6
	binutils-arc-20081103-branchpoint:1.13
	binutils-2_20-branch:1.15.0.2
	binutils-2_20-branchpoint:1.15
	dje-cgen-play1-branch:1.14.0.2
	dje-cgen-play1-branchpoint:1.14
	arc-20081103-branch:1.13.0.4
	arc-20081103-branchpoint:1.13
	binutils-2_19_1:1.13
	binutils-2_19:1.13
	binutils-2_19-branch:1.13.0.2
	binutils-2_19-branchpoint:1.13
	binutils-2_18:1.11
	binutils-2_18-branch:1.11.0.2
	binutils-2_18-branchpoint:1.11
	binutils-csl-coldfire-4_1-32:1.8
	binutils-csl-sourcerygxx-4_1-32:1.8
	binutils-csl-innovasic-fido-3_4_4-33:1.8
	binutils-csl-sourcerygxx-3_4_4-32:1.4
	binutils-csl-coldfire-4_1-30:1.8
	binutils-csl-sourcerygxx-4_1-30:1.8
	binutils-csl-coldfire-4_1-28:1.8
	binutils-csl-sourcerygxx-4_1-29:1.8
	binutils-csl-sourcerygxx-4_1-28:1.8
	binutils-csl-arm-2006q3-27:1.8
	binutils-csl-sourcerygxx-4_1-27:1.8
	binutils-csl-arm-2006q3-26:1.8
	binutils-csl-sourcerygxx-4_1-26:1.8
	binutils-csl-sourcerygxx-4_1-25:1.8
	binutils-csl-sourcerygxx-4_1-24:1.8
	binutils-csl-sourcerygxx-4_1-23:1.8
	binutils-csl-sourcerygxx-4_1-21:1.8
	binutils-csl-arm-2006q3-21:1.8
	binutils-csl-sourcerygxx-4_1-22:1.8
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.8
	binutils-csl-sourcerygxx-4_1-20:1.8
	binutils-csl-arm-2006q3-19:1.8
	binutils-csl-sourcerygxx-4_1-19:1.8
	binutils-csl-sourcerygxx-4_1-18:1.8
	binutils-csl-renesas-4_1-9:1.8
	binutils-csl-sourcerygxx-3_4_4-25:1.4
	binutils-csl-renesas-4_1-8:1.8
	binutils-csl-renesas-4_1-7:1.8
	binutils-csl-renesas-4_1-6:1.8
	binutils-csl-sourcerygxx-4_1-17:1.8
	binutils-csl-sourcerygxx-4_1-14:1.8
	binutils-csl-sourcerygxx-4_1-15:1.8
	binutils-csl-sourcerygxx-4_1-13:1.8
	binutils-2_17:1.8
	binutils-csl-sourcerygxx-4_1-12:1.8
	binutils-csl-sourcerygxx-3_4_4-21:1.8
	binutils-csl-wrs-linux-3_4_4-24:1.4
	binutils-csl-wrs-linux-3_4_4-23:1.4
	binutils-csl-sourcerygxx-4_1-9:1.8
	binutils-csl-sourcerygxx-4_1-8:1.8
	binutils-csl-sourcerygxx-4_1-7:1.8
	binutils-csl-arm-2006q1-6:1.8
	binutils-csl-sourcerygxx-4_1-6:1.8
	binutils-csl-wrs-linux-3_4_4-22:1.4
	binutils-csl-coldfire-4_1-11:1.8
	binutils-csl-sourcerygxx-3_4_4-19:1.8
	binutils-csl-coldfire-4_1-10:1.8
	binutils-csl-sourcerygxx-4_1-5:1.8
	binutils-csl-sourcerygxx-4_1-4:1.8
	binutils-csl-wrs-linux-3_4_4-21:1.4
	binutils-csl-morpho-4_1-4:1.8
	binutils-csl-sourcerygxx-3_4_4-17:1.8
	binutils-csl-wrs-linux-3_4_4-20:1.4
	binutils-2_17-branch:1.8.0.4
	binutils-2_17-branchpoint:1.8
	binutils-csl-2_17-branch:1.8.0.2
	binutils-csl-2_17-branchpoint:1.8
	binutils-csl-gxxpro-3_4-branch:1.4.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.4
	binutils-2_16_1:1.4
	binutils-csl-arm-2005q1b:1.4
	binutils-2_16:1.4
	binutils-csl-arm-2005q1a:1.4
	binutils-csl-arm-2005q1-branch:1.4.0.4
	binutils-csl-arm-2005q1-branchpoint:1.4
	binutils-2_16-branch:1.4.0.2
	binutils-2_16-branchpoint:1.4
	csl-arm-2004-q3d:1.3
	csl-arm-2004-q3:1.3
	binutils-2_15:1.3
	binutils-2_15-branchpoint:1.3
	csl-arm-2004-q1a:1.3
	csl-arm-2004-q1:1.3
	binutils-2_15-branch:1.3.0.6
	cagney_bfdfile-20040213-branch:1.3.0.4
	cagney_bfdfile-20040213-branchpoint:1.3
	cagney_bigcore-20040122-branch:1.3.0.2
	cagney_bigcore-20040122-branchpoint:1.3
	csl-arm-2003-q4:1.3
	binutils-2_14:1.2
	binutils-2_14-branch:1.2.0.2
	binutils-2_14-branchpoint:1.2
	binutils_latest_snapshot:1.43;
locks; strict;
comment	@# @;


1.43
date	2013.02.19.01.09.58;	author macro;	state Exp;
branches;
next	1.42;

1.42
date	2012.12.17.19.32.52;	author roland;	state Exp;
branches;
next	1.41;

1.41
date	2012.12.15.10.34.14;	author tschwinge;	state Exp;
branches;
next	1.40;

1.40
date	2012.12.15.10.28.17;	author tschwinge;	state Exp;
branches;
next	1.39;

1.39
date	2012.10.23.09.33.55;	author nathan;	state Exp;
branches;
next	1.38;

1.38
date	2012.08.31.02.52.14;	author hjl;	state Exp;
branches;
next	1.37;

1.37
date	2012.08.24.18.20.40;	author hjl;	state Exp;
branches;
next	1.36;

1.36
date	2012.05.28.04.08.53;	author amodra;	state Exp;
branches;
next	1.35;

1.35
date	2012.05.27.14.45.41;	author hjl;	state Exp;
branches;
next	1.34;

1.34
date	2012.05.19.10.39.07;	author amodra;	state Exp;
branches;
next	1.33;

1.33
date	2012.04.09.16.28.34;	author roland;	state Exp;
branches;
next	1.32;

1.32
date	2012.04.03.16.01.35;	author roland;	state Exp;
branches;
next	1.31;

1.31
date	2011.10.19.07.17.21;	author amodra;	state Exp;
branches;
next	1.30;

1.30
date	2011.10.07.19.55.47;	author hjl;	state Exp;
branches;
next	1.29;

1.29
date	2011.09.29.00.13.14;	author hjl;	state Exp;
branches;
next	1.28;

1.28
date	2011.06.27.15.02.56;	author nickc;	state Exp;
branches
	1.28.2.1;
next	1.27;

1.27
date	2011.06.27.13.34.21;	author amodra;	state Exp;
branches;
next	1.26;

1.26
date	2011.06.22.05.55.05;	author tschwinge;	state Exp;
branches;
next	1.25;

1.25
date	2011.06.14.02.55.29;	author amodra;	state Exp;
branches;
next	1.24;

1.24
date	2011.06.10.14.04.24;	author nickc;	state Exp;
branches;
next	1.23;

1.23
date	2011.06.08.04.47.03;	author hjl;	state Exp;
branches;
next	1.22;

1.22
date	2011.05.09.14.36.13;	author hjl;	state Exp;
branches;
next	1.21;

1.21
date	2011.05.07.14.12.57;	author hjl;	state Exp;
branches;
next	1.20;

1.20
date	2011.03.30.17.41.35;	author rth;	state Exp;
branches;
next	1.19;

1.19
date	2010.12.21.11.00.48;	author tschwinge;	state Exp;
branches;
next	1.18;

1.18
date	2010.12.15.14.56.39;	author hjl;	state Exp;
branches;
next	1.17;

1.17
date	2010.11.08.06.43.36;	author tschwinge;	state Exp;
branches;
next	1.16;

1.16
date	2010.09.23.12.24.41;	author amodra;	state Exp;
branches
	1.16.2.1;
next	1.15;

1.15
date	2009.09.02.07.25.39;	author amodra;	state Exp;
branches;
next	1.14;

1.14
date	2009.01.12.13.57.59;	author amodra;	state Exp;
branches;
next	1.13;

1.13
date	2007.11.20.15.08.23;	author nickc;	state Exp;
branches;
next	1.12;

1.12
date	2007.08.28.13.21.57;	author jsm28;	state Exp;
branches;
next	1.11;

1.11
date	2007.07.23.09.56.19;	author rsandifo;	state Exp;
branches;
next	1.10;

1.10
date	2007.07.06.14.09.43;	author nickc;	state Exp;
branches;
next	1.9;

1.9
date	2007.03.22.23.44.00;	author amodra;	state Exp;
branches;
next	1.8;

1.8
date	2005.11.15.08.32.02;	author jbeulich;	state Exp;
branches;
next	1.7;

1.7
date	2005.07.27.21.29.11;	author bje;	state Exp;
branches;
next	1.6;

1.6
date	2005.07.14.17.02.10;	author hjl;	state Exp;
branches;
next	1.5;

1.5
date	2005.05.12.07.32.05;	author nickc;	state Exp;
branches;
next	1.4;

1.4
date	2005.03.03.11.52.06;	author amodra;	state Exp;
branches;
next	1.3;

1.3
date	2003.05.29.00.16.46;	author thorpej;	state Exp;
branches;
next	1.2;

1.2
date	2002.11.21.21.37.06;	author amodra;	state Exp;
branches;
next	1.1;

1.1
date	2002.11.21.13.30.31;	author amodra;	state Exp;
branches;
next	;

1.28.2.1
date	2011.10.05.16.39.55;	author hjl;	state Exp;
branches;
next	;

1.16.2.1
date	2011.02.10.03.41.08;	author amodra;	state Exp;
branches;
next	;


desc
@@


1.43
log
@	* lib/ld-lib.exp (run_ld_link_tests): Add another argument, pass
	its contents to ar_simple_create and ld_simple_link after
	objfiles.
	* ld-aarch64/aarch64-elf.exp: Adjust accordingly.
	* ld-alpha/alpha.exp: Likewise.
	* ld-arm/arm-elf.exp: Likewise.
	* ld-arm/export-class.exp: Likewise.
	* ld-elf/comm-data.exp: Likewise.
	* ld-elf/eh-group.exp: Likewise.
	* ld-elf/elf.exp: Likewise.
	* ld-elf/export-class.exp: Likewise.
	* ld-elfvers/vers.exp: Likewise.
	* ld-frv/tls.exp: Likewise.
	* ld-i386/export-class.exp: Likewise.
	* ld-i386/i386.exp: Likewise.
	* ld-ia64/ia64.exp: Likewise.
	* ld-libs/libs.exp: Likewise.
	* ld-m68k/m68k.exp: Likewise.
	* ld-metag/metag.exp: Likewise.
	* ld-mips-elf/comm-data.exp: Likewise.
	* ld-mips-elf/export-class.exp: Likewise.
	* ld-mips-elf/mips-elf.exp: Likewise.
	* ld-mn10300/mn10300.exp: Likewise.
	* ld-pe/pe-compile.exp: Likewise.
	* ld-pe/pe.exp: Likewise.
	* ld-plugin/plugin.exp: Likewise.
	* ld-powerpc/aix52.exp: Likewise.
	* ld-powerpc/export-class.exp: Likewise.
	* ld-powerpc/powerpc.exp: Likewise.
	* ld-s390/s390.exp: Likewise.
	* ld-sh/sh-vxworks.exp: Likewise.
	* ld-sh/sh64/sh64.exp: Likewise.
	* ld-sparc/sparc.exp: Likewise.
	* ld-tic6x/tic6x.exp: Likewise.
	* ld-tilegx/tilegx.exp: Likewise.
	* ld-tilepro/tilepro.exp: Likewise.
	* ld-undefined/entry.exp: Likewise.
	* ld-vax-elf/vax-elf.exp: Likewise.
	* ld-x86-64/dwarfreloc.exp: Likewise.
	* ld-x86-64/export-class.exp: Likewise.
	* ld-x86-64/x86-64.exp: Likewise.
	* ld-xc16x/xc16x.exp: Likewise.
	* ld-xstormy16/xstormy16.exp: Likewise.
	* ld-xtensa/xtensa.exp: Likewise.
@
text
@# Expect script for various ELF tests.
#   Copyright 2002, 2003, 2005, 2007, 2009, 2010, 2011, 2012
#   Free Software Foundation, Inc.
#
# This file is part of the GNU Binutils.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
# MA 02110-1301, USA.
#

# Exclude non-ELF targets.

if ![is_elf_format] {
    return
}

set old_ldflags $LDFLAGS
if { [istarget spu*-*-*] } {
    set LDFLAGS "$LDFLAGS --local-store 0:0"
}
if { [istarget alpha*-*-* ] } {
    # The compress1 test is written expecting 32-bit addresses; force the
    # executable down into the low address space to match.
    # ??? How can we adjust just the one testcase?
    set LDFLAGS "$LDFLAGS -Ttext-segment 0x1000000"
}

if { [istarget "*-*-nacl*"] } {
    # The eh[1-4] cases are written to expect ELFCLASS64 layout on x86-64.
    # But the target default is ELFCLASS32.  So the cases explicitly use
    # -melf_x86_64 to select that, but NaCl needs a different emulation name.
    set options_regsub(ld) {-melf_x86_64 -melf_x86_64_nacl}
}

if { [istarget "*-*-solaris*"] } {
    # Same for Solaris
    set options_regsub(ld) {-melf_x86_64 -melf_x86_64_sol2}
}

if { [is_remote host] } then {
    remote_download host merge.ld
}

if { ![istarget hppa64*-hpux*] } {
    run_ld_link_tests {
	{"Build symbol3.a"
	    "" "" ""
	    {symbol3.s} {} "symbol3.a"}
	{"Build symbol3w.a"
	    "" "" ""
	    {symbol3w.s} {} "symbol3w.a"}
    }

    if { [check_shared_lib_support] } then {
	run_ld_link_tests {
	    {"Build pr14170a.o" "" "" "" "pr14170a.s" {} "pr14170.a" }
	}
	setup_xfail "tic6x-*-*"
	run_ld_link_tests {
	    {"Build shared library for pr14170"
		"-shared" "" "" "pr14170b.s" {} "pr14170.so" }
	    {"PR ld/14170"
		"tmpdir/pr14170a.o tmpdir/pr14170.so" "" "" "pr14170c.s"
		{ } "pr14170" }
	}
    }
}

# Run a test to check linking a shared library with a broken linker
# script that accidentally marks dynamic sections as notes.  The
# resulting executable is not expected to work, but the linker
# should not seg-fault whilst creating the binary.
#
# Only run the test on targets thats support creating shared libraries.
if { [check_shared_lib_support] } then {
    setup_xfail "tic6x-*-*"
    run_ld_link_tests {
	{"Build shared library for next test"
	    "-shared" "" "" "note-3.s" {} "note-3.so" }
	{"Link using broken linker script"
	    "--script note-3.t tmpdir/note-3.so" "" "" ""
	    { { ld "note-3.l" } }
	    "a.out" }
    }
}

set test_list [lsort [glob -nocomplain $srcdir/$subdir/*.d]]
foreach t $test_list {
    # We need to strip the ".d", but can leave the dirname.
    verbose [file rootname $t]
    run_dump_test [file rootname $t]
}

if { [istarget *-*-linux*]
     || [istarget *-*-nacl*]
     || [istarget *-*-gnu*] } {
    run_ld_link_tests {
	{"Weak symbols in dynamic objects 1 (support)"
	    "-shared" "" "" {weak-dyn-1a.s}
	    {}
	    "libweakdyn1a.so"}
	{"Weak symbols in dynamic objects 1 (main test)"
	    "-shared tmpdir/libweakdyn1a.so -Tweak-dyn-1.ld" "" "" {weak-dyn-1b.s}
	    {{readelf {--relocs --wide} weak-dyn-1.rd}}
	    "libweakdyn1b.so"}
    }
}

#v850 gas complains about .tbss.var section attributes.
if { [check_gc_sections_available] && ![istarget "v850-*-*"] } {
    run_ld_link_tests {
	{"--gc-sections on tls variable"
	    "--gc-section" "" "" {tls_gc.s} {} "tls_gc"}
    }
}

if { [istarget *-*-*linux*]
     || [istarget *-*-nacl*]
     || [istarget *-*-gnu*] } {
    run_ld_link_tests {
	{"stack exec" "-z execstack" "" "" {stack.s}
	    {{readelf {-Wl} stack-exec.rd}} "stack-exec.exe"}
	{"stack size" "-z stack-size=0x123400" "" "" {stack.s}
	    {{readelf {-Wl} stack-size.rd}} "stack-size.exe"}
    }
}

set LDFLAGS $old_ldflags

# The following tests require running the executable generated by ld.
if ![isnative] {
    return
}

if [check_gc_sections_available] {
    run_cc_link_tests {
	{"PR ld/13195" "-Wl,--gc-sections" ""
	 {pr13195.c} {} "pr13195"}
    }
}

set array_tests {
    {"preinit array" "" "" {preinit.c} "preinit" "preinit.out"}
    {"init array" "" "" {init.c} "init" "init.out"}
    {"fini array" "" "" {fini.c} "fini" "fini.out"}
    {"init array mixed" "" "" {init-mixed.c} "init-mixed" "init-mixed.out" "-I."}
}
set array_tests_pie {
    {"PIE preinit array" "-pie" "" {preinit.c} "preinit" "preinit.out" "-fPIE" }
    {"PIE init array" "-pie" "" {init.c} "init" "init.out" "-fPIE"}
    {"PIE fini array" "-pie" "" {fini.c} "fini" "fini.out" "-fPIE"}
    {"PIE init array mixed" "-pie" "" {init-mixed.c} "init-mixed" "init-mixed.out" "-I. -fPIE"}
    {"PIE PR ld/14525" "-pie" "" {pr14525.c} "pr14525" "pr14525.out" "-fPIE"}
}
set array_tests_static {
    {"static preinit array" "-static" "" {preinit.c} "preinit" "preinit.out"}
    {"static init array" "-static" "" {init.c} "init" "init.out"}
    {"static fini array" "-static" "" {fini.c} "fini" "fini.out"}
    {"static init array mixed" "-static" "" {init-mixed.c} "init-mixed" "init-mixed.out" "-I."}
}

# NetBSD ELF systems do not currently support the .*_array sections.
set xfails [list "*-*-netbsdelf*"]
run_ld_link_exec_tests $xfails $array_tests

if { [istarget *-*-linux*]
     || [istarget *-*-nacl*]
     || [istarget *-*-gnu*] } {
    run_ld_link_exec_tests $xfails $array_tests_pie
}

# Be cautious to not XFAIL for *-*-linux-gnu*, *-*-kfreebsd-gnu*, etc.
switch -regexp $target_triplet {
    ^\[^-\]*-\[^-\]*-gnu.*$ {
	# <http://www.gnu.org/software/hurd/open_issues/binutils.html#static>
	lappend xfails "*-*-*"
    }
}
run_ld_link_exec_tests $xfails $array_tests_static

catch "exec rm -f tmpdir/preinit tmpdir/init tmpdir/fini tmpdir/init-mixed" status
@


1.42
log
@ld/testsuite/
	* ld-elf/elf.exp (stack exec, stack size): Run for *-*-nacl* targets.
	* ld-i386/export-class.exp: Run for i?86-*-nacl* targets.
@
text
@d59 1
a59 1
	    "" ""
d62 1
a62 1
	    "" ""
d68 1
a68 1
	    {"Build pr14170a.o" "" "" "pr14170a.s" {} "pr14170.a" }
d73 1
a73 1
		"-shared" "" "pr14170b.s" {} "pr14170.so" }
d75 1
a75 1
		"tmpdir/pr14170a.o tmpdir/pr14170.so" "" "pr14170c.s"
d91 1
a91 1
	    "-shared" "" "note-3.s" {} "note-3.so" }
d93 1
a93 1
	    "--script note-3.t tmpdir/note-3.so" "" ""
d111 1
a111 1
	    "-shared" "" {weak-dyn-1a.s}
d115 1
a115 1
	    "-shared tmpdir/libweakdyn1a.so -Tweak-dyn-1.ld" "" {weak-dyn-1b.s}
d125 1
a125 1
	    "--gc-section" "" {tls_gc.s} {} "tls_gc"}
d133 1
a133 1
	{"stack exec" "-z execstack" "" {stack.s}
d135 1
a135 1
	{"stack size" "-z stack-size=0x123400" "" {stack.s}
@


1.41
log
@Fix copy'n'paste-o.
@
text
@d130 1
@


1.40
log
@ld/testsuite/
	* ld-elf/elf.exp (stack exec, stack size): Run for any GNU target.
	* ld-elf/maxpage3c.d: Run for any x86 GNU target.
	* ld-elf/maxpage4.d: Likewise.
	* ld-elf/maxpage5.d: Likewise.
	* ld-i386/export-class.exp: Likewise.
@
text
@d129 1
a129 1
if { [istarget *-*-linux*]
@


1.39
log
@	bfd/
	* bfd-in.h (bfd_elf_stack_segment_size): Declare.
	* bfd-in2.h: Rebuilt.
	* elfxx-target.h (elf_backend_stack_align): New.
	(elfNN_bed): Add it.
	* elf-bfd.h (struct elf_backend_data): Add stack_align field.
	* elf.c (bfd_elf_map_sections_to_segments): Pay attention to
	stack_align and stacksize for PT_GNU_STACK segment.
	(assign_file_positions_for_non_load_sections): Set p_memsz for
	PT_GNU_STACK segment.
	(copy_elf_program_header): Copy PT_GNU_STACK size.
	* elflink.c (bfd_elf_stack_segment_size): New function, taken from
	uclinux backends.
	(bfd_elf_size_dynamic_sections): Determine
	PT_GNU_STACK requirements after calling backend.  Pay attention to
	stacksize.
	* elf32-bfin.c (elf32_bfinfdpic_always_size_sections): Call
	bfd_elf_stack_segment_size.
	(elf32_bfinfdpic_modify_program_headers): Delete.
	(elf32_bfingfdpic_copy_private_bfd_data): Don't copy PT_GNU_STACK
	here.
	(elf_backend_stack_align): Override.
	(elf_backend_modify_program_headers): Don't override.
	* elf32-frv.c (frvfdpic_always_size_sections): Call
	bfd_elf_stack_segment_size.
	(elf32_frvfdpic_modify_program_headers): Delete.
	(elf32_frvfdpic_copy_private_bfd_data): Don't copy PT_GNU_STACK
	here.
	(elf_backend_stack_align): Override.
	(elf_backend_modify_program_headers): Don't override.
	* elf32-lm32.c (lm32_elf_always_size_sections): Leave
	PT_GNU_STACK creation to underlying elf support.  Check
	__stacksize here for backwards compatibility, and set it if
	needed.
	(lm32_elf_modify_segment_map): Delete.
	(lm32_elf_modify_program_headers): Delete.
	(elf_backend_stack_align): Override.
	(elf_backend_modify_segment_map): Don't override.
	(elf_backend_modify_program_headers): Don't override.
	* elf32-sh.c (sh_elf_always_size_sections): Call
	bfd_elf_stack_segment_size.
	(sh_elf_modify_program_headers): Delete.
	(sh_elf_copy_private_data): Don't copy PT_GNU_STACK
	here.
	(elf_backend_stack_align): Override.
	(elf_backend_modify_program_headers): Don't override.
	* elf32-tic6x.c (elf32_tic6x_always_size_sections): Call
	bfd_elf_stack_segment_size.
	(elf32_tic6x_modify_program_headers): Delete.
	(elf32_tic6x_copy_private_data): Delete.
	(elf_backend_stack_align): Override.
	(bfd_elf32_bfd_copy_private_bfd_data): Don't override.
	(elf_backend_modify_program_headers): Don't override.

	include/
	* bfdlink.h (struct bfd_link_info): Add stacksize option.

	ld/
	* ld.texinfo (stack-size): New option.
	* emultempl/elf32.em: Add stack-size option.

	ld/testsuite/
	* ld-elf/binutils.exp: Add -z stack-size=0.
	* ld-elf/elf.exp: Add stack-exec and stack-size tests.
	* ld-elf/orphan-region.d: Add stack-size option. Remove xfail.
	* ld-elf/stack-exec.rd: New.
	* ld-elf/stack-size.rd: New.
	* ld-elf/stack.s: New.
	* ld-scripts/empty-aligned.d: Add stack-size option.
	* ld-sh/fdpic-stack-set.d: New.
	* ld-tic6x/shlib-1.rd: Remove __stacksize symbol.
	* ld-tic6x/shlib-1b.rd: Likewise.
	* ld-tic6x/shlib-1r.rd: Likewise.
	* ld-tic6x/shlib-1rb.rd: Likewise.
	* ld-tic6x/shlib-app-1.rd: Likewise.
	* ld-tic6x/shlib-app-1b.rd: Likewise.
	* ld-tic6x/shlib-app-1r.rd: Likewise.
	* ld-tic6x/shlib-app-1rb.rd: Likewise.
	* ld-tic6x/shlib-noindex.rd: Likewise.
	* ld-tic6x/static-app-1.rd: Likewise.
	* ld-tic6x/static-app-1b.rd: Likewise.
	* ld-tic6x/static-app-1r.rd: Likewise.
	* ld-tic6x/static-app-1rb.rd: Likewise.
@
text
@d129 2
a130 1
if { [istarget *-*-*linux*] } {
@


1.38
log
@Provide __executable_start for PIE

ld/

	PR ld/14525
	* scripttempl/elf.sc: Also provide __executable_start for PIE.

ld/testsuite/

	PR ld/14525
	* ld-elf/elf.exp: Run pr14525.

	* ld-elf/pr14525.c: New.
	* ld-elf/pr14525.out: Likewise.
@
text
@d129 9
@


1.37
log
@Add Solaris/x86-64 support to eh[1-4] test

	* ld-elf/elf.exp: Add Solaris/x86-64 support to eh[1-4] test.
@
text
@d154 1
@


1.36
log
@	PR ld/14170
	* ld-elf/pr14170a.s: Put foo, bar address in .data.
	* ld-elf/elf.exp: Don't run pr14170 test on hppa64-hpux.  Ignore
	tic6x warnings.
@
text
@d47 5
@


1.35
log
@Add a test for PR ld/14170

	PR ld/14170
	* ld-elf/elf.exp: Add a test for PR ld/14170.

	* ld-elf/pr14170a.s: New file.
	* ld-elf/pr14170b.s: Likewise.
	* ld-elf/pr14170b.s: Likewise.
@
text
@d60 14
d83 9
a91 17
  run_ld_link_tests {
      {"Build pr14170a.o" "" "" "pr14170a.s" {} "pr14170.a" }
      {"Build shared library for pr14170"
       "-shared" "" "pr14170b.s" {} "pr14170.so" }
      {"PR ld/14170"
        "tmpdir/pr14170a.o tmpdir/pr14170.so" "" "pr14170c.s"
	  { } "a.out" }
  }
  setup_xfail "tic6x-*-*"
  run_ld_link_tests {
      {"Build shared library for next test"
       "-shared" "" "note-3.s" {} "note-3.so" }
      {"Link using broken linker script"
        "--script note-3.t tmpdir/note-3.so" "" ""
	  { { ld "note-3.l" } }
	  "a.out" }
  }
@


1.34
log
@	* ld-elf/elf.exp (note-3.so): xfail tic6x due to non-pic warnings.
@
text
@d69 8
@


1.33
log
@ld/testsuite/
	* ld-elf/eh1.d: Add explicit --64 to as options, and explicit
	-melf_x86_64 and -Ttext to ld options, so we don't assume every
	x86_64-*-* target uses --64 (vs --x32) by default or has the
	same address space layout.
	* ld-elf/eh2.d: Likewise.
	* ld-elf/eh3.d: Likewise.
	* ld-elf/eh4.d: Likewise.
	* ld-elf/elf.exp: For target *-*-nacl*, use options_regsub(ld) to
	map -melf_x86_64 to -melf_x86_64_nacl.
@
text
@d69 1
@


1.32
log
@bfd/
2012-04-03  Roland McGrath  <mcgrathr@@google.com>

	* elf-nacl.c: New file.
	* elf-nacl.h: New file.
	* elf32-i386.c (elf_backend_modify_segment_map): Define for
	bfd_elf32_i386_nacl_vec.
	(elf_backend_modify_program_headers): Likewise.
	* elf64-x86-64.c (elf_backend_modify_segment_map): Define for
	bfd_elf64_x86_64_nacl_vec and bfd_elf32_x86_64_nacl_vec.
	(elf_backend_modify_program_headers): Likewise.
	* Makefile.am (BFD32_BACKENDS, BFD64_BACKENDS): Add elf-nacl.lo here.
	(BFD32_BACKENDS_CFILES, BFD64_BACKENDS_CFILES): Add elf-nacl.c here.
	* Makefile.in: Regenerated.
	* configure.in (bfd_elf64_x86_64_nacl_vec): Add elf-nacl.o to tb here.
	(bfd_elf32_x86_64_nacl_vec): Likewise.
	(bfd_elf64_x86_64_vec, bfd_elf32_x86_64_vec): Likewise.
	(bfd_elf64_x86_64_freebsd_vec, bfd_elf64_x86_64_sol2_vec): Likewise.
	(bfd_elf64_l1om_vec, bfd_elf64_l1om_freebsd_vec): Likewise.
	(bfd_elf64_k1om_vec, bfd_elf64_k1om_freebsd_vec): Likewise.
	(bfd_elf32_i386_nacl_vec): Likewise.
	(bfd_elf32_i386_sol2_vec, bfd_elf32_i386_freebsd_vec): Likewise.
	(bfd_elf32_i386_vxworks_vec, bfd_elf32_i386_vec): Likewise.
	* configure: Regenerated.

binutils/testsuite/
2012-04-03  Roland McGrath  <mcgrathr@@google.com>

	* lib/binutils-common.exp (is_elf_format): Consider *-*-nacl* to
	be ELF too.

	* binutils-all/elfedit-4.d: Add "#as: --64" option.

	* binutils-all/i386/i386.exp: Accept nacl targets too.
	* binutils-all/x86-64/x86-64.exp: Likewise.

gas/testsuite/
2012-04-03  Roland McGrath  <mcgrathr@@google.com>

	* gas/i386/k1om.d: Add not-target match for *-*-nacl*.
	* gas/i386/l1om.d: Likewise.

ld/
2012-04-03  Roland McGrath  <mcgrathr@@google.com>

	* configure.tgt (i[3-7]86-*-nacl*, x86_64-*-nacl*): Handle them.
	* emulparams/elf_nacl.sh: New file.
	* emulparams/elf_i386_nacl.sh: New file.
	* emulparams/elf32_x86_64_nacl.sh: New file.
	* emulparams/elf_x86_64_nacl.sh: New file.
	* Makefile.am (ALL_EMULATION_SOURCES): Add eelf_i386_nacl.c here.
	(ALL_64_EMULATION_SOURCES): Add eelf32_x86_64_nacl.c and
	eelf_x86_64_nacl.c here.
	(eelf_i386_nacl.c, eelf32_x86_64_nacl.c, eelf_x86_64_nacl.c):
	New targets.
	* Makefile.in: Regenerated.

	* scripttempl/elf.sc: Handle SEPARATE_CODE cases.

ld/testsuite/
2012-04-03  Roland McGrath  <mcgrathr@@google.com>

	* ld-x86-64/ilp32-4-nacl.d: New file.
	* ld-x86-64/x86-64.exp: Run it.

	* ld-discard/discard.exp: Accept nacl targets too.
	* ld-elf/binutils.exp: Likewise.
	* ld-elf/comm-data.exp: Likewise.
	* ld-elf/elf.exp: Likewise.
	* ld-elf/tls_common.exp: Likewise.
	* ld-elfvers/vers.exp: Likewise.
	* ld-elfvsb/elfvsb.exp: Likewise.
	* ld-elfweak/elfweak.exp: Likewise.
	* ld-gc/gc.exp: Likewise.
	* ld-ifunc/binutils.exp: Likewise.
	* ld-ifunc/ifunc.exp: Likewise.
	* ld-linkonce/linkonce.exp:Likewise.
	* ld-pie/pie.exp: Likewise.
	* ld-shared/shared.exp: Likewise.
	* ld-undefined/weak-undef.exp: Likewise.
	* ld-unique/unique.exp: Likewise.
	* ld-x86-64/dwarfreloc.exp: Likewise.
	* ld-x86-64/line.exp: Likewise.

	* lib/ld-lib.exp (slurp_options): Support global array
	options_regsub to apply substitutions to the contents
	of options lines read from the file.
	* ld-i386/emit-relocs.d: Renamed to ...
	* ld-i386/emit-relocs.rd: ... this.
	* ld-i386/i386.exp: Accept nacl targets too.
	For them, use options_regsub to replace elf_i386 with
	elf_i386_nacl in run_dump_test cases; apply the same
	substitution in $i386tests; replace foo.rd expectations
	files with foo-nacl.rd in $i386tests.
	(i386tests): Change emit-relocs.d to emit-relocs.rd here.
	* ld-i386/emit-relocs-nacl.rd: New file.
	* ld-i386/plt-nacl.pd: New file.
	* ld-i386/plt-pic-nacl.pd: New file.
	* ld-i386/tlsbin-nacl.rd: New file.
	* ld-i386/tlsbindesc-nacl.rd: New file.
	* ld-i386/tlsdesc-nacl.rd: New file.
	* ld-i386/tlsgdesc-nacl.rd: New file.
	* ld-i386/tlsnopic-nacl.rd: New file.
	* ld-i386/tlspic-nacl.rd: New file.
	* ld-x86-64/x86-64.exp: Accept nacl targets too.
	For them, use options_regsub to replace elf_x86_64 with
	elf_x86_64_nacl in run_dump_test cases; apply the same
	substitution in $x86_64tests; replace foo.rd expectations
	files with foo-nacl.rd in $x86_64tests.
	Add explicit -melf_x86_64 to ld options in tests that need it,
	in case the default emulation is x32 (as it is for x86_64-nacl).
	* ld/testsuite/ld-x86-64/plt-nacl.pd: New file.
	* ld/testsuite/ld-x86-64/split-by-file-nacl.rd: New file.
	* ld/testsuite/ld-x86-64/tlsbin-nacl.rd: New file.
	* ld/testsuite/ld-x86-64/tlsbindesc-nacl.rd: New file.
	* ld/testsuite/ld-x86-64/tlsdesc-nacl.pd: New file.
	* ld/testsuite/ld-x86-64/tlsdesc-nacl.rd: New file.
	* ld/testsuite/ld-x86-64/tlsgdesc-nacl.rd: New file.
	* ld/testsuite/ld-x86-64/tlspic-nacl.rd: New file.

	* ld-i386/hidden2.d: Loosen regexps to match any file format variant,
	and not to depend on exact addresses, displacements, etc. where
	they are irrelevant.
	* ld-i386/pcrel16.d: Likewise.
	* ld-i386/pcrel16abs.d: Likewise.
	* ld-i386/pr12718.d: Likewise.
	* ld-i386/pr12921.d: Likewise.
	* ld-i386/reloc.d: Likewise.
	* ld-i386/tlsbin.dd: Likewise.
	* ld-i386/tlsbin.sd: Likewise.
	* ld-i386/tlsbin.td: Likewise.
	* ld-i386/tlsbindesc.dd: Likewise.
	* ld-i386/tlsbindesc.sd: Likewise.
	* ld-i386/tlsbindesc.td: Likewise.
	* ld-i386/tlsdesc.dd: Likewise.
	* ld-i386/tlsdesc.sd: Likewise.
	* ld-i386/tlsdesc.td: Likewise.
	* ld-i386/tlsg.sd: Likewise.
	* ld-i386/tlsgdesc.dd: Likewise.
	* ld-i386/tlsindntpoff.dd: Likewise.
	* ld-i386/tlsnopic.dd: Likewise.
	* ld-i386/tlsnopic.sd: Likewise.
	* ld-i386/tlspic.dd: Likewise.
	* ld-i386/tlspic.sd: Likewise.
	* ld-i386/tlspic.td: Likewise.
	* ld-i386/tlspie2.d: Likewise.
	* ld-x86-64/hidden2.d: Likewise.
	* ld-x86-64/pcrel16.d: Likewise.
	* ld-x86-64/pr12718.d: Likewise.
	* ld-x86-64/pr12921.d: Likewise.
	* ld-x86-64/protected3.d: Likewise.
	* ld-x86-64/tlsbin.dd: Likewise.
	* ld-x86-64/tlsbin.sd: Likewise.
	* ld-x86-64/tlsbin.td: Likewise.
	* ld-x86-64/tlsbindesc.dd: Likewise.
	* ld-x86-64/tlsbindesc.sd: Likewise.
	* ld-x86-64/tlsbindesc.td: Likewise.
	* ld-x86-64/tlsdesc.dd: Likewise.
	* ld-x86-64/tlsdesc.sd: Likewise.
	* ld-x86-64/tlsdesc.td: Likewise.
	* ld-x86-64/tlsg.sd: Likewise.
	* ld-x86-64/tlsgd5.dd: Likewise.
	* ld-x86-64/tlsgd6.dd: Likewise.
	* ld-x86-64/tlsgdesc.dd: Likewise.
	* ld-x86-64/tlspic.dd: Likewise.
	* ld-x86-64/tlspic.sd: Likewise.
	* ld-x86-64/tlspic.td: Likewise.

	* ld-x86-64/ilp32-8.d: Match any file format variant.
	Use a -Ttext and adjust expected results, to handle variant layouts.
	* ld-x86-64/ilp32-9.d: Likewise.

	* ld-i386/alloc.t: Remove superfluous OUTPUT_FORMAT statement.
	* ld-i386/pr12627.t: Likewise.

	* ld-x86-64/abs-l1om.d: Add target: constraint.
	* ld-x86-64/protected2-l1om.d: Likewise.
	* ld-x86-64/protected3-l1om.d: Likewise.
	* ld-x86-64/ilp32-4.d: Likewise.

	* ld-x86-64/plt.s: New file.
	* ld-x86-64/pltlib.s: New file.
	* ld-x86-64/plt.pd: New file.
	* ld-x86-64/x86-64.exp (x86_64tests): Add them.

	* ld-i386/plt.s: New file.
	* ld-i386/pltlib.s: New file.
	* ld-i386/plt.pd: New file.
	* ld-i386/plt-pic.s: New file.
	* ld-i386/plt-pic.pd: New file.
	* ld-i386/i386.exp (i386tests): Add them.
@
text
@d40 7
@


1.31
log
@	PR ld/13177
bfd/
	* elflink.c (_bfd_elf_gc_mark_rsec): Set symbol "mark".
	(elf_gc_sweep_symbol): Don't test plt/got refcounts, instead test
	"mark".  Hide undefweak too.  Clear def_regular and ref_regular.
	* elf-m10300.c (mn10300_elf_relocate_section): Ignore unresolved
	reloc errors from garbage-collected code.
	* elf32-arm.c (elf32_arm_relocate_section): Likewise.
	* elf32-bfin.c (bfin_relocate_section): Likewise.
	(bfinfdpic_relocate_section): Likewise.
	* elf32-cris.c (cris_elf_relocate_section): Likewise.
	* elf32-frv.c (elf32_frv_relocate_section): Likewise.
	* elf32-i386.c (elf_i386_relocate_section): Likewise.
	* elf32-m32r.c (m32r_elf_relocate_section): Likewise.
	* elf32-m68k.c (elf_m68k_relocate_section): Likewise.
	* elf32-ppc.c (ppc_elf_relocate_section): Likewise.
	* elf32-s390.c (elf_s390_relocate_section): Likewise.
	* elf32-sh.c (sh_elf_relocate_section): Likewise.
	* elf32-spu.c (spu_elf_relocate_section): Likewise.
	* elf32-tilepro.c (tilepro_elf_relocate_section): Likewise.
	* elf32-xtensa.c (elf_xtensa_relocate_section): Likewise.
	* elf64-alpha.c (elf64_alpha_relocate_section): Likewise.
	* elf64-ppc.c (ppc64_elf_relocate_section): Likewise.
	* elf64-s390.c (elf_s390_relocate_section): Likewise.
	* elf64-sh64.c (sh_elf64_relocate_section): Likewise.
	* elf64-x86-64.c (elf_x86_64_relocate_section): Likewise.
	* elfxx-sparc.c (_bfd_sparc_elf_relocate_section): Likewise.
	* elfxx-tilegx.c (tilegx_elf_relocate_section): Likewise.
ld/testsuite/
	* ld-elf/elf.exp: Move test for shared lib support..
	* lib/ld-lib.exp (check_shared_lib_support): ..to here. Add m68hc1*,
	and s/ms1/mt/.
	(check_gc_sections_available): Match hppa*64 not hppa64.  Comment.
	* ld-gc/libpersonality.s: New.
	* ld-gc/personality.s, * ld-gc/personality.d: New.
	* ld-gc/gc.exp: Run personality test.
@
text
@d2 1
a2 1
#   Copyright 2002, 2003, 2005, 2007, 2009, 2010, 2011
d80 1
d140 1
@


1.30
log
@Run --gc-sections tests only if supported.

2011-10-07  H.J. Lu  <hongjiu.lu@@intel.com>

	* ld-elf/elf.exp: Run --gc-sections tests only if --gc-sections
	is available.
@
text
@d61 1
a61 34
if {    ! [istarget arc-*-*]
     && ! [istarget avr-*-*]
     && ! [istarget cr16-*-*]
     && ! [istarget cris*-*-*]
     && ! [istarget crx-*-*]
     && ! [istarget d10v-*-*]
     && ! [istarget d30v-*-*]
     && ! [istarget dlx-*-*]
     && ! [istarget fr30-*-*]
     && ! [istarget frv-*-*]
     && ! [istarget h8300-*-*]
     && ! [istarget i860-*-*]
     && ! [istarget i960-*-*]
     && ! [istarget ip2k-*-*]
     && ! [istarget iq2000-*-*]
     && ! [istarget lm32-*-*]
     && ! [istarget m32c-*-*]
     && ! [istarget m32r-*-*]
     && ! [istarget mcore*-*-*]
     && ! [istarget mep-*-*]
     && ! [istarget microblaze-*-*]
     && ! [istarget mn10200-*-*]
     && ! [istarget moxie-*-*]
     && ! [istarget ms1-*-*]
     && ! [istarget msp430-*-*]
     && ! [istarget openrisc-*-*]
     && ! [istarget or32-*-*]
     && ! [istarget pj-*-*]
     && ! [istarget rx-*-*]
     && ! [istarget spu-*-*]
     && ! [istarget v850*-*-*]
     && ! [istarget xstormy16-*-*]
     && ! [istarget *-*-irix*]
     && ! [istarget *-*-rtems] } {
@


1.29
log
@Fix --gc-sections failure with symbol versioning.

bfd/

2011-09-28  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/13195
	* elflink.c (_bfd_elf_merge_symbol): Don't set dynamic_def when
	clearing def_dynamic.
	(elf_link_add_object_symbols): Likewise.  Set dynamic_def when
	setting def_dynamic.
	(bfd_elf_gc_mark_dynamic_ref_symbol): Check if a symbol is
	versioned.

ld/testsuite/

2011-09-28  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/13195
	* ld-elf/elf.exp: Add a C link testcase for PR ld/13195.

	* ld-elf/pr13195.c: New.
	* ld-elf/pr13195.d: Likewise.
	* ld-elf/pr13195.s: Likewise.
	* ld-elf/pr13195.t: Likewise.
@
text
@d141 5
a145 3
run_cc_link_tests {
    {"PR ld/13195" "-Wl,--gc-sections" ""
     {pr13195.c} {} "pr13195"}
@


1.28
log
@	* ld-elf/elf.exp: Exlcude all v850 targets from note-3 test.
@
text
@d141 5
@


1.28.2.1
log
@Fix --gc-sections failure with symbol versioning.

bfd/

2011-09-29  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/13195
	* elflink.c (_bfd_elf_merge_symbol): Don't set dynamic_def when
	clearing def_dynamic.
	(elf_link_add_object_symbols): Likewise.  Set dynamic_def when
	setting def_dynamic.
	(bfd_elf_gc_mark_dynamic_ref_symbol): Check if a symbol is
	versioned.

ld/testsuite/

2011-09-29  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/13195
	* ld-elf/elf.exp: Add a C link testcase for PR ld/13195.

	* ld-elf/pr13195.c: New.
	* ld-elf/pr13195.d: Likewise.
	* ld-elf/pr13195.s: Likewise.
	* ld-elf/pr13195.t: Likewise.
@
text
@a140 5
run_cc_link_tests {
    {"PR ld/13195" "-Wl,--gc-sections" ""
     {pr13195.c} {} "pr13195"}
}

@


1.27
log
@	* ld-elf/elf.exp: Exclude more targets from note-3 test.
@
text
@d91 1
a91 1
     && ! [istarget v850-*-*]
@


1.26
log
@* ld/testsuite/ld-elf/elf.exp: Execute array_tests_pie tests on *-*-gnu*, too.
@
text
@d72 2
d75 3
d80 2
d83 2
d90 1
d92 1
@


1.25
log
@	* ld-elf/elf.exp: Don't attempt to build symbol3.a for hppa64-hpux.
	* ld-elf/warn3.d: Correct target selection and comment.
@
text
@d153 2
a154 2
# Run PIE tests only on Linux.
if { [istarget "*-*-linux*"] } {
@


1.24
log
@	* elflink.c (_bfd_elf_link_create_dynamic_sections): If the
	backend does not provide a function for creating dynamic sections
	then fail.
	(bfd_elf_final_link): Issue a warning message if a dynamic section
	has the SHT_NOTE type.
	(bfd_elf_final_link): Do not look for dynamic strings in a section
	that does not have the SHT_STRTAB type or the name .dynstr.
	* elf32-arm.c (elf32_arm_finish_dynamic_sections): Fail if the got
	section is not in the output binary.
	* elf32-hppa.c (elf32_hppa_finish_dynamic_sections): Likewise.

	* ld-elf/elf.exp: Add test for linking a shared library with a
	broken linker script that marks dynamic sections as being notes.
	* ld-elf/note-3.s: New test source file.
	* ld-elf/note-3.t: New test linker script.
	* ld-elf/note-3.l: Expected output from the linker.
	* lib/ld-lib.exp (run_ld_link_tests): Improve description.
@
text
@d2 2
a3 1
#   Copyright 2002, 2003, 2005, 2007, 2009, 2010 Free Software Foundation, Inc.
d44 9
a52 7
run_ld_link_tests {
    {"Build symbol3.a"
     "" ""
     {symbol3.s} {} "symbol3.a"}
    {"Build symbol3w.a"
     "" ""
     {symbol3w.s} {} "symbol3w.a"}
@


1.23
log
@Add a testcase for warning on common symbol in archive.

2011-06-07  H.J. Lu  <hongjiu.lu@@intel.com>

	* ld-elf/elf.exp: Build symbol3.a and symbol3w.a.

	* ld-elf/symbol3.s: New.
	* ld-elf/symbol3w.s: Likewise.
	* ld-elf/warn3.d: Likewise.
@
text
@d52 39
@


1.22
log
@Remoe pr12730.cc/pr12730.out.

2011-05-09  H.J. Lu  <hongjiu.lu@@intel.com>

	* ld-elf/elf.exp (array_tests): Remove "pr12730".
	(array_tests_pie): Remove "PIE pr12730".
	(array_tests_static): Remove "static pr12730".

	* ld-elf/pr12730.cc: Removed.
	* ld-elf/pr12730.out: Likewise.
@
text
@d43 9
@


1.21
log
@Reverse copy .ctors/.dtors sections if needed.

bfd/

2011-05-07  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/12730
	* elf.c (_bfd_elf_section_offset): Check SEC_ELF_REVERSE_COPY.

	* elflink.c (elf_link_input_bfd): Reverse copy .ctors/.dtors
	sections if needed.

	* section.c (SEC_ELF_REVERSE_COPY): New.
	* bfd-in2.h: Regenerated.

ld/testsuite/

2011-05-07  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/12730
	* ld-elf/elf.exp (array_tests): Add "pr12730".
	(array_tests_pie): New.
	(array_tests_static): Add -static for "static init array mixed".
	Add "static pr12730".  Run array_tests_pie for Linux.

	* ld-elf/init-mixed.c (ctor1007): Renamed to ...
	(ctor1007a): This.
	(ctor1007b): New.
	(ctors1007): Remove ctor1007.  Add ctor1007b and ctor1007a.
	(dtor1007): Renamed to ...
	(dtor1007a): This.
	(dtor1007b): New.
	(dtors1007): Remove dtor1007.  Add dtor1007b and dtor1007a.
	(ctor65535): Renamed to ...
	(ctor65535a): This.
	(ctor65535b): New.
	(ctors65535): Remove ctor65535.  Add ctor65535b and ctor65535a.
	(dtor65535): Renamed to ...
	(dtor65535a): This.
	(dtor65535b): New.
	(dtors65535): Remove dtor65535.  Add dtor65535b and dtor65535a.

	* ld-elf/pr12730.cc: New.
	* ld-elf/pr12730.out: Likewise.
@
text
@a83 1
    {"pr12730" "" "" {pr12730.cc} "pr12730" "pr12730.out" "" "c++"}
a89 1
    {"PIE pr12730" "-pie" "" {pr12730.cc} "pr12730" "pr12730.out" "-fPIE" "c++"}
a95 1
    {"static pr12730" "-static" "" {pr12730.cc} "pr12730" "pr12730.out" "" "c++"}
@


1.20
log
@        * ld-elf/elf.exp: Force 32-bit start address for alpha.
        * ld-elf/group8a.d: Don't disable for alpha.
        * ld-elf/group8b.d: Likewise.
        * ld-gc/start.s: Use .dc.a instead of .long.
@
text
@d84 8
d97 2
a98 1
    {"static init array mixed" "" "" {init-mixed.c} "init-mixed" "init-mixed.out" "-I."}
d104 6
@


1.19
log
@Adjust URLs.
@
text
@d32 6
@


1.18
log
@Add SORT_BY_INIT_PRIORITY.

bfd/

2010-12-15  H.J. Lu  <hongjiu.lu@@intel.com>

	* elf.c (_bfd_elf_new_section_hook): Special handling for
	.init_array/.fini_array output sections.

ld/

2010-12-15  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.am (GENSCRIPTS): Add @@enable_initfini_array@@.

	* NEWS: Mention SORT_BY_INIT_PRIORITY.

	* configure.in: Add AC_CANONICAL_BUILD.
	Add --enable-initfini-array.

	* genscripts.sh (ENABLE_INITFINI_ARRAY): New.

	* ld.h (sort_type): Add by_init_priority.

	* ld.texinfo: Document SORT_BY_INIT_PRIORITY.

	* ldgram.y (SORT_BY_INIT_PRIORITY): New.
	(wildcard_spec): Handle SORT_BY_INIT_PRIORITY.

	* ldlang.c (get_init_priority): New.
	(compare_section): Use get_init_priority for by_init_priority.

	* ldlex.l (SORT_BY_INIT_PRIORITY): New.

	* scripttempl/elf.sc: Support ENABLE_INITFINI_ARRAY.

	* Makefile.in: Regenerated.
	* aclocal.m4: Regenerated.
	* config.in: Likewise.
	* configure: Likewise.

ld/testsuite/

2010-12-15  H.J. Lu  <hongjiu.lu@@intel.com>

	* ld-elf/elf.exp (array_tests): Add init-mixed.
	(array_tests_static): Likewise.
	Also delete tmpdir/init-mixed.

	* ld-elf/init-mixed.c: New.
	* ld-elf/init-mixed.out: Likewise.
@
text
@d92 1
a92 1
	# <http://www.gnu.org/software/hurd/open_issues/binutils/testsuite.html#static>
@


1.17
log
@Improve binutils testsuite coverage for GNU/Hurd.

binutils/testsuite/

	* lib/utils-lib.exp (is_elf_format): Consider for *-*-gnu*, too.
	* binutils-all/elfedit-2.d (target): Likewise.
	* binutils-all/elfedit-3.d (target): Likewise.
	* binutils-all/i386/i386.exp: Likewise.
	* binutils-all/objcopy.exp: Likewise.
	* binutils-all/strip-3.d (target): Likewise.

gas/testsuite/

	* lib/gas-defs.exp (is_elf_format): Consider for *-*-gnu*, too.
	* gas/elf/elf.exp: Likewise.
	* gas/symver/symver.exp: Likewise.

ld/

	* configure.host: Add stanza for *-*-gnu*.

ld/testsuite/

	* lib/ld-lib.exp (is_elf_format): Consider for *-*-gnu*, too.
	* ld-discard/discard.exp: Likewise.
	* ld-elf/binutils.exp: Likewise.
	* ld-elf/commonpage1.d (target): Likewise.
	* ld-elf/compress1c.d (target): Likewise.
	* ld-elf/discard1.d (target): Likewise.
	* ld-elf/discard2.d (target): Likewise.
	* ld-elf/discard3.d (target): Likewise.
	* ld-elf/dynsym1.d (target): Likewise.
	* ld-elf/eh6.d (target): Likewise.
	* ld-elf/elf.exp: Likewise.
	(array_tests): Move -static tests to...
	(array_tests_static): ... here, and handle it accordingly.
	* ld-elf/hash.d (target): Likewise.
	* ld-elf/header.d (target): Likewise.
	* ld-elf/loadaddr1.d (target): Likewise.
	* ld-elf/loadaddr2.d (target): Likewise.
	* ld-elf/loadaddr3a.d (target): Likewise.
	* ld-elf/loadaddr3b.d (target): Likewise.
	* ld-elf/local1.d (target): Likewise.
	* ld-elf/maxpage1.d (target): Likewise.
	* ld-elf/maxpage2.d (target): Likewise.
	* ld-elf/maxpage3a.d (target): Likewise.
	* ld-elf/multibss1.d (target): Likewise.
	* ld-elf/noload-2.d (target): Likewise.
	* ld-elf/seg.d (target): Likewise.
	* ld-elf/textaddr1.d (target): Likewise.
	* ld-elf/textaddr2.d (target): Likewise.
	* ld-elf/textaddr3.d (target): Likewise.
	* ld-elf/textaddr4.d (target): Likewise.
	* ld-elf/textaddr5.d (target): Likewise.
	* ld-elf/textaddr6.d (target): Likewise.
	* ld-elf/textaddr7.d (target): Likewise.
	* ld-elf/tls_common.exp: Likewise.
	* ld-elf/unknown2.d (target): Likewise.
	* ld-elfvers/vers.exp: Likewise.
	* ld-elfvsb/elfvsb.exp: Likewise.
	* ld-elfweak/elfweak.exp: Likewise.
	(setup_xfail_gnu_hurd): New function.  Use it where appropriate.
	* ld-gc/abi-note.d (target): Likewise.
	* ld-gc/gc.exp: Likewise.
	* ld-gc/pr11218.d (target): Likewise.
	* ld-gc/start.d (target): Likewise.
	* ld-i386/i386.exp: Likewise.
	* ld-ifunc/binutils.exp: Likewise.
	* ld-ifunc/ifunc.exp: Likewise.
	* ld-linkonce/linkonce.exp: Likewise.
	* ld-linkonce/zeroehl32.d (target): Likewise.
	* ld-pie/pie.exp: Likewise.
	* ld-scripts/phdrs2.exp: Likewise.
	* ld-scripts/rgn-at5.d (target): Likewise.
	* ld-shared/shared.exp: Likewise.
	* ld-undefined/entry-3.d (target): Likewise.
	* ld-undefined/entry-4.d (target): Likewise.
	* ld-undefined/weak-undef.exp: Likewise.
@
text
@d77 1
d83 1
d98 1
a98 1
catch "exec rm -f tmpdir/preinit tmpdir/init tmpdir/fini" status
@


1.16
log
@	* ld-elf/elf.exp: Don't run --gc-sections tls var test on v850.
	* ld-elf/group2.d: xfail xstormy.
	* ld-elf/group4.d: Likewise.
	* ld-elf/group5.d: Likewise.
	* ld-elf/group6.d: Likewise.
	* ld-elf/init-fini-arrays.d: xfail cr16 and crx.
	* ld-elf/orphan2.d: xfail xstormy.
	* ld-elf/sec64k.exp: Don't run on targets using generic linker.
	Allow a larger range for ld -r expected bar_1 section.  Don't run
	final link test on a number of targets.  Select avr6 for avr targets.
	* ld-elfcomm/elfcomm.exp: Don't attempt on hpux.
@
text
@d2 1
a2 1
#   Copyright 2002, 2003, 2005, 2007, 2009 Free Software Foundation, Inc.
d44 2
a45 1
if { [istarget *-*-linux*] } {
d75 4
a79 1
    {"init array" "" "" {init.c} "init" "init.out"}
a80 1
    {"fini array" "" "" {fini.c} "fini" "fini.out"}
d85 10
a94 1
run_ld_link_exec_tests [list "*-*-netbsdelf*"] $array_tests
@


1.16.2.1
log
@apply mainline testsuite fixes and tweaks
@
text
@d2 1
a2 1
#   Copyright 2002, 2003, 2005, 2007, 2009, 2010 Free Software Foundation, Inc.
d44 1
a44 2
if { [istarget *-*-linux*]
     || [istarget *-*-gnu*] } {
d74 1
d76 1
a77 4
}
set array_tests_static {
    {"static preinit array" "-static" "" {preinit.c} "preinit" "preinit.out"}
    {"static init array" "-static" "" {init.c} "init" "init.out"}
d82 1
a82 10
set xfails [list "*-*-netbsdelf*"]
run_ld_link_exec_tests $xfails $array_tests
# Be cautious to not XFAIL for *-*-linux-gnu*, *-*-kfreebsd-gnu*, etc.
switch -regexp $target_triplet {
    ^\[^-\]*-\[^-\]*-gnu.*$ {
	# <http://www.gnu.org/software/hurd/open_issues/binutils.html#static>
	lappend xfails "*-*-*"
    }
}
run_ld_link_exec_tests $xfails $array_tests_static
@


1.15
log
@update copyright dates
@
text
@d57 2
a58 1
if { [check_gc_sections_available] } {
@


1.14
log
@	* ld-elf/elf.exp: Save and restore LDFLAGS.
	* ld-scripts/default-script.exp: Likewise.
	* ld-scripts/empty-orphan.exp: Likewise, and add to LDFLAGS rather
	than replacing.
	* ld-scripts/include.exp: Set --local-store for SPU.
@
text
@d2 1
a2 1
#   Copyright 2002, 2003, 2005, 2007 Free Software Foundation, Inc.
@


1.13
log
@* elflink.c (elf_link_output_extsym): Weaken assertion: if --gc-section is set, there may be no TLS segment.
* lib/ld-lib.exp (check_gc_sections_available): New proc, based on the version in gcc/testsuite/lib/target-supports.exp.
* ld-elf/eld.exp: Use check_gc_sections_available.
@
text
@d28 1
d64 2
@


1.12
log
@bfd:
2007-08-28  Mark Shinwell  <shinwell@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* elf32-arm.c (elf32_arm_compare_mapping): Compare first on vma,
	then on type.

binutils/testsuite:
2007-08-28  Mark Shinwell  <shinwell@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* binutils-all/ar.exp (long_filenames): Delete temporary files on
	the host.
	* binutils-all/arm/objdump.exp: Only check "which $OBJDUMP" if
	host is local.
	* binutils-all/objcopy.exp: Use ${srecfile} to get the name of the
	srec file to be passed to binutils_run.
	(objcopy_test_readelf): Use remote_exec.
	* binutils-all/readelf.exp (readelf_find_size): Use remote_exec.
	(readelf_test): Likewise.
	(readelf_wi_test): Likewise.
	* lib/utils-lib.exp (run_dump_test): Only check "which $binary" if
	host is local.  Use remote_exec.  Use $tempfile not
	tmpdir/bintest.o.

gas:
2007-08-28  Mark Shinwell  <shinwell@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* as.c (main): Flush stderr before printing listings to ensure
	consistent output order across platforms.

gas/testsuite:
2007-08-28  Mark Shinwell  <shinwell@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* lib/gas-defs.exp (gas_version): Use remote_* functions instead
	of exec.
	(gas_host_run): New.
	(gas_run): Use gas_host_run.
	(gas_start): Likewise.
	(run_dump_test): Likewise.
	(objdump): Use gas_host_run.
	(objdump_start_no_subdir): Likewise.
	* lib/gas-dg.exp (gas-dg-test): Use "remote_file host delete".
	* lib/run: Remove.
	* gas/macros/macros.exp: Download app4b.s to host.
	* gas/i386/i386.exp (gas_64_check): Use gas_host_run.
	(gas_32_check): Likewise.
	* gas/maxq10/maxq10.exp (gas_64_check): Likewise
	(gas_32_check): Likewise.
	* gas/maxq20/maxq20.exp (gas_64_check): Likewise
	(gas_32_check): Likewise.
	* gas/sparc/sparc.exp (gas_64_check): Likewise.
	* gas/cfi/cfi.exp: Likewise.
	* gas/elf/elf.exp (run_list_test): Likewise.  Use temporary file
	for readelf output in place of pipe.
	* gas/all/gas.exp: Download incbin.dat to host.
	(do_comment): Allow \r\r\n.

ld:
2007-08-28  Mark Shinwell  <shinwell@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* ldlang.c (sort_sections_by_lma): Sort by internal id after lma
	for stable sort.

ld/testsuite:
2007-08-28  Mark Shinwell  <shinwell@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* ld-elfcomm/elfcomm.exp: Use run_host_cmd.  Only check "which
	$CC" if host is local.
	* ld-checks/checks.exp: Use run_host_cmd.
	* ld-elf/exclude.exp: Likewise.
	* ld-elf/elf.exp: Download merge.ld if host is remote.
	* ld-elf/binutils.exp (binutils_test): Use remote_exec.
	* ld-elf/tls_common.exp: Use run_host_cmd.
	* lib/ld-lib.exp (ld_version): Only check "which $ld" if host is
	local.  Use remote_exec.
	(run_host_cmd): New.
	(run_host_cmd_yesno): New.
	(default_ld_relocate): Use run_host_cmd_yesno.
	(default_ld_link): Likewise.
	(default_ld_simple_link): Use run_host_cmd.
	(default_ld_compile): Only check "which $ccprog" if host is local.
	Use remote_file and remote_exec.
	(default_ld_assemble): Only check "which $as" if host is local.
	Use run_host_cmd.
	(default_ld_nm): Use remote_exec, remote_upload and remote_file.
	(run_dump_test): Use remote_exec, remote_upload and remote_file.
	Only check "which $binary" if host is local.
	(run_ld_link_tests): Use remote_exec, remote_upload and
	remote_file.
	* ld-selective/selective.exp: Only check "which $CXX" if host is
	local.  Use remote_exec.
	* ld-scripts/phdrs.exp: Only check "which $objdump" if host is
	local.  Use run_host_cmd.
	* ld-scripts/phdrs2.exp: Likewise.
	* ld-scripts/weak.exp: Likewise.
	* ld-undefined/weak-undef.exp: Likewise.
	* ld-scripts/crossref.exp: Only check "which $CC" if host is local.
	Use run_host_cmd.
	* ld-scripts/map-address.exp: Upload map_address.map if host is
	remote.
	* ld-srec/srec.exp (run_srec_tests): Use run_host_cmd.  Only check
	"which $CC" and "which $CXX" if host is local.
	* ld-undefined/undefined.exp: Only check "which $CC" if host is
	local.  Use remote_file and run_host_cmd.
	* config/default.exp: Use remote_exec to create tmpdir.
@
text
@d56 7
@


1.11
log
@bfd/
	* elflink.c (_bfd_elf_fix_symbol_flags): Only assert the type
	of weakdef->root.type if weakdef has no regular definition.

ld/testsuite/
	* ld-elf/weak-dyn-1a.s, ld-elf/weak-dyn-1b.s, ld-elf/weak-dyn-1.ld,
	* ld-elf/weak-dyn-1.rd: New test.
	* ld-elf/elf.exp: Run it.
@
text
@d32 4
@


1.10
log
@Update sources to GPLv3
@
text
@d39 13
@


1.9
log
@	* ld-elf/elf.exp: Add "--local-store 0:0" to LDFLAGS for spu.
@
text
@d4 3
a6 1
# This file is free software; you can redistribute it and/or modify
d8 1
a8 1
# the Free Software Foundation; either version 2 of the License, or
d18 2
a19 1
# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.
@


1.8
log
@binutils/testsuite/
2005-11-15  Jan Beulich  <jbeulich@@novell.com>

	* config/default.exp (link_or_copy): New. Use it for setting
	up assembler and linker for the compiler to use.

ld/testsuite/
2005-11-15  Jan Beulich  <jbeulich@@novell.com>

	* ld-bootstrap/bootstrap.exp: Delete ld-partial.o and ld[123]*
	after test.
	* ld-elf/elf.exp: Delete preinit, init, and fini after test.
	* ld-elf/sec64k.exp: Use macro and repeat in generated source
	files. Delete object files after test.
@
text
@d2 1
a2 1
#   Copyright 2002, 2003 Free Software Foundation, Inc.
d25 4
@


1.7
log
@	* lib/ld-lib.exp (run_ld_link_exec_tests): Add new parameter
	${targets_to_xfail} that is applied for each test item.
	* ld-elf/elf.exp: Pass *-*-netbsdelf* as an xfailed target.
@
text
@d48 2
@


1.6
log
@2005-07-14  H.J. Lu  <hongjiu.lu@@intel.com>

	* ld-elf/elf.exp (array_tests): New.
	Call run_ld_link_exec_tests with array_tests.

	* ld-elf/fini.c: New file.
	* ld-elf/fini.out: Likewise.
	* ld-elf/init.c: Likewise.
	* ld-elf/init.out: Likewise.
	* ld-elf/preinit.c: Likewise.
	* ld-elf/preinit.out: Likewise.

	* lib/ld-lib.exp (run_ld_link_exec_tests): New.
@
text
@d46 2
a47 1
run_ld_link_exec_tests $array_tests
@


1.5
log
@Update FSF addresses
@
text
@d31 16
@


1.4
log
@update copyright dates
@
text
@d16 1
a16 1
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
@


1.3
log
@* ld-elf/elf.exp: Use if_elf_format.
* ld-elf/sec64k.exp: Likewise.
* ld-elfcomm/elfcomm.exp: Likewise.
* lib/ld-lib.exp (is_elf_format): Match hppa*64*-*-hpux*.
@
text
@d2 1
a2 1
#   Copyright 2002 Free Software Foundation, Inc.
@


1.2
log
@	* ld-elf/elf.exp: Remove sec64k test.
	* ld-elf/sec64k.exp: Reinstate.
@
text
@d21 1
a21 9
if { ![istarget *-*-linux*] \
     && ![istarget *-*-gnu] \
     && ![istarget hppa*64*-*-hpux*] \
     && ![istarget *-*-elf] } {
    return
}

if { [istarget *-*-linux*aout*] \
     || [istarget *-*-linux*oldld*] } {
@


1.1
log
@	* ld-elf/elf.exp: Renamed from sec64k.exp.  Add test_list loop.
	* ld-elf/merge.s: New file.
	* ld-elf/merge.d: New file.
	* ld-elf/merge.ld: New file.
@
text
@a17 2
# Written by Hans-Peter Nilsson (hp@@axis.com)
#
a38 126


# Test >64k sections, with and without -r.

# Per-port excludes, since this test takes an overwhelmingly long time
# currently.
if { ![istarget cris-*-*] } {
    return
}

# First, create the assembly files.  Have a relocation to another
# section and one within the local section.

set test1 "64ksec-r"
set test2 "64ksec"

if { ![runtest_file_p $runtests $test1] \
	&& ![runtest_file_p $runtests $test2] } {
    return
}

set sfiles {}
set max_sec 66000
set secs_per_file 1000
set secn 0
for { set i 0 } { $i < $max_sec / $secs_per_file } { incr i } {
    set sfile "$objdir/tmpdir/sec64-$i.s"
    lappend sfiles $sfile
    if [catch { set ofd [open $sfile w] } x] {
	perror "$x"
	unresolved $test1
	unresolved $test2
	return
    }

    if { $secn == 0 } {
	puts $ofd " .global _start"
	puts $ofd "_start:"
	puts $ofd " .global foo_0"
	puts $ofd "foo_0: .long 0"
    }

    # Make sure the used section is not covered by common linker scripts.
    # They should get separate section entries even without -r.
    for { set j 0 } { $j < $secs_per_file } { incr j } {
	incr secn
	puts $ofd " .section .foo.$secn,\"ax\""
	puts $ofd " .global foo_$secn"
	puts $ofd "foo_$secn:"
	puts $ofd " .long foo_[expr $secn - 1]"
	puts $ofd "bar_$secn:"
	puts $ofd " .long bar_$secn"
    }

    close $ofd
}

if [catch { set ofd [open "tmpdir/$test1.d" w] } x] {
    perror "$x"
    unresolved $test1
    unresolved $test2
    return
}

# The ld-r linked file will contain relocation-sections too, so make it
# half the size in order to try and keep the test-time down.
foreach sfile [lrange $sfiles 0 [expr [llength $sfiles] / 2]] {
    puts $ofd "#source: $sfile"
}
puts $ofd "#ld: -r"
puts $ofd "#readelf: -W -Ss"
puts $ofd "There are 680.. section headers.*:"
puts $ofd "#..."
puts $ofd "  \\\[ 0\\\] .* 682\[0-9\]\[0-9\]\[ \]+0\[ \]+0"
puts $ofd "#..."
puts $ofd "  \\\[ \[0-9\]\\\] \.foo\.1\[ \]+PROGBITS\[ \]+.*"
puts $ofd "#..."
puts $ofd "  \\\[65279\\\] (.rel\[a\]?)?\\.foo\\.\[0-9\]+ .*"
puts $ofd "  \\\[65536\\\] (.rel\[a\]?)?\\.foo\\.\[0-9\]+ .*"
puts $ofd "#..."
puts $ofd " 680..: 0+\[ \]+0\[ \]+SECTION\[ \]+LOCAL\[ \]+DEFAULT\[ \]+68... "
puts $ofd "#..."
puts $ofd " 680..: 0+4\[ \]+0\[ \]+NOTYPE\[ \]+LOCAL\[ \]+DEFAULT\[ \]+2 bar_1"
puts $ofd "#..."
puts $ofd ".* bar_34000"
puts $ofd "#..."
# Global symbols are not in "alphanumeric" order, so we just check
# that the first and the last are present in any order (assuming no
# duplicates).
puts $ofd ".* (\[0-9\] foo_1|68... foo_34000)"
puts $ofd "#..."
puts $ofd ".* (\[0-9\] foo_1|68... foo_34000)"
puts $ofd "#pass"
close $ofd
run_dump_test "tmpdir/$test1"

if [catch { set ofd [open "tmpdir/$test2.d" w] } x] {
    perror "$x"
    unresolved $test2
    return
}
foreach sfile $sfiles { puts $ofd "#source: $sfile" }
puts $ofd "#ld:"
puts $ofd "#readelf: -W -Ss"
puts $ofd "There are 660.. section headers.*:"
puts $ofd "#..."
puts $ofd "  \\\[ 0\\\] .* 662..\[ \]+0\[ \]+0"
puts $ofd "#..."
puts $ofd "  \\\[65279\\\] \\.foo\\.\[0-9\]+ .*"
puts $ofd "  \\\[65536\\\] \\.foo\\.\[0-9\]+ .*"
puts $ofd "#..."
puts $ofd " 660..: 0+\[ \]+0\[ \]+SECTION\[ \]+LOCAL\[ \]+DEFAULT\[ \]+662.. "
puts $ofd "#..."
puts $ofd " 660..: \[0-9a-f\]+\[ \]+0\[ \]+NOTYPE\[ \]+LOCAL\[ \]+DEFAULT\[ \]+\[0-9\] bar_1"
puts $ofd "#..."
puts $ofd ".* bar_66000"
puts $ofd "#..."
# Global symbols are not in "alphanumeric" order, so we just check
# that the first and the last are present in any order (assuming no
# duplicates).
puts $ofd ".* (\[0-9\] foo_1|66... foo_66000)"
puts $ofd "#..."
puts $ofd ".* (\[0-9\] foo_1|66... foo_66000)"
puts $ofd "#pass"
close $ofd
run_dump_test "tmpdir/$test2"
@

