head	1.2;
access;
symbols
	binutils-2_24-branch:1.2.0.8
	binutils-2_24-branchpoint:1.2
	binutils-2_23_2:1.2
	binutils-2_23_1:1.2
	binutils-2_23:1.2
	binutils-2_23-branch:1.2.0.6
	binutils-2_23-branchpoint:1.2
	binutils-2_22_branch:1.2.0.4
	binutils-2_22:1.2
	binutils-2_22-branch:1.2.0.2
	binutils-2_22-branchpoint:1.2
	binutils_latest_snapshot:1.2;
locks; strict;
comment	@# @;


1.2
date	2011.06.14.02.55.29;	author amodra;	state Exp;
branches;
next	1.1;

1.1
date	2011.06.08.04.47.04;	author hjl;	state Exp;
branches;
next	;


desc
@@


1.2
log
@	* ld-elf/elf.exp: Don't attempt to build symbol3.a for hppa64-hpux.
	* ld-elf/warn3.d: Correct target selection and comment.
@
text
@#source: start.s
#ld: tmpdir/symbol3w.o tmpdir/symbol3.a 
#warning: .*: warning: badsym warning$
#readelf: -s
#notarget: hppa64*-hpux*
#xfail: arc-*-* d30v-*-* dlx-*-* i960-*-* or32-*-* pj*-*-*
# generic linker targets don't support .gnu.warning sections.

# Check that warnings are generated for the symbols in .gnu.warning
# construct and that the symbol still appears as expected.

#...
 +[0-9]+: +[0-9a-f]+ +4 +OBJECT +GLOBAL +DEFAULT +[1-9] badsym
#pass
@


1.1
log
@Add a testcase for warning on common symbol in archive.

2011-06-07  H.J. Lu  <hongjiu.lu@@intel.com>

	* ld-elf/elf.exp: Build symbol3.a and symbol3w.a.

	* ld-elf/symbol3.s: New.
	* ld-elf/symbol3w.s: Likewise.
	* ld-elf/warn3.d: Likewise.
@
text
@d5 3
a7 4
#notarget: "sparc64-*-solaris2*" "sparcv9-*-solaris2*"
#xfail: arc-*-* d30v-*-* dlx-*-* fr30-*-* frv-*-elf i860-*-* i960-*-*
#xfail: iq*-*-* mn10200-*-* moxie-*-* msp*-*-* mt-*-* or32-*-* pj*-*-*
# if not using elf32.em, you don't get fancy section handling
@

