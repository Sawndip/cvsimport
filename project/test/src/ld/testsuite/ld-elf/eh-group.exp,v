head	1.8;
access;
symbols
	binutils-2_24-branch:1.8.0.2
	binutils-2_24-branchpoint:1.8
	binutils-2_21_1:1.7
	binutils-2_23_2:1.7
	binutils-2_23_1:1.7
	binutils-2_23:1.7
	binutils-2_23-branch:1.7.0.10
	binutils-2_23-branchpoint:1.7
	binutils-2_22_branch:1.7.0.8
	binutils-2_22:1.7
	binutils-2_22-branch:1.7.0.6
	binutils-2_22-branchpoint:1.7
	binutils-2_21:1.7
	binutils-2_21-branch:1.7.0.4
	binutils-2_21-branchpoint:1.7
	binutils-2_20_1:1.7
	binutils-2_20:1.7
	binutils-arc-20081103-branch:1.3.0.4
	binutils-arc-20081103-branchpoint:1.3
	binutils-2_20-branch:1.7.0.2
	binutils-2_20-branchpoint:1.7
	dje-cgen-play1-branch:1.6.0.2
	dje-cgen-play1-branchpoint:1.6
	arc-20081103-branch:1.3.0.2
	arc-20081103-branchpoint:1.3
	binutils-2_19_1:1.1.2.2
	binutils-2_19:1.1.2.2
	binutils_latest_snapshot:1.8
	binutils-2_19-branch:1.1.0.2;
locks; strict;
comment	@# @;


1.8
date	2013.02.19.01.09.58;	author macro;	state Exp;
branches;
next	1.7;

1.7
date	2009.09.02.07.25.39;	author amodra;	state Exp;
branches;
next	1.6;

1.6
date	2009.05.07.15.07.32;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	2009.05.07.13.44.43;	author nickc;	state Exp;
branches;
next	1.4;

1.4
date	2009.02.01.12.05.25;	author jkratoch;	state Exp;
branches;
next	1.3;

1.3
date	2008.09.25.03.16.42;	author amodra;	state Exp;
branches;
next	1.2;

1.2
date	2008.09.20.08.42.53;	author jkratoch;	state Exp;
branches;
next	1.1;

1.1
date	2008.09.17.07.50.29;	author jkratoch;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2008.09.17.08.18.20;	author jkratoch;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2008.10.02.10.12.35;	author gingold;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2009.03.02.13.53.31;	author amodra;	state Exp;
branches;
next	;


desc
@@


1.8
log
@	* lib/ld-lib.exp (run_ld_link_tests): Add another argument, pass
	its contents to ar_simple_create and ld_simple_link after
	objfiles.
	* ld-aarch64/aarch64-elf.exp: Adjust accordingly.
	* ld-alpha/alpha.exp: Likewise.
	* ld-arm/arm-elf.exp: Likewise.
	* ld-arm/export-class.exp: Likewise.
	* ld-elf/comm-data.exp: Likewise.
	* ld-elf/eh-group.exp: Likewise.
	* ld-elf/elf.exp: Likewise.
	* ld-elf/export-class.exp: Likewise.
	* ld-elfvers/vers.exp: Likewise.
	* ld-frv/tls.exp: Likewise.
	* ld-i386/export-class.exp: Likewise.
	* ld-i386/i386.exp: Likewise.
	* ld-ia64/ia64.exp: Likewise.
	* ld-libs/libs.exp: Likewise.
	* ld-m68k/m68k.exp: Likewise.
	* ld-metag/metag.exp: Likewise.
	* ld-mips-elf/comm-data.exp: Likewise.
	* ld-mips-elf/export-class.exp: Likewise.
	* ld-mips-elf/mips-elf.exp: Likewise.
	* ld-mn10300/mn10300.exp: Likewise.
	* ld-pe/pe-compile.exp: Likewise.
	* ld-pe/pe.exp: Likewise.
	* ld-plugin/plugin.exp: Likewise.
	* ld-powerpc/aix52.exp: Likewise.
	* ld-powerpc/export-class.exp: Likewise.
	* ld-powerpc/powerpc.exp: Likewise.
	* ld-s390/s390.exp: Likewise.
	* ld-sh/sh-vxworks.exp: Likewise.
	* ld-sh/sh64/sh64.exp: Likewise.
	* ld-sparc/sparc.exp: Likewise.
	* ld-tic6x/tic6x.exp: Likewise.
	* ld-tilegx/tilegx.exp: Likewise.
	* ld-tilepro/tilepro.exp: Likewise.
	* ld-undefined/entry.exp: Likewise.
	* ld-vax-elf/vax-elf.exp: Likewise.
	* ld-x86-64/dwarfreloc.exp: Likewise.
	* ld-x86-64/export-class.exp: Likewise.
	* ld-x86-64/x86-64.exp: Likewise.
	* ld-xc16x/xc16x.exp: Likewise.
	* ld-xstormy16/xstormy16.exp: Likewise.
	* ld-xtensa/xtensa.exp: Likewise.
@
text
@# Expect script for .eh_frame entries to a removed section.
#   Copyright 2008, 2009  Free Software Foundation, Inc.
#
# This file is part of the GNU Binutils.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
# MA 02110-1301, USA.
#

#
# Written by Jan Kratochvil (jan.kratochvil@@redhat.com)
#
# .eh_frame with relocations to a removed (group) section did result to:
# error in tmpdir/eh-group.o(.eh_frame); no .eh_frame_hdr table will be created.
# The purpose of this test is to merge two .o files with -r and then link this
# merged file (containing a discarded R_X86_64_NONE relocation) to the final
# executable trying to create .eh_frame_hdr.  It needs a separate .exp file due
# to the requirement of two `ld' runs.

# Exclude non-CFI (such as ia64) targets.

if {![check_as_cfi]} {
    return
}

# The test uses ELF .section directive
if ![is_elf_format] {
    return
}

# alpha-linux-gnu does not support 64-bit relocations:
#   relocation truncated to fit: REFLONG against `.gcc_except_table'
# arm-eabi does not support 64-bit relocations:
#   bad relocation fixup type (1)
set testname "Guess the target size from eh-group1size.o"
if [ld_assemble $as "$srcdir/$subdir/eh-group1.s" "tmpdir/eh-group1size.o"] {
    pass $testname
} else {
    fail $testname
}

set as_options ""
if [is_elf64 "tmpdir/eh-group1size.o"] {
    set as_options "$as_options --defsym ELF64=1"
}

set build_tests_ld [list			\
  [list "Build eh-group1.o"			\
   "-r" "" "$as_options"			\
   {eh-group1.s eh-group2.s} {} "eh-group.o"]	\
]

run_ld_link_tests $build_tests_ld

set testname "Link eh-group.o to eh-group"
if [ld_simple_link $ld "tmpdir/eh-group" "-e _start tmpdir/eh-group.o"] {
    pass $testname
} else {
    fail $testname
}
@


1.7
log
@update copyright dates
@
text
@d61 1
a61 1
   "-r" "$as_options"				\
@


1.6
log
@Revert previous delta
@
text
@d2 1
a2 1
#   Copyright 2008  Free Software Foundation, Inc.
@


1.5
log
@        * ld-elf/eh-group.exp: Only run these tests for ELF based
        targets.
@
text
@a31 6
# Exclude non-ELF targets.

if ![is_elf_format] {
    return
}

@


1.4
log
@bfd/
	* elf-eh-frame.c (REQUIRE_CLEARED_RELOCS) Remove.
	(_bfd_elf_parse_eh_frame): Do not check relocations for removed FDEs.

ld/testsuite/
	* ld-elf/eh-group2.s: New `.cfi_lsda' referencing `.gcc_except_table'.
	* ld-elf/eh-group.exp: New test and conditional defininiton of `ELF64'.
@
text
@d32 6
@


1.3
log
@	* ld-elf/eh-group.exp: Only run on ELF targets.
	* ld-elf/eh5b.s: Export main, start, __start.
@
text
@d43 9
a51 4
set build_tests_ld {
  {"Build eh-group1.o"
   "-r" ""
   {eh-group1.s eh-group2.s} {} "eh-group.o"}
d54 11
@


1.2
log
@	Provide virtual target "cfi" for targets supporting CFI.
	* ld-elf/eh-frame-hdr.d: Replace target and xfail statements by single
	`target: cfi'.
	* ld-elf/eh-group.exp: Call check_as_cfi instead of is_elf_format.
	* ld-elf/eh-group1.s, elf/eh-group2.s: Use more compatible section
	flags prefix '%'.
	* ld-elf/eh5.d: Replace target statement by `target: cfi' with an Alpha
	exception.  Relax the `Code alignment factor' matching.
	* lib/ld-lib.exp: Rename istarget as istarget_ld.
	(istarget, check_as_cfi): New procedure.
	(run_dump_test): New comment for the virtual target `cfi'.
@
text
@d38 5
@


1.1
log
@bfd/
	PR 6893 - Do not consider FDEs for discarded sections as invalid.
	* elf-eh-frame.c (_bfd_elf_parse_eh_frame): New REQUIRE_CLEARED_RELOCS.
	Consider FDEs with cleared relocations as valid and ignorable.

ld/testsuite/
	* ld-elf/eh-group.exp, ld-elf/eh-group1.s, ld-elf/eh-group2.s: New test.

binutils/
	Suppress warnings on NONE relocations to discarded sections.
	* readelf.c (is_none_reloc): New function.
	(debug_apply_relocations): Ignore is_none_reloc() relocations.
@
text
@d32 1
a32 1
# Exclude non-ELF targets.
d34 1
a34 1
if ![is_elf_format] {
@


1.1.2.1
log
@bfd/
	PR 6893 - Do not consider FDEs for discarded sections as invalid.
	* elf-eh-frame.c (_bfd_elf_parse_eh_frame): New REQUIRE_CLEARED_RELOCS.
	Consider FDEs with cleared relocations as valid and ignorable.

ld/testsuite/
	* ld-elf/eh-group.exp, ld-elf/eh-group1.s, ld-elf/eh-group2.s: New test.

binutils/
	Suppress warnings on NONE relocations to discarded sections.
	* readelf.c (is_none_reloc): New function.
	(debug_apply_relocations): Ignore is_none_reloc() relocations.
@
text
@@


1.1.2.2
log
@Port to 2.19 of http://sourceware.org/ml/binutils-cvs/2008-09/msg00107.html:

	Provide virtual target "cfi" for targets supporting CFI.
	* ld-elf/eh-frame-hdr.d: Replace target and xfail statements by single
	`target: cfi'.
	* ld-elf/eh-group.exp: Call check_as_cfi instead of is_elf_format.
	* ld-elf/eh-group1.s, elf/eh-group2.s: Use more compatible section
	flags prefix '%'.
	* ld-elf/eh5.d: Replace target statement by `target: cfi' with an Alpha
	exception.  Relax the `Code alignment factor' matching.
	* lib/ld-lib.exp: Rename istarget as istarget_ld.
	(istarget, check_as_cfi): New procedure.
	(run_dump_test): New comment for the virtual target `cfi'.
@
text
@d32 1
a32 1
# Exclude non-CFI (such as ia64) targets.
d34 1
a34 1
if {![check_as_cfi]} {
@


1.1.2.3
log
@backport 2009-02-01  Jan Kratochvil  <jan.kratochvil@@redhat.com>
@
text
@d38 4
a41 9
# alpha-linux-gnu does not support 64-bit relocations:
#   relocation truncated to fit: REFLONG against `.gcc_except_table'
# arm-eabi does not support 64-bit relocations:
#   bad relocation fixup type (1)
set testname "Guess the target size from eh-group1size.o"
if [ld_assemble $as "$srcdir/$subdir/eh-group1.s" "tmpdir/eh-group1size.o"] {
    pass $testname
} else {
    fail $testname
a43 11
set as_options ""
if [is_elf64 "tmpdir/eh-group1size.o"] {
    set as_options "$as_options --defsym ELF64=1"
}

set build_tests_ld [list			\
  [list "Build eh-group1.o"			\
   "-r" "$as_options"				\
   {eh-group1.s eh-group2.s} {} "eh-group.o"]	\
]

@


