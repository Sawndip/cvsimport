head	1.1;
access;
symbols
	binutils-2_24-branch:1.1.0.8
	binutils-2_24-branchpoint:1.1
	binutils-2_23_2:1.1
	binutils-2_23_1:1.1
	binutils-2_23:1.1
	binutils-2_23-branch:1.1.0.6
	binutils-2_23-branchpoint:1.1
	binutils-2_22_branch:1.1.0.4
	binutils-2_22:1.1
	binutils-2_22-branch:1.1.0.2
	binutils-2_22-branchpoint:1.1
	binutils_latest_snapshot:1.1;
locks; strict;
comment	@# @;


1.1
date	2011.06.10.14.04.25;	author nickc;	state Exp;
branches;
next	;


desc
@@


1.1
log
@	* elflink.c (_bfd_elf_link_create_dynamic_sections): If the
	backend does not provide a function for creating dynamic sections
	then fail.
	(bfd_elf_final_link): Issue a warning message if a dynamic section
	has the SHT_NOTE type.
	(bfd_elf_final_link): Do not look for dynamic strings in a section
	that does not have the SHT_STRTAB type or the name .dynstr.
	* elf32-arm.c (elf32_arm_finish_dynamic_sections): Fail if the got
	section is not in the output binary.
	* elf32-hppa.c (elf32_hppa_finish_dynamic_sections): Likewise.

	* ld-elf/elf.exp: Add test for linking a shared library with a
	broken linker script that marks dynamic sections as being notes.
	* ld-elf/note-3.s: New test source file.
	* ld-elf/note-3.t: New test linker script.
	* ld-elf/note-3.l: Expected output from the linker.
	* lib/ld-lib.exp (run_ld_link_tests): Improve description.
@
text
@PHDRS
{
  text PT_LOAD FILEHDR PHDRS ;
  note PT_NOTE;
}
SECTIONS
{
  . = . + SIZEOF_HEADERS ;
  .text : { *(.text) *(.rodata) } :text
  .note : { *(.note) } :note :text

  /* BUG:  This linker script is broken here.  It has not reset the
     output segment for the following sections, so they are all
     treated as notes...   */
  
  .hash : { *(.hash) }
  
  .dynstr : { *(.dynstr) }
  .dynsym : { *(.dynsym) }
  .got.plt : { *(.got.plt) *(.igot.plt) }
  /DISCARD/ : { *(*) }
}
@
