head	1.4;
access;
symbols
	binutils-2_24-branch:1.4.0.14
	binutils-2_24-branchpoint:1.4
	binutils-2_21_1:1.4
	binutils-2_23_2:1.4
	binutils-2_23_1:1.4
	binutils-2_23:1.4
	binutils-2_23-branch:1.4.0.12
	binutils-2_23-branchpoint:1.4
	binutils-2_22_branch:1.4.0.10
	binutils-2_22:1.4
	binutils-2_22-branch:1.4.0.8
	binutils-2_22-branchpoint:1.4
	binutils-2_21:1.4
	binutils-2_21-branch:1.4.0.6
	binutils-2_21-branchpoint:1.4
	binutils-2_20_1:1.4
	binutils-2_20:1.4
	binutils-arc-20081103-branch:1.3.0.6
	binutils-arc-20081103-branchpoint:1.3
	binutils-2_20-branch:1.4.0.4
	binutils-2_20-branchpoint:1.4
	dje-cgen-play1-branch:1.4.0.2
	dje-cgen-play1-branchpoint:1.4
	arc-20081103-branch:1.3.0.4
	arc-20081103-branchpoint:1.3
	binutils-2_19_1:1.3
	binutils-2_19:1.3
	binutils-2_19-branch:1.3.0.2
	binutils-2_19-branchpoint:1.3
	binutils-2_18:1.2
	binutils-2_18-branch:1.2.0.2
	binutils-2_18-branchpoint:1.2
	binutils-csl-coldfire-4_1-32:1.1.2.1
	binutils-csl-sourcerygxx-4_1-32:1.1.2.1
	binutils-csl-innovasic-fido-3_4_4-33:1.1.2.1
	binutils-csl-coldfire-4_1-30:1.1.2.1
	binutils-csl-sourcerygxx-4_1-30:1.1.2.1
	binutils-csl-coldfire-4_1-28:1.1.2.1
	binutils-csl-sourcerygxx-4_1-29:1.1.2.1
	binutils-csl-sourcerygxx-4_1-28:1.1.2.1
	binutils-csl-arm-2006q3-27:1.1.2.1
	binutils-csl-sourcerygxx-4_1-27:1.1.2.1
	binutils-csl-arm-2006q3-26:1.1.2.1
	binutils-csl-sourcerygxx-4_1-26:1.1.2.1
	binutils-csl-sourcerygxx-4_1-25:1.1.2.1
	binutils_latest_snapshot:1.4
	binutils-csl-sourcerygxx-4_1-24:1.1.2.1
	binutils-csl-sourcerygxx-4_1-23:1.1.2.1
	binutils-csl-sourcerygxx-4_1-21:1.1.2.1
	binutils-csl-arm-2006q3-21:1.1.2.1
	binutils-csl-sourcerygxx-4_1-22:1.1.2.1
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.1.2.1
	binutils-csl-sourcerygxx-4_1-20:1.1.2.1
	binutils-csl-arm-2006q3-19:1.1.2.1
	binutils-csl-sourcerygxx-4_1-19:1.1.2.1
	binutils-csl-sourcerygxx-4_1-18:1.1.2.1
	binutils-csl-renesas-4_1-9:1.1.2.1
	binutils-csl-2_17-branch:1.1.0.2;
locks; strict;
comment	@# @;


1.4
date	2009.02.23.10.03.47;	author clyon;	state Exp;
branches;
next	1.3;

1.3
date	2008.05.15.17.00.15;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	2006.10.17.15.46.21;	author shinwell;	state Exp;
branches;
next	1.1;

1.1
date	2006.08.24.14.49.52;	author shinwell;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2006.08.24.14.49.52;	author shinwell;	state Exp;
branches;
next	;


desc
@@


1.4
log
@2009-02-23  Christophe Lyon  <christophe.lyon@@st.com>

	bfd/
	* elf32-arm.c (elf32_arm_stub_long_branch_thumb_only): Fix stub
	code.
	(elf32_arm_stub_long_branch_v4t_thumb_arm): Likewise.
	(arm_type_of_stub): Use Thumb-only long branch stub (non-PIC) when
	BLX is not available. Fix typo in warning message. Add comments
	and improve formatting.
	(arm_build_one_stub): Adjust to new
	elf32_arm_stub_long_branch_v4t_thumb_arm stub.
	(arm_map_one_stub): Likewise.

	testsuite/
	* ld-arm/arm-elf.exp: Rewrite non-EABI variants of
	thumb2-bl-as-thumb1-bad and thumb2-bl-bad tests, which now
	pass. farcall-thumb-thumb now passes in EABI mode.
	* ld-arm/farcall-thumb-arm-pic-veneer.d: Fixed name, source, as
	and ld flags to match intended test.
	* ld-arm/farcall-thumb-arm.d: New expected result.
	* ld-arm/farcall-thumb-thumb-m.d: Likewise.
	* ld-arm/farcall-thumb-thumb-m-pic-veneer.d: Fixed name and ld
	flags.
	* ld-arm/farcall-thumb-thumb-pic-veneer.d: Likewise.
	* ld-arm/farcall-thumb-thumb.d: New expected result, this test is
	now expected to pass.
	* ld-arm/thumb2-bl-as-thumb1-bad-noeabi.d: Likewise.
	* ld-arm/thumb2-bl-bad-noeabi.d: Likewise.
	* ld-arm/thumb2-bl-as-thumb1-bad.d: Update addresses according to
	new use.
	* ld-arm/thumb2-bl-as-thumb1-bad.s: Update comment.
@
text
@@@ Test to ensure that a Thumb-1 BL with a Thumb-2-only offset makes the linker generate a stub.

	.arch armv5t
	.global _start
	.syntax unified

@@ We will place the section .text at 0x1000.

	.text
	.thumb_func

_start:
	bl bar

@@ We will place the section .foo at 0x100100c.

	.section .foo, "xa"
	.thumb_func

bar:
	bx lr

@


1.3
log
@        bfd/
        * elf32-arm.c (THM2_MAX_FWD_BRANCH_OFFSET): Define.
        (THM2_MAX_BWD_BRANCH_OFFSET): Define.
        (ARM_MAX_FWD_BRANCH_OFFSET): Define.
        (ARM_MAX_BWD_BRANCH_OFFSET): Define.
        (THM_MAX_FWD_BRANCH_OFFSET): Define.
        (THM_MAX_BWD_BRANCH_OFFSET): Define.
        (arm_long_branch_stub): Define.
        (arm_pic_long_branch_stub): Define.
        (arm_thumb_v4t_long_branch_stub): Define.
        (arm_thumb_thumb_long_branch_stub): Define.
        (arm_thumb_arm_v4t_long_branch_stub): Define.
        (STUB_SUFFIX): Define.
        (elf32_arm_stub_type): Define.
        (elf32_arm_stub_hash_entry): Define.
        (elf32_arm_link_hash_entry): Add stub_cache field.
        (arm_stub_hash_lookup): Define.
        (elf32_arm_link_hash_table): Add stub_hash_table, stub_bfd,
        add_stub_section, layout_sections_again, stub_group, bfd_count,
        top_index, input_list fields.
        (elf32_arm_link_hash_newfunc): Init new field.
        (stub_hash_newfunc): New function.
        (elf32_arm_link_hash_table_create): Init stub_hash_table.
        (elf32_arm_hash_table_free): New function.
        (arm_type_of_stub): New function.
        (elf32_arm_stub_name): New function.
        (elf32_arm_get_stub_entry): New function.
        (elf32_arm_stub_add_mapping_symbol): New function.
        (elf32_arm_add_stub): New function.
        (arm_build_one_stub): New function.
        (arm_size_one_stub): New function.
        (elf32_arm_setup_section_lists): New function.
        (elf32_arm_next_input_section): New function.
        (group_sections): New function.
        (elf32_arm_size_stubs): New function.
        (elf32_arm_build_stubs): New function.
        (bfd_elf32_arm_add_glue_sections_to_bfd): Skip stub sections.
        (bfd_elf32_arm_process_before_allocation): No longer handle
        R_ARM_CALL and R_ARM_THM_CALL.
        (using_thumb_only): New function.
        (elf32_arm_final_link_relocate): Redirect calls to stub if range
        exceeds encoding capabilities.
        (bfd_elf32_bfd_link_hash_table_free): Define.
        * bfd-in.h (R_ARM_max): Fix value to 130.
        (elf32_arm_setup_section_lists): Protype.
        (elf32_arm_next_input_section): Protype.
        (elf32_arm_size_stubs): Protype.
        (elf32_arm_build_stubs): Protype.

        ld/
        * emultempl/armelf.em (build_section_lists): New function.
        (stub_file): Define.
        (need_laying_out): Define.
        (group_size): Define.
        (hook_stub_info): Define.
        (hook_in_stub): New function.
        (elf32_arm_add_stub_section): New function.
        (gldarm_layout_sections_again): New function.
        (gld${EMULATION_NAME}_finish): Replace arm_elf_finish(). Generate
        stubs for long calls if needed.
        (arm_elf_create_output_section_statements): create stub_file bfd.
        (arm_for_each_input_file_wrapper): New function.
        (arm_lang_for_each_input_file): New function.
        (lang_for_each_input_file): Define.
        (PARSE_AND_LIST_PROLOGUE): Add option token OPTION_STUBGROUP_SIZE.
        (PARSE_AND_LIST_LONGOPTS): Add option stub-group-size.
        (PARSE_AND_LIST_OPTIONS): Add option stub-group-size.
        (PARSE_AND_LIST_ARGS_CASES): Add OPTION_STUBGROUP_SIZE case.
        (LDEMUL_FINISH): Update to gld${EMULATION_NAME}_finish.
        * ld/lang.c (print_input_statement): Skip if bfd has
        BFD_LINKER_CREATED.

        ld/testsuite
        * ld-arm/arm-elf.exp (armelftests): Add farcall-arm-arm,
        farcall-arm-arm-pic-veneer, farcall-arm-arm-be8 farcall-arm-thumb,
        farcall-arm-thumb-blx, farcall-arm-thumb-pic-veneer,
        farcall-arm-thumb-blx-pic-veneer, farcall-thumb-thumb,
        farcall-thumb-thumb-pic-veneer, farcall-thumb-thumb-blx,
        farcall-thumb-thumb-m, farcall-thumb-thumb-m-pic-veneer,
        farcall-thumb-thumb-blx-pic-veneer, farcall-thumb-arm,
        farcall-thumb-arm-pic-veneer, farcall-thumb-arm-blx,
        farcall-thumb-arm-blx-pic-veneer.
        Change thumb2-bl-as-thumb1-bad, thumb2-bl-bad.
        * ld-arm/thumb2-bl-as-thumb1-bad.d: Reflects farcall stub
        generation.
        * ld-arm/thumb2-bl-bad.d: Likewise.
        * ld-arm/thumb2-bl-as-thumb1-bad.s: Update comments.
        * ld-arm/thumb2-bl-bad.s: Likewise.
@
text
@d15 1
a15 1
@@ We will place the section .foo at 0x40100c.
@


1.2
log
@	bfd/
	* elf32-arm.c (elf32_arm_howto_table_1): Change offset for
	R_THM_CALL to 25 and remove FIXME comment.
	(using_thumb2): New function.
	(elf32_arm_final_link_relocate): Cope with Thumb-2 BL encoding.

	include/
	* elf/arm.h: Define TAG_CPU_ARCH_* constants.

	ld/testsuite/
	* ld-arm/arm-elf.exp: Add thumb1-bl, thumb2-bl,
	thumb2-bl-as-thumb1-bad and thumb2-bl-bad tests.
	* ld-arm/thumb1-bl.d: New.
	* ld-arm/thumb1-bl.s: New.
	* ld-arm/thumb2-bl-as-thumb1-bad.d: New.
	* ld-arm/thumb2-bl-as-thumb1-bad.s: New.
	* ld-arm/thumb2-bl-bad.d: New.
	* ld-arm/thumb2-bl-bad.s: New.
	* ld-arm/thumb2-bl.d: New.
	* ld-arm/thumb2-bl.s: New.
@
text
@d1 1
a1 1
@@ Test to ensure that a Thumb-1 BL with a Thumb-2-only offset fails.
d15 1
a15 1
@@ We will place the section .foo at 0x401004.
@


1.1
log
@file thumb2-bl-as-thumb1-bad.s was initially added on branch binutils-csl-2_17-branch.
@
text
@d1 22
@


1.1.2.1
log
@	bfd/
	* elf32-arm.c (elf32_arm_howto_table_1): Change offset for
	R_THM_CALL to 25 and remove FIXME comment.
	(using_thumb2): New function.
	(elf32_arm_final_link_relocate): Cope with Thumb-2 BL encoding.

	ld/testsuite/
	* arm-elf.exp: Add thumb1-bl, thumb2-bl, thumb2-bl-as-thumb1-bad
	and thumb2-bl-bad tests.
	* thumb1-bl.d: New.
	* thumb1-bl.s: New.
	* thumb2-bl-as-thumb1-bad.d: New.
	* thumb2-bl-as-thumb1-bad.s: New.
	* thumb2-bl-bad.d: New.
	* thumb2-bl-bad.s: New.
	* thumb2-bl.d: New.
	* thumb2-bl.s: New.
@
text
@a0 22
@@ Test to ensure that a Thumb-1 BL with a Thumb-2-only offset fails.

	.arch armv5t
	.global _start
	.syntax unified

@@ We will place the section .text at 0x1000.

	.text
	.thumb_func

_start:
	bl bar

@@ We will place the section .foo at 0x401004.

	.section .foo, "xa"
	.thumb_func

bar:
	bx lr

@

