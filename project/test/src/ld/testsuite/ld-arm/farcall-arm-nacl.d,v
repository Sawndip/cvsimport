head	1.1;
access;
symbols
	binutils-2_24-branch:1.1.0.4
	binutils-2_24-branchpoint:1.1
	binutils_latest_snapshot:1.1
	binutils-2_23-branch:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2013.07.18.11.24.09;	author nickc;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2013.07.18.11.24.09;	author roland;	state dead;
branches;
next	1.1.2.2;

1.1.2.2
date	2013.07.18.21.48.10;	author roland;	state Exp;
branches;
next	;


desc
@@


1.1
log
@	* elf32-arm.c (elf32_arm_stub_long_branch_arm_nacl): New variable.
	(elf32_arm_stub_long_branch_arm_nacl_pic): New variable.
	(arm_build_one_stub): Increase MAXRELOCS to 3.
	(arm_type_of_stub): Use them if GLOBALS->nacl_p.
	(struct elf32_arm_link_hash_table): Give add_stub_section member's
	pointee type a third argument.
	(elf32_arm_create_or_find_stub_sec): Update caller.
	(elf32_arm_size_stubs): Update argument type.
	* bfd-in.h (elf32_arm_size_stubs): Update decl.
	* bfd-in2.h: Regenerate.
	* libbfd.h: Regenerate.

	* emultempl/armelf.em (elf32_arm_add_stub_section): Take third
	argument ALIGNMENT_POWER, use it instead of constant 3.

	* ld-arm/farcall-arm-nacl.d: New file.
	* ld-arm/farcall-arm-nacl-pic.d: New file.
	* ld-arm/farcall-data-nacl.d: New file.
	* ld-arm/arm-elf.exp (armeabitests_common): Add extra element to
	"action" lists for those cases to use a different dump file for NaCl
	targets.
	Massage $armeabitests_common to drop the extra element or the one
	before it, depending on [istarget "arm*-*-nacl*"].

	* ld-arm/arm-elf.exp (armelftests_common): Move all "Cortex-A8
	erratum fix", Thumb-only and interworking cases to ...
	(armelftests_nonacl): ... here.
	(armeabitests_common): Move all "erratum 760522 fix", Thumb-only
	and interworking cases to ...
	(armeabitests_nonacl): ... here.
@
text
@.*:     file format .*

Disassembly of section \.text:

0+1000 <_start>:
\s*1000:\s+eb000002\s+bl\s+1010 <__bar_veneer>
#...

0+1010 <__bar_veneer>:
\s*1010:\s+e59fc00c\s+ldr\s+ip, \[pc, #12\]\s+; 1024 <__bar_veneer\+0x14>
\s*1014:\s+e3ccc13f\s+bic\s+ip, ip, #-1073741809\s+; 0xc000000f
\s*1018:\s+e12fff1c\s+bx\s+ip
\s*101c:\s+e320f000\s+nop\s+\{0\}
\s*1020:\s+e125be70\s+bkpt\s+0x5be0
\s*1024:\s+02001020\s+.word\s+0x02001020
#...

\s*Disassembly of section \.foo:
\s*02001020 <bar>:
\s*2001020:\s+e12fff1e\s+bx\s+lr
@


1.1.2.1
log
@file farcall-arm-nacl.d was added on branch binutils-2_23-branch on 2013-07-18 21:48:10 +0000
@
text
@d1 20
@


1.1.2.2
log
@bfd/
	* elf32-arm.c (elf32_arm_stub_long_branch_arm_nacl): New variable.
	(elf32_arm_stub_long_branch_arm_nacl_pic): New variable.
	(arm_build_one_stub): Increase MAXRELOCS to 3.
	(arm_type_of_stub): Use them if GLOBALS->nacl_p.
	(struct elf32_arm_link_hash_table): Give add_stub_section member's
	pointee type a third argument.
	(elf32_arm_create_or_find_stub_sec): Update caller.
	(elf32_arm_size_stubs): Update argument type.
	* bfd-in.h (elf32_arm_size_stubs): Update decl.
	* bfd-in2.h: Regenerate.
	* libbfd.h: Regenerate.

ld/
	* emultempl/armelf.em (elf32_arm_add_stub_section): Take third
	argument ALIGNMENT_POWER, use it instead of constant 3.

ld/testsuite/
	* ld-arm/farcall-arm-nacl.d: New file.
	* ld-arm/farcall-arm-nacl-pic.d: New file.
	* ld-arm/farcall-data-nacl.d: New file.
	* ld-arm/arm-elf.exp (armeabitests_common): Add extra element to
	"action" lists for those cases to use a different dump file for NaCl
	targets.
	Massage $armeabitests_common to drop the extra element or the one
	before it, depending on [istarget "arm*-*-nacl*"].

	* ld-arm/arm-elf.exp (armelftests_common): Move all "Cortex-A8
	erratum fix", Thumb-only and interworking cases to ...
	(armelftests_nonacl): ... here.
	(armeabitests_common): Move all "erratum 760522 fix", Thumb-only
	and interworking cases to ...
	(armeabitests_nonacl): ... here.
@
text
@a0 20
.*:     file format .*

Disassembly of section \.text:

0+1000 <_start>:
\s*1000:\s+eb000002\s+bl\s+1010 <__bar_veneer>
#...

0+1010 <__bar_veneer>:
\s*1010:\s+e59fc00c\s+ldr\s+ip, \[pc, #12\]\s+; 1024 <__bar_veneer\+0x14>
\s*1014:\s+e3ccc13f\s+bic\s+ip, ip, #-1073741809\s+; 0xc000000f
\s*1018:\s+e12fff1c\s+bx\s+ip
\s*101c:\s+e320f000\s+nop\s+\{0\}
\s*1020:\s+e125be70\s+bkpt\s+0x5be0
\s*1024:\s+02001020\s+.word\s+0x02001020
#...

\s*Disassembly of section \.foo:
\s*02001020 <bar>:
\s*2001020:\s+e12fff1e\s+bx\s+lr
@


