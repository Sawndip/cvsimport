head	1.2;
access;
symbols
	binutils-2_24-branch:1.2.0.22
	binutils-2_24-branchpoint:1.2
	binutils-2_21_1:1.2
	binutils-2_23_2:1.2
	binutils-2_23_1:1.2
	binutils-2_23:1.2
	binutils-2_23-branch:1.2.0.20
	binutils-2_23-branchpoint:1.2
	binutils-2_22_branch:1.2.0.18
	binutils-2_22:1.2
	binutils-2_22-branch:1.2.0.16
	binutils-2_22-branchpoint:1.2
	binutils-2_21:1.2
	binutils-2_21-branch:1.2.0.14
	binutils-2_21-branchpoint:1.2
	binutils-2_20_1:1.2
	binutils-2_20:1.2
	binutils-arc-20081103-branch:1.2.0.12
	binutils-arc-20081103-branchpoint:1.2
	binutils-2_20-branch:1.2.0.10
	binutils-2_20-branchpoint:1.2
	dje-cgen-play1-branch:1.2.0.8
	dje-cgen-play1-branchpoint:1.2
	arc-20081103-branch:1.2.0.6
	arc-20081103-branchpoint:1.2
	binutils-2_19_1:1.2
	binutils-2_19:1.2
	binutils-2_19-branch:1.2.0.4
	binutils-2_19-branchpoint:1.2
	binutils-2_18:1.2
	binutils-2_18-branch:1.2.0.2
	binutils-2_18-branchpoint:1.2
	binutils-csl-coldfire-4_1-32:1.1.2.1
	binutils-csl-sourcerygxx-4_1-32:1.1.2.1
	binutils-csl-innovasic-fido-3_4_4-33:1.1.2.1
	binutils-csl-coldfire-4_1-30:1.1.2.1
	binutils-csl-sourcerygxx-4_1-30:1.1.2.1
	binutils-csl-coldfire-4_1-28:1.1.2.1
	binutils-csl-sourcerygxx-4_1-29:1.1.2.1
	binutils-csl-sourcerygxx-4_1-28:1.1.2.1
	binutils-csl-arm-2006q3-27:1.1.2.1
	binutils-csl-sourcerygxx-4_1-27:1.1.2.1
	binutils-csl-arm-2006q3-26:1.1.2.1
	binutils-csl-sourcerygxx-4_1-26:1.1.2.1
	binutils-csl-sourcerygxx-4_1-25:1.1.2.1
	binutils-csl-sourcerygxx-4_1-24:1.1.2.1
	binutils-csl-sourcerygxx-4_1-23:1.1.2.1
	binutils-csl-sourcerygxx-4_1-21:1.1.2.1
	binutils-csl-arm-2006q3-21:1.1.2.1
	binutils-csl-sourcerygxx-4_1-22:1.1.2.1
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.1.2.1
	binutils-csl-sourcerygxx-4_1-20:1.1.2.1
	binutils-csl-arm-2006q3-19:1.1.2.1
	binutils-csl-sourcerygxx-4_1-19:1.1.2.1
	binutils-csl-sourcerygxx-4_1-18:1.1.2.1
	binutils-csl-renesas-4_1-9:1.1.2.1
	binutils-csl-renesas-4_1-8:1.1.2.1
	binutils-csl-renesas-4_1-7:1.1.2.1
	binutils-csl-renesas-4_1-6:1.1.2.1
	binutils-csl-sourcerygxx-4_1-17:1.1.2.1
	binutils-csl-sourcerygxx-4_1-14:1.1.2.1
	binutils-csl-sourcerygxx-4_1-15:1.1.2.1
	binutils-csl-sourcerygxx-4_1-13:1.1.2.1
	binutils-csl-sourcerygxx-4_1-12:1.1.2.1
	binutils-csl-sourcerygxx-3_4_4-21:1.1.2.1
	binutils-csl-sourcerygxx-4_1-9:1.1.2.1
	binutils-csl-sourcerygxx-4_1-8:1.1.2.1
	binutils-csl-sourcerygxx-4_1-7:1.1.2.1
	binutils-csl-arm-2006q1-6:1.1.2.1
	binutils-csl-sourcerygxx-4_1-6:1.1.2.1
	binutils-csl-coldfire-4_1-11:1.1.2.1
	binutils-csl-sourcerygxx-3_4_4-19:1.1.2.1
	binutils-csl-coldfire-4_1-10:1.1.2.1
	binutils-csl-sourcerygxx-4_1-5:1.1.2.1
	binutils_latest_snapshot:1.2
	binutils-csl-sourcerygxx-4_1-4:1.1.2.1
	binutils-csl-2_17-branch:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2006.05.11.15.17.34;	author pbrook;	state Exp;
branches;
next	1.1;

1.1
date	2006.05.03.14.30.24;	author pbrook;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2006.05.03.14.30.24;	author pbrook;	state Exp;
branches;
next	;


desc
@@


1.2
log
@2006-05-11  Paul Brook  <paul@@codesourcery.com>

bfd/
	* elf32-arm.c (elf32_arm_reloc_map): Add MOVW and MOVT relocs.
	(elf32_arm_final_link_relocate): Handle MOVW and MOVT relocs.
	(elf32_arm_gc_sweep_hook, elf32_arm_check_relocs): Ditto.
	* reloc.c: Ditto.
	* bfd-in2.h: Regenerate.
	* libbfd.h: Regenerate.
	* libcoff.h: Regenerate.
gas/
	* config/tc-arm.c (parse_half): New function.
	(operand_parse_code): Remove OP_Iffff.  Add OP_HALF.
	(parse_operands): Ditto.
	(do_mov16): Reject invalid relocations.
	(do_t_mov16): Ditto.  Use Thumb reloc numbers.
	(insns): Replace Iffff with HALF.
	(md_apply_fix): Add MOVW and MOVT relocs.
	(tc_gen_reloc): Ditto.
	* doc/c-arm.texi: Document relocation operators
ld/testsuite/
	* ld-arm/arm-elf.exp: Add arm-movwt.
	* ld-arm/arm-movwt.d: New test.
	* ld-arm/arm-movwt.s: New test.
	* ld-arm/arm.ld: Add .far.
@
text
@	.text
	.arch armv6t2
	.syntax unified
	.global	_start
	.type	_start, %function
_start:
base1:
arm1:
	movw r0, #:lower16:arm2
	movt r1, #:upper16:arm2
	movw r2, #:lower16:(arm2 - arm1)
	movt r3, #:upper16:(arm2 - arm1)
	movw r4, #:lower16:thumb2
	movt r5, #:upper16:thumb2
	movw r6, #:lower16:(thumb2 - arm1)
	movt r7, #:upper16:(thumb2 - arm1)
	.thumb
	.type thumb1, %function
	.thumb_func
thumb1:
	movw r7, #:lower16:arm2
	movt r6, #:upper16:arm2
	movw r5, #:lower16:(arm2 - arm1)
	movt r4, #:upper16:(arm2 - arm1)
	movw r3, #:lower16:thumb2
	movt r2, #:upper16:thumb2
	movw r1, #:lower16:(thumb2 - arm1)
	movt r0, #:upper16:(thumb2 - arm1)

	.section .far, "ax", %progbits
	.arm
arm2:
	movw r0, #:lower16:(arm1 - arm2)
	movt r0, #:upper16:(arm1 - arm2)
	movw r0, #:lower16:(thumb1 - arm2)
	movt r0, #:upper16:(thumb1 - arm2)
	.thumb
	.type thumb2, %function
	.thumb_func
thumb2:
	movw r0, #:lower16:(arm1 - arm2)
	movt r0, #:upper16:(arm1 - arm2)
	movw r0, #:lower16:(thumb1 - arm2)
	movt r0, #:upper16:(thumb1 - arm2)
@


1.1
log
@file arm-movwt.s was initially added on branch binutils-csl-2_17-branch.
@
text
@d1 44
@


1.1.2.1
log
@2006-05-03  Paul Brook  <paul@@codesourcery.com>

	* bfd/elf32-arm.c (elf32_arm_reloc_map): Add MOVW and MOVT relocs.
	(elf32_arm_final_link_relocate): Handle MOVW and MOVT relocs.
	(elf32_arm_gc_sweep_hook, elf32_arm_check_relocs): Ditto.
	* bfd/reloc.c: Ditto.
	* bfd/bfd-in2.h: Regenerate.
	* bfd/libbfd.h: Regenerate.
	* bfd/libcoff.h: Regenerate.
	* gas/config/tc-arm.c (parse_half): New function.
	(operand_parse_code): Remove OP_Iffff.  Add OP_HALF.
	(parse_operands): Ditto.
	(do_mov16): Reject invalid relocations.
	(do_t_mov16): Ditto.  Use Thumb reloc numbers.
	(insns): Replace Iffff with HALF.
	(md_apply_fix): Add MOVW and MOVT relocs.
	(tc_gen_reloc): Ditto.
	* gas/doc/c-arm.texi: Document relocation operators
	* ld/testsuite/ld-arm/arm-elf.exp: Add arm-movwt.
	* ld/testsuite/ld-arm/arm-movwt.d: New test.
	* ld/testsuite/ld-arm/arm-movwt.s: New test.
	* ld/testsuite/ld-arm/arm.ld: Add .far.
@
text
@a0 44
	.text
	.arch armv6t2
	.syntax unified
	.global	_start
	.type	_start, %function
_start:
base1:
arm1:
	movw r0, #:lower16:arm2
	movt r1, #:upper16:arm2
	movw r2, #:lower16:(arm2 - arm1)
	movt r3, #:upper16:(arm2 - arm1)
	movw r4, #:lower16:thumb2
	movt r5, #:upper16:thumb2
	movw r6, #:lower16:(thumb2 - arm1)
	movt r7, #:upper16:(thumb2 - arm1)
	.thumb
	.type thumb1, %function
	.thumb_func
thumb1:
	movw r7, #:lower16:arm2
	movt r6, #:upper16:arm2
	movw r5, #:lower16:(arm2 - arm1)
	movt r4, #:upper16:(arm2 - arm1)
	movw r3, #:lower16:thumb2
	movt r2, #:upper16:thumb2
	movw r1, #:lower16:(thumb2 - arm1)
	movt r0, #:upper16:(thumb2 - arm1)

	.section .far, "ax", %progbits
	.arm
arm2:
	movw r0, #:lower16:(arm1 - arm2)
	movt r0, #:upper16:(arm1 - arm2)
	movw r0, #:lower16:(thumb1 - arm2)
	movt r0, #:upper16:(thumb1 - arm2)
	.thumb
	.type thumb2, %function
	.thumb_func
thumb2:
	movw r0, #:lower16:(arm1 - arm2)
	movt r0, #:upper16:(arm1 - arm2)
	movw r0, #:lower16:(thumb1 - arm2)
	movt r0, #:upper16:(thumb1 - arm2)
@

