head	1.8;
access;
symbols
	binutils-2_24-branch:1.8.0.4
	binutils-2_24-branchpoint:1.8
	binutils-2_21_1:1.7
	binutils-2_23_2:1.8
	binutils-2_23_1:1.8
	binutils-2_23:1.8
	binutils-2_23-branch:1.8.0.2
	binutils-2_23-branchpoint:1.8
	binutils-2_22_branch:1.7.0.8
	binutils-2_22:1.7
	binutils-2_22-branch:1.7.0.6
	binutils-2_22-branchpoint:1.7
	binutils-2_21:1.7
	binutils-2_21-branch:1.7.0.4
	binutils-2_21-branchpoint:1.7
	binutils-2_20_1:1.7
	binutils-2_20:1.7
	binutils-arc-20081103-branch:1.5.0.8
	binutils-arc-20081103-branchpoint:1.5
	binutils-2_20-branch:1.7.0.2
	binutils-2_20-branchpoint:1.7
	dje-cgen-play1-branch:1.5.0.6
	dje-cgen-play1-branchpoint:1.5
	arc-20081103-branch:1.5.0.4
	arc-20081103-branchpoint:1.5
	binutils-2_19_1:1.5
	binutils-2_19:1.5
	binutils-2_19-branch:1.5.0.2
	binutils-2_19-branchpoint:1.5
	binutils-2_18:1.4
	binutils-2_18-branch:1.4.0.2
	binutils-2_18-branchpoint:1.4
	binutils-csl-coldfire-4_1-32:1.1.2.1
	binutils-csl-sourcerygxx-4_1-32:1.1.2.1
	binutils-csl-innovasic-fido-3_4_4-33:1.1.2.1
	binutils-csl-coldfire-4_1-30:1.1.2.1
	binutils-csl-sourcerygxx-4_1-30:1.1.2.1
	binutils-csl-coldfire-4_1-28:1.1.2.1
	binutils-csl-sourcerygxx-4_1-29:1.1.2.1
	binutils-csl-sourcerygxx-4_1-28:1.1.2.1
	binutils-csl-arm-2006q3-27:1.1.2.1
	binutils-csl-sourcerygxx-4_1-27:1.1.2.1
	binutils-csl-arm-2006q3-26:1.1.2.1
	binutils-csl-sourcerygxx-4_1-26:1.1.2.1
	binutils-csl-sourcerygxx-4_1-25:1.1.2.1
	binutils-csl-sourcerygxx-4_1-24:1.1.2.1
	binutils-csl-sourcerygxx-4_1-23:1.1.2.1
	binutils-csl-sourcerygxx-4_1-21:1.1.2.1
	binutils-csl-arm-2006q3-21:1.1.2.1
	binutils-csl-sourcerygxx-4_1-22:1.1.2.1
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.1.2.1
	binutils-csl-sourcerygxx-4_1-20:1.1.2.1
	binutils-csl-arm-2006q3-19:1.1.2.1
	binutils-csl-sourcerygxx-4_1-19:1.1.2.1
	binutils-csl-sourcerygxx-4_1-18:1.1.2.1
	binutils-csl-renesas-4_1-9:1.1.2.1
	binutils-csl-renesas-4_1-8:1.1.2.1
	binutils_latest_snapshot:1.8
	binutils-csl-2_17-branch:1.1.0.2;
locks; strict;
comment	@# @;


1.8
date	2012.06.13.14.15.59;	author nickc;	state Exp;
branches;
next	1.7;

1.7
date	2009.06.30.11.57.05;	author nickc;	state Exp;
branches;
next	1.6;

1.6
date	2009.06.29.08.08.15;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	2008.05.23.13.53.27;	author nickc;	state Exp;
branches;
next	1.4;

1.4
date	2007.05.22.15.05.12;	author pbrook;	state Exp;
branches;
next	1.3;

1.3
date	2007.04.21.19.44.40;	author rearnsha;	state Exp;
branches;
next	1.2;

1.2
date	2006.11.13.21.18.36;	author drow;	state Exp;
branches;
next	1.1;

1.1
date	2006.08.18.15.00.18;	author pbrook;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2006.08.18.15.01.16;	author pbrook;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2006.12.18.16.21.45;	author shinwell;	state Exp;
branches;
next	;


desc
@@


1.8
log
@	* ld-arm/arm-app-abs32.d; Update expected disassembly in line with
	improved architecture detection.
	* ld-arm/arm-app.d: Likewise.
	* ld-arm/arm-lib-plt32.d: Likewise.
	* ld-arm/arm-lib.d: Likewise.
	* ld-arm/arm-static-app.d: Likewise.
	* ld-arm/armthumb-lib.d: Likewise.
	* ld-arm/farcall-mixed-app-v5.d: Likewise.
	* ld-arm/farcall-mixed-app.d: Likewise.
	* ld-arm/farcall-mixed-lib-v4t.d: Likewise.
	* ld-arm/farcall-mixed-lib.d: Likewise.
	* ld-arm/mixed-app-v5.d: Likewise.
	* ld-arm/mixed-app.d: Likewise.
	* ld-arm/mixed-lib.d: Likewise.
	* ld-arm/tls-app.d: Likewise.
	* ld-arm/tls-descrelax-be32.d: Likewise.
	* ld-arm/tls-descrelax.d: Likewise.
	* ld-arm/tls-descseq.d: Likewise.
	* ld-arm/tls-gdesc-got.d: Likewise.
	* ld-arm/tls-gdesc.d: Likewise.
	* ld-arm/tls-gdierelax.d: Likewise.
	* ld-arm/tls-gdierelax2.d: Likewise.
	* ld-arm/tls-gdlerelax.d: Likewise.
	* ld-arm/tls-lib-loc.d: Likewise.
	* ld-arm/tls-lib.d: Likewise.
	* ld-arm/tls-thumb1.d: Likewise.
@
text
@
tmpdir/armthumb-lib.so:     file format elf32-(little|big)arm
architecture: armv4t, flags 0x00000150:
HAS_SYMS, DYNAMIC, D_PAGED
start address 0x.*

Disassembly of section .plt:

.* <.plt>:
 .*:	e52de004 	push	{lr}		; \(str lr, \[sp, #-4\]!\)
 .*:	e59fe004 	ldr	lr, \[pc, #4\]	; .* <lib_func1-0x1.>
 .*:	e08fe00e 	add	lr, pc, lr
 .*:	e5bef008 	ldr	pc, \[lr, #8\]!
 .*:	.*
 .*:	e28fc6.* 	add	ip, pc, #.*
 .*:	e28cca.* 	add	ip, ip, #.*	; 0x.*
 .*:	e5bcf.* 	ldr	pc, \[ip, #.*\]!.*
Disassembly of section .text:

.* <lib_func1>:
 .*:	e1a0c00d 	mov	ip, sp
 .*:	e92dd800 	push	{fp, ip, lr, pc}
 .*:	ebfffff. 	bl	.* <lib_func1-0x..?>
 .*:	e89d6800 	ldm	sp, {fp, sp, lr}
 .*:	e12fff1e 	bx	lr
 .*:	e1a00000 	nop			; \(mov r0, r0\)
 .*:	e1a00000 	nop			; \(mov r0, r0\)
 .*:	e1a00000 	nop			; \(mov r0, r0\)

.* <__real_lib_func2>:
 .*:	4770      	bx	lr
 .*:	46c0      	nop			; \(mov r8, r8\)
 .*:	46c0      	nop			; \(mov r8, r8\)
 .*:	46c0      	nop			; \(mov r8, r8\)
 .*:	46c0      	nop			; \(mov r8, r8\)
 .*:	46c0      	nop			; \(mov r8, r8\)
 .*:	46c0      	nop			; \(mov r8, r8\)
 .*:	46c0      	nop			; \(mov r8, r8\)

.* <lib_func2>:
 .*:	e59fc004 	ldr	ip, \[pc, #4\]	; .* <lib_func2\+0xc>
 .*:	e08cc00f 	add	ip, ip, pc
 .*:	e12fff1c 	bx	ip
 .*:	ffffffe5 	.*
@


1.7
log
@        PR 10288
        * arm-dis.c (coprocessor): Print the LDC and STC versions of the
        LFM and SFM instructions as comments,.
        Improve consistency of formatting for instructions displayed as
        comments and decimal values displayed with their hexadecimal
        equivalents.
        Formatting tidy ups.

        Updated expected disassembler regexps.
@
text
@d3 1
a3 1
architecture: arm, flags 0x00000150:
@


1.6
log
@        PR 10288
        * arm-dis.c (enum opcode_sentinels): New:  Used to mark the
        boundary between variaant and generic coprocessor instuctions.
        (coprocessor): Use it.
        Fix architecture version of MCRR and MRRC instructions.
        (arm_opcdes): Fix patterns for STRB and STRH instructions.
        (print_insn_coprocessor): Check architecture and extension masks.
        Print a hexadecimal version of any decimal constant that is
        outside of the range of -16 to +32.
        (print_arm_address): Add a return value of the offset used in the
        adress, if it is worth printing a hexadecimal version of it.
        (print_insn_neon): Print a hexadecimal version of any decimal
        constant that is outside of the range of -16 to +32.
        (print_insn_arm): Likewise.
        (print_insn_thumb16): Likewise.
        (print_insn_thumb32): Likewise.

        PR 10297
        * arm-dis.c (UNDEFINED_INSTRUCTION): New macro for a description
        of an undefined instruction.
        (arm_opcodes): Use it.
        (thumb_opcod): Use it.
        (thumb32_opc): Use it.

        Update expected disassembly regrexps in GAS and LD testsuites.
@
text
@d15 1
a15 1
 .*:	e28fc6.* 	add	ip, pc, #.*	; 0x.*
d26 3
a28 3
 .*:	e1a00000 	nop			\(mov r0,r0\)
 .*:	e1a00000 	nop			\(mov r0,r0\)
 .*:	e1a00000 	nop			\(mov r0,r0\)
d32 7
a38 7
 .*:	46c0      	nop			\(mov r8, r8\)
 .*:	46c0      	nop			\(mov r8, r8\)
 .*:	46c0      	nop			\(mov r8, r8\)
 .*:	46c0      	nop			\(mov r8, r8\)
 .*:	46c0      	nop			\(mov r8, r8\)
 .*:	46c0      	nop			\(mov r8, r8\)
 .*:	46c0      	nop			\(mov r8, r8\)
@


1.5
log
@        bfd/
        * elf32-arm.c (arm_type_of_stub): Ignore STT_SECTION symbols.
        (elf32_arm_stub_add_mapping_symbol): Remove.
        (elf32_arm_add_stub): Don't generate mapping symbols. Change
        prototype.
        (elf32_arm_size_stubs): Use new elf32_arm_add_stub
        prototype. Don't generate thumb to arm glue for calls.
        (arm_map_one_stub): Define.
        (elf32_arm_output_arch_local_syms): Generate mapping symbols for
        long calls stubs.

        ld/testsuite/
        * ld-arm/farcall-arm-arm.s: Force function type on 'bar'.
        * ld-arm/farcall-thumb-arm.s: Likewise.
        * ld-arm/farcall-thumb-arm-blx.d: Fix encoding.
        * ld-arm/farcall-thumb-arm.d: Likewise.
        * ld-arm/farcall-thumb-arm-blx-pic-veneer.d: Likewise.
        * ld-arm/arm-elf.exp (armelftests): Add farcall-mix, farcall-mix2,
        farcall-group-default, farcall-group-size2, farcall-section Ignore
        gas warnings in farcall-thumb-arm, farcall-thumb-arm-blx,
        farcall-thumb-arm-blx-pic-veneer.
@
text
@d17 1
a17 1
 .*:	e5bcf.* 	ldr	pc, \[ip, #.*\]!
@


1.4
log
@2007-05-22  Paul Brook  <paul@@codesourcery.com>

	bunutils/
	* objdump.c (find_symbol_for_address): Merge section and target
	specific filtering code.

	ld/testsuite/
	* ld-arm-mixed-lib.d: Update expected output.
	* ld-arm/arm-app.d: Ditto.
	* ld-arm/mixed-app.d: Ditto.
	* ld-arm/arm-lib-plt32.d: Ditto.
	* ld-arm/arm-app-abs32.d: Ditto.
	* ld-arm/mixed-app-v5.d: Ditto.
	* ld-arm/armthumb-lib.d: Ditto.
	* ld-arm/arm-lib.d: Ditto.

	gas/testsuite/
	* gas/arm/backslash-at.d: Update expected output.
@
text
@d11 1
a11 1
 .*:	e59fe004 	ldr	lr, \[pc, #4\]	; .* <lib_func1-0x1c>
@


1.3
log
@	* ld-arm/arm-app-abs32.d: Convert to unified syntax.
	* ld-arm/arm-app.d: Likewise.
	* ld-arm/arm-lib-plt32.d: Likewise.
	* ld-arm/arm-lib.d: Likewise.
	* ld-arm/arm-static-app.d: Likewise.
	* ld-arm/armthumb-lib.d: Likewise.
	* ld-arm/mixed-app-v5.d: Likewise.
	* ld-arm/mixed-app.d: Likewise.
	* ld-arm/mixed-lib.d: Likewise.
@
text
@d11 1
a11 1
 .*:	e59fe004 	ldr	lr, \[pc, #4\]	; .* <\.plt\+0x10>
d23 1
a23 1
 .*:	ebfffff. 	bl	.* <.text-0x..?>
@


1.2
log
@	* ld-arm/arm-dyn.ld, ld-arm/arm-lib.ld: Remove .stack.
	* ld-arm/armthumb-lib.d, ld-arm/mixed-app.d, ld-arm/mixed-lib.d:
	Allow smaller section gap.
	* ld-arm/armthumb-lib.sym, ld-arm/mixed-lib.sym: Reorder.  Remove
	_stack.
	* ld-arm/mixed-app.sym: Remove _stack.
	* ld-arm/tls-app.d: Update start address.
@
text
@d10 1
a10 1
 .*:	e52de004 	str	lr, \[sp, #-4\]!
d22 1
a22 1
 .*:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
d24 1
a24 1
 .*:	e89d6800 	ldmia	sp, {fp, sp, lr}
@


1.1
log
@2006-08-18  Paul Brook  <paul@@codesourcery.com>

	bfd/
	* elf32-arm.c (elf32_arm_link_hash_entry): Add export_glue.
	(elf32_arm_link_hash_newfunc): Initialize export_glue.
	(record_arm_to_thumb_glue): Return stub symbol.
	(elf32_arm_create_thumb_stub): New function.
	(elf32_arm_to_thumb_stub): Use it.
	(elf32_arm_to_thumb_export_stub): New function.
	(elf32_arm_begin_write_processing): New function.
	(allocate_dynrelocs): Allocate Arm stubs.
	(elf_backend_begin_write_processing): Define.
	(elf32_arm_symbian_begin_write_processing): Remove ATTRIBUTE_UNUSED.
	Call elf32_arm_begin_write_processing.

	ld/
	* emultempl/armelf.em (arm_elf_before_allocation): Call
	gld${EMULATION_NAME}_before_allocation after setting interworking bfd.

	ld/testsuite/
	* ld-arm/arm-elf.exp (armelftests): Add armthumb-lib.so.  Add
	-use-blx to mixed-lib.so
	* ld-arm/armthumb-lib.d: New file.
	* ld-arm/armthumb-lib.sym: New file.
@
text
@d23 1
a23 1
 .*:	ebfffff. 	bl	.* <.text-0x..>
d41 1
a41 1
 .*:	e59fc004 	ldr	ip, \[pc, #4\]	; 33c <lib_func2\+0xc>
@


1.1.2.1
log
@2006-08-18  Paul Brook  <paul@@codesourcery.com>

	Backport from mainline.
	bfd/
	* elf32-arm.c (elf32_arm_link_hash_entry): Add export_glue.
	(elf32_arm_link_hash_newfunc): Initialize export_glue.
	(record_arm_to_thumb_glue): Return stub symbol.
	(elf32_arm_create_thumb_stub): New function.
	(elf32_arm_to_thumb_stub): Use it.
	(elf32_arm_to_thumb_export_stub): New function.
	(elf32_arm_begin_write_processing): New function.
	(allocate_dynrelocs): Allocate Arm stubs.
	(elf_backend_begin_write_processing): Define.
	(elf32_arm_symbian_begin_write_processing): Remove ATTRIBUTE_UNUSED.
	Call elf32_arm_begin_write_processing.

	ld/
	* emultempl/armelf.em (arm_elf_before_allocation): Call
	gld${EMULATION_NAME}_before_allocation after setting interworking bfd.

	ld/testsuite/
	* ld-arm/arm-elf.exp (armelftests): Add armthumb-lib.so.  Add
	-use-blx to mixed-lib.so
	* ld-arm/armthumb-lib.d: New file.
	* ld-arm/armthumb-lib.sym: New file.
@
text
@@


1.1.2.2
log
@2006-12-18  Mark Shinwell  <shinwell@@codesourcery.com>

        ld/testsuite/
        * ld-arm/armthumb-lib.d: Correct address of lib_func2.
        * armthumb-lib.sym: Correct order of symbols.
        * mixed-lib.sym: Likewise.
@
text
@d41 1
a41 1
 .*:	e59fc004 	ldr	ip, \[pc, #4\]	; 30c <lib_func2\+0xc>
@


