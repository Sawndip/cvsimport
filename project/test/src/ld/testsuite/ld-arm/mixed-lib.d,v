head	1.9;
access;
symbols
	binutils-2_24-branch:1.9.0.4
	binutils-2_24-branchpoint:1.9
	binutils-2_21_1:1.8
	binutils-2_23_2:1.9
	binutils-2_23_1:1.9
	binutils-2_23:1.9
	binutils-2_23-branch:1.9.0.2
	binutils-2_23-branchpoint:1.9
	binutils-2_22_branch:1.8.0.8
	binutils-2_22:1.8
	binutils-2_22-branch:1.8.0.6
	binutils-2_22-branchpoint:1.8
	binutils-2_21:1.8
	binutils-2_21-branch:1.8.0.4
	binutils-2_21-branchpoint:1.8
	binutils-2_20_1:1.8
	binutils-2_20:1.8
	binutils-arc-20081103-branch:1.6.0.8
	binutils-arc-20081103-branchpoint:1.6
	binutils-2_20-branch:1.8.0.2
	binutils-2_20-branchpoint:1.8
	dje-cgen-play1-branch:1.6.0.6
	dje-cgen-play1-branchpoint:1.6
	arc-20081103-branch:1.6.0.4
	arc-20081103-branchpoint:1.6
	binutils-2_19_1:1.6
	binutils-2_19:1.6
	binutils-2_19-branch:1.6.0.2
	binutils-2_19-branchpoint:1.6
	binutils-2_18:1.5
	binutils-2_18-branch:1.5.0.2
	binutils-2_18-branchpoint:1.5
	binutils-csl-coldfire-4_1-32:1.1.8.1
	binutils-csl-sourcerygxx-4_1-32:1.1.8.1
	binutils-csl-innovasic-fido-3_4_4-33:1.1.8.1
	binutils-csl-sourcerygxx-3_4_4-32:1.1
	binutils-csl-coldfire-4_1-30:1.1.8.1
	binutils-csl-sourcerygxx-4_1-30:1.1.8.1
	binutils-csl-coldfire-4_1-28:1.1.8.1
	binutils-csl-sourcerygxx-4_1-29:1.1.8.1
	binutils-csl-sourcerygxx-4_1-28:1.1.8.1
	binutils-csl-arm-2006q3-27:1.1.8.1
	binutils-csl-sourcerygxx-4_1-27:1.1.8.1
	binutils-csl-arm-2006q3-26:1.1.8.1
	binutils-csl-sourcerygxx-4_1-26:1.1.8.1
	binutils-csl-sourcerygxx-4_1-25:1.1.8.1
	binutils-csl-sourcerygxx-4_1-24:1.1.8.1
	binutils-csl-sourcerygxx-4_1-23:1.1.8.1
	binutils-csl-sourcerygxx-4_1-21:1.1.8.1
	binutils-csl-arm-2006q3-21:1.1.8.1
	binutils-csl-sourcerygxx-4_1-22:1.1.8.1
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.1.8.1
	binutils-csl-sourcerygxx-4_1-20:1.1.8.1
	binutils-csl-arm-2006q3-19:1.1.8.1
	binutils-csl-sourcerygxx-4_1-19:1.1.8.1
	binutils-csl-sourcerygxx-4_1-18:1.1.8.1
	binutils-csl-renesas-4_1-9:1.1.8.1
	binutils-csl-sourcerygxx-3_4_4-25:1.1
	binutils-csl-renesas-4_1-8:1.1.8.1
	binutils-csl-renesas-4_1-7:1.1.8.1
	binutils-csl-renesas-4_1-6:1.1.8.1
	binutils-csl-sourcerygxx-4_1-17:1.1.8.1
	binutils-csl-sourcerygxx-4_1-14:1.1.8.1
	binutils-csl-sourcerygxx-4_1-15:1.1.8.1
	binutils-csl-sourcerygxx-4_1-13:1.1.8.1
	binutils-2_17:1.1
	binutils-csl-sourcerygxx-4_1-12:1.1.8.1
	binutils-csl-sourcerygxx-3_4_4-21:1.1.8.1
	binutils-csl-wrs-linux-3_4_4-24:1.1
	binutils-csl-wrs-linux-3_4_4-23:1.1
	binutils-csl-sourcerygxx-4_1-9:1.1.8.1
	binutils-csl-sourcerygxx-4_1-8:1.1.8.1
	binutils-csl-sourcerygxx-4_1-7:1.1.8.1
	binutils-csl-arm-2006q1-6:1.1.8.1
	binutils-csl-sourcerygxx-4_1-6:1.1.8.1
	binutils-csl-wrs-linux-3_4_4-22:1.1
	binutils-csl-coldfire-4_1-11:1.1
	binutils-csl-sourcerygxx-3_4_4-19:1.1
	binutils-csl-coldfire-4_1-10:1.1
	binutils-csl-sourcerygxx-4_1-5:1.1
	binutils-csl-sourcerygxx-4_1-4:1.1
	binutils-csl-wrs-linux-3_4_4-21:1.1
	binutils-csl-morpho-4_1-4:1.1
	binutils-csl-sourcerygxx-3_4_4-17:1.1
	binutils-csl-wrs-linux-3_4_4-20:1.1
	binutils-2_17-branch:1.1.0.10
	binutils-2_17-branchpoint:1.1
	binutils-csl-2_17-branch:1.1.0.8
	binutils-csl-2_17-branchpoint:1.1
	binutils-csl-gxxpro-3_4-branch:1.1.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.1
	binutils-2_16_1:1.1
	binutils-csl-arm-2005q1b:1.1
	binutils-2_16:1.1
	binutils-csl-arm-2005q1a:1.1
	binutils-csl-arm-2005q1-branch:1.1.0.4
	binutils-csl-arm-2005q1-branchpoint:1.1
	binutils-2_16-branch:1.1.0.2
	binutils-2_16-branchpoint:1.1
	binutils_latest_snapshot:1.9;
locks; strict;
comment	@# @;


1.9
date	2012.06.13.14.15.59;	author nickc;	state Exp;
branches;
next	1.8;

1.8
date	2009.06.30.11.57.05;	author nickc;	state Exp;
branches;
next	1.7;

1.7
date	2009.06.29.08.08.15;	author nickc;	state Exp;
branches;
next	1.6;

1.6
date	2008.06.09.14.55.04;	author drow;	state Exp;
branches;
next	1.5;

1.5
date	2007.05.22.15.05.12;	author pbrook;	state Exp;
branches;
next	1.4;

1.4
date	2007.04.21.19.44.40;	author rearnsha;	state Exp;
branches;
next	1.3;

1.3
date	2006.11.13.21.18.36;	author drow;	state Exp;
branches;
next	1.2;

1.2
date	2006.05.24.17.10.02;	author pbrook;	state Exp;
branches;
next	1.1;

1.1
date	2004.11.17.17.50.27;	author drow;	state Exp;
branches
	1.1.8.1;
next	;

1.1.8.1
date	2006.05.24.17.14.53;	author pbrook;	state Exp;
branches;
next	;


desc
@@


1.9
log
@	* ld-arm/arm-app-abs32.d; Update expected disassembly in line with
	improved architecture detection.
	* ld-arm/arm-app.d: Likewise.
	* ld-arm/arm-lib-plt32.d: Likewise.
	* ld-arm/arm-lib.d: Likewise.
	* ld-arm/arm-static-app.d: Likewise.
	* ld-arm/armthumb-lib.d: Likewise.
	* ld-arm/farcall-mixed-app-v5.d: Likewise.
	* ld-arm/farcall-mixed-app.d: Likewise.
	* ld-arm/farcall-mixed-lib-v4t.d: Likewise.
	* ld-arm/farcall-mixed-lib.d: Likewise.
	* ld-arm/mixed-app-v5.d: Likewise.
	* ld-arm/mixed-app.d: Likewise.
	* ld-arm/mixed-lib.d: Likewise.
	* ld-arm/tls-app.d: Likewise.
	* ld-arm/tls-descrelax-be32.d: Likewise.
	* ld-arm/tls-descrelax.d: Likewise.
	* ld-arm/tls-descseq.d: Likewise.
	* ld-arm/tls-gdesc-got.d: Likewise.
	* ld-arm/tls-gdesc.d: Likewise.
	* ld-arm/tls-gdierelax.d: Likewise.
	* ld-arm/tls-gdierelax2.d: Likewise.
	* ld-arm/tls-gdlerelax.d: Likewise.
	* ld-arm/tls-lib-loc.d: Likewise.
	* ld-arm/tls-lib.d: Likewise.
	* ld-arm/tls-thumb1.d: Likewise.
@
text
@
tmpdir/mixed-lib.so:     file format elf32-(little|big)arm
architecture: armv4t, flags 0x00000150:
HAS_SYMS, DYNAMIC, D_PAGED
start address 0x.*

Disassembly of section .plt:

.* <.plt>:
 .*:	e52de004 	push	{lr}		; \(str lr, \[sp, #-4\]!\)
 .*:	e59fe004 	ldr	lr, \[pc, #4\]	; .* <lib_func1-0x.*>
 .*:	e08fe00e 	add	lr, pc, lr
 .*:	e5bef008 	ldr	pc, \[lr, #8\]!
 .*:	.*
 .*:	e28fc6.* 	add	ip, pc, #.*
 .*:	e28cca.* 	add	ip, ip, #.*	; 0x.*
 .*:	e5bcf.* 	ldr	pc, \[ip, #.*\]!.*
Disassembly of section .text:

.* <lib_func1>:
 .*:	e1a0c00d 	mov	ip, sp
 .*:	e92dd800 	push	{fp, ip, lr, pc}
 .*:	ebfffff. 	bl	.* <lib_func1-0x..?>
 .*:	e89d6800 	ldm	sp, {fp, sp, lr}
 .*:	e12fff1e 	bx	lr
 .*:	e1a00000 	nop			; \(mov r0, r0\)
 .*:	e1a00000 	nop			; \(mov r0, r0\)
 .*:	e1a00000 	nop			; \(mov r0, r0\)

.* <lib_func2>:
 .*:	4770      	bx	lr
 .*:	46c0      	nop			; \(mov r8, r8\)
 .*:	46c0      	nop			; \(mov r8, r8\)
 .*:	46c0      	nop			; \(mov r8, r8\)
 .*:	46c0      	nop			; \(mov r8, r8\)
 .*:	46c0      	nop			; \(mov r8, r8\)
 .*:	46c0      	nop			; \(mov r8, r8\)
 .*:	46c0      	nop			; \(mov r8, r8\)
@


1.8
log
@        PR 10288
        * arm-dis.c (coprocessor): Print the LDC and STC versions of the
        LFM and SFM instructions as comments,.
        Improve consistency of formatting for instructions displayed as
        comments and decimal values displayed with their hexadecimal
        equivalents.
        Formatting tidy ups.

        Updated expected disassembler regexps.
@
text
@d3 1
a3 1
architecture: arm, flags 0x00000150:
@


1.7
log
@        PR 10288
        * arm-dis.c (enum opcode_sentinels): New:  Used to mark the
        boundary between variaant and generic coprocessor instuctions.
        (coprocessor): Use it.
        Fix architecture version of MCRR and MRRC instructions.
        (arm_opcdes): Fix patterns for STRB and STRH instructions.
        (print_insn_coprocessor): Check architecture and extension masks.
        Print a hexadecimal version of any decimal constant that is
        outside of the range of -16 to +32.
        (print_arm_address): Add a return value of the offset used in the
        adress, if it is worth printing a hexadecimal version of it.
        (print_insn_neon): Print a hexadecimal version of any decimal
        constant that is outside of the range of -16 to +32.
        (print_insn_arm): Likewise.
        (print_insn_thumb16): Likewise.
        (print_insn_thumb32): Likewise.

        PR 10297
        * arm-dis.c (UNDEFINED_INSTRUCTION): New macro for a description
        of an undefined instruction.
        (arm_opcodes): Use it.
        (thumb_opcod): Use it.
        (thumb32_opc): Use it.

        Update expected disassembly regrexps in GAS and LD testsuites.
@
text
@d15 1
a15 1
 .*:	e28fc6.* 	add	ip, pc, #.*	; 0x.*
d26 3
a28 3
 .*:	e1a00000 	nop			\(mov r0,r0\)
 .*:	e1a00000 	nop			\(mov r0,r0\)
 .*:	e1a00000 	nop			\(mov r0,r0\)
d32 7
a38 7
 .*:	46c0      	nop			\(mov r8, r8\)
 .*:	46c0      	nop			\(mov r8, r8\)
 .*:	46c0      	nop			\(mov r8, r8\)
 .*:	46c0      	nop			\(mov r8, r8\)
 .*:	46c0      	nop			\(mov r8, r8\)
 .*:	46c0      	nop			\(mov r8, r8\)
 .*:	46c0      	nop			\(mov r8, r8\)
@


1.6
log
@	* ld-arm/mixed-lib.d: Loosen pattern.
@
text
@d17 1
a17 1
 .*:	e5bcf.* 	ldr	pc, \[ip, #.*\]!
@


1.5
log
@2007-05-22  Paul Brook  <paul@@codesourcery.com>

	bunutils/
	* objdump.c (find_symbol_for_address): Merge section and target
	specific filtering code.

	ld/testsuite/
	* ld-arm-mixed-lib.d: Update expected output.
	* ld-arm/arm-app.d: Ditto.
	* ld-arm/mixed-app.d: Ditto.
	* ld-arm/arm-lib-plt32.d: Ditto.
	* ld-arm/arm-app-abs32.d: Ditto.
	* ld-arm/mixed-app-v5.d: Ditto.
	* ld-arm/armthumb-lib.d: Ditto.
	* ld-arm/arm-lib.d: Ditto.

	gas/testsuite/
	* gas/arm/backslash-at.d: Update expected output.
@
text
@d11 1
a11 1
 .*:	e59fe004 	ldr	lr, \[pc, #4\]	; .* <lib_func1-0x1c>
@


1.4
log
@	* ld-arm/arm-app-abs32.d: Convert to unified syntax.
	* ld-arm/arm-app.d: Likewise.
	* ld-arm/arm-lib-plt32.d: Likewise.
	* ld-arm/arm-lib.d: Likewise.
	* ld-arm/arm-static-app.d: Likewise.
	* ld-arm/armthumb-lib.d: Likewise.
	* ld-arm/mixed-app-v5.d: Likewise.
	* ld-arm/mixed-app.d: Likewise.
	* ld-arm/mixed-lib.d: Likewise.
@
text
@d11 1
a11 1
 .*:	e59fe004 	ldr	lr, \[pc, #4\]	; .* <\.plt\+0x10>
d23 1
a23 1
 .*:	ebfffff. 	bl	.* <.text-0x..?>
@


1.3
log
@	* ld-arm/arm-dyn.ld, ld-arm/arm-lib.ld: Remove .stack.
	* ld-arm/armthumb-lib.d, ld-arm/mixed-app.d, ld-arm/mixed-lib.d:
	Allow smaller section gap.
	* ld-arm/armthumb-lib.sym, ld-arm/mixed-lib.sym: Reorder.  Remove
	_stack.
	* ld-arm/mixed-app.sym: Remove _stack.
	* ld-arm/tls-app.d: Update start address.
@
text
@d10 1
a10 1
 .*:	e52de004 	str	lr, \[sp, #-4\]!
d22 1
a22 1
 .*:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
d24 1
a24 1
 .*:	e89d6800 	ldmia	sp, {fp, sp, lr}
@


1.2
log
@2006-05-24  Paul Brook  <paul@@codesourcery.com>

bfd/
	* elf-bfd.h (elf_backend_data): Add elf_backend_output_arch_local_syms
	* elf32-arm.c (output_arch_syminfo): Define.
	(elf32_arm_ouput_plt_map_sym, elf32_arm_output_plt_map,
	elf32_arm_output_arch_local_syms): New functions.
	(elf_backend_output_arch_local_syms): Define.
	* elflink.c (bfd_elf_final_link): Call
	elf_backend_output_arch_local_syms.
	* elfxx-target.h (elf_backend_output_arch_local_syms): Provide default
	definition.
	(elfNN_bed): Add elf_backend_output_arch_local_syms.
ld/testsuite/
	* ld-arm/arm-app-abs32.d: Update expected output.
	* ld-arm/arm-app.d: Ditto.
	* ld-arm/arm-lib-plt32.d: Ditto.
	* ld-arm/arm-lib.d: Ditto.
	* ld-arm/mixed-app-v5.d: Ditto.
	* ld-arm/mixed-app.d: Ditto.
	* ld-arm/mixed-lib.d: Ditto.
@
text
@d23 1
a23 1
 .*:	ebfffff. 	bl	.* <.text-0x..>
@


1.1
log
@bfd/
	* elf32-arm.c (PLT_THUMB_STUB_SIZE): Define.
	(elf32_arm_plt_thumb_stub): New.
	(struct elf32_arm_link_hash_entry): Add plt_thumb_refcount
	and plt_got_offset.
	(elf32_arm_link_hash_traverse): Fix typo.
	(elf32_arm_link_hash_table): Add obfd.
	(elf32_arm_link_hash_newfunc): Initialize new fields.
	(elf32_arm_copy_indirect_symbol): Copy plt_thumb_refcount.
	(elf32_arm_link_hash_table_create): Initialize obfd.
	(record_arm_to_thumb_glue): Mark the glue as a local ARM function.
	(record_thumb_to_arm_glue): Mark the glue as a local Thumb function.
	(bfd_elf32_arm_get_bfd_for_interworking): Verify that the
	interworking BFD is not dynamic.
	(bfd_elf32_arm_process_before_allocation): Handle R_ARM_PLT32.  Do
	not emit glue for PLT references.
	(elf32_arm_final_link_relocate): Handle Thumb functions.  Do not
	emit glue for PLT references.  Support the Thumb PLT prefix.
	(elf32_arm_gc_sweep_hook): Handle R_ARM_THM_PC22 and
	plt_thumb_refcount.
	(elf32_arm_check_relocs): Likewise.
	(elf32_arm_adjust_dynamic_symbol): Handle Thumb functions and
	plt_thumb_refcount.
	(allocate_dynrelocs): Handle Thumb PLT references.
	(elf32_arm_finish_dynamic_symbol): Likewise.
	(elf32_arm_symbol_processing): New function.
	(elf_backend_symbol_processing): Define.
opcodes/
	* arm-dis.c (WORD_ADDRESS): Define.
	(print_insn): Use it.  Correct big-endian end-of-section handling.
gas/testsuite/
	* gas/arm/mapping.d: Expect F markers for Thumb code.
	* gas/arm/unwind.d: Update big-endian pattern.
ld/
	* emultempl/armelf.em (arm_elf_set_bfd_for_interworking): Don't use
	a dynamic object for stubs.
ld/testsuite/
	* ld-arm/mixed-app.d, ld-arm/mixed-app.r, ld-arm/mixed-app.s,
	ld-arm/mixed-app.sym, ld-arm/mixed-lib.d, ld-arm/mixed-lib.r,
	ld-arm/mixed-lib.s, ld-arm/mixed-lib.sym, ld-arm/arm-dyn.ld,
	ld-arm/arm-lib.ld: New files.
	* ld-arm/arm-app-abs32.d, ld-arm/arm-app-abs32.r, ld-arm/arm-app.d,
	ld-arm/arm-app.r, ld-arm/arm-lib-plt32.d, ld-arm/arm-lib-plt32.r,
	ld-arm/arm-lib.d, ld-arm/arm-lib.r, ld-arm/arm-static-app.d,
	ld-arm/arm-static-app.r: Update for big-endian.
	* ld-arm/arm-elf.exp: Run the new tests.
@
text
@d11 1
a11 1
 .*:	e59fe004 	ldr	lr, \[pc, #4\]	; .* <lib_func1-0x1.>
d23 1
a23 1
 .*:	ebfffff. 	bl	.* <lib_func1-0x..>
@


1.1.8.1
log
@2006-05-24  Paul Brook  <paul@@codesourcery.com>

	Backport from mainline.
	* bfd/elf-bfd.h (elf_backend_data): Add
	elf_backend_output_arch_local_syms
	* bfd/elf32-arm.c (output_arch_syminfo): Define.
	(elf32_arm_ouput_plt_map_sym, elf32_arm_output_plt_map,
	elf32_arm_output_arch_local_syms): New functions.
	(elf_backend_output_arch_local_syms): Define.
	* bfd/elflink.c (bfd_elf_final_link): Call
	elf_backend_output_arch_local_syms.
	* bfd/elfxx-target.h (elf_backend_output_arch_local_syms): Provide
	default definition.
	(elfNN_bed): Add elf_backend_output_arch_local_syms.
	* ld/testsuite/ld-arm/arm-app-abs32.d: Update expected output.
	* ld/testsuite/ld-arm/arm-app.d: Ditto.
	* ld/testsuite/ld-arm/arm-lib-plt32.d: Ditto.
	* ld/testsuite/ld-arm/arm-lib.d: Ditto.
	* ld/testsuite/ld-arm/mixed-app-v5.d: Ditto.
	* ld/testsuite/ld-arm/mixed-app.d: Ditto.
	* ld/testsuite/ld-arm/mixed-lib.d: Ditto.
@
text
@d11 1
a11 1
 .*:	e59fe004 	ldr	lr, \[pc, #4\]	; .* <\.plt\+0x10>
d23 1
a23 1
 .*:	ebfffff. 	bl	.* <.text-0x..>
@


