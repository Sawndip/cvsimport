head	1.5;
access;
symbols
	binutils-2_24-branch:1.5.0.4
	binutils-2_24-branchpoint:1.5
	binutils-2_21_1:1.4
	binutils-2_23_2:1.5
	binutils-2_23_1:1.5
	binutils-2_23:1.5
	binutils-2_23-branch:1.5.0.2
	binutils-2_23-branchpoint:1.5
	binutils-2_22_branch:1.4.0.6
	binutils-2_22:1.4
	binutils-2_22-branch:1.4.0.4
	binutils-2_22-branchpoint:1.4
	binutils-2_21:1.4
	binutils-2_21-branch:1.4.0.2
	binutils-2_21-branchpoint:1.4
	binutils-2_20_1:1.2
	binutils-2_20:1.2
	binutils-arc-20081103-branch:1.2.0.12
	binutils-arc-20081103-branchpoint:1.2
	binutils-2_20-branch:1.2.0.10
	binutils-2_20-branchpoint:1.2
	dje-cgen-play1-branch:1.2.0.8
	dje-cgen-play1-branchpoint:1.2
	arc-20081103-branch:1.2.0.6
	arc-20081103-branchpoint:1.2
	binutils-2_19_1:1.2
	binutils-2_19:1.2
	binutils-2_19-branch:1.2.0.4
	binutils-2_19-branchpoint:1.2
	binutils-2_18:1.2
	binutils-2_18-branch:1.2.0.2
	binutils-2_18-branchpoint:1.2
	binutils-csl-coldfire-4_1-32:1.1.2.1
	binutils-csl-sourcerygxx-4_1-32:1.1.2.1
	binutils-csl-innovasic-fido-3_4_4-33:1.1.2.1
	binutils-csl-coldfire-4_1-30:1.1.2.1
	binutils-csl-sourcerygxx-4_1-30:1.1.2.1
	binutils-csl-coldfire-4_1-28:1.1.2.1
	binutils-csl-sourcerygxx-4_1-29:1.1.2.1
	binutils-csl-sourcerygxx-4_1-28:1.1.2.1
	binutils-csl-arm-2006q3-27:1.1.2.1
	binutils-csl-sourcerygxx-4_1-27:1.1.2.1
	binutils-csl-arm-2006q3-26:1.1.2.1
	binutils-csl-sourcerygxx-4_1-26:1.1.2.1
	binutils-csl-sourcerygxx-4_1-25:1.1.2.1
	binutils-csl-sourcerygxx-4_1-24:1.1.2.1
	binutils-csl-sourcerygxx-4_1-23:1.1.2.1
	binutils-csl-sourcerygxx-4_1-21:1.1.2.1
	binutils-csl-arm-2006q3-21:1.1.2.1
	binutils-csl-sourcerygxx-4_1-22:1.1.2.1
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.1.2.1
	binutils-csl-sourcerygxx-4_1-20:1.1.2.1
	binutils-csl-arm-2006q3-19:1.1.2.1
	binutils-csl-sourcerygxx-4_1-19:1.1.2.1
	binutils-csl-sourcerygxx-4_1-18:1.1.2.1
	binutils-csl-renesas-4_1-9:1.1.2.1
	binutils-csl-renesas-4_1-8:1.1.2.1
	binutils_latest_snapshot:1.5
	binutils-csl-2_17-branch:1.1.0.2;
locks; strict;
comment	@# @;


1.5
date	2012.06.15.15.13.35;	author amodra;	state Exp;
branches;
next	1.4;

1.4
date	2009.11.20.15.04.51;	author tschwinge;	state Exp;
branches;
next	1.3;

1.3
date	2009.09.23.03.12.25;	author amodra;	state Exp;
branches;
next	1.2;

1.2
date	2006.11.13.21.18.36;	author drow;	state Exp;
branches;
next	1.1;

1.1
date	2006.08.18.15.00.18;	author pbrook;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2006.08.18.15.01.16;	author pbrook;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2006.12.18.16.21.45;	author shinwell;	state Exp;
branches;
next	;


desc
@@


1.5
log
@ld/
	* ldlang.h (lang_output_section_statement_type): Add after_end field.
	(lang_abs_symbol_at_beginning_of, lang_abs_symbol_at_end_of): Delete.
	(section_for_dot): Declare.
	* ldlang.c (lang_size_sections_1): Correct comment.
	(current_section): Move earlier.
	(current_assign, prefer_next_section): New static vars.
	(lang_do_assignments_1): Add found_end param.  Detect _end
	assignment to set found_end.  Set os->after_end.  Set above statics.
	(lang_do_assignments): Adjust lang_do_assignments_1 call.  Init
	vars.
	(section_for_dot): New function.
	(lang_set_startof): Don't make an absolute symbol.
	(lang_abs_symbol_at_beginning_of, lang_abs_symbol_at_end_of): Delete.
	* ldexp.c (new_rel_from_abs): Use section_for_dot.
	* emultempl/lnk960.em (symbol_at_beginning_of): New function.
	(symbol_at_end_of): Likewise.
	(lnk960_after_allocation): Use them.
	* scripttempl/elf.sc: Precede OTHER_GOT_SYMBOLS with . = .; and
	likewise before __bss_start.

ld/testsuite/
Update far too many tests.
@
text
@
Symbol table for image:
 +Num +Buc: +Value +Size +Type +Bind +Vis +Ndx +Name
 +.. +..: ........ +0 +NOTYPE +GLOBAL +DEFAULT +9 _edata
 +.. +..: ........ +0 +NOTYPE +GLOBAL +DEFAULT +9 __bss_start__
 +.. +..: ........ +0 +NOTYPE +GLOBAL +DEFAULT +9 _end
 +.. +..: ........ +4 +OBJECT +GLOBAL +DEFAULT +9 data_obj
 +.. +..: ........ +0 +NOTYPE +GLOBAL +DEFAULT +9 __bss_end__
 +.. +..: .......0 +20 +FUNC +GLOBAL +DEFAULT +6 lib_func1
 +.. +..: ........ +0 +NOTYPE +GLOBAL +DEFAULT +9 __data_start
 +.. +..: ........ +0 +NOTYPE +GLOBAL +DEFAULT +9 __end__
 +.. +..: ........ +0 +NOTYPE +GLOBAL +DEFAULT +9 __bss_start
 +.. +..: 00000000 +0 +NOTYPE +GLOBAL +DEFAULT +UND app_func2
 +.. +..: .......0 +2 +FUNC +GLOBAL +DEFAULT +6 lib_func2
 +.. +..: ........ +0 +NOTYPE +GLOBAL +DEFAULT +9 _bss_end__
@


1.4
log
@ld/
2009-11-20  Thomas Schwinge  <thomas@@codesourcery.com>

	* emulparams/armelf.sh (OTHER_READONLY_SECTIONS)
	<__exidx_start, __exidx_end>: Use PROVIDE_HIDDEN.
	* emulparams/armelf_linux_eabi.sh (OTHER_READONLY_SECTIONS)
	<__exidx_start, __exidx_end>: Likewise.
	* emulparams/armsymbian.sh (OTHER_READONLY_SECTIONS)
	<.ARM.exidx$$Base, __exidx_start, __exidx_end, .ARM.exidx$$Limit>:
	Likewise.

ld/testsuite/
2009-11-20  Thomas Schwinge  <thomas@@codesourcery.com>

	* ld-arm/arm-dyn.ld: Adapt to main linker script changes.
	* ld-arm/arm-lib.ld: Likewise.
	* ld-arm/armthumb-lib.sym: : Adjust expected results.
	* ld-arm/farcall-mixed-app-v5.d: Likewise.
	* ld-arm/farcall-mixed-app.d: Likewise.
	* ld-arm/farcall-mixed-app.sym: Likewise.
	* ld-arm/farcall-mixed-lib.d: Likewise.
	* ld-arm/mixed-app-v5.d: Likewise.
	* ld-arm/mixed-app.d: Likewise.
	* ld-arm/mixed-app.sym: Likewise.
	* ld-arm/mixed-lib.sym: Likewise.
	* ld-arm/preempt-app.sym: Likewise.
	* ld-arm/tls-app.d: Likewise.
@
text
@d4 3
a6 3
 +.. +..: ........ +0 +NOTYPE +GLOBAL +DEFAULT +ABS _edata
 +.. +..: ........ +0 +NOTYPE +GLOBAL +DEFAULT +ABS __bss_start__
 +.. +..: ........ +0 +NOTYPE +GLOBAL +DEFAULT +ABS _end
d8 1
a8 1
 +.. +..: ........ +0 +NOTYPE +GLOBAL +DEFAULT +ABS __bss_end__
d11 2
a12 2
 +.. +..: ........ +0 +NOTYPE +GLOBAL +DEFAULT +ABS __end__
 +.. +..: ........ +0 +NOTYPE +GLOBAL +DEFAULT +ABS __bss_start
d15 1
a15 1
 +.. +..: ........ +0 +NOTYPE +GLOBAL +DEFAULT +ABS _bss_end__
@


1.3
log
@Tolerate some whitespace differences in readelf output.
@
text
@a9 1
 +.. +..: ........ +0 +NOTYPE +GLOBAL +DEFAULT +ABS __exidx_start
a15 1
 +.. +..: ........ +0 +NOTYPE +GLOBAL +DEFAULT +ABS __exidx_end
@


1.2
log
@	* ld-arm/arm-dyn.ld, ld-arm/arm-lib.ld: Remove .stack.
	* ld-arm/armthumb-lib.d, ld-arm/mixed-app.d, ld-arm/mixed-lib.d:
	Allow smaller section gap.
	* ld-arm/armthumb-lib.sym, ld-arm/mixed-lib.sym: Reorder.  Remove
	_stack.
	* ld-arm/mixed-app.sym: Remove _stack.
	* ld-arm/tls-app.d: Update start address.
@
text
@d3 15
a17 15
  Num Buc:    Value  Size   Type   Bind Vis      Ndx Name
   ..  ..: ........     0  NOTYPE GLOBAL DEFAULT ABS _edata
   ..  ..: ........     0  NOTYPE GLOBAL DEFAULT ABS __bss_start__
   ..  ..: ........     0  NOTYPE GLOBAL DEFAULT ABS _end
   ..  ..: ........     4  OBJECT GLOBAL DEFAULT   9 data_obj
   ..  ..: ........     0  NOTYPE GLOBAL DEFAULT ABS __bss_end__
   ..  ..: .......0    20    FUNC GLOBAL DEFAULT   6 lib_func1
   ..  ..: ........     0  NOTYPE GLOBAL DEFAULT ABS __exidx_start
   ..  ..: ........     0  NOTYPE GLOBAL DEFAULT   9 __data_start
   ..  ..: ........     0  NOTYPE GLOBAL DEFAULT ABS __end__
   ..  ..: ........     0  NOTYPE GLOBAL DEFAULT ABS __bss_start
   ..  ..: 00000000     0  NOTYPE GLOBAL DEFAULT UND app_func2
   ..  ..: .......0     2    FUNC GLOBAL DEFAULT   6 lib_func2
   ..  ..: ........     0  NOTYPE GLOBAL DEFAULT ABS _bss_end__
   ..  ..: ........     0  NOTYPE GLOBAL DEFAULT ABS __exidx_end
@


1.1
log
@2006-08-18  Paul Brook  <paul@@codesourcery.com>

	bfd/
	* elf32-arm.c (elf32_arm_link_hash_entry): Add export_glue.
	(elf32_arm_link_hash_newfunc): Initialize export_glue.
	(record_arm_to_thumb_glue): Return stub symbol.
	(elf32_arm_create_thumb_stub): New function.
	(elf32_arm_to_thumb_stub): Use it.
	(elf32_arm_to_thumb_export_stub): New function.
	(elf32_arm_begin_write_processing): New function.
	(allocate_dynrelocs): Allocate Arm stubs.
	(elf_backend_begin_write_processing): Define.
	(elf32_arm_symbian_begin_write_processing): Remove ATTRIBUTE_UNUSED.
	Call elf32_arm_begin_write_processing.

	ld/
	* emultempl/armelf.em (arm_elf_before_allocation): Call
	gld${EMULATION_NAME}_before_allocation after setting interworking bfd.

	ld/testsuite/
	* ld-arm/arm-elf.exp (armelftests): Add armthumb-lib.so.  Add
	-use-blx to mixed-lib.so
	* ld-arm/armthumb-lib.d: New file.
	* ld-arm/armthumb-lib.sym: New file.
@
text
@d5 4
d10 5
a16 7
   ..  ..: ........     0  NOTYPE GLOBAL DEFAULT ABS __bss_end__
   ..  ..: ........     0  NOTYPE GLOBAL DEFAULT ABS _stack
   ..  ..: ........     4  OBJECT GLOBAL DEFAULT   9 data_obj
   ..  ..: ........     0  NOTYPE GLOBAL DEFAULT ABS __bss_start__
   ..  ..: ........     0  NOTYPE GLOBAL DEFAULT ABS __bss_start
   ..  ..: ........     0  NOTYPE GLOBAL DEFAULT ABS _end
   ..  ..: 00000000     0  NOTYPE GLOBAL DEFAULT UND app_func2
a17 3
   ..  ..: ........     0  NOTYPE GLOBAL DEFAULT   9 __data_start
   ..  ..: ........     0  NOTYPE GLOBAL DEFAULT ABS __end__
   ..  ..: ........     0  NOTYPE GLOBAL DEFAULT ABS __exidx_start
@


1.1.2.1
log
@2006-08-18  Paul Brook  <paul@@codesourcery.com>

	Backport from mainline.
	bfd/
	* elf32-arm.c (elf32_arm_link_hash_entry): Add export_glue.
	(elf32_arm_link_hash_newfunc): Initialize export_glue.
	(record_arm_to_thumb_glue): Return stub symbol.
	(elf32_arm_create_thumb_stub): New function.
	(elf32_arm_to_thumb_stub): Use it.
	(elf32_arm_to_thumb_export_stub): New function.
	(elf32_arm_begin_write_processing): New function.
	(allocate_dynrelocs): Allocate Arm stubs.
	(elf_backend_begin_write_processing): Define.
	(elf32_arm_symbian_begin_write_processing): Remove ATTRIBUTE_UNUSED.
	Call elf32_arm_begin_write_processing.

	ld/
	* emultempl/armelf.em (arm_elf_before_allocation): Call
	gld${EMULATION_NAME}_before_allocation after setting interworking bfd.

	ld/testsuite/
	* ld-arm/arm-elf.exp (armelftests): Add armthumb-lib.so.  Add
	-use-blx to mixed-lib.so
	* ld-arm/armthumb-lib.d: New file.
	* ld-arm/armthumb-lib.sym: New file.
@
text
@@


1.1.2.2
log
@2006-12-18  Mark Shinwell  <shinwell@@codesourcery.com>

        ld/testsuite/
        * ld-arm/armthumb-lib.d: Correct address of lib_func2.
        * armthumb-lib.sym: Correct order of symbols.
        * mixed-lib.sym: Likewise.
@
text
@d5 3
a7 3
   ..  ..: ........     0  NOTYPE GLOBAL DEFAULT ABS __bss_start__
   ..  ..: ........     0  NOTYPE GLOBAL DEFAULT ABS _end
   ..  ..: ........     4  OBJECT GLOBAL DEFAULT   9 data_obj
a8 3
   ..  ..: .......0    20    FUNC GLOBAL DEFAULT   6 lib_func1
   ..  ..: ........     0  NOTYPE GLOBAL DEFAULT ABS __exidx_start
   ..  ..: ........     0  NOTYPE GLOBAL DEFAULT   9 __data_start
d10 2
a11 1
   ..  ..: ........     0  NOTYPE GLOBAL DEFAULT ABS __end__
d13 1
a14 2
   ..  ..: .......0     2    FUNC GLOBAL DEFAULT   6 lib_func2
   ..  ..: ........     0  NOTYPE GLOBAL DEFAULT ABS _bss_end__
d16 3
@


