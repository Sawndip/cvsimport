head	1.3;
access;
symbols
	binutils-2_24-branch:1.3.0.38
	binutils-2_24-branchpoint:1.3
	binutils-2_21_1:1.3
	binutils-2_23_2:1.3
	binutils-2_23_1:1.3
	binutils-2_23:1.3
	binutils-2_23-branch:1.3.0.36
	binutils-2_23-branchpoint:1.3
	binutils-2_22_branch:1.3.0.34
	binutils-2_22:1.3
	binutils-2_22-branch:1.3.0.32
	binutils-2_22-branchpoint:1.3
	binutils-2_21:1.3
	binutils-2_21-branch:1.3.0.30
	binutils-2_21-branchpoint:1.3
	binutils-2_20_1:1.3
	binutils-2_20:1.3
	binutils-arc-20081103-branch:1.3.0.28
	binutils-arc-20081103-branchpoint:1.3
	binutils-2_20-branch:1.3.0.26
	binutils-2_20-branchpoint:1.3
	dje-cgen-play1-branch:1.3.0.24
	dje-cgen-play1-branchpoint:1.3
	arc-20081103-branch:1.3.0.22
	arc-20081103-branchpoint:1.3
	binutils-2_19_1:1.3
	binutils-2_19:1.3
	binutils-2_19-branch:1.3.0.20
	binutils-2_19-branchpoint:1.3
	binutils-2_18:1.3
	binutils-2_18-branch:1.3.0.18
	binutils-2_18-branchpoint:1.3
	binutils-csl-coldfire-4_1-32:1.3
	binutils-csl-sourcerygxx-4_1-32:1.3
	binutils-csl-innovasic-fido-3_4_4-33:1.3
	binutils-csl-sourcerygxx-3_4_4-32:1.3
	binutils-csl-coldfire-4_1-30:1.3
	binutils-csl-sourcerygxx-4_1-30:1.3
	binutils-csl-coldfire-4_1-28:1.3
	binutils-csl-sourcerygxx-4_1-29:1.3
	binutils-csl-sourcerygxx-4_1-28:1.3
	binutils-csl-arm-2006q3-27:1.3
	binutils-csl-sourcerygxx-4_1-27:1.3
	binutils-csl-arm-2006q3-26:1.3
	binutils-csl-sourcerygxx-4_1-26:1.3
	binutils-csl-sourcerygxx-4_1-25:1.3
	binutils-csl-sourcerygxx-4_1-24:1.3
	binutils-csl-sourcerygxx-4_1-23:1.3
	binutils-csl-sourcerygxx-4_1-21:1.3
	binutils-csl-arm-2006q3-21:1.3
	binutils-csl-sourcerygxx-4_1-22:1.3
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.3
	binutils-csl-sourcerygxx-4_1-20:1.3
	binutils-csl-arm-2006q3-19:1.3
	binutils-csl-sourcerygxx-4_1-19:1.3
	binutils-csl-sourcerygxx-4_1-18:1.3
	binutils-csl-renesas-4_1-9:1.3
	binutils-csl-sourcerygxx-3_4_4-25:1.3
	binutils-csl-renesas-4_1-8:1.3
	binutils-csl-renesas-4_1-7:1.3
	binutils-csl-renesas-4_1-6:1.3
	binutils-csl-sourcerygxx-4_1-17:1.3
	binutils-csl-sourcerygxx-4_1-14:1.3
	binutils-csl-sourcerygxx-4_1-15:1.3
	binutils-csl-sourcerygxx-4_1-13:1.3
	binutils-2_17:1.3
	binutils-csl-sourcerygxx-4_1-12:1.3
	binutils-csl-sourcerygxx-3_4_4-21:1.3
	binutils-csl-wrs-linux-3_4_4-24:1.3
	binutils-csl-wrs-linux-3_4_4-23:1.3
	binutils-csl-sourcerygxx-4_1-9:1.3
	binutils-csl-sourcerygxx-4_1-8:1.3
	binutils-csl-sourcerygxx-4_1-7:1.3
	binutils-csl-arm-2006q1-6:1.3
	binutils-csl-sourcerygxx-4_1-6:1.3
	binutils-csl-wrs-linux-3_4_4-22:1.3
	binutils-csl-coldfire-4_1-11:1.3
	binutils-csl-sourcerygxx-3_4_4-19:1.3
	binutils-csl-coldfire-4_1-10:1.3
	binutils-csl-sourcerygxx-4_1-5:1.3
	binutils-csl-sourcerygxx-4_1-4:1.3
	binutils-csl-wrs-linux-3_4_4-21:1.3
	binutils-csl-morpho-4_1-4:1.3
	binutils-csl-sourcerygxx-3_4_4-17:1.3
	binutils-csl-wrs-linux-3_4_4-20:1.3
	binutils-2_17-branch:1.3.0.16
	binutils-2_17-branchpoint:1.3
	binutils-csl-2_17-branch:1.3.0.14
	binutils-csl-2_17-branchpoint:1.3
	binutils-csl-gxxpro-3_4-branch:1.3.0.12
	binutils-csl-gxxpro-3_4-branchpoint:1.3
	binutils-2_16_1:1.3
	binutils-csl-arm-2005q1b:1.3
	binutils-2_16:1.3
	binutils-csl-arm-2005q1a:1.3
	binutils-csl-arm-2005q1-branch:1.3.0.10
	binutils-csl-arm-2005q1-branchpoint:1.3
	binutils-2_16-branch:1.3.0.8
	binutils-2_16-branchpoint:1.3
	csl-arm-2004-q3d:1.3
	csl-arm-2004-q3:1.3
	binutils-2_15:1.3
	binutils-2_15-branchpoint:1.3
	csl-arm-2004-q1a:1.3
	csl-arm-2004-q1:1.3
	binutils-2_15-branch:1.3.0.6
	cagney_bfdfile-20040213-branch:1.3.0.4
	cagney_bfdfile-20040213-branchpoint:1.3
	cagney_bigcore-20040122-branch:1.3.0.2
	cagney_bigcore-20040122-branchpoint:1.3
	csl-arm-2003-q4:1.3
	binutils-2_14:1.1.10.1
	binutils-2_14-branch:1.1.0.10
	binutils-2_14-branchpoint:1.1
	binutils-2_13_2_1:1.1
	binutils-2_13_2:1.1
	binutils-2_13_1:1.1
	binutils-2_13:1.1
	binutils-2_13-branchpoint:1.1
	binutils-2_13-branch:1.1.0.8
	binutils-2_12_1:1.1
	binutils-2_12:1.1
	binutils-2_12-branch:1.1.0.6
	binutils-2_12-branchpoint:1.1
	cygnus_cvs_20020108_pre:1.1
	binutils-2_11_2:1.1
	binutils-2_11_1:1.1
	binutils-2_11:1.1
	x86_64versiong3:1.1
	binutils-2_11-branch:1.1.0.4
	binutils-2_10_1:1.1.2.1
	binutils-2_10-branch:1.1.0.2
	binutils_latest_snapshot:1.3;
locks; strict;
comment	@# @;


1.3
date	2003.07.29.14.02.55;	author jakub;	state Exp;
branches;
next	1.2;

1.2
date	2003.05.09.15.35.08;	author sky;	state Exp;
branches;
next	1.1;

1.1
date	2000.05.13.16.54.32;	author hjl;	state Exp;
branches
	1.1.2.1
	1.1.10.1;
next	;

1.1.2.1
date	2000.10.23.08.00.45;	author pb;	state Exp;
branches;
next	;

1.1.10.1
date	2003.05.15.19.15.11;	author drow;	state Exp;
branches;
next	;


desc
@@


1.3
log
@	* ld-elfvsb/elf-offset.ld: Add .rel.toc, .rela.toc and .toc
	sections.
--- ld/testsuite/ld-elfvsb/elf-offset.ld.jj	2003-05-19 17:12:47.000000000 -0400
+++ ld/testsuite/ld-elfvsb/elf-offset.ld	2003-07-29 05:39:34.000000000 -0400
@@@@ -46,6 +46,8 @@@@ SECTIONS
     }
   .rel.got       : { *(.rel.got)		}
   .rela.got      : { *(.rela.got)		}
+  .rel.toc       : { *(.rel.toc)		}
+  .rela.toc      : { *(.rela.toc)		}
   .rel.ctors     : { *(.rel.ctors)	}
   .rela.ctors    : { *(.rela.ctors)	}
   .rel.dtors     : { *(.rel.dtors)	}
@@@@ -111,6 +113,7 @@@@ SECTIONS
     KEEP (*(.dtors))
   }
   .got           : { *(.got.plt) *(.got) }
+  .toc           : { *(.toc) }
   .dynamic       : { *(.dynamic) }
   /* We want the small data sections together, so single-instruction offsets
      can access them all, and initialized data all before uninitialized, so
@
text
@SECTIONS
{
  /* Read-only sections, merged into text segment: */
  . = 0x100000;
  .hash          : { *(.hash)		}
  .dynsym        : { *(.dynsym)		}
  .dynstr        : { *(.dynstr)		}
  .gnu.version   : { *(.gnu.version)	}
  .gnu.version_d   : { *(.gnu.version_d)	}
  .gnu.version_r   : { *(.gnu.version_r)	}
  .rel.text      :
    {
      *(.rel.text)
      *(.rel.text.*)
      *(.rel.gnu.linkonce.t*)
    }
  .rela.text     :
    {
      *(.rela.text)
      *(.rela.text.*)
      *(.rela.gnu.linkonce.t*)
    }
  .rel.data      :
    {
      *(.rel.data)
      *(.rel.data.*)
      *(.rel.gnu.linkonce.d*)
    }
  .rela.data     :
    {
      *(.rela.data)
      *(.rela.data.*)
      *(.rela.gnu.linkonce.d*)
    }
  .rel.rodata    :
    {
      *(.rel.rodata)
      *(.rel.rodata.*)
      *(.rel.gnu.linkonce.r*)
    }
  .rela.rodata   :
    {
      *(.rela.rodata)
      *(.rela.rodata.*)
      *(.rela.gnu.linkonce.r*)
    }
  .rel.got       : { *(.rel.got)		}
  .rela.got      : { *(.rela.got)		}
  .rel.toc       : { *(.rel.toc)		}
  .rela.toc      : { *(.rela.toc)		}
  .rel.ctors     : { *(.rel.ctors)	}
  .rela.ctors    : { *(.rela.ctors)	}
  .rel.dtors     : { *(.rel.dtors)	}
  .rela.dtors    : { *(.rela.dtors)	}
  .rel.init      : { *(.rel.init)	}
  .rela.init     : { *(.rela.init)	}
  .rel.fini      : { *(.rel.fini)	}
  .rela.fini     : { *(.rela.fini)	}
  .rel.bss       : { *(.rel.bss)		}
  .rela.bss      : { *(.rela.bss)		}
  .rel.plt       : { *(.rel.plt)		}
  .rela.plt      : { *(.rela.plt)		}
  .rel.eh_frame  : { *(.rel.eh_frame)		}
  .rela.eh_frame : { *(.rela.eh_frame)		}
  .init          : { KEEP (*(.init))	}
  .plt      : { *(.plt)	}
  .text      :
  {
    *(.text)
    *(.text.*)
    *(.stub)
    /* .gnu.warning sections are handled specially by elf32.em.  */
    *(.gnu.warning)
    *(.gnu.linkonce.t*)
  }
  _etext = .;
  PROVIDE (etext = .);
  .fini      : { KEEP (*(.fini))		} =0x9090
  .rodata    :
  {
    *(.rodata)
    *(.rodata.*)
    *(.gnu.linkonce.r*)
  }
  .rodata1   : { *(.rodata1) }
  /* Adjust the address for the data segment.  We want to adjust up to
     the same address within the page on the next page up.  */
  . = ALIGN(0x1000) + (. & (0x1000 - 1));
  .data    :
  {
    *(.data)
    *(.data.*)
    *(.gnu.linkonce.d*)
    SORT(CONSTRUCTORS)
  }
  .data1   : { *(.data1) }
  .ctors         :
  {
    /* gcc uses crtbegin.o to find the start of the constructors, so
       we make sure it is first.  Because this is a wildcard, it
       doesn't matter if the user does not actually link against
       crtbegin.o; the linker won't look for a file to match a
       wildcard.  The wildcard also means that it doesn't matter which
       directory crtbegin.o is in.  */
    KEEP (*crtbegin.o(.ctors))
    KEEP (*(SORT(.ctors.*)))
    KEEP (*(.ctors))
  }
  .dtors         :
  {
    KEEP (*crtbegin.o(.dtors))
    KEEP (*(SORT(.dtors.*)))
    KEEP (*(.dtors))
  }
  .got           : { *(.got.plt) *(.got) }
  .toc           : { *(.toc) }
  .dynamic       : { *(.dynamic) }
  /* We want the small data sections together, so single-instruction offsets
     can access them all, and initialized data all before uninitialized, so
     we can shorten the on-disk segment size.  */
  .sdata     : { *(.sdata) *(.sdata.*) }
  _edata  =  .;
  PROVIDE (edata = .);
  __bss_start = .;
  .sbss      : { *(.sbss) *(.scommon) }
  .bss       :
  {
   *(.dynbss)
   *(.bss)
   *(COMMON)
   /* Align here to ensure that the .bss section occupies space up to
      _end.  Align after .bss to ensure correct alignment even if the
      .bss section disappears because there are no input sections.  */
   . = ALIGN(32 / 8);
  }
  . = ALIGN(32 / 8);
  _end = . ;
  PROVIDE (end = .);
  /* Stabs debugging sections.  */
  .stab 0 : { *(.stab) }
  .stabstr 0 : { *(.stabstr) }
  .stab.excl 0 : { *(.stab.excl) }
  .stab.exclstr 0 : { *(.stab.exclstr) }
  .stab.index 0 : { *(.stab.index) }
  .stab.indexstr 0 : { *(.stab.indexstr) }
  .comment 0 : { *(.comment) }
  /* DWARF debug sections.
     Symbols in the DWARF debugging sections are relative to the beginning
     of the section so we begin them at 0.  */
  /* DWARF 1 */
  .debug          0 : { *(.debug) }
  .line           0 : { *(.line) }
  /* GNU DWARF 1 extensions */
  .debug_srcinfo  0 : { *(.debug_srcinfo) }
  .debug_sfnames  0 : { *(.debug_sfnames) }
  /* DWARF 1.1 and DWARF 2 */
  .debug_aranges  0 : { *(.debug_aranges) }
  .debug_pubnames 0 : { *(.debug_pubnames) }
  /* DWARF 2 */
  .debug_info     0 : { *(.debug_info) }
  .debug_abbrev   0 : { *(.debug_abbrev) }
  .debug_line     0 : { *(.debug_line) }
  .debug_frame    0 : { *(.debug_frame) }
  .debug_str      0 : { *(.debug_str) }
  .debug_loc      0 : { *(.debug_loc) }
  .debug_macinfo  0 : { *(.debug_macinfo) }
  /* SGI/MIPS DWARF 2 extensions */
  .debug_weaknames 0 : { *(.debug_weaknames) }
  .debug_funcnames 0 : { *(.debug_funcnames) }
  .debug_typenames 0 : { *(.debug_typenames) }
  .debug_varnames  0 : { *(.debug_varnames) }
  /* These must appear regardless of  .  */
}
@


1.2
log
@	* ld-elfvsb/elf-offset.ld: Add .rel.eh_frame and .rela.eh_frame
	to linker script.
	* ld-elfvsb/elfvsb.exp (visibility_run): Add setup_xfails for s390x.
	* ld-selective/selective.exp: Disable for s390 and s390x.
	* ld-shared/elf-offset.ld: Add .rel.eh_frame and .rela.eh_frame
	to linker script.
	* ld-shared/shared.exp (shared_test): Add setup_xfails for s390x.
	* ld-undefined/undefined.exp (checkund): Remove setup_xfail for s390x.
@
text
@d49 2
d116 1
@


1.1
log
@2000-05-13  H.J. Lu  (hjl@@gnu.org)

	* lib/ld-lib.exp (default_ld_link): Redirect the linker output
	to link_output and make it global.

	* ld-elfvsb/elf-offset.ld: New. ELF visibility fearture
	tests.
	* ld-elfvsb/elfvsb.dat: Likewise.
	* ld-elfvsb/elfvsb.exp: Likewise.
	* ld-elfvsb/main.c: Likewise.
	* ld-elfvsb/sh1.c: Likewise.
	* ld-elfvsb/sh2.c: Likewise.
@
text
@d61 2
@


1.1.10.1
log
@	Merge from mainline:

	2003-05-13  H.J. Lu <hongjiu.lu@@intel.com>
	* ld-elfweak/elfweak.exp: Fix typo.

	2003-05-13  Kaz Kojima  <kkojima@@rr.iij4u.or.jp>
	* ld-elfvers/vers.exp: Run on sh[34]*-*-linux*.
	* ld-elfvsb/elfvsb.exp: Likewise.
	* ld-elfweak/elfweak.exp: Likewise.

	2003-05-09  Martin Schwidefsky  <schwidefsky@@de.ibm.com>
	* ld-elfvsb/elf-offset.ld: Add .rel.eh_frame and .rela.eh_frame
	to linker script.
	* ld-elfvsb/elfvsb.exp (visibility_run): Add setup_xfails for s390x.
	* ld-selective/selective.exp: Disable for s390 and s390x.
	* ld-shared/elf-offset.ld: Add .rel.eh_frame and .rela.eh_frame
	to linker script.
	* ld-shared/shared.exp (shared_test): Add setup_xfails for s390x.
	* ld-undefined/undefined.exp (checkund): Remove setup_xfail for s390x.

	2003-05-08  H.J. Lu <hongjiu.lu@@intel.com>
	* ld-elfvers/vers.exp: Add vers27d4 and vers27d5 to test
	versioned reference for hidden symbol.

	* ld-elfvers/vers27d4.dsym: New file.
	* ld-elfvers/vers27d4.ver: Likewise.

	2003-05-07  H.J. Lu <hongjiu.lu@@intel.com>
	* ld-elfvers/vers27d3.c (__start): New.
	(start): New.

	2003-05-07  H.J. Lu <hongjiu.lu@@intel.com>
	* ld-elfvers/vers.exp (build_binary): Support build exeutable.
	(build_binary): Renamed from ...
	(build_vers_lib): This.
	(build_vers_lib_no_pic): Updated.
	(build_vers_lib_pic): Likewise.
	Add vers27d1, vers27d2 and vers27d3 to test versioned
	definition for hidden symbol referenced by a DSO.

	* ld-elfvers/vers27d.dsym: New file.
	* ld-elfvers/vers27d.sym: Likewise.
	* ld-elfvers/vers27d.ver: Likewise.
	* ld-elfvers/vers27d1.c: Likewise.
	* ld-elfvers/vers27d2.c: Likewise.
	* ld-elfvers/vers27d3.c: Likewise.

	2003-05-07  Andreas Schwab  <schwab@@suse.de>
	* ld-elfvsb/elfvsb.exp: Run dump tests even when cross
	compiling.

	2003-05-06  Alexandre Oliva  <aoliva@@redhat.com>
	* config/default.exp (gcc_gas_flags): Force ABI to n32 on
	mips64-linux.
	* ld-elf/merge.d: Xfail on mips64*-linux-gnu*.
	* ld-mips-elf/mips-elf-flags.exp (ldemul): Set to o32-compatible
	on mips-sgi-irix6*, mips64-linux-gnu and mips64el-linux-gnu.
	(good_combination, bad_combination): Use it.
	Add -32 or -mabi=o64 wherever the ABI was formerly implied.

	2003-05-06  H.J. Lu <hjl@@gnu.org>
	* ld-elfvers/vers.exp (objdump_versionstuff): Support comment
	in expected version file.

	* ld-elfvers/vers25b.c: Add a line of comment.
	* ld-elfvers/vers25b.dsym: Likwise.
	* ld-elfvers/vers25b.ver: Likwise.
	* ld-elfvers/vers26b.dsym: Likwise.
	* ld-elfvers/vers26b.ver: Likwise.
	* ld-elfvers/vers27b.dsym: Likwise.
	* ld-elfvers/vers27b.ver: Likwise.
	* ld-elfvers/vers27c.c: Likwise.
	* ld-elfvers/vers27c.dsym: Likwise.
	* ld-elfvers/vers27c.ver: Likwise.
@
text
@a60 2
  .rel.eh_frame  : { *(.rel.eh_frame)		}
  .rela.eh_frame : { *(.rela.eh_frame)		}
@


1.1.2.1
log
@Merge from mainline.
@
text
@@

