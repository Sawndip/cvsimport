head	1.17;
access;
symbols
	binutils-2_24-branch:1.17.0.4
	binutils-2_24-branchpoint:1.17
	binutils-2_21_1:1.15
	binutils-2_23_2:1.17
	binutils-2_23_1:1.17
	binutils-2_23:1.17
	binutils-2_23-branch:1.17.0.2
	binutils-2_23-branchpoint:1.17
	binutils-2_22_branch:1.15.0.6
	binutils-2_22:1.15
	binutils-2_22-branch:1.15.0.4
	binutils-2_22-branchpoint:1.15
	binutils-2_21:1.15
	binutils-2_21-branch:1.15.0.2
	binutils-2_21-branchpoint:1.15
	binutils-2_20_1:1.13
	binutils-2_20:1.13
	binutils-arc-20081103-branch:1.13.0.8
	binutils-arc-20081103-branchpoint:1.13
	binutils-2_20-branch:1.13.0.6
	binutils-2_20-branchpoint:1.13
	dje-cgen-play1-branch:1.13.0.4
	dje-cgen-play1-branchpoint:1.13
	arc-20081103-branch:1.13.0.2
	arc-20081103-branchpoint:1.13
	binutils-2_19_1:1.12
	binutils-2_19:1.12
	binutils-2_19-branch:1.12.0.2
	binutils-2_19-branchpoint:1.12
	binutils-2_18:1.11
	binutils-2_18-branch:1.11.0.2
	binutils-2_18-branchpoint:1.11
	binutils-csl-coldfire-4_1-32:1.10
	binutils-csl-sourcerygxx-4_1-32:1.10
	binutils-csl-innovasic-fido-3_4_4-33:1.10
	binutils-csl-sourcerygxx-3_4_4-32:1.6
	binutils-csl-coldfire-4_1-30:1.10
	binutils-csl-sourcerygxx-4_1-30:1.10
	binutils-csl-coldfire-4_1-28:1.10
	binutils-csl-sourcerygxx-4_1-29:1.10
	binutils-csl-sourcerygxx-4_1-28:1.10
	binutils-csl-arm-2006q3-27:1.10
	binutils-csl-sourcerygxx-4_1-27:1.10
	binutils-csl-arm-2006q3-26:1.10
	binutils-csl-sourcerygxx-4_1-26:1.10
	binutils-csl-sourcerygxx-4_1-25:1.10
	binutils-csl-sourcerygxx-4_1-24:1.10
	binutils-csl-sourcerygxx-4_1-23:1.10
	binutils-csl-sourcerygxx-4_1-21:1.10
	binutils-csl-arm-2006q3-21:1.10
	binutils-csl-sourcerygxx-4_1-22:1.10
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.10
	binutils-csl-sourcerygxx-4_1-20:1.10
	binutils-csl-arm-2006q3-19:1.10
	binutils-csl-sourcerygxx-4_1-19:1.10
	binutils-csl-sourcerygxx-4_1-18:1.10
	binutils-csl-renesas-4_1-9:1.10
	binutils-csl-sourcerygxx-3_4_4-25:1.6
	binutils-csl-renesas-4_1-8:1.10
	binutils-csl-renesas-4_1-7:1.10
	binutils-csl-renesas-4_1-6:1.10
	binutils-csl-sourcerygxx-4_1-17:1.10
	binutils-csl-sourcerygxx-4_1-14:1.10
	binutils-csl-sourcerygxx-4_1-15:1.10
	binutils-csl-sourcerygxx-4_1-13:1.10
	binutils-2_17:1.10
	binutils-csl-sourcerygxx-4_1-12:1.10
	binutils-csl-sourcerygxx-3_4_4-21:1.10
	binutils-csl-wrs-linux-3_4_4-24:1.6
	binutils-csl-wrs-linux-3_4_4-23:1.6
	binutils-csl-sourcerygxx-4_1-9:1.10
	binutils-csl-sourcerygxx-4_1-8:1.10
	binutils-csl-sourcerygxx-4_1-7:1.10
	binutils-csl-arm-2006q1-6:1.10
	binutils-csl-sourcerygxx-4_1-6:1.10
	binutils-csl-wrs-linux-3_4_4-22:1.6
	binutils-csl-coldfire-4_1-11:1.10
	binutils-csl-sourcerygxx-3_4_4-19:1.10
	binutils-csl-coldfire-4_1-10:1.10
	binutils-csl-sourcerygxx-4_1-5:1.10
	binutils-csl-sourcerygxx-4_1-4:1.10
	binutils-csl-wrs-linux-3_4_4-21:1.6
	binutils-csl-morpho-4_1-4:1.10
	binutils-csl-sourcerygxx-3_4_4-17:1.10
	binutils-csl-wrs-linux-3_4_4-20:1.6
	binutils-2_17-branch:1.10.0.4
	binutils-2_17-branchpoint:1.10
	binutils-csl-2_17-branch:1.10.0.2
	binutils-csl-2_17-branchpoint:1.10
	binutils-csl-gxxpro-3_4-branch:1.6.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.6
	binutils-2_16_1:1.6
	binutils-csl-arm-2005q1b:1.6
	binutils-2_16:1.6
	binutils-csl-arm-2005q1a:1.6
	binutils-csl-arm-2005q1-branch:1.6.0.4
	binutils-csl-arm-2005q1-branchpoint:1.6
	binutils-2_16-branch:1.6.0.2
	binutils-2_16-branchpoint:1.6
	csl-arm-2004-q3d:1.5
	csl-arm-2004-q3:1.4
	binutils-2_15:1.3
	binutils-2_15-branchpoint:1.3
	csl-arm-2004-q1a:1.3
	csl-arm-2004-q1:1.3
	binutils-2_15-branch:1.3.0.6
	cagney_bfdfile-20040213-branch:1.3.0.4
	cagney_bfdfile-20040213-branchpoint:1.3
	cagney_bigcore-20040122-branch:1.3.0.2
	cagney_bigcore-20040122-branchpoint:1.3
	csl-arm-2003-q4:1.3
	binutils-2_14:1.1
	binutils-2_14-branch:1.1.0.2
	binutils-2_14-branchpoint:1.1
	binutils_latest_snapshot:1.17;
locks; strict;
comment	@# @;


1.17
date	2012.06.15.15.13.36;	author amodra;	state Exp;
branches;
next	1.16;

1.16
date	2012.06.06.10.50.16;	author amodra;	state Exp;
branches;
next	1.15;

1.15
date	2009.09.24.15.56.51;	author hjl;	state Exp;
branches;
next	1.14;

1.14
date	2009.09.23.03.12.26;	author amodra;	state Exp;
branches;
next	1.13;

1.13
date	2008.10.07.12.03.18;	author nickc;	state Exp;
branches;
next	1.12;

1.12
date	2007.09.30.01.33.14;	author vapier;	state Exp;
branches;
next	1.11;

1.11
date	2006.06.02.00.31.59;	author amodra;	state Exp;
branches;
next	1.10;

1.10
date	2005.08.17.10.04.31;	author amodra;	state Exp;
branches;
next	1.9;

1.9
date	2005.08.15.15.39.47;	author amodra;	state Exp;
branches;
next	1.8;

1.8
date	2005.07.08.16.20.24;	author hjl;	state Exp;
branches;
next	1.7;

1.7
date	2005.03.16.21.52.46;	author hjl;	state Exp;
branches;
next	1.6;

1.6
date	2005.01.28.08.21.14;	author jbeulich;	state Exp;
branches;
next	1.5;

1.5
date	2004.11.02.05.40.04;	author hp;	state Exp;
branches;
next	1.4;

1.4
date	2004.05.11.17.08.36;	author jakub;	state Exp;
branches;
next	1.3;

1.3
date	2003.09.30.18.03.54;	author hjl;	state Exp;
branches;
next	1.2;

1.2
date	2003.05.01.00.53.39;	author hjl;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.16.21.31.18;	author jakub;	state Exp;
branches;
next	;


desc
@@


1.17
log
@ld/
	* ldlang.h (lang_output_section_statement_type): Add after_end field.
	(lang_abs_symbol_at_beginning_of, lang_abs_symbol_at_end_of): Delete.
	(section_for_dot): Declare.
	* ldlang.c (lang_size_sections_1): Correct comment.
	(current_section): Move earlier.
	(current_assign, prefer_next_section): New static vars.
	(lang_do_assignments_1): Add found_end param.  Detect _end
	assignment to set found_end.  Set os->after_end.  Set above statics.
	(lang_do_assignments): Adjust lang_do_assignments_1 call.  Init
	vars.
	(section_for_dot): New function.
	(lang_set_startof): Don't make an absolute symbol.
	(lang_abs_symbol_at_beginning_of, lang_abs_symbol_at_end_of): Delete.
	* ldexp.c (new_rel_from_abs): Use section_for_dot.
	* emultempl/lnk960.em (symbol_at_beginning_of): New function.
	(symbol_at_end_of): Likewise.
	(lnk960_after_allocation): Use them.
	* scripttempl/elf.sc: Precede OTHER_GOT_SYMBOLS with . = .; and
	likewise before __bss_start.

ld/testsuite/
Update far too many tests.
@
text
@#source: tlsbinpic.s
#source: tlsbin.s
#as:
#ld: -shared
#readelf: -WSsrl
#target: ia64-*-*

There are [0-9]+ section headers, starting at offset 0x[0-9a-f]+:

Section Headers:
 +\[Nr\] Name +Type +Address +Off +Size +ES Flg Lk Inf Al
 +\[[ 0-9]+\] +NULL +0+ 0+ 0+ 00 +0 +0 +0
 +\[[ 0-9]+\] .interp +.*
 +\[[ 0-9]+\] .hash +.*
 +\[[ 0-9]+\] .dynsym +.*
 +\[[ 0-9]+\] .dynstr +.*
 +\[[ 0-9]+\] .rela.dyn +.*
 +\[[ 0-9]+\] .rela.IA_64.pltoff +.*
 +\[[ 0-9]+\] .plt +.*
 +\[[ 0-9]+\] .text +PROGBITS +40+1000 0+1000 0+140 00 +AX +0 +0 4096
 +\[[ 0-9]+\] .IA_64.unwind_info +.*
 +\[[ 0-9]+\] .IA_64.unwind +.*
 +\[[ 0-9]+\] .tdata +PROGBITS +60+1[0-9a-f]+ 0+1[0-9a-f]+ 0+60 00 WAT +0 +0 +4
 +\[[ 0-9]+\] .tbss +NOBITS +60+1[0-9a-f]+ 0+1[0-9a-f]+ 0+40 00 WAT +0 +0 +1
 +\[[ 0-9]+\] .dynamic +DYNAMIC +60+1[0-9a-f]+ 0+1[0-9a-f]+ 0+150 10 +WA +4 +0 +8
 +\[[ 0-9]+\] .got +PROGBITS +60+1318 0+1318 0+48 00 WAp +0 +0 +8
 +\[[ 0-9]+\] .IA_64.pltoff +.*
 +\[[ 0-9]+\] .shstrtab +.*
 +\[[ 0-9]+\] .symtab +.*
 +\[[ 0-9]+\] .strtab +.*
#...

Elf file type is EXEC \(Executable file\)
Entry point 0x40+10d0
There are [0-9]+ program headers, starting at offset [0-9]+

Program Headers:
 +Type +Offset +VirtAddr +PhysAddr +FileSiz +MemSiz +Flg Align
 +PHDR +0x0+40 0x40+40 0x40+40 0x0+188 0x0+188 R E 0x8
 +INTERP +0x0+1c8 0x40+1c8 0x40+1c8 0x[0-9a-f]+ 0x[0-9a-f]+ R +0x1
.*Requesting program interpreter.*
 +LOAD +0x0+ 0x40+ 0x40+ 0x0+1[0-9a-f]+ 0x0+1[0-9a-f]+ R E 0x10000
 +LOAD +0x0+1[0-9a-f]+ 0x60+1[0-9a-f]+ 0x60+1[0-9a-f]+ 0x0+0[0-9a-f]+ 0x0+0[0-9a-f]+ RW +0x10000
 +DYNAMIC +0x0+1[0-9a-f]+ 0x60+1[0-9a-f]+ 0x60+1[0-9a-f]+ 0x0+150 0x0+150 RW +0x8
 +TLS +0x0+1[0-9a-f]+ 0x60+1[0-9a-f]+ 0x60+1[0-9a-f]+ 0x0+60 0x0+a0 R +0x4
 +IA_64_UNWIND .* R +0x8
#...

Relocation section '.rela.dyn' at offset 0x[0-9a-f]+ contains 3 entries:
 +Offset +Info +Type +Symbol's Value +Symbol's Name \+ Addend
[0-9a-f ]+R_IA64_TPREL64LSB +0+ sG2 \+ 0
[0-9a-f ]+R_IA64_DTPMOD64LSB +0+ sG1 \+ 0
[0-9a-f ]+R_IA64_DTPREL64LSB +0+ sG1 \+ 0

Relocation section '.rela.IA_64.pltoff' at offset 0x[0-9a-f]+ contains 1 entries:
 +Offset +Info +Type +Symbol's Value +Symbol's Name \+ Addend
[0-9a-f ]+R_IA64_IPLTLSB +0+ __tls_get_addr \+ 0

Symbol table '\.dynsym' contains [0-9]+ entries:
 +Num: +Value +Size +Type +Bind +Vis +Ndx +Name
.* NOTYPE +LOCAL +DEFAULT +UND *
.* TLS +GLOBAL +DEFAULT +UND sG2
.* FUNC +GLOBAL +DEFAULT +UND __tls_get_addr
.* NOTYPE +GLOBAL +DEFAULT +15 __bss_start
.* TLS +GLOBAL +DEFAULT +UND sG1
.* NOTYPE +GLOBAL +DEFAULT +15 _edata
.* NOTYPE +GLOBAL +DEFAULT +15 _end

Symbol table '\.symtab' contains [0-9]+ entries:
 +Num: +Value +Size +Type +Bind +Vis +Ndx +Name
.* NOTYPE +LOCAL +DEFAULT +UND *
.* SECTION +LOCAL +DEFAULT +1 *
.* SECTION +LOCAL +DEFAULT +2 *
.* SECTION +LOCAL +DEFAULT +3 *
.* SECTION +LOCAL +DEFAULT +4 *
.* SECTION +LOCAL +DEFAULT +5 *
.* SECTION +LOCAL +DEFAULT +6 *
.* SECTION +LOCAL +DEFAULT +7 *
.* SECTION +LOCAL +DEFAULT +8 *
.* SECTION +LOCAL +DEFAULT +9 *
.* SECTION +LOCAL +DEFAULT +10 *
.* SECTION +LOCAL +DEFAULT +11 *
.* SECTION +LOCAL +DEFAULT +12 *
.* SECTION +LOCAL +DEFAULT +13 *
.* SECTION +LOCAL +DEFAULT +14 *
.* SECTION +LOCAL +DEFAULT +15 *
.* FILE +LOCAL +DEFAULT +ABS .*
.* TLS +LOCAL +DEFAULT +11 sl1
.* TLS +LOCAL +DEFAULT +11 sl2
.* TLS +LOCAL +DEFAULT +11 sl3
.* TLS +LOCAL +DEFAULT +11 sl4
.* TLS +LOCAL +DEFAULT +11 sl5
.* TLS +LOCAL +DEFAULT +11 sl6
.* TLS +LOCAL +DEFAULT +11 sl7
.* TLS +LOCAL +DEFAULT +11 sl8
.* FILE +LOCAL +DEFAULT +ABS .*
.* TLS +LOCAL +DEFAULT +12 bl1
.* TLS +LOCAL +DEFAULT +12 bl2
.* TLS +LOCAL +DEFAULT +12 bl3
.* TLS +LOCAL +DEFAULT +12 bl4
.* TLS +LOCAL +DEFAULT +12 bl5
.* TLS +LOCAL +DEFAULT +12 bl6
.* TLS +LOCAL +DEFAULT +12 bl7
.* TLS +LOCAL +DEFAULT +12 bl8
.* FILE +LOCAL +DEFAULT +ABS .*
.* OBJECT +LOCAL +DEFAULT +13 _DYNAMIC
.* OBJECT +LOCAL +DEFAULT +14 _GLOBAL_OFFSET_TABLE_
.* TLS +GLOBAL +DEFAULT +11 sg8
.* TLS +GLOBAL +DEFAULT +12 bg8
.* TLS +GLOBAL +DEFAULT +12 bg6
.* TLS +GLOBAL +DEFAULT +12 bg3
.* TLS +GLOBAL +DEFAULT +11 sg3
.* TLS +GLOBAL +HIDDEN +11 sh3
.* TLS +GLOBAL +DEFAULT +UND sG2
.* TLS +GLOBAL +DEFAULT +11 sg4
.* TLS +GLOBAL +DEFAULT +11 sg5
.* TLS +GLOBAL +DEFAULT +12 bg5
.* FUNC +GLOBAL +DEFAULT +UND __tls_get_addr
.* TLS +GLOBAL +HIDDEN +11 sh7
.* TLS +GLOBAL +HIDDEN +11 sh8
.* TLS +GLOBAL +DEFAULT +11 sg1
.* FUNC +GLOBAL +DEFAULT +8 _start
.* TLS +GLOBAL +HIDDEN +11 sh4
.* TLS +GLOBAL +DEFAULT +12 bg7
.* TLS +GLOBAL +HIDDEN +11 sh5
.* NOTYPE +GLOBAL +DEFAULT +15 __bss_start
.* FUNC +GLOBAL +DEFAULT +8 fn2
.* TLS +GLOBAL +DEFAULT +11 sg2
.* TLS +GLOBAL +DEFAULT +UND sG1
.* TLS +GLOBAL +HIDDEN +11 sh1
.* TLS +GLOBAL +DEFAULT +11 sg6
.* TLS +GLOBAL +DEFAULT +11 sg7
.* NOTYPE +GLOBAL +DEFAULT +15 _edata
.* NOTYPE +GLOBAL +DEFAULT +15 _end
.* TLS +GLOBAL +HIDDEN +11 sh2
.* TLS +GLOBAL +HIDDEN +11 sh6
.* TLS +GLOBAL +DEFAULT +12 bg2
.* TLS +GLOBAL +DEFAULT +12 bg1
.* TLS +GLOBAL +DEFAULT +12 bg4
@


1.16
log
@bfd/
	* elflink.c (elf_link_input_bfd): Provide a file symbol for
	each input file with local syms, if the input lacks such.
	(bfd_elf_final_link): Add a file symbol to mark end of locals
	for which we can associate with input files.
	(struct elf_final_link_info): Add filesym_count field.
	(struct elf_outext_info): Add need_second_pass and second_pass.
	(elf_link_output_extsym): Detect symbols defined in the output
	file, emit them on second pass over locals.
ld/testsuite/
Update to suit added STT_FILE symbols.
@
text
@d64 1
a64 1
.* NOTYPE +GLOBAL +DEFAULT +ABS __bss_start
d66 2
a67 2
.* NOTYPE +GLOBAL +DEFAULT +ABS _edata
.* NOTYPE +GLOBAL +DEFAULT +ABS _end
d126 1
a126 1
.* NOTYPE +GLOBAL +DEFAULT +ABS __bss_start
d133 2
a134 2
.* NOTYPE +GLOBAL +DEFAULT +ABS _edata
.* NOTYPE +GLOBAL +DEFAULT +ABS _end
@


1.15
log
@bfd/

2009-09-24  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/10630
	* elflink.c (elf_link_output_extsym): Turn off visibility on
	local symbol.
	(bfd_elf_final_link): Turn off visibility on dynamic local
	symbol.

ld/testsuite/

2009-09-24  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/10630
	* ld-alpha/tlsbin.rd: Remove HIDDEN/.hidden on local symbols.
	* ld-alpha/tlsbinr.rd: Likewise.
	* ld-alpha/tlspic.rd: Likewise.
	* ld-cris/libdso-2.d: Likewise.
	* ld-cris/locref1.d: Likewise.
	* ld-cris/locref2.d: Likewise.
	* ld-cris/tls-e-20a.d: Likewise.
	* ld-cris/tls-e-20.d: Likewise.
	* ld-cris/tls-e-80.d: Likewise.
	* ld-cris/tls-gc-68.d: Likewise.
	* ld-cris/tls-gc-69.d: Likewise.
	* ld-cris/tls-gc-70.d: Likewise.
	* ld-cris/tls-gc-75.d: Likewise.
	* ld-cris/tls-gc-76.d: Likewise.
	* ld-cris/tls-gc-79.d: Likewise.
	* ld-cris/tls-gd-1h.d: Likewise.
	* ld-cris/tls-gd-2h.d: Likewise.
	* ld-cris/tls-ld-4.d: Likewise.
	* ld-cris/tls-ld-5.d: Likewise.
	* ld-cris/tls-ld-6.d: Likewise.
	* ld-cris/tls-ld-7.d: Likewise.
	* ld-cris/tls-ldgd-14.d: Likewise.
	* ld-cris/tls-ldgd-15.d: Likewise.
	* ld-cris/tls-local-63.d: Likewise.
	* ld-cris/tls-local-64.d: Likewise.
	* ld-elf/pr9676.rd: Likewise.
	* ld-elf/pr9679.rd: Likewise.
	* ld-elfvsb/hidden2.d: Likewise.
	* ld-i386/tlsbindesc.rd: Likewise.
	* ld-i386/tlsbin.rd: Likewise.
	* ld-i386/tlsdesc.rd: Likewise.
	* ld-i386/tlsgdesc.rd: Likewise.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlspic.rd: Likewise.
	* ld-ia64/tlsbin.rd: Likewise.
	* ld-ia64/tlspic.rd: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-sparc/gotop32.rd: Likewise.
	* ld-sparc/gotop64.rd: Likewise.
	* ld-sparc/tlssunbin32.rd: Likewise.
	* ld-sparc/tlssunbin64.rd: Likewise.
	* ld-sparc/tlssunnopic32.rd: Likewise.
	* ld-sparc/tlssunnopic64.rd: Likewise.
	* ld-sparc/tlssunpic32.rd: Likewise.
	* ld-sparc/tlssunpic64.rd: Likewise.
	* ld-x86-64/tlsbindesc.rd: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-x86-64/tlsdesc.rd: Likewise.
	* ld-x86-64/tlsgdesc.rd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
	* ld-xtensa/tlsbin.rd: Likewise.
	* ld-xtensa/tlspic.rd: Likewise.

	* ld-elf/local1.d: New.
	* ld-elf/local1.map: Likewise.
	* ld-elf/local1.s: Likewise.
	* ld-ia64/local1.d: Likewise.
	* ld-ia64/local1.map: Likewise.
	* ld-ia64/local1.s: Likewise.
@
text
@d87 1
d96 1
d105 1
@


1.14
log
@Tolerate some whitespace differences in readelf output.
@
text
@d103 2
a104 2
.* OBJECT +LOCAL +HIDDEN +13 _DYNAMIC
.* OBJECT +LOCAL +HIDDEN +14 _GLOBAL_OFFSET_TABLE_
@


1.13
log
@        * readelf.c (process_section_headers): Do not cut the section names and
        types if running with --wide.

        * ld-ia64/tlsbin.rd: Update expected output now that --wide does
        not truncate section names.
        * ld-ia64/tlspic.rd: Likewise.
@
text
@d11 1
a11 1
  \[Nr\] Name +Type +Address +Off +Size +ES Flg Lk Inf Al
d38 3
a40 3
  Type +Offset +VirtAddr +PhysAddr +FileSiz +MemSiz +Flg Align
  PHDR +0x0+40 0x40+40 0x40+40 0x0+188 0x0+188 R E 0x8
  INTERP +0x0+1c8 0x40+1c8 0x40+1c8 0x[0-9a-f]+ 0x[0-9a-f]+ R +0x1
d42 5
a46 5
  LOAD +0x0+ 0x40+ 0x40+ 0x0+1[0-9a-f]+ 0x0+1[0-9a-f]+ R E 0x10000
  LOAD +0x0+1[0-9a-f]+ 0x60+1[0-9a-f]+ 0x60+1[0-9a-f]+ 0x0+0[0-9a-f]+ 0x0+0[0-9a-f]+ RW +0x10000
  DYNAMIC +0x0+1[0-9a-f]+ 0x60+1[0-9a-f]+ 0x60+1[0-9a-f]+ 0x0+150 0x0+150 RW +0x8
  TLS +0x0+1[0-9a-f]+ 0x60+1[0-9a-f]+ 0x60+1[0-9a-f]+ 0x0+60 0x0+a0 R +0x4
  IA_64_UNWIND .* R +0x8
d50 1
a50 1
 +Offset +Info +Type +Symbol's Value  Symbol's Name \+ Addend
d56 1
a56 1
 +Offset +Info +Type +Symbol's Value  Symbol's Name \+ Addend
d60 1
a60 1
 +Num: +Value +Size Type +Bind +Vis +Ndx Name
d62 6
a67 6
.* TLS +GLOBAL DEFAULT +UND sG2
.* FUNC +GLOBAL DEFAULT +UND __tls_get_addr
.* NOTYPE +GLOBAL DEFAULT +ABS __bss_start
.* TLS +GLOBAL DEFAULT +UND sG1
.* NOTYPE +GLOBAL DEFAULT +ABS _edata
.* NOTYPE +GLOBAL DEFAULT +ABS _end
d70 1
a70 1
 +Num: +Value +Size Type +Bind +Vis +Ndx Name
d72 15
a86 15
.* SECTION LOCAL +DEFAULT +1 *
.* SECTION LOCAL +DEFAULT +2 *
.* SECTION LOCAL +DEFAULT +3 *
.* SECTION LOCAL +DEFAULT +4 *
.* SECTION LOCAL +DEFAULT +5 *
.* SECTION LOCAL +DEFAULT +6 *
.* SECTION LOCAL +DEFAULT +7 *
.* SECTION LOCAL +DEFAULT +8 *
.* SECTION LOCAL +DEFAULT +9 *
.* SECTION LOCAL +DEFAULT +10 *
.* SECTION LOCAL +DEFAULT +11 *
.* SECTION LOCAL +DEFAULT +12 *
.* SECTION LOCAL +DEFAULT +13 *
.* SECTION LOCAL +DEFAULT +14 *
.* SECTION LOCAL +DEFAULT +15 *
d105 32
a136 32
.* TLS +GLOBAL DEFAULT +11 sg8
.* TLS +GLOBAL DEFAULT +12 bg8
.* TLS +GLOBAL DEFAULT +12 bg6
.* TLS +GLOBAL DEFAULT +12 bg3
.* TLS +GLOBAL DEFAULT +11 sg3
.* TLS +GLOBAL HIDDEN +11 sh3
.* TLS +GLOBAL DEFAULT +UND sG2
.* TLS +GLOBAL DEFAULT +11 sg4
.* TLS +GLOBAL DEFAULT +11 sg5
.* TLS +GLOBAL DEFAULT +12 bg5
.* FUNC +GLOBAL DEFAULT +UND __tls_get_addr
.* TLS +GLOBAL HIDDEN +11 sh7
.* TLS +GLOBAL HIDDEN +11 sh8
.* TLS +GLOBAL DEFAULT +11 sg1
.* FUNC +GLOBAL DEFAULT +8 _start
.* TLS +GLOBAL HIDDEN +11 sh4
.* TLS +GLOBAL DEFAULT +12 bg7
.* TLS +GLOBAL HIDDEN +11 sh5
.* NOTYPE +GLOBAL DEFAULT +ABS __bss_start
.* FUNC +GLOBAL DEFAULT +8 fn2
.* TLS +GLOBAL DEFAULT +11 sg2
.* TLS +GLOBAL DEFAULT +UND sG1
.* TLS +GLOBAL HIDDEN +11 sh1
.* TLS +GLOBAL DEFAULT +11 sg6
.* TLS +GLOBAL DEFAULT +11 sg7
.* NOTYPE +GLOBAL DEFAULT +ABS _edata
.* NOTYPE +GLOBAL DEFAULT +ABS _end
.* TLS +GLOBAL HIDDEN +11 sh2
.* TLS +GLOBAL HIDDEN +11 sh6
.* TLS +GLOBAL DEFAULT +12 bg2
.* TLS +GLOBAL DEFAULT +12 bg1
.* TLS +GLOBAL DEFAULT +12 bg4
@


1.12
log
@2007-09-29  Mike Frysinger  <vapier@@gentoo.org>

	* ld-alpha/tlsbin.rd: Use [0-9]+ to match section header count and
	0x[0-9a-f]+ to match section header offset.  Match section indexes
	with \[[ 0-9]+\].  Use [0-9]+ to match program header count and
	0x[0-9a-f]+ to match program header offset.  Match .dynsym and
	.symtab entry counts with [0-9]+.
	* ld-alpha/tlsbinr.rd: Likewise.
	* ld-alpha/tlspic.rd: Likewise.
	* ld-i386/tlsbin.rd: Likewise.
	* ld-i386/tlsbindesc.rd: Likewise.
	* ld-i386/tlsdesc.rd: Likewise.
	* ld-i386/tlsgdesc.rd: Likewise.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlspic.rd: Likewise.
	* ld-ia64/tlsbin.rd: Likewise.
	* ld-ia64/tlspic.rd: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-sparc/tlssunbin32.rd: Likewise.
	* ld-sparc/tlssunbin64.rd: Likewise.
	* ld-sparc/tlssunnopic32.rd: Likewise.
	* ld-sparc/tlssunnopic64.rd: Likewise.
	* ld-sparc/tlssunpic32.rd: Likewise.
	* ld-sparc/tlssunpic64.rd: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-x86-64/tlsbindesc.rd: Likewise.
	* ld-x86-64/tlsdesc.rd: Likewise.
	* ld-x86-64/tlsgdesc.rd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
@
text
@d18 1
a18 1
 +\[[ 0-9]+\] .rela.IA_64.pltof +.*
d21 1
a21 1
 +\[[ 0-9]+\] .IA_64.unwind_inf +.*
@


1.11
log
@bfd/
	PR ld/2723
	* elflink.c (bfd_elf_final_link): Don't output section symbols
	for special ELF sections.
ld/testsuite/
Update for removal of some section syms.
@
text
@d8 1
a8 1
There are 19 section headers, starting at offset 0x[0-9a-f]+:
d12 19
a30 19
  \[ 0\] +NULL +0+ 0+ 0+ 00 +0 +0 +0
  \[ 1\] .interp +.*
  \[ 2\] .hash +.*
  \[ 3\] .dynsym +.*
  \[ 4\] .dynstr +.*
  \[ 5\] .rela.dyn +.*
  \[ 6\] .rela.IA_64.pltof +.*
  \[ 7\] .plt +.*
  \[ 8\] .text +PROGBITS +40+1000 0+1000 0+140 00 +AX +0 +0 4096
  \[ 9\] .IA_64.unwind_inf +.*
  \[10\] .IA_64.unwind +.*
  \[11\] .tdata +PROGBITS +60+1[0-9a-f]+ 0+1[0-9a-f]+ 0+60 00 WAT +0 +0 +4
  \[12\] .tbss +NOBITS +60+1[0-9a-f]+ 0+1[0-9a-f]+ 0+40 00 WAT +0 +0 +1
  \[13\] .dynamic +DYNAMIC +60+1[0-9a-f]+ 0+1[0-9a-f]+ 0+150 10 +WA +4 +0 +8
  \[14\] .got +PROGBITS +60+1318 0+1318 0+48 00 WAp +0 +0 +8
  \[15\] .IA_64.pltoff +.*
  \[16\] .shstrtab +.*
  \[17\] .symtab +.*
  \[18\] .strtab +.*
d35 1
a35 1
There are 7 program headers, starting at offset [0-9]+
d59 1
a59 1
Symbol table '.dynsym' contains [0-9]+ entries:
d69 1
a69 1
Symbol table '.symtab' contains 66 entries:
@


1.10
log
@bfd/
	* elf32-cris.c (elf_cris_adjust_gotplt_to_got): Move assert later.
	* elfxx-mips.c (_bfd_mips_elf_hide_symbol): Cope with being called
	without any got section.

ld/testsuite/
	* ld-alpha/tlsbin.rd: Update.
	* ld-alpha/tlsbinr.rd: Update.
	* ld-cris/locref1.d: Update.
	* ld-cris/locref2.d: Update.
	* ld-i386/tlsbin.rd: Update.
	* ld-ia64/tlsbin.rd: Update.
	* ld-powerpc/tlsexe.r: Update.
	* ld-powerpc/tlsexe32.r: Update.
	* ld-powerpc/tlsexetoc.r: Update.
	* ld-s390/tlsbin.rd: Update.
	* ld-s390/tlsbin_64.rd: Update.
	* ld-sparc/tlssunbin32.rd: Update.
	* ld-sparc/tlssunbin64.rd: Update.
	* ld-x86-64/tlsbin.rd: Update.
@
text
@d69 1
a69 1
Symbol table '.symtab' contains 69 entries:
a86 3
.* SECTION LOCAL +DEFAULT +16 *
.* SECTION LOCAL +DEFAULT +17 *
.* SECTION LOCAL +DEFAULT +18 *
@


1.9
log
@Adjust for dynamic sym changes.
@
text
@d106 2
a111 1
.* OBJECT +GLOBAL HIDDEN +13 _DYNAMIC
a133 1
.* OBJECT +GLOBAL HIDDEN +14 _GLOBAL_OFFSET_TABLE_
@


1.8
log
@2005-07-08  H.J. Lu  <hongjiu.lu@@intel.com>

	* ld-ia64/tlsbin.rd: Update for empty section removal change.
	* ld-ia64/tlsbin.sd: Likewise.
	* ld-ia64/tlspic.dd: Likewise.
	* ld-ia64/tlspic.rd: Likewise.
	* ld-ia64/tlspic.sd: Likewise.
	* ld-x86-64/tlspic.dd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
@
text
@d51 3
a53 3
60+1330  0+200000097 R_IA64_TPREL64LSB +0+ sG2 \+ 0
60+1338  0+5000000a7 R_IA64_DTPMOD64LSB +0+ sG1 \+ 0
60+1340  0+5000000b7 R_IA64_DTPREL64LSB +0+ sG1 \+ 0
d57 1
a57 1
60+1360  0+300000081 R_IA64_IPLTLSB +0+ __tls_get_addr \+ 0
d59 1
a59 1
Symbol table '.dynsym' contains 8 entries:
d61 7
a67 8
 +[0-9]+: 0+ +0 NOTYPE +LOCAL +DEFAULT +UND *
 +[0-9]+: 60+1[0-9a-f]+ +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
 +[0-9]+: 0+ +0 TLS +GLOBAL DEFAULT +UND sG2
 +[0-9]+: 0+ +16 FUNC +GLOBAL DEFAULT +UND __tls_get_addr
 +[0-9]+: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS __bss_start
 +[0-9]+: 0+ +0 TLS +GLOBAL DEFAULT +UND sG1
 +[0-9]+: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS _edata
 +[0-9]+: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS _end
d71 69
a139 69
 +[0-9]+: 0+ +0 NOTYPE +LOCAL +DEFAULT +UND *
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +1 *
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +2 *
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +3 *
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +4 *
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +5 *
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +6 *
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +7 *
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +8 *
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +9 *
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +10 *
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +11 *
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +12 *
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +13 *
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +14 *
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +15 *
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +16 *
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +17 *
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +18 *
 +[0-9]+: 0+20 +0 TLS +LOCAL +DEFAULT +11 sl1
 +[0-9]+: 0+24 +0 TLS +LOCAL +DEFAULT +11 sl2
 +[0-9]+: 0+28 +0 TLS +LOCAL +DEFAULT +11 sl3
 +[0-9]+: 0+2c +0 TLS +LOCAL +DEFAULT +11 sl4
 +[0-9]+: 0+30 +0 TLS +LOCAL +DEFAULT +11 sl5
 +[0-9]+: 0+34 +0 TLS +LOCAL +DEFAULT +11 sl6
 +[0-9]+: 0+38 +0 TLS +LOCAL +DEFAULT +11 sl7
 +[0-9]+: 0+3c +0 TLS +LOCAL +DEFAULT +11 sl8
 +[0-9]+: 0+80 +0 TLS +LOCAL +DEFAULT +12 bl1
 +[0-9]+: 0+84 +0 TLS +LOCAL +DEFAULT +12 bl2
 +[0-9]+: 0+88 +0 TLS +LOCAL +DEFAULT +12 bl3
 +[0-9]+: 0+8c +0 TLS +LOCAL +DEFAULT +12 bl4
 +[0-9]+: 0+90 +0 TLS +LOCAL +DEFAULT +12 bl5
 +[0-9]+: 0+94 +0 TLS +LOCAL +DEFAULT +12 bl6
 +[0-9]+: 0+98 +0 TLS +LOCAL +DEFAULT +12 bl7
 +[0-9]+: 0+9c +0 TLS +LOCAL +DEFAULT +12 bl8
 +[0-9]+: 0+1c +0 TLS +GLOBAL DEFAULT +11 sg8
 +[0-9]+: 0+7c +0 TLS +GLOBAL DEFAULT +12 bg8
 +[0-9]+: 0+74 +0 TLS +GLOBAL DEFAULT +12 bg6
 +[0-9]+: 0+68 +0 TLS +GLOBAL DEFAULT +12 bg3
 +[0-9]+: 60+1[0-9a-f]+ +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
 +[0-9]+: 0+8 +0 TLS +GLOBAL DEFAULT +11 sg3
 +[0-9]+: 0+48 +0 TLS +GLOBAL HIDDEN +11 sh3
 +[0-9]+: 0+ +0 TLS +GLOBAL DEFAULT +UND sG2
 +[0-9]+: 0+c +0 TLS +GLOBAL DEFAULT +11 sg4
 +[0-9]+: 0+10 +0 TLS +GLOBAL DEFAULT +11 sg5
 +[0-9]+: 0+70 +0 TLS +GLOBAL DEFAULT +12 bg5
 +[0-9]+: 0+ +16 FUNC +GLOBAL DEFAULT +UND __tls_get_addr
 +[0-9]+: 0+58 +0 TLS +GLOBAL HIDDEN +11 sh7
 +[0-9]+: 0+5c +0 TLS +GLOBAL HIDDEN +11 sh8
 +[0-9]+: 0+ +0 TLS +GLOBAL DEFAULT +11 sg1
 +[0-9]+: 40+10d0 +112 FUNC +GLOBAL DEFAULT +8 _start
 +[0-9]+: 0+4c +0 TLS +GLOBAL HIDDEN +11 sh4
 +[0-9]+: 0+78 +0 TLS +GLOBAL DEFAULT +12 bg7
 +[0-9]+: 0+50 +0 TLS +GLOBAL HIDDEN +11 sh5
 +[0-9]+: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS __bss_start
 +[0-9]+: 40+1000 +208 FUNC +GLOBAL DEFAULT +8 fn2
 +[0-9]+: 0+4 +0 TLS +GLOBAL DEFAULT +11 sg2
 +[0-9]+: 0+ +0 TLS +GLOBAL DEFAULT +UND sG1
 +[0-9]+: 0+40 +0 TLS +GLOBAL HIDDEN +11 sh1
 +[0-9]+: 0+14 +0 TLS +GLOBAL DEFAULT +11 sg6
 +[0-9]+: 0+18 +0 TLS +GLOBAL DEFAULT +11 sg7
 +[0-9]+: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS _edata
 +[0-9]+: [0-9a-f]+ +0 OBJECT +GLOBAL HIDDEN +14 _GLOBAL_OFFSET_TABLE_
 +[0-9]+: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS _end
 +[0-9]+: 0+44 +0 TLS +GLOBAL HIDDEN +11 sh2
 +[0-9]+: 0+54 +0 TLS +GLOBAL HIDDEN +11 sh6
 +[0-9]+: 0+64 +0 TLS +GLOBAL DEFAULT +12 bg2
 +[0-9]+: 0+60 +0 TLS +GLOBAL DEFAULT +12 bg1
 +[0-9]+: 0+6c +0 TLS +GLOBAL DEFAULT +12 bg4
@


1.7
log
@bfd/

2005-03-16  H.J. Lu  <hongjiu.lu@@intel.com>

	* elflink.c (elf_mark_used_section): New.
	(bfd_elf_gc_sections): Call elf_gc_mark_section for
	non-relocatable link if we don't do GC.

include/

2005-03-16  H.J. Lu  <hongjiu.lu@@intel.com>

	* bfdlink.h (bfd_link_info): Add gc_sections.

ld/

2005-03-16  H.J. Lu  <hongjiu.lu@@intel.com>

	* emultempl/elf32.em (gld${EMULATION_NAME}_finish): Remove
	unused empty output sections for non-relocatable link.

	* ld.h (args_type): Remove gc_sections.

	* ldlang.c (lang_mark_used_section): New.
	(lang_gc_sections): Use link_info.gc_sections instead of
	command_line.gc_sections.
	* ldmain.c (main): Likewise.
	* lexsup.c (parse_args): Likewise.
	* ldlang.c (lang_process): Call lang_mark_used_section.

	* ldmain.c (main): Initialize link_info.gc_sections to FALSE.

ld/testsuite/

2005-03-16  H.J. Lu  <hongjiu.lu@@intel.com>

	* ld-alpha/tlsbin.rd: Updated for empty section removal.
	* ld-alpha/tlsbinr.rd: Likewise.
	* ld-alpha/tlspic.rd: Likewise.
	* ld-arm/mixed-lib.sym: Likewise.
	* ld-i386/tlsbin.rd: Likewise.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlspic.rd: Likewise.
	* ld-ia64/tlsbin.rd: Likewise.
	* ld-ia64/tlspic.rd: Likewise.
	* ld-powerpc/apuinfo.rd: Likewise.
	* ld-powerpc/powerpc.exp: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-sh/tlsbin-2.d: Likewise.
	* ld-sh/tlspic-2.d: Likewise.
	* ld-sparc/tlssunbin32.rd: Likewise.
	* ld-sparc/tlssunnopic32.rd: Likewise.
	* ld-sparc/tlssunpic32.rd: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
@
text
@d26 1
a26 1
  \[14\] .got +PROGBITS +60+2000 0+2000 0+48 00 WAp +0 +0 +8
d51 3
a53 3
60+2018  0+200000097 R_IA64_TPREL64LSB +0+ sG2 \+ 0
60+2020  0+5000000a7 R_IA64_DTPMOD64LSB +0+ sG1 \+ 0
60+2028  0+5000000b7 R_IA64_DTPREL64LSB +0+ sG1 \+ 0
d57 1
a57 1
60+2050  0+300000081 R_IA64_IPLTLSB +0+ __tls_get_addr \+ 0
@


1.6
log
@gas/
2005-01-28  Jan Beulich  <jbeulich@@novell.com>

	* config/tc-ia64.c (ia64_estimate_size_before_relax): Allocate space
	for personality routine pointer only if there is one.
	(ia64_convert_frag): Likewise.
	(generate_unwind_image): Likewise.

ld/testsuite/
2005-01-28  Jan Beulich  <jbeulich@@novell.com>

	* ld/ia64/tlsbin.[rt]d: Widen expected offset/size ranges.
	* ld/ia64/tlspic.[rt]d: Likewise.
@
text
@d8 1
a8 1
There are 22 section headers, starting at offset 0x[0-9a-f]+:
d26 5
a30 8
  \[14\] .data +.*
  \[15\] .got +PROGBITS +60+2000 0+2000 0+48 00 WAp +0 +0 +8
  \[16\] .IA_64.pltoff +.*
  \[17\] .sbss +.*
  \[18\] .bss +.*
  \[19\] .shstrtab +.*
  \[20\] .symtab +.*
  \[21\] .strtab +.*
d61 8
a68 8
 +0: 0+ +0 NOTYPE +LOCAL +DEFAULT +UND *
 +1: 60+1[0-9a-f]+ +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
 +2: 0+ +0 TLS +GLOBAL DEFAULT +UND sG2
 +3: 0+ +16 FUNC +GLOBAL DEFAULT +UND __tls_get_addr
 +4: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS __bss_start
 +5: 0+ +0 TLS +GLOBAL DEFAULT +UND sG1
 +6: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS _edata
 +7: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS _end
d70 1
a70 1
Symbol table '.symtab' contains 72 entries:
d72 69
a140 72
 +0: 0+ +0 NOTYPE +LOCAL +DEFAULT +UND *
 +1: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +1 *
 +2: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +2 *
 +3: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +3 *
 +4: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +4 *
 +5: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +5 *
 +6: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +6 *
 +7: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +7 *
 +8: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +8 *
 +9: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +9 *
 +10: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +10 *
 +11: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +11 *
 +12: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +12 *
 +13: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +13 *
 +14: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +14 *
 +15: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +15 *
 +16: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +16 *
 +17: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +17 *
 +18: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +18 *
 +19: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +19 *
 +20: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +20 *
 +21: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +21 *
 +22: 0+20 +0 TLS +LOCAL +DEFAULT +11 sl1
 +23: 0+24 +0 TLS +LOCAL +DEFAULT +11 sl2
 +24: 0+28 +0 TLS +LOCAL +DEFAULT +11 sl3
 +25: 0+2c +0 TLS +LOCAL +DEFAULT +11 sl4
 +26: 0+30 +0 TLS +LOCAL +DEFAULT +11 sl5
 +27: 0+34 +0 TLS +LOCAL +DEFAULT +11 sl6
 +28: 0+38 +0 TLS +LOCAL +DEFAULT +11 sl7
 +29: 0+3c +0 TLS +LOCAL +DEFAULT +11 sl8
 +30: 0+80 +0 TLS +LOCAL +DEFAULT +12 bl1
 +31: 0+84 +0 TLS +LOCAL +DEFAULT +12 bl2
 +32: 0+88 +0 TLS +LOCAL +DEFAULT +12 bl3
 +33: 0+8c +0 TLS +LOCAL +DEFAULT +12 bl4
 +34: 0+90 +0 TLS +LOCAL +DEFAULT +12 bl5
 +35: 0+94 +0 TLS +LOCAL +DEFAULT +12 bl6
 +36: 0+98 +0 TLS +LOCAL +DEFAULT +12 bl7
 +37: 0+9c +0 TLS +LOCAL +DEFAULT +12 bl8
 +38: 0+1c +0 TLS +GLOBAL DEFAULT +11 sg8
 +39: 0+7c +0 TLS +GLOBAL DEFAULT +12 bg8
 +40: 0+74 +0 TLS +GLOBAL DEFAULT +12 bg6
 +41: 0+68 +0 TLS +GLOBAL DEFAULT +12 bg3
 +42: 60+1[0-9a-f]+ +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
 +43: 0+8 +0 TLS +GLOBAL DEFAULT +11 sg3
 +44: 0+48 +0 TLS +GLOBAL HIDDEN +11 sh3
 +45: 0+ +0 TLS +GLOBAL DEFAULT +UND sG2
 +46: 0+c +0 TLS +GLOBAL DEFAULT +11 sg4
 +47: 0+10 +0 TLS +GLOBAL DEFAULT +11 sg5
 +48: 0+70 +0 TLS +GLOBAL DEFAULT +12 bg5
 +49: 0+ +16 FUNC +GLOBAL DEFAULT +UND __tls_get_addr
 +50: 0+58 +0 TLS +GLOBAL HIDDEN +11 sh7
 +51: 0+5c +0 TLS +GLOBAL HIDDEN +11 sh8
 +52: 0+ +0 TLS +GLOBAL DEFAULT +11 sg1
 +53: 40+10d0 +112 FUNC +GLOBAL DEFAULT +8 _start
 +54: 0+4c +0 TLS +GLOBAL HIDDEN +11 sh4
 +55: 0+78 +0 TLS +GLOBAL DEFAULT +12 bg7
 +56: 0+50 +0 TLS +GLOBAL HIDDEN +11 sh5
 +57: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS __bss_start
 +58: 40+1000 +208 FUNC +GLOBAL DEFAULT +8 fn2
 +59: 0+4 +0 TLS +GLOBAL DEFAULT +11 sg2
 +60: 0+ +0 TLS +GLOBAL DEFAULT +UND sG1
 +61: 0+40 +0 TLS +GLOBAL HIDDEN +11 sh1
 +62: 0+14 +0 TLS +GLOBAL DEFAULT +11 sg6
 +63: 0+18 +0 TLS +GLOBAL DEFAULT +11 sg7
 +64: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS _edata
 +65: [0-9a-f]+ +0 OBJECT +GLOBAL HIDDEN +15 _GLOBAL_OFFSET_TABLE_
 +66: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS _end
 +67: 0+44 +0 TLS +GLOBAL HIDDEN +11 sh2
 +68: 0+54 +0 TLS +GLOBAL HIDDEN +11 sh6
 +69: 0+64 +0 TLS +GLOBAL DEFAULT +12 bg2
 +70: 0+60 +0 TLS +GLOBAL DEFAULT +12 bg1
 +71: 0+6c +0 TLS +GLOBAL DEFAULT +12 bg4
@


1.5
log
@	* ld-cris/expdyn1.d, ld-cris/expdyn5.d, ld-cris/expdyn6.d,
	ld-cris/expdyn7.d, ld-cris/gotplt1.d, ld-cris/gotplt2.d,
	ld-cris/gotplt3.d, ld-cris/hiddef1.d, ld-cris/libdso-2.d,
	ld-cris/locref1.d, ld-cris/locref2.d, ld-cris/weakref2.d,
	ld-i386/tlsbin.rd, ld-i386/tlsnopic.rd, ld-i386/tlspic.rd,
	ld-ia64/tlsbin.dd, ld-ia64/tlsbin.rd, ld-ia64/tlspic.dd,
	ld-ia64/tlspic.rd, ld-powerpc/tlsexe32.d, ld-powerpc/tlsexe32.g,
	ld-powerpc/tlsexe32.r, ld-powerpc/tlsexe32.t,
	ld-powerpc/tlsso32.d, ld-powerpc/tlsso32.g, ld-powerpc/tlsso32.r,
	ld-powerpc/tlsso32.t, ld-s390/tlsbin.dd, ld-s390/tlsbin.rd,
	ld-s390/tlspic.rd, ld-sparc/tlssunbin32.rd,
	ld-sparc/tlssunpic32.rd, ld-x86-64/tlsbin.rd, ld-x86-64/tlspic.dd,
	ld-x86-64/tlspic.rd: Adjust for _GLOBAL_OFFSET_TABLE_ now hidden.
@
text
@d23 3
a25 3
  \[11\] .tdata +PROGBITS +60+1170 0+1170 0+60 00 WAT +0 +0 +4
  \[12\] .tbss +NOBITS +60+11d0 0+11d0 0+40 00 WAT +0 +0 +1
  \[13\] .dynamic +DYNAMIC +60+11d0 0+11d0 0+150 10 +WA +4 +0 +8
d45 4
a48 4
  LOAD +0x0+ 0x40+ 0x40+ 0x0+1170 0x0+1170 R E 0x10000
  LOAD +0x0+1170 0x60+1170 0x60+1170 0x0+ef0 0x0+ef0 RW +0x10000
  DYNAMIC +0x0+11d0 0x60+11d0 0x60+11d0 0x0+150 0x0+150 RW +0x8
  TLS +0x0+1170 0x60+1170 0x60+1170 0x0+60 0x0+a0 R +0x4
d65 1
a65 1
 +1: 60+11d0 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
d117 1
a117 1
 +42: 60+11d0 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
@


1.4
log
@bfd/
	* elflink.c (elf_bfd_final_link): Don't output STT_SECTION symbol
	into .dynsym if elf_section_data (sec)->dynindx <= 0.
	Adjust counting of last_local.
	(_bfd_elf_link_renumber_dynsyms): Don't assign dynindx to sections
	other than SHT_PROGBITS/SHT_NOBITS and neither for .got/.got.plt/.plt
	created by the linker nor !SHF_ALLOC.

	* elf32-i386.c (elf_i386_finish_dynamic_sections): Point
	DT_PLTGOT to the start of the .got.plt section instead of the
	.got output section.  Set sh_entsize for .got section in addition
	to .got.plt.
	(elf_i386_relocate_section): Don't assume _GLOBAL_OFFSET_TABLE_
	is at sgot->output_section->vma.
	* elf64-x86-64.c (elf64_x86_64_finish_dynamic_sections): Point
	DT_PLTGOT to the start of the .got.plt section instead of the
	.got output section.
	(elf64_x86_64_relocate_section): Don't assume _GLOBAL_OFFSET_TABLE_
	is at sgot->output_section->vma.  Set sh_entsize for .got section
	in addition to .got.plt.
	* elf.c (_bfd_elf_print_private_bfd_data): Handle PT_GNU_RELRO.
	(bfd_section_from_phdr): Likewise.
	(map_sections_to_segments): Likewise.
	(assign_file_positions_for_segments): Likewise.
	(get_program_header_size): Likewise.
	* elflink.c (bfd_elf_size_dynamic_sections): Set
	elf_tdata (output_bfd)->relro from info->relro.
	* elf-bfd.h (struct elf_obj_tdata): Add relro field.
include/
	* bfdlink.h (struct bfd_link_info): Add relro, relro_start and
	relro_end fields.
	* elf/common.h (PT_GNU_EH_FRAME, PT_GNU_STACK): Add comments.
	(PT_GNU_RELRO): Define.
binutils/
	* readelf.c (get_segment_type): Handle PT_GNU_RELRO.
ld/
	* genscripts.sh: Generate -z combreloc -z now -z relro scripts
	for binaries, -shared and -pie.
	* emulparams/elf_i386.sh (SEPARATE_GOTPLT): Set.
	* emulparams/elf_x86_64.sh (SEPARATE_GOTPLT): Set.
	* emulparams/elf32ppc.sh (OTHER_READWRITE_SECTIONS): Rename to...
	(OTHER_RELRO_SECTIONS): ... this.
	* ldlex.l (DATA_SEGMENT_RELRO_END): Add.
	* emultempl/elf32.em (gld${EMULATION_NAME}_handle_option): Handle
	-z relro and -z norelro.
	(gld${EMULATION_NAME}_list_options): Add it to usage.
	(gld${EMULATION_NAME}_get_script): Return -z combreloc -z now
	-z relro scripts when appropriate.
	* scripttempl/elf.sc: Unset SEPARATE_GOTPLT if RELRO_NOW is set.
	Create separate .got.plt section if SEPARATE_GOTPLT.
	Move sections which are only written during relocation handling
	to the beginning of RW segment.  If NO_SMALL_DATA, move .got
	before .data.  Add DATA_SEGMENT_RELRO_END directive.
	Include OTHER_RELRO_SECTIONS.
	* ldgram.y (DATA_SEGMENT_RELRO_END): Add.
	* ldexp.c (exp_print_token): Handle DATA_SEGMENT_RELRO_END.
	(fold_unary): Likewise.
	(fold_binary): Handle -z relro.
	* ldexp.h (struct exp_data_seg): Add exp_dataseg_relro_seen and
	exp_dataseg_relro_adjust phases.  Add relro_end field.
	* ldmain.c (main): Initialize link_info.relro to FALSE.
	* ldlang.c (lang_size_sections): Handle -z relro.
ld/testsuite/
	* ld-i386/tlspic.rd: Adjust for section reordering changes
	and removal of unneeded STT_SECTION symbols from .dynsym.
	* ld-i386/tlspic.dd: Likewise.
	* ld-i386/tlspic.sd: Likewise.
	* ld-i386/tlsbin.rd: Likewise.
	* ld-i386/tlsbinpic.s: Likewise.
	* ld-i386/tlsbin.dd: Likewise.
	* ld-i386/tlsbin.sd: Likewise.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlsnopic1.s: Likewise.
	* ld-i386/combreloc.d: Likewise.
	* ld-i386/tlsnopic.dd: Likewise.
	* ld-i386/tlsnopic.sd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
	* ld-x86-64/tlspic.dd: Likewise.
	* ld-x86-64/tlsbin.dd: Likewise.
	* ld-x86-64/tlspic.sd: Likewise.
	* ld-x86-64/tlsbin.sd: Likewise.
	* ld-x86-64/tlspic.td: Likewise.
	* ld-x86-64/tlsbin.td: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-s390/tlspic1.s: Likewise.
	* ld-s390/tlsbinpic.s: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlspic.dd: Likewise.
	* ld-s390/tlsbin.dd: Likewise.
	* ld-s390/tlsbin.sd: Likewise.
	* ld-s390/tlsbin.td: Likewise.
	* ld-s390/tlspic.sd: Likewise.
	* ld-s390/tlspic.td: Likewise.
	* ld-s390/tlspic1_64.s: Likewise.
	* ld-s390/tlsbinpic_64.s: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlspic_64.dd: Likewise.
	* ld-s390/tlsbin_64.dd: Likewise.
	* ld-s390/tlspic_64.sd: Likewise.
	* ld-s390/tlspic_64.td: Likewise.
	* ld-s390/tlsbin_64.td: Likewise.
	* ld-s390/tlsbin_64.sd: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlsso32.d: Likewise.
	* ld-powerpc/tlsso32.g: Likewise.
	* ld-powerpc/tlsso32.t: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso.g: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
	* ld-powerpc/tlstocso.g: Likewise.
	* ld-ia64/tlspic.rd: Likewise.
	* ld-ia64/tlspic.dd: Likewise.
	* ld-ia64/tlspic.sd: Likewise.
	* ld-ia64/tlspic.td: Likewise.
	* ld-ia64/tlsbin.rd: Likewise.
	* ld-ia64/tlsbin.sd: Likewise.
	* ld-ia64/tlsbin.td: Likewise.
	* ld-elfvsb/elfvsb.exp: XFAIL non-PIC load offset tests on s390x.
	* ld-shared/shared.exp: Likewise.
@
text
@d62 1
a62 1
Symbol table '.dynsym' contains 9 entries:
d71 1
a71 2
 +7: 60+2000 +0 OBJECT +GLOBAL DEFAULT +ABS _GLOBAL_OFFSET_TABLE_
 +8: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS _end
d140 1
a140 1
 +65: [0-9a-f]+ +0 OBJECT +GLOBAL DEFAULT +ABS _GLOBAL_OFFSET_TABLE_
@


1.3
log
@2003-09-30  H.J. Lu  <hongjiu.lu@@intel.com>

	* ld-ia64/ia64.exp: Remove -melf64_ia64.

	* ld-ia64/tlsbin.dd: Remove -melf64_ia64. Match elf..-ia64-.*
	instead of elf64-ia64-little.
	* ld-ia64/tlsbin.rd: Likewise.
	* ld-ia64/tlsbin.sd: Likewise.
	* ld-ia64/tlsbin.td: Likewise.
	* ld-ia64/tlsg.sd: Likewise.
	* ld-ia64/tlspic.dd: Likewise.
	* ld-ia64/tlspic.rd: Likewise.
	* ld-ia64/tlspic.sd: Likewise.
	* ld-ia64/tlspic.td: Likewise.
@
text
@d23 5
a27 5
  \[11\] .data +.*
  \[12\] .tdata +PROGBITS +60+2000 0+2000 0+60 00 WAT +0 +0 +4
  \[13\] .tbss +NOBITS +60+2060 0+2060 0+40 00 WAT +0 +0 +1
  \[14\] .dynamic +DYNAMIC +60+2060 0+2060 0+150 10 +WA +4 +0 +8
  \[15\] .got +PROGBITS +60+21b0 0+21b0 0+48 00 WAp +0 +0 +8
d46 3
a48 3
  LOAD +0x0+2000 0x60+2000 0x60+2000 0x0+210 0x0+210 RW +0x10000
  DYNAMIC +0x0+2060 0x60+2060 0x60+2060 0x0+150 0x0+150 RW +0x8
  TLS +0x0+2000 0x60+2000 0x60+2000 0x0+60 0x0+a0 R +0x4
d54 3
a56 3
60+21c8  0+200000097 R_IA64_TPREL64LSB +0+ sG2 \+ 0
60+21d0  0+5000000a7 R_IA64_DTPMOD64LSB +0+ sG1 \+ 0
60+21d8  0+5000000b7 R_IA64_DTPREL64LSB +0+ sG1 \+ 0
d60 1
a60 1
60+2200  0+300000081 R_IA64_IPLTLSB +0+ __tls_get_addr \+ 0
d65 1
a65 1
 +1: 60+2060 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
d71 1
a71 1
 +7: 60+21b0 +0 OBJECT +GLOBAL DEFAULT +ABS _GLOBAL_OFFSET_TABLE_
d98 23
a120 23
 +22: 0+20 +0 TLS +LOCAL +DEFAULT +12 sl1
 +23: 0+24 +0 TLS +LOCAL +DEFAULT +12 sl2
 +24: 0+28 +0 TLS +LOCAL +DEFAULT +12 sl3
 +25: 0+2c +0 TLS +LOCAL +DEFAULT +12 sl4
 +26: 0+30 +0 TLS +LOCAL +DEFAULT +12 sl5
 +27: 0+34 +0 TLS +LOCAL +DEFAULT +12 sl6
 +28: 0+38 +0 TLS +LOCAL +DEFAULT +12 sl7
 +29: 0+3c +0 TLS +LOCAL +DEFAULT +12 sl8
 +30: 0+80 +0 TLS +LOCAL +DEFAULT +13 bl1
 +31: 0+84 +0 TLS +LOCAL +DEFAULT +13 bl2
 +32: 0+88 +0 TLS +LOCAL +DEFAULT +13 bl3
 +33: 0+8c +0 TLS +LOCAL +DEFAULT +13 bl4
 +34: 0+90 +0 TLS +LOCAL +DEFAULT +13 bl5
 +35: 0+94 +0 TLS +LOCAL +DEFAULT +13 bl6
 +36: 0+98 +0 TLS +LOCAL +DEFAULT +13 bl7
 +37: 0+9c +0 TLS +LOCAL +DEFAULT +13 bl8
 +38: 0+1c +0 TLS +GLOBAL DEFAULT +12 sg8
 +39: 0+7c +0 TLS +GLOBAL DEFAULT +13 bg8
 +40: 0+74 +0 TLS +GLOBAL DEFAULT +13 bg6
 +41: 0+68 +0 TLS +GLOBAL DEFAULT +13 bg3
 +42: 60+2060 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
 +43: 0+8 +0 TLS +GLOBAL DEFAULT +12 sg3
 +44: 0+48 +0 TLS +GLOBAL HIDDEN +12 sh3
d122 3
a124 3
 +46: 0+c +0 TLS +GLOBAL DEFAULT +12 sg4
 +47: 0+10 +0 TLS +GLOBAL DEFAULT +12 sg5
 +48: 0+70 +0 TLS +GLOBAL DEFAULT +13 bg5
d126 3
a128 3
 +50: 0+58 +0 TLS +GLOBAL HIDDEN +12 sh7
 +51: 0+5c +0 TLS +GLOBAL HIDDEN +12 sh8
 +52: 0+ +0 TLS +GLOBAL DEFAULT +12 sg1
d130 3
a132 3
 +54: 0+4c +0 TLS +GLOBAL HIDDEN +12 sh4
 +55: 0+78 +0 TLS +GLOBAL DEFAULT +13 bg7
 +56: 0+50 +0 TLS +GLOBAL HIDDEN +12 sh5
d135 1
a135 1
 +59: 0+4 +0 TLS +GLOBAL DEFAULT +12 sg2
d137 3
a139 3
 +61: 0+40 +0 TLS +GLOBAL HIDDEN +12 sh1
 +62: 0+14 +0 TLS +GLOBAL DEFAULT +12 sg6
 +63: 0+18 +0 TLS +GLOBAL DEFAULT +12 sg7
d143 5
a147 5
 +67: 0+44 +0 TLS +GLOBAL HIDDEN +12 sh2
 +68: 0+54 +0 TLS +GLOBAL HIDDEN +12 sh6
 +69: 0+64 +0 TLS +GLOBAL DEFAULT +13 bg2
 +70: 0+60 +0 TLS +GLOBAL DEFAULT +13 bg1
 +71: 0+6c +0 TLS +GLOBAL DEFAULT +13 bg4
@


1.2
log
@gas/

2003-04-30  H.J. Lu <hjl@@gnu.org>

	* config/tc-ia64.c (md_section_align): Deleted.

	* config/tc-ia64.h (SUB_SEGMENT_ALIGN): New.
	(md_section_align): New.

gas/testsuite/

2003-04-29  H.J. Lu <hjl@@gnu.org>

	* gas/ia64/ia64.exp: Add align.

	* gas/ia64/align.d: New file.
	* gas/ia64/align.s: Likewise.

	* ia64/dependency-1.d: Remove the padding.

ld/testsuite/

2003-04-29  H.J. Lu <hjl@@gnu.org>

	* ld-ia64/tlsbin.dd: Updated.
	* ld-ia64/tlsbin.rd: Likewise.
	* ld-ia64/tlsbin.sd: Likewise.
	* ld-ia64/tlsbin.td: Likewise.
	* ld-ia64/tlspic.rd: Likewise.
	* ld-ia64/tlspic.sd: Likewise.
	* ld-ia64/tlspic.td: Likewise.
@
text
@d4 1
a4 1
#ld: -shared -melf64_ia64
@


1.1
log
@	* elfxx-ia64.c (struct elfNN_ia64_link_hash_table): Add
	self_dtpmod_done and self_dtpmod_offset.
	(allocate_global_data_got): Only use one got entry for all
	dtpmod relocs against local symbols.
	(allocate_dynrel_entries): Only need .rela.got entry for
	dtpmod against global symbol.
	(elfNN_ia64_size_dynamic_sections): Initialize self_dtpmod_offset.
	Reserve space in .rela.got for the local dtpmod entry.
	(set_got_entry): Initialize the common local dtpmod .got entry.
	(elfNN_ia64_relocate_section): Handle R_IA_64_DTPREL64LSB
	and R_IA_64_DTPREL64MSB.

	* config/tc-ia64.c (ia64_cons_fix_new): Handle @@dtprel() in data.

	* ld-ia64/ia64.exp: New.
	* ld-ia64/tlsbin.dd: New test.
	* ld-ia64/tlsbinpic.s: New test.
	* ld-ia64/tlsbin.rd: New test.
	* ld-ia64/tlsbin.s: New test.
	* ld-ia64/tlsbin.sd: New test.
	* ld-ia64/tlsbin.td: New test.
	* ld-ia64/tlsg.s: New test.
	* ld-ia64/tlsg.sd: New test.
	* ld-ia64/tlslib.s: New test.
	* ld-ia64/tlspic1.s: New test.
	* ld-ia64/tlspic2.s: New test.
	* ld-ia64/tlspic.dd: New test.
	* ld-ia64/tlspic.rd: New test.
	* ld-ia64/tlspic.sd: New test.
	* ld-ia64/tlspic.td: New test.
@
text
@d20 1
a20 1
  \[ 8\] .text +PROGBITS +40+1000 0+1000 0+1070 00 +AX +0 +0 4096
d24 4
a27 4
  \[12\] .tdata +PROGBITS +60+3000 0+3000 0+60 00 WAT +0 +0 +4
  \[13\] .tbss +NOBITS +60+3060 0+3060 0+40 00 WAT +0 +0 +1
  \[14\] .dynamic +DYNAMIC +60+3060 0+3060 0+150 10 +WA +4 +0 +8
  \[15\] .got +PROGBITS +60+31b0 0+31b0 0+48 00 WAp +0 +0 +8
d37 1
a37 1
Entry point 0x40+2000
d45 4
a48 4
  LOAD +0x0+ 0x40+ 0x40+ 0x0+20a0 0x0+20a0 R E 0x10000
  LOAD +0x0+3000 0x60+3000 0x60+3000 0x0+210 0x0+210 RW +0x10000
  DYNAMIC +0x0+3060 0x60+3060 0x60+3060 0x0+150 0x0+150 RW +0x8
  TLS +0x0+3000 0x60+3000 0x60+3000 0x0+60 0x0+a0 R +0x4
d54 3
a56 3
60+31c8  0+200000097 R_IA64_TPREL64LSB +0+ sG2 \+ 0
60+31d0  0+5000000a7 R_IA64_DTPMOD64LSB +0+ sG1 \+ 0
60+31d8  0+5000000b7 R_IA64_DTPREL64LSB +0+ sG1 \+ 0
d60 1
a60 1
60+3200  0+300000081 R_IA64_IPLTLSB +0+ __tls_get_addr \+ 0
d65 1
a65 1
 +1: 60+3060 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
d71 1
a71 1
 +7: 60+31b0 +0 OBJECT +GLOBAL DEFAULT +ABS _GLOBAL_OFFSET_TABLE_
d118 1
a118 1
 +42: 60+3060 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
d129 1
a129 1
 +53: 40+2000 +112 FUNC +GLOBAL DEFAULT +8 _start
@

