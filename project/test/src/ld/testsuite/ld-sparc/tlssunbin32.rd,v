head	1.16;
access;
symbols
	binutils-2_24-branch:1.16.0.4
	binutils-2_24-branchpoint:1.16
	binutils-2_21_1:1.12
	binutils-2_23_2:1.16
	binutils-2_23_1:1.16
	binutils-2_23:1.16
	binutils-2_23-branch:1.16.0.2
	binutils-2_23-branchpoint:1.16
	binutils-2_22_branch:1.12.0.6
	binutils-2_22:1.12
	binutils-2_22-branch:1.12.0.4
	binutils-2_22-branchpoint:1.12
	binutils-2_21:1.12
	binutils-2_21-branch:1.12.0.2
	binutils-2_21-branchpoint:1.12
	binutils-2_20_1:1.10
	binutils-2_20:1.10
	binutils-arc-20081103-branch:1.10.0.10
	binutils-arc-20081103-branchpoint:1.10
	binutils-2_20-branch:1.10.0.8
	binutils-2_20-branchpoint:1.10
	dje-cgen-play1-branch:1.10.0.6
	dje-cgen-play1-branchpoint:1.10
	arc-20081103-branch:1.10.0.4
	arc-20081103-branchpoint:1.10
	binutils-2_19_1:1.10
	binutils-2_19:1.10
	binutils-2_19-branch:1.10.0.2
	binutils-2_19-branchpoint:1.10
	binutils-2_18:1.9
	binutils-2_18-branch:1.9.0.2
	binutils-2_18-branchpoint:1.9
	binutils-csl-coldfire-4_1-32:1.7
	binutils-csl-sourcerygxx-4_1-32:1.7
	binutils-csl-innovasic-fido-3_4_4-33:1.7
	binutils-csl-sourcerygxx-3_4_4-32:1.3
	binutils-csl-coldfire-4_1-30:1.7
	binutils-csl-sourcerygxx-4_1-30:1.7
	binutils-csl-coldfire-4_1-28:1.7
	binutils-csl-sourcerygxx-4_1-29:1.7
	binutils-csl-sourcerygxx-4_1-28:1.7
	binutils-csl-arm-2006q3-27:1.7
	binutils-csl-sourcerygxx-4_1-27:1.7
	binutils-csl-arm-2006q3-26:1.7
	binutils-csl-sourcerygxx-4_1-26:1.7
	binutils-csl-sourcerygxx-4_1-25:1.7
	binutils-csl-sourcerygxx-4_1-24:1.7
	binutils-csl-sourcerygxx-4_1-23:1.7
	binutils-csl-sourcerygxx-4_1-21:1.7
	binutils-csl-arm-2006q3-21:1.7
	binutils-csl-sourcerygxx-4_1-22:1.7
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.7
	binutils-csl-sourcerygxx-4_1-20:1.7
	binutils-csl-arm-2006q3-19:1.7
	binutils-csl-sourcerygxx-4_1-19:1.7
	binutils-csl-sourcerygxx-4_1-18:1.7
	binutils-csl-renesas-4_1-9:1.7
	binutils-csl-sourcerygxx-3_4_4-25:1.3
	binutils-csl-renesas-4_1-8:1.7
	binutils-csl-renesas-4_1-7:1.7
	binutils-csl-renesas-4_1-6:1.7
	binutils-csl-sourcerygxx-4_1-17:1.7
	binutils-csl-sourcerygxx-4_1-14:1.7
	binutils-csl-sourcerygxx-4_1-15:1.7
	binutils-csl-sourcerygxx-4_1-13:1.7
	binutils-2_17:1.7
	binutils-csl-sourcerygxx-4_1-12:1.7
	binutils-csl-sourcerygxx-3_4_4-21:1.7
	binutils-csl-wrs-linux-3_4_4-24:1.3
	binutils-csl-wrs-linux-3_4_4-23:1.3
	binutils-csl-sourcerygxx-4_1-9:1.7
	binutils-csl-sourcerygxx-4_1-8:1.7
	binutils-csl-sourcerygxx-4_1-7:1.7
	binutils-csl-arm-2006q1-6:1.7
	binutils-csl-sourcerygxx-4_1-6:1.7
	binutils-csl-wrs-linux-3_4_4-22:1.3
	binutils-csl-coldfire-4_1-11:1.7
	binutils-csl-sourcerygxx-3_4_4-19:1.7
	binutils-csl-coldfire-4_1-10:1.7
	binutils-csl-sourcerygxx-4_1-5:1.7
	binutils-csl-sourcerygxx-4_1-4:1.7
	binutils-csl-wrs-linux-3_4_4-21:1.3
	binutils-csl-morpho-4_1-4:1.7
	binutils-csl-sourcerygxx-3_4_4-17:1.7
	binutils-csl-wrs-linux-3_4_4-20:1.3
	binutils-2_17-branch:1.7.0.4
	binutils-2_17-branchpoint:1.7
	binutils-csl-2_17-branch:1.7.0.2
	binutils-csl-2_17-branchpoint:1.7
	binutils-csl-gxxpro-3_4-branch:1.3.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.3
	binutils-2_16_1:1.3
	binutils-csl-arm-2005q1b:1.3
	binutils-2_16:1.3
	binutils-csl-arm-2005q1a:1.3
	binutils-csl-arm-2005q1-branch:1.3.0.4
	binutils-csl-arm-2005q1-branchpoint:1.3
	binutils-2_16-branch:1.3.0.2
	binutils-2_16-branchpoint:1.3
	csl-arm-2004-q3d:1.3
	csl-arm-2004-q3:1.2
	binutils-2_15:1.1
	binutils-2_15-branchpoint:1.1
	csl-arm-2004-q1a:1.1
	csl-arm-2004-q1:1.1
	binutils-2_15-branch:1.1.0.8
	cagney_bfdfile-20040213-branch:1.1.0.6
	cagney_bfdfile-20040213-branchpoint:1.1
	cagney_bigcore-20040122-branch:1.1.0.4
	cagney_bigcore-20040122-branchpoint:1.1
	csl-arm-2003-q4:1.1
	binutils-2_14:1.1
	binutils-2_14-branch:1.1.0.2
	binutils-2_14-branchpoint:1.1
	binutils_latest_snapshot:1.16;
locks; strict;
comment	@# @;


1.16
date	2012.06.15.15.13.40;	author amodra;	state Exp;
branches;
next	1.15;

1.15
date	2012.06.06.10.50.18;	author amodra;	state Exp;
branches;
next	1.14;

1.14
date	2012.05.15.03.59.38;	author davem;	state Exp;
branches;
next	1.13;

1.13
date	2012.04.07.14.16.35;	author davem;	state Exp;
branches;
next	1.12;

1.12
date	2009.09.24.15.56.52;	author hjl;	state Exp;
branches;
next	1.11;

1.11
date	2009.09.23.03.12.28;	author amodra;	state Exp;
branches;
next	1.10;

1.10
date	2007.09.30.01.33.15;	author vapier;	state Exp;
branches;
next	1.9;

1.9
date	2006.10.17.13.41.48;	author amodra;	state Exp;
branches;
next	1.8;

1.8
date	2006.06.02.00.32.00;	author amodra;	state Exp;
branches;
next	1.7;

1.7
date	2005.08.17.10.04.32;	author amodra;	state Exp;
branches;
next	1.6;

1.6
date	2005.08.15.15.39.48;	author amodra;	state Exp;
branches;
next	1.5;

1.5
date	2005.04.11.22.13.28;	author jakub;	state Exp;
branches;
next	1.4;

1.4
date	2005.03.16.21.52.47;	author hjl;	state Exp;
branches;
next	1.3;

1.3
date	2004.11.02.05.40.05;	author hp;	state Exp;
branches;
next	1.2;

1.2
date	2004.07.01.16.24.51;	author jakub;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.24.23.44.45;	author jakub;	state Exp;
branches;
next	;


desc
@@


1.16
log
@ld/
	* ldlang.h (lang_output_section_statement_type): Add after_end field.
	(lang_abs_symbol_at_beginning_of, lang_abs_symbol_at_end_of): Delete.
	(section_for_dot): Declare.
	* ldlang.c (lang_size_sections_1): Correct comment.
	(current_section): Move earlier.
	(current_assign, prefer_next_section): New static vars.
	(lang_do_assignments_1): Add found_end param.  Detect _end
	assignment to set found_end.  Set os->after_end.  Set above statics.
	(lang_do_assignments): Adjust lang_do_assignments_1 call.  Init
	vars.
	(section_for_dot): New function.
	(lang_set_startof): Don't make an absolute symbol.
	(lang_abs_symbol_at_beginning_of, lang_abs_symbol_at_end_of): Delete.
	* ldexp.c (new_rel_from_abs): Use section_for_dot.
	* emultempl/lnk960.em (symbol_at_beginning_of): New function.
	(symbol_at_end_of): Likewise.
	(lnk960_after_allocation): Use them.
	* scripttempl/elf.sc: Precede OTHER_GOT_SYMBOLS with . = .; and
	likewise before __bss_start.

ld/testsuite/
Update far too many tests.
@
text
@#source: tlssunbin32.s
#as: --32
#ld: -shared -melf32_sparc tmpdir/libtlslib32.so tmpdir/tlssunbinpic32.o
#readelf: -WSsrl
#target: sparc*-*-*

.*

Section Headers:
 +\[Nr\] Name +Type +Addr +Off +Size +ES Flg Lk Inf Al
 +\[[ 0-9]+\] +NULL +0+ 0+ 0+ 00 +0 +0 +0
 +\[[ 0-9]+\] .interp +.*
 +\[[ 0-9]+\] .hash +.*
 +\[[ 0-9]+\] .dynsym +.*
 +\[[ 0-9]+\] .dynstr +.*
 +\[[ 0-9]+\] .rela.dyn +.*
 +\[[ 0-9]+\] .text +PROGBITS +0+11000 0+1000 0+1194 00 +AX +0 +0 4096
 +\[[ 0-9]+\] .tdata +PROGBITS +0+22194 0+2194 0+1060 00 WAT +0 +0 +4
 +\[[ 0-9]+\] .tbss +NOBITS +0+231f4 0+31f4 0+40 00 WAT +0 +0 +4
 +\[[ 0-9]+\] .dynamic +DYNAMIC +0+231f4 0+31f4 0+80 08 +WA +4 +0 +4
 +\[[ 0-9]+\] .got +PROGBITS +0+23274 0+3274 0+14 04 +WA +0 +0 +4
 +\[[ 0-9]+\] .shstrtab +.*
 +\[[ 0-9]+\] .symtab +.*
 +\[[ 0-9]+\] .strtab +.*
#...

Elf file type is EXEC \(Executable file\)
Entry point 0x12000
There are [0-9]+ program headers, starting at offset [0-9]+

Program Headers:
 +Type +Offset +VirtAddr +PhysAddr +FileSiz MemSiz +Flg Align
 +PHDR +0x0+34 0x0+10034 0x0+10034 0x0+c0 0x0+c0 R E 0x4
 +INTERP +0x0+f4 0x0+100f4 0x0+100f4 0x0+11 0x0+11 R +0x1
.*Requesting program interpreter.*
 +LOAD .* R E 0x10000
 +LOAD .* RW +0x10000
 +DYNAMIC .* RW +0x4
 +TLS .* 0x0+1060 0x0+10a0 R +0x4
#...

Relocation section '.rela.dyn' at offset 0x[0-9a-f]+ contains 4 entries:
 Offset +Info +Type +Sym. Value +Symbol's Name \+ Addend
[0-9a-f ]+R_SPARC_TLS_TPOFF32 +00000000 +sG5 \+ 0
[0-9a-f ]+R_SPARC_TLS_TPOFF32 +00000000 +sG2 \+ 0
[0-9a-f ]+R_SPARC_TLS_TPOFF32 +00000000 +sG6 \+ 0
[0-9a-f ]+R_SPARC_TLS_TPOFF32 +00000000 +sG1 \+ 0

Symbol table '\.dynsym' contains [0-9]+ entries:
 +Num: +Value +Size +Type +Bind +Vis +Ndx +Name
.* NOTYPE +LOCAL +DEFAULT +UND *
.* TLS +GLOBAL +DEFAULT +UND sG5
.* TLS +GLOBAL +DEFAULT +UND sG2
.* FUNC +GLOBAL +DEFAULT +UND __tls_get_addr
.* NOTYPE +GLOBAL +DEFAULT +10 __bss_start
.* TLS +GLOBAL +DEFAULT +UND sG6
.* TLS +GLOBAL +DEFAULT +UND sG1
.* NOTYPE +GLOBAL +DEFAULT +10 _edata
.* NOTYPE +GLOBAL +DEFAULT +10 _end

Symbol table '\.symtab' contains [0-9]+ entries:
 +Num: +Value +Size +Type +Bind +Vis +Ndx +Name
.* NOTYPE +LOCAL +DEFAULT +UND *
.* SECTION +LOCAL +DEFAULT +1 *
.* SECTION +LOCAL +DEFAULT +2 *
.* SECTION +LOCAL +DEFAULT +3 *
.* SECTION +LOCAL +DEFAULT +4 *
.* SECTION +LOCAL +DEFAULT +5 *
.* SECTION +LOCAL +DEFAULT +6 *
.* SECTION +LOCAL +DEFAULT +7 *
.* SECTION +LOCAL +DEFAULT +8 *
.* SECTION +LOCAL +DEFAULT +9 *
.* SECTION +LOCAL +DEFAULT +10 *
.* FILE +LOCAL +DEFAULT +ABS .*
.* TLS +LOCAL +DEFAULT +7 sl1
.* TLS +LOCAL +DEFAULT +7 sl2
.* TLS +LOCAL +DEFAULT +7 sl3
.* TLS +LOCAL +DEFAULT +7 sl4
.* TLS +LOCAL +DEFAULT +7 sl5
.* TLS +LOCAL +DEFAULT +7 sl6
.* TLS +LOCAL +DEFAULT +7 sl7
.* TLS +LOCAL +DEFAULT +7 sl8
.* FILE +LOCAL +DEFAULT +ABS .*
.* TLS +LOCAL +DEFAULT +8 bl1
.* TLS +LOCAL +DEFAULT +8 bl2
.* TLS +LOCAL +DEFAULT +8 bl3
.* TLS +LOCAL +DEFAULT +8 bl4
.* TLS +LOCAL +DEFAULT +8 bl5
.* TLS +LOCAL +DEFAULT +8 bl6
.* TLS +LOCAL +DEFAULT +8 bl7
.* TLS +LOCAL +DEFAULT +8 bl8
.* FILE +LOCAL +DEFAULT +ABS .*
.* OBJECT +LOCAL +DEFAULT +9 _DYNAMIC
.* OBJECT +LOCAL +DEFAULT +10 _PROCEDURE_LINKAGE_TABLE_
.* OBJECT +LOCAL +DEFAULT +10 _GLOBAL_OFFSET_TABLE_
.* TLS +GLOBAL +DEFAULT +7 sg8
.* TLS +GLOBAL +DEFAULT +8 bg8
.* TLS +GLOBAL +DEFAULT +8 bg6
.* TLS +GLOBAL +DEFAULT +UND sG5
.* TLS +GLOBAL +DEFAULT +8 bg3
.* TLS +GLOBAL +DEFAULT +7 sg3
.* TLS +GLOBAL +HIDDEN +7 sh3
.* TLS +GLOBAL +DEFAULT +UND sG2
.* TLS +GLOBAL +DEFAULT +7 sg4
.* TLS +GLOBAL +DEFAULT +7 sg5
.* TLS +GLOBAL +DEFAULT +8 bg5
.* FUNC +GLOBAL +DEFAULT +UND __tls_get_addr
.* TLS +GLOBAL +HIDDEN +7 sh7
.* TLS +GLOBAL +HIDDEN +7 sh8
.* TLS +GLOBAL +DEFAULT +7 sg1
.* FUNC +GLOBAL +DEFAULT +6 _start
.* TLS +GLOBAL +HIDDEN +7 sh4
.* TLS +GLOBAL +DEFAULT +8 bg7
.* TLS +GLOBAL +HIDDEN +7 sh5
.* NOTYPE +GLOBAL +DEFAULT +10 __bss_start
.* TLS +GLOBAL +DEFAULT +UND sG6
.* FUNC +GLOBAL +DEFAULT +6 fn2
.* TLS +GLOBAL +DEFAULT +7 sg2
.* TLS +GLOBAL +DEFAULT +UND sG1
.* TLS +GLOBAL +HIDDEN +7 sh1
.* TLS +GLOBAL +DEFAULT +7 sg6
.* TLS +GLOBAL +DEFAULT +7 sg7
.* NOTYPE +GLOBAL +DEFAULT +10 _edata
.* NOTYPE +GLOBAL +DEFAULT +10 _end
.* TLS +GLOBAL +HIDDEN +7 sh2
.* TLS +GLOBAL +HIDDEN +7 sh6
.* TLS +GLOBAL +DEFAULT +8 bg2
.* TLS +GLOBAL +DEFAULT +8 bg1
.* TLS +GLOBAL +DEFAULT +8 bg4
@


1.15
log
@bfd/
	* elflink.c (elf_link_input_bfd): Provide a file symbol for
	each input file with local syms, if the input lacks such.
	(bfd_elf_final_link): Add a file symbol to mark end of locals
	for which we can associate with input files.
	(struct elf_final_link_info): Add filesym_count field.
	(struct elf_outext_info): Add need_second_pass and second_pass.
	(elf_link_output_extsym): Detect symbols defined in the output
	file, emit them on second pass over locals.
ld/testsuite/
Update to suit added STT_FILE symbols.
@
text
@d55 1
a55 1
.* NOTYPE +GLOBAL +DEFAULT +ABS __bss_start
d58 2
a59 2
.* NOTYPE +GLOBAL +DEFAULT +ABS _edata
.* NOTYPE +GLOBAL +DEFAULT +ABS _end
d115 1
a115 1
.* NOTYPE +GLOBAL +DEFAULT +ABS __bss_start
d123 2
a124 2
.* NOTYPE +GLOBAL +DEFAULT +ABS _edata
.* NOTYPE +GLOBAL +DEFAULT +ABS _end
@


1.14
log
@Fix PLT section number regexps in sparc TLS tests.

ld/testsuite/

	* ld-sparc/tlssunbin32.rd: Update.
	* ld-sparc/tlssunbin64.rd: Likewise.
@
text
@d74 1
d83 1
d92 1
@


1.13
log
@gas/testsuite/

	* gas/all/gas.exp: Sparc can handle BFD_RELOC_8 for constants.

ld/testsuite/

	* ld-sparc/tlssunbin32.rd: Fix regexp.
	* ld-sparc/tlssunbin64.rd: Likewise.
@
text
@d91 1
a91 1
.* OBJECT +LOCAL +DEFAULT +ABS _PROCEDURE_LINKAGE_TABLE_
@


1.12
log
@bfd/

2009-09-24  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/10630
	* elflink.c (elf_link_output_extsym): Turn off visibility on
	local symbol.
	(bfd_elf_final_link): Turn off visibility on dynamic local
	symbol.

ld/testsuite/

2009-09-24  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/10630
	* ld-alpha/tlsbin.rd: Remove HIDDEN/.hidden on local symbols.
	* ld-alpha/tlsbinr.rd: Likewise.
	* ld-alpha/tlspic.rd: Likewise.
	* ld-cris/libdso-2.d: Likewise.
	* ld-cris/locref1.d: Likewise.
	* ld-cris/locref2.d: Likewise.
	* ld-cris/tls-e-20a.d: Likewise.
	* ld-cris/tls-e-20.d: Likewise.
	* ld-cris/tls-e-80.d: Likewise.
	* ld-cris/tls-gc-68.d: Likewise.
	* ld-cris/tls-gc-69.d: Likewise.
	* ld-cris/tls-gc-70.d: Likewise.
	* ld-cris/tls-gc-75.d: Likewise.
	* ld-cris/tls-gc-76.d: Likewise.
	* ld-cris/tls-gc-79.d: Likewise.
	* ld-cris/tls-gd-1h.d: Likewise.
	* ld-cris/tls-gd-2h.d: Likewise.
	* ld-cris/tls-ld-4.d: Likewise.
	* ld-cris/tls-ld-5.d: Likewise.
	* ld-cris/tls-ld-6.d: Likewise.
	* ld-cris/tls-ld-7.d: Likewise.
	* ld-cris/tls-ldgd-14.d: Likewise.
	* ld-cris/tls-ldgd-15.d: Likewise.
	* ld-cris/tls-local-63.d: Likewise.
	* ld-cris/tls-local-64.d: Likewise.
	* ld-elf/pr9676.rd: Likewise.
	* ld-elf/pr9679.rd: Likewise.
	* ld-elfvsb/hidden2.d: Likewise.
	* ld-i386/tlsbindesc.rd: Likewise.
	* ld-i386/tlsbin.rd: Likewise.
	* ld-i386/tlsdesc.rd: Likewise.
	* ld-i386/tlsgdesc.rd: Likewise.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlspic.rd: Likewise.
	* ld-ia64/tlsbin.rd: Likewise.
	* ld-ia64/tlspic.rd: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-sparc/gotop32.rd: Likewise.
	* ld-sparc/gotop64.rd: Likewise.
	* ld-sparc/tlssunbin32.rd: Likewise.
	* ld-sparc/tlssunbin64.rd: Likewise.
	* ld-sparc/tlssunnopic32.rd: Likewise.
	* ld-sparc/tlssunnopic64.rd: Likewise.
	* ld-sparc/tlssunpic32.rd: Likewise.
	* ld-sparc/tlssunpic64.rd: Likewise.
	* ld-x86-64/tlsbindesc.rd: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-x86-64/tlsdesc.rd: Likewise.
	* ld-x86-64/tlsgdesc.rd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
	* ld-xtensa/tlsbin.rd: Likewise.
	* ld-xtensa/tlspic.rd: Likewise.

	* ld-elf/local1.d: New.
	* ld-elf/local1.map: Likewise.
	* ld-elf/local1.s: Likewise.
	* ld-ia64/local1.d: Likewise.
	* ld-ia64/local1.map: Likewise.
	* ld-ia64/local1.s: Likewise.
@
text
@d91 1
a91 1
.* OBJECT +LOCAL +DEFAULT +10 _PROCEDURE_LINKAGE_TABLE_
@


1.11
log
@Tolerate some whitespace differences in readelf output.
@
text
@d90 3
a92 3
.* OBJECT +LOCAL +HIDDEN +9 _DYNAMIC
.* OBJECT +LOCAL +HIDDEN +10 _PROCEDURE_LINKAGE_TABLE_
.* OBJECT +LOCAL +HIDDEN +10 _GLOBAL_OFFSET_TABLE_
@


1.10
log
@2007-09-29  Mike Frysinger  <vapier@@gentoo.org>

	* ld-alpha/tlsbin.rd: Use [0-9]+ to match section header count and
	0x[0-9a-f]+ to match section header offset.  Match section indexes
	with \[[ 0-9]+\].  Use [0-9]+ to match program header count and
	0x[0-9a-f]+ to match program header offset.  Match .dynsym and
	.symtab entry counts with [0-9]+.
	* ld-alpha/tlsbinr.rd: Likewise.
	* ld-alpha/tlspic.rd: Likewise.
	* ld-i386/tlsbin.rd: Likewise.
	* ld-i386/tlsbindesc.rd: Likewise.
	* ld-i386/tlsdesc.rd: Likewise.
	* ld-i386/tlsgdesc.rd: Likewise.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlspic.rd: Likewise.
	* ld-ia64/tlsbin.rd: Likewise.
	* ld-ia64/tlspic.rd: Likewise.
	* ld-powerpc/tlsexe.r: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-powerpc/tlsexetoc.r: Likewise.
	* ld-powerpc/tlsso.r: Likewise.
	* ld-powerpc/tlsso32.r: Likewise.
	* ld-powerpc/tlstocso.r: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-sparc/tlssunbin32.rd: Likewise.
	* ld-sparc/tlssunbin64.rd: Likewise.
	* ld-sparc/tlssunnopic32.rd: Likewise.
	* ld-sparc/tlssunnopic64.rd: Likewise.
	* ld-sparc/tlssunpic32.rd: Likewise.
	* ld-sparc/tlssunpic64.rd: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-x86-64/tlsbindesc.rd: Likewise.
	* ld-x86-64/tlsdesc.rd: Likewise.
	* ld-x86-64/tlsgdesc.rd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
@
text
@d50 1
a50 1
 +Num: +Value +Size Type +Bind +Vis +Ndx Name
d52 8
a59 8
.* TLS +GLOBAL DEFAULT +UND sG5
.* TLS +GLOBAL DEFAULT +UND sG2
.* FUNC +GLOBAL DEFAULT +UND __tls_get_addr
.* NOTYPE +GLOBAL DEFAULT +ABS __bss_start
.* TLS +GLOBAL DEFAULT +UND sG6
.* TLS +GLOBAL DEFAULT +UND sG1
.* NOTYPE +GLOBAL DEFAULT +ABS _edata
.* NOTYPE +GLOBAL DEFAULT +ABS _end
d62 1
a62 1
 +Num: +Value +Size Type +Bind +Vis +Ndx Name
d64 10
a73 10
.* SECTION LOCAL +DEFAULT +1 *
.* SECTION LOCAL +DEFAULT +2 *
.* SECTION LOCAL +DEFAULT +3 *
.* SECTION LOCAL +DEFAULT +4 *
.* SECTION LOCAL +DEFAULT +5 *
.* SECTION LOCAL +DEFAULT +6 *
.* SECTION LOCAL +DEFAULT +7 *
.* SECTION LOCAL +DEFAULT +8 *
.* SECTION LOCAL +DEFAULT +9 *
.* SECTION LOCAL +DEFAULT +10 *
d93 34
a126 34
.* TLS +GLOBAL DEFAULT +7 sg8
.* TLS +GLOBAL DEFAULT +8 bg8
.* TLS +GLOBAL DEFAULT +8 bg6
.* TLS +GLOBAL DEFAULT +UND sG5
.* TLS +GLOBAL DEFAULT +8 bg3
.* TLS +GLOBAL DEFAULT +7 sg3
.* TLS +GLOBAL HIDDEN +7 sh3
.* TLS +GLOBAL DEFAULT +UND sG2
.* TLS +GLOBAL DEFAULT +7 sg4
.* TLS +GLOBAL DEFAULT +7 sg5
.* TLS +GLOBAL DEFAULT +8 bg5
.* FUNC +GLOBAL DEFAULT +UND __tls_get_addr
.* TLS +GLOBAL HIDDEN +7 sh7
.* TLS +GLOBAL HIDDEN +7 sh8
.* TLS +GLOBAL DEFAULT +7 sg1
.* FUNC +GLOBAL DEFAULT +6 _start
.* TLS +GLOBAL HIDDEN +7 sh4
.* TLS +GLOBAL DEFAULT +8 bg7
.* TLS +GLOBAL HIDDEN +7 sh5
.* NOTYPE +GLOBAL DEFAULT +ABS __bss_start
.* TLS +GLOBAL DEFAULT +UND sG6
.* FUNC +GLOBAL DEFAULT +6 fn2
.* TLS +GLOBAL DEFAULT +7 sg2
.* TLS +GLOBAL DEFAULT +UND sG1
.* TLS +GLOBAL HIDDEN +7 sh1
.* TLS +GLOBAL DEFAULT +7 sg6
.* TLS +GLOBAL DEFAULT +7 sg7
.* NOTYPE +GLOBAL DEFAULT +ABS _edata
.* NOTYPE +GLOBAL DEFAULT +ABS _end
.* TLS +GLOBAL HIDDEN +7 sh2
.* TLS +GLOBAL HIDDEN +7 sh6
.* TLS +GLOBAL DEFAULT +8 bg2
.* TLS +GLOBAL DEFAULT +8 bg1
.* TLS +GLOBAL DEFAULT +8 bg4
@


1.9
log
@bfd/
	* elf-bfd.h (struct elf_link_hash_table): Reorder.  Add
	text_index_section and data_index_section.
	(struct elf_backend_data): Add elf_backend_init_index_section.
	(_bfd_elf_init_1_index_section): Declare.
	(_bfd_elf_init_2_index_sections): Declare.
	* elfxx-target.h (elf_backend_init_index_section): Define.
	(elfNN_bed): Init new field.
	* elflink.c (_bfd_elf_link_omit_section_dynsym): Keep first tls
	section and text_index_section plus data_index_section.
	(_bfd_elf_link_renumber_dynsyms): Clear dynindx on omitted sections.
	(_bfd_elf_init_1_index_section): New function.
	(_bfd_elf_init_2_index_sections): New function.
	(bfd_elf_size_dynsym_hash_dynstr): Call elf_backend_init_index_section.
	(elf_link_input_bfd): When emitting relocs, use text_index_section
	and data_index_section for removed sections.
	* elf-m10300.c (elf_backend_omit_section_dynsym): Define.
	* elf32-i386.c: Likewise.
	* elf32-m32r.c: Likewise.
	* elf32-sh.c: Likewise.
	* elf32-xstormy16.c: Likewise.
	* elf32-xtensa.c: Likewise.
	* elf64-alpha.c: Likewise.
	* elf64-hppa.c: Likewise.
	* elf64-mmix.c: Likewise.
	* elf64-sh64.c: Likewise.
	* elfxx-ia64.c: Likewise.
	* elf32-arm.c (elf32_arm_final_link_relocate): Use text_index_section
	and data_index_section sym for relocs against sections with no dynamic
	section sym.
	(elf_backend_init_index_section): Define.
	* elf32-cris.c: Similarly.
	* elf32-hppa.c: Similarly.
	* elf32-i370.c: Similarly.
	* elf32-m68k.c: Similarly.
	* elf32-mips.c: Similarly.
	* elf32-ppc.c: Similarly.
	* elf32-s390.c: Similarly.
	* elf32-sparc.c: Similarly.
	* elf32-vax.c: Similarly.
	* elf64-mips.c: Similarly.
	* elf64-ppc.c: Similarly.
	* elf64-s390.c: Similarly.
	* elf64-sparc.c: Similarly.
	* elf64-x86-64.c: Similarly.
	* elfn32-mips.c: Similarly.
	* elfxx-mips.c: Similarly.
	* elfxx-sparc.c: Similarly.
	* linker.c (fix_syms): Base symbols in removed sections on
	previous section in preference to using absolute section.

ld/
	* ldlang.c (strip_excluded_output_sections): Do strip sections
	that define syms, but don't ignore them.
	* ld.texinfo (Output Section Discarding): Revise.
	* emultempl/armcoff.em (gld${EMULATION_NAME}_finish): Always call
	finish_default.

ld/testsuite/
	Update for section sym changes.
@
text
@d11 14
a24 14
 +\[ 0\] +NULL +0+ 0+ 0+ 00 +0 +0 +0
 +\[ 1\] .interp +.*
 +\[ 2\] .hash +.*
 +\[ 3\] .dynsym +.*
 +\[ 4\] .dynstr +.*
 +\[ 5\] .rela.dyn +.*
 +\[ 6\] .text +PROGBITS +0+11000 0+1000 0+1194 00 +AX +0 +0 4096
 +\[ 7\] .tdata +PROGBITS +0+22194 0+2194 0+1060 00 WAT +0 +0 +4
 +\[ 8\] .tbss +NOBITS +0+231f4 0+31f4 0+40 00 WAT +0 +0 +4
 +\[ 9\] .dynamic +DYNAMIC +0+231f4 0+31f4 0+80 08 +WA +4 +0 +4
 +\[10\] .got +PROGBITS +0+23274 0+3274 0+14 04 +WA +0 +0 +4
 +\[11\] .shstrtab +.*
 +\[12\] .symtab +.*
 +\[13\] .strtab +.*
d29 1
a29 1
There are 6 program headers, starting at offset [0-9]+
d49 1
a49 1
Symbol table '.dynsym' contains [0-9]+ entries:
d61 1
a61 1
Symbol table '.symtab' contains 64 entries:
@


1.8
log
@bfd/
	PR ld/2723
	* elflink.c (bfd_elf_final_link): Don't output section symbols
	for special ELF sections.
ld/testsuite/
Update for removal of some section syms.
@
text
@d91 1
a91 1
.* OBJECT +LOCAL +HIDDEN +ABS _PROCEDURE_LINKAGE_TABLE_
@


1.7
log
@bfd/
	* elf32-cris.c (elf_cris_adjust_gotplt_to_got): Move assert later.
	* elfxx-mips.c (_bfd_mips_elf_hide_symbol): Cope with being called
	without any got section.

ld/testsuite/
	* ld-alpha/tlsbin.rd: Update.
	* ld-alpha/tlsbinr.rd: Update.
	* ld-cris/locref1.d: Update.
	* ld-cris/locref2.d: Update.
	* ld-i386/tlsbin.rd: Update.
	* ld-ia64/tlsbin.rd: Update.
	* ld-powerpc/tlsexe.r: Update.
	* ld-powerpc/tlsexe32.r: Update.
	* ld-powerpc/tlsexetoc.r: Update.
	* ld-s390/tlsbin.rd: Update.
	* ld-s390/tlsbin_64.rd: Update.
	* ld-sparc/tlssunbin32.rd: Update.
	* ld-sparc/tlssunbin64.rd: Update.
	* ld-x86-64/tlsbin.rd: Update.
@
text
@d61 1
a61 1
Symbol table '.symtab' contains 67 entries:
a73 3
.* SECTION LOCAL +DEFAULT +11 *
.* SECTION LOCAL +DEFAULT +12 *
.* SECTION LOCAL +DEFAULT +13 *
@


1.6
log
@Adjust for dynamic sym changes.
@
text
@d93 3
a100 1
.* OBJECT +GLOBAL HIDDEN +9 _DYNAMIC
a105 1
.* OBJECT +GLOBAL HIDDEN +ABS _PROCEDURE_LINKAGE_TABLE_
a123 1
.* OBJECT +GLOBAL +HIDDEN +10 _GLOBAL_OFFSET_TABLE_
@


1.5
log
@2005-04-11  David S. Miller  <davem@@davemloft.net>

	* elf32-sparc.c (elf32_sparc_relocate_section,
	R_SPARC_TLS_LDO_{HIX22,LOX10}): When not shared, transition to
	R_SPARC_TLS_LE_{HIX22,LOX10}.
	(elf32_sparc_relocate_section, R_SPARC_TLS_{LDO,LE}_HIX22): Only
	xor relocation with 0xffffffff if R_SPARC_TLS_LE_HIX22.
	(elf32_sparc_relocate_section, R_SPARC_TLS_{LDO,LE}_LOX10): Only
	or 0x1c00 into relocation if R_SPARC_TLS_LE_HIX22.

	* ld-sparc/tlssunbin32.dd: Update for TLS relocation fixes.
	* ld-sparc/tlssunbin32.rd: Likewise.
	* ld-sparc/tlssunbin32.sd: Likewise.
	* ld-sparc/tlssunpic32.dd: Likewise.
@
text
@d7 1
a7 1
There are 15 section headers, starting at offset 0x[0-9a-f]+:
d22 3
a24 4
 +\[11\] .plt +.*
 +\[12\] .shstrtab +.*
 +\[13\] .symtab +.*
 +\[14\] .strtab +.*
d36 4
a39 4
 +LOAD +0x0+ 0x0+10000 0x0+10000 0x0+2194 0x0+2194 R E 0x10000
 +LOAD +0x0+2194 0x0+22194 0x0+22194 0x0+10f4 0x0+10f4 RWE 0x10000
 +DYNAMIC +0x0+31f4 0x0+231f4 0x0+231f4 0x0+80 0x0+80 RW +0x4
 +TLS +0x0+2194 0x0+22194 0x0+22194 0x0+1060 0x0+10a0 R +0x4
d44 4
a47 4
00023278 +0000014e R_SPARC_TLS_TPOFF32 +00000000 +sG5 \+ 0
0002327c +0000034e R_SPARC_TLS_TPOFF32 +00000000 +sG2 \+ 0
00023280 +0000074e R_SPARC_TLS_TPOFF32 +00000000 +sG6 \+ 0
00023284 +0000084e R_SPARC_TLS_TPOFF32 +00000000 +sG1 \+ 0
d49 1
a49 1
Symbol table '.dynsym' contains 11 entries:
d51 9
a59 11
 +0: 0+ +0 NOTYPE +LOCAL +DEFAULT +UND *
 +1: 0+ +0 TLS +GLOBAL DEFAULT +UND sG5
 +2: 0+231f4 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
 +3: 0+ +0 TLS +GLOBAL DEFAULT +UND sG2
 +4: [0-9a-f]+ +0 OBJECT +GLOBAL DEFAULT +ABS _PROCEDURE_LINKAGE_TABLE_
 +5: 0+ +0 FUNC +GLOBAL DEFAULT +UND __tls_get_addr
 +6: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS __bss_start
 +7: 0+ +0 TLS +GLOBAL DEFAULT +UND sG6
 +8: 0+ +0 TLS +GLOBAL DEFAULT +UND sG1
 +9: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS _edata
 +10: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS _end
d61 1
a61 1
Symbol table '.symtab' contains 68 entries:
d63 67
a129 68
 +0: 0+ +0 NOTYPE +LOCAL +DEFAULT +UND *
 +1: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +1 *
 +2: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +2 *
 +3: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +3 *
 +4: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +4 *
 +5: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +5 *
 +6: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +6 *
 +7: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +7 *
 +8: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +8 *
 +9: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +9 *
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +10 *
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +11 *
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +12 *
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +13 *
 +[0-9]+: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +14 *
 +[0-9]+: 0+1020 +0 TLS +LOCAL +DEFAULT +7 sl1
 +[0-9]+: 0+1024 +0 TLS +LOCAL +DEFAULT +7 sl2
 +[0-9]+: 0+1028 +0 TLS +LOCAL +DEFAULT +7 sl3
 +[0-9]+: 0+102c +0 TLS +LOCAL +DEFAULT +7 sl4
 +[0-9]+: 0+1030 +0 TLS +LOCAL +DEFAULT +7 sl5
 +[0-9]+: 0+1034 +0 TLS +LOCAL +DEFAULT +7 sl6
 +[0-9]+: 0+1038 +0 TLS +LOCAL +DEFAULT +7 sl7
 +[0-9]+: 0+103c +0 TLS +LOCAL +DEFAULT +7 sl8
 +[0-9]+: 0+1080 +0 TLS +LOCAL +DEFAULT +8 bl1
 +[0-9]+: 0+1084 +0 TLS +LOCAL +DEFAULT +8 bl2
 +[0-9]+: 0+1088 +0 TLS +LOCAL +DEFAULT +8 bl3
 +[0-9]+: 0+108c +0 TLS +LOCAL +DEFAULT +8 bl4
 +[0-9]+: 0+1090 +0 TLS +LOCAL +DEFAULT +8 bl5
 +[0-9]+: 0+1094 +0 TLS +LOCAL +DEFAULT +8 bl6
 +[0-9]+: 0+1098 +0 TLS +LOCAL +DEFAULT +8 bl7
 +[0-9]+: 0+109c +0 TLS +LOCAL +DEFAULT +8 bl8
 +[0-9]+: 0+101c +0 TLS +GLOBAL DEFAULT +7 sg8
 +[0-9]+: 0+107c +0 TLS +GLOBAL DEFAULT +8 bg8
 +[0-9]+: 0+1074 +0 TLS +GLOBAL DEFAULT +8 bg6
 +[0-9]+: 0+ +0 TLS +GLOBAL DEFAULT +UND sG5
 +[0-9]+: 0+1068 +0 TLS +GLOBAL DEFAULT +8 bg3
 +[0-9]+: 0+231f4 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
 +[0-9]+: 0+1008 +0 TLS +GLOBAL DEFAULT +7 sg3
 +[0-9]+: 0+1048 +0 TLS +GLOBAL HIDDEN +7 sh3
 +[0-9]+: 0+ +0 TLS +GLOBAL DEFAULT +UND sG2
 +[0-9]+: 0+100c +0 TLS +GLOBAL DEFAULT +7 sg4
 +[0-9]+: 0+1010 +0 TLS +GLOBAL DEFAULT +7 sg5
 +[0-9]+: [0-9a-f]+ +0 OBJECT +GLOBAL DEFAULT +ABS _PROCEDURE_LINKAGE_TABLE_
 +[0-9]+: 0+1070 +0 TLS +GLOBAL DEFAULT +8 bg5
 +[0-9]+: 0+ +0 FUNC +GLOBAL DEFAULT +UND __tls_get_addr
 +[0-9]+: 0+1058 +0 TLS +GLOBAL HIDDEN +7 sh7
 +[0-9]+: 0+105c +0 TLS +GLOBAL HIDDEN +7 sh8
 +[0-9]+: 0+ +0 TLS +GLOBAL DEFAULT +7 sg1
 +[0-9]+: 0+12000 +0 FUNC +GLOBAL DEFAULT +6 _start
 +[0-9]+: 0+104c +0 TLS +GLOBAL HIDDEN +7 sh4
 +[0-9]+: 0+1078 +0 TLS +GLOBAL DEFAULT +8 bg7
 +[0-9]+: 0+1050 +0 TLS +GLOBAL HIDDEN +7 sh5
 +[0-9]+: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS __bss_start
 +[0-9]+: 0+ +0 TLS +GLOBAL DEFAULT +UND sG6
 +[0-9]+: 0+11008 +0 FUNC +GLOBAL DEFAULT +6 fn2
 +[0-9]+: 0+1004 +0 TLS +GLOBAL DEFAULT +7 sg2
 +[0-9]+: 0+ +0 TLS +GLOBAL DEFAULT +UND sG1
 +[0-9]+: 0+1040 +0 TLS +GLOBAL HIDDEN +7 sh1
 +[0-9]+: 0+1014 +0 TLS +GLOBAL DEFAULT +7 sg6
 +[0-9]+: 0+1018 +0 TLS +GLOBAL DEFAULT +7 sg7
 +[0-9]+: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS _edata
 +[0-9]+: 0+23274 +0 OBJECT +GLOBAL +HIDDEN +10 _GLOBAL_OFFSET_TABLE_
 +[0-9]+: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS _end
 +[0-9]+: 0+1044 +0 TLS +GLOBAL HIDDEN +7 sh2
 +[0-9]+: 0+1054 +0 TLS +GLOBAL HIDDEN +7 sh6
 +[0-9]+: 0+1064 +0 TLS +GLOBAL DEFAULT +8 bg2
 +[0-9]+: 0+1060 +0 TLS +GLOBAL DEFAULT +8 bg1
 +[0-9]+: 0+106c +0 TLS +GLOBAL DEFAULT +8 bg4
@


1.4
log
@bfd/

2005-03-16  H.J. Lu  <hongjiu.lu@@intel.com>

	* elflink.c (elf_mark_used_section): New.
	(bfd_elf_gc_sections): Call elf_gc_mark_section for
	non-relocatable link if we don't do GC.

include/

2005-03-16  H.J. Lu  <hongjiu.lu@@intel.com>

	* bfdlink.h (bfd_link_info): Add gc_sections.

ld/

2005-03-16  H.J. Lu  <hongjiu.lu@@intel.com>

	* emultempl/elf32.em (gld${EMULATION_NAME}_finish): Remove
	unused empty output sections for non-relocatable link.

	* ld.h (args_type): Remove gc_sections.

	* ldlang.c (lang_mark_used_section): New.
	(lang_gc_sections): Use link_info.gc_sections instead of
	command_line.gc_sections.
	* ldmain.c (main): Likewise.
	* lexsup.c (parse_args): Likewise.
	* ldlang.c (lang_process): Call lang_mark_used_section.

	* ldmain.c (main): Initialize link_info.gc_sections to FALSE.

ld/testsuite/

2005-03-16  H.J. Lu  <hongjiu.lu@@intel.com>

	* ld-alpha/tlsbin.rd: Updated for empty section removal.
	* ld-alpha/tlsbinr.rd: Likewise.
	* ld-alpha/tlspic.rd: Likewise.
	* ld-arm/mixed-lib.sym: Likewise.
	* ld-i386/tlsbin.rd: Likewise.
	* ld-i386/tlsnopic.rd: Likewise.
	* ld-i386/tlspic.rd: Likewise.
	* ld-ia64/tlsbin.rd: Likewise.
	* ld-ia64/tlspic.rd: Likewise.
	* ld-powerpc/apuinfo.rd: Likewise.
	* ld-powerpc/powerpc.exp: Likewise.
	* ld-powerpc/tlsexe32.r: Likewise.
	* ld-s390/tlsbin.rd: Likewise.
	* ld-s390/tlsbin_64.rd: Likewise.
	* ld-s390/tlspic.rd: Likewise.
	* ld-s390/tlspic_64.rd: Likewise.
	* ld-sh/tlsbin-2.d: Likewise.
	* ld-sh/tlspic-2.d: Likewise.
	* ld-sparc/tlssunbin32.rd: Likewise.
	* ld-sparc/tlssunnopic32.rd: Likewise.
	* ld-sparc/tlssunpic32.rd: Likewise.
	* ld-x86-64/tlsbin.rd: Likewise.
	* ld-x86-64/tlspic.rd: Likewise.
@
text
@d20 2
a21 2
 +\[ 9\] .dynamic +DYNAMIC +0+231f8 0+31f8 0+80 08 +WA +4 +0 +4
 +\[10\] .got +PROGBITS +0+23278 0+3278 0+14 04 +WA +0 +0 +4
d38 2
a39 2
 +LOAD +0x0+2194 0x0+22194 0x0+22194 0x0+10f8 0x0+10f8 RWE 0x10000
 +DYNAMIC +0x0+31f8 0x0+231f8 0x0+231f8 0x0+80 0x0+80 RW +0x4
d45 4
a48 4
0002327c +0000014e R_SPARC_TLS_TPOFF32 +00000000 +sG5 \+ 0
00023280 +0000034e R_SPARC_TLS_TPOFF32 +00000000 +sG2 \+ 0
00023284 +0000074e R_SPARC_TLS_TPOFF32 +00000000 +sG6 \+ 0
00023288 +0000084e R_SPARC_TLS_TPOFF32 +00000000 +sG1 \+ 0
d54 1
a54 1
 +2: 0+231f8 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
d102 1
a102 1
 +[0-9]+: 0+231f8 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
d127 1
a127 1
 +[0-9]+: 0+23278 +0 OBJECT +GLOBAL +HIDDEN +10 _GLOBAL_OFFSET_TABLE_
@


1.3
log
@	* ld-cris/expdyn1.d, ld-cris/expdyn5.d, ld-cris/expdyn6.d,
	ld-cris/expdyn7.d, ld-cris/gotplt1.d, ld-cris/gotplt2.d,
	ld-cris/gotplt3.d, ld-cris/hiddef1.d, ld-cris/libdso-2.d,
	ld-cris/locref1.d, ld-cris/locref2.d, ld-cris/weakref2.d,
	ld-i386/tlsbin.rd, ld-i386/tlsnopic.rd, ld-i386/tlspic.rd,
	ld-ia64/tlsbin.dd, ld-ia64/tlsbin.rd, ld-ia64/tlspic.dd,
	ld-ia64/tlspic.rd, ld-powerpc/tlsexe32.d, ld-powerpc/tlsexe32.g,
	ld-powerpc/tlsexe32.r, ld-powerpc/tlsexe32.t,
	ld-powerpc/tlsso32.d, ld-powerpc/tlsso32.g, ld-powerpc/tlsso32.r,
	ld-powerpc/tlsso32.t, ld-s390/tlsbin.dd, ld-s390/tlsbin.rd,
	ld-s390/tlspic.rd, ld-sparc/tlssunbin32.rd,
	ld-sparc/tlssunpic32.rd, ld-x86-64/tlsbin.rd, ld-x86-64/tlspic.dd,
	ld-x86-64/tlspic.rd: Adjust for _GLOBAL_OFFSET_TABLE_ now hidden.
@
text
@d7 1
a7 1
There are 17 section headers, starting at offset 0x[0-9a-f]+:
d23 3
a25 5
 +\[12\] .data +.*
 +\[13\] .bss +.*
 +\[14\] .shstrtab +.*
 +\[15\] .symtab +.*
 +\[16\] .strtab +.*
d38 1
a38 1
 +LOAD +0x0+2194 0x0+22194 0x0+22194 0x0+1e6c 0x0+1e6c RWE 0x10000
d64 1
a64 1
Symbol table '.symtab' contains 70 entries:
d76 58
a133 60
 +10: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +10 *
 +11: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +11 *
 +12: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +12 *
 +13: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +13 *
 +14: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +14 *
 +15: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +15 *
 +16: [0-9a-f]+ +0 SECTION LOCAL +DEFAULT +16 *
 +17: 0+1020 +0 TLS +LOCAL +DEFAULT +7 sl1
 +18: 0+1024 +0 TLS +LOCAL +DEFAULT +7 sl2
 +19: 0+1028 +0 TLS +LOCAL +DEFAULT +7 sl3
 +20: 0+102c +0 TLS +LOCAL +DEFAULT +7 sl4
 +21: 0+1030 +0 TLS +LOCAL +DEFAULT +7 sl5
 +22: 0+1034 +0 TLS +LOCAL +DEFAULT +7 sl6
 +23: 0+1038 +0 TLS +LOCAL +DEFAULT +7 sl7
 +24: 0+103c +0 TLS +LOCAL +DEFAULT +7 sl8
 +25: 0+1080 +0 TLS +LOCAL +DEFAULT +8 bl1
 +26: 0+1084 +0 TLS +LOCAL +DEFAULT +8 bl2
 +27: 0+1088 +0 TLS +LOCAL +DEFAULT +8 bl3
 +28: 0+108c +0 TLS +LOCAL +DEFAULT +8 bl4
 +29: 0+1090 +0 TLS +LOCAL +DEFAULT +8 bl5
 +30: 0+1094 +0 TLS +LOCAL +DEFAULT +8 bl6
 +31: 0+1098 +0 TLS +LOCAL +DEFAULT +8 bl7
 +32: 0+109c +0 TLS +LOCAL +DEFAULT +8 bl8
 +33: 0+101c +0 TLS +GLOBAL DEFAULT +7 sg8
 +34: 0+107c +0 TLS +GLOBAL DEFAULT +8 bg8
 +35: 0+1074 +0 TLS +GLOBAL DEFAULT +8 bg6
 +36: 0+ +0 TLS +GLOBAL DEFAULT +UND sG5
 +37: 0+1068 +0 TLS +GLOBAL DEFAULT +8 bg3
 +38: 0+231f8 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
 +39: 0+1008 +0 TLS +GLOBAL DEFAULT +7 sg3
 +40: 0+1048 +0 TLS +GLOBAL HIDDEN +7 sh3
 +41: 0+ +0 TLS +GLOBAL DEFAULT +UND sG2
 +42: 0+100c +0 TLS +GLOBAL DEFAULT +7 sg4
 +43: 0+1010 +0 TLS +GLOBAL DEFAULT +7 sg5
 +44: [0-9a-f]+ +0 OBJECT +GLOBAL DEFAULT +ABS _PROCEDURE_LINKAGE_TABLE_
 +45: 0+1070 +0 TLS +GLOBAL DEFAULT +8 bg5
 +46: 0+ +0 FUNC +GLOBAL DEFAULT +UND __tls_get_addr
 +47: 0+1058 +0 TLS +GLOBAL HIDDEN +7 sh7
 +48: 0+105c +0 TLS +GLOBAL HIDDEN +7 sh8
 +49: 0+ +0 TLS +GLOBAL DEFAULT +7 sg1
 +50: 0+12000 +0 FUNC +GLOBAL DEFAULT +6 _start
 +51: 0+104c +0 TLS +GLOBAL HIDDEN +7 sh4
 +52: 0+1078 +0 TLS +GLOBAL DEFAULT +8 bg7
 +53: 0+1050 +0 TLS +GLOBAL HIDDEN +7 sh5
 +54: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS __bss_start
 +55: 0+ +0 TLS +GLOBAL DEFAULT +UND sG6
 +56: 0+11008 +0 FUNC +GLOBAL DEFAULT +6 fn2
 +57: 0+1004 +0 TLS +GLOBAL DEFAULT +7 sg2
 +58: 0+ +0 TLS +GLOBAL DEFAULT +UND sG1
 +59: 0+1040 +0 TLS +GLOBAL HIDDEN +7 sh1
 +60: 0+1014 +0 TLS +GLOBAL DEFAULT +7 sg6
 +61: 0+1018 +0 TLS +GLOBAL DEFAULT +7 sg7
 +62: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS _edata
 +63: 0+23278 +0 OBJECT +GLOBAL +HIDDEN +10 _GLOBAL_OFFSET_TABLE_
 +64: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS _end
 +65: 0+1044 +0 TLS +GLOBAL HIDDEN +7 sh2
 +66: 0+1054 +0 TLS +GLOBAL HIDDEN +7 sh6
 +67: 0+1064 +0 TLS +GLOBAL DEFAULT +8 bg2
 +68: 0+1060 +0 TLS +GLOBAL DEFAULT +8 bg1
 +69: 0+106c +0 TLS +GLOBAL DEFAULT +8 bg4
@


1.2
log
@	* ld-sparc/tlssunpic32.rd: Adjust for section reordering changes
	and removal of unneeded STT_SECTION symbols from .dynsym.
	* ld-sparc/tlssunbin32.rd: Likewise.
	* ld-sparc/tlssunpic32.dd: Likewise.
	* ld-sparc/tlssunpic32.sd: Likewise.
	* ld-sparc/tlssunbin32.dd: Likewise.
	* ld-sparc/tlssunbin32.sd: Likewise.
	* ld-sparc/tlssunbin32.td: Likewise.
@
text
@d101 31
a131 31
 +33: 0+23278 +0 OBJECT +LOCAL +HIDDEN +10 _GLOBAL_OFFSET_TABLE_
 +34: 0+101c +0 TLS +GLOBAL DEFAULT +7 sg8
 +35: 0+107c +0 TLS +GLOBAL DEFAULT +8 bg8
 +36: 0+1074 +0 TLS +GLOBAL DEFAULT +8 bg6
 +37: 0+ +0 TLS +GLOBAL DEFAULT +UND sG5
 +38: 0+1068 +0 TLS +GLOBAL DEFAULT +8 bg3
 +39: 0+231f8 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
 +40: 0+1008 +0 TLS +GLOBAL DEFAULT +7 sg3
 +41: 0+1048 +0 TLS +GLOBAL HIDDEN +7 sh3
 +42: 0+ +0 TLS +GLOBAL DEFAULT +UND sG2
 +43: 0+100c +0 TLS +GLOBAL DEFAULT +7 sg4
 +44: 0+1010 +0 TLS +GLOBAL DEFAULT +7 sg5
 +45: [0-9a-f]+ +0 OBJECT +GLOBAL DEFAULT +ABS _PROCEDURE_LINKAGE_TABLE_
 +46: 0+1070 +0 TLS +GLOBAL DEFAULT +8 bg5
 +47: 0+ +0 FUNC +GLOBAL DEFAULT +UND __tls_get_addr
 +48: 0+1058 +0 TLS +GLOBAL HIDDEN +7 sh7
 +49: 0+105c +0 TLS +GLOBAL HIDDEN +7 sh8
 +50: 0+ +0 TLS +GLOBAL DEFAULT +7 sg1
 +51: 0+12000 +0 FUNC +GLOBAL DEFAULT +6 _start
 +52: 0+104c +0 TLS +GLOBAL HIDDEN +7 sh4
 +53: 0+1078 +0 TLS +GLOBAL DEFAULT +8 bg7
 +54: 0+1050 +0 TLS +GLOBAL HIDDEN +7 sh5
 +55: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS __bss_start
 +56: 0+ +0 TLS +GLOBAL DEFAULT +UND sG6
 +57: 0+11008 +0 FUNC +GLOBAL DEFAULT +6 fn2
 +58: 0+1004 +0 TLS +GLOBAL DEFAULT +7 sg2
 +59: 0+ +0 TLS +GLOBAL DEFAULT +UND sG1
 +60: 0+1040 +0 TLS +GLOBAL HIDDEN +7 sh1
 +61: 0+1014 +0 TLS +GLOBAL DEFAULT +7 sg6
 +62: 0+1018 +0 TLS +GLOBAL DEFAULT +7 sg7
 +63: [0-9a-f]+ +0 NOTYPE +GLOBAL DEFAULT +ABS _edata
@


1.1
log
@bfd/
	* elf32-sparc.c (_bfd_sparc_elf_howto_table): Add TLS relocs.
	(elf32_sparc_rev32_howto): New variable.
	(sparc_reloc_map): Add TLS relocs.
	(elf32_sparc_reloc_type_lookup, elf32_sparc_info_to_howto):
	Handle REV32.
	(sparc_elf_hix22_reloc, sparc_elf_lox10_reloc, elf32_sparc_mkobject):
	New functions.
	(struct elf32_sparc_dyn_relocs, struct elf32_sparc_link_hash_entry,
	struct elf32_sparc_link_hash_table):
	New structures.
	(elf32_sparc_tdata, elf32_sparc_local_got_tls_type,
	elf32_sparc_hash_table): Define.
	(link_hash_newfunc, elf32_sparc_link_hash_table_create,
	create_got_section, elf32_sparc_create_dynamic_sections,
	elf32_sparc_copy_indirect_symbol, elf32_sparc_tls_transition): New
	functions.
	(elf32_sparc_check_relocs): Handle TLS relocs.  Add dynamic reloc
	reference counting.
	(elf32_sparc_gc_sweep_hook): Likewise.
	(elf32_sparc_adjust_dynamic_symbol): Likewise.
	(elf32_sparc_size_dynamic_sections): Likewise.
	(elf32_sparc_relocate_section): Likewise.
	(allocate_dynrelocs, readonly_dynrelocs, dtpoff_base, tpoff):
	New functions.
	(elf32_sparc_object_p): Allocate backend private object data.
	(bfd_elf32_bfd_link_hash_table_create,
	elf_backend_copy_indirect_symbol, bfd_elf32_mkobject,
	elf_backend_can_refcount): Define.
	(elf_backend_create_dynamic_sections): Define to
	elf32_sparc_create_dynamic_sections.
	* reloc.c: Add SPARC TLS relocs.
	* bfd-in2.h, libbfd.h: Rebuilt.
	* elf64-sparc.c (sparc64_elf_howto_table): Add TLS relocs.
	(sparc_reloc_map): Likewise.
gas/
	* config/tc-sparc.c (sparc_ip): Handle TLS % operators.
	(tc_gen_reloc): Handle TLS relocs.
	(sparc_cons, cons_fix_new_sparc): Handle %r_tls_dtpoff.
	* config/tc-sparc.h (tc_fix_adjustable): Don't adjust TLS
	relocs.
	* config/obj-elf.c (obj_elf_section_word): Handle tls.
	(obj_elf_type): Handle tls_object.
include/
	* elf/sparc.h: Add TLS relocs.  Move R_SPARC_REV32 to 252.
ld/testsuite/
	* ld-sparc/sparc.exp: New.
	* ld-sparc/tlsg32.s: New test.
	* ld-sparc/tlsg32.sd: Likewise.
	* ld-sparc/tlsg64.s: Likewise.
	* ld-sparc/tlsg64.sd: Likewise.
	* ld-sparc/tlslib.s: Likewise.
	* ld-sparc/tlsnopic.s: Likewise.
	* ld-sparc/tlspic.s: Likewise.
	* ld-sparc/tlssunbin32.dd: Likewise.
	* ld-sparc/tlssunbin32.rd: Likewise.
	* ld-sparc/tlssunbin32.s: Likewise.
	* ld-sparc/tlssunbin32.sd: Likewise.
	* ld-sparc/tlssunbin32.td: Likewise.
	* ld-sparc/tlssunbin64.dd: Likewise.
	* ld-sparc/tlssunbin64.rd: Likewise.
	* ld-sparc/tlssunbin64.s: Likewise.
	* ld-sparc/tlssunbin64.sd: Likewise.
	* ld-sparc/tlssunbin64.td: Likewise.
	* ld-sparc/tlssunbinpic32.s: Likewise.
	* ld-sparc/tlssunbinpic64.s: Likewise.
	* ld-sparc/tlssunnopic32.dd: Likewise.
	* ld-sparc/tlssunnopic32.rd: Likewise.
	* ld-sparc/tlssunnopic32.s: Likewise.
	* ld-sparc/tlssunnopic32.sd: Likewise.
	* ld-sparc/tlssunnopic64.dd: Likewise.
	* ld-sparc/tlssunnopic64.rd: Likewise.
	* ld-sparc/tlssunnopic64.s: Likewise.
	* ld-sparc/tlssunnopic64.sd: Likewise.
	* ld-sparc/tlssunpic32.dd: Likewise.
	* ld-sparc/tlssunpic32.rd: Likewise.
	* ld-sparc/tlssunpic32.s: Likewise.
	* ld-sparc/tlssunpic32.sd: Likewise.
	* ld-sparc/tlssunpic32.td: Likewise.
	* ld-sparc/tlssunpic64.dd: Likewise.
	* ld-sparc/tlssunpic64.rd: Likewise.
	* ld-sparc/tlssunpic64.s: Likewise.
	* ld-sparc/tlssunpic64.sd: Likewise.
	* ld-sparc/tlssunpic64.td: Likewise.
@
text
@d18 4
a21 4
 +\[ 7\] .data +.*
 +\[ 8\] .tdata +PROGBITS +0+24000 0+4000 0+1060 00 WAT +0 +0 +4
 +\[ 9\] .tbss +NOBITS +0+25060 0+5060 0+40 00 WAT +0 +0 +4
 +\[10\] .dynamic +DYNAMIC +0+25060 0+5060 0+80 08 +WA +4 +0 +4
d23 1
a23 1
 +\[12\] .got +PROGBITS +0+250e0 0+50e0 0+14 04 +WA +0 +0 +4
d40 3
a42 3
 +LOAD +0x0+4000 0x0+24000 0x0+24000 0x0+10f4 0x0+10f8 RWE 0x10000
 +DYNAMIC +0x0+5060 0x0+25060 0x0+25060 0x0+80 0x0+80 RW +0x4
 +TLS +0x0+4000 0x0+24000 0x0+24000 0x0+1060 0x0+10a0 R +0x4
d47 4
a50 4
000250e4 +0000014e R_SPARC_TLS_TPOFF32 +00000000 +sG5 \+ 0
000250e8 +0000034e R_SPARC_TLS_TPOFF32 +00000000 +sG2 \+ 0
000250ec +0000074e R_SPARC_TLS_TPOFF32 +00000000 +sG6 \+ 0
000250f0 +0000084e R_SPARC_TLS_TPOFF32 +00000000 +sG1 \+ 0
d56 1
a56 1
 +2: 0+25060 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
d85 20
a104 20
 +17: 0+1020 +0 TLS +LOCAL +DEFAULT +8 sl1
 +18: 0+1024 +0 TLS +LOCAL +DEFAULT +8 sl2
 +19: 0+1028 +0 TLS +LOCAL +DEFAULT +8 sl3
 +20: 0+102c +0 TLS +LOCAL +DEFAULT +8 sl4
 +21: 0+1030 +0 TLS +LOCAL +DEFAULT +8 sl5
 +22: 0+1034 +0 TLS +LOCAL +DEFAULT +8 sl6
 +23: 0+1038 +0 TLS +LOCAL +DEFAULT +8 sl7
 +24: 0+103c +0 TLS +LOCAL +DEFAULT +8 sl8
 +25: 0+1080 +0 TLS +LOCAL +DEFAULT +9 bl1
 +26: 0+1084 +0 TLS +LOCAL +DEFAULT +9 bl2
 +27: 0+1088 +0 TLS +LOCAL +DEFAULT +9 bl3
 +28: 0+108c +0 TLS +LOCAL +DEFAULT +9 bl4
 +29: 0+1090 +0 TLS +LOCAL +DEFAULT +9 bl5
 +30: 0+1094 +0 TLS +LOCAL +DEFAULT +9 bl6
 +31: 0+1098 +0 TLS +LOCAL +DEFAULT +9 bl7
 +32: 0+109c +0 TLS +LOCAL +DEFAULT +9 bl8
 +33: 0+250e0 +0 OBJECT +LOCAL +HIDDEN +12 _GLOBAL_OFFSET_TABLE_
 +34: 0+101c +0 TLS +GLOBAL DEFAULT +8 sg8
 +35: 0+107c +0 TLS +GLOBAL DEFAULT +9 bg8
 +36: 0+1074 +0 TLS +GLOBAL DEFAULT +9 bg6
d106 4
a109 4
 +38: 0+1068 +0 TLS +GLOBAL DEFAULT +9 bg3
 +39: 0+25060 +0 OBJECT +GLOBAL DEFAULT +ABS _DYNAMIC
 +40: 0+1008 +0 TLS +GLOBAL DEFAULT +8 sg3
 +41: 0+1048 +0 TLS +GLOBAL HIDDEN +8 sh3
d111 2
a112 2
 +43: 0+100c +0 TLS +GLOBAL DEFAULT +8 sg4
 +44: 0+1010 +0 TLS +GLOBAL DEFAULT +8 sg5
d114 1
a114 1
 +46: 0+1070 +0 TLS +GLOBAL DEFAULT +9 bg5
d116 3
a118 3
 +48: 0+1058 +0 TLS +GLOBAL HIDDEN +8 sh7
 +49: 0+105c +0 TLS +GLOBAL HIDDEN +8 sh8
 +50: 0+ +0 TLS +GLOBAL DEFAULT +8 sg1
d120 3
a122 3
 +52: 0+104c +0 TLS +GLOBAL HIDDEN +8 sh4
 +53: 0+1078 +0 TLS +GLOBAL DEFAULT +9 bg7
 +54: 0+1050 +0 TLS +GLOBAL HIDDEN +8 sh5
d126 1
a126 1
 +58: 0+1004 +0 TLS +GLOBAL DEFAULT +8 sg2
d128 3
a130 3
 +60: 0+1040 +0 TLS +GLOBAL HIDDEN +8 sh1
 +61: 0+1014 +0 TLS +GLOBAL DEFAULT +8 sg6
 +62: 0+1018 +0 TLS +GLOBAL DEFAULT +8 sg7
d133 5
a137 5
 +65: 0+1044 +0 TLS +GLOBAL HIDDEN +8 sh2
 +66: 0+1054 +0 TLS +GLOBAL HIDDEN +8 sh6
 +67: 0+1064 +0 TLS +GLOBAL DEFAULT +9 bg2
 +68: 0+1060 +0 TLS +GLOBAL DEFAULT +9 bg1
 +69: 0+106c +0 TLS +GLOBAL DEFAULT +9 bg4
@

