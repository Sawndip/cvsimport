head	1.1;
access;
symbols
	binutils-2_24-branch:1.1.0.20
	binutils-2_24-branchpoint:1.1
	binutils-2_21_1:1.1
	binutils-2_23_2:1.1
	binutils-2_23_1:1.1
	binutils-2_23:1.1
	binutils-2_23-branch:1.1.0.18
	binutils-2_23-branchpoint:1.1
	binutils-2_22_branch:1.1.0.16
	binutils-2_22:1.1
	binutils-2_22-branch:1.1.0.14
	binutils-2_22-branchpoint:1.1
	binutils-2_21:1.1
	binutils-2_21-branch:1.1.0.12
	binutils-2_21-branchpoint:1.1
	binutils-2_20_1:1.1
	binutils-2_20:1.1
	binutils-arc-20081103-branch:1.1.0.10
	binutils-arc-20081103-branchpoint:1.1
	binutils-2_20-branch:1.1.0.8
	binutils-2_20-branchpoint:1.1
	dje-cgen-play1-branch:1.1.0.6
	dje-cgen-play1-branchpoint:1.1
	arc-20081103-branch:1.1.0.4
	arc-20081103-branchpoint:1.1
	binutils-2_19_1:1.1
	binutils-2_19:1.1
	binutils-2_19-branch:1.1.0.2
	binutils-2_19-branchpoint:1.1
	binutils_latest_snapshot:1.1;
locks; strict;
comment	@# @;


1.1
date	2008.08.20.23.28.59;	author bwilson;	state Exp;
branches;
next	;


desc
@@


1.1
log
@2008-08-20  Bob Wilson  <bob.wilson@@acm.org>
bfd/
        * elf-bfd.h (elf_object_id): Add XTENSA_ELF_TDATA.
        * elf32-xtensa.c (elf_howto_table): Add TLS relocations.
        (elf_xtensa_reloc_type_lookup): Likewise.
        (TCB_SIZE): Define.
        (elf_xtensa_link_hash_entry): New.
        (GOT_UNKNOWN, GOT_NORMAL, GOT_TLS_GD, GOT_TLS_IE, GOT_TLS_ANY): Define.
        (elf_xtensa_hash_entry): Define.
        (elf_xtensa_obj_tdata): New.
        (elf_xtensa_tdata): Define.
        (elf_xtensa_local_got_tls_type): Define.
        (elf_xtensa_local_tlsfunc_refcounts): Define.
        (is_xtensa_elf): Define.
        (elf_xtensa_mkobject): New.
        (elf_xtensa_link_hash_table): Add tlsbase field.
        (elf_xtensa_link_hash_newfunc): New.
        (elf_xtensa_link_hash_table_create): Use elf_xtensa_link_hash_newfunc.
        Create an entry for "_TLS_MODULE_BASE_" and save it in tlsbase field.
        (elf_xtensa_copy_indirect_symbol): New.
        (elf_xtensa_check_relocs): Rewrite to handle TLS relocations.
        (elf_xtensa_gc_sweep_hook): Likewise.
        (elf_xtensa_allocate_dynrelocs): Optimize away GOT entries for
        TLSDESC_FN relocations when an IE reference is seen.
        (elf_xtensa_allocate_local_got_size): Likewise.
        (elf_xtensa_always_size_sections): New.
        (dtpoff_base, tpoff): New.
        (elf_xtensa_do_reloc): Handle TLS relocations.
        (replace_tls_insn): New.
        (IS_XTENSA_TLS_RELOC): Define.
        (elf_xtensa_relocate_section): Handle TLS relocations.
        (get_indirect_call_dest_reg): New.
        (bfd_elf32_mkobject): Define.
        (elf_backend_always_size_sections): New.
        (elf_backend_copy_indirect_symbol): New.
        * reloc.c (BFD_RELOC_XTENSA_TLSDESC_FN, BFD_RELOC_XTENSA_TLSDESC_ARG)
        (BFD_RELOC_XTENSA_TLS_DTPOFF, BFD_RELOC_XTENSA_TLS_TPOFF)
        (BFD_RELOC_XTENSA_TLS_FUNC, BFD_RELOC_XTENSA_TLS_ARG)
        (BFD_RELOC_XTENSA_TLS_CALL): New.
        * bfd-in2.h: Regenerate.
        * libbfd.h: Regenerate.
gas/
        * config/tc-xtensa.c (O_tlsfunc, O_tlsarg, O_tlscall): Define.
        (O_tpoff, O_dtpoff): Define.
        (suffix_relocs): Add entries for TLS suffixes.
        (xtensa_elf_cons): Check for invalid use of TLS relocations.
        (map_operator_to_reloc): Add is_literal parameter and use it to
        control translating TLS instruction relocations to the corresponding
        literal relocations.
        (xg_valid_literal_expression): Allow TLS operators.
        (xg_build_to_insn): Copy TLS operators from pseudo-instruction
        operands to generated literals.
        (xg_assemble_literal): Handle TLS operators.  Update call to
        map_operator_to_reloc.
        (md_assemble): Handle CALLXn.TLS pseudo-instruction.
        (md_apply_fix): Handle TLS relocations.
        (emit_single_op): Handle TLS operators.
        (convert_frag_immed): Update call to map_operator_to_reloc.
        (vinsn_to_insnbuf): Emit relocations for TLS-related instructions.
        * config/xtensa-istack.h (tinsn_struct): Add tls_reloc field.
        * config/xtensa-relax.c (append_literal_op): Add src_op parameter
        to initialize the op_data field of the BuildOp.
        (build_transition): Use it here to record the source operand
        corresponding to a generated literal.
        * config/xtensa-relax.h (build_op): Comment op_data use for literals.
include/elf/
        * xtensa.h (R_XTENSA_TLSDESC_FN, R_XTENSA_TLSDESC_ARG)
        (R_XTENSA_TLS_DTPOFF, R_XTENSA_TLS_TPOFF, R_XTENSA_TLS_FUNC)
        (R_XTENSA_TLS_ARG, R_XTENSA_TLS_CALL): New.
ld/testsuite/
        * ld-xtensa/tlsbin.dd, ld-xtensa/tlsbin.rd, ld-xtensa/tlsbin.s,
        ld-xtensa/tlsbin.sd, ld-xtensa/tlsbin.td, ld-xtensa/tlslib.s,
        ld-xtensa/tlspic.dd, ld-xtensa/tlspic.rd, ld-xtensa/tlspic.sd,
        ld-xtensa/tlspic.td, ld-xtensa/tlspic1.s, ld-xtensa/tlspic2.s: New.
        * ld-xtensa/xtensa.exp: Run them.
@
text
@	.section ".tdata", "awT", @@progbits
	.global sg1, sg2, sg3, sg4, sg5, sg6, sg7, sg8
	.global sh1, sh2, sh3, sh4, sh5, sh6, sh7, sh8
	.hidden sh1, sh2, sh3, sh4, sh5, sh6, sh7, sh8
	.align	4
sg1:	.long	17
sg2:	.long	18
sg3:	.long	19
sg4:	.long	20
sg5:	.long	21
sg6:	.long	22
sg7:	.long	23
sg8:	.long	24
sl1:	.long	65
sl2:	.long	66
sl3:	.long	67
sl4:	.long	68
sl5:	.long	69
sl6:	.long	70
sl7:	.long	71
sl8:	.long	72
sh1:	.long	157
sh2:	.long	158
sh3:	.long	159
sh4:	.long	160
sh5:	.long	161
sh6:	.long	162
sh7:	.long	163
sh8:	.long	164

	.text
	.global	_start
	.type	_start, @@function
_start:
	entry	sp, 32

	/* GD */
	movi	a8, sg1@@tlsfunc
	movi	a10, sg1@@tlsarg
	callx8.tls a8, sg1@@tlscall

	/* GD -> IE because variable is referenced through IE too */
	movi	a8, sg2@@tlsfunc
	movi	a10, sg2@@tlsarg
	callx8.tls a8, sg2@@tlscall

	/* GD against local variable */
	movi	a8, sl1@@tlsfunc
	movi	a10, sl1@@tlsarg
	callx8.tls a8, sl1@@tlscall

	/* GD -> IE against local variable referenced through IE too */
	movi	a8, sl2@@tlsfunc
	movi	a10, sl2@@tlsarg
	callx8.tls a8, sl2@@tlscall

	/* GD against hidden and local variable */
	movi	a8, sh1@@tlsfunc
	movi	a10, sh1@@tlsarg
	callx8.tls a8, sh1@@tlscall

	/* GD -> IE against hidden and local variable referenced through
	   IE too */
	movi	a8, sh2@@tlsfunc
	movi	a10, sh2@@tlsarg
	callx8.tls a8, sh2@@tlscall

	/* GD against hidden but not local variable */
	movi	a8, sH1@@tlsfunc
	movi	a10, sH1@@tlsarg
	callx8.tls a8, sH1@@tlscall

	/* GD -> IE against hidden but not local variable referenced through
	   IE too */
	movi	a8, sH2@@tlsfunc
	movi	a10, sH2@@tlsarg
	callx8.tls a8, sH2@@tlscall

	/* LD */
	movi   a8, _TLS_MODULE_BASE_@@tlsfunc
	movi   a10, _TLS_MODULE_BASE_@@tlsarg
	callx8.tls a8, _TLS_MODULE_BASE_@@tlscall
	movi   a12, sl1@@dtpoff
	add    a12, a12, a10
	movi   a13, 2+sl2@@dtpoff
	add    a13, a13, a10

	/* LD against hidden and local variables */
	movi   a12, sh1@@dtpoff
	add    a12, a12, a10
	movi   a13, sh2@@dtpoff+3
	add    a13, a13, a10

	/* LD against hidden but not local variables */
	movi   a12, sH1@@dtpoff
	add    a12, a12, a10
	movi   a13, sH2@@dtpoff+1
	add    a13, a13, a10

	/* IE against global var */
	rur	a2, THREADPTR
	movi	a3, sg2@@tpoff
	add	a3, a3, a2

	/* IE against local var  */
	rur	a4, THREADPTR
	movi	a5, sl2@@tpoff
	add	a5, a5, a4

	/* IE against hidden and local var  */
	rur	a6, THREADPTR
	movi	a7, sh2@@tpoff
	add	a7, a7, a6

	/* IE against hidden but not local var  */
	rur	a8, THREADPTR
	movi	a9, sH2@@tpoff
	add	a9, a9, a8

	retw
@
