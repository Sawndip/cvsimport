head	1.8;
access;
symbols
	binutils-2_24-branch:1.8.0.12
	binutils-2_24-branchpoint:1.8
	binutils-2_21_1:1.8
	binutils-2_23_2:1.8
	binutils-2_23_1:1.8
	binutils-2_23:1.8
	binutils-2_23-branch:1.8.0.10
	binutils-2_23-branchpoint:1.8
	binutils-2_22_branch:1.8.0.8
	binutils-2_22:1.8
	binutils-2_22-branch:1.8.0.6
	binutils-2_22-branchpoint:1.8
	binutils-2_21:1.8
	binutils-2_21-branch:1.8.0.4
	binutils-2_21-branchpoint:1.8
	binutils-2_20_1:1.8
	binutils-2_20:1.8
	binutils-arc-20081103-branch:1.7.0.10
	binutils-arc-20081103-branchpoint:1.7
	binutils-2_20-branch:1.8.0.2
	binutils-2_20-branchpoint:1.8
	dje-cgen-play1-branch:1.7.0.8
	dje-cgen-play1-branchpoint:1.7
	arc-20081103-branch:1.7.0.6
	arc-20081103-branchpoint:1.7
	binutils-2_19_1:1.7
	binutils-2_19:1.7
	binutils-2_19-branch:1.7.0.4
	binutils-2_19-branchpoint:1.7
	binutils-2_18:1.7
	binutils-2_18-branch:1.7.0.2
	binutils-2_18-branchpoint:1.7
	binutils-csl-coldfire-4_1-32:1.6
	binutils-csl-sourcerygxx-4_1-32:1.6
	binutils-csl-innovasic-fido-3_4_4-33:1.6
	binutils-csl-sourcerygxx-3_4_4-32:1.5
	binutils-csl-coldfire-4_1-30:1.6
	binutils-csl-sourcerygxx-4_1-30:1.6
	binutils-csl-coldfire-4_1-28:1.6
	binutils-csl-sourcerygxx-4_1-29:1.6
	binutils-csl-sourcerygxx-4_1-28:1.6
	binutils-csl-arm-2006q3-27:1.6
	binutils-csl-sourcerygxx-4_1-27:1.6
	binutils-csl-arm-2006q3-26:1.6
	binutils-csl-sourcerygxx-4_1-26:1.6
	binutils-csl-sourcerygxx-4_1-25:1.6
	binutils-csl-sourcerygxx-4_1-24:1.6
	binutils-csl-sourcerygxx-4_1-23:1.6
	binutils-csl-sourcerygxx-4_1-21:1.6
	binutils-csl-arm-2006q3-21:1.6
	binutils-csl-sourcerygxx-4_1-22:1.6
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.6
	binutils-csl-sourcerygxx-4_1-20:1.6
	binutils-csl-arm-2006q3-19:1.6
	binutils-csl-sourcerygxx-4_1-19:1.6
	binutils-csl-sourcerygxx-4_1-18:1.6
	binutils-csl-renesas-4_1-9:1.6
	binutils-csl-sourcerygxx-3_4_4-25:1.5
	binutils-csl-renesas-4_1-8:1.6
	binutils-csl-renesas-4_1-7:1.6
	binutils-csl-renesas-4_1-6:1.6
	binutils-csl-sourcerygxx-4_1-17:1.6
	binutils-csl-sourcerygxx-4_1-14:1.6
	binutils-csl-sourcerygxx-4_1-15:1.6
	binutils-csl-sourcerygxx-4_1-13:1.6
	binutils-2_17:1.6
	binutils-csl-sourcerygxx-4_1-12:1.6
	binutils-csl-sourcerygxx-3_4_4-21:1.6
	binutils-csl-wrs-linux-3_4_4-24:1.5
	binutils-csl-wrs-linux-3_4_4-23:1.5
	binutils-csl-sourcerygxx-4_1-9:1.6
	binutils-csl-sourcerygxx-4_1-8:1.6
	binutils-csl-sourcerygxx-4_1-7:1.6
	binutils-csl-arm-2006q1-6:1.6
	binutils-csl-sourcerygxx-4_1-6:1.6
	binutils-csl-wrs-linux-3_4_4-22:1.5
	binutils-csl-coldfire-4_1-11:1.6
	binutils-csl-sourcerygxx-3_4_4-19:1.6
	binutils-csl-coldfire-4_1-10:1.6
	binutils-csl-sourcerygxx-4_1-5:1.6
	binutils-csl-sourcerygxx-4_1-4:1.6
	binutils-csl-wrs-linux-3_4_4-21:1.5
	binutils-csl-morpho-4_1-4:1.6
	binutils-csl-sourcerygxx-3_4_4-17:1.6
	binutils-csl-wrs-linux-3_4_4-20:1.5
	binutils-2_17-branch:1.6.0.4
	binutils-2_17-branchpoint:1.6
	binutils-csl-2_17-branch:1.6.0.2
	binutils-csl-2_17-branchpoint:1.6
	binutils-csl-gxxpro-3_4-branch:1.5.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.5
	binutils-2_16_1:1.5
	binutils-csl-arm-2005q1b:1.5
	binutils-2_16:1.5
	binutils-csl-arm-2005q1a:1.5
	binutils-csl-arm-2005q1-branch:1.5.0.4
	binutils-csl-arm-2005q1-branchpoint:1.5
	binutils-2_16-branch:1.5.0.2
	binutils-2_16-branchpoint:1.5
	csl-arm-2004-q3d:1.4
	csl-arm-2004-q3:1.4
	binutils-2_15:1.3
	binutils-2_15-branchpoint:1.3
	csl-arm-2004-q1a:1.3
	csl-arm-2004-q1:1.3
	binutils-2_15-branch:1.3.0.6
	cagney_bfdfile-20040213-branch:1.3.0.4
	cagney_bfdfile-20040213-branchpoint:1.3
	cagney_bigcore-20040122-branch:1.3.0.2
	cagney_bigcore-20040122-branchpoint:1.3
	csl-arm-2003-q4:1.3
	binutils-2_14:1.2
	binutils-2_14-branch:1.2.0.2
	binutils-2_14-branchpoint:1.2
	binutils-2_13_2_1:1.1
	binutils-2_13_2:1.1
	binutils-2_13_1:1.1
	binutils-2_13:1.1
	binutils-2_13-branchpoint:1.1
	binutils-2_13-branch:1.1.0.4
	binutils-2_12_1:1.1
	binutils-2_12:1.1
	binutils-2_12-branch:1.1.0.2
	binutils-2_12-branchpoint:1.1
	binutils_latest_snapshot:1.8;
locks; strict;
comment	@# @;


1.8
date	2009.09.02.07.25.42;	author amodra;	state Exp;
branches;
next	1.7;

1.7
date	2007.07.06.14.09.45;	author nickc;	state Exp;
branches;
next	1.6;

1.6
date	2005.05.12.07.32.08;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	2005.03.03.11.52.11;	author amodra;	state Exp;
branches;
next	1.4;

1.4
date	2004.05.12.03.08.09;	author bje;	state Exp;
branches;
next	1.3;

1.3
date	2003.10.13.05.09.21;	author kkojima;	state Exp;
branches;
next	1.2;

1.2
date	2002.10.14.18.45.03;	author sclarke;	state Exp;
branches;
next	1.1;

1.1
date	2002.02.08.06.49.58;	author aoliva;	state Exp;
branches;
next	;


desc
@@


1.8
log
@update copyright dates
@
text
@# Expect script for ld-sh tests
#   Copyright (C) 2001, 2002, 2003, 2004, 2005, 2007 Free Software Foundation
#
# This file is part of the GNU Binutils.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
# MA 02110-1301, USA.
#

# Test SH relaxing - that is, that it's disabled when SHmedia sections
# are present.

if ![istarget sh64-*-*] {
    return
}

# There are four source files: the first is SHcompact only, the second
# is SHmedia only, the third has both, and the fourth has only a
# .cranges section.  The table below has:
#   Title
#   as flags for first source (else "n/a" to skip)
#   ditto, other three files
#   ld flags
#   1/0 whether relaxing should have been done or not, or -1 if we expect
#     the linker to not produce an output file.

if [istarget sh64*-*-linux*] {
    set emul32 "shlelf32_linux"
} elseif { [istarget sh64*-*-netbsd*] || [istarget sh5*-*-netbsd*] } {
    set emul32 "shelf32_nbsd"
} else {
    set emul32 "shelf32"
}

set sh64relaxtests {
    {"SH64 not relaxing, shcompact"
      {"-relax -isa shcompact" "n/a" "n/a" "n/a"} "-m$emul32" 0}
    {"SH64 relaxing, shcompact"
      {"-relax -isa shcompact" "n/a" "n/a" "n/a"} "-relax -m$emul32" 1}
    {"SH64 relaxing, shcompacts"
      {"-relax -isa shcompact" "-isa shcompact" "n/a" "n/a"} "-relax -m$emul32" 1}
    {"SH64 relaxing disabled, shmedia"
      {"-relax -isa shcompact" "-isa shmedia -no-mix" "n/a" "n/a"} "-relax -m$emul32" 0}
    {"SH64 relaxing disabled, mixed"
      {"-relax -isa shcompact" "n/a" "-isa shcompact" "n/a"} "-relax -m$emul32" 0}
    {"SH64 relaxing disabled, cranges"
      {"-relax -isa shcompact" "n/a" "n/a" ""} "-relax -m$emul32" 0}
}

proc run_sh64relaxtest {sh64relaxtests} {
    global ld
    global as
    global nm
    global objdump
    global readelf
    global srcdir
    global subdir
    global emul32

    set testindex 0
    
    set sh64relaxfiles {
	"relax1.s" "relax2.s" "relax3.s" "relax4.s"
    }
    
    foreach testentry $sh64relaxtests {
	set testname [lindex $testentry 0]
	set as_options [lindex $testentry 1]
	set ld_options [subst [lindex $testentry 2]]
	set expect_relaxed [lindex $testentry 3]
	
	set is_unresolved 0
	set objfiles {}
	
	incr testindex
	
	# Assemble each file in the test.
	for {set i 0} {$i < 4} {incr i} {
	    set as_file [lindex $sh64relaxfiles $i]
	    set as_opt [lindex $as_options $i]
	    if { [string compare $as_opt "n/a"] != 0 } {
		set objfile "tmpdir/[file rootname $as_file]-$testindex.o"
		lappend objfiles $objfile
		
		if ![ld_assemble $as "$as_opt $srcdir/$subdir/$as_file" $objfile] {
		    set is_unresolved 1
		    break
		}
	    }
	}
	
	# Catch assembler errors.
	if { $is_unresolved != 0 } {
	    unresolved $testname
	    continue
	}
	
	set binfile "tmpdir/relax-$testindex.x"
	
	# We're not interested in the pass/fail of the linker as much
	# as we're interested in whether or not relaxing got properly
	# disabled.  Hence the lax checking here.
	
	file delete $binfile
	set result [ld_simple_link $ld $binfile " --no-warn-mismatch $ld_options $objfiles"]
	if ![file exists $binfile] {
	    
	    if {$expect_relaxed == -1} {
		pass $testname
		continue
	    }
	    
	    verbose "$testname: file $binfile doesn't exist" 1
	    fail $testname
	    continue
	}
	
	catch "exec $objdump -d $binfile" objdump_output
	
	regexp "\[ \t](jsr|bsr)\[ \t]" $objdump_output ignore calltype
	
	if [string match $calltype "bsr"] {
	    set relaxed 1
	} elseif [string match $calltype "jsr"] {
	    set relaxed 0
	} else {
	    verbose "$testname: neither jsr nor bsr found" 1
	    verbose $objdump_output 2
	    fail $testname
	    continue
	}
	
	if {$relaxed != $expect_relaxed} {
	    verbose $objdump_output 2
	    fail $testname
	    exit
	} else {
	    pass $testname
	}
    }
}

run_sh64relaxtest $sh64relaxtests
@


1.7
log
@Update sources to GPLv3
@
text
@d2 1
a2 1
#   Copyright (C) 2001, 2002, 2003, 2004, 2007 Free Software Foundation
@


1.6
log
@Update FSF addresses
@
text
@d2 1
a2 1
#   Copyright (C) 2001, 2002, 2003, 2004 Free Software Foundation
d4 3
a6 1
# This file is free software; you can redistribute it and/or modify
d8 1
a8 1
# the Free Software Foundation; either version 2 of the License, or
d10 1
a10 1
# 
d15 1
a15 1
# 
d18 2
a19 1
# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.
@


1.5
log
@update copyright dates
@
text
@d16 1
a16 1
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
@


1.4
log
@	* ld-sh/sh64/relax.exp: Remove stray semicolons.
	* ld-sh/sh64/relfail.exp: Likewise.
	* lib/ld-lib.exp: Likewise.
@
text
@d2 1
a2 1
#   Copyright (C) 2001 Free Software Foundation
@


1.3
log
@[ld]
	* emulparams/shelf32_nbsd.sh (OTHER_SECTIONS): Redefine.

[ld/testsuite]
	* ld-sh/rd-sh.exp (LDFLAGS): Define appropriately for each
	sh64/sh5 targets.
	* ld-sh/sh.exp: Don't do relaxing test for sh64*-*-* and
	sh5*-*-* targets.
	* ld-sh/sh64/relax.exp (emul32): Set to shelf32_nbsd for netbsd.
	* ld-sh/sh64/relfail.exp: Set parameters for netbsd.
	* ld-sh/sh64/sh64.exp: Skip this for netbsd.  Trim the section
	numbers for crangerel1 and crengerel2 tests.
	* ld-sh/sh64/abi32.sd: Update.
	* ld-sh/sh64/abi32.xd: Likewise.
	* ld-sh/sh64/abi64.sd: Likewise.
	* ld-sh/sh64/abi64.xd: Likewise.
	* ld-sh/sh64/abixx-noexp.sd: Likewise.
	* ld-sh/sh64/cmpct1.sd: Likewise.
	* ld-sh/sh64/cmpct1.xd: Likewise.
	* ld-sh/sh64/crange1.rd: Likewise.
	* ld-sh/sh64/crange2.rd: Likewise.
	* ld-sh/sh64/crange3-cmpct.rd: Likewise.
	* ld-sh/sh64/crange3-media.rd: Likewise.
	* ld-sh/sh64/crange3.rd: Likewise.
	* ld-sh/sh64/crangerel1.rd: Likewise.
	* ld-sh/sh64/crangerel2.rd: Likewise.
	* ld-sh/sh64/dlsection.sd: Likewise.
	* ld-sh/sh64/endian.sbd: Likewise.
	* ld-sh/sh64/endian.sld: Likewise.
	* ld-sh/sh64/gotplt.d: Likewise.
	* ld-sh/sh64/init-cmpct.d: Likewise.
	* ld-sh/sh64/init-media.d: Likewise.
	* ld-sh/sh64/init.s: Align functions.
	* ld-sh/sh64/init64.d: Update.
	* ld-sh/sh64/mix1-noexp.sd: Likewise.
	* ld-sh/sh64/mix1.sd: Likewise.
	* ld-sh/sh64/mix1.xd: Likewise.
	* ld-sh/sh64/mix2-noexp.sd: Likewise.
	* ld-sh/sh64/mix2.sd: Likewise.
	* ld-sh/sh64/mix2.xd:Likewise.
	* ld-sh/sh64/rel32.xd: Likewise.
	* ld-sh/sh64/rel64.xd: Likewise.
	* ld-sh/sh64/reldl32.rd: Likewise.
	* ld-sh/sh64/reldl64.rd: Likewise.
	* ld-sh/sh64/shdl32.xd: Update.
	* ld-sh/sh64/shdl64.sd: Likewise.
	* ld-sh/sh64/shdl64.xd: Likewise.
	* ld-sh/shared-1.d: Add -z nocombreloc to ld option.  Update.
	* ld-sh/sub2l-1.d: Make file format match with elf32-sh.*.
	* ld-sh/weak1.d: Likewise.
@
text
@d119 1
a119 1
		continue;
@


1.2
log
@ld-sh/ld-r-1.d: Disable for sh64*-*-linux*.
* ld-sh/sh64/sh64.exp: Likewise.
* ld-sh/sh.exp: Disable relaxing tests for sh64*-*-linux*.
* ld-sh/sh64/abi32.sd: Adjust expected output to include
sh64*-*-linux* formats too.
* ld-sh/sh64/relax.exp: Add emul32 variable to hold target
emulation, and set it appropriately for sh*-*-linux*.
* ld-sh/sh64/relfail.exp: Add variables to hold target
emulation, output format, start symbol, and whether target
supports 64-bit ABI.  Set appropriately for sh*-*-linux*.
@
text
@d38 2
@


1.1
log
@Contribute sh64-elf.
2002-02-02  Alexandre Oliva  <aoliva@@redhat.com>
* ld-sh/sh64/crange3-cmpct.rd: Adjust offsets.
* ld-sh/sh64/crange3-media.rd: Likewise.
* ld-sh/sh64/crange3.rd: Likewise.
* ld-sh/sh64/crangerel1.rd: Likewise.
* ld-sh/sh64/crangerel2.rd: Likewise.
* ld-sh/sh64/reldl32.rd: Likewise.
* ld-sh/sh64/reldl64.rd: Likewise.
2002-01-28  Alexandre Oliva  <aoliva@@redhat.com>
* ld-sh/sh64/abi32.xd: Formatting changes to match the current
output of objdump.
* ld-sh/sh64/cmpct1.xd: Likewise.
* ld-sh/sh64/crange1.rd: Likewise.
* ld-sh/sh64/crange2.rd: Likewise.
* ld-sh/sh64/crange3-cmpct.rd: Likewise.
* ld-sh/sh64/crange3-media.rd: Likewise.
* ld-sh/sh64/crange3.rd: Likewise.
* ld-sh/sh64/crangerel1.rd: Likewise.
* ld-sh/sh64/crangerel2.rd: Likewise.
* ld-sh/sh64/mix1.xd: Likewise.
* ld-sh/sh64/mix2.xd: Likewise.
* ld-sh/sh64/rel32.xd: Likewise.
* ld-sh/sh64/reldl32.rd: Likewise.
* ld-sh/sh64/reldl64.rd: Likewise.
* ld-sh/sh64/sh64.exp: Likewise.  Reordered cranges and stack
sessions, to match changes in the linker script.
2001-06-14  Alexandre Oliva  <aoliva@@redhat.com>
* ld-sh/sh64/reldl32.rd, ld-sh/sh64/reldl64.rd: Adjust relocation
info to reflect renumbering of relocation types.
2001-03-14  DJ Delorie	<dj@@redhat.com>
* ld-sh/sh64/endian.dbd: New file, endian tests.
* ld-sh/sh64/endian.dld: Ditto.
* ld-sh/sh64/endian.ld:	 Ditto.
* ld-sh/sh64/endian.s:	Ditto.
* ld-sh/sh64/endian.sbd:  Ditto.
* ld-sh/sh64/endian.sld:  Ditto.
* ld-sh/sh64/sh64.exp: Add above tests.	 Add -L option to ld.
2001-03-12  DJ Delorie	<dj@@redhat.com>
* ld-sh/sh64/relax.exp: New file, test disabling relaxing.
* ld-sh/sh64/relax1.s: Ditto.
* ld-sh/sh64/relax2.s: Ditto.
* ld-sh/sh64/relax3.s: Ditto.
* ld-sh/sh64/relax4.s: Ditto.
* ld-sh/sh64/relfail.exp: New file, test for bogus relocs.
* ld-sh/sh64/relfail.s: Ditto.
2001-03-12  DJ Delorie	<dj@@redhat.com>
* ld-sh/sh.exp: This test isn't appropriate for SH64 since it
uses SH32 assembler files.
2001-03-07  DJ Delorie	<dj@@redhat.com>
* ld-selective/selective.exp: Pass "-e _start" for sh64 to
accomodate expected start symbol in test.
2001-03-06  DJ Delorie	<dj@@redhat.com>
* ld-scripts/crossref.exp: Pass -mshelf32 to the linker for sh64,
to match what gcc passes to the linker by default.
* ld-selective/selective.exp: Ditto.
* ld-srec/srec.exp: Ditto, plus XFAIL for sh64.
* ld-undefined/undefined.exp: Add XFAIL for sh64 (it's dwarf2).
2001-03-06  DJ Delorie	<dj@@redhat.com>
* ld-sh/sh64/abi32.xd (stack): Adjust for new default stack layout.
* ld-sh/sh64/abi64.xd (stack): Ditto.
* ld-sh/sh64/cmpct1.xd (stack): Ditto.
* ld-sh/sh64/crange1.rd (stack): Ditto.
* ld-sh/sh64/crange2.rd (stack): Ditto.
* ld-sh/sh64/crange3-cmpct.rd (stack): Ditto.
* ld-sh/sh64/crange3-media.rd (stack): Ditto.
* ld-sh/sh64/crange3.rd (stack): Ditto.
* ld-sh/sh64/mix1.xd (stack): Ditto.
* ld-sh/sh64/mix2.xd (stack): Ditto.
* ld-sh/sh64/shdl32.xd (stack): Ditto.
* ld-sh/sh64/shdl64.xd (stack): Ditto.
2001-01-14  Hans-Peter Nilsson	<hpn@@cygnus.com>
* ld-sh/sh64/mix1.xd: Add SORT_ENTRIES for .cranges section.
* ld-sh/sh64/mix2.xd: Ditto.
2001-01-08  Hans-Peter Nilsson	<hpn@@cygnus.com>
* ld-sh/sh64/abi32.xd: Adjust for bit 0 set on an entry address
being SHmedia.
* ld-sh/sh64/shdl64.xd: Ditto.
* ld-sh/sh64/shdl32.xd: Ditto.
* ld-sh/sh64/mix2.xd: Ditto.
* ld-sh/sh64/crange3-media.rd: Ditto.
* ld-sh/sh64/abi64.xd: Ditto.
2001-01-06  Hans-Peter Nilsson	<hpn@@cygnus.com>
* ld-sh/sh64/crange-2a.s (diversion2): New global symbol.
* ld-sh/sh64/crange1.rd: Adjust to presence of new symbol.
Adjust section type for .cranges; expect sorted contents.
* ld-sh/sh64/crange2.rd: Ditto.
* ld-sh/sh64/crange3.dd, ld-sh/sh64/crange3.rd: Ditto.
* ld-sh/sh64/crangerel1.rd: Adjust to presence of new symbol.
* ld-sh/sh64/crangerel2.rd: Ditto.
* ld-sh/sh64/mix1.xd: Adjust to DEBUGGING being set for .cranges.
* ld-sh/sh64/mix2.xd: Ditto.
* ld-sh/sh64/crange3-cmpct.rd, ld-sh/sh64/crange3-media.rd: New
tests.
* ld-sh/sh64/sh64.exp: Tweak test message.  Run new tests.
2001-01-05  Hans-Peter Nilsson	<hpn@@cygnus.com>
* ld-sh/sh64/shmix-1.s (start2): Add a NOP to provide a valid
target for (unexpanded) PTB.  Add an .align 2 to SHmedia code to
keep properly aligned.
* ld-sh/sh64/mix1.sd, ld-sh/sh64/mix1.xd: Adjust accordingly.
* ld-sh/sh64/mix1-noexp.sd, ld-sh/sh64/mix2-noexp.sd,
ld-sh/sh64/abixx-noexp.sd: New tests for GAS -no-expand and
R_SH_PT_16 relocation.
* ld-sh/sh64/sh64.exp: Run new tests.
2000-12-30  Hans-Peter Nilsson	<hpn@@cygnus.com>
* ld-sh/sh64/crange-2f.s, ld-sh/sh64/crange-2g.s,
ld-sh/sh64/crange-2h.s, ld-sh/sh64/crange-2i.s,
ld-sh/sh64/crange3.dd, ld-sh/sh64/crange3.rd: New tests.
* ld-sh/sh64/sh64.exp: Run new tests.
* ld-sh/sh64/crange1.rd: Correct section flags.
* ld-sh/sh64/crange2.rd: Ditto.
* ld-sh/sh64/crangerel1.rd: Ditto.
2000-12-18  Hans-Peter Nilsson	<hpn@@cygnus.com>
* ld-sh/sh64/crange-1.s, ld-sh/sh64/crange-2a.s,
ld-sh/sh64/crange-2b.s, ld-sh/sh64/crange-2c.s,
ld-sh/sh64/crange-2d.s, ld-sh/sh64/crange-2e.s,
ld-sh/sh64/crange1.rd, ld-sh/sh64/crange2.rd,
ld-sh/sh64/crangerel1.rd, ld-sh/sh64/crangerel2.rd: New tests for
handling .cranges section.
* ld-sh/sh64/sh64.exp: Run new tests.
* ld-sh/sh64/mix1.sd, ld-sh/sh64/mix1.xd, ld-sh/sh64/mix2.sd,
ld-sh/sh64/mix2.xd: Adjust for .cranges section.
2000-12-15  Hans-Peter Nilsson	<hpn@@cygnus.com>
* ld-sh/sh64/abi32.sd, ld-sh/sh64/abi32.xd, ld-sh/sh64/abi64.sd,
ld-sh/sh64/abi64.xd, ld-sh/sh64/cmpct1.xd, ld-sh/sh64/mix1.sd,
ld-sh/sh64/mix1.xd, ld-sh/sh64/mix2.sd, ld-sh/sh64/mix2.xd,
ld-sh/sh64/shdl32.xd, ld-sh/sh64/shdl64.xd: Adjust to .bss and
.data individually 8-byte aligned.
2000-12-09  Hans-Peter Nilsson	<hpn@@cygnus.com>
* ld-sh/sh64/rel-1.s, ld-sh/sh64/rel-2.s, ld-sh/sh64/rel32.xd,
ld-sh/sh64/rel64.xd, ld-sh/sh64/reldl-1.s, ld-sh/sh64/reldl-2.s,
ld-sh/sh64/reldl32.rd, ld-sh/sh64/reldl64.rd: New tests.
* ld-sh/sh64/sh64.exp: Make it possible to use readelf as
inspection tool.  Run new tests.
2000-12-07  Hans-Peter Nilsson	<hpn@@cygnus.com>
* ld-sh/sh64/abi64.sd, ld-sh/sh64/abi32.sd, ld-sh/sh64/mix1.sd,
ld-sh/sh64/mix2.sd: Correct offsets in PT/PTA/PTB expansions.
* ld-sh/sh64/shdl-1.s, ld-sh/sh64/shdl-2.s, ld-sh/sh64/shdl64.sd,
ld-sh/sh64/shdl64.xd, ld-sh/sh64/shdl32.xd: New tests.
* ld-sh/sh64/sh64.exp: Run new tests.
2000-12-01  Hans-Peter Nilsson	<hpn@@cygnus.com>
* ld-sh/sh64/cmpct1.sd, ld-sh/sh64/cmpct1.xd,
ld-sh/sh64/shcmp-1.s: New test.
* ld-sh/sh64/sh64.exp: Add new test to sh64tests.  Reformat.
2000-11-30  Hans-Peter Nilsson	<hpn@@cygnus.com>
* ld-sh/sh64/sh64.exp: Use linker option -mshelf64 for 64-bit ABI
test.
* ld-sh/sh64/abi64.xd: Tweak for 64-bit ELF.
2000-11-29  Hans-Peter Nilsson	<hpn@@cygnus.com>
* ld-sh/sh64/sh64.exp (sh64tests): Use linker option -mshelf32 for
tests.
2000-11-27  Hans-Peter Nilsson	<hpn@@cygnus.com>
* ld-sh/sh64/abi32.sd, ld-sh/sh64/abi64.sd: Correct MOVI
registers.
* ld-sh/sh64/mix1.sd, ld-sh/sh64/mix1.xd, ld-sh/sh64/shmix-1.s:
New test.
* ld-sh/sh64/mix2.sd, ld-sh/sh64/mix2.xd, ld-sh/sh64/shmix-2.s,
ld-sh/sh64/shmix-3.s: New test.
* ld-sh/sh64/sh64.exp: Add new tests to sh64tests.
2000-11-26  Hans-Peter Nilsson	<hpn@@cygnus.com>
* ld-sh/sh64: New testsuite.
@
text
@d36 6
d44 1
a44 1
      {"-relax -isa shcompact" "n/a" "n/a" "n/a"} "-mshelf32" 0}
d46 1
a46 1
      {"-relax -isa shcompact" "n/a" "n/a" "n/a"} "-relax -mshelf32" 1}
d48 1
a48 1
      {"-relax -isa shcompact" "-isa shcompact" "n/a" "n/a"} "-relax -mshelf32" 1}
d50 1
a50 1
      {"-relax -isa shcompact" "-isa shmedia -no-mix" "n/a" "n/a"} "-relax -mshelf32" 0}
d52 1
a52 1
      {"-relax -isa shcompact" "n/a" "-isa shcompact" "n/a"} "-relax -mshelf32" 0}
d54 1
a54 1
      {"-relax -isa shcompact" "n/a" "n/a" ""} "-relax -mshelf32" 0}
d65 1
d76 1
a76 1
	set ld_options [lindex $testentry 2]
@

