head	1.13;
access;
symbols
	binutils-2_24-branch:1.13.0.10
	binutils-2_24-branchpoint:1.13
	binutils-2_21_1:1.13
	binutils-2_23_2:1.13
	binutils-2_23_1:1.13
	binutils-2_23:1.13
	binutils-2_23-branch:1.13.0.8
	binutils-2_23-branchpoint:1.13
	binutils-2_22_branch:1.13.0.6
	binutils-2_22:1.13
	binutils-2_22-branch:1.13.0.4
	binutils-2_22-branchpoint:1.13
	binutils-2_21:1.13
	binutils-2_21-branch:1.13.0.2
	binutils-2_21-branchpoint:1.13
	binutils-2_20_1:1.12
	binutils-2_20:1.12
	binutils-arc-20081103-branch:1.12.0.10
	binutils-arc-20081103-branchpoint:1.12
	binutils-2_20-branch:1.12.0.8
	binutils-2_20-branchpoint:1.12
	dje-cgen-play1-branch:1.12.0.6
	dje-cgen-play1-branchpoint:1.12
	arc-20081103-branch:1.12.0.4
	arc-20081103-branchpoint:1.12
	binutils-2_19_1:1.12
	binutils-2_19:1.12
	binutils-2_19-branch:1.12.0.2
	binutils-2_19-branchpoint:1.12
	binutils-2_18:1.11
	binutils-2_18-branch:1.11.0.2
	binutils-2_18-branchpoint:1.11
	binutils-csl-coldfire-4_1-32:1.8
	binutils-csl-sourcerygxx-4_1-32:1.8
	binutils-csl-innovasic-fido-3_4_4-33:1.8
	binutils-csl-sourcerygxx-3_4_4-32:1.5
	binutils-csl-coldfire-4_1-30:1.8
	binutils-csl-sourcerygxx-4_1-30:1.8
	binutils-csl-coldfire-4_1-28:1.8
	binutils-csl-sourcerygxx-4_1-29:1.8
	binutils-csl-sourcerygxx-4_1-28:1.8
	binutils-csl-arm-2006q3-27:1.8
	binutils-csl-sourcerygxx-4_1-27:1.8
	binutils-csl-arm-2006q3-26:1.8
	binutils-csl-sourcerygxx-4_1-26:1.8
	binutils-csl-sourcerygxx-4_1-25:1.8
	binutils-csl-sourcerygxx-4_1-24:1.8
	binutils-csl-sourcerygxx-4_1-23:1.8
	binutils-csl-sourcerygxx-4_1-21:1.8
	binutils-csl-arm-2006q3-21:1.8
	binutils-csl-sourcerygxx-4_1-22:1.8
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.8
	binutils-csl-sourcerygxx-4_1-20:1.8
	binutils-csl-arm-2006q3-19:1.8
	binutils-csl-sourcerygxx-4_1-19:1.8
	binutils-csl-sourcerygxx-4_1-18:1.8
	binutils-csl-renesas-4_1-9:1.8
	binutils-csl-sourcerygxx-3_4_4-25:1.5
	binutils-csl-renesas-4_1-8:1.8
	binutils-csl-renesas-4_1-7:1.8
	binutils-csl-renesas-4_1-6:1.8
	binutils-csl-sourcerygxx-4_1-17:1.8
	binutils-csl-sourcerygxx-4_1-14:1.8
	binutils-csl-sourcerygxx-4_1-15:1.8
	binutils-csl-sourcerygxx-4_1-13:1.8
	binutils-2_17:1.8
	binutils-csl-sourcerygxx-4_1-12:1.8
	binutils-csl-sourcerygxx-3_4_4-21:1.8
	binutils-csl-wrs-linux-3_4_4-24:1.5
	binutils-csl-wrs-linux-3_4_4-23:1.5
	binutils-csl-sourcerygxx-4_1-9:1.8
	binutils-csl-sourcerygxx-4_1-8:1.8
	binutils-csl-sourcerygxx-4_1-7:1.8
	binutils-csl-arm-2006q1-6:1.8
	binutils-csl-sourcerygxx-4_1-6:1.8
	binutils-csl-wrs-linux-3_4_4-22:1.5
	binutils-csl-coldfire-4_1-11:1.8
	binutils-csl-sourcerygxx-3_4_4-19:1.8
	binutils-csl-coldfire-4_1-10:1.8
	binutils-csl-sourcerygxx-4_1-5:1.8
	binutils-csl-sourcerygxx-4_1-4:1.8
	binutils-csl-wrs-linux-3_4_4-21:1.5
	binutils-csl-morpho-4_1-4:1.8
	binutils-csl-sourcerygxx-3_4_4-17:1.8
	binutils-csl-wrs-linux-3_4_4-20:1.5
	binutils-2_17-branch:1.8.0.4
	binutils-2_17-branchpoint:1.8
	binutils-csl-2_17-branch:1.8.0.2
	binutils-csl-2_17-branchpoint:1.8
	binutils-csl-gxxpro-3_4-branch:1.5.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.5
	binutils-2_16_1:1.5
	binutils-csl-arm-2005q1b:1.5
	binutils-2_16:1.5
	binutils-csl-arm-2005q1a:1.5
	binutils-csl-arm-2005q1-branch:1.5.0.4
	binutils-csl-arm-2005q1-branchpoint:1.5
	binutils-2_16-branch:1.5.0.2
	binutils-2_16-branchpoint:1.5
	csl-arm-2004-q3d:1.2
	csl-arm-2004-q3:1.2
	binutils-2_15:1.1.2.2
	csl-arm-2004-q1a:1.2
	csl-arm-2004-q1:1.2
	binutils_latest_snapshot:1.13
	binutils-2_15-branch:1.1.0.2;
locks; strict;
comment	@# @;


1.13
date	2009.10.17.17.18.28;	author arnoldm;	state Exp;
branches;
next	1.12;

1.12
date	2007.11.04.23.49.09;	author dannysmith;	state Exp;
branches;
next	1.11;

1.11
date	2007.07.06.14.09.45;	author nickc;	state Exp;
branches;
next	1.10;

1.10
date	2007.01.08.17.21.50;	author nickc;	state Exp;
branches;
next	1.9;

1.9
date	2006.09.20.11.35.10;	author nickc;	state Exp;
branches;
next	1.8;

1.8
date	2005.10.25.17.40.12;	author nickc;	state Exp;
branches;
next	1.7;

1.7
date	2005.06.01.04.04.19;	author zack;	state Exp;
branches;
next	1.6;

1.6
date	2005.05.12.07.32.08;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	2005.03.03.11.52.09;	author amodra;	state Exp;
branches;
next	1.4;

1.4
date	2005.02.21.08.18.49;	author amodra;	state Exp;
branches;
next	1.3;

1.3
date	2005.02.17.20.57.01;	author zack;	state Exp;
branches;
next	1.2;

1.2
date	2004.04.08.00.51.37;	author amodra;	state Exp;
branches;
next	1.1;

1.1
date	2004.02.20.15.31.10;	author nathan;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2004.02.20.15.32.13;	author nathan;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2004.04.08.12.41.56;	author amodra;	state Exp;
branches;
next	;


desc
@@


1.13
log
@* coff-z80.c (z80coff_vec): Allow sections to be of type SEC_CODE or SEC_DATA
* ld-scripts/align.exp: Remove xfails for z80-*-coff
@
text
@# Test ALIGN in a linker script.
# By Nathan Sidwell, CodeSourcery LLC
#   Copyright 2004, 2005, 2006, 2007
#   Free Software Foundation, Inc.
#
# This file is part of the GNU Binutils.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
# MA 02110-1301, USA.

if [istarget "rs6000-*-aix*"] {
    # Target maps .text and .data to other sections.
    return
}

set testname "align1"

if ![ld_assemble $as $srcdir/$subdir/align.s tmpdir/align.o] {
    unresolved $testname
    return
}

# mingw on x86_64 targets need to set the image base to 0 to avoid auto image-basing.
global LDFLAGS
set saved_LDFLAGS "$LDFLAGS"
if [istarget "x86_64-*-mingw*"] then {
  set LDFLAGS "$LDFLAGS --image-base 0"
}

if ![ld_simple_link $ld tmpdir/align "$LDFLAGS -T $srcdir/$subdir/align.t tmpdir/align.o"] {
    fail $testname
} else {
    pass $testname
}

if ![is_aout_format] {
    run_dump_test align2a
    run_dump_test align2b
}
run_dump_test align2c
set LDFLAGS "$saved_LDFLAGS"
@


1.12
log
@include
	* coff/pe.h (COFF_ENCODE_ALIGNMENT) Define.

gas
	* read.c (ALIGN_LIMIT): Rename to ...
	(TC_ALIGN_LIMIT): Guard against prior definition.
	* config/tc-i386.h (TC_ALIGN_LIMIT)[TE_PE]: Define.

bfd
	* pe-i386.c (COFF_SECTION_ALIGNMENT_ENTRIES): Let .data, .text
	 and .bss section use the default.
	* pei-i386.c (COFF_SECTION_ALIGNMENT_ENTRIES): Likewise.

ld/testsuite
	* ld-scripts/align.exp: Enable for PECOFF.
	* ld-scripts/alignof.exp: Likewise.
@
text
@a48 3
    # The z80-coff port defaults to a "binary" like output
    # file format which does not include a data section.
    setup_xfail "z80-*-coff"
a49 1
    setup_xfail "z80-*-coff"
@


1.11
log
@Update sources to GPLv3
@
text
@a34 1
# Doesn't work on PECOFF, appears to be a genuine bug.
a39 5
} else {
  if [is_pecoff_format] {
  global target_triplet
  setup_xfail $target_triplet
  }
@


1.10
log
@Renamed target x86_64-*-mingw64 to x86_64-*-mingw*.
@
text
@d3 1
a3 1
#   Copyright 2004, 2005, 2006
d6 3
a8 1
# This file is free software; you can redistribute it and/or modify
d10 1
a10 1
# the Free Software Foundation; either version 2 of the License, or
d12 1
a12 1
# 
d17 1
a17 1
# 
d20 2
a21 1
# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.
@


1.9
log
@Add x86_64-mingw64 target
@
text
@d33 1
a33 1
# mingw64 targets need to set the image base to 0 to avoid auto image-basing.
d36 1
a36 1
if [istarget "*-*-mingw64*"] then {
@


1.8
log
@Add support for the Z80 processor family
@
text
@d3 1
a3 1
#   Copyright 2004, 2005
d32 8
a39 2
# Doesn't work on PECOFF, appears to be a genuine bug
if [is_pecoff_format] {
d42 1
d45 1
a45 1
if ![ld_simple_link $ld tmpdir/align "-T $srcdir/$subdir/align.t tmpdir/align.o"] {
d60 1
@


1.7
log
@ld:
	* ldlang.c (entry_symbol_default): New file-scope global.
	(lang_finish): Use it, not a hardwired "start".
	(lang_default_entry): Set it.
	* ldlang.h: Declare lang_default_entry.
	* emultempl/beos.em, emultempl/pe.em: Use lang_default_entry,
	not lang_add_entry, to override default entry point symbol.

ld/testsuite:
	* ld-scripts/align.exp: Mark align1 XFAIL on PECOFF targets.
	* ld-scripts/data.exp: Mark data UNSUPPORTED on a.out targets.
	* ld-scripts/provide.exp, ld-scripts/size.exp: Mark all tests
	UNSUPPORTED on a.out targets.  Tidy.
@
text
@d45 3
d49 1
@


1.6
log
@Update FSF addresses
@
text
@d32 6
@


1.5
log
@update copyright dates
@
text
@d18 1
a18 1
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
@


1.4
log
@	* ld-elf/warn1.d: Specify -Ttext.
	* ld-scripts/align.exp (align2a, align2b: Don't run on aout targets.
	* ld-scripts/align2.t: Discard all but .text and .data.
	* ld-scripts/align2a.d: Accept non-readonly for coff.
	* ld-scripts/align2b.d: Likewise.
	* lib/ld-lib.exp (is_aout_format): New function.
@
text
@d3 1
a3 1
#   Copyright 2004
@


1.3
log
@	* ldexp.c (assigning_to_dot): New global flag.
	(fold_name): If assigning_to_dot is true, object immediately to
	an undefined symbol.
	(exp_fold_tree): Set and clear assigning_to_dot around the
	recursive call to exp_fold_tree to process the right-hand side
	of an assignment to the location counter.
testsuite:
	* ld-scripts/align.exp: Rename existing "ALIGN" test to "align1".
	Add dump tests "align2a", "align2b", "align2c".
	* ld-scripts/align2.t, ld-scripts/align2a.s, ld-scripts/align2a.d
	* ld-scripts/align2b.s, ld-scripts/align2b.d
	* ld-scripts/align2c.s, ld-scripts/align2c.d: New files.
@
text
@d38 4
a41 2
run_dump_test align2a
run_dump_test align2b
@


1.2
log
@	* ld-scripts/align.exp: Don't run on aix.
	* ld-scripts/assert.s: Remove comment.
	* ld-scripts/data.s: Likewise.
	* ld-scripts/data.t: Set start address to allow for aout headers.
	Make first LONG pc-relative.
	* ld-scripts/data.d: Update.
	* ld-scripts/defined2.d: Allow other random syms.
	* ld-scripts/defined3.d: Likewise.
	* ld-scripts/provide-1.s: Pad section.
	* ld-scripts/provide-1.t: Set .data address and align.
	* ld-scripts/provide-1.d: Update.
	* ld-scripts/provide-2.s: Pad section.
	* ld-scripts/provide-2.d: Allow random trailing syms.
	* ld-scripts/provide-3.s: Pad section.
	* ld-scripts/provide-3.d: Fix typos.
	* ld-scripts/provide.exp: Don't run on aix.
	* ld-scripts/size-1.s: Simplify test.
	* ld-scripts/size-1.t: Rewrite.
	* ld-scripts/size-1.d: Update.
	* ld-scripts/size-2.s: Simplify.
	* ld-scripts/size-2.t: Set start address.  Set exe flag on image.
	* ld-scripts/size-2.d: Update.
	* ld-scripts/size.exp: Don't run on aix.  Run size-2 on all elf
	targets except mips.
@
text
@d25 1
a25 1
set testname "ALIGN"
d37 4
@


1.1
log
@	* ldgram.y (exp): Add two operand ALIGN.
	* ldexp.c (fold_binary): Add ALIGN_K case.
	* ld.texinfo (ALIGN): Document two operand version.
	* ld-scripts/align.{s,t,exp}: New.
@
text
@d20 5
@


1.1.2.1
log
@	* ldgram.y (exp): Add two operand ALIGN.
	* ldexp.c (fold_binary): Add ALIGN_K case.
	* ld.texinfo (ALIGN): Document two operand version.
	* ld-scripts/align.{s,t,exp}: New.
@
text
@@


1.1.2.2
log
@Merge from mainline
@
text
@a19 5
if [istarget "rs6000-*-aix*"] {
    # Target maps .text and .data to other sections.
    return
}

@


