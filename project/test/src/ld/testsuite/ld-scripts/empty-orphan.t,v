head	1.3;
access;
symbols
	binutils-2_24-branch:1.3.0.22
	binutils-2_24-branchpoint:1.3
	binutils-2_21_1:1.3
	binutils-2_23_2:1.3
	binutils-2_23_1:1.3
	binutils-2_23:1.3
	binutils-2_23-branch:1.3.0.20
	binutils-2_23-branchpoint:1.3
	binutils-2_22_branch:1.3.0.18
	binutils-2_22:1.3
	binutils-2_22-branch:1.3.0.16
	binutils-2_22-branchpoint:1.3
	binutils-2_21:1.3
	binutils-2_21-branch:1.3.0.14
	binutils-2_21-branchpoint:1.3
	binutils-2_20_1:1.3
	binutils-2_20:1.3
	binutils-arc-20081103-branch:1.3.0.12
	binutils-arc-20081103-branchpoint:1.3
	binutils-2_20-branch:1.3.0.10
	binutils-2_20-branchpoint:1.3
	dje-cgen-play1-branch:1.3.0.8
	dje-cgen-play1-branchpoint:1.3
	arc-20081103-branch:1.3.0.6
	arc-20081103-branchpoint:1.3
	binutils-2_19_1:1.3
	binutils-2_19:1.3
	binutils-2_19-branch:1.3.0.4
	binutils-2_19-branchpoint:1.3
	binutils-2_18:1.3
	binutils-2_18-branch:1.3.0.2
	binutils-2_18-branchpoint:1.3
	binutils-csl-coldfire-4_1-32:1.1
	binutils-csl-sourcerygxx-4_1-32:1.1
	binutils-csl-innovasic-fido-3_4_4-33:1.1
	binutils-csl-sourcerygxx-3_4_4-32:1.1.2.1
	binutils-csl-coldfire-4_1-30:1.1
	binutils-csl-sourcerygxx-4_1-30:1.1
	binutils-csl-coldfire-4_1-28:1.1
	binutils-csl-sourcerygxx-4_1-29:1.1
	binutils-csl-sourcerygxx-4_1-28:1.1
	binutils-csl-arm-2006q3-27:1.1
	binutils-csl-sourcerygxx-4_1-27:1.1
	binutils-csl-arm-2006q3-26:1.1
	binutils-csl-sourcerygxx-4_1-26:1.1
	binutils-csl-sourcerygxx-4_1-25:1.1
	binutils-csl-sourcerygxx-4_1-24:1.1
	binutils-csl-sourcerygxx-4_1-23:1.1
	binutils-csl-sourcerygxx-4_1-21:1.1
	binutils-csl-arm-2006q3-21:1.1
	binutils-csl-sourcerygxx-4_1-22:1.1
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.1
	binutils-csl-sourcerygxx-4_1-20:1.1
	binutils-csl-arm-2006q3-19:1.1
	binutils-csl-sourcerygxx-4_1-19:1.1
	binutils-csl-sourcerygxx-4_1-18:1.1
	binutils-csl-renesas-4_1-9:1.1
	binutils-csl-sourcerygxx-3_4_4-25:1.1.2.1
	binutils-csl-renesas-4_1-8:1.1
	binutils-csl-renesas-4_1-7:1.1
	binutils-csl-renesas-4_1-6:1.1
	binutils-csl-sourcerygxx-4_1-17:1.1
	binutils-csl-sourcerygxx-4_1-14:1.1
	binutils-csl-sourcerygxx-4_1-15:1.1
	binutils-csl-sourcerygxx-4_1-13:1.1
	binutils-2_17:1.1
	binutils-csl-sourcerygxx-4_1-12:1.1
	binutils-csl-sourcerygxx-3_4_4-21:1.1
	binutils-csl-wrs-linux-3_4_4-24:1.1.2.1
	binutils-csl-wrs-linux-3_4_4-23:1.1.2.1
	binutils-csl-sourcerygxx-4_1-9:1.1
	binutils-csl-sourcerygxx-4_1-8:1.1
	binutils-csl-sourcerygxx-4_1-7:1.1
	binutils-csl-arm-2006q1-6:1.1
	binutils-csl-sourcerygxx-4_1-6:1.1
	binutils-csl-wrs-linux-3_4_4-22:1.1.2.1
	binutils-csl-coldfire-4_1-11:1.1
	binutils-csl-sourcerygxx-3_4_4-19:1.1
	binutils-csl-coldfire-4_1-10:1.1
	binutils-csl-sourcerygxx-4_1-5:1.1
	binutils-csl-sourcerygxx-4_1-4:1.1
	binutils-csl-wrs-linux-3_4_4-21:1.1.2.1
	binutils-csl-morpho-4_1-4:1.1
	binutils-csl-sourcerygxx-3_4_4-17:1.1
	binutils-csl-wrs-linux-3_4_4-20:1.1.2.1
	binutils-2_17-branch:1.1.0.6
	binutils-2_17-branchpoint:1.1
	binutils-csl-2_17-branch:1.1.0.4
	binutils-csl-2_17-branchpoint:1.1
	binutils-csl-gxxpro-3_4-branch:1.1.2.1.0.4
	binutils-csl-gxxpro-3_4-branchpoint:1.1.2.1
	binutils-2_16_1:1.1.2.1
	binutils-csl-arm-2005q1b:1.1.2.1
	binutils-2_16:1.1.2.1
	binutils-csl-arm-2005q1a:1.1.2.1
	binutils-csl-arm-2005q1-branch:1.1.2.1.0.2
	binutils-csl-arm-2005q1-branchpoint:1.1.2.1
	binutils_latest_snapshot:1.3
	binutils-2_16-branch:1.1.0.2;
locks; strict;
comment	@# @;


1.3
date	2006.10.17.13.41.48;	author amodra;	state Exp;
branches;
next	1.2;

1.2
date	2006.05.19.06.10.03;	author amodra;	state Exp;
branches;
next	1.1;

1.1
date	2005.03.17.16.20.39;	author bwilson;	state Exp;
branches
	1.1.2.1
	1.1.6.1;
next	;

1.1.2.1
date	2005.03.17.16.37.40;	author bwilson;	state Exp;
branches;
next	;

1.1.6.1
date	2006.07.04.13.29.24;	author drow;	state Exp;
branches;
next	;


desc
@@


1.3
log
@bfd/
	* elf-bfd.h (struct elf_link_hash_table): Reorder.  Add
	text_index_section and data_index_section.
	(struct elf_backend_data): Add elf_backend_init_index_section.
	(_bfd_elf_init_1_index_section): Declare.
	(_bfd_elf_init_2_index_sections): Declare.
	* elfxx-target.h (elf_backend_init_index_section): Define.
	(elfNN_bed): Init new field.
	* elflink.c (_bfd_elf_link_omit_section_dynsym): Keep first tls
	section and text_index_section plus data_index_section.
	(_bfd_elf_link_renumber_dynsyms): Clear dynindx on omitted sections.
	(_bfd_elf_init_1_index_section): New function.
	(_bfd_elf_init_2_index_sections): New function.
	(bfd_elf_size_dynsym_hash_dynstr): Call elf_backend_init_index_section.
	(elf_link_input_bfd): When emitting relocs, use text_index_section
	and data_index_section for removed sections.
	* elf-m10300.c (elf_backend_omit_section_dynsym): Define.
	* elf32-i386.c: Likewise.
	* elf32-m32r.c: Likewise.
	* elf32-sh.c: Likewise.
	* elf32-xstormy16.c: Likewise.
	* elf32-xtensa.c: Likewise.
	* elf64-alpha.c: Likewise.
	* elf64-hppa.c: Likewise.
	* elf64-mmix.c: Likewise.
	* elf64-sh64.c: Likewise.
	* elfxx-ia64.c: Likewise.
	* elf32-arm.c (elf32_arm_final_link_relocate): Use text_index_section
	and data_index_section sym for relocs against sections with no dynamic
	section sym.
	(elf_backend_init_index_section): Define.
	* elf32-cris.c: Similarly.
	* elf32-hppa.c: Similarly.
	* elf32-i370.c: Similarly.
	* elf32-m68k.c: Similarly.
	* elf32-mips.c: Similarly.
	* elf32-ppc.c: Similarly.
	* elf32-s390.c: Similarly.
	* elf32-sparc.c: Similarly.
	* elf32-vax.c: Similarly.
	* elf64-mips.c: Similarly.
	* elf64-ppc.c: Similarly.
	* elf64-s390.c: Similarly.
	* elf64-sparc.c: Similarly.
	* elf64-x86-64.c: Similarly.
	* elfn32-mips.c: Similarly.
	* elfxx-mips.c: Similarly.
	* elfxx-sparc.c: Similarly.
	* linker.c (fix_syms): Base symbols in removed sections on
	previous section in preference to using absolute section.

ld/
	* ldlang.c (strip_excluded_output_sections): Do strip sections
	that define syms, but don't ignore them.
	* ld.texinfo (Output Section Discarding): Revise.
	* emultempl/armcoff.em (gld${EMULATION_NAME}_finish): Always call
	finish_default.

ld/testsuite/
	Update for section sym changes.
@
text
@MEMORY
{
  default_mem : ORIGIN = 0x0, LENGTH = 0x100000
  text_mem : ORIGIN = 0x60000000, LENGTH = 0x100
  data_mem : ORIGIN = 0x70000000, LENGTH = 0x100
}

PHDRS
{
  default_phdr PT_LOAD;
  text_phdr PT_LOAD;
  data_phdr PT_LOAD;
}

SECTIONS
{
   .text : { *(.text) } > text_mem : text_phdr
   .data : { *(.data) } > data_mem : data_phdr
   .bss : { *(.bss) } > data_mem : data_phdr
   /DISCARD/ : { *(.reginfo) *(.glue*) }
   /* .orphan_data is an orphan */
}
@


1.2
log
@	* ld-scripts/empty-orphan.t: Discard .reginfo.
	* ld-scripts/empty-orphan.d: Update.
@
text
@d20 1
a20 1
   /DISCARD/ : { *(.reginfo) }
@


1.1
log
@ld/ChangeLog:
        * ldlang.c (IGNORE_SECTION): Remove check for zero size.
        (lang_check_section_addresses): Ignore zero size sections here.
ld/testsuite/ChangeLog:
        * ld-scripts/empty-orphan.d, ld-scripts/empty-orphan.exp,
        ld-scripts/empty-orphan.s, ld-scripts/emtpy-orphan.t: New test.
@
text
@d20 1
@


1.1.6.1
log
@ld/
	Backport:
	2006-05-19  Alan Modra  <amodra@@bigpond.net.au>
	* ldlang.c (lang_size_sections_1): Don't check mem regions for
	os->ignored sections.
ld/testsuite/
	Backport:
	2006-05-19  Alan Modra  <amodra@@bigpond.net.au>
	* ld-scripts/empty-orphan.d: Update again.

	* ld-scripts/empty-orphan.t: Discard .reginfo.
	* ld-scripts/empty-orphan.d: Update.
@
text
@a19 1
   /DISCARD/ : { *(.reginfo) }
@


1.1.2.1
log
@ld/ChangeLog:
        * ldlang.c (IGNORE_SECTION): Remove check for zero size.
        (lang_check_section_addresses): Ignore zero size sections here.
ld/testsuite/ChangeLog:
        * ld-scripts/empty-orphan.d, ld-scripts/empty-orphan.exp,
        ld-scripts/empty-orphan.s, ld-scripts/emtpy-orphan.t: New test.
@
text
@@

