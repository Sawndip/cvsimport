head	1.4;
access;
symbols
	binutils-2_24-branch:1.4.0.2
	binutils-2_24-branchpoint:1.4
	binutils-2_21_1:1.3
	binutils-2_23_2:1.3
	binutils-2_23_1:1.3
	binutils-2_23:1.3
	binutils-2_23-branch:1.3.0.8
	binutils-2_23-branchpoint:1.3
	binutils-2_22_branch:1.3.0.6
	binutils-2_22:1.3
	binutils-2_22-branch:1.3.0.4
	binutils-2_22-branchpoint:1.3
	binutils-2_21:1.3
	binutils-2_21-branch:1.3.0.2
	binutils-2_21-branchpoint:1.3
	binutils-2_20_1:1.2
	binutils-2_20:1.2
	binutils-arc-20081103-branch:1.2.0.10
	binutils-arc-20081103-branchpoint:1.2
	binutils-2_20-branch:1.2.0.8
	binutils-2_20-branchpoint:1.2
	dje-cgen-play1-branch:1.2.0.6
	dje-cgen-play1-branchpoint:1.2
	arc-20081103-branch:1.2.0.4
	arc-20081103-branchpoint:1.2
	binutils-2_19_1:1.2
	binutils-2_19:1.2
	binutils-2_19-branch:1.2.0.2
	binutils-2_19-branchpoint:1.2
	binutils_latest_snapshot:1.4;
locks; strict;
comment	@# @;


1.4
date	2013.08.26.19.27.24;	author roland;	state Exp;
branches;
next	1.3;

1.3
date	2009.11.18.16.37.56;	author nickc;	state Exp;
branches
	1.3.8.1;
next	1.2;

1.2
date	2008.05.02.15.11.49;	author hjl;	state Exp;
branches;
next	1.1;

1.1
date	2008.04.28.12.45.34;	author nathan;	state Exp;
branches;
next	;

1.3.8.1
date	2013.08.26.19.28.36;	author roland;	state Exp;
branches;
next	;


desc
@@


1.4
log
@bfd/
	* elf-nacl.c (nacl_modify_segment_map): Fix logic reordering the
	elf_segment_map list.  If an executable segment is page-aligned
	but does not end with a full page, then append a fake section into
	the segment map entry that pads out the page.
	(nacl_final_write_processing): New function.  Write the code fill
	laid out in nacl_modify_segment_map.
	* elf-nacl.h: Declare it.
	* elf32-arm.c (elf32_arm_nacl_final_write_processing): New function.
	(elf_backend_final_write_processing): Define it for NaCl backend.
	* elf32-i386.c (elf_backend_final_write_processing): Likewise.
	* elf64-x86-64.c (elf_backend_final_write_processing): Likewise.

	* elf-nacl.c (segment_eligible_for_headers): Rename MAXPAGESIZE
	parameter to MINPAGESIZE.
	(nacl_modify_segment_map): Use minpagesize instead of maxpagesize.

	* elf32-arm.c (ELF_MINPAGESIZE, ELF_COMMONPAGESIZE): Set to
	0x10000	for NaCl targets.

ld/testsuite/
	* ld-x86-64/ilp32-4-nacl.d: Loosen .shstrtab line regexp to match
	any file offset.
	* ld-x86-64/tlsbin-nacl.rd: Update expected code segment PT_LOAD.
	* ld-x86-64/tlsbindesc-nacl.rd: Likewise.
	* ld-scripts/rgn-at3.d: XFAIL for *-*-nacl* targets.
	* ld-scripts/rgn-over8-ok.d: Likewise.
@
text
@# name: rgn-over8
# source: rgn-over8.s
# ld: -T rgn-over8.t
# objdump: -w -h
# xfail: rx-*-* *-*-nacl*
#   FAILS on the RX because the linker has to set LMA == VMA for the
#   Renesas loader.
#   FAILs on NaCl targets because the linker extends the first segment
#   to fill out the page, making its p_vaddr+p_memsz cover the sh_addr
#   of .bss too, which makes BFD compute its LMA from the p_paddr of the
#   text segment.

.*:     file format .*

Sections:
Idx +Name +Size +VMA +LMA +File off +Algn +Flags
  0 .text         0+0000400  0+0000000  0+0000000  [0-9a-f]+  2\*\*[0-9]+  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0+0000400  0+0001000  0+0000400  [0-9a-f]+  2\*\*[0-9]+  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0+0000400  0+0001400  0+0000800  [0-9a-f]+  2\*\*[0-9]+  ALLOC
@


1.3
log
@        * ld-elf/extract-symbol-1sec.d: Expect to fail for the RX target.
        * ld-scripts/overlay-size.d: Likewise.
        * ld-scripts/rgn-at1.d: Likewise.
        * ld-scripts/rgn-at2.d: Likewise.
        * ld-scripts/rgn-at3.d: Likewise.
        * ld-scripts/rgn-at4.d: Likewise.
        * ld-scripts/rgn-over8-ok.d: Likewise.
@
text
@d5 1
a5 1
# xfail: rx-*-*
d8 4
@


1.3.8.1
log
@bfd/
	* elf-nacl.c (nacl_modify_segment_map): Fix logic reordering the
	elf_segment_map list.  If an executable segment is page-aligned
	but does not end with a full page, then append a fake section into
	the segment map entry that pads out the page.
	(nacl_final_write_processing): New function.  Write the code fill
	laid out in nacl_modify_segment_map.
	* elf-nacl.h: Declare it.
	* elf32-arm.c (elf32_arm_nacl_final_write_processing): New function.
	(elf_backend_final_write_processing): Define it for NaCl backend.
	* elf32-i386.c (elf_backend_final_write_processing): Likewise.
	* elf64-x86-64.c (elf_backend_final_write_processing): Likewise.

	* elf-nacl.c (segment_eligible_for_headers): Rename MAXPAGESIZE
	parameter to MINPAGESIZE.
	(nacl_modify_segment_map): Use minpagesize instead of maxpagesize.

	* elf32-arm.c (ELF_MINPAGESIZE, ELF_COMMONPAGESIZE): Set to
	0x10000	for NaCl targets.

ld/testsuite/
	* ld-x86-64/ilp32-4-nacl.d: Loosen .shstrtab line regexp to match
	any file offset.
	* ld-x86-64/tlsbin-nacl.rd: Update expected code segment PT_LOAD.
	* ld-x86-64/tlsbindesc-nacl.rd: Likewise.
	* ld-scripts/rgn-at3.d: XFAIL for *-*-nacl* targets.
	* ld-scripts/rgn-over8-ok.d: Likewise.
@
text
@d5 1
a5 1
# xfail: rx-*-* *-*-nacl*
a7 4
#   FAILs on NaCl targets because the linker extends the first segment
#   to fill out the page, making its p_vaddr+p_memsz cover the sh_addr
#   of .bss too, which makes BFD compute its LMA from the p_paddr of the
#   text segment.
@


1.2
log
@2008-05-02  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/6475
	* ld-scripts/rgn-over8-ok.d: Accept any alignment.
@
text
@d5 3
@


1.1
log
@ld/
	* ldlang.c (lang_size_sections_1): Don't check LMA overflow on
	non-load sections.
ld/testsuite/
	* ld-scripts/rgn-over.exp: Allow -ok file names to pass.
	* ld-scripts/rgn-over8.s: New.
	* ld-scripts/rgn-over8.t: New.
	* ld-scripts/rgn-over8-ok.d: New.
@
text
@d10 3
a12 3
  0 .text         0+0000400  0+0000000  0+0000000  [0-9a-f]+  2\*\*0  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0+0000400  0+0001000  0+0000400  [0-9a-f]+  2\*\*0  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0+0000400  0+0001400  0+0000800  [0-9a-f]+  2\*\*0  ALLOC
@

