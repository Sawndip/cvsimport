head	1.3;
access;
symbols
	binutils-2_24-branch:1.3.0.4
	binutils-2_24-branchpoint:1.3
	binutils-2_21_1:1.1
	binutils-2_23_2:1.3
	binutils-2_23_1:1.3
	binutils-2_23:1.3
	binutils-2_23-branch:1.3.0.2
	binutils-2_23-branchpoint:1.3
	binutils-2_22_branch:1.1.0.36
	binutils-2_22:1.1
	binutils-2_22-branch:1.1.0.34
	binutils-2_22-branchpoint:1.1
	binutils-2_21:1.1
	binutils-2_21-branch:1.1.0.32
	binutils-2_21-branchpoint:1.1
	binutils-2_20_1:1.1
	binutils-2_20:1.1
	binutils-arc-20081103-branch:1.1.0.30
	binutils-arc-20081103-branchpoint:1.1
	binutils-2_20-branch:1.1.0.28
	binutils-2_20-branchpoint:1.1
	dje-cgen-play1-branch:1.1.0.26
	dje-cgen-play1-branchpoint:1.1
	arc-20081103-branch:1.1.0.24
	arc-20081103-branchpoint:1.1
	binutils-2_19_1:1.1
	binutils-2_19:1.1
	binutils-2_19-branch:1.1.0.22
	binutils-2_19-branchpoint:1.1
	binutils-2_18:1.1
	binutils-2_18-branch:1.1.0.20
	binutils-2_18-branchpoint:1.1
	binutils-csl-coldfire-4_1-32:1.1
	binutils-csl-sourcerygxx-4_1-32:1.1
	binutils-csl-innovasic-fido-3_4_4-33:1.1
	binutils-csl-sourcerygxx-3_4_4-32:1.1
	binutils-csl-coldfire-4_1-30:1.1
	binutils-csl-sourcerygxx-4_1-30:1.1
	binutils-csl-coldfire-4_1-28:1.1
	binutils-csl-sourcerygxx-4_1-29:1.1
	binutils-csl-sourcerygxx-4_1-28:1.1
	binutils-csl-arm-2006q3-27:1.1
	binutils-csl-sourcerygxx-4_1-27:1.1
	binutils-csl-arm-2006q3-26:1.1
	binutils-csl-sourcerygxx-4_1-26:1.1
	binutils-csl-sourcerygxx-4_1-25:1.1
	binutils-csl-sourcerygxx-4_1-24:1.1
	binutils-csl-sourcerygxx-4_1-23:1.1
	binutils-csl-sourcerygxx-4_1-21:1.1
	binutils-csl-arm-2006q3-21:1.1
	binutils-csl-sourcerygxx-4_1-22:1.1
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.1
	binutils-csl-sourcerygxx-4_1-20:1.1
	binutils-csl-arm-2006q3-19:1.1
	binutils-csl-sourcerygxx-4_1-19:1.1
	binutils-csl-sourcerygxx-4_1-18:1.1
	binutils-csl-renesas-4_1-9:1.1
	binutils-csl-sourcerygxx-3_4_4-25:1.1
	binutils-csl-renesas-4_1-8:1.1
	binutils-csl-renesas-4_1-7:1.1
	binutils-csl-renesas-4_1-6:1.1
	binutils-csl-sourcerygxx-4_1-17:1.1
	binutils-csl-sourcerygxx-4_1-14:1.1
	binutils-csl-sourcerygxx-4_1-15:1.1
	binutils-csl-sourcerygxx-4_1-13:1.1
	binutils-2_17:1.1
	binutils-csl-sourcerygxx-4_1-12:1.1
	binutils-csl-sourcerygxx-3_4_4-21:1.1
	binutils-csl-wrs-linux-3_4_4-24:1.1
	binutils-csl-wrs-linux-3_4_4-23:1.1
	binutils-csl-sourcerygxx-4_1-9:1.1
	binutils-csl-sourcerygxx-4_1-8:1.1
	binutils-csl-sourcerygxx-4_1-7:1.1
	binutils-csl-arm-2006q1-6:1.1
	binutils-csl-sourcerygxx-4_1-6:1.1
	binutils-csl-wrs-linux-3_4_4-22:1.1
	binutils-csl-coldfire-4_1-11:1.1
	binutils-csl-sourcerygxx-3_4_4-19:1.1
	binutils-csl-coldfire-4_1-10:1.1
	binutils-csl-sourcerygxx-4_1-5:1.1
	binutils-csl-sourcerygxx-4_1-4:1.1
	binutils-csl-wrs-linux-3_4_4-21:1.1
	binutils-csl-morpho-4_1-4:1.1
	binutils-csl-sourcerygxx-3_4_4-17:1.1
	binutils-csl-wrs-linux-3_4_4-20:1.1
	binutils-2_17-branch:1.1.0.18
	binutils-2_17-branchpoint:1.1
	binutils-csl-2_17-branch:1.1.0.16
	binutils-csl-2_17-branchpoint:1.1
	binutils-csl-gxxpro-3_4-branch:1.1.0.14
	binutils-csl-gxxpro-3_4-branchpoint:1.1
	binutils-2_16_1:1.1
	binutils-csl-arm-2005q1b:1.1
	binutils-2_16:1.1
	binutils-csl-arm-2005q1a:1.1
	binutils-csl-arm-2005q1-branch:1.1.0.12
	binutils-csl-arm-2005q1-branchpoint:1.1
	binutils-2_16-branch:1.1.0.10
	binutils-2_16-branchpoint:1.1
	csl-arm-2004-q3d:1.1
	csl-arm-2004-q3:1.1
	binutils-2_15:1.1
	binutils-2_15-branchpoint:1.1
	csl-arm-2004-q1a:1.1
	csl-arm-2004-q1:1.1
	binutils-2_15-branch:1.1.0.8
	cagney_bfdfile-20040213-branch:1.1.0.6
	cagney_bfdfile-20040213-branchpoint:1.1
	cagney_bigcore-20040122-branch:1.1.0.4
	cagney_bigcore-20040122-branchpoint:1.1
	csl-arm-2003-q4:1.1
	binutils-2_14:1.1
	binutils-2_14-branch:1.1.0.2
	binutils-2_14-branchpoint:1.1
	binutils_latest_snapshot:1.3;
locks; strict;
comment	@# @;


1.3
date	2012.05.15.12.55.46;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	2012.02.13.02.31.53;	author amodra;	state Exp;
branches;
next	1.1;

1.1
date	2003.04.21.13.30.14;	author ciceron;	state Exp;
branches;
next	;


desc
@@


1.3
log
@	* config/tc-m68hc11.c: Add S12X and XGATE co-processor support.
	Add option to offset S12 addresses into XGATE memory space.
	Tweak target flags to match other tools. (i.e. -m m68hc11).
	* doc/as.texinfo: Mention new options.
	* doc/c-m68hc11.texi: Document new options.
	* NEWS: Mention new support.

	* archures.c: Add bfd_arch_m9s12x and bfd_arch_m9s12xg.
	* config.bfd: Likewise.
	* cpu-m9s12x.c: New.
	* cpu-m9s12xg.c: New.
	* elf32-m68hc12.c: Add S12X and XGATE co-processor support.
	Add option to offset S12 addresses into XGATE memory space.
	Fix carry bug in IMM16 (IMM8 low/high) relocate.
	* Makefile.am (ALL_MACHINES): Add cpu-m9s12x and cpu-m9s12xg.
	(ALL_MACHINES_CFILES): Likewise.
	* reloc.c: Add S12X relocs.
	* Makefile.in: Regenerate.
	* bfd-in2.h: Regenerate.
	* libbfd.h: Regenerate.

	* gas/m68hc11/insns9s12x.s: New
	* gas/m68hc11/insns9s12x.d: New
	* gas/m68hc11/hexprefix.s: New
	* gas/m68hc11/hexprefix.d: New
	* gas/m68hc11/9s12x-exg-sex-tfr.s: New
	* gas/m68hc11/9s12x-exg-sex-tfr.d: New
	* gas/m68hc11/insns9s12xg.s: New
	* gas/m68hc11/insns9s12xg.d: New
	* gas/m68hc11/9s12x-mov.s: New
	* gas/m68hc11/9s12x-mov.d: New
	* gas/m68hc11/m68hc11.exp: Updated
	* gas/m68hc11/*.d: Brought in line with changed objdump output.
	* gas/all/gas.exp: XFAIL all hc11/12 targets for redef2,3.
	* gas/elf/elf.exp: XFAIL all hc11/12 targets for redef.
	* gas/elf/dwarf2-1.d: Skip for hc11/12 targets.
	* gas/elf/dwarf2-2.d: Likewise.

	* ld-m68hc11/xgate-link.s: New.
	* ld-m68hc11/xgate-link.d: New.
	* ld-m68hc11/xgate-offset.s: New.
	* ld-m68hc11/xgate-offset.d: New.
	* ld-m68hc11/xgate1.s: New.
	* ld-m68hc11/xgate1.d: New.
	* ld-m68hc11/xgate2.s: New.
	* ld-m68hc11/m68hc11.exp: Updated.
	* ld-m68hc11/*.d: Brought in line with changed objdump output.
	* ld-gc/gc.exp: Update CFLAGS for m68hc11.
	* ld-plugin/plugin.exp: Likewise.
	* ld-srec/srec.exp: XFAIL for m68hc11 and m68hc12.

	* configure.in: Add S12X and XGATE co-processor support to m68hc11
	target.
	* disassemble.c: Likewise.
	* configure: Regenerate.
	* m68hc11-dis.c: Make objdump output more consistent, use hex
	instead of decimal and use 0x prefix for hex.
	* m68hc11-opc.c: Add S12X and XGATE opcodes.
	* dis-asm.h (print_insn_m9s12x): Prototype.
	(print_insn_m9s12xg): Prototype.

	* m68hc11.h (R_M68HC12_16B, R_M68HC12_PCREL_9, R_M68HC12_PCREL_10)
	R_M68HC12_HI8XG, R_M68HC12_LO8XG): New relocations.
	(E_M68HC11_XGATE_RAMOFFSET): Define.

	* m68hc11.h: Add XGate definitions.
	(struct m68hc11_opcode): Add xg_mask field.
@
text
@#source: far-hc12.s
#as: -m68hc12
#ld: -m m68hc12elf --script $srcdir/$subdir/far-hc12.ld
#objdump: -d --prefix-addresses -r

.*:     file format elf32\-m68hc12

Disassembly of section .text:
0+c000 <tramp\._far_foo> ldy	\#0x0+8000 <__bank_start>
0+c003 <tramp\._far_foo\+0x3> call	0x0+c049 <__far_trampoline> \{0x0+c049 <__far_trampoline>, 0x1\}
0+c007 <tramp\._far_bar> ldy	\#0x0+8000 <__bank_start>
0+c00a <tramp\._far_bar\+0x3> call	0x0+c049 <__far_trampoline> \{0x0+c049 <__far_trampoline>, 0x0\}
0+c00e <_start> lds	\#0x0+2063 <stack-0x1>
0+c011 <_start\+0x3> ldx	\#0x0+abcd <__bank_start\+0x2bcd>
0+c014 <_start\+0x6> pshx
0+c015 <_start\+0x7> ldd	\#0x0+1234 <stack\-0xe30>
0+c018 <_start\+0xa> ldx	\#0x0+5678 <__bank_size\+0x1678>
0+c01b <_start\+0xd> jsr	0x0+c007 <tramp._far_bar>
0+c01e <_start\+0x10> cpx	\#0x0+1234 <stack\-0xe30>
0+c021 <_start\+0x13> bne	0x0+c043 <fail>
0+c023 <_start\+0x15> cpd	\#0x0+5678 <__bank_size\+0x1678>
0+c026 <_start\+0x18> bne	0x0+c043 <fail>
0+c028 <_start\+0x1a> pulx
0+c029 <_start\+0x1b> cpx	\#0x0+abcd <__bank_start\+0x2bcd>
0+c02c <_start\+0x1e> bne	0x0+c043 <fail>
0+c02e <_start\+0x20> ldd	\#0x0+c000 <tramp._far_foo>
0+c031 <_start\+0x23> xgdx
0+c033 <_start\+0x25> jsr	0x0,X
0+c035 <_start\+0x27> ldd	\#0x0+c007 <tramp._far_bar>
0+c038 <_start\+0x2a> xgdy
0+c03a <_start\+0x2c> jsr	0x0,Y
0+c03c <_start\+0x2e> call	0x0+18000 <_far_no_tramp> \{0x0+8000 <__bank_start>, 0x2\}
0+c040 <_start\+0x32> clra
0+c041 <_start\+0x33> clrb
0+c042 <_start\+0x34> wai
0+c043 <fail> ldd	\#0x0+1 <stack\-0x2063>
0+c046 <fail\+0x3> wai
0+c047 <fail\+0x4> bra	0x0+c00e <_start>
0+c049 <__far_trampoline> movb	0x0,SP, 0x2,SP
0+c04d <__far_trampoline\+0x4> leas	0x2,SP
0+c04f <__far_trampoline\+0x6> jmp	0x0,Y
Disassembly of section .bank1:
0+10+ <_far_bar> jsr	0x0+10006 <local_bank1>
0+10003 <_far_bar\+0x3> xgdx
0+10005 <_far_bar\+0x5> rtc
0+10006 <local_bank1> rts
Disassembly of section .bank2:
0+14000 <_far_foo> jsr	0x0+14004 <local_bank2>
0+14003 <_far_foo\+0x3> rtc
0+14004 <local_bank2> rts
Disassembly of section .bank3:
0+18000 <_far_no_tramp> jsr	0x0+18004 <local_bank3>
0+18003 <_far_no_tramp\+0x3> rtc
0+18004 <local_bank3> rts
@


1.2
log
@	* ld-m68hc11/m68hc11.exp: Run for m68hc11-*-* and m68hc12-*-*.
	* ld-m68hc11/adj-brset.d: Remove redundant #target line.  Add
	-m m68hc11elf to ld invocation.
	* ld-m68hc11/adj-jump.d: Likewise.
	* ld-m68hc11/bug-1403.d: Likewise.
	* ld-m68hc11/bug-1417.d: Likewise.
	* ld-m68hc11/bug-3331.d: Likewise.
	* ld-m68hc11/relax-direct.d: Likewise.
	* ld-m68hc11/relax-group.d: Likewise.
	* ld-m68hc11/far-hc11.d: Remove redundant #target line.  Adjust for
	changed addresses.
	* ld-m68hc11/far-hc12.d: Remove redundant #target line.
	* ld-m68hc11/link-hcs12.d: Likewise, and adjust for header changes.
@
text
@d9 6
a14 6
0+c000 <tramp\._far_foo> ldy	\#0+8000 <__bank_start>
0+c003 <tramp\._far_foo\+0x3> call	0+c049 <__far_trampoline> \{0+c049 <__far_trampoline>, 1\}
0+c007 <tramp\._far_bar> ldy	\#0+8000 <__bank_start>
0+c00a <tramp\._far_bar\+0x3> call	0+c049 <__far_trampoline> \{0+c049 <__far_trampoline>, 0\}
0+c00e <_start> lds	\#0+2063 <stack-0x1>
0+c011 <_start\+0x3> ldx	\#0+abcd <__bank_start\+0x2bcd>
d16 7
a22 7
0+c015 <_start\+0x7> ldd	\#0+1234 <stack\-0xe30>
0+c018 <_start\+0xa> ldx	\#0+5678 <__bank_size\+0x1678>
0+c01b <_start\+0xd> jsr	0+c007 <tramp._far_bar>
0+c01e <_start\+0x10> cpx	\#0+1234 <stack\-0xe30>
0+c021 <_start\+0x13> bne	0+c043 <fail>
0+c023 <_start\+0x15> cpd	\#0+5678 <__bank_size\+0x1678>
0+c026 <_start\+0x18> bne	0+c043 <fail>
d24 3
a26 3
0+c029 <_start\+0x1b> cpx	\#0+abcd <__bank_start\+0x2bcd>
0+c02c <_start\+0x1e> bne	0+c043 <fail>
0+c02e <_start\+0x20> ldd	\#0+c000 <tramp._far_foo>
d28 2
a29 2
0+c033 <_start\+0x25> jsr	0,X
0+c035 <_start\+0x27> ldd	\#0+c007 <tramp._far_bar>
d31 2
a32 2
0+c03a <_start\+0x2c> jsr	0,Y
0+c03c <_start\+0x2e> call	0+18000 <_far_no_tramp> \{0+8000 <__bank_start>, 2\}
d36 1
a36 1
0+c043 <fail> ldd	\#0+1 <stack\-0x2063>
d38 4
a41 4
0+c047 <fail\+0x4> bra	0+c00e <_start>
0+c049 <__far_trampoline> movb	0,SP, 2,SP
0+c04d <__far_trampoline\+0x4> leas	2,SP
0+c04f <__far_trampoline\+0x6> jmp	0,Y
d43 1
a43 1
0+10+ <_far_bar> jsr	0+10006 <local_bank1>
d48 1
a48 1
0+14000 <_far_foo> jsr	0+14004 <local_bank2>
d52 1
a52 1
0+18000 <_far_no_tramp> jsr	0+18004 <local_bank3>
@


1.1
log
@	* ld-m68hc11/far-hc11.s: New file.
	* ld-m68hc11/far-hc11.d: New test for HC11 trampoline generation.
	* ld-m68hc11/far-hc12.s: New file.
	* ld-m68hc11/far-hc12.d: New test for HC12 trampoline generation.
	* ld-m68hc11/far-hc12.ld: New file.
@
text
@a4 1
#target: m6811-*-* m6812-*-*
@

