head	1.1;
access;
symbols
	binutils-2_24-branch:1.1.0.2
	binutils-2_24-branchpoint:1.1
	binutils_latest_snapshot:1.1;
locks; strict;
comment	@# @;


1.1
date	2013.04.10.12.00.14;	author mshawcroft;	state Exp;
branches;
next	;


desc
@@


1.1
log
@2013-04-10  Venkataramanan Kumar  <venkataramanan.kumar@@linaro.org>
        * ld-aarch64/gc-plt1.s: New file.
        * ld-aarch64/gc-plt2.s: Likewise.
        * ld-aarch64/gc-plt-hidden.s: Likewise.
        * ld-aarch64/gc-plt-main.s: Likewise.
        * ld-aarch64/gc-relocs-257.s: Likewise.
        * ld-aarch64/gc-plt-relocs.d: Update expected objdump.
        * ld-aarch64/gc-relocs-257.d: Likewise.
        * ld-aarch64/gc-relocs-257-dyn.d: Likewise.
        * ld-aarch64/aarch64-elf.exp: Add test.
@
text
@#source: gc-start.s
#source: gc-relocs-257.s
#ld: --defsym tempy=0x11012 --defsym tempy2=0x45034 --defsym tempy3=0x1234   -T aarch64.ld  --gc-sections
#objdump:  -d

# This tests if linker is able to remove gc section containing
# R_AARCH64_ABS64 relocs.  So after gc, we should be left with
# only the startup code.

.*:     file format elf64-(little|big)aarch64


Disassembly of section .text:

0+8000 \<_start\>:
    8000:	d503201f 	nop
@
