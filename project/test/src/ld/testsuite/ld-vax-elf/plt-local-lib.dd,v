head	1.1;
access;
symbols
	binutils-2_24-branch:1.1.0.4
	binutils-2_24-branchpoint:1.1
	binutils-2_23_2:1.1.2.1
	binutils-2_23_1:1.1.2.1
	binutils-2_23:1.1.2.1
	binutils-2_23-branch:1.1.0.2
	binutils_latest_snapshot:1.1;
locks; strict;
comment	@# @;


1.1
date	2012.08.05.22.45.20;	author macro;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2012.09.04.14.38.04;	author gingold;	state Exp;
branches;
next	;


desc
@@


1.1
log
@	bfd/
	* elf32-vax.c (elf_vax_adjust_dynamic_symbol): Don't allocate
	PLT slots for local symbols.

	ld/testsuite/
	* ld-vax-elf: New directory.
	* ld-vax-elf/plt-local-lib.dd: New test.
	* ld-vax-elf/plt-local-lib.ld: New test linker script.
	* ld-vax-elf/plt-local-lib.s: New test source.
	* ld-vax-elf/plt-local.dd: New test.
	* ld-vax-elf/plt-local.ld: New test linker script.
	* ld-vax-elf/plt-local.s: New test source.
	* ld-vax-elf/plt-local-hidden-pic.s: New test source.
	* ld-vax-elf/plt-local-rehidden-pic.s: New test source.
	* ld-vax-elf/vax-elf.exp: New test script.
@
text
@.*: +file format .*vax.*

Disassembly of section \.plt:

00001000 <foo_local@@plt-0xc>:
    1000:	dd ef 76 20 	pushl 307c <_GLOBAL_OFFSET_TABLE_\+0x4>
    1004:	00 00 
    1006:	17 ff 74 20 	jmp \*3080 <_GLOBAL_OFFSET_TABLE_\+0x8>
    100a:	00 00 

0000100c <foo_local@@plt>:
    100c:	fc 0f       	\.word 0x0ffc # Entry mask: < r11 r10 r9 r8 r7 r6 r5 r4 r3 r2 >
    100e:	16 ef ec ff 	jsb 1000 <foo_local@@plt-0xc>
    1012:	ff ff 
    1014:	00 00 00 00 	\.long 0x00000000

00001018 <foo_extern@@plt>:
    1018:	fc 0f       	\.word 0x0ffc # Entry mask: < r11 r10 r9 r8 r7 r6 r5 r4 r3 r2 >
    101a:	16 ef e0 ff 	jsb 1000 <foo_local@@plt-0xc>
    101e:	ff ff 
    1020:	0c 00 00 00 	\.long 0x0000000c

00001024 <foo_rehidden@@plt>:
    1024:	fc 0f       	\.word 0x0ffc # Entry mask: < r11 r10 r9 r8 r7 r6 r5 r4 r3 r2 >
    1026:	16 ef d4 ff 	jsb 1000 <foo_local@@plt-0xc>
    102a:	ff ff 
    102c:	18 00 00 00 	\.long 0x00000018

00001030 <foo_global@@plt>:
    1030:	fc 0f       	\.word 0x0ffc # Entry mask: < r11 r10 r9 r8 r7 r6 r5 r4 r3 r2 >
    1032:	16 ef c8 ff 	jsb 1000 <foo_local@@plt-0xc>
    1036:	ff ff 
    1038:	24 00 00 00 	\.long 0x00000024

Disassembly of section \.text:

00002000 <foo_extern>:
    2000:	00 00       	\.word 0x0000 # Entry mask: < >
    2002:	fb 00 ff 7f 	calls \$0x0,\*3088 <_GLOBAL_OFFSET_TABLE_\+0x10>
    2006:	10 00 00 
    2009:	fb 00 ff 80 	calls \$0x0,\*3090 <_GLOBAL_OFFSET_TABLE_\+0x18>
    200d:	10 00 00 
    2010:	fb 00 ff 6d 	calls \$0x0,\*3084 <_GLOBAL_OFFSET_TABLE_\+0xc>
    2014:	10 00 00 
    2017:	fb 00 ef 2e 	calls \$0x0,204c <foo_hidden>
    201b:	00 00 00 
    201e:	fb 00 ff 67 	calls \$0x0,\*308c <_GLOBAL_OFFSET_TABLE_\+0x14>
    2022:	10 00 00 
    2025:	04          	ret

00002026 <foo_local>:
    2026:	00 00       	\.word 0x0000 # Entry mask: < >
    2028:	fb 00 ff 59 	calls \$0x0,\*3088 <_GLOBAL_OFFSET_TABLE_\+0x10>
    202c:	10 00 00 
    202f:	fb 00 ff 5a 	calls \$0x0,\*3090 <_GLOBAL_OFFSET_TABLE_\+0x18>
    2033:	10 00 00 
    2036:	fb 00 ff 47 	calls \$0x0,\*3084 <_GLOBAL_OFFSET_TABLE_\+0xc>
    203a:	10 00 00 
    203d:	fb 00 ef 08 	calls \$0x0,204c <foo_hidden>
    2041:	00 00 00 
    2044:	fb 00 ff 41 	calls \$0x0,\*308c <_GLOBAL_OFFSET_TABLE_\+0x14>
    2048:	10 00 00 
    204b:	04          	ret

0000204c <foo_hidden>:
    204c:	00 00       	\.word 0x0000 # Entry mask: < >
    204e:	fb 00 ff 33 	calls \$0x0,\*3088 <_GLOBAL_OFFSET_TABLE_\+0x10>
    2052:	10 00 00 
    2055:	fb 00 ff 34 	calls \$0x0,\*3090 <_GLOBAL_OFFSET_TABLE_\+0x18>
    2059:	10 00 00 
    205c:	fb 00 ff 21 	calls \$0x0,\*3084 <_GLOBAL_OFFSET_TABLE_\+0xc>
    2060:	10 00 00 
    2063:	fb 00 ef e2 	calls \$0x0,204c <foo_hidden>
    2067:	ff ff ff 
    206a:	fb 00 ff 1b 	calls \$0x0,\*308c <_GLOBAL_OFFSET_TABLE_\+0x14>
    206e:	10 00 00 
    2071:	04          	ret

00002072 <foo_rehidden>:
    2072:	00 00       	\.word 0x0000 # Entry mask: < >
    2074:	fb 00 ff 0d 	calls \$0x0,\*3088 <_GLOBAL_OFFSET_TABLE_\+0x10>
    2078:	10 00 00 
    207b:	fb 00 ff 0e 	calls \$0x0,\*3090 <_GLOBAL_OFFSET_TABLE_\+0x18>
    207f:	10 00 00 
    2082:	fb 00 ff fb 	calls \$0x0,\*3084 <_GLOBAL_OFFSET_TABLE_\+0xc>
    2086:	0f 00 00 
    2089:	fb 00 ef bc 	calls \$0x0,204c <foo_hidden>
    208d:	ff ff ff 
    2090:	fb 00 ff f5 	calls \$0x0,\*308c <_GLOBAL_OFFSET_TABLE_\+0x14>
    2094:	0f 00 00 
    2097:	04          	ret
@


1.1.2.1
log
@bfd/
2012-08-09  Maciej W. Rozycki  <macro@@codesourcery.com>

	* elfxx-mips.c (LA25_LUI_MICROMIPS_1, LA25_LUI_MICROMIPS_2):
	Remove macros, folding them into...
	(LA25_LUI_MICROMIPS): ... this new macro.
	(LA25_J_MICROMIPS_1, LA25_J_MICROMIPS_2): Likewise into...
	(LA25_J_MICROMIPS): ... this new macro.
	(LA25_ADDIU_MICROMIPS_1, LA25_ADDIU_MICROMIPS_2): Likewise
	into...
	(LA25_ADDIU_MICROMIPS): ... this new macro.
	(bfd_put_micromips_32, bfd_get_micromips_32): New functions.
	(mips_elf_create_la25_stub): Use them.
	(check_br32_dslot, check_br32, check_relocated_bzc): Likewise.
	(_bfd_mips_elf_relax_section): Likewise.

gas/
	* config/tc-mips.c (NO_ISA_COP, COP_INSN): Remove macros.
	(is_opcode_valid): Remove coprocessor instruction exclusions.
	Replace OPCODE_IS_MEMBER with opcode_is_member.
	(is_opcode_valid_16): Replace OPCODE_IS_MEMBER with
	opcode_is_member.
	(macro): Remove coprocessor instruction exclusions.

gas/
	* gas/mips/mips.exp: Set has_newabi for all Linux targets.
	* gas/mips/cfi-n64-1.d: Adjust for targets that do not infer the
	ISA from the ABI.
	* gas/mips/elf-rel-got-n32.d: Likewise.
	* gas/mips/elf-rel-got-n64.d: Likewise.
	* gas/mips/elf-rel-xgot-n32.d: Likewise.
	* gas/mips/elf-rel-xgot-n64.d: Likewise.
	* gas/mips/elf-rel18.d: Likewise.
	* gas/mips/elf-rel28-n32.d: Likewise.
	* gas/mips/elf-rel28-n64.d: Likewise.
	* gas/mips/jal-newabi.d: Likewise.
	* gas/mips/ldstla-n64-shared.d: Likewise.
	* gas/mips/ldstla-n64-sym32.d: Likewise.
	* gas/mips/ldstla-n64.d: Likewise.
	* gas/mips/macro-warn-1-n32.d: Likewise.
	* gas/mips/macro-warn-2-n32.d: Likewise.
	* gas/mips/n32-consec.d: Likewise.

include/
2012-08-13  Richard Sandiford  <rdsandiford@@googlemail.com>
            Maciej W. Rozycki  <macro@@codesourcery.com>

	* mips.h (mips_opcode): Add the exclusions field.
	(OPCODE_IS_MEMBER): Remove macro.
	(cpu_is_member): New inline function.
	(opcode_is_member): Likewise.

ld/
	* emulparams/elf32bmip.sh: Make _gp hidden.
	* emulparams/elf32bmipn32-defs.sh: Likewise.
	* emulparams/elf32mipswindiss.sh: Likewise.
	* scripttempl/mips.sc: Likewise.

ld/
2012-08-28  Maciej W. Rozycki  <macro@@codesourcery.com>

	* ld-elf/export-class.sd: New test.
	* ld-elf/export-class.vd: New test.
	* ld-elf/export-class-def.s: New test source.
	* ld-elf/export-class-dep.s: New test source.
	* ld-elf/export-class-lib.s: New test source.
	* ld-elf/export-class-ref.s: New test source.
	* ld-elf/export-class-lib.ver: New test version script.
	* ld-elf/export-class.exp: New test script.
	* ld-arm/arm-export-class.rd: New test.
	* ld-arm/arm-export-class.xd: New test.
	* ld-arm/export-class.exp: New test script.
	* ld-i386/i386-export-class.rd: New test.
	* ld-i386/i386-export-class.xd: New test.
	* ld-i386/export-class.exp: New test script.
	* ld-mips-elf/mips-32-export-class.rd: New test.
	* ld-mips-elf/mips-32-export-class.xd: New test.
	* ld-mips-elf/mips-64-export-class.rd: New test.
	* ld-mips-elf/mips-64-export-class.xd: New test.
	* ld-mips-elf/export-class.exp: New test script.
	* ld-powerpc/powerpc-32-export-class.rd: New test.
	* ld-powerpc/powerpc-32-export-class.xd: New test.
	* ld-powerpc/powerpc-64-export-class.rd: New test.
	* ld-powerpc/powerpc-64-export-class.xd: New test.
	* ld-powerpc/export-class.exp: New test script.
	* ld-x86-64/x86-64-64-export-class.rd: New test.
	* ld-x86-64/x86-64-x32-export-class.rd: New test.
	* ld-x86-64/export-class.exp: New test script.

opcodes/
2012-08-14  Maciej W. Rozycki  <macro@@codesourcery.com>

	* mips-dis.c (print_insn_args): Add GET_OP and GET_OP_S local
	macros, use local variables for info struct member accesses,
	update the type of the variable used to hold the instruction
	word.
	(print_insn_mips, print_mips16_insn_arg): Likewise.
	(print_insn_mips16): Add GET_OP and GET_OP_S local macros, use
	local variables for info struct member accesses.
	(print_insn_micromips): Add GET_OP_S local macro.
	(_print_insn_mips): Update the type of the variable used to hold
	the instruction word.
@
text
@@

