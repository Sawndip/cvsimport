head	1.3;
access;
symbols
	binutils-2_24-branch:1.3.0.14
	binutils-2_24-branchpoint:1.3
	binutils-2_21_1:1.3
	binutils-2_23_2:1.3
	binutils-2_23_1:1.3
	binutils-2_23:1.3
	binutils-2_23-branch:1.3.0.12
	binutils-2_23-branchpoint:1.3
	binutils-2_22_branch:1.3.0.10
	binutils-2_22:1.3
	binutils-2_22-branch:1.3.0.8
	binutils-2_22-branchpoint:1.3
	binutils-2_21:1.3
	binutils-2_21-branch:1.3.0.6
	binutils-2_21-branchpoint:1.3
	binutils-2_20_1:1.3
	binutils-2_20:1.3
	binutils-2_20-branch:1.3.0.4
	binutils-2_20-branchpoint:1.3
	dje-cgen-play1-branch:1.3.0.2
	dje-cgen-play1-branchpoint:1.3
	binutils_latest_snapshot:1.3;
locks; strict;
comment	@ * @;


1.3
date	2009.06.25.14.41.18;	author ktietz;	state Exp;
branches;
next	1.2;

1.2
date	2009.05.21.16.28.45;	author davek;	state Exp;
branches;
next	1.1;

1.1
date	2009.05.19.16.08.08;	author davek;	state Exp;
branches;
next	;


desc
@@


1.3
log
@2009-06-25  Kai Tietz  <kai.tietz@@onevision.com>

	* ld-pe/aligncomm-1.c (size_t): Add typedef.
	(main): Use it for casting pointer to scalar.
	* ld-pe/aligncomm-2.c: Likewise.
	* ld-pe/aligncomm-3.c: Likewise.
	* ld-pe/aligncomm-4.c: Likewise.
	* ld-scripts/empty-address.exp: Make sure that for x86_64-*-mingw*
	target imagebase is set to zero.
	* ld-scripts/weak.exp: Don't fail for x86_64-*-mingw* target.
@
text
@
typedef float __m128 __attribute__ ((__vector_size__ (16), __may_alias__));
typedef __SIZE_TYPE__ size_t;

long s1 = 0;
long s2 = 0;
long s3 = 0;
__m128 r;
__m128 * volatile raddr = &r;

int main (int argc, const char **argv)
{
  return 15 & (int)(size_t)raddr;
}

void __main (void)
{
  asm (".section .drectve\n"
	"  .ascii \" -aligncomm:_r,4\"\n"
	"  .ascii \" -aligncomm:r,4\"\n"
	"  .text");
}

#if defined (__CYGWIN__) || defined (__MINGW32__)
void _alloca (void)
{
}
#endif
@


1.2
log
@	* ld-pe/aligncomm-1.c (_alloca):  Add dummy definition to
	satisfy final link on Windows targets when using gcc-3.
	* ld-pe/aligncomm-2.c (_alloca):  Likewise.
	* ld-pe/aligncomm-3.c (_alloca):  Likewise.
	* ld-pe/aligncomm-4.c (_alloca):  Likewise.
@
text
@d3 1
d13 1
a13 1
  return 15 & (int)raddr;
@


1.1
log
@==> bfd/ChangeLog <==
2009-05-19  Dave Korn  <dave.korn.cygwin@@gmail.com>

	* cofflink.c (process_embedded_commands):  Ignore "-aligncomm".

==> gas/ChangeLog <==
2009-05-19  Dave Korn  <dave.korn.cygwin@@gmail.com>

	* NEWS:  Mention new feature.
	* config/obj-coff.c (obj_coff_common_parse):  New function.
	(obj_coff_comm):  Likewise.
	(coff_pseudo_table):  Override default ".comm" definition on PE.
	* doc/as.texinfo:  Document new feature.

==> gas/testsuite/ChangeLog <==
2009-05-19  Dave Korn  <dave.korn.cygwin@@gmail.com>

	* gas/pe/:  New directory for PE format-specific tests.
	* gas/pe/aligncomm-a.d:  New test pattern file.
	* gas/pe/aligncomm-a.s:  New test source file.
	* gas/pe/aligncomm-b.d:  New test pattern file.
	* gas/pe/aligncomm-b.s:  New test source file.
	* gas/pe/aligncomm-c.d:  New test pattern file.
	* gas/pe/aligncomm-c.s:  New test source file.
	* gas/pe/aligncomm-d.d:  New test pattern file.
	* gas/pe/aligncomm-d.s:  New test source file.
	* gas/pe/pe.exp:  New test control script.
	* lib/gas-defs.exp (is_pecoff_format):  New function.

==> ld/ChangeLog <==
2009-05-19  Dave Korn  <dave.korn.cygwin@@gmail.com>

	* NEWS:  Mention new feature.
	* deffile.h (def_file_aligncomm):  Add new struct definition.
	(def_file):  Add new def_file_aligncomm member.
	* deffilep.y (%token):  Add new ALIGNCOMM token.
	(command):  Add production rule for ALIGNCOMM.
	(def_file_free):  Free any chained def_file_aligncomm structs.
	(diropts[]):  Add entry for '-aligncomm' .drectve command.
	(def_aligncomm):  New grammar function.
	* ld.texinfo:  Document new feature.
	* pe-dll.c (process_def_file):  Rename from this ...
	(process_def_file_and_drectve):  ... to this, updating all callers,
	and process any aligncomms chained to the def file after scanning
	all .drectve sections.
	(generate_edata):  Updated to match.
	(pe_dll_build_sections):  Likewise.

==> ld/testsuite/ChangeLog <==
2009-05-19  Dave Korn  <dave.korn.cygwin@@gmail.com>

	* ld-pe/aligncomm-1.c:  New test source file.
	* ld-pe/aligncomm-2.c:  Likewise.
	* ld-pe/aligncomm-3.c:  Likewise.
	* ld-pe/aligncomm-4.c:  Likewise.
	* ld-pe/aligncomm.d:  New test pattern file.

	* ld-pe/direct.exp:  Deleted, and content moved into ...
	* ld-pe/pe-run.exp:  ... New common file for all PE run tests.

	* ld-pe/vers-script.exp:  Deleted, and content merged into ...
	* ld-pe/pe-compile.exp:  ... New common file for PE tests needing
	a compiler, adding aligned common tests.

	* ld-pe/pe.exp:  Update header comment.
@
text
@d22 6
@

