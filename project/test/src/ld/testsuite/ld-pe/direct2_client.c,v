head	1.1;
access;
symbols
	binutils-2_24-branch:1.1.0.10
	binutils-2_24-branchpoint:1.1
	binutils-2_21_1:1.1
	binutils-2_23_2:1.1
	binutils-2_23_1:1.1
	binutils-2_23:1.1
	binutils-2_23-branch:1.1.0.8
	binutils-2_23-branchpoint:1.1
	binutils-2_22_branch:1.1.0.6
	binutils-2_22:1.1
	binutils-2_22-branch:1.1.0.4
	binutils-2_22-branchpoint:1.1
	binutils-2_21:1.1
	binutils-2_21-branch:1.1.0.2
	binutils-2_21-branchpoint:1.1
	binutils_latest_snapshot:1.1;
locks; strict;
comment	@ * @;


1.1
date	2009.11.15.07.52.45;	author ktietz;	state Exp;
branches;
next	;


desc
@@


1.1
log
@2009-11-15  Kai Tietz  <kai.tietz@@onevision.com>

	* pe-dll.c (pe_undef_alias_cdecl_match): New function.
	(pe_find_cdecl_alias_match): New function.
	(pe_process_import_defs): Add matching for import symbols
	declared as cdecl for fastcall/stdcall.
	* emultempl/pe.em (pe_undef_cdecl_match): Treat fastcall
	symbols, too.
	(pe_fixup_stdcalls): Likewise.
	(gld_XXX_after_open): Redo scanning for imported
	fastcall/stdcall symbols as cdecl one.
	* emultempl/pep.em (pep_undef_cdecl_match): Treat fastcall
	symbols, too.
	(pep_fixup_stdcalls): Likewise.
	(gld_XXX_after_open): Redo scanning for imported
	fastcall/stdcall symbols as cdecl one.

2009-11-15  Kai Tietz  <kai.tietz@@onevision.com>

	* ld-pe/direct2_client.c: New file.
	* ld-pe/direct2_dll.c: Likewise.
	* ld-pe/direct2_dll.def: Likewise.
	* ld-pe/pe-run2.exp: Likewise.
@
text
@extern void abort (void);

void
__cdecl
lib2foocdecl(int junk1, int* junk2);

void
__stdcall
lib2foostdcall(int junk1, int* junk2);

void
__fastcall
lib2foofastcall(int junk1, int* junk2);

void
__cdecl
lib1foocdecl(int junk1, int* junk2)
{
    lib2foocdecl(junk1, junk2);
}

void
__stdcall
lib1foostdcall(int junk1, int* junk2)
{
    lib2foostdcall(junk1, junk2);
}

void
__fastcall
lib1foofastcall(int junk1, int* junk2)
{
    lib2foofastcall(junk1, junk2);
}

int main()
{
  int junk[3];
  lib1foofastcall (1, &junk[0]);
  lib1foostdcall (2, &junk[1]);
  lib1foocdecl (3, &junk[2]);
  if (junk[1] != 2 || junk[0] != 1 || junk[2] != 3)
    abort ();

  return 0;
}

@
