head	1.15;
access;
symbols
	sid-snapshot-20180601:1.15
	sid-snapshot-20180501:1.15
	sid-snapshot-20180401:1.15
	sid-snapshot-20180301:1.15
	sid-snapshot-20180201:1.15
	sid-snapshot-20180101:1.15
	sid-snapshot-20171201:1.15
	sid-snapshot-20171101:1.15
	sid-snapshot-20171001:1.15
	sid-snapshot-20170901:1.15
	sid-snapshot-20170801:1.15
	sid-snapshot-20170701:1.15
	sid-snapshot-20170601:1.15
	sid-snapshot-20170501:1.15
	sid-snapshot-20170401:1.15
	sid-snapshot-20170301:1.15
	sid-snapshot-20170201:1.15
	sid-snapshot-20170101:1.15
	sid-snapshot-20161201:1.15
	sid-snapshot-20161101:1.15
	sid-snapshot-20160901:1.15
	sid-snapshot-20160801:1.15
	sid-snapshot-20160701:1.15
	sid-snapshot-20160601:1.15
	sid-snapshot-20160501:1.15
	sid-snapshot-20160401:1.15
	sid-snapshot-20160301:1.15
	sid-snapshot-20160201:1.15
	sid-snapshot-20160101:1.15
	sid-snapshot-20151201:1.15
	sid-snapshot-20151101:1.15
	sid-snapshot-20151001:1.15
	sid-snapshot-20150901:1.15
	sid-snapshot-20150801:1.15
	sid-snapshot-20150701:1.15
	sid-snapshot-20150601:1.15
	sid-snapshot-20150501:1.15
	sid-snapshot-20150401:1.15
	sid-snapshot-20150301:1.15
	sid-snapshot-20150201:1.15
	sid-snapshot-20150101:1.15
	sid-snapshot-20141201:1.15
	sid-snapshot-20141101:1.15
	sid-snapshot-20141001:1.15
	sid-snapshot-20140901:1.15
	sid-snapshot-20140801:1.15
	sid-snapshot-20140701:1.15
	sid-snapshot-20140601:1.15
	sid-snapshot-20140501:1.15
	sid-snapshot-20140401:1.15
	sid-snapshot-20140301:1.15
	sid-snapshot-20140201:1.15
	sid-snapshot-20140101:1.15
	sid-snapshot-20131201:1.15
	sid-snapshot-20131101:1.15
	sid-snapshot-20131001:1.15
	binutils-2_24-branch:1.15.0.8
	binutils-2_24-branchpoint:1.15
	binutils-2_21_1:1.13
	sid-snapshot-20130901:1.15
	gdb_7_6_1-2013-08-30-release:1.15
	sid-snapshot-20130801:1.15
	sid-snapshot-20130701:1.15
	sid-snapshot-20130601:1.15
	sid-snapshot-20130501:1.15
	gdb_7_6-2013-04-26-release:1.15
	sid-snapshot-20130401:1.15
	binutils-2_23_2:1.15
	gdb_7_6-branch:1.15.0.6
	gdb_7_6-2013-03-12-branchpoint:1.15
	sid-snapshot-20130301:1.15
	sid-snapshot-20130201:1.15
	sid-snapshot-20130101:1.15
	sid-snapshot-20121201:1.15
	gdb_7_5_1-2012-11-29-release:1.15
	binutils-2_23_1:1.15
	sid-snapshot-20121101:1.15
	binutils-2_23:1.15
	sid-snapshot-20121001:1.15
	sid-snapshot-20120901:1.15
	gdb_7_5-2012-08-17-release:1.15
	sid-snapshot-20120801:1.15
	binutils-2_23-branch:1.15.0.4
	binutils-2_23-branchpoint:1.15
	gdb_7_5-branch:1.15.0.2
	gdb_7_5-2012-07-18-branchpoint:1.15
	sid-snapshot-20120701:1.14
	sid-snapshot-20120601:1.14
	sid-snapshot-20120501:1.14
	binutils-2_22_branch:1.13.0.18
	gdb_7_4_1-2012-04-26-release:1.13
	sid-snapshot-20120401:1.14
	sid-snapshot-20120301:1.14
	sid-snapshot-20120201:1.14
	gdb_7_4-2012-01-24-release:1.13
	sid-snapshot-20120101:1.13
	gdb_7_4-branch:1.13.0.16
	gdb_7_4-2011-12-13-branchpoint:1.13
	sid-snapshot-20111201:1.13
	binutils-2_22:1.13
	sid-snapshot-20111101:1.13
	sid-snapshot-20111001:1.13
	binutils-2_22-branch:1.13.0.14
	binutils-2_22-branchpoint:1.13
	gdb_7_3_1-2011-09-04-release:1.13
	sid-snapshot-20110901:1.13
	sid-snapshot-20110801:1.13
	gdb_7_3-2011-07-26-release:1.13
	sid-snapshot-20110701:1.13
	sid-snapshot-20110601:1.13
	sid-snapshot-20110501:1.13
	gdb_7_3-branch:1.13.0.12
	gdb_7_3-2011-04-01-branchpoint:1.13
	sid-snapshot-20110401:1.13
	sid-snapshot-20110301:1.13
	sid-snapshot-20110201:1.13
	sid-snapshot-20110101:1.13
	binutils-2_21:1.13
	sid-snapshot-20101201:1.13
	binutils-2_21-branch:1.13.0.10
	binutils-2_21-branchpoint:1.13
	sid-snapshot-20101101:1.13
	sid-snapshot-20101001:1.13
	binutils-2_20_1:1.13
	gdb_7_2-2010-09-02-release:1.13
	sid-snapshot-20100901:1.13
	sid-snapshot-20100801:1.13
	gdb_7_2-branch:1.13.0.8
	gdb_7_2-2010-07-07-branchpoint:1.13
	sid-snapshot-20100701:1.13
	sid-snapshot-20100601:1.13
	sid-snapshot-20100501:1.13
	sid-snapshot-20100401:1.13
	gdb_7_1-2010-03-18-release:1.13
	sid-snapshot-20100301:1.13
	gdb_7_1-branch:1.13.0.6
	gdb_7_1-2010-02-18-branchpoint:1.13
	sid-snapshot-20100201:1.13
	sid-snapshot-20100101:1.13
	gdb_7_0_1-2009-12-22-release:1.13
	sid-snapshot-20091201:1.13
	sid-snapshot-20091101:1.13
	binutils-2_20:1.13
	gdb_7_0-2009-10-06-release:1.13
	sid-snapshot-20091001:1.13
	gdb_7_0-branch:1.13.0.4
	gdb_7_0-2009-09-16-branchpoint:1.13
	arc-sim-20090309:1.12
	binutils-arc-20081103-branch:1.12.0.30
	binutils-arc-20081103-branchpoint:1.12
	binutils-2_20-branch:1.13.0.2
	binutils-2_20-branchpoint:1.13
	sid-snapshot-20090901:1.12
	sid-snapshot-20090801:1.12
	msnyder-checkpoint-072509-branch:1.12.0.28
	msnyder-checkpoint-072509-branchpoint:1.12
	sid-snapshot-20090701:1.12
	dje-cgen-play1-branch:1.12.0.26
	dje-cgen-play1-branchpoint:1.12
	sid-snapshot-20090601:1.12
	sid-snapshot-20090501:1.12
	sid-snapshot-20090401:1.12
	arc-20081103-branch:1.12.0.24
	arc-20081103-branchpoint:1.12
	arc-insight_6_8-branch:1.12.0.22
	arc-insight_6_8-branchpoint:1.12
	insight_6_8-branch:1.12.0.20
	insight_6_8-branchpoint:1.12
	sid-snapshot-20090301:1.12
	binutils-2_19_1:1.12
	sid-snapshot-20090201:1.12
	sid-snapshot-20090101:1.12
	reverse-20081226-branch:1.12.0.18
	reverse-20081226-branchpoint:1.12
	sid-snapshot-20081201:1.12
	multiprocess-20081120-branch:1.12.0.16
	multiprocess-20081120-branchpoint:1.12
	sid-snapshot-20081101:1.12
	binutils-2_19:1.12
	sid-snapshot-20081001:1.12
	reverse-20080930-branch:1.12.0.14
	reverse-20080930-branchpoint:1.12
	binutils-2_19-branch:1.12.0.12
	binutils-2_19-branchpoint:1.12
	sid-snapshot-20080901:1.12
	sid-snapshot-20080801:1.12
	reverse-20080717-branch:1.12.0.10
	reverse-20080717-branchpoint:1.12
	sid-snapshot-20080701:1.12
	msnyder-reverse-20080609-branch:1.12.0.8
	msnyder-reverse-20080609-branchpoint:1.12
	drow-reverse-20070409-branch:1.10.0.4
	drow-reverse-20070409-branchpoint:1.10
	sid-snapshot-20080601:1.12
	sid-snapshot-20080501:1.12
	sid-snapshot-20080403:1.12
	sid-snapshot-20080401:1.12
	gdb_6_8-2008-03-27-release:1.12
	sid-snapshot-20080301:1.12
	gdb_6_8-branch:1.12.0.6
	gdb_6_8-2008-02-26-branchpoint:1.12
	sid-snapshot-20080201:1.12
	sid-snapshot-20080101:1.12
	sid-snapshot-20071201:1.12
	sid-snapshot-20071101:1.12
	gdb_6_7_1-2007-10-29-release:1.12
	gdb_6_7-2007-10-10-release:1.12
	sid-snapshot-20071001:1.12
	gdb_6_7-branch:1.12.0.4
	gdb_6_7-2007-09-07-branchpoint:1.12
	binutils-2_18:1.12
	binutils-2_18-branch:1.12.0.2
	binutils-2_18-branchpoint:1.12
	insight_6_6-20070208-release:1.10
	binutils-csl-coldfire-4_1-32:1.9
	binutils-csl-sourcerygxx-4_1-32:1.9
	gdb_6_6-2006-12-18-release:1.10
	binutils-csl-innovasic-fido-3_4_4-33:1.9
	binutils-csl-sourcerygxx-3_4_4-32:1.7
	binutils-csl-coldfire-4_1-30:1.9
	binutils-csl-sourcerygxx-4_1-30:1.9
	binutils-csl-coldfire-4_1-28:1.9
	binutils-csl-sourcerygxx-4_1-29:1.9
	binutils-csl-sourcerygxx-4_1-28:1.9
	gdb_6_6-branch:1.10.0.2
	gdb_6_6-2006-11-15-branchpoint:1.10
	binutils-csl-arm-2006q3-27:1.9
	binutils-csl-sourcerygxx-4_1-27:1.9
	binutils-csl-arm-2006q3-26:1.9
	binutils-csl-sourcerygxx-4_1-26:1.9
	binutils-csl-sourcerygxx-4_1-25:1.9
	binutils-csl-sourcerygxx-4_1-24:1.9
	binutils-csl-sourcerygxx-4_1-23:1.9
	insight_6_5-20061003-release:1.9
	gdb-csl-symbian-6_4_50_20060226-12:1.9
	binutils-csl-sourcerygxx-4_1-21:1.9
	binutils-csl-arm-2006q3-21:1.9
	binutils-csl-sourcerygxx-4_1-22:1.9
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.9
	binutils-csl-sourcerygxx-4_1-20:1.9
	binutils-csl-arm-2006q3-19:1.9
	binutils-csl-sourcerygxx-4_1-19:1.9
	binutils-csl-sourcerygxx-4_1-18:1.9
	binutils-csl-renesas-4_1-9:1.9
	gdb-csl-sourcerygxx-3_4_4-25:1.9
	binutils-csl-sourcerygxx-3_4_4-25:1.7
	nickrob-async-20060828-mergepoint:1.9
	gdb-csl-symbian-6_4_50_20060226-11:1.9
	binutils-csl-renesas-4_1-8:1.9
	binutils-csl-renesas-4_1-7:1.9
	binutils-csl-renesas-4_1-6:1.9
	gdb-csl-sourcerygxx-4_1-17:1.9
	binutils-csl-sourcerygxx-4_1-17:1.9
	gdb-csl-20060226-branch-local-2:1.9
	gdb-csl-sourcerygxx-4_1-14:1.9
	binutils-csl-sourcerygxx-4_1-14:1.9
	binutils-csl-sourcerygxx-4_1-15:1.9
	gdb-csl-sourcerygxx-4_1-13:1.9
	binutils-csl-sourcerygxx-4_1-13:1.9
	binutils-2_17:1.9
	gdb-csl-sourcerygxx-4_1-12:1.9
	binutils-csl-sourcerygxx-4_1-12:1.9
	gdb-csl-sourcerygxx-3_4_4-21:1.9
	binutils-csl-sourcerygxx-3_4_4-21:1.9
	gdb_6_5-20060621-release:1.9
	binutils-csl-wrs-linux-3_4_4-24:1.7
	binutils-csl-wrs-linux-3_4_4-23:1.7
	gdb-csl-sourcerygxx-4_1-9:1.9
	binutils-csl-sourcerygxx-4_1-9:1.9
	gdb-csl-sourcerygxx-4_1-8:1.9
	binutils-csl-sourcerygxx-4_1-8:1.9
	gdb-csl-sourcerygxx-4_1-7:1.9
	binutils-csl-sourcerygxx-4_1-7:1.9
	gdb-csl-arm-2006q1-6:1.9
	binutils-csl-arm-2006q1-6:1.9
	gdb-csl-sourcerygxx-4_1-6:1.9
	binutils-csl-sourcerygxx-4_1-6:1.9
	binutils-csl-wrs-linux-3_4_4-22:1.7
	gdb-csl-symbian-6_4_50_20060226-10:1.9
	gdb-csl-symbian-6_4_50_20060226-9:1.9
	gdb-csl-symbian-6_4_50_20060226-8:1.9
	gdb-csl-coldfire-4_1-11:1.9
	binutils-csl-coldfire-4_1-11:1.9
	gdb-csl-sourcerygxx-3_4_4-19:1.9
	binutils-csl-sourcerygxx-3_4_4-19:1.9
	gdb-csl-coldfire-4_1-10:1.9
	gdb_6_5-branch:1.9.0.30
	gdb_6_5-2006-05-14-branchpoint:1.9
	binutils-csl-coldfire-4_1-10:1.9
	gdb-csl-sourcerygxx-4_1-5:1.9
	binutils-csl-sourcerygxx-4_1-5:1.9
	nickrob-async-20060513-branch:1.9.0.28
	nickrob-async-20060513-branchpoint:1.9
	gdb-csl-sourcerygxx-4_1-4:1.9
	binutils-csl-sourcerygxx-4_1-4:1.9
	msnyder-reverse-20060502-branch:1.9.0.26
	msnyder-reverse-20060502-branchpoint:1.9
	binutils-csl-wrs-linux-3_4_4-21:1.7
	gdb-csl-morpho-4_1-4:1.9
	binutils-csl-morpho-4_1-4:1.9
	gdb-csl-sourcerygxx-3_4_4-17:1.9
	binutils-csl-sourcerygxx-3_4_4-17:1.9
	binutils-csl-wrs-linux-3_4_4-20:1.7
	readline_5_1-import-branch:1.9.0.24
	readline_5_1-import-branchpoint:1.9
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.9
	binutils-2_17-branch:1.9.0.22
	binutils-2_17-branchpoint:1.9
	gdb-csl-symbian-20060226-branch:1.9.0.20
	gdb-csl-symbian-20060226-branchpoint:1.9
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.9
	msnyder-reverse-20060331-branch:1.9.0.18
	msnyder-reverse-20060331-branchpoint:1.9
	binutils-csl-2_17-branch:1.9.0.16
	binutils-csl-2_17-branchpoint:1.9
	gdb-csl-available-20060303-branch:1.9.0.14
	gdb-csl-available-20060303-branchpoint:1.9
	gdb-csl-20060226-branch:1.9.0.12
	gdb-csl-20060226-branchpoint:1.9
	gdb_6_4-20051202-release:1.9
	msnyder-fork-checkpoint-branch:1.9.0.10
	msnyder-fork-checkpoint-branchpoint:1.9
	gdb-csl-gxxpro-6_3-branch:1.9.0.8
	gdb-csl-gxxpro-6_3-branchpoint:1.9
	gdb_6_4-branch:1.9.0.6
	gdb_6_4-2005-11-01-branchpoint:1.9
	gdb-csl-arm-20051020-branch:1.9.0.4
	gdb-csl-arm-20051020-branchpoint:1.9
	binutils-csl-gxxpro-3_4-branch:1.7.0.70
	binutils-csl-gxxpro-3_4-branchpoint:1.7
	binutils-2_16_1:1.7
	msnyder-tracepoint-checkpoint-branch:1.9.0.2
	msnyder-tracepoint-checkpoint-branchpoint:1.9
	gdb-csl-arm-20050325-2005-q1b:1.7
	binutils-csl-arm-2005q1b:1.7
	binutils-2_16:1.7
	gdb-csl-arm-20050325-2005-q1a:1.7
	binutils-csl-arm-2005q1a:1.7
	csl-arm-20050325-branch:1.7.0.68
	csl-arm-20050325-branchpoint:1.7
	binutils-csl-arm-2005q1-branch:1.7.0.66
	binutils-csl-arm-2005q1-branchpoint:1.7
	binutils-2_16-branch:1.7.0.64
	binutils-2_16-branchpoint:1.7
	csl-arm-2004-q3d:1.7
	gdb_6_3-20041109-release:1.7
	gdb_6_3-branch:1.7.0.60
	gdb_6_3-20041019-branchpoint:1.7
	csl-arm-2004-q3:1.7
	drow_intercu-merge-20040921:1.7
	drow_intercu-merge-20040915:1.7
	jimb-gdb_6_2-e500-branch:1.7.0.62
	jimb-gdb_6_2-e500-branchpoint:1.7
	gdb_6_2-20040730-release:1.7
	gdb_6_2-branch:1.7.0.58
	gdb_6_2-2004-07-10-gmt-branchpoint:1.7
	gdb_6_1_1-20040616-release:1.7
	binutils-2_15:1.7
	binutils-2_15-branchpoint:1.7
	csl-arm-2004-q1a:1.7
	csl-arm-2004-q1:1.7
	gdb_6_1-2004-04-05-release:1.7
	drow_intercu-merge-20040402:1.7
	drow_intercu-merge-20040327:1.7
	ezannoni_pie-20040323-branch:1.7.0.56
	ezannoni_pie-20040323-branchpoint:1.7
	cagney_tramp-20040321-mergepoint:1.7
	cagney_tramp-20040309-branch:1.7.0.54
	cagney_tramp-20040309-branchpoint:1.7
	gdb_6_1-branch:1.7.0.52
	gdb_6_1-2004-03-01-gmt-branchpoint:1.7
	drow_intercu-20040221-branch:1.7.0.50
	drow_intercu-20040221-branchpoint:1.7
	binutils-2_15-branch:1.7.0.48
	cagney_bfdfile-20040213-branch:1.7.0.46
	cagney_bfdfile-20040213-branchpoint:1.7
	drow-cplus-merge-20040208:1.7
	carlton_dictionary-20040126-merge:1.7
	cagney_bigcore-20040122-branch:1.7.0.44
	cagney_bigcore-20040122-branchpoint:1.7
	drow-cplus-merge-20040113:1.7
	csl-arm-2003-q4:1.7
	drow-cplus-merge-20031224:1.7
	drow-cplus-merge-20031220:1.7
	carlton_dictionary-20031215-merge:1.7
	drow-cplus-merge-20031214:1.7
	carlton-dictionary-20031111-merge:1.7
	gdb_6_0-2003-10-04-release:1.7
	kettenis_sparc-20030918-branch:1.7.0.42
	kettenis_sparc-20030918-branchpoint:1.7
	carlton_dictionary-20030917-merge:1.7
	ezannoni_pie-20030916-branchpoint:1.7
	ezannoni_pie-20030916-branch:1.7.0.40
	cagney_x86i386-20030821-branch:1.7.0.38
	cagney_x86i386-20030821-branchpoint:1.7
	carlton_dictionary-20030805-merge:1.7
	carlton_dictionary-20030627-merge:1.7
	gdb_6_0-branch:1.7.0.36
	gdb_6_0-2003-06-23-branchpoint:1.7
	jimb-ppc64-linux-20030613-branch:1.7.0.34
	jimb-ppc64-linux-20030613-branchpoint:1.7
	binutils-2_14:1.7
	cagney_convert-20030606-branch:1.7.0.32
	cagney_convert-20030606-branchpoint:1.7
	cagney_writestrings-20030508-branch:1.7.0.30
	cagney_writestrings-20030508-branchpoint:1.7
	jimb-ppc64-linux-20030528-branch:1.7.0.28
	jimb-ppc64-linux-20030528-branchpoint:1.7
	carlton_dictionary-20030523-merge:1.7
	cagney_fileio-20030521-branch:1.7.0.26
	cagney_fileio-20030521-branchpoint:1.7
	kettenis_i386newframe-20030517-mergepoint:1.7
	jimb-ppc64-linux-20030509-branch:1.7.0.24
	jimb-ppc64-linux-20030509-branchpoint:1.7
	kettenis_i386newframe-20030504-mergepoint:1.7
	carlton_dictionary-20030430-merge:1.7
	binutils-2_14-branch:1.7.0.22
	binutils-2_14-branchpoint:1.7
	kettenis_i386newframe-20030419-branch:1.7.0.20
	kettenis_i386newframe-20030419-branchpoint:1.7
	carlton_dictionary-20030416-merge:1.7
	cagney_frameaddr-20030409-mergepoint:1.7
	kettenis_i386newframe-20030406-branch:1.7.0.18
	kettenis_i386newframe-20030406-branchpoint:1.7
	cagney_frameaddr-20030403-branchpoint:1.7
	cagney_frameaddr-20030403-branch:1.7.0.16
	cagney_framebase-20030330-mergepoint:1.7
	cagney_framebase-20030326-branch:1.7.0.14
	cagney_framebase-20030326-branchpoint:1.7
	cagney_lazyid-20030317-branch:1.7.0.12
	cagney_lazyid-20030317-branchpoint:1.7
	kettenis-i386newframe-20030316-mergepoint:1.7
	offbyone-20030313-branch:1.7.0.10
	offbyone-20030313-branchpoint:1.7
	kettenis-i386newframe-20030308-branch:1.7.0.8
	kettenis-i386newframe-20030308-branchpoint:1.7
	carlton_dictionary-20030305-merge:1.7
	cagney_offbyone-20030303-branch:1.7.0.6
	cagney_offbyone-20030303-branchpoint:1.7
	carlton_dictionary-20030207-merge:1.7
	interps-20030202-branch:1.7.0.4
	interps-20030202-branchpoint:1.7
	cagney-unwind-20030108-branch:1.7.0.2
	cagney-unwind-20030108-branchpoint:1.7
	binutils-2_13_2_1:1.6
	binutils-2_13_2:1.6
	carlton_dictionary-20021223-merge:1.7
	gdb_5_3-2002-12-12-release:1.6
	carlton_dictionary-20021115-merge:1.6
	binutils-2_13_1:1.6
	kseitz_interps-20021105-merge:1.6
	kseitz_interps-20021103-merge:1.6
	drow-cplus-merge-20021020:1.6
	drow-cplus-merge-20021025:1.6
	carlton_dictionary-20021025-merge:1.6
	carlton_dictionary-20021011-merge:1.6
	drow-cplus-branch:1.6.0.24
	drow-cplus-branchpoint:1.6
	kseitz_interps-20020930-merge:1.6
	carlton_dictionary-20020927-merge:1.6
	carlton_dictionary-branch:1.6.0.22
	carlton_dictionary-20020920-branchpoint:1.6
	sid-20020905-branchpoint:1.6
	sid-20020905-branch:1.6.0.20
	gdb_5_3-branch:1.6.0.18
	gdb_5_3-2002-09-04-branchpoint:1.6
	kseitz_interps-20020829-merge:1.6
	cagney_sysregs-20020825-branch:1.6.0.16
	cagney_sysregs-20020825-branchpoint:1.6
	readline_4_3-import-branch:1.6.0.14
	readline_4_3-import-branchpoint:1.6
	binutils-2_13:1.6
	gdb_5_2_1-2002-07-23-release:1.6
	binutils-2_13-branchpoint:1.6
	binutils-2_13-branch:1.6.0.12
	kseitz_interps-20020528-branch:1.6.0.10
	kseitz_interps-20020528-branchpoint:1.6
	cagney_regbuf-20020515-branch:1.6.0.8
	cagney_regbuf-20020515-branchpoint:1.6
	binutils-2_12_1:1.6
	jimb-macro-020506-branch:1.6.0.6
	jimb-macro-020506-branchpoint:1.6
	gdb_5_2-2002-04-29-release:1.6
	binutils-2_12:1.6
	gdb_5_2-branch:1.6.0.4
	gdb_5_2-2002-03-03-branchpoint:1.6
	binutils-2_12-branch:1.6.0.2
	binutils-2_12-branchpoint:1.6
	gdb_5_1_1-2002-01-24-release:1.5
	gdb_5_1_0_1-2002-01-03-release:1.5
	cygnus_cvs_20020108_pre:1.6
	gdb_5_1_0_1-2002-01-03-branch:1.5.0.6
	gdb_5_1_0_1-2002-01-03-branchpoint:1.5
	gdb_5_1-2001-11-21-release:1.5
	gdb_s390-2001-09-26-branch:1.5.0.4
	gdb_s390-2001-09-26-branchpoint:1.5
	gdb_5_1-2001-07-29-branch:1.5.0.2
	gdb_5_1-2001-07-29-branchpoint:1.5
	binutils-2_11_2:1.3.2.1
	binutils-2_11_1:1.3.2.1
	binutils-2_11:1.3
	x86_64versiong3:1.3
	binutils-2_11-branch:1.3.0.2
	insight-precleanup-2001-01-01:1.3
	binutils-2_10_1:1.1.1.1
	binutils-2_10:1.1.1.1
	gdb-premipsmulti-2000-06-06-branch:1.2.0.2
	gdb-premipsmulti-2000-06-06-branchpoint:1.2
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.4
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	binutils-2_10-branch:1.1.1.1.0.2
	binutils-2_10-branchpoint:1.1.1.1
	binutils_latest_snapshot:1.15
	repo-unification-2000-02-06:1.1.1.1
	binu_ss_19990721:1.1.1.1
	binu_ss_19990602:1.1.1.1
	binu_ss_19990502:1.1.1.1
	cygnus:1.1.1;
locks; strict;
comment	@ * @;


1.15
date	2012.07.13.14.22.45;	author nickc;	state Exp;
branches;
next	1.14;

1.14
date	2012.01.31.17.54.35;	author hjl;	state Exp;
branches;
next	1.13;

1.13
date	2009.09.02.07.18.36;	author amodra;	state Exp;
branches;
next	1.12;

1.12
date	2007.07.03.14.26.40;	author nickc;	state Exp;
branches;
next	1.11;

1.11
date	2007.04.26.14.46.55;	author amodra;	state Exp;
branches;
next	1.10;

1.10
date	2006.09.16.18.12.13;	author nickc;	state Exp;
branches;
next	1.9;

1.9
date	2005.05.04.15.53.06;	author nickc;	state Exp;
branches;
next	1.8;

1.8
date	2005.05.04.07.19.21;	author nickc;	state Exp;
branches;
next	1.7;

1.7
date	2002.11.30.08.39.36;	author amodra;	state Exp;
branches;
next	1.6;

1.6
date	2001.09.18.09.57.22;	author amodra;	state Exp;
branches
	1.6.22.1
	1.6.24.1;
next	1.5;

1.5
date	2001.06.24.16.06.38;	author hjl;	state Exp;
branches;
next	1.4;

1.4
date	2001.03.08.21.03.58;	author nickc;	state Exp;
branches;
next	1.3;

1.3
date	2000.11.16.20.48.09;	author kazu;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2000.05.30.21.31.56;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	99.05.03.07.28.55;	author rth;	state Exp;
branches
	1.1.1.1;
next	;

1.6.22.1
date	2002.12.23.19.37.33;	author carlton;	state Exp;
branches;
next	;

1.6.24.1
date	2003.12.14.20.26.37;	author drow;	state Exp;
branches;
next	;

1.3.2.1
date	2001.06.07.03.08.24;	author amodra;	state Exp;
branches;
next	;

1.1.1.1
date	99.05.03.07.28.55;	author rth;	state Exp;
branches;
next	;


desc
@@


1.15
log
@	* aix386-core.c: Remove use of PTR and PARAMS macros.
	* archive.c: Likewise.
	* cache.c: Likewise.
	* cisco-core.c: Likewise.
	* coff-alpha.c: Likewise.
	* coff-apollo.c: Likewise.
	* coff-aux.c: Likewise.
	* coff-h8300.c: Likewise.
	* coff-h8500.c: Likewise.
	* coff-i386.c: Likewise.
	* coff-i960.c: Likewise.
	* coff-ia64.c: Likewise.
	* coff-m68k.c: Likewise.
	* coff-m88k.c: Likewise.
	* coff-mcore.c: Likewise.
	* coff-mips.c: Likewise.
	* coff-or32.c: Likewise.
	* coff-ppc.c: Likewise.
	* coff-rs6000.c: Likewise.
	* coff-sh.c: Likewise.
	* coff-sparc.c: Likewise.
	* coff-stgo32.c: Likewise.
	* coff-tic30.c: Likewise.
	* coff-tic4x.c: Likewise.
	* coff-tic54x.c: Likewise.
	* coff-tic80.c: Likewise.
	* coff-w65.c: Likewise.
	* cofflink.c: Likewise.
	* cpu-arc.c: Likewise.
	* cpu-cris.c: Likewise.
	* cpu-h8500.c: Likewise.
	* cpu-i960.c: Likewise.
	* cpu-msp430.c: Likewise.
	* cpu-ns32k.c: Likewise.
	* cpu-powerpc.c: Likewise.
	* cpu-rs6000.c: Likewise.
	* cpu-tic4x.c: Likewise.
	* cpu-w65.c: Likewise.
	* ecoff.c: Likewise.
	* ecofflink.c: Likewise.
	* elf-m10200.c: Likewise.
	* elf32-bfin.c: Likewise.
	* elf32-cris.c: Likewise.
	* elf32-crx.c: Likewise.
	* elf32-fr30.c: Likewise.
	* elf32-frv.c: Likewise.
	* elf32-h8300.c: Likewise.
	* elf32-i960.c: Likewise.
	* elf32-m32c.c: Likewise.
	* elf32-m68hc11.c: Likewise.
	* elf32-m68hc12.c: Likewise.
	* elf32-m68hc1x.c: Likewise.
	* elf32-m68k.c: Likewise.
	* elf32-mcore.c: Likewise.
	* elf32-rl78.c: Likewise.
	* elf32-rx.c: Likewise.
	* elf32-s390.c: Likewise.
	* elf32-vax.c: Likewise.
	* elf64-alpha.c: Likewise.
	* elf64-mmix.c: Likewise.
	* elf64-s390.c: Likewise.
	* elf64-sparc.c: Likewise.
	* elfnn-ia64.c: Likewise.
	* elfxx-mips.c: Likewise.
	* elfxx-sparc.c: Likewise.
	* hash.c: Likewise.
	* hp300hpux.c: Likewise.
	* hppabsd-core.c: Likewise.
	* hpux-core.c: Likewise.
	* i386dynix.c: Likewise.
	* i386linux.c: Likewise.
	* i386lynx.c: Likewise.
	* i386mach3.c: Likewise.
	* i386msdos.c: Likewise.
	* i386os9k.c: Likewise.
	* irix-core.c: Likewise.
	* lynx-core.c: Likewise.
	* m68klinux.c: Likewise.
	* mach-o.h: Likewise.
	* mipsbsd.c: Likewise.
	* netbsd-core.c: Likewise.
	* nlm32-i386.c: Likewise.
	* osf-core.c: Likewise.
	* pc532-mach.c: Likewise.
	* pef.c: Likewise.
	* ppcboot.c: Likewise.
	* ptrace-core.c: Likewise.
	* reloc16.c: Likewise.
	* sco5-core.c: Likewise.
	* som.h: Likewise.
	* sparclinux.c: Likewise.
	* sparclynx.c: Likewise.
	* ticoff.h: Likewise.
	* trad-core.c: Likewise.
	* vms-lib.c: Likewise.
	* xsym.h: Likewise.
@
text
@/* BFD library support routines for the i960 architecture.
   Copyright 1990, 1991, 1993, 1994, 1996, 1999, 2000, 2001, 2002, 2005, 2006,
   2007, 2012 Free Software Foundation, Inc.
   Hacked by Steve Chamberlain of Cygnus Support.

   This file is part of BFD, the Binary File Descriptor library.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
   MA 02110-1301, USA.  */

#include "sysdep.h"
#include "bfd.h"
#include "libbfd.h"

/* This routine is provided a string, and tries to work out if it
   could possibly refer to the i960 machine pointed at in the
   info_struct pointer */

static bfd_boolean
scan_960_mach (const bfd_arch_info_type *ap,
	       const char *string)
{
  unsigned long machine;
  int fail_because_not_80960 = FALSE;

  /* Look for the string i960 at the front of the string.  */
  if (strncasecmp ("i960", string, 4) == 0)
    {
      string += 4;

      /* i960 on it's own means core to us.  */
      if (* string == 0)
	return ap->mach == bfd_mach_i960_core;

      /* "i960:*" is valid, anything else is not.  */
      if (* string != ':')
	return FALSE;

      string ++;
    }
  /* In some bfds the cpu-id is written as "80960KA", "80960KB",
     "80960CA" or "80960MC".  */
  else if (CONST_STRNEQ (string, "80960"))
    {
      string += 5;

      /* Set this to TRUE here.  If a correct matching postfix
	 is detected below it will be reset to FALSE.  */
      fail_because_not_80960 = TRUE;
    }
  /* No match, can't be us.  */
  else
    return FALSE;

  if (* string == '\0')
    return FALSE;

  if (string[0] == 'c' && string[1] == 'o' && string[2] == 'r' &&
      string[3] == 'e' && string[4] == '\0')
    machine = bfd_mach_i960_core;
  else if (strcasecmp (string, "ka_sa") == 0)
    machine = bfd_mach_i960_ka_sa;
  else if (strcasecmp (string, "kb_sb") == 0)
    machine = bfd_mach_i960_kb_sb;
  else if (string[1] == '\0' || string[2] != '\0') /* rest are 2-char.  */
    return FALSE;
  else if (string[0] == 'k' && string[1] == 'b')
    { machine = bfd_mach_i960_kb_sb; fail_because_not_80960 = FALSE; }
  else if (string[0] == 's' && string[1] == 'b')
    machine = bfd_mach_i960_kb_sb;
  else if (string[0] == 'm' && string[1] == 'c')
    { machine = bfd_mach_i960_mc; fail_because_not_80960 = FALSE; }
  else if (string[0] == 'x' && string[1] == 'a')
    machine = bfd_mach_i960_xa;
  else if (string[0] == 'c' && string[1] == 'a')
    { machine = bfd_mach_i960_ca; fail_because_not_80960 = FALSE; }
  else if (string[0] == 'k' && string[1] == 'a')
    { machine = bfd_mach_i960_ka_sa; fail_because_not_80960 = FALSE; }
  else if (string[0] == 's' && string[1] == 'a')
    machine = bfd_mach_i960_ka_sa;
  else if (string[0] == 'j' && string[1] == 'x')
    machine = bfd_mach_i960_jx;
  else if (string[0] == 'h' && string[1] == 'x')
    machine = bfd_mach_i960_hx;
  else
    return FALSE;

  if (fail_because_not_80960)
    return FALSE;

  if (machine == ap->mach)
    return TRUE;

  return FALSE;
}

/* This routine is provided two arch_infos and works out the i960
   machine which would be compatible with both and returns a pointer
   to its info structure */

static const bfd_arch_info_type *
compatible (const bfd_arch_info_type *a,
	    const bfd_arch_info_type *b)
{

  /* The i960 has distinct subspecies which may not interbreed:
	CORE CA
	CORE KA KB MC XA
	CORE HX JX
     Any architecture on the same line is compatible, the one on
     the right is the least restrictive.

     We represent this information in an array, each machine to a side */

#define ERROR	0
#define CORE	bfd_mach_i960_core  /*1*/
#define KA 	bfd_mach_i960_ka_sa /*2*/
#define KB 	bfd_mach_i960_kb_sb /*3*/
#define MC 	bfd_mach_i960_mc    /*4*/
#define XA 	bfd_mach_i960_xa    /*5*/
#define CA 	bfd_mach_i960_ca    /*6*/
#define JX	bfd_mach_i960_jx    /*7*/
#define HX	bfd_mach_i960_hx    /*8*/
#define MAX_ARCH ((int)HX)

  static const unsigned long matrix[MAX_ARCH+1][MAX_ARCH+1] =
    {
      { ERROR,	CORE,	KA,	KB,	MC,	XA,	CA,	JX,	HX },
      { CORE,	CORE,	KA,	KB,	MC,	XA,	CA,	JX,	HX },
      { KA,	KA,	KA,	KB,	MC,	XA,	ERROR,	ERROR,	ERROR},
      { KB,	KB,	KB,	KB,	MC,	XA,	ERROR, 	ERROR,	ERROR},
      { MC,	MC,	MC,	MC,	MC,	XA,	ERROR,	ERROR,	ERROR},
      { XA,	XA,	XA,	XA,	XA,	XA,	ERROR,	ERROR,	ERROR},
      { CA,	CA,	ERROR,	ERROR,	ERROR,	ERROR,	CA,	ERROR,	ERROR},
      { JX,	JX,	ERROR,	ERROR,	ERROR,	ERROR,	ERROR,  JX,	HX },
      { HX,	HX,	ERROR,	ERROR,	ERROR,	ERROR,	ERROR,	HX,	HX },
    };

  if (a->arch != b->arch || matrix[a->mach][b->mach] == ERROR)
    return NULL;

  return (a->mach  ==  matrix[a->mach][b->mach]) ?  a : b;
}

#define N(a,b,d,n) \
{ 32, 32, 8,bfd_arch_i960,a,"i960",b,3,d,compatible,scan_960_mach, \
  bfd_arch_default_fill, n,}

static const bfd_arch_info_type arch_info_struct[] =
{
  N(bfd_mach_i960_ka_sa,"i960:ka_sa",FALSE, &arch_info_struct[1]),
  N(bfd_mach_i960_kb_sb,"i960:kb_sb",FALSE, &arch_info_struct[2]),
  N(bfd_mach_i960_mc,   "i960:mc",   FALSE, &arch_info_struct[3]),
  N(bfd_mach_i960_xa,   "i960:xa",   FALSE, &arch_info_struct[4]),
  N(bfd_mach_i960_ca,   "i960:ca",   FALSE, &arch_info_struct[5]),
  N(bfd_mach_i960_jx,   "i960:jx",   FALSE, &arch_info_struct[6]),
  N(bfd_mach_i960_hx,	"i960:hx",   FALSE, 0),
};

const bfd_arch_info_type bfd_i960_arch =
  N(bfd_mach_i960_core, "i960:core", TRUE, &arch_info_struct[0]);
@


1.14
log
@Support arch-dependent fill

bfd/

2012-01-31  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/13616
	* archures.c (bfd_arch_info): Add fill.
	(bfd_default_arch_struct): Add bfd_arch_default_fill.
	(bfd_arch_default_fill): New.

	* configure.in: Set bfd version to 2.22.52.
	* configure: Regenerated.

	* cpu-alpha.c: Add bfd_arch_default_fill to bfd_arch_info
	initializer.
	* cpu-arc.c: Likewise.
	* cpu-arm.c: Likewise.
	* cpu-avr.c: Likewise.
	* cpu-bfin.c: Likewise.
	* cpu-cr16.c: Likewise.
	* cpu-cr16c.c: Likewise.
	* cpu-cris.c: Likewise.
	* cpu-crx.c: Likewise.
	* cpu-d10v.c: Likewise.
	* cpu-d30v.c: Likewise.
	* cpu-dlx.c: Likewise.
	* cpu-epiphany.c: Likewise.
	* cpu-fr30.c: Likewise.
	* cpu-frv.c: Likewise.
	* cpu-h8300.c: Likewise.
	* cpu-h8500.c: Likewise.
	* cpu-hppa.c: Likewise.
	* cpu-i370.c: Likewise.
	* cpu-i860.c: Likewise.
	* cpu-i960.c: Likewise.
	* cpu-ia64.c: Likewise.
	* cpu-ip2k.c: Likewise.
	* cpu-iq2000.c: Likewise.
	* cpu-lm32.c: Likewise.
	* cpu-m10200.c: Likewise.
	* cpu-m10300.c: Likewise.
	* cpu-m32c.c: Likewise.
	* cpu-m32r.c: Likewise.
	* cpu-m68hc11.c: Likewise.
	* cpu-m68hc12.c: Likewise.
	* cpu-m68k.c: Likewise.
	* cpu-m88k.c: Likewise.
	* cpu-mcore.c: Likewise.
	* cpu-mep.c: Likewise.
	* cpu-microblaze.c: Likewise.
	* cpu-mips.c: Likewise.
	* cpu-mmix.c: Likewise.
	* cpu-moxie.c: Likewise.
	* cpu-msp430.c: Likewise.
	* cpu-mt.c: Likewise.
	* cpu-ns32k.c: Likewise.
	* cpu-openrisc.c: Likewise.
	* cpu-or32.c: Likewise.
	* cpu-pdp11.c: Likewise.
	* cpu-pj.c: Likewise.
	* cpu-plugin.c: Likewise.
	* cpu-powerpc.c: Likewise.
	* cpu-rl78.c: Likewise.
	* cpu-rs6000.c: Likewise.
	* cpu-rx.c: Likewise.
	* cpu-s390.c: Likewise.
	* cpu-score.c: Likewise.
	* cpu-sh.c: Likewise.
	* cpu-sparc.c: Likewise.
	* cpu-spu.c: Likewise.
	* cpu-tic30.c: Likewise.
	* cpu-tic4x.c: Likewise.
	* cpu-tic54x.c: Likewise.
	* cpu-tic6x.c: Likewise.
	* cpu-tic80.c: Likewise.
	* cpu-tilegx.c: Likewise.
	* cpu-tilepro.c: Likewise.
	* cpu-v850.c: Likewise.
	* cpu-vax.c: Likewise.
	* cpu-w65.c: Likewise.
	* cpu-we32k.c: Likewise.
	* cpu-xc16x.c: Likewise.
	* cpu-xstormy16.c: Likewise.
	* cpu-xtensa.c: Likewise.
	* cpu-z80.c: Likewise.
	* cpu-z8k.c: Likewise.

	* cpu-i386.c: Include "libiberty.h".
	(bfd_arch_i386_fill): New.
	Add bfd_arch_i386_fill to  bfd_arch_info initializer.

	* cpu-k1om.c: Add bfd_arch_i386_fill to  bfd_arch_info initializer.
	* cpu-l1om.c: Likewise.

	* linker.c (default_data_link_order): Call abfd->arch_info->fill
	if fill size is 0.

	* bfd-in2.h: Regenerated.

include/

2012-01-31  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/13616
	* bfdlink.h (bfd_link_order): Update comments on data size.

ld/

2012-01-31  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/13616
	* emulparams/elf32_x86_64.sh: Remove NOP.
	* emulparams/elf_i386.sh: Likewise.
	* emulparams/elf_i386_be.sh: Likewise.
	* emulparams/elf_i386_ldso.sh: Likewise.
	* emulparams/elf_i386_vxworks.sh: Likewise.
	* emulparams/elf_k1om.sh: Likewise.
	* emulparams/elf_l1om.sh: Likewise.
	* emulparams/elf_x86_64.sh: Likewise.

	* ldlang.c (zero_fill): Initialized to 0.

	* ldwrite.c (build_link_order): Set data size to linker odrder
	size when they are the same.

	* scripttempl/elf.sc: Don't specify fill if NOP is undefined.

ld/testsuite/

2012-01-31  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/13616
	* ld-i386/tlsbindesc.dd: Update no-op padding.
	* ld-i386/tlsnopic.dd: Likewise.
	* ld-i386/tlspic.dd: Likewise.
	* ld-x86-64/tlsbin.dd: Likewise.
	* ld-x86-64/tlsbindesc.dd: Likewise.
	* ld-x86-64/tlspic.dd: Likewise.
@
text
@d3 1
a3 1
   2007 Free Software Foundation, Inc.
a26 5
static bfd_boolean scan_960_mach
  PARAMS ((const bfd_arch_info_type *, const char *));
static const bfd_arch_info_type *compatible
  PARAMS ((const bfd_arch_info_type *, const bfd_arch_info_type *));

d32 2
a33 3
scan_960_mach (ap, string)
     const bfd_arch_info_type *ap;
     const char *string;
d114 2
a115 3
compatible (a,b)
     const bfd_arch_info_type *a;
     const bfd_arch_info_type *b;
a151 1
    {
d153 2
a154 5
    }
  else
    {
    return (a->mach  ==  matrix[a->mach][b->mach]) ?  a : b;
    }
@


1.13
log
@update copyright dates
@
text
@d169 2
a170 1
{ 32, 32, 8,bfd_arch_i960,a,"i960",b,3,d,compatible,scan_960_mach,n,}
@


1.12
log
@Switch sources over to use the GPL version 3
@
text
@d2 1
a2 1
   Copyright 1990, 1991, 1993, 1994, 1996, 1999, 2000, 2001, 2002, 2006,
@


1.11
log
@
bfd/
	Many files: Include sysdep.h before bfd.h.
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
binutils/
	* bucumm.h: Split off host dependencies to..
	* sysdep.h: ..here.
	Many files: Include sysdep.h.  Remove duplicate headers and reorder.
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
ld/
	Many files: Include sysdep.h first.  Remove duplicate headers.
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
opcodes/
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
	* ns32k-dis.c: Include sysdep.h first.
@
text
@d10 1
a10 1
   the Free Software Foundation; either version 2 of the License, or
d20 2
a21 1
   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.  */
@


1.10
log
@* bfd-in.h (STRING_AND_COMMA): New macro.  Takes one constant string as its
  argument and emits the string followed by a comma and then the length of
  the string.
  (CONST_STRNEQ): New macro.  Checks to see if a variable string has a constant
  string as its initial characters.
  (CONST_STRNCPY): New macro.  Copies a constant string to the start of a
  variable string.
* bfd-in2.h: Regenerate.
* <remainign files>: Make use of the new macros.
@
text
@d2 2
a3 2
   Copyright 1990, 1991, 1993, 1994, 1996, 1999, 2000, 2001, 2002, 2006
   Free Software Foundation, Inc.
d22 1
a23 1
#include "sysdep.h"
@


1.9
log
@Update the address and phone number of the FSF organization in the GPL notices
@
text
@d2 1
a2 1
   Copyright 1990, 1991, 1993, 1994, 1996, 1999, 2000, 2001, 2002
d6 1
a6 1
This file is part of BFD, the Binary File Descriptor library.
d8 13
a20 13
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.  */
d60 1
a60 1
  else if (strncmp ("80960", string, 5) == 0)
@


1.8
log
@Update the FSF address in the copyright/GPL notice
@
text
@d20 1
a20 1
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02110-1301, USA.  */
@


1.7
log
@s/boolean/bfd_boolean/ s/true/TRUE/ s/false/FALSE/.  Simplify
comparisons of bfd_boolean vars with TRUE/FALSE.  Formatting.
@
text
@d20 1
a20 1
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
@


1.6
log
@Touches most files in bfd/, so likely will be blamed for everything..

o  bfd_read and bfd_write lose an unnecessary param and become
   bfd_bread and bfd_bwrite.

o  bfd_*alloc now all take a bfd_size_type arg, and will error if
   size_t is too small.  eg. 32 bit host, 64 bit bfd, verrry big files
   or bugs in linker scripts etc.

o  file_ptr becomes a bfd_signed_vma.  Besides matching sizes with
   various other types involved in handling sections, this should make
   it easier for bfd to support a 64 bit off_t on 32 bit hosts that
   provide it.

o  I've made the H_GET_* and H_PUT_* macros (which invoke bfd_h_{get,put}_*)
   generally available.  They now cast their args to bfd_vma and
   bfd_byte * as appropriate, which removes a swag of casts from the
   source.

o  Bug fixes to bfd_get8, aix386_core_vec, elf32_h8_relax_section, and
   aout-encap.c.

o  Zillions of formatting and -Wconversion fixes.
@
text
@d2 1
a2 1
   Copyright 1990, 1991, 1993, 1994, 1996, 1999, 2000, 2001
d26 1
a26 1
static boolean scan_960_mach
d35 1
a35 1
static boolean
d41 1
a41 1
  int fail_because_not_80960 = false;
d54 1
a54 1
	return false;
d64 3
a66 3
      /* Sett his to true here.  If a correct matching postfix
	 is detected below it will be reset to false.  */
      fail_because_not_80960 = true;
d70 1
a70 1
    return false;
d73 1
a73 1
    return false;
d83 1
a83 1
    return false;
d85 1
a85 1
    { machine = bfd_mach_i960_kb_sb; fail_because_not_80960 = false; }
d89 1
a89 1
    { machine = bfd_mach_i960_mc; fail_because_not_80960 = false; }
d93 1
a93 1
    { machine = bfd_mach_i960_ca; fail_because_not_80960 = false; }
d95 1
a95 1
    { machine = bfd_mach_i960_ka_sa; fail_because_not_80960 = false; }
d103 1
a103 1
    return false;
d106 1
a106 1
    return false;
d109 1
a109 1
    return true;
d111 1
a111 1
  return false;
d172 7
a178 7
  N(bfd_mach_i960_ka_sa,"i960:ka_sa",false, &arch_info_struct[1]),
  N(bfd_mach_i960_kb_sb,"i960:kb_sb",false, &arch_info_struct[2]),
  N(bfd_mach_i960_mc,   "i960:mc",   false, &arch_info_struct[3]),
  N(bfd_mach_i960_xa,   "i960:xa",   false, &arch_info_struct[4]),
  N(bfd_mach_i960_ca,   "i960:ca",   false, &arch_info_struct[5]),
  N(bfd_mach_i960_jx,   "i960:jx",   false, &arch_info_struct[6]),
  N(bfd_mach_i960_hx,	"i960:hx",   false, 0),
d182 1
a182 1
  N(bfd_mach_i960_core, "i960:core", true, &arch_info_struct[0]);
@


1.6.24.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@d2 1
a2 1
   Copyright 1990, 1991, 1993, 1994, 1996, 1999, 2000, 2001, 2002
d26 1
a26 1
static bfd_boolean scan_960_mach
d35 1
a35 1
static bfd_boolean
d41 1
a41 1
  int fail_because_not_80960 = FALSE;
d54 1
a54 1
	return FALSE;
d64 3
a66 3
      /* Set this to TRUE here.  If a correct matching postfix
	 is detected below it will be reset to FALSE.  */
      fail_because_not_80960 = TRUE;
d70 1
a70 1
    return FALSE;
d73 1
a73 1
    return FALSE;
d83 1
a83 1
    return FALSE;
d85 1
a85 1
    { machine = bfd_mach_i960_kb_sb; fail_because_not_80960 = FALSE; }
d89 1
a89 1
    { machine = bfd_mach_i960_mc; fail_because_not_80960 = FALSE; }
d93 1
a93 1
    { machine = bfd_mach_i960_ca; fail_because_not_80960 = FALSE; }
d95 1
a95 1
    { machine = bfd_mach_i960_ka_sa; fail_because_not_80960 = FALSE; }
d103 1
a103 1
    return FALSE;
d106 1
a106 1
    return FALSE;
d109 1
a109 1
    return TRUE;
d111 1
a111 1
  return FALSE;
d172 7
a178 7
  N(bfd_mach_i960_ka_sa,"i960:ka_sa",FALSE, &arch_info_struct[1]),
  N(bfd_mach_i960_kb_sb,"i960:kb_sb",FALSE, &arch_info_struct[2]),
  N(bfd_mach_i960_mc,   "i960:mc",   FALSE, &arch_info_struct[3]),
  N(bfd_mach_i960_xa,   "i960:xa",   FALSE, &arch_info_struct[4]),
  N(bfd_mach_i960_ca,   "i960:ca",   FALSE, &arch_info_struct[5]),
  N(bfd_mach_i960_jx,   "i960:jx",   FALSE, &arch_info_struct[6]),
  N(bfd_mach_i960_hx,	"i960:hx",   FALSE, 0),
d182 1
a182 1
  N(bfd_mach_i960_core, "i960:core", TRUE, &arch_info_struct[0]);
@


1.6.22.1
log
@2002-12-23  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021223-merge.
@
text
@d2 1
a2 1
   Copyright 1990, 1991, 1993, 1994, 1996, 1999, 2000, 2001, 2002
d26 1
a26 1
static bfd_boolean scan_960_mach
d35 1
a35 1
static bfd_boolean
d41 1
a41 1
  int fail_because_not_80960 = FALSE;
d54 1
a54 1
	return FALSE;
d64 3
a66 3
      /* Set this to TRUE here.  If a correct matching postfix
	 is detected below it will be reset to FALSE.  */
      fail_because_not_80960 = TRUE;
d70 1
a70 1
    return FALSE;
d73 1
a73 1
    return FALSE;
d83 1
a83 1
    return FALSE;
d85 1
a85 1
    { machine = bfd_mach_i960_kb_sb; fail_because_not_80960 = FALSE; }
d89 1
a89 1
    { machine = bfd_mach_i960_mc; fail_because_not_80960 = FALSE; }
d93 1
a93 1
    { machine = bfd_mach_i960_ca; fail_because_not_80960 = FALSE; }
d95 1
a95 1
    { machine = bfd_mach_i960_ka_sa; fail_because_not_80960 = FALSE; }
d103 1
a103 1
    return FALSE;
d106 1
a106 1
    return FALSE;
d109 1
a109 1
    return TRUE;
d111 1
a111 1
  return FALSE;
d172 7
a178 7
  N(bfd_mach_i960_ka_sa,"i960:ka_sa",FALSE, &arch_info_struct[1]),
  N(bfd_mach_i960_kb_sb,"i960:kb_sb",FALSE, &arch_info_struct[2]),
  N(bfd_mach_i960_mc,   "i960:mc",   FALSE, &arch_info_struct[3]),
  N(bfd_mach_i960_xa,   "i960:xa",   FALSE, &arch_info_struct[4]),
  N(bfd_mach_i960_ca,   "i960:ca",   FALSE, &arch_info_struct[5]),
  N(bfd_mach_i960_jx,   "i960:jx",   FALSE, &arch_info_struct[6]),
  N(bfd_mach_i960_hx,	"i960:hx",   FALSE, 0),
d182 1
a182 1
  N(bfd_mach_i960_core, "i960:core", TRUE, &arch_info_struct[0]);
@


1.5
log
@2001-06-24  H.J. Lu  <hjl@@gnu.org>

	* cpu-i960.c (scan_960_mach): Don't modify const char *. Use
	strncasecmp/strcasecmp instead of strncmp/strcmp.
@
text
@d2 1
a2 1
   Copyright 1990, 1991, 1993, 1994, 1996, 1999, 2000
d26 5
d144 1
a144 1
  static CONST unsigned long matrix[MAX_ARCH+1][MAX_ARCH+1] =
a166 1
int bfd_default_scan_num_mach();
@


1.4
log
@Update copyright notices
@
text
@a35 1
  int i;
a37 3
  for (i = 0; i < strlen (string); i ++)
    string[i] = tolower (string[i]);

d39 1
a39 1
  if (strncmp ("i960", string, 4) == 0)
d73 1
a73 1
  else if (strcmp (string, "ka_sa") == 0)
d75 1
a75 1
  else if (strcmp (string, "kb_sb") == 0)
@


1.3
log
@2000-11-16  Kazu Hirata  <kazu@@hxi.com>

	* cpu-a29k.c: Fix formatting.
	* cpu-alpha.c: Likewise.
	* cpu-arm.c: Likewise.
	* cpu-avr.c: Likewise.
	* cpu-d10v.c: Likewise.
	* cpu-h8500.c: Likewise.
	* cpu-hppa.c: Likewise.
	* cpu-i370.c: Likewise.
	* cpu-i386.c: Likewise.
	* cpu-i960.c: Likewise.
	* cpu-ia64-opc.c: Likewise.
	* cpu-ia64.c: Likewise.
	* cpu-m32r.c: Likewise.
	* cpu-m68hc11.c: Likewise.
	* cpu-m68hc12.c: Likewise.
	* cpu-m68k.c: Likewise.
	* cpu-m88k.c: Likewise.
	* cpu-mips.c: Likewise.
	* cpu-ns32k.c: Likewise.
	* cpu-pj.c: Likewise.
	* cpu-powerpc.c: Likewise.
	* cpu-sh.c: Likewise.
	* cpu-sparc.c: Likewise.
	* cpu-tic54x.c: Likewise.
	* cpu-v850.c: Likewise.
	* cpu-vax.c: Likewise.
	* cpu-w65.c: Likewise.
	* cpu-we32k.c: Likewise.
	* cpu-z8k.c: Likewise.
@
text
@d2 2
a3 1
   Copyright (C) 1990, 91, 92, 93, 94, 95, 1996 Free Software Foundation, Inc.
@


1.3.2.1
log
@Update copyright notices.
@
text
@d2 1
a2 2
   Copyright 1990, 1991, 1993, 1994, 1996, 1999, 2000
   Free Software Foundation, Inc.
@


1.2
log
@Accept 80960* machine names (as generated by ieee.c)
@
text
@a20 1

a24 1

d37 1
a37 1
  
d49 1
a49 1
      
d69 1
a69 1
  
d72 1
a72 1
  
d105 1
a105 1
  
d108 1
a108 1
  
a111 2


d123 1
a123 1
	CORE CA          
d127 2
a128 2
     the right is the least restrictive.  
     
d132 2
a133 2
#define CORE	bfd_mach_i960_core  /*1*/  
#define KA 	bfd_mach_i960_ka_sa /*2*/ 
d142 1
a142 1
  static CONST unsigned long matrix[MAX_ARCH+1][MAX_ARCH+1] = 
d155 1
a155 2

  if (a->arch != b->arch || matrix[a->mach][b->mach] == ERROR) 
d159 1
a159 1
  else 
a164 2


d169 2
a170 2
static const bfd_arch_info_type arch_info_struct[] = 
{ 
@


1.1
log
@Initial revision
@
text
@d37 5
d43 4
a46 1
  /* Look for the string i960, or somesuch at the front of the string  */
d48 15
a62 12
  if (strncmp("i960",string,4) == 0) {
    string+=4;
  }
  else {
    /* no match, can be us */
    return false;
  }
  if (string[0] == 0) {
    /* i960 on it's own means core to us*/
    if (ap->mach == bfd_mach_i960_core) return true;
    return false;
  }
d64 6
a69 1
  if (string[0] != ':') {
d71 2
a72 3
  }
  string++;
  if (string[0] == '\0')
d74 1
d82 1
a82 1
  else if (string[1] == '\0' || string[2] != '\0') /* rest are 2-char */
d85 1
a85 1
    machine = bfd_mach_i960_kb_sb;
d89 1
a89 1
    machine = bfd_mach_i960_mc;
d93 1
a93 1
    machine = bfd_mach_i960_ca;
d95 1
a95 1
    machine = bfd_mach_i960_ka_sa;
d104 7
a110 1
  if (machine == ap->mach)   return true;
@


1.1.1.1
log
@19990502 sourceware import
@
text
@@

