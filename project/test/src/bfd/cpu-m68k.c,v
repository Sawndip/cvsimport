head	1.23;
access;
symbols
	sid-snapshot-20180601:1.23
	sid-snapshot-20180501:1.23
	sid-snapshot-20180401:1.23
	sid-snapshot-20180301:1.23
	sid-snapshot-20180201:1.23
	sid-snapshot-20180101:1.23
	sid-snapshot-20171201:1.23
	sid-snapshot-20171101:1.23
	sid-snapshot-20171001:1.23
	sid-snapshot-20170901:1.23
	sid-snapshot-20170801:1.23
	sid-snapshot-20170701:1.23
	sid-snapshot-20170601:1.23
	sid-snapshot-20170501:1.23
	sid-snapshot-20170401:1.23
	sid-snapshot-20170301:1.23
	sid-snapshot-20170201:1.23
	sid-snapshot-20170101:1.23
	sid-snapshot-20161201:1.23
	sid-snapshot-20161101:1.23
	sid-snapshot-20160901:1.23
	sid-snapshot-20160801:1.23
	sid-snapshot-20160701:1.23
	sid-snapshot-20160601:1.23
	sid-snapshot-20160501:1.23
	sid-snapshot-20160401:1.23
	sid-snapshot-20160301:1.23
	sid-snapshot-20160201:1.23
	sid-snapshot-20160101:1.23
	sid-snapshot-20151201:1.23
	sid-snapshot-20151101:1.23
	sid-snapshot-20151001:1.23
	sid-snapshot-20150901:1.23
	sid-snapshot-20150801:1.23
	sid-snapshot-20150701:1.23
	sid-snapshot-20150601:1.23
	sid-snapshot-20150501:1.23
	sid-snapshot-20150401:1.23
	sid-snapshot-20150301:1.23
	sid-snapshot-20150201:1.23
	sid-snapshot-20150101:1.23
	sid-snapshot-20141201:1.23
	sid-snapshot-20141101:1.23
	sid-snapshot-20141001:1.23
	sid-snapshot-20140901:1.23
	sid-snapshot-20140801:1.23
	sid-snapshot-20140701:1.23
	sid-snapshot-20140601:1.23
	sid-snapshot-20140501:1.23
	sid-snapshot-20140401:1.23
	sid-snapshot-20140301:1.23
	sid-snapshot-20140201:1.23
	sid-snapshot-20140101:1.23
	sid-snapshot-20131201:1.23
	sid-snapshot-20131101:1.23
	sid-snapshot-20131001:1.23
	binutils-2_24-branch:1.23.0.4
	binutils-2_24-branchpoint:1.23
	binutils-2_21_1:1.21
	sid-snapshot-20130901:1.23
	gdb_7_6_1-2013-08-30-release:1.23
	sid-snapshot-20130801:1.23
	sid-snapshot-20130701:1.23
	sid-snapshot-20130601:1.23
	sid-snapshot-20130501:1.23
	gdb_7_6-2013-04-26-release:1.23
	sid-snapshot-20130401:1.23
	binutils-2_23_2:1.22
	gdb_7_6-branch:1.23.0.2
	gdb_7_6-2013-03-12-branchpoint:1.23
	sid-snapshot-20130301:1.23
	sid-snapshot-20130201:1.23
	sid-snapshot-20130101:1.22
	sid-snapshot-20121201:1.22
	gdb_7_5_1-2012-11-29-release:1.22
	binutils-2_23_1:1.22
	sid-snapshot-20121101:1.22
	binutils-2_23:1.22
	sid-snapshot-20121001:1.22
	sid-snapshot-20120901:1.22
	gdb_7_5-2012-08-17-release:1.22
	sid-snapshot-20120801:1.22
	binutils-2_23-branch:1.22.0.4
	binutils-2_23-branchpoint:1.22
	gdb_7_5-branch:1.22.0.2
	gdb_7_5-2012-07-18-branchpoint:1.22
	sid-snapshot-20120701:1.22
	sid-snapshot-20120601:1.22
	sid-snapshot-20120501:1.22
	binutils-2_22_branch:1.21.0.18
	gdb_7_4_1-2012-04-26-release:1.21
	sid-snapshot-20120401:1.22
	sid-snapshot-20120301:1.22
	sid-snapshot-20120201:1.22
	gdb_7_4-2012-01-24-release:1.21
	sid-snapshot-20120101:1.21
	gdb_7_4-branch:1.21.0.16
	gdb_7_4-2011-12-13-branchpoint:1.21
	sid-snapshot-20111201:1.21
	binutils-2_22:1.21
	sid-snapshot-20111101:1.21
	sid-snapshot-20111001:1.21
	binutils-2_22-branch:1.21.0.14
	binutils-2_22-branchpoint:1.21
	gdb_7_3_1-2011-09-04-release:1.21
	sid-snapshot-20110901:1.21
	sid-snapshot-20110801:1.21
	gdb_7_3-2011-07-26-release:1.21
	sid-snapshot-20110701:1.21
	sid-snapshot-20110601:1.21
	sid-snapshot-20110501:1.21
	gdb_7_3-branch:1.21.0.12
	gdb_7_3-2011-04-01-branchpoint:1.21
	sid-snapshot-20110401:1.21
	sid-snapshot-20110301:1.21
	sid-snapshot-20110201:1.21
	sid-snapshot-20110101:1.21
	binutils-2_21:1.21
	sid-snapshot-20101201:1.21
	binutils-2_21-branch:1.21.0.10
	binutils-2_21-branchpoint:1.21
	sid-snapshot-20101101:1.21
	sid-snapshot-20101001:1.21
	binutils-2_20_1:1.21
	gdb_7_2-2010-09-02-release:1.21
	sid-snapshot-20100901:1.21
	sid-snapshot-20100801:1.21
	gdb_7_2-branch:1.21.0.8
	gdb_7_2-2010-07-07-branchpoint:1.21
	sid-snapshot-20100701:1.21
	sid-snapshot-20100601:1.21
	sid-snapshot-20100501:1.21
	sid-snapshot-20100401:1.21
	gdb_7_1-2010-03-18-release:1.21
	sid-snapshot-20100301:1.21
	gdb_7_1-branch:1.21.0.6
	gdb_7_1-2010-02-18-branchpoint:1.21
	sid-snapshot-20100201:1.21
	sid-snapshot-20100101:1.21
	gdb_7_0_1-2009-12-22-release:1.21
	sid-snapshot-20091201:1.21
	sid-snapshot-20091101:1.21
	binutils-2_20:1.21
	gdb_7_0-2009-10-06-release:1.21
	sid-snapshot-20091001:1.21
	gdb_7_0-branch:1.21.0.4
	gdb_7_0-2009-09-16-branchpoint:1.21
	arc-sim-20090309:1.20
	binutils-arc-20081103-branch:1.20.0.26
	binutils-arc-20081103-branchpoint:1.20
	binutils-2_20-branch:1.21.0.2
	binutils-2_20-branchpoint:1.21
	sid-snapshot-20090901:1.20
	sid-snapshot-20090801:1.20
	msnyder-checkpoint-072509-branch:1.20.0.24
	msnyder-checkpoint-072509-branchpoint:1.20
	sid-snapshot-20090701:1.20
	dje-cgen-play1-branch:1.20.0.22
	dje-cgen-play1-branchpoint:1.20
	sid-snapshot-20090601:1.20
	sid-snapshot-20090501:1.20
	sid-snapshot-20090401:1.20
	arc-20081103-branch:1.20.0.20
	arc-20081103-branchpoint:1.20
	arc-insight_6_8-branch:1.20.0.18
	arc-insight_6_8-branchpoint:1.20
	insight_6_8-branch:1.20.0.16
	insight_6_8-branchpoint:1.20
	sid-snapshot-20090301:1.20
	binutils-2_19_1:1.20
	sid-snapshot-20090201:1.20
	sid-snapshot-20090101:1.20
	reverse-20081226-branch:1.20.0.14
	reverse-20081226-branchpoint:1.20
	sid-snapshot-20081201:1.20
	multiprocess-20081120-branch:1.20.0.12
	multiprocess-20081120-branchpoint:1.20
	sid-snapshot-20081101:1.20
	binutils-2_19:1.20
	sid-snapshot-20081001:1.20
	reverse-20080930-branch:1.20.0.10
	reverse-20080930-branchpoint:1.20
	binutils-2_19-branch:1.20.0.8
	binutils-2_19-branchpoint:1.20
	sid-snapshot-20080901:1.20
	sid-snapshot-20080801:1.20
	reverse-20080717-branch:1.20.0.6
	reverse-20080717-branchpoint:1.20
	sid-snapshot-20080701:1.20
	msnyder-reverse-20080609-branch:1.20.0.4
	msnyder-reverse-20080609-branchpoint:1.20
	drow-reverse-20070409-branch:1.16.0.2
	drow-reverse-20070409-branchpoint:1.16
	sid-snapshot-20080601:1.20
	sid-snapshot-20080501:1.20
	sid-snapshot-20080403:1.20
	sid-snapshot-20080401:1.20
	gdb_6_8-2008-03-27-release:1.20
	sid-snapshot-20080301:1.20
	gdb_6_8-branch:1.20.0.2
	gdb_6_8-2008-02-26-branchpoint:1.20
	sid-snapshot-20080201:1.20
	sid-snapshot-20080101:1.20
	sid-snapshot-20071201:1.20
	sid-snapshot-20071101:1.20
	gdb_6_7_1-2007-10-29-release:1.19
	gdb_6_7-2007-10-10-release:1.19
	sid-snapshot-20071001:1.20
	gdb_6_7-branch:1.19.0.4
	gdb_6_7-2007-09-07-branchpoint:1.19
	binutils-2_18:1.19
	binutils-2_18-branch:1.19.0.2
	binutils-2_18-branchpoint:1.19
	insight_6_6-20070208-release:1.14
	binutils-csl-coldfire-4_1-32:1.12.2.3
	binutils-csl-sourcerygxx-4_1-32:1.12.2.3
	gdb_6_6-2006-12-18-release:1.14
	binutils-csl-innovasic-fido-3_4_4-33:1.12.2.3
	binutils-csl-sourcerygxx-3_4_4-32:1.8
	binutils-csl-coldfire-4_1-30:1.12.2.2
	binutils-csl-sourcerygxx-4_1-30:1.12.2.2
	binutils-csl-coldfire-4_1-28:1.12.2.2
	binutils-csl-sourcerygxx-4_1-29:1.12.2.3
	binutils-csl-sourcerygxx-4_1-28:1.12.2.2
	gdb_6_6-branch:1.14.0.2
	gdb_6_6-2006-11-15-branchpoint:1.14
	binutils-csl-arm-2006q3-27:1.12.2.2
	binutils-csl-sourcerygxx-4_1-27:1.12.2.2
	binutils-csl-arm-2006q3-26:1.12.2.2
	binutils-csl-sourcerygxx-4_1-26:1.12.2.2
	binutils-csl-sourcerygxx-4_1-25:1.12.2.2
	binutils-csl-sourcerygxx-4_1-24:1.12.2.2
	binutils-csl-sourcerygxx-4_1-23:1.12.2.2
	insight_6_5-20061003-release:1.13
	gdb-csl-symbian-6_4_50_20060226-12:1.11
	binutils-csl-sourcerygxx-4_1-21:1.12.2.2
	binutils-csl-arm-2006q3-21:1.12.2.2
	binutils-csl-sourcerygxx-4_1-22:1.12.2.2
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.12.2.2
	binutils-csl-sourcerygxx-4_1-20:1.12.2.2
	binutils-csl-arm-2006q3-19:1.12.2.2
	binutils-csl-sourcerygxx-4_1-19:1.12.2.2
	binutils-csl-sourcerygxx-4_1-18:1.12.2.2
	binutils-csl-renesas-4_1-9:1.12.2.2
	gdb-csl-sourcerygxx-3_4_4-25:1.10
	binutils-csl-sourcerygxx-3_4_4-25:1.8
	nickrob-async-20060828-mergepoint:1.14
	gdb-csl-symbian-6_4_50_20060226-11:1.11
	binutils-csl-renesas-4_1-8:1.12.2.2
	binutils-csl-renesas-4_1-7:1.12.2.2
	binutils-csl-renesas-4_1-6:1.12.2.2
	gdb-csl-sourcerygxx-4_1-17:1.11
	binutils-csl-sourcerygxx-4_1-17:1.12.2.2
	gdb-csl-20060226-branch-local-2:1.11
	gdb-csl-sourcerygxx-4_1-14:1.11
	binutils-csl-sourcerygxx-4_1-14:1.12.2.1
	binutils-csl-sourcerygxx-4_1-15:1.12.2.1
	gdb-csl-sourcerygxx-4_1-13:1.11
	binutils-csl-sourcerygxx-4_1-13:1.12.2.1
	binutils-2_17:1.13
	gdb-csl-sourcerygxx-4_1-12:1.11
	binutils-csl-sourcerygxx-4_1-12:1.12.2.1
	gdb-csl-sourcerygxx-3_4_4-21:1.11
	binutils-csl-sourcerygxx-3_4_4-21:1.12.2.1
	gdb_6_5-20060621-release:1.13
	binutils-csl-wrs-linux-3_4_4-24:1.8
	binutils-csl-wrs-linux-3_4_4-23:1.8
	gdb-csl-sourcerygxx-4_1-9:1.11
	binutils-csl-sourcerygxx-4_1-9:1.12.2.1
	gdb-csl-sourcerygxx-4_1-8:1.11
	binutils-csl-sourcerygxx-4_1-8:1.12.2.1
	gdb-csl-sourcerygxx-4_1-7:1.11
	binutils-csl-sourcerygxx-4_1-7:1.12.2.1
	gdb-csl-arm-2006q1-6:1.11
	binutils-csl-arm-2006q1-6:1.12.2.1
	gdb-csl-sourcerygxx-4_1-6:1.11
	binutils-csl-sourcerygxx-4_1-6:1.12.2.1
	binutils-csl-wrs-linux-3_4_4-22:1.8
	gdb-csl-symbian-6_4_50_20060226-10:1.11
	gdb-csl-symbian-6_4_50_20060226-9:1.11
	gdb-csl-symbian-6_4_50_20060226-8:1.11
	gdb-csl-coldfire-4_1-11:1.11
	binutils-csl-coldfire-4_1-11:1.12.2.1
	gdb-csl-sourcerygxx-3_4_4-19:1.11
	binutils-csl-sourcerygxx-3_4_4-19:1.12.2.1
	gdb-csl-coldfire-4_1-10:1.11
	gdb_6_5-branch:1.13.0.12
	gdb_6_5-2006-05-14-branchpoint:1.13
	binutils-csl-coldfire-4_1-10:1.12.2.1
	gdb-csl-sourcerygxx-4_1-5:1.11
	binutils-csl-sourcerygxx-4_1-5:1.12.2.1
	nickrob-async-20060513-branch:1.13.0.10
	nickrob-async-20060513-branchpoint:1.13
	gdb-csl-sourcerygxx-4_1-4:1.11
	binutils-csl-sourcerygxx-4_1-4:1.12.2.1
	msnyder-reverse-20060502-branch:1.13.0.8
	msnyder-reverse-20060502-branchpoint:1.13
	binutils-csl-wrs-linux-3_4_4-21:1.8
	gdb-csl-morpho-4_1-4:1.11
	binutils-csl-morpho-4_1-4:1.12.2.1
	gdb-csl-sourcerygxx-3_4_4-17:1.11
	binutils-csl-sourcerygxx-3_4_4-17:1.12.2.1
	binutils-csl-wrs-linux-3_4_4-20:1.8
	readline_5_1-import-branch:1.13.0.6
	readline_5_1-import-branchpoint:1.13
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.11
	binutils-2_17-branch:1.13.0.4
	binutils-2_17-branchpoint:1.13
	gdb-csl-symbian-20060226-branch:1.11.0.6
	gdb-csl-symbian-20060226-branchpoint:1.11
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.11
	msnyder-reverse-20060331-branch:1.13.0.2
	msnyder-reverse-20060331-branchpoint:1.13
	binutils-csl-2_17-branch:1.12.0.2
	binutils-csl-2_17-branchpoint:1.12
	gdb-csl-available-20060303-branch:1.11.0.4
	gdb-csl-available-20060303-branchpoint:1.11
	gdb-csl-20060226-branch:1.11.0.2
	gdb-csl-20060226-branchpoint:1.11
	gdb_6_4-20051202-release:1.10
	msnyder-fork-checkpoint-branch:1.10.0.10
	msnyder-fork-checkpoint-branchpoint:1.10
	gdb-csl-gxxpro-6_3-branch:1.10.0.8
	gdb-csl-gxxpro-6_3-branchpoint:1.10
	gdb_6_4-branch:1.10.0.6
	gdb_6_4-2005-11-01-branchpoint:1.10
	gdb-csl-arm-20051020-branch:1.10.0.4
	gdb-csl-arm-20051020-branchpoint:1.10
	binutils-csl-gxxpro-3_4-branch:1.8.0.14
	binutils-csl-gxxpro-3_4-branchpoint:1.8
	binutils-2_16_1:1.8
	msnyder-tracepoint-checkpoint-branch:1.10.0.2
	msnyder-tracepoint-checkpoint-branchpoint:1.10
	gdb-csl-arm-20050325-2005-q1b:1.8
	binutils-csl-arm-2005q1b:1.8
	binutils-2_16:1.8
	gdb-csl-arm-20050325-2005-q1a:1.8
	binutils-csl-arm-2005q1a:1.8
	csl-arm-20050325-branch:1.8.0.12
	csl-arm-20050325-branchpoint:1.8
	binutils-csl-arm-2005q1-branch:1.8.0.10
	binutils-csl-arm-2005q1-branchpoint:1.8
	binutils-2_16-branch:1.8.0.8
	binutils-2_16-branchpoint:1.8
	csl-arm-2004-q3d:1.8
	gdb_6_3-20041109-release:1.8
	gdb_6_3-branch:1.8.0.4
	gdb_6_3-20041019-branchpoint:1.8
	csl-arm-2004-q3:1.8
	drow_intercu-merge-20040921:1.8
	drow_intercu-merge-20040915:1.8
	jimb-gdb_6_2-e500-branch:1.8.0.6
	jimb-gdb_6_2-e500-branchpoint:1.8
	gdb_6_2-20040730-release:1.8
	gdb_6_2-branch:1.8.0.2
	gdb_6_2-2004-07-10-gmt-branchpoint:1.8
	gdb_6_1_1-20040616-release:1.6
	binutils-2_15:1.6
	binutils-2_15-branchpoint:1.6
	csl-arm-2004-q1a:1.7
	csl-arm-2004-q1:1.6
	gdb_6_1-2004-04-05-release:1.6
	drow_intercu-merge-20040402:1.6
	drow_intercu-merge-20040327:1.6
	ezannoni_pie-20040323-branch:1.6.0.14
	ezannoni_pie-20040323-branchpoint:1.6
	cagney_tramp-20040321-mergepoint:1.6
	cagney_tramp-20040309-branch:1.6.0.12
	cagney_tramp-20040309-branchpoint:1.6
	gdb_6_1-branch:1.6.0.10
	gdb_6_1-2004-03-01-gmt-branchpoint:1.6
	drow_intercu-20040221-branch:1.6.0.8
	drow_intercu-20040221-branchpoint:1.6
	binutils-2_15-branch:1.6.0.6
	cagney_bfdfile-20040213-branch:1.6.0.4
	cagney_bfdfile-20040213-branchpoint:1.6
	drow-cplus-merge-20040208:1.6
	carlton_dictionary-20040126-merge:1.6
	cagney_bigcore-20040122-branch:1.6.0.2
	cagney_bigcore-20040122-branchpoint:1.6
	drow-cplus-merge-20040113:1.6
	csl-arm-2003-q4:1.6
	drow-cplus-merge-20031224:1.6
	drow-cplus-merge-20031220:1.6
	carlton_dictionary-20031215-merge:1.6
	drow-cplus-merge-20031214:1.6
	carlton-dictionary-20031111-merge:1.6
	gdb_6_0-2003-10-04-release:1.5
	kettenis_sparc-20030918-branch:1.5.0.42
	kettenis_sparc-20030918-branchpoint:1.5
	carlton_dictionary-20030917-merge:1.5
	ezannoni_pie-20030916-branchpoint:1.5
	ezannoni_pie-20030916-branch:1.5.0.40
	cagney_x86i386-20030821-branch:1.5.0.38
	cagney_x86i386-20030821-branchpoint:1.5
	carlton_dictionary-20030805-merge:1.5
	carlton_dictionary-20030627-merge:1.5
	gdb_6_0-branch:1.5.0.36
	gdb_6_0-2003-06-23-branchpoint:1.5
	jimb-ppc64-linux-20030613-branch:1.5.0.34
	jimb-ppc64-linux-20030613-branchpoint:1.5
	binutils-2_14:1.5
	cagney_convert-20030606-branch:1.5.0.32
	cagney_convert-20030606-branchpoint:1.5
	cagney_writestrings-20030508-branch:1.5.0.30
	cagney_writestrings-20030508-branchpoint:1.5
	jimb-ppc64-linux-20030528-branch:1.5.0.28
	jimb-ppc64-linux-20030528-branchpoint:1.5
	carlton_dictionary-20030523-merge:1.5
	cagney_fileio-20030521-branch:1.5.0.26
	cagney_fileio-20030521-branchpoint:1.5
	kettenis_i386newframe-20030517-mergepoint:1.5
	jimb-ppc64-linux-20030509-branch:1.5.0.24
	jimb-ppc64-linux-20030509-branchpoint:1.5
	kettenis_i386newframe-20030504-mergepoint:1.5
	carlton_dictionary-20030430-merge:1.5
	binutils-2_14-branch:1.5.0.22
	binutils-2_14-branchpoint:1.5
	kettenis_i386newframe-20030419-branch:1.5.0.20
	kettenis_i386newframe-20030419-branchpoint:1.5
	carlton_dictionary-20030416-merge:1.5
	cagney_frameaddr-20030409-mergepoint:1.5
	kettenis_i386newframe-20030406-branch:1.5.0.18
	kettenis_i386newframe-20030406-branchpoint:1.5
	cagney_frameaddr-20030403-branchpoint:1.5
	cagney_frameaddr-20030403-branch:1.5.0.16
	cagney_framebase-20030330-mergepoint:1.5
	cagney_framebase-20030326-branch:1.5.0.14
	cagney_framebase-20030326-branchpoint:1.5
	cagney_lazyid-20030317-branch:1.5.0.12
	cagney_lazyid-20030317-branchpoint:1.5
	kettenis-i386newframe-20030316-mergepoint:1.5
	offbyone-20030313-branch:1.5.0.10
	offbyone-20030313-branchpoint:1.5
	kettenis-i386newframe-20030308-branch:1.5.0.8
	kettenis-i386newframe-20030308-branchpoint:1.5
	carlton_dictionary-20030305-merge:1.5
	cagney_offbyone-20030303-branch:1.5.0.6
	cagney_offbyone-20030303-branchpoint:1.5
	carlton_dictionary-20030207-merge:1.5
	interps-20030202-branch:1.5.0.4
	interps-20030202-branchpoint:1.5
	cagney-unwind-20030108-branch:1.5.0.2
	cagney-unwind-20030108-branchpoint:1.5
	binutils-2_13_2_1:1.4
	binutils-2_13_2:1.4
	carlton_dictionary-20021223-merge:1.5
	gdb_5_3-2002-12-12-release:1.4
	carlton_dictionary-20021115-merge:1.4
	binutils-2_13_1:1.4
	kseitz_interps-20021105-merge:1.4
	kseitz_interps-20021103-merge:1.4
	drow-cplus-merge-20021020:1.4
	drow-cplus-merge-20021025:1.4
	carlton_dictionary-20021025-merge:1.4
	carlton_dictionary-20021011-merge:1.4
	drow-cplus-branch:1.4.0.30
	drow-cplus-branchpoint:1.4
	kseitz_interps-20020930-merge:1.4
	carlton_dictionary-20020927-merge:1.4
	carlton_dictionary-branch:1.4.0.28
	carlton_dictionary-20020920-branchpoint:1.4
	sid-20020905-branchpoint:1.4
	sid-20020905-branch:1.4.0.26
	gdb_5_3-branch:1.4.0.24
	gdb_5_3-2002-09-04-branchpoint:1.4
	kseitz_interps-20020829-merge:1.4
	cagney_sysregs-20020825-branch:1.4.0.22
	cagney_sysregs-20020825-branchpoint:1.4
	readline_4_3-import-branch:1.4.0.20
	readline_4_3-import-branchpoint:1.4
	binutils-2_13:1.4
	gdb_5_2_1-2002-07-23-release:1.4
	binutils-2_13-branchpoint:1.4
	binutils-2_13-branch:1.4.0.18
	kseitz_interps-20020528-branch:1.4.0.16
	kseitz_interps-20020528-branchpoint:1.4
	cagney_regbuf-20020515-branch:1.4.0.14
	cagney_regbuf-20020515-branchpoint:1.4
	binutils-2_12_1:1.4
	jimb-macro-020506-branch:1.4.0.12
	jimb-macro-020506-branchpoint:1.4
	gdb_5_2-2002-04-29-release:1.4
	binutils-2_12:1.4
	gdb_5_2-branch:1.4.0.10
	gdb_5_2-2002-03-03-branchpoint:1.4
	binutils-2_12-branch:1.4.0.8
	binutils-2_12-branchpoint:1.4
	gdb_5_1_1-2002-01-24-release:1.4
	gdb_5_1_0_1-2002-01-03-release:1.4
	cygnus_cvs_20020108_pre:1.4
	gdb_5_1_0_1-2002-01-03-branch:1.4.0.6
	gdb_5_1_0_1-2002-01-03-branchpoint:1.4
	gdb_5_1-2001-11-21-release:1.4
	gdb_s390-2001-09-26-branch:1.4.0.4
	gdb_s390-2001-09-26-branchpoint:1.4
	gdb_5_1-2001-07-29-branch:1.4.0.2
	gdb_5_1-2001-07-29-branchpoint:1.4
	binutils-2_11_2:1.2.2.2
	binutils-2_11_1:1.2.2.2
	binutils-2_11:1.2
	x86_64versiong3:1.2
	binutils-2_11-branch:1.2.0.2
	insight-precleanup-2001-01-01:1.2
	binutils-2_10_1:1.1.1.1
	binutils-2_10:1.1.1.1
	gdb-premipsmulti-2000-06-06-branch:1.1.1.1.0.6
	gdb-premipsmulti-2000-06-06-branchpoint:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.4
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	binutils-2_10-branch:1.1.1.1.0.2
	binutils-2_10-branchpoint:1.1.1.1
	binutils_latest_snapshot:1.23
	repo-unification-2000-02-06:1.1.1.1
	binu_ss_19990721:1.1.1.1
	binu_ss_19990602:1.1.1.1
	binu_ss_19990502:1.1.1.1
	cygnus:1.1.1;
locks; strict;
comment	@ * @;


1.23
date	2013.01.10.20.03.52;	author hjl;	state Exp;
branches;
next	1.22;

1.22
date	2012.01.31.17.54.35;	author hjl;	state Exp;
branches;
next	1.21;

1.21
date	2009.09.02.07.18.36;	author amodra;	state Exp;
branches;
next	1.20;

1.20
date	2007.09.11.16.07.49;	author kazu;	state Exp;
branches;
next	1.19;

1.19
date	2007.07.03.14.26.40;	author nickc;	state Exp;
branches;
next	1.18;

1.18
date	2007.04.26.14.46.56;	author amodra;	state Exp;
branches;
next	1.17;

1.17
date	2007.04.23.07.51.26;	author nathan;	state Exp;
branches;
next	1.16;

1.16
date	2007.01.08.18.42.36;	author kazu;	state Exp;
branches;
next	1.15;

1.15
date	2006.12.25.22.39.21;	author kazu;	state Exp;
branches;
next	1.14;

1.14
date	2006.07.12.12.46.59;	author rsandifo;	state Exp;
branches;
next	1.13;

1.13
date	2006.03.25.10.24.27;	author rsandifo;	state Exp;
branches
	1.13.4.1;
next	1.12;

1.12
date	2006.03.06.13.42.03;	author nathan;	state Exp;
branches
	1.12.2.1;
next	1.11;

1.11
date	2006.02.07.19.01.09;	author nathan;	state Exp;
branches;
next	1.10;

1.10
date	2005.05.04.15.53.06;	author nickc;	state Exp;
branches;
next	1.9;

1.9
date	2005.05.04.07.19.21;	author nickc;	state Exp;
branches;
next	1.8;

1.8
date	2004.05.05.14.33.13;	author nickc;	state Exp;
branches;
next	1.7;

1.7
date	2004.04.22.10.33.15;	author nickc;	state Exp;
branches;
next	1.6;

1.6
date	2003.10.21.13.28.58;	author nickc;	state Exp;
branches
	1.6.8.1;
next	1.5;

1.5
date	2002.11.30.08.39.36;	author amodra;	state Exp;
branches;
next	1.4;

1.4
date	2001.03.08.21.03.58;	author nickc;	state Exp;
branches
	1.4.28.1
	1.4.30.1;
next	1.3;

1.3
date	2001.03.06.20.15.27;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	2000.11.16.20.48.09;	author kazu;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	99.05.03.07.28.55;	author rth;	state Exp;
branches
	1.1.1.1;
next	;

1.13.4.1
date	2006.07.12.12.55.21;	author rsandifo;	state Exp;
branches;
next	;

1.12.2.1
date	2006.03.21.09.51.28;	author rsandifo;	state Exp;
branches;
next	1.12.2.2;

1.12.2.2
date	2006.07.12.13.05.41;	author rsandifo;	state Exp;
branches;
next	1.12.2.3;

1.12.2.3
date	2006.11.30.14.49.41;	author kazu;	state Exp;
branches;
next	;

1.6.8.1
date	2004.09.16.17.00.18;	author drow;	state Exp;
branches;
next	;

1.4.28.1
date	2002.12.23.19.37.33;	author carlton;	state Exp;
branches;
next	1.4.28.2;

1.4.28.2
date	2003.11.11.23.50.11;	author carlton;	state Exp;
branches;
next	;

1.4.30.1
date	2003.12.14.20.26.37;	author drow;	state Exp;
branches;
next	;

1.2.2.1
date	2001.06.07.03.08.24;	author amodra;	state Exp;
branches;
next	1.2.2.2;

1.2.2.2
date	2001.06.11.10.04.08;	author amodra;	state Exp;
branches;
next	;

1.1.1.1
date	99.05.03.07.28.55;	author rth;	state Exp;
branches;
next	;


desc
@@


1.23
log
@Remove trailing white spaces in bfd

	* aout0.c: Remove trailing white spaces.
	* archive.c: Likewise.
	* archures.c: Likewise.
	* bfd-in.h: Likewise.
	* bfd-in2.h: Likewise.
	* coff-alpha.c: Likewise.
	* coff-i860.c: Likewise.
	* coff-mips.c: Likewise.
	* coff-ppc.c: Likewise.
	* coff-tic80.c: Likewise.
	* coff-x86_64.c: Likewise.
	* coff-z80.c: Likewise.
	* coffcode.h: Likewise.
	* coffgen.c: Likewise.
	* cofflink.c: Likewise.
	* compress.c: Likewise.
	* corefile.c: Likewise.
	* cpu-arm.c: Likewise.
	* cpu-avr.c: Likewise.
	* cpu-bfin.c: Likewise.
	* cpu-cr16.c: Likewise.
	* cpu-cr16c.c: Likewise.
	* cpu-crx.c: Likewise.
	* cpu-h8300.c: Likewise.
	* cpu-i386.c: Likewise.
	* cpu-lm32.c: Likewise.
	* cpu-m68k.c: Likewise.
	* cpu-moxie.c: Likewise.
	* cpu-msp430.c: Likewise.
	* cpu-sh.c: Likewise.
	* cpu-xc16x.c: Likewise.
	* dwarf2.c: Likewise.
	* ecofflink.c: Likewise.
	* ecoffswap.h: Likewise.
	* elf-ifunc.c: Likewise.
	* elf-m10300.c: Likewise.
	* elf-vxworks.c: Likewise.
	* elf32-avr.c: Likewise.
	* elf32-avr.h: Likewise.
	* elf32-cr16.c: Likewise.
	* elf32-cr16c.c: Likewise.
	* elf32-cris.c: Likewise.
	* elf32-crx.c: Likewise.
	* elf32-frv.c: Likewise.
	* elf32-hppa.c: Likewise.
	* elf32-i860.c: Likewise.
	* elf32-ip2k.c: Likewise.
	* elf32-iq2000.c: Likewise.
	* elf32-m32c.c: Likewise.
	* elf32-m68hc1x.c: Likewise.
	* elf32-msp430.c: Likewise.
	* elf32-mt.c: Likewise.
	* elf32-ppc.c: Likewise.
	* elf32-rl78.c: Likewise.
	* elf32-s390.c: Likewise.
	* elf32-score.h: Likewise.
	* elf32-sh-symbian.c: Likewise.
	* elf32-sh.c: Likewise.
	* elf32-spu.c: Likewise.
	* elf32-tic6x.c: Likewise.
	* elf32-v850.c: Likewise.
	* elf32-xc16x.c: Likewise.
	* elf32-xtensa.c: Likewise.
	* elf64-alpha.c: Likewise.
	* elf64-hppa.c: Likewise.
	* elf64-ppc.c: Likewise.
	* elf64-s390.c: Likewise.
	* elfcore.h: Likewise.
	* elflink.c: Likewise.
	* elfxx-mips.c: Likewise.
	* elfxx-sparc.c: Likewise.
	* elfxx-tilegx.c: Likewise.
	* ieee.c: Likewise.
	* libcoff.h: Likewise.
	* libpei.h: Likewise.
	* libxcoff.h: Likewise.
	* linker.c: Likewise.
	* mach-o-i386.c: Likewise.
	* mach-o-target.c: Likewise.
	* mach-o.c: Likewise.
	* mach-o.h: Likewise.
	* mmo.c: Likewise.
	* opncls.c: Likewise.
	* pdp11.c: Likewise.
	* pe-x86_64.c: Likewise.
	* peXXigen.c: Likewise.
	* pef-traceback.h: Likewise.
	* pei-x86_64.c: Likewise.
	* peicode.h: Likewise.
	* plugin.c: Likewise.
	* reloc.c: Likewise.
	* riscix.c: Likewise.
	* section.c: Likewise.
	* som.c: Likewise.
	* syms.c: Likewise.
	* tekhex.c: Likewise.
	* ticoff.h: Likewise.
	* vaxbsd.c: Likewise.
	* xcofflink.c: Likewise.
	* xtensa-isa.c: Likewise.
@
text
@/* BFD library support routines for architectures.
   Copyright 1990, 1991, 1992, 1993, 1994, 1997, 1998, 2000, 2001, 2002,
   2003, 2004, 2005, 2006, 2007 Free Software Foundation, Inc.
   Hacked by Steve Chamberlain of Cygnus Support.

   This file is part of BFD, the Binary File Descriptor library.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
   MA 02110-1301, USA.  */

#include "sysdep.h"
#include "bfd.h"
#include "libbfd.h"
#include "opcode/m68k.h"

static const bfd_arch_info_type *
bfd_m68k_compatible (const bfd_arch_info_type *a,
		     const bfd_arch_info_type *b);

#define N(name, print,d,next)  \
{  32, 32, 8, bfd_arch_m68k, name, "m68k",print,2,d,bfd_m68k_compatible, \
   bfd_default_scan, bfd_arch_default_fill, next, }

static const bfd_arch_info_type arch_info_struct[] =
  {
    N(bfd_mach_m68000,  "m68k:68000", FALSE, &arch_info_struct[1]),
    N(bfd_mach_m68008,  "m68k:68008", FALSE, &arch_info_struct[2]),
    N(bfd_mach_m68010,  "m68k:68010", FALSE, &arch_info_struct[3]),
    N(bfd_mach_m68020,  "m68k:68020", FALSE, &arch_info_struct[4]),
    N(bfd_mach_m68030,  "m68k:68030", FALSE, &arch_info_struct[5]),
    N(bfd_mach_m68040,  "m68k:68040", FALSE, &arch_info_struct[6]),
    N(bfd_mach_m68060,  "m68k:68060", FALSE, &arch_info_struct[7]),
    N(bfd_mach_cpu32,   "m68k:cpu32", FALSE, &arch_info_struct[8]),
    N(bfd_mach_fido,    "m68k:fido",  FALSE, &arch_info_struct[9]),

    /* Various combinations of CF architecture features */
    N(bfd_mach_mcf_isa_a_nodiv, "m68k:isa-a:nodiv",
      FALSE, &arch_info_struct[10]),
    N(bfd_mach_mcf_isa_a, "m68k:isa-a",
      FALSE, &arch_info_struct[11]),
    N(bfd_mach_mcf_isa_a_mac, "m68k:isa-a:mac",
      FALSE, &arch_info_struct[12]),
    N(bfd_mach_mcf_isa_a_emac, "m68k:isa-a:emac",
      FALSE, &arch_info_struct[13]),
    N(bfd_mach_mcf_isa_aplus, "m68k:isa-aplus",
      FALSE, &arch_info_struct[14]),
    N(bfd_mach_mcf_isa_aplus_mac, "m68k:isa-aplus:mac",
      FALSE, &arch_info_struct[15]),
    N(bfd_mach_mcf_isa_aplus_emac, "m68k:isa-aplus:emac",
      FALSE, &arch_info_struct[16]),
    N(bfd_mach_mcf_isa_b_nousp, "m68k:isa-b:nousp",
      FALSE, &arch_info_struct[17]),
    N(bfd_mach_mcf_isa_b_nousp_mac, "m68k:isa-b:nousp:mac",
      FALSE, &arch_info_struct[18]),
    N(bfd_mach_mcf_isa_b_nousp_emac, "m68k:isa-b:nousp:emac",
      FALSE, &arch_info_struct[19]),
    N(bfd_mach_mcf_isa_b, "m68k:isa-b",
      FALSE, &arch_info_struct[20]),
    N(bfd_mach_mcf_isa_b_mac, "m68k:isa-b:mac",
      FALSE, &arch_info_struct[21]),
    N(bfd_mach_mcf_isa_b_emac, "m68k:isa-b:emac",
      FALSE, &arch_info_struct[22]),
    N(bfd_mach_mcf_isa_b_float, "m68k:isa-b:float",
      FALSE, &arch_info_struct[23]),
    N(bfd_mach_mcf_isa_b_float_mac, "m68k:isa-b:float:mac",
      FALSE, &arch_info_struct[24]),
    N(bfd_mach_mcf_isa_b_float_emac, "m68k:isa-b:float:emac",
      FALSE, &arch_info_struct[25]),
    N(bfd_mach_mcf_isa_c, "m68k:isa-c",
      FALSE, &arch_info_struct[26]),
    N(bfd_mach_mcf_isa_c_mac, "m68k:isa-c:mac",
      FALSE, &arch_info_struct[27]),
    N(bfd_mach_mcf_isa_c_emac, "m68k:isa-c:emac",
      FALSE, &arch_info_struct[28]),
    N(bfd_mach_mcf_isa_c_nodiv, "m68k:isa-c:nodiv",
      FALSE, &arch_info_struct[29]),
    N(bfd_mach_mcf_isa_c_nodiv_mac, "m68k:isa-c:nodiv:mac",
      FALSE, &arch_info_struct[30]),
    N(bfd_mach_mcf_isa_c_nodiv_emac, "m68k:isa-c:nodiv:emac",
      FALSE, &arch_info_struct[31]),

    /* Legacy names for CF architectures */
    N(bfd_mach_mcf_isa_a_nodiv, "m68k:5200", FALSE, &arch_info_struct[32]),
    N(bfd_mach_mcf_isa_a_mac,"m68k:5206e", FALSE, &arch_info_struct[33]),
    N(bfd_mach_mcf_isa_a_mac, "m68k:5307", FALSE, &arch_info_struct[34]),
    N(bfd_mach_mcf_isa_b_nousp_mac, "m68k:5407", FALSE, &arch_info_struct[35]),
    N(bfd_mach_mcf_isa_aplus_emac, "m68k:528x", FALSE, &arch_info_struct[36]),
    N(bfd_mach_mcf_isa_aplus_emac, "m68k:521x", FALSE, &arch_info_struct[37]),
    N(bfd_mach_mcf_isa_a_emac, "m68k:5249", FALSE, &arch_info_struct[38]),
    N(bfd_mach_mcf_isa_b_float_emac, "m68k:547x",
      FALSE, &arch_info_struct[39]),
    N(bfd_mach_mcf_isa_b_float_emac, "m68k:548x",
      FALSE, &arch_info_struct[40]),
    N(bfd_mach_mcf_isa_b_float_emac, "m68k:cfv4e", FALSE, 0),
  };

const bfd_arch_info_type bfd_m68k_arch =
  N(0, "m68k", TRUE, &arch_info_struct[0]);

/* Table indexed by bfd_mach_arch number indicating which
   architectural features are supported.  */
static const unsigned m68k_arch_features[] =
{
  0,
  m68000|m68881|m68851,
  m68000|m68881|m68851,
  m68010|m68881|m68851,
  m68020|m68881|m68851,
  m68030|m68881|m68851,
  m68040|m68881|m68851,
  m68060|m68881|m68851,
  cpu32|m68881,
  fido_a|m68881,
  mcfisa_a,
  mcfisa_a|mcfhwdiv,
  mcfisa_a|mcfhwdiv|mcfmac,
  mcfisa_a|mcfhwdiv|mcfemac,
  mcfisa_a|mcfisa_aa|mcfhwdiv|mcfusp,
  mcfisa_a|mcfisa_aa|mcfhwdiv|mcfusp|mcfmac,
  mcfisa_a|mcfisa_aa|mcfhwdiv|mcfusp|mcfemac,
  mcfisa_a|mcfhwdiv|mcfisa_b,
  mcfisa_a|mcfhwdiv|mcfisa_b|mcfmac,
  mcfisa_a|mcfhwdiv|mcfisa_b|mcfemac,
  mcfisa_a|mcfhwdiv|mcfisa_b|mcfusp,
  mcfisa_a|mcfhwdiv|mcfisa_b|mcfusp|mcfmac,
  mcfisa_a|mcfhwdiv|mcfisa_b|mcfusp|mcfemac,
  mcfisa_a|mcfhwdiv|mcfisa_b|mcfusp|cfloat,
  mcfisa_a|mcfhwdiv|mcfisa_b|mcfusp|cfloat|mcfmac,
  mcfisa_a|mcfhwdiv|mcfisa_b|mcfusp|cfloat|mcfemac,
  mcfisa_a|mcfhwdiv|mcfisa_c|mcfusp,
  mcfisa_a|mcfhwdiv|mcfisa_c|mcfusp|mcfmac,
  mcfisa_a|mcfhwdiv|mcfisa_c|mcfusp|mcfemac,
  mcfisa_a|mcfisa_c|mcfusp,
  mcfisa_a|mcfisa_c|mcfusp|mcfmac,
  mcfisa_a|mcfisa_c|mcfusp|mcfemac,
};

/* Return the count of bits set in MASK  */
static unsigned
bit_count (unsigned mask)
{
  unsigned ix;

  for (ix = 0; mask; ix++)
    /* Clear the LSB set */
    mask ^= mask & -mask;
  return ix;
}

/* Return the architectural features supported by MACH */

unsigned
bfd_m68k_mach_to_features (int mach)
{
  if ((unsigned)mach
      >= sizeof (m68k_arch_features) / sizeof (m68k_arch_features[0]))
    mach = 0;
  return m68k_arch_features[mach];
}

/* Return the bfd machine that most closely represents the
   architectural features.  We find the machine with the smallest
   number of additional features.  If there is no such machine, we
   find the one with the smallest number of missing features.  */

int bfd_m68k_features_to_mach (unsigned features)
{
  int superset = 0, subset = 0;
  unsigned extra = 99, missing = 99;
  unsigned ix;

  for (ix = 0;
       ix != sizeof (m68k_arch_features) / sizeof (m68k_arch_features[0]);
       ix++)
    {
      unsigned this_extra, this_missing;

      if (m68k_arch_features[ix] == features)
	return ix;
      this_extra = bit_count (m68k_arch_features[ix] & ~features);
      if (this_extra < extra)
	{
	  extra = this_extra;
	  superset = ix;
	}

      this_missing = bit_count (features & ~m68k_arch_features[ix]);
      if (this_missing < missing)
	{
	  missing = this_missing;
	  superset = ix;
	}
    }
  return superset ? superset : subset;
}

static const bfd_arch_info_type *
bfd_m68k_compatible (const bfd_arch_info_type *a,
		     const bfd_arch_info_type *b)
{
  if (a->arch != b->arch)
    return NULL;

  if (a->bits_per_word != b->bits_per_word)
    return NULL;

  if (!a->mach)
    return b;
  if (!b->mach)
    return a;

  if (a->mach <= bfd_mach_m68060 && b->mach <= bfd_mach_m68060)
    /* Merge m68k machine. */
    return a->mach > b->mach ? a : b;
  else if (a->mach >= bfd_mach_cpu32 && b->mach >= bfd_mach_cpu32)
    {
      /* Merge the machine features.  */
      unsigned features = (bfd_m68k_mach_to_features (a->mach)
			   | bfd_m68k_mach_to_features (b->mach));

      /* CPU32 and Coldfire are incompatible.  */
      if ((~features & (cpu32 | mcfisa_a)) == 0)
	return NULL;

      /* Fido and Coldfire are incompatible.  */
      if ((~features & (fido_a | mcfisa_a)) == 0)
	return NULL;

      /* ISA A+ and ISA B are incompatible.  */
      if ((~features & (mcfisa_aa | mcfisa_b)) == 0)
	return NULL;

      /* ISA B and ISA C are incompatible.  */
      if ((~features & (mcfisa_b | mcfisa_c)) == 0)
	return NULL;

      /* MAC and EMAC code cannot be merged.  */
      if ((~features & (mcfmac | mcfemac)) == 0)
	return NULL;

      /* CPU32 is compatible with Fido except that Fido does not
	 support tbl instructions.  Warn when the user wants to mix
	 the two.  */
      if ((a->mach == bfd_mach_cpu32 && b->mach == bfd_mach_fido)
	  || (a->mach == bfd_mach_fido && b->mach == bfd_mach_cpu32))
	{
	  static int cpu32_fido_mix_warning;
	  if (!cpu32_fido_mix_warning)
	    {
	      cpu32_fido_mix_warning = 1;
	      (*_bfd_error_handler) ("warning: linking CPU32 objects with fido objects");
	    }
	  return bfd_lookup_arch (a->arch,
				  bfd_m68k_features_to_mach (fido_a | m68881));
	}

      return bfd_lookup_arch (a->arch, bfd_m68k_features_to_mach (features));
    }
  else
    /* They are incompatible.  */
    return NULL;
}
@


1.22
log
@Support arch-dependent fill

bfd/

2012-01-31  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/13616
	* archures.c (bfd_arch_info): Add fill.
	(bfd_default_arch_struct): Add bfd_arch_default_fill.
	(bfd_arch_default_fill): New.

	* configure.in: Set bfd version to 2.22.52.
	* configure: Regenerated.

	* cpu-alpha.c: Add bfd_arch_default_fill to bfd_arch_info
	initializer.
	* cpu-arc.c: Likewise.
	* cpu-arm.c: Likewise.
	* cpu-avr.c: Likewise.
	* cpu-bfin.c: Likewise.
	* cpu-cr16.c: Likewise.
	* cpu-cr16c.c: Likewise.
	* cpu-cris.c: Likewise.
	* cpu-crx.c: Likewise.
	* cpu-d10v.c: Likewise.
	* cpu-d30v.c: Likewise.
	* cpu-dlx.c: Likewise.
	* cpu-epiphany.c: Likewise.
	* cpu-fr30.c: Likewise.
	* cpu-frv.c: Likewise.
	* cpu-h8300.c: Likewise.
	* cpu-h8500.c: Likewise.
	* cpu-hppa.c: Likewise.
	* cpu-i370.c: Likewise.
	* cpu-i860.c: Likewise.
	* cpu-i960.c: Likewise.
	* cpu-ia64.c: Likewise.
	* cpu-ip2k.c: Likewise.
	* cpu-iq2000.c: Likewise.
	* cpu-lm32.c: Likewise.
	* cpu-m10200.c: Likewise.
	* cpu-m10300.c: Likewise.
	* cpu-m32c.c: Likewise.
	* cpu-m32r.c: Likewise.
	* cpu-m68hc11.c: Likewise.
	* cpu-m68hc12.c: Likewise.
	* cpu-m68k.c: Likewise.
	* cpu-m88k.c: Likewise.
	* cpu-mcore.c: Likewise.
	* cpu-mep.c: Likewise.
	* cpu-microblaze.c: Likewise.
	* cpu-mips.c: Likewise.
	* cpu-mmix.c: Likewise.
	* cpu-moxie.c: Likewise.
	* cpu-msp430.c: Likewise.
	* cpu-mt.c: Likewise.
	* cpu-ns32k.c: Likewise.
	* cpu-openrisc.c: Likewise.
	* cpu-or32.c: Likewise.
	* cpu-pdp11.c: Likewise.
	* cpu-pj.c: Likewise.
	* cpu-plugin.c: Likewise.
	* cpu-powerpc.c: Likewise.
	* cpu-rl78.c: Likewise.
	* cpu-rs6000.c: Likewise.
	* cpu-rx.c: Likewise.
	* cpu-s390.c: Likewise.
	* cpu-score.c: Likewise.
	* cpu-sh.c: Likewise.
	* cpu-sparc.c: Likewise.
	* cpu-spu.c: Likewise.
	* cpu-tic30.c: Likewise.
	* cpu-tic4x.c: Likewise.
	* cpu-tic54x.c: Likewise.
	* cpu-tic6x.c: Likewise.
	* cpu-tic80.c: Likewise.
	* cpu-tilegx.c: Likewise.
	* cpu-tilepro.c: Likewise.
	* cpu-v850.c: Likewise.
	* cpu-vax.c: Likewise.
	* cpu-w65.c: Likewise.
	* cpu-we32k.c: Likewise.
	* cpu-xc16x.c: Likewise.
	* cpu-xstormy16.c: Likewise.
	* cpu-xtensa.c: Likewise.
	* cpu-z80.c: Likewise.
	* cpu-z8k.c: Likewise.

	* cpu-i386.c: Include "libiberty.h".
	(bfd_arch_i386_fill): New.
	Add bfd_arch_i386_fill to  bfd_arch_info initializer.

	* cpu-k1om.c: Add bfd_arch_i386_fill to  bfd_arch_info initializer.
	* cpu-l1om.c: Likewise.

	* linker.c (default_data_link_order): Call abfd->arch_info->fill
	if fill size is 0.

	* bfd-in2.h: Regenerated.

include/

2012-01-31  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/13616
	* bfdlink.h (bfd_link_order): Update comments on data size.

ld/

2012-01-31  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/13616
	* emulparams/elf32_x86_64.sh: Remove NOP.
	* emulparams/elf_i386.sh: Likewise.
	* emulparams/elf_i386_be.sh: Likewise.
	* emulparams/elf_i386_ldso.sh: Likewise.
	* emulparams/elf_i386_vxworks.sh: Likewise.
	* emulparams/elf_k1om.sh: Likewise.
	* emulparams/elf_l1om.sh: Likewise.
	* emulparams/elf_x86_64.sh: Likewise.

	* ldlang.c (zero_fill): Initialized to 0.

	* ldwrite.c (build_link_order): Set data size to linker odrder
	size when they are the same.

	* scripttempl/elf.sc: Don't specify fill if NOP is undefined.

ld/testsuite/

2012-01-31  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/13616
	* ld-i386/tlsbindesc.dd: Update no-op padding.
	* ld-i386/tlsnopic.dd: Likewise.
	* ld-i386/tlspic.dd: Likewise.
	* ld-x86-64/tlsbin.dd: Likewise.
	* ld-x86-64/tlsbindesc.dd: Likewise.
	* ld-x86-64/tlspic.dd: Likewise.
@
text
@d114 1
a114 1
static const unsigned m68k_arch_features[] = 
d189 1
a189 1
      
d198 1
a198 1
      
d223 1
a223 1
  
@


1.21
log
@update copyright dates
@
text
@d33 2
a34 1
{  32, 32, 8, bfd_arch_m68k, name, "m68k",print,2,d,bfd_m68k_compatible,bfd_default_scan, next, }
@


1.20
log
@bfd/
	* archures.c: Add bfd_mach_mcf_isa_c_nodiv,
	bfd_mach_mcf_isa_c_nodiv_mac & bfd_mach_mcf_isa_c_nodiv_emac.
	* ieee.c (ieee_write_processor): Update coldfire architecture
	list.
	* bfd-in2.h: Rebuilt.
	* cpu-m68k.c (arch_info_struct): Add isa_c nodiv architectures.
	(m68k_arch_features): Likewise.
	* elf32-m68k.c (elf32_m68k_object_p): Add EF_M68K_CF_ISA_C_NODIV.
	(elf32_m68k_print_private_bfd_data): Likewise.

gas/
	* config/tc-m68k.c (m68k_ip): Add mcfisa_c case.
	(m68k_elf_final_processing): Add EF_M68K_CF_ISA_C_NODIV.

include/elf/
	* m68k.h (EF_M68K_CF_ISA_C_NODIV): New.
@
text
@d3 1
a3 1
   2003, 2004, 2006, 2007 Free Software Foundation, Inc.
@


1.19
log
@Switch sources over to use the GPL version 3
@
text
@d86 6
d94 7
a100 7
    N(bfd_mach_mcf_isa_a_nodiv, "m68k:5200", FALSE, &arch_info_struct[29]),
    N(bfd_mach_mcf_isa_a_mac,"m68k:5206e", FALSE, &arch_info_struct[30]),
    N(bfd_mach_mcf_isa_a_mac, "m68k:5307", FALSE, &arch_info_struct[31]),
    N(bfd_mach_mcf_isa_b_nousp_mac, "m68k:5407", FALSE, &arch_info_struct[32]),
    N(bfd_mach_mcf_isa_aplus_emac, "m68k:528x", FALSE, &arch_info_struct[33]),
    N(bfd_mach_mcf_isa_aplus_emac, "m68k:521x", FALSE, &arch_info_struct[34]),
    N(bfd_mach_mcf_isa_a_emac, "m68k:5249", FALSE, &arch_info_struct[35]),
d102 1
a102 1
      FALSE, &arch_info_struct[36]),
d104 1
a104 1
      FALSE, &arch_info_struct[37]),
d144 3
@


1.18
log
@
bfd/
	Many files: Include sysdep.h before bfd.h.
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
binutils/
	* bucumm.h: Split off host dependencies to..
	* sysdep.h: ..here.
	Many files: Include sysdep.h.  Remove duplicate headers and reorder.
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
ld/
	Many files: Include sysdep.h first.  Remove duplicate headers.
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
opcodes/
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
	* ns32k-dis.c: Include sysdep.h first.
@
text
@d10 1
a10 1
   the Free Software Foundation; either version 2 of the License, or
d20 2
a21 1
   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.  */
@


1.17
log
@	gas/testsuite/
	* gas/m68k/br-isaa.s: New.
	* gas/m68k/br-isaa.d: New.
	* gas/m68k/br-isab.s: New.
	* gas/m68k/br-isab.d: New.
	* gas/m68k/br-isac.s: New.
	* gas/m68k/br-isac.d: New.
	* gas/m68k/all.exp: Adjust.

	gas/
	* config/tc-m68k.c (mcf54455_ctrl): New.
	(HAVE_LONG_DISP, HAVE_LONG_CALL, HAVE_LONG_COND): New.
	(m68k_archs): Add isac.
	(m68k_cpus): Add 54455 family.
	(m68k_ip): Split Bg into Bb, Bs, Bg.
	(m68k_elf_final_processing): Add ISA_C.
	* doc/c-m68k.texi (M680x0 Options): Add isac.

	include/opcode/
	* m68k.h (mcfisa_c): New.
	(mcfusp, mcf_mask): Adjust.

	bfd/
	* archures.c (bfd_mach_mcf_isa_c, bfd_mach_mcf_isa_c_mac,
	bfd_mach_mcf_isa_c_emac): New.
	* elf32-m68k.c (ISAC_PLT_ENTRY_SIZE, elf_isac_plt0_entry,
	elf_isac_plt_entry, elf_isac_plt_info): New.
	(elf32_m68k_object_p): Add ISA_C.
	(elf32_m68k_print_private_bfd_data): Print ISA_C.
	(elf32_m68k_get_plt_info): Detect ISA_C.
	* cpu-m68k.c (arch_info): Add ISAC.
	(m68k_arch_features): Likewise,
	(bfd_m68k_compatible): ISAs B & C are not compatible.

	opcodes/
	* m68k-opc.c: Mark mcfisa_c instructions.
@
text
@d3 1
a3 1
   2003, 2004, 2006 Free Software Foundation, Inc.
d22 1
a23 1
#include "sysdep.h"
@


1.16
log
@bfd/
	* archures.c (bfd_mach_cpu32_fido): Rename to bfd_mach_fido.
	* bfd-in2.h: Regenerate.
	* cpu-m68k.c (arch_info_struct): Use bfd_mach_fido instead of
	bfd_mach_cpu32_fido.
	(m68k_arch_features): Use fido_a instead of cpu32.
	(bfd_m68k_compatible): Reject the combination of Fido and
	ColdFire.  Accept the combination of CPU32 and Fido with a
	warning.
	* elf32-m68k.c (elf32_m68k_object_p,
	elf32_m68k_merge_private_bfd_data,
	elf32_m68k_print_private_bfd_data): Treat Fido as an
	architecture by itself.

binutils/
	* readelf.c (get_machine_flags): Treat Fido as an architecture
	by itself.

gas/
	* config/tc-m68k.c (m68k_archs, m68k_cpus): Treat Fido as an
	architecture by itself.
	(m68k_ip): Don't issue a warning for tbl instructions on fido.
	(m68k_elf_final_processing): Treat Fido as an architecture by
	itself.

include/elf/
	* m68k.h (EF_M68K_FIDO): New.
	(EF_M68K_ARCH_MASK): OR EF_M68K_FIDO.
	(EF_M68K_CPU32_FIDO_A, EF_M68K_CPU32_MASK): Remove.

include/opcode/
	* m68k.h (m68010up): OR fido_a.

opcodes/
	* m68k-opc.c (m68k_opcodes): Replace cpu32 with
	cpu32 | fido_a except on tbl instructions.
@
text
@d79 6
d87 7
a93 7
    N(bfd_mach_mcf_isa_a_nodiv, "m68k:5200", FALSE, &arch_info_struct[26]),
    N(bfd_mach_mcf_isa_a_mac,"m68k:5206e", FALSE, &arch_info_struct[27]),
    N(bfd_mach_mcf_isa_a_mac, "m68k:5307", FALSE, &arch_info_struct[28]),
    N(bfd_mach_mcf_isa_b_nousp_mac, "m68k:5407", FALSE, &arch_info_struct[29]),
    N(bfd_mach_mcf_isa_aplus_emac, "m68k:528x", FALSE, &arch_info_struct[30]),
    N(bfd_mach_mcf_isa_aplus_emac, "m68k:521x", FALSE, &arch_info_struct[31]),
    N(bfd_mach_mcf_isa_a_emac, "m68k:5249", FALSE, &arch_info_struct[32]),
d95 1
a95 1
      FALSE, &arch_info_struct[33]),
d97 1
a97 1
      FALSE, &arch_info_struct[34]),
d134 3
d234 4
@


1.15
log
@bfd/
	* archures.c (bfd_mach_cpu32_fido): New.
	(bfd_mach_mcf_isa_a_nodiv, bfd_mach_mcf_isa_a,
	bfd_mach_mcf_isa_a_mac, bfd_mach_mcf_isa_a_emac,
	bfd_mach_mcf_isa_aplus, bfd_mach_mcf_isa_aplus_mac,
	bfd_mach_mcf_isa_aplus_emac, bfd_mach_mcf_isa_b_nousp,
	bfd_mach_mcf_isa_b_nousp_mac, bfd_mach_mcf_isa_b_nousp_emac,
	bfd_mach_mcf_isa_b, bfd_mach_mcf_isa_b_mac,
	bfd_mach_mcf_isa_b_emac, bfd_mach_mcf_isa_b_float,
	bfd_mach_mcf_isa_b_float_mac, bfd_mach_mcf_isa_b_float_emac):
	Increment the defined values.
	* bfd-in2.h: Regenerate.
	* cpu-m68k.c (arch_info_struct): Add en entry for
	bfd_mach_cpu32_fido.
	* elf32-m68k.c (elf32_m68k_object_p): Handle
	EF_M68K_CPU32_FIDO_A.
	(elf32_m68k_merge_private_bfd_data): Use EF_M68K_CPU32_MASK.
	(elf32_m68k_print_private_bfd_data): Handle
	EF_M68K_CPU32_FIDO_A.

binutils/
	* readelf.c (get_machine_flags): Handle EF_M68K_CPU32_FIDO_A.

gas/
	* config/tc-m68k.c (cpu_of_arch): Add fido.
	(m68k_archs, m68k_cpu): Add entries for fido.
	(m68k_elf_final_processing): Handle EF_M68K_CPU32_FIDO_A.

include/elf/
	* m68k.h (EF_M68K_CPU32_FIDO_A, EF_M68K_CPU32_MASK): New.

include/opcode/
	* m68k.h (fido_a): New.
@
text
@d44 1
a44 1
    N(bfd_mach_cpu32_fido, "m68k:fido", FALSE, &arch_info_struct[9]),
d111 1
a111 1
  cpu32|m68881|fido_a,
d217 4
d229 16
@


1.14
log
@bfd/
2006-07-12  Matthew R. Dempsky  <mrd@@alkemio.org>

	* cpu-m68k.c (bfd_m68k_compatible): Handle CPU32.

ld/testsuite/
2006-07-12  Richard Sandiford  <richard@@codesourcery.com>

	* ld-m68k/merge-ok-1c.d: New test.
	* ld-m68k/m68k.exp: Run it.
@
text
@d44 1
d48 1
a48 1
      FALSE, &arch_info_struct[9]),
d50 1
a50 1
      FALSE, &arch_info_struct[10]),
d52 1
a52 1
      FALSE, &arch_info_struct[11]),
d54 1
a54 1
      FALSE, &arch_info_struct[12]),
d56 1
a56 1
      FALSE, &arch_info_struct[13]),
d58 1
a58 1
      FALSE, &arch_info_struct[14]),
d60 1
a60 1
      FALSE, &arch_info_struct[15]),
d62 1
a62 1
      FALSE, &arch_info_struct[16]),
d64 1
a64 1
      FALSE, &arch_info_struct[17]),
d66 1
a66 1
      FALSE, &arch_info_struct[18]),
d68 1
a68 1
      FALSE, &arch_info_struct[19]),
d70 1
a70 1
      FALSE, &arch_info_struct[20]),
d72 1
a72 1
      FALSE, &arch_info_struct[21]),
d74 1
a74 1
      FALSE, &arch_info_struct[22]),
d76 1
a76 1
      FALSE, &arch_info_struct[23]),
d78 1
a78 1
      FALSE, &arch_info_struct[24]),
d81 7
a87 7
    N(bfd_mach_mcf_isa_a_nodiv, "m68k:5200", FALSE, &arch_info_struct[25]),
    N(bfd_mach_mcf_isa_a_mac,"m68k:5206e", FALSE, &arch_info_struct[26]),
    N(bfd_mach_mcf_isa_a_mac, "m68k:5307", FALSE, &arch_info_struct[27]),
    N(bfd_mach_mcf_isa_b_nousp_mac, "m68k:5407", FALSE, &arch_info_struct[28]),
    N(bfd_mach_mcf_isa_aplus_emac, "m68k:528x", FALSE, &arch_info_struct[29]),
    N(bfd_mach_mcf_isa_aplus_emac, "m68k:521x", FALSE, &arch_info_struct[30]),
    N(bfd_mach_mcf_isa_a_emac, "m68k:5249", FALSE, &arch_info_struct[31]),
d89 1
a89 1
      FALSE, &arch_info_struct[32]),
d91 1
a91 1
      FALSE, &arch_info_struct[33]),
d111 1
d207 1
a207 5
  else if (a->mach == bfd_mach_cpu32 && b->mach == bfd_mach_cpu32)
    /* CPU32 is compatible with itself. */
    return a;
  else if (a->mach >= bfd_mach_mcf_isa_a_nodiv
	   && b->mach >= bfd_mach_mcf_isa_a_nodiv)
d209 1
a209 1
      /* Merge cf machine.  */
d213 4
@


1.13
log
@bfd/
	* cpu-m68k.c (bfd_m68k_compatible): Treat ISA A+ and ISA B code as
	incompatible.  Likewise MAC and EMAC code.
	* elf32-m68k.c (elf32_m68k_merge_private_bfd_data): Use
	bfd_get_compatible to set the new bfd architecture.  Rely on it
	to detect incompatibilities.

gas/
	* config/tc-m68k.c (m68k_cpus): Change cpu_cf5208 entries to use
	mcfemac instead of mcfmac.

ld/testsuite/
	* ld-m68k/merge-error-1a.s, ld-m68k/merge-error-1b.s,
	* ld-m68k/merge-error-1a.d, ld-m68k/merge-error-1b.d,
	* ld-m68k/merge-error-1c.d, ld-m68k/merge-error-1d.d,
	* ld-m68k/merge-error-1e.d, ld-m68k/merge-ok-1a.d,
	* ld-m68k/merge-ok-1b.d: New tests.
	* ld-m68k/m68k.exp: Run them.
@
text
@d205 3
@


1.13.4.1
log
@bfd/
2006-07-12  Matthew R. Dempsky  <mrd@@alkemio.org>

	* cpu-m68k.c (bfd_m68k_compatible): Handle CPU32.

ld/testsuite/
2006-07-12  Richard Sandiford  <richard@@codesourcery.com>

	* ld-m68k/merge-ok-1c.d: New test.
	* ld-m68k/m68k.exp: Run it.
@
text
@a204 3
  else if (a->mach == bfd_mach_cpu32 && b->mach == bfd_mach_cpu32)
    /* CPU32 is compatible with itself. */
    return a;
@


1.12
log
@	bfd:
	* archures.c (bfd_mach_mcf_isa_a_nodiv, bfd_mach_mcf_isa_b_nousp):
	New.  Adjust other variants.
	(bfd_default_scan): Update.
	* bfd-in2.h: Rebuilt.
	* cpu-m68k.c: Adjust.
	(bfd_m68k_compatible): New. Use it for architectures.
	* elf32-m68k.c (elf32_m68k_object_p): Adjust.
	(elf32_m68k_merge_private_bfd_data): Adjust.  Correct isa-a/b
	mismatch.
	(elf32_m68k_print_private_bfd_data): Adjust.
	* ieee.c (ieee_write_processor): Adjust.

	binutils:
	* readelf.c (get_machine_flags): Adjust.

	gas:
	* config/tc-m68k.c (m68k_extensions): Allow 'float' on both m68k
	and cf.
	(m68k_ip): <case 'J'> Check we have some control regs.
	(md_parse_option): Allow raw arch switch.
	(m68k_init_arch): Better detection of arch/cpu mismatch.  Detect
	whether 68881 or cfloat was meant by -mfloat.
	(md_show_usage): Adjust extension display.
	(m68k_elf_final_processing): Adjust.

	gas/testsuite:
	* gas/m68k/arch-cpu-1.s: Tweak.
	* gas/m68k/arch-cpu-1.d: Tweak.

	include/elf:
	* m68k.h (EF_M68K_ISA_MASK, EF_M68K_ISA_A,
	EF_M68K_ISA_A_PLUS, EF_M68K_ISA_B, EF_M68K_ISA_C): Adjust.
	(EF_M68K_ISA_A_NODIV, EF_M68K_ISA_B_NOUSP): New.
	(EF_M68K_HW_DIV, EF_M68K_USP): Remove.
	(EF_M68K_MAC, EF_M68K_EMAC, EF_M68K_FLOAT): Adjust.
	(EF_M68K_EMAC_B): New.

	ld/testsuite:
	* ld-m68k: New tests.
@
text
@a210 1
      unsigned machine = bfd_m68k_features_to_mach (features);
d212 9
a220 1
      return bfd_lookup_arch (a->arch, machine);
@


1.12.2.1
log
@bfd/
	* cpu-m68k.c (bfd_m68k_compatible): Treat ISA A+ and ISA B code as
	incompatible.  Likewise MAC and EMAC code.
	* elf32-m68k.c (elf32_m68k_merge_private_bfd_data): Use
	bfd_get_compatible to set the new bfd architecture.  Rely on it
	to detect incompatibilities.

gas/
	* config/tc-m68k.c (m68k_cpus): Change cpu_cf5208 entries to use
	mcfemac instead of mcfmac.

ld/testsuite/
	* ld-m68k/merge-error-1a.s, ld-m68k/merge-error-1b.s,
	* ld-m68k/merge-error-1a.d, ld-m68k/merge-error-1b.d,
	* ld-m68k/merge-error-1c.d, ld-m68k/merge-error-1d.d,
	* ld-m68k/merge-error-1e.d, ld-m68k/merge-ok-1a.d,
	* ld-m68k/merge-ok-1b.d: New tests.
	* ld-m68k/m68k.exp: Run them.
@
text
@d211 1
d213 1
a213 9
      /* ISA A+ and ISA B are incompatible.  */
      if ((~features & (mcfisa_aa | mcfisa_b)) == 0)
	return NULL;

      /* MAC and EMAC code cannot be merged.  */
      if ((~features & (mcfmac | mcfemac)) == 0)
	return NULL;

      return bfd_lookup_arch (a->arch, bfd_m68k_features_to_mach (features));
@


1.12.2.2
log
@bfd/
2006-07-12  Matthew R. Dempsky  <mrd@@alkemio.org>

	* cpu-m68k.c (bfd_m68k_compatible): Handle CPU32.

ld/testsuite/
2006-07-12  Richard Sandiford  <richard@@codesourcery.com>

	* ld-m68k/merge-ok-1c.d: New test.
	* ld-m68k/m68k.exp: Run it.
@
text
@a204 3
  else if (a->mach == bfd_mach_cpu32 && b->mach == bfd_mach_cpu32)
    /* CPU32 is compatible with itself. */
    return a;
@


1.12.2.3
log
@	bfd/
	* archures.c (bfd_mach_cpu32_fido): New.
	(bfd_mach_mcf_isa_a_nodiv, bfd_mach_mcf_isa_a,
	bfd_mach_mcf_isa_a_mac, bfd_mach_mcf_isa_a_emac,
	bfd_mach_mcf_isa_aplus, bfd_mach_mcf_isa_aplus_mac,
	bfd_mach_mcf_isa_aplus_emac, bfd_mach_mcf_isa_b_nousp,
	bfd_mach_mcf_isa_b_nousp_mac, bfd_mach_mcf_isa_b_nousp_emac,
	bfd_mach_mcf_isa_b, bfd_mach_mcf_isa_b_mac,
	bfd_mach_mcf_isa_b_emac, bfd_mach_mcf_isa_b_float,
	bfd_mach_mcf_isa_b_float_mac, bfd_mach_mcf_isa_b_float_emac):
	Increment the defined values.
	* cpu-m68k.c (arch_info_struct): Add en entry for
	bfd_mach_cpu32_fido.
	(m68k_arch_features): Add an entry corresponding to
	bfd_mach_cpu32_fido.
	(bfd_m68k_compatible): Handle bfd_mach_cpu32_fido.
	* elf32-m68k.c (elf32_m68k_object_p): Handle
	EF_M68K_CPU32_FIDO_A.
	(elf32_m68k_merge_private_bfd_data): Use EF_M68K_CPU32_MASK.
	(elf32_m68k_print_private_bfd_data): Handle
	EF_M68K_CPU32_FIDO_A.

	binutils/
	* readelf.c (get_machine_flags): Handle EF_M68K_CPU32_FIDO_A.

	gas/
	* config/tc-m68k.c (m68k_elf_final_processing): Handle
	EF_M68K_CPU32_FIDO_A.

	include/
	* include/elf/m68k.h (EF_M68K_CPU32_FIDO_A,
	EF_M68K_CPU32_MASK): New.
@
text
@a43 1
    N(bfd_mach_cpu32_fido, "m68k:fido", FALSE, &arch_info_struct[9]),
d47 2
d50 1
a50 1
    N(bfd_mach_mcf_isa_a, "m68k:isa-a",
d52 1
a52 1
    N(bfd_mach_mcf_isa_a_mac, "m68k:isa-a:mac",
d54 1
a54 1
    N(bfd_mach_mcf_isa_a_emac, "m68k:isa-a:emac",
d56 1
a56 1
    N(bfd_mach_mcf_isa_aplus, "m68k:isa-aplus",
d58 1
a58 1
    N(bfd_mach_mcf_isa_aplus_mac, "m68k:isa-aplus:mac",
d60 1
a60 1
    N(bfd_mach_mcf_isa_aplus_emac, "m68k:isa-aplus:emac",
d62 1
a62 1
    N(bfd_mach_mcf_isa_b_nousp, "m68k:isa-b:nousp",
d64 1
a64 1
    N(bfd_mach_mcf_isa_b_nousp_mac, "m68k:isa-b:nousp:mac",
d66 1
a66 1
    N(bfd_mach_mcf_isa_b_nousp_emac, "m68k:isa-b:nousp:emac",
d68 1
a68 1
    N(bfd_mach_mcf_isa_b, "m68k:isa-b",
d70 1
a70 1
    N(bfd_mach_mcf_isa_b_mac, "m68k:isa-b:mac",
d72 1
a72 1
    N(bfd_mach_mcf_isa_b_emac, "m68k:isa-b:emac",
d74 1
a74 1
    N(bfd_mach_mcf_isa_b_float, "m68k:isa-b:float",
d76 1
a76 1
    N(bfd_mach_mcf_isa_b_float_mac, "m68k:isa-b:float:mac",
a77 2
    N(bfd_mach_mcf_isa_b_float_emac, "m68k:isa-b:float:emac",
      FALSE, &arch_info_struct[25]),
d80 7
a86 7
    N(bfd_mach_mcf_isa_a_nodiv, "m68k:5200", FALSE, &arch_info_struct[26]),
    N(bfd_mach_mcf_isa_a_mac,"m68k:5206e", FALSE, &arch_info_struct[27]),
    N(bfd_mach_mcf_isa_a_mac, "m68k:5307", FALSE, &arch_info_struct[28]),
    N(bfd_mach_mcf_isa_b_nousp_mac, "m68k:5407", FALSE, &arch_info_struct[29]),
    N(bfd_mach_mcf_isa_aplus_emac, "m68k:528x", FALSE, &arch_info_struct[30]),
    N(bfd_mach_mcf_isa_aplus_emac, "m68k:521x", FALSE, &arch_info_struct[31]),
    N(bfd_mach_mcf_isa_a_emac, "m68k:5249", FALSE, &arch_info_struct[32]),
d88 2
a90 2
    N(bfd_mach_mcf_isa_b_float_emac, "m68k:548x",
      FALSE, &arch_info_struct[34]),
a109 1
  cpu32|m68881|fido_a,
d205 5
a209 1
  else if (a->mach >= bfd_mach_cpu32 && b->mach >= bfd_mach_cpu32)
d211 1
a211 1
      /* Merge the machine features.  */
a214 4
      /* CPU32 and Coldfire are incompatible.  */
      if ((~features & (cpu32 | mcfisa_a)) == 0)
	return NULL;

@


1.11
log
@	* bfd/archures.c (bfd_mach_mcf5200, bfd_mach_mcf5206e,
	bfd_mach_mcf5307, bfd_mach_mcf5407, bfd_mach_mcf528x,
	bfd_mach_mcfv4e, bfd_mach_mcf521x, bfd_mach_mcf5249,
	bfd_mach_mcf547x, bfd_mach_mcf548x): Remove.
	(bfd_mach_mcf_isa_a, bfd_mach_mcf_isa_a_div,
	bfd_mach_mcf_isa_a_div_mac, bfd_mach_mcf_isa_a_div_emac,
	bfd_mach_mcf_isa_aplus, bfd_mach_mcf_isa_aplus_mac,
	bfd_mach_mcf_isa_aplus_emac, bfd_mach_mcf_isa_aplus_usp,
	bfd_mach_mcf_isa_aplus_usp_mac, bfd_mach_mcf_isa_aplus_usp_emac,
	bfd_mach_mcf_isa_b, bfd_mach_mcf_isa_b_mac, bfd_mach_mcf_isa_b_emac,
	bfd_mach_mcf_isa_b_usp_float, bfd_mach_mcf_isa_b_usp_float_mac,
	bfd_mach_mcf_isa_b_usp_float_emac): New.
	(bfd_default_scan): Update coldfire mapping.
	* bfd/bfd-in.h (bfd_m68k_mach_to_features,
	bfd_m68k_features_to_mach): Declare.
	* bfd/bfd-in2.h: Rebuilt.
	* bfd/cpu-m68k.c (arch_info_struct): Add new coldfire machines,
	adjust legacy names.
	(m68k_arch_features): New.
	(bfd_m68k_mach_to_features,
	bfd_m68k_features_to_mach): Define.
	* bfd/elf32-m68k.c (elf32_m68k_object_p): New.
	(elf32_m68k_merge_private_bfd_data): Merge the CF EF flags.
	(elf32_m68k_print_private_bfd_data): Print the CF EF flags.
	(elf_backend_object_p): Define.
	* bfd/ieee.c (ieee_write_processor): Update coldfire machines.
	* bfd/libbfd.h: Rebuilt.

	* gas/config/tc-m68k.c (mcf5208_control_regs, mcf5213_control_regs,
	mcf5329_control_regs): New.
	(not_current_architecture, selected_arch, selected_cpu): New.
	(m68k_archs, m68k_extensions): New.
	(archs): Renamed to ...
	(m68k_cpus): ... here.  Adjust.
	(n_arches): Remove.
	(md_pseudo_table): Add arch and cpu directives.
	(find_cf_chip, m68k_ip): Adjust table scanning.
	(no_68851, no_68881): Remove.
	(md_assemble): Lazily initialize.
	(select_control_regs): Adjust cpu names. Add 5208, 5213, 5329.
	(md_init_after_args): Move functionality to m68k_init_arch.
	(mri_chip): Adjust table scanning.
	(md_parse_option): Reimplement 'm' processing to add -march & -mcpu
	options with saner parsing.
	(m68k_lookup_cpu, m68k_set_arch, m68k_set_cpu, m68k_set_extension,
	m68k_init_arch): New.
	(s_m68k_cpu, s_m68k_arch): New.
	(md_show_usage): Adjust.
	(m68k_elf_final_processing): Set CF EF flags.
	* gas/config/tc-m68k.h (m68k_init_after_args): Remove.
	(tc_init_after_args): Remove.
	* gas/doc/c-m68k.texi (M68K-Opts): Document -march, -mcpu options.
	(M68k-Directives): Document .arch and .cpu directives.

	* gas/testsuite/gas/m68k/all.exp: Add arch-cpu-1 test.
	* gas/testsuite/gas/m68k/arch-cpu-1.[sd]: New.

	* include/elf/m68k.h (EF_CPU32, EF_M68000, EF_CFV4E): Rename to ...
	(EF_M68K_CPU32, EF_M68K_M68000, EF_M68K_CFV4E): ... here.
	(EF_M68K_ISA_MASK, EF_M68K_ISA_A, EF_M68K_M68K_ISA_A_PLUS,
	EF_M68K_ISA_B, EF_M68K_HW_DIV, EF_M68K_MAC_MASK, EF_M68K_MAC,
	EF_M68K_EMAC, EF_M68K_USP, EF_M68K_FLOAT): New.

	* include/opcode/m68k.h (m68008, m68ec030, m68882): Remove.
	(m68k_mask): New.
	(cpu_m68k, cpu_cf): New.
	(mcf5200, mcf5206e, mcf521x, mcf5249, mcf528x, mcf5307, mcf5407,
	mcf5470, mcf5480): Rename to cpu_<foo>. Add m680x0 variants.

	* opcodes/m68k-dis.c (print_insn_m68k): Use
	bfd_m68k_mach_to_features.

	* binutils/readelf.c (get_machine_flags): Add logic for EF_M68K flags.
@
text
@d27 4
d32 1
a32 1
{  32, 32, 8, bfd_arch_m68k, name, "m68k",print,2,d,bfd_default_compatible,bfd_default_scan, next, }
d46 2
a48 2
      FALSE, &arch_info_struct[9]),
    N(bfd_mach_mcf_isa_a_div, "m68k:isa-a:div",
d50 1
a50 1
    N(bfd_mach_mcf_isa_a_div_mac, "m68k:isa-a:div:mac",
d52 1
a52 1
    N(bfd_mach_mcf_isa_a_div_emac, "m68k:isa-a:div:emac",
d54 1
a54 1
    N(bfd_mach_mcf_isa_aplus, "m68k:isa-a+",
d56 1
a56 1
    N(bfd_mach_mcf_isa_aplus_mac, "m68k:isa-a+:mac",
d58 1
a58 1
    N(bfd_mach_mcf_isa_aplus_emac, "m68k:isa-a+:emac",
d60 1
a60 1
    N(bfd_mach_mcf_isa_aplus_usp, "m68k:isa-a+:usp",
d62 1
a62 1
    N(bfd_mach_mcf_isa_aplus_usp_mac, "m68k:isa-a+:usp:mac",
d64 1
a64 1
    N(bfd_mach_mcf_isa_aplus_usp_emac, "m68k:isa-a+:usp:emac",
d72 1
a72 1
    N(bfd_mach_mcf_isa_b_usp_float, "m68k:isa-b:usp:float",
d74 1
a74 1
    N(bfd_mach_mcf_isa_b_usp_float_mac, "m68k:isa-b:usp:float:mac",
d76 1
a76 1
    N(bfd_mach_mcf_isa_b_usp_float_emac, "m68k:isa-b:usp:float:emac",
d80 8
a87 10
    N(bfd_mach_mcf_isa_a, "m68k:5200",  FALSE, &arch_info_struct[25]),
    N(bfd_mach_mcf_isa_a_div_mac,"m68k:5206e", FALSE, &arch_info_struct[26]),
    N(bfd_mach_mcf_isa_a_div_mac, "m68k:5307",  FALSE, &arch_info_struct[27]),
    N(bfd_mach_mcf_isa_b_mac, "m68k:5407",  FALSE, &arch_info_struct[28]),
    N(bfd_mach_mcf_isa_aplus_usp_emac, "m68k:528x",
      FALSE, &arch_info_struct[29]),
    N(bfd_mach_mcf_isa_aplus_usp_emac, "m68k:521x",
      FALSE, &arch_info_struct[30]),
    N(bfd_mach_mcf_isa_a_div_emac, "m68k:5249",  FALSE, &arch_info_struct[31]),
    N(bfd_mach_mcf_isa_b_usp_float_emac, "m68k:547x",
d89 1
a89 1
    N(bfd_mach_mcf_isa_b_usp_float_emac, "m68k:548x",
d91 1
a91 1
    N(bfd_mach_mcf_isa_b_usp_float_emac,  "m68k:cfv4e", FALSE, 0),
a113 3
  mcfisa_a|mcfisa_aa|mcfhwdiv,
  mcfisa_a|mcfisa_aa|mcfhwdiv|mcfmac,
  mcfisa_a|mcfisa_aa|mcfhwdiv|mcfemac,
d120 3
d186 33
@


1.10
log
@Update the address and phone number of the FSF organization in the GPL notices
@
text
@d3 1
a3 1
   2003, 2004 Free Software Foundation, Inc.
d25 1
d38 52
a89 12
    N(bfd_mach_cpu32,   "m68k:cpu32", FALSE, &arch_info_struct[7]),
    N(bfd_mach_mcf5200, "m68k:5200",  FALSE, &arch_info_struct[8]),
    N(bfd_mach_mcf5206e,"m68k:5206e", FALSE, &arch_info_struct[9]),
    N(bfd_mach_mcf5307, "m68k:5307",  FALSE, &arch_info_struct[10]),
    N(bfd_mach_mcf5407, "m68k:5407",  FALSE, &arch_info_struct[11]),
    N(bfd_mach_m68060,  "m68k:68060", FALSE, &arch_info_struct[12]),
    N(bfd_mach_mcf528x, "m68k:528x",  FALSE, &arch_info_struct[13]),
    N(bfd_mach_mcf521x, "m68k:521x",  FALSE, &arch_info_struct[14]),
    N(bfd_mach_mcf5249, "m68k:5249",  FALSE, &arch_info_struct[15]),
    N(bfd_mach_mcf547x, "m68k:547x",  FALSE, &arch_info_struct[16]),
    N(bfd_mach_mcf548x, "m68k:548x",  FALSE, &arch_info_struct[17]),
    N(bfd_mach_mcfv4e,  "m68k:cfv4e", FALSE, 0),
d94 90
@


1.9
log
@Update the FSF address in the copyright/GPL notice
@
text
@d20 1
a20 1
   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02110-1301, USA.  */
@


1.8
log
@Add support for 521x,5249,547x,548x.
@
text
@d20 1
a20 1
   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
@


1.7
log
@Add support for ColdFire MAC instructions and tidy up support for other m68k
variants.
@
text
@d44 5
a48 1
    N(bfd_mach_mcfv4e, "m68k:cfv4e",  FALSE, 0),
@


1.6
log
@Add ColfFire v4 support
@
text
@d3 1
a3 1
   2003 Free Software Foundation, Inc.
d43 2
a44 1
    N(bfd_mach_mcf528x, "m68k:528x",  FALSE, 0),
@


1.6.8.1
log
@Merge mainline to intercu branch - 2004-09-15
@
text
@d3 1
a3 1
   2003, 2004 Free Software Foundation, Inc.
d43 1
a43 6
    N(bfd_mach_mcf528x, "m68k:528x",  FALSE, &arch_info_struct[13]),
    N(bfd_mach_mcf521x, "m68k:521x",  FALSE, &arch_info_struct[14]),
    N(bfd_mach_mcf5249, "m68k:5249",  FALSE, &arch_info_struct[15]),
    N(bfd_mach_mcf547x, "m68k:547x",  FALSE, &arch_info_struct[16]),
    N(bfd_mach_mcf548x, "m68k:548x",  FALSE, &arch_info_struct[17]),
    N(bfd_mach_mcfv4e,  "m68k:cfv4e", FALSE, 0),
@


1.5
log
@s/boolean/bfd_boolean/ s/true/TRUE/ s/false/FALSE/.  Simplify
comparisons of bfd_boolean vars with TRUE/FALSE.  Formatting.
@
text
@d2 2
a3 2
   Copyright 1990, 1991, 1992, 1993, 1994, 1997, 1998, 2000, 2001, 2002
   Free Software Foundation, Inc.
d6 1
a6 1
This file is part of BFD, the Binary File Descriptor library.
d8 13
a20 13
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
d31 13
a43 12
    N(bfd_mach_m68000, "m68k:68000", FALSE, &arch_info_struct[1]),
    N(bfd_mach_m68008, "m68k:68008", FALSE, &arch_info_struct[2]),
    N(bfd_mach_m68010, "m68k:68010", FALSE, &arch_info_struct[3]),
    N(bfd_mach_m68020, "m68k:68020", FALSE, &arch_info_struct[4]),
    N(bfd_mach_m68030, "m68k:68030", FALSE, &arch_info_struct[5]),
    N(bfd_mach_m68040, "m68k:68040", FALSE, &arch_info_struct[6]),
    N(bfd_mach_cpu32,  "m68k:cpu32", FALSE, &arch_info_struct[7]),
    N(bfd_mach_mcf5200,"m68k:5200",  FALSE, &arch_info_struct[8]),
    N(bfd_mach_mcf5206e,"m68k:5206e",FALSE, &arch_info_struct[9]),
    N(bfd_mach_mcf5307, "m68k:5307", FALSE, &arch_info_struct[10]),
    N(bfd_mach_mcf5407, "m68k:5407", FALSE, &arch_info_struct[11]),
    N(bfd_mach_m68060, "m68k:68060", FALSE, 0),
@


1.4
log
@Update copyright notices
@
text
@d2 1
a2 1
   Copyright 1990, 1991, 1992, 1993, 1994, 1997, 1998, 2000, 2001
d31 12
a42 12
    N(bfd_mach_m68000, "m68k:68000", false, &arch_info_struct[1]),
    N(bfd_mach_m68008, "m68k:68008", false, &arch_info_struct[2]),
    N(bfd_mach_m68010, "m68k:68010", false, &arch_info_struct[3]),
    N(bfd_mach_m68020, "m68k:68020", false, &arch_info_struct[4]),
    N(bfd_mach_m68030, "m68k:68030", false, &arch_info_struct[5]),
    N(bfd_mach_m68040, "m68k:68040", false, &arch_info_struct[6]),
    N(bfd_mach_cpu32,  "m68k:cpu32", false, &arch_info_struct[7]),
    N(bfd_mach_mcf5200,"m68k:5200",  false, &arch_info_struct[8]),
    N(bfd_mach_mcf5206e,"m68k:5206e",false, &arch_info_struct[9]),
    N(bfd_mach_mcf5307, "m68k:5307", false, &arch_info_struct[10]),
    N(bfd_mach_mcf5407, "m68k:5407", false, &arch_info_struct[11]),
    N(bfd_mach_m68060, "m68k:68060", false, 0),
d46 1
a46 1
  N(0, "m68k", true, &arch_info_struct[0]);
@


1.4.30.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@d2 2
a3 2
   Copyright 1990, 1991, 1992, 1993, 1994, 1997, 1998, 2000, 2001, 2002,
   2003 Free Software Foundation, Inc.
d6 1
a6 1
   This file is part of BFD, the Binary File Descriptor library.
d8 13
a20 13
   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
d31 12
a42 13
    N(bfd_mach_m68000,  "m68k:68000", FALSE, &arch_info_struct[1]),
    N(bfd_mach_m68008,  "m68k:68008", FALSE, &arch_info_struct[2]),
    N(bfd_mach_m68010,  "m68k:68010", FALSE, &arch_info_struct[3]),
    N(bfd_mach_m68020,  "m68k:68020", FALSE, &arch_info_struct[4]),
    N(bfd_mach_m68030,  "m68k:68030", FALSE, &arch_info_struct[5]),
    N(bfd_mach_m68040,  "m68k:68040", FALSE, &arch_info_struct[6]),
    N(bfd_mach_cpu32,   "m68k:cpu32", FALSE, &arch_info_struct[7]),
    N(bfd_mach_mcf5200, "m68k:5200",  FALSE, &arch_info_struct[8]),
    N(bfd_mach_mcf5206e,"m68k:5206e", FALSE, &arch_info_struct[9]),
    N(bfd_mach_mcf5307, "m68k:5307",  FALSE, &arch_info_struct[10]),
    N(bfd_mach_mcf5407, "m68k:5407",  FALSE, &arch_info_struct[11]),
    N(bfd_mach_m68060,  "m68k:68060", FALSE, &arch_info_struct[12]),
    N(bfd_mach_mcf528x, "m68k:528x",  FALSE, 0),
d46 1
a46 1
  N(0, "m68k", TRUE, &arch_info_struct[0]);
@


1.4.28.1
log
@2002-12-23  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021223-merge.
@
text
@d2 1
a2 1
   Copyright 1990, 1991, 1992, 1993, 1994, 1997, 1998, 2000, 2001, 2002
d31 12
a42 12
    N(bfd_mach_m68000, "m68k:68000", FALSE, &arch_info_struct[1]),
    N(bfd_mach_m68008, "m68k:68008", FALSE, &arch_info_struct[2]),
    N(bfd_mach_m68010, "m68k:68010", FALSE, &arch_info_struct[3]),
    N(bfd_mach_m68020, "m68k:68020", FALSE, &arch_info_struct[4]),
    N(bfd_mach_m68030, "m68k:68030", FALSE, &arch_info_struct[5]),
    N(bfd_mach_m68040, "m68k:68040", FALSE, &arch_info_struct[6]),
    N(bfd_mach_cpu32,  "m68k:cpu32", FALSE, &arch_info_struct[7]),
    N(bfd_mach_mcf5200,"m68k:5200",  FALSE, &arch_info_struct[8]),
    N(bfd_mach_mcf5206e,"m68k:5206e",FALSE, &arch_info_struct[9]),
    N(bfd_mach_mcf5307, "m68k:5307", FALSE, &arch_info_struct[10]),
    N(bfd_mach_mcf5407, "m68k:5407", FALSE, &arch_info_struct[11]),
    N(bfd_mach_m68060, "m68k:68060", FALSE, 0),
d46 1
a46 1
  N(0, "m68k", TRUE, &arch_info_struct[0]);
@


1.4.28.2
log
@2003-11-11  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton-dictionary-20031111-merge.
@
text
@d2 2
a3 2
   Copyright 1990, 1991, 1992, 1993, 1994, 1997, 1998, 2000, 2001, 2002,
   2003 Free Software Foundation, Inc.
d6 1
a6 1
   This file is part of BFD, the Binary File Descriptor library.
d8 13
a20 13
   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
d31 12
a42 13
    N(bfd_mach_m68000,  "m68k:68000", FALSE, &arch_info_struct[1]),
    N(bfd_mach_m68008,  "m68k:68008", FALSE, &arch_info_struct[2]),
    N(bfd_mach_m68010,  "m68k:68010", FALSE, &arch_info_struct[3]),
    N(bfd_mach_m68020,  "m68k:68020", FALSE, &arch_info_struct[4]),
    N(bfd_mach_m68030,  "m68k:68030", FALSE, &arch_info_struct[5]),
    N(bfd_mach_m68040,  "m68k:68040", FALSE, &arch_info_struct[6]),
    N(bfd_mach_cpu32,   "m68k:cpu32", FALSE, &arch_info_struct[7]),
    N(bfd_mach_mcf5200, "m68k:5200",  FALSE, &arch_info_struct[8]),
    N(bfd_mach_mcf5206e,"m68k:5206e", FALSE, &arch_info_struct[9]),
    N(bfd_mach_mcf5307, "m68k:5307",  FALSE, &arch_info_struct[10]),
    N(bfd_mach_mcf5407, "m68k:5407",  FALSE, &arch_info_struct[11]),
    N(bfd_mach_m68060,  "m68k:68060", FALSE, &arch_info_struct[12]),
    N(bfd_mach_mcf528x, "m68k:528x",  FALSE, 0),
@


1.3
log
@Rest of the changes for Coldfire V4.
@
text
@d2 1
a2 1
   Copyright (C) 1990, 91, 92, 93, 94, 95, 97, 1998, 2001
@


1.2
log
@2000-11-16  Kazu Hirata  <kazu@@hxi.com>

	* cpu-a29k.c: Fix formatting.
	* cpu-alpha.c: Likewise.
	* cpu-arm.c: Likewise.
	* cpu-avr.c: Likewise.
	* cpu-d10v.c: Likewise.
	* cpu-h8500.c: Likewise.
	* cpu-hppa.c: Likewise.
	* cpu-i370.c: Likewise.
	* cpu-i386.c: Likewise.
	* cpu-i960.c: Likewise.
	* cpu-ia64-opc.c: Likewise.
	* cpu-ia64.c: Likewise.
	* cpu-m32r.c: Likewise.
	* cpu-m68hc11.c: Likewise.
	* cpu-m68hc12.c: Likewise.
	* cpu-m68k.c: Likewise.
	* cpu-m88k.c: Likewise.
	* cpu-mips.c: Likewise.
	* cpu-ns32k.c: Likewise.
	* cpu-pj.c: Likewise.
	* cpu-powerpc.c: Likewise.
	* cpu-sh.c: Likewise.
	* cpu-sparc.c: Likewise.
	* cpu-tic54x.c: Likewise.
	* cpu-v850.c: Likewise.
	* cpu-vax.c: Likewise.
	* cpu-w65.c: Likewise.
	* cpu-we32k.c: Likewise.
	* cpu-z8k.c: Likewise.
@
text
@d2 1
a2 1
   Copyright (C) 1990, 91, 92, 93, 94, 95, 97, 1998
d30 14
a43 10
{
  N(bfd_mach_m68000, "m68k:68000", false, &arch_info_struct[1]),
  N(bfd_mach_m68008, "m68k:68008", false, &arch_info_struct[2]),
  N(bfd_mach_m68010, "m68k:68010", false, &arch_info_struct[3]),
  N(bfd_mach_m68020, "m68k:68020", false, &arch_info_struct[4]),
  N(bfd_mach_m68030, "m68k:68030", false, &arch_info_struct[5]),
  N(bfd_mach_m68040, "m68k:68040", false, &arch_info_struct[6]),
  N(bfd_mach_cpu32,  "m68k:cpu32", false, &arch_info_struct[7]),
  N(bfd_mach_m68060, "m68k:68060", false, 0),
};
@


1.2.2.1
log
@Update copyright notices.
@
text
@d2 1
a2 1
   Copyright 1990, 1991, 1992, 1993, 1994, 1997, 1998, 2000, 2001
@


1.2.2.2
log
@Merge from mainline.
@
text
@d30 10
a39 14
  {
    N(bfd_mach_m68000, "m68k:68000", false, &arch_info_struct[1]),
    N(bfd_mach_m68008, "m68k:68008", false, &arch_info_struct[2]),
    N(bfd_mach_m68010, "m68k:68010", false, &arch_info_struct[3]),
    N(bfd_mach_m68020, "m68k:68020", false, &arch_info_struct[4]),
    N(bfd_mach_m68030, "m68k:68030", false, &arch_info_struct[5]),
    N(bfd_mach_m68040, "m68k:68040", false, &arch_info_struct[6]),
    N(bfd_mach_cpu32,  "m68k:cpu32", false, &arch_info_struct[7]),
    N(bfd_mach_mcf5200,"m68k:5200",  false, &arch_info_struct[8]),
    N(bfd_mach_mcf5206e,"m68k:5206e",false, &arch_info_struct[9]),
    N(bfd_mach_mcf5307, "m68k:5307", false, &arch_info_struct[10]),
    N(bfd_mach_mcf5407, "m68k:5407", false, &arch_info_struct[11]),
    N(bfd_mach_m68060, "m68k:68060", false, 0),
  };
@


1.1
log
@Initial revision
@
text
@d30 1
a30 1
{ 
@


1.1.1.1
log
@19990502 sourceware import
@
text
@@

