head	1.13;
access;
symbols
	gdb_6_3-20041109-release:1.12
	gdb_6_3-branch:1.12.0.60
	gdb_6_3-20041019-branchpoint:1.12
	csl-arm-2004-q3:1.12
	drow_intercu-merge-20040921:1.12
	drow_intercu-merge-20040915:1.12
	jimb-gdb_6_2-e500-branch:1.12.0.62
	jimb-gdb_6_2-e500-branchpoint:1.12
	gdb_6_2-20040730-release:1.12
	gdb_6_2-branch:1.12.0.58
	gdb_6_2-2004-07-10-gmt-branchpoint:1.12
	gdb_6_1_1-20040616-release:1.12
	binutils-2_15:1.12
	binutils-2_15-branchpoint:1.12
	csl-arm-2004-q1a:1.12
	csl-arm-2004-q1:1.12
	gdb_6_1-2004-04-05-release:1.12
	drow_intercu-merge-20040402:1.12
	drow_intercu-merge-20040327:1.12
	ezannoni_pie-20040323-branch:1.12.0.56
	ezannoni_pie-20040323-branchpoint:1.12
	cagney_tramp-20040321-mergepoint:1.12
	cagney_tramp-20040309-branch:1.12.0.54
	cagney_tramp-20040309-branchpoint:1.12
	gdb_6_1-branch:1.12.0.52
	gdb_6_1-2004-03-01-gmt-branchpoint:1.12
	drow_intercu-20040221-branch:1.12.0.50
	drow_intercu-20040221-branchpoint:1.12
	binutils-2_15-branch:1.12.0.48
	cagney_bfdfile-20040213-branch:1.12.0.46
	cagney_bfdfile-20040213-branchpoint:1.12
	drow-cplus-merge-20040208:1.12
	carlton_dictionary-20040126-merge:1.12
	cagney_bigcore-20040122-branch:1.12.0.44
	cagney_bigcore-20040122-branchpoint:1.12
	drow-cplus-merge-20040113:1.12
	csl-arm-2003-q4:1.12
	drow-cplus-merge-20031224:1.12
	drow-cplus-merge-20031220:1.12
	carlton_dictionary-20031215-merge:1.12
	drow-cplus-merge-20031214:1.12
	carlton-dictionary-20031111-merge:1.12
	gdb_6_0-2003-10-04-release:1.12
	kettenis_sparc-20030918-branch:1.12.0.42
	kettenis_sparc-20030918-branchpoint:1.12
	carlton_dictionary-20030917-merge:1.12
	ezannoni_pie-20030916-branchpoint:1.12
	ezannoni_pie-20030916-branch:1.12.0.40
	cagney_x86i386-20030821-branch:1.12.0.38
	cagney_x86i386-20030821-branchpoint:1.12
	carlton_dictionary-20030805-merge:1.12
	carlton_dictionary-20030627-merge:1.12
	gdb_6_0-branch:1.12.0.36
	gdb_6_0-2003-06-23-branchpoint:1.12
	jimb-ppc64-linux-20030613-branch:1.12.0.34
	jimb-ppc64-linux-20030613-branchpoint:1.12
	binutils-2_14:1.12
	cagney_convert-20030606-branch:1.12.0.32
	cagney_convert-20030606-branchpoint:1.12
	cagney_writestrings-20030508-branch:1.12.0.30
	cagney_writestrings-20030508-branchpoint:1.12
	jimb-ppc64-linux-20030528-branch:1.12.0.28
	jimb-ppc64-linux-20030528-branchpoint:1.12
	carlton_dictionary-20030523-merge:1.12
	cagney_fileio-20030521-branch:1.12.0.26
	cagney_fileio-20030521-branchpoint:1.12
	kettenis_i386newframe-20030517-mergepoint:1.12
	jimb-ppc64-linux-20030509-branch:1.12.0.24
	jimb-ppc64-linux-20030509-branchpoint:1.12
	kettenis_i386newframe-20030504-mergepoint:1.12
	carlton_dictionary-20030430-merge:1.12
	binutils-2_14-branch:1.12.0.22
	binutils-2_14-branchpoint:1.12
	kettenis_i386newframe-20030419-branch:1.12.0.20
	kettenis_i386newframe-20030419-branchpoint:1.12
	carlton_dictionary-20030416-merge:1.12
	cagney_frameaddr-20030409-mergepoint:1.12
	kettenis_i386newframe-20030406-branch:1.12.0.18
	kettenis_i386newframe-20030406-branchpoint:1.12
	cagney_frameaddr-20030403-branchpoint:1.12
	cagney_frameaddr-20030403-branch:1.12.0.16
	cagney_framebase-20030330-mergepoint:1.12
	cagney_framebase-20030326-branch:1.12.0.14
	cagney_framebase-20030326-branchpoint:1.12
	cagney_lazyid-20030317-branch:1.12.0.12
	cagney_lazyid-20030317-branchpoint:1.12
	kettenis-i386newframe-20030316-mergepoint:1.12
	offbyone-20030313-branch:1.12.0.10
	offbyone-20030313-branchpoint:1.12
	kettenis-i386newframe-20030308-branch:1.12.0.8
	kettenis-i386newframe-20030308-branchpoint:1.12
	carlton_dictionary-20030305-merge:1.12
	cagney_offbyone-20030303-branch:1.12.0.6
	cagney_offbyone-20030303-branchpoint:1.12
	carlton_dictionary-20030207-merge:1.12
	interps-20030202-branch:1.12.0.4
	interps-20030202-branchpoint:1.12
	cagney-unwind-20030108-branch:1.12.0.2
	cagney-unwind-20030108-branchpoint:1.12
	binutils-2_13_2_1:1.9
	binutils-2_13_2:1.9
	carlton_dictionary-20021223-merge:1.12
	gdb_5_3-2002-12-12-release:1.10
	carlton_dictionary-20021115-merge:1.10
	binutils-2_13_1:1.9
	kseitz_interps-20021105-merge:1.10
	kseitz_interps-20021103-merge:1.10
	drow-cplus-merge-20021020:1.10
	drow-cplus-merge-20021025:1.10
	carlton_dictionary-20021025-merge:1.10
	carlton_dictionary-20021011-merge:1.10
	drow-cplus-branch:1.10.0.12
	drow-cplus-branchpoint:1.10
	kseitz_interps-20020930-merge:1.10
	carlton_dictionary-20020927-merge:1.10
	carlton_dictionary-branch:1.10.0.10
	carlton_dictionary-20020920-branchpoint:1.10
	sid-20020905-branchpoint:1.10
	sid-20020905-branch:1.10.0.8
	gdb_5_3-branch:1.10.0.6
	gdb_5_3-2002-09-04-branchpoint:1.10
	kseitz_interps-20020829-merge:1.10
	cagney_sysregs-20020825-branch:1.10.0.4
	cagney_sysregs-20020825-branchpoint:1.10
	readline_4_3-import-branch:1.10.0.2
	readline_4_3-import-branchpoint:1.10
	binutils-2_13:1.9
	gdb_5_2_1-2002-07-23-release:1.8
	binutils-2_13-branchpoint:1.9
	binutils-2_13-branch:1.9.0.2
	kseitz_interps-20020528-branch:1.8.0.10
	kseitz_interps-20020528-branchpoint:1.8
	cagney_regbuf-20020515-branch:1.8.0.8
	cagney_regbuf-20020515-branchpoint:1.8
	binutils-2_12_1:1.8
	jimb-macro-020506-branch:1.8.0.6
	jimb-macro-020506-branchpoint:1.8
	gdb_5_2-2002-04-29-release:1.8
	binutils-2_12:1.8
	gdb_5_2-branch:1.8.0.4
	gdb_5_2-2002-03-03-branchpoint:1.8
	binutils-2_12-branch:1.8.0.2
	binutils-2_12-branchpoint:1.8
	gdb_5_1_1-2002-01-24-release:1.7
	gdb_5_1_0_1-2002-01-03-release:1.7
	cygnus_cvs_20020108_pre:1.8
	gdb_5_1_0_1-2002-01-03-branch:1.7.0.6
	gdb_5_1_0_1-2002-01-03-branchpoint:1.7
	gdb_5_1-2001-11-21-release:1.7
	gdb_s390-2001-09-26-branch:1.7.0.4
	gdb_s390-2001-09-26-branchpoint:1.7
	gdb_5_1-2001-07-29-branch:1.7.0.2
	gdb_5_1-2001-07-29-branchpoint:1.7
	binutils-2_11_2:1.6.2.1
	binutils-2_11_1:1.6.2.1
	binutils-2_11:1.6
	x86_64versiong3:1.6
	binutils-2_11-branch:1.6.0.2
	insight-precleanup-2001-01-01:1.5
	binutils-2_10_1:1.4
	binutils-2_10:1.4
	gdb-premipsmulti-2000-06-06-branch:1.5.0.4
	gdb-premipsmulti-2000-06-06-branchpoint:1.5
	gdb_5_0-2000-05-19-release:1.5
	gdb_4_18_2-2000-05-18-release:1.5
	gdb_4_95_1-2000-05-11-snapshot:1.5
	gdb_4_95_0-2000-04-27-snapshot:1.5
	gdb_5_0-2000-04-10-branch:1.5.0.2
	gdb_5_0-2000-04-10-branchpoint:1.5
	binutils-2_10-branch:1.4.0.2
	binutils-2_10-branchpoint:1.4
	binutils_latest_snapshot:1.12
	repo-unification-2000-02-06:1.4
	binu_ss_19990721:1.4
	binu_ss_19990602:1.3
	binu_ss_19990502:1.1.1.1
	cygnus:1.1.1;
locks; strict;
comment	@ * @;


1.13
date	2004.11.04.15.54.38;	author drow;	state dead;
branches;
next	1.12;

1.12
date	2002.11.30.08.39.39;	author amodra;	state Exp;
branches;
next	1.11;

1.11
date	2002.11.28.11.55.43;	author amodra;	state Exp;
branches;
next	1.10;

1.10
date	2002.07.23.12.34.35;	author amodra;	state Exp;
branches
	1.10.10.1
	1.10.12.1;
next	1.9;

1.9
date	2002.05.31.02.28.53;	author amodra;	state Exp;
branches;
next	1.8;

1.8
date	2001.08.25.09.47.35;	author nickc;	state Exp;
branches
	1.8.8.1
	1.8.10.1;
next	1.7;

1.7
date	2001.03.08.21.04.01;	author nickc;	state Exp;
branches;
next	1.6;

1.6
date	2001.01.03.22.53.38;	author kazu;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	2000.04.08.00.10.49;	author nickc;	state Exp;
branches;
next	1.4;

1.4
date	99.07.12.10.29.38;	author ian;	state Exp;
branches;
next	1.3;

1.3
date	99.05.29.11.05.22;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	99.05.27.07.41.14;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	99.05.03.07.28.57;	author rth;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.05.03.07.28.57;	author rth;	state Exp;
branches;
next	;

1.6.2.1
date	2001.06.07.03.08.25;	author amodra;	state Exp;
branches;
next	;

1.8.8.1
date	2002.06.15.16.42.38;	author cagney;	state Exp;
branches;
next	;

1.8.10.1
date	2002.06.20.01.30.45;	author kseitz;	state Exp;
branches;
next	1.8.10.2;

1.8.10.2
date	2002.08.09.18.34.16;	author kseitz;	state Exp;
branches;
next	;

1.10.10.1
date	2002.12.23.19.37.49;	author carlton;	state Exp;
branches;
next	;

1.10.12.1
date	2003.12.14.20.26.44;	author drow;	state Exp;
branches;
next	;


desc
@@


1.13
log
@./
	* configure.in (arm-*-oabi*, thumb-*-oabi*): Remove.
	* configure: Regenerated.
bfd/
	* Makefile.am (BFD32_BACKENDS, BFD32_BACKENDS_CFILES): Replace
	elfarm-nabi with elf32-arm.  Remove elfarm-oabi.
	(elf32-arm.lo): Replace elfarm-nabi.lo rule.  Remove elf32-arm.h
	dependency.
	* config.bfd: Move arm-*-oabi* and thumb-*-oabi* from obsolete list
	to a new removed list.  Remove normal configuration stanzas.
	* configure.in: (bfd_elf32_bigarm_vec, bfd_elf32_bigarm_symbian_vec)
	(bfd_elf32_littlearm_symbian_vec, bfd_elf32_littlearm_vec): Replace
	elfarm-nabi.lo with elf32-arm.lo.
	(bfd_elf32_bigarm_oabi_vec, bfd_elf32_littlearm_oabi_vec): Remove.
	* elf32-arm.c: Renamed from elfarm-nabi.c.  Inline elf32-arm.h.
	* elf32-arm.h: Remove.
	* elfarm-oabi.c: Remove.
	* targets.c (_bfd_target_vector): Remove bfd_elf32_bigarm_oabi_vec
	and bfd_elf32_littlearm_oabi_vec.
	* aclocal.m4, Makefile.in, configure, doc/Makefile.in: Regenerated.
gas/
	* configure.in: Remove arm-*-oabi and thumb-*-oabi.
	* config/tc-arm.c (target_oabi): Delete.
	(md_apply_fix3, elf32_arm_target_format): Remove target_oabi checks.
	(arm_opts): Remove moabi.
	* doc/as.texinfo (Overview): Remove documentation of -moabi.
	* doc/c-arm.texi (ARM Options): Likewise.
	* configure: Regenerated.
ld/
	* Makefile.am (ALL_EMULATIONS): Remove earmelf_oabi.o.
	(earmelf_oabi.c): Remove rule.
	* configure.tgt: Remove arm-*-oabi and thumb-*-oabi.
	* emulparams/armelf_oabi.sh, emultempl/armelf_oabi.em: Delete files.
	* Makefile.in: Regenerated.
@
text
@/* 32-bit ELF support for ARM old abi option.
   Copyright 1999, 2000, 2001, 2002 Free Software Foundation, Inc.

   This file is part of BFD, the Binary File Descriptor library.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */

#define OLD_ARM_ABI
#define bfd_elf32_arm_allocate_interworking_sections \
	bfd_elf32_arm_oabi_allocate_interworking_sections
#define bfd_elf32_arm_get_bfd_for_interworking \
	bfd_elf32_arm_oabi_get_bfd_for_interworking
#define bfd_elf32_arm_process_before_allocation \
	bfd_elf32_arm_oabi_process_before_allocation
#define bfd_elf32_arm_add_glue_sections_to_bfd \
	bfd_elf32_arm_oabi_add_glue_sections_to_bfd

#include "elf/arm.h"
#include "bfd.h"
#include "sysdep.h"
#include "libbfd.h"
#include "elf-bfd.h"

#ifndef NUM_ELEM
#define NUM_ELEM(a) (sizeof (a) / sizeof (a)[0])
#endif

#define TARGET_LITTLE_SYM               bfd_elf32_littlearm_oabi_vec
#define TARGET_LITTLE_NAME              "elf32-littlearm-oabi"
#define TARGET_BIG_SYM                  bfd_elf32_bigarm_oabi_vec
#define TARGET_BIG_NAME                 "elf32-bigarm-oabi"

#define elf_info_to_howto               elf32_arm_info_to_howto
#define elf_info_to_howto_rel           0

#define ARM_ELF_ABI_VERSION		0
#define ARM_ELF_OS_ABI_VERSION		0

static reloc_howto_type * find_howto                  PARAMS ((unsigned int));
static void               elf32_arm_info_to_howto     PARAMS ((bfd *, arelent *, Elf_Internal_Rela *));
static reloc_howto_type * elf32_arm_reloc_type_lookup PARAMS ((bfd *, bfd_reloc_code_real_type));

static reloc_howto_type elf32_arm_howto_table[] =
  {
    /* No relocation.  */
    HOWTO (R_ARM_NONE,		/* type */
	   0,			/* rightshift */
	   0,			/* size (0 = byte, 1 = short, 2 = long) */
	   0,			/* bitsize */
	   FALSE,		/* pc_relative */
	   0,			/* bitpos */
	   complain_overflow_dont,	/* complain_on_overflow */
	   bfd_elf_generic_reloc,	/* special_function */
	   "R_ARM_NONE",	/* name */
	   FALSE,		/* partial_inplace */
	   0,			/* src_mask */
	   0,			/* dst_mask */
	   FALSE),		/* pcrel_offset */

    HOWTO (R_ARM_PC24,		/* type */
	   2,			/* rightshift */
	   2,			/* size (0 = byte, 1 = short, 2 = long) */
	   24,			/* bitsize */
	   TRUE,		/* pc_relative */
	   0,			/* bitpos */
	   complain_overflow_signed,	/* complain_on_overflow */
	   bfd_elf_generic_reloc,	/* special_function */
	   "R_ARM_PC24",	/* name */
	   FALSE,		/* partial_inplace */
	   0x00ffffff,		/* src_mask */
	   0x00ffffff,		/* dst_mask */
	   TRUE),			/* pcrel_offset */

    /* 32 bit absolute.  */
    HOWTO (R_ARM_ABS32,		/* type */
	   0,			/* rightshift */
	   2,			/* size (0 = byte, 1 = short, 2 = long) */
	   32,			/* bitsize */
	   FALSE,		/* pc_relative */
	   0,			/* bitpos */
	   complain_overflow_bitfield,	/* complain_on_overflow */
	   bfd_elf_generic_reloc,	/* special_function */
	   "R_ARM_ABS32",	/* name */
	   FALSE,		/* partial_inplace */
	   0xffffffff,		/* src_mask */
	   0xffffffff,		/* dst_mask */
	   FALSE),		/* pcrel_offset */

    /* Standard 32bit pc-relative reloc.  */
    HOWTO (R_ARM_REL32,		/* type */
	   0,			/* rightshift */
	   2,			/* size (0 = byte, 1 = short, 2 = long) */
	   32,			/* bitsize */
	   TRUE,		/* pc_relative */
	   0,			/* bitpos */
	   complain_overflow_bitfield,	/* complain_on_overflow */
	   bfd_elf_generic_reloc,	/* special_function */
	   "R_ARM_REL32",	/* name */
	   FALSE,		/* partial_inplace */
	   0xffffffff,		/* src_mask */
	   0xffffffff,		/* dst_mask */
	   TRUE),		/* pcrel_offset */

    /* 8 bit absolute.  */
    HOWTO (R_ARM_ABS8,		/* type */
	   0,			/* rightshift */
	   0,			/* size (0 = byte, 1 = short, 2 = long) */
	   8,			/* bitsize */
	   FALSE,		/* pc_relative */
	   0,			/* bitpos */
	   complain_overflow_bitfield,	/* complain_on_overflow */
	   bfd_elf_generic_reloc,	/* special_function */
	   "R_ARM_ABS8",	/* name */
	   FALSE,		/* partial_inplace */
	   0x000000ff,		/* src_mask */
	   0x000000ff,		/* dst_mask */
	   FALSE),		/* pcrel_offset */

    /* 16 bit absolute.  */
    HOWTO (R_ARM_ABS16,		/* type */
	   0,			/* rightshift */
	   1,			/* size (0 = byte, 1 = short, 2 = long) */
	   16,			/* bitsize */
	   FALSE,		/* pc_relative */
	   0,			/* bitpos */
	   complain_overflow_bitfield,	/* complain_on_overflow */
	   bfd_elf_generic_reloc,	/* special_function */
	   "R_ARM_ABS16",	/* name */
	   FALSE,		/* partial_inplace */
	   0,			/* src_mask */
	   0,			/* dst_mask */
	   FALSE),		/* pcrel_offset */

    /* 12 bit absolute.  */
    HOWTO (R_ARM_ABS12,		/* type */
	   0,			/* rightshift */
	   2,			/* size (0 = byte, 1 = short, 2 = long) */
	   12,			/* bitsize */
	   FALSE,		/* pc_relative */
	   0,			/* bitpos */
	   complain_overflow_bitfield,	/* complain_on_overflow */
	   bfd_elf_generic_reloc,	/* special_function */
	   "R_ARM_ABS12",	/* name */
	   FALSE,		/* partial_inplace */
	   0x000008ff,		/* src_mask */
	   0x000008ff,		/* dst_mask */
	   FALSE),		/* pcrel_offset */

    HOWTO (R_ARM_THM_ABS5,	/* type */
	   6,			/* rightshift */
	   1,			/* size (0 = byte, 1 = short, 2 = long) */
	   5,			/* bitsize */
	   FALSE,		/* pc_relative */
	   0,			/* bitpos */
	   complain_overflow_bitfield,	/* complain_on_overflow */
	   bfd_elf_generic_reloc,	/* special_function */
	   "R_ARM_THM_ABS5",	/* name */
	   FALSE,		/* partial_inplace */
	   0x000007e0,		/* src_mask */
	   0x000007e0,		/* dst_mask */
	   FALSE),		/* pcrel_offset */

    HOWTO (R_ARM_THM_PC22,	/* type */
	   1,			/* rightshift */
	   2,			/* size (0 = byte, 1 = short, 2 = long) */
	   23,			/* bitsize */
	   TRUE,		/* pc_relative */
	   0,			/* bitpos */
	   complain_overflow_signed,	/* complain_on_overflow */
	   bfd_elf_generic_reloc,	/* special_function */
	   "R_ARM_THM_PC22",	/* name */
	   FALSE,		/* partial_inplace */
	   0x07ff07ff,		/* src_mask */
	   0x07ff07ff,		/* dst_mask */
	   TRUE),			/* pcrel_offset */

    HOWTO (R_ARM_SBREL32,		/* type */
	   0,			/* rightshift */
	   0,			/* size (0 = byte, 1 = short, 2 = long) */
	   0,			/* bitsize */
	   FALSE,		/* pc_relative */
	   0,			/* bitpos */
	   complain_overflow_dont,/* complain_on_overflow */
	   bfd_elf_generic_reloc,	/* special_function */
	   "R_ARM_SBREL32",	/* name */
	   FALSE,		/* partial_inplace */
	   0,			/* src_mask */
	   0,			/* dst_mask */
	   FALSE),		/* pcrel_offset */

    HOWTO (R_ARM_AMP_VCALL9,	/* type */
	   1,			/* rightshift */
	   1,			/* size (0 = byte, 1 = short, 2 = long) */
	   8,			/* bitsize */
	   TRUE,		/* pc_relative */
	   0,			/* bitpos */
	   complain_overflow_signed,	/* complain_on_overflow */
	   bfd_elf_generic_reloc,	/* special_function */
	   "R_ARM_AMP_VCALL9",	/* name */
	   FALSE,		/* partial_inplace */
	   0x000000ff,		/* src_mask */
	   0x000000ff,		/* dst_mask */
	   TRUE),		/* pcrel_offset */

    /* 12 bit pc relative.  */
    HOWTO (R_ARM_THM_PC11,	/* type */
	   1,			/* rightshift */
	   1,			/* size (0 = byte, 1 = short, 2 = long) */
	   11,			/* bitsize */
	   TRUE,		/* pc_relative */
	   0,			/* bitpos */
	   complain_overflow_signed,	/* complain_on_overflow */
	   bfd_elf_generic_reloc,	/* special_function */
	   "R_ARM_THM_PC11",	/* name */
	   FALSE,		/* partial_inplace */
	   0x000007ff,		/* src_mask */
	   0x000007ff,		/* dst_mask */
	   TRUE),		/* pcrel_offset */

    /* 12 bit pc relative.  */
    HOWTO (R_ARM_THM_PC9,	/* type */
	   1,			/* rightshift */
	   1,			/* size (0 = byte, 1 = short, 2 = long) */
	   8,			/* bitsize */
	   TRUE,		/* pc_relative */
	   0,			/* bitpos */
	   complain_overflow_signed,	/* complain_on_overflow */
	   bfd_elf_generic_reloc,	/* special_function */
	   "R_ARM_THM_PC9",	/* name */
	   FALSE,		/* partial_inplace */
	   0x000000ff,		/* src_mask */
	   0x000000ff,		/* dst_mask */
	   TRUE),		/* pcrel_offset */

    /* GNU extension to record C++ vtable hierarchy.  */
    HOWTO (R_ARM_GNU_VTINHERIT, /* type */
	   0,                     /* rightshift */
	   2,                     /* size (0 = byte, 1 = short, 2 = long) */
	   0,                     /* bitsize */
	   FALSE,                 /* pc_relative */
	   0,                     /* bitpos */
	   complain_overflow_dont, /* complain_on_overflow */
	   NULL,                  /* special_function */
	   "R_ARM_GNU_VTINHERIT", /* name */
	   FALSE,                 /* partial_inplace */
	   0,                     /* src_mask */
	   0,                     /* dst_mask */
	   FALSE),                /* pcrel_offset */

    /* GNU extension to record C++ vtable member usage.  */
    HOWTO (R_ARM_GNU_VTENTRY,     /* type */
	   0,                     /* rightshift */
	   2,                     /* size (0 = byte, 1 = short, 2 = long) */
	   0,                     /* bitsize */
	   FALSE,                 /* pc_relative */
	   0,                     /* bitpos */
	   complain_overflow_dont, /* complain_on_overflow */
	   _bfd_elf_rel_vtable_reloc_fn,  /* special_function */
	   "R_ARM_GNU_VTENTRY",   /* name */
	   FALSE,                 /* partial_inplace */
	   0,                     /* src_mask */
	   0,                     /* dst_mask */
	   FALSE),                /* pcrel_offset */

    /* XXX - gap in index numbering here.  */

    HOWTO (R_ARM_PLT32,		/* type */
	   2,                   /* rightshift */
	   2,                   /* size (0 = byte, 1 = short, 2 = long) */
	   26,                  /* bitsize */
	   TRUE,		/* pc_relative */
	   0,                   /* bitpos */
	   complain_overflow_bitfield,/* complain_on_overflow */
	   bfd_elf_generic_reloc, /* special_function */
	   "R_ARM_PLT32",	/* name */
	   TRUE,		/* partial_inplace */
	   0x00ffffff,		/* src_mask */
	   0x00ffffff,		/* dst_mask */
	   TRUE),			/* pcrel_offset */

    /* XXX - gap in index numbering here.  */

    HOWTO (R_ARM_RREL32,	/* type */
	   0,			/* rightshift */
	   0,			/* size (0 = byte, 1 = short, 2 = long) */
	   0,			/* bitsize */
	   FALSE,		/* pc_relative */
	   0,			/* bitpos */
	   complain_overflow_dont,	/* complain_on_overflow */
	   bfd_elf_generic_reloc,	/* special_function */
	   "R_ARM_RREL32",	/* name */
	   FALSE,		/* partial_inplace */
	   0,			/* src_mask */
	   0,			/* dst_mask */
	   FALSE),		/* pcrel_offset */

    HOWTO (R_ARM_RABS32,	/* type */
	   0,			/* rightshift */
	   0,			/* size (0 = byte, 1 = short, 2 = long) */
	   0,			/* bitsize */
	   FALSE,		/* pc_relative */
	   0,			/* bitpos */
	   complain_overflow_dont,	/* complain_on_overflow */
	   bfd_elf_generic_reloc,	/* special_function */
	   "R_ARM_RABS32",	/* name */
	   FALSE,		/* partial_inplace */
	   0,			/* src_mask */
	   0,			/* dst_mask */
	   FALSE),		/* pcrel_offset */

    HOWTO (R_ARM_RPC24,		/* type */
	   0,			/* rightshift */
	   0,			/* size (0 = byte, 1 = short, 2 = long) */
	   0,			/* bitsize */
	   FALSE,		/* pc_relative */
	   0,			/* bitpos */
	   complain_overflow_dont,	/* complain_on_overflow */
	   bfd_elf_generic_reloc,	/* special_function */
	   "R_ARM_RPC24",	/* name */
	   FALSE,		/* partial_inplace */
	   0,			/* src_mask */
	   0,			/* dst_mask */
	   FALSE),		/* pcrel_offset */

    HOWTO (R_ARM_RBASE,		/* type */
	   0,			/* rightshift */
	   0,			/* size (0 = byte, 1 = short, 2 = long) */
	   0,			/* bitsize */
	   FALSE,		/* pc_relative */
	   0,			/* bitpos */
	   complain_overflow_dont,	/* complain_on_overflow */
	   bfd_elf_generic_reloc,	/* special_function */
	   "R_ARM_RBASE",	/* name */
	   FALSE,		/* partial_inplace */
	   0,			/* src_mask */
	   0,			/* dst_mask */
	   FALSE)		/* pcrel_offset */
  };

/* Locate a reloc in the howto table.  This function must be used
   when the entry number is is > R_ARM_GNU_VTINHERIT.  */

static reloc_howto_type *
find_howto (r_type)
     unsigned int r_type;
{
  int i;

  for (i = NUM_ELEM (elf32_arm_howto_table); i--;)
    if (elf32_arm_howto_table [i].type == r_type)
      return elf32_arm_howto_table + i;

  return NULL;
}

static void
elf32_arm_info_to_howto (abfd, bfd_reloc, elf_reloc)
     bfd *abfd ATTRIBUTE_UNUSED;
     arelent *bfd_reloc;
     Elf_Internal_Rela *elf_reloc;
{
  unsigned int r_type;

  r_type = ELF32_R_TYPE (elf_reloc->r_info);

  if (r_type <= R_ARM_GNU_VTINHERIT)
    bfd_reloc->howto = & elf32_arm_howto_table[r_type];
  else
    bfd_reloc->howto = find_howto (r_type);
}

struct elf32_arm_reloc_map
  {
    bfd_reloc_code_real_type bfd_reloc_val;
    unsigned char elf_reloc_val;
  };

static const struct elf32_arm_reloc_map elf32_arm_reloc_map[] =
  {
    {BFD_RELOC_NONE,                 R_ARM_NONE },
    {BFD_RELOC_ARM_PCREL_BRANCH,     R_ARM_PC24 },
    {BFD_RELOC_32,                   R_ARM_ABS32 },
    {BFD_RELOC_32_PCREL,             R_ARM_REL32 },
    {BFD_RELOC_8,                    R_ARM_ABS8 },
    {BFD_RELOC_16,                   R_ARM_ABS16 },
    {BFD_RELOC_ARM_OFFSET_IMM,       R_ARM_ABS12 },
    {BFD_RELOC_ARM_THUMB_OFFSET,     R_ARM_THM_ABS5 },
    {BFD_RELOC_THUMB_PCREL_BRANCH23, R_ARM_THM_PC22 },
    {BFD_RELOC_NONE,                 R_ARM_SBREL32 },
    {BFD_RELOC_NONE,                 R_ARM_AMP_VCALL9 },
    {BFD_RELOC_THUMB_PCREL_BRANCH12, R_ARM_THM_PC11 },
    {BFD_RELOC_THUMB_PCREL_BRANCH9,  R_ARM_THM_PC9 },
    {BFD_RELOC_VTABLE_INHERIT,       R_ARM_GNU_VTINHERIT },
    {BFD_RELOC_VTABLE_ENTRY,         R_ARM_GNU_VTENTRY }
  };

static reloc_howto_type *
elf32_arm_reloc_type_lookup (abfd, code)
     bfd * abfd ATTRIBUTE_UNUSED;
     bfd_reloc_code_real_type code;
{
  unsigned int i;

  for (i = NUM_ELEM (elf32_arm_reloc_map); i--;)
    if (elf32_arm_reloc_map[i].bfd_reloc_val == code)
      return & elf32_arm_howto_table [elf32_arm_reloc_map[i].elf_reloc_val];

  if (code == BFD_RELOC_ARM_PLT32)
    return find_howto (R_ARM_PLT32);

  return NULL;
}

#include "elf32-arm.h"
@


1.12
log
@s/boolean/bfd_boolean/ s/true/TRUE/ s/false/FALSE/.  Simplify
comparisons of bfd_boolean vars with TRUE/FALSE.  Formatting.
@
text
@@


1.11
log
@include/elf/ChangeLog
	* internal.h (elf32_internal_ehdr, Elf32_Internal_Ehdr,
	elf64_internal_ehdr, Elf64_Internal_Ehdr, elf32_internal_phdr,
	Elf32_Internal_Phdr, elf64_internal_phdr, Elf64_Internal_Phdr,
	elf32_internal_shdr, Elf32_Internal_Shdr, elf64_internal_shdr,
	Elf64_Internal_Shdr, elf32_internal_sym, elf64_internal_sym,
	Elf32_Internal_Sym, Elf64_Internal_Sym, Elf32_Internal_Note,
	elf32_internal_note, elf32_internal_rel, Elf32_Internal_Rel,
	elf64_internal_rel, Elf64_Internal_Rel, elf32_internal_rela,
	elf64_internal_rela, Elf32_Internal_Rela, Elf64_Internal_Rela,
	elf32_internal_dyn, elf64_internal_dyn, Elf32_Internal_Dyn,
	Elf64_Internal_Dyn, elf32_internal_verdef, elf64_internal_verdef,
	elf32_internal_verdaux, elf64_internal_verdaux, elf32_internal_verneed,
	elf64_internal_verneed, elf32_internal_vernaux, elf64_internal_vernaux,
	elf32_internal_versym, elf64_internal_versym, Elf32_Internal_Verdef,
	Elf64_Internal_Verdef, Elf32_Internal_Verdaux, Elf64_Internal_Verdaux,
	Elf32_Internal_Verneed, Elf64_Internal_Verneed, Elf32_Internal_Vernaux,
	Elf64_Internal_Vernaux, Elf32_Internal_Versym, Elf64_Internal_Versym,
	Elf32_Internal_Syminfo, Elf64_Internal_Syminfo): Delete.
	(Elf_Internal_Rel): Delete.

bfd/ChangeLog
	* elf-bfd.h: Replace occurrences of Elf32_Internal_* and
	Elf64_Internal_* with Elf_Internal_*.  Replace Elf_Internal_Rel
	with Elf_Internal_Rela.
	* elf-hppa.h, elf-m10200.c, elf-m10300.c, elf32-arc.c, elf32-arm.h,
	elf32-avr.c, elf32-cris.c, elf32-d10v.c, elf32-d30v.c, elf32-dlx.c,
	elf32-fr30.c, elf32-frv.c, elf32-gen.c, elf32-h8300.c, elf32-hppa.c,
	elf32-i370.c, elf32-i386.c, elf32-i860.c, elf32-i960.c, elf32-ip2k.c,
	elf32-m32r.c, elf32-m68hc11.c, elf32-m68hc12.c, elf32-m68k.c,
	elf32-mcore.c, elf32-mips.c, elf32-openrisc.c, elf32-or32.c,
	elf32-ppc.c, elf32-s390.c, elf32-sh.c, elf32-v850.c, elf32-vax.c,
	elf32-xstormy16.c, elf64-alpha.c, elf64-gen.c, elf64-hppa.c,
	elf64-mips.c, elf64-mmix.c, elf64-ppc.c, elf64-s390.c, elf64-sh64.c,
	elf64-sparc.c, elf64-x86-64.c, elfarm-nabi.c, elfarm-oabi.c,
	elfcode.h, elflink.h, elfn32-mips.c, elfxx-ia64.c, elfxx-mips.c: Ditto.
	* elf-hppa.h (elf_hppa_internal_shdr): Delete.  Use Elf_Internal_Shdr
	throughout instead.
	* elf.c (_bfd_elf_no_info_to_howto_rel): Delete.
	* elfcode.h (elf_swap_reloca_in): Pass source operand as a bfd_byte *.
	Remove INLINE keyword.
	(elf_swap_reloc_in): Likewise.  Also clear r_addend.
	(elf_swap_reloc_out, elf_swap_reloca_out): Pass destination operand
	as a bfd_byte *.
	(elf_write_relocs): Consolidate REL and RELA code.
	(elf_slurp_reloc_table_from_section): Simplify REL code.
	(NAME(_bfd_elf,size_info)): Populate reloc swap entries.
	* elf-bfd.h (MAX_INT_RELS_PER_EXT_REL): Define.
	* elflink.h (elf_link_read_relocs_from_section): Consolidate REL and
	RELA code.
	(elf_link_adjust_relocs): Likewise.  Don't malloc space for temp
	reloc array, use a fixed size of MAX_INT_RELS_PER_EXT_REL.
	(elf_link_output_relocs): Likewise.
	(elf_reloc_link_order): Likewise.
	(elf_finish_pointer_linker_section): Likewise.
	(struct elf_link_sort_rela): Remove union.
	(elf_link_sort_cmp1): Update to suit.
	(elf_link_sort_cmp2): Here too.
	(elf_link_sort_relocs): Consolidate REL and RELA code.  Fix memory
	over-allocation for int_rels_per_ext_rel != 1 case.
	* elf32-arm.h: Update all bfd_elf32_swap_reloc_out calls.
	* elf32-i386.c: Likewise.
	* elf32-cris.c: Likewise for bfd_elf32_swap_reloca_out.
	* elf32-hppa.c, elf32-i370.c, elf32-m68k.c, elf32-ppc.c, elf32-s390.c,
	elf32-sh.c, elf32-vax.c, elfxx-mips.c: Likewise.
	* elf64-alpha.c: Likewise for bfd_elf64_swap_reloca_out.
	* elf64-hppa.c, elf64-mips.c, elf64-ppc.c, elf64-s390.c, elf64-sh64.c,
	elf64-sparc.c, elf64-x86-64.c: Likewise.
	* elfxx-ia64.c: Likewise for bfd_elfNN_swap_reloca_out.
	* elfxx-mips.c (sort_dynamic_relocs): Likewise for
	bfd_elf32_swap_reloc_in.

	* elf32-arm.h: Update elf32_arm_info_to_howto calls.
	* elf32-mips.c: Likewise for mips_info_to_howto_rel.
	(mips_elf64_swap_reloc_in): Zero r_addend.
	(mips_elf64_be_swap_reloc_in): Likewise.
	(mips_elf64_slurp_one_reloc_table): Simplify.

	* elf64-alpha.c (alpha_elf_size_info): Populate reloc swap entries.
	* elf64-hppa.c (hppa64_elf_size_info): Likewise.
	* elf64-sparc.c (sparc64_elf_size_info): Likewise.
@
text
@d62 1
a62 1
	   false,		/* pc_relative */
d67 1
a67 1
	   false,		/* partial_inplace */
d70 1
a70 1
	   false),		/* pcrel_offset */
d76 1
a76 1
	   true,		/* pc_relative */
d81 1
a81 1
	   false,		/* partial_inplace */
d84 1
a84 1
	   true),			/* pcrel_offset */
d91 1
a91 1
	   false,		/* pc_relative */
d96 1
a96 1
	   false,		/* partial_inplace */
d99 1
a99 1
	   false),		/* pcrel_offset */
d106 1
a106 1
	   true,		/* pc_relative */
d111 1
a111 1
	   false,		/* partial_inplace */
d114 1
a114 1
	   true),		/* pcrel_offset */
d121 1
a121 1
	   false,		/* pc_relative */
d126 1
a126 1
	   false,		/* partial_inplace */
d129 1
a129 1
	   false),		/* pcrel_offset */
d136 1
a136 1
	   false,		/* pc_relative */
d141 1
a141 1
	   false,		/* partial_inplace */
d144 1
a144 1
	   false),		/* pcrel_offset */
d151 1
a151 1
	   false,		/* pc_relative */
d156 1
a156 1
	   false,		/* partial_inplace */
d159 1
a159 1
	   false),		/* pcrel_offset */
d165 1
a165 1
	   false,		/* pc_relative */
d170 1
a170 1
	   false,		/* partial_inplace */
d173 1
a173 1
	   false),		/* pcrel_offset */
d179 1
a179 1
	   true,		/* pc_relative */
d184 1
a184 1
	   false,		/* partial_inplace */
d187 1
a187 1
	   true),			/* pcrel_offset */
d193 1
a193 1
	   false,		/* pc_relative */
d198 1
a198 1
	   false,		/* partial_inplace */
d201 1
a201 1
	   false),		/* pcrel_offset */
d207 1
a207 1
	   true,		/* pc_relative */
d212 1
a212 1
	   false,		/* partial_inplace */
d215 1
a215 1
	   true),		/* pcrel_offset */
d222 1
a222 1
	   true,		/* pc_relative */
d227 1
a227 1
	   false,		/* partial_inplace */
d230 1
a230 1
	   true),		/* pcrel_offset */
d237 1
a237 1
	   true,		/* pc_relative */
d242 1
a242 1
	   false,		/* partial_inplace */
d245 1
a245 1
	   true),		/* pcrel_offset */
d252 1
a252 1
	   false,                 /* pc_relative */
d257 1
a257 1
	   false,                 /* partial_inplace */
d260 1
a260 1
	   false),                /* pcrel_offset */
d267 1
a267 1
	   false,                 /* pc_relative */
d272 1
a272 1
	   false,                 /* partial_inplace */
d275 1
a275 1
	   false),                /* pcrel_offset */
d283 1
a283 1
	   true,		/* pc_relative */
d288 1
a288 1
	   true,		/* partial_inplace */
d291 1
a291 1
	   true),			/* pcrel_offset */
d299 1
a299 1
	   false,		/* pc_relative */
d304 1
a304 1
	   false,		/* partial_inplace */
d307 1
a307 1
	   false),		/* pcrel_offset */
d313 1
a313 1
	   false,		/* pc_relative */
d318 1
a318 1
	   false,		/* partial_inplace */
d321 1
a321 1
	   false),		/* pcrel_offset */
d327 1
a327 1
	   false,		/* pc_relative */
d332 1
a332 1
	   false,		/* partial_inplace */
d335 1
a335 1
	   false),		/* pcrel_offset */
d341 1
a341 1
	   false,		/* pc_relative */
d346 1
a346 1
	   false,		/* partial_inplace */
d349 1
a349 1
	   false)		/* pcrel_offset */
@


1.10
log
@missed 'em from the last delta
@
text
@d52 1
a52 1
static void               elf32_arm_info_to_howto     PARAMS ((bfd *, arelent *, Elf32_Internal_Rela *));
d372 1
a372 1
     Elf32_Internal_Rela *elf_reloc;
@


1.10.12.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@d52 1
a52 1
static void               elf32_arm_info_to_howto     PARAMS ((bfd *, arelent *, Elf_Internal_Rela *));
d62 1
a62 1
	   FALSE,		/* pc_relative */
d67 1
a67 1
	   FALSE,		/* partial_inplace */
d70 1
a70 1
	   FALSE),		/* pcrel_offset */
d76 1
a76 1
	   TRUE,		/* pc_relative */
d81 1
a81 1
	   FALSE,		/* partial_inplace */
d84 1
a84 1
	   TRUE),			/* pcrel_offset */
d91 1
a91 1
	   FALSE,		/* pc_relative */
d96 1
a96 1
	   FALSE,		/* partial_inplace */
d99 1
a99 1
	   FALSE),		/* pcrel_offset */
d106 1
a106 1
	   TRUE,		/* pc_relative */
d111 1
a111 1
	   FALSE,		/* partial_inplace */
d114 1
a114 1
	   TRUE),		/* pcrel_offset */
d121 1
a121 1
	   FALSE,		/* pc_relative */
d126 1
a126 1
	   FALSE,		/* partial_inplace */
d129 1
a129 1
	   FALSE),		/* pcrel_offset */
d136 1
a136 1
	   FALSE,		/* pc_relative */
d141 1
a141 1
	   FALSE,		/* partial_inplace */
d144 1
a144 1
	   FALSE),		/* pcrel_offset */
d151 1
a151 1
	   FALSE,		/* pc_relative */
d156 1
a156 1
	   FALSE,		/* partial_inplace */
d159 1
a159 1
	   FALSE),		/* pcrel_offset */
d165 1
a165 1
	   FALSE,		/* pc_relative */
d170 1
a170 1
	   FALSE,		/* partial_inplace */
d173 1
a173 1
	   FALSE),		/* pcrel_offset */
d179 1
a179 1
	   TRUE,		/* pc_relative */
d184 1
a184 1
	   FALSE,		/* partial_inplace */
d187 1
a187 1
	   TRUE),			/* pcrel_offset */
d193 1
a193 1
	   FALSE,		/* pc_relative */
d198 1
a198 1
	   FALSE,		/* partial_inplace */
d201 1
a201 1
	   FALSE),		/* pcrel_offset */
d207 1
a207 1
	   TRUE,		/* pc_relative */
d212 1
a212 1
	   FALSE,		/* partial_inplace */
d215 1
a215 1
	   TRUE),		/* pcrel_offset */
d222 1
a222 1
	   TRUE,		/* pc_relative */
d227 1
a227 1
	   FALSE,		/* partial_inplace */
d230 1
a230 1
	   TRUE),		/* pcrel_offset */
d237 1
a237 1
	   TRUE,		/* pc_relative */
d242 1
a242 1
	   FALSE,		/* partial_inplace */
d245 1
a245 1
	   TRUE),		/* pcrel_offset */
d252 1
a252 1
	   FALSE,                 /* pc_relative */
d257 1
a257 1
	   FALSE,                 /* partial_inplace */
d260 1
a260 1
	   FALSE),                /* pcrel_offset */
d267 1
a267 1
	   FALSE,                 /* pc_relative */
d272 1
a272 1
	   FALSE,                 /* partial_inplace */
d275 1
a275 1
	   FALSE),                /* pcrel_offset */
d283 1
a283 1
	   TRUE,		/* pc_relative */
d288 1
a288 1
	   TRUE,		/* partial_inplace */
d291 1
a291 1
	   TRUE),			/* pcrel_offset */
d299 1
a299 1
	   FALSE,		/* pc_relative */
d304 1
a304 1
	   FALSE,		/* partial_inplace */
d307 1
a307 1
	   FALSE),		/* pcrel_offset */
d313 1
a313 1
	   FALSE,		/* pc_relative */
d318 1
a318 1
	   FALSE,		/* partial_inplace */
d321 1
a321 1
	   FALSE),		/* pcrel_offset */
d327 1
a327 1
	   FALSE,		/* pc_relative */
d332 1
a332 1
	   FALSE,		/* partial_inplace */
d335 1
a335 1
	   FALSE),		/* pcrel_offset */
d341 1
a341 1
	   FALSE,		/* pc_relative */
d346 1
a346 1
	   FALSE,		/* partial_inplace */
d349 1
a349 1
	   FALSE)		/* pcrel_offset */
d372 1
a372 1
     Elf_Internal_Rela *elf_reloc;
@


1.10.10.1
log
@2002-12-23  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021223-merge.
@
text
@d52 1
a52 1
static void               elf32_arm_info_to_howto     PARAMS ((bfd *, arelent *, Elf_Internal_Rela *));
d62 1
a62 1
	   FALSE,		/* pc_relative */
d67 1
a67 1
	   FALSE,		/* partial_inplace */
d70 1
a70 1
	   FALSE),		/* pcrel_offset */
d76 1
a76 1
	   TRUE,		/* pc_relative */
d81 1
a81 1
	   FALSE,		/* partial_inplace */
d84 1
a84 1
	   TRUE),			/* pcrel_offset */
d91 1
a91 1
	   FALSE,		/* pc_relative */
d96 1
a96 1
	   FALSE,		/* partial_inplace */
d99 1
a99 1
	   FALSE),		/* pcrel_offset */
d106 1
a106 1
	   TRUE,		/* pc_relative */
d111 1
a111 1
	   FALSE,		/* partial_inplace */
d114 1
a114 1
	   TRUE),		/* pcrel_offset */
d121 1
a121 1
	   FALSE,		/* pc_relative */
d126 1
a126 1
	   FALSE,		/* partial_inplace */
d129 1
a129 1
	   FALSE),		/* pcrel_offset */
d136 1
a136 1
	   FALSE,		/* pc_relative */
d141 1
a141 1
	   FALSE,		/* partial_inplace */
d144 1
a144 1
	   FALSE),		/* pcrel_offset */
d151 1
a151 1
	   FALSE,		/* pc_relative */
d156 1
a156 1
	   FALSE,		/* partial_inplace */
d159 1
a159 1
	   FALSE),		/* pcrel_offset */
d165 1
a165 1
	   FALSE,		/* pc_relative */
d170 1
a170 1
	   FALSE,		/* partial_inplace */
d173 1
a173 1
	   FALSE),		/* pcrel_offset */
d179 1
a179 1
	   TRUE,		/* pc_relative */
d184 1
a184 1
	   FALSE,		/* partial_inplace */
d187 1
a187 1
	   TRUE),			/* pcrel_offset */
d193 1
a193 1
	   FALSE,		/* pc_relative */
d198 1
a198 1
	   FALSE,		/* partial_inplace */
d201 1
a201 1
	   FALSE),		/* pcrel_offset */
d207 1
a207 1
	   TRUE,		/* pc_relative */
d212 1
a212 1
	   FALSE,		/* partial_inplace */
d215 1
a215 1
	   TRUE),		/* pcrel_offset */
d222 1
a222 1
	   TRUE,		/* pc_relative */
d227 1
a227 1
	   FALSE,		/* partial_inplace */
d230 1
a230 1
	   TRUE),		/* pcrel_offset */
d237 1
a237 1
	   TRUE,		/* pc_relative */
d242 1
a242 1
	   FALSE,		/* partial_inplace */
d245 1
a245 1
	   TRUE),		/* pcrel_offset */
d252 1
a252 1
	   FALSE,                 /* pc_relative */
d257 1
a257 1
	   FALSE,                 /* partial_inplace */
d260 1
a260 1
	   FALSE),                /* pcrel_offset */
d267 1
a267 1
	   FALSE,                 /* pc_relative */
d272 1
a272 1
	   FALSE,                 /* partial_inplace */
d275 1
a275 1
	   FALSE),                /* pcrel_offset */
d283 1
a283 1
	   TRUE,		/* pc_relative */
d288 1
a288 1
	   TRUE,		/* partial_inplace */
d291 1
a291 1
	   TRUE),			/* pcrel_offset */
d299 1
a299 1
	   FALSE,		/* pc_relative */
d304 1
a304 1
	   FALSE,		/* partial_inplace */
d307 1
a307 1
	   FALSE),		/* pcrel_offset */
d313 1
a313 1
	   FALSE,		/* pc_relative */
d318 1
a318 1
	   FALSE,		/* partial_inplace */
d321 1
a321 1
	   FALSE),		/* pcrel_offset */
d327 1
a327 1
	   FALSE,		/* pc_relative */
d332 1
a332 1
	   FALSE,		/* partial_inplace */
d335 1
a335 1
	   FALSE),		/* pcrel_offset */
d341 1
a341 1
	   FALSE,		/* pc_relative */
d346 1
a346 1
	   FALSE,		/* partial_inplace */
d349 1
a349 1
	   FALSE)		/* pcrel_offset */
d372 1
a372 1
     Elf_Internal_Rela *elf_reloc;
@


1.9
log
@	* elfarm-oabi.c (bfd_elf32_arm_add_glue_sections_to_bfd): Define.
	Move other similar defines to start of file.
@
text
@a39 2
#define USE_RELA

@


1.8
log
@Add missing prototypes
@
text
@d2 1
a2 1
   Copyright 1999, 2000, 2001 Free Software Foundation, Inc.
d21 8
a426 7

#define bfd_elf32_arm_allocate_interworking_sections \
	bfd_elf32_arm_oabi_allocate_interworking_sections
#define bfd_elf32_arm_get_bfd_for_interworking \
	bfd_elf32_arm_oabi_get_bfd_for_interworking
#define bfd_elf32_arm_process_before_allocation \
	bfd_elf32_arm_oabi_process_before_allocation
@


1.8.10.1
log
@Merge with mainline, kseitz_interps-20020619-merge.
@
text
@d2 1
a2 1
   Copyright 1999, 2000, 2001, 2002 Free Software Foundation, Inc.
a20 8
#define bfd_elf32_arm_allocate_interworking_sections \
	bfd_elf32_arm_oabi_allocate_interworking_sections
#define bfd_elf32_arm_get_bfd_for_interworking \
	bfd_elf32_arm_oabi_get_bfd_for_interworking
#define bfd_elf32_arm_process_before_allocation \
	bfd_elf32_arm_oabi_process_before_allocation
#define bfd_elf32_arm_add_glue_sections_to_bfd \
	bfd_elf32_arm_oabi_add_glue_sections_to_bfd
d419 7
@


1.8.10.2
log
@Merge with kseitz_interps-20020809-merge of CVS head.
@
text
@d40 2
@


1.8.8.1
log
@merge from trunk
@
text
@d2 1
a2 1
   Copyright 1999, 2000, 2001, 2002 Free Software Foundation, Inc.
a20 8
#define bfd_elf32_arm_allocate_interworking_sections \
	bfd_elf32_arm_oabi_allocate_interworking_sections
#define bfd_elf32_arm_get_bfd_for_interworking \
	bfd_elf32_arm_oabi_get_bfd_for_interworking
#define bfd_elf32_arm_process_before_allocation \
	bfd_elf32_arm_oabi_process_before_allocation
#define bfd_elf32_arm_add_glue_sections_to_bfd \
	bfd_elf32_arm_oabi_add_glue_sections_to_bfd
d419 7
@


1.7
log
@Update copyright notices
@
text
@d45 4
d50 295
a344 295
{
  /* No relocation */
  HOWTO (R_ARM_NONE,		/* type */
	 0,			/* rightshift */
	 0,			/* size (0 = byte, 1 = short, 2 = long) */
	 0,			/* bitsize */
	 false,			/* pc_relative */
	 0,			/* bitpos */
	 complain_overflow_dont,	/* complain_on_overflow */
	 bfd_elf_generic_reloc,	/* special_function */
	 "R_ARM_NONE",		/* name */
	 false,			/* partial_inplace */
	 0,			/* src_mask */
	 0,			/* dst_mask */
	 false),		/* pcrel_offset */

  HOWTO (R_ARM_PC24,		/* type */
	 2,			/* rightshift */
	 2,			/* size (0 = byte, 1 = short, 2 = long) */
	 24,			/* bitsize */
	 true,			/* pc_relative */
	 0,			/* bitpos */
	 complain_overflow_signed,	/* complain_on_overflow */
	 bfd_elf_generic_reloc,	/* special_function */
	 "R_ARM_PC24",		/* name */
	 false,			/* partial_inplace */
	 0x00ffffff,		/* src_mask */
	 0x00ffffff,		/* dst_mask */
	 true),			/* pcrel_offset */

  /* 32 bit absolute */
  HOWTO (R_ARM_ABS32,		/* type */
	 0,			/* rightshift */
	 2,			/* size (0 = byte, 1 = short, 2 = long) */
	 32,			/* bitsize */
	 false,			/* pc_relative */
	 0,			/* bitpos */
	 complain_overflow_bitfield,	/* complain_on_overflow */
	 bfd_elf_generic_reloc,	/* special_function */
	 "R_ARM_ABS32",		/* name */
	 false,			/* partial_inplace */
	 0xffffffff,		/* src_mask */
	 0xffffffff,		/* dst_mask */
	 false),		/* pcrel_offset */

  /* standard 32bit pc-relative reloc */
  HOWTO (R_ARM_REL32,		/* type */
	 0,			/* rightshift */
	 2,			/* size (0 = byte, 1 = short, 2 = long) */
	 32,			/* bitsize */
	 true,			/* pc_relative */
	 0,			/* bitpos */
	 complain_overflow_bitfield,	/* complain_on_overflow */
	 bfd_elf_generic_reloc,	/* special_function */
	 "R_ARM_REL32",		/* name */
	 false,			/* partial_inplace */
	 0xffffffff,		/* src_mask */
	 0xffffffff,		/* dst_mask */
	 true),			/* pcrel_offset */

  /* 8 bit absolute */
  HOWTO (R_ARM_ABS8,		/* type */
	 0,			/* rightshift */
	 0,			/* size (0 = byte, 1 = short, 2 = long) */
	 8,			/* bitsize */
	 false,			/* pc_relative */
	 0,			/* bitpos */
	 complain_overflow_bitfield,	/* complain_on_overflow */
	 bfd_elf_generic_reloc,	/* special_function */
	 "R_ARM_ABS8",		/* name */
	 false,			/* partial_inplace */
	 0x000000ff,		/* src_mask */
	 0x000000ff,		/* dst_mask */
	 false),		/* pcrel_offset */

   /* 16 bit absolute */
  HOWTO (R_ARM_ABS16,		/* type */
	 0,			/* rightshift */
	 1,			/* size (0 = byte, 1 = short, 2 = long) */
	 16,			/* bitsize */
	 false,			/* pc_relative */
	 0,			/* bitpos */
	 complain_overflow_bitfield,	/* complain_on_overflow */
	 bfd_elf_generic_reloc,	/* special_function */
	 "R_ARM_ABS16",		/* name */
	 false,			/* partial_inplace */
	 0,			/* src_mask */
	 0,			/* dst_mask */
	 false),		/* pcrel_offset */

  /* 12 bit absolute */
  HOWTO (R_ARM_ABS12,		/* type */
	 0,			/* rightshift */
	 2,			/* size (0 = byte, 1 = short, 2 = long) */
	 12,			/* bitsize */
	 false,			/* pc_relative */
	 0,			/* bitpos */
	 complain_overflow_bitfield,	/* complain_on_overflow */
	 bfd_elf_generic_reloc,	/* special_function */
	 "R_ARM_ABS12",		/* name */
	 false,			/* partial_inplace */
	 0x000008ff,		/* src_mask */
	 0x000008ff,		/* dst_mask */
	 false),		/* pcrel_offset */

  HOWTO (R_ARM_THM_ABS5,	/* type */
	 6,			/* rightshift */
	 1,			/* size (0 = byte, 1 = short, 2 = long) */
	 5,			/* bitsize */
	 false,			/* pc_relative */
	 0,			/* bitpos */
	 complain_overflow_bitfield,	/* complain_on_overflow */
	 bfd_elf_generic_reloc,	/* special_function */
	 "R_ARM_THM_ABS5",	/* name */
	 false,			/* partial_inplace */
	 0x000007e0,		/* src_mask */
	 0x000007e0,		/* dst_mask */
	 false),		/* pcrel_offset */

  HOWTO (R_ARM_THM_PC22,	/* type */
	 1,			/* rightshift */
	 2,			/* size (0 = byte, 1 = short, 2 = long) */
	 23,			/* bitsize */
	 true,			/* pc_relative */
	 0,			/* bitpos */
	 complain_overflow_signed,	/* complain_on_overflow */
	 bfd_elf_generic_reloc,	/* special_function */
	 "R_ARM_THM_PC22",	/* name */
	 false,			/* partial_inplace */
	 0x07ff07ff,		/* src_mask */
	 0x07ff07ff,		/* dst_mask */
	 true),			/* pcrel_offset */

  HOWTO (R_ARM_SBREL32,		/* type */
	 0,			/* rightshift */
	 0,			/* size (0 = byte, 1 = short, 2 = long) */
	 0,			/* bitsize */
	 false,			/* pc_relative */
	 0,			/* bitpos */
	 complain_overflow_dont,/* complain_on_overflow */
	 bfd_elf_generic_reloc,	/* special_function */
	 "R_ARM_SBREL32",	/* name */
	 false,			/* partial_inplace */
	 0,			/* src_mask */
	 0,			/* dst_mask */
	 false),		/* pcrel_offset */

  HOWTO (R_ARM_AMP_VCALL9,	/* type */
	 1,			/* rightshift */
	 1,			/* size (0 = byte, 1 = short, 2 = long) */
	 8,			/* bitsize */
	 true,			/* pc_relative */
	 0,			/* bitpos */
	 complain_overflow_signed,	/* complain_on_overflow */
	 bfd_elf_generic_reloc,	/* special_function */
	 "R_ARM_AMP_VCALL9",	/* name */
	 false,			/* partial_inplace */
	 0x000000ff,		/* src_mask */
	 0x000000ff,		/* dst_mask */
	 true),			/* pcrel_offset */

  /* 12 bit pc relative */
  HOWTO (R_ARM_THM_PC11,	/* type */
	 1,			/* rightshift */
	 1,			/* size (0 = byte, 1 = short, 2 = long) */
	 11,			/* bitsize */
	 true,			/* pc_relative */
	 0,			/* bitpos */
	 complain_overflow_signed,	/* complain_on_overflow */
	 bfd_elf_generic_reloc,	/* special_function */
	 "R_ARM_THM_PC11",	/* name */
	 false,			/* partial_inplace */
	 0x000007ff,		/* src_mask */
	 0x000007ff,		/* dst_mask */
	 true),			/* pcrel_offset */

  /* 12 bit pc relative */
  HOWTO (R_ARM_THM_PC9,		/* type */
	 1,			/* rightshift */
	 1,			/* size (0 = byte, 1 = short, 2 = long) */
	 8,			/* bitsize */
	 true,			/* pc_relative */
	 0,			/* bitpos */
	 complain_overflow_signed,	/* complain_on_overflow */
	 bfd_elf_generic_reloc,	/* special_function */
	 "R_ARM_THM_PC9",	/* name */
	 false,			/* partial_inplace */
	 0x000000ff,		/* src_mask */
	 0x000000ff,		/* dst_mask */
	 true),			/* pcrel_offset */

  /* GNU extension to record C++ vtable hierarchy */
  HOWTO (R_ARM_GNU_VTINHERIT, /* type */
         0,                     /* rightshift */
         2,                     /* size (0 = byte, 1 = short, 2 = long) */
         0,                     /* bitsize */
         false,                 /* pc_relative */
         0,                     /* bitpos */
         complain_overflow_dont, /* complain_on_overflow */
         NULL,                  /* special_function */
         "R_ARM_GNU_VTINHERIT", /* name */
         false,                 /* partial_inplace */
         0,                     /* src_mask */
         0,                     /* dst_mask */
         false),                /* pcrel_offset */

  /* GNU extension to record C++ vtable member usage */
  HOWTO (R_ARM_GNU_VTENTRY,     /* type */
         0,                     /* rightshift */
         2,                     /* size (0 = byte, 1 = short, 2 = long) */
         0,                     /* bitsize */
         false,                 /* pc_relative */
         0,                     /* bitpos */
         complain_overflow_dont, /* complain_on_overflow */
         _bfd_elf_rel_vtable_reloc_fn,  /* special_function */
         "R_ARM_GNU_VTENTRY",   /* name */
         false,                 /* partial_inplace */
         0,                     /* src_mask */
         0,                     /* dst_mask */
         false),                /* pcrel_offset */

  /* XXX - gap in index numbering here.  */

  HOWTO (R_ARM_PLT32,		/* type */
         2,                     /* rightshift */
         2,                     /* size (0 = byte, 1 = short, 2 = long) */
         26,                    /* bitsize */
         true,			/* pc_relative */
         0,                     /* bitpos */
         complain_overflow_bitfield,/* complain_on_overflow */
         bfd_elf_generic_reloc, /* special_function */
         "R_ARM_PLT32",		/* name */
         true,			/* partial_inplace */
         0x00ffffff,		/* src_mask */
         0x00ffffff,		/* dst_mask */
         true),			/* pcrel_offset */

  /* XXX - gap in index numbering here.  */

  HOWTO (R_ARM_RREL32,		/* type */
	 0,			/* rightshift */
	 0,			/* size (0 = byte, 1 = short, 2 = long) */
	 0,			/* bitsize */
	 false,			/* pc_relative */
	 0,			/* bitpos */
	 complain_overflow_dont,	/* complain_on_overflow */
	 bfd_elf_generic_reloc,	/* special_function */
	 "R_ARM_RREL32",	/* name */
	 false,			/* partial_inplace */
	 0,			/* src_mask */
	 0,			/* dst_mask */
	 false),		/* pcrel_offset */

  HOWTO (R_ARM_RABS32,		/* type */
	 0,			/* rightshift */
	 0,			/* size (0 = byte, 1 = short, 2 = long) */
	 0,			/* bitsize */
	 false,			/* pc_relative */
	 0,			/* bitpos */
	 complain_overflow_dont,	/* complain_on_overflow */
	 bfd_elf_generic_reloc,	/* special_function */
	 "R_ARM_RABS32",	/* name */
	 false,			/* partial_inplace */
	 0,			/* src_mask */
	 0,			/* dst_mask */
	 false),		/* pcrel_offset */

  HOWTO (R_ARM_RPC24,		/* type */
	 0,			/* rightshift */
	 0,			/* size (0 = byte, 1 = short, 2 = long) */
	 0,			/* bitsize */
	 false,			/* pc_relative */
	 0,			/* bitpos */
	 complain_overflow_dont,	/* complain_on_overflow */
	 bfd_elf_generic_reloc,	/* special_function */
	 "R_ARM_RPC24",		/* name */
	 false,			/* partial_inplace */
	 0,			/* src_mask */
	 0,			/* dst_mask */
	 false),		/* pcrel_offset */

  HOWTO (R_ARM_RBASE,		/* type */
	 0,			/* rightshift */
	 0,			/* size (0 = byte, 1 = short, 2 = long) */
	 0,			/* bitsize */
	 false,			/* pc_relative */
	 0,			/* bitpos */
	 complain_overflow_dont,	/* complain_on_overflow */
	 bfd_elf_generic_reloc,	/* special_function */
	 "R_ARM_RBASE",		/* name */
	 false,			/* partial_inplace */
	 0,			/* src_mask */
	 0,			/* dst_mask */
	 false)			/* pcrel_offset */
};
d348 1
d385 17
a401 17
{
  {BFD_RELOC_NONE,                 R_ARM_NONE },
  {BFD_RELOC_ARM_PCREL_BRANCH,     R_ARM_PC24 },
  {BFD_RELOC_32,                   R_ARM_ABS32 },
  {BFD_RELOC_32_PCREL,             R_ARM_REL32 },
  {BFD_RELOC_8,                    R_ARM_ABS8 },
  {BFD_RELOC_16,                   R_ARM_ABS16 },
  {BFD_RELOC_ARM_OFFSET_IMM,       R_ARM_ABS12 },
  {BFD_RELOC_ARM_THUMB_OFFSET,     R_ARM_THM_ABS5 },
  {BFD_RELOC_THUMB_PCREL_BRANCH23, R_ARM_THM_PC22 },
  {BFD_RELOC_NONE,                 R_ARM_SBREL32 },
  {BFD_RELOC_NONE,                 R_ARM_AMP_VCALL9 },
  {BFD_RELOC_THUMB_PCREL_BRANCH12, R_ARM_THM_PC11 },
  {BFD_RELOC_THUMB_PCREL_BRANCH9,  R_ARM_THM_PC9 },
  {BFD_RELOC_VTABLE_INHERIT,       R_ARM_GNU_VTINHERIT },
  {BFD_RELOC_VTABLE_ENTRY,         R_ARM_GNU_VTENTRY }
};
@


1.6
log
@2001-01-03  Kazu Hirata  <kazu@@hxi.com>

	* ecoffswap.h: Fix formatting.
	* elf-bfd.h: Likewise.
	* elfarm-nabi.c: Likewise.
	* elfarm-oabi.c: Likewise.
	* elfcode.h: Likewise.
	* elfcore.h: Likewise.
	* elflink.c: Likewise.
	* elflink.h: Likewise.
	* elfxx-ia64.c: Likewise.
	* elfxx-target.h: Likewise.
@
text
@d2 1
a2 1
   Copyright 1999, 2000 Free Software Foundation, Inc.
@


1.6.2.1
log
@Update copyright notices.
@
text
@d2 1
a2 1
   Copyright 1999, 2000, 2001 Free Software Foundation, Inc.
@


1.5
log
@Add support for R_ARM_XPC25 and R_ARM_THM_XPC22 relocs
@
text
@d268 1
a268 1
  
d282 1
a282 1
  
d349 1
a349 1
  
d393 1
a393 1
  {BFD_RELOC_THUMB_PCREL_BRANCH9,  R_ARM_THM_PC9 },  
d411 1
a411 1
  
@


1.4
log
@	* Many files: Changes to avoid gcc warnings: Add ATTRIBUTE_UNUSED
	as appropriate.  Use EMPTY_HOWTO as appropriate.  Fill in
	structure initializations.  Add casts.
	* reloc.c (EMPTY_HOWTO): Define.
	* bfd-in2.h: Rebuild.
	* coff-h8300.c (h8300_reloc16_extra_cases): Remove useless
	comparisons against 0.
	* elf32-sparc.c (elf32_sparc_merge_private_bfd_data): Change
	previous_ibfd_e_flags to unsigned long.
	* vms.h (struct vms_private_data_struct): Change section_count to
	unsigned.
	* vms-gsd.c (_bfd_vms_slurp_gsd): Change psect_idx to unsigned.
	(_bfd_vms_write_gsd): Change symnum to unsigned.
	* vms-hdr.c (_bfd_vms_write_hdr): Change symnum to unsigned.
	* vms-tir.c (etir_sta): Change psect to unsigned.
	(alloc_section): Change idx to unsigned.
	(tir_sta, tir_ctl): Change psect to unsigned.
	(_bfd_vms_write_tir): Change len and before to bfd_size_type.
	* vms.c (priv_section_count): Change to unsigned.
@
text
@d2 1
a2 1
   Copyright 1999 Free Software Foundation, Inc.
d20 3
a22 1
#include "elf/arm-oabi.h"
@


1.3
log
@Fix implementation of R_ARM_PC24 and R_ARM_THM_PC22 relocs to conform to spec.
@
text
@d357 1
a357 1
     bfd *abfd;
d398 1
a398 1
     bfd * abfd;
@


1.2
log
@Add support for BFD_RELOC_ARM_PLT32
@
text
@d40 3
d183 1
a183 1
	 complain_overflow_dont,	/* complain_on_overflow */
d379 13
a391 13
  {BFD_RELOC_NONE,                 R_ARM_NONE,},
  {BFD_RELOC_ARM_PCREL_BRANCH,     R_ARM_PC24,},
  {BFD_RELOC_32,                   R_ARM_ABS32,},
  {BFD_RELOC_32_PCREL,             R_ARM_REL32,},
  {BFD_RELOC_8,                    R_ARM_ABS8,},
  {BFD_RELOC_16,                   R_ARM_ABS16,},
  {BFD_RELOC_ARM_OFFSET_IMM,       R_ARM_ABS12,},
  {BFD_RELOC_ARM_THUMB_OFFSET,     R_ARM_THM_ABS5,},
  {BFD_RELOC_THUMB_PCREL_BRANCH23, R_ARM_THM_PC22,},
  {BFD_RELOC_NONE,                 R_ARM_SBREL32,},
  {BFD_RELOC_NONE,                 R_ARM_AMP_VCALL9,},
  {BFD_RELOC_THUMB_PCREL_BRANCH12, R_ARM_THM_PC11,},
  {BFD_RELOC_THUMB_PCREL_BRANCH9,  R_ARM_THM_PC9,},  
@


1.1
log
@Initial revision
@
text
@d26 4
d261 18
a278 1
 
d334 14
a347 1
	 false),		/* pcrel_offset */
d349 2
a350 1
};
d361 5
a365 3
  /* fixme: need range test */
  /* BFD_ASSERT (r_type < (unsigned int) R_ELF32_ARM_MAX); */
  bfd_reloc->howto = &elf32_arm_howto_table[r_type];
d376 8
a383 8
  {BFD_RELOC_NONE, R_ARM_NONE,},
  {BFD_RELOC_ARM_PCREL_BRANCH, R_ARM_PC24,},
  {BFD_RELOC_32, R_ARM_ABS32,},
  {BFD_RELOC_32_PCREL, R_ARM_REL32,},
  {BFD_RELOC_8, R_ARM_ABS8,},
  {BFD_RELOC_16, R_ARM_ABS16,},
  {BFD_RELOC_ARM_OFFSET_IMM, R_ARM_ABS12,},
  {BFD_RELOC_ARM_THUMB_OFFSET, R_ARM_THM_ABS5,},
d385 2
a386 4
  {BFD_RELOC_VTABLE_INHERIT, R_ARM_GNU_VTINHERIT },
  {BFD_RELOC_VTABLE_ENTRY, R_ARM_GNU_VTENTRY },
  {BFD_RELOC_NONE, R_ARM_SBREL32,},
  {BFD_RELOC_NONE, R_ARM_AMP_VCALL9,},
d388 3
a390 1
  {BFD_RELOC_THUMB_PCREL_BRANCH9, R_ARM_THM_PC9,}
d400 7
a406 8
  for (i = 0;
     i < sizeof (elf32_arm_reloc_map) / sizeof (struct elf32_arm_reloc_map);
       i++)
    {
      if (elf32_arm_reloc_map[i].bfd_reloc_val == code)
	return & elf32_arm_howto_table[elf32_arm_reloc_map[i].elf_reloc_val];
    }

@


1.1.1.1
log
@19990502 sourceware import
@
text
@@

