head	1.26;
access;
symbols
	sid-snapshot-20180601:1.26
	sid-snapshot-20180501:1.26
	sid-snapshot-20180401:1.26
	sid-snapshot-20180301:1.26
	sid-snapshot-20180201:1.26
	sid-snapshot-20180101:1.26
	sid-snapshot-20171201:1.26
	sid-snapshot-20171101:1.26
	sid-snapshot-20171001:1.26
	sid-snapshot-20170901:1.26
	sid-snapshot-20170801:1.26
	sid-snapshot-20170701:1.26
	sid-snapshot-20170601:1.26
	sid-snapshot-20170501:1.26
	sid-snapshot-20170401:1.26
	sid-snapshot-20170301:1.26
	sid-snapshot-20170201:1.26
	sid-snapshot-20170101:1.26
	sid-snapshot-20161201:1.26
	sid-snapshot-20161101:1.26
	sid-snapshot-20160901:1.26
	sid-snapshot-20160801:1.26
	sid-snapshot-20160701:1.26
	sid-snapshot-20160601:1.26
	sid-snapshot-20160501:1.26
	sid-snapshot-20160401:1.26
	sid-snapshot-20160301:1.26
	sid-snapshot-20160201:1.26
	sid-snapshot-20160101:1.26
	sid-snapshot-20151201:1.26
	sid-snapshot-20151101:1.26
	sid-snapshot-20151001:1.26
	sid-snapshot-20150901:1.26
	sid-snapshot-20150801:1.26
	sid-snapshot-20150701:1.26
	sid-snapshot-20150601:1.26
	sid-snapshot-20150501:1.26
	sid-snapshot-20150401:1.26
	sid-snapshot-20150301:1.26
	sid-snapshot-20150201:1.26
	sid-snapshot-20150101:1.26
	sid-snapshot-20141201:1.26
	sid-snapshot-20141101:1.26
	sid-snapshot-20141001:1.26
	sid-snapshot-20140901:1.26
	sid-snapshot-20140801:1.26
	sid-snapshot-20140701:1.26
	sid-snapshot-20140601:1.26
	sid-snapshot-20140501:1.26
	sid-snapshot-20140401:1.26
	sid-snapshot-20140301:1.26
	sid-snapshot-20140201:1.26
	sid-snapshot-20140101:1.26
	sid-snapshot-20131201:1.26
	sid-snapshot-20131101:1.26
	sid-snapshot-20131001:1.26
	binutils-2_24-branch:1.26.0.4
	binutils-2_24-branchpoint:1.26
	binutils-2_21_1:1.24
	sid-snapshot-20130901:1.26
	gdb_7_6_1-2013-08-30-release:1.26
	sid-snapshot-20130801:1.26
	sid-snapshot-20130701:1.26
	sid-snapshot-20130601:1.26
	sid-snapshot-20130501:1.26
	gdb_7_6-2013-04-26-release:1.26
	sid-snapshot-20130401:1.26
	binutils-2_23_2:1.25
	gdb_7_6-branch:1.26.0.2
	gdb_7_6-2013-03-12-branchpoint:1.26
	sid-snapshot-20130301:1.26
	sid-snapshot-20130201:1.26
	sid-snapshot-20130101:1.25
	sid-snapshot-20121201:1.25
	gdb_7_5_1-2012-11-29-release:1.25
	binutils-2_23_1:1.25
	sid-snapshot-20121101:1.25
	binutils-2_23:1.25
	sid-snapshot-20121001:1.25
	sid-snapshot-20120901:1.25
	gdb_7_5-2012-08-17-release:1.25
	sid-snapshot-20120801:1.25
	binutils-2_23-branch:1.25.0.4
	binutils-2_23-branchpoint:1.25
	gdb_7_5-branch:1.25.0.2
	gdb_7_5-2012-07-18-branchpoint:1.25
	sid-snapshot-20120701:1.25
	sid-snapshot-20120601:1.25
	sid-snapshot-20120501:1.25
	binutils-2_22_branch:1.24.0.18
	gdb_7_4_1-2012-04-26-release:1.24
	sid-snapshot-20120401:1.25
	sid-snapshot-20120301:1.25
	sid-snapshot-20120201:1.25
	gdb_7_4-2012-01-24-release:1.24
	sid-snapshot-20120101:1.24
	gdb_7_4-branch:1.24.0.16
	gdb_7_4-2011-12-13-branchpoint:1.24
	sid-snapshot-20111201:1.24
	binutils-2_22:1.24
	sid-snapshot-20111101:1.24
	sid-snapshot-20111001:1.24
	binutils-2_22-branch:1.24.0.14
	binutils-2_22-branchpoint:1.24
	gdb_7_3_1-2011-09-04-release:1.24
	sid-snapshot-20110901:1.24
	sid-snapshot-20110801:1.24
	gdb_7_3-2011-07-26-release:1.24
	sid-snapshot-20110701:1.24
	sid-snapshot-20110601:1.24
	sid-snapshot-20110501:1.24
	gdb_7_3-branch:1.24.0.12
	gdb_7_3-2011-04-01-branchpoint:1.24
	sid-snapshot-20110401:1.24
	sid-snapshot-20110301:1.24
	sid-snapshot-20110201:1.24
	sid-snapshot-20110101:1.24
	binutils-2_21:1.24
	sid-snapshot-20101201:1.24
	binutils-2_21-branch:1.24.0.10
	binutils-2_21-branchpoint:1.24
	sid-snapshot-20101101:1.24
	sid-snapshot-20101001:1.24
	binutils-2_20_1:1.24
	gdb_7_2-2010-09-02-release:1.24
	sid-snapshot-20100901:1.24
	sid-snapshot-20100801:1.24
	gdb_7_2-branch:1.24.0.8
	gdb_7_2-2010-07-07-branchpoint:1.24
	sid-snapshot-20100701:1.24
	sid-snapshot-20100601:1.24
	sid-snapshot-20100501:1.24
	sid-snapshot-20100401:1.24
	gdb_7_1-2010-03-18-release:1.24
	sid-snapshot-20100301:1.24
	gdb_7_1-branch:1.24.0.6
	gdb_7_1-2010-02-18-branchpoint:1.24
	sid-snapshot-20100201:1.24
	sid-snapshot-20100101:1.24
	gdb_7_0_1-2009-12-22-release:1.24
	sid-snapshot-20091201:1.24
	sid-snapshot-20091101:1.24
	binutils-2_20:1.24
	gdb_7_0-2009-10-06-release:1.24
	sid-snapshot-20091001:1.24
	gdb_7_0-branch:1.24.0.4
	gdb_7_0-2009-09-16-branchpoint:1.24
	arc-sim-20090309:1.23
	binutils-arc-20081103-branch:1.23.0.30
	binutils-arc-20081103-branchpoint:1.23
	binutils-2_20-branch:1.24.0.2
	binutils-2_20-branchpoint:1.24
	sid-snapshot-20090901:1.23
	sid-snapshot-20090801:1.23
	msnyder-checkpoint-072509-branch:1.23.0.28
	msnyder-checkpoint-072509-branchpoint:1.23
	sid-snapshot-20090701:1.23
	dje-cgen-play1-branch:1.23.0.26
	dje-cgen-play1-branchpoint:1.23
	sid-snapshot-20090601:1.23
	sid-snapshot-20090501:1.23
	sid-snapshot-20090401:1.23
	arc-20081103-branch:1.23.0.24
	arc-20081103-branchpoint:1.23
	arc-insight_6_8-branch:1.23.0.22
	arc-insight_6_8-branchpoint:1.23
	insight_6_8-branch:1.23.0.20
	insight_6_8-branchpoint:1.23
	sid-snapshot-20090301:1.23
	binutils-2_19_1:1.23
	sid-snapshot-20090201:1.23
	sid-snapshot-20090101:1.23
	reverse-20081226-branch:1.23.0.18
	reverse-20081226-branchpoint:1.23
	sid-snapshot-20081201:1.23
	multiprocess-20081120-branch:1.23.0.16
	multiprocess-20081120-branchpoint:1.23
	sid-snapshot-20081101:1.23
	binutils-2_19:1.23
	sid-snapshot-20081001:1.23
	reverse-20080930-branch:1.23.0.14
	reverse-20080930-branchpoint:1.23
	binutils-2_19-branch:1.23.0.12
	binutils-2_19-branchpoint:1.23
	sid-snapshot-20080901:1.23
	sid-snapshot-20080801:1.23
	reverse-20080717-branch:1.23.0.10
	reverse-20080717-branchpoint:1.23
	sid-snapshot-20080701:1.23
	msnyder-reverse-20080609-branch:1.23.0.8
	msnyder-reverse-20080609-branchpoint:1.23
	drow-reverse-20070409-branch:1.21.0.34
	drow-reverse-20070409-branchpoint:1.21
	sid-snapshot-20080601:1.23
	sid-snapshot-20080501:1.23
	sid-snapshot-20080403:1.23
	sid-snapshot-20080401:1.23
	gdb_6_8-2008-03-27-release:1.23
	sid-snapshot-20080301:1.23
	gdb_6_8-branch:1.23.0.6
	gdb_6_8-2008-02-26-branchpoint:1.23
	sid-snapshot-20080201:1.23
	sid-snapshot-20080101:1.23
	sid-snapshot-20071201:1.23
	sid-snapshot-20071101:1.23
	gdb_6_7_1-2007-10-29-release:1.23
	gdb_6_7-2007-10-10-release:1.23
	sid-snapshot-20071001:1.23
	gdb_6_7-branch:1.23.0.4
	gdb_6_7-2007-09-07-branchpoint:1.23
	binutils-2_18:1.23
	binutils-2_18-branch:1.23.0.2
	binutils-2_18-branchpoint:1.23
	insight_6_6-20070208-release:1.21
	binutils-csl-coldfire-4_1-32:1.21
	binutils-csl-sourcerygxx-4_1-32:1.21
	gdb_6_6-2006-12-18-release:1.21
	binutils-csl-innovasic-fido-3_4_4-33:1.21
	binutils-csl-sourcerygxx-3_4_4-32:1.19
	binutils-csl-coldfire-4_1-30:1.21
	binutils-csl-sourcerygxx-4_1-30:1.21
	binutils-csl-coldfire-4_1-28:1.21
	binutils-csl-sourcerygxx-4_1-29:1.21
	binutils-csl-sourcerygxx-4_1-28:1.21
	gdb_6_6-branch:1.21.0.32
	gdb_6_6-2006-11-15-branchpoint:1.21
	binutils-csl-arm-2006q3-27:1.21
	binutils-csl-sourcerygxx-4_1-27:1.21
	binutils-csl-arm-2006q3-26:1.21
	binutils-csl-sourcerygxx-4_1-26:1.21
	binutils-csl-sourcerygxx-4_1-25:1.21
	binutils-csl-sourcerygxx-4_1-24:1.21
	binutils-csl-sourcerygxx-4_1-23:1.21
	insight_6_5-20061003-release:1.21
	gdb-csl-symbian-6_4_50_20060226-12:1.21
	binutils-csl-sourcerygxx-4_1-21:1.21
	binutils-csl-arm-2006q3-21:1.21
	binutils-csl-sourcerygxx-4_1-22:1.21
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.21
	binutils-csl-sourcerygxx-4_1-20:1.21
	binutils-csl-arm-2006q3-19:1.21
	binutils-csl-sourcerygxx-4_1-19:1.21
	binutils-csl-sourcerygxx-4_1-18:1.21
	binutils-csl-renesas-4_1-9:1.21
	gdb-csl-sourcerygxx-3_4_4-25:1.21
	binutils-csl-sourcerygxx-3_4_4-25:1.19
	nickrob-async-20060828-mergepoint:1.21
	gdb-csl-symbian-6_4_50_20060226-11:1.21
	binutils-csl-renesas-4_1-8:1.21
	binutils-csl-renesas-4_1-7:1.21
	binutils-csl-renesas-4_1-6:1.21
	gdb-csl-sourcerygxx-4_1-17:1.21
	binutils-csl-sourcerygxx-4_1-17:1.21
	gdb-csl-20060226-branch-local-2:1.21
	gdb-csl-sourcerygxx-4_1-14:1.21
	binutils-csl-sourcerygxx-4_1-14:1.21
	binutils-csl-sourcerygxx-4_1-15:1.21
	gdb-csl-sourcerygxx-4_1-13:1.21
	binutils-csl-sourcerygxx-4_1-13:1.21
	binutils-2_17:1.21
	gdb-csl-sourcerygxx-4_1-12:1.21
	binutils-csl-sourcerygxx-4_1-12:1.21
	gdb-csl-sourcerygxx-3_4_4-21:1.21
	binutils-csl-sourcerygxx-3_4_4-21:1.21
	gdb_6_5-20060621-release:1.21
	binutils-csl-wrs-linux-3_4_4-24:1.19
	binutils-csl-wrs-linux-3_4_4-23:1.19
	gdb-csl-sourcerygxx-4_1-9:1.21
	binutils-csl-sourcerygxx-4_1-9:1.21
	gdb-csl-sourcerygxx-4_1-8:1.21
	binutils-csl-sourcerygxx-4_1-8:1.21
	gdb-csl-sourcerygxx-4_1-7:1.21
	binutils-csl-sourcerygxx-4_1-7:1.21
	gdb-csl-arm-2006q1-6:1.21
	binutils-csl-arm-2006q1-6:1.21
	gdb-csl-sourcerygxx-4_1-6:1.21
	binutils-csl-sourcerygxx-4_1-6:1.21
	binutils-csl-wrs-linux-3_4_4-22:1.19
	gdb-csl-symbian-6_4_50_20060226-10:1.21
	gdb-csl-symbian-6_4_50_20060226-9:1.21
	gdb-csl-symbian-6_4_50_20060226-8:1.21
	gdb-csl-coldfire-4_1-11:1.21
	binutils-csl-coldfire-4_1-11:1.21
	gdb-csl-sourcerygxx-3_4_4-19:1.21
	binutils-csl-sourcerygxx-3_4_4-19:1.21
	gdb-csl-coldfire-4_1-10:1.21
	gdb_6_5-branch:1.21.0.30
	gdb_6_5-2006-05-14-branchpoint:1.21
	binutils-csl-coldfire-4_1-10:1.21
	gdb-csl-sourcerygxx-4_1-5:1.21
	binutils-csl-sourcerygxx-4_1-5:1.21
	nickrob-async-20060513-branch:1.21.0.28
	nickrob-async-20060513-branchpoint:1.21
	gdb-csl-sourcerygxx-4_1-4:1.21
	binutils-csl-sourcerygxx-4_1-4:1.21
	msnyder-reverse-20060502-branch:1.21.0.26
	msnyder-reverse-20060502-branchpoint:1.21
	binutils-csl-wrs-linux-3_4_4-21:1.19
	gdb-csl-morpho-4_1-4:1.21
	binutils-csl-morpho-4_1-4:1.21
	gdb-csl-sourcerygxx-3_4_4-17:1.21
	binutils-csl-sourcerygxx-3_4_4-17:1.21
	binutils-csl-wrs-linux-3_4_4-20:1.19
	readline_5_1-import-branch:1.21.0.24
	readline_5_1-import-branchpoint:1.21
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.21
	binutils-2_17-branch:1.21.0.22
	binutils-2_17-branchpoint:1.21
	gdb-csl-symbian-20060226-branch:1.21.0.20
	gdb-csl-symbian-20060226-branchpoint:1.21
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.21
	msnyder-reverse-20060331-branch:1.21.0.18
	msnyder-reverse-20060331-branchpoint:1.21
	binutils-csl-2_17-branch:1.21.0.16
	binutils-csl-2_17-branchpoint:1.21
	gdb-csl-available-20060303-branch:1.21.0.14
	gdb-csl-available-20060303-branchpoint:1.21
	gdb-csl-20060226-branch:1.21.0.12
	gdb-csl-20060226-branchpoint:1.21
	gdb_6_4-20051202-release:1.21
	msnyder-fork-checkpoint-branch:1.21.0.10
	msnyder-fork-checkpoint-branchpoint:1.21
	gdb-csl-gxxpro-6_3-branch:1.21.0.8
	gdb-csl-gxxpro-6_3-branchpoint:1.21
	gdb_6_4-branch:1.21.0.6
	gdb_6_4-2005-11-01-branchpoint:1.21
	gdb-csl-arm-20051020-branch:1.21.0.4
	gdb-csl-arm-20051020-branchpoint:1.21
	binutils-csl-gxxpro-3_4-branch:1.19.0.8
	binutils-csl-gxxpro-3_4-branchpoint:1.19
	binutils-2_16_1:1.19
	msnyder-tracepoint-checkpoint-branch:1.21.0.2
	msnyder-tracepoint-checkpoint-branchpoint:1.21
	gdb-csl-arm-20050325-2005-q1b:1.19
	binutils-csl-arm-2005q1b:1.19
	binutils-2_16:1.19
	gdb-csl-arm-20050325-2005-q1a:1.19
	binutils-csl-arm-2005q1a:1.19
	csl-arm-20050325-branch:1.19.0.6
	csl-arm-20050325-branchpoint:1.19
	binutils-csl-arm-2005q1-branch:1.19.0.4
	binutils-csl-arm-2005q1-branchpoint:1.19
	binutils-2_16-branch:1.19.0.2
	binutils-2_16-branchpoint:1.19
	csl-arm-2004-q3d:1.18
	gdb_6_3-20041109-release:1.18
	gdb_6_3-branch:1.18.0.4
	gdb_6_3-20041019-branchpoint:1.18
	csl-arm-2004-q3:1.18
	drow_intercu-merge-20040921:1.18
	drow_intercu-merge-20040915:1.18
	jimb-gdb_6_2-e500-branch:1.18.0.6
	jimb-gdb_6_2-e500-branchpoint:1.18
	gdb_6_2-20040730-release:1.18
	gdb_6_2-branch:1.18.0.2
	gdb_6_2-2004-07-10-gmt-branchpoint:1.18
	gdb_6_1_1-20040616-release:1.17
	binutils-2_15:1.17
	binutils-2_15-branchpoint:1.17
	csl-arm-2004-q1a:1.17
	csl-arm-2004-q1:1.17
	gdb_6_1-2004-04-05-release:1.17
	drow_intercu-merge-20040402:1.17
	drow_intercu-merge-20040327:1.17
	ezannoni_pie-20040323-branch:1.17.0.14
	ezannoni_pie-20040323-branchpoint:1.17
	cagney_tramp-20040321-mergepoint:1.17
	cagney_tramp-20040309-branch:1.17.0.12
	cagney_tramp-20040309-branchpoint:1.17
	gdb_6_1-branch:1.17.0.10
	gdb_6_1-2004-03-01-gmt-branchpoint:1.17
	drow_intercu-20040221-branch:1.17.0.8
	drow_intercu-20040221-branchpoint:1.17
	binutils-2_15-branch:1.17.0.6
	cagney_bfdfile-20040213-branch:1.17.0.4
	cagney_bfdfile-20040213-branchpoint:1.17
	drow-cplus-merge-20040208:1.17
	carlton_dictionary-20040126-merge:1.17
	cagney_bigcore-20040122-branch:1.17.0.2
	cagney_bigcore-20040122-branchpoint:1.17
	drow-cplus-merge-20040113:1.17
	csl-arm-2003-q4:1.17
	drow-cplus-merge-20031224:1.17
	drow-cplus-merge-20031220:1.17
	carlton_dictionary-20031215-merge:1.17
	drow-cplus-merge-20031214:1.17
	carlton-dictionary-20031111-merge:1.17
	gdb_6_0-2003-10-04-release:1.14
	kettenis_sparc-20030918-branch:1.16.0.6
	kettenis_sparc-20030918-branchpoint:1.16
	carlton_dictionary-20030917-merge:1.16
	ezannoni_pie-20030916-branchpoint:1.16
	ezannoni_pie-20030916-branch:1.16.0.4
	cagney_x86i386-20030821-branch:1.16.0.2
	cagney_x86i386-20030821-branchpoint:1.16
	carlton_dictionary-20030805-merge:1.16
	carlton_dictionary-20030627-merge:1.14
	gdb_6_0-branch:1.14.0.4
	gdb_6_0-2003-06-23-branchpoint:1.14
	jimb-ppc64-linux-20030613-branch:1.14.0.2
	jimb-ppc64-linux-20030613-branchpoint:1.14
	binutils-2_14:1.12
	cagney_convert-20030606-branch:1.13.0.6
	cagney_convert-20030606-branchpoint:1.13
	cagney_writestrings-20030508-branch:1.12.0.6
	cagney_writestrings-20030508-branchpoint:1.12
	jimb-ppc64-linux-20030528-branch:1.13.0.4
	jimb-ppc64-linux-20030528-branchpoint:1.13
	carlton_dictionary-20030523-merge:1.13
	cagney_fileio-20030521-branch:1.13.0.2
	cagney_fileio-20030521-branchpoint:1.13
	kettenis_i386newframe-20030517-mergepoint:1.13
	jimb-ppc64-linux-20030509-branch:1.12.0.4
	jimb-ppc64-linux-20030509-branchpoint:1.12
	kettenis_i386newframe-20030504-mergepoint:1.12
	carlton_dictionary-20030430-merge:1.12
	binutils-2_14-branch:1.12.0.2
	binutils-2_14-branchpoint:1.12
	kettenis_i386newframe-20030419-branch:1.11.0.2
	kettenis_i386newframe-20030419-branchpoint:1.11
	carlton_dictionary-20030416-merge:1.11
	cagney_frameaddr-20030409-mergepoint:1.10
	kettenis_i386newframe-20030406-branch:1.10.0.18
	kettenis_i386newframe-20030406-branchpoint:1.10
	cagney_frameaddr-20030403-branchpoint:1.10
	cagney_frameaddr-20030403-branch:1.10.0.16
	cagney_framebase-20030330-mergepoint:1.10
	cagney_framebase-20030326-branch:1.10.0.14
	cagney_framebase-20030326-branchpoint:1.10
	cagney_lazyid-20030317-branch:1.10.0.12
	cagney_lazyid-20030317-branchpoint:1.10
	kettenis-i386newframe-20030316-mergepoint:1.10
	offbyone-20030313-branch:1.10.0.10
	offbyone-20030313-branchpoint:1.10
	kettenis-i386newframe-20030308-branch:1.10.0.8
	kettenis-i386newframe-20030308-branchpoint:1.10
	carlton_dictionary-20030305-merge:1.10
	cagney_offbyone-20030303-branch:1.10.0.6
	cagney_offbyone-20030303-branchpoint:1.10
	carlton_dictionary-20030207-merge:1.10
	interps-20030202-branch:1.10.0.4
	interps-20030202-branchpoint:1.10
	cagney-unwind-20030108-branch:1.10.0.2
	cagney-unwind-20030108-branchpoint:1.10
	binutils-2_13_2_1:1.9
	binutils-2_13_2:1.9
	carlton_dictionary-20021223-merge:1.10
	gdb_5_3-2002-12-12-release:1.9
	carlton_dictionary-20021115-merge:1.9
	binutils-2_13_1:1.9
	kseitz_interps-20021105-merge:1.9
	kseitz_interps-20021103-merge:1.9
	drow-cplus-merge-20021020:1.9
	drow-cplus-merge-20021025:1.9
	carlton_dictionary-20021025-merge:1.9
	carlton_dictionary-20021011-merge:1.9
	drow-cplus-branch:1.9.0.14
	drow-cplus-branchpoint:1.9
	kseitz_interps-20020930-merge:1.9
	carlton_dictionary-20020927-merge:1.9
	carlton_dictionary-branch:1.9.0.12
	carlton_dictionary-20020920-branchpoint:1.9
	sid-20020905-branchpoint:1.9
	sid-20020905-branch:1.9.0.10
	gdb_5_3-branch:1.9.0.8
	gdb_5_3-2002-09-04-branchpoint:1.9
	kseitz_interps-20020829-merge:1.9
	cagney_sysregs-20020825-branch:1.9.0.6
	cagney_sysregs-20020825-branchpoint:1.9
	readline_4_3-import-branch:1.9.0.4
	readline_4_3-import-branchpoint:1.9
	binutils-2_13:1.9
	gdb_5_2_1-2002-07-23-release:1.6
	binutils-2_13-branchpoint:1.9
	binutils-2_13-branch:1.9.0.2
	kseitz_interps-20020528-branch:1.8.0.6
	kseitz_interps-20020528-branchpoint:1.8
	cagney_regbuf-20020515-branch:1.8.0.4
	cagney_regbuf-20020515-branchpoint:1.8
	binutils-2_12_1:1.6.2.1
	jimb-macro-020506-branch:1.8.0.2
	jimb-macro-020506-branchpoint:1.8
	gdb_5_2-2002-04-29-release:1.6
	binutils-2_12:1.6
	gdb_5_2-branch:1.6.0.4
	gdb_5_2-2002-03-03-branchpoint:1.6
	binutils-2_12-branch:1.6.0.2
	binutils-2_12-branchpoint:1.6
	gdb_5_1_1-2002-01-24-release:1.3
	gdb_5_1_0_1-2002-01-03-release:1.3
	cygnus_cvs_20020108_pre:1.6
	gdb_5_1_0_1-2002-01-03-branch:1.3.0.6
	gdb_5_1_0_1-2002-01-03-branchpoint:1.3
	gdb_5_1-2001-11-21-release:1.3
	gdb_s390-2001-09-26-branch:1.3.0.4
	gdb_s390-2001-09-26-branchpoint:1.3
	gdb_5_1-2001-07-29-branch:1.3.0.2
	gdb_5_1-2001-07-29-branchpoint:1.3
	binutils-2_11_2:1.2.2.1
	binutils-2_11_1:1.2.2.1
	binutils-2_11:1.2
	x86_64versiong3:1.2
	binutils-2_11-branch:1.2.0.2
	insight-precleanup-2001-01-01:1.2
	binutils-2_10_1:1.1.1.1
	binutils-2_10:1.1.1.1
	gdb-premipsmulti-2000-06-06-branch:1.1.1.1.0.6
	gdb-premipsmulti-2000-06-06-branchpoint:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.4
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	binutils-2_10-branch:1.1.1.1.0.2
	binutils-2_10-branchpoint:1.1.1.1
	binutils_latest_snapshot:1.26
	repo-unification-2000-02-06:1.1.1.1
	binu_ss_19990721:1.1.1.1
	binu_ss_19990602:1.1.1.1
	binu_ss_19990502:1.1.1.1
	cygnus:1.1.1;
locks; strict;
comment	@ * @;


1.26
date	2013.01.10.20.03.52;	author hjl;	state Exp;
branches;
next	1.25;

1.25
date	2012.01.31.17.54.35;	author hjl;	state Exp;
branches;
next	1.24;

1.24
date	2009.09.02.07.18.36;	author amodra;	state Exp;
branches;
next	1.23;

1.23
date	2007.07.03.14.26.40;	author nickc;	state Exp;
branches;
next	1.22;

1.22
date	2007.04.26.14.46.55;	author amodra;	state Exp;
branches;
next	1.21;

1.21
date	2005.05.04.15.53.06;	author nickc;	state Exp;
branches;
next	1.20;

1.20
date	2005.05.04.07.19.21;	author nickc;	state Exp;
branches;
next	1.19;

1.19
date	2005.03.03.11.40.58;	author amodra;	state Exp;
branches;
next	1.18;

1.18
date	2004.06.21.14.50.32;	author aoliva;	state Exp;
branches;
next	1.17;

1.17
date	2003.10.17.10.23.33;	author nickc;	state Exp;
branches
	1.17.8.1;
next	1.16;

1.16
date	2003.07.14.06.27.24;	author rsandifo;	state Exp;
branches;
next	1.15;

1.15
date	2003.07.11.11.08.30;	author rsandifo;	state Exp;
branches;
next	1.14;

1.14
date	2003.06.10.07.09.30;	author rsandifo;	state Exp;
branches;
next	1.13;

1.13
date	2003.05.16.23.39.24;	author msnyder;	state Exp;
branches;
next	1.12;

1.12
date	2003.04.24.12.36.06;	author nickc;	state Exp;
branches;
next	1.11;

1.11
date	2003.04.15.08.51.51;	author nickc;	state Exp;
branches
	1.11.2.1;
next	1.10;

1.10
date	2002.11.30.08.39.36;	author amodra;	state Exp;
branches;
next	1.9;

1.9
date	2002.05.29.00.58.46;	author amodra;	state Exp;
branches
	1.9.12.1
	1.9.14.1;
next	1.8;

1.8
date	2002.04.04.14.04.39;	author amodra;	state Exp;
branches
	1.8.4.1
	1.8.6.1;
next	1.7;

1.7
date	2002.03.13.07.30.45;	author amodra;	state Exp;
branches;
next	1.6;

1.6
date	2001.09.18.09.57.22;	author amodra;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	2001.08.29.18.45.18;	author law;	state Exp;
branches;
next	1.4;

1.4
date	2001.08.29.17.23.15;	author law;	state Exp;
branches;
next	1.3;

1.3
date	2001.03.08.21.03.57;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	2000.06.27.01.31.59;	author nickc;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	99.05.03.07.28.55;	author rth;	state Exp;
branches
	1.1.1.1;
next	;

1.17.8.1
date	2004.09.16.17.00.18;	author drow;	state Exp;
branches;
next	;

1.11.2.1
date	2003.05.04.11.37.36;	author kettenis;	state Exp;
branches;
next	1.11.2.2;

1.11.2.2
date	2003.05.18.09.43.38;	author kettenis;	state Exp;
branches;
next	;

1.9.12.1
date	2002.12.23.19.37.33;	author carlton;	state Exp;
branches;
next	1.9.12.2;

1.9.12.2
date	2003.04.16.19.56.42;	author carlton;	state Exp;
branches;
next	1.9.12.3;

1.9.12.3
date	2003.05.01.00.46.40;	author carlton;	state Exp;
branches;
next	1.9.12.4;

1.9.12.4
date	2003.05.23.18.40.22;	author carlton;	state Exp;
branches;
next	1.9.12.5;

1.9.12.5
date	2003.06.27.21.49.10;	author carlton;	state Exp;
branches;
next	1.9.12.6;

1.9.12.6
date	2003.08.05.17.12.45;	author carlton;	state Exp;
branches;
next	1.9.12.7;

1.9.12.7
date	2003.11.11.23.50.11;	author carlton;	state Exp;
branches;
next	;

1.9.14.1
date	2003.12.14.20.26.37;	author drow;	state Exp;
branches;
next	;

1.8.4.1
date	2002.06.15.16.42.35;	author cagney;	state Exp;
branches;
next	;

1.8.6.1
date	2002.06.20.01.29.56;	author kseitz;	state Exp;
branches;
next	;

1.6.2.1
date	2002.04.04.14.52.55;	author amodra;	state Exp;
branches;
next	;

1.2.2.1
date	2001.06.07.03.08.24;	author amodra;	state Exp;
branches;
next	;

1.1.1.1
date	99.05.03.07.28.55;	author rth;	state Exp;
branches;
next	;


desc
@@


1.26
log
@Remove trailing white spaces in bfd

	* aout0.c: Remove trailing white spaces.
	* archive.c: Likewise.
	* archures.c: Likewise.
	* bfd-in.h: Likewise.
	* bfd-in2.h: Likewise.
	* coff-alpha.c: Likewise.
	* coff-i860.c: Likewise.
	* coff-mips.c: Likewise.
	* coff-ppc.c: Likewise.
	* coff-tic80.c: Likewise.
	* coff-x86_64.c: Likewise.
	* coff-z80.c: Likewise.
	* coffcode.h: Likewise.
	* coffgen.c: Likewise.
	* cofflink.c: Likewise.
	* compress.c: Likewise.
	* corefile.c: Likewise.
	* cpu-arm.c: Likewise.
	* cpu-avr.c: Likewise.
	* cpu-bfin.c: Likewise.
	* cpu-cr16.c: Likewise.
	* cpu-cr16c.c: Likewise.
	* cpu-crx.c: Likewise.
	* cpu-h8300.c: Likewise.
	* cpu-i386.c: Likewise.
	* cpu-lm32.c: Likewise.
	* cpu-m68k.c: Likewise.
	* cpu-moxie.c: Likewise.
	* cpu-msp430.c: Likewise.
	* cpu-sh.c: Likewise.
	* cpu-xc16x.c: Likewise.
	* dwarf2.c: Likewise.
	* ecofflink.c: Likewise.
	* ecoffswap.h: Likewise.
	* elf-ifunc.c: Likewise.
	* elf-m10300.c: Likewise.
	* elf-vxworks.c: Likewise.
	* elf32-avr.c: Likewise.
	* elf32-avr.h: Likewise.
	* elf32-cr16.c: Likewise.
	* elf32-cr16c.c: Likewise.
	* elf32-cris.c: Likewise.
	* elf32-crx.c: Likewise.
	* elf32-frv.c: Likewise.
	* elf32-hppa.c: Likewise.
	* elf32-i860.c: Likewise.
	* elf32-ip2k.c: Likewise.
	* elf32-iq2000.c: Likewise.
	* elf32-m32c.c: Likewise.
	* elf32-m68hc1x.c: Likewise.
	* elf32-msp430.c: Likewise.
	* elf32-mt.c: Likewise.
	* elf32-ppc.c: Likewise.
	* elf32-rl78.c: Likewise.
	* elf32-s390.c: Likewise.
	* elf32-score.h: Likewise.
	* elf32-sh-symbian.c: Likewise.
	* elf32-sh.c: Likewise.
	* elf32-spu.c: Likewise.
	* elf32-tic6x.c: Likewise.
	* elf32-v850.c: Likewise.
	* elf32-xc16x.c: Likewise.
	* elf32-xtensa.c: Likewise.
	* elf64-alpha.c: Likewise.
	* elf64-hppa.c: Likewise.
	* elf64-ppc.c: Likewise.
	* elf64-s390.c: Likewise.
	* elfcore.h: Likewise.
	* elflink.c: Likewise.
	* elfxx-mips.c: Likewise.
	* elfxx-sparc.c: Likewise.
	* elfxx-tilegx.c: Likewise.
	* ieee.c: Likewise.
	* libcoff.h: Likewise.
	* libpei.h: Likewise.
	* libxcoff.h: Likewise.
	* linker.c: Likewise.
	* mach-o-i386.c: Likewise.
	* mach-o-target.c: Likewise.
	* mach-o.c: Likewise.
	* mach-o.h: Likewise.
	* mmo.c: Likewise.
	* opncls.c: Likewise.
	* pdp11.c: Likewise.
	* pe-x86_64.c: Likewise.
	* peXXigen.c: Likewise.
	* pef-traceback.h: Likewise.
	* pei-x86_64.c: Likewise.
	* peicode.h: Likewise.
	* plugin.c: Likewise.
	* reloc.c: Likewise.
	* riscix.c: Likewise.
	* section.c: Likewise.
	* som.c: Likewise.
	* syms.c: Likewise.
	* tekhex.c: Likewise.
	* ticoff.h: Likewise.
	* vaxbsd.c: Likewise.
	* xcofflink.c: Likewise.
	* xtensa-isa.c: Likewise.
@
text
@/* BFD library support routines for the Renesas H8/300 architecture.
   Copyright 1990, 1991, 1992, 1993, 1994, 1995, 1996, 2000, 2001, 2002,
   2003, 2004, 2005, 2007 Free Software Foundation, Inc.
   Hacked by Steve Chamberlain of Cygnus Support.

   This file is part of BFD, the Binary File Descriptor library.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
   MA 02110-1301, USA.  */

#include "sysdep.h"
#include "bfd.h"
#include "libbfd.h"

static bfd_boolean
h8300_scan (const struct bfd_arch_info *info, const char *string)
{
  if (*string != 'h' && *string != 'H')
    return FALSE;

  string++;
  if (*string != '8')
    return FALSE;

  string++;
  if (*string == '/')
    string++;

  if (*string != '3')
    return FALSE;
  string++;
  if (*string != '0')
    return FALSE;
  string++;
  if (*string != '0')
    return FALSE;
  string++;
  if (*string == '-')
    string++;

  /* In ELF linker scripts, we typically express the architecture/machine
     as architecture:machine.

     So if we've matched so far and encounter a colon, try to match the
     string following the colon.  */
  if (*string == ':')
    {
      string++;
      return h8300_scan (info, string);
    }

  if (*string == 'h' || *string == 'H')
    {
      string++;
      if (*string == 'n' || *string == 'N')
	return (info->mach == bfd_mach_h8300hn);

      return (info->mach == bfd_mach_h8300h);
    }
  else if (*string == 's' || *string == 'S')
    {
      string++;
      if (*string == 'n' || *string == 'N')
	return (info->mach == bfd_mach_h8300sn);

      if (*string == 'x' || *string == 'X')
	{
	  string++;
	  if (*string == 'n' || *string == 'N')
	    return (info->mach == bfd_mach_h8300sxn);

	  return (info->mach == bfd_mach_h8300sx);
	}

      return (info->mach == bfd_mach_h8300s);
    }
  else
    return info->mach == bfd_mach_h8300;
}

/* This routine is provided two arch_infos and works out the machine
   which would be compatible with both and returns a pointer to its
   info structure.  */

static const bfd_arch_info_type *
compatible (const bfd_arch_info_type *in, const bfd_arch_info_type *out)
{
  if (in->arch != out->arch)
    return 0;
  if (in->mach == bfd_mach_h8300sx && out->mach == bfd_mach_h8300s)
    return in;
  if (in->mach == bfd_mach_h8300s && out->mach == bfd_mach_h8300sx)
    return out;
  if (in->mach == bfd_mach_h8300sxn && out->mach == bfd_mach_h8300sn)
    return in;
  if (in->mach == bfd_mach_h8300sn && out->mach == bfd_mach_h8300sxn)
    return out;
  /* It's really not a good idea to mix and match modes.  */
  if (in->mach != out->mach)
    return 0;
  else
    return in;
}

static const bfd_arch_info_type h8300sxn_info_struct =
{
  32,				/* 32 bits in a word */
  16,				/* 16 bits in an address */
  8,				/* 8 bits in a byte */
  bfd_arch_h8300,
  bfd_mach_h8300sxn,
  "h8300sxn",			/* arch_name  */
  "h8300sxn",			/* printable name */
  1,
  FALSE,			/* the default machine */
  compatible,
  h8300_scan,
  bfd_arch_default_fill,
  0
};

static const bfd_arch_info_type h8300sx_info_struct =
{
  32,				/* 32 bits in a word */
  32,				/* 32 bits in an address */
  8,				/* 8 bits in a byte */
  bfd_arch_h8300,
  bfd_mach_h8300sx,
  "h8300sx",			/* arch_name  */
  "h8300sx",			/* printable name */
  1,
  FALSE,			/* the default machine */
  compatible,
  h8300_scan,
  bfd_arch_default_fill,
  &h8300sxn_info_struct
};

static const bfd_arch_info_type h8300sn_info_struct =
{
  32,				/* 32 bits in a word.  */
  16,				/* 16 bits in an address.  */
  8,				/* 8 bits in a byte.  */
  bfd_arch_h8300,
  bfd_mach_h8300sn,
  "h8300sn",			/* Architecture name.  */
  "h8300sn",			/* Printable name.  */
  1,
  FALSE,			/* The default machine.  */
  compatible,
  h8300_scan,
  bfd_arch_default_fill,
  &h8300sx_info_struct
};

static const bfd_arch_info_type h8300hn_info_struct =
{
  32,				/* 32 bits in a word.  */
  16,				/* 16 bits in an address.  */
  8,				/* 8 bits in a byte.  */
  bfd_arch_h8300,
  bfd_mach_h8300hn,
  "h8300hn",			/* Architecture name.  */
  "h8300hn",			/* Printable name.  */
  1,
  FALSE,			/* The default machine.  */
  compatible,
  h8300_scan,
  bfd_arch_default_fill,
  &h8300sn_info_struct
};

static const bfd_arch_info_type h8300s_info_struct =
{
  32,				/* 32 bits in a word.  */
  32,				/* 32 bits in an address.  */
  8,				/* 8 bits in a byte.  */
  bfd_arch_h8300,
  bfd_mach_h8300s,
  "h8300s",			/* Architecture name.  */
  "h8300s",			/* Printable name.  */
  1,
  FALSE,			/* The default machine.  */
  compatible,
  h8300_scan,
  bfd_arch_default_fill,
  & h8300hn_info_struct
};

static const bfd_arch_info_type h8300h_info_struct =
{
  32,				/* 32 bits in a word.  */
  32,				/* 32 bits in an address.  */
  8,				/* 8 bits in a byte.  */
  bfd_arch_h8300,
  bfd_mach_h8300h,
  "h8300h",			/* Architecture name.  */
  "h8300h",			/* Printable name.  */
  1,
  FALSE,			/* The default machine.  */
  compatible,
  h8300_scan,
  bfd_arch_default_fill,
  &h8300s_info_struct
};

const bfd_arch_info_type bfd_h8300_arch =
{
  16,				/* 16 bits in a word.  */
  16,				/* 16 bits in an address.  */
  8,				/* 8 bits in a byte.  */
  bfd_arch_h8300,
  bfd_mach_h8300,
  "h8300",			/* Architecture name.  */
  "h8300",			/* Printable name.  */
  1,
  TRUE,				/* The default machine.  */
  compatible,
  h8300_scan,
  bfd_arch_default_fill,
  &h8300h_info_struct
};

/* Pad the given address to 32 bits, converting 16-bit and 24-bit
   addresses into the values they would have had on a h8s target.  */

bfd_vma
bfd_h8300_pad_address (bfd *abfd, bfd_vma address)
{
  /* Cope with bfd_vma's larger than 32 bits.  */
  address &= 0xffffffffu;

  switch (bfd_get_mach (abfd))
    {
    case bfd_mach_h8300:
    case bfd_mach_h8300hn:
    case bfd_mach_h8300sn:
    case bfd_mach_h8300sxn:
      /* Sign extend a 16-bit address.  */
      if (address >= 0x8000)
	return address | 0xffff0000u;
      return address;

    case bfd_mach_h8300h:
      /* Sign extend a 24-bit address.  */
      if (address >= 0x800000)
	return address | 0xff000000u;
      return address;

    case bfd_mach_h8300s:
    case bfd_mach_h8300sx:
      return address;

    default:
      abort ();
    }
}
@


1.25
log
@Support arch-dependent fill

bfd/

2012-01-31  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/13616
	* archures.c (bfd_arch_info): Add fill.
	(bfd_default_arch_struct): Add bfd_arch_default_fill.
	(bfd_arch_default_fill): New.

	* configure.in: Set bfd version to 2.22.52.
	* configure: Regenerated.

	* cpu-alpha.c: Add bfd_arch_default_fill to bfd_arch_info
	initializer.
	* cpu-arc.c: Likewise.
	* cpu-arm.c: Likewise.
	* cpu-avr.c: Likewise.
	* cpu-bfin.c: Likewise.
	* cpu-cr16.c: Likewise.
	* cpu-cr16c.c: Likewise.
	* cpu-cris.c: Likewise.
	* cpu-crx.c: Likewise.
	* cpu-d10v.c: Likewise.
	* cpu-d30v.c: Likewise.
	* cpu-dlx.c: Likewise.
	* cpu-epiphany.c: Likewise.
	* cpu-fr30.c: Likewise.
	* cpu-frv.c: Likewise.
	* cpu-h8300.c: Likewise.
	* cpu-h8500.c: Likewise.
	* cpu-hppa.c: Likewise.
	* cpu-i370.c: Likewise.
	* cpu-i860.c: Likewise.
	* cpu-i960.c: Likewise.
	* cpu-ia64.c: Likewise.
	* cpu-ip2k.c: Likewise.
	* cpu-iq2000.c: Likewise.
	* cpu-lm32.c: Likewise.
	* cpu-m10200.c: Likewise.
	* cpu-m10300.c: Likewise.
	* cpu-m32c.c: Likewise.
	* cpu-m32r.c: Likewise.
	* cpu-m68hc11.c: Likewise.
	* cpu-m68hc12.c: Likewise.
	* cpu-m68k.c: Likewise.
	* cpu-m88k.c: Likewise.
	* cpu-mcore.c: Likewise.
	* cpu-mep.c: Likewise.
	* cpu-microblaze.c: Likewise.
	* cpu-mips.c: Likewise.
	* cpu-mmix.c: Likewise.
	* cpu-moxie.c: Likewise.
	* cpu-msp430.c: Likewise.
	* cpu-mt.c: Likewise.
	* cpu-ns32k.c: Likewise.
	* cpu-openrisc.c: Likewise.
	* cpu-or32.c: Likewise.
	* cpu-pdp11.c: Likewise.
	* cpu-pj.c: Likewise.
	* cpu-plugin.c: Likewise.
	* cpu-powerpc.c: Likewise.
	* cpu-rl78.c: Likewise.
	* cpu-rs6000.c: Likewise.
	* cpu-rx.c: Likewise.
	* cpu-s390.c: Likewise.
	* cpu-score.c: Likewise.
	* cpu-sh.c: Likewise.
	* cpu-sparc.c: Likewise.
	* cpu-spu.c: Likewise.
	* cpu-tic30.c: Likewise.
	* cpu-tic4x.c: Likewise.
	* cpu-tic54x.c: Likewise.
	* cpu-tic6x.c: Likewise.
	* cpu-tic80.c: Likewise.
	* cpu-tilegx.c: Likewise.
	* cpu-tilepro.c: Likewise.
	* cpu-v850.c: Likewise.
	* cpu-vax.c: Likewise.
	* cpu-w65.c: Likewise.
	* cpu-we32k.c: Likewise.
	* cpu-xc16x.c: Likewise.
	* cpu-xstormy16.c: Likewise.
	* cpu-xtensa.c: Likewise.
	* cpu-z80.c: Likewise.
	* cpu-z8k.c: Likewise.

	* cpu-i386.c: Include "libiberty.h".
	(bfd_arch_i386_fill): New.
	Add bfd_arch_i386_fill to  bfd_arch_info initializer.

	* cpu-k1om.c: Add bfd_arch_i386_fill to  bfd_arch_info initializer.
	* cpu-l1om.c: Likewise.

	* linker.c (default_data_link_order): Call abfd->arch_info->fill
	if fill size is 0.

	* bfd-in2.h: Regenerated.

include/

2012-01-31  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/13616
	* bfdlink.h (bfd_link_order): Update comments on data size.

ld/

2012-01-31  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/13616
	* emulparams/elf32_x86_64.sh: Remove NOP.
	* emulparams/elf_i386.sh: Likewise.
	* emulparams/elf_i386_be.sh: Likewise.
	* emulparams/elf_i386_ldso.sh: Likewise.
	* emulparams/elf_i386_vxworks.sh: Likewise.
	* emulparams/elf_k1om.sh: Likewise.
	* emulparams/elf_l1om.sh: Likewise.
	* emulparams/elf_x86_64.sh: Likewise.

	* ldlang.c (zero_fill): Initialized to 0.

	* ldwrite.c (build_link_order): Set data size to linker odrder
	size when they are the same.

	* scripttempl/elf.sc: Don't specify fill if NOP is undefined.

ld/testsuite/

2012-01-31  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/13616
	* ld-i386/tlsbindesc.dd: Update no-op padding.
	* ld-i386/tlsnopic.dd: Likewise.
	* ld-i386/tlspic.dd: Likewise.
	* ld-x86-64/tlsbin.dd: Likewise.
	* ld-x86-64/tlsbindesc.dd: Likewise.
	* ld-x86-64/tlspic.dd: Likewise.
@
text
@d86 1
a86 1
      
@


1.24
log
@update copyright dates
@
text
@d130 1
d147 1
d164 1
d181 1
d198 1
d215 1
d232 1
@


1.23
log
@Switch sources over to use the GPL version 3
@
text
@d3 1
a3 1
   2003, 2004, 2007 Free Software Foundation, Inc.
@


1.22
log
@
bfd/
	Many files: Include sysdep.h before bfd.h.
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
binutils/
	* bucumm.h: Split off host dependencies to..
	* sysdep.h: ..here.
	Many files: Include sysdep.h.  Remove duplicate headers and reorder.
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
ld/
	Many files: Include sysdep.h first.  Remove duplicate headers.
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
opcodes/
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
	* ns32k-dis.c: Include sysdep.h first.
@
text
@d10 1
a10 1
   the Free Software Foundation; either version 2 of the License, or
d20 2
a21 1
   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.  */
@


1.21
log
@Update the address and phone number of the FSF organization in the GPL notices
@
text
@d3 1
a3 1
   2003, 2004 Free Software Foundation, Inc.
d22 1
a23 1
#include "sysdep.h"
@


1.20
log
@Update the FSF address in the copyright/GPL notice
@
text
@d20 1
a20 1
   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02110-1301, USA.  */
@


1.19
log
@update copyright dates
@
text
@d20 1
a20 1
   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
@


1.18
log
@2003-05-15  Richard Sandiford  <rsandifo@@redhat.com>
* cpu-h8300.c (compatible): Allow h8300s and h8300sx code to be
linked together. Mark the result as h8300sx code.
@
text
@d2 2
a3 2
   Copyright 1990, 1991, 1992, 1993, 1994, 1995, 1996, 2000, 2001, 2002, 2003
   Free Software Foundation, Inc.
@


1.17
log
@Fix normal operation for h8300-coff target
@
text
@d99 10
d110 1
a110 1
  if (in->arch != out->arch || in->mach != out->mach)
@


1.17.8.1
log
@Merge mainline to intercu branch - 2004-09-15
@
text
@a98 10
  if (in->arch != out->arch)
    return 0;
  if (in->mach == bfd_mach_h8300sx && out->mach == bfd_mach_h8300s)
    return in;
  if (in->mach == bfd_mach_h8300s && out->mach == bfd_mach_h8300sx)
    return out;
  if (in->mach == bfd_mach_h8300sxn && out->mach == bfd_mach_h8300sn)
    return in;
  if (in->mach == bfd_mach_h8300sn && out->mach == bfd_mach_h8300sxn)
    return out;
d100 1
a100 1
  if (in->mach != out->mach)
@


1.16
log
@Missing from 2003-07-11 commit.
@
text
@a25 5
static bfd_boolean h8300_scan
  (const struct bfd_arch_info *, const char *);
static const bfd_arch_info_type * compatible
  (const bfd_arch_info_type *, const bfd_arch_info_type *);

d109 1
a109 1
  32,				/* 32 bits in an address */
d141 1
a141 1
  32,				/* 32 bits in an address.  */
a153 1

d157 1
a157 1
  32,				/* 32 bits in an address.  */
@


1.15
log
@	* elf32-h8300.c: Convert function prototypes and definitions
	to C90 syntax.
	* coff-h8300.c: Likewise.
	* cpu-h8300.c: Likewise.
@
text
@d223 35
@


1.14
log
@include/elf/
	* h8.h (E_H8_MACH_H8300SXN): New flag.

bfd/
	* archures.c (bfd_mach_h8300sxn): New architecture.
	* bfd-in2.h: Regenerate.
	* cpu-h8300.c (h8300_scan): Check for 'sxn'.
	(h8300sxn_info_struct): New.
	(h8300sx_info_struct): Link to it.
	* elf32-h8300.c (elf32_h8_mach): Add h8300sxn case.
	(elf32_h8_final_write_processing): Likewise.

gas/
	* config/tc-h8300.c (h8300sxnmode): New.
	(md_pseudo_table): Add .h8300sxn entry.  Sync others with FSF version.

ld/
	* configure.tgt (h8300*): Add h8300sxn emulations.
	* Makefile.am (ALL_EMULATIONS): Add eh8300sxn.o and eh8300sxnelf.o.
	(eh8300sxn.c, eh8300sxnelf.c): New rules.
	* Makefile.in: Regenerate.
	* emulparams/h8300sxnelf.sh, emulparams/h8300sxn.sh: New files.
@
text
@d27 1
a27 1
  PARAMS ((const struct bfd_arch_info *, const char *));
d29 1
a29 1
  PARAMS ((const bfd_arch_info_type *, const bfd_arch_info_type *));
d32 1
a32 3
h8300_scan (info, string)
     const struct bfd_arch_info *info;
     const char *string;
d102 1
a102 3
compatible (in, out)
     const bfd_arch_info_type *in;
     const bfd_arch_info_type *out;
@


1.13
log
@2003-05-16  Michael Snyder  <msnyder@@redhat.com>
	From Bernd Schmidt  <bernds@@redhat.com>
	* archures.c (bfd_mach_h8300sx): New.
	* bfd-in2.h: Regenerate.
	* cpu-h8300.c (h8300_scan)): Add support for h8300sx.
	(h8300sx_info_struct): New.
	(h8300s_info_struct): Link to it.
	* elf32-h8300.c (elf32_h8_mach): Add support for h8300sx.
	(elf32_h8_final_write_processing): Likewise.
	(elf32_h8_relax_section): Likewise.
@
text
@d85 7
a91 1
	return (info->mach == bfd_mach_h8300sx);
d115 16
d144 1
a144 1
  0
@


1.12
log
@Add support for h8300hn and h8300sn
@
text
@d84 3
d109 16
d138 1
a138 1
  0
@


1.11
log
@Replace occurrances of 'Hitachi' with 'Renesas'.
@
text
@d72 4
d80 4
d87 1
a87 3
    {
      return info->mach == bfd_mach_h8300;
    }
d106 33
d141 3
a143 3
  32,				/* 32 bits in a word */
  32,				/* 32 bits in an address */
  8,				/* 8 bits in a byte */
d146 2
a147 2
  "h8300s",			/* arch_name  */
  "h8300s",			/* printable name */
d149 1
a149 1
  FALSE,			/* the default machine */
d152 1
a152 1
  0
d157 3
a159 3
  32,				/* 32 bits in a word */
  32,				/* 32 bits in an address */
  8,				/* 8 bits in a byte */
d162 2
a163 2
  "h8300h",			/* arch_name  */
  "h8300h",			/* printable name */
d165 1
a165 1
  FALSE,			/* the default machine */
d173 3
a175 3
  16,				/* 16 bits in a word */
  16,				/* 16 bits in an address */
  8,				/* 8 bits in a byte */
d178 2
a179 2
  "h8300",			/* arch_name  */
  "h8300",			/* printable name */
d181 1
a181 1
  TRUE,				/* the default machine */
@


1.11.2.1
log
@Merge from mainline.
@
text
@a71 4
      string++;
      if (*string == 'n' || *string == 'N')
	return (info->mach == bfd_mach_h8300hn);

a75 4
      string++;
      if (*string == 'n' || *string == 'N')
	return (info->mach == bfd_mach_h8300sn);

d79 3
a81 1
    return info->mach == bfd_mach_h8300;
a99 33
static const bfd_arch_info_type h8300sn_info_struct =
{
  32,				/* 32 bits in a word.  */
  32,				/* 32 bits in an address.  */
  8,				/* 8 bits in a byte.  */
  bfd_arch_h8300,
  bfd_mach_h8300sn,
  "h8300sn",			/* Architecture name.  */
  "h8300sn",			/* Printable name.  */
  1,
  FALSE,			/* The default machine.  */
  compatible,
  h8300_scan,
  0
};


static const bfd_arch_info_type h8300hn_info_struct =
{
  32,				/* 32 bits in a word.  */
  32,				/* 32 bits in an address.  */
  8,				/* 8 bits in a byte.  */
  bfd_arch_h8300,
  bfd_mach_h8300hn,
  "h8300hn",			/* Architecture name.  */
  "h8300hn",			/* Printable name.  */
  1,
  FALSE,			/* The default machine.  */
  compatible,
  h8300_scan,
  &h8300sn_info_struct
};

d102 3
a104 3
  32,				/* 32 bits in a word.  */
  32,				/* 32 bits in an address.  */
  8,				/* 8 bits in a byte.  */
d107 2
a108 2
  "h8300s",			/* Architecture name.  */
  "h8300s",			/* Printable name.  */
d110 1
a110 1
  FALSE,			/* The default machine.  */
d113 1
a113 1
  & h8300hn_info_struct
d118 3
a120 3
  32,				/* 32 bits in a word.  */
  32,				/* 32 bits in an address.  */
  8,				/* 8 bits in a byte.  */
d123 2
a124 2
  "h8300h",			/* Architecture name.  */
  "h8300h",			/* Printable name.  */
d126 1
a126 1
  FALSE,			/* The default machine.  */
d134 3
a136 3
  16,				/* 16 bits in a word.  */
  16,				/* 16 bits in an address.  */
  8,				/* 8 bits in a byte.  */
d139 2
a140 2
  "h8300",			/* Architecture name.  */
  "h8300",			/* Printable name.  */
d142 1
a142 1
  TRUE,				/* The default machine.  */
@


1.11.2.2
log
@2003-05-18  Mark Kettenis  <kettenis@@gnu.org>

	Merge from mainline.
	* i386-tdep.h (I386_SIZEOF_GREGS, I386_SIZEOF_FREGS,
	I386_SIZEOF_XREGS): Remove defenitions.
	(IS_FP_REGNUM, IS_SSE_REGNUM): Remove definitions.
	* i386-tdep.c (i386_gdbarch_init): Don't set register_bytes,
	register_size, call_dummy_words and sizeof_call_dummy.
	* i386-linux-tdep.c (i386_linux_init_abi): Don't set register_bytes.
	* x86-64-tdep.c (x86_64_init_abi): Don't set register_bytes and
	register_size.
	(x86_64_register_bytes): Remove variable.
	(_initialize_x86_64_tdep): Remove function.

	* i386-linux-tdep.c (i386_linux_sigcontext_addr): Call read_memory
	with correct arguments.
	* config/i386/x86-64linux.mt (TDEPFILES): Add i386-linux-tdep.o.
@
text
@a83 3
      if (*string == 'x' || *string == 'X')
	return (info->mach == bfd_mach_h8300sx);
      
a105 16
static const bfd_arch_info_type h8300sx_info_struct =
{
  32,				/* 32 bits in a word */
  32,				/* 32 bits in an address */
  8,				/* 8 bits in a byte */
  bfd_arch_h8300,
  bfd_mach_h8300sx,
  "h8300sx",			/* arch_name  */
  "h8300sx",			/* printable name */
  1,
  FALSE,			/* the default machine */
  compatible,
  h8300_scan,
  0
};

d119 1
a119 1
  &h8300sx_info_struct
@


1.10
log
@s/boolean/bfd_boolean/ s/true/TRUE/ s/false/FALSE/.  Simplify
comparisons of bfd_boolean vars with TRUE/FALSE.  Formatting.
@
text
@d1 2
a2 2
/* BFD library support routines for the Hitachi H8/300 architecture.
   Copyright 1990, 1991, 1992, 1993, 1994, 1995, 1996, 2000, 2001, 2002
d6 1
a6 1
This file is part of BFD, the Binary File Descriptor library.
d8 4
a11 4
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.
d13 4
a16 4
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
d18 3
a20 3
You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
@


1.9
log
@	* cpu-h8300.c: Make default h8300 machine first in machine list.
@
text
@d26 1
a26 1
static boolean h8300_scan
d31 1
a31 1
static boolean
d37 1
a37 1
    return false;
d41 1
a41 1
    return false;
d48 1
a48 1
    return false;
d51 1
a51 1
    return false;
d54 1
a54 1
    return false;
d110 1
a110 1
  false,			/* the default machine */
d126 1
a126 1
  false,			/* the default machine */
d142 1
a142 1
  true,				/* the default machine */
@


1.9.14.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@d1 2
a2 2
/* BFD library support routines for the Renesas H8/300 architecture.
   Copyright 1990, 1991, 1992, 1993, 1994, 1995, 1996, 2000, 2001, 2002, 2003
d6 1
a6 1
   This file is part of BFD, the Binary File Descriptor library.
d8 13
a20 13
   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
d26 9
a34 2
static bfd_boolean
h8300_scan (const struct bfd_arch_info *info, const char *string)
d37 1
a37 1
    return FALSE;
d41 1
a41 1
    return FALSE;
d48 1
a48 1
    return FALSE;
d51 1
a51 1
    return FALSE;
d54 1
a54 1
    return FALSE;
a71 4
      string++;
      if (*string == 'n' || *string == 'N')
	return (info->mach == bfd_mach_h8300hn);

a75 13
      string++;
      if (*string == 'n' || *string == 'N')
	return (info->mach == bfd_mach_h8300sn);

      if (*string == 'x' || *string == 'X')
	{
	  string++;
	  if (*string == 'n' || *string == 'N')
	    return (info->mach == bfd_mach_h8300sxn);

	  return (info->mach == bfd_mach_h8300sx);
	}
      
d79 3
a81 1
    return info->mach == bfd_mach_h8300;
d89 3
a91 1
compatible (const bfd_arch_info_type *in, const bfd_arch_info_type *out)
d100 1
a100 1
static const bfd_arch_info_type h8300sxn_info_struct =
d103 1
a103 1
  16,				/* 16 bits in an address */
d106 3
a108 3
  bfd_mach_h8300sxn,
  "h8300sxn",			/* arch_name  */
  "h8300sxn",			/* printable name */
d110 1
a110 1
  FALSE,			/* the default machine */
d116 1
a116 1
static const bfd_arch_info_type h8300sx_info_struct =
a121 64
  bfd_mach_h8300sx,
  "h8300sx",			/* arch_name  */
  "h8300sx",			/* printable name */
  1,
  FALSE,			/* the default machine */
  compatible,
  h8300_scan,
  &h8300sxn_info_struct
};

static const bfd_arch_info_type h8300sn_info_struct =
{
  32,				/* 32 bits in a word.  */
  16,				/* 16 bits in an address.  */
  8,				/* 8 bits in a byte.  */
  bfd_arch_h8300,
  bfd_mach_h8300sn,
  "h8300sn",			/* Architecture name.  */
  "h8300sn",			/* Printable name.  */
  1,
  FALSE,			/* The default machine.  */
  compatible,
  h8300_scan,
  &h8300sx_info_struct
};

static const bfd_arch_info_type h8300hn_info_struct =
{
  32,				/* 32 bits in a word.  */
  16,				/* 16 bits in an address.  */
  8,				/* 8 bits in a byte.  */
  bfd_arch_h8300,
  bfd_mach_h8300hn,
  "h8300hn",			/* Architecture name.  */
  "h8300hn",			/* Printable name.  */
  1,
  FALSE,			/* The default machine.  */
  compatible,
  h8300_scan,
  &h8300sn_info_struct
};

static const bfd_arch_info_type h8300s_info_struct =
{
  32,				/* 32 bits in a word.  */
  32,				/* 32 bits in an address.  */
  8,				/* 8 bits in a byte.  */
  bfd_arch_h8300,
  bfd_mach_h8300s,
  "h8300s",			/* Architecture name.  */
  "h8300s",			/* Printable name.  */
  1,
  FALSE,			/* The default machine.  */
  compatible,
  h8300_scan,
  & h8300hn_info_struct
};

static const bfd_arch_info_type h8300h_info_struct =
{
  32,				/* 32 bits in a word.  */
  32,				/* 32 bits in an address.  */
  8,				/* 8 bits in a byte.  */
  bfd_arch_h8300,
d123 2
a124 2
  "h8300h",			/* Architecture name.  */
  "h8300h",			/* Printable name.  */
d126 1
a126 1
  FALSE,			/* The default machine.  */
d134 3
a136 3
  16,				/* 16 bits in a word.  */
  16,				/* 16 bits in an address.  */
  8,				/* 8 bits in a byte.  */
d139 2
a140 2
  "h8300",			/* Architecture name.  */
  "h8300",			/* Printable name.  */
d142 1
a142 1
  TRUE,				/* The default machine.  */
a146 35

/* Pad the given address to 32 bits, converting 16-bit and 24-bit
   addresses into the values they would have had on a h8s target.  */

bfd_vma
bfd_h8300_pad_address (bfd *abfd, bfd_vma address)
{
  /* Cope with bfd_vma's larger than 32 bits.  */
  address &= 0xffffffffu;

  switch (bfd_get_mach (abfd))
    {
    case bfd_mach_h8300:
    case bfd_mach_h8300hn:
    case bfd_mach_h8300sn:
    case bfd_mach_h8300sxn:
      /* Sign extend a 16-bit address.  */
      if (address >= 0x8000)
	return address | 0xffff0000u;
      return address;

    case bfd_mach_h8300h:
      /* Sign extend a 24-bit address.  */
      if (address >= 0x800000)
	return address | 0xff000000u;
      return address;

    case bfd_mach_h8300s:
    case bfd_mach_h8300sx:
      return address;

    default:
      abort ();
    }
}
@


1.9.12.1
log
@2002-12-23  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021223-merge.
@
text
@d26 1
a26 1
static bfd_boolean h8300_scan
d31 1
a31 1
static bfd_boolean
d37 1
a37 1
    return FALSE;
d41 1
a41 1
    return FALSE;
d48 1
a48 1
    return FALSE;
d51 1
a51 1
    return FALSE;
d54 1
a54 1
    return FALSE;
d110 1
a110 1
  FALSE,			/* the default machine */
d126 1
a126 1
  FALSE,			/* the default machine */
d142 1
a142 1
  TRUE,				/* the default machine */
@


1.9.12.2
log
@2003-04-16  David Carlton  <carlton@@bactrian.org>

	* Merge with mainline; tag is carlton_dictionary-20030416-merge.
@
text
@d1 2
a2 2
/* BFD library support routines for the Renesas H8/300 architecture.
   Copyright 1990, 1991, 1992, 1993, 1994, 1995, 1996, 2000, 2001, 2002, 2003
d6 1
a6 1
   This file is part of BFD, the Binary File Descriptor library.
d8 4
a11 4
   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.
d13 4
a16 4
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
d18 3
a20 3
   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
@


1.9.12.3
log
@2003-04-30  David Carlton  <carlton@@bactrian.org>

	* cp-namespace.c (get_namespace_objfile): Copy the namespace
	objfile's name.

	* block.h (ALL_BLOCK_SYMBOLS): Move here from dictionary.h.
	* dictionary.c: Sync up with mainline version I just posted.
	Specifically, update some commments, and:
	(dict_create_hashed): Fiddle with nsyms updating.
	(dict_create_linear): Ditto.
	(dict_lookup): Delete.
	(iterator_next_hashed): Delete FIXME comment.
	(iter_name_first_hashed): Replace 'sym' by 'sym != NULL'.
	(iter_name_next_hashed): Replate 'next' by 'next != NULL'.
	* dictionary.h: Sync up with mainline version I just posted: add
	inclusion guards, delete declaration of dict_lookup, delete
	ALL_BLOCK_SYMBOLs.

	* Merge with mainline; tag is carlton_dictionary-20030430-merge.
@
text
@a71 4
      string++;
      if (*string == 'n' || *string == 'N')
	return (info->mach == bfd_mach_h8300hn);

a75 4
      string++;
      if (*string == 'n' || *string == 'N')
	return (info->mach == bfd_mach_h8300sn);

d79 3
a81 1
    return info->mach == bfd_mach_h8300;
a99 33
static const bfd_arch_info_type h8300sn_info_struct =
{
  32,				/* 32 bits in a word.  */
  32,				/* 32 bits in an address.  */
  8,				/* 8 bits in a byte.  */
  bfd_arch_h8300,
  bfd_mach_h8300sn,
  "h8300sn",			/* Architecture name.  */
  "h8300sn",			/* Printable name.  */
  1,
  FALSE,			/* The default machine.  */
  compatible,
  h8300_scan,
  0
};


static const bfd_arch_info_type h8300hn_info_struct =
{
  32,				/* 32 bits in a word.  */
  32,				/* 32 bits in an address.  */
  8,				/* 8 bits in a byte.  */
  bfd_arch_h8300,
  bfd_mach_h8300hn,
  "h8300hn",			/* Architecture name.  */
  "h8300hn",			/* Printable name.  */
  1,
  FALSE,			/* The default machine.  */
  compatible,
  h8300_scan,
  &h8300sn_info_struct
};

d102 3
a104 3
  32,				/* 32 bits in a word.  */
  32,				/* 32 bits in an address.  */
  8,				/* 8 bits in a byte.  */
d107 2
a108 2
  "h8300s",			/* Architecture name.  */
  "h8300s",			/* Printable name.  */
d110 1
a110 1
  FALSE,			/* The default machine.  */
d113 1
a113 1
  & h8300hn_info_struct
d118 3
a120 3
  32,				/* 32 bits in a word.  */
  32,				/* 32 bits in an address.  */
  8,				/* 8 bits in a byte.  */
d123 2
a124 2
  "h8300h",			/* Architecture name.  */
  "h8300h",			/* Printable name.  */
d126 1
a126 1
  FALSE,			/* The default machine.  */
d134 3
a136 3
  16,				/* 16 bits in a word.  */
  16,				/* 16 bits in an address.  */
  8,				/* 8 bits in a byte.  */
d139 2
a140 2
  "h8300",			/* Architecture name.  */
  "h8300",			/* Printable name.  */
d142 1
a142 1
  TRUE,				/* The default machine.  */
@


1.9.12.4
log
@2003-05-23  David Carlton  <carlton@@bactrian.org>

	* Merge with mainline; tag is carlton_dictionary-20030523-merge.
@
text
@a83 3
      if (*string == 'x' || *string == 'X')
	return (info->mach == bfd_mach_h8300sx);
      
a105 16
static const bfd_arch_info_type h8300sx_info_struct =
{
  32,				/* 32 bits in a word */
  32,				/* 32 bits in an address */
  8,				/* 8 bits in a byte */
  bfd_arch_h8300,
  bfd_mach_h8300sx,
  "h8300sx",			/* arch_name  */
  "h8300sx",			/* printable name */
  1,
  FALSE,			/* the default machine */
  compatible,
  h8300_scan,
  0
};

d119 1
a119 1
  &h8300sx_info_struct
@


1.9.12.5
log
@2003-06-27  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20030627-merge.
@
text
@d85 1
a85 7
	{
	  string++;
	  if (*string == 'n' || *string == 'N')
	    return (info->mach == bfd_mach_h8300sxn);

	  return (info->mach == bfd_mach_h8300sx);
	}
a108 16
static const bfd_arch_info_type h8300sxn_info_struct =
{
  32,				/* 32 bits in a word */
  32,				/* 32 bits in an address */
  8,				/* 8 bits in a byte */
  bfd_arch_h8300,
  bfd_mach_h8300sxn,
  "h8300sxn",			/* arch_name  */
  "h8300sxn",			/* printable name */
  1,
  FALSE,			/* the default machine */
  compatible,
  h8300_scan,
  0
};

d122 1
a122 1
  &h8300sxn_info_struct
@


1.9.12.6
log
@2003-08-05  David Carlton  <carlton@@kealia.com>

	* configure.in (build_warnings): Delete -Wformat-nonliteral.
	* configure (build_warnings): Ditto.

	* Merge with mainline; tag is carlton_dictionary-20030805-merge.
@
text
@d27 1
a27 1
  (const struct bfd_arch_info *, const char *);
d29 1
a29 1
  (const bfd_arch_info_type *, const bfd_arch_info_type *);
d32 3
a34 1
h8300_scan (const struct bfd_arch_info *info, const char *string)
d104 3
a106 1
compatible (const bfd_arch_info_type *in, const bfd_arch_info_type *out)
a226 35

/* Pad the given address to 32 bits, converting 16-bit and 24-bit
   addresses into the values they would have had on a h8s target.  */

bfd_vma
bfd_h8300_pad_address (bfd *abfd, bfd_vma address)
{
  /* Cope with bfd_vma's larger than 32 bits.  */
  address &= 0xffffffffu;

  switch (bfd_get_mach (abfd))
    {
    case bfd_mach_h8300:
    case bfd_mach_h8300hn:
    case bfd_mach_h8300sn:
    case bfd_mach_h8300sxn:
      /* Sign extend a 16-bit address.  */
      if (address >= 0x8000)
	return address | 0xffff0000u;
      return address;

    case bfd_mach_h8300h:
      /* Sign extend a 24-bit address.  */
      if (address >= 0x800000)
	return address | 0xff000000u;
      return address;

    case bfd_mach_h8300s:
    case bfd_mach_h8300sx:
      return address;

    default:
      abort ();
    }
}
@


1.9.12.7
log
@2003-11-11  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton-dictionary-20031111-merge.
@
text
@d26 5
d114 1
a114 1
  16,				/* 16 bits in an address */
d146 1
a146 1
  16,				/* 16 bits in an address.  */
d159 1
d163 1
a163 1
  16,				/* 16 bits in an address.  */
@


1.8
log
@	* dep-in.sed: Cope with absolute paths.
	* Makefile.am (dep.sed): Subst TOPDIR, and not INCDIR.
	Run "make dep-am".
	* Makefile.in: Regenerate.
	* coff-arm.c: Fix copyright date.
	* cpu-h8300.c: Likewise.
	* cpu-i370.c: Likewise.
	* cpu-s390.c: Likewise.
	* cpu-mips.c: Likewise.
	* po/SRC-POTFILES.in: Regenerate.
@
text
@d100 1
a100 1
static const bfd_arch_info_type h8300_info_struct =
d102 2
a103 2
  16,				/* 16 bits in a word */
  16,				/* 16 bits in an address */
d106 3
a108 3
  bfd_mach_h8300,
  "h8300",			/* arch_name  */
  "h8300",			/* printable name */
d110 1
a110 1
  true,				/* the default machine */
d113 1
a113 4
#if 0
  local_bfd_reloc_type_lookup,
#endif
  0,
d129 1
a129 4
#if 0
  local_bfd_reloc_type_lookup,
#endif
  &h8300_info_struct,
d134 2
a135 2
  32,				/* 32 bits in a word */
  32,				/* 32 bits in an address */
d138 3
a140 3
  bfd_mach_h8300s,
  "h8300s",			/* arch_name  */
  "h8300s",			/* printable name */
d142 1
a142 1
  false,			/* the default machine */
d145 1
a145 4
#if 0
  local_bfd_reloc_type_lookup,
#endif
  &h8300h_info_struct,
@


1.8.6.1
log
@Merge with mainline, kseitz_interps-20020619-merge.
@
text
@d100 1
a100 1
static const bfd_arch_info_type h8300s_info_struct =
d102 2
a103 2
  32,				/* 32 bits in a word */
  32,				/* 32 bits in an address */
d106 3
a108 3
  bfd_mach_h8300s,
  "h8300s",			/* arch_name  */
  "h8300s",			/* printable name */
d110 1
a110 1
  false,			/* the default machine */
d113 4
a116 1
  0
d132 4
a135 1
  &h8300s_info_struct
d140 2
a141 2
  16,				/* 16 bits in a word */
  16,				/* 16 bits in an address */
d144 3
a146 3
  bfd_mach_h8300,
  "h8300",			/* arch_name  */
  "h8300",			/* printable name */
d148 1
a148 1
  true,				/* the default machine */
d151 4
a154 1
  &h8300h_info_struct
@


1.8.4.1
log
@merge from trunk
@
text
@d100 1
a100 1
static const bfd_arch_info_type h8300s_info_struct =
d102 2
a103 2
  32,				/* 32 bits in a word */
  32,				/* 32 bits in an address */
d106 3
a108 3
  bfd_mach_h8300s,
  "h8300s",			/* arch_name  */
  "h8300s",			/* printable name */
d110 1
a110 1
  false,			/* the default machine */
d113 4
a116 1
  0
d132 4
a135 1
  &h8300s_info_struct
d140 2
a141 2
  16,				/* 16 bits in a word */
  16,				/* 16 bits in an address */
d144 3
a146 3
  bfd_mach_h8300,
  "h8300",			/* arch_name  */
  "h8300",			/* printable name */
d148 1
a148 1
  true,				/* the default machine */
d151 4
a154 1
  &h8300h_info_struct
@


1.7
log
@	* archures.c (bfd_default_compatible): Test bits_per_word.
	* cpu-i386.c (i386_compatible): Remove.  Replace occurrences with
	bfd_default_compatible.
	* cpu-i370.c (i370_compatible): Likewise.
	* cpu-sparc.c (sparc_compatible): Likewise.
	* cpu-h8300.c (compatible): Test in->arch == out->arch.
@
text
@d2 1
a2 1
   Copyright 1990, 1991, 1992, 1993, 1994, 1995, 1996, 2000, 2001
@


1.6
log
@Touches most files in bfd/, so likely will be blamed for everything..

o  bfd_read and bfd_write lose an unnecessary param and become
   bfd_bread and bfd_bwrite.

o  bfd_*alloc now all take a bfd_size_type arg, and will error if
   size_t is too small.  eg. 32 bit host, 64 bit bfd, verrry big files
   or bugs in linker scripts etc.

o  file_ptr becomes a bfd_signed_vma.  Besides matching sizes with
   various other types involved in handling sections, this should make
   it easier for bfd to support a 64 bit off_t on 32 bit hosts that
   provide it.

o  I've made the H_GET_* and H_PUT_* macros (which invoke bfd_h_{get,put}_*)
   generally available.  They now cast their args to bfd_vma and
   bfd_byte * as appropriate, which removes a swag of casts from the
   source.

o  Bug fixes to bfd_get8, aix386_core_vec, elf32_h8_relax_section, and
   aout-encap.c.

o  Zillions of formatting and -Wconversion fixes.
@
text
@d94 1
a94 1
  if (in->mach != out->mach)
@


1.6.2.1
log
@Merge from mainline.
@
text
@d2 1
a2 1
   Copyright 1990, 1991, 1992, 1993, 1994, 1995, 1996, 2000, 2001, 2002
d94 1
a94 1
  if (in->arch != out->arch || in->mach != out->mach)
@


1.5
log
@Fix brown-paper-bag thinko in last change.
@
text
@a25 2
int bfd_default_scan_num_mach ();

@


1.4
log
@        * cpu-h8300.c (h8300_scan, compatible): Prototype.
        (h8300_scan): Handle architecture:machine encodings typically
        found in linker scripts.
        * elf.c (prep_headers): Do not try to do H8 machine recognition
        here.
        * elf32-h8300.c:  Add some missing prototypes.
        (elf32_h8_mach, elf32_h8_final_write_processing): New functions.
        (elf32_h8_object_p): Similarly.
@
text
@d69 1
a69 1
      h8300_scan (info, string);
@


1.3
log
@Update copyright notices
@
text
@d2 1
a2 1
   Copyright 1990, 1991, 1992, 1993, 1994, 1995, 1996, 2000
d28 5
d60 12
@


1.2
log
@Fix formatting.
@
text
@d2 2
a3 1
   Copyright (C) 1990, 91, 92, 93, 94, 1995 Free Software Foundation, Inc.
@


1.2.2.1
log
@Update copyright notices.
@
text
@d2 1
a2 2
   Copyright 1990, 1991, 1992, 1993, 1994, 1995, 1996, 2000
   Free Software Foundation, Inc.
@


1.1
log
@Initial revision
@
text
@d68 3
a70 4

/* This routine is provided two arch_infos and works out the 
   machine which would be compatible with both and returns a pointer
   to its info structure */
d74 2
a75 2
     const bfd_arch_info_type * in;
     const bfd_arch_info_type * out;
d97 3
a99 1
/*    local_bfd_reloc_type_lookup, */
d116 3
a118 1
/*    local_bfd_reloc_type_lookup, */
d135 3
a137 1
/*    local_bfd_reloc_type_lookup, */
@


1.1.1.1
log
@19990502 sourceware import
@
text
@@

