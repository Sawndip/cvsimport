head	1.18;
access;
symbols
	sid-snapshot-20180601:1.18
	sid-snapshot-20180501:1.18
	sid-snapshot-20180401:1.18
	sid-snapshot-20180301:1.18
	sid-snapshot-20180201:1.18
	sid-snapshot-20180101:1.18
	sid-snapshot-20171201:1.18
	sid-snapshot-20171101:1.18
	sid-snapshot-20171001:1.18
	sid-snapshot-20170901:1.18
	sid-snapshot-20170801:1.18
	sid-snapshot-20170701:1.18
	sid-snapshot-20170601:1.18
	sid-snapshot-20170501:1.18
	sid-snapshot-20170401:1.18
	sid-snapshot-20170301:1.18
	sid-snapshot-20170201:1.18
	sid-snapshot-20170101:1.18
	sid-snapshot-20161201:1.18
	sid-snapshot-20161101:1.18
	sid-snapshot-20160901:1.18
	sid-snapshot-20160801:1.18
	sid-snapshot-20160701:1.18
	sid-snapshot-20160601:1.18
	sid-snapshot-20160501:1.18
	sid-snapshot-20160401:1.18
	sid-snapshot-20160301:1.18
	sid-snapshot-20160201:1.18
	sid-snapshot-20160101:1.18
	sid-snapshot-20151201:1.18
	sid-snapshot-20151101:1.18
	sid-snapshot-20151001:1.18
	sid-snapshot-20150901:1.18
	sid-snapshot-20150801:1.18
	sid-snapshot-20150701:1.18
	sid-snapshot-20150601:1.18
	sid-snapshot-20150501:1.18
	sid-snapshot-20150401:1.18
	sid-snapshot-20150301:1.18
	sid-snapshot-20150201:1.18
	sid-snapshot-20150101:1.18
	sid-snapshot-20141201:1.18
	sid-snapshot-20141101:1.18
	sid-snapshot-20141001:1.18
	sid-snapshot-20140901:1.18
	sid-snapshot-20140801:1.18
	sid-snapshot-20140701:1.18
	sid-snapshot-20140601:1.18
	sid-snapshot-20140501:1.18
	sid-snapshot-20140401:1.18
	sid-snapshot-20140301:1.18
	sid-snapshot-20140201:1.18
	sid-snapshot-20140101:1.18
	sid-snapshot-20131201:1.18
	sid-snapshot-20131101:1.18
	sid-snapshot-20131001:1.18
	binutils-2_24-branch:1.18.0.8
	binutils-2_24-branchpoint:1.18
	binutils-2_21_1:1.16
	sid-snapshot-20130901:1.18
	gdb_7_6_1-2013-08-30-release:1.18
	sid-snapshot-20130801:1.18
	sid-snapshot-20130701:1.18
	sid-snapshot-20130601:1.18
	sid-snapshot-20130501:1.18
	gdb_7_6-2013-04-26-release:1.18
	sid-snapshot-20130401:1.18
	binutils-2_23_2:1.18
	gdb_7_6-branch:1.18.0.6
	gdb_7_6-2013-03-12-branchpoint:1.18
	sid-snapshot-20130301:1.18
	sid-snapshot-20130201:1.18
	sid-snapshot-20130101:1.18
	sid-snapshot-20121201:1.18
	gdb_7_5_1-2012-11-29-release:1.18
	binutils-2_23_1:1.18
	sid-snapshot-20121101:1.18
	binutils-2_23:1.18
	sid-snapshot-20121001:1.18
	sid-snapshot-20120901:1.18
	gdb_7_5-2012-08-17-release:1.18
	sid-snapshot-20120801:1.18
	binutils-2_23-branch:1.18.0.4
	binutils-2_23-branchpoint:1.18
	gdb_7_5-branch:1.18.0.2
	gdb_7_5-2012-07-18-branchpoint:1.18
	sid-snapshot-20120701:1.17
	sid-snapshot-20120601:1.17
	sid-snapshot-20120501:1.17
	binutils-2_22_branch:1.17.0.6
	gdb_7_4_1-2012-04-26-release:1.17
	sid-snapshot-20120401:1.17
	sid-snapshot-20120301:1.17
	sid-snapshot-20120201:1.17
	gdb_7_4-2012-01-24-release:1.17
	sid-snapshot-20120101:1.17
	gdb_7_4-branch:1.17.0.4
	gdb_7_4-2011-12-13-branchpoint:1.17
	sid-snapshot-20111201:1.17
	binutils-2_22:1.17
	sid-snapshot-20111101:1.17
	sid-snapshot-20111001:1.17
	binutils-2_22-branch:1.17.0.2
	binutils-2_22-branchpoint:1.17
	gdb_7_3_1-2011-09-04-release:1.16
	sid-snapshot-20110901:1.17
	sid-snapshot-20110801:1.17
	gdb_7_3-2011-07-26-release:1.16
	sid-snapshot-20110701:1.17
	sid-snapshot-20110601:1.16
	sid-snapshot-20110501:1.16
	gdb_7_3-branch:1.16.0.12
	gdb_7_3-2011-04-01-branchpoint:1.16
	sid-snapshot-20110401:1.16
	sid-snapshot-20110301:1.16
	sid-snapshot-20110201:1.16
	sid-snapshot-20110101:1.16
	binutils-2_21:1.16
	sid-snapshot-20101201:1.16
	binutils-2_21-branch:1.16.0.10
	binutils-2_21-branchpoint:1.16
	sid-snapshot-20101101:1.16
	sid-snapshot-20101001:1.16
	binutils-2_20_1:1.16
	gdb_7_2-2010-09-02-release:1.16
	sid-snapshot-20100901:1.16
	sid-snapshot-20100801:1.16
	gdb_7_2-branch:1.16.0.8
	gdb_7_2-2010-07-07-branchpoint:1.16
	sid-snapshot-20100701:1.16
	sid-snapshot-20100601:1.16
	sid-snapshot-20100501:1.16
	sid-snapshot-20100401:1.16
	gdb_7_1-2010-03-18-release:1.16
	sid-snapshot-20100301:1.16
	gdb_7_1-branch:1.16.0.6
	gdb_7_1-2010-02-18-branchpoint:1.16
	sid-snapshot-20100201:1.16
	sid-snapshot-20100101:1.16
	gdb_7_0_1-2009-12-22-release:1.16
	sid-snapshot-20091201:1.16
	sid-snapshot-20091101:1.16
	binutils-2_20:1.16
	gdb_7_0-2009-10-06-release:1.16
	sid-snapshot-20091001:1.16
	gdb_7_0-branch:1.16.0.4
	gdb_7_0-2009-09-16-branchpoint:1.16
	arc-sim-20090309:1.13
	binutils-arc-20081103-branch:1.14.0.12
	binutils-arc-20081103-branchpoint:1.14
	binutils-2_20-branch:1.16.0.2
	binutils-2_20-branchpoint:1.16
	sid-snapshot-20090901:1.15
	sid-snapshot-20090801:1.15
	msnyder-checkpoint-072509-branch:1.15.0.4
	msnyder-checkpoint-072509-branchpoint:1.15
	sid-snapshot-20090701:1.15
	dje-cgen-play1-branch:1.15.0.2
	dje-cgen-play1-branchpoint:1.15
	sid-snapshot-20090601:1.15
	sid-snapshot-20090501:1.15
	sid-snapshot-20090401:1.14
	arc-20081103-branch:1.14.0.10
	arc-20081103-branchpoint:1.14
	arc-insight_6_8-branch:1.13.0.14
	arc-insight_6_8-branchpoint:1.13
	insight_6_8-branch:1.13.0.12
	insight_6_8-branchpoint:1.13
	sid-snapshot-20090301:1.14
	binutils-2_19_1:1.14
	sid-snapshot-20090201:1.14
	sid-snapshot-20090101:1.14
	reverse-20081226-branch:1.14.0.8
	reverse-20081226-branchpoint:1.14
	sid-snapshot-20081201:1.14
	multiprocess-20081120-branch:1.14.0.6
	multiprocess-20081120-branchpoint:1.14
	sid-snapshot-20081101:1.14
	binutils-2_19:1.14
	sid-snapshot-20081001:1.14
	reverse-20080930-branch:1.14.0.4
	reverse-20080930-branchpoint:1.14
	binutils-2_19-branch:1.14.0.2
	binutils-2_19-branchpoint:1.14
	sid-snapshot-20080901:1.14
	sid-snapshot-20080801:1.14
	reverse-20080717-branch:1.13.0.10
	reverse-20080717-branchpoint:1.13
	sid-snapshot-20080701:1.13
	msnyder-reverse-20080609-branch:1.13.0.8
	msnyder-reverse-20080609-branchpoint:1.13
	drow-reverse-20070409-branch:1.11.0.34
	drow-reverse-20070409-branchpoint:1.11
	sid-snapshot-20080601:1.13
	sid-snapshot-20080501:1.13
	sid-snapshot-20080403:1.13
	sid-snapshot-20080401:1.13
	gdb_6_8-2008-03-27-release:1.13
	sid-snapshot-20080301:1.13
	gdb_6_8-branch:1.13.0.6
	gdb_6_8-2008-02-26-branchpoint:1.13
	sid-snapshot-20080201:1.13
	sid-snapshot-20080101:1.13
	sid-snapshot-20071201:1.13
	sid-snapshot-20071101:1.13
	gdb_6_7_1-2007-10-29-release:1.13
	gdb_6_7-2007-10-10-release:1.13
	sid-snapshot-20071001:1.13
	gdb_6_7-branch:1.13.0.4
	gdb_6_7-2007-09-07-branchpoint:1.13
	binutils-2_18:1.13
	binutils-2_18-branch:1.13.0.2
	binutils-2_18-branchpoint:1.13
	insight_6_6-20070208-release:1.11
	binutils-csl-coldfire-4_1-32:1.11
	binutils-csl-sourcerygxx-4_1-32:1.11
	gdb_6_6-2006-12-18-release:1.11
	binutils-csl-innovasic-fido-3_4_4-33:1.11
	binutils-csl-sourcerygxx-3_4_4-32:1.9
	binutils-csl-coldfire-4_1-30:1.11
	binutils-csl-sourcerygxx-4_1-30:1.11
	binutils-csl-coldfire-4_1-28:1.11
	binutils-csl-sourcerygxx-4_1-29:1.11
	binutils-csl-sourcerygxx-4_1-28:1.11
	gdb_6_6-branch:1.11.0.32
	gdb_6_6-2006-11-15-branchpoint:1.11
	binutils-csl-arm-2006q3-27:1.11
	binutils-csl-sourcerygxx-4_1-27:1.11
	binutils-csl-arm-2006q3-26:1.11
	binutils-csl-sourcerygxx-4_1-26:1.11
	binutils-csl-sourcerygxx-4_1-25:1.11
	binutils-csl-sourcerygxx-4_1-24:1.11
	binutils-csl-sourcerygxx-4_1-23:1.11
	insight_6_5-20061003-release:1.11
	gdb-csl-symbian-6_4_50_20060226-12:1.11
	binutils-csl-sourcerygxx-4_1-21:1.11
	binutils-csl-arm-2006q3-21:1.11
	binutils-csl-sourcerygxx-4_1-22:1.11
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.11
	binutils-csl-sourcerygxx-4_1-20:1.11
	binutils-csl-arm-2006q3-19:1.11
	binutils-csl-sourcerygxx-4_1-19:1.11
	binutils-csl-sourcerygxx-4_1-18:1.11
	binutils-csl-renesas-4_1-9:1.11
	gdb-csl-sourcerygxx-3_4_4-25:1.11
	binutils-csl-sourcerygxx-3_4_4-25:1.9
	nickrob-async-20060828-mergepoint:1.11
	gdb-csl-symbian-6_4_50_20060226-11:1.11
	binutils-csl-renesas-4_1-8:1.11
	binutils-csl-renesas-4_1-7:1.11
	binutils-csl-renesas-4_1-6:1.11
	gdb-csl-sourcerygxx-4_1-17:1.11
	binutils-csl-sourcerygxx-4_1-17:1.11
	gdb-csl-20060226-branch-local-2:1.11
	gdb-csl-sourcerygxx-4_1-14:1.11
	binutils-csl-sourcerygxx-4_1-14:1.11
	binutils-csl-sourcerygxx-4_1-15:1.11
	gdb-csl-sourcerygxx-4_1-13:1.11
	binutils-csl-sourcerygxx-4_1-13:1.11
	binutils-2_17:1.11
	gdb-csl-sourcerygxx-4_1-12:1.11
	binutils-csl-sourcerygxx-4_1-12:1.11
	gdb-csl-sourcerygxx-3_4_4-21:1.11
	binutils-csl-sourcerygxx-3_4_4-21:1.11
	gdb_6_5-20060621-release:1.11
	binutils-csl-wrs-linux-3_4_4-24:1.9
	binutils-csl-wrs-linux-3_4_4-23:1.9
	gdb-csl-sourcerygxx-4_1-9:1.11
	binutils-csl-sourcerygxx-4_1-9:1.11
	gdb-csl-sourcerygxx-4_1-8:1.11
	binutils-csl-sourcerygxx-4_1-8:1.11
	gdb-csl-sourcerygxx-4_1-7:1.11
	binutils-csl-sourcerygxx-4_1-7:1.11
	gdb-csl-arm-2006q1-6:1.11
	binutils-csl-arm-2006q1-6:1.11
	gdb-csl-sourcerygxx-4_1-6:1.11
	binutils-csl-sourcerygxx-4_1-6:1.11
	binutils-csl-wrs-linux-3_4_4-22:1.9
	gdb-csl-symbian-6_4_50_20060226-10:1.11
	gdb-csl-symbian-6_4_50_20060226-9:1.11
	gdb-csl-symbian-6_4_50_20060226-8:1.11
	gdb-csl-coldfire-4_1-11:1.11
	binutils-csl-coldfire-4_1-11:1.11
	gdb-csl-sourcerygxx-3_4_4-19:1.11
	binutils-csl-sourcerygxx-3_4_4-19:1.11
	gdb-csl-coldfire-4_1-10:1.11
	gdb_6_5-branch:1.11.0.30
	gdb_6_5-2006-05-14-branchpoint:1.11
	binutils-csl-coldfire-4_1-10:1.11
	gdb-csl-sourcerygxx-4_1-5:1.11
	binutils-csl-sourcerygxx-4_1-5:1.11
	nickrob-async-20060513-branch:1.11.0.28
	nickrob-async-20060513-branchpoint:1.11
	gdb-csl-sourcerygxx-4_1-4:1.11
	binutils-csl-sourcerygxx-4_1-4:1.11
	msnyder-reverse-20060502-branch:1.11.0.26
	msnyder-reverse-20060502-branchpoint:1.11
	binutils-csl-wrs-linux-3_4_4-21:1.9
	gdb-csl-morpho-4_1-4:1.11
	binutils-csl-morpho-4_1-4:1.11
	gdb-csl-sourcerygxx-3_4_4-17:1.11
	binutils-csl-sourcerygxx-3_4_4-17:1.11
	binutils-csl-wrs-linux-3_4_4-20:1.9
	readline_5_1-import-branch:1.11.0.24
	readline_5_1-import-branchpoint:1.11
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.11
	binutils-2_17-branch:1.11.0.22
	binutils-2_17-branchpoint:1.11
	gdb-csl-symbian-20060226-branch:1.11.0.20
	gdb-csl-symbian-20060226-branchpoint:1.11
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.11
	msnyder-reverse-20060331-branch:1.11.0.18
	msnyder-reverse-20060331-branchpoint:1.11
	binutils-csl-2_17-branch:1.11.0.16
	binutils-csl-2_17-branchpoint:1.11
	gdb-csl-available-20060303-branch:1.11.0.14
	gdb-csl-available-20060303-branchpoint:1.11
	gdb-csl-20060226-branch:1.11.0.12
	gdb-csl-20060226-branchpoint:1.11
	gdb_6_4-20051202-release:1.11
	msnyder-fork-checkpoint-branch:1.11.0.10
	msnyder-fork-checkpoint-branchpoint:1.11
	gdb-csl-gxxpro-6_3-branch:1.11.0.8
	gdb-csl-gxxpro-6_3-branchpoint:1.11
	gdb_6_4-branch:1.11.0.6
	gdb_6_4-2005-11-01-branchpoint:1.11
	gdb-csl-arm-20051020-branch:1.11.0.4
	gdb-csl-arm-20051020-branchpoint:1.11
	binutils-csl-gxxpro-3_4-branch:1.9.0.70
	binutils-csl-gxxpro-3_4-branchpoint:1.9
	binutils-2_16_1:1.9
	msnyder-tracepoint-checkpoint-branch:1.11.0.2
	msnyder-tracepoint-checkpoint-branchpoint:1.11
	gdb-csl-arm-20050325-2005-q1b:1.9
	binutils-csl-arm-2005q1b:1.9
	binutils-2_16:1.9
	gdb-csl-arm-20050325-2005-q1a:1.9
	binutils-csl-arm-2005q1a:1.9
	csl-arm-20050325-branch:1.9.0.68
	csl-arm-20050325-branchpoint:1.9
	binutils-csl-arm-2005q1-branch:1.9.0.66
	binutils-csl-arm-2005q1-branchpoint:1.9
	binutils-2_16-branch:1.9.0.64
	binutils-2_16-branchpoint:1.9
	csl-arm-2004-q3d:1.9
	gdb_6_3-20041109-release:1.9
	gdb_6_3-branch:1.9.0.60
	gdb_6_3-20041019-branchpoint:1.9
	csl-arm-2004-q3:1.9
	drow_intercu-merge-20040921:1.9
	drow_intercu-merge-20040915:1.9
	jimb-gdb_6_2-e500-branch:1.9.0.62
	jimb-gdb_6_2-e500-branchpoint:1.9
	gdb_6_2-20040730-release:1.9
	gdb_6_2-branch:1.9.0.58
	gdb_6_2-2004-07-10-gmt-branchpoint:1.9
	gdb_6_1_1-20040616-release:1.9
	binutils-2_15:1.9
	binutils-2_15-branchpoint:1.9
	csl-arm-2004-q1a:1.9
	csl-arm-2004-q1:1.9
	gdb_6_1-2004-04-05-release:1.9
	drow_intercu-merge-20040402:1.9
	drow_intercu-merge-20040327:1.9
	ezannoni_pie-20040323-branch:1.9.0.56
	ezannoni_pie-20040323-branchpoint:1.9
	cagney_tramp-20040321-mergepoint:1.9
	cagney_tramp-20040309-branch:1.9.0.54
	cagney_tramp-20040309-branchpoint:1.9
	gdb_6_1-branch:1.9.0.52
	gdb_6_1-2004-03-01-gmt-branchpoint:1.9
	drow_intercu-20040221-branch:1.9.0.50
	drow_intercu-20040221-branchpoint:1.9
	binutils-2_15-branch:1.9.0.48
	cagney_bfdfile-20040213-branch:1.9.0.46
	cagney_bfdfile-20040213-branchpoint:1.9
	drow-cplus-merge-20040208:1.9
	carlton_dictionary-20040126-merge:1.9
	cagney_bigcore-20040122-branch:1.9.0.44
	cagney_bigcore-20040122-branchpoint:1.9
	drow-cplus-merge-20040113:1.9
	csl-arm-2003-q4:1.9
	drow-cplus-merge-20031224:1.9
	drow-cplus-merge-20031220:1.9
	carlton_dictionary-20031215-merge:1.9
	drow-cplus-merge-20031214:1.9
	carlton-dictionary-20031111-merge:1.9
	gdb_6_0-2003-10-04-release:1.9
	kettenis_sparc-20030918-branch:1.9.0.42
	kettenis_sparc-20030918-branchpoint:1.9
	carlton_dictionary-20030917-merge:1.9
	ezannoni_pie-20030916-branchpoint:1.9
	ezannoni_pie-20030916-branch:1.9.0.40
	cagney_x86i386-20030821-branch:1.9.0.38
	cagney_x86i386-20030821-branchpoint:1.9
	carlton_dictionary-20030805-merge:1.9
	carlton_dictionary-20030627-merge:1.9
	gdb_6_0-branch:1.9.0.36
	gdb_6_0-2003-06-23-branchpoint:1.9
	jimb-ppc64-linux-20030613-branch:1.9.0.34
	jimb-ppc64-linux-20030613-branchpoint:1.9
	binutils-2_14:1.9
	cagney_convert-20030606-branch:1.9.0.32
	cagney_convert-20030606-branchpoint:1.9
	cagney_writestrings-20030508-branch:1.9.0.30
	cagney_writestrings-20030508-branchpoint:1.9
	jimb-ppc64-linux-20030528-branch:1.9.0.28
	jimb-ppc64-linux-20030528-branchpoint:1.9
	carlton_dictionary-20030523-merge:1.9
	cagney_fileio-20030521-branch:1.9.0.26
	cagney_fileio-20030521-branchpoint:1.9
	kettenis_i386newframe-20030517-mergepoint:1.9
	jimb-ppc64-linux-20030509-branch:1.9.0.24
	jimb-ppc64-linux-20030509-branchpoint:1.9
	kettenis_i386newframe-20030504-mergepoint:1.9
	carlton_dictionary-20030430-merge:1.9
	binutils-2_14-branch:1.9.0.22
	binutils-2_14-branchpoint:1.9
	kettenis_i386newframe-20030419-branch:1.9.0.20
	kettenis_i386newframe-20030419-branchpoint:1.9
	carlton_dictionary-20030416-merge:1.9
	cagney_frameaddr-20030409-mergepoint:1.9
	kettenis_i386newframe-20030406-branch:1.9.0.18
	kettenis_i386newframe-20030406-branchpoint:1.9
	cagney_frameaddr-20030403-branchpoint:1.9
	cagney_frameaddr-20030403-branch:1.9.0.16
	cagney_framebase-20030330-mergepoint:1.9
	cagney_framebase-20030326-branch:1.9.0.14
	cagney_framebase-20030326-branchpoint:1.9
	cagney_lazyid-20030317-branch:1.9.0.12
	cagney_lazyid-20030317-branchpoint:1.9
	kettenis-i386newframe-20030316-mergepoint:1.9
	offbyone-20030313-branch:1.9.0.10
	offbyone-20030313-branchpoint:1.9
	kettenis-i386newframe-20030308-branch:1.9.0.8
	kettenis-i386newframe-20030308-branchpoint:1.9
	carlton_dictionary-20030305-merge:1.9
	cagney_offbyone-20030303-branch:1.9.0.6
	cagney_offbyone-20030303-branchpoint:1.9
	carlton_dictionary-20030207-merge:1.9
	interps-20030202-branch:1.9.0.4
	interps-20030202-branchpoint:1.9
	cagney-unwind-20030108-branch:1.9.0.2
	cagney-unwind-20030108-branchpoint:1.9
	binutils-2_13_2_1:1.8
	binutils-2_13_2:1.8
	carlton_dictionary-20021223-merge:1.9
	gdb_5_3-2002-12-12-release:1.8
	carlton_dictionary-20021115-merge:1.8
	binutils-2_13_1:1.8
	kseitz_interps-20021105-merge:1.8
	kseitz_interps-20021103-merge:1.8
	drow-cplus-merge-20021020:1.8
	drow-cplus-merge-20021025:1.8
	carlton_dictionary-20021025-merge:1.8
	carlton_dictionary-20021011-merge:1.8
	drow-cplus-branch:1.8.0.24
	drow-cplus-branchpoint:1.8
	kseitz_interps-20020930-merge:1.8
	carlton_dictionary-20020927-merge:1.8
	carlton_dictionary-branch:1.8.0.22
	carlton_dictionary-20020920-branchpoint:1.8
	sid-20020905-branchpoint:1.8
	sid-20020905-branch:1.8.0.20
	gdb_5_3-branch:1.8.0.18
	gdb_5_3-2002-09-04-branchpoint:1.8
	kseitz_interps-20020829-merge:1.8
	cagney_sysregs-20020825-branch:1.8.0.16
	cagney_sysregs-20020825-branchpoint:1.8
	readline_4_3-import-branch:1.8.0.14
	readline_4_3-import-branchpoint:1.8
	binutils-2_13:1.8
	gdb_5_2_1-2002-07-23-release:1.8
	binutils-2_13-branchpoint:1.8
	binutils-2_13-branch:1.8.0.12
	kseitz_interps-20020528-branch:1.8.0.10
	kseitz_interps-20020528-branchpoint:1.8
	cagney_regbuf-20020515-branch:1.8.0.8
	cagney_regbuf-20020515-branchpoint:1.8
	binutils-2_12_1:1.8
	jimb-macro-020506-branch:1.8.0.6
	jimb-macro-020506-branchpoint:1.8
	gdb_5_2-2002-04-29-release:1.8
	binutils-2_12:1.8
	gdb_5_2-branch:1.8.0.4
	gdb_5_2-2002-03-03-branchpoint:1.8
	binutils-2_12-branch:1.8.0.2
	binutils-2_12-branchpoint:1.8
	gdb_5_1_1-2002-01-24-release:1.6
	gdb_5_1_0_1-2002-01-03-release:1.6
	cygnus_cvs_20020108_pre:1.8
	gdb_5_1_0_1-2002-01-03-branch:1.6.0.6
	gdb_5_1_0_1-2002-01-03-branchpoint:1.6
	gdb_5_1-2001-11-21-release:1.6
	gdb_s390-2001-09-26-branch:1.6.0.4
	gdb_s390-2001-09-26-branchpoint:1.6
	gdb_5_1-2001-07-29-branch:1.6.0.2
	gdb_5_1-2001-07-29-branchpoint:1.6
	binutils-2_11_2:1.3.2.2
	binutils-2_11_1:1.3.2.2
	binutils-2_11:1.3
	x86_64versiong3:1.4
	binutils-2_11-branch:1.3.0.2
	insight-precleanup-2001-01-01:1.3
	binutils_latest_snapshot:1.18
	gdb-premipsmulti-2000-06-06-branch:1.1.0.2
	gdb-premipsmulti-2000-06-06-branchpoint:1.1;
locks; strict;
comment	@ * @;


1.18
date	2012.07.13.14.22.43;	author nickc;	state Exp;
branches;
next	1.17;

1.17
date	2011.06.06.01.26.01;	author amodra;	state Exp;
branches;
next	1.16;

1.16
date	2009.09.02.07.18.36;	author amodra;	state Exp;
branches;
next	1.15;

1.15
date	2009.04.21.17.08.20;	author hjl;	state Exp;
branches;
next	1.14;

1.14
date	2008.07.18.11.30.22;	author nickc;	state Exp;
branches;
next	1.13;

1.13
date	2007.07.03.14.26.39;	author nickc;	state Exp;
branches;
next	1.12;

1.12
date	2007.04.26.14.46.55;	author amodra;	state Exp;
branches;
next	1.11;

1.11
date	2005.05.04.15.53.02;	author nickc;	state Exp;
branches;
next	1.10;

1.10
date	2005.05.04.07.19.20;	author nickc;	state Exp;
branches;
next	1.9;

1.9
date	2002.11.30.08.39.35;	author amodra;	state Exp;
branches;
next	1.8;

1.8
date	2001.09.18.09.57.22;	author amodra;	state Exp;
branches
	1.8.22.1
	1.8.24.1;
next	1.7;

1.7
date	2001.08.17.08.57.42;	author amodra;	state Exp;
branches;
next	1.6;

1.6
date	2001.06.02.15.46.43;	author hjl;	state Exp;
branches;
next	1.5;

1.5
date	2001.03.08.21.03.57;	author nickc;	state Exp;
branches;
next	1.4;

1.4
date	2001.02.13.19.23.08;	author dj;	state Exp;
branches;
next	1.3;

1.3
date	2000.11.22.21.25.36;	author wilson;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2000.11.10.20.55.44;	author kazu;	state Exp;
branches;
next	1.1;

1.1
date	2000.04.18.04.03.16;	author wilson;	state Exp;
branches;
next	;

1.8.22.1
date	2002.12.23.19.37.26;	author carlton;	state Exp;
branches;
next	;

1.8.24.1
date	2003.12.14.20.26.34;	author drow;	state Exp;
branches;
next	;

1.3.2.1
date	2001.06.07.03.08.23;	author amodra;	state Exp;
branches;
next	1.3.2.2;

1.3.2.2
date	2001.06.11.10.04.01;	author amodra;	state Exp;
branches;
next	;


desc
@@


1.18
log
@	* aix386-core.c: Remove use of PTR and PARAMS macros.
	* archive.c: Likewise.
	* cache.c: Likewise.
	* cisco-core.c: Likewise.
	* coff-alpha.c: Likewise.
	* coff-apollo.c: Likewise.
	* coff-aux.c: Likewise.
	* coff-h8300.c: Likewise.
	* coff-h8500.c: Likewise.
	* coff-i386.c: Likewise.
	* coff-i960.c: Likewise.
	* coff-ia64.c: Likewise.
	* coff-m68k.c: Likewise.
	* coff-m88k.c: Likewise.
	* coff-mcore.c: Likewise.
	* coff-mips.c: Likewise.
	* coff-or32.c: Likewise.
	* coff-ppc.c: Likewise.
	* coff-rs6000.c: Likewise.
	* coff-sh.c: Likewise.
	* coff-sparc.c: Likewise.
	* coff-stgo32.c: Likewise.
	* coff-tic30.c: Likewise.
	* coff-tic4x.c: Likewise.
	* coff-tic54x.c: Likewise.
	* coff-tic80.c: Likewise.
	* coff-w65.c: Likewise.
	* cofflink.c: Likewise.
	* cpu-arc.c: Likewise.
	* cpu-cris.c: Likewise.
	* cpu-h8500.c: Likewise.
	* cpu-i960.c: Likewise.
	* cpu-msp430.c: Likewise.
	* cpu-ns32k.c: Likewise.
	* cpu-powerpc.c: Likewise.
	* cpu-rs6000.c: Likewise.
	* cpu-tic4x.c: Likewise.
	* cpu-w65.c: Likewise.
	* ecoff.c: Likewise.
	* ecofflink.c: Likewise.
	* elf-m10200.c: Likewise.
	* elf32-bfin.c: Likewise.
	* elf32-cris.c: Likewise.
	* elf32-crx.c: Likewise.
	* elf32-fr30.c: Likewise.
	* elf32-frv.c: Likewise.
	* elf32-h8300.c: Likewise.
	* elf32-i960.c: Likewise.
	* elf32-m32c.c: Likewise.
	* elf32-m68hc11.c: Likewise.
	* elf32-m68hc12.c: Likewise.
	* elf32-m68hc1x.c: Likewise.
	* elf32-m68k.c: Likewise.
	* elf32-mcore.c: Likewise.
	* elf32-rl78.c: Likewise.
	* elf32-rx.c: Likewise.
	* elf32-s390.c: Likewise.
	* elf32-vax.c: Likewise.
	* elf64-alpha.c: Likewise.
	* elf64-mmix.c: Likewise.
	* elf64-s390.c: Likewise.
	* elf64-sparc.c: Likewise.
	* elfnn-ia64.c: Likewise.
	* elfxx-mips.c: Likewise.
	* elfxx-sparc.c: Likewise.
	* hash.c: Likewise.
	* hp300hpux.c: Likewise.
	* hppabsd-core.c: Likewise.
	* hpux-core.c: Likewise.
	* i386dynix.c: Likewise.
	* i386linux.c: Likewise.
	* i386lynx.c: Likewise.
	* i386mach3.c: Likewise.
	* i386msdos.c: Likewise.
	* i386os9k.c: Likewise.
	* irix-core.c: Likewise.
	* lynx-core.c: Likewise.
	* m68klinux.c: Likewise.
	* mach-o.h: Likewise.
	* mipsbsd.c: Likewise.
	* netbsd-core.c: Likewise.
	* nlm32-i386.c: Likewise.
	* osf-core.c: Likewise.
	* pc532-mach.c: Likewise.
	* pef.c: Likewise.
	* ppcboot.c: Likewise.
	* ptrace-core.c: Likewise.
	* reloc16.c: Likewise.
	* sco5-core.c: Likewise.
	* som.h: Likewise.
	* sparclinux.c: Likewise.
	* sparclynx.c: Likewise.
	* ticoff.h: Likewise.
	* trad-core.c: Likewise.
	* vms-lib.c: Likewise.
	* xsym.h: Likewise.
@
text
@/* BFD back-end for HP/Intel IA-64 COFF files.
   Copyright 1999, 2000, 2001, 2002, 2005, 2007, 2008, 2009, 2011, 2012
   Free Software Foundation, Inc.
   Contributed by David Mosberger <davidm@@hpl.hp.com>

   This file is part of BFD, the Binary File Descriptor library.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
   MA 02110-1301, USA.  */

#include "sysdep.h"
#include "bfd.h"
#include "libbfd.h"
#include "coff/ia64.h"
#include "coff/internal.h"
#include "coff/pe.h"
#include "libcoff.h"

#define COFF_DEFAULT_SECTION_ALIGNMENT_POWER (2)

/* Windows ia64 uses 8K page size.  */
#define COFF_PAGE_SIZE 0x2000

static reloc_howto_type howto_table[] =
{
  EMPTY_HOWTO (0),
};

#define BADMAG(x) IA64BADMAG(x)
#define IA64 1			/* Customize coffcode.h */

#ifdef COFF_WITH_pep
# undef AOUTSZ
# define AOUTSZ		PEPAOUTSZ
# define PEAOUTHDR	PEPAOUTHDR
#endif

#define RTYPE2HOWTO(cache_ptr, dst) \
	    (cache_ptr)->howto = howto_table + (dst)->r_type;

#ifdef COFF_WITH_PE
/* Return TRUE if this relocation should
   appear in the output .reloc section.  */

static bfd_boolean
in_reloc_p (bfd * abfd ATTRIBUTE_UNUSED,
	    reloc_howto_type *howto ATTRIBUTE_UNUSED)
{
  return FALSE;			/* We don't do relocs for now...  */
}
#endif

#ifndef bfd_pe_print_pdata
#define bfd_pe_print_pdata	NULL
#endif

#include "coffcode.h"

static const bfd_target *
ia64coff_object_p (bfd *abfd)
{
#ifdef COFF_IMAGE_WITH_PE
  {
    struct external_PEI_DOS_hdr dos_hdr;
    struct external_PEI_IMAGE_hdr image_hdr;
    file_ptr offset;

    if (bfd_seek (abfd, (file_ptr) 0, SEEK_SET) != 0
	|| (bfd_bread (&dos_hdr, (bfd_size_type) sizeof (dos_hdr), abfd)
	    != sizeof (dos_hdr)))
      {
	if (bfd_get_error () != bfd_error_system_call)
	  bfd_set_error (bfd_error_wrong_format);
	return NULL;
      }

    /* There are really two magic numbers involved; the magic number
       that says this is a NT executable (PEI) and the magic number
       that determines the architecture.  The former is DOSMAGIC,
       stored in the e_magic field.  The latter is stored in the
       f_magic field.  If the NT magic number isn't valid, the
       architecture magic number could be mimicked by some other
       field (specifically, the number of relocs in section 3).  Since
       this routine can only be called correctly for a PEI file, check
       the e_magic number here, and, if it doesn't match, clobber the
       f_magic number so that we don't get a false match.  */
    if (H_GET_16 (abfd, dos_hdr.e_magic) != DOSMAGIC)
      {
	bfd_set_error (bfd_error_wrong_format);
	return NULL;
      }

    offset = H_GET_32 (abfd, dos_hdr.e_lfanew);
    if (bfd_seek (abfd, offset, SEEK_SET) != 0
	|| (bfd_bread (&image_hdr, (bfd_size_type) sizeof (image_hdr), abfd)
	    != sizeof (image_hdr)))
      {
	if (bfd_get_error () != bfd_error_system_call)
	  bfd_set_error (bfd_error_wrong_format);
	return NULL;
      }

    if (H_GET_32 (abfd, image_hdr.nt_signature)
	!= 0x4550)
      {
	bfd_set_error (bfd_error_wrong_format);
	return NULL;
      }

    /* Here is the hack.  coff_object_p wants to read filhsz bytes to
       pick up the COFF header for PE, see "struct external_PEI_filehdr"
       in include/coff/pe.h.  We adjust so that that will work. */
    if (bfd_seek (abfd, offset - sizeof (dos_hdr), SEEK_SET) != 0)
      {
	if (bfd_get_error () != bfd_error_system_call)
	  bfd_set_error (bfd_error_wrong_format);
	return NULL;
      }
  }
#endif

  return coff_object_p (abfd);
}

const bfd_target
#ifdef TARGET_SYM
  TARGET_SYM =
#else
  ia64coff_vec =
#endif
{
#ifdef TARGET_NAME
  TARGET_NAME,
#else
  "coff-ia64",			/* name */
#endif
  bfd_target_coff_flavour,
  BFD_ENDIAN_LITTLE,		/* data byte order is little */
  BFD_ENDIAN_LITTLE,		/* header byte order is little */

  (HAS_RELOC | EXEC_P |		/* object flags */
   HAS_LINENO | HAS_DEBUG |
   HAS_SYMS | HAS_LOCALS | WP_TEXT | D_PAGED),

#ifndef COFF_WITH_PE
  (SEC_HAS_CONTENTS | SEC_ALLOC | SEC_LOAD | SEC_RELOC /* section flags */
   | SEC_CODE | SEC_DATA),
#else
  (SEC_HAS_CONTENTS | SEC_ALLOC | SEC_LOAD | SEC_RELOC /* section flags */
   | SEC_CODE | SEC_DATA
   | SEC_LINK_ONCE | SEC_LINK_DUPLICATES),
#endif

#ifdef TARGET_UNDERSCORE
  TARGET_UNDERSCORE,		/* leading underscore */
#else
  0,				/* leading underscore */
#endif
  '/',				/* ar_pad_char */
  15,				/* ar_max_namelen */
  0,				/* match priority.  */

  bfd_getl64, bfd_getl_signed_64, bfd_putl64,
     bfd_getl32, bfd_getl_signed_32, bfd_putl32,
     bfd_getl16, bfd_getl_signed_16, bfd_putl16, /* data */
  bfd_getl64, bfd_getl_signed_64, bfd_putl64,
     bfd_getl32, bfd_getl_signed_32, bfd_putl32,
     bfd_getl16, bfd_getl_signed_16, bfd_putl16, /* hdrs */

/* Note that we allow an object file to be treated as a core file as well.  */
    {_bfd_dummy_target, ia64coff_object_p, /* bfd_check_format */
       bfd_generic_archive_p, ia64coff_object_p},
    {bfd_false, coff_mkobject, _bfd_generic_mkarchive, /* bfd_set_format */
       bfd_false},
    {bfd_false, coff_write_object_contents, /* bfd_write_contents */
       _bfd_write_archive_contents, bfd_false},

     BFD_JUMP_TABLE_GENERIC (coff),
     BFD_JUMP_TABLE_COPY (coff),
     BFD_JUMP_TABLE_CORE (_bfd_nocore),
     BFD_JUMP_TABLE_ARCHIVE (_bfd_archive_coff),
     BFD_JUMP_TABLE_SYMBOLS (coff),
     BFD_JUMP_TABLE_RELOCS (coff),
     BFD_JUMP_TABLE_WRITE (coff),
     BFD_JUMP_TABLE_LINK (coff),
     BFD_JUMP_TABLE_DYNAMIC (_bfd_nodynamic),

  NULL,

  COFF_SWAP_TABLE
};
@


1.17
log
@	* targets.c (bfd_target): Make ar_max_namelen an unsigned char.
	Add match_priority.
	* configure.in: Bump bfd version.
	* elfcode.h (elf_object_p): Delete hacks preventing match of
	EM_NONE and ELFOSABI_NONE targets when a better match exists.
	* elfxx-target.h (elf_match_priority): Define and use.
	* format.c (bfd_check_format_matches): Use target match_priority
	to choose best of multiple matching targets.  In cases with multiple
	matches rerun _bfd_check_format if we don't choose the last match.
	* aout-adobe.c, * aout-arm.c, * aout-target.h, * aout-tic30.c,
	* binary.c, * bout.c, * coff-alpha.c, * coff-i386.c, * coff-i860.c,
	* coff-i960.c, * coff-ia64.c, * coff-mips.c, * coff-or32.c,
	* coff-ppc.c, * coff-rs6000.c, * coff-sh.c, * coff-tic30.c,
	* coff-tic54x.c, * coff-x86_64.c, * coff64-rs6000.c, * coffcode.h,
	* i386msdos.c, * i386os9k.c, * ieee.c, * ihex.c, * mach-o-target.c,
	* mipsbsd.c, * mmo.c, * nlm-target.h, * oasys.c, * pdp11.c,
	* pe-mips.c, * pef.c, * plugin.c, * ppcboot.c, * som.c, * srec.c,
	* tekhex.c, * trad-core.c, * verilog.c, * versados.c, * vms-alpha.c,
	* vms-lib.c, * xsym.c: Init match_priority field.
	* configure: Regenerate.
	* bfd-in2.h: Regenerate.
@
text
@d2 1
a2 1
   Copyright 1999, 2000, 2001, 2002, 2005, 2007, 2008, 2009, 2011
a56 2
static bfd_boolean in_reloc_p PARAMS ((bfd *, reloc_howto_type *));

d58 2
a59 3
in_reloc_p(abfd, howto)
     bfd * abfd ATTRIBUTE_UNUSED;
     reloc_howto_type *howto ATTRIBUTE_UNUSED;
a70 2
static const bfd_target *ia64coff_object_p PARAMS ((bfd *));

d72 1
a72 2
ia64coff_object_p (abfd)
     bfd *abfd;
@


1.16
log
@update copyright dates
@
text
@d2 1
a2 1
   Copyright 1999, 2000, 2001, 2002, 2005, 2007, 2008, 2009
d179 1
@


1.15
log
@2009-04-21  H.J. Lu  <hongjiu.lu@@intel.com>

	* coff-ia64.c (COFF_PAGE_SIZE): Changed to 8K.

	* coffcode.h (coff_compute_section_file_positions): Clear
	D_PAGED if PE section alignment is smaller than COFF_PAGE_SIZE.

	* libcoff-in.h (pe_tdata): Remove force_minimum_alignment and
	force_minimum_alignment.

	* libcoff.h: Regenerated.

	* pei-ia64.c (PEI_TARGET_SUBSYSTEM): Removed.
	(PEI_FORCE_MINIMUM_ALIGNMENT): Likewise.

	* peicode.h (pe_mkobject): Don't set force_minimum_alignment
	nor target_subsystem.

	* peXXigen.c (_bfd_XXi_swap_aouthdr_out): Don't check
	force_minimum_alignment nor target_subsystem.
@
text
@d2 1
a2 1
   Copyright 1999, 2000, 2001, 2002, 2007, 2008
@


1.14
log
@        * pe-arm-wince.c (pe_print_compressed_pdata): Define new function to
        print compressed pdata structure as described on MSDN. This only
        applies to a limited set of architectures (ARM, SH4).
        (slurp_symtab, my_symbol_for_address): Define static helper
        functions for pe_print_compressed_pdata.
        * coffcode.h (bfd_coff_backend_data): Add _bfd_coff_print_pdata field.
        (bfd_coff_have_print_pdata, bfd_coff_print_pdata): Define.
        * bfd/peXXigen.c (_bfd_XX_print_private_bfd_data_common): Add check on
        bfd_coff_backend_data, call the function if non-null.
        * pei-mcore.c: Add target dependent initialisation for
        bfd_coff_backend_data.
        * coff-sh.c: Likewise.
        * coff64-rs6000.c: Likewise.
        * coff-rs6000.c: Likewise.
        * libcoff-in.h: Likewise.
        * cf-i386lynx.c: Likewise.
        * coff-alpha.c: Likewise.
        * coff-apollo.c: Likewise.
        * coff-arm.c: Likewise.
        * coff-aux.c: Likewise.
        * coff-h8300.c: Likewise.
        * coff-h8500.c: Likewise.
        * coff-i386.c: Likewise.
        * coff-i860.c: Likewise.
        * coff-i960.c: Likewise.
        * coff-ia64.c: Likewise.
        * coff-m68k.c: Likewise.
        * coff-m88k.c: Likewise.
        * coff-maxq.c: Likewise.
        * coff-mips.c: Likewise.
        * coff-or32.c: Likewise.
        * coff-sparc.c: Likewise.
        * coff-tic30.c: Likewise.
        * coff-tic4x.c: Likewise.
        * coff-tic54x.c: Likewise.
        * coff-tic80.c: Likewise.
        * coff-w65.c: Likewise.
        * coff-we32k.c: Likewise.
        * coff-x86_64.c: Likewise.
        * coff-z80.c: Likewise.
        * coff-z8k.c: Likewise.
        * pe-mcore.c: Likewise.
        * pe-mips.c: Likewise.
        * pe-ppc.c: Likewise.
        * peXXigen.c: Likewise.
        * pei-ppc.c: Likewise.
        * libcoff.h: Regenerate.
@
text
@a31 1
/* The page size is a guess based on ELF.  */
d33 2
a34 1
#define COFF_PAGE_SIZE 0x1000
@


1.13
log
@Switch sources over to use the GPL version 3
@
text
@d2 2
a3 1
   Copyright 1999, 2000, 2001, 2002, 2007 Free Software Foundation, Inc.
d68 4
@


1.12
log
@
bfd/
	Many files: Include sysdep.h before bfd.h.
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
binutils/
	* bucumm.h: Split off host dependencies to..
	* sysdep.h: ..here.
	Many files: Include sysdep.h.  Remove duplicate headers and reorder.
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
ld/
	Many files: Include sysdep.h first.  Remove duplicate headers.
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
opcodes/
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
	* ns32k-dis.c: Include sysdep.h first.
@
text
@d5 1
a5 1
This file is part of BFD, the Binary File Descriptor library.
d7 14
a20 13
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.  */
@


1.11
log
@Update the address and phone number of the FSF organization in the GPL notices
@
text
@d2 1
a2 1
   Copyright 1999, 2000, 2001, 2002 Free Software Foundation, Inc.
d21 1
a22 1
#include "sysdep.h"
@


1.10
log
@Update the FSF address in the copyright/GPL notice
@
text
@d19 1
a19 1
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02110-1301, USA.  */
@


1.9
log
@s/boolean/bfd_boolean/ s/true/TRUE/ s/false/FALSE/.  Simplify
comparisons of bfd_boolean vars with TRUE/FALSE.  Formatting.
@
text
@d19 1
a19 1
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
@


1.8
log
@Touches most files in bfd/, so likely will be blamed for everything..

o  bfd_read and bfd_write lose an unnecessary param and become
   bfd_bread and bfd_bwrite.

o  bfd_*alloc now all take a bfd_size_type arg, and will error if
   size_t is too small.  eg. 32 bit host, 64 bit bfd, verrry big files
   or bugs in linker scripts etc.

o  file_ptr becomes a bfd_signed_vma.  Besides matching sizes with
   various other types involved in handling sections, this should make
   it easier for bfd to support a 64 bit off_t on 32 bit hosts that
   provide it.

o  I've made the H_GET_* and H_PUT_* macros (which invoke bfd_h_{get,put}_*)
   generally available.  They now cast their args to bfd_vma and
   bfd_byte * as appropriate, which removes a swag of casts from the
   source.

o  Bug fixes to bfd_get8, aix386_core_vec, elf32_h8_relax_section, and
   aout-encap.c.

o  Zillions of formatting and -Wconversion fixes.
@
text
@d2 1
a2 1
   Copyright 1999, 2000, 2001 Free Software Foundation, Inc.
d52 1
a52 1
/* Return true if this relocation should
d55 1
a55 1
static boolean in_reloc_p PARAMS ((bfd *, reloc_howto_type *));
d57 1
a57 1
static boolean
d62 1
a62 1
  return 0;			/* We don't do relocs for now...  */
@


1.8.24.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@d2 1
a2 1
   Copyright 1999, 2000, 2001, 2002 Free Software Foundation, Inc.
d52 1
a52 1
/* Return TRUE if this relocation should
d55 1
a55 1
static bfd_boolean in_reloc_p PARAMS ((bfd *, reloc_howto_type *));
d57 1
a57 1
static bfd_boolean
d62 1
a62 1
  return FALSE;			/* We don't do relocs for now...  */
@


1.8.22.1
log
@2002-12-23  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021223-merge.
@
text
@d2 1
a2 1
   Copyright 1999, 2000, 2001, 2002 Free Software Foundation, Inc.
d52 1
a52 1
/* Return TRUE if this relocation should
d55 1
a55 1
static bfd_boolean in_reloc_p PARAMS ((bfd *, reloc_howto_type *));
d57 1
a57 1
static bfd_boolean
d62 1
a62 1
  return FALSE;			/* We don't do relocs for now...  */
@


1.7
log
@	* coffcode.h (coff_write_object_contents): Add ATTRIBUTE_UNUSED to
	silence warning.
	* coffgen.c (coff_print_symbol): Fix warnings.
	(coff_find_nearest_line): Likewise.
	* cofflink.c (_bfd_coff_link_input_bfd): Likewise.
	* coff-alpha.c (alpha_convert_external_reloc): Likewise.
	* format.c (bfd_check_format_matches): Likewise.
	(bfd_set_format): Likewise.
	* coff-ia64.c: Add missing prototypes.
	* elf64-alpha.c (struct alpha_elf_link_hash_entry): Make addend
	signed to silence warnings.
	(elf64_alpha_relocate_section): Likewise.
	(elf64_alpha_find_reloc_at_ofs): Fix warnings.
	(elf64_alpha_add_symbol_hook): Likewise.
	(elf64_alpha_final_link): Likewise.
	(elf64_alpha_relax_section): Remove redundant assign to info.gotent.
	(elf64_alpha_merge_gots): Add ATTRIBUTE_UNUSED to unused args.
	(elf64_alpha_size_got_sections): Likewise.
	* elfxx-ia64.c: Add missing prototypes.
	(elfNN_ia64_relocate_section): Fix warning.
	(elfNN_ia64_unwind_entry_compare): Make params const.
@
text
@d80 3
a82 3
    if (bfd_seek (abfd, 0x00, SEEK_SET) != 0
	|| bfd_read (&dos_hdr, 1, sizeof (dos_hdr), abfd)
	   != sizeof (dos_hdr))
d99 1
a99 1
    if (bfd_h_get_16 (abfd, (bfd_byte *) dos_hdr.e_magic) != DOSMAGIC)
d105 4
a108 4
    offset = bfd_h_get_32 (abfd, (bfd_byte *) dos_hdr.e_lfanew);
    if (bfd_seek (abfd, (file_ptr) offset, SEEK_SET) != 0
	|| bfd_read (&image_hdr, 1, sizeof (image_hdr), abfd)
	   != sizeof (image_hdr))
d115 1
a115 1
    if (bfd_h_get_32 (abfd, (bfd_byte *) image_hdr.nt_signature)
d125 1
a125 4
    if (bfd_seek (abfd,
		  (file_ptr) (offset - sizeof (dos_hdr)),
		  SEEK_SET)
	!= 0)
@


1.6
log
@2001-06-02  H.J. Lu  <hjl@@gnu.org>

	* coff-ia64.c (ia64coff_object_p): Rewrite with
	external_PEI_DOS_hdr and external_PEI_IMAGE_hdr.
@
text
@d55 2
d67 2
@


1.5
log
@Update copyright notices
@
text
@a70 8
  /* We need to hack badly to handle a PE image correctly.  In PE
     images created by the GNU linker, the offset to the COFF header
     is always the size.  However, this is not the case in images
     generated by other PE linkers.  The PE format stores a four byte
     offset to the PE signature just before the COFF header at
     location 0x3c of the file.  We pick up that offset, verify that
     the PE signature is there, and then set ourselves up to read in
     the COFF header.  */
d72 2
a73 1
    bfd_byte ext_offset[4];
a74 2
    bfd_byte ext_signature[4];
    unsigned long signature;
d76 3
a78 2
    if (bfd_seek (abfd, 0x3c, SEEK_SET) != 0
	|| bfd_read (ext_offset, 1, 4, abfd) != 4)
d84 21
a104 3
    offset = bfd_h_get_32 (abfd, ext_offset);
    if (bfd_seek (abfd, offset, SEEK_SET) != 0
	|| bfd_read (ext_signature, 1, 4, abfd) != 4)
a109 1
    signature = bfd_h_get_32 (abfd, ext_signature);
d111 2
a112 1
    if (signature != 0x4550)
d119 2
a120 3
       pick up the COFF header.  We adjust so that that will work.  20
       is the size of the COFF filehdr.  */

d122 1
a122 3
		  (bfd_tell (abfd)
		   - bfd_coff_filhsz (abfd)
		   + 20),
@


1.4
log
@* peicode.h (coff_swap_filehdr_out) [COFF_IMAGE_WITH_PE]: Define
as _bfd_XXi_only_swap_filehdr_out.
(pe_mkobject) [PEI_FORCE_MINIMUM_ALIGNMENT]: Set
pe->force_minimum_alignment to TRUE.
(pe_mkobject) [PEI_TARGET_SUBSYSTEM]: Set pe->target_subsystem to
PEI_TARGET_SUBSYSTEM.
(pe_print_private_bfd_data): Call
_bfd_XX_print_private_bfd_data_common() instead of
_bfd_pe_print_private_bfd_data_common().
(pe_bfd_copy_private_bfd_data): Call
_bfd_XX_bfd_copy_private_bfd_data_common() instead of
_bfd_pe_bfd_copy_private_bfd_data_common().
(coff_bfd_copy_private_section_data): Define as
_bfd_XX_bfd_copy_private_section_data instead of
_bfd_pe_bfd_copy_private_section_data.
(coff_get_symbol_info): Define as _bfd_XX_get_symbol_info instead
of a _bfd_pe_get_symbol_info.

* peigen.c: Delete.

* peXXigen.c: Renamed from peigen.c.
(COFF_WITH_XX): Define this macro (will get expanded into
COFF_WITH_pep or COFF_WITH_pe, depending on whether this is being
compiled as peigen.c or pepigen.c.
[COFF_WITH_pep]: Include "coff/ia64.h" instead of "coff/i386.h" to
define the canonical PEP structures and definitions.
(_bfd_XXi_swap_aouthdr_out): If pe->force_minimum_alignment is in
effect, enforce minimum file and section alignments.  If
extra->Subsystem is IMAGE_SUBSYSTEM_UNKNOWN, set it to
pe->target_subsystem (this defaults to IMAGE_SUBSYSTEM_UNKNOWN,
so, by default, this is a no-op).

* libpei.h: Rename COFF_WITH_PEP to COFF_WITH_pep.
(_bfd_XX_bfd_copy_private_bfd_data_common): Add macros to map
_bfd_XXfoo to _bfd_pepfoo if COFF_WIT_PEP is defined and to
_bfd_pefoo if it's not defined.  Use these macros to define
coff swap macros.

* libcoff.h (pe_tdata): Add members target_subsystem and
force_minimum_alignment.

* efi-app-ia64.c (COFF_WITH_pep): Rename COFF_WITH_PEP to
COFF_WITH_pep.
(PEI_TARGET_SUBSYSTEM): Rename from PEI_DEFAULT_TARGET_SUBSYSTEM.

* configure.in (bfd_efi_app_ia64_vec): Use pepigen.lo instead of
peigen.lo.

* coff-ia64.c: Rename COFF_WITH_PEP to COFF_WITH_pep.
(AOUTSZ): Rename PEP64AOUTSZ and PEP64AOUTHDR to PEPAOUTSZ and
PEPAOUTHDR.

* Makefile.in (BFD64_BACKENDS): Mention pepigen.lo.
(BFD64_BACKENDS_CFILES): Mention pepigen.c
(peigen.c): Add rule to generate from peXXigen.c.
(pepigen.c): Ditto.
(pepigen.lo): List dependencies for pepigen.lo.

* unwind-ia64.c (unw_decode_x1): Declare code arg with
ATTRIBUTE_UNUSED.
(unw_decode_x2): Ditto.
(unw_decode_x3): Ditto.
(unw_decode_x4): Ditto.

* pe.h (PEPAOUTSZ): Rename from PEP64AOUTSZ.
Rename from PEPAOUTHDR.
@
text
@d2 1
a2 1
   Copyright 1999, 2001 Free Software Foundation, Inc.
@


1.3
log
@Eliminate compiler warnings from IA-64 port.
	* coff-ia64.c (howto_table): Use EMPTY_HOWTO.
	(in_reloc_p): Add ATTRIBUTE_UNUSED to unused parameters.
	* cpu-ia64-opc.c (ins_rsvd, ext_rsvd, ins_const, ext_const): Likewise.
	(ins_imms_scaled): Initialize sign_bit at function entry.
	(elf64_ia64_operands): Add missing initializers.
	* elfxx-ia64.c (elfNN_ia64_reloc, elfNN_ia64_reloc_type_lookup,
	elfNN_ia64_info_to_howto, elfNN_ia64_fake_sections,
	elfNN_ia64_add_symbol_hook, elfNN_ia64_is_local_label_name,
	elfNN_ia64_local_hash_table_init, get_fptr, get_pltoff,
	elfNN_ia64_adjust_dynamic_symbol): Add ATTRIBUTE_UNUSED for unused
	parameters.
	(elfNN_ia64_info_to_howto): Initialize free_relocs, free_contents,
	and free_extsyms at function entry.
	(elfNN_add_symbol_hook): Add unsigned cast to bfd_get_gp_size result.
	(elfNN_ia64_create_dynamic_sections): Delete unused local h.
	(get_got): Delete unused local srel.
	(elfNN_ia64_check_relocs): Initialize dynrel_type when declared.
	(elfNN_ia64_relocate_section): Delete unused local dynindx.
@
text
@d2 1
a2 1
   Copyright 1999 Free Software Foundation, Inc.
a23 1

a24 1

a25 1

a26 1

d42 1
a42 1
#ifdef COFF_WITH_PEP64
d44 2
a45 2
# define AOUTSZ		PEP64AOUTSZ
# define PEAOUTHDR	PEP64AOUTHDR
@


1.3.2.1
log
@Update copyright notices.
@
text
@d2 1
a2 1
   Copyright 1999, 2000, 2001 Free Software Foundation, Inc.
@


1.3.2.2
log
@Merge from mainline.
@
text
@d24 1
d26 1
d28 1
d30 1
d46 1
a46 1
#ifdef COFF_WITH_pep
d48 2
a49 2
# define AOUTSZ		PEPAOUTSZ
# define PEAOUTHDR	PEPAOUTHDR
d75 8
d84 1
a84 2
    struct external_PEI_DOS_hdr dos_hdr;
    struct external_PEI_IMAGE_hdr image_hdr;
d86 2
d89 2
a90 3
    if (bfd_seek (abfd, 0x00, SEEK_SET) != 0
	|| bfd_read (&dos_hdr, 1, sizeof (dos_hdr), abfd)
	   != sizeof (dos_hdr))
d96 3
a98 21

    /* There are really two magic numbers involved; the magic number
       that says this is a NT executable (PEI) and the magic number
       that determines the architecture.  The former is DOSMAGIC,
       stored in the e_magic field.  The latter is stored in the
       f_magic field.  If the NT magic number isn't valid, the
       architecture magic number could be mimicked by some other
       field (specifically, the number of relocs in section 3).  Since
       this routine can only be called correctly for a PEI file, check
       the e_magic number here, and, if it doesn't match, clobber the
       f_magic number so that we don't get a false match.  */
    if (bfd_h_get_16 (abfd, (bfd_byte *) dos_hdr.e_magic) != DOSMAGIC)
      {
	bfd_set_error (bfd_error_wrong_format);
	return NULL;
      }

    offset = bfd_h_get_32 (abfd, (bfd_byte *) dos_hdr.e_lfanew);
    if (bfd_seek (abfd, (file_ptr) offset, SEEK_SET) != 0
	|| bfd_read (&image_hdr, 1, sizeof (image_hdr), abfd)
	   != sizeof (image_hdr))
d104 1
d106 1
a106 2
    if (bfd_h_get_32 (abfd, (bfd_byte *) image_hdr.nt_signature)
	!= 0x4550)
d113 3
a115 2
       pick up the COFF header for PE, see "struct external_PEI_filehdr"
       in include/coff/pe.h.  We adjust so that that will work. */
d117 3
a119 1
		  (file_ptr) (offset - sizeof (dos_hdr)),
@


1.2
log
@2000-11-10  Kazu Hirata  <kazu@@hxi.com>

	* coff-h8300.c: Fix formatting.
	* coff-h8500.c: Likewise.
	* coff-i386.c: Likewise.
	* coff-i860.c: Likewise.
	* coff-i960.c: Likewise.
	* coff-ia64.c: Likewise.
@
text
@d40 1
a40 1
  {0},
d61 2
a62 2
     bfd * abfd;
     reloc_howto_type *howto;
@


1.1
log
@Bfd support for generating IA-64 EFI binaries.
	* Makefile.am (BFD64_BACKENDS): Mention coff-ia64.lo.
	(BFD64_BACKENDS_CFILES): Mention coff-ia64.c
	(coff-ia64.lo): Add dependency.
	* Makefile.in: Regenerate.
	* coff-ia64.c: New file.
	* efi-app-ia32.c: Ditto.
	* efi-app-ia64.c: Ditto.
	...
@
text
@d38 1
a38 1
static reloc_howto_type howto_table[] = 
d57 1
a57 1
   appear in the output .reloc section. */
d64 2
a65 2
  return 0;			/* We don't do relocs for now... */
}     
d177 1
a177 1
/* Note that we allow an object file to be treated as a core file as well. */
@

