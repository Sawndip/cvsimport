head	1.3;
access;
symbols
	binutils-2_24-branch:1.3.0.12
	binutils-2_24-branchpoint:1.3
	binutils-2_21_1:1.3
	binutils-2_23_2:1.3
	binutils-2_23_1:1.3
	binutils-2_23:1.3
	binutils-2_23-branch:1.3.0.10
	binutils-2_23-branchpoint:1.3
	binutils-2_22_branch:1.3.0.8
	binutils-2_22:1.3
	binutils-2_22-branch:1.3.0.6
	binutils-2_22-branchpoint:1.3
	binutils-2_21:1.3
	binutils-2_21-branch:1.3.0.4
	binutils-2_21-branchpoint:1.3
	binutils-2_20_1:1.3.2.1
	binutils-2_20:1.3.2.1
	binutils-2_20-branch:1.3.0.2
	binutils_latest_snapshot:1.3;
locks; strict;
comment	@# @;


1.3
date	2009.10.10.01.24.57;	author ian;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2009.09.22.19.54.46;	author ian;	state Exp;
branches;
next	1.1;

1.1
date	2009.09.18.20.02.21;	author csilvers;	state Exp;
branches;
next	;

1.3.2.1
date	2009.10.16.05.51.18;	author ian;	state Exp;
branches;
next	;


desc
@@


1.3
log
@	* testsuite/retain_symbols_file_test.sh: Don't test for __tcf_0.
@
text
@#!/bin/sh

# retain_symbols_file_test.sh -- a test case for -retain-symbols-file

# Copyright 2009 Free Software Foundation, Inc.
# Written by Craig Silverstein <csilvers@@google.com>.

# This file is part of gold.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
# MA 02110-1301, USA.

# The Makefile tries linking simple_test.o with -retain-symbols-file.
# It then runs nm over the results.  We check that the output is right.

check_present()
{
    if ! grep -q "$1" retain_symbols_file_test.stdout
    then
        echo "Did not find expected symbol $1 in retain_symbols_file_test.stdout"
        exit 1
    fi
}

check_absent()
{
    if grep -q "$1" retain_symbols_file_test.stdout
    then
        echo "Found unexpected symbol $1 in retain_symbols_file_test.stdout"
        exit 1
    fi
}

check_present 't1'
check_present 't16b::t16b()'
check_present 't20a::get()'
check_present 't18()'
check_absent 't10'
check_absent 't1()'
check_absent 't16b::t()'

exit 0
@


1.3.2.1
log
@Merge elfcpp and gold from trunk.
@
text
@@


1.2
log
@	* testsuite/retain_symbols_file_test.sh (check_present): Change
	output file name to retain_symbols_file_test.stdout.
	(check_absent): Likewise.
@
text
@a49 1
check_present '__tcf_0'
@


1.1
log
@	* object.cc (Sized_relobj::do_count): Test should_retain_symbol map.
	* options.cc: Include <cerrno> and <fstream>.
	(General_options::finalize): Parse -retain-symbols-file tag.
	* options.h: New flag.
	(General_options): New method should_retain_symbol, new
	variable symbols_to_retain.
	* symtab.cc (Symbol_table::sized_finalize_symbol): Test
	should_retain_symbol map.
	* testsuite/Makefile.am (retain_symbols_file_test): New test.
	* testsuite/Makefile.in: Regenerate.
	* testsuite/retain_symbols_file_test.sh: New file.
@
text
@d30 1
a30 1
    if ! grep -q "$1" retain_symbols_file_test.out
d32 1
a32 1
        echo "Did not find expected symbol $1 in retain_symbols_file_test.out"
d39 1
a39 1
    if grep -q "$1" retain_symbols_file_test.out
d41 1
a41 1
        echo "Found unexpected symbol $1 in retain_symbols_file_test.out"
@

