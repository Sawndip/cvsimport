head	1.4;
access;
symbols
	binutils-2_24-branch:1.4.0.10
	binutils-2_24-branchpoint:1.4
	binutils-2_21_1:1.4
	binutils-2_23_2:1.4
	binutils-2_23_1:1.4
	binutils-2_23:1.4
	binutils-2_23-branch:1.4.0.8
	binutils-2_23-branchpoint:1.4
	binutils-2_22_branch:1.4.0.6
	binutils-2_22:1.4
	binutils-2_22-branch:1.4.0.4
	binutils-2_22-branchpoint:1.4
	binutils-2_21:1.4
	binutils-2_21-branch:1.4.0.2
	binutils-2_21-branchpoint:1.4
	binutils-2_20_1:1.3
	binutils-2_20:1.3
	binutils-arc-20081103-branch:1.3.0.10
	binutils-arc-20081103-branchpoint:1.3
	binutils-2_20-branch:1.3.0.8
	binutils-2_20-branchpoint:1.3
	dje-cgen-play1-branch:1.3.0.6
	dje-cgen-play1-branchpoint:1.3
	arc-20081103-branch:1.3.0.4
	arc-20081103-branchpoint:1.3
	binutils-2_19_1:1.3
	binutils-2_19:1.3
	binutils-2_19-branch:1.3.0.2
	binutils-2_19-branchpoint:1.3
	binutils_latest_snapshot:1.4
	added-to-binutils:1.3;
locks; strict;
comment	@# @;


1.4
date	2010.01.12.06.41.36;	author ian;	state Exp;
branches;
next	1.3;

1.3
date	2008.01.24.00.15.00;	author iant;	state Exp;
branches;
next	1.2;

1.2
date	2008.01.18.23.35.09;	author iant;	state Exp;
branches;
next	1.1;

1.1
date	2008.01.15.23.41.28;	author iant;	state Exp;
branches;
next	;


desc
@@


1.4
log
@	* script.cc (class Lazy_demangler): Recreate--revert part of patch
	of 2009-12-30.
	(Version_script_info::Version_script_info): Initialize globs_,
	default_version_, default_is_global_, and exact_.  Don't
	initialize globals_ or locals_.
	(Version_script_info::build_lookup_tables): Build local symbols
	first.
	(Version_script_info::unquote): New function.
	(Version_script_info::add_exact_match): New function.
	(Version_script_info::build_expression_list_lookup): Remove lookup
	parameter.  Add is_global parameter.  Change all callers.  Handle
	wildcard pattern specially.  Unquote pattern.  Call
	add_exact_match.
	(Version_script_info::get_name_to_match): New function.
	(Version_script_info::get_symbol_version): New function.
	(Version_script_info::get_symbol_version_helper): Remove.
	(Version_script_info::check_unmatched_names): Call unquote.
	* script.h (class Version_script_info): Change get_symbol_version
	to be non-inline and add is_global parameter; change all callers.
	Rewrite symbol_is_local.  Update declarations.  Define struct
	Version_tree_match, Exact, Globs.  Don't define struct Lookup.
	Remove globals_ and locals_ members.  Add exact_, globs_,
	default_version_, is_global_.
	(Version_script_info::Glob): Remove pattern, add expression and
	is_global.  Update constructor.  Change all callers.
	* dynobj.cc (Versions::finalize): Mark the version symbol as the
	default version.
	(Versions::symbol_section_contents): If a symbol is undefined, or
	defined in a dynamic object, set the version index to
	VER_NDX_LOCAL.
	* symtab.cc (Symbol_table::add_from_relobj): Don't call
	symbol_is_local.
	(Symbol_table::add_from_pluginobj): Likewise.
	* testsuite/ver_matching_test.sh: blaza1 and blaza go into V2.
@
text
@#!/bin/sh

# ver_matching_test.sh -- a test case for version script matching

# Copyright 2008, 2010 Free Software Foundation, Inc.
# Written by Ian Lance Taylor <iant@@google.com>.

# This file is part of gold.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
# MA 02110-1301, USA.

# This file goes with ver_matching_def.cc, a C++ source file
# constructed with several symbols mapped via version_script.map.  We
# run readelf on the resulting shared object and check that each
# symbol has the correct version.

check()
{
    if ! grep -q "$2" "$1"
    then
	echo "Did not find expected symbol in $1:"
	echo "   $2"
	echo ""
	echo "Actual output below:"
	cat "$1"
	exit 1
    fi
}

check_missing()
{
    if grep -q "$2" "$1"
    then
	echo "Found unexpected symbol in $1:"
	echo "   $2"
	echo ""
	echo "Actual output below:"
	cat "$1"
	exit 1
    fi
}

check ver_matching_test.stdout "V1  *sizeof_headers$"
check ver_matching_test.stdout "Base  *globaoeufostuff$"
check ver_matching_test.stdout "V1  *globaoeufxstuff$"
check ver_matching_test.stdout "V2  *otherns::stuff$"
check ver_matching_test.stdout "Base  *otherns::biz$"
check ver_matching_test.stdout "V1  *foo$"
check ver_matching_test.stdout "V1  *bar()$"
check ver_matching_test.stdout "Base  *bar1()$"
check ver_matching_test.stdout "V1  *bar2$"
check ver_matching_test.stdout "V1  *myns::blah()$"
check ver_matching_test.stdout "V1  *myns::bip()$"
check ver_matching_test.stdout "V1  *myns::Stuff::Stuff()$"
check ver_matching_test.stdout "Base  *Biz::Biz()$"
check ver_matching_test.stdout "V2  *blaza1$"
check ver_matching_test.stdout "V2  *blaza2$"
check ver_matching_test.stdout "V2  *blaza$"
check ver_matching_test.stdout "Base  *bla$"
check ver_matching_test.stdout "V2  *blaz$"
check ver_matching_test.stdout "V2  *blazb$"

# Stuff inside quotes is matched literally, so "baz(int*, char)" should
# not match the "baz(int *)" entry in the version table.
check ver_matching_test.stdout "V1   *baz(int\\*)$"
check_missing ver_matching_test.stdout "V1   *baz(int\\*, char)$"
check_missing ver_matching_test.stdout "V1   *baz(char\\*, int)$"

check_missing ver_matching_test.stdout "foo1"

# This symbols is injected by the linker itself, but should still
# follow local:
check_missing ver_matching_test.stdout "__bss_start"

exit 0
@


1.3
log
@Originally from Craig Silverstein, with changes: support using a
version script to force symbols to be local.
@
text
@d5 1
a5 1
# Copyright 2008 Free Software Foundation, Inc.
d69 1
a69 1
check ver_matching_test.stdout "V1  *blaza1$"
d71 1
a71 1
check ver_matching_test.stdout "V1  *blaza$"
@


1.2
log
@From Craig Silverstein: Handle quoted strings differently in version
scripts, and handle extern "C++" in the middle of a block.
@
text
@d82 5
a86 3
# TODO: foo1 should be a local symbol and not show up in the .dynsym
# dump, but we haven't figured out how to suppress it yet.
# check_missing ver_matching_test.stdout "foo1"
@


1.1
log
@From Andrew Chatham and Craig Silverstein: Add support for version
scripts.
@
text
@d76 6
@

