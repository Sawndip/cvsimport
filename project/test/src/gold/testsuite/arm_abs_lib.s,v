head	1.1;
access;
symbols
	binutils-2_24-branch:1.1.0.10
	binutils-2_24-branchpoint:1.1
	binutils-2_21_1:1.1
	binutils-2_23_2:1.1
	binutils-2_23_1:1.1
	binutils-2_23:1.1
	binutils-2_23-branch:1.1.0.8
	binutils-2_23-branchpoint:1.1
	binutils-2_22_branch:1.1.0.6
	binutils-2_22:1.1
	binutils-2_22-branch:1.1.0.4
	binutils-2_22-branchpoint:1.1
	binutils-2_21:1.1
	binutils-2_21-branch:1.1.0.2
	binutils-2_21-branchpoint:1.1
	binutils_latest_snapshot:1.1;
locks; strict;
comment	@# @;


1.1
date	2010.02.12.05.51.32;	author dougkwan;	state Exp;
branches;
next	;


desc
@@


1.1
log
@2010-02-11  Doug Kwan  <dougkwan@@google.com>

	* arm.cc (Target_arm::Scan::local): Fix bugs in relocation handling.
	(Target_arm::Scan::global): Ditto.  Also remove a comment before the
	beginning of function.
	(Target_arm::Relocate::relocate): Remove error messages for MOVW_ABS
	and MOVT_ABS relocations.  Those are non issued in scanning.  Fix
	parameter is_32bit in calls to should_apply_static_reloc.
	* testsuite/Makefile.am (check_SCRIPTS): Add arm_abs_global.sh.
	(check_DATA): Add arm_abs_global.stdout.
	(arm_abs_lib.o, libarm_abs.so, arm_abs_global.o, arm_abs_global,
	arm_abs_global.stdout): New rules.
	(MOSTLLYCLEANFILES): Add arm_abs_global
	* Makefile.in: Regenerate.
	* testsuite/arm_abs_global.s: New file.
	* testsuite/arm_abs_global.sh: Ditto.
	* testsuite/arm_abs_lib.s: Ditto.
@
text
@	.syntax	unified

	.text
	.align	2
	.global	_movt_abs_global
	.type	_movt_abs_global, %function
_movt_abs_global:
	bx	lr
	.size	_movt_abs_global, .-_movt_abs_global

	.global	_movw_abs_global
	.type	_movw_abs_global, %function
_movw_abs_global:
	bx	lr
	.size	_movw_abs_global, .-_movw_abs_global

	.thumb
	.align	2
	.global	_thm_movt_abs_global
	.type	_thm_movt_abs_global, %function
_thm_movt_abs_global:
	bx	lr
	.size	_thm_movt_abs_global, .-_thm_movt_abs_global

	.global	_thm_movw_abs_global
	.type	_thm_movw_abs_global, %function
_thm_movw_abs_global:
	bx	lr
	.size	_thm_movw_abs_global, .-_thm_movw_abs_global

	.global	_abs32_global_plt
	.type	_abs32_global_plt, %function
_abs32_global_plt:
	bx	lr
	.size	_abs32_global_plt, .-_abs32_global_plt

	.comm	_abs32_global,4,4
@
