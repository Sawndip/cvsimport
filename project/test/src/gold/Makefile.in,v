head	1.101;
access;
symbols
	binutils-2_24-branch:1.100.0.2
	binutils-2_24-branchpoint:1.100
	binutils-2_21_1:1.88
	binutils-2_23_2:1.93.2.1
	binutils-2_23_1:1.93
	binutils-2_23:1.93
	binutils-2_23-branch:1.93.0.2
	binutils-2_23-branchpoint:1.93
	binutils-2_22_branch:1.89.0.4
	binutils-2_22:1.89
	binutils-2_22-branch:1.89.0.2
	binutils-2_22-branchpoint:1.89
	binutils-2_21:1.88
	binutils-2_21-branch:1.88.0.2
	binutils-2_21-branchpoint:1.88
	binutils-2_20_1:1.76.2.1
	binutils-2_20:1.76
	binutils-arc-20081103-branch:1.60.0.4
	binutils-arc-20081103-branchpoint:1.60
	binutils-2_20-branch:1.76.0.2
	binutils-2_20-branchpoint:1.76
	dje-cgen-play1-branch:1.71.0.2
	dje-cgen-play1-branchpoint:1.71
	arc-20081103-branch:1.60.0.2
	arc-20081103-branchpoint:1.60
	binutils-2_19_1:1.59
	binutils-2_19:1.59
	binutils-2_19-branch:1.59.0.2
	binutils-2_19-branchpoint:1.59
	binutils_latest_snapshot:1.101
	added-to-binutils:1.39;
locks; strict;
comment	@# @;


1.101
date	2013.10.11.21.56.16;	author roland;	state Exp;
branches;
next	1.100;

1.100
date	2013.05.13.17.35.22;	author ccoutant;	state Exp;
branches
	1.100.2.1;
next	1.99;

1.99
date	2013.04.26.21.38.57;	author ccoutant;	state Exp;
branches;
next	1.98;

1.98
date	2013.01.11.14.36.36;	author ian;	state Exp;
branches;
next	1.97;

1.97
date	2012.12.17.16.56.02;	author nickc;	state Exp;
branches;
next	1.96;

1.96
date	2012.12.07.04.28.52;	author ian;	state Exp;
branches;
next	1.95;

1.95
date	2012.10.24.02.26.39;	author ccoutant;	state Exp;
branches;
next	1.94;

1.94
date	2012.09.15.17.11.28;	author walt;	state Exp;
branches;
next	1.93;

1.93
date	2012.05.02.21.37.23;	author roland;	state Exp;
branches
	1.93.2.1;
next	1.92;

1.92
date	2012.03.21.19.02.20;	author ccoutant;	state Exp;
branches;
next	1.91;

1.91
date	2011.11.03.04.32.00;	author ian;	state Exp;
branches;
next	1.90;

1.90
date	2011.09.23.15.02.32;	author ian;	state Exp;
branches;
next	1.89;

1.89
date	2011.09.14.01.29.01;	author ccoutant;	state Exp;
branches
	1.89.2.1;
next	1.88;

1.88
date	2010.08.19.23.42.02;	author ian;	state Exp;
branches;
next	1.87;

1.87
date	2010.07.28.21.30.13;	author rwild;	state Exp;
branches;
next	1.86;

1.86
date	2010.04.27.16.05.50;	author hjl;	state Exp;
branches;
next	1.85;

1.85
date	2010.04.27.14.12.32;	author nickc;	state Exp;
branches;
next	1.84;

1.84
date	2010.04.07.21.08.01;	author rwild;	state Exp;
branches;
next	1.83;

1.83
date	2010.02.03.05.36.55;	author dougkwan;	state Exp;
branches;
next	1.82;

1.82
date	2010.01.11.19.38.22;	author dougkwan;	state Exp;
branches;
next	1.81;

1.81
date	2010.01.07.05.51.58;	author ian;	state Exp;
branches;
next	1.80;

1.80
date	2009.12.17.16.02.02;	author espindola;	state Exp;
branches;
next	1.79;

1.79
date	2009.12.09.03.02.28;	author dougkwan;	state Exp;
branches;
next	1.78;

1.78
date	2009.11.27.02.05.34;	author hjl;	state Exp;
branches;
next	1.77;

1.77
date	2009.11.25.00.10.05;	author espindola;	state Exp;
branches;
next	1.76;

1.76
date	2009.08.24.05.55.55;	author rwild;	state Exp;
branches
	1.76.2.1;
next	1.75;

1.75
date	2009.08.22.19.02.56;	author rwild;	state Exp;
branches;
next	1.74;

1.74
date	2009.08.22.16.56.44;	author rwild;	state Exp;
branches;
next	1.73;

1.73
date	2009.08.22.15.59.22;	author rwild;	state Exp;
branches;
next	1.72;

1.72
date	2009.08.05.20.51.56;	author tmsriram;	state Exp;
branches;
next	1.71;

1.71
date	2009.06.23.18.10.41;	author dougkwan;	state Exp;
branches;
next	1.70;

1.70
date	2009.06.22.06.51.53;	author ian;	state Exp;
branches;
next	1.69;

1.69
date	2009.06.05.21.32.56;	author dougkwan;	state Exp;
branches;
next	1.68;

1.68
date	2009.05.29.00.15.11;	author dougkwan;	state Exp;
branches;
next	1.67;

1.67
date	2009.03.28.05.22.30;	author ian;	state Exp;
branches;
next	1.66;

1.66
date	2009.03.27.23.21.09;	author ian;	state Exp;
branches;
next	1.65;

1.65
date	2009.03.24.00.31.28;	author ian;	state Exp;
branches;
next	1.64;

1.64
date	2009.03.20.23.37.51;	author ian;	state Exp;
branches;
next	1.63;

1.63
date	2009.03.17.22.25.28;	author ian;	state Exp;
branches;
next	1.62;

1.62
date	2009.02.25.19.05.20;	author ccoutant;	state Exp;
branches;
next	1.61;

1.61
date	2009.01.28.02.25.33;	author tmsriram;	state Exp;
branches;
next	1.60;

1.60
date	2008.09.19.22.54.57;	author ccoutant;	state Exp;
branches;
next	1.59;

1.59
date	2008.08.04.06.55.33;	author amodra;	state Exp;
branches;
next	1.58;

1.58
date	2008.07.25.04.25.49;	author ian;	state Exp;
branches;
next	1.57;

1.57
date	2008.07.22.22.08.43;	author ian;	state Exp;
branches;
next	1.56;

1.56
date	2008.07.21.05.55.27;	author cgd;	state Exp;
branches;
next	1.55;

1.55
date	2008.06.12.17.02.17;	author dje;	state Exp;
branches;
next	1.54;

1.54
date	2008.05.28.20.48.16;	author ian;	state Exp;
branches;
next	1.53;

1.53
date	2008.05.21.21.37.44;	author ian;	state Exp;
branches;
next	1.52;

1.52
date	2008.05.06.22.24.26;	author ian;	state Exp;
branches;
next	1.51;

1.51
date	2008.04.17.07.12.00;	author ian;	state Exp;
branches;
next	1.50;

1.50
date	2008.04.16.22.54.29;	author ian;	state Exp;
branches;
next	1.49;

1.49
date	2008.04.16.18.55.15;	author ian;	state Exp;
branches;
next	1.48;

1.48
date	2008.04.15.22.50.37;	author ian;	state Exp;
branches;
next	1.47;

1.47
date	2008.04.15.05.16.51;	author davem;	state Exp;
branches;
next	1.46;

1.46
date	2008.04.11.21.24.29;	author ccoutant;	state Exp;
branches;
next	1.45;

1.45
date	2008.04.11.20.44.52;	author ian;	state Exp;
branches;
next	1.44;

1.44
date	2008.04.08.14.33.35;	author ian;	state Exp;
branches;
next	1.43;

1.43
date	2008.04.07.22.16.03;	author ian;	state Exp;
branches;
next	1.42;

1.42
date	2008.04.03.14.18.37;	author ian;	state Exp;
branches;
next	1.41;

1.41
date	2008.03.28.22.42.34;	author ian;	state Exp;
branches;
next	1.40;

1.40
date	2008.03.27.06.11.57;	author ian;	state Exp;
branches;
next	1.39;

1.39
date	2008.03.14.05.57.19;	author iant;	state Exp;
branches;
next	1.38;

1.38
date	2008.02.08.07.06.57;	author iant;	state Exp;
branches;
next	1.37;

1.37
date	2008.02.06.19.32.32;	author iant;	state Exp;
branches;
next	1.36;

1.36
date	2008.02.05.22.22.09;	author iant;	state Exp;
branches;
next	1.35;

1.35
date	2008.01.23.02.13.38;	author iant;	state Exp;
branches;
next	1.34;

1.34
date	2008.01.23.01.31.13;	author iant;	state Exp;
branches;
next	1.33;

1.33
date	2008.01.15.23.41.28;	author iant;	state Exp;
branches;
next	1.32;

1.32
date	2008.01.09.19.57.45;	author iant;	state Exp;
branches;
next	1.31;

1.31
date	2007.12.14.19.00.21;	author iant;	state Exp;
branches;
next	1.30;

1.30
date	2007.12.01.06.50.09;	author iant;	state Exp;
branches;
next	1.29;

1.29
date	2007.11.30.00.35.27;	author iant;	state Exp;
branches;
next	1.28;

1.28
date	2007.11.22.00.05.51;	author iant;	state Exp;
branches;
next	1.27;

1.27
date	2007.11.02.23.02.44;	author iant;	state Exp;
branches;
next	1.26;

1.26
date	2007.10.24.18.11.23;	author iant;	state Exp;
branches;
next	1.25;

1.25
date	2007.10.17.06.24.50;	author iant;	state Exp;
branches;
next	1.24;

1.24
date	2007.10.14.06.49.13;	author iant;	state Exp;
branches;
next	1.23;

1.23
date	2007.10.14.03.57.22;	author iant;	state Exp;
branches;
next	1.22;

1.22
date	2007.10.08.05.12.59;	author iant;	state Exp;
branches;
next	1.21;

1.21
date	2007.10.07.18.06.27;	author iant;	state Exp;
branches;
next	1.20;

1.20
date	2007.10.07.17.10.09;	author iant;	state Exp;
branches;
next	1.19;

1.19
date	2007.10.04.05.49.04;	author iant;	state Exp;
branches;
next	1.18;

1.18
date	2007.10.02.22.45.07;	author iant;	state Exp;
branches;
next	1.17;

1.17
date	2007.10.01.21.30.59;	author iant;	state Exp;
branches;
next	1.16;

1.16
date	2007.09.30.23.41.32;	author iant;	state Exp;
branches;
next	1.15;

1.15
date	2007.09.26.05.44.37;	author iant;	state Exp;
branches;
next	1.14;

1.14
date	2007.09.25.06.43.17;	author iant;	state Exp;
branches;
next	1.13;

1.13
date	2007.09.22.22.44.04;	author iant;	state Exp;
branches;
next	1.12;

1.12
date	2007.09.22.20.11.12;	author iant;	state Exp;
branches;
next	1.11;

1.11
date	2007.09.21.07.20.01;	author iant;	state Exp;
branches;
next	1.10;

1.10
date	2007.05.16.17.42.48;	author iant;	state Exp;
branches;
next	1.9;

1.9
date	2006.11.30.23.52.50;	author iant;	state Exp;
branches;
next	1.8;

1.8
date	2006.11.16.00.38.25;	author iant;	state Exp;
branches;
next	1.7;

1.7
date	2006.11.14.19.21.05;	author iant;	state Exp;
branches;
next	1.6;

1.6
date	2006.11.03.18.26.10;	author iant;	state Exp;
branches;
next	1.5;

1.5
date	2006.09.29.19.58.16;	author iant;	state Exp;
branches;
next	1.4;

1.4
date	2006.09.26.21.00.34;	author iant;	state Exp;
branches;
next	1.3;

1.3
date	2006.09.21.22.13.18;	author iant;	state Exp;
branches;
next	1.2;

1.2
date	2006.08.18.22.29.20;	author iant;	state Exp;
branches;
next	1.1;

1.1
date	2006.08.04.23.10.59;	author iant;	state Exp;
branches;
next	;

1.100.2.1
date	2013.10.11.21.57.33;	author roland;	state Exp;
branches;
next	;

1.93.2.1
date	2012.12.07.21.24.47;	author ian;	state Exp;
branches;
next	;

1.89.2.1
date	2011.12.19.21.14.39;	author ian;	state Exp;
branches;
next	;

1.76.2.1
date	2010.03.03.14.16.01;	author gingold;	state Exp;
branches;
next	;


desc
@@


1.101
log
@gold/
	* configure.ac (MERGE_CONSTANTS_FLAG): New check.
	* configure: Regenerate.
	* Makefile.in: Regenerate.
	* testsuite/merge_string_literals_1.c: Renamed to have .cc suffix.
	* testsuite/merge_string_literals_2.c: Likewise.
	* testsuite/Makefile.am
	(merge_string_literals_1.o, merge_string_literals_2.o): Update deps.
	(AM_CFLAGS, AM_CXXFLAGS): Use $(MERGE_CONSTANTS_FLAG) in place of
	literal -fmerge-constants.
	* testsuite/Makefile.in: Regenerate.
@
text
@# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @@configure_input@@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@@SET_MAKE@@

#
#  Copyright 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013
#  Free Software Foundation, Inc.
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; see the file COPYING3.  If not see
# <http://www.gnu.org/licenses/>.
#


VPATH = @@srcdir@@
pkgdatadir = $(datadir)/@@PACKAGE@@
pkgincludedir = $(includedir)/@@PACKAGE@@
pkglibdir = $(libdir)/@@PACKAGE@@
pkglibexecdir = $(libexecdir)/@@PACKAGE@@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @@build@@
host_triplet = @@host@@
target_triplet = @@target@@
bin_PROGRAMS = dwp$(EXEEXT)
noinst_PROGRAMS = ld-new$(EXEEXT) incremental-dump$(EXEEXT)
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@check_PROGRAMS = ld1$(EXEEXT) \
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	ld2$(EXEEXT) ld1-r$(EXEEXT) \
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	ld2-r$(EXEEXT) ld4$(EXEEXT) \
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	$(am__EXEEXT_1)
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@@@THREADS_TRUE@@am__append_1 = -Wl,--thread-count=3
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@@@THREADS_TRUE@@am__append_2 = -Wl,--thread-count=3
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@@@THREADS_TRUE@@am__append_3 = -Wl,--thread-count=13
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@@@THREADS_TRUE@@am__append_4 = -Wl,--thread-count=3
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@@@THREADS_TRUE@@am__append_5 = ld3
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@@@THREADS_TRUE@@am__append_6 = bootstrap-test-treehash-chunksize
subdir = .
DIST_COMMON = NEWS README ChangeLog $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(srcdir)/config.in \
	$(srcdir)/../mkinstalldirs $(top_srcdir)/po/Make-in ffsll.c \
	ftruncate.c pread.c mremap.c yyscript.h yyscript.c \
	$(srcdir)/../depcomp $(srcdir)/../ylwrap
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/../config/depstand.m4 \
	$(top_srcdir)/../config/gettext-sister.m4 \
	$(top_srcdir)/../config/lcmessage.m4 \
	$(top_srcdir)/../config/lead-dot.m4 \
	$(top_srcdir)/../config/nls.m4 \
	$(top_srcdir)/../config/override.m4 \
	$(top_srcdir)/../config/po.m4 \
	$(top_srcdir)/../config/progtest.m4 \
	$(top_srcdir)/../config/zlib.m4 \
	$(top_srcdir)/../bfd/warning.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES = po/Makefile.in
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
libgold_a_AR = $(AR) $(ARFLAGS)
libgold_a_DEPENDENCIES = $(LIBOBJS)
am__objects_1 = archive.$(OBJEXT) attributes.$(OBJEXT) \
	binary.$(OBJEXT) common.$(OBJEXT) compressed_output.$(OBJEXT) \
	copy-relocs.$(OBJEXT) cref.$(OBJEXT) defstd.$(OBJEXT) \
	descriptors.$(OBJEXT) dirsearch.$(OBJEXT) dynobj.$(OBJEXT) \
	dwarf_reader.$(OBJEXT) ehframe.$(OBJEXT) errors.$(OBJEXT) \
	expression.$(OBJEXT) fileread.$(OBJEXT) gc.$(OBJEXT) \
	gdb-index.$(OBJEXT) gold.$(OBJEXT) gold-threads.$(OBJEXT) \
	icf.$(OBJEXT) incremental.$(OBJEXT) int_encoding.$(OBJEXT) \
	layout.$(OBJEXT) mapfile.$(OBJEXT) merge.$(OBJEXT) \
	nacl.$(OBJEXT) object.$(OBJEXT) options.$(OBJEXT) \
	output.$(OBJEXT) parameters.$(OBJEXT) plugin.$(OBJEXT) \
	readsyms.$(OBJEXT) reduced_debug_output.$(OBJEXT) \
	reloc.$(OBJEXT) resolve.$(OBJEXT) script-sections.$(OBJEXT) \
	script.$(OBJEXT) stringpool.$(OBJEXT) symtab.$(OBJEXT) \
	target.$(OBJEXT) target-select.$(OBJEXT) timer.$(OBJEXT) \
	version.$(OBJEXT) workqueue.$(OBJEXT) \
	workqueue-threads.$(OBJEXT)
am__objects_2 =
am__objects_3 = yyscript.$(OBJEXT)
am_libgold_a_OBJECTS = $(am__objects_1) $(am__objects_2) \
	$(am__objects_3) $(am__objects_2)
libgold_a_OBJECTS = $(am_libgold_a_OBJECTS)
am__installdirs = "$(DESTDIR)$(bindir)"
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@@@THREADS_TRUE@@am__EXEEXT_1 =  \
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@@@THREADS_TRUE@@	ld3$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am_dwp_OBJECTS = dwp.$(OBJEXT)
dwp_OBJECTS = $(am_dwp_OBJECTS)
am__DEPENDENCIES_1 =
dwp_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(dwp_LDFLAGS) \
	$(LDFLAGS) -o $@@
am_incremental_dump_OBJECTS = incremental-dump.$(OBJEXT)
incremental_dump_OBJECTS = $(am_incremental_dump_OBJECTS)
am__objects_4 = main.$(OBJEXT)
am_ld_new_OBJECTS = $(am__objects_4)
ld_new_OBJECTS = $(am_ld_new_OBJECTS)
am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1) libgold.a $(LIBIBERTY) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
ld_new_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(ld_new_LDFLAGS) \
	$(LDFLAGS) -o $@@
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@am_ld1_OBJECTS = $(am__objects_4)
ld1_OBJECTS = $(am_ld1_OBJECTS)
ld1_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(ld1_LDFLAGS) \
	$(LDFLAGS) -o $@@
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@am_ld1_r_OBJECTS = $(am__objects_4)
ld1_r_OBJECTS = $(am_ld1_r_OBJECTS)
ld1_r_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(ld1_r_LDFLAGS) \
	$(LDFLAGS) -o $@@
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@am_ld2_OBJECTS = $(am__objects_4)
ld2_OBJECTS = $(am_ld2_OBJECTS)
ld2_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(ld2_LDFLAGS) \
	$(LDFLAGS) -o $@@
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@am_ld2_r_OBJECTS = $(am__objects_4)
ld2_r_OBJECTS = $(am_ld2_r_OBJECTS)
ld2_r_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(ld2_r_LDFLAGS) \
	$(LDFLAGS) -o $@@
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@am_ld3_OBJECTS = $(am__objects_4)
ld3_OBJECTS = $(am_ld3_OBJECTS)
ld3_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(ld3_LDFLAGS) \
	$(LDFLAGS) -o $@@
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@am_ld4_OBJECTS = $(am__objects_4)
ld4_OBJECTS = $(am_ld4_OBJECTS)
ld4_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(ld4_LDFLAGS) \
	$(LDFLAGS) -o $@@
DEFAULT_INCLUDES = -I.@@am__isrc@@
depcomp = $(SHELL) $(top_srcdir)/../depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@@
@@MAINTAINER_MODE_FALSE@@am__skipyacc = test -f $@@ ||
YACCCOMPILE = $(YACC) $(YFLAGS) $(AM_YFLAGS)
YLWRAP = $(top_srcdir)/../ylwrap
SOURCES = $(libgold_a_SOURCES) $(dwp_SOURCES) \
	$(incremental_dump_SOURCES) $(ld_new_SOURCES) \
	$(EXTRA_ld_new_SOURCES) $(ld1_SOURCES) $(ld1_r_SOURCES) \
	$(ld2_SOURCES) $(ld2_r_SOURCES) $(ld3_SOURCES) $(ld4_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	check check-html recheck recheck-html
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
# Restructured Text title and section.
am__rst_title = sed 's/.*/   &   /;h;s/./=/g;p;x;p;g;p;s/.*//'
am__rst_section = sed 'p;s/./=/g;p;g'
# Put stdin (possibly several lines separated by ".  ") in a box.
am__text_box = $(AWK) '{				\
  n = split($$0, lines, "\\.  "); max = 0;		\
  for (i = 1; i <= n; ++i)				\
    if (max < length(lines[i]))				\
      max = length(lines[i]);				\
  for (i = 0; i < max; ++i) line = line "=";		\
  print line;						\
  for (i = 1; i <= n; ++i) if (lines[i]) print lines[i];\
  print line;						\
}'
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL).  This contradicts POSIX.  Work around the problem
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log, and passes
# TESTS_ENVIRONMENT.  Save and restore TERM around use of
# TESTS_ENVIRONMENT, in case that unsets it.
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
srcdir=$(srcdir); export srcdir;			\
rm -f $@@-t;						\
trap 'st=$$?; rm -f '\''$(abs_builddir)/$@@-t'\''; (exit $$st); exit $$st' \
  1 2 13 15;						\
am__odir=`echo "./$@@" | sed 's|/[^/]*$$||'`;		\
test "x$$am__odir" = x. || $(MKDIR_P) "$$am__odir" || exit $$?;	\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@@'; __SAVED_TERM=$$TERM;		\
$(TESTS_ENVIRONMENT)
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_SUITE_HTML = $(TEST_SUITE_LOG:.log=.html)
TEST_EXTENSIONS = @@EXEEXT@@ .test
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@@EXEEXT@@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
TEST_LOGS_TMP = $(TEST_LOGS:.log=.log-t)
DIST_SUBDIRS = $(SUBDIRS)
ACLOCAL = @@ACLOCAL@@
AMTAR = @@AMTAR@@
AUTOCONF = @@AUTOCONF@@
AUTOHEADER = @@AUTOHEADER@@
AUTOMAKE = @@AUTOMAKE@@
AWK = @@AWK@@
CATALOGS = @@CATALOGS@@
CATOBJEXT = @@CATOBJEXT@@
CC = @@CC@@
CCDEPMODE = @@CCDEPMODE@@
CFLAGS = @@CFLAGS@@
CPP = @@CPP@@
CPPFLAGS = @@CPPFLAGS@@
CXX = @@CXX@@
CXXCPP = @@CXXCPP@@
CXXDEPMODE = @@CXXDEPMODE@@
CXXFLAGS = @@CXXFLAGS@@
CYGPATH_W = @@CYGPATH_W@@
DATADIRNAME = @@DATADIRNAME@@
DEFAULT_TARGET = @@DEFAULT_TARGET@@
DEFS = @@DEFS@@
DEPDIR = @@DEPDIR@@
DLOPEN_LIBS = @@DLOPEN_LIBS@@
ECHO_C = @@ECHO_C@@
ECHO_N = @@ECHO_N@@
ECHO_T = @@ECHO_T@@
EGREP = @@EGREP@@
EXEEXT = @@EXEEXT@@
GENCAT = @@GENCAT@@
GMSGFMT = @@GMSGFMT@@
GOLD_LDADD = @@GOLD_LDADD@@
GOLD_LDFLAGS = @@GOLD_LDFLAGS@@
GREP = @@GREP@@
INCINTL = @@INCINTL@@
INSTALL = @@INSTALL@@
INSTALL_DATA = @@INSTALL_DATA@@
INSTALL_PROGRAM = @@INSTALL_PROGRAM@@
INSTALL_SCRIPT = @@INSTALL_SCRIPT@@
INSTALL_STRIP_PROGRAM = @@INSTALL_STRIP_PROGRAM@@
INSTOBJEXT = @@INSTOBJEXT@@
LDFLAGS = @@LDFLAGS@@
LFS_CFLAGS = @@LFS_CFLAGS@@
LIBINTL = @@LIBINTL@@
LIBINTL_DEP = @@LIBINTL_DEP@@
LIBOBJS = @@LIBOBJS@@
LIBS = @@LIBS@@
LN_S = @@LN_S@@
LTLIBOBJS = @@LTLIBOBJS@@
MAINT = @@MAINT@@
MAKEINFO = @@MAKEINFO@@
MERGE_CONSTANTS_FLAG = @@MERGE_CONSTANTS_FLAG@@
MKDIR_P = @@MKDIR_P@@
MKINSTALLDIRS = @@MKINSTALLDIRS@@
MSGFMT = @@MSGFMT@@
MSGMERGE = @@MSGMERGE@@
NM = @@NM@@
NO_WERROR = @@NO_WERROR@@
OBJEXT = @@OBJEXT@@
PACKAGE = @@PACKAGE@@
PACKAGE_BUGREPORT = @@PACKAGE_BUGREPORT@@
PACKAGE_NAME = @@PACKAGE_NAME@@
PACKAGE_STRING = @@PACKAGE_STRING@@
PACKAGE_TARNAME = @@PACKAGE_TARNAME@@
PACKAGE_URL = @@PACKAGE_URL@@
PACKAGE_VERSION = @@PACKAGE_VERSION@@
PATH_SEPARATOR = @@PATH_SEPARATOR@@
POSUB = @@POSUB@@
RANDOM_SEED_CFLAGS = @@RANDOM_SEED_CFLAGS@@
RANLIB = @@RANLIB@@
SET_MAKE = @@SET_MAKE@@
SHELL = @@SHELL@@
STRIP = @@STRIP@@
TARGETOBJS = @@TARGETOBJS@@
USE_NLS = @@USE_NLS@@
VERSION = @@VERSION@@
WARN_CFLAGS = @@WARN_CFLAGS@@
WARN_CXXFLAGS = @@WARN_CXXFLAGS@@
XGETTEXT = @@XGETTEXT@@
YACC = @@YACC@@
YFLAGS = @@YFLAGS@@
abs_builddir = @@abs_builddir@@
abs_srcdir = @@abs_srcdir@@
abs_top_builddir = @@abs_top_builddir@@
abs_top_srcdir = @@abs_top_srcdir@@
ac_ct_CC = @@ac_ct_CC@@
ac_ct_CXX = @@ac_ct_CXX@@
am__include = @@am__include@@
am__leading_dot = @@am__leading_dot@@
am__quote = @@am__quote@@
am__tar = @@am__tar@@
am__untar = @@am__untar@@
bindir = @@bindir@@
build = @@build@@
build_alias = @@build_alias@@
build_cpu = @@build_cpu@@
build_os = @@build_os@@
build_vendor = @@build_vendor@@
builddir = @@builddir@@
datadir = @@datadir@@
datarootdir = @@datarootdir@@
docdir = @@docdir@@
dvidir = @@dvidir@@
exec_prefix = @@exec_prefix@@
host = @@host@@
host_alias = @@host_alias@@
host_cpu = @@host_cpu@@
host_os = @@host_os@@
host_vendor = @@host_vendor@@
htmldir = @@htmldir@@
includedir = @@includedir@@
infodir = @@infodir@@
install_as_default = @@install_as_default@@
install_sh = @@install_sh@@
installed_linker = @@installed_linker@@
libdir = @@libdir@@
libexecdir = @@libexecdir@@
localedir = @@localedir@@
localstatedir = @@localstatedir@@
mandir = @@mandir@@
mkdir_p = @@mkdir_p@@
oldincludedir = @@oldincludedir@@
pdfdir = @@pdfdir@@
prefix = @@prefix@@
program_transform_name = @@program_transform_name@@
psdir = @@psdir@@
sbindir = @@sbindir@@
sharedstatedir = @@sharedstatedir@@
srcdir = @@srcdir@@
sysconfdir = @@sysconfdir@@
target = @@target@@
target_alias = @@target_alias@@
target_cpu = @@target_cpu@@
target_os = @@target_os@@
target_vendor = @@target_vendor@@
top_build_prefix = @@top_build_prefix@@
top_builddir = @@top_builddir@@
top_srcdir = @@top_srcdir@@
AUTOMAKE_OPTIONS = foreign
SUBDIRS = po testsuite
tooldir = $(exec_prefix)/$(target_alias)
ACLOCAL_AMFLAGS = -I ../bfd -I ../config
AM_CFLAGS = $(WARN_CFLAGS) $(LFS_CFLAGS) $(RANDOM_SEED_CFLAGS)
AM_CXXFLAGS = $(WARN_CXXFLAGS) $(LFS_CFLAGS) $(RANDOM_SEED_CFLAGS)
AM_CPPFLAGS = \
	-I$(srcdir) -I$(srcdir)/../include -I$(srcdir)/../elfcpp \
	-DLOCALEDIR="\"$(datadir)/locale\"" \
	-DBINDIR="\"$(bindir)\"" -DTOOLBINDIR="\"$(tooldir)/bin\"" \
	-DTOOLLIBDIR="\"$(tooldir)/lib\"" @@INCINTL@@

LIBIBERTY = ../libiberty/libiberty.a
@@PLUGINS_TRUE@@LIBDL = @@DLOPEN_LIBS@@
@@THREADS_TRUE@@THREADSLIB = -lpthread
AM_YFLAGS = -d

# Automake 1.10+ disables lex and yacc output file regeneration if
# maintainer mode is disabled.  Avoid this.
am__skiplex = 
am__skipyacc = 
noinst_LIBRARIES = libgold.a
CCFILES = \
	archive.cc \
	attributes.cc \
	binary.cc \
	common.cc \
	compressed_output.cc \
	copy-relocs.cc \
	cref.cc \
	defstd.cc \
	descriptors.cc \
	dirsearch.cc \
	dynobj.cc \
	dwarf_reader.cc \
	ehframe.cc \
	errors.cc \
	expression.cc \
	fileread.cc \
        gc.cc \
        gdb-index.cc \
	gold.cc \
	gold-threads.cc \
	icf.cc \
	incremental.cc \
	int_encoding.cc \
	layout.cc \
	mapfile.cc \
	merge.cc \
	nacl.cc \
	object.cc \
	options.cc \
	output.cc \
	parameters.cc \
	plugin.cc \
	readsyms.cc \
	reduced_debug_output.cc \
	reloc.cc \
	resolve.cc \
	script-sections.cc \
	script.cc \
	stringpool.cc \
	symtab.cc \
	target.cc \
	target-select.cc \
	timer.cc \
	version.cc \
	workqueue.cc \
	workqueue-threads.cc

HFILES = \
	arm-reloc-property.h \
	archive.h \
	attributes.h \
	binary.h \
	common.h \
	compressed_output.h \
	copy-relocs.h \
	cref.h \
	defstd.h \
	dirsearch.h \
	descriptors.h \
	dynobj.h \
	dwarf_reader.h \
	ehframe.h \
	errors.h \
	fileread.h \
	freebsd.h \
        gc.h \
        gdb-index.h \
	gold.h \
	gold-threads.h \
	icf.h \
	int_encoding.h \
	layout.h \
	mapfile.h \
	merge.h \
	nacl.h \
	object.h \
	options.h \
	output.h \
	parameters.h \
	plugin.h \
	readsyms.h \
	reduced_debug_output.h \
	reloc.h \
	reloc-types.h \
	script-c.h \
	script-sections.h \
	script.h \
	stringpool.h \
	symtab.h \
	target.h \
	target-reloc.h \
	target-select.h \
	timer.h \
	tls.h \
	token.h \
	workqueue.h \
	workqueue-internal.h

YFILES = \
	yyscript.y

DEFFILES = arm-reloc.def
EXTRA_DIST = yyscript.c yyscript.h
TARGETSOURCES = \
	i386.cc x86_64.cc sparc.cc powerpc.cc arm.cc arm-reloc-property.cc tilegx.cc

ALL_TARGETOBJS = \
	i386.$(OBJEXT) x86_64.$(OBJEXT) sparc.$(OBJEXT) powerpc.$(OBJEXT) \
	arm.$(OBJEXT) arm-reloc-property.$(OBJEXT) tilegx.$(OBJEXT)

libgold_a_SOURCES = $(CCFILES) $(HFILES) $(YFILES) $(DEFFILES)
libgold_a_LIBADD = $(LIBOBJS)
sources_var = main.cc
deps_var = $(TARGETOBJS) libgold.a $(LIBIBERTY) $(LIBINTL_DEP)
ldadd_var = $(TARGETOBJS) libgold.a $(LIBIBERTY) $(GOLD_LDADD) $(LIBINTL) \
	 $(THREADSLIB) $(LIBDL)

ldflags_var = $(GOLD_LDFLAGS)
ld_new_SOURCES = $(sources_var)
ld_new_DEPENDENCIES = $(deps_var)
ld_new_LDADD = $(ldadd_var)
ld_new_LDFLAGS = $(ldflags_var)
EXTRA_ld_new_SOURCES = $(TARGETSOURCES)
incremental_dump_SOURCES = incremental-dump.cc
incremental_dump_DEPENDENCIES = $(TARGETOBJS) libgold.a $(LIBIBERTY) \
	$(LIBINTL_DEP)

incremental_dump_LDADD = $(TARGETOBJS) libgold.a $(LIBIBERTY) $(LIBINTL) \
	 $(THREADSLIB) $(LIBDL)

dwp_SOURCES = dwp.cc
dwp_DEPENDENCIES = libgold.a $(LIBIBERTY) $(LIBINTL_DEP)
dwp_LDADD = libgold.a $(LIBIBERTY) $(GOLD_LDADD) $(LIBINTL) $(THREADSLIB) \
	$(LIBDL)

dwp_LDFLAGS = $(GOLD_LDFLAGS)
POTFILES = $(CCFILES) $(HFILES) $(TARGETSOURCES)
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@ld1_SOURCES = $(sources_var)
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@ld1_DEPENDENCIES = $(deps_var) gcctestdir1/ld
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@ld1_LDADD = $(ldadd_var)
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@ld1_LDFLAGS = -Bgcctestdir1/ \
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	-Wl,--build-id=tree \
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	-Wl,--build-id-chunk-size-for-treehash=12345 \
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	-Wl,--build-id-min-file-size-for-treehash=0 \
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	$(am__append_1)
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@ld2_SOURCES = $(sources_var)
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@ld2_DEPENDENCIES = $(deps_var) gcctestdir2/ld
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@ld2_LDADD = $(ldadd_var)
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@ld2_LDFLAGS = -Bgcctestdir2/ \
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	-Wl,--build-id=tree \
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	-Wl,--build-id-chunk-size-for-treehash=12345 \
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	-Wl,--build-id-min-file-size-for-treehash=0 \
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	$(am__append_2)
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@ld1_r_SOURCES = $(sources_var)
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@ld1_r_DEPENDENCIES = libgold-1-r.o $(deps_var) gcctestdir1/ld
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@ld1_r_LDADD = libgold-1-r.o $(ldadd_var)
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@ld1_r_LDFLAGS = -Bgcctestdir1/
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@ld2_r_SOURCES = $(sources_var)
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@ld2_r_DEPENDENCIES = libgold-2-r.o $(deps_var) gcctestdir2-r/ld
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@ld2_r_LDADD = libgold-2-r.o $(ldadd_var)
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@ld2_r_LDFLAGS = -Bgcctestdir2-r/
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@TESTS = bootstrap-test bootstrap-test-r \
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	bootstrap-test-treehash-chunksize \
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	$(am__append_6)
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@ld3_SOURCES = $(sources_var)
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@ld3_DEPENDENCIES = $(deps_var) gcctestdir3/ld
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@ld3_LDADD = $(ldadd_var)
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@ld3_LDFLAGS = -Bgcctestdir3/ \
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	-Wl,--build-id=tree \
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	-Wl,--build-id-chunk-size-for-treehash=12345 \
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	-Wl,--build-id-min-file-size-for-treehash=0 \
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	$(am__append_3)
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@ld4_SOURCES = $(sources_var)
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@ld4_DEPENDENCIES = $(deps_var) gcctestdir4/ld
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@ld4_LDADD = $(ldadd_var)
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@ld4_LDFLAGS = -Bgcctestdir4/ \
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	-Wl,--build-id=tree \
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	-Wl,--build-id-chunk-size-for-treehash=12346 \
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	-Wl,--build-id-min-file-size-for-treehash=0 \
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	$(am__append_4)
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .cc .html .log .o .obj .test .test$(EXEEXT) .y
am--refresh:
	@@:
$(srcdir)/Makefile.in: @@MAINTAINER_MODE_TRUE@@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure: @@MAINTAINER_MODE_TRUE@@ $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4): @@MAINTAINER_MODE_TRUE@@ $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@@if test ! -f $@@; then \
	  rm -f stamp-h1; \
	  $(MAKE) $(AM_MAKEFLAGS) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.in $(top_builddir)/config.status
	@@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.in: @@MAINTAINER_MODE_TRUE@@ $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@@

distclean-hdr:
	-rm -f config.h stamp-h1
po/Makefile.in: $(top_builddir)/config.status $(top_srcdir)/po/Make-in
	cd $(top_builddir) && $(SHELL) ./config.status $@@

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
yyscript.h: yyscript.c
	@@if test ! -f $@@; then \
	  rm -f yyscript.c; \
	  $(MAKE) $(AM_MAKEFLAGS) yyscript.c; \
	else :; fi
libgold.a: $(libgold_a_OBJECTS) $(libgold_a_DEPENDENCIES) 
	-rm -f libgold.a
	$(libgold_a_AR) libgold.a $(libgold_a_OBJECTS) $(libgold_a_LIBADD)
	$(RANLIB) libgold.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@@$(NORMAL_UNINSTALL)
	@@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
dwp$(EXEEXT): $(dwp_OBJECTS) $(dwp_DEPENDENCIES) 
	@@rm -f dwp$(EXEEXT)
	$(dwp_LINK) $(dwp_OBJECTS) $(dwp_LDADD) $(LIBS)
incremental-dump$(EXEEXT): $(incremental_dump_OBJECTS) $(incremental_dump_DEPENDENCIES) 
	@@rm -f incremental-dump$(EXEEXT)
	$(CXXLINK) $(incremental_dump_OBJECTS) $(incremental_dump_LDADD) $(LIBS)
ld-new$(EXEEXT): $(ld_new_OBJECTS) $(ld_new_DEPENDENCIES) 
	@@rm -f ld-new$(EXEEXT)
	$(ld_new_LINK) $(ld_new_OBJECTS) $(ld_new_LDADD) $(LIBS)
ld1$(EXEEXT): $(ld1_OBJECTS) $(ld1_DEPENDENCIES) 
	@@rm -f ld1$(EXEEXT)
	$(ld1_LINK) $(ld1_OBJECTS) $(ld1_LDADD) $(LIBS)
ld1-r$(EXEEXT): $(ld1_r_OBJECTS) $(ld1_r_DEPENDENCIES) 
	@@rm -f ld1-r$(EXEEXT)
	$(ld1_r_LINK) $(ld1_r_OBJECTS) $(ld1_r_LDADD) $(LIBS)
ld2$(EXEEXT): $(ld2_OBJECTS) $(ld2_DEPENDENCIES) 
	@@rm -f ld2$(EXEEXT)
	$(ld2_LINK) $(ld2_OBJECTS) $(ld2_LDADD) $(LIBS)
ld2-r$(EXEEXT): $(ld2_r_OBJECTS) $(ld2_r_DEPENDENCIES) 
	@@rm -f ld2-r$(EXEEXT)
	$(ld2_r_LINK) $(ld2_r_OBJECTS) $(ld2_r_LDADD) $(LIBS)
ld3$(EXEEXT): $(ld3_OBJECTS) $(ld3_DEPENDENCIES) 
	@@rm -f ld3$(EXEEXT)
	$(ld3_LINK) $(ld3_OBJECTS) $(ld3_LDADD) $(LIBS)
ld4$(EXEEXT): $(ld4_OBJECTS) $(ld4_DEPENDENCIES) 
	@@rm -f ld4$(EXEEXT)
	$(ld4_LINK) $(ld4_OBJECTS) $(ld4_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@$(DEPDIR)/ffsll.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@$(DEPDIR)/ftruncate.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@$(DEPDIR)/mremap.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@$(DEPDIR)/pread.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/archive.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/arm-reloc-property.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/arm.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/attributes.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/binary.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/common.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/compressed_output.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/copy-relocs.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/cref.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/defstd.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/descriptors.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/dirsearch.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/dwarf_reader.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/dwp.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/dynobj.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/ehframe.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/errors.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/expression.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/fileread.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/gc.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/gdb-index.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/gold-threads.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/gold.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/i386.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/icf.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/incremental-dump.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/incremental.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/int_encoding.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/layout.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/main.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/mapfile.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/merge.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/nacl.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/object.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/options.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/output.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/parameters.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/plugin.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/powerpc.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/readsyms.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/reduced_debug_output.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/reloc.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/resolve.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/script-sections.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/script.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/sparc.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/stringpool.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/symtab.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/target-select.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/target.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/tilegx.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/timer.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/version.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/workqueue-threads.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/workqueue.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/x86_64.Po@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/yyscript.Po@@am__quote@@

.c.o:
@@am__fastdepCC_TRUE@@	$(COMPILE) -MT $@@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@@ $<
@@am__fastdepCC_TRUE@@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@@AMDEP_TRUE@@@@am__fastdepCC_FALSE@@	source='$<' object='$@@' libtool=no @@AMDEPBACKSLASH@@
@@AMDEP_TRUE@@@@am__fastdepCC_FALSE@@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @@AMDEPBACKSLASH@@
@@am__fastdepCC_FALSE@@	$(COMPILE) -c $<

.c.obj:
@@am__fastdepCC_TRUE@@	$(COMPILE) -MT $@@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@@ `$(CYGPATH_W) '$<'`
@@am__fastdepCC_TRUE@@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@@AMDEP_TRUE@@@@am__fastdepCC_FALSE@@	source='$<' object='$@@' libtool=no @@AMDEPBACKSLASH@@
@@AMDEP_TRUE@@@@am__fastdepCC_FALSE@@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @@AMDEPBACKSLASH@@
@@am__fastdepCC_FALSE@@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.cc.o:
@@am__fastdepCXX_TRUE@@	$(CXXCOMPILE) -MT $@@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@@ $<
@@am__fastdepCXX_TRUE@@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@@AMDEP_TRUE@@@@am__fastdepCXX_FALSE@@	source='$<' object='$@@' libtool=no @@AMDEPBACKSLASH@@
@@AMDEP_TRUE@@@@am__fastdepCXX_FALSE@@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @@AMDEPBACKSLASH@@
@@am__fastdepCXX_FALSE@@	$(CXXCOMPILE) -c -o $@@ $<

.cc.obj:
@@am__fastdepCXX_TRUE@@	$(CXXCOMPILE) -MT $@@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@@ `$(CYGPATH_W) '$<'`
@@am__fastdepCXX_TRUE@@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@@AMDEP_TRUE@@@@am__fastdepCXX_FALSE@@	source='$<' object='$@@' libtool=no @@AMDEPBACKSLASH@@
@@AMDEP_TRUE@@@@am__fastdepCXX_FALSE@@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @@AMDEPBACKSLASH@@
@@am__fastdepCXX_FALSE@@	$(CXXCOMPILE) -c -o $@@ `$(CYGPATH_W) '$<'`

.y.c:
	$(am__skipyacc) $(SHELL) $(YLWRAP) $< y.tab.c $@@ y.tab.h $*.h y.output $*.output -- $(YACCCOMPILE)

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES) config.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS) config.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES) config.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS) config.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# To be appended to the command running the test.  Handle the stdout
# and stderr redirection, and catch the exit status.
am__check_post =					\
>$@@-t 2>&1;						\
estatus=$$?;						\
if test -n '$(DISABLE_HARD_ERRORS)'			\
   && test $$estatus -eq 99; then			\
  estatus=1;						\
fi;							\
TERM=$$__SAVED_TERM; export TERM;			\
$(am__tty_colors);					\
xfailed=PASS;						\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    xfailed=XFAIL;;					\
esac;							\
case $$estatus:$$xfailed in				\
    0:XFAIL) col=$$red; res=XPASS;;			\
    0:*)     col=$$grn; res=PASS ;;			\
    77:*)    col=$$blu; res=SKIP ;;			\
    99:*)    col=$$red; res=FAIL ;;			\
    *:XFAIL) col=$$lgn; res=XFAIL;;			\
    *:*)     col=$$red; res=FAIL ;;			\
esac;							\
echo "$${col}$$res$${std}: $$f";			\
echo "$$res: $$f (exit: $$estatus)" |			\
  $(am__rst_section) >$@@;				\
cat $@@-t >>$@@;						\
rm -f $@@-t

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@@$(am__sh_e_setup);						\
	list='$(TEST_LOGS)';						\
	results=`for f in $$list; do					\
		   read line < $$f && echo "$$line" || echo FAIL;	\
		 done`;							\
	all=`echo "$$results" | sed '/^$$/d' | wc -l | sed -e 's/^[	 ]*//'`; \
	fail=`echo "$$results" | grep -c '^FAIL'`;			\
	pass=`echo "$$results" | grep -c '^PASS'`;			\
	skip=`echo "$$results" | grep -c '^SKIP'`;			\
	xfail=`echo "$$results" | grep -c '^XFAIL'`;			\
	xpass=`echo "$$results" | grep -c '^XPASS'`;			\
	failures=`expr $$fail + $$xpass`;				\
	all=`expr $$all - $$skip`;					\
	if test "$$all" -eq 1; then tests=test; All=;			\
	else tests=tests; All="All "; fi;				\
	case fail=$$fail:xpass=$$xpass:xfail=$$xfail in			\
	  fail=0:xpass=0:xfail=0)					\
	    msg="$$All$$all $$tests passed.  ";				\
	    exit=true;;							\
	  fail=0:xpass=0:xfail=*)					\
	    msg="$$All$$all $$tests behaved as expected";		\
	    if test "$$xfail" -eq 1; then xfailures=failure;		\
	    else xfailures=failures; fi;				\
	    msg="$$msg ($$xfail expected $$xfailures).  ";		\
	    exit=true;;							\
	  fail=*:xpass=0:xfail=*)					\
	    msg="$$fail of $$all $$tests failed.  ";			\
	    exit=false;;						\
	  fail=*:xpass=*:xfail=*)					\
	    msg="$$failures of $$all $$tests did not behave as expected"; \
	    if test "$$xpass" -eq 1; then xpasses=pass;			\
	    else xpasses=passes; fi;					\
	    msg="$$msg ($$xpass unexpected $$xpasses).  ";		\
	    exit=false;;						\
	  *)								\
	    echo >&2 "incorrect case"; exit 4;;				\
	esac;								\
	if test "$$skip" -ne 0; then					\
	  if test "$$skip" -eq 1; then					\
	    msg="$$msg($$skip test was not run).  ";			\
	  else								\
	    msg="$$msg($$skip tests were not run).  ";			\
	  fi;								\
	fi;								\
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  echo "$$msg";							\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for f in $$list; do						\
	    read line < $$f;						\
	    case $$line in						\
	      PASS:*|XFAIL:*);;						\
	      *) echo; cat $$f;;					\
	    esac;							\
	  done;								\
	} >$(TEST_SUITE_LOG).tmp;					\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if test "$$failures" -ne 0; then				\
	  msg="$${msg}See $(subdir)/$(TEST_SUITE_LOG).  ";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    msg="$${msg}Please report to $(PACKAGE_BUGREPORT).  ";	\
	  fi;								\
	fi;								\
	test x"$$VERBOSE" = x || $$exit || cat $(TEST_SUITE_LOG);	\
	$(am__tty_colors);						\
	if $$exit; then							\
	  echo $(ECHO_N) "$$grn$(ECHO_C)";				\
	 else								\
	  echo $(ECHO_N) "$$red$(ECHO_C)";				\
	fi;								\
	echo "$$msg" | $(am__text_box);					\
	echo $(ECHO_N) "$$std$(ECHO_C)";				\
	$$exit

# Run all the tests.
check-TESTS:
	@@list='$(RECHECK_LOGS)'; test -z "$$list" || rm -f $$list
	@@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@@list='$(TEST_LOGS)';						\
	list=`for f in $$list; do					\
	  test .log = $$f || echo $$f;					\
	done | tr '\012\015' '  '`;					\
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$list"

.log.html:
	@@list='$(RST2HTML) $$RST2HTML rst2html rst2html.py';		\
	for r2h in $$list; do						\
	  if ($$r2h --version) >/dev/null 2>&1; then			\
	    R2H=$$r2h;							\
	  fi;								\
	done;								\
	if test -z "$$R2H"; then					\
	  echo >&2 "cannot find rst2html, cannot create $@@";		\
	  exit 2;							\
	fi;								\
	$$R2H $< >$@@.tmp
	@@mv $@@.tmp $@@

# Be sure to run check first, and then to convert the result.
# Beware of concurrent executions.  Run "check" not "check-TESTS", as
# check-SCRIPTS and other dependencies are rebuilt by the former only.
# And expect check to fail.
check-html:
	@@if $(MAKE) $(AM_MAKEFLAGS) check; then			\
	  rv=0; else rv=$$?;					\
	fi;							\
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_HTML) || exit 4;	\
	exit $$rv
recheck recheck-html:
	@@target=`echo $@@ | sed 's,^re,,'`;				\
	list='$(TEST_LOGS)';						\
	list=`for f in $$list; do					\
	        test -f $$f || continue;				\
	        if read line < $$f; then				\
	          case $$line in FAIL*|XPASS*) echo $$f;; esac;		\
	        else echo $$f; fi;					\
	      done | tr '\012\015' '  '`;				\
	$(MAKE) $(AM_MAKEFLAGS) $$target AM_MAKEFLAGS='$(AM_MAKEFLAGS) TEST_LOGS="'"$$list"'"'
bootstrap-test.log: bootstrap-test
	@@p='bootstrap-test'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
bootstrap-test-r.log: bootstrap-test-r
	@@p='bootstrap-test-r'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
bootstrap-test-treehash-chunksize.log: bootstrap-test-treehash-chunksize
	@@p='bootstrap-test-treehash-chunksize'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
.test.log:
	@@p='$<'; $(am__check_pre) $(TEST_LOG_COMPILE) "$$tst" $(am__check_post)
@@am__EXEEXT_TRUE@@.test$(EXEEXT).log:
@@am__EXEEXT_TRUE@@	@@p='$<'; $(am__check_pre) $(TEST_LOG_COMPILE) "$$tst" $(am__check_post)
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-recursive
all-am: Makefile $(LIBRARIES) $(PROGRAMS) config.h
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS_TMP)" || rm -f $(TEST_LOGS_TMP)
	-test -z "$(TEST_SUITE_HTML)" || rm -f $(TEST_SUITE_HTML)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@@echo "This command is intended for maintainers to use"
	@@echo "it deletes files that may require special tools to rebuild."
	-rm -f yyscript.c
	-rm -f yyscript.h
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-noinstLIBRARIES clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(DEPDIR) ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-data-local

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS install-exec-local

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf $(DEPDIR) ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) all check-am \
	check-html ctags-recursive install-am install-strip recheck \
	recheck-html tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am am--refresh check check-TESTS check-am check-html \
	clean clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-noinstLIBRARIES clean-noinstPROGRAMS ctags \
	ctags-recursive distclean distclean-compile distclean-generic \
	distclean-hdr distclean-tags dvi dvi-am html html-am info \
	info-am install install-am install-binPROGRAMS install-data \
	install-data-am install-data-local install-dvi install-dvi-am \
	install-exec install-exec-am install-exec-local install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am recheck recheck-html tags tags-recursive uninstall \
	uninstall-am uninstall-binPROGRAMS


# Use an explicit dependency for the bison generated header file.
expression.$(OBJEXT): yyscript.h
script-sections.$(OBJEXT): yyscript.h
script.$(OBJEXT): yyscript.h

# We have to build libgold.a before we run the tests.
check: libgold.a

.PHONY: install-exec-local

install-exec-local: ld-new$(EXEEXT)
	$(mkinstalldirs) $(DESTDIR)$(bindir) $(DESTDIR)$(tooldir)/bin
	n=`echo $(installed_linker) | sed '$(transform)'`; \
	$(INSTALL_PROGRAM) ld-new$(EXEEXT) $(DESTDIR)$(bindir)/$${n}$(EXEEXT); \
	if test "$(bindir)" != "$(tooldir)/bin"; then \
	  rm -f $(DESTDIR)$(tooldir)/bin/$(installed_linker)$(EXEEXT); \
	  ln $(DESTDIR)$(bindir)/$${n}$(EXEEXT) $(DESTDIR)$(tooldir)/bin/$(installed_linker)$(EXEEXT) >/dev/null 2>/dev/null \
	  || $(INSTALL_PROGRAM) ld-new$(EXEEXT) $(DESTDIR)$(tooldir)/bin/$(installed_linker)$(EXEEXT); \
	fi; \
	if test "x$(install_as_default)" = "xyes"; then \
	  ld=`echo ld | sed '$(transform)'`; \
	  rm -f $(DESTDIR)$(bindir)/$${ld}$(EXEEXT); \
	  ln $(DESTDIR)$(bindir)/$${n}$(EXEEXT) $(DESTDIR)$(bindir)/$${ld}$(EXEEXT) >/dev/null 2>/dev/null \
	  || $(INSTALL_PROGRAM) ld-new$(EXEEXT) $(DESTDIR)$(bindir)/$${ld}$(EXEEXT); \
	  if test "$(bindir)" != "$(tooldir)/bin"; then \
	    rm -f $(DESTDIR)$(tooldir)/bin/ld$(EXEEXT); \
	    ln $(DESTDIR)$(bindir)/$${n}$(EXEEXT) $(DESTDIR)$(tooldir)/bin/ld$(EXEEXT) >/dev/null 2>/dev/null \
	    || $(INSTALL_PROGRAM) ld-new$(EXEEXT) $(DESTDIR)$(tooldir)/bin/ld$(EXEEXT); \
	  fi; \
	fi

# We want install to imply install-info as per GNU standards, despite
# the cygnus option.
install-data-local: install-info

po/POTFILES.in: @@MAINT@@ Makefile
	for f in $(POTFILES); do echo $$f; done | LC_ALL=C sort > tmp \
	  && mv tmp $(srcdir)/po/POTFILES.in

# Bootstrap test support.  We use ld-new to build ld1, then use ld1 to
# build ld2.  ld1 and ld2 should be identical.  ld-new need not be
# identical to ld1, since it was linked with the host linker.

@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@gcctestdir1/ld: ld-new
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	test -d gcctestdir1 || mkdir -p gcctestdir1
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	rm -f gcctestdir1/ld
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	(cd gcctestdir1 && $(LN_S) ../ld-new ld)

@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@gcctestdir2/ld: ld1
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	test -d gcctestdir2 || mkdir -p gcctestdir2
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	rm -f gcctestdir2/ld
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	(cd gcctestdir2 && $(LN_S) ../ld1 ld)

@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@bootstrap-test: ld2
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	rm -f $@@
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	echo "#!/bin/sh" > $@@
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	echo "cmp ld1 ld2" >> $@@
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	chmod +x $@@

@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@libgold-1-r.o: gcctestdir1/ld libgold.a
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	gcctestdir1/ld -o $@@ -r --whole-archive libgold.a

@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@gcctestdir2-r/ld: ld1-r
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	test -d gcctestdir2-r || mkdir -p gcctestdir2-r
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	rm -f gcctestdir2-r/ld
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	(cd gcctestdir2-r && $(LN_S) ../ld1-r ld)

@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@libgold-2-r.o: gcctestdir2-r/ld libgold.a
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	gcctestdir2-r/ld -o $@@ -r --whole-archive libgold.a

@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@bootstrap-test-r: ld2-r
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	rm -f $@@
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	echo "#!/bin/sh" > $@@
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	echo "cmp ld1-r ld2-r" >> $@@
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	chmod +x $@@

@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@gcctestdir3/ld: ld-new
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	test -d gcctestdir3 || mkdir -p gcctestdir3
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	rm -f gcctestdir3/ld
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	(cd gcctestdir3 && $(LN_S) ../ld-new ld)

@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@gcctestdir4/ld: ld-new
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	test -d gcctestdir4 || mkdir -p gcctestdir4
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	rm -f gcctestdir4/ld
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	(cd gcctestdir4 && $(LN_S) ../ld-new ld)

@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@@@THREADS_TRUE@@bootstrap-test-treehash: ld1 ld3
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@@@THREADS_TRUE@@	rm -f $@@
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@@@THREADS_TRUE@@	echo "#!/bin/sh" > $@@
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@@@THREADS_TRUE@@	echo "cmp ld1 ld3" >> $@@
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@@@THREADS_TRUE@@	chmod +x $@@

@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@bootstrap-test-treehash-chunksize: ld1 ld4
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	rm -f $@@
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	echo "#!/bin/sh" > $@@
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	echo "cmp ld1 ld4 | grep ." >> $@@
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	chmod +x $@@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
@


1.100
log
@gold/
    	* configure.ac: Export DEFAULT_TARGET.
    	* configure: Regenerate.
    	* Makefile.in: Regenerate.
    	* testsuite/Makefile.am: Add .EXPORT_ALL_VARIABLES.
    	* testsuite/Makefile.in: Regenerate.
    	* testsuite/debug_msg.sh: Delete duplicate tests.
    	Don't check undef_int error message match for powerpc where the
    	source file and line number aren't available.
@
text
@d322 1
@


1.100.2.1
log
@gold/
	* configure.ac (MERGE_CONSTANTS_FLAG): New check.
	* configure: Regenerate.
	* Makefile.in: Regenerate.
	* testsuite/merge_string_literals_1.c: Renamed to have .cc suffix.
	* testsuite/merge_string_literals_2.c: Likewise.
	* testsuite/Makefile.am
	(merge_string_literals_1.o, merge_string_literals_2.o): Update deps.
	(AM_CFLAGS, AM_CXXFLAGS): Use $(MERGE_CONSTANTS_FLAG) in place of
	literal -fmerge-constants.
	* testsuite/Makefile.in: Regenerate.
@
text
@a321 1
MERGE_CONSTANTS_FLAG = @@MERGE_CONSTANTS_FLAG@@
@


1.99
log
@2013-04-26  Geoff Pike  <gpike@@chromium.org>

gold/
	* gold.cc (queue_final_tasks): invoke layout->queue_build_id_tasks().
	* layout.cc (Hash_task): New class.
	(Layout::queue_build_id_tasks): New function.
	(Layout::write_build_id): Handle single-thread portion of build ID
	computation.  (In some cases, all of it is single-threaded.)  Replace
	{sha1,md5}_process_bytes with {sha1,md5}_buffer to get the same
	functionality in fewer lines of code.
	* layout.h (Layout::queue_build_id_tasks): New function declaration.
	* options.h (General_options): make "--build-id" default to tree
	rather than sha1.  Add two new options related to --build-id=tree:
	--build-id-chunk-size-for-treehash and
	--build-id-min-file-size-for-treehash.
	* Makefile.am: add testing of --build-id=tree and related new options
	(these tests will be invoked by "make check").
	* Makefile.in: Regenerate.
@
text
@d291 1
@


1.98
log
@	Fix mingw gold build with plugins enabled
	* Makefile.am: Replace -ldl with @@DLOPEN_LIBS@@.
	* configure.ac: Export DLOPEN_LIBS and add headers check.
	* plugin.cc: Handle non-dlfcn case.
	* Makefile.in: Regenerate.
	* config.in: Regenerate.
	* configure: Regenerate.
	* testsuite/Makefile.in: Regenerate.
@
text
@d62 8
a69 1
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	ld2-r$(EXEEXT)
d124 2
d158 8
d185 1
a185 1
	$(ld2_SOURCES) $(ld2_r_SOURCES)
d570 5
a574 1
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@ld1_LDFLAGS = -Bgcctestdir1/
d578 5
a582 1
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@ld2_LDFLAGS = -Bgcctestdir2/
d591 19
a609 1
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@TESTS = bootstrap-test bootstrap-test-r
d744 6
d1141 2
d1339 1
a1339 1
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	echo "cmp ld1 ld2" > $@@
d1356 23
a1378 1
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	echo "cmp ld1-r ld2-r" > $@@
@


1.97
log
@Add copyright notices
@
text
@d19 2
a20 1
#   Copyright 2012 Free Software Foundation
d276 1
d403 1
a403 1
@@PLUGINS_TRUE@@LIBDL = -ldl
@


1.96
log
@	* configure.ac (HAVE_ZLIB): Use AM_ZLIB instead of AC_SEARCH_LIBS.
	Use $ac_cv_header_zlib_h = yes as the condition in AM_CONDITIONAL.
	* aclocal.m4: Regenerate.
	* configure: Regenerate.
	* Makefile.in: Regenerate.
	* testsuite/Makefile.in: Regenerate.
@
text
@d18 17
a34 1
# Process this file with automake to generate Makefile.in
@


1.95
log
@gold/
	* dwp.h: New header file.
	* dwp.cc: New source file.
	* gold.h: Move shared declarations to system.h.
	* system.h: New header file.
	* Makefile.am: Add dwp.
	* Makefile.in: Regenerate.
@
text
@d62 1
@


1.94
log
@Add support for tilegx in gold.
	* configure.ac (ENABLE_GOLD): support tilegx*
	* configure: rebuild
elfcpp:
	* tilegx.h: New file.
	* elfcpp.h: add EM_TILEGX.
gold:
	* tilegx.cc: New file.
	* Makefile.am (TARGETSOURCES): Add tilegx.cc
	(ALL_TARGETOBJS): Add tilegx.$(OBJEXT)
	* configure.tgt: Add entries for tilegx*.
	* configure.ac: Likewise.
	* Makefile.in: Rebuild.
	* configure: Likewise.
	* testsuite/icf_safe_test.sh (arch_specific_safe_fold): Handle
	tilegx.
@
text
@d41 1
d98 7
a104 1
PROGRAMS = $(noinst_PROGRAMS)
a106 1
am__DEPENDENCIES_1 =
d147 4
a150 3
SOURCES = $(libgold_a_SOURCES) $(incremental_dump_SOURCES) \
	$(ld_new_SOURCES) $(EXTRA_ld_new_SOURCES) $(ld1_SOURCES) \
	$(ld1_r_SOURCES) $(ld2_SOURCES) $(ld2_r_SOURCES)
d524 6
d618 37
d661 3
d706 1
d743 1
d1084 3
d1120 2
a1121 2
clean-am: clean-checkPROGRAMS clean-generic clean-noinstLIBRARIES \
	clean-noinstPROGRAMS mostlyclean-am
d1148 1
a1148 1
install-exec-am: install-exec-local
d1189 1
a1189 1
uninstall-am:
d1197 14
a1210 13
	clean clean-checkPROGRAMS clean-generic clean-noinstLIBRARIES \
	clean-noinstPROGRAMS ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-tags dvi dvi-am html html-am info info-am install \
	install-am install-data install-data-am install-data-local \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-exec-local install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am recheck recheck-html \
	tags tags-recursive uninstall uninstall-am
@


1.93
log
@	* configure.ac (ENABLE_GOLD): Consider *-*-nacl* targets ELF.
	* configure: Regenerate.

gold/
	* nacl.cc: New file.
	* nacl.h: New file.
	* Makefile.am (CCFILES, HFILES): Add them.
	* Makefile.in: Regenerate.
	* i386.cc (Output_data_plt_i386_nacl): New class.
	(Output_data_plt_i386_nacl_exec): New class.
	(Output_data_plt_i386_nacl_dyn): New class.
	(Target_i386_nacl): New class.
	(Target_selector_i386_nacl): New class.
	(target_selector_i386): Use it instead of Target_selector_i386.
	* x86_64.cc (Output_data_plt_x86_64_nacl): New class.
	(Target_x86_64_nacl): New class.
	(Target_selector_x86_64_nacl): New class.
	(target_selector_x86_64, target_selector_x32): Use it instead of
	Target_selector_x86_64.
	* arm.cc (Output_data_plt_arm_nacl): New class.
	(Target_arm_nacl): New class.
	(Target_selector_arm_nacl): New class.
	(target_selector_arm, target_selector_armbe): Use it instead of
	Target_selector_arm.

	* target-select.cc (select_target): Take new Input_file* and off_t
	arguments, pass them on to recognize method of selector.
	* object.cc (make_elf_sized_object): Update caller.
	* parameters.cc (parameters_force_valid_target): Likewise.
	* incremental.cc (make_sized_incremental_binary): Likewise.
	* target-select.h: Update decl.
	(Target_selector::recognize): Take new Input_file* argument,
	pass it on to do_recognize.
	(Target_selector::do_recognize): Take new Input_file* argument.
	* freebsd.h (Target_selector_freebsd::do_recognize): Likewise.
	* powerpc.cc (Target_selector_powerpc::do_recognize): Likewise.
	* sparc.cc (Target_selector_sparc::do_recognize): Likewise.
	* testsuite/testfile.cc (Target_selector::do_recognize): Likewise.

	* target.h (Target::Target_info): New members isolate_execinstr
	and rosegment_gap.
	(Target::isolate_execinstr, Target::rosegment_gap): New methods.
	* arm.cc (Target_arm::arm_info): Update initializer.
	* i386.cc (Target_i386::i386_info): Likewise.
	* powerpc.cc (Target_powerpc::powerpc_info): Likewise.
	* sparc.cc (Target_sparc::sparc_info): Likewise.
	* x86_64.cc (Target_x86_64::x86_64_info): Likewise.
	* testsuite/testfile.cc (Target_test::test_target_info): Likewise.
	* layout.cc (Layout::attach_allocated_section_to_segment):
	Take new const Target* argument.  If target->isolate_execinstr(), act
	like --rosegment.
	(Layout::find_first_load_seg): Take new const Target* argument;
	if target->isolate_execinstr(), reject PF_X segments.
	(Layout::relaxation_loop_body): Update caller.
	(Layout::set_segment_offsets): If target->isolate_execinstr(),
	reset file offset to zero when we hit LOAD_SEG, and then do a second
	loop over the segments before LOAD_SEG to reassign offsets after
	addresses have been determined.  Handle target->rosegment_gap().
	(Layout::attach_section_to_segment): Take new const Target* argument;
	pass it to attach_allocated_section_to_segment.
	(Layout::make_output_section): Update caller.
	(Layout::attach_sections_to_segments): Take new const Target* argument;
	pass it to attach_section_to_segment.
	* gold.cc (queue_middle_tasks): Update caller.
	* layout.h (Layout): Update method decls with new arguments.

	* arm.cc (Target_arm::Target_arm): Take optional argument for the
	Target_info pointer to use.
	(Target_arm::do_make_data_plt): New virtual method.
	(Target_arm::make_data_plt): New method that calls it.
	(Target_arm::make_plt_entry): Use it.
	(Output_data_plt_arm::Output_data_plt_arm): Take additional argument
	for the section alignment.
	(Output_data_plt_arm::do_first_plt_entry_offset): New abstract virtual
	method.
	(Output_data_plt_arm::first_plt_entry_offset): Call it.
	(Output_data_plt_arm::do_get_plt_entry_size): New abstract virtual
	method.
	(Output_data_plt_arm::get_plt_entry_size): Call it.
	(Output_data_plt_arm::do_fill_plt_entry): New abstract virtual method.
	(Output_data_plt_arm::fill_plt_entry): New method that calls it.
	(Output_data_plt_arm::do_fill_first_plt_entry): New abstract virtual
	method.
	(Output_data_plt_arm::fill_first_plt_entry): New method that calls it.
	(Output_data_plt_arm::set_final_data_size): Use get_plt_entry_size
	method instead of sizeof(plt_entry).
	(Output_data_plt_arm::add_entry): Likewise.
	Use first_plt_entry_offset method instead of sizeof(first_plt_entry).
	(Target_arm::first_plt_entry_offset): Call method on this->plt_ rather
	than static method.
	(Target_arm::plt_entry_size): Likewise.
	(Output_data_plt_arm::first_plt_entry, Output_data_plt_arm::plt_entry):
	Move to ...
	(Output_data_plt_arm_standard): ... here, new class.
	(Output_data_plt_arm::do_write): Move guts of PLT filling to...
	(Output_data_plt_arm_standard::do_fill_first_plt_entry): ... here ...
	(Output_data_plt_arm_standard::do_fill_plt_entry): ... and here.

	* x86_64.cc (Output_data_plt_x86_64::Output_data_plt_x86_64):
	Take additional argument for the PLT entry size.
	(Output_data_plt_x86_64::get_tlsdesc_plt_offset):
	Use get_plt_entry_size method rather than plt_entry_size variable.
	(Output_data_plt_x86_64::reserve_slot): Likewise.
	(Output_data_plt_x86_64::do_adjust_output_section): Likewise.
	(Output_data_plt_x86_64::add_entry): Likewise.
	(Output_data_plt_x86_64::add_local_ifunc_entry): Likewise.
	(Output_data_plt_x86_64::address_for_global): Likewise.
	(Output_data_plt_x86_64::address_for_local): Likewise.
	(Output_data_plt_x86_64::set_final_data_size): Likewise.
	(Output_data_plt_x86_64::first_plt_entry_offset): Likewise.
	Make method non-static.
	(Output_data_plt_x86_64::do_get_plt_entry_size): New abstract virtual
	method.
	(Output_data_plt_x86_64::get_plt_entry_size): Just call that.
	(Output_data_plt_x86_64::do_add_eh_frame): New abstract virtual method.
	(Output_data_plt_x86_64::add_eh_frame): New method to call it.
	(Output_data_plt_x86_64::do_fill_first_plt_entry): New abstract
	virtual method.
	(Output_data_plt_x86_64::fill_first_plt_entry): New method to call it.
	(Output_data_plt_x86_64::do_fill_plt_entry): New abstract
	virtual method.
	(Output_data_plt_x86_64::fill_plt_entry): New method to call it.
	(Output_data_plt_x86_64::do_fill_tlsdesc_entry): New abstract
	virtual method.
	(Output_data_plt_x86_64::fill_tlsdesc_entry): New method to call it.
	(Output_data_plt_x86_64::plt_entry_size)
	(Output_data_plt_x86_64::first_plt_entry)
	(Output_data_plt_x86_64::plt_entry)
	(Output_data_plt_x86_64::tlsdesc_plt_entry)
	(Output_data_plt_x86_64::plt_eh_frame_fde_size)
	(Output_data_plt_x86_64::plt_eh_frame_fde): Move to ...
	(Output_data_plt_x86_64_standard): ... here, new class.
	(Target_x86_64::Target_x86_64): Take optional argument for the
	Target_info pointer to use.
	(Target_x86_64::do_make_data_plt): New virtual method.
	(Target_x86_64::make_data_plt): New method to call it.
	(Target_x86_64::init_got_plt_for_update): Use that.
	Call this->plt_->add_eh_frame method here.
	(Output_data_plt_x86_64::init):	Don't do add_eh_frame_for_plt here.
	(Target_x86_64::first_plt_entry_offset): Call method on this->plt_
	rather than static method.
	(Target_x86_64::plt_entry_size): Likewise.
	(Output_data_plt_x86_64::do_write): Use get_plt_entry_size method
	rather than plt_entry_size variable.  Move guts of PLT filling to...
	(Output_data_plt_x86_64_standard::do_fill_first_plt_entry): ... here ...
	(Output_data_plt_x86_64_standard::do_fill_plt_entry): ... and here ...
	(Output_data_plt_x86_64_standard::do_fill_tlsdesc_entry): ... and here.

	* i386.cc (Output_data_plt_i386::Output_data_plt_i386): Take
	additional argument for the section alignment.
	Don't do add_eh_frame_for_plt here.
	(Output_data_plt_i386::first_plt_entry_offset): Make the method
	non-static.  Use get_plt_entry_size method rather than plt_entry_size
	variable.
	(Output_data_plt_i386::do_get_plt_entry_size): New abstract virtual
	method.
	(Output_data_plt_i386::get_plt_entry_size): Call it.
	(Output_data_plt_i386::do_add_eh_frame): New abstract virtual method.
	(Output_data_plt_i386::add_eh_frame): New method to call it.
	(Output_data_plt_i386::do_fill_first_plt_entry): New abstract virtual
	method.
	(Output_data_plt_i386::fill_first_plt_entry): New method to call it.
	(Output_data_plt_i386::do_fill_plt_entry): New abstract virtual
	method.
	(Output_data_plt_i386::fill_plt_entry): New method to call it.
	(Output_data_plt_i386::set_final_data_size): Use get_plt_entry_size
	method instead of plt_entry_size.
	(Output_data_plt_i386::plt_entry_size)
	(Output_data_plt_i386::plt_eh_frame_fde_size)
	(Output_data_plt_i386::plt_eh_frame_fde): Move to ...
	(Output_data_plt_i386_standard): ... here, new class.
	(Output_data_plt_i386_exec): New class.
	(Output_data_plt_i386::exec_first_plt_entry): Move to ...
	(Output_data_plt_i386_exec::first_plt_entry): ... here.
	(Output_data_plt_i386::exec_plt_entry): Move to ...
	(Output_data_plt_i386_exec::plt_entry): ... here.
	(Output_data_plt_i386_dyn): New class.
	(Output_data_plt_i386::first_plt_entry): Move to ...
	(Output_data_plt_i386_dyn::first_plt_entry): ... here.
	(Output_data_plt_i386::dyn_plt_entry): Move to ...
	(Output_data_plt_i386_dyn::plt_entry): ... here.
	(Target_i386::Target_i386): Take optional argument for the Target_info
	pointer to use.
	(Target_i386::do_make_data_plt): New virtual method.
	(Target_i386::make_data_plt): New method to call it.
	(Target_i386::make_plt_section): Use that.
	Call this->plt_->add_eh_frame method here.
	(Output_data_plt_i386::add_entry): Use get_plt_entry_size method
	rather than plt_entry_size variable.
	(Output_data_plt_i386::add_local_ifunc_entry): Likewise.
	(Output_data_plt_i386::address_for_local): Likewise.
	(Output_data_plt_i386::do_write): Likewise.
	Move guts of PLT filling to...
	(Output_data_plt_i386_exec::do_fill_first_plt_entry): ... here ...
	(Output_data_plt_i386_exec::do_fill_plt_entry): ... and here ...
	(Output_data_plt_i386_dyn::do_fill_first_plt_entry): ... and here ...
	(Output_data_plt_i386_dyn::do_fill_plt_entry): ... and here.

Change-Id: Id24b95600489835ff5e860a39c147203d4380c2b
@
text
@d491 1
a491 1
	i386.cc x86_64.cc sparc.cc powerpc.cc arm.cc arm-reloc-property.cc
d495 1
a495 1
	arm.$(OBJEXT) arm-reloc-property.$(OBJEXT)
@


1.93.2.1
log
@	* configure.ac (HAVE_ZLIB): Use AM_ZLIB instead of AC_SEARCH_LIBS.
	Use $ac_cv_header_zlib_h = yes as the condition in AM_CONDITIONAL.
	* aclocal.m4: Regenerate.
	* configure: Regenerate.
	* Makefile.in: Regenerate.
	* testsuite/Makefile.in: Regenerate.
@
text
@a60 1
	$(top_srcdir)/../config/zlib.m4 \
@


1.92
log
@2012-03-21  Cary Coutant  <ccoutant@@google.com>

	* Makefile.am: Add gdb-index.cc, gdb-index.h.
	* Makefile.in: Regenerate.
	* dwarf_reader.cc (Sized_elf_reloc_mapper::do_initialize): New function.
	(Sized_elf_reloc_mapper::symbol_section): New function.
	(Sized_elf_reloc_mapper::do_get_reloc_target): New function.
	(make_elf_reloc_mapper): New function.
	(Dwarf_abbrev_table::clear_abbrev_codes): New function.
	(Dwarf_abbrev_table::do_read_abbrevs): New function.
	(Dwarf_abbrev_table::do_get_abbrev): New function.
	(Dwarf_ranges_table::read_ranges_table): New function.
	(Dwarf_ranges_table::read_range_list): New function.
	(Dwarf_pubnames_table::read_section): New function.
	(Dwarf_pubnames_table::read_header): New function.
	(Dwarf_pubnames_table::next_name): New function.
	(Dwarf_die::Dwarf_die): New function.
	(Dwarf_die::read_attributes): New function.
	(Dwarf_die::skip_attributes): New function.
	(Dwarf_die::set_name): New function.
	(Dwarf_die::set_linkage_name): New function.
	(Dwarf_die::attribute): New function.
	(Dwarf_die::string_attribute): New function.
	(Dwarf_die::int_attribute): New function.
	(Dwarf_die::uint_attribute): New function.
	(Dwarf_die::ref_attribute): New function.
	(Dwarf_die::child_offset): New function.
	(Dwarf_die::sibling_offset): New function.
	(Dwarf_info_reader::check_buffer): New function.
	(Dwarf_info_reader::parse): New function.
	(Dwarf_info_reader::do_parse): New function.
	(Dwarf_info_reader::do_read_string_table): New function.
	(Dwarf_info_reader::lookup_reloc): New function.
	(Dwarf_info_reader::get_string): New function.
	(Dwarf_info_reader::visit_compilation_unit): New function.
	(Dwarf_info_reader::visit_type_unit): New function.
	(Sized_dwarf_line_info::Sized_dwarf_line_info): Use
	Sized_elf_reloc_mapper.
	(Sized_dwarf_line_info::symbol_section): Remove function.
	(Sized_dwarf_line_info::read_relocs): Use Sized_elf_reloc_mapper.
	(Sized_dwarf_line_info::read_line_mappings): Remove object
	parameter, adjust callers.
	(Sized_dwarf_line_info::format_file_lineno): Fix type of cast.
	* dwarf_reader.h: Include <sys/types.h>.
	(class Track_relocs): Remove forward declaration.
	(class Elf_reloc_mapper): New class.
	(class Sized_elf_reloc_mapper): New class.
	(class Dwarf_abbrev_table): New class.
	(class Dwarf_range_list): New class.
	(class Dwarf_ranges_table): New class.
	(class Dwarf_pubnames_table): New class.
	(class Dwarf_die): New class.
	(class Dwarf_info_reader): New class.
	(Sized_dwarf_line_info::read_line_mappings): Remove object parameter.
	(Sized_dwarf_line_info::symbol_section): Remove member function.
	* dynobj.h (Sized_dynobj::do_section_contents): Refactor code from
	base class.
	* gdb-index.cc: New source file.
	* gdb-index.h: New source file.
	* incremental.cc (Sized_relobj_incr::do_layout): Track .debug_info
	and .debug_types sections, call Layout::add_to_gdb_index.
	(Sized_relobj_incr::do_section_name): Implement.
	(Sized_relobj_incr::do_section_contents): Adjust parameter list and
	return type; Implement.
	(Sized_incr_dynobj::do_section_contents): Adjust parameter list and
	return type.
	* incremental.h (Sized_relobj_incr::do_section_contents): Adjust
	parameter list and return type.
	(Sized_incr_dynobj::do_section_contents): Likewise.
	* layout.cc: Include gdb-index.h.
	(Layout::Layout): Initialize gdb_index_data_.
	(Layout::init_fixed_output_section): Check for .gdb_index section.
	(Layout::add_to_gdb_index): New function. Instantiate.
	* layout.h: Add forward declaration for class Gdb_index.
	(Layout::add_to_gdb_index): New member function.
	(Layout::gdb_index_data_): New data member.
	* main.cc: Include gdb-index.h.
	(main): Print statistics for gdb index.
	* object.cc (Object::section_contents): Move code into
	do_section_contents.
	(need_decompressed_section): Check for sections needed when building
	gdb index.
	(build_compressed_section_map): Likewise.
	(Sized_relobj_file::do_read_symbols): Need local symbols when building
	gdb index.
	(Sized_relobj_file::do_layout): Track .debug_info and .debug_types
	sections; call Layout::add_to_gdb_index.
	(Sized_relobj_file::do_decompressed_section_contents): Call
	do_section_contents directly.
	* object.h (Object::do_section_contents): Adjust parameter list and
	return type.
	(Object::do_decompressed_section_contents): Call do_section_contents
	directly.
	(Sized_relobj_file::do_section_contents): Adjust parameter list and
	return type.
	* options.h (class General_options): Add --gdb-index option.
	* plugin.cc (Sized_pluginobj::do_section_contents): Adjust parameter
	list and return type.
	* plugin.h (Sized_pluginobj::do_section_contents): Likewise.
	* reloc.h (Track_relocs::checkpoint): New function.
	(Track_relocs::reset): New function.

	* testsuite/Makefile.am (gdb_index_test_1.sh, gdb_index_test_2.sh):
	New test cases.
	* testsuite/Makefile.in: Regenerate.
	* testsuite/gdb_index_test.cc: New test source file.
	* testsuite/gdb_index_test_1.sh: New test source file.
	* testsuite/gdb_index_test_2.sh: New test source file.
@
text
@d55 1
d84 8
a91 7
	object.$(OBJEXT) options.$(OBJEXT) output.$(OBJEXT) \
	parameters.$(OBJEXT) plugin.$(OBJEXT) readsyms.$(OBJEXT) \
	reduced_debug_output.$(OBJEXT) reloc.$(OBJEXT) \
	resolve.$(OBJEXT) script-sections.$(OBJEXT) script.$(OBJEXT) \
	stringpool.$(OBJEXT) symtab.$(OBJEXT) target.$(OBJEXT) \
	target-select.$(OBJEXT) timer.$(OBJEXT) version.$(OBJEXT) \
	workqueue.$(OBJEXT) workqueue-threads.$(OBJEXT)
d413 1
d461 1
d671 1
@


1.91
log
@	* configure.ac: Add --with-lib-path option.  Define LIB_PATH and
	NATIVE_LINKER.
	* Makefile.am (AM_CPPFLAGS): Define TOOLLIBDIR.
	* options.cc (General_options::finalize): Use library search path
	from configure script if specified.  If not native and no sysroot,
	only search TOOLLIBDIR.
	* options.h (Search_directory::Search_directory): Change name to
	const std::string&.
	(General_options::add_to_library_path_with_sysroot): Change arg to
	const std::string&.
	* configure, Makefile.in, config.in: Rebuild.
@
text
@d80 5
a84 5
	gold.$(OBJEXT) gold-threads.$(OBJEXT) icf.$(OBJEXT) \
	incremental.$(OBJEXT) int_encoding.$(OBJEXT) layout.$(OBJEXT) \
	mapfile.$(OBJEXT) merge.$(OBJEXT) object.$(OBJEXT) \
	options.$(OBJEXT) output.$(OBJEXT) parameters.$(OBJEXT) \
	plugin.$(OBJEXT) readsyms.$(OBJEXT) \
d402 1
d450 1
d655 1
@


1.90
log
@	* configure.ac: Add new --with-gold-ldadd and --with-gold-ldflags
	configuration options.
	* configure: Regenerate.
	* Makefile.am: Handle GOLD_LDADD and GOLD_LDFLAGS.
	* Makefile.in: Regenerate.
	* testsuite/Makefile.in: Regenerate.
@
text
@d372 1
a372 1
	@@INCINTL@@
@


1.89
log
@	* configure.ac: Check for glibc support for gnu_indirect_function
	support with static linking, setting automake conditional
	IFUNC_STATIC.
	* Makefile.in: Regenerate.
	* configure: Regenerate.

	* testsuite/Makefile.am (ifuncmain1static, ifuncmain2static)
	(ifuncmain4static, ifuncmain5static, ifuncmain7static): Add check
	for IFUNC_STATIC.
	* testsuite/Makefile.in: Regenerate.
@
text
@d104 3
a106 1
	$(am__DEPENDENCIES_1)
d256 2
d495 1
a495 1
ldadd_var = $(TARGETOBJS) libgold.a $(LIBIBERTY) $(LIBINTL) \
d498 1
d502 1
d610 1
a610 1
	$(CXXLINK) $(ld_new_OBJECTS) $(ld_new_LDADD) $(LIBS)
@


1.89.2.1
log
@	Copy from mainline to binutils 2.22 branch:

	2011-12-17  Cary Coutant  <ccoutant@@google.com>

	* dwarf_reader.cc (Sized_dwarf_line_info::read_lines): Add casts.
	* resolve.cc (Symbol_table::resolve): Likewise.
	* i386.cc (Target_i386::do_code_fill): Use char constants for nop
	arrays.
	* x86_64.cc (Target_x86_64::do_code_fill): Likewise.

	2011-10-31  Cary Coutant  <ccoutant@@google.com>

	PR gold/13023
	* expression.cc (Expression::eval_with_dot): Add
	is_section_dot_assignment parameter.
	(Expression::eval_maybe_dot): Likewise.  Adjust value when rhs is
	absolute and assigning to dot within a section.
	* script-sections.cc
	(Output_section_element_assignment::set_section_addresses): Pass
	dot_section to set_if_absolute.
	(Output_section_element_dot_assignment::finalize_symbols): Pass TRUE
	as is_section_dot_assignment flag to eval_with_dot.
	(Output_section_element_dot_assignment::set_section_addresses):
	Likewise.
	* script.cc (Symbol_assignment::set_if_absolute): Add dot_section
	parameter.  Also set value if relative to dot_section; set the
	symbol's output_section.
	* script.h (Expression::eval_with_dot): Add is_section_dot_assignment
	parameter.  Adjust all callers.
	(Expression::eval_maybe_dot): Likewise.
	(Symbol_assignment::set_if_absolute): Add dot_section parameter.
	Adjust all callers.
	* testsuite/script_test_2.t: Test assignment of an absolute value
	to dot within an output section element.

	2011-10-31  Cary Coutant  <ccoutant@@google.com>

	* options.h (class General_options): Add --[no-]gnu-unique options.
	* symtab.cc (Symbol_table::sized_write_globals): Convert
	STB_GNU_UNIQUE to STB_GLOBAL if --no-gnu-unique.

	2011-10-31  Cary Coutant  <ccoutant@@google.com>

	PR gold/13359
	* i386.cc (Target_i386::Relocate::relocate_tls): Remove
	unnecessary assertion.
	* x86_64.cc (Target_x86_64::Relocate::relocate_tls): Likewise.

	2011-10-31 Sriraman Tallam  <tmsriram@@google.com>

	* symtab.h (Symbol_table::gc_mark_symbol_for_shlib): Rename to
	gc_mark_symbol.
	* symtab.cc (Symbol_table::gc_mark_symbol_for_shlib): Rename to
	gc_mark_symbol.
	Change to just keep the section associated with symbol.
	(Symbol_table::add_from_relobj): Mark symbols as not garbage when
	they are externally visible and --export-dynamic is turned on.
	(Symbol_table::gc_mark_dyn_syms): Call gc_mark_symbol.

	2011-10-19  Ian Lance Taylor  <iant@@google.com>

	PR gold/13163
	* script-sections.cc
	(Output_section_element_dot_assignment::needs_output_section): New
	function.

	2011-10-19  Ian Lance Taylor  <iant@@google.com>

	PR gold/13204
	* layout.cc (Layout::segment_precedes): Don't assert failure if a
	--section-start option was seen.
	* options.h (General_options::any_section_start): New function.

	2011-10-18  Cary Coutant  <ccoutant@@google.com>

	* output.cc (posix_fallocate): Return 0 on success, errno on failure.
	(Output_file::map_no_anonymous): Check for non-zero
	return code from posix_fallocate.

	2011-10-17  Cary Coutant  <ccoutant@@google.com>

	PR gold/13245
	* plugin.cc (is_visible_from_outside): Check for symbols
	referenced from dynamic objects.
	* resolve.cc (Symbol_table::resolve): Don't count references
	from dynamic objects as references from real ELF files.
	* testsuite/plugin_test_2.sh: Adjust expected result.

	2011-10-17  Cary Coutant  <ccoutant@@google.com>

	* readsyms.cc (Read_symbols::run): Don't queue an unblocker
	task for members of lib groups.

	2011-10-17  Cary Coutant  <ccoutant@@google.com>

	PR gold/13288
	* fileread.cc (File_read::find_view): Add assert.
	(File_read::make_view): Move bounds check (replace with assert)...
	(File_read::find_or_make_view): ... to here.

	2011-10-12  Cary Coutant  <ccoutant@@google.com>

	* output.cc (Output_file::open_base_file): Handle case where
	::read returns less than requested size.

	2011-10-10  Cary Coutant  <ccoutant@@google.com>

	* incremental.cc (Sized_relobj_incr::Sized_relobj_incr):
	Initialize defined_count_.
	(Sized_relobj_incr::do_add_symbols): Count defined symbols.
	(Sized_relobj_incr::do_get_global_symbol_counts): Rewrite.
	(Sized_incr_dynobj::Sized_incr_dynobj): Initialize defined_count_.
	(Sized_incr_dynobj::do_add_symbols): Count defined symbols.
	(Sized_incr_dynobj::do_get_global_symbol_counts): Rewrite.
	* incremental.h (Sized_relobj_incr::defined_count_): New data
	member.
	(Sized_incr_dynobj::defined_count_): New data member.
	* plugin.cc (Sized_pluginobj::do_get_global_symbol_counts):
	Return zeroes instead of internal error.

	2011-10-10  Cary Coutant  <ccoutant@@google.com>

	PR gold/13249
	* output.cc (Output_reloc::Output_reloc): Add use_plt_offset flag.
	(Output_reloc::symbol_value): Return PLT offset if flag is set.
	* output.h (class Output_reloc): Add use_plt_offset flag.
	(Output_reloc::type_): Adjust size of bit field.
	(Output_reloc::use_plt_offset_): New bit field.
	(class Output_data_reloc): Adjust all calls to Output_reloc_type.
	(Output_data_reloc::add_local_relative): (RELA only) Add use_plt_offset
	flag.  Adjust all callers.
	* x86_64.cc (Target_x86_64::Scan::local): Check for IFUNC when
	creating RELATIVE relocations.

	2011-10-03   Diego Novillo  <dnovillo@@google.com>

	* options.cc (parse_uint): Fix dereference of RETVAL.

	2011-09-29  Cary Coutant  <ccoutant@@google.com>

	* incremental.cc (Sized_incremental_binary::do_process_got_plt):
	Check for NULL.
	* symtab.cc (Symbol_table::add_from_relobj): Ignore version
	symbols during incremental update.
	(Symbol_table::add_from_dynobj): Likewise.

	2011-09-26  Cary Coutant  <ccoutant@@google.com>

	* gold.cc (queue_initial_tasks): Move option checks ...
	* options.cc (General_options::finalize): ... to here. Disable
	some options; make others fatal.

	2011-09-23  Simon Baldwin  <simonb@@google.com>

	* configure.ac: Add new --with-gold-ldadd and --with-gold-ldflags
	configuration options.
	* configure: Regenerate.
	* Makefile.am: Handle GOLD_LDADD and GOLD_LDFLAGS.
	* Makefile.in: Regenerate.
	* testsuite/Makefile.in: Regenerate.
@
text
@d104 1
a104 3
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
ld_new_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(ld_new_LDFLAGS) \
	$(LDFLAGS) -o $@@
a253 2
GOLD_LDADD = @@GOLD_LDADD@@
GOLD_LDFLAGS = @@GOLD_LDFLAGS@@
d491 1
a491 1
ldadd_var = $(TARGETOBJS) libgold.a $(LIBIBERTY) $(GOLD_LDADD) $(LIBINTL) \
a493 1
ldflags_var = $(GOLD_LDFLAGS)
a496 1
ld_new_LDFLAGS = $(ldflags_var)
d604 1
a604 1
	$(ld_new_LINK) $(ld_new_OBJECTS) $(ld_new_LDADD) $(LIBS)
@


1.88
log
@	* Makefile.in: Rebuild with automake 1.11.1.
	* aclocal.m4: Likewise.
	* testsuite/Makefile.in: Likewise.
@
text
@d276 1
@


1.87
log
@gold: running tests in parallel.

gold/:
* configure.ac (AM_INIT_AUTOMAKE): Use parallel-tests option.
* Makefile.in: Regenerate.
* testsuite/Makefile.in: Regenerate.
@
text
@d1 1
a1 1
# Makefile.in generated by automake 1.11 from Makefile.am.
d719 1
a719 1
	@@failcom='exit 1'; \
d744 1
a744 1
	@@failcom='exit 1'; \
d959 5
a963 4
	@@set_logs=; if test "X$(TEST_LOGS)" = X.log; then		\
	  set_logs=TEST_LOGS=;						\
	fi;								\
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) $$set_logs
@


1.86
log
@Properly install gold/ld as default cross linker.

gold/

2010-04-27  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.am (install-exec-local): Properly install gold as
	default cross linker.
	* Makefile.in: Regenerated.

ld/

2010-04-27  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.am (install-exec-local): Properly install ld as
	default cross linker.
	* Makefile.in: Regenerated.
@
text
@d150 2
a151 1
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS
d156 69
d526 1
a526 1
.SUFFIXES: .c .cc .o .obj .y
d847 159
a1005 91
check-TESTS: $(TESTS)
	@@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi
d1028 4
d1118 2
a1119 1
	ctags-recursive install-am install-strip tags-recursive
d1122 2
a1123 2
	all all-am am--refresh check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-noinstLIBRARIES \
d1134 2
a1135 2
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-recursive \
	uninstall uninstall-am
@


1.85
log
@gold:
        * configure.ac (install_as_default): Define and set to false
        unless --enable-gold or --enable-gold=both/gold has been
        specified.
        * configure: Regenerate.

        * Makefile.am (install-exec-local): Install the executable as
        'ld.gold'.  If install_as_default is true then also install it as
        'ld'.
        * Makefile.in: Regenerated.
ld:
        * configure.in (install_as_default): Define and set to true
        unless --enable-gold=both/gold has been specified.
        * configure: Regenerate.

        * Makefile.am (transform): Use ld.bfd as the default name of
        the linker.
        (install-exec-local): Also install the executable as a binary
        named 'ld' if install_as_default is true.
        * Makefile.in: Regenerate.
@
text
@d1015 4
a1018 3
	  rm -f $(DESTDIR)$(bindir)/ld$(EXEEXT); \
	  ln $(DESTDIR)$(bindir)/$${n}$(EXEEXT) $(DESTDIR)$(bindir)/ld$(EXEEXT) >/dev/null 2>/dev/null \
	  || $(INSTALL_PROGRAM) ld-new$(EXEEXT) $(DESTDIR)$(bindir)/ld$(EXEEXT); \
@


1.84
log
@Use Automake option no-dist in gold.

gold/:
	* configure.ac (AM_INIT_AUTOMAKE): Add option no-dist.
	* configure: Regenerate.
	* Makefile.in: Regenerate.
	* testsuite/Makefile.in: Regenerate.
@
text
@d261 1
d263 1
d1007 1
a1007 1
	n=`echo ld | sed '$(transform)'`; \
d1010 11
a1020 2
	  rm -f $(DESTDIR)$(tooldir)/bin/ld$(EXEEXT); \
	  ln $(DESTDIR)$(bindir)/$${n}$(EXEEXT) $(DESTDIR)$(tooldir)/bin/ld$(EXEEXT) >/dev/null 2>/dev/null \
d1022 1
@


1.83
log
@2010-02-02  Doug Kwan  <dougkwan@@google.com>

	* Makefile.am (HFILES): Add arm-reloc-property.h.
	(DEFFILES): New.
 	(TARGETSOURCES): Add arm-reloc-property.cc
 	(ALL_TARGETOBJS): Add arm-reloc-property.$(OBJEXT)
	(libgold_a_SOURCES): $(DEFFILES)
	* Makefile.in: Regenerate.
	* arm-reloc-property.cc: New file.
	* arm-reloc-property.h: New file.
	* arm-reloc.def: New file.
	* arm.cc: Update comments.
	(arm-reloc-property.h): New included header.
	(arm_reloc_property_table): New global variable.
	(Target_arm::do_select_as_default_target): New method definition.
	* configure.tgt (armeb*-*-*,armbe*-*-*,arm*-*-*): Add
	arm-reloc-property to targ_extra_obj.
	* parameters.cc (set_parameters_target): Call
	Target::select_as_default_target().
	* target.h (Target::select_as_default_target): New method definition.
	(Target::do_select_as_default_target): Same.
@
text
@d46 6
a51 8
DIST_COMMON = README $(am__configure_deps) $(srcdir)/../config.guess \
	$(srcdir)/../config.sub $(srcdir)/../depcomp \
	$(srcdir)/../install-sh $(srcdir)/../missing \
	$(srcdir)/../mkinstalldirs $(srcdir)/../ylwrap \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/config.in $(top_srcdir)/configure \
	$(top_srcdir)/po/Make-in ChangeLog NEWS TODO ffsll.c \
	ftruncate.c mremap.c pread.c yyscript.c yyscript.h
a104 1
am__ld1_SOURCES_DIST = main.cc
a108 1
am__ld1_r_SOURCES_DIST = main.cc
a112 1
am__ld2_SOURCES_DIST = main.cc
a116 1
am__ld2_r_SOURCES_DIST = main.cc
a139 4
DIST_SOURCES = $(libgold_a_SOURCES) $(incremental_dump_SOURCES) \
	$(ld_new_SOURCES) $(EXTRA_ld_new_SOURCES) \
	$(am__ld1_SOURCES_DIST) $(am__ld1_r_SOURCES_DIST) \
	$(am__ld2_SOURCES_DIST) $(am__ld2_r_SOURCES_DIST)
d150 1
a150 2
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir dist dist-all distcheck
a155 36
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d "$(distdir)" \
    || { find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr "$(distdir)"; }; }
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
a865 175

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	  fi; \
	done
	@@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-lzma: distdir
	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma
	$(am__remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | xz -c >$(distdir).tar.xz
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bunzip2 -c $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lzma*) \
	  unlzma -c $(distdir).tar.lzma | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__remove_distdir)
	@@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@@$(am__cd) '$(distuninstallcheck_dir)' \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
d979 12
a990 14
	clean-noinstPROGRAMS ctags ctags-recursive dist dist-all \
	dist-bzip2 dist-gzip dist-lzma dist-shar dist-tarZ dist-xz \
	dist-zip distcheck distclean distclean-compile \
	distclean-generic distclean-hdr distclean-tags distcleancheck \
	distdir distuninstallcheck dvi dvi-am html html-am info \
	info-am install install-am install-data install-data-am \
	install-data-local install-dvi install-dvi-am install-exec \
	install-exec-am install-exec-local install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags tags-recursive uninstall uninstall-am
@


1.82
log
@2010-01-11  Doug Kwan  <dougkwan@@google.com>

	* Makefile.am (incremental_dump_DEPENDENCIES): Add libintl dependency.
	(incremental_dump_LDADD): Add linking option for libintl.
	* Makefile.in: Regenerate.
@
text
@d95 1
a95 1
	$(am__objects_3)
d401 1
d452 1
d455 1
a455 1
	i386.cc x86_64.cc sparc.cc powerpc.cc arm.cc
d459 1
a459 1
	arm.$(OBJEXT)
d461 1
a461 1
libgold_a_SOURCES = $(CCFILES) $(HFILES) $(YFILES)
d603 1
@


1.81
log
@	* Makefile.am (incremental_dump_DEPENDENCIES): Remove
	$(THREADSLIB) and $(LIBDL).
	* Makefile.in: Rebuild.
@
text
@d471 4
a474 2
incremental_dump_DEPENDENCIES = $(TARGETOBJS) libgold.a $(LIBIBERTY)
incremental_dump_LDADD = $(TARGETOBJS) libgold.a $(LIBIBERTY) \
@


1.80
log
@2009-12-17  Rafael Avila de Espindola  <espindola@@google.com>

	* Makefile.am (CCFILES): Add timer.cc.
	(HFILES): Add timer.h.
	* configure.ac: Check for sysconf and times.
	* main.cc: include timer.h.
	(main): Use Timer instead of get_run_time.
	* timer.cc: New.
	* timer.h: New.
	* workqueue.cc: include timer.h.
	(Workqueue::find_and_run_task):
	Report user, sys and wall time.
	* Makefile.in: Regenerate.
	* config.in: Regenerate.
	* configure: Regenerate.
@
text
@d471 1
a471 3
incremental_dump_DEPENDENCIES = $(TARGETOBJS) libgold.a $(LIBIBERTY) \
	 $(THREADSLIB) $(LIBDL)

@


1.79
log
@2009-12-08  Doug Kwan  <dougkwan@@google.com>

	* Makefile.am (CCFILES): Add attributes.cc and int_encoding.cc.
	(HFILES): Add attributes.h and int_encoding.h.
	* Makefile.in: Regenerate.
	* dwarf_reader.cc (read_unsigned_LEB_128, read_signed_LEB_128): Move
	function definitions to int_encoding.cc
	* dwarf_reader.h (read_unsigned_LEB_128, read_signed_LEB_128): Move
	prototypes to int_encoding.h
	* reduced_debug_output.cc (int_encoding.h): New include.
	(write_unsigned_LEB_128, get_length_as_unsigned_LEB_128): Move
	function definitions to int_encoding.cc
	(insert_into_vector, read_from_pointer): Move template definitions to
	int_encoding.h
	* attributes.cc: New file.
	* attributes.h: New file.
	* int_encoding.cc: New file.
	* int_encoding.h: New file.
@
text
@d90 2
a91 2
	target-select.$(OBJEXT) version.$(OBJEXT) workqueue.$(OBJEXT) \
	workqueue-threads.$(OBJEXT)
d395 1
d442 1
d646 1
@


1.78
log
@Add $(THREADSLIB) $(LIBDL) to incremental-dump.

2009-11-26  Per Øyvind Karlsen <peroyvind@@mandriva.org>
	    H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.am (incremental_dump_DEPENDENCIES): Add $(THREADSLIB)
	$(LIBDL).
	(incremental_dump_LDADD): Likewise.
	* Makefile.in: Regenerated.
@
text
@d76 11
a86 10
am__objects_1 = archive.$(OBJEXT) binary.$(OBJEXT) common.$(OBJEXT) \
	compressed_output.$(OBJEXT) copy-relocs.$(OBJEXT) \
	cref.$(OBJEXT) defstd.$(OBJEXT) descriptors.$(OBJEXT) \
	dirsearch.$(OBJEXT) dynobj.$(OBJEXT) dwarf_reader.$(OBJEXT) \
	ehframe.$(OBJEXT) errors.$(OBJEXT) expression.$(OBJEXT) \
	fileread.$(OBJEXT) gc.$(OBJEXT) gold.$(OBJEXT) \
	gold-threads.$(OBJEXT) icf.$(OBJEXT) incremental.$(OBJEXT) \
	layout.$(OBJEXT) mapfile.$(OBJEXT) merge.$(OBJEXT) \
	object.$(OBJEXT) options.$(OBJEXT) output.$(OBJEXT) \
	parameters.$(OBJEXT) plugin.$(OBJEXT) readsyms.$(OBJEXT) \
d356 1
d376 1
d401 1
d420 1
d600 1
d622 1
@


1.77
log
@2009-11-24  Rafael Avila de Espindola  <espindola@@google.com>

	* Makefile.am: Build incremental-dump
	* Makefile.in: Regenerate.
	* incremental-dump.cc: New.
	* incremental.cc (Incremental_inputs_header_data,
	Incremental_inputs_entry_data): Move to incremental.h
	* incremental.h: (Incremental_inputs_header_data,
	Incremental_inputs_entry_data): Move from incremental.cc

2009-11-24  Rafael Avila de Espindola  <espindola@@google.com>

	* elfcpp_file.h: Include elfcpp.h.
@
text
@d464 6
a469 2
incremental_dump_DEPENDENCIES = $(TARGETOBJS) libgold.a $(LIBIBERTY)
incremental_dump_LDADD = $(TARGETOBJS) libgold.a $(LIBIBERTY)
@


1.76
log
@Fix yacc and lex reruns with maintainer-mode off.

gas/:
	* Makefile.am (am__skiplex, am__skipyacc): New.
	* Makefile.in: Regenerate.

ld/:
	* Makefile.am (am__skiplex, am__skipyacc): New.
	* Makefile.in: Regenerate.

binutils/:
	* Makefile.am (am__skiplex, am__skipyacc): New.
	* Makefile.in: Regenerate.

gold/:
	* Makefile.am (am__skiplex, am__skipyacc): New.
	* Makefile.in: Regenerate.
@
text
@d41 1
a41 1
noinst_PROGRAMS = ld-new$(EXEEXT)
d97 3
a102 1
am__DEPENDENCIES_1 =
d142 7
a148 7
SOURCES = $(libgold_a_SOURCES) $(ld_new_SOURCES) \
	$(EXTRA_ld_new_SOURCES) $(ld1_SOURCES) $(ld1_r_SOURCES) \
	$(ld2_SOURCES) $(ld2_r_SOURCES)
DIST_SOURCES = $(libgold_a_SOURCES) $(ld_new_SOURCES) \
	$(EXTRA_ld_new_SOURCES) $(am__ld1_SOURCES_DIST) \
	$(am__ld1_r_SOURCES_DIST) $(am__ld2_SOURCES_DIST) \
	$(am__ld2_r_SOURCES_DIST)
d463 3
d560 3
d610 1
@


1.76.2.1
log
@Regenerate using automake 1.11.1
@
text
@d1 1
a1 1
# Makefile.in generated by automake 1.11.1 from Makefile.am.
d668 1
a668 1
	@@fail= failcom='exit 1'; \
d693 1
a693 1
	@@fail= failcom='exit 1'; \
d949 1
a949 2
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
d993 1
a993 1
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
d995 1
a995 1
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
d997 1
a997 1
	  lzma -dc $(distdir).tar.lzma | $(am__untar) ;;\
d1003 1
a1003 1
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
@


1.75
log
@Cleanups in binutils makefiles.

ld/:
	* Makefile.am (bin_PROGRAMS): Renamed from ...
	(noinst_PROGRAMS): ... this.
	(transform): Override, including the renaming of ld-new to ld.
	(install-exec-local): Installation of ld in $(bindir) not needed
	here any more.
	(AM_CPPFLAGS): Renamed from ...
	(INCLUDES): ... this.
	(MAINTAINERCLEANFILES): Add ld.1.
	* Makefile.in: Regenerate.

gold/:
	* Makefile.am (AM_CPPFLAGS): Renamed from ...
	(INCLUDES): ... this.
	* testsuite/Makefile.am (AUTOMAKE_OPTIONS): Add -Wno-portability.
	(AM_CPPFLAGS): Renamed from ...
	(INCLUDE): ... this.
	* Makefile.in, testsuite/Makefile.in: Regenerate.

bfd/:
	* Makefile.am (libbfd_la_LDFLAGS): Initialize early, to allow
	appending.
	[INSTALL_LIBBFD] (bfdlib_LTLIBRARIES, bfdinclude_HEADERS): Set
	only in this condition.
	[!INSTALL_LIBBFD] (noinst_LTLIBRARIES, libbfd_la_LDFLAGS): New,
	to build but not install libbfd.la in this condition.
	(install-bfdlibLTLIBRARIES, uninstall-bfdlibLTLIBRARIES)
	(install_libbfd, install_libbfd): Remove.
	* Makefile.in: Regenerate.

binutils/:
	* Makefile.am (AM_CPPFLAGS): Renamed from ...
	(INCLUDES): ... this.
	(bin2c$(EXEEXT_FOR_BUILD): Adjust rule.
	(installcheck-local): Renamed from ...
	(installcheck): ... this.
	* Makefile.in: Regenerate.

gas/:
	* Makefile.am (YFLAGS): Remove, not needed any more.
	(AM_CPPFLAGS): Renamed from ...
	(INCLUDES): ... this.
	* Makefile.in: Regenerate.

gprof/:
	* Makefile.am (AM_CPPFLAGS): Renamed from ...
	(INCLUDES): ... this.
	* Makefile.in: Regenerate.

opcodes/:
	* Makefile.am (libopcodes_la_LDFLAGS): Initialize early.
	[INSTALL_LIBBFD] (bfdlib_LTLIBRARIES): Set only in this condition.
	[INSTALL_LIBBFD] (bfdinclude_DATA): New.
	[!INSTALL_LIBBFD] (noinst_LTLIBRARIES): New.
	[!INSTALL_LIBBFD] (libopcodes_la_LDFLAGS): Ensure libopcodes.la
	is built shared even if it is not to be installed.
	(install-bfdlibLTLIBRARIES,uninstall-bfdlibLTLIBRARIES)
	(install_libopcodes, uninstall_libopcodes): Remove.
	(AM_CPPFLAGS): Renamed from ...
	(INCLUDES): ... this.
	* Makefile.in: Regenerate.
@
text
@d345 5
@


1.74
log
@Regenerate tree using Autoconf 2.64 and Automake 1.11.

config/:
	* override.m4 (_GCC_AUTOCONF_VERSION): Bump to 2.64.

/:
	* configure: Regenerate.

etc/:
	* configure: Regenerate.

sim/common/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/iq2000/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/d10v/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/igen/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/m32r/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/frv/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/:
	* avr/config.in: Regenerate.
	* avr/configure: Likewise.
	* configure: Likewise.
	* cris/config.in: Likewise.
	* cris/configure: Likewise.

sim/h8300/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/mn10300/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/ppc/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/erc32/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/arm/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/m68hc11/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/lm32/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/sh64/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/v850/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/cr16/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/moxie/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/m32c/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/mips/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/mcore/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/testsuite/d10v-elf/:
	* configure: Regenerate.

sim/testsuite/:
	* configure: Regenerate.

sim/testsuite/frv-elf/:
	* configure: Regenerate.

sim/testsuite/m32r-elf/:
	* configure: Regenerate.

sim/testsuite/mips64el-elf/:
	* configure: Regenerate.

sim/sh/:
	* config.in: Regenerate.
	* configure: Likewise.

gold/:
	* Makefile.in: Regenerate.
	* aclocal.m4: Likewise.
	* config.in: Likewise.
	* configure: Likewise.
	* testsuite/Makefile.in: Likewise.

gprof/:
	* Makefile.in: Regenerate.
	* aclocal.m4: Likewise.
	* configure: Likewise.
	* gconfig.in: Likewise.

opcodes/:
	* Makefile.in: Regenerate.
	* aclocal.m4: Likewise.
	* config.in: Likewise.
	* configure: Likewise.

gas/:
	* Makefile.in: Regenerate.
	* aclocal.m4: Likewise.
	* config.in: Likewise.
	* configure: Likewise.
	* doc/Makefile.in: Likewise.

ld/:
	* Makefile.in: Regenerate.
	* aclocal.m4: Likewise.
	* config.in: Likewise.
	* configure: Likewise.

gdb/:
	* aclocal.m4: Regenerate.
	* config.in: Likewise.
	* configure: Likewise.
	* gnulib/Makefile.in: Likewise.

gdb/doc/:
	* configure: Regenerate.

gdb/gdbserver/:
	* aclocal.m4: Regenerate.
	* config.in: Likewise.
	* configure: Likewise.

gdb/testsuite/:
	* configure: Regenerate.
	* gdb.hp/configure: Likewise.
	* gdb.hp/gdb.aCC/configure: Likewise.
	* gdb.hp/gdb.base-hp/configure: Likewise.
	* gdb.hp/gdb.compat/configure: Likewise.
	* gdb.hp/gdb.defects/configure: Likewise.
	* gdb.hp/gdb.objdbg/configure: Likewise.
	* gdb.stabs/configure: Likewise.

binutils/:
	* Makefile.in: Regenerate.
	* aclocal.m4: Likewise.
	* config.in: Likewise.
	* configure: Likewise.
	* doc/Makefile.in: Likewise.

bfd/:
	* Makefile.in: Regenerate.
	* aclocal.m4: Likewise.
	* config.in: Likewise.
	* configure: Likewise.

bfd/doc/:
	* Makefile.in: Regenerate.

readline/:
	* configure: Regenerate.

readline/examples/rlfe/:
	* configure: Regenerate.
@
text
@d335 1
a335 1
INCLUDES = \
@


1.73
log
@Minor fixes in sim, gold, gdb for Autoconf 2.64, Automake 1.11.

gold/:
	* Makefile.am (AUTOMAKE_OPTIONS): Add foreign.
	* testsuite/Makefile.am (AUTOMAKE_OPTIONS): Add foreign.
	* Makefile.in: Regenerate.
	* testsuite/Makefile.in: Regenerate.

gdb/:
	* configure.ac: Use AC_USE_SYSTEM_EXTENSIONS instead of
	AC_GNU_SOURCE, AC_AIX, AC_ISC_POSIX.

sim/common/:
	* aclocal.m4 (SIM_CHECK_MEMBER): Replace definition with
	definition of AC_CHECK_MEMBER.
@
text
@d1 1
a1 1
# Makefile.in generated by automake 1.9.6 from Makefile.am.
d5 2
a6 1
# 2003, 2004, 2005  Free Software Foundation, Inc.
a20 2
srcdir = @@srcdir@@
top_srcdir = @@top_srcdir@@
d23 1
d25 1
a25 2
pkgincludedir = $(includedir)/@@PACKAGE@@
top_builddir = .
a26 1
INSTALL = @@INSTALL@@
d45 1
d49 5
a53 6
	$(srcdir)/../mkinstalldirs $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/config.in \
	$(top_srcdir)/configure $(top_srcdir)/po/Make-in ChangeLog \
	NEWS TODO ffsll.c ftruncate.c mremap.c pread.c yyscript.c \
	yyscript.h
subdir = .
a60 1
	$(top_srcdir)/../config/proginstall.m4 \
d66 1
a66 1
 configure.lineno configure.status.lineno
d70 1
d75 1
a75 2
am__DEPENDENCIES_1 = @@LIBOBJS@@
libgold_a_DEPENDENCIES = $(am__DEPENDENCIES_1)
d100 4
a103 5
am__DEPENDENCIES_2 =
am__DEPENDENCIES_3 = ../libiberty/libiberty.a
am__DEPENDENCIES_4 = $(am__DEPENDENCIES_2) libgold.a \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_2)
d107 2
d112 2
d117 2
d122 3
a124 1
DEFAULT_INCLUDES = -I. -I$(srcdir) -I.
d127 1
d137 1
d139 1
d149 10
a158 4
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
d161 2
d168 28
a195 3
  { test ! -d $(distdir) \
    || { find $(distdir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(distdir); }; }
a200 2
AMDEP_FALSE = @@AMDEP_FALSE@@
AMDEP_TRUE = @@AMDEP_TRUE@@
a210 2
CONSTRUCTOR_PRIORITY_FALSE = @@CONSTRUCTOR_PRIORITY_FALSE@@
CONSTRUCTOR_PRIORITY_TRUE = @@CONSTRUCTOR_PRIORITY_TRUE@@
a225 4
FN_PTRS_IN_SO_WITHOUT_PIC_FALSE = @@FN_PTRS_IN_SO_WITHOUT_PIC_FALSE@@
FN_PTRS_IN_SO_WITHOUT_PIC_TRUE = @@FN_PTRS_IN_SO_WITHOUT_PIC_TRUE@@
GCC_FALSE = @@GCC_FALSE@@
GCC_TRUE = @@GCC_TRUE@@
d228 1
a228 2
HAVE_ZLIB_FALSE = @@HAVE_ZLIB_FALSE@@
HAVE_ZLIB_TRUE = @@HAVE_ZLIB_TRUE@@
d230 1
a244 2
MAINTAINER_MODE_FALSE = @@MAINTAINER_MODE_FALSE@@
MAINTAINER_MODE_TRUE = @@MAINTAINER_MODE_TRUE@@
d246 1
a246 2
MCMODEL_MEDIUM_FALSE = @@MCMODEL_MEDIUM_FALSE@@
MCMODEL_MEDIUM_TRUE = @@MCMODEL_MEDIUM_TRUE@@
a249 2
NATIVE_LINKER_FALSE = @@NATIVE_LINKER_FALSE@@
NATIVE_LINKER_TRUE = @@NATIVE_LINKER_TRUE@@
a251 2
OMP_SUPPORT_FALSE = @@OMP_SUPPORT_FALSE@@
OMP_SUPPORT_TRUE = @@OMP_SUPPORT_TRUE@@
d257 1
a259 2
PLUGINS_FALSE = @@PLUGINS_FALSE@@
PLUGINS_TRUE = @@PLUGINS_TRUE@@
a264 2
STATIC_TLS_FALSE = @@STATIC_TLS_FALSE@@
STATIC_TLS_TRUE = @@STATIC_TLS_TRUE@@
a266 8
THREADS_FALSE = @@THREADS_FALSE@@
THREADS_TRUE = @@THREADS_TRUE@@
TLS_DESCRIPTORS_FALSE = @@TLS_DESCRIPTORS_FALSE@@
TLS_DESCRIPTORS_TRUE = @@TLS_DESCRIPTORS_TRUE@@
TLS_FALSE = @@TLS_FALSE@@
TLS_GNU2_DIALECT_FALSE = @@TLS_GNU2_DIALECT_FALSE@@
TLS_GNU2_DIALECT_TRUE = @@TLS_GNU2_DIALECT_TRUE@@
TLS_TRUE = @@TLS_TRUE@@
d273 5
a279 6
ac_ct_RANLIB = @@ac_ct_RANLIB@@
ac_ct_STRIP = @@ac_ct_STRIP@@
am__fastdepCC_FALSE = @@am__fastdepCC_FALSE@@
am__fastdepCC_TRUE = @@am__fastdepCC_TRUE@@
am__fastdepCXX_FALSE = @@am__fastdepCXX_FALSE@@
am__fastdepCXX_TRUE = @@am__fastdepCXX_TRUE@@
d291 1
d293 3
d302 1
d308 1
d313 1
d316 1
d319 1
d326 3
d485 2
a486 2
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign '; \
	      cd $(srcdir) && $(AUTOMAKE) --foreign  \
d491 3
a493 3
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  Makefile
d509 1
a509 1
	cd $(srcdir) && $(AUTOCONF)
d511 2
a512 1
	cd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
d517 1
a517 1
	  $(MAKE) stamp-h1; \
d524 1
a524 1
	cd $(top_srcdir) && $(AUTOHEADER)
d538 1
a538 1
	  $(MAKE) yyscript.c; \
d552 1
a552 1
	$(CXXLINK) $(ld_new_LDFLAGS) $(ld_new_OBJECTS) $(ld_new_LDADD) $(LIBS)
d555 1
a555 1
	$(CXXLINK) $(ld1_LDFLAGS) $(ld1_OBJECTS) $(ld1_LDADD) $(LIBS)
d558 1
a558 1
	$(CXXLINK) $(ld1_r_LDFLAGS) $(ld1_r_OBJECTS) $(ld1_r_LDADD) $(LIBS)
d561 1
a561 1
	$(CXXLINK) $(ld2_LDFLAGS) $(ld2_OBJECTS) $(ld2_LDADD) $(LIBS)
d564 1
a564 1
	$(CXXLINK) $(ld2_r_LDFLAGS) $(ld2_r_OBJECTS) $(ld2_r_LDADD) $(LIBS)
d626 2
a627 2
@@am__fastdepCC_TRUE@@	if $(COMPILE) -MT $@@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@@ $<; \
@@am__fastdepCC_TRUE@@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
d633 2
a634 2
@@am__fastdepCC_TRUE@@	if $(COMPILE) -MT $@@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@@ `$(CYGPATH_W) '$<'`; \
@@am__fastdepCC_TRUE@@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
d640 2
a641 2
@@am__fastdepCXX_TRUE@@	if $(CXXCOMPILE) -MT $@@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@@ $<; \
@@am__fastdepCXX_TRUE@@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
d647 2
a648 2
@@am__fastdepCXX_TRUE@@	if $(CXXCOMPILE) -MT $@@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@@ `$(CYGPATH_W) '$<'`; \
@@am__fastdepCXX_TRUE@@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
d654 1
a654 20
	$(YACCCOMPILE) $<
	if test -f y.tab.h; then \
	  to=`echo "$*_H" | sed \
                -e 'y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/' \
                -e 's/[^ABCDEFGHIJKLMNOPQRSTUVWXYZ]/_/g'`; \
	  sed -e "/^#/!b" -e "s/Y_TAB_H/$$to/g" -e "s|y\.tab\.h|$*.h|" \
            y.tab.h >$*.ht; \
	  rm -f y.tab.h; \
	  if cmp -s $*.ht $*.h; then \
	    rm -f $*.ht ;\
	  else \
	    mv $*.ht $*.h; \
	  fi; \
	fi
	if test -f y.output; then \
	  mv y.output $*.output; \
	fi
	sed '/^#/ s|y\.tab\.c|$@@|' y.tab.c >$@@t && mv $@@t $@@
	rm -f y.tab.c
uninstall-info-am:
d680 1
a680 1
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
d687 1
a687 2
mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
d714 1
a714 1
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
d719 1
a719 1
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
d723 1
a723 1
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
d731 2
a732 2
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
d738 1
a738 1
	tags=; \
d750 1
a750 1
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
d757 4
a760 3
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
d762 7
a768 2
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
a772 2
	tags=; \
	here=`pwd`; \
d777 3
a779 3
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
d781 1
a781 1
	     $$tags $$unique
d785 2
a786 2
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here
d794 2
a795 1
	list='$(TESTS)'; \
d804 1
a804 1
	      *" $$tst "*) \
d807 1
a807 1
		echo "XPASS: $$tst"; \
d810 1
a810 1
		echo "PASS: $$tst"; \
d816 1
a816 1
	      *" $$tst "*) \
d818 1
a818 1
		echo "XFAIL: $$tst"; \
d822 1
a822 1
		echo "FAIL: $$tst"; \
d827 1
a827 1
	      echo "SKIP: $$tst"; \
d829 1
d831 7
d840 1
a840 1
	      banner="All $$all tests passed"; \
d842 2
a843 1
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
d847 1
a847 1
	      banner="$$failed of $$all tests failed"; \
d849 2
a850 1
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
d856 5
a860 1
	    skipped="($$skip tests were not run)"; \
d871 5
a875 1
	  echo "$$dashes"; \
d879 1
a879 1
	  echo "$$dashes"; \
d885 13
a897 9
	mkdir $(distdir)
	$(mkdir_p) $(distdir)/.. $(distdir)/../bfd $(distdir)/../config $(distdir)/po
	@@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
a898 7
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
d900 4
d905 2
a906 1
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
d908 1
a908 1
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
d910 2
a911 2
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
d915 1
a915 1
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
d918 1
a918 1
	    || $(mkdir_p) "$(distdir)/$$subdir" \
d920 13
a932 3
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
d934 5
a938 2
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
d943 2
a944 1
	-find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
d947 2
a948 2
	  ! -type d ! -perm -444 -exec $(SHELL) $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r $(distdir)
d957 8
d991 4
d1006 1
d1009 2
a1010 1
	  && cd $(distdir)/_build \
d1032 3
a1034 1
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck
d1038 1
a1038 1
	  sed -e '1{h;s/./=/g;p;x;}' -e '$${p;x;}'
d1040 1
a1040 1
	@@cd $(distuninstallcheck_dir) \
d1084 1
d1109 2
d1117 4
d1123 4
d1129 2
d1133 8
d1162 1
a1162 1
uninstall-am: uninstall-info-am
d1164 2
a1165 1
uninstall-info: uninstall-info-recursive
d1167 13
a1179 11
.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am am--refresh check \
	check-TESTS check-am clean clean-checkPROGRAMS clean-generic \
	clean-noinstLIBRARIES clean-noinstPROGRAMS clean-recursive \
	ctags ctags-recursive dist dist-all dist-bzip2 dist-gzip \
	dist-shar dist-tarZ dist-zip distcheck distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-recursive distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am \
	install-data-local install-exec install-exec-am \
	install-exec-local install-info install-info-am install-man \
d1182 2
a1183 3
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-recursive pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am uninstall-info-am
d1250 1
@


1.72
log
@*** empty log message ***
@
text
@d304 1
a304 1
AUTOMAKE_OPTIONS = 
@


1.71
log
@2009-06-23  Doug Kwan  <dougkwan@@google.com>

	* Makefile.am (libgold_a_LIBADD): New.
	(ld_new_DEPENDENCIES, ld_new_LDADD): Remove LIBOBJS
 	* Makefile.in: Regenerate.
	* config.in (HAVE_DECL_MEMMEM, HAVE_DECL_STRNDUP): New.
	* configure: Regenerate.
	* configure.ac (AC_CHECK_DECLS): Add strndup and memmem.
	* fileread.cc: Include sys/state.h
	* gold.h: Declare memmem and strndup if found missing.
	* gold_reloc.h: Include byteswap.h if HAVE_BYTESWAP_H is defined.
@
text
@d85 4
a88 4
	gold-threads.$(OBJEXT) incremental.$(OBJEXT) layout.$(OBJEXT) \
	mapfile.$(OBJEXT) merge.$(OBJEXT) object.$(OBJEXT) \
	options.$(OBJEXT) output.$(OBJEXT) parameters.$(OBJEXT) \
	plugin.$(OBJEXT) readsyms.$(OBJEXT) \
d340 1
d383 1
d570 1
@


1.70
log
@	* layout.cc (Layout::make_output_section): Call
	Target::new_output_section.
	(Layout::attach_allocated_section_to_segment): Put large section
	sections in a separate load segment with the large segment flag
	set.
	(Layout::segment_precedes): Sort large data segments after other
	load segments.
	(align_file_offset): New static function.
	(Layout::set_segment_offsets): Use align_file_offset.
	* output.h (class Output_section): Add is_small_section_ and
	is_large_section_ fields.
	(Output_section::is_small_section): New function.
	(Output_section::set_is_small_section):  New function.
	(Output_section::is_large_section): New function.
	(Output_section::set_is_large_section): New function.
	(Output_section::is_large_data_section): New function.
	(class Output_segment): Add is_large_data_segment_ field.
	(Output_segment::is_large_data_segment): New function.
	(Output_segment::set_is_large_data_segment): New function.
	* output.cc (Output_section::Output_section): Initialize new
	fields.
	(Output_segment::Output_segment): Likewise.
	(Output_segment::add_output_section): Add assertion that large
	data sections always go in large data segments.  Force small data
	sections to the end of the list of data sections.  Force small BSS
	sections to the start of the list of BSS sections.  For large BSS
	sections to the end of the list of BSS sections.
	* symtab.h (class Symbol): Declare is_common_shndx.
	(Symbol::is_defined): Check Symbol::is_common_shndx.
	(Symbol::is_common): Likewise.
	(class Symbol_table): Define enum Commons_section_type.  Update
	declarations.  Add small_commons_ and large_commons_ fields.
	* symtab.cc (Symbol::is_common_shndx): New function.
	(Symbol_table::Symbol_table): Initialize new fields.
	(Symbol_table::add_from_object): Put small and large common
	symbols in the right list.
	(Symbol_table::sized_finalized_symbol): Check
	Symbol::is_common_shndx.
	(Symbol_table::sized_write_globals): Likewise.
	* common.cc (Symbol_table::do_allocate_commons): Allocate new
	common symbol lists.  Don't call do_allocate_commons_list if the
	list is empty.
	(Symbol_table::do_allocate_commons_list): Remove is_tls
	parameter.  Add comons_section_type parameter.  Change all
	callers.  Handle small and large common symbols.
	* object.cc (Sized_relobj::do_finalize_local_symbols): Check
	Symbol::is_common_shndx.
	* resolve.cc (symbol_to_bits): Likewise.
	* target.h (Target::small_common_shndx): New function.
	(Target::small_common_section_flags): New function.
	(Target::large_common_shndx): New function.
	(Target::large_common_section_flags): New function.
	(Target::new_output_section): New function.
	(Target::Target_info): Add small_common_shndx, large_common_shndx,
	small_common_section_flags, and large_common_section_flags
	fields.
	(Target::do_new_output_section): New virtual function.
	* arm.cc (Target_arm::arm_info): Initialize new fields.
	* i386.cc (Target_i386::i386_info): Likewise.
	* powerpc.cc (Target_powerpc::powerpc_info) [all versions]:
	Likewise.
	* sparc.c (Target_sparc::sparc_info) [all versions]: Likewise.
	* x86_64.cc (Target_x86_64::x86_64_info): Likewise.
	(Target_x86_64::do_new_output_section): New function.
	* configure.ac: Define conditional MCMODEL_MEDIUM.
	* testsuite/Makefile.am (check_PROGRAMS): Add large.
	(large_SOURCES, large_CFLAGS, large_DEPENDENCIES): Define.
	(large_LDFLAGS): Define.
	* testsuite/large.c: New file.
	* testsuite/testfile.cc (Target_test::test_target_info):
	Initialize new fields.
	* configure, testsuite/Makefile.in: Rebuild.
@
text
@d77 2
a78 1
libgold_a_LIBADD =
d103 5
a107 6
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = ../libiberty/libiberty.a
am__DEPENDENCIES_3 = $(am__DEPENDENCIES_1) libgold.a \
	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am__DEPENDENCIES_4 = @@LIBOBJS@@
d419 1
d426 2
a427 2
ld_new_DEPENDENCIES = $(deps_var) $(LIBOBJS)
ld_new_LDADD = $(ldadd_var) $(LIBOBJS)
@


1.69
log
@2009-06-05  Doug Kwan  <dougkwan@@google.com>

	* Makefile.am (CCFILES): Add target.cc.
	* Makefile.in: Regenerate.
	* i386.cc (class Target_i386): Define new virtual method to
	override do_is_local_label_name in parent.
	* object.cc (Sized_relobj::do_count_local_symbols): Discard
	local symbols if --discard-locals or -X is given.
	* options.h (class General_options): Declare new options
	'--discard-locals' and '-X' for discarding locals.
	* target.h (class Target): Define new methods is_local_label_name.
	Declare new virtual method do_is_local_label_name.
	* target.cc: New file.
	* testsuite/Makefile.am (check_PROGRAMS): Add discard_locals_test.
	(check_SCRIPTS): Add discard_locals_test.sh.
	(check_DATA): Add discard_local_tests.syms.
	(discard_locals_test_SOURCES, discard_locals_test_LDFLAGS): Define.
	(discard_local_tests.syms, discard_locals_test.o): New make rules.
	* testsuite/Makefile.in: Regenerate.
	* testsuite/discard_locals_test.c: New file.
	* testsuite/discard_locals_test.sh: Same.
@
text
@d216 2
@


1.68
log
@2009-05-28  Doug Kwan  <dougkwan@@google.com>

        * configure.ac: Support gold for target arm*-*-*.
        * configure: Regenerate.
        * gold/Makefile.am (TARGETSOURCES): Add arm.cc.
        (ALL_TARGETOBJECTS): Add arm.$(OBJEXT)
        * gold/Makefile.in: Regenerate.
        * gold/arm.cc: New file.
        * gold/configure.tgt: Add armbe*-*-*, armeb*-*-* and arm*-*-* targets.
@
text
@d90 2
a91 2
	stringpool.$(OBJEXT) symtab.$(OBJEXT) target-select.$(OBJEXT) \
	version.$(OBJEXT) workqueue.$(OBJEXT) \
d355 1
d546 1
d586 1
@


1.67
log
@	* ffsll.c: New file.
	* configure.ac: Call AC_REPLACE_FUNCS on ffsll.
	* gold.h (ffsll): Declare if HAVE_FFSLL is not defined.
	* ftruncate.c (ftruncate): Declare before definition.
	* mremap.c (mremap): Likewise.
	* pread.c (pread): Likewise.
	* configure, Makefile.in, config.in: Rebuild.
@
text
@d409 1
a409 1
	i386.cc x86_64.cc sparc.cc powerpc.cc
d412 2
a413 1
	i386.$(OBJEXT) x86_64.$(OBJEXT) sparc.$(OBJEXT) powerpc.$(OBJEXT)
@


1.66
log
@	* mremap.c: New file.
	* configure.ac: Call AC_REPLACE_FUNCS on mremap.
	* gold.h (MREMAP_MAYMOVE): Define if HAVE_MREMAP is not defined.
	(mremap): Declare if HAVE_MREMAP is not defined.
	* configure, Makefile.in, config.in: Rebuild.
@
text
@d53 2
a54 1
	NEWS TODO ftruncate.c mremap.c pread.c yyscript.c yyscript.h
d539 1
@


1.65
log
@2009-03-23  Ian Lance Taylor  <iant@@google.com>

	* freebsd.h: New file.
	* i386.cc: Include "freebsd.h".
	(Target_i386): Derive from Target_freebsd rather than
	Sized_target.
	(Target_selector_i386): Derive from Target_selector_freebsd rather
	than Target_selector.
	* x86_64.cc: Include "freebsd.h".
	(Target_x86_64): Derive from Target_freebsd rather than
	Sized_target.
	(Target_selector_x86_64): Derive from Target_selector_freebsd
	rather than Target_selector.
	* target.h (class Target): Add adjust_elf_header and
	do_adjust_elf_header.
	* output.cc (Output_file_header:: do_sized_write): Call target
	adjust_elf_header routine.
	* configure.tgt: Set targ_osabi.
	* configure.ac: Define GOLD_DEFAULT_OSABI.
	* parameters.cc (Parameters::default_target): Pass
	GOLD_DEFAULT_OSABI to select_target.
	* target-select.h (class Target_selector): Make instantiate_target
	protected rather than private.
	* Makefile.am (HFILES): Add freebsd.h.
	* configure, Makefile.in, config.in: Rebuild.
@
text
@d53 1
a53 1
	NEWS TODO ftruncate.c pread.c yyscript.c yyscript.h
d539 1
@


1.64
log
@include/elf:
	* common.h (SHT_GNU_INCREMENTAL_INPUTS): Define.
elfcpp:
	* elfcpp.h (SHT_GNU_INCREMENTAL_INPUTS): Define.
gold:
	* incremental.cc: New file.
	* Makefile.am (CCFILES): Add incremental.cc.
	* Makefile.in: Rebuild.
@
text
@d374 1
@


1.63
log
@	* configure.ac: Check for chsize and posix_fallocate.  Replace
	ftruncate.
	* ftruncate.c: New file, from gnulib.
	* output.cc (posix_fallocate): Define dummy version if not
	HAVE_POSIX_FALLOCATE.
	(Output_file::map): Call posix_fallocate rather than lseek and
	write.
	* gold.h (ftruncate): Declare if not HAVE_FTRUNCATE.
	* configure, Makefile.in, config.in: Rebuild.
@
text
@d83 8
a90 7
	gold-threads.$(OBJEXT) layout.$(OBJEXT) mapfile.$(OBJEXT) \
	merge.$(OBJEXT) object.$(OBJEXT) options.$(OBJEXT) \
	output.$(OBJEXT) parameters.$(OBJEXT) plugin.$(OBJEXT) \
	readsyms.$(OBJEXT) reduced_debug_output.$(OBJEXT) \
	reloc.$(OBJEXT) resolve.$(OBJEXT) script-sections.$(OBJEXT) \
	script.$(OBJEXT) stringpool.$(OBJEXT) symtab.$(OBJEXT) \
	target-select.$(OBJEXT) version.$(OBJEXT) workqueue.$(OBJEXT) \
d337 1
d558 1
@


1.62
log
@	* layout.cc (Layout::choose_output_section): Don't rename sections
	when using a linker script that has a SECTIONS clause.
	* Makefile.in: Regenerate.

	* testsuite/Makefile.am (script_test_5.sh): New test case.
	* testsuite/Makefile.in: Regenerate.
	* testsuite/script_test_5.cc: New file.
	* testsuite/script_test_5.sh: New file.
	* testsuite/script_test_5.t: New file.
@
text
@d53 1
a53 1
	NEWS TODO pread.c yyscript.c yyscript.h
d535 1
@


1.61
log
@2009-01-20  Sriraman Tallam <tmsriram@@google.com>

	* Makefile.am (CCFILES): Add gc.cc.
	(HFILES): Add gc.h.
	* Makefile.in: Regenerate.
	* gold.cc (Gc_runner): New class.
	(queue_initial_tasks): Call garbage collection related tasks
	when corresponding options are invoked.
	(queue_middle_gc_tasks): New function.
	(queue_middle_tasks): Reorder tasks to allow relocs to be read and
	processed early before laying out sections during garbage collection.
	* gold.h (queue_middle_gc_tasks): New function.
	(is_prefix_of): Move from "layout.cc".
	* i386.cc (Target_i386::gc_process_relocs): New function.
	* layout.cc (is_prefix_of): Remove. Move to "gold.h"
	* main.cc (main): Create object of class "Garbage_collection".
	* object.cc (Relobj::copy_symbols_data): New function.
	(Relobj::is_section_name_included): New function.
	(Sized_relobj::do_layout): Allow this function to be called twice
	during garbage collection and defer layout of section during the
	first call.
	* object.h (Relobj::get_symbols_data): New function.
	(Relobj::is_section_name_included): New function.
	(Relobj::copy_symbols_data): New function.
	(Relobj::set_symbols_data): New function.
	(Relobj::get_relocs_data): New function.
	(Relobj::set_relocs_data): New function.
	(Relobj::is_output_section_offset_invalid): New pure virtual function.
	(Relobj::gc_process_relocs): New function.
	(Relobj::do_gc_process_relocs): New pure virtual function.
	(Relobj::sd_): New data member.
	(Sized_relobj::is_output_section_offset_invalid): New function.
	(Sized_relobj::do_gc_process_relocs): New function.
	* options.h (General_options::gc_sections): Modify to not be a no-op.
	(General_options::print_gc_sections): New option.
	* plugin.cc (Plugin_finish::run): Remove function call to
	Plugin_manager::layout_deferred_objects.  Move it to "gold.cc".
	* powerpc.cc (Target_powerpc::gc_process_relocs): New function.
	* reloc.cc (Read_relocs::run): Add task to process relocs and
	determine unreferenced sections when doing garbage collection.
	(Gc_process_relocs): New class.
	(Sized_relobj::do_gc_process_relocs): New function.
	(Sized_relobj::do_scan_relocs): Don't try to scan the relocs for
	sections that are garbage collected.
	* reloc.h (Gc_process_relocs): New class.
	* sparc.cc (Target_sparc::gc_process_relocs): New function.
	* symtab.cc (Symbol::should_add_dynsym_entry): Do not add entries for
	symbols whose corresponding sections are garbage collected.
	(Symbol_table::Symbol_table): Add new parameter for the garbage
	collection object.
	(Symbol_table::gc_mark_undef_symbols): New function.
	(Symbol_table::gc_mark_symbol_for_shlib): New function.
	(Symbol_table::gc_mark_dyn_syms): New function.
	(Symbol_table::resolve): Do not treat symbols seen in dynamic objects
	as garbage.
	(Symbol_table::add_from_object): Likewise.
	(Symbol_table::add_from_relobj): When building shared objects, do not
	treat externally visible symbols as garbage.
	(Symbol_table::sized_finalize_symbol): Do not check dynamic symbol
	table information for static and relocatable links.
	* symtab.h (Symbol_table::set_gc): New function.
	(Symbol_table::gc): New function.
	(Symbol_table::gc_mark_undef_symbols): New function.
	(Symbol_table::gc_mark_symbol_for_shlib): New function.
	(Symbol_table::gc_mark_dyn_syms): New function.
	(Symbol_table::gc_): New data member.
	* target.h (Sized_target::gc_process_relocs): New pure virtual
	function.
	* x86_64.cc (Target_x86_64::gc_process_relocs): New function.
	* testsuite/testfile.cc (Target_test::gc_process_relocs): New function.
@
text
@d82 8
a89 9
	fileread.$(OBJEXT) gc.$(OBJEXT) \
      gold.$(OBJEXT) gold-threads.$(OBJEXT) \
	layout.$(OBJEXT) mapfile.$(OBJEXT) merge.$(OBJEXT) \
	object.$(OBJEXT) options.$(OBJEXT) output.$(OBJEXT) \
	parameters.$(OBJEXT) plugin.$(OBJEXT) readsyms.$(OBJEXT) \
	reduced_debug_output.$(OBJEXT) reloc.$(OBJEXT) \
	resolve.$(OBJEXT) script-sections.$(OBJEXT) script.$(OBJEXT) \
	stringpool.$(OBJEXT) symtab.$(OBJEXT) target-select.$(OBJEXT) \
	version.$(OBJEXT) workqueue.$(OBJEXT) \
d551 1
@


1.60
log
@Add plugin functionality for link-time optimization (LTO).

include/:
	* plugin-api.h: New file.

gold/:
	* configure.ac (plugins): Add --enable-plugins option.
	* configure: Regenerate.
	* config.in: Regenerate.
	* Makefile.am (LIBDL): New variable.
	(CCFILES): Add plugin.cc.
	(HFILES): Add plugin.h.
	(ldadd_var): Add LIBDL.
	* Makefile.in: Regenerate.

	* archive.cc: Include "plugin.h".
	(Archive::setup): Don't preread archive symbols when using a plugin.
	(Archive::get_file_and_offset): Add memsize parameter.  Change callers.
	(Archive::get_elf_object_for_member): Call plugin hooks for claiming
	files.
	(Archive::include_member): Add symbols from plugin objects.
	* archive.h (Archive::get_file_and_offset): Add memsize parameter.
	* descriptors.cc (Descriptors::open): Check for file descriptors
	abandoned by plugins.
	(Descriptors::claim_for_plugin): New function.
	* descriptors.h (Descriptors::claim_for_plugin): New function.
	(Open_descriptor::is_claimed): New field.
	(claim_descriptor_for_plugin): New function.
	* fileread.cc (File_read::claim_for_plugin): New function.
	* fileread.h (File_read::claim_for_plugin): New function.
	(File_read::descriptor): New function.
	* gold.cc: Include "plugin.h".
	(queue_initial_tasks): Add task to call plugin hooks for generating
	new object files.
	* main.cc: Include "plugin.h".
	(main): Load plugin libraries.
	* object.h (Pluginobj): Declare.
	(Object::pluginobj): New function.
	(Object::do_pluginobj): New function.
	(Object::set_target): New function.
	* options.cc: Include "plugin.h".
	(General_options::parse_plugin): New function.
	(General_options::General_options): Initialize plugins_ field.
	(General_options::add_plugin): New function.
	* options.h (Plugin_manager): Declare.
	(General_options): Add --plugin option.
	(General_options::has_plugins): New function.
	(General_options::plugins): New function.
	(General_options::add_plugin): New function.
	(General_options::plugins_): New field.
	* plugin.cc: New file.
	* plugin.h: New file.
	* readsyms.cc: Include "plugin.h".
	(Read_symbols::do_read_symbols): Check for archive before checking
	for ELF file.  Call plugin hooks to claim files.
	* resolve.cc (Symbol_table::resolve): Record when symbol is referenced
	from a real object file; force override when processing replacement
	files.
	* symtab.cc (Symbol::init_fields): Initialize in_real_elf_ field.
	(Symbol::init_base_object): Likewise.
	(Symbol::init_base_output_data): Likewise.
	(Symbol::init_base_output_segment): Likewise.
	(Symbol::init_base_constant): Likewise.
	(Symbol::init_base_undefined): Likewise.
	(Symbol::output_section): Assert that object is not a plugin.
	(Symbol_table::add_from_pluginobj): New function.
	(Symbol_table::sized_finalize_symbol): Treat symbols from plugins as
	undefined.
	(Symbol_table::sized_write_globals): Likewise.
	(Symbol_table::add_from_pluginobj): Instantiate template.
	* symtab.h (Sized_pluginobj): Declare.
	(Symbol::in_real_elf): New function.
	(Symbol::set_in_real_elf): New function.
	(Symbol::in_real_elf_): New field.
	(Symbol_table::add_from_pluginobj): New function.

	* testsuite/Makefile.am (AM_CFLAGS): New variable.
	(LIBDL): New variable.
	(LDADD): Add LIBDL.
	(check_PROGRAMS): Add plugin_test_1 and plugin_test_2.
	(check_SCRIPTS): Add plugin_test_1.sh and plugin_test_2.sh.
	(check_DATA): Add plugin_test_1.err and plugin_test_2.err.
	(MOSTLYCLEANFILES): Likewise.
	* testsuite/Makefile.in: Regenerate.
	* testsuite/plugin_test.c: New file.
	* testsuite/plugin_test_1.sh: New file.
	* testsuite/plugin_test_2.sh: New file.
@
text
@d82 2
a83 1
	fileread.$(OBJEXT) gold.$(OBJEXT) gold-threads.$(OBJEXT) \
d334 1
d373 1
@


1.59
log
@Set LC_ALL=C rather than unsetting LC_COLLATE for sort.
@
text
@d85 1
a85 1
	parameters.$(OBJEXT) readsyms.$(OBJEXT) \
d104 1
a104 1
	$(am__DEPENDENCIES_1)
d230 2
d313 1
d342 1
d380 1
d411 3
a413 1
ldadd_var = $(TARGETOBJS) libgold.a $(LIBIBERTY) $(LIBINTL) $(THREADSLIB)
d560 1
@


1.58
log
@	PR 5990
	* descriptors.cc: New file.
	* descriptors.h: New file.
	* gold-threads.h (class Hold_optional_lock): New class.
	* fileread.cc: Include "descriptors.h".
	(File_read::~File_read): Release descriptor rather than closing
	it.
	(File_read::open) [file]: Call open_descriptor rather than open.
	Set is_descriptor_opened_.
	(File_read::open) [memory]: Assert that descriptor is not open.
	(File_read::reopen_descriptor): New function.
	(File_read::release): Release descriptor.
	(File_read::do_read): Make non-const.  Reopen descriptor.
	(File_read::read): Make non-const.
	(File_read::make_view): Reopen descriptor.
	(File_read::do_readv): Likewise.
	* fileread.h (class File_read): Add is_descriptor_opened_ field.
	Update declarations.
	* layout.cc: Include "descriptors.h".
	(Layout::create_build_id): Use open_descriptor rather than open.
	* output.cc: Include "descriptors.h".
	(Output_file::open): Use open_descriptor rather than open.
	* archive.cc (Archive::const_iterator): Change Archive to be
	non-const.
	(Archive::begin, Archive::end): Make non-const.
	(Archive::count_members): Likewise.
	* archive.h (class Archive): Update declarations.
	* object.h (Object::read): Make non-const.
	* Makefile.am (CCFILES): Add descriptors.cc.
	(HFILES): Add descriptors.h.
	* Makefile.in: Rebuild.
@
text
@d1098 1
a1098 1
	for f in $(POTFILES); do echo $$f; done | LC_COLLATE= sort > tmp \
@


1.57
log
@	* cref.cc: New file.
	* cref.h: New file.
	* options.h (class General_options): Add --print-symbol-counts.
	* main.cc (main): Issue defined symbol report if requested.
	* archive.cc (Archive::interpret_header): Make into a const member
	function.
	(Archive::add_symbols): Call Input_objects::archive_start and
	archive_stop.
	(Archive::const_iterator): Define new class.
	(Archive::begin, Archive::end): New functions.
	(Archive::include_all_members): Rewrite to use iterator.
	(Archive::count_members): New function.
	* archive.h (class Archive): Update declarations.
	(Archive::filename): New function.
	* object.cc: Include "cref.h".
	(Sized_relobj::Sized_relobj): Initialize defined_count_.
	(Sized_relobj::do_get_global_symbol_counts): New function.
	(Input_objects::add_object): Add object to cross-referencer.
	(Input_objects::archive_start): New function.
	(Input_objects::archive_stop): New function.
	(Input_objects::print_symbol_counts): New function.
	* object.h: Declare Cref and Archive.
	(Object::get_global_symbol_counts): New function.
	(Object::do_get_global_symbol_counts): New pure virtual function.
	(class Sized_relobj): Add defined_count_ field.  Update
	declarations.
	(class Input_objects): Add cref_ field.  Update constructor.
	Update declarations.
	* dynobj.cc (Sized_dynobj::Sized_dynobj): Initialize symbols_ and
	defined_count_.
	(Sized_dynobj::do_add_symbols): Allocate symbols_ if printing
	symbol counts.
	(Sized_dynobj::do_get_global_symbol_counts): New function.
	* dynobj.h (class Sized_dynobj): Add fields symbols_ and
	defined_count_.  Update declarations.  Define Symbols typedef.
	* symtab.cc (Symbol_table::add_from_relobj): Add defined
	parameter.  Change all callers.
	(Symbol_table::add_from_dynobj): Add sympointers and defined
	parameters.  Change all callers.
	* symtab.h (class Symbol_table): Update declarations.
	* Makefile.am (CCFILES): Add cref.cc.
	(HFILES): Add cref.h.
	* Makefile.in: Rebuild.
@
text
@d79 11
a89 10
	cref.$(OBJEXT) defstd.$(OBJEXT) dirsearch.$(OBJEXT) \
	dynobj.$(OBJEXT) dwarf_reader.$(OBJEXT) ehframe.$(OBJEXT) \
	errors.$(OBJEXT) expression.$(OBJEXT) fileread.$(OBJEXT) \
	gold.$(OBJEXT) gold-threads.$(OBJEXT) layout.$(OBJEXT) \
	mapfile.$(OBJEXT) merge.$(OBJEXT) object.$(OBJEXT) \
	options.$(OBJEXT) output.$(OBJEXT) parameters.$(OBJEXT) \
	readsyms.$(OBJEXT) reduced_debug_output.$(OBJEXT) \
	reloc.$(OBJEXT) resolve.$(OBJEXT) script-sections.$(OBJEXT) \
	script.$(OBJEXT) stringpool.$(OBJEXT) symtab.$(OBJEXT) \
	target-select.$(OBJEXT) version.$(OBJEXT) workqueue.$(OBJEXT) \
d322 1
d361 1
d534 1
@


1.56
log
@2008-07-20  Chris Demetriou  <cgd@@google.com>

        * configure.ac (gold_cv_c_random_seed): New configured variable.
        (RANDOM_SEED_CFLAGS): New substituted variable.
        * Makefile.am (AM_CFLAGS, AM_CXXFLAGS): Add $(RANDOM_SEED_CFLAGS).
        * configure: Rebuild.
        * Makefile.in: Likewise.
        * testsuite/Makefile.in: Likewise.
@
text
@d79 10
a88 10
	defstd.$(OBJEXT) dirsearch.$(OBJEXT) dynobj.$(OBJEXT) \
	dwarf_reader.$(OBJEXT) ehframe.$(OBJEXT) errors.$(OBJEXT) \
	expression.$(OBJEXT) fileread.$(OBJEXT) gold.$(OBJEXT) \
	gold-threads.$(OBJEXT) layout.$(OBJEXT) mapfile.$(OBJEXT) \
	merge.$(OBJEXT) object.$(OBJEXT) options.$(OBJEXT) \
	output.$(OBJEXT) parameters.$(OBJEXT) readsyms.$(OBJEXT) \
	reduced_debug_output.$(OBJEXT) reloc.$(OBJEXT) \
	resolve.$(OBJEXT) script-sections.$(OBJEXT) script.$(OBJEXT) \
	stringpool.$(OBJEXT) symtab.$(OBJEXT) target-select.$(OBJEXT) \
	version.$(OBJEXT) workqueue.$(OBJEXT) \
d319 1
d356 1
d529 1
@


1.55
log
@2008-06-12  David Edelsohn  <edelsohn@@gnu.org>
            David S. Miller  <davem@@davemloft.net>

        * powerpc.cc: New file.
        * Makefile.am (TARGETSOURCES): Add powerpc.cc
        (ALL_TARGETOBJS): Add powerpc.$(OBJEXT)
        * configure.tgt: Add entries for powerpc-* and powerpc64-*.
        * Makefile.in: Rebuild.
@
text
@d230 1
d301 2
a302 2
AM_CFLAGS = $(WARN_CFLAGS) $(LFS_CFLAGS)
AM_CXXFLAGS = $(WARN_CXXFLAGS) $(LFS_CFLAGS)
@


1.54
log
@elfcpp/:
	* dwarf.h (enum DW_FORM): Define.
gold/:
	* reduced_debug_output.cc: New file.
	* reduced_debug_output.h: New file.
	* options.h (class General_optoins): Add --strip-debug-non-line.
	* options.cc (General_options::finalize): Add strip_debug_non_line
	to the strip heirarchy.
	* layout.h (class Layout): Add debug_abbrev_ and debug_info_
	fields.
	* layout.cc: Include "reduced_debug_output.h".
	(Layout::Layout): Initialize new fields.
	(line_only_debug_sections): New static array.
	(is_lines_only_debug_sections): New static inline function.
	(Layout::include_section): Handle --strip-debug-non-line.
	(Layout::make_output_section): If --strip-debug-non-line, build
	new output sections for .debug_abbrev and .debug_info.
	* dwarf_reader.cc (read_unsigned_LEB_128): Move to namespace
	gold.  Warn about possible overflow.
	(read_signed_LEB_128): Likewise.
	* dwarf_reader.h: (read_unsigned_LEB_128): Declare.
	(read_signed_LEB_128): Declare.
	* Makefile.am (CCFILES): Add reduced_debug_output.cc.
	(HFILES): Add reduced_debug_output.h.
	* Makefile.in: Rebuild.
@
text
@d392 1
a392 1
	i386.cc x86_64.cc sparc.cc
d395 1
a395 1
	i386.$(OBJEXT) x86_64.$(OBJEXT) sparc.$(OBJEXT)
d545 1
@


1.53
log
@	* mapfile.cc: New file.
	* mapfile.h: New file.
	* options.h (class General_options): Add -M/--print-map and -Map.
	* options.cc (General_options::finalize): Make -M equivalent to
	-Map -.
	* main.cc: Include <cstdio> and "mapfile.h".
	(main): Open mapfile if requested.
	* gold.cc (class Middle_runner): Add mapfile_ field.  Update
	constructor.  Change caller.
	(queue_initial_tasks): Add mapfile parameter.  Change caller.
	(queue_middle_tasks): Likewise.
	* gold.h (queue_initial_tasks, queue_middle_tasks): Update
	declarations.
	* archive.cc: Include "mapfile.h".
	(Archive::add_symbols): Add mapfile parameter.  Change all
	callers.  Pass mapfile, symbol, and reason to include_member.
	(Archive::include_all_members): Add mapfile parameter.  Change all
	callers.
	(Archive::include_member): Add mapfile, sym, and why parameters.
	Change all callers.  Report inclusion to map file.
	* archive.h: Include "fileread.h".
	(class Archive): Update declarations.
	(Archive::file): New const method.
	(class Add_archive_symbols): Add mapfile_ field.  Update
	constructor.  Change all callers.
	* readsyms.h (class Read_symbols): Likewise.
	(class Finish_group): Likewise.
	(class Read_script): Likewise.
	* common.cc: Include "mapfile.h".
	(Symbol_table::allocate_commons): Add mapfile parameter.  Change
	all callers.
	(Symbol_table::do_allocate_commons): Likewise.
	(Symbol_table::do_allocate_commons_list): Likewise.  Report common
	symbol allocation to mapfile.
	* common.h (class Allocate_commons_task): Add mapfile_ field.
	Update constructor.  Change all callers.
	* symtab.h (class Symbol_table): Update declarations.
	* layout.cc: Include "mapfile.h".
	(Layout_task_runner::run): Print information to mapfile.
	(Layout::create_gold_note): Change Output_data_fixed_space to
	Output_data_zero_fill.
	(Layout::create_build_id): Likewise.
	(Layout::print_to_mapfile): New function.
	* layout.h (class Layout_task_runner): Add mapfile_ field.  Update
	constructor.  Change caller.
	(class Layout): Declare print_to_mapfile.
	* output.cc (Output_section::Input_section::print_to_mapfile): New
	function.
	(Output_section::add_input_section): If producing a map, always
	add to input_sections_ list.
	(Output_section::do_print_to_mapfile): New function.
	(Output_segment::print_sections_to_mapfile): New function.
	(Output_segment::print_section_list_to_mapfile): New function.
	* output.h: Include "mapfile.h".
	(Output_data::print_to_mapfile): New function.
	(Output_data::do_print_to_mapfile): New virtual function.
	(Output_segment_headers::do_print_to_mapfile): New function.
	(Output_file_header::do_print_to_mapfile): New function.
	(Output_data_const::do_print_to_mapfile): New function.
	(class Output_data_const_buffer): Add map_name_ field.  Update
	constructor.  Change all callers.  Add do_print_to_mapfile
	function.
	(class Output_data_fixed_space): Likewise.
	(class Output_data_space): Likewise.
	(class Output_data_zero_fill): New class.
	(Output_data_strtab::do_print_to_mapfile): New function.
	(Output_data_reloc_base::do_print_to_mapfile): New function.
	(Output_relocatable_relocs::do_print_to_mapfile): New function.
	(Output_data_group::do_print_to_mapfile): New function.
	(Output_data_got::do_print_to_mapfile): New function.
	(Output_data_dynamic::do_print_to_mapfile): New function.
	(Output_symtab_xindex::do_print_to_mapfile): New function.
	(class Output_section): Declare do_print_to_mapflie.  Declare
	print_to_mapfile in Input_section.
	(class Output_segment): Declare new functions.
	* object.h (Sized_relobj::symbol_count): New function.
	* script-sections.cc
	(Output_section_element_dot_assignment::set_section_addresses):
	Change Output_data_fixed_space to Output_data_zero_fill.
	(Output_data_expression::do_print_to_mapfile): New function.
	* script.cc (read_input_script): Add mapfile parameter.  Change
	all callers.
	* script.h (read_input_script): Update declaration.
	* ehframe.h (Eh_frame_hdr::do_print_to_mapfile): New function.
	(Eh_frame::do_print_to_mapfile): New function.
	* merge.h (Output_merge_data::do_print_to_mapfile): New function.
	(Output_merge_string::do_print_to_mapfile): New function.
	* i386.cc (Output_data_plt_i386::do_print_to_mapfile): New
	function.
	* sparc.cc (Output_data_plt_sparc::do_print_to_mapfile): New
	function.
	* x86_64.cc (Output_data_plt_x86_64::do_print_to_mapfile): New
	function.
	* Makefile.am (CCFILES): Add mapfile.cc.
	(HFILES): Add mapfile.h.
	* Makefile.in: Rebuild.
@
text
@d85 4
a88 3
	reloc.$(OBJEXT) resolve.$(OBJEXT) script-sections.$(OBJEXT) \
	script.$(OBJEXT) stringpool.$(OBJEXT) symtab.$(OBJEXT) \
	target-select.$(OBJEXT) version.$(OBJEXT) workqueue.$(OBJEXT) \
d336 1
d371 1
d546 1
@


1.52
log
@	* symtab.cc (Symbol_table::add_from_dynobj): If we see a protected
	symbol, change it to have default visibility.
	* testsuite/protected_1.cc: New file.
	* testsuite/protected_2.cc: New file.
	* testsuite/protected_3.cc: New file.
	* testsuite/protected_main_1.cc: New file.
	* testsuite/protected_main_2.cc: New file.
	* testsuite/protected_main_3.cc: New file.
	* testsuite/Makefile.am (check_PROGRAMS): Add protected_1.
	(protected_1_SOURCES, protected_1_DEPENDENCIES): Define.
	(protected_1_LDFLAGS, protected_1_LDADD): Define.
	(protected_1.so): New target.
	(protected_1_pic.o, protected_2_pic.o): New targets.
	(protected_3_pic.o): New target.
	(check_PROGRAMS): Add protected_2.
	(protected_2_SOURCES, protected_2_DEPENDENCIES): Define.
	(protected_2_LDFLAGS, protected_2_LDADD): Define.
	* testsuite/Makefile.in: Rebuild.
@
text
@d82 6
a87 6
	gold-threads.$(OBJEXT) layout.$(OBJEXT) merge.$(OBJEXT) \
	object.$(OBJEXT) options.$(OBJEXT) output.$(OBJEXT) \
	parameters.$(OBJEXT) readsyms.$(OBJEXT) reloc.$(OBJEXT) \
	resolve.$(OBJEXT) script-sections.$(OBJEXT) script.$(OBJEXT) \
	stringpool.$(OBJEXT) symtab.$(OBJEXT) target-select.$(OBJEXT) \
	version.$(OBJEXT) workqueue.$(OBJEXT) \
d328 1
d362 1
d536 1
@


1.51
log
@	* common.cc (Symbol_table::allocate_commons): Remove options
	parameter.  Change caller.
	(Symbol_table::do_allocate_commons): Remove options parameter.
	Change caller.  Just call do_allocate_commons_list twice.
	(Symbol_table::do_allocate_commons_list): New function, broken out
	of do_allocate_commons.
	* common.h (class Allocate_commons_task): Remove options_ field.
	Update constructor.
	* symtab.cc (Symbol_table::Symbol_table): Initialize
	tls_commons_.
	(Symbol_table::add_from_object): Put TLS common symbols on
	tls_commons_ list.
	(Symbol_table::sized_finalize_symbol): Handle STT_TLS symbols
	which are IN_OUTPUT_DATA.
	* symtab.h (class Symbol_table): Add tls_commons_ field.  Update
	allocate_commons and do_allocate_commons declarations.  Declare
	do_allocate_commons_list.
	* gold.cc (queue_middle_tasks): Update creation of
	Allocate_commons_task to not pass options.
	* testsuite/Makefile.am (INCLUDES): Add -I.. .
	(TLS_TEST_C_FLAGS): New variable.
	(tls_test_c_pic.o): New target.
	(tls_test_shared.so): Link in tls_test_c_pic.o.
	(tls_test_c_pic_ie.o): New target.
	(tls_test_ie_shared.so): Link in tls_test_c_pic_ie.o.
	(tls_test_DEPENDENCIES, tls_test_LDADD): Add tls_test_c.o.
	(tls_test_c.o): New target.
	(tls_pic_test_DEPENDENCIES): Add tls_test_c_pic.o.
	(tls_pic_test_LDADD): Likewise.
	(tls_shared_gd_to_ie_test_DEPENDENCIES): Add tls_test_c_pic.o.
	(tls_shared_gd_to_ie_test_LDADD): Likewise.
	(tls_test_c_gnu2.o): New target.
	(tls_shared_gnu2_gd_to_ie_test_DEPENDENCIES): Add
	tls_test_c_gnu2.o.
	(tls_shared_gnu2_gd_to_ie_test_LDADD): Likewise.
	(tls_test_gnu2_shared.so): Link in tls_test_c_gnu2.o.
	(tls_test_shared_nonpic.so): Link in tls_test_c.o.
	* testsuite/tls_test.cc: Include "config.h".
	(t_last): Call t11_last.
	* testsuite/tls_test.h (t11, t11_last): Declare.
	* testsuite/tls_test_c.c: New file.
	* testsuite/tls_test_main.cc (thread_routine): Call t11.
	* configure.ac: Check for OpenMP support.
	* configure, config.in, Makefile.in: Rebuild.
	* testsuite/Makefile.in: Rebuild.
@
text
@d59 3
a61 1
	$(top_srcdir)/../config/nls.m4 $(top_srcdir)/../config/po.m4 \
@


1.50
log
@	* copy-relocs.cc: New file.
	* copy-relocs.h: New file.
	* reloc.cc: Remove Copy_relocs code.
	* reloc.h: Likewise.
	* reloc-types.h (struct Reloc_types) [both versions]: Add
	get_reloc_addend_noerror.
	* output.h (class Output_data_reloc<elfcpp::SHT_REL>): Add
	variants of add_global which take an addend which must be zero.
	* i386.cc: Include "copy-relocs.h".
	(class Target_i386): Change type of copy_relocs_ to variable,
	update initializer.
	(Target_i386::copy_reloc): Rewrite to pass to Copy_relocs class.
	Change all callers.
	(Target_i386::do_finalize_sections): Change handling of
	copy_relocs_.
	* sparc.cc: Include "copy-relocs.h".
	(class Target_sparc): Change type of copy_relocs_ to variable,
	update initializer.
	(Target_sparc::copy_reloc): Rewrite to pass to Copy_relocs class.
	Change all callers.
	(Target_sparc::do_finalize_sections): Change handling of
	copy_relocs_.
	* x86_64.cc: Include "copy-relocs.h".
	(class Target_x86_64): Change type of copy_relocs_ to variable,
	update initializer.
	(Target_x86_64::copy_reloc): Rewrite to pass to Copy_relocs
	class.  Change all callers.
	(Target_x86_64::do_finalize_sections): Change handling of
	copy_relocs_.
	* Makefile.am (CCFILES): Add copy-relocs.cc.
	(HFILES): Add copy-relocs.h.
@
text
@d217 2
@


1.49
log
@	* Makefile.in, aclocal.m4, testsuite/Makefile.in: Rebuild.
@
text
@d76 8
a83 8
	compressed_output.$(OBJEXT) defstd.$(OBJEXT) \
	dirsearch.$(OBJEXT) dynobj.$(OBJEXT) dwarf_reader.$(OBJEXT) \
	ehframe.$(OBJEXT) errors.$(OBJEXT) expression.$(OBJEXT) \
	fileread.$(OBJEXT) gold.$(OBJEXT) gold-threads.$(OBJEXT) \
	layout.$(OBJEXT) merge.$(OBJEXT) object.$(OBJEXT) \
	options.$(OBJEXT) output.$(OBJEXT) parameters.$(OBJEXT) \
	readsyms.$(OBJEXT) reloc.$(OBJEXT) resolve.$(OBJEXT) \
	script-sections.$(OBJEXT) script.$(OBJEXT) \
d312 1
d346 1
d516 1
@


1.48
log
@	* script-sections.cc (Script_sections::create_segments): Use
	header_size_adjustment even when there is enough room for the
	headers.
	* testsuite/script_test_4.sh: New file.
	* testsuite/script_test_4.t: New file.
	* testsuite/Makefile.am (check_SCRIPTS): Add script_test_4.sh.
	(check_DATA): Add script_test_4.stdout.
	(MOSTLYCLEANFILES): Likewise.
	(script_test_4): New target.
	(script_test_4.stdout): New target.
	* testsuite/Makefile.in: Rebuild.
@
text
@d57 1
d59 2
a61 2
	$(top_srcdir)/../config/po.m4 $(top_srcdir)/../config/nls.m4 \
	$(top_srcdir)/../config/gettext-sister.m4 \
a189 1
GREP = @@GREP@@
a245 1
YFLAGS = @@YFLAGS@@
d248 2
a265 3
datarootdir = @@datarootdir@@
docdir = @@docdir@@
dvidir = @@dvidir@@
a271 1
htmldir = @@htmldir@@
a276 1
localedir = @@localedir@@
a280 1
pdfdir = @@pdfdir@@
a282 1
psdir = @@psdir@@
@


1.47
log
@toplevel/

	* configure.ac: Add sparc*-*-* to gold supported targets.
	* configure: Regenerate.

gold/

	* sparc.cc: New file.
	* Makefile.am (TARGETSOURCES): Add sparc.cc
	(ALL_TARGETOBJS): Add sparc.$(OBJEXT)
	* configure.tgt: Document targ_extra_size and
	targ_extra_big_endian.  Add entries for sparc-* and
	sparc64-*.
	* configure.ac: Handle targ_extra_size and
	targ_extra_big_endian.
	* Makefile.in: Rebuild.
	* configure: Likewise.
	* po/POTFILES.in: Likewise.
	* po/gold.pot: Likewise.
@
text
@a56 1
	$(top_srcdir)/../config/gettext-sister.m4 \
a57 2
	$(top_srcdir)/../config/nls.m4 $(top_srcdir)/../config/po.m4 \
	$(top_srcdir)/../config/proginstall.m4 \
d59 2
d189 1
d246 1
a248 2
ac_ct_RANLIB = @@ac_ct_RANLIB@@
ac_ct_STRIP = @@ac_ct_STRIP@@
d265 3
d274 1
d280 1
d285 1
d288 1
@


1.46
log
@2008-04-11  Cary Coutant  <ccoutant@@google.com>

	Add support for TLS descriptors for i386 and x86_64.
	* i386.cc (Target_i386::Relocate::tls_desc_gd_to_ie): New function.
	(Target_i386::Relocate::tls_desc_gd_to_le): New function.
	(Target_i386::Got_type): Add GOT_TYPE_TLS_NOFFSET and
	GOT_TYPE_TLS_DESC.
	(Target_i386::got_mod_index_entry): Remove unnecessary code.
	(Target_i386::Scan::local): Implement R_386_TLS_GOTDESC and
	R_386_TLS_DESC_CALL relocations.  Fix problem with initial-exec
	relocations.
	(Target_i386::Scan::global): Fix problem with GD-to-IE relaxation.
	Implement R_386_TLS_GOTDESC and R_386_TLS_DESC_CALL relocations;
	Fix problem with initial-exec relocations.
	(Target_i386::Relocate::relocate_tls): Likewise.
	(Target_i386::Relocate::tls_gd_to_ie): Fix problem with GD-to-IE
	relaxation.
	* output.cc (Output_data_dynamic::Dynamic_entry::write): Add
	support for section-plus-offset dynamic table entries.
	* output.h (Output_data_dynamic::add_section_plus_offset): New function.
	(Output_data_dynamic::Dynamic_entry): Add support for
	section-plus-offset dynamic table entries.
	(Output_data_dynamic::Classification): Likewise.
	(Output_data_dynamic::classification_): Renamed offset_.
	* x86_64.cc (Target_x86_64::Relocate::tls_desc_gd_to_ie): New function.
	(Target_x86_64::Relocate::tls_desc_gd_to_le): New function.
	(Target_x86_64::make_plt_section): New function.
	(Target_x86_64::reserve_tlsdesc_entries): New function.
	(Output_data_plt_x86_64::Output_data_plt_x86_64): Add new parameter.
	(Output_data_plt_x86_64::reserve_tlsdesc_entry): New function.
	(Output_data_plt_x86_64::has_tlsdesc_entry): New function.
	(Output_data_plt_x86_64::get_tlsdesc_got_offset): New function.
	(Output_data_plt_x86_64::get_tlsdesc_plt_offset): New function.
	(Output_data_plt_x86_64::tlsdesc_plt_entry): New field.
	(Output_data_plt_x86_64::set_final_data_size): Move out of line;
	add extra PLT entry for TLS descriptors.
	(Output_data_plt_x86_64::got_): New field.
	(Output_data_plt_x86_64::tlsdesc_got_offset_): New field.
	(Output_data_plt_x86_64::Output_data_plt_x86_64): Initialize new
	fields.
	(Output_data_plt_x86_64::do_write): Write extra PLT entry for TLS
	descriptors.
	(Target_x86_64::make_plt_entry): Factor out make_plt_section.
	(Target_x86_64::got_mod_index_entry): Remove unnecessary code.
	(Target_x86_64::Scan::local): Implement R_386_TLS_GOTDESC and
	R_386_TLS_DESC_CALL relocations.
	(Target_x86_64::Scan::global): Likewise.
	(Target_x86_64::do_finalize_sections): Add dynamic table entries
	for TLS descriptors.
	(Relocate::relocate_tls): Fix problem with GD-to-IE relaxation.
	Implement R_386_TLS_GOTDESC and R_386_TLS_DESC_CALL relocations.
	(Target_x86_64::Relocate::tls_gd_to_ie): Fix problem with
	GD-to-IE relaxation.
	* configure.ac: Export new conditional variables TLS_GNU2_DIALECT
	and TLS_DESCRIPTORS.
	* Makefile.in: Rebuild.
	* configure: Rebuild.
	* testsuite/Makefile.am (tls_shared_gd_to_ie_test): New target.
	(tls_test_shared2.so): New target.
	(tls_shared_gd_to_ie_test_SOURCES): New variable.
	(tls_shared_gd_to_ie_test_DEPENDENCIES): New variable.
	(tls_shared_gd_to_ie_test_LDFLAGS): New variable.
	(tls_shared_gd_to_ie_test_LDADD): New variable.
	(tls_shared_gnu2_gd_to_ie_test): New target.
	(tls_test_gnu2.o, tls_test_file2_gnu2.o, tls_test_gnu2_shared2.so):
	New targets.
	(tls_shared_gnu2_gd_to_ie_test_SOURCES): New variable.
	(ls_shared_gnu2_gd_to_ie_test_DEPENDENCIES): New variable.
	(tls_shared_gnu2_gd_to_ie_test_LDFLAGS): New variable.
	(tls_shared_gnu2_gd_to_ie_test_LDADD): New variable.
	(tls_shared_gnu2_test): New target.
	(tls_test_gnu2_shared.so): New target.
	(tls_shared_gnu2_test_SOURCES): New variable.
	(tls_shared_gnu2_test_DEPENDENCIES): New variable.
	(tls_shared_gnu2_test_LDFLAGS): New variable.
	(tls_shared_gnu2_test_LDADD): New variable.
	* testsuite/Makefile.in: Rebuild.
	* testsuite/Makefile.
@
text
@d57 1
d59 2
a61 2
	$(top_srcdir)/../config/po.m4 $(top_srcdir)/../config/nls.m4 \
	$(top_srcdir)/../config/gettext-sister.m4 \
d381 1
a381 1
	i386.cc x86_64.cc
d384 1
a384 1
	i386.$(OBJEXT) x86_64.$(OBJEXT)
d537 1
@


1.45
log
@	* testsuite/Makefile.am (justsyms_2r.o): Add dependency on
	justsyms.t.
	* testsuite/Makefile.in: Rebuild.

	* testsuite/script_test_2a.cc (script_test_string_a): Make 8 bytes
	long.
	* testsuite/script_test_2.cc (main): Adjust test.
@
text
@a188 1
GREP = @@GREP@@
d233 2
d236 2
a244 1
YFLAGS = @@YFLAGS@@
d247 2
a264 3
datarootdir = @@datarootdir@@
docdir = @@docdir@@
dvidir = @@dvidir@@
a270 1
htmldir = @@htmldir@@
a275 1
localedir = @@localedir@@
a279 1
pdfdir = @@pdfdir@@
a281 1
psdir = @@psdir@@
@


1.44
log
@	* configure.ac: Export new conditional variable HAVE_ZLIB.
	* testsuite/Makefile.am (flagstest_o_specialfile): Condition
	on HAVE_ZLIB.
	(flagstest_o_specialfile_and_compress_debug_sections): Likewise.
	* configure, Makefile.in, testsuite/Makefile.in: Rebuild.
@
text
@d189 1
d242 1
a244 2
ac_ct_RANLIB = @@ac_ct_RANLIB@@
ac_ct_STRIP = @@ac_ct_STRIP@@
d261 3
d270 1
d276 1
d281 1
d284 1
@


1.43
log
@	* configure.ac: Don't test for objdump, c++filt, or readelf.
	* testsuite/Makefile.am: Remove READELF and OBJDUMP_AND_CPPFILT
	conditionals.
	(TEST_READELF): New variable.
	(TEST_OBJDUMP, TEST_CXXFILT, TEST_STRIP): New variables.
	(check_PROGRAMS): Add two_file_strip_test.
	(two_file_strip_test): New target.
	(check_PROGRAMS): Add two_file_same_shared_strip_test.
	(two_file_same_shared_strip_test_SOURCES): New variable.
	(two_file_same_shared_strip_test_DEPENDENCIES): New variable.
	(two_file_same_shared_strip_test_LDFLAGS): New variable.
	(two_file_same_shared_strip_test_LDADD): New variable.
	(two_file_shared_strip.so): New target.
	(ver_test_2.syms, ver_test_4.syms): Use TEST_READELF.
	(ver_test_5.syms, ver_test_7.syms): Likewise.
	(ver_matching_test.stdout): Use TEST_OBJDUMP and TEST_CXXFILT.
	(strip_test_3.stdout): Use TEST_OBJDUMP.
	* configure, Makefile.in, testsuite/Makefile.in: Rebuild.
@
text
@d189 2
@


1.42
log
@	* compressed_output.h (class Output_compressed_section): Use
	unsigned buffer.
	* compressed_output.cc (zlib_compress): Use unsigned buffers,
	add zlib header.
	(zlib_compressed_suffix): Removed.
	(Output_compressed_section::set_final_data_size): Use unsigned
	buffers.
	* testsuite/Makefile.am (flagstest_compress_debug_sections):
	Fix linker invocation.
	(flagstest_o_specialfile_and_compress_debug_sections):
	Likewise.
	* testsuite/Makefile.in: Regenerated.
@
text
@a212 2
OBJDUMP_AND_CPPFILT_FALSE = @@OBJDUMP_AND_CPPFILT_FALSE@@
OBJDUMP_AND_CPPFILT_TRUE = @@OBJDUMP_AND_CPPFILT_TRUE@@
a222 2
READELF_FALSE = @@READELF_FALSE@@
READELF_TRUE = @@READELF_TRUE@@
@


1.41
log
@	* layout.cc (Layout::layout): If we see an input section with a
	name that needs sorting, set the must_sort flag for the output
	section.
	(Layout::make_output_section): If the name of the output section
	indicates that it might	require sorting, set the may_sort flag.
	* output.h (Output_section::may_sort_attached_input_sections): New
	function.
	(Output_section::set_may_sort_attached_input_sections): New
	function.
	(Output_section::must_sort_attached_input_sections): New
	function.
	(Output_section::set_must_sort_attached_input_sections): New
	function.
	(class Output_section): Declare Input_section_sort_entry.  Define
	Input_section_sort_compare.  Declare
	sort_attached_input_sections.  Add new fields:
	may_sort_attached_input_sections_,
	must_sort_attached_input_sections_,
	attached_input_sections_are_sorted_.
	* output.cc (Output_section::Output_section): Initialize new
	fields.
	(Output_section::add_input_section): Add an entry to
	input_sections_ if may_sort or must_sort are true.
	(Output_section::set_final_data_size): Call
	sort_attached_input_sections if necessary.
	(Output_section::Input_section_sort_entry): Define new class.
	(Output_section::Input_section_sort_compare::operator()): New
	function.
	(Output_section::sort_attached_input_sections): New function.
	* configure.ac: Check whether the compiler supports constructor
	priorities.  Define a CONSTRUCTOR_PRIORITY automake conditional.
	* testsuite/initpri1.c: New file.
	* testsuite/Makefile.am (check_PROGRAMS): Add initpri1 if
	CONSTRUCTOR_PRIORITY.
	(initpri1_SOURCES, initpri1_DEPENDENCIES): New variables.
	(initpri1_LDFLAGS): New variable.
	* configure, Makefile.in, testsuite/Makefile.in: Rebuild.
@
text
@d53 1
a53 1
	NEWS pread.c yyscript.c yyscript.h
@


1.40
log
@	* symtab.cc (Symbol_table::add_from_relobj): Don't set the version
	of an undefined symbol from a version script.
	* testsuite/Makefile.am (ver_test_5.so): New target.
	(ver_test_5.o): New target.
	(check_SCRIPTS): Add ver_test_5.sh.
	(check_DATA): Add ver_test_5.syms.
	(ver_test_5.syms): New target.
	* testsuite/ver_test_5.cc: New file.
	* testsuite/ver_test_5.script: New file.
	* testsuite/ver_test_5.sh: New file.
	* Makefile.in, testsuite/Makefile.in: Rebuild.
@
text
@d166 2
@


1.39
log
@Don't get confused about whether a symbol is the default version if we
see a later reference to it.  Add tests for this case.
@
text
@d52 2
a53 2
	$(top_srcdir)/configure $(top_srcdir)/po/Make-in pread.c \
	yyscript.c yyscript.h
@


1.38
log
@Add support for --format binary for input files.
@
text
@d223 2
@


1.37
log
@Fix group signature handling for relocatable link, add bootstrap
relocatable test.
@
text
@d74 1
a74 1
am__objects_1 = archive.$(OBJEXT) common.$(OBJEXT) \
d302 1
d335 1
d504 1
@


1.36
log
@From Ollie Wild: add missing backquote to install-exec-local.
@
text
@d45 2
a46 1
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@	ld2$(EXEEXT)
d104 3
d110 3
d127 2
a128 1
	$(EXTRA_ld_new_SOURCES) $(ld1_SOURCES) $(ld2_SOURCES)
d131 2
a132 1
	$(am__ld2_SOURCES_DIST)
d394 9
a402 1
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@TESTS = bootstrap-test
d484 3
d490 3
d1085 17
@


1.35
log
@Add explicit dependencies on yyscript.h to make sure that it is
built.
@
text
@d1028 1
a1028 1
	n=`echo ld | sed '$(transform)'; \
@


1.34
log
@Parse a SECTIONS clause in a linker script.
@
text
@d1017 2
@


1.33
log
@From Andrew Chatham and Craig Silverstein: Add support for version
scripts.
@
text
@d81 3
a83 2
	script.$(OBJEXT) stringpool.$(OBJEXT) symtab.$(OBJEXT) \
	target-select.$(OBJEXT) version.$(OBJEXT) workqueue.$(OBJEXT) \
d185 1
a185 1
LFS_CXXFLAGS = @@LFS_CXXFLAGS@@
d279 2
a280 1
AM_CXXFLAGS = $(WARN_CXXFLAGS) $(LFS_CXXFLAGS)
d314 1
d345 2
a347 1
	script-c.h \
d502 1
@


1.32
log
@Support assignments and expressions in linker scripts.
@
text
@d201 2
@


1.31
log
@Rewrite workqueue.  This version eliminates the master thread, and
reduces the amount of locking required to find a new thread to run.
@
text
@d76 7
a82 7
	ehframe.$(OBJEXT) errors.$(OBJEXT) fileread.$(OBJEXT) \
	gold.$(OBJEXT) gold-threads.$(OBJEXT) layout.$(OBJEXT) \
	merge.$(OBJEXT) object.$(OBJEXT) options.$(OBJEXT) \
	output.$(OBJEXT) parameters.$(OBJEXT) readsyms.$(OBJEXT) \
	reloc.$(OBJEXT) resolve.$(OBJEXT) script.$(OBJEXT) \
	stringpool.$(OBJEXT) symtab.$(OBJEXT) target-select.$(OBJEXT) \
	version.$(OBJEXT) workqueue.$(OBJEXT) \
d297 1
d481 1
@


1.30
log
@Compile shared library code with -fPIC.  Also, alphabetize.
@
text
@d347 1
@


1.29
log
@From Craig Silverstein: Add support for compressing .debug_str section.
@
text
@d81 1
a81 1
	symtab.$(OBJEXT) stringpool.$(OBJEXT) target-select.$(OBJEXT) \
d310 1
a311 1
	stringpool.cc \
@


1.28
log
@Add threading support.
@
text
@d73 2
a74 1
am__objects_1 = archive.$(OBJEXT) common.$(OBJEXT) defstd.$(OBJEXT) \
d156 1
d290 1
d320 1
d472 1
@


1.27
log
@From Craig Silverstein: Add first version of generating error messages
with file name and line number.
@
text
@d81 2
a82 1
	version.$(OBJEXT) workqueue.$(OBJEXT)
d311 2
a312 1
	workqueue.cc
d343 2
a344 1
	workqueue.h
d493 1
@


1.26
log
@Use AC_GNU_SOURCE.
@
text
@d74 8
a81 8
	dirsearch.$(OBJEXT) dynobj.$(OBJEXT) ehframe.$(OBJEXT) \
	errors.$(OBJEXT) fileread.$(OBJEXT) gold.$(OBJEXT) \
	gold-threads.$(OBJEXT) layout.$(OBJEXT) merge.$(OBJEXT) \
	object.$(OBJEXT) options.$(OBJEXT) output.$(OBJEXT) \
	parameters.$(OBJEXT) readsyms.$(OBJEXT) reloc.$(OBJEXT) \
	resolve.$(OBJEXT) script.$(OBJEXT) symtab.$(OBJEXT) \
	stringpool.$(OBJEXT) target-select.$(OBJEXT) version.$(OBJEXT) \
	workqueue.$(OBJEXT)
d290 1
d318 1
d467 1
@


1.25
log
@Add infrastructure for threading support.
@
text
@d274 1
a274 1
INCLUDES = -D_GNU_SOURCE \
@


1.24
log
@Run all error handling through an Errors object.  Delete output file
on error.
@
text
@d94 2
a95 1
	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1)
d214 2
d281 1
d354 1
a354 1
ldadd_var = $(TARGETOBJS) libgold.a $(LIBIBERTY) $(LIBINTL)
@


1.23
log
@Only run static TLS tests on glibc 2.4 or later.
@
text
@d75 7
a81 6
	fileread.$(OBJEXT) gold.$(OBJEXT) gold-threads.$(OBJEXT) \
	layout.$(OBJEXT) merge.$(OBJEXT) object.$(OBJEXT) \
	options.$(OBJEXT) output.$(OBJEXT) parameters.$(OBJEXT) \
	readsyms.$(OBJEXT) reloc.$(OBJEXT) resolve.$(OBJEXT) \
	script.$(OBJEXT) symtab.$(OBJEXT) stringpool.$(OBJEXT) \
	target-select.$(OBJEXT) version.$(OBJEXT) workqueue.$(OBJEXT)
d287 1
d314 1
d463 1
@


1.22
log
@From Craig Silverstein: add tls.h, use it in i386.cc.
@
text
@d208 2
@


1.21
log
@Add --version option.
@
text
@d329 1
@


1.20
log
@Add a TLS test case.
@
text
@d80 1
a80 1
	target-select.$(OBJEXT) workqueue.$(OBJEXT)
d300 1
d475 1
@


1.19
log
@Full support for --sysroot.
@
text
@d210 2
@


1.18
log
@From Craig Silverstein: don't run function pointer non-PIC tests when
they won't work.
@
text
@d91 4
a94 3
am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1) libgold.a \
	$(am__DEPENDENCIES_1)
am__DEPENDENCIES_3 = @@LIBOBJS@@
d269 1
d272 1
d340 2
a341 2
deps_var = $(TARGETOBJS) libgold.a $(LIBINTL_DEP)
ldadd_var = $(TARGETOBJS) libgold.a $(LIBINTL)
@


1.17
log
@From Craig Silverstein: x86_64 support.
@
text
@d165 2
@


1.16
log
@Clean up target handling--only build required files, warn about
unsupported targets.
@
text
@d328 1
a328 1
	i386.cc
d331 1
a331 1
	i386.$(OBJEXT)
d468 1
@


1.15
log
@Add basic exception frame header, plus test.
@
text
@d87 2
a88 3
am__objects_4 = i386.$(OBJEXT)
am__objects_5 = main.$(OBJEXT) $(am__objects_4)
am_ld_new_OBJECTS = $(am__objects_5)
d91 2
a92 1
am__DEPENDENCIES_2 = libgold.a $(am__DEPENDENCIES_1)
d94 2
a95 2
am__ld1_SOURCES_DIST = main.cc i386.cc
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@am_ld1_OBJECTS = $(am__objects_5)
d97 2
a98 2
am__ld2_SOURCES_DIST = main.cc i386.cc
@@GCC_TRUE@@@@NATIVE_LINKER_TRUE@@am_ld2_OBJECTS = $(am__objects_5)
d113 2
a114 2
SOURCES = $(libgold_a_SOURCES) $(ld_new_SOURCES) $(ld1_SOURCES) \
	$(ld2_SOURCES)
d116 2
a117 1
	$(am__ld1_SOURCES_DIST) $(am__ld2_SOURCES_DIST)
d206 1
a322 3
TARGETFILES = \
	i386.cc

d327 6
d334 3
a336 3
sources_var = main.cc $(TARGETFILES)
deps_var = libgold.a $(LIBINTL_DEP)
ldadd_var = libgold.a $(LIBINTL)
d340 2
a341 1
POTFILES = $(CCFILES) $(HFILES) $(TARGETFILES)
@


1.14
log
@Rework File_read interface.  Get file size.  Use pread when
available.
@
text
@d74 7
a80 7
	dirsearch.$(OBJEXT) dynobj.$(OBJEXT) fileread.$(OBJEXT) \
	gold.$(OBJEXT) gold-threads.$(OBJEXT) layout.$(OBJEXT) \
	merge.$(OBJEXT) object.$(OBJEXT) options.$(OBJEXT) \
	output.$(OBJEXT) parameters.$(OBJEXT) readsyms.$(OBJEXT) \
	reloc.$(OBJEXT) resolve.$(OBJEXT) script.$(OBJEXT) \
	symtab.$(OBJEXT) stringpool.$(OBJEXT) target-select.$(OBJEXT) \
	workqueue.$(OBJEXT)
d274 1
d299 1
d442 1
@


1.13
log
@Change YFLAGS to AM_YFLAGS.
@
text
@d51 2
a52 2
	$(top_srcdir)/configure $(top_srcdir)/po/Make-in yyscript.c \
	yyscript.h
d93 1
d331 2
a332 2
ld_new_DEPENDENCIES = $(deps_var)
ld_new_LDADD = $(ldadd_var)
d434 1
d898 1
a898 1
	-rm -rf ./$(DEPDIR)
d926 1
a926 1
	-rm -rf ./$(DEPDIR)
@


1.12
log
@Add bootstrap test.
@
text
@d265 1
a265 1
YFLAGS = -d
@


1.11
log
@Add global parameters.
@
text
@d44 2
d88 2
a89 1
am_ld_new_OBJECTS = main.$(OBJEXT) $(am__objects_4)
d92 7
d112 4
a115 2
SOURCES = $(libgold_a_SOURCES) $(ld_new_SOURCES)
DIST_SOURCES = $(libgold_a_SOURCES) $(ld_new_SOURCES)
d163 2
d179 1
d188 2
d326 6
a331 3
ld_new_SOURCES = main.cc $(TARGETFILES)
ld_new_DEPENDENCIES = libgold.a $(LIBINTL_DEP)
ld_new_LDADD = libgold.a $(LIBINTL)
d333 9
d412 3
d420 6
d641 73
d857 2
d891 2
a892 2
clean-am: clean-generic clean-noinstLIBRARIES clean-noinstPROGRAMS \
	mostlyclean-am
d945 15
a959 15
	check-am clean clean-generic clean-noinstLIBRARIES \
	clean-noinstPROGRAMS clean-recursive ctags ctags-recursive \
	dist dist-all dist-bzip2 dist-gzip dist-shar dist-tarZ \
	dist-zip distcheck distclean distclean-compile \
	distclean-generic distclean-hdr distclean-recursive \
	distclean-tags distcleancheck distdir distuninstallcheck dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-data-local install-exec \
	install-exec-am install-exec-local install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic maintainer-clean-recursive \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-recursive pdf pdf-am ps ps-am tags tags-recursive \
	uninstall uninstall-am uninstall-info-am
d987 20
@


1.10
log
@Add support for SHF_MERGE sections.
@
text
@d75 3
a77 3
	output.$(OBJEXT) readsyms.$(OBJEXT) reloc.$(OBJEXT) \
	resolve.$(OBJEXT) script.$(OBJEXT) symtab.$(OBJEXT) \
	stringpool.$(OBJEXT) target-select.$(OBJEXT) \
d264 1
d288 1
d410 1
@


1.9
log
@Added a testsuite.  More support for COPY relocations.
@
text
@d74 5
a78 4
	object.$(OBJEXT) options.$(OBJEXT) output.$(OBJEXT) \
	readsyms.$(OBJEXT) reloc.$(OBJEXT) resolve.$(OBJEXT) \
	script.$(OBJEXT) symtab.$(OBJEXT) stringpool.$(OBJEXT) \
	target-select.$(OBJEXT) workqueue.$(OBJEXT)
d260 1
d283 1
d404 1
@


1.8
log
@Snapshot.  Includes first cut at output relocation sections.
@
text
@d19 1
d66 5
a70 1
PROGRAMS = $(noinst_PROGRAMS)
d79 7
a85 4
am__objects_3 = i386.$(OBJEXT)
am__objects_4 = yyscript.$(OBJEXT)
am_ld_new_OBJECTS = $(am__objects_1) $(am__objects_2) $(am__objects_3) \
	$(am__objects_4)
d101 2
a102 2
SOURCES = $(ld_new_SOURCES)
DIST_SOURCES = $(ld_new_SOURCES)
d182 1
d194 1
d238 1
a238 1
SUBDIRS = po
d248 1
d303 4
a307 3
ld_new_SOURCES = $(CCFILES) $(HFILES) $(TARGETFILES) $(YFILES)
ld_new_DEPENDENCIES = $(LIBINTL_DEP)
ld_new_LDADD = $(LIBINTL)
d366 2
a367 2
clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
d373 7
d400 1
d740 1
a740 1
all-am: Makefile $(PROGRAMS) config.h
d771 2
a772 1
clean-am: clean-generic clean-noinstPROGRAMS mostlyclean-am
d825 15
a839 14
	check-am clean clean-generic clean-noinstPROGRAMS \
	clean-recursive ctags ctags-recursive dist dist-all dist-bzip2 \
	dist-gzip dist-shar dist-tarZ dist-zip distcheck distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-recursive distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am \
	install-data-local install-exec install-exec-am \
	install-exec-local install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-recursive pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am uninstall-info-am
a841 4
po/POTFILES.in: @@MAINT@@ Makefile
	for f in $(POTFILES); do echo $$f; done | LC_COLLATE= sort > tmp \
	  && mv tmp $(srcdir)/po/POTFILES.in

d845 3
d863 4
@


1.7
log
@More dynamic object support, initial scripting support.
@
text
@d275 1
d277 1
@


1.6
log
@Can now do a full static link of hello, world in C or C++
@
text
@d48 2
a49 1
	$(top_srcdir)/configure $(top_srcdir)/po/Make-in
d67 6
a72 6
	dirsearch.$(OBJEXT) fileread.$(OBJEXT) gold.$(OBJEXT) \
	gold-threads.$(OBJEXT) layout.$(OBJEXT) object.$(OBJEXT) \
	options.$(OBJEXT) output.$(OBJEXT) readsyms.$(OBJEXT) \
	reloc.$(OBJEXT) resolve.$(OBJEXT) symtab.$(OBJEXT) \
	stringpool.$(OBJEXT) target-select.$(OBJEXT) \
	workqueue.$(OBJEXT)
d75 3
a77 1
am_ld_new_OBJECTS = $(am__objects_1) $(am__objects_2) $(am__objects_3)
d83 4
d92 1
a92 4
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@@
d182 1
d237 1
d243 1
d254 1
d265 1
d275 1
d286 4
a289 1
OFILES = gold.o options.o
d291 1
a291 1
ld_new_SOURCES = $(CCFILES) $(HFILES) $(TARGETFILES)
d298 1
a298 1
.SUFFIXES: .cc .o .obj
d354 5
d373 1
d385 1
d390 15
d419 21
d745 2
d821 3
@


1.5
log
@Snapshot.  Now able to produce a minimal executable which actually
runs.
@
text
@d1 1
a1 1
# Makefile.in generated by automake 1.9.5 from Makefile.am.
a18 2
SOURCES = $(ld_new_SOURCES)

d53 3
a55 4
	$(top_srcdir)/../bfd/../config/progtest.m4 \
	$(top_srcdir)/../bfd/../config/po.m4 \
	$(top_srcdir)/../bfd/../config/nls.m4 \
	$(top_srcdir)/../bfd/../config/gettext-sister.m4 \
d65 7
a71 6
am__objects_1 = archive.$(OBJEXT) dirsearch.$(OBJEXT) \
	fileread.$(OBJEXT) gold.$(OBJEXT) gold-threads.$(OBJEXT) \
	layout.$(OBJEXT) object.$(OBJEXT) options.$(OBJEXT) \
	output.$(OBJEXT) readsyms.$(OBJEXT) reloc.$(OBJEXT) \
	resolve.$(OBJEXT) symtab.$(OBJEXT) stringpool.$(OBJEXT) \
	target-select.$(OBJEXT) workqueue.$(OBJEXT)
d234 2
d254 2
d352 2
d521 1
a521 1
	$(mkdir_p) $(distdir)/.. $(distdir)/../bfd $(distdir)/../bfd/../config $(distdir)/../config $(distdir)/po
@


1.4
log
@More section layout code.
@
text
@d68 4
a71 3
am__objects_1 = dirsearch.$(OBJEXT) fileread.$(OBJEXT) gold.$(OBJEXT) \
	gold-threads.$(OBJEXT) layout.$(OBJEXT) object.$(OBJEXT) \
	options.$(OBJEXT) output.$(OBJEXT) readsyms.$(OBJEXT) \
d235 1
d245 1
d253 1
d263 1
d267 1
d349 1
d360 1
@


1.3
log
@New drop, with first cut of section layout code.
@
text
@d127 1
d137 1
@


1.2
log
@Another snapshot of the current state of the sources.  Gets to the
point of symbol resolution and can now issue a multiple definition
error.  Also added target selection infrastructure.
@
text
@d69 4
a72 4
	gold-threads.$(OBJEXT) object.$(OBJEXT) options.$(OBJEXT) \
	readsyms.$(OBJEXT) resolve.$(OBJEXT) symtab.$(OBJEXT) \
	stringpool.$(OBJEXT) target-select.$(OBJEXT) \
	workqueue.$(OBJEXT)
d236 1
d239 1
d252 1
d255 1
a259 1
	targetsize.h \
d346 1
d349 1
@


1.1
log
@Initial CVS checkin of gold
@
text
@d70 3
a72 1
	readsyms.$(OBJEXT) workqueue.$(OBJEXT)
d74 2
a75 1
am_ld_new_OBJECTS = $(am__objects_1) $(am__objects_2)
d231 1
a231 1
CFILES = \
d239 4
d253 1
d257 1
d260 3
d264 2
a265 2
POTFILES = $(CFILES) $(HFILES)
ld_new_SOURCES = $(CFILES) $(HFILES)
d342 1
d346 4
@

