head	1.10;
access;
symbols
	binutils-2_24-branch:1.10.0.2
	binutils-2_24-branchpoint:1.10
	binutils-2_21_1:1.8
	binutils-2_23_2:1.8
	binutils-2_23_1:1.8
	binutils-2_23:1.8
	binutils-2_23-branch:1.8.0.8
	binutils-2_23-branchpoint:1.8
	binutils-2_22_branch:1.8.0.6
	binutils-2_22:1.8
	binutils-2_22-branch:1.8.0.4
	binutils-2_22-branchpoint:1.8
	binutils-2_21:1.8
	binutils-2_21-branch:1.8.0.2
	binutils-2_21-branchpoint:1.8
	binutils-2_20_1:1.7
	binutils-2_20:1.7
	binutils-arc-20081103-branch:1.4.0.6
	binutils-arc-20081103-branchpoint:1.4
	binutils-2_20-branch:1.7.0.4
	binutils-2_20-branchpoint:1.7
	dje-cgen-play1-branch:1.7.0.2
	dje-cgen-play1-branchpoint:1.7
	arc-20081103-branch:1.4.0.4
	arc-20081103-branchpoint:1.4
	binutils-2_19_1:1.4
	binutils-2_19:1.4
	binutils-2_19-branch:1.4.0.2
	binutils-2_19-branchpoint:1.4
	binutils_latest_snapshot:1.10
	added-to-binutils:1.1;
locks; strict;
comment	@# @;


1.10
date	2013.04.25.13.22.51;	author amodra;	state Exp;
branches;
next	1.9;

1.9
date	2012.09.15.17.11.28;	author walt;	state Exp;
branches;
next	1.8;

1.8
date	2010.02.03.05.36.55;	author dougkwan;	state Exp;
branches;
next	1.7;

1.7
date	2009.05.29.00.15.12;	author dougkwan;	state Exp;
branches;
next	1.6;

1.6
date	2009.03.24.00.31.28;	author ian;	state Exp;
branches;
next	1.5;

1.5
date	2009.01.19.19.55.26;	author schwab;	state Exp;
branches;
next	1.4;

1.4
date	2008.06.12.17.02.17;	author dje;	state Exp;
branches;
next	1.3;

1.3
date	2008.05.05.20.20.21;	author ian;	state Exp;
branches;
next	1.2;

1.2
date	2008.04.15.05.16.51;	author davem;	state Exp;
branches;
next	1.1;

1.1
date	2008.02.06.20.32.10;	author iant;	state Exp;
branches;
next	;


desc
@@


1.10
log
@bfd/
	* config.bfd: Add powerpc64le-linux.
gas/
	* configure.in: Allow little-endian linux.
	* configure: Regenerate.
gold/
	* configure.tgt: Add powerpcle and powerpc64le.
ld/
	* Makefile.am (ALL_EMULATION_SOURCES): Add eelf32lppclinux.c.
	(eelf32lppclinux.c): New rule.
	* Makefile.in: Regenerate.
	* configure.tgt: Merge powerpc-linux and other powerpc-elf targets
	with corresponding little-endian targets.
	* emulparams/elf32lppc.sh: Update comment.
	* emulparams/elf32lppclinux.sh: New.
@
text
@# configure.tgt -- target configuration for gold  -*- sh -*-

# Copyright 2006, 2007, 2008, 2009 Free Software Foundation, Inc.
# Written by Ian Lance Taylor <iant@@google.com>.

# This file is part of gold.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
# MA 02110-1301, USA.

# This script handles target configuration for gold.  This is shell
# code invoked by the autoconf generated configure script.  Putting
# this in a separate file lets us skip running autoconf when modifying
# target specific information.

# This file switches on the shell variable ${targ}, which is a
# canonicalized GNU configuration triplet.  It sets the following
# shell variables:

# targ_obj               object file to include in the link, with no extension
# targ_extra_obj         extra object file to include
# targ_machine           ELF machine code for this target
# targ_size              size of this target--32 or 64
# targ_extra_size        extra targ_size setting for the target
# targ_big_endian        whether the target is big-endian--true or false
# targ_extra_big_endian  extra targ_big_endian setting for the target
# targ_osabi		 EI_OSABI value

# If the target is not recognized targ_obj is set to "UNKNOWN".

targ_extra_obj=
targ_machine=
targ_size=
targ_extra_size=
targ_big_endian=
targ_extra_big_endian=
targ_osabi=ELFOSABI_NONE
case "$targ" in
i?86-*)
  targ_obj=i386
  targ_machine=EM_386
  targ_size=32
  targ_big_endian=false
  case "$targ" in
  i?86-*-freebsd*)
    targ_osabi=ELFOSABI_FREEBSD
    ;;
  esac
  ;;
x86_64*)
  targ_obj=x86_64
  targ_extra_obj=i386
  targ_machine=EM_X86_64
  targ_size=64
  targ_extra_size=32
  targ_big_endian=false
  case "$targ" in
  x86_64-*-freebsd*)
    targ_osabi=ELFOSABI_FREEBSD
    ;;
  esac
  ;;
tilegx*)
  targ_obj=tilegx
  targ_machine=EM_TILEGX
  targ_size=64
  targ_extra_size=32
  targ_big_endian=false
  targ_extra_big_endian=true
  ;;
sparc-*)
  targ_obj=sparc
  targ_machine=EM_SPARC
  targ_size=32
  targ_extra_size=64
  targ_big_endian=true
  targ_extra_big_endian=false
  ;;
sparc64-*)
  targ_obj=sparc
  targ_machine=EM_SPARCV9
  targ_size=64
  targ_extra_size=32
  targ_big_endian=true
  targ_extra_big_endian=false
  ;;
powerpc-*)
  targ_obj=powerpc
  targ_machine=EM_PPC
  targ_size=32
  targ_extra_size=64
  targ_big_endian=true
  targ_extra_big_endian=false
  ;;
powerpcle-*)
  targ_obj=powerpc
  targ_machine=EM_PPC
  targ_size=32
  targ_extra_size=64
  targ_big_endian=false
  targ_extra_big_endian=true
  ;;
powerpc64-*)
  targ_obj=powerpc
  targ_machine=EM_PPC64
  targ_size=64
  targ_extra_size=32
  targ_big_endian=true
  targ_extra_big_endian=false
  ;;
powerpc64le-*)
  targ_obj=powerpc
  targ_machine=EM_PPC64
  targ_size=64
  targ_extra_size=32
  targ_big_endian=false
  targ_extra_big_endian=true
  ;;
armeb*-*-*|armbe*-*-*)
 targ_obj=arm
 targ_extra_obj=arm-reloc-property
 targ_machine=EM_ARM
 targ_size=32
 targ_big_endian=true
 targ_extra_big_endian=false
 ;;
arm*-*-*)
 targ_obj=arm
 targ_extra_obj=arm-reloc-property
 targ_machine=EM_ARM
 targ_size=32
 targ_big_endian=false
 targ_extra_big_endian=true
 ;;
*)
  targ_obj=UNKNOWN
  ;;
esac
@


1.9
log
@Add support for tilegx in gold.
	* configure.ac (ENABLE_GOLD): support tilegx*
	* configure: rebuild
elfcpp:
	* tilegx.h: New file.
	* elfcpp.h: add EM_TILEGX.
gold:
	* tilegx.cc: New file.
	* Makefile.am (TARGETSOURCES): Add tilegx.cc
	(ALL_TARGETOBJS): Add tilegx.$(OBJEXT)
	* configure.tgt: Add entries for tilegx*.
	* configure.ac: Likewise.
	* Makefile.in: Rebuild.
	* configure: Likewise.
	* testsuite/icf_safe_test.sh (arch_specific_safe_fold): Handle
	tilegx.
@
text
@d107 8
d123 8
@


1.8
log
@2010-02-02  Doug Kwan  <dougkwan@@google.com>

	* Makefile.am (HFILES): Add arm-reloc-property.h.
	(DEFFILES): New.
 	(TARGETSOURCES): Add arm-reloc-property.cc
 	(ALL_TARGETOBJS): Add arm-reloc-property.$(OBJEXT)
	(libgold_a_SOURCES): $(DEFFILES)
	* Makefile.in: Regenerate.
	* arm-reloc-property.cc: New file.
	* arm-reloc-property.h: New file.
	* arm-reloc.def: New file.
	* arm.cc: Update comments.
	(arm-reloc-property.h): New included header.
	(arm_reloc_property_table): New global variable.
	(Target_arm::do_select_as_default_target): New method definition.
	* configure.tgt (armeb*-*-*,armbe*-*-*,arm*-*-*): Add
	arm-reloc-property to targ_extra_obj.
	* parameters.cc (set_parameters_target): Call
	Target::select_as_default_target().
	* target.h (Target::select_as_default_target): New method definition.
	(Target::do_select_as_default_target): Same.
@
text
@d75 8
@


1.7
log
@2009-05-28  Doug Kwan  <dougkwan@@google.com>

        * configure.ac: Support gold for target arm*-*-*.
        * configure: Regenerate.
        * gold/Makefile.am (TARGETSOURCES): Add arm.cc.
        (ALL_TARGETOBJECTS): Add arm.$(OBJEXT)
        * gold/Makefile.in: Regenerate.
        * gold/arm.cc: New file.
        * gold/configure.tgt: Add armbe*-*-*, armeb*-*-* and arm*-*-* targets.
@
text
@d109 1
d117 1
@


1.6
log
@2009-03-23  Ian Lance Taylor  <iant@@google.com>

	* freebsd.h: New file.
	* i386.cc: Include "freebsd.h".
	(Target_i386): Derive from Target_freebsd rather than
	Sized_target.
	(Target_selector_i386): Derive from Target_selector_freebsd rather
	than Target_selector.
	* x86_64.cc: Include "freebsd.h".
	(Target_x86_64): Derive from Target_freebsd rather than
	Sized_target.
	(Target_selector_x86_64): Derive from Target_selector_freebsd
	rather than Target_selector.
	* target.h (class Target): Add adjust_elf_header and
	do_adjust_elf_header.
	* output.cc (Output_file_header:: do_sized_write): Call target
	adjust_elf_header routine.
	* configure.tgt: Set targ_osabi.
	* configure.ac: Define GOLD_DEFAULT_OSABI.
	* parameters.cc (Parameters::default_target): Pass
	GOLD_DEFAULT_OSABI to select_target.
	* target-select.h (class Target_selector): Make instantiate_target
	protected rather than private.
	* Makefile.am (HFILES): Add freebsd.h.
	* configure, Makefile.in, config.in: Rebuild.
@
text
@d107 14
@


1.5
log
@* configure.tgt (powerpc64-*): Fix targ_obj.
@
text
@d3 1
a3 1
# Copyright 2006, 2007, 2008 Free Software Foundation, Inc.
d39 1
d49 1
d56 5
d69 5
@


1.4
log
@2008-06-12  David Edelsohn  <edelsohn@@gnu.org>
            David S. Miller  <davem@@davemloft.net>

        * powerpc.cc: New file.
        * Makefile.am (TARGETSOURCES): Add powerpc.cc
        (ALL_TARGETOBJS): Add powerpc.$(OBJEXT)
        * configure.tgt: Add entries for powerpc-* and powerpc64-*.
        * Makefile.in: Rebuild.
@
text
@d88 1
a88 1
  targ_obj=ppc64
@


1.3
log
@	* configure.ac: If targ_extra_obj is set, link it in.
	* configure.tgt: Initialize all variables.
	(x86_64*): Set targ_extra_obj and targ_extra_size.
	* configure: Rebuild.
@
text
@d79 16
@


1.2
log
@toplevel/

	* configure.ac: Add sparc*-*-* to gold supported targets.
	* configure: Regenerate.

gold/

	* sparc.cc: New file.
	* Makefile.am (TARGETSOURCES): Add sparc.cc
	(ALL_TARGETOBJS): Add sparc.$(OBJEXT)
	* configure.tgt: Document targ_extra_size and
	targ_extra_big_endian.  Add entries for sparc-* and
	sparc64-*.
	* configure.ac: Handle targ_extra_size and
	targ_extra_big_endian.
	* Makefile.in: Rebuild.
	* configure: Likewise.
	* po/POTFILES.in: Likewise.
	* po/gold.pot: Likewise.
@
text
@d33 1
d42 6
d57 1
d60 1
@


1.1
log
@Support creating empty output when there are no input objects.
@
text
@d32 6
a37 4
# targ_obj         object file to include in the link, with no extension
# targ_machine     ELF machine code for this target
# targ_size        size of this target--32 or 64
# targ_big_endian  whether the target is big-endian--true or false
d54 16
@

