head	1.2;
access;
symbols
	sid-snapshot-20180601:1.2
	cgen-snapshot-20180601:1.2
	sid-snapshot-20180501:1.2
	cgen-snapshot-20180501:1.2
	sid-snapshot-20180401:1.2
	cgen-snapshot-20180401:1.2
	sid-snapshot-20180301:1.2
	cgen-snapshot-20180301:1.2
	sid-snapshot-20180201:1.2
	cgen-snapshot-20180201:1.2
	sid-snapshot-20180101:1.2
	cgen-snapshot-20180101:1.2
	sid-snapshot-20171201:1.2
	cgen-snapshot-20171201:1.2
	sid-snapshot-20171101:1.2
	cgen-snapshot-20171101:1.2
	sid-snapshot-20171001:1.2
	cgen-snapshot-20171001:1.2
	sid-snapshot-20170901:1.2
	cgen-snapshot-20170901:1.2
	sid-snapshot-20170801:1.2
	cgen-snapshot-20170801:1.2
	sid-snapshot-20170701:1.2
	cgen-snapshot-20170701:1.2
	sid-snapshot-20170601:1.2
	cgen-snapshot-20170601:1.2
	sid-snapshot-20170501:1.2
	cgen-snapshot-20170501:1.2
	sid-snapshot-20170401:1.2
	cgen-snapshot-20170401:1.2
	sid-snapshot-20170301:1.2
	cgen-snapshot-20170301:1.2
	sid-snapshot-20170201:1.2
	cgen-snapshot-20170201:1.2
	sid-snapshot-20170101:1.2
	cgen-snapshot-20170101:1.2
	sid-snapshot-20161201:1.2
	cgen-snapshot-20161201:1.2
	sid-snapshot-20161101:1.2
	cgen-snapshot-20161101:1.2
	sid-snapshot-20160901:1.2
	cgen-snapshot-20160901:1.2
	sid-snapshot-20160801:1.2
	cgen-snapshot-20160801:1.2
	sid-snapshot-20160701:1.2
	cgen-snapshot-20160701:1.2
	sid-snapshot-20160601:1.2
	cgen-snapshot-20160601:1.2
	sid-snapshot-20160501:1.2
	cgen-snapshot-20160501:1.2
	sid-snapshot-20160401:1.2
	cgen-snapshot-20160401:1.2
	sid-snapshot-20160301:1.2
	cgen-snapshot-20160301:1.2
	sid-snapshot-20160201:1.2
	cgen-snapshot-20160201:1.2
	sid-snapshot-20160101:1.2
	cgen-snapshot-20160101:1.2
	sid-snapshot-20151201:1.2
	cgen-snapshot-20151201:1.2
	sid-snapshot-20151101:1.2
	cgen-snapshot-20151101:1.2
	sid-snapshot-20151001:1.2
	cgen-snapshot-20151001:1.2
	sid-snapshot-20150901:1.2
	cgen-snapshot-20150901:1.2
	sid-snapshot-20150801:1.2
	cgen-snapshot-20150801:1.2
	sid-snapshot-20150701:1.2
	cgen-snapshot-20150701:1.2
	sid-snapshot-20150601:1.2
	cgen-snapshot-20150601:1.2
	sid-snapshot-20150501:1.2
	cgen-snapshot-20150501:1.2
	sid-snapshot-20150401:1.2
	cgen-snapshot-20150401:1.2
	sid-snapshot-20150301:1.2
	cgen-snapshot-20150301:1.2
	sid-snapshot-20150201:1.2
	cgen-snapshot-20150201:1.2
	sid-snapshot-20150101:1.2
	cgen-snapshot-20150101:1.2
	sid-snapshot-20141201:1.2
	cgen-snapshot-20141201:1.2
	sid-snapshot-20141101:1.2
	cgen-snapshot-20141101:1.2
	sid-snapshot-20141001:1.2
	cgen-snapshot-20141001:1.2
	sid-snapshot-20140901:1.2
	cgen-snapshot-20140901:1.2
	sid-snapshot-20140801:1.2
	cgen-snapshot-20140801:1.2
	sid-snapshot-20140701:1.2
	cgen-snapshot-20140701:1.2
	sid-snapshot-20140601:1.2
	cgen-snapshot-20140601:1.2
	sid-snapshot-20140501:1.2
	cgen-snapshot-20140501:1.2
	sid-snapshot-20140401:1.2
	cgen-snapshot-20140401:1.2
	sid-snapshot-20140301:1.2
	cgen-snapshot-20140301:1.2
	sid-snapshot-20140201:1.2
	cgen-snapshot-20140201:1.2
	sid-snapshot-20140101:1.2
	cgen-snapshot-20140101:1.2
	sid-snapshot-20131201:1.2
	cgen-snapshot-20131201:1.2
	sid-snapshot-20131101:1.2
	cgen-snapshot-20131101:1.2
	sid-snapshot-20131001:1.2
	cgen-snapshot-20131001:1.2
	binutils-2_24-branch:1.2.0.26
	binutils-2_24-branchpoint:1.2
	binutils-2_21_1:1.2
	sid-snapshot-20130901:1.2
	cgen-snapshot-20130901:1.2
	gdb_7_6_1-2013-08-30-release:1.2
	sid-snapshot-20130801:1.2
	cgen-snapshot-20130801:1.2
	sid-snapshot-20130701:1.2
	cgen-snapshot-20130701:1.2
	sid-snapshot-20130601:1.2
	cgen-snapshot-20130601:1.2
	sid-snapshot-20130501:1.2
	cgen-snapshot-20130501:1.2
	gdb_7_6-2013-04-26-release:1.2
	sid-snapshot-20130401:1.2
	cgen-snapshot-20130401:1.2
	binutils-2_23_2:1.2
	gdb_7_6-branch:1.2.0.24
	gdb_7_6-2013-03-12-branchpoint:1.2
	sid-snapshot-20130301:1.2
	cgen-snapshot-20130301:1.2
	sid-snapshot-20130201:1.2
	cgen-snapshot-20130201:1.2
	sid-snapshot-20130101:1.2
	cgen-snapshot-20130101:1.2
	sid-snapshot-20121201:1.2
	cgen-snapshot-20121201:1.2
	gdb_7_5_1-2012-11-29-release:1.2
	binutils-2_23_1:1.2
	sid-snapshot-20121101:1.2
	cgen-snapshot-20121101:1.2
	binutils-2_23:1.2
	sid-snapshot-20121001:1.2
	cgen-snapshot-20121001:1.2
	sid-snapshot-20120901:1.2
	cgen-snapshot-20120901:1.2
	gdb_7_5-2012-08-17-release:1.2
	sid-snapshot-20120801:1.2
	cgen-snapshot-20120801:1.2
	binutils-2_23-branch:1.2.0.22
	binutils-2_23-branchpoint:1.2
	gdb_7_5-branch:1.2.0.20
	gdb_7_5-2012-07-18-branchpoint:1.2
	sid-snapshot-20120701:1.2
	cgen-snapshot-20120701:1.2
	sid-snapshot-20120601:1.2
	cgen-snapshot-20120601:1.2
	sid-snapshot-20120501:1.2
	cgen-snapshot-20120501:1.2
	binutils-2_22_branch:1.2.0.18
	gdb_7_4_1-2012-04-26-release:1.2
	sid-snapshot-20120401:1.2
	cgen-snapshot-20120401:1.2
	sid-snapshot-20120301:1.2
	cgen-snapshot-20120301:1.2
	sid-snapshot-20120201:1.2
	cgen-snapshot-20120201:1.2
	gdb_7_4-2012-01-24-release:1.2
	sid-snapshot-20120101:1.2
	cgen-snapshot-20120101:1.2
	gdb_7_4-branch:1.2.0.16
	gdb_7_4-2011-12-13-branchpoint:1.2
	sid-snapshot-20111201:1.2
	cgen-snapshot-20111201:1.2
	binutils-2_22:1.2
	sid-snapshot-20111101:1.2
	cgen-snapshot-20111101:1.2
	sid-snapshot-20111001:1.2
	cgen-snapshot-20111001:1.2
	binutils-2_22-branch:1.2.0.14
	binutils-2_22-branchpoint:1.2
	gdb_7_3_1-2011-09-04-release:1.2
	sid-snapshot-20110901:1.2
	cgen-snapshot-20110901:1.2
	sid-snapshot-20110801:1.2
	cgen-snapshot-20110801:1.2
	gdb_7_3-2011-07-26-release:1.2
	sid-snapshot-20110701:1.2
	cgen-snapshot-20110701:1.2
	sid-snapshot-20110601:1.2
	cgen-snapshot-20110601:1.2
	sid-snapshot-20110501:1.2
	cgen-snapshot-20110501:1.2
	gdb_7_3-branch:1.2.0.12
	gdb_7_3-2011-04-01-branchpoint:1.2
	sid-snapshot-20110401:1.2
	cgen-snapshot-20110401:1.2
	sid-snapshot-20110301:1.2
	cgen-snapshot-20110301:1.2
	sid-snapshot-20110201:1.2
	cgen-snapshot-20110201:1.2
	sid-snapshot-20110101:1.2
	cgen-snapshot-20110101:1.2
	binutils-2_21:1.2
	sid-snapshot-20101201:1.2
	cgen-snapshot-20101201:1.2
	binutils-2_21-branch:1.2.0.10
	binutils-2_21-branchpoint:1.2
	sid-snapshot-20101101:1.2
	cgen-snapshot-20101101:1.2
	sid-snapshot-20101001:1.2
	cgen-snapshot-20101001:1.2
	binutils-2_20_1:1.2
	gdb_7_2-2010-09-02-release:1.2
	sid-snapshot-20100901:1.2
	cgen-snapshot-20100901:1.2
	sid-snapshot-20100801:1.2
	cgen-snapshot-20100801:1.2
	gdb_7_2-branch:1.2.0.8
	gdb_7_2-2010-07-07-branchpoint:1.2
	sid-snapshot-20100701:1.2
	cgen-snapshot-20100701:1.2
	sid-snapshot-20100601:1.2
	cgen-snapshot-20100601:1.2
	sid-snapshot-20100501:1.2
	cgen-snapshot-20100501:1.2
	sid-snapshot-20100401:1.2
	cgen-snapshot-20100401:1.2
	gdb_7_1-2010-03-18-release:1.2
	sid-snapshot-20100301:1.2
	cgen-snapshot-20100301:1.2
	gdb_7_1-branch:1.2.0.6
	gdb_7_1-2010-02-18-branchpoint:1.2
	sid-snapshot-20100201:1.2
	cgen-snapshot-20100201:1.2
	sid-snapshot-20100101:1.2
	cgen-snapshot-20100101:1.2
	gdb_7_0_1-2009-12-22-release:1.2
	sid-snapshot-20091201:1.2
	cgen-snapshot-20091201:1.2
	sid-snapshot-20091101:1.2
	cgen-snapshot-20091101:1.2
	binutils-2_20:1.2
	gdb_7_0-2009-10-06-release:1.2
	sid-snapshot-20091001:1.2
	cgen-snapshot-20091001:1.2
	gdb_7_0-branch:1.2.0.4
	gdb_7_0-2009-09-16-branchpoint:1.2
	binutils-2_20-branch:1.2.0.2
	binutils-2_20-branchpoint:1.2
	sid-snapshot-20090901:1.1
	cgen-snapshot-20090901:1.1
	sid-snapshot-20090801:1.1
	cgen-snapshot-20090801:1.1
	msnyder-checkpoint-072509-branch:1.1.0.8
	msnyder-checkpoint-072509-branchpoint:1.1
	sid-snapshot-20090701:1.1
	cgen-snapshot-20090701:1.1
	dje-cgen-play1-branch:1.1.0.6
	dje-cgen-play1-branchpoint:1.1
	cgen-1_1-branch:1.1.0.4
	cgen-1_1-branchpoint:1.1
	sid-snapshot-20090601:1.1
	cgen-snapshot-20090601:1.1
	sid-snapshot-20090501:1.1
	cgen-snapshot-20090501:1.1
	sid-snapshot-20090401:1.1
	cgen-snapshot-20090401:1.1
	sid-snapshot-20090301:1.1
	cgen-snapshot-20090301:1.1
	sid-snapshot-20090201:1.1
	cgen-snapshot-20090201:1.1
	sid-snapshot-20090101:1.1
	cgen-snapshot-20090101:1.1
	reverse-20081226-branch:1.1.0.2
	reverse-20081226-branchpoint:1.1
	binutils_latest_snapshot:1.2;
locks; strict;
comment	@# @;


1.2
date	2009.09.02.07.21.03;	author amodra;	state Exp;
branches;
next	1.1;

1.1
date	2008.12.23.19.10.19;	author nickc;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update copyright dates
@
text
@/* Lattice Mico32 opcode support.  -*- C -*-
   Copyright 2008, 2009  Free Software Foundation, Inc.
   Contributed by Jon Beniston <jon@@beniston.com>

   This file is part of the GNU Binutils.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
   MA 02110-1301, USA.  */

/* -- opc.h */

/* Allows reason codes to be output when assembler errors occur.  */
#define CGEN_VERBOSE_ASSEMBLER_ERRORS

#define CGEN_DIS_HASH_SIZE 64
#define CGEN_DIS_HASH(buf,value) ((value >> 26) & 0x3f) 

/* -- asm.c */

/* Handle signed/unsigned literal.  */

static const char *
parse_imm (CGEN_CPU_DESC cd,
	   const char **strp,
	   int opindex,
	   unsigned long *valuep)
{
  const char *errmsg;
  signed long value;

  errmsg = cgen_parse_signed_integer (cd, strp, opindex, & value);
  if (errmsg == NULL)
    {
      unsigned long x = value & 0xFFFF0000;
      if (x != 0 && x != 0xFFFF0000)
        errmsg = _("immediate value out of range");
      else
        *valuep = (value & 0xFFFF);
    }
  return errmsg;
}

/* Handle hi() */

static const char *
parse_hi16 (CGEN_CPU_DESC cd,
	    const char **strp,
	    int opindex,
	    unsigned long *valuep)
{
  if (strncasecmp (*strp, "hi(", 3) == 0)
    {
      enum cgen_parse_operand_result result_type;
      bfd_vma value;
      const char *errmsg;

      *strp += 3;
      errmsg = cgen_parse_address (cd, strp, opindex, BFD_RELOC_HI16,
                                   &result_type, &value);
      if (**strp != ')')
        return _("missing `)'");

      ++*strp;
      if (errmsg == NULL
          && result_type == CGEN_PARSE_OPERAND_RESULT_NUMBER)
        value = (value >> 16) & 0xffff;
      *valuep = value;

      return errmsg;
    }

  return parse_imm (cd, strp, opindex, valuep);
}

/* Handle lo() */

static const char *
parse_lo16 (CGEN_CPU_DESC cd,
	    const char **strp,
	    int opindex,
	    unsigned long *valuep)
{
  if (strncasecmp (*strp, "lo(", 3) == 0)
    {
      const char *errmsg;
      enum cgen_parse_operand_result result_type;
      bfd_vma value;

      *strp += 3;
      errmsg = cgen_parse_address (cd, strp, opindex, BFD_RELOC_LO16,
                                   &result_type, &value);
      if (**strp != ')')
        return _("missing `)'");
      ++*strp;
      if (errmsg == NULL
          && result_type == CGEN_PARSE_OPERAND_RESULT_NUMBER)
        value &= 0xffff;
      *valuep = value;
      return errmsg;
    }

  return parse_imm (cd, strp, opindex, valuep);
}

/* Handle gp() */

static const char *
parse_gp16 (CGEN_CPU_DESC cd,
	    const char **strp,
	    int opindex,
	    long *valuep)
{
  if (strncasecmp (*strp, "gp(", 3) == 0)
    {
      const char *errmsg;
      enum cgen_parse_operand_result result_type;
      bfd_vma value;

      *strp += 3;
      errmsg = cgen_parse_address (cd, strp, opindex, BFD_RELOC_GPREL16,
                                   & result_type, & value);
      if (**strp != ')')
        return _("missing `)'");
      ++*strp;
      if (errmsg == NULL
          && result_type == CGEN_PARSE_OPERAND_RESULT_NUMBER)
        value &= 0xffff;
      *valuep = value;
      return errmsg;
    }

  return _("expecting gp relative address: gp(symbol)");
}

/* Handle got() */

static const char *
parse_got16 (CGEN_CPU_DESC cd,
	     const char **strp,
	     int opindex,
	     long *valuep)
{
  if (strncasecmp (*strp, "got(", 4) == 0)
    {
      const char *errmsg;
      enum cgen_parse_operand_result result_type;
      bfd_vma value;

      *strp += 4;
      errmsg = cgen_parse_address (cd, strp, opindex, BFD_RELOC_LM32_16_GOT,
                                   & result_type, & value);
      if (**strp != ')')
        return _("missing `)'");
      ++*strp;
      if (errmsg == NULL
          && result_type == CGEN_PARSE_OPERAND_RESULT_NUMBER)
        value &= 0xffff;
      *valuep = value;
      return errmsg;
    }

  return _("expecting got relative address: got(symbol)");
}

/* Handle gotoffhi16() */

static const char *
parse_gotoff_hi16 (CGEN_CPU_DESC cd,
		   const char **strp,
		   int opindex,
		   long *valuep)
{
  if (strncasecmp (*strp, "gotoffhi16(", 11) == 0)
    {
      const char *errmsg;
      enum cgen_parse_operand_result result_type;
      bfd_vma value;

      *strp += 11;
      errmsg = cgen_parse_address (cd, strp, opindex, BFD_RELOC_LM32_GOTOFF_HI16,
                                   & result_type, & value);
      if (**strp != ')')
        return _("missing `)'");
      ++*strp;
      if (errmsg == NULL
          && result_type == CGEN_PARSE_OPERAND_RESULT_NUMBER)
        value &= 0xffff;
      *valuep = value;
      return errmsg;
    }

  return _("expecting got relative address: gotoffhi16(symbol)");
}

/* Handle gotofflo16() */

static const char *
parse_gotoff_lo16 (CGEN_CPU_DESC cd,
		   const char **strp,
		   int opindex,
		   long *valuep)
{
  if (strncasecmp (*strp, "gotofflo16(", 11) == 0)
    {
      const char *errmsg;
      enum cgen_parse_operand_result result_type;
      bfd_vma value;

      *strp += 11;
      errmsg = cgen_parse_address (cd, strp, opindex, BFD_RELOC_LM32_GOTOFF_LO16,
                                   &result_type, &value);
      if (**strp != ')')
        return _("missing `)'");
      ++*strp;
      if (errmsg == NULL
          && result_type == CGEN_PARSE_OPERAND_RESULT_NUMBER)
        value &= 0xffff;
      *valuep = value;
      return errmsg;
    }

  return _("expecting got relative address: gotofflo16(symbol)");
}
@


1.1
log
@Add LM32 port.
@
text
@d2 1
a2 1
   Copyright 2008   Free Software Foundation, Inc.
@

