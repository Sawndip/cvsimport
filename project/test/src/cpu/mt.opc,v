head	1.6;
access;
symbols
	sid-snapshot-20180601:1.6
	cgen-snapshot-20180601:1.6
	sid-snapshot-20180501:1.6
	cgen-snapshot-20180501:1.6
	sid-snapshot-20180401:1.6
	cgen-snapshot-20180401:1.6
	sid-snapshot-20180301:1.6
	cgen-snapshot-20180301:1.6
	sid-snapshot-20180201:1.6
	cgen-snapshot-20180201:1.6
	sid-snapshot-20180101:1.6
	cgen-snapshot-20180101:1.6
	sid-snapshot-20171201:1.6
	cgen-snapshot-20171201:1.6
	sid-snapshot-20171101:1.6
	cgen-snapshot-20171101:1.6
	sid-snapshot-20171001:1.6
	cgen-snapshot-20171001:1.6
	sid-snapshot-20170901:1.6
	cgen-snapshot-20170901:1.6
	sid-snapshot-20170801:1.6
	cgen-snapshot-20170801:1.6
	sid-snapshot-20170701:1.6
	cgen-snapshot-20170701:1.6
	sid-snapshot-20170601:1.6
	cgen-snapshot-20170601:1.6
	sid-snapshot-20170501:1.6
	cgen-snapshot-20170501:1.6
	sid-snapshot-20170401:1.6
	cgen-snapshot-20170401:1.6
	sid-snapshot-20170301:1.6
	cgen-snapshot-20170301:1.6
	sid-snapshot-20170201:1.6
	cgen-snapshot-20170201:1.6
	sid-snapshot-20170101:1.6
	cgen-snapshot-20170101:1.6
	sid-snapshot-20161201:1.6
	cgen-snapshot-20161201:1.6
	sid-snapshot-20161101:1.6
	cgen-snapshot-20161101:1.6
	sid-snapshot-20160901:1.6
	cgen-snapshot-20160901:1.6
	sid-snapshot-20160801:1.6
	cgen-snapshot-20160801:1.6
	sid-snapshot-20160701:1.6
	cgen-snapshot-20160701:1.6
	sid-snapshot-20160601:1.6
	cgen-snapshot-20160601:1.6
	sid-snapshot-20160501:1.6
	cgen-snapshot-20160501:1.6
	sid-snapshot-20160401:1.6
	cgen-snapshot-20160401:1.6
	sid-snapshot-20160301:1.6
	cgen-snapshot-20160301:1.6
	sid-snapshot-20160201:1.6
	cgen-snapshot-20160201:1.6
	sid-snapshot-20160101:1.6
	cgen-snapshot-20160101:1.6
	sid-snapshot-20151201:1.6
	cgen-snapshot-20151201:1.6
	sid-snapshot-20151101:1.6
	cgen-snapshot-20151101:1.6
	sid-snapshot-20151001:1.6
	cgen-snapshot-20151001:1.6
	sid-snapshot-20150901:1.6
	cgen-snapshot-20150901:1.6
	sid-snapshot-20150801:1.6
	cgen-snapshot-20150801:1.6
	sid-snapshot-20150701:1.6
	cgen-snapshot-20150701:1.6
	sid-snapshot-20150601:1.6
	cgen-snapshot-20150601:1.6
	sid-snapshot-20150501:1.6
	cgen-snapshot-20150501:1.6
	sid-snapshot-20150401:1.6
	cgen-snapshot-20150401:1.6
	sid-snapshot-20150301:1.6
	cgen-snapshot-20150301:1.6
	sid-snapshot-20150201:1.6
	cgen-snapshot-20150201:1.6
	sid-snapshot-20150101:1.6
	cgen-snapshot-20150101:1.6
	sid-snapshot-20141201:1.6
	cgen-snapshot-20141201:1.6
	sid-snapshot-20141101:1.6
	cgen-snapshot-20141101:1.6
	sid-snapshot-20141001:1.6
	cgen-snapshot-20141001:1.6
	sid-snapshot-20140901:1.6
	cgen-snapshot-20140901:1.6
	sid-snapshot-20140801:1.6
	cgen-snapshot-20140801:1.6
	sid-snapshot-20140701:1.6
	cgen-snapshot-20140701:1.6
	sid-snapshot-20140601:1.6
	cgen-snapshot-20140601:1.6
	sid-snapshot-20140501:1.6
	cgen-snapshot-20140501:1.6
	sid-snapshot-20140401:1.6
	cgen-snapshot-20140401:1.6
	sid-snapshot-20140301:1.6
	cgen-snapshot-20140301:1.6
	sid-snapshot-20140201:1.6
	cgen-snapshot-20140201:1.6
	sid-snapshot-20140101:1.6
	cgen-snapshot-20140101:1.6
	sid-snapshot-20131201:1.6
	cgen-snapshot-20131201:1.6
	sid-snapshot-20131101:1.6
	cgen-snapshot-20131101:1.6
	sid-snapshot-20131001:1.6
	cgen-snapshot-20131001:1.6
	binutils-2_24-branch:1.6.0.8
	binutils-2_24-branchpoint:1.6
	binutils-2_21_1:1.5
	sid-snapshot-20130901:1.6
	cgen-snapshot-20130901:1.6
	gdb_7_6_1-2013-08-30-release:1.6
	sid-snapshot-20130801:1.6
	cgen-snapshot-20130801:1.6
	sid-snapshot-20130701:1.6
	cgen-snapshot-20130701:1.6
	sid-snapshot-20130601:1.6
	cgen-snapshot-20130601:1.6
	sid-snapshot-20130501:1.6
	cgen-snapshot-20130501:1.6
	gdb_7_6-2013-04-26-release:1.6
	sid-snapshot-20130401:1.6
	cgen-snapshot-20130401:1.6
	binutils-2_23_2:1.6
	gdb_7_6-branch:1.6.0.6
	gdb_7_6-2013-03-12-branchpoint:1.6
	sid-snapshot-20130301:1.6
	cgen-snapshot-20130301:1.6
	sid-snapshot-20130201:1.6
	cgen-snapshot-20130201:1.6
	sid-snapshot-20130101:1.6
	cgen-snapshot-20130101:1.6
	sid-snapshot-20121201:1.6
	cgen-snapshot-20121201:1.6
	gdb_7_5_1-2012-11-29-release:1.6
	binutils-2_23_1:1.6
	sid-snapshot-20121101:1.6
	cgen-snapshot-20121101:1.6
	binutils-2_23:1.6
	sid-snapshot-20121001:1.6
	cgen-snapshot-20121001:1.6
	sid-snapshot-20120901:1.6
	cgen-snapshot-20120901:1.6
	gdb_7_5-2012-08-17-release:1.6
	sid-snapshot-20120801:1.6
	cgen-snapshot-20120801:1.6
	binutils-2_23-branch:1.6.0.4
	binutils-2_23-branchpoint:1.6
	gdb_7_5-branch:1.6.0.2
	gdb_7_5-2012-07-18-branchpoint:1.6
	sid-snapshot-20120701:1.6
	cgen-snapshot-20120701:1.6
	sid-snapshot-20120601:1.6
	cgen-snapshot-20120601:1.6
	sid-snapshot-20120501:1.6
	cgen-snapshot-20120501:1.6
	binutils-2_22_branch:1.5.0.18
	gdb_7_4_1-2012-04-26-release:1.5
	sid-snapshot-20120401:1.6
	cgen-snapshot-20120401:1.6
	sid-snapshot-20120301:1.6
	cgen-snapshot-20120301:1.6
	sid-snapshot-20120201:1.5
	cgen-snapshot-20120201:1.5
	gdb_7_4-2012-01-24-release:1.5
	sid-snapshot-20120101:1.5
	cgen-snapshot-20120101:1.5
	gdb_7_4-branch:1.5.0.16
	gdb_7_4-2011-12-13-branchpoint:1.5
	sid-snapshot-20111201:1.5
	cgen-snapshot-20111201:1.5
	binutils-2_22:1.5
	sid-snapshot-20111101:1.5
	cgen-snapshot-20111101:1.5
	sid-snapshot-20111001:1.5
	cgen-snapshot-20111001:1.5
	binutils-2_22-branch:1.5.0.14
	binutils-2_22-branchpoint:1.5
	gdb_7_3_1-2011-09-04-release:1.5
	sid-snapshot-20110901:1.5
	cgen-snapshot-20110901:1.5
	sid-snapshot-20110801:1.5
	cgen-snapshot-20110801:1.5
	gdb_7_3-2011-07-26-release:1.5
	sid-snapshot-20110701:1.5
	cgen-snapshot-20110701:1.5
	sid-snapshot-20110601:1.5
	cgen-snapshot-20110601:1.5
	sid-snapshot-20110501:1.5
	cgen-snapshot-20110501:1.5
	gdb_7_3-branch:1.5.0.12
	gdb_7_3-2011-04-01-branchpoint:1.5
	sid-snapshot-20110401:1.5
	cgen-snapshot-20110401:1.5
	sid-snapshot-20110301:1.5
	cgen-snapshot-20110301:1.5
	sid-snapshot-20110201:1.5
	cgen-snapshot-20110201:1.5
	sid-snapshot-20110101:1.5
	cgen-snapshot-20110101:1.5
	binutils-2_21:1.5
	sid-snapshot-20101201:1.5
	cgen-snapshot-20101201:1.5
	binutils-2_21-branch:1.5.0.10
	binutils-2_21-branchpoint:1.5
	sid-snapshot-20101101:1.5
	cgen-snapshot-20101101:1.5
	sid-snapshot-20101001:1.5
	cgen-snapshot-20101001:1.5
	binutils-2_20_1:1.5
	gdb_7_2-2010-09-02-release:1.5
	sid-snapshot-20100901:1.5
	cgen-snapshot-20100901:1.5
	sid-snapshot-20100801:1.5
	cgen-snapshot-20100801:1.5
	gdb_7_2-branch:1.5.0.8
	gdb_7_2-2010-07-07-branchpoint:1.5
	sid-snapshot-20100701:1.5
	cgen-snapshot-20100701:1.5
	sid-snapshot-20100601:1.5
	cgen-snapshot-20100601:1.5
	sid-snapshot-20100501:1.5
	cgen-snapshot-20100501:1.5
	sid-snapshot-20100401:1.5
	cgen-snapshot-20100401:1.5
	gdb_7_1-2010-03-18-release:1.5
	sid-snapshot-20100301:1.5
	cgen-snapshot-20100301:1.5
	gdb_7_1-branch:1.5.0.6
	gdb_7_1-2010-02-18-branchpoint:1.5
	sid-snapshot-20100201:1.5
	cgen-snapshot-20100201:1.5
	sid-snapshot-20100101:1.5
	cgen-snapshot-20100101:1.5
	gdb_7_0_1-2009-12-22-release:1.5
	sid-snapshot-20091201:1.5
	cgen-snapshot-20091201:1.5
	sid-snapshot-20091101:1.5
	cgen-snapshot-20091101:1.5
	binutils-2_20:1.5
	gdb_7_0-2009-10-06-release:1.5
	sid-snapshot-20091001:1.5
	cgen-snapshot-20091001:1.5
	gdb_7_0-branch:1.5.0.4
	gdb_7_0-2009-09-16-branchpoint:1.5
	arc-sim-20090309:1.4
	binutils-arc-20081103-branch:1.4.0.28
	binutils-arc-20081103-branchpoint:1.4
	binutils-2_20-branch:1.5.0.2
	binutils-2_20-branchpoint:1.5
	sid-snapshot-20090901:1.4
	cgen-snapshot-20090901:1.4
	sid-snapshot-20090801:1.4
	cgen-snapshot-20090801:1.4
	msnyder-checkpoint-072509-branch:1.4.0.26
	msnyder-checkpoint-072509-branchpoint:1.4
	sid-snapshot-20090701:1.4
	cgen-snapshot-20090701:1.4
	dje-cgen-play1-branch:1.4.0.24
	dje-cgen-play1-branchpoint:1.4
	cgen-1_1-branch:1.4.0.22
	cgen-1_1-branchpoint:1.4
	sid-snapshot-20090601:1.4
	cgen-snapshot-20090601:1.4
	sid-snapshot-20090501:1.4
	cgen-snapshot-20090501:1.4
	sid-snapshot-20090401:1.4
	cgen-snapshot-20090401:1.4
	arc-20081103-branch:1.4.0.20
	arc-20081103-branchpoint:1.4
	arc-insight_6_8-branch:1.4.0.18
	arc-insight_6_8-branchpoint:1.4
	insight_6_8-branch:1.4.0.16
	insight_6_8-branchpoint:1.4
	sid-snapshot-20090301:1.4
	cgen-snapshot-20090301:1.4
	binutils-2_19_1:1.4
	sid-snapshot-20090201:1.4
	cgen-snapshot-20090201:1.4
	sid-snapshot-20090101:1.4
	cgen-snapshot-20090101:1.4
	reverse-20081226-branch:1.4.0.14
	reverse-20081226-branchpoint:1.4
	sid-snapshot-20081201:1.4
	cgen-snapshot-20081201:1.4
	multiprocess-20081120-branch:1.4.0.12
	multiprocess-20081120-branchpoint:1.4
	sid-snapshot-20081101:1.4
	cgen-snapshot-20081101:1.4
	binutils-2_19:1.4
	sid-snapshot-20081001:1.4
	cgen-snapshot-20081001:1.4
	reverse-20080930-branch:1.4.0.10
	reverse-20080930-branchpoint:1.4
	binutils-2_19-branch:1.4.0.8
	binutils-2_19-branchpoint:1.4
	sid-snapshot-20080901:1.4
	cgen-snapshot-20080901:1.4
	sid-snapshot-20080801:1.4
	cgen-snapshot-20080801:1.4
	reverse-20080717-branch:1.4.0.6
	reverse-20080717-branchpoint:1.4
	sid-snapshot-20080701:1.4
	cgen-snapshot-20080701:1.4
	msnyder-reverse-20080609-branch:1.4.0.4
	msnyder-reverse-20080609-branchpoint:1.4
	drow-reverse-20070409-branch:1.2.0.24
	drow-reverse-20070409-branchpoint:1.2
	sid-snapshot-20080601:1.4
	cgen-snapshot-20080601:1.4
	sid-snapshot-20080501:1.4
	cgen-snapshot-20080501:1.4
	sid-snapshot-20080403:1.4
	sid-snapshot-20080401:1.4
	cgen-snapshot-20080401:1.4
	gdb_6_8-2008-03-27-release:1.4
	sid-snapshot-20080301:1.4
	cgen-snapshot-20080301:1.4
	gdb_6_8-branch:1.4.0.2
	gdb_6_8-2008-02-26-branchpoint:1.4
	sid-snapshot-20080201:1.4
	cgen-snapshot-20080201:1.4
	sid-snapshot-20080101:1.3
	cgen-snapshot-20080101:1.3
	sid-snapshot-20071201:1.3
	cgen-snapshot-20071201:1.3
	sid-snapshot-20071101:1.3
	cgen-snapshot-20071101:1.3
	gdb_6_7_1-2007-10-29-release:1.3
	gdb_6_7-2007-10-10-release:1.3
	sid-snapshot-20071001:1.3
	cgen-snapshot-20071001:1.3
	gdb_6_7-branch:1.3.0.4
	gdb_6_7-2007-09-07-branchpoint:1.3
	binutils-2_18:1.3
	binutils-2_18-branch:1.3.0.2
	binutils-2_18-branchpoint:1.3
	insight_6_6-20070208-release:1.2
	binutils-csl-coldfire-4_1-32:1.2
	binutils-csl-sourcerygxx-4_1-32:1.2
	gdb_6_6-2006-12-18-release:1.2
	binutils-csl-innovasic-fido-3_4_4-33:1.2
	binutils-csl-coldfire-4_1-30:1.2
	binutils-csl-sourcerygxx-4_1-30:1.2
	binutils-csl-coldfire-4_1-28:1.2
	binutils-csl-sourcerygxx-4_1-29:1.2
	binutils-csl-sourcerygxx-4_1-28:1.2
	gdb_6_6-branch:1.2.0.22
	gdb_6_6-2006-11-15-branchpoint:1.2
	binutils-csl-arm-2006q3-27:1.2
	binutils-csl-sourcerygxx-4_1-27:1.2
	binutils-csl-arm-2006q3-26:1.2
	binutils-csl-sourcerygxx-4_1-26:1.2
	binutils-csl-sourcerygxx-4_1-25:1.2
	binutils-csl-sourcerygxx-4_1-24:1.2
	binutils-csl-sourcerygxx-4_1-23:1.2
	insight_6_5-20061003-release:1.2
	gdb-csl-symbian-6_4_50_20060226-12:1.2
	binutils-csl-sourcerygxx-4_1-21:1.2
	binutils-csl-arm-2006q3-21:1.2
	binutils-csl-sourcerygxx-4_1-22:1.2
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.2
	binutils-csl-sourcerygxx-4_1-20:1.2
	binutils-csl-arm-2006q3-19:1.2
	binutils-csl-sourcerygxx-4_1-19:1.2
	binutils-csl-sourcerygxx-4_1-18:1.2
	binutils-csl-renesas-4_1-9:1.2
	nickrob-async-20060828-mergepoint:1.2
	gdb-csl-symbian-6_4_50_20060226-11:1.2
	binutils-csl-renesas-4_1-8:1.2
	binutils-csl-renesas-4_1-7:1.2
	binutils-csl-renesas-4_1-6:1.2
	gdb-csl-sourcerygxx-4_1-17:1.2
	binutils-csl-sourcerygxx-4_1-17:1.2
	gdb-csl-20060226-branch-local-2:1.2
	gdb-csl-sourcerygxx-4_1-14:1.2
	binutils-csl-sourcerygxx-4_1-14:1.2
	binutils-csl-sourcerygxx-4_1-15:1.2
	gdb-csl-sourcerygxx-4_1-13:1.2
	binutils-csl-sourcerygxx-4_1-13:1.2
	binutils-2_17:1.2
	gdb-csl-sourcerygxx-4_1-12:1.2
	binutils-csl-sourcerygxx-4_1-12:1.2
	gdb-csl-sourcerygxx-3_4_4-21:1.2
	binutils-csl-sourcerygxx-3_4_4-21:1.2
	gdb_6_5-20060621-release:1.2
	gdb-csl-sourcerygxx-4_1-9:1.2
	binutils-csl-sourcerygxx-4_1-9:1.2
	gdb-csl-sourcerygxx-4_1-8:1.2
	binutils-csl-sourcerygxx-4_1-8:1.2
	gdb-csl-sourcerygxx-4_1-7:1.2
	binutils-csl-sourcerygxx-4_1-7:1.2
	gdb-csl-arm-2006q1-6:1.2
	binutils-csl-arm-2006q1-6:1.2
	gdb-csl-sourcerygxx-4_1-6:1.2
	binutils-csl-sourcerygxx-4_1-6:1.2
	gdb-csl-symbian-6_4_50_20060226-10:1.2
	gdb-csl-symbian-6_4_50_20060226-9:1.2
	gdb-csl-symbian-6_4_50_20060226-8:1.2
	gdb-csl-coldfire-4_1-11:1.2
	binutils-csl-coldfire-4_1-11:1.2
	gdb-csl-sourcerygxx-3_4_4-19:1.2
	binutils-csl-sourcerygxx-3_4_4-19:1.2
	gdb-csl-coldfire-4_1-10:1.2
	gdb_6_5-branch:1.2.0.20
	gdb_6_5-2006-05-14-branchpoint:1.2
	binutils-csl-coldfire-4_1-10:1.2
	gdb-csl-sourcerygxx-4_1-5:1.2
	binutils-csl-sourcerygxx-4_1-5:1.2
	nickrob-async-20060513-branch:1.2.0.18
	nickrob-async-20060513-branchpoint:1.2
	gdb-csl-sourcerygxx-4_1-4:1.2
	binutils-csl-sourcerygxx-4_1-4:1.2
	msnyder-reverse-20060502-branch:1.2.0.16
	msnyder-reverse-20060502-branchpoint:1.2
	gdb-csl-morpho-4_1-4:1.2
	binutils-csl-morpho-4_1-4:1.2
	gdb-csl-sourcerygxx-3_4_4-17:1.2
	binutils-csl-sourcerygxx-3_4_4-17:1.2
	readline_5_1-import-branch:1.2.0.14
	readline_5_1-import-branchpoint:1.2
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.2
	binutils-2_17-branch:1.2.0.12
	binutils-2_17-branchpoint:1.2
	gdb-csl-symbian-20060226-branch:1.2.0.10
	gdb-csl-symbian-20060226-branchpoint:1.2
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.2
	msnyder-reverse-20060331-branch:1.2.0.8
	msnyder-reverse-20060331-branchpoint:1.2
	binutils-csl-2_17-branch:1.2.0.6
	binutils-csl-2_17-branchpoint:1.2
	gdb-csl-available-20060303-branch:1.2.0.4
	gdb-csl-available-20060303-branchpoint:1.2
	gdb-csl-20060226-branch:1.2.0.2
	gdb-csl-20060226-branchpoint:1.2
	binutils_latest_snapshot:1.6;
locks; strict;
comment	@# @;


1.6
date	2012.02.27.06.57.57;	author amodra;	state Exp;
branches;
next	1.5;

1.5
date	2009.09.02.07.21.03;	author amodra;	state Exp;
branches;
next	1.4;

1.4
date	2008.01.29.03.50.23;	author amodra;	state Exp;
branches;
next	1.3;

1.3
date	2007.07.05.09.49.03;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	2005.12.16.10.23.07;	author nathan;	state Exp;
branches;
next	1.1;

1.1
date	2005.12.12.11.16.40;	author nathan;	state Exp;
branches;
next	;


desc
@@


1.6
log
@cpu/
	* mt.opc (print_dollarhex): Trim values to 32 bits.
opcodes/
	* mt-dis.c: Regenerate.
@
text
@/* Morpho Technologies mRISC opcode support, for GNU Binutils.  -*- C -*-
   Copyright 2001, 2007, 2008, 2009, 2012 Free Software Foundation, Inc.

   Contributed by Red Hat Inc; developed under contract from
   Morpho Technologies.

   This file is part of the GNU Binutils.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
   MA 02110-1301, USA.  */


/* Each section is delimited with start and end markers.

   <arch>-opc.h additions use: "-- opc.h"
   <arch>-opc.c additions use: "-- opc.c"
   <arch>-asm.c additions use: "-- asm.c"
   <arch>-dis.c additions use: "-- dis.c"
   <arch>-ibd.h additions use: "-- ibd.h"  */

/* -- opc.h */

/* Check applicability of instructions against machines.  */
#define CGEN_VALIDATE_INSN_SUPPORTED

/* Allows reason codes to be output when assembler errors occur.  */
#define CGEN_VERBOSE_ASSEMBLER_ERRORS

/* Override disassembly hashing - there are variable bits in the top
   byte of these instructions.  */
#define CGEN_DIS_HASH_SIZE 8
#define CGEN_DIS_HASH(buf, value) (((* (unsigned char *) (buf)) >> 5) % CGEN_DIS_HASH_SIZE)

#define CGEN_ASM_HASH_SIZE 127
#define CGEN_ASM_HASH(insn) mt_asm_hash (insn)

extern unsigned int mt_asm_hash (const char *);

extern int mt_cgen_insn_supported (CGEN_CPU_DESC, const CGEN_INSN *);


/* -- opc.c */
#include "safe-ctype.h"

/* Special check to ensure that instruction exists for given machine.  */

int
mt_cgen_insn_supported (CGEN_CPU_DESC cd, const CGEN_INSN *insn)
{
  int machs = CGEN_INSN_ATTR_VALUE (insn, CGEN_INSN_MACH);

  /* No mach attribute?  Assume it's supported for all machs.  */
  if (machs == 0)
    return 1;
  
  return ((machs & cd->machs) != 0);
}

/* A better hash function for instruction mnemonics.  */

unsigned int
mt_asm_hash (const char* insn)
{
  unsigned int hash;
  const char* m = insn;

  for (hash = 0; *m && ! ISSPACE (*m); m++)
    hash = (hash * 23) ^ (0x1F & TOLOWER (*m));

  /* printf ("%s %d\n", insn, (hash % CGEN_ASM_HASH_SIZE)); */

  return hash % CGEN_ASM_HASH_SIZE;
}


/* -- asm.c */
/* Range checking for signed numbers.  Returns 0 if acceptable
   and 1 if the value is out of bounds for a signed quantity.  */

static int 
signed_out_of_bounds (long val)
{
  if ((val < -32768) || (val > 32767))
    return 1;
  return 0;
}

static const char *
parse_loopsize (CGEN_CPU_DESC cd,
		const char **strp,
		int opindex,
		void *arg)
{
  signed long * valuep = (signed long *) arg;
  const char *errmsg;
  bfd_reloc_code_real_type code = BFD_RELOC_NONE;
  enum cgen_parse_operand_result result_type;
  bfd_vma value;

  /* Is it a control transfer instructions?  */ 
  if (opindex == (CGEN_OPERAND_TYPE) MT_OPERAND_LOOPSIZE)
    {
      code = BFD_RELOC_MT_PCINSN8;
      errmsg = cgen_parse_address (cd, strp, opindex, code,
                                   & result_type, & value);
      *valuep = value;
      return errmsg;
    }

  abort ();
}

static const char *
parse_imm16 (CGEN_CPU_DESC cd,
	     const char **strp,
	     int opindex,
	     void *arg)
{
  signed long * valuep = (signed long *) arg;
  const char *errmsg;
  enum cgen_parse_operand_result result_type;
  bfd_reloc_code_real_type code = BFD_RELOC_NONE;
  bfd_vma value;

  /* Is it a control transfer instructions?  */ 
  if (opindex == (CGEN_OPERAND_TYPE) MT_OPERAND_IMM16O)
    {
      code = BFD_RELOC_16_PCREL;
      errmsg = cgen_parse_address (cd, strp, opindex, code,
                                   & result_type, & value);
      if (errmsg == NULL)
	{
	  if (signed_out_of_bounds (value))
	    errmsg = _("Operand out of range. Must be between -32768 and 32767.");
	}
      *valuep = value;
      return errmsg;
    }

  /* If it's not a control transfer instruction, then
     we have to check for %OP relocating operators.  */
  if (opindex == (CGEN_OPERAND_TYPE) MT_OPERAND_IMM16L)
    ;
  else if (strncmp (*strp, "%hi16", 5) == 0)
    {
      *strp += 5;
      code = BFD_RELOC_HI16;
    }
  else if (strncmp (*strp, "%lo16", 5) == 0)
    {
      *strp += 5;
      code = BFD_RELOC_LO16;
    }

  /* If we found a %OP relocating operator, then parse it as an address.
     If not, we need to parse it as an integer, either signed or unsigned
     depending on which operand type we have.  */
  if (code != BFD_RELOC_NONE)
    {
       /* %OP relocating operator found.  */
       errmsg = cgen_parse_address (cd, strp, opindex, code,
                                   & result_type, & value);
       if (errmsg == NULL)
	 {
           switch (result_type)
	     {
	     case (CGEN_PARSE_OPERAND_RESULT_NUMBER):
	       if (code == BFD_RELOC_HI16)
		 value = (value >> 16) & 0xFFFF;
	       else if (code == BFD_RELOC_LO16)
		 value = value  & 0xFFFF;
	       else 
		 errmsg = _("Biiiig Trouble in parse_imm16!");
	       break;

	     case (CGEN_PARSE_OPERAND_RESULT_QUEUED):
	       /* No special processing for this case.  */
	       break;

	     default:
	       errmsg = _("The percent-operator's operand is not a symbol");
	       break;
             }
	 }
       *valuep = value;
    }
  else
    {
      /* Parse hex values like 0xffff as unsigned, and sign extend
	 them manually.  */
      int parse_signed = (opindex == (CGEN_OPERAND_TYPE)MT_OPERAND_IMM16);

      if ((*strp)[0] == '0'
	  && ((*strp)[1] == 'x' || (*strp)[1] == 'X'))
	parse_signed = 0;

      /* No relocating operator.  Parse as an number.  */
      if (parse_signed)
	{
          /* Parse as as signed integer.  */
 
          errmsg = cgen_parse_signed_integer (cd, strp, opindex, valuep);

          if (errmsg == NULL) 
	    {
#if 0
	      /* Manual range checking is needed for the signed case.  */
	      if (*valuep & 0x8000)
                value = 0xffff0000 | *valuep;
	      else 
                value = *valuep;

	      if (signed_out_of_bounds (value))
	        errmsg = _("Operand out of range. Must be between -32768 and 32767.");
	      /* Truncate to 16 bits. This is necessary
		 because cgen will have sign extended *valuep.  */
	      *valuep &= 0xFFFF; 
#endif
	    }
	}
      else  
	{
          /* MT_OPERAND_IMM16Z.  Parse as an unsigned integer.  */
          errmsg = cgen_parse_unsigned_integer (cd, strp, opindex, (unsigned long *) valuep);

	  if (opindex == (CGEN_OPERAND_TYPE) MT_OPERAND_IMM16
	      && *valuep >= 0x8000
	      && *valuep <= 0xffff)
	    *valuep -= 0x10000;
	}
    }

  return errmsg;
}


static const char *
parse_dup (CGEN_CPU_DESC cd,
	   const char **strp,
	   int opindex,
	   unsigned long *valuep)
{
  const char *errmsg = NULL;

  if (strncmp (*strp, "dup", 3) == 0 || strncmp (*strp, "DUP", 3) == 0)
    {
      *strp += 3;
      *valuep = 1;
    }
  else if (strncmp (*strp, "xx", 2) == 0 || strncmp (*strp, "XX", 2) == 0)
    {
      *strp += 2;
      *valuep = 0;
    }
  else
    errmsg = cgen_parse_unsigned_integer (cd, strp, opindex, valuep);

  return errmsg;
}


static const char *
parse_ball (CGEN_CPU_DESC cd,
	    const char **strp,
	    int opindex,
	    unsigned long *valuep)
{
  const char *errmsg = NULL;

  if (strncmp (*strp, "all", 3) == 0 || strncmp (*strp, "ALL", 3) == 0)
    {
      *strp += 3;
      *valuep = 1;
    }
  else if (strncmp (*strp, "one", 3) == 0 || strncmp (*strp, "ONE", 3) == 0)
    {
      *strp += 3;
      *valuep = 0;
    }
  else
    errmsg = cgen_parse_unsigned_integer (cd, strp, opindex, valuep);

  return errmsg;
}

static const char *
parse_xmode (CGEN_CPU_DESC cd,
	     const char **strp,
	     int opindex,
	     unsigned long *valuep)
{
  const char *errmsg = NULL;

  if (strncmp (*strp, "pm", 2) == 0 || strncmp (*strp, "PM", 2) == 0)
    {
      *strp += 2;
      *valuep = 1;
    }
  else if (strncmp (*strp, "xm", 2) == 0 || strncmp (*strp, "XM", 2) == 0)
    {
      *strp += 2;
      *valuep = 0;
    }
  else
    errmsg = cgen_parse_unsigned_integer (cd, strp, opindex, valuep);

  return errmsg;
}

static const char *
parse_rc (CGEN_CPU_DESC cd,
	  const char **strp,
	  int opindex,
	  unsigned long *valuep)
{
  const char *errmsg = NULL;

  if (strncmp (*strp, "r", 1) == 0 || strncmp (*strp, "R", 1) == 0)
    {
      *strp += 1;
      *valuep = 1;
    }
  else if (strncmp (*strp, "c", 1) == 0 || strncmp (*strp, "C", 1) == 0)
    {
      *strp += 1;
      *valuep = 0;
    }
  else
    errmsg = cgen_parse_unsigned_integer (cd, strp, opindex, valuep);

  return errmsg;
}

static const char *
parse_cbrb (CGEN_CPU_DESC cd,
	    const char **strp,
	    int opindex,
	    unsigned long *valuep)
{
  const char *errmsg = NULL;

  if (strncmp (*strp, "rb", 2) == 0 || strncmp (*strp, "RB", 2) == 0)
    {
      *strp += 2;
      *valuep = 1;
    }
  else if (strncmp (*strp, "cb", 2) == 0 || strncmp (*strp, "CB", 2) == 0)
    {
      *strp += 2;
      *valuep = 0;
    }
  else
    errmsg = cgen_parse_unsigned_integer (cd, strp, opindex, valuep);

  return errmsg;
}

static const char *
parse_rbbc (CGEN_CPU_DESC cd,
	    const char **strp,
	    int opindex,
	    unsigned long *valuep)
{
  const char *errmsg = NULL;

  if (strncmp (*strp, "rt", 2) == 0 || strncmp (*strp, "RT", 2) == 0)
    {
      *strp += 2;
      *valuep = 0;
    }
  else if (strncmp (*strp, "br1", 3) == 0 || strncmp (*strp, "BR1", 3) == 0)
    {
      *strp += 3;
      *valuep = 1;
    }
  else if (strncmp (*strp, "br2", 3) == 0 || strncmp (*strp, "BR2", 3) == 0)
    {
      *strp += 3;
      *valuep = 2;
    }
  else if (strncmp (*strp, "cs", 2) == 0 || strncmp (*strp, "CS", 2) == 0)
    {
      *strp += 2;
      *valuep = 3;
    }
  else
    errmsg = cgen_parse_unsigned_integer (cd, strp, opindex, valuep);

  return errmsg;
}

static const char *
parse_type (CGEN_CPU_DESC cd,
	    const char **strp,
	    int opindex,
	    unsigned long *valuep)
{
  const char *errmsg = NULL;

  if (strncmp (*strp, "odd", 3) == 0 || strncmp (*strp, "ODD", 3) == 0)
    {
      *strp += 3;
      *valuep = 0;
    }
  else if (strncmp (*strp, "even", 4) == 0 || strncmp (*strp, "EVEN", 4) == 0)
    {
      *strp += 4;
      *valuep = 1;
    }
  else if (strncmp (*strp, "oe", 2) == 0 || strncmp (*strp, "OE", 2) == 0)
    {
      *strp += 2;
      *valuep = 2;
    }
  else
    errmsg = cgen_parse_unsigned_integer (cd, strp, opindex, valuep);

 if ((errmsg == NULL) && (*valuep == 3))
    errmsg = _("invalid operand.  type may have values 0,1,2 only.");

  return errmsg;
}

/* -- dis.c */
static void print_dollarhex (CGEN_CPU_DESC, PTR, long, unsigned, bfd_vma, int);
static void print_pcrel (CGEN_CPU_DESC, PTR, long, unsigned, bfd_vma, int);

static void
print_dollarhex (CGEN_CPU_DESC cd ATTRIBUTE_UNUSED,
		 void * dis_info,
		 long value,
		 unsigned int attrs ATTRIBUTE_UNUSED,
		 bfd_vma pc ATTRIBUTE_UNUSED,
		 int length ATTRIBUTE_UNUSED)
{
  disassemble_info *info = (disassemble_info *) dis_info;

  info->fprintf_func (info->stream, "$%lx", value & 0xffffffff);

  if (0)
    print_normal (cd, dis_info, value, attrs, pc, length);
}

static void
print_pcrel (CGEN_CPU_DESC cd ATTRIBUTE_UNUSED,
	     void * dis_info,
	     long value,
	     unsigned int attrs ATTRIBUTE_UNUSED,
	     bfd_vma pc ATTRIBUTE_UNUSED,
	     int length ATTRIBUTE_UNUSED)
{
  print_address (cd, dis_info, value + pc, attrs, pc, length);
}

/* -- */





@


1.5
log
@update copyright dates
@
text
@d2 1
a2 1
   Copyright 2001, 2007, 2008, 2009 Free Software Foundation, Inc.
d450 1
a450 1
  info->fprintf_func (info->stream, "$%lx", value);
@


1.4
log
@	* mt.opc (parse_imm16): Apply 2007-09-26 opcodes/mt-asm.c change
	to source.
@
text
@d2 1
a2 1
   Copyright 2001, 2007, 2008 Free Software Foundation, Inc.
@


1.3
log
@Change source files over to GPLv3.
@
text
@d2 1
a2 1
   Copyright 2001, 2007 Free Software Foundation, Inc.
d193 1
a193 1
	       errmsg = _("%operator operand is not a symbol");
@


1.2
log
@	Second part of ms1 to mt renaming.
	* bfd/archures.c (bfd_arch_mt): Renamed.
	(bfd_mt_arch): Renamed.
	(bfd_archures_list): Adjusted.
	* bfd/bfd-in2.h: Rebuilt.
	* bfd/config.bfd (mt): Remove special case targ_archs.
	(mt-*-elf): Rename bfd_elf32_mt_vec.
	* bfd/configure: Rebuilt.
	* bfd/configure.in (bfd_elf32_mt_vec): Renamed.
	(selarchs) Remove mt special case.
	* bfd/cpu-mt.c (arch_info_struct): Adjust.
	(bfd_mt_arch): Renamed, adjust.
	* bfd/elf32-mt.c (mt_reloc_type_lookup, mt_info_to_howto_rela,
	mt_elf_relocate_hi16, mt_final_link_relocate, mt_relocate_section,
	mt_elf_howto_table): Renamed, adjusted.
	(mt_elf_gc_mark_hook, mt_elf_gc_sweep_hook, mt_elf_check_relocs,
	elf32_mt_machine, mt_elf_object_p, mt_elf_set_private_flags,
	mt_elf_copy_private_bfd_data, mt_elf_merge_private_bfd_data,
	mt_elf_print_private_bfd_data): Renamed, adjusted.
	(TARGET_BIG_SYM, TARGET_BIG_NAME, ELF_ARCH, ELF_MACHINE_CODE,
	ELF_MAXPAGESIZE, elf_info_to_howto, elf_backend_relocate_section,
	bfd_elf32_bfd_reloc_type_lookup, elf_backend_gc_mark_hook,
	elf_backend_gc_sweep_hook, elf_backend_check_relocs,
	eld_backend_object_p, bfd_elf32_bfd_set_private_flags,
	bfd_elf32_bfd_copy_private_bfd_data,
	bfd_elf32_bfd_merge_private_bfd_data,
	bfd_elf32_bfd_print_private_bfd_data): Adjusted.
	* bfd/libbfd.h: Regenerated.
	* bfd/reloc.c (BFD_RELOC_MT_PC16, BFD_RELOC_MT_HI16,
	BFD_RELOC_MT_LO16, BFD_RELOC_MT_GNU_VTINHERIT,
	BFD_RELOC_MT_GNU_VTENTRY, BFD_RELOC_MT_PCINSN8): Renamed.
	* bfd/targets.c (bfd_elf32_mt_vec): Renamed.
	(_bfd_target_vector): Adjusted.
	* binutils/readelf.c (guess_is_rela): Use EM_MT.
	(dump_relocations, get_machine_name): Adjust.

	* cpu/mt.cpu (define-arch, define-isa): Set name to mt.
	(define-mach): Adjust.
	* cpu/mt.opc (CGEN_ASM_HASH): Update.
	(mt_asm_hash, mt_cgen_insn_supported): Renamed.
	(parse_loopsize, parse_imm16): Adjust.

	* gas/configure: Rebuilt.
	* gas/configure.in (mt): Remove special case.
	* gas/config/tc-mt.c (opcodes/mt-desc.h, opcodes/mt-opc.h): Change
	#includes.
	(mt_insn, mt_mach, mt_mach_bitmask, mt_flags, mt_architectures):
	Rename, adjust.
	(md_parse_option, md_show_usage, md_begin, md_assemble,
	md_cgen_lookup_reloc, md_atof): Adjust.
	(mt_force_relocation, mt_apply_fix, mt_fix_adjustable): Rename, adjust.
	* gas/config/tc-mt.h (TC_MT): Rename.
	(LISTING_HEADER, TARGET_ARCH, TARGET_FORMAT): Adjust.
	(md_apply_fix): Adjust.
	(mt_apply_fix, mt_fix_adjustable, mt_force_relocation): Rename.
	(TC_FORCE_RELOCATION, tc_fix_adjustable): Adjust.

	* gdb/mt-tdep.c (mt_arch_constants, mt_gdb_regnums): Rename, adjust.
	(mt_register_name, mt_register_type, mt_register_reggroup_p,
	mt_return_value, mt_skip_prologue, mt_breapoint_from_pc,
	mt_pseudo_register_read, mt_pseudo_register_write, mt_frame_align,
	mt_registers_info, mt_push_dummy_call, mt_unwind_cache,
	mt_frame_unwind_cache, mt_unwind_pc, mt_unwind_dummy_id,
	mt_frame_this_id, mt_frame_prev_register, mt_frame_base_address,
	mt_frame_unwind, mt_frame_sniffer, mt_frame_base, mt_gdbarch_init,
	_initialize_mt_tdep): Rename & adjust.

	* include/dis-asm.h (print_insn_mt): Renamed.

	* include/elf/common.h (EM_MT): Renamed.
	* include/elf/mt.h: Rename relocs, cpu & other defines.

	* ld/emulparams/elf32mt.sh (ARCH, OUTPUT_FORMAT): Adjust.

	* opcodes/Makefile.am (HFILES, CFILES, ALL_MACHINES): Adjust.
	(stamp-mt): Adjust rule.
	(mt-asm.lo, mt-desc.lo, mt-dis.lo, mt-ibld.lo, mt-opc.lo): Rename &
	adjust.
	* opcodes/Makefile.in: Rebuilt.
	* opcodes/configure: Rebuilt.
	* opcodes/configure.in (bfd_mt_arch): Rename & adjust.
	* opcodes/disassemble.c (ARCH_mt): Renamed.
	(disassembler): Adjust.
	* opcodes/mt-asm.c: Renamed, rebuilt.
	* opcodes/mt-desc.c: Renamed, rebuilt.
	* opcodes/mt-desc.h: Renamed, rebuilt.
	* opcodes/mt-dis.c: Renamed, rebuilt.
	* opcodes/mt-ibld.c: Renamed, rebuilt.
	* opcodes/mt-opc.c: Renamed, rebuilt.
	* opcodes/mt-opc.h: Renamed, rebuilt.

	* sid/Makefile.in: Rebuilt.
	* sid/aclocal.m4: Rebuilt.
	* sid/configure: Rebuilt.
	* sid/sid.spec: Adjust.
	* sid/bsp/Makefile.am: Adjust.
	* sid/bsp/Makefile.in: Rebuilt.
	* sid/bsp/aclocal.m4: Rebuilt.
	* sid/bsp/configrun-sid.in: Adjust.
	* sid/bsp/pregen/Makefile.in: Rebuilt.
	* sid/bsp/pregen/mt-gdb.conf: Renamed & rebuilt.
	* sid/bsp/pregen/mt-gloss.conf: Renamed & rebuilt.
	* sid/bsp/pregen/pregen-configs.in: Adjust.
	* sid/component/aclocal.m4: Rebuilt.
	* sid/component/configure: Rebuilt.
	* sid/component/tconfig.in: Adjust.
	* sid/component/bochs/aclocal.m4: Rebuilt.
	* sid/component/cache/Makefile.in: Rebuilt.
	* sid/component/cgen-cpu/Makefile.in: Rebuilt.
	* sid/component/cgen-cpu/aclocal.m4: Rebuilt.
	* sid/component/cgen-cpu/compCGEN.cxx: Adjust.
	* sid/component/cgen-cpu/configure: Rebuilt.
	* sid/component/cgen-cpu/configure.in: Rebult.
	* sid/component/cgen-cpu/mt/Makefile.am: Adjust.
	* sid/component/cgen-cpu/mt/Makefile.in: Rebuilt.
	* sid/component/cgen-cpu/mt/hw-cpu-mt.txt: Adjust.
	* sid/component/cgen-cpu/mt/mt-cpu.h: Rebuilt.
	* sid/component/cgen-cpu/mt/mt-decode.cxx: Rebuilt.
	* sid/component/cgen-cpu/mt/mt-decode.h: Rebuilt.
	* sid/component/cgen-cpu/mt/mt-defs.h: Rebuilt.
	* sid/component/cgen-cpu/mt/mt-desc.h: Rebuilt.
	* sid/component/cgen-cpu/mt/mt-sem.cxx: Rebuilt.
	* sid/component/cgen-cpu/mt/mt-write.cxx: Rebuilt.
	* sid/component/cgen-cpu/mt/mt.cxx: Adjust.
	* sid/component/cgen-cpu/mt/mt.h: Adjust.
	* sid/component/consoles/Makefile.in: Rebuilt.
	* sid/component/families/aclocal.m4: Rebuilt.
	* sid/component/families/configure: Rebuilt.
	* sid/component/gdb/Makefile.in: Rebuilt.
	* sid/component/gloss/Makefile.in: Rebuilt.
	* sid/component/glue/Makefile.in: Rebuilt.
	* sid/component/ide/Makefile.in: Rebuilt.
	* sid/component/interrupt/Makefile.in: Rebuilt.
	* sid/component/lcd/Makefile.in: Rebuilt.
	* sid/component/lcd/testsuite/Makefile.in: Rebuilt.
	* sid/component/loader/Makefile.am: Rebuilt.
	* sid/component/loader/Makefile.in: Rebuilt.
	* sid/component/mapper/Makefile.in: Rebuilt.
	* sid/component/mapper/testsuite/Makefile.in: Rebuilt.
	* sid/component/memory/Makefile.in: Rebuilt.
	* sid/component/mmu/Makefile.in: Rebuilt.
	* sid/component/parport/Makefile.in: Rebuilt.
	* sid/component/profiling/Makefile.in: Rebuilt.
	* sid/component/rtc/Makefile.in: Rebuilt.
	* sid/component/sched/Makefile.in: Rebuilt.
	* sid/component/testsuite/Makefile.in: Rebuilt.
	* sid/component/timers/aclocal.m4: Rebuilt.
	* sid/component/timers/configure: Rebuilt.
	* sid/component/uart/Makefile.in: Rebuilt.
	* sid/component/uart/testsuite/Makefile.in: Rebuilt.
	* sid/config/config.sub: Adjust.
	* sid/config/info.tcl.in: Adjust.
	* sid/config/sidtargets.m4: Adjust.
	* sid/doc/Makefile.in: Rebuilt.
	* sid/main/dynamic/Makefile.am: Rebuilt.
	* sid/main/dynamic/Makefile.in: Rebuilt.
	* sid/main/dynamic/aclocal.m4: Rebuilt.
	* sid/main/dynamic/configure: Rebuilt.
@
text
@d2 1
a2 1
   Copyright 2001 Free Software Foundation, Inc.
d11 1
a11 1
   the Free Software Foundation; either version 2 of the License, or
d21 2
a22 1
   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.
a23 1
*/
d25 1
a25 2
/*
   Each section is delimited with start and end markers.
d31 1
a31 2
   <arch>-ibd.h additions use: "-- ibd.h"
*/
@


1.1
log
@Rename ms1 files to mt files (part 1 -- renames only)
@
text
@d49 1
a49 1
#define CGEN_ASM_HASH(insn) ms1_asm_hash (insn)
d51 1
a51 1
extern unsigned int ms1_asm_hash (const char *);
d53 1
a53 1
extern int ms1_cgen_insn_supported (CGEN_CPU_DESC, const CGEN_INSN *);
d62 1
a62 2
ms1_cgen_insn_supported (CGEN_CPU_DESC cd,
			 const CGEN_INSN *insn)
d76 1
a76 1
ms1_asm_hash (const char* insn)
d115 1
a115 1
  if (opindex == (CGEN_OPERAND_TYPE) MS1_OPERAND_LOOPSIZE)
d117 1
a117 1
      code = BFD_RELOC_MS1_PCINSN8;
d140 1
a140 1
  if (opindex == (CGEN_OPERAND_TYPE) MS1_OPERAND_IMM16O)
d156 1
a156 1
  if (opindex == (CGEN_OPERAND_TYPE) MS1_OPERAND_IMM16L)
d205 1
a205 1
      int parse_signed = (opindex == (CGEN_OPERAND_TYPE)MS1_OPERAND_IMM16);
d237 1
a237 1
          /* MS1_OPERAND_IMM16Z.  Parse as an unsigned integer.  */
d240 1
a240 1
	  if (opindex == (CGEN_OPERAND_TYPE) MS1_OPERAND_IMM16
@

