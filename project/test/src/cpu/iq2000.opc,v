head	1.9;
access;
symbols
	sid-snapshot-20180601:1.9
	cgen-snapshot-20180601:1.9
	sid-snapshot-20180501:1.9
	cgen-snapshot-20180501:1.9
	sid-snapshot-20180401:1.9
	cgen-snapshot-20180401:1.9
	sid-snapshot-20180301:1.9
	cgen-snapshot-20180301:1.9
	sid-snapshot-20180201:1.9
	cgen-snapshot-20180201:1.9
	sid-snapshot-20180101:1.9
	cgen-snapshot-20180101:1.9
	sid-snapshot-20171201:1.9
	cgen-snapshot-20171201:1.9
	sid-snapshot-20171101:1.9
	cgen-snapshot-20171101:1.9
	sid-snapshot-20171001:1.9
	cgen-snapshot-20171001:1.9
	sid-snapshot-20170901:1.9
	cgen-snapshot-20170901:1.9
	sid-snapshot-20170801:1.9
	cgen-snapshot-20170801:1.9
	sid-snapshot-20170701:1.9
	cgen-snapshot-20170701:1.9
	sid-snapshot-20170601:1.9
	cgen-snapshot-20170601:1.9
	sid-snapshot-20170501:1.9
	cgen-snapshot-20170501:1.9
	sid-snapshot-20170401:1.9
	cgen-snapshot-20170401:1.9
	sid-snapshot-20170301:1.9
	cgen-snapshot-20170301:1.9
	sid-snapshot-20170201:1.9
	cgen-snapshot-20170201:1.9
	sid-snapshot-20170101:1.9
	cgen-snapshot-20170101:1.9
	sid-snapshot-20161201:1.9
	cgen-snapshot-20161201:1.9
	sid-snapshot-20161101:1.9
	cgen-snapshot-20161101:1.9
	sid-snapshot-20160901:1.9
	cgen-snapshot-20160901:1.9
	sid-snapshot-20160801:1.9
	cgen-snapshot-20160801:1.9
	sid-snapshot-20160701:1.9
	cgen-snapshot-20160701:1.9
	sid-snapshot-20160601:1.9
	cgen-snapshot-20160601:1.9
	sid-snapshot-20160501:1.9
	cgen-snapshot-20160501:1.9
	sid-snapshot-20160401:1.9
	cgen-snapshot-20160401:1.9
	sid-snapshot-20160301:1.9
	cgen-snapshot-20160301:1.9
	sid-snapshot-20160201:1.9
	cgen-snapshot-20160201:1.9
	sid-snapshot-20160101:1.9
	cgen-snapshot-20160101:1.9
	sid-snapshot-20151201:1.9
	cgen-snapshot-20151201:1.9
	sid-snapshot-20151101:1.9
	cgen-snapshot-20151101:1.9
	sid-snapshot-20151001:1.9
	cgen-snapshot-20151001:1.9
	sid-snapshot-20150901:1.9
	cgen-snapshot-20150901:1.9
	sid-snapshot-20150801:1.9
	cgen-snapshot-20150801:1.9
	sid-snapshot-20150701:1.9
	cgen-snapshot-20150701:1.9
	sid-snapshot-20150601:1.9
	cgen-snapshot-20150601:1.9
	sid-snapshot-20150501:1.9
	cgen-snapshot-20150501:1.9
	sid-snapshot-20150401:1.9
	cgen-snapshot-20150401:1.9
	sid-snapshot-20150301:1.9
	cgen-snapshot-20150301:1.9
	sid-snapshot-20150201:1.9
	cgen-snapshot-20150201:1.9
	sid-snapshot-20150101:1.9
	cgen-snapshot-20150101:1.9
	sid-snapshot-20141201:1.9
	cgen-snapshot-20141201:1.9
	sid-snapshot-20141101:1.9
	cgen-snapshot-20141101:1.9
	sid-snapshot-20141001:1.9
	cgen-snapshot-20141001:1.9
	sid-snapshot-20140901:1.9
	cgen-snapshot-20140901:1.9
	sid-snapshot-20140801:1.9
	cgen-snapshot-20140801:1.9
	sid-snapshot-20140701:1.9
	cgen-snapshot-20140701:1.9
	sid-snapshot-20140601:1.9
	cgen-snapshot-20140601:1.9
	sid-snapshot-20140501:1.9
	cgen-snapshot-20140501:1.9
	sid-snapshot-20140401:1.9
	cgen-snapshot-20140401:1.9
	sid-snapshot-20140301:1.9
	cgen-snapshot-20140301:1.9
	sid-snapshot-20140201:1.9
	cgen-snapshot-20140201:1.9
	sid-snapshot-20140101:1.9
	cgen-snapshot-20140101:1.9
	sid-snapshot-20131201:1.9
	cgen-snapshot-20131201:1.9
	sid-snapshot-20131101:1.9
	cgen-snapshot-20131101:1.9
	sid-snapshot-20131001:1.9
	cgen-snapshot-20131001:1.9
	binutils-2_24-branch:1.9.0.26
	binutils-2_24-branchpoint:1.9
	binutils-2_21_1:1.9
	sid-snapshot-20130901:1.9
	cgen-snapshot-20130901:1.9
	gdb_7_6_1-2013-08-30-release:1.9
	sid-snapshot-20130801:1.9
	cgen-snapshot-20130801:1.9
	sid-snapshot-20130701:1.9
	cgen-snapshot-20130701:1.9
	sid-snapshot-20130601:1.9
	cgen-snapshot-20130601:1.9
	sid-snapshot-20130501:1.9
	cgen-snapshot-20130501:1.9
	gdb_7_6-2013-04-26-release:1.9
	sid-snapshot-20130401:1.9
	cgen-snapshot-20130401:1.9
	binutils-2_23_2:1.9
	gdb_7_6-branch:1.9.0.24
	gdb_7_6-2013-03-12-branchpoint:1.9
	sid-snapshot-20130301:1.9
	cgen-snapshot-20130301:1.9
	sid-snapshot-20130201:1.9
	cgen-snapshot-20130201:1.9
	sid-snapshot-20130101:1.9
	cgen-snapshot-20130101:1.9
	sid-snapshot-20121201:1.9
	cgen-snapshot-20121201:1.9
	gdb_7_5_1-2012-11-29-release:1.9
	binutils-2_23_1:1.9
	sid-snapshot-20121101:1.9
	cgen-snapshot-20121101:1.9
	binutils-2_23:1.9
	sid-snapshot-20121001:1.9
	cgen-snapshot-20121001:1.9
	sid-snapshot-20120901:1.9
	cgen-snapshot-20120901:1.9
	gdb_7_5-2012-08-17-release:1.9
	sid-snapshot-20120801:1.9
	cgen-snapshot-20120801:1.9
	binutils-2_23-branch:1.9.0.22
	binutils-2_23-branchpoint:1.9
	gdb_7_5-branch:1.9.0.20
	gdb_7_5-2012-07-18-branchpoint:1.9
	sid-snapshot-20120701:1.9
	cgen-snapshot-20120701:1.9
	sid-snapshot-20120601:1.9
	cgen-snapshot-20120601:1.9
	sid-snapshot-20120501:1.9
	cgen-snapshot-20120501:1.9
	binutils-2_22_branch:1.9.0.18
	gdb_7_4_1-2012-04-26-release:1.9
	sid-snapshot-20120401:1.9
	cgen-snapshot-20120401:1.9
	sid-snapshot-20120301:1.9
	cgen-snapshot-20120301:1.9
	sid-snapshot-20120201:1.9
	cgen-snapshot-20120201:1.9
	gdb_7_4-2012-01-24-release:1.9
	sid-snapshot-20120101:1.9
	cgen-snapshot-20120101:1.9
	gdb_7_4-branch:1.9.0.16
	gdb_7_4-2011-12-13-branchpoint:1.9
	sid-snapshot-20111201:1.9
	cgen-snapshot-20111201:1.9
	binutils-2_22:1.9
	sid-snapshot-20111101:1.9
	cgen-snapshot-20111101:1.9
	sid-snapshot-20111001:1.9
	cgen-snapshot-20111001:1.9
	binutils-2_22-branch:1.9.0.14
	binutils-2_22-branchpoint:1.9
	gdb_7_3_1-2011-09-04-release:1.9
	sid-snapshot-20110901:1.9
	cgen-snapshot-20110901:1.9
	sid-snapshot-20110801:1.9
	cgen-snapshot-20110801:1.9
	gdb_7_3-2011-07-26-release:1.9
	sid-snapshot-20110701:1.9
	cgen-snapshot-20110701:1.9
	sid-snapshot-20110601:1.9
	cgen-snapshot-20110601:1.9
	sid-snapshot-20110501:1.9
	cgen-snapshot-20110501:1.9
	gdb_7_3-branch:1.9.0.12
	gdb_7_3-2011-04-01-branchpoint:1.9
	sid-snapshot-20110401:1.9
	cgen-snapshot-20110401:1.9
	sid-snapshot-20110301:1.9
	cgen-snapshot-20110301:1.9
	sid-snapshot-20110201:1.9
	cgen-snapshot-20110201:1.9
	sid-snapshot-20110101:1.9
	cgen-snapshot-20110101:1.9
	binutils-2_21:1.9
	sid-snapshot-20101201:1.9
	cgen-snapshot-20101201:1.9
	binutils-2_21-branch:1.9.0.10
	binutils-2_21-branchpoint:1.9
	sid-snapshot-20101101:1.9
	cgen-snapshot-20101101:1.9
	sid-snapshot-20101001:1.9
	cgen-snapshot-20101001:1.9
	binutils-2_20_1:1.9
	gdb_7_2-2010-09-02-release:1.9
	sid-snapshot-20100901:1.9
	cgen-snapshot-20100901:1.9
	sid-snapshot-20100801:1.9
	cgen-snapshot-20100801:1.9
	gdb_7_2-branch:1.9.0.8
	gdb_7_2-2010-07-07-branchpoint:1.9
	sid-snapshot-20100701:1.9
	cgen-snapshot-20100701:1.9
	sid-snapshot-20100601:1.9
	cgen-snapshot-20100601:1.9
	sid-snapshot-20100501:1.9
	cgen-snapshot-20100501:1.9
	sid-snapshot-20100401:1.9
	cgen-snapshot-20100401:1.9
	gdb_7_1-2010-03-18-release:1.9
	sid-snapshot-20100301:1.9
	cgen-snapshot-20100301:1.9
	gdb_7_1-branch:1.9.0.6
	gdb_7_1-2010-02-18-branchpoint:1.9
	sid-snapshot-20100201:1.9
	cgen-snapshot-20100201:1.9
	sid-snapshot-20100101:1.9
	cgen-snapshot-20100101:1.9
	gdb_7_0_1-2009-12-22-release:1.9
	sid-snapshot-20091201:1.9
	cgen-snapshot-20091201:1.9
	sid-snapshot-20091101:1.9
	cgen-snapshot-20091101:1.9
	binutils-2_20:1.9
	gdb_7_0-2009-10-06-release:1.9
	sid-snapshot-20091001:1.9
	cgen-snapshot-20091001:1.9
	gdb_7_0-branch:1.9.0.4
	gdb_7_0-2009-09-16-branchpoint:1.9
	arc-sim-20090309:1.8
	binutils-arc-20081103-branch:1.8.0.32
	binutils-arc-20081103-branchpoint:1.8
	binutils-2_20-branch:1.9.0.2
	binutils-2_20-branchpoint:1.9
	sid-snapshot-20090901:1.8
	cgen-snapshot-20090901:1.8
	sid-snapshot-20090801:1.8
	cgen-snapshot-20090801:1.8
	msnyder-checkpoint-072509-branch:1.8.0.30
	msnyder-checkpoint-072509-branchpoint:1.8
	sid-snapshot-20090701:1.8
	cgen-snapshot-20090701:1.8
	dje-cgen-play1-branch:1.8.0.28
	dje-cgen-play1-branchpoint:1.8
	cgen-1_1-branch:1.8.0.26
	cgen-1_1-branchpoint:1.8
	sid-snapshot-20090601:1.8
	cgen-snapshot-20090601:1.8
	sid-snapshot-20090501:1.8
	cgen-snapshot-20090501:1.8
	sid-snapshot-20090401:1.8
	cgen-snapshot-20090401:1.8
	arc-20081103-branch:1.8.0.24
	arc-20081103-branchpoint:1.8
	arc-insight_6_8-branch:1.8.0.22
	arc-insight_6_8-branchpoint:1.8
	insight_6_8-branch:1.8.0.20
	insight_6_8-branchpoint:1.8
	sid-snapshot-20090301:1.8
	cgen-snapshot-20090301:1.8
	binutils-2_19_1:1.8
	sid-snapshot-20090201:1.8
	cgen-snapshot-20090201:1.8
	sid-snapshot-20090101:1.8
	cgen-snapshot-20090101:1.8
	reverse-20081226-branch:1.8.0.18
	reverse-20081226-branchpoint:1.8
	sid-snapshot-20081201:1.8
	cgen-snapshot-20081201:1.8
	multiprocess-20081120-branch:1.8.0.16
	multiprocess-20081120-branchpoint:1.8
	sid-snapshot-20081101:1.8
	cgen-snapshot-20081101:1.8
	binutils-2_19:1.8
	sid-snapshot-20081001:1.8
	cgen-snapshot-20081001:1.8
	reverse-20080930-branch:1.8.0.14
	reverse-20080930-branchpoint:1.8
	binutils-2_19-branch:1.8.0.12
	binutils-2_19-branchpoint:1.8
	sid-snapshot-20080901:1.8
	cgen-snapshot-20080901:1.8
	sid-snapshot-20080801:1.8
	cgen-snapshot-20080801:1.8
	reverse-20080717-branch:1.8.0.10
	reverse-20080717-branchpoint:1.8
	sid-snapshot-20080701:1.8
	cgen-snapshot-20080701:1.8
	msnyder-reverse-20080609-branch:1.8.0.8
	msnyder-reverse-20080609-branchpoint:1.8
	drow-reverse-20070409-branch:1.7.0.24
	drow-reverse-20070409-branchpoint:1.7
	sid-snapshot-20080601:1.8
	cgen-snapshot-20080601:1.8
	sid-snapshot-20080501:1.8
	cgen-snapshot-20080501:1.8
	sid-snapshot-20080403:1.8
	sid-snapshot-20080401:1.8
	cgen-snapshot-20080401:1.8
	gdb_6_8-2008-03-27-release:1.8
	sid-snapshot-20080301:1.8
	cgen-snapshot-20080301:1.8
	gdb_6_8-branch:1.8.0.6
	gdb_6_8-2008-02-26-branchpoint:1.8
	sid-snapshot-20080201:1.8
	cgen-snapshot-20080201:1.8
	sid-snapshot-20080101:1.8
	cgen-snapshot-20080101:1.8
	sid-snapshot-20071201:1.8
	cgen-snapshot-20071201:1.8
	sid-snapshot-20071101:1.8
	cgen-snapshot-20071101:1.8
	gdb_6_7_1-2007-10-29-release:1.8
	gdb_6_7-2007-10-10-release:1.8
	sid-snapshot-20071001:1.8
	cgen-snapshot-20071001:1.8
	gdb_6_7-branch:1.8.0.4
	gdb_6_7-2007-09-07-branchpoint:1.8
	binutils-2_18:1.8
	binutils-2_18-branch:1.8.0.2
	binutils-2_18-branchpoint:1.8
	insight_6_6-20070208-release:1.7
	binutils-csl-coldfire-4_1-32:1.7
	binutils-csl-sourcerygxx-4_1-32:1.7
	gdb_6_6-2006-12-18-release:1.7
	binutils-csl-innovasic-fido-3_4_4-33:1.7
	binutils-csl-sourcerygxx-3_4_4-32:1.3
	binutils-csl-coldfire-4_1-30:1.7
	binutils-csl-sourcerygxx-4_1-30:1.7
	binutils-csl-coldfire-4_1-28:1.7
	binutils-csl-sourcerygxx-4_1-29:1.7
	binutils-csl-sourcerygxx-4_1-28:1.7
	gdb_6_6-branch:1.7.0.22
	gdb_6_6-2006-11-15-branchpoint:1.7
	binutils-csl-arm-2006q3-27:1.7
	binutils-csl-sourcerygxx-4_1-27:1.7
	binutils-csl-arm-2006q3-26:1.7
	binutils-csl-sourcerygxx-4_1-26:1.7
	binutils-csl-sourcerygxx-4_1-25:1.7
	binutils-csl-sourcerygxx-4_1-24:1.7
	binutils-csl-sourcerygxx-4_1-23:1.7
	insight_6_5-20061003-release:1.7
	gdb-csl-symbian-6_4_50_20060226-12:1.7
	binutils-csl-sourcerygxx-4_1-21:1.7
	binutils-csl-arm-2006q3-21:1.7
	binutils-csl-sourcerygxx-4_1-22:1.7
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.7
	binutils-csl-sourcerygxx-4_1-20:1.7
	binutils-csl-arm-2006q3-19:1.7
	binutils-csl-sourcerygxx-4_1-19:1.7
	binutils-csl-sourcerygxx-4_1-18:1.7
	binutils-csl-renesas-4_1-9:1.7
	gdb-csl-sourcerygxx-3_4_4-25:1.6
	binutils-csl-sourcerygxx-3_4_4-25:1.3
	nickrob-async-20060828-mergepoint:1.7
	gdb-csl-symbian-6_4_50_20060226-11:1.7
	binutils-csl-renesas-4_1-8:1.7
	binutils-csl-renesas-4_1-7:1.7
	binutils-csl-renesas-4_1-6:1.7
	gdb-csl-sourcerygxx-4_1-17:1.7
	binutils-csl-sourcerygxx-4_1-17:1.7
	gdb-csl-20060226-branch-local-2:1.7
	gdb-csl-sourcerygxx-4_1-14:1.7
	binutils-csl-sourcerygxx-4_1-14:1.7
	binutils-csl-sourcerygxx-4_1-15:1.7
	gdb-csl-sourcerygxx-4_1-13:1.7
	binutils-csl-sourcerygxx-4_1-13:1.7
	binutils-2_17:1.7
	gdb-csl-sourcerygxx-4_1-12:1.7
	binutils-csl-sourcerygxx-4_1-12:1.7
	gdb-csl-sourcerygxx-3_4_4-21:1.7
	binutils-csl-sourcerygxx-3_4_4-21:1.7
	gdb_6_5-20060621-release:1.7
	binutils-csl-wrs-linux-3_4_4-24:1.3
	binutils-csl-wrs-linux-3_4_4-23:1.3
	gdb-csl-sourcerygxx-4_1-9:1.7
	binutils-csl-sourcerygxx-4_1-9:1.7
	gdb-csl-sourcerygxx-4_1-8:1.7
	binutils-csl-sourcerygxx-4_1-8:1.7
	gdb-csl-sourcerygxx-4_1-7:1.7
	binutils-csl-sourcerygxx-4_1-7:1.7
	gdb-csl-arm-2006q1-6:1.7
	binutils-csl-arm-2006q1-6:1.7
	gdb-csl-sourcerygxx-4_1-6:1.7
	binutils-csl-sourcerygxx-4_1-6:1.7
	binutils-csl-wrs-linux-3_4_4-22:1.3
	gdb-csl-symbian-6_4_50_20060226-10:1.7
	gdb-csl-symbian-6_4_50_20060226-9:1.7
	gdb-csl-symbian-6_4_50_20060226-8:1.7
	gdb-csl-coldfire-4_1-11:1.7
	binutils-csl-coldfire-4_1-11:1.7
	gdb-csl-sourcerygxx-3_4_4-19:1.7
	binutils-csl-sourcerygxx-3_4_4-19:1.7
	gdb-csl-coldfire-4_1-10:1.7
	gdb_6_5-branch:1.7.0.20
	gdb_6_5-2006-05-14-branchpoint:1.7
	binutils-csl-coldfire-4_1-10:1.7
	gdb-csl-sourcerygxx-4_1-5:1.7
	binutils-csl-sourcerygxx-4_1-5:1.7
	nickrob-async-20060513-branch:1.7.0.18
	nickrob-async-20060513-branchpoint:1.7
	gdb-csl-sourcerygxx-4_1-4:1.7
	binutils-csl-sourcerygxx-4_1-4:1.7
	msnyder-reverse-20060502-branch:1.7.0.16
	msnyder-reverse-20060502-branchpoint:1.7
	binutils-csl-wrs-linux-3_4_4-21:1.3
	gdb-csl-morpho-4_1-4:1.7
	binutils-csl-morpho-4_1-4:1.7
	gdb-csl-sourcerygxx-3_4_4-17:1.7
	binutils-csl-sourcerygxx-3_4_4-17:1.7
	binutils-csl-wrs-linux-3_4_4-20:1.3
	readline_5_1-import-branch:1.7.0.14
	readline_5_1-import-branchpoint:1.7
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.7
	binutils-2_17-branch:1.7.0.12
	binutils-2_17-branchpoint:1.7
	gdb-csl-symbian-20060226-branch:1.7.0.10
	gdb-csl-symbian-20060226-branchpoint:1.7
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.7
	msnyder-reverse-20060331-branch:1.7.0.8
	msnyder-reverse-20060331-branchpoint:1.7
	binutils-csl-2_17-branch:1.7.0.6
	binutils-csl-2_17-branchpoint:1.7
	gdb-csl-available-20060303-branch:1.7.0.4
	gdb-csl-available-20060303-branchpoint:1.7
	gdb-csl-20060226-branch:1.7.0.2
	gdb-csl-20060226-branchpoint:1.7
	gdb_6_4-20051202-release:1.6
	msnyder-fork-checkpoint-branch:1.6.0.8
	msnyder-fork-checkpoint-branchpoint:1.6
	gdb-csl-gxxpro-6_3-branch:1.6.0.6
	gdb-csl-gxxpro-6_3-branchpoint:1.6
	gdb_6_4-branch:1.6.0.4
	gdb_6_4-2005-11-01-branchpoint:1.6
	gdb-csl-arm-20051020-branch:1.6.0.2
	gdb-csl-arm-20051020-branchpoint:1.6
	binutils-csl-gxxpro-3_4-branch:1.3.0.8
	binutils-csl-gxxpro-3_4-branchpoint:1.3
	binutils-2_16_1:1.3
	msnyder-tracepoint-checkpoint-branch:1.4.0.2
	msnyder-tracepoint-checkpoint-branchpoint:1.4
	gdb-csl-arm-20050325-2005-q1b:1.3
	binutils-csl-arm-2005q1b:1.3
	binutils-2_16:1.3
	gdb-csl-arm-20050325-2005-q1a:1.3
	binutils-csl-arm-2005q1a:1.3
	csl-arm-20050325-branch:1.3.0.6
	csl-arm-20050325-branchpoint:1.3
	binutils-csl-arm-2005q1-branch:1.3.0.4
	binutils-csl-arm-2005q1-branchpoint:1.3
	binutils-2_16-branch:1.3.0.2
	binutils-2_16-branchpoint:1.3
	csl-arm-2004-q3d:1.2
	gdb_6_3-20041109-release:1.2
	gdb_6_3-branch:1.2.0.4
	gdb_6_3-20041019-branchpoint:1.2
	csl-arm-2004-q3:1.2
	drow_intercu-merge-20040921:1.2
	drow_intercu-merge-20040915:1.2
	jimb-gdb_6_2-e500-branch:1.2.0.6
	jimb-gdb_6_2-e500-branchpoint:1.2
	gdb_6_2-20040730-release:1.2
	gdb_6_2-branch:1.2.0.2
	gdb_6_2-2004-07-10-gmt-branchpoint:1.2
	gdb_6_1_1-20040616-release:1.1
	binutils-2_15:1.1
	binutils-2_15-branchpoint:1.1
	csl-arm-2004-q1a:1.1
	csl-arm-2004-q1:1.1
	gdb_6_1-2004-04-05-release:1.1
	drow_intercu-merge-20040402:1.1
	drow_intercu-merge-20040327:1.1
	ezannoni_pie-20040323-branch:1.1.0.26
	ezannoni_pie-20040323-branchpoint:1.1
	cagney_tramp-20040321-mergepoint:1.1
	cagney_tramp-20040309-branch:1.1.0.24
	cagney_tramp-20040309-branchpoint:1.1
	gdb_6_1-branch:1.1.0.22
	gdb_6_1-2004-03-01-gmt-branchpoint:1.1
	drow_intercu-20040221-branch:1.1.0.20
	drow_intercu-20040221-branchpoint:1.1
	binutils-2_15-branch:1.1.0.18
	cagney_bfdfile-20040213-branch:1.1.0.16
	cagney_bfdfile-20040213-branchpoint:1.1
	drow-cplus-merge-20040208:1.1
	carlton_dictionary-20040126-merge:1.1
	cagney_bigcore-20040122-branch:1.1.0.14
	cagney_bigcore-20040122-branchpoint:1.1
	drow-cplus-merge-20040113:1.1
	csl-arm-2003-q4:1.1
	drow-cplus-merge-20031224:1.1
	drow-cplus-merge-20031220:1.1
	carlton_dictionary-20031215-merge:1.1
	drow-cplus-branch:1.1.0.12
	drow-cplus-merge-20031214:1.1
	carlton-dictionary-20031111-merge:1.1
	gdb_6_0-2003-10-04-release:1.1
	kettenis_sparc-20030918-branch:1.1.0.10
	kettenis_sparc-20030918-branchpoint:1.1
	carlton_dictionary-20030917-merge:1.1
	ezannoni_pie-20030916-branchpoint:1.1
	ezannoni_pie-20030916-branch:1.1.0.8
	cagney_x86i386-20030821-branch:1.1.0.6
	cagney_x86i386-20030821-branchpoint:1.1
	carlton_dictionary-20030805-merge:1.1
	carlton_dictionary-20030627-merge:1.1
	gdb_6_0-branch:1.1.0.4
	gdb_6_0-2003-06-23-branchpoint:1.1
	jimb-ppc64-linux-20030613-branch:1.1.0.2
	jimb-ppc64-linux-20030613-branchpoint:1.1
	binutils_latest_snapshot:1.9;
locks; strict;
comment	@# @;


1.9
date	2009.09.02.07.21.03;	author amodra;	state Exp;
branches;
next	1.8;

1.8
date	2007.07.05.09.49.03;	author nickc;	state Exp;
branches;
next	1.7;

1.7
date	2006.02.10.12.05.11;	author nickc;	state Exp;
branches;
next	1.6;

1.6
date	2005.07.05.15.07.45;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	2005.07.01.11.16.30;	author nickc;	state Exp;
branches;
next	1.4;

1.4
date	2005.05.10.10.21.07;	author nickc;	state Exp;
branches;
next	1.3;

1.3
date	2005.02.11.16.09.27;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	2004.05.15.13.10.30;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	2003.06.06.21.49.30;	author cagney;	state Exp;
branches
	1.1.12.1
	1.1.20.1;
next	;

1.1.12.1
date	2003.12.14.20.26.58;	author drow;	state Exp;
branches;
next	;

1.1.20.1
date	2004.09.16.17.00.42;	author drow;	state Exp;
branches;
next	;


desc
@@


1.9
log
@update copyright dates
@
text
@/* IQ2000 opcode support.  -*- C -*-

   Copyright 2000, 2001, 2002, 2005, 2007, 2009 Free Software Foundation, Inc.

   Contributed by Red Hat Inc; developed under contract from Fujitsu.

   This file is part of the GNU Binutils.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
   MA 02110-1301, USA.  */

/* This file is an addendum to iq2000.cpu.  Heavy use of C code isn't
   appropriate in .cpu files, so it resides here.  This especially applies
   to assembly/disassembly where parsing/printing can be quite involved.
   Such things aren't really part of the specification of the cpu, per se,
   so .cpu files provide the general framework and .opc files handle the
   nitty-gritty details as necessary.

   Each section is delimited with start and end markers.

   <arch>-opc.h additions use: "-- opc.h"
   <arch>-opc.c additions use: "-- opc.c"
   <arch>-asm.c additions use: "-- asm.c"
   <arch>-dis.c additions use: "-- dis.c"
   <arch>-ibd.h additions use: "-- ibd.h".  */

/* -- opc.h */

/* Allows reason codes to be output when assembler errors occur.  */
#define CGEN_VERBOSE_ASSEMBLER_ERRORS

/* Override disassembly hashing - there are variable bits in the top
   byte of these instructions.  */
#define CGEN_DIS_HASH_SIZE 8
#define CGEN_DIS_HASH(buf,value) (((* (unsigned char*) (buf)) >> 6) % CGEN_DIS_HASH_SIZE)

/* following activates check beyond hashing since some iq2000 and iq10
   instructions have same mnemonics but different functionality. */
#define CGEN_VALIDATE_INSN_SUPPORTED

extern int iq2000_cgen_insn_supported (CGEN_CPU_DESC, const CGEN_INSN *);

/* -- asm.c */

#include "safe-ctype.h"

static const char * MISSING_CLOSING_PARENTHESIS = N_("missing `)'");

/* Special check to ensure that instruction exists for given machine.  */

int
iq2000_cgen_insn_supported (CGEN_CPU_DESC cd, const CGEN_INSN *insn)
{
  int machs = cd->machs;

  return (CGEN_INSN_ATTR_VALUE (insn, CGEN_INSN_MACH) & machs) != 0;
}

static int
iq2000_cgen_isa_register (const char **strp)
{
  int len;
  int ch1, ch2;

  if (**strp == 'r' || **strp == 'R') 
    {
      len = strlen (*strp);
      if (len == 2) 
        {
          ch1 = (*strp)[1];
          if ('0' <= ch1 && ch1 <= '9')
            return 1;
        } 
      else if (len == 3) 
        {
	  ch1 = (*strp)[1];
          ch2 = (*strp)[2];
          if (('1' <= ch1 && ch1 <= '2') && ('0' <= ch2 && ch2 <= '9'))
            return 1;
          if ('3' == ch1 && (ch2 == '0' || ch2 == '1'))
            return 1;
        }
    }
  if (**strp == '%'
      && TOLOWER ((*strp)[1]) != 'l'
      && TOLOWER ((*strp)[1]) != 'h')
    return 1;
  return 0;
}

/* Handle negated literal.  */

static const char *
parse_mimm (CGEN_CPU_DESC cd,
	    const char **strp,
	    int opindex,
	    unsigned long *valuep)
{
  const char *errmsg;

  /* Verify this isn't a register.  */
  if (iq2000_cgen_isa_register (strp))
    errmsg = _("immediate value cannot be register");
  else
    {
      long value;
      
      errmsg = cgen_parse_signed_integer (cd, strp, opindex, & value);
      if (errmsg == NULL)
	{
	  long x = (-value) & 0xFFFF0000;

	  if (x != 0 && x != (long) 0xFFFF0000)
	    errmsg = _("immediate value out of range");
	  else
	    *valuep = (-value & 0xFFFF);
	}
    }
  return errmsg;
}

/* Handle signed/unsigned literal.  */

static const char *
parse_imm (CGEN_CPU_DESC cd,
	   const char **strp,
	   int opindex,
	   unsigned long *valuep)
{
  const char *errmsg;

  if (iq2000_cgen_isa_register (strp))
    errmsg = _("immediate value cannot be register");
  else
    {
      long value;

      errmsg = cgen_parse_signed_integer (cd, strp, opindex, & value);
      if (errmsg == NULL)
	{
	  long x = value & 0xFFFF0000;

	  if (x != 0 && x != (long) 0xFFFF0000)
	    errmsg = _("immediate value out of range");
	  else
	    *valuep = (value & 0xFFFF);
	}
    }
  return errmsg;
}

/* Handle iq10 21-bit jmp offset.  */

static const char *
parse_jtargq10 (CGEN_CPU_DESC cd,
		const char **strp,
		int opindex,
		int reloc ATTRIBUTE_UNUSED,
		enum cgen_parse_operand_result *type_addr ATTRIBUTE_UNUSED,
		bfd_vma *valuep)
{
  const char *errmsg;
  bfd_vma value;
  enum cgen_parse_operand_result result_type = CGEN_PARSE_OPERAND_RESULT_NUMBER;

  errmsg = cgen_parse_address (cd, strp, opindex, BFD_RELOC_IQ2000_OFFSET_21,
			       & result_type, & value);
  if (errmsg == NULL && result_type == CGEN_PARSE_OPERAND_RESULT_NUMBER)
    {
      /* Check value is within 23-bits
	 (remembering that 2-bit shift right will occur).  */
      if (value > 0x7fffff)
        return _("21-bit offset out of range");
    }
  *valuep = (value & 0x7FFFFF);
  return errmsg;
}

/* Handle high().  */

static const char *
parse_hi16 (CGEN_CPU_DESC cd,
	    const char **strp,
	    int opindex,
	    unsigned long *valuep)
{
  if (strncasecmp (*strp, "%hi(", 4) == 0)
    {
      enum cgen_parse_operand_result result_type;
      bfd_vma value;
      const char *errmsg;

      *strp += 4;
      errmsg = cgen_parse_address (cd, strp, opindex, BFD_RELOC_HI16,
				   & result_type, & value);
      if (**strp != ')')
	return MISSING_CLOSING_PARENTHESIS;

      ++*strp;
      if (errmsg == NULL
  	  && result_type == CGEN_PARSE_OPERAND_RESULT_NUMBER)
	{
	  /* If value has top-bit of %lo on, then it will
	     sign-propagate and so we compensate by adding
	     1 to the resultant %hi value.  */
	  if (value & 0x8000)
	    value += 0x10000;
	  value >>= 16;
	  value &= 0xffff;
	}
      *valuep = value;

      return errmsg;
    }

  /* We add %uhi in case a user just wants the high 16-bits or is using
     an insn like ori for %lo which does not sign-propagate.  */
  if (strncasecmp (*strp, "%uhi(", 5) == 0)
    {
      enum cgen_parse_operand_result result_type;
      bfd_vma value;
      const char *errmsg;

      *strp += 5;
      errmsg = cgen_parse_address (cd, strp, opindex, BFD_RELOC_IQ2000_UHI16,
				   & result_type, & value);
      if (**strp != ')')
	return MISSING_CLOSING_PARENTHESIS;

      ++*strp;
      if (errmsg == NULL
  	  && result_type == CGEN_PARSE_OPERAND_RESULT_NUMBER)
	value >>= 16;

      value &= 0xffff;
      *valuep = value;

      return errmsg;
    }

  return parse_imm (cd, strp, opindex, valuep);
}

/* Handle %lo in a signed context.
   The signedness of the value doesn't matter to %lo(), but this also
   handles the case where %lo() isn't present.  */

static const char *
parse_lo16 (CGEN_CPU_DESC cd,
	    const char **strp,
	    int opindex,
	    unsigned long *valuep)
{
  if (strncasecmp (*strp, "%lo(", 4) == 0)
    {
      const char *errmsg;
      enum cgen_parse_operand_result result_type;
      bfd_vma value;

      *strp += 4;
      errmsg = cgen_parse_address (cd, strp, opindex, BFD_RELOC_LO16,
				   & result_type, & value);
      if (**strp != ')')
	return MISSING_CLOSING_PARENTHESIS;
      ++*strp;
      if (errmsg == NULL
	  && result_type == CGEN_PARSE_OPERAND_RESULT_NUMBER)
	value &= 0xffff;
      *valuep = value;
      return errmsg;
    }

  return parse_imm (cd, strp, opindex, valuep);
}

/* Handle %lo in a negated signed context.
   The signedness of the value doesn't matter to %lo(), but this also
   handles the case where %lo() isn't present.  */

static const char *
parse_mlo16 (CGEN_CPU_DESC cd,
	     const char **strp,
	     int opindex,
	     unsigned long *valuep)
{
  if (strncasecmp (*strp, "%lo(", 4) == 0)
    {
      const char *errmsg;
      enum cgen_parse_operand_result result_type;
      bfd_vma value;

      *strp += 4;
      errmsg = cgen_parse_address (cd, strp, opindex, BFD_RELOC_LO16,
				   & result_type, & value);
      if (**strp != ')')
	return MISSING_CLOSING_PARENTHESIS;
      ++*strp;
      if (errmsg == NULL
	  && result_type == CGEN_PARSE_OPERAND_RESULT_NUMBER)
	value = (-value) & 0xffff;
      *valuep = value;
      return errmsg;
    }

  return parse_mimm (cd, strp, opindex, valuep);
}

/* -- */
@


1.8
log
@Change source files over to GPLv3.
@
text
@d3 1
a3 1
   Copyright 2000, 2001, 2002, 2005, 2007 Free Software Foundation, Inc.
@


1.7
log
@Fix %hi() operator for 64-bit hosts.
@
text
@d3 1
a3 1
   Copyright 2000, 2001, 2002, 2005 Free Software Foundation, Inc.
d11 1
a11 1
   the Free Software Foundation; either version 2 of the License, or
@


1.6
log
@Fix compile time warnings from a GCC 4.0 compiler
@
text
@d221 1
d247 1
@


1.5
log
@Update function declarations to ISO C90 formatting
@
text
@d262 1
a262 1
	    long *valuep)
d294 1
a294 1
	     long *valuep)
@


1.4
log
@Update the address and phone number of the FSF organization
@
text
@d3 1
a3 1
   Copyright 2000, 2001, 2002 Free Software Foundation, Inc.
d21 2
a22 3
   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.

*/
d37 1
a37 2
   <arch>-ibd.h additions use: "-- ibd.h"
*/
d53 1
a53 1
extern int iq2000_cgen_insn_supported (CGEN_CPU_DESC cd, const CGEN_INSN *insn);
d56 4
a59 4
static const char * parse_mimm PARAMS ((CGEN_CPU_DESC, const char **, int, long *));
static const char * parse_imm  PARAMS ((CGEN_CPU_DESC, const char **, int, unsigned long *));
static const char * parse_hi16 PARAMS ((CGEN_CPU_DESC, const char **, int, unsigned long *));
static const char * parse_lo16 PARAMS ((CGEN_CPU_DESC, const char **, int, long *));
d62 1
d64 1
a64 3
iq2000_cgen_insn_supported (cd, insn)
     CGEN_CPU_DESC cd;
     const CGEN_INSN *insn;
d68 1
a68 1
  return ((CGEN_INSN_ATTR_VALUE (insn, CGEN_INSN_MACH) & machs) != 0);
d71 2
a72 2
static int iq2000_cgen_isa_register (strp)
     const char **strp;
d76 1
d96 3
a98 1
  if (**strp == '%' && tolower((*strp)[1]) != 'l' && tolower((*strp)[1]) != 'h')
d106 4
a109 5
parse_mimm (cd, strp, opindex, valuep)
     CGEN_CPU_DESC cd;
     const char **strp;
     int opindex;
     long *valuep;
a111 1
  long value;
d113 1
a113 1
  /* Verify this isn't a register */
d124 2
a125 1
	  if (x != 0 && x != 0xFFFF0000)
d137 4
a140 5
parse_imm (cd, strp, opindex, valuep)
     CGEN_CPU_DESC cd;
     const char **strp;
     int opindex;
     unsigned long *valuep;
a142 1
  long value;
d154 2
a155 1
	  if (x != 0 && x != 0xFFFF0000)
d167 6
a172 7
parse_jtargq10 (cd, strp, opindex, reloc, type_addr, valuep)
     CGEN_CPU_DESC cd;
     const char **strp;
     int opindex;
     int reloc;
     enum cgen_parse_operand_result *type_addr;
     bfd_vma *valuep;
d179 1
a179 1
			       &result_type, &value);
d182 2
a183 1
      /* Check value is within 23-bits (remembering that 2-bit shift right will occur).  */
d194 4
a197 5
parse_hi16 (cd, strp, opindex, valuep)
     CGEN_CPU_DESC cd;
     const char **strp;
     int opindex;
     unsigned long *valuep;
d207 1
a207 1
				   &result_type, &value);
d209 1
a209 1
	return _("missing `)'");
d215 1
a215 1
	  /* if value has top-bit of %lo on, then it will
d217 1
a217 1
	     1 to the resultant %hi value */
d227 2
a228 2
  /* we add %uhi in case a user just wants the high 16-bits or is using
     an insn like ori for %lo which does not sign-propagate */
d237 1
a237 1
				   &result_type, &value);
d239 1
a239 1
	return _("missing `)'");
d244 2
a245 3
	{
	  value >>= 16;
	}
d259 4
a262 5
parse_lo16 (cd, strp, opindex, valuep)
     CGEN_CPU_DESC cd;
     const char **strp;
     int opindex;
     long *valuep;
d272 1
a272 1
				   &result_type, &value);
d274 1
a274 1
	return _("missing `)'");
d291 4
a294 5
parse_mlo16 (cd, strp, opindex, valuep)
     CGEN_CPU_DESC cd;
     const char **strp;
     int opindex;
     long *valuep;
d304 1
a304 1
				   &result_type, &value);
d306 1
a306 1
	return _("missing `)'");
@


1.3
log
@Fix compile time warning building iq2000-asm.c
@
text
@d21 1
a21 1
   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
@


1.2
log
@Make 'insn' argument of iq2000_cgen_insn_supported be const.
@
text
@d175 1
a175 1
     unsigned long *valuep;
d185 1
a185 1
      /* check value is within 23-bits (remembering that 2-bit shift right will occur) */
@


1.1
log
@2003-06-06  Andrew Cagney  <cagney@@redhat.com>

	Contributed by Red Hat.
	* iq2000.cpu: New file.  Written by Ben Elliston, Jeff Johnston,
	Stan Cox, and Frank Ch. Eigler.
	* iq2000.opc: New file.  Written by Ben Elliston, Frank
	Ch. Eigler, Chris Moller, Jeff Johnston, and Stan Cox.
	* iq2000m.cpu: New file.  Written by Jeff Johnston.
	* iq10.cpu: New file.  Written by Jeff Johnston.
@
text
@d55 1
a55 1
extern int iq2000_cgen_insn_supported (CGEN_CPU_DESC cd, CGEN_INSN *insn);
d63 1
a63 1
/* Special check to ensure that instruction exists for given machine */
d67 1
a67 1
     CGEN_INSN *insn;
@


1.1.20.1
log
@Merge mainline to intercu branch - 2004-09-15
@
text
@d55 1
a55 1
extern int iq2000_cgen_insn_supported (CGEN_CPU_DESC cd, const CGEN_INSN *insn);
d63 1
a63 1
/* Special check to ensure that instruction exists for given machine.  */
d67 1
a67 1
     const CGEN_INSN *insn;
@


1.1.12.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@@

