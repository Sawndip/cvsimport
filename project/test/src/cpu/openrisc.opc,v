head	1.1;
access;
symbols
	sid-snapshot-20180601:1.1
	cgen-snapshot-20180601:1.1
	sid-snapshot-20180501:1.1
	cgen-snapshot-20180501:1.1
	sid-snapshot-20180401:1.1
	cgen-snapshot-20180401:1.1
	sid-snapshot-20180301:1.1
	cgen-snapshot-20180301:1.1
	sid-snapshot-20180201:1.1
	cgen-snapshot-20180201:1.1
	sid-snapshot-20180101:1.1
	cgen-snapshot-20180101:1.1
	sid-snapshot-20171201:1.1
	cgen-snapshot-20171201:1.1
	sid-snapshot-20171101:1.1
	cgen-snapshot-20171101:1.1
	sid-snapshot-20171001:1.1
	cgen-snapshot-20171001:1.1
	sid-snapshot-20170901:1.1
	cgen-snapshot-20170901:1.1
	sid-snapshot-20170801:1.1
	cgen-snapshot-20170801:1.1
	sid-snapshot-20170701:1.1
	cgen-snapshot-20170701:1.1
	sid-snapshot-20170601:1.1
	cgen-snapshot-20170601:1.1
	sid-snapshot-20170501:1.1
	cgen-snapshot-20170501:1.1
	sid-snapshot-20170401:1.1
	cgen-snapshot-20170401:1.1
	sid-snapshot-20170301:1.1
	cgen-snapshot-20170301:1.1
	sid-snapshot-20170201:1.1
	cgen-snapshot-20170201:1.1
	sid-snapshot-20170101:1.1
	cgen-snapshot-20170101:1.1
	sid-snapshot-20161201:1.1
	cgen-snapshot-20161201:1.1
	sid-snapshot-20161101:1.1
	cgen-snapshot-20161101:1.1
	sid-snapshot-20160901:1.1
	cgen-snapshot-20160901:1.1
	sid-snapshot-20160801:1.1
	cgen-snapshot-20160801:1.1
	sid-snapshot-20160701:1.1
	cgen-snapshot-20160701:1.1
	sid-snapshot-20160601:1.1
	cgen-snapshot-20160601:1.1
	sid-snapshot-20160501:1.1
	cgen-snapshot-20160501:1.1
	sid-snapshot-20160401:1.1
	cgen-snapshot-20160401:1.1
	sid-snapshot-20160301:1.1
	cgen-snapshot-20160301:1.1
	sid-snapshot-20160201:1.1
	cgen-snapshot-20160201:1.1
	sid-snapshot-20160101:1.1
	cgen-snapshot-20160101:1.1
	sid-snapshot-20151201:1.1
	cgen-snapshot-20151201:1.1
	sid-snapshot-20151101:1.1
	cgen-snapshot-20151101:1.1
	sid-snapshot-20151001:1.1
	cgen-snapshot-20151001:1.1
	sid-snapshot-20150901:1.1
	cgen-snapshot-20150901:1.1
	sid-snapshot-20150801:1.1
	cgen-snapshot-20150801:1.1
	sid-snapshot-20150701:1.1
	cgen-snapshot-20150701:1.1
	sid-snapshot-20150601:1.1
	cgen-snapshot-20150601:1.1
	sid-snapshot-20150501:1.1
	cgen-snapshot-20150501:1.1
	sid-snapshot-20150401:1.1
	cgen-snapshot-20150401:1.1
	sid-snapshot-20150301:1.1
	cgen-snapshot-20150301:1.1
	sid-snapshot-20150201:1.1
	cgen-snapshot-20150201:1.1
	sid-snapshot-20150101:1.1
	cgen-snapshot-20150101:1.1
	sid-snapshot-20141201:1.1
	cgen-snapshot-20141201:1.1
	sid-snapshot-20141101:1.1
	cgen-snapshot-20141101:1.1
	sid-snapshot-20141001:1.1
	cgen-snapshot-20141001:1.1
	sid-snapshot-20140901:1.1
	cgen-snapshot-20140901:1.1
	sid-snapshot-20140801:1.1
	cgen-snapshot-20140801:1.1
	sid-snapshot-20140701:1.1
	cgen-snapshot-20140701:1.1
	sid-snapshot-20140601:1.1
	cgen-snapshot-20140601:1.1
	sid-snapshot-20140501:1.1
	cgen-snapshot-20140501:1.1
	sid-snapshot-20140401:1.1
	cgen-snapshot-20140401:1.1
	sid-snapshot-20140301:1.1
	cgen-snapshot-20140301:1.1
	sid-snapshot-20140201:1.1
	cgen-snapshot-20140201:1.1
	sid-snapshot-20140101:1.1
	cgen-snapshot-20140101:1.1
	sid-snapshot-20131201:1.1
	cgen-snapshot-20131201:1.1
	sid-snapshot-20131101:1.1
	cgen-snapshot-20131101:1.1
	sid-snapshot-20131001:1.1
	cgen-snapshot-20131001:1.1
	binutils-2_24-branch:1.1.0.14
	binutils-2_24-branchpoint:1.1
	sid-snapshot-20130901:1.1
	cgen-snapshot-20130901:1.1
	gdb_7_6_1-2013-08-30-release:1.1
	sid-snapshot-20130801:1.1
	cgen-snapshot-20130801:1.1
	sid-snapshot-20130701:1.1
	cgen-snapshot-20130701:1.1
	sid-snapshot-20130601:1.1
	cgen-snapshot-20130601:1.1
	sid-snapshot-20130501:1.1
	cgen-snapshot-20130501:1.1
	gdb_7_6-2013-04-26-release:1.1
	sid-snapshot-20130401:1.1
	cgen-snapshot-20130401:1.1
	binutils-2_23_2:1.1
	gdb_7_6-branch:1.1.0.12
	gdb_7_6-2013-03-12-branchpoint:1.1
	sid-snapshot-20130301:1.1
	cgen-snapshot-20130301:1.1
	sid-snapshot-20130201:1.1
	cgen-snapshot-20130201:1.1
	sid-snapshot-20130101:1.1
	cgen-snapshot-20130101:1.1
	sid-snapshot-20121201:1.1
	cgen-snapshot-20121201:1.1
	gdb_7_5_1-2012-11-29-release:1.1
	binutils-2_23_1:1.1
	sid-snapshot-20121101:1.1
	cgen-snapshot-20121101:1.1
	binutils-2_23:1.1
	sid-snapshot-20121001:1.1
	cgen-snapshot-20121001:1.1
	sid-snapshot-20120901:1.1
	cgen-snapshot-20120901:1.1
	gdb_7_5-2012-08-17-release:1.1
	sid-snapshot-20120801:1.1
	cgen-snapshot-20120801:1.1
	binutils-2_23-branch:1.1.0.10
	binutils-2_23-branchpoint:1.1
	gdb_7_5-branch:1.1.0.8
	gdb_7_5-2012-07-18-branchpoint:1.1
	sid-snapshot-20120701:1.1
	cgen-snapshot-20120701:1.1
	sid-snapshot-20120601:1.1
	cgen-snapshot-20120601:1.1
	sid-snapshot-20120501:1.1
	cgen-snapshot-20120501:1.1
	binutils-2_22_branch:1.1.0.6
	gdb_7_4_1-2012-04-26-release:1.1
	sid-snapshot-20120401:1.1
	cgen-snapshot-20120401:1.1
	sid-snapshot-20120301:1.1
	cgen-snapshot-20120301:1.1
	sid-snapshot-20120201:1.1
	cgen-snapshot-20120201:1.1
	gdb_7_4-2012-01-24-release:1.1
	sid-snapshot-20120101:1.1
	cgen-snapshot-20120101:1.1
	gdb_7_4-branch:1.1.0.4
	gdb_7_4-2011-12-13-branchpoint:1.1
	sid-snapshot-20111201:1.1
	cgen-snapshot-20111201:1.1
	binutils-2_22:1.1
	sid-snapshot-20111101:1.1
	cgen-snapshot-20111101:1.1
	sid-snapshot-20111001:1.1
	cgen-snapshot-20111001:1.1
	binutils-2_22-branch:1.1.0.2
	binutils-2_22-branchpoint:1.1
	sid-snapshot-20110901:1.1
	cgen-snapshot-20110901:1.1
	binutils_latest_snapshot:1.1;
locks; strict;
comment	@# @;


1.1
date	2011.08.22.15.25.07;	author nickc;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Move cpu files from cgen/cpu to top level cpu directory.
@
text
@/* OpenRISC opcode support.  -*- C -*-
   Copyright 2000, 2001, 2003, 2005, 2011 Free Software Foundation, Inc.

   Contributed by Red Hat Inc;

   This file is part of the GNU Binutils.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
   MA 02110-1301, USA.  */

/* This file is an addendum to or32.cpu.  Heavy use of C code isn't
   appropriate in .cpu files, so it resides here.  This especially applies
   to assembly/disassembly where parsing/printing can be quite involved.
   Such things aren't really part of the specification of the cpu, per se,
   so .cpu files provide the general framework and .opc files handle the
   nitty-gritty details as necessary.

   Each section is delimited with start and end markers.

   <arch>-opc.h additions use: "-- opc.h"
   <arch>-opc.c additions use: "-- opc.c"
   <arch>-asm.c additions use: "-- asm.c"
   <arch>-dis.c additions use: "-- dis.c"
   <arch>-ibd.h additions use: "-- ibd.h"  */

/* -- opc.h */
#undef  CGEN_DIS_HASH_SIZE
#define CGEN_DIS_HASH_SIZE 64
#undef  CGEN_DIS_HASH
#define CGEN_DIS_HASH(buffer, value) (((unsigned char *) (buffer))[0] >> 2)

extern long openrisc_sign_extend_16bit (long);
/* -- */

/* -- opc.c */
/* -- */

/* -- asm.c */

static const char * MISSING_CLOSING_PARENTHESIS = N_("missing `)'");

#define CGEN_VERBOSE_ASSEMBLER_ERRORS

long
openrisc_sign_extend_16bit (long value)
{
  return ((value & 0xffff) ^ 0x8000) - 0x8000;
}

/* Handle hi().  */

static const char *
parse_hi16 (CGEN_CPU_DESC cd, const char ** strp, int opindex, long * valuep)
{
  const char *errmsg;
  enum cgen_parse_operand_result result_type;
  unsigned long ret;

  if (**strp == '#')
    ++*strp;

  if (strncasecmp (*strp, "hi(", 3) == 0)
    {
      bfd_vma value;

      *strp += 3;
      errmsg = cgen_parse_address (cd, strp, opindex, BFD_RELOC_HI16,
				   & result_type, & value);
      if (**strp != ')')
        return MISSING_CLOSING_PARENTHESIS;

      ++*strp;
      if (errmsg == NULL
          && result_type == CGEN_PARSE_OPERAND_RESULT_NUMBER)
        value >>= 16;
      ret = value;
    }
  else
    {
      if (**strp == '-')
	{
	  long value;

	  errmsg = cgen_parse_signed_integer (cd, strp, opindex, &value);
	  ret = value;
	}
      else
	{
	  unsigned long value;

	  errmsg = cgen_parse_unsigned_integer (cd, strp, opindex, &value);
	  ret = value;
	}
    }

  *valuep = ((ret & 0xffff) ^ 0x8000) - 0x8000;
  return errmsg;
}

/* Handle lo().  */

static const char *
parse_lo16 (CGEN_CPU_DESC cd, const char ** strp, int opindex, long * valuep)
{
  const char *errmsg;
  enum cgen_parse_operand_result result_type;
  unsigned long ret;

  if (**strp == '#')
    ++*strp;

  if (strncasecmp (*strp, "lo(", 3) == 0)
    {
      bfd_vma value;

      *strp += 3;
      errmsg = cgen_parse_address (cd, strp, opindex, BFD_RELOC_LO16,
				   & result_type, & value);
      if (**strp != ')')
        return MISSING_CLOSING_PARENTHESIS;

      ++*strp;
      ret = value;
    }
  else
    {
      if (**strp == '-')
	{
	  long value;

	  errmsg = cgen_parse_signed_integer (cd, strp, opindex, &value);
	  ret = value;
	}
      else
	{
	  unsigned long value;

	  errmsg = cgen_parse_unsigned_integer (cd, strp, opindex, &value);
	  ret = value;
	}
    }

  *valuep = ((ret & 0xffff) ^ 0x8000) - 0x8000;
  return errmsg;
}

/* -- */

/* -- ibd.h */
extern long openrisc_sign_extend_16bit (long);

/* -- */
@
