head	1.2;
access;
symbols
	sid-snapshot-20180601:1.2
	sid-snapshot-20180501:1.2
	sid-snapshot-20180401:1.2
	sid-snapshot-20180301:1.2
	sid-snapshot-20180201:1.2
	sid-snapshot-20180101:1.2
	sid-snapshot-20171201:1.2
	sid-snapshot-20171101:1.2
	sid-snapshot-20171001:1.2
	sid-snapshot-20170901:1.2
	sid-snapshot-20170801:1.2
	sid-snapshot-20170701:1.2
	sid-snapshot-20170601:1.2
	sid-snapshot-20170501:1.2
	sid-snapshot-20170401:1.2
	sid-snapshot-20170301:1.2
	sid-snapshot-20170201:1.2
	sid-snapshot-20170101:1.2
	sid-snapshot-20161201:1.2
	sid-snapshot-20161101:1.2
	sid-snapshot-20160901:1.2
	sid-snapshot-20160801:1.2
	sid-snapshot-20160701:1.2
	sid-snapshot-20160601:1.2
	sid-snapshot-20160501:1.2
	sid-snapshot-20160401:1.2
	sid-snapshot-20160301:1.2
	sid-snapshot-20160201:1.2
	sid-snapshot-20160101:1.2
	sid-snapshot-20151201:1.2
	sid-snapshot-20151101:1.2
	sid-snapshot-20151001:1.2
	sid-snapshot-20150901:1.2
	sid-snapshot-20150801:1.2
	sid-snapshot-20150701:1.2
	sid-snapshot-20150601:1.2
	sid-snapshot-20150501:1.2
	sid-snapshot-20150401:1.2
	sid-snapshot-20150301:1.2
	sid-snapshot-20150201:1.2
	sid-snapshot-20150101:1.2
	sid-snapshot-20141201:1.2
	sid-snapshot-20141101:1.2
	sid-snapshot-20141001:1.2
	sid-snapshot-20140901:1.2
	sid-snapshot-20140801:1.2
	sid-snapshot-20140701:1.2
	sid-snapshot-20140601:1.2
	sid-snapshot-20140501:1.2
	sid-snapshot-20140401:1.2
	sid-snapshot-20140301:1.2
	sid-snapshot-20140201:1.2
	sid-snapshot-20140101:1.2
	sid-snapshot-20131201:1.2
	sid-snapshot-20131101:1.2
	sid-snapshot-20131001:1.2
	sid-snapshot-20130901:1.2
	sid-snapshot-20130801:1.2
	sid-snapshot-20130701:1.2
	sid-snapshot-20130601:1.2
	sid-snapshot-20130501:1.2
	sid-snapshot-20130401:1.2
	sid-snapshot-20130301:1.2
	sid-snapshot-20130201:1.2
	sid-snapshot-20130101:1.2
	sid-snapshot-20121201:1.2
	sid-snapshot-20121101:1.2
	sid-snapshot-20121001:1.2
	sid-snapshot-20120901:1.2
	sid-snapshot-20120801:1.2
	sid-snapshot-20120701:1.2
	sid-snapshot-20120601:1.2
	sid-snapshot-20120501:1.2
	sid-snapshot-20120401:1.2
	sid-snapshot-20120301:1.2
	sid-snapshot-20120201:1.2
	sid-snapshot-20120101:1.2
	sid-snapshot-20111201:1.2
	sid-snapshot-20111101:1.2
	sid-snapshot-20111001:1.2
	sid-snapshot-20110901:1.2
	sid-snapshot-20110801:1.2
	sid-snapshot-20110701:1.2
	sid-snapshot-20110601:1.2
	sid-snapshot-20110501:1.2
	sid-snapshot-20110401:1.2
	sid-snapshot-20110301:1.2
	sid-snapshot-20110201:1.2
	sid-snapshot-20110101:1.2
	sid-snapshot-20101201:1.2
	sid-snapshot-20101101:1.2
	sid-snapshot-20101001:1.2
	sid-snapshot-20100901:1.2
	sid-snapshot-20100801:1.2
	sid-snapshot-20100701:1.2
	sid-snapshot-20100601:1.2
	sid-snapshot-20100501:1.2
	sid-snapshot-20100401:1.2
	sid-snapshot-20100301:1.2
	sid-snapshot-20100201:1.2
	sid-snapshot-20100101:1.2
	sid-snapshot-20091201:1.2
	sid-snapshot-20091101:1.2
	sid-snapshot-20091001:1.2
	sid-snapshot-20090901:1.2
	sid-snapshot-20090801:1.2
	sid-snapshot-20090701:1.2
	sid-snapshot-20090601:1.2
	sid-snapshot-20090501:1.2
	sid-snapshot-20090401:1.2
	sid-snapshot-20090301:1.2
	sid-snapshot-20090201:1.2
	sid-snapshot-20090101:1.2
	sid-snapshot-20081201:1.2
	sid-snapshot-20081101:1.2
	sid-snapshot-20081001:1.2
	sid-snapshot-20080901:1.2
	sid-snapshot-20080801:1.2
	sid-snapshot-20080701:1.2
	sid-snapshot-20080601:1.2
	sid-snapshot-20080501:1.2
	sid-snapshot-20080403:1.2
	sid-snapshot-20080401:1.2
	sid-snapshot-20080301:1.2
	sid-snapshot-20080201:1.2
	sid-snapshot-20080101:1.2
	sid-snapshot-20071201:1.2
	sid-snapshot-20071101:1.2
	sid-snapshot-20071001:1.2;
locks; strict;
comment	@# @;


1.2
date	2005.12.19.10.21.08;	author nathan;	state Exp;
branches;
next	1.1;

1.1
date	2005.12.19.10.17.57;	author nathan;	state Exp;
branches;
next	;


desc
@@


1.2
log
@	* sidcomp.cgen-cpu.mt: Renamed from sidcomp.cgen-cpu.ms1.

	* mt-allinsn.exp: Renamed from ms1-allinsn.exp. Updated.
	* mt-state-snapshot.exp: Renamed from
	ms1-state-snapshot.exp. Updated.
	* mulinsns.s, shiftinsns.s, subinsns.s: Updated.
@
text
@# Testsuite for the CPU state snapshot and restoring.
# Copyright (C) 2001 Red Hat

if {! $sidtarget(mt)} { untested "hw-cpu-mt not available"; return }

set cpu "mt"
set filename "$srcdir/sidcomp.cgen-cpu.mt/test-img.x"
set conf_file "statesnap.conf"
set start_insn 0x22d4


set test "sid configuration"
sid_config_component_etc_test_with_tracing "$conf_file" \
    "load libcgencpu.la cgen_component_library" \
    "hw-cpu-$cpu" \
    "load libmemory.la mem_component_library
load libloader.la loader_component_library

new hw-memory-ram/rom-basic mem
new sw-load-elf loader

set loader file $filename
connect-pin loader start-pc-set -> real-victim start-pc-set!
connect-pin loader endian-set -> real-victim endian-set!
connect-bus loader load-accessor-insn mem read-write-port
connect-bus loader load-accessor-data mem read-write-port

set mem size 0xffffff
connect-bus real-victim data-memory mem read-write-port
connect-bus real-victim insn-memory mem read-write-port

relate tester loader loader
"
pass $test


set test "sid startup"
if [sid_start "$conf_file"] then { pass $test } else { fail $test ; return }


set test "acquire loader load! pin"
set load_pin [sid_cmd "sid::component::find_pin [sid_cmd {set relationships(loader)}] load!"]
if {$load_pin != ""} { pass $test } else { fail $test }

set test "acquire cpu reset! pin"
set reset_pin [sid_cmd "sid::component::find_pin $victim reset!"]
if {$reset_pin == ""} then { fail $test } else { pass $test }

set test "acquire cpu step! pin"
set step_pin [sid_cmd "sid::component::find_pin $victim step!"]
if {$step_pin == ""} then { fail $test } else { pass $test }

set test "acquire cpu start-pc-set! pin"
set set_pc_pin [sid_cmd "sid::component::find_pin $victim start-pc-set!"]
if {$set_pc_pin == ""} then { fail $test } else { pass $test }

sid_cmd "sid::pin::driven_h4 $reset_pin 1"
sid_cmd "sid::pin::driven_h4 $load_pin 1"

# ignore any initialization in crt0; we're just doing simple memory writes
set test "advancing to interesting position of test image"
sid_cmd "sid::pin::driven_h4 $set_pc_pin $start_insn"
set result [sid_cmd "sid::component::attribute_value $victim pc"]
if {$result != $start_insn} then { fail $test } else { pass $test }


# set our step-size to 100, to finish test quickly
set test "set step-insn-count attribute"
set result [sid_cmd "sid::component::set_attribute_value $victim step-insn-count 100"]
if {$result == ""} then { fail $test } else { pass $test }

# advance 100 insns into interesting stuff
sid_cmd "sid::pin::driven_h4 $step_pin 1"    

# save state 1's PC
set test "storing state 1's pc value"
set first_pc [sid_cmd "sid::component::attribute_value $victim pc"]
if {$first_pc == "" } then { fail $test } else { pass $test }


# capture state
set test "snapshot initial CPU state"
set first_state [sid_cmd "sid::component::attribute_value $victim state-snapshot"]
if {$first_state == ""} then { fail $test } else { pass $test }


# advance through 100 more insns
sid_cmd "sid::pin::driven_h4 $step_pin 1"    


# capture state
set test "snapshot final CPU state"
set second_state [sid_cmd "sid::component::attribute_value $victim state-snapshot"]
if {$second_state == ""} then { fail $test } else { pass $test }


# rewind to first capture
set test "restore initial CPU state"
set result [sid_cmd "sid::component::set_attribute_value $victim state-snapshot \"$first_state\""]
if {$result == ""} then { fail $test } else { pass $test }


# check that pc was reset
set test "checking pc value rewound properly"
set rewind_pc [sid_cmd "sid::component::attribute_value $victim pc"]
if {$rewind_pc != $first_pc } then { fail $test } else { pass $test }


# advance through second 100 insns again
sid_cmd "sid::pin::driven_h4 $step_pin 1"    

# capture state
set test "snapshot final CPU state again"
set third_state [sid_cmd "sid::component::attribute_value $victim state-snapshot"]
if {$third_state == ""} then { fail $test } else { pass $test }

# compare states
set test "comparing second and third states"
if {$second_state != $third_state} then { fail $test } else { pass $test }


set test "sid stop"
if {[sid_stop]} { pass $test } else { fail $test ; return }

# zap temp file if tests were successful
global exit_status
if {$exit_status == "0"} { file delete "$conf_file" }
@


1.1
log
@rename ms1 testsuite to mt
@
text
@d4 1
a4 1
if {! $sidtarget(ms1)} { untested "hw-cpu-ms1 not available"; return }
d6 2
a7 2
set cpu "ms1"
set filename "$srcdir/sidcomp.cgen-cpu.ms1/test-img.x"
@

