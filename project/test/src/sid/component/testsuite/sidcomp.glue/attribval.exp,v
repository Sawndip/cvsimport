head	1.2;
access;
symbols
	sid-snapshot-20180601:1.2
	sid-snapshot-20180501:1.2
	sid-snapshot-20180401:1.2
	sid-snapshot-20180301:1.2
	sid-snapshot-20180201:1.2
	sid-snapshot-20180101:1.2
	sid-snapshot-20171201:1.2
	sid-snapshot-20171101:1.2
	sid-snapshot-20171001:1.2
	sid-snapshot-20170901:1.2
	sid-snapshot-20170801:1.2
	sid-snapshot-20170701:1.2
	sid-snapshot-20170601:1.2
	sid-snapshot-20170501:1.2
	sid-snapshot-20170401:1.2
	sid-snapshot-20170301:1.2
	sid-snapshot-20170201:1.2
	sid-snapshot-20170101:1.2
	sid-snapshot-20161201:1.2
	sid-snapshot-20161101:1.2
	sid-snapshot-20160901:1.2
	sid-snapshot-20160801:1.2
	sid-snapshot-20160701:1.2
	sid-snapshot-20160601:1.2
	sid-snapshot-20160501:1.2
	sid-snapshot-20160401:1.2
	sid-snapshot-20160301:1.2
	sid-snapshot-20160201:1.2
	sid-snapshot-20160101:1.2
	sid-snapshot-20151201:1.2
	sid-snapshot-20151101:1.2
	sid-snapshot-20151001:1.2
	sid-snapshot-20150901:1.2
	sid-snapshot-20150801:1.2
	sid-snapshot-20150701:1.2
	sid-snapshot-20150601:1.2
	sid-snapshot-20150501:1.2
	sid-snapshot-20150401:1.2
	sid-snapshot-20150301:1.2
	sid-snapshot-20150201:1.2
	sid-snapshot-20150101:1.2
	sid-snapshot-20141201:1.2
	sid-snapshot-20141101:1.2
	sid-snapshot-20141001:1.2
	sid-snapshot-20140901:1.2
	sid-snapshot-20140801:1.2
	sid-snapshot-20140701:1.2
	sid-snapshot-20140601:1.2
	sid-snapshot-20140501:1.2
	sid-snapshot-20140401:1.2
	sid-snapshot-20140301:1.2
	sid-snapshot-20140201:1.2
	sid-snapshot-20140101:1.2
	sid-snapshot-20131201:1.2
	sid-snapshot-20131101:1.2
	sid-snapshot-20131001:1.2
	sid-snapshot-20130901:1.2
	sid-snapshot-20130801:1.2
	sid-snapshot-20130701:1.2
	sid-snapshot-20130601:1.2
	sid-snapshot-20130501:1.2
	sid-snapshot-20130401:1.2
	sid-snapshot-20130301:1.2
	sid-snapshot-20130201:1.2
	sid-snapshot-20130101:1.2
	sid-snapshot-20121201:1.2
	sid-snapshot-20121101:1.2
	sid-snapshot-20121001:1.2
	sid-snapshot-20120901:1.2
	sid-snapshot-20120801:1.2
	sid-snapshot-20120701:1.2
	sid-snapshot-20120601:1.2
	sid-snapshot-20120501:1.2
	sid-snapshot-20120401:1.2
	sid-snapshot-20120301:1.2
	sid-snapshot-20120201:1.2
	sid-snapshot-20120101:1.2
	sid-snapshot-20111201:1.2
	sid-snapshot-20111101:1.2
	sid-snapshot-20111001:1.2
	sid-snapshot-20110901:1.2
	sid-snapshot-20110801:1.2
	sid-snapshot-20110701:1.2
	sid-snapshot-20110601:1.2
	sid-snapshot-20110501:1.2
	sid-snapshot-20110401:1.2
	sid-snapshot-20110301:1.2
	sid-snapshot-20110201:1.2
	sid-snapshot-20110101:1.2
	sid-snapshot-20101201:1.2
	sid-snapshot-20101101:1.2
	sid-snapshot-20101001:1.2
	sid-snapshot-20100901:1.2
	sid-snapshot-20100801:1.2
	sid-snapshot-20100701:1.2
	sid-snapshot-20100601:1.2
	sid-snapshot-20100501:1.2
	sid-snapshot-20100401:1.2
	sid-snapshot-20100301:1.2
	sid-snapshot-20100201:1.2
	sid-snapshot-20100101:1.2
	sid-snapshot-20091201:1.2
	sid-snapshot-20091101:1.2
	sid-snapshot-20091001:1.2
	sid-snapshot-20090901:1.2
	sid-snapshot-20090801:1.2
	sid-snapshot-20090701:1.2
	sid-snapshot-20090601:1.2
	sid-snapshot-20090501:1.2
	sid-snapshot-20090401:1.2
	sid-snapshot-20090301:1.2
	sid-snapshot-20090201:1.2
	sid-snapshot-20090101:1.2
	sid-snapshot-20081201:1.2
	sid-snapshot-20081101:1.2
	sid-snapshot-20081001:1.2
	sid-snapshot-20080901:1.2
	sid-snapshot-20080801:1.2
	sid-snapshot-20080701:1.2
	sid-snapshot-20080601:1.2
	sid-snapshot-20080501:1.2
	sid-snapshot-20080403:1.2
	sid-snapshot-20080401:1.2
	sid-snapshot-20080301:1.2
	sid-snapshot-20080201:1.2
	sid-snapshot-20080101:1.2
	sid-snapshot-20071201:1.2
	sid-snapshot-20071101:1.2
	sid-snapshot-20071001:1.2
	sid-20020905-branchpoint:1.2
	sid-20020905-branch:1.2.0.2
	cygnus_cvs_20020108_pre:1.2;
locks; strict;
comment	@# @;


1.2
date	2001.07.13.15.19.09;	author fche;	state Exp;
branches;
next	1.1;

1.1
date	2000.12.07.19.31.01;	author fche;	state Exp;
branches;
next	;


desc
@@


1.2
log
@* test suite cleanup

2001-07-13  Frank Ch. Eigler  <fche@@redhat.com>

	* config/default.exp: Stop using [sid_find_file] for component libs.
	Forget about mksid.
	* sidcomp.*/*.exp: Stop using [sid_find_file] to find component
	shared libraries for "load" cmds in sid configuration files.
@
text
@set test "sid configuration"
sid_config_component_test "attribb1.conf" \
    "load libglue.la glue_component_library" \
    "sw-glue-attribbank"
pass $test

set test "sid startup"
if [sid_start "attribb1.conf"] then { pass $test } else { fail $test ; return }

set test "check setting attribute list"
set category "setting"
set set [sid_cmd "sid::component::attribute_names_in_category $victim $category"]
if {$set == ""} then { pass $test } else { fail $test }

set test "check pin attribute list"
set category "pin"
set pin [sid_cmd "sid::component::attribute_names_in_category $victim $category"]
if {$pin == ""} then { pass $test } else { fail $test }

set test "check register attribute list"
set category "register"
set regs [sid_cmd "sid::component::attribute_names_in_category $victim $category"]
if {$regs == ""} then { pass $test } else { fail $test }

set test "check register watchable list"
set category "watchable"
set watch [sid_cmd "sid::component::attribute_names_in_category $victim $category"]
if {$watch == ""} then { pass $test } else { fail $test }

set test "query pin names"
set result [sid_cmd "sid::component::pin_names $victim"]
if {$result == ""} then { pass $test } else { fail $test }

set test "query bus names"
set result [sid_cmd "sid::component::bus_names $victim"]
if {$result == ""} then { pass $test } else { fail $test }

set test "query accessor names"
set result [sid_cmd "sid::component::accessor_names $victim"]
if {$result == ""} then { pass $test } else { fail $test }

set test "query relationships names"
set result [sid_cmd "sid::component::relationship_names $victim"]
if {$result == ""} then { pass $test } else { fail $test }

set new("accessor_names") "accessor"
set new(sid) "sid"
set new(1e6)  "1.0e6 "
set new(-1true.0)  "false "
set new("\")  " "
set new("_new_att")  "any"
set new(".cc")  "c++ file"
set new("save")  "restore"
set new("123")  "-111truefalseokay"

set test "set weird attribute names"
foreach name [array names new] {
   set value $new($name)
   set result [sid_cmd "sid::component::set_attribute_value $victim [list $name] [list $value]"]             
   if {$result != "ok"} then { fail $test ; return } 
}
pass $test

set test "check testing attribute list"
sid_assert_includes_all "sid::component::attribute_names $victim" [array names new]

set test "retrieve testing attributes"
foreach name [array names new] {
   set value $new($name)
   set result [sid_cmd "sid::component::attribute_value $victim [list $name]"]
   if {$result != $value} then { fail "$test - $result vs $value"; return }
}
pass $test      

set test "set 1000 attributes"
for {set i 1} {$i < 1002} {incr i} {
   set name "attr-$i"
   set result [sid_cmd "sid::component::set_attribute_value $victim [list $name] [list $i]"]             
   if {$result != "ok"} then { fail $test ; return } 
}
pass $test

set test "check attributes after setting"
for {set i 1} {$i < 1002} {incr i} {
   set name "attr-$i"
   set val [sid_cmd "sid::component::attribute_value $victim [list $name] "]
   if {$val != $i} then { fail $test ; return } 
}
pass $test

set test "adding another 1000 attributes"
for {set i 1002} {$i < 2002} {incr i} {
   set name "attr-$i"
   set result [sid_cmd "sid::component::set_attribute_value $victim [list $name] [list $i]"]             
   if {$result != "ok"} then { fail $test ; return } 
}
pass $test

set test "check attributes after setting"
for {set i 1} {$i < 2002} {incr i} {
   set name "attr-$i"
   set val [sid_cmd "sid::component::attribute_value $victim [list $name]"]
   if {$val != $i} then { fail $test ; return } 
}
pass $test

set test "check values for unknown attributes"
foreach name {unknown attr--1 attr-20020 new_attrib sw-glue-attribbank} {
   set val [sid_cmd "sid::component::attribute_value $victim [list $name] "]
   if {$val != ""} then { fail $test ; return } 
}
pass $test

set test "check some attribute list after trying to get unknown attribute values"
sid_assert_includes_all "sid::component::attribute_names $victim" [array names new]


set test "sid stop"
if [sid_stop] then { pass $test } else { fail $test ; return }


# zap temp file if tests were successful 
global exit_status
if {$exit_status == "0"} then { file delete "attribb1.conf" }
@


1.1
log
@* public snapshot of sid simulator
@
text
@d3 1
a3 1
    "load [sid_find_file libglue.la] glue_component_library" \
@

