head	1.2;
access;
symbols
	sid-snapshot-20180601:1.2
	sid-snapshot-20180501:1.2
	sid-snapshot-20180401:1.2
	sid-snapshot-20180301:1.2
	sid-snapshot-20180201:1.2
	sid-snapshot-20180101:1.2
	sid-snapshot-20171201:1.2
	sid-snapshot-20171101:1.2
	sid-snapshot-20171001:1.2
	sid-snapshot-20170901:1.2
	sid-snapshot-20170801:1.2
	sid-snapshot-20170701:1.2
	sid-snapshot-20170601:1.2
	sid-snapshot-20170501:1.2
	sid-snapshot-20170401:1.2
	sid-snapshot-20170301:1.2
	sid-snapshot-20170201:1.2
	sid-snapshot-20170101:1.2
	sid-snapshot-20161201:1.2
	sid-snapshot-20161101:1.2
	sid-snapshot-20160901:1.2
	sid-snapshot-20160801:1.2
	sid-snapshot-20160701:1.2
	sid-snapshot-20160601:1.2
	sid-snapshot-20160501:1.2
	sid-snapshot-20160401:1.2
	sid-snapshot-20160301:1.2
	sid-snapshot-20160201:1.2
	sid-snapshot-20160101:1.2
	sid-snapshot-20151201:1.2
	sid-snapshot-20151101:1.2
	sid-snapshot-20151001:1.2
	sid-snapshot-20150901:1.2
	sid-snapshot-20150801:1.2
	sid-snapshot-20150701:1.2
	sid-snapshot-20150601:1.2
	sid-snapshot-20150501:1.2
	sid-snapshot-20150401:1.2
	sid-snapshot-20150301:1.2
	sid-snapshot-20150201:1.2
	sid-snapshot-20150101:1.2
	sid-snapshot-20141201:1.2
	sid-snapshot-20141101:1.2
	sid-snapshot-20141001:1.2
	sid-snapshot-20140901:1.2
	sid-snapshot-20140801:1.2
	sid-snapshot-20140701:1.2
	sid-snapshot-20140601:1.2
	sid-snapshot-20140501:1.2
	sid-snapshot-20140401:1.2
	sid-snapshot-20140301:1.2
	sid-snapshot-20140201:1.2
	sid-snapshot-20140101:1.2
	sid-snapshot-20131201:1.2
	sid-snapshot-20131101:1.2
	sid-snapshot-20131001:1.2
	sid-snapshot-20130901:1.2
	sid-snapshot-20130801:1.2
	sid-snapshot-20130701:1.2
	sid-snapshot-20130601:1.2
	sid-snapshot-20130501:1.2
	sid-snapshot-20130401:1.2
	sid-snapshot-20130301:1.2
	sid-snapshot-20130201:1.2
	sid-snapshot-20130101:1.2
	sid-snapshot-20121201:1.2
	sid-snapshot-20121101:1.2
	sid-snapshot-20121001:1.2
	sid-snapshot-20120901:1.2
	sid-snapshot-20120801:1.2
	sid-snapshot-20120701:1.2
	sid-snapshot-20120601:1.2
	sid-snapshot-20120501:1.2
	sid-snapshot-20120401:1.2
	sid-snapshot-20120301:1.2
	sid-snapshot-20120201:1.2
	sid-snapshot-20120101:1.2
	sid-snapshot-20111201:1.2
	sid-snapshot-20111101:1.2
	sid-snapshot-20111001:1.2
	sid-snapshot-20110901:1.2
	sid-snapshot-20110801:1.2
	sid-snapshot-20110701:1.2
	sid-snapshot-20110601:1.2
	sid-snapshot-20110501:1.2
	sid-snapshot-20110401:1.2
	sid-snapshot-20110301:1.2
	sid-snapshot-20110201:1.2
	sid-snapshot-20110101:1.2
	sid-snapshot-20101201:1.2
	sid-snapshot-20101101:1.2
	sid-snapshot-20101001:1.2
	sid-snapshot-20100901:1.2
	sid-snapshot-20100801:1.2
	sid-snapshot-20100701:1.2
	sid-snapshot-20100601:1.2
	sid-snapshot-20100501:1.2
	sid-snapshot-20100401:1.2
	sid-snapshot-20100301:1.2
	sid-snapshot-20100201:1.2
	sid-snapshot-20100101:1.2
	sid-snapshot-20091201:1.2
	sid-snapshot-20091101:1.2
	sid-snapshot-20091001:1.2
	sid-snapshot-20090901:1.2
	sid-snapshot-20090801:1.2
	sid-snapshot-20090701:1.2
	sid-snapshot-20090601:1.2
	sid-snapshot-20090501:1.2
	sid-snapshot-20090401:1.2
	sid-snapshot-20090301:1.2
	sid-snapshot-20090201:1.2
	sid-snapshot-20090101:1.2
	sid-snapshot-20081201:1.2
	sid-snapshot-20081101:1.2
	sid-snapshot-20081001:1.2
	sid-snapshot-20080901:1.2
	sid-snapshot-20080801:1.2
	sid-snapshot-20080701:1.2
	sid-snapshot-20080601:1.2
	sid-snapshot-20080501:1.2
	sid-snapshot-20080403:1.2
	sid-snapshot-20080401:1.2
	sid-snapshot-20080301:1.2
	sid-snapshot-20080201:1.2
	sid-snapshot-20080101:1.2
	sid-snapshot-20071201:1.2
	sid-snapshot-20071101:1.2
	sid-snapshot-20071001:1.2
	sid-20020905-branchpoint:1.2
	sid-20020905-branch:1.2.0.2
	cygnus_cvs_20020108_pre:1.2;
locks; strict;
comment	@# @;


1.2
date	2001.07.13.15.19.09;	author fche;	state Exp;
branches;
next	1.1;

1.1
date	2000.12.07.19.31.01;	author fche;	state Exp;
branches;
next	;


desc
@@


1.2
log
@* test suite cleanup

2001-07-13  Frank Ch. Eigler  <fche@@redhat.com>

	* config/default.exp: Stop using [sid_find_file] for component libs.
	Forget about mksid.
	* sidcomp.*/*.exp: Stop using [sid_find_file] to find component
	shared libraries for "load" cmds in sid configuration files.
@
text
@set test "sid configuration"
sid_config_component_test_with_tracing "idetrig.conf" \
    "load libide.la ide_component_library" \
    "hw-disk-ide"
pass $test

set test "sid startup"
if [sid_start "idetrig.conf"] then { pass $test } else { fail $test ; return }

set test "fetch attribute categories"
set attrs [sid_cmd "sid::component::attribute_names $victim"]
set watchables [sid_cmd "sid::component::attribute_names_in_category $victim watchable"]
set registers [sid_cmd "sid::component::attribute_names_in_category $victim register"]
set pins [sid_cmd "sid::component::attribute_names_in_category $victim pin"]
if {$attrs != "" && $watchables != "" && $registers != "" && $pins != ""} then { pass $test } else { fail $test }

set test "prepare watch signalling pins"
set watch1_pin [sid_cmd "sid::pin::new"]
sid_cmd "set watch1_count 0"
set watch2_pin [sid_cmd "sid::pin::new"]
sid_cmd "set watch2_count 0"
sid_cmd "set hook_driven_h4($watch1_pin) { global watch1_count ; incr watch1_count }"
sid_cmd "set hook_driven_h4($watch2_pin) { global watch2_count ; incr watch2_count }"
set command_bus [sid_cmd "sid::component::find_bus $victim command-block-bus"]
set control_bus [sid_cmd "sid::component::find_bus $victim control-block-bus"]
if {$watch1_pin != "" && $watch2_pin != "" 
    && $command_bus != "" && $control_bus != ""} then { pass $test } else { fail $test }

set test "obsolete watch pin syntax"
set status [sid_cmd "sid::component::connect_pin $victim {watch-sector%2Dcount-change} $watch1_pin"]
if {$status == "not_found"} then { pass $test } else { fail $test }

set test "watch an ordinary passive r/w attribute for changes"
sid_cmd "sid::bus::write_h4_l1 $command_bus 2 00"
set status [sid_cmd "sid::component::connect_pin $victim {watch:sector%2Dcount:change} $watch1_pin"]
set v1 [sid_cmd "set watch1_count"]
sid_cmd "sid::bus::write_h4_l1 $command_bus 2 01"
set v2 [sid_cmd "set watch1_count"]
sid_cmd "sid::bus::write_h4_l1 $command_bus 2 01"
set v3 [sid_cmd "set watch1_count"]
sid_cmd "sid::bus::write_h4_l1 $command_bus 2 02"
set v4 [sid_cmd "set watch1_count"]
if {$status == "ok" && $v1 == 0 && $v2 == 1 && $v3 == 1 && $v4 == 2} then { pass $test } else { fail $test }

set test "stop watching it"
set status [sid_cmd "sid::component::disconnect_pin $victim {watch:sector%2Dcount:change} $watch1_pin"]
sid_cmd "sid::bus::write_h4_l1 $command_bus 2 03"
sid_cmd "sid::bus::write_h4_l1 $command_bus 2 04"
sid_cmd "sid::bus::write_h4_l1 $command_bus 2 05"
set v5 [sid_cmd "set watch1_count"]
if {$status == "ok" && $v5 == $v4} then { pass $test } else { fail $test }

set test "watch an ordinary passive r/w register for mask/value match"
set status [sid_cmd "sid::component::connect_pin $victim {watch:cylinder%2Dlow:mask/value:0x0F:0x07} $watch2_pin"]
set v1 [sid_cmd "set watch2_count"]
sid_cmd "sid::bus::write_h4_l1 $command_bus 4 0x37"
set v2 [sid_cmd "set watch2_count"]
sid_cmd "sid::bus::write_h4_l1 $command_bus 4 0x09"
set v3 [sid_cmd "set watch2_count"]
sid_cmd "sid::bus::write_h4_l1 $command_bus 4 0x19"
set v4 [sid_cmd "set watch2_count"]
sid_cmd "sid::bus::write_h4_l1 $command_bus 4 0x17"
set v5 [sid_cmd "set watch2_count"]
sid_cmd "sid::bus::write_h4_l1 $command_bus 4 0x17"
set v6 [sid_cmd "set watch2_count"]
if {$status == "ok" && $v1 == 0 && $v2 == 1 && $v3 == 1 && $v4 == 1 && $v5 == 2 && $v6 == 2} then { pass $test } else { fail $test }


set test "stop watching that too"
set status [sid_cmd "sid::component::disconnect_pin $victim {watch:cylinder%2Dlow:mask/value:0x0F:0x07} $watch2_pin"]
sid_cmd "sid::bus::write_h4_l1 $command_bus 4 0x09"
sid_cmd "sid::bus::write_h4_l1 $command_bus 4 0x19"
sid_cmd "sid::bus::write_h4_l1 $command_bus 4 0x17"
set v7 [sid_cmd "set watch2_count"]
if {$status == "ok" && $v7 == $v6} then { pass $test } else { fail $test }


set test "watch same register with several separate triggerpoints"
set s1 [sid_cmd "sid::component::connect_pin $victim {watch:cylinder%2Dlow:mask/value:0x0F:0x04} $watch1_pin"]
set s2 [sid_cmd "sid::component::connect_pin $victim {watch:cylinder%2Dlow:value:0x05} $watch2_pin"]
sid_cmd "set watch1_count 0"
sid_cmd "set watch2_count 0"
sid_cmd "sid::bus::write_h4_l1 $command_bus 4 0x04"
set v1a [sid_cmd "set watch1_count"]
set v2a [sid_cmd "set watch2_count"]
sid_cmd "sid::bus::write_h4_l1 $command_bus 4 0x05"
set v1b [sid_cmd "set watch1_count"]
set v2b [sid_cmd "set watch2_count"]
sid_cmd "sid::bus::write_h4_l1 $command_bus 4 0x08"
set v1c [sid_cmd "set watch1_count"]
set v2c [sid_cmd "set watch2_count"]
sid_cmd "sid::bus::write_h4_l1 $command_bus 4 0x54"
set v1d [sid_cmd "set watch1_count"]
set v2d [sid_cmd "set watch2_count"]
if {$s1 == "ok" && $s2 == "ok" &&
    $v1a == 1 && $v2a == 0 &&
    $v1b == 1 && $v2b == 1 &&
    $v1c == 1 && $v2b == 1 &&
    $v1d == 2 && $v2b == 1} then { pass $test } else { fail $test }


set test "sid stop"
if [sid_stop] then { pass $test } else { fail $test ; return }


# zap temp file if tests were successful 
global exit_status
if {$exit_status == "0"} then { file delete "idetrig.conf" }
@


1.1
log
@* public snapshot of sid simulator
@
text
@d3 1
a3 1
    "load [sid_find_file libide.la] ide_component_library" \
@

