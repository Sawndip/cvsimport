head	1.2;
access;
symbols
	sid-snapshot-20180601:1.2
	sid-snapshot-20180501:1.2
	sid-snapshot-20180401:1.2
	sid-snapshot-20180301:1.2
	sid-snapshot-20180201:1.2
	sid-snapshot-20180101:1.2
	sid-snapshot-20171201:1.2
	sid-snapshot-20171101:1.2
	sid-snapshot-20171001:1.2
	sid-snapshot-20170901:1.2
	sid-snapshot-20170801:1.2
	sid-snapshot-20170701:1.2
	sid-snapshot-20170601:1.2
	sid-snapshot-20170501:1.2
	sid-snapshot-20170401:1.2
	sid-snapshot-20170301:1.2
	sid-snapshot-20170201:1.2
	sid-snapshot-20170101:1.2
	sid-snapshot-20161201:1.2
	sid-snapshot-20161101:1.2
	sid-snapshot-20160901:1.2
	sid-snapshot-20160801:1.2
	sid-snapshot-20160701:1.2
	sid-snapshot-20160601:1.2
	sid-snapshot-20160501:1.2
	sid-snapshot-20160401:1.2
	sid-snapshot-20160301:1.2
	sid-snapshot-20160201:1.2
	sid-snapshot-20160101:1.2
	sid-snapshot-20151201:1.2
	sid-snapshot-20151101:1.2
	sid-snapshot-20151001:1.2
	sid-snapshot-20150901:1.2
	sid-snapshot-20150801:1.2
	sid-snapshot-20150701:1.2
	sid-snapshot-20150601:1.2
	sid-snapshot-20150501:1.2
	sid-snapshot-20150401:1.2
	sid-snapshot-20150301:1.2
	sid-snapshot-20150201:1.2
	sid-snapshot-20150101:1.2
	sid-snapshot-20141201:1.2
	sid-snapshot-20141101:1.2
	sid-snapshot-20141001:1.2
	sid-snapshot-20140901:1.2
	sid-snapshot-20140801:1.2
	sid-snapshot-20140701:1.2
	sid-snapshot-20140601:1.2
	sid-snapshot-20140501:1.2
	sid-snapshot-20140401:1.2
	sid-snapshot-20140301:1.2
	sid-snapshot-20140201:1.2
	sid-snapshot-20140101:1.2
	sid-snapshot-20131201:1.2
	sid-snapshot-20131101:1.2
	sid-snapshot-20131001:1.2
	sid-snapshot-20130901:1.2
	sid-snapshot-20130801:1.2
	sid-snapshot-20130701:1.2
	sid-snapshot-20130601:1.2
	sid-snapshot-20130501:1.2
	sid-snapshot-20130401:1.2
	sid-snapshot-20130301:1.2
	sid-snapshot-20130201:1.2
	sid-snapshot-20130101:1.2
	sid-snapshot-20121201:1.2
	sid-snapshot-20121101:1.2
	sid-snapshot-20121001:1.2
	sid-snapshot-20120901:1.2
	sid-snapshot-20120801:1.2
	sid-snapshot-20120701:1.2
	sid-snapshot-20120601:1.2
	sid-snapshot-20120501:1.2
	sid-snapshot-20120401:1.2
	sid-snapshot-20120301:1.2
	sid-snapshot-20120201:1.2
	sid-snapshot-20120101:1.2
	sid-snapshot-20111201:1.2
	sid-snapshot-20111101:1.2
	sid-snapshot-20111001:1.2
	sid-snapshot-20110901:1.2
	sid-snapshot-20110801:1.2
	sid-snapshot-20110701:1.2
	sid-snapshot-20110601:1.2
	sid-snapshot-20110501:1.2
	sid-snapshot-20110401:1.2
	sid-snapshot-20110301:1.2
	sid-snapshot-20110201:1.2
	sid-snapshot-20110101:1.2
	sid-snapshot-20101201:1.2
	sid-snapshot-20101101:1.2
	sid-snapshot-20101001:1.2
	sid-snapshot-20100901:1.2
	sid-snapshot-20100801:1.2
	sid-snapshot-20100701:1.2
	sid-snapshot-20100601:1.2
	sid-snapshot-20100501:1.2
	sid-snapshot-20100401:1.2
	sid-snapshot-20100301:1.2
	sid-snapshot-20100201:1.2
	sid-snapshot-20100101:1.2
	sid-snapshot-20091201:1.2
	sid-snapshot-20091101:1.2
	sid-snapshot-20091001:1.2
	sid-snapshot-20090901:1.2
	sid-snapshot-20090801:1.2
	sid-snapshot-20090701:1.2
	sid-snapshot-20090601:1.2
	sid-snapshot-20090501:1.2
	sid-snapshot-20090401:1.2
	sid-snapshot-20090301:1.2
	sid-snapshot-20090201:1.2
	sid-snapshot-20090101:1.2
	sid-snapshot-20081201:1.2
	sid-snapshot-20081101:1.2
	sid-snapshot-20081001:1.2
	sid-snapshot-20080901:1.2
	sid-snapshot-20080801:1.2
	sid-snapshot-20080701:1.2
	sid-snapshot-20080601:1.2
	sid-snapshot-20080501:1.2
	sid-snapshot-20080403:1.2
	sid-snapshot-20080401:1.2
	sid-snapshot-20080301:1.2
	sid-snapshot-20080201:1.2
	sid-snapshot-20080101:1.2
	sid-snapshot-20071201:1.2
	sid-snapshot-20071101:1.2
	sid-snapshot-20071001:1.2
	sid-20020905-branchpoint:1.2
	sid-20020905-branch:1.2.0.2
	cygnus_cvs_20020108_pre:1.2;
locks; strict;
comment	@# @;


1.2
date	2001.07.13.15.19.09;	author fche;	state Exp;
branches;
next	1.1;

1.1
date	2000.12.07.19.30.59;	author fche;	state Exp;
branches;
next	;


desc
@@


1.2
log
@* test suite cleanup

2001-07-13  Frank Ch. Eigler  <fche@@redhat.com>

	* config/default.exp: Stop using [sid_find_file] for component libs.
	Forget about mksid.
	* sidcomp.*/*.exp: Stop using [sid_find_file] to find component
	shared libraries for "load" cmds in sid configuration files.
@
text
@# Testsuite for the socket server
#
# Copyright (C) 1999 Red Hat

set test "sid configuration"
sid_config_component_test_with_tracing "server2.conf" \
    "load libconsoles.la console_component_library" \
    "sid-io-socket-server" 
pass $test

set test "sid start"
if {[sid_start "server2.conf"]} { pass $test } else { fail $test ; return }

set test "find pin that does not exist"
set pin [sid_cmd "sid::component::find_pin $victim pin"]
if {$pin == ""} then { pass $test } else { fail $test }

set test "connect to a pin that does not exist"
set pin [sid_cmd "sid::pin::new"] 
set status [sid_cmd "sid::component::connect_pin $victim input $pin"]
if {$status == "not_found"} then { pass $test } else { fail $test }

set test "check connected pins on a pin that does not exist"
set pin [sid_cmd "sid::component::connected_pins $victim input2"]
if {$pin == ""} then { pass $test } else { fail $test }

set test "check disconnecting pin on a pin that does not exist"
set pin [sid_cmd "sid::pin::new"] 
set status [sid_cmd "sid::component::disconnect_pin $victim input $pin"]
if {$status == "not_found"} then { pass $test } else { fail $test }

set test "find bus that does not exist"
set pin [sid_cmd "sid::component::find_bus $victim bus"]
if {$pin == ""} then { pass $test } else { fail $test }

set test "connect to an accessor that does not exist"
set bus [sid_cmd "sid::bus::new"] 
set status [sid_cmd "sid::component::connect_accessor $victim bus1 $bus"]
if {$status == "not_found"} then { pass $test } else { fail $test }

set test "check connected bus on a bus that does not exist"
set bus2 [sid_cmd "sid::component::connected_bus $victim bus2"]
if {$bus2 == ""} then { pass $test } else { fail $test }

set test "set relationships that does not exist"
set status [sid_cmd "sid::component::relate $victim any $victim"]
if {$status == "not_found"} then { pass $test } else { fail $test }

set test "set relationships to relate to a non existing component"
set status [sid_cmd "sid::component::relate $victim relationship $victim"]
if {$status == "not_found"} then { pass $test } else { fail $test }

set test "query relationships that does not exist"
set comps [sid_cmd "sid::component::related_components $victim rel"]
if {$comps == ""} then { pass $test } else { fail $test }

set test "set non existing attribute to -1"
set status [sid_cmd "sid::component::set_attribute_value $victim new -1" ]
if {$status == "not_found"} then { pass $test } else { fail $test }

foreach num_attr {tx-count rx-count poll-count max-poll-interval poll-interval} {
   foreach badval {-1 "127.0.0.0:xxx" true 0.0e0 } {
      set test "set attribute $num_attr to $badval"
      set status [sid_cmd "sid::component::set_attribute_value $victim $num_attr $badval"]
      if {$num_attr == "max-poll-interval" && $badval == "-1" || $num_attr == "poll-interval" && $badval == "-1"} {
         if {$status == "ok"} then {pass $test} else { fail $test}
      } else {
         if {$status == "bad_value"} then {pass $test} else { fail $test}
      }
  } 
}

foreach bool_attr {server? verbose? trace-traffic? buffer-while-disconnected? connected?} {
   foreach badval {-1 "127.0.0.0:xxx" 123e5 string} {
      set test "set attribute $bool_attr to $badval"
      set status [sid_cmd "sid::component::set_attribute_value $victim $bool_attr $badval"]
      if {$status == "bad_value"} then {pass $test} else { fail $test}
  } 
}

foreach addr_attr {sockaddr-local sockaddr-peer} {
   foreach badval {-1 "127.0.0.0:xxx" 123e5 string on "a.b.c.d:e"} {
      set test "set attribute $addr_attr to $badval"
      set status [sid_cmd "sid::component::set_attribute_value $victim $addr_attr $badval"]
      if {$status == "bad_value"} then {pass $test} else { fail $test}
  } 
}

foreach pin_attr {init fini tx rx} {
   foreach badval {"127.0.0.0:111" 123e5 string on} {
      set test "set attribute $pin_attr to $badval"
      set status [sid_cmd "sid::component::set_attribute_value $victim $pin_attr $badval"]
      if {$status == "bad_value"} then {pass $test} else { fail $test}
  } 
}

foreach ro_attr {tx-count tx-buffer rx-count poll-count avg-tx-buffer-size sockaddr-peer connected?} {
   foreach badval {123 1.1 "127.0.0.1:123" yes} {
      set test "set attribute $ro_attr to $badval"
      set status [sid_cmd "sid::component::set_attribute_value $victim $ro_attr $badval"]
      if {$status == "bad_value"} then {pass $test} else { fail $test}
  } 
}

set test "try driving fini pin before driving init pin"
set fini [sid_cmd "sid::component::find_pin $victim fini"]
sid_assert_success "sid::pin::driven_h4 $fini 1"
if {$fini != "" } then { pass $test } else { fail $test }

foreach value {-1 0 255 256} {
   set test "try driving tx pin with $value when there is no connection"
   set tx [sid_cmd "sid::component::find_pin $victim tx"]
   sid_assert_success "sid::pin::driven_h4 $tx $value"
}


set test "sid stop"
if [sid_stop] then { pass $test } else { fail $test ; return }


# zap temp file if tests were successful 
global exit_status
if {$exit_status == "0"} then { file delete "server2.conf" }
@


1.1
log
@* public snapshot of sid simulator
@
text
@d7 1
a7 1
    "load [sid_find_file libconsoles.la] console_component_library" \
@

