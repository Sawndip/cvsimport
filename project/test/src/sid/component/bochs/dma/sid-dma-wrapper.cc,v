head	1.2;
access;
symbols
	sid-snapshot-20180601:1.2
	sid-snapshot-20180501:1.2
	sid-snapshot-20180401:1.2
	sid-snapshot-20180301:1.2
	sid-snapshot-20180201:1.2
	sid-snapshot-20180101:1.2
	sid-snapshot-20171201:1.2
	sid-snapshot-20171101:1.2
	sid-snapshot-20171001:1.2
	sid-snapshot-20170901:1.2
	sid-snapshot-20170801:1.2
	sid-snapshot-20170701:1.2
	sid-snapshot-20170601:1.2
	sid-snapshot-20170501:1.2
	sid-snapshot-20170401:1.2
	sid-snapshot-20170301:1.2
	sid-snapshot-20170201:1.2
	sid-snapshot-20170101:1.2
	sid-snapshot-20161201:1.2
	sid-snapshot-20161101:1.2
	sid-snapshot-20160901:1.2
	sid-snapshot-20160801:1.2
	sid-snapshot-20160701:1.2
	sid-snapshot-20160601:1.2
	sid-snapshot-20160501:1.2
	sid-snapshot-20160401:1.2
	sid-snapshot-20160301:1.2
	sid-snapshot-20160201:1.2
	sid-snapshot-20160101:1.2
	sid-snapshot-20151201:1.2
	sid-snapshot-20151101:1.2
	sid-snapshot-20151001:1.2
	sid-snapshot-20150901:1.2
	sid-snapshot-20150801:1.2
	sid-snapshot-20150701:1.2
	sid-snapshot-20150601:1.2
	sid-snapshot-20150501:1.2
	sid-snapshot-20150401:1.2
	sid-snapshot-20150301:1.2
	sid-snapshot-20150201:1.2
	sid-snapshot-20150101:1.2
	sid-snapshot-20141201:1.2
	sid-snapshot-20141101:1.2
	sid-snapshot-20141001:1.2
	sid-snapshot-20140901:1.2
	sid-snapshot-20140801:1.2
	sid-snapshot-20140701:1.2
	sid-snapshot-20140601:1.2
	sid-snapshot-20140501:1.2
	sid-snapshot-20140401:1.2
	sid-snapshot-20140301:1.2
	sid-snapshot-20140201:1.2
	sid-snapshot-20140101:1.2
	sid-snapshot-20131201:1.2
	sid-snapshot-20131101:1.2
	sid-snapshot-20131001:1.2
	sid-snapshot-20130901:1.2
	sid-snapshot-20130801:1.2
	sid-snapshot-20130701:1.2
	sid-snapshot-20130601:1.2
	sid-snapshot-20130501:1.2
	sid-snapshot-20130401:1.2
	sid-snapshot-20130301:1.2
	sid-snapshot-20130201:1.2
	sid-snapshot-20130101:1.2
	sid-snapshot-20121201:1.2
	sid-snapshot-20121101:1.2
	sid-snapshot-20121001:1.2
	sid-snapshot-20120901:1.2
	sid-snapshot-20120801:1.2
	sid-snapshot-20120701:1.2
	sid-snapshot-20120601:1.2
	sid-snapshot-20120501:1.2
	sid-snapshot-20120401:1.2
	sid-snapshot-20120301:1.2
	sid-snapshot-20120201:1.2
	sid-snapshot-20120101:1.2
	sid-snapshot-20111201:1.2
	sid-snapshot-20111101:1.2
	sid-snapshot-20111001:1.2
	sid-snapshot-20110901:1.2
	sid-snapshot-20110801:1.2
	sid-snapshot-20110701:1.2
	sid-snapshot-20110601:1.2
	sid-snapshot-20110501:1.2
	sid-snapshot-20110401:1.2
	sid-snapshot-20110301:1.2
	sid-snapshot-20110201:1.2
	sid-snapshot-20110101:1.2
	sid-snapshot-20101201:1.2
	sid-snapshot-20101101:1.2
	sid-snapshot-20101001:1.2
	sid-snapshot-20100901:1.2
	sid-snapshot-20100801:1.2
	sid-snapshot-20100701:1.2
	sid-snapshot-20100601:1.2
	sid-snapshot-20100501:1.2
	sid-snapshot-20100401:1.2
	sid-snapshot-20100301:1.2
	sid-snapshot-20100201:1.2
	sid-snapshot-20100101:1.2
	sid-snapshot-20091201:1.2
	sid-snapshot-20091101:1.2
	sid-snapshot-20091001:1.2
	sid-snapshot-20090901:1.2
	sid-snapshot-20090801:1.2
	sid-snapshot-20090701:1.2
	sid-snapshot-20090601:1.2
	sid-snapshot-20090501:1.2
	sid-snapshot-20090401:1.2
	sid-snapshot-20090301:1.2
	sid-snapshot-20090201:1.2
	sid-snapshot-20090101:1.2
	sid-snapshot-20081201:1.2
	sid-snapshot-20081101:1.2
	sid-snapshot-20081001:1.2
	sid-snapshot-20080901:1.2
	sid-snapshot-20080801:1.2
	sid-snapshot-20080701:1.2
	sid-snapshot-20080601:1.2
	sid-snapshot-20080501:1.2
	sid-snapshot-20080403:1.2
	sid-snapshot-20080401:1.2
	sid-snapshot-20080301:1.2
	sid-snapshot-20080201:1.2
	sid-snapshot-20080101:1.2
	sid-snapshot-20071201:1.2
	sid-snapshot-20071101:1.2
	sid-snapshot-20071001:1.2
	sid-20020905-branchpoint:1.2
	sid-20020905-branch:1.2.0.2;
locks; strict;
comment	@// @;


1.2
date	2002.03.04.23.33.02;	author fitzsim;	state Exp;
branches;
next	1.1;

1.1
date	2002.02.15.01.18.46;	author fitzsim;	state Exp;
branches;
next	;


desc
@@


1.2
log
@	* Makefile.am (SUBDIRLIST): Add harddrv.
	(SUBLIBLIST): Add harddrv/libharddrv.la.
	(INCLUDES): Add harddrv.
	* bochs.h: Include harddrv.h header.
	* components.cxx: Add hw-disk-harddrive type.
	* configure.in (AC_OUTPUT): Add harddrv/Makefile.
	* cmos/sid-cmos-wrapper.cc: Remove cmos_irq_number,
	use_host_time and start_time attributes.
	Add base_memory_in_k, extended_memory_in_k attributes.
	Remove get_time function.
	* cpu/cpu.cc: Change mem->read_physical calls to access_linear
	calls.
	* cpu/cpu.h: Change _16_bit_base_reg references to
	a_16_bit_base_reg, to prevent compiler warnings on some hosts.
	* cpu/init.cc: Likewise.
	* cpu/proc_ctrl.cc: Add RDTSC implementation.
	* floppy/sid-floppy-wrapper.cc: Split up io memory range so that
	3f6 is left for hard drive.
	Add command-delay attribute.
	* keyboard/keyboard.cc: Handle reads from, and writes to port
	0x92.
	* keyboard/sid-keyboard-wrapper.cc: Add serial-delay attribute.
	* pic/sid-pic-wrapper.cc: Change implementation; provide one pin
	per irq, rather than one irq-number pin.
	* vga/sid-vga-wrapper.cc: Fix cmos writing bug.
	* vga/vga.cc: Add BX_SUPPORT_SID ifdefs, so that diffs between
	this file and the bochs version are clearer.
@
text
@// sid-dma-wrapper.cc - SID import of the bochs dma component.  -*- C++ -*-

// Copyright (C) 1999, 2000, 2001, 2002 Red Hat.
// This file is part of SID and is licensed under the GPL.
// See the file COPYING.SID for conditions for redistribution.

#include "sid-dma-wrapper.h"

dma::dma ()
    : init_pin(this, & dma::init),
      hold_acknowledge_pin(this, & dma::hold_acknowledge),
      ports_0x00_0x0f_bus(this, & dma::read_port_0x00_0x0f, & dma::write_port_0x00_0x0f),
      ports_0x81_0x8d_bus(this, & dma::read_port_0x81_0x8d, & dma::write_port_0x81_0x8d),
      port_0x8f_bus(this, & dma::read_port_0x8f, & dma::write_port_0x8f),
      ports_0xc0_0xde_bus(this, & dma::read_port_0xc0_0xde, & dma::write_port_0xc0_0xde),
      channels_bus(this, & dma::channel_read_request, & dma::channel_write_request)
{
  add_pin("hold-request", & this->hold_request_pin);
  add_pin("terminal-count", & this->terminal_count_pin);

  add_pin("init", & this->init_pin);
  add_pin("hold-acknowledge", & this->hold_acknowledge_pin);

  add_bus("ports-0x00-0x0f", & this->ports_0x00_0x0f_bus);
  add_bus("ports-0x81-0x8d", & this->ports_0x81_0x8d_bus);
  add_bus("port-0x8f", & this->port_0x8f_bus);
  add_bus("ports-0xc0-0xde", & this->ports_0xc0_0xde_bus);
  add_bus("channels", & this->channels_bus);

  add_pin("read-write", & this->read_write_pin);

  add_pin("channel-0", & this->channel_pin[0]);
  add_pin("channel-1", & this->channel_pin[1]);
  add_pin("channel-2", & this->channel_pin[2]);
  add_pin("channel-3", & this->channel_pin[3]);
  add_pin("channel-4", & this->channel_pin[4]);
  add_pin("channel-5", & this->channel_pin[5]);
  add_pin("channel-6", & this->channel_pin[6]);
  add_pin("channel-7", & this->channel_pin[7]);
}

void
dma::init(host_int_4)
{
  bx_dma.init(this);
  terminal_count_pin.drive(0);
}

void
dma::hold_acknowledge(host_int_4)
{
  bx_dma.raise_HLDA();
}

void
dma::drive_hold_request_pin(host_int_4 value)
{
  hold_request_pin.drive(value);
}

void
dma::drive_terminal_count_pin(host_int_4 value)
{
  terminal_count_pin.drive(value);
}

void
dma::drive_channel_pin(host_int_4 channel, host_int_4 value, bool read_mode)
{
  read_write_pin.drive(read_mode);

  channel_pin[channel].drive(value);
}

bus::status
dma::read_port_0x00_0x0f (host_int_4 addr, little_int_1 mask, little_int_1 & data)
{
  addr += 0x00;
  data = bx_dma.read(addr, 1);
  return bus::ok;
}

bus::status
dma::write_port_0x00_0x0f (host_int_4 addr, little_int_1 mask, little_int_1 data)
{
  addr += 0x00;
  bx_dma.write(addr, data, 1);
  return bus::ok;
}

bus::status
dma::read_port_0x81_0x8d (host_int_4 addr, little_int_1 mask, little_int_1 & data)
{
  addr += 0x81;
  data = bx_dma.read(addr, 1);
  return bus::ok;
}

bus::status
dma::write_port_0x81_0x8d (host_int_4 addr, little_int_1 mask, little_int_1 data)
{
  addr += 0x81;
  bx_dma.write(addr, data, 1);
  return bus::ok;
}

bus::status
dma::read_port_0x8f (host_int_4 addr, little_int_1 mask, little_int_1 & data)
{
  addr += 0x8f;
  data = bx_dma.read(addr, 1);
  return bus::ok;
}

bus::status
dma::write_port_0x8f (host_int_4 addr, little_int_1 mask, little_int_1 data)
{
  addr += 0x8f;
  bx_dma.write(addr, data, 1);
  return bus::ok;
}

bus::status
dma::read_port_0xc0_0xde (host_int_4 addr, little_int_1 mask, little_int_1 & data)
{
  addr += 0xc0;
  data = bx_dma.read(addr, 1);
  return bus::ok;
}

bus::status
dma::write_port_0xc0_0xde (host_int_4 addr, little_int_1 mask, little_int_1 data)
{
  addr += 0xc0;
  bx_dma.write(addr, data, 1);
  return bus::ok;
}

bus::status
dma::channel_read_request(host_int_4 channel, little_int_1 mask, little_int_1 &val)
{
  // not used
  val = 0;
  return bus::ok;
}

bus::status
dma::channel_write_request(host_int_4 channel, little_int_1 mask, little_int_1 val)
{
  bx_dma.DRQ(channel, val);
  return bus::ok;
}
@


1.1
log
@	* debug/debug.h: Move to top-level bochs directory.
	* debug: Remove directory.
	* pic/*: New files.
	* floppy/*: New files.
	* cmos/*: New files.
	* unmapped/*: New files.
	* dma/*: New files.
	* pit/*: New files.
	* cpu/x86.h: Rename to sid-x86-cpu-wrapper.h.
	* cpu/x86.cc: Rename to sid-x86-cpu-wrapper.cc.
	* cpu/x86-memory-modes.cc: Rename to sid-x86-memory-modes.cc.
	* memory/*: Move to cpu/memory/*.
	* fpu/*: Move to cpu/fpu/*.
	* bochs.h: Change #include's to reflect new and moved files.
	Add sid expansions for A20ADDR(x), BX_INP(addr, len),
	BX_OUTP(addr, val, len), BX_RAISE_HLDA(),
	BX_SET_ENABLE_A20(enabled), BX_GET_ENABLE_A20(), and
	BX_NULL_TIMER_HANDLE.
	* components.cxx: Add support for cmos, dma, pic, pit, floppy,
	unmapped.
	* config.h.in: Set BX_SUPPORT_TASKING, BX_DMA_FLOPPY_IO and
	BX_SUPPORT_A20 to 1 by default.
	Set SMF macros to 0 for cmos, dma, pic, pit, floppy and unmapped
	components.
	* configure.in: Add pic, pit, cmos, dma, floppy, and unmapped
	Makefiles to AC_OUTPUT.
	* cpu/exception-sid.cc: Remove.  Merge differences into
	cpu/exception.cc.
	* cpu/cpu-sid.h: Remove.  Merge differences into cpu/cpu.h.
	* cpu/cpu-sid.cc: Remove.  Merge differences into cpu/cpu.cc.
	* cpu/init-sid.cc: Remove.  Merge differences into cpu/init.cc.
	* cpu/soft_int-sid.cc: Remove.
	* cpu/debugstuff-sid.cc: Remove.  Merge differences into
	cpu/debugstuff.cc.
	* cpu/ctrl_xfer32-sid.cc: Remove.
	* cpu/fetchdecode-sid.cc: Remove.
	* cpu/Makefile.am: Remove references to removed files.
	(SUBDIRS) Add memory and fpu.
	(SUBLIBS) Add memory/libmemory.la and fpu/libfpu.la.
	(INCLUDES) Add memory and fpu directories.
	* cpu/cpu.cc: Remove BX_HRQ related FIXME's.
	Add interrupt pin support.
	* cpu/debugstuff.cc (BX_SUPPORT_SID): Add implementations of
	dbg_get_reg, dbg_set_reg, and dbg_get_eflags for when
	BX_DEBUGGER isn't defined.
	* cpu/io.cc: Remove #if 0's -- no longer needed.
	* cpu/io_pro.cc: Likewise.
	* gui/x-gui.cc: Change title bar messages.
	* keyboard/keyboard.cc: Change keyboard to remove serial delay
	pin.
	* keyboard/sid-keyboard-wrapper.cc: Add a20-related pins.
	Remove serial-delay pin.
	Add cmos accessor.
	Add trigger-irq pin.
	* keyboard/sid-keyboard-wrapper.h: Likewise.
	* vga/sid-vga-wrapper.cc: Rename buses from eg. 3b4 to 0x3b4.
	Import imagemmap code from generic.cxx.
	* vga/vga.cc: Cap number of rows at BX_MAX_TEXT_LINES.
	* Makefile.am (SUBDIRLIST): Add pic, pit, cmos, dma, floppy,
	unmapped.
	Removed fpu, memory.
	(SUBLIBLIST): Likewise.
	(INCLUDES): Likewise.
@
text
@d46 1
@

