head	1.1;
access;
symbols
	sid-snapshot-20180601:1.1
	sid-snapshot-20180501:1.1
	sid-snapshot-20180401:1.1
	sid-snapshot-20180301:1.1
	sid-snapshot-20180201:1.1
	sid-snapshot-20180101:1.1
	sid-snapshot-20171201:1.1
	sid-snapshot-20171101:1.1
	sid-snapshot-20171001:1.1
	sid-snapshot-20170901:1.1
	sid-snapshot-20170801:1.1
	sid-snapshot-20170701:1.1
	sid-snapshot-20170601:1.1
	sid-snapshot-20170501:1.1
	sid-snapshot-20170401:1.1
	sid-snapshot-20170301:1.1
	sid-snapshot-20170201:1.1
	sid-snapshot-20170101:1.1
	sid-snapshot-20161201:1.1
	sid-snapshot-20161101:1.1
	sid-snapshot-20160901:1.1
	sid-snapshot-20160801:1.1
	sid-snapshot-20160701:1.1
	sid-snapshot-20160601:1.1
	sid-snapshot-20160501:1.1
	sid-snapshot-20160401:1.1
	sid-snapshot-20160301:1.1
	sid-snapshot-20160201:1.1
	sid-snapshot-20160101:1.1
	sid-snapshot-20151201:1.1
	sid-snapshot-20151101:1.1
	sid-snapshot-20151001:1.1
	sid-snapshot-20150901:1.1
	sid-snapshot-20150801:1.1
	sid-snapshot-20150701:1.1
	sid-snapshot-20150601:1.1
	sid-snapshot-20150501:1.1
	sid-snapshot-20150401:1.1
	sid-snapshot-20150301:1.1
	sid-snapshot-20150201:1.1
	sid-snapshot-20150101:1.1
	sid-snapshot-20141201:1.1
	sid-snapshot-20141101:1.1
	sid-snapshot-20141001:1.1
	sid-snapshot-20140901:1.1
	sid-snapshot-20140801:1.1
	sid-snapshot-20140701:1.1
	sid-snapshot-20140601:1.1
	sid-snapshot-20140501:1.1
	sid-snapshot-20140401:1.1
	sid-snapshot-20140301:1.1
	sid-snapshot-20140201:1.1
	sid-snapshot-20140101:1.1
	sid-snapshot-20131201:1.1
	sid-snapshot-20131101:1.1
	sid-snapshot-20131001:1.1
	sid-snapshot-20130901:1.1
	sid-snapshot-20130801:1.1
	sid-snapshot-20130701:1.1
	sid-snapshot-20130601:1.1
	sid-snapshot-20130501:1.1
	sid-snapshot-20130401:1.1
	sid-snapshot-20130301:1.1
	sid-snapshot-20130201:1.1
	sid-snapshot-20130101:1.1
	sid-snapshot-20121201:1.1
	sid-snapshot-20121101:1.1
	sid-snapshot-20121001:1.1
	sid-snapshot-20120901:1.1
	sid-snapshot-20120801:1.1
	sid-snapshot-20120701:1.1
	sid-snapshot-20120601:1.1
	sid-snapshot-20120501:1.1
	sid-snapshot-20120401:1.1
	sid-snapshot-20120301:1.1
	sid-snapshot-20120201:1.1
	sid-snapshot-20120101:1.1
	sid-snapshot-20111201:1.1
	sid-snapshot-20111101:1.1
	sid-snapshot-20111001:1.1
	sid-snapshot-20110901:1.1
	sid-snapshot-20110801:1.1
	sid-snapshot-20110701:1.1
	sid-snapshot-20110601:1.1
	sid-snapshot-20110501:1.1
	sid-snapshot-20110401:1.1
	sid-snapshot-20110301:1.1
	sid-snapshot-20110201:1.1
	sid-snapshot-20110101:1.1
	sid-snapshot-20101201:1.1
	sid-snapshot-20101101:1.1
	sid-snapshot-20101001:1.1
	sid-snapshot-20100901:1.1
	sid-snapshot-20100801:1.1
	sid-snapshot-20100701:1.1
	sid-snapshot-20100601:1.1
	sid-snapshot-20100501:1.1
	sid-snapshot-20100401:1.1
	sid-snapshot-20100301:1.1
	sid-snapshot-20100201:1.1
	sid-snapshot-20100101:1.1
	sid-snapshot-20091201:1.1
	sid-snapshot-20091101:1.1
	sid-snapshot-20091001:1.1
	sid-snapshot-20090901:1.1
	sid-snapshot-20090801:1.1
	sid-snapshot-20090701:1.1
	sid-snapshot-20090601:1.1
	sid-snapshot-20090501:1.1
	sid-snapshot-20090401:1.1
	sid-snapshot-20090301:1.1
	sid-snapshot-20090201:1.1
	sid-snapshot-20090101:1.1
	sid-snapshot-20081201:1.1
	sid-snapshot-20081101:1.1
	sid-snapshot-20081001:1.1
	sid-snapshot-20080901:1.1
	sid-snapshot-20080801:1.1
	sid-snapshot-20080701:1.1
	sid-snapshot-20080601:1.1
	sid-snapshot-20080501:1.1
	sid-snapshot-20080403:1.1
	sid-snapshot-20080401:1.1
	sid-snapshot-20080301:1.1
	sid-snapshot-20080201:1.1
	sid-snapshot-20080101:1.1
	sid-snapshot-20071201:1.1
	sid-snapshot-20071101:1.1
	sid-snapshot-20071001:1.1
	sid-20020905-branchpoint:1.1
	sid-20020905-branch:1.1.0.2;
locks; strict;
comment	@ * @;


1.1
date	2002.01.23.20.52.02;	author fitzsim;	state Exp;
branches;
next	;


desc
@@


1.1
log
@	* Makefile.am (SUBDIRLIST): Add vga, gui.
	(SUBLIBLIST): Add vga/libvga.la, gui/libgui.la.
	(INCLUDES): Add vga, gui directories.
	* bochs.h: Include vga/vga.h.
	* configure.in: Add check for X11/Xos.h header.
	Add vga/Makefile and gui/Makefile to AC_OUTPUT.
	* config.h.in (BX_USE_VGA_SMF): Set to 0.
	(HAVE_X11_XOS_H): New define.
	* components.cxx (compX86ListTypes): Add types hw-video-vga,
	sid-io-vga.
	(compX86Create): Likewise.
	(compX86Delete): Handle deletion of x86_cpu, vga and x_gui components.

	* gui/Makefile.am: New file.
	* gui/Makefile.in: Likewise.
	* gui/dummy.cc: Likewise.
	* gui/icon_bochs.h: Likewise.
	* gui/x-gui.h: Likewise.
	* gui/x-gui.cc: Likewise.

	* vga/Makefile.am: New file.
	* vga/Makefile.in: Likewise.
	* vga/sid-vga-wrapper.cc: Likewise.
	* vga/sid-vga-wrapper.h: Likewise.
	* vga/tests/vga-test-bounce.c: Likewise.
	* vga/tests/vga-test-color.c: Likewise.
	* vga/tests/vga-test-draw.c: Likewise.
	* vga/tests/vga-test-modes.c: Likewise.
	* vga/vga.cc: Likewise.
	* vga/vga.cc: Likewise.
@
text
@#include <stdio.h>
#define WIDTH 80
/* Note: not the default 25: */
#define HEIGHT 37
#define PAUSE_LENGTH 50000

/* Cathode Ray Tube Controller Index Register */
/* These values are only valid when the vga controller is in color
   emulation mode (which the bochs one is by default) */
#define CRTC_INDEX_PORT (char *)0x03d4
/* Cathode Ray Tube Controller Registers */
#define CRTC_PORT (char *)0x03d5
/* Cathode Ray Tube Controller Maximum Scan Line Register */
#define CRTC_MSL_REG 9
#define CRTC_MSL_MASK 0x1f
/* Cathode Ray Tube Controller Vertical Display End Register */
#define CRTC_VDE_REG 18
/* Cathode Ray Tube Controller Overflow Register */
#define CRTC_OF_REG 7
#define CRTC_OF_VDE_BITS_MASK 0x42
/* Graphics Controller Index Register */
#define GCR_INDEX_PORT (char *)0x03ce
/* Graphics Controller Registers */
#define GCR_PORT (char *)0x03cf
/* Graphics Controller Miscellaneous Register */
#define GCR_MISC_REG 6
#define GCR_MEMORY_MAPPING_MASK 0x0c

void read_port (char *port_num, char *val);
void write_port (char *port_num, char val);

int
main()
{
  unsigned char *vga_mem_mode_3 = (unsigned char *)(0xb8000);
  unsigned char *vga_mem_mode_2 = (unsigned char *)(0xb0000);
  char old_overflow_reg;
  char old_vde_reg;
  char old_msl_reg;
  char old_misc_reg;
  int i;
  char memory_mapping = 3;
  char msl;
  char vde;
  char overflow_reg;

  printf("Changing Video Mode\n");
  write_port(GCR_INDEX_PORT, GCR_MISC_REG);
  read_port(GCR_PORT, &old_misc_reg);

  write_port(GCR_PORT, (old_misc_reg & ~GCR_MEMORY_MAPPING_MASK) | (memory_mapping << 2));

  write_port(CRTC_INDEX_PORT, CRTC_MSL_REG);
  read_port(CRTC_PORT, &old_msl_reg);
  msl = old_msl_reg & CRTC_MSL_MASK;

  vde = (HEIGHT * (msl + 1)) - 1;

  write_port(CRTC_INDEX_PORT, CRTC_VDE_REG);
  read_port(CRTC_PORT, &old_vde_reg);
  write_port(CRTC_PORT, vde & 0xff);

  write_port(CRTC_INDEX_PORT, CRTC_OF_REG);
  read_port(CRTC_PORT, &old_overflow_reg);

  write_port(CRTC_PORT,
             (old_overflow_reg & ~CRTC_OF_VDE_BITS_MASK)
             | (((vde & 0x100) >> 7) | ((vde & 0x200) >> 3))
             );

  printf("Drawing a's...\n");
  for (i=0; i < 80 * HEIGHT * 2; i+=2)
    {
      vga_mem_mode_3[i] = 'a';
      vga_mem_mode_3[i+1] = 15;
    }

  printf("Restoring Video Mode\n");
  write_port(CRTC_PORT, old_overflow_reg);

  write_port(CRTC_INDEX_PORT, CRTC_VDE_REG);
  write_port(CRTC_PORT, old_vde_reg);

  write_port(GCR_INDEX_PORT, GCR_MISC_REG);
  write_port(GCR_PORT, old_misc_reg);

  printf("Drawing z's...\n");
  for (i=0; i < 80 * 25 * 2; i+=2)
    {
      vga_mem_mode_2[i] = 'z';
      vga_mem_mode_2[i+1] = 15;
    }

  while(1);
}

void
read_port (char *port_num, char *val)
{
  *val = *port_num;
}

void
write_port (char *port_num, char val)
{
  *port_num = val;
}

@
