head	1.1;
access;
symbols
	sid-snapshot-20180601:1.1
	sid-snapshot-20180501:1.1
	sid-snapshot-20180401:1.1
	sid-snapshot-20180301:1.1
	sid-snapshot-20180201:1.1
	sid-snapshot-20180101:1.1
	sid-snapshot-20171201:1.1
	sid-snapshot-20171101:1.1
	sid-snapshot-20171001:1.1
	sid-snapshot-20170901:1.1
	sid-snapshot-20170801:1.1
	sid-snapshot-20170701:1.1
	sid-snapshot-20170601:1.1
	sid-snapshot-20170501:1.1
	sid-snapshot-20170401:1.1
	sid-snapshot-20170301:1.1
	sid-snapshot-20170201:1.1
	sid-snapshot-20170101:1.1
	sid-snapshot-20161201:1.1
	sid-snapshot-20161101:1.1
	sid-snapshot-20160901:1.1
	sid-snapshot-20160801:1.1
	sid-snapshot-20160701:1.1
	sid-snapshot-20160601:1.1
	sid-snapshot-20160501:1.1
	sid-snapshot-20160401:1.1
	sid-snapshot-20160301:1.1
	sid-snapshot-20160201:1.1
	sid-snapshot-20160101:1.1
	sid-snapshot-20151201:1.1
	sid-snapshot-20151101:1.1
	sid-snapshot-20151001:1.1
	sid-snapshot-20150901:1.1
	sid-snapshot-20150801:1.1
	sid-snapshot-20150701:1.1
	sid-snapshot-20150601:1.1
	sid-snapshot-20150501:1.1
	sid-snapshot-20150401:1.1
	sid-snapshot-20150301:1.1
	sid-snapshot-20150201:1.1
	sid-snapshot-20150101:1.1
	sid-snapshot-20141201:1.1
	sid-snapshot-20141101:1.1
	sid-snapshot-20141001:1.1
	sid-snapshot-20140901:1.1
	sid-snapshot-20140801:1.1
	sid-snapshot-20140701:1.1
	sid-snapshot-20140601:1.1
	sid-snapshot-20140501:1.1
	sid-snapshot-20140401:1.1
	sid-snapshot-20140301:1.1
	sid-snapshot-20140201:1.1
	sid-snapshot-20140101:1.1
	sid-snapshot-20131201:1.1
	sid-snapshot-20131101:1.1
	sid-snapshot-20131001:1.1
	sid-snapshot-20130901:1.1
	sid-snapshot-20130801:1.1
	sid-snapshot-20130701:1.1
	sid-snapshot-20130601:1.1
	sid-snapshot-20130501:1.1
	sid-snapshot-20130401:1.1
	sid-snapshot-20130301:1.1
	sid-snapshot-20130201:1.1
	sid-snapshot-20130101:1.1
	sid-snapshot-20121201:1.1
	sid-snapshot-20121101:1.1
	sid-snapshot-20121001:1.1
	sid-snapshot-20120901:1.1
	sid-snapshot-20120801:1.1
	sid-snapshot-20120701:1.1
	sid-snapshot-20120601:1.1
	sid-snapshot-20120501:1.1
	sid-snapshot-20120401:1.1
	sid-snapshot-20120301:1.1
	sid-snapshot-20120201:1.1
	sid-snapshot-20120101:1.1
	sid-snapshot-20111201:1.1
	sid-snapshot-20111101:1.1
	sid-snapshot-20111001:1.1
	sid-snapshot-20110901:1.1
	sid-snapshot-20110801:1.1
	sid-snapshot-20110701:1.1
	sid-snapshot-20110601:1.1
	sid-snapshot-20110501:1.1
	sid-snapshot-20110401:1.1
	sid-snapshot-20110301:1.1
	sid-snapshot-20110201:1.1
	sid-snapshot-20110101:1.1
	sid-snapshot-20101201:1.1
	sid-snapshot-20101101:1.1
	sid-snapshot-20101001:1.1
	sid-snapshot-20100901:1.1
	sid-snapshot-20100801:1.1
	sid-snapshot-20100701:1.1
	sid-snapshot-20100601:1.1
	sid-snapshot-20100501:1.1
	sid-snapshot-20100401:1.1
	sid-snapshot-20100301:1.1
	sid-snapshot-20100201:1.1
	sid-snapshot-20100101:1.1
	sid-snapshot-20091201:1.1
	sid-snapshot-20091101:1.1
	sid-snapshot-20091001:1.1
	sid-snapshot-20090901:1.1
	sid-snapshot-20090801:1.1
	sid-snapshot-20090701:1.1
	sid-snapshot-20090601:1.1
	sid-snapshot-20090501:1.1
	sid-snapshot-20090401:1.1
	sid-snapshot-20090301:1.1
	sid-snapshot-20090201:1.1
	sid-snapshot-20090101:1.1
	sid-snapshot-20081201:1.1
	sid-snapshot-20081101:1.1
	sid-snapshot-20081001:1.1
	sid-snapshot-20080901:1.1
	sid-snapshot-20080801:1.1
	sid-snapshot-20080701:1.1
	sid-snapshot-20080601:1.1
	sid-snapshot-20080501:1.1
	sid-snapshot-20080403:1.1
	sid-snapshot-20080401:1.1
	sid-snapshot-20080301:1.1
	sid-snapshot-20080201:1.1
	sid-snapshot-20080101:1.1
	sid-snapshot-20071201:1.1
	sid-snapshot-20071101:1.1
	sid-snapshot-20071001:1.1
	sid-20020905-branchpoint:1.1
	sid-20020905-branch:1.1.0.2;
locks; strict;
comment	@ * @;


1.1
date	2002.01.29.19.47.32;	author fitzsim;	state Exp;
branches;
next	;


desc
@@


1.1
log
@	* Makefile.am (SUBDIRLIST): Add keyboard.
	(SUBLIBLIST): Add keyboard/libkeyboard.la.
	(INCLUDES): Add keyboard directory.
	* bochs.h [BX_SUPPORT_SID] (BX_SET_ENABLE_A20): Change expansion
	to nil.
	[BX_SUPPORT_SID] (BX_GET_ENABLE_A20): Change expansion to 0.
	Make declaration of bx_dbg unconditional.
	Include keyboard/keyboard.h.
	* components.cxx: Add type hw-input-keyboard.
	* config.h.in (BX_SUPPORT_PAGING): Set to 1.
	(BX_USE_TLB): Likewise.
	(BX_USE_KEY_SMF): Set to 0.
	* configure.in: Add keyboard/Makefile to AC_OUTPUT.

	* cpu/exception.cc: Remove BX_DEBUGGER ifdefs from around bx_dbg
	references.
	* cpu/proc_ctrl.cc: Likewise.
	* cpu/protect_ctrl_pro.cc: Likewise.

	* gui/x-gui.h: Add generate_scancode_pin output_pin.
	* gui/x-gui.cc:	Add ascii_to_key_event array.
	(x_gui): Add generate-scancode pin.
	(handle_events): Add checks for KeyPress and KeyRelease events.
	(xkeypress): New function.

	* keyboard/Makefile.am: New file.
	* keyboard/Makefile.in: Likewise.
	* keyboard/keyboard.cc: Likewise.
	* keyboard/keyboard.h: Likewise.
	* keyboard/keysymbols.h: Likewise.
	* keyboard/sid-keyboard-wrapper.cc: Likewise.
	* keyboard/sid-keyboard-wrapper.h: Likewise.
	* keyboard/tests: Likewise.
	* keyboard/tests/kbd-test.c: Likewise.

	* vga/sid-vga-wrapper.cc (vga): Change port pin names.
	* vga/sid-vga-wrapper.h: Change VGA_SID_WRAPPER_DEF_H to SID_VGA_WRAPPER_DEF_H.
@
text
@#include <stdio.h>

#define KEYBOARD_OUTPUT_PORT (char *)0x060

void read_port (char *port_num, char *val);
void write_port (char *port_num, char val);

int
main()
{
  char current_char = 0;
  char ascii_char = 's';
  int skip_output = 0;

  while(1)
    {
      skip_output = 0;
      read_port(KEYBOARD_OUTPUT_PORT, &current_char);
      // check if key was released
      if(!(current_char & 0x80))
        {
          switch(current_char)
            {
            case 0x1f:
              ascii_char = 's';
              break;
            case 0x17:
              ascii_char = 'i';
              break;
            case 0x20:
              ascii_char = 'd';
              break;
            case 0x10: // q was pressed
              exit(0);
              break;
            default:
              skip_output = 1;
              break;
            }
          if(!skip_output)
            {
              printf("%c\n", ascii_char);
            }
        }
    }
}

void
read_port (char *port_num, char *val)
{
  *val = *port_num;
}

void
write_port (char *port_num, char val)
{
  *port_num = val;
}
@
