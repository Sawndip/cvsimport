head	1.2;
access;
symbols
	sid-snapshot-20180601:1.2
	sid-snapshot-20180501:1.2
	sid-snapshot-20180401:1.2
	sid-snapshot-20180301:1.2
	sid-snapshot-20180201:1.2
	sid-snapshot-20180101:1.2
	sid-snapshot-20171201:1.2
	sid-snapshot-20171101:1.2
	sid-snapshot-20171001:1.2
	sid-snapshot-20170901:1.2
	sid-snapshot-20170801:1.2
	sid-snapshot-20170701:1.2
	sid-snapshot-20170601:1.2
	sid-snapshot-20170501:1.2
	sid-snapshot-20170401:1.2
	sid-snapshot-20170301:1.2
	sid-snapshot-20170201:1.2
	sid-snapshot-20170101:1.2
	sid-snapshot-20161201:1.2
	sid-snapshot-20161101:1.2
	sid-snapshot-20160901:1.2
	sid-snapshot-20160801:1.2
	sid-snapshot-20160701:1.2
	sid-snapshot-20160601:1.2
	sid-snapshot-20160501:1.2
	sid-snapshot-20160401:1.2
	sid-snapshot-20160301:1.2
	sid-snapshot-20160201:1.2
	sid-snapshot-20160101:1.2
	sid-snapshot-20151201:1.2
	sid-snapshot-20151101:1.2
	sid-snapshot-20151001:1.2
	sid-snapshot-20150901:1.2
	sid-snapshot-20150801:1.2
	sid-snapshot-20150701:1.2
	sid-snapshot-20150601:1.2
	sid-snapshot-20150501:1.2
	sid-snapshot-20150401:1.2
	sid-snapshot-20150301:1.2
	sid-snapshot-20150201:1.2
	sid-snapshot-20150101:1.2
	sid-snapshot-20141201:1.2
	sid-snapshot-20141101:1.2
	sid-snapshot-20141001:1.2
	sid-snapshot-20140901:1.2
	sid-snapshot-20140801:1.2
	sid-snapshot-20140701:1.2
	sid-snapshot-20140601:1.2
	sid-snapshot-20140501:1.2
	sid-snapshot-20140401:1.2
	sid-snapshot-20140301:1.2
	sid-snapshot-20140201:1.2
	sid-snapshot-20140101:1.2
	sid-snapshot-20131201:1.2
	sid-snapshot-20131101:1.2
	sid-snapshot-20131001:1.2
	sid-snapshot-20130901:1.2
	sid-snapshot-20130801:1.2
	sid-snapshot-20130701:1.2
	sid-snapshot-20130601:1.2
	sid-snapshot-20130501:1.2
	sid-snapshot-20130401:1.2
	sid-snapshot-20130301:1.2
	sid-snapshot-20130201:1.2
	sid-snapshot-20130101:1.2
	sid-snapshot-20121201:1.2
	sid-snapshot-20121101:1.2
	sid-snapshot-20121001:1.2
	sid-snapshot-20120901:1.2
	sid-snapshot-20120801:1.2
	sid-snapshot-20120701:1.2
	sid-snapshot-20120601:1.2
	sid-snapshot-20120501:1.2
	sid-snapshot-20120401:1.2
	sid-snapshot-20120301:1.2
	sid-snapshot-20120201:1.2
	sid-snapshot-20120101:1.2
	sid-snapshot-20111201:1.2
	sid-snapshot-20111101:1.2
	sid-snapshot-20111001:1.2
	sid-snapshot-20110901:1.2
	sid-snapshot-20110801:1.2
	sid-snapshot-20110701:1.2
	sid-snapshot-20110601:1.2
	sid-snapshot-20110501:1.2
	sid-snapshot-20110401:1.2
	sid-snapshot-20110301:1.2
	sid-snapshot-20110201:1.2
	sid-snapshot-20110101:1.2
	sid-snapshot-20101201:1.2
	sid-snapshot-20101101:1.2
	sid-snapshot-20101001:1.2
	sid-snapshot-20100901:1.2
	sid-snapshot-20100801:1.2
	sid-snapshot-20100701:1.2
	sid-snapshot-20100601:1.2
	sid-snapshot-20100501:1.2
	sid-snapshot-20100401:1.2
	sid-snapshot-20100301:1.2
	sid-snapshot-20100201:1.2
	sid-snapshot-20100101:1.2
	sid-snapshot-20091201:1.2
	sid-snapshot-20091101:1.2
	sid-snapshot-20091001:1.2
	sid-snapshot-20090901:1.2
	sid-snapshot-20090801:1.2
	sid-snapshot-20090701:1.2
	sid-snapshot-20090601:1.2
	sid-snapshot-20090501:1.2
	sid-snapshot-20090401:1.2
	sid-snapshot-20090301:1.2
	sid-snapshot-20090201:1.2
	sid-snapshot-20090101:1.2
	sid-snapshot-20081201:1.2
	sid-snapshot-20081101:1.2
	sid-snapshot-20081001:1.2
	sid-snapshot-20080901:1.2
	sid-snapshot-20080801:1.2
	sid-snapshot-20080701:1.2
	sid-snapshot-20080601:1.2
	sid-snapshot-20080501:1.2
	sid-snapshot-20080403:1.2
	sid-snapshot-20080401:1.2
	sid-snapshot-20080301:1.2
	sid-snapshot-20080201:1.2
	sid-snapshot-20080101:1.2
	sid-snapshot-20071201:1.2
	sid-snapshot-20071101:1.2
	sid-snapshot-20071001:1.2
	sid-20020905-branchpoint:1.2
	sid-20020905-branch:1.2.0.2;
locks; strict;
comment	@// @;


1.2
date	2002.03.04.23.33.04;	author fitzsim;	state Exp;
branches;
next	1.1;

1.1
date	2002.02.15.01.18.48;	author fitzsim;	state Exp;
branches;
next	;


desc
@@


1.2
log
@	* Makefile.am (SUBDIRLIST): Add harddrv.
	(SUBLIBLIST): Add harddrv/libharddrv.la.
	(INCLUDES): Add harddrv.
	* bochs.h: Include harddrv.h header.
	* components.cxx: Add hw-disk-harddrive type.
	* configure.in (AC_OUTPUT): Add harddrv/Makefile.
	* cmos/sid-cmos-wrapper.cc: Remove cmos_irq_number,
	use_host_time and start_time attributes.
	Add base_memory_in_k, extended_memory_in_k attributes.
	Remove get_time function.
	* cpu/cpu.cc: Change mem->read_physical calls to access_linear
	calls.
	* cpu/cpu.h: Change _16_bit_base_reg references to
	a_16_bit_base_reg, to prevent compiler warnings on some hosts.
	* cpu/init.cc: Likewise.
	* cpu/proc_ctrl.cc: Add RDTSC implementation.
	* floppy/sid-floppy-wrapper.cc: Split up io memory range so that
	3f6 is left for hard drive.
	Add command-delay attribute.
	* keyboard/keyboard.cc: Handle reads from, and writes to port
	0x92.
	* keyboard/sid-keyboard-wrapper.cc: Add serial-delay attribute.
	* pic/sid-pic-wrapper.cc: Change implementation; provide one pin
	per irq, rather than one irq-number pin.
	* vga/sid-vga-wrapper.cc: Fix cmos writing bug.
	* vga/vga.cc: Add BX_SUPPORT_SID ifdefs, so that diffs between
	this file and the bochs version are clearer.
@
text
@// sid-pic-wrapper.cc - SID import of the bochs pic component.  -*- C++ -*-

// Copyright (C) 1999, 2000, 2001, 2002 Red Hat.
// This file is part of SID and is licensed under the GPL.
// See the file COPYING.SID for conditions for redistribution.

#include "sid-pic-wrapper.h"

pic::pic ()
    : init_pin(this, & pic::init),
      irq0_pin(this, & pic::irq0),
      irq1_pin(this, & pic::irq1),
      irq2_pin(this, & pic::irq2),
      irq3_pin(this, & pic::irq3),
      irq4_pin(this, & pic::irq4),
      irq5_pin(this, & pic::irq5),
      irq6_pin(this, & pic::irq6),
      irq7_pin(this, & pic::irq7),
      irq8_pin(this, & pic::irq8),
      irq9_pin(this, & pic::irq9),
      irq10_pin(this, & pic::irq10),
      irq11_pin(this, & pic::irq11),
      irq12_pin(this, & pic::irq12),
      irq13_pin(this, & pic::irq13),
      irq14_pin(this, & pic::irq14),
      irq15_pin(this, & pic::irq15),
      interrupt_acknowledge_pin(this, & pic::interrupt_acknowledge),
      ports_0x20_0x21_bus(this, & pic::read_port_0x20_0x21, & pic::write_port_0x20_0x21),
      ports_0xa0_0xa1_bus(this, & pic::read_port_0xa0_0xa1, & pic::write_port_0xa0_0xa1)
{
  add_pin("interrupt", & this->interrupt_pin);
  
  add_pin("interrupt-acknowledge", & this->interrupt_acknowledge_pin);
  add_pin("interrupt-ack-response", & this->interrupt_acknowledge_response_pin);

  add_pin("init", & this->init_pin);

  add_pin("irq0", & this->irq0_pin);
  add_pin("irq1", & this->irq1_pin);
  add_pin("irq2", & this->irq2_pin);
  add_pin("irq3", & this->irq3_pin);
  add_pin("irq4", & this->irq4_pin);
  add_pin("irq5", & this->irq5_pin);
  add_pin("irq6", & this->irq6_pin);
  add_pin("irq7", & this->irq7_pin);
  add_pin("irq8", & this->irq8_pin);
  add_pin("irq9", & this->irq9_pin);
  add_pin("irq10", & this->irq10_pin);
  add_pin("irq11", & this->irq11_pin);
  add_pin("irq12", & this->irq12_pin);
  add_pin("irq13", & this->irq13_pin);
  add_pin("irq14", & this->irq14_pin);
  add_pin("irq15", & this->irq15_pin);

  add_bus("ports-0x20-0x21", & this->ports_0x20_0x21_bus);
  add_bus("ports-0xa0-0xa1", & this->ports_0xa0_0xa1_bus);
}

void
pic::init(host_int_4)
{
  bx_pic.init(this);
}

void
pic::irq0(host_int_4 value)
{
  if (value)
    bx_pic.trigger_irq(0);
}

void
pic::irq1(host_int_4 value)
{
  if (value)
    bx_pic.trigger_irq(1);
}

void
pic::irq2(host_int_4 value)
{
  if (value)
    bx_pic.trigger_irq(2);
}

void
pic::irq3(host_int_4 value)
{
  if (value)
    bx_pic.trigger_irq(3);
}

void
pic::irq4(host_int_4 value)
{
  if (value)
    bx_pic.trigger_irq(4);
}

void
pic::irq5(host_int_4 value)
{
  if (value)
    bx_pic.trigger_irq(5);
}

void
pic::irq6(host_int_4 value)
{
  if (value)
    bx_pic.trigger_irq(6);
}

void
pic::irq7(host_int_4 value)
{
  if (value)
    bx_pic.trigger_irq(7);
}

void
pic::irq8(host_int_4 value)
{
  if (value)
    bx_pic.trigger_irq(8);
}

void
pic::irq9(host_int_4 value)
{
  if (value)
    bx_pic.trigger_irq(9);
}

void
pic::irq10(host_int_4 value)
{
  if (value)
    bx_pic.trigger_irq(10);
}

void
pic::irq11(host_int_4 value)
{
  if (value)
    bx_pic.trigger_irq(11);
}

void
pic::irq12(host_int_4 value)
{
  if (value)
    bx_pic.trigger_irq(12);
}

void
pic::irq13(host_int_4 value)
{
  if (value)
    bx_pic.trigger_irq(13);
}

void
pic::irq14(host_int_4 value)
{
  if (value)
    bx_pic.trigger_irq(14);
}

void
pic::irq15(host_int_4 value)
{
  if (value)
    bx_pic.trigger_irq(15);
}

void
pic::interrupt_acknowledge(host_int_4)
{
  interrupt_acknowledge_response_pin.drive(bx_pic.IAC());
}

void
pic::drive_interrupt_pin(host_int_4 value)
{
  interrupt_pin.drive(value);
}

bus::status
pic::read_port_0x20_0x21 (host_int_4 addr, little_int_1 mask, little_int_1 & data)
{
  addr += 0x20;
  data = bx_pic.read(addr, 1);
  return bus::ok;
}

bus::status
pic::write_port_0x20_0x21 (host_int_4 addr, little_int_1 mask, little_int_1 data)
{
  addr += 0x20;
  bx_pic.write(addr, data, 1);
  return bus::ok;
}

bus::status
pic::read_port_0xa0_0xa1 (host_int_4 addr, little_int_1 mask, little_int_1 & data)
{
  addr += 0xa0;
  data = bx_pic.read(addr, 1);
  return bus::ok;
}

bus::status
pic::write_port_0xa0_0xa1 (host_int_4 addr, little_int_1 mask, little_int_1 data)
{
  addr += 0xa0;
  bx_pic.write(addr, data, 1);
  return bus::ok;
}
@


1.1
log
@	* debug/debug.h: Move to top-level bochs directory.
	* debug: Remove directory.
	* pic/*: New files.
	* floppy/*: New files.
	* cmos/*: New files.
	* unmapped/*: New files.
	* dma/*: New files.
	* pit/*: New files.
	* cpu/x86.h: Rename to sid-x86-cpu-wrapper.h.
	* cpu/x86.cc: Rename to sid-x86-cpu-wrapper.cc.
	* cpu/x86-memory-modes.cc: Rename to sid-x86-memory-modes.cc.
	* memory/*: Move to cpu/memory/*.
	* fpu/*: Move to cpu/fpu/*.
	* bochs.h: Change #include's to reflect new and moved files.
	Add sid expansions for A20ADDR(x), BX_INP(addr, len),
	BX_OUTP(addr, val, len), BX_RAISE_HLDA(),
	BX_SET_ENABLE_A20(enabled), BX_GET_ENABLE_A20(), and
	BX_NULL_TIMER_HANDLE.
	* components.cxx: Add support for cmos, dma, pic, pit, floppy,
	unmapped.
	* config.h.in: Set BX_SUPPORT_TASKING, BX_DMA_FLOPPY_IO and
	BX_SUPPORT_A20 to 1 by default.
	Set SMF macros to 0 for cmos, dma, pic, pit, floppy and unmapped
	components.
	* configure.in: Add pic, pit, cmos, dma, floppy, and unmapped
	Makefiles to AC_OUTPUT.
	* cpu/exception-sid.cc: Remove.  Merge differences into
	cpu/exception.cc.
	* cpu/cpu-sid.h: Remove.  Merge differences into cpu/cpu.h.
	* cpu/cpu-sid.cc: Remove.  Merge differences into cpu/cpu.cc.
	* cpu/init-sid.cc: Remove.  Merge differences into cpu/init.cc.
	* cpu/soft_int-sid.cc: Remove.
	* cpu/debugstuff-sid.cc: Remove.  Merge differences into
	cpu/debugstuff.cc.
	* cpu/ctrl_xfer32-sid.cc: Remove.
	* cpu/fetchdecode-sid.cc: Remove.
	* cpu/Makefile.am: Remove references to removed files.
	(SUBDIRS) Add memory and fpu.
	(SUBLIBS) Add memory/libmemory.la and fpu/libfpu.la.
	(INCLUDES) Add memory and fpu directories.
	* cpu/cpu.cc: Remove BX_HRQ related FIXME's.
	Add interrupt pin support.
	* cpu/debugstuff.cc (BX_SUPPORT_SID): Add implementations of
	dbg_get_reg, dbg_set_reg, and dbg_get_eflags for when
	BX_DEBUGGER isn't defined.
	* cpu/io.cc: Remove #if 0's -- no longer needed.
	* cpu/io_pro.cc: Likewise.
	* gui/x-gui.cc: Change title bar messages.
	* keyboard/keyboard.cc: Change keyboard to remove serial delay
	pin.
	* keyboard/sid-keyboard-wrapper.cc: Add a20-related pins.
	Remove serial-delay pin.
	Add cmos accessor.
	Add trigger-irq pin.
	* keyboard/sid-keyboard-wrapper.h: Likewise.
	* vga/sid-vga-wrapper.cc: Rename buses from eg. 3b4 to 0x3b4.
	Import imagemmap code from generic.cxx.
	* vga/vga.cc: Cap number of rows at BX_MAX_TEXT_LINES.
	* Makefile.am (SUBDIRLIST): Add pic, pit, cmos, dma, floppy,
	unmapped.
	Removed fpu, memory.
	(SUBLIBLIST): Likewise.
	(INCLUDES): Likewise.
@
text
@d11 16
a26 2
      trigger_irq_pin(this, & pic::trigger_irq),
      untrigger_irq_pin(this, & pic::untrigger_irq),
d37 17
a53 2
  add_pin("trigger-irq", & this->trigger_irq_pin);
  add_pin("untrigger-irq", & this->untrigger_irq_pin);
d66 99
a164 1
pic::trigger_irq(host_int_4 irq_number)
d166 2
a167 1
  bx_pic.trigger_irq(irq_number);
d171 1
a171 1
pic::untrigger_irq(host_int_4 irq_number)
d173 2
a174 1
  bx_pic.untrigger_irq(irq_number);
@

