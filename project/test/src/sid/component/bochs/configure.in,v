head	1.7;
access;
symbols
	sid-snapshot-20180601:1.7
	sid-snapshot-20180501:1.7
	sid-snapshot-20180401:1.7
	sid-snapshot-20180301:1.7
	sid-snapshot-20180201:1.7
	sid-snapshot-20180101:1.7
	sid-snapshot-20171201:1.7
	sid-snapshot-20171101:1.7
	sid-snapshot-20171001:1.7
	sid-snapshot-20170901:1.7
	sid-snapshot-20170801:1.7
	sid-snapshot-20170701:1.7
	sid-snapshot-20170601:1.7
	sid-snapshot-20170501:1.7
	sid-snapshot-20170401:1.7
	sid-snapshot-20170301:1.7
	sid-snapshot-20170201:1.7
	sid-snapshot-20170101:1.7
	sid-snapshot-20161201:1.7
	sid-snapshot-20161101:1.7
	sid-snapshot-20160901:1.7
	sid-snapshot-20160801:1.7
	sid-snapshot-20160701:1.7
	sid-snapshot-20160601:1.7
	sid-snapshot-20160501:1.7
	sid-snapshot-20160401:1.7
	sid-snapshot-20160301:1.7
	sid-snapshot-20160201:1.7
	sid-snapshot-20160101:1.7
	sid-snapshot-20151201:1.7
	sid-snapshot-20151101:1.7
	sid-snapshot-20151001:1.7
	sid-snapshot-20150901:1.7
	sid-snapshot-20150801:1.7
	sid-snapshot-20150701:1.7
	sid-snapshot-20150601:1.7
	sid-snapshot-20150501:1.7
	sid-snapshot-20150401:1.7
	sid-snapshot-20150301:1.7
	sid-snapshot-20150201:1.7
	sid-snapshot-20150101:1.7
	sid-snapshot-20141201:1.7
	sid-snapshot-20141101:1.7
	sid-snapshot-20141001:1.7
	sid-snapshot-20140901:1.7
	sid-snapshot-20140801:1.7
	sid-snapshot-20140701:1.7
	sid-snapshot-20140601:1.7
	sid-snapshot-20140501:1.7
	sid-snapshot-20140401:1.7
	sid-snapshot-20140301:1.7
	sid-snapshot-20140201:1.7
	sid-snapshot-20140101:1.7
	sid-snapshot-20131201:1.7
	sid-snapshot-20131101:1.7
	sid-snapshot-20131001:1.7
	sid-snapshot-20130901:1.6
	sid-snapshot-20130801:1.6
	sid-snapshot-20130701:1.6
	sid-snapshot-20130601:1.6
	sid-snapshot-20130501:1.6
	sid-snapshot-20130401:1.6
	sid-snapshot-20130301:1.6
	sid-snapshot-20130201:1.6
	sid-snapshot-20130101:1.6
	sid-snapshot-20121201:1.6
	sid-snapshot-20121101:1.6
	sid-snapshot-20121001:1.6
	sid-snapshot-20120901:1.6
	sid-snapshot-20120801:1.6
	sid-snapshot-20120701:1.6
	sid-snapshot-20120601:1.6
	sid-snapshot-20120501:1.6
	sid-snapshot-20120401:1.6
	sid-snapshot-20120301:1.6
	sid-snapshot-20120201:1.6
	sid-snapshot-20120101:1.6
	sid-snapshot-20111201:1.6
	sid-snapshot-20111101:1.6
	sid-snapshot-20111001:1.6
	sid-snapshot-20110901:1.6
	sid-snapshot-20110801:1.6
	sid-snapshot-20110701:1.6
	sid-snapshot-20110601:1.6
	sid-snapshot-20110501:1.6
	sid-snapshot-20110401:1.6
	sid-snapshot-20110301:1.6
	sid-snapshot-20110201:1.6
	sid-snapshot-20110101:1.6
	sid-snapshot-20101201:1.6
	sid-snapshot-20101101:1.6
	sid-snapshot-20101001:1.6
	sid-snapshot-20100901:1.6
	sid-snapshot-20100801:1.6
	sid-snapshot-20100701:1.6
	sid-snapshot-20100601:1.6
	sid-snapshot-20100501:1.6
	sid-snapshot-20100401:1.6
	sid-snapshot-20100301:1.6
	sid-snapshot-20100201:1.6
	sid-snapshot-20100101:1.6
	sid-snapshot-20091201:1.6
	sid-snapshot-20091101:1.6
	sid-snapshot-20091001:1.6
	sid-snapshot-20090901:1.6
	sid-snapshot-20090801:1.6
	sid-snapshot-20090701:1.6
	sid-snapshot-20090601:1.6
	sid-snapshot-20090501:1.6
	sid-snapshot-20090401:1.6
	sid-snapshot-20090301:1.6
	sid-snapshot-20090201:1.6
	sid-snapshot-20090101:1.6
	sid-snapshot-20081201:1.6
	sid-snapshot-20081101:1.6
	sid-snapshot-20081001:1.6
	sid-snapshot-20080901:1.6
	sid-snapshot-20080801:1.6
	sid-snapshot-20080701:1.6
	sid-snapshot-20080601:1.6
	sid-snapshot-20080501:1.6
	sid-snapshot-20080403:1.6
	sid-snapshot-20080401:1.6
	sid-snapshot-20080301:1.6
	sid-snapshot-20080201:1.6
	sid-snapshot-20080101:1.6
	sid-snapshot-20071201:1.6
	sid-snapshot-20071101:1.6
	sid-snapshot-20071001:1.6
	sid-20020905-branchpoint:1.5
	sid-20020905-branch:1.5.0.2
	cygnus_cvs_20020108_pre:1.1;
locks; strict;
comment	@# @;


1.7
date	2013.09.23.03.22.09;	author amodra;	state Exp;
branches;
next	1.6;

1.6
date	2005.06.04.03.22.57;	author jimb;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.04.23.33.01;	author fitzsim;	state Exp;
branches;
next	1.4;

1.4
date	2002.02.15.01.18.44;	author fitzsim;	state Exp;
branches;
next	1.3;

1.3
date	2002.01.29.19.47.28;	author fitzsim;	state Exp;
branches;
next	1.2;

1.2
date	2002.01.23.20.51.59;	author fitzsim;	state Exp;
branches;
next	1.1;

1.1
date	2001.11.27.22.59.00;	author fitzsim;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Pick up support for powerpc64le in top level libtool.m4 by deleting
sid/config files duplicating the top level files and modifying
AC_CONFIG_AUX_DIR and ACLOCAL_AMFLAGS appropriately.
Regenerate with automake-1.11.1 and autoconf-2.64.
@
text
@dnl // Process this file with autoconf to produce a configure script.

AC_PREREQ(2.4)
AC_INIT(components.cxx)
AC_CONFIG_AUX_DIR(../../..)
AM_CONFIG_HEADER(config.h)

AM_INIT_AUTOMAKE(sidcomp,0.1)
AM_MAINTAINER_MODE
AC_EXEEXT
AM_PROG_LIBTOOL

changequote(<<, >>)
changequote([, ])

AC_PROG_CC
AC_PROG_CXX
AC_PROG_MAKE_SET
AC_PROG_RANLIB

AC_PATH_XTRA

AC_C_BIGENDIAN
AC_C_INLINE
AC_CHECK_SIZEOF(unsigned char, 1)
AC_CHECK_SIZEOF(unsigned short, 2)
AC_CHECK_SIZEOF(unsigned int, 4)
AC_CHECK_SIZEOF(unsigned long, 4)
AC_CHECK_SIZEOF(unsigned long long, 8)
AC_CHECK_SIZEOF(int *, 4)
AC_CHECK_FUNCS(select, AC_DEFINE(BX_HAVE_SELECT))
AC_CHECK_FUNCS(snprintf, AC_DEFINE(BX_HAVE_SNPRINTF))
AC_CHECK_FUNCS(strtoull, AC_DEFINE(BX_HAVE_STRTOULL))
AC_CHECK_FUNCS(strtouq, AC_DEFINE(BX_HAVE_STRTOUQ))
AC_CHECK_FUNCS(strdup, AC_DEFINE(BX_HAVE_STRDUP))

AC_MSG_CHECKING(if compiler allows empty structs)
AC_TRY_COMPILE([], [typedef struct { } junk;], 
    AC_MSG_RESULT(yes),
    [
      AC_DEFINE(BX_NO_EMPTY_STRUCTS)
      AC_MSG_RESULT(no)
    ])

AC_MSG_CHECKING(if compiler allows __attribute__)
AC_TRY_COMPILE([], [typedef struct { } __attribute__ ((packed)) junk;], 
    AC_MSG_RESULT(yes),
    [
      AC_MSG_RESULT(no)
      AC_DEFINE(BX_NO_ATTRIBUTES)
    ])

AC_LANG_SAVE
AC_LANG_CPLUSPLUS
AC_MSG_CHECKING(for hash_map.h)
AC_TRY_COMPILE([#include <hash_map.h>], [],
   [
     AC_MSG_RESULT(yes)
     AC_DEFINE(BX_HAVE_HASH_MAP)
   ], AC_MSG_RESULT(no))
AC_LANG_RESTORE

AC_MSG_CHECKING(for number of processors)
AC_ARG_ENABLE(processors,
  [  --enable-processors                select number of processors (1,2,4)],
  [case "$enableval" in
     1)
       AC_MSG_RESULT(1)
       AC_DEFINE(BX_SMP_PROCESSORS, 1)
       AC_DEFINE(BX_BOOTSTRAP_PROCESSOR, 0)
       AC_DEFINE(BX_IOAPIC_DEFAULT_ID, 1)
       ;;
     2)
       AC_MSG_RESULT(2)
       AC_DEFINE(BX_SMP_PROCESSORS, 2)
       AC_DEFINE(BX_BOOTSTRAP_PROCESSOR, 0)
       AC_DEFINE(BX_IOAPIC_DEFAULT_ID, 2)
       AC_DEFINE(BX_USE_CPU_SMF, 0)
       ;;
     4)
       AC_MSG_RESULT(4)
       AC_DEFINE(BX_SMP_PROCESSORS, 4)
       AC_DEFINE(BX_BOOTSTRAP_PROCESSOR, 2)
       AC_DEFINE(BX_IOAPIC_DEFAULT_ID, 4)
       AC_DEFINE(BX_USE_CPU_SMF, 0)
       ;;
     *)
       echo " "
       echo "WARNING: processors != [1,2,4] can work, but you need to modify rombios.c manually"
       AC_MSG_RESULT($enable_val)
       AC_DEFINE(BX_SMP_PROCESSORS, $enable_val)
       AC_DEFINE(BX_BOOTSTRAP_PROCESSOR, 0)
       AC_DEFINE(BX_IOAPIC_DEFAULT_ID, $enable_val)
       AC_DEFINE(BX_USE_CPU_SMF, 0)
       ;;
   esac
   bx_procs="$enableval"
  ],
  [
     AC_MSG_RESULT(1)
     AC_DEFINE(BX_SMP_PROCESSORS, 1)
     AC_DEFINE(BX_BOOTSTRAP_PROCESSOR, 0)
     AC_DEFINE(BX_IOAPIC_DEFAULT_ID, 1)
     bx_procs=1
  ]
  )

AC_MSG_CHECKING(if compiler allows blank labels)
AC_TRY_COMPILE([], [ { label1: } ],
    AC_MSG_RESULT(yes),
    [
      AC_MSG_RESULT(no)
      AC_DEFINE(BX_NO_BLANK_LABELS)
    ])

AC_MSG_CHECKING(if compiler allows LL for 64-bit constants)
AC_TRY_COMPILE([], [ { 42LL; } ],
    AC_MSG_RESULT(yes),
    [
      AC_MSG_RESULT(no)
      AC_DEFINE(BX_64BIT_CONSTANTS_USE_LL, 0)
    ])

AC_MSG_CHECKING(for cpu level)
AC_ARG_ENABLE(cpu-level,
  [  --enable-cpu-level                select cpu level (3,4,5,6)],
  [case "$enableval" in
     3)
       AC_MSG_RESULT(3)
       AC_DEFINE(BX_CPU_LEVEL, 3)
       AC_DEFINE(BX_CPU_LEVEL_HACKED, 3)
       ;;
     4)
       AC_MSG_RESULT(4)
       AC_DEFINE(BX_CPU_LEVEL, 4)
       AC_DEFINE(BX_CPU_LEVEL_HACKED, 4)
       ;;
     5)
       AC_MSG_RESULT(5)
       AC_DEFINE(BX_CPU_LEVEL, 5)
       AC_DEFINE(BX_CPU_LEVEL_HACKED, 5)
       ;;
     6)
       AC_MSG_RESULT(6)
       AC_DEFINE(BX_CPU_LEVEL, 6)
       AC_DEFINE(BX_CPU_LEVEL_HACKED, 6)
       ;;
     *)
       echo " "
       echo "ERROR: you must supply a valid CPU level to --enable-cpu-level"
       exit 1
       ;;
   esac
   bx_cpu_level=$enableval
   if test "$bx_procs" -gt 1 -a "$enableval" -lt 6; then
     echo "ERROR: with >1 processor, use --enable-cpu-level=6"
     exit 1
   fi
  ],
  [
    # for multiprocessors, cpu level must be 6
    if test "$bx_procs" -gt 1; then
      AC_MSG_RESULT(6)
      AC_DEFINE(BX_CPU_LEVEL, 6)
      AC_DEFINE(BX_CPU_LEVEL_HACKED, 6)
      bx_cpu_level=6
    else
      AC_MSG_RESULT(5)
      AC_DEFINE(BX_CPU_LEVEL, 5)
      AC_DEFINE(BX_CPU_LEVEL_HACKED, 5)
      bx_cpu_level=5
    fi
  ]
  )


m4_pattern_allow([^AS_DYNAMIC_.*$])
AC_MSG_CHECKING(for dynamic translation support)
AC_ARG_ENABLE(dynamic,
  [  --enable-dynamic                  enable dynamic translation support],
  [if test "$enableval" = no; then
     AC_MSG_RESULT(no)
     AC_DEFINE(BX_DYNAMIC_TRANSLATION, 0)
     DYNAMIC_VAR=''
     AS_DYNAMIC_OBJS=''
     AS_DYNAMIC_INCS=''
   else
     if test "$enableval" = yes; then
       echo " "
       echo \!\!\!Error\!\!\!
       echo "You must specify a CPU type to dynamic-translation option"
       echo \!\!\!Error\!\!\!
       exit 1
     fi
     case "$enableval" in
       i386)
         AC_DEFINE(BX_DYNAMIC_CPU_I386, 1)
         AS_DYNAMIC_OBJS='$(X86_OBJS)'
         AS_DYNAMIC_INCS='$(X86_H)'
         ;;
       sparc)
         AC_DEFINE(BX_DYNAMIC_CPU_SPARC, 1)
         AS_DYNAMIC_OBJS='$(SPARC_OBJS).o'
         AS_DYNAMIC_INCS='$(SPARC_H)'
         ;;
       *)
         echo " "
         echo \!\!\!Error\!\!\!
         echo "Sorry, dynamic translation is not yet available on your platform"
         echo \!\!\!Error\!\!\!
         AS_DYNAMIC_OBJS=''
         AS_DYNAMIC_INCS=''
         exit 1 ;;
     esac
     AC_MSG_RESULT(yes)
     AC_DEFINE(BX_DYNAMIC_TRANSLATION, 1)
     DYNAMIC_VAR='$(DYNAMIC_LIB)'
   fi],
  [
    AC_MSG_RESULT(no)
    AC_DEFINE(BX_DYNAMIC_TRANSLATION, 0)
    DYNAMIC_VAR=''
    AS_DYNAMIC_OBJS=''
    AS_DYNAMIC_INCS=''
    ]
  )
AC_SUBST(DYNAMIC_VAR)
AC_SUBST(AS_DYNAMIC_OBJS)
AC_SUBST(AS_DYNAMIC_INCS)

AC_MSG_CHECKING(for APIC support)
AC_ARG_ENABLE(apic,
  [  --enable-apic                   enable APIC support],
  [if test "$enableval" = yes; then
    AC_MSG_RESULT(yes)
    AC_DEFINE(BX_SUPPORT_APIC, 1)
    IOAPIC_OBJS='ioapic.o'
    APIC_OBJS='apic.o'
   else
    AC_MSG_RESULT(no)
    if test "$bx_procs" -gt 1; then
      echo "Number of processors = $bx_procs"
      echo "ERROR: With processors > 1 you must use --enable-apic"
      exit 1
    fi
    AC_DEFINE(BX_SUPPORT_APIC, 0)
    IOAPIC_OBJS=''
    APIC_OBJS=''
   fi
   ],
  [
    if test "$bx_procs" -gt 1 -o "$bx_cpu_level" -gt 5; then
      # enable APIC by default, if processors>1 or if cpulevel>5
      AC_MSG_RESULT(yes)
      AC_DEFINE(BX_SUPPORT_APIC, 1)
      IOAPIC_OBJS='ioapic.o'
      APIC_OBJS='apic.o'
    else
      AC_MSG_RESULT(no)
      AC_DEFINE(BX_SUPPORT_APIC, 0)
      IOAPIC_OBJS=''
      APIC_OBJS=''
     fi
   ]
  )
AC_SUBST(IOAPIC_OBJS)
AC_SUBST(APIC_OBJS)

AC_MSG_CHECKING(for split hard disk image support)
AC_ARG_ENABLE(split-hd,
  [  --enable-split-hd                   allows split hard disk image],
  [if test "$enableval" = yes; then
    AC_MSG_RESULT(yes)
    AC_DEFINE(BX_SPLIT_HD_SUPPORT, 1)
   else
    AC_MSG_RESULT(no)
    AC_DEFINE(BX_SPLIT_HD_SUPPORT, 0)
   fi],
  [
    AC_MSG_RESULT(yes)
    AC_DEFINE(BX_SPLIT_HD_SUPPORT, 1)
    ]
  )
AC_SUBST(BX_SPLIT_HD_SUPPORT)

AC_MSG_CHECKING(for NE2000 support)
AC_ARG_ENABLE(ne2000,
  [  --enable-ne2000                   enable limited ne2000 support],
  [if test "$enableval" = yes; then
    AC_MSG_RESULT(yes)
    AC_DEFINE(BX_NE2K_SUPPORT, 1)
    NE2K_OBJS='ne2k.o eth.o eth_null.o'
    AC_CHECK_HEADER(net/bpf.h, NE2K_OBJS="$NE2K_OBJS eth_fbsd.o")
   else
    AC_MSG_RESULT(no)
    AC_DEFINE(BX_NE2K_SUPPORT, 0)
    NE2K_OBJS=''
   fi],
  [
    AC_MSG_RESULT(no)
    AC_DEFINE(BX_NE2K_SUPPORT, 0)
    NE2K_OBJS=''
    ]
  )
AC_SUBST(NE2K_OBJS)


AC_MSG_CHECKING(for i440FX PCI support)
AC_ARG_ENABLE(pci,
  [  --enable-pci                      enable limited i440FX PCI support],
  [if test "$enableval" = yes; then
    AC_MSG_RESULT(yes)
    AC_DEFINE(BX_PCI_SUPPORT, 1)
    PCI_OBJ='pci.o'
   else
    AC_MSG_RESULT(no)
    AC_DEFINE(BX_PCI_SUPPORT, 0)
    PCI_OBJ=''
   fi],
  [
    AC_MSG_RESULT(no)
    AC_DEFINE(BX_PCI_SUPPORT, 0)
    PCI_OBJ=''
    ]
  )
AC_SUBST(PCI_OBJ)


AC_MSG_CHECKING(for port e9 hack)
AC_ARG_ENABLE(port-e9-hack,
  [  --enable-port-e9-hack             writes to port e9 go to console],
  [if test "$enableval" = yes; then
    AC_MSG_RESULT(yes)
    AC_DEFINE(BX_PORT_E9_HACK, 1)
   else
    AC_MSG_RESULT(no)
    AC_DEFINE(BX_PORT_E9_HACK, 0)
   fi],
  [
    AC_MSG_RESULT(no)
    AC_DEFINE(BX_PORT_E9_HACK, 0)
    ]
  )


AC_MSG_CHECKING(for use of .cpp as suffix)
AC_ARG_ENABLE(cpp,
  [  --enable-cpp                      use .cpp as C++ suffix],
  [if test "$enableval" = yes; then
    AC_MSG_RESULT(yes)
    SUFFIX_LINE='.SUFFIXES: .cpp'
    CPP_SUFFIX='cpp'
   else
    AC_MSG_RESULT(no)
    SUFFIX_LINE='.SUFFIXES: .cc'
    CPP_SUFFIX='cc'
   fi],
  [
    AC_MSG_RESULT(no)
    SUFFIX_LINE='.SUFFIXES: .cc'
    CPP_SUFFIX='cc'
    ]
  )
AC_SUBST(SUFFIX_LINE)
AC_SUBST(CPP_SUFFIX)

if test "$enable_cpp" = yes; then
  echo "moving .cc source files to .cpp"
  sourcefiles=`find . -name "*.cc" -print`
  if test "$sourcefiles" != ""; then
    for ccname in $sourcefiles
    do
      cppname=`echo $ccname | sed -e "s/\.cc$/.cpp/"`
      echo "mv $ccname $cppname"
      mv   $ccname $cppname
    done
  else
    echo "no more .cc source files to rename"
  fi
fi


AC_MSG_CHECKING(for Bochs internal debugger support)
AC_ARG_ENABLE(debugger,
  [  --enable-debugger                 compile in support for Bochs internal debugger],
  [if test "$enableval" = yes; then
    AC_MSG_RESULT(yes)
    AC_DEFINE(BX_DEBUGGER, 1)
    DEBUGGER_VAR='$(DEBUGGER_LIB)'
    bx_debugger=1
   else
    AC_MSG_RESULT(no)
    AC_DEFINE(BX_DEBUGGER, 0)
    DEBUGGER_VAR=''
    bx_debugger=0
   fi
   ],
  [
    AC_MSG_RESULT(no)
    AC_DEFINE(BX_DEBUGGER, 0)
    DEBUGGER_VAR=''
    bx_debugger=0
    ]
  )
AC_SUBST(DEBUGGER_VAR)

AC_MSG_CHECKING(for disassembler support)
AC_ARG_ENABLE(disasm,
  [  --enable-disasm                   compile in support for disassembler],
  [if test "$enableval" = yes; then
    AC_MSG_RESULT(yes)
    AC_DEFINE(BX_DISASM, 1)
    DISASM_VAR='$(DISASM_LIB)'
   else
    AC_MSG_RESULT(no)
    if test "$bx_debugger" = 1; then
      echo "ERROR: debugger is enabled, so --enable-disasm is required"
      exit 1
    fi
    AC_DEFINE(BX_DISASM, 0)
    DISASM_VAR=''
   fi],
  [
    if test "$bx_debugger" = 1; then
      AC_MSG_RESULT(yes)
      AC_DEFINE(BX_DISASM, 1)
      DISASM_VAR='$(DISASM_LIB)'
    else
      AC_MSG_RESULT(no)
      AC_DEFINE(BX_DISASM, 0)
      DISASM_VAR=''
    fi
    ]
  )
AC_SUBST(DISASM_VAR)

AC_MSG_CHECKING(whether to use readline)
AC_ARG_ENABLE(readline,
  [ --enable-readline                     use readline library with debugger],
  [if test "$enableval" = yes; then
    AC_MSG_RESULT(yes)
     want_readline=yes
   else
     AC_MSG_RESULT(no)
     want_readline=no
   fi],
  [ # default is yes
    AC_MSG_RESULT(yes)
    want_readline=yes ]
 )


if test "$want_readline" = yes; then
  AC_CHECK_LIB(readline, 
    readline,
    [
      if test "$bx_debugger" = 1; then
	# only add readline library if debugger is on
	AC_DEFINE(HAVE_LIBREADLINE, 1)
	READLINE_LIB='-lreadline'
      fi
    ]
  )
fi
  AC_SUBST(READLINE_LIB)

AC_CHECK_HEADER(readline/history.h,
  AC_DEFINE(HAVE_READLINE_HISTORY_H)
  )


AC_MSG_CHECKING(for loader support)
AC_ARG_ENABLE(loader,
  [  --enable-loader                   support calling external loader from debugger],
  [if test "$enableval" = yes; then
    AC_MSG_RESULT(yes)
    AC_DEFINE(BX_USE_LOADER, 1)
    BX_LOADER_OBJS='bx_loader.o loader.o'
   else
    AC_MSG_RESULT(no)
    AC_DEFINE(BX_USE_LOADER, 0)
    BX_LOADER_OBJS=''
   fi],
  [
    AC_MSG_RESULT(no)
    AC_DEFINE(BX_USE_LOADER, 0)
    BX_LOADER_OBJS=''
    ]
  )
AC_SUBST(BX_LOADER_OBJS)



INSTRUMENT_DIR='instrument/stubs'

AC_MSG_CHECKING(for instrumentation support)
AC_ARG_ENABLE(instrumentation,
  [  --enable-instrumentation          compile in support for instrumentation],
  [if test "$enableval" = yes; then
    AC_MSG_RESULT(yes)
    AC_DEFINE(BX_INSTRUMENTATION, 1)
    INSTRUMENT_VAR='$(INSTRUMENT_LIB)'
   elif test "$enableval" = no; then
    AC_MSG_RESULT(no)
    AC_DEFINE(BX_INSTRUMENTATION, 0)
    INSTRUMENT_VAR=''
   else
    AC_MSG_RESULT(yes)
    AC_DEFINE(BX_INSTRUMENTATION, 1)
    INSTRUMENT_DIR=$enableval
    INSTRUMENT_VAR='$(INSTRUMENT_LIB)'
   fi],
  [
    AC_MSG_RESULT(no)
    AC_DEFINE(BX_INSTRUMENTATION, 0)
    INSTRUMENT_VAR=''
    ]
  )
AC_SUBST(INSTRUMENT_DIR)
AC_SUBST(INSTRUMENT_VAR)

AC_ARG_ENABLE(simid,
  [  --enable-simid=0 or 1             CPU simulator ID if using more than one],
  [if test "$enableval" = yes; then
    AC_DEFINE(BX_SIM_ID, 0)
   elif test "$enableval" = no; then
    AC_DEFINE(BX_SIM_ID, 0)
   else
    AC_DEFINE_UNQUOTED(BX_SIM_ID, $enableval)
   fi],
  [
    AC_DEFINE(BX_SIM_ID, 0)
    ]
  )

AC_ARG_ENABLE(num-sim,
  [  --enable-num-sim=1 or 2           number of CPU simulators],
  [if test "$enableval" = yes; then
    AC_DEFINE(BX_NUM_SIMULATORS, 1)
   elif test "$enableval" = no; then
    AC_DEFINE(BX_NUM_SIMULATORS, 1)
   else
    AC_DEFINE_UNQUOTED(BX_NUM_SIMULATORS, $enableval)
   fi],
  [
    AC_DEFINE(BX_NUM_SIMULATORS, 1)
    ]
  )

AC_ARG_ENABLE(time0,
  [  --enable-time0=n                  start at n instead of using time()],
  [if test "$enableval" = yes; then
    AC_DEFINE(BX_USE_SPECIFIED_TIME0, 917385580)
   elif test "$enableval" = no; then
    AC_DEFINE(BX_USE_SPECIFIED_TIME0, 0)
   else
    AC_DEFINE_UNQUOTED(BX_USE_SPECIFIED_TIME0, $enableval)
   fi],
  [
    AC_DEFINE(BX_USE_SPECIFIED_TIME0, 0)
    ]
  )



AC_MSG_CHECKING(for VGA emulation)
AC_ARG_ENABLE(vga,
  [  --enable-vga                      use VGA emulation],
  [if test "$enableval" = yes; then
    AC_MSG_RESULT(yes)
    AC_DEFINE(BX_SUPPORT_VGA, 1)
    VIDEO_OBJS='$(VIDEO_OBJS_VGA)'
   else
    AC_MSG_RESULT(no)
    AC_DEFINE(BX_SUPPORT_VGA, 0)
    VIDEO_OBJS='$(VIDEO_OBJS_HGA)'
   fi],
  [
    AC_MSG_RESULT(no)
    AC_DEFINE(BX_SUPPORT_VGA, 0)
    VIDEO_OBJS='$(VIDEO_OBJS_HGA)'
    ]
  )
AC_SUBST(VIDEO_OBJS)

AC_MSG_CHECKING(for FPU emulation)
FPU_VAR=''
FPU_GLUE_OBJ=''
AC_ARG_ENABLE(fpu,
  [  --enable-fpu                      compile in FPU emulation],
  [if test "$enableval" = yes; then
    AC_MSG_RESULT(yes)
    AC_DEFINE(BX_SUPPORT_FPU, 1)
    FPU_VAR='$(FPU_LIB)'
    FPU_GLUE_OBJ='$(FPU_GLUE_OBJ)'
   elif test "$enableval" = no; then
    AC_MSG_RESULT(no)
    AC_DEFINE(BX_SUPPORT_FPU, 0)
   else
    echo " "
    echo "ERROR: --enable-fpu does not accept a path"
    exit 1
   fi
   ],
  [
    AC_MSG_RESULT(yes)
    AC_DEFINE(BX_SUPPORT_FPU, 1)
    FPU_VAR='$(FPU_LIB)'
    FPU_GLUE_OBJ='$(FPU_GLUE_OBJ)'
    ]
  )
AC_SUBST(FPU_VAR)
AC_SUBST(FPU_GLUE_OBJ)



AC_MSG_CHECKING(for x86 debugger support)
AC_ARG_ENABLE(x86-debugger,
  [  --enable-x86-debugger             x86 debugger support],
  [if test "$enableval" = yes; then
    AC_MSG_RESULT(yes)
    AC_DEFINE(BX_X86_DEBUGGER, 1)
   elif test "$enableval" = no; then
    AC_MSG_RESULT(no)
    AC_DEFINE(BX_X86_DEBUGGER, 0)
   else
    AC_MSG_RESULT(yes)
    AC_DEFINE(BX_X86_DEBUGGER, 1)
   fi],
  [
    AC_MSG_RESULT(no)
    AC_DEFINE(BX_X86_DEBUGGER, 0)
    ]
  )

AC_MSG_CHECKING(for CDROM support)
AC_ARG_ENABLE(cdrom,
  [  --enable-cdrom                    CDROM support],
  [if test "$enableval" = yes; then
    AC_MSG_RESULT(yes)
    CDROM_OBJS='cdrom.o'
    AC_DEFINE(BX_SUPPORT_CDROM, 1)
   elif test "$enableval" = no; then
    AC_MSG_RESULT(no)
    CDROM_OBJS=''
    AC_DEFINE(BX_SUPPORT_CDROM, 0)
   else
    AC_MSG_RESULT(yes)
    CDROM_OBJS='cdrom.o'
    AC_DEFINE(BX_SUPPORT_CDROM, 1)
   fi],
  [
    AC_MSG_RESULT(no)
    CDROM_OBJS=''
    AC_DEFINE(BX_SUPPORT_CDROM, 0)
    ]
  )
AC_SUBST(CDROM_OBJS)


AC_MSG_CHECKING(for Sound Blaster 16 support)
AC_ARG_ENABLE(sb16,
  [  --enable-sb16                     Sound Blaster 16 Support],
  [if test "$enableval" = no; then
     AC_MSG_RESULT(no)
     SB16_OBJS=''
     AC_DEFINE(BX_SUPPORT_SB16, 0)
   else
     case "$enableval" in
       dummy)
         SB16_OBJS='$(SB16_DUMMY_OBJS)'
         AC_DEFINE(BX_SOUND_OUTPUT_C, bx_sound_output_c)
         AC_MSG_RESULT(dummy)
         ;;
       linux)
         SB16_OBJS='$(SB16_LINUX_OBJS)'
         AC_DEFINE(BX_SOUND_OUTPUT_C, bx_sound_linux_c)
         AC_MSG_RESULT(linux)
         ;;
       win)
         SB16_OBJS='$(SB16_WIN_OBJS)'
         AC_DEFINE(BX_SOUND_OUTPUT_C, bx_sound_windows_c)
         AC_MSG_RESULT(win)
         ;;
       *)
         echo " "
         echo \!\!\!Error\!\!\!
         echo "You must pass one of dummy, linux, win to --enable-sb16"
         exit 1 ;;
     esac
     AC_DEFINE(BX_SUPPORT_SB16, 1)
   fi],

  [
    AC_MSG_RESULT(no)
    SB16_OBJS=''
    AC_DEFINE(BX_SUPPORT_SB16, 0)
    ]
  )
AC_SUBST(SB16_OBJS)


AC_ARG_ENABLE(hga-dumps,
  [  --enable-hga-dumps=Nmicroseconds  copy memory to HGA video buffer every N useconds],
  AC_DEFINE_UNQUOTED(BX_EMULATE_HGA_DUMPS, $enableval),
  )

PRIMARY_TARGET='bochs'

AC_DEFINE(BX_PROVIDE_DEVICE_MODELS, 0)
IODEV_LIB_VAR='iodev/libiodev.a'
AC_DEFINE(BX_PROVIDE_CPU_MEMORY, 1)
NONINLINE_VAR='$(NONINLINE_OBJS)'

AC_SUBST(IODEV_LIB_VAR)
AC_SUBST(NONINLINE_VAR)
AC_SUBST(INLINE_VAR)
AC_SUBST(EXTERNAL_DEPENDENCY)


AC_ARG_WITH(x11,
  [  --with-x11                        use X11 GUI],
  )

AC_ARG_WITH(beos,
  [  --with-beos                       use BeOS GUI],
  )

AC_ARG_WITH(win32,
  [  --with-win32                      use Win32 GUI],
  )

AC_ARG_WITH(win32-vcpp,
  [  --with-win32-vcpp                 use Win32 GUI/Visual C++ environment],
  )

AC_ARG_WITH(macos,
  [  --with-macos                      use Macintosh/CodeWarrior environment],
  )

AC_ARG_WITH(nogui,
  [  --with-nogui                      no native GUI, just use blank stubs],
  )

AC_ARG_WITH(term,
  [  --with-term                       textmode terminal environment],
  )

AC_ARG_WITH(rfb,
  [  --with-rfb                        use RFB protocol, works with VNC viewer],
  )

AC_MSG_CHECKING(for gui library to use)

dnl Disable GUIs for SID use
with_nogui=yes

dnl // make sure X Windows is default if no other chosen
if (test "$with_x11" != yes) && \
   (test "$with_beos" != yes) && \
   (test "$with_win32" != yes) && \
   (test "$with_nogui" != yes) && \
   (test "$with_win32_vcpp" != yes) && \
   (test "$with_term" != yes) && \
   (test "$with_rfb" != yes) && \
   (test "$with_macos" != yes); then
  with_x11=yes
fi

dnl // DASH is option prefix for your platform
dnl // SLASH is directory for your platform
dnl // CXXFP is C++ File Prefix; the flag that tells the compiler
dnl //   this is a C++ source file
dnl // CFP is C File Prefix; the flag that tells the compiler
dnl //   this is a C source file
dnl // OFP is Object File Prefix; the flag that tells the compiler
dnl //   generate an object file with this name
DASH="-"
SLASH="/"
CXXFP=""
CFP=""
OFP="-o "
MAKELIB="ar rv \$@@"
RMCOMMAND="rm -f "
LINK="\$(CXX) -o \$@@ \$(CXXFLAGS)"
EXE=""
COMMAND_SEPARATOR="&& \\"
CD_UP_ONE="echo done"
CD_UP_TWO="echo done"

if test "$with_x11" = yes; then
  AC_MSG_RESULT(X windows)
  if test "$no_x" = yes; then
    echo ERROR: X windows gui was selected, but X windows libraries were not found.
    exit 1
  fi
  AC_DEFINE(BX_WITH_X11, 1)
  GUI_OBJS='$(GUI_OBJS_X11)'
  GUI_LINK_OPTS='$(GUI_LINK_OPTS_X)'
elif test "$with_win32" = yes; then
  AC_MSG_RESULT(win32)
  AC_DEFINE(BX_WITH_WIN32, 1)
  GUI_OBJS='$(GUI_OBJS_WIN32)'
  GUI_LINK_OPTS='$(GUI_LINK_OPTS_WIN32)'
elif test "$with_beos" = yes; then
  AC_MSG_RESULT(beos)
  AC_DEFINE(BX_WITH_BEOS, 1)
  GUI_OBJS='$(GUI_OBJS_BEOS)'
  GUI_LINK_OPTS='$(GUI_LINK_OPTS_BEOS)'
elif test "$with_rfb" = yes; then
  AC_MSG_RESULT(rfb)
  AC_DEFINE(BX_WITH_RFB, 1)
  GUI_OBJS='$(GUI_OBJS_RFB)'
  GUI_LINK_OPTS='$(GUI_LINK_OPTS_RFB)'
elif test "$with_win32_vcpp" = yes; then
  AC_MSG_RESULT(win32-vcpp)
  AC_DEFINE(BX_WITH_WIN32, 1)
  GUI_OBJS='$(GUI_OBJS_WIN32)'
  GUI_LINK_OPTS='$(GUI_LINK_OPTS_WIN32_VCPP)'

  CC="cl"
  CXX="$CC"
  #C_OPT="/Zi"   # for debugging
  C_OPT="/O2"   # optimize for speed
  CFLAGS="/nologo /G6 /MT /W3 /GX /DNDEBUG /DWIN32 /D_WINDOWS $C_OPT"
  CXXFLAGS="$CFLAGS"
  DASH="/"
  SLASH="\\"
  CXXFP="/Tp"
  CFP="/Tc"
  OFP="/Fo"
  MAKELIB="lib.exe /nologo /subsystem:console /machine:I386 /verbose /out:\$@@"
  RMCOMMAND="-del"
  RANLIB="echo"
  #L_OPT="/debug"    # for debugging
  L_OPT=""           # no debug info
  LINK="link $L_OPT /nologo /subsystem:console /incremental:no /machine:I386 /out:\$@@ BINMODE.OBJ"
  EXE=".exe"
  PRIMARY_TARGET="bochs.exe"
  COMMAND_SEPARATOR=""
  CD_UP_ONE="cd .."
  CD_UP_TWO="cd ..\.."
  AC_DEFINE(BX_64BIT_CONSTANTS_USE_LL, 0)
  AC_DEFINE(inline, __inline)
  AC_DEFINE(BX_NO_EMPTY_STRUCTS, 1)
  AC_DEFINE(BX_NO_ATTRIBUTES, 1)
  AC_DEFINE(BX_HAVE_HASH_MAP, 0)
elif test "$with_macos" = yes; then
  AC_MSG_RESULT(macos)
  AC_DEFINE(BX_WITH_MACOS, 1)
  AC_DEFINE(BX_HAVE_STRDUP, 0)
  GUI_OBJS='$(GUI_OBJS_MACOS)'
  GUI_LINK_OPTS='$(GUI_LINK_OPTS_MACOS)'
elif test "$with_term" = yes; then
  AC_MSG_RESULT(term)
  AC_DEFINE(BX_WITH_TERM, 1)
  GUI_OBJS='$(GUI_OBJS_TERM)'
  GUI_LINK_OPTS='$(GUI_LINK_OPTS_TERM)'
  use_curses=yes
else
  AC_MSG_RESULT(none)
  AC_DEFINE(BX_WITH_NOGUI, 1)
  GUI_OBJS='$(GUI_OBJS_NOGUI)'
  GUI_LINK_OPTS='$(GUI_LINK_OPTS_NOGUI)'
fi

if test "$use_curses" = yes; then
  AC_CHECK_LIB(curses, mvaddch, GUI_LINK_OPTS_TERM='-lcurses')
  AC_CHECK_LIB(ncurses, mvaddch, GUI_LINK_OPTS_TERM='-lncurses')
  AC_CHECK_LIB(termlib, mvaddch, GUI_LINK_OPTS_TERM='-ltermlib')
  if test "$GUI_LINK_OPTS_TERM" = ""; then
    echo Curses library not found: tried curses, ncurses, and termlib.
    exit 1
  fi
fi

if test "$with_rfb" = yes; then
  # first see if compiler takes "-pthread" argument
  AC_MSG_CHECKING(for -pthread arg to compiler)
  CFLAGS_SAVE="$CFLAGS"
  CFLAGS="$CFLAGS -pthread"
  AC_TRY_LINK([ #include <pthread.h> ],
    [ pthread_create(0,0,0,0); ], 
    [ 
      # it compiles with -pthread
      AC_MSG_RESULT(yes) 
      CXXFLAGS="$CXXFLAGS -pthread"
    ],
    [
      AC_MSG_RESULT(no)
      # now try with -lpthread
      CFLAGS="$CFLAGS_SAVE"
      AC_CHECK_LIB(pthread, 
	pthread_create,
	[
	  # it compiles with -lpthread
	  RFB_LIBS='-lpthread'
	],
	[
	    echo ERROR: --with-rfb requires the pthread library, which could not be found.; exit 1
	])
    ])
fi

AC_CHECK_HEADERS(X11/Xos.h,have_xos_header=true,have_xos_header=false)
AM_CONDITIONAL(HAVE_XOS_HEADER, test x$have_xos_header = xtrue)

AC_SUBST(RFB_LIBS)
AC_SUBST(GUI_OBJS)
AC_SUBST(GUI_LINK_OPTS)
AC_SUBST(GUI_LINK_OPTS_TERM)
AC_SUBST(DASH)
AC_SUBST(SLASH)
AC_SUBST(CXXFP)
AC_SUBST(CFP)
AC_SUBST(OFP)
AC_SUBST(MAKELIB)
AC_SUBST(RMCOMMAND)
AC_SUBST(LINK)
AC_SUBST(EXE)
AC_SUBST(PRIMARY_TARGET)
AC_SUBST(COMMAND_SEPARATOR)
AC_SUBST(CD_UP_ONE)
AC_SUBST(CD_UP_TWO)

AC_PATH_PROG(GZIP, gzip)
AC_PATH_PROG(TAR, tar)

dnl Perform --target/--enable-targets processing.
CY_SIDTARGET_CHECK

AC_OUTPUT(Makefile vga/Makefile gui/Makefile keyboard/Makefile pic/Makefile pit/Makefile cmos/Makefile dma/Makefile floppy/Makefile unmapped/Makefile harddrv/Makefile cpu/Makefile cpu/memory/Makefile cpu/fpu/Makefile)
@


1.6
log
@sid/include/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* configure.in: Remove call to AC_ARG_PROGRAM, to avoid autoconf
	warnings about multiple uses.
	* configure: Regenerated with autoconf 2.59.

	* aclocal.m4, Makefile.in: Regenerated with Automake 1.9.5.

sid/bsp/pregen/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/bsp/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in, aclocal.m4: Regenerated with Automake 1.9.5.
	* configure: Regenerated with autoconf 2.59.

sid/demos/voice-pager/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* configure.in: Remove call to AC_ARG_PROGRAM, to avoid autoconf
	warnings about multiple uses.
	* configure: Regenerated with autoconf 2.59.

	* aclocal.m4, Makefile.in: Regenerated with Automake 1.9.5.

sid/demos/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* configure.in: Remove call to AC_ARG_PROGRAM, to avoid autoconf
	warnings about multiple uses.
	* configure: Regenerated with autoconf 2.59.

	* Makefile.in, aclocal.m4: Regenerated with Automake 1.9.5.

sid/samples/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* configure.in: Remove call to AC_ARG_PROGRAM, to avoid autoconf
	warnings about multiple uses.
	* configure: Regenerated.

	* Makefile.in, aclocal.m4: Regenerated with Automake 1.9.5.

sid/component/testsuite/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/gdb/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/consoles/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/bochs/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* dma/Makefile.in, harddrv/Makefile.in, vga/Makefile.in,
	keyboard/Makefile.in, floppy/Makefile.in, unmapped/Makefile.in,
	pit/Makefile.in, cpu/fpu/Makefile.in, cpu/memory/Makefile.in,
	cpu/Makefile.in, gui/Makefile.in, cmos/Makefile.in,
	pic/Makefile.in: Regenerated with Automake 1.9.5.
	* Makefile.in, aclocal.m4: Regenerated with Automake 1.9.5.

	* configure.in: Call m4_pattern_allow to reassure autoconf that
	the AS_DYNAMIC_OBJS and AS_DYNAMIC_INCS variables are not
	mistakes.
	* configure: Regenerated with autoconf 2.59.

sid/component/timers/arm7t/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in, aclocal.m4: Regenerated with Automake 1.9.5.
	* configure: Regenerated with autoconf 2.59.

sid/component/timers/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* configure.in: Apply AC_CONFIG_SUBDIRS only to literal strings.
	* configure: Regenerated.

sid/component/profiling/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/cfgroot/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* configure.in: Remove call to AC_ARG_PROGRAM, to avoid autoconf
	warnings about multiple uses.
	* configure: Regenerated with autoconf 2.59.

	* Makefile.in, aclocal.m4: Regenerated with Automake 1.9.5.

	* libltdl: Updated with files from libtool 1.5.18.

sid/component/tcl/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in, aclocal.m4: Regenerated with Automake 1.9.5.
	* configure: Regenerated with autoconf 2.59.

sid/component/cgen-cpu/arm7t/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in, aclocal.m4: Regenerated with Automake 1.9.5.
	* configure: Regenerated with autoconf 2.59.

sid/component/cgen-cpu/xstormy16/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in, aclocal.m4: Regenerated with Automake 1.9.5.
	* configure: Regenerated with autoconf 2.59.

sid/component/cgen-cpu/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* configure.in: Apply AC_CONFIG_SUBDIRS to literal strings only.
	* acinclude.m4 (gcc_AC_CHECK_DECL, gcc_AC_CHECK_DECLS): Properly
	quote macro names.
	* configure: Regenerated.

	* Makefile.am (LIBIBERTY): Link against the libiberty.a from
	libiberty/pic, not the non-PIC version in libiberty.
	* Makefile.in, aclocal.m4: Regenerated with Automake 1.9.5.

sid/component/cgen-cpu/m32r/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in, aclocal.m4: Regenerated with Automake 1.9.5.
	* configure: Regenerated with autoconf 2.59.

sid/component/audio/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in, aclocal.m4: Regenerated with Automake 1.9.5.
	* configure: Regenerated with autoconf 2.59.

sid/component/uart/testsuite/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/uart/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/loader/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.am (LIBIBERTY): Link against the libiberty.a from
	libiberty/pic, not the non-PIC version in libiberty.
	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/sched/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/mapper/testsuite/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/mapper/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/parport/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/memory/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/cache/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/rtc/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/gloss/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/lcd/testsuite/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/lcd/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in, aclocal.m4: Regenerated with Automake 1.9.5.

	* configure.in: Remove call to AC_ARG_PROGRAM, to avoid autoconf
	warnings about multiple uses.
	* configure: Regenerated with autoconf 2.59.

	* families/configure.in: Apply AC_CONFIG_SUBDIRS to literal
	strings only.
	* families/configure: Regenerated.

	* families/Makefile.in, families/aclocal.m4: Regenerated with
	Automake 1.9.5.

sid/component/mmu/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/interrupt/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/glue/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/ide/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/doc/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in, aclocal.m4: Regenerated with Automake 1.9.5.

	* configure.in: Remove call to AC_ARG_PROGRAM, to avoid autoconf
	warnings about multiple uses.
	* configure: Regenerated with autoconf 2.59.

sid/config/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* config.guess, config.sub, install-sh, missing, mkinstalldirs:
	Update.

	* docbuild.m4 (RH_DOCBUILD_CHECK): Propery quote macro name.
	* libstdc++.m4 (CY_LIBSTDCXX_CHECK): Same.
	* sidtarget.m4 (CY_SIDTARGET_CHECK): Same.

	* sidtarget.m4 (CY_SIDTARGET_CHECK): No need to specify the shell
	when running $ac_config_sub; $ac_config_sub contains the shell
	itself now, and it's an error to specify it twice.

	* libtool.m4, ltdl.m4, ltmain.sh: Update from libtool 1.5.18.

sid/main/dynamic/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.am (LIBIBERTY): Link against the libiberty.a from
	libiberty/pic, not the non-PIC version in libiberty.
	* Makefile.in, aclocal.m4: Regenerated with Automake 1.9.5.

	* configure.in: Remove call to AC_ARG_PROGRAM, to avoid autoconf
	warnings about multiple uses.
	* configure: Regenerated with autoconf 2.59.

sid/main/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in, aclocal.m4: Regenerated with Automake 1.9.5.
	* configure: Regenerated with autoconf 2.59.

sid/include/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* configure.in: Remove call to AC_ARG_PROGRAM, to avoid autoconf
	warnings about multiple uses.
	* configure: Regenerated with autoconf 2.59.

	* aclocal.m4, Makefile.in: Regenerated with Automake 1.9.5.

sid/bsp/pregen/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/bsp/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in, aclocal.m4: Regenerated with Automake 1.9.5.
	* configure: Regenerated with autoconf 2.59.

sid/demos/voice-pager/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* configure.in: Remove call to AC_ARG_PROGRAM, to avoid autoconf
	warnings about multiple uses.
	* configure: Regenerated with autoconf 2.59.

	* aclocal.m4, Makefile.in: Regenerated with Automake 1.9.5.

sid/demos/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* configure.in: Remove call to AC_ARG_PROGRAM, to avoid autoconf
	warnings about multiple uses.
	* configure: Regenerated with autoconf 2.59.

	* Makefile.in, aclocal.m4: Regenerated with Automake 1.9.5.

sid/samples/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* configure.in: Remove call to AC_ARG_PROGRAM, to avoid autoconf
	warnings about multiple uses.
	* configure: Regenerated.

	* Makefile.in, aclocal.m4: Regenerated with Automake 1.9.5.

sid/component/testsuite/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/gdb/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/consoles/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/bochs/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* dma/Makefile.in, harddrv/Makefile.in, vga/Makefile.in,
	keyboard/Makefile.in, floppy/Makefile.in, unmapped/Makefile.in,
	pit/Makefile.in, cpu/fpu/Makefile.in, cpu/memory/Makefile.in,
	cpu/Makefile.in, gui/Makefile.in, cmos/Makefile.in,
	pic/Makefile.in: Regenerated with Automake 1.9.5.
	* Makefile.in, aclocal.m4: Regenerated with Automake 1.9.5.

	* configure.in: Call m4_pattern_allow to reassure autoconf that
	the AS_DYNAMIC_OBJS and AS_DYNAMIC_INCS variables are not
	mistakes.
	* configure: Regenerated with autoconf 2.59.

sid/component/timers/arm7t/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in, aclocal.m4: Regenerated with Automake 1.9.5.
	* configure: Regenerated with autoconf 2.59.

sid/component/timers/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* configure.in: Apply AC_CONFIG_SUBDIRS only to literal strings.
	* configure: Regenerated.

sid/component/profiling/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/cfgroot/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* configure.in: Remove call to AC_ARG_PROGRAM, to avoid autoconf
	warnings about multiple uses.
	* configure: Regenerated with autoconf 2.59.

	* Makefile.in, aclocal.m4: Regenerated with Automake 1.9.5.

	* libltdl: Updated with files from libtool 1.5.18.

sid/component/tcl/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in, aclocal.m4: Regenerated with Automake 1.9.5.
	* configure: Regenerated with autoconf 2.59.

sid/component/cgen-cpu/arm7t/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in, aclocal.m4: Regenerated with Automake 1.9.5.
	* configure: Regenerated with autoconf 2.59.

sid/component/cgen-cpu/xstormy16/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in, aclocal.m4: Regenerated with Automake 1.9.5.
	* configure: Regenerated with autoconf 2.59.

sid/component/cgen-cpu/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* configure.in: Apply AC_CONFIG_SUBDIRS to literal strings only.
	* acinclude.m4 (gcc_AC_CHECK_DECL, gcc_AC_CHECK_DECLS): Properly
	quote macro names.
	* configure: Regenerated.

	* Makefile.am (LIBIBERTY): Link against the libiberty.a from
	libiberty/pic, not the non-PIC version in libiberty.
	* Makefile.in, aclocal.m4: Regenerated with Automake 1.9.5.

sid/component/cgen-cpu/m32r/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in, aclocal.m4: Regenerated with Automake 1.9.5.
	* configure: Regenerated with autoconf 2.59.

sid/component/audio/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in, aclocal.m4: Regenerated with Automake 1.9.5.
	* configure: Regenerated with autoconf 2.59.

sid/component/uart/testsuite/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/uart/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/loader/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.am (LIBIBERTY): Link against the libiberty.a from
	libiberty/pic, not the non-PIC version in libiberty.
	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/sched/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/mapper/testsuite/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/mapper/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/parport/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/memory/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/cache/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/rtc/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/gloss/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/lcd/testsuite/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/lcd/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in, aclocal.m4: Regenerated with Automake 1.9.5.

	* configure.in: Remove call to AC_ARG_PROGRAM, to avoid autoconf
	warnings about multiple uses.
	* configure: Regenerated with autoconf 2.59.

	* families/configure.in: Apply AC_CONFIG_SUBDIRS to literal
	strings only.
	* families/configure: Regenerated.

	* families/Makefile.in, families/aclocal.m4: Regenerated with
	Automake 1.9.5.

sid/component/mmu/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/interrupt/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/glue/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/component/ide/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/doc/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in: Regenerated with Automake 1.9.5.

sid/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in, aclocal.m4: Regenerated with Automake 1.9.5.

	* configure.in: Remove call to AC_ARG_PROGRAM, to avoid autoconf
	warnings about multiple uses.
	* configure: Regenerated with autoconf 2.59.

sid/config/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* config.guess, config.sub, install-sh, missing, mkinstalldirs:
	Update.

	* docbuild.m4 (RH_DOCBUILD_CHECK): Propery quote macro name.
	* libstdc++.m4 (CY_LIBSTDCXX_CHECK): Same.
	* sidtarget.m4 (CY_SIDTARGET_CHECK): Same.

	* sidtarget.m4 (CY_SIDTARGET_CHECK): No need to specify the shell
	when running $ac_config_sub; $ac_config_sub contains the shell
	itself now, and it's an error to specify it twice.

	* libtool.m4, ltdl.m4, ltmain.sh: Update from libtool 1.5.18.

sid/main/dynamic/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.am (LIBIBERTY): Link against the libiberty.a from
	libiberty/pic, not the non-PIC version in libiberty.
	* Makefile.in, aclocal.m4: Regenerated with Automake 1.9.5.

	* configure.in: Remove call to AC_ARG_PROGRAM, to avoid autoconf
	warnings about multiple uses.
	* configure: Regenerated with autoconf 2.59.

sid/main/ChangeLog:
2005-06-03  Jim Blandy  <jimb@@redhat.com>

	* Makefile.in, aclocal.m4: Regenerated with Automake 1.9.5.
	* configure: Regenerated with autoconf 2.59.
@
text
@d5 1
a5 1
AC_CONFIG_AUX_DIR(../../config)
@


1.5
log
@	* Makefile.am (SUBDIRLIST): Add harddrv.
	(SUBLIBLIST): Add harddrv/libharddrv.la.
	(INCLUDES): Add harddrv.
	* bochs.h: Include harddrv.h header.
	* components.cxx: Add hw-disk-harddrive type.
	* configure.in (AC_OUTPUT): Add harddrv/Makefile.
	* cmos/sid-cmos-wrapper.cc: Remove cmos_irq_number,
	use_host_time and start_time attributes.
	Add base_memory_in_k, extended_memory_in_k attributes.
	Remove get_time function.
	* cpu/cpu.cc: Change mem->read_physical calls to access_linear
	calls.
	* cpu/cpu.h: Change _16_bit_base_reg references to
	a_16_bit_base_reg, to prevent compiler warnings on some hosts.
	* cpu/init.cc: Likewise.
	* cpu/proc_ctrl.cc: Add RDTSC implementation.
	* floppy/sid-floppy-wrapper.cc: Split up io memory range so that
	3f6 is left for hard drive.
	Add command-delay attribute.
	* keyboard/keyboard.cc: Handle reads from, and writes to port
	0x92.
	* keyboard/sid-keyboard-wrapper.cc: Add serial-delay attribute.
	* pic/sid-pic-wrapper.cc: Change implementation; provide one pin
	per irq, rather than one irq-number pin.
	* vga/sid-vga-wrapper.cc: Fix cmos writing bug.
	* vga/vga.cc: Add BX_SUPPORT_SID ifdefs, so that diffs between
	this file and the bochs version are clearer.
@
text
@d177 1
@


1.4
log
@	* debug/debug.h: Move to top-level bochs directory.
	* debug: Remove directory.
	* pic/*: New files.
	* floppy/*: New files.
	* cmos/*: New files.
	* unmapped/*: New files.
	* dma/*: New files.
	* pit/*: New files.
	* cpu/x86.h: Rename to sid-x86-cpu-wrapper.h.
	* cpu/x86.cc: Rename to sid-x86-cpu-wrapper.cc.
	* cpu/x86-memory-modes.cc: Rename to sid-x86-memory-modes.cc.
	* memory/*: Move to cpu/memory/*.
	* fpu/*: Move to cpu/fpu/*.
	* bochs.h: Change #include's to reflect new and moved files.
	Add sid expansions for A20ADDR(x), BX_INP(addr, len),
	BX_OUTP(addr, val, len), BX_RAISE_HLDA(),
	BX_SET_ENABLE_A20(enabled), BX_GET_ENABLE_A20(), and
	BX_NULL_TIMER_HANDLE.
	* components.cxx: Add support for cmos, dma, pic, pit, floppy,
	unmapped.
	* config.h.in: Set BX_SUPPORT_TASKING, BX_DMA_FLOPPY_IO and
	BX_SUPPORT_A20 to 1 by default.
	Set SMF macros to 0 for cmos, dma, pic, pit, floppy and unmapped
	components.
	* configure.in: Add pic, pit, cmos, dma, floppy, and unmapped
	Makefiles to AC_OUTPUT.
	* cpu/exception-sid.cc: Remove.  Merge differences into
	cpu/exception.cc.
	* cpu/cpu-sid.h: Remove.  Merge differences into cpu/cpu.h.
	* cpu/cpu-sid.cc: Remove.  Merge differences into cpu/cpu.cc.
	* cpu/init-sid.cc: Remove.  Merge differences into cpu/init.cc.
	* cpu/soft_int-sid.cc: Remove.
	* cpu/debugstuff-sid.cc: Remove.  Merge differences into
	cpu/debugstuff.cc.
	* cpu/ctrl_xfer32-sid.cc: Remove.
	* cpu/fetchdecode-sid.cc: Remove.
	* cpu/Makefile.am: Remove references to removed files.
	(SUBDIRS) Add memory and fpu.
	(SUBLIBS) Add memory/libmemory.la and fpu/libfpu.la.
	(INCLUDES) Add memory and fpu directories.
	* cpu/cpu.cc: Remove BX_HRQ related FIXME's.
	Add interrupt pin support.
	* cpu/debugstuff.cc (BX_SUPPORT_SID): Add implementations of
	dbg_get_reg, dbg_set_reg, and dbg_get_eflags for when
	BX_DEBUGGER isn't defined.
	* cpu/io.cc: Remove #if 0's -- no longer needed.
	* cpu/io_pro.cc: Likewise.
	* gui/x-gui.cc: Change title bar messages.
	* keyboard/keyboard.cc: Change keyboard to remove serial delay
	pin.
	* keyboard/sid-keyboard-wrapper.cc: Add a20-related pins.
	Remove serial-delay pin.
	Add cmos accessor.
	Add trigger-irq pin.
	* keyboard/sid-keyboard-wrapper.h: Likewise.
	* vga/sid-vga-wrapper.cc: Rename buses from eg. 3b4 to 0x3b4.
	Import imagemmap code from generic.cxx.
	* vga/vga.cc: Cap number of rows at BX_MAX_TEXT_LINES.
	* Makefile.am (SUBDIRLIST): Add pic, pit, cmos, dma, floppy,
	unmapped.
	Removed fpu, memory.
	(SUBLIBLIST): Likewise.
	(INCLUDES): Likewise.
@
text
@d931 1
a931 1
AC_OUTPUT(Makefile vga/Makefile gui/Makefile keyboard/Makefile pic/Makefile pit/Makefile cmos/Makefile dma/Makefile floppy/Makefile unmapped/Makefile cpu/Makefile cpu/memory/Makefile cpu/fpu/Makefile)
@


1.3
log
@	* Makefile.am (SUBDIRLIST): Add keyboard.
	(SUBLIBLIST): Add keyboard/libkeyboard.la.
	(INCLUDES): Add keyboard directory.
	* bochs.h [BX_SUPPORT_SID] (BX_SET_ENABLE_A20): Change expansion
	to nil.
	[BX_SUPPORT_SID] (BX_GET_ENABLE_A20): Change expansion to 0.
	Make declaration of bx_dbg unconditional.
	Include keyboard/keyboard.h.
	* components.cxx: Add type hw-input-keyboard.
	* config.h.in (BX_SUPPORT_PAGING): Set to 1.
	(BX_USE_TLB): Likewise.
	(BX_USE_KEY_SMF): Set to 0.
	* configure.in: Add keyboard/Makefile to AC_OUTPUT.

	* cpu/exception.cc: Remove BX_DEBUGGER ifdefs from around bx_dbg
	references.
	* cpu/proc_ctrl.cc: Likewise.
	* cpu/protect_ctrl_pro.cc: Likewise.

	* gui/x-gui.h: Add generate_scancode_pin output_pin.
	* gui/x-gui.cc:	Add ascii_to_key_event array.
	(x_gui): Add generate-scancode pin.
	(handle_events): Add checks for KeyPress and KeyRelease events.
	(xkeypress): New function.

	* keyboard/Makefile.am: New file.
	* keyboard/Makefile.in: Likewise.
	* keyboard/keyboard.cc: Likewise.
	* keyboard/keyboard.h: Likewise.
	* keyboard/keysymbols.h: Likewise.
	* keyboard/sid-keyboard-wrapper.cc: Likewise.
	* keyboard/sid-keyboard-wrapper.h: Likewise.
	* keyboard/tests: Likewise.
	* keyboard/tests/kbd-test.c: Likewise.

	* vga/sid-vga-wrapper.cc (vga): Change port pin names.
	* vga/sid-vga-wrapper.h: Change VGA_SID_WRAPPER_DEF_H to SID_VGA_WRAPPER_DEF_H.
@
text
@d931 1
a931 1
AC_OUTPUT(Makefile vga/Makefile gui/Makefile keyboard/Makefile cpu/Makefile memory/Makefile fpu/Makefile)
@


1.2
log
@	* Makefile.am (SUBDIRLIST): Add vga, gui.
	(SUBLIBLIST): Add vga/libvga.la, gui/libgui.la.
	(INCLUDES): Add vga, gui directories.
	* bochs.h: Include vga/vga.h.
	* configure.in: Add check for X11/Xos.h header.
	Add vga/Makefile and gui/Makefile to AC_OUTPUT.
	* config.h.in (BX_USE_VGA_SMF): Set to 0.
	(HAVE_X11_XOS_H): New define.
	* components.cxx (compX86ListTypes): Add types hw-video-vga,
	sid-io-vga.
	(compX86Create): Likewise.
	(compX86Delete): Handle deletion of x86_cpu, vga and x_gui components.

	* gui/Makefile.am: New file.
	* gui/Makefile.in: Likewise.
	* gui/dummy.cc: Likewise.
	* gui/icon_bochs.h: Likewise.
	* gui/x-gui.h: Likewise.
	* gui/x-gui.cc: Likewise.

	* vga/Makefile.am: New file.
	* vga/Makefile.in: Likewise.
	* vga/sid-vga-wrapper.cc: Likewise.
	* vga/sid-vga-wrapper.h: Likewise.
	* vga/tests/vga-test-bounce.c: Likewise.
	* vga/tests/vga-test-color.c: Likewise.
	* vga/tests/vga-test-draw.c: Likewise.
	* vga/tests/vga-test-modes.c: Likewise.
	* vga/vga.cc: Likewise.
	* vga/vga.cc: Likewise.
@
text
@d931 1
a931 1
AC_OUTPUT(Makefile vga/Makefile gui/Makefile cpu/Makefile memory/Makefile fpu/Makefile)
@


1.1
log
@	Changes to many generated files -- incorporate bochs into
	build system and configrun-sid.
@
text
@d904 3
d931 1
a931 1
AC_OUTPUT(Makefile cpu/Makefile memory/Makefile fpu/Makefile)
@

