head	1.3;
access;
symbols
	sid-snapshot-20180601:1.3
	sid-snapshot-20180501:1.3
	sid-snapshot-20180401:1.3
	sid-snapshot-20180301:1.3
	sid-snapshot-20180201:1.3
	sid-snapshot-20180101:1.3
	sid-snapshot-20171201:1.3
	sid-snapshot-20171101:1.3
	sid-snapshot-20171001:1.3
	sid-snapshot-20170901:1.3
	sid-snapshot-20170801:1.3
	sid-snapshot-20170701:1.3
	sid-snapshot-20170601:1.3
	sid-snapshot-20170501:1.3
	sid-snapshot-20170401:1.3
	sid-snapshot-20170301:1.3
	sid-snapshot-20170201:1.3
	sid-snapshot-20170101:1.3
	sid-snapshot-20161201:1.3
	sid-snapshot-20161101:1.3
	sid-snapshot-20160901:1.3
	sid-snapshot-20160801:1.3
	sid-snapshot-20160701:1.3
	sid-snapshot-20160601:1.3
	sid-snapshot-20160501:1.3
	sid-snapshot-20160401:1.3
	sid-snapshot-20160301:1.3
	sid-snapshot-20160201:1.3
	sid-snapshot-20160101:1.3
	sid-snapshot-20151201:1.3
	sid-snapshot-20151101:1.3
	sid-snapshot-20151001:1.3
	sid-snapshot-20150901:1.3
	sid-snapshot-20150801:1.3
	sid-snapshot-20150701:1.3
	sid-snapshot-20150601:1.3
	sid-snapshot-20150501:1.3
	sid-snapshot-20150401:1.3
	sid-snapshot-20150301:1.3
	sid-snapshot-20150201:1.3
	sid-snapshot-20150101:1.3
	sid-snapshot-20141201:1.3
	sid-snapshot-20141101:1.3
	sid-snapshot-20141001:1.3
	sid-snapshot-20140901:1.3
	sid-snapshot-20140801:1.3
	sid-snapshot-20140701:1.3
	sid-snapshot-20140601:1.3
	sid-snapshot-20140501:1.3
	sid-snapshot-20140401:1.3
	sid-snapshot-20140301:1.3
	sid-snapshot-20140201:1.3
	sid-snapshot-20140101:1.3
	sid-snapshot-20131201:1.3
	sid-snapshot-20131101:1.3
	sid-snapshot-20131001:1.3
	sid-snapshot-20130901:1.3
	sid-snapshot-20130801:1.3
	sid-snapshot-20130701:1.3
	sid-snapshot-20130601:1.3
	sid-snapshot-20130501:1.3
	sid-snapshot-20130401:1.3
	sid-snapshot-20130301:1.3
	sid-snapshot-20130201:1.3
	sid-snapshot-20130101:1.3
	sid-snapshot-20121201:1.3
	sid-snapshot-20121101:1.3
	sid-snapshot-20121001:1.3
	sid-snapshot-20120901:1.3
	sid-snapshot-20120801:1.3
	sid-snapshot-20120701:1.3
	sid-snapshot-20120601:1.3
	sid-snapshot-20120501:1.3
	sid-snapshot-20120401:1.3
	sid-snapshot-20120301:1.3
	sid-snapshot-20120201:1.3
	sid-snapshot-20120101:1.3
	sid-snapshot-20111201:1.3
	sid-snapshot-20111101:1.3
	sid-snapshot-20111001:1.3
	sid-snapshot-20110901:1.3
	sid-snapshot-20110801:1.3
	sid-snapshot-20110701:1.3
	sid-snapshot-20110601:1.3
	sid-snapshot-20110501:1.3
	sid-snapshot-20110401:1.3
	sid-snapshot-20110301:1.3
	sid-snapshot-20110201:1.3
	sid-snapshot-20110101:1.3
	sid-snapshot-20101201:1.3
	sid-snapshot-20101101:1.3
	sid-snapshot-20101001:1.3
	sid-snapshot-20100901:1.3
	sid-snapshot-20100801:1.3
	sid-snapshot-20100701:1.3
	sid-snapshot-20100601:1.3
	sid-snapshot-20100501:1.3
	sid-snapshot-20100401:1.3
	sid-snapshot-20100301:1.3
	sid-snapshot-20100201:1.3
	sid-snapshot-20100101:1.3
	sid-snapshot-20091201:1.3
	sid-snapshot-20091101:1.3
	sid-snapshot-20091001:1.3
	sid-snapshot-20090901:1.3
	sid-snapshot-20090801:1.3
	sid-snapshot-20090701:1.3
	sid-snapshot-20090601:1.3
	sid-snapshot-20090501:1.3
	sid-snapshot-20090401:1.3
	sid-snapshot-20090301:1.3
	sid-snapshot-20090201:1.3
	sid-snapshot-20090101:1.3
	sid-snapshot-20081201:1.3
	sid-snapshot-20081101:1.3
	sid-snapshot-20081001:1.3
	sid-snapshot-20080901:1.3
	sid-snapshot-20080801:1.3
	sid-snapshot-20080701:1.3
	sid-snapshot-20080601:1.3
	sid-snapshot-20080501:1.3
	sid-snapshot-20080403:1.3
	sid-snapshot-20080401:1.3
	sid-snapshot-20080301:1.3
	sid-snapshot-20080201:1.3
	sid-snapshot-20080101:1.3
	sid-snapshot-20071201:1.3
	sid-snapshot-20071101:1.3
	sid-snapshot-20071001:1.3
	sid-20020905-branchpoint:1.3
	sid-20020905-branch:1.3.0.2
	cygnus_cvs_20020108_pre:1.2;
locks; strict;
comment	@# @;


1.3
date	2002.03.04.23.54.55;	author fitzsim;	state Exp;
branches;
next	1.2;

1.2
date	2001.08.03.01.30.18;	author bje;	state Exp;
branches;
next	1.1;

1.1
date	2000.12.07.19.30.51;	author fche;	state Exp;
branches;
next	;


desc
@@


1.3
log
@	* compIDE.cxx (command_set): Add implementation of 0x91
	command.
	(ide_controller): Change controlbus offsets to 0x0 and 0x1.
@
text
@                hw-disk-ide (libide.la :: ide_component_library)

Synopsis:

   This component models a simple ATA (IDE) hard drive controller plus up to
   two disk drives.

     ----------------------------------------------------------------------

Functionality:

  Modelling:

   This component models a PC-style ATA (IDE) hard drive controller plus up
   to two disk drives. The two individually configured drives use host files
   for storage of the disk image. Access time appears to be instantaneous to
   the simulated target.

   This model supports only old IDE programming interfaces. These should be a
   common subset of most real IDE-like devices (hard drives, CD-ROMs,
   CompactFlash drives, etc.). Only PIO (programmed I/O) is supported, so no
   ATAPI or DMA functions are available. However, the drive models are
   self-describing, so they can indicate that these missing functions are not
   available.

   +-------------------------------------------------+
   |                    Behaviors                    |
   |-------------------------------------------------|
   |    initialization | All parameters must be set  |
   |                   | for the selected simulated  |
   |                   | drive (N=0 or 1) to become  |
   |                   | available. The given disk   |
   |                   | image file will be opened   |
   |                   | for read and write as long  |
   |                   | as the "driveN-file"        |
   |                   | attribute is set. Undefined |
   |                   | behaviour occurs if these   |
   |                   | settings are changed while  |
   |                   | the drive model is in use,  |
   |                   | or if the values are        |
   |                   | illegal. Undefined          |
   |                   | behaviour occurs if the     |
   |                   | same disk image file is     |
   |                   | shared by more than one     |
   |                   | simulated drive.            |
   |-------------------+-----------------------------|
   |   register access | Several standard IDE        |
   |                   | registers may be accessed   |
   |                   | across the                  |
   |                   | control-block-bus and       |
   |                   | command-block-bus, and also |
   |                   | via watchable attributes.   |
   |                   |                             |
   |                   | The "data port" register    |
   |                   | lives at address 0 in the   |
   |                   | command-block-bus. As a     |
   |                   | quirk of the IDE interface  |
   |                   | standard, either an 8- or   |
   |                   | 16-bit access to address 0  |
   |                   | on this bus will access     |
   |                   | this register.              |
   |-------------------+-----------------------------|
   | command execution | To control IDE devices, you |
   |                   | set the registers that      |
   |                   | specify the location of an  |
   |                   | intended transfer, then     |
   |                   | write a command byte into   |
   |                   | the command register. An    |
   |                   | IDE interface standard      |
   |                   | provides for                |
   |                   | synchronization between a   |
   |                   | processor and the IDE       |
   |                   | controller. The DRQ, DRDY,  |
   |                   | and ERROR bits in the       |
   |                   | status register are         |
   |                   | emulated for this.          |
   |-------------------+-----------------------------|
   |           command | IDE commands 0x20, 0x21,    |
   |        execution: | 0x30, 0x31 are supported.   |
   |        read/write | Multiple-sector transfers   |
   |                   | are supported and involve   |
   |                   | DRQ/interrupt               |
   |                   | synchronization. LBA and    |
   |                   | CHS addressing are both     |
   |                   | supported.                  |
   |-------------------+-----------------------------|
   |           command | IDE command 0xEC is         |
   |        execution: | supported. It arranges to   |
   |          identify | copy data into or out of    |
   |                   | the selected drive's sector |
   |                   | buffers                     |
   |-------------------+-----------------------------|
   |           command | IDE commands 0x10-0x1F      |
   |   execution: stub | (RECALIBRATE) and 0x70-0x7F |
   |          commands | (SEEK) are simulated by     |
   |                   | instantaneous stubs.        |
   |-------------------+-----------------------------|
   |           command | An attempt to execute       |
   |        execution: | illegal commands, or        |
   |  unknown commands | commands on nonexistent     |
   |                   | drives, results in an ERROR |
   |                   | bit in the status register, |
   |                   | and an interrupt.           |
   +-------------------------------------------------+

   +-------------------------------------------------+
   |                 SID Conventions                 |
   |-------------------------------------------------|
   |      functional | supported  | This is a        |
   |                 |            | functional       |
   |                 |            | component        |
   |-----------------+------------+------------------|
   |           state | supported  | This component   |
   |    save/restore |            | supports state   |
   |                 |            | save/restore for |
   |                 |            | controller state |
   |                 |            | (including       |
   |                 |            | registers and    |
   |                 |            | sector buffers)  |
   |-----------------+------------+------------------|
   | snapshot of the | not        | This component   |
   |     disk images | supported  | does not include |
   |                 |            | a snapshot of    |
   |                 |            | the disk images  |
   |-----------------+------------+------------------|
   |   triggerpoints | supported  | This component   |
   |                 |            | supports         |
   |                 |            | triggerpoints    |
   |                 |            | for most control |
   |                 |            | registers        |
   +-------------------------------------------------+

     ----------------------------------------------------------------------

Environment:

   Related components

   The IDE model is a self-contained slave peripheral. It does not need to be
   coupled with other specific components to operate.

   To use an IDE model in a system simulation, you must map its two buses
   into an address space, connect its interrupt line (if needed), and
   configure its drives. The following configuration file fragment shows how:

         # Add the IDE drive model library
         load libide.la ide_component_library
         # Instantiate component
         new hw-disk-ide ide0
         # ... assume memory mapper named "mapper"
         # ... assume PC standard IDE channel 0 addresses
         connect-bus mapper [0x3F6-0x3F7] ide0 control-block-bus
         connect-bus mapper [0x1F0-0x1F7] ide0 command-block-bus
         # ... assume some fictional interrupt controller
         connect-pin ide0 interrupt -> fic irq14
         #
         # (For PC standard IDE channel 1,
         #  use base addresses 0x376 and 0x170,
         #  and irq15 respectively.)
         #
         # ... configure drive 0 (master): 128*10*32 sectors = 20 MB capacity
         set ide0 drive0-present? 1
         set ide0 drive0-file "/tmp/drive-0-image"
         set ide0 drive0-num-cylinders 128
         set ide0 drive0-num-heads 10
         set ide0 drive0-num-sectors-per-track 32

   Host system

   The IDE drive model relies on up to two external files for storage of the
   virtual disk images. These files may be accessed in a sparse way by the
   target program, so the resulting files may have "holes". Configuring a
   virtual drive that is larger than 2 GB is not supported. The various
   "driveN-num-*" parameters are multiplied together to arrive at the number
   of 512-byte sectors to model.

   Some error conditions are signalled by messages to cerr. These include
   some host I/O errors, and some simulated violations of IDE command
   synchronization.

     ----------------------------------------------------------------------

Component Reference:

  Component: hw-disk-ide

   +-------------------------------------------------+
   |                      pins                       |
   |-------------------------------------------------|
   |   name    | direction | legalvalues | behaviors |
   |-----------+-----------+-------------+-----------|
   | interrupt | out       | 0..1        | command   |
   |           |           |             | execution |
   +-------------------------------------------------+

   +-------------------------------------------------+
   |                      buses                      |
   |-------------------------------------------------|
   |      name       |addresses| accesses |behaviors |
   |-----------------+---------+----------+----------|
   |control-block-bus|0x0..0x1 |read/write|register  |
   |                 |         |          |access    |
   |-----------------+---------+----------+----------|
   |                 |         |          |register  |
   |command-block-bus|0x0..0x7 |read/write|access,   |
   |                 |         |          |command   |
   |                 |         |          |execution |
   +-------------------------------------------------+

   +---------------------------------------------------------------------------+
   |                                attributes                                 |
   |---------------------------------------------------------------------------|
   |            name            | category | legal |  default  |  behaviors   ||
   |                            |          |values |   value   |              ||
   |----------------------------+----------+-------+-----------+--------------||
   |state-snapshot              |-         |opaque |-          |state         ||
   |                            |          |string |           |save/restore  ||
   |----------------------------+----------+-------+-----------+--------------||
   |driveN-present?             |setting   |boolean|no         |initialization||
   |----------------------------+----------+-------+-----------+--------------||
   |driveN-file                 |setting   |file   |"/dev/null"|initialization||
   |                            |          |name   |           |              ||
   |----------------------------+----------+-------+-----------+--------------||
   |driveN-num-cylinders        |setting   |numeric|0          |initialization||
   |----------------------------+----------+-------+-----------+--------------||
   |driveN-num-heads            |setting   |numeric|0          |initialization||
   |----------------------------+----------+-------+-----------+--------------||
   |driveN-num-sectors-per-track|setting   |numeric|0          |initialization||
   |----------------------------+----------+-------+-----------+--------------||
   |altstatus                   |watchable,|numeric|-          |register      ||
   |                            |register  |       |           |access        ||
   |----------------------------+----------+-------+-----------+--------------||
   |control                     |watchable,|numeric|-          |register      ||
   |                            |register  |       |           |access        ||
   |----------------------------+----------+-------+-----------+--------------||
   |drive address               |watchable,|numeric|-          |register      ||
   |                            |register  |       |           |access        ||
   |----------------------------+----------+-------+-----------+--------------||
   |data                        |watchable,|numeric|-          |register      ||
   |                            |register  |       |           |access        ||
   |----------------------------+----------+-------+-----------+--------------||
   |error                       |watchable,|numeric|-          |register      ||
   |                            |register  |       |           |access        ||
   |----------------------------+----------+-------+-----------+--------------||
   |precomp                     |watchable,|numeric|-          |register      ||
   |                            |register  |       |           |access        ||
   |----------------------------+----------+-------+-----------+--------------||
   |sector-count                |watchable,|numeric|-          |register      ||
   |                            |register  |       |           |access        ||
   |----------------------------+----------+-------+-----------+--------------||
   |sector-number               |watchable,|numeric|-          |register      ||
   |                            |register  |       |           |access        ||
   |----------------------------+----------+-------+-----------+--------------||
   |cylinder-low                |watchable,|numeric|-          |register      ||
   |                            |register  |       |           |access        ||
   |----------------------------+----------+-------+-----------+--------------||
   |cylinder-high               |watchable,|numeric|-          |register      ||
   |                            |register  |       |           |access        ||
   |----------------------------+----------+-------+-----------+--------------||
   |drive/head                  |watchable,|numeric|-          |register      ||
   |                            |register  |       |           |access        ||
   |----------------------------+----------+-------+-----------+--------------||
   |command                     |watchable,|numeric|-          |register      ||
   |                            |register  |       |           |access        ||
   |----------------------------+----------+-------+-----------+--------------||
   |interrupt                   |pin       |0..1   |-          |command       ||
   |                            |          |       |           |execution     ||
   +---------------------------------------------------------------------------+

     ----------------------------------------------------------------------

References:

   The IDE specifications used for constructing this model were gleaned from
   several sources. The official ATA specs were not available.

     * The Quantum Bigfoot AT hard drive reference manual.
     * The psim PowerPC simulator's "hw-ide" module.
     * The Linux kernel IDE drivers.
@


1.2
log
@* Freshly generated documentation.
* ChangeLog entries to follow later.
@
text
@d152 1
a152 1
         connect-bus mapper [0x3F0-0x3F7] ide0 control-block-bus
d158 1
a158 1
         #  use base addresses 0x370 and 0x170,
d201 1
a201 1
   |control-block-bus|0x6..0x7 |read/write|register  |
@


1.1
log
@* public snapshot of sid simulator
@
text
@d1 1
a1 2
* Name
  hw-disk-ide
d3 277
a279 167
* Synopsis
  This component models a simple ATA (IDE) hard drive controller plus up to two
  disk drives.

  Buses: control-block-bus command-block-bus
  Pins: interrupt
  Attributes: state-snapshot drive0-present? drive1-present? drive0-file 
              drive1-file drive0-num-cylinders drive1-num-cylinders 
              drive0-num-heads drive1-num-heads drive0-num-sectors-per-track 
              drive1-num-sectors-per-track altstatus control drive-address 
              data error precomp sector-count sector-number cylinder-low
	      cylinder-high drive/head command
  Library: libide.la
  Symbol name: ide_component_library

* Functionality
  - Modelling
    * This component models a PC-style ATA (IDE) hard drive controller
      plus up to two disk drives.  The two individually configured drives
      use host files for storage of the disk image.  Access time
      appears to be instantaneous to the simulated target.

    * This model supports only old IDE programming interfaces.  These
      should be a common subset of most real IDE-like devices (hard
      drives, CD-ROMs, CompactFlash drives, etc.).  Only PIO
      (programmed I/O) is supported, so no ATAPI or DMA functions are
      available.  However, the drive models are self-describing, so
      they can indicate that these missing functions are not
      available.

  - Behaviors
    * Initialization
      All parameters must be set for the selected simulated drive (N=0
      or 1) to become available.  The given disk image file will be
      opened for read and write as long as the "driveN-file" attribute
      is set.  Undefined behaviour occurs if these settings are
      changed while the drive model is in use, or if the values are
      illegal.  Undefined behaviour occurs if the same disk image file
      is shared by more than one simulated drive.

    * Register access

      Several standard IDE registers may be accessed across the
      "control-block-bus" and "command-block-bus", and also via
      watchable attributes.

      The "data port" register lives at address 0 in the
      command-block-bus.  As a quirk of the IDE interface standard,
      either an 8- or 16-bit access to address 0 on this bus will
      access this register.

    * Command execution
      To control IDE devices, you set the registers that specify the 
      location of an intended transfer, then write a command byte into 
      the command register.  An IDE interface standard provides for
      synchronization between a processor and the IDE controller.  The DRQ, 
      DRDY, and ERROR bits in the status register are emulated for this.

    * Command execution: read/write
      IDE commands 0x20, 0x21, 0x30, 0x31 are supported.  Multiple-sector 
      transfers are supported and involve DRQ/interrupt synchronization.  
      LBA and CHS addressing are both supported.

    * Command execution: identify
      IDE command 0xEC is supported.  It arranges to copy data into or out of 
      the selected drive's sector buffers

    * Command execution: stub commands
      IDE commands 0x10-0x1F (RECALIBRATE) and 0x70-0x7F (SEEK) are simulated
      by instantaneous stubs.

    * Command execution: unknown commands
      An attempt to execute illegal commands, or commands on nonexistent drives,
      results in an ERROR bit in the status register, and an interrupt.

  - SID conventions
    * This is a functional component.

    * It supports state save/restore for controller state (including
      registers and sector buffers).  It does not include a snapshot
      of the disk images, however.

    * It supports triggerpoints for most control registers.

* Environment
  - Related components
    * The IDE model is a self-contained slave peripheral.  It does not
      need to be coupled with other specific components to operate.

    * To use an IDE model in a system simulation, you must map its
      two buses into an address space, connect its interrupt line 
      (if needed), and configure its drives.  The following
      configuration file fragment shows how:

	# Add the IDE drive model library
	load libide.la ide_component_library
	# Instantiate component
	new hw-disk-ide ide0
	# ... assume memory mapper named "mapper"
	# ... assume PC standard IDE channel 0 addresses
	connect-bus mapper [0x3F0-0x3F7] ide0 control-block-bus
	connect-bus mapper [0x1F0-0x1F7] ide0 command-block-bus
	# ... assume some fictional interrupt controller
	connect-pin ide0 interrupt -> fic irq14
	#
	# (For PC standard IDE channel 1,
	#  use base addresses 0x370 and 0x170,
	#  and irq15 respectively.)
	#
	# ... configure drive 0 (master): 128*10*32 sectors = 20 MB capacity
	set ide0 drive0-present? 1
	set ide0 drive0-file "/tmp/drive-0-image"
	set ide0 drive0-num-cylinders 128
	set ide0 drive0-num-heads 10
	set ide0 drive0-num-sectors-per-track 32

  - Host system
    * The IDE drive model relies on up to two external files for
      storage of the virtual disk images.  These files may be accessed
      in a sparse way by the target program, so the resulting files
      may have "holes".  Configuring a virtual drive that is larger
      than 2 GB is not supported.  The various "driveN-num-*"
      parameters are multiplied together to arrive at the number of
      512-byte sectors to model.

    * Some error conditions are signalled by messages to cerr.  These
      include some host I/O errors, and some simulated violations of
      IDE command synchronization.

* SID interface reference
  - low level:

    * pins
      - interrupt | output | 0,1 | command execution

    * buses
      - control-block-bus | 0x6-0x7 | read/write | register access
      - command-block-bus | 0x0-0x7 | read/write | register access, command execution

    * attributes
      - state-snapshot | | opaque string | n/a | state save/restore
      - driveN-present? | setting | boolean | no | initialization
      - driveN-file | setting | file name | "/dev/null" | initialization
      - driveN-num-cylinders | setting | numeric | 0 | initialization
      - driveN-num-heads | setting | numeric | 0 | initialization
      - driveN-num-sectors-per-track | setting | numeric | 0 | initialization
      - altstatus | watchable, register | numeric | n/a | register access
      - control | watchable, register | numeric | n/a | register access
      - drive address | watchable, register | numeric | n/a | register access
      - data | watchable, register | numeric | n/a | register access
      - error | watchable, register | numeric | n/a | register access
      - precomp | watchable, register | numeric | n/a | register access
      - sector-count | watchable, register | numeric | n/a | register access
      - sector-number | watchable, register | numeric | n/a | register access
      - cylinder-low | watchable, register | numeric | n/a | register access
      - cylinder-high | watchable, register | numeric | n/a | register access
      - drive/head | watchable, register | numeric | n/a | register access
      - command | watchable, register | numeric | n/a | register access
      - interrupt | pin | 0-1 | n/a | command execution

* References
  The IDE specifications used for constructing this model were gleaned from
  several sources.  The official ATA specs were not available.

  - The Quantum Bigfoot AT hard drive reference manual.
  - The psim PowerPC simulator's "hw-ide" module.
  - The Linux kernel IDE drivers.
@

