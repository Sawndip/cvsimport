head	1.4;
access;
symbols
	sid-snapshot-20180601:1.4
	sid-snapshot-20180501:1.4
	sid-snapshot-20180401:1.4
	sid-snapshot-20180301:1.4
	sid-snapshot-20180201:1.4
	sid-snapshot-20180101:1.4
	sid-snapshot-20171201:1.4
	sid-snapshot-20171101:1.4
	sid-snapshot-20171001:1.4
	sid-snapshot-20170901:1.4
	sid-snapshot-20170801:1.4
	sid-snapshot-20170701:1.4
	sid-snapshot-20170601:1.4
	sid-snapshot-20170501:1.4
	sid-snapshot-20170401:1.4
	sid-snapshot-20170301:1.4
	sid-snapshot-20170201:1.4
	sid-snapshot-20170101:1.4
	sid-snapshot-20161201:1.4
	sid-snapshot-20161101:1.4
	sid-snapshot-20160901:1.4
	sid-snapshot-20160801:1.4
	sid-snapshot-20160701:1.4
	sid-snapshot-20160601:1.4
	sid-snapshot-20160501:1.4
	sid-snapshot-20160401:1.4
	sid-snapshot-20160301:1.4
	sid-snapshot-20160201:1.4
	sid-snapshot-20160101:1.4
	sid-snapshot-20151201:1.4
	sid-snapshot-20151101:1.4
	sid-snapshot-20151001:1.4
	sid-snapshot-20150901:1.4
	sid-snapshot-20150801:1.4
	sid-snapshot-20150701:1.4
	sid-snapshot-20150601:1.4
	sid-snapshot-20150501:1.4
	sid-snapshot-20150401:1.4
	sid-snapshot-20150301:1.4
	sid-snapshot-20150201:1.4
	sid-snapshot-20150101:1.4
	sid-snapshot-20141201:1.4
	sid-snapshot-20141101:1.4
	sid-snapshot-20141001:1.4
	sid-snapshot-20140901:1.4
	sid-snapshot-20140801:1.4
	sid-snapshot-20140701:1.4
	sid-snapshot-20140601:1.4
	sid-snapshot-20140501:1.4
	sid-snapshot-20140401:1.4
	sid-snapshot-20140301:1.4
	sid-snapshot-20140201:1.4
	sid-snapshot-20140101:1.4
	sid-snapshot-20131201:1.4
	sid-snapshot-20131101:1.4
	sid-snapshot-20131001:1.4
	sid-snapshot-20130901:1.4
	sid-snapshot-20130801:1.4
	sid-snapshot-20130701:1.4
	sid-snapshot-20130601:1.4
	sid-snapshot-20130501:1.4
	sid-snapshot-20130401:1.4
	sid-snapshot-20130301:1.4
	sid-snapshot-20130201:1.4
	sid-snapshot-20130101:1.4
	sid-snapshot-20121201:1.4
	sid-snapshot-20121101:1.4
	sid-snapshot-20121001:1.4
	sid-snapshot-20120901:1.4
	sid-snapshot-20120801:1.4
	sid-snapshot-20120701:1.4
	sid-snapshot-20120601:1.4
	sid-snapshot-20120501:1.4
	sid-snapshot-20120401:1.4
	sid-snapshot-20120301:1.4
	sid-snapshot-20120201:1.4
	sid-snapshot-20120101:1.4
	sid-snapshot-20111201:1.4
	sid-snapshot-20111101:1.4
	sid-snapshot-20111001:1.4
	sid-snapshot-20110901:1.4
	sid-snapshot-20110801:1.4
	sid-snapshot-20110701:1.4
	sid-snapshot-20110601:1.4
	sid-snapshot-20110501:1.4
	sid-snapshot-20110401:1.4
	sid-snapshot-20110301:1.4
	sid-snapshot-20110201:1.4
	sid-snapshot-20110101:1.4
	sid-snapshot-20101201:1.4
	sid-snapshot-20101101:1.4
	sid-snapshot-20101001:1.4
	sid-snapshot-20100901:1.4
	sid-snapshot-20100801:1.4
	sid-snapshot-20100701:1.4
	sid-snapshot-20100601:1.4
	sid-snapshot-20100501:1.4
	sid-snapshot-20100401:1.4
	sid-snapshot-20100301:1.4
	sid-snapshot-20100201:1.4
	sid-snapshot-20100101:1.4
	sid-snapshot-20091201:1.4
	sid-snapshot-20091101:1.4
	sid-snapshot-20091001:1.4
	sid-snapshot-20090901:1.4
	sid-snapshot-20090801:1.4
	sid-snapshot-20090701:1.4
	sid-snapshot-20090601:1.4
	sid-snapshot-20090501:1.4
	sid-snapshot-20090401:1.4
	sid-snapshot-20090301:1.4
	sid-snapshot-20090201:1.4
	sid-snapshot-20090101:1.4
	sid-snapshot-20081201:1.4
	sid-snapshot-20081101:1.4
	sid-snapshot-20081001:1.4
	sid-snapshot-20080901:1.4
	sid-snapshot-20080801:1.4
	sid-snapshot-20080701:1.4
	sid-snapshot-20080601:1.4
	sid-snapshot-20080501:1.4
	sid-snapshot-20080403:1.4
	sid-snapshot-20080401:1.4
	sid-snapshot-20080301:1.4
	sid-snapshot-20080201:1.4
	sid-snapshot-20080101:1.4
	sid-snapshot-20071201:1.4
	sid-snapshot-20071101:1.4
	sid-snapshot-20071001:1.4
	sid-20020905-branchpoint:1.4
	sid-20020905-branch:1.4.0.2
	cygnus_cvs_20020108_pre:1.4;
locks; strict;
comment	@# @;


1.4
date	2001.08.03.01.30.21;	author bje;	state Exp;
branches;
next	1.3;

1.3
date	2001.06.21.12.49.39;	author bje;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.13.21.39.21;	author fche;	state Exp;
branches;
next	1.1;

1.1
date	2000.12.07.19.30.55;	author fche;	state Exp;
branches;
next	;


desc
@@


1.4
log
@* Freshly generated documentation.
* ChangeLog entries to follow later.
@
text
@        hw-memory-ram/rom-basic (libmemory.la :: mem_component_library)

Synopsis:

   This is a general-purpose byte-addressable RAM or ROM. Its contents may be
   primed with existing data from a file. The size of the memory may be
   altered at any time.

     ----------------------------------------------------------------------

Functionality:

  Modelling:

   This component does not model any particular hardware component. It models
   a generic memory without any access delays.

   +-------------------------------------------------+
   |                    Behaviors                    |
   |-------------------------------------------------|
   |    configuration | When the size attribute is   |
   |                  | written-to with a legal      |
   |                  | value, a new cleared byte    |
   |                  | array is allocated with the  |
   |                  | new size. The old byte array |
   |                  | is thrown away. The size-max |
   |                  | read-only attribute supplies |
   |                  | to the user the maximum size |
   |                  | that this component will     |
   |                  | attempt to allocate. (Larger |
   |                  | memory banks may be modelled |
   |                  | by using multiple instances  |
   |                  | of this component.)          |
   |------------------+------------------------------|
   |  image save/load | When the image-load pin is   |
   |                  | driven, this component will  |
   |                  | open and attempt to load the |
   |                  | contents of the file given   |
   |                  | by the image-file attribute  |
   |                  | into the memory image. The   |
   |                  | file is copied               |
   |                  | byte-for-byte. If the file   |
   |                  | is too short, zeroes are     |
   |                  | used to fill out the rest of |
   |                  | the memory.                  |
   |                  |                              |
   |                  | Similarly, when the          |
   |                  | image-store pin is driven,   |
   |                  | the component will write to  |
   |                  | the image-file file a        |
   |                  | byte-for-byte dump of the    |
   |                  | entire memory image.         |
   |------------------+------------------------------|
   |       image mmap | As an alternative to the     |
   |                  | batch image load/store       |
   |                  | function, when the           |
   |                  | image-mmap pin is driven,    |
   |                  | the component will map into  |
   |                  | memory the first size bytes  |
   |                  | of image-file. It is mapped  |
   |                  | in MAP_SHARED,               |
   |                  | PROT_READ|PROT_WRITE mode.   |
   |                  | Additionally, when the       |
   |                  | image-msync pin is driven,   |
   |                  | the msync system call is     |
   |                  | invoked to force a           |
   |                  | synchronization between the  |
   |                  | physical file and the memory |
   |                  | image.                       |
   |                  |                              |
   |                  | The file will be unmapped    |
   |                  | when the component is        |
   |                  | deleted, or when the size    |
   |                  | attribute is written to.     |
   |                  | State save/restore stores    |
   |                  | the content of the mapped    |
   |                  | memory buffer, not the       |
   |                  | mapped-ness.                 |
   |------------------+------------------------------|
   | error indication | When operating system errors |
   |                  | prevent some                 |
   |                  | configuration-related action |
   |                  | from succeeding, the error   |
   |                  | output pin is driven.        |
   |                  | Reasons may include          |
   |                  | attempting to access         |
   |                  | nonexistent files,           |
   |                  | out-of-memory conditions,    |
   |                  | permission problems, and so  |
   |                  | on. It is advantageous to    |
   |                  | configure the connection     |
   |                  | from this pin to some        |
   |                  | system-wide recepient before |
   |                  | failure-prone component      |
   |                  | configuration occurs.        |
   |------------------+------------------------------|
   |   memory latency | The component models the     |
   |                  | effects of memory latency.   |
   |                  | The read-latency and         |
   |                  | write-latency values specify |
   |                  | the latencies for memory     |
   |                  | reads and writes,            |
   |                  | respectively.                |
   |------------------+------------------------------|
   |  reading/writing | When an access is received   |
   |                  | on either the read-only-port |
   |                  | or read-write-port bus, the  |
   |                  | component checks the         |
   |                  | incoming address. If it is   |
   |                  | an in-range read access, it  |
   |                  | will be carried out. If it   |
   |                  | is a write access, it will   |
   |                  | be prevented through the     |
   |                  | read-only-port.              |
   |                  |                              |
   |                  | There are no restrictions on |
   |                  | access alignment or size     |
   |                  | imposed by this model.       |
   +-------------------------------------------------+

   +-------------------------------------------------+
   |                 SID Conventions                 |
   |-------------------------------------------------|
   |         functional | supported          | -     |
   |--------------------+--------------------+-------|
   |            latency | supported          | -     |
   |--------------------+--------------------+-------|
   |       save/restore | supported          | -     |
   |--------------------+--------------------+-------|
   |      triggerpoints | not supported      | -     |
   +-------------------------------------------------+

     ----------------------------------------------------------------------

Environment:

   Related components

   It is most likely that this component will be used as the main memory for
   a CPU and connected through a mapper component such as hw-mapper-basic.

   A configuration file fragment appears below:

         new hw-mapper-basic bus
         new hw-cpu-arm7t cpu
         new hw-memory-ram/rom-basic mem
         # error indication
         connect-pin mem error -> main stop!
         set mem size 65536
         connect-bus cpu insn-memory bus access-port
         connect-bus cpu data-memory bus access-port
         connect bus [0-65535] mem read-write-port
         # a read-only shadow in high memory
         connect-bus [400000,465535] mem read-only-port
    

   Host system

   The memory is modelled as a contiguous array of bytes in host memory. As
   such, a component configured for 8MB of memory requires 8MB of host
   memory. This is an important consideration for simulations running on
   machines with low memory or on busy multiuser systems. Similarly, when a
   memory image is written to disk, the same amount of space may be used
   there.

   When using memory mapped files, the host's virtual memory system may
   reduce physical RAM requirements considerably.

     ----------------------------------------------------------------------

Component Reference:

  Component: hw-memory-ram/rom-basic

   +-------------------------------------------------+
   |                      pins                       |
   |-------------------------------------------------|
   |   name    |direction|legalvalues|   behaviors   |
   |-----------+---------+-----------+---------------|
   |image-load |in       |any        |image save/load|
   |-----------+---------+-----------+---------------|
   |image-store|in       |any        |image save/load|
   |-----------+---------+-----------+---------------|
   |image-mmap |in       |any        |image mmap     |
   |-----------+---------+-----------+---------------|
   |image-msync|in       |any        |image mmap     |
   |-----------+---------+-----------+---------------|
   |error      |out      |any        |error          |
   |           |         |           |indication     |
   +-------------------------------------------------+

   +--------------------------------------------------+
   |                      buses                       |
   |--------------------------------------------------|
   |     name      |addresses|accesses|   behaviors   |
   |---------------+---------+--------+---------------|
   |read-only-port |0..size-1|any     |reading/writing|
   |               |         |access  |               |
   |---------------+---------+--------+---------------|
   |read-write-port|0..size-1|any     |reading/writing|
   |               |         |access  |               |
   +--------------------------------------------------+

   +-------------------------------------------------------+
   |                      attributes                       |
   |-------------------------------------------------------|
   |     name     |category| legal  |default|  behaviors  ||
   |              |        | values | value |             ||
   |--------------+--------+--------+-------+-------------||
   |size          |setting |numeric |0      |configuration||
   |--------------+--------+--------+-------+-------------||
   |size-max      |setting |numeric |fixed  |configuration||
   |              |        |        |at 32MB|             ||
   |--------------+--------+--------+-------+-------------||
   |image-file    |setting |filename|-      |image        ||
   |              |        |        |       |save/load    ||
   |--------------+--------+--------+-------+-------------||
   |image-load    |pin     |any     |-      |image        ||
   |              |        |        |       |save/load    ||
   |--------------+--------+--------+-------+-------------||
   |image-store   |pin     |any     |-      |image        ||
   |              |        |        |       |save/load    ||
   |--------------+--------+--------+-------+-------------||
   |read-latency  |setting |numeric |0      |memory       ||
   |              |        |        |       |latency      ||
   |--------------+--------+--------+-------+-------------||
   |write-latency |setting |numeric |0      |memory       ||
   |              |        |        |       |latency      ||
   |--------------+--------+--------+-------+-------------||
   |state-snapshot|state   |opaque  |-      |state        ||
   |              |        |string  |       |save/restore ||
   +-------------------------------------------------------+
@


1.3
log
@2001-06-21  Ben Elliston  <bje@@redhat.com>

	* generic.h (generic_memory::read_latency): New member.
	(generic_memory::write_latency): Likewise.
	(generic_read_write_bus::write_any): Set write latency on return.
	(generic_read_only_bus::read_any): Likewise for read latency.
	* generic.cxx (generic_memory constructor): Initialise new
	read_latency and write_latency members. Add attributes for them.
	* hw-memory-ram_rom-basic.txt: Document extensions.
	* hw-memory-flash-am29.txt: Likewise.
	* hw-memory-flash-at29.txt: Likewise.
@
text
@d1 1
a1 2
* Name
  hw-memory-ram/rom-basic
d3 1
a3 145
* Synopsis
  This is a general-purpose byte-addressable RAM or ROM.  Its contents
  may be primed with existing data from a file.  The size of the
  memory may be altered at any time.

  Buses: read-only-port read-write-port
  Pins: image-load image-store image-mmap image-msync error
  Attributes: size size-max image-file image-load image-store
              state-snapshot read-latency write-latency
  Library: libmemory.la
  Symbol name: mem_component_library

* Functionality

  - Modelling
    * This component does not model any particular hardware component.
      It models a generic memory without any access delays.

  - Behaviors

    * Configuration

      When the "size" attribute is written-to with a legal value, a
      new cleared byte array is allocated with the new size.  The old
      byte array is thrown away.  The "size-max" read-only attribute
      supplies to the user the maximum size that this component will
      attempt to allocate.  (Larger memory banks may be modelled by
      using multiple instances of this component.)

    * Image save/load/mmap

      When the "image-load" pin is driven, this component will open
      and attempt to load the contents of the file given by the
      "image-file" attribute into the memory image.  The file is
      copied byte-for-byte.  If the file is too short, zeroes are used
      to fill out the rest of the memory.
 
      Similarly, when the "image-store" pin is driven, the component
      will write to the "image-file" file a byte-for-byte dump of the
      entire memory image.

    * Image mmap

      As an alternative to the batch image load/store function, when the
      "image-mmap" pin is driven, the component will map into memory 
      the first "size" bytes of "image-file".  It is mapped in MAP_SHARED,
      PROT_READ|PROT_WRITE mode.  Additionally, when the "image-msync"
      pin is driven, the msync system call is invoked to force a
      synchronization between the physical file and the memory image.

      The file will be unmapped when the component is deleted, or when
      the "size" attribute is written to.  State save/restore stores
      the content of the mapped memory buffer, not the mapped-ness.

    * Error indication

      When operating system errors prevent some configuration-related 
      action from succeeding, the "error" output pin is driven.  Reasons
      may include attempting to access nonexistent files, out-of-memory
      conditions, permission problems, and so on.  It is advantageous to
      configure the connection from this pin to some system-wide recepient
      before failure-prone component configuration occurs.

    * Memory latency

      The component models the effects of memory latency.  The
      read-latency and write-latency attribute values specify the
      latencies for memory reads and writes, respectively.

    * Reading/writing

      When an access is received on either the "read-only-port" or
      "read-write-port" bus, the component checks the incoming
      address.  If it is an in-range read access, it will be carried
      out.  If it is a write access, it will be prevented through the
      "read-only-port".

      There are no restrictions on access alignment or size imposed by
      this model.

  - SID conventions
    * This is a functional component.
    * The component models memory latency.
    * The component supports saving and restoring state in addition to
      memory persistence, via the image-store pin/attribute.
    * Triggerpoints are not supported.

* Environment

  - Related components

  * It is most likely that this component will be used as the main
    memory for a CPU and connected through a mapper component such
    as hw-mapper-basic.

  * A configuration file fragment appears below:

	new hw-mapper-basic bus
	new hw-cpu-arm7t cpu
	new hw-memory-ram/rom-basic mem
	# error indication
	connect-pin mem error -> main stop!
	set mem size 65536
	connect-bus cpu insn-memory bus access-port
	connect-bus cpu data-memory bus access-port
	connect bus [0-65535] mem read-write-port
	# a read-only shadow in high memory
	connect-bus [400000,465535] mem read-only-port

  - Host system

  * The memory is modelled as a contiguous array of bytes in host
    memory.  As such, a component configured for 8MB of memory
    requires 8MB of host memory.  This is an important consideration
    for simulations running on machines with low memory or on busy
    multiuser systems.  Similarly, when a memory image is written to
    disk, the same amount of space may be used there.

    When using memory mapped files, the host's virtual memory system
    may reduce physical RAM requirements considerably.

* SID interface reference

  - low level:

    * buses
    - read-only-port | 0 .. size-1 | any access | reading/writing
    - read-write-port | 0 .. size-1 | any access | reading/writing

    * attributes
    - size | setting | numeric | default 0 | configuration
    - size-max | setting | numeric | fixed at 32MB | configuration
    - read-latency | setting | numeric | default 0 | memory latency
    - write-latency | setting | numeric | default 0 | memory latency
    - image-file | setting | filename | no default | image save/load
    - image-load | pin | any | no default | image save/load
    - image-store | pin | any | no default | image save/load
    - state-snapshot | state | opaque string | none | state save/restore

    * pins
    - image-load | input | any | image save/load
    - image-store | input | any | image save/load
    - image-mmap | input | any | image mmap
    - image-msync | input | any | image mmap
    - error | output | any | error indication
d5 228
@


1.2
log
@* mmap support

[bsp/ChangeLog]
2001-03-13  Frank Ch. Eigler  <fche@@redhat.com>

        * configrun-sid.in: Add "mmap" memory region option.
        Document it and others in "--help" text.

[component/memory/ChangeLog]
2001-03-13  Frank Ch. Eigler  <fche@@redhat.com>

        Adding support for memory-mapped files and pin-based error signalling.
        * generic.cxx (generic_memory ctor): Add three new pins.
        (generic_memory dtor): munmap if mapping.
        (attempt_resize): Drive error pin when needed.  munmap if mapping.
        (imageload_handler, imagestore_handler): Drive error pin when needed.
        (imagemsync_handler, imagemmap_handler): New functions.
        * generic.h: Corresponding changes.
        * hw-memory-ram_rom-basic.txt: Document extensions.

[component/testsuite/ChangeLog]
2001-03-13  Frank Ch. Eigler  <fche@@redhat.com>

        * sidcomp.mapper/busif.exp: Disable if !enable_shared.
        * sidcomp.memory/genericmemory.exp: Add tests for mmap functions.
@
text
@d12 1
a12 1
              state-snapshot
d67 6
d86 1
d136 2
@


1.1
log
@* public snapshot of sid simulator
@
text
@d10 1
a10 1
  Pins: image-load image-store
d33 1
a33 1
    * Image save/load
d45 22
d97 2
d104 1
a104 1
	connect bus [400000,465535] mem read-only-port
d115 3
d137 4
@

