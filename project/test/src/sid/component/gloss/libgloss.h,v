head	1.7;
access;
symbols
	sid-snapshot-20180601:1.7
	sid-snapshot-20180501:1.7
	sid-snapshot-20180401:1.7
	sid-snapshot-20180301:1.7
	sid-snapshot-20180201:1.7
	sid-snapshot-20180101:1.7
	sid-snapshot-20171201:1.7
	sid-snapshot-20171101:1.7
	sid-snapshot-20171001:1.7
	sid-snapshot-20170901:1.7
	sid-snapshot-20170801:1.7
	sid-snapshot-20170701:1.7
	sid-snapshot-20170601:1.7
	sid-snapshot-20170501:1.7
	sid-snapshot-20170401:1.7
	sid-snapshot-20170301:1.7
	sid-snapshot-20170201:1.7
	sid-snapshot-20170101:1.7
	sid-snapshot-20161201:1.7
	sid-snapshot-20161101:1.7
	sid-snapshot-20160901:1.7
	sid-snapshot-20160801:1.7
	sid-snapshot-20160701:1.7
	sid-snapshot-20160601:1.7
	sid-snapshot-20160501:1.7
	sid-snapshot-20160401:1.7
	sid-snapshot-20160301:1.7
	sid-snapshot-20160201:1.7
	sid-snapshot-20160101:1.7
	sid-snapshot-20151201:1.7
	sid-snapshot-20151101:1.7
	sid-snapshot-20151001:1.7
	sid-snapshot-20150901:1.7
	sid-snapshot-20150801:1.7
	sid-snapshot-20150701:1.7
	sid-snapshot-20150601:1.7
	sid-snapshot-20150501:1.7
	sid-snapshot-20150401:1.7
	sid-snapshot-20150301:1.7
	sid-snapshot-20150201:1.7
	sid-snapshot-20150101:1.7
	sid-snapshot-20141201:1.7
	sid-snapshot-20141101:1.7
	sid-snapshot-20141001:1.7
	sid-snapshot-20140901:1.7
	sid-snapshot-20140801:1.7
	sid-snapshot-20140701:1.7
	sid-snapshot-20140601:1.7
	sid-snapshot-20140501:1.7
	sid-snapshot-20140401:1.7
	sid-snapshot-20140301:1.7
	sid-snapshot-20140201:1.7
	sid-snapshot-20140101:1.7
	sid-snapshot-20131201:1.7
	sid-snapshot-20131101:1.7
	sid-snapshot-20131001:1.7
	sid-snapshot-20130901:1.7
	sid-snapshot-20130801:1.7
	sid-snapshot-20130701:1.7
	sid-snapshot-20130601:1.7
	sid-snapshot-20130501:1.7
	sid-snapshot-20130401:1.7
	sid-snapshot-20130301:1.7
	sid-snapshot-20130201:1.7
	sid-snapshot-20130101:1.7
	sid-snapshot-20121201:1.7
	sid-snapshot-20121101:1.7
	sid-snapshot-20121001:1.7
	sid-snapshot-20120901:1.7
	sid-snapshot-20120801:1.7
	sid-snapshot-20120701:1.7
	sid-snapshot-20120601:1.7
	sid-snapshot-20120501:1.7
	sid-snapshot-20120401:1.7
	sid-snapshot-20120301:1.7
	sid-snapshot-20120201:1.7
	sid-snapshot-20120101:1.7
	sid-snapshot-20111201:1.7
	sid-snapshot-20111101:1.7
	sid-snapshot-20111001:1.7
	sid-snapshot-20110901:1.7
	sid-snapshot-20110801:1.7
	sid-snapshot-20110701:1.7
	sid-snapshot-20110601:1.7
	sid-snapshot-20110501:1.7
	sid-snapshot-20110401:1.7
	sid-snapshot-20110301:1.7
	sid-snapshot-20110201:1.7
	sid-snapshot-20110101:1.7
	sid-snapshot-20101201:1.7
	sid-snapshot-20101101:1.7
	sid-snapshot-20101001:1.7
	sid-snapshot-20100901:1.7
	sid-snapshot-20100801:1.7
	sid-snapshot-20100701:1.7
	sid-snapshot-20100601:1.7
	sid-snapshot-20100501:1.7
	sid-snapshot-20100401:1.7
	sid-snapshot-20100301:1.7
	sid-snapshot-20100201:1.7
	sid-snapshot-20100101:1.7
	sid-snapshot-20091201:1.7
	sid-snapshot-20091101:1.7
	sid-snapshot-20091001:1.7
	sid-snapshot-20090901:1.7
	sid-snapshot-20090801:1.7
	sid-snapshot-20090701:1.7
	sid-snapshot-20090601:1.7
	sid-snapshot-20090501:1.7
	sid-snapshot-20090401:1.7
	sid-snapshot-20090301:1.7
	sid-snapshot-20090201:1.7
	sid-snapshot-20090101:1.7
	sid-snapshot-20081201:1.7
	sid-snapshot-20081101:1.7
	sid-snapshot-20081001:1.7
	sid-snapshot-20080901:1.7
	sid-snapshot-20080801:1.7
	sid-snapshot-20080701:1.7
	sid-snapshot-20080601:1.7
	sid-snapshot-20080501:1.7
	sid-snapshot-20080403:1.7
	sid-snapshot-20080401:1.7
	sid-snapshot-20080301:1.7
	sid-snapshot-20080201:1.7
	sid-snapshot-20080101:1.7
	sid-snapshot-20071201:1.7
	sid-snapshot-20071101:1.6
	sid-snapshot-20071001:1.6
	sid-20020905-branchpoint:1.5
	sid-20020905-branch:1.5.0.2
	cygnus_cvs_20020108_pre:1.4;
locks; strict;
comment	@ * @;


1.7
date	2007.11.07.20.50.09;	author brolley;	state Exp;
branches;
next	1.6;

1.6
date	2005.08.19.19.44.46;	author brolley;	state Exp;
branches;
next	1.5;

1.5
date	2002.01.31.23.03.53;	author bje;	state Exp;
branches;
next	1.4;

1.4
date	2002.01.03.01.42.02;	author bje;	state Exp;
branches;
next	1.3;

1.3
date	2001.11.27.22.59.06;	author fitzsim;	state Exp;
branches;
next	1.2;

1.2
date	2001.01.07.04.51.31;	author mrg;	state Exp;
branches;
next	1.1;

1.1
date	2000.12.07.19.30.50;	author fche;	state Exp;
branches;
next	;


desc
@@


1.7
log
@2007-11-07  Dave Brolley  <brolley@@redhat.com>

        * libgloss.h (libgloss::SYS_reconfig): Value to changed to match the new
        value in libgloss/syscall.h.
@
text
@// libgloss.h - Interface details for libgloss.  -*- C++ -*-

// Copyright (C) 1999, 2000, 2001, 2002, 2005 Red Hat.
// This file is part of SID and is licensed under the GPL.
// See the file COPYING.SID for conditions for redistribution.

// System call numbers must be synchronised with:
//   libgloss/syscall.h
//
// Some ports don't use the standard syscall.h numbers.  Sigh.
// Those ports should not use this file.

#ifndef LIBGLOSS_H
#define LIBGLOSS_H

class libgloss
{
public:

  enum libgloss_syscall
  {
    SYS_exit = 1,
    SYS_open = 2, 
    SYS_close = 3, 
    SYS_read = 4,
    SYS_write = 5, 
    SYS_lseek = 6, 
    SYS_unlink = 7,
    SYS_getpid = 8,
    SYS_kill = 9,
    SYS_fstat = 10, 
    SYS_argvlen = 12, 
    SYS_argv = 13,
    SYS_chdir = 14, 
    SYS_stat = 15, 
    SYS_chmod = 16, 
    SYS_utime = 17,
    SYS_time = 18,
    SYS_gettimeofday = 19,
    SYS_times = 20,
    SYS_reconfig = 25,
    SYS_argc = 172,
    SYS_argnlen = 173,
    SYS_argn = 174,
    SYS_unsupported = 255 // arbitrary syscall number, unsupported by default gloss component
  };
};

#endif // LIBGLOSS_H
@


1.6
log
@2005-08-19  Dave Brolley  <brolley@@redhat.com>

        * Contribute the following changes:

        2005-07-13  Dave Brolley  <brolley@@redhat.com>

        * gloss.cxx (gloss32): Initialize dynamic_configurator. Add
        dynamic-configurator relation.
        * gloss.h (gloss32): Inherit virtually from
        fixed_attribute_map_component.
        (dynamic_configurator): New member of gloss32.

        2005-07-05  Dave Brolley  <brolley@@redhat.com>

        * gloss.cxx (start_config): Removed from gloss32.
        (gloss32): Remove "start-config" attribute. Add "config-error"
        pin.
        (reset): Don't call sys_config_set.
        (sys_reconfig_set): Call set_error_result based on the value driven on
        config_error_pin.
        (sys_reconfig_reset): Likewise.
        * gloss.h (start_config): Removed from gloss32.
        (config_error_pin): New member of gloss32.

        2005-06-06  Dave Brolley  <brolley@@redhat.com>

        * gloss.cxx (gloss32): Don't initialize dynamic_configurator.
        Don't add dynamic-configurator relation.
        (configure_pin): Renamed to sys_configure_pin.
        (configure): New virtual override in gloss32.
        (do_sys_reconfig): Print log messages to cerr and only when
        verbose_p.
        * gloss.h (gloss32): fixed_pin_map_component and configurable_component
        inherited virtually.
        (dynamic_configurator): Removed.
        (configure_pin): Renamed to sys_configure_pin.
        (configure): New virtual override in gloss32.

        2005-05-29  Dave Brolley  <brolley@@redhat.com>

        * libgloss.h (SYS_reconfig): New enumerator.
        * gloss.h (main, dynamic_configurator): New members of gloss32.
        (configure_pin, config_result_pin, start_config): Likewise.
        (sys_reconfig_set): New method of gloss32.
        (sys_reconfig_reset, do_sys_reconfig): Likewise.
        * gloss.cxx (gloss32): Initialize main, dynamic_configurator and
        start_config. Add relations main, dynamic-configurator. Add
        configure pin. Add start-config addtribute. Add config-result
        pin.
        (reset): Call sys_reconfig_set with start_config if it's not
        empty.
        (syscall_trap): Handle SYS_reconfig.
        (sys_reconfig_set): New method of gloss32.
        (sys_reconfig_reset, do_sys_reconfig): Likewise.
@
text
@a21 1
    SYS_reconfig = 0,
d41 1
@


1.5
log
@2002-01-25  Ben Elliston  <bje@@redhat.com>

	* libgloss.h (libgloss::SYS_argc): New enumerator.
	(libgloss::SYS_argnlen, libgloss::SYS_argn): Likewise.
	(libgloss::SYS_unsupported): Raise its value.
	* gloss.cxx (gloss32::gloss32): Virtualise "command-line".
	(gloss32::get_command_line): New method.
	(gloss32::set_command_line): Likewise.
	(gloss32::set_string [string&]): Call char* version.
	(gloss32::set_string [char*]): Implement.
	(gloss32::syscall_trap): Handle SYS_argc, SYS_argn, SYS_argnlen.
	(gloss32::do_sys_argc): New method.
	(gloss32::do_sys_argn): Likewise.
	(gloss32::do_sys_argnlen): Likewise.
	* gloss.h (gloss32::set_string): New method which has a length
	parameter for binary data and null-terminated strings.
	(gloss32::do_sys_argc): Declare.
	(gloss32::do_sys_argn): Likewise.
	(gloss32::do_sys_argnlen): Likewise.
	(gloss32::command_line): Change type to vector<string>.
	(gloss32::get_command_line): New virtual attribute callback.
	(gloss32::set_command_line): Likewise.
@
text
@d3 1
a3 1
// Copyright (C) 1999, 2000, 2001, 2002 Red Hat.
d22 1
@


1.4
log
@* Remove mention of Cygnus from comments.
@
text
@d3 1
a3 1
// Copyright (C) 1999, 2000, 2001 Red Hat.
d41 4
a44 1
    SYS_unsupported = 99 // arbitrary syscall number, unsupported by default gloss component
@


1.3
log
@	Changes to many generated files -- incorporate bochs into
	build system and configrun-sid.
@
text
@d1 1
a1 1
// libgloss.h - Interface details for Cygnus' libgloss.  -*- C++ -*-
d3 1
a3 1
// Copyright (C) 1999, 2000 Red Hat.
@


1.2
log
@[components/ChangeLog]
2001-01-03  matthew green  <mrg@@redhat.com>

	* configure.in (AC_HAVE_FUNCS): Also check for times(2).
	* configure: Regenerate.
	* config.in: Regenerate.

[components/gloss/ChangeLog]
2001-01-06  matthew green  <mrg@@redhat.com>

	* gloss.cxx (gloss32::target_to_host_open_flags): Properly check for
	valid open() flags.

2001-01-04  matthew green  <mrg@@redhat.com>

	* gloss.cxx (gloss32::target_to_host_open_flags): Properly deal with
	newlib open flags.
	Need <sys/time.h> for gettimeofday().  Only include <sys/times.h> if
	we have times().

2000-12-30  matthew green  <mrg@@redhat.com>

	* gloss.cxx (do_sys_time): New function.
	(do_sys_times): Likewise.
	(do_sys_gettimeofday): Likewise.
	(syscall_trap): Call do_sys_time().  Call new do_sys_times() and
	do_sys_gettimeofday() for times() and .
	* gloss.h (do_sys_time): Prototype.
	(do_sys_times): Likewise.
	(do_sys_gettimeofday): Likewise.
	* libgloss.h (libgloss_syscall): Add `times' and `gettimeofday'.
@
text
@d40 2
a41 1
    SYS_times = 20
@


1.1
log
@* public snapshot of sid simulator
@
text
@d38 3
a40 1
    SYS_time = 18
@

