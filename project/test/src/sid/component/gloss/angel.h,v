head	1.3;
access;
symbols
	sid-snapshot-20180601:1.3
	sid-snapshot-20180501:1.3
	sid-snapshot-20180401:1.3
	sid-snapshot-20180301:1.3
	sid-snapshot-20180201:1.3
	sid-snapshot-20180101:1.3
	sid-snapshot-20171201:1.3
	sid-snapshot-20171101:1.3
	sid-snapshot-20171001:1.3
	sid-snapshot-20170901:1.3
	sid-snapshot-20170801:1.3
	sid-snapshot-20170701:1.3
	sid-snapshot-20170601:1.3
	sid-snapshot-20170501:1.3
	sid-snapshot-20170401:1.3
	sid-snapshot-20170301:1.3
	sid-snapshot-20170201:1.3
	sid-snapshot-20170101:1.3
	sid-snapshot-20161201:1.3
	sid-snapshot-20161101:1.3
	sid-snapshot-20160901:1.3
	sid-snapshot-20160801:1.3
	sid-snapshot-20160701:1.3
	sid-snapshot-20160601:1.3
	sid-snapshot-20160501:1.3
	sid-snapshot-20160401:1.3
	sid-snapshot-20160301:1.3
	sid-snapshot-20160201:1.3
	sid-snapshot-20160101:1.3
	sid-snapshot-20151201:1.3
	sid-snapshot-20151101:1.3
	sid-snapshot-20151001:1.3
	sid-snapshot-20150901:1.3
	sid-snapshot-20150801:1.3
	sid-snapshot-20150701:1.3
	sid-snapshot-20150601:1.3
	sid-snapshot-20150501:1.3
	sid-snapshot-20150401:1.3
	sid-snapshot-20150301:1.3
	sid-snapshot-20150201:1.3
	sid-snapshot-20150101:1.3
	sid-snapshot-20141201:1.3
	sid-snapshot-20141101:1.3
	sid-snapshot-20141001:1.3
	sid-snapshot-20140901:1.3
	sid-snapshot-20140801:1.3
	sid-snapshot-20140701:1.3
	sid-snapshot-20140601:1.3
	sid-snapshot-20140501:1.3
	sid-snapshot-20140401:1.3
	sid-snapshot-20140301:1.3
	sid-snapshot-20140201:1.3
	sid-snapshot-20140101:1.3
	sid-snapshot-20131201:1.3
	sid-snapshot-20131101:1.3
	sid-snapshot-20131001:1.3
	sid-snapshot-20130901:1.2
	sid-snapshot-20130801:1.2
	sid-snapshot-20130701:1.2
	sid-snapshot-20130601:1.2
	sid-snapshot-20130501:1.2
	sid-snapshot-20130401:1.2
	sid-snapshot-20130301:1.2
	sid-snapshot-20130201:1.2
	sid-snapshot-20130101:1.2
	sid-snapshot-20121201:1.2
	sid-snapshot-20121101:1.2
	sid-snapshot-20121001:1.2
	sid-snapshot-20120901:1.2
	sid-snapshot-20120801:1.2
	sid-snapshot-20120701:1.2
	sid-snapshot-20120601:1.2
	sid-snapshot-20120501:1.2
	sid-snapshot-20120401:1.2
	sid-snapshot-20120301:1.2
	sid-snapshot-20120201:1.2
	sid-snapshot-20120101:1.2
	sid-snapshot-20111201:1.2
	sid-snapshot-20111101:1.2
	sid-snapshot-20111001:1.2
	sid-snapshot-20110901:1.2
	sid-snapshot-20110801:1.2
	sid-snapshot-20110701:1.2
	sid-snapshot-20110601:1.2
	sid-snapshot-20110501:1.2
	sid-snapshot-20110401:1.2
	sid-snapshot-20110301:1.2
	sid-snapshot-20110201:1.2
	sid-snapshot-20110101:1.2
	sid-snapshot-20101201:1.2
	sid-snapshot-20101101:1.2
	sid-snapshot-20101001:1.2
	sid-snapshot-20100901:1.2
	sid-snapshot-20100801:1.2
	sid-snapshot-20100701:1.2
	sid-snapshot-20100601:1.2
	sid-snapshot-20100501:1.2
	sid-snapshot-20100401:1.2
	sid-snapshot-20100301:1.2
	sid-snapshot-20100201:1.2
	sid-snapshot-20100101:1.2
	sid-snapshot-20091201:1.2
	sid-snapshot-20091101:1.2
	sid-snapshot-20091001:1.2
	sid-snapshot-20090901:1.2
	sid-snapshot-20090801:1.2
	sid-snapshot-20090701:1.2
	sid-snapshot-20090601:1.2
	sid-snapshot-20090501:1.2
	sid-snapshot-20090401:1.2
	sid-snapshot-20090301:1.2
	sid-snapshot-20090201:1.2
	sid-snapshot-20090101:1.2
	sid-snapshot-20081201:1.2
	sid-snapshot-20081101:1.2
	sid-snapshot-20081001:1.2
	sid-snapshot-20080901:1.2
	sid-snapshot-20080801:1.2
	sid-snapshot-20080701:1.2
	sid-snapshot-20080601:1.2
	sid-snapshot-20080501:1.2
	sid-snapshot-20080403:1.2
	sid-snapshot-20080401:1.2
	sid-snapshot-20080301:1.2
	sid-snapshot-20080201:1.2
	sid-snapshot-20080101:1.2
	sid-snapshot-20071201:1.2
	sid-snapshot-20071101:1.2
	sid-snapshot-20071001:1.2
	sid-20020905-branchpoint:1.2
	sid-20020905-branch:1.2.0.2
	cygnus_cvs_20020108_pre:1.2;
locks; strict;
comment	@ * @;


1.3
date	2013.09.22.04.32.42;	author amodra;	state Exp;
branches;
next	1.2;

1.2
date	2001.10.10.17.19.16;	author fche;	state Exp;
branches;
next	1.1;

1.1
date	2000.12.07.19.30.50;	author fche;	state Exp;
branches;
next	;


desc
@@


1.3
log
@sid/component/cgen-cpu/mep/
	* mep.h (mep_cpu_cgen::~mep_cpu_cgen): New.
	* mep_basic.h (mep_basic_cpu::~mep_basic_cpu): New.
	* mep_ext1.h (mep_ext1_cpu::~mep_ext1_cpu): New.
sid/component/cgen-cpu/sh/
	* sh.h (sh_cpu_impl::~sh_cpu_impl): New.
	* sh2a_model.cxx: Specify dependent base class function with 'this->'.
	* sh3_model.cxx: Likewise.
	* sh4.cxx: Likewise.
	* sh64.c: Include sysdep.h first.
sid/component/gloss/
	* angel.h (arm_angel::~arm_angel): New.
	* m32r.h (m32r_libgloss::~m32r_libgloss): New.
	* mips.h (mips32_idt::~mips32_idt): New.
sid/component/mmu/
	* armRemap.cxx (operator<<): Avoid redeclaration of "it".
@
text
@// angel.h - A limited emulation component for the Angel ROM monitor
// that features onthe ARM PID7T development board.  -*- C++ -*-

// Copyright (C) 1999-2001 Red Hat.
// This file is part of SID and is licensed under the GPL.
// See the file COPYING.SID for conditions for redistribution.

// Details of the Angel ROM monitor and, specifically, the system call
// interface, can be found in Chapter 8 of the ARM Software
// Development Toolkit Reference Guide (ARM part no. DUI 0041B).

#ifndef ANGEL_H
#define ANGEL_H

// FIXME: Move to common area.
extern "C" {
#ifdef HAVE_SYS_TYPES_H
#include <sys/types.h>
#endif
#ifdef HAVE_SYS_TIME_H
#include <sys/time.h>
#endif
#ifdef HAVE_TIME_H
#include <time.h>
#endif
}

#include "gloss.h"

using sidutil::make_attribute;
using sidutil::parse_attribute;

class arm_angel: public gloss32
{
public:

  arm_angel();
  ~arm_angel() throw() { }

private:

  enum syscalls /* See also: newlib/libc/sys/arm/swi.h AngelSWI_Reason_* */
  {
    syscall_open = 0x1,
    syscall_close = 0x2,
    syscall_writec = 0x3,
    syscall_write0 = 0x4,
    syscall_write = 0x5,
    syscall_read = 0x6,
    syscall_readc = 0x7,
    syscall_iserror,
    syscall_istty = 0x9,
    syscall_seek = 0xA,
    syscall_flen = 0xC,
    syscall_tmpnam = 0xD,
    syscall_remove = 0xE,
    syscall_rename = 0xF,
    syscall_clock = 0x10,
    syscall_time = 0x11,
    syscall_system = 0x12,
    syscall_errno = 0x13,
    syscall_get_cmdline = 0x15,
    syscall_heapinfo = 0x16,
    syscall_report_exception = 0x18
  };

  enum exceptions {
    exception_rte = 0x20022,  // Runtime error.
    exception_exit = 0x20026
  };

  int32 errnum;
  uint32 heapBase, heapLimit;
  uint32 stackBase, stackLimit;

  clock_t startupTime;

  // We need to do some extra processing at reset time.
  void reset();

  // ABI-specifics, for getting syscall arguments and setting results.
  // ??? Class by itself.
  // ??? Perhaps this shouldn't be here at all as it's really an
  // implementation detail (but lots of implementations will probably use it).
  bool get_int_argument(unsigned index, int32& value);
  bool set_int_result(int32 value);
  bool set_error_result(int32 value);

  // Return boolean indicating if cpu is requesting something we're to handle.
  bool syscall_trap_p();
  // Perform a system call trap.
  void syscall_trap();

  // Convert host errno to target errno.
  int host_to_target_errno (int errno_);
  // Cover fn for set_error_result (host_to_target_errno (errcode)).
  bool set_host_error_result (int32 errcode);

  // Methods to handle the individual system calls.
  void do_clock();
  void do_close();
  void do_flen();
  void do_get_cmdline();
  void do_heapinfo();
  void do_iserror();
  void do_istty();
  void do_open();
  void do_read();
  void do_readc();
  void do_remove();
  void do_rename();
  void do_report_exception();
  void do_seek();
  void do_system();
  void do_tmpnam();
  void do_write();
  void do_write0();
  void do_writec();
};

#endif // ANGEL_H
@


1.2
log
@* bug fix

2001-10-10  Frank Ch. Eigler  <fche@@redhat.com>

	On advice of Keith Rautenbach <Keith.Rautenbach@@insignia.com>:
	* angel.h (syscalls): Correct read<->readc, elaborate.

2001-10-10  Frank Ch. Eigler  <fche@@redhat.com>

	* sidcomp.gloss/angel.exp (syscalls): Correct read<->readc numbers.
VS: ----------------------------------------------------------------------
@
text
@d38 1
@


1.1
log
@* public snapshot of sid simulator
@
text
@d4 1
a4 1
// Copyright (C) 1999, 2000 Red Hat.
d41 1
a41 1
  enum syscalls
d43 7
a49 7
    syscall_open = 1,
    syscall_close,
    syscall_writec,
    syscall_write0,
    syscall_write,
    syscall_readc,
    syscall_read,
d51 1
a51 1
    syscall_istty,
d54 7
a60 7
    syscall_tmpnam,
    syscall_remove,
    syscall_rename,
    syscall_clock,
    syscall_time,
    syscall_system,
    syscall_errno,
d62 1
a62 1
    syscall_heapinfo,
@

