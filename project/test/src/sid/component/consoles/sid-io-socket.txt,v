head	1.3;
access;
symbols
	sid-snapshot-20180601:1.3
	sid-snapshot-20180501:1.3
	sid-snapshot-20180401:1.3
	sid-snapshot-20180301:1.3
	sid-snapshot-20180201:1.3
	sid-snapshot-20180101:1.3
	sid-snapshot-20171201:1.3
	sid-snapshot-20171101:1.3
	sid-snapshot-20171001:1.3
	sid-snapshot-20170901:1.3
	sid-snapshot-20170801:1.3
	sid-snapshot-20170701:1.3
	sid-snapshot-20170601:1.3
	sid-snapshot-20170501:1.3
	sid-snapshot-20170401:1.3
	sid-snapshot-20170301:1.3
	sid-snapshot-20170201:1.3
	sid-snapshot-20170101:1.3
	sid-snapshot-20161201:1.3
	sid-snapshot-20161101:1.3
	sid-snapshot-20160901:1.3
	sid-snapshot-20160801:1.3
	sid-snapshot-20160701:1.3
	sid-snapshot-20160601:1.3
	sid-snapshot-20160501:1.3
	sid-snapshot-20160401:1.3
	sid-snapshot-20160301:1.3
	sid-snapshot-20160201:1.3
	sid-snapshot-20160101:1.3
	sid-snapshot-20151201:1.3
	sid-snapshot-20151101:1.3
	sid-snapshot-20151001:1.3
	sid-snapshot-20150901:1.3
	sid-snapshot-20150801:1.3
	sid-snapshot-20150701:1.3
	sid-snapshot-20150601:1.3
	sid-snapshot-20150501:1.3
	sid-snapshot-20150401:1.3
	sid-snapshot-20150301:1.3
	sid-snapshot-20150201:1.3
	sid-snapshot-20150101:1.3
	sid-snapshot-20141201:1.3
	sid-snapshot-20141101:1.3
	sid-snapshot-20141001:1.3
	sid-snapshot-20140901:1.3
	sid-snapshot-20140801:1.3
	sid-snapshot-20140701:1.3
	sid-snapshot-20140601:1.3
	sid-snapshot-20140501:1.3
	sid-snapshot-20140401:1.3
	sid-snapshot-20140301:1.3
	sid-snapshot-20140201:1.3
	sid-snapshot-20140101:1.3
	sid-snapshot-20131201:1.3
	sid-snapshot-20131101:1.3
	sid-snapshot-20131001:1.3
	sid-snapshot-20130901:1.3
	sid-snapshot-20130801:1.3
	sid-snapshot-20130701:1.3
	sid-snapshot-20130601:1.3
	sid-snapshot-20130501:1.3
	sid-snapshot-20130401:1.3
	sid-snapshot-20130301:1.3
	sid-snapshot-20130201:1.3
	sid-snapshot-20130101:1.3
	sid-snapshot-20121201:1.3
	sid-snapshot-20121101:1.3
	sid-snapshot-20121001:1.3
	sid-snapshot-20120901:1.3
	sid-snapshot-20120801:1.3
	sid-snapshot-20120701:1.3
	sid-snapshot-20120601:1.3
	sid-snapshot-20120501:1.3
	sid-snapshot-20120401:1.3
	sid-snapshot-20120301:1.3
	sid-snapshot-20120201:1.3
	sid-snapshot-20120101:1.3
	sid-snapshot-20111201:1.3
	sid-snapshot-20111101:1.3
	sid-snapshot-20111001:1.3
	sid-snapshot-20110901:1.3
	sid-snapshot-20110801:1.3
	sid-snapshot-20110701:1.3
	sid-snapshot-20110601:1.3
	sid-snapshot-20110501:1.3
	sid-snapshot-20110401:1.3
	sid-snapshot-20110301:1.3
	sid-snapshot-20110201:1.3
	sid-snapshot-20110101:1.3
	sid-snapshot-20101201:1.3
	sid-snapshot-20101101:1.3
	sid-snapshot-20101001:1.3
	sid-snapshot-20100901:1.3
	sid-snapshot-20100801:1.3
	sid-snapshot-20100701:1.3
	sid-snapshot-20100601:1.3
	sid-snapshot-20100501:1.3
	sid-snapshot-20100401:1.3
	sid-snapshot-20100301:1.3
	sid-snapshot-20100201:1.3
	sid-snapshot-20100101:1.3
	sid-snapshot-20091201:1.3
	sid-snapshot-20091101:1.3
	sid-snapshot-20091001:1.3
	sid-snapshot-20090901:1.3
	sid-snapshot-20090801:1.3
	sid-snapshot-20090701:1.3
	sid-snapshot-20090601:1.3
	sid-snapshot-20090501:1.3
	sid-snapshot-20090401:1.3
	sid-snapshot-20090301:1.3
	sid-snapshot-20090201:1.3
	sid-snapshot-20090101:1.3
	sid-snapshot-20081201:1.3
	sid-snapshot-20081101:1.3
	sid-snapshot-20081001:1.3
	sid-snapshot-20080901:1.3
	sid-snapshot-20080801:1.3
	sid-snapshot-20080701:1.3
	sid-snapshot-20080601:1.3
	sid-snapshot-20080501:1.3
	sid-snapshot-20080403:1.3
	sid-snapshot-20080401:1.3
	sid-snapshot-20080301:1.3
	sid-snapshot-20080201:1.3
	sid-snapshot-20080101:1.3
	sid-snapshot-20071201:1.3
	sid-snapshot-20071101:1.3
	sid-snapshot-20071001:1.3
	sid-20020905-branchpoint:1.2
	sid-20020905-branch:1.2.0.2
	cygnus_cvs_20020108_pre:1.2;
locks; strict;
comment	@# @;


1.3
date	2005.08.19.19.43.09;	author brolley;	state Exp;
branches;
next	1.2;

1.2
date	2001.08.03.01.30.17;	author bje;	state Exp;
branches;
next	1.1;

1.1
date	2000.12.07.19.30.50;	author fche;	state Exp;
branches;
next	;


desc
@@


1.3
log
@2005-08-19  Dave Brolley  <brolley@@redhat.com>

        * Contribute the following changes:

        2005-07-13  Dave Brolley  <brolley@@redhat.com>

        * components.h (socketio): Inherit virtually from
        fixed_attribute_map_component. Inherit from no_relation_component.

        2005-06-06  Dave Brolley  <brolley@@redhat.com>

        * components.h: Add using clause for sidutil::configurable_component.
        (socketio): fixed_pin_map_component and configurable_component inherited
        virtually. no_relation_component no longer inherited.
        (configure): New virtual override in socketio.
        * socketio.cxx (configure): Likewise.
        * sid-io-socket.xml: Add description of new interfaces.
        * sid-io-socket.txt: Regenerated.
@
text
@          sid-io-socket (libconsoles.la :: console_component_library)

Synopsis:

   Members of this family of components perform I/O on a TCP socket and relay
   data across a pair of pins to some other component.

     ----------------------------------------------------------------------

Functionality:

  Modelling:

   This simulated component uses non-blocking I/O on the host. Therefore it
   must be regularly polled, for example by a host-time scheduler. This
   component is able to automatically regulate a scheduler subscription to
   produce fast response/throughput during high traffic times, or reduce CPU
   load in low traffic times.

   The sid-io-socket-server component implements a TCP server, and
   sid-io-socket-client implements a TCP client. In other words, one expects
   an incoming socket connection, the other uses an outgoing socket
   connection. The two components are otherwise interchangeable and are
   treated below as one kind.

   Multiple instances of these components coexist comfortably.

   +-------------------------------------------------+
   |                    Behaviors                    |
   |-------------------------------------------------|
   | initialization | When the init pin is driven,   |
   |                | the component creates and      |
   |                | binds a file descriptor to the |
   |                | IP address specified by the    |
   |                | sockaddr-local attribute. The  |
   |                | host operating system may      |
   |                | assign some available TCP port |
   |                | number if the attribute is not |
   |                | set. An actual TCP connection  |
   |                | attempt is not made at this    |
   |                | time.                          |
   |                |                                |
   |                | When the fini pin is driven,   |
   |                | the component closes its file  |
   |                | descriptors, thus closing its  |
   |                | connection (if any).           |
   |----------------+--------------------------------|
   |     connection | When the poll-event pin is     |
   |                | driven, but no connection      |
   |                | exists, a non-blocking TCP     |
   |                | connect operation is           |
   |                | attempted. For a server, this  |
   |                | means an accept() call, and    |
   |                | for a client, a connect(). The |
   |                | server? attribute will contain |
   |                | a boolean true value for the   |
   |                | former, false for the latter.  |
   |                |                                |
   |                | If the connection is           |
   |                | successful, the connected?     |
   |                | attribute is set to a true     |
   |                | value, and the sockaddr-peer   |
   |                | attribute is filled in. If     |
   |                | connection is ever lost,       |
   |                | connected? is reset, and a new |
   |                | connection will be attempted   |
   |                | at the next poll-event signal. |
   |                |                                |
   |                | If the verbose? attribute is   |
   |                | set, a trace message is        |
   |                | emitted whenever the           |
   |                | connection status changes.     |
   |----------------+--------------------------------|
   |        pin i/o | When the tx pin is driven with |
   |                | a value, the bottom 8 bits are |
   |                | extracted and enqueued in a    |
   |                | transmit buffer. The tx-buffer |
   |                | attribute provides a read-only |
   |                | view of the current buffer,    |
   |                | and the avg-tx-buffer-size     |
   |                | provides a moving average      |
   |                | length of this buffer. If a    |
   |                | TCP connection does not exist, |
   |                | and buffer-while-disconnected? |
   |                | is set to a boolean false      |
   |                | value, then bytes received on  |
   |                | the tx pin are ignored instead |
   |                | of buffered.                   |
   |                |                                |
   |                | Whenever the tx pin is driven  |
   |                | without value out of 0-255     |
   |                | range, it is interpreted as an |
   |                | "end-of-file" indication,      |
   |                | which causes the current       |
   |                | socket connection, if any, to  |
   |                | be shut down. Similarly, if    |
   |                | the disconnection is caused by |
   |                | the peer, the rx pin is driven |
   |                | with an out-of-range value to  |
   |                | signal an "end-of-file"        |
   |                | condition.                     |
   |                |                                |
   |                | Whenever a character is        |
   |                | received from the TCP socket,  |
   |                | it is immediately transmitted  |
   |                | on the rx pin as an 8-bit      |
   |                | value. (This happens only      |
   |                | during a poll.)                |
   |----------------+--------------------------------|
   |     socket i/o | When the poll-event pin is     |
   |        polling | driven, and a connection       |
   |                | exists, this component         |
   |                | attempts to receive then       |
   |                | transmit batches of bytes, in  |
   |                | a non-blocking manner. If the  |
   |                | trace-traffic? attribute is    |
   |                | set to a boolean true value, a |
   |                | tracing message is written to  |
   |                | standard out for each          |
   |                | successful read() or write()   |
   |                | operation.                     |
   |                |                                |
   |                | The tx-count and rx-count      |
   |                | attributes accumulate the      |
   |                | number of bytes transmitted    |
   |                | and received, respectively.    |
   |                | The poll-count attribute       |
   |                | accumulates the number of      |
   |                | poll-event events, including   |
   |                | those made while disconnected. |
   |                |                                |
   |                | After all poll-event signals,  |
   |                | the component drives the       |
   |                | poll-control pin with a value  |
   |                | meant to set the interval to   |
   |                | the next polling event. Each   |
   |                | successful non-blocking socket |
   |                | I/O operation tends to reduce  |
   |                | the polling interval, and each |
   |                | unsuccessful one gradually     |
   |                | increases the interval. This   |
   |                | adaptive process attempts to   |
   |                | provide a good trade-off       |
   |                | between socket I/O performance |
   |                | (speed & throughput) and host  |
   |                | OS load (polling frequency).   |
   |                | The poll-interval attribute    |
   |                | contains the last selected     |
   |                | polling interval, and          |
   |                | max-poll-interval sets a       |
   |                | maximum on the adaptive        |
   |                | increase. (The minimum is 0.)  |
   |----------------+--------------------------------|
   |  configuration | When the configure! is set,    |
   |                | the new value is interpreted   |
   |                | as a configuration spec. The   |
   |                | spec is a colon-separated list |
   |                | of items, each of which is     |
   |                | passed in turn to the          |
   |                | 'configure' method for         |
   |                | interpretation and possible    |
   |                | action.                        |
   +-------------------------------------------------+

   +-------------------------------------------------+
   |                 SID Conventions                 |
   |-------------------------------------------------|
   |        functional | supported  | -              |
   |-------------------+------------+----------------|
   |      save/restore | not        | -              |
   |                   | supported  |                |
   |-------------------+------------+----------------|
   |     triggerpoints | not        | -              |
   |                   | supported  |                |
   |-------------------+------------+----------------|
   | inhibit-recursion | supported  | It prevents    |
   |                   |            | harmful        |
   |                   |            | recursion on   |
   |                   |            | the poll-event |
   |                   |            | input pin.     |
   +-------------------------------------------------+

     ----------------------------------------------------------------------

Environment:

   Related components

   The init and fini pins must be driven in the proper sequence.

   Since this component family merely pumps data in and out of a socket, some
   other component should serve as the source and sink of the characters.

   The adaptive polling control mechanism is designed to operate best when
   connected to a host-time scheduler. This mechanism may be unused, as long
   as the poll-event pin is driven regularly by some other source.

   The following configuration file fragment shows a hypothetical use of the
   socket components.

         new SOMETYPE source
         new SOMETYPE sink
         new sid-sched-host-accurate sched
         new sid-io-socket-server srv                    # be a server
         set srv sockaddr-local 0.0.0.0:3420             # listen on port 3420
         set sched num-clients 1
         connect-pin main starting -> srv init
         connect-pin main stopping -> srv fini
         connect-pin sched 0-event -> srv poll-event     # adaptive polling
         connect-pin sched 0-control <- srv poll-control # adaptive polling
         set srv verbose? 1
         connect-pin srv tx <- source tx
         connect-pin srv rx -> sink rx
    

     ----------------------------------------------------------------------

Component Reference:

  Component: sid-io-socket

   +---------------------------------------------------------+
   |                          pins                           |
   |---------------------------------------------------------|
   |    name    |direction| legalvalues |     behaviors      |
   |------------+---------+-------------+--------------------|
   |init        |in       |N/A          |initialization      |
   |------------+---------+-------------+--------------------|
   |fini        |in       |N/A          |initialization      |
   |------------+---------+-------------+--------------------|
   |tx          |in       |byte or void |pin i/o             |
   |------------+---------+-------------+--------------------|
   |rx          |out      |byte or void |pin i/o             |
   |------------+---------+-------------+--------------------|
   |poll-event  |in       |any          |connection, socket  |
   |            |         |             |i/o polling         |
   |------------+---------+-------------+--------------------|
   |poll-control|out      |limited value|connection, socket  |
   |            |         |             |i/o polling         |
   +---------------------------------------------------------+

+----------------------------------------------------------------------------------------------+
|                                          attributes                                          |
|----------------------------------------------------------------------------------------------|
|            name            |     category     |  legal values  |  default  |   behaviors    ||
|                            |                  |                |   value   |                ||
|----------------------------+------------------+----------------+-----------+----------------||
|tx-count                    |register          |numeric         |-          |socket i/o      ||
|                            |                  |                |           |polling         ||
|----------------------------+------------------+----------------+-----------+----------------||
|tx-buffer                   |register          |string          |-          |pin i/o         ||
|----------------------------+------------------+----------------+-----------+----------------||
|rx-count                    |register          |numeric         |-          |socket i/o      ||
|                            |                  |                |           |polling         ||
|----------------------------+------------------+----------------+-----------+----------------||
|poll-count                  |register          |numeric         |-          |socket i/o      ||
|                            |                  |                |           |polling         ||
|----------------------------+------------------+----------------+-----------+----------------||
|avg-tx-buffer-size          |register          |floating point  |-          |pin i/o         ||
|                            |                  |string          |           |                ||
|----------------------------+------------------+----------------+-----------+----------------||
|server?                     |setting           |boolean         |1/0        |initialization  ||
|----------------------------+------------------+----------------+-----------+----------------||
|sockaddr-local              |setting/register  |ipaddress:port  |0.0.0.0:0  |connection      ||
|----------------------------+------------------+----------------+-----------+----------------||
|sockaddr-peer               |register/setting  |ipaddress:port  |0.0.0.0:0  |connection      ||
|----------------------------+------------------+----------------+-----------+----------------||
|verbose?                    |setting           |boolean         |0          |connection      ||
|----------------------------+------------------+----------------+-----------+----------------||
|trace-traffic?              |setting           |boolean         |0          |socket i/o      ||
|                            |                  |                |           |polling         ||
|----------------------------+------------------+----------------+-----------+----------------||
|buffer-while-disconnected?  |setting           |boolean         |yes        |pin i/o         ||
|----------------------------+------------------+----------------+-----------+----------------||
|connected?                  |register          |boolean         |-          |connection      ||
|----------------------------+------------------+----------------+-----------+----------------||
|max-poll-interval           |setting           |numeric         |250        |socket i/o      ||
|                            |                  |                |           |polling         ||
|----------------------------+------------------+----------------+-----------+----------------||
|poll-interval               |register          |numeric         |-          |socket i/o      ||
|                            |                  |                |           |polling         ||
|----------------------------+------------------+----------------+-----------+----------------||
|init                        |pin               |numeric         |-          |initialization  ||
|----------------------------+------------------+----------------+-----------+----------------||
|fini                        |pin               |numeric         |-          |initialization  ||
|----------------------------+------------------+----------------+-----------+----------------||
|tx                          |pin               |numeric         |-          |pin i/o         ||
|----------------------------+------------------+----------------+-----------+----------------||
|rx                          |pin               |numeric         |-          |pin i/o         ||
|----------------------------+------------------+----------------+-----------+----------------||
|configure!                  |setting           |string          |-          |configuration   ||
+----------------------------------------------------------------------------------------------+

  Variant: sid-io-socket-client

   Same as sid-io-socket

  Variant: sid-io-socket-server

   Same as sid-io-socket
@


1.2
log
@* Freshly generated documentation.
* ChangeLog entries to follow later.
@
text
@d153 10
d222 71
a292 73
   +-------------------------------------------------+
   |                      pins                       |
   |-------------------------------------------------|
   |    name    |direction|legalvalues|  behaviors   |
   |------------+---------+-----------+--------------|
   |init        |in       |N/A        |initialization|
   |------------+---------+-----------+--------------|
   |fini        |in       |N/A        |initialization|
   |------------+---------+-----------+--------------|
   |tx          |in       |byte or    |pin i/o       |
   |            |         |void       |              |
   |------------+---------+-----------+--------------|
   |rx          |out      |byte or    |pin i/o       |
   |            |         |void       |              |
   |------------+---------+-----------+--------------|
   |            |         |           |connection,   |
   |poll-event  |in       |any        |socket i/o    |
   |            |         |           |polling       |
   |------------+---------+-----------+--------------|
   |            |         |limited    |connection,   |
   |poll-control|out      |value      |socket i/o    |
   |            |         |           |polling       |
   +-------------------------------------------------+

+------------------------------------------------------------------------------------+
|                                     attributes                                     |
|------------------------------------------------------------------------------------|
|           name           |    category    | legal values | default |  behaviors   ||
|                          |                |              |  value  |              ||
|--------------------------+----------------+--------------+---------+--------------||
|tx-count                  |register        |numeric       |-        |socket i/o    ||
|                          |                |              |         |polling       ||
|--------------------------+----------------+--------------+---------+--------------||
|tx-buffer                 |register        |string        |-        |pin i/o       ||
|--------------------------+----------------+--------------+---------+--------------||
|rx-count                  |register        |numeric       |-        |socket i/o    ||
|                          |                |              |         |polling       ||
|--------------------------+----------------+--------------+---------+--------------||
|poll-count                |register        |numeric       |-        |socket i/o    ||
|                          |                |              |         |polling       ||
|--------------------------+----------------+--------------+---------+--------------||
|avg-tx-buffer-size        |register        |floating point|-        |pin i/o       ||
|                          |                |string        |         |              ||
|--------------------------+----------------+--------------+---------+--------------||
|server?                   |setting         |boolean       |1/0      |initialization||
|--------------------------+----------------+--------------+---------+--------------||
|sockaddr-local            |setting/register|ipaddress:port|0.0.0.0:0|connection    ||
|--------------------------+----------------+--------------+---------+--------------||
|sockaddr-peer             |register/setting|ipaddress:port|0.0.0.0:0|connection    ||
|--------------------------+----------------+--------------+---------+--------------||
|verbose?                  |setting         |boolean       |0        |connection    ||
|--------------------------+----------------+--------------+---------+--------------||
|trace-traffic?            |setting         |boolean       |0        |socket i/o    ||
|                          |                |              |         |polling       ||
|--------------------------+----------------+--------------+---------+--------------||
|buffer-while-disconnected?|setting         |boolean       |yes      |pin i/o       ||
|--------------------------+----------------+--------------+---------+--------------||
|connected?                |register        |boolean       |-        |connection    ||
|--------------------------+----------------+--------------+---------+--------------||
|max-poll-interval         |setting         |numeric       |250      |socket i/o    ||
|                          |                |              |         |polling       ||
|--------------------------+----------------+--------------+---------+--------------||
|poll-interval             |register        |numeric       |-        |socket i/o    ||
|                          |                |              |         |polling       ||
|--------------------------+----------------+--------------+---------+--------------||
|init                      |pin             |numeric       |-        |initialization||
|--------------------------+----------------+--------------+---------+--------------||
|fini                      |pin             |numeric       |-        |initialization||
|--------------------------+----------------+--------------+---------+--------------||
|tx                        |pin             |numeric       |-        |pin i/o       ||
|--------------------------+----------------+--------------+---------+--------------||
|rx                        |pin             |numeric       |-        |pin i/o       ||
+------------------------------------------------------------------------------------+
@


1.1
log
@* public snapshot of sid simulator
@
text
@d1 1
a1 2
* Name
  sid-io-socket-server sid-io-socket-client
d3 1
a3 1
* Synopsis
d5 2
a6 2
  Members of this family of components perform I/O on a TCP socket and relay data
  across a pair of pins to some other component.
d8 285
a292 169
  Pins: init fini tx rx poll-event poll-control
  Attributes: tx-count tx-buffer rx-count poll-count avg-tx-buffer-size server? 
	sockaddr-local sockaddr-peer verbose? trace-traffic? buffer-while-disconnected? 
	connected? max-poll-interval poll-interval
	init fini tx rx

  Library: libconsoles.la
  Symbol name: console_component_library

* Functionality
  - Modelling

    This simulated component uses non-blocking I/O on the host.
    Therefore it must be regularly polled, for example by a host-time
    scheduler.  This component is able to automatically regulate a
    scheduler subscription to produce fast response/throughput during
    high traffic times, or reduce CPU load in low traffic times.

    The "sid-io-socket-server" component implements a TCP server, and
    "sid-io-socket-client" implements a TCP client.  In other words,
    one expects an incoming socket connection, the other uses an
    outgoing socket connection.  The two components are otherwise
    interchangeable and are treated below as one kind.

    Multiple instances of these components coexist comfortably.

  - Behaviors

    * Initialization

      When the "init" pin is driven, the component creates and binds a
      file descriptor to the IP address specified by the
      "sockaddr-local" attribute.  The host operating system may
      assign some available TCP port number if the attribute is not
      set.  An actual TCP connection attempt is not made at this time.
 
      When the "fini" pin is driven, the component closes its file
      descriptors, thus closing its connection (if any).

    * Connection

      When the "poll-event" pin is driven, but no connection exists, a
      non-blocking TCP connect operation is attempted.  For a server,
      this means an "accept()" call, and for a client, a "connect()".
      The "server?" attribute will contain a boolean true value for
      the former, false for the latter.

      If the connection is successful, the "connected?" attribute is
      set to a true value, and the "sockaddr-peer" attribute is filled
      in.  If connection is ever lost, "connected?" is reset, and a
      new connection will be attempted at the next "poll-event"
      signal.

      If the "verbose?" attribute is set, a trace message is emitted
      whenever the connection status changes.

    * Pin I/O 

      When the "tx" pin is driven with a value, the bottom 8 bits are
      extracted and enqueued in a transmit buffer.  The "tx-buffer"
      attribute provides a read-only view of the current buffer, and
      the "avg-tx-buffer-size" provides a moving average length of
      this buffer.  If a TCP connection does not exist, and
      "buffer-while-disconnected?" is set to a boolean false value,
      then bytes received on the "tx" pin are ignored instead of
      buffered.

      Whenever the "tx" pin is driven without value out of 0-255
      range, it is interpreted as an "end-of-file" indication, which
      causes the current socket connection, if any, to be shut down.
      Similarly, if the disconnection is caused by the peer, the "rx"
      pin is driven with an out-of-range value to signal an
      "end-of-file" condition.

      Whenever a character is received from the TCP socket, it is
      immediately transmitted on the "rx" pin as an 8-bit value.
      (This happens only during a poll.)

    * Socket I/O polling

      When the "poll-event" pin is driven, and a connection exists,
      this component attempts to receive then transmit batches of
      bytes, in a non-blocking manner.  If the "trace-traffic?"
      attribute is set to a boolean true value, a tracing message is
      written to standard out for each successful "read()" or "write()"
      operation.

      The "tx-count" and "rx-count" attributes accumulate the number
      of bytes transmitted and received, respectively.  The
      "poll-count" attribute accumulates the number of "poll-event"
      events, including those made while disconnected.

      After all "poll-event" signals, the component drives the
      "poll-control" pin with a value meant to set the interval to the
      next polling event.  Each successful non-blocking socket I/O
      operation tends to reduce the polling interval, and each
      unsuccessful one gradually increases the interval.  This
      adaptive process attempts to provide a good trade-off between
      socket I/O performance (speed & throughput) and host OS load
      (polling frequency).  The "poll-interval" attribute contains the
      last selected polling interval, and "max-poll-interval" sets a
      maximum on the adaptive increase.  (The minimum is 0.)

  - SID conventions
    * This is a functional component.
    * It does not support state save/restore, nor triggerpoints.
    * It prevents harmful recursion on the "poll-event" input pin.

* Environment
  - Related components

    The "init" and "fini" pins must be driven in the proper sequence.

    Since this component family merely pumps data in and out of a
    socket, some other component should serve as the source and sink
    of the characters.

    The adaptive polling control mechanism is designed to operate best
    when connected to a host-time scheduler.  This mechanism may be
    unused, as long as the "poll-event" pin is driven regularly by
    some other source.

    The following configuration file fragment shows a hypothetical use
    of the socket components.

        new SOMETYPE source
        new SOMETYPE sink
        new sid-sched-host-accurate sched
        new sid-io-socket-server srv                    # be a server
	set srv sockaddr-local 0.0.0.0:3420             # listen on port 3420
	set sched num-clients 1
	connect-pin main starting -> srv init
        connect-pin main stopping -> srv fini
        connect-pin sched 0-event -> srv poll-event     # adaptive polling
        connect-pin sched 0-control <- srv poll-control # adaptive polling
        set srv verbose? 1
        connect-pin srv tx <- source tx
        connect-pin srv rx -> sink rx

* SID interface reference

  - low level:
    * pins
      - init | input | N/A | initialization
      - fini | input | N/A | initialization
      - tx | input | byte or void | pin I/O
      - rx | output | byte or void | pin I/O
      - poll-event | input | any | connection, socket I/O polling
      - poll-control | output | limited value | connection, socket I/O polling

    * attributes
      - tx-count | register | numeric | n/a | socket I/O polling
      - tx-buffer | register | string | n/a | pin I/O
      - rx-count | register | numeric | n/a | socket I/O polling
      - poll-count | register | numeric | n/a | socket I/O polling
      - avg-tx-buffer-size | register | floating point string | n/a | pin I/O
      - server? | setting | boolean | 1/0 | initialization
      - sockaddr-local | setting/register | ipaddress:port | 0.0.0.0:0 | connection
      - sockaddr-peer | register/setting | ipaddress:port | 0.0.0.0:0 | connection
      - verbose? | setting | boolean | 0 | connection
      - trace-traffic? | setting | boolean | 0 | socket I/O polling
      - buffer-while-disconnected? | setting | boolean | yes | pin I/O
      - connected? | register | boolean | n/a | connection
      - max-poll-interval | setting | numeric | 250 | socket I/O polling
      - poll-interval | register | numeric | n/a | socket I/O polling
      - init | pin | numeric | n/a | initialization
      - fini | pin | numeric | n/a | initialization
      - tx | pin | numeric | n/a | pin I/O
      - rx | pin | numeric | n/a | pin I/O
@

