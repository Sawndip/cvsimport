head	1.4;
access;
symbols
	sid-snapshot-20180601:1.4
	sid-snapshot-20180501:1.4
	sid-snapshot-20180401:1.4
	sid-snapshot-20180301:1.4
	sid-snapshot-20180201:1.4
	sid-snapshot-20180101:1.4
	sid-snapshot-20171201:1.4
	sid-snapshot-20171101:1.4
	sid-snapshot-20171001:1.4
	sid-snapshot-20170901:1.4
	sid-snapshot-20170801:1.4
	sid-snapshot-20170701:1.4
	sid-snapshot-20170601:1.4
	sid-snapshot-20170501:1.4
	sid-snapshot-20170401:1.4
	sid-snapshot-20170301:1.4
	sid-snapshot-20170201:1.4
	sid-snapshot-20170101:1.4
	sid-snapshot-20161201:1.4
	sid-snapshot-20161101:1.4
	sid-snapshot-20160901:1.4
	sid-snapshot-20160801:1.4
	sid-snapshot-20160701:1.4
	sid-snapshot-20160601:1.4
	sid-snapshot-20160501:1.4
	sid-snapshot-20160401:1.4
	sid-snapshot-20160301:1.4
	sid-snapshot-20160201:1.4
	sid-snapshot-20160101:1.4
	sid-snapshot-20151201:1.4
	sid-snapshot-20151101:1.4
	sid-snapshot-20151001:1.4
	sid-snapshot-20150901:1.4
	sid-snapshot-20150801:1.4
	sid-snapshot-20150701:1.4
	sid-snapshot-20150601:1.4
	sid-snapshot-20150501:1.4
	sid-snapshot-20150401:1.4
	sid-snapshot-20150301:1.4
	sid-snapshot-20150201:1.4
	sid-snapshot-20150101:1.4
	sid-snapshot-20141201:1.4
	sid-snapshot-20141101:1.4
	sid-snapshot-20141001:1.4
	sid-snapshot-20140901:1.4
	sid-snapshot-20140801:1.4
	sid-snapshot-20140701:1.4
	sid-snapshot-20140601:1.4
	sid-snapshot-20140501:1.4
	sid-snapshot-20140401:1.4
	sid-snapshot-20140301:1.4
	sid-snapshot-20140201:1.4
	sid-snapshot-20140101:1.4
	sid-snapshot-20131201:1.4
	sid-snapshot-20131101:1.4
	sid-snapshot-20131001:1.4
	sid-snapshot-20130901:1.4
	sid-snapshot-20130801:1.4
	sid-snapshot-20130701:1.4
	sid-snapshot-20130601:1.4
	sid-snapshot-20130501:1.4
	sid-snapshot-20130401:1.4
	sid-snapshot-20130301:1.4
	sid-snapshot-20130201:1.4
	sid-snapshot-20130101:1.4
	sid-snapshot-20121201:1.4
	sid-snapshot-20121101:1.4
	sid-snapshot-20121001:1.4
	sid-snapshot-20120901:1.4
	sid-snapshot-20120801:1.4
	sid-snapshot-20120701:1.4
	sid-snapshot-20120601:1.4
	sid-snapshot-20120501:1.4
	sid-snapshot-20120401:1.4
	sid-snapshot-20120301:1.4
	sid-snapshot-20120201:1.4
	sid-snapshot-20120101:1.4
	sid-snapshot-20111201:1.4
	sid-snapshot-20111101:1.4
	sid-snapshot-20111001:1.4
	sid-snapshot-20110901:1.4
	sid-snapshot-20110801:1.4
	sid-snapshot-20110701:1.4
	sid-snapshot-20110601:1.4
	sid-snapshot-20110501:1.4
	sid-snapshot-20110401:1.4
	sid-snapshot-20110301:1.4
	sid-snapshot-20110201:1.4
	sid-snapshot-20110101:1.4
	sid-snapshot-20101201:1.4
	sid-snapshot-20101101:1.4
	sid-snapshot-20101001:1.4
	sid-snapshot-20100901:1.4
	sid-snapshot-20100801:1.4
	sid-snapshot-20100701:1.4
	sid-snapshot-20100601:1.4
	sid-snapshot-20100501:1.4
	sid-snapshot-20100401:1.4
	sid-snapshot-20100301:1.4
	sid-snapshot-20100201:1.4
	sid-snapshot-20100101:1.4
	sid-snapshot-20091201:1.4
	sid-snapshot-20091101:1.4
	sid-snapshot-20091001:1.4
	sid-snapshot-20090901:1.4
	sid-snapshot-20090801:1.4
	sid-snapshot-20090701:1.4
	sid-snapshot-20090601:1.4
	sid-snapshot-20090501:1.4
	sid-snapshot-20090401:1.4
	sid-snapshot-20090301:1.4
	sid-snapshot-20090201:1.4
	sid-snapshot-20090101:1.4
	sid-snapshot-20081201:1.4
	sid-snapshot-20081101:1.4
	sid-snapshot-20081001:1.4
	sid-snapshot-20080901:1.4
	sid-snapshot-20080801:1.4
	sid-snapshot-20080701:1.4
	sid-snapshot-20080601:1.4
	sid-snapshot-20080501:1.4
	sid-snapshot-20080403:1.4
	sid-snapshot-20080401:1.4
	sid-snapshot-20080301:1.4
	sid-snapshot-20080201:1.4
	sid-snapshot-20080101:1.4
	sid-snapshot-20071201:1.4
	sid-snapshot-20071101:1.4
	sid-snapshot-20071001:1.4
	sid-20020905-branchpoint:1.2
	sid-20020905-branch:1.2.0.2
	cygnus_cvs_20020108_pre:1.2;
locks; strict;
comment	@// @;


1.4
date	2006.07.14.19.42.53;	author brolley;	state Exp;
branches;
next	1.3;

1.3
date	2003.07.14.18.42.14;	author brolley;	state Exp;
branches;
next	1.2;

1.2
date	2001.01.17.21.05.09;	author jjohnstn;	state Exp;
branches;
next	1.1;

1.1
date	2000.12.07.19.30.50;	author fche;	state Exp;
branches;
next	;


desc
@@


1.4
log
@2006-07-14  Dave Brolley  <brolley@@redhat.com>

        * stdio.cxx (stdioConsole): Initialize eof_p. Add "eof" pin.
        (read): Remove 'value'. Check eof_p. Drive eof_pin and set
        eof_p as needed.
        * components.h (eof_pin): New member of stdioConsole.
        (eof_p): Likewise.
        * sid-io-stdio.xml: Document eof pin.
        * sid-io-stdio.txt: Regenerated.
@
text
@// stdio.cxx - A simple console that uses standard I/O for
// enunciation.  -*- C++ -*-

// Copyright (C) 1999, 2000, 2003, 2006 Red Hat.
// This file is part of SID and is licensed under the GPL.
// See the file COPYING.SID for conditions for redistribution.

#include "config.h"
#include "components.h"

namespace console_stuff
{

stdioConsole::stdioConsole()
  :activity_pin(this, & stdioConsole::read),
   stdout_pin(this, & stdioConsole::write),
   eof_p (false)
{
  add_pin("poll", &activity_pin);
  add_pin("stdin", &stdin_pin);
  add_pin("stdout", &stdout_pin);
  add_pin("eof", &eof_pin);
  add_attribute_virtual ("state-snapshot", this,
			 & stdioConsole::save_state,
			 & stdioConsole::restore_state);
}

void
stdioConsole::write(host_int_4 value)
{
  cout << static_cast<char> (value) << flush;
}

void
stdioConsole::read(host_int_4)
{
  // Check for EOF
  if (eof_p)
    return;

  unsigned char buf[1000];
  int len;
  // Switch to non-blocking input.
  long flags = fcntl(0, F_GETFL);
  fcntl(0, F_SETFL, flags | O_NONBLOCK);

  if ((len = ::read(0, buf, 1000)) > 0)
    {
      eof_pin.drive (0);
      for (int i = 0; i < len; ++i)
	{
	  stdin_pin.drive(buf[i]);
	}
    }
  else if (len == 0)
    {
      eof_p = true;
      eof_pin.drive (1);
    }

  // Restore flags.
  fcntl(0, F_SETFL, flags);
}


string 
stdioConsole::save_state ( )
{
  return string("console");
}


component::status
stdioConsole::restore_state(const string& state)
{
  if ( state == "console")
    return component::ok;
  else
    return component::bad_value;
}


} // end of namespace console_stuff

@


1.3
log
@2003-07-14  Dave Brolley  <brolley@@redhat.com>

        * stdio.cxx (read): Restore flags to their original state.
@
text
@d4 1
a4 1
// Copyright (C) 1999, 2000, 2003 Red Hat.
d16 2
a17 1
   stdout_pin(this, & stdioConsole::write)
d22 1
d37 4
a42 2
  host_int_4 value;

d49 1
d55 5
@


1.2
log
@
2001-01-17  Jeff Johnston  <jjohnstn@@redhat.com>

        * stdio.cxx (stdioConsole::read): Change to read a reasonable size of
        data each time stdin gets polled.
@
text
@d4 1
a4 1
// Copyright (C) 1999, 2000 Red Hat.
d52 1
a52 1
  fcntl(0, F_SETFL, flags & ~O_NONBLOCK);
@


1.1
log
@* public snapshot of sid simulator
@
text
@d35 2
a36 1
  unsigned char c;
d43 1
a43 1
  if (::read(0, &c, 1) > 0)
d45 4
a48 2
      value = c;
      stdin_pin.drive(value);
@

