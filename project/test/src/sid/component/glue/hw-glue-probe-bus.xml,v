head	1.4;
access;
symbols
	sid-snapshot-20180601:1.4
	sid-snapshot-20180501:1.4
	sid-snapshot-20180401:1.4
	sid-snapshot-20180301:1.4
	sid-snapshot-20180201:1.4
	sid-snapshot-20180101:1.4
	sid-snapshot-20171201:1.4
	sid-snapshot-20171101:1.4
	sid-snapshot-20171001:1.4
	sid-snapshot-20170901:1.4
	sid-snapshot-20170801:1.4
	sid-snapshot-20170701:1.4
	sid-snapshot-20170601:1.4
	sid-snapshot-20170501:1.4
	sid-snapshot-20170401:1.4
	sid-snapshot-20170301:1.4
	sid-snapshot-20170201:1.4
	sid-snapshot-20170101:1.4
	sid-snapshot-20161201:1.4
	sid-snapshot-20161101:1.4
	sid-snapshot-20160901:1.4
	sid-snapshot-20160801:1.4
	sid-snapshot-20160701:1.4
	sid-snapshot-20160601:1.4
	sid-snapshot-20160501:1.4
	sid-snapshot-20160401:1.4
	sid-snapshot-20160301:1.4
	sid-snapshot-20160201:1.4
	sid-snapshot-20160101:1.4
	sid-snapshot-20151201:1.4
	sid-snapshot-20151101:1.4
	sid-snapshot-20151001:1.4
	sid-snapshot-20150901:1.4
	sid-snapshot-20150801:1.4
	sid-snapshot-20150701:1.4
	sid-snapshot-20150601:1.4
	sid-snapshot-20150501:1.4
	sid-snapshot-20150401:1.4
	sid-snapshot-20150301:1.4
	sid-snapshot-20150201:1.4
	sid-snapshot-20150101:1.4
	sid-snapshot-20141201:1.4
	sid-snapshot-20141101:1.4
	sid-snapshot-20141001:1.4
	sid-snapshot-20140901:1.4
	sid-snapshot-20140801:1.4
	sid-snapshot-20140701:1.4
	sid-snapshot-20140601:1.4
	sid-snapshot-20140501:1.4
	sid-snapshot-20140401:1.4
	sid-snapshot-20140301:1.4
	sid-snapshot-20140201:1.4
	sid-snapshot-20140101:1.4
	sid-snapshot-20131201:1.4
	sid-snapshot-20131101:1.4
	sid-snapshot-20131001:1.4
	sid-snapshot-20130901:1.4
	sid-snapshot-20130801:1.4
	sid-snapshot-20130701:1.4
	sid-snapshot-20130601:1.4
	sid-snapshot-20130501:1.4
	sid-snapshot-20130401:1.4
	sid-snapshot-20130301:1.4
	sid-snapshot-20130201:1.4
	sid-snapshot-20130101:1.4
	sid-snapshot-20121201:1.4
	sid-snapshot-20121101:1.4
	sid-snapshot-20121001:1.4
	sid-snapshot-20120901:1.4
	sid-snapshot-20120801:1.4
	sid-snapshot-20120701:1.4
	sid-snapshot-20120601:1.4
	sid-snapshot-20120501:1.4
	sid-snapshot-20120401:1.4
	sid-snapshot-20120301:1.4
	sid-snapshot-20120201:1.4
	sid-snapshot-20120101:1.4
	sid-snapshot-20111201:1.4
	sid-snapshot-20111101:1.4
	sid-snapshot-20111001:1.4
	sid-snapshot-20110901:1.4
	sid-snapshot-20110801:1.4
	sid-snapshot-20110701:1.4
	sid-snapshot-20110601:1.4
	sid-snapshot-20110501:1.4
	sid-snapshot-20110401:1.4
	sid-snapshot-20110301:1.4
	sid-snapshot-20110201:1.4
	sid-snapshot-20110101:1.4
	sid-snapshot-20101201:1.4
	sid-snapshot-20101101:1.4
	sid-snapshot-20101001:1.4
	sid-snapshot-20100901:1.4
	sid-snapshot-20100801:1.4
	sid-snapshot-20100701:1.4
	sid-snapshot-20100601:1.4
	sid-snapshot-20100501:1.4
	sid-snapshot-20100401:1.4
	sid-snapshot-20100301:1.4
	sid-snapshot-20100201:1.4
	sid-snapshot-20100101:1.4
	sid-snapshot-20091201:1.4
	sid-snapshot-20091101:1.4
	sid-snapshot-20091001:1.4
	sid-snapshot-20090901:1.4
	sid-snapshot-20090801:1.4
	sid-snapshot-20090701:1.4
	sid-snapshot-20090601:1.4
	sid-snapshot-20090501:1.4
	sid-snapshot-20090401:1.4
	sid-snapshot-20090301:1.4
	sid-snapshot-20090201:1.4
	sid-snapshot-20090101:1.4
	sid-snapshot-20081201:1.4
	sid-snapshot-20081101:1.4
	sid-snapshot-20081001:1.4
	sid-snapshot-20080901:1.4
	sid-snapshot-20080801:1.4
	sid-snapshot-20080701:1.4
	sid-snapshot-20080601:1.4
	sid-snapshot-20080501:1.4
	sid-snapshot-20080403:1.4
	sid-snapshot-20080401:1.4
	sid-snapshot-20080301:1.4
	sid-snapshot-20080201:1.4
	sid-snapshot-20080101:1.4
	sid-snapshot-20071201:1.4
	sid-snapshot-20071101:1.4
	sid-snapshot-20071001:1.4
	sid-20020905-branchpoint:1.2
	sid-20020905-branch:1.2.0.2
	cygnus_cvs_20020108_pre:1.1;
locks; strict;
comment	@# @;


1.4
date	2006.08.29.20.34.00;	author brolley;	state Exp;
branches;
next	1.3;

1.3
date	2006.08.29.17.47.22;	author brolley;	state Exp;
branches;
next	1.2;

1.2
date	2002.05.27.20.53.24;	author bje;	state Exp;
branches;
next	1.1;

1.1
date	2001.08.03.01.47.52;	author bje;	state Exp;
branches;
next	;


desc
@@


1.4
log
@2006-08-29  Dave Brolley  <brolley@@redhat.com>

        * glue.cxx (base_address): New member of bus_prober.
        (bus_prober): Initialize base_address.
        (writeAny): Add this->prober->base_address to the address driven.
        (readAny): Likewise.
        * hw-glue-probe-bus.xml: Document new base-address attribute.
        * *.txt: Regenerated.
@
text
@<?xml version="1.0" ?>
<!DOCTYPE defcomplib SYSTEM "http://sources.redhat.com/sid/component.dtd">

<defcomplib lib="libglue.la" dlsym="glue_component_library">
  <defcomponent name="hw-glue-probe-bus" type="concrete">

    <!-- buses -->
    <defbus name="upstream" addresses="unrestricted" accesses="unrestricted" behaviors="bus traffic passthrough/etc." />

    <!-- accessors -->
    <defaccessor name="downstream" accesses="unrestricted" behaviors="bus traffic passthrough" />

    <!-- pins -->
    <defpin name="address" direction="out" legalvalues="any" behaviors="bus traffic sampling" />
    <defpin name="data-high" direction="out" legalvalues="any" behaviors="bus traffic sampling" />
    <defpin name="data-low" direction="out" legalvalues="any" behaviors="bus traffic sampling" />
    <defpin name="status" direction="out" legalvalues="bus::status values" behaviors="bus traffic sampling" />
    <defpin name="type" direction="out" legalvalues="enum values" behaviors="bus traffic sampling" />

    <!-- attributes -->
    <defattribute name="base-address" category="setting" legalvalues="numeric" defaultvalue="0" behaviors="bus traffic sampling" />
    <defattribute name="trace?" category="setting" legalvalues="boolean" defaultvalue="0" behaviors="bus traffic tracing" />
    <defattribute name="sample-interval" category="setting" legalvalues="numeric" defaultvalue="1" behaviors="bus traffic sampling" />
    <defattribute name="interval-counter" category="register" legalvalues="numeric" behaviors="bus traffic sampling" />
    <defattribute name="address" category="pin" legalvalues="numeric" behaviors="bus traffic sampling" />
    <defattribute name="data-high" category="pin" legalvalues="numeric" behaviors="bus traffic sampling" />
    <defattribute name="data-low" category="pin" legalvalues="numeric" behaviors="bus traffic sampling" />
    <defattribute name="status" category="pin" legalvalues="numeric" behaviors="bus traffic sampling" />
    <defattribute name="type" category="pin" legalvalues="numeric" behaviors="bus traffic sampling" />
    <defattribute name="label" category="setting" legalvalues="any string" behaviors="bus traffic sampling" />
  </defcomponent>
  <synop>
    <p>
      This component samples and/or traces bus traffic.</p>
  </synop>
  <func>
    <modelling>
      <p>
	This component resembles a probe that transparently monitors bus traffic.</p>
    </modelling>
    
    <behavior name="bus traffic passthrough">
      <p>
	When the <accessor>downstream</accessor> accessor is
	configured, all incoming bus API calls to the <bus>upstream</bus> bus are
	passed through verbatim.  Without the <accessor>downstream</accessor> accessor
	configured, the <bus>upstream</bus> bus will return bus::unmapped for all
	calls.  Still, the sampling and tracing functions are still
	active.</p></behavior>
    <behavior name="bus traffic sampling">
      <p>
	<p>
	  Every now and then (at an interval configured by the <attribute>sample-interval</attribute>
	  attribute), a transaction is also reported via a collection of output
	  pins.  In sequence, the following output pins are driven:</p>
	<ul>
	  <li>
	    <name>address</name> - address parameter added to the value of the
            <attribute>base-address</attribute> attribute</li>
	  <li>
	    <name>data-high</name> - top 32 bits of bus data being read/written</li>
	  <li>
	    <name>data-low</name> - bottom 32 bits of same</li>
	  <li>
	    <name>status</name> - bus::status value returned from downstream</li>
	  <li>
	    <name>type</name> - an encoded value identifying the size, endianness, and
	    direction of the data transfer.  Specifically, in C lingo,
	    <code>	(type &amp; 0x00F): log2 of access size (0/1/2/3 for *_int_1/2/4/8)
	(type &amp; 0x010): 0x10 (little-endian) or 0x00 (big-endian)
	(type &amp; 0x100): 0x100 (read) or 0x00 (write)</code></li></ul>
	<p>
	  This sampling function is disabled if <attribute>sample-interval</attribute> is zero.  The
	  read-only <attribute>interval-counter</attribute> attribute indicates the current value of
	  the modular transaction counter.</p></p>
    </behavior>
    <behavior name="bus traffic tracing">
      <p>
	<p>
	If the <attribute>trace?</attribute> attribute is set, sampled bus traffic is traced to stdout
	in a compact format.  The sampling counter is shared with the traffic probing
	behavior above.</p>

	<p>
	One line per transaction is shown in a format resembling the common gdb simulators'
	<tt>--trace-core</tt> output:</p>
	<tt>
	[LABEL:] MODE:ADDRESS ARROW DATA [LATENCY] [STATUS]</tt>
	where
        <tt>LABEL</tt> is an optional label identifying the probe component.
	<tt>MODE</tt> is an encoding of the access type:
	<tt>zzz</tt>
	where <tt>le</tt> and <tt>be</tt> represent little- or big-endianness,
           and 1-8 represent the number of bytes transferred.
	<tt>ARROW</tt> is a redundant encoding of direction:
	<tt>{-&gt;,&lt;-}</tt> for
	<tt>{read,write}</tt>
	<tt>ADDRESS</tt> and
	<tt>DATA</tt> are hex-encoded host-endian values,
	<tt>LATENCY</tt> is a string encoding of the bus access latency, though 0 is ommited
	<tt>STATUS</tt> is a string encoding of the bus::status, though <tt>ok</tt> is omitted

      Examples:
	
	<code>      write-be-2:0xa002001c &lt;- 0x3442
      read-le-8:0x807fff30 -&gt; 0xffffffff807fff68 l:10
      write-be-4:0xfeedface &lt;- 0xdeadbeef unmapped!</code></p>
    </behavior>
    <convention name="functional" supported="true">
      <p>
	This is a functional component.</p>
    </convention>
    <convention name="state save/restore" supported="false">
      <p>
	This component does not support state save/restore.</p>
    </convention>
    <convention name="watchpoints" supported="false">
      <p>
	This component does not support watchpoints.</p>
    </convention>
    <convention name="Reentrancy Control" supported="false">
      <p>
	Reentrancy is not controlled.</p>
    </convention>
    <convention name="presentation" supported="true">
      <p>
	This component presents attributes in the "pin", "setting", and "register" 
	categories.</p>
    </convention>
  </func>
  <env>
    <p>
      <title>Related components
      </title>
      <p>
	<p>
	  This component may be interjected between bus masters and a mapper to
	  trace traffic.</p>
	
	<code>	new hw-glue-probe-bus bus-prober
	new SOME_KIND_OF_CPU cpu
        new SOME_KIND_OF_MAPPER mapper
        connect-bus cpu insn-memory bus-prober upstream
        connect-bus bus-prober downstream mapper access-port
        set bus-prober trace? 1</code>
	
    	<p>
	  A statistics-gathering component could attach to the sampling output
	  pins to maintain a picture of a program's memory access patterns.</p>

        <p>
          The <attribute>base-address</attribute> attribute should only be used if
          the downstream component has a fixed address within the system. The
          <attribute>base-address</attribute> attribute is not suitable for situations in
          which more than one address range is mapped onto the <bus>upstream</bus> bus.</p>
        <p>
          Consider the example below in which a single hw-glue-probe-bus is used to trace
          two address ranges.</p>

	<code>	new hw-glue-probe-bus bus-prober
	new SOME_KIND_OF_CPU cpu
        new SOME_KIND_OF_TRANSPARENT_MAPPER probe-mapper
        new SOME_KIND_OF_MAPPER mapper
        connect-bus cpu insn-memory probe-mapper access-port
        connect-bus probe-mapper [0-1023] bus-prober upstream
        connect-bus probe-mapper [1024-2047] mapper access-port
        connect-bus probe-mapper [2048-3071] bus-prober upstream
        connect-bus bus-prober downstream mapper access-port
        set bus-prober trace? 1</code>
	
      </p>
    </p>
  </env>
</defcomplib>


@


1.3
log
@2006-08-29  Dave Brolley  <brolley@@redhat.com>

        * glue.cxx (base_address): New member of bus_prober.
        (bus_prober): Initialize base_address.
        (writeAny): Add this->prober->base_address to the address driven.
        (readAny): Likewise.
        * hw-glue-probe-bus.xml: Document new base-address attribute.
        * *.txt: Regenerated.
@
text
@d21 1
a21 1
    <defattribute name="base-address" category="setting" legalvalues="numeric" defaultvalue="0" behaviors="bus traffic tracing" />
d58 2
a59 1
	    <name>address</name> - address parameter added to the value of the <attribute>base-address</attribute> attribute</li>
d150 21
@


1.2
log
@2002-05-27  Ben Elliston  <bje@@redhat.com>

	* glue.cxx (bus_prober::label): New member.
	(bus_prober ctor): Add a corresponding "label" attribute.
	(probing_bus::traceAccess): Output a component label, if given.
	* hw-glue-probe-bus.xml: Update documentation.
@
text
@d21 1
d58 1
a58 1
	    <name>address</name> - address parameter</li>
@


1.1
log
@* new XML documentation.
* ChangeLog entries to follow later.
@
text
@d29 1
d86 1
a86 1
	MODE:ADDRESS ARROW DATA [LATENCY] [STATUS]</tt>
d88 1
@

