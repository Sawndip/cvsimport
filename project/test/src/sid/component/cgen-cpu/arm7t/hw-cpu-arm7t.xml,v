head	1.2;
access;
symbols
	sid-snapshot-20180601:1.2
	sid-snapshot-20180501:1.2
	sid-snapshot-20180401:1.2
	sid-snapshot-20180301:1.2
	sid-snapshot-20180201:1.2
	sid-snapshot-20180101:1.2
	sid-snapshot-20171201:1.2
	sid-snapshot-20171101:1.2
	sid-snapshot-20171001:1.2
	sid-snapshot-20170901:1.2
	sid-snapshot-20170801:1.2
	sid-snapshot-20170701:1.2
	sid-snapshot-20170601:1.2
	sid-snapshot-20170501:1.2
	sid-snapshot-20170401:1.2
	sid-snapshot-20170301:1.2
	sid-snapshot-20170201:1.2
	sid-snapshot-20170101:1.2
	sid-snapshot-20161201:1.2
	sid-snapshot-20161101:1.2
	sid-snapshot-20160901:1.2
	sid-snapshot-20160801:1.2
	sid-snapshot-20160701:1.2
	sid-snapshot-20160601:1.2
	sid-snapshot-20160501:1.2
	sid-snapshot-20160401:1.2
	sid-snapshot-20160301:1.2
	sid-snapshot-20160201:1.2
	sid-snapshot-20160101:1.2
	sid-snapshot-20151201:1.2
	sid-snapshot-20151101:1.2
	sid-snapshot-20151001:1.2
	sid-snapshot-20150901:1.2
	sid-snapshot-20150801:1.2
	sid-snapshot-20150701:1.2
	sid-snapshot-20150601:1.2
	sid-snapshot-20150501:1.2
	sid-snapshot-20150401:1.2
	sid-snapshot-20150301:1.2
	sid-snapshot-20150201:1.2
	sid-snapshot-20150101:1.2
	sid-snapshot-20141201:1.2
	sid-snapshot-20141101:1.2
	sid-snapshot-20141001:1.2
	sid-snapshot-20140901:1.2
	sid-snapshot-20140801:1.2
	sid-snapshot-20140701:1.2
	sid-snapshot-20140601:1.2
	sid-snapshot-20140501:1.2
	sid-snapshot-20140401:1.2
	sid-snapshot-20140301:1.2
	sid-snapshot-20140201:1.2
	sid-snapshot-20140101:1.2
	sid-snapshot-20131201:1.2
	sid-snapshot-20131101:1.2
	sid-snapshot-20131001:1.2
	sid-snapshot-20130901:1.2
	sid-snapshot-20130801:1.2
	sid-snapshot-20130701:1.2
	sid-snapshot-20130601:1.2
	sid-snapshot-20130501:1.2
	sid-snapshot-20130401:1.2
	sid-snapshot-20130301:1.2
	sid-snapshot-20130201:1.2
	sid-snapshot-20130101:1.2
	sid-snapshot-20121201:1.2
	sid-snapshot-20121101:1.2
	sid-snapshot-20121001:1.2
	sid-snapshot-20120901:1.2
	sid-snapshot-20120801:1.2
	sid-snapshot-20120701:1.2
	sid-snapshot-20120601:1.2
	sid-snapshot-20120501:1.2
	sid-snapshot-20120401:1.2
	sid-snapshot-20120301:1.2
	sid-snapshot-20120201:1.2
	sid-snapshot-20120101:1.2
	sid-snapshot-20111201:1.2
	sid-snapshot-20111101:1.2
	sid-snapshot-20111001:1.2
	sid-snapshot-20110901:1.2
	sid-snapshot-20110801:1.2
	sid-snapshot-20110701:1.2
	sid-snapshot-20110601:1.2
	sid-snapshot-20110501:1.2
	sid-snapshot-20110401:1.2
	sid-snapshot-20110301:1.2
	sid-snapshot-20110201:1.2
	sid-snapshot-20110101:1.2
	sid-snapshot-20101201:1.2
	sid-snapshot-20101101:1.2
	sid-snapshot-20101001:1.2
	sid-snapshot-20100901:1.2
	sid-snapshot-20100801:1.2
	sid-snapshot-20100701:1.2
	sid-snapshot-20100601:1.2
	sid-snapshot-20100501:1.2
	sid-snapshot-20100401:1.2
	sid-snapshot-20100301:1.2
	sid-snapshot-20100201:1.2
	sid-snapshot-20100101:1.2
	sid-snapshot-20091201:1.2
	sid-snapshot-20091101:1.2
	sid-snapshot-20091001:1.2
	sid-snapshot-20090901:1.2
	sid-snapshot-20090801:1.2
	sid-snapshot-20090701:1.2
	sid-snapshot-20090601:1.2
	sid-snapshot-20090501:1.2
	sid-snapshot-20090401:1.2
	sid-snapshot-20090301:1.2
	sid-snapshot-20090201:1.2
	sid-snapshot-20090101:1.2
	sid-snapshot-20081201:1.2
	sid-snapshot-20081101:1.2
	sid-snapshot-20081001:1.2
	sid-snapshot-20080901:1.2
	sid-snapshot-20080801:1.2
	sid-snapshot-20080701:1.2
	sid-snapshot-20080601:1.2
	sid-snapshot-20080501:1.2
	sid-snapshot-20080403:1.2
	sid-snapshot-20080401:1.2
	sid-snapshot-20080301:1.2
	sid-snapshot-20080201:1.2
	sid-snapshot-20080101:1.2
	sid-snapshot-20071201:1.2
	sid-snapshot-20071101:1.2
	sid-snapshot-20071001:1.2
	sid-20020905-branchpoint:1.1
	sid-20020905-branch:1.1.0.2
	cygnus_cvs_20020108_pre:1.1;
locks; strict;
comment	@# @;


1.2
date	2004.08.04.15.42.00;	author fche;	state Exp;
branches;
next	1.1;

1.1
date	2001.08.03.01.47.52;	author bje;	state Exp;
branches;
next	;


desc
@@


1.2
log
@2004-08-04  Robert Shideleff <bigbob@@shideleff.com>

	* arm7f.cxx (arm7f_cpu): Change nfiq_pin and nirq_pin to normal
	input pins.  Remove handler callbacks.
	(arm7f_cpu ctor, reset): Initialize them high.
	(step_insns): Handle their proper level sensitivity.
	(step_arm, step_thumb, step_arm_pbb, step_thumb_pbb): Remove
	previous incorrect support.
	* arm7f.h: Corresponding changes.
	* hw-cpu-arm7t.xml: Note level sensitivity.
	* hw-cpu-arm7t.txt: Regenerated.
@
text
@<?xml version="1.0" ?>
<!DOCTYPE defcomplib SYSTEM "http://sources.redhat.com/sid/component.dtd" [
<!ENTITY stdinterface SYSTEM "../common-xml/interface.xml">
<!ENTITY stdbehavior SYSTEM "../common-xml/behavior.xml">
<!ENTITY debugregisters SYSTEM "../common-xml/debugger-register-access.xml">
<!ENTITY stdconventions SYSTEM "../common-xml/conventions.xml">
<!ENTITY stdenvironment SYSTEM "../common-xml/environment.xml">
]>

<defcomplib lib="libcgencpu.la" dlsym="cgen_component_library">
  <defcomponent name="hw-cpu-arm7t" type="concrete">

    &stdinterface;

    <!-- pins -->
    <defpin name="nreset" direction="in" legalvalues="0 or 1" behaviors="execution" />
    <defpin name="nm" direction="out" legalvalues="0 or 1" behaviors="register access" />
    <defpin name="tbit" direction="out" legalvalues="0 or 1" behaviors="register access" />
    <defpin name="nfiq" direction="in" legalvalues="0 or 1" behaviors="hardware interrupts" />
    <defpin name="nirq" direction="in" legalvalues="0 or 1" behaviors="hardware interrupts" />

    <!-- attributes -->
    <defattribute name="cpsr" category="watchable register" legalvalues="number" behaviors="register access" />
    <defattribute name="cpsr-flags" category="register" legalvalues="string" behaviors="register access" />
    <defattribute name="nm" category="watchable pin" legalvalues="number" behaviors="register access" />
    <defattribute name="tbit" category="watchable pin" legalvalues="number" behaviors="register access" />
    <defattribute name="nfiq" category="watchable pin" legalvalues="number" behaviors="hardware interrupts" />
    <defattribute name="nirq" category="watchable pin" legalvalues="number" behaviors="hardware interrupts" />
    <defattribute name="rN_fiq" category="watchable register" legalvalues="number" behaviors="register access" />
    <defattribute name="rN_svc" category="watchable register" legalvalues="number" behaviors="register access" />
    <defattribute name="rN_abt" category="watchable register" legalvalues="number" behaviors="register access" />
    <defattribute name="rN_irq" category="watchable register" legalvalues="number" behaviors="register access" />
    <defattribute name="rN_und" category="watchable register" legalvalues="number" behaviors="register access" />
    <defattribute name="spsr_fiq" category="watchable register" legalvalues="number" behaviors="register access" />
    <defattribute name="spsr_svc" category="watchable register" legalvalues="number" behaviors="register access" />
    <defattribute name="spsr_abt" category="watchable register" legalvalues="number" behaviors="register access" />
    <defattribute name="spsr_irq" category="watchable register" legalvalues="number" behaviors="register access" />
    <defattribute name="spsr_und" category="watchable register" legalvalues="number" behaviors="register access" />
  </defcomponent>
  <synop>
    <p>This component models the ARM7 Thumb processor.</p>
  </synop>
  <func>
    <modelling>
	<p>This component models a simplified ARM7 Thumb processor.  </p>
	<p>It does not model floating point instructions.</p>
	<p>It models supervisory functions such as exceptions/traps in
	  order to be able to run an operating system.</p>
    </modelling>
    &stdbehavior;

    <behavior name="hardware interrupts">
      <p>Hardware interrupts are signalled by driving the pins
      <pin>nfiq</pin> or <pin>nirq</pin> with a zero value.  Incoming
      interrupts are queued and are processed when the
      <pin>step!</pin> pin is next invoked.  Note that this may not be
      the next instruction if the
      <attribute>step-insn-count</attribute> attribute is greater than
      one. Also note that these pins are level sensitive, so interrupts
      will occur repeatedly until the pin is driven non-zero. They are
      'pulled' to one (high) at processor invocation and reset.</p>
    </behavior>


    <behavior name="register access">
      <p>All 16 general purpose registers are accessible as attribute
      <attribute>r0</attribute> through <attribute>r15</attribute>.
      <attribute>pc</attribute> is an alias of
      <attribute>r15</attribute>.  The CPSR register is accessible as
      <attribute>cpsr</attribute>, and also as
      <attribute>cpsr-flags</attribute> for a decoded textual form.
      The current endianness is available as attribute
      <attribute>endian</attribute>.  The current cpsr mode is
      available as attribute/pin <attribute>nm</attribute>.  The
      current thumb/arm bit is available as attribute/pin
      <attribute>tbit</attribute>.</p>

      <p>Banked registers (e.g. <attribute>r14_svc</attribute>,
      <attribute>spsr_und</attribute>) are also exposed as read/write
      attributes.</p>

    &debugregisters;
    </behavior>

  &stdconventions;
  </func>
  <env>
  &stdenvironment;
  </env>
  <refs>
  <p>ARM</p>
  <p>Arm Architecture Reference Manual, ARM DDI 0100B</p>
  </refs>

</defcomplib>



@


1.1
log
@* new XML documentation.
* ChangeLog entries to follow later.
@
text
@d59 3
a61 1
      one.</p>
@

