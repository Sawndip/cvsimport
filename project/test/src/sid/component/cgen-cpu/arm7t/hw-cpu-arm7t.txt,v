head	1.6;
access;
symbols
	sid-snapshot-20180601:1.6
	sid-snapshot-20180501:1.6
	sid-snapshot-20180401:1.6
	sid-snapshot-20180301:1.6
	sid-snapshot-20180201:1.6
	sid-snapshot-20180101:1.6
	sid-snapshot-20171201:1.6
	sid-snapshot-20171101:1.6
	sid-snapshot-20171001:1.6
	sid-snapshot-20170901:1.6
	sid-snapshot-20170801:1.6
	sid-snapshot-20170701:1.6
	sid-snapshot-20170601:1.6
	sid-snapshot-20170501:1.6
	sid-snapshot-20170401:1.6
	sid-snapshot-20170301:1.6
	sid-snapshot-20170201:1.6
	sid-snapshot-20170101:1.6
	sid-snapshot-20161201:1.6
	sid-snapshot-20161101:1.6
	sid-snapshot-20160901:1.6
	sid-snapshot-20160801:1.6
	sid-snapshot-20160701:1.6
	sid-snapshot-20160601:1.6
	sid-snapshot-20160501:1.6
	sid-snapshot-20160401:1.6
	sid-snapshot-20160301:1.6
	sid-snapshot-20160201:1.6
	sid-snapshot-20160101:1.6
	sid-snapshot-20151201:1.6
	sid-snapshot-20151101:1.6
	sid-snapshot-20151001:1.6
	sid-snapshot-20150901:1.6
	sid-snapshot-20150801:1.6
	sid-snapshot-20150701:1.6
	sid-snapshot-20150601:1.6
	sid-snapshot-20150501:1.6
	sid-snapshot-20150401:1.6
	sid-snapshot-20150301:1.6
	sid-snapshot-20150201:1.6
	sid-snapshot-20150101:1.6
	sid-snapshot-20141201:1.6
	sid-snapshot-20141101:1.6
	sid-snapshot-20141001:1.6
	sid-snapshot-20140901:1.6
	sid-snapshot-20140801:1.6
	sid-snapshot-20140701:1.6
	sid-snapshot-20140601:1.6
	sid-snapshot-20140501:1.6
	sid-snapshot-20140401:1.6
	sid-snapshot-20140301:1.6
	sid-snapshot-20140201:1.6
	sid-snapshot-20140101:1.6
	sid-snapshot-20131201:1.6
	sid-snapshot-20131101:1.6
	sid-snapshot-20131001:1.6
	sid-snapshot-20130901:1.6
	sid-snapshot-20130801:1.6
	sid-snapshot-20130701:1.6
	sid-snapshot-20130601:1.6
	sid-snapshot-20130501:1.6
	sid-snapshot-20130401:1.6
	sid-snapshot-20130301:1.6
	sid-snapshot-20130201:1.6
	sid-snapshot-20130101:1.6
	sid-snapshot-20121201:1.6
	sid-snapshot-20121101:1.6
	sid-snapshot-20121001:1.6
	sid-snapshot-20120901:1.6
	sid-snapshot-20120801:1.6
	sid-snapshot-20120701:1.6
	sid-snapshot-20120601:1.6
	sid-snapshot-20120501:1.6
	sid-snapshot-20120401:1.6
	sid-snapshot-20120301:1.6
	sid-snapshot-20120201:1.6
	sid-snapshot-20120101:1.6
	sid-snapshot-20111201:1.6
	sid-snapshot-20111101:1.6
	sid-snapshot-20111001:1.6
	sid-snapshot-20110901:1.6
	sid-snapshot-20110801:1.6
	sid-snapshot-20110701:1.6
	sid-snapshot-20110601:1.6
	sid-snapshot-20110501:1.6
	sid-snapshot-20110401:1.6
	sid-snapshot-20110301:1.6
	sid-snapshot-20110201:1.6
	sid-snapshot-20110101:1.6
	sid-snapshot-20101201:1.6
	sid-snapshot-20101101:1.6
	sid-snapshot-20101001:1.6
	sid-snapshot-20100901:1.6
	sid-snapshot-20100801:1.6
	sid-snapshot-20100701:1.6
	sid-snapshot-20100601:1.6
	sid-snapshot-20100501:1.6
	sid-snapshot-20100401:1.6
	sid-snapshot-20100301:1.6
	sid-snapshot-20100201:1.6
	sid-snapshot-20100101:1.6
	sid-snapshot-20091201:1.6
	sid-snapshot-20091101:1.6
	sid-snapshot-20091001:1.6
	sid-snapshot-20090901:1.6
	sid-snapshot-20090801:1.6
	sid-snapshot-20090701:1.6
	sid-snapshot-20090601:1.6
	sid-snapshot-20090501:1.6
	sid-snapshot-20090401:1.6
	sid-snapshot-20090301:1.6
	sid-snapshot-20090201:1.6
	sid-snapshot-20090101:1.6
	sid-snapshot-20081201:1.6
	sid-snapshot-20081101:1.6
	sid-snapshot-20081001:1.6
	sid-snapshot-20080901:1.6
	sid-snapshot-20080801:1.6
	sid-snapshot-20080701:1.6
	sid-snapshot-20080601:1.6
	sid-snapshot-20080501:1.6
	sid-snapshot-20080403:1.6
	sid-snapshot-20080401:1.6
	sid-snapshot-20080301:1.6
	sid-snapshot-20080201:1.6
	sid-snapshot-20080101:1.6
	sid-snapshot-20071201:1.6
	sid-snapshot-20071101:1.6
	sid-snapshot-20071001:1.6
	sid-20020905-branchpoint:1.4
	sid-20020905-branch:1.4.0.2
	cygnus_cvs_20020108_pre:1.3;
locks; strict;
comment	@# @;


1.6
date	2006.06.26.21.09.33;	author brolley;	state Exp;
branches;
next	1.5;

1.5
date	2004.08.04.15.42.00;	author fche;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.14.00.20.17;	author bje;	state Exp;
branches;
next	1.3;

1.3
date	2001.08.03.01.30.16;	author bje;	state Exp;
branches;
next	1.2;

1.2
date	2001.06.28.21.52.56;	author jjohnstn;	state Exp;
branches;
next	1.1;

1.1
date	2000.12.07.19.30.48;	author fche;	state Exp;
branches;
next	;


desc
@@


1.6
log
@2006-06-26  Dave Brolley  <brolley@@redhat.com>

        * arm7f.h (get_pc): New member of arm7f_cpu.
        * hw-cpu-arm7t.txt: Regenerated.
@
text
@             hw-cpu-arm7t (libcgencpu.la :: cgen_component_library)

Synopsis:

   This component models the ARM7 Thumb processor.

     ----------------------------------------------------------------------

Functionality:

  Modelling:

   This component models a simplified ARM7 Thumb processor.

   It does not model floating point instructions.

   It models supervisory functions such as exceptions/traps in order to be
   able to run an operating system.

   +---------------------------------------------------------+
   |                        Behaviors                        |
   |---------------------------------------------------------|
   |  initialization|The CPU performs a power-on-reset style |
   |                |of operation when the reset! pin is     |
   |                |driven.                                 |
   |                |                                        |
   |                |Other mode settings may be controlled by|
   |                |pins and/or attributes:                 |
   |                |endian-set!/endian to set endianness,   |
   |                |start-pc-set! to set the PC. These are  |
   |                |useful if the standard powerup state of |
   |                |the CPU needs to be changed for running |
   |                |a program that expects an initialized   |
   |                |environment.                            |
   |----------------+----------------------------------------|
   |       execution|The component executes zero or more     |
   |                |instructions when the step! pin is      |
   |                |driven. You can specify the maximum     |
   |                |number of instructions to be executed   |
   |                |via the step-insn-count attribute. If   |
   |                |the yield pin is driven in a reentrant  |
   |                |fashion while the instruction loop is   |
   |                |active, the loop will be exited at the  |
   |                |next opportunity. At the end of the     |
   |                |loop, the step-cycles output pin is     |
   |                |driven with the number of instructions  |
   |                |actually executed, though this value is |
   |                |clamped to be at least 1. The insn-count|
   |                |attribute accumulates the total number  |
   |                |of instructions executed since reset.   |
   |                |                                        |
   |                |Each instruction is first fetched from  |
   |                |memory via the insn-memory accessor, and|
   |                |its decoding traced if the              |
   |                |trace-extract? attribute is set to a    |
   |                |true value. To prevent unwanted cache   |
   |                |side effects, the disassembler-memory   |
   |                |accessor can be used and connected      |
   |                |directly to main memory, bypassing any  |
   |                |memory caches. The decoded form may be  |
   |                |cached indefinitely afterwards, although|
   |                |this cache is flushed when the          |
   |                |flush-icache pin is driven.             |
   |                |                                        |
   |                |The engine-type attribute specifies     |
   |                |whether the "scache" ("semantic cache") |
   |                |or "pbb" ("pseudo basic block")         |
   |                |dispatching mechanism is used during    |
   |                |execution. The "scache" mode executes   |
   |                |each instruction in isolation and checks|
   |                |all triggerpoints after each. If the    |
   |                |enable-step-trap? attribute is set,     |
   |                |after each instruction, a               |
   |                |single-stepping trap is signalled as    |
   |                |described in the exceptions/traps       |
   |                |behavior below.                         |
   |                |                                        |
   |                |The "pbb" mode executes a series of     |
   |                |sequential instructions in one          |
   |                |uninterruptible sequence, and is thus   |
   |                |faster. However, it cannot handle       |
   |                |triggerpoints or single-stepping, nor   |
   |                |can it respond to icache flushing as    |
   |                |quickly. The "pbb" mode is temporarily  |
   |                |and transparently downgraded to the     |
   |                |"scache" mode when needed.              |
   |                |                                        |
   |                |During the execution of an instruction, |
   |                |this component may make accesses using  |
   |                |the data-memory accessor, may update its|
   |                |simulated registers, and may trigger an |
   |                |exception/trap.                         |
   |----------------+----------------------------------------|
   |         tracing|The component can be configured to      |
   |                |perform certain kinds of tracing as     |
   |                |target programs execute. These are      |
   |                |controlled by the family of trace-*     |
   |                |boolean attributes. By default, trace   |
   |                |output is directed to the standard      |
   |                |output stream. The trace-filename       |
   |                |attribute allows the user to specify the|
   |                |name of a file where trace output will  |
   |                |be collected. A special filename of "-" |
   |                |is used to represent standard output.   |
   |                |Trace output files are not appended, but|
   |                |overwritten each time they are opened.  |
   |                |The print-insn-summary! pin can be      |
   |                |driven to print a summary of instruction|
   |                |and cycle counts, usually at the end of |
   |                |the simulation. The trace pin can be    |
   |                |driven with any value which will be     |
   |                |output as a character into the trace    |
   |                |stream.                                 |
   |----------------+----------------------------------------|
   |       profiling|The component can be configured to      |
   |                |provide samples for use by the          |
   |                |sw-profile-gprof component in creating a|
   |                |gmon output file. A sample is provided  |
   |                |each time the sample-gprof is driven.   |
   |                |Each time, before the sample-gprof is   |
   |                |driven, the gprof-pc and gprof-pc-hi    |
   |                |pins will be driven in order to provide |
   |                |the current program counter. gprof-pc   |
   |                |represents the low order 32 bits of the |
   |                |pc and gprof-pc-hi represents the high  |
   |                |order 32 bits of the pc (if any).       |
   |----------------+----------------------------------------|
   |exceptions/traps|When encountering exception/trap        |
   |                |conditions such as memory access errors |
   |                |or software interrupts, this component  |
   |                |signals the event using the trap pin.   |
   |                |(For some traps, the trap-code pin is   |
   |                |driven with extra information just      |
   |                |beforehand.) An external component may  |
   |                |interpret the values in the table below,|
   |                |and declare a disposition for the       |
   |                |condition. In the absence of input, the |
   |                |condition will be treated as the        |
   |                |hardware would, that is by dispatching  |
   |                |to exception vectors, switching         |
   |                |processor modes, etc.                   |
   |                |                                        |
   |                |The trap codes sent on the trap output  |
   |                |pin are:                                |
   |                |                                        |
   |                |+--------------------------------------+|
   |                || trap | cause           | trap-code   ||
   |                ||------+-----------------+-------------||
   |                || 1    | software trap   | instruction ||
   |                ||      |                 | bitmap      ||
   |                ||------+-----------------+-------------||
   |                || 2    | breakpoint      | bkpt number ||
   |                ||------+-----------------+-------------||
   |                || 3    | system call     | syscall     ||
   |                ||      |                 | number      ||
   |                ||------+-----------------+-------------||
   |                || 4    | invalid         | n/a         ||
   |                ||      | instruction     |             ||
   |                ||------+-----------------+-------------||
   |                || 5    | memory fault    | faulting    ||
   |                ||      |                 | address     ||
   |                ||------+-----------------+-------------||
   |                || 6    | arithmetic      | faulting    ||
   |                ||      | overflow        | address     ||
   |                ||------+-----------------+-------------||
   |                || 7    | stepped         | n/a         ||
   |                |+--------------------------------------+|
   |                |                                        |
   |                |The disposition codes returned on the   |
   |                |trap input pin are:                     |
   |                |                                        |
   |                |+--------------------------------------+|
   |                || trap     | effect                    ||
   |                ||----------+---------------------------||
   |                || 0 or n/a | dispatch as hardware      ||
   |                ||          | would                     ||
   |                ||----------+---------------------------||
   |                || 1        | handled; continue         ||
   |                ||----------+---------------------------||
   |                || 2        | reissue                   ||
   |                ||----------+---------------------------||
   |                || 3        | handled; skip instruction ||
   |                ||          | and continue              ||
   |                |+--------------------------------------+|
   |----------------+----------------------------------------|
   |        hardware|Hardware interrupts are signalled by    |
   |      interrupts|driving the pins nfiq or nirq with a    |
   |                |zero value. Incoming interrupts are     |
   |                |queued and are processed when the step! |
   |                |pin is next invoked. Note that this may |
   |                |not be the next instruction if the      |
   |                |step-insn-count attribute is greater    |
   |                |than one. Also note that these pins are |
   |                |level sensitive, so interrupts will     |
   |                |occur repeatedly until the pin is driven|
   |                |non-zero. They are 'pulled' to one      |
   |                |(high) at processor invocation and      |
   |                |reset.                                  |
   |----------------+----------------------------------------|
   | register access|All 16 general purpose registers are    |
   |                |accessible as attribute r0 through r15. |
   |                |pc is an alias of r15. The CPSR register|
   |                |is accessible as cpsr, and also as      |
   |                |cpsr-flags for a decoded textual form.  |
   |                |The current endianness is available as  |
   |                |attribute endian. The current cpsr mode |
   |                |is available as attribute/pin nm. The   |
   |                |current thumb/arm bit is available as   |
   |                |attribute/pin tbit.                     |
   |                |                                        |
   |                |Banked registers (e.g. r14_svc,         |
   |                |spsr_und) are also exposed as read/write|
   |                |attributes.                             |
   |                |                                        |
   |                |This component exports a number of      |
   |                |attributes for use by the sw-debug-gdb  |
   |                |component. These are the gdb-*          |
   |                |attributes, in the "debugger" category. |
   |                |The gdb-register-N group access all     |
   |                |registers in gdb's indexing scheme, in  |
   |                |raw target byte order. The              |
   |                |gdb-register-pc is a special watchable  |
   |                |value with no associated attribute. The |
   |                |gdb-num-registers attribute provides the|
   |                |limit for N. The gdb-exp-registers      |
   |                |attribute provides a semicolon-separated|
   |                |list of "expedited" register numbers.   |
   |                |                                        |
   |                |The debugger-bus bus provides access to |
   |                |the target program's address space, and |
   |                |is used by gdb to access target memory. |
   |                |                                        |
   |                |The gdb-breakpoint-big and              |
   |                |gdb-breakpoint-little attributes, if    |
   |                |present, are used as memory images of   |
   |                |software breakpoint instructions for the|
   |                |appropriate run-time endianness mode.   |
   +---------------------------------------------------------+

   +-------------------------------------------------+
   |                 SID Conventions                 |
   |-------------------------------------------------|
   |        functional | supported | -               |
   |-------------------+-----------+-----------------|
   |      save/restore | supported | -               |
   |-------------------+-----------+-----------------|
   |     triggerpoints | supported | Triggerpoints   |
   |                   |           | are supported   |
   |                   |           | for CPU         |
   |                   |           | registers.      |
   |-------------------+-----------+-----------------|
   | inhibit-recursion | supported | It prevents     |
   |                   |           | harmful         |
   |                   |           | recursion from  |
   |                   |           | the step! input |
   |                   |           | pin.            |
   +-------------------------------------------------+

     ----------------------------------------------------------------------

Environment:

   Related components:

   CPUs connect to many components: memory to store data and instructions, a
   scheduler to provide step! signals, software trap emulators, debugger
   interfaces. The step-cycles output pin may be used as a N-event-control
   input for a target scheduler to track an estimate of consumed target time.

   Host system:

   Some error conditions are signalled by messages to standard error. These
   include some illegal CPU states caused by the simulated program.

     ----------------------------------------------------------------------

Component Reference:

  Component: hw-cpu-arm7t

   +-------------------------------------------------------------------------+
   |                                  pins                                   |
   |-------------------------------------------------------------------------|
   |        name         | direction |    legalvalues     |    behaviors     |
   |---------------------+-----------+--------------------+------------------|
   |endian-set!          |in         |1 (big) / 2 (little)|initialization    |
   |---------------------+-----------+--------------------+------------------|
   |start-pc-set!        |in         |any value           |initialization    |
   |---------------------+-----------+--------------------+------------------|
   |reset!               |in         |0 or 1              |initialization    |
   |---------------------+-----------+--------------------+------------------|
   |trap                 |inout      |enum values         |exceptions/traps  |
   |---------------------+-----------+--------------------+------------------|
   |trap-code            |out        |various values      |exceptions/traps  |
   |---------------------+-----------+--------------------+------------------|
   |step-cycles          |out        |1..step-insn-count  |execution         |
   |---------------------+-----------+--------------------+------------------|
   |step!                |in         |any value           |execution         |
   |---------------------+-----------+--------------------+------------------|
   |yield                |in         |any                 |execution         |
   |---------------------+-----------+--------------------+------------------|
   |flush-icache         |in         |any                 |execution         |
   |---------------------+-----------+--------------------+------------------|
   |print-insn-summary!  |in         |any                 |tracing           |
   |---------------------+-----------+--------------------+------------------|
   |trace                |in         |any                 |tracing           |
   |---------------------+-----------+--------------------+------------------|
   |gprof-pc             |out        |integer             |profiling         |
   |---------------------+-----------+--------------------+------------------|
   |gprof-pc-hi          |out        |integer             |profiling         |
   |---------------------+-----------+--------------------+------------------|
   |sample-gprof         |out        |positive integer    |profiling         |
   |---------------------+-----------+--------------------+------------------|
   |nreset               |in         |0 or 1              |execution         |
   |---------------------+-----------+--------------------+------------------|
   |nm                   |out        |0 or 1              |register access   |
   |---------------------+-----------+--------------------+------------------|
   |tbit                 |out        |0 or 1              |register access   |
   |---------------------+-----------+--------------------+------------------|
   |nfiq                 |in         |0 or 1              |hardware          |
   |                     |           |                    |interrupts        |
   |---------------------+-----------+--------------------+------------------|
   |nirq                 |in         |0 or 1              |hardware          |
   |                     |           |                    |interrupts        |
   +-------------------------------------------------------------------------+

   +-------------------------------------------------+
   |                      buses                      |
   |-------------------------------------------------|
   |     name     | addresses | accesses | behaviors |
   |--------------+-----------+----------+-----------|
   | debugger-bus | any       | any      | debugger  |
   |              |           |          | access    |
   +-------------------------------------------------+

+-----------------------------------------------------------------------------------------+
|                                       attributes                                        |
|-----------------------------------------------------------------------------------------|
|        name         |category |     legal values     |default|        behaviors        ||
|                     |         |                      | value |                         ||
|---------------------+---------+----------------------+-------+-------------------------||
|endian               |register |'1'/'big'/'2'/'little'|big    |initialization, register ||
|                     |         |                      |       |access                   ||
|---------------------+---------+----------------------+-------+-------------------------||
|trace-extract?       |setting  |boolean               |false  |tracing                  ||
|---------------------+---------+----------------------+-------+-------------------------||
|trace-filename       |setting  |string                |-      |tracing                  ||
|---------------------+---------+----------------------+-------+-------------------------||
|trace-result?        |setting  |boolean               |false  |tracing                  ||
|---------------------+---------+----------------------+-------+-------------------------||
|trace-counter?       |setting  |boolean               |false  |tracing                  ||
|---------------------+---------+----------------------+-------+-------------------------||
|final-insn-count?    |setting  |boolean               |false  |tracing                  ||
|---------------------+---------+----------------------+-------+-------------------------||
|engine-type          |setting  |scache or pbb         |pbb    |execution                ||
|---------------------+---------+----------------------+-------+-------------------------||
|insn-count           |watchable|number                |-      |execution                ||
|                     |register |                      |       |                         ||
|---------------------+---------+----------------------+-------+-------------------------||
|step-insn-count      |setting  |number                |1      |execution                ||
|---------------------+---------+----------------------+-------+-------------------------||
|enable-step-trap?    |setting  |boolean               |false  |execution                ||
|---------------------+---------+----------------------+-------+-------------------------||
|rN                   |watchable|number                |-      |register access          ||
|                     |register |                      |       |                         ||
|---------------------+---------+----------------------+-------+-------------------------||
|pc                   |watchable|number                |-      |register access          ||
|                     |register |                      |       |                         ||
|---------------------+---------+----------------------+-------+-------------------------||
|gdb-register-N       |debugger |byte array            |-      |register access          ||
|---------------------+---------+----------------------+-------+-------------------------||
|gdb-num-registers    |debugger |number                |-      |register access          ||
|---------------------+---------+----------------------+-------+-------------------------||
|gdb-exp-registers    |debugger |number list           |-      |register access          ||
|---------------------+---------+----------------------+-------+-------------------------||
|gdb-breakpoint-big   |debugger |byte array            |-      |register access          ||
|---------------------+---------+----------------------+-------+-------------------------||
|gdb-breakpoint-little|debugger |byte array            |-      |register access          ||
|---------------------+---------+----------------------+-------+-------------------------||
|state-snapshot       |-        |opaque string         |-      |state save/restore       ||
|---------------------+---------+----------------------+-------+-------------------------||
|step-cycles          |watchable|number                |-      |execution                ||
|                     |pin      |                      |       |                         ||
|---------------------+---------+----------------------+-------+-------------------------||
|trap                 |watchable|number                |-      |execution/traps          ||
|                     |pin      |                      |       |                         ||
|---------------------+---------+----------------------+-------+-------------------------||
|trap-code            |watchable|number                |-      |execution/traps          ||
|                     |pin      |                      |       |                         ||
|---------------------+---------+----------------------+-------+-------------------------||
|cpsr                 |watchable|number                |-      |register access          ||
|                     |register |                      |       |                         ||
|---------------------+---------+----------------------+-------+-------------------------||
|cpsr-flags           |register |string                |-      |register access          ||
|---------------------+---------+----------------------+-------+-------------------------||
|nm                   |watchable|number                |-      |register access          ||
|                     |pin      |                      |       |                         ||
|---------------------+---------+----------------------+-------+-------------------------||
|tbit                 |watchable|number                |-      |register access          ||
|                     |pin      |                      |       |                         ||
|---------------------+---------+----------------------+-------+-------------------------||
|nfiq                 |watchable|number                |-      |hardware interrupts      ||
|                     |pin      |                      |       |                         ||
|---------------------+---------+----------------------+-------+-------------------------||
|nirq                 |watchable|number                |-      |hardware interrupts      ||
|                     |pin      |                      |       |                         ||
|---------------------+---------+----------------------+-------+-------------------------||
|rN_fiq               |watchable|number                |-      |register access          ||
|                     |register |                      |       |                         ||
|---------------------+---------+----------------------+-------+-------------------------||
|rN_svc               |watchable|number                |-      |register access          ||
|                     |register |                      |       |                         ||
|---------------------+---------+----------------------+-------+-------------------------||
|rN_abt               |watchable|number                |-      |register access          ||
|                     |register |                      |       |                         ||
|---------------------+---------+----------------------+-------+-------------------------||
|rN_irq               |watchable|number                |-      |register access          ||
|                     |register |                      |       |                         ||
|---------------------+---------+----------------------+-------+-------------------------||
|rN_und               |watchable|number                |-      |register access          ||
|                     |register |                      |       |                         ||
|---------------------+---------+----------------------+-------+-------------------------||
|spsr_fiq             |watchable|number                |-      |register access          ||
|                     |register |                      |       |                         ||
|---------------------+---------+----------------------+-------+-------------------------||
|spsr_svc             |watchable|number                |-      |register access          ||
|                     |register |                      |       |                         ||
|---------------------+---------+----------------------+-------+-------------------------||
|spsr_abt             |watchable|number                |-      |register access          ||
|                     |register |                      |       |                         ||
|---------------------+---------+----------------------+-------+-------------------------||
|spsr_irq             |watchable|number                |-      |register access          ||
|                     |register |                      |       |                         ||
|---------------------+---------+----------------------+-------+-------------------------||
|spsr_und             |watchable|number                |-      |register access          ||
|                     |register |                      |       |                         ||
+-----------------------------------------------------------------------------------------+

   +-------------------------------------------------+
   |                    accessors                    |
   |-------------------------------------------------|
   |        name         |   accesses    | behaviors |
   |---------------------+---------------+-----------|
   | data-memory         | any           | execution |
   |---------------------+---------------+-----------|
   |                     | typically     |           |
   | insn-memory         | 4-byte        | execution |
   |                     | accesses      |           |
   |---------------------+---------------+-----------|
   | disassembler-memory | any           | execution |
   +-------------------------------------------------+

     ----------------------------------------------------------------------

References:

   ARM

   Arm Architecture Reference Manual, ARM DDI 0100B
@


1.5
log
@2004-08-04  Robert Shideleff <bigbob@@shideleff.com>

	* arm7f.cxx (arm7f_cpu): Change nfiq_pin and nirq_pin to normal
	input pins.  Remove handler callbacks.
	(arm7f_cpu ctor, reset): Initialize them high.
	(step_insns): Handle their proper level sensitivity.
	(step_arm, step_thumb, step_arm_pbb, step_thumb_pbb): Remove
	previous incorrect support.
	* arm7f.h: Corresponding changes.
	* hw-cpu-arm7t.xml: Note level sensitivity.
	* hw-cpu-arm7t.txt: Regenerated.
@
text
@d20 219
a238 223
   +-----------------------------------------------------+
   |                      Behaviors                      |
   |-----------------------------------------------------|
   |  initialization|The CPU performs a power-on-reset   |
   |                |style of operation when the reset!  |
   |                |pin is driven.                      |
   |                |                                    |
   |                |Other mode settings may be          |
   |                |controlled by pins and/or           |
   |                |attributes: endian-set!/endian to   |
   |                |set endianness, start-pc-set! to set|
   |                |the PC. These are useful if the     |
   |                |standard powerup state of the CPU   |
   |                |needs to be changed for running a   |
   |                |program that expects an initialized |
   |                |environment.                        |
   |----------------+------------------------------------|
   |       execution|The component executes zero or more |
   |                |instructions when the step! pin is  |
   |                |driven. You can specify the maximum |
   |                |number of instructions to be        |
   |                |executed via the step-insn-count    |
   |                |attribute. If the yield pin is      |
   |                |driven in a reentrant fashion while |
   |                |the instruction loop is active, the |
   |                |loop will be exited at the next     |
   |                |opportunity. At the end of the loop,|
   |                |the step-cycles output pin is driven|
   |                |with the number of instructions     |
   |                |actually executed, though this value|
   |                |is clamped to be at least 1. The    |
   |                |insn-count attribute accumulates the|
   |                |total number of instructions        |
   |                |executed since reset.               |
   |                |                                    |
   |                |Each instruction is first fetched   |
   |                |from memory via the insn-memory     |
   |                |accessor, and its decoding traced if|
   |                |the trace-extract? attribute is set |
   |                |to a true value. To prevent unwanted|
   |                |cache side effects, the             |
   |                |disassembler-memory accessor can be |
   |                |used and connected directly to main |
   |                |memory, bypassing any memory caches.|
   |                |The decoded form may be cached      |
   |                |indefinitely afterwards, although   |
   |                |this cache is flushed when the      |
   |                |flush-icache pin is driven.         |
   |                |                                    |
   |                |The engine-type attribute specifies |
   |                |whether the "scache" ("semantic     |
   |                |cache") or "pbb" ("pseudo basic     |
   |                |block") dispatching mechanism is    |
   |                |used during execution. The "scache" |
   |                |mode executes each instruction in   |
   |                |isolation and checks all            |
   |                |triggerpoints after each. If the    |
   |                |enable-step-trap? attribute is set, |
   |                |after each instruction, a           |
   |                |single-stepping trap is signalled as|
   |                |described in the exceptions/traps   |
   |                |behavior below.                     |
   |                |                                    |
   |                |The "pbb" mode executes a series of |
   |                |sequential instructions in one      |
   |                |uninterruptible sequence, and is    |
   |                |thus faster. However, it cannot     |
   |                |handle triggerpoints or             |
   |                |single-stepping, nor can it respond |
   |                |to icache flushing as quickly. The  |
   |                |"pbb" mode is temporarily and       |
   |                |transparently downgraded to the     |
   |                |"scache" mode when needed.          |
   |                |                                    |
   |                |During the execution of an          |
   |                |instruction, this component may make|
   |                |accesses using the data-memory      |
   |                |accessor, may update its simulated  |
   |                |registers, and may trigger an       |
   |                |exception/trap.                     |
   |----------------+------------------------------------|
   |         tracing|The component can be configured to  |
   |                |perform certain kinds of tracing as |
   |                |target programs execute. These are  |
   |                |controlled by the family of trace-* |
   |                |boolean attributes. By default,     |
   |                |trace output is directed to the     |
   |                |standard output stream. The         |
   |                |trace-filename attribute allows the |
   |                |user to specify the name of a file  |
   |                |where trace output will be          |
   |                |collected. A special filename of "-"|
   |                |is used to represent standard       |
   |                |output. Trace output files are not  |
   |                |appended, but overwritten each time |
   |                |they are opened. The                |
   |                |print-insn-summary! pin can be      |
   |                |driven to print a summary of        |
   |                |instruction and cycle counts,       |
   |                |usually at the end of the           |
   |                |simulation. The trace pin can be    |
   |                |driven with any value which will be |
   |                |output as a character into the trace|
   |                |stream.                             |
   |----------------+------------------------------------|
   |exceptions/traps|When encountering exception/trap    |
   |                |conditions such as memory access    |
   |                |errors or software interrupts, this |
   |                |component signals the event using   |
   |                |the trap pin. (For some traps, the  |
   |                |trap-code pin is driven with extra  |
   |                |information just beforehand.) An    |
   |                |external component may interpret the|
   |                |values in the table below, and      |
   |                |declare a disposition for the       |
   |                |condition. In the absence of input, |
   |                |the condition will be treated as the|
   |                |hardware would, that is by          |
   |                |dispatching to exception vectors,   |
   |                |switching processor modes, etc.     |
   |                |                                    |
   |                |The trap codes sent on the trap     |
   |                |output pin are:                     |
   |                |                                    |
   |                |+----------------------------------+|
   |                || trap | cause       | trap-code   ||
   |                ||------+-------------+-------------||
   |                || 1    | software    | instruction ||
   |                ||      | trap        | bitmap      ||
   |                ||------+-------------+-------------||
   |                || 2    | breakpoint  | bkpt number ||
   |                ||------+-------------+-------------||
   |                || 3    | system call | syscall     ||
   |                ||      |             | number      ||
   |                ||------+-------------+-------------||
   |                || 4    | invalid     | n/a         ||
   |                ||      | instruction |             ||
   |                ||------+-------------+-------------||
   |                || 5    | memory      | faulting    ||
   |                ||      | fault       | address     ||
   |                ||------+-------------+-------------||
   |                || 6    | arithmetic  | faulting    ||
   |                ||      | overflow    | address     ||
   |                ||------+-------------+-------------||
   |                || 7    | stepped     | n/a         ||
   |                |+----------------------------------+|
   |                |                                    |
   |                |The disposition codes returned on   |
   |                |the trap input pin are:             |
   |                |                                    |
   |                |+----------------------------------+|
   |                || trap     | effect                ||
   |                ||----------+-----------------------||
   |                || 0 or n/a | dispatch as hardware  ||
   |                ||          | would                 ||
   |                ||----------+-----------------------||
   |                || 1        | handled; continue     ||
   |                ||----------+-----------------------||
   |                || 2        | reissue               ||
   |                ||----------+-----------------------||
   |                ||          | handled; skip         ||
   |                || 3        | instruction and       ||
   |                ||          | continue              ||
   |                |+----------------------------------+|
   |----------------+------------------------------------|
   |        hardware|Hardware interrupts are signalled by|
   |      interrupts|driving the pins nfiq or nirq with a|
   |                |zero value. Incoming interrupts are |
   |                |queued and are processed when the   |
   |                |step! pin is next invoked. Note that|
   |                |this may not be the next instruction|
   |                |if the step-insn-count attribute is |
   |                |greater than one. Also note that    |
   |                |these pins are level sensitive, so  |
   |                |interrupts will occur repeatedly    |
   |                |until the pin is driven non-zero.   |
   |                |They are 'pulled' to one (high) at  |
   |                |processor invocation and reset.     |
   |----------------+------------------------------------|
   | register access|All 16 general purpose registers are|
   |                |accessible as attribute r0 through  |
   |                |r15. pc is an alias of r15. The CPSR|
   |                |register is accessible as cpsr, and |
   |                |also as cpsr-flags for a decoded    |
   |                |textual form. The current endianness|
   |                |is available as attribute endian.   |
   |                |The current cpsr mode is available  |
   |                |as attribute/pin nm. The current    |
   |                |thumb/arm bit is available as       |
   |                |attribute/pin tbit.                 |
   |                |                                    |
   |                |Banked registers (e.g. r14_svc,     |
   |                |spsr_und) are also exposed as       |
   |                |read/write attributes.              |
   |                |                                    |
   |                |This component exports a number of  |
   |                |attributes for use by the           |
   |                |sw-debug-gdb component. These are   |
   |                |the gdb-* attributes, in the        |
   |                |"debugger" category. The            |
   |                |gdb-register-N group access all     |
   |                |registers in gdb's indexing scheme, |
   |                |in raw target byte order. The       |
   |                |gdb-register-pc is a special        |
   |                |watchable value with no associated  |
   |                |attribute. The gdb-num-registers    |
   |                |attribute provides the limit for N. |
   |                |The gdb-exp-registers attribute     |
   |                |provides a semicolon-separated list |
   |                |of "expedited" register numbers.    |
   |                |                                    |
   |                |The debugger-bus bus provides access|
   |                |to the target program's address     |
   |                |space, and is used by gdb to access |
   |                |target memory.                      |
   |                |                                    |
   |                |The gdb-breakpoint-big and          |
   |                |gdb-breakpoint-little attributes, if|
   |                |present, are used as memory images  |
   |                |of software breakpoint instructions |
   |                |for the appropriate run-time        |
   |                |endianness mode.                    |
   +-----------------------------------------------------+
d281 45
a325 40
   +-----------------------------------------------------------------+
   |                              pins                               |
   |-----------------------------------------------------------------|
   |       name        |direction|   legalvalues    |   behaviors    |
   |-------------------+---------+------------------+----------------|
   |endian-set!        |in       |1 (big) / 2       |initialization  |
   |                   |         |(little)          |                |
   |-------------------+---------+------------------+----------------|
   |start-pc-set!      |in       |any value         |initialization  |
   |-------------------+---------+------------------+----------------|
   |reset!             |in       |0 or 1            |initialization  |
   |-------------------+---------+------------------+----------------|
   |trap               |inout    |enum values       |exceptions/traps|
   |-------------------+---------+------------------+----------------|
   |trap-code          |out      |various values    |exceptions/traps|
   |-------------------+---------+------------------+----------------|
   |step-cycles        |out      |1..step-insn-count|execution       |
   |-------------------+---------+------------------+----------------|
   |step!              |in       |any value         |execution       |
   |-------------------+---------+------------------+----------------|
   |yield              |in       |any               |execution       |
   |-------------------+---------+------------------+----------------|
   |flush-icache       |in       |any               |execution       |
   |-------------------+---------+------------------+----------------|
   |print-insn-summary!|in       |any               |tracing         |
   |-------------------+---------+------------------+----------------|
   |trace              |in       |any               |tracing         |
   |-------------------+---------+------------------+----------------|
   |nreset             |in       |0 or 1            |execution       |
   |-------------------+---------+------------------+----------------|
   |nm                 |out      |0 or 1            |register access |
   |-------------------+---------+------------------+----------------|
   |tbit               |out      |0 or 1            |register access |
   |-------------------+---------+------------------+----------------|
   |nfiq               |in       |0 or 1            |hardware        |
   |                   |         |                  |interrupts      |
   |-------------------+---------+------------------+----------------|
   |nirq               |in       |0 or 1            |hardware        |
   |                   |         |                  |interrupts      |
   +-----------------------------------------------------------------+
d336 102
a437 103
+-------------------------------------------------------------------------------+
|                                  attributes                                   |
|-------------------------------------------------------------------------------|
|        name         |category |     legal values     |default|   behaviors   ||
|                     |         |                      | value |               ||
|---------------------+---------+----------------------+-------+---------------||
|endian               |register |'1'/'big'/'2'/'little'|big    |initialization,||
|                     |         |                      |       |register access||
|---------------------+---------+----------------------+-------+---------------||
|trace-extract?       |setting  |boolean               |false  |tracing        ||
|---------------------+---------+----------------------+-------+---------------||
|trace-filename       |setting  |string                |-      |tracing        ||
|---------------------+---------+----------------------+-------+---------------||
|trace-result?        |setting  |boolean               |false  |tracing        ||
|---------------------+---------+----------------------+-------+---------------||
|trace-counter?       |setting  |boolean               |false  |tracing        ||
|---------------------+---------+----------------------+-------+---------------||
|final-insn-count?    |setting  |boolean               |false  |tracing        ||
|---------------------+---------+----------------------+-------+---------------||
|engine-type          |setting  |scache or pbb         |pbb    |execution      ||
|---------------------+---------+----------------------+-------+---------------||
|insn-count           |watchable|number                |-      |execution      ||
|                     |register |                      |       |               ||
|---------------------+---------+----------------------+-------+---------------||
|step-insn-count      |setting  |number                |1      |execution      ||
|---------------------+---------+----------------------+-------+---------------||
|enable-step-trap?    |setting  |boolean               |false  |execution      ||
|---------------------+---------+----------------------+-------+---------------||
|rN                   |watchable|number                |-      |register access||
|                     |register |                      |       |               ||
|---------------------+---------+----------------------+-------+---------------||
|pc                   |watchable|number                |-      |register access||
|                     |register |                      |       |               ||
|---------------------+---------+----------------------+-------+---------------||
|gdb-register-N       |debugger |byte array            |-      |register access||
|---------------------+---------+----------------------+-------+---------------||
|gdb-num-registers    |debugger |number                |-      |register access||
|---------------------+---------+----------------------+-------+---------------||
|gdb-exp-registers    |debugger |number list           |-      |register access||
|---------------------+---------+----------------------+-------+---------------||
|gdb-breakpoint-big   |debugger |byte array            |-      |register access||
|---------------------+---------+----------------------+-------+---------------||
|gdb-breakpoint-little|debugger |byte array            |-      |register access||
|---------------------+---------+----------------------+-------+---------------||
|state-snapshot       |-        |opaque string         |-      |state          ||
|                     |         |                      |       |save/restore   ||
|---------------------+---------+----------------------+-------+---------------||
|step-cycles          |watchable|number                |-      |execution      ||
|                     |pin      |                      |       |               ||
|---------------------+---------+----------------------+-------+---------------||
|trap                 |watchable|number                |-      |execution/traps||
|                     |pin      |                      |       |               ||
|---------------------+---------+----------------------+-------+---------------||
|trap-code            |watchable|number                |-      |execution/traps||
|                     |pin      |                      |       |               ||
|---------------------+---------+----------------------+-------+---------------||
|cpsr                 |watchable|number                |-      |register access||
|                     |register |                      |       |               ||
|---------------------+---------+----------------------+-------+---------------||
|cpsr-flags           |register |string                |-      |register access||
|---------------------+---------+----------------------+-------+---------------||
|nm                   |watchable|number                |-      |register access||
|                     |pin      |                      |       |               ||
|---------------------+---------+----------------------+-------+---------------||
|tbit                 |watchable|number                |-      |register access||
|                     |pin      |                      |       |               ||
|---------------------+---------+----------------------+-------+---------------||
|nfiq                 |watchable|number                |-      |hardware       ||
|                     |pin      |                      |       |interrupts     ||
|---------------------+---------+----------------------+-------+---------------||
|nirq                 |watchable|number                |-      |hardware       ||
|                     |pin      |                      |       |interrupts     ||
|---------------------+---------+----------------------+-------+---------------||
|rN_fiq               |watchable|number                |-      |register access||
|                     |register |                      |       |               ||
|---------------------+---------+----------------------+-------+---------------||
|rN_svc               |watchable|number                |-      |register access||
|                     |register |                      |       |               ||
|---------------------+---------+----------------------+-------+---------------||
|rN_abt               |watchable|number                |-      |register access||
|                     |register |                      |       |               ||
|---------------------+---------+----------------------+-------+---------------||
|rN_irq               |watchable|number                |-      |register access||
|                     |register |                      |       |               ||
|---------------------+---------+----------------------+-------+---------------||
|rN_und               |watchable|number                |-      |register access||
|                     |register |                      |       |               ||
|---------------------+---------+----------------------+-------+---------------||
|spsr_fiq             |watchable|number                |-      |register access||
|                     |register |                      |       |               ||
|---------------------+---------+----------------------+-------+---------------||
|spsr_svc             |watchable|number                |-      |register access||
|                     |register |                      |       |               ||
|---------------------+---------+----------------------+-------+---------------||
|spsr_abt             |watchable|number                |-      |register access||
|                     |register |                      |       |               ||
|---------------------+---------+----------------------+-------+---------------||
|spsr_irq             |watchable|number                |-      |register access||
|                     |register |                      |       |               ||
|---------------------+---------+----------------------+-------+---------------||
|spsr_und             |watchable|number                |-      |register access||
|                     |register |                      |       |               ||
+-------------------------------------------------------------------------------+
@


1.4
log
@* regenerate with recent common-xml additions.
@
text
@d59 9
a67 5
   |                |to a true value. The decoded form   |
   |                |may be cached indefinitely          |
   |                |afterwards, although this cache is  |
   |                |flushed when the flush-icache pin is|
   |                |driven.                             |
d115 9
a123 1
   |                |they are opened.                    |
d192 6
a197 1
   |                |greater than one.                   |
d235 7
d285 40
a324 36
   +-----------------------------------------------------------+
   |                           pins                            |
   |-----------------------------------------------------------|
   |    name     |direction|   legalvalues    |   behaviors    |
   |-------------+---------+------------------+----------------|
   |endian-set!  |in       |1 (big) / 2       |initialization  |
   |             |         |(little)          |                |
   |-------------+---------+------------------+----------------|
   |start-pc-set!|in       |any value         |initialization  |
   |-------------+---------+------------------+----------------|
   |reset!       |in       |0 or 1            |initialization  |
   |-------------+---------+------------------+----------------|
   |trap         |inout    |enum values       |exceptions/traps|
   |-------------+---------+------------------+----------------|
   |trap-code    |out      |various values    |exceptions/traps|
   |-------------+---------+------------------+----------------|
   |step-cycles  |out      |1..step-insn-count|execution       |
   |-------------+---------+------------------+----------------|
   |step!        |in       |any value         |execution       |
   |-------------+---------+------------------+----------------|
   |yield        |in       |any               |execution       |
   |-------------+---------+------------------+----------------|
   |flush-icache |in       |any               |execution       |
   |-------------+---------+------------------+----------------|
   |nreset       |in       |0 or 1            |execution       |
   |-------------+---------+------------------+----------------|
   |nm           |out      |0 or 1            |register access |
   |-------------+---------+------------------+----------------|
   |tbit         |out      |0 or 1            |register access |
   |-------------+---------+------------------+----------------|
   |nfiq         |in       |0 or 1            |hardware        |
   |             |         |                  |interrupts      |
   |-------------+---------+------------------+----------------|
   |nirq         |in       |0 or 1            |hardware        |
   |             |         |                  |interrupts      |
   +-----------------------------------------------------------+
d335 103
a437 95
   +---------------------------------------------------------------------------+
   |                                attributes                                 |
   |---------------------------------------------------------------------------|
   |      name       |category |     legal values     |default|   behaviors   ||
   |                 |         |                      | value |               ||
   |-----------------+---------+----------------------+-------+---------------||
   |endian           |register |'1'/'big'/'2'/'little'|big    |initialization,||
   |                 |         |                      |       |register access||
   |-----------------+---------+----------------------+-------+---------------||
   |trace-extract?   |setting  |boolean               |false  |tracing        ||
   |-----------------+---------+----------------------+-------+---------------||
   |trace-filename   |setting  |string                |-      |tracing        ||
   |-----------------+---------+----------------------+-------+---------------||
   |trace-result?    |setting  |boolean               |false  |tracing        ||
   |-----------------+---------+----------------------+-------+---------------||
   |engine-type      |setting  |scache or pbb         |pbb    |execution      ||
   |-----------------+---------+----------------------+-------+---------------||
   |insn-count       |watchable|number                |-      |execution      ||
   |                 |register |                      |       |               ||
   |-----------------+---------+----------------------+-------+---------------||
   |step-insn-count  |setting  |number                |1      |execution      ||
   |-----------------+---------+----------------------+-------+---------------||
   |enable-step-trap?|setting  |boolean               |false  |execution      ||
   |-----------------+---------+----------------------+-------+---------------||
   |rN               |watchable|number                |-      |register access||
   |                 |register |                      |       |               ||
   |-----------------+---------+----------------------+-------+---------------||
   |pc               |watchable|number                |-      |register access||
   |                 |register |                      |       |               ||
   |-----------------+---------+----------------------+-------+---------------||
   |gdb-register-N   |debugger |byte array            |-      |register access||
   |-----------------+---------+----------------------+-------+---------------||
   |gdb-num-registers|debugger |number                |-      |register access||
   |-----------------+---------+----------------------+-------+---------------||
   |gdb-exp-registers|debugger |number list           |-      |register access||
   |-----------------+---------+----------------------+-------+---------------||
   |state-snapshot   |-        |opaque string         |-      |state          ||
   |                 |         |                      |       |save/restore   ||
   |-----------------+---------+----------------------+-------+---------------||
   |step-cycles      |watchable|number                |-      |execution      ||
   |                 |pin      |                      |       |               ||
   |-----------------+---------+----------------------+-------+---------------||
   |trap             |watchable|number                |-      |execution/traps||
   |                 |pin      |                      |       |               ||
   |-----------------+---------+----------------------+-------+---------------||
   |trap-code        |watchable|number                |-      |execution/traps||
   |                 |pin      |                      |       |               ||
   |-----------------+---------+----------------------+-------+---------------||
   |cpsr             |watchable|number                |-      |register access||
   |                 |register |                      |       |               ||
   |-----------------+---------+----------------------+-------+---------------||
   |cpsr-flags       |register |string                |-      |register access||
   |-----------------+---------+----------------------+-------+---------------||
   |nm               |watchable|number                |-      |register access||
   |                 |pin      |                      |       |               ||
   |-----------------+---------+----------------------+-------+---------------||
   |tbit             |watchable|number                |-      |register access||
   |                 |pin      |                      |       |               ||
   |-----------------+---------+----------------------+-------+---------------||
   |nfiq             |watchable|number                |-      |hardware       ||
   |                 |pin      |                      |       |interrupts     ||
   |-----------------+---------+----------------------+-------+---------------||
   |nirq             |watchable|number                |-      |hardware       ||
   |                 |pin      |                      |       |interrupts     ||
   |-----------------+---------+----------------------+-------+---------------||
   |rN_fiq           |watchable|number                |-      |register access||
   |                 |register |                      |       |               ||
   |-----------------+---------+----------------------+-------+---------------||
   |rN_svc           |watchable|number                |-      |register access||
   |                 |register |                      |       |               ||
   |-----------------+---------+----------------------+-------+---------------||
   |rN_abt           |watchable|number                |-      |register access||
   |                 |register |                      |       |               ||
   |-----------------+---------+----------------------+-------+---------------||
   |rN_irq           |watchable|number                |-      |register access||
   |                 |register |                      |       |               ||
   |-----------------+---------+----------------------+-------+---------------||
   |rN_und           |watchable|number                |-      |register access||
   |                 |register |                      |       |               ||
   |-----------------+---------+----------------------+-------+---------------||
   |spsr_fiq         |watchable|number                |-      |register access||
   |                 |register |                      |       |               ||
   |-----------------+---------+----------------------+-------+---------------||
   |spsr_svc         |watchable|number                |-      |register access||
   |                 |register |                      |       |               ||
   |-----------------+---------+----------------------+-------+---------------||
   |spsr_abt         |watchable|number                |-      |register access||
   |                 |register |                      |       |               ||
   |-----------------+---------+----------------------+-------+---------------||
   |spsr_irq         |watchable|number                |-      |register access||
   |                 |register |                      |       |               ||
   |-----------------+---------+----------------------+-------+---------------||
   |spsr_und         |watchable|number                |-      |register access||
   |                 |register |                      |       |               ||
   +---------------------------------------------------------------------------+
d442 9
a450 6
   |    name     |       accesses        | behaviors |
   |-------------+-----------------------+-----------|
   | data-memory | any                   | execution |
   |-------------+-----------------------+-----------|
   | insn-memory | typically 4-byte      | execution |
   |             | accesses              |           |
@


1.3
log
@* Freshly generated documentation.
* ChangeLog entries to follow later.
@
text
@d97 16
d316 3
a318 1
   |trace-extract?   |setting  |boolean               |false  |initialization ||
d320 1
a320 1
   |trace-result?    |setting  |boolean               |false  |initialization ||
@


1.2
log
@
2001-06-28  Jeff Johnston  <jjohnstn@@redhat.com>

        * arm7f.cxx (arm7f_cpu::memory_trap): Remove code under now
        non-existent debug_exec_p flag.
        (arm7f_cpu::arm_tbit_set): Change reference to debug_exec_p to
        use new warnings_enabled flag.
        * hw-cpu-arm7t.txt: Change all debug-exec? references to
        enable-warnings?.
@
text
@d1 1
a1 2
* Name
  hw-cpu-arm7t
d3 1
a3 2
* Synopsis
  This component models the ARM7 Thumb processor.
d5 1
a5 224
  Buses: debugger-bus 
  Pins: start-pc-set! endian-set!  reset!  nreset trap trap-code step!
        nm tbit nfiq nirq yield flush-icache step-cycles
  Accessors: data-memory insn-memory
  Attributes: enable-warnings? trace-extract?  trace-result?  engine-type
        insn-count step-insn-count enable-step-trap?  endian r0 r1 r2 r3 r4 r5 r6 r7 r8 r9
	r10 r11 r12 r13 r14 r15  pc cpsr cpsr-flags
        gdb-register-N gdb-num-registers gdb-exp-registers
	yield nm step-cycles tbit nfiq nirq state-snapshot
	r8_fiq r9_fiq r10_fiq r11_fiq r12_fiq r13_fiq r13_svc r13_abt r13_irq r13_und
	r14_fiq r14_svc r14_abt r14_irq r14_und spsr_fiq spsr_svc spsr_abt spsr_irq spsr_und

  Library: libcgencpu.la
  Symbol name: cgen_component_library

* Functionality

  - Modelling

    * This component models a simplified ARM7 Thumb processor.  
    * It does not model floating point instructions.
    * It models supervisory functions such as exceptions/traps in
      order to be able to run an operating system.

  - Behaviors

    * Initialization

      The CPU performs a power-on-reset style of operation when the
      "reset!"  pin is driven.  

      Other mode settings may be controlled by pins and/or attributes:
      "endian-set!"/"endian" to set endianness, "tbit" to set thumb
      mode, "start-pc-set!" to set the PC.  These are useful if the
      standard powerup state of the CPU needs to be changed for
      running a program that expects an initialized environment.

    * Execution

      The component executes zero or more instructions when the
      "step!" pin is driven.  You can specify the maximum number 
      of instructions to be executed via the "step-insn-count"
      attribute.  If the "yield" pin is driven in a reentrant fashion
      while the instruction loop is active, the loop will be exited at 
      the next opportunity.  At the end of the loop, the "step-cycles"
      output pin is driven with the number of instructions actually
      executed, though this value is clamped to be at least 1.  The
      "insn-count" attribute accumulates the total number of instructions
      executed since reset.

      Each instruction is first fetched from memory via the
      "insn-memory" accessor, and its decoding traced if the
      "trace-extract?" attribute is set to a true value.  The decoded
      form may be cached indefinitely afterwards, although this cache is
      flushed when the "flush-icache" pin is driven.

      The "engine-type" attribute specifies whether the "scache"
      ("semantic cache") or "pbb" ("pseudo basic block") dispatching
      mechanism is used during execution.  The "scache" mode executes
      each instruction in isolation and checks all triggerpoints after
      each.  If the "enable-step-trap?" attribute is set, after each
      instruction, a single-stepping trap is signalled as described in
      the "Exceptions/traps" behavior below.

      The "pbb" mode executes a series of sequential instructions in one 
      uninterruptible sequence, and is thus faster.  However, it cannot 
      handle triggerpoints or single-stepping, nor can it respond to 
      icache flushing as quickly.  The "pbb" mode is temporarily and 
      transparently downgraded to the "scache" mode when needed.

      During the execution of an instruction, this component may make
      accesses using the "data-memory" accessor, may update its
      simulated registers, and may trigger an exception/trap.  

    * Exceptions/traps

      When encountering exception/trap conditions such as memory
      access errors or software interrupts, this component signals the
      event using the "trap" pin.  (For some traps, the "trap-code"
      pin is driven with extra information just beforehand.)  An
      external component may interpret the values in the table below,
      and declare a disposition for the condition.  In the absence of
      input, the condition will be treated as the hardware would, that
      is by dispatching to exception vectors, switching processor
      modes, etc.

      The trap codes sent on the "trap" output pin are:
      "trap"    cause                   "trap-code"
      1         software trap           instruction bitmap
      2         breakpoint              bkpt number
      3         system call             syscall number
      4         invalid instruction     n/a
      5         memory fault            faulting address
      6         arithmetic overflow     faulting address
      7         stepped                 n/a

      The disposition codes returned on the "trap" input pin are:
      "trap"    effect
      0 or n/a  dispatch as hardware would
      1         handled; continue
      2         reissue
      3         handled; skip instruction and continue

    * Hardware interrupts

      Hardware interrupts are signalled by driving the pins "nfiq" or
      "nirq" with a zero value.  Incoming interrupts are queued and
      are processed when the "step!"  pin is next invoked.  Note that
      this may not be the next instruction if the "step-insn-count"
      attribute is greater than one.

    * Register access

      All 16 general purpose registers are accessible as attribute
      "r0" through "r15".  "pc" is an alias of "r15".  The CPSR
      register is accessible as "cpsr", and also as "cpsr-flags" for
      a decoded textual form.  The current endianness is
      available as attribute "endian".  The current cpsr mode is
      available as attribute/pin "nm".  The current thumb/arm bit is
      available as attribute/pin "tbit".

      Banked registers (e.g. "r14_svc", "spsr_und") are also exposed
      as read/write attributes.

      This component exports a number of attributes for use by the
      sw-debug-gdb component.  These are the "gdb-*" attributes, in
      the "debugger" category.  The "gdb-register-N" group access all
      registers in gdb's indexing scheme, in raw target byte order.
      The "gdb-register-pc" is a special watchable value with no 
      associated attribute.  The "gdb-num-registers" attribute provides 
      the limit for N.  The "gdb-exp-registers" attribute provides a
      semicolon-separated list of "expedited" register numbers.

      The "debugger-bus" bus provides access to the target program's
      address space, and is used by gdb to access target memory.

  - SID conventions

    * This is a functional component.
    * It supports save/restore of the CPU state.
    * Triggerpoints are supported for CPU registers.
    * It prevents harmful recursion from the "step!" input pin.

* Environment

  Related components:

  * CPUs connect to many components: memory to store data and
    instructions, a scheduler to provide "step!" signals, software
    trap emulators, debugger interfaces.  The "step-cycles" output pin
    may be used as a N-event-control input for a target scheduler to
    track an estimate of consumed target time.

  Host system:

  * Some error conditions are signalled by messages to standard error.
    These include some illegal CPU states caused by the simulated
    program.

* SID interface reference

  Low level:

  * pins

  start-pc-set! | input | any value | initialization
  endian-set! | input | 1 (big) / 2 (little) | initialization
  reset! | input | 0 or 1 | initialization
  nreset | input | 0 or 1 | execution
  trap | input/output | enum values | exceptions/traps
  trap-code | output | various values | exceptions/traps
  step! | input | any value | execution
  step-cycles | output | 1..step-insn-count | execution
  nm | output | 0 or 1 | register access
  tbit | output | 0 or 1 | register access
  nfiq | input | 0 or 1 | hardware interrupts
  nirq | input | 0 or 1 | hardware interrupts
  yield | input | any | execution
  flush-icache | input | any | execution

  * accessors

  data-memory | any | execution
  insn-memory | typically 4-byte accesses | execution

  * buses

  debugger-bus | any | any | debugger access

  * attributes

  enable-warnings? | setting | boolean | false | initialization
  trace-extract? | setting | boolean | false | initialization
  trace-result? | setting | boolean | false | initialization
  engine-type | setting | scache or pbb | pbb | execution
  insn-count | watchable register | number | execution
  step-insn-count | setting | number | execution
  enable-step-trap? | setting | boolean | false | execution
  endian | register | "1"/"big"/"2"/"little" | big | initialization, register access
  rN | watchable register | number | n/a | register access
  pc | watchable register | number | n/a | register access
  cpsr | watchable register | number | n/a | register access
  cpsr-flags | register | string | n/a | register access
  gdb-register-N | debugger | byte array | n/a | register access
  gdb-num-registers | debugger | number | n/a | register access
  gdb-exp-registers | debugger | number list | n/a | register access
  nm | watchable pin | number | n/a | register access
  trap | watchable pin | number | n/a | execution/traps
  trap-code | watchable pin | number | n/a | execution/traps
  tbit | watchable pin | number | n/a | register access
  nfiq | watchable pin | number | n/a | hardware interrupts
  nirq | watchable pin | number | n/a | hardware interrupts
  step-cycles | watchable pin | number | n/a | execution
  state-snapshot | | opaque string  | state save/restore
  rN_fiq | watchable register | number | n/a | register access
  rN_svc | watchable register | number | n/a | register access
  rN_abt | watchable register | number | n/a | register access
  rN_irq | watchable register | number | n/a | register access
  rN_und | watchable register | number | n/a | register access
  spsr_fiq | watchable register | number | n/a | register access
  spsr_svc | watchable register | number | n/a | register access
  spsr_abt | watchable register | number | n/a | register access
  spsr_irq | watchable register | number | n/a | register access
  spsr_und | watchable register | number | n/a | register access
d7 1
d9 386
a394 1
* References
d396 7
a402 2
  ARM
  Arm Architecture Reference Manual, ARM DDI 0100B
@


1.1
log
@* public snapshot of sid simulator
@
text
@d11 1
a11 1
  Attributes: debug-exec? trace-extract?  trace-result?  engine-type
d198 1
a198 1
  debug-exec? | setting | boolean | false | initialization
@

