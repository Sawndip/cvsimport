head	1.4;
access;
symbols
	sid-snapshot-20180601:1.4
	sid-snapshot-20180501:1.4
	sid-snapshot-20180401:1.4
	sid-snapshot-20180301:1.4
	sid-snapshot-20180201:1.4
	sid-snapshot-20180101:1.4
	sid-snapshot-20171201:1.4
	sid-snapshot-20171101:1.4
	sid-snapshot-20171001:1.4
	sid-snapshot-20170901:1.4
	sid-snapshot-20170801:1.4
	sid-snapshot-20170701:1.4
	sid-snapshot-20170601:1.4
	sid-snapshot-20170501:1.4
	sid-snapshot-20170401:1.4
	sid-snapshot-20170301:1.4
	sid-snapshot-20170201:1.4
	sid-snapshot-20170101:1.4
	sid-snapshot-20161201:1.4
	sid-snapshot-20161101:1.4
	sid-snapshot-20160901:1.4
	sid-snapshot-20160801:1.4
	sid-snapshot-20160701:1.4
	sid-snapshot-20160601:1.4
	sid-snapshot-20160501:1.4
	sid-snapshot-20160401:1.4
	sid-snapshot-20160301:1.4
	sid-snapshot-20160201:1.4
	sid-snapshot-20160101:1.4
	sid-snapshot-20151201:1.4
	sid-snapshot-20151101:1.4
	sid-snapshot-20151001:1.4
	sid-snapshot-20150901:1.4
	sid-snapshot-20150801:1.4
	sid-snapshot-20150701:1.4
	sid-snapshot-20150601:1.4
	sid-snapshot-20150501:1.4
	sid-snapshot-20150401:1.4
	sid-snapshot-20150301:1.4
	sid-snapshot-20150201:1.4
	sid-snapshot-20150101:1.4
	sid-snapshot-20141201:1.4
	sid-snapshot-20141101:1.4
	sid-snapshot-20141001:1.4
	sid-snapshot-20140901:1.4
	sid-snapshot-20140801:1.4
	sid-snapshot-20140701:1.4
	sid-snapshot-20140601:1.4
	sid-snapshot-20140501:1.4
	sid-snapshot-20140401:1.4
	sid-snapshot-20140301:1.4
	sid-snapshot-20140201:1.4
	sid-snapshot-20140101:1.4
	sid-snapshot-20131201:1.4
	sid-snapshot-20131101:1.4
	sid-snapshot-20131001:1.4
	sid-snapshot-20130901:1.4
	sid-snapshot-20130801:1.4
	sid-snapshot-20130701:1.4
	sid-snapshot-20130601:1.4
	sid-snapshot-20130501:1.4
	sid-snapshot-20130401:1.4
	sid-snapshot-20130301:1.4
	sid-snapshot-20130201:1.4
	sid-snapshot-20130101:1.4
	sid-snapshot-20121201:1.4
	sid-snapshot-20121101:1.4
	sid-snapshot-20121001:1.4
	sid-snapshot-20120901:1.4
	sid-snapshot-20120801:1.4
	sid-snapshot-20120701:1.4
	sid-snapshot-20120601:1.4
	sid-snapshot-20120501:1.4
	sid-snapshot-20120401:1.4
	sid-snapshot-20120301:1.4
	sid-snapshot-20120201:1.4
	sid-snapshot-20120101:1.4
	sid-snapshot-20111201:1.4
	sid-snapshot-20111101:1.4
	sid-snapshot-20111001:1.4
	sid-snapshot-20110901:1.4
	sid-snapshot-20110801:1.4
	sid-snapshot-20110701:1.4
	sid-snapshot-20110601:1.4
	sid-snapshot-20110501:1.4
	sid-snapshot-20110401:1.4
	sid-snapshot-20110301:1.4
	sid-snapshot-20110201:1.4
	sid-snapshot-20110101:1.4
	sid-snapshot-20101201:1.4
	sid-snapshot-20101101:1.4
	sid-snapshot-20101001:1.4
	sid-snapshot-20100901:1.4
	sid-snapshot-20100801:1.4
	sid-snapshot-20100701:1.4
	sid-snapshot-20100601:1.4
	sid-snapshot-20100501:1.4
	sid-snapshot-20100401:1.4
	sid-snapshot-20100301:1.4
	sid-snapshot-20100201:1.4
	sid-snapshot-20100101:1.4
	sid-snapshot-20091201:1.4
	sid-snapshot-20091101:1.4
	sid-snapshot-20091001:1.4
	sid-snapshot-20090901:1.4
	sid-snapshot-20090801:1.4
	sid-snapshot-20090701:1.4
	sid-snapshot-20090601:1.4
	sid-snapshot-20090501:1.4
	sid-snapshot-20090401:1.4
	sid-snapshot-20090301:1.4
	sid-snapshot-20090201:1.4
	sid-snapshot-20090101:1.4
	sid-snapshot-20081201:1.4
	sid-snapshot-20081101:1.4
	sid-snapshot-20081001:1.4
	sid-snapshot-20080901:1.4
	sid-snapshot-20080801:1.4
	sid-snapshot-20080701:1.4
	sid-snapshot-20080601:1.3
	sid-snapshot-20080501:1.3
	sid-snapshot-20080403:1.3
	sid-snapshot-20080401:1.3
	sid-snapshot-20080301:1.3
	sid-snapshot-20080201:1.3
	sid-snapshot-20080101:1.3
	sid-snapshot-20071201:1.3
	sid-snapshot-20071101:1.3
	sid-snapshot-20071001:1.3
	sid-20020905-branchpoint:1.2
	sid-20020905-branch:1.2.0.2
	cygnus_cvs_20020108_pre:1.1;
locks; strict;
comment	@ * @;


1.4
date	2008.06.17.18.06.52;	author brolley;	state Exp;
branches;
next	1.3;

1.3
date	2006.06.26.21.06.41;	author brolley;	state Exp;
branches;
next	1.2;

1.2
date	2002.01.11.07.25.03;	author mrg;	state Exp;
branches;
next	1.1;

1.1
date	2001.12.17.09.31.20;	author mrg;	state Exp;
branches;
next	;


desc
@@


1.4
log
@2008-06-17  Dave Brolley  <brolley@@redhat.com>

        * xstormy16.h (xstormy16_cpu_cgen): Now inherits from
        cgen_bi_endian_cpu.
        (h_pc_set_handler): New method of xstormy16_cpu_cgen.
        (h_gr_set_handler,init_change_logging,finish_change_logging)
        (log_pc_change,log_gr_change,restore_change) Likewise.
        (PC_UNCHANGED,PC_RESET,gr_changed,pc_changed,old_gr,old_h_pc):
        New members of xstormy16_cpu_cgen.
        (xstormy16_cpu): Now inherits only from xstormy16_cpu_cgen.
        * xstormy16.cxx (init_change_logging): New method of
        xstormy16_cpu_cgen.
        (finish_change_logging,log_pc_change,log_gr_change,restore_change):
        Likewise.
        * xstormy16-cpu.h: Regenerated.
@
text
@// xstormy16.h - Hand-written code for the Sanyo Xstormy16 CPU. -*- C++ -*-

// Copyright (C) 1999, 2000, 2006 Red Hat.
// This file is part of SID and is licensed under the GPL.
// See the file COPYING.SID for conditions for redistribution.

#include "cgen-cpu.h"
#include "xstormy16-desc.h"
#include "xstormy16-defs.h"
#include "xstormy16-decode.h"

namespace xstormy16
{
  class xstormy16_cpu_cgen: public cgen_bi_endian_cpu
    {
      // Include cgen generated elements.
#include "xstormy16-cpu.h"

    public:
      xstormy16_cpu_cgen () {}
      ~xstormy16_cpu_cgen () throw() { };

    protected:
      // Log any changes to the pc, if we're reversible.
      void h_pc_set_handler (USI newval)
        {
	  if (UNLIKELY (this->reversible_p))
	    log_pc_change (newval);
	  this->hardware.h_pc = newval;
        }

      // Log any changes to the gr registers, if we're reversible.
      void h_gr_set_handler (UINT regno, SI newval)
        {
	  if (UNLIKELY (this->reversible_p))
	    log_gr_change (regno, newval);
	  this->hardware.h_gr[regno] = (0xffff & newval);
        }

      // Stateful (reversible) component implementation methods.
      virtual void init_change_logging ();
      virtual void finish_change_logging ();

      void log_pc_change (USI new_pc);
      void log_gr_change (UINT regno, SI newval);

      virtual void restore_change (const char *data, sid::host_int_4 length);

    protected:
      inline void cgen_rtx_error(const char* msg) const
	{
	  cerr << "xstormy16-cpu rtx error: " << msg << endl;
	}

    protected:
      USI syscall_trap_num;

      // The values of these constants are significant and must not be changed.
      static const sid::signed_host_int_1 PC_UNCHANGED = 0x00;
      static const sid::signed_host_int_1 PC_RESET = 0x01;

      // State for change logging.
      sid::host_int_2 gr_changed;
      sid::signed_host_int_1 pc_changed;
      SI old_h_gr[16];
      USI old_h_pc;
    };

  class xstormy16_cpu: public xstormy16_cpu_cgen
    {
    private:
      scache_engine<xstormy16_scache> engine;

      void step_insns ();
      void flush_icache ();
      void reset ();
      
      // debug support routines
      string dbg_get_reg (host_int_4 n);
      component::status dbg_set_reg (host_int_4 n, const string& s);

    public:
      xstormy16_cpu ();
      ~xstormy16_cpu () throw() { };

      void set_pc (host_int_4 v) 
	{ 
	  this->hardware.h_pc = (PCADDR) v; 
	}

      host_int_4 get_pc ()
        {
	  return this->hardware.h_pc;
	}

      // syscall temporary registers
      USI syscall_arg0;
      USI syscall_arg1;
      USI syscall_arg2;
      USI syscall_arg3;
      USI syscall_error;
      USI syscall_result;

      int parity (int);
      void syscall ();
      void do_brk ();
      void do_halt ();
      void do_hold ();
      void do_holdx ();
      
      // Called by semantic code to perform branches.
      inline void
      branch (PCADDR new_pc, PCADDR& npc, sem_status& status)
	{
	  npc = new_pc;
	}

      // Called by the semantic code at the end of a non-cti insn.
      inline void
      done_insn (PCADDR npc, sem_status& status)
	{
	  this->h_pc_set (npc);
	}

      // Called by the semantic code at the end of a cti insn.
      inline void
      done_cti_insn (PCADDR npc, sem_status& status)
	{
	  this->h_pc_set (npc);
	}

      void invalid_insn (PCADDR pc);
      void memory_trap (const cpu_memory_fault& t);

    };

} // namespace xstormy16
@


1.3
log
@2006-06-26  Dave Brolley  <brolley@@redhat.com>

        * xstormy16.h (get_pc): New member of xstormy16_cpu.
@
text
@d3 1
a3 1
// Copyright (C) 1999, 2000 Red Hat.
d14 1
a14 1
  class xstormy16_cpu_cgen
d20 30
d54 1
d58 9
d69 1
a69 1
  class xstormy16_cpu: public xstormy16_cpu_cgen, public cgen_bi_endian_cpu
@


1.2
log
@[cgen/ChangeLog]
	* cpu/xstormy16.cpu (gr-Rbj-names): Rename this ...
	(gr-Rb-names): ... to this.
	(h-Rb): New hardware peice.
	(h-Rbj): Use gr-Rb-names.
	(Rb): Use h-Rb.

	(holdx): New instruction.

[opcodes/ChangeLog]
	* xstormy16-asm.c: Regenerate.
	* xstormy16-desc.c: Likewise.
	* xstormy16-desc.h: Likewise.
	* xstormy16-dis.c: Likewise.
	* xstormy16-opc.c: Likewise.
	* xstormy16-opc.h: Likewise.

[gas/testsuite/ChangeLog]
	* gas/xstormy16/allinsn.sh (movf, jmp, call, icall): Update.
	* gas/xstormy16/allinsn.d: Regenerate.
	* gas/xstormy16/allinsn.s: Regenerate.

[sid/component/cgen-cpu/xstormy16/ChangeLog]
	* xstormy16.cxx (do_holdx): Define.
	* xstormy16.h (do_holdx): Declare.
@
text
@d51 5
@


1.1
log
@* sanyo xstormy16 sid support.


[ChangeLog]
	* sid.spec: Add /usr/bin/xstormy16-elf-sid.

[bsp/ChangeLog]
	* Makefile.am (FAM10SCRIPTS): Add Xstormy16 support.
	* configrun-sid.in: Likewise.
	* xstormy16-elf-sid: New Xstormy16 frontend.

[bsp/pregen/ChangeLog]
	* pregen-configs.in: Add support for Xstormy16.
	* xstormy16-gloss.conf: New file.
	* xstormy16-gdb.conf: Likewise.
	* xstormy16-gloss-gdb.conf: Likewise.
	* xstormy16-gloss-gdb-tksm.conf: Likewise.

[component/ChangeLog]
	* CATALOG: Add hw-cpu-xstormy16.
	* tconfig.in: Add SIDTARGET_XSTORMY16.

[component/cgen-cpu/ChangeLog]
	* compCGEN.cxx: If SIDTARGET_XSTORMY16, add hw-cpu-xstormy16 support.
	* configure.in: Decend into xstormy16 if necessary.

[config/ChangeLog]
	* sidtargets.m4: Add Xstormy16 support.
	* config.sub: Likewise.
	* info.tcl.in: Likewise.
@
text
@d64 1
@

