head	1.7;
access;
symbols
	sid-snapshot-20180601:1.7
	sid-snapshot-20180501:1.7
	sid-snapshot-20180401:1.7
	sid-snapshot-20180301:1.7
	sid-snapshot-20180201:1.7
	sid-snapshot-20180101:1.7
	sid-snapshot-20171201:1.7
	sid-snapshot-20171101:1.7
	sid-snapshot-20171001:1.7
	sid-snapshot-20170901:1.7
	sid-snapshot-20170801:1.7
	sid-snapshot-20170701:1.7
	sid-snapshot-20170601:1.7
	sid-snapshot-20170501:1.7
	sid-snapshot-20170401:1.7
	sid-snapshot-20170301:1.7
	sid-snapshot-20170201:1.7
	sid-snapshot-20170101:1.7
	sid-snapshot-20161201:1.7
	sid-snapshot-20161101:1.7
	sid-snapshot-20160901:1.7
	sid-snapshot-20160801:1.7
	sid-snapshot-20160701:1.7
	sid-snapshot-20160601:1.7
	sid-snapshot-20160501:1.7
	sid-snapshot-20160401:1.7
	sid-snapshot-20160301:1.7
	sid-snapshot-20160201:1.7
	sid-snapshot-20160101:1.7
	sid-snapshot-20151201:1.7
	sid-snapshot-20151101:1.7
	sid-snapshot-20151001:1.7
	sid-snapshot-20150901:1.7
	sid-snapshot-20150801:1.7
	sid-snapshot-20150701:1.7
	sid-snapshot-20150601:1.7
	sid-snapshot-20150501:1.7
	sid-snapshot-20150401:1.7
	sid-snapshot-20150301:1.7
	sid-snapshot-20150201:1.7
	sid-snapshot-20150101:1.7
	sid-snapshot-20141201:1.7
	sid-snapshot-20141101:1.7
	sid-snapshot-20141001:1.7
	sid-snapshot-20140901:1.7
	sid-snapshot-20140801:1.7
	sid-snapshot-20140701:1.7
	sid-snapshot-20140601:1.7
	sid-snapshot-20140501:1.7
	sid-snapshot-20140401:1.7
	sid-snapshot-20140301:1.7
	sid-snapshot-20140201:1.7
	sid-snapshot-20140101:1.7
	sid-snapshot-20131201:1.7
	sid-snapshot-20131101:1.7
	sid-snapshot-20131001:1.7
	sid-snapshot-20130901:1.7
	sid-snapshot-20130801:1.7
	sid-snapshot-20130701:1.7
	sid-snapshot-20130601:1.7
	sid-snapshot-20130501:1.7
	sid-snapshot-20130401:1.7
	sid-snapshot-20130301:1.7
	sid-snapshot-20130201:1.7
	sid-snapshot-20130101:1.7
	sid-snapshot-20121201:1.7
	sid-snapshot-20121101:1.7
	sid-snapshot-20121001:1.7
	sid-snapshot-20120901:1.7
	sid-snapshot-20120801:1.7
	sid-snapshot-20120701:1.7
	sid-snapshot-20120601:1.7
	sid-snapshot-20120501:1.7
	sid-snapshot-20120401:1.7
	sid-snapshot-20120301:1.7
	sid-snapshot-20120201:1.7
	sid-snapshot-20120101:1.7
	sid-snapshot-20111201:1.7
	sid-snapshot-20111101:1.7
	sid-snapshot-20111001:1.7
	sid-snapshot-20110901:1.7
	sid-snapshot-20110801:1.7
	sid-snapshot-20110701:1.7
	sid-snapshot-20110601:1.7
	sid-snapshot-20110501:1.7
	sid-snapshot-20110401:1.7
	sid-snapshot-20110301:1.7
	sid-snapshot-20110201:1.7
	sid-snapshot-20110101:1.7
	sid-snapshot-20101201:1.7
	sid-snapshot-20101101:1.7
	sid-snapshot-20101001:1.7
	sid-snapshot-20100901:1.7
	sid-snapshot-20100801:1.7
	sid-snapshot-20100701:1.7
	sid-snapshot-20100601:1.7
	sid-snapshot-20100501:1.7
	sid-snapshot-20100401:1.7
	sid-snapshot-20100301:1.7
	sid-snapshot-20100201:1.7
	sid-snapshot-20100101:1.6
	sid-snapshot-20091201:1.6
	sid-snapshot-20091101:1.6
	sid-snapshot-20091001:1.5
	sid-snapshot-20090901:1.5
	sid-snapshot-20090801:1.5
	sid-snapshot-20090701:1.5
	sid-snapshot-20090601:1.5
	sid-snapshot-20090501:1.5
	sid-snapshot-20090401:1.5
	sid-snapshot-20090301:1.5
	sid-snapshot-20090201:1.5
	sid-snapshot-20090101:1.5
	sid-snapshot-20081201:1.5
	sid-snapshot-20081101:1.5
	sid-snapshot-20081001:1.5
	sid-snapshot-20080901:1.5
	sid-snapshot-20080801:1.5
	sid-snapshot-20080701:1.5
	sid-snapshot-20080601:1.4
	sid-snapshot-20080501:1.4
	sid-snapshot-20080403:1.4
	sid-snapshot-20080401:1.4
	sid-snapshot-20080301:1.4
	sid-snapshot-20080201:1.4
	sid-snapshot-20080101:1.4
	sid-snapshot-20071201:1.4
	sid-snapshot-20071101:1.4
	sid-snapshot-20071001:1.4
	sid-20020905-branchpoint:1.1
	sid-20020905-branch:1.1.0.2
	cygnus_cvs_20020108_pre:1.1;
locks; strict;
comment	@ * @;


1.7
date	2010.01.02.21.18.57;	author devans;	state Exp;
branches;
next	1.6;

1.6
date	2009.10.24.00.46.00;	author devans;	state Exp;
branches;
next	1.5;

1.5
date	2008.06.17.18.06.52;	author brolley;	state Exp;
branches;
next	1.4;

1.4
date	2005.08.19.18.58.56;	author brolley;	state Exp;
branches;
next	1.3;

1.3
date	2003.07.05.17.07.21;	author devans;	state Exp;
branches;
next	1.2;

1.2
date	2002.11.20.03.15.43;	author dj;	state Exp;
branches;
next	1.1;

1.1
date	2001.12.17.09.31.20;	author mrg;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Regenerate cgen files, update copyright year.
@
text
@/* CPU class elements for xstormy16.

THIS FILE IS MACHINE GENERATED WITH CGEN.

Copyright (C) 2000-2010 Red Hat, Inc.

This file is part of the Red Hat simulators.


*/

// This file is included in the middle of the cpu class struct.

public:

// CPU state information.

  // Hardware elements.
  struct {
  /* program counter */
  USI h_pc;
  /* registers */
  SI h_gr[16];
  } hardware;

  void stream_cgen_hardware (std::ostream &ost) const 
  {
    ost << hardware.h_pc << ' ';
    for (int i = 0; i < 16; i++)
      ost << hardware.h_gr[i] << ' ';
  }
  void destream_cgen_hardware (std::istream &ist) 
  {
    ist >> hardware.h_pc;
    for (int i = 0; i < 16; i++)
      ist >> hardware.h_gr[i];
  }
  // C++ register access function templates
#define current_cpu this

  inline USI h_pc_get () const { return this->hardware.h_pc; }
  inline void h_pc_set (USI newval) { current_cpu->h_pc_set_handler (newval);
 }

  inline SI h_gr_get (UINT regno) const { return ((65535) & (current_cpu->hardware.h_gr[regno])); }
  inline void h_gr_set (UINT regno, SI newval) { current_cpu->h_gr_set_handler (regno, newval);
 }

  inline SI h_Rb_get (UINT regno) const { return current_cpu->h_gr_get (((regno) + (8))); }
  inline void h_Rb_set (UINT regno, SI newval) { current_cpu->h_gr_set (((regno) + (8)), newval);
 }

  inline SI h_Rbj_get (UINT regno) const { return current_cpu->h_gr_get (((regno) + (8))); }
  inline void h_Rbj_set (UINT regno, SI newval) { current_cpu->h_gr_set (((regno) + (8)), newval);
 }

  inline SI h_Rpsw_get () const { return ((15) & (SRLSI (current_cpu->h_gr_get (((UINT) 14)), 12))); }
  inline void h_Rpsw_set (SI newval) { current_cpu->h_gr_set (((UINT) 14), ORSI (ANDSI (current_cpu->h_gr_get (((UINT) 14)), 4095), SLLHI (newval, 12)));
 }

  inline SI h_z8_get () const { return ((1) & (SRLSI (current_cpu->h_gr_get (((UINT) 14)), 0))); }
  inline void h_z8_set (SI newval) { current_cpu->h_gr_set (((UINT) 14), ORSI (ANDSI (current_cpu->h_gr_get (((UINT) 14)), INVHI (SLLHI (1, 0))), SLLHI (newval, 0)));
 }

  inline SI h_z16_get () const { return ((1) & (SRLSI (current_cpu->h_gr_get (((UINT) 14)), 1))); }
  inline void h_z16_set (SI newval) { current_cpu->h_gr_set (((UINT) 14), ORSI (ANDSI (current_cpu->h_gr_get (((UINT) 14)), INVHI (SLLHI (1, 1))), SLLHI (newval, 1)));
 }

  inline SI h_cy_get () const { return ((1) & (SRLSI (current_cpu->h_gr_get (((UINT) 14)), 2))); }
  inline void h_cy_set (SI newval) { current_cpu->h_gr_set (((UINT) 14), ORSI (ANDSI (current_cpu->h_gr_get (((UINT) 14)), INVHI (SLLHI (1, 2))), SLLHI (newval, 2)));
 }

  inline SI h_hc_get () const { return ((1) & (SRLSI (current_cpu->h_gr_get (((UINT) 14)), 3))); }
  inline void h_hc_set (SI newval) { current_cpu->h_gr_set (((UINT) 14), ORSI (ANDSI (current_cpu->h_gr_get (((UINT) 14)), INVHI (SLLHI (1, 3))), SLLHI (newval, 3)));
 }

  inline SI h_ov_get () const { return ((1) & (SRLSI (current_cpu->h_gr_get (((UINT) 14)), 4))); }
  inline void h_ov_set (SI newval) { current_cpu->h_gr_set (((UINT) 14), ORSI (ANDSI (current_cpu->h_gr_get (((UINT) 14)), INVHI (SLLHI (1, 4))), SLLHI (newval, 4)));
 }

  inline SI h_pt_get () const { return ((1) & (SRLSI (current_cpu->h_gr_get (((UINT) 14)), 5))); }
  inline void h_pt_set (SI newval) { current_cpu->h_gr_set (((UINT) 14), ORSI (ANDSI (current_cpu->h_gr_get (((UINT) 14)), INVHI (SLLHI (1, 5))), SLLHI (newval, 5)));
 }

  inline SI h_s_get () const { return ((1) & (SRLSI (current_cpu->h_gr_get (((UINT) 14)), 6))); }
  inline void h_s_set (SI newval) { current_cpu->h_gr_set (((UINT) 14), ORSI (ANDSI (current_cpu->h_gr_get (((UINT) 14)), INVHI (SLLHI (1, 6))), SLLHI (newval, 6)));
 }

#undef current_cpu

@


1.6
log
@	* cgen-cpu.h: Update for new location of cgen/bitset.h.
	* tracedis.h: Ditto.

Plus update generated files to pick up two cgen changes:
1)
	* desc-cpu.scm (/gen-hash-defines): Remove #include of cgen-bitset.h.
	* sid-cpu.scm (cgen-desc.h): Update location of cgen's bitset.h.
2)
	* utils-sim.scm (/gen-set-itype-and-extract): New function.
	(/gen-bracketed-set-itype-and-extract): New function.
	(/gen-decode-default-entry): Rewrite.
	(/table-guts-to-mask, /all-opcode-bits-used?): New functions.
	(/gen-decode-insn-entry): New arg table-guts-thus-far, all callers
	updated.  Don't unnecessarily emit check for whether all opcode bits
	have been examined.
	(/gen-decode-expr-set-itype): Delete.
	(/gen-decode-expr-entry): Update.
	(/gen-decode-table-entry): New arg table-guts-thus-far, all callers
	updated.  Keep track of decoder tables used thus far.
	(/gen-decoder-switch): Ditto.
@
text
@d5 1
a5 1
Copyright (C) 2000-2009 Red Hat, Inc.
@


1.5
log
@2008-06-17  Dave Brolley  <brolley@@redhat.com>

        * xstormy16.h (xstormy16_cpu_cgen): Now inherits from
        cgen_bi_endian_cpu.
        (h_pc_set_handler): New method of xstormy16_cpu_cgen.
        (h_gr_set_handler,init_change_logging,finish_change_logging)
        (log_pc_change,log_gr_change,restore_change) Likewise.
        (PC_UNCHANGED,PC_RESET,gr_changed,pc_changed,old_gr,old_h_pc):
        New members of xstormy16_cpu_cgen.
        (xstormy16_cpu): Now inherits only from xstormy16_cpu_cgen.
        * xstormy16.cxx (init_change_logging): New method of
        xstormy16_cpu_cgen.
        (finish_change_logging,log_pc_change,log_gr_change,restore_change):
        Likewise.
        * xstormy16-cpu.h: Regenerated.
@
text
@d5 1
a5 1
Copyright (C) 2000-2007 Red Hat, Inc.
@


1.4
log
@2005-08-19  Dave Brolley  <brolley@@redhat.com>

        * Makefile.am: Remove references to xstormy16-write.cxx.
        * xstormy16-cpu.h: Regenerate.
        * xstormy16-decode.cxx: Regenerate.
        * xstormy16-decode.h: Regenerate.
        * xstormy16-defs.h: Regenerate.
        * xstormy16-desc.h: Regenerate.
        * xstormy16-sem.cxx: Regenerate.
        * xstormy16-write.cxx: Removed.
@
text
@d5 1
a5 1
Copyright (C) 2000-2005 Red Hat, Inc.
d42 2
a43 1
  inline void h_pc_set (USI newval) { this->hardware.h_pc = newval; }
d46 1
a46 1
  inline void h_gr_set (UINT regno, SI newval) { current_cpu->hardware.h_gr[regno] = ((65535) & (newval));
@


1.3
log
@Regenerate cgen files (not due to any recent changes, just want to
establish a reference point).
@
text
@d5 1
a5 1
Copyright (C) 2000, 2001, 2002, 2003 Red Hat, Inc.
d26 12
@


1.2
log
@* xstormy16-cpu.h: Regenerate.
* xstormy16-decode.cxx: Regenerate.
* xstormy16-decode.h: Regenerate.
* xstormy16-defs.h: Regenerate.
* xstormy16-desc.h: Regenerate.
* xstormy16-sem.cxx: Regenerate.
* xstormy16-write.cxx: Regenerate.
@
text
@d5 1
a5 1
Copyright (C) 2000, 2001, 2002 Red Hat, Inc.
@


1.1
log
@* sanyo xstormy16 sid support.


[ChangeLog]
	* sid.spec: Add /usr/bin/xstormy16-elf-sid.

[bsp/ChangeLog]
	* Makefile.am (FAM10SCRIPTS): Add Xstormy16 support.
	* configrun-sid.in: Likewise.
	* xstormy16-elf-sid: New Xstormy16 frontend.

[bsp/pregen/ChangeLog]
	* pregen-configs.in: Add support for Xstormy16.
	* xstormy16-gloss.conf: New file.
	* xstormy16-gdb.conf: Likewise.
	* xstormy16-gloss-gdb.conf: Likewise.
	* xstormy16-gloss-gdb-tksm.conf: Likewise.

[component/ChangeLog]
	* CATALOG: Add hw-cpu-xstormy16.
	* tconfig.in: Add SIDTARGET_XSTORMY16.

[component/cgen-cpu/ChangeLog]
	* compCGEN.cxx: If SIDTARGET_XSTORMY16, add hw-cpu-xstormy16 support.
	* configure.in: Decend into xstormy16 if necessary.

[config/ChangeLog]
	* sidtargets.m4: Add Xstormy16 support.
	* config.sub: Likewise.
	* info.tcl.in: Likewise.
@
text
@d5 1
a5 1
Copyright (C) 2000, 2001 Red Hat, Inc.
a25 13
  // C++ hardware and write_stack stream/destream functions
  void stream_cgen_hardware (std::ostream &ost) const 
  {
    ost << hardware.h_pc << ' ';
    for (int i = 0; i < 16; i++)
      ost << hardware.h_gr[i] << ' ';
  }
  void destream_cgen_hardware (std::istream &ist) 
  {
    ist >> hardware.h_pc;
    for (int i = 0; i < 16; i++)
      ist >> hardware.h_gr[i];
  }
d34 4
@

