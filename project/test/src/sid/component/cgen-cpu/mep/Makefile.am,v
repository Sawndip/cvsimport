head	1.6;
access;
symbols
	sid-snapshot-20180601:1.6
	sid-snapshot-20180501:1.6
	sid-snapshot-20180401:1.6
	sid-snapshot-20180301:1.6
	sid-snapshot-20180201:1.6
	sid-snapshot-20180101:1.6
	sid-snapshot-20171201:1.6
	sid-snapshot-20171101:1.6
	sid-snapshot-20171001:1.6
	sid-snapshot-20170901:1.6
	sid-snapshot-20170801:1.6
	sid-snapshot-20170701:1.6
	sid-snapshot-20170601:1.6
	sid-snapshot-20170501:1.6
	sid-snapshot-20170401:1.6
	sid-snapshot-20170301:1.6
	sid-snapshot-20170201:1.6
	sid-snapshot-20170101:1.6
	sid-snapshot-20161201:1.6
	sid-snapshot-20161101:1.6
	sid-snapshot-20160901:1.6
	sid-snapshot-20160801:1.6
	sid-snapshot-20160701:1.6
	sid-snapshot-20160601:1.6
	sid-snapshot-20160501:1.6
	sid-snapshot-20160401:1.6
	sid-snapshot-20160301:1.6
	sid-snapshot-20160201:1.6
	sid-snapshot-20160101:1.6
	sid-snapshot-20151201:1.6
	sid-snapshot-20151101:1.6
	sid-snapshot-20151001:1.6
	sid-snapshot-20150901:1.6
	sid-snapshot-20150801:1.6
	sid-snapshot-20150701:1.6
	sid-snapshot-20150601:1.6
	sid-snapshot-20150501:1.6
	sid-snapshot-20150401:1.6
	sid-snapshot-20150301:1.6
	sid-snapshot-20150201:1.6
	sid-snapshot-20150101:1.6
	sid-snapshot-20141201:1.6
	sid-snapshot-20141101:1.6
	sid-snapshot-20141001:1.6
	sid-snapshot-20140901:1.6
	sid-snapshot-20140801:1.6
	sid-snapshot-20140701:1.6
	sid-snapshot-20140601:1.6
	sid-snapshot-20140501:1.6
	sid-snapshot-20140401:1.6
	sid-snapshot-20140301:1.6
	sid-snapshot-20140201:1.6
	sid-snapshot-20140101:1.6
	sid-snapshot-20131201:1.6
	sid-snapshot-20131101:1.6
	sid-snapshot-20131001:1.6
	sid-snapshot-20130901:1.5
	sid-snapshot-20130801:1.5
	sid-snapshot-20130701:1.5
	sid-snapshot-20130601:1.5
	sid-snapshot-20130501:1.5
	sid-snapshot-20130401:1.5
	sid-snapshot-20130301:1.5
	sid-snapshot-20130201:1.5
	sid-snapshot-20130101:1.5
	sid-snapshot-20121201:1.5
	sid-snapshot-20121101:1.5
	sid-snapshot-20121001:1.5
	sid-snapshot-20120901:1.5
	sid-snapshot-20120801:1.5
	sid-snapshot-20120701:1.5
	sid-snapshot-20120601:1.5
	sid-snapshot-20120501:1.5
	sid-snapshot-20120401:1.5
	sid-snapshot-20120301:1.5
	sid-snapshot-20120201:1.5
	sid-snapshot-20120101:1.5
	sid-snapshot-20111201:1.5
	sid-snapshot-20111101:1.5
	sid-snapshot-20111001:1.5
	sid-snapshot-20110901:1.5
	sid-snapshot-20110801:1.5
	sid-snapshot-20110701:1.5
	sid-snapshot-20110601:1.5
	sid-snapshot-20110501:1.5
	sid-snapshot-20110401:1.5
	sid-snapshot-20110301:1.5
	sid-snapshot-20110201:1.5
	sid-snapshot-20110101:1.5
	sid-snapshot-20101201:1.5
	sid-snapshot-20101101:1.5
	sid-snapshot-20101001:1.5
	sid-snapshot-20100901:1.5
	sid-snapshot-20100801:1.5
	sid-snapshot-20100701:1.5
	sid-snapshot-20100601:1.5
	sid-snapshot-20100501:1.5
	sid-snapshot-20100401:1.5
	sid-snapshot-20100301:1.5
	sid-snapshot-20100201:1.5
	sid-snapshot-20100101:1.5
	sid-snapshot-20091201:1.5
	sid-snapshot-20091101:1.5
	sid-snapshot-20091001:1.5
	sid-snapshot-20090901:1.5
	sid-snapshot-20090801:1.4
	sid-snapshot-20090701:1.4
	sid-snapshot-20090601:1.4
	sid-snapshot-20090501:1.4
	sid-snapshot-20090401:1.2
	sid-snapshot-20090301:1.2
	sid-snapshot-20090201:1.1
	sid-snapshot-20090101:1.1
	sid-snapshot-20081201:1.1
	sid-snapshot-20081101:1.1
	sid-snapshot-20081001:1.1
	sid-snapshot-20080901:1.1
	sid-snapshot-20080801:1.1
	sid-snapshot-20080701:1.1
	sid-snapshot-20080601:1.1
	sid-snapshot-20080501:1.1
	sid-snapshot-20080403:1.1
	sid-snapshot-20080401:1.1
	sid-snapshot-20080301:1.1
	sid-snapshot-20080201:1.1
	sid-snapshot-20080101:1.1
	sid-snapshot-20071201:1.1
	sid-snapshot-20071101:1.1
	sid-snapshot-20071001:1.1;
locks; strict;
comment	@# @;


1.6
date	2013.09.23.03.22.11;	author amodra;	state Exp;
branches;
next	1.5;

1.5
date	2009.08.18.19.29.15;	author rwild;	state Exp;
branches;
next	1.4;

1.4
date	2009.04.30.21.18.37;	author dj;	state Exp;
branches;
next	1.3;

1.3
date	2009.04.08.20.39.35;	author dj;	state Exp;
branches;
next	1.2;

1.2
date	2009.02.03.21.29.28;	author dj;	state Exp;
branches;
next	1.1;

1.1
date	2007.02.05.20.28.39;	author brolley;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Pick up support for powerpc64le in top level libtool.m4 by deleting
sid/config files duplicating the top level files and modifying
AC_CONFIG_AUX_DIR and ACLOCAL_AMFLAGS appropriately.
Regenerate with automake-1.11.1 and autoconf-2.64.
@
text
@## Process this with automake to create Makefile.in

AUTOMAKE_OPTIONS = foreign
ACLOCAL_AMFLAGS = -I ../../../config -I ../../../..

noinst_LTLIBRARIES = libmep.la

BFDINCLUDES =  -I../../../../bfd -I$(srcdir)/../../../../include
INCLUDES = -I$(srcdir) -I$(srcdir)/.. -I.. -I../../../include -I$(srcdir)/../../../include $(BFDINCLUDES)
CXXFLAGS = $(TOP_CXXFLAGS) -DHAVE_CONFIG_H

pkgdata_DATA = hw-cpu-mep.txt

CPU_SOURCES = mep-core1-decode.cxx mep-core1-sem.cxx mep-core1-model.cxx mep-cop1-16-decode.cxx mep-cop1-16-sem.cxx mep-cop1-16-model.cxx mep-cop1-32-decode.cxx mep-cop1-32-sem.cxx mep-cop1-32-model.cxx mep-cop1-48-decode.cxx mep-cop1-48-sem.cxx mep-cop1-48-model.cxx mep-cop1-64-decode.cxx mep-cop1-64-sem.cxx mep-cop1-64-model.cxx ivc2-cop.cxx

libmep_la_SOURCES = mep.cxx common_model.cxx mep-decode.cxx mep-sem.cxx mep-model.cxx $(CPU_SOURCES)
libmep_la_LDFLAGS =
libmep_la_LIBADD = mep-asm.lo mep-dis.lo mep-opc.lo mep-ibld.lo mep-desc.lo

CGEN_MACH = c5

OPCODES_COMPILE_FLAGS = -DHAVE_CONFIG_H \
	-I../../../../opcodes \
	-I../../../../bfd \
	-I../../../../intl \
	-I$(srcdir)/../../../../opcodes \
	-I$(srcdir)/../../../../include \
	-I$(srcdir)/../../../../bfd     \
	-I$(srcdir)/../../../../intl    \
	-D_GNU_SOURCE 

mep-asm.lo: ../../../../opcodes/mep-asm.c
	/bin/sh ./libtool --mode=compile $(CC) $(OPCODES_COMPILE_FLAGS) $(CFLAGS) -c $<

mep-dis.lo: ../../../../opcodes/mep-dis.c
	/bin/sh ./libtool --mode=compile $(CC) $(OPCODES_COMPILE_FLAGS) $(CFLAGS) -c $<

mep-opc.lo: ../../../../opcodes/mep-opc.c
	/bin/sh ./libtool --mode=compile $(CC) $(OPCODES_COMPILE_FLAGS) $(CFLAGS) -c $<

mep-ibld.lo: ../../../../opcodes/mep-ibld.c
	/bin/sh ./libtool --mode=compile $(CC) $(OPCODES_COMPILE_FLAGS) $(CFLAGS) -c $<

mep-desc.lo: ../../../../opcodes/mep-desc.c
	/bin/sh ./libtool --mode=compile $(CC) $(OPCODES_COMPILE_FLAGS) $(CFLAGS) -c $<

DEJAGNUTESTS = mep-allinsn.exp mep-arch.exp
.PHONY: check-local
check-local:
	(cd ../../testsuite ; $(MAKE) check RUNTESTFLAGS="$(RUNTESTFLAGS) $(DEJAGNUTESTS)")

cgendir = $(srcdir)/../../../../cgen
CGENFLAGS = -v

CGENDEPS = ../../../../cgen/stamp-cgen \
        $(cgendir)/sim-arch.scm  $(cgendir)/sim-decode.scm \
        $(cgendir)/sim-test.scm  $(cgendir)/sim-cpu.scm \
        $(cgendir)/sim-model.scm $(cgendir)/sim.scm

CPU_TARGETS = mep-core1 mep-cop1-16 mep-cop1-32 mep-cop1-48 mep-cop1-64

CPU_LIST = mep,ext_core1,ext_cop1_16,ext_cop1_32,ext_cop1_48,ext_cop1_64

CGEN_TARGETS = mep-cpudesc mep-decsemdefs $(CPU_TARGETS)
.PHONY: $(CGEN_TARGETS)

.PHONY: cgen-all
cgen-all: $(CGEN_TARGETS)

# begin-cpus
mep-core1:
	$(SHELL) ../CGEN.sh cpu-decode $(srcdir) $(cgendir) "$(CGENFLAGS)" \
	mep "with-multiple-isa with-scache with-profile=fn" mep_ext1 ext_core1 $(CGEN_MACH) mepcore1 "mep-core1-" \
	$(cgendir)/cpu/mep.cpu \
	"decode.h decode.cxx model.h model.cxx semantics.cxx defs.h"
mep-cop1-16:
	$(SHELL) ../CGEN.sh cpu-decode $(srcdir) $(cgendir) "$(CGENFLAGS)" \
	mep "with-multiple-isa with-scache with-profile=fn" mep_ext1 ext_cop1_16 $(CGEN_MACH) mepcop1_16 "mep-cop1-16-" \
	$(cgendir)/cpu/mep.cpu \
	"decode.h decode.cxx model.h model.cxx semantics.cxx defs.h"
mep-cop1-32:
	$(SHELL) ../CGEN.sh cpu-decode $(srcdir) $(cgendir) "$(CGENFLAGS)" \
	mep "with-multiple-isa with-scache with-profile=fn" mep_ext1 ext_cop1_32 $(CGEN_MACH) mepcop1_32 "mep-cop1-32-" \
	$(cgendir)/cpu/mep.cpu \
	"decode.h decode.cxx model.h model.cxx semantics.cxx defs.h"
mep-cop1-48:
	$(SHELL) ../CGEN.sh cpu-decode $(srcdir) $(cgendir) "$(CGENFLAGS)" \
	mep "with-multiple-isa with-scache with-profile=fn" mep_ext1 ext_cop1_48 $(CGEN_MACH) mepcop1_48 "mep-cop1-48-" \
	$(cgendir)/cpu/mep.cpu \
	"decode.h decode.cxx model.h model.cxx semantics.cxx defs.h"
mep-cop1-64:
	$(SHELL) ../CGEN.sh cpu-decode $(srcdir) $(cgendir) "$(CGENFLAGS)" \
	mep "with-multiple-isa with-scache with-profile=fn" mep_ext1 ext_cop1_64 $(CGEN_MACH) mepcop1_64 "mep-cop1-64-" \
	$(cgendir)/cpu/mep.cpu \
	"decode.h decode.cxx model.h model.cxx semantics.cxx defs.h"
# end-cpus
mep-cpudesc:
	$(SHELL) ../CGEN.sh cpu-decode $(srcdir) $(cgendir) "$(CGENFLAGS)" \
	mep "with-multiple-isa with-scache" mep $(CPU_LIST) $(CGEN_MACH) "" "mep-" \
	$(cgendir)/cpu/mep.cpu \
	"desc.h cpu.h"

mep-decsemdefs:
	$(SHELL) ../CGEN.sh cpu-decode $(srcdir) $(cgendir) "$(CGENFLAGS)" \
	mep "with-multiple-isa with-scache with-profile=fn" mep_basic mep $(CGEN_MACH) mep "mep-" \
	$(cgendir)/cpu/mep.cpu \
	"decode.h decode.cxx model.h model.cxx semantics.cxx defs.h"

html_stylesheet=$(srcdir)/../../component_html.xsl
include $(srcdir)/../../../config/Makefile.docs
@


1.5
log
@Fix source files list in sid/component/cgen-cpu/mep/Makefile.am.

sid/component/cgen-cpu/mep/
	* Makefile.am (CPU_SOURCES): Replace mep-ivc2.cxx with
	ivc2-cop.cxx.
	* Makefile.in: Regenerate.
@
text
@d4 1
a4 1
ACLOCAL_AMFLAGS = -I $(srcdir)/../../../config
@


1.4
log
@Index: sid/component/cgen-cpu/mep

* Makefile.am: Regenerate.
* Makefile.in: Regenerate.
* common_model.cxx: Regenerate.
* mep-core1-decode.cxx: Regenerate.
* mep-core1-sem: Regenerate.
* mep-cpu.h: Regenerate.
* mep-decode.cxx: Regenerate.
* mep-desc.h: Regenerate.
* mep-sem.cxx: Regenerate.
* mep_ext1.h: Regenerate.
* ivc2-cop.cxx: New.
* ivc2-cpu.h: New.
* ivc2.h: New.
* mep-cop1-16-decode.cxx: New.
* mep-cop1-16-decode.h: New.
* mep-cop1-16-defs.h: New.
* mep-cop1-16-model.cxx: New.
* mep-cop1-16-model.h: New.
* mep-cop1-16-sem.cxx: New.
* mep-cop1-32-decode.cxx: New.
* mep-cop1-32-decode.h: New.
* mep-cop1-32-defs.h: New.
* mep-cop1-32-model.cxx: New.
* mep-cop1-32-model.h: New.
* mep-cop1-32-sem.cxx: New.
* mep-cop1-48-decode.cxx: New.
* mep-cop1-48-decode.h: New.
* mep-cop1-48-defs.h: New.
* mep-cop1-48-model.cxx: New.
* mep-cop1-48-model.h: New.
* mep-cop1-48-sem.cxx: New.
* mep-cop1-64-decode.cxx: New.
* mep-cop1-64-decode.h: New.
* mep-cop1-64-defs.h: New.
* mep-cop1-64-model.cxx: New.
* mep-cop1-64-model.h: New.
* mep-cop1-64-sem.cxx: New.

* mep.cxx (mep_cpu::mep_cpu): Add ivc2-decode? pin.
(mep_cpu::step_insns): Flush register write queu before looping,
and after each insn bundle.

* mep.h: Regenerate.
(mep_print_insn_set_ivc2_mode): Declare.
(mep_cpu): Add register write queues.  Add IVC2 support.
(decode_bundling): Likewise.
(step_one_insn): Likewise.

Index: sid/main/dynamic

* mainDynamic: Regenerate.
* mepCfg.cxx (MepBoardCfg::set_ivc2_decode): New.
* mepCfg.h (MepBoardCfg::set_ivc2_decode): Add.
@
text
@d14 1
a14 1
CPU_SOURCES = mep-core1-decode.cxx mep-core1-sem.cxx mep-core1-model.cxx mep-cop1-16-decode.cxx mep-cop1-16-sem.cxx mep-cop1-16-model.cxx mep-cop1-32-decode.cxx mep-cop1-32-sem.cxx mep-cop1-32-model.cxx mep-cop1-48-decode.cxx mep-cop1-48-sem.cxx mep-cop1-48-model.cxx mep-cop1-64-decode.cxx mep-cop1-64-sem.cxx mep-cop1-64-model.cxx mep-ivc2.cxx
@


1.3
log
@[cgen]
	* cpu/mep-c5.cpu: New.
	* cpu/mep-core.cpu: Add C5 support.
	* cpu/mep.opc: Likewise.
[opcodes]
	* mep-asm.c: Regenerate.
	* mep-desc.c: Regenerate.
	* mep-desc.h: Regenerate.
	* mep-dis.c: Regenerate.
	* mep-ibld.c: Regenerate.
	* mep-opc.c: Regenerate.
	* mep-opc.h: Regenerate.
[sid]
	* component/cache/cache.cxx (cache_component::cache_component):
	Add write_hint_pin().  Attach it to write-hint.
	(cache_component::write_hint): New.
	* component/cache/cache.h (write_hint_pin): New.
	(write_hint): New.

	* component/cgen-cpu/mep/Makefile.am: Regenerate.
	* component/cgen-cpu/mep/Makefile.in: Regenerate.
	* component/cgen-cpu/mep/mep-core1-decode.cxx: Regenerate.
	* component/cgen-cpu/mep/mep-core1-decode.h: Regenerate.
	* component/cgen-cpu/mep/mep-core1-defs.h: Regenerate.
	* component/cgen-cpu/mep/mep-core1-model.cxx: Regenerate.
	* component/cgen-cpu/mep/mep-core1-model.h: Regenerate.
	* component/cgen-cpu/mep/mep-core1-sem.cxx: Regenerate.
	* component/cgen-cpu/mep/mep-decode.cxx: Regenerate.
	* component/cgen-cpu/mep/mep-decode.h: Regenerate.
	* component/cgen-cpu/mep/mep-defs.h: Regenerate.
	* component/cgen-cpu/mep/mep-desc.h: Regenerate.
	* component/cgen-cpu/mep/mep-model.cxx: Regenerate.
	* component/cgen-cpu/mep/mep-model.h: Regenerate.
	* component/cgen-cpu/mep/mep-sem.cxx: Regenerate.
	* component/cgen-cpu/mep/mep.cxx (mep_cpu): Connect
	write-hint pin.
	(do_cache): Add C5 support.
	(do_cache_prefetch): Likewise.
	(do_casb3, do_cash3, do_casw3): New.
	* component/cgen-cpu/mep/mep.h: Add C5 support and write-hint pin.
	(do_casb3, do_cash3, do_casw3): New.

	* component/families/mep/Makefile.in: Regenerate.
	* component/families/mep/dsu.in: Add C5 support.
	* main/dynamic/mainDynamic.cxx: Add C5 support.
	* main/dynamic/mepCfg.cxx: Connect write-hint pin.
	* main/dynamic/mepCfg.h: Add C5 support.
@
text
@d14 1
a14 1
CPU_SOURCES = mep-core1-decode.cxx mep-core1-sem.cxx mep-core1-model.cxx
d60 1
a60 1
CPU_TARGETS = mep-core1
d62 1
a62 1
CPU_LIST = mep,ext_core1
d76 20
@


1.2
log
@* compCGEN.cxx: Update to new MeP configuration.
* Makefile.am: Update to new MeP configuration.
* Makefile.in: Likewise.
* common_model.cxx: Likewise.
* mep-core1-decode.cxx: Likewise.
* mep-cpu.h: Likewise.
* mep-decode.cxx: Likewise.
* mep-desc.h: Likewise.
* mep.h: Likewise.
* mm_int.h (no_relation_component): Update to new MeP configuration.
* mepCfg.cxx (MepMemCfg): Update to new MeP configuration.
* mainDynamic.cxx (mk_sample): Update to new MeP configuration.
@
text
@d20 1
a20 1
CGEN_MACH = mep
@


1.1
log
@Support for Toshiba MeP.
@
text
@d14 1
a14 1
CPU_SOURCES = mep-core1-decode.cxx mep-core1-sem.cxx mep-core1-model.cxx mep-core2-decode.cxx mep-core2-sem.cxx mep-core2-model.cxx mep-cop2-16-decode.cxx mep-cop2-16-sem.cxx mep-cop2-16-model.cxx mep-cop2-32-decode.cxx mep-cop2-32-sem.cxx mep-cop2-32-model.cxx mep-cop2-48-decode.cxx mep-cop2-48-sem.cxx mep-cop2-48-model.cxx mep-cop2-64-decode.cxx mep-cop2-64-sem.cxx mep-cop2-64-model.cxx fmax-fp.cxx fmax-fpu.cxx
d60 1
a60 1
CPU_TARGETS = mep-core1 mep-core2 mep-cop2-16 mep-cop2-32 mep-cop2-48 mep-cop2-64
d62 1
a62 1
CPU_LIST = mep,ext_core1,ext_core2,ext_cop2_16,ext_cop2_32,ext_cop2_48,ext_cop2_64
a75 25
mep-core2:
	$(SHELL) ../CGEN.sh cpu-decode $(srcdir) $(cgendir) "$(CGENFLAGS)" \
	mep "with-multiple-isa with-scache with-profile=fn" mep_ext2 ext_core2 $(CGEN_MACH) mepcore2 "mep-core2-" \
	$(cgendir)/cpu/mep.cpu \
	"decode.h decode.cxx model.h model.cxx semantics.cxx defs.h"
mep-cop2-16:
	$(SHELL) ../CGEN.sh cpu-decode $(srcdir) $(cgendir) "$(CGENFLAGS)" \
	mep "with-multiple-isa with-scache with-profile=fn" mep_ext2 ext_cop2_16 $(CGEN_MACH) mepcop2_16 "mep-cop2-16-" \
	$(cgendir)/cpu/mep.cpu \
	"decode.h decode.cxx model.h model.cxx semantics.cxx defs.h"
mep-cop2-32:
	$(SHELL) ../CGEN.sh cpu-decode $(srcdir) $(cgendir) "$(CGENFLAGS)" \
	mep "with-multiple-isa with-scache with-profile=fn" mep_ext2 ext_cop2_32 $(CGEN_MACH) mepcop2_32 "mep-cop2-32-" \
	$(cgendir)/cpu/mep.cpu \
	"decode.h decode.cxx model.h model.cxx semantics.cxx defs.h"
mep-cop2-48:
	$(SHELL) ../CGEN.sh cpu-decode $(srcdir) $(cgendir) "$(CGENFLAGS)" \
	mep "with-multiple-isa with-scache with-profile=fn" mep_ext2 ext_cop2_48 $(CGEN_MACH) mepcop2_48 "mep-cop2-48-" \
	$(cgendir)/cpu/mep.cpu \
	"decode.h decode.cxx model.h model.cxx semantics.cxx defs.h"
mep-cop2-64:
	$(SHELL) ../CGEN.sh cpu-decode $(srcdir) $(cgendir) "$(CGENFLAGS)" \
	mep "with-multiple-isa with-scache with-profile=fn" mep_ext2 ext_cop2_64 $(CGEN_MACH) mepcop2_64 "mep-cop2-64-" \
	$(cgendir)/cpu/mep.cpu \
	"decode.h decode.cxx model.h model.cxx semantics.cxx defs.h"
@

