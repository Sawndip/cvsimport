head	1.1;
access;
symbols
	sid-snapshot-20180601:1.1
	sid-snapshot-20180501:1.1
	sid-snapshot-20180401:1.1
	sid-snapshot-20180301:1.1
	sid-snapshot-20180201:1.1
	sid-snapshot-20180101:1.1
	sid-snapshot-20171201:1.1
	sid-snapshot-20171101:1.1
	sid-snapshot-20171001:1.1
	sid-snapshot-20170901:1.1
	sid-snapshot-20170801:1.1
	sid-snapshot-20170701:1.1
	sid-snapshot-20170601:1.1
	sid-snapshot-20170501:1.1
	sid-snapshot-20170401:1.1
	sid-snapshot-20170301:1.1
	sid-snapshot-20170201:1.1
	sid-snapshot-20170101:1.1
	sid-snapshot-20161201:1.1
	sid-snapshot-20161101:1.1
	sid-snapshot-20160901:1.1
	sid-snapshot-20160801:1.1
	sid-snapshot-20160701:1.1
	sid-snapshot-20160601:1.1
	sid-snapshot-20160501:1.1
	sid-snapshot-20160401:1.1
	sid-snapshot-20160301:1.1
	sid-snapshot-20160201:1.1
	sid-snapshot-20160101:1.1
	sid-snapshot-20151201:1.1
	sid-snapshot-20151101:1.1
	sid-snapshot-20151001:1.1
	sid-snapshot-20150901:1.1
	sid-snapshot-20150801:1.1
	sid-snapshot-20150701:1.1
	sid-snapshot-20150601:1.1
	sid-snapshot-20150501:1.1
	sid-snapshot-20150401:1.1
	sid-snapshot-20150301:1.1
	sid-snapshot-20150201:1.1
	sid-snapshot-20150101:1.1
	sid-snapshot-20141201:1.1
	sid-snapshot-20141101:1.1
	sid-snapshot-20141001:1.1
	sid-snapshot-20140901:1.1
	sid-snapshot-20140801:1.1
	sid-snapshot-20140701:1.1
	sid-snapshot-20140601:1.1
	sid-snapshot-20140501:1.1
	sid-snapshot-20140401:1.1
	sid-snapshot-20140301:1.1
	sid-snapshot-20140201:1.1
	sid-snapshot-20140101:1.1
	sid-snapshot-20131201:1.1
	sid-snapshot-20131101:1.1
	sid-snapshot-20131001:1.1
	sid-snapshot-20130901:1.1
	sid-snapshot-20130801:1.1
	sid-snapshot-20130701:1.1
	sid-snapshot-20130601:1.1
	sid-snapshot-20130501:1.1
	sid-snapshot-20130401:1.1
	sid-snapshot-20130301:1.1
	sid-snapshot-20130201:1.1
	sid-snapshot-20130101:1.1
	sid-snapshot-20121201:1.1
	sid-snapshot-20121101:1.1
	sid-snapshot-20121001:1.1
	sid-snapshot-20120901:1.1
	sid-snapshot-20120801:1.1
	sid-snapshot-20120701:1.1
	sid-snapshot-20120601:1.1
	sid-snapshot-20120501:1.1
	sid-snapshot-20120401:1.1
	sid-snapshot-20120301:1.1
	sid-snapshot-20120201:1.1
	sid-snapshot-20120101:1.1
	sid-snapshot-20111201:1.1
	sid-snapshot-20111101:1.1
	sid-snapshot-20111001:1.1
	sid-snapshot-20110901:1.1
	sid-snapshot-20110801:1.1
	sid-snapshot-20110701:1.1
	sid-snapshot-20110601:1.1
	sid-snapshot-20110501:1.1
	sid-snapshot-20110401:1.1
	sid-snapshot-20110301:1.1
	sid-snapshot-20110201:1.1
	sid-snapshot-20110101:1.1
	sid-snapshot-20101201:1.1
	sid-snapshot-20101101:1.1
	sid-snapshot-20101001:1.1
	sid-snapshot-20100901:1.1
	sid-snapshot-20100801:1.1
	sid-snapshot-20100701:1.1
	sid-snapshot-20100601:1.1
	sid-snapshot-20100501:1.1
	sid-snapshot-20100401:1.1
	sid-snapshot-20100301:1.1
	sid-snapshot-20100201:1.1
	sid-snapshot-20100101:1.1
	sid-snapshot-20091201:1.1
	sid-snapshot-20091101:1.1
	sid-snapshot-20091001:1.1
	sid-snapshot-20090901:1.1
	sid-snapshot-20090801:1.1
	sid-snapshot-20090701:1.1
	sid-snapshot-20090601:1.1
	sid-snapshot-20090501:1.1
	sid-snapshot-20090401:1.1
	sid-snapshot-20090301:1.1
	sid-snapshot-20090201:1.1
	sid-snapshot-20090101:1.1
	sid-snapshot-20081201:1.1
	sid-snapshot-20081101:1.1
	sid-snapshot-20081001:1.1
	sid-snapshot-20080901:1.1
	sid-snapshot-20080801:1.1
	sid-snapshot-20080701:1.1
	sid-snapshot-20080601:1.1
	sid-snapshot-20080501:1.1
	sid-snapshot-20080403:1.1
	sid-snapshot-20080401:1.1
	sid-snapshot-20080301:1.1
	sid-snapshot-20080201:1.1
	sid-snapshot-20080101:1.1
	sid-snapshot-20071201:1.1
	sid-snapshot-20071101:1.1
	sid-snapshot-20071001:1.1;
locks; strict;
comment	@ * @;


1.1
date	2007.02.05.20.28.40;	author brolley;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Support for Toshiba MeP.
@
text
@// Do not edit!!!!!!!
// This file was generated by MeP-Integrator

#include "mep.h"

#include "mep-core2-defs.h"
#include "mep-core2-decode.h"
#include "mep-core2-model.h"
#include "mep-cop2-16-defs.h"
#include "mep-cop2-16-decode.h"
#include "mep-cop2-16-model.h"
#include "mep-cop2-32-defs.h"
#include "mep-cop2-32-decode.h"
#include "mep-cop2-32-model.h"
#include "mep-cop2-48-defs.h"
#include "mep-cop2-48-decode.h"
#include "mep-cop2-48-model.h"
#include "mep-cop2-64-defs.h"
#include "mep-cop2-64-decode.h"
#include "mep-cop2-64-model.h"

#include "common_model.h"
#include "fmax-fpu.h"
#include "fmax-fp.h"
using sidutil::fmax_fp;

using namespace mep;

namespace mep_ext2 {
  class mep_ext2_cpu: public mep_cpu_vliw<mep_ext2_cpu,mepcore2_scache,mepcop2_16_scache,mepcop2_32_scache,mepcop2_48_scache,mepcop2_64_scache>
  {
  public:
    mep_ext2_cpu() :
      mep_cpu_vliw<mep_ext2_cpu,mepcore2_scache,mepcop2_16_scache,mepcop2_32_scache,mepcop2_48_scache,mepcop2_64_scache>
      (this,ISA_EXT_CORE2,ISA_EXT_COP2_16,ISA_EXT_COP2_32,ISA_EXT_COP2_48,ISA_EXT_COP2_64),
      my_core_model (this),
      my_cop16_model (this),
      my_cop32_model (this),
      my_cop48_model (this),
      my_cop64_model (this),
      fpu (this, new fmax_fp_ops)
    {}

    void core_model_insn_before (bool first_p = true) { my_core_model.model_insn_before (first_p); }
    void core_model_step_latency (sid::host_int_4 cycles = 0) { my_core_model.step_latency (cycles); }

    UINT model_before (mepcore2_scache* sem)
      {
        UINT stall = my_core_model.model_before (this, sem);
        if (stall) update_total_latency (stall);
        return stall;
      }

    UINT model_after (mepcore2_scache* sem) { return my_core_model.model_after (this, sem); }
    UINT model_after (mepcop2_16_scache* sem) { return my_cop16_model.model_after (this, sem); }
    UINT model_after (mepcop2_32_scache* sem) { return my_cop32_model.model_after (this, sem); }
    UINT model_after (mepcop2_48_scache* sem) { return my_cop48_model.model_after (this, sem); }
    UINT model_after (mepcop2_64_scache* sem) { return my_cop64_model.model_after (this, sem); }

    void core_model_insn_after (bool last_p = true, UINT cycles = 1) { my_core_model.model_insn_after (last_p, cycles); }

  public:
#include "fmax.h"

    fmax_fpu fpu;

  private:
    mep_common_model<mepcore2_mep_model, mep_ext2_cpu, mepcore2_idesc, mepcore2_scache> my_core_model;
    mep_common_model<mepcop2_16_mep_model, mep_ext2_cpu, mepcop2_16_idesc, mepcop2_16_scache> my_cop16_model;
    mep_common_model<mepcop2_32_mep_model, mep_ext2_cpu, mepcop2_32_idesc, mepcop2_32_scache> my_cop32_model;
    mep_common_model<mepcop2_48_mep_model, mep_ext2_cpu, mepcop2_48_idesc, mepcop2_48_scache> my_cop48_model;
    mep_common_model<mepcop2_64_mep_model, mep_ext2_cpu, mepcop2_64_idesc, mepcop2_64_scache> my_cop64_model;
  };

#define mep_ext2_hardware hardware
#define CGEN_CPU_FPU(cpu) (&cpu->fpu)
}
@
