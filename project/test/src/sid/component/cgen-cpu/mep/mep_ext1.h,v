head	1.3;
access;
symbols
	sid-snapshot-20180601:1.3
	sid-snapshot-20180501:1.3
	sid-snapshot-20180401:1.3
	sid-snapshot-20180301:1.3
	sid-snapshot-20180201:1.3
	sid-snapshot-20180101:1.3
	sid-snapshot-20171201:1.3
	sid-snapshot-20171101:1.3
	sid-snapshot-20171001:1.3
	sid-snapshot-20170901:1.3
	sid-snapshot-20170801:1.3
	sid-snapshot-20170701:1.3
	sid-snapshot-20170601:1.3
	sid-snapshot-20170501:1.3
	sid-snapshot-20170401:1.3
	sid-snapshot-20170301:1.3
	sid-snapshot-20170201:1.3
	sid-snapshot-20170101:1.3
	sid-snapshot-20161201:1.3
	sid-snapshot-20161101:1.3
	sid-snapshot-20160901:1.3
	sid-snapshot-20160801:1.3
	sid-snapshot-20160701:1.3
	sid-snapshot-20160601:1.3
	sid-snapshot-20160501:1.3
	sid-snapshot-20160401:1.3
	sid-snapshot-20160301:1.3
	sid-snapshot-20160201:1.3
	sid-snapshot-20160101:1.3
	sid-snapshot-20151201:1.3
	sid-snapshot-20151101:1.3
	sid-snapshot-20151001:1.3
	sid-snapshot-20150901:1.3
	sid-snapshot-20150801:1.3
	sid-snapshot-20150701:1.3
	sid-snapshot-20150601:1.3
	sid-snapshot-20150501:1.3
	sid-snapshot-20150401:1.3
	sid-snapshot-20150301:1.3
	sid-snapshot-20150201:1.3
	sid-snapshot-20150101:1.3
	sid-snapshot-20141201:1.3
	sid-snapshot-20141101:1.3
	sid-snapshot-20141001:1.3
	sid-snapshot-20140901:1.3
	sid-snapshot-20140801:1.3
	sid-snapshot-20140701:1.3
	sid-snapshot-20140601:1.3
	sid-snapshot-20140501:1.3
	sid-snapshot-20140401:1.3
	sid-snapshot-20140301:1.3
	sid-snapshot-20140201:1.3
	sid-snapshot-20140101:1.3
	sid-snapshot-20131201:1.3
	sid-snapshot-20131101:1.3
	sid-snapshot-20131001:1.3
	sid-snapshot-20130901:1.2
	sid-snapshot-20130801:1.2
	sid-snapshot-20130701:1.2
	sid-snapshot-20130601:1.2
	sid-snapshot-20130501:1.2
	sid-snapshot-20130401:1.2
	sid-snapshot-20130301:1.2
	sid-snapshot-20130201:1.2
	sid-snapshot-20130101:1.2
	sid-snapshot-20121201:1.2
	sid-snapshot-20121101:1.2
	sid-snapshot-20121001:1.2
	sid-snapshot-20120901:1.2
	sid-snapshot-20120801:1.2
	sid-snapshot-20120701:1.2
	sid-snapshot-20120601:1.2
	sid-snapshot-20120501:1.2
	sid-snapshot-20120401:1.2
	sid-snapshot-20120301:1.2
	sid-snapshot-20120201:1.2
	sid-snapshot-20120101:1.2
	sid-snapshot-20111201:1.2
	sid-snapshot-20111101:1.2
	sid-snapshot-20111001:1.2
	sid-snapshot-20110901:1.2
	sid-snapshot-20110801:1.2
	sid-snapshot-20110701:1.2
	sid-snapshot-20110601:1.2
	sid-snapshot-20110501:1.2
	sid-snapshot-20110401:1.2
	sid-snapshot-20110301:1.2
	sid-snapshot-20110201:1.2
	sid-snapshot-20110101:1.2
	sid-snapshot-20101201:1.2
	sid-snapshot-20101101:1.2
	sid-snapshot-20101001:1.2
	sid-snapshot-20100901:1.2
	sid-snapshot-20100801:1.2
	sid-snapshot-20100701:1.2
	sid-snapshot-20100601:1.2
	sid-snapshot-20100501:1.2
	sid-snapshot-20100401:1.2
	sid-snapshot-20100301:1.2
	sid-snapshot-20100201:1.2
	sid-snapshot-20100101:1.2
	sid-snapshot-20091201:1.2
	sid-snapshot-20091101:1.2
	sid-snapshot-20091001:1.2
	sid-snapshot-20090901:1.2
	sid-snapshot-20090801:1.2
	sid-snapshot-20090701:1.2
	sid-snapshot-20090601:1.2
	sid-snapshot-20090501:1.2
	sid-snapshot-20090401:1.1
	sid-snapshot-20090301:1.1
	sid-snapshot-20090201:1.1
	sid-snapshot-20090101:1.1
	sid-snapshot-20081201:1.1
	sid-snapshot-20081101:1.1
	sid-snapshot-20081001:1.1
	sid-snapshot-20080901:1.1
	sid-snapshot-20080801:1.1
	sid-snapshot-20080701:1.1
	sid-snapshot-20080601:1.1
	sid-snapshot-20080501:1.1
	sid-snapshot-20080403:1.1
	sid-snapshot-20080401:1.1
	sid-snapshot-20080301:1.1
	sid-snapshot-20080201:1.1
	sid-snapshot-20080101:1.1
	sid-snapshot-20071201:1.1
	sid-snapshot-20071101:1.1
	sid-snapshot-20071001:1.1;
locks; strict;
comment	@ * @;


1.3
date	2013.09.22.04.32.41;	author amodra;	state Exp;
branches;
next	1.2;

1.2
date	2009.04.30.21.18.37;	author dj;	state Exp;
branches;
next	1.1;

1.1
date	2007.02.05.20.28.40;	author brolley;	state Exp;
branches;
next	;


desc
@@


1.3
log
@sid/component/cgen-cpu/mep/
	* mep.h (mep_cpu_cgen::~mep_cpu_cgen): New.
	* mep_basic.h (mep_basic_cpu::~mep_basic_cpu): New.
	* mep_ext1.h (mep_ext1_cpu::~mep_ext1_cpu): New.
sid/component/cgen-cpu/sh/
	* sh.h (sh_cpu_impl::~sh_cpu_impl): New.
	* sh2a_model.cxx: Specify dependent base class function with 'this->'.
	* sh3_model.cxx: Likewise.
	* sh4.cxx: Likewise.
	* sh64.c: Include sysdep.h first.
sid/component/gloss/
	* angel.h (arm_angel::~arm_angel): New.
	* m32r.h (m32r_libgloss::~m32r_libgloss): New.
	* mips.h (mips32_idt::~mips32_idt): New.
sid/component/mmu/
	* armRemap.cxx (operator<<): Avoid redeclaration of "it".
@
text
@// Do not edit!!!!!!!
// This file was generated by MeP-Integrator

#include "mep.h"

#include "mep-core1-defs.h"
#include "mep-core1-decode.h"
#include "mep-core1-model.h"
#include "mep-cop1-16-defs.h"
#include "mep-cop1-16-decode.h"
#include "mep-cop1-16-model.h"
#include "mep-cop1-32-defs.h"
#include "mep-cop1-32-decode.h"
#include "mep-cop1-32-model.h"
#include "mep-cop1-48-defs.h"
#include "mep-cop1-48-decode.h"
#include "mep-cop1-48-model.h"
#include "mep-cop1-64-defs.h"
#include "mep-cop1-64-decode.h"
#include "mep-cop1-64-model.h"

#include "common_model.h"

using namespace mep;

namespace mep_ext1 {
  class mep_ext1_cpu: public mep_cpu_vliw<mep_ext1_cpu,mepcore1_scache,mepcop1_16_scache,mepcop1_32_scache,mepcop1_48_scache,mepcop1_64_scache>
  {
  public:
    mep_ext1_cpu() :
      mep_cpu_vliw<mep_ext1_cpu,mepcore1_scache,mepcop1_16_scache,mepcop1_32_scache,mepcop1_48_scache,mepcop1_64_scache>
      (this,ISA_EXT_CORE1,ISA_EXT_COP1_16,ISA_EXT_COP1_32,ISA_EXT_COP1_48,ISA_EXT_COP1_64),
      my_core_model (this),
      my_cop16_model (this),
      my_cop32_model (this),
      my_cop48_model (this),
      my_cop64_model (this)
    {}
    ~mep_ext1_cpu() throw() {}

    void core_model_insn_before (bool first_p = true) { my_core_model.model_insn_before (first_p); }
    void core_model_step_latency (sid::host_int_4 cycles = 0) { my_core_model.step_latency (cycles); }

    UINT model_before (mepcore1_scache* sem)
      {
        UINT stall = my_core_model.model_before (this, sem);
        if (stall) update_total_latency (stall);
        return stall;
      }

    UINT model_after (mepcore1_scache* sem) { return my_core_model.model_after (this, sem); }
    UINT model_after (mepcop1_16_scache* sem) { return my_cop16_model.model_after (this, sem); }
    UINT model_after (mepcop1_32_scache* sem) { return my_cop32_model.model_after (this, sem); }
    UINT model_after (mepcop1_48_scache* sem) { return my_cop48_model.model_after (this, sem); }
    UINT model_after (mepcop1_64_scache* sem) { return my_cop64_model.model_after (this, sem); }

    void core_model_insn_after (bool last_p = true, UINT cycles = 1) { my_core_model.model_insn_after (last_p, cycles); }

  public:
#include "ivc2.h"

  private:
    mep_common_model<mepcore1_mep_model, mep_ext1_cpu, mepcore1_idesc, mepcore1_scache> my_core_model;
    mep_common_model<mepcop1_16_mep_model, mep_ext1_cpu, mepcop1_16_idesc, mepcop1_16_scache> my_cop16_model;
    mep_common_model<mepcop1_32_mep_model, mep_ext1_cpu, mepcop1_32_idesc, mepcop1_32_scache> my_cop32_model;
    mep_common_model<mepcop1_48_mep_model, mep_ext1_cpu, mepcop1_48_idesc, mepcop1_48_scache> my_cop48_model;
    mep_common_model<mepcop1_64_mep_model, mep_ext1_cpu, mepcop1_64_idesc, mepcop1_64_scache> my_cop64_model;
  };

#define mep_ext1_hardware hardware
#define CGEN_CPU_FPU(cpu) (&cpu->fpu)
}
@


1.2
log
@Index: sid/component/cgen-cpu/mep

* Makefile.am: Regenerate.
* Makefile.in: Regenerate.
* common_model.cxx: Regenerate.
* mep-core1-decode.cxx: Regenerate.
* mep-core1-sem: Regenerate.
* mep-cpu.h: Regenerate.
* mep-decode.cxx: Regenerate.
* mep-desc.h: Regenerate.
* mep-sem.cxx: Regenerate.
* mep_ext1.h: Regenerate.
* ivc2-cop.cxx: New.
* ivc2-cpu.h: New.
* ivc2.h: New.
* mep-cop1-16-decode.cxx: New.
* mep-cop1-16-decode.h: New.
* mep-cop1-16-defs.h: New.
* mep-cop1-16-model.cxx: New.
* mep-cop1-16-model.h: New.
* mep-cop1-16-sem.cxx: New.
* mep-cop1-32-decode.cxx: New.
* mep-cop1-32-decode.h: New.
* mep-cop1-32-defs.h: New.
* mep-cop1-32-model.cxx: New.
* mep-cop1-32-model.h: New.
* mep-cop1-32-sem.cxx: New.
* mep-cop1-48-decode.cxx: New.
* mep-cop1-48-decode.h: New.
* mep-cop1-48-defs.h: New.
* mep-cop1-48-model.cxx: New.
* mep-cop1-48-model.h: New.
* mep-cop1-48-sem.cxx: New.
* mep-cop1-64-decode.cxx: New.
* mep-cop1-64-decode.h: New.
* mep-cop1-64-defs.h: New.
* mep-cop1-64-model.cxx: New.
* mep-cop1-64-model.h: New.
* mep-cop1-64-sem.cxx: New.

* mep.cxx (mep_cpu::mep_cpu): Add ivc2-decode? pin.
(mep_cpu::step_insns): Flush register write queu before looping,
and after each insn bundle.

* mep.h: Regenerate.
(mep_print_insn_set_ivc2_mode): Declare.
(mep_cpu): Add register write queues.  Add IVC2 support.
(decode_bundling): Likewise.
(step_one_insn): Likewise.

Index: sid/main/dynamic

* mainDynamic: Regenerate.
* mepCfg.cxx (MepBoardCfg::set_ivc2_decode): New.
* mepCfg.h (MepBoardCfg::set_ivc2_decode): Add.
@
text
@d39 1
@


1.1
log
@Support for Toshiba MeP.
@
text
@d9 12
d27 1
a27 1
  class mep_ext1_cpu: public mep_cpu_vliw<mep_ext1_cpu,mepcore1_scache,dummy_scache,dummy_scache,dummy_scache,dummy_scache>
d31 7
a37 3
      mep_cpu_vliw<mep_ext1_cpu,mepcore1_scache,dummy_scache,dummy_scache,dummy_scache,dummy_scache>
      (this,ISA_EXT_CORE1,ISA_MAX,ISA_MAX,ISA_MAX,ISA_MAX),
      my_core_model (this)
d51 4
a54 1
    UINT model_after (dummy_scache* sem) { return 1; }
d58 3
d63 4
d70 1
@

