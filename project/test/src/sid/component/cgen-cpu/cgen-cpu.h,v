head	1.19;
access;
symbols
	sid-snapshot-20180601:1.19
	sid-snapshot-20180501:1.19
	sid-snapshot-20180401:1.19
	sid-snapshot-20180301:1.19
	sid-snapshot-20180201:1.19
	sid-snapshot-20180101:1.19
	sid-snapshot-20171201:1.19
	sid-snapshot-20171101:1.19
	sid-snapshot-20171001:1.19
	sid-snapshot-20170901:1.19
	sid-snapshot-20170801:1.19
	sid-snapshot-20170701:1.19
	sid-snapshot-20170601:1.19
	sid-snapshot-20170501:1.19
	sid-snapshot-20170401:1.19
	sid-snapshot-20170301:1.19
	sid-snapshot-20170201:1.19
	sid-snapshot-20170101:1.19
	sid-snapshot-20161201:1.19
	sid-snapshot-20161101:1.19
	sid-snapshot-20160901:1.19
	sid-snapshot-20160801:1.19
	sid-snapshot-20160701:1.19
	sid-snapshot-20160601:1.19
	sid-snapshot-20160501:1.19
	sid-snapshot-20160401:1.19
	sid-snapshot-20160301:1.19
	sid-snapshot-20160201:1.19
	sid-snapshot-20160101:1.19
	sid-snapshot-20151201:1.19
	sid-snapshot-20151101:1.19
	sid-snapshot-20151001:1.19
	sid-snapshot-20150901:1.19
	sid-snapshot-20150801:1.19
	sid-snapshot-20150701:1.19
	sid-snapshot-20150601:1.19
	sid-snapshot-20150501:1.19
	sid-snapshot-20150401:1.19
	sid-snapshot-20150301:1.19
	sid-snapshot-20150201:1.19
	sid-snapshot-20150101:1.19
	sid-snapshot-20141201:1.19
	sid-snapshot-20141101:1.19
	sid-snapshot-20141001:1.19
	sid-snapshot-20140901:1.19
	sid-snapshot-20140801:1.19
	sid-snapshot-20140701:1.19
	sid-snapshot-20140601:1.19
	sid-snapshot-20140501:1.19
	sid-snapshot-20140401:1.19
	sid-snapshot-20140301:1.19
	sid-snapshot-20140201:1.19
	sid-snapshot-20140101:1.19
	sid-snapshot-20131201:1.19
	sid-snapshot-20131101:1.19
	sid-snapshot-20131001:1.19
	sid-snapshot-20130901:1.19
	sid-snapshot-20130801:1.19
	sid-snapshot-20130701:1.19
	sid-snapshot-20130601:1.19
	sid-snapshot-20130501:1.19
	sid-snapshot-20130401:1.19
	sid-snapshot-20130301:1.19
	sid-snapshot-20130201:1.19
	sid-snapshot-20130101:1.19
	sid-snapshot-20121201:1.19
	sid-snapshot-20121101:1.19
	sid-snapshot-20121001:1.19
	sid-snapshot-20120901:1.19
	sid-snapshot-20120801:1.19
	sid-snapshot-20120701:1.19
	sid-snapshot-20120601:1.19
	sid-snapshot-20120501:1.19
	sid-snapshot-20120401:1.19
	sid-snapshot-20120301:1.19
	sid-snapshot-20120201:1.19
	sid-snapshot-20120101:1.19
	sid-snapshot-20111201:1.19
	sid-snapshot-20111101:1.19
	sid-snapshot-20111001:1.19
	sid-snapshot-20110901:1.19
	sid-snapshot-20110801:1.19
	sid-snapshot-20110701:1.19
	sid-snapshot-20110601:1.19
	sid-snapshot-20110501:1.19
	sid-snapshot-20110401:1.19
	sid-snapshot-20110301:1.19
	sid-snapshot-20110201:1.19
	sid-snapshot-20110101:1.19
	sid-snapshot-20101201:1.19
	sid-snapshot-20101101:1.19
	sid-snapshot-20101001:1.19
	sid-snapshot-20100901:1.19
	sid-snapshot-20100801:1.19
	sid-snapshot-20100701:1.19
	sid-snapshot-20100601:1.19
	sid-snapshot-20100501:1.19
	sid-snapshot-20100401:1.19
	sid-snapshot-20100301:1.19
	sid-snapshot-20100201:1.19
	sid-snapshot-20100101:1.19
	sid-snapshot-20091201:1.19
	sid-snapshot-20091101:1.19
	sid-snapshot-20091001:1.18
	sid-snapshot-20090901:1.18
	sid-snapshot-20090801:1.18
	sid-snapshot-20090701:1.18
	sid-snapshot-20090601:1.18
	sid-snapshot-20090501:1.18
	sid-snapshot-20090401:1.18
	sid-snapshot-20090301:1.18
	sid-snapshot-20090201:1.18
	sid-snapshot-20090101:1.18
	sid-snapshot-20081201:1.18
	sid-snapshot-20081101:1.18
	sid-snapshot-20081001:1.18
	sid-snapshot-20080901:1.18
	sid-snapshot-20080801:1.18
	sid-snapshot-20080701:1.18
	sid-snapshot-20080601:1.18
	sid-snapshot-20080501:1.18
	sid-snapshot-20080403:1.18
	sid-snapshot-20080401:1.18
	sid-snapshot-20080301:1.18
	sid-snapshot-20080201:1.18
	sid-snapshot-20080101:1.18
	sid-snapshot-20071201:1.18
	sid-snapshot-20071101:1.18
	sid-snapshot-20071001:1.18
	sid-20020905-branchpoint:1.8
	sid-20020905-branch:1.8.0.2
	cygnus_cvs_20020108_pre:1.7;
locks; strict;
comment	@ * @;


1.19
date	2009.10.24.00.45.54;	author devans;	state Exp;
branches;
next	1.18;

1.18
date	2006.06.20.18.31.51;	author brolley;	state Exp;
branches;
next	1.17;

1.17
date	2006.05.10.20.58.29;	author brolley;	state Exp;
branches;
next	1.16;

1.16
date	2005.10.28.19.53.33;	author brolley;	state Exp;
branches;
next	1.15;

1.15
date	2005.08.19.19.42.25;	author brolley;	state Exp;
branches;
next	1.14;

1.14
date	2005.06.30.20.27.23;	author fche;	state Exp;
branches;
next	1.13;

1.13
date	2005.06.03.20.25.39;	author jimb;	state Exp;
branches;
next	1.12;

1.12
date	2005.05.10.15.46.16;	author brolley;	state Exp;
branches;
next	1.11;

1.11
date	2005.02.12.16.25.45;	author fche;	state Exp;
branches;
next	1.10;

1.10
date	2004.06.25.17.44.36;	author brolley;	state Exp;
branches;
next	1.9;

1.9
date	2003.01.15.20.04.57;	author brolley;	state Exp;
branches;
next	1.8;

1.8
date	2002.02.07.17.32.28;	author fche;	state Exp;
branches;
next	1.7;

1.7
date	2001.12.28.21.16.49;	author fche;	state Exp;
branches;
next	1.6;

1.6
date	2001.11.08.21.55.11;	author fche;	state Exp;
branches;
next	1.5;

1.5
date	2001.08.04.12.04.47;	author bje;	state Exp;
branches;
next	1.4;

1.4
date	2001.08.03.06.02.42;	author mrg;	state Exp;
branches;
next	1.3;

1.3
date	2001.06.28.21.54.08;	author jjohnstn;	state Exp;
branches;
next	1.2;

1.2
date	2001.04.03.06.21.57;	author bje;	state Exp;
branches;
next	1.1;

1.1
date	2000.12.07.19.30.47;	author fche;	state Exp;
branches;
next	;


desc
@@


1.19
log
@	* cgen-cpu.h: Update for new location of cgen/bitset.h.
	* tracedis.h: Ditto.

Plus update generated files to pick up two cgen changes:
1)
	* desc-cpu.scm (/gen-hash-defines): Remove #include of cgen-bitset.h.
	* sid-cpu.scm (cgen-desc.h): Update location of cgen's bitset.h.
2)
	* utils-sim.scm (/gen-set-itype-and-extract): New function.
	(/gen-bracketed-set-itype-and-extract): New function.
	(/gen-decode-default-entry): Rewrite.
	(/table-guts-to-mask, /all-opcode-bits-used?): New functions.
	(/gen-decode-insn-entry): New arg table-guts-thus-far, all callers
	updated.  Don't unnecessarily emit check for whether all opcode bits
	have been examined.
	(/gen-decode-expr-set-itype): Delete.
	(/gen-decode-expr-entry): Update.
	(/gen-decode-table-entry): New arg table-guts-thus-far, all callers
	updated.  Keep track of decoder tables used thus far.
	(/gen-decoder-switch): Ditto.
@
text
@// cgen-cpu.h  -*- C++ -*-

// Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005 Red Hat.
// This file is part of SID and is licensed under the GPL.
// See the file COPYING.SID for conditions for redistribution.

#ifndef CGEN_CPU_H
#define CGEN_CPU_H

#include <sidcomp.h>
#include <sidso.h>
#include <sidtypes.h>
#include <sidcomputil.h>
#include <sidattrutil.h>
#include <sidpinutil.h>
#include <sidbusutil.h>
#include <sidcpuutil.h>
#include <sidwatchutil.h>
#include <sidmiscutil.h>
#include <sidpinattrutil.h>

#include "cgen-types.h"
#include "cgen-ops.h"
#include "cgen-engine.h"

#include "bfd.h"
#include "dis-asm.h"
#include "cgen/bitset.h"

// ansidecl.h interferes with this perfectly ordinary word
#undef AND

#include <vector>
#include <string>
#include <cstdlib>
#include <ctime>
#include <unistd.h>


using namespace std;
using namespace sid;
using namespace sidutil;

namespace cgen 
{

  // Mix-in class for cgen cpus.
  // For simplicity, assume they are all bi-endian.
class cgen_bi_endian_cpu: public basic_bi_endian_cpu
{
protected:
  // Types of supported engines.  Not all cpus support all engines.
  enum engine_type {
    ENGINE_UNKNOWN, ENGINE_SIMPLE, ENGINE_SCACHE, ENGINE_PBB
  };
  engine_type engine_type;
  virtual string get_engine_type ();
  virtual component::status set_engine_type (const string& s);

public:
  // true -> print execution warning messages and signal debugger
  // [what it is is at the programmer's whim]
  bool warnings_enabled;

  // Print messages here.  
  // Cover fns to start/end insn tracing.
  void begin_trace (PCADDR pc, const char* insn_name);
  void end_trace ();
  // Disassembly tracing support
  void disassemble (PCADDR pc, disassembler_ftype printfn,
		    enum bfd_flavour flavour, enum bfd_architecture arch,
		    enum bfd_endian endian, const char *name, CGEN_BITSET *isas = 0, int machine = 0);
  string symbol_at_address;
  struct disassemble_info info;
  component *loader;
  output_pin disassembly_symbol_address_pin;

protected:
  static int cgen_read_memory (bfd_vma memaddr, bfd_byte *myaddr,
		     unsigned int length,
		     struct disassemble_info *info);
  static void cgen_print_address(bfd_vma addr, struct disassemble_info *info);
  static void cgen_memory_error(int status, bfd_vma memaddr,
		       struct disassemble_info *info);
  static int cgen_symbol_at_address(bfd_vma addr, struct disassemble_info * info);
  // Counter tracing support
  virtual void trace_counter (PCADDR pc);

public:
  // Called by semantic code to perform branches.
  virtual void
  branch (PCADDR new_pc, PCADDR& npc, sem_status& status)
  {
    branch_was_return = false;
  }

  // Called by the semantic code at the end of a non-cti insn.
  // Make this a NOP; ordinary sequential PC stepping is done
  // elsewhere.
  virtual void done_insn (PCADDR npc, sem_status& status) {}
     
  // Called by the semantic code at the end of a cti insn.
  virtual void
  done_cti_insn (PCADDR npc, sem_status& status)
  {
    if (branch_was_return)
      this->cg_return_pin.drive (npc);
    branch_was_return = false;
  }

  virtual void notify_ret (sid::host_int_4 addr) { branch_was_return = true; last_caller = addr; last_callee = 0; }

protected:
  bool branch_was_return;

public:
  cgen_bi_endian_cpu ();
  ~cgen_bi_endian_cpu () throw();

public:
  // rtl memory access methods
  inline QI
  GETMEMQI(PCADDR pc, ADDR addr)
    {
      return this->read_data_memory_1 (pc, addr);
    }
  inline UQI
  GETMEMUQI(PCADDR pc, ADDR addr)
    {
      return this->read_data_memory_1 (pc, addr);
    }
  inline void
  SETMEMBI(PCADDR pc, ADDR addr, BI value)
    {
      return this->write_data_memory_1 (pc, addr, value);
    }
  inline void
  SETMEMQI(PCADDR pc, ADDR addr, QI value)
    {
      return this->write_data_memory_1 (pc, addr, value);
    }
  inline void
  SETMEMUQI(PCADDR pc, ADDR addr, UQI value)
    {
      return this->write_data_memory_1 (pc, addr, value);
    }
  inline HI
  GETMEMHI(PCADDR pc, ADDR addr)
    {
      return this->read_data_memory_2 (pc, addr);
    }
  inline UHI
  GETMEMUHI(PCADDR pc, ADDR addr)
    {
      return this->read_data_memory_2 (pc, addr);
    }
  inline void
  SETMEMHI(PCADDR pc, ADDR addr, HI value)
    {
      return this->write_data_memory_2 (pc, addr, value);
    }
  inline void
  SETMEMUHI(PCADDR pc, ADDR addr, UHI value)
    {
      return this->write_data_memory_2 (pc, addr, value);
    }
  inline SI
  GETMEMSI(PCADDR pc, ADDR addr)
    {
      return this->read_data_memory_4 (pc, addr);
    }
  inline void
  SETMEMSI(PCADDR pc, ADDR addr, SI value)
    {
      return this->write_data_memory_4 (pc, addr, value);
    }
  inline USI
  GETMEMUSI(PCADDR pc, ADDR addr)
    {
      return this->read_data_memory_4 (pc, addr);
    }
  inline void
  SETMEMUSI(PCADDR pc, ADDR addr, USI value)
    {
      return this->write_data_memory_4 (pc, addr, value);
    }
  inline DI
  GETMEMDI(PCADDR pc, ADDR addr)
    {
      return this->read_data_memory_8 (pc, addr);
    }
  inline void
  SETMEMDI(PCADDR pc, ADDR addr, DI value)
    {
      return this->write_data_memory_8 (pc, addr, value);
    }
  inline void
  SETMEMUDI(PCADDR pc, ADDR addr, UDI value)
    {
      return this->write_data_memory_8 (pc, addr, value);
    }

  // floats (can you think of a better way to do this?)
  inline SF
  GETMEMSF(PCADDR pc, IADDR addr)
    {
      SI iv = this->read_data_memory_4 (pc, addr);
      return * (SF *)(char *)(& iv);
    }
  inline void
  SETMEMSF(PCADDR pc, ADDR addr, SF value)
    {
      SI iv = * (SI *)(char *)(& value);      
      return this->write_data_memory_4 (pc, addr, iv);
    }

  inline DF
  GETMEMDF(PCADDR pc, IADDR addr)
    {
      DI iv = this->read_data_memory_8 (pc, addr);
      return * (DF *)(char *)(& iv);
    }
  inline void
  SETMEMDF(PCADDR pc, ADDR addr, DF value)
    {
      DI iv = * (DI *)(char *)(& value);      
      return this->write_data_memory_8 (pc, addr, iv);
    }

  // IMEM: instruction memory calls

  inline QI
  GETIMEMQI(PCADDR pc, IADDR addr)
    {
      return this->read_insn_memory_1 (pc, addr);
    }
  inline void
  SETIMEMQI(PCADDR pc, ADDR addr, QI value)
    {
      return this->write_insn_memory_1 (pc, addr, value);
    }
  inline UQI
  GETIMEMUQI(PCADDR pc, IADDR addr)
    {
      return this->read_insn_memory_1 (pc, addr);
    }
  inline void
  SETIMEMUQI(PCADDR pc, ADDR addr, UQI value)
    {
      return this->write_insn_memory_1 (pc, addr, value);
    }
  inline HI
  GETIMEMHI(PCADDR pc, IADDR addr)
    {
      return this->read_insn_memory_2 (pc, addr);
    }
  inline void
  SETIMEMHI(PCADDR pc, ADDR addr, HI value)
    {
      return this->write_insn_memory_2 (pc, addr, value);
    }
  inline UHI
  GETIMEMUHI(PCADDR pc, IADDR addr)
    {
      return this->read_insn_memory_2 (pc, addr);
    }
  inline void
  SETIMEMUHI(PCADDR pc, ADDR addr, UHI value)
    {
      return this->write_insn_memory_2 (pc, addr, value);
    }
  inline SI
  GETIMEMSI(PCADDR pc, IADDR addr)
    {
      return this->read_insn_memory_4 (pc, addr);
    }
  inline void
  SETIMEMSI(PCADDR pc, ADDR addr, SI value)
    {
      return this->write_insn_memory_4 (pc, addr, value);
    }
  inline USI
  GETIMEMUSI(PCADDR pc, IADDR addr)
    {
      return this->read_insn_memory_4 (pc, addr);
    }
  inline void
  SETIMEMUSI(PCADDR pc, ADDR addr, USI value)
    {
      return this->write_insn_memory_4 (pc, addr, value);
    }
  inline DI
  GETIMEMDI(PCADDR pc, IADDR addr)
    {
      return this->read_insn_memory_8 (pc, addr);
    }
  inline void
  SETIMEMDI(PCADDR pc, ADDR addr, DI value)
    {
      return this->write_insn_memory_8 (pc, addr, value);
    }
  inline UDI
  GETIMEMUDI(PCADDR pc, IADDR addr)
    {
      return this->read_insn_memory_8 (pc, addr);
    }
  inline void
  SETIMEMUDI(PCADDR pc, ADDR addr, UDI value)
    {
      return this->write_insn_memory_8 (pc, addr, value);
    }



};

} // namespace cgen

#endif /* CGEN_CPU_H */
@


1.18
log
@2006-06-20  Dave Brolley  <brolley@@redhat.com>

        * compCGEN.cxx (cgen_bi_endian_cpu): Initialize loader. Add "loader"
        relation and "disassembly-symbol-address" pin.
        (cgen_print_address): Call cgen_symbol_at_address and print the
        symbol name.
        (cgen_symbol_at_address): Implemented.
        * cgen-cpu.h (class cgen_bi_endian_cpu): Add symbol_at_address,
        loader and disassembly_symbol_address_pin.
@
text
@d28 1
a28 1
#include "opcode/cgen-bitset.h"
@


1.17
log
@2006-05-10  Dave Brolley  <brolley@@redhat.com>

        * cgen-cpu.h (trace_counter): Now virtual.
        (SETMEMBI): Write to data memory
        (class cgen_bi_endian_cpu, class cgen_bi_endian_cpu)
        (class cgen_bi_endian_cpu, class cgen_bi_endian_cpu): Read/write
        from data memory.
@
text
@d73 1
d75 3
@


1.16
log
@2005-10-28  Dave Brolley  <brolley@@redhat.com>

        Contribute the following changes:
        2003-10-07  Dave Brolley  <brolley@@redhat.com>

        * tracedis.cxx (cgen_disassemble): Rename isa_mask to isas. Now
        (CGEN_ISA_MASK*).
        * tracedis.h (opcode/cgen-bitset.h): #include it.
        (cgen_disassemble): Rename isa_mask to isas. Now
        (CGEN_ISA_MASK*).
        (cgen_bi_endian_cpu::disassemble): 'isas' now (CGEN_ISA_MASK *).
        * cgen-cpu.h (opcode/cgen-bitset.h): #include it.
        (cgen_bi_endian_cpu::disassemble): 'isas' now (CGEN_ISA_MASK *).
        * compCGEN.cxx (cgen_disassemble): Rename isa_mask to isas. Now
        (CGEN_ISA_MASK*).
@
text
@d83 1
a83 1
  void trace_counter (PCADDR pc);
d131 1
a131 1
      return this->write_insn_memory_1 (pc, addr, value);
d203 1
a203 1
      SI iv = this->read_insn_memory_4 (pc, addr);
d210 1
a210 1
      return this->write_insn_memory_4 (pc, addr, iv);
d216 1
a216 1
      DI iv = this->read_insn_memory_8 (pc, addr);
d223 1
a223 1
      return this->write_insn_memory_8 (pc, addr, iv);
@


1.15
log
@2005-08-19  Dave Brolley  <brolley@@redhat.com>

        * Contribute the following changes:

        2005-07-13  Dave Brolley  <brolley@@redhat.com>

        * cgen-cpu.h (notify_ret): Set last_caller and last_callee.

        2005-05-29  Dave Brolley  <brolley@@redhat.com>

        * cgen-cpu.h (branch, done_insn, done_cti_insn, notify_ret):
        New virtual overrides.
        (was_return): New member of cgen_bi_endian_cpu.
@
text
@d28 1
d72 1
a72 1
		    enum bfd_endian endian, const char *name, unsigned long isa_mask = 0, int machine = 0);
@


1.14
log
@2005-06-30  Frank Ch. Eigler  <fche@@elastic.org>

	* cgen-cpu.h (GETMEM?F, SETMEM?F): Use pointer-cast-based
	integer/float reinterpration instead of reinterpret_cast<>.
@
text
@d3 1
a3 1
// Copyright (C) 2000, 2001, 2002, 2003, 2004 Red Hat.
d85 27
@


1.13
log
@* cgen-cpu.h: Remove references to CGEN bitset type.

* configure.in: Don't forget to AC_SUBST the value of cpu_defs.
* configure: Regenerated.
@
text
@d175 2
a176 1
      return reinterpret_cast<SF>(this->read_insn_memory_4 (pc, addr));
d181 2
a182 1
      return this->write_insn_memory_4 (pc, addr, reinterpret_cast<USI>(value));
d188 2
a189 1
      return reinterpret_cast<DF>(this->read_insn_memory_8 (pc, addr));
d194 2
a195 1
      return this->write_insn_memory_8 (pc, addr, reinterpret_cast<UDI>(value));
@


1.12
log
@2005-05-10  Dave Brolley  <brolley@@redhat.com>

        * configure.in: Set 'comp_defs' with extra defines needed by Solaris.
        * configure: Regenerated.
        * Makefile.am (CXXFLAGS): Set it to @@comp_defs@@.
        * Makefile.in: Regenerated.

2005-05-10  Dave Brolley  <brolley@@redhat.com>

        * cgen-cpu.h ({GET,SET}[I]+MEM*): No longer const.
        * configure.in: Check for pthread library.
        * configure: Regenerated.
@
text
@a27 1
#include "opcode/cgen-bitset.h"
d71 1
a71 1
		    enum bfd_endian endian, const char *name, CGEN_BITSET *isas = NULL, int machine = 0);
@


1.11
log
@* build fixes for gcc 3.4

[cgen-cpu]
2005-02-12  Frank Ch. Eigler  <fche@@elastic.org>

	* cgen-engine.h (virtual_insn_type): Move decl here ...
	* cgen-cpu.h: ... from here.
	* Makefile.am (SOURCES): Don't try to build fp code.
	* Makefile.in: Regenerated.

[gdb]
2005-02-12  Frank Ch. Eigler  <fche@@elastic.org>

	* gdbserv-state.c (gdbserv_fromclient_break): Fix statementless
	label at end of block.

[mapper]
2005-02-12  Frank Ch. Eigler  <fche@@elastic.org>

	* compMapper.cxx (read/write_strideoffset_any, read/write_any):
	Move these generic_mapper_bus functions out of line.

[sched]
2005-02-12  Frank Ch. Eigler  <fche@@elastic.org>

	* compSched.cxx (scheduler_component): Clarify friend decl.

[timers/arm7t]
2005-02-12  Frank Ch. Eigler  <fche@@elastic.org>

	* arm7t-timer.h: Add needed friend decl.
@
text
@d28 1
d72 1
a72 1
		    enum bfd_endian endian, const char *name, unsigned long isa_mask = 0, int machine = 0);
d92 1
a92 1
  GETMEMQI(PCADDR pc, ADDR addr) const
d97 1
a97 1
  GETMEMUQI(PCADDR pc, ADDR addr) const
d102 1
a102 1
  SETMEMBI(PCADDR pc, ADDR addr, BI value) const
d107 1
a107 1
  SETMEMQI(PCADDR pc, ADDR addr, QI value) const
d112 1
a112 1
  SETMEMUQI(PCADDR pc, ADDR addr, UQI value) const
d117 1
a117 1
  GETMEMHI(PCADDR pc, ADDR addr) const
d122 1
a122 1
  GETMEMUHI(PCADDR pc, ADDR addr) const
d127 1
a127 1
  SETMEMHI(PCADDR pc, ADDR addr, HI value) const
d132 1
a132 1
  SETMEMUHI(PCADDR pc, ADDR addr, UHI value) const
d137 1
a137 1
  GETMEMSI(PCADDR pc, ADDR addr) const
d142 1
a142 1
  SETMEMSI(PCADDR pc, ADDR addr, SI value) const
d147 1
a147 1
  GETMEMUSI(PCADDR pc, ADDR addr) const
d152 1
a152 1
  SETMEMUSI(PCADDR pc, ADDR addr, USI value) const
d157 1
a157 1
  GETMEMDI(PCADDR pc, ADDR addr) const
d162 1
a162 1
  SETMEMDI(PCADDR pc, ADDR addr, DI value) const
d167 1
a167 1
  SETMEMUDI(PCADDR pc, ADDR addr, UDI value) const
d174 1
a174 1
  GETMEMSF(PCADDR pc, IADDR addr) const
d179 1
a179 1
  SETMEMSF(PCADDR pc, ADDR addr, SF value) const
d185 1
a185 1
  GETMEMDF(PCADDR pc, IADDR addr) const
d190 1
a190 1
  SETMEMDF(PCADDR pc, ADDR addr, DF value) const
d198 1
a198 1
  GETIMEMQI(PCADDR pc, IADDR addr) const
d203 1
a203 1
  SETIMEMQI(PCADDR pc, ADDR addr, QI value) const
d208 1
a208 1
  GETIMEMUQI(PCADDR pc, IADDR addr) const
d213 1
a213 1
  SETIMEMUQI(PCADDR pc, ADDR addr, UQI value) const
d218 1
a218 1
  GETIMEMHI(PCADDR pc, IADDR addr) const
d223 1
a223 1
  SETIMEMHI(PCADDR pc, ADDR addr, HI value) const
d228 1
a228 1
  GETIMEMUHI(PCADDR pc, IADDR addr) const
d233 1
a233 1
  SETIMEMUHI(PCADDR pc, ADDR addr, UHI value) const
d238 1
a238 1
  GETIMEMSI(PCADDR pc, IADDR addr) const
d243 1
a243 1
  SETIMEMSI(PCADDR pc, ADDR addr, SI value) const
d248 1
a248 1
  GETIMEMUSI(PCADDR pc, IADDR addr) const
d253 1
a253 1
  SETIMEMUSI(PCADDR pc, ADDR addr, USI value) const
d258 1
a258 1
  GETIMEMDI(PCADDR pc, IADDR addr) const
d263 1
a263 1
  SETIMEMDI(PCADDR pc, ADDR addr, DI value) const
d268 1
a268 1
  GETIMEMUDI(PCADDR pc, IADDR addr) const
d273 1
a273 1
  SETIMEMUDI(PCADDR pc, ADDR addr, UDI value) const
@


1.10
log
@2004-06-25  Dave Brolley  <brolley@@redhat.com>

        * tracedis.cxx (register_name): Add parameter for the cgen MACH. Save
        it in hack_list->machine or p->machine.
        (cgen_disassemble): Add parameter for the cgen MACH. Pass it to
        register_name. Use it to set info->mach.
        (arch_hack): New field 'machine'.
        (bfd_lookup_arch): Make sure the machines match.
        * cgen-cpu.h (disassemble): Add parameter for the cgen MACH.
        * compCGEN.cxx (disassemble): Add parameter for the cgen MACH. Pass it
        to cgen_disassemble.
        * tracedis.h (cgen_disassemble): Add parameter for the cgen MACH.
@
text
@a280 12

// Virtual insn support.

// Canonical ids of virtual insns.
enum virtual_insn_type {
  VIRTUAL_INSN_INVALID,
  VIRTUAL_INSN_BEGIN,
  VIRTUAL_INSN_COND,
  VIRTUAL_INSN_CHAIN, VIRTUAL_INSN_CTI_CHAIN,
  VIRTUAL_INSN_BEFORE, VIRTUAL_INSN_AFTER,
};

@


1.9
log
@003-01-15  Dave Brolley  <brolley@@redhat.com>

        * compCGEN.cxx (cgen_bi_endian_cpu): Don't initialize trace_count.
        (trace_counter): Use total_insn_count and total_latency.
        * cgen-cpu.h (class cgen_bi_endian_cpu): Remove trace_count.
@
text
@d3 1
a3 1
// Copyright (C) 2000, 2001, 2002, 2003 Red Hat.
d71 1
a71 1
		    enum bfd_endian endian, const char *name, unsigned long isa_mask = 0);
@


1.8
log
@* disasm improvements

2002-02-06  Frank Ch. Eigler  <fche@@redhat.com>

	* compCGEN.cxx (cgen_disassemble): New "isa_mask" argument.
	* tracedis.c (disassemble): Ditto.  Support it.
	(cgen_disassemble): Defeat initialization bypass cache.
	* cgen-cpu.h, tracedis.h: Corresponding changes.
@
text
@d3 1
a3 1
// Copyright (C) 2000, 2001, 2002 Red Hat.
a82 1
  host_int_8 trace_count;
@


1.7
log
@* --trace-counter extensions

[bsp]
2001-12-27  Frank Ch. Eigler  <fche@@redhat.com>

	* configrun-sid.in: Make cpu<->sched pin connections for time queries.

[component/cgen-cpu]
2001-12-27  Frank Ch. Eigler  <fche@@redhat.com>

	* cgen-cpu.h (cgen_bi_endian_cpu): Make trace_count a host_int_8.
	* compCGEN.cxx (cgen_read_memory): Don't distort memory latency

[include]
2001-12-27  Frank Ch. Eigler  <fche@@redhat.com>

	* sidcpuutil.h (basic_cpu): Add scheduler_time_query member.
	Add flush_icache(PC) virtual function.

[bsp/pregen]
2001-12-27  Frank Ch. Eigler  <fche@@redhat.com>

	* ALL.conf: Regenerated with cpu/sched etc. changes.
@
text
@d3 1
a3 1
// Copyright (C) 2000, 2001 Red Hat.
d71 1
a71 1
		    enum bfd_endian endian, const char *name);
@


1.6
log
@* call graph profiling support

[sid/bsp]
2001-11-08  Frank Ch. Eigler  <fche@@redhat.com>

	* configrun-sid.in (gprof): Connect call-graph pins.

[sid/include]
2001-11-08  Frank Ch. Eigler  <fche@@redhat.com>

	* sidcpuutil.h (basic_cpu): Add cg caller/callee pins, trace_stream
	fields.
	(basic_cpu ctor): Initialize them.
	(cg_profile): New function.

[sid/component/cgen-cpu]
2001-11-08  Frank Ch. Eigler  <fche@@redhat.com>

	* cgen-cpu.h (cgen_bi_endian_cpu): Remove trace_stream field: it's
	in basic_cpu now.
	* compCGEN.cxx: Corresponding change.

[sid/component/profiling]
2001-11-08  Frank Ch. Eigler  <fche@@redhat.com>

	* gprof.cxx (gprof_component): Add cg caller/callee pins, cg_count_map
	field.
	(accumulate_call): New function.
	(reset): Clear cg map.
	(store): Emit call graph info.  Emit histogram iff nonempty.
	* sw-profile-gprof.xml: Document call graph functionality.
	* sw-profile-gprof.txt: Regenerated.
@
text
@d83 1
a83 1
  int trace_count;
@


1.5
log
@2001-07-20  Ben Elliston  <bje@@redhat.com>

	* configure.in: Check whether libintl is required for gettext.
	* acinclude.m4: Remove.
	* configure: Rebuild.
	* aclocal.m4: Likewise.
	* Makefile.in: Likewise.

2001-07-10  matthew green  <mrg@@redhat.com>

	* Makefile.in: Regenerate.
	* aclocal.m4: Regenerate.
	* configure: Regenerate.
	* cgen-ops.h (JOINHISI): New define.

2001-07-02  Ben Elliston  <bje@@redhat.com>

	* common-xml/interface.xml (debug-exec?): Remove.

2001-06-29  graydon hoare  <graydon@@redhat.com>

	* common-xml/*: Add files.

2001-06-28  Jeff Johnston  <jjohnstn@@redhat.com>

	* compCGEN.cxx (cgen_cpu::stream_state): Change reference to
	debug_exec_p to use new warnings_enabled flag.
	(cgen_cpu::destream_state): Ditto.

2001-06-23  Frank Ch. Eigler  <fche@@redhat.com>

	* cgen-cpu.h, tracedis.h: #undef AND unwittingly acquired
	from ansidecl.h.

2001-06-20  matthew green  <mrg@@redhat.com>

	* Makefile.am (INCLUDESBFD, OPCODES, LIBIBERTY, TRACEDIS): Set
	unconditionally.
	* cgen-cpu.h: Delete CGEN_BFD_DISASSEMBLER conditional.
	* compCGEN.cxx: Likewise.
	* configure.in (CY_SID_BFD_DISASM_CHECK): Delete.
	* configure: Regenerate.
	* Makefile.in: Likewise.
	* aclocal.m4: Likewise.
	* config.in: Likewise.

2001-06-07  matthew green  <mrg@@redhat.com>

	* Makefile.am (BFDLIBS): Remove.
	* Makefile.in: Regenerate.
	* cgen-cpu.h (disassemble): Now takes a `const char *name' parameter.
	* compCGEN.cxx (cgen_bi_endian_cpu::disassemble): Likewise.
	* tracedis.c (cgen_disassemble): Likewise.  Also, call register_name()
	with arch & name.
	(bfd_get_arch): New dummy function.
	(bfd_put_bits, bfd_get_bits): New functions. Copy from libbfd.
	(hack_list): New list of arch to name mappings.
	(register_name): New function.
	(bfd_lookup_arch): New function. Uses hack_list.
	* tracedis (cgen_disassemble): Update prototype.

2001-06-07  Frank Ch. Eigler  <fche@@redhat.com>

	* cgen-cpu.h: Move new getter/setter functions to *MEM* from *IMEM*.

2001-06-06  graydon hoare  <graydon@@redhat.com>

	* cgen-types.h: Add SF,DF,BI types.
	* cgen-cpu.h (class cgen_bi_endian_cpu): Add some getter/setter
	functions for various memory types.

2001-05-29  matthew green  <mrg@@redhat.com>

	* Makefile.am (OPCODES, BFDLIB, LIBIBERTY, TRACEDIS, INCLUDESBFD): New
	variables set conditionally on CGEN_BFD_DISASSEMBLER.
	* acinclude.m4: New. Pull in gettext & bfd.
	* cgen-cpu.h: If CGEN_BFD_DISASSEMBLER, include "bfd.h" and "dis-asm.h".
	(cgen_bi_endian_cpu): If CGEN_BFD_DISASSEMBLER, new disassemble(),
	cgen_read_memory(), cgen_print_address(), cgen_memory_error() and
	cgen_symbol_at_address() methods, and new disassemble_info{} info.
	New trace_counter() method and int trace_count.
	* compCGEN.cxx: If CGEN_BFD_DISASSEMBLER, include "bfd.h", "tracedis.h"
	and "dis-asm.h".
	(cgen_bi_endian_cpu ctor): Initialise trace_count to zero.
	(cgen_bi_endian_cpu::disassemble): New method, calls cgen_disasseble().
	(cgen_bi_endian_cpu::cgen_read_memory): New method, conditional on
	CGEN_BFD_DISASSEMBLER..
	(cgen_bi_endian_cpu::cgen_memory_error): Likewise.
	(cgen_bi_endian_cpu::cgen_print_address): Likewise.
	(cgen_bi_endian_cpu::cgen_symbol_at_address: Likewise.
	(cgen_bi_endian_cpu::trace_counter): New method.
	* configure.in (CY_SID_BFD_DISASM_CHECK): Use.
	* tracedis.c (cgen_disassemble): New file, front end to disassembler.
	* tracedis.h: Header file for above.
	* Makefile.in: Regenerated.
	* aclocal.m4: Regenerated.
	* config.in: Regenerated.
	* configure: Regenerated.

2001-03-21  Ben Elliston  <bje@@redhat.com>

	* Makefile.in: Regenerate.
@
text
@a64 2
  // XXX: Should be a pointer or somesuch, so it can be changed during a run.
  ostream& trace_stream;
@


1.4
log
@* make it compile with GCC 3.0:
        - missing throw() specifiers in bus & component dtors
	- `std::' vs `::' namespace issues
@
text
@d1 5
a5 2
// -*- C++ -*-
// Copyright (C) 2000 Red Hat
d26 6
d60 1
a60 1
  // true -> print execution warning messages
d70 16
d104 5
d168 31
d279 3
@


1.3
log
@
2001-06-28  Jeff Johnston  <jjohnstn@@redhat.com>

        * compCGEN.cxx (cgen_cpu::stream_state): Change reference to
        debug_exec_p to use new warnings_enabled flag.
        (cgen_cpu::destream_state): Ditto.
        (cgen_bi_endian_cpu::cgen_bi_endian_cpu): Remove
        debug_exec_p setting and add warnings_enabled flag which is tied                to new enable-warnings? setting.
        * cgen-cpu.h (cgen_bi_endian_cpu::debug_exec_p): Removed.
        (cgen_bi_endian_cpu::warnings_enabled): New member.
@
text
@d63 2
a64 2
  cgen_bi_endian_cpu();
  ~cgen_bi_endian_cpu();
@


1.2
log
@2001-04-03  Ben Elliston  <bje@@redhat.com>

	* cgen-cpu.h (cgen_bi_endian_cpu::GETMEMUQI): New method.
	(cgen_bi_endian_cpu::SETMEMUQI): Ditto.
	(cgen_bi_endian_cpu::GETMEMUHI): Ditto.
	(cgen_bi_endain_cpu::SETMEMUHI): Ditto.
@
text
@d51 1
a51 1
  // true -> print execution debugging messages
d53 1
a53 1
  bool debug_exec_p;
@


1.1
log
@* public snapshot of sid simulator
@
text
@d73 5
d83 5
d93 5
d100 5
@

