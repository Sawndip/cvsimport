head	1.5;
access;
symbols
	sid-snapshot-20180601:1.5
	sid-snapshot-20180501:1.5
	sid-snapshot-20180401:1.5
	sid-snapshot-20180301:1.5
	sid-snapshot-20180201:1.5
	sid-snapshot-20180101:1.5
	sid-snapshot-20171201:1.5
	sid-snapshot-20171101:1.5
	sid-snapshot-20171001:1.5
	sid-snapshot-20170901:1.5
	sid-snapshot-20170801:1.5
	sid-snapshot-20170701:1.5
	sid-snapshot-20170601:1.5
	sid-snapshot-20170501:1.5
	sid-snapshot-20170401:1.5
	sid-snapshot-20170301:1.5
	sid-snapshot-20170201:1.5
	sid-snapshot-20170101:1.5
	sid-snapshot-20161201:1.5
	sid-snapshot-20161101:1.5
	sid-snapshot-20160901:1.5
	sid-snapshot-20160801:1.5
	sid-snapshot-20160701:1.5
	sid-snapshot-20160601:1.5
	sid-snapshot-20160501:1.5
	sid-snapshot-20160401:1.5
	sid-snapshot-20160301:1.5
	sid-snapshot-20160201:1.5
	sid-snapshot-20160101:1.5
	sid-snapshot-20151201:1.5
	sid-snapshot-20151101:1.5
	sid-snapshot-20151001:1.5
	sid-snapshot-20150901:1.5
	sid-snapshot-20150801:1.5
	sid-snapshot-20150701:1.5
	sid-snapshot-20150601:1.5
	sid-snapshot-20150501:1.5
	sid-snapshot-20150401:1.5
	sid-snapshot-20150301:1.5
	sid-snapshot-20150201:1.5
	sid-snapshot-20150101:1.5
	sid-snapshot-20141201:1.5
	sid-snapshot-20141101:1.5
	sid-snapshot-20141001:1.5
	sid-snapshot-20140901:1.5
	sid-snapshot-20140801:1.5
	sid-snapshot-20140701:1.5
	sid-snapshot-20140601:1.5
	sid-snapshot-20140501:1.5
	sid-snapshot-20140401:1.5
	sid-snapshot-20140301:1.5
	sid-snapshot-20140201:1.5
	sid-snapshot-20140101:1.5
	sid-snapshot-20131201:1.5
	sid-snapshot-20131101:1.5
	sid-snapshot-20131001:1.5
	sid-snapshot-20130901:1.5
	sid-snapshot-20130801:1.5
	sid-snapshot-20130701:1.5
	sid-snapshot-20130601:1.5
	sid-snapshot-20130501:1.5
	sid-snapshot-20130401:1.5
	sid-snapshot-20130301:1.5
	sid-snapshot-20130201:1.5
	sid-snapshot-20130101:1.5
	sid-snapshot-20121201:1.5
	sid-snapshot-20121101:1.5
	sid-snapshot-20121001:1.5
	sid-snapshot-20120901:1.5
	sid-snapshot-20120801:1.5
	sid-snapshot-20120701:1.5
	sid-snapshot-20120601:1.5
	sid-snapshot-20120501:1.5
	sid-snapshot-20120401:1.5
	sid-snapshot-20120301:1.5
	sid-snapshot-20120201:1.5
	sid-snapshot-20120101:1.5
	sid-snapshot-20111201:1.5
	sid-snapshot-20111101:1.5
	sid-snapshot-20111001:1.5
	sid-snapshot-20110901:1.5
	sid-snapshot-20110801:1.5
	sid-snapshot-20110701:1.5
	sid-snapshot-20110601:1.5
	sid-snapshot-20110501:1.5
	sid-snapshot-20110401:1.5
	sid-snapshot-20110301:1.5
	sid-snapshot-20110201:1.5
	sid-snapshot-20110101:1.5
	sid-snapshot-20101201:1.5
	sid-snapshot-20101101:1.5
	sid-snapshot-20101001:1.5
	sid-snapshot-20100901:1.5
	sid-snapshot-20100801:1.5
	sid-snapshot-20100701:1.5
	sid-snapshot-20100601:1.5
	sid-snapshot-20100501:1.5
	sid-snapshot-20100401:1.5
	sid-snapshot-20100301:1.5
	sid-snapshot-20100201:1.4
	sid-snapshot-20100101:1.3
	sid-snapshot-20091201:1.3
	sid-snapshot-20091101:1.3
	sid-snapshot-20091001:1.2
	sid-snapshot-20090901:1.2
	sid-snapshot-20090801:1.2
	sid-snapshot-20090701:1.2
	sid-snapshot-20090601:1.2
	sid-snapshot-20090501:1.2
	sid-snapshot-20090401:1.2
	sid-snapshot-20090301:1.2
	sid-snapshot-20090201:1.2
	sid-snapshot-20090101:1.2
	sid-snapshot-20081201:1.2
	sid-snapshot-20081101:1.2
	sid-snapshot-20081001:1.2
	sid-snapshot-20080901:1.2
	sid-snapshot-20080801:1.2
	sid-snapshot-20080701:1.2
	sid-snapshot-20080601:1.2
	sid-snapshot-20080501:1.2
	sid-snapshot-20080403:1.2
	sid-snapshot-20080401:1.2
	sid-snapshot-20080301:1.2
	sid-snapshot-20080201:1.2
	sid-snapshot-20080101:1.2
	sid-snapshot-20071201:1.2
	sid-snapshot-20071101:1.2
	sid-snapshot-20071001:1.2;
locks; strict;
comment	@ * @;


1.5
date	2010.02.12.02.33.05;	author devans;	state Exp;
branches;
next	1.4;

1.4
date	2010.01.02.21.18.55;	author devans;	state Exp;
branches;
next	1.3;

1.3
date	2009.10.24.00.45.59;	author devans;	state Exp;
branches;
next	1.2;

1.2
date	2005.12.16.10.23.13;	author nathan;	state Exp;
branches;
next	1.1;

1.1
date	2005.12.12.11.16.42;	author nathan;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Regenerate to pick up recent cgen changes.
[minor changes like removing K&R support, more consistent name for sfmt_empty]
@
text
@/* Decode header for mt.

THIS FILE IS MACHINE GENERATED WITH CGEN.

Copyright (C) 2000-2010 Red Hat, Inc.

This file is part of the Red Hat simulators.


*/

#ifndef MT_DECODE_H
#define MT_DECODE_H

namespace mt {
// forward declaration of struct in -defs.h
struct write_stacks;
}

namespace mt {

using namespace cgen;
using namespace mt;

typedef UINT mt_insn_word;

/* Enum declaration for instructions in cpu family mt.  */
typedef enum mt_insn_type {
  MT_INSN_X_INVALID, MT_INSN_ADD, MT_INSN_ADDU, MT_INSN_ADDI
 , MT_INSN_ADDUI, MT_INSN_SUB, MT_INSN_SUBU, MT_INSN_SUBI
 , MT_INSN_SUBUI, MT_INSN_MUL, MT_INSN_MULI, MT_INSN_AND
 , MT_INSN_ANDI, MT_INSN_OR, MT_INSN_NOP, MT_INSN_ORI
 , MT_INSN_XOR, MT_INSN_XORI, MT_INSN_NAND, MT_INSN_NANDI
 , MT_INSN_NOR, MT_INSN_NORI, MT_INSN_XNOR, MT_INSN_XNORI
 , MT_INSN_LDUI, MT_INSN_LSL, MT_INSN_LSLI, MT_INSN_LSR
 , MT_INSN_LSRI, MT_INSN_ASR, MT_INSN_ASRI, MT_INSN_BRLT
 , MT_INSN_BRLE, MT_INSN_BREQ, MT_INSN_BRNE, MT_INSN_JMP
 , MT_INSN_JAL, MT_INSN_DBNZ, MT_INSN_EI, MT_INSN_DI
 , MT_INSN_SI, MT_INSN_RETI, MT_INSN_LDW, MT_INSN_STW
 , MT_INSN_BREAK, MT_INSN_IFLUSH, MT_INSN_FBCB, MT_INSN_MFBCB
 , MT_INSN_FBCCI, MT_INSN_FBRCI, MT_INSN_FBCRI, MT_INSN_FBRRI
 , MT_INSN_MFBCCI, MT_INSN_MFBRCI, MT_INSN_MFBCRI, MT_INSN_MFBRRI
 , MT_INSN_FBCBDR, MT_INSN_RCFBCB, MT_INSN_MRCFBCB, MT_INSN_CBCAST
 , MT_INSN_DUPCBCAST, MT_INSN_WFBI, MT_INSN_WFB, MT_INSN_RCRISC
 , MT_INSN_FBCBINC, MT_INSN_RCXMODE, MT_INSN_INTERLEAVER, MT_INSN_WFBINC
 , MT_INSN_MWFBINC, MT_INSN_WFBINCR, MT_INSN_MWFBINCR, MT_INSN_FBCBINCS
 , MT_INSN_MFBCBINCS, MT_INSN_FBCBINCRS, MT_INSN_MFBCBINCRS
} MT_INSN_TYPE;


// Forward decls.
struct mt_cpu;
struct mt_scache;
typedef void (mt_sem_fn) (mt_cpu* cpu, mt_scache* sem, int tick, mt::write_stacks &buf);


// Instruction descriptor.

struct mt_idesc {

  // scache engine executor for this insn
  mt_sem_fn* execute;

  const char* insn_name;
  enum mt_insn_type sem_index;
  mt_insn_attr attrs;

  // idesc table: indexed by sem_index
  static mt_idesc idesc_table[];

  static mt_insn_type lookup_virtual (virtual_insn_type vit);
};

// Instruction argument buffer.

union mt_sem_fields {
  struct { /* no operands */
    int empty;
  } sfmt_empty;
  struct { /*  */
    UINT f_sr1;
    UINT f_sr2;
    HI f_imm16s;
  } sfmt_brlt;
  struct { /*  */
    UINT f_dr;
    UINT f_imm16u;
    UINT f_sr1;
  } sfmt_addui;
  struct { /*  */
    UINT f_dr;
    UINT f_sr1;
    HI f_imm16s;
  } sfmt_addi;
  struct { /*  */
    UINT f_drrr;
    UINT f_sr1;
    UINT f_sr2;
  } sfmt_add;
  // This one is for chain/cti-chain virtual insns.
  struct {
    // Number of insns in pbb.
    unsigned insn_count;
    // This is used by chain insns and by untaken conditional branches.
    mt_scache* next;
    mt_scache* branch_target;
  } chain;
  // This one is for `before' virtual insns.
  struct {
    // The cache entry of the real insn.
    mt_scache* insn;
  } before;
};

// Simulator instruction cache.

struct mt_scache {
  // executor
  union {
    cgoto_label cgoto;
    mt_sem_fn* fn;
  } execute;

  // PC of this instruction.
  PCADDR addr;

  // instruction class
  mt_idesc* idesc;

  // argument buffer
  mt_sem_fields fields;



  // decode given instruction
  void decode (mt_cpu* current_cpu, PCADDR pc, mt_insn_word base_insn, mt_insn_word entire_insn);
};

} // end mt namespace

// Decls of each semantic fn.

using mt::mt_sem_fn;
extern mt_sem_fn mt_sem_x_invalid;
extern mt_sem_fn mt_sem_add;
extern mt_sem_fn mt_sem_addu;
extern mt_sem_fn mt_sem_addi;
extern mt_sem_fn mt_sem_addui;
extern mt_sem_fn mt_sem_sub;
extern mt_sem_fn mt_sem_subu;
extern mt_sem_fn mt_sem_subi;
extern mt_sem_fn mt_sem_subui;
extern mt_sem_fn mt_sem_mul;
extern mt_sem_fn mt_sem_muli;
extern mt_sem_fn mt_sem_and;
extern mt_sem_fn mt_sem_andi;
extern mt_sem_fn mt_sem_or;
extern mt_sem_fn mt_sem_nop;
extern mt_sem_fn mt_sem_ori;
extern mt_sem_fn mt_sem_xor;
extern mt_sem_fn mt_sem_xori;
extern mt_sem_fn mt_sem_nand;
extern mt_sem_fn mt_sem_nandi;
extern mt_sem_fn mt_sem_nor;
extern mt_sem_fn mt_sem_nori;
extern mt_sem_fn mt_sem_xnor;
extern mt_sem_fn mt_sem_xnori;
extern mt_sem_fn mt_sem_ldui;
extern mt_sem_fn mt_sem_lsl;
extern mt_sem_fn mt_sem_lsli;
extern mt_sem_fn mt_sem_lsr;
extern mt_sem_fn mt_sem_lsri;
extern mt_sem_fn mt_sem_asr;
extern mt_sem_fn mt_sem_asri;
extern mt_sem_fn mt_sem_brlt;
extern mt_sem_fn mt_sem_brle;
extern mt_sem_fn mt_sem_breq;
extern mt_sem_fn mt_sem_brne;
extern mt_sem_fn mt_sem_jmp;
extern mt_sem_fn mt_sem_jal;
extern mt_sem_fn mt_sem_dbnz;
extern mt_sem_fn mt_sem_ei;
extern mt_sem_fn mt_sem_di;
extern mt_sem_fn mt_sem_si;
extern mt_sem_fn mt_sem_reti;
extern mt_sem_fn mt_sem_ldw;
extern mt_sem_fn mt_sem_stw;
extern mt_sem_fn mt_sem_break;
extern mt_sem_fn mt_sem_iflush;
extern mt_sem_fn mt_sem_fbcb;
extern mt_sem_fn mt_sem_mfbcb;
extern mt_sem_fn mt_sem_fbcci;
extern mt_sem_fn mt_sem_fbrci;
extern mt_sem_fn mt_sem_fbcri;
extern mt_sem_fn mt_sem_fbrri;
extern mt_sem_fn mt_sem_mfbcci;
extern mt_sem_fn mt_sem_mfbrci;
extern mt_sem_fn mt_sem_mfbcri;
extern mt_sem_fn mt_sem_mfbrri;
extern mt_sem_fn mt_sem_fbcbdr;
extern mt_sem_fn mt_sem_rcfbcb;
extern mt_sem_fn mt_sem_mrcfbcb;
extern mt_sem_fn mt_sem_cbcast;
extern mt_sem_fn mt_sem_dupcbcast;
extern mt_sem_fn mt_sem_wfbi;
extern mt_sem_fn mt_sem_wfb;
extern mt_sem_fn mt_sem_rcrisc;
extern mt_sem_fn mt_sem_fbcbinc;
extern mt_sem_fn mt_sem_rcxmode;
extern mt_sem_fn mt_sem_interleaver;
extern mt_sem_fn mt_sem_wfbinc;
extern mt_sem_fn mt_sem_mwfbinc;
extern mt_sem_fn mt_sem_wfbincr;
extern mt_sem_fn mt_sem_mwfbincr;
extern mt_sem_fn mt_sem_fbcbincs;
extern mt_sem_fn mt_sem_mfbcbincs;
extern mt_sem_fn mt_sem_fbcbincrs;
extern mt_sem_fn mt_sem_mfbcbincrs;

#endif /* MT_DECODE_H */
@


1.4
log
@Regenerate cgen files, update copyright year.
@
text
@d79 1
a79 1
  } fmt_empty;
@


1.3
log
@	* cgen-cpu.h: Update for new location of cgen/bitset.h.
	* tracedis.h: Ditto.

Plus update generated files to pick up two cgen changes:
1)
	* desc-cpu.scm (/gen-hash-defines): Remove #include of cgen-bitset.h.
	* sid-cpu.scm (cgen-desc.h): Update location of cgen's bitset.h.
2)
	* utils-sim.scm (/gen-set-itype-and-extract): New function.
	(/gen-bracketed-set-itype-and-extract): New function.
	(/gen-decode-default-entry): Rewrite.
	(/table-guts-to-mask, /all-opcode-bits-used?): New functions.
	(/gen-decode-insn-entry): New arg table-guts-thus-far, all callers
	updated.  Don't unnecessarily emit check for whether all opcode bits
	have been examined.
	(/gen-decode-expr-set-itype): Delete.
	(/gen-decode-expr-entry): Update.
	(/gen-decode-table-entry): New arg table-guts-thus-far, all callers
	updated.  Keep track of decoder tables used thus far.
	(/gen-decoder-switch): Ditto.
@
text
@d5 1
a5 1
Copyright (C) 2000-2009 Red Hat, Inc.
@


1.2
log
@	Second part of ms1 to mt renaming.
	* bfd/archures.c (bfd_arch_mt): Renamed.
	(bfd_mt_arch): Renamed.
	(bfd_archures_list): Adjusted.
	* bfd/bfd-in2.h: Rebuilt.
	* bfd/config.bfd (mt): Remove special case targ_archs.
	(mt-*-elf): Rename bfd_elf32_mt_vec.
	* bfd/configure: Rebuilt.
	* bfd/configure.in (bfd_elf32_mt_vec): Renamed.
	(selarchs) Remove mt special case.
	* bfd/cpu-mt.c (arch_info_struct): Adjust.
	(bfd_mt_arch): Renamed, adjust.
	* bfd/elf32-mt.c (mt_reloc_type_lookup, mt_info_to_howto_rela,
	mt_elf_relocate_hi16, mt_final_link_relocate, mt_relocate_section,
	mt_elf_howto_table): Renamed, adjusted.
	(mt_elf_gc_mark_hook, mt_elf_gc_sweep_hook, mt_elf_check_relocs,
	elf32_mt_machine, mt_elf_object_p, mt_elf_set_private_flags,
	mt_elf_copy_private_bfd_data, mt_elf_merge_private_bfd_data,
	mt_elf_print_private_bfd_data): Renamed, adjusted.
	(TARGET_BIG_SYM, TARGET_BIG_NAME, ELF_ARCH, ELF_MACHINE_CODE,
	ELF_MAXPAGESIZE, elf_info_to_howto, elf_backend_relocate_section,
	bfd_elf32_bfd_reloc_type_lookup, elf_backend_gc_mark_hook,
	elf_backend_gc_sweep_hook, elf_backend_check_relocs,
	eld_backend_object_p, bfd_elf32_bfd_set_private_flags,
	bfd_elf32_bfd_copy_private_bfd_data,
	bfd_elf32_bfd_merge_private_bfd_data,
	bfd_elf32_bfd_print_private_bfd_data): Adjusted.
	* bfd/libbfd.h: Regenerated.
	* bfd/reloc.c (BFD_RELOC_MT_PC16, BFD_RELOC_MT_HI16,
	BFD_RELOC_MT_LO16, BFD_RELOC_MT_GNU_VTINHERIT,
	BFD_RELOC_MT_GNU_VTENTRY, BFD_RELOC_MT_PCINSN8): Renamed.
	* bfd/targets.c (bfd_elf32_mt_vec): Renamed.
	(_bfd_target_vector): Adjusted.
	* binutils/readelf.c (guess_is_rela): Use EM_MT.
	(dump_relocations, get_machine_name): Adjust.

	* cpu/mt.cpu (define-arch, define-isa): Set name to mt.
	(define-mach): Adjust.
	* cpu/mt.opc (CGEN_ASM_HASH): Update.
	(mt_asm_hash, mt_cgen_insn_supported): Renamed.
	(parse_loopsize, parse_imm16): Adjust.

	* gas/configure: Rebuilt.
	* gas/configure.in (mt): Remove special case.
	* gas/config/tc-mt.c (opcodes/mt-desc.h, opcodes/mt-opc.h): Change
	#includes.
	(mt_insn, mt_mach, mt_mach_bitmask, mt_flags, mt_architectures):
	Rename, adjust.
	(md_parse_option, md_show_usage, md_begin, md_assemble,
	md_cgen_lookup_reloc, md_atof): Adjust.
	(mt_force_relocation, mt_apply_fix, mt_fix_adjustable): Rename, adjust.
	* gas/config/tc-mt.h (TC_MT): Rename.
	(LISTING_HEADER, TARGET_ARCH, TARGET_FORMAT): Adjust.
	(md_apply_fix): Adjust.
	(mt_apply_fix, mt_fix_adjustable, mt_force_relocation): Rename.
	(TC_FORCE_RELOCATION, tc_fix_adjustable): Adjust.

	* gdb/mt-tdep.c (mt_arch_constants, mt_gdb_regnums): Rename, adjust.
	(mt_register_name, mt_register_type, mt_register_reggroup_p,
	mt_return_value, mt_skip_prologue, mt_breapoint_from_pc,
	mt_pseudo_register_read, mt_pseudo_register_write, mt_frame_align,
	mt_registers_info, mt_push_dummy_call, mt_unwind_cache,
	mt_frame_unwind_cache, mt_unwind_pc, mt_unwind_dummy_id,
	mt_frame_this_id, mt_frame_prev_register, mt_frame_base_address,
	mt_frame_unwind, mt_frame_sniffer, mt_frame_base, mt_gdbarch_init,
	_initialize_mt_tdep): Rename & adjust.

	* include/dis-asm.h (print_insn_mt): Renamed.

	* include/elf/common.h (EM_MT): Renamed.
	* include/elf/mt.h: Rename relocs, cpu & other defines.

	* ld/emulparams/elf32mt.sh (ARCH, OUTPUT_FORMAT): Adjust.

	* opcodes/Makefile.am (HFILES, CFILES, ALL_MACHINES): Adjust.
	(stamp-mt): Adjust rule.
	(mt-asm.lo, mt-desc.lo, mt-dis.lo, mt-ibld.lo, mt-opc.lo): Rename &
	adjust.
	* opcodes/Makefile.in: Rebuilt.
	* opcodes/configure: Rebuilt.
	* opcodes/configure.in (bfd_mt_arch): Rename & adjust.
	* opcodes/disassemble.c (ARCH_mt): Renamed.
	(disassembler): Adjust.
	* opcodes/mt-asm.c: Renamed, rebuilt.
	* opcodes/mt-desc.c: Renamed, rebuilt.
	* opcodes/mt-desc.h: Renamed, rebuilt.
	* opcodes/mt-dis.c: Renamed, rebuilt.
	* opcodes/mt-ibld.c: Renamed, rebuilt.
	* opcodes/mt-opc.c: Renamed, rebuilt.
	* opcodes/mt-opc.h: Renamed, rebuilt.

	* sid/Makefile.in: Rebuilt.
	* sid/aclocal.m4: Rebuilt.
	* sid/configure: Rebuilt.
	* sid/sid.spec: Adjust.
	* sid/bsp/Makefile.am: Adjust.
	* sid/bsp/Makefile.in: Rebuilt.
	* sid/bsp/aclocal.m4: Rebuilt.
	* sid/bsp/configrun-sid.in: Adjust.
	* sid/bsp/pregen/Makefile.in: Rebuilt.
	* sid/bsp/pregen/mt-gdb.conf: Renamed & rebuilt.
	* sid/bsp/pregen/mt-gloss.conf: Renamed & rebuilt.
	* sid/bsp/pregen/pregen-configs.in: Adjust.
	* sid/component/aclocal.m4: Rebuilt.
	* sid/component/configure: Rebuilt.
	* sid/component/tconfig.in: Adjust.
	* sid/component/bochs/aclocal.m4: Rebuilt.
	* sid/component/cache/Makefile.in: Rebuilt.
	* sid/component/cgen-cpu/Makefile.in: Rebuilt.
	* sid/component/cgen-cpu/aclocal.m4: Rebuilt.
	* sid/component/cgen-cpu/compCGEN.cxx: Adjust.
	* sid/component/cgen-cpu/configure: Rebuilt.
	* sid/component/cgen-cpu/configure.in: Rebult.
	* sid/component/cgen-cpu/mt/Makefile.am: Adjust.
	* sid/component/cgen-cpu/mt/Makefile.in: Rebuilt.
	* sid/component/cgen-cpu/mt/hw-cpu-mt.txt: Adjust.
	* sid/component/cgen-cpu/mt/mt-cpu.h: Rebuilt.
	* sid/component/cgen-cpu/mt/mt-decode.cxx: Rebuilt.
	* sid/component/cgen-cpu/mt/mt-decode.h: Rebuilt.
	* sid/component/cgen-cpu/mt/mt-defs.h: Rebuilt.
	* sid/component/cgen-cpu/mt/mt-desc.h: Rebuilt.
	* sid/component/cgen-cpu/mt/mt-sem.cxx: Rebuilt.
	* sid/component/cgen-cpu/mt/mt-write.cxx: Rebuilt.
	* sid/component/cgen-cpu/mt/mt.cxx: Adjust.
	* sid/component/cgen-cpu/mt/mt.h: Adjust.
	* sid/component/consoles/Makefile.in: Rebuilt.
	* sid/component/families/aclocal.m4: Rebuilt.
	* sid/component/families/configure: Rebuilt.
	* sid/component/gdb/Makefile.in: Rebuilt.
	* sid/component/gloss/Makefile.in: Rebuilt.
	* sid/component/glue/Makefile.in: Rebuilt.
	* sid/component/ide/Makefile.in: Rebuilt.
	* sid/component/interrupt/Makefile.in: Rebuilt.
	* sid/component/lcd/Makefile.in: Rebuilt.
	* sid/component/lcd/testsuite/Makefile.in: Rebuilt.
	* sid/component/loader/Makefile.am: Rebuilt.
	* sid/component/loader/Makefile.in: Rebuilt.
	* sid/component/mapper/Makefile.in: Rebuilt.
	* sid/component/mapper/testsuite/Makefile.in: Rebuilt.
	* sid/component/memory/Makefile.in: Rebuilt.
	* sid/component/mmu/Makefile.in: Rebuilt.
	* sid/component/parport/Makefile.in: Rebuilt.
	* sid/component/profiling/Makefile.in: Rebuilt.
	* sid/component/rtc/Makefile.in: Rebuilt.
	* sid/component/sched/Makefile.in: Rebuilt.
	* sid/component/testsuite/Makefile.in: Rebuilt.
	* sid/component/timers/aclocal.m4: Rebuilt.
	* sid/component/timers/configure: Rebuilt.
	* sid/component/uart/Makefile.in: Rebuilt.
	* sid/component/uart/testsuite/Makefile.in: Rebuilt.
	* sid/config/config.sub: Adjust.
	* sid/config/info.tcl.in: Adjust.
	* sid/config/sidtargets.m4: Adjust.
	* sid/doc/Makefile.in: Rebuilt.
	* sid/main/dynamic/Makefile.am: Rebuilt.
	* sid/main/dynamic/Makefile.in: Rebuilt.
	* sid/main/dynamic/aclocal.m4: Rebuilt.
	* sid/main/dynamic/configure: Rebuilt.
@
text
@d5 1
a5 1
Copyright (C) 2000-2005 Red Hat, Inc.
@


1.1
log
@Rename ms1 files to mt files (part 1 -- renames only)
@
text
@d1 1
a1 1
/* Decode header for ms1.
d12 2
a13 2
#ifndef MS1_DECODE_H
#define MS1_DECODE_H
d15 1
a15 1
namespace ms1 {
d20 1
a20 1
namespace ms1 {
d23 1
a23 1
using namespace ms1;
d25 1
a25 1
typedef UINT ms1_insn_word;
d27 22
a48 23
/* Enum declaration for instructions in cpu family ms1.  */
typedef enum ms1_insn_type {
  MS1_INSN_X_INVALID, MS1_INSN_ADD, MS1_INSN_ADDU, MS1_INSN_ADDI
 , MS1_INSN_ADDUI, MS1_INSN_SUB, MS1_INSN_SUBU, MS1_INSN_SUBI
 , MS1_INSN_SUBUI, MS1_INSN_MUL, MS1_INSN_MULI, MS1_INSN_AND
 , MS1_INSN_ANDI, MS1_INSN_OR, MS1_INSN_NOP, MS1_INSN_ORI
 , MS1_INSN_XOR, MS1_INSN_XORI, MS1_INSN_NAND, MS1_INSN_NANDI
 , MS1_INSN_NOR, MS1_INSN_NORI, MS1_INSN_XNOR, MS1_INSN_XNORI
 , MS1_INSN_LDUI, MS1_INSN_LSL, MS1_INSN_LSLI, MS1_INSN_LSR
 , MS1_INSN_LSRI, MS1_INSN_ASR, MS1_INSN_ASRI, MS1_INSN_BRLT
 , MS1_INSN_BRLE, MS1_INSN_BREQ, MS1_INSN_BRNE, MS1_INSN_JMP
 , MS1_INSN_JAL, MS1_INSN_DBNZ, MS1_INSN_EI, MS1_INSN_DI
 , MS1_INSN_SI, MS1_INSN_RETI, MS1_INSN_LDW, MS1_INSN_STW
 , MS1_INSN_BREAK, MS1_INSN_IFLUSH, MS1_INSN_LDCTXT, MS1_INSN_LDFB
 , MS1_INSN_STFB, MS1_INSN_FBCB, MS1_INSN_MFBCB, MS1_INSN_FBCCI
 , MS1_INSN_FBRCI, MS1_INSN_FBCRI, MS1_INSN_FBRRI, MS1_INSN_MFBCCI
 , MS1_INSN_MFBRCI, MS1_INSN_MFBCRI, MS1_INSN_MFBRRI, MS1_INSN_FBCBDR
 , MS1_INSN_RCFBCB, MS1_INSN_MRCFBCB, MS1_INSN_CBCAST, MS1_INSN_DUPCBCAST
 , MS1_INSN_WFBI, MS1_INSN_WFB, MS1_INSN_RCRISC, MS1_INSN_FBCBINC
 , MS1_INSN_RCXMODE, MS1_INSN_INTERLEAVER, MS1_INSN_WFBINC, MS1_INSN_MWFBINC
 , MS1_INSN_WFBINCR, MS1_INSN_MWFBINCR, MS1_INSN_FBCBINCS, MS1_INSN_MFBCBINCS
 , MS1_INSN_FBCBINCRS, MS1_INSN_MFBCBINCRS
} MS1_INSN_TYPE;
d52 3
a54 3
struct ms1_cpu;
struct ms1_scache;
typedef void (ms1_sem_fn) (ms1_cpu* cpu, ms1_scache* sem, int tick, ms1::write_stacks &buf);
d59 1
a59 1
struct ms1_idesc {
d62 1
a62 1
  ms1_sem_fn* execute;
d65 2
a66 2
  enum ms1_insn_type sem_index;
  ms1_insn_attr attrs;
d69 1
a69 1
  static ms1_idesc idesc_table[];
d71 1
a71 1
  static ms1_insn_type lookup_virtual (virtual_insn_type vit);
d76 1
a76 1
union ms1_sem_fields {
d105 2
a106 2
    ms1_scache* next;
    ms1_scache* branch_target;
d111 1
a111 1
    ms1_scache* insn;
d117 1
a117 1
struct ms1_scache {
d121 1
a121 1
    ms1_sem_fn* fn;
d128 1
a128 1
  ms1_idesc* idesc;
d131 1
a131 1
  ms1_sem_fields fields;
d136 1
a136 1
  void decode (ms1_cpu* current_cpu, PCADDR pc, ms1_insn_word base_insn, ms1_insn_word entire_insn);
d139 1
a139 1
} // end ms1 namespace
d143 76
a218 79
using ms1::ms1_sem_fn;
extern ms1_sem_fn ms1_sem_x_invalid;
extern ms1_sem_fn ms1_sem_add;
extern ms1_sem_fn ms1_sem_addu;
extern ms1_sem_fn ms1_sem_addi;
extern ms1_sem_fn ms1_sem_addui;
extern ms1_sem_fn ms1_sem_sub;
extern ms1_sem_fn ms1_sem_subu;
extern ms1_sem_fn ms1_sem_subi;
extern ms1_sem_fn ms1_sem_subui;
extern ms1_sem_fn ms1_sem_mul;
extern ms1_sem_fn ms1_sem_muli;
extern ms1_sem_fn ms1_sem_and;
extern ms1_sem_fn ms1_sem_andi;
extern ms1_sem_fn ms1_sem_or;
extern ms1_sem_fn ms1_sem_nop;
extern ms1_sem_fn ms1_sem_ori;
extern ms1_sem_fn ms1_sem_xor;
extern ms1_sem_fn ms1_sem_xori;
extern ms1_sem_fn ms1_sem_nand;
extern ms1_sem_fn ms1_sem_nandi;
extern ms1_sem_fn ms1_sem_nor;
extern ms1_sem_fn ms1_sem_nori;
extern ms1_sem_fn ms1_sem_xnor;
extern ms1_sem_fn ms1_sem_xnori;
extern ms1_sem_fn ms1_sem_ldui;
extern ms1_sem_fn ms1_sem_lsl;
extern ms1_sem_fn ms1_sem_lsli;
extern ms1_sem_fn ms1_sem_lsr;
extern ms1_sem_fn ms1_sem_lsri;
extern ms1_sem_fn ms1_sem_asr;
extern ms1_sem_fn ms1_sem_asri;
extern ms1_sem_fn ms1_sem_brlt;
extern ms1_sem_fn ms1_sem_brle;
extern ms1_sem_fn ms1_sem_breq;
extern ms1_sem_fn ms1_sem_brne;
extern ms1_sem_fn ms1_sem_jmp;
extern ms1_sem_fn ms1_sem_jal;
extern ms1_sem_fn ms1_sem_dbnz;
extern ms1_sem_fn ms1_sem_ei;
extern ms1_sem_fn ms1_sem_di;
extern ms1_sem_fn ms1_sem_si;
extern ms1_sem_fn ms1_sem_reti;
extern ms1_sem_fn ms1_sem_ldw;
extern ms1_sem_fn ms1_sem_stw;
extern ms1_sem_fn ms1_sem_break;
extern ms1_sem_fn ms1_sem_iflush;
extern ms1_sem_fn ms1_sem_ldctxt;
extern ms1_sem_fn ms1_sem_ldfb;
extern ms1_sem_fn ms1_sem_stfb;
extern ms1_sem_fn ms1_sem_fbcb;
extern ms1_sem_fn ms1_sem_mfbcb;
extern ms1_sem_fn ms1_sem_fbcci;
extern ms1_sem_fn ms1_sem_fbrci;
extern ms1_sem_fn ms1_sem_fbcri;
extern ms1_sem_fn ms1_sem_fbrri;
extern ms1_sem_fn ms1_sem_mfbcci;
extern ms1_sem_fn ms1_sem_mfbrci;
extern ms1_sem_fn ms1_sem_mfbcri;
extern ms1_sem_fn ms1_sem_mfbrri;
extern ms1_sem_fn ms1_sem_fbcbdr;
extern ms1_sem_fn ms1_sem_rcfbcb;
extern ms1_sem_fn ms1_sem_mrcfbcb;
extern ms1_sem_fn ms1_sem_cbcast;
extern ms1_sem_fn ms1_sem_dupcbcast;
extern ms1_sem_fn ms1_sem_wfbi;
extern ms1_sem_fn ms1_sem_wfb;
extern ms1_sem_fn ms1_sem_rcrisc;
extern ms1_sem_fn ms1_sem_fbcbinc;
extern ms1_sem_fn ms1_sem_rcxmode;
extern ms1_sem_fn ms1_sem_interleaver;
extern ms1_sem_fn ms1_sem_wfbinc;
extern ms1_sem_fn ms1_sem_mwfbinc;
extern ms1_sem_fn ms1_sem_wfbincr;
extern ms1_sem_fn ms1_sem_mwfbincr;
extern ms1_sem_fn ms1_sem_fbcbincs;
extern ms1_sem_fn ms1_sem_mfbcbincs;
extern ms1_sem_fn ms1_sem_fbcbincrs;
extern ms1_sem_fn ms1_sem_mfbcbincrs;
d220 1
a220 1
#endif /* MS1_DECODE_H */
@

