head	1.7;
access;
symbols
	sid-snapshot-20180601:1.7
	sid-snapshot-20180501:1.7
	sid-snapshot-20180401:1.7
	sid-snapshot-20180301:1.7
	sid-snapshot-20180201:1.7
	sid-snapshot-20180101:1.7
	sid-snapshot-20171201:1.7
	sid-snapshot-20171101:1.7
	sid-snapshot-20171001:1.7
	sid-snapshot-20170901:1.7
	sid-snapshot-20170801:1.7
	sid-snapshot-20170701:1.7
	sid-snapshot-20170601:1.7
	sid-snapshot-20170501:1.7
	sid-snapshot-20170401:1.7
	sid-snapshot-20170301:1.7
	sid-snapshot-20170201:1.7
	sid-snapshot-20170101:1.7
	sid-snapshot-20161201:1.7
	sid-snapshot-20161101:1.7
	sid-snapshot-20160901:1.7
	sid-snapshot-20160801:1.7
	sid-snapshot-20160701:1.7
	sid-snapshot-20160601:1.7
	sid-snapshot-20160501:1.7
	sid-snapshot-20160401:1.7
	sid-snapshot-20160301:1.7
	sid-snapshot-20160201:1.7
	sid-snapshot-20160101:1.7
	sid-snapshot-20151201:1.7
	sid-snapshot-20151101:1.7
	sid-snapshot-20151001:1.7
	sid-snapshot-20150901:1.7
	sid-snapshot-20150801:1.7
	sid-snapshot-20150701:1.7
	sid-snapshot-20150601:1.7
	sid-snapshot-20150501:1.7
	sid-snapshot-20150401:1.7
	sid-snapshot-20150301:1.7
	sid-snapshot-20150201:1.7
	sid-snapshot-20150101:1.7
	sid-snapshot-20141201:1.7
	sid-snapshot-20141101:1.7
	sid-snapshot-20141001:1.7
	sid-snapshot-20140901:1.7
	sid-snapshot-20140801:1.7
	sid-snapshot-20140701:1.7
	sid-snapshot-20140601:1.7
	sid-snapshot-20140501:1.7
	sid-snapshot-20140401:1.7
	sid-snapshot-20140301:1.7
	sid-snapshot-20140201:1.7
	sid-snapshot-20140101:1.7
	sid-snapshot-20131201:1.7
	sid-snapshot-20131101:1.7
	sid-snapshot-20131001:1.7
	sid-snapshot-20130901:1.7
	sid-snapshot-20130801:1.7
	sid-snapshot-20130701:1.7
	sid-snapshot-20130601:1.7
	sid-snapshot-20130501:1.7
	sid-snapshot-20130401:1.7
	sid-snapshot-20130301:1.7
	sid-snapshot-20130201:1.7
	sid-snapshot-20130101:1.7
	sid-snapshot-20121201:1.7
	sid-snapshot-20121101:1.7
	sid-snapshot-20121001:1.7
	sid-snapshot-20120901:1.7
	sid-snapshot-20120801:1.7
	sid-snapshot-20120701:1.7
	sid-snapshot-20120601:1.7
	sid-snapshot-20120501:1.7
	sid-snapshot-20120401:1.7
	sid-snapshot-20120301:1.7
	sid-snapshot-20120201:1.7
	sid-snapshot-20120101:1.7
	sid-snapshot-20111201:1.7
	sid-snapshot-20111101:1.7
	sid-snapshot-20111001:1.7
	sid-snapshot-20110901:1.7
	sid-snapshot-20110801:1.7
	sid-snapshot-20110701:1.7
	sid-snapshot-20110601:1.7
	sid-snapshot-20110501:1.7
	sid-snapshot-20110401:1.7
	sid-snapshot-20110301:1.7
	sid-snapshot-20110201:1.7
	sid-snapshot-20110101:1.7
	sid-snapshot-20101201:1.7
	sid-snapshot-20101101:1.7
	sid-snapshot-20101001:1.7
	sid-snapshot-20100901:1.7
	sid-snapshot-20100801:1.7
	sid-snapshot-20100701:1.7
	sid-snapshot-20100601:1.7
	sid-snapshot-20100501:1.7
	sid-snapshot-20100401:1.7
	sid-snapshot-20100301:1.7
	sid-snapshot-20100201:1.6
	sid-snapshot-20100101:1.5
	sid-snapshot-20091201:1.5
	sid-snapshot-20091101:1.5
	sid-snapshot-20091001:1.4
	sid-snapshot-20090901:1.4
	sid-snapshot-20090801:1.4
	sid-snapshot-20090701:1.4
	sid-snapshot-20090601:1.4
	sid-snapshot-20090501:1.4
	sid-snapshot-20090401:1.4
	sid-snapshot-20090301:1.4
	sid-snapshot-20090201:1.4
	sid-snapshot-20090101:1.4
	sid-snapshot-20081201:1.4
	sid-snapshot-20081101:1.4
	sid-snapshot-20081001:1.4
	sid-snapshot-20080901:1.4
	sid-snapshot-20080801:1.4
	sid-snapshot-20080701:1.4
	sid-snapshot-20080601:1.4
	sid-snapshot-20080501:1.4
	sid-snapshot-20080403:1.4
	sid-snapshot-20080401:1.4
	sid-snapshot-20080301:1.4
	sid-snapshot-20080201:1.4
	sid-snapshot-20080101:1.4
	sid-snapshot-20071201:1.4
	sid-snapshot-20071101:1.4
	sid-snapshot-20071001:1.4
	sid-20020905-branchpoint:1.2
	sid-20020905-branch:1.2.0.2
	cygnus_cvs_20020108_pre:1.2;
locks; strict;
comment	@ * @;


1.7
date	2010.02.12.02.33.04;	author devans;	state Exp;
branches;
next	1.6;

1.6
date	2010.01.02.21.18.54;	author devans;	state Exp;
branches;
next	1.5;

1.5
date	2009.10.24.00.45.55;	author devans;	state Exp;
branches;
next	1.4;

1.4
date	2006.10.18.18.37.51;	author brolley;	state Exp;
branches;
next	1.3;

1.3
date	2003.07.05.17.07.21;	author devans;	state Exp;
branches;
next	1.2;

1.2
date	2001.01.29.20.03.26;	author fche;	state Exp;
branches;
next	1.1;

1.1
date	2000.12.07.19.30.49;	author fche;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Regenerate to pick up recent cgen changes.
[minor changes like removing K&R support, more consistent name for sfmt_empty]
@
text
@/* Decode header for m32rbf.

THIS FILE IS MACHINE GENERATED WITH CGEN.

Copyright (C) 2000-2010 Red Hat, Inc.

This file is part of the Red Hat simulators.


*/

#ifndef M32RBF_DECODE_H
#define M32RBF_DECODE_H

namespace m32rbf {

using namespace cgen;
using namespace m32r;

typedef UINT m32rbf_insn_word;

/* Enum declaration for instructions in cpu family m32rbf.  */
typedef enum m32rbf_insn_type {
  M32RBF_INSN_X_INVALID, M32RBF_INSN_ADD, M32RBF_INSN_ADD3, M32RBF_INSN_AND
 , M32RBF_INSN_AND3, M32RBF_INSN_OR, M32RBF_INSN_OR3, M32RBF_INSN_XOR
 , M32RBF_INSN_XOR3, M32RBF_INSN_ADDI, M32RBF_INSN_ADDV, M32RBF_INSN_ADDV3
 , M32RBF_INSN_ADDX, M32RBF_INSN_BC8, M32RBF_INSN_BC24, M32RBF_INSN_BEQ
 , M32RBF_INSN_BEQZ, M32RBF_INSN_BGEZ, M32RBF_INSN_BGTZ, M32RBF_INSN_BLEZ
 , M32RBF_INSN_BLTZ, M32RBF_INSN_BNEZ, M32RBF_INSN_BL8, M32RBF_INSN_BL24
 , M32RBF_INSN_BNC8, M32RBF_INSN_BNC24, M32RBF_INSN_BNE, M32RBF_INSN_BRA8
 , M32RBF_INSN_BRA24, M32RBF_INSN_CMP, M32RBF_INSN_CMPI, M32RBF_INSN_CMPU
 , M32RBF_INSN_CMPUI, M32RBF_INSN_DIV, M32RBF_INSN_DIVU, M32RBF_INSN_REM
 , M32RBF_INSN_REMU, M32RBF_INSN_JL, M32RBF_INSN_JMP, M32RBF_INSN_LD
 , M32RBF_INSN_LD_D, M32RBF_INSN_LDB, M32RBF_INSN_LDB_D, M32RBF_INSN_LDH
 , M32RBF_INSN_LDH_D, M32RBF_INSN_LDUB, M32RBF_INSN_LDUB_D, M32RBF_INSN_LDUH
 , M32RBF_INSN_LDUH_D, M32RBF_INSN_LD_PLUS, M32RBF_INSN_LD24, M32RBF_INSN_LDI8
 , M32RBF_INSN_LDI16, M32RBF_INSN_LOCK, M32RBF_INSN_MACHI, M32RBF_INSN_MACLO
 , M32RBF_INSN_MACWHI, M32RBF_INSN_MACWLO, M32RBF_INSN_MUL, M32RBF_INSN_MULHI
 , M32RBF_INSN_MULLO, M32RBF_INSN_MULWHI, M32RBF_INSN_MULWLO, M32RBF_INSN_MV
 , M32RBF_INSN_MVFACHI, M32RBF_INSN_MVFACLO, M32RBF_INSN_MVFACMI, M32RBF_INSN_MVFC
 , M32RBF_INSN_MVTACHI, M32RBF_INSN_MVTACLO, M32RBF_INSN_MVTC, M32RBF_INSN_NEG
 , M32RBF_INSN_NOP, M32RBF_INSN_NOT, M32RBF_INSN_RAC, M32RBF_INSN_RACH
 , M32RBF_INSN_RTE, M32RBF_INSN_SETH, M32RBF_INSN_SLL, M32RBF_INSN_SLL3
 , M32RBF_INSN_SLLI, M32RBF_INSN_SRA, M32RBF_INSN_SRA3, M32RBF_INSN_SRAI
 , M32RBF_INSN_SRL, M32RBF_INSN_SRL3, M32RBF_INSN_SRLI, M32RBF_INSN_ST
 , M32RBF_INSN_ST_D, M32RBF_INSN_STB, M32RBF_INSN_STB_D, M32RBF_INSN_STH
 , M32RBF_INSN_STH_D, M32RBF_INSN_ST_PLUS, M32RBF_INSN_ST_MINUS, M32RBF_INSN_SUB
 , M32RBF_INSN_SUBV, M32RBF_INSN_SUBX, M32RBF_INSN_TRAP, M32RBF_INSN_UNLOCK
 , M32RBF_INSN_CLRPSW, M32RBF_INSN_SETPSW, M32RBF_INSN_BSET, M32RBF_INSN_BCLR
 , M32RBF_INSN_BTST
} M32RBF_INSN_TYPE;


// Forward decls.
struct m32rbf_cpu;
struct m32rbf_scache;
typedef sem_status (m32rbf_sem_fn) (m32rbf_cpu* cpu, m32rbf_scache* sem);


// Instruction descriptor.

struct m32rbf_idesc {

  // scache engine executor for this insn
  m32rbf_sem_fn* execute;

  const char* insn_name;
  enum m32rbf_insn_type sem_index;
  m32r_insn_attr attrs;

  // idesc table: indexed by sem_index
  static m32rbf_idesc idesc_table[];

  static m32rbf_insn_type lookup_virtual (virtual_insn_type vit);
};

// Instruction argument buffer.

union m32rbf_sem_fields {
  struct { /* no operands */
    int empty;
  } sfmt_empty;
  struct { /*  */
    UINT f_uimm8;
  } sfmt_clrpsw;
  struct { /*  */
    UINT f_uimm4;
  } sfmt_trap;
  struct { /*  */
    IADDR i_disp24;
  } sfmt_bc24;
  struct { /*  */
    IADDR i_disp8;
  } sfmt_bc8;
  struct { /*  */
    SI* i_dr;
    UINT f_r1;
    UINT f_uimm5;
  } sfmt_slli;
  struct { /*  */
    SI* i_dr;
    UINT f_hi16;
    UINT f_r1;
  } sfmt_seth;
  struct { /*  */
    ADDR i_uimm24;
    SI* i_dr;
    UINT f_r1;
  } sfmt_ld24;
  struct { /*  */
    SI* i_dr;
    INT f_simm8;
    UINT f_r1;
  } sfmt_addi;
  struct { /*  */
    SI* i_sr;
    INT f_simm16;
    UINT f_r2;
    UINT f_uimm3;
  } sfmt_bset;
  struct { /*  */
    SI* i_src1;
    SI* i_src2;
    INT f_simm16;
    UINT f_r1;
    UINT f_r2;
  } sfmt_st_d;
  struct { /*  */
    IADDR i_disp16;
    SI* i_src1;
    SI* i_src2;
    UINT f_r1;
    UINT f_r2;
  } sfmt_beq;
  struct { /*  */
    SI* i_dr;
    SI* i_sr;
    UINT f_r1;
    UINT f_r2;
    UINT f_uimm16;
  } sfmt_and3;
  struct { /*  */
    SI* i_dr;
    SI* i_sr;
    INT f_simm16;
    UINT f_r1;
    UINT f_r2;
  } sfmt_add3;
  // This one is for chain/cti-chain virtual insns.
  struct {
    // Number of insns in pbb.
    unsigned insn_count;
    // This is used by chain insns and by untaken conditional branches.
    m32rbf_scache* next;
    m32rbf_scache* branch_target;
  } chain;
  // This one is for `before' virtual insns.
  struct {
    // The cache entry of the real insn.
    m32rbf_scache* insn;
  } before;
};

// Simulator instruction cache.

struct m32rbf_scache {
  // executor
  union {
    cgoto_label cgoto;
    m32rbf_sem_fn* fn;
  } execute;

  // PC of this instruction.
  PCADDR addr;

  // instruction class
  m32rbf_idesc* idesc;

  // argument buffer
  m32rbf_sem_fields fields;



  // decode given instruction
  void decode (m32rbf_cpu* current_cpu, PCADDR pc, m32rbf_insn_word base_insn, m32rbf_insn_word entire_insn);
};

} // end m32rbf namespace

// Decls of each semantic fn.

using m32rbf::m32rbf_sem_fn;
extern m32rbf_sem_fn m32rbf_sem_x_invalid;
extern m32rbf_sem_fn m32rbf_sem_add;
extern m32rbf_sem_fn m32rbf_sem_add3;
extern m32rbf_sem_fn m32rbf_sem_and;
extern m32rbf_sem_fn m32rbf_sem_and3;
extern m32rbf_sem_fn m32rbf_sem_or;
extern m32rbf_sem_fn m32rbf_sem_or3;
extern m32rbf_sem_fn m32rbf_sem_xor;
extern m32rbf_sem_fn m32rbf_sem_xor3;
extern m32rbf_sem_fn m32rbf_sem_addi;
extern m32rbf_sem_fn m32rbf_sem_addv;
extern m32rbf_sem_fn m32rbf_sem_addv3;
extern m32rbf_sem_fn m32rbf_sem_addx;
extern m32rbf_sem_fn m32rbf_sem_bc8;
extern m32rbf_sem_fn m32rbf_sem_bc24;
extern m32rbf_sem_fn m32rbf_sem_beq;
extern m32rbf_sem_fn m32rbf_sem_beqz;
extern m32rbf_sem_fn m32rbf_sem_bgez;
extern m32rbf_sem_fn m32rbf_sem_bgtz;
extern m32rbf_sem_fn m32rbf_sem_blez;
extern m32rbf_sem_fn m32rbf_sem_bltz;
extern m32rbf_sem_fn m32rbf_sem_bnez;
extern m32rbf_sem_fn m32rbf_sem_bl8;
extern m32rbf_sem_fn m32rbf_sem_bl24;
extern m32rbf_sem_fn m32rbf_sem_bnc8;
extern m32rbf_sem_fn m32rbf_sem_bnc24;
extern m32rbf_sem_fn m32rbf_sem_bne;
extern m32rbf_sem_fn m32rbf_sem_bra8;
extern m32rbf_sem_fn m32rbf_sem_bra24;
extern m32rbf_sem_fn m32rbf_sem_cmp;
extern m32rbf_sem_fn m32rbf_sem_cmpi;
extern m32rbf_sem_fn m32rbf_sem_cmpu;
extern m32rbf_sem_fn m32rbf_sem_cmpui;
extern m32rbf_sem_fn m32rbf_sem_div;
extern m32rbf_sem_fn m32rbf_sem_divu;
extern m32rbf_sem_fn m32rbf_sem_rem;
extern m32rbf_sem_fn m32rbf_sem_remu;
extern m32rbf_sem_fn m32rbf_sem_jl;
extern m32rbf_sem_fn m32rbf_sem_jmp;
extern m32rbf_sem_fn m32rbf_sem_ld;
extern m32rbf_sem_fn m32rbf_sem_ld_d;
extern m32rbf_sem_fn m32rbf_sem_ldb;
extern m32rbf_sem_fn m32rbf_sem_ldb_d;
extern m32rbf_sem_fn m32rbf_sem_ldh;
extern m32rbf_sem_fn m32rbf_sem_ldh_d;
extern m32rbf_sem_fn m32rbf_sem_ldub;
extern m32rbf_sem_fn m32rbf_sem_ldub_d;
extern m32rbf_sem_fn m32rbf_sem_lduh;
extern m32rbf_sem_fn m32rbf_sem_lduh_d;
extern m32rbf_sem_fn m32rbf_sem_ld_plus;
extern m32rbf_sem_fn m32rbf_sem_ld24;
extern m32rbf_sem_fn m32rbf_sem_ldi8;
extern m32rbf_sem_fn m32rbf_sem_ldi16;
extern m32rbf_sem_fn m32rbf_sem_lock;
extern m32rbf_sem_fn m32rbf_sem_machi;
extern m32rbf_sem_fn m32rbf_sem_maclo;
extern m32rbf_sem_fn m32rbf_sem_macwhi;
extern m32rbf_sem_fn m32rbf_sem_macwlo;
extern m32rbf_sem_fn m32rbf_sem_mul;
extern m32rbf_sem_fn m32rbf_sem_mulhi;
extern m32rbf_sem_fn m32rbf_sem_mullo;
extern m32rbf_sem_fn m32rbf_sem_mulwhi;
extern m32rbf_sem_fn m32rbf_sem_mulwlo;
extern m32rbf_sem_fn m32rbf_sem_mv;
extern m32rbf_sem_fn m32rbf_sem_mvfachi;
extern m32rbf_sem_fn m32rbf_sem_mvfaclo;
extern m32rbf_sem_fn m32rbf_sem_mvfacmi;
extern m32rbf_sem_fn m32rbf_sem_mvfc;
extern m32rbf_sem_fn m32rbf_sem_mvtachi;
extern m32rbf_sem_fn m32rbf_sem_mvtaclo;
extern m32rbf_sem_fn m32rbf_sem_mvtc;
extern m32rbf_sem_fn m32rbf_sem_neg;
extern m32rbf_sem_fn m32rbf_sem_nop;
extern m32rbf_sem_fn m32rbf_sem_not;
extern m32rbf_sem_fn m32rbf_sem_rac;
extern m32rbf_sem_fn m32rbf_sem_rach;
extern m32rbf_sem_fn m32rbf_sem_rte;
extern m32rbf_sem_fn m32rbf_sem_seth;
extern m32rbf_sem_fn m32rbf_sem_sll;
extern m32rbf_sem_fn m32rbf_sem_sll3;
extern m32rbf_sem_fn m32rbf_sem_slli;
extern m32rbf_sem_fn m32rbf_sem_sra;
extern m32rbf_sem_fn m32rbf_sem_sra3;
extern m32rbf_sem_fn m32rbf_sem_srai;
extern m32rbf_sem_fn m32rbf_sem_srl;
extern m32rbf_sem_fn m32rbf_sem_srl3;
extern m32rbf_sem_fn m32rbf_sem_srli;
extern m32rbf_sem_fn m32rbf_sem_st;
extern m32rbf_sem_fn m32rbf_sem_st_d;
extern m32rbf_sem_fn m32rbf_sem_stb;
extern m32rbf_sem_fn m32rbf_sem_stb_d;
extern m32rbf_sem_fn m32rbf_sem_sth;
extern m32rbf_sem_fn m32rbf_sem_sth_d;
extern m32rbf_sem_fn m32rbf_sem_st_plus;
extern m32rbf_sem_fn m32rbf_sem_st_minus;
extern m32rbf_sem_fn m32rbf_sem_sub;
extern m32rbf_sem_fn m32rbf_sem_subv;
extern m32rbf_sem_fn m32rbf_sem_subx;
extern m32rbf_sem_fn m32rbf_sem_trap;
extern m32rbf_sem_fn m32rbf_sem_unlock;
extern m32rbf_sem_fn m32rbf_sem_clrpsw;
extern m32rbf_sem_fn m32rbf_sem_setpsw;
extern m32rbf_sem_fn m32rbf_sem_bset;
extern m32rbf_sem_fn m32rbf_sem_bclr;
extern m32rbf_sem_fn m32rbf_sem_btst;

#endif /* M32RBF_DECODE_H */
@


1.6
log
@Regenerate cgen files, update copyright year.
@
text
@d82 1
a82 1
  } fmt_empty;
@


1.5
log
@	* cgen-cpu.h: Update for new location of cgen/bitset.h.
	* tracedis.h: Ditto.

Plus update generated files to pick up two cgen changes:
1)
	* desc-cpu.scm (/gen-hash-defines): Remove #include of cgen-bitset.h.
	* sid-cpu.scm (cgen-desc.h): Update location of cgen's bitset.h.
2)
	* utils-sim.scm (/gen-set-itype-and-extract): New function.
	(/gen-bracketed-set-itype-and-extract): New function.
	(/gen-decode-default-entry): Rewrite.
	(/table-guts-to-mask, /all-opcode-bits-used?): New functions.
	(/gen-decode-insn-entry): New arg table-guts-thus-far, all callers
	updated.  Don't unnecessarily emit check for whether all opcode bits
	have been examined.
	(/gen-decode-expr-set-itype): Delete.
	(/gen-decode-expr-entry): Update.
	(/gen-decode-table-entry): New arg table-guts-thus-far, all callers
	updated.  Keep track of decoder tables used thus far.
	(/gen-decoder-switch): Ditto.
@
text
@d5 1
a5 1
Copyright (C) 2000-2009 Red Hat, Inc.
@


1.4
log
@2006-10-18  Dave Brolley  <brolley@@redhat.com>

        * Contribute the following changes:

        2006-05-11  Dave Brolley  <brolley@@redhat.com>

        * configure.in: Add sh support.
        * compCGEN.cxx: #include sh* cpu headers.
        (compCGENListTypes): List hw-cpu-sh*.
        (compCGENCreate): Handle hw-cpu-sh*.
        * sh: New directory.
@
text
@d5 1
a5 1
Copyright (C) 2000-2005 Red Hat, Inc.
@


1.3
log
@Regenerate cgen files (not due to any recent changes, just want to
establish a reference point).
@
text
@d5 1
a5 1
Copyright (C) 2000, 2001, 2002, 2003 Red Hat, Inc.
d49 2
d84 3
d116 6
d293 5
@


1.2
log
@[arm7t/ChangeLog]
2001-01-26  Frank Ch. Eigler  <fche@@redhat.com>

	* arm-decode.h, -sem.cxx: Regenerated with more tracing improvements,
	* thumb-decode.h, -sem.cxx: Ditto.

[m32r/ChangeLog]
2001-01-26  Frank Ch. Eigler  <fche@@redhat.com>

	* m32r-decode.h, -sem.cxx: Regenerated with more tracing improvements.
@
text
@d5 1
a5 1
Copyright (C) 2000 Red Hat, Inc.
d7 1
a7 1
This file is part of the Cygnus Simulators.
a48 1
 , M32RBF_INSN_MAX
@


1.1
log
@* public snapshot of sid simulator
@
text
@d172 1
a172 4
  // writeback flags
  // Only used if profiling or parallel execution support enabled during
  // file generation.
  unsigned written;
@

