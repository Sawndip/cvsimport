head	1.1;
access;
symbols
	sid-snapshot-20180601:1.1
	sid-snapshot-20180501:1.1
	sid-snapshot-20180401:1.1
	sid-snapshot-20180301:1.1
	sid-snapshot-20180201:1.1
	sid-snapshot-20180101:1.1
	sid-snapshot-20171201:1.1
	sid-snapshot-20171101:1.1
	sid-snapshot-20171001:1.1
	sid-snapshot-20170901:1.1
	sid-snapshot-20170801:1.1
	sid-snapshot-20170701:1.1
	sid-snapshot-20170601:1.1
	sid-snapshot-20170501:1.1
	sid-snapshot-20170401:1.1
	sid-snapshot-20170301:1.1
	sid-snapshot-20170201:1.1
	sid-snapshot-20170101:1.1
	sid-snapshot-20161201:1.1
	sid-snapshot-20161101:1.1
	sid-snapshot-20160901:1.1
	sid-snapshot-20160801:1.1
	sid-snapshot-20160701:1.1
	sid-snapshot-20160601:1.1
	sid-snapshot-20160501:1.1
	sid-snapshot-20160401:1.1
	sid-snapshot-20160301:1.1
	sid-snapshot-20160201:1.1
	sid-snapshot-20160101:1.1
	sid-snapshot-20151201:1.1
	sid-snapshot-20151101:1.1
	sid-snapshot-20151001:1.1
	sid-snapshot-20150901:1.1
	sid-snapshot-20150801:1.1
	sid-snapshot-20150701:1.1
	sid-snapshot-20150601:1.1
	sid-snapshot-20150501:1.1
	sid-snapshot-20150401:1.1
	sid-snapshot-20150301:1.1
	sid-snapshot-20150201:1.1
	sid-snapshot-20150101:1.1
	sid-snapshot-20141201:1.1
	sid-snapshot-20141101:1.1
	sid-snapshot-20141001:1.1
	sid-snapshot-20140901:1.1
	sid-snapshot-20140801:1.1
	sid-snapshot-20140701:1.1
	sid-snapshot-20140601:1.1
	sid-snapshot-20140501:1.1
	sid-snapshot-20140401:1.1
	sid-snapshot-20140301:1.1
	sid-snapshot-20140201:1.1
	sid-snapshot-20140101:1.1
	sid-snapshot-20131201:1.1
	sid-snapshot-20131101:1.1
	sid-snapshot-20131001:1.1
	sid-snapshot-20130901:1.1
	sid-snapshot-20130801:1.1
	sid-snapshot-20130701:1.1
	sid-snapshot-20130601:1.1
	sid-snapshot-20130501:1.1
	sid-snapshot-20130401:1.1
	sid-snapshot-20130301:1.1
	sid-snapshot-20130201:1.1
	sid-snapshot-20130101:1.1
	sid-snapshot-20121201:1.1
	sid-snapshot-20121101:1.1
	sid-snapshot-20121001:1.1
	sid-snapshot-20120901:1.1
	sid-snapshot-20120801:1.1
	sid-snapshot-20120701:1.1
	sid-snapshot-20120601:1.1
	sid-snapshot-20120501:1.1
	sid-snapshot-20120401:1.1
	sid-snapshot-20120301:1.1
	sid-snapshot-20120201:1.1
	sid-snapshot-20120101:1.1
	sid-snapshot-20111201:1.1
	sid-snapshot-20111101:1.1
	sid-snapshot-20111001:1.1
	sid-snapshot-20110901:1.1
	sid-snapshot-20110801:1.1
	sid-snapshot-20110701:1.1
	sid-snapshot-20110601:1.1
	sid-snapshot-20110501:1.1
	sid-snapshot-20110401:1.1
	sid-snapshot-20110301:1.1
	sid-snapshot-20110201:1.1
	sid-snapshot-20110101:1.1
	sid-snapshot-20101201:1.1
	sid-snapshot-20101101:1.1
	sid-snapshot-20101001:1.1
	sid-snapshot-20100901:1.1
	sid-snapshot-20100801:1.1
	sid-snapshot-20100701:1.1
	sid-snapshot-20100601:1.1
	sid-snapshot-20100501:1.1
	sid-snapshot-20100401:1.1
	sid-snapshot-20100301:1.1
	sid-snapshot-20100201:1.1
	sid-snapshot-20100101:1.1
	sid-snapshot-20091201:1.1
	sid-snapshot-20091101:1.1
	sid-snapshot-20091001:1.1
	sid-snapshot-20090901:1.1
	sid-snapshot-20090801:1.1
	sid-snapshot-20090701:1.1
	sid-snapshot-20090601:1.1
	sid-snapshot-20090501:1.1
	sid-snapshot-20090401:1.1
	sid-snapshot-20090301:1.1
	sid-snapshot-20090201:1.1
	sid-snapshot-20090101:1.1
	sid-snapshot-20081201:1.1
	sid-snapshot-20081101:1.1
	sid-snapshot-20081001:1.1
	sid-snapshot-20080901:1.1
	sid-snapshot-20080801:1.1
	sid-snapshot-20080701:1.1
	sid-snapshot-20080601:1.1
	sid-snapshot-20080501:1.1
	sid-snapshot-20080403:1.1
	sid-snapshot-20080401:1.1
	sid-snapshot-20080301:1.1
	sid-snapshot-20080201:1.1
	sid-snapshot-20080101:1.1
	sid-snapshot-20071201:1.1
	sid-snapshot-20071101:1.1
	sid-snapshot-20071001:1.1;
locks; strict;
comment	@# @;


1.1
date	2005.08.19.19.39.07;	author brolley;	state Exp;
branches;
next	;


desc
@@


1.1
log
@2005-08-19  Dave Brolley  <brolley@@redhat.com>

        * Contribute these changes:

        2005-07-13  Dave Brolley  <brolley@@redhat.com>

        * compConfig.cxx (new_config_pin): Removed from
        dynamic_configurator_component.
        (clients): Added to dynamic_configurator_component.
        (dynamic_configurator_component): Remove new-config pin. Add
        clients as a multi relation.
        (step_pin_handler): Set the configure! attribute of each component
        related via the client relationship.
        (do_configure): Set config_names[0] and config_specs[0] if the
        handle is zero.
        * sid-control-dynamic-configurator.xml: Document the removal of the
        new-config pin and the addition of the clients relationship.
        * sid-control-dynamic-configurator.txt: Regenerated.

        2005-07-05  Dave Brolley  <brolley@@redhat.com>

        * compConfig.cxx (reset_pin_handler): New method of
        dynamic_configurator_component.
        (set_start_config): Likewise.
        (reset): Likewise.
        (reset_pin): New member of dynamic_configurator_component.
        (config_error_pin): Likewise.
        (dynamic_configurator_component): Initialize current_config, prev_config
        and prev_user_config in the reset method. Add "start-config" attribute.
        Add "reset" and "config-error" pins.
        (configure): Check result of do_configure. Drive config_error_pin if not
        ok.
        (configure_pin_handler): Drive config_error_pin if the handle is not
        valid.
        * sid-control-dynamic-configurator.xml: Document the "config-error" and
"reset"
        pins
        * sid-control-dynamic-configurator.txt: Regenerated.

        2005-06-21  Dave Brolley  <brolley@@redhat.com>

        * compConfig.cxx (step_pin_handler): Always drive new_config_pin.

        2005-06-06  Dave Brolley  <brolley@@redhat.com>

        * Makefile.am (pkgdata_DATA): Add sid-control-dynamic-configurator.txt.
        * Makefile.in: Regenerated.
        * compConfig.cxx (cfgroot_component::configure): Renamed to
        configure_file.
        (restore_config,set_syscall_config,check_config_change): New methods of
        dynamic_configurator_component.
        (in_function): Likewise.
        (prev_user_config): New member of dynamic_configurator_component.
        (dynamic_configurator_component): Prime the config_stack with a dummy
        entry.
        (add_warmup_functions): Tokenize based on ",".
        (add_profile_functions): Move on to the next spec on parse error.
        (dynamic_configurator_component::configure): Drive config_result_pin wit
h
        prev_user_config. Call set_syscall_config and check_config_change.
        (do_configure): Don't drive the config_result_pin here. Don't drive the
        step_control_pin here. Duplicate the first stack entry for the first
        config in the dummy entry of the stack. Now takes a reference to a
        config handle.
        (configure_pin_handler): Drive the config_result_pin with prev_user_conf
ig.
        Call restore_config, sys_syscall_config and check_config_change.
        (function_callee_pin_handler): Always use sid-internal-warmup for _Sid_c
onfig.
        (function_return_pin_handler): Return if the loader can't identify the c
urrent
        function. Call restore_config and check_config_change.
        * sid-control-dynamic-configurator.txt: New file.
        * sid-control-dynamic-configurator.xml: New file.

        2005-05-29  Dave Brolley  <brolley@@redhat.com>

        * compConfig.cxx (std::pair,sidutil::tokenize): Add using clause for the
se.
        (dynamic_config,lookup_dynamic_config): New methods of cfgroot_component
.
        (dynamic_configs,found_dynamic_config): New members of cfgroot_component
.
        (configure_line): Initialize num_invalid_chars.
        (cfgroot_component): Initialize dynamic_configs and found_dynamic_config
.
        Add virtual attributes dynamic-config! and lookup-dynamic-config!. Add
        attribute found-dynamic-config.
        (dynamic_configurator_component): New class.
        (compConfigListTypes): Push back sid-control-dynamic-configurator.
        (compConfigCreate): Handle sid-control-dynamic-configurator.
        (compConfigDelete): Delete dynamic_configurator_component.
@
text
@       sid-control-dynamic-configurator (internal :: config_component_library)

Synopsis:

   This component manages configuration profiles for a board.

     ----------------------------------------------------------------------

Functionality:

  Modelling:

   This component manages dynamic configuration of a board based upon the
   setting of an attribute, the driving of an input pin and entry/exit
   to/from functions. The selected configurations are made available to other
   components in the system which then reconfigure themselves accordingly.

   This component does not correspond to hardware.

   +-------------------------------------------------------------+
   |                          Behaviors                          |
   |-------------------------------------------------------------|
   |configuration|When the configure! attribute is written to,   |
   |             |the value is interpreted as the name of a      |
   |             |configuration spec. The corresponding          |
   |             |configuration string is then obtained from the |
   |             |configuration root component by setting its    |
   |             |lookup-dynamic-config! attribute and then, if  |
   |             |successful, reading its found-dynamic-config   |
   |             |attribute. A numeric handle is assigned to this|
   |             |configuration. The handle of the previous      |
   |             |configuration is driven and its value is driven|
   |             |on the config-result pin.                      |
   |             |                                               |
   |             |When the configure! pin is driven, the value is|
   |             |interpreted as the handle of a configuration   |
   |             |which was previously driven on the             |
   |             |config-result pin. This configuration is then  |
   |             |selected and the handle of the previous        |
   |             |configuration is driven on the config-result   |
   |             |                                               |
   |             |When the profile-functions! attribute is       |
   |             |written to, the value is interpreted as a      |
   |             |specification of the form                      |
   |             |FUNCTION_NAME[,FUNCTION_NAME]*:CONFIG_NAME,    |
   |             |where FUNCTION_NAME is the name of a function  |
   |             |in the target software and CONFIG_NAME is the  |
   |             |name of a configuration specified to the       |
   |             |configuration root component via its           |
   |             |dynamic-config attribute. The listed functions |
   |             |are then associated with the named             |
   |             |configuration. The function-caller!,           |
   |             |function-callee!, function-jump! and           |
   |             |function-return! pins should be driven by the  |
   |             |cpu component as the target software executes. |
   |             |The values driven on these pins are interpreted|
   |             |as memory addresses containing executable code.|
   |             |The addresses are driven on the                |
   |             |function-address, which should be connected to |
   |             |the function? pin of the board's loader        |
   |             |component. The name of the corresponding       |
   |             |function is then obtained from the loader's    |
   |             |current-function attribute. If the named       |
   |             |function is associated with a configuration,   |
   |             |that configuration is then selected.           |
   |             |                                               |
   |             |When the warmup-functions! attribute is written|
   |             |to, the value is interpreted as a              |
   |             |comma-separated list of function names in the  |
   |             |target software. The listed functions are then |
   |             |associated with the configuration named        |
   |             |sid-internal-warmup. When one of the listed    |
   |             |functions is entered (see profile-fuinctions!  |
   |             |above), this configuration is selected. The    |
   |             |special function _Sid_config should be         |
   |             |specified as a warmup function and it does not |
   |             |restore the previous configuration when        |
   |             |returning to the function which called it.     |
   |-------------+-----------------------------------------------|
   |      running|When the step! is driven, and the currently    |
   |             |selected configuration has changed since the   |
   |             |previous time the step! was driven, the handle |
   |             |of the currently selected configuration is     |
   |             |driven on the new-config and the string        |
   |             |representing the current configuration is made |
   |             |available via the current-config attribute.    |
   |             |                                               |
   |             |When a new configuration is selected, using one|
   |             |of the methods above, the step-control is      |
   |             |driven with the value 1.                       |
   +-------------------------------------------------------------+

   +-------------------------------------------------+
   |                 SID Conventions                 |
   |-------------------------------------------------|
   |           supervisory | supported        | -    |
   |-----------------------+------------------+------|
   |          save/restore | not supported    | -    |
   |-----------------------+------------------+------|
   |         triggerpoints | not supported    | -    |
   |-----------------------+------------------+------|
   |     recursion-inhibit | not supported    | -    |
   |-----------------------+------------------+------|
   |            categories | not supported    | -    |
   +-------------------------------------------------+

     ----------------------------------------------------------------------

Environment:

     ----------------------------------------------------------------------

Component Reference:

  Component: sid-control-dynamic-configurator

   +--------------------------------------------------------------+
   |                             pins                             |
   |--------------------------------------------------------------|
   |      name      |direction|     legalvalues     |  behaviors  |
   |----------------+---------+---------------------+-------------|
   |step!           |in       |any                  |running      |
   |----------------+---------+---------------------+-------------|
   |step-control    |out      |1                    |running      |
   |----------------+---------+---------------------+-------------|
   |configure!      |in       |configuration handle |configuration|
   |----------------+---------+---------------------+-------------|
   |new-config      |out      |configuration handle |configuration|
   |----------------+---------+---------------------+-------------|
   |config-result   |out      |configuration handle |configuration|
   |----------------+---------+---------------------+-------------|
   |function-caller!|in       |address              |configuration|
   |----------------+---------+---------------------+-------------|
   |function-callee!|in       |address              |configuration|
   |----------------+---------+---------------------+-------------|
   |function-jump!  |in       |address              |configuration|
   |----------------+---------+---------------------+-------------|
   |function-return!|in       |address              |configuration|
   |----------------+---------+---------------------+-------------|
   |function-address|out      |address              |configuration|
   +--------------------------------------------------------------+

   +-------------------------------------------------------------------+
   |                            attributes                             |
   |-------------------------------------------------------------------|
   |        name        | category | legal  | default |   behaviors   ||
   |                    |          | values |  value  |               ||
   |--------------------+----------+--------+---------+---------------||
   |warmup-functions!   |-         |-       |-        |configuration  ||
   |--------------------+----------+--------+---------+---------------||
   |profile-functions!  |-         |-       |-        |configuration  ||
   |--------------------+----------+--------+---------+---------------||
   |configure!          |-         |-       |-        |configuration  ||
   |--------------------+----------+--------+---------+---------------||
   |current-config      |-         |-       |-        |configuration  ||
   +-------------------------------------------------------------------+
@
