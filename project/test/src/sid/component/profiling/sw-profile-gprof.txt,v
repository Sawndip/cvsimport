head	1.7;
access;
symbols
	sid-snapshot-20180601:1.7
	sid-snapshot-20180501:1.7
	sid-snapshot-20180401:1.7
	sid-snapshot-20180301:1.7
	sid-snapshot-20180201:1.7
	sid-snapshot-20180101:1.7
	sid-snapshot-20171201:1.7
	sid-snapshot-20171101:1.7
	sid-snapshot-20171001:1.7
	sid-snapshot-20170901:1.7
	sid-snapshot-20170801:1.7
	sid-snapshot-20170701:1.7
	sid-snapshot-20170601:1.7
	sid-snapshot-20170501:1.7
	sid-snapshot-20170401:1.7
	sid-snapshot-20170301:1.7
	sid-snapshot-20170201:1.7
	sid-snapshot-20170101:1.7
	sid-snapshot-20161201:1.7
	sid-snapshot-20161101:1.7
	sid-snapshot-20160901:1.7
	sid-snapshot-20160801:1.7
	sid-snapshot-20160701:1.7
	sid-snapshot-20160601:1.7
	sid-snapshot-20160501:1.7
	sid-snapshot-20160401:1.7
	sid-snapshot-20160301:1.7
	sid-snapshot-20160201:1.7
	sid-snapshot-20160101:1.7
	sid-snapshot-20151201:1.7
	sid-snapshot-20151101:1.7
	sid-snapshot-20151001:1.7
	sid-snapshot-20150901:1.7
	sid-snapshot-20150801:1.7
	sid-snapshot-20150701:1.7
	sid-snapshot-20150601:1.7
	sid-snapshot-20150501:1.7
	sid-snapshot-20150401:1.7
	sid-snapshot-20150301:1.7
	sid-snapshot-20150201:1.7
	sid-snapshot-20150101:1.7
	sid-snapshot-20141201:1.7
	sid-snapshot-20141101:1.7
	sid-snapshot-20141001:1.7
	sid-snapshot-20140901:1.7
	sid-snapshot-20140801:1.7
	sid-snapshot-20140701:1.7
	sid-snapshot-20140601:1.7
	sid-snapshot-20140501:1.7
	sid-snapshot-20140401:1.7
	sid-snapshot-20140301:1.7
	sid-snapshot-20140201:1.7
	sid-snapshot-20140101:1.7
	sid-snapshot-20131201:1.7
	sid-snapshot-20131101:1.7
	sid-snapshot-20131001:1.7
	sid-snapshot-20130901:1.7
	sid-snapshot-20130801:1.7
	sid-snapshot-20130701:1.7
	sid-snapshot-20130601:1.7
	sid-snapshot-20130501:1.7
	sid-snapshot-20130401:1.7
	sid-snapshot-20130301:1.7
	sid-snapshot-20130201:1.7
	sid-snapshot-20130101:1.7
	sid-snapshot-20121201:1.7
	sid-snapshot-20121101:1.7
	sid-snapshot-20121001:1.7
	sid-snapshot-20120901:1.7
	sid-snapshot-20120801:1.7
	sid-snapshot-20120701:1.7
	sid-snapshot-20120601:1.7
	sid-snapshot-20120501:1.7
	sid-snapshot-20120401:1.7
	sid-snapshot-20120301:1.7
	sid-snapshot-20120201:1.7
	sid-snapshot-20120101:1.7
	sid-snapshot-20111201:1.7
	sid-snapshot-20111101:1.7
	sid-snapshot-20111001:1.7
	sid-snapshot-20110901:1.7
	sid-snapshot-20110801:1.7
	sid-snapshot-20110701:1.7
	sid-snapshot-20110601:1.7
	sid-snapshot-20110501:1.7
	sid-snapshot-20110401:1.7
	sid-snapshot-20110301:1.7
	sid-snapshot-20110201:1.7
	sid-snapshot-20110101:1.7
	sid-snapshot-20101201:1.7
	sid-snapshot-20101101:1.7
	sid-snapshot-20101001:1.7
	sid-snapshot-20100901:1.7
	sid-snapshot-20100801:1.7
	sid-snapshot-20100701:1.7
	sid-snapshot-20100601:1.7
	sid-snapshot-20100501:1.7
	sid-snapshot-20100401:1.7
	sid-snapshot-20100301:1.7
	sid-snapshot-20100201:1.7
	sid-snapshot-20100101:1.7
	sid-snapshot-20091201:1.7
	sid-snapshot-20091101:1.7
	sid-snapshot-20091001:1.7
	sid-snapshot-20090901:1.7
	sid-snapshot-20090801:1.7
	sid-snapshot-20090701:1.7
	sid-snapshot-20090601:1.7
	sid-snapshot-20090501:1.7
	sid-snapshot-20090401:1.7
	sid-snapshot-20090301:1.7
	sid-snapshot-20090201:1.7
	sid-snapshot-20090101:1.7
	sid-snapshot-20081201:1.7
	sid-snapshot-20081101:1.7
	sid-snapshot-20081001:1.7
	sid-snapshot-20080901:1.7
	sid-snapshot-20080801:1.7
	sid-snapshot-20080701:1.7
	sid-snapshot-20080601:1.7
	sid-snapshot-20080501:1.7
	sid-snapshot-20080403:1.7
	sid-snapshot-20080401:1.7
	sid-snapshot-20080301:1.7
	sid-snapshot-20080201:1.7
	sid-snapshot-20080101:1.7
	sid-snapshot-20071201:1.7
	sid-snapshot-20071101:1.7
	sid-snapshot-20071001:1.7
	sid-20020905-branchpoint:1.4
	sid-20020905-branch:1.4.0.2
	cygnus_cvs_20020108_pre:1.4;
locks; strict;
comment	@# @;


1.7
date	2006.06.26.22.00.35;	author brolley;	state Exp;
branches;
next	1.6;

1.6
date	2006.05.11.16.04.38;	author brolley;	state Exp;
branches;
next	1.5;

1.5
date	2002.11.11.22.28.29;	author fche;	state Exp;
branches;
next	1.4;

1.4
date	2001.11.08.21.55.11;	author fche;	state Exp;
branches;
next	1.3;

1.3
date	2001.08.03.01.30.21;	author bje;	state Exp;
branches;
next	1.2;

1.2
date	2001.04.04.23.53.31;	author fche;	state Exp;
branches;
next	1.1;

1.1
date	2000.12.07.19.30.56;	author fche;	state Exp;
branches;
next	;


desc
@@


1.7
log
@2006-06-26  Dave Brolley  <brolley@@redhat.com>

        * sw-profile-gprof.xml: Document new sampling interface.
        * sw-profile-gprof.txt: Regenerated.
@
text
@            sw-profile-gprof (libprof.la :: prof_component_library)

Synopsis:

   This component accumulates profiling information from a target CPU and
   generates a gprof-compatible histogram file.

     ----------------------------------------------------------------------

Functionality:

  Modelling:

   This component emulates profiling routines embedded in target programs, as
   if they were compiled with gcc -pg.

   +-------------------------------------------------+
   |                    Behaviors                    |
   |-------------------------------------------------|
   |  configuration | This component needs to be     |
   |                | configured with the            |
   |                | target-component relation. The |
   |                | first element in the relation  |
   |                | will be used as the target of  |
   |                | profiling. If pc-size is 64,   |
   |                | then the target component      |
   |                | should also have an attribute  |
   |                | with the same name suffixed by |
   |                | "-hi"                          |
   |                |                                |
   |                | The bucket-size attribute      |
   |                | configures the width of the    |
   |                | histogram buckets. It is       |
   |                | invalid to change the bucket   |
   |                | size if any samples have been  |
   |                | accumulated (if value-count is |
   |                | nonzero).                      |
   |                |                                |
   |                | The pc-size attribute          |
   |                | configures the width of the    |
   |                | program counter in bytes.      |
   |                | Valid values are 4 and 8.      |
   |                |                                |
   |                | The output-file setting gives  |
   |                | the name of the eventual       |
   |                | profiling output file. The     |
   |                | output-file-endianness setting |
   |                | determines the endianness of   |
   |                | the gprof formatted output.    |
   |----------------+--------------------------------|
   | data gathering | Whenever the sample pin is     |
   |                | driven, this component takes a |
   |                | single sample using the number |
   |                | drive on the pin. The          |
   |                | resulting number is            |
   |                | accumulated in a big           |
   |                | histogram, in the appropriate  |
   |                | bucket. The bucket is chosen   |
   |                | by combining the two 32 bit    |
   |                | values last driven on the pc   |
   |                | and the pc-hi pins to form one |
   |                | 64 bit index. This index is    |
   |                | then masked into               |
   |                | bucket-size-wide buckets. If   |
   |                | the target component is unset  |
   |                | then no sample is accumulated. |
   |                |                                |
   |                | Alternately, if the cg-caller  |
   |                | and perhaps the cg-caller-hi   |
   |                | and then the cg-callee and     |
   |                | perhaps the cg-callee-hi pins  |
   |                | are driven, the values driven  |
   |                | are interpreted as the caller  |
   |                | and the callee PC addresses of |
   |                | a subroutine call event. These |
   |                | events are recorded in a       |
   |                | dynamic call graph. The -hi    |
   |                | versions of the cg-caller-pin  |
   |                | and cg-callee-pin are used to  |
   |                | provide 64 bit pc values and,  |
   |                | if used, must be driven before |
   |                | their counterparts.            |
   |                |                                |
   |                | If a sample was collected, and |
   |                | falls between the limit-min    |
   |                | and limit-max attributes'      |
   |                | bounds, value-count is         |
   |                | incremented, and value-min and |
   |                | value-max registers are        |
   |                | updated.                       |
   |----------------+--------------------------------|
   |      resetting | Whenever the reset pin is      |
   |                | driven, the entire accumulated |
   |                | histogram and associated       |
   |                | counters are discarded and a   |
   |                | new count will be started. It  |
   |                | is not necessary to drive this |
   |                | pin at simulation startup.     |
   |----------------+--------------------------------|
   |        profile | Whenever the store pin is      |
   |     generation | driven, this component dumps   |
   |                | the entire accumulated         |
   |                | histogram and call graph into  |
   |                | a gprof (version 1) formatted  |
   |                | file. The file's endianness is |
   |                | chosen based on the            |
   |                | target-file-endianness         |
   |                | setting. If it is unset, the   |
   |                | target component's endian      |
   |                | attribute will be queried and  |
   |                | used if valid. The histogram   |
   |                | and call graph are not         |
   |                | automatically cleared after    |
   |                | the store operation. This      |
   |                | makes it possible to save      |
   |                | multiple generational          |
   |                | profiling files to track       |
   |                | history of a program           |
   |                | cumulatively. If the reset pin |
   |                | is triggered after every       |
   |                | store, then separate intervals |
   |                | of the program's execution may |
   |                | be profiled.                   |
   +-------------------------------------------------+

   +-------------------------------------------------+
   |                 SID Conventions                 |
   |-------------------------------------------------|
   |        supervisory | supported     | -          |
   |--------------------+---------------+------------|
   |       save/restore | not supported | -          |
   |--------------------+---------------+------------|
   |      triggerpoints | not supported | -          |
   |--------------------+---------------+------------|
   |  detect-reentrancy | not supported | -          |
   |--------------------+---------------+------------|
   |           category | supported     | pinsetting |
   +-------------------------------------------------+

     ----------------------------------------------------------------------

Environment:

   Related components

   This component is typically connected to a CPU, and told to monitor the
   CPU's program counter (pc) register. Sampling may be driven by any
   activity in SID, such as bus traffic (see hw-probe-bus), or host or target
   schedulers (see sid-sched-*).

         new sw-profile-gprof gprof
         new SOME_KIND_OF_CPU cpu
         relate gprof target-component cpu
         connect-pin shutdown-manager output-5 -> gprof store
         connect-pin cpu sample-gprof -> gprof sample
         connect-pin cpu gprof-pc -> gprof pc
    

   Host system

   The amount of data tracked by this component may be very large, if
   bucket-size is small and the target value has a large number of distinct
   values. Internally, a map or hash_map is used to track each bucket, so it
   does not matter how sparse the target value domain is. However, at store
   time, each potential bucket in the histogram, from value-min to value-max,
   is recorded, so sparse values may generate large blocks of zeroes in the
   output.

   Depending on whether the connected CPU model sends call-graph events, the
   resulting gmon.out may contain histogram with or without call-graph data.
   If the former, gprof must be run with an option such as --flat-profile.

     ----------------------------------------------------------------------

Component Reference:

  Component: sw-profile-gprof

   +-----------------------------------------------------+
   |                        pins                         |
   |-----------------------------------------------------|
   |    name    |direction|legalvalues|    behaviors     |
   |------------+---------+-----------+------------------|
   |reset       |in       |any        |resetting         |
   |------------+---------+-----------+------------------|
   |pc          |in       |any        |data gathering    |
   |------------+---------+-----------+------------------|
   |pc-hi       |in       |any        |data gathering    |
   |------------+---------+-----------+------------------|
   |sample      |in       |any        |data gathering    |
   |------------+---------+-----------+------------------|
   |cg-caller   |in       |any        |data gathering    |
   |------------+---------+-----------+------------------|
   |cg-caller-hi|in       |any        |data gathering    |
   |------------+---------+-----------+------------------|
   |cg-callee   |in       |any        |data gathering    |
   |------------+---------+-----------+------------------|
   |cg-callee-hi|in       |any        |data gathering    |
   |------------+---------+-----------+------------------|
   |store       |in       |any        |profile generation|
   +-----------------------------------------------------+

+--------------------------------------------------------------------------------------------+
|                                         attributes                                         |
|--------------------------------------------------------------------------------------------|
|          name          | category |       legal values       |  default   |   behaviors   ||
|                        |          |                          |   value    |               ||
|------------------------+----------+--------------------------+------------+---------------||
|value-count             |register  |decimal string            |-           |data gathering ||
|------------------------+----------+--------------------------+------------+---------------||
|value-min               |register  |decimal string            |-           |data gathering ||
|------------------------+----------+--------------------------+------------+---------------||
|value-max               |register  |decimal string            |-           |data gathering ||
|------------------------+----------+--------------------------+------------+---------------||
|limit-min               |setting   |decimal string            |0           |data gathering ||
|------------------------+----------+--------------------------+------------+---------------||
|limit-max               |setting   |decimal string            |infinity    |data gathering ||
|------------------------+----------+--------------------------+------------+---------------||
|bucket-size             |setting   |integer                   |1           |data gathering ||
|------------------------+----------+--------------------------+------------+---------------||
|pc-size                 |setting   |4 or 8                    |4           |data gathering ||
|------------------------+----------+--------------------------+------------+---------------||
|output-file             |setting   |file name                 |'gmon.out'  |configuration  ||
|------------------------+----------+--------------------------+------------+---------------||
|output-file-endianness  |setting   |0/1/2/little/big/unknown  |unknown     |configuration  ||
|------------------------+----------+--------------------------+------------+---------------||
|reset                   |pin       |-                         |-           |resetting      ||
|------------------------+----------+--------------------------+------------+---------------||
|sample                  |pin       |-                         |-           |data gathering ||
|------------------------+----------+--------------------------+------------+---------------||
|cg-caller               |pin       |-                         |-           |data gathering ||
|------------------------+----------+--------------------------+------------+---------------||
|cg-caller-hi            |pin       |-                         |-           |data gathering ||
|------------------------+----------+--------------------------+------------+---------------||
|cg-callee               |pin       |-                         |-           |data gathering ||
|------------------------+----------+--------------------------+------------+---------------||
|cg-callee-hi            |pin       |-                         |-           |data gathering ||
|------------------------+----------+--------------------------+------------+---------------||
|store                   |pin       |-                         |-           |profile        ||
|                        |          |                          |            |generation     ||
+--------------------------------------------------------------------------------------------+
@


1.6
log
@2006-05-11  Dave Brolley  <brolley@@redhat.com>

        * gprof.cxx (hitcount_map_t): PC now host_int_8.
        (cg_count_map_t): Likewise.
        (statistics): value_min,value_max,limit_min,limit_max likewise.
        New member, pc_size.
        (statistics::operator=): Copy pc_size.
        (cg_caller_hi_pin): New pin.
        (cg_callee_hi_pin): New pin.
        (limit_min_set): Handle 64 bits.
        (limit_max_set): Handle 64 bits.
        (pc_size_get): New method.
        (pc_size_set): New method.
        (accumulate): Use target_attribute + "-hi" to obtain 64 bit pc. Handle
        64 bits throughout.
        (accumulate_call): Use {caller,callee}_hi pin to obtain 64 bit pc. Handle
        64 bits throughout.
        (store_stats): Handle 32 or 64 bit pc.
        (gprof_component): Add cg-caller_hi and cg-callee-hi pins. Add pc-size
        attribute. Initialize value on cg-caller-hi and cg-callee-hi to zero.
        * sw-profile-gprof.xml: Document cg-caller-hi, cg-callee-hi,
        bucket-size, pc-size.
        * sw-profile-gprof.txt: Regenerated.
@
text
@d25 1
a25 5
   |                | profiling. The value-attribute |
   |                | setting contains the name of   |
   |                | the target component's         |
   |                | attribute that will be         |
   |                | collected. If pc-size is 64,   |
d53 4
a56 6
   |                | single sample of the           |
   |                | configured target component's  |
   |                | value attribute. The attribute |
   |                | is interpreted as a numeric    |
   |                | string, and the resulting      |
   |                | number is accumulated in a big |
d59 5
a63 1
   |                | by masking the number into     |
d65 2
a66 5
   |                | the target component is unset, |
   |                | or its target attribute does   |
   |                | not result in a valid numeric  |
   |                | string, no sample is           |
   |                | accumulated.                   |
d149 1
a149 2
   schedulers (see sid-sched-*). Perhaps the simplest way is to take a CPU PC
   sample every time the CPU has completed a batch of instructions.
d155 2
a156 4
         connect-pin foo output -> cpu step!
         connect-pin foo output -> gprof sample
         # Set sampling interval by number of CPU instructions.
         set cpu step-insn-count 127
d186 4
a222 2
|value-attribute         |setting   |name                      |'pc'        |data gathering ||
|------------------------+----------+--------------------------+------------+---------------||
@


1.5
log
@* better c++ standard compliance

[e.g.]
[include/ChangeLog]
2002-11-11  Frank Ch. Eigler  <fche@@redhat.com>

        * sidcpuutil.h (cpu_trace_stream): Add some std:: qualifiers.

[component/glue/ChangeLog]
2002-11-11  Frank Ch. Eigler  <fche@@redhat.com>

        * glue.cxx (bus_prober): Dtor throw() fixes.
@
text
@d29 5
a33 1
   |                | collected.                     |
d43 5
d74 3
a76 1
   |                | and then the cg-callee pins    |
d82 6
a87 1
   |                | dynamic call graph.            |
d187 61
a247 59
   +-------------------------------------------------+
   |                      pins                       |
   |-------------------------------------------------|
   |  name   |direction|legalvalues|    behaviors    |
   |---------+---------+-----------+-----------------|
   |reset    |in       |any        |resetting        |
   |---------+---------+-----------+-----------------|
   |sample   |in       |any        |data gathering   |
   |---------+---------+-----------+-----------------|
   |cg-caller|in       |any        |data gathering   |
   |---------+---------+-----------+-----------------|
   |cg-callee|in       |any        |data gathering   |
   |---------+---------+-----------+-----------------|
   |store    |in       |any        |profile          |
   |         |         |           |generation       |
   +-------------------------------------------------+

+----------------------------------------------------------------------------------+
|                                    attributes                                    |
|----------------------------------------------------------------------------------|
|         name         |category|      legal values      | default  |  behaviors  ||
|                      |        |                        |  value   |             ||
|----------------------+--------+------------------------+----------+-------------||
|value-count           |register|decimal string          |-         |data         ||
|                      |        |                        |          |gathering    ||
|----------------------+--------+------------------------+----------+-------------||
|value-min             |register|decimal string          |-         |data         ||
|                      |        |                        |          |gathering    ||
|----------------------+--------+------------------------+----------+-------------||
|value-max             |register|decimal string          |-         |data         ||
|                      |        |                        |          |gathering    ||
|----------------------+--------+------------------------+----------+-------------||
|limit-min             |setting |decimal string          |0         |data         ||
|                      |        |                        |          |gathering    ||
|----------------------+--------+------------------------+----------+-------------||
|limit-max             |setting |decimal string          |infinity  |data         ||
|                      |        |                        |          |gathering    ||
|----------------------+--------+------------------------+----------+-------------||
|value-attribute       |setting |name                    |'pc'      |data         ||
|                      |        |                        |          |gathering    ||
|----------------------+--------+------------------------+----------+-------------||
|output-file           |setting |file name               |'gmon.out'|configuration||
|----------------------+--------+------------------------+----------+-------------||
|output-file-endianness|setting |0/1/2/little/big/unknown|unknown   |configuration||
|----------------------+--------+------------------------+----------+-------------||
|reset                 |pin     |-                       |-         |resetting    ||
|----------------------+--------+------------------------+----------+-------------||
|sample                |pin     |-                       |-         |data         ||
|                      |        |                        |          |gathering    ||
|----------------------+--------+------------------------+----------+-------------||
|cg-caller             |pin     |-                       |-         |data         ||
|                      |        |                        |          |gathering    ||
|----------------------+--------+------------------------+----------+-------------||
|cg-callee             |pin     |-                       |-         |data         ||
|                      |        |                        |          |gathering    ||
|----------------------+--------+------------------------+----------+-------------||
|store                 |pin     |-                       |-         |profile      ||
|                      |        |                        |          |generation   ||
+----------------------------------------------------------------------------------+
@


1.4
log
@* call graph profiling support

[sid/bsp]
2001-11-08  Frank Ch. Eigler  <fche@@redhat.com>

	* configrun-sid.in (gprof): Connect call-graph pins.

[sid/include]
2001-11-08  Frank Ch. Eigler  <fche@@redhat.com>

	* sidcpuutil.h (basic_cpu): Add cg caller/callee pins, trace_stream
	fields.
	(basic_cpu ctor): Initialize them.
	(cg_profile): New function.

[sid/component/cgen-cpu]
2001-11-08  Frank Ch. Eigler  <fche@@redhat.com>

	* cgen-cpu.h (cgen_bi_endian_cpu): Remove trace_stream field: it's
	in basic_cpu now.
	* compCGEN.cxx: Corresponding change.

[sid/component/profiling]
2001-11-08  Frank Ch. Eigler  <fche@@redhat.com>

	* gprof.cxx (gprof_component): Add cg caller/callee pins, cg_count_map
	field.
	(accumulate_call): New function.
	(reset): Clear cg map.
	(store): Emit call graph info.  Emit histogram iff nonempty.
	* sw-profile-gprof.xml: Document call graph functionality.
	* sw-profile-gprof.txt: Regenerated.
@
text
@d161 3
a163 4
   Since this component generates a histogram-type gprof file instead of the
   arc-type file that -pg-compiled target programs usually generate, gprof
   must be run with an option such as --flat-profile. Call graph information
   is not collected.
@


1.3
log
@* Freshly generated documentation.
* ChangeLog entries to follow later.
@
text
@d57 6
a62 1
   |                | bucket-size-wide buckets.      |
d64 8
a71 11
   |                | If the target component is     |
   |                | unset, or its target attribute |
   |                | does not result in a valid     |
   |                | numeric string, no sample is   |
   |                | accumulated. If a sample was   |
   |                | collected, and falls between   |
   |                | the limit-min and limit-max    |
   |                | attributes' bounds,            |
   |                | value-count is incremented,    |
   |                | and value-min and value-max    |
   |                | registers are updated.         |
d73 9
a81 1
   |                | Whenever the reset pin is      |
d92 3
a94 3
   |                | histogram into a gprof         |
   |                | (version 1) formatted file.    |
   |                | The file's endianness is       |
d101 4
a104 3
   |                | is not automatically cleared   |
   |                | after the store operation.     |
   |                | This makes it possible to save |
d175 12
a186 10
   |  name  | direction | legalvalues |  behaviors   |
   |--------+-----------+-------------+--------------|
   | sample | in        | any         | data         |
   |        |           |             | gathering    |
   |--------+-----------+-------------+--------------|
   | reset  | in        | any         | data         |
   |        |           |             | gathering    |
   |--------+-----------+-------------+--------------|
   | store  | in        | any         | profile      |
   |        |           |             | generation   |
d217 2
d222 4
a225 1
|reset                 |pin     |-                       |-         |data         ||
@


1.2
log
@* function++

2001-04-04  Frank Ch. Eigler  <fche@@redhat.com>

        * gprof.cxx (limit_min, limit_max): New variables/attributes.
        (accumulate): Respect them.
        * sw-profile-gprof.txt: Document them.
@
text
@d1 1
a1 2
* Name
  sw-profile-gprof
d3 1
a3 125
* Synopsis
  This component accumulates profiling information from a target CPU and
  generates a gprof-compatible histogram file.

  Attributes: value-count value-min value-max value-attribute 
		output-file output-file-endianness sample reset store
		limit-min limit-max
  Pins: sample reset store
  Relations: target-component
  Shared library: libprof.la
  Symbol: prof_component_library

* Functionality
 
  - Modelling
    * This component emulates profiling routines embedded in target
      programs, as if they were compiled with "gcc -pg".

  - Behaviors
    * Configuration
      This component needs to be configured with the "target-component"
      relation.  The first element in the relation will be used as the
      target of profiling.  The "value-attribute" setting contains the
      name of the target component's attribute that will be collected.

      The "bucket-size" attribute configures the width of the
      histogram buckets.  It is invalid to change the bucket size if
      any samples have been accumulated (if "value-count" is nonzero).

      The "output-file" setting gives the name of the eventual profiling
      output file.  The "output-file-endianness" setting determines the
      endianness of the gprof formatted output.

    * Data gathering
      Whenever the "sample" pin is driven, this component takes a single
      sample of the configured target component's value attribute.  The
      attribute is interpreted as a numeric string, and the resulting
      number is accumulated in a big histogram, in the appropriate bucket.
      The bucket is chosen by masking the number into "bucket-size"-wide
      buckets.

      If the target component is unset, or its target attribute does not
      result in a valid numeric string, no sample is accumulated.  If a
      sample was collected, and falls between the "limit-min" and "limit-max"
      attributes' bounds, "value-count" is incremented, and "value-min"
      and "value-max" registers are updated.

      Whenever the "reset" pin is driven, the entire accumulated
      histogram and associated counters are discarded and a new count
      will be started.  It is not necessary to drive this pin at
      simulation startup.

    * Profile generation
      Whenever the "store" pin is driven, this component dumps the entire
      accumulated histogram into a gprof (version 1) formatted file.  The
      file's endianness is chosen based on the "target-file-endianness"
      setting.  If it is unset, the target component's "endian" attribute
      will be queried and used if valid.

      The histogram is not automatically cleared after the store
      operation.  This makes it possible to save multiple generational
      profiling files to track history of a program cumulatively.  If
      the "reset" pin is triggered after every "store", then separate
      intervals of the program's execution may be profiled.

  - SID conventions
    * This is a supervisory component.
    * It does not support state save/restore.
    * It does not support triggerpoints.
    * It does not detect reentrancy.
    * It presents attributes in the "pin", "setting" and categories.

* Environment

  - Related components
    * This component is typically connected to a CPU, and told to
      monitor the CPU's program counter (pc) register.  Sampling may
      be driven by any activity in SID, such as bus traffic (see
      hw-probe-bus), or host or target schedulers (see sid-sched-*).
      Perhaps the simplest way is to take a CPU PC sample every time
      the CPU has completed a batch of instructions.

	new sw-profile-gprof gprof
	new SOME_KIND_OF_CPU cpu
	relate gprof target-component cpu
	connect-pin shutdown-manager output-5 -> gprof store
	connect-pin foo output -> cpu step!
	connect-pin foo output -> gprof sample
	# Set sampling interval by number of CPU instructions.
	set cpu step-insn-count 127

  - Host system
    * The amount of data tracked by this component may be very large,
      if "bucket-size" is small and the target value has a large number
      of distinct values.  Internally, a map or hash_map is used to
      track each bucket, so it does not matter how sparse the target
      value domain is.  However, at store time, each potential
      bucket in the histogram, from "value-min" to "value-max", is
      recorded, so sparse values may generate large blocks of zeroes in
      the output.

    * Since this component generates a histogram-type gprof file
      instead of the arc-type file that "-pg"-compiled target programs
      usually generate, gprof must be run with an option such as
      "--flat-profile".  Call graph information is not collected.
    	
* SID interface reference
  - low level:
    * pins
      - sample | input | any | data gathering
      - reset | input | any | data gathering
      - store | input | any | profile generation

    * attributes
      - value-count | register | decimal string | n/a | data gathering
      - value-min | register | decimal string | n/a | data gathering
      - value-max | register | decimal string | n/a | data gathering
      - limit-min | setting | decimal string | 0 | data gathering
      - limit-max | setting | decimal string | infinity | data gathering
      - value-attribute | setting | name | "pc" | data gathering
      - output-file | setting | file name | "gmon.out" | configuration
      - output-file-endianness | setting | 0/1/2/little/big/unknown | unknown | configuration
      - sample | pin | n/a | n/a | data gathering
      - reset | pin | n/a | n/a | data gathering
      - store | pin | n/a | n/a | profile generation
d5 208
a212 2
    * relationships
      - target-component | configuration
@


1.1
log
@* public snapshot of sid simulator
@
text
@d10 1
d47 2
a48 1
      sample was collected, "value-count" is incremented, and "value-min"
d121 2
@

