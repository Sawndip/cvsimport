head	1.5;
access;
symbols
	sid-snapshot-20180601:1.5
	sid-snapshot-20180501:1.5
	sid-snapshot-20180401:1.5
	sid-snapshot-20180301:1.5
	sid-snapshot-20180201:1.5
	sid-snapshot-20180101:1.5
	sid-snapshot-20171201:1.5
	sid-snapshot-20171101:1.5
	sid-snapshot-20171001:1.5
	sid-snapshot-20170901:1.5
	sid-snapshot-20170801:1.5
	sid-snapshot-20170701:1.5
	sid-snapshot-20170601:1.5
	sid-snapshot-20170501:1.5
	sid-snapshot-20170401:1.5
	sid-snapshot-20170301:1.5
	sid-snapshot-20170201:1.5
	sid-snapshot-20170101:1.5
	sid-snapshot-20161201:1.5
	sid-snapshot-20161101:1.5
	sid-snapshot-20160901:1.5
	sid-snapshot-20160801:1.5
	sid-snapshot-20160701:1.5
	sid-snapshot-20160601:1.5
	sid-snapshot-20160501:1.5
	sid-snapshot-20160401:1.5
	sid-snapshot-20160301:1.5
	sid-snapshot-20160201:1.5
	sid-snapshot-20160101:1.5
	sid-snapshot-20151201:1.5
	sid-snapshot-20151101:1.5
	sid-snapshot-20151001:1.5
	sid-snapshot-20150901:1.5
	sid-snapshot-20150801:1.5
	sid-snapshot-20150701:1.5
	sid-snapshot-20150601:1.5
	sid-snapshot-20150501:1.5
	sid-snapshot-20150401:1.5
	sid-snapshot-20150301:1.5
	sid-snapshot-20150201:1.5
	sid-snapshot-20150101:1.5
	sid-snapshot-20141201:1.5
	sid-snapshot-20141101:1.5
	sid-snapshot-20141001:1.5
	sid-snapshot-20140901:1.5
	sid-snapshot-20140801:1.5
	sid-snapshot-20140701:1.5
	sid-snapshot-20140601:1.5
	sid-snapshot-20140501:1.5
	sid-snapshot-20140401:1.5
	sid-snapshot-20140301:1.5
	sid-snapshot-20140201:1.5
	sid-snapshot-20140101:1.5
	sid-snapshot-20131201:1.5
	sid-snapshot-20131101:1.5
	sid-snapshot-20131001:1.5
	sid-snapshot-20130901:1.5
	sid-snapshot-20130801:1.5
	sid-snapshot-20130701:1.5
	sid-snapshot-20130601:1.5
	sid-snapshot-20130501:1.5
	sid-snapshot-20130401:1.5
	sid-snapshot-20130301:1.5
	sid-snapshot-20130201:1.5
	sid-snapshot-20130101:1.5
	sid-snapshot-20121201:1.5
	sid-snapshot-20121101:1.5
	sid-snapshot-20121001:1.5
	sid-snapshot-20120901:1.5
	sid-snapshot-20120801:1.5
	sid-snapshot-20120701:1.5
	sid-snapshot-20120601:1.5
	sid-snapshot-20120501:1.5
	sid-snapshot-20120401:1.5
	sid-snapshot-20120301:1.5
	sid-snapshot-20120201:1.5
	sid-snapshot-20120101:1.5
	sid-snapshot-20111201:1.5
	sid-snapshot-20111101:1.5
	sid-snapshot-20111001:1.5
	sid-snapshot-20110901:1.5
	sid-snapshot-20110801:1.5
	sid-snapshot-20110701:1.5
	sid-snapshot-20110601:1.5
	sid-snapshot-20110501:1.5
	sid-snapshot-20110401:1.5
	sid-snapshot-20110301:1.5
	sid-snapshot-20110201:1.5
	sid-snapshot-20110101:1.5
	sid-snapshot-20101201:1.5
	sid-snapshot-20101101:1.5
	sid-snapshot-20101001:1.5
	sid-snapshot-20100901:1.5
	sid-snapshot-20100801:1.5
	sid-snapshot-20100701:1.5
	sid-snapshot-20100601:1.5
	sid-snapshot-20100501:1.5
	sid-snapshot-20100401:1.5
	sid-snapshot-20100301:1.5
	sid-snapshot-20100201:1.5
	sid-snapshot-20100101:1.5
	sid-snapshot-20091201:1.5
	sid-snapshot-20091101:1.5
	sid-snapshot-20091001:1.5
	sid-snapshot-20090901:1.5
	sid-snapshot-20090801:1.5
	sid-snapshot-20090701:1.5
	sid-snapshot-20090601:1.5
	sid-snapshot-20090501:1.5
	sid-snapshot-20090401:1.5
	sid-snapshot-20090301:1.5
	sid-snapshot-20090201:1.5
	sid-snapshot-20090101:1.5
	sid-snapshot-20081201:1.5
	sid-snapshot-20081101:1.5
	sid-snapshot-20081001:1.5
	sid-snapshot-20080901:1.5
	sid-snapshot-20080801:1.5
	sid-snapshot-20080701:1.5
	sid-snapshot-20080601:1.5
	sid-snapshot-20080501:1.5
	sid-snapshot-20080403:1.5
	sid-snapshot-20080401:1.5
	sid-snapshot-20080301:1.5
	sid-snapshot-20080201:1.5
	sid-snapshot-20080101:1.5
	sid-snapshot-20071201:1.5
	sid-snapshot-20071101:1.5
	sid-snapshot-20071001:1.5
	sid-20020905-branchpoint:1.2
	sid-20020905-branch:1.2.0.2
	cygnus_cvs_20020108_pre:1.2;
locks; strict;
comment	@ * @;


1.5
date	2007.03.02.20.07.13;	author brolley;	state Exp;
branches;
next	1.4;

1.4
date	2007.03.02.17.02.07;	author brolley;	state Exp;
branches;
next	1.3;

1.3
date	2005.02.12.16.25.47;	author fche;	state Exp;
branches;
next	1.2;

1.2
date	2001.08.03.06.02.47;	author mrg;	state Exp;
branches;
next	1.1;

1.1
date	2000.12.07.19.31.05;	author fche;	state Exp;
branches;
next	;


desc
@@


1.5
log
@2007-03-02  Dave Brolley  <brolley@@redhat.com>

        * arm7t-timer.h (~armTimerNoSched): New virtual destructor with empty
        throw specifier.
        (~armTimerSched): Likewise.
@
text
@// arm7t-timer.h- An implementation of the timers from the ARM PID7T
// development board.  -*- C++ -*-

// Copyright (C) 1999, 2000 Red Hat.
// This file is part of SID and is licensed under the GPL.
// See the file COPYING.SID for conditions for redistribution.
// arm7t-timer.h

// A more thorough description of this component may be found at
// <http://www.arm.com/Documentation/UserMans/rps/#timer>

#ifndef _ARM7T_TIMER_H
#define _ARM7T_TIMER_H

#include <sidcomp.h>
#include <sidso.h>
#include <sidcomputil.h>
#include <sidattrutil.h>
#include <sidpinutil.h>
#include <sidpinattrutil.h>
#include <sidbusutil.h>
#include <sidschedutil.h>
#include <sidtypes.h>
#include <sidwatchutil.h>

#include <string>
#include <iostream>

using std::vector;
using std::string;
using std::ostream;
using std::istream;
using std::ios;
using std::cerr;
using std::endl;

using sid::component;
using sid::bus;
using sid::little_int_4;
using sid::host_int_2;
using sid::host_int_4;
using sid::component_library;
using sid::COMPONENT_LIBRARY_MAGIC;

using sidutil::fixed_attribute_map_component;
using sidutil::fixed_bus_map_component;
using sidutil::fixed_pin_map_component;
using sidutil::no_accessor_component;
using sidutil::no_relation_component;
using sidutil::callback_pin;
using sidutil::output_pin;
using sidutil::word_bus;
using sidutil::scheduler_event_subscription;
using sidutil::make_attribute;
using sidutil::parse_attribute;
using sidutil::self_watcher;

#include <vector>
#include <string>

class armTimer: public virtual component, 
		protected fixed_attribute_map_component,
		protected fixed_bus_map_component,
		protected fixed_pin_map_component,
		protected no_accessor_component,
		protected no_relation_component
{
public:
  armTimer();
  ~armTimer() throw () { }

private:
  class bus_interface: public word_bus<little_int_4>
  {
  public:
    bus_interface(armTimer *h): host(h) {}
    bus::status word_write(host_int_4 addr,
			   little_int_4 mask,
			   little_int_4 data);

    bus::status word_read(host_int_4 addr,
			  little_int_4 mask,
			  little_int_4& data);
  private:
    armTimer *host;
  };
  friend class bus_interface;
  friend class armTimerSched;

protected:
  virtual void tick();
  virtual void reset_schedule() {}

  host_int_2 counter;
  bool enabled;
  host_int_2 loadValue;

  enum timer_mode { periodic, free_running };
  timer_mode mode;
  friend istream& operator >> (istream&, timer_mode&);
  friend ostream& operator << (ostream&, const timer_mode&);

  host_int_2 prescale;
  output_pin interrupt_pin;
  bus_interface bus;

  callback_pin<armTimer> reset_pin;
  void reset_pin_handler (host_int_4) { this->reset(); }
  virtual void reset ();
  
  // State save and restore.
  std::string save_state();
  sid::component::status restore_state ( const string& state );
  friend ostream& operator << (ostream& op, const armTimer& copy_obj);
  friend istream& operator >> (istream& ip, armTimer& ovwrite_obj);
  
  // Triggerpoint manager
  friend class self_watcher<armTimer>;
  self_watcher<armTimer> triggerpoint_manager;
  
  sid::component::status
  pin_factory(const string& name)
    {
      return triggerpoint_manager.create_virtual_pin(name);
    }
  
  void
  pin_junkyard(const string& name)
    {
      return triggerpoint_manager.destroy_virtual_pin(name);
    }

  // These are made virtual so that derived classes may stream out
  // additional data.  Override these methods.

  virtual void stream(ostream& op) const;
  virtual void destream(istream& ip);
};


class armTimerNoSched: public armTimer
{
public:
  armTimerNoSched();
  ~armTimerNoSched() throw () {}

private:
  callback_pin<armTimerNoSched> clockpin;
  unsigned ticks; // does not get larger than 0 .. divider
  void tick(); // perform divisor calculations here
  void tick(host_int_4) { this->tick(); } // indirection for callback_pin
  void reset ();

  void stream(ostream& op) const;
  void destream(istream& ip);
};


class armTimerSched: public armTimer
{
public:
  armTimerSched();
  ~armTimerSched() throw () {}

private:
  friend class scheduler_event_subscription<armTimerSched>;
  scheduler_event_subscription<armTimerSched> ticker;

  void reset_schedule();
};

#endif // _ARM7T_TIMER_H

@


1.4
log
@2007-03-02  Dave Brolley  <brolley@@redhat.com>

        * arm7t-timer.h (~armTimerNoSched): New virtual destructor with empty
        throw specifier.
@
text
@d163 1
@


1.3
log
@* build fixes for gcc 3.4

[cgen-cpu]
2005-02-12  Frank Ch. Eigler  <fche@@elastic.org>

	* cgen-engine.h (virtual_insn_type): Move decl here ...
	* cgen-cpu.h: ... from here.
	* Makefile.am (SOURCES): Don't try to build fp code.
	* Makefile.in: Regenerated.

[gdb]
2005-02-12  Frank Ch. Eigler  <fche@@elastic.org>

	* gdbserv-state.c (gdbserv_fromclient_break): Fix statementless
	label at end of block.

[mapper]
2005-02-12  Frank Ch. Eigler  <fche@@elastic.org>

	* compMapper.cxx (read/write_strideoffset_any, read/write_any):
	Move these generic_mapper_bus functions out of line.

[sched]
2005-02-12  Frank Ch. Eigler  <fche@@elastic.org>

	* compSched.cxx (scheduler_component): Clarify friend decl.

[timers/arm7t]
2005-02-12  Frank Ch. Eigler  <fche@@elastic.org>

	* arm7t-timer.h: Add needed friend decl.
@
text
@d145 1
@


1.2
log
@* make it compile with GCC 3.0:
        - missing throw() specifiers in bus & component dtors
	- `std::' vs `::' namespace issues
@
text
@d88 1
@


1.1
log
@* public snapshot of sid simulator
@
text
@d70 1
@

