head	1.2;
access;
symbols
	sid-snapshot-20180601:1.2
	sid-snapshot-20180501:1.2
	sid-snapshot-20180401:1.2
	sid-snapshot-20180301:1.2
	sid-snapshot-20180201:1.2
	sid-snapshot-20180101:1.2
	sid-snapshot-20171201:1.2
	sid-snapshot-20171101:1.2
	sid-snapshot-20171001:1.2
	sid-snapshot-20170901:1.2
	sid-snapshot-20170801:1.2
	sid-snapshot-20170701:1.2
	sid-snapshot-20170601:1.2
	sid-snapshot-20170501:1.2
	sid-snapshot-20170401:1.2
	sid-snapshot-20170301:1.2
	sid-snapshot-20170201:1.2
	sid-snapshot-20170101:1.2
	sid-snapshot-20161201:1.2
	sid-snapshot-20161101:1.2
	sid-snapshot-20160901:1.2
	sid-snapshot-20160801:1.2
	sid-snapshot-20160701:1.2
	sid-snapshot-20160601:1.2
	sid-snapshot-20160501:1.2
	sid-snapshot-20160401:1.2
	sid-snapshot-20160301:1.2
	sid-snapshot-20160201:1.2
	sid-snapshot-20160101:1.2
	sid-snapshot-20151201:1.2
	sid-snapshot-20151101:1.2
	sid-snapshot-20151001:1.2
	sid-snapshot-20150901:1.2
	sid-snapshot-20150801:1.2
	sid-snapshot-20150701:1.2
	sid-snapshot-20150601:1.2
	sid-snapshot-20150501:1.2
	sid-snapshot-20150401:1.2
	sid-snapshot-20150301:1.2
	sid-snapshot-20150201:1.2
	sid-snapshot-20150101:1.2
	sid-snapshot-20141201:1.2
	sid-snapshot-20141101:1.2
	sid-snapshot-20141001:1.2
	sid-snapshot-20140901:1.2
	sid-snapshot-20140801:1.2
	sid-snapshot-20140701:1.2
	sid-snapshot-20140601:1.2
	sid-snapshot-20140501:1.2
	sid-snapshot-20140401:1.2
	sid-snapshot-20140301:1.2
	sid-snapshot-20140201:1.2
	sid-snapshot-20140101:1.2
	sid-snapshot-20131201:1.2
	sid-snapshot-20131101:1.2
	sid-snapshot-20131001:1.2
	sid-snapshot-20130901:1.2
	sid-snapshot-20130801:1.2
	sid-snapshot-20130701:1.2
	sid-snapshot-20130601:1.2
	sid-snapshot-20130501:1.2
	sid-snapshot-20130401:1.2
	sid-snapshot-20130301:1.2
	sid-snapshot-20130201:1.2
	sid-snapshot-20130101:1.2
	sid-snapshot-20121201:1.2
	sid-snapshot-20121101:1.2
	sid-snapshot-20121001:1.2
	sid-snapshot-20120901:1.2
	sid-snapshot-20120801:1.2
	sid-snapshot-20120701:1.2
	sid-snapshot-20120601:1.2
	sid-snapshot-20120501:1.2
	sid-snapshot-20120401:1.2
	sid-snapshot-20120301:1.2
	sid-snapshot-20120201:1.2
	sid-snapshot-20120101:1.2
	sid-snapshot-20111201:1.2
	sid-snapshot-20111101:1.2
	sid-snapshot-20111001:1.2
	sid-snapshot-20110901:1.2
	sid-snapshot-20110801:1.2
	sid-snapshot-20110701:1.2
	sid-snapshot-20110601:1.2
	sid-snapshot-20110501:1.2
	sid-snapshot-20110401:1.2
	sid-snapshot-20110301:1.2
	sid-snapshot-20110201:1.2
	sid-snapshot-20110101:1.2
	sid-snapshot-20101201:1.2
	sid-snapshot-20101101:1.2
	sid-snapshot-20101001:1.2
	sid-snapshot-20100901:1.2
	sid-snapshot-20100801:1.2
	sid-snapshot-20100701:1.2
	sid-snapshot-20100601:1.2
	sid-snapshot-20100501:1.2
	sid-snapshot-20100401:1.2
	sid-snapshot-20100301:1.2
	sid-snapshot-20100201:1.2
	sid-snapshot-20100101:1.2
	sid-snapshot-20091201:1.2
	sid-snapshot-20091101:1.2
	sid-snapshot-20091001:1.2
	sid-snapshot-20090901:1.2
	sid-snapshot-20090801:1.2
	sid-snapshot-20090701:1.2
	sid-snapshot-20090601:1.2
	sid-snapshot-20090501:1.2
	sid-snapshot-20090401:1.2
	sid-snapshot-20090301:1.2
	sid-snapshot-20090201:1.2
	sid-snapshot-20090101:1.2
	sid-snapshot-20081201:1.2
	sid-snapshot-20081101:1.2
	sid-snapshot-20081001:1.2
	sid-snapshot-20080901:1.2
	sid-snapshot-20080801:1.2
	sid-snapshot-20080701:1.2
	sid-snapshot-20080601:1.2
	sid-snapshot-20080501:1.2
	sid-snapshot-20080403:1.2
	sid-snapshot-20080401:1.2
	sid-snapshot-20080301:1.2
	sid-snapshot-20080201:1.2
	sid-snapshot-20080101:1.2
	sid-snapshot-20071201:1.2
	sid-snapshot-20071101:1.2
	sid-snapshot-20071001:1.2
	sid-20020905-branchpoint:1.2
	sid-20020905-branch:1.2.0.2
	cygnus_cvs_20020108_pre:1.2;
locks; strict;
comment	@# @;


1.2
date	2001.08.03.01.30.22;	author bje;	state Exp;
branches;
next	1.1;

1.1
date	2000.12.07.19.31.05;	author fche;	state Exp;
branches;
next	;


desc
@@


1.2
log
@* Freshly generated documentation.
* ChangeLog entries to follow later.
@
text
@           hw-timer-arm/ref (libtimers.la :: timer_component_library)

Synopsis:

   The timer peripheral on the ARM PID7T is a simple 16-bit down counter. It
   can be programmed with a number of modes and pre-scale values. For
   example, you can program the timer to raise an interrupt when a specified
   interval has elapsed. More details on the timer can be found in the ARM
   documentation (see ``References'').

     ----------------------------------------------------------------------

Functionality:

  Modelling:

   This component models the ARM reference timer found on the ARM PID7T
   development board. The ARM PID7T comes with two such timers, which may or
   may not be implemented on the same piece of silicon. Instead of
   implementing a dual timer, you can configure a functionally equivalent
   system by using two instances of a single timer. This simplifies the
   implementation and provides more design flexibility to system builders.

   +------------------------------------------------------+
   |                      Behaviors                       |
   |------------------------------------------------------|
   |   resetting|Upon construction, or when the reset     |
   |            |input pin is driven, the timer is reset  |
   |            |to a powerup state. This includes        |
   |            |deasserting the interrupt line and       |
   |            |disabling counting.                      |
   |------------+-----------------------------------------|
   |    clocking|The two variants of the ARM reference    |
   |            |timer, hw-timer-arm/ref-sched and        |
   |            |hw-timer-arm/ref-nosched, differ in the  |
   |            |way that they receive clocking signals.  |
   |            |The 'nosched' variant relies on a clock  |
   |            |pin, which is interpreted as the regular |
   |            |"system clock". The `sched' variant      |
   |            |relies on an external scheduler component|
   |            |to provide a pre-divided clock. Its      |
   |            |divided-clock-control and                |
   |            |divided-clock-event pins are used to     |
   |            |signal to and from the scheduler.        |
   |------------+-----------------------------------------|
   |interrupting|Whenever the counter underflows, an      |
   |            |interrupt signal is transmitted by       |
   |            |driving the interrupt output pin to a    |
   |            |nonzero value. When the interrupt is     |
   |            |cleared, the pin is driven with a zero   |
   |            |value.                                   |
   |------------+-----------------------------------------|
   |    register|The registers bus provides access to a   |
   |      access|bank of control registers. The memory    |
   |            |map, described in detail in the reference|
   |            |documentation, is as follows:            |
   |            |                                         |
   |            |+---------------------------------------+|
   |            || address | read         | write        ||
   |            ||---------+--------------+--------------||
   |            || 0       | TimerLoad    | TimerLoad    ||
   |            ||---------+--------------+--------------||
   |            || 4       | TimerValue   | Reserved     ||
   |            ||---------+--------------+--------------||
   |            || 8       | TimerControl | TimerControl ||
   |            ||---------+--------------+--------------||
   |            || 12      | Reserved     | TimerClear   ||
   |            ||---------+--------------+--------------||
   |            || 16      | Reserved     | Reserved     ||
   |            |+---------------------------------------+|
   +------------------------------------------------------+

   +-------------------------------------------------+
   |                 SID Conventions                 |
   |-------------------------------------------------|
   |    functional | supported | -                   |
   |---------------+-----------+---------------------|
   |  save/restore | supported | -                   |
   |---------------+-----------+---------------------|
   | triggerpoints | supported | The component       |
   |               |           | supports            |
   |               |           | triggerpoints set   |
   |               |           | on any of the       |
   |               |           | available           |
   |               |           | attributes.         |
   +-------------------------------------------------+

     ----------------------------------------------------------------------

Environment:

   Related components
     * The timer's interrupt pin is usually connected to the interrupt pin of
       a CPU or a suitable interrupt controller.

     * This configuration file fragment illustrates how to configure the
       'sched' variant of the timer:

         new hw-timer-arm/ref-sched timer
         new sid-sched-sim sched
         new hw-interrupt-arm/ref intcontrlr
         set sched num-clients 1
         set sched enabled? 1
         connect-pin sched 0-control <- timer divided-clock-control
         connect-pin sched 0-event -> timer divided-clock-event
         connect-pin timer interrupt -> intcontrlr interrupt-source-4
        

     * This configuration file fragment illustrates how to configure the
       'nosched' variant of the timer:

         new hw-timer-arm/ref-nosched timer
         new hw-interrupt-arm/ref intcontrlr
         connect-pin main perform-activity timer clock
         connect-pin timer interrupt intcontrlr interrupt-source-4
        

   Host system

   The hw-timer-arm/ref-sched variant of the timer is more efficient as it
   does not rely on yielding simulation time to the timer for every clock
   cycle; it should be used in almost all circumstances.

     ----------------------------------------------------------------------

Component Reference:

  Component: hw-timer-arm/ref (Abstract)

   +--------------------------------------------------------+
   |                          pins                          |
   |--------------------------------------------------------|
   |        name         |direction|legalvalues| behaviors  |
   |---------------------+---------+-----------+------------|
   |interrupt            |out      |0 or       |interrupting|
   |                     |         |non-zero   |            |
   |---------------------+---------+-----------+------------|
   |reset                |in       |any        |resetting   |
   |---------------------+---------+-----------+------------|
   |clock                |in       |any        |clocking    |
   |---------------------+---------+-----------+------------|
   |divided-clock-control|out      |positive   |clocking    |
   |                     |         |value      |            |
   |---------------------+---------+-----------+------------|
   |divided-clock-event  |in       |any        |clocking    |
   +--------------------------------------------------------+

   +-------------------------------------------------+
   |                      buses                      |
   |-------------------------------------------------|
   |   name    | addresses |  accesses  | behaviors  |
   |-----------+-----------+------------+------------|
   | registers | 0x0 to    | read/write | register   |
   |           | 0x13      |            | access     |
   +-------------------------------------------------+

   +-------------------------------------------------------+
   |                      attributes                       |
   |-------------------------------------------------------|
   |   name   |category | legal values |default |behaviors||
   |          |         |              | value  |         ||
   |----------+---------+--------------+--------+---------||
   |counter   |watchable|number        |register|         ||
   |          |register |              |access  |         ||
   |----------+---------+--------------+--------+---------||
   |load-value|watchable|number        |register|         ||
   |          |register |              |access  |         ||
   |----------+---------+--------------+--------+---------||
   |enabled   |watchable|true or false |register|         ||
   |          |register |              |access  |         ||
   |----------+---------+--------------+--------+---------||
   |mode      |watchable|`periodic' or |register|         ||
   |          |register |`free-running'|access  |         ||
   |----------+---------+--------------+--------+---------||
   |prescale  |watchable|0..3          |register|         ||
   |          |register |              |access  |         ||
   |----------+---------+--------------+--------+---------||
   |ticks     |watchable|0..prescale-1 |clocking|         ||
   |          |register |              |        |         ||
   +-------------------------------------------------------+

  Variant: hw-timer-arm/ref-sched

   Same as hw-timer-arm/ref

  Variant: hw-timer-arm/ref-nosched

   Same as hw-timer-arm/ref

     ----------------------------------------------------------------------

References:

   ARM reference documentation can be found on the web.
@


1.1
log
@* public snapshot of sid simulator
@
text
@d1 1
a1 2
* Name
  hw-timer-arm/ref-nosched hw-timer-arm/ref-sched
d3 192
a194 129
* Synopsis
  The timer peripheral on the ARM PID7T is a simple 16-bit down
  counter.  It can be programmed with a number of modes and pre-scale
  values.  For example, you can program the timer to raise an interrupt
  when a specified interval has elapsed.  More details on the timer
  can be found in the ARM documentation (see ``References'').

  Pins: interrupt reset
        clock (nosched variant only)
	divided-clock-control divided-clock-event (sched variant only)
  Buses: registers
  Attributes: interrupt counter load-value enabled mode prescale
	state-snapshot
	ticks (nosched variant only)

  Library: libtimers.la
  Symbol name: timer_component_library

* Functionality
  - Modelling
    * This component models the ARM reference timer found on the ARM
      PID7T development board.  The ARM PID7T comes with two such
      timers, which may or may not be implemented on the same piece of
      silicon.  Instead of implementing a dual timer, you can configure 
      a functionally equivalent system by using two instances of a
      single timer. This simplifies the implementation and provides more
      design flexibility to system builders.

  - Behaviors

    * Resetting

      Upon construction, or when the "reset" input pin is driven, the
      timer is reset to a powerup state.  This includes deasserting the
      interrupt line and disabling counting.

    * Clocking

      The two variants of the ARM reference timer,
      `hw-timer-arm/ref-sched' and `hw-timer-arm/ref-nosched', differ
      in the way that they receive clocking signals.  The `nosched'
      variant relies on a "clock" pin, which is interpreted as the
      regular "system clock".  The `sched' variant relies on an
      external scheduler component to provide a pre-divided clock.
      Its "divided-clock-control" and "divided-clock-event" pins are
      used to signal to and from the scheduler.

    * Interrupting

      Whenever the counter underflows, an interrupt signal is
      transmitted by driving the "interrupt" output pin to a nonzero
      value.  When the interrupt is cleared, the pin is driven with a
      zero value.

    * Register access
      
      The "registers" bus provides access to a bank of control
      registers.  The memory map, described in detail in the reference
      documentation, is as follows:

		address	read		write
		0	TimerLoad	TimerLoad
		4	TimerValue	Reserved
		8	TimerControl	TimerControl
		12	Reserved	TimerClear
		16	Reserved	Reserved

  - SID conventions

    * This is a functional component.
    * This component implements basic state save/restore support.
    * The component supports triggerpoints set on any of the available
      attributes.

* Environment

  - Related components
    * The timer's `interrupt' pin is usually connected to the
      interrupt pin of a CPU or a suitable interrupt controller.

    * This configuration file fragment illustrates how to configure
      the `sched' variant of the timer:

	new hw-timer-arm/ref-sched timer
	new sid-sched-sim sched
	new hw-interrupt-arm/ref intcontrlr
	set sched num-clients 1
	set sched enabled? 1
	connect-pin sched 0-control <- timer divided-clock-control
	connect-pin sched 0-event -> timer divided-clock-event
	connect-pin timer interrupt -> intcontrlr interrupt-source-4

    * This configuration file fragment illustrates how to configure
      the `nosched' variant of the timer:

	new hw-timer-arm/ref-nosched timer
	new hw-interrupt-arm/ref intcontrlr
	connect-pin main perform-activity timer clock
	connect-pin timer interrupt intcontrlr interrupt-source-4

  - Host system
    * The `sched' variant of the timer is more efficient as it does
      not rely on yielding simulation time to the timer for every
      clock cycle; it should be used in almost all circumstances.

* SID interface reference

  - low level:
    * pins
      - interrupt | output | 0 or non-zero | interrupting
      - reset | input | any | resetting
      - clock | input | any | clocking
      - divided-clock-control | output | positive value | clocking
      - divided-clock-event | input | any | clocking

    * buses
      - registers | 0x0 to 0x13 | read/write | register access

    * attributes
      - counter | watchable register | number | register access
      - load-value | watchable register | number | register access
      - enabled | watchable register | true or false | register access
      - mode | watchable register | `periodic' or `free-running' | register access
      - prescale | watchable register | 0..3 | register access
      - ticks | watchable register | 0..prescale-1 | clocking 

* References
  ARM reference documentation can be found on the web at
  <http://www.arm.com/Documentation/UserMans/rps/#timer>
@

