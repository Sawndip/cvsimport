head	1.5;
access;
symbols
	sid-snapshot-20180601:1.5
	sid-snapshot-20180501:1.5
	sid-snapshot-20180401:1.5
	sid-snapshot-20180301:1.5
	sid-snapshot-20180201:1.5
	sid-snapshot-20180101:1.5
	sid-snapshot-20171201:1.5
	sid-snapshot-20171101:1.5
	sid-snapshot-20171001:1.5
	sid-snapshot-20170901:1.5
	sid-snapshot-20170801:1.5
	sid-snapshot-20170701:1.5
	sid-snapshot-20170601:1.5
	sid-snapshot-20170501:1.5
	sid-snapshot-20170401:1.5
	sid-snapshot-20170301:1.5
	sid-snapshot-20170201:1.5
	sid-snapshot-20170101:1.5
	sid-snapshot-20161201:1.5
	sid-snapshot-20161101:1.5
	sid-snapshot-20160901:1.5
	sid-snapshot-20160801:1.5
	sid-snapshot-20160701:1.5
	sid-snapshot-20160601:1.5
	sid-snapshot-20160501:1.5
	sid-snapshot-20160401:1.5
	sid-snapshot-20160301:1.5
	sid-snapshot-20160201:1.5
	sid-snapshot-20160101:1.5
	sid-snapshot-20151201:1.5
	sid-snapshot-20151101:1.5
	sid-snapshot-20151001:1.5
	sid-snapshot-20150901:1.5
	sid-snapshot-20150801:1.5
	sid-snapshot-20150701:1.5
	sid-snapshot-20150601:1.5
	sid-snapshot-20150501:1.5
	sid-snapshot-20150401:1.5
	sid-snapshot-20150301:1.5
	sid-snapshot-20150201:1.5
	sid-snapshot-20150101:1.5
	sid-snapshot-20141201:1.5
	sid-snapshot-20141101:1.5
	sid-snapshot-20141001:1.5
	sid-snapshot-20140901:1.5
	sid-snapshot-20140801:1.5
	sid-snapshot-20140701:1.5
	sid-snapshot-20140601:1.5
	sid-snapshot-20140501:1.5
	sid-snapshot-20140401:1.5
	sid-snapshot-20140301:1.5
	sid-snapshot-20140201:1.5
	sid-snapshot-20140101:1.5
	sid-snapshot-20131201:1.5
	sid-snapshot-20131101:1.5
	sid-snapshot-20131001:1.5
	sid-snapshot-20130901:1.5
	sid-snapshot-20130801:1.5
	sid-snapshot-20130701:1.5
	sid-snapshot-20130601:1.5
	sid-snapshot-20130501:1.5
	sid-snapshot-20130401:1.5
	sid-snapshot-20130301:1.5
	sid-snapshot-20130201:1.5
	sid-snapshot-20130101:1.5
	sid-snapshot-20121201:1.5
	sid-snapshot-20121101:1.5
	sid-snapshot-20121001:1.5
	sid-snapshot-20120901:1.5
	sid-snapshot-20120801:1.5
	sid-snapshot-20120701:1.5
	sid-snapshot-20120601:1.5
	sid-snapshot-20120501:1.5
	sid-snapshot-20120401:1.5
	sid-snapshot-20120301:1.5
	sid-snapshot-20120201:1.5
	sid-snapshot-20120101:1.5
	sid-snapshot-20111201:1.5
	sid-snapshot-20111101:1.5
	sid-snapshot-20111001:1.5
	sid-snapshot-20110901:1.5
	sid-snapshot-20110801:1.5
	sid-snapshot-20110701:1.5
	sid-snapshot-20110601:1.5
	sid-snapshot-20110501:1.5
	sid-snapshot-20110401:1.5
	sid-snapshot-20110301:1.5
	sid-snapshot-20110201:1.5
	sid-snapshot-20110101:1.5
	sid-snapshot-20101201:1.5
	sid-snapshot-20101101:1.5
	sid-snapshot-20101001:1.5
	sid-snapshot-20100901:1.5
	sid-snapshot-20100801:1.5
	sid-snapshot-20100701:1.5
	sid-snapshot-20100601:1.5
	sid-snapshot-20100501:1.5
	sid-snapshot-20100401:1.5
	sid-snapshot-20100301:1.5
	sid-snapshot-20100201:1.5
	sid-snapshot-20100101:1.5
	sid-snapshot-20091201:1.5
	sid-snapshot-20091101:1.5
	sid-snapshot-20091001:1.5
	sid-snapshot-20090901:1.5
	sid-snapshot-20090801:1.5
	sid-snapshot-20090701:1.5
	sid-snapshot-20090601:1.5
	sid-snapshot-20090501:1.5
	sid-snapshot-20090401:1.5
	sid-snapshot-20090301:1.5
	sid-snapshot-20090201:1.5
	sid-snapshot-20090101:1.5
	sid-snapshot-20081201:1.5
	sid-snapshot-20081101:1.5
	sid-snapshot-20081001:1.5
	sid-snapshot-20080901:1.5
	sid-snapshot-20080801:1.5
	sid-snapshot-20080701:1.5
	sid-snapshot-20080601:1.5
	sid-snapshot-20080501:1.5
	sid-snapshot-20080403:1.5
	sid-snapshot-20080401:1.5
	sid-snapshot-20080301:1.5
	sid-snapshot-20080201:1.5
	sid-snapshot-20080101:1.5
	sid-snapshot-20071201:1.5
	sid-snapshot-20071101:1.5
	sid-snapshot-20071001:1.5
	sid-20020905-branchpoint:1.3
	sid-20020905-branch:1.3.0.2
	cygnus_cvs_20020108_pre:1.3;
locks; strict;
comment	@// @;


1.5
date	2006.03.01.21.07.00;	author fche;	state Exp;
branches;
next	1.4;

1.4
date	2002.11.22.20.34.59;	author fche;	state Exp;
branches;
next	1.3;

1.3
date	2001.08.04.11.16.31;	author bje;	state Exp;
branches;
next	1.2;

1.2
date	2001.07.11.01.10.37;	author bje;	state Exp;
branches;
next	1.1;

1.1
date	2000.12.07.19.30.52;	author fche;	state Exp;
branches;
next	;


desc
@@


1.5
log
@* DLLEXPORT decoration tweak, from Rex Sung-Tien Cho <song10@@andestech.com>
@
text
@// components.cxx - description.  -*- C++ -*-

// Copyright (C) 1999, 2000 Red Hat.
// This file is part of SID and is licensed under the GPL.
// See the file COPYING.SID for conditions for redistribution.

#include "config.h"
#include "tconfig.h"
#include "components.h"

// --- m a i n   d r i v e r ---

static vector<string>
compInterruptListTypes()
{
  vector<string> types;
#if SIDTARGET_ARM
  types.push_back ("hw-interrupt-arm/ref");
  types.push_back ("hw-interrupt-cogent/cma222");
#endif
  return types;
}

#include "arm.h"
#include "cma222.h"

static component*
compInterruptCreate(const string& typeName)
{
#if SIDTARGET_ARM
  if (typeName == "hw-interrupt-arm/ref")
    return new armIntController();
  if (typeName == "hw-interrupt-cogent/cma222")
    return new cma222IntController();
#endif
  return 0;
}

static void
compInterruptDelete(component* c)
{
#if SIDTARGET_ARM
  armIntController* g1 = dynamic_cast<armIntController*>(c);
  if (g1) { delete g1; return; }
  cma222IntController* g2 = dynamic_cast<cma222IntController*>(c);
  if (g2) { delete g2; return; }
#endif
}

DLLEXPORT extern const component_library interrupt_component_library;

const component_library interrupt_component_library =
{
  COMPONENT_LIBRARY_MAGIC,
  &compInterruptListTypes,
  &compInterruptCreate,
  &compInterruptDelete
};
@


1.4
log
@* gcc 3.2 compatibility fixes

[e.g. include/ChangeLog]
2002-11-22  Frank Ch. Eigler  <fche@@redhat.com>

	* sidattrutil.h: Give up on hash tables - too many incompatible
	libstdc++'s out there.
	* configure.in: Don't bother looking for hash stuff.
	* configure, sidconfutil.in: Regenerated.
	* sidmiscutil.h: Add some "typename" qualifiers.
	* sidcpuutil.h (cpu_trace_stream): Trade publicness for friendliness
	regarding cout_p.

[e.g., component/parport/ChangeLog]
2002-11-22  Frank Ch. Eigler  <fche@@redhat.com>

	* ps2.cxx (parport_inputpin): Fix formal arg list.

[e.g., component/interrupt/ChangeLog]
2002-11-22  Frank Ch. Eigler  <fche@@redhat.com>

	* components.cxx (compInterruptDelete): Avoid dynamic_cast on
	deleted pointer.
@
text
@d50 1
a50 1
extern const component_library interrupt_component_library;
d52 1
a52 1
const component_library interrupt_component_library DLLEXPORT =
@


1.3
log
@2001-07-11  Frank Ch. Eigler  <fche@@redhat.com>

	* *.xml: Add <?xml ... ?> prefix.

2001-07-04  graydon hoare  <graydon@@redhat.com>

	* configure.in: Add maintainer-mode doc building configury.
	* configure: Regenerate.
	* Makefile.am: Add maintainer-mode doc building.
	* Makefile.in: Regenerate.

2001-07-04  Ben Elliston  <bje@@redhat.com>

	* Makefile.am (DOCS): Define.
	(pkgdata_DATA): Use it.
	* Makefile.in: Regenerate.

2001-07-04  Ben Elliston  <bje@@redhat.com>

	* hw-interrupt-arm_ref.txt: Generate.
	* hw-interrupt-cogent_cma222.txt: Likewise.

2001-06-29  Ben Elliston  <bje@@redhat.com>

	* Makefile.am (libinterrupt_la_SOURCES): Add $(EXTRASRC).
	(DEJAGNUTESTS): Add $(EXTRATESTS).
	* Makefile.in: Regenerate.

2001-06-27  graydon hoare  <graydon@@redhat.com>

	* hw-interrupt-cogent_cma222.xml: Add.
	* hw-interrupt-arm_ref.xml: Add.

2001-03-23  John Healy  <jhealy@@redhat.com>

	* Makefile.in: Regenerated.
@
text
@d43 4
a46 2
  delete dynamic_cast<armIntController*>(c);
  delete dynamic_cast<cma222IntController*>(c);
@


1.2
log
@	* components.cxx (operator<<): Move this function template ..
	(operator>>): .. and this one from here ..
	* components.h (operator<<): .. to here.
	(operator>>): .. and here.
@
text
@d18 2
a19 3
  types.push_back(string("hw-interrupt-arm/ref"));
  types.push_back(string("hw-interrupt-cogent/cma222"));
//  types.push_back(string("hw-interrupt-sa"));
a25 1
//#include "sa.h"
a34 2
//  if (typeName == "hw-interrupt-sa")
//    return new saIntController();
a44 1
//  delete dynamic_cast<saIntController*>(c);
@


1.1
log
@* public snapshot of sid simulator
@
text
@a10 85



  // XXX: this should be in components.cxx, but GCC does not seem to
  //      like these being outside of the class.
template<class bus_size>
ostream& operator<< (ostream& op, const IntController<bus_size>& copy_obj)
{
  op << "IRQEnable " << copy_obj.irq_enabled << " ";
  op << "IRQPend "   << copy_obj.irq_pending;
  op << " FIQEnable " << copy_obj.fiq_enabled;
  op << " FIQPend "   << copy_obj.fiq_pending;
  op << endl;
  
  op << "Pins ";
  op << copy_obj.reset_pin << " ";
  op << copy_obj.irq_pin;
  op << " " << copy_obj.fiq_pin;
  
  for (unsigned i = 0; i < copy_obj.irq_lines.size(); i++)
    op << " " << *static_cast<input_pin*>(copy_obj.irq_lines[i]);
  for (unsigned i = 0; i < copy_obj.fiq_lines.size(); i++)
    op << " " << *static_cast<input_pin*>(copy_obj.fiq_lines[i]);
  
  // NB: no whitespace at end!
  
  return op;
}

template <class bus_size>
istream& operator>> (istream& ip, IntController<bus_size>& ovwrite_obj)
{
  string coding;
  
  ip >> coding;
  if (coding != "IRQEnable")
    {
      ip.setstate(ios::badbit);
      return ip;
    }
  ip >> ovwrite_obj.irq_enabled;
  
  ip >> coding;
  if (coding != "IRQPend")
    {
      ip.setstate(ios::badbit);
      return ip;
    }
  ip >> ovwrite_obj.irq_pending;	    
  
  ip >> coding;
  if ( coding != "FIQEnable")
    {
      ip.setstate(ios::badbit);
      return ip;
    }
  ip >> ovwrite_obj.fiq_enabled;
  
  ip >> coding;
  if ( coding != "FIQPend")
    {
      ip.setstate(ios::badbit);
      return ip;
    }
  ip >> ovwrite_obj.fiq_pending;
  
  ip >> coding;
  if (coding != "Pins" )
    {
      ip.setstate (ios::badbit);
      return ip;
    }
  ip >> ovwrite_obj.reset_pin;
  ip >> ovwrite_obj.irq_pin;
  ip >> ovwrite_obj.fiq_pin;
  
  for (unsigned i = 0; i < ovwrite_obj.irq_lines.size(); i++)
    ip >> *static_cast<input_pin*>(ovwrite_obj.irq_lines[i]);
  for (unsigned i = 0; i < ovwrite_obj.fiq_lines.size(); i++)
    ip >> *static_cast<input_pin*>(ovwrite_obj.fiq_lines[i]);
  
  return ip;
}


@

