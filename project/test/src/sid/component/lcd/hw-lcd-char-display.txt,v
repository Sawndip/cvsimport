head	1.2;
access;
symbols
	sid-snapshot-20180601:1.2
	sid-snapshot-20180501:1.2
	sid-snapshot-20180401:1.2
	sid-snapshot-20180301:1.2
	sid-snapshot-20180201:1.2
	sid-snapshot-20180101:1.2
	sid-snapshot-20171201:1.2
	sid-snapshot-20171101:1.2
	sid-snapshot-20171001:1.2
	sid-snapshot-20170901:1.2
	sid-snapshot-20170801:1.2
	sid-snapshot-20170701:1.2
	sid-snapshot-20170601:1.2
	sid-snapshot-20170501:1.2
	sid-snapshot-20170401:1.2
	sid-snapshot-20170301:1.2
	sid-snapshot-20170201:1.2
	sid-snapshot-20170101:1.2
	sid-snapshot-20161201:1.2
	sid-snapshot-20161101:1.2
	sid-snapshot-20160901:1.2
	sid-snapshot-20160801:1.2
	sid-snapshot-20160701:1.2
	sid-snapshot-20160601:1.2
	sid-snapshot-20160501:1.2
	sid-snapshot-20160401:1.2
	sid-snapshot-20160301:1.2
	sid-snapshot-20160201:1.2
	sid-snapshot-20160101:1.2
	sid-snapshot-20151201:1.2
	sid-snapshot-20151101:1.2
	sid-snapshot-20151001:1.2
	sid-snapshot-20150901:1.2
	sid-snapshot-20150801:1.2
	sid-snapshot-20150701:1.2
	sid-snapshot-20150601:1.2
	sid-snapshot-20150501:1.2
	sid-snapshot-20150401:1.2
	sid-snapshot-20150301:1.2
	sid-snapshot-20150201:1.2
	sid-snapshot-20150101:1.2
	sid-snapshot-20141201:1.2
	sid-snapshot-20141101:1.2
	sid-snapshot-20141001:1.2
	sid-snapshot-20140901:1.2
	sid-snapshot-20140801:1.2
	sid-snapshot-20140701:1.2
	sid-snapshot-20140601:1.2
	sid-snapshot-20140501:1.2
	sid-snapshot-20140401:1.2
	sid-snapshot-20140301:1.2
	sid-snapshot-20140201:1.2
	sid-snapshot-20140101:1.2
	sid-snapshot-20131201:1.2
	sid-snapshot-20131101:1.2
	sid-snapshot-20131001:1.2
	sid-snapshot-20130901:1.2
	sid-snapshot-20130801:1.2
	sid-snapshot-20130701:1.2
	sid-snapshot-20130601:1.2
	sid-snapshot-20130501:1.2
	sid-snapshot-20130401:1.2
	sid-snapshot-20130301:1.2
	sid-snapshot-20130201:1.2
	sid-snapshot-20130101:1.2
	sid-snapshot-20121201:1.2
	sid-snapshot-20121101:1.2
	sid-snapshot-20121001:1.2
	sid-snapshot-20120901:1.2
	sid-snapshot-20120801:1.2
	sid-snapshot-20120701:1.2
	sid-snapshot-20120601:1.2
	sid-snapshot-20120501:1.2
	sid-snapshot-20120401:1.2
	sid-snapshot-20120301:1.2
	sid-snapshot-20120201:1.2
	sid-snapshot-20120101:1.2
	sid-snapshot-20111201:1.2
	sid-snapshot-20111101:1.2
	sid-snapshot-20111001:1.2
	sid-snapshot-20110901:1.2
	sid-snapshot-20110801:1.2
	sid-snapshot-20110701:1.2
	sid-snapshot-20110601:1.2
	sid-snapshot-20110501:1.2
	sid-snapshot-20110401:1.2
	sid-snapshot-20110301:1.2
	sid-snapshot-20110201:1.2
	sid-snapshot-20110101:1.2
	sid-snapshot-20101201:1.2
	sid-snapshot-20101101:1.2
	sid-snapshot-20101001:1.2
	sid-snapshot-20100901:1.2
	sid-snapshot-20100801:1.2
	sid-snapshot-20100701:1.2
	sid-snapshot-20100601:1.2
	sid-snapshot-20100501:1.2
	sid-snapshot-20100401:1.2
	sid-snapshot-20100301:1.2
	sid-snapshot-20100201:1.2
	sid-snapshot-20100101:1.2
	sid-snapshot-20091201:1.2
	sid-snapshot-20091101:1.2
	sid-snapshot-20091001:1.2
	sid-snapshot-20090901:1.2
	sid-snapshot-20090801:1.2
	sid-snapshot-20090701:1.2
	sid-snapshot-20090601:1.2
	sid-snapshot-20090501:1.2
	sid-snapshot-20090401:1.2
	sid-snapshot-20090301:1.2
	sid-snapshot-20090201:1.2
	sid-snapshot-20090101:1.2
	sid-snapshot-20081201:1.2
	sid-snapshot-20081101:1.2
	sid-snapshot-20081001:1.2
	sid-snapshot-20080901:1.2
	sid-snapshot-20080801:1.2
	sid-snapshot-20080701:1.2
	sid-snapshot-20080601:1.2
	sid-snapshot-20080501:1.2
	sid-snapshot-20080403:1.2
	sid-snapshot-20080401:1.2
	sid-snapshot-20080301:1.2
	sid-snapshot-20080201:1.2
	sid-snapshot-20080101:1.2
	sid-snapshot-20071201:1.2
	sid-snapshot-20071101:1.2
	sid-snapshot-20071001:1.2
	sid-20020905-branchpoint:1.2
	sid-20020905-branch:1.2.0.2
	cygnus_cvs_20020108_pre:1.2;
locks; strict;
comment	@# @;


1.2
date	2001.08.03.01.30.18;	author bje;	state Exp;
branches;
next	1.1;

1.1
date	2000.12.07.19.30.53;	author fche;	state Exp;
branches;
next	;


desc
@@


1.2
log
@* Freshly generated documentation.
* ChangeLog entries to follow later.
@
text
@                 hw-lcd-char-display (liblcd-char-display.la ::
                      lcd_char_display_component_library)

Synopsis:

   Simulates a dot matrix LCD display, using curses (a cursor control
   library) to manage the graphics inside a text window.

     ----------------------------------------------------------------------

Functionality:

  Modelling:

   The LCD display model is somewhat abstracted from the physical device:

     * A real display typically has separate row and column pins that are
       cycled to select each pixel in the display. These are replaced by 2
       pins in the model. The FR (frame) pin is driven to 1 to identify that
       a new frame is starting, and driven to 0 when the frame is finished.
       The row-col pin incorporates all the functionality of the row and
       column drivers on the real chip. This pin is driven once for each "on"
       pixel in the display, and the value on the pin is the [X,Y]
       co-ordinates of the pixel, encoded as two adjacent 16-bit values in
       the 32-bit pin value.

       With these two pins, a display refresh cycle starts when the FR pin is
       asserted; the [X,Y] co-ordinates of all the "on" pixels are then
       transmitted on the row-col pin; and the FR pin is de-asserted to end
       the refresh cycle.

     * The physical device must be refreshed periodically, but the model
       retains its last written values indefinitely.

   +-------------------------------------------------+
   |                    Behaviors                    |
   |-------------------------------------------------|
   | configuration | The width and height attributes |
   |               | set the display size in units   |
   |               | of characters. For example, the |
   |               | default values are 80 and 24    |
   |               | for width and height,           |
   |               | respectively. This is the size  |
   |               | of a standard CRT window.       |
   |---------------+---------------------------------|
   |       display | See discussion of the FR and    |
   |               | row-col pins in Modeling        |
   |               | section above.                  |
   +-------------------------------------------------+

   +-------------------------------------------------+
   |                 SID Conventions                 |
   |-------------------------------------------------|
   |   functional | supported | This is a functional |
   |    component |           | component.           |
   |--------------+-----------+----------------------|
   | Save/restore | supported | Save/restore is      |
   |              |           | supported.           |
   |--------------+-----------+----------------------|
   | Triggerpoint | supported | Triggerpoint support |
   |              |           | is available on all  |
   |              |           | three input pins.    |
   +-------------------------------------------------+

     ----------------------------------------------------------------------

Environment:

   Related components

   The LCD display is typically connected to an LCD controller. The following
   configuration file segment shows how the hw-lcd-hd44780u LCD controller
   can be connected to the display:

       new hw-lcd-hd44780u-a00 lcd       # Standard Japanese font
       new hw-lcd-char-display display
      
       # display size is in pixels - ie. font-width*display-height
       set display width 40              # 8 chars X 5 pixels per char
       set display height 8              # single line of 8 pixels

       # connect the LCD to the display
       connect-pin lcd row-col -> display row-col
       connect-pin lcd FR -> display FR

     ----------------------------------------------------------------------

Component Reference:

  Component: hw-lcd-char-display

   +-------------------------------------------------+
   |                      pins                       |
   |-------------------------------------------------|
   |  name   | direction |  legalvalues  | behaviors |
   |---------+-----------+---------------+-----------|
   | FR      | in        | binary        | display   |
   |---------+-----------+---------------+-----------|
   | row-col | in        | 2 shorts as a | display   |
   |         |           | 32-bit value  |           |
   +-------------------------------------------------+

   +----------------------------------------------------+
   |                     attributes                     |
   |----------------------------------------------------|
   | name |  category   | legal  |default|  behaviors  ||
   |      |             | values | value |             ||
   |------+-------------+--------+-------+-------------||
   |      |             |any     |       |             ||
   |width |configuration|positive|80     |configuration||
   |      |             |value   |       |             ||
   |------+-------------+--------+-------+-------------||
   |      |             |any     |       |             ||
   |height|configuration|positive|24     |configuration||
   |      |             |value   |       |             ||
   +----------------------------------------------------+
@


1.1
log
@* public snapshot of sid simulator
@
text
@d1 2
a2 1
* Copyright (C) 1999 Red Hat
d4 1
a4 2
* Name
  hw-lcd-char-display
d6 2
a7 50
* Synopsis
  Simulates a dot matrix LCD display, using curses (a cursor control library) 
  to manage the graphics inside a text window.

  Pins: row-col FR init
  Attributes: width height 

  Library: liblcd-char-display.la
  Symbol name: lcd_char_display_component_library

* Functionality
  - Modelling
    The LCD display model is somewhat abstracted from the physical device:

    o A real display typically has separate row and column pins that are cycled
      to select each pixel in the display. These are replaced by 2 pins
      in the model. The FR (frame) pin is driven to 1 to identify that a new
      frame is starting, and driven to 0 when the frame is finished. The
      row-col pin incorporates all the functionality of the row and column
      drivers on the real chip. This pin is driven once for each "on" pixel
      in the display, and the value on the pin is the [X,Y] co-ordinates of
      the pixel, encoded as two adjacent 16-bit values in the 32-bit pin value.

      With these two pins, a display refresh cycle starts when the FR pin is
      asserted; the [X,Y] co-ordinates of all the "on" pixels are then 
      transmitted on the row-col pin; and the FR pin is de-asserted to end 
      the refresh cycle.

    o The physical device must be refreshed periodically, but the model retains
      its last written values indefinitely.

  - Behaviors
    * Configuration
      The width and height attributes set the display size in units of
      characters. For example, the default values are 80 and 24 for width
      and height, respectively. This is the size of a standard CRT window.

    * Display
      See discussion of the FR and row-dol pins in Modeling section above.

  - SID conventions
    * This is a functional component.
    * Save/restore is supported.
    * Triggerpoint support is available on all three input pins.

* Environment
  - Related components
    * The LCD display is typically connected to an LCD controller.
      The following configuration file segment shows how the HD44780U LCD 
      controller can be connected to the display:
d9 68
a76 2
      new hw-lcd-hd44780u-a00 lcd	# Standard Japanese font
      new hw-lcd-char-display display
d78 39
a116 22
      # display size is in pixels - ie. font-width*display-height
      set display width 40		# 8 chars X 5 pixels per char
      set display height 8		# single line of 8 pixels

      # connect the LCD to the display
      connect-pin lcd row-col -> display row-col
      connect-pin lcd FR -> display FR

* SID interface reference
  - low level:
    * pins
      - FR | input | binary | display
      - row-col | input | 2 shorts as a 32-bit value | display

    * attributes
      - width | configuration | any positive value | 80 | configuration

      - height | configuration | any positive value | 24 | configuration




@

