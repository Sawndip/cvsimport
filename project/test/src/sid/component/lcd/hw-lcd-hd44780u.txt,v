head	1.2;
access;
symbols
	sid-snapshot-20180601:1.2
	sid-snapshot-20180501:1.2
	sid-snapshot-20180401:1.2
	sid-snapshot-20180301:1.2
	sid-snapshot-20180201:1.2
	sid-snapshot-20180101:1.2
	sid-snapshot-20171201:1.2
	sid-snapshot-20171101:1.2
	sid-snapshot-20171001:1.2
	sid-snapshot-20170901:1.2
	sid-snapshot-20170801:1.2
	sid-snapshot-20170701:1.2
	sid-snapshot-20170601:1.2
	sid-snapshot-20170501:1.2
	sid-snapshot-20170401:1.2
	sid-snapshot-20170301:1.2
	sid-snapshot-20170201:1.2
	sid-snapshot-20170101:1.2
	sid-snapshot-20161201:1.2
	sid-snapshot-20161101:1.2
	sid-snapshot-20160901:1.2
	sid-snapshot-20160801:1.2
	sid-snapshot-20160701:1.2
	sid-snapshot-20160601:1.2
	sid-snapshot-20160501:1.2
	sid-snapshot-20160401:1.2
	sid-snapshot-20160301:1.2
	sid-snapshot-20160201:1.2
	sid-snapshot-20160101:1.2
	sid-snapshot-20151201:1.2
	sid-snapshot-20151101:1.2
	sid-snapshot-20151001:1.2
	sid-snapshot-20150901:1.2
	sid-snapshot-20150801:1.2
	sid-snapshot-20150701:1.2
	sid-snapshot-20150601:1.2
	sid-snapshot-20150501:1.2
	sid-snapshot-20150401:1.2
	sid-snapshot-20150301:1.2
	sid-snapshot-20150201:1.2
	sid-snapshot-20150101:1.2
	sid-snapshot-20141201:1.2
	sid-snapshot-20141101:1.2
	sid-snapshot-20141001:1.2
	sid-snapshot-20140901:1.2
	sid-snapshot-20140801:1.2
	sid-snapshot-20140701:1.2
	sid-snapshot-20140601:1.2
	sid-snapshot-20140501:1.2
	sid-snapshot-20140401:1.2
	sid-snapshot-20140301:1.2
	sid-snapshot-20140201:1.2
	sid-snapshot-20140101:1.2
	sid-snapshot-20131201:1.2
	sid-snapshot-20131101:1.2
	sid-snapshot-20131001:1.2
	sid-snapshot-20130901:1.2
	sid-snapshot-20130801:1.2
	sid-snapshot-20130701:1.2
	sid-snapshot-20130601:1.2
	sid-snapshot-20130501:1.2
	sid-snapshot-20130401:1.2
	sid-snapshot-20130301:1.2
	sid-snapshot-20130201:1.2
	sid-snapshot-20130101:1.2
	sid-snapshot-20121201:1.2
	sid-snapshot-20121101:1.2
	sid-snapshot-20121001:1.2
	sid-snapshot-20120901:1.2
	sid-snapshot-20120801:1.2
	sid-snapshot-20120701:1.2
	sid-snapshot-20120601:1.2
	sid-snapshot-20120501:1.2
	sid-snapshot-20120401:1.2
	sid-snapshot-20120301:1.2
	sid-snapshot-20120201:1.2
	sid-snapshot-20120101:1.2
	sid-snapshot-20111201:1.2
	sid-snapshot-20111101:1.2
	sid-snapshot-20111001:1.2
	sid-snapshot-20110901:1.2
	sid-snapshot-20110801:1.2
	sid-snapshot-20110701:1.2
	sid-snapshot-20110601:1.2
	sid-snapshot-20110501:1.2
	sid-snapshot-20110401:1.2
	sid-snapshot-20110301:1.2
	sid-snapshot-20110201:1.2
	sid-snapshot-20110101:1.2
	sid-snapshot-20101201:1.2
	sid-snapshot-20101101:1.2
	sid-snapshot-20101001:1.2
	sid-snapshot-20100901:1.2
	sid-snapshot-20100801:1.2
	sid-snapshot-20100701:1.2
	sid-snapshot-20100601:1.2
	sid-snapshot-20100501:1.2
	sid-snapshot-20100401:1.2
	sid-snapshot-20100301:1.2
	sid-snapshot-20100201:1.2
	sid-snapshot-20100101:1.2
	sid-snapshot-20091201:1.2
	sid-snapshot-20091101:1.2
	sid-snapshot-20091001:1.2
	sid-snapshot-20090901:1.2
	sid-snapshot-20090801:1.2
	sid-snapshot-20090701:1.2
	sid-snapshot-20090601:1.2
	sid-snapshot-20090501:1.2
	sid-snapshot-20090401:1.2
	sid-snapshot-20090301:1.2
	sid-snapshot-20090201:1.2
	sid-snapshot-20090101:1.2
	sid-snapshot-20081201:1.2
	sid-snapshot-20081101:1.2
	sid-snapshot-20081001:1.2
	sid-snapshot-20080901:1.2
	sid-snapshot-20080801:1.2
	sid-snapshot-20080701:1.2
	sid-snapshot-20080601:1.2
	sid-snapshot-20080501:1.2
	sid-snapshot-20080403:1.2
	sid-snapshot-20080401:1.2
	sid-snapshot-20080301:1.2
	sid-snapshot-20080201:1.2
	sid-snapshot-20080101:1.2
	sid-snapshot-20071201:1.2
	sid-snapshot-20071101:1.2
	sid-snapshot-20071001:1.2
	sid-20020905-branchpoint:1.2
	sid-20020905-branch:1.2.0.2
	cygnus_cvs_20020108_pre:1.2;
locks; strict;
comment	@# @;


1.2
date	2001.08.03.01.30.18;	author bje;	state Exp;
branches;
next	1.1;

1.1
date	2000.12.07.19.30.53;	author fche;	state Exp;
branches;
next	;


desc
@@


1.2
log
@* Freshly generated documentation.
* ChangeLog entries to follow later.
@
text
@         hw-lcd-hd44780u (libhd44780u.la :: hd44780u_component_library)

Synopsis:

   Simulates the Hitachi HD44780U LCD controller. The controller supports 1
   or 2 lines of 8 5X8 dots with cursor, or 1 line of 8 5X10 dots with
   cursor. The chip includes an 80 character display RAM, a 64 byte character
   generator RAM, and a 240 character ROM of predefined fonts. Two ROMS are
   available: hw-lcd-hd44780u-a00 specifies the Japanese standard font;
   hw-lcd-hd44780u-a02 is the European standard font.

     ----------------------------------------------------------------------

Functionality:

  Modelling:

   The LCD controller model is somewhat abstracted from the physical device:

     * All commands in the model are executed instantaneously, while the real
       device requires significant time to execute a command. As a result,
       the busy flag in the model is never set.

     * The real device has 40 segment driver pins, 16 common driver pins, and
       6 more pins related to data and clock. These are replaced by 2(!) pins
       in the model. The FR (frame) pin is driven to 1 to identify that a new
       frame is starting, and driven to 0 when the frame is finished. The
       row-col pin incorporates all the functionality of the row and column
       drivers on the real chip. This pin is driven once for each "on" pixel
       in the display, and the value on the pin is the [X,Y] co-ordinates of
       the pixel, encoded as two adjacent 16-bit values in the 32-bit pin
       value.

     * With these two pins, a display refresh cycle starts when the FR pin is
       asserted; the [X,Y] co-ordinates of all the "on" pixels are then
       transmitted on the row-col pin; and the FR pin is de-asserted to end
       the refresh cycle.

     * The physical device uses an external crystal to set the duty cycle.
       The model uses the refresh-period-msec attribute to communicate with
       the scheduler to set the refresh rate.

     * To reduce system overhead, the model tries to reduce its interaction
       with the scheduler and display. Specifically, a single refresh cycle
       is initiated if there is a write to the component, to capture any
       internal state changes that may affect the display. Because several
       writes are often required to effect a meaningful change, the refresh
       is delayed to occur refresh-period-msec milliseconds after the first
       write. As well, the refresh is continued periodically if blink is
       enabled.

   +-------------------------------------------------+
   |                    Behaviors                    |
   |-------------------------------------------------|
   | configuration | The refresh-period-msec         |
   |               | attribute is used specify the   |
   |               | refresh period (in              |
   |               | milliseconds) for continuous    |
   |               | update modes such as blink.     |
   |---------------+---------------------------------|
   |         debug | The boolean verbose? attribute  |
   |               | can be used to track internal   |
   |               | operations                      |
   |---------------+---------------------------------|
   |       display | See discussion of the FR and    |
   |               | row-col pins in Modeling        |
   |               | section above                   |
   +-------------------------------------------------+

   +-------------------------------------------------+
   |                 SID Conventions                 |
   |-------------------------------------------------|
   |   functional | supported | This is a functional |
   |              |           | component.           |
   |--------------+-----------+----------------------|
   | Save/restore | supported | Save/restore is      |
   |              |           | supported via the    |
   |              |           | state-snapshot       |
   |              |           | attribute            |
   |--------------+-----------+----------------------|
   | Triggerpoint | supported | Trigger point        |
   |              |           | support is available |
   |              |           | on the IR, DR, and   |
   |              |           | AC registers.        |
   +-------------------------------------------------+

     ----------------------------------------------------------------------

Environment:

   Related components

   Besides the CPU bus, the LCD controller is typically connected to a
   display of some kind. Clearly, the display component must be aware of the
   refresh protocol used by the HD44780U model. As well, the scheduler is
   typically used to set up the time between refreshes of the display.

   The following configuration file segment shows how the LCD controller can
   be connected to the lcd.tcl display and host-time scheduler:

       new hw-lcd-hd44780u-a00 lcd       # Standard Japanese font
       new hw-visual-lcd display         # The display is implemented in Tcl
       new sid-sched-host sched          # Use the real-time scheduler
      
       # scheduling (must appear before pin assignments)
       set sched num-clients 1
       set sched 0-regular? 1
       set sched 0-time 500              # in msec

       # display size is in pixels - ie. font-width*display-height
       set display width 40              # 8 chars X 5 pixels per char
       set display height 8              # single line of 8 pixels

       # connect the LCD to the scheduler
       connect-pin sched 0-event -> lcd refresh-sync-event
       connect-pin sched 0-control <- lcd refresh-sync-control
       # connect the LCD to the display
       connect-pin lcd row-col -> display row-col
       connect-pin lcd FR -> display FR

     ----------------------------------------------------------------------

Component Reference:

  Component: hw-lcd-hd44780u (Abstract)

   +-------------------------------------------------+
   |                      pins                       |
   |-------------------------------------------------|
   |  name   | direction |  legalvalues  | behaviors |
   |---------+-----------+---------------+-----------|
   | FR      | out       | binary        | display   |
   |---------+-----------+---------------+-----------|
   | row-col | out       | 2 shorts as a | display   |
   |         |           | 32-bit value  |           |
   +-------------------------------------------------+

   +-------------------------------------------------+
   |                      buses                      |
   |-------------------------------------------------|
   | name | addresses |     accesses     | behaviors |
   |------+-----------+------------------+-----------|
   | bus  | 0..1      | byte-wide access |           |
   +-------------------------------------------------+

   +------------------------------------------------------------+
   |                         attributes                         |
   |------------------------------------------------------------|
   |       name        |category| legal  |default|  behaviors  ||
   |                   |        | values | value |             ||
   |-------------------+--------+--------+-------+-------------||
   |                   |        |any     |       |             ||
   |refresh-period-msec|setting |positive|500    |configuration||
   |                   |        |value   |       |             ||
   |-------------------+--------+--------+-------+-------------||
   |verbose?           |setting |boolean |false  |debug        ||
   +------------------------------------------------------------+

  Variant: hw-lcd-hd44780u-a00

   Same as hw-lcd-hd44780u

  Variant: hw-lcd-hd44780u-a02

   Same as hw-lcd-hd44780u

     ----------------------------------------------------------------------

References:

   HD44780U (LCD-II) Dot Matrix Liquid Crystal Display Controller Driver
   (from the Hitachi web site)
@


1.1
log
@* public snapshot of sid simulator
@
text
@d1 1
a1 1
* Copyright (C) 1999 Red Hat
d3 1
a3 2
* Name
  hw-lcd-hd44780u-a00 hw-lcd-hd44780u-a02
d5 99
a103 78
* Synopsis
  Simulates the Hitachi HD44780U LCD controller. The controller supports
  1 or 2 lines of 8 5X8 dots with cursor, or 1 line of 8 5X10 dots with cursor.
  The chip includes an 80 character display RAM, a 64 byte character generator
  RAM, and a 240 character ROM of predefined fonts. Two ROMS are available: 
  hw-lcd-hd44780u-a00 specifies the Japanese standard font; hw-lcd-hd44780u-a02
  is the European standard font.

  Buses: bus
  Pins: row-col FR
  Attributes: refresh-period-msec verbose?

  Library: libhd44780u.la
  Symbol name: hd44780u_component_library

* Functionality
  - Modeling
    The LCD controller model is somewhat abstracted from the physical device:

    o All commands in the model are executed instantaneously, while the real
      device requires significant time to execute a command. As a result, the
      busy flag in the model is never set.

    o The real device has 40 segment driver pins, 16 common driver pins, and
      6 more pins related to data and clock. These are replaced by 2(!) pins
      in the model. The FR (frame) pin is driven to 1 to identify that a new
      frame is starting, and driven to 0 when the frame is finished. The
      row-col pin incorporates all the functionality of the row and column
      drivers on the real chip. This pin is driven once for each "on" pixel
      in the display, and the value on the pin is the [X,Y] co-ordinates of
      the pixel, encoded as two adjacent 16-bit values in the 32-bit pin value.

      With these two pins, a display refresh cycle starts when the FR pin is
      asserted; the [X,Y] co-ordinates of all the "on" pixels are then 
      transmitted on the row-col pin; and the FR pin is de-asserted to end 
      the refresh cycle.

    o The physical device uses an external crystal to set the duty cycle.
      The model uses the refresh-period-msec attribute to communicate with
      the scheduler to set the refresh rate.

      To reduce system overhead, the model tries to reduce its interaction
      with the scheduler and display. Specifically, a single refresh cycle is 
      initiated if there is a write to the component, to capture any internal
      state changes that may affect the display. Because several writes are
      often required to effect a meaningful change, the refresh is delayed to
      occur refresh-period-msec milliseconds after the first write. As well,
      the refresh is continued periodically if blink is enabled.

  - Behaviors
    * Configuration
      The refresh-period-msec attribute is used specify the refresh period
      (in milliseconds) for continuous update modes such as blink.

    * Debug
      The boolean verbose? attribute can be used to track internal operations

    * Display
      See discussion of the FR and row-col pins in Modeling section above

  - SID conventions
    * This is a functional component
    * Save/restore is supported via the state-snapshot attribute
    * Trigger point support is available on the IR, DR, and AC registers.

* Environment
  - Related components
    * Besides the CPU bus, the LCD controller is typically connected to a
      display of some kind. Clearly, the display component must be aware of the
      refresh protocol used by the HD44780U model. As well, the scheduler is
      typically used to set up the time between refreshes of the display.

    * The following configuration file segment shows how the LCD controller
      can be connected to the lcd.tcl display and host-time scheduler:

      new hw-lcd-hd44780u-a00 lcd	# Standard Japanese font
      new hw-visual-lcd display		# The display is implemented in Tcl
      new sid-sched-host sched		# Use the real-time scheduler
d105 68
a172 32
      # scheduling (must appear before pin assignments)
      set sched num-clients 1
      set sched 0-regular? 1
      set sched 0-time 500		# in msec

      # display size is in pixels - ie. font-width*display-height
      set display width 40		# 8 chars X 5 pixels per char
      set display height 8		# single line of 8 pixels

      # connect the LCD to the scheduler
      connect-pin sched 0-event -> lcd refresh-sync-event
      connect-pin sched 0-control <- lcd refresh-sync-control
      # connect the LCD to the display
      connect-pin lcd row-col -> display row-col
      connect-pin lcd FR -> display FR

* SID interface reference
  - low level:
    * pins
      - FR | output | binary | display
      - row-col | output | 2 shorts as a 32-bit value | display

    * buses
      - bus | 0 to 1 | byte-wide access

    * attributes
      - refresh-period-msec | setting | any positive value | 500 | configuration
      - verbose? | setting | boolean | false | debug

* References
  HD44780U (LCD-II) Dot Matrix Liquid Crystal Display Controller Driver
  (from the Hitachi web site)
@

