head	1.2;
access;
symbols
	sid-snapshot-20180601:1.2
	sid-snapshot-20180501:1.2
	sid-snapshot-20180401:1.2
	sid-snapshot-20180301:1.2
	sid-snapshot-20180201:1.2
	sid-snapshot-20180101:1.2
	sid-snapshot-20171201:1.2
	sid-snapshot-20171101:1.2
	sid-snapshot-20171001:1.2
	sid-snapshot-20170901:1.2
	sid-snapshot-20170801:1.2
	sid-snapshot-20170701:1.2
	sid-snapshot-20170601:1.2
	sid-snapshot-20170501:1.2
	sid-snapshot-20170401:1.2
	sid-snapshot-20170301:1.2
	sid-snapshot-20170201:1.2
	sid-snapshot-20170101:1.2
	sid-snapshot-20161201:1.2
	sid-snapshot-20161101:1.2
	sid-snapshot-20160901:1.2
	sid-snapshot-20160801:1.2
	sid-snapshot-20160701:1.2
	sid-snapshot-20160601:1.2
	sid-snapshot-20160501:1.2
	sid-snapshot-20160401:1.2
	sid-snapshot-20160301:1.2
	sid-snapshot-20160201:1.2
	sid-snapshot-20160101:1.2
	sid-snapshot-20151201:1.2
	sid-snapshot-20151101:1.2
	sid-snapshot-20151001:1.2
	sid-snapshot-20150901:1.2
	sid-snapshot-20150801:1.2
	sid-snapshot-20150701:1.2
	sid-snapshot-20150601:1.2
	sid-snapshot-20150501:1.2
	sid-snapshot-20150401:1.2
	sid-snapshot-20150301:1.2
	sid-snapshot-20150201:1.2
	sid-snapshot-20150101:1.2
	sid-snapshot-20141201:1.2
	sid-snapshot-20141101:1.2
	sid-snapshot-20141001:1.2
	sid-snapshot-20140901:1.2
	sid-snapshot-20140801:1.2
	sid-snapshot-20140701:1.2
	sid-snapshot-20140601:1.2
	sid-snapshot-20140501:1.2
	sid-snapshot-20140401:1.2
	sid-snapshot-20140301:1.2
	sid-snapshot-20140201:1.2
	sid-snapshot-20140101:1.2
	sid-snapshot-20131201:1.2
	sid-snapshot-20131101:1.2
	sid-snapshot-20131001:1.2
	sid-snapshot-20130901:1.2
	sid-snapshot-20130801:1.2
	sid-snapshot-20130701:1.2
	sid-snapshot-20130601:1.2
	sid-snapshot-20130501:1.2
	sid-snapshot-20130401:1.2
	sid-snapshot-20130301:1.2
	sid-snapshot-20130201:1.2
	sid-snapshot-20130101:1.2
	sid-snapshot-20121201:1.2
	sid-snapshot-20121101:1.2
	sid-snapshot-20121001:1.2
	sid-snapshot-20120901:1.2
	sid-snapshot-20120801:1.2
	sid-snapshot-20120701:1.2
	sid-snapshot-20120601:1.2
	sid-snapshot-20120501:1.2
	sid-snapshot-20120401:1.2
	sid-snapshot-20120301:1.2
	sid-snapshot-20120201:1.2
	sid-snapshot-20120101:1.2
	sid-snapshot-20111201:1.2
	sid-snapshot-20111101:1.2
	sid-snapshot-20111001:1.2
	sid-snapshot-20110901:1.2
	sid-snapshot-20110801:1.2
	sid-snapshot-20110701:1.2
	sid-snapshot-20110601:1.2
	sid-snapshot-20110501:1.2
	sid-snapshot-20110401:1.2
	sid-snapshot-20110301:1.2
	sid-snapshot-20110201:1.2
	sid-snapshot-20110101:1.2
	sid-snapshot-20101201:1.2
	sid-snapshot-20101101:1.2
	sid-snapshot-20101001:1.2
	sid-snapshot-20100901:1.2
	sid-snapshot-20100801:1.2
	sid-snapshot-20100701:1.2
	sid-snapshot-20100601:1.2
	sid-snapshot-20100501:1.2
	sid-snapshot-20100401:1.2
	sid-snapshot-20100301:1.2
	sid-snapshot-20100201:1.2
	sid-snapshot-20100101:1.2
	sid-snapshot-20091201:1.2
	sid-snapshot-20091101:1.2
	sid-snapshot-20091001:1.2
	sid-snapshot-20090901:1.2
	sid-snapshot-20090801:1.2
	sid-snapshot-20090701:1.2
	sid-snapshot-20090601:1.2
	sid-snapshot-20090501:1.2
	sid-snapshot-20090401:1.2
	sid-snapshot-20090301:1.2
	sid-snapshot-20090201:1.2
	sid-snapshot-20090101:1.2
	sid-snapshot-20081201:1.2
	sid-snapshot-20081101:1.2
	sid-snapshot-20081001:1.2
	sid-snapshot-20080901:1.2
	sid-snapshot-20080801:1.2
	sid-snapshot-20080701:1.2
	sid-snapshot-20080601:1.2
	sid-snapshot-20080501:1.2
	sid-snapshot-20080403:1.2
	sid-snapshot-20080401:1.2
	sid-snapshot-20080301:1.2
	sid-snapshot-20080201:1.2
	sid-snapshot-20080101:1.2
	sid-snapshot-20071201:1.2
	sid-snapshot-20071101:1.2
	sid-snapshot-20071001:1.2
	sid-20020905-branchpoint:1.1
	sid-20020905-branch:1.1.0.2
	cygnus_cvs_20020108_pre:1.1;
locks; strict;
comment	@// @;


1.2
date	2006.09.15.16.00.25;	author fche;	state Exp;
branches;
next	1.1;

1.1
date	2000.12.07.19.30.53;	author fche;	state Exp;
branches;
next	;


desc
@@


1.2
log
@2006-09-15  Frank Ch. Eigler  <fche@@elastic.org>

	From Hans Erickson <herickso@@stratasys.com>:
	* rom-japan.cxx (init_rom_japan): Correct left-arrow code.
@
text
@// rom-japan.cxx - description.  -*- C++ -*-

// Copyright (C) 1999, 2000 Red Hat.
// This file is part of SID and is licensed under the GPL.
// See the file COPYING.SID for conditions for redistribution.

void 
init_rom_japan( unsigned char rom[][8] ) {
  int i;
  unsigned char *fm;

  fm = &(rom[0x5c][0]);	// yen
  fm[0] = 0x11;
  fm[1] = 0x0a;
  fm[2] = 0x1f;
  fm[3] = 0x4;
  fm[4] = 0x1f;
  fm[5] = 0x4;
  fm[6] = 0x4;

  fm = &(rom[0x7e][0]);	// right arrow
  fm[1] = 0x4;
  fm[2] = 0x2;
  fm[3] = 0x1f;
  fm[4] = 0x2;
  fm[5] = 0x4;

  fm = &(rom[0x7f][0]);	// left arrow
  fm[1] = 0x4;
  fm[2] = 0x8;
  fm[3] = 0x1f;
  fm[4] = 0x8;
  fm[5] = 0x4;

  fm = &(rom[0xa1][0]);
  fm[4] = 0x1c;
  fm[5] = 0x14;
  fm[6] = 0x1c;

  fm = &(rom[0xa2][0]);
  fm[0] = 0x7;
  for( i=1; i<4; i++ ) fm[i] = 4;

  fm = &(rom[0xa3][0]);
  for( i=4; i<7; i++ ) fm[i] = 4;
  fm[7] = 0x1c;

  fm = &(rom[0xa4][0]);
  fm[4] = 0x10;
  fm[5] = 0x8;
  fm[6] = 0x4;

  fm = &(rom[0xa5][0]);
  fm[3] = 0xc;
  fm[4] = 0xc;

  fm = &(rom[0xa6][0]);
  fm[1] = 0x1f;
  fm[2] = 0x1;
  fm[3] = 0x1f;
  fm[4] = 0x1;
  fm[5] = 0x2;
  fm[6] = 0x4;

  fm = &(rom[0xa7][0]);
  fm[2] = 0x1f;
  fm[3] = 0x1;
  fm[4] = 0x6;
  fm[5] = 0x4;
  fm[6] = 0x8;

  fm = &(rom[0xa8][0]);
  fm[2] = 0x2;
  fm[3] = 0x4;
  fm[4] = 0xc;
  fm[5] = 0x14;
  fm[6] = 0x4;

  fm = &(rom[0xa9][0]);
  fm[2] = 0x4;
  fm[3] = 0x1f;
  fm[4] = 0x11;
  fm[5] = 0x1;
  fm[6] = 0x6;

  fm = &(rom[0xaa][0]);
  fm[2] = 0x1f;
  fm[3] = 0x4;
  fm[4] = 0x4;
  fm[5] = 0x4;
  fm[6] = 0x1f;

  fm = &(rom[0xab][0]);
  fm[2] = 0x2;
  fm[3] = 0x1f;
  fm[4] = 0x6;
  fm[5] = 0xa;
  fm[6] = 0x12;

  fm = &(rom[0xac][0]);
  fm[2] = 0x8;
  fm[3] = 0x1f;
  fm[4] = 0x9;
  fm[5] = 0xa;
  fm[6] = 0x8;

  fm = &(rom[0xad][0]);
  fm[3] = 0xe;
  fm[4] = 0x2;
  fm[5] = 0x2;
  fm[6] = 0x1f;

  fm = &(rom[0xae][0]);
  fm[2] = 0x1e;
  fm[3] = 0x2;
  fm[4] = 0x1e;
  fm[5] = 0x2;
  fm[6] = 0x1e;

  fm = &(rom[0xaf][0]);
  fm[3] = 0x15;
  fm[4] = 0x15;
  fm[5] = 0x1;
  fm[6] = 0x6;

  fm = &(rom[0xb0][0]);
  fm[3] = 0x1f;

  fm = &(rom[0xb1][0]);
  fm[0] = 0x1f;
  fm[1] = 1;
  fm[2] = 0x5;
  fm[3] = 0x6;
  fm[4] = 0x4;
  fm[5] = 0x4;
  fm[6] = 0x8;

  fm = &(rom[0xb2][0]);
  fm[0] = 1;
  fm[1] = 2;
  fm[2] = 0x4;
  fm[3] = 0x0c;
  fm[4] = 0x14;
  fm[5] = 0x4;
  fm[6] = 0x4;

  fm = &(rom[0xb3][0]);
  fm[0] = 0x4;
  fm[1] = 0x1f;
  fm[2] = 0x11;
  fm[3] = 0x11;
  fm[4] = 0x1;
  fm[5] = 0x2;
  fm[6] = 0x4;

  fm = &(rom[0xb4][0]);
  for( i=2; i<6; i++ ) fm[i] = 4;
  fm[1] = 0x1f;
  fm[6] = 0x1f;

  fm = &(rom[0xb5][0]);
  fm[0] = 0x2;
  fm[1] = 0x1f;
  fm[2] = 0x2;
  fm[3] = 0x6;
  fm[4] = 0x0a;
  fm[5] = 0x12;
  fm[6] = 0x2;

  fm = &(rom[0xb6][0]);
  for( i=2; i<6; i++ ) fm[i] = 9;
  fm[0] = 0x08;
  fm[1] = 0x1f;
  fm[6] = 0x12;

  fm = &(rom[0xb7][0]);
  for( i=0; i<7; i++ ) fm[i] = 4;
  fm[1] = 0x1f;
  fm[3] = 0x1f;

  fm = &(rom[0xb8][0]);
  fm[1] = 0x0f;
  fm[2] = 0x09;
  fm[3] = 0x11;
  fm[4] = 0x1;
  fm[5] = 0x2;
  fm[6] = 0x0c;

  fm = &(rom[0xb9][0]);
  fm[0] = 0x08;
  fm[1] = 0x0f;
  fm[2] = 0x12;
  fm[3] = 0x2;
  fm[4] = 0x2;
  fm[5] = 0x2;
  fm[6] = 0x4;

  fm = &(rom[0xba][0]);
  for( i=2; i<6; i++ ) fm[i] = 1;
  fm[1] = 0x1f;
  fm[6] = 0x1f;

  fm = &(rom[0xbb][0]);
  fm[0] = 0x0a;
  fm[1] = 0x1f;
  fm[2] = 0x0a;
  fm[3] = 0x0a;
  fm[4] = 0x2;
  fm[5] = 0x4;
  fm[6] = 0x8;

  fm = &(rom[0xbc][0]);
  fm[1] = 0x18;
  fm[2] = 0x1;
  fm[3] = 0x19;
  fm[4] = 0x1;
  fm[5] = 0x2;
  fm[6] = 0x1c;

  fm = &(rom[0xbd][0]);
  fm[1] = 0x1f;
  fm[2] = 0x1;
  fm[3] = 0x2;
  fm[4] = 0x4;
  fm[5] = 0x0a;
  fm[6] = 0x11;

  fm = &(rom[0xbe][0]);
  fm[0] = 0x08;
  fm[1] = 0x1f;
  fm[2] = 0x09;
  fm[3] = 0x0a;
  fm[4] = 0x8;
  fm[5] = 0x8;
  fm[6] = 0x7;

  fm = &(rom[0xbf][0]);
  fm[1] = 0x11;
  fm[2] = 0x11;
  fm[3] = 0x09;
  fm[4] = 0x1;
  fm[5] = 0x2;
  fm[6] = 0x0c;

  fm = &(rom[0xc0][0]);
  fm[1] = 0x0f;
  fm[2] = 0x09;
  fm[3] = 0x15;
  fm[4] = 0x3;
  fm[5] = 0x2;
  fm[6] = 0x0c;

  fm = &(rom[0xc1][0]);
  fm[0] = 0x2;
  fm[1] = 0x1c;
  fm[2] = 0x4;
  fm[3] = 0x1f;
  fm[4] = 0x4;
  fm[5] = 0x4;
  fm[6] = 0x8;

  fm = &(rom[0xc2][0]);
  fm[1] = 0x15;
  fm[2] = 0x15;
  fm[3] = 0x15;
  fm[4] = 0x1;
  fm[5] = 0x2;
  fm[6] = 0x4;

  fm = &(rom[0xc3][0]);
  fm[0] = 0xe;
  fm[2] = 0x1f;
  fm[3] = 0x4;
  fm[4] = 0x4;
  fm[5] = 0x4;
  fm[6] = 0x8;

  fm = &(rom[0xc4][0]);
  for( i=0; i<7; i++ ) fm[i] = 8;
  fm[3] = 0x0c;
  fm[4] = 0x0a;

  fm = &(rom[0xc5][0]);
  fm[0] = 0x4;
  fm[1] = 0x4;
  fm[2] = 0x1f;
  fm[3] = 0x4;
  fm[4] = 0x4;
  fm[5] = 0x8;
  fm[6] = 0x10;

  fm = &(rom[0xc6][0]);
  fm[1] = 0x0e;
  fm[6] = 0x1f;

  fm = &(rom[0xc7][0]);
  fm[1] = 0x1f;
  fm[2] = 0x1;
  fm[3] = 0x0a;
  fm[4] = 0x4;
  fm[5] = 0x0a;
  fm[6] = 0x10;

  fm = &(rom[0xc8][0]);
  fm[0] = 0x4;
  fm[1] = 0x1f;
  fm[2] = 0x2;
  fm[3] = 0x4;
  fm[4] = 0x0e;
  fm[5] = 0x15;
  fm[6] = 0x4;

  fm = &(rom[0xc9][0]);
  for( i=0; i<5; i++ ) fm[i] = 2;
  fm[5] = 0x04;
  fm[6] = 0x08;

  fm = &(rom[0xca][0]);
  fm[1] = 0x04;
  fm[2] = 0x02;
  for( i=3; i<7; i++ ) fm[i] = 0x11;

  fm = &(rom[0xcb][0]);
  for( i=0; i<6; i++ ) fm[i] = 0x10;
  fm[2] = 0x1f;
  fm[6] = 0x0f;

  fm = &(rom[0xcc][0]);
  fm[1] = 0x1f;
  fm[2] = 0x1;
  fm[3] = 0x1;
  fm[4] = 0x1;
  fm[5] = 0x02;
  fm[6] = 0x0c;

  fm = &(rom[0xcd][0]);
  fm[1] = 0x8;
  fm[2] = 0x14;
  fm[3] = 0x02;
  fm[4] = 0x1;
  fm[5] = 0x1;

  fm = &(rom[0xce][0]);
  for( i=0; i<7; i++ ) fm[i] = 0x4;
  fm[1] = 0x1f;
  fm[4] = 0x15;
  fm[5] = 0x15;

  fm = &(rom[0xcf][0]);
  fm[1] = 0x1f;
  fm[2] = 0x1;
  fm[3] = 0x1;
  fm[4] = 0x0a;
  fm[5] = 0x4;
  fm[6] = 0x2;

  fm = &(rom[0xd0][0]);
  fm[1] = 0x0e;
  fm[3] = 0x0e;
  fm[5] = 0x0e;
  fm[6] = 0x1;

  fm = &(rom[0xd1][0]);
  fm[1] = 0x4;
  fm[2] = 0x8;
  fm[3] = 0x10;
  fm[4] = 0x11;
  fm[5] = 0x1f;
  fm[6] = 0x1;

  fm = &(rom[0xd2][0]);
  fm[1] = 0x1;
  fm[2] = 0x1;
  fm[3] = 0x0a;
  fm[4] = 0x4;
  fm[5] = 0x0a;
  fm[6] = 0x10;

  fm = &(rom[0xd3][0]);
  fm[1] = 0x1f;
  fm[2] = 0x8;
  fm[3] = 0x1f;
  fm[4] = 0x8;
  fm[5] = 0x8;
  fm[6] = 0x7;

  fm = &(rom[0xd4][0]);
  for( i=0; i<7; i++ ) fm[i] = 0x08;
  fm[2] = 0x1f;
  fm[3] = 0x09;
  fm[4] = 0x0a;

  fm = &(rom[0xd5][0]);
  for( i=2; i<6; i++ ) fm[i] = 0x02;
  fm[1] = 0x0e;
  fm[6] = 0x1f;

  fm = &(rom[0xd6][0]);
  for( i=2; i<6; i++ ) fm[i] = 0x01;
  fm[1] = 0x1f;
  fm[3] = 0x1f;
  fm[6] = 0x1f;

  fm = &(rom[0xd7][0]);
  fm[0] = 0x0e;
  fm[2] = 0x1f;
  fm[3] = 0x1;
  fm[4] = 0x1;
  fm[5] = 0x2;
  fm[6] = 0x4;

  fm = &(rom[0xd8][0]);
  for( i=0; i<4; i++ ) fm[i] = 0x12;
  fm[4] = 0x2;
  fm[5] = 0x4;
  fm[6] = 0x8;

  fm = &(rom[0xd9][0]);
  fm[1] = 0x4;
  fm[2] = 0x14;
  fm[3] = 0x14;
  fm[4] = 0x15;
  fm[5] = 0x15;
  fm[6] = 0x16;

  fm = &(rom[0xda][0]);
  fm[1] = 0x10;
  fm[2] = 0x10;
  fm[3] = 0x11;
  fm[4] = 0x12;
  fm[5] = 0x14;
  fm[6] = 0x18;

  fm = &(rom[0xdb][0]);
  for( i=2; i<6; i++ ) fm[i] = 0x11;
  fm[1] = 0x1f;
  fm[6] = 0x1f;

  fm = &(rom[0xdc][0]);
  fm[1] = 0x1f;
  fm[2] = 0x11;
  fm[3] = 0x11;
  fm[4] = 0x1;
  fm[5] = 0x2;
  fm[6] = 0x4;

  fm = &(rom[0xdd][0]);
  fm[1] = 0x18;
  fm[3] = 0x1;
  fm[4] = 0x1;
  fm[5] = 0x2;
  fm[6] = 0x1c;

  fm = &(rom[0xde][0]);
  fm[0] = 0x4;
  fm[1] = 0x12;
  fm[2] = 0x8;

  fm = &(rom[0xdf][0]);
  fm[0] = 0x1c;
  fm[1] = 0x14;
  fm[2] = 0x1c;
}

@


1.1
log
@* public snapshot of sid simulator
@
text
@d28 1
a28 1
  fm = &(rom[0x7e][0]);	// left arrow
@

