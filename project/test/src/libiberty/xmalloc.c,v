head	1.15;
access;
symbols
	sid-snapshot-20180601:1.15
	sid-snapshot-20180501:1.15
	sid-snapshot-20180401:1.15
	sid-snapshot-20180301:1.15
	sid-snapshot-20180201:1.15
	sid-snapshot-20180101:1.15
	sid-snapshot-20171201:1.15
	sid-snapshot-20171101:1.15
	sid-snapshot-20171001:1.15
	sid-snapshot-20170901:1.15
	sid-snapshot-20170801:1.15
	sid-snapshot-20170701:1.15
	sid-snapshot-20170601:1.15
	sid-snapshot-20170501:1.15
	sid-snapshot-20170401:1.15
	sid-snapshot-20170301:1.15
	sid-snapshot-20170201:1.15
	sid-snapshot-20170101:1.15
	sid-snapshot-20161201:1.15
	sid-snapshot-20161101:1.15
	sid-snapshot-20160901:1.15
	sid-snapshot-20160801:1.15
	sid-snapshot-20160701:1.15
	sid-snapshot-20160601:1.15
	sid-snapshot-20160501:1.15
	sid-snapshot-20160401:1.15
	sid-snapshot-20160301:1.15
	sid-snapshot-20160201:1.15
	sid-snapshot-20160101:1.15
	sid-snapshot-20151201:1.15
	sid-snapshot-20151101:1.15
	sid-snapshot-20151001:1.15
	sid-snapshot-20150901:1.15
	sid-snapshot-20150801:1.15
	sid-snapshot-20150701:1.15
	sid-snapshot-20150601:1.15
	sid-snapshot-20150501:1.15
	sid-snapshot-20150401:1.15
	sid-snapshot-20150301:1.15
	sid-snapshot-20150201:1.15
	sid-snapshot-20150101:1.15
	sid-snapshot-20141201:1.15
	sid-snapshot-20141101:1.15
	sid-snapshot-20141001:1.15
	sid-snapshot-20140901:1.15
	sid-snapshot-20140801:1.15
	sid-snapshot-20140701:1.15
	sid-snapshot-20140601:1.15
	sid-snapshot-20140501:1.15
	sid-snapshot-20140401:1.15
	sid-snapshot-20140301:1.15
	sid-snapshot-20140201:1.15
	sid-snapshot-20140101:1.15
	sid-snapshot-20131201:1.15
	sid-snapshot-20131101:1.15
	sid-snapshot-20131001:1.15
	binutils-2_24-branch:1.15.0.92
	binutils-2_24-branchpoint:1.15
	binutils-2_21_1:1.15
	sid-snapshot-20130901:1.15
	gdb_7_6_1-2013-08-30-release:1.15
	sid-snapshot-20130801:1.15
	sid-snapshot-20130701:1.15
	sid-snapshot-20130601:1.15
	sid-snapshot-20130501:1.15
	gdb_7_6-2013-04-26-release:1.15
	sid-snapshot-20130401:1.15
	binutils-2_23_2:1.15
	gdb_7_6-branch:1.15.0.90
	gdb_7_6-2013-03-12-branchpoint:1.15
	sid-snapshot-20130301:1.15
	sid-snapshot-20130201:1.15
	sid-snapshot-20130101:1.15
	sid-snapshot-20121201:1.15
	gdb_7_5_1-2012-11-29-release:1.15
	binutils-2_23_1:1.15
	sid-snapshot-20121101:1.15
	binutils-2_23:1.15
	sid-snapshot-20121001:1.15
	sid-snapshot-20120901:1.15
	gdb_7_5-2012-08-17-release:1.15
	sid-snapshot-20120801:1.15
	binutils-2_23-branch:1.15.0.88
	binutils-2_23-branchpoint:1.15
	gdb_7_5-branch:1.15.0.86
	gdb_7_5-2012-07-18-branchpoint:1.15
	sid-snapshot-20120701:1.15
	sid-snapshot-20120601:1.15
	sid-snapshot-20120501:1.15
	binutils-2_22_branch:1.15.0.84
	gdb_7_4_1-2012-04-26-release:1.15
	sid-snapshot-20120401:1.15
	sid-snapshot-20120301:1.15
	sid-snapshot-20120201:1.15
	gdb_7_4-2012-01-24-release:1.15
	sid-snapshot-20120101:1.15
	gdb_7_4-branch:1.15.0.82
	gdb_7_4-2011-12-13-branchpoint:1.15
	sid-snapshot-20111201:1.15
	binutils-2_22:1.15
	sid-snapshot-20111101:1.15
	sid-snapshot-20111001:1.15
	binutils-2_22-branch:1.15.0.80
	binutils-2_22-branchpoint:1.15
	gdb_7_3_1-2011-09-04-release:1.15
	sid-snapshot-20110901:1.15
	sid-snapshot-20110801:1.15
	gdb_7_3-2011-07-26-release:1.15
	sid-snapshot-20110701:1.15
	sid-snapshot-20110601:1.15
	sid-snapshot-20110501:1.15
	gdb_7_3-branch:1.15.0.78
	gdb_7_3-2011-04-01-branchpoint:1.15
	sid-snapshot-20110401:1.15
	sid-snapshot-20110301:1.15
	cygwin-1_7_8-release:1.15
	sid-snapshot-20110201:1.15
	sid-snapshot-20110101:1.15
	binutils-2_21:1.15
	sid-snapshot-20101201:1.15
	binutils-2_21-branch:1.15.0.76
	binutils-2_21-branchpoint:1.15
	sid-snapshot-20101101:1.15
	sid-snapshot-20101001:1.15
	binutils-2_20_1:1.15
	gdb_7_2-2010-09-02-release:1.15
	sid-snapshot-20100901:1.15
	cygwin-1_7_7-release:1.15
	sid-snapshot-20100801:1.15
	gdb_7_2-branch:1.15.0.74
	gdb_7_2-2010-07-07-branchpoint:1.15
	sid-snapshot-20100701:1.15
	sid-snapshot-20100601:1.15
	sid-snapshot-20100501:1.15
	sid-snapshot-20100401:1.15
	gdb_7_1-2010-03-18-release:1.15
	sid-snapshot-20100301:1.15
	gdb_7_1-branch:1.15.0.72
	gdb_7_1-2010-02-18-branchpoint:1.15
	sid-snapshot-20100201:1.15
	sid-snapshot-20100101:1.15
	gdb_7_0_1-2009-12-22-release:1.15
	sid-snapshot-20091201:1.15
	sid-snapshot-20091101:1.15
	binutils-2_20:1.15
	gdb_7_0-2009-10-06-release:1.15
	sid-snapshot-20091001:1.15
	gdb_7_0-branch:1.15.0.70
	gdb_7_0-2009-09-16-branchpoint:1.15
	arc-sim-20090309:1.15
	binutils-arc-20081103-branch:1.15.0.68
	binutils-arc-20081103-branchpoint:1.15
	binutils-2_20-branch:1.15.0.66
	binutils-2_20-branchpoint:1.15
	sid-snapshot-20090901:1.15
	sid-snapshot-20090801:1.15
	msnyder-checkpoint-072509-branch:1.15.0.64
	msnyder-checkpoint-072509-branchpoint:1.15
	sid-snapshot-20090701:1.15
	dje-cgen-play1-branch:1.15.0.62
	dje-cgen-play1-branchpoint:1.15
	sid-snapshot-20090601:1.15
	sid-snapshot-20090501:1.15
	sid-snapshot-20090401:1.15
	arc-20081103-branch:1.15.0.60
	arc-20081103-branchpoint:1.15
	arc-insight_6_8-branch:1.15.0.58
	arc-insight_6_8-branchpoint:1.15
	insight_6_8-branch:1.15.0.56
	insight_6_8-branchpoint:1.15
	sid-snapshot-20090301:1.15
	binutils-2_19_1:1.15
	sid-snapshot-20090201:1.15
	sid-snapshot-20090101:1.15
	reverse-20081226-branch:1.15.0.54
	reverse-20081226-branchpoint:1.15
	sid-snapshot-20081201:1.15
	multiprocess-20081120-branch:1.15.0.52
	multiprocess-20081120-branchpoint:1.15
	sid-snapshot-20081101:1.15
	binutils-2_19:1.15
	sid-snapshot-20081001:1.15
	reverse-20080930-branch:1.15.0.50
	reverse-20080930-branchpoint:1.15
	binutils-2_19-branch:1.15.0.48
	binutils-2_19-branchpoint:1.15
	sid-snapshot-20080901:1.15
	sid-snapshot-20080801:1.15
	reverse-20080717-branch:1.15.0.46
	reverse-20080717-branchpoint:1.15
	sid-snapshot-20080701:1.15
	msnyder-reverse-20080609-branch:1.15.0.44
	msnyder-reverse-20080609-branchpoint:1.15
	drow-reverse-20070409-branch:1.15.0.42
	drow-reverse-20070409-branchpoint:1.15
	sid-snapshot-20080601:1.15
	sid-snapshot-20080501:1.15
	sid-snapshot-20080403:1.15
	sid-snapshot-20080401:1.15
	gdb_6_8-2008-03-27-release:1.15
	sid-snapshot-20080301:1.15
	gdb_6_8-branch:1.15.0.40
	gdb_6_8-2008-02-26-branchpoint:1.15
	sid-snapshot-20080201:1.15
	sid-snapshot-20080101:1.15
	sid-snapshot-20071201:1.15
	sid-snapshot-20071101:1.15
	gdb_6_7_1-2007-10-29-release:1.15
	gdb_6_7-2007-10-10-release:1.15
	sid-snapshot-20071001:1.15
	gdb_6_7-branch:1.15.0.38
	gdb_6_7-2007-09-07-branchpoint:1.15
	binutils-2_18:1.15
	binutils-2_18-branch:1.15.0.36
	binutils-2_18-branchpoint:1.15
	insight_6_6-20070208-release:1.15
	binutils-csl-coldfire-4_1-32:1.15
	binutils-csl-sourcerygxx-4_1-32:1.15
	gdb_6_6-2006-12-18-release:1.15
	binutils-csl-innovasic-fido-3_4_4-33:1.15
	binutils-csl-sourcerygxx-3_4_4-32:1.12
	binutils-csl-coldfire-4_1-30:1.15
	binutils-csl-sourcerygxx-4_1-30:1.15
	binutils-csl-coldfire-4_1-28:1.15
	binutils-csl-sourcerygxx-4_1-29:1.15
	binutils-csl-sourcerygxx-4_1-28:1.15
	gdb_6_6-branch:1.15.0.34
	gdb_6_6-2006-11-15-branchpoint:1.15
	binutils-csl-arm-2006q3-27:1.15
	binutils-csl-sourcerygxx-4_1-27:1.15
	binutils-csl-arm-2006q3-26:1.15
	binutils-csl-sourcerygxx-4_1-26:1.15
	binutils-csl-sourcerygxx-4_1-25:1.15
	binutils-csl-sourcerygxx-4_1-24:1.15
	binutils-csl-sourcerygxx-4_1-23:1.15
	insight_6_5-20061003-release:1.15
	gdb-csl-symbian-6_4_50_20060226-12:1.15
	binutils-csl-sourcerygxx-4_1-21:1.15
	binutils-csl-arm-2006q3-21:1.15
	binutils-csl-sourcerygxx-4_1-22:1.15
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.15
	binutils-csl-sourcerygxx-4_1-20:1.15
	binutils-csl-arm-2006q3-19:1.15
	binutils-csl-sourcerygxx-4_1-19:1.15
	binutils-csl-sourcerygxx-4_1-18:1.15
	binutils-csl-renesas-4_1-9:1.15
	gdb-csl-sourcerygxx-3_4_4-25:1.15
	binutils-csl-sourcerygxx-3_4_4-25:1.12
	nickrob-async-20060828-mergepoint:1.15
	gdb-csl-symbian-6_4_50_20060226-11:1.15
	binutils-csl-renesas-4_1-8:1.15
	binutils-csl-renesas-4_1-7:1.15
	binutils-csl-renesas-4_1-6:1.15
	gdb-csl-sourcerygxx-4_1-17:1.15
	binutils-csl-sourcerygxx-4_1-17:1.15
	gdb-csl-20060226-branch-local-2:1.15
	cr-0x5f1:1.15.0.32
	gdb-csl-sourcerygxx-4_1-14:1.15
	binutils-csl-sourcerygxx-4_1-14:1.15
	binutils-csl-sourcerygxx-4_1-15:1.15
	gdb-csl-sourcerygxx-4_1-13:1.15
	binutils-csl-sourcerygxx-4_1-13:1.15
	binutils-2_17:1.15
	gdb-csl-sourcerygxx-4_1-12:1.15
	binutils-csl-sourcerygxx-4_1-12:1.15
	gdb-csl-sourcerygxx-3_4_4-21:1.15
	binutils-csl-sourcerygxx-3_4_4-21:1.15
	gdb_6_5-20060621-release:1.15
	binutils-csl-wrs-linux-3_4_4-24:1.12
	binutils-csl-wrs-linux-3_4_4-23:1.12
	gdb-csl-sourcerygxx-4_1-9:1.15
	binutils-csl-sourcerygxx-4_1-9:1.15
	gdb-csl-sourcerygxx-4_1-8:1.15
	binutils-csl-sourcerygxx-4_1-8:1.15
	gdb-csl-sourcerygxx-4_1-7:1.15
	binutils-csl-sourcerygxx-4_1-7:1.15
	gdb-csl-arm-2006q1-6:1.15
	binutils-csl-arm-2006q1-6:1.15
	gdb-csl-sourcerygxx-4_1-6:1.15
	binutils-csl-sourcerygxx-4_1-6:1.15
	binutils-csl-wrs-linux-3_4_4-22:1.12
	gdb-csl-symbian-6_4_50_20060226-10:1.15
	gdb-csl-symbian-6_4_50_20060226-9:1.15
	gdb-csl-symbian-6_4_50_20060226-8:1.15
	gdb-csl-coldfire-4_1-11:1.15
	binutils-csl-coldfire-4_1-11:1.15
	gdb-csl-sourcerygxx-3_4_4-19:1.15
	binutils-csl-sourcerygxx-3_4_4-19:1.15
	gdb-csl-coldfire-4_1-10:1.15
	gdb_6_5-branch:1.15.0.30
	gdb_6_5-2006-05-14-branchpoint:1.15
	binutils-csl-coldfire-4_1-10:1.15
	gdb-csl-sourcerygxx-4_1-5:1.15
	binutils-csl-sourcerygxx-4_1-5:1.15
	nickrob-async-20060513-branch:1.15.0.28
	nickrob-async-20060513-branchpoint:1.15
	gdb-csl-sourcerygxx-4_1-4:1.15
	binutils-csl-sourcerygxx-4_1-4:1.15
	msnyder-reverse-20060502-branch:1.15.0.26
	msnyder-reverse-20060502-branchpoint:1.15
	binutils-csl-wrs-linux-3_4_4-21:1.12
	gdb-csl-morpho-4_1-4:1.15
	binutils-csl-morpho-4_1-4:1.15
	gdb-csl-sourcerygxx-3_4_4-17:1.15
	binutils-csl-sourcerygxx-3_4_4-17:1.15
	binutils-csl-wrs-linux-3_4_4-20:1.12
	readline_5_1-import-branch:1.15.0.24
	readline_5_1-import-branchpoint:1.15
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.15
	binutils-2_17-branch:1.15.0.22
	binutils-2_17-branchpoint:1.15
	gdb-csl-symbian-20060226-branch:1.15.0.20
	gdb-csl-symbian-20060226-branchpoint:1.15
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.15
	msnyder-reverse-20060331-branch:1.15.0.18
	msnyder-reverse-20060331-branchpoint:1.15
	binutils-csl-2_17-branch:1.15.0.16
	binutils-csl-2_17-branchpoint:1.15
	gdb-csl-available-20060303-branch:1.15.0.14
	gdb-csl-available-20060303-branchpoint:1.15
	gdb-csl-20060226-branch:1.15.0.12
	gdb-csl-20060226-branchpoint:1.15
	gdb_6_4-20051202-release:1.15
	msnyder-fork-checkpoint-branch:1.15.0.10
	msnyder-fork-checkpoint-branchpoint:1.15
	gdb-csl-gxxpro-6_3-branch:1.15.0.8
	gdb-csl-gxxpro-6_3-branchpoint:1.15
	gdb_6_4-branch:1.15.0.6
	gdb_6_4-2005-11-01-branchpoint:1.15
	gdb-csl-arm-20051020-branch:1.15.0.4
	gdb-csl-arm-20051020-branchpoint:1.15
	binutils-csl-gxxpro-3_4-branch:1.12.0.52
	binutils-csl-gxxpro-3_4-branchpoint:1.12
	binutils-2_16_1:1.12
	msnyder-tracepoint-checkpoint-branch:1.15.0.2
	msnyder-tracepoint-checkpoint-branchpoint:1.15
	gdb-csl-arm-20050325-2005-q1b:1.12
	binutils-csl-arm-2005q1b:1.12
	binutils-2_16:1.12
	gdb-csl-arm-20050325-2005-q1a:1.12
	binutils-csl-arm-2005q1a:1.12
	csl-arm-20050325-branch:1.12.0.50
	csl-arm-20050325-branchpoint:1.12
	binutils-csl-arm-2005q1-branch:1.12.0.48
	binutils-csl-arm-2005q1-branchpoint:1.12
	binutils-2_16-branch:1.12.0.46
	binutils-2_16-branchpoint:1.12
	csl-arm-2004-q3d:1.12
	gdb_6_3-20041109-release:1.12
	gdb_6_3-branch:1.12.0.42
	gdb_6_3-20041019-branchpoint:1.12
	csl-arm-2004-q3:1.12
	drow_intercu-merge-20040921:1.12
	drow_intercu-merge-20040915:1.12
	jimb-gdb_6_2-e500-branch:1.12.0.44
	jimb-gdb_6_2-e500-branchpoint:1.12
	gdb_6_2-20040730-release:1.12
	gdb_6_2-branch:1.12.0.40
	gdb_6_2-2004-07-10-gmt-branchpoint:1.12
	gdb_6_1_1-20040616-release:1.12
	binutils-2_15:1.12
	binutils-2_15-branchpoint:1.12
	csl-arm-2004-q1a:1.12
	csl-arm-2004-q1:1.12
	gdb_6_1-2004-04-05-release:1.12
	drow_intercu-merge-20040402:1.12
	drow_intercu-merge-20040327:1.12
	ezannoni_pie-20040323-branch:1.12.0.38
	ezannoni_pie-20040323-branchpoint:1.12
	cagney_tramp-20040321-mergepoint:1.12
	cagney_tramp-20040309-branch:1.12.0.36
	cagney_tramp-20040309-branchpoint:1.12
	gdb_6_1-branch:1.12.0.34
	gdb_6_1-2004-03-01-gmt-branchpoint:1.12
	drow_intercu-20040221-branch:1.12.0.32
	drow_intercu-20040221-branchpoint:1.12
	binutils-2_15-branch:1.12.0.30
	cagney_bfdfile-20040213-branch:1.12.0.28
	cagney_bfdfile-20040213-branchpoint:1.12
	drow-cplus-merge-20040208:1.12
	carlton_dictionary-20040126-merge:1.12
	cagney_bigcore-20040122-branch:1.12.0.26
	cagney_bigcore-20040122-branchpoint:1.12
	drow-cplus-merge-20040113:1.12
	csl-arm-2003-q4:1.12
	drow-cplus-merge-20031224:1.12
	drow-cplus-merge-20031220:1.12
	carlton_dictionary-20031215-merge:1.12
	drow-cplus-merge-20031214:1.12
	carlton-dictionary-20031111-merge:1.12
	gdb_6_0-2003-10-04-release:1.12
	kettenis_sparc-20030918-branch:1.12.0.24
	kettenis_sparc-20030918-branchpoint:1.12
	carlton_dictionary-20030917-merge:1.12
	ezannoni_pie-20030916-branchpoint:1.12
	ezannoni_pie-20030916-branch:1.12.0.22
	cagney_x86i386-20030821-branch:1.12.0.20
	cagney_x86i386-20030821-branchpoint:1.12
	carlton_dictionary-20030805-merge:1.12
	carlton_dictionary-20030627-merge:1.12
	gdb_6_0-branch:1.12.0.18
	gdb_6_0-2003-06-23-branchpoint:1.12
	jimb-ppc64-linux-20030613-branch:1.12.0.16
	jimb-ppc64-linux-20030613-branchpoint:1.12
	binutils-2_14:1.12
	cagney_convert-20030606-branch:1.12.0.14
	cagney_convert-20030606-branchpoint:1.12
	cagney_writestrings-20030508-branch:1.12.0.12
	cagney_writestrings-20030508-branchpoint:1.12
	jimb-ppc64-linux-20030528-branch:1.12.0.10
	jimb-ppc64-linux-20030528-branchpoint:1.12
	carlton_dictionary-20030523-merge:1.12
	cagney_fileio-20030521-branch:1.12.0.8
	cagney_fileio-20030521-branchpoint:1.12
	kettenis_i386newframe-20030517-mergepoint:1.12
	jimb-ppc64-linux-20030509-branch:1.12.0.6
	jimb-ppc64-linux-20030509-branchpoint:1.12
	kettenis_i386newframe-20030504-mergepoint:1.12
	carlton_dictionary-20030430-merge:1.12
	binutils-2_14-branch:1.12.0.4
	binutils-2_14-branchpoint:1.12
	kettenis_i386newframe-20030419-branch:1.12.0.2
	kettenis_i386newframe-20030419-branchpoint:1.12
	carlton_dictionary-20030416-merge:1.12
	cagney_frameaddr-20030409-mergepoint:1.11
	kettenis_i386newframe-20030406-branch:1.11.0.38
	kettenis_i386newframe-20030406-branchpoint:1.11
	cagney_frameaddr-20030403-branchpoint:1.11
	cagney_frameaddr-20030403-branch:1.11.0.36
	cagney_framebase-20030330-mergepoint:1.11
	cagney_framebase-20030326-branch:1.11.0.34
	cagney_framebase-20030326-branchpoint:1.11
	cagney_lazyid-20030317-branch:1.11.0.32
	cagney_lazyid-20030317-branchpoint:1.11
	kettenis-i386newframe-20030316-mergepoint:1.11
	offbyone-20030313-branch:1.11.0.30
	offbyone-20030313-branchpoint:1.11
	kettenis-i386newframe-20030308-branch:1.11.0.28
	kettenis-i386newframe-20030308-branchpoint:1.11
	carlton_dictionary-20030305-merge:1.11
	cagney_offbyone-20030303-branch:1.11.0.26
	cagney_offbyone-20030303-branchpoint:1.11
	w32api-2_2:1.11
	mingw-runtime-2_4:1.11
	carlton_dictionary-20030207-merge:1.11
	interps-20030202-branch:1.11.0.24
	interps-20030202-branchpoint:1.11
	cagney-unwind-20030108-branch:1.11.0.22
	cagney-unwind-20030108-branchpoint:1.11
	binutils-2_13_2_1:1.11
	binutils-2_13_2:1.11
	carlton_dictionary-20021223-merge:1.11
	gdb_5_3-2002-12-12-release:1.11
	carlton_dictionary-20021115-merge:1.11
	binutils-2_13_1:1.11
	kseitz_interps-20021105-merge:1.11
	kseitz_interps-20021103-merge:1.11
	drow-cplus-merge-20021020:1.11
	drow-cplus-merge-20021025:1.11
	carlton_dictionary-20021025-merge:1.11
	carlton_dictionary-20021011-merge:1.11
	drow-cplus-branch:1.11.0.20
	drow-cplus-branchpoint:1.11
	kseitz_interps-20020930-merge:1.11
	carlton_dictionary-20020927-merge:1.11
	carlton_dictionary-branch:1.11.0.18
	carlton_dictionary-20020920-branchpoint:1.11
	sid-20020905-branchpoint:1.11
	sid-20020905-branch:1.11.0.16
	gdb_5_3-branch:1.11.0.14
	gdb_5_3-2002-09-04-branchpoint:1.11
	kseitz_interps-20020829-merge:1.11
	cagney_sysregs-20020825-branch:1.11.0.12
	cagney_sysregs-20020825-branchpoint:1.11
	readline_4_3-import-branch:1.11.0.10
	readline_4_3-import-branchpoint:1.11
	binutils-2_13:1.11
	gdb_5_2_1-2002-07-23-release:1.9
	binutils-2_13-branchpoint:1.11
	binutils-2_13-branch:1.11.0.8
	kseitz_interps-20020528-branch:1.11.0.6
	kseitz_interps-20020528-branchpoint:1.11
	cagney_regbuf-20020515-branch:1.11.0.4
	cagney_regbuf-20020515-branchpoint:1.11
	binutils-2_12_1:1.9
	jimb-macro-020506-branch:1.11.0.2
	jimb-macro-020506-branchpoint:1.11
	gdb_5_2-2002-04-29-release:1.9
	binutils-2_12:1.9
	gdb_5_2-branch:1.9.0.4
	gdb_5_2-2002-03-03-branchpoint:1.9
	binutils-2_12-branch:1.9.0.2
	binutils-2_12-branchpoint:1.9
	gdb_5_1_1-2002-01-24-release:1.6
	gdb_5_1_0_1-2002-01-03-release:1.6
	cygnus_cvs_20020108_pre:1.9
	gdb_5_1_0_1-2002-01-03-branch:1.6.0.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.6
	gdb_5_1-2001-11-21-release:1.6
	gdb_s390-2001-09-26-branch:1.6.0.6
	gdb_s390-2001-09-26-branchpoint:1.6
	gdb_5_1-2001-07-29-branch:1.6.0.4
	gdb_5_1-2001-07-29-branchpoint:1.6
	binutils-2_11_2:1.6
	binutils-2_11_1:1.6
	binutils-2_11:1.6
	x86_64versiong3:1.6
	binutils-2_11-branch:1.6.0.2
	insight-precleanup-2001-01-01:1.6
	binutils-2_10_1:1.4
	binutils-2_10:1.4
	gdb-premipsmulti-2000-06-06-branch:1.4.0.6
	gdb-premipsmulti-2000-06-06-branchpoint:1.4
	gdb_5_0-2000-05-19-release:1.4
	gdb_4_18_2-2000-05-18-release:1.4
	cygwin-1_1_1:1.4
	gdb_4_95_1-2000-05-11-snapshot:1.4
	gdb_4_95_0-2000-04-27-snapshot:1.4
	gdb_5_0-2000-04-10-branch:1.4.0.4
	gdb_5_0-2000-04-10-branchpoint:1.4
	binutils-2_10-branch:1.4.0.2
	binutils-2_10-branchpoint:1.4
	egcs_20000222:1.1.1.2
	binutils_latest_snapshot:1.15
	repo-unification-2000-02-06:1.3
	binu_ss_19990721:1.1.1.1
	binu_ss_19990602:1.1.1.1
	binu_ss_19990502:1.1.1.1
	cygnus:1.1.1;
locks; strict;
comment	@ * @;


1.15
date	2005.05.24.21.01.33;	author dj;	state Exp;
branches;
next	1.14;

1.14
date	2005.05.10.15.33.34;	author nickc;	state Exp;
branches;
next	1.13;

1.13
date	2005.03.28.02.09.01;	author dj;	state Exp;
branches;
next	1.12;

1.12
date	2003.04.15.03.53.53;	author dj;	state Exp;
branches;
next	1.11;

1.11
date	2002.03.04.22.01.27;	author dj;	state Exp;
branches
	1.11.18.1
	1.11.20.1;
next	1.10;

1.10
date	2002.03.04.00.55.25;	author dj;	state Exp;
branches;
next	1.9;

1.9
date	2001.10.07.22.42.23;	author dj;	state Exp;
branches;
next	1.8;

1.8
date	2001.09.27.20.27.58;	author dj;	state Exp;
branches;
next	1.7;

1.7
date	2001.09.26.18.45.50;	author dj;	state Exp;
branches;
next	1.6;

1.6
date	2000.11.29.19.17.37;	author dj;	state Exp;
branches;
next	1.5;

1.5
date	2000.06.15.20.56.25;	author hjl;	state Exp;
branches;
next	1.4;

1.4
date	2000.02.22.16.14.35;	author ian;	state Exp;
branches;
next	1.3;

1.3
date	99.08.05.21.15.29;	author ian;	state Exp;
branches;
next	1.2;

1.2
date	99.08.05.16.22.42;	author ian;	state Exp;
branches;
next	1.1;

1.1
date	99.05.03.07.28.54;	author rth;	state Exp;
branches
	1.1.1.1;
next	;

1.11.18.1
date	2003.04.16.19.57.05;	author carlton;	state Exp;
branches;
next	;

1.11.20.1
date	2003.12.14.20.28.03;	author drow;	state Exp;
branches;
next	;

1.1.1.1
date	99.05.03.07.28.54;	author rth;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2000.02.22.15.59.20;	author ian;	state Exp;
branches;
next	;


desc
@@


1.15
log
@merge from gcc
@
text
@/* memory allocation routines with error checking.
   Copyright 1989, 90, 91, 92, 93, 94 Free Software Foundation, Inc.
   
This file is part of the libiberty library.
Libiberty is free software; you can redistribute it and/or
modify it under the terms of the GNU Library General Public
License as published by the Free Software Foundation; either
version 2 of the License, or (at your option) any later version.

Libiberty is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Library General Public License for more details.

You should have received a copy of the GNU Library General Public
License along with libiberty; see the file COPYING.LIB.  If
not, write to the Free Software Foundation, Inc., 51 Franklin Street - Fifth Floor,
Boston, MA 02110-1301, USA.  */

/*

@@deftypefn Replacement void* xmalloc (size_t)

Allocate memory without fail.  If @@code{malloc} fails, this will print
a message to @@code{stderr} (using the name set by
@@code{xmalloc_set_program_name},
if any) and then call @@code{xexit}.  Note that it is therefore safe for
a program to contain @@code{#define malloc xmalloc} in its source.

@@end deftypefn

@@deftypefn Replacement void* xrealloc (void *@@var{ptr}, size_t @@var{size})
Reallocate memory without fail.  This routine functions like @@code{realloc},
but will behave the same as @@code{xmalloc} if memory cannot be found.

@@end deftypefn

@@deftypefn Replacement void* xcalloc (size_t @@var{nelem}, size_t @@var{elsize})

Allocate memory without fail, and set it to zero.  This routine functions
like @@code{calloc}, but will behave the same as @@code{xmalloc} if memory
cannot be found.

@@end deftypefn

@@deftypefn Replacement void xmalloc_set_program_name (const char *@@var{name})

You can use this to set the name of the program used by
@@code{xmalloc_failed} when printing a failure message.

@@end deftypefn

@@deftypefn Replacement void xmalloc_failed (size_t)

This function is not meant to be called by client code, and is listed
here for completeness only.  If any of the allocation routines fail, this
function will be called to print an error message and terminate execution.

@@end deftypefn

*/

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif
#include "ansidecl.h"
#include "libiberty.h"

#include <stdio.h>

#include <stddef.h>

#if VMS
#include <stdlib.h>
#include <unixlib.h>
#else
/* For systems with larger pointers than ints, these must be declared.  */
#  if HAVE_STDLIB_H && HAVE_UNISTD_H && HAVE_DECL_MALLOC \
      && HAVE_DECL_REALLOC && HAVE_DECL_CALLOC && HAVE_DECL_SBRK
#    include <stdlib.h>
#    include <unistd.h>
#  else
#    ifdef __cplusplus
extern "C" {
#    endif /* __cplusplus */
void *malloc (size_t);
void *realloc (void *, size_t);
void *calloc (size_t, size_t);
void *sbrk (ptrdiff_t);
#    ifdef __cplusplus
}
#    endif /* __cplusplus */
#  endif /* HAVE_STDLIB_H ...  */
#endif /* VMS */

/* The program name if set.  */
static const char *name = "";

#ifdef HAVE_SBRK
/* The initial sbrk, set when the program name is set. Not used for win32
   ports other than cygwin32.  */
static char *first_break = NULL;
#endif /* HAVE_SBRK */

void
xmalloc_set_program_name (const char *s)
{
  name = s;
#ifdef HAVE_SBRK
  /* Win32 ports other than cygwin32 don't have brk() */
  if (first_break == NULL)
    first_break = (char *) sbrk (0);
#endif /* HAVE_SBRK */
}

void
xmalloc_failed (size_t size)
{
#ifdef HAVE_SBRK
  extern char **environ;
  size_t allocated;

  if (first_break != NULL)
    allocated = (char *) sbrk (0) - first_break;
  else
    allocated = (char *) sbrk (0) - (char *) &environ;
  fprintf (stderr,
	   "\n%s%sout of memory allocating %lu bytes after a total of %lu bytes\n",
	   name, *name ? ": " : "",
	   (unsigned long) size, (unsigned long) allocated);
#else /* HAVE_SBRK */
  fprintf (stderr,
	   "\n%s%sout of memory allocating %lu bytes\n",
	   name, *name ? ": " : "",
	   (unsigned long) size);
#endif /* HAVE_SBRK */
  xexit (1);
}  

PTR
xmalloc (size_t size)
{
  PTR newmem;

  if (size == 0)
    size = 1;
  newmem = malloc (size);
  if (!newmem)
    xmalloc_failed (size);

  return (newmem);
}

PTR
xcalloc (size_t nelem, size_t elsize)
{
  PTR newmem;

  if (nelem == 0 || elsize == 0)
    nelem = elsize = 1;

  newmem = calloc (nelem, elsize);
  if (!newmem)
    xmalloc_failed (nelem * elsize);

  return (newmem);
}

PTR
xrealloc (PTR oldmem, size_t size)
{
  PTR newmem;

  if (size == 0)
    size = 1;
  if (!oldmem)
    newmem = malloc (size);
  else
    newmem = realloc (oldmem, size);
  if (!newmem)
    xmalloc_failed (size);

  return (newmem);
}
@


1.14
log
@Update the address and phone number of the FSF organization.
@
text
@d78 17
a94 5
PTR malloc (size_t);
PTR realloc (PTR, size_t);
PTR calloc (size_t, size_t);
PTR sbrk (ptrdiff_t);
#endif
@


1.13
log
@merge from gcc
@
text
@d17 2
a18 2
not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
Boston, MA 02111-1307, USA.  */
@


1.12
log
@merge from gcc
@
text
@a70 1
#ifdef ANSI_PROTOTYPES
a71 4
#else
#define size_t unsigned long
#define ptrdiff_t long
#endif
d78 4
a81 4
PTR malloc PARAMS ((size_t));
PTR realloc PARAMS ((PTR, size_t));
PTR calloc PARAMS ((size_t, size_t));
PTR sbrk PARAMS ((ptrdiff_t));
d94 1
a94 2
xmalloc_set_program_name (s)
     const char *s;
d105 1
a105 2
xmalloc_failed (size)
     size_t size;
d129 1
a129 2
xmalloc (size)
    size_t size;
d143 1
a143 2
xcalloc (nelem, elsize)
  size_t nelem, elsize;
d158 1
a158 3
xrealloc (oldmem, size)
    PTR oldmem;
    size_t size;
@


1.11
log
@merge from gcc
@
text
@d71 1
a71 1
#ifdef __STDC__
@


1.11.20.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@d71 1
a71 1
#ifdef ANSI_PROTOTYPES
@


1.11.18.1
log
@2003-04-16  David Carlton  <carlton@@bactrian.org>

	* Merge with mainline; tag is carlton_dictionary-20030416-merge.
@
text
@d71 1
a71 1
#ifdef ANSI_PROTOTYPES
@


1.10
log
@merge from gcc
@
text
@d123 1
a123 1
	   "\n%s%sout of memory allocating %lu bytes after allocating %lu bytes\n",
@


1.9
log
@merge from gcc
@
text
@d123 1
a123 1
	   "\n%s%sCannot allocate %lu bytes after allocating %lu bytes\n",
d128 1
a128 1
	   "\n%s%sCannot allocate %lu bytes\n",
@


1.8
log
@merge from gcc
@
text
@d32 1
a32 1
@@deftypefn Replacement void* xrealloc (void*, size_t)
d38 1
a38 1
@@deftypefn Replacement void* xcalloc (size_t, size_t)
@


1.7
log
@merge from gcc
@
text
@d25 2
a26 1
a message to stderr (using the name set by @@code{xmalloc_set_program_name},
@


1.6
log
@* aclocal.m4 (LIB_AC_PROG_CC): Moved here from configure.in.
(AC_DEFINE_NOAUTOHEADER): New - work around bug in autoheader.
* configure.in: Call AC_C_INLINE and AC_C_CONST.  Use three
argument form of AC_DEFINE in dummy definitions block.  Use
AC_DEFINE_NOAUTOHEADER for real definitions of things defined
in dummy block.  Preload cache variables instead of bypassing
tests, where possible.
* acconfig.h: Removed.
* xmalloc.c (xmalloc_failed): New function, does error
reporting on failed allocation.
(xmalloc, xcalloc, xrealloc): Use it.
@
text
@d20 42
@


1.5
log
@Synced with libiberty in the gcc repository.
@
text
@d67 25
d102 1
a102 4
    {
#ifdef HAVE_SBRK
      extern char **environ;
      size_t allocated;
a103 16
      if (first_break != NULL)
	allocated = (char *) sbrk (0) - first_break;
      else
	allocated = (char *) sbrk (0) - (char *) &environ;
      fprintf (stderr,
	       "\n%s%sCannot allocate %lu bytes after allocating %lu bytes\n",
	       name, *name ? ": " : "",
	       (unsigned long) size, (unsigned long) allocated);
#else /* HAVE_SBRK */
      fprintf (stderr,
              "\n%s%sCannot allocate %lu bytes\n",
              name, *name ? ": " : "",
              (unsigned long) size);
#endif /* HAVE_SBRK */
      xexit (1);
    }
d118 1
a118 4
    {
#ifdef HAVE_SBRK
      extern char **environ;
      size_t allocated;
a119 16
      if (first_break != NULL)
	allocated = (char *) sbrk (0) - first_break;
      else
	allocated = (char *) sbrk (0) - (char *) &environ;
      fprintf (stderr,
	       "\n%s%sCannot allocate %lu bytes after allocating %lu bytes\n",
	       name, *name ? ": " : "",
	       (unsigned long) (nelem * elsize), (unsigned long) allocated);
#else /* HAVE_SBRK */
      fprintf (stderr,
              "\n%s%sCannot allocate %lu bytes\n",
              name, *name ? ": " : "",
              (unsigned long) (nelem * elsize));
#endif /* HAVE_SBRK */
      xexit (1);
    }
d137 1
a137 4
    {
#ifdef HAVE_SBRK
      extern char **environ;
      size_t allocated;
a138 16
      if (first_break != NULL)
	allocated = (char *) sbrk (0) - first_break;
      else
	allocated = (char *) sbrk (0) - (char *) &environ;
      fprintf (stderr,
	       "\n%s%sCannot reallocate %lu bytes after allocating %lu bytes\n",
	       name, *name ? ": " : "",
	       (unsigned long) size, (unsigned long) allocated);
#else /* HAVE_SBRK */
      fprintf (stderr,
              "\n%s%sCannot reallocate %lu bytes\n",
              name, *name ? ": " : "",
              (unsigned long) size);
#endif /* HAVE_SBRK */
      xexit (1);
    }
@


1.4
log
@merge with libiberty from egcs 2000-02-22
@
text
@d20 3
@


1.3
log
@Revert last patch to xmalloc.c, and instead bring over this patch from
egcs:
Thu Apr 15 23:00:55 1999  Mumit Khan  <khan@@xraylith.wisc.edu>

	* configure.in (checkfuncs): Check for sbrk.
	* config.in: Rebuilt.
	* configure: Likewise.
	* xmalloc.c: Use HAVE_SBRK instead of the host specific definitions.
@
text
@d84 1
a84 1
	       "\n%s%sCan not allocate %lu bytes after allocating %lu bytes\n",
d89 1
a89 1
              "\n%s%sCan not allocate %lu bytes\n",
d119 1
a119 1
	       "\n%s%sCan not allocate %lu bytes after allocating %lu bytes\n",
d124 1
a124 1
              "\n%s%sCan not allocate %lu bytes\n",
d157 1
a157 1
	       "\n%s%sCan not reallocate %lu bytes after allocating %lu bytes\n",
d162 1
a162 1
              "\n%s%sCan not reallocate %lu bytes\n",
@


1.2
log
@	* xmalloc.c: Control all uses of SBRK with a single define,
	USE_SBRK.  Don't define it if __INTERIX.
@
text
@d2 1
a2 1
   Copyright 1989, 90, 91, 92, 93, 94, 1999 Free Software Foundation, Inc.
d46 1
a46 12
#if !defined (__CYGWIN__) && defined (__CYGWIN32__)
#define __CYGWIN__ 1
#endif

/* On Unix systems we use sbrk to determine how much memory has been
   allocated.  */
#undef USE_SBRK
#if (! defined (_WIN32) && ! defined (__INTERIX)) || defined (__CYGWIN__) || defined (__UWIN__)
#define USE_SBRK
#endif

#ifdef USE_SBRK
d50 1
a50 1
#endif
d57 2
a58 1
#ifdef USE_SBRK
d61 1
a61 1
#endif
d75 1
a75 1
#ifdef USE_SBRK
d87 1
a87 1
#else
d92 1
a92 1
#endif /* ! USE_SBRK */
d110 1
a110 1
#ifdef USE_SBRK
d122 1
a122 1
#else
d127 1
a127 1
#endif /* ! USE_SBRK */
d148 1
a148 1
#ifdef USE_SBRK
d160 1
a160 1
#else
d165 1
a165 1
#endif /* ! USE_SBRK */
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
   Copyright 1989, 90, 91, 92, 93, 94 Free Software Foundation, Inc.
d50 8
a57 1
#if ! defined (_WIN32) || defined (__CYGWIN__) || defined (__UWIN__)
d61 1
a61 1
#endif /* ! _WIN32 || __CYGWIN __ || __UWIN__ */
d68 1
a68 2
#if ! defined (_WIN32) || defined (__CYGWIN__) || defined (__UWIN__)
  /* Win32 ports other than cygwin32 don't have brk() */
d71 1
a71 1
#endif /* ! _WIN32 || __CYGWIN __ || __UWIN__ */
d85 1
a85 1
#if ! defined (_WIN32) || defined (__CYGWIN__) || defined (__UWIN__)
d102 1
a102 1
#endif /* ! _WIN32 || __CYGWIN __ || __UWIN__ */
d120 1
a120 1
#if ! defined (_WIN32) || defined (__CYGWIN__)
d137 1
a137 1
#endif /* ! _WIN32 || __CYGWIN __ */
d158 1
a158 1
#ifndef __MINGW32__
d175 1
a175 1
#endif /* __MINGW32__ */
@


1.1.1.1
log
@19990502 sourceware import
@
text
@@


1.1.1.2
log
@import libiberty from egcs
@
text
@d46 5
a50 1
#ifdef HAVE_SBRK
d54 1
a54 1
#endif /* HAVE_SBRK */
d61 1
a61 1
#ifdef HAVE_SBRK
d65 1
a65 1
#endif /* HAVE_SBRK */
d79 1
a79 1
#ifdef HAVE_SBRK
d88 1
a88 1
	       "\n%s%sCannot allocate %lu bytes after allocating %lu bytes\n",
d91 1
a91 1
#else /* HAVE_SBRK */
d93 1
a93 1
              "\n%s%sCannot allocate %lu bytes\n",
d96 1
a96 1
#endif /* HAVE_SBRK */
d114 1
a114 1
#ifdef HAVE_SBRK
d123 1
a123 1
	       "\n%s%sCannot allocate %lu bytes after allocating %lu bytes\n",
d126 1
a126 1
#else /* HAVE_SBRK */
d128 1
a128 1
              "\n%s%sCannot allocate %lu bytes\n",
d131 1
a131 1
#endif /* HAVE_SBRK */
d152 1
a152 1
#ifdef HAVE_SBRK
d161 1
a161 1
	       "\n%s%sCannot reallocate %lu bytes after allocating %lu bytes\n",
d164 1
a164 1
#else /* HAVE_SBRK */
d166 1
a166 1
              "\n%s%sCannot reallocate %lu bytes\n",
d169 1
a169 1
#endif /* HAVE_SBRK */
@


