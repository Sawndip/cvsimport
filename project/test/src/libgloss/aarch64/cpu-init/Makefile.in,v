head	1.3;
access;
symbols
	newlib-2_2_0:1.3.0.2
	newlib-2_1_0:1.3
	newlib-2_0_0:1.2;
locks; strict;
comment	@# @;


1.3
date	2013.04.19.14.24.45;	author mshawcroft;	state Exp;
branches;
next	1.2;

1.2
date	2012.11.23.10.43.31;	author corinna;	state Exp;
branches;
next	1.1;

1.1
date	2012.09.26.20.11.54;	author jjohnstn;	state Exp;
branches;
next	;


desc
@@


1.3
log
@[AArch64] Honour CFLAGS.

2013-04-19  Yufeng Zhang  <yufeng.zhang@@arm.com>

	* aarch64/Makefile.in (rdimon-crt0.o, rdimon-trap.o)
	(rdimon-_exit.o, rdimon-_kill.o, rdimon-syscalls.o)
	(rdimon-libcfunc.o): Add $(CFLAGS) to the compiler command line.
	* aarch64/cpu-init/Makefile.in (${CPU_INIT_OBJS}): Add $(CFLAGS)
	to the compiler command line.
@
text
@#  Copyright (c) 2012 ARM Ltd.  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#  3. The name of the company may not be used to endorse or promote
#     products derived from this software without specific prior written
#     permission.
#
#  THIS SOFTWARE IS PROVIDED BY ARM LTD ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
#  IN NO EVENT SHALL ARM LTD BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
#  TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
#  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
#  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
#  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
#  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

DESTDIR =
VPATH = @@srcdir@@ @@srcdir@@/.. @@srcdir@@/../..
srcdir = @@srcdir@@
objdir = .
srcroot = $(srcdir)/../../..
objroot = $(objdir)/../../..

prefix = @@prefix@@
exec_prefix = @@exec_prefix@@

host_alias = @@host_alias@@
target_alias = @@target_alias@@

bindir = @@bindir@@
libdir = @@libdir@@
tooldir = $(exec_prefix)/$(target_alias)

INSTALL = @@INSTALL@@
INSTALL_PROGRAM = @@INSTALL_PROGRAM@@
INSTALL_DATA = @@INSTALL_DATA@@

# Multilib support variables.
# TOP is used instead of MULTI{BUILD,SRC}TOP.
MULTISRCTOP =
MULTIBUILDTOP =
MULTIDIRS =
MULTISUBDIR =
MULTIDO = true
MULTICLEAN = true

SHELL =	/bin/sh

CC = @@CC@@

AS = @@AS@@
AR = @@AR@@
LD = @@LD@@
RANLIB = @@RANLIB@@

CPU_INIT_OBJS = rdimon-aem-el3.o
CPU_INIT_INSTALL = install-cpu-init

CFLAGS		= -g

# Host specific makefile fragment comes in here.
@@host_makefile_frag@@

.PHONY: all
all: ${CPU_INIT_OBJS}

#
# here's where we build the test programs for each target
#
.PHONY: test
test:

# Static pattern rule for assembling cpu init files to object files.
${CPU_INIT_OBJS}: %.o: %.S
	$(CC) $(CFLAGS_FOR_TARGET) $(CFLAGS) $(INCLUDES) -DARM_RDI_MONITOR -o $@@ -c $<

clean mostlyclean:
	rm -f a.out core *.i *.o *-test *.srec *.dis *.x

distclean maintainer-clean realclean: clean
	rm -f Makefile *~

.PHONY: install info install-info clean-info
install: ${CPU_INIT_INSTALL}

install-cpu-init:
	test -d $(DESTDIR)${tooldir}/lib${MULTISUBDIR}/cpu-init || mkdir $(DESTDIR)${tooldir}/lib${MULTISUBDIR}/cpu-init
	set -e; for x in ${CPU_INIT_OBJS}; do ${INSTALL_DATA} $$x $(DESTDIR)${tooldir}/lib${MULTISUBDIR}/cpu-init/$$x; done

doc:
info:
install-info:
clean-info:

Makefile: Makefile.in config.status @@host_makefile_frag_path@@
	$(SHELL) config.status

config.status: configure
	$(SHELL) config.status --recheck
@


1.2
log
@	* aarch64/configure.in: Replace the direct generation of
	cpu-init/Makefile.in with AC_CONFIG_SUBDIRS(cpu-init).
	* aarch64/configure: Re-generate.
	* aarch64/cpu-init/Makefile.in (objtype): Remove.
	(Makefile, config.status): Update the rules.
	* aarch64/cpu-init/aclocal.m4: New file (generated).
	* aarch64/cpu-init/configure.in: New file.
	* aarch64/cpu-init/configure: New file (generated).
@
text
@d84 1
a84 1
	$(CC) $(CFLAGS_FOR_TARGET) $(INCLUDES) -DARM_RDI_MONITOR -o $@@ -c $<
@


1.1
log
@
2012-09-26  Ian Bolton  <ian.bolton@@arm.com>
        Jim MacArthur  <jim.macarthur@@arm.com>
        Marcus Shawcroft  <marcus.shawcroft@@arm.com>
        Nigel Stephens  <nigel.stephens@@arm.com>
        Ramana Radhakrishnan  <ramana.radhakrishnan@@arm.com>
        Richard Earnshaw  <rearnsha@@arm.com>
        Sofiane Naci  <sofiane.naci@@arm.com>
        Tejas Belagod  <tejas.belagod@@arm.com>
        Yufeng Zhang  <yufeng.zhang@@arm.com>

        * aarch64/Makefile.in: New file.
        * aarch64/_exit.c: New file.
        * aarch64/_kill.c: New file.
        * aarch64/aclocal.m4: Generated.
        * aarch64/configure: Generated.
        * aarch64/configure.in: New file.
        * aarch64/cpu-init/Makefile.in: New file.
        * aarch64/cpu-init/rdimon-aem-el3.S: New file.
        * aarch64/crt0.S: New file.
        * aarch64/elf-rdimon.specs: New file.
        * aarch64/libcfunc.c: New file.
        * aarch64/svc.h: New file.
        * aarch64/syscalls.c: New file.
        * configure.in: Add AArch64.
        * configure: Re-generated.
@
text
@a42 2
objtype = @@objtype@@

d104 2
a105 2
Makefile: Makefile.in ../config.status @@host_makefile_frag_path@@
	$(SHELL) ../config.status --file cpu-init/Makefile
d107 2
a108 2
../config.status: ../configure
	$(SHELL) ../config.status --recheck
@

