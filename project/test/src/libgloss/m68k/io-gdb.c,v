head	1.2;
access;
symbols
	newlib-2_2_0:1.2.0.6
	newlib-2_1_0:1.2
	newlib-2_0_0:1.2
	newlib-1_20_0:1.2
	newlib-1_19_0:1.2
	newlib-1_18_0:1.2
	newlib-1_17_0-arc:1.2.0.4
	binutils-arc-20080908-branch:1.2.0.2
	binutils-arc-20080908-branchpoint:1.2
	newlib-1_17_0:1.2
	newlib-1_16_0:1.2
	newlib-1_15_0:1.2
	newlib-csl-coldfire-4_1-32:1.1.2.1
	newlib-csl-sourcerygxx-4_1-32:1.1.2.1
	newlib-csl-innovasic-fido-3_4_4-33:1.1.2.1
	newlib-csl-coldfire-4_1-30:1.1.2.1
	newlib-csl-sourcerygxx-4_1-30:1.1.2.1
	newlib-csl-coldfire-4_1-28:1.1.2.1
	newlib-csl-sourcerygxx-4_1-28:1.1.2.1
	newlib-csl-arm-2006q3-27:1.1.2.1
	newlib-csl-sourcerygxx-4_1-27:1.1.2.1
	newlib-csl-arm-2006q3-26:1.1.2.1
	newlib-csl-sourcerygxx-4_1-26:1.1.2.1
	newlib-csl-sourcerygxx-4_1-24:1.1.2.1
	newlib-csl-20060320-branch:1.1.0.2;
locks; strict;
comment	@ * @;


1.2
date	2006.12.11.19.58.01;	author jjohnstn;	state Exp;
branches;
next	1.1;

1.1
date	2006.10.07.20.08.48;	author nathan;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2006.10.07.20.08.48;	author nathan;	state Exp;
branches;
next	;


desc
@@


1.2
log
@
2006-12-11 Kazu Hirata <kazu@@codesourcery.com>

	Merge from newlib-csl-20060320-branch:
	2006-12-01  Nathan Sidwell  <nathan@@codesourcery.com>
		    Kazu Hirata  <kazu@@codesourcery.com>

	* m68k/Makefile.in (CF_ISRS): Use addprefix.

	2006-11-01 Nathan Sidwell <nathan@@codesourcery.com>

	* m68k/Makefile.in (CFLAGS): Do not clear.  Add to all compilations.
	(ARFLAGS): Remove commented out definition.


	* m68k/configure.in (DO) Set to list of target cpu families.
	* m68k/configure: Rebuilt.
	* m68k/Makefile.in (DO): New.
	(UNHOSTED_BSP, UNHOSTED_OBJS, HOSTED_BSP, HOSTED_OBJS): Move
	later.
	(m5208evb, m5213evb, m52235evb, m5235evb, m5273c3, m5275evb,
	m5282evb, m5329evb, m5485evb): Move earlier.
	(all): Add all_$DO dependencies.
	(all_cf, all_m68k): New targets, depend on cf & m68k bsps as
	appropriate.
	(m%-ram.ld, m%-rom.ld, m%-ram-hosted.ld, m%-rom-hosted.ld): Add
	'm' prefix.
	(install): Add install_$DO dependencies.
	(install_cf, install_m68k): New targets.  Perform cf and m68k
	installs as appropriate.
	(install_io): New, install the io libraries.


	2006-10-23 Nathan Sidwell <nathan@@codesourcery.com>

	* m68k/Makefile.in (CF_CRT0): Rename to CF_CRT0S, separate hosted
	& unhosted versions.
	(CF_OBJS): Add cf-isv.o.
	(CF_SOURCES): Add cf-isv.S.
	(cf-hosted-crt0.o, cf-unhosted-crt0.o): New targets.
	* m68k/cf-isv.S: New, broken out of ...
	* m68k/cf-crt0.S: ... here.  Add HOSTED & UNHOSTED differences.
	* m68k/cf-crt1.c (__start1): Add heap_limit argument.
	(__heap_limit): Define.
	* m68k/cf-sbrk.c (__heap_limit): Declare.
	(sbrk): Adjust for __heap_limit.
	* m68k/cf.sc: Use different crt0's for hosted & unhosted.
	Install a separate isv.o file.
	* m68k/io.h (HOSTED_PUTCHAR): Replace with ...
	(HOSTED_INIT_SIM): ... this.


	2006-10-20 Nathan Sidwell <nathan@@codesourcery.com>

	* m68k/Makefile.in (CF_BOARDS): Add m5275evb.
	(m5275evb): New board.


	2006-10-20 Vladimir Prus <vladimir@@codesourcery.com>

	* m68k/cf.sc: Add linkonce sections and
	DWARF sections.


	2006-10-07 Nathan Sidwell <nathan@@codesourcery.com>

	* m68k/Makefile.in: Adjust Coldfire rules.
	(BDM_CRT0, BDM_BSP, BDM_OBJS, BDM_ISRS): Rename	to ...
	(CF_CRT0, CF_BSP, CF_OBJS, CF_ISRS): ... here.  Adjust.
	(BDM_OTHER_OBJS): Remove.
	(BDM_SYSOBJS): Rename to ...
	(UNHOSTED_OBJS): ... here.  Adjust.
	(UNHOSTED_BSP, HOSTED_OBJS, HOSTED_BSP): New.
	(CF_HOSTED_SCRIPTS): New.
	(CF_SCRIPTS, CF_SOURCES): Adjust.
	* m68k/cf.sc: Add IO library variable.
	* m68k/bdm-crt0.S, m68k/bdm-crt1.c, m68k/bdm-isrs.c,
	m68k/bdm-sbrk.c, m68k/bdm-semihost.S: Rename to ...
	* m68k/cf-crt0.S, m68k/cf-crt1.c, m68k/cf-isrs.c, m68k/cf-sbrk.c,
	m68k/cf-hosted.S: ... here.
	* m68k/cf-exit.c: New.
	* m68k/bdm-gdb.h, m68k/bdm-semihost.h: Merge into ...
	* m68k/io.h: ... here.  Add unhosted support.  Adjust conversion
	function names.
	* m68k/bdm-gdb.c: Rename to ...
	* m68k/io-gdb.c: ... here.  Adjust names of conversion functions.
	* m68k/bdm-close.c, m68k/bdm-exit.c, m68k/bdm-fstat.c,
	m68k/bdm-gettimeofday.c, m68k/bdm-isatty.c, m68k/bdm-lseek.c,
	m68k/bdm-open.c, m68k/bdm-read.c, m68k/bdm-rename.c,
	m68k/bdm-stat.c, m68k/bdm-system.c, m68k/bdm-time.c,
	m68k/bdm-unlink.c, m68k/bdm-write.c: Rename to ...
	* m68k/io-close.c, m68k/io-exit.c, m68k/io-fstat.c,
	m68k/io-gettimeofday.c, m68k/io-isatty.c, m68k/io-lseek.c,
	m68k/io-open.c, m68k/io-read.c, m68k/io-rename.c, m68k/io-stat.c,
	m68k/io-system.c, m68k/io-time.c, m68k/io-unlink.c,
	m68k/io-write.c: ... here.  Include io.h. Adjust for hosted &
	unhosted libraries.  Adjust names of gdb conversion functions.


	2006-09-29 Nathan Sidwell <nathan@@codesourcery.com>

	* m68k/bdm-semihost.S: Add more comments. Make instruction weirder.

	2006-09-22 Nathan Sidwell <nathan@@codesourcery.com>

	* m68k/bdm-crt1.c (hardware_init_hook): Use #defines for CACR bits.

	2006-09-18 Nathan Sidwell <nathan@@codesourcery.com>

	* m68k/Makefile.in: Don't force a frame pointer on the ISRs.
	* m68k/bdm-crt1.c (__start1): Don't set the VBR here.
	(hardeare_init_hook): Define weakly.  Set VBR here, enable caching
	if supported.


	* m68k/Makefile.in (bdm-semihost.o): Build from bdm-semihost.S.
	* m68k/bdm-semihost.c: Remove.
	* m68k/bdm-semihost.S: New.
	* m68k/bdm-crt0.S: Don't install semihosting trap handler.
	* m68k/bdm-close.c, bdm-exit.c, bdm-fstat.c, bdm-gettimeofday.c,
	bdm-isatty.c, bdm-lseek.c, bdm-open.c, bdm-read.c, bdm-rename.c,
	bdm-stat.c, bdm-system.c, bdm-unlink.c, bdm-write.c): Update.
	* m68k/bdm-isrs.c: Update comment.
	* m68k/bdm-semihost.h (BDM_TRAPNUM, BDM_FUNC_REG, BDM_ARG_REG,
	BDM_TRAP): Remove.
	(__bdm_semihost): Declare.


	2006-09-15 Nathan Sidwell <nathan@@codesourcery.com>

	* m68k/Makefile.in (BDM_OTHER_OBJS): Remove sbrk.o.
	(BDM_SYSOBJS): Add bdm-sbrk.o.
	* m68k/bdm-sbrk.c: New.


	2006-09-06 Nathan Sidwell <nathan@@codesourcery.com>

	* m68k/Makefile.in (CF_SOURCES): New.
	(install): Install them.


	2006-09-01 Nathan Sidwell <nathan@@codesourcery.com>

	* m68k/cf.sc: Add .jcr section to .text.
@
text
@/*
 * hosted io support for GDB's remote fileio protocol
 *
 * Copyright (c) 2006 CodeSourcery Inc
 *
 * The authors hereby grant permission to use, copy, modify, distribute,
 * and license this software and its documentation for any purpose, provided
 * that existing copyright notices are retained in all copies and that this
 * notice is included verbatim in any distributions. No written agreement,
 * license, or royalty fee is required for any of the authorized uses.
 * Modifications to this software may be copyrighted by their authors
 * and need not follow the licensing terms described here, provided that
 * the new terms are clearly indicated on the first page of each file where
 * they apply.
 */

#include "io.h"
#include <fcntl.h>
#include <unistd.h>
#include <errno.h>

gdb_mode_t
__hosted_to_gdb_mode_t (mode_t m)
{
  gdb_mode_t result = 0;
  if (m & S_IFREG)
    result |= GDB_S_IFREG;
  if (m & S_IFDIR)
    result |= GDB_S_IFDIR;
  if (m & S_IRUSR)
    result |= GDB_S_IRUSR;
  if (m & S_IWUSR)
    result |= GDB_S_IWUSR;
  if (m & S_IXUSR)
    result |= GDB_S_IXUSR;
  if (m & S_IRGRP)
    result |= GDB_S_IRGRP;
  if (m & S_IWGRP)
    result |= GDB_S_IWGRP;
  if (m & S_IXGRP)
    result |= GDB_S_IXGRP;
  if (m & S_IROTH)
    result |= GDB_S_IROTH;
  if (m & S_IWOTH)
    result |= GDB_S_IWOTH;
  if (m & S_IXOTH)
    result |= GDB_S_IXOTH;
  return result;
}

int32_t
__hosted_to_gdb_open_flags (int f)
{
  int32_t result = 0;
  if (f & O_RDONLY)
    result |= GDB_O_RDONLY;
  if (f & O_WRONLY)
    result |= GDB_O_WRONLY;
  if (f & O_RDWR)
    result |= GDB_O_RDWR;
  if (f & O_APPEND)
    result |= GDB_O_APPEND;
  if (f & O_CREAT)
    result |= GDB_O_CREAT;
  if (f & O_TRUNC)
    result |= GDB_O_TRUNC;
  if (f & O_EXCL)
    result |= GDB_O_EXCL;
  return result;
}

int32_t
__hosted_to_gdb_lseek_flags (int f)
{
  if (f == SEEK_CUR)
    return GDB_SEEK_CUR;
  else if (f == SEEK_END)
    return GDB_SEEK_END;
  else
    return GDB_SEEK_SET;
}

void
__hosted_from_gdb_stat (const struct gdb_stat *gs,
			struct stat *s)
{
  s->st_dev = gs->st_dev;
  s->st_ino = gs->st_ino;
  s->st_mode = gs->st_mode;
  s->st_nlink = gs->st_nlink;
  s->st_uid = gs->st_uid;
  s->st_gid = gs->st_gid;
  s->st_rdev = gs->st_rdev;
  s->st_size = gs->st_size;
  s->st_blksize = gs->st_blksize;
  s->st_blocks = gs->st_blocks;
  s->st_atime = gs->st_atime;
  s->st_mtime = gs->st_mtime;
  s->st_ctime = gs->st_ctime;
}

void
__hosted_from_gdb_timeval (const struct gdb_timeval *gt,
			   struct timeval *t)
{
  t->tv_sec = gt->tv_sec;
  t->tv_usec = gt->tv_usec;
}

int
__hosted_from_gdb_errno (int32_t err)
{
  switch (err)
    {
    case 0: 		return 0;
    case GDB_EPERM: 	return EPERM;
    case GDB_ENOENT: 	return ENOENT;
    case GDB_EINTR: 	return EINTR;
    case GDB_EBADF: 	return EBADF;
    case GDB_EACCES: 	return EACCES;
    case GDB_EFAULT: 	return EFAULT;
    case GDB_EBUSY: 	return EBUSY;
    case GDB_EEXIST: 	return EEXIST;
    case GDB_ENODEV: 	return ENODEV;
    case GDB_ENOTDIR: 	return ENOTDIR;
    case GDB_EISDIR: 	return EISDIR;
    case GDB_EINVAL: 	return EINVAL;
    case GDB_ENFILE: 	return ENFILE;
    case GDB_EMFILE: 	return EMFILE;
    case GDB_EFBIG: 	return EFBIG;
    case GDB_ENOSPC: 	return ENOSPC;
    case GDB_ESPIPE: 	return ESPIPE;
    case GDB_EROFS: 	return EROFS;
    case GDB_ENAMETOOLONG: 	return ENAMETOOLONG;
    case GDB_EUNKNOWN:
    default:
      return EIO;
    }
}

@


1.1
log
@file io-gdb.c was initially added on branch newlib-csl-20060320-branch.
@
text
@d1 140
@


1.1.2.1
log
@	libgloss/
	* m68k/Makefile.in: Adjust Coldfire rules.
	(BDM_CRT0, BDM_BSP, BDM_OBJS, BDM_ISRS): Rename	to ...
	(CF_CRT0, CF_BSP, CF_OBJS, CF_ISRS): ... here.  Adjust.
	(BDM_OTHER_OBJS): Remove.
	(BDM_SYSOBJS): Rename to ...
	(UNHOSTED_OBJS): ... here.  Adjust.
	(UNHOSTED_BSP, HOSTED_OBJS, HOSTED_BSP): New.
	(CF_HOSTED_SCRIPTS): New.
	(CF_SCRIPTS, CF_SOURCES): Adjust.
	* m68k/cf.sc: Add IO library variable.
	* m68k/bdm-crt0.S, m68k/bdm-crt1.c, m68k/bdm-isrs.c,
	m68k/bdm-sbrk.c, m68k/bdm-semihost.S: Rename to ...
	* m68k/cf-crt0.S, m68k/cf-crt1.c, m68k/cf-isrs.c, m68k/cf-sbrk.c,
	m68k/cf-hosted.S: ... here.
	* m68k/cf-exit.c: New.
	* m68k/bdm-gdb.h, m68k/bdm-semihost.h: Merge into ...
	* m68k/io.h: ... here.  Add unhosted support.  Adjust conversion
	function names.
	* m68k/bdm-gdb.c: Rename to ...
	* m68k/io-gdb.c: ... here.  Adjust names of conversion functions.
	* m68k/bdm-close.c, m68k/bdm-exit.c, m68k/bdm-fstat.c,
	m68k/bdm-gettimeofday.c, m68k/bdm-isatty.c, m68k/bdm-lseek.c,
	m68k/bdm-open.c, m68k/bdm-read.c, m68k/bdm-rename.c,
	m68k/bdm-stat.c, m68k/bdm-system.c, m68k/bdm-time.c,
	m68k/bdm-unlink.c, m68k/bdm-write.c: Rename to ...
	* m68k/io-close.c, m68k/io-exit.c, m68k/io-fstat.c,
	m68k/io-gettimeofday.c, m68k/io-isatty.c, m68k/io-lseek.c,
	m68k/io-open.c, m68k/io-read.c, m68k/io-rename.c, m68k/io-stat.c,
	m68k/io-system.c, m68k/io-time.c, m68k/io-unlink.c,
	m68k/io-write.c: ... here.  Include io.h. Adjust for hosted &
	unhosted libraries.  Adjust names of gdb conversion functions.
@
text
@a0 140
/*
 * hosted io support for GDB's remote fileio protocol
 *
 * Copyright (c) 2006 CodeSourcery Inc
 *
 * The authors hereby grant permission to use, copy, modify, distribute,
 * and license this software and its documentation for any purpose, provided
 * that existing copyright notices are retained in all copies and that this
 * notice is included verbatim in any distributions. No written agreement,
 * license, or royalty fee is required for any of the authorized uses.
 * Modifications to this software may be copyrighted by their authors
 * and need not follow the licensing terms described here, provided that
 * the new terms are clearly indicated on the first page of each file where
 * they apply.
 */

#include "io.h"
#include <fcntl.h>
#include <unistd.h>
#include <errno.h>

gdb_mode_t
__hosted_to_gdb_mode_t (mode_t m)
{
  gdb_mode_t result = 0;
  if (m & S_IFREG)
    result |= GDB_S_IFREG;
  if (m & S_IFDIR)
    result |= GDB_S_IFDIR;
  if (m & S_IRUSR)
    result |= GDB_S_IRUSR;
  if (m & S_IWUSR)
    result |= GDB_S_IWUSR;
  if (m & S_IXUSR)
    result |= GDB_S_IXUSR;
  if (m & S_IRGRP)
    result |= GDB_S_IRGRP;
  if (m & S_IWGRP)
    result |= GDB_S_IWGRP;
  if (m & S_IXGRP)
    result |= GDB_S_IXGRP;
  if (m & S_IROTH)
    result |= GDB_S_IROTH;
  if (m & S_IWOTH)
    result |= GDB_S_IWOTH;
  if (m & S_IXOTH)
    result |= GDB_S_IXOTH;
  return result;
}

int32_t
__hosted_to_gdb_open_flags (int f)
{
  int32_t result = 0;
  if (f & O_RDONLY)
    result |= GDB_O_RDONLY;
  if (f & O_WRONLY)
    result |= GDB_O_WRONLY;
  if (f & O_RDWR)
    result |= GDB_O_RDWR;
  if (f & O_APPEND)
    result |= GDB_O_APPEND;
  if (f & O_CREAT)
    result |= GDB_O_CREAT;
  if (f & O_TRUNC)
    result |= GDB_O_TRUNC;
  if (f & O_EXCL)
    result |= GDB_O_EXCL;
  return result;
}

int32_t
__hosted_to_gdb_lseek_flags (int f)
{
  if (f == SEEK_CUR)
    return GDB_SEEK_CUR;
  else if (f == SEEK_END)
    return GDB_SEEK_END;
  else
    return GDB_SEEK_SET;
}

void
__hosted_from_gdb_stat (const struct gdb_stat *gs,
			struct stat *s)
{
  s->st_dev = gs->st_dev;
  s->st_ino = gs->st_ino;
  s->st_mode = gs->st_mode;
  s->st_nlink = gs->st_nlink;
  s->st_uid = gs->st_uid;
  s->st_gid = gs->st_gid;
  s->st_rdev = gs->st_rdev;
  s->st_size = gs->st_size;
  s->st_blksize = gs->st_blksize;
  s->st_blocks = gs->st_blocks;
  s->st_atime = gs->st_atime;
  s->st_mtime = gs->st_mtime;
  s->st_ctime = gs->st_ctime;
}

void
__hosted_from_gdb_timeval (const struct gdb_timeval *gt,
			   struct timeval *t)
{
  t->tv_sec = gt->tv_sec;
  t->tv_usec = gt->tv_usec;
}

int
__hosted_from_gdb_errno (int32_t err)
{
  switch (err)
    {
    case 0: 		return 0;
    case GDB_EPERM: 	return EPERM;
    case GDB_ENOENT: 	return ENOENT;
    case GDB_EINTR: 	return EINTR;
    case GDB_EBADF: 	return EBADF;
    case GDB_EACCES: 	return EACCES;
    case GDB_EFAULT: 	return EFAULT;
    case GDB_EBUSY: 	return EBUSY;
    case GDB_EEXIST: 	return EEXIST;
    case GDB_ENODEV: 	return ENODEV;
    case GDB_ENOTDIR: 	return ENOTDIR;
    case GDB_EISDIR: 	return EISDIR;
    case GDB_EINVAL: 	return EINVAL;
    case GDB_ENFILE: 	return ENFILE;
    case GDB_EMFILE: 	return EMFILE;
    case GDB_EFBIG: 	return EFBIG;
    case GDB_ENOSPC: 	return ENOSPC;
    case GDB_ESPIPE: 	return ESPIPE;
    case GDB_EROFS: 	return EROFS;
    case GDB_ENAMETOOLONG: 	return ENAMETOOLONG;
    case GDB_EUNKNOWN:
    default:
      return EIO;
    }
}

@

