head	1.1;
access;
symbols
	newlib-2_2_0:1.1.0.10
	newlib-2_1_0:1.1
	newlib-2_0_0:1.1
	newlib-1_20_0:1.1
	newlib-1_19_0:1.1
	newlib-1_18_0:1.1
	newlib-1_17_0-arc:1.1.0.8
	binutils-arc-20080908-branch:1.1.0.6
	binutils-arc-20080908-branchpoint:1.1
	newlib-1_17_0:1.1
	newlib-1_16_0:1.1
	newlib-1_15_0:1.1
	newlib-csl-coldfire-4_1-32:1.1
	newlib-csl-sourcerygxx-4_1-32:1.1
	newlib-csl-innovasic-fido-3_4_4-33:1.1
	newlib-csl-coldfire-4_1-30:1.1
	newlib-csl-sourcerygxx-4_1-30:1.1
	newlib-csl-coldfire-4_1-28:1.1
	newlib-csl-sourcerygxx-4_1-28:1.1
	newlib-csl-arm-2006q3-27:1.1
	newlib-csl-sourcerygxx-4_1-27:1.1
	newlib-csl-arm-2006q3-26:1.1
	newlib-csl-sourcerygxx-4_1-26:1.1
	newlib-csl-sourcerygxx-4_1-24:1.1
	newlib-csl-sourcerygxx-4_1-23:1.1
	newlib-csl-sourcerygxx-4_1-21:1.1
	newlib-csl-arm-2006q3-21:1.1
	newlib-csl-arm-2006q3-19:1.1
	newlib-csl-sourcerygxx-4_1-19:1.1
	newlib-csl-sourcerygxx-4_1-18:1.1
	newlib-csl-sourcerygxx-3_4_4-25:1.1
	newlib-csl-sourcerygxx-4_1-17:1.1
	newlib-csl-sourcerygxx-4_1-14:1.1
	newlib-csl-sourcerygxx-4_1-13:1.1
	newlib-csl-sourcerygxx-4_1-12:1.1
	newlib-csl-sourcerygxx-4_1-9:1.1
	newlib-csl-sourcerygxx-4_1-8:1.1
	newlib-csl-sourcerygxx-4_1-7:1.1
	newlib-csl-arm-2006q1-6:1.1
	newlib-csl-sourcerygxx-4_1-6:1.1
	newlib-csl-sourcerygxx-4_1-5:1.1
	newlib-csl-sourcerygxx-4_1-4:1.1
	newlib-autotools-branch:1.1.0.4
	newlib-csl-20060320-branch:1.1.0.2
	newlib-csl-20060320-branchpoint:1.1
	newlib-1_14_0:1.1
	newlib-csl-arm-2005-q1b:1.1
	newlib-csl-arm-2005-q1a:1.1
	newlib-1_13_0:1.1
	csl-arm-2004-q3:1.1
	csl-arm-2004-q1a:1.1
	csl-arm-2004-q1:1.1
	newlib-1_12_0:1.1
	csl-arm-2003-q4:1.1
	newlib-1_11_0:1.1
	cygnus_cvs_20020108_pre:1.1
	newlib-1_10_0:1.1;
locks; strict;
comment	@# @;


1.1
date	2001.02.28.18.41.57;	author jjohnstn;	state Exp;
branches;
next	;


desc
@@


1.1
log
@
2001-02-28  Will Cohen  <wcohen@@redhat.com>

        * src/libgloss/m68k/Makefile.in: Updated copyright and
         added rules to build simulator related libraries.
        (SIM_SCRIPTS): New variable.
        (SIM_LDFLAGS): New variable.
        (SIM_BSP): New variable.
        (SIM_CRT0): New variable.
        (SIM_OBJS): New variable.
        (SIM_TEST): New variable.
        (SIM_INSTALL): new variable.
        * src/libgloss/m68k/sim-abort.c: New file.
        * src/libgloss/m68k/sim-crt0.S: New file.
        * src/libgloss/m68k/sim-errno.c: New file.
        * src/libgloss/m68k/sim-funcs.c: New file.
        * src/libgloss/m68k/sim-inbyte.c: New file.
        * src/libgloss/m68k/sim-print.c: New file.
        * src/libgloss/m68k/sim-sbrk.c: New file.
        * src/libgloss/m68k/sim.ld: New file.
        * src/libgloss/m68k/simulator.S: New file.
@
text
@/*
 * simulator.S -- m68k simulator system calls.
 *
 * Copyright (c) 1995, 2001 Cygnus Support
 *
 * The authors hereby grant permission to use, copy, modify, distribute,
 * and license this software and its documentation for any purpose, provided
 * that existing copyright notices are retained in all copies and that this
 * notice is included verbatim in any distributions. No written agreement,
 * license, or royalty fee is required for any of the authorized uses.
 * Modifications to this software may be copyrighted by their authors
 * and need not follow the licensing terms described here, provided that
 * the new terms are clearly indicated on the first page of each file where
 * they apply.
 */

#include "asm.h"

#define SYSCALL(x) .word 0x4afc, x

#define FUNC_START(x) .globl x; x:
#define FUNC_END(x)
#define FUNC_NAME(x) SYM(x)

FUNC_START(_exit)
	SYSCALL(1)

/*
 * Insure that the debugger tells the client that the PC is in _exit,
 * not whatever function happens to follow this function.
 */

0:	nop
	jmp	0b			/* we never should return, but... */

FUNC_END(_exit)

FUNC_START(read)
	SYSCALL(3)
	bcs	FUNC_NAME(_cerror)
	rts
FUNC_END(read)

FUNC_START(write)
	SYSCALL(4)
	bcs	FUNC_NAME(_cerror)
	rts
FUNC_END(write)

FUNC_START(open)
	SYSCALL(5)
	bcs	FUNC_NAME(_cerror)
	rts
FUNC_END(open)

FUNC_START(close)
	SYSCALL(6)
	bcs	FUNC_NAME(_cerror)
	rts
FUNC_END(close)

FUNC_START(brk)
	SYSCALL(17)
	bcs	FUNC_NAME(_cerror)
	rts
FUNC_END(brk)

FUNC_START(lseek)
	SYSCALL(199)
	bcs	FUNC_NAME(_cerror)
	rts
FUNC_END(lseek)

FUNC_START(fstat)
	SYSCALL(28)
	bcs	FUNC_NAME(_cerror)
	rts
FUNC_END(lseek)

FUNC_START(isatty)
	SYSCALL(29)
	bcs	FUNC_NAME(_cerror)
	rts
FUNC_END(isatty)
@
