head	1.5;
access;
symbols
	newlib-2_2_0:1.5.0.6
	newlib-2_1_0:1.5
	newlib-2_0_0:1.5
	newlib-1_20_0:1.5
	newlib-1_19_0:1.5
	newlib-1_18_0:1.5
	newlib-1_17_0-arc:1.5.0.4
	binutils-arc-20080908-branch:1.5.0.2
	binutils-arc-20080908-branchpoint:1.5
	newlib-1_17_0:1.5
	newlib-1_16_0:1.5
	newlib-1_15_0:1.3
	newlib-csl-coldfire-4_1-32:1.1.2.8
	newlib-csl-sourcerygxx-4_1-32:1.1.2.8
	newlib-csl-innovasic-fido-3_4_4-33:1.1.2.8
	newlib-csl-coldfire-4_1-30:1.1.2.8
	newlib-csl-sourcerygxx-4_1-30:1.1.2.8
	newlib-csl-coldfire-4_1-28:1.1.2.8
	newlib-csl-sourcerygxx-4_1-28:1.1.2.8
	newlib-csl-arm-2006q3-27:1.1.2.8
	newlib-csl-sourcerygxx-4_1-27:1.1.2.8
	newlib-csl-arm-2006q3-26:1.1.2.8
	newlib-csl-sourcerygxx-4_1-26:1.1.2.8
	newlib-csl-sourcerygxx-4_1-24:1.1.2.6
	newlib-csl-sourcerygxx-4_1-23:1.1.2.5
	newlib-csl-sourcerygxx-4_1-21:1.1.2.5
	newlib-csl-arm-2006q3-21:1.1.2.5
	newlib-csl-arm-2006q3-19:1.1.2.5
	newlib-csl-sourcerygxx-4_1-19:1.1.2.5
	newlib-csl-sourcerygxx-4_1-18:1.1.2.5
	newlib-csl-sourcerygxx-4_1-17:1.1.2.3
	newlib-csl-sourcerygxx-4_1-14:1.1.2.2
	newlib-csl-sourcerygxx-4_1-13:1.1.2.2
	newlib-csl-sourcerygxx-4_1-12:1.1.2.2
	newlib-csl-sourcerygxx-4_1-9:1.1.2.2
	newlib-csl-sourcerygxx-4_1-8:1.1.2.2
	newlib-csl-sourcerygxx-4_1-7:1.1.2.2
	newlib-csl-arm-2006q1-6:1.1.2.2
	newlib-csl-sourcerygxx-4_1-6:1.1.2.2
	newlib-csl-sourcerygxx-4_1-5:1.1.2.2
	newlib-csl-sourcerygxx-4_1-4:1.1.2.2
	newlib-csl-20060320-branch:1.1.0.2;
locks; strict;
comment	@# @;


1.5
date	2007.05.30.18.33.56;	author kazu;	state Exp;
branches;
next	1.4;

1.4
date	2007.01.04.18.05.56;	author jjohnstn;	state Exp;
branches;
next	1.3;

1.3
date	2006.12.11.19.58.01;	author jjohnstn;	state Exp;
branches;
next	1.2;

1.2
date	2006.09.01.05.41.06;	author kazu;	state Exp;
branches;
next	1.1;

1.1
date	2006.03.29.07.03.19;	author nathan;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2006.03.29.07.03.19;	author nathan;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2006.03.29.09.08.37;	author nathan;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2006.07.24.16.49.07;	author nathan;	state Exp;
branches;
next	1.1.2.4;

1.1.2.4
date	2006.08.25.11.55.48;	author nathan;	state Exp;
branches;
next	1.1.2.5;

1.1.2.5
date	2006.09.01.17.00.14;	author nathan;	state Exp;
branches;
next	1.1.2.6;

1.1.2.6
date	2006.10.07.20.08.48;	author nathan;	state Exp;
branches;
next	1.1.2.7;

1.1.2.7
date	2006.10.20.14.06.46;	author vprus;	state Exp;
branches;
next	1.1.2.8;

1.1.2.8
date	2006.10.23.19.28.29;	author nathan;	state Exp;
branches;
next	1.1.2.9;

1.1.2.9
date	2006.12.22.07.47.30;	author nathan;	state Exp;
branches;
next	;


desc
@@


1.5
log
@	* m68k/cf-crt1.C, m68k/cf.sc, m68k/fido.sc, m68k/fido-crt0.S:
	Replace __INIT_SECTION__ and __FINI_SECTION__ with _init and
	_fini, respectively.
@
text
@# a linker script template.
# RAM - start of board's ram
# RAM_SIZE - size of board's ram
# ROM - start of board's rom
# ROM_SIZE - size of board's rom
# IO - io library name

test -z "${ROM:+1}" && NOROM=1

cat <<EOF
STARTUP(cf-${IO}-crt0.o)
OUTPUT_ARCH(m68k)
ENTRY(__start)
SEARCH_DIR(.)
GROUP(-lc -l${IO} -lcf)
__DYNAMIC  =  0;

MEMORY
{
  ${ROM:+rom (rx) : ORIGIN = ${ROM}, LENGTH = ${ROM_SIZE}}
  ram (rwx) : ORIGIN = ${RAM}, LENGTH = ${RAM_SIZE}
}

/* Place the stack at the end of memory, unless specified otherwise. */
PROVIDE (__stack = ${RAM} + ${RAM_SIZE});

SECTIONS
{
  .text :
  {
    CREATE_OBJECT_SYMBOLS
    *(.interrupt_vector)
    
    cf-${IO}-crt0.o(.text)
    *(.text .text.*)
    *(.gnu.linkonce.t.*)

    . = ALIGN(0x4);
    /* These are for running static constructors and destructors under ELF.  */
    KEEP (*crtbegin.o(.ctors))
    KEEP (*(EXCLUDE_FILE (*crtend.o) .ctors))
    KEEP (*(SORT(.ctors.*)))
    KEEP (*crtend.o(.ctors))
    KEEP (*crtbegin.o(.dtors))
    KEEP (*(EXCLUDE_FILE (*crtend.o) .dtors))
    KEEP (*(SORT(.dtors.*)))
    KEEP (*crtend.o(.dtors))

    . = ALIGN(0x4);
    KEEP (*crtbegin.o(.jcr))
    KEEP (*(EXCLUDE_FILE (*crtend.o) .jcr))
    KEEP (*crtend.o(.jcr))

    *(.rodata .rodata.*)
    *(.gnu.linkonce.r.*)

    . = ALIGN(0x4);
    *(.gcc_except_table) 

    . = ALIGN(0x4);
    *(.eh_frame)

    . = ALIGN(0x4);
    _init = . ;
    LONG (0x4e560000)	/* linkw %fp,#0 */
    *(.init)
    SHORT (0x4e5e)	/* unlk %fp */
    SHORT (0x4e75)	/* rts */

    . = ALIGN(0x4);
    _fini = . ;
    LONG (0x4e560000)	/* linkw %fp,#0 */
    *(.fini)
    SHORT (0x4e5e)	/* unlk %fp */
    SHORT (0x4e75)	/* rts */

    *(.lit)

    . = ALIGN(4);
    _etext = .;
  } >${ROM:+rom}${NOROM:+ram}

  .data :
  {
    __data_load = LOADADDR (.data);
    __data_start = .;
    *(.got.plt) *(.got)
    *(.shdata)
    *(.data .data.*)
    *(.gnu.linkonce.d.*)
    . = ALIGN (4);
    _edata = .;
  } >ram ${ROM:+AT>rom}

  .bss :
  {
    __bss_start = . ;
    *(.shbss)
    *(.bss .bss.*)
    *(.gnu.linkonce.b.*)
    *(COMMON)
    . = ALIGN (8);
    _end = .;
    __end = _end;
  } >ram ${ROM:+AT>rom}

  .stab 0 (NOLOAD) :
  {
    *(.stab)
  }

  .stabstr 0 (NOLOAD) :
  {
    *(.stabstr)
  }

  /* DWARF debug sections.
     Symbols in the DWARF debugging sections are relative to the beginning
     of the section so we begin them at 0.  */
  /* DWARF 1 */
  .debug          0 : { *(.debug) }
  .line           0 : { *(.line) }
  /* GNU DWARF 1 extensions */
  .debug_srcinfo  0 : { *(.debug_srcinfo) }
  .debug_sfnames  0 : { *(.debug_sfnames) }
  /* DWARF 1.1 and DWARF 2 */
  .debug_aranges  0 : { *(.debug_aranges) }
  .debug_pubnames 0 : { *(.debug_pubnames) }
  /* DWARF 2 */
  .debug_info     0 : { *(.debug_info .gnu.linkonce.wi.*) }
  .debug_abbrev   0 : { *(.debug_abbrev) }
  .debug_line     0 : { *(.debug_line) }
  .debug_frame    0 : { *(.debug_frame) }
  .debug_str      0 : { *(.debug_str) }
  .debug_loc      0 : { *(.debug_loc) }
  .debug_macinfo  0 : { *(.debug_macinfo) }

}
EOF
@


1.4
log
@
2007-01-04  Kazu Hirata  <kazu@@codesourcery.com>

        Merge from newlib-csl-20060320-branch:
        2006-12-22  Nathan Sidwell  <nathan@@codesourcery.com>

        libgloss/
        * m68k/Makefile.in (CF_ISRS): Remove now shared routines.
        * m68k/cf-crt0.S (__reset): Define here.
        * m68k/cf-isrs.c: Share some ISRS.  Add aliases for each IRQ slot.
        * m68k/cf-isv.S: Move to .interrupt_vector section.  Make each
        slot a unique routine.
        * m68k/cf.sc: Adjust for .interrupt_vector section.

        libgloss/
        * m68k/Makefile.in (m5273c3): Rename to ...
        (m5272c3): ... here to fix typo.
        (m5249c3): New.
        (CF_BOARDS): Add it.
@
text
@d64 1
a64 1
    __INIT_SECTION__ = . ;
d71 1
a71 1
    __FINI_SECTION__ = . ;
@


1.3
log
@
2006-12-11 Kazu Hirata <kazu@@codesourcery.com>

	Merge from newlib-csl-20060320-branch:
	2006-12-01  Nathan Sidwell  <nathan@@codesourcery.com>
		    Kazu Hirata  <kazu@@codesourcery.com>

	* m68k/Makefile.in (CF_ISRS): Use addprefix.

	2006-11-01 Nathan Sidwell <nathan@@codesourcery.com>

	* m68k/Makefile.in (CFLAGS): Do not clear.  Add to all compilations.
	(ARFLAGS): Remove commented out definition.


	* m68k/configure.in (DO) Set to list of target cpu families.
	* m68k/configure: Rebuilt.
	* m68k/Makefile.in (DO): New.
	(UNHOSTED_BSP, UNHOSTED_OBJS, HOSTED_BSP, HOSTED_OBJS): Move
	later.
	(m5208evb, m5213evb, m52235evb, m5235evb, m5273c3, m5275evb,
	m5282evb, m5329evb, m5485evb): Move earlier.
	(all): Add all_$DO dependencies.
	(all_cf, all_m68k): New targets, depend on cf & m68k bsps as
	appropriate.
	(m%-ram.ld, m%-rom.ld, m%-ram-hosted.ld, m%-rom-hosted.ld): Add
	'm' prefix.
	(install): Add install_$DO dependencies.
	(install_cf, install_m68k): New targets.  Perform cf and m68k
	installs as appropriate.
	(install_io): New, install the io libraries.


	2006-10-23 Nathan Sidwell <nathan@@codesourcery.com>

	* m68k/Makefile.in (CF_CRT0): Rename to CF_CRT0S, separate hosted
	& unhosted versions.
	(CF_OBJS): Add cf-isv.o.
	(CF_SOURCES): Add cf-isv.S.
	(cf-hosted-crt0.o, cf-unhosted-crt0.o): New targets.
	* m68k/cf-isv.S: New, broken out of ...
	* m68k/cf-crt0.S: ... here.  Add HOSTED & UNHOSTED differences.
	* m68k/cf-crt1.c (__start1): Add heap_limit argument.
	(__heap_limit): Define.
	* m68k/cf-sbrk.c (__heap_limit): Declare.
	(sbrk): Adjust for __heap_limit.
	* m68k/cf.sc: Use different crt0's for hosted & unhosted.
	Install a separate isv.o file.
	* m68k/io.h (HOSTED_PUTCHAR): Replace with ...
	(HOSTED_INIT_SIM): ... this.


	2006-10-20 Nathan Sidwell <nathan@@codesourcery.com>

	* m68k/Makefile.in (CF_BOARDS): Add m5275evb.
	(m5275evb): New board.


	2006-10-20 Vladimir Prus <vladimir@@codesourcery.com>

	* m68k/cf.sc: Add linkonce sections and
	DWARF sections.


	2006-10-07 Nathan Sidwell <nathan@@codesourcery.com>

	* m68k/Makefile.in: Adjust Coldfire rules.
	(BDM_CRT0, BDM_BSP, BDM_OBJS, BDM_ISRS): Rename	to ...
	(CF_CRT0, CF_BSP, CF_OBJS, CF_ISRS): ... here.  Adjust.
	(BDM_OTHER_OBJS): Remove.
	(BDM_SYSOBJS): Rename to ...
	(UNHOSTED_OBJS): ... here.  Adjust.
	(UNHOSTED_BSP, HOSTED_OBJS, HOSTED_BSP): New.
	(CF_HOSTED_SCRIPTS): New.
	(CF_SCRIPTS, CF_SOURCES): Adjust.
	* m68k/cf.sc: Add IO library variable.
	* m68k/bdm-crt0.S, m68k/bdm-crt1.c, m68k/bdm-isrs.c,
	m68k/bdm-sbrk.c, m68k/bdm-semihost.S: Rename to ...
	* m68k/cf-crt0.S, m68k/cf-crt1.c, m68k/cf-isrs.c, m68k/cf-sbrk.c,
	m68k/cf-hosted.S: ... here.
	* m68k/cf-exit.c: New.
	* m68k/bdm-gdb.h, m68k/bdm-semihost.h: Merge into ...
	* m68k/io.h: ... here.  Add unhosted support.  Adjust conversion
	function names.
	* m68k/bdm-gdb.c: Rename to ...
	* m68k/io-gdb.c: ... here.  Adjust names of conversion functions.
	* m68k/bdm-close.c, m68k/bdm-exit.c, m68k/bdm-fstat.c,
	m68k/bdm-gettimeofday.c, m68k/bdm-isatty.c, m68k/bdm-lseek.c,
	m68k/bdm-open.c, m68k/bdm-read.c, m68k/bdm-rename.c,
	m68k/bdm-stat.c, m68k/bdm-system.c, m68k/bdm-time.c,
	m68k/bdm-unlink.c, m68k/bdm-write.c: Rename to ...
	* m68k/io-close.c, m68k/io-exit.c, m68k/io-fstat.c,
	m68k/io-gettimeofday.c, m68k/io-isatty.c, m68k/io-lseek.c,
	m68k/io-open.c, m68k/io-read.c, m68k/io-rename.c, m68k/io-stat.c,
	m68k/io-system.c, m68k/io-time.c, m68k/io-unlink.c,
	m68k/io-write.c: ... here.  Include io.h. Adjust for hosted &
	unhosted libraries.  Adjust names of gdb conversion functions.


	2006-09-29 Nathan Sidwell <nathan@@codesourcery.com>

	* m68k/bdm-semihost.S: Add more comments. Make instruction weirder.

	2006-09-22 Nathan Sidwell <nathan@@codesourcery.com>

	* m68k/bdm-crt1.c (hardware_init_hook): Use #defines for CACR bits.

	2006-09-18 Nathan Sidwell <nathan@@codesourcery.com>

	* m68k/Makefile.in: Don't force a frame pointer on the ISRs.
	* m68k/bdm-crt1.c (__start1): Don't set the VBR here.
	(hardeare_init_hook): Define weakly.  Set VBR here, enable caching
	if supported.


	* m68k/Makefile.in (bdm-semihost.o): Build from bdm-semihost.S.
	* m68k/bdm-semihost.c: Remove.
	* m68k/bdm-semihost.S: New.
	* m68k/bdm-crt0.S: Don't install semihosting trap handler.
	* m68k/bdm-close.c, bdm-exit.c, bdm-fstat.c, bdm-gettimeofday.c,
	bdm-isatty.c, bdm-lseek.c, bdm-open.c, bdm-read.c, bdm-rename.c,
	bdm-stat.c, bdm-system.c, bdm-unlink.c, bdm-write.c): Update.
	* m68k/bdm-isrs.c: Update comment.
	* m68k/bdm-semihost.h (BDM_TRAPNUM, BDM_FUNC_REG, BDM_ARG_REG,
	BDM_TRAP): Remove.
	(__bdm_semihost): Declare.


	2006-09-15 Nathan Sidwell <nathan@@codesourcery.com>

	* m68k/Makefile.in (BDM_OTHER_OBJS): Remove sbrk.o.
	(BDM_SYSOBJS): Add bdm-sbrk.o.
	* m68k/bdm-sbrk.c: New.


	2006-09-06 Nathan Sidwell <nathan@@codesourcery.com>

	* m68k/Makefile.in (CF_SOURCES): New.
	(install): Install them.


	2006-09-01 Nathan Sidwell <nathan@@codesourcery.com>

	* m68k/cf.sc: Add .jcr section to .text.
@
text
@d32 2
a33 1
    KEEP (*cf-isv.o(.text))
@


1.2
log
@libgloss/
	Merge from newlib-csl-20060320-branch:
	2006-08-31  Nathan Sidwell  <nathan@@codesourcery.com>

	* m68k/bdm-crt1.c: Call hardware_init_hook before copying
	initialized data.

	* m68k/Makefile.in (CF_BDM_SCRIPTS): Rename to CF_RAM_SCRIPTS.
	(CF_SCRIPTS): Update.
	(%-bdm.ld): Rename to %-ram.ld.

	2006-08-25  Nathan Sidwell  <nathan@@codesourcery.com>

	* m68k/Makefile.in (DBUG_BSP, DBUG_OBJS): Remove.
	(BDM_CRT0): New.
	(BDM_OBJS): Add bdm-crt1.o.
	(BDM_OTHER_OBJS): Remove print.o putnum.o
	(CF_BOARDS): New.
	(CF_BDM_SCRIPTS): Generated name of ram scripts.
	(CF_ROM_SCRIPTS): Generated name of rom scripts.
	(CF_SCRIPTS): Adjust.
	(all): Add BDM_CRT0.
	(bdm-crt0.o, bdm-crt1.o): New targets.
	(bdm-isv.o): Remove.
	(m5208evb, m5213evb, m52235evb, m5235evb, m5273c3, m5282evb,
	m5329evb, m5485evb): New.
	(%-bdm.ld, %-rom.ld): New. Replace individual linker script rules.
	(install): Remove DBUG installs.
	* m68k/bdm-crt0.S: New.
	* m68k/bdm-crt1.c: New.
	* m68k/bdm-exit.c: Call __reset.
	* m68k/bdm-isv.c: Remove.
	* m68k/cf.sc: Adjust to produce either rom or ram images.
	* m68k/dbug-exit.S, m68k/dbug-inbyte.S, m68k/dbug-outbyte.S: Remove.

	2006-07-24  Nathan Sidwell  <nathan@@codesourcery.com>

	Bug 844
	* m68k/cf.sc: Set entry point to _start.
	* m68k/crt0.X (_start): New name for entrypoint
	(start): Weak alias for start.

	2006-06-09  Nathan Sidwell  <nathan@@codesourcery.com>

	* m68k/bdm-system.c (_system): Support system(NULL).

	2006-06-08  Nathan Sidwell  <nathan@@codesourcery.com>

	* m68k/bdm-system.c (_system): Properly encode non failure exit
	code.

	2006-06-05  Nathan Sidwell  <nathan@@codesourcery.com>

	* m68k/Makefile.in (BDM_SYSOBJS): Remove bdm-inbyte.o.
	Add bdm-time.o.
	* m68k/bdm-close.c: Add copyright notice.
	* m68k/bdm-fstat.c: Add copyright notice.
	* m68k/bdm-gettimeofday.c: Add copyright notice.
	* m68k/bdm-inbyte.c: Remove.
	* m68k/bdm-isatty.c: Add copyright notice.
	* m68k/bdm-lseek.c: Add copyright notice. Fix &/| thinko.
	* m68k/bdm-open.c: Add copyright notice.
	* m68k/bdm-read.c: Add copyright notice.
	* m68k/bdm-rename.c: Add copyright notice.
	* m68k/bdm-stat.c: Add copyright notice.
	* m68k/bdm-system.c: Add copyright notice.
	* m68k/bdm-time.c: New.
	* m68k/bdm-unlink.c: Add copyright notice.
	* m68k/bdm-write.c: Add copyright notice.

	2006-05-25  Nathan Sidwell  <nathan@@codesourcery.com>

	* m68k/Makefile.in (m52235-dbug.ld, m52235-bdm.ld): New
	scripts.

	2006-05-24  Nathan Sidwell  <nathan@@codesourcery.com>

	* m68k/Makefile.in (BDM_SYSOBJS): Remove bdm-outbyte.o.
	* m68k/bdm-outbyte.c: Delete.
	* m68k/bdm-semihost.h (BDM_OUTBYTE): Mark as obsolete.

	2006-05-22  Sandra Loosemore <sandra@@codesourcery.com>

	* m68k/bdm-semihost.h: Add new constants for additional
	semihosting functions.  Add new BDM_TRAP macro to encapsulate
	inline asm.
	* m68k/bdm-exit.c (_exit): Use new BDM_TRAP macro.
	* m68k/bdm-outbyte.c (outbyte): Ditto.
	* m68k/bdm-isrs.c, m68k/bdm-isv.c: Former BDM_TRAP
	now called BDM_TRAPNUM.
	* m68k/bdm-gdb.h, m68k/bdm-gdb.c: New files
	containing declarations and conversion functions for GDB's fileio
	protocol.
	* m68k/bdm-close.c: New file to define corresponding function.
	* m68k/bdm-fstat.c: Ditto.
	* m68k/bdm-gettimeofday.c: Ditto.
	* m68k/bdm-isatty.c: Ditto.
	* m68k/bdm-lseek.c: Ditto.
	* m68k/bdm-open.c: Ditto.
	* m68k/bdm-read.c: Ditto.
	* m68k/bdm-rename.c: Ditto.
	* m68k/bdm-stat.c: Ditto.
	* m68k/bdm-system.c: Ditto.
	* m68k/bdm-unlink.c: Ditto.
	* m68k/bdm-write.c Ditto.
	* m68k/Makefile.in: Add dependencies for new files.

	2006-03-29  Nathan Sidwell  <nathan@@codesourcery.com>

	* m68k/bdm-isv.c (software_init_hook): Fix trap numbering.

	* m68k/Makefile.in (CF_SCRIPTS): Add m5329 board.
	Reorder.
	(*-dbug.ld, *-bdm.ld): Add appropriate IO definition.
	(m5329evb-dbug.ld, m5329evb-bdm.ld): New.
	* cf.sc (GROUP): Revert previous change.  Add IO library.

	* m68k/Makefile.in (BDM_BSP, BDM_OBJS, BDM_ISRS): New.
	(CF_SCRIPTS): Rename dbug scripts.  Add bdm scripts. Add m5485
	scripts.
	(all): Add new targets.
	(BDM_BSP): New target.
	(bdm-isv.o, bdm-exit.o, bdm-outbyte.o, bdm-semihost.o): New
	targets.
	(BDM_ISRS): New targets.
	(m5208evb.ld, m5213evb.ld, m5235evb.ld, m5272c3.ld, m5282evb.ld):
	Rename and adjust.
	(m5485evb-dbug): New.
	(m5208evb-bdm.ld, m5213evb-bdm.ld, m5235evb-bdm.ld,
	m5272c3-bdm.ld, m5282evb-bdm.ld, m5485evb-bdm.ld): New.
	(install): Add BDM_BSP.
	* m68k/bdm-exit.c: New
	* m68k/bdm-inbyte.c: New
	* m68k/bdm-outbyte.c: New
	* m68k/bdm-semihost.c: New
	* m68k/bdm-semihost.h: New
	* m68k/bdm-isrs.c: New.
	* m68k/bdm-isv.c: New.
	* dbug-cf.sc: Renamed to ...
	* cf.sc: ... here.  Add bdm flexibility. Remove GROUP

	2006-05-22  Sandra Loosemore <sandra@@codesourcery.com>

	* m68k/bdm-semihost.h: Add new constants for additional
	semihosting functions.  Add new BDM_TRAP macro to encapsulate
	inline asm.
	* m68k/bdm-exit.c (_exit): Use new BDM_TRAP macro.
	* m68k/bdm-outbyte.c (outbyte): Ditto.
	* m68k/bdm-isrs.c, m68k/bdm-isv.c: Former BDM_TRAP
	now called BDM_TRAPNUM.
	* m68k/bdm-gdb.h, m68k/bdm-gdb.c: New files
	containing declarations and conversion functions for GDB's fileio
	protocol.
	* m68k/bdm-close.c: New file to define corresponding function.
	* m68k/bdm-fstat.c: Ditto.
	* m68k/bdm-gettimeofday.c: Ditto.
	* m68k/bdm-isatty.c: Ditto.
	* m68k/bdm-lseek.c: Ditto.
	* m68k/bdm-open.c: Ditto.
	* m68k/bdm-read.c: Ditto.
	* m68k/bdm-rename.c: Ditto.
	* m68k/bdm-stat.c: Ditto.
	* m68k/bdm-system.c: Ditto.
	* m68k/bdm-unlink.c: Ditto.
	* m68k/bdm-write.c Ditto.
	* m68k/Makefile.in: Add dependencies for new files.

newlib/
	Merge from newlib-csl-20060320-branch:
	2006-05-22  Sandra Loosemore <sandra@@codesourcery.com>

	* configure.host: Tell it we have _rename and _system when
	building m68k-unknown-elf.
@
text
@d6 1
d11 1
a11 1
STARTUP(bdm-crt0.o)
d15 1
a15 1
GROUP(-lc -lbdm)
d32 2
a33 1
    bdm-crt0.o(.text)
d35 1
d48 5
d54 1
d89 1
d99 1
d115 22
@


1.1
log
@file cf.sc was initially added on branch newlib-csl-20060320-branch.
@
text
@d1 105
@


1.1.2.1
log
@	* libgloss/m68k/Makefile.in (BDM_BSP, BDM_OBJS, BDM_ISRS): New.
	(CF_SCRIPTS): Rename dbug scripts.  Add bdm scripts. Add m5485
	scripts.
	(all): Add new targets.
	(BDM_BSP): New target.
	(bdm-isv.o, bdm-exit.o, bdm-outbyte.o, bdm-semihost.o): New
	targets.
	(BDM_ISRS): New targets.
	(m5208evb.ld, m5213evb.ld, m5235evb.ld, m5272c3.ld, m5282evb.ld):
	Rename and adjust.
	(m5485evb-dbug): New.
	(m5208evb-bdm.ld, m5213evb-bdm.ld, m5235evb-bdm.ld,
	m5272c3-bdm.ld, m5282evb-bdm.ld, m5485evb-bdm.ld): New.
	(install): Add BDM_BSP.
	* libgloss/m68k/bdm-exit.c: New
	* libgloss/m68k/bdm-inbyte.c: New
	* libgloss/m68k/bdm-outbyte.c: New
	* libgloss/m68k/bdm-semihost.c: New
	* libgloss/m68k/bdm-semihost.h: New
	* libgloss/m68k/bdm-isrs.c: New.
	* libgloss/m68k/bdm-isv.c: New.
	* cf-dbug.sc: Renamed to ...
	* cf.sc: ... here.  Add bdm flexibility. Remove GROUP
@
text
@a0 110
# a linker script template.
# RAMSTART - start of board's ram
# RAMSIZE - size of board's ram
# RAMDBUG - bytes at start of RAM for DBUG use
# ISV - nonnull if interrupt service vector should be provided.

cat <<EOF
STARTUP(crt0.o)
OUTPUT_ARCH(m68k)
ENTRY(start)
SEARCH_DIR(.)
__DYNAMIC  =  0;

MEMORY
{
  ram (rwx) : ORIGIN = ${RAMSTART} + ${RAMDBUG:-0},
		 LENGTH = ${RAMSIZE} - ${RAMDBUG:-0}
}

/* Place the stack at the end of memory, unless specified otherwise. */
PROVIDE (__stack = ${RAMSTART} + ${RAMSIZE});

/* Inhibit an interrupt vector, if one is not specified.  */
PROVIDE (__interrupt_vector = -1);

/*
 * Initalize some symbols to be zero so we can reference them in the
 * crt0 without core dumping. These functions are all optional, but
 * we do this so we can have our crt0 always use them if they exist. 
 */
PROVIDE (hardware_init_hook = 0);
PROVIDE (software_init_hook = 0);
/*
 * stick everything in ram (of course)
 */
SECTIONS
{
  .text :
  {
    CREATE_OBJECT_SYMBOLS
    ${ISV+__interrupt_vector = .; . += 256 * 4;}
    *(.text .text.*)

    . = ALIGN(0x4);
    /* These are for running static constructors and destructors under ELF.  */
    KEEP (*crtbegin.o(.ctors))
    KEEP (*(EXCLUDE_FILE (*crtend.o) .ctors))
    KEEP (*(SORT(.ctors.*)))
    KEEP (*(.ctors))
    KEEP (*crtbegin.o(.dtors))
    KEEP (*(EXCLUDE_FILE (*crtend.o) .dtors))
    KEEP (*(SORT(.dtors.*)))
    KEEP (*(.dtors))

    *(.rodata .rodata.*)

    . = ALIGN(0x4);
    *(.gcc_except_table) 

    . = ALIGN(0x4);
    *(.eh_frame)

    . = ALIGN(0x4);
    __INIT_SECTION__ = . ;
    LONG (0x4e560000)	/* linkw %fp,#0 */
    *(.init)
    SHORT (0x4e5e)	/* unlk %fp */
    SHORT (0x4e75)	/* rts */

    . = ALIGN(0x4);
    __FINI_SECTION__ = . ;
    LONG (0x4e560000)	/* linkw %fp,#0 */
    *(.fini)
    SHORT (0x4e5e)	/* unlk %fp */
    SHORT (0x4e75)	/* rts */

    _etext = .;
    *(.lit)
  } > ram

  .data :
  {
    *(.got.plt) *(.got)
    *(.shdata)
    *(.data .data.*)
    _edata = .;
  } > ram

  .bss :
  {
    . = ALIGN(0x4);
    __bss_start = . ;
    *(.shbss)
    *(.bss .bss.*)
    *(COMMON)
    _end =  ALIGN (0x8);
    __end = _end;
  } > ram

  .stab 0 (NOLOAD) :
  {
    *(.stab)
  }

  .stabstr 0 (NOLOAD) :
  {
    *(.stabstr)
  }
}
EOF
@


1.1.2.2
log
@	* libgloss/m68k/Makefile.in (CF_SCRIPTS): Add m5329 board.
	Reorder.
	(*-dbug.ld, *-bdm.ld): Add appropriate IO definition.
	(m5329evb-dbug.ld, m5329evb-bdm.ld): New.
	* cf.sc (GROUP): Revert previous change.  Add IO library.
@
text
@a5 1
# IO - io library
a11 1
GROUP(-lc -l${IO})
@


1.1.2.3
log
@	libgloss/
	* m68k/cf.sc: Set entry point to _start.
	* m68k/crt0.X (_start): New name for entrypoint
	(start): Weak alias for start.
@
text
@d11 1
a11 1
ENTRY(_start)
@


1.1.2.4
log
@	libgloss/
	* m68k/Makefile.in (DBUG_BSP, DBUG_OBJS): Remove.
	(BDM_CRT0): New.
	(BDM_OBJS): Add bdm-crt1.o.
	(BDM_OTHER_OBJS): Remove print.o putnum.o
	(CF_BOARDS): New.
	(CF_BDM_SCRIPTS): Generated name of ram scripts.
	(CF_ROM_SCRIPTS): Generated name of rom scripts.
	(CF_SCRIPTS): Adjust.
	(all): Add BDM_CRT0.
	(bdm-crt0.o, bdm-crt1.o): New targets.
	(bdm-isv.o): Remove.
	(m5208evb, m5213evb, m52235evb, m5235evb, m5273c3, m5282evb,
	m5329evb, m5485evb): New.
	(%-bdm.ld, %-rom.ld): New. Replace individual linker script rules.
	(install): Remove DBUG installs.
	* m68k/bdm-crt0.S: New.
	* m68k/bdm-crt1.c: New.
	* m68k/bdm-exit.c: Call __reset.
	* m68k/bdm-isv.c: Remove.
	* m68k/cf.sc: Adjust to produce either rom or ram images.
	* m68k/dbug-exit.S, m68k/dbug-inbyte.S, m68k/dbug-outbyte.S: Remove.
@
text
@d2 5
a6 6
# RAM - start of board's ram
# RAM_SIZE - size of board's ram
# ROM - start of board's rom
# ROM_SIZE - size of board's rom

test -z "${ROM:+1}" && NOROM=1
d9 1
a9 1
STARTUP(bdm-crt0.o)
d11 1
a11 1
ENTRY(__start)
d13 1
a13 1
GROUP(-lc -lbdm)
d18 2
a19 2
  ${ROM:+rom (rx) : ORIGIN = ${ROM}, LENGTH = ${ROM_SIZE}}
  ram (rwx) : ORIGIN = ${RAM}, LENGTH = ${RAM_SIZE}
d23 4
a26 1
PROVIDE (__stack = ${RAM} + ${RAM_SIZE});
d28 10
d43 1
a43 1
    bdm-crt0.o(.text)
d51 1
a51 1
    KEEP (*crtend.o(.ctors))
d55 1
a55 1
    KEEP (*crtend.o(.dtors))
d79 1
d81 1
a81 4

    . = ALIGN(4);
    _etext = .;
  } >${ROM:+rom}${NOROM:+ram}
a84 2
    __data_load = LOADADDR (.data);
    __data_start = .;
a87 1
    . = ALIGN (4);
d89 1
a89 1
  } >ram ${ROM:+AT>rom}
d93 1
d98 1
a98 2
    . = ALIGN (8);
    _end = .;
d100 1
a100 1
  } >ram ${ROM:+AT>rom}
@


1.1.2.5
log
@	libgloss/
	* m68k/cf.sc: Add .jcr section to .text.
@
text
@a44 5
    . = ALIGN(0x4);
    KEEP (*crtbegin.o(.jcr))
    KEEP (*(EXCLUDE_FILE (*crtend.o) .jcr))
    KEEP (*crtend.o(.jcr))

@


1.1.2.6
log
@	libgloss/
	* m68k/Makefile.in: Adjust Coldfire rules.
	(BDM_CRT0, BDM_BSP, BDM_OBJS, BDM_ISRS): Rename	to ...
	(CF_CRT0, CF_BSP, CF_OBJS, CF_ISRS): ... here.  Adjust.
	(BDM_OTHER_OBJS): Remove.
	(BDM_SYSOBJS): Rename to ...
	(UNHOSTED_OBJS): ... here.  Adjust.
	(UNHOSTED_BSP, HOSTED_OBJS, HOSTED_BSP): New.
	(CF_HOSTED_SCRIPTS): New.
	(CF_SCRIPTS, CF_SOURCES): Adjust.
	* m68k/cf.sc: Add IO library variable.
	* m68k/bdm-crt0.S, m68k/bdm-crt1.c, m68k/bdm-isrs.c,
	m68k/bdm-sbrk.c, m68k/bdm-semihost.S: Rename to ...
	* m68k/cf-crt0.S, m68k/cf-crt1.c, m68k/cf-isrs.c, m68k/cf-sbrk.c,
	m68k/cf-hosted.S: ... here.
	* m68k/cf-exit.c: New.
	* m68k/bdm-gdb.h, m68k/bdm-semihost.h: Merge into ...
	* m68k/io.h: ... here.  Add unhosted support.  Adjust conversion
	function names.
	* m68k/bdm-gdb.c: Rename to ...
	* m68k/io-gdb.c: ... here.  Adjust names of conversion functions.
	* m68k/bdm-close.c, m68k/bdm-exit.c, m68k/bdm-fstat.c,
	m68k/bdm-gettimeofday.c, m68k/bdm-isatty.c, m68k/bdm-lseek.c,
	m68k/bdm-open.c, m68k/bdm-read.c, m68k/bdm-rename.c,
	m68k/bdm-stat.c, m68k/bdm-system.c, m68k/bdm-time.c,
	m68k/bdm-unlink.c, m68k/bdm-write.c: Rename to ...
	* m68k/io-close.c, m68k/io-exit.c, m68k/io-fstat.c,
	m68k/io-gettimeofday.c, m68k/io-isatty.c, m68k/io-lseek.c,
	m68k/io-open.c, m68k/io-read.c, m68k/io-rename.c, m68k/io-stat.c,
	m68k/io-system.c, m68k/io-time.c, m68k/io-unlink.c,
	m68k/io-write.c: ... here.  Include io.h. Adjust for hosted &
	unhosted libraries.  Adjust names of gdb conversion functions.
@
text
@a5 1
# IO - io library name
d10 1
a10 1
STARTUP(cf-crt0.o)
d14 1
a14 1
GROUP(-lc -l${IO} -lcf)
d31 1
a31 1
    cf-crt0.o(.text)
@


1.1.2.7
log
@       libgloss/
       * m68k/cf.sc: Add linkonce sections and
       DWARF sections.
@
text
@a33 1
    *(.gnu.linkonce.t.*)
a51 1
    *(.gnu.linkonce.r.*)
a85 1
    *(.gnu.linkonce.d.*)
a94 1
    *(.gnu.linkonce.b.*)
a109 22

  /* DWARF debug sections.
     Symbols in the DWARF debugging sections are relative to the beginning
     of the section so we begin them at 0.  */
  /* DWARF 1 */
  .debug          0 : { *(.debug) }
  .line           0 : { *(.line) }
  /* GNU DWARF 1 extensions */
  .debug_srcinfo  0 : { *(.debug_srcinfo) }
  .debug_sfnames  0 : { *(.debug_sfnames) }
  /* DWARF 1.1 and DWARF 2 */
  .debug_aranges  0 : { *(.debug_aranges) }
  .debug_pubnames 0 : { *(.debug_pubnames) }
  /* DWARF 2 */
  .debug_info     0 : { *(.debug_info .gnu.linkonce.wi.*) }
  .debug_abbrev   0 : { *(.debug_abbrev) }
  .debug_line     0 : { *(.debug_line) }
  .debug_frame    0 : { *(.debug_frame) }
  .debug_str      0 : { *(.debug_str) }
  .debug_loc      0 : { *(.debug_loc) }
  .debug_macinfo  0 : { *(.debug_macinfo) }

@


1.1.2.8
log
@	libgloss/
	* m68k/Makefile.in (CF_CRT0): Rename to CF_CRT0S, separate hosted
	& unhosted versions.
	(CF_OBJS): Add cf-isv.o.
	(CF_SOURCES): Add cf-isv.S.
	(cf-hosted-crt0.o, cf-unhosted-crt0.o): New targets.
	* m68k/cf-isv.S: New, broken out of ...
	* m68k/cf-crt0.S: ... here.  Add HOSTED & UNHOSTED differences.
	* m68k/cf-crt1.c (__start1): Add heap_limit argument.
	(__heap_limit): Define.
	* m68k/cf-sbrk.c (__heap_limit): Declare.
	(sbrk): Adjust for __heap_limit.
	* m68k/cf.sc: Use different crt0's for hosted & unhosted.
	Install a separate isv.o file.
	* m68k/io.h (HOSTED_PUTCHAR): Replace with ...
	(HOSTED_INIT_SIM): ... this.
@
text
@d11 1
a11 1
STARTUP(cf-${IO}-crt0.o)
d32 1
a32 2
    KEEP (*cf-isv.o(.text))
    cf-${IO}-crt0.o(.text)
@


1.1.2.9
log
@	libgloss/
	* m68k/Makefile.in (CF_ISRS): Remove now shared routines.
	* m68k/cf-crt0.S (__reset): Define here.
	(__start): Adjust semihosting.
	* m68k/cf-hosted.S (__hosted): Adjust semihosting.
	* m68k/cf-isrs.c: Share some ISRS.  Add aliases for each IRQ slot.
	* m68k/cf-isv.S: Move to .interrupt_vector section.  Make each
	slot a unique routine.
	* m68k/cf.sc: Adjust for .interrupt_vector section.
@
text
@d32 1
a32 2
    *(.interrupt_vector)
    
@


