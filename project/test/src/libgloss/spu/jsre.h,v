head	1.22;
access;
symbols
	newlib-2_2_0:1.22.0.4
	newlib-2_1_0:1.22
	newlib-2_0_0:1.22
	newlib-1_20_0:1.22
	newlib-1_19_0:1.22
	newlib-1_18_0:1.22
	newlib-1_17_0-arc:1.22.0.2
	binutils-arc-20080908-branch:1.21.0.2
	binutils-arc-20080908-branchpoint:1.21
	newlib-1_17_0:1.22
	newlib-1_16_0:1.21
	newlib-1_15_0:1.5
	newlib-csl-sourcerygxx-3_4_4-25:1.3;
locks; strict;
comment	@ * @;


1.22
date	2008.11.20.20.12.34;	author jjohnstn;	state Exp;
branches;
next	1.21;

1.21
date	2007.09.21.21.14.41;	author jjohnstn;	state Exp;
branches;
next	1.20;

1.20
date	2007.09.21.21.06.58;	author jjohnstn;	state Exp;
branches;
next	1.19;

1.19
date	2007.09.21.20.45.17;	author jjohnstn;	state Exp;
branches;
next	1.18;

1.18
date	2007.09.21.20.40.52;	author jjohnstn;	state Exp;
branches;
next	1.17;

1.17
date	2007.06.20.21.53.01;	author jjohnstn;	state Exp;
branches;
next	1.16;

1.16
date	2007.06.20.21.50.53;	author jjohnstn;	state Exp;
branches;
next	1.15;

1.15
date	2007.06.20.21.44.54;	author jjohnstn;	state Exp;
branches;
next	1.14;

1.14
date	2007.06.20.21.41.33;	author jjohnstn;	state Exp;
branches;
next	1.13;

1.13
date	2007.06.20.21.38.55;	author jjohnstn;	state Exp;
branches;
next	1.12;

1.12
date	2007.06.20.17.28.09;	author jjohnstn;	state Exp;
branches;
next	1.11;

1.11
date	2007.06.20.17.24.05;	author jjohnstn;	state Exp;
branches;
next	1.10;

1.10
date	2007.06.13.17.40.27;	author jjohnstn;	state Exp;
branches;
next	1.9;

1.9
date	2007.06.05.19.01.30;	author jjohnstn;	state Exp;
branches;
next	1.8;

1.8
date	2007.05.23.21.39.54;	author jjohnstn;	state Exp;
branches;
next	1.7;

1.7
date	2007.04.04.20.59.38;	author jjohnstn;	state Exp;
branches;
next	1.6;

1.6
date	2007.02.21.19.30.44;	author jjohnstn;	state Exp;
branches;
next	1.5;

1.5
date	2006.12.13.19.42.56;	author jjohnstn;	state Exp;
branches;
next	1.4;

1.4
date	2006.08.30.19.06.48;	author jjohnstn;	state Exp;
branches;
next	1.3;

1.3
date	2006.08.23.16.13.24;	author jjohnstn;	state Exp;
branches;
next	1.2;

1.2
date	2006.08.16.21.45.53;	author jjohnstn;	state Exp;
branches;
next	1.1;

1.1
date	2006.08.16.21.15.03;	author jjohnstn;	state Exp;
branches;
next	;


desc
@@


1.22
log
@
2008-11-20  Ken Werner  <ken.werner@@de.ibm.com>
            Patrick Mansfield  <patmans@@us.ibm.com>
            Joel Schopp   <jschopp@@austin.ibm.com>

        * spu/Makefile.in: Add new files.
        * spu/jsre.h: Add JSRE_MMAP, JSRE_MREMAP, JSRE_MSYNC and
        JSRE_MUNMAP opcodes.
        * spu/mmap_eaddr.c: New File.
        * spu/mremap_eaddr.c: Likewise.
        * spu/msync_eaddr.c: Likewise.
        * spu/munmap_eaddr.c: Likewise.
@
text
@/*
(C) Copyright IBM Corp. 2005, 2006, 2007

All rights reserved.

Redistribution and use in source and binary forms, with or without 
modification, are permitted provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.
* Redistributions in binary form must reproduce the above copyright
notice, this list of conditions and the following disclaimer in the 
documentation and/or other materials provided with the distribution.
* Neither the name of IBM nor the names of its contributors may be
used to endorse or promote products derived from this software without 
specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE 
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR 
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
POSSIBILITY OF SUCH DAMAGE.

Author: Andreas Neukoetter (ti95neuk@@de.ibm.com)
*/

/* this file provides the mappings for the JSRE defined interface for PE assisted libary calls */

#include <sys/stat.h>
#include <sys/syscall.h>

#ifndef __JSRE_H
#define __JSRE_H

#define JSRE_POSIX1_SIGNALCODE 0x2101

#define JSRE_CLOSE 2
#define JSRE_FSTAT 4
#define JSRE_GETPAGESIZE 6
#define JSRE_GETTIMEOFDAY 7
#define JSRE_LSEEK 9
#define JSRE_LSTAT 10
#define JSRE_MMAP 11
#define JSRE_MREMAP 12
#define JSRE_MSYNC 13
#define JSRE_MUNMAP 14
#define JSRE_OPEN 15
#define JSRE_READ 16
#define JSRE_SHM_OPEN 21
#define JSRE_SHM_UNLINK 22
#define JSRE_STAT 23
#define JSRE_UNLINK 24
#define JSRE_WRITE 27
#define JSRE_FTRUNCATE 28
#define JSRE_ACCESS 29
#define JSRE_DUP 30
#define JSRE_NANOSLEEP 32

#define JSRE_CHDIR 33
#define JSRE_FCHDIR 34
#define JSRE_MKDIR 35
#define JSRE_MKNOD 36
#define JSRE_RMDIR 37
#define JSRE_CHMOD 38
#define JSRE_FCHMOD 39
#define JSRE_CHOWN 40
#define JSRE_FCHOWN 41
#define JSRE_LCHOWN 42
#define JSRE_GETCWD 43
#define JSRE_LINK 44
#define JSRE_SYMLINK 45
#define JSRE_READLINK 46
#define JSRE_SYNC 47
#define JSRE_FSYNC 48
#define JSRE_FDATASYNC 49
#define JSRE_DUP2 50
#define JSRE_LOCKF 51
#define JSRE_TRUNCATE 52
#define JSRE_MKSTEMP 53
#define JSRE_MKTEMP 54
#define JSRE_OPENDIR 55
#define JSRE_CLOSEDIR 56
#define JSRE_READDIR 57
#define JSRE_REWINDDIR 58
#define JSRE_SEEKDIR 59
#define JSRE_TELLDIR 60
#define JSRE_SCHED_YIELD 61
#define JSRE_UMASK 62
#define JSRE_UTIME 63
#define JSRE_UTIMES 64
#define JSRE_PREAD 65
#define JSRE_PWRITE 66
#define JSRE_READV 67
#define JSRE_WRITEV 68

struct jsre_stat {
    unsigned int dev;
    unsigned int ino;
    unsigned int mode;
    unsigned int nlink;
    unsigned int uid;
    unsigned int gid;
    unsigned int rdev;
    unsigned int size;
    unsigned int blksize;
    unsigned int blocks;
    unsigned int atime;
    unsigned int mtime;
    unsigned int ctime;
};

void __conv_stat (struct stat *stat, struct jsre_stat *jstat);

#endif
@


1.21
log
@
2007-09-21  Patrick Mansfield  <patmans@@us.ibm.com>

        * spu/Makefile.in: Add new files.
        * spu/jsre.h: Add JSRE_PREAD, JSRE_PWRITE, JSRE_READV, and
        JSRE_WRITEV opcodes.
        * spu/pread.c: New file to add pread via assist call.
        * spu/pwrite.c: New file to add pwrite via assist call.
        * spu/readv.c: New file to add readv via assist call.
        * spu/writev.c: New file to add writev via assist call.
@
text
@d9 1
a9 1
    * Redistributions of source code must retain the above copyright notice, 
d11 1
a11 1
    * Redistributions in binary form must reproduce the above copyright 
d14 1
a14 1
    * Neither the name of IBM nor the names of its contributors may be 
d49 4
@


1.20
log
@
2007-09-21  Patrick Mansfield  <patmans@@us.ibm.com>

        * spu/jsre.h: Add JSRE_SCHED_YIELD, JSRE_UMASK, JSRE_UTIME, and
        JSRE_UTIMES.
        * spu/sched_yield.c: New file add sched_yield via assist call.
        * spu/umask.c: New file add umask via assist call.
        * spu/utime.c: New file add utime via assist call.
        * spu/utimes.c: New file add utimes via assist call.
        * spu/Makefile.in: Add new files.
@
text
@d93 4
@


1.19
log
@
2007-09-21  Patrick Mansfield  <patmans@@us.ibm.com>

        * spu/jsre.h: Add JSRE_SHM_OPEN and JSRE_SHM_UNLINK opcodes.
        * spu/shm_open.c: New file to add shm_open via assist call.
        * spu/shm_unlink.c: New file to add shm_unlink via assist call.
        * spu/Makefile.in: Add shm_open.o and shm_unlink.o
@
text
@d89 4
@


1.18
log
@
2007-09-21  Patrick Mansfield  <patmans@@us.ibm.com>

        * spu/dirfuncs.c: New file, holds the opendir, closedir, readdir,
        rewinddir, seekdir and telldir implementations. These are
        grouped in one file so that we do not need a separate file for
        the struct dirent and DIR allocation code.
        * spu/jsre.h: Add JSRE_OPENDIR and other dir opcodes.
        * spu/Makefile.in: Add dirfuncs.o.
@
text
@d51 2
@


1.17
log
@
2007-06-20  Patrick Mansfield  <patmans@@us.ibm.com>

        * spu/jsre.h: Add JSRE_MKSTEMP and JSRE_MKTEMP values.
        * spu/mkstemp.c: New file to add mkstemp support via assist call.
        * spu/mktemp.c: New file to add mktemp support via assist call.
        * spu/Makefile.in: Add mkstemp.o and mktemp.o
@
text
@d81 6
@


1.16
log
@
2007-06-20  Patrick Mansfield  <patmans@@us.ibm.com>

        * spu/jsre.h: Add new JSRE opcodes.
        * spu/dup2.c: New file to add dup2 support via assist call.
        * spu/fdatasync.c: New file to add fdatasync support via assist call.
        * spu/fsync.c: New file to add fsync support via assist call.
        * spu/lockf.c: New file to add lockf support via assist call.
        * spu/sync.c: New file to add sync support via assist call.
        * spu/truncate.c: New file to add truncate support via assist call.
        * spu/Makefile.in: Add new files.
@
text
@d79 2
@


1.15
log
@
2007-06-20  Patrick Mansfield  <patmans@@us.ibm.com>

        * spu/jsre.h: JSRE_LINK, JSRE_SYMLINK and JSRE_READLINK.
        * spu/link.c: New file to add link support via an assist call.
        * spu/readlink.c: New file to add readlink support via an assist call.
        * spu/symlink.c: New file to add symlink support via an assist call.
        * spu/Makefile.in: Add new files.
@
text
@d73 6
@


1.14
log
@
2007-06-20  Patrick Mansfield  <patmans@@us.ibm.com>

        * spu/jsre.h: Add JSRE_LSTAT.
        * spu/lstat.c: New file add lstat support via an assist call.
        * spu/conv_stat.c: New file, add common stat conversion code.
        * spu/fstat.c: Use __conv_stat.
        * spu/stat.c: Use __conv_stat.
        * spu/Makefile.in: Add conv_stat.o and lstat.o.
@
text
@d70 3
@


1.13
log
@
2007-06-20  Patrick Mansfield  <patmans@@us.ibm.com>

        * spu/jsre.h: Add JSRE_GETCWD.
        * spu/getcwd.c: New file, implement getcwd with help from an
        assist call.
        * spu/Makefile.in: Add getcwd.
@
text
@d35 3
d48 1
d71 1
a71 1
typedef struct {
d85 1
a85 1
} jsre_stat_t;
d87 1
a87 1
#include <sys/syscall.h>
@


1.12
log
@
2007-06-20  Patrick Mansfield  <patmans@@us.ibm.com>

        * spu/jsre.h: Add defines for new assist calls.
        * spu/chdir.c: New file, support chdir via assist call.
        * spu/chmod.c: New file, support chmod via assist call.
        * spu/chown.c: New file, support chown via assist call.
        * spu/fchdir.c: New file, support fchdir via assist call.
        * spu/fchmod.c: New file, support fchmod via assist call.
        * spu/fchown.c: New file, support fchown via assist call.
        * spu/lchown.c: New file, support lchown via assist call.
        * spu/mkdir.c: New file, support mkdir via assist call.
        * spu/mknod.c: New file, support mknod via assist call.
        * spu/rmdir.c: New file, support rmdir via assist call.
        * spu/Makefile.in: Add new files.
@
text
@d65 1
@


1.11
log
@
2007-06-20  Patrick Mansfield  <patmans@@us.ibm.com>

        * spu/getpagesize.c: New file add getpagesize via an assist call.
        * spu/jsre.h: Add JSRE_GETPAGESIZE.
        * spu/Makefile.in: Add getpagesize.
@
text
@d55 11
@


1.10
log
@
2007-06-13  Patrick Mansfield  <patmans@@us.ibm.com>

        * spu/Makefile.in: Add nanosleep.c.
        * spu/jsre.h: Add JSRE_NANOSLEEP.
        * spu/nanosleep.c: New file, supply nanosleep via an assist call.
@
text
@d42 1
@


1.9
log
@
2007-06-05  Patrick Mansfield  <patman@@us.ibm.com>

        * spu/jsre.h: Remove the assist call structs and defines that are
        specific to one assist call from here.
        * spu/access.c: Move struct syscall_access_t to here.
        * spu/fstat.c: Move struct syscall_fstat_t to here.
        * spu/ftruncate.c: Move struct syscall_ftruncate_t to here.
        * spu/gettimeofday.c: Move struct syscall_gettimeofday_t to here.
        * spu/lseek.c: Move struct syscall_lseek_t and JSRE_SEEK defines to
        here.
        * spu/open.c: Move struct syscall_open_t and JSRE_O_ defines to here.
        * spu/read.c: Move struct syscall_read_t to here, and actually use
        it (it is the same as syscall_write_t).
        * spu/stat.c: Move struct syscall_stat_t to here.
        * spu/write.c: Move struct syscall_write_t to here.
        * spu/close.c: Pass the address of the first and only argument to
        __send_to_ppe rather than using an automatic variable and a
        special struct.
        * spu/dup.c: Ditto.
        * spu/unlink.c: Ditto.
@
text
@d2 1
a2 1
(C) Copyright IBM Corp. 2005, 2006
d52 1
@


1.8
log
@
2007-05-23 Patrick Mansfield <patmans@@us.ibm.com>

        * spu/syscalls.c: Change __send_to_ppe to return the result stored
        in stored in slot 0 of the data, rather than have each assisted
        call retrieve the value.
        * spu/jsre.h: Remove the now unused syscall_out_t.
        * spu/access.c: Use the __send_to_ppe result instead of the slot 0
        value, remove unused syscall_out_t variable.
        * spu/close.c: Ditto.
        * spu/dup.c: Ditto.
        * spu/fstat.c: Ditto.
        * spu/ftruncate.c: Ditto.
        * spu/gettimeofday.c: Ditto.
        * spu/lseek.c: Ditto.
        * spu/open.c: Ditto.
        * spu/read.c: Ditto.
        * spu/stat.c: Ditto.
        * spu/unlink.c: Ditto.
        * spu/write.c: Ditto.
@
text
@a37 17
#define JSRE_SEEK_SET 0
#define JSRE_SEEK_CUR 1
#define JSRE_SEEK_END 2

#define JSRE_O_RDONLY 0
#define JSRE_O_WRONLY 1
#define JSRE_O_RDWR 2

#define JSRE_O_CREAT 64
#define JSRE_O_EXCL 128
#define JSRE_O_NOCTTY 256
#define JSRE_O_TRUNC 512
#define JSRE_O_APPEND 1024
#define JSRE_O_NDELAY 2048
#define JSRE_O_SYNC 4096
#define JSRE_O_ASYNC 8192

a52 98
typedef struct
{
	unsigned int	pathname;
	unsigned int	pad0[ 3 ];
	unsigned int	flags;
	unsigned int	pad1[ 3 ];
	unsigned int	mode;
	unsigned int	pad2[ 3 ];
} syscall_open_t;

typedef struct
{
	unsigned int	file;
	unsigned int	pad0[ 3 ];
	unsigned int	ptr;
	unsigned int	pad1[ 3 ];
	unsigned int	len;
	unsigned int	pad2[ 3 ];
} syscall_write_t;

typedef struct
{
	unsigned int	file;
	unsigned int	pad0[ 3 ];
	unsigned int	ptr;
	unsigned int	pad1[ 3 ];
	unsigned int	len;
	unsigned int	pad2[ 3 ];
} syscall_read_t;

typedef struct
{
	unsigned int	file;
	unsigned int	pad0[ 3 ];
} syscall_close_t;

typedef struct
{
	unsigned int	file;
	unsigned int	pad0[ 3 ];
	unsigned int	offset;
	unsigned int	pad1[ 3 ];
	unsigned int	whence;
	unsigned int	pad2[ 3 ];
} syscall_lseek_t;

typedef struct
{
	unsigned int	file;
	unsigned int	pad0[ 3 ];
	unsigned int	length;
	unsigned int	pad1[ 3 ];
} syscall_ftruncate_t;

typedef struct
{
        unsigned int    pathname;
        unsigned int    pad0[ 3 ];
        unsigned int    mode;
        unsigned int    pad1[ 3 ];
} syscall_access_t;

typedef struct
{
	unsigned int	oldfd;
	unsigned int	pad0[ 3 ];
} syscall_dup_t;

typedef struct
{
	unsigned int	tv;
	unsigned int	pad0[ 3 ];
	unsigned int	tz;
	unsigned int	pad1[ 3 ];
} syscall_gettimeofday_t;

typedef struct
{
	unsigned int	pathname;
	unsigned int	pad0[ 3 ];
} syscall_unlink_t;

typedef struct
{
        unsigned int    file;
        unsigned int    pad0[ 3 ];
        unsigned int    ptr;
        unsigned int    pad1[ 3 ];
} syscall_fstat_t;

typedef struct
{
        unsigned int    pathname;
        unsigned int    pad0[ 3 ];
        unsigned int    ptr;
        unsigned int    pad1[ 3 ];
} syscall_stat_t;

@


1.7
log
@
2007-04-04  Patrick Mansfield <patmans@@us.ibm.com>

        * spu/syscalls.c: Rename _send_to_ppe __send_to_ppe, and set errno
        on return from the offload call.
        * spu/jsre.h: Include sys/syscall.h for the send_to_ppe prototype.
        * spu/access.c: Call __send_to_ppe instead of _send_to_ppe, and
        remove the setting of errno.
        * spu/close.c: Ditto.
        * spu/dup.c: Ditto.
        * spu/fstat.c: Ditto.
        * spu/ftruncate.c: Ditto.
        * spu/gettimeofday.c: Ditto.
        * spu/lseek.c: Ditto.
        * spu/open.c: Ditto.
        * spu/read.c: Ditto.
        * spu/stat.c: Ditto.
        * spu/unlink.c: Ditto.
        * spu/write.c: Ditto.
@
text
@a167 7
typedef struct
{
	unsigned int	rc;
	unsigned int	pad0[ 2 ];
	unsigned int	err;
} syscall_out_t;

@


1.6
log
@
2007-02-21  Patrick Mansfield <patmans@@us.ibm.com>

        * libgloss/spu/gettimeofday.c: New file which adds SPU gettimeofday.
        * libgloss/spu/jsre.h: Remove time, add gettimeofday.
        * libgloss/spu/Makefile.in: Ditto.
@
text
@d191 1
a191 1
void _send_to_ppe (unsigned int signalcode, unsigned int opcode, void *data);
@


1.5
log
@
2006-12-13  Sa Liu  <saliu@@de.ibm.com>

        * spu/access.c: New file
        * spu/dup.c: New file
        * spu/ftruncate.c: New file
        * spu/jsre.h: add structures for new functions
        * spu/time.c: New file
        * spu/Makefile.in (access.o, dup.o, ftruncate.o, time.o): New targets.
@
text
@d59 1
a68 1
#define JSRE_TIME 31
d140 1
a140 1
	unsigned int	time;
d142 3
a144 1
} syscall_time_t;
@


1.4
log
@
2006-08-30  Kazunori Asayama  <asayama@@sm.sony.co.jp>

        * spu/syscalls.c: Add a new argument to _send_to_ppe() to
        specify signal code.
        * spu/jsre.h: Update declaration of _send_to_ppe().
        * spu/close.c: Replace _send_to_ppe_0x2101() by _send_to_ppe().
        * spu/fstat.c: Ditto.
        * spu/lseek.c: Ditto.
        * spu/open.c: Ditto.
        * spu/read.c: Ditto.
        * spu/stat.c: Ditto.
        * spu/unlink.c: Ditto.
        * spu/write.c: Ditto.
@
text
@d65 4
d118 28
@


1.3
log
@
2006-08-23  Kazunori Asayama  <asayama@@sm.sony.co.jp>

        * spu/Makefile.in: Add new object files.
        * spu/syscalls.c: Move each system call to individual file.
        * spu/jsre.h: Add declaration of _send_to_ppe_0x2101().
        * spu/close.c: New file. Moved from spu/syscalls.c.
        * spu/fstat.c: Likewise.
        * spu/getpid.c: Likewise.
        * spu/isatty.c: Likewise.
        * spu/kill.c: Likewise.
        * spu/lseek.c: Likewise.
        * spu/open.c: Likewise.
        * spu/read.c: Likewise.
        * spu/stat.c: Likewise.
        * spu/unlink.c: Likewise.
        * spu/write.c: Likewise.
@
text
@d55 2
d157 1
a157 1
void _send_to_ppe_0x2101 (int opcode, void *data);
@


1.2
log
@
2006-08-16  Joel Schopp  <jschopp@@austin.ibm.com>

        * spu/jsre.h(JSRE_STAT): New define.
        (syscall_stat_t): New type.
        * spu/syscalls.c(stat): New syscall.
@
text
@d155 1
@


1.1
log
@
2006-08-16  Joel Schopp  <jschopp@@austin.ibm.com>

        *  configure.in: Add spu support.
        *  configure: Regenerated.
        *  spu/Makefile.in: New file.
        *  spu/aclocal.m4: Ditto.
        *  spu/configure: Ditto.
        *  spu/configure.in: Ditto.
        *  spu/crt0.c: Ditto.
        *  spu/exit.c: Ditto.
        *  spu/init.c: Ditto.
        *  spu/jsre.h: Ditto.
        *  spu/sbrk.c: Ditto.
        *  spu/syscalls.c: Ditto.
@
text
@d60 1
d124 7
@

