head	1.2;
access;
symbols
	newlib-2_2_0:1.2.0.2
	newlib-2_1_0:1.2
	newlib-2_0_0:1.2
	newlib-1_20_0:1.2
	newlib-1_19_0:1.2
	newlib-1_18_0:1.2
	newlib-1_17_0-arc:1.1.0.4
	binutils-arc-20080908-branch:1.1.0.2
	binutils-arc-20080908-branchpoint:1.1
	newlib-1_17_0:1.1
	newlib-1_16_0:1.1
	newlib-1_15_0:1.1;
locks; strict;
comment	@# @;


1.2
date	2009.05.13.21.31.06;	author jjohnstn;	state Exp;
branches;
next	1.1;

1.1
date	2006.12.08.21.50.56;	author jjohnstn;	state Exp;
branches;
next	;


desc
@@


1.2
log
@
2009-05-13  Ulrich Weigand  <uweigand@@de.ibm.com>

        * spu/crtn.S: Add dummy to ensure nothing gets linked at address 0.
        * spu/crti.S: Remove nop.
@
text
@# (C) Copyright IBM Corp. 2005, 2006
#
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
#     * Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
#     * Neither the name of IBM nor the names of its contributors may be
# used to endorse or promote products derived from this software without
# specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# This file just makes sure that the .fini and .init sections do in
# fact return.  Users may put any desired instructions in those sections.
# This file is the last thing linked into any executable.

	# Note - this macro is complimented by the FUNC_START macro
	# in crti.S.  If you change this macro you must also change
	# that macro match.
	#
	# Note - we do not try any fancy optimisations of the return
	# sequences here, it is just not worth it.  Instead keep things
	# simple.  The link register is restored and then the correct 
	# function return instruction is performed.
.macro FUNC_END
	ai      $sp, $sp, 32
	lqd     $lr, 16($sp)
	bi	$lr
.endm
	.file		"crtn.S"

	.section	".init"

	FUNC_END
	
	.section	".fini"
	
	FUNC_END
	
	# To ensure nothing is linked at address 0, provide a dummy
	# .interrupt section.  This is in crtn.S to make sure any
	# user-provided real .interrupt section will get linked
	# in front of this dummy.
	.section	".interrupt","ax"
	.align 2
	heq $0,$0

# end of crtn.S
@


1.1
log
@
2006-12-08  Sa Liu  <saliu@@de.ibm.com>

        * spu/exit.c (libgloss_exit): Rename from this ..
        (_exit): .. to this. Overhaul.
        (exit): Remove.
        * spu/crt0.S, spu/crti.S, spu/crtn.S: New files.
        * spu/crt0.C, spu/init.c: Remove.
        * spu/configure.in (AC_INIT): Check for crt0.S, not crt0.C.
        * spu/configure: Regenerate.
        * spu/Makefile.in (crti.o, crtn.o, crt1.o, crt2.o): New targets.
        (OBJS): Remove init.o.
        (CRTOBJS): New.
        (OUTPUTS): Add $(CRTOBJS).
@
text
@d56 8
@

