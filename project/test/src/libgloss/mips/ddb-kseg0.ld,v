head	1.9;
access;
symbols
	newlib-2_2_0:1.9.0.10
	newlib-2_1_0:1.9
	newlib-2_0_0:1.9
	newlib-1_20_0:1.9
	newlib-1_19_0:1.9
	newlib-1_18_0:1.9
	newlib-1_17_0-arc:1.9.0.8
	binutils-arc-20080908-branch:1.9.0.6
	binutils-arc-20080908-branchpoint:1.9
	newlib-1_17_0:1.9
	newlib-1_16_0:1.9
	newlib-1_15_0:1.9
	newlib-csl-coldfire-4_1-32:1.9
	newlib-csl-sourcerygxx-4_1-32:1.9
	newlib-csl-innovasic-fido-3_4_4-33:1.9
	newlib-csl-coldfire-4_1-30:1.9
	newlib-csl-sourcerygxx-4_1-30:1.9
	newlib-csl-coldfire-4_1-28:1.9
	newlib-csl-sourcerygxx-4_1-28:1.9
	newlib-csl-arm-2006q3-27:1.9
	newlib-csl-sourcerygxx-4_1-27:1.9
	newlib-csl-arm-2006q3-26:1.9
	newlib-csl-sourcerygxx-4_1-26:1.9
	newlib-csl-sourcerygxx-4_1-24:1.9
	newlib-csl-sourcerygxx-4_1-23:1.9
	newlib-csl-sourcerygxx-4_1-21:1.9
	newlib-csl-arm-2006q3-21:1.9
	newlib-csl-arm-2006q3-19:1.9
	newlib-csl-sourcerygxx-4_1-19:1.9
	newlib-csl-sourcerygxx-4_1-18:1.9
	newlib-csl-sourcerygxx-3_4_4-25:1.9
	newlib-csl-sourcerygxx-4_1-17:1.9
	newlib-csl-sourcerygxx-4_1-14:1.9
	newlib-csl-sourcerygxx-4_1-13:1.9
	newlib-csl-sourcerygxx-4_1-12:1.9
	newlib-csl-sourcerygxx-4_1-9:1.9
	newlib-csl-sourcerygxx-4_1-8:1.9
	newlib-csl-sourcerygxx-4_1-7:1.9
	newlib-csl-arm-2006q1-6:1.9
	newlib-csl-sourcerygxx-4_1-6:1.9
	newlib-csl-sourcerygxx-4_1-5:1.9
	newlib-csl-sourcerygxx-4_1-4:1.9
	newlib-autotools-branch:1.9.0.4
	newlib-csl-20060320-branch:1.9.0.2
	newlib-csl-20060320-branchpoint:1.9
	newlib-1_14_0:1.9
	newlib-csl-arm-2005-q1b:1.5
	newlib-csl-arm-2005-q1a:1.5
	newlib-1_13_0:1.5
	csl-arm-2004-q3:1.5
	csl-arm-2004-q1a:1.4
	csl-arm-2004-q1:1.4
	newlib-1_12_0:1.4
	csl-arm-2003-q4:1.4
	newlib-1_11_0:1.4
	cygnus_cvs_20020108_pre:1.1
	newlib-1_10_0:1.1;
locks; strict;
comment	@# @;


1.9
date	2005.10.03.17.29.47;	author jjohnstn;	state Exp;
branches;
next	1.8;

1.8
date	2005.09.23.15.51.10;	author jjohnstn;	state Exp;
branches;
next	1.7;

1.7
date	2005.07.18.18.19.40;	author jjohnstn;	state Exp;
branches;
next	1.6;

1.6
date	2005.05.20.15.45.43;	author corinna;	state Exp;
branches;
next	1.5;

1.5
date	2004.05.05.12.16.31;	author rsandifo;	state Exp;
branches;
next	1.4;

1.4
date	2002.10.07.16.24.00;	author rsandifo;	state Exp;
branches;
next	1.3;

1.3
date	2002.08.01.20.21.23;	author fitzsim;	state Exp;
branches;
next	1.2;

1.2
date	2002.07.12.15.37.03;	author jjohnstn;	state Exp;
branches;
next	1.1;

1.1
date	2001.10.18.02.24.30;	author meissner;	state Exp;
branches;
next	;


desc
@@


1.9
log
@
2005-10-03  James E Wilson  <wilson@@specifix.com>

        * mips/array.ld, mips/cfe.ld, mips/ddb-kseg0.ld, mips/ddb.ld,
        mips/dve.ld, mips/idt.ld, mips/idt32.ld, mips/idt64.ld,
        mips/idtecoff.ld, mips/jmr3904app-java.ld, mips/jmr3904app.ld,
        jmr3904dram-java.ld, mips/jmr3904dram.ld, mips/lsi.ld, mips/nullmon.ld,
        mips/pmon.ld: Add support for .bss.* sections.
@
text
@/* The following TEXT start address leaves space for the monitor
   workspace. */

ENTRY(_start)
STARTUP(crt0.o)
OUTPUT_FORMAT("elf32-bigmips", "elf32-bigmips", "elf32-littlemips")
GROUP(-lc -lpmon -lgcc)
SEARCH_DIR(.)
__DYNAMIC  =  0;

/*
 * Allocate the stack to be at the top of memory, since the stack
 * grows down
 */
PROVIDE (__stack = 0);
/* PROVIDE (__global = 0); */

/*
 * Initalize some symbols to be zero so we can reference them in the
 * crt0 without core dumping. These functions are all optional, but
 * we do this so we can have our crt0 always use them if they exist. 
 * This is so BSPs work better when using the crt0 installed with gcc.
 * We have to initalize them twice, so we multiple object file
 * formats, as some prepend an underscore.
 */
PROVIDE (hardware_exit_hook = 0);
PROVIDE (hardware_hazard_hook = 0);
PROVIDE (hardware_init_hook = 0);
PROVIDE (software_init_hook = 0);

SECTIONS
{	
  . = 0x80100000;
  .text : {
     _ftext = . ;
    KEEP (*(.init))
     eprol  =  .;
    *(.text)
    *(.text.*)
    *(.gnu.linkonce.t.*)
    *(.mips16.fn.*)
    *(.mips16.call.*)
    PROVIDE (__runtime_reloc_start = .);
    *(.rel.sdata)
    PROVIDE (__runtime_reloc_stop = .);
    KEEP (*(.fini))
     etext  =  .;
     _etext  =  .;
  }
  
  .eh_frame_hdr : { *(.eh_frame_hdr) }
  .eh_frame : { KEEP (*(.eh_frame)) }
  .gcc_except_table : { *(.gcc_except_table) }
  .jcr : { KEEP (*(.jcr)) }
  .ctors    :
  {
    /* gcc uses crtbegin.o to find the start of
       the constructors, so we make sure it is
       first.  Because this is a wildcard, it
       doesn't matter if the user does not
       actually link against crtbegin.o; the
       linker won't look for a file to match a
       wildcard.  The wildcard also means that it
       doesn't matter which directory crtbegin.o
       is in.  */

    KEEP (*crtbegin.o(.ctors))

    /* We don't want to include the .ctor section from
       from the crtend.o file until after the sorted ctors.
       The .ctor section from the crtend file contains the
       end of ctors marker and it must be last */

    KEEP (*(EXCLUDE_FILE (*crtend.o) .ctors))
    KEEP (*(SORT(.ctors.*)))
    KEEP (*(.ctors))
  }

  .dtors    :
  {
    KEEP (*crtbegin.o(.dtors))
    KEEP (*(EXCLUDE_FILE (*crtend.o) .dtors))
    KEEP (*(SORT(.dtors.*)))
    KEEP (*(.dtors))
  }

  . = .;
  .rdata : {
    *(.rdata)
    *(.rodata)
    *(.rodata.*)
    *(.gnu.linkonce.r.*)
  }
   _fdata = ALIGN(16);
  .data : {
    *(.data)
    *(.data.*)
    *(.gnu.linkonce.d.*)
  }
  . = ALIGN(8);
  _gp = . + 0x8000;
  __global = _gp;
  .lit8 : {
    *(.lit8)
  }
  .lit4 : {
    *(.lit4)
  }
  .sdata : {
    *(.sdata)
    *(.sdata.*)
    *(.gnu.linkonce.s.*)
  }
  . = ALIGN(4);
   edata  =  .;
   _edata  =  .;
   _fbss = .;
  .sbss : {
    *(.sbss)
    *(.sbss.*)
    *(.gnu.linkonce.sb.*)
    *(.scommon)
  }
  .bss : {
    _bss_start = . ;
    *(.bss)
    *(.bss.*)
    *(.gnu.linkonce.b.*)
    *(COMMON)
  }

   end = .;
   _end = .;

  /* DWARF debug sections.
     Symbols in the DWARF debugging sections are relative to 
     the beginning of the section so we begin them at 0.  */

  /* DWARF 1 */
  .debug          0 : { *(.debug) }
  .line           0 : { *(.line) }

  /* GNU DWARF 1 extensions */
  .debug_srcinfo  0 : { *(.debug_srcinfo) }
  .debug_sfnames  0 : { *(.debug_sfnames) }

  /* DWARF 1.1 and DWARF 2 */
  .debug_aranges  0 : { *(.debug_aranges) }
  .debug_pubnames 0 : { *(.debug_pubnames) }

  /* DWARF 2 */
  .debug_info     0 : { *(.debug_info) }
  .debug_abbrev   0 : { *(.debug_abbrev) }
  .debug_line     0 : { *(.debug_line) }
  .debug_frame    0 : { *(.debug_frame) }
  .debug_str      0 : { *(.debug_str) }
  .debug_loc      0 : { *(.debug_loc) }
  .debug_macinfo  0 : { *(.debug_macinfo) }
  .debug_ranges   0 : { *(.debug_ranges) }

  /* SGI/MIPS DWARF 2 extensions */
  .debug_weaknames 0 : { *(.debug_weaknames) }
  .debug_funcnames 0 : { *(.debug_funcnames) }
  .debug_typenames 0 : { *(.debug_typenames) }
  .debug_varnames  0 : { *(.debug_varnames) }
}
@


1.8
log
@
2005-09-23  James E Wilson  <wilson@@specifix.com>

        * mips/array.ld, mips/cfe.ld, mips/ddb-kseg0.ld, mips/ddb.ld,
        mips/dve.ld, mips/idt.ld, mips/idt32.ld, mips/idt64.ld,
        mips/idtecoff.ld, mips/jmr3904app-java.ld, mips/jmr3904app.ld,
        jmr3904dram-java.ld, mips/jmr3904dram.ld, mips/lsi.ld, mips/nullmon.ld,
        mips/pmon.ld: Change x* to x.* in existing linkonce lines.  Add
        support for .gnu.linkonce.b.*.
@
text
@d127 1
@


1.7
log
@
2005-07-18  Richard Sandiford  <richard@@codesourcery.com>

        * mips/array.ld (.sdata): Include .gnu.linkonce.s.*, not
        .gnu.linkonce.s*.
        (.sbss): Include .sbss.* and .gnu.linkonce.sb.*.
        * mips/cfe.ld, mips/ddb-kseg0.ld, mips/ddb.ld, mips/dve.ld,
        * mips/idt32.ld, mips/idt64.ld, mips/idtecoff.ld, mips/idt.ld,
        * mips/jmr3904app-java.ld, mips/jmr3904app.ld,
        * mips/jmr3904dram-java.ld, mips/jmr3904dram.ld,
        * mips/lsi.ld, mips/nullmon.ld, mips/pmon.ld: As for mips/array.ld.
@
text
@d40 1
a40 1
    *(.gnu.linkonce.t*)
d92 1
a92 1
    *(.gnu.linkonce.r*)
d98 1
a98 1
    *(.gnu.linkonce.d*)
d127 1
@


1.6
log
@	* arm/elf-redboot.ld, iq2000/sim.ld, m68hc11/sim-valid-m68hc11.ld,
	* m68hc11/sim-valid-m68hc12.ld, mcore/elf-cmb.ld, mips/cfe.ld,
	* mips/ddb-kseg0.ld, mips/ddb.ld, mips/dve.ld, mips/idt.ld,
	* mips/idt32.ld, mips/idt64.ld, mips/jmr3904app-java.ld,
	* mips/jmr3904app.ld, mips/jmr3904dram-java.ld, mips/jmr3904dram.ld,
	* mips/nullmon.ld, mips/pmon.ld, mn10200/eval.ld, mn10200/sim.ld,
	* mn10300/asb2303.ld, mn10300/asb2305.ld, mn10300/eval.ld,
	* mn10300/sim.ld, rs6000/ads.ld, rs6000/mbx.ld, rs6000/yellowknife.ld,
	* sh/sh1lcevb.ld, sh/sh2lcevb.ld, sh/sh3bb.ld, sh/sh3lcevb.ld,
	* sparc/elfsim.ld, sparc/ex930.ld, sparc/ex931.ld, sparc/ex934.ld,
	* sparc/sparc86x.ld, xstormy16/eva_app.ld, xstormy16/eva_stub.ld,
	* xstormy16/sim_high.ld, xstormy16/sim_rom.ld: Add .debug_ranges
	section.
@
text
@d112 1
a112 1
    *(.gnu.linkonce.s*)
d120 2
@


1.5
log
@	* mips/array.ld, mips/cfe.ld, mips/ddb-kseg0.ld, mips/ddb.ld,
	* mips/dve.ld, mips/idt32.ld, mips/idt64.ld, mips/idt.ld
	* mips/jmr3904app.ld, mips/lsi.ld, mips/nullmon.ld, mips/pmon.ld
	(.eh_frame_hdr, .eh_frame, .gcc_except_table, .jcr): New sections.
@
text
@d155 1
@


1.4
log
@	* mips/ddb.ld: KEEP .init and .fini.
	* mips/ddb-kseg0.ld: Likewise.
@
text
@d51 4
@


1.3
log
@        * mips/cfe.ld (STARTUP): New definition.
        * mips/ddb-kseg0.ld (STARTUP): Likewise.
        * mips/ddb.ld (STARTUP): Likewise.
        * mips/dve.ld (STARTUP): Likewise.
        * mips/idt.ld (STARTUP): Likewise.
        * mips/jmr3904app-java.ld (STARTUP): Likewise.
        * mips/jmr3904app.ld (STARTUP): Likewise.
        * mips/jmr3904dram-java.ld (STARTUP): Likewise.
        * mips/jmr3904dram.ld (STARTUP): Likewise.
        * mips/lsi.ld (STARTUP): Likewise.
        * mips/nullmon.ld (STARTUP): Likewise.
        * mips/pmon.ld (STARTUP): Likewise.
@
text
@d36 1
a36 1
    *(.init)
d46 1
a46 1
    *(.fini)
@


1.2
log
@
2002-07-12  Chris Demetriou  <cgd@@broadcom.com>

        * mips/array.ld (hardware_exit_hook, hardware_hazard_hook): New
        symbols for optionally-provided functions.
        * mips/ddb-kseg0.ld: Likewise.
        * mips/ddb.ld: Likewise.
        * mips/dve.ld: Likewise.
        * mips/idt.ld: Likewise.
        * mips/idt32.ld: Likewise.
        * mips/idt64.ld: Likewise.
        * mips/idtecoff.ld: Likewise.
        * mips/jmr3904app-java.ld: Likewise.
        * mips/jmr3904app.ld: Likewise.
        * mips/jmr3904dram-java.ld: Likewise.
        * mips/jmr3904dram.ld: Likewise.
        * mips/lsi.ld: Likewise.
        * mips/nullmon.ld: Likewise.
        * mips/pmon.ld: Likewise.
        * mips/crt0.S: Invoke hardware_exit_hook and hardware_hazard_hook
        functions if they are provided.
        (_exit): Handle __embedded_pic properly.
@
text
@d5 1
@


1.1
log
@Add ddb-kseg0.ld and switch to kseg1 if sizing memory from kseg0
@
text
@d25 2
@

