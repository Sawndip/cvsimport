head	1.7;
access;
symbols
	newlib-2_2_0:1.7.0.10
	newlib-2_1_0:1.7
	newlib-2_0_0:1.7
	newlib-1_20_0:1.7
	newlib-1_19_0:1.7
	newlib-1_18_0:1.7
	newlib-1_17_0-arc:1.7.0.8
	binutils-arc-20080908-branch:1.7.0.6
	binutils-arc-20080908-branchpoint:1.7
	newlib-1_17_0:1.7
	newlib-1_16_0:1.7
	newlib-1_15_0:1.7
	newlib-csl-coldfire-4_1-32:1.7
	newlib-csl-sourcerygxx-4_1-32:1.7
	newlib-csl-innovasic-fido-3_4_4-33:1.7
	newlib-csl-coldfire-4_1-30:1.7
	newlib-csl-sourcerygxx-4_1-30:1.7
	newlib-csl-coldfire-4_1-28:1.7
	newlib-csl-sourcerygxx-4_1-28:1.7
	newlib-csl-arm-2006q3-27:1.7
	newlib-csl-sourcerygxx-4_1-27:1.7
	newlib-csl-arm-2006q3-26:1.7
	newlib-csl-sourcerygxx-4_1-26:1.7
	newlib-csl-sourcerygxx-4_1-24:1.7
	newlib-csl-sourcerygxx-4_1-23:1.7
	newlib-csl-sourcerygxx-4_1-21:1.7
	newlib-csl-arm-2006q3-21:1.7
	newlib-csl-arm-2006q3-19:1.7
	newlib-csl-sourcerygxx-4_1-19:1.7
	newlib-csl-sourcerygxx-4_1-18:1.7
	newlib-csl-sourcerygxx-3_4_4-25:1.7
	newlib-csl-sourcerygxx-4_1-17:1.7
	newlib-csl-sourcerygxx-4_1-14:1.7
	newlib-csl-sourcerygxx-4_1-13:1.7
	newlib-csl-sourcerygxx-4_1-12:1.7
	newlib-csl-sourcerygxx-4_1-9:1.7
	newlib-csl-sourcerygxx-4_1-8:1.7
	newlib-csl-sourcerygxx-4_1-7:1.7
	newlib-csl-arm-2006q1-6:1.7
	newlib-csl-sourcerygxx-4_1-6:1.7
	newlib-csl-sourcerygxx-4_1-5:1.7
	newlib-csl-sourcerygxx-4_1-4:1.7
	newlib-autotools-branch:1.7.0.4
	newlib-csl-20060320-branch:1.7.0.2
	newlib-csl-20060320-branchpoint:1.7
	newlib-1_14_0:1.7
	newlib-csl-arm-2005-q1b:1.4
	newlib-csl-arm-2005-q1a:1.3
	newlib-1_13_0:1.3
	csl-arm-2004-q3:1.3
	csl-arm-2004-q1a:1.2
	csl-arm-2004-q1:1.2
	newlib-1_12_0:1.2
	csl-arm-2003-q4:1.2
	newlib-1_11_0:1.2
	cygnus_cvs_20020108_pre:1.1
	newlib-1_10_0:1.1
	newlib-1_9_0:1.1;
locks; strict;
comment	@# @;


1.7
date	2005.10.03.17.29.47;	author jjohnstn;	state Exp;
branches;
next	1.6;

1.6
date	2005.09.23.15.51.10;	author jjohnstn;	state Exp;
branches;
next	1.5;

1.5
date	2005.07.18.18.19.40;	author jjohnstn;	state Exp;
branches;
next	1.4;

1.4
date	2005.04.12.08.06.40;	author rsandifo;	state Exp;
branches;
next	1.3;

1.3
date	2004.05.05.12.16.31;	author rsandifo;	state Exp;
branches;
next	1.2;

1.2
date	2002.07.12.15.37.03;	author jjohnstn;	state Exp;
branches;
next	1.1;

1.1
date	2000.03.17.22.48.51;	author ranjith;	state Exp;
branches;
next	;


desc
@@


1.7
log
@
2005-10-03  James E Wilson  <wilson@@specifix.com>

        * mips/array.ld, mips/cfe.ld, mips/ddb-kseg0.ld, mips/ddb.ld,
        mips/dve.ld, mips/idt.ld, mips/idt32.ld, mips/idt64.ld,
        mips/idtecoff.ld, mips/jmr3904app-java.ld, mips/jmr3904app.ld,
        jmr3904dram-java.ld, mips/jmr3904dram.ld, mips/lsi.ld, mips/nullmon.ld,
        mips/pmon.ld: Add support for .bss.* sections.
@
text
@/*
 * memory map assumed by prom and standalone system
 *
 * physical     kseg1                   use
 *
 * 0x1fc20000   0xbfc20000
 * to                                   prom text and read-only data
 * 0x1fc00000   0xbfc00000              (in cpu board "prom space")
 *
 * (Top of RAM - 8K) downward           sash and standalone program stack
 *              |                       ( - 8K to preserve kernel message bufs)
 *              V                       (standalone programs grow their stack
 *                                       immediately below sash's stack)
 *
 *              ^
 *              |
 * 0x00100000   0xa0100000 upward       sash program text, data, and bss
 *
 *              ^
 *              |
 * 0x00020000   0xa0020000 upward       standalone program text, data, and bss
 *                                      (kernel is loaded here, also)
 *
 * 0x0001ffff   0xa001ffff downward     dbgmon stack
 *              |
 *              V
 *
 *              ^
 *              |
 * 0x00010000   0xa0010000 upward       dbgmon text, data, and bss
 *
 * 0x0000ffff   0xa000ffff downward     prom monitor stack
 *              |
 *              V
 *
 *              ^
 *              |
 * 0x00000500   0xa0000500 upward       prom monitor bss
 *
 * 0x000004ff   0xa00004ff
 * to                                   restart block
 * 0x00000400   0xa0000400
 *
 * 0x000003ff   0xa00003ff
 * to                                   general exception code
 * 0x00000080   0xa0000080              (note cpu addresses as 0x80000080!)
 *
 * 0x0000007f   0xa000007f
 * to                                   utlbmiss exception code
 * 0x00000000   0xa0000000              (note cpu addresses as 0x80000000!)
 */

/* Uncomment this if you want srecords. 
OUTPUT_FORMAT(srec)
 */
ENTRY(start)
STARTUP(crt0.o)
INPUT(array.o)
SEARCH_DIR(.)
__DYNAMIC  =  0;

/*
 * Allocate the stack to be at the top of memory, since the stack
 * grows down
 *
PROVIDE (__stack = 1M - 8);
 */

/*
 * Initalize some symbols to be zero so we can reference them in the
 * crt0 without core dumping. These functions are all optional, but
 * we do this so we can have our crt0 always use them if they exist. 
 * This is so BSPs work better when using the crt0 installed with gcc.
 * We have to initalize them twice, so we multiple object file
 * formats, as some prepend an underscore.
 */
PROVIDE (hardware_exit_hook = 0);
PROVIDE (hardware_hazard_hook = 0);
PROVIDE (hardware_init_hook = 0);
PROVIDE (software_init_hook = 0);

SECTIONS
{	
  . = 0x80020000;
  .text : {
     _ftext = . ;
    KEEP (*(.init))
     eprol  =  .;
    *(.text)
    *(.text.*)
    *(.gnu.linkonce.t.*)
    *(.mips16.fn.*)
    *(.mips16.call.*)
    PROVIDE (__runtime_reloc_start = .);
    *(.rel.sdata)
    PROVIDE (__runtime_reloc_stop = .);
    KEEP (*(.fini))
     etext  =  .;
     _etext  =  .;
  }
  
  .eh_frame_hdr : { *(.eh_frame_hdr) }
  .eh_frame : { KEEP (*(.eh_frame)) }
  .gcc_except_table : { *(.gcc_except_table) }
  .jcr : { KEEP (*(.jcr)) }
  .ctors    :
  {
    /* gcc uses crtbegin.o to find the start of
       the constructors, so we make sure it is
       first.  Because this is a wildcard, it
       doesn't matter if the user does not
       actually link against crtbegin.o; the
       linker won't look for a file to match a
       wildcard.  The wildcard also means that it
       doesn't matter which directory crtbegin.o
       is in.  */

    KEEP (*crtbegin.o(.ctors))

    /* We don't want to include the .ctor section from
       from the crtend.o file until after the sorted ctors.
       The .ctor section from the crtend file contains the
       end of ctors marker and it must be last */

    KEEP (*(EXCLUDE_FILE (*crtend.o) .ctors))
    KEEP (*(SORT(.ctors.*)))
    KEEP (*(.ctors))
  }

  .dtors    :
  {
    KEEP (*crtbegin.o(.dtors))
    KEEP (*(EXCLUDE_FILE (*crtend.o) .dtors))
    KEEP (*(SORT(.dtors.*)))
    KEEP (*(.dtors))
  }

  . = .;
  .rdata : {
    *(.rdata)
    *(.rodata)
    *(.rodata.*)
    *(.gnu.linkonce.r.*)
  }
   _fdata = ALIGN(16);
  .data : {
    *(.data)
    *(.data.*)
    *(.gnu.linkonce.d.*)
  }
   _gp = ALIGN(16) + 0x8000;
  .lit8 : {
    *(.lit8)
  }
  .lit4 : {
    *(.lit4)
  }
  .sdata : {
    *(.sdata)
    *(.sdata.*)
    *(.gnu.linkonce.s.*)
  }
   edata  =  .;
   _edata  =  .;
   _fbss = .;
  .sbss : {
    *(.sbss)
    *(.sbss.*)
    *(.gnu.linkonce.sb.*)
    *(.scommon)
  }
  .bss : {
    _bss_start = . ;
    *(.bss)
    *(.bss.*)
    *(.gnu.linkonce.b.*)
    *(COMMON)
  }
   end = .;
   _end = .;
}
@


1.6
log
@
2005-09-23  James E Wilson  <wilson@@specifix.com>

        * mips/array.ld, mips/cfe.ld, mips/ddb-kseg0.ld, mips/ddb.ld,
        mips/dve.ld, mips/idt.ld, mips/idt32.ld, mips/idt64.ld,
        mips/idtecoff.ld, mips/jmr3904app-java.ld, mips/jmr3904app.ld,
        jmr3904dram-java.ld, mips/jmr3904dram.ld, mips/lsi.ld, mips/nullmon.ld,
        mips/pmon.ld: Change x* to x.* in existing linkonce lines.  Add
        support for .gnu.linkonce.b.*.
@
text
@d175 1
@


1.5
log
@
2005-07-18  Richard Sandiford  <richard@@codesourcery.com>

        * mips/array.ld (.sdata): Include .gnu.linkonce.s.*, not
        .gnu.linkonce.s*.
        (.sbss): Include .sbss.* and .gnu.linkonce.sb.*.
        * mips/cfe.ld, mips/ddb-kseg0.ld, mips/ddb.ld, mips/dve.ld,
        * mips/idt32.ld, mips/idt64.ld, mips/idtecoff.ld, mips/idt.ld,
        * mips/jmr3904app-java.ld, mips/jmr3904app.ld,
        * mips/jmr3904dram-java.ld, mips/jmr3904dram.ld,
        * mips/lsi.ld, mips/nullmon.ld, mips/pmon.ld: As for mips/array.ld.
@
text
@d91 1
a91 1
    *(.gnu.linkonce.t*)
d143 1
a143 1
    *(.gnu.linkonce.r*)
d149 1
a149 1
    *(.gnu.linkonce.d*)
d175 1
@


1.4
log
@	* mips/array.ld, mips/cfe.ld, mips/dve.ld, mips/idt32.ld,
	* mips/idt64.ld, mips/idtecoff.ld, mips/idt.ld,
	* mips/jmr3904app-java.ld, mips/jmr3904app.ld,
	* mips/jmr3904dram-java.ld, mips/jmr3904dram.ld, mips/lsi.ld,
	* mips/nullmon.ld, mips/pmon.ld: Keep .init and .fini.
@
text
@d161 1
a161 1
    *(.gnu.linkonce.s*)
d168 2
@


1.3
log
@	* mips/array.ld, mips/cfe.ld, mips/ddb-kseg0.ld, mips/ddb.ld,
	* mips/dve.ld, mips/idt32.ld, mips/idt64.ld, mips/idt.ld
	* mips/jmr3904app.ld, mips/lsi.ld, mips/nullmon.ld, mips/pmon.ld
	(.eh_frame_hdr, .eh_frame, .gcc_except_table, .jcr): New sections.
@
text
@d87 1
a87 1
    *(.init)
d97 1
a97 1
    *(.fini)
@


1.2
log
@
2002-07-12  Chris Demetriou  <cgd@@broadcom.com>

        * mips/array.ld (hardware_exit_hook, hardware_hazard_hook): New
        symbols for optionally-provided functions.
        * mips/ddb-kseg0.ld: Likewise.
        * mips/ddb.ld: Likewise.
        * mips/dve.ld: Likewise.
        * mips/idt.ld: Likewise.
        * mips/idt32.ld: Likewise.
        * mips/idt64.ld: Likewise.
        * mips/idtecoff.ld: Likewise.
        * mips/jmr3904app-java.ld: Likewise.
        * mips/jmr3904app.ld: Likewise.
        * mips/jmr3904dram-java.ld: Likewise.
        * mips/jmr3904dram.ld: Likewise.
        * mips/lsi.ld: Likewise.
        * mips/nullmon.ld: Likewise.
        * mips/pmon.ld: Likewise.
        * mips/crt0.S: Invoke hardware_exit_hook and hardware_hazard_hook
        functions if they are provided.
        (_exit): Handle __embedded_pic properly.
@
text
@d102 4
@


1.1
log
@20000317 sourceware import
@
text
@d77 2
@

