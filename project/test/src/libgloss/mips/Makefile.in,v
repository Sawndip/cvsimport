head	1.9;
access;
symbols
	newlib-2_2_0:1.9.0.2
	newlib-2_1_0:1.9
	newlib-2_0_0:1.8
	newlib-1_20_0:1.8
	newlib-1_19_0:1.8
	newlib-1_18_0:1.8
	newlib-1_17_0-arc:1.8.0.4
	binutils-arc-20080908-branch:1.8.0.2
	binutils-arc-20080908-branchpoint:1.8
	newlib-1_17_0:1.8
	newlib-1_16_0:1.8
	newlib-1_15_0:1.8
	newlib-csl-coldfire-4_1-32:1.6
	newlib-csl-sourcerygxx-4_1-32:1.6
	newlib-csl-innovasic-fido-3_4_4-33:1.6
	newlib-csl-coldfire-4_1-30:1.6
	newlib-csl-sourcerygxx-4_1-30:1.6
	newlib-csl-coldfire-4_1-28:1.6
	newlib-csl-sourcerygxx-4_1-28:1.6
	newlib-csl-arm-2006q3-27:1.6
	newlib-csl-sourcerygxx-4_1-27:1.6
	newlib-csl-arm-2006q3-26:1.6
	newlib-csl-sourcerygxx-4_1-26:1.6
	newlib-csl-sourcerygxx-4_1-24:1.6
	newlib-csl-sourcerygxx-4_1-23:1.6
	newlib-csl-sourcerygxx-4_1-21:1.6
	newlib-csl-arm-2006q3-21:1.6
	newlib-csl-arm-2006q3-19:1.6
	newlib-csl-sourcerygxx-4_1-19:1.6
	newlib-csl-sourcerygxx-4_1-18:1.6
	newlib-csl-sourcerygxx-3_4_4-25:1.7
	newlib-csl-sourcerygxx-4_1-17:1.6
	newlib-csl-sourcerygxx-4_1-14:1.6
	newlib-csl-sourcerygxx-4_1-13:1.6
	newlib-csl-sourcerygxx-4_1-12:1.6
	newlib-csl-sourcerygxx-4_1-9:1.6
	newlib-csl-sourcerygxx-4_1-8:1.6
	newlib-csl-sourcerygxx-4_1-7:1.6
	newlib-csl-arm-2006q1-6:1.6
	newlib-csl-sourcerygxx-4_1-6:1.6
	newlib-csl-sourcerygxx-4_1-5:1.6
	newlib-csl-sourcerygxx-4_1-4:1.6
	newlib-autotools-branch:1.6.0.4
	newlib-csl-20060320-branch:1.6.0.2
	newlib-csl-20060320-branchpoint:1.6
	newlib-1_14_0:1.6
	newlib-csl-arm-2005-q1b:1.6
	newlib-csl-arm-2005-q1a:1.6
	newlib-1_13_0:1.6
	csl-arm-2004-q3:1.6
	csl-arm-2004-q1a:1.5
	csl-arm-2004-q1:1.5
	newlib-1_12_0:1.5
	csl-arm-2003-q4:1.5
	newlib-1_11_0:1.4
	cygnus_cvs_20020108_pre:1.2
	newlib-1_10_0:1.2
	newlib-1_9_0:1.1;
locks; strict;
comment	@# @;


1.9
date	2013.09.30.18.44.25;	author jjohnstn;	state Exp;
branches;
next	1.8;

1.8
date	2006.10.10.18.27.56;	author jjohnstn;	state Exp;
branches;
next	1.7;

1.7
date	2006.08.21.22.24.42;	author jjohnstn;	state Exp;
branches;
next	1.6;

1.6
date	2004.06.28.22.42.20;	author jjohnstn;	state Exp;
branches;
next	1.5;

1.5
date	2003.08.20.19.32.52;	author jjohnstn;	state Exp;
branches;
next	1.4;

1.4
date	2002.11.12.23.14.24;	author jjohnstn;	state Exp;
branches;
next	1.3;

1.3
date	2002.07.12.17.55.04;	author jjohnstn;	state Exp;
branches;
next	1.2;

1.2
date	2001.08.22.00.22.58;	author jlarmour;	state Exp;
branches;
next	1.1;

1.1
date	2000.03.17.22.48.51;	author ranjith;	state Exp;
branches;
next	;


desc
@@


1.9
log
@
2013-09-30  Steve Ellcey  <sellcey@@mips.com>

	* mips/Makefile.in (install): Add mkdir, fix install command.
@
text
@# Copyright (c) 1995, 1996, 1997, 1998, 1999, 2000 Cygnus Support
#
# The authors hereby grant permission to use, copy, modify, distribute,
# and license this software and its documentation for any purpose, provided
# that existing copyright notices are retained in all copies and that this
# notice is included verbatim in any distributions. No written agreement,
# license, or royalty fee is required for any of the authorized uses.
# Modifications to this software may be copyrighted by their authors
# and need not follow the licensing terms described here, provided that
# the new terms are clearly indicated on the first page of each file where
# they apply.

DESTDIR =
VPATH = @@srcdir@@
srcdir = @@srcdir@@
objdir = .
srcroot = $(srcdir)/../..
objroot = $(objdir)/../..

prefix = @@prefix@@
exec_prefix = @@exec_prefix@@

host_alias = @@host_alias@@
target_alias = @@target_alias@@
program_transform_name = @@program_transform_name@@

bindir = @@bindir@@
libdir = @@libdir@@
tooldir = $(exec_prefix)/$(target_alias)

# Multilib support variables.
# TOP is used instead of MULTI{BUILD,SRC}TOP.
MULTIDIRS =
MULTISUBDIR =
MULTIDO = true
MULTICLEAN = true

INSTALL = @@INSTALL@@
INSTALL_PROGRAM = @@INSTALL_PROGRAM@@
INSTALL_DATA = @@INSTALL_DATA@@

SHELL =	/bin/sh

CC = @@CC@@

#AS = @@AS@@
AS = `if [ -f ${objroot}/../gas/as.new ] ; \
	then echo ${objroot}/../gas/as.new ; \
	else echo as ; fi`

AR = @@AR@@

#LD = @@LD@@
LD = `if [ -f ${objroot}/../ld/ld.new ] ; \
	then echo ${objroot}/../ld/ld.new ; \
	else echo ld ; fi`

RANLIB = @@RANLIB@@

OBJDUMP = `if [ -f ${objroot}/../binutils/objdump ] ; \
	then echo ${objroot}/../binutils/objdump ; \
	else t='$(program_transform_name)'; echo objdump | sed -e $$t ; fi`
OBJCOPY = `if [ -f ${objroot}/../binutils/objcopy ] ; \
	then echo ${objroot}/../binutils/objcopy ; \
	else t='$(program_transform_name)'; echo objcopy | sed -e $$t ; fi`

CRT0 = @@crt0@@
PCRT0 = @@pcrt0@@
GENOBJS = syscalls.o fstat.o getpid.o isatty.o kill.o \
	lseek.o print.o putnum.o stat.o unlink.o
GENOBJS2 = open.o close.o read.o write.o
IDTOBJS = idtmon.o @@part_specific_obj@@ ${GENOBJS}
PMONOBJS = pmon.o @@part_specific_obj@@ ${GENOBJS}
LSIOBJS = lsipmon.o @@part_specific_obj@@ ${GENOBJS}
DVEOBJS = dvemon.o @@part_specific_obj@@ ${GENOBJS} ${GENOBJS2}
JMR3904OBJS = jmr3904-io.o @@part_specific_obj@@ ${GENOBJS} ${GENOBJS2}
CFEOBJS = cfe.o cfe_api.o cfe_mem.o @@part_specific_obj@@ ${GENOBJS} ${GENOBJS2}
CYGMONOBJS = open.o close.o cygmon.o @@part_specific_obj@@ ${GENOBJS}

# Nullmon cannot support read and write, but the test cases pull them in via libs
NULLMONOBJS = nullmon.o @@part_specific_obj@@ ${GENOBJS}

CFLAGS = -g 

GCC_LDFLAGS = `if [ -d ${objroot}/../gcc ] ; \
	then echo -L${objroot}/../gcc ; fi`

SCRIPTS = @@script_list@@
BSP = @@bsp_list@@

PART_SPECIFIC_DEFINES = @@part_specific_defines@@

# Host specific makefile fragment comes in here.
@@host_makefile_frag@@

#
# build a test program for each target board. Just trying to get
# it to link is a good test, so we ignore all the errors for now.
#

all: ${CRT0} ${PCRT0} test.o ${BSP}

#
# here's where we build the board support packages for each target
#
mipsidt.o: $(IDTOBJS)
	${LD} -r $(IDTOBJS) -o $@@

mipspmon.o: $(PMONOBJS)
	${LD} -r $(PMONOBJS) -o $@@

mipslsi.o: $(PMONOBJS)
	${LD} -r $(LSIOBJS) -o $@@

libidt.a: $(IDTOBJS)
	${AR} ${ARFLAGS} $@@ $(IDTOBJS)
	${RANLIB} $@@

libpmon.a: $(PMONOBJS)
	${AR} ${ARFLAGS} $@@ $(PMONOBJS)
	${RANLIB} $@@

liblsi.a: $(LSIOBJS)
	${AR} ${ARFLAGS} $@@ $(LSIOBJS)
	${RANLIB} $@@

libdve.a: $(DVEOBJS)
	${AR} ${ARFLAGS} $@@ $(DVEOBJS)
	${RANLIB} $@@

libjmr3904.a: $(JMR3904OBJS)
	${AR} ${ARFLAGS} $@@ $(JMR3904OBJS)
	${RANLIB} $@@

libcygmon.a: $(CYGMONOBJS)
	${AR} ${ARFLAGS} $@@ $(CYGMONOBJS)
	${RANLIB} $@@

libcfe.a: $(CFEOBJS)
	${AR} ${ARFLAGS} $@@ $(CFEOBJS)
	${RANLIB} $@@

# nullmon.a , This is what you want if you want crt0 but NO mon services
# Supports GDB sim testing, board bringups, ICE operation.
libnullmon.a: $(NULLMONOBJS)
	${AR} ${ARFLAGS} $@@ $(NULLMONOBJS)
	${RANLIB} $@@


# compile a fully linked binary. The -Wl,-T*.ld is for the linker
# script. By using -Wl, the linker script is put on the proper place
# in the comand line for ld, and all the symbols will get fully
# resolved.

test: $(OBJS) ${BSP} pmon-test idt-test cfe-test
	@@echo Done...

dtor.o:  $(srcdir)/dtor.C
	$(CC) $(CFLAGS_FOR_TARGET) $(INCLUDES) -o $@@ -c $<
dtor.x: dtor.o ${CRT0} ${srcdir}/pmon.ld Makefile libpmon.a
	${CC} $(CFLAGS_FOR_TARGET) -L${srcdir} -L${objdir} \
	dtor.o -o $@@ $(NEWLIB_LDFLAGS) -N -Wl,-Tpmon.ld

pmon-test.x: test.o ${CRT0} Makefile libpmon.a
	${CC} $(CFLAGS_FOR_TARGET) -L${srcdir} -L${objdir} \
	test.o -o $@@ $(NEWLIB_LDFLAGS) -Wl,-Tpmon.ld
pmon-test.srec: pmon-test.x
	$(OBJCOPY) -O srec pmon-test.x $@@
pmon-test.dis: pmon-test.x
	@@rm -fr pmon-test.dis
	$(OBJDUMP) -d pmon-test.x > $@@
pmon-test: pmon-test.srec pmon-test.dis

idt-test.x: test.o ${CRT0} Makefile libidt.a
	${CC} $(CFLAGS_FOR_TARGET) -L${srcdir} -L${objdir} \
	test.o -o $@@ $(NEWLIB_LDFLAGS) -Wl,-Tidt.ld
idt-test.srec: idt-test.x
	$(OBJCOPY) -O srec idt-test.x $@@
idt-test.dis: idt-test.x
	@@rm -fr idt-test.dis
	$(OBJDUMP) -d idt-test.x > $@@
idt-test: idt-test.srec idt-test.dis

cfe-test.x: test.o ${CRT0} Makefile libcfe.a
	${CC} $(CFLAGS_FOR_TARGET) -L${srcdir} -L${objdir} \
	test.o -o $@@ $(NEWLIB_LDFLAGS) -Wl,-Tcfe.ld
cfe-test.srec: cfe-test.x
	$(OBJCOPY) -O srec cfe-test.x $@@
cfe-test.dis: cfe-test.x
	@@rm -fr cfe-test.dis
	$(OBJDUMP) -d cfe-test.x > $@@
cfe-test: cfe-test.srec cfe-test.dis

doc:	

clean mostlyclean:
	rm -f a.out core *.i *~ *.o *-test *.srec *.dis *.map *.x

distclean maintainer-clean realclean: clean
	rm -f Makefile config.status a.out

.PHONY: install info install-info clean-info
install:
	mkdir -p $(DESTDIR)$(tooldir)/lib${MULTISUBDIR}
	@@for file in $(CRT0) $(PCRT0) $(BSP); do \
	  $(INSTALL_DATA) $${file} $(DESTDIR)$(tooldir)/lib${MULTISUBDIR}/$${file}; \
	done
	@@for script in ${SCRIPTS}; do\
	  $(INSTALL_DATA) ${srcdir}/$${script}.ld $(DESTDIR)$(tooldir)/lib${MULTISUBDIR}/$${script}.ld; \
	done

info:
install-info:
clean-info:

test.o:	${srcdir}/test.c

# these are for the BSPs
crt0.o: ${srcdir}/crt0.S
pcrt0.o: ${srcdir}/crt0.S
	$(CC) -c $(CFLAGS_FOR_TARGET) $(CFLAGS) -DGCRT0 ${srcdir}/crt0.S -o ${PCRT0}
crt0_cfe.o: ${srcdir}/crt0_cfe.S
crt0_cygmon.o: ${srcdir}/crt0_cygmon.S
idtmon.o: ${srcdir}/idtmon.S
pmon.o: ${srcdir}/pmon.S
	$(CC) -c $(CFLAGS_FOR_TARGET) $(CFLAGS) $(PART_SPECIFIC_DEFINES) ${srcdir}/pmon.S -o pmon.o
vr4300.o: ${srcdir}/vr4300.S
	$(CC) -c $(CFLAGS_FOR_TARGET) $(CFLAGS) ${srcdir}/vr4300.S
vr5xxx.o: ${srcdir}/vr5xxx.S
	$(CC) -c $(CFLAGS_FOR_TARGET) $(CFLAGS) ${srcdir}/vr5xxx.S
lsipmon.o: $(srcdir)/lsipmon.S $(srcdir)/pmon.S
jmr3904-io.o: ${srcdir}/jmr3904-io.c
	$(CC) -c $(CFLAGS_FOR_TARGET) $(CFLAGS) ${srcdir}/jmr3904-io.c -o $@@
cfe.o: ${srcdir}/cfe.c ${srcdir}/cfe_api.h
	$(CC) -c $(CFLAGS_FOR_TARGET) $(CFLAGS) ${srcdir}/cfe.c -o $@@
cfe_api.o: ${srcdir}/cfe_api.c ${srcdir}/cfe_api.h ${srcdir}/cfe_api_int.h
	$(CC) -c $(CFLAGS_FOR_TARGET) $(CFLAGS) ${srcdir}/cfe_api.c -o $@@
cfe_mem.o: ${srcdir}/cfe_mem.c ${srcdir}/cfe_api.h
	$(CC) -c $(CFLAGS_FOR_TARGET) $(CFLAGS) ${srcdir}/cfe_mem.c -o $@@

# cma101 can not be compiled mips16, if a mips16 version is needed then
# it will have to be built, then this rule can be scrapped, allowing
# the implicit rule to run.
cma101.o: ${srcdir}/cma101.c
	$(CC) -c $(CFLAGS_FOR_TARGET) -O2 $(INCLUDES) $(CFLAGS) -mno-mips16 ${srcdir}/cma101.c

# cygmon can not be compiled as mips16 since it uses the syscall instruction
cygmon.o: ${srcdir}/cygmon.c
	$(CC) -c $(CFLAGS_FOR_TARGET) -O2 $(INCLUDES) $(CFLAGS) -mno-mips16 ${srcdir}/cygmon.c

syscalls.o: ${srcdir}/syscalls.c

# target specific makefile fragment comes in here.
@@target_makefile_frag@@

Makefile: Makefile.in config.status @@host_makefile_frag_path@@ @@target_makefile_frag_path@@
	$(SHELL) config.status

config.status: configure
	$(SHELL) config.status --recheck
@


1.8
log
@
2006-10-10  Thiemo Seufer  <ths@@mips.com>

        * mips/Makefile.in: Add INCLUDES to local compile rules.
@
text
@d204 1
d206 1
a206 1
	  $(INSTALL_DATA) $${file} $(DESTDIR)$(tooldir)/lib${MULTISUBDIR}; \
@


1.7
log
@
2006-08-21  David Ung  <davidu@@mips.com>

        * mips/Makefile.in: Add rule for cygmon.o and pass the -mno-mips16
        option since it uses the syscall instruction.
@
text
@d244 1
a244 1
	$(CC) -c $(CFLAGS_FOR_TARGET) $(CFLAGS) -mno-mips16 ${srcdir}/cma101.c
d248 1
a248 1
	$(CC) -c $(CFLAGS_FOR_TARGET) $(CFLAGS) -mno-mips16 ${srcdir}/cygmon.c
@


1.6
log
@
2004-06-27  Hideki Iwamoto <h-iwamoto@@kit.hi-ho.ne.jp>

        * Makefile.in: Support $(DESTDIR).
        * arm/Makefile.in: Ditto.
        * d30v/Makefile.in: Ditto.
        * doc/Makefile.in: Ditto.
        * fr30/Makefile.in: Ditto.
        * frv/Makefile.in: Ditto.
        * hp74x/Makefile.in: Ditto.
        * i386/Makefile.in: Ditto.
        * i960/Makefile.in: Ditto.
        * iq2000/Makefile.in: Ditto.
        * libnosys/Makefile.in: Ditto.
        * m32r/Makefile.in: Ditto.
        * m68hc11/Makefile.in: Ditto.
        * m68k/Makefile.in: Ditto.
        * mcore/Makefile.in: Ditto.
        * mips/Makefile.in: Ditto.
        * mn10200/Makefile.in: Ditto.
        * mn10300/Makefile.in: Ditto.
        * pa/Makefile.in: Ditto.
        * rs6000/Makefile.in: Ditto.
        * sparc/Makefile.in: Ditto.
        * sparc/libsys/Makefile.in: Ditto.
        * xstormy16/Makefile.in: Ditto.
@
text
@d246 3
@


1.5
log
@
2003-08-20  Chris Demetriou  <cgd@@broadcom.com>

        * mips/crt0_cfe.S: New file.
        * mips/cfe_mem.c: New file.
        * mips/cfe_prestart.S: Remove.
        * mips/cfe.ld: Adjust to use crt0_cfe.o as the startup file, and
        and use _start as the entry point.  Align BSS to 32-byte boundary.
        * mips/cfe.c: Reimplement to fit on top of a crt0_cfe.o file.
        * mips/cfe_api.h (__libcfe_stack_size, __libcfe_mem_limit)
        (__libcfe_meminit, __libcfe_stack_top): New prototypes.
        * mips/Makefile.in (CFEOBJS): Replace cfe_prestart.o with cfe_mem.o.
        (cfe.o, cfe_api.o, cfe_mem.o, crt0_cfe.o): New targets.
        * mips/configure.in: Build and install crt0_cfe.o when CFE support
        is built.
        * mips/configure: Regenerate.
@
text
@d13 1
d205 1
a205 1
	  $(INSTALL_DATA) $${file} $(tooldir)/lib${MULTISUBDIR}; \
d208 1
a208 1
	  $(INSTALL_DATA) ${srcdir}/$${script}.ld $(tooldir)/lib${MULTISUBDIR}/$${script}.ld; \
@


1.4
log
@
2002-11-12 Jeff Johnston  <jjohnstn@@redhat.com>

        *  mips/Makefile.in: Add cygmon support.
        *  mips/configure.in: Ditto.
        *  mips/configure: Regenerated.
        *  mips/crt0_cygmon.S: New file.
        *  mips/cygmon.c: Ditto.
        *  mips/pmon.S: Minor formatting and copyright changes.
        *  mips/crt0.S: Ditto.
@
text
@d76 1
a76 2
CFEOBJS = cfe.o cfe_api.o cfe_prestart.o \
	@@part_specific_obj@@ ${GENOBJS} ${GENOBJS2}
a137 1

d220 1
d232 6
@


1.3
log
@
2002-07-12  Chris Demetriou  <cgd@@broadcom.com>

        * mips/Makefile.in (GENOBJS2): New variable to name other
        commonly used objects.
        (DVEOBJS, JMR3904OBJS): Reference GENOBJS2.

        * mips/Makefile.in: Add support for Broadcom CFE firmware.
        * mips/configure.in: (mipsisa32*-*-*, *): Likewise.
        * mips/configure: Regenerate.
        * mips/cfe.c: New file.
        * mips/cfe.ld: New file.
        * mips/cfe_api.c: New file.
        * mips/cfe_api.h: New file.
        * mips/cfe_api_int.h: New file.
        * mips/cfe_error.h: New file.
        * mips/cfe_prestart.S: New file.
@
text
@d1 1
a1 1
# Copyright (c) 1995, 1996, 1997, 1998, 1999 Cygnus Support
d78 1
d135 5
d205 2
a206 8
	if test "x$(CRT0)" != x ; then \
	  $(INSTALL_PROGRAM) $(CRT0) $(tooldir)/lib${MULTISUBDIR}/$(CRT0) ; \
	fi
	if test "x$(PCRT0)" != x ; then \
	  $(INSTALL_PROGRAM) $(PCRT0) $(tooldir)/lib${MULTISUBDIR}/$(PCRT0) ; \
	fi
	@@for bsp in ${BSP}; do\
	 $(INSTALL_PROGRAM) $${bsp} $(tooldir)/lib${MULTISUBDIR}; \
d209 1
a209 1
	 $(INSTALL_DATA) ${srcdir}/$${script}.ld $(tooldir)/lib${MULTISUBDIR}/$${script}.ld; \
d222 1
@


1.2
log
@
	* mips/Makefile.in (jmr3904-io.o): Remove bogus use of `-mips3.'
@
text
@d70 1
d74 4
a77 3
DVEOBJS = open.o close.o dvemon.o read.o write.o @@part_specific_obj@@ ${GENOBJS}
JMR3904OBJS = open.o close.o jmr3904-io.o read.o write.o \
  @@part_specific_obj@@ ${GENOBJS}
d134 4
d150 1
a150 1
test: $(OBJS) ${BSP} pmon-test idt-test
d178 10
@


1.1
log
@20000317 sourceware import
@
text
@d215 1
a215 1
	$(CC) -c $(CFLAGS_FOR_TARGET) $(CFLAGS) -mips3 ${srcdir}/jmr3904-io.c -o $@@
@

