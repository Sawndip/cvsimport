head	1.2;
access;
symbols
	newlib-2_2_0:1.2.0.10
	newlib-2_1_0:1.2
	newlib-2_0_0:1.2
	newlib-1_20_0:1.2
	newlib-1_19_0:1.2
	newlib-1_18_0:1.2
	newlib-1_17_0-arc:1.2.0.8
	binutils-arc-20080908-branch:1.2.0.6
	binutils-arc-20080908-branchpoint:1.2
	newlib-1_17_0:1.2
	newlib-1_16_0:1.2
	newlib-1_15_0:1.2
	newlib-csl-coldfire-4_1-32:1.2
	newlib-csl-sourcerygxx-4_1-32:1.2
	newlib-csl-innovasic-fido-3_4_4-33:1.2
	newlib-csl-coldfire-4_1-30:1.2
	newlib-csl-sourcerygxx-4_1-30:1.2
	newlib-csl-coldfire-4_1-28:1.2
	newlib-csl-sourcerygxx-4_1-28:1.2
	newlib-csl-arm-2006q3-27:1.2
	newlib-csl-sourcerygxx-4_1-27:1.2
	newlib-csl-arm-2006q3-26:1.2
	newlib-csl-sourcerygxx-4_1-26:1.2
	newlib-csl-sourcerygxx-4_1-24:1.2
	newlib-csl-sourcerygxx-4_1-23:1.2
	newlib-csl-sourcerygxx-4_1-21:1.2
	newlib-csl-arm-2006q3-21:1.2
	newlib-csl-arm-2006q3-19:1.2
	newlib-csl-sourcerygxx-4_1-19:1.2
	newlib-csl-sourcerygxx-4_1-18:1.2
	newlib-csl-sourcerygxx-3_4_4-25:1.2
	newlib-csl-sourcerygxx-4_1-17:1.2
	newlib-csl-sourcerygxx-4_1-14:1.2
	newlib-csl-sourcerygxx-4_1-13:1.2
	newlib-csl-sourcerygxx-4_1-12:1.2
	newlib-csl-sourcerygxx-4_1-9:1.2
	newlib-csl-sourcerygxx-4_1-8:1.2
	newlib-csl-sourcerygxx-4_1-7:1.2
	newlib-csl-arm-2006q1-6:1.2
	newlib-csl-sourcerygxx-4_1-6:1.2
	newlib-csl-sourcerygxx-4_1-5:1.2
	newlib-csl-sourcerygxx-4_1-4:1.2
	newlib-autotools-branch:1.2.0.4
	newlib-csl-20060320-branch:1.2.0.2
	newlib-csl-20060320-branchpoint:1.2
	newlib-1_14_0:1.2
	newlib-csl-arm-2005-q1b:1.2
	newlib-csl-arm-2005-q1a:1.2
	newlib-1_13_0:1.2
	csl-arm-2004-q3:1.2
	csl-arm-2004-q1a:1.2
	csl-arm-2004-q1:1.2
	newlib-1_12_0:1.2
	csl-arm-2003-q4:1.2
	newlib-1_11_0:1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.01.07.21.10.54;	author jjohnstn;	state Exp;
branches;
next	1.1;

1.1
date	2002.11.12.23.14.24;	author jjohnstn;	state Exp;
branches;
next	;


desc
@@


1.2
log
@
2002-01-07  Chris Demetriou  <cgd@@broadcom.com>

	* crt0.S: Check for definition of __mips64 rather than
	checking (__mips < 3).
	* pmon.S: Likewise.
	* cygmon.c (sysCall): Avoid multi-line string literals.
@
text
@/* cygmon.c -- Glue code for linking apps to run on top of Cygmon.
 *
 * Copyright (c) 1998, 1999, 2000 Red Hat, Inc.
 *
 * The authors hereby grant permission to use, copy, modify, distribute,
 * and license this software and its documentation for any purpose, provided
 * that existing copyright notices are retained in all copies and that this
 * notice is included verbatim in any distributions. No written agreement,
 * license, or royalty fee is required for any of the authorized uses.
 * Modifications to this software may be copyrighted by their authors
 * and need not follow the licensing terms described here, provided that
 * the new terms are clearly indicated on the first page of each file where
 * they apply.
 */

#include "syscall.h"

int
write ( int file,
        char *buf,
        int nbytes)
{
  return sysCall(SYS_write, file, (unsigned long)buf, nbytes);
}

int
read (int file,
      char *buf,
      int nbytes)
{
  return sysCall(SYS_read, file, (unsigned long)buf, nbytes);
}

int
outbyte (unsigned char c)
{
  return sysCall(SYS_write, 0, (unsigned long)&c, 1);
}

unsigned char
inbyte (void)
{
  char c;
  sysCall(SYS_read, 0, (unsigned long)&c, 1);
  return c;
}


/* Structure filled in by get_mem_info.  Only the size field is
   actually used (by sbrk), so the others aren't even filled in.  */
struct s_mem
{
  unsigned int size;
  unsigned int icsize;
  unsigned int dcsize;
};

// Perform a system call.
// Unused parameters should be set to 0.
int sysCall(unsigned long func, unsigned long p1, unsigned long p2, unsigned long p3)
{
  int ret = 0;
  asm volatile ( "		\n\
          move $4, %1		\n\
          move $5, %2		\n\
          move $6, %3		\n\
          move $7, %4		\n\
          syscall 		\n\
          nop			\n\
          move %0, $2" : "=r"(ret) : "r"(func), "r"(p1), "r"(p2), "r"(p3));
  return ret;
}

// These need to be kept in sync with the definitions in Cygmon.
#define SYS_meminfo     1001

void *
get_mem_info (mem)
     struct s_mem *mem;
{
  unsigned long totmem = 0, topmem = 0;
  int numbanks;

  numbanks = sysCall(SYS_meminfo, (unsigned long)&totmem, (unsigned long)&topmem, 0);
  mem->size = totmem;
  return (void*)topmem;
}
@


1.1
log
@
2002-11-12 Jeff Johnston  <jjohnstn@@redhat.com>

        *  mips/Makefile.in: Add cygmon support.
        *  mips/configure.in: Ditto.
        *  mips/configure: Regenerated.
        *  mips/crt0_cygmon.S: New file.
        *  mips/cygmon.c: Ditto.
        *  mips/pmon.S: Minor formatting and copyright changes.
        *  mips/crt0.S: Ditto.
@
text
@d63 7
a69 7
  asm volatile ( "
          move $4, %1
          move $5, %2
          move $6, %3
          move $7, %4
          syscall 
          nop
@

