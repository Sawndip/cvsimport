head	1.3;
access;
symbols
	newlib-2_2_0:1.3.0.2
	newlib-2_1_0:1.3
	newlib-2_0_0:1.3
	newlib-1_20_0:1.2
	newlib-1_19_0:1.1;
locks; strict;
comment	@ * @;


1.3
date	2012.10.02.22.55.10;	author dj;	state Exp;
branches;
next	1.2;

1.2
date	2011.05.27.10.46.48;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	2010.07.23.17.52.37;	author jjohnstn;	state Exp;
branches;
next	;


desc
@@


1.3
log
@* libc/sys/sysnecv850/sbrk.c (_sbrk): Change heap_start to be an
array of undefined size, to avoid problems when compiled with
-msda=4.

* v850/sbrk.c (_sbrk): Change heap_start to be an array of
undefined size, to avoid problems when compiled with -msda=4.
@
text
@#include <_ansi.h>
#include <sys/types.h>
#include <sys/stat.h>
#include "sys/syscall.h"

caddr_t
_sbrk (int incr)
{
  extern char   heap_start[];		/* Defined by the linker script. */
  static char * heap_end = NULL;
  char *        prev_heap_end;
  char *        sp = (char *) & sp;

  if (heap_end == NULL)
    heap_end = heap_start;

  prev_heap_end = heap_end;

  if (heap_end + incr > sp)
    {
#define MESSAGE "Heap and stack collision\n"
      _write (1, MESSAGE, sizeof MESSAGE);
      abort ();
    }

  heap_end += incr;

  return (caddr_t) prev_heap_end;
}
@


1.2
log
@	* v8500/sbrk.c (_sbrk): Tidy code.
	Base start of heap on the "heap_start" symbol.

	* libc/sys/sysnecv850/sbrk.c (_sbrk): Tidy code.
	Base start of heap on the "heap_start" symbol.
@
text
@d9 1
a9 1
  extern char   heap_start;		/* Defined by the linker script. */
d15 1
a15 1
    heap_end = & heap_start;
@


1.1
log
@
2010-07-23  Naveen.H.S  <naveenh1@@kpitcummins.com>
            Gina Verlekar <gina.verlekar@@kpitcummins.com>

        Moving files from libc/sys/sysnecv850 to libgloss/v850

        * libgloss/libnosys/configure: Regenerated.
        * libgloss/libnosys/configure.in: Compact v850 support to v850*-*-*.
        * libgloss/libnosys/configure: Regenerated.
        * libgloss/configure.in: Add libgloss support for v850.
        * libgloss/configure: Regenerated.
        * libgloss/v850/access.c: New file.
        * libgloss/v850/aclocal.m4: New.
        * libgloss/v850/chmod.c: New.
        * libgloss/v850/chown.c: New.
        * libgloss/v850/close.c: New.
        * libgloss/v850/configure: New.
        * libgloss/v850/configure.in: New.
        * libgloss/v850/crt0.S: New.
        * libgloss/v850/crt1.c: New.
        * libgloss/v850/execv.c: New.
        * libgloss/v850/execve.c: New.
        * libgloss/v850/_exit.c: New.
        * libgloss/v850/fork.c: New.
        * libgloss/v850/fstat.c: New.
        * libgloss/v850/getpid.c: New.
        * libgloss/v850/gettime.c: New.
        * libgloss/v850/isatty.c: New.
        * libgloss/v850/kill.c: New.
        * libgloss/v850/link.c: New.
        * libgloss/v850/lseek.c: New.
        * libgloss/v850/Makefile.in: New.
        * libgloss/v850/open.c: New.
        * libgloss/v850/pipe.c: New.
        * libgloss/v850/read.c: New.
        * libgloss/v850/sbrk.c: New.
        * libgloss/v850/sim.ld: New.
        * libgloss/v850/stat.c: New.
        * libgloss/v850/time.c: New.
        * libgloss/v850/times.c: New.
        * libgloss/v850/trap.S: New.
        * libgloss/v850/unlink.c: New.
        * libgloss/v850/utime.c: New.
        * libgloss/v850/wait.c: New.
        * libgloss/v850/write.c: New.
@
text
@a5 6
int errno;

int __trap0 (int function, int p1, int p2, int p3);

#define TRAP0(f, p1, p2, p3) __trap0(f, (int)(p1), (int)(p2), (int)(p3))

d9 7
a15 8
  extern char end;		/* Defined by the linker */
  static char *heap_end;
  char *prev_heap_end;
#if 0
  char *sp = (char *)stack_ptr;
#else
  char *sp = (char *)&sp;
#endif
a16 4
  if (heap_end == 0)
    {
      heap_end = &end;
    }
d18 1
d21 2
a22 1
      _write (1, "Heap and stack collision\n", 25);
d25 1
d27 1
@

