head	1.4;
access;
symbols
	newlib-2_2_0:1.4.0.10
	newlib-2_1_0:1.4
	newlib-2_0_0:1.4
	newlib-1_20_0:1.4
	newlib-1_19_0:1.4
	newlib-1_18_0:1.4
	newlib-1_17_0-arc:1.4.0.8
	binutils-arc-20080908-branch:1.4.0.6
	binutils-arc-20080908-branchpoint:1.4
	newlib-1_17_0:1.4
	newlib-1_16_0:1.4
	newlib-1_15_0:1.4
	newlib-csl-coldfire-4_1-32:1.4
	newlib-csl-sourcerygxx-4_1-32:1.4
	newlib-csl-innovasic-fido-3_4_4-33:1.4
	newlib-csl-coldfire-4_1-30:1.4
	newlib-csl-sourcerygxx-4_1-30:1.4
	newlib-csl-coldfire-4_1-28:1.4
	newlib-csl-sourcerygxx-4_1-28:1.4
	newlib-csl-arm-2006q3-27:1.4
	newlib-csl-sourcerygxx-4_1-27:1.4
	newlib-csl-arm-2006q3-26:1.4
	newlib-csl-sourcerygxx-4_1-26:1.4
	newlib-csl-sourcerygxx-4_1-24:1.4
	newlib-csl-sourcerygxx-4_1-23:1.4
	newlib-csl-sourcerygxx-4_1-21:1.4
	newlib-csl-arm-2006q3-21:1.4
	newlib-csl-arm-2006q3-19:1.4
	newlib-csl-sourcerygxx-4_1-19:1.4
	newlib-csl-sourcerygxx-4_1-18:1.4
	newlib-csl-sourcerygxx-3_4_4-25:1.4
	newlib-csl-sourcerygxx-4_1-17:1.4
	newlib-csl-sourcerygxx-4_1-14:1.4
	newlib-csl-sourcerygxx-4_1-13:1.4
	newlib-csl-sourcerygxx-4_1-12:1.4
	newlib-csl-sourcerygxx-4_1-9:1.4
	newlib-csl-sourcerygxx-4_1-8:1.4
	newlib-csl-sourcerygxx-4_1-7:1.4
	newlib-csl-arm-2006q1-6:1.4
	newlib-csl-sourcerygxx-4_1-6:1.4
	newlib-csl-sourcerygxx-4_1-5:1.4
	newlib-csl-sourcerygxx-4_1-4:1.4
	newlib-autotools-branch:1.4.0.4
	newlib-csl-20060320-branch:1.4.0.2
	newlib-csl-20060320-branchpoint:1.4
	newlib-1_14_0:1.4
	newlib-csl-arm-2005-q1b:1.4
	newlib-csl-arm-2005-q1a:1.4
	newlib-1_13_0:1.4
	csl-arm-2004-q3:1.4
	csl-arm-2004-q1a:1.3
	csl-arm-2004-q1:1.3
	newlib-1_12_0:1.3
	csl-arm-2003-q4:1.3
	newlib-1_11_0:1.2
	cygnus_cvs_20020108_pre:1.1
	newlib-1_10_0:1.1
	newlib-1_9_0:1.1;
locks; strict;
comment	@# @;


1.4
date	2004.08.25.16.30.16;	author corinna;	state Exp;
branches;
next	1.3;

1.3
date	2003.08.08.16.00.13;	author jjohnstn;	state Exp;
branches;
next	1.2;

1.2
date	2002.10.25.19.18.46;	author jjohnstn;	state Exp;
branches;
next	1.1;

1.1
date	2000.03.17.22.48.50;	author ranjith;	state Exp;
branches;
next	;


desc
@@


1.4
log
@	* i386/cygmon.ld (.text): Fix alignment.
	(.rodata): Handle .rodata.* sections.
@
text
@STARTUP(cygmon-crt0.o)
ENTRY(__start)
GROUP(-lcygmon -lc -lcygmon -lgcc)
SEARCH_DIR(.)
__DYNAMIC  =  0;

/*
 * Allocate the stack to be at the top of memory, since the stack
 * grows down
 */
PROVIDE (__stack = 0x500000);

/*
 * Initalize some symbols to be zero so we can reference them in the
 * crt0 without core dumping. These functions are all optional, but
 * we do this so we can have our crt0 always use them if they exist. 
 * This is so BSPs work better when using the crt0 installed with gcc.
 * We have to initalize them twice, so we multiple object file
 * formats, as some prepend an underscore.
 */
PROVIDE (hardware_init_hook = 0);
PROVIDE (software_init_hook = 0);
PROVIDE (__mem_start = 0x100000);
PROVIDE (___mem_start = 0x100000);
SECTIONS
{	
  . = 0x100000;
  .text : {
     _ftext = . ;
    *(.init)
     eprol  =  .;
    *(.text)
    PROVIDE (__runtime_reloc_start = .);
    *(.rel.sdata)
    PROVIDE (__runtime_reloc_stop = .);
    *(.fini)
    . = ALIGN(4);
     __CTOR_LIST__ = .;
    CONSTRUCTORS
    LONG(-1)
    *(.ctors)
    LONG(0)
    __CTOR_END__ = .;
    __DTOR_LIST__ = .;
    LONG(-1)
    *(.dtors)
     LONG(0)
    __DTOR_END__ = .;
    PROVIDE(_etext  =  .);
    PROVIDE(__etext  =  .);
  }
  . = .;
  .rdata : {
    *(.rdata)
  }
  .rodata : {
    *(.rodata)
    *(.rodata.*)
  }
  .eh_frame :
  {
    PROVIDE (__EH_FRAME_BEGIN__ = .);
    *(.eh_frame)
    PROVIDE (__EH_FRAME_END__ = .);
  }
  _fdata = ALIGN(16);
  .data : {
    *(.data)
    *(.gcc_except_table)
    *(.gcc_exc)
  }
  . = ALIGN(8);
  _gp = . + 0x8000;
  __global = . + 0x8000;
  .lit8 : {
    *(.lit8)
  }
  .lit4 : {
    *(.lit4)
  }
  .sdata : {
    *(.sdata)
  }
  . = ALIGN(4);
   PROVIDE(_edata  =  .);
   PROVIDE(__edata  =  .);
   fbss = .;
   _fbss = .;
  .sbss : {
    PROVIDE(__bss_start = .);
    *(.sbss)
    *(.scommon)
  }
  .bss : {
    *(.bss)
    *(COMMON)
    PROVIDE(__bss_end = .);
  }
  PROVIDE(_end = .);
  PROVIDE(__end = .);
}
@


1.3
log
@
2003-08-08  Mark Salter <msalter@@redhat.com>

        * i386/cygmon.ld: Add 4 byte alignment to __CTOR_LIST__

        Bernd Schmidt  <bernds@@redhat.com>

        * i386/cygmon.ld: Add entry for .rodata.
@
text
@d37 1
d58 1
@


1.2
log
@
2002-10-25  Bernd Schmidt  <bernds@@redhat.com>

        * i386/cygmon.ld: Add entry for .gcc_except_table.

2000-10-25  Mark Salter  <msalter@@redhat.com>

        * i386/cygmon-crt0.S: Use __USER_LABEL_PREFIX__ for symbols. Always
        use __start for start symbol.
        * i386/cygmon-salib.c: Don't build __do_global_[cd]tors for AOUT.
        Disable file I/O extensions to make Plum Hall happy.
        * i386/cygmon.ld: Set __start as entry point.
        * i386/Makefile.in: Support IS_AOUT.
        * i386/configure.in: Support IS_AOUT.
        * i386/configure: Regenerated.
        * i386/cygmon-salib.c:
        * i386/cygmon-gmon.c (_mcount): It's _etext.
@
text
@d55 10
a64 1
   _fdata = ALIGN(16);
@


1.1
log
@20000317 sourceware import
@
text
@d2 1
a2 1
ENTRY(_start)
d48 2
a49 2
     etext  =  .;
     _etext  =  .;
d58 2
d74 2
a75 2
   edata  =  .;
   _edata  =  .;
d79 1
a83 1
    __bss_start = . ;
d86 1
a86 1
    __bss_end = . ;
d88 2
a89 2
   end = .;
   _end = .;
@

