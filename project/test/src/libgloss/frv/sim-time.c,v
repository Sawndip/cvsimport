head	1.2;
access;
symbols
	newlib-2_2_0:1.2.0.6
	newlib-2_1_0:1.2
	newlib-2_0_0:1.2
	newlib-1_20_0:1.2
	newlib-1_19_0:1.2
	newlib-1_18_0:1.2
	newlib-1_17_0-arc:1.2.0.4
	binutils-arc-20080908-branch:1.2.0.2
	binutils-arc-20080908-branchpoint:1.2
	newlib-1_17_0:1.2
	newlib-1_16_0:1.2
	newlib-1_15_0:1.1
	newlib-csl-coldfire-4_1-32:1.1
	newlib-csl-sourcerygxx-4_1-32:1.1
	newlib-csl-innovasic-fido-3_4_4-33:1.1
	newlib-csl-coldfire-4_1-30:1.1
	newlib-csl-sourcerygxx-4_1-30:1.1
	newlib-csl-coldfire-4_1-28:1.1
	newlib-csl-sourcerygxx-4_1-28:1.1
	newlib-csl-arm-2006q3-27:1.1
	newlib-csl-sourcerygxx-4_1-27:1.1
	newlib-csl-arm-2006q3-26:1.1
	newlib-csl-sourcerygxx-4_1-26:1.1
	newlib-csl-sourcerygxx-4_1-24:1.1
	newlib-csl-sourcerygxx-4_1-23:1.1
	newlib-csl-sourcerygxx-4_1-21:1.1
	newlib-csl-arm-2006q3-21:1.1
	newlib-csl-arm-2006q3-19:1.1
	newlib-csl-sourcerygxx-4_1-19:1.1
	newlib-csl-sourcerygxx-4_1-18:1.1
	newlib-csl-sourcerygxx-3_4_4-25:1.1
	newlib-csl-sourcerygxx-4_1-17:1.1
	newlib-csl-sourcerygxx-4_1-14:1.1
	newlib-csl-sourcerygxx-4_1-13:1.1
	newlib-csl-sourcerygxx-4_1-12:1.1
	newlib-csl-sourcerygxx-4_1-9:1.1
	newlib-csl-sourcerygxx-4_1-8:1.1
	newlib-csl-sourcerygxx-4_1-7:1.1
	newlib-csl-arm-2006q1-6:1.1
	newlib-csl-sourcerygxx-4_1-6:1.1
	newlib-csl-sourcerygxx-4_1-5:1.1
	newlib-csl-sourcerygxx-4_1-4:1.1
	newlib-autotools-branch:1.1.0.4
	newlib-csl-20060320-branch:1.1.0.2
	newlib-csl-20060320-branchpoint:1.1
	newlib-1_14_0:1.1
	newlib-csl-arm-2005-q1b:1.1
	newlib-csl-arm-2005-q1a:1.1
	newlib-1_13_0:1.1
	csl-arm-2004-q3:1.1
	csl-arm-2004-q1a:1.1
	csl-arm-2004-q1:1.1
	newlib-1_12_0:1.1
	csl-arm-2003-q4:1.1
	newlib-1_11_0:1.1;
locks; strict;
comment	@ * @;


1.2
date	2007.07.06.17.00.13;	author jjohnstn;	state Exp;
branches;
next	1.1;

1.1
date	2002.06.18.21.19.17;	author brolley;	state Exp;
branches;
next	;


desc
@@


1.2
log
@
2007-07-06  Jeff Johnston  <jjohnstn@@redhat.com>

        * arm/syscalls.c (gettimeofday): Change to POSIX signature
        where second argument is passed as void *.
        * bfin/syscalls.c (gettimeofday): Ditto.
        * cris/gensyscalls (gettimeofday): Ditto.
        * cris/linunistd.h (gettimeofday): Ditto.
        * crx/time.c (gettimeofday): Ditto.
        * frv/sim-time.c (gettimeofday): Ditto.
        * i386/cygmon-salib.c (gettimeofday): Ditto.
        * libnosys/gettod.c (gettimeofday): Ditto.
        * m68k/io-gettimeofday.c (gettimeofday): Ditto.
        * sparc/cygmon-salib.c (gettimeofday): Ditto.
        * spu/gettimeofday.c (gettimeofday): Ditto.
@
text
@/* sim-time.c -- stubs so clock can be linked in.
 *
 * Copyright (c) 2002 Red Hat, Inc
 *
 * The authors hereby grant permission to use, copy, modify, distribute,
 * and license this software and its documentation for any purpose, provided
 * that existing copyright notices are retained in all copies and that this
 * notice is included verbatim in any distributions. No written agreement,
 * license, or royalty fee is required for any of the authorized uses.
 * Modifications to this software may be copyrighted by their authors
 * and need not follow the licensing terms described here, provided that
 * the new terms are clearly indicated on the first page of each file where
 * they apply.
 */
#include <errno.h>
#include <sys/time.h>
#include <sys/times.h>
#include "glue.h"

/*
 * time -- simulator interface to return current time in seconds.
 */
__asm__ ("\
	.text\n\
	.globl	_sim_time\n\
	.type	_sim_time,@@function\n\
_sim_time:\n\
	setlos	#18, gr7\n\
	tira	gr0, #0\n\
	ret\n\
.Lsim:\n\
	.size	_sim_time,.Lsim-_sim_time");

extern time_t _sim_time (void) __asm__("_sim_time");


/*
 * time -- return current time in seconds.
 */
time_t
_DEFUN (time, time (t),
	time_t *t)
{
  time_t ret = _sim_time ();

  if (t)
    *t = ret;

  return ret;
}

/*
 * _times -- no clock, so return an error.
 */
int
_DEFUN (_times, _times (buf),
	struct tms *buf)
{
  errno = EINVAL;
  return (-1);
}

/*
 * _gettimeofday -- implement in terms of time, which means we can't return the
 * microseconds.
 */
int
_DEFUN (_gettimeofday, _gettimeofday (tv, tz),
	struct timeval *tv _AND
	void *tzvp)
{
  struct timezone *tz = tzvp;
  if (tz)
    tz->tz_minuteswest = tz->tz_dsttime = 0;

  tv->tv_usec = 0;
  tv->tv_sec = _sim_time ();
  return 0;
}
@


1.1
log
@2002-06-18  Dave Brolley  <brolley@@redhat.com>

	From Catherine Moore, Michael Meissner, Richard Sandiford:
	* configure.in: Support frv*-*-*.
	* frv/Makefile.in: New file.
	* frv/configure: New file.
	* frv/configure.in: New file.
	* frv/crt0.S: New file.
	* frv/fstat.c: New file.
	* frv/getpid.c: New file.
	* frv/isatty.c: New file.
	* frv/kill.c: New file.
	* frv/print.c: New file.
	* frv/putnum.c: New file.
	* frv/sbrk.c: New file.
	* frv/sim-close.S: New file.
	* frv/sim-exit.S: New file.
	* frv/sim-inbyte.c: New file.
	* frv/sim-lseek.S: New file.
	* frv/sim-open.S: New file.
	* frv/sim-read.S: New file.
	* frv/sim-time.c: New file.
	* frv/sim-unlink.S: New file.
	* frv/sim-write.S: New file.
	* frv/stat.c: New file.
@
text
@d70 1
a70 1
	struct timezone *tz)
d72 1
@

