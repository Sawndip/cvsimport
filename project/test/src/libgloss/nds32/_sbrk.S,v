head	1.2;
access;
symbols
	newlib-2_2_0:1.2.0.2;
locks; strict;
comment	@# @;


1.2
date	2014.03.21.21.17.43;	author jjohnstn;	state Exp;
branches;
next	1.1;

1.1
date	2014.03.21.20.55.53;	author jjohnstn;	state Exp;
branches;
next	;


desc
@@


1.2
log
@
2014-03-21  Sabrini Ni  <sabrinanitw@@gmail.com>

        * nds32/_sbrk.S: Add .size and .type directive.
@
text
@/*
Copyright (c) 2013 Andes Technology Corporation.
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

    Redistributions of source code must retain the above copyright
    notice, this list of conditions and the following disclaimer.

    Redistributions in binary form must reproduce the above copyright
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.

    The name of the company may not be used to endorse or promote
    products derived from this software without specific prior written
    permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL RED HAT INCORPORATED BE LIABLE FOR ANY
DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/
#include "../syscall.h"
#include "syscall_extra.h"

	.extern	_impure_ptr	/* The first element is _errno.  */
	.extern	_end
	.global	_sbrk
	.type	_sbrk, @@function

	.text
	.align	2
_sbrk:
	/* Get the value stored in heap_end (Top of Heap). If the value is zero,
	   initialize it with the ending of bss section and leave a 1024-byte
	   room to do low memory action.  */
	l.w	$r1, heap_end
	bnez	$r1, .L0
        /* Note: leave 1024 byte to do low memory action.  */
	la	$r1, _end + 1024
	s.w	$r1, heap_end

.L0:
	/* Try to increments heap_end by $r0 bytes. Check if collision happens ?
	   If collision happens, -1 is returned and errno is set to ENOMEM.
	   Otherwise, save new value to heap_end and return the previous
	   heap_end. */

	/* Make sure new heap_end is aligned on 8-byte boundary.  */
	addi	$r0, $r0, 7
	srli	$r0, $r0, 3
	slli	$r0, $r0, 3

	add	$r0, $r1, $r0	/* Set $r0 as new heap_end.  */
	slt	$r2, $sp, $r0	/* Set $r2 if $sp is lower than heap_end.  */
	bnez	$r2, .Lerror	/* Branch if collision happens.  */

	s.w	$r0, heap_end	/* Save new value to heap_end.  */
	move	$r0, $r1	/* Return the previous heap_end.  */
	ret

.Lerror:
	movi	$r0, 12
	l.w     $r15, _impure_ptr
	swi     $r0, [$r15]     /* Set errno.  */
	movi	$r0, -1		/* Reture value is -1.  */
	ret

	.size	_sbrk, .-_sbrk
	.section	.bss
	.align	2
heap_end:
	.word	0
@


1.1
log
@
2014-03-21  Sabrini Ni  <sabrinanitw@@gmail.com>

        * nds32/Makefile.in: Alter filename.
        * nds32/syscall_argv.S: Rename to _argv.S
        * nds32/syscall_argvlen.S: Rename to _argvlen.S
        * nds32/syscall_chdir.S: Rename to _chdir.S
        * nds32/syscall_chmod.S: Rename to _chmod.S
        * nds32/syscall_close.S: Rename to _close.S
        * nds32/syscall_exit.S: Rename to _exit.S
        * nds32/syscall_fstat.S: Rename to _fstat.S
        * nds32/syscall_getpid.S: Rename to _getpid.S
        * nds32/syscall_gettimeofday.S: Rename to _gettimeofday.S
        * nds32/syscall_isatty.S: Rename to _isatty.S
        * nds32/syscall_kill.S: Rename to _kill.S
        * nds32/syscall_link.S: Rename to _link.S
        * nds32/syscall_lseek.S: Rename to _lseek.S
        * nds32/syscall_open.S: Rename to _open.S
        * nds32/syscall_read.S: Rename to _read.S
        * nds32/syscall_rename.S: Rename to _rename.S
        * nds32/syscall_sbrk.S: Rename to _sbrk.S
        * nds32/syscall_stat.S: Rename to _stat.S
        * nds32/syscall_system.S: Rename to _system.S
        * nds32/syscall_time.S: Rename to _time.S
        * nds32/syscall_times.S: Rename to _times.S
        * nds32/syscall_unlink.S: Rename to _unlink.S
        * nds32/syscall_utime.S: Rename to _utime.S
        * nds32/syscall_write.S: Rename to _write.S
@
text
@d36 1
d76 1
@

