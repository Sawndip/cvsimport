head	1.1;
access;
symbols
	newlib-2_2_0:1.1.0.10
	newlib-2_1_0:1.1
	newlib-2_0_0:1.1
	newlib-1_20_0:1.1
	newlib-1_19_0:1.1
	newlib-1_18_0:1.1
	newlib-1_17_0-arc:1.1.0.8
	binutils-arc-20080908-branch:1.1.0.6
	binutils-arc-20080908-branchpoint:1.1
	newlib-1_17_0:1.1
	newlib-1_16_0:1.1
	newlib-1_15_0:1.1
	newlib-csl-coldfire-4_1-32:1.1
	newlib-csl-sourcerygxx-4_1-32:1.1
	newlib-csl-innovasic-fido-3_4_4-33:1.1
	newlib-csl-coldfire-4_1-30:1.1
	newlib-csl-sourcerygxx-4_1-30:1.1
	newlib-csl-coldfire-4_1-28:1.1
	newlib-csl-sourcerygxx-4_1-28:1.1
	newlib-csl-arm-2006q3-27:1.1
	newlib-csl-sourcerygxx-4_1-27:1.1
	newlib-csl-arm-2006q3-26:1.1
	newlib-csl-sourcerygxx-4_1-26:1.1
	newlib-csl-sourcerygxx-4_1-24:1.1
	newlib-csl-sourcerygxx-4_1-23:1.1
	newlib-csl-sourcerygxx-4_1-21:1.1
	newlib-csl-arm-2006q3-21:1.1
	newlib-csl-arm-2006q3-19:1.1
	newlib-csl-sourcerygxx-4_1-19:1.1
	newlib-csl-sourcerygxx-4_1-18:1.1
	newlib-csl-sourcerygxx-3_4_4-25:1.1
	newlib-csl-sourcerygxx-4_1-17:1.1
	newlib-csl-sourcerygxx-4_1-14:1.1
	newlib-csl-sourcerygxx-4_1-13:1.1
	newlib-csl-sourcerygxx-4_1-12:1.1
	newlib-csl-sourcerygxx-4_1-9:1.1
	newlib-csl-sourcerygxx-4_1-8:1.1
	newlib-csl-sourcerygxx-4_1-7:1.1
	newlib-csl-arm-2006q1-6:1.1
	newlib-csl-sourcerygxx-4_1-6:1.1
	newlib-csl-sourcerygxx-4_1-5:1.1
	newlib-csl-sourcerygxx-4_1-4:1.1
	newlib-autotools-branch:1.1.0.4
	newlib-csl-20060320-branch:1.1.0.2
	newlib-csl-20060320-branchpoint:1.1
	newlib-1_14_0:1.1
	newlib-1_13_0:1.1;
locks; strict;
comment	@# @;


1.1
date	2004.10.05.20.00.52;	author jjohnstn;	state Exp;
branches;
next	;


desc
@@


1.1
log
@
2004-10-05  Tomer Levi  <Tomer.Levi@@nsc.com>

        * configure.in: Support crx-*-*.
        * configure: regenerate.
        * crx/_exit.c: New file.
        * crx/_getenv.c: Ditto.
        * crx/_rename: Ditto.
        * crx/close.c: Ditto.
        * crx/configure.in: Ditto.
        * crx/crti.S: Ditto.
        * crx/crtn.S: Ditto.
        * crx/crt0.S: Ditto.
        * crx/dvz_hndl.c: Ditto.
        * crx/flg_hndl.c: Ditto.
        * crx/fstat.c: Ditto.
        * crx/getpid.c: Ditto.
        * crx/iad_hndl.c: Ditto.
        * crx/intable.c: Ditto.
        * crx/isatty.c: Ditto.
        * crx/kill.c: Ditto.
        * crx/lseek.c: Ditto.
        * crx/Makefile.in: Ditto.
        * crx/open.c: Ditto.
        * crx/putnum.c: Ditto.
        * crx/read.c: Ditto.
        * crx/sbrk.c: Ditto.
        * crx/sim.ld: Ditto.
        * crx/stat.c: Ditto.
        * crx/svc_hndl.c: Ditto.
        * crx/time.c: Ditto.
        * crx/und_hndl.c: Ditto.
        * crx/unlink.c: Ditto.
        * crx/write.c: Ditto.
@
text
@#
#

DESTDIR =

VPATH = @@srcdir@@ @@srcdir@@/..
srcdir = @@srcdir@@
objdir = .
srcroot = $(srcdir)/../..
objroot = $(objdir)/../..

prefix = @@prefix@@
exec_prefix = @@exec_prefix@@

host_alias = @@host_alias@@
target_alias = @@target_alias@@

bindir = @@bindir@@
libdir = @@libdir@@
tooldir = $(exec_prefix)/$(target_alias)

INSTALL = @@INSTALL@@
INSTALL_PROGRAM = @@INSTALL_PROGRAM@@
INSTALL_DATA = @@INSTALL_DATA@@

# Multilib support variables.
# TOP is used instead of MULTI{BUILD,SRC}TOP.
MULTIDIRS =
MULTISUBDIR =

SHELL =	/bin/sh

CC = @@CC@@

AS = @@AS@@
AR = @@AR@@
LD = @@LD@@
RANLIB = @@RANLIB@@

OBJDUMP = `if [ -f ${objroot}/../binutils/objdump ] ; \
	then echo ${objroot}/../binutils/objdump ; \
	else t='$(program_transform_name)'; echo objdump | sed -e $$t ; fi`
OBJCOPY = `if [ -f ${objroot}/../binutils/objcopy ] ; \
	then echo ${objroot}/../binutils/objcopy ; \
	else t='$(program_transform_name)'; echo objcopy | sed -e $$t ; fi`

# Here is all of the handlers stuff
H_SCRIPTS	=
H_BSP	= libh.a
H_OBJS	= intable.o dvz_hndl.o flg_hndl.o iad_hndl.o svc_hndl.o und_hndl.o
H_TEST	= hndl-test
H_INSTALL	= install-hndl

# Here is all of the simulator stuff
SIM_SCRIPTS	= sim.ld
SIM_BSP	= libsim.a
SIM_OBJS = _exit.o close.o _getenv.o lseek.o open.o read.o \
	_rename.o sbrk.o time.o unlink.o write.o \
	stat.o putnum.o kill.o getpid.o isatty.o fstat.o
SIM_TEST	= sim-test
SIM_INSTALL	= install-sim

# Here is all of the CRT stuff
CRT	= crti.o crtn.o crt0.o
CRT_INSTALL = install-crt

# Host specific makefile fragment comes in here.
@@host_makefile_frag@@

#
# build a test program for each target board. Just trying to get
# it to link is a good test, so we ignore all the errors for now.
#
all: ${CRT} ${SIM_BSP} ${H_BSP}

#
# here's where we build the board support packages for each target
#
${H_BSP}: ${H_OBJS}
	${AR} ${ARFLAGS} ${H_BSP} ${H_OBJS}
	${RANLIB} ${H_BSP}

${SIM_BSP}: ${SIM_OBJS}
	${AR} ${ARFLAGS} ${SIM_BSP} ${SIM_OBJS}
	${RANLIB} ${SIM_BSP}

#
# here's where we build the test programs for each target
#
.PHONY: test
test:	${SIM_TEST} ${H_TEST} 

hndl-test:	hndl-test.x hndl-test.dis

hndl-test.x:	test.o ${H_BSP}
	${CC} ${LDFLAGS_FOR_TARGET} -L${objdir} \
	test.o \
	-o hndl-test.x ${LIBS_FOR_TARGET} -lc ${H_BSP} -Wl,-T${SIM_SCRIPTS}

hndl-test.dis:	hndl-test.x
	${OBJDUMP} -d hndl-test.x > hndl-test.dis


sim-test:	sim-test.x sim-test.dis

sim-test.x:	test.o ${SIM_BSP}
	${CC} ${LDFLAGS_FOR_TARGET} -L${objdir} \
	test.o \
	-o sim-test.x ${LIBS_FOR_TARGET} -lc ${SIM_BSP} -Wl,-T${SIM_SCRIPTS}

sim-test.dis:	sim-test.x
	${OBJDUMP} -d sim-test.x > sim-test.dis

#
#
#
.c.S:
	${CC} ${CFLAGS_FOR_TARGET} -c $<

clean mostlyclean:
	rm -f a.out core *.i *.o *-test *.srec *.dis *.x $(SIM_BSP) $(H_BSP)

distclean maintainer-clean realclean: clean
	rm -f Makefile config.status *~

.PHONY: install info install-info clean-info
install: ${CRT_INSTALL} ${SIM_INSTALL} ${H_INSTALL}

install-crt:
	set -e; for x in ${CRT} ; do\
	  ${INSTALL_DATA} $$x $(DESTDIR)${tooldir}/lib${MULTISUBDIR}/$$x; \
	done

install-sim:
	for x in ${SIM_BSP} ; do\
	 ${INSTALL_PROGRAM} $${x} $(DESTDIR)${tooldir}/lib${MULTISUBDIR}/$$x; \
	done
	for x in ${SIM_SCRIPTS}; do\
	 ${INSTALL_DATA} ${srcdir}/$${x} $(DESTDIR)${tooldir}/lib${MULTISUBDIR}/$$x; \
	done

install-hndl:
	for x in ${H_BSP}; do\
	 ${INSTALL_PROGRAM} $${x} $(DESTDIR)${tooldir}/lib${MULTISUBDIR}/$$x; \
	done

doc:
info:
install-info:
clean-info:

Makefile: Makefile.in config.status @@host_makefile_frag_path@@
	$(SHELL) config.status

config.status: configure
	$(SHELL) config.status --recheck
@
