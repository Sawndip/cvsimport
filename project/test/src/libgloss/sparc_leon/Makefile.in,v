head	1.1;
access;
symbols
	newlib-2_2_0:1.1.0.2
	newlib-2_1_0:1.1
	newlib-2_0_0:1.1
	newlib-1_20_0:1.1;
locks; strict;
comment	@# @;


1.1
date	2011.12.15.22.58.40;	author jjohnstn;	state Exp;
branches;
next	;


desc
@@


1.1
log
@
2011-12-15  Konrad Eisele <konrad@@gaisler.com>

        * configure.in: Add SPARC LEON support.
        * configure: Regenerated.
        * sparc_leon/asm-leon/amba.h, sparc_leon/asm-leon/asmmacro.h,
        sparc_leon/asm-leon/clock.h, sparc_leon/asm-leon/contextswitch.h,
        sparc_leon/asm-leon/elfmacro.h, sparc_leon/asm-leon/head.h,
        sparc_leon/asm-leon/irq.h, sparc_leon/asm-leon/jiffies.h,
        sparc_leon/asm-leon/lambapp.h, sparc_leon/asm-leon/lambapp_devs.h,
        sparc_leon/asm-leon/leon.h, sparc_leon/asm-leon/leon3.h,
        sparc_leon/asm-leon/leonbare_debug.h, sparc_leon/asm-leon/leonbare_kernel.h,
        sparc_leon/asm-leon/leonbare_kernel_queue.h, sparc_leon/asm-leon/leoncompat.h,
        sparc_leon/asm-leon/leondbg.h, sparc_leon/asm-leon/leonstack.h,
        sparc_leon/asm-leon/liblocks.h, sparc_leon/asm-leon/linkage.h,
        sparc_leon/asm-leon/param.h, sparc_leon/asm-leon/queue.h,
        sparc_leon/asm-leon/spinlock.h, sparc_leon/asm-leon/stack.h,
        sparc_leon/asm-leon/time.h, sparc_leon/asm-leon/timer.h,
        sparc_leon/asm-leon/types.h, sparc_leon/asm-leon/winmacros.h:
        New file.
        * sparc_leon/Makefile.in, sparc_leon/_exit.c,
        sparc_leon/amba.c, sparc_leon/amba_dbg.c,
        sparc_leon/amba_driver.c, sparc_leon/amba_scan.c,
        sparc_leon/asm-leon, sparc_leon/bdinit.S,
        sparc_leon/busscan.S, sparc_leon/cacheA.S,
        sparc_leon/catch_interrupt.c, sparc_leon/catch_interrupt_mvt.c,
        sparc_leon/catch_interrupt_pending.c, sparc_leon/catch_interrupt_svt.c,
        sparc_leon/configure.in,
        sparc_leon/console.c, sparc_leon/console_dbg.c,
        sparc_leon/console_init.c, sparc_leon/contextswitch.c,
        sparc_leon/contextswitch_asm.S, sparc_leon/crt0.S,
        sparc_leon/crti.S, sparc_leon/crtn.S,
        sparc_leon/etrap.S, sparc_leon/etrap_fast.S,
        sparc_leon/fpu.S, sparc_leon/gettimeofday.c,
        sparc_leon/initcalls.c, sparc_leon/io.c,
        sparc_leon/irqinstall.S, sparc_leon/irqtrap.S,
        sparc_leon/irqtrap_fast.S, sparc_leon/jiffies.c,
        sparc_leon/kernel.c, sparc_leon/kernel_context.S,
        sparc_leon/kernel_debug.c, sparc_leon/kernel_debug_var.c,
        sparc_leon/kernel_mm.c, sparc_leon/kernel_mutex.c,
        sparc_leon/kernel_queue.c, sparc_leon/kernel_sched.c,
        sparc_leon/kernel_thread.c, sparc_leon/lcpuinit.S,
        sparc_leon/locore.S, sparc_leon/locore_atexit.c,
        sparc_leon/locore_clean.S, sparc_leon/locore_mvt.S,
        sparc_leon/locore_mvt_reset.S, sparc_leon/locore_svt.S,
        sparc_leon/locore_svt_reset.S, sparc_leon/locore_svtdisp.S,
        sparc_leon/locore_var.S, sparc_leon/locore_var_svt.S,
        sparc_leon/mmu_asm.S, sparc_leon/mutex.c,
        sparc_leon/nocache.S, sparc_leon/pnpinit.c,
        sparc_leon/pnpinit_malloc.c, sparc_leon/pnpinit_simple.c,
        sparc_leon/regwin.S, sparc_leon/regwin_patch.c,
        sparc_leon/regwin_slow.S, sparc_leon/regwinflush.S,
        sparc_leon/rtc.c, sparc_leon/rtrap.S,
        sparc_leon/rtrap_fast.S, sparc_leon/stop.S,
        sparc_leon/timer.c, sparc_leon/times.c:
        New file
        * sparc_leon/configure: Regenerate
@
text
@# Makefile for libgloss/sparc_leon. This is the board support
# code for the various sparc leon targets.

DESTDIR =
VPATH = @@srcdir@@
srcdir = @@srcdir@@
objdir = .
srcroot = $(srcdir)/../..
objroot = $(objdir)/../..

prefix = @@prefix@@
exec_prefix = @@exec_prefix@@

host_alias = @@host_alias@@
target_alias = @@target_alias@@

bindir = @@bindir@@
libdir = @@libdir@@
tooldir = $(exec_prefix)/$(target_alias)
mkinstalldirs = $(SHELL) $(srcroot)/mkinstalldirs

# Multilib support variables.
# TOP is used instead of MULTI{BUILD,SRC}TOP.
MULTIDIRS =
MULTISUBDIR =
MULTIDO = true
MULTICLEAN = true

INSTALL = @@INSTALL@@
INSTALL_PROGRAM = @@INSTALL_PROGRAM@@
INSTALL_DATA = @@INSTALL_DATA@@

SHELL = /bin/sh

CC = @@CC@@

AS = @@AS@@
AR = @@AR@@
LD = @@LD@@
RANLIB = @@RANLIB@@
AR_FLAGS = qrv

OBJDUMP = `if [ -f ${objroot}/../binutils/objdump ] ; \
	then echo ${objroot}/../binutils/objdump ; \
	else t='$(program_transform_name)'; echo objdump | sed -e $$t ; fi`
OBJCOPY = `if [ -f ${objroot}/../binutils/objcopy ] ; \
	then echo ${objroot}/../binutils/objcopy ; \
	else t='$(program_transform_name)'; echo objcopy | sed -e $$t ; fi`

LEON_BSP  = libleonbare.a
LEON_OBJS = etrap.o rtrap.o etrap_fast.o rtrap_fast.o irqinstall.o regwin.o \
	    regwinflush.o fpu.o bdinit.o contextswitch.o \
            busscan.o irqtrap_fast.o catch_interrupt.o catch_interrupt_svt.o \
	    catch_interrupt_mvt.o catch_interrupt_pending.o gettimeofday.o \
	    times.o rtc.o lcpuinit.o console_init.o console.o console_dbg.o \
	    contextswitch.o contextswitch_asm.o _exit.o amba.o amba_dbg.o \
	    amba_scan.o amba_driver.o timer.o mutex.o locore.o locore_clean.o \
	    locore_var.o locore_var_svt.o jiffies.o \
            mmu_asm.o locore_svtdisp.o locore_mvt_reset.o locore_svt_reset.o stop.o initcalls.o \
	    regwin_patch.o cacheA.o nocache.o  

LEONBARE_THREADS = liblbthread.a
LEONBARE_THREADS_OBJS = kernel.o kernel_debug.o kernel_debug_var.o kernel_context.o \
			kernel_mutex.o kernel_thread.o kernel_sched.o kernel_queue.o \
			kernel_mm.o

LOCOREATEXIT = locore_atexit.o
LEON_SMALLC = libsmall.a

PNP=pnpinit.o
PNP_S=pnpinit_simple.o
LEON_ALL = $(LEON_BSP) $(LEON_SMALLC) $(LEONBARE_THREADS) $(PNP) $(PNP_S) crti.o crtn.o 

LOCORESVT = locore_svt.o 
LOCOREMVT = locore_mvt.o
CRT0 = crt0.o
OBJS = close.o fstat.o getpid.o isatty.o kill.o \
	lseek.o open.o print.o putnum.o read.o sbrk.o stat.o \
	unlink.o write.o io.o kernel.o kernel_debug.o kernel_debug_var.o kernel_context.o
#link.o 

#### Host specific Makefile fragment comes in here.
@@host_makefile_frag@@

all: stmp-targ-include $(CRT0) $(LOCOREMVT) $(LOCORESVT) $(LEON_ALL)

$(CRT0): $(srcdir)/crt0.S 
	$(CC) $(CFLAGS_FOR_TARGET) $(CFLAGS) $(INCLUDES) -o $@@ -c $(srcdir)/crt0.S

$(LEON_BSP): $(OBJS) $(LEON_OBJS)
	@@rm -f $@@
	${AR} ${AR_FLAGS} $@@ $(OBJS) $(LEON_OBJS) 
	${RANLIB} $@@

$(LEON_SMALLC): $(LOCOREATEXIT)
	@@rm -f $@@
	${AR} ${AR_FLAGS} $@@ $(LOCOREATEXIT)
	${RANLIB} $@@

$(LEONBARE_THREADS): $(LEONBARE_THREADS_OBJS)
	@@rm -f $@@
	${AR} ${AR_FLAGS} $@@ $(LEONBARE_THREADS_OBJS)
	${RANLIB} $@@

install: 
	$(INSTALL_DATA) $(CRT0)     $(DESTDIR)$(tooldir)/lib${MULTISUBDIR}/$(CRT0)
	$(INSTALL_DATA) $(LOCORESVT)  $(DESTDIR)$(tooldir)/lib${MULTISUBDIR}/$(LOCORESVT)
	$(INSTALL_DATA) $(LOCOREMVT)  $(DESTDIR)$(tooldir)/lib${MULTISUBDIR}/$(LOCOREMVT)
	$(INSTALL_DATA) $(PNP)  $(DESTDIR)$(tooldir)/lib${MULTISUBDIR}/$(PNP)
	$(INSTALL_DATA) $(PNP_S)  $(DESTDIR)$(tooldir)/lib${MULTISUBDIR}/$(PNP_S)
	$(INSTALL_DATA) $(LEON_BSP) $(DESTDIR)$(tooldir)/lib${MULTISUBDIR}/$(LEON_BSP)
	$(INSTALL_DATA) $(LEON_SMALLC) $(DESTDIR)$(tooldir)/lib${MULTISUBDIR}/$(LEON_SMALLC)
	$(INSTALL_DATA) $(LEONBARE_THREADS) $(DESTDIR)$(tooldir)/lib${MULTISUBDIR}/$(LEONBARE_THREADS)
	if [ -z "$(MULTISUBDIR)" ]; then \
	 $(mkinstalldirs) $(DESTDIR)$(tooldir)/include/asm-leon; \
	 for i in $(srcdir)/asm-leon/*.h; do \
	  if [ -f $$i ]; then \
	   $(INSTALL_DATA) $$i $(DESTDIR)$(tooldir)/include/asm-leon/`basename $$i` || exit $$?; \
	  else true; fi ; \
	 done; \
	else true; fi

stmp-targ-include: $(srcdir)/asm-leon/*
	if [ -d ${objroot}/newlib/targ-include/asm-leon ]; then \
		rm -rf ${objroot}/newlib/targ-include/asm-leon; \
	else true; fi ; \
	if [ -d ${objroot}/newlib/targ-include ]; then \
		cp -r $(srcdir)/asm-leon ${objroot}/newlib/targ-include/asm-leon; \
	else true; fi ; \
	touch $@@

all-recursive: stmp-targ-include

# Make a simple test case to test the linker script, startup code, and
# I/O code
#
test: 
	@@echo Done...

# target specific makefile fragment comes in here.
# @@target_makefile_frag@@

clean mostlyclean:
	rm -f *.o *.a *.map *.x

distclean maintainer-clean realclean: clean
	rm -f Makefile config.cache config.log config.status

.PHONY: info dvi doc install-info clean-info
info doc dvi:
install-info:
clean-info:

# target specific makefile fragment comes in here.
@@target_makefile_frag@@

Makefile: Makefile.in config.status @@host_makefile_frag_path@@ @@target_makefile_frag_path@@
	$(SHELL) config.status

config.status: configure
	$(SHELL) config.status --recheck
@
