head	1.11;
access;
symbols
	sid-snapshot-20180601:1.11
	sid-snapshot-20180501:1.11
	sid-snapshot-20180401:1.11
	sid-snapshot-20180301:1.11
	sid-snapshot-20180201:1.11
	sid-snapshot-20180101:1.11
	sid-snapshot-20171201:1.11
	sid-snapshot-20171101:1.11
	sid-snapshot-20171001:1.11
	sid-snapshot-20170901:1.11
	sid-snapshot-20170801:1.11
	sid-snapshot-20170701:1.11
	sid-snapshot-20170601:1.11
	sid-snapshot-20170501:1.11
	sid-snapshot-20170401:1.11
	sid-snapshot-20170301:1.11
	sid-snapshot-20170201:1.11
	sid-snapshot-20170101:1.11
	sid-snapshot-20161201:1.11
	sid-snapshot-20161101:1.11
	sid-snapshot-20160901:1.11
	sid-snapshot-20160801:1.11
	sid-snapshot-20160701:1.11
	sid-snapshot-20160601:1.11
	sid-snapshot-20160501:1.11
	sid-snapshot-20160401:1.11
	sid-snapshot-20160301:1.11
	sid-snapshot-20160201:1.11
	sid-snapshot-20160101:1.11
	sid-snapshot-20151201:1.11
	sid-snapshot-20151101:1.11
	sid-snapshot-20151001:1.11
	sid-snapshot-20150901:1.11
	sid-snapshot-20150801:1.11
	sid-snapshot-20150701:1.11
	sid-snapshot-20150601:1.11
	sid-snapshot-20150501:1.11
	sid-snapshot-20150401:1.11
	sid-snapshot-20150301:1.11
	sid-snapshot-20150201:1.11
	sid-snapshot-20150101:1.11
	sid-snapshot-20141201:1.11
	sid-snapshot-20141101:1.11
	sid-snapshot-20141001:1.11
	sid-snapshot-20140901:1.11
	sid-snapshot-20140801:1.11
	sid-snapshot-20140701:1.11
	sid-snapshot-20140601:1.11
	sid-snapshot-20140501:1.11
	sid-snapshot-20140401:1.11
	sid-snapshot-20140301:1.11
	sid-snapshot-20140201:1.11
	sid-snapshot-20140101:1.11
	sid-snapshot-20131201:1.11
	sid-snapshot-20131101:1.11
	sid-snapshot-20131001:1.11
	binutils-2_24-branch:1.11.0.26
	binutils-2_24-branchpoint:1.11
	binutils-2_21_1:1.11
	sid-snapshot-20130901:1.11
	gdb_7_6_1-2013-08-30-release:1.11
	sid-snapshot-20130801:1.11
	sid-snapshot-20130701:1.11
	sid-snapshot-20130601:1.11
	sid-snapshot-20130501:1.11
	gdb_7_6-2013-04-26-release:1.11
	sid-snapshot-20130401:1.11
	binutils-2_23_2:1.11
	gdb_7_6-branch:1.11.0.24
	gdb_7_6-2013-03-12-branchpoint:1.11
	sid-snapshot-20130301:1.11
	sid-snapshot-20130201:1.11
	sid-snapshot-20130101:1.11
	sid-snapshot-20121201:1.11
	gdb_7_5_1-2012-11-29-release:1.11
	binutils-2_23_1:1.11
	sid-snapshot-20121101:1.11
	binutils-2_23:1.11
	sid-snapshot-20121001:1.11
	sid-snapshot-20120901:1.11
	gdb_7_5-2012-08-17-release:1.11
	sid-snapshot-20120801:1.11
	binutils-2_23-branch:1.11.0.22
	binutils-2_23-branchpoint:1.11
	gdb_7_5-branch:1.11.0.20
	gdb_7_5-2012-07-18-branchpoint:1.11
	sid-snapshot-20120701:1.11
	sid-snapshot-20120601:1.11
	sid-snapshot-20120501:1.11
	binutils-2_22_branch:1.11.0.18
	gdb_7_4_1-2012-04-26-release:1.11
	sid-snapshot-20120401:1.11
	sid-snapshot-20120301:1.11
	sid-snapshot-20120201:1.11
	gdb_7_4-2012-01-24-release:1.11
	sid-snapshot-20120101:1.11
	gdb_7_4-branch:1.11.0.16
	gdb_7_4-2011-12-13-branchpoint:1.11
	sid-snapshot-20111201:1.11
	binutils-2_22:1.11
	sid-snapshot-20111101:1.11
	sid-snapshot-20111001:1.11
	binutils-2_22-branch:1.11.0.14
	binutils-2_22-branchpoint:1.11
	gdb_7_3_1-2011-09-04-release:1.11
	sid-snapshot-20110901:1.11
	sid-snapshot-20110801:1.11
	gdb_7_3-2011-07-26-release:1.11
	sid-snapshot-20110701:1.11
	sid-snapshot-20110601:1.11
	sid-snapshot-20110501:1.11
	gdb_7_3-branch:1.11.0.12
	gdb_7_3-2011-04-01-branchpoint:1.11
	sid-snapshot-20110401:1.11
	sid-snapshot-20110301:1.11
	sid-snapshot-20110201:1.11
	sid-snapshot-20110101:1.11
	binutils-2_21:1.11
	sid-snapshot-20101201:1.11
	binutils-2_21-branch:1.11.0.10
	binutils-2_21-branchpoint:1.11
	sid-snapshot-20101101:1.11
	sid-snapshot-20101001:1.11
	binutils-2_20_1:1.11
	gdb_7_2-2010-09-02-release:1.11
	sid-snapshot-20100901:1.11
	sid-snapshot-20100801:1.11
	gdb_7_2-branch:1.11.0.8
	gdb_7_2-2010-07-07-branchpoint:1.11
	sid-snapshot-20100701:1.11
	sid-snapshot-20100601:1.11
	sid-snapshot-20100501:1.11
	sid-snapshot-20100401:1.11
	gdb_7_1-2010-03-18-release:1.11
	sid-snapshot-20100301:1.11
	gdb_7_1-branch:1.11.0.6
	gdb_7_1-2010-02-18-branchpoint:1.11
	sid-snapshot-20100201:1.11
	sid-snapshot-20100101:1.11
	gdb_7_0_1-2009-12-22-release:1.11
	sid-snapshot-20091201:1.11
	sid-snapshot-20091101:1.11
	binutils-2_20:1.11
	gdb_7_0-2009-10-06-release:1.11
	sid-snapshot-20091001:1.11
	gdb_7_0-branch:1.11.0.4
	gdb_7_0-2009-09-16-branchpoint:1.11
	arc-sim-20090309:1.10
	binutils-arc-20081103-branch:1.10.0.30
	binutils-arc-20081103-branchpoint:1.10
	binutils-2_20-branch:1.11.0.2
	binutils-2_20-branchpoint:1.11
	sid-snapshot-20090901:1.10
	sid-snapshot-20090801:1.10
	msnyder-checkpoint-072509-branch:1.10.0.28
	msnyder-checkpoint-072509-branchpoint:1.10
	sid-snapshot-20090701:1.10
	dje-cgen-play1-branch:1.10.0.26
	dje-cgen-play1-branchpoint:1.10
	sid-snapshot-20090601:1.10
	sid-snapshot-20090501:1.10
	sid-snapshot-20090401:1.10
	arc-20081103-branch:1.10.0.24
	arc-20081103-branchpoint:1.10
	arc-insight_6_8-branch:1.10.0.22
	arc-insight_6_8-branchpoint:1.10
	insight_6_8-branch:1.10.0.20
	insight_6_8-branchpoint:1.10
	sid-snapshot-20090301:1.10
	binutils-2_19_1:1.10
	sid-snapshot-20090201:1.10
	sid-snapshot-20090101:1.10
	reverse-20081226-branch:1.10.0.18
	reverse-20081226-branchpoint:1.10
	sid-snapshot-20081201:1.10
	multiprocess-20081120-branch:1.10.0.16
	multiprocess-20081120-branchpoint:1.10
	sid-snapshot-20081101:1.10
	binutils-2_19:1.10
	sid-snapshot-20081001:1.10
	reverse-20080930-branch:1.10.0.14
	reverse-20080930-branchpoint:1.10
	binutils-2_19-branch:1.10.0.12
	binutils-2_19-branchpoint:1.10
	sid-snapshot-20080901:1.10
	sid-snapshot-20080801:1.10
	reverse-20080717-branch:1.10.0.10
	reverse-20080717-branchpoint:1.10
	sid-snapshot-20080701:1.10
	msnyder-reverse-20080609-branch:1.10.0.8
	msnyder-reverse-20080609-branchpoint:1.10
	drow-reverse-20070409-branch:1.9.0.24
	drow-reverse-20070409-branchpoint:1.9
	sid-snapshot-20080601:1.10
	sid-snapshot-20080501:1.10
	sid-snapshot-20080403:1.10
	sid-snapshot-20080401:1.10
	gdb_6_8-2008-03-27-release:1.10
	sid-snapshot-20080301:1.10
	gdb_6_8-branch:1.10.0.6
	gdb_6_8-2008-02-26-branchpoint:1.10
	sid-snapshot-20080201:1.10
	sid-snapshot-20080101:1.10
	sid-snapshot-20071201:1.10
	sid-snapshot-20071101:1.10
	gdb_6_7_1-2007-10-29-release:1.10
	gdb_6_7-2007-10-10-release:1.10
	sid-snapshot-20071001:1.10
	gdb_6_7-branch:1.10.0.4
	gdb_6_7-2007-09-07-branchpoint:1.10
	binutils-2_18:1.10
	binutils-2_18-branch:1.10.0.2
	binutils-2_18-branchpoint:1.10
	insight_6_6-20070208-release:1.9
	binutils-csl-coldfire-4_1-32:1.9
	binutils-csl-sourcerygxx-4_1-32:1.9
	gdb_6_6-2006-12-18-release:1.9
	binutils-csl-innovasic-fido-3_4_4-33:1.9
	binutils-csl-sourcerygxx-3_4_4-32:1.6
	binutils-csl-coldfire-4_1-30:1.9
	binutils-csl-sourcerygxx-4_1-30:1.9
	binutils-csl-coldfire-4_1-28:1.9
	binutils-csl-sourcerygxx-4_1-29:1.9
	binutils-csl-sourcerygxx-4_1-28:1.9
	gdb_6_6-branch:1.9.0.22
	gdb_6_6-2006-11-15-branchpoint:1.9
	binutils-csl-arm-2006q3-27:1.9
	binutils-csl-sourcerygxx-4_1-27:1.9
	binutils-csl-arm-2006q3-26:1.9
	binutils-csl-sourcerygxx-4_1-26:1.9
	binutils-csl-sourcerygxx-4_1-25:1.9
	binutils-csl-sourcerygxx-4_1-24:1.9
	binutils-csl-sourcerygxx-4_1-23:1.9
	insight_6_5-20061003-release:1.9
	gdb-csl-symbian-6_4_50_20060226-12:1.9
	binutils-csl-sourcerygxx-4_1-21:1.9
	binutils-csl-arm-2006q3-21:1.9
	binutils-csl-sourcerygxx-4_1-22:1.9
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.9
	binutils-csl-sourcerygxx-4_1-20:1.9
	binutils-csl-arm-2006q3-19:1.9
	binutils-csl-sourcerygxx-4_1-19:1.9
	binutils-csl-sourcerygxx-4_1-18:1.9
	binutils-csl-renesas-4_1-9:1.9
	gdb-csl-sourcerygxx-3_4_4-25:1.7
	binutils-csl-sourcerygxx-3_4_4-25:1.6
	nickrob-async-20060828-mergepoint:1.9
	gdb-csl-symbian-6_4_50_20060226-11:1.9
	binutils-csl-renesas-4_1-8:1.9
	binutils-csl-renesas-4_1-7:1.9
	binutils-csl-renesas-4_1-6:1.9
	gdb-csl-sourcerygxx-4_1-17:1.9
	binutils-csl-sourcerygxx-4_1-17:1.9
	gdb-csl-20060226-branch-local-2:1.9
	gdb-csl-sourcerygxx-4_1-14:1.9
	binutils-csl-sourcerygxx-4_1-14:1.9
	binutils-csl-sourcerygxx-4_1-15:1.9
	gdb-csl-sourcerygxx-4_1-13:1.9
	binutils-csl-sourcerygxx-4_1-13:1.9
	binutils-2_17:1.9
	gdb-csl-sourcerygxx-4_1-12:1.9
	binutils-csl-sourcerygxx-4_1-12:1.9
	gdb-csl-sourcerygxx-3_4_4-21:1.9
	binutils-csl-sourcerygxx-3_4_4-21:1.9
	gdb_6_5-20060621-release:1.9
	binutils-csl-wrs-linux-3_4_4-24:1.6
	binutils-csl-wrs-linux-3_4_4-23:1.6
	gdb-csl-sourcerygxx-4_1-9:1.9
	binutils-csl-sourcerygxx-4_1-9:1.9
	gdb-csl-sourcerygxx-4_1-8:1.9
	binutils-csl-sourcerygxx-4_1-8:1.9
	gdb-csl-sourcerygxx-4_1-7:1.9
	binutils-csl-sourcerygxx-4_1-7:1.9
	gdb-csl-arm-2006q1-6:1.9
	binutils-csl-arm-2006q1-6:1.9
	gdb-csl-sourcerygxx-4_1-6:1.9
	binutils-csl-sourcerygxx-4_1-6:1.9
	binutils-csl-wrs-linux-3_4_4-22:1.6
	gdb-csl-symbian-6_4_50_20060226-10:1.9
	gdb-csl-symbian-6_4_50_20060226-9:1.9
	gdb-csl-symbian-6_4_50_20060226-8:1.9
	gdb-csl-coldfire-4_1-11:1.9
	binutils-csl-coldfire-4_1-11:1.9
	gdb-csl-sourcerygxx-3_4_4-19:1.9
	binutils-csl-sourcerygxx-3_4_4-19:1.9
	gdb-csl-coldfire-4_1-10:1.9
	gdb_6_5-branch:1.9.0.20
	gdb_6_5-2006-05-14-branchpoint:1.9
	binutils-csl-coldfire-4_1-10:1.9
	gdb-csl-sourcerygxx-4_1-5:1.9
	binutils-csl-sourcerygxx-4_1-5:1.9
	nickrob-async-20060513-branch:1.9.0.18
	nickrob-async-20060513-branchpoint:1.9
	gdb-csl-sourcerygxx-4_1-4:1.9
	binutils-csl-sourcerygxx-4_1-4:1.9
	msnyder-reverse-20060502-branch:1.9.0.16
	msnyder-reverse-20060502-branchpoint:1.9
	binutils-csl-wrs-linux-3_4_4-21:1.6
	gdb-csl-morpho-4_1-4:1.9
	binutils-csl-morpho-4_1-4:1.9
	gdb-csl-sourcerygxx-3_4_4-17:1.9
	binutils-csl-sourcerygxx-3_4_4-17:1.9
	binutils-csl-wrs-linux-3_4_4-20:1.6
	readline_5_1-import-branch:1.9.0.14
	readline_5_1-import-branchpoint:1.9
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.9
	binutils-2_17-branch:1.9.0.12
	binutils-2_17-branchpoint:1.9
	gdb-csl-symbian-20060226-branch:1.9.0.10
	gdb-csl-symbian-20060226-branchpoint:1.9
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.9
	msnyder-reverse-20060331-branch:1.9.0.8
	msnyder-reverse-20060331-branchpoint:1.9
	binutils-csl-2_17-branch:1.9.0.6
	binutils-csl-2_17-branchpoint:1.9
	gdb-csl-available-20060303-branch:1.9.0.4
	gdb-csl-available-20060303-branchpoint:1.9
	gdb-csl-20060226-branch:1.9.0.2
	gdb-csl-20060226-branchpoint:1.9
	gdb_6_4-20051202-release:1.7
	msnyder-fork-checkpoint-branch:1.7.0.10
	msnyder-fork-checkpoint-branchpoint:1.7
	gdb-csl-gxxpro-6_3-branch:1.7.0.8
	gdb-csl-gxxpro-6_3-branchpoint:1.7
	gdb_6_4-branch:1.7.0.6
	gdb_6_4-2005-11-01-branchpoint:1.7
	gdb-csl-arm-20051020-branch:1.7.0.4
	gdb-csl-arm-20051020-branchpoint:1.7
	binutils-csl-gxxpro-3_4-branch:1.6.0.70
	binutils-csl-gxxpro-3_4-branchpoint:1.6
	binutils-2_16_1:1.6
	msnyder-tracepoint-checkpoint-branch:1.7.0.2
	msnyder-tracepoint-checkpoint-branchpoint:1.7
	gdb-csl-arm-20050325-2005-q1b:1.6
	binutils-csl-arm-2005q1b:1.6
	binutils-2_16:1.6
	gdb-csl-arm-20050325-2005-q1a:1.6
	binutils-csl-arm-2005q1a:1.6
	csl-arm-20050325-branch:1.6.0.68
	csl-arm-20050325-branchpoint:1.6
	binutils-csl-arm-2005q1-branch:1.6.0.66
	binutils-csl-arm-2005q1-branchpoint:1.6
	binutils-2_16-branch:1.6.0.64
	binutils-2_16-branchpoint:1.6
	csl-arm-2004-q3d:1.6
	gdb_6_3-20041109-release:1.6
	gdb_6_3-branch:1.6.0.60
	gdb_6_3-20041019-branchpoint:1.6
	csl-arm-2004-q3:1.6
	drow_intercu-merge-20040921:1.6
	drow_intercu-merge-20040915:1.6
	jimb-gdb_6_2-e500-branch:1.6.0.62
	jimb-gdb_6_2-e500-branchpoint:1.6
	gdb_6_2-20040730-release:1.6
	gdb_6_2-branch:1.6.0.58
	gdb_6_2-2004-07-10-gmt-branchpoint:1.6
	gdb_6_1_1-20040616-release:1.6
	binutils-2_15:1.6
	binutils-2_15-branchpoint:1.6
	csl-arm-2004-q1a:1.6
	csl-arm-2004-q1:1.6
	gdb_6_1-2004-04-05-release:1.6
	drow_intercu-merge-20040402:1.6
	drow_intercu-merge-20040327:1.6
	ezannoni_pie-20040323-branch:1.6.0.56
	ezannoni_pie-20040323-branchpoint:1.6
	cagney_tramp-20040321-mergepoint:1.6
	cagney_tramp-20040309-branch:1.6.0.54
	cagney_tramp-20040309-branchpoint:1.6
	gdb_6_1-branch:1.6.0.52
	gdb_6_1-2004-03-01-gmt-branchpoint:1.6
	drow_intercu-20040221-branch:1.6.0.50
	drow_intercu-20040221-branchpoint:1.6
	binutils-2_15-branch:1.6.0.48
	cagney_bfdfile-20040213-branch:1.6.0.46
	cagney_bfdfile-20040213-branchpoint:1.6
	drow-cplus-merge-20040208:1.6
	carlton_dictionary-20040126-merge:1.6
	cagney_bigcore-20040122-branch:1.6.0.44
	cagney_bigcore-20040122-branchpoint:1.6
	drow-cplus-merge-20040113:1.6
	csl-arm-2003-q4:1.6
	drow-cplus-merge-20031224:1.6
	drow-cplus-merge-20031220:1.6
	carlton_dictionary-20031215-merge:1.6
	drow-cplus-merge-20031214:1.6
	carlton-dictionary-20031111-merge:1.6
	gdb_6_0-2003-10-04-release:1.6
	kettenis_sparc-20030918-branch:1.6.0.42
	kettenis_sparc-20030918-branchpoint:1.6
	carlton_dictionary-20030917-merge:1.6
	ezannoni_pie-20030916-branchpoint:1.6
	ezannoni_pie-20030916-branch:1.6.0.40
	cagney_x86i386-20030821-branch:1.6.0.38
	cagney_x86i386-20030821-branchpoint:1.6
	carlton_dictionary-20030805-merge:1.6
	carlton_dictionary-20030627-merge:1.6
	gdb_6_0-branch:1.6.0.36
	gdb_6_0-2003-06-23-branchpoint:1.6
	jimb-ppc64-linux-20030613-branch:1.6.0.34
	jimb-ppc64-linux-20030613-branchpoint:1.6
	binutils-2_14:1.6
	cagney_convert-20030606-branch:1.6.0.32
	cagney_convert-20030606-branchpoint:1.6
	cagney_writestrings-20030508-branch:1.6.0.30
	cagney_writestrings-20030508-branchpoint:1.6
	jimb-ppc64-linux-20030528-branch:1.6.0.28
	jimb-ppc64-linux-20030528-branchpoint:1.6
	carlton_dictionary-20030523-merge:1.6
	cagney_fileio-20030521-branch:1.6.0.26
	cagney_fileio-20030521-branchpoint:1.6
	kettenis_i386newframe-20030517-mergepoint:1.6
	jimb-ppc64-linux-20030509-branch:1.6.0.24
	jimb-ppc64-linux-20030509-branchpoint:1.6
	kettenis_i386newframe-20030504-mergepoint:1.6
	carlton_dictionary-20030430-merge:1.6
	binutils-2_14-branch:1.6.0.22
	binutils-2_14-branchpoint:1.6
	kettenis_i386newframe-20030419-branch:1.6.0.20
	kettenis_i386newframe-20030419-branchpoint:1.6
	carlton_dictionary-20030416-merge:1.6
	cagney_frameaddr-20030409-mergepoint:1.6
	kettenis_i386newframe-20030406-branch:1.6.0.18
	kettenis_i386newframe-20030406-branchpoint:1.6
	cagney_frameaddr-20030403-branchpoint:1.6
	cagney_frameaddr-20030403-branch:1.6.0.16
	cagney_framebase-20030330-mergepoint:1.6
	cagney_framebase-20030326-branch:1.6.0.14
	cagney_framebase-20030326-branchpoint:1.6
	cagney_lazyid-20030317-branch:1.6.0.12
	cagney_lazyid-20030317-branchpoint:1.6
	kettenis-i386newframe-20030316-mergepoint:1.6
	offbyone-20030313-branch:1.6.0.10
	offbyone-20030313-branchpoint:1.6
	kettenis-i386newframe-20030308-branch:1.6.0.8
	kettenis-i386newframe-20030308-branchpoint:1.6
	carlton_dictionary-20030305-merge:1.6
	cagney_offbyone-20030303-branch:1.6.0.6
	cagney_offbyone-20030303-branchpoint:1.6
	carlton_dictionary-20030207-merge:1.6
	interps-20030202-branch:1.6.0.4
	interps-20030202-branchpoint:1.6
	cagney-unwind-20030108-branch:1.6.0.2
	cagney-unwind-20030108-branchpoint:1.6
	binutils-2_13_2_1:1.3.18.1
	binutils-2_13_2:1.3.18.1
	carlton_dictionary-20021223-merge:1.6
	gdb_5_3-2002-12-12-release:1.4
	carlton_dictionary-20021115-merge:1.5
	binutils-2_13_1:1.3.18.1
	kseitz_interps-20021105-merge:1.4
	kseitz_interps-20021103-merge:1.4
	drow-cplus-merge-20021020:1.4
	drow-cplus-merge-20021025:1.4
	carlton_dictionary-20021025-merge:1.4
	carlton_dictionary-20021011-merge:1.4
	drow-cplus-branch:1.4.0.12
	drow-cplus-branchpoint:1.4
	kseitz_interps-20020930-merge:1.4
	carlton_dictionary-20020927-merge:1.4
	carlton_dictionary-branch:1.4.0.10
	carlton_dictionary-20020920-branchpoint:1.4
	sid-20020905-branchpoint:1.4
	sid-20020905-branch:1.4.0.8
	gdb_5_3-branch:1.4.0.6
	gdb_5_3-2002-09-04-branchpoint:1.4
	kseitz_interps-20020829-merge:1.4
	cagney_sysregs-20020825-branch:1.4.0.4
	cagney_sysregs-20020825-branchpoint:1.4
	readline_4_3-import-branch:1.4.0.2
	readline_4_3-import-branchpoint:1.4
	binutils-2_13:1.3.18.1
	gdb_5_2_1-2002-07-23-release:1.3
	binutils-2_13-branchpoint:1.3
	binutils-2_13-branch:1.3.0.18
	kseitz_interps-20020528-branch:1.3.0.16
	kseitz_interps-20020528-branchpoint:1.3
	cagney_regbuf-20020515-branch:1.3.0.14
	cagney_regbuf-20020515-branchpoint:1.3
	binutils-2_12_1:1.3
	jimb-macro-020506-branch:1.3.0.12
	jimb-macro-020506-branchpoint:1.3
	gdb_5_2-2002-04-29-release:1.3
	binutils-2_12:1.3
	gdb_5_2-branch:1.3.0.10
	gdb_5_2-2002-03-03-branchpoint:1.3
	binutils-2_12-branch:1.3.0.8
	binutils-2_12-branchpoint:1.3
	gdb_5_1_1-2002-01-24-release:1.3
	gdb_5_1_0_1-2002-01-03-release:1.3
	cygnus_cvs_20020108_pre:1.3
	gdb_5_1_0_1-2002-01-03-branch:1.3.0.6
	gdb_5_1_0_1-2002-01-03-branchpoint:1.3
	gdb_5_1-2001-11-21-release:1.3
	gdb_s390-2001-09-26-branch:1.3.0.4
	gdb_s390-2001-09-26-branchpoint:1.3
	gdb_5_1-2001-07-29-branch:1.3.0.2
	gdb_5_1-2001-07-29-branchpoint:1.3
	binutils-2_11_2:1.2.4.1
	binutils-2_11_1:1.2.4.1
	binutils-2_11:1.2
	x86_64versiong3:1.2
	binutils-2_11-branch:1.2.0.4
	insight-precleanup-2001-01-01:1.2
	binutils_latest_snapshot:1.11
	gdb-premipsmulti-2000-06-06-branch:1.2.0.2
	gdb-premipsmulti-2000-06-06-branchpoint:1.2;
locks; strict;
comment	@ * @;


1.11
date	2009.09.02.07.20.29;	author amodra;	state Exp;
branches;
next	1.10;

1.10
date	2007.07.05.09.49.01;	author nickc;	state Exp;
branches;
next	1.9;

1.9
date	2006.02.23.14.49.32;	author hjl;	state Exp;
branches;
next	1.8;

1.8
date	2006.02.23.00.17.24;	author hjl;	state Exp;
branches;
next	1.7;

1.7
date	2005.05.07.07.34.29;	author nickc;	state Exp;
branches;
next	1.6;

1.6
date	2002.12.05.02.08.02;	author wilson;	state Exp;
branches;
next	1.5;

1.5
date	2002.11.07.14.33.48;	author nickc;	state Exp;
branches;
next	1.4;

1.4
date	2002.07.17.07.27.40;	author hjl;	state Exp;
branches
	1.4.10.1
	1.4.12.1;
next	1.3;

1.3
date	2001.03.13.22.58.35;	author nickc;	state Exp;
branches
	1.3.16.1
	1.3.18.1;
next	1.2;

1.2
date	2000.04.23.02.39.13;	author twall;	state Exp;
branches
	1.2.4.1;
next	1.1;

1.1
date	2000.04.21.20.22.23;	author wilson;	state Exp;
branches;
next	;

1.4.10.1
date	2002.11.15.19.19.25;	author carlton;	state Exp;
branches;
next	1.4.10.2;

1.4.10.2
date	2002.12.23.19.39.33;	author carlton;	state Exp;
branches;
next	;

1.4.12.1
date	2003.12.14.20.28.06;	author drow;	state Exp;
branches;
next	;

1.3.16.1
date	2002.07.22.21.47.19;	author kseitz;	state Exp;
branches;
next	;

1.3.18.1
date	2002.07.18.21.15.51;	author wilson;	state Exp;
branches;
next	;

1.2.4.1
date	2001.06.07.03.18.35;	author amodra;	state Exp;
branches;
next	;


desc
@@


1.11
log
@update copyright dates
@
text
@/* ia64-opc-b.c -- IA-64 `B' opcode table.
   Copyright 1998, 1999, 2000, 2002, 2005, 2006, 2007, 2009
   Free Software Foundation, Inc.
   Contributed by David Mosberger-Tang <davidm@@hpl.hp.com>

   This file is part of the GNU opcodes library.

   This library is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3, or (at your option)
   any later version.

   It is distributed in the hope that it will be useful, but WITHOUT
   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
   License for more details.

   You should have received a copy of the GNU General Public License
   along with this file; see the file COPYING.  If not, write to the
   Free Software Foundation, 51 Franklin Street - Fifth Floor, Boston,
   MA 02110-1301, USA.  */

#include "ia64-opc.h"

#define B0	IA64_TYPE_B, 0
#define B	IA64_TYPE_B, 1

/* instruction bit fields: */
#define bBtype(x)	(((ia64_insn) ((x) & 0x7)) << 6)
#define bD(x)		(((ia64_insn) ((x) & 0x1)) << 35)
#define bIh(x)		(((ia64_insn) ((x) & 0x1)) << 35)
#define bPa(x)		(((ia64_insn) ((x) & 0x1)) << 12)
#define bPr(x)		(((ia64_insn) ((x) & 0x3f)) << 0)
#define bWha(x)		(((ia64_insn) ((x) & 0x3)) << 33)
#define bWhb(x)		(((ia64_insn) ((x) & 0x3)) << 3)
#define bWhc(x)		(((ia64_insn) ((x) & 0x7)) << 32)
#define bX6(x)		(((ia64_insn) ((x) & 0x3f)) << 27)

#define mBtype		bBtype (-1)
#define mD		bD (-1)
#define mIh		bIh (-1)
#define mPa		bPa (-1)
#define mPr		bPr (-1)
#define mWha		bWha (-1)
#define mWhb		bWhb (-1)
#define mWhc		bWhc (-1)
#define mX6		bX6 (-1)

#define OpX6(a,b) 	(bOp (a) | bX6 (b)), (mOp | mX6)
#define OpPaWhaD(a,b,c,d) \
	(bOp (a) | bPa (b) | bWha (c) | bD (d)), (mOp | mPa | mWha | mD)
#define OpPaWhcD(a,b,c,d) \
	(bOp (a) | bPa (b) | bWhc (c) | bD (d)), (mOp | mPa | mWhc | mD)
#define OpBtypePaWhaD(a,b,c,d,e) \
	(bOp (a) | bBtype (b) | bPa (c) | bWha (d) | bD (e)), \
	(mOp | mBtype | mPa | mWha | mD)
#define OpBtypePaWhaDPr(a,b,c,d,e,f) \
	(bOp (a) | bBtype (b) | bPa (c) | bWha (d) | bD (e) | bPr (f)), \
	(mOp | mBtype | mPa | mWha | mD | mPr)
#define OpX6BtypePaWhaD(a,b,c,d,e,f) \
	(bOp (a) | bX6 (b) | bBtype (c) | bPa (d) | bWha (e) | bD (f)), \
	(mOp | mX6 | mBtype | mPa | mWha | mD)
#define OpX6BtypePaWhaDPr(a,b,c,d,e,f,g) \
   (bOp (a) | bX6 (b) | bBtype (c) | bPa (d) | bWha (e) | bD (f) | bPr (g)), \
	(mOp | mX6 | mBtype | mPa | mWha | mD | mPr)
#define OpIhWhb(a,b,c) \
	(bOp (a) | bIh (b) | bWhb (c)), \
	(mOp | mIh | mWhb)
#define OpX6IhWhb(a,b,c,d) \
	(bOp (a) | bX6 (b) | bIh (c) | bWhb (d)), \
	(mOp | mX6 | mIh | mWhb)

/* Used to initialise unused fields in ia64_opcode struct,
   in order to stop gcc from complaining.  */
#define EMPTY 0,0,NULL

struct ia64_opcode ia64_opcodes_b[] =
  {
    /* B-type instruction encodings (sorted according to major opcode) */

#define BR(a,b) \
      B0, OpX6BtypePaWhaDPr (0, 0x20, 0, a, 0, b, 0), {B2}, PSEUDO, 0, NULL
    {"br.few",		BR (0, 0)},
    {"br",		BR (0, 0)},
    {"br.few.clr",	BR (0, 1)},
    {"br.clr",		BR (0, 1)},
    {"br.many",		BR (1, 0)},
    {"br.many.clr",	BR (1, 1)},
#undef BR

#define BR(a,b,c,d,e)	B0, OpX6BtypePaWhaD (0, a, b, c, d, e), {B2}, EMPTY
#define BRP(a,b,c,d,e)	B0, OpX6BtypePaWhaD (0, a, b, c, d, e), {B2}, PSEUDO, 0, NULL
#define BRT(a,b,c,d,e,f) B0, OpX6BtypePaWhaD (0, a, b, c, d, e), {B2}, f, 0, NULL
    {"br.cond.sptk.few",	BR (0x20, 0, 0, 0, 0)},
    {"br.cond.sptk",		BRP (0x20, 0, 0, 0, 0)},
    {"br.cond.sptk.few.clr",	BR (0x20, 0, 0, 0, 1)},
    {"br.cond.sptk.clr",	BRP (0x20, 0, 0, 0, 1)},
    {"br.cond.spnt.few",	BR (0x20, 0, 0, 1, 0)},
    {"br.cond.spnt",		BRP (0x20, 0, 0, 1, 0)},
    {"br.cond.spnt.few.clr",	BR (0x20, 0, 0, 1, 1)},
    {"br.cond.spnt.clr",	BRP (0x20, 0, 0, 1, 1)},
    {"br.cond.dptk.few",	BR (0x20, 0, 0, 2, 0)},
    {"br.cond.dptk",		BRP (0x20, 0, 0, 2, 0)},
    {"br.cond.dptk.few.clr",	BR (0x20, 0, 0, 2, 1)},
    {"br.cond.dptk.clr",	BRP (0x20, 0, 0, 2, 1)},
    {"br.cond.dpnt.few",	BR (0x20, 0, 0, 3, 0)},
    {"br.cond.dpnt",		BRP (0x20, 0, 0, 3, 0)},
    {"br.cond.dpnt.few.clr",	BR (0x20, 0, 0, 3, 1)},
    {"br.cond.dpnt.clr",	BRP (0x20, 0, 0, 3, 1)},
    {"br.cond.sptk.many",	BR (0x20, 0, 1, 0, 0)},
    {"br.cond.sptk.many.clr",	BR (0x20, 0, 1, 0, 1)},
    {"br.cond.spnt.many",	BR (0x20, 0, 1, 1, 0)},
    {"br.cond.spnt.many.clr",	BR (0x20, 0, 1, 1, 1)},
    {"br.cond.dptk.many",	BR (0x20, 0, 1, 2, 0)},
    {"br.cond.dptk.many.clr",	BR (0x20, 0, 1, 2, 1)},
    {"br.cond.dpnt.many",	BR (0x20, 0, 1, 3, 0)},
    {"br.cond.dpnt.many.clr",	BR (0x20, 0, 1, 3, 1)},
    {"br.sptk.few",		BR (0x20, 0, 0, 0, 0)},
    {"br.sptk",			BRP (0x20, 0, 0, 0, 0)},
    {"br.sptk.few.clr",		BR (0x20, 0, 0, 0, 1)},
    {"br.sptk.clr",		BRP (0x20, 0, 0, 0, 1)},
    {"br.spnt.few",		BR (0x20, 0, 0, 1, 0)},
    {"br.spnt",			BRP (0x20, 0, 0, 1, 0)},
    {"br.spnt.few.clr",		BR (0x20, 0, 0, 1, 1)},
    {"br.spnt.clr",		BRP (0x20, 0, 0, 1, 1)},
    {"br.dptk.few",		BR (0x20, 0, 0, 2, 0)},
    {"br.dptk",			BRP (0x20, 0, 0, 2, 0)},
    {"br.dptk.few.clr",		BR (0x20, 0, 0, 2, 1)},
    {"br.dptk.clr",		BRP (0x20, 0, 0, 2, 1)},
    {"br.dpnt.few",		BR (0x20, 0, 0, 3, 0)},
    {"br.dpnt",			BRP (0x20, 0, 0, 3, 0)},
    {"br.dpnt.few.clr",		BR (0x20, 0, 0, 3, 1)},
    {"br.dpnt.clr",		BRP (0x20, 0, 0, 3, 1)},
    {"br.sptk.many",		BR (0x20, 0, 1, 0, 0)},
    {"br.sptk.many.clr",	BR (0x20, 0, 1, 0, 1)},
    {"br.spnt.many",		BR (0x20, 0, 1, 1, 0)},
    {"br.spnt.many.clr",	BR (0x20, 0, 1, 1, 1)},
    {"br.dptk.many",		BR (0x20, 0, 1, 2, 0)},
    {"br.dptk.many.clr",	BR (0x20, 0, 1, 2, 1)},
    {"br.dpnt.many",		BR (0x20, 0, 1, 3, 0)},
    {"br.dpnt.many.clr",	BR (0x20, 0, 1, 3, 1)},
    {"br.ia.sptk.few",		BR (0x20, 1, 0, 0, 0)},
    {"br.ia.sptk",		BRP (0x20, 1, 0, 0, 0)},
    {"br.ia.sptk.few.clr",	BR (0x20, 1, 0, 0, 1)},
    {"br.ia.sptk.clr",		BRP (0x20, 1, 0, 0, 1)},
    {"br.ia.spnt.few",		BR (0x20, 1, 0, 1, 0)},
    {"br.ia.spnt",		BRP (0x20, 1, 0, 1, 0)},
    {"br.ia.spnt.few.clr",	BR (0x20, 1, 0, 1, 1)},
    {"br.ia.spnt.clr",		BRP (0x20, 1, 0, 1, 1)},
    {"br.ia.dptk.few",		BR (0x20, 1, 0, 2, 0)},
    {"br.ia.dptk",		BRP (0x20, 1, 0, 2, 0)},
    {"br.ia.dptk.few.clr",	BR (0x20, 1, 0, 2, 1)},
    {"br.ia.dptk.clr",		BRP (0x20, 1, 0, 2, 1)},
    {"br.ia.dpnt.few",		BR (0x20, 1, 0, 3, 0)},
    {"br.ia.dpnt",		BRP (0x20, 1, 0, 3, 0)},
    {"br.ia.dpnt.few.clr",	BR (0x20, 1, 0, 3, 1)},
    {"br.ia.dpnt.clr",		BRP (0x20, 1, 0, 3, 1)},
    {"br.ia.sptk.many",		BR (0x20, 1, 1, 0, 0)},
    {"br.ia.sptk.many.clr",	BR (0x20, 1, 1, 0, 1)},
    {"br.ia.spnt.many",		BR (0x20, 1, 1, 1, 0)},
    {"br.ia.spnt.many.clr",	BR (0x20, 1, 1, 1, 1)},
    {"br.ia.dptk.many",		BR (0x20, 1, 1, 2, 0)},
    {"br.ia.dptk.many.clr",	BR (0x20, 1, 1, 2, 1)},
    {"br.ia.dpnt.many",		BR (0x20, 1, 1, 3, 0)},
    {"br.ia.dpnt.many.clr",	BR (0x20, 1, 1, 3, 1)},
    {"br.ret.sptk.few",		BRT (0x21, 4, 0, 0, 0, MOD_RRBS)},
    {"br.ret.sptk",		BRT (0x21, 4, 0, 0, 0, PSEUDO | MOD_RRBS)},
    {"br.ret.sptk.few.clr",	BRT (0x21, 4, 0, 0, 1, MOD_RRBS)},
    {"br.ret.sptk.clr",		BRT (0x21, 4, 0, 0, 1, PSEUDO | MOD_RRBS)},
    {"br.ret.spnt.few",		BRT (0x21, 4, 0, 1, 0, MOD_RRBS)},
    {"br.ret.spnt",		BRT (0x21, 4, 0, 1, 0, PSEUDO | MOD_RRBS)},
    {"br.ret.spnt.few.clr",	BRT (0x21, 4, 0, 1, 1, MOD_RRBS)},
    {"br.ret.spnt.clr",		BRT (0x21, 4, 0, 1, 1, PSEUDO | MOD_RRBS)},
    {"br.ret.dptk.few",		BRT (0x21, 4, 0, 2, 0, MOD_RRBS)},
    {"br.ret.dptk",		BRT (0x21, 4, 0, 2, 0, PSEUDO | MOD_RRBS)},
    {"br.ret.dptk.few.clr",	BRT (0x21, 4, 0, 2, 1, MOD_RRBS)},
    {"br.ret.dptk.clr",		BRT (0x21, 4, 0, 2, 1, PSEUDO | MOD_RRBS)},
    {"br.ret.dpnt.few",		BRT (0x21, 4, 0, 3, 0, MOD_RRBS)},
    {"br.ret.dpnt",		BRT (0x21, 4, 0, 3, 0, PSEUDO | MOD_RRBS)},
    {"br.ret.dpnt.few.clr",	BRT (0x21, 4, 0, 3, 1, MOD_RRBS)},
    {"br.ret.dpnt.clr",		BRT (0x21, 4, 0, 3, 1, PSEUDO | MOD_RRBS)},
    {"br.ret.sptk.many",	BRT (0x21, 4, 1, 0, 0, MOD_RRBS)},
    {"br.ret.sptk.many.clr",	BRT (0x21, 4, 1, 0, 1, MOD_RRBS)},
    {"br.ret.spnt.many",	BRT (0x21, 4, 1, 1, 0, MOD_RRBS)},
    {"br.ret.spnt.many.clr",	BRT (0x21, 4, 1, 1, 1, MOD_RRBS)},
    {"br.ret.dptk.many",	BRT (0x21, 4, 1, 2, 0, MOD_RRBS)},
    {"br.ret.dptk.many.clr",	BRT (0x21, 4, 1, 2, 1, MOD_RRBS)},
    {"br.ret.dpnt.many",	BRT (0x21, 4, 1, 3, 0, MOD_RRBS)},
    {"br.ret.dpnt.many.clr",	BRT (0x21, 4, 1, 3, 1, MOD_RRBS)},
#undef BR
#undef BRP
#undef BRT

    {"cover",		B0, OpX6 (0, 0x02), {0, }, NO_PRED | LAST | MOD_RRBS, 0, NULL},
    {"clrrrb",		B0, OpX6 (0, 0x04), {0, }, NO_PRED | LAST | MOD_RRBS, 0, NULL},
    {"clrrrb.pr",	B0, OpX6 (0, 0x05), {0, }, NO_PRED | LAST | MOD_RRBS, 0, NULL},
    {"rfi",		B0, OpX6 (0, 0x08), {0, }, NO_PRED | LAST | PRIV | MOD_RRBS, 0, NULL},
    {"bsw.0",		B0, OpX6 (0, 0x0c), {0, }, NO_PRED | LAST | PRIV, 0, NULL},
    {"bsw.1",		B0, OpX6 (0, 0x0d), {0, }, NO_PRED | LAST | PRIV, 0, NULL},
    {"epc",		B0, OpX6 (0, 0x10), {0, }, NO_PRED, 0, NULL},
    {"vmsw.0",		B0, OpX6 (0, 0x18), {0, }, NO_PRED | PRIV, 0, NULL},
    {"vmsw.1",		B0, OpX6 (0, 0x19), {0, }, NO_PRED | PRIV, 0, NULL},

    {"break.b",		B0, OpX6 (0, 0x00), {IMMU21}, EMPTY},

    {"br.call.sptk.few",	B, OpPaWhcD (1, 0, 1, 0), {B1, B2}, EMPTY},
    {"br.call.sptk",		B, OpPaWhcD (1, 0, 1, 0), {B1, B2}, PSEUDO, 0, NULL},
    {"br.call.sptk.few.clr",	B, OpPaWhcD (1, 0, 1, 1), {B1, B2}, EMPTY},
    {"br.call.sptk.clr",	B, OpPaWhcD (1, 0, 1, 1), {B1, B2}, PSEUDO, 0, NULL},
    {"br.call.spnt.few",	B, OpPaWhcD (1, 0, 3, 0), {B1, B2}, EMPTY},
    {"br.call.spnt",		B, OpPaWhcD (1, 0, 3, 0), {B1, B2}, PSEUDO, 0, NULL},
    {"br.call.spnt.few.clr",	B, OpPaWhcD (1, 0, 3, 1), {B1, B2}, EMPTY},
    {"br.call.spnt.clr",	B, OpPaWhcD (1, 0, 3, 1), {B1, B2}, PSEUDO, 0, NULL},
    {"br.call.dptk.few",	B, OpPaWhcD (1, 0, 5, 0), {B1, B2}, EMPTY},
    {"br.call.dptk",		B, OpPaWhcD (1, 0, 5, 0), {B1, B2}, PSEUDO, 0, NULL},
    {"br.call.dptk.few.clr",	B, OpPaWhcD (1, 0, 5, 1), {B1, B2}, EMPTY},
    {"br.call.dptk.clr",	B, OpPaWhcD (1, 0, 5, 1), {B1, B2}, PSEUDO, 0, NULL},
    {"br.call.dpnt.few",	B, OpPaWhcD (1, 0, 7, 0), {B1, B2}, EMPTY},
    {"br.call.dpnt",		B, OpPaWhcD (1, 0, 7, 0), {B1, B2}, PSEUDO, 0, NULL},
    {"br.call.dpnt.few.clr",	B, OpPaWhcD (1, 0, 7, 1), {B1, B2}, EMPTY},
    {"br.call.dpnt.clr",	B, OpPaWhcD (1, 0, 7, 1), {B1, B2}, PSEUDO, 0, NULL},
    {"br.call.sptk.many",	B, OpPaWhcD (1, 1, 1, 0), {B1, B2}, EMPTY},
    {"br.call.sptk.many.clr",	B, OpPaWhcD (1, 1, 1, 1), {B1, B2}, EMPTY},
    {"br.call.spnt.many",	B, OpPaWhcD (1, 1, 3, 0), {B1, B2}, EMPTY},
    {"br.call.spnt.many.clr",	B, OpPaWhcD (1, 1, 3, 1), {B1, B2}, EMPTY},
    {"br.call.dptk.many",	B, OpPaWhcD (1, 1, 5, 0), {B1, B2}, EMPTY},
    {"br.call.dptk.many.clr",	B, OpPaWhcD (1, 1, 5, 1), {B1, B2}, EMPTY},
    {"br.call.dpnt.many",	B, OpPaWhcD (1, 1, 7, 0), {B1, B2}, EMPTY},
    {"br.call.dpnt.many.clr",	B, OpPaWhcD (1, 1, 7, 1), {B1, B2}, EMPTY},

#define BRP(a,b,c) \
      B0, OpX6IhWhb (2, a, b, c), {B2, TAG13}, NO_PRED, 0, NULL
    {"brp.sptk",		BRP (0x10, 0, 0)},
    {"brp.dptk",		BRP (0x10, 0, 2)},
    {"brp.sptk.imp",		BRP (0x10, 1, 0)},
    {"brp.dptk.imp",		BRP (0x10, 1, 2)},
    {"brp.ret.sptk",		BRP (0x11, 0, 0)},
    {"brp.ret.dptk",		BRP (0x11, 0, 2)},
    {"brp.ret.sptk.imp",	BRP (0x11, 1, 0)},
    {"brp.ret.dptk.imp",	BRP (0x11, 1, 2)},
#undef BRP

    {"nop.b",		B0, OpX6 (2, 0x00), {IMMU21}, EMPTY},
    {"hint.b",		B0, OpX6 (2, 0x01), {IMMU21}, EMPTY},

#define BR(a,b) \
      B0, OpBtypePaWhaDPr (4, 0, a, 0, b, 0), {TGT25c}, PSEUDO, 0, NULL
    {"br.few",		BR (0, 0)},
    {"br",		BR (0, 0)},
    {"br.few.clr",	BR (0, 1)},
    {"br.clr",		BR (0, 1)},
    {"br.many",		BR (1, 0)},
    {"br.many.clr",	BR (1, 1)},
#undef BR

#define BR(a,b,c) \
      B0, OpBtypePaWhaD (4, 0, a, b, c), {TGT25c}, EMPTY
#define BRP(a,b,c) \
      B0, OpBtypePaWhaD (4, 0, a, b, c), {TGT25c}, PSEUDO, 0, NULL
    {"br.cond.sptk.few",	BR (0, 0, 0)},
    {"br.cond.sptk",		BRP (0, 0, 0)},
    {"br.cond.sptk.few.clr",	BR (0, 0, 1)},
    {"br.cond.sptk.clr",	BRP (0, 0, 1)},
    {"br.cond.spnt.few",	BR (0, 1, 0)},
    {"br.cond.spnt",		BRP (0, 1, 0)},
    {"br.cond.spnt.few.clr",	BR (0, 1, 1)},
    {"br.cond.spnt.clr",	BRP (0, 1, 1)},
    {"br.cond.dptk.few",	BR (0, 2, 0)},
    {"br.cond.dptk",		BRP (0, 2, 0)},
    {"br.cond.dptk.few.clr",	BR (0, 2, 1)},
    {"br.cond.dptk.clr",	BRP (0, 2, 1)},
    {"br.cond.dpnt.few",	BR (0, 3, 0)},
    {"br.cond.dpnt",		BRP (0, 3, 0)},
    {"br.cond.dpnt.few.clr",	BR (0, 3, 1)},
    {"br.cond.dpnt.clr",	BRP (0, 3, 1)},
    {"br.cond.sptk.many",	BR (1, 0, 0)},
    {"br.cond.sptk.many.clr",	BR (1, 0, 1)},
    {"br.cond.spnt.many",	BR (1, 1, 0)},
    {"br.cond.spnt.many.clr",	BR (1, 1, 1)},
    {"br.cond.dptk.many",	BR (1, 2, 0)},
    {"br.cond.dptk.many.clr",	BR (1, 2, 1)},
    {"br.cond.dpnt.many",	BR (1, 3, 0)},
    {"br.cond.dpnt.many.clr",	BR (1, 3, 1)},
    {"br.sptk.few",		BR (0, 0, 0)},
    {"br.sptk",			BRP (0, 0, 0)},
    {"br.sptk.few.clr",		BR (0, 0, 1)},
    {"br.sptk.clr",		BRP (0, 0, 1)},
    {"br.spnt.few",		BR (0, 1, 0)},
    {"br.spnt",			BRP (0, 1, 0)},
    {"br.spnt.few.clr",		BR (0, 1, 1)},
    {"br.spnt.clr",		BRP (0, 1, 1)},
    {"br.dptk.few",		BR (0, 2, 0)},
    {"br.dptk",			BRP (0, 2, 0)},
    {"br.dptk.few.clr",		BR (0, 2, 1)},
    {"br.dptk.clr",		BRP (0, 2, 1)},
    {"br.dpnt.few",		BR (0, 3, 0)},
    {"br.dpnt",			BRP (0, 3, 0)},
    {"br.dpnt.few.clr",		BR (0, 3, 1)},
    {"br.dpnt.clr",		BRP (0, 3, 1)},
    {"br.sptk.many",		BR (1, 0, 0)},
    {"br.sptk.many.clr",	BR (1, 0, 1)},
    {"br.spnt.many",		BR (1, 1, 0)},
    {"br.spnt.many.clr",	BR (1, 1, 1)},
    {"br.dptk.many",		BR (1, 2, 0)},
    {"br.dptk.many.clr",	BR (1, 2, 1)},
    {"br.dpnt.many",		BR (1, 3, 0)},
    {"br.dpnt.many.clr",	BR (1, 3, 1)},
#undef BR
#undef BRP

#define BR(a,b,c,d, e) \
	B0, OpBtypePaWhaD (4, a, b, c, d), {TGT25c}, SLOT2 | e, 0, NULL
    {"br.wexit.sptk.few",	BR (2, 0, 0, 0, MOD_RRBS)},
    {"br.wexit.sptk",		BR (2, 0, 0, 0, PSEUDO | MOD_RRBS)},
    {"br.wexit.sptk.few.clr",	BR (2, 0, 0, 1, MOD_RRBS)},
    {"br.wexit.sptk.clr",	BR (2, 0, 0, 1, PSEUDO | MOD_RRBS)},
    {"br.wexit.spnt.few",	BR (2, 0, 1, 0, MOD_RRBS)},
    {"br.wexit.spnt",		BR (2, 0, 1, 0, PSEUDO | MOD_RRBS)},
    {"br.wexit.spnt.few.clr",	BR (2, 0, 1, 1, MOD_RRBS)},
    {"br.wexit.spnt.clr",	BR (2, 0, 1, 1, PSEUDO | MOD_RRBS)},
    {"br.wexit.dptk.few",	BR (2, 0, 2, 0, MOD_RRBS)},
    {"br.wexit.dptk",		BR (2, 0, 2, 0, PSEUDO | MOD_RRBS)},
    {"br.wexit.dptk.few.clr",	BR (2, 0, 2, 1, MOD_RRBS)},
    {"br.wexit.dptk.clr",	BR (2, 0, 2, 1, PSEUDO | MOD_RRBS)},
    {"br.wexit.dpnt.few",	BR (2, 0, 3, 0, MOD_RRBS)},
    {"br.wexit.dpnt",		BR (2, 0, 3, 0, PSEUDO | MOD_RRBS)},
    {"br.wexit.dpnt.few.clr",	BR (2, 0, 3, 1, MOD_RRBS)},
    {"br.wexit.dpnt.clr",	BR (2, 0, 3, 1, PSEUDO | MOD_RRBS)},
    {"br.wexit.sptk.many",	BR (2, 1, 0, 0, MOD_RRBS)},
    {"br.wexit.sptk.many.clr",	BR (2, 1, 0, 1, MOD_RRBS)},
    {"br.wexit.spnt.many",	BR (2, 1, 1, 0, MOD_RRBS)},
    {"br.wexit.spnt.many.clr",	BR (2, 1, 1, 1, MOD_RRBS)},
    {"br.wexit.dptk.many",	BR (2, 1, 2, 0, MOD_RRBS)},
    {"br.wexit.dptk.many.clr",	BR (2, 1, 2, 1, MOD_RRBS)},
    {"br.wexit.dpnt.many",	BR (2, 1, 3, 0, MOD_RRBS)},
    {"br.wexit.dpnt.many.clr",	BR (2, 1, 3, 1, MOD_RRBS)},
    {"br.wtop.sptk.few",	BR (3, 0, 0, 0, MOD_RRBS)},
    {"br.wtop.sptk",		BR (3, 0, 0, 0, PSEUDO | MOD_RRBS)},
    {"br.wtop.sptk.few.clr",	BR (3, 0, 0, 1, MOD_RRBS)},
    {"br.wtop.sptk.clr",	BR (3, 0, 0, 1, PSEUDO | MOD_RRBS)},
    {"br.wtop.spnt.few",	BR (3, 0, 1, 0, MOD_RRBS)},
    {"br.wtop.spnt",		BR (3, 0, 1, 0, PSEUDO | MOD_RRBS)},
    {"br.wtop.spnt.few.clr",	BR (3, 0, 1, 1, MOD_RRBS)},
    {"br.wtop.spnt.clr",	BR (3, 0, 1, 1, PSEUDO | MOD_RRBS)},
    {"br.wtop.dptk.few",	BR (3, 0, 2, 0, MOD_RRBS)},
    {"br.wtop.dptk",		BR (3, 0, 2, 0, PSEUDO | MOD_RRBS)},
    {"br.wtop.dptk.few.clr",	BR (3, 0, 2, 1, MOD_RRBS)},
    {"br.wtop.dptk.clr",	BR (3, 0, 2, 1, PSEUDO | MOD_RRBS)},
    {"br.wtop.dpnt.few",	BR (3, 0, 3, 0, MOD_RRBS)},
    {"br.wtop.dpnt",		BR (3, 0, 3, 0, PSEUDO | MOD_RRBS)},
    {"br.wtop.dpnt.few.clr",	BR (3, 0, 3, 1, MOD_RRBS)},
    {"br.wtop.dpnt.clr",	BR (3, 0, 3, 1, PSEUDO | MOD_RRBS)},
    {"br.wtop.sptk.many",	BR (3, 1, 0, 0, MOD_RRBS)},
    {"br.wtop.sptk.many.clr",	BR (3, 1, 0, 1, MOD_RRBS)},
    {"br.wtop.spnt.many",	BR (3, 1, 1, 0, MOD_RRBS)},
    {"br.wtop.spnt.many.clr",	BR (3, 1, 1, 1, MOD_RRBS)},
    {"br.wtop.dptk.many",	BR (3, 1, 2, 0, MOD_RRBS)},
    {"br.wtop.dptk.many.clr",	BR (3, 1, 2, 1, MOD_RRBS)},
    {"br.wtop.dpnt.many",	BR (3, 1, 3, 0, MOD_RRBS)},
    {"br.wtop.dpnt.many.clr",	BR (3, 1, 3, 1, MOD_RRBS)},

#undef BR
#define BR(a,b,c,d) \
	B0, OpBtypePaWhaD (4, a, b, c, d), {TGT25c}, SLOT2 | NO_PRED, 0, NULL
#define BRT(a,b,c,d,e) \
	B0, OpBtypePaWhaD (4, a, b, c, d), {TGT25c}, SLOT2 | NO_PRED | e, 0, NULL
    {"br.cloop.sptk.few",	BR (5, 0, 0, 0)},
    {"br.cloop.sptk",		BRT (5, 0, 0, 0, PSEUDO)},
    {"br.cloop.sptk.few.clr",	BR (5, 0, 0, 1)},
    {"br.cloop.sptk.clr",	BRT (5, 0, 0, 1, PSEUDO)},
    {"br.cloop.spnt.few",	BR (5, 0, 1, 0)},
    {"br.cloop.spnt",		BRT (5, 0, 1, 0, PSEUDO)},
    {"br.cloop.spnt.few.clr",	BR (5, 0, 1, 1)},
    {"br.cloop.spnt.clr",	BRT (5, 0, 1, 1, PSEUDO)},
    {"br.cloop.dptk.few",	BR (5, 0, 2, 0)},
    {"br.cloop.dptk",		BRT (5, 0, 2, 0, PSEUDO)},
    {"br.cloop.dptk.few.clr",	BR (5, 0, 2, 1)},
    {"br.cloop.dptk.clr",	BRT (5, 0, 2, 1, PSEUDO)},
    {"br.cloop.dpnt.few",	BR (5, 0, 3, 0)},
    {"br.cloop.dpnt",		BRT (5, 0, 3, 0, PSEUDO)},
    {"br.cloop.dpnt.few.clr",	BR (5, 0, 3, 1)},
    {"br.cloop.dpnt.clr",	BRT (5, 0, 3, 1, PSEUDO)},
    {"br.cloop.sptk.many",	BR (5, 1, 0, 0)},
    {"br.cloop.sptk.many.clr",	BR (5, 1, 0, 1)},
    {"br.cloop.spnt.many",	BR (5, 1, 1, 0)},
    {"br.cloop.spnt.many.clr",	BR (5, 1, 1, 1)},
    {"br.cloop.dptk.many",	BR (5, 1, 2, 0)},
    {"br.cloop.dptk.many.clr",	BR (5, 1, 2, 1)},
    {"br.cloop.dpnt.many",	BR (5, 1, 3, 0)},
    {"br.cloop.dpnt.many.clr",	BR (5, 1, 3, 1)},
    {"br.cexit.sptk.few",	BRT (6, 0, 0, 0, MOD_RRBS)},
    {"br.cexit.sptk",		BRT (6, 0, 0, 0, PSEUDO | MOD_RRBS)},
    {"br.cexit.sptk.few.clr",	BRT (6, 0, 0, 1, MOD_RRBS)},
    {"br.cexit.sptk.clr",	BRT (6, 0, 0, 1, PSEUDO | MOD_RRBS)},
    {"br.cexit.spnt.few",	BRT (6, 0, 1, 0, MOD_RRBS)},
    {"br.cexit.spnt",		BRT (6, 0, 1, 0, PSEUDO | MOD_RRBS)},
    {"br.cexit.spnt.few.clr",	BRT (6, 0, 1, 1, MOD_RRBS)},
    {"br.cexit.spnt.clr",	BRT (6, 0, 1, 1, PSEUDO | MOD_RRBS)},
    {"br.cexit.dptk.few",	BRT (6, 0, 2, 0, MOD_RRBS)},
    {"br.cexit.dptk",		BRT (6, 0, 2, 0, PSEUDO | MOD_RRBS)},
    {"br.cexit.dptk.few.clr",	BRT (6, 0, 2, 1, MOD_RRBS)},
    {"br.cexit.dptk.clr",	BRT (6, 0, 2, 1, PSEUDO | MOD_RRBS)},
    {"br.cexit.dpnt.few",	BRT (6, 0, 3, 0, MOD_RRBS)},
    {"br.cexit.dpnt",		BRT (6, 0, 3, 0, PSEUDO | MOD_RRBS)},
    {"br.cexit.dpnt.few.clr",	BRT (6, 0, 3, 1, MOD_RRBS)},
    {"br.cexit.dpnt.clr",	BRT (6, 0, 3, 1, PSEUDO | MOD_RRBS)},
    {"br.cexit.sptk.many",	BRT (6, 1, 0, 0, MOD_RRBS)},
    {"br.cexit.sptk.many.clr",	BRT (6, 1, 0, 1, MOD_RRBS)},
    {"br.cexit.spnt.many",	BRT (6, 1, 1, 0, MOD_RRBS)},
    {"br.cexit.spnt.many.clr",	BRT (6, 1, 1, 1, MOD_RRBS)},
    {"br.cexit.dptk.many",	BRT (6, 1, 2, 0, MOD_RRBS)},
    {"br.cexit.dptk.many.clr",	BRT (6, 1, 2, 1, MOD_RRBS)},
    {"br.cexit.dpnt.many",	BRT (6, 1, 3, 0, MOD_RRBS)},
    {"br.cexit.dpnt.many.clr",	BRT (6, 1, 3, 1, MOD_RRBS)},
    {"br.ctop.sptk.few",	BRT (7, 0, 0, 0, MOD_RRBS)},
    {"br.ctop.sptk",		BRT (7, 0, 0, 0, PSEUDO | MOD_RRBS)},
    {"br.ctop.sptk.few.clr",	BRT (7, 0, 0, 1, MOD_RRBS)},
    {"br.ctop.sptk.clr",	BRT (7, 0, 0, 1, PSEUDO | MOD_RRBS)},
    {"br.ctop.spnt.few",	BRT (7, 0, 1, 0, MOD_RRBS)},
    {"br.ctop.spnt",		BRT (7, 0, 1, 0, PSEUDO | MOD_RRBS)},
    {"br.ctop.spnt.few.clr",	BRT (7, 0, 1, 1, MOD_RRBS)},
    {"br.ctop.spnt.clr",	BRT (7, 0, 1, 1, PSEUDO | MOD_RRBS)},
    {"br.ctop.dptk.few",	BRT (7, 0, 2, 0, MOD_RRBS)},
    {"br.ctop.dptk",		BRT (7, 0, 2, 0, PSEUDO | MOD_RRBS)},
    {"br.ctop.dptk.few.clr",	BRT (7, 0, 2, 1, MOD_RRBS)},
    {"br.ctop.dptk.clr",	BRT (7, 0, 2, 1, PSEUDO | MOD_RRBS)},
    {"br.ctop.dpnt.few",	BRT (7, 0, 3, 0, MOD_RRBS)},
    {"br.ctop.dpnt",		BRT (7, 0, 3, 0, PSEUDO | MOD_RRBS)},
    {"br.ctop.dpnt.few.clr",	BRT (7, 0, 3, 1, MOD_RRBS)},
    {"br.ctop.dpnt.clr",	BRT (7, 0, 3, 1, PSEUDO | MOD_RRBS)},
    {"br.ctop.sptk.many",	BRT (7, 1, 0, 0, MOD_RRBS)},
    {"br.ctop.sptk.many.clr",	BRT (7, 1, 0, 1, MOD_RRBS)},
    {"br.ctop.spnt.many",	BRT (7, 1, 1, 0, MOD_RRBS)},
    {"br.ctop.spnt.many.clr",	BRT (7, 1, 1, 1, MOD_RRBS)},
    {"br.ctop.dptk.many",	BRT (7, 1, 2, 0, MOD_RRBS)},
    {"br.ctop.dptk.many.clr",	BRT (7, 1, 2, 1, MOD_RRBS)},
    {"br.ctop.dpnt.many",	BRT (7, 1, 3, 0, MOD_RRBS)},
    {"br.ctop.dpnt.many.clr",	BRT (7, 1, 3, 1, MOD_RRBS)},
#undef BR
#undef BRT

    {"br.call.sptk.few",	B, OpPaWhaD (5, 0, 0, 0), {B1, TGT25c}, EMPTY},
    {"br.call.sptk",		B, OpPaWhaD (5, 0, 0, 0), {B1, TGT25c}, PSEUDO, 0, NULL},
    {"br.call.sptk.few.clr",	B, OpPaWhaD (5, 0, 0, 1), {B1, TGT25c}, EMPTY},
    {"br.call.sptk.clr",	B, OpPaWhaD (5, 0, 0, 1), {B1, TGT25c}, PSEUDO, 0, NULL},
    {"br.call.spnt.few",	B, OpPaWhaD (5, 0, 1, 0), {B1, TGT25c}, EMPTY},
    {"br.call.spnt",		B, OpPaWhaD (5, 0, 1, 0), {B1, TGT25c}, PSEUDO, 0, NULL},
    {"br.call.spnt.few.clr",	B, OpPaWhaD (5, 0, 1, 1), {B1, TGT25c}, EMPTY},
    {"br.call.spnt.clr",	B, OpPaWhaD (5, 0, 1, 1), {B1, TGT25c}, PSEUDO, 0, NULL},
    {"br.call.dptk.few",	B, OpPaWhaD (5, 0, 2, 0), {B1, TGT25c}, EMPTY},
    {"br.call.dptk",		B, OpPaWhaD (5, 0, 2, 0), {B1, TGT25c}, PSEUDO, 0, NULL},
    {"br.call.dptk.few.clr",	B, OpPaWhaD (5, 0, 2, 1), {B1, TGT25c}, EMPTY},
    {"br.call.dptk.clr",	B, OpPaWhaD (5, 0, 2, 1), {B1, TGT25c}, PSEUDO, 0, NULL},
    {"br.call.dpnt.few",	B, OpPaWhaD (5, 0, 3, 0), {B1, TGT25c}, EMPTY},
    {"br.call.dpnt",		B, OpPaWhaD (5, 0, 3, 0), {B1, TGT25c}, PSEUDO, 0, NULL},
    {"br.call.dpnt.few.clr",	B, OpPaWhaD (5, 0, 3, 1), {B1, TGT25c}, EMPTY},
    {"br.call.dpnt.clr",	B, OpPaWhaD (5, 0, 3, 1), {B1, TGT25c}, PSEUDO, 0, NULL},
    {"br.call.sptk.many",	B, OpPaWhaD (5, 1, 0, 0), {B1, TGT25c}, EMPTY},
    {"br.call.sptk.many.clr",	B, OpPaWhaD (5, 1, 0, 1), {B1, TGT25c}, EMPTY},
    {"br.call.spnt.many",	B, OpPaWhaD (5, 1, 1, 0), {B1, TGT25c}, EMPTY},
    {"br.call.spnt.many.clr",	B, OpPaWhaD (5, 1, 1, 1), {B1, TGT25c}, EMPTY},
    {"br.call.dptk.many",	B, OpPaWhaD (5, 1, 2, 0), {B1, TGT25c}, EMPTY},
    {"br.call.dptk.many.clr",	B, OpPaWhaD (5, 1, 2, 1), {B1, TGT25c}, EMPTY},
    {"br.call.dpnt.many",	B, OpPaWhaD (5, 1, 3, 0), {B1, TGT25c}, EMPTY},
    {"br.call.dpnt.many.clr",	B, OpPaWhaD (5, 1, 3, 1), {B1, TGT25c}, EMPTY},

    /* Branch predict.  */
#define BRP(a,b) \
      B0, OpIhWhb (7, a, b), {TGT25c, TAG13}, NO_PRED, 0, NULL
    {"brp.sptk",		BRP (0, 0)},
    {"brp.loop",		BRP (0, 1)},
    {"brp.dptk",		BRP (0, 2)},
    {"brp.exit",		BRP (0, 3)},
    {"brp.sptk.imp",		BRP (1, 0)},
    {"brp.loop.imp",		BRP (1, 1)},
    {"brp.dptk.imp",		BRP (1, 2)},
    {"brp.exit.imp",		BRP (1, 3)},
#undef BRP

    {NULL, 0, 0, 0, 0, {0}, 0, 0, NULL}
  };

#undef B0
#undef B
#undef bBtype
#undef bD
#undef bIh
#undef bPa
#undef bPr
#undef bWha
#undef bWhb
#undef bWhc
#undef bX6
#undef mBtype
#undef mD
#undef mIh
#undef mPa
#undef mPr
#undef mWha
#undef mWhb
#undef mWhc
#undef mX6
#undef OpX6
#undef OpPaWhaD
#undef OpPaWhcD
#undef OpBtypePaWhaD
#undef OpBtypePaWhaDPr
#undef OpX6BtypePaWhaD
#undef OpX6BtypePaWhaDPr
#undef OpIhWhb
#undef OpX6IhWhb
#undef EMPTY
@


1.10
log
@Change source files over to GPLv3.
@
text
@d2 1
a2 1
   Copyright 1998, 1999, 2000, 2002, 2005, 2006, 2007
@


1.9
log
@Update copyright years.
@
text
@d2 1
a2 1
   Copyright 1998, 1999, 2000, 2002, 2005, 2006
d6 1
a6 1
   This file is part of GDB, GAS, and the GNU binutils.
d8 9
a16 9
   GDB, GAS, and the GNU binutils are free software; you can redistribute
   them and/or modify them under the terms of the GNU General Public
   License as published by the Free Software Foundation; either version
   2, or (at your option) any later version.

   GDB, GAS, and the GNU binutils are distributed in the hope that they
   will be useful, but WITHOUT ANY WARRANTY; without even the implied
   warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See
   the GNU General Public License for more details.
d20 2
a21 2
   Free Software Foundation, 51 Franklin Street - Fifth Floor, Boston, MA
   02110-1301, USA.  */
@


1.8
log
@gas/

2006-02-22  H.J. Lu  <hongjiu.lu@@intel.com>

	* config/tc-ia64.c (specify_resource): Add the rule 17 from
	SDM 2.2.

gas/testsuite/

2006-02-22  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/ia64/dv-raw-err.s: Add check for vmsw.0.
	* gas/ia64/dv-raw-err.l: Updated.

	* gas/ia64/opc-b.s: Add vmsw.0 and vmsw.1.
	* gas/ia64/opc-b.d: Updated.

opcodes/

2006-02-22  H.J. Lu  <hongjiu.lu@@intel.com>

	* ia64-gen.c (lookup_regindex): Handle ".vm".
	(print_dependency_table): Handle '\"'.

	* ia64-ic.tbl: Updated from SDM 2.2.
	* ia64-raw.tbl: Likewise.
	* ia64-waw.tbl: Likewise.
	* ia64-asmtab.c: Regenerated.

	* ia64-opc-b.c (ia64_opcodes_b): Add vmsw.0 and vmsw.1.
@
text
@d2 2
a3 1
   Copyright 1998, 1999, 2000, 2002 Free Software Foundation, Inc.
@


1.7
log
@Update the address and phone number of the FSF
@
text
@d200 2
@


1.6
log
@Patch to update IA-64 port to SDM 2.1.
bfd/ChangeLog
	* cpu-ia64-opc.c: Add operand constant "ar.csd".
gas/ChangeLog
	* config/tc-ia64.c (pseudo_func): Add "@@pause" constant for "hint"
	instruction.
	(emit_one_bundle): Handle "hint" instruction.
	(operand_match): Match IA64_OPND_AR_CSD.
gas/testsuite/ChangeLog
	* gas/ia64/opc-b.d: Update for instructions added by SDM2.1.
	* gas/ia64/opc-b.s: Ditto.
	* gas/ia64/opc-f.d: Ditto.
	* gas/ia64/opc-f.s: Ditto.
	* gas/ia64/opc-i.d: Ditto.
	* gas/ia64/opc-i.s: Ditto.
	* gas/ia64/opc-m.d: Ditto.
	* gas/ia64/opc-m.s: Ditto.
	* gas/ia64/opc-x.d: Ditto.
	* gas/ia64/opc-x.s: Ditto.
include/opcode/ChangeLog
	* ia64.h: Fix copyright message.
	(IA64_OPND_AR_CSD): New operand kind.
opcodes/ChangeLog
	* ia64-opc-d.c (ia64_opcodes_d): Add "hint" instruction.
	* ia64-opc-b.c: Add "hint.b" instruction.
	* ia64-opc-f.c: Add "hint.f" instruction.
	* ia64-opc-i.c: Add "hint.i" instruction.
	* ia64-opc-m.c: Add "hint.m", "fc.i", "ld16", "st16", and
	"cmp8xchg16" instructions.
	* ia64-opc-x.c: Add "hint.x" instruction.
	* ia64-opc.h (AR_CSD): New macro.
	* ia64-ic.tbl: Update according to SDM2.1.
	* ia64-raw.tbl: Ditto.
	* ia64-waw.tbl: Ditto.
	* ia64-gen.c (in_iclass): Handle "hint" like "nop".
	(lookup_regindex): Recognize AR[FCR], AR[EFLAG], AR[CSD],
	AR[SSD], AR[CFLG], AR[FSR], AR[FIR], and AR[FDR].
	* ia64-asmtab.c: Regenerate.
@
text
@d19 2
a20 2
   Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA
   02111-1307, USA.  */
@


1.5
log
@Convert ia64-gen to use getopt().  Add standard GNU options plus --srcdir.
Convert Makefile.am to pass --srcdir to ia64-gen.  Fix compile time warnings.
@
text
@d192 1
a192 1
    
d241 1
@


1.4
log
@2002-07-17  David Mosberger  <davidm@@hpl.hp.com>

	* ia64-opc-b.c (bWhc): New macro.
	(mWhc): Ditto.
	(OpPaWhcD): Ditto.
	(ia64_opcodes_b): Correct patterns for indirect call
	instructions to use 3-bit "wh" field.
	* ia64-asmtab.c: Regnerate.
@
text
@d2 1
a2 1
   Copyright 1998, 1999, 2000 Free Software Foundation, Inc.
d72 4
d81 1
a81 1
      B0, OpX6BtypePaWhaDPr (0, 0x20, 0, a, 0, b, 0), {B2}, PSEUDO
d90 3
a92 1
#define BR(a,b,c,d,e)	B0, OpX6BtypePaWhaD (0, a, b, c, d, e), {B2}
d94 1
a94 1
    {"br.cond.sptk",		BR (0x20, 0, 0, 0, 0), PSEUDO},
d96 1
a96 1
    {"br.cond.sptk.clr",	BR (0x20, 0, 0, 0, 1), PSEUDO},
d98 1
a98 1
    {"br.cond.spnt",		BR (0x20, 0, 0, 1, 0), PSEUDO},
d100 1
a100 1
    {"br.cond.spnt.clr",	BR (0x20, 0, 0, 1, 1), PSEUDO},
d102 1
a102 1
    {"br.cond.dptk",		BR (0x20, 0, 0, 2, 0), PSEUDO},
d104 1
a104 1
    {"br.cond.dptk.clr",	BR (0x20, 0, 0, 2, 1), PSEUDO},
d106 1
a106 1
    {"br.cond.dpnt",		BR (0x20, 0, 0, 3, 0), PSEUDO},
d108 1
a108 1
    {"br.cond.dpnt.clr",	BR (0x20, 0, 0, 3, 1), PSEUDO},
d118 1
a118 1
    {"br.sptk",			BR (0x20, 0, 0, 0, 0), PSEUDO},
d120 1
a120 1
    {"br.sptk.clr",		BR (0x20, 0, 0, 0, 1), PSEUDO},
d122 1
a122 1
    {"br.spnt",			BR (0x20, 0, 0, 1, 0), PSEUDO},
d124 1
a124 1
    {"br.spnt.clr",		BR (0x20, 0, 0, 1, 1), PSEUDO},
d126 1
a126 1
    {"br.dptk",			BR (0x20, 0, 0, 2, 0), PSEUDO},
d128 1
a128 1
    {"br.dptk.clr",		BR (0x20, 0, 0, 2, 1), PSEUDO},
d130 1
a130 1
    {"br.dpnt",			BR (0x20, 0, 0, 3, 0), PSEUDO},
d132 1
a132 1
    {"br.dpnt.clr",		BR (0x20, 0, 0, 3, 1), PSEUDO},
d142 1
a142 1
    {"br.ia.sptk",		BR (0x20, 1, 0, 0, 0), PSEUDO},
d144 1
a144 1
    {"br.ia.sptk.clr",		BR (0x20, 1, 0, 0, 1), PSEUDO},
d146 1
a146 1
    {"br.ia.spnt",		BR (0x20, 1, 0, 1, 0), PSEUDO},
d148 1
a148 1
    {"br.ia.spnt.clr",		BR (0x20, 1, 0, 1, 1), PSEUDO},
d150 1
a150 1
    {"br.ia.dptk",		BR (0x20, 1, 0, 2, 0), PSEUDO},
d152 1
a152 1
    {"br.ia.dptk.clr",		BR (0x20, 1, 0, 2, 1), PSEUDO},
d154 1
a154 1
    {"br.ia.dpnt",		BR (0x20, 1, 0, 3, 0), PSEUDO},
d156 1
a156 1
    {"br.ia.dpnt.clr",		BR (0x20, 1, 0, 3, 1), PSEUDO},
d165 24
a188 24
    {"br.ret.sptk.few",		BR (0x21, 4, 0, 0, 0), MOD_RRBS},
    {"br.ret.sptk",		BR (0x21, 4, 0, 0, 0), PSEUDO | MOD_RRBS},
    {"br.ret.sptk.few.clr",	BR (0x21, 4, 0, 0, 1), MOD_RRBS},
    {"br.ret.sptk.clr",		BR (0x21, 4, 0, 0, 1), PSEUDO | MOD_RRBS},
    {"br.ret.spnt.few",		BR (0x21, 4, 0, 1, 0), MOD_RRBS},
    {"br.ret.spnt",		BR (0x21, 4, 0, 1, 0), PSEUDO | MOD_RRBS},
    {"br.ret.spnt.few.clr",	BR (0x21, 4, 0, 1, 1), MOD_RRBS},
    {"br.ret.spnt.clr",		BR (0x21, 4, 0, 1, 1), PSEUDO | MOD_RRBS},
    {"br.ret.dptk.few",		BR (0x21, 4, 0, 2, 0), MOD_RRBS},
    {"br.ret.dptk",		BR (0x21, 4, 0, 2, 0), PSEUDO | MOD_RRBS},
    {"br.ret.dptk.few.clr",	BR (0x21, 4, 0, 2, 1), MOD_RRBS},
    {"br.ret.dptk.clr",		BR (0x21, 4, 0, 2, 1), PSEUDO | MOD_RRBS},
    {"br.ret.dpnt.few",		BR (0x21, 4, 0, 3, 0), MOD_RRBS},
    {"br.ret.dpnt",		BR (0x21, 4, 0, 3, 0), PSEUDO | MOD_RRBS},
    {"br.ret.dpnt.few.clr",	BR (0x21, 4, 0, 3, 1), MOD_RRBS},
    {"br.ret.dpnt.clr",		BR (0x21, 4, 0, 3, 1), PSEUDO | MOD_RRBS},
    {"br.ret.sptk.many",	BR (0x21, 4, 1, 0, 0), MOD_RRBS},
    {"br.ret.sptk.many.clr",	BR (0x21, 4, 1, 0, 1), MOD_RRBS},
    {"br.ret.spnt.many",	BR (0x21, 4, 1, 1, 0), MOD_RRBS},
    {"br.ret.spnt.many.clr",	BR (0x21, 4, 1, 1, 1), MOD_RRBS},
    {"br.ret.dptk.many",	BR (0x21, 4, 1, 2, 0), MOD_RRBS},
    {"br.ret.dptk.many.clr",	BR (0x21, 4, 1, 2, 1), MOD_RRBS},
    {"br.ret.dpnt.many",	BR (0x21, 4, 1, 3, 0), MOD_RRBS},
    {"br.ret.dpnt.many.clr",	BR (0x21, 4, 1, 3, 1), MOD_RRBS},
d190 37
a226 35

    {"cover",		B0, OpX6 (0, 0x02), {0, }, NO_PRED | LAST | MOD_RRBS},
    {"clrrrb",		B0, OpX6 (0, 0x04), {0, }, NO_PRED | LAST | MOD_RRBS},
    {"clrrrb.pr",	B0, OpX6 (0, 0x05), {0, }, NO_PRED | LAST | MOD_RRBS},
    {"rfi",		B0, OpX6 (0, 0x08), {0, }, NO_PRED | LAST | PRIV | MOD_RRBS},
    {"bsw.0",		B0, OpX6 (0, 0x0c), {0, }, NO_PRED | LAST | PRIV},
    {"bsw.1",		B0, OpX6 (0, 0x0d), {0, }, NO_PRED | LAST | PRIV},
    {"epc",		B0, OpX6 (0, 0x10), {0, }, NO_PRED},

    {"break.b",		B0, OpX6 (0, 0x00), {IMMU21}},

    {"br.call.sptk.few",	B, OpPaWhcD (1, 0, 1, 0), {B1, B2}},
    {"br.call.sptk",		B, OpPaWhcD (1, 0, 1, 0), {B1, B2}, PSEUDO},
    {"br.call.sptk.few.clr",	B, OpPaWhcD (1, 0, 1, 1), {B1, B2}},
    {"br.call.sptk.clr",	B, OpPaWhcD (1, 0, 1, 1), {B1, B2}, PSEUDO},
    {"br.call.spnt.few",	B, OpPaWhcD (1, 0, 3, 0), {B1, B2}},
    {"br.call.spnt",		B, OpPaWhcD (1, 0, 3, 0), {B1, B2}, PSEUDO},
    {"br.call.spnt.few.clr",	B, OpPaWhcD (1, 0, 3, 1), {B1, B2}},
    {"br.call.spnt.clr",	B, OpPaWhcD (1, 0, 3, 1), {B1, B2}, PSEUDO},
    {"br.call.dptk.few",	B, OpPaWhcD (1, 0, 5, 0), {B1, B2}},
    {"br.call.dptk",		B, OpPaWhcD (1, 0, 5, 0), {B1, B2}, PSEUDO},
    {"br.call.dptk.few.clr",	B, OpPaWhcD (1, 0, 5, 1), {B1, B2}},
    {"br.call.dptk.clr",	B, OpPaWhcD (1, 0, 5, 1), {B1, B2}, PSEUDO},
    {"br.call.dpnt.few",	B, OpPaWhcD (1, 0, 7, 0), {B1, B2}},
    {"br.call.dpnt",		B, OpPaWhcD (1, 0, 7, 0), {B1, B2}, PSEUDO},
    {"br.call.dpnt.few.clr",	B, OpPaWhcD (1, 0, 7, 1), {B1, B2}},
    {"br.call.dpnt.clr",	B, OpPaWhcD (1, 0, 7, 1), {B1, B2}, PSEUDO},
    {"br.call.sptk.many",	B, OpPaWhcD (1, 1, 1, 0), {B1, B2}},
    {"br.call.sptk.many.clr",	B, OpPaWhcD (1, 1, 1, 1), {B1, B2}},
    {"br.call.spnt.many",	B, OpPaWhcD (1, 1, 3, 0), {B1, B2}},
    {"br.call.spnt.many.clr",	B, OpPaWhcD (1, 1, 3, 1), {B1, B2}},
    {"br.call.dptk.many",	B, OpPaWhcD (1, 1, 5, 0), {B1, B2}},
    {"br.call.dptk.many.clr",	B, OpPaWhcD (1, 1, 5, 1), {B1, B2}},
    {"br.call.dpnt.many",	B, OpPaWhcD (1, 1, 7, 0), {B1, B2}},
    {"br.call.dpnt.many.clr",	B, OpPaWhcD (1, 1, 7, 1), {B1, B2}},
d229 1
a229 1
      B0, OpX6IhWhb (2, a, b, c), {B2, TAG13}, NO_PRED
d240 1
a240 1
    {"nop.b",		B0, OpX6 (2, 0x00), {IMMU21}},
d243 1
a243 1
      B0, OpBtypePaWhaDPr (4, 0, a, 0, b, 0), {TGT25c}, PSEUDO
d253 3
a255 1
      B0, OpBtypePaWhaD (4, 0, a, b, c), {TGT25c}
d257 1
a257 1
    {"br.cond.sptk",		BR (0, 0, 0), PSEUDO},
d259 1
a259 1
    {"br.cond.sptk.clr",	BR (0, 0, 1), PSEUDO},
d261 1
a261 1
    {"br.cond.spnt",		BR (0, 1, 0), PSEUDO},
d263 1
a263 1
    {"br.cond.spnt.clr",	BR (0, 1, 1), PSEUDO},
d265 1
a265 1
    {"br.cond.dptk",		BR (0, 2, 0), PSEUDO},
d267 1
a267 1
    {"br.cond.dptk.clr",	BR (0, 2, 1), PSEUDO},
d269 1
a269 1
    {"br.cond.dpnt",		BR (0, 3, 0), PSEUDO},
d271 1
a271 1
    {"br.cond.dpnt.clr",	BR (0, 3, 1), PSEUDO},
d281 1
a281 1
    {"br.sptk",			BR (0, 0, 0), PSEUDO},
d283 1
a283 1
    {"br.sptk.clr",		BR (0, 0, 1), PSEUDO},
d285 1
a285 1
    {"br.spnt",			BR (0, 1, 0), PSEUDO},
d287 1
a287 1
    {"br.spnt.clr",		BR (0, 1, 1), PSEUDO},
d289 1
a289 1
    {"br.dptk",			BR (0, 2, 0), PSEUDO},
d291 1
a291 1
    {"br.dptk.clr",		BR (0, 2, 1), PSEUDO},
d293 1
a293 1
    {"br.dpnt",			BR (0, 3, 0), PSEUDO},
d295 1
a295 1
    {"br.dpnt.clr",		BR (0, 3, 1), PSEUDO},
d305 1
d307 50
a356 50
#define BR(a,b,c,d) \
	B0, OpBtypePaWhaD (4, a, b, c, d), {TGT25c}, SLOT2
    {"br.wexit.sptk.few",	BR (2, 0, 0, 0) | MOD_RRBS},
    {"br.wexit.sptk",		BR (2, 0, 0, 0) | PSEUDO | MOD_RRBS},
    {"br.wexit.sptk.few.clr",	BR (2, 0, 0, 1) | MOD_RRBS},
    {"br.wexit.sptk.clr",	BR (2, 0, 0, 1) | PSEUDO | MOD_RRBS},
    {"br.wexit.spnt.few",	BR (2, 0, 1, 0) | MOD_RRBS},
    {"br.wexit.spnt",		BR (2, 0, 1, 0) | PSEUDO | MOD_RRBS},
    {"br.wexit.spnt.few.clr",	BR (2, 0, 1, 1) | MOD_RRBS},
    {"br.wexit.spnt.clr",	BR (2, 0, 1, 1) | PSEUDO | MOD_RRBS},
    {"br.wexit.dptk.few",	BR (2, 0, 2, 0) | MOD_RRBS},
    {"br.wexit.dptk",		BR (2, 0, 2, 0) | PSEUDO | MOD_RRBS},
    {"br.wexit.dptk.few.clr",	BR (2, 0, 2, 1) | MOD_RRBS},
    {"br.wexit.dptk.clr",	BR (2, 0, 2, 1) | PSEUDO | MOD_RRBS},
    {"br.wexit.dpnt.few",	BR (2, 0, 3, 0) | MOD_RRBS},
    {"br.wexit.dpnt",		BR (2, 0, 3, 0) | PSEUDO | MOD_RRBS},
    {"br.wexit.dpnt.few.clr",	BR (2, 0, 3, 1) | MOD_RRBS},
    {"br.wexit.dpnt.clr",	BR (2, 0, 3, 1) | PSEUDO | MOD_RRBS},
    {"br.wexit.sptk.many",	BR (2, 1, 0, 0) | MOD_RRBS},
    {"br.wexit.sptk.many.clr",	BR (2, 1, 0, 1) | MOD_RRBS},
    {"br.wexit.spnt.many",	BR (2, 1, 1, 0) | MOD_RRBS},
    {"br.wexit.spnt.many.clr",	BR (2, 1, 1, 1) | MOD_RRBS},
    {"br.wexit.dptk.many",	BR (2, 1, 2, 0) | MOD_RRBS},
    {"br.wexit.dptk.many.clr",	BR (2, 1, 2, 1) | MOD_RRBS},
    {"br.wexit.dpnt.many",	BR (2, 1, 3, 0) | MOD_RRBS},
    {"br.wexit.dpnt.many.clr",	BR (2, 1, 3, 1) | MOD_RRBS},
    {"br.wtop.sptk.few",	BR (3, 0, 0, 0) | MOD_RRBS},
    {"br.wtop.sptk",		BR (3, 0, 0, 0) | PSEUDO | MOD_RRBS},
    {"br.wtop.sptk.few.clr",	BR (3, 0, 0, 1) | MOD_RRBS},
    {"br.wtop.sptk.clr",	BR (3, 0, 0, 1) | PSEUDO | MOD_RRBS},
    {"br.wtop.spnt.few",	BR (3, 0, 1, 0) | MOD_RRBS},
    {"br.wtop.spnt",		BR (3, 0, 1, 0) | PSEUDO | MOD_RRBS},
    {"br.wtop.spnt.few.clr",	BR (3, 0, 1, 1) | MOD_RRBS},
    {"br.wtop.spnt.clr",	BR (3, 0, 1, 1) | PSEUDO | MOD_RRBS},
    {"br.wtop.dptk.few",	BR (3, 0, 2, 0) | MOD_RRBS},
    {"br.wtop.dptk",		BR (3, 0, 2, 0) | PSEUDO | MOD_RRBS},
    {"br.wtop.dptk.few.clr",	BR (3, 0, 2, 1) | MOD_RRBS},
    {"br.wtop.dptk.clr",	BR (3, 0, 2, 1) | PSEUDO | MOD_RRBS},
    {"br.wtop.dpnt.few",	BR (3, 0, 3, 0) | MOD_RRBS},
    {"br.wtop.dpnt",		BR (3, 0, 3, 0) | PSEUDO | MOD_RRBS},
    {"br.wtop.dpnt.few.clr",	BR (3, 0, 3, 1) | MOD_RRBS},
    {"br.wtop.dpnt.clr",	BR (3, 0, 3, 1) | PSEUDO | MOD_RRBS},
    {"br.wtop.sptk.many",	BR (3, 1, 0, 0) | MOD_RRBS},
    {"br.wtop.sptk.many.clr",	BR (3, 1, 0, 1) | MOD_RRBS},
    {"br.wtop.spnt.many",	BR (3, 1, 1, 0) | MOD_RRBS},
    {"br.wtop.spnt.many.clr",	BR (3, 1, 1, 1) | MOD_RRBS},
    {"br.wtop.dptk.many",	BR (3, 1, 2, 0) | MOD_RRBS},
    {"br.wtop.dptk.many.clr",	BR (3, 1, 2, 1) | MOD_RRBS},
    {"br.wtop.dpnt.many",	BR (3, 1, 3, 0) | MOD_RRBS},
    {"br.wtop.dpnt.many.clr",	BR (3, 1, 3, 1) | MOD_RRBS},
d360 3
a362 1
	B0, OpBtypePaWhaD (4, a, b, c, d), {TGT25c}, SLOT2 | NO_PRED
d364 1
a364 1
    {"br.cloop.sptk",		BR (5, 0, 0, 0) | PSEUDO},
d366 1
a366 1
    {"br.cloop.sptk.clr",	BR (5, 0, 0, 1) | PSEUDO},
d368 1
a368 1
    {"br.cloop.spnt",		BR (5, 0, 1, 0) | PSEUDO},
d370 1
a370 1
    {"br.cloop.spnt.clr",	BR (5, 0, 1, 1) | PSEUDO},
d372 1
a372 1
    {"br.cloop.dptk",		BR (5, 0, 2, 0) | PSEUDO},
d374 1
a374 1
    {"br.cloop.dptk.clr",	BR (5, 0, 2, 1) | PSEUDO},
d376 1
a376 1
    {"br.cloop.dpnt",		BR (5, 0, 3, 0) | PSEUDO},
d378 1
a378 1
    {"br.cloop.dpnt.clr",	BR (5, 0, 3, 1) | PSEUDO},
d387 50
a436 48
    {"br.cexit.sptk.few",	BR (6, 0, 0, 0) | MOD_RRBS},
    {"br.cexit.sptk",		BR (6, 0, 0, 0) | PSEUDO | MOD_RRBS},
    {"br.cexit.sptk.few.clr",	BR (6, 0, 0, 1) | MOD_RRBS},
    {"br.cexit.sptk.clr",	BR (6, 0, 0, 1) | PSEUDO | MOD_RRBS},
    {"br.cexit.spnt.few",	BR (6, 0, 1, 0) | MOD_RRBS},
    {"br.cexit.spnt",		BR (6, 0, 1, 0) | PSEUDO | MOD_RRBS},
    {"br.cexit.spnt.few.clr",	BR (6, 0, 1, 1) | MOD_RRBS},
    {"br.cexit.spnt.clr",	BR (6, 0, 1, 1) | PSEUDO | MOD_RRBS},
    {"br.cexit.dptk.few",	BR (6, 0, 2, 0) | MOD_RRBS},
    {"br.cexit.dptk",		BR (6, 0, 2, 0) | PSEUDO | MOD_RRBS},
    {"br.cexit.dptk.few.clr",	BR (6, 0, 2, 1) | MOD_RRBS},
    {"br.cexit.dptk.clr",	BR (6, 0, 2, 1) | PSEUDO | MOD_RRBS},
    {"br.cexit.dpnt.few",	BR (6, 0, 3, 0) | MOD_RRBS},
    {"br.cexit.dpnt",		BR (6, 0, 3, 0) | PSEUDO | MOD_RRBS},
    {"br.cexit.dpnt.few.clr",	BR (6, 0, 3, 1) | MOD_RRBS},
    {"br.cexit.dpnt.clr",	BR (6, 0, 3, 1) | PSEUDO | MOD_RRBS},
    {"br.cexit.sptk.many",	BR (6, 1, 0, 0) | MOD_RRBS},
    {"br.cexit.sptk.many.clr",	BR (6, 1, 0, 1) | MOD_RRBS},
    {"br.cexit.spnt.many",	BR (6, 1, 1, 0) | MOD_RRBS},
    {"br.cexit.spnt.many.clr",	BR (6, 1, 1, 1) | MOD_RRBS},
    {"br.cexit.dptk.many",	BR (6, 1, 2, 0) | MOD_RRBS},
    {"br.cexit.dptk.many.clr",	BR (6, 1, 2, 1) | MOD_RRBS},
    {"br.cexit.dpnt.many",	BR (6, 1, 3, 0) | MOD_RRBS},
    {"br.cexit.dpnt.many.clr",	BR (6, 1, 3, 1) | MOD_RRBS},
    {"br.ctop.sptk.few",	BR (7, 0, 0, 0) | MOD_RRBS},
    {"br.ctop.sptk",		BR (7, 0, 0, 0) | PSEUDO | MOD_RRBS},
    {"br.ctop.sptk.few.clr",	BR (7, 0, 0, 1) | MOD_RRBS},
    {"br.ctop.sptk.clr",	BR (7, 0, 0, 1) | PSEUDO | MOD_RRBS},
    {"br.ctop.spnt.few",	BR (7, 0, 1, 0) | MOD_RRBS},
    {"br.ctop.spnt",		BR (7, 0, 1, 0) | PSEUDO | MOD_RRBS},
    {"br.ctop.spnt.few.clr",	BR (7, 0, 1, 1) | MOD_RRBS},
    {"br.ctop.spnt.clr",	BR (7, 0, 1, 1) | PSEUDO | MOD_RRBS},
    {"br.ctop.dptk.few",	BR (7, 0, 2, 0) | MOD_RRBS},
    {"br.ctop.dptk",		BR (7, 0, 2, 0) | PSEUDO | MOD_RRBS},
    {"br.ctop.dptk.few.clr",	BR (7, 0, 2, 1) | MOD_RRBS},
    {"br.ctop.dptk.clr",	BR (7, 0, 2, 1) | PSEUDO | MOD_RRBS},
    {"br.ctop.dpnt.few",	BR (7, 0, 3, 0) | MOD_RRBS},
    {"br.ctop.dpnt",		BR (7, 0, 3, 0) | PSEUDO | MOD_RRBS},
    {"br.ctop.dpnt.few.clr",	BR (7, 0, 3, 1) | MOD_RRBS},
    {"br.ctop.dpnt.clr",	BR (7, 0, 3, 1) | PSEUDO | MOD_RRBS},
    {"br.ctop.sptk.many",	BR (7, 1, 0, 0) | MOD_RRBS},
    {"br.ctop.sptk.many.clr",	BR (7, 1, 0, 1) | MOD_RRBS},
    {"br.ctop.spnt.many",	BR (7, 1, 1, 0) | MOD_RRBS},
    {"br.ctop.spnt.many.clr",	BR (7, 1, 1, 1) | MOD_RRBS},
    {"br.ctop.dptk.many",	BR (7, 1, 2, 0) | MOD_RRBS},
    {"br.ctop.dptk.many.clr",	BR (7, 1, 2, 1) | MOD_RRBS},
    {"br.ctop.dpnt.many",	BR (7, 1, 3, 0) | MOD_RRBS},
    {"br.ctop.dpnt.many.clr",	BR (7, 1, 3, 1) | MOD_RRBS},
d438 24
a461 28
#undef BR
#define BR(a,b,c,d) \
	B0, OpBtypePaWhaD (4, a, b, c, d), {TGT25c}, SLOT2
    {"br.call.sptk.few",	B, OpPaWhaD (5, 0, 0, 0), {B1, TGT25c}},
    {"br.call.sptk",		B, OpPaWhaD (5, 0, 0, 0), {B1, TGT25c}, PSEUDO},
    {"br.call.sptk.few.clr",	B, OpPaWhaD (5, 0, 0, 1), {B1, TGT25c}},
    {"br.call.sptk.clr",	B, OpPaWhaD (5, 0, 0, 1), {B1, TGT25c}, PSEUDO},
    {"br.call.spnt.few",	B, OpPaWhaD (5, 0, 1, 0), {B1, TGT25c}},
    {"br.call.spnt",		B, OpPaWhaD (5, 0, 1, 0), {B1, TGT25c}, PSEUDO},
    {"br.call.spnt.few.clr",	B, OpPaWhaD (5, 0, 1, 1), {B1, TGT25c}},
    {"br.call.spnt.clr",	B, OpPaWhaD (5, 0, 1, 1), {B1, TGT25c}, PSEUDO},
    {"br.call.dptk.few",	B, OpPaWhaD (5, 0, 2, 0), {B1, TGT25c}},
    {"br.call.dptk",		B, OpPaWhaD (5, 0, 2, 0), {B1, TGT25c}, PSEUDO},
    {"br.call.dptk.few.clr",	B, OpPaWhaD (5, 0, 2, 1), {B1, TGT25c}},
    {"br.call.dptk.clr",	B, OpPaWhaD (5, 0, 2, 1), {B1, TGT25c}, PSEUDO},
    {"br.call.dpnt.few",	B, OpPaWhaD (5, 0, 3, 0), {B1, TGT25c}},
    {"br.call.dpnt",		B, OpPaWhaD (5, 0, 3, 0), {B1, TGT25c}, PSEUDO},
    {"br.call.dpnt.few.clr",	B, OpPaWhaD (5, 0, 3, 1), {B1, TGT25c}},
    {"br.call.dpnt.clr",	B, OpPaWhaD (5, 0, 3, 1), {B1, TGT25c}, PSEUDO},
    {"br.call.sptk.many",	B, OpPaWhaD (5, 1, 0, 0), {B1, TGT25c}},
    {"br.call.sptk.many.clr",	B, OpPaWhaD (5, 1, 0, 1), {B1, TGT25c}},
    {"br.call.spnt.many",	B, OpPaWhaD (5, 1, 1, 0), {B1, TGT25c}},
    {"br.call.spnt.many.clr",	B, OpPaWhaD (5, 1, 1, 1), {B1, TGT25c}},
    {"br.call.dptk.many",	B, OpPaWhaD (5, 1, 2, 0), {B1, TGT25c}},
    {"br.call.dptk.many.clr",	B, OpPaWhaD (5, 1, 2, 1), {B1, TGT25c}},
    {"br.call.dpnt.many",	B, OpPaWhaD (5, 1, 3, 0), {B1, TGT25c}},
    {"br.call.dpnt.many.clr",	B, OpPaWhaD (5, 1, 3, 1), {B1, TGT25c}},
#undef BR
d463 1
a463 1
    /* branch predict */
d465 1
a465 1
      B0, OpIhWhb (7, a, b), {TGT25c, TAG13}, NO_PRED
d476 1
a476 1
    {0}
d508 1
@


1.4.12.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@d2 1
a2 1
   Copyright 1998, 1999, 2000, 2002 Free Software Foundation, Inc.
a71 4
/* Used to initialise unused fields in ia64_opcode struct,
   in order to stop gcc from complaining.  */
#define EMPTY 0,0,NULL

d77 1
a77 1
      B0, OpX6BtypePaWhaDPr (0, 0x20, 0, a, 0, b, 0), {B2}, PSEUDO, 0, NULL
d86 1
a86 3
#define BR(a,b,c,d,e)	B0, OpX6BtypePaWhaD (0, a, b, c, d, e), {B2}, EMPTY
#define BRP(a,b,c,d,e)	B0, OpX6BtypePaWhaD (0, a, b, c, d, e), {B2}, PSEUDO, 0, NULL
#define BRT(a,b,c,d,e,f) B0, OpX6BtypePaWhaD (0, a, b, c, d, e), {B2}, f, 0, NULL
d88 1
a88 1
    {"br.cond.sptk",		BRP (0x20, 0, 0, 0, 0)},
d90 1
a90 1
    {"br.cond.sptk.clr",	BRP (0x20, 0, 0, 0, 1)},
d92 1
a92 1
    {"br.cond.spnt",		BRP (0x20, 0, 0, 1, 0)},
d94 1
a94 1
    {"br.cond.spnt.clr",	BRP (0x20, 0, 0, 1, 1)},
d96 1
a96 1
    {"br.cond.dptk",		BRP (0x20, 0, 0, 2, 0)},
d98 1
a98 1
    {"br.cond.dptk.clr",	BRP (0x20, 0, 0, 2, 1)},
d100 1
a100 1
    {"br.cond.dpnt",		BRP (0x20, 0, 0, 3, 0)},
d102 1
a102 1
    {"br.cond.dpnt.clr",	BRP (0x20, 0, 0, 3, 1)},
d112 1
a112 1
    {"br.sptk",			BRP (0x20, 0, 0, 0, 0)},
d114 1
a114 1
    {"br.sptk.clr",		BRP (0x20, 0, 0, 0, 1)},
d116 1
a116 1
    {"br.spnt",			BRP (0x20, 0, 0, 1, 0)},
d118 1
a118 1
    {"br.spnt.clr",		BRP (0x20, 0, 0, 1, 1)},
d120 1
a120 1
    {"br.dptk",			BRP (0x20, 0, 0, 2, 0)},
d122 1
a122 1
    {"br.dptk.clr",		BRP (0x20, 0, 0, 2, 1)},
d124 1
a124 1
    {"br.dpnt",			BRP (0x20, 0, 0, 3, 0)},
d126 1
a126 1
    {"br.dpnt.clr",		BRP (0x20, 0, 0, 3, 1)},
d136 1
a136 1
    {"br.ia.sptk",		BRP (0x20, 1, 0, 0, 0)},
d138 1
a138 1
    {"br.ia.sptk.clr",		BRP (0x20, 1, 0, 0, 1)},
d140 1
a140 1
    {"br.ia.spnt",		BRP (0x20, 1, 0, 1, 0)},
d142 1
a142 1
    {"br.ia.spnt.clr",		BRP (0x20, 1, 0, 1, 1)},
d144 1
a144 1
    {"br.ia.dptk",		BRP (0x20, 1, 0, 2, 0)},
d146 1
a146 1
    {"br.ia.dptk.clr",		BRP (0x20, 1, 0, 2, 1)},
d148 1
a148 1
    {"br.ia.dpnt",		BRP (0x20, 1, 0, 3, 0)},
d150 1
a150 1
    {"br.ia.dpnt.clr",		BRP (0x20, 1, 0, 3, 1)},
d159 24
a182 24
    {"br.ret.sptk.few",		BRT (0x21, 4, 0, 0, 0, MOD_RRBS)},
    {"br.ret.sptk",		BRT (0x21, 4, 0, 0, 0, PSEUDO | MOD_RRBS)},
    {"br.ret.sptk.few.clr",	BRT (0x21, 4, 0, 0, 1, MOD_RRBS)},
    {"br.ret.sptk.clr",		BRT (0x21, 4, 0, 0, 1, PSEUDO | MOD_RRBS)},
    {"br.ret.spnt.few",		BRT (0x21, 4, 0, 1, 0, MOD_RRBS)},
    {"br.ret.spnt",		BRT (0x21, 4, 0, 1, 0, PSEUDO | MOD_RRBS)},
    {"br.ret.spnt.few.clr",	BRT (0x21, 4, 0, 1, 1, MOD_RRBS)},
    {"br.ret.spnt.clr",		BRT (0x21, 4, 0, 1, 1, PSEUDO | MOD_RRBS)},
    {"br.ret.dptk.few",		BRT (0x21, 4, 0, 2, 0, MOD_RRBS)},
    {"br.ret.dptk",		BRT (0x21, 4, 0, 2, 0, PSEUDO | MOD_RRBS)},
    {"br.ret.dptk.few.clr",	BRT (0x21, 4, 0, 2, 1, MOD_RRBS)},
    {"br.ret.dptk.clr",		BRT (0x21, 4, 0, 2, 1, PSEUDO | MOD_RRBS)},
    {"br.ret.dpnt.few",		BRT (0x21, 4, 0, 3, 0, MOD_RRBS)},
    {"br.ret.dpnt",		BRT (0x21, 4, 0, 3, 0, PSEUDO | MOD_RRBS)},
    {"br.ret.dpnt.few.clr",	BRT (0x21, 4, 0, 3, 1, MOD_RRBS)},
    {"br.ret.dpnt.clr",		BRT (0x21, 4, 0, 3, 1, PSEUDO | MOD_RRBS)},
    {"br.ret.sptk.many",	BRT (0x21, 4, 1, 0, 0, MOD_RRBS)},
    {"br.ret.sptk.many.clr",	BRT (0x21, 4, 1, 0, 1, MOD_RRBS)},
    {"br.ret.spnt.many",	BRT (0x21, 4, 1, 1, 0, MOD_RRBS)},
    {"br.ret.spnt.many.clr",	BRT (0x21, 4, 1, 1, 1, MOD_RRBS)},
    {"br.ret.dptk.many",	BRT (0x21, 4, 1, 2, 0, MOD_RRBS)},
    {"br.ret.dptk.many.clr",	BRT (0x21, 4, 1, 2, 1, MOD_RRBS)},
    {"br.ret.dpnt.many",	BRT (0x21, 4, 1, 3, 0, MOD_RRBS)},
    {"br.ret.dpnt.many.clr",	BRT (0x21, 4, 1, 3, 1, MOD_RRBS)},
a183 2
#undef BRP
#undef BRT
d185 34
a218 34
    {"cover",		B0, OpX6 (0, 0x02), {0, }, NO_PRED | LAST | MOD_RRBS, 0, NULL},
    {"clrrrb",		B0, OpX6 (0, 0x04), {0, }, NO_PRED | LAST | MOD_RRBS, 0, NULL},
    {"clrrrb.pr",	B0, OpX6 (0, 0x05), {0, }, NO_PRED | LAST | MOD_RRBS, 0, NULL},
    {"rfi",		B0, OpX6 (0, 0x08), {0, }, NO_PRED | LAST | PRIV | MOD_RRBS, 0, NULL},
    {"bsw.0",		B0, OpX6 (0, 0x0c), {0, }, NO_PRED | LAST | PRIV, 0, NULL},
    {"bsw.1",		B0, OpX6 (0, 0x0d), {0, }, NO_PRED | LAST | PRIV, 0, NULL},
    {"epc",		B0, OpX6 (0, 0x10), {0, }, NO_PRED, 0, NULL},

    {"break.b",		B0, OpX6 (0, 0x00), {IMMU21}, EMPTY},

    {"br.call.sptk.few",	B, OpPaWhcD (1, 0, 1, 0), {B1, B2}, EMPTY},
    {"br.call.sptk",		B, OpPaWhcD (1, 0, 1, 0), {B1, B2}, PSEUDO, 0, NULL},
    {"br.call.sptk.few.clr",	B, OpPaWhcD (1, 0, 1, 1), {B1, B2}, EMPTY},
    {"br.call.sptk.clr",	B, OpPaWhcD (1, 0, 1, 1), {B1, B2}, PSEUDO, 0, NULL},
    {"br.call.spnt.few",	B, OpPaWhcD (1, 0, 3, 0), {B1, B2}, EMPTY},
    {"br.call.spnt",		B, OpPaWhcD (1, 0, 3, 0), {B1, B2}, PSEUDO, 0, NULL},
    {"br.call.spnt.few.clr",	B, OpPaWhcD (1, 0, 3, 1), {B1, B2}, EMPTY},
    {"br.call.spnt.clr",	B, OpPaWhcD (1, 0, 3, 1), {B1, B2}, PSEUDO, 0, NULL},
    {"br.call.dptk.few",	B, OpPaWhcD (1, 0, 5, 0), {B1, B2}, EMPTY},
    {"br.call.dptk",		B, OpPaWhcD (1, 0, 5, 0), {B1, B2}, PSEUDO, 0, NULL},
    {"br.call.dptk.few.clr",	B, OpPaWhcD (1, 0, 5, 1), {B1, B2}, EMPTY},
    {"br.call.dptk.clr",	B, OpPaWhcD (1, 0, 5, 1), {B1, B2}, PSEUDO, 0, NULL},
    {"br.call.dpnt.few",	B, OpPaWhcD (1, 0, 7, 0), {B1, B2}, EMPTY},
    {"br.call.dpnt",		B, OpPaWhcD (1, 0, 7, 0), {B1, B2}, PSEUDO, 0, NULL},
    {"br.call.dpnt.few.clr",	B, OpPaWhcD (1, 0, 7, 1), {B1, B2}, EMPTY},
    {"br.call.dpnt.clr",	B, OpPaWhcD (1, 0, 7, 1), {B1, B2}, PSEUDO, 0, NULL},
    {"br.call.sptk.many",	B, OpPaWhcD (1, 1, 1, 0), {B1, B2}, EMPTY},
    {"br.call.sptk.many.clr",	B, OpPaWhcD (1, 1, 1, 1), {B1, B2}, EMPTY},
    {"br.call.spnt.many",	B, OpPaWhcD (1, 1, 3, 0), {B1, B2}, EMPTY},
    {"br.call.spnt.many.clr",	B, OpPaWhcD (1, 1, 3, 1), {B1, B2}, EMPTY},
    {"br.call.dptk.many",	B, OpPaWhcD (1, 1, 5, 0), {B1, B2}, EMPTY},
    {"br.call.dptk.many.clr",	B, OpPaWhcD (1, 1, 5, 1), {B1, B2}, EMPTY},
    {"br.call.dpnt.many",	B, OpPaWhcD (1, 1, 7, 0), {B1, B2}, EMPTY},
    {"br.call.dpnt.many.clr",	B, OpPaWhcD (1, 1, 7, 1), {B1, B2}, EMPTY},
d221 1
a221 1
      B0, OpX6IhWhb (2, a, b, c), {B2, TAG13}, NO_PRED, 0, NULL
d232 1
a232 2
    {"nop.b",		B0, OpX6 (2, 0x00), {IMMU21}, EMPTY},
    {"hint.b",		B0, OpX6 (2, 0x01), {IMMU21}, EMPTY},
d235 1
a235 1
      B0, OpBtypePaWhaDPr (4, 0, a, 0, b, 0), {TGT25c}, PSEUDO, 0, NULL
d245 1
a245 3
      B0, OpBtypePaWhaD (4, 0, a, b, c), {TGT25c}, EMPTY
#define BRP(a,b,c) \
      B0, OpBtypePaWhaD (4, 0, a, b, c), {TGT25c}, PSEUDO, 0, NULL
d247 1
a247 1
    {"br.cond.sptk",		BRP (0, 0, 0)},
d249 1
a249 1
    {"br.cond.sptk.clr",	BRP (0, 0, 1)},
d251 1
a251 1
    {"br.cond.spnt",		BRP (0, 1, 0)},
d253 1
a253 1
    {"br.cond.spnt.clr",	BRP (0, 1, 1)},
d255 1
a255 1
    {"br.cond.dptk",		BRP (0, 2, 0)},
d257 1
a257 1
    {"br.cond.dptk.clr",	BRP (0, 2, 1)},
d259 1
a259 1
    {"br.cond.dpnt",		BRP (0, 3, 0)},
d261 1
a261 1
    {"br.cond.dpnt.clr",	BRP (0, 3, 1)},
d271 1
a271 1
    {"br.sptk",			BRP (0, 0, 0)},
d273 1
a273 1
    {"br.sptk.clr",		BRP (0, 0, 1)},
d275 1
a275 1
    {"br.spnt",			BRP (0, 1, 0)},
d277 1
a277 1
    {"br.spnt.clr",		BRP (0, 1, 1)},
d279 1
a279 1
    {"br.dptk",			BRP (0, 2, 0)},
d281 1
a281 1
    {"br.dptk.clr",		BRP (0, 2, 1)},
d283 1
a283 1
    {"br.dpnt",			BRP (0, 3, 0)},
d285 1
a285 1
    {"br.dpnt.clr",		BRP (0, 3, 1)},
a294 1
#undef BRP
d296 50
a345 50
#define BR(a,b,c,d, e) \
	B0, OpBtypePaWhaD (4, a, b, c, d), {TGT25c}, SLOT2 | e, 0, NULL
    {"br.wexit.sptk.few",	BR (2, 0, 0, 0, MOD_RRBS)},
    {"br.wexit.sptk",		BR (2, 0, 0, 0, PSEUDO | MOD_RRBS)},
    {"br.wexit.sptk.few.clr",	BR (2, 0, 0, 1, MOD_RRBS)},
    {"br.wexit.sptk.clr",	BR (2, 0, 0, 1, PSEUDO | MOD_RRBS)},
    {"br.wexit.spnt.few",	BR (2, 0, 1, 0, MOD_RRBS)},
    {"br.wexit.spnt",		BR (2, 0, 1, 0, PSEUDO | MOD_RRBS)},
    {"br.wexit.spnt.few.clr",	BR (2, 0, 1, 1, MOD_RRBS)},
    {"br.wexit.spnt.clr",	BR (2, 0, 1, 1, PSEUDO | MOD_RRBS)},
    {"br.wexit.dptk.few",	BR (2, 0, 2, 0, MOD_RRBS)},
    {"br.wexit.dptk",		BR (2, 0, 2, 0, PSEUDO | MOD_RRBS)},
    {"br.wexit.dptk.few.clr",	BR (2, 0, 2, 1, MOD_RRBS)},
    {"br.wexit.dptk.clr",	BR (2, 0, 2, 1, PSEUDO | MOD_RRBS)},
    {"br.wexit.dpnt.few",	BR (2, 0, 3, 0, MOD_RRBS)},
    {"br.wexit.dpnt",		BR (2, 0, 3, 0, PSEUDO | MOD_RRBS)},
    {"br.wexit.dpnt.few.clr",	BR (2, 0, 3, 1, MOD_RRBS)},
    {"br.wexit.dpnt.clr",	BR (2, 0, 3, 1, PSEUDO | MOD_RRBS)},
    {"br.wexit.sptk.many",	BR (2, 1, 0, 0, MOD_RRBS)},
    {"br.wexit.sptk.many.clr",	BR (2, 1, 0, 1, MOD_RRBS)},
    {"br.wexit.spnt.many",	BR (2, 1, 1, 0, MOD_RRBS)},
    {"br.wexit.spnt.many.clr",	BR (2, 1, 1, 1, MOD_RRBS)},
    {"br.wexit.dptk.many",	BR (2, 1, 2, 0, MOD_RRBS)},
    {"br.wexit.dptk.many.clr",	BR (2, 1, 2, 1, MOD_RRBS)},
    {"br.wexit.dpnt.many",	BR (2, 1, 3, 0, MOD_RRBS)},
    {"br.wexit.dpnt.many.clr",	BR (2, 1, 3, 1, MOD_RRBS)},
    {"br.wtop.sptk.few",	BR (3, 0, 0, 0, MOD_RRBS)},
    {"br.wtop.sptk",		BR (3, 0, 0, 0, PSEUDO | MOD_RRBS)},
    {"br.wtop.sptk.few.clr",	BR (3, 0, 0, 1, MOD_RRBS)},
    {"br.wtop.sptk.clr",	BR (3, 0, 0, 1, PSEUDO | MOD_RRBS)},
    {"br.wtop.spnt.few",	BR (3, 0, 1, 0, MOD_RRBS)},
    {"br.wtop.spnt",		BR (3, 0, 1, 0, PSEUDO | MOD_RRBS)},
    {"br.wtop.spnt.few.clr",	BR (3, 0, 1, 1, MOD_RRBS)},
    {"br.wtop.spnt.clr",	BR (3, 0, 1, 1, PSEUDO | MOD_RRBS)},
    {"br.wtop.dptk.few",	BR (3, 0, 2, 0, MOD_RRBS)},
    {"br.wtop.dptk",		BR (3, 0, 2, 0, PSEUDO | MOD_RRBS)},
    {"br.wtop.dptk.few.clr",	BR (3, 0, 2, 1, MOD_RRBS)},
    {"br.wtop.dptk.clr",	BR (3, 0, 2, 1, PSEUDO | MOD_RRBS)},
    {"br.wtop.dpnt.few",	BR (3, 0, 3, 0, MOD_RRBS)},
    {"br.wtop.dpnt",		BR (3, 0, 3, 0, PSEUDO | MOD_RRBS)},
    {"br.wtop.dpnt.few.clr",	BR (3, 0, 3, 1, MOD_RRBS)},
    {"br.wtop.dpnt.clr",	BR (3, 0, 3, 1, PSEUDO | MOD_RRBS)},
    {"br.wtop.sptk.many",	BR (3, 1, 0, 0, MOD_RRBS)},
    {"br.wtop.sptk.many.clr",	BR (3, 1, 0, 1, MOD_RRBS)},
    {"br.wtop.spnt.many",	BR (3, 1, 1, 0, MOD_RRBS)},
    {"br.wtop.spnt.many.clr",	BR (3, 1, 1, 1, MOD_RRBS)},
    {"br.wtop.dptk.many",	BR (3, 1, 2, 0, MOD_RRBS)},
    {"br.wtop.dptk.many.clr",	BR (3, 1, 2, 1, MOD_RRBS)},
    {"br.wtop.dpnt.many",	BR (3, 1, 3, 0, MOD_RRBS)},
    {"br.wtop.dpnt.many.clr",	BR (3, 1, 3, 1, MOD_RRBS)},
d349 1
a349 3
	B0, OpBtypePaWhaD (4, a, b, c, d), {TGT25c}, SLOT2 | NO_PRED, 0, NULL
#define BRT(a,b,c,d,e) \
	B0, OpBtypePaWhaD (4, a, b, c, d), {TGT25c}, SLOT2 | NO_PRED | e, 0, NULL
d351 1
a351 1
    {"br.cloop.sptk",		BRT (5, 0, 0, 0, PSEUDO)},
d353 1
a353 1
    {"br.cloop.sptk.clr",	BRT (5, 0, 0, 1, PSEUDO)},
d355 1
a355 1
    {"br.cloop.spnt",		BRT (5, 0, 1, 0, PSEUDO)},
d357 1
a357 1
    {"br.cloop.spnt.clr",	BRT (5, 0, 1, 1, PSEUDO)},
d359 1
a359 1
    {"br.cloop.dptk",		BRT (5, 0, 2, 0, PSEUDO)},
d361 1
a361 1
    {"br.cloop.dptk.clr",	BRT (5, 0, 2, 1, PSEUDO)},
d363 1
a363 1
    {"br.cloop.dpnt",		BRT (5, 0, 3, 0, PSEUDO)},
d365 1
a365 1
    {"br.cloop.dpnt.clr",	BRT (5, 0, 3, 1, PSEUDO)},
d374 76
a449 48
    {"br.cexit.sptk.few",	BRT (6, 0, 0, 0, MOD_RRBS)},
    {"br.cexit.sptk",		BRT (6, 0, 0, 0, PSEUDO | MOD_RRBS)},
    {"br.cexit.sptk.few.clr",	BRT (6, 0, 0, 1, MOD_RRBS)},
    {"br.cexit.sptk.clr",	BRT (6, 0, 0, 1, PSEUDO | MOD_RRBS)},
    {"br.cexit.spnt.few",	BRT (6, 0, 1, 0, MOD_RRBS)},
    {"br.cexit.spnt",		BRT (6, 0, 1, 0, PSEUDO | MOD_RRBS)},
    {"br.cexit.spnt.few.clr",	BRT (6, 0, 1, 1, MOD_RRBS)},
    {"br.cexit.spnt.clr",	BRT (6, 0, 1, 1, PSEUDO | MOD_RRBS)},
    {"br.cexit.dptk.few",	BRT (6, 0, 2, 0, MOD_RRBS)},
    {"br.cexit.dptk",		BRT (6, 0, 2, 0, PSEUDO | MOD_RRBS)},
    {"br.cexit.dptk.few.clr",	BRT (6, 0, 2, 1, MOD_RRBS)},
    {"br.cexit.dptk.clr",	BRT (6, 0, 2, 1, PSEUDO | MOD_RRBS)},
    {"br.cexit.dpnt.few",	BRT (6, 0, 3, 0, MOD_RRBS)},
    {"br.cexit.dpnt",		BRT (6, 0, 3, 0, PSEUDO | MOD_RRBS)},
    {"br.cexit.dpnt.few.clr",	BRT (6, 0, 3, 1, MOD_RRBS)},
    {"br.cexit.dpnt.clr",	BRT (6, 0, 3, 1, PSEUDO | MOD_RRBS)},
    {"br.cexit.sptk.many",	BRT (6, 1, 0, 0, MOD_RRBS)},
    {"br.cexit.sptk.many.clr",	BRT (6, 1, 0, 1, MOD_RRBS)},
    {"br.cexit.spnt.many",	BRT (6, 1, 1, 0, MOD_RRBS)},
    {"br.cexit.spnt.many.clr",	BRT (6, 1, 1, 1, MOD_RRBS)},
    {"br.cexit.dptk.many",	BRT (6, 1, 2, 0, MOD_RRBS)},
    {"br.cexit.dptk.many.clr",	BRT (6, 1, 2, 1, MOD_RRBS)},
    {"br.cexit.dpnt.many",	BRT (6, 1, 3, 0, MOD_RRBS)},
    {"br.cexit.dpnt.many.clr",	BRT (6, 1, 3, 1, MOD_RRBS)},
    {"br.ctop.sptk.few",	BRT (7, 0, 0, 0, MOD_RRBS)},
    {"br.ctop.sptk",		BRT (7, 0, 0, 0, PSEUDO | MOD_RRBS)},
    {"br.ctop.sptk.few.clr",	BRT (7, 0, 0, 1, MOD_RRBS)},
    {"br.ctop.sptk.clr",	BRT (7, 0, 0, 1, PSEUDO | MOD_RRBS)},
    {"br.ctop.spnt.few",	BRT (7, 0, 1, 0, MOD_RRBS)},
    {"br.ctop.spnt",		BRT (7, 0, 1, 0, PSEUDO | MOD_RRBS)},
    {"br.ctop.spnt.few.clr",	BRT (7, 0, 1, 1, MOD_RRBS)},
    {"br.ctop.spnt.clr",	BRT (7, 0, 1, 1, PSEUDO | MOD_RRBS)},
    {"br.ctop.dptk.few",	BRT (7, 0, 2, 0, MOD_RRBS)},
    {"br.ctop.dptk",		BRT (7, 0, 2, 0, PSEUDO | MOD_RRBS)},
    {"br.ctop.dptk.few.clr",	BRT (7, 0, 2, 1, MOD_RRBS)},
    {"br.ctop.dptk.clr",	BRT (7, 0, 2, 1, PSEUDO | MOD_RRBS)},
    {"br.ctop.dpnt.few",	BRT (7, 0, 3, 0, MOD_RRBS)},
    {"br.ctop.dpnt",		BRT (7, 0, 3, 0, PSEUDO | MOD_RRBS)},
    {"br.ctop.dpnt.few.clr",	BRT (7, 0, 3, 1, MOD_RRBS)},
    {"br.ctop.dpnt.clr",	BRT (7, 0, 3, 1, PSEUDO | MOD_RRBS)},
    {"br.ctop.sptk.many",	BRT (7, 1, 0, 0, MOD_RRBS)},
    {"br.ctop.sptk.many.clr",	BRT (7, 1, 0, 1, MOD_RRBS)},
    {"br.ctop.spnt.many",	BRT (7, 1, 1, 0, MOD_RRBS)},
    {"br.ctop.spnt.many.clr",	BRT (7, 1, 1, 1, MOD_RRBS)},
    {"br.ctop.dptk.many",	BRT (7, 1, 2, 0, MOD_RRBS)},
    {"br.ctop.dptk.many.clr",	BRT (7, 1, 2, 1, MOD_RRBS)},
    {"br.ctop.dpnt.many",	BRT (7, 1, 3, 0, MOD_RRBS)},
    {"br.ctop.dpnt.many.clr",	BRT (7, 1, 3, 1, MOD_RRBS)},
a450 26
#undef BRT

    {"br.call.sptk.few",	B, OpPaWhaD (5, 0, 0, 0), {B1, TGT25c}, EMPTY},
    {"br.call.sptk",		B, OpPaWhaD (5, 0, 0, 0), {B1, TGT25c}, PSEUDO, 0, NULL},
    {"br.call.sptk.few.clr",	B, OpPaWhaD (5, 0, 0, 1), {B1, TGT25c}, EMPTY},
    {"br.call.sptk.clr",	B, OpPaWhaD (5, 0, 0, 1), {B1, TGT25c}, PSEUDO, 0, NULL},
    {"br.call.spnt.few",	B, OpPaWhaD (5, 0, 1, 0), {B1, TGT25c}, EMPTY},
    {"br.call.spnt",		B, OpPaWhaD (5, 0, 1, 0), {B1, TGT25c}, PSEUDO, 0, NULL},
    {"br.call.spnt.few.clr",	B, OpPaWhaD (5, 0, 1, 1), {B1, TGT25c}, EMPTY},
    {"br.call.spnt.clr",	B, OpPaWhaD (5, 0, 1, 1), {B1, TGT25c}, PSEUDO, 0, NULL},
    {"br.call.dptk.few",	B, OpPaWhaD (5, 0, 2, 0), {B1, TGT25c}, EMPTY},
    {"br.call.dptk",		B, OpPaWhaD (5, 0, 2, 0), {B1, TGT25c}, PSEUDO, 0, NULL},
    {"br.call.dptk.few.clr",	B, OpPaWhaD (5, 0, 2, 1), {B1, TGT25c}, EMPTY},
    {"br.call.dptk.clr",	B, OpPaWhaD (5, 0, 2, 1), {B1, TGT25c}, PSEUDO, 0, NULL},
    {"br.call.dpnt.few",	B, OpPaWhaD (5, 0, 3, 0), {B1, TGT25c}, EMPTY},
    {"br.call.dpnt",		B, OpPaWhaD (5, 0, 3, 0), {B1, TGT25c}, PSEUDO, 0, NULL},
    {"br.call.dpnt.few.clr",	B, OpPaWhaD (5, 0, 3, 1), {B1, TGT25c}, EMPTY},
    {"br.call.dpnt.clr",	B, OpPaWhaD (5, 0, 3, 1), {B1, TGT25c}, PSEUDO, 0, NULL},
    {"br.call.sptk.many",	B, OpPaWhaD (5, 1, 0, 0), {B1, TGT25c}, EMPTY},
    {"br.call.sptk.many.clr",	B, OpPaWhaD (5, 1, 0, 1), {B1, TGT25c}, EMPTY},
    {"br.call.spnt.many",	B, OpPaWhaD (5, 1, 1, 0), {B1, TGT25c}, EMPTY},
    {"br.call.spnt.many.clr",	B, OpPaWhaD (5, 1, 1, 1), {B1, TGT25c}, EMPTY},
    {"br.call.dptk.many",	B, OpPaWhaD (5, 1, 2, 0), {B1, TGT25c}, EMPTY},
    {"br.call.dptk.many.clr",	B, OpPaWhaD (5, 1, 2, 1), {B1, TGT25c}, EMPTY},
    {"br.call.dpnt.many",	B, OpPaWhaD (5, 1, 3, 0), {B1, TGT25c}, EMPTY},
    {"br.call.dpnt.many.clr",	B, OpPaWhaD (5, 1, 3, 1), {B1, TGT25c}, EMPTY},
d452 1
a452 1
    /* Branch predict.  */
d454 1
a454 1
      B0, OpIhWhb (7, a, b), {TGT25c, TAG13}, NO_PRED, 0, NULL
d465 1
a465 1
    {NULL, 0, 0, 0, 0, {0}, 0, 0, NULL}
a496 1
#undef EMPTY
@


1.4.10.1
log
@2002-11-15  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021115-merge.
@
text
@d2 1
a2 1
   Copyright 1998, 1999, 2000, 2002 Free Software Foundation, Inc.
a71 4
/* Used to initialise unused fields in ia64_opcode struct,
   in order to stop gcc from complaining.  */
#define EMPTY 0,0,NULL

d77 1
a77 1
      B0, OpX6BtypePaWhaDPr (0, 0x20, 0, a, 0, b, 0), {B2}, PSEUDO, 0, NULL
d86 1
a86 3
#define BR(a,b,c,d,e)	B0, OpX6BtypePaWhaD (0, a, b, c, d, e), {B2}, EMPTY
#define BRP(a,b,c,d,e)	B0, OpX6BtypePaWhaD (0, a, b, c, d, e), {B2}, PSEUDO, 0, NULL
#define BRT(a,b,c,d,e,f) B0, OpX6BtypePaWhaD (0, a, b, c, d, e), {B2}, f, 0, NULL
d88 1
a88 1
    {"br.cond.sptk",		BRP (0x20, 0, 0, 0, 0)},
d90 1
a90 1
    {"br.cond.sptk.clr",	BRP (0x20, 0, 0, 0, 1)},
d92 1
a92 1
    {"br.cond.spnt",		BRP (0x20, 0, 0, 1, 0)},
d94 1
a94 1
    {"br.cond.spnt.clr",	BRP (0x20, 0, 0, 1, 1)},
d96 1
a96 1
    {"br.cond.dptk",		BRP (0x20, 0, 0, 2, 0)},
d98 1
a98 1
    {"br.cond.dptk.clr",	BRP (0x20, 0, 0, 2, 1)},
d100 1
a100 1
    {"br.cond.dpnt",		BRP (0x20, 0, 0, 3, 0)},
d102 1
a102 1
    {"br.cond.dpnt.clr",	BRP (0x20, 0, 0, 3, 1)},
d112 1
a112 1
    {"br.sptk",			BRP (0x20, 0, 0, 0, 0)},
d114 1
a114 1
    {"br.sptk.clr",		BRP (0x20, 0, 0, 0, 1)},
d116 1
a116 1
    {"br.spnt",			BRP (0x20, 0, 0, 1, 0)},
d118 1
a118 1
    {"br.spnt.clr",		BRP (0x20, 0, 0, 1, 1)},
d120 1
a120 1
    {"br.dptk",			BRP (0x20, 0, 0, 2, 0)},
d122 1
a122 1
    {"br.dptk.clr",		BRP (0x20, 0, 0, 2, 1)},
d124 1
a124 1
    {"br.dpnt",			BRP (0x20, 0, 0, 3, 0)},
d126 1
a126 1
    {"br.dpnt.clr",		BRP (0x20, 0, 0, 3, 1)},
d136 1
a136 1
    {"br.ia.sptk",		BRP (0x20, 1, 0, 0, 0)},
d138 1
a138 1
    {"br.ia.sptk.clr",		BRP (0x20, 1, 0, 0, 1)},
d140 1
a140 1
    {"br.ia.spnt",		BRP (0x20, 1, 0, 1, 0)},
d142 1
a142 1
    {"br.ia.spnt.clr",		BRP (0x20, 1, 0, 1, 1)},
d144 1
a144 1
    {"br.ia.dptk",		BRP (0x20, 1, 0, 2, 0)},
d146 1
a146 1
    {"br.ia.dptk.clr",		BRP (0x20, 1, 0, 2, 1)},
d148 1
a148 1
    {"br.ia.dpnt",		BRP (0x20, 1, 0, 3, 0)},
d150 1
a150 1
    {"br.ia.dpnt.clr",		BRP (0x20, 1, 0, 3, 1)},
d159 24
a182 24
    {"br.ret.sptk.few",		BRT (0x21, 4, 0, 0, 0, MOD_RRBS)},
    {"br.ret.sptk",		BRT (0x21, 4, 0, 0, 0, PSEUDO | MOD_RRBS)},
    {"br.ret.sptk.few.clr",	BRT (0x21, 4, 0, 0, 1, MOD_RRBS)},
    {"br.ret.sptk.clr",		BRT (0x21, 4, 0, 0, 1, PSEUDO | MOD_RRBS)},
    {"br.ret.spnt.few",		BRT (0x21, 4, 0, 1, 0, MOD_RRBS)},
    {"br.ret.spnt",		BRT (0x21, 4, 0, 1, 0, PSEUDO | MOD_RRBS)},
    {"br.ret.spnt.few.clr",	BRT (0x21, 4, 0, 1, 1, MOD_RRBS)},
    {"br.ret.spnt.clr",		BRT (0x21, 4, 0, 1, 1, PSEUDO | MOD_RRBS)},
    {"br.ret.dptk.few",		BRT (0x21, 4, 0, 2, 0, MOD_RRBS)},
    {"br.ret.dptk",		BRT (0x21, 4, 0, 2, 0, PSEUDO | MOD_RRBS)},
    {"br.ret.dptk.few.clr",	BRT (0x21, 4, 0, 2, 1, MOD_RRBS)},
    {"br.ret.dptk.clr",		BRT (0x21, 4, 0, 2, 1, PSEUDO | MOD_RRBS)},
    {"br.ret.dpnt.few",		BRT (0x21, 4, 0, 3, 0, MOD_RRBS)},
    {"br.ret.dpnt",		BRT (0x21, 4, 0, 3, 0, PSEUDO | MOD_RRBS)},
    {"br.ret.dpnt.few.clr",	BRT (0x21, 4, 0, 3, 1, MOD_RRBS)},
    {"br.ret.dpnt.clr",		BRT (0x21, 4, 0, 3, 1, PSEUDO | MOD_RRBS)},
    {"br.ret.sptk.many",	BRT (0x21, 4, 1, 0, 0, MOD_RRBS)},
    {"br.ret.sptk.many.clr",	BRT (0x21, 4, 1, 0, 1, MOD_RRBS)},
    {"br.ret.spnt.many",	BRT (0x21, 4, 1, 1, 0, MOD_RRBS)},
    {"br.ret.spnt.many.clr",	BRT (0x21, 4, 1, 1, 1, MOD_RRBS)},
    {"br.ret.dptk.many",	BRT (0x21, 4, 1, 2, 0, MOD_RRBS)},
    {"br.ret.dptk.many.clr",	BRT (0x21, 4, 1, 2, 1, MOD_RRBS)},
    {"br.ret.dpnt.many",	BRT (0x21, 4, 1, 3, 0, MOD_RRBS)},
    {"br.ret.dpnt.many.clr",	BRT (0x21, 4, 1, 3, 1, MOD_RRBS)},
d184 35
a218 37
#undef BRP
#undef BRT
    
    {"cover",		B0, OpX6 (0, 0x02), {0, }, NO_PRED | LAST | MOD_RRBS, 0, NULL},
    {"clrrrb",		B0, OpX6 (0, 0x04), {0, }, NO_PRED | LAST | MOD_RRBS, 0, NULL},
    {"clrrrb.pr",	B0, OpX6 (0, 0x05), {0, }, NO_PRED | LAST | MOD_RRBS, 0, NULL},
    {"rfi",		B0, OpX6 (0, 0x08), {0, }, NO_PRED | LAST | PRIV | MOD_RRBS, 0, NULL},
    {"bsw.0",		B0, OpX6 (0, 0x0c), {0, }, NO_PRED | LAST | PRIV, 0, NULL},
    {"bsw.1",		B0, OpX6 (0, 0x0d), {0, }, NO_PRED | LAST | PRIV, 0, NULL},
    {"epc",		B0, OpX6 (0, 0x10), {0, }, NO_PRED, 0, NULL},

    {"break.b",		B0, OpX6 (0, 0x00), {IMMU21}, EMPTY},

    {"br.call.sptk.few",	B, OpPaWhcD (1, 0, 1, 0), {B1, B2}, EMPTY},
    {"br.call.sptk",		B, OpPaWhcD (1, 0, 1, 0), {B1, B2}, PSEUDO, 0, NULL},
    {"br.call.sptk.few.clr",	B, OpPaWhcD (1, 0, 1, 1), {B1, B2}, EMPTY},
    {"br.call.sptk.clr",	B, OpPaWhcD (1, 0, 1, 1), {B1, B2}, PSEUDO, 0, NULL},
    {"br.call.spnt.few",	B, OpPaWhcD (1, 0, 3, 0), {B1, B2}, EMPTY},
    {"br.call.spnt",		B, OpPaWhcD (1, 0, 3, 0), {B1, B2}, PSEUDO, 0, NULL},
    {"br.call.spnt.few.clr",	B, OpPaWhcD (1, 0, 3, 1), {B1, B2}, EMPTY},
    {"br.call.spnt.clr",	B, OpPaWhcD (1, 0, 3, 1), {B1, B2}, PSEUDO, 0, NULL},
    {"br.call.dptk.few",	B, OpPaWhcD (1, 0, 5, 0), {B1, B2}, EMPTY},
    {"br.call.dptk",		B, OpPaWhcD (1, 0, 5, 0), {B1, B2}, PSEUDO, 0, NULL},
    {"br.call.dptk.few.clr",	B, OpPaWhcD (1, 0, 5, 1), {B1, B2}, EMPTY},
    {"br.call.dptk.clr",	B, OpPaWhcD (1, 0, 5, 1), {B1, B2}, PSEUDO, 0, NULL},
    {"br.call.dpnt.few",	B, OpPaWhcD (1, 0, 7, 0), {B1, B2}, EMPTY},
    {"br.call.dpnt",		B, OpPaWhcD (1, 0, 7, 0), {B1, B2}, PSEUDO, 0, NULL},
    {"br.call.dpnt.few.clr",	B, OpPaWhcD (1, 0, 7, 1), {B1, B2}, EMPTY},
    {"br.call.dpnt.clr",	B, OpPaWhcD (1, 0, 7, 1), {B1, B2}, PSEUDO, 0, NULL},
    {"br.call.sptk.many",	B, OpPaWhcD (1, 1, 1, 0), {B1, B2}, EMPTY},
    {"br.call.sptk.many.clr",	B, OpPaWhcD (1, 1, 1, 1), {B1, B2}, EMPTY},
    {"br.call.spnt.many",	B, OpPaWhcD (1, 1, 3, 0), {B1, B2}, EMPTY},
    {"br.call.spnt.many.clr",	B, OpPaWhcD (1, 1, 3, 1), {B1, B2}, EMPTY},
    {"br.call.dptk.many",	B, OpPaWhcD (1, 1, 5, 0), {B1, B2}, EMPTY},
    {"br.call.dptk.many.clr",	B, OpPaWhcD (1, 1, 5, 1), {B1, B2}, EMPTY},
    {"br.call.dpnt.many",	B, OpPaWhcD (1, 1, 7, 0), {B1, B2}, EMPTY},
    {"br.call.dpnt.many.clr",	B, OpPaWhcD (1, 1, 7, 1), {B1, B2}, EMPTY},
d221 1
a221 1
      B0, OpX6IhWhb (2, a, b, c), {B2, TAG13}, NO_PRED, 0, NULL
d232 1
a232 1
    {"nop.b",		B0, OpX6 (2, 0x00), {IMMU21}, EMPTY},
d235 1
a235 1
      B0, OpBtypePaWhaDPr (4, 0, a, 0, b, 0), {TGT25c}, PSEUDO, 0, NULL
d245 1
a245 3
      B0, OpBtypePaWhaD (4, 0, a, b, c), {TGT25c}, EMPTY
#define BRP(a,b,c) \
      B0, OpBtypePaWhaD (4, 0, a, b, c), {TGT25c}, PSEUDO, 0, NULL
d247 1
a247 1
    {"br.cond.sptk",		BRP (0, 0, 0)},
d249 1
a249 1
    {"br.cond.sptk.clr",	BRP (0, 0, 1)},
d251 1
a251 1
    {"br.cond.spnt",		BRP (0, 1, 0)},
d253 1
a253 1
    {"br.cond.spnt.clr",	BRP (0, 1, 1)},
d255 1
a255 1
    {"br.cond.dptk",		BRP (0, 2, 0)},
d257 1
a257 1
    {"br.cond.dptk.clr",	BRP (0, 2, 1)},
d259 1
a259 1
    {"br.cond.dpnt",		BRP (0, 3, 0)},
d261 1
a261 1
    {"br.cond.dpnt.clr",	BRP (0, 3, 1)},
d271 1
a271 1
    {"br.sptk",			BRP (0, 0, 0)},
d273 1
a273 1
    {"br.sptk.clr",		BRP (0, 0, 1)},
d275 1
a275 1
    {"br.spnt",			BRP (0, 1, 0)},
d277 1
a277 1
    {"br.spnt.clr",		BRP (0, 1, 1)},
d279 1
a279 1
    {"br.dptk",			BRP (0, 2, 0)},
d281 1
a281 1
    {"br.dptk.clr",		BRP (0, 2, 1)},
d283 1
a283 1
    {"br.dpnt",			BRP (0, 3, 0)},
d285 1
a285 1
    {"br.dpnt.clr",		BRP (0, 3, 1)},
a294 1
#undef BRP
d296 50
a345 50
#define BR(a,b,c,d, e) \
	B0, OpBtypePaWhaD (4, a, b, c, d), {TGT25c}, SLOT2 | e, 0, NULL
    {"br.wexit.sptk.few",	BR (2, 0, 0, 0, MOD_RRBS)},
    {"br.wexit.sptk",		BR (2, 0, 0, 0, PSEUDO | MOD_RRBS)},
    {"br.wexit.sptk.few.clr",	BR (2, 0, 0, 1, MOD_RRBS)},
    {"br.wexit.sptk.clr",	BR (2, 0, 0, 1, PSEUDO | MOD_RRBS)},
    {"br.wexit.spnt.few",	BR (2, 0, 1, 0, MOD_RRBS)},
    {"br.wexit.spnt",		BR (2, 0, 1, 0, PSEUDO | MOD_RRBS)},
    {"br.wexit.spnt.few.clr",	BR (2, 0, 1, 1, MOD_RRBS)},
    {"br.wexit.spnt.clr",	BR (2, 0, 1, 1, PSEUDO | MOD_RRBS)},
    {"br.wexit.dptk.few",	BR (2, 0, 2, 0, MOD_RRBS)},
    {"br.wexit.dptk",		BR (2, 0, 2, 0, PSEUDO | MOD_RRBS)},
    {"br.wexit.dptk.few.clr",	BR (2, 0, 2, 1, MOD_RRBS)},
    {"br.wexit.dptk.clr",	BR (2, 0, 2, 1, PSEUDO | MOD_RRBS)},
    {"br.wexit.dpnt.few",	BR (2, 0, 3, 0, MOD_RRBS)},
    {"br.wexit.dpnt",		BR (2, 0, 3, 0, PSEUDO | MOD_RRBS)},
    {"br.wexit.dpnt.few.clr",	BR (2, 0, 3, 1, MOD_RRBS)},
    {"br.wexit.dpnt.clr",	BR (2, 0, 3, 1, PSEUDO | MOD_RRBS)},
    {"br.wexit.sptk.many",	BR (2, 1, 0, 0, MOD_RRBS)},
    {"br.wexit.sptk.many.clr",	BR (2, 1, 0, 1, MOD_RRBS)},
    {"br.wexit.spnt.many",	BR (2, 1, 1, 0, MOD_RRBS)},
    {"br.wexit.spnt.many.clr",	BR (2, 1, 1, 1, MOD_RRBS)},
    {"br.wexit.dptk.many",	BR (2, 1, 2, 0, MOD_RRBS)},
    {"br.wexit.dptk.many.clr",	BR (2, 1, 2, 1, MOD_RRBS)},
    {"br.wexit.dpnt.many",	BR (2, 1, 3, 0, MOD_RRBS)},
    {"br.wexit.dpnt.many.clr",	BR (2, 1, 3, 1, MOD_RRBS)},
    {"br.wtop.sptk.few",	BR (3, 0, 0, 0, MOD_RRBS)},
    {"br.wtop.sptk",		BR (3, 0, 0, 0, PSEUDO | MOD_RRBS)},
    {"br.wtop.sptk.few.clr",	BR (3, 0, 0, 1, MOD_RRBS)},
    {"br.wtop.sptk.clr",	BR (3, 0, 0, 1, PSEUDO | MOD_RRBS)},
    {"br.wtop.spnt.few",	BR (3, 0, 1, 0, MOD_RRBS)},
    {"br.wtop.spnt",		BR (3, 0, 1, 0, PSEUDO | MOD_RRBS)},
    {"br.wtop.spnt.few.clr",	BR (3, 0, 1, 1, MOD_RRBS)},
    {"br.wtop.spnt.clr",	BR (3, 0, 1, 1, PSEUDO | MOD_RRBS)},
    {"br.wtop.dptk.few",	BR (3, 0, 2, 0, MOD_RRBS)},
    {"br.wtop.dptk",		BR (3, 0, 2, 0, PSEUDO | MOD_RRBS)},
    {"br.wtop.dptk.few.clr",	BR (3, 0, 2, 1, MOD_RRBS)},
    {"br.wtop.dptk.clr",	BR (3, 0, 2, 1, PSEUDO | MOD_RRBS)},
    {"br.wtop.dpnt.few",	BR (3, 0, 3, 0, MOD_RRBS)},
    {"br.wtop.dpnt",		BR (3, 0, 3, 0, PSEUDO | MOD_RRBS)},
    {"br.wtop.dpnt.few.clr",	BR (3, 0, 3, 1, MOD_RRBS)},
    {"br.wtop.dpnt.clr",	BR (3, 0, 3, 1, PSEUDO | MOD_RRBS)},
    {"br.wtop.sptk.many",	BR (3, 1, 0, 0, MOD_RRBS)},
    {"br.wtop.sptk.many.clr",	BR (3, 1, 0, 1, MOD_RRBS)},
    {"br.wtop.spnt.many",	BR (3, 1, 1, 0, MOD_RRBS)},
    {"br.wtop.spnt.many.clr",	BR (3, 1, 1, 1, MOD_RRBS)},
    {"br.wtop.dptk.many",	BR (3, 1, 2, 0, MOD_RRBS)},
    {"br.wtop.dptk.many.clr",	BR (3, 1, 2, 1, MOD_RRBS)},
    {"br.wtop.dpnt.many",	BR (3, 1, 3, 0, MOD_RRBS)},
    {"br.wtop.dpnt.many.clr",	BR (3, 1, 3, 1, MOD_RRBS)},
d349 1
a349 3
	B0, OpBtypePaWhaD (4, a, b, c, d), {TGT25c}, SLOT2 | NO_PRED, 0, NULL
#define BRT(a,b,c,d,e) \
	B0, OpBtypePaWhaD (4, a, b, c, d), {TGT25c}, SLOT2 | NO_PRED | e, 0, NULL
d351 1
a351 1
    {"br.cloop.sptk",		BRT (5, 0, 0, 0, PSEUDO)},
d353 1
a353 1
    {"br.cloop.sptk.clr",	BRT (5, 0, 0, 1, PSEUDO)},
d355 1
a355 1
    {"br.cloop.spnt",		BRT (5, 0, 1, 0, PSEUDO)},
d357 1
a357 1
    {"br.cloop.spnt.clr",	BRT (5, 0, 1, 1, PSEUDO)},
d359 1
a359 1
    {"br.cloop.dptk",		BRT (5, 0, 2, 0, PSEUDO)},
d361 1
a361 1
    {"br.cloop.dptk.clr",	BRT (5, 0, 2, 1, PSEUDO)},
d363 1
a363 1
    {"br.cloop.dpnt",		BRT (5, 0, 3, 0, PSEUDO)},
d365 1
a365 1
    {"br.cloop.dpnt.clr",	BRT (5, 0, 3, 1, PSEUDO)},
d374 76
a449 48
    {"br.cexit.sptk.few",	BRT (6, 0, 0, 0, MOD_RRBS)},
    {"br.cexit.sptk",		BRT (6, 0, 0, 0, PSEUDO | MOD_RRBS)},
    {"br.cexit.sptk.few.clr",	BRT (6, 0, 0, 1, MOD_RRBS)},
    {"br.cexit.sptk.clr",	BRT (6, 0, 0, 1, PSEUDO | MOD_RRBS)},
    {"br.cexit.spnt.few",	BRT (6, 0, 1, 0, MOD_RRBS)},
    {"br.cexit.spnt",		BRT (6, 0, 1, 0, PSEUDO | MOD_RRBS)},
    {"br.cexit.spnt.few.clr",	BRT (6, 0, 1, 1, MOD_RRBS)},
    {"br.cexit.spnt.clr",	BRT (6, 0, 1, 1, PSEUDO | MOD_RRBS)},
    {"br.cexit.dptk.few",	BRT (6, 0, 2, 0, MOD_RRBS)},
    {"br.cexit.dptk",		BRT (6, 0, 2, 0, PSEUDO | MOD_RRBS)},
    {"br.cexit.dptk.few.clr",	BRT (6, 0, 2, 1, MOD_RRBS)},
    {"br.cexit.dptk.clr",	BRT (6, 0, 2, 1, PSEUDO | MOD_RRBS)},
    {"br.cexit.dpnt.few",	BRT (6, 0, 3, 0, MOD_RRBS)},
    {"br.cexit.dpnt",		BRT (6, 0, 3, 0, PSEUDO | MOD_RRBS)},
    {"br.cexit.dpnt.few.clr",	BRT (6, 0, 3, 1, MOD_RRBS)},
    {"br.cexit.dpnt.clr",	BRT (6, 0, 3, 1, PSEUDO | MOD_RRBS)},
    {"br.cexit.sptk.many",	BRT (6, 1, 0, 0, MOD_RRBS)},
    {"br.cexit.sptk.many.clr",	BRT (6, 1, 0, 1, MOD_RRBS)},
    {"br.cexit.spnt.many",	BRT (6, 1, 1, 0, MOD_RRBS)},
    {"br.cexit.spnt.many.clr",	BRT (6, 1, 1, 1, MOD_RRBS)},
    {"br.cexit.dptk.many",	BRT (6, 1, 2, 0, MOD_RRBS)},
    {"br.cexit.dptk.many.clr",	BRT (6, 1, 2, 1, MOD_RRBS)},
    {"br.cexit.dpnt.many",	BRT (6, 1, 3, 0, MOD_RRBS)},
    {"br.cexit.dpnt.many.clr",	BRT (6, 1, 3, 1, MOD_RRBS)},
    {"br.ctop.sptk.few",	BRT (7, 0, 0, 0, MOD_RRBS)},
    {"br.ctop.sptk",		BRT (7, 0, 0, 0, PSEUDO | MOD_RRBS)},
    {"br.ctop.sptk.few.clr",	BRT (7, 0, 0, 1, MOD_RRBS)},
    {"br.ctop.sptk.clr",	BRT (7, 0, 0, 1, PSEUDO | MOD_RRBS)},
    {"br.ctop.spnt.few",	BRT (7, 0, 1, 0, MOD_RRBS)},
    {"br.ctop.spnt",		BRT (7, 0, 1, 0, PSEUDO | MOD_RRBS)},
    {"br.ctop.spnt.few.clr",	BRT (7, 0, 1, 1, MOD_RRBS)},
    {"br.ctop.spnt.clr",	BRT (7, 0, 1, 1, PSEUDO | MOD_RRBS)},
    {"br.ctop.dptk.few",	BRT (7, 0, 2, 0, MOD_RRBS)},
    {"br.ctop.dptk",		BRT (7, 0, 2, 0, PSEUDO | MOD_RRBS)},
    {"br.ctop.dptk.few.clr",	BRT (7, 0, 2, 1, MOD_RRBS)},
    {"br.ctop.dptk.clr",	BRT (7, 0, 2, 1, PSEUDO | MOD_RRBS)},
    {"br.ctop.dpnt.few",	BRT (7, 0, 3, 0, MOD_RRBS)},
    {"br.ctop.dpnt",		BRT (7, 0, 3, 0, PSEUDO | MOD_RRBS)},
    {"br.ctop.dpnt.few.clr",	BRT (7, 0, 3, 1, MOD_RRBS)},
    {"br.ctop.dpnt.clr",	BRT (7, 0, 3, 1, PSEUDO | MOD_RRBS)},
    {"br.ctop.sptk.many",	BRT (7, 1, 0, 0, MOD_RRBS)},
    {"br.ctop.sptk.many.clr",	BRT (7, 1, 0, 1, MOD_RRBS)},
    {"br.ctop.spnt.many",	BRT (7, 1, 1, 0, MOD_RRBS)},
    {"br.ctop.spnt.many.clr",	BRT (7, 1, 1, 1, MOD_RRBS)},
    {"br.ctop.dptk.many",	BRT (7, 1, 2, 0, MOD_RRBS)},
    {"br.ctop.dptk.many.clr",	BRT (7, 1, 2, 1, MOD_RRBS)},
    {"br.ctop.dpnt.many",	BRT (7, 1, 3, 0, MOD_RRBS)},
    {"br.ctop.dpnt.many.clr",	BRT (7, 1, 3, 1, MOD_RRBS)},
a450 26
#undef BRT

    {"br.call.sptk.few",	B, OpPaWhaD (5, 0, 0, 0), {B1, TGT25c}, EMPTY},
    {"br.call.sptk",		B, OpPaWhaD (5, 0, 0, 0), {B1, TGT25c}, PSEUDO, 0, NULL},
    {"br.call.sptk.few.clr",	B, OpPaWhaD (5, 0, 0, 1), {B1, TGT25c}, EMPTY},
    {"br.call.sptk.clr",	B, OpPaWhaD (5, 0, 0, 1), {B1, TGT25c}, PSEUDO, 0, NULL},
    {"br.call.spnt.few",	B, OpPaWhaD (5, 0, 1, 0), {B1, TGT25c}, EMPTY},
    {"br.call.spnt",		B, OpPaWhaD (5, 0, 1, 0), {B1, TGT25c}, PSEUDO, 0, NULL},
    {"br.call.spnt.few.clr",	B, OpPaWhaD (5, 0, 1, 1), {B1, TGT25c}, EMPTY},
    {"br.call.spnt.clr",	B, OpPaWhaD (5, 0, 1, 1), {B1, TGT25c}, PSEUDO, 0, NULL},
    {"br.call.dptk.few",	B, OpPaWhaD (5, 0, 2, 0), {B1, TGT25c}, EMPTY},
    {"br.call.dptk",		B, OpPaWhaD (5, 0, 2, 0), {B1, TGT25c}, PSEUDO, 0, NULL},
    {"br.call.dptk.few.clr",	B, OpPaWhaD (5, 0, 2, 1), {B1, TGT25c}, EMPTY},
    {"br.call.dptk.clr",	B, OpPaWhaD (5, 0, 2, 1), {B1, TGT25c}, PSEUDO, 0, NULL},
    {"br.call.dpnt.few",	B, OpPaWhaD (5, 0, 3, 0), {B1, TGT25c}, EMPTY},
    {"br.call.dpnt",		B, OpPaWhaD (5, 0, 3, 0), {B1, TGT25c}, PSEUDO, 0, NULL},
    {"br.call.dpnt.few.clr",	B, OpPaWhaD (5, 0, 3, 1), {B1, TGT25c}, EMPTY},
    {"br.call.dpnt.clr",	B, OpPaWhaD (5, 0, 3, 1), {B1, TGT25c}, PSEUDO, 0, NULL},
    {"br.call.sptk.many",	B, OpPaWhaD (5, 1, 0, 0), {B1, TGT25c}, EMPTY},
    {"br.call.sptk.many.clr",	B, OpPaWhaD (5, 1, 0, 1), {B1, TGT25c}, EMPTY},
    {"br.call.spnt.many",	B, OpPaWhaD (5, 1, 1, 0), {B1, TGT25c}, EMPTY},
    {"br.call.spnt.many.clr",	B, OpPaWhaD (5, 1, 1, 1), {B1, TGT25c}, EMPTY},
    {"br.call.dptk.many",	B, OpPaWhaD (5, 1, 2, 0), {B1, TGT25c}, EMPTY},
    {"br.call.dptk.many.clr",	B, OpPaWhaD (5, 1, 2, 1), {B1, TGT25c}, EMPTY},
    {"br.call.dpnt.many",	B, OpPaWhaD (5, 1, 3, 0), {B1, TGT25c}, EMPTY},
    {"br.call.dpnt.many.clr",	B, OpPaWhaD (5, 1, 3, 1), {B1, TGT25c}, EMPTY},
d452 1
a452 1
    /* Branch predict.  */
d454 1
a454 1
      B0, OpIhWhb (7, a, b), {TGT25c, TAG13}, NO_PRED, 0, NULL
d465 1
a465 1
    {NULL, 0, 0, 0, 0, {0}, 0, 0, NULL}
a496 1
#undef EMPTY
@


1.4.10.2
log
@2002-12-23  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021223-merge.
@
text
@d192 1
a192 1

a240 1
    {"hint.b",		B0, OpX6 (2, 0x01), {IMMU21}, EMPTY},
@


1.3
log
@Fix typos in ChangeLogs; fix dates in copyright notices
@
text
@d35 1
d45 1
d51 2
d195 24
a218 24
    {"br.call.sptk.few",	B, OpPaWhaD (1, 0, 0, 0), {B1, B2}},
    {"br.call.sptk",		B, OpPaWhaD (1, 0, 0, 0), {B1, B2}, PSEUDO},
    {"br.call.sptk.few.clr",	B, OpPaWhaD (1, 0, 0, 1), {B1, B2}},
    {"br.call.sptk.clr",	B, OpPaWhaD (1, 0, 0, 1), {B1, B2}, PSEUDO},
    {"br.call.spnt.few",	B, OpPaWhaD (1, 0, 1, 0), {B1, B2}},
    {"br.call.spnt",		B, OpPaWhaD (1, 0, 1, 0), {B1, B2}, PSEUDO},
    {"br.call.spnt.few.clr",	B, OpPaWhaD (1, 0, 1, 1), {B1, B2}},
    {"br.call.spnt.clr",	B, OpPaWhaD (1, 0, 1, 1), {B1, B2}, PSEUDO},
    {"br.call.dptk.few",	B, OpPaWhaD (1, 0, 2, 0), {B1, B2}},
    {"br.call.dptk",		B, OpPaWhaD (1, 0, 2, 0), {B1, B2}, PSEUDO},
    {"br.call.dptk.few.clr",	B, OpPaWhaD (1, 0, 2, 1), {B1, B2}},
    {"br.call.dptk.clr",	B, OpPaWhaD (1, 0, 2, 1), {B1, B2}, PSEUDO},
    {"br.call.dpnt.few",	B, OpPaWhaD (1, 0, 3, 0), {B1, B2}},
    {"br.call.dpnt",		B, OpPaWhaD (1, 0, 3, 0), {B1, B2}, PSEUDO},
    {"br.call.dpnt.few.clr",	B, OpPaWhaD (1, 0, 3, 1), {B1, B2}},
    {"br.call.dpnt.clr",	B, OpPaWhaD (1, 0, 3, 1), {B1, B2}, PSEUDO},
    {"br.call.sptk.many",	B, OpPaWhaD (1, 1, 0, 0), {B1, B2}},
    {"br.call.sptk.many.clr",	B, OpPaWhaD (1, 1, 0, 1), {B1, B2}},
    {"br.call.spnt.many",	B, OpPaWhaD (1, 1, 1, 0), {B1, B2}},
    {"br.call.spnt.many.clr",	B, OpPaWhaD (1, 1, 1, 1), {B1, B2}},
    {"br.call.dptk.many",	B, OpPaWhaD (1, 1, 2, 0), {B1, B2}},
    {"br.call.dptk.many.clr",	B, OpPaWhaD (1, 1, 2, 1), {B1, B2}},
    {"br.call.dpnt.many",	B, OpPaWhaD (1, 1, 3, 0), {B1, B2}},
    {"br.call.dpnt.many.clr",	B, OpPaWhaD (1, 1, 3, 1), {B1, B2}},
d477 1
d486 1
d490 1
@


1.3.16.1
log
@Merge w/trunk (kseitz_interps-20020722-merge).
@
text
@a34 1
#define bWhc(x)		(((ia64_insn) ((x) & 0x7)) << 32)
a43 1
#define mWhc		bWhc (-1)
a48 2
#define OpPaWhcD(a,b,c,d) \
	(bOp (a) | bPa (b) | bWhc (c) | bD (d)), (mOp | mPa | mWhc | mD)
d191 24
a214 24
    {"br.call.sptk.few",	B, OpPaWhcD (1, 0, 1, 0), {B1, B2}},
    {"br.call.sptk",		B, OpPaWhcD (1, 0, 1, 0), {B1, B2}, PSEUDO},
    {"br.call.sptk.few.clr",	B, OpPaWhcD (1, 0, 1, 1), {B1, B2}},
    {"br.call.sptk.clr",	B, OpPaWhcD (1, 0, 1, 1), {B1, B2}, PSEUDO},
    {"br.call.spnt.few",	B, OpPaWhcD (1, 0, 3, 0), {B1, B2}},
    {"br.call.spnt",		B, OpPaWhcD (1, 0, 3, 0), {B1, B2}, PSEUDO},
    {"br.call.spnt.few.clr",	B, OpPaWhcD (1, 0, 3, 1), {B1, B2}},
    {"br.call.spnt.clr",	B, OpPaWhcD (1, 0, 3, 1), {B1, B2}, PSEUDO},
    {"br.call.dptk.few",	B, OpPaWhcD (1, 0, 5, 0), {B1, B2}},
    {"br.call.dptk",		B, OpPaWhcD (1, 0, 5, 0), {B1, B2}, PSEUDO},
    {"br.call.dptk.few.clr",	B, OpPaWhcD (1, 0, 5, 1), {B1, B2}},
    {"br.call.dptk.clr",	B, OpPaWhcD (1, 0, 5, 1), {B1, B2}, PSEUDO},
    {"br.call.dpnt.few",	B, OpPaWhcD (1, 0, 7, 0), {B1, B2}},
    {"br.call.dpnt",		B, OpPaWhcD (1, 0, 7, 0), {B1, B2}, PSEUDO},
    {"br.call.dpnt.few.clr",	B, OpPaWhcD (1, 0, 7, 1), {B1, B2}},
    {"br.call.dpnt.clr",	B, OpPaWhcD (1, 0, 7, 1), {B1, B2}, PSEUDO},
    {"br.call.sptk.many",	B, OpPaWhcD (1, 1, 1, 0), {B1, B2}},
    {"br.call.sptk.many.clr",	B, OpPaWhcD (1, 1, 1, 1), {B1, B2}},
    {"br.call.spnt.many",	B, OpPaWhcD (1, 1, 3, 0), {B1, B2}},
    {"br.call.spnt.many.clr",	B, OpPaWhcD (1, 1, 3, 1), {B1, B2}},
    {"br.call.dptk.many",	B, OpPaWhcD (1, 1, 5, 0), {B1, B2}},
    {"br.call.dptk.many.clr",	B, OpPaWhcD (1, 1, 5, 1), {B1, B2}},
    {"br.call.dpnt.many",	B, OpPaWhcD (1, 1, 7, 0), {B1, B2}},
    {"br.call.dpnt.many.clr",	B, OpPaWhcD (1, 1, 7, 1), {B1, B2}},
a472 1
#undef bWhc
a480 1
#undef mWhc
a483 1
#undef OpPaWhcD
@


1.3.18.1
log
@Fix incorrect assembly of indirect br.call instructions.
	* ia64-opc-b.c (bWhc): New macro.
	(mWhc): Ditto.
	(OpPaWhcD): Ditto.
	(ia64_opcodes_b): Correct patterns for indirect call
	instructions to use 3-bit "wh" field.
	* ia64-asmtab.c: Regnerate.
@
text
@a34 1
#define bWhc(x)		(((ia64_insn) ((x) & 0x7)) << 32)
a43 1
#define mWhc		bWhc (-1)
a48 2
#define OpPaWhcD(a,b,c,d) \
	(bOp (a) | bPa (b) | bWhc (c) | bD (d)), (mOp | mPa | mWhc | mD)
d191 24
a214 24
    {"br.call.sptk.few",	B, OpPaWhcD (1, 0, 1, 0), {B1, B2}},
    {"br.call.sptk",		B, OpPaWhcD (1, 0, 1, 0), {B1, B2}, PSEUDO},
    {"br.call.sptk.few.clr",	B, OpPaWhcD (1, 0, 1, 1), {B1, B2}},
    {"br.call.sptk.clr",	B, OpPaWhcD (1, 0, 1, 1), {B1, B2}, PSEUDO},
    {"br.call.spnt.few",	B, OpPaWhcD (1, 0, 3, 0), {B1, B2}},
    {"br.call.spnt",		B, OpPaWhcD (1, 0, 3, 0), {B1, B2}, PSEUDO},
    {"br.call.spnt.few.clr",	B, OpPaWhcD (1, 0, 3, 1), {B1, B2}},
    {"br.call.spnt.clr",	B, OpPaWhcD (1, 0, 3, 1), {B1, B2}, PSEUDO},
    {"br.call.dptk.few",	B, OpPaWhcD (1, 0, 5, 0), {B1, B2}},
    {"br.call.dptk",		B, OpPaWhcD (1, 0, 5, 0), {B1, B2}, PSEUDO},
    {"br.call.dptk.few.clr",	B, OpPaWhcD (1, 0, 5, 1), {B1, B2}},
    {"br.call.dptk.clr",	B, OpPaWhcD (1, 0, 5, 1), {B1, B2}, PSEUDO},
    {"br.call.dpnt.few",	B, OpPaWhcD (1, 0, 7, 0), {B1, B2}},
    {"br.call.dpnt",		B, OpPaWhcD (1, 0, 7, 0), {B1, B2}, PSEUDO},
    {"br.call.dpnt.few.clr",	B, OpPaWhcD (1, 0, 7, 1), {B1, B2}},
    {"br.call.dpnt.clr",	B, OpPaWhcD (1, 0, 7, 1), {B1, B2}, PSEUDO},
    {"br.call.sptk.many",	B, OpPaWhcD (1, 1, 1, 0), {B1, B2}},
    {"br.call.sptk.many.clr",	B, OpPaWhcD (1, 1, 1, 1), {B1, B2}},
    {"br.call.spnt.many",	B, OpPaWhcD (1, 1, 3, 0), {B1, B2}},
    {"br.call.spnt.many.clr",	B, OpPaWhcD (1, 1, 3, 1), {B1, B2}},
    {"br.call.dptk.many",	B, OpPaWhcD (1, 1, 5, 0), {B1, B2}},
    {"br.call.dptk.many.clr",	B, OpPaWhcD (1, 1, 5, 1), {B1, B2}},
    {"br.call.dpnt.many",	B, OpPaWhcD (1, 1, 7, 0), {B1, B2}},
    {"br.call.dpnt.many.clr",	B, OpPaWhcD (1, 1, 7, 1), {B1, B2}},
a472 1
#undef bWhc
a480 1
#undef mWhc
a483 1
#undef OpPaWhcD
@


1.2
log
@Misc assembly/disassembly fixes.
@
text
@d2 1
a2 1
   Copyright (C) 1998, 1999 Free Software Foundation, Inc.
@


1.2.4.1
log
@Update copyright notices.
@
text
@d2 1
a2 1
   Copyright 1998, 1999, 2000 Free Software Foundation, Inc.
@


1.1
log
@IA-64 ELF support.
@
text
@d240 51
a290 48
    {"br.cond.sptk.few",	B0, OpBtypePaWhaD (4, 0, 0, 0, 0), {TGT25c}},
    {"br.cond.sptk",		B0, OpBtypePaWhaD (4, 0, 0, 0, 0), {TGT25c}, PSEUDO},
    {"br.cond.sptk.few.clr",	B0, OpBtypePaWhaD (4, 0, 0, 0, 1), {TGT25c}},
    {"br.cond.sptk.clr",	B0, OpBtypePaWhaD (4, 0, 0, 0, 1), {TGT25c}, PSEUDO},
    {"br.cond.spnt.few",	B0, OpBtypePaWhaD (4, 0, 0, 1, 0), {TGT25c}},
    {"br.cond.spnt",		B0, OpBtypePaWhaD (4, 0, 0, 1, 0), {TGT25c}, PSEUDO},
    {"br.cond.spnt.few.clr",	B0, OpBtypePaWhaD (4, 0, 0, 1, 1), {TGT25c}},
    {"br.cond.spnt.clr",	B0, OpBtypePaWhaD (4, 0, 0, 1, 1), {TGT25c}, PSEUDO},
    {"br.cond.dptk.few",	B0, OpBtypePaWhaD (4, 0, 0, 2, 0), {TGT25c}},
    {"br.cond.dptk",		B0, OpBtypePaWhaD (4, 0, 0, 2, 0), {TGT25c}, PSEUDO},
    {"br.cond.dptk.few.clr",	B0, OpBtypePaWhaD (4, 0, 0, 2, 1), {TGT25c}},
    {"br.cond.dptk.clr",	B0, OpBtypePaWhaD (4, 0, 0, 2, 1), {TGT25c}, PSEUDO},
    {"br.cond.dpnt.few",	B0, OpBtypePaWhaD (4, 0, 0, 3, 0), {TGT25c}},
    {"br.cond.dpnt",		B0, OpBtypePaWhaD (4, 0, 0, 3, 0), {TGT25c}, PSEUDO},
    {"br.cond.dpnt.few.clr",	B0, OpBtypePaWhaD (4, 0, 0, 3, 1), {TGT25c}},
    {"br.cond.dpnt.clr",	B0, OpBtypePaWhaD (4, 0, 0, 3, 1), {TGT25c}, PSEUDO},
    {"br.cond.sptk.many",	B0, OpBtypePaWhaD (4, 0, 1, 0, 0), {TGT25c}},
    {"br.cond.sptk.many.clr",	B0, OpBtypePaWhaD (4, 0, 1, 0, 1), {TGT25c}},
    {"br.cond.spnt.many",	B0, OpBtypePaWhaD (4, 0, 1, 1, 0), {TGT25c}},
    {"br.cond.spnt.many.clr",	B0, OpBtypePaWhaD (4, 0, 1, 1, 1), {TGT25c}},
    {"br.cond.dptk.many",	B0, OpBtypePaWhaD (4, 0, 1, 2, 0), {TGT25c}},
    {"br.cond.dptk.many.clr",	B0, OpBtypePaWhaD (4, 0, 1, 2, 1), {TGT25c}},
    {"br.cond.dpnt.many",	B0, OpBtypePaWhaD (4, 0, 1, 3, 0), {TGT25c}},
    {"br.cond.dpnt.many.clr",	B0, OpBtypePaWhaD (4, 0, 1, 3, 1), {TGT25c}},
    {"br.sptk.few",		B0, OpBtypePaWhaD (4, 0, 0, 0, 0), {TGT25c}},
    {"br.sptk",			B0, OpBtypePaWhaD (4, 0, 0, 0, 0), {TGT25c}, PSEUDO},
    {"br.sptk.few.clr",		B0, OpBtypePaWhaD (4, 0, 0, 0, 1), {TGT25c}},
    {"br.sptk.clr",		B0, OpBtypePaWhaD (4, 0, 0, 0, 1), {TGT25c}, PSEUDO},
    {"br.spnt.few",		B0, OpBtypePaWhaD (4, 0, 0, 1, 0), {TGT25c}},
    {"br.spnt",			B0, OpBtypePaWhaD (4, 0, 0, 1, 0), {TGT25c}, PSEUDO},
    {"br.spnt.few.clr",		B0, OpBtypePaWhaD (4, 0, 0, 1, 1), {TGT25c}},
    {"br.spnt.clr",		B0, OpBtypePaWhaD (4, 0, 0, 1, 1), {TGT25c}, PSEUDO},
    {"br.dptk.few",		B0, OpBtypePaWhaD (4, 0, 0, 2, 0), {TGT25c}},
    {"br.dptk",			B0, OpBtypePaWhaD (4, 0, 0, 2, 0), {TGT25c}, PSEUDO},
    {"br.dptk.few.clr",		B0, OpBtypePaWhaD (4, 0, 0, 2, 1), {TGT25c}},
    {"br.dptk.clr",		B0, OpBtypePaWhaD (4, 0, 0, 2, 1), {TGT25c}, PSEUDO},
    {"br.dpnt.few",		B0, OpBtypePaWhaD (4, 0, 0, 3, 0), {TGT25c}},
    {"br.dpnt",			B0, OpBtypePaWhaD (4, 0, 0, 3, 0), {TGT25c}, PSEUDO},
    {"br.dpnt.few.clr",		B0, OpBtypePaWhaD (4, 0, 0, 3, 1), {TGT25c}},
    {"br.dpnt.clr",		B0, OpBtypePaWhaD (4, 0, 0, 3, 1), {TGT25c}, PSEUDO},
    {"br.sptk.many",		B0, OpBtypePaWhaD (4, 0, 1, 0, 0), {TGT25c}},
    {"br.sptk.many.clr",	B0, OpBtypePaWhaD (4, 0, 1, 0, 1), {TGT25c}},
    {"br.spnt.many",		B0, OpBtypePaWhaD (4, 0, 1, 1, 0), {TGT25c}},
    {"br.spnt.many.clr",	B0, OpBtypePaWhaD (4, 0, 1, 1, 1), {TGT25c}},
    {"br.dptk.many",		B0, OpBtypePaWhaD (4, 0, 1, 2, 0), {TGT25c}},
    {"br.dptk.many.clr",	B0, OpBtypePaWhaD (4, 0, 1, 2, 1), {TGT25c}},
    {"br.dpnt.many",		B0, OpBtypePaWhaD (4, 0, 1, 3, 0), {TGT25c}},
    {"br.dpnt.many.clr",	B0, OpBtypePaWhaD (4, 0, 1, 3, 1), {TGT25c}},
@

