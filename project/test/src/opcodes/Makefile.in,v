head	1.198;
access;
symbols
	sid-snapshot-20180601:1.198
	sid-snapshot-20180501:1.198
	sid-snapshot-20180401:1.198
	sid-snapshot-20180301:1.198
	sid-snapshot-20180201:1.198
	sid-snapshot-20180101:1.198
	sid-snapshot-20171201:1.198
	sid-snapshot-20171101:1.198
	sid-snapshot-20171001:1.198
	sid-snapshot-20170901:1.198
	sid-snapshot-20170801:1.198
	sid-snapshot-20170701:1.198
	sid-snapshot-20170601:1.198
	sid-snapshot-20170501:1.198
	sid-snapshot-20170401:1.198
	sid-snapshot-20170301:1.198
	sid-snapshot-20170201:1.198
	sid-snapshot-20170101:1.198
	sid-snapshot-20161201:1.198
	sid-snapshot-20161101:1.198
	sid-snapshot-20160901:1.198
	sid-snapshot-20160801:1.198
	sid-snapshot-20160701:1.198
	sid-snapshot-20160601:1.198
	sid-snapshot-20160501:1.198
	sid-snapshot-20160401:1.198
	sid-snapshot-20160301:1.198
	sid-snapshot-20160201:1.198
	sid-snapshot-20160101:1.198
	sid-snapshot-20151201:1.198
	sid-snapshot-20151101:1.198
	sid-snapshot-20151001:1.198
	sid-snapshot-20150901:1.198
	sid-snapshot-20150801:1.198
	sid-snapshot-20150701:1.198
	sid-snapshot-20150601:1.198
	sid-snapshot-20150501:1.198
	sid-snapshot-20150401:1.198
	sid-snapshot-20150301:1.198
	sid-snapshot-20150201:1.198
	sid-snapshot-20150101:1.198
	sid-snapshot-20141201:1.198
	sid-snapshot-20141101:1.198
	sid-snapshot-20141001:1.198
	sid-snapshot-20140901:1.198
	sid-snapshot-20140801:1.198
	sid-snapshot-20140701:1.198
	sid-snapshot-20140601:1.198
	sid-snapshot-20140501:1.198
	sid-snapshot-20140401:1.198
	sid-snapshot-20140301:1.198
	sid-snapshot-20140201:1.198
	sid-snapshot-20140101:1.198
	sid-snapshot-20131201:1.198
	sid-snapshot-20131101:1.198
	sid-snapshot-20131001:1.198
	binutils-2_24-branch:1.198.0.2
	binutils-2_24-branchpoint:1.198
	binutils-2_21_1:1.182
	sid-snapshot-20130901:1.198
	gdb_7_6_1-2013-08-30-release:1.195
	sid-snapshot-20130801:1.198
	sid-snapshot-20130701:1.197
	sid-snapshot-20130601:1.195
	sid-snapshot-20130501:1.195
	gdb_7_6-2013-04-26-release:1.195
	sid-snapshot-20130401:1.195
	binutils-2_23_2:1.190.4.2
	gdb_7_6-branch:1.195.0.2
	gdb_7_6-2013-03-12-branchpoint:1.195
	sid-snapshot-20130301:1.195
	sid-snapshot-20130201:1.194
	sid-snapshot-20130101:1.193
	sid-snapshot-20121201:1.192
	gdb_7_5_1-2012-11-29-release:1.190
	binutils-2_23_1:1.190.4.2
	sid-snapshot-20121101:1.192
	binutils-2_23:1.190.4.2
	sid-snapshot-20121001:1.192
	sid-snapshot-20120901:1.192
	gdb_7_5-2012-08-17-release:1.190
	sid-snapshot-20120801:1.190
	binutils-2_23-branch:1.190.0.4
	binutils-2_23-branchpoint:1.190
	gdb_7_5-branch:1.190.0.2
	gdb_7_5-2012-07-18-branchpoint:1.190
	sid-snapshot-20120701:1.190
	sid-snapshot-20120601:1.190
	sid-snapshot-20120501:1.189
	binutils-2_22_branch:1.187.0.4
	gdb_7_4_1-2012-04-26-release:1.189
	sid-snapshot-20120401:1.189
	sid-snapshot-20120301:1.189
	sid-snapshot-20120201:1.189
	gdb_7_4-2012-01-24-release:1.189
	sid-snapshot-20120101:1.189
	gdb_7_4-branch:1.189.0.2
	gdb_7_4-2011-12-13-branchpoint:1.189
	sid-snapshot-20111201:1.189
	binutils-2_22:1.187
	sid-snapshot-20111101:1.188
	sid-snapshot-20111001:1.187
	binutils-2_22-branch:1.187.0.2
	binutils-2_22-branchpoint:1.187
	gdb_7_3_1-2011-09-04-release:1.182
	sid-snapshot-20110901:1.187
	sid-snapshot-20110801:1.186
	gdb_7_3-2011-07-26-release:1.182
	sid-snapshot-20110701:1.185
	sid-snapshot-20110601:1.182
	sid-snapshot-20110501:1.182
	gdb_7_3-branch:1.182.0.4
	gdb_7_3-2011-04-01-branchpoint:1.182
	sid-snapshot-20110401:1.182
	sid-snapshot-20110301:1.182
	sid-snapshot-20110201:1.182
	sid-snapshot-20110101:1.182
	binutils-2_21:1.182
	sid-snapshot-20101201:1.182
	binutils-2_21-branch:1.182.0.2
	binutils-2_21-branchpoint:1.182
	sid-snapshot-20101101:1.182
	sid-snapshot-20101001:1.180
	binutils-2_20_1:1.167.2.2
	gdb_7_2-2010-09-02-release:1.180
	sid-snapshot-20100901:1.180
	sid-snapshot-20100801:1.180
	gdb_7_2-branch:1.180.0.2
	gdb_7_2-2010-07-07-branchpoint:1.180
	sid-snapshot-20100701:1.180
	sid-snapshot-20100601:1.179
	sid-snapshot-20100501:1.178
	sid-snapshot-20100401:1.178
	gdb_7_1-2010-03-18-release:1.177
	sid-snapshot-20100301:1.177
	gdb_7_1-branch:1.177.0.2
	gdb_7_1-2010-02-18-branchpoint:1.177
	sid-snapshot-20100201:1.177
	sid-snapshot-20100101:1.176
	gdb_7_0_1-2009-12-22-release:1.168
	sid-snapshot-20091201:1.175
	sid-snapshot-20091101:1.174
	binutils-2_20:1.167.2.1
	gdb_7_0-2009-10-06-release:1.168
	sid-snapshot-20091001:1.169
	gdb_7_0-branch:1.168.0.2
	gdb_7_0-2009-09-16-branchpoint:1.168
	arc-sim-20090309:1.138.6.1
	binutils-arc-20081103-branch:1.146.0.8
	binutils-arc-20081103-branchpoint:1.146
	binutils-2_20-branch:1.167.0.2
	binutils-2_20-branchpoint:1.167
	sid-snapshot-20090901:1.166
	sid-snapshot-20090801:1.157
	msnyder-checkpoint-072509-branch:1.157.0.4
	msnyder-checkpoint-072509-branchpoint:1.157
	sid-snapshot-20090701:1.157
	dje-cgen-play1-branch:1.157.0.2
	dje-cgen-play1-branchpoint:1.157
	sid-snapshot-20090601:1.156
	sid-snapshot-20090501:1.154
	sid-snapshot-20090401:1.153
	arc-20081103-branch:1.146.0.6
	arc-20081103-branchpoint:1.146
	arc-insight_6_8-branch:1.138.0.6
	arc-insight_6_8-branchpoint:1.138
	insight_6_8-branch:1.138.0.4
	insight_6_8-branchpoint:1.138
	sid-snapshot-20090301:1.149
	binutils-2_19_1:1.144.2.1
	sid-snapshot-20090201:1.148
	sid-snapshot-20090101:1.148
	reverse-20081226-branch:1.148.0.2
	reverse-20081226-branchpoint:1.148
	sid-snapshot-20081201:1.146
	multiprocess-20081120-branch:1.146.0.4
	multiprocess-20081120-branchpoint:1.146
	sid-snapshot-20081101:1.146
	binutils-2_19:1.144.2.1
	sid-snapshot-20081001:1.146
	reverse-20080930-branch:1.146.0.2
	reverse-20080930-branchpoint:1.146
	binutils-2_19-branch:1.144.0.2
	binutils-2_19-branchpoint:1.144
	sid-snapshot-20080901:1.144
	sid-snapshot-20080801:1.141
	reverse-20080717-branch:1.141.0.4
	reverse-20080717-branchpoint:1.141
	sid-snapshot-20080701:1.141
	msnyder-reverse-20080609-branch:1.141.0.2
	msnyder-reverse-20080609-branchpoint:1.141
	drow-reverse-20070409-branch:1.118.0.2
	drow-reverse-20070409-branchpoint:1.118
	sid-snapshot-20080601:1.141
	sid-snapshot-20080501:1.140
	sid-snapshot-20080403:1.140
	sid-snapshot-20080401:1.140
	gdb_6_8-2008-03-27-release:1.138
	sid-snapshot-20080301:1.138
	gdb_6_8-branch:1.138.0.2
	gdb_6_8-2008-02-26-branchpoint:1.138
	sid-snapshot-20080201:1.138
	sid-snapshot-20080101:1.138
	sid-snapshot-20071201:1.137
	sid-snapshot-20071101:1.137
	gdb_6_7_1-2007-10-29-release:1.133
	gdb_6_7-2007-10-10-release:1.133
	sid-snapshot-20071001:1.136
	gdb_6_7-branch:1.133.0.2
	gdb_6_7-2007-09-07-branchpoint:1.133
	binutils-2_18:1.131
	binutils-2_18-branch:1.131.0.2
	binutils-2_18-branchpoint:1.131
	insight_6_6-20070208-release:1.114
	binutils-csl-coldfire-4_1-32:1.108.6.1
	binutils-csl-sourcerygxx-4_1-32:1.108.6.1
	gdb_6_6-2006-12-18-release:1.114
	binutils-csl-innovasic-fido-3_4_4-33:1.108.6.1
	binutils-csl-sourcerygxx-3_4_4-32:1.91
	binutils-csl-coldfire-4_1-30:1.108.6.1
	binutils-csl-sourcerygxx-4_1-30:1.108.6.1
	binutils-csl-coldfire-4_1-28:1.108.6.1
	binutils-csl-sourcerygxx-4_1-29:1.108.6.1
	binutils-csl-sourcerygxx-4_1-28:1.108.6.1
	gdb_6_6-branch:1.114.0.2
	gdb_6_6-2006-11-15-branchpoint:1.114
	binutils-csl-arm-2006q3-27:1.108.6.1
	binutils-csl-sourcerygxx-4_1-27:1.108.6.1
	binutils-csl-arm-2006q3-26:1.108.6.1
	binutils-csl-sourcerygxx-4_1-26:1.108.6.1
	binutils-csl-sourcerygxx-4_1-25:1.108.6.1
	binutils-csl-sourcerygxx-4_1-24:1.108.6.1
	binutils-csl-sourcerygxx-4_1-23:1.108.6.1
	insight_6_5-20061003-release:1.110
	gdb-csl-symbian-6_4_50_20060226-12:1.108
	binutils-csl-sourcerygxx-4_1-21:1.108.6.1
	binutils-csl-arm-2006q3-21:1.108.6.1
	binutils-csl-sourcerygxx-4_1-22:1.108.6.1
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.108.6.1
	binutils-csl-sourcerygxx-4_1-20:1.108.6.1
	binutils-csl-arm-2006q3-19:1.108.6.1
	binutils-csl-sourcerygxx-4_1-19:1.108.6.1
	binutils-csl-sourcerygxx-4_1-18:1.108.6.1
	binutils-csl-renesas-4_1-9:1.108.6.1
	gdb-csl-sourcerygxx-3_4_4-25:1.103
	binutils-csl-sourcerygxx-3_4_4-25:1.91
	nickrob-async-20060828-mergepoint:1.112
	gdb-csl-symbian-6_4_50_20060226-11:1.108
	binutils-csl-renesas-4_1-8:1.108.6.1
	binutils-csl-renesas-4_1-7:1.108.6.1
	binutils-csl-renesas-4_1-6:1.108.6.1
	gdb-csl-sourcerygxx-4_1-17:1.108
	binutils-csl-sourcerygxx-4_1-17:1.108.6.1
	gdb-csl-20060226-branch-local-2:1.108
	gdb-csl-sourcerygxx-4_1-14:1.108
	binutils-csl-sourcerygxx-4_1-14:1.108.6.1
	binutils-csl-sourcerygxx-4_1-15:1.108.6.1
	gdb-csl-sourcerygxx-4_1-13:1.108
	binutils-csl-sourcerygxx-4_1-13:1.108.6.1
	binutils-2_17:1.109
	gdb-csl-sourcerygxx-4_1-12:1.108
	binutils-csl-sourcerygxx-4_1-12:1.108.6.1
	gdb-csl-sourcerygxx-3_4_4-21:1.108
	binutils-csl-sourcerygxx-3_4_4-21:1.108.6.1
	gdb_6_5-20060621-release:1.110
	binutils-csl-wrs-linux-3_4_4-24:1.91
	binutils-csl-wrs-linux-3_4_4-23:1.91
	gdb-csl-sourcerygxx-4_1-9:1.108
	binutils-csl-sourcerygxx-4_1-9:1.108.6.1
	gdb-csl-sourcerygxx-4_1-8:1.108
	binutils-csl-sourcerygxx-4_1-8:1.108.6.1
	gdb-csl-sourcerygxx-4_1-7:1.108
	binutils-csl-sourcerygxx-4_1-7:1.108.6.1
	gdb-csl-arm-2006q1-6:1.108
	binutils-csl-arm-2006q1-6:1.108.6.1
	gdb-csl-sourcerygxx-4_1-6:1.108
	binutils-csl-sourcerygxx-4_1-6:1.108.6.1
	binutils-csl-wrs-linux-3_4_4-22:1.91
	gdb-csl-symbian-6_4_50_20060226-10:1.108
	gdb-csl-symbian-6_4_50_20060226-9:1.108
	gdb-csl-symbian-6_4_50_20060226-8:1.108
	gdb-csl-coldfire-4_1-11:1.108
	binutils-csl-coldfire-4_1-11:1.108.6.1
	gdb-csl-sourcerygxx-3_4_4-19:1.108
	binutils-csl-sourcerygxx-3_4_4-19:1.108.6.1
	gdb-csl-coldfire-4_1-10:1.108
	gdb_6_5-branch:1.110.0.8
	gdb_6_5-2006-05-14-branchpoint:1.110
	binutils-csl-coldfire-4_1-10:1.108.6.1
	gdb-csl-sourcerygxx-4_1-5:1.108
	binutils-csl-sourcerygxx-4_1-5:1.108.6.1
	nickrob-async-20060513-branch:1.110.0.6
	nickrob-async-20060513-branchpoint:1.110
	gdb-csl-sourcerygxx-4_1-4:1.108
	binutils-csl-sourcerygxx-4_1-4:1.108.6.1
	msnyder-reverse-20060502-branch:1.110.0.4
	msnyder-reverse-20060502-branchpoint:1.110
	binutils-csl-wrs-linux-3_4_4-21:1.91
	gdb-csl-morpho-4_1-4:1.108
	binutils-csl-morpho-4_1-4:1.108.6.1
	gdb-csl-sourcerygxx-3_4_4-17:1.108
	binutils-csl-sourcerygxx-3_4_4-17:1.108.6.1
	binutils-csl-wrs-linux-3_4_4-20:1.91
	readline_5_1-import-branch:1.110.0.2
	readline_5_1-import-branchpoint:1.110
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.108
	binutils-2_17-branch:1.109.0.2
	binutils-2_17-branchpoint:1.109
	gdb-csl-symbian-20060226-branch:1.108.0.10
	gdb-csl-symbian-20060226-branchpoint:1.108
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.108
	msnyder-reverse-20060331-branch:1.108.0.8
	msnyder-reverse-20060331-branchpoint:1.108
	binutils-csl-2_17-branch:1.108.0.6
	binutils-csl-2_17-branchpoint:1.108
	gdb-csl-available-20060303-branch:1.108.0.4
	gdb-csl-available-20060303-branchpoint:1.108
	gdb-csl-20060226-branch:1.108.0.2
	gdb-csl-20060226-branchpoint:1.108
	gdb_6_4-20051202-release:1.103
	msnyder-fork-checkpoint-branch:1.103.0.6
	msnyder-fork-checkpoint-branchpoint:1.103
	gdb-csl-gxxpro-6_3-branch:1.103.0.4
	gdb-csl-gxxpro-6_3-branchpoint:1.103
	gdb_6_4-branch:1.103.0.2
	gdb_6_4-2005-11-01-branchpoint:1.103
	gdb-csl-arm-20051020-branch:1.101.0.2
	gdb-csl-arm-20051020-branchpoint:1.101
	binutils-csl-gxxpro-3_4-branch:1.91.0.8
	binutils-csl-gxxpro-3_4-branchpoint:1.91
	binutils-2_16_1:1.91
	msnyder-tracepoint-checkpoint-branch:1.93.0.2
	msnyder-tracepoint-checkpoint-branchpoint:1.93
	gdb-csl-arm-20050325-2005-q1b:1.91
	binutils-csl-arm-2005q1b:1.91
	binutils-2_16:1.91
	gdb-csl-arm-20050325-2005-q1a:1.91
	binutils-csl-arm-2005q1a:1.91
	csl-arm-20050325-branch:1.91.0.6
	csl-arm-20050325-branchpoint:1.91
	binutils-csl-arm-2005q1-branch:1.91.0.4
	binutils-csl-arm-2005q1-branchpoint:1.91
	binutils-2_16-branch:1.91.0.2
	binutils-2_16-branchpoint:1.91
	csl-arm-2004-q3d:1.87
	gdb_6_3-20041109-release:1.87
	gdb_6_3-branch:1.87.0.2
	gdb_6_3-20041019-branchpoint:1.87
	csl-arm-2004-q3:1.86
	drow_intercu-merge-20040921:1.86
	drow_intercu-merge-20040915:1.84
	jimb-gdb_6_2-e500-branch:1.83.0.6
	jimb-gdb_6_2-e500-branchpoint:1.83
	gdb_6_2-20040730-release:1.83
	gdb_6_2-branch:1.83.0.2
	gdb_6_2-2004-07-10-gmt-branchpoint:1.83
	gdb_6_1_1-20040616-release:1.82
	binutils-2_15:1.82
	binutils-2_15-branchpoint:1.82
	csl-arm-2004-q1a:1.82
	csl-arm-2004-q1:1.82
	gdb_6_1-2004-04-05-release:1.82
	drow_intercu-merge-20040402:1.82
	drow_intercu-merge-20040327:1.82
	ezannoni_pie-20040323-branch:1.82.0.14
	ezannoni_pie-20040323-branchpoint:1.82
	cagney_tramp-20040321-mergepoint:1.82
	cagney_tramp-20040309-branch:1.82.0.12
	cagney_tramp-20040309-branchpoint:1.82
	gdb_6_1-branch:1.82.0.10
	gdb_6_1-2004-03-01-gmt-branchpoint:1.82
	drow_intercu-20040221-branch:1.82.0.8
	drow_intercu-20040221-branchpoint:1.82
	binutils-2_15-branch:1.82.0.6
	cagney_bfdfile-20040213-branch:1.82.0.4
	cagney_bfdfile-20040213-branchpoint:1.82
	drow-cplus-merge-20040208:1.82
	carlton_dictionary-20040126-merge:1.82
	cagney_bigcore-20040122-branch:1.82.0.2
	cagney_bigcore-20040122-branchpoint:1.82
	drow-cplus-merge-20040113:1.82
	csl-arm-2003-q4:1.81
	drow-cplus-merge-20031224:1.81
	drow-cplus-merge-20031220:1.81
	carlton_dictionary-20031215-merge:1.81
	drow-cplus-merge-20031214:1.81
	carlton-dictionary-20031111-merge:1.80
	gdb_6_0-2003-10-04-release:1.75
	kettenis_sparc-20030918-branch:1.80.0.4
	kettenis_sparc-20030918-branchpoint:1.80
	carlton_dictionary-20030917-merge:1.80
	ezannoni_pie-20030916-branchpoint:1.80
	ezannoni_pie-20030916-branch:1.80.0.2
	cagney_x86i386-20030821-branch:1.77.0.2
	cagney_x86i386-20030821-branchpoint:1.77
	carlton_dictionary-20030805-merge:1.76
	carlton_dictionary-20030627-merge:1.75
	gdb_6_0-branch:1.75.0.4
	gdb_6_0-2003-06-23-branchpoint:1.75
	jimb-ppc64-linux-20030613-branch:1.75.0.2
	jimb-ppc64-linux-20030613-branchpoint:1.75
	binutils-2_14:1.73
	cagney_convert-20030606-branch:1.74.0.6
	cagney_convert-20030606-branchpoint:1.74
	cagney_writestrings-20030508-branch:1.73.0.12
	cagney_writestrings-20030508-branchpoint:1.73
	jimb-ppc64-linux-20030528-branch:1.74.0.4
	jimb-ppc64-linux-20030528-branchpoint:1.74
	carlton_dictionary-20030523-merge:1.74
	cagney_fileio-20030521-branch:1.74.0.2
	cagney_fileio-20030521-branchpoint:1.74
	kettenis_i386newframe-20030517-mergepoint:1.73
	jimb-ppc64-linux-20030509-branch:1.73.0.10
	jimb-ppc64-linux-20030509-branchpoint:1.73
	kettenis_i386newframe-20030504-mergepoint:1.73
	carlton_dictionary-20030430-merge:1.73
	binutils-2_14-branch:1.73.0.8
	binutils-2_14-branchpoint:1.73
	kettenis_i386newframe-20030419-branch:1.73.0.6
	kettenis_i386newframe-20030419-branchpoint:1.73
	carlton_dictionary-20030416-merge:1.73
	cagney_frameaddr-20030409-mergepoint:1.73
	kettenis_i386newframe-20030406-branch:1.73.0.4
	kettenis_i386newframe-20030406-branchpoint:1.73
	cagney_frameaddr-20030403-branchpoint:1.73
	cagney_frameaddr-20030403-branch:1.73.0.2
	cagney_framebase-20030330-mergepoint:1.72
	cagney_framebase-20030326-branch:1.72.0.12
	cagney_framebase-20030326-branchpoint:1.72
	cagney_lazyid-20030317-branch:1.72.0.10
	cagney_lazyid-20030317-branchpoint:1.72
	kettenis-i386newframe-20030316-mergepoint:1.72
	offbyone-20030313-branch:1.72.0.8
	offbyone-20030313-branchpoint:1.72
	kettenis-i386newframe-20030308-branch:1.72.0.6
	kettenis-i386newframe-20030308-branchpoint:1.72
	carlton_dictionary-20030305-merge:1.72
	cagney_offbyone-20030303-branch:1.72.0.4
	cagney_offbyone-20030303-branchpoint:1.72
	carlton_dictionary-20030207-merge:1.72
	interps-20030202-branch:1.72.0.2
	interps-20030202-branchpoint:1.72
	cagney-unwind-20030108-branch:1.70.0.2
	cagney-unwind-20030108-branchpoint:1.70
	binutils-2_13_2_1:1.60
	binutils-2_13_2:1.60
	carlton_dictionary-20021223-merge:1.67
	gdb_5_3-2002-12-12-release:1.63
	carlton_dictionary-20021115-merge:1.65
	binutils-2_13_1:1.60
	kseitz_interps-20021105-merge:1.64
	kseitz_interps-20021103-merge:1.64
	drow-cplus-merge-20021020:1.64
	drow-cplus-merge-20021025:1.64
	carlton_dictionary-20021025-merge:1.64
	carlton_dictionary-20021011-merge:1.64
	drow-cplus-branch:1.64.0.2
	drow-cplus-branchpoint:1.64
	kseitz_interps-20020930-merge:1.64
	carlton_dictionary-20020927-merge:1.64
	carlton_dictionary-branch:1.63.0.6
	carlton_dictionary-20020920-branchpoint:1.63
	sid-20020905-branchpoint:1.63
	sid-20020905-branch:1.63.0.4
	gdb_5_3-branch:1.63.0.2
	gdb_5_3-2002-09-04-branchpoint:1.63
	kseitz_interps-20020829-merge:1.63
	cagney_sysregs-20020825-branch:1.62.0.4
	cagney_sysregs-20020825-branchpoint:1.62
	readline_4_3-import-branch:1.62.0.2
	readline_4_3-import-branchpoint:1.62
	binutils-2_13:1.60
	gdb_5_2_1-2002-07-23-release:1.50
	binutils-2_13-branchpoint:1.60
	binutils-2_13-branch:1.60.0.2
	kseitz_interps-20020528-branch:1.57.0.2
	kseitz_interps-20020528-branchpoint:1.57
	cagney_regbuf-20020515-branch:1.53.0.4
	cagney_regbuf-20020515-branchpoint:1.53
	binutils-2_12_1:1.48.2.2
	jimb-macro-020506-branch:1.53.0.2
	jimb-macro-020506-branchpoint:1.53
	gdb_5_2-2002-04-29-release:1.50
	binutils-2_12:1.48
	gdb_5_2-branch:1.50.0.2
	gdb_5_2-2002-03-03-branchpoint:1.50
	binutils-2_12-branch:1.48.0.2
	binutils-2_12-branchpoint:1.48
	gdb_5_1_1-2002-01-24-release:1.38
	gdb_5_1_0_1-2002-01-03-release:1.38
	cygnus_cvs_20020108_pre:1.44
	gdb_5_1_0_1-2002-01-03-branch:1.38.0.6
	gdb_5_1_0_1-2002-01-03-branchpoint:1.38
	gdb_5_1-2001-11-21-release:1.38
	gdb_s390-2001-09-26-branch:1.38.0.4
	gdb_s390-2001-09-26-branchpoint:1.38
	gdb_5_1-2001-07-29-branch:1.38.0.2
	gdb_5_1-2001-07-29-branchpoint:1.38
	binutils-2_11_2:1.29.2.1
	binutils-2_11_1:1.29.2.1
	binutils-2_11:1.29
	x86_64versiong3:1.34
	binutils-2_11-branch:1.29.0.2
	insight-precleanup-2001-01-01:1.28
	binutils-2_10_1:1.10.2.1
	binutils-2_10:1.10.2.1
	gdb-premipsmulti-2000-06-06-branch:1.17.0.2
	gdb-premipsmulti-2000-06-06-branchpoint:1.17
	gdb_5_0-2000-05-19-release:1.12
	gdb_4_18_2-2000-05-18-release:1.12
	gdb_4_95_1-2000-05-11-snapshot:1.12
	gdb_4_95_0-2000-04-27-snapshot:1.12
	gdb_5_0-2000-04-10-branch:1.12.0.2
	gdb_5_0-2000-04-10-branchpoint:1.12
	binutils-2_10-branch:1.10.0.2
	binutils-2_10-branchpoint:1.10
	binutils_latest_snapshot:1.198
	repo-unification-2000-02-06:1.6
	binu_ss_19990721:1.3
	binu_ss_19990602:1.1.1.1
	binu_ss_19990502:1.1.1.1
	cygnus:1.1.1;
locks; strict;
comment	@# @;


1.198
date	2013.07.14.14.25.57;	author rsandifo;	state Exp;
branches;
next	1.197;

1.197
date	2013.06.21.15.01.57;	author nickc;	state Exp;
branches;
next	1.196;

1.196
date	2013.06.17.11.51.13;	author amodra;	state Exp;
branches;
next	1.195;

1.195
date	2013.02.06.23.22.25;	author sandra;	state Exp;
branches;
next	1.194;

1.194
date	2013.01.10.09.49.12;	author nickc;	state Exp;
branches;
next	1.193;

1.193
date	2012.12.17.16.56.11;	author nickc;	state Exp;
branches;
next	1.192;

1.192
date	2012.08.13.14.52.46;	author nickc;	state Exp;
branches;
next	1.191;

1.191
date	2012.08.13.14.26.11;	author macro;	state Exp;
branches;
next	1.190;

1.190
date	2012.05.03.13.12.05;	author nickc;	state Exp;
branches
	1.190.4.1;
next	1.189;

1.189
date	2011.11.02.03.09.10;	author dj;	state Exp;
branches;
next	1.188;

1.188
date	2011.10.25.11.18.15;	author nickc;	state Exp;
branches;
next	1.187;

1.187
date	2011.08.22.15.25.06;	author nickc;	state Exp;
branches;
next	1.186;

1.186
date	2011.07.24.14.20.13;	author rsandifo;	state Exp;
branches;
next	1.185;

1.185
date	2011.06.17.15.06.46;	author schwab;	state Exp;
branches;
next	1.184;

1.184
date	2011.06.14.05.11.52;	author amodra;	state Exp;
branches;
next	1.183;

1.183
date	2011.06.13.15.18.52;	author nickc;	state Exp;
branches;
next	1.182;

1.182
date	2010.10.21.23.50.57;	author amodra;	state Exp;
branches;
next	1.181;

1.181
date	2010.10.11.06.10.35;	author jkratoch;	state Exp;
branches;
next	1.180;

1.180
date	2010.06.29.04.17.33;	author amodra;	state Exp;
branches;
next	1.179;

1.179
date	2010.05.07.12.28.50;	author gingold;	state Exp;
branches;
next	1.178;

1.178
date	2010.03.25.21.12.34;	author jsm28;	state Exp;
branches;
next	1.177;

1.177
date	2010.01.09.21.11.36;	author rwild;	state Exp;
branches;
next	1.176;

1.176
date	2009.12.11.13.42.16;	author nickc;	state Exp;
branches;
next	1.175;

1.175
date	2009.11.14.20.04.58;	author devans;	state Exp;
branches;
next	1.174;

1.174
date	2009.10.27.01.49.26;	author amodra;	state Exp;
branches;
next	1.173;

1.173
date	2009.10.17.17.38.09;	author devans;	state Exp;
branches;
next	1.172;

1.172
date	2009.10.05.13.14.55;	author nickc;	state Exp;
branches;
next	1.171;

1.171
date	2009.10.03.17.00.16;	author hjl;	state Exp;
branches;
next	1.170;

1.170
date	2009.10.03.14.36.34;	author hjl;	state Exp;
branches;
next	1.169;

1.169
date	2009.09.29.14.17.18;	author nickc;	state Exp;
branches;
next	1.168;

1.168
date	2009.09.07.10.54.25;	author amodra;	state Exp;
branches;
next	1.167;

1.167
date	2009.09.03.04.47.46;	author davek;	state Exp;
branches
	1.167.2.1;
next	1.166;

1.166
date	2009.08.29.00.41.25;	author hjl;	state Exp;
branches;
next	1.165;

1.165
date	2009.08.27.05.24.40;	author rwild;	state Exp;
branches;
next	1.164;

1.164
date	2009.08.25.03.13.44;	author rwild;	state Exp;
branches;
next	1.163;

1.163
date	2009.08.24.19.05.01;	author rwild;	state Exp;
branches;
next	1.162;

1.162
date	2009.08.22.19.02.57;	author rwild;	state Exp;
branches;
next	1.161;

1.161
date	2009.08.22.18.44.57;	author rwild;	state Exp;
branches;
next	1.160;

1.160
date	2009.08.22.17.08.11;	author rwild;	state Exp;
branches;
next	1.159;

1.159
date	2009.08.22.16.56.48;	author rwild;	state Exp;
branches;
next	1.158;

1.158
date	2009.08.06.17.38.04;	author nickc;	state Exp;
branches;
next	1.157;

1.157
date	2009.06.04.06.56.41;	author amodra;	state Exp;
branches;
next	1.156;

1.156
date	2009.05.26.03.19.28;	author amodra;	state Exp;
branches;
next	1.155;

1.155
date	2009.05.22.09.33.16;	author amodra;	state Exp;
branches;
next	1.154;

1.154
date	2009.04.16.15.39.47;	author nickc;	state Exp;
branches;
next	1.153;

1.153
date	2009.03.18.11.47.18;	author amodra;	state Exp;
branches;
next	1.152;

1.152
date	2009.03.18.11.27.18;	author amodra;	state Exp;
branches;
next	1.151;

1.151
date	2009.03.03.02.41.14;	author amodra;	state Exp;
branches;
next	1.150;

1.150
date	2009.03.02.10.33.08;	author nickc;	state Exp;
branches;
next	1.149;

1.149
date	2009.02.03.15.54.05;	author jsm28;	state Exp;
branches;
next	1.148;

1.148
date	2008.12.24.09.58.03;	author jkratoch;	state Exp;
branches;
next	1.147;

1.147
date	2008.12.23.19.10.24;	author nickc;	state Exp;
branches;
next	1.146;

1.146
date	2008.09.30.07.49.05;	author amodra;	state Exp;
branches
	1.146.8.1;
next	1.145;

1.145
date	2008.09.29.16.54.07;	author hjl;	state Exp;
branches;
next	1.144;

1.144
date	2008.08.15.08.31.51;	author amodra;	state Exp;
branches
	1.144.2.1;
next	1.143;

1.143
date	2008.08.04.06.55.31;	author amodra;	state Exp;
branches;
next	1.142;

1.142
date	2008.08.01.14.35.06;	author palves;	state Exp;
branches;
next	1.141;

1.141
date	2008.05.14.06.45.40;	author amodra;	state Exp;
branches;
next	1.140;

1.140
date	2008.03.17.22.17.32;	author rwild;	state Exp;
branches;
next	1.139;

1.139
date	2008.03.13.02.05.23;	author amodra;	state Exp;
branches;
next	1.138;

1.138
date	2007.12.21.17.04.04;	author hjl;	state Exp;
branches
	1.138.6.1;
next	1.137;

1.137
date	2007.10.04.14.06.40;	author nickc;	state Exp;
branches;
next	1.136;

1.136
date	2007.09.14.19.28.56;	author hjl;	state Exp;
branches;
next	1.135;

1.135
date	2007.09.09.01.34.22;	author hjl;	state Exp;
branches;
next	1.134;

1.134
date	2007.09.09.01.22.57;	author hjl;	state Exp;
branches;
next	1.133;

1.133
date	2007.09.06.21.31.55;	author hjl;	state Exp;
branches;
next	1.132;

1.132
date	2007.08.31.14.55.10;	author hjl;	state Exp;
branches;
next	1.131;

1.131
date	2007.07.06.14.35.50;	author hjl;	state Exp;
branches;
next	1.130;

1.130
date	2007.07.05.09.49.00;	author nickc;	state Exp;
branches;
next	1.129;

1.129
date	2007.07.02.07.12.52;	author amodra;	state Exp;
branches;
next	1.128;

1.128
date	2007.06.30.17.21.16;	author hjl;	state Exp;
branches;
next	1.127;

1.127
date	2007.06.29.14.09.34;	author nickc;	state Exp;
branches;
next	1.126;

1.126
date	2007.06.28.14.29.56;	author hjl;	state Exp;
branches;
next	1.125;

1.125
date	2007.06.14.15.31.01;	author hjl;	state Exp;
branches;
next	1.124;

1.124
date	2007.05.24.18.12.51;	author sje;	state Exp;
branches;
next	1.123;

1.123
date	2007.04.26.14.47.00;	author amodra;	state Exp;
branches;
next	1.122;

1.122
date	2007.04.24.04.07.03;	author amodra;	state Exp;
branches;
next	1.121;

1.121
date	2007.04.19.10.47.26;	author amodra;	state Exp;
branches;
next	1.120;

1.120
date	2007.04.18.12.14.50;	author drow;	state Exp;
branches;
next	1.119;

1.119
date	2007.04.14.20.45.09;	author sje;	state Exp;
branches;
next	1.118;

1.118
date	2007.03.15.14.31.24;	author hjl;	state Exp;
branches;
next	1.117;

1.117
date	2007.03.15.14.20.32;	author hjl;	state Exp;
branches;
next	1.116;

1.116
date	2007.03.08.05.35.54;	author amodra;	state Exp;
branches;
next	1.115;

1.115
date	2007.02.05.20.04.21;	author brolley;	state Exp;
branches;
next	1.114;

1.114
date	2006.10.25.06.49.20;	author amodra;	state Exp;
branches;
next	1.113;

1.113
date	2006.09.16.23.51.50;	author nickc;	state Exp;
branches;
next	1.112;

1.112
date	2006.06.05.12.28.18;	author amodra;	state Exp;
branches;
next	1.111;

1.111
date	2006.05.31.15.14.38;	author drow;	state Exp;
branches;
next	1.110;

1.110
date	2006.04.19.12.10.21;	author amodra;	state Exp;
branches;
next	1.109;

1.109
date	2006.04.06.21.49.35;	author carlos;	state Exp;
branches;
next	1.108;

1.108
date	2006.02.17.14.36.28;	author nickc;	state Exp;
branches
	1.108.6.1;
next	1.107;

1.107
date	2005.12.27.01.19.28;	author amodra;	state Exp;
branches;
next	1.106;

1.106
date	2005.12.16.10.23.11;	author nathan;	state Exp;
branches;
next	1.105;

1.105
date	2005.12.12.11.25.08;	author nathan;	state Exp;
branches;
next	1.104;

1.104
date	2005.12.02.20.09.42;	author brolley;	state Exp;
branches;
next	1.103;

1.103
date	2005.10.30.17.40.28;	author hjl;	state Exp;
branches;
next	1.102;

1.102
date	2005.10.25.17.40.16;	author nickc;	state Exp;
branches;
next	1.101;

1.101
date	2005.09.30.18.05.59;	author hjl;	state Exp;
branches;
next	1.100;

1.100
date	2005.09.30.15.28.49;	author clm;	state Exp;
branches;
next	1.99;

1.99
date	2005.08.18.03.49.00;	author amodra;	state Exp;
branches;
next	1.98;

1.98
date	2005.07.16.02.03.50;	author amodra;	state Exp;
branches;
next	1.97;

1.97
date	2005.07.14.22.52.22;	author jimb;	state Exp;
branches;
next	1.96;

1.96
date	2005.07.06.08.19.38;	author amodra;	state Exp;
branches;
next	1.95;

1.95
date	2005.06.15.16.23.24;	author brolley;	state Exp;
branches;
next	1.94;

1.94
date	2005.06.08.17.27.40;	author zack;	state Exp;
branches;
next	1.93;

1.93
date	2005.05.19.03.18.04;	author kcook;	state Exp;
branches;
next	1.92;

1.92
date	2005.04.14.05.26.44;	author amodra;	state Exp;
branches;
next	1.91;

1.91
date	2005.02.21.11.48.33;	author amodra;	state Exp;
branches;
next	1.90;

1.90
date	2005.02.08.04.52.24;	author jimb;	state Exp;
branches;
next	1.89;

1.89
date	2004.11.27.11.09.20;	author rearnsha;	state Exp;
branches;
next	1.88;

1.88
date	2004.11.08.13.17.36;	author nickc;	state Exp;
branches;
next	1.87;

1.87
date	2004.10.15.05.48.51;	author amodra;	state Exp;
branches;
next	1.86;

1.86
date	2004.09.17.17.04.34;	author hjl;	state Exp;
branches;
next	1.85;

1.85
date	2004.09.17.06.13.29;	author amodra;	state Exp;
branches;
next	1.84;

1.84
date	2004.08.30.18.59.49;	author neroden;	state Exp;
branches;
next	1.83;

1.83
date	2004.07.07.17.28.53;	author nickc;	state Exp;
branches;
next	1.82;

1.82
date	2004.01.07.18.39.40;	author drow;	state Exp;
branches
	1.82.8.1;
next	1.81;

1.81
date	2003.12.02.08.14.34;	author amodra;	state Exp;
branches;
next	1.80;

1.80
date	2003.09.08.17.24.05;	author brolley;	state Exp;
branches;
next	1.79;

1.79
date	2003.09.03.23.43.17;	author cagney;	state Exp;
branches;
next	1.78;

1.78
date	2003.08.29.19.14.54;	author brolley;	state Exp;
branches;
next	1.77;

1.77
date	2003.08.14.07.03.18;	author amodra;	state Exp;
branches;
next	1.76;

1.76
date	2003.07.14.11.18.13;	author nickc;	state Exp;
branches;
next	1.75;

1.75
date	2003.06.10.23.44.42;	author amodra;	state Exp;
branches;
next	1.74;

1.74
date	2003.05.20.09.34.19;	author aj;	state Exp;
branches;
next	1.73;

1.73
date	2003.04.01.15.50.30;	author nickc;	state Exp;
branches;
next	1.72;

1.72
date	2003.01.23.11.51.33;	author amodra;	state Exp;
branches;
next	1.71;

1.71
date	2003.01.16.04.11.05;	author amodra;	state Exp;
branches;
next	1.70;

1.70
date	2003.01.09.08.32.26;	author kdienes;	state Exp;
branches;
next	1.69;

1.69
date	2003.01.03.19.52.23;	author scox;	state Exp;
branches;
next	1.68;

1.68
date	2002.12.30.19.25.12;	author nickc;	state Exp;
branches;
next	1.67;

1.67
date	2002.12.22.23.24.29;	author amodra;	state Exp;
branches;
next	1.66;

1.66
date	2002.12.20.01.40.08;	author devans;	state Exp;
branches;
next	1.65;

1.65
date	2002.11.07.14.33.48;	author nickc;	state Exp;
branches;
next	1.64;

1.64
date	2002.09.21.10.49.04;	author amodra;	state Exp;
branches
	1.64.2.1;
next	1.63;

1.63
date	2002.08.28.10.38.50;	author nickc;	state Exp;
branches
	1.63.6.1;
next	1.62;

1.62
date	2002.07.23.12.42.32;	author amodra;	state Exp;
branches;
next	1.61;

1.61
date	2002.07.19.07.52.40;	author nickc;	state Exp;
branches;
next	1.60;

1.60
date	2002.06.18.21.21.02;	author brolley;	state Exp;
branches;
next	1.59;

1.59
date	2002.06.18.17.43.07;	author bje;	state Exp;
branches;
next	1.58;

1.58
date	2002.05.31.04.27.36;	author amodra;	state Exp;
branches;
next	1.57;

1.57
date	2002.05.28.14.08.46;	author nickc;	state Exp;
branches
	1.57.2.1;
next	1.56;

1.56
date	2002.05.25.12.55.19;	author amodra;	state Exp;
branches;
next	1.55;

1.55
date	2002.05.22.19.18.16;	author amylaar;	state Exp;
branches;
next	1.54;

1.54
date	2002.05.17.10.34.29;	author amodra;	state Exp;
branches;
next	1.53;

1.53
date	2002.04.04.14.05.44;	author amodra;	state Exp;
branches
	1.53.4.1;
next	1.52;

1.52
date	2002.03.21.09.23.41;	author amodra;	state Exp;
branches;
next	1.51;

1.51
date	2002.03.16.08.55.53;	author nickc;	state Exp;
branches;
next	1.50;

1.50
date	2002.02.26.22.09.26;	author nickc;	state Exp;
branches;
next	1.49;

1.49
date	2002.02.11.05.05.09;	author amodra;	state Exp;
branches;
next	1.48;

1.48
date	2002.02.08.05.51.02;	author aoliva;	state Exp;
branches
	1.48.2.1;
next	1.47;

1.47
date	2002.02.01.03.26.30;	author amodra;	state Exp;
branches;
next	1.46;

1.46
date	2002.01.31.17.33.08;	author nickc;	state Exp;
branches;
next	1.45;

1.45
date	2002.01.22.08.57.58;	author amodra;	state Exp;
branches;
next	1.44;

1.44
date	2001.12.08.03.46.00;	author geoffk;	state Exp;
branches;
next	1.43;

1.43
date	2001.10.30.15.20.14;	author nickc;	state Exp;
branches;
next	1.42;

1.42
date	2001.10.09.08.54.57;	author nickc;	state Exp;
branches;
next	1.41;

1.41
date	2001.10.02.06.00.48;	author amodra;	state Exp;
branches;
next	1.40;

1.40
date	2001.09.30.18.54.18;	author hp;	state Exp;
branches;
next	1.39;

1.39
date	2001.09.18.15.41.33;	author nickc;	state Exp;
branches;
next	1.38;

1.38
date	2001.07.24.10.02.00;	author amodra;	state Exp;
branches;
next	1.37;

1.37
date	2001.07.05.13.12.23;	author bje;	state Exp;
branches;
next	1.36;

1.36
date	2001.04.27.13.33.27;	author nickc;	state Exp;
branches;
next	1.35;

1.35
date	2001.04.24.15.22.25;	author nickc;	state Exp;
branches;
next	1.34;

1.34
date	2001.02.27.06.43.56;	author amodra;	state Exp;
branches;
next	1.33;

1.33
date	2001.02.21.00.07.39;	author hjl;	state Exp;
branches;
next	1.32;

1.32
date	2001.02.18.23.33.10;	author nickc;	state Exp;
branches;
next	1.31;

1.31
date	2001.02.11.22.56.42;	author msokolov;	state Exp;
branches;
next	1.30;

1.30
date	2001.02.10.00.55.46;	author nickc;	state Exp;
branches;
next	1.29;

1.29
date	2001.01.11.21.20.19;	author nickc;	state Exp;
branches
	1.29.2.1;
next	1.28;

1.28
date	2000.12.16.22.01.44;	author nickc;	state Exp;
branches;
next	1.27;

1.27
date	2000.09.02.20.46.18;	author nickc;	state Exp;
branches;
next	1.26;

1.26
date	2000.07.31.18.50.55;	author nickc;	state Exp;
branches;
next	1.25;

1.25
date	2000.07.29.00.33.34;	author bje;	state Exp;
branches;
next	1.24;

1.24
date	2000.07.28.21.10.20;	author jle;	state Exp;
branches;
next	1.23;

1.23
date	2000.07.20.16.56.18;	author hp;	state Exp;
branches;
next	1.22;

1.22
date	2000.07.20.16.46.28;	author hp;	state Exp;
branches;
next	1.21;

1.21
date	2000.07.01.01.41.09;	author amodra;	state Exp;
branches;
next	1.20;

1.20
date	2000.06.22.13.01.43;	author amodra;	state Exp;
branches;
next	1.19;

1.19
date	2000.06.20.20.39.29;	author hjl;	state Exp;
branches;
next	1.18;

1.18
date	2000.06.19.01.22.43;	author nickc;	state Exp;
branches;
next	1.17;

1.17
date	2000.05.26.14.14.21;	author amodra;	state Exp;
branches;
next	1.16;

1.16
date	2000.05.22.18.04.17;	author nickc;	state Exp;
branches;
next	1.15;

1.15
date	2000.05.06.17.14.34;	author twall;	state Exp;
branches;
next	1.14;

1.14
date	2000.04.21.20.22.23;	author wilson;	state Exp;
branches;
next	1.13;

1.13
date	2000.04.14.04.16.58;	author amodra;	state Exp;
branches;
next	1.12;

1.12
date	2000.04.09.12.17.43;	author cagney;	state Exp;
branches;
next	1.11;

1.11
date	2000.04.04.10.53.56;	author amodra;	state Exp;
branches;
next	1.10;

1.10
date	2000.03.27.16.34.34;	author ian;	state Exp;
branches
	1.10.2.1;
next	1.9;

1.9
date	2000.02.27.17.08.06;	author ian;	state Exp;
branches;
next	1.8;

1.8
date	2000.02.27.16.55.51;	author ian;	state Exp;
branches;
next	1.7;

1.7
date	2000.02.23.13.52.23;	author amodra;	state Exp;
branches;
next	1.6;

1.6
date	99.09.04.17.14.37;	author ian;	state Exp;
branches;
next	1.5;

1.5
date	99.08.09.20.22.04;	author ian;	state Exp;
branches;
next	1.4;

1.4
date	99.08.08.17.31.00;	author ian;	state Exp;
branches;
next	1.3;

1.3
date	99.06.21.10.11.48;	author ian;	state Exp;
branches;
next	1.2;

1.2
date	99.06.07.03.06.38;	author schwab;	state Exp;
branches;
next	1.1;

1.1
date	99.05.03.07.28.59;	author rth;	state Exp;
branches
	1.1.1.1;
next	;

1.190.4.1
date	2012.08.16.09.21.54;	author nickc;	state Exp;
branches;
next	1.190.4.2;

1.190.4.2
date	2012.09.04.14.38.05;	author gingold;	state Exp;
branches;
next	;

1.167.2.1
date	2009.09.07.10.54.56;	author amodra;	state Exp;
branches;
next	1.167.2.2;

1.167.2.2
date	2010.03.03.14.16.04;	author gingold;	state Exp;
branches;
next	;

1.146.8.1
date	2009.09.10.15.09.44;	author amylaar;	state Exp;
branches;
next	;

1.144.2.1
date	2008.09.09.08.02.19;	author amodra;	state Exp;
branches;
next	;

1.138.6.1
date	2009.03.09.20.36.11;	author amylaar;	state Exp;
branches;
next	1.138.6.2;

1.138.6.2
date	2009.09.11.04.45.54;	author amylaar;	state Exp;
branches;
next	;

1.108.6.1
date	2006.04.03.15.44.48;	author carlos;	state Exp;
branches;
next	;

1.82.8.1
date	2004.09.16.17.01.57;	author drow;	state Exp;
branches;
next	1.82.8.2;

1.82.8.2
date	2004.09.21.20.44.22;	author drow;	state Exp;
branches;
next	;

1.64.2.1
date	2003.12.14.20.28.04;	author drow;	state Exp;
branches;
next	1.64.2.2;

1.64.2.2
date	2004.01.13.16.12.21;	author drow;	state Exp;
branches;
next	;

1.63.6.1
date	2002.09.27.20.03.27;	author carlton;	state Exp;
branches;
next	1.63.6.2;

1.63.6.2
date	2002.11.15.19.19.23;	author carlton;	state Exp;
branches;
next	1.63.6.3;

1.63.6.3
date	2002.12.23.19.39.29;	author carlton;	state Exp;
branches;
next	1.63.6.4;

1.63.6.4
date	2003.02.07.19.18.03;	author carlton;	state Exp;
branches;
next	1.63.6.5;

1.63.6.5
date	2003.04.16.19.57.05;	author carlton;	state Exp;
branches;
next	1.63.6.6;

1.63.6.6
date	2003.05.23.18.40.56;	author carlton;	state Exp;
branches;
next	1.63.6.7;

1.63.6.7
date	2003.06.27.21.50.24;	author carlton;	state Exp;
branches;
next	1.63.6.8;

1.63.6.8
date	2003.08.05.17.13.29;	author carlton;	state Exp;
branches;
next	1.63.6.9;

1.63.6.9
date	2003.09.17.21.28.57;	author carlton;	state Exp;
branches;
next	1.63.6.10;

1.63.6.10
date	2003.12.16.00.01.13;	author carlton;	state Exp;
branches;
next	1.63.6.11;

1.63.6.11
date	2004.01.26.19.11.49;	author carlton;	state Exp;
branches;
next	;

1.57.2.1
date	2002.06.20.01.38.15;	author kseitz;	state Exp;
branches;
next	1.57.2.2;

1.57.2.2
date	2002.07.22.21.47.17;	author kseitz;	state Exp;
branches;
next	1.57.2.3;

1.57.2.3
date	2002.08.09.18.34.37;	author kseitz;	state Exp;
branches;
next	1.57.2.4;

1.57.2.4
date	2002.08.30.22.52.54;	author kseitz;	state Exp;
branches;
next	1.57.2.5;

1.57.2.5
date	2002.10.01.00.46.44;	author kseitz;	state Exp;
branches;
next	;

1.53.4.1
date	2002.06.15.16.43.20;	author cagney;	state Exp;
branches;
next	1.53.4.2;

1.53.4.2
date	2002.06.21.15.55.49;	author cagney;	state Exp;
branches;
next	;

1.48.2.1
date	2002.03.28.06.21.14;	author amodra;	state Exp;
branches;
next	1.48.2.2;

1.48.2.2
date	2002.04.04.14.53.11;	author amodra;	state Exp;
branches;
next	;

1.29.2.1
date	2001.06.11.10.05.16;	author amodra;	state Exp;
branches;
next	;

1.10.2.1
date	2000.04.05.05.36.43;	author amodra;	state Exp;
branches;
next	;

1.1.1.1
date	99.05.03.07.28.59;	author rth;	state Exp;
branches;
next	;


desc
@@


1.198
log
@opcodes/
	* Makefile.am (mips-opc.lo, micromips-opc.lo, mips16-opc.lo): Remove
	special rules.
	* Makefile.in: Regenerate.
	* mips-opc.c, micromips-opc.c, mips16-opc.c: Explicitly initialize
	all fields.  Reformat.
@
text
@# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @@configure_input@@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@@SET_MAKE@@

#
#   Copyright 2012 Free Software Foundation
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; see the file COPYING3.  If not see
# <http://www.gnu.org/licenses/>.
#



VPATH = @@srcdir@@
pkgdatadir = $(datadir)/@@PACKAGE@@
pkgincludedir = $(includedir)/@@PACKAGE@@
pkglibdir = $(libdir)/@@PACKAGE@@
pkglibexecdir = $(libexecdir)/@@PACKAGE@@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @@build@@
host_triplet = @@host@@
target_triplet = @@target@@
@@INSTALL_LIBBFD_FALSE@@am__append_1 = -rpath $(rpath_bfdlibdir)
subdir = .
DIST_COMMON = ChangeLog $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/configure $(am__configure_deps) \
	$(srcdir)/config.in $(srcdir)/../mkinstalldirs \
	$(top_srcdir)/po/Make-in $(srcdir)/../depcomp
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/../bfd/acinclude.m4 \
	$(top_srcdir)/../config/zlib.m4 \
	$(top_srcdir)/../bfd/warning.m4 $(top_srcdir)/../config/acx.m4 \
	$(top_srcdir)/../config/depstand.m4 \
	$(top_srcdir)/../config/gettext-sister.m4 \
	$(top_srcdir)/../config/lead-dot.m4 \
	$(top_srcdir)/../config/nls.m4 \
	$(top_srcdir)/../config/override.m4 \
	$(top_srcdir)/../config/po.m4 \
	$(top_srcdir)/../config/progtest.m4 \
	$(top_srcdir)/../config/warnings.m4 \
	$(top_srcdir)/../libtool.m4 $(top_srcdir)/../ltoptions.m4 \
	$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \
	$(top_srcdir)/../lt~obsolete.m4 $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES = po/Makefile.in
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
libopcodes_a_AR = $(AR) $(ARFLAGS)
libopcodes_a_LIBADD =
am_libopcodes_a_OBJECTS =
libopcodes_a_OBJECTS = $(am_libopcodes_a_OBJECTS)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(bfdlibdir)" \
	"$(DESTDIR)$(bfdincludedir)"
LTLIBRARIES = $(bfdlib_LTLIBRARIES) $(noinst_LTLIBRARIES)
am__DEPENDENCIES_1 =
am_libopcodes_la_OBJECTS = dis-buf.lo disassemble.lo dis-init.lo
libopcodes_la_OBJECTS = $(am_libopcodes_la_OBJECTS)
libopcodes_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libopcodes_la_LDFLAGS) $(LDFLAGS) -o $@@
@@INSTALL_LIBBFD_FALSE@@am_libopcodes_la_rpath =
@@INSTALL_LIBBFD_TRUE@@am_libopcodes_la_rpath = -rpath $(bfdlibdir)
DEFAULT_INCLUDES = -I.@@am__isrc@@
depcomp = $(SHELL) $(top_srcdir)/../depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@@
SOURCES = $(libopcodes_a_SOURCES) $(libopcodes_la_SOURCES) \
	$(EXTRA_libopcodes_la_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
DATA = $(bfdinclude_DATA)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
ACLOCAL = @@ACLOCAL@@
AMTAR = @@AMTAR@@
AR = @@AR@@
AUTOCONF = @@AUTOCONF@@
AUTOHEADER = @@AUTOHEADER@@
AUTOMAKE = @@AUTOMAKE@@
AWK = @@AWK@@
BFD_MACHINES = @@BFD_MACHINES@@
BUILD_LIBS = @@BUILD_LIBS@@
BUILD_LIB_DEPS = @@BUILD_LIB_DEPS@@
CATALOGS = @@CATALOGS@@
CATOBJEXT = @@CATOBJEXT@@
CC = @@CC@@
CCDEPMODE = @@CCDEPMODE@@
CC_FOR_BUILD = @@CC_FOR_BUILD@@
CFLAGS = @@CFLAGS@@
CPP = @@CPP@@
CPPFLAGS = @@CPPFLAGS@@
CYGPATH_W = @@CYGPATH_W@@
DATADIRNAME = @@DATADIRNAME@@
DEFS = @@DEFS@@
DEPDIR = @@DEPDIR@@
DSYMUTIL = @@DSYMUTIL@@
DUMPBIN = @@DUMPBIN@@
ECHO_C = @@ECHO_C@@
ECHO_N = @@ECHO_N@@
ECHO_T = @@ECHO_T@@
EGREP = @@EGREP@@
EXEEXT = @@EXEEXT@@
EXEEXT_FOR_BUILD = @@EXEEXT_FOR_BUILD@@
FGREP = @@FGREP@@
GENCAT = @@GENCAT@@
GMSGFMT = @@GMSGFMT@@
GREP = @@GREP@@
HDEFINES = @@HDEFINES@@
INCINTL = @@INCINTL@@
INSTALL = @@INSTALL@@
INSTALL_DATA = @@INSTALL_DATA@@
INSTALL_PROGRAM = @@INSTALL_PROGRAM@@
INSTALL_SCRIPT = @@INSTALL_SCRIPT@@
INSTALL_STRIP_PROGRAM = @@INSTALL_STRIP_PROGRAM@@
INSTOBJEXT = @@INSTOBJEXT@@
LD = @@LD@@
LDFLAGS = @@LDFLAGS@@
LIBINTL = @@LIBINTL@@
LIBINTL_DEP = @@LIBINTL_DEP@@
LIBM = @@LIBM@@
LIBOBJS = @@LIBOBJS@@
LIBS = @@LIBS@@
LIBTOOL = @@LIBTOOL@@
LIPO = @@LIPO@@
LN_S = @@LN_S@@
LTLIBOBJS = @@LTLIBOBJS@@
MAINT = @@MAINT@@
MAKEINFO = @@MAKEINFO@@
MKDIR_P = @@MKDIR_P@@
MKINSTALLDIRS = @@MKINSTALLDIRS@@
MSGFMT = @@MSGFMT@@
MSGMERGE = @@MSGMERGE@@
NM = @@NM@@
NMEDIT = @@NMEDIT@@
NO_WERROR = @@NO_WERROR@@
NO_WMISSING_FIELD_INITIALIZERS = @@NO_WMISSING_FIELD_INITIALIZERS@@
OBJDUMP = @@OBJDUMP@@
OBJEXT = @@OBJEXT@@
OTOOL = @@OTOOL@@
OTOOL64 = @@OTOOL64@@
PACKAGE = @@PACKAGE@@
PACKAGE_BUGREPORT = @@PACKAGE_BUGREPORT@@
PACKAGE_NAME = @@PACKAGE_NAME@@
PACKAGE_STRING = @@PACKAGE_STRING@@
PACKAGE_TARNAME = @@PACKAGE_TARNAME@@
PACKAGE_URL = @@PACKAGE_URL@@
PACKAGE_VERSION = @@PACKAGE_VERSION@@
PATH_SEPARATOR = @@PATH_SEPARATOR@@
POSUB = @@POSUB@@
RANLIB = @@RANLIB@@
SED = @@SED@@
SET_MAKE = @@SET_MAKE@@
SHARED_DEPENDENCIES = @@SHARED_DEPENDENCIES@@
SHARED_LDFLAGS = @@SHARED_LDFLAGS@@
SHARED_LIBADD = @@SHARED_LIBADD@@
SHELL = @@SHELL@@
STRIP = @@STRIP@@
USE_NLS = @@USE_NLS@@
VERSION = @@VERSION@@
WARN_CFLAGS = @@WARN_CFLAGS@@
XGETTEXT = @@XGETTEXT@@
abs_builddir = @@abs_builddir@@
abs_srcdir = @@abs_srcdir@@
abs_top_builddir = @@abs_top_builddir@@
abs_top_srcdir = @@abs_top_srcdir@@
ac_ct_CC = @@ac_ct_CC@@
ac_ct_DUMPBIN = @@ac_ct_DUMPBIN@@
am__include = @@am__include@@
am__leading_dot = @@am__leading_dot@@
am__quote = @@am__quote@@
am__tar = @@am__tar@@
am__untar = @@am__untar@@
archdefs = @@archdefs@@
@@INSTALL_LIBBFD_FALSE@@bfdincludedir = 
@@INSTALL_LIBBFD_TRUE@@bfdincludedir = @@bfdincludedir@@
# Empty these so that the respective installation directories will not be created.
@@INSTALL_LIBBFD_FALSE@@bfdlibdir = 
@@INSTALL_LIBBFD_TRUE@@bfdlibdir = @@bfdlibdir@@
bindir = @@bindir@@
build = @@build@@
build_alias = @@build_alias@@
build_cpu = @@build_cpu@@
build_os = @@build_os@@
build_vendor = @@build_vendor@@
builddir = @@builddir@@
cgendir = @@cgendir@@
datadir = @@datadir@@
datarootdir = @@datarootdir@@
docdir = @@docdir@@
dvidir = @@dvidir@@
exec_prefix = @@exec_prefix@@
host = @@host@@
host_alias = @@host_alias@@
host_cpu = @@host_cpu@@
host_noncanonical = @@host_noncanonical@@
host_os = @@host_os@@
host_vendor = @@host_vendor@@
htmldir = @@htmldir@@
includedir = @@includedir@@
infodir = @@infodir@@
install_sh = @@install_sh@@
libdir = @@libdir@@
libexecdir = @@libexecdir@@
localedir = @@localedir@@
localstatedir = @@localstatedir@@
mandir = @@mandir@@
mkdir_p = @@mkdir_p@@
oldincludedir = @@oldincludedir@@
pdfdir = @@pdfdir@@
prefix = @@prefix@@
program_transform_name = @@program_transform_name@@
psdir = @@psdir@@
sbindir = @@sbindir@@
sharedstatedir = @@sharedstatedir@@
srcdir = @@srcdir@@
sysconfdir = @@sysconfdir@@
target = @@target@@
target_alias = @@target_alias@@
target_cpu = @@target_cpu@@
target_noncanonical = @@target_noncanonical@@
target_os = @@target_os@@
target_vendor = @@target_vendor@@
top_build_prefix = @@top_build_prefix@@
top_builddir = @@top_builddir@@
top_srcdir = @@top_srcdir@@
AUTOMAKE_OPTIONS = 1.11 foreign no-dist
ACLOCAL_AMFLAGS = -I .. -I ../config -I ../bfd

# Build '.' first so all generated files exist.
SUBDIRS = . po
INCDIR = $(srcdir)/../include
BFDDIR = $(srcdir)/../bfd
AM_CFLAGS = $(WARN_CFLAGS)
COMPILE_FOR_BUILD = $(CC_FOR_BUILD) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CFLAGS_FOR_BUILD)

LINK_FOR_BUILD = $(CC_FOR_BUILD) $(CFLAGS_FOR_BUILD) \
	$(LDFLAGS_FOR_BUILD) -o $@@

libopcodes_la_LDFLAGS = $(am__append_1) -release `cat \
	../bfd/libtool-soversion` @@SHARED_LDFLAGS@@
@@INSTALL_LIBBFD_TRUE@@bfdlib_LTLIBRARIES = libopcodes.la
@@INSTALL_LIBBFD_TRUE@@bfdinclude_DATA = $(INCDIR)/dis-asm.h
@@INSTALL_LIBBFD_FALSE@@rpath_bfdlibdir = @@bfdlibdir@@
@@INSTALL_LIBBFD_FALSE@@noinst_LTLIBRARIES = libopcodes.la

# This is where bfd.h lives.
BFD_H = ../bfd/bfd.h

# Header files.
HFILES = \
	aarch64-asm.h aarch64-dis.h aarch64-opc.h aarch64-tbl.h \
	epiphany-desc.h epiphany-opc.h \
	fr30-desc.h fr30-opc.h \
	frv-desc.h frv-opc.h \
	h8500-opc.h \
	i386-init.h \
	i386-opc.h \
	i386-tbl.h \
	ia64-asmtab.h \
	ia64-opc.h \
	ip2k-desc.h ip2k-opc.h \
	iq2000-desc.h iq2000-opc.h \
	lm32-desc.h \
	lm32-opc.h \
	m32c-desc.h m32c-opc.h \
	m32r-desc.h m32r-opc.h \
	mcore-opc.h \
	mep-desc.h mep-opc.h \
	microblaze-opc.h \
	mt-desc.h mt-opc.h \
	openrisc-desc.h openrisc-opc.h \
	score-opc.h \
	sh-opc.h \
	sh64-opc.h \
	sysdep.h \
	w65-opc.h \
	xc16x-desc.h xc16x-opc.h \
	xstormy16-desc.h xstormy16-opc.h \
	z8k-opc.h


# C source files that correspond to .o's ending up in libopcodes
# for all machines.
TARGET_LIBOPCODES_CFILES = \
	aarch64-asm.c \
	aarch64-asm-2.c \
	aarch64-dis.c \
	aarch64-dis-2.c \
	aarch64-opc.c \
	aarch64-opc-2.c \
	alpha-dis.c \
	alpha-opc.c \
	arc-dis.c \
	arc-ext.c \
	arc-opc.c \
	arm-dis.c \
	avr-dis.c \
	bfin-dis.c \
	cgen-asm.c \
	cgen-bitset.c \
	cgen-dis.c \
	cgen-opc.c \
	cr16-dis.c \
	cr16-opc.c \
	cris-dis.c \
	cris-opc.c \
	crx-dis.c \
	crx-opc.c \
	d10v-dis.c \
	d10v-opc.c \
	d30v-dis.c \
	d30v-opc.c \
	dlx-dis.c \
	epiphany-asm.c \
	epiphany-desc.c \
	epiphany-dis.c \
	epiphany-ibld.c \
	epiphany-opc.c \
	fr30-asm.c \
	fr30-desc.c \
	fr30-dis.c \
	fr30-ibld.c \
	fr30-opc.c \
	frv-asm.c \
	frv-desc.c \
	frv-dis.c \
	frv-ibld.c \
	frv-opc.c \
	h8300-dis.c \
	h8500-dis.c \
	hppa-dis.c \
	i370-dis.c \
	i370-opc.c \
	i386-dis.c \
	i386-opc.c \
	i860-dis.c \
	i960-dis.c \
	ia64-dis.c \
	ia64-opc.c \
	ip2k-asm.c \
	ip2k-desc.c \
	ip2k-dis.c \
	ip2k-ibld.c \
	ip2k-opc.c \
	iq2000-asm.c \
	iq2000-desc.c \
	iq2000-dis.c \
	iq2000-ibld.c \
	iq2000-opc.c \
	lm32-asm.c \
	lm32-desc.c \
	lm32-dis.c \
	lm32-ibld.c \
	lm32-opc.c \
	lm32-opinst.c \
	m10200-dis.c \
	m10200-opc.c \
	m10300-dis.c \
	m10300-opc.c \
	m32c-asm.c \
	m32c-desc.c \
	m32c-dis.c \
	m32c-ibld.c \
	m32c-opc.c \
	m32r-asm.c \
	m32r-desc.c \
	m32r-dis.c \
	m32r-ibld.c \
	m32r-opc.c \
	m32r-opinst.c \
	m68hc11-dis.c \
	m68hc11-opc.c \
	m68k-dis.c \
	m68k-opc.c \
	m88k-dis.c \
	mcore-dis.c \
	mep-asm.c \
	mep-desc.c \
	mep-dis.c \
	mep-ibld.c \
	mep-opc.c \
	metag-dis.c \
	microblaze-dis.c \
	micromips-opc.c \
	mips-dis.c \
	mips-opc.c \
	mips16-opc.c \
	mmix-dis.c \
	mmix-opc.c \
	moxie-dis.c \
	moxie-opc.c \
	msp430-decode.c \
	msp430-dis.c \
	mt-asm.c \
	mt-desc.c \
	mt-dis.c \
	mt-ibld.c \
	mt-opc.c \
	nios2-dis.c \
	nios2-opc.c \
	ns32k-dis.c \
	openrisc-asm.c \
	openrisc-desc.c \
	openrisc-dis.c \
	openrisc-ibld.c \
	openrisc-opc.c \
	or32-dis.c \
	or32-opc.c \
	pdp11-dis.c \
	pdp11-opc.c \
	pj-dis.c \
	pj-opc.c \
	ppc-dis.c \
	ppc-opc.c \
	rl78-decode.c \
	rl78-dis.c \
	rx-decode.c \
	rx-dis.c \
	s390-dis.c \
	s390-opc.c \
	score-dis.c \
	score7-dis.c \
	sh-dis.c \
	sh64-dis.c \
	sh64-opc.c \
	sparc-dis.c \
	sparc-opc.c \
	spu-dis.c \
	spu-opc.c \
	tic30-dis.c \
	tic4x-dis.c \
	tic54x-dis.c \
	tic54x-opc.c \
	tic6x-dis.c \
	tic80-dis.c \
	tic80-opc.c \
	tilegx-dis.c \
	tilegx-opc.c \
	tilepro-dis.c \
	tilepro-opc.c \
	v850-dis.c \
	v850-opc.c \
	vax-dis.c \
	w65-dis.c \
	xc16x-asm.c \
	xc16x-desc.c \
	xc16x-dis.c \
	xc16x-ibld.c \
	xc16x-opc.c \
	xstormy16-asm.c \
	xstormy16-desc.c \
	xstormy16-dis.c \
	xstormy16-ibld.c \
	xstormy16-opc.c \
	xtensa-dis.c \
	xgate-dis.c \
	xgate-opc.c \
	z80-dis.c \
	z8k-dis.c


# C source files that correspond to .o's ending up in libopcodes.
LIBOPCODES_CFILES = \
	$(TARGET_LIBOPCODES_CFILES) \
	dis-buf.c \
	dis-init.c \
	disassemble.c


# C source files that correspond to .o's.
CFILES = \
	$(LIBOPCODES_CFILES) \
	aarch64-gen.c \
	i386-gen.c \
	ia64-asmtab.c \
	ia64-gen.c \
	ia64-opc-a.c \
	ia64-opc-b.c \
	ia64-opc-f.c \
	ia64-opc-i.c \
	ia64-opc-m.c \
	ia64-opc-d.c \
	s390-mkopc.c \
	z8kgen.c

ALL_MACHINES = $(TARGET_LIBOPCODES_CFILES:.c=.lo)
OFILES = @@BFD_MACHINES@@

# We should reconfigure whenever bfd/configure.in changes, because
# that's where the version number in Makefile comes from.
CONFIG_STATUS_DEPENDENCIES = $(BFDDIR)/configure.in
AM_CPPFLAGS = -I. -I$(srcdir) -I../bfd -I$(INCDIR) -I$(BFDDIR) @@HDEFINES@@ @@INCINTL@@
libopcodes_la_SOURCES = dis-buf.c disassemble.c dis-init.c
# It's desirable to list ../bfd/libbfd.la in DEPENDENCIES and LIBADD.
# Unfortunately this causes libtool to add -L$(libdir), referring to the
# planned install directory of libbfd.  This can cause us to pick up an
# old version of libbfd, or to pick up libbfd for the wrong architecture
# if host != build. So for building with shared libraries we use a
# hardcoded path to libbfd.so instead of relying on the entries in libbfd.la.
libopcodes_la_DEPENDENCIES = $(OFILES) @@SHARED_DEPENDENCIES@@
libopcodes_la_LIBADD = $(OFILES) @@SHARED_LIBADD@@
# Allow dependency tracking to work on all the source files.
EXTRA_libopcodes_la_SOURCES = $(LIBOPCODES_CFILES)

# libtool will build .libs/libopcodes.a.  We create libopcodes.a in
# the build directory so that we don't have to convert all the
# programs that use libopcodes.a simultaneously.  This is a hack which
# should be removed if everything else starts using libtool.  FIXME.
noinst_LIBRARIES = libopcodes.a
libopcodes_a_SOURCES = 
POTFILES = $(HFILES) $(CFILES)
CLEANFILES = \
	stamp-epiphany stamp-fr30 stamp-frv stamp-ip2k stamp-iq2000 stamp-lm32 \
	stamp-m32c stamp-m32r stamp-mep stamp-mt \
	stamp-openrisc stamp-xc16x stamp-xstormy16 \
	libopcodes.a stamp-lib

CGENDIR = @@cgendir@@
CPUDIR = $(srcdir)/../cpu
CGEN = "`if test -f ../guile/libguile/guile ; then echo ../guile/libguile/guile; else echo guile ; fi` -l ${cgendir}/guile.scm -s"
CGENFLAGS = -v
CGENDEPS = \
	$(CGENDIR)/desc.scm $(CGENDIR)/desc-cpu.scm \
	$(CGENDIR)/opcodes.scm $(CGENDIR)/opc-asmdis.scm \
	$(CGENDIR)/opc-ibld.scm $(CGENDIR)/opc-itab.scm \
	$(CGENDIR)/opc-opinst.scm \
	cgen-asm.in cgen-dis.in cgen-ibld.in

CGEN_CPUS = epiphany fr30 frv ip2k iq2000 lm32 m32c m32r mep mt openrisc xc16x xstormy16
@@CGEN_MAINT_FALSE@@EPIPHANY_DEPS = 
@@CGEN_MAINT_TRUE@@EPIPHANY_DEPS = stamp-epiphany
@@CGEN_MAINT_FALSE@@FR30_DEPS = 
@@CGEN_MAINT_TRUE@@FR30_DEPS = stamp-fr30
@@CGEN_MAINT_FALSE@@FRV_DEPS = 
@@CGEN_MAINT_TRUE@@FRV_DEPS = stamp-frv
@@CGEN_MAINT_FALSE@@IP2K_DEPS = 
@@CGEN_MAINT_TRUE@@IP2K_DEPS = stamp-ip2k
@@CGEN_MAINT_FALSE@@IQ2000_DEPS = 
@@CGEN_MAINT_TRUE@@IQ2000_DEPS = stamp-iq2000
@@CGEN_MAINT_FALSE@@LM32_DEPS = 
@@CGEN_MAINT_TRUE@@LM32_DEPS = stamp-lm32
@@CGEN_MAINT_FALSE@@M32C_DEPS = 
@@CGEN_MAINT_TRUE@@M32C_DEPS = stamp-m32c
@@CGEN_MAINT_FALSE@@M32R_DEPS = 
@@CGEN_MAINT_TRUE@@M32R_DEPS = stamp-m32r
@@CGEN_MAINT_FALSE@@MEP_DEPS = 
@@CGEN_MAINT_TRUE@@MEP_DEPS = stamp-mep
@@CGEN_MAINT_FALSE@@MT_DEPS = 
@@CGEN_MAINT_TRUE@@MT_DEPS = stamp-mt
@@CGEN_MAINT_FALSE@@OPENRISC_DEPS = 
@@CGEN_MAINT_TRUE@@OPENRISC_DEPS = stamp-openrisc
@@CGEN_MAINT_FALSE@@XC16X_DEPS = 
@@CGEN_MAINT_TRUE@@XC16X_DEPS = stamp-xc16x
@@CGEN_MAINT_FALSE@@XSTORMY16_DEPS = 
@@CGEN_MAINT_TRUE@@XSTORMY16_DEPS = stamp-xstormy16
MOSTLYCLEANFILES = aarch64-gen$(EXEEXT_FOR_BUILD) i386-gen$(EXEEXT_FOR_BUILD) \
	ia64-gen$(EXEEXT_FOR_BUILD) s390-mkopc$(EXEEXT_FOR_BUILD) s390-opc.tab \
	z8kgen$(EXEEXT_FOR_BUILD) opc2c$(EXEEXT_FOR_BUILD)

MAINTAINERCLEANFILES = $(srcdir)/aarch64-asm-2.c $(srcdir)/aarch64-dis-2.c \
	$(srcdir)/aarch64-opc-2.c $(srcdir)/i386-tbl.h $(srcdir)/i386-init.h \
	$(srcdir)/ia64-asmtab.c $(srcdir)/z8k-opc.h \
	$(srcdir)/msp430-decode.c \
	$(srcdir)/rl78-decode.c \
	$(srcdir)/rx-decode.c


# Use a helper variable for the dependencies to avoid 'make' issues
# with continuations in comments, as @@MAINT@@ can be expanded to '#'.
ia64_asmtab_deps = ia64-gen$(EXEEXT_FOR_BUILD) ia64-ic.tbl \
	ia64-raw.tbl ia64-waw.tbl ia64-war.tbl

all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
am--refresh:
	@@:
$(srcdir)/Makefile.in: @@MAINTAINER_MODE_TRUE@@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure: @@MAINTAINER_MODE_TRUE@@ $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4): @@MAINTAINER_MODE_TRUE@@ $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@@if test ! -f $@@; then \
	  rm -f stamp-h1; \
	  $(MAKE) $(AM_MAKEFLAGS) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.in $(top_builddir)/config.status
	@@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.in: @@MAINTAINER_MODE_TRUE@@ $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@@

distclean-hdr:
	-rm -f config.h stamp-h1
po/Makefile.in: $(top_builddir)/config.status $(top_srcdir)/po/Make-in
	cd $(top_builddir) && $(SHELL) ./config.status $@@

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
install-bfdlibLTLIBRARIES: $(bfdlib_LTLIBRARIES)
	@@$(NORMAL_INSTALL)
	test -z "$(bfdlibdir)" || $(MKDIR_P) "$(DESTDIR)$(bfdlibdir)"
	@@list='$(bfdlib_LTLIBRARIES)'; test -n "$(bfdlibdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(bfdlibdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(bfdlibdir)"; \
	}

uninstall-bfdlibLTLIBRARIES:
	@@$(NORMAL_UNINSTALL)
	@@list='$(bfdlib_LTLIBRARIES)'; test -n "$(bfdlibdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(bfdlibdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(bfdlibdir)/$$f"; \
	done

clean-bfdlibLTLIBRARIES:
	-test -z "$(bfdlib_LTLIBRARIES)" || rm -f $(bfdlib_LTLIBRARIES)
	@@list='$(bfdlib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libopcodes.la: $(libopcodes_la_OBJECTS) $(libopcodes_la_DEPENDENCIES) 
	$(libopcodes_la_LINK) $(am_libopcodes_la_rpath) $(libopcodes_la_OBJECTS) $(libopcodes_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/aarch64-asm-2.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/aarch64-asm.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/aarch64-dis-2.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/aarch64-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/aarch64-opc-2.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/aarch64-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/alpha-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/alpha-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/arc-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/arc-ext.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/arc-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/arm-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/avr-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/bfin-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/cgen-asm.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/cgen-bitset.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/cgen-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/cgen-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/cr16-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/cr16-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/cris-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/cris-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/crx-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/crx-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/d10v-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/d10v-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/d30v-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/d30v-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/dis-buf.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/dis-init.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/disassemble.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/dlx-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/epiphany-asm.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/epiphany-desc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/epiphany-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/epiphany-ibld.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/epiphany-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/fr30-asm.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/fr30-desc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/fr30-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/fr30-ibld.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/fr30-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/frv-asm.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/frv-desc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/frv-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/frv-ibld.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/frv-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/h8300-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/h8500-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/hppa-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/i370-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/i370-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/i386-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/i386-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/i860-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/i960-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/ia64-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/ia64-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/ip2k-asm.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/ip2k-desc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/ip2k-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/ip2k-ibld.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/ip2k-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/iq2000-asm.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/iq2000-desc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/iq2000-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/iq2000-ibld.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/iq2000-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/lm32-asm.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/lm32-desc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/lm32-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/lm32-ibld.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/lm32-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/lm32-opinst.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/m10200-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/m10200-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/m10300-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/m10300-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/m32c-asm.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/m32c-desc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/m32c-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/m32c-ibld.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/m32c-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/m32r-asm.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/m32r-desc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/m32r-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/m32r-ibld.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/m32r-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/m32r-opinst.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/m68hc11-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/m68hc11-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/m68k-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/m68k-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/m88k-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/mcore-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/mep-asm.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/mep-desc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/mep-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/mep-ibld.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/mep-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/metag-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/microblaze-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/micromips-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/mips-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/mips-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/mips16-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/mmix-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/mmix-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/moxie-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/moxie-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/msp430-decode.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/msp430-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/mt-asm.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/mt-desc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/mt-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/mt-ibld.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/mt-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/nios2-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/nios2-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/ns32k-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/openrisc-asm.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/openrisc-desc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/openrisc-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/openrisc-ibld.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/openrisc-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/or32-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/or32-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/pdp11-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/pdp11-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/pj-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/pj-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/ppc-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/ppc-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/rl78-decode.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/rl78-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/rx-decode.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/rx-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/s390-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/s390-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/score-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/score7-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/sh-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/sh64-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/sh64-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/sparc-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/sparc-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/spu-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/spu-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/tic30-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/tic4x-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/tic54x-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/tic54x-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/tic6x-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/tic80-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/tic80-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/tilegx-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/tilegx-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/tilepro-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/tilepro-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/v850-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/v850-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/vax-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/w65-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/xc16x-asm.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/xc16x-desc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/xc16x-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/xc16x-ibld.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/xc16x-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/xgate-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/xgate-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/xstormy16-asm.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/xstormy16-desc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/xstormy16-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/xstormy16-ibld.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/xstormy16-opc.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/xtensa-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/z80-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/z8k-dis.Plo@@am__quote@@

.c.o:
@@am__fastdepCC_TRUE@@	$(COMPILE) -MT $@@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@@ $<
@@am__fastdepCC_TRUE@@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@@AMDEP_TRUE@@@@am__fastdepCC_FALSE@@	source='$<' object='$@@' libtool=no @@AMDEPBACKSLASH@@
@@AMDEP_TRUE@@@@am__fastdepCC_FALSE@@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @@AMDEPBACKSLASH@@
@@am__fastdepCC_FALSE@@	$(COMPILE) -c $<

.c.obj:
@@am__fastdepCC_TRUE@@	$(COMPILE) -MT $@@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@@ `$(CYGPATH_W) '$<'`
@@am__fastdepCC_TRUE@@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@@AMDEP_TRUE@@@@am__fastdepCC_FALSE@@	source='$<' object='$@@' libtool=no @@AMDEPBACKSLASH@@
@@AMDEP_TRUE@@@@am__fastdepCC_FALSE@@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @@AMDEPBACKSLASH@@
@@am__fastdepCC_FALSE@@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@@am__fastdepCC_TRUE@@	$(LTCOMPILE) -MT $@@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@@ $<
@@am__fastdepCC_TRUE@@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@@AMDEP_TRUE@@@@am__fastdepCC_FALSE@@	source='$<' object='$@@' libtool=yes @@AMDEPBACKSLASH@@
@@AMDEP_TRUE@@@@am__fastdepCC_FALSE@@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @@AMDEPBACKSLASH@@
@@am__fastdepCC_FALSE@@	$(LTCOMPILE) -c -o $@@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool config.lt
install-bfdincludeDATA: $(bfdinclude_DATA)
	@@$(NORMAL_INSTALL)
	test -z "$(bfdincludedir)" || $(MKDIR_P) "$(DESTDIR)$(bfdincludedir)"
	@@list='$(bfdinclude_DATA)'; test -n "$(bfdincludedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(bfdincludedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(bfdincludedir)" || exit $$?; \
	done

uninstall-bfdincludeDATA:
	@@$(NORMAL_UNINSTALL)
	@@list='$(bfdinclude_DATA)'; test -n "$(bfdincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bfdincludedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bfdincludedir)" && rm -f $$files

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES) config.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS) config.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES) config.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS) config.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
check-am: all-am
check: check-recursive
all-am: Makefile $(LIBRARIES) $(LTLIBRARIES) $(DATA) config.h
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bfdlibdir)" "$(DESTDIR)$(bfdincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@@echo "This command is intended for maintainers to use"
	@@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-recursive

clean-am: clean-bfdlibLTLIBRARIES clean-generic clean-libtool \
	clean-noinstLIBRARIES clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-bfdincludeDATA install-bfdlibLTLIBRARIES

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-bfdincludeDATA uninstall-bfdlibLTLIBRARIES

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) all \
	ctags-recursive install-am install-strip tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am am--refresh check check-am clean \
	clean-bfdlibLTLIBRARIES clean-generic clean-libtool \
	clean-noinstLIBRARIES clean-noinstLTLIBRARIES ctags \
	ctags-recursive distclean distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags dvi dvi-am html \
	html-am info info-am install install-am install-bfdincludeDATA \
	install-bfdlibLTLIBRARIES install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am \
	uninstall-bfdincludeDATA uninstall-bfdlibLTLIBRARIES


disassemble.lo: disassemble.c
@@am__fastdepCC_TRUE@@	$(LTCOMPILE) -MT $@@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@@ @@archdefs@@ $(srcdir)/disassemble.c
@@am__fastdepCC_TRUE@@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@@AMDEP_TRUE@@@@am__fastdepCC_FALSE@@	source='disassemble.c' object='$@@' libtool=yes @@AMDEPBACKSLASH@@
@@AMDEP_TRUE@@@@am__fastdepCC_FALSE@@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @@AMDEPBACKSLASH@@
@@am__fastdepCC_FALSE@@	$(LTCOMPILE) -c -o $@@ @@archdefs@@ $(srcdir)/disassemble.c

stamp-lib: libopcodes.la
	libtooldir=`$(LIBTOOL) --config | sed -n -e 's/^objdir=//p'`; \
	if [ -f $$libtooldir/libopcodes.a ]; then \
	  cp $$libtooldir/libopcodes.a libopcodes.tmp; \
	  $(RANLIB) libopcodes.tmp; \
	  $(SHELL) $(srcdir)/../move-if-change libopcodes.tmp libopcodes.a; \
	else true; fi
	touch stamp-lib

libopcodes.a: stamp-lib ; @@true
po/POTFILES.in: @@MAINT@@ Makefile
	for f in $(POTFILES); do echo $$f; done | LC_ALL=C sort > tmp \
	  && mv tmp $(srcdir)/po/POTFILES.in

run-cgen:
	$(SHELL) $(srcdir)/cgen.sh opcodes $(srcdir) $(CGEN) \
	  $(CGENDIR) "$(CGENFLAGS)" $(arch) $(prefix) $(archfile) $(opcfile) \
	  "$(options)" "$(extrafiles)"
	touch stamp-${prefix}
.PHONY: run-cgen

# Maintainer utility rule to regenerate all cgen files.
run-cgen-all:
	for c in $(CGEN_CPUS) ; \
	do \
		$(MAKE) stamp-$$c || exit 1 ; \
	done
.PHONY: run-cgen-all

# For now, require developers to configure with --enable-cgen-maint.

$(srcdir)/epiphany-desc.h $(srcdir)/epiphany-desc.c $(srcdir)/epiphany-opc.h \
		$(srcdir)/epiphany-opc.c $(srcdir)/epiphany-ibld.c \
		$(srcdir)/epiphany-opinst.c $(srcdir)/epiphany-asm.c \
		$(srcdir)/epiphany-dis.c: $(EPIPHANY_DEPS)
	@@true

stamp-epiphany: $(CGENDEPS) $(CPUDIR)/epiphany.cpu $(CPUDIR)/epiphany.opc
	$(MAKE) run-cgen arch=epiphany prefix=epiphany options= \
		archfile=$(CPUDIR)/epiphany.cpu opcfile=$(CPUDIR)/epiphany.opc extrafiles=

$(srcdir)/fr30-desc.h $(srcdir)/fr30-desc.c $(srcdir)/fr30-opc.h $(srcdir)/fr30-opc.c $(srcdir)/fr30-ibld.c $(srcdir)/fr30-asm.c $(srcdir)/fr30-dis.c: $(FR30_DEPS)
	@@true
stamp-fr30: $(CGENDEPS) $(CPUDIR)/fr30.cpu $(CPUDIR)/fr30.opc
	$(MAKE) run-cgen arch=fr30 prefix=fr30 options= \
		archfile=$(CPUDIR)/fr30.cpu opcfile=$(CPUDIR)/fr30.opc extrafiles=

$(srcdir)/frv-desc.h $(srcdir)/frv-desc.c $(srcdir)/frv-opc.h $(srcdir)/frv-opc.c $(srcdir)/frv-ibld.c $(srcdir)/frv-asm.c $(srcdir)/frv-dis.c: $(FRV_DEPS)
	@@true
stamp-frv: $(CGENDEPS) $(CPUDIR)/frv.cpu $(CPUDIR)/frv.opc
	$(MAKE) run-cgen arch=frv prefix=frv options= \
		archfile=$(CPUDIR)/frv.cpu opcfile=$(CPUDIR)/frv.opc extrafiles=

$(srcdir)/ip2k-desc.h $(srcdir)/ip2k-desc.c $(srcdir)/ip2k-opc.h $(srcdir)/ip2k-opc.c $(srcdir)/ip2k-ibld.c $(srcdir)/ip2k-asm.c $(srcdir)/ip2k-dis.c: $(IP2K_DEPS)
	@@true
stamp-ip2k: $(CGENDEPS) $(CPUDIR)/ip2k.cpu $(CPUDIR)/ip2k.opc
	$(MAKE) run-cgen arch=ip2k prefix=ip2k options= \
		archfile=$(CPUDIR)/ip2k.cpu opcfile=$(CPUDIR)/ip2k.opc extrafiles=

$(srcdir)/iq2000-desc.h $(srcdir)/iq2000-desc.c $(srcdir)/iq2000-opc.h $(srcdir)/iq2000-opc.c $(srcdir)/iq2000-ibld.c $(srcdir)/iq2000-asm.c $(srcdir)/iq2000-dis.c: $(IQ2000_DEPS)
	@@true
stamp-iq2000: $(CGENDEPS) $(CPUDIR)/iq2000.cpu \
		$(CPUDIR)/iq2000.opc $(CPUDIR)/iq2000m.cpu \
		$(CPUDIR)/iq10.cpu
	$(MAKE) run-cgen arch=iq2000 prefix=iq2000 options= \
		archfile=$(CPUDIR)/iq2000.cpu \
		opcfile=$(CPUDIR)/iq2000.opc extrafiles=

$(srcdir)lm32-desc.h $(srcdir)/lm32-desc.c $(srcdir)/lm32-opc.h $(srcdir)/lm32-opc.c $(srcdir)/lm32-ibld.c $(srcdir)/lm32-opinst.c $(srcdir)/lm32-asm.c $(srcdir)/lm32-dis.c: $(LM32_DEPS)
	@@true
stamp-lm32: $(CGENDEPS) $(CPUDIR)/lm32.cpu $(CPUDIR)/lm32.opc
	$(MAKE) run-cgen arch=lm32 prefix=lm32 options=opinst \
		archfile=$(CPUDIR)/lm32.cpu \
		opcfile=$(CPUDIR)/lm32.opc \
		extrafiles=opinst

$(srcdir)/m32c-desc.h $(srcdir)/m32c-desc.c $(srcdir)/m32c-opc.h $(srcdir)/m32c-opc.c $(srcdir)/m32c-ibld.c $(srcdir)/m32c-asm.c $(srcdir)/m32c-dis.c: $(M32C_DEPS)
#	@@true
stamp-m32c: $(CGENDEPS) $(CPUDIR)/m32c.cpu $(CPUDIR)/m32c.opc
	$(MAKE) run-cgen arch=m32c prefix=m32c options= \
		archfile=$(CPUDIR)/m32c.cpu \
		opcfile=$(CPUDIR)/m32c.opc extrafiles=

$(srcdir)/m32r-desc.h $(srcdir)/m32r-desc.c $(srcdir)/m32r-opc.h $(srcdir)/m32r-opc.c $(srcdir)/m32r-ibld.c $(srcdir)/m32r-opinst.c $(srcdir)/m32r-asm.c $(srcdir)/m32r-dis.c: $(M32R_DEPS)
	@@true
stamp-m32r: $(CGENDEPS) $(CPUDIR)/m32r.cpu $(CPUDIR)/m32r.opc
	$(MAKE) run-cgen arch=m32r prefix=m32r options=opinst \
		archfile=$(CPUDIR)/m32r.cpu \
		opcfile=$(CPUDIR)/m32r.opc extrafiles=opinst

$(srcdir)/mep-desc.h $(srcdir)/mep-desc.c $(srcdir)/mep-opc.h $(srcdir)/mep-opc.c $(srcdir)/mep-ibld.c $(srcdir)/mep-asm.c $(srcdir)/mep-dis.c: $(MEP_DEPS)
	@@true
stamp-mep: $(CGENDEPS) $(CPUDIR)/mep.cpu $(CPUDIR)/mep-default.cpu $(CPUDIR)/mep-core.cpu $(CPUDIR)/mep-h1.cpu $(CPUDIR)/mep-ext-cop.cpu $(CPUDIR)/mep-sample-ucidsp.cpu $(CPUDIR)/mep-rhcop.cpu $(CPUDIR)/mep-fmax.cpu $(CPUDIR)/mep.opc
	$(MAKE) run-cgen arch=mep prefix=mep options= \
		archfile=$(CPUDIR)/mep.cpu opcfile=$(CPUDIR)/mep.opc extrafiles=

$(srcdir)/mt-desc.h $(srcdir)/mt-desc.c $(srcdir)/mt-opc.h $(srcdir)/mt-opc.c $(srcdir)/mt-ibld.c $(srcdir)/mt-asm.c $(srcdir)/mt-dis.c: $(MT_DEPS)
	@@true
stamp-mt: $(CGENDEPS) $(CPUDIR)/mt.cpu $(CPUDIR)/mt.opc
	$(MAKE) run-cgen arch=mt prefix=mt options= \
		archfile=$(CPUDIR)/mt.cpu \
		opcfile=$(CPUDIR)/mt.opc extrafiles=

$(srcdir)/openrisc-desc.h $(srcdir)/openrisc-desc.c $(srcdir)/openrisc-opc.h $(srcdir)/openrisc-opc.c $(srcdir)/openrisc-ibld.c $(srcdir)/openrisc-asm.c $(srcdir)/openrisc-dis.c: $(OPENRISC_DEPS)
	@@true
stamp-openrisc: $(CGENDEPS) $(CPUDIR)/openrisc.cpu $(CPUDIR)/openrisc.opc
	$(MAKE) run-cgen arch=openrisc prefix=openrisc options= \
		archfile=$(CPUDIR)/openrisc.cpu opcfile=$(CPUDIR)/openrisc.opc extrafiles=

$(srcdir)/xc16x-desc.h $(srcdir)/xc16x-desc.c $(srcdir)/xc16x-opc.h $(srcdir)/xc16x-opc.c $(srcdir)/xc16x-ibld.c $(srcdir)/xc16x-asm.c $(srcdir)/xc16x-dis.c: $(XC16X_DEPS)
	@@true
stamp-xc16x: $(CGENDEPS) $(CPUDIR)/xc16x.cpu $(CPUDIR)/xc16x.opc
	$(MAKE) run-cgen arch=xc16x prefix=xc16x options= \
		archfile=$(CPUDIR)/xc16x.cpu \
		opcfile=$(CPUDIR)/xc16x.opc \
		extrafiles=

$(srcdir)/xstormy16-desc.h $(srcdir)/xstormy16-desc.c $(srcdir)/xstormy16-opc.h $(srcdir)/xstormy16-opc.c $(srcdir)/xstormy16-ibld.c $(srcdir)/xstormy16-asm.c $(srcdir)/xstormy16-dis.c: $(XSTORMY16_DEPS)
	@@true
stamp-xstormy16: $(CGENDEPS) $(CPUDIR)/xstormy16.cpu $(CPUDIR)/xstormy16.opc
	$(MAKE) run-cgen arch=xstormy16 prefix=xstormy16 options= \
		archfile=$(CPUDIR)/xstormy16.cpu opcfile=$(CPUDIR)/xstormy16.opc extrafiles=

aarch64-gen$(EXEEXT_FOR_BUILD): aarch64-gen.o $(BUILD_LIB_DEPS)
	$(LINK_FOR_BUILD) aarch64-gen.o $(BUILD_LIBS)

aarch64-gen.o: aarch64-gen.c $(BFD_H) $(INCDIR)/getopt.h $(INCDIR)/libiberty.h\
	$(INCDIR)/opcode/aarch64.h config.h aarch64-opc.h aarch64-tbl.h
	$(COMPILE_FOR_BUILD) -c $(srcdir)/aarch64-gen.c

$(srcdir)/aarch64-asm-2.c: @@MAINT@@ aarch64-gen$(exeext_for_build)
	./aarch64-gen$(exeext_for_build) --gen-asm > $@@
$(srcdir)/aarch64-dis-2.c: @@MAINT@@ aarch64-gen$(exeext_for_build)
	./aarch64-gen$(exeext_for_build) --gen-dis > $@@
$(srcdir)/aarch64-opc-2.c: @@MAINT@@ aarch64-gen$(exeext_for_build)
	./aarch64-gen$(exeext_for_build) --gen-opc > $@@

i386-gen$(EXEEXT_FOR_BUILD): i386-gen.o $(BUILD_LIB_DEPS)
	$(LINK_FOR_BUILD) i386-gen.o $(BUILD_LIBS)

i386-gen.o: i386-gen.c i386-opc.h $(srcdir)/../include/opcode/i386.h \
	$(INCDIR)/ansidecl.h $(INCDIR)/getopt.h $(INCDIR)/hashtab.h \
	$(INCDIR)/libiberty.h $(INCDIR)/opcode/i386.h $(INCDIR)/safe-ctype.h \
	config.h i386-opc.h sysdep.h
	$(COMPILE_FOR_BUILD) -c $(srcdir)/i386-gen.c

$(srcdir)/i386-tbl.h: $(srcdir)/i386-init.h 
	@@echo $@@

$(srcdir)/i386-init.h: @@MAINT@@ i386-gen$(EXEEXT_FOR_BUILD) i386-opc.tbl i386-reg.tbl
	./i386-gen$(EXEEXT_FOR_BUILD) --srcdir $(srcdir)

i386-opc.lo: $(srcdir)/i386-tbl.h

ia64-gen$(EXEEXT_FOR_BUILD): ia64-gen.o $(BUILD_LIB_DEPS)
	$(LINK_FOR_BUILD) ia64-gen.o $(BUILD_LIBS)

ia64-gen.o: ia64-gen.c $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/getopt.h \
	$(INCDIR)/libiberty.h $(INCDIR)/opcode/ia64.h $(INCDIR)/safe-ctype.h \
	$(INCDIR)/symcat.h config.h ia64-opc-a.c ia64-opc-b.c \
	ia64-opc-d.c ia64-opc-f.c ia64-opc-i.c ia64-opc-m.c \
	ia64-opc-x.c ia64-opc.h sysdep.h
	$(COMPILE_FOR_BUILD) -c $(srcdir)/ia64-gen.c
$(srcdir)/ia64-asmtab.c: @@MAINT@@ $(ia64_asmtab_deps)
	./ia64-gen$(EXEEXT_FOR_BUILD) --srcdir $(srcdir) > $@@

ia64-opc.lo: $(srcdir)/ia64-asmtab.c

$(srcdir)/msp430-decode.c: @@MAINT@@ $(srcdir)/msp430-decode.opc opc2c$(EXEEXT_FOR_BUILD)
	./opc2c$(EXEEXT_FOR_BUILD) $(srcdir)/msp430-decode.opc > $(srcdir)/msp430-decode.c

$(srcdir)/rl78-decode.c: @@MAINT@@ $(srcdir)/rl78-decode.opc opc2c$(EXEEXT_FOR_BUILD)
	./opc2c$(EXEEXT_FOR_BUILD) $(srcdir)/rl78-decode.opc > $(srcdir)/rl78-decode.c

$(srcdir)/rx-decode.c: @@MAINT@@ $(srcdir)/rx-decode.opc opc2c$(EXEEXT_FOR_BUILD)
	./opc2c$(EXEEXT_FOR_BUILD) $(srcdir)/rx-decode.opc > $(srcdir)/rx-decode.c

opc2c$(EXEEXT_FOR_BUILD): opc2c.o $(BUILD_LIBS_DEPS)
	$(LINK_FOR_BUILD) opc2c.o $(BUILD_LIBS)

opc2c.o: opc2c.c $(INCDIR)/libiberty.h
	$(COMPILE_FOR_BUILD) -c $(srcdir)/opc2c.c

s390-mkopc$(EXEEXT_FOR_BUILD): s390-mkopc.c
	$(COMPILE_FOR_BUILD) -o s390-mkopc $(srcdir)/s390-mkopc.c

s390-opc.tab: s390-mkopc$(EXEEXT_FOR_BUILD) s390-opc.txt
	./s390-mkopc$(EXEEXT_FOR_BUILD) < $(srcdir)/s390-opc.txt > s390-opc.tab

s390-opc.lo: s390-opc.tab

z8kgen$(EXEEXT_FOR_BUILD): z8kgen.o $(BUILD_LIB_DEPS)
	$(LINK_FOR_BUILD) z8kgen.o $(BUILD_LIBS)

z8kgen.o: z8kgen.c
	$(COMPILE_FOR_BUILD) -c $(srcdir)/z8kgen.c

$(srcdir)/z8k-opc.h: @@MAINT@@ z8kgen$(EXEEXT_FOR_BUILD)
	./z8kgen$(EXEEXT_FOR_BUILD) -a > $@@

z8k-dis.lo: $(srcdir)/z8k-opc.h

sh-dis.lo: sh-dis.c
@@am__fastdepCC_TRUE@@	$(LTCOMPILE) -MT $@@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@@ @@archdefs@@ $(srcdir)/sh-dis.c
@@am__fastdepCC_TRUE@@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@@AMDEP_TRUE@@@@am__fastdepCC_FALSE@@	source='sh-dis.c' object='$@@' libtool=yes @@AMDEPBACKSLASH@@
@@AMDEP_TRUE@@@@am__fastdepCC_FALSE@@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @@AMDEPBACKSLASH@@
@@am__fastdepCC_FALSE@@	$(LTCOMPILE) -c -o $@@ @@archdefs@@ $(srcdir)/sh-dis.c

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
@


1.197
log
@	* msp430-decode.opc: New.
	* msp430-decode.c: New/generated.
	* Makefile.am (TARGET_LIBOPCODES_CFILES): Add msp430-decode.c.
	(MAINTAINER_CLEANFILES): Likewise.
	Add rule to build msp430-decode.c frommsp430decode.opc
        using the opc2c program.
	* Makefile.in: Regenerate.
	* configure.in: Add msp430-decode.lo to msp430 architecture files.
	* configure: Regenerate.

	* msp430-decode.h: New.
@
text
@a1440 24
micromips-opc.lo: micromips-opc.c
@@am__fastdepCC_TRUE@@	$(LTCOMPILE) $(NO_WMISSING_FIELD_INITIALIZERS) \
@@am__fastdepCC_TRUE@@	  -MT $@@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@@ @@archdefs@@ $<
@@am__fastdepCC_TRUE@@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@@AMDEP_TRUE@@@@am__fastdepCC_FALSE@@	source='$<' object='$@@' libtool=yes @@AMDEPBACKSLASH@@
@@AMDEP_TRUE@@@@am__fastdepCC_FALSE@@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @@AMDEPBACKSLASH@@
@@am__fastdepCC_FALSE@@	$(LTCOMPILE) $(NO_WMISSING_FIELD_INITIALIZERS) -c -o $@@ @@archdefs@@ $<

mips-opc.lo: mips-opc.c
@@am__fastdepCC_TRUE@@	$(LTCOMPILE) $(NO_WMISSING_FIELD_INITIALIZERS) \
@@am__fastdepCC_TRUE@@	  -MT $@@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@@ @@archdefs@@ $<
@@am__fastdepCC_TRUE@@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@@AMDEP_TRUE@@@@am__fastdepCC_FALSE@@	source='$<' object='$@@' libtool=yes @@AMDEPBACKSLASH@@
@@AMDEP_TRUE@@@@am__fastdepCC_FALSE@@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @@AMDEPBACKSLASH@@
@@am__fastdepCC_FALSE@@	$(LTCOMPILE) $(NO_WMISSING_FIELD_INITIALIZERS) -c -o $@@ @@archdefs@@ $<

mips16-opc.lo: mips16-opc.c
@@am__fastdepCC_TRUE@@	$(LTCOMPILE) $(NO_WMISSING_FIELD_INITIALIZERS) \
@@am__fastdepCC_TRUE@@	  -MT $@@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@@ @@archdefs@@ $<
@@am__fastdepCC_TRUE@@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@@AMDEP_TRUE@@@@am__fastdepCC_FALSE@@	source='$<' object='$@@' libtool=yes @@AMDEPBACKSLASH@@
@@AMDEP_TRUE@@@@am__fastdepCC_FALSE@@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @@AMDEPBACKSLASH@@
@@am__fastdepCC_FALSE@@	$(LTCOMPILE) $(NO_WMISSING_FIELD_INITIALIZERS) -c -o $@@ @@archdefs@@ $<

@


1.196
log
@	* Makefile.am (mips-opc.lo): Add rules to create automatic
	dependency files.  Pass archdefs.
	(micromips-opc.lo, mips16-opc.lo): Likewise.
	* Makefile.in: Regenerate.
@
text
@d474 1
d645 1
d875 1
d1435 3
@


1.195
log
@2013-02-06  Sandra Loosemore  <sandra@@codesourcery.com>
            Andrew Jenner <andrew@@codesourcery.com>

	Based on patches from Altera Corporation.

	bfd/
	* Makefile.am (ALL_MACHINES): Add cpu-nios2.lo.
	(ALL_MACHINES_CFILES): Add cpu-nios2.c.
	(BFD_BACKENDS): Add elf32-nios2.lo.
	(BFD32_BACKENDS_CFILES): Add elf32-nios2.c.
	* Makefile.in: Regenerated.
	* configure.in: Add entries for bfd_elf32_bignios2_vec and
	bfd_elf32_littlenios2_vec.
	* configure: Regenerated.
	* config.bfd: Add cases for nios2.
	* archures.c (enum bfd_architecture): Add bfd_arch_nios2.
	(bfd_mach_nios2): Define.
	(bfd_nios2_arch): Declare.
	(bfd_archures_list): Add bfd_nios2_arch.
	* targets.c (bfd_elf32_bignios2_vec): Declare.
	(bfd_elf32_littlenios2_vec): Declare.
	(_bfd_target_vector): Add entries for bfd_elf32_bignios2_vec and
	bfd_elf32_littlenios2_vec.
	* elf-bfd.h (enum elf_target_id): Add NIOS2_ELF_DATA.
	* reloc.c (enum bfd_reloc_code_real): Add Nios II relocations.
	* bfd-in2.h: Regenerated.
	* libbfd.h: Regenerated.
	* cpu-nios2.c: New file.
	* elf32-nios2.c: New file.

	opcodes/
	* Makefile.am (TARGET_LIBOPCODES_CFILES): Add nios2-dis.c and
	nios2-opc.c.
	* Makefile.in: Regenerated.
	* configure.in: Add case for bfd_nios2_arch.
	* configure: Regenerated.
	* disassemble.c (ARCH_nios2): Define.
	(disassembler): Add case for bfd_arch_nios2.
	* nios2-dis.c: New file.
	* nios2-opc.c: New file.

	include/
	* dis-asm.h (print_insn_big_nios2): Declare.
	(print_insn_little_nios2): Declare.

	include/elf
	* nios2.h: New file.

	include/opcode/
	* nios2.h: New file.

	gas/
	* Makefile.am (TARGET_CPU_CFILES): Add config/tc-nios2.c.
	(TARGET_CPU_HFILES): Add config/tc-nios2.h.
	* Makefile.in: Regenerated.
	* configure.tgt: Add case for nios2*-linux*.
	* config/obj-elf.c: Conditionally include elf/nios2.h.
	* config/tc-nios2.c: New file.
	* config/tc-nios2.h: New file.
	* doc/Makefile.am (CPU_DOCS): Add c-nios2.texi.
	* doc/Makefile.in: Regenerated.
	* doc/all.texi: Set NIOSII.
	* doc/as.texinfo (Overview): Add Nios II options.
	(Machine Dependencies): Include c-nios2.texi.
	* doc/c-nios2.texi: New file.
	* NEWS: Note Altera Nios II support.

	gas/testsuite/
	* gas/nios2/add.d: New.
	* gas/nios2/add.s: New.
	* gas/nios2/align_fill.d: New.
	* gas/nios2/align_fill.s: New.
	* gas/nios2/align_text.d: New.
	* gas/nios2/align_text.s: New.
	* gas/nios2/and.d: New.
	* gas/nios2/and.s: New.
	* gas/nios2/branch.d: New.
	* gas/nios2/branch.s: New.
	* gas/nios2/break.d: New.
	* gas/nios2/break.s: New.
	* gas/nios2/bret.d: New.
	* gas/nios2/bret.s: New.
	* gas/nios2/cache.d: New.
	* gas/nios2/cache.s: New.
	* gas/nios2/call26.d: New.
	* gas/nios2/call26.s: New.
	* gas/nios2/call.d: New.
	* gas/nios2/call.s: New.
	* gas/nios2/cmp.d: New.
	* gas/nios2/cmp.s: New.
	* gas/nios2/comments.d: New.
	* gas/nios2/comments.s: New.
	* gas/nios2/complex.d: New.
	* gas/nios2/complex.s: New.
	* gas/nios2/ctl.d: New.
	* gas/nios2/ctl.s: New.
	* gas/nios2/custom.d: New.
	* gas/nios2/custom.s: New.
	* gas/nios2/etbt.d: New.
	* gas/nios2/etbt.s: New.
	* gas/nios2/flushda.d: New.
	* gas/nios2/flushda.s: New.
	* gas/nios2/illegal.l: New.
	* gas/nios2/illegal.s: New.
	* gas/nios2/jmp.d: New.
	* gas/nios2/jmp.s: New.
	* gas/nios2/ldb.d: New.
	* gas/nios2/ldb.s: New.
	* gas/nios2/ldh.d: New.
	* gas/nios2/ldh.s: New.
	* gas/nios2/ldw.d: New.
	* gas/nios2/ldw.s: New.
	* gas/nios2/lineseparator.d: New.
	* gas/nios2/lineseparator.s: New.
	* gas/nios2/mov.d: New.
	* gas/nios2/movia.d: New.
	* gas/nios2/movia.s: New.
	* gas/nios2/movi.d: New.
	* gas/nios2/movi.s: New.
	* gas/nios2/mov.s: New.
	* gas/nios2/mul.d: New.
	* gas/nios2/mul.s: New.
	* gas/nios2/nios2.exp: New.
	* gas/nios2/nor.d: New.
	* gas/nios2/nor.s: New.
	* gas/nios2/or.d: New.
	* gas/nios2/or.s: New.
	* gas/nios2/ret.d: New.
	* gas/nios2/ret.s: New.
	* gas/nios2/rol.d: New.
	* gas/nios2/rol.s: New.
	* gas/nios2/rotate.d: New.
	* gas/nios2/rotate.s: New.
	* gas/nios2/stb.d: New.
	* gas/nios2/stb.s: New.
	* gas/nios2/sth.d: New.
	* gas/nios2/sth.s: New.
	* gas/nios2/stw.d: New.
	* gas/nios2/stw.s: New.
	* gas/nios2/sub.d: New.
	* gas/nios2/sub.s: New.
	* gas/nios2/sync.d: New.
	* gas/nios2/sync.s: New.
	* gas/nios2/trap.d: New.
	* gas/nios2/trap.s: New.
	* gas/nios2/tret.d: New.
	* gas/nios2/tret.s: New.
	* gas/nios2/warn_noat.l: New.
	* gas/nios2/warn_noat.s: New.
	* gas/nios2/warn_nobreak.l: New.
	* gas/nios2/warn_nobreak.s: New.
	* gas/nios2/xor.d: New.
	* gas/nios2/xor.s: New.

	ld/
	* Makefile.am (enios2elf.c): New rule.
	* Makefile.in: Regenerated.
	* configure.tgt: Add case for nios2*-*-*.
	* emulparams/nios2elf.sh: New file.
	* NEWS: Note Altera Nios II support.

	ld/testsuite/
	* ld-nios2/emit-relocs-1a.s: New.
	* ld-nios2/emit-relocs-1b.s: New.
	* ld-nios2/emit-relocs-1.d: New.
	* ld-nios2/emit-relocs-1.ld: New.
	* ld-nios2/gprel.d: New.
	* ld-nios2/gprel.s: New.
	* ld-nios2/hilo16.d: New.
	* ld-nios2/hilo16.s: New.
	* ld-nios2/hilo16_symbol.s: New.
	* ld-nios2/imm5.d: New.
	* ld-nios2/imm5.s: New.
	* ld-nios2/imm5_symbol.s: New.
	* ld-nios2/nios2.exp: New.
	* ld-nios2/pcrel16.d: New.
	* ld-nios2/pcrel16_label.s: New.
	* ld-nios2/pcrel16.s: New.
	* ld-nios2/relax_callr.d: New.
	* ld-nios2/relax_callr.ld: New.
	* ld-nios2/relax_callr.s: New.
	* ld-nios2/relax_cjmp.d: New.
	* ld-nios2/relax_cjmp.s: New.
	* ld-nios2/relax_jmp.ld: New.
	* ld-nios2/relax_section.d: New.
	* ld-nios2/relax_section.s: New.
	* ld-nios2/relax_ujmp.d: New.
	* ld-nios2/relax_ujmp.s: New.
	* ld-nios2/reloc.d: New.
	* ld-nios2/reloc.s: New.
	* ld-nios2/reloc_symbol.s: New.
	* ld-nios2/s16.d: New.
	* ld-nios2/s16.s: New.
	* ld-nios2/s16_symbol.s: New.
	* ld-nios2/u16.d: New.
	* ld-nios2/u16.s: New.
	* ld-nios2/u16_symbol.s: New.
	* ld-elf/indirect.exp: Skip on targets that don't support
	-shared -fPIC.
	* ld-elfcomm/elfcomm.exp: Build with -G0 for nios2.
	* ld-plugin/lto.exp: Skip shared library tests on targets that
	don't support them.  Skip execution tests on non-native targets.

	binutils/
	* readelf.c: Include elf/nios2.h.
	(dump_relocations): Add case for EM_ALTERA_NIOS2.
	(get_nios2_dynamic_type): New.
	(get_dynamic_type): Add case for EM_ALTERA_NIOS2.
	(is_32bit_abs_reloc): Fix EM_ALTERA_NIOS2 case.
	(is_16bit_abs_reloc): Likewise.
	(is_none_reloc): Add EM_ALTERA_NIOS2 and EM_NIOS32 cases.
	* NEWS: Note Altera Nios II support.
	* MAINTAINERS: Add Nios II maintainers.
@
text
@d1436 6
a1441 1
	$(LTCOMPILE) $(NO_WMISSING_FIELD_INITIALIZERS) -c -o $@@ $<
d1444 6
a1449 1
	$(LTCOMPILE) $(NO_WMISSING_FIELD_INITIALIZERS) -c -o $@@ $<
d1452 6
a1457 1
	$(LTCOMPILE) $(NO_WMISSING_FIELD_INITIALIZERS) -c -o $@@ $<
@


1.194
log
@	* common.h: Fix case of "Meta".
	* metag.h: New file.

	* dis-asm.h (print_insn_metag): New declaration.

	* metag.h: New file.

	* Makefile.am: Add Meta.
	* Makefile.in: Regenerate.
	* configure: Regenerate.
	* configure.in: Add Meta.
	* disassemble.c: Add Meta support.
	* metag-dis.c: New file.

	* Makefile.am: Add Meta.
	* Makefile.in: Regenerate.
	* archures.c (bfd_mach_metag): New.
	* bfd-in2.h: Regenerate.
	* config.bfd: Add Meta.
	* configure: Regenerate.
	* configure.in: Add Meta.
	* cpu-metag.c: New file.
	* elf-bfd.h: Add Meta.
	* elf32-metag.c: New file.
	* elf32-metag.h: New file.
	* libbfd.h: Regenerate.
	* reloc.c: Add Meta relocations.
	* targets.c: Add Meta.

	* Makefile.am: Add Meta.
	* Makefile.in: Regenerate.
	* config/tc-metag.c: New file.
	* config/tc-metag.h: New file.
	* configure.tgt: Add Meta.
	* doc/Makefile.am: Add Meta.
	* doc/Makefile.in: Regenerate.
	* doc/all.texi: Add Meta.
	* doc/as.texiinfo: Document Meta options.
	* doc/c-metag.texi: New file.

	* gas/metag/labelarithmetic.d: New file.
	* gas/metag/labelarithmetic.s: New file.
	* gas/metag/metacore12.d: New file.
	* gas/metag/metacore12.s: New file.
	* gas/metag/metacore21-invalid.l: New file.
	* gas/metag/metacore21-invalid.s: New file.
	* gas/metag/metacore21.d: New file.
	* gas/metag/metacore21.s: New file.
	* gas/metag/metacore21ext.d: New file.
	* gas/metag/metacore21ext.s: New file.
	* gas/metag/metadsp21-invalid.l: New file.
	* gas/metag/metadsp21-invalid.s: New file.
	* gas/metag/metadsp21.d: New file.
	* gas/metag/metadsp21.s: New file.
	* gas/metag/metadsp21ext.d: New file.
	* gas/metag/metadsp21ext.s: New file.
	* gas/metag/metafpu21.d: New file.
	* gas/metag/metafpu21.s: New file.
	* gas/metag/metafpu21ext.d: New file.
	* gas/metag/metafpu21ext.s: New file.
	* gas/metag/metag.exp: New file.
	* gas/metag/tls.d: New file.
	* gas/metag/tls.s: New file.

	* Makefile.am: Add Meta.
	* Makefile.in: Regenerate.
	* configure.tgt: Add Meta.
	* emulparams/elf32metag.sh: New file.
	* emultempl/metagelf.em: New file.

	* ld-elf/merge.d: Mark Meta as xfail.
	* ld-gc/start.d: Skip this test on Meta.
	* ld-gc/personality.d: Skip this test on Meta.
	* ld-metag/external.s: New file.
	* ld-metag/metag.exp: New file.
	* ld-metag/pcrel.d: New file.
	* ld-metag/pcrel.s: New file.
	* ld-metag/shared.d: New file.
	* ld-metag/shared.r: New file.
	* ld-metag/shared.s: New file.
	* ld-metag/stub.d: New file.
	* ld-metag/stub.s: New file.
	* ld-metag/stub_pic_app.d: New file.
	* ld-metag/stub_pic_app.r: New file.
	* ld-metag/stub_pic_app.s: New file.
	* ld-metag/stub_pic_shared.d: New file.
	* ld-metag/stub_pic_shared.s: New file.
	* ld-metag/stub_shared.d: New file.
	* ld-metag/stub_shared.r: New file.
	* ld-metag/stub_shared.s: New file.

	* binutils/readelf.c: (guess_is_rela): Add EM_METAG.
	(dump_relocations): Add EM_METAG.
	(get_machine_name): Correct case for Meta.
	(is_32bit_abs_reloc): Add support for Meta ADDR32 reloc.
	(is_none_reloc): Add support for Meta NONE reloc.
@
text
@d480 2
d879 2
@


1.193
log
@Add copyright notices
@
text
@d464 1
d861 1
@


1.192
log
@Add support for 64-bit ARM architecture: AArch64
@
text
@d18 18
d535 1
a535 1
 	xgate-opc.c \
@


1.191
log
@	include/opcode/
	* mips.h (mips_opcode): Add the exclusions field.
	(OPCODE_IS_MEMBER): Remove macro.
	(cpu_is_member): New inline function.
	(opcode_is_member): Likewise.

	opcodes/
	* micromips-opc.c (micromips_opcodes): Update comment.
	* mips-opc.c (mips_builtin_opcodes): Likewise.  Mark coprocessor
	instructions for IOCT as appropriate.
	* mips-dis.c (print_insn_mips): Replace OPCODE_IS_MEMBER with
	opcode_is_member.
	* configure.in: Substitute NO_WMISSING_FIELD_INITIALIZERS with
	the result of a check for the -Wno-missing-field-initializers
	GCC option.
	* Makefile.am (NO_WMISSING_FIELD_INITIALIZERS): New variable.
	(mips-opc.lo): Pass $(NO_WMISSING_FIELD_INITIALIZERS) to
	compilation.
	(mips16-opc.lo): Likewise.
	(micromips-opc.lo): Likewise.
	* aclocal.m4: Regenerate.
	* configure: Regenerate.
	* Makefile.in: Regenerate.

	gas/
	* config/tc-mips.c (NO_ISA_COP, COP_INSN): Remove macros.
	(is_opcode_valid): Remove coprocessor instruction exclusions.
	Replace OPCODE_IS_MEMBER with opcode_is_member.
	(is_opcode_valid_16): Replace OPCODE_IS_MEMBER with
	opcode_is_member.
	(macro): Remove coprocessor instruction exclusions.
@
text
@d315 1
d349 6
d533 1
d616 3
a618 3
MOSTLYCLEANFILES = i386-gen$(EXEEXT_FOR_BUILD) ia64-gen$(EXEEXT_FOR_BUILD) \
	s390-mkopc$(EXEEXT_FOR_BUILD) s390-opc.tab z8kgen$(EXEEXT_FOR_BUILD) \
	opc2c$(EXEEXT_FOR_BUILD)
d620 2
a621 1
MAINTAINERCLEANFILES = $(srcdir)/i386-tbl.h $(srcdir)/i386-init.h \
d742 6
d1363 14
@


1.190
log
@Add support for Motorola XGATE embedded CPU
@
text
@d57 1
d199 1
d1382 9
@


1.190.4.1
log
@Add support for 64-bit ARM architecture: aarch64
@
text
@a312 1
	aarch64-asm.h aarch64-dis.h aarch64-opc.h aarch64-tbl.h \
a345 6
	aarch64-asm.c \
	aarch64-asm-2.c \
	aarch64-dis.c \
	aarch64-dis-2.c \
	aarch64-opc.c \
	aarch64-opc-2.c \
a523 1
	aarch64-gen.c \
d606 3
a608 3
MOSTLYCLEANFILES = aarch64-gen$(EXEEXT_FOR_BUILD) i386-gen$(EXEEXT_FOR_BUILD) \
	ia64-gen$(EXEEXT_FOR_BUILD) s390-mkopc$(EXEEXT_FOR_BUILD) s390-opc.tab \
	z8kgen$(EXEEXT_FOR_BUILD) opc2c$(EXEEXT_FOR_BUILD)
d610 1
a610 2
MAINTAINERCLEANFILES = $(srcdir)/aarch64-asm-2.c $(srcdir)/aarch64-dis-2.c \
	$(srcdir)/aarch64-opc-2.c $(srcdir)/i386-tbl.h $(srcdir)/i386-init.h \
a730 6
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/aarch64-asm-2.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/aarch64-asm.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/aarch64-dis-2.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/aarch64-dis.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/aarch64-opc-2.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/aarch64-opc.Plo@@am__quote@@
a1345 14
aarch64-gen$(EXEEXT_FOR_BUILD): aarch64-gen.o $(BUILD_LIB_DEPS)
	$(LINK_FOR_BUILD) aarch64-gen.o $(BUILD_LIBS)

aarch64-gen.o: aarch64-gen.c $(BFD_H) $(INCDIR)/getopt.h $(INCDIR)/libiberty.h\
	$(INCDIR)/opcode/aarch64.h config.h aarch64-opc.h aarch64-tbl.h
	$(COMPILE_FOR_BUILD) -c $(srcdir)/aarch64-gen.c

$(srcdir)/aarch64-asm-2.c: @@MAINT@@ aarch64-gen$(exeext_for_build)
	./aarch64-gen$(exeext_for_build) --gen-asm > $@@
$(srcdir)/aarch64-dis-2.c: @@MAINT@@ aarch64-gen$(exeext_for_build)
	./aarch64-gen$(exeext_for_build) --gen-dis > $@@
$(srcdir)/aarch64-opc-2.c: @@MAINT@@ aarch64-gen$(exeext_for_build)
	./aarch64-gen$(exeext_for_build) --gen-opc > $@@

@


1.190.4.2
log
@bfd/
2012-08-09  Maciej W. Rozycki  <macro@@codesourcery.com>

	* elfxx-mips.c (LA25_LUI_MICROMIPS_1, LA25_LUI_MICROMIPS_2):
	Remove macros, folding them into...
	(LA25_LUI_MICROMIPS): ... this new macro.
	(LA25_J_MICROMIPS_1, LA25_J_MICROMIPS_2): Likewise into...
	(LA25_J_MICROMIPS): ... this new macro.
	(LA25_ADDIU_MICROMIPS_1, LA25_ADDIU_MICROMIPS_2): Likewise
	into...
	(LA25_ADDIU_MICROMIPS): ... this new macro.
	(bfd_put_micromips_32, bfd_get_micromips_32): New functions.
	(mips_elf_create_la25_stub): Use them.
	(check_br32_dslot, check_br32, check_relocated_bzc): Likewise.
	(_bfd_mips_elf_relax_section): Likewise.

gas/
	* config/tc-mips.c (NO_ISA_COP, COP_INSN): Remove macros.
	(is_opcode_valid): Remove coprocessor instruction exclusions.
	Replace OPCODE_IS_MEMBER with opcode_is_member.
	(is_opcode_valid_16): Replace OPCODE_IS_MEMBER with
	opcode_is_member.
	(macro): Remove coprocessor instruction exclusions.

gas/
	* gas/mips/mips.exp: Set has_newabi for all Linux targets.
	* gas/mips/cfi-n64-1.d: Adjust for targets that do not infer the
	ISA from the ABI.
	* gas/mips/elf-rel-got-n32.d: Likewise.
	* gas/mips/elf-rel-got-n64.d: Likewise.
	* gas/mips/elf-rel-xgot-n32.d: Likewise.
	* gas/mips/elf-rel-xgot-n64.d: Likewise.
	* gas/mips/elf-rel18.d: Likewise.
	* gas/mips/elf-rel28-n32.d: Likewise.
	* gas/mips/elf-rel28-n64.d: Likewise.
	* gas/mips/jal-newabi.d: Likewise.
	* gas/mips/ldstla-n64-shared.d: Likewise.
	* gas/mips/ldstla-n64-sym32.d: Likewise.
	* gas/mips/ldstla-n64.d: Likewise.
	* gas/mips/macro-warn-1-n32.d: Likewise.
	* gas/mips/macro-warn-2-n32.d: Likewise.
	* gas/mips/n32-consec.d: Likewise.

include/
2012-08-13  Richard Sandiford  <rdsandiford@@googlemail.com>
            Maciej W. Rozycki  <macro@@codesourcery.com>

	* mips.h (mips_opcode): Add the exclusions field.
	(OPCODE_IS_MEMBER): Remove macro.
	(cpu_is_member): New inline function.
	(opcode_is_member): Likewise.

ld/
	* emulparams/elf32bmip.sh: Make _gp hidden.
	* emulparams/elf32bmipn32-defs.sh: Likewise.
	* emulparams/elf32mipswindiss.sh: Likewise.
	* scripttempl/mips.sc: Likewise.

ld/
2012-08-28  Maciej W. Rozycki  <macro@@codesourcery.com>

	* ld-elf/export-class.sd: New test.
	* ld-elf/export-class.vd: New test.
	* ld-elf/export-class-def.s: New test source.
	* ld-elf/export-class-dep.s: New test source.
	* ld-elf/export-class-lib.s: New test source.
	* ld-elf/export-class-ref.s: New test source.
	* ld-elf/export-class-lib.ver: New test version script.
	* ld-elf/export-class.exp: New test script.
	* ld-arm/arm-export-class.rd: New test.
	* ld-arm/arm-export-class.xd: New test.
	* ld-arm/export-class.exp: New test script.
	* ld-i386/i386-export-class.rd: New test.
	* ld-i386/i386-export-class.xd: New test.
	* ld-i386/export-class.exp: New test script.
	* ld-mips-elf/mips-32-export-class.rd: New test.
	* ld-mips-elf/mips-32-export-class.xd: New test.
	* ld-mips-elf/mips-64-export-class.rd: New test.
	* ld-mips-elf/mips-64-export-class.xd: New test.
	* ld-mips-elf/export-class.exp: New test script.
	* ld-powerpc/powerpc-32-export-class.rd: New test.
	* ld-powerpc/powerpc-32-export-class.xd: New test.
	* ld-powerpc/powerpc-64-export-class.rd: New test.
	* ld-powerpc/powerpc-64-export-class.xd: New test.
	* ld-powerpc/export-class.exp: New test script.
	* ld-x86-64/x86-64-64-export-class.rd: New test.
	* ld-x86-64/x86-64-x32-export-class.rd: New test.
	* ld-x86-64/export-class.exp: New test script.

opcodes/
2012-08-14  Maciej W. Rozycki  <macro@@codesourcery.com>

	* mips-dis.c (print_insn_args): Add GET_OP and GET_OP_S local
	macros, use local variables for info struct member accesses,
	update the type of the variable used to hold the instruction
	word.
	(print_insn_mips, print_mips16_insn_arg): Likewise.
	(print_insn_mips16): Add GET_OP and GET_OP_S local macros, use
	local variables for info struct member accesses.
	(print_insn_micromips): Add GET_OP_S local macro.
	(_print_insn_mips): Update the type of the variable used to hold
	the instruction word.
@
text
@a56 1
	$(top_srcdir)/../config/warnings.m4 \
a197 1
NO_WMISSING_FIELD_INITIALIZERS = @@NO_WMISSING_FIELD_INITIALIZERS@@
a1408 9
micromips-opc.lo: micromips-opc.c
	$(LTCOMPILE) $(NO_WMISSING_FIELD_INITIALIZERS) -c -o $@@ $<

mips-opc.lo: mips-opc.c
	$(LTCOMPILE) $(NO_WMISSING_FIELD_INITIALIZERS) -c -o $@@ $<

mips16-opc.lo: mips16-opc.c
	$(LTCOMPILE) $(NO_WMISSING_FIELD_INITIALIZERS) -c -o $@@ $<

@


1.189
log
@[.]
	* configure.ac (rl78-*-*) New case.
	* configure: Regenerate.

[bfd]
	* Makefile.am (ALL_MACHINES): Add cpu-rl78.lo.
	(ALL_MACHINES_CFILES): Add cpu-rl78.c.
	(BFD32_BACKENDS): Add elf32-rl78.lo.
	(BFD32_BACKENDS_CFILES): Add elf32-rl78.c.
	(Makefile.in): Regenerate.
	* archures.c (bfd_architecture): Define bfd_arch_rl78.
	(bfd_archures_list): Add bfd_rl78_arch.
	* config.bfd: Add rl78-*-elf.
	* configure.in: Add bfd_elf32_rl78_vec.
	* reloc.c (bfd_reloc_code_type): Add BFD_RELOC_RL78_* relocations.
	* targets.c (bfd_target_vector): Add bfd_elf32_rl78_vec.
	* Makefile.in: Regenerate.
	* bfd-in2.h: Regenerate.
	* configure: Regenerate.
	* libbfd.h: Regenerate.
	* cpu-rl78.c: New file.
	* elf32-rl78.c: New file.

[binutils]
	* readelf.c: Include elf/rl78.h
	(guess_is_rela): Handle EM_RL78.
	(dump_relocations): Likewise.
	(get_machine_name): Likewise.
	(is_32bit_abs_reloc): Likewise.
	* NEWS: Mention addition of RL78 support.
	* MAINTAINERS: Add myself as RL78 port maintainer.

[gas]
	* Makefile.am (TARGET_CPU_CFILES): Add tc-rl78.c.
	(TARGET_CPU_HFILES): Add rc-rl78.h.
	(EXTRA_DIST): Add rl78-parse.c and rl78-parse.y.
	(rl78-parse.c, rl78-parse.h, rl78-parse.o, rl78-defs.h): New rules.
	* Makefile.in: Regenerate.
	* configure.in: Add rl78 case.
	* configure: Regenerate.
	* configure.tgt: Add rl78 case.
	* config/rl78-defs.h: New file.
	* config/rl78-parse.y: New file.
	* config/tc-rl78.c: New file.
	* config/tc-rl78.h: New file.
	* NEWS: Add Renesas RL78.

	* doc/Makefile.am (c-rl78.texi): New.
	* doc/Makefile.in: Likewise.
	* doc/all.texi: Enable it.
	* doc/as.texi: Add it.

[include]
	* dis-asm.h (print_insn_rl78): Declare.

[include/elf]
	* common.h (EM_RL78, EM_78K0R): New.
	* rl78.h: New.

[include/opcode]
	* rl78.h: New file.

[ld]
	* Makefile.am (ALL_EMULATION_SOURCES): Add eelf32rl78.c.
	(+eelf32rl78.c): New rule.
	* Makefile.in: Regenerate.
	* configure.tgt: Add rl78-*-* case.
	* emulparams/elf32rl78.sh: New file.
	* NEWS: Mention addition of Renesas RL78 support.

[opcodes]
	* Makefile.am (TARGET_LIBOPCODES_CFILES): Add rl78-decode.c and
	rl78-dis.c.
	(MAINTAINERCLEANFILES): Add rl78-decode.c.
	(rl78-decode.c): New rule, built from rl78-decode.opc and opc2c.
	* Makefile.in: Regenerate.
	* configure.in: Add bfd_rl78_arch case.
	* configure: Regenerate.
	* disassemble.c: Define ARCH_rl78.
	(disassembler): Add ARCH_rl78 case.
	* rl78-decode.c: New file.
	* rl78-decode.opc: New file.
	* rl78-dis.c: New file.
@
text
@d507 2
d889 2
@


1.188
log
@bfd:
	* Makefile.am (ALL_MACHINES): Add cpu-epiphany.lo .
	(ALL_MACHINES_CFILES): Add cpu-epiphany.c .
	(BFD32_BACKENDS): Add elf32-epiphany.lo .
	(BFD32_BACKENDS_CFILES): Add elf32-epiphany.c .
	* Makefile.in, bfd-in2.h, configure, libbfd.h: Regenerate.
	* archures.c (bfd_arch_epiphany): Add.
	(bfd_mach_epiphany16, bfd_mach_epiphany32): Define.
	(bfd_epiphany_arch): Declare.
	(bfd_archures_list): Add &bfd_epiphany_arch.
	* config.bfd (epiphany-*-elf): New target case.
	* configure.in (bfd_elf32_epiphany_vec): New target vector case.
	* reloc.c (BFD_RELOC_EPIPHANY_SIMM8): New relocation.
	(BFD_RELOC_EPIPHANY_SIMM24, BFD_RELOC_EPIPHANY_HIGH): Likewise.
	(BFD_RELOC_EPIPHANY_LOW, BFD_RELOC_EPIPHANY_SIMM11): Likewise.
	(BFD_RELOC_EPIPHANY_IMM11, BFD_RELOC_EPIPHANY_IMM8): Likewise.
	* targets.c (bfd_elf32_epiphany_vec): Declare.
	(_bfd_target_vector): Add bfd_elf32_epiphany_vec.
	* po/SRC-POTFILES.in, po/bfd.pot: Regenerate.
	* cpu-epiphany.c, elf32-epiphany.c: New files.
binutils:
	* readelf.c (include "elf/epiphany.h")
	(guess_is_rela, dump_relocation): Handle EM_ADAPTEVA_EPIPHANY.
	(get_machine_name, is_32bit_abs_reloc, is_32bit_pcrel_reloc): Likewise.
	(is_16bit_abs_reloc, is_none_reloc): Likewise.
	* po/binutils.pot: Regenerate.
cpu:
	* cpu/epiphany.cpu, cpu/epiphany.opc: New files.
gas:
	* NEWS: Mention addition of Adapteva Epiphany support.
	* config/tc-epiphany.c, config/tc-epiphany.h: New files.
	* Makefile.am (TARGET_CPU_CFILES): Add config/tc-epiphany.c .
	(TARGET_CPU_HFILES): Add config/tc-epiphany.h .
	* Makefile.in, configure, doc/Makefile.in, po/POTFILES.in: Regenerate.
	* configure.in: Also set using_cgen for epiphany.
	* configure.tgt: Handle epiphany.
	* doc/Makefile.am (CPU_DOCS): Add c-epiphany.texi .
	* doc/all.texi: Set EPIPHANY.
	* doc/as.texinfo: Add EPIPHANY-specific text.
	* doc/c-epiphany.texi: New file.
	* po/gas.pot: Regenerate.
gas/testsuite:
	* gas/epiphany: New directory.
include:
	* dis-asm.h (print_insn_epiphany): Declare.
	* elf/epiphany.h: New file.
	* elf/common.h (EM_ADAPTEVA_EPIPHANY): Define.
ld:
	* NEWS: Mention addition of Adapteva Epiphany support.
	* Makefile.am (ALL_EMULATION_SOURCES): Add eelf32epiphany.c .
	(eelf32epiphany.c): New rule.
	* Makefile.in: Regenerate.
	* configure.tgt: Handle epiphany-*-elf.
	* po/ld.pot: Regenerate.
	* testsuite/ld-srec/srec.exp: xfail epiphany.
	* emulparams/elf32epiphany.sh: New file.
opcodes:
	* Makefile.am (HFILES): Add epiphany-desc.h and epiphany-opc.h .
	(TARGET_LIBOPCODES_CFILES): Add  epiphany-asm.c, epiphany-desc.c,
	epiphany-dis.c, epiphany-ibld.c and epiphany-opc.c .
	(CLEANFILES): Add stamp-epiphany.
	(EPIPHANY_DEPS): Set.  Make CGEN-generated Epiphany files depend on it.
	(stamp-epiphany): New rule.
	* Makefile.in, configure, po/POTFILES.in, po/opcodes.pot: Regenerate.
	* configure.in: Handle bfd_epiphany_arch.
	* disassemble.c (ARCH_epiphany): Define.
	(disassembler): Handle bfd_arch_epiphany.
	* epiphany-asm.c, epiphany-desc.c, epiphany-desc.h: New files.
	* epiphany-dis.c, epiphany-ibld.c, epiphany-opc.c: Likewise.
	* epiphany-opc.h: Likewise.
@
text
@d466 2
d610 1
d852 2
d1373 3
@


1.187
log
@Move cpu files from cgen/cpu to top level cpu directory.
@
text
@d313 1
d369 5
d559 1
a559 1
	stamp-fr30 stamp-frv stamp-ip2k stamp-iq2000 stamp-lm32 \
d575 3
a577 1
CGEN_CPUS = fr30 frv ip2k iq2000 lm32 m32c m32r mep mt openrisc xc16x xstormy16
d752 5
d1245 10
@


1.186
log
@bfd/
2011-02-25  Chao-ying Fu  <fu@@mips.com>
            Ilie Garbacea  <ilie@@mips.com>
            Maciej W. Rozycki  <macro@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>
            Catherine Moore  <clm@@codesourcery.com>
	    Richard Sandiford  <rdsandiford@@googlemail.com>

	* archures.c (bfd_mach_mips_micromips): New macro.
	* cpu-mips.c (I_micromips): New enum value.
	(arch_info_struct): Add bfd_mach_mips_micromips.
	* elfxx-mips.h (_bfd_mips_elf_is_target_special_symbol): New
	prototype.
	(_bfd_mips_elf_relax_section): Likewise.
	(_bfd_mips16_elf_reloc_unshuffle): Rename to...
	(_bfd_mips_elf_reloc_unshuffle): ... this.  Handle microMIPS
	ASE.
	(_bfd_mips16_elf_reloc_shuffle): Rename to...
	(_bfd_mips_elf_reloc_shuffle): ... this.  Handle microMIPS ASE.
	(gprel16_reloc_p): Handle microMIPS ASE.
	(literal_reloc_p): New function.
	* elf32-mips.c (elf_micromips_howto_table_rel): New variable.
	(_bfd_mips_elf32_gprel16_reloc): Handle microMIPS ASE.
	(mips16_gprel_reloc): Update for _bfd_mips_elf_reloc_unshuffle
	and _bfd_mips_elf_reloc_shuffle changes.
	(mips_elf_gprel32_reloc): Update comment.
	(micromips_reloc_map): New variable.
	(bfd_elf32_bfd_reloc_type_lookup): Handle microMIPS ASE.
	(mips_elf32_rtype_to_howto): Likewise.
	(mips_info_to_howto_rel): Likewise.
	(bfd_elf32_bfd_is_target_special_symbol): Define.
	(bfd_elf32_bfd_relax_section): Likewise.
	* elf64-mips.c (micromips_elf64_howto_table_rel): New variable.
	(micromips_elf64_howto_table_rela): Likewise.
	(mips16_gprel_reloc): Update for _bfd_mips_elf_reloc_unshuffle
	and _bfd_mips_elf_reloc_shuffle changes.
	(micromips_reloc_map): Likewise.
	(bfd_elf64_bfd_reloc_type_lookup): Handle microMIPS ASE.
	(bfd_elf64_bfd_reloc_name_lookup): Likewise.
	(mips_elf64_rtype_to_howto): Likewise.
	(bfd_elf64_bfd_is_target_special_symbol): Define.
	* elfn32-mips.c (elf_micromips_howto_table_rel): New variable.
	(elf_micromips_howto_table_rela): Likewise.
	(mips16_gprel_reloc): Update for _bfd_mips_elf_reloc_unshuffle
	and _bfd_mips_elf_reloc_shuffle changes.
	(micromips_reloc_map): Likewise.
	(bfd_elf32_bfd_reloc_type_lookup): Handle microMIPS ASE.
	(bfd_elf32_bfd_reloc_name_lookup): Likewise.
	(mips_elf_n32_rtype_to_howto): Likewise.
	(bfd_elf32_bfd_is_target_special_symbol): Define.
	* elfxx-mips.c (LA25_LUI_MICROMIPS_1): New macro.
	(LA25_LUI_MICROMIPS_2): Likewise.
	(LA25_J_MICROMIPS_1, LA25_J_MICROMIPS_2): Likewise.
	(LA25_ADDIU_MICROMIPS_1, LA25_ADDIU_MICROMIPS_2): Likewise.
	(TLS_RELOC_P): Handle microMIPS ASE.
	(mips_elf_create_stub_symbol): Adjust value of stub symbol if
	target is a microMIPS function.
	(micromips_reloc_p): New function.
	(micromips_reloc_shuffle_p): Likewise.
	(got16_reloc_p, call16_reloc_p): Handle microMIPS ASE.
	(got_disp_reloc_p, got_page_reloc_p): New functions.
	(got_ofst_reloc_p): Likewise.
	(got_hi16_reloc_p, got_lo16_reloc_p): Likewise.
	(call_hi16_reloc_p, call_lo16_reloc_p): Likewise.
	(hi16_reloc_p, lo16_reloc_p, jal_reloc_p): Handle microMIPS ASE.
	(micromips_branch_reloc_p): New function.
	(tls_gd_reloc_p, tls_ldm_reloc_p): Likewise.
	(tls_gottprel_reloc_p): Likewise.
	(_bfd_mips16_elf_reloc_unshuffle): Rename to...
	(_bfd_mips_elf_reloc_unshuffle): ... this.  Handle microMIPS
	ASE.
	(_bfd_mips16_elf_reloc_shuffle): Rename to...
	(_bfd_mips_elf_reloc_shuffle): ... this.  Handle microMIPS ASE.
	(_bfd_mips_elf_lo16_reloc): Handle microMIPS ASE.
	(mips_tls_got_index, mips_elf_got_page): Likewise.
	(mips_elf_create_local_got_entry): Likewise.
	(mips_elf_relocation_needs_la25_stub): Likewise.
	(mips_elf_calculate_relocation): Likewise.
	(mips_elf_perform_relocation): Likewise.
	(_bfd_mips_elf_symbol_processing): Likewise.
	(_bfd_mips_elf_add_symbol_hook): Likewise.
	(_bfd_mips_elf_link_output_symbol_hook): Likewise.
	(mips_elf_add_lo16_rel_addend): Likewise.
	(_bfd_mips_elf_check_relocs): Likewise.
	(mips_elf_adjust_addend): Likewise.
	(_bfd_mips_elf_relocate_section): Likewise.
	(mips_elf_create_la25_stub): Likewise.
	(_bfd_mips_vxworks_finish_dynamic_symbol): Likewise.
	(_bfd_mips_elf_gc_sweep_hook): Likewise.
	(_bfd_mips_elf_is_target_special_symbol): New function.
	(mips_elf_relax_delete_bytes): Likewise.
	(opcode_descriptor): New structure.
	(RA): New macro.
	(OP32_SREG, OP32_TREG, OP16_VALID_REG): Likewise.
	(b_insns_32, bc_insn_32, bz_insn_32, bzal_insn_32): New variables.
	(beq_insn_32): Likewise.
	(b_insn_16, bz_insn_16): New variables.
	(BZC32_REG_FIELD): New macro.
	(bz_rs_insns_32, bz_rt_insns_32): New variables.
	(bzc_insns_32, bz_insns_16):Likewise.
	(BZ16_REG, BZ16_REG_FIELD): New macros.
	(jal_insn_32_bd16, jal_insn_32_bd32): New variables.
	(jal_x_insn_32_bd32): Likewise.
	(j_insn_32, jalr_insn_32): Likewise.
	(ds_insns_32_bd16, ds_insns_32_bd32): Likewise.
	(jalr_insn_16_bd16, jalr_insn_16_bd32, jr_insn_16): Likewise.
	(JR16_REG): New macro.
	(ds_insns_16_bd16): New variable.
	(lui_insn): Likewise.
	(addiu_insn, addiupc_insn): Likewise.
	(ADDIUPC_REG_FIELD): New macro.
	(MOVE32_RD, MOVE32_RS): Likewise.
	(MOVE16_RD_FIELD, MOVE16_RS_FIELD): Likewise.
	(move_insns_32, move_insns_16): New variables.
	(nop_insn_32, nop_insn_16): Likewise.
	(MATCH): New macro.
	(find_match): New function.
	(check_br16_dslot, check_br32_dslot): Likewise.
	(check_br16, check_br32): Likewise.
	(IS_BITSIZE): New macro.
	(check_4byte_branch): New function.
	(_bfd_mips_elf_relax_section): Likewise.
	(_bfd_mips_elf_merge_private_bfd_data): Disallow linking MIPS16
	and microMIPS modules together.
	(_bfd_mips_elf_print_private_bfd_data):	Handle microMIPS ASE.
	* reloc.c (BFD_RELOC_MICROMIPS_7_PCREL_S1): New relocation.
	(BFD_RELOC_MICROMIPS_10_PCREL_S1): Likewise.
	(BFD_RELOC_MICROMIPS_16_PCREL_S1): Likewise.
	(BFD_RELOC_MICROMIPS_GPREL16): Likewise.
	(BFD_RELOC_MICROMIPS_JMP, BFD_RELOC_MICROMIPS_HI16): Likewise.
	(BFD_RELOC_MICROMIPS_HI16_S): Likewise.
	(BFD_RELOC_MICROMIPS_LO16): Likewise.
	(BFD_RELOC_MICROMIPS_LITERAL): Likewise.
	(BFD_RELOC_MICROMIPS_GOT16): Likewise.
	(BFD_RELOC_MICROMIPS_CALL16): Likewise.
	(BFD_RELOC_MICROMIPS_GOT_HI16): Likewise.
	(BFD_RELOC_MICROMIPS_GOT_LO16): Likewise.
	(BFD_RELOC_MICROMIPS_CALL_HI16): Likewise.
	(BFD_RELOC_MICROMIPS_CALL_LO16): Likewise.
	(BFD_RELOC_MICROMIPS_SUB): Likewise.
	(BFD_RELOC_MICROMIPS_GOT_PAGE): Likewise.
	(BFD_RELOC_MICROMIPS_GOT_OFST): Likewise.
	(BFD_RELOC_MICROMIPS_GOT_DISP): Likewise.
	(BFD_RELOC_MICROMIPS_HIGHEST): Likewise.
	(BFD_RELOC_MICROMIPS_HIGHER): Likewise.
	(BFD_RELOC_MICROMIPS_SCN_DISP): Likewise.
	(BFD_RELOC_MICROMIPS_JALR): Likewise.
	(BFD_RELOC_MICROMIPS_TLS_GD): Likewise.
	(BFD_RELOC_MICROMIPS_TLS_LDM): Likewise.
	(BFD_RELOC_MICROMIPS_TLS_DTPREL_HI16): Likewise.
	(BFD_RELOC_MICROMIPS_TLS_DTPREL_LO16): Likewise.
	(BFD_RELOC_MICROMIPS_TLS_GOTTPREL): Likewise.
	(BFD_RELOC_MICROMIPS_TLS_TPREL_HI16): Likewise.
	(BFD_RELOC_MICROMIPS_TLS_TPREL_LO16): Likewise.
	* bfd-in2.h: Regenerate.
	* libbfd.h: Regenerate.

binutils/
2011-02-25  Chao-ying Fu  <fu@@mips.com>
            Maciej W. Rozycki  <macro@@codesourcery.com>

	* readelf.c (get_machine_flags): Handle microMIPS ASE.
	(get_mips_symbol_other): Likewise.

gas/
2011-02-25  Maciej W. Rozycki  <macro@@codesourcery.com>
            Chao-ying Fu  <fu@@mips.com>
	    Richard Sandiford  <rdsandiford@@googlemail.com>

	* config/tc-mips.h (mips_segment_info): Add one bit for
	microMIPS.
	(TC_LABEL_IS_LOCAL): New macro.
	(mips_label_is_local): New prototype.
	* config/tc-mips.c (S0, S7): New macros.
	(emit_branch_likely_macro): New variable.
	(mips_set_options): Add micromips.
	(mips_opts): Initialise micromips to -1.
	(file_ase_micromips): New variable.
	(CPU_HAS_MICROMIPS): New macro.
	(hilo_interlocks): Set for microMIPS too.
	(gpr_interlocks): Likewise.
	(cop_interlocks): Likewise.
	(cop_mem_interlocks): Likewise.
	(HAVE_CODE_COMPRESSION): New macro.
	(micromips_op_hash): New variable.
	(micromips_nop16_insn, micromips_nop32_insn): New variables.
	(NOP_INSN): Handle microMIPS ASE.
	(mips32_to_micromips_reg_b_map): New macro.
	(mips32_to_micromips_reg_c_map): Likewise.
	(mips32_to_micromips_reg_d_map): Likewise.
	(mips32_to_micromips_reg_e_map): Likewise.
	(mips32_to_micromips_reg_f_map): Likewise.
	(mips32_to_micromips_reg_g_map): Likewise.
	(mips32_to_micromips_reg_l_map): Likewise.
	(mips32_to_micromips_reg_n_map): Likewise.
	(mips32_to_micromips_reg_h_map): New variable.
	(mips32_to_micromips_reg_m_map): Likewise.
	(mips32_to_micromips_reg_q_map): Likewise.
	(micromips_to_32_reg_h_map): New variable.
	(micromips_to_32_reg_i_map): Likewise.
	(micromips_to_32_reg_m_map): Likewise.
	(micromips_to_32_reg_q_map): Likewise.
	(micromips_to_32_reg_b_map): New macro.
	(micromips_to_32_reg_c_map): Likewise.
	(micromips_to_32_reg_d_map): Likewise.
	(micromips_to_32_reg_e_map): Likewise.
	(micromips_to_32_reg_f_map): Likewise.
	(micromips_to_32_reg_g_map): Likewise.
	(micromips_to_32_reg_l_map): Likewise.
	(micromips_to_32_reg_n_map): Likewise.
	(micromips_imm_b_map, micromips_imm_c_map): New macros.
	(RELAX_DELAY_SLOT_16BIT): New macro.
	(RELAX_DELAY_SLOT_SIZE_FIRST): Likewise.
	(RELAX_DELAY_SLOT_SIZE_SECOND): Likewise.
	(RELAX_MICROMIPS_ENCODE, RELAX_MICROMIPS_P): New macros.
	(RELAX_MICROMIPS_TYPE, RELAX_MICROMIPS_AT): Likewise.
	(RELAX_MICROMIPS_U16BIT, RELAX_MICROMIPS_UNCOND): Likewise.
	(RELAX_MICROMIPS_COMPACT, RELAX_MICROMIPS_LINK): Likewise.
	(RELAX_MICROMIPS_RELAX32, RELAX_MICROMIPS_TOOFAR16): Likewise.
	(RELAX_MICROMIPS_MARK_TOOFAR16): Likewise.
	(RELAX_MICROMIPS_CLEAR_TOOFAR16): Likewise.
	(RELAX_MICROMIPS_TOOFAR32): Likewise.
	(RELAX_MICROMIPS_MARK_TOOFAR32): Likewise.
	(RELAX_MICROMIPS_CLEAR_TOOFAR32): Likewise.
	(INSERT_OPERAND, EXTRACT_OPERAND): Handle microMIPS ASE.
	(mips_macro_warning): Add delay_slot_16bit_p, delay_slot_32bit_p,
	fsize and insns.
	(mips_mark_labels): New function.
	(mips16_small, mips16_ext): Remove variables, replacing with...
	(forced_insn_size): ... this.
	(append_insn, mips16_ip): Update accordingly.
	(micromips_insn_length): New function.
	(insn_length): Return the length of microMIPS instructions.
	(mips_record_mips16_mode): Rename to...
	(mips_record_compressed_mode): ... this.  Handle microMIPS ASE.
	(install_insn): Handle microMIPS ASE.
	(reglist_lookup): New function.
	(is_size_valid, is_delay_slot_valid): Likewise.
	(md_begin): Handle microMIPS ASE.
	(md_assemble): Likewise.  Update for append_insn interface change.
	(micromips_reloc_p): New function.
	(got16_reloc_p): Handle microMIPS ASE.
	(hi16_reloc_p): Likewise.
	(lo16_reloc_p): Likewise.
	(jmp_reloc_p): New function.
	(jalr_reloc_p): Likewise.
	(matching_lo_reloc): Handle microMIPS ASE.
	(insn_uses_reg, reg_needs_delay): Likewise.
	(mips_move_labels): Likewise.
	(mips16_mark_labels): Rename to...
	(mips_compressed_mark_labels): ... this.  Handle microMIPS ASE.
	(gpr_mod_mask): New function.
	(gpr_read_mask, gpr_write_mask): Handle microMIPS ASE.
	(fpr_read_mask, fpr_write_mask): Likewise.
	(insns_between, nops_for_vr4130, nops_for_insn): Likewise.
	(fix_loongson2f_nop, fix_loongson2f_jump): Likewise.
	(MICROMIPS_LABEL_CHAR): New macro.
	(micromips_target_label, micromips_target_name): New variables.
	(micromips_label_name, micromips_label_expr): New functions.
	(micromips_label_inc, micromips_add_label): Likewise.
	(mips_label_is_local): Likewise.
	(micromips_map_reloc): Likewise.
	(can_swap_branch_p): Handle microMIPS ASE.
	(append_insn): Add expansionp argument.  Handle microMIPS ASE.
	(start_noreorder, end_noreorder): Handle microMIPS ASE.
	(macro_start, macro_warning, macro_end): Likewise.
	(brk_fmt, cop12_fmt, jalr_fmt, lui_fmt): New variables.
	(mem12_fmt, mfhl_fmt, shft_fmt, trap_fmt): Likewise.
	(BRK_FMT, COP12_FMT, JALR_FMT, LUI_FMT): New macros.
	(MEM12_FMT, MFHL_FMT, SHFT_FMT, TRAP_FMT): Likewise.
	(macro_build): Handle microMIPS ASE.  Update for append_insn
	interface change.
	(mips16_macro_build): Update for append_insn interface change.
	(macro_build_jalr): Handle microMIPS ASE.
	(macro_build_lui): Likewise.  Simplify.
	(load_register): Handle microMIPS ASE.
	(load_address): Likewise.
	(move_register): Likewise.
	(macro_build_branch_likely): New function.
	(macro_build_branch_ccl): Likewise.
	(macro_build_branch_rs): Likewise.
	(macro_build_branch_rsrt): Likewise.
	(macro): Handle microMIPS ASE.
	(validate_micromips_insn): New function.
	(expr_const_in_range): Likewise.
	(mips_ip): Handle microMIPS ASE.
	(options): Add OPTION_MICROMIPS and OPTION_NO_MICROMIPS.
	(md_longopts): Add mmicromips and mno-micromips.
	(md_parse_option): Handle OPTION_MICROMIPS and
	OPTION_NO_MICROMIPS.
	(mips_after_parse_args): Handle microMIPS ASE.
	(md_pcrel_from): Handle microMIPS relocations.
	(mips_force_relocation): Likewise.
	(md_apply_fix): Likewise.
	(mips_align): Handle microMIPS ASE.
	(s_mipsset): Likewise.
	(s_cpload, s_cpsetup, s_cpreturn): Use relocation wrappers.
	(s_dtprel_internal): Likewise.
	(s_gpword, s_gpdword): Likewise.
	(s_insn): Handle microMIPS ASE.
	(s_mips_stab): Likewise.
	(relaxed_micromips_32bit_branch_length): New function.
	(relaxed_micromips_16bit_branch_length): New function.
	(md_estimate_size_before_relax): Handle microMIPS ASE.
	(mips_fix_adjustable): Likewise.
	(tc_gen_reloc): Handle microMIPS relocations.
	(mips_relax_frag): Handle microMIPS ASE.
	(md_convert_frag): Likewise.
	(mips_frob_file_after_relocs): Likewise.
	(mips_elf_final_processing): Likewise.
	(mips_nop_opcode): Likewise.
	(mips_handle_align): Likewise.
	(md_show_usage): Handle microMIPS options.
	* symbols.c (TC_LABEL_IS_LOCAL): New macro.
	(S_IS_LOCAL): Add a TC_LABEL_IS_LOCAL check.

	* doc/as.texinfo (Target MIPS options): Add -mmicromips and
	-mno-micromips.
	(-mmicromips, -mno-micromips): New options.
	* doc/c-mips.texi (-mmicromips, -mno-micromips): New options.
	(MIPS ISA): Document .set micromips and .set nomicromips.
	(MIPS insn): Update for microMIPS support.

gas/testsuite/
2011-02-25  Maciej W. Rozycki  <macro@@codesourcery.com>
            Chao-ying Fu  <fu@@mips.com>
	    Richard Sandiford  <rdsandiford@@googlemail.com>

	* gas/mips/micromips.d: New test.
	* gas/mips/micromips-branch-delay.d: Likewise.
	* gas/mips/micromips-branch-relax.d: Likewise.
	* gas/mips/micromips-branch-relax-pic.d: Likewise.
	* gas/mips/micromips-size-1.d: Likewise.
	* gas/mips/micromips-trap.d: Likewise.
	* gas/mips/micromips.l: New stderr output.
	* gas/mips/micromips-branch-delay.l: Likewise.
	* gas/mips/micromips-branch-relax.l: Likewise.
	* gas/mips/micromips-branch-relax-pic.l: Likewise.
	* gas/mips/micromips-size-0.l: New list test.
	* gas/mips/micromips-size-1.l: New stderr output.
	* gas/mips/micromips.s: New test source.
	* gas/mips/micromips-branch-delay.s: Likewise.
	* gas/mips/micromips-branch-relax.s: Likewise.
	* gas/mips/micromips-size-0.s: Likewise.
	* gas/mips/micromips-size-1.s: Likewise.
	* gas/mips/mips.exp: Run the new tests.

	* gas/mips/dli.s: Use .p2align.
	* gas/mips/elf_ase_micromips.d: New test.
	* gas/mips/elf_ase_micromips-2.d: Likewise.
	* gas/mips/micromips@@abs.d: Likewise.
	* gas/mips/micromips@@add.d: Likewise.
	* gas/mips/micromips@@alnv_ps-swap.d: Likewise.
	* gas/mips/micromips@@and.d: Likewise.
	* gas/mips/micromips@@beq.d: Likewise.
	* gas/mips/micromips@@bge.d: Likewise.
	* gas/mips/micromips@@bgeu.d: Likewise.
	* gas/mips/micromips@@blt.d: Likewise.
	* gas/mips/micromips@@bltu.d: Likewise.
	* gas/mips/micromips@@branch-likely.d: Likewise.
	* gas/mips/micromips@@branch-misc-1.d: Likewise.
	* gas/mips/micromips@@branch-misc-2-64.d: Likewise.
	* gas/mips/micromips@@branch-misc-2.d: Likewise.
	* gas/mips/micromips@@branch-misc-2pic-64.d: Likewise.
	* gas/mips/micromips@@branch-misc-2pic.d: Likewise.
	* gas/mips/micromips@@branch-misc-4-64.d: Likewise.
	* gas/mips/micromips@@branch-misc-4.d: Likewise.
	* gas/mips/micromips@@branch-self.d: Likewise.
	* gas/mips/micromips@@cache.d: Likewise.
	* gas/mips/micromips@@daddi.d: Likewise.
	* gas/mips/micromips@@dli.d: Likewise.
	* gas/mips/micromips@@elf-jal.d: Likewise.
	* gas/mips/micromips@@elf-rel2.d: Likewise.
	* gas/mips/micromips@@elfel-rel2.d: Likewise.
	* gas/mips/micromips@@elf-rel4.d: Likewise.
	* gas/mips/micromips@@jal-svr4pic.d: Likewise.
	* gas/mips/micromips@@jal-svr4pic-noreorder.d: Likewise.
	* gas/mips/micromips@@lb-svr4pic-ilocks.d: Likewise.
	* gas/mips/micromips@@li.d: Likewise.
	* gas/mips/micromips@@loc-swap-dis.d: Likewise.
	* gas/mips/micromips@@loc-swap.d: Likewise.
	* gas/mips/micromips@@mips1-fp.d: Likewise.
	* gas/mips/micromips@@mips32-cp2.d: Likewise.
	* gas/mips/micromips@@mips32-imm.d: Likewise.
	* gas/mips/micromips@@mips32-sf32.d: Likewise.
	* gas/mips/micromips@@mips32.d: Likewise.
	* gas/mips/micromips@@mips32r2-cp2.d: Likewise.
	* gas/mips/micromips@@mips32r2-fp32.d: Likewise.
	* gas/mips/micromips@@mips32r2-sync.d: Likewise.
	* gas/mips/micromips@@mips32r2.d: Likewise.
	* gas/mips/micromips@@mips4-branch-likely.d: Likewise.
	* gas/mips/micromips@@mips4-fp.d: Likewise.
	* gas/mips/micromips@@mips4.d: Likewise.
	* gas/mips/micromips@@mips5.d: Likewise.
	* gas/mips/micromips@@mips64-cp2.d: Likewise.
	* gas/mips/micromips@@mips64.d: Likewise.
	* gas/mips/micromips@@mips64r2.d: Likewise.
	* gas/mips/micromips@@pref.d: Likewise.
	* gas/mips/micromips@@relax-at.d: Likewise.
	* gas/mips/micromips@@relax.d: Likewise.
	* gas/mips/micromips@@rol-hw.d: Likewise.
	* gas/mips/micromips@@uld2-eb.d: Likewise.
	* gas/mips/micromips@@uld2-el.d: Likewise.
	* gas/mips/micromips@@ulh2-eb.d: Likewise.
	* gas/mips/micromips@@ulh2-el.d: Likewise.
	* gas/mips/micromips@@ulw2-eb-ilocks.d: Likewise.
	* gas/mips/micromips@@ulw2-el-ilocks.d: Likewise.
	* gas/mips/cache.d: Likewise.
	* gas/mips/daddi.d: Likewise.
	* gas/mips/mips32-imm.d: Likewise.
	* gas/mips/pref.d: Likewise.
	* gas/mips/elf-rel27.d: Handle microMIPS ASE.
	* gas/mips/l_d.d: Likewise.
	* gas/mips/l_d-n32.d: Likewise.
	* gas/mips/l_d-n64.d: Likewise.
	* gas/mips/ld.d: Likewise.
	* gas/mips/ld-n32.d: Likewise.
	* gas/mips/ld-n64.d: Likewise.
	* gas/mips/s_d.d: Likewise.
	* gas/mips/s_d-n32.d: Likewise.
	* gas/mips/s_d-n64.d: Likewise.
	* gas/mips/sd.d: Likewise.
	* gas/mips/sd-n32.d: Likewise.
	* gas/mips/sd-n64.d: Likewise.
	* gas/mips/mips32.d: Update immediates.
	* gas/mips/micromips@@mips32-cp2.s: New test source.
	* gas/mips/micromips@@mips32-imm.s: Likewise.
	* gas/mips/micromips@@mips32r2-cp2.s: Likewise.
	* gas/mips/micromips@@mips64-cp2.s: Likewise.
	* gas/mips/cache.s: Likewise.
	* gas/mips/daddi.s: Likewise.
	* gas/mips/mips32-imm.s: Likewise.
	* gas/mips/elf-rel4.s: Handle microMIPS ASE.
	* gas/mips/lb-pic.s: Likewise.
	* gas/mips/ld.s: Likewise.
	* gas/mips/mips32.s: Likewise.
	* gas/mips/mips.exp: Add the micromips arch.  Exclude mips16e
	from micromips.  Run mips32-imm.

	* gas/mips/jal-mask-11.d: New test.
	* gas/mips/jal-mask-12.d: Likewise.
	* gas/mips/micromips@@jal-mask-11.d: Likewise.
	* gas/mips/jal-mask-1.s: Source for the new tests.
	* gas/mips/jal-mask-21.d: New test.
	* gas/mips/jal-mask-22.d: Likewise.
	* gas/mips/micromips@@jal-mask-12.d: Likewise.
	* gas/mips/jal-mask-2.s: Source for the new tests.
	* gas/mips/mips.exp: Run the new tests.

	* gas/mips/mips16-e.d: Add --special-syms to `objdump'.
	* gas/mips/tmips16-e.d: Likewise.
	* gas/mips/mipsel16-e.d: Likewise.
	* gas/mips/tmipsel16-e.d: Likewise.

	* gas/mips/and.s: Adjust padding.
	* gas/mips/beq.s: Likewise.
	* gas/mips/bge.s: Likewise.
	* gas/mips/bgeu.s: Likewise.
	* gas/mips/blt.s: Likewise.
	* gas/mips/bltu.s: Likewise.
	* gas/mips/branch-misc-2.s: Likewise.
	* gas/mips/jal.s: Likewise.
	* gas/mips/li.s: Likewise.
	* gas/mips/mips4.s: Likewise.
	* gas/mips/mips4-fp.s: Likewise.
	* gas/mips/relax.s: Likewise.
	* gas/mips/and.d: Update accordingly.
	* gas/mips/elf-jal.d: Likewise.
	* gas/mips/jal.d: Likewise.
	* gas/mips/li.d: Likewise.
	* gas/mips/relax-at.d: Likewise.
	* gas/mips/relax.d: Likewise.

include/elf/
2011-02-25  Chao-ying Fu  <fu@@mips.com>
            Maciej W. Rozycki  <macro@@codesourcery.com>

	* mips.h (R_MICROMIPS_min): New relocations.
	(R_MICROMIPS_26_S1): Likewise.
	(R_MICROMIPS_HI16, R_MICROMIPS_LO16): Likewise.
	(R_MICROMIPS_GPREL16, R_MICROMIPS_LITERAL): Likewise.
	(R_MICROMIPS_GOT16, R_MICROMIPS_PC7_S1): Likewise.
	(R_MICROMIPS_PC10_S1, R_MICROMIPS_PC16_S1): Likewise.
	(R_MICROMIPS_CALL16, R_MICROMIPS_GOT_DISP): Likewise.
	(R_MICROMIPS_GOT_PAGE, R_MICROMIPS_GOT_OFST): Likewise.
	(R_MICROMIPS_GOT_HI16, R_MICROMIPS_GOT_LO16): Likewise.
	(R_MICROMIPS_SUB, R_MICROMIPS_HIGHER): Likewise.
	(R_MICROMIPS_HIGHEST, R_MICROMIPS_CALL_HI16): Likewise.
	(R_MICROMIPS_CALL_LO16, R_MICROMIPS_SCN_DISP): Likewise.
	(R_MICROMIPS_JALR, R_MICROMIPS_HI0_LO16): Likewise.
	(R_MICROMIPS_TLS_GD, R_MICROMIPS_TLS_LDM): Likewise.
	(R_MICROMIPS_TLS_DTPREL_HI, R_MICROMIPS_TLS_DTPREL_LO): Likewise.
	(R_MICROMIPS_TLS_GOTTPREL): Likewise.
	(R_MICROMIPS_TLS_TPREL_HI16): Likewise.
	(R_MICROMIPS_TLS_TPREL_LO16): Likewise.
	(R_MICROMIPS_GPREL7_S2, R_MICROMIPS_PC23_S2): Likewise.
	(R_MICROMIPS_max): Likewise.
	(EF_MIPS_ARCH_ASE_MICROMIPS): New macro.
	(STO_MIPS_ISA, STO_MIPS_FLAGS): Likewise.
	(ELF_ST_IS_MIPS_PLT, ELF_ST_SET_MIPS_PLT): Likewise.
	(STO_MICROMIPS): Likewise.
	(ELF_ST_IS_MICROMIPS, ELF_ST_SET_MICROMIPS): Likewise.
	(ELF_ST_IS_COMPRESSED): Likewise.
	(STO_MIPS_PLT, STO_MIPS_PIC): Rework.
	(ELF_ST_IS_MIPS_PIC, ELF_ST_SET_MIPS_PIC): Likewise.
	(STO_MIPS16, ELF_ST_IS_MIPS16, ELF_ST_SET_MIPS16): Likewise.

include/opcode/
2011-02-25  Chao-ying Fu  <fu@@mips.com>
            Maciej W. Rozycki  <macro@@codesourcery.com>

	* mips.h (OP_MASK_EXTLSB, OP_SH_EXTLSB): New macros.
	(OP_MASK_STYPE, OP_SH_STYPE): Likewise.
	(OP_MASK_CODE10, OP_SH_CODE10): Likewise.
	(OP_MASK_TRAP, OP_SH_TRAP): Likewise.
	(OP_MASK_OFFSET12, OP_SH_OFFSET12): Likewise.
	(OP_MASK_OFFSET10, OP_SH_OFFSET10): Likewise.
	(OP_MASK_RS3, OP_SH_RS3): Likewise.
	(OP_MASK_MB, OP_SH_MB, OP_MASK_MC, OP_SH_MC): Likewise.
	(OP_MASK_MD, OP_SH_MD, OP_MASK_ME, OP_SH_ME): Likewise.
	(OP_MASK_MF, OP_SH_MF, OP_MASK_MG, OP_SH_MG): Likewise.
	(OP_MASK_MJ, OP_SH_MJ, OP_MASK_ML, OP_SH_ML): Likewise.
	(OP_MASK_MP, OP_SH_MP, OP_MASK_MQ, OP_SH_MQ): Likewise.
	(OP_MASK_IMMA, OP_SH_IMMA, OP_MASK_IMMB, OP_SH_IMMB): Likewise.
	(OP_MASK_IMMC, OP_SH_IMMC, OP_MASK_IMMF, OP_SH_IMMF): Likewise.
	(OP_MASK_IMMG, OP_SH_IMMG, OP_MASK_IMMH, OP_SH_IMMH): Likewise.
	(OP_MASK_IMMI, OP_SH_IMMI, OP_MASK_IMMJ, OP_SH_IMMJ): Likewise.
	(OP_MASK_IMML, OP_SH_IMML, OP_MASK_IMMM, OP_SH_IMMM): Likewise.
	(OP_MASK_IMMN, OP_SH_IMMN, OP_MASK_IMMO, OP_SH_IMMO): Likewise.
	(OP_MASK_IMMP, OP_SH_IMMP, OP_MASK_IMMQ, OP_SH_IMMQ): Likewise.
	(OP_MASK_IMMU, OP_SH_IMMU, OP_MASK_IMMW, OP_SH_IMMW): Likewise.
	(OP_MASK_IMMX, OP_SH_IMMX, OP_MASK_IMMY, OP_SH_IMMY): Likewise.
	(INSN_WRITE_GPR_S): New macro.
	(INSN2_BRANCH_DELAY_16BIT, INSN2_BRANCH_DELAY_32BIT): Likewise.
	(INSN2_READ_FPR_D): Likewise.
	(INSN2_MOD_GPR_MB, INSN2_MOD_GPR_MC): Likewise.
	(INSN2_MOD_GPR_MD, INSN2_MOD_GPR_ME): Likewise.
	(INSN2_MOD_GPR_MF, INSN2_MOD_GPR_MG): Likewise.
	(INSN2_MOD_GPR_MJ, INSN2_MOD_GPR_MP): Likewise.
	(INSN2_MOD_GPR_MQ, INSN2_MOD_SP): Likewise.
	(INSN2_READ_GPR_31, INSN2_READ_GP, INSN2_READ_PC): Likewise.
	(INSN2_UNCOND_BRANCH, INSN2_COND_BRANCH): Likewise.
	(INSN2_MOD_GPR_MHI, INSN2_MOD_GPR_MM, INSN2_MOD_GPR_MN): Likewise.
	(CPU_MICROMIPS): New macro.
	(M_BC1FL, M_BC1TL, M_BC2FL, M_BC2TL): New enum values.
	(M_BEQL, M_BGEZ, M_BGEZL, M_BGEZALL, M_BGTZ, M_BGTZL): Likewise.
	(M_BLEZ, M_BLEZL, M_BLTZ, M_BLTZL, M_BLTZALL, M_BNEL): Likewise.
	(M_CACHE_OB, M_JALS_1, M_JALS_2, M_JALS_A): Likewise.
	(M_LDC2_OB, M_LDL_OB, M_LDM_AB, M_LDM_OB): Likewise.
	(M_LDP_AB, M_LDP_OB, M_LDR_OB, M_LL_OB, M_LLD_OB): Likewise.
	(M_LWC2_OB, M_LWL_OB, M_LWM_AB, M_LWM_OB): Likewise.
	(M_LWP_AB, M_LWP_OB, M_LWR_OB): Likewise.
	(M_LWU_OB, M_PREF_OB, M_SC_OB, M_SCD_OB): Likewise.
	(M_SDC2_OB, M_SDL_OB, M_SDM_AB, M_SDM_OB): Likewise.
	(M_SDP_AB, M_SDP_OB, M_SDR_OB): Likewise.
	(M_SWC2_OB, M_SWL_OB, M_SWM_AB, M_SWM_OB): Likewise.
	(M_SWP_AB, M_SWP_OB, M_SWR_OB): Likewise.
	(MICROMIPSOP_MASK_MAJOR, MICROMIPSOP_SH_MAJOR): New macros.
	(MICROMIPSOP_MASK_IMMEDIATE, MICROMIPSOP_SH_IMMEDIATE): Likewise.
	(MICROMIPSOP_MASK_DELTA, MICROMIPSOP_SH_DELTA): Likewise.
	(MICROMIPSOP_MASK_CODE10, MICROMIPSOP_SH_CODE10): Likewise.
	(MICROMIPSOP_MASK_TRAP, MICROMIPSOP_SH_TRAP): Likewise.
	(MICROMIPSOP_MASK_SHAMT, MICROMIPSOP_SH_SHAMT): Likewise.
	(MICROMIPSOP_MASK_TARGET, MICROMIPSOP_SH_TARGET): Likewise.
	(MICROMIPSOP_MASK_EXTLSB, MICROMIPSOP_SH_EXTLSB): Likewise.
	(MICROMIPSOP_MASK_EXTMSBD, MICROMIPSOP_SH_EXTMSBD): Likewise.
	(MICROMIPSOP_MASK_INSMSB, MICROMIPSOP_SH_INSMSB): Likewise.
	(MICROMIPSOP_MASK_CODE, MICROMIPSOP_SH_CODE): Likewise.
	(MICROMIPSOP_MASK_CODE2, MICROMIPSOP_SH_CODE2): Likewise.
	(MICROMIPSOP_MASK_CACHE, MICROMIPSOP_SH_CACHE): Likewise.
	(MICROMIPSOP_MASK_SEL, MICROMIPSOP_SH_SEL): Likewise.
	(MICROMIPSOP_MASK_OFFSET12, MICROMIPSOP_SH_OFFSET12): Likewise.
	(MICROMIPSOP_MASK_3BITPOS, MICROMIPSOP_SH_3BITPOS): Likewise.
	(MICROMIPSOP_MASK_STYPE, MICROMIPSOP_SH_STYPE): Likewise.
	(MICROMIPSOP_MASK_OFFSET10, MICROMIPSOP_SH_OFFSET10): Likewise.
	(MICROMIPSOP_MASK_RS, MICROMIPSOP_SH_RS): Likewise.
	(MICROMIPSOP_MASK_RT, MICROMIPSOP_SH_RT): Likewise.
	(MICROMIPSOP_MASK_RD, MICROMIPSOP_SH_RD): Likewise.
	(MICROMIPSOP_MASK_FS, MICROMIPSOP_SH_FS): Likewise.
	(MICROMIPSOP_MASK_FT, MICROMIPSOP_SH_FT): Likewise.
	(MICROMIPSOP_MASK_FD, MICROMIPSOP_SH_FD): Likewise.
	(MICROMIPSOP_MASK_FR, MICROMIPSOP_SH_FR): Likewise.
	(MICROMIPSOP_MASK_RS3, MICROMIPSOP_SH_RS3): Likewise.
	(MICROMIPSOP_MASK_PREFX, MICROMIPSOP_SH_PREFX): Likewise.
	(MICROMIPSOP_MASK_BCC, MICROMIPSOP_SH_BCC): Likewise.
	(MICROMIPSOP_MASK_CCC, MICROMIPSOP_SH_CCC): Likewise.
	(MICROMIPSOP_MASK_COPZ, MICROMIPSOP_SH_COPZ): Likewise.
	(MICROMIPSOP_MASK_MB, MICROMIPSOP_SH_MB): Likewise.
	(MICROMIPSOP_MASK_MC, MICROMIPSOP_SH_MC): Likewise.
	(MICROMIPSOP_MASK_MD, MICROMIPSOP_SH_MD): Likewise.
	(MICROMIPSOP_MASK_ME, MICROMIPSOP_SH_ME): Likewise.
	(MICROMIPSOP_MASK_MF, MICROMIPSOP_SH_MF): Likewise.
	(MICROMIPSOP_MASK_MG, MICROMIPSOP_SH_MG): Likewise.
	(MICROMIPSOP_MASK_MH, MICROMIPSOP_SH_MH): Likewise.
	(MICROMIPSOP_MASK_MI, MICROMIPSOP_SH_MI): Likewise.
	(MICROMIPSOP_MASK_MJ, MICROMIPSOP_SH_MJ): Likewise.
	(MICROMIPSOP_MASK_ML, MICROMIPSOP_SH_ML): Likewise.
	(MICROMIPSOP_MASK_MM, MICROMIPSOP_SH_MM): Likewise.
	(MICROMIPSOP_MASK_MN, MICROMIPSOP_SH_MN): Likewise.
	(MICROMIPSOP_MASK_MP, MICROMIPSOP_SH_MP): Likewise.
	(MICROMIPSOP_MASK_MQ, MICROMIPSOP_SH_MQ): Likewise.
	(MICROMIPSOP_MASK_IMMA, MICROMIPSOP_SH_IMMA): Likewise.
	(MICROMIPSOP_MASK_IMMB, MICROMIPSOP_SH_IMMB): Likewise.
	(MICROMIPSOP_MASK_IMMC, MICROMIPSOP_SH_IMMC): Likewise.
	(MICROMIPSOP_MASK_IMMD, MICROMIPSOP_SH_IMMD): Likewise.
	(MICROMIPSOP_MASK_IMME, MICROMIPSOP_SH_IMME): Likewise.
	(MICROMIPSOP_MASK_IMMF, MICROMIPSOP_SH_IMMF): Likewise.
	(MICROMIPSOP_MASK_IMMG, MICROMIPSOP_SH_IMMG): Likewise.
	(MICROMIPSOP_MASK_IMMH, MICROMIPSOP_SH_IMMH): Likewise.
	(MICROMIPSOP_MASK_IMMI, MICROMIPSOP_SH_IMMI): Likewise.
	(MICROMIPSOP_MASK_IMMJ, MICROMIPSOP_SH_IMMJ): Likewise.
	(MICROMIPSOP_MASK_IMML, MICROMIPSOP_SH_IMML): Likewise.
	(MICROMIPSOP_MASK_IMMM, MICROMIPSOP_SH_IMMM): Likewise.
	(MICROMIPSOP_MASK_IMMN, MICROMIPSOP_SH_IMMN): Likewise.
	(MICROMIPSOP_MASK_IMMO, MICROMIPSOP_SH_IMMO): Likewise.
	(MICROMIPSOP_MASK_IMMP, MICROMIPSOP_SH_IMMP): Likewise.
	(MICROMIPSOP_MASK_IMMQ, MICROMIPSOP_SH_IMMQ): Likewise.
	(MICROMIPSOP_MASK_IMMU, MICROMIPSOP_SH_IMMU): Likewise.
	(MICROMIPSOP_MASK_IMMW, MICROMIPSOP_SH_IMMW): Likewise.
	(MICROMIPSOP_MASK_IMMX, MICROMIPSOP_SH_IMMX): Likewise.
	(MICROMIPSOP_MASK_IMMY, MICROMIPSOP_SH_IMMY): Likewise.
	(MICROMIPSOP_MASK_CODE, MICROMIPSOP_SH_CODE): Likewise.
	(MICROMIPSOP_MASK_CODE2, MICROMIPSOP_SH_CODE2): Likewise.
	(MICROMIPSOP_MASK_CACHE, MICROMIPSOP_SH_CACHE): Likewise.
	(MICROMIPSOP_MASK_CODE20, MICROMIPSOP_SH_CODE20): Likewise.
	(MICROMIPSOP_MASK_PERFREG, MICROMIPSOP_SH_PERFREG): Likewise.
	(MICROMIPSOP_MASK_CODE19, MICROMIPSOP_SH_CODE19): Likewise.
	(MICROMIPSOP_MASK_ALN, MICROMIPSOP_SH_ALN): Likewise.
	(MICROMIPSOP_MASK_VECBYTE, MICROMIPSOP_SH_VECBYTE): Likewise.
	(MICROMIPSOP_MASK_VECALIGN, MICROMIPSOP_SH_VECALIGN): Likewise.
	(MICROMIPSOP_MASK_DSPACC, MICROMIPSOP_SH_DSPACC): Likewise.
	(MICROMIPSOP_MASK_DSPACC_S, MICROMIPSOP_SH_DSPACC_S): Likewise.
	(MICROMIPSOP_MASK_DSPSFT, MICROMIPSOP_SH_DSPSFT): Likewise.
	(MICROMIPSOP_MASK_DSPSFT_7, MICROMIPSOP_SH_DSPSFT_7): Likewise.
	(MICROMIPSOP_MASK_SA3, MICROMIPSOP_SH_SA3): Likewise.
	(MICROMIPSOP_MASK_SA4, MICROMIPSOP_SH_SA4): Likewise.
	(MICROMIPSOP_MASK_IMM8, MICROMIPSOP_SH_IMM8): Likewise.
	(MICROMIPSOP_MASK_IMM10, MICROMIPSOP_SH_IMM10): Likewise.
	(MICROMIPSOP_MASK_WRDSP, MICROMIPSOP_SH_WRDSP): Likewise.
	(MICROMIPSOP_MASK_RDDSP, MICROMIPSOP_SH_RDDSP): Likewise.
	(MICROMIPSOP_MASK_BP, MICROMIPSOP_SH_BP): Likewise.
	(MICROMIPSOP_MASK_MT_U, MICROMIPSOP_SH_MT_U): Likewise.
	(MICROMIPSOP_MASK_MT_H, MICROMIPSOP_SH_MT_H): Likewise.
	(MICROMIPSOP_MASK_MTACC_T, MICROMIPSOP_SH_MTACC_T): Likewise.
	(MICROMIPSOP_MASK_MTACC_D, MICROMIPSOP_SH_MTACC_D): Likewise.
	(MICROMIPSOP_MASK_BBITIND, MICROMIPSOP_SH_BBITIND): Likewise.
	(MICROMIPSOP_MASK_CINSPOS, MICROMIPSOP_SH_CINSPOS): Likewise.
	(MICROMIPSOP_MASK_CINSLM1, MICROMIPSOP_SH_CINSLM1): Likewise.
	(MICROMIPSOP_MASK_SEQI, MICROMIPSOP_SH_SEQI): Likewise.
	(micromips_opcodes): New declaration.
	(bfd_micromips_num_opcodes): Likewise.

ld/testsuite/
2011-02-25  Catherine Moore  <clm@@codesourcery.com>
            Chao-ying Fu  <fu@@mips.com>
            Maciej W. Rozycki  <macro@@codesourcery.com>

	* lib/ld-lib.exp (run_dump_test): Support distinct assembler
	flags for the same source named multiple times.
	* ld-mips-elf/jalx-1.s: New test source.
	* ld-mips-elf/jalx-1.d: New test output.
	* ld-mips-elf/jalx-1.ld: New test linker script.
	* ld-mips-elf/jalx-2-main.s: New test source.
	* ld-mips-elf/jalx-2-ex.s: Likewise.
	* ld-mips-elf/jalx-2-printf.s: Likewise.
	* ld-mips-elf/jalx-2.dd: New test output.
	* ld-mips-elf/jalx-2.ld: New test linker script.
	* ld-mips-elf/mips16-and-micromips.d: New test.
	* ld-mips-elf/mips-elf.exp: Run the new tests

opcodes/
2011-02-25  Chao-ying Fu  <fu@@mips.com>
            Maciej W. Rozycki  <macro@@codesourcery.com>

	* micromips-opc.c: New file.
	* mips-dis.c (micromips_to_32_reg_b_map): New array.
	(micromips_to_32_reg_c_map, micromips_to_32_reg_d_map): Likewise.
	(micromips_to_32_reg_e_map, micromips_to_32_reg_f_map): Likewise.
	(micromips_to_32_reg_g_map, micromips_to_32_reg_l_map): Likewise.
	(micromips_to_32_reg_q_map): Likewise.
	(micromips_imm_b_map, micromips_imm_c_map): Likewise.
	(micromips_ase): New variable.
	(is_micromips): New function.
	(set_default_mips_dis_options): Handle microMIPS ASE.
	(print_insn_micromips): New function.
	(is_compressed_mode_p): Likewise.
	(_print_insn_mips): Handle microMIPS instructions.
	* Makefile.am (CFILES): Add micromips-opc.c.
	* configure.in (bfd_mips_arch): Add micromips-opc.lo.
	* Makefile.in: Regenerate.
	* configure: Regenerate.

	* mips-dis.c (micromips_to_32_reg_h_map): New variable.
	(micromips_to_32_reg_i_map): Likewise.
	(micromips_to_32_reg_m_map): Likewise.
	(micromips_to_32_reg_n_map): New macro.
@
text
@d559 1
a559 1
CPUDIR = $(CGENDIR)/cpu
d808 1
d1240 1
a1240 1
stamp-frv: $(CGENDEPS) $(srcdir)/../cpu/frv.cpu $(srcdir)/../cpu/frv.opc
d1242 1
a1242 1
		archfile=$(srcdir)/../cpu/frv.cpu opcfile=$(srcdir)/../cpu/frv.opc extrafiles=
d1252 3
a1254 3
stamp-iq2000: $(CGENDEPS) $(srcdir)/../cpu/iq2000.cpu \
		$(srcdir)/../cpu/iq2000.opc $(srcdir)/../cpu/iq2000m.cpu \
		$(srcdir)/../cpu/iq10.cpu
d1256 2
a1257 2
		archfile=$(srcdir)/../cpu/iq2000.cpu \
		opcfile=$(srcdir)/../cpu/iq2000.opc extrafiles=
d1261 1
a1261 1
stamp-lm32: $(CGENDEPS) $(srcdir)/../cpu/lm32.cpu $(srcdir)/../cpu/lm32.opc
d1263 2
a1264 2
		archfile=$(srcdir)/../cpu/lm32.cpu \
		opcfile=$(srcdir)/../cpu/lm32.opc \
d1269 1
a1269 1
stamp-m32c: $(CGENDEPS) $(srcdir)/../cpu/m32c.cpu $(srcdir)/../cpu/m32c.opc
d1271 2
a1272 2
		archfile=$(srcdir)/../cpu/m32c.cpu \
		opcfile=$(srcdir)/../cpu/m32c.opc extrafiles=
d1276 1
a1276 1
stamp-m32r: $(CGENDEPS) $(srcdir)/../cpu/m32r.cpu $(srcdir)/../cpu/m32r.opc
d1278 2
a1279 2
		archfile=$(srcdir)/../cpu/m32r.cpu \
		opcfile=$(srcdir)/../cpu/m32r.opc extrafiles=opinst
d1289 1
a1289 1
stamp-mt: $(CGENDEPS) $(srcdir)/../cpu/mt.cpu $(srcdir)/../cpu/mt.opc
d1291 2
a1292 2
		archfile=$(srcdir)/../cpu/mt.cpu \
		opcfile=$(srcdir)/../cpu/mt.opc extrafiles=
d1302 1
a1302 1
stamp-xc16x: $(CGENDEPS) $(srcdir)/../cpu/xc16x.cpu $(srcdir)/../cpu/xc16x.opc
d1304 2
a1305 2
		archfile=$(srcdir)/../cpu/xc16x.cpu \
		opcfile=$(srcdir)/../cpu/xc16x.opc \
@


1.185
log
@* Makefile.am (MAINTAINERCLEANFILES): Move s390-opc.tab ...
(MOSTLYCLEANFILES): ... here.
* Makefile.in: Regenerate.
@
text
@d432 1
@


1.184
log
@	* Makefile.in: Regenerate.
@
text
@d594 1
a594 1
	s390-mkopc$(EXEEXT_FOR_BUILD) z8kgen$(EXEEXT_FOR_BUILD) \
d598 1
a598 1
	$(srcdir)/ia64-asmtab.c s390-opc.tab $(srcdir)/z8k-opc.h \
@


1.183
log
@    * Makefile.am (ALL_MACHINES): Add cpu-tilegx.lo and cpu-tilepro.lo.
    (ALL_MACHINE_CFILES): Add cpu-tilegx.c and cpu-tilepro.c.
    (BFD32_BACKENDS): Add elf32-tilegx.lo, elf32-tilepro.lo,
    and elfxx-tilegx.lo.
    (BFD32_BACKENDS_CFILES): Add elf32-tilegx.c elf32-tilepro.c, and
    elfxx-tilegx.c.
    (BFD64_BACKENDS): Add elf64-tilegx.lo.
    (BFD64_BACKENDS_CFILES): Add elf64-tilegx.c.
    * Makefile.in: Regenerate.
    * arctures.c (bfd_architecture): Define bfd_arch_tilepro,
    bfd_arch_tilegx, bfd_mach_tilepro, bfd_mach_tilegx.
    (bfd_arch_info): Add bfd_tilegx_arch, bfd_tilepro_arch.
    (bfd_archures_list): Add bfd_tilegx_arch, bfd_tilepro_arch.
    bfd-in2.h: Regenerate.
    * config.bfd: Handle tilegx-*-* and tilepro-*-*.
    * configure.in: Handle bfd_elf32_tilegx_vec, bfd_elf32_tilepro_vec,
    and bfd_elf64_tilegx_vec.
    * configure: Regenerate.
    * elf-bfd.h (enum elf_target_id): Define TILEGX_ELF_DATA and
    TILEPRO_ELF_DATA.
    * libbfd.h: Regenerate.
    * reloc.c: Add BFD_RELOC_TILEPRO_{COPY, GLOB_DAT, JMP_SLOT,
    RELATIVE, BROFF_X1, JOFFLONG_X1, JOFFLONG_X1_PLT, IMM8_X0,
    IMM8_Y0, IMM8_X1, IMM8_Y1, DEST_IMM8_X1, MT_IMM15_X1, MF_IMM15_X1,
    IMM16_X0, IMM16_X1, IMM16_X0_LO, IMM16_X1_LO, IMM16_X0_HI,
    IMM16_X1_HI, IMM16_X0_HA, IMM16_X1_HA, IMM16_X0_PCREL,
    IMM16_X1_PCREL, IMM16_X0_LO_PCREL, IMM16_X1_LO_PCREL,
    IMM16_X0_HI_PCREL, IMM16_X1_HI_PCREL, IMM16_X0_HA_PCREL,
    IMM16_X1_HA_PCREL, IMM16_X0_GOT, IMM16_X1_GOT, IMM16_X0_GOT_LO,
    IMM16_X1_GOT_LO, IMM16_X0_GOT_HI, IMM16_X1_GOT_HI,
    IMM16_X0_GOT_HA, IMM16_X1_GOT_HA, MMSTART_X0, MMEND_X0,
    MMSTART_X1, MMEND_X1, SHAMT_X0, SHAMT_X1, SHAMT_Y0, SHAMT_Y1,
    IMM16_X0_TLS_GD, IMM16_X1_TLS_GD, IMM16_X0_TLS_GD_LO,
    IMM16_X1_TLS_GD_LO, IMM16_X0_TLS_GD_HI, IMM16_X1_TLS_GD_HI,
    IMM16_X0_TLS_GD_HA, IMM16_X1_TLS_GD_HA, IMM16_X0_TLS_IE,
    IMM16_X1_TLS_IE, IMM16_X0_TLS_IE_LO, IMM16_X1_TLS_IE_LO,
    IMM16_X0_TLS_IE_HI, IMM16_X1_TLS_IE_HI, IMM16_X0_TLS_IE_HA,
    IMM16_X1_TLS_IE_HA, TLS_DTPMOD32, TLS_DTPOFF32, TLS_TPOFF32}
    Add BFD_RELOC_TILEGX_{HW0, HW1, HW2, HW3, HW0_LAST, HW1_LAST,
    HW2_LAST, COPY, GLOB_DAT, JMP_SLOT, RELATIVE, BROFF_X1,
    JUMPOFF_X1, JUMPOFF_X1_PLT, IMM8_X0, IMM8_Y0, IMM8_X1, IMM8_Y1,
    DEST_IMM8_X1, MT_IMM14_X1, MF_IMM14_X1, MMSTART_X0, MMEND_X0,
    SHAMT_X0, SHAMT_X1, SHAMT_Y0, SHAMT_Y1, IMM16_X0_HW0,
    IMM16_X1_HW0, IMM16_X0_HW1, IMM16_X1_HW1, IMM16_X0_HW2,
    IMM16_X1_HW2, IMM16_X0_HW3, IMM16_X1_HW3, IMM16_X0_HW0_LAST,
    IMM16_X1_HW0_LAST, IMM16_X0_HW1_LAST, IMM16_X1_HW1_LAST,
    IMM16_X0_HW2_LAST, IMM16_X1_HW2_LAST, IMM16_X0_HW0_PCREL,
    IMM16_X1_HW0_PCREL, IMM16_X0_HW1_PCREL, IMM16_X1_HW1_PCREL,
    IMM16_X0_HW2_PCREL, IMM16_X1_HW2_PCREL, IMM16_X0_HW3_PCREL,
    IMM16_X1_HW3_PCREL, IMM16_X0_HW0_LAST_PCREL,
    IMM16_X1_HW0_LAST_PCREL, IMM16_X0_HW1_LAST_PCREL,
    IMM16_X1_HW1_LAST_PCREL, IMM16_X0_HW2_LAST_PCREL,
    IMM16_X1_HW2_LAST_PCREL, IMM16_X0_HW0_GOT, IMM16_X1_HW0_GOT,
    IMM16_X0_HW1_GOT, IMM16_X1_HW1_GOT, IMM16_X0_HW2_GOT,
    IMM16_X1_HW2_GOT, IMM16_X0_HW3_GOT, IMM16_X1_HW3_GOT,
    IMM16_X0_HW0_LAST_GOT, IMM16_X1_HW0_LAST_GOT,
    IMM16_X0_HW1_LAST_GOT, IMM16_X1_HW1_LAST_GOT,
    IMM16_X0_HW2_LAST_GOT, IMM16_X1_HW2_LAST_GOT, IMM16_X0_HW0_TLS_GD,
    IMM16_X1_HW0_TLS_GD, IMM16_X0_HW1_TLS_GD, IMM16_X1_HW1_TLS_GD,
    IMM16_X0_HW2_TLS_GD, IMM16_X1_HW2_TLS_GD, IMM16_X0_HW3_TLS_GD,
    IMM16_X1_HW3_TLS_GD, IMM16_X0_HW0_LAST_TLS_GD,
    IMM16_X1_HW0_LAST_TLS_GD, IMM16_X0_HW1_LAST_TLS_GD,
    IMM16_X1_HW1_LAST_TLS_GD, IMM16_X0_HW2_LAST_TLS_GD,
    IMM16_X1_HW2_LAST_TLS_GD, IMM16_X0_HW0_TLS_IE,
    IMM16_X1_HW0_TLS_IE, IMM16_X0_HW1_TLS_IE, IMM16_X1_HW1_TLS_IE,
    IMM16_X0_HW2_TLS_IE, IMM16_X1_HW2_TLS_IE, IMM16_X0_HW3_TLS_IE,
    IMM16_X1_HW3_TLS_IE, IMM16_X0_HW0_LAST_TLS_IE,
    IMM16_X1_HW0_LAST_TLS_IE, IMM16_X0_HW1_LAST_TLS_IE,
    IMM16_X1_HW1_LAST_TLS_IE, IMM16_X0_HW2_LAST_TLS_IE,
    IMM16_X1_HW2_LAST_TLS_IE, TLS_DTPMOD64, TLS_DTPOFF64, TLS_TPOFF64,
    TLS_DTPMOD32, TLS_DTPOFF32, TLS_TPOFF32}
    * targets.c (bfd_elf32_tilegx_vec): Declare.
    (bfd_elf32_tilepro_vec): Declare.
    (bfd_elf64_tilegx_vec): Declare.
    (bfd_target_vector): Add bfd_elf32_tilegx_vec, bfd_elf32_tilepro_vec,
    and bfd_elf64_tilegx_vec.
    * cpu-tilegx.c: New file.
    * cpu-tilepro.c: New file.
    * elf32-tilepro.h: New file.
    * elf32-tilepro.c: New file.
    * elf32-tilegx.c: New file.
    * elf32-tilegx.h: New file.
    * elf64-tilegx.c: New file.
    * elf64-tilegx.h: New file.
    * elfxx-tilegx.c: New file.
    * elfxx-tilegx.h: New file.

	* Makefile.am (TARGET_CPU_CFILES): Add config/tc-tilegx.c and
	config/tc-tilepro.c.
	(TARGET_CPU_HFILES): Add config/tc-tilegx.h and
	config/tc-tilepro.h.
	* Makefile.in: Regenerate.
	* configure.tgt (tilepro-*-*): New.
	(tilegx-*-*): Likewise.
	* config/tc-tilegx.c: New file.
	* config/tc-tilegx.h: Likewise.
	* config/tc-tilepro.h: Likewise.
	* config/tc-tilepro.c: Likewise.
	* doc/Makefile.am (CPU_DOCS): Add c-tilegx.texi and
	c-tilepro.texi.
	* doc/Makefile.in: Regenerate.
	* doc/all.texi (TILEGX): Define.
	(TILEPRO): Define.
	* doc/as.texinfo: Add Tile-Gx and TILEPro documentation.  Include
	c-tilegx.texi and c-tilepro.texi.
	* doc/c-tilegx.texi: New.
	* doc/c-tilepro.texi: New.

        * gas/tilepro/t_constants.s: New file.
	* gas/tilepro/t_constants.d: Likewise.
	* gas/tilepro/t_insns.s: Likewise.
	* gas/tilepro/tilepro.exp: Likewise.
	* gas/tilepro/t_insns.d: Likewise.
	* gas/tilegx/tilegx.exp: Likewise.
	* gas/tilegx/t_insns.d: Likewise.
	* gas/tilegx/t_insns.s: Likewise.

	* dis-asm.h (print_insn_tilegx): Declare.
	(print_insn_tilepro): Likewise.

	* tilegx.h: New file.
	* tilepro.h: New file.

	* common.h: Add EM_TILEGX.
	* tilegx.h: New file.
	* tilepro.h: New file.

	* Makefile.am (ALL_EMULATION_SOURCES): Add eelf32tilegx.c and
	eelf32tilepro.c.
	(ALL_64_EMULATION_SOURCES): Add eelf64tilegx.c.
	(eelf32tilegx.c): New target.
	(eelf32tilepro.c): Likewise.
	(eelf64tilegx.c): Likewise.
	* Makefile.in: Regenerate.
	* configure.tgt: Handle tilegx-*-* and tilepro-*-*.
	* emulparams/elf32tilegx.sh: New file.
	* emulparams/elf64tilegx.sh: New file.
	* emulparams/elf32tilepro.sh: New file.

	* ld-elf/eh5.d: Don't run on tile*.
	* ld-srec/srec.exp: xfail on tile*.
	* ld-tilegx/external.s: New file.
	* ld-tilegx/reloc.d: New file.
	* ld-tilegx/reloc.s: New file.
	* ld-tilegx/tilegx.exp: New file.
	* ld-tilepro/external.s: New file.
	* ld-tilepro/reloc.d: New file.
	* ld-tilepro/reloc.s: New file.
	* ld-tilepro/tilepro.exp: New file.

	* Makefile.am (TARGET_LIBOPCODES_CFILES): Add tilegx-dis.c,
	tilegx-opc.c, tilepro-dis.c, and tilepro-opc.c.
	* Makefile.in: Regenerate.
	* configure.in: Handle bfd_tilegx_arch and bfd_tilepro_arch.
	* configure: Regenerate.
	* disassemble.c (disassembler): Add ARCH_tilegx and ARCH_tilepro.
	* po/POTFILES.in: Regenerate.
	* tilegx-dis.c: New file.
	* tilegx-opc.c: New file.
	* tilepro-dis.c: New file.
	* tilepro-opc.c: New file.
@
text
@d855 1
d857 1
@


1.182
log
@	* Makefile.am (CLEANFILES): Add stamp-lm32.  Sort.
	* Makefile.in: Regenerate.
@
text
@d479 4
d854 2
@


1.181
log
@opcodes/
	* Makefile.am (libopcodes_a_SOURCES): New as empty.
	* Makefile.in: Regenerate.
@
text
@d548 4
a551 3
	stamp-ip2k stamp-m32c stamp-m32r stamp-fr30 stamp-frv \
	stamp-openrisc stamp-iq2000 stamp-mep stamp-mt stamp-xstormy16 stamp-xc16x\
	libopcodes.a stamp-lib dep.sed DEP DEPA DEP1 DEP2
@


1.180
log
@remove maxq-coff port
@
text
@d72 2
a73 2
libopcodes_a_SOURCES = libopcodes.c
libopcodes_a_OBJECTS = libopcodes.$(OBJEXT)
d119 1
a119 1
SOURCES = libopcodes.c $(libopcodes_la_SOURCES) \
d545 1
a768 1
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/libopcodes.Po@@am__quote@@
@


1.179
log
@bfd/
2010-05-07  Tristan Gingold  <gingold@@adacore.com>

	* Makefile.in: Regenerate with automake 1.11.1.
	* aclocal.m4: Ditto.

bfd/doc/
2010-05-07  Tristan Gingold  <gingold@@adacore.com>

	* Makefile.in: Regenerate with automake 1.11.1.

binutils/
2010-05-07  Tristan Gingold  <gingold@@adacore.com>

	* Makefile.in: Regenerate with automake 1.11.1.
	* aclocal.m4: Ditto.
	* doc/Makefile.in: Ditto.

gas/
2010-05-07  Tristan Gingold  <gingold@@adacore.com>

	* Makefile.in: Regenerate with automake 1.11.1.
	* aclocal.m4: Ditto.
	* doc/Makefile.in: Ditto.

gprof/
2010-05-07  Tristan Gingold  <gingold@@adacore.com>

	* Makefile.in: Regenerate with automake 1.11.1.
	* aclocal.m4: Ditto.

ld/
2010-05-07  Tristan Gingold  <gingold@@adacore.com>

	* Makefile.in: Regenerate with automake 1.11.1.
	* aclocal.m4: Ditto.

opcodes/
2010-05-07  Tristan Gingold  <gingold@@adacore.com>

	* Makefile.in: Regenerate with automake 1.11.1.
	* aclocal.m4: Ditto.
@
text
@a424 1
	maxq-dis.c \
a794 1
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/maxq-dis.Plo@@am__quote@@
@


1.178
log
@bfd:
	* Makefile.am (ALL_MACHINES): Add cpu-tic6x.lo.
	(ALL_MACHINES_CFILES): Add cpu-tic6x.c.
	(BFD32_BACKENDS): Add elf32-tic6x.lo.
	(BFD32_BACKENDS_CFILES): Add elf32-tic6x.c.
	* Makefile.in: Regenerate.
	* archures.c (bfd_arch_tic6x, bfd_tic6x_arch): New.
	(bfd_archures_list): Update.
	* config.bfd (tic6x-*-elf): New.
	* configure.in (bfd_elf32_tic6x_be_vec, bfd_elf32_tic6x_le_vec):
	New.
	* configure: Regenerate.
	* cpu-tic6x.c, elf32-tic6x.c: New.
	* reloc.c (BFD_RELOC_C6000_PCR_S21, BFD_RELOC_C6000_PCR_S12,
	BFD_RELOC_C6000_PCR_S10, BFD_RELOC_C6000_PCR_S7,
	BFD_RELOC_C6000_ABS_S16, BFD_RELOC_C6000_ABS_L16,
	BFD_RELOC_C6000_ABS_H16, BFD_RELOC_C6000_SBR_U15_B,
	BFD_RELOC_C6000_SBR_U15_H, BFD_RELOC_C6000_SBR_U15_W,
	BFD_RELOC_C6000_SBR_S16, BFD_RELOC_C6000_SBR_L16_B,
	BFD_RELOC_C6000_SBR_L16_H, BFD_RELOC_C6000_SBR_L16_W,
	BFD_RELOC_C6000_SBR_H16_B, BFD_RELOC_C6000_SBR_H16_H,
	BFD_RELOC_C6000_SBR_H16_W, BFD_RELOC_C6000_SBR_GOT_U15_W,
	BFD_RELOC_C6000_SBR_GOT_L16_W, BFD_RELOC_C6000_SBR_GOT_H16_W,
	BFD_RELOC_C6000_DSBT_INDEX, BFD_RELOC_C6000_PREL31,
	BFD_RELOC_C6000_COPY, BFD_RELOC_C6000_ALIGN,
	BFD_RELOC_C6000_FPHEAD, BFD_RELOC_C6000_NOCMP): New.
	* targets.c (bfd_elf32_tic6x_be_vec, bfd_elf32_tic6x_le_vec): New.
	(_bfd_target_vector): Update.
	* bfd-in2.h, libbfd.h: Regenerate.

binutils:
	* MAINTAINERS: Add self as TI C6X maintainer.
	* NEWS: Add news entry for TI C6X support.
	* readelf.c: Include elf/tic6x.h.
	(guess_is_rela): Handle EM_TI_C6000.
	(dump_relocations): Likewise.
	(get_tic6x_dynamic_type): New.
	(get_dynamic_type): Call it.
	(get_machine_flags): Handle EF_C6000_REL.
	(get_osabi_name): Handle machine-specific values only for relevant
	machines.  Handle C6X values.
	(get_tic6x_segment_type): New.
	(get_segment_type): Call it.
	(get_tic6x_section_type_name): New.
	(get_section_type_name): Call it.
	(is_32bit_abs_reloc, is_16bit_abs_reloc, is_none_reloc): Handle
	EM_TI_C6000.

gas:
	* Makefile.am (TARGET_CPU_CFILES): Add config/tc-tic6x.c.
	(TARGET_CPU_HFILES): Add config/tc-tic6x.h.
	* Makefile.in: Regenerate.
	* NEWS: Add news entry for TI C6X support.
	* app.c (do_scrub_chars): Handle "||^" for TI C6X.  Handle
	TC_PREDICATE_START_CHAR and TC_PREDICATE_END_CHAR.  Keep spaces in
	operands if TC_KEEP_OPERAND_SPACES.
	* configure.tgt (tic6x-*-*): New.
	* config/tc-ia64.h (TC_PREDICATE_START_CHAR,
	TC_PREDICATE_END_CHAR): Define.
	* config/tc-tic6x.c, config/tc-tic6x.h: New.
	* doc/Makefile.am (CPU_DOCS): Add c-tic6x.texi.
	* doc/Makefile.in: Regenerate.
	* doc/all.texi (TIC6X): Define.
	* doc/as.texinfo: Add TI C6X documentation.  Include c-tic6x.texi.
	* doc/c-tic6x.texi: New.

gas/testsuite:
	* gas/tic6x: New directory and testcases.

include:
	* dis-asm.h (print_insn_tic6x): Declare.

include/elf:
	* common.h (ELFOSABI_C6000_ELFABI, ELFOSABI_C6000_LINUX): Define.
	* tic6x.h: New.

include/opcode:
	* tic6x-control-registers.h, tic6x-insn-formats.h,
	tic6x-opcode-table.h, tic6x.h: New.

ld:
	* Makefile.am (ALL_EMULATIONS): Add eelf32_tic6x_be.o and
	eelf32_tic6x_le.o.
	(eelf32_tic6x_be.c, eelf32_tic6x_le.c): New.
	* NEWS: Add news entry for TI C6X support.
	* configure.tgt (tic6x-*-*): New.
	* emulparams/elf32_tic6x_be.sh, emulparams/elf32_tic6x_le.sh: New.

ld/testsuite:
	* ld-elf/flags1.d, ld-elf/merge.d: XFAIL for tic6x-*-*.
	* ld-elf/sec-to-seg.exp: Set B_test_same_seg to 0 for tic6x-*-*.
	* ld-tic6x: New directory and testcases.

opcodes:
	* Makefile.am (TARGET_LIBOPCODES_CFILES): Add tic6x-dis.c.
	* Makefile.in: Regenerate.
	* configure.in (bfd_tic6x_arch): New.
	* configure: Regenerate.
	* disassemble.c (ARCH_tic6x): Define if ARCH_all.
	(disassembler): Handle TI C6X.
	* tic6x-dis.c: New.
@
text
@d1 1
a1 1
# Makefile.in generated by automake 1.11 from Makefile.am.
d926 1
a926 1
	@@failcom='exit 1'; \
d951 1
a951 1
	@@failcom='exit 1'; \
@


1.177
log
@Sync Libtool from GCC.

/:
	* libtool.m4: Sync from git Libtool.
	* ltmain.sh: Likewise.
	* ltoptions.m4: Likewise.
	* ltversion.m4: Likewise.
	* lt~obsolete.m4: Likewise.

sim/iq2000/:
	* configure: Regenerate.

sim/d10v/:
	* configure: Regenerate.

sim/m32r/:
	* configure: Regenerate.

sim/frv/:
	* configure: Regenerate.

sim/:
	* avr/configure: Regenerate.
	* cris/configure: Regenerate.
	* microblaze/configure: Regenerate.

sim/h8300/:
	* configure: Regenerate.

sim/mn10300/:
	* configure: Regenerate.

sim/erc32/:
	* configure: Regenerate.

sim/arm/:
	* configure: Regenerate.

sim/m68hc11/:
	* configure: Regenerate.

sim/lm32/:
	* configure: Regenerate.

sim/sh64/:
	* configure: Regenerate.

sim/v850/:
	* configure: Regenerate.

sim/cr16/:
	* configure: Regenerate.

sim/moxie/:
	* configure: Regenerate.

sim/m32c/:
	* configure: Regenerate.

sim/mips/:
	* configure: Regenerate.

sim/mcore/:
	* configure: Regenerate.

sim/sh/:
	* configure: Regenerate.

gprof/:
	* Makefile.in: Regenerate.
	* configure: Regenerate.

opcodes/:
	* Makefile.in: Regenerate.
	* configure: Regenerate.

gas/:
	* Makefile.in: Regenerate.
	* configure: Regenerate.
	* doc/Makefile.in: Regenerate.

ld/:
	* configure: Regenerate.

gdb/testsuite/:
	* gdb.cell/configure: Regenerate.

binutils/:
	* Makefile.in: Regenerate.
	* configure: Regenerate.
	* doc/Makefile.in: Regenerate.

bfd/:
	* Makefile.in: Regenerate.
	* configure: Regenerate.

bfd/doc/:
	* Makefile.in: Regenerate.
@
text
@d477 1
d848 1
@


1.176
log
@Add -Wshadow to the gcc command line options used when compiling the binutils.
Fix up all warnings generated by the addition of this switch.
@
text
@a266 1
lt_ECHO = @@lt_ECHO@@
@


1.175
log
@	opcodes/
	* Makefile.am (stamp-xc16x): Use ../cpu/xc16x.cpu instead of
	../cgen/cpu.
	* Makefile.in: Regenerate.

	cgen/
	* cpu/xc16x.cpu: Delete, use copy in ../cpu.
	* cpu/xc16x.opc: Ditto.
@
text
@d48 1
@


1.174
log
@	* Makefile.am (HFILES): Remove cgen-ops.h and cgen-types.h.
@
text
@d1291 1
a1291 1
stamp-xc16x: $(CGENDEPS) $(CPUDIR)/xc16x.cpu $(CPUDIR)/xc16x.opc
d1293 3
a1295 1
		archfile=$(CPUDIR)/xc16x.cpu opcfile=$(CPUDIR)/xc16x.opc extrafiles=
@


1.173
log
@	* Makefile.am (CGEN_CPUS): Add iq2000, lm32.
	(FR30_DEPS, FRV_DEPS, IQ2000_DEPS): Move so all cgen *_DEPS are
	sorted alphabetically.
	(stamp-fr30, stamp-frv, stamp-iq2000, stamp-xc16x): Move so all cgen
	stamp-* rules are sorted alphabetically.
	* Makefile.in: Regenerate.
@
text
@a312 1
	cgen-ops.h cgen-types.h \
@


1.172
log
@        * opc2c.c: Include "libiberty.h" and <errno.h>.
        (orig_filename): Constify.
        (dump_lines): Fix line number directive.
        (main): Set orig_filename to basename of input file.  Use
        xstrerror.

        * Makefile.am (rx-dis.lo): Remove explicit dependencies.
        ($(srcdir)/rx-decode.c): Use @@MAINT@@.  Use $(EXEEXT_FOR_BUILD)
        instead of $(EXEEXT).
        (opc2c$(EXEEXT_FOR_BUILD)): Renamed from opc2c$(EXEEXT) and use
        $(LINK_FOR_BUILD).  Link with libiberty.
        (MOSTLYCLEANFILES): Add opc2c$(EXEEXT_FOR_BUILD).
        (MAINTAINERCLEANFILES): Add $(srcdir)/rx-decode.c.
        * Makefile.in: Regenerated.
        * rx-decode.c: Regenerated.
@
text
@d563 5
a567 1
CGEN_CPUS = fr30 frv ip2k m32c m32r mep mt openrisc xc16x xstormy16
d570 2
a577 4
@@CGEN_MAINT_FALSE@@FR30_DEPS = 
@@CGEN_MAINT_TRUE@@FR30_DEPS = stamp-fr30
@@CGEN_MAINT_FALSE@@FRV_DEPS = 
@@CGEN_MAINT_TRUE@@FRV_DEPS = stamp-frv
a583 2
@@CGEN_MAINT_FALSE@@IQ2000_DEPS = 
@@CGEN_MAINT_TRUE@@IQ2000_DEPS = stamp-iq2000
d1221 13
d1240 9
a1270 12
$(srcdir)/fr30-desc.h $(srcdir)/fr30-desc.c $(srcdir)/fr30-opc.h $(srcdir)/fr30-opc.c $(srcdir)/fr30-ibld.c $(srcdir)/fr30-asm.c $(srcdir)/fr30-dis.c: $(FR30_DEPS)
	@@true
stamp-fr30: $(CGENDEPS) $(CPUDIR)/fr30.cpu $(CPUDIR)/fr30.opc
	$(MAKE) run-cgen arch=fr30 prefix=fr30 options= \
		archfile=$(CPUDIR)/fr30.cpu opcfile=$(CPUDIR)/fr30.opc extrafiles=

$(srcdir)/frv-desc.h $(srcdir)/frv-desc.c $(srcdir)/frv-opc.h $(srcdir)/frv-opc.c $(srcdir)/frv-ibld.c $(srcdir)/frv-asm.c $(srcdir)/frv-dis.c: $(FRV_DEPS)
	@@true
stamp-frv: $(CGENDEPS) $(srcdir)/../cpu/frv.cpu $(srcdir)/../cpu/frv.opc
	$(MAKE) run-cgen arch=frv prefix=frv options= \
		archfile=$(srcdir)/../cpu/frv.cpu opcfile=$(srcdir)/../cpu/frv.opc extrafiles=

d1290 1
a1290 1
$(srcdir)/iq2000-desc.h $(srcdir)/iq2000-desc.c $(srcdir)/iq2000-opc.h $(srcdir)/iq2000-opc.c $(srcdir)/iq2000-ibld.c $(srcdir)/iq2000-asm.c $(srcdir)/iq2000-dis.c: $(IQ2000_DEPS)
d1292 3
a1294 6
stamp-iq2000: $(CGENDEPS) $(srcdir)/../cpu/iq2000.cpu \
		$(srcdir)/../cpu/iq2000.opc $(srcdir)/../cpu/iq2000m.cpu \
		$(srcdir)/../cpu/iq10.cpu
	$(MAKE) run-cgen arch=iq2000 prefix=iq2000 options= \
		archfile=$(srcdir)/../cpu/iq2000.cpu \
		opcfile=$(srcdir)/../cpu/iq2000.opc extrafiles=
a1301 6
$(srcdir)/xc16x-desc.h $(srcdir)/xc16x-desc.c $(srcdir)/xc16x-opc.h $(srcdir)/xc16x-opc.c $(srcdir)/xc16x-ibld.c $(srcdir)/xc16x-asm.c $(srcdir)/xc16x-dis.c: $(XC16X_DEPS)
	@@true
stamp-xc16x: $(CGENDEPS) $(CPUDIR)/xc16x.cpu $(CPUDIR)/xc16x.opc
	$(MAKE) run-cgen arch=xc16x prefix=xc16x options= \
		archfile=$(CPUDIR)/xc16x.cpu opcfile=$(CPUDIR)/xc16x.opc extrafiles=

@


1.171
log
@Revert the last change.
@
text
@d589 2
a590 1
	s390-mkopc$(EXEEXT_FOR_BUILD) z8kgen$(EXEEXT_FOR_BUILD)
d593 2
a594 1
	$(srcdir)/ia64-asmtab.c s390-opc.tab $(srcdir)/z8k-opc.h
a1288 8
$(srcdir)/rx-decode.c : $(srcdir)/rx-decode.opc opc2c$(EXEEXT)
	./opc2c$(EXEEXT) $(srcdir)/rx-decode.opc > $(srcdir)/rx-decode.c

rx-dis.lo : rx-dis.c sysdep.h config.h $(BFD_H) $(INCDIR)/opcode/rx.h

opc2c$(EXEEXT) : $(srcdir)/opc2c.c
	gcc $(srcdir)/opc2c.c -o opc2c$(EXEEXT)

d1332 9
@


1.170
log
@2009-10-03  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.am ($(srcdir)/rx-decode.c): Add @@MAINT@@.
	(rx-dis.lo): Remove a space.
	(pc2c$(EXEEXT)): Remove a space. Use $(LINK_FOR_BUILD) instead
	of gcc.
	(MAINTAINERCLEANFILES): Add $(srcdir)/rx-decode.c.
	* Makefile.in: Regenerated.
@
text
@d592 1
a592 2
	$(srcdir)/ia64-asmtab.c $(srcdir)/rx-decode.c s390-opc.tab \
	$(srcdir)/z8k-opc.h
d1287 1
a1287 1
$(srcdir)/rx-decode.c: @@MAINT@@ $(srcdir)/rx-decode.opc opc2c$(EXEEXT)
d1290 1
a1290 1
rx-dis.lo: rx-dis.c sysdep.h config.h $(BFD_H) $(INCDIR)/opcode/rx.h
d1292 2
a1293 2
opc2c$(EXEEXT): $(srcdir)/opc2c.c
	$(LINK_FOR_BUILD) $(srcdir)/opc2c.c -o opc2c$(EXEEXT)
@


1.169
log
@bfd
        * Makefile.am (ALL_MACHINES): Add cpu-rx.lo.
        (ALL_MACHINES_CFILES): Add cpu-rx.c.
        (BFD32_BACKENDS): Add elf32-rx.lo.
        (BFD32_BACKENDS_CFILES): Add elf32-rx.c.
        * archures.c (bfd_architecture): Add bfd_arch_rx and bfd_mach_rx.
        Export bfd_rx_arch.
        (bfd_archures_list): Add bfd_rx_arch.
        * config.bfd: Add entry for rx-*-elf.
        * configure.in: Add entries for bfd_elf32_rx_le_vec and
        bfd_elf32_rx_be_vec.
        * reloc.c: Add RX relocations.
        * targets.c: Add RX target vectors.
        * Makefile.in: Regenerate.
        * bfd-in2.h: Regenerate.
        * configure: Regenerate.
        * libbfd.h: Regenerate.
        * cpu-rx.c: New file.
        * elf32-rx.c: New file.

binutils
        * readelf.c: Add support for RX target.
        * MAINTAINERS: Add DJ and NickC as maintainers for RX.

gas
        * Makefile.am: Add RX target.
        * configure.in: Likewise.
        * configure.tgt: Likewise.
        * read.c (do_repeat_with_expander): New function.
        * read.h: Provide a prototype for do_repeat_with_expander.
        * doc/Makefile.am: Add RX target documentation.
        * doc/all.texi: Likewise.
        * doc/as.texinfo: Likewise.
        * Makefile.in: Regenerate.
        * NEWS: Mention support for RX architecture.
        * configure: Regenerate.
        * doc/Makefile.in: Regenerate.
        * config/rx-defs.h: New file.
        * config/rx-parse.y: New file.
        * config/tc-rx.h: New file.
        * config/tc-rx.c: New file.
        * doc/c-rx.texi: New file.

gas/testsuite
        * gas/rx: New directory.
        * gas/rx/*: New set of test cases.
        * gas/elf/section2.e-rx: New expected output file.
        * gas/all/gas.exp: Add support for RX target.
        * gas/elf/elf.exp: Likewise.
        * gas/lns/lns.exp: Likewise.
        * gas/macros/macros.exp: Likewise.

include
        * dis-asm.h: Add prototype for print_insn_rx.

include/elf
        * rx.h: New file.

include/opcode
        * rx.h: New file.

ld
        * Makefile.am: Add rules to build RX emulation.
        * configure.tgt: Likewise.
        * NEWS: Mention support for RX architecture.
        * Makefile.in: Regenerate.
        * emulparams/elf32rx.sh: New file.
        * emultempl/rxelf.em: New file.

opcodes
        * Makefile.am: Add RX files.
        * configure.in: Add support for RX target.
        * disassemble.c: Likewise.
        * Makefile.in: Regenerate.
        * configure: Regenerate.
        * opc2c.c: New file.
        * rx-decode.c: New file.
        * rx-decode.opc: New file.
        * rx-dis.c: New file.
@
text
@d592 2
a593 1
	$(srcdir)/ia64-asmtab.c s390-opc.tab $(srcdir)/z8k-opc.h
d1288 1
a1288 1
$(srcdir)/rx-decode.c : $(srcdir)/rx-decode.opc opc2c$(EXEEXT)
d1291 1
a1291 1
rx-dis.lo : rx-dis.c sysdep.h config.h $(BFD_H) $(INCDIR)/opcode/rx.h
d1293 2
a1294 2
opc2c$(EXEEXT) : $(srcdir)/opc2c.c
	gcc $(srcdir)/opc2c.c -o opc2c$(EXEEXT)
@


1.168
log
@	* configure.in (BUILD_LIBS, BUILD_LIB_DEPS): Define and subst.
	* configure: Regenerate.
	* Makefile.am (LIBIBERTY, BUILD_LIBIBERTY, BUILD_LIBINTL): Delete.
	(BUILD_LIBS, BUILD_LIB_DEPS): Define.  Use..
	(i386-gen, ia64-gen, z8kgen): ..here.
	* Makefile.in: Regenerate.
@
text
@d461 2
d829 2
d1287 8
@


1.167
log
@	* Makefile.am (BUILD_LIBINTL): New variable.
	(i386-gen$(EXEEXT_FOR_BUILD)): Use it.
	(ia64-gen$(EXEEXT_FOR_BUILD)): And here.
	(z8kgen$(EXEEXT_FOR_BUILD)): And here.
	* Makefile.in: Regenerate.
@
text
@d143 2
a310 7
# This is where libiberty lives.
LIBIBERTY = ../libiberty/libiberty.a
# This is only true when not cross-compiling.
BUILD_LIBIBERTY = $(LIBIBERTY)
# And so is this.
BUILD_LIBINTL = $(LIBINTL)

d1295 2
a1296 2
i386-gen$(EXEEXT_FOR_BUILD): i386-gen.o $(BUILD_LIBIBERTY) $(BUILD_LIBINTL)
	$(LINK_FOR_BUILD) i386-gen.o $(BUILD_LIBIBERTY) $(BUILD_LIBINTL)
d1312 2
a1313 2
ia64-gen$(EXEEXT_FOR_BUILD): ia64-gen.o $(BUILD_LIBIBERTY) $(BUILD_LIBINTL)
	$(LINK_FOR_BUILD) ia64-gen.o $(BUILD_LIBIBERTY) $(BUILD_LIBINTL)
d1334 2
a1335 2
z8kgen$(EXEEXT_FOR_BUILD): z8kgen.o $(BUILD_LIBIBERTY) $(BUILD_LIBINTL)
	$(LINK_FOR_BUILD) z8kgen.o $(BUILD_LIBIBERTY) $(BUILD_LIBINTL)
@


1.167.2.1
log
@	* configure.in (BUILD_LIBS, BUILD_LIB_DEPS): Define and subst.
	* configure: Regenerate.
	* Makefile.am (LIBIBERTY, BUILD_LIBIBERTY, BUILD_LIBINTL): Delete.
	(BUILD_LIBS, BUILD_LIB_DEPS): Define.  Use..
	(i386-gen, ia64-gen, z8kgen): ..here.
	* Makefile.in: Regenerate.
@
text
@a142 2
BUILD_LIBS = @@BUILD_LIBS@@
BUILD_LIB_DEPS = @@BUILD_LIB_DEPS@@
d309 7
d1300 2
a1301 2
i386-gen$(EXEEXT_FOR_BUILD): i386-gen.o $(BUILD_LIB_DEPS)
	$(LINK_FOR_BUILD) i386-gen.o $(BUILD_LIBS)
d1317 2
a1318 2
ia64-gen$(EXEEXT_FOR_BUILD): ia64-gen.o $(BUILD_LIB_DEPS)
	$(LINK_FOR_BUILD) ia64-gen.o $(BUILD_LIBS)
d1339 2
a1340 2
z8kgen$(EXEEXT_FOR_BUILD): z8kgen.o $(BUILD_LIB_DEPS)
	$(LINK_FOR_BUILD) z8kgen.o $(BUILD_LIBS)
@


1.167.2.2
log
@Regenerate using automake 1.11.1
@
text
@d1 1
a1 1
# Makefile.in generated by automake 1.11.1 from Makefile.am.
d919 1
a919 1
	@@fail= failcom='exit 1'; \
d944 1
a944 1
	@@fail= failcom='exit 1'; \
@


1.166
log
@binutils/

2009-08-28  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.am (sysinfo$(EXEEXT_FOR_BUILD)): Replace
	CFLAGS/LDFLAGS with CFLAGS_FOR_BUILD/LDFLAGS_FOR_BUILD.
	(syslex.o): Likewise.
	(sysinfo.o): Likewise.
	(bin2c$(EXEEXT_FOR_BUILD)): Likewise.
	* Makefile.in: Regenerated.

opcodes/

2009-08-28  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.am (COMPILE_FOR_BUILD): Remove BUILD_CPPFLAGS.
	Replace BUILD_CFLAGS with CFLAGS_FOR_BUILD.
	(LINK_FOR_BUILD): Replace BUILD_CFLAGS/BUILD_LDFLAGS with
	CFLAGS_FOR_BUILD/LDFLAGS_FOR_BUILD.
	* Makefile.in: Regenerated.
@
text
@d313 2
d1300 2
a1301 2
i386-gen$(EXEEXT_FOR_BUILD): i386-gen.o $(BUILD_LIBIBERTY)
	$(LINK_FOR_BUILD) i386-gen.o $(BUILD_LIBIBERTY)
d1317 2
a1318 2
ia64-gen$(EXEEXT_FOR_BUILD): ia64-gen.o $(BUILD_LIBIBERTY)
	$(LINK_FOR_BUILD) ia64-gen.o $(BUILD_LIBIBERTY)
d1339 2
a1340 2
z8kgen$(EXEEXT_FOR_BUILD): z8kgen.o $(BUILD_LIBIBERTY)
	$(LINK_FOR_BUILD) z8kgen.o $(BUILD_LIBIBERTY)
@


1.165
log
@Do not create $(bfdlibdir) and $(bfdincludedir) if !INSTALL_LIBBFD.

opcodes/:
	* Makefile.am (bfdlibdir, bfdincludedir): Move definition ...
	[INSTALL_LIBBFD]: ... here, ...
	[INSTALL_LIBBFD]: ... and empty overrides here.
	[!INSTALL_LIBBFD]: (rpath_bfdlibdir): New variable.
	[!INSTALL_LIBBFD] (libbfd_la_LDFLAGS): Use it.
	* Makefile.in: Regenerate.
	* configure: Regenerate.

bfd/:
	* acinclude.m4 (AM_INSTALL_LIBBFD): Call AM_SUBST_NOTMAKE for
	bfdlibdir and bfdincludedir.
	* Makefile.am (bfdlibdir, bfdincludedir): Move definition ...
	[INSTALL_LIBBFD]: ... here, ...
	[INSTALL_LIBBFD]: ... and empty overrides here.
	[!INSTALL_LIBBFD]: (rpath_bfdlibdir): New variable.
	[!INSTALL_LIBBFD] (libbfd_la_LDFLAGS): Use it.
	* Makefile.in: Regenerate.
	* configure: Regenerate.

bfd/doc/:
	* Makefile.in: Regenerate.
@
text
@d294 4
a297 1
	$(BUILD_CPPFLAGS) $(BUILD_CFLAGS)
a298 1
LINK_FOR_BUILD = $(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@@
@


1.164
log
@Build cleanups in opcodes: cross-compilation and generators.

opcodes/:
	* Makefile.am (SUBDIRS): Build '.' before 'po'.
	(COMPILE_FOR_BUILD, LINK_FOR_BUILD, BUILD_LIBIBERTY)
	(MOSTLYCLEANFILES, MAINTAINERCLEANFILES): New variables.
	(i386-gen$(EXEEXT_FOR_BUILD)): Renamed from i386-gen, rewrite
	using *BUILD variables, depend upon $(BUILD_LIBIBERTY).
	(i386-gen.o): New rule.
	($(srcdir)/i386-init.h): Adjust.
	(i386-opc.lo): Depend on $(srcdir)/i386-tbl.h.
	(ia64-gen$(EXEEXT_FOR_BUILD)): Rename from ia64-gen, adjust likewise.
	(ia64-gen.o): New rule.
	(ia64_asmtab_deps): New variable.
	($(srcdir)/ia64-asmtab.c): Use it; adjust likewise.
	(ia64-opc.lo): Depend on $(srcdir)/ia64-asmtab.c.
	(s390-mkopc$(EXEEXT_FOR_BUILD)): Rename from s390-mkopc, adjust
	likewise.
	(s390-opc.tab): Adjust.
	(z8kgen$(EXEEXT_FOR_BUILD), z8kgen.o, $(srcdir)/z8k-opc.h): New
	rules.
	(z8k-dis.lo): Depend on $(srcdir)/z8k-opc.h.
	* Makefile.in: Regenerate.
	* z8kgen.c (gas): Avoid '/*' in comment.
	* z8k-opc.h (func): Regenerate.
@
text
@d40 1
a40 1
@@INSTALL_LIBBFD_FALSE@@am__append_1 = -rpath $(bfdlibdir)
d232 5
a236 2
bfdincludedir = @@bfdincludedir@@
bfdlibdir = @@bfdlibdir@@
d301 1
@


1.163
log
@More build fixes in opcodes

opcodes/:
	* Makefile.am (TARGET_LIBOPCODES_CFILES): New variable, taken
	from $(CFILES), sorted, with dis-buf.c, dis-init.c, disassemble.c,
	i386-gen.c, ia64-opc-a.c, ia64-opc-b.c, ia64-opc-f.c, ia64-opc-i.c,
	ia64-opc-m.c, ia64-opc-d.c, ia64-gen.c, ia64-asmtab.c removed, and
	msp430-dis.c added.
	(LIBOPCODES_CFILES): New variable, adding to
	TARGET_LIBOPCODES_CFILES also non-target library sources.
	(CFILES): Factorize based on $(LIBOPCODES_CFILES), adding generator
	files.
	(ALL_MACHINES): Factorize based on $(TARGET_LIBOPCODES_CFILES).
	(EXTRA_libopcodes_la_SOURCES): Use $(LIBOPCODES_CFILES).
	* Makefile.in: Regenerate.
	* po/POTFILES.in: Regenerate.
@
text
@d284 3
a286 1
SUBDIRS = po
d290 4
d305 2
d583 12
d1066 1
d1078 1
d1292 8
a1299 2
i386-gen: i386-gen.o
	$(LINK) i386-gen.o $(LIBIBERTY)
d1304 2
a1305 2
$(srcdir)/i386-init.h: @@MAINT@@ i386-gen i386-opc.tbl i386-reg.tbl
	./i386-gen --srcdir $(srcdir)
d1307 1
a1307 2
ia64-gen: ia64-gen.o
	$(LINK) ia64-gen.o $(LIBIBERTY)
d1309 2
a1310 4
# Don't wrap the line below, as @@MAINT@@ can be expanded to '#'.
# Some make versions don't handle line continuations in comments.
$(srcdir)/ia64-asmtab.c: @@MAINT@@ ia64-gen ia64-ic.tbl ia64-raw.tbl ia64-waw.tbl ia64-war.tbl
	./ia64-gen --srcdir $(srcdir) > $@@
d1312 8
a1319 2
s390-mkopc: s390-mkopc.c
	$(CC_FOR_BUILD) -o s390-mkopc $(srcdir)/s390-mkopc.c
d1321 7
a1327 2
s390-opc.tab: s390-mkopc s390-opc.txt
	./s390-mkopc < $(srcdir)/s390-opc.txt > s390-opc.tab
d1331 11
@


1.162
log
@Cleanups in binutils makefiles.

ld/:
	* Makefile.am (bin_PROGRAMS): Renamed from ...
	(noinst_PROGRAMS): ... this.
	(transform): Override, including the renaming of ld-new to ld.
	(install-exec-local): Installation of ld in $(bindir) not needed
	here any more.
	(AM_CPPFLAGS): Renamed from ...
	(INCLUDES): ... this.
	(MAINTAINERCLEANFILES): Add ld.1.
	* Makefile.in: Regenerate.

gold/:
	* Makefile.am (AM_CPPFLAGS): Renamed from ...
	(INCLUDES): ... this.
	* testsuite/Makefile.am (AUTOMAKE_OPTIONS): Add -Wno-portability.
	(AM_CPPFLAGS): Renamed from ...
	(INCLUDE): ... this.
	* Makefile.in, testsuite/Makefile.in: Regenerate.

bfd/:
	* Makefile.am (libbfd_la_LDFLAGS): Initialize early, to allow
	appending.
	[INSTALL_LIBBFD] (bfdlib_LTLIBRARIES, bfdinclude_HEADERS): Set
	only in this condition.
	[!INSTALL_LIBBFD] (noinst_LTLIBRARIES, libbfd_la_LDFLAGS): New,
	to build but not install libbfd.la in this condition.
	(install-bfdlibLTLIBRARIES, uninstall-bfdlibLTLIBRARIES)
	(install_libbfd, install_libbfd): Remove.
	* Makefile.in: Regenerate.

binutils/:
	* Makefile.am (AM_CPPFLAGS): Renamed from ...
	(INCLUDES): ... this.
	(bin2c$(EXEEXT_FOR_BUILD): Adjust rule.
	(installcheck-local): Renamed from ...
	(installcheck): ... this.
	* Makefile.in: Regenerate.

gas/:
	* Makefile.am (YFLAGS): Remove, not needed any more.
	(AM_CPPFLAGS): Renamed from ...
	(INCLUDES): ... this.
	* Makefile.in: Regenerate.

gprof/:
	* Makefile.am (AM_CPPFLAGS): Renamed from ...
	(INCLUDES): ... this.
	* Makefile.in: Regenerate.

opcodes/:
	* Makefile.am (libopcodes_la_LDFLAGS): Initialize early.
	[INSTALL_LIBBFD] (bfdlib_LTLIBRARIES): Set only in this condition.
	[INSTALL_LIBBFD] (bfdinclude_DATA): New.
	[!INSTALL_LIBBFD] (noinst_LTLIBRARIES): New.
	[!INSTALL_LIBBFD] (libopcodes_la_LDFLAGS): Ensure libopcodes.la
	is built shared even if it is not to be installed.
	(install-bfdlibLTLIBRARIES,uninstall-bfdlibLTLIBRARIES)
	(install_libopcodes, uninstall_libopcodes): Remove.
	(AM_CPPFLAGS): Renamed from ...
	(INCLUDES): ... this.
	* Makefile.in: Regenerate.
@
text
@d332 3
a334 2
# C source files that correspond to .o's.
CFILES = \
d338 1
a339 1
	arc-ext.c \
a357 3
	dis-buf.c \
	dis-init.c \
	disassemble.c \
a367 2
	moxie-dis.c \
	moxie-opc.c \
a374 1
	i386-gen.c \
a377 6
	ia64-opc-a.c \
	ia64-opc-b.c \
	ia64-opc-f.c \
	ia64-opc-i.c \
	ia64-opc-m.c \
	ia64-opc-d.c \
a378 2
	ia64-gen.c \
	ia64-asmtab.c \
d395 4
d422 1
a423 1
	microblaze-dis.c \
a425 4
	m10200-dis.c \
	m10200-opc.c \
	m10300-dis.c \
	m10300-opc.c \
d428 3
d450 1
a450 1
	s390-mkopc.c \
a451 1
	s390-dis.c \
d483 24
a506 1
	z8k-dis.c \
d509 1
a509 151
ALL_MACHINES = \
	alpha-dis.lo \
	alpha-opc.lo \
	arc-dis.lo \
	arc-opc.lo \
	arc-ext.lo \
	arm-dis.lo \
	avr-dis.lo \
	bfin-dis.lo \
	cgen-asm.lo \
	cgen-bitset.lo \
	cgen-dis.lo \
	cgen-opc.lo \
	cr16-dis.lo \
	cr16-opc.lo \
	cris-dis.lo \
	cris-opc.lo \
	crx-dis.lo \
	crx-opc.lo \
	d10v-dis.lo \
	d10v-opc.lo \
	d30v-dis.lo \
	d30v-opc.lo \
	dlx-dis.lo \
	fr30-asm.lo \
	fr30-desc.lo \
	fr30-dis.lo \
	fr30-ibld.lo \
	fr30-opc.lo \
	frv-asm.lo \
	frv-desc.lo \
	frv-dis.lo \
	frv-ibld.lo \
	frv-opc.lo \
	moxie-dis.lo \
	moxie-opc.lo \
	h8300-dis.lo \
	h8500-dis.lo \
	hppa-dis.lo \
	i386-dis.lo \
	i386-opc.lo \
	i370-dis.lo \
	i370-opc.lo \
	i860-dis.lo \
	i960-dis.lo \
	ia64-dis.lo \
	ia64-opc.lo \
	ip2k-asm.lo \
	ip2k-desc.lo \
	ip2k-dis.lo \
	ip2k-ibld.lo \
	ip2k-opc.lo \
	iq2000-asm.lo \
	iq2000-desc.lo \
	iq2000-dis.lo \
	iq2000-ibld.lo \
	iq2000-opc.lo \
	lm32-asm.lo \
	lm32-desc.lo \
	lm32-dis.lo \
	lm32-ibld.lo \
	lm32-opc.lo \
	lm32-opinst.lo \
	m32c-asm.lo \
	m32c-desc.lo \
	m32c-dis.lo \
	m32c-ibld.lo \
	m32c-opc.lo \
	m32r-asm.lo \
	m32r-desc.lo \
	m32r-dis.lo \
	m32r-ibld.lo \
	m32r-opc.lo \
	m32r-opinst.lo \
	m68hc11-dis.lo \
	m68hc11-opc.lo \
	m68k-dis.lo \
	m68k-opc.lo \
	m88k-dis.lo \
	m10200-dis.lo \
	m10200-opc.lo \
	m10300-dis.lo \
	m10300-opc.lo \
	maxq-dis.lo \
	mcore-dis.lo \
	mep-asm.lo \
	mep-desc.lo \
	mep-dis.lo \
	mep-ibld.lo \
	mep-opc.lo \
	mips-dis.lo \
	microblaze-dis.lo \
	mips-opc.lo \
	mips16-opc.lo \
	mmix-dis.lo \
	mmix-opc.lo \
	msp430-dis.lo \
	mt-asm.lo \
	mt-desc.lo \
	mt-dis.lo \
	mt-ibld.lo \
	mt-opc.lo \
	ns32k-dis.lo \
	openrisc-asm.lo \
	openrisc-desc.lo \
	openrisc-dis.lo \
	openrisc-ibld.lo \
	openrisc-opc.lo \
	or32-dis.lo \
	or32-opc.lo \
	pdp11-dis.lo \
	pdp11-opc.lo \
	pj-dis.lo \
	pj-opc.lo \
	ppc-dis.lo \
	ppc-opc.lo \
	s390-dis.lo \
	s390-opc.lo \
	score-dis.lo \
	score7-dis.lo \
	sh-dis.lo \
	sh64-dis.lo \
	sh64-opc.lo \
	sparc-dis.lo \
	sparc-opc.lo \
	spu-dis.lo \
	spu-opc.lo \
	tic30-dis.lo \
	tic4x-dis.lo \
	tic54x-dis.lo \
	tic54x-opc.lo \
	tic80-dis.lo \
	tic80-opc.lo \
	v850-dis.lo \
	v850-opc.lo \
	vax-dis.lo \
	w65-dis.lo \
	xc16x-asm.lo \
	xc16x-desc.lo \
	xc16x-dis.lo \
	xc16x-ibld.lo \
	xc16x-opc.lo \
	xstormy16-asm.lo \
	xstormy16-desc.lo \
	xstormy16-dis.lo \
	xstormy16-ibld.lo \
	xstormy16-opc.lo \
	xtensa-dis.lo \
	z80-dis.lo \
	z8k-dis.lo

d526 1
a526 1
EXTRA_libopcodes_la_SOURCES = $(CFILES)
a726 1
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/i386-gen.Plo@@am__quote@@
a729 1
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/ia64-asmtab.Plo@@am__quote@@
a730 7
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/ia64-gen.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/ia64-opc-a.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/ia64-opc-b.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/ia64-opc-d.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/ia64-opc-f.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/ia64-opc-i.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/ia64-opc-m.Plo@@am__quote@@
d784 1
a804 1
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/s390-mkopc.Plo@@am__quote@@
a837 1
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/z8kgen.Plo@@am__quote@@
@


1.161
log
@dependency tracking in opcodes

opcodes/:
	* Makefile.am (AUTOMAKE_OPTIONS): Remove 1.9 and cygnus, add
	1.11, foreign, no-dist.
	(MKDEP, m32c_opc_h): Remove variables.
	(disassemble.lo): Rewrite using automake-style dependency
	tracking rules; only list the dependency upon the primary source
	file, but no included headers.
	(m32c-asm.lo, m32c-desc.lo, m32c-dis.lo, m32c-ibld.lo, m32c-opc.lo)
	(i386-gen.o, ia64-gen.o): Remove dependency statements.
	(EXTRA_libopcodes_la_SOURCES): New variable, list $(CFILES) to
	ensure all dependency fragments are included in the Makefile.
	(s390-opc.lo): Depend on s390-opc.tab.
	(DEP, DEP1, dep.sed, dep, dep-in, dep-am): Remove rules.
	(mkdep section): Remove.
	* Makefile.in: Regenerate.
	* po/POTFILES.in: Regenerate.
@
text
@d19 1
d40 1
d94 3
a96 2
am__installdirs = "$(DESTDIR)$(bfdlibdir)"
LTLIBRARIES = $(bfdlib_LTLIBRARIES)
d103 2
d127 1
d288 5
a292 1
bfdlib_LTLIBRARIES = libopcodes.la
d653 1
a653 1
INCLUDES = -I. -I$(srcdir) -I../bfd -I$(INCDIR) -I$(BFDDIR) @@HDEFINES@@ @@INCINTL@@
a662 1
libopcodes_la_LDFLAGS = -release `cat ../bfd/libtool-soversion` @@SHARED_LDFLAGS@@
d774 22
d805 9
d815 1
a815 1
	$(libopcodes_la_LINK) -rpath $(bfdlibdir) $(libopcodes_la_OBJECTS) $(libopcodes_la_LIBADD) $(LIBS)
d1016 20
d1173 1
a1173 1
all-am: Makefile $(LIBRARIES) $(LTLIBRARIES) config.h
d1176 1
a1176 1
	for dir in "$(DESTDIR)$(bfdlibdir)"; do \
d1208 1
a1208 1
	clean-noinstLIBRARIES mostlyclean-am
d1229 1
a1229 1
install-data-am: install-bfdlibLTLIBRARIES
d1277 1
a1277 1
uninstall-am: uninstall-bfdlibLTLIBRARIES
d1285 14
a1298 13
	clean-noinstLIBRARIES ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-libtool distclean-tags dvi dvi-am html html-am info \
	info-am install install-am install-bfdlibLTLIBRARIES \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-bfdlibLTLIBRARIES
a1321 24
install-bfdlibLTLIBRARIES: @@INSTALL_LIBBFD_TRUE@@install_libopcodes
	@@$(NORMAL_INSTALL)

uninstall-bfdlibLTLIBRARIES: @@INSTALL_LIBBFD_TRUE@@uninstall_libopcodes
	@@$(NORMAL_UNINSTALL)

.PHONY: install_libopcodes uninstall_libopcodes
install_libopcodes: $(bfdlib_LTLIBRARIES)
	$(mkinstalldirs) $(DESTDIR)$(bfdlibdir)
	$(mkinstalldirs) $(DESTDIR)$(bfdincludedir)
	@@list='$(bfdlib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo "$(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(bfdlibdir)/$$p"; \
	    $(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(bfdlibdir)/$$p; \
	  else :; fi; \
	done
	$(INSTALL_DATA) $(INCDIR)/dis-asm.h $(DESTDIR)$(bfdincludedir)/dis-asm.h

uninstall_libopcodes:
	list='$(bfdlib_LTLIBRARIES)'; for p in $$list; do \
	  $(LIBTOOL)  --mode=uninstall rm -f $(DESTDIR)$(bfdlibdir)/$$p; \
	done
	rm -f $(DESTDIR)$(bfdincludedir)/dis-asm.h

@


1.160
log
@Cleanups after the update to Autoconf 2.64, Automake 1.11.

/:
	* README-maintainer-mode: Point directly to upstream locations
	for autoconf, automake, libtool, gettext, instead of copies on
	sources.redhat.com.  Document required versions.
	* configure.ac: Do not substitute datarootdir, htmldir,
	pdfdir, docdir.  Do not process --with-datarootdir,
	--with-htmldir, --with-pdfdir, --with-docdir.
	* configure: Regenerate.

gdb/:
	* CONTRIBUTE: Bump documented Autoconf version.
	* configure.ac: Do not substitute datarootdir, htmldir,
	pdfdir, docdir.  Do not process --with-datarootdir,
	--with-htmldir, --with-pdfdir, --with-docdir.
	* configure: Regenerate.

gdb/doc/:
	* gdbint.texinfo (Releasing GDB): Point to
	README-maintainer-mode file for required autoconf version.
	* configure.ac: Do not substitute datarootdir, htmldir,
	pdfdir, docdir.  Do not process --with-datarootdir,
	--with-htmldir, --with-pdfdir, --with-docdir.
	* configure: Regenerate.

gprof/:
	* Makefile.am (pdf__strip_dir, install-pdf, install-pdf-am)
	(install-pdf-recursive, html__strip_dir, install-html)
	(install-html-am, install-html-recursive): Remove.
	* Makefile.in: Regenerate.

opcodes/:
	* Makefile.am (install-pdf, install-html): Remove.
	* Makefile.in: Regenerate.

gas/:
	* Makefile.am (install-pdf, install-pdf-recursive, install-html)
	(install-html-recursive): Remove.
	* Makefile.in: Regenerate.
	* doc/Makefile.am (pdf__strip_dir, install-pdf, install-pdf-am)
	(html__strip_dir, install-html, install-html-am): Remove.
	* doc/Makefile.in: Regenerate.

ld/:
	* Makefile.am (pdf__strip_dir, install-pdf, install-pdf-am)
	(install-pdf-recursive, html__strip_dir, install-html)
	(install-html-am, install-html-recursive): Remove.
	* Makefile.in: Regenerate.

binutils/:
	* Makefile.am (install-pdf, install-pdf-recursive, install-html)
	(install-html-recursive): Remove.
	* Makefile.in: Regenerate.
	* doc/Makefile.am (pdf__strip_dir, install-pdf, install-pdf-am)
	(html__strip_dir, install-html, install-html-am): Remove.
	* doc/Makefile.in: Regenerate.

bfd/:
	* Makefile.am (datarootdir, docdir, htmldor, pdfdir)
	(install-pdf, install-pdf-recursive, install-html)
	(install-html-recursive): Remove.
	* Makefile.in: Regenerate.

bfd/doc/:
	* Makefile.am (pdf__strip_dir, install-pdf, install-pdf-am)
	(html__strip_dir, install-html, install-html-am): Remove.
	* Makefile.in: Regenerate.
@
text
@d43 1
a43 1
	$(top_srcdir)/po/Make-in
d101 3
a103 2
depcomp =
am__depfiles_maybe =
d113 2
a114 1
SOURCES = libopcodes.c $(libopcodes_la_SOURCES)
d276 1
a276 1
AUTOMAKE_OPTIONS = 1.9 cygnus
a280 1
MKDEP = gcc -MM
d654 2
a703 1
m32c_opc_h = m32c-opc.h cgen-types.h cgen-ops.h
d783 164
d948 5
a952 1
	$(COMPILE) -c $<
d955 5
a959 1
	$(COMPILE) -c `$(CYGPATH_W) '$<'`
d962 5
a966 1
	$(LTCOMPILE) -c -o $@@ $<
d1111 1
a1111 1
check-am:
d1152 1
d1200 1
d1240 6
a1245 2
disassemble.lo: disassemble.c $(INCDIR)/dis-asm.h
	$(LIBTOOL) --mode=compile $(COMPILE) -c @@archdefs@@ $(srcdir)/disassemble.c
a1320 17
m32c-asm.lo: m32c-asm.c sysdep.h config.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h m32c-desc.h \
  $(INCDIR)/opcode/cgen.h $(m32c_opc_h) opintl.h
m32c-desc.lo: m32c-desc.c sysdep.h config.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h m32c-desc.h \
  $(INCDIR)/opcode/cgen.h $(m32c_opc_h) opintl.h
m32c-dis.lo: m32c-dis.c sysdep.h config.h $(INCDIR)/dis-asm.h \
  $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h m32c-desc.h $(INCDIR)/opcode/cgen.h \
  $(m32c_opc_h) opintl.h
m32c-ibld.lo: m32c-ibld.c sysdep.h config.h $(INCDIR)/dis-asm.h \
  $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h m32c-desc.h $(INCDIR)/opcode/cgen.h \
  $(m32c_opc_h) opintl.h
m32c-opc.lo: m32c-opc.c sysdep.h config.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h m32c-desc.h \
  $(INCDIR)/opcode/cgen.h $(m32c_opc_h)
a1383 2
i386-gen.o: i386-gen.c i386-opc.h $(srcdir)/../include/opcode/i386.h

a1392 3
ia64-gen.o: ia64-gen.c ia64-opc.c ia64-opc-a.c ia64-opc-b.c ia64-opc-f.c \
  ia64-opc-i.c ia64-opc-m.c ia64-opc-d.c ia64-opc.h

d1404 2
d1407 5
a1411 1827
	$(LIBTOOL) --mode=compile $(COMPILE) -c @@archdefs@@ $<

# This dependency stuff is copied from BFD.

DEP: dep.sed $(CFILES) $(HFILES) config.h
	rm -f DEP1
	$(MAKE) MKDEP="$(MKDEP)" DEP1
	echo '# IF YOU PUT ANYTHING HERE IT WILL GO AWAY' >> DEP1
	if grep ' /' DEP1 > /dev/null 2> /dev/null; then \
	  echo 'make DEP failed!'; exit 1; \
	else \
	  mv -f DEP1 $@@; \
	fi

DEP1: $(CFILES)
	echo '# DO NOT DELETE THIS LINE -- mkdep uses it.' > DEP2
	echo '# DO NOT PUT ANYTHING AFTER THIS LINE, IT WILL GO AWAY.' >> DEP2
	for f in $?; do \
	  $(MKDEP) $(INCLUDES) $(CFLAGS) $$f > DEPA; \
	  sed -n -e '1s/\.o: .*/.lo: \\/p' -e q < DEPA >> DEP2; \
	  sed -e '1s/.*: //' -f dep.sed < DEPA | \
	    LC_ALL=C sort | LC_ALL=C uniq | \
	    sed -e 's/^[AB]/  /' -e '$$s/ \\$$//' >> DEP2; \
	done
	rm -f DEPA
	mv -f DEP2 $@@

dep.sed: dep-in.sed config.status
	sed <$(srcdir)/dep-in.sed >dep.sed	\
		-e 's!@@BFD_H@@!$(BFD_H)!'	\
		-e 's!@@INCDIR@@!$(INCDIR)!'	\
		-e 's!@@BFDDIR@@!$(BFDDIR)!'	\
		-e 's!@@SRCDIR@@!$(srcdir)!'	\
		-e 's!@@TOPDIR@@!'`echo $(srcdir) | sed -e s,/opcodes$$,,`'!'

dep: DEP
	sed -e '/^..DO NOT DELETE THIS LINE/,$$d' < Makefile > tmp-Makefile
	cat DEP >> tmp-Makefile
	$(srcdir)/../move-if-change tmp-Makefile Makefile

dep-in: DEP
	sed -e '/^..DO NOT DELETE THIS LINE/,$$d' < $(srcdir)/Makefile.in > tmp-Makefile.in
	cat DEP >> tmp-Makefile.in
	$(srcdir)/../move-if-change tmp-Makefile.in $(srcdir)/Makefile.in

dep-am: DEP
	sed -e '/^..DO NOT DELETE THIS LINE/,$$d' < $(srcdir)/Makefile.am > tmp-Makefile.am
	cat DEP >> tmp-Makefile.am
	$(srcdir)/../move-if-change tmp-Makefile.am $(srcdir)/Makefile.am

.PHONY: dep dep-in dep-am

# What appears below is generated by a hacked mkdep using gcc -MM.

# DO NOT DELETE THIS LINE -- mkdep uses it.
# DO NOT PUT ANYTHING AFTER THIS LINE, IT WILL GO AWAY.
alpha-dis.lo: \
  alpha-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/alpha.h \
  $(INCDIR)/symcat.h \
  config.h \
  sysdep.h
alpha-opc.lo: \
  alpha-opc.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/alpha.h \
  $(INCDIR)/symcat.h \
  config.h \
  opintl.h \
  sysdep.h
arc-dis.lo: \
  arc-dis.c \
  $(BFDDIR)/elf-bfd.h \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/bfdlink.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/elf/arc.h \
  $(INCDIR)/elf/common.h \
  $(INCDIR)/elf/external.h \
  $(INCDIR)/elf/internal.h \
  $(INCDIR)/elf/reloc-macros.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/arc.h \
  $(INCDIR)/symcat.h \
  arc-dis.h \
  arc-ext.h \
  opintl.h
arc-opc.lo: \
  arc-opc.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/arc.h \
  $(INCDIR)/symcat.h \
  config.h \
  opintl.h \
  sysdep.h
arc-ext.lo: \
  arc-ext.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/symcat.h \
  arc-ext.h \
  config.h \
  sysdep.h
arm-dis.lo: \
  arm-dis.c \
  $(BFDDIR)/elf-bfd.h \
  $(BFDDIR)/libcoff.h \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/bfdlink.h \
  $(INCDIR)/coff/internal.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/elf/arm.h \
  $(INCDIR)/elf/common.h \
  $(INCDIR)/elf/external.h \
  $(INCDIR)/elf/internal.h \
  $(INCDIR)/elf/reloc-macros.h \
  $(INCDIR)/floatformat.h \
  $(INCDIR)/opcode/arm.h \
  $(INCDIR)/safe-ctype.h \
  $(INCDIR)/symcat.h \
  config.h \
  opintl.h \
  sysdep.h
avr-dis.lo: \
  avr-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/avr.h \
  $(INCDIR)/symcat.h \
  config.h \
  opintl.h \
  sysdep.h
bfin-dis.lo: \
  bfin-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/bfin.h \
  $(INCDIR)/symcat.h
cgen-asm.lo: \
  cgen-asm.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/safe-ctype.h \
  $(INCDIR)/symcat.h \
  config.h \
  opintl.h \
  sysdep.h
cgen-bitset.lo: \
  cgen-bitset.c \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h
cgen-dis.lo: \
  cgen-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h \
  config.h \
  sysdep.h
cgen-opc.lo: \
  cgen-opc.c \
  $(BFD_H) \
  $(INCDIR)/alloca-conf.h \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/safe-ctype.h \
  $(INCDIR)/symcat.h \
  config.h \
  sysdep.h
cr16-dis.lo: \
  cr16-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cr16.h \
  $(INCDIR)/symcat.h \
  config.h \
  sysdep.h
cr16-opc.lo: \
  cr16-opc.c \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cr16.h \
  $(INCDIR)/symcat.h
cris-dis.lo: \
  cris-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cris.h \
  $(INCDIR)/symcat.h \
  config.h \
  sysdep.h
cris-opc.lo: \
  cris-opc.c \
  $(INCDIR)/opcode/cris.h
crx-dis.lo: \
  crx-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/crx.h \
  $(INCDIR)/symcat.h \
  config.h \
  sysdep.h
crx-opc.lo: \
  crx-opc.c \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/crx.h \
  $(INCDIR)/symcat.h
d10v-dis.lo: \
  d10v-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/d10v.h \
  $(INCDIR)/symcat.h \
  config.h \
  sysdep.h
d10v-opc.lo: \
  d10v-opc.c \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/d10v.h \
  config.h \
  sysdep.h
d30v-dis.lo: \
  d30v-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/d30v.h \
  $(INCDIR)/symcat.h \
  config.h \
  opintl.h \
  sysdep.h
d30v-opc.lo: \
  d30v-opc.c \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/d30v.h \
  config.h \
  sysdep.h
dlx-dis.lo: \
  dlx-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/dlx.h \
  $(INCDIR)/symcat.h \
  config.h \
  sysdep.h
dis-buf.lo: \
  dis-buf.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/symcat.h \
  config.h \
  opintl.h \
  sysdep.h
dis-init.lo: \
  dis-init.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/symcat.h \
  config.h \
  sysdep.h
disassemble.lo: \
  disassemble.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/symcat.h \
  config.h \
  sysdep.h
fr30-asm.lo: \
  fr30-asm.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/safe-ctype.h \
  $(INCDIR)/symcat.h \
  $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h \
  config.h \
  fr30-desc.h \
  fr30-opc.h \
  opintl.h \
  sysdep.h
fr30-desc.lo: \
  fr30-desc.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h \
  $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h \
  config.h \
  fr30-desc.h \
  fr30-opc.h \
  opintl.h \
  sysdep.h
fr30-dis.lo: \
  fr30-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h \
  config.h \
  fr30-desc.h \
  fr30-opc.h \
  opintl.h \
  sysdep.h
fr30-ibld.lo: \
  fr30-ibld.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/safe-ctype.h \
  $(INCDIR)/symcat.h \
  config.h \
  fr30-desc.h \
  fr30-opc.h \
  opintl.h \
  sysdep.h
fr30-opc.lo: \
  fr30-opc.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h \
  config.h \
  fr30-desc.h \
  fr30-opc.h \
  sysdep.h
frv-asm.lo: \
  frv-asm.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/safe-ctype.h \
  $(INCDIR)/symcat.h \
  $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h \
  config.h \
  frv-desc.h \
  frv-opc.h \
  opintl.h \
  sysdep.h
frv-desc.lo: \
  frv-desc.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h \
  $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h \
  config.h \
  frv-desc.h \
  frv-opc.h \
  opintl.h \
  sysdep.h
frv-dis.lo: \
  frv-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h \
  config.h \
  frv-desc.h \
  frv-opc.h \
  opintl.h \
  sysdep.h
frv-ibld.lo: \
  frv-ibld.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/safe-ctype.h \
  $(INCDIR)/symcat.h \
  config.h \
  frv-desc.h \
  frv-opc.h \
  opintl.h \
  sysdep.h
frv-opc.lo: \
  frv-opc.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/elf/frv.h \
  $(INCDIR)/elf/reloc-macros.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h \
  config.h \
  frv-desc.h \
  frv-opc.h \
  sysdep.h
moxie-dis.lo: \
  moxie-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/moxie.h \
  $(INCDIR)/symcat.h \
  config.h \
  sysdep.h
moxie-opc.lo: \
  moxie-opc.c \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/moxie.h \
  config.h \
  sysdep.h
h8300-dis.lo: \
  h8300-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/h8300.h \
  $(INCDIR)/symcat.h \
  config.h \
  opintl.h \
  sysdep.h
h8500-dis.lo: \
  h8500-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/symcat.h \
  config.h \
  h8500-opc.h \
  opintl.h \
  sysdep.h
hppa-dis.lo: \
  hppa-dis.c \
  $(BFDDIR)/libhppa.h \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/hppa.h \
  $(INCDIR)/symcat.h \
  config.h \
  sysdep.h
i370-dis.lo: \
  i370-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/i370.h \
  $(INCDIR)/symcat.h \
  config.h \
  sysdep.h
i370-opc.lo: \
  i370-opc.c \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/i370.h \
  config.h \
  sysdep.h
i386-dis.lo: \
  i386-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/i386.h \
  $(INCDIR)/symcat.h \
  config.h \
  opintl.h \
  sysdep.h
i386-opc.lo: \
  i386-opc.c \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/i386.h \
  config.h \
  i386-opc.h \
  i386-tbl.h \
  sysdep.h
i386-gen.lo: \
  i386-gen.c \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/getopt.h \
  $(INCDIR)/hashtab.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/i386.h \
  $(INCDIR)/safe-ctype.h \
  config.h \
  i386-opc.h \
  sysdep.h
i860-dis.lo: \
  i860-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/i860.h \
  $(INCDIR)/symcat.h
i960-dis.lo: \
  i960-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/symcat.h \
  config.h \
  sysdep.h
ia64-dis.lo: \
  ia64-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/ia64.h \
  $(INCDIR)/symcat.h
ia64-opc-a.lo: \
  ia64-opc-a.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/ia64.h \
  $(INCDIR)/symcat.h \
  ia64-opc.h
ia64-opc-b.lo: \
  ia64-opc-b.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/ia64.h \
  $(INCDIR)/symcat.h \
  ia64-opc.h
ia64-opc-f.lo: \
  ia64-opc-f.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/ia64.h \
  $(INCDIR)/symcat.h \
  ia64-opc.h
ia64-opc-i.lo: \
  ia64-opc-i.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/ia64.h \
  $(INCDIR)/symcat.h \
  ia64-opc.h
ia64-opc-m.lo: \
  ia64-opc-m.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/ia64.h \
  $(INCDIR)/symcat.h \
  ia64-opc.h
ia64-opc-d.lo: \
  ia64-opc-d.c
ia64-opc.lo: \
  ia64-opc.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/ia64.h \
  $(INCDIR)/symcat.h \
  config.h \
  ia64-asmtab.c \
  ia64-asmtab.h \
  sysdep.h
ia64-gen.lo: \
  ia64-gen.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/getopt.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/ia64.h \
  $(INCDIR)/safe-ctype.h \
  $(INCDIR)/symcat.h \
  config.h \
  ia64-opc-a.c \
  ia64-opc-b.c \
  ia64-opc-d.c \
  ia64-opc-f.c \
  ia64-opc-i.c \
  ia64-opc-m.c \
  ia64-opc-x.c \
  ia64-opc.h \
  sysdep.h
ia64-asmtab.lo: \
  ia64-asmtab.c
ip2k-asm.lo: \
  ip2k-asm.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/safe-ctype.h \
  $(INCDIR)/symcat.h \
  $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h \
  config.h \
  ip2k-desc.h \
  ip2k-opc.h \
  opintl.h \
  sysdep.h
ip2k-desc.lo: \
  ip2k-desc.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h \
  $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h \
  config.h \
  ip2k-desc.h \
  ip2k-opc.h \
  opintl.h \
  sysdep.h
ip2k-dis.lo: \
  ip2k-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h \
  config.h \
  ip2k-desc.h \
  ip2k-opc.h \
  opintl.h \
  sysdep.h
ip2k-ibld.lo: \
  ip2k-ibld.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/safe-ctype.h \
  $(INCDIR)/symcat.h \
  config.h \
  ip2k-desc.h \
  ip2k-opc.h \
  opintl.h \
  sysdep.h
ip2k-opc.lo: \
  ip2k-opc.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/safe-ctype.h \
  $(INCDIR)/symcat.h \
  config.h \
  ip2k-desc.h \
  ip2k-opc.h \
  sysdep.h
iq2000-asm.lo: \
  iq2000-asm.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/safe-ctype.h \
  $(INCDIR)/symcat.h \
  $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h \
  config.h \
  iq2000-desc.h \
  iq2000-opc.h \
  opintl.h \
  sysdep.h
iq2000-desc.lo: \
  iq2000-desc.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h \
  $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h \
  config.h \
  iq2000-desc.h \
  iq2000-opc.h \
  opintl.h \
  sysdep.h
iq2000-dis.lo: \
  iq2000-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h \
  config.h \
  iq2000-desc.h \
  iq2000-opc.h \
  opintl.h \
  sysdep.h
iq2000-ibld.lo: \
  iq2000-ibld.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/safe-ctype.h \
  $(INCDIR)/symcat.h \
  config.h \
  iq2000-desc.h \
  iq2000-opc.h \
  opintl.h \
  sysdep.h
iq2000-opc.lo: \
  iq2000-opc.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h \
  config.h \
  iq2000-desc.h \
  iq2000-opc.h \
  sysdep.h
lm32-asm.lo: \
  lm32-asm.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/safe-ctype.h \
  $(INCDIR)/symcat.h \
  $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h \
  config.h \
  lm32-desc.h \
  lm32-opc.h \
  opintl.h \
  sysdep.h
lm32-desc.lo: \
  lm32-desc.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h \
  $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h \
  config.h \
  lm32-desc.h \
  lm32-opc.h \
  opintl.h \
  sysdep.h
lm32-dis.lo: \
  lm32-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h \
  config.h \
  lm32-desc.h \
  lm32-opc.h \
  opintl.h \
  sysdep.h
lm32-ibld.lo: \
  lm32-ibld.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/safe-ctype.h \
  $(INCDIR)/symcat.h \
  config.h \
  lm32-desc.h \
  lm32-opc.h \
  opintl.h \
  sysdep.h
lm32-opc.lo: \
  lm32-opc.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h \
  config.h \
  lm32-desc.h \
  lm32-opc.h \
  sysdep.h
lm32-opinst.lo: \
  lm32-opinst.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h \
  config.h \
  lm32-desc.h \
  lm32-opc.h \
  sysdep.h
m32c-asm.lo: \
  m32c-asm.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/safe-ctype.h \
  $(INCDIR)/symcat.h \
  $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h \
  ../bfd/bfd_stdint.h \
  cgen-ops.h \
  cgen-types.h \
  config.h \
  m32c-desc.h \
  m32c-opc.h \
  opintl.h \
  sysdep.h
m32c-desc.lo: \
  m32c-desc.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h \
  $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h \
  ../bfd/bfd_stdint.h \
  cgen-ops.h \
  cgen-types.h \
  config.h \
  m32c-desc.h \
  m32c-opc.h \
  opintl.h \
  sysdep.h
m32c-dis.lo: \
  m32c-dis.c \
  $(BFDDIR)/elf-bfd.h \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/bfdlink.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/elf/common.h \
  $(INCDIR)/elf/external.h \
  $(INCDIR)/elf/internal.h \
  $(INCDIR)/elf/m32c.h \
  $(INCDIR)/elf/reloc-macros.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h \
  ../bfd/bfd_stdint.h \
  cgen-ops.h \
  cgen-types.h \
  config.h \
  m32c-desc.h \
  m32c-opc.h \
  opintl.h \
  sysdep.h
m32c-ibld.lo: \
  m32c-ibld.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/safe-ctype.h \
  $(INCDIR)/symcat.h \
  ../bfd/bfd_stdint.h \
  cgen-ops.h \
  cgen-types.h \
  config.h \
  m32c-desc.h \
  m32c-opc.h \
  opintl.h \
  sysdep.h
m32c-opc.lo: \
  m32c-opc.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h \
  ../bfd/bfd_stdint.h \
  cgen-ops.h \
  cgen-types.h \
  config.h \
  m32c-desc.h \
  m32c-opc.h \
  sysdep.h
m32r-asm.lo: \
  m32r-asm.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/safe-ctype.h \
  $(INCDIR)/symcat.h \
  $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h \
  config.h \
  m32r-desc.h \
  m32r-opc.h \
  opintl.h \
  sysdep.h
m32r-desc.lo: \
  m32r-desc.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h \
  $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h \
  config.h \
  m32r-desc.h \
  m32r-opc.h \
  opintl.h \
  sysdep.h
m32r-dis.lo: \
  m32r-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h \
  config.h \
  m32r-desc.h \
  m32r-opc.h \
  opintl.h \
  sysdep.h
m32r-ibld.lo: \
  m32r-ibld.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/safe-ctype.h \
  $(INCDIR)/symcat.h \
  config.h \
  m32r-desc.h \
  m32r-opc.h \
  opintl.h \
  sysdep.h
m32r-opc.lo: \
  m32r-opc.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h \
  config.h \
  m32r-desc.h \
  m32r-opc.h \
  sysdep.h
m32r-opinst.lo: \
  m32r-opinst.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h \
  config.h \
  m32r-desc.h \
  m32r-opc.h \
  sysdep.h
m68hc11-dis.lo: \
  m68hc11-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/m68hc11.h \
  $(INCDIR)/symcat.h
m68hc11-opc.lo: \
  m68hc11-opc.c \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/m68hc11.h
m68k-dis.lo: \
  m68k-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/floatformat.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/m68k.h \
  $(INCDIR)/symcat.h \
  config.h \
  opintl.h \
  sysdep.h
m68k-opc.lo: \
  m68k-opc.c \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/m68k.h \
  config.h \
  sysdep.h
m88k-dis.lo: \
  m88k-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/m88k.h \
  $(INCDIR)/symcat.h \
  config.h \
  opintl.h \
  sysdep.h
maxq-dis.lo: \
  maxq-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/maxq.h \
  $(INCDIR)/symcat.h \
  config.h \
  sysdep.h
mcore-dis.lo: \
  mcore-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/symcat.h \
  config.h \
  mcore-opc.h \
  sysdep.h
mep-asm.lo: \
  mep-asm.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/elf/mep.h \
  $(INCDIR)/elf/reloc-macros.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/safe-ctype.h \
  $(INCDIR)/symcat.h \
  $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h \
  config.h \
  mep-desc.h \
  mep-opc.h \
  opintl.h \
  sysdep.h
mep-desc.lo: \
  mep-desc.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h \
  $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h \
  config.h \
  mep-desc.h \
  mep-opc.h \
  opintl.h \
  sysdep.h
mep-dis.lo: \
  mep-dis.c \
  $(BFDDIR)/elf-bfd.h \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/bfdlink.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/elf/common.h \
  $(INCDIR)/elf/external.h \
  $(INCDIR)/elf/internal.h \
  $(INCDIR)/elf/mep.h \
  $(INCDIR)/elf/reloc-macros.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h \
  config.h \
  mep-desc.h \
  mep-opc.h \
  opintl.h \
  sysdep.h
mep-ibld.lo: \
  mep-ibld.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/safe-ctype.h \
  $(INCDIR)/symcat.h \
  config.h \
  mep-desc.h \
  mep-opc.h \
  opintl.h \
  sysdep.h
mep-opc.lo: \
  mep-opc.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/elf/mep.h \
  $(INCDIR)/elf/reloc-macros.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h \
  config.h \
  mep-desc.h \
  mep-opc.h \
  sysdep.h
microblaze-dis.lo: \
  microblaze-dis.c \
  microblaze-opc.h \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h 
mips-dis.lo: \
  mips-dis.c \
  $(BFDDIR)/elf-bfd.h \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/bfdlink.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/elf/common.h \
  $(INCDIR)/elf/external.h \
  $(INCDIR)/elf/internal.h \
  $(INCDIR)/elf/mips.h \
  $(INCDIR)/elf/reloc-macros.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/mips.h \
  $(INCDIR)/symcat.h \
  config.h \
  opintl.h \
  sysdep.h
mips-opc.lo: \
  mips-opc.c \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/mips.h \
  config.h \
  sysdep.h
mips16-opc.lo: \
  mips16-opc.c \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/mips.h \
  config.h \
  sysdep.h
m10200-dis.lo: \
  m10200-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/mn10200.h \
  $(INCDIR)/symcat.h \
  config.h \
  opintl.h \
  sysdep.h
m10200-opc.lo: \
  m10200-opc.c \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/mn10200.h \
  config.h \
  sysdep.h
m10300-dis.lo: \
  m10300-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/mn10300.h \
  $(INCDIR)/symcat.h \
  config.h \
  opintl.h \
  sysdep.h
m10300-opc.lo: \
  m10300-opc.c \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/mn10300.h \
  config.h \
  sysdep.h
mmix-dis.lo: \
  mmix-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/mmix.h \
  $(INCDIR)/symcat.h \
  opintl.h
mmix-opc.lo: \
  mmix-opc.c \
  $(INCDIR)/opcode/mmix.h \
  $(INCDIR)/symcat.h
mt-asm.lo: \
  mt-asm.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/safe-ctype.h \
  $(INCDIR)/symcat.h \
  $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h \
  config.h \
  mt-desc.h \
  mt-opc.h \
  opintl.h \
  sysdep.h
mt-desc.lo: \
  mt-desc.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h \
  $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h \
  config.h \
  mt-desc.h \
  mt-opc.h \
  opintl.h \
  sysdep.h
mt-dis.lo: \
  mt-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h \
  config.h \
  mt-desc.h \
  mt-opc.h \
  opintl.h \
  sysdep.h
mt-ibld.lo: \
  mt-ibld.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/safe-ctype.h \
  $(INCDIR)/symcat.h \
  config.h \
  mt-desc.h \
  mt-opc.h \
  opintl.h \
  sysdep.h
mt-opc.lo: \
  mt-opc.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/safe-ctype.h \
  $(INCDIR)/symcat.h \
  config.h \
  mt-desc.h \
  mt-opc.h \
  sysdep.h
ns32k-dis.lo: \
  ns32k-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/ns32k.h \
  $(INCDIR)/symcat.h \
  config.h \
  opintl.h \
  sysdep.h
openrisc-asm.lo: \
  openrisc-asm.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/safe-ctype.h \
  $(INCDIR)/symcat.h \
  $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h \
  config.h \
  openrisc-desc.h \
  openrisc-opc.h \
  opintl.h \
  sysdep.h
openrisc-desc.lo: \
  openrisc-desc.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h \
  $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h \
  config.h \
  openrisc-desc.h \
  openrisc-opc.h \
  opintl.h \
  sysdep.h
openrisc-dis.lo: \
  openrisc-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h \
  config.h \
  openrisc-desc.h \
  openrisc-opc.h \
  opintl.h \
  sysdep.h
openrisc-ibld.lo: \
  openrisc-ibld.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/safe-ctype.h \
  $(INCDIR)/symcat.h \
  config.h \
  openrisc-desc.h \
  openrisc-opc.h \
  opintl.h \
  sysdep.h
openrisc-opc.lo: \
  openrisc-opc.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h \
  config.h \
  openrisc-desc.h \
  openrisc-opc.h \
  sysdep.h
or32-dis.lo: \
  or32-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/or32.h \
  $(INCDIR)/safe-ctype.h \
  $(INCDIR)/symcat.h
or32-opc.lo: \
  or32-opc.c \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/or32.h \
  $(INCDIR)/safe-ctype.h
pdp11-dis.lo: \
  pdp11-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/pdp11.h \
  $(INCDIR)/symcat.h \
  config.h \
  sysdep.h
pdp11-opc.lo: \
  pdp11-opc.c \
  $(INCDIR)/opcode/pdp11.h
pj-dis.lo: \
  pj-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/pj.h \
  $(INCDIR)/symcat.h \
  config.h \
  sysdep.h
pj-opc.lo: \
  pj-opc.c \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/pj.h \
  config.h \
  sysdep.h
ppc-dis.lo: \
  ppc-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/ppc.h \
  $(INCDIR)/symcat.h \
  config.h \
  opintl.h \
  sysdep.h
ppc-opc.lo: \
  ppc-opc.c \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/ppc.h \
  config.h \
  opintl.h \
  sysdep.h
s390-mkopc.lo: \
  s390-mkopc.c
s390-opc.lo: \
  s390-opc.c \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/s390.h \
  s390-opc.tab
s390-dis.lo: \
  s390-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/s390.h \
  $(INCDIR)/symcat.h \
  config.h \
  opintl.h \
  sysdep.h
score-dis.lo: \
  score-dis.c \
  $(BFDDIR)/elf-bfd.h \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/bfdlink.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/elf/common.h \
  $(INCDIR)/elf/external.h \
  $(INCDIR)/elf/internal.h \
  $(INCDIR)/elf/reloc-macros.h \
  $(INCDIR)/elf/score.h \
  $(INCDIR)/symcat.h \
  config.h \
  opintl.h \
  sysdep.h
score7-dis.lo: \
  score7-dis.c \
  $(BFDDIR)/elf-bfd.h \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/bfdlink.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/elf/common.h \
  $(INCDIR)/elf/external.h \
  $(INCDIR)/elf/internal.h \
  $(INCDIR)/elf/reloc-macros.h \
  $(INCDIR)/elf/score.h \
  $(INCDIR)/symcat.h \
  config.h \
  opintl.h \
  sysdep.h
sh-dis.lo: \
  sh-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/symcat.h \
  config.h \
  sh-opc.h \
  sysdep.h
sh64-dis.lo: \
  sh64-dis.c \
  $(BFDDIR)/elf-bfd.h \
  $(BFDDIR)/elf32-sh64.h \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/bfdlink.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/elf/common.h \
  $(INCDIR)/elf/external.h \
  $(INCDIR)/elf/internal.h \
  $(INCDIR)/elf/reloc-macros.h \
  $(INCDIR)/elf/sh.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/symcat.h \
  config.h \
  sh64-opc.h \
  sysdep.h
sh64-opc.lo: \
  sh64-opc.c \
  sh64-opc.h
sparc-dis.lo: \
  sparc-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/sparc.h \
  $(INCDIR)/symcat.h \
  config.h \
  opintl.h \
  sysdep.h
sparc-opc.lo: \
  sparc-opc.c \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/sparc.h \
  config.h \
  sysdep.h
spu-dis.lo: \
  spu-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/spu-insns.h \
  $(INCDIR)/opcode/spu.h \
  $(INCDIR)/symcat.h \
  config.h \
  sysdep.h
spu-opc.lo: \
  spu-opc.c \
  $(INCDIR)/opcode/spu-insns.h \
  $(INCDIR)/opcode/spu.h
tic30-dis.lo: \
  tic30-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/tic30.h \
  $(INCDIR)/symcat.h \
  config.h \
  sysdep.h
tic4x-dis.lo: \
  tic4x-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/tic4x.h \
  $(INCDIR)/symcat.h
tic54x-dis.lo: \
  tic54x-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/coff/ti.h \
  $(INCDIR)/coff/tic54x.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/tic54x.h \
  $(INCDIR)/symcat.h \
  config.h \
  sysdep.h
tic54x-opc.lo: \
  tic54x-opc.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/tic54x.h \
  $(INCDIR)/symcat.h \
  config.h \
  sysdep.h
tic80-dis.lo: \
  tic80-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/tic80.h \
  $(INCDIR)/symcat.h \
  config.h \
  sysdep.h
tic80-opc.lo: \
  tic80-opc.c \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/tic80.h \
  config.h \
  sysdep.h
v850-dis.lo: \
  v850-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/v850.h \
  $(INCDIR)/symcat.h \
  config.h \
  opintl.h \
  sysdep.h
v850-opc.lo: \
  v850-opc.c \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/v850.h \
  config.h \
  opintl.h \
  sysdep.h
vax-dis.lo: \
  vax-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/vax.h \
  $(INCDIR)/symcat.h \
  config.h \
  sysdep.h
w65-dis.lo: \
  w65-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/symcat.h \
  config.h \
  sysdep.h \
  w65-opc.h
xc16x-asm.lo: \
  xc16x-asm.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/safe-ctype.h \
  $(INCDIR)/symcat.h \
  $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h \
  config.h \
  opintl.h \
  sysdep.h \
  xc16x-desc.h \
  xc16x-opc.h
xc16x-desc.lo: \
  xc16x-desc.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h \
  $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h \
  config.h \
  opintl.h \
  sysdep.h \
  xc16x-desc.h \
  xc16x-opc.h
xc16x-dis.lo: \
  xc16x-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h \
  config.h \
  opintl.h \
  sysdep.h \
  xc16x-desc.h \
  xc16x-opc.h
xc16x-ibld.lo: \
  xc16x-ibld.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/safe-ctype.h \
  $(INCDIR)/symcat.h \
  config.h \
  opintl.h \
  sysdep.h \
  xc16x-desc.h \
  xc16x-opc.h
xc16x-opc.lo: \
  xc16x-opc.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h \
  config.h \
  sysdep.h \
  xc16x-desc.h \
  xc16x-opc.h
xstormy16-asm.lo: \
  xstormy16-asm.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/safe-ctype.h \
  $(INCDIR)/symcat.h \
  $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h \
  config.h \
  opintl.h \
  sysdep.h \
  xstormy16-desc.h \
  xstormy16-opc.h
xstormy16-desc.lo: \
  xstormy16-desc.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h \
  $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h \
  config.h \
  opintl.h \
  sysdep.h \
  xstormy16-desc.h \
  xstormy16-opc.h
xstormy16-dis.lo: \
  xstormy16-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h \
  config.h \
  opintl.h \
  sysdep.h \
  xstormy16-desc.h \
  xstormy16-opc.h
xstormy16-ibld.lo: \
  xstormy16-ibld.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/safe-ctype.h \
  $(INCDIR)/symcat.h \
  config.h \
  opintl.h \
  sysdep.h \
  xstormy16-desc.h \
  xstormy16-opc.h
xstormy16-opc.lo: \
  xstormy16-opc.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h \
  config.h \
  sysdep.h \
  xstormy16-desc.h \
  xstormy16-opc.h
xtensa-dis.lo: \
  xtensa-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/libiberty.h \
  $(INCDIR)/symcat.h \
  $(INCDIR)/xtensa-isa.h \
  config.h \
  sysdep.h
z80-dis.lo: \
  z80-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/symcat.h \
  config.h \
  sysdep.h
z8k-dis.lo: \
  z8k-dis.c \
  $(BFD_H) \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h \
  $(INCDIR)/symcat.h \
  config.h \
  sysdep.h \
  z8k-opc.h
z8kgen.lo: \
  z8kgen.c \
  $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h \
  config.h \
  sysdep.h
# IF YOU PUT ANYTHING HERE IT WILL GO AWAY
@


1.159
log
@Regenerate tree using Autoconf 2.64 and Automake 1.11.

config/:
	* override.m4 (_GCC_AUTOCONF_VERSION): Bump to 2.64.

/:
	* configure: Regenerate.

etc/:
	* configure: Regenerate.

sim/common/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/iq2000/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/d10v/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/igen/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/m32r/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/frv/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/:
	* avr/config.in: Regenerate.
	* avr/configure: Likewise.
	* configure: Likewise.
	* cris/config.in: Likewise.
	* cris/configure: Likewise.

sim/h8300/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/mn10300/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/ppc/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/erc32/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/arm/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/m68hc11/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/lm32/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/sh64/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/v850/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/cr16/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/moxie/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/m32c/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/mips/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/mcore/:
	* config.in: Regenerate.
	* configure: Likewise.

sim/testsuite/d10v-elf/:
	* configure: Regenerate.

sim/testsuite/:
	* configure: Regenerate.

sim/testsuite/frv-elf/:
	* configure: Regenerate.

sim/testsuite/m32r-elf/:
	* configure: Regenerate.

sim/testsuite/mips64el-elf/:
	* configure: Regenerate.

sim/sh/:
	* config.in: Regenerate.
	* configure: Likewise.

gold/:
	* Makefile.in: Regenerate.
	* aclocal.m4: Likewise.
	* config.in: Likewise.
	* configure: Likewise.
	* testsuite/Makefile.in: Likewise.

gprof/:
	* Makefile.in: Regenerate.
	* aclocal.m4: Likewise.
	* configure: Likewise.
	* gconfig.in: Likewise.

opcodes/:
	* Makefile.in: Regenerate.
	* aclocal.m4: Likewise.
	* config.in: Likewise.
	* configure: Likewise.

gas/:
	* Makefile.in: Regenerate.
	* aclocal.m4: Likewise.
	* config.in: Likewise.
	* configure: Likewise.
	* doc/Makefile.in: Likewise.

ld/:
	* Makefile.in: Regenerate.
	* aclocal.m4: Likewise.
	* config.in: Likewise.
	* configure: Likewise.

gdb/:
	* aclocal.m4: Regenerate.
	* config.in: Likewise.
	* configure: Likewise.
	* gnulib/Makefile.in: Likewise.

gdb/doc/:
	* configure: Regenerate.

gdb/gdbserver/:
	* aclocal.m4: Regenerate.
	* config.in: Likewise.
	* configure: Likewise.

gdb/testsuite/:
	* configure: Regenerate.
	* gdb.hp/configure: Likewise.
	* gdb.hp/gdb.aCC/configure: Likewise.
	* gdb.hp/gdb.base-hp/configure: Likewise.
	* gdb.hp/gdb.compat/configure: Likewise.
	* gdb.hp/gdb.defects/configure: Likewise.
	* gdb.hp/gdb.objdbg/configure: Likewise.
	* gdb.stabs/configure: Likewise.

binutils/:
	* Makefile.in: Regenerate.
	* aclocal.m4: Likewise.
	* config.in: Likewise.
	* configure: Likewise.
	* doc/Makefile.in: Likewise.

bfd/:
	* Makefile.in: Regenerate.
	* aclocal.m4: Likewise.
	* config.in: Likewise.
	* configure: Likewise.

bfd/doc/:
	* Makefile.in: Regenerate.

readline/:
	* configure: Regenerate.

readline/examples/rlfe/:
	* configure: Regenerate.
@
text
@d998 2
d1008 2
a1059 6
.PHONY: install-pdf
install-pdf:

.PHONY: install-html
install-html:

@


1.158
log
@        Add support for Xilinx MicroBlaze processor.

        * bfd/Makefile.am: Add cpu-microblaze.{lo,c}, elf32-microblaze.{lo,c}.
        * bfd/Makefile.in: Same.
        * bfd/archures.c: Add bfd_arch_microblaze.
        * bfd/bfd-in2.h: Regenerate.
        * bfd/config.bfd: Add microblaze target.
        * bfd/configure: Add bfd_elf32_microblaze_vec target.
        * bfd/configure.in: Same.
        * bfd/cpu-microblaze.c: New.
        * bfd/elf32-microblaze.c: New.
        * bfd/libbfd-in.h: Add prototype _bfd_dwarf2_fixup_section_debug_loc().
        * bfd/libbfd.h: Regenerate.
        * bfd/reloc.c: Add MICROBLAZE relocations.
        * bfd/section.c: Add struct relax_table and relax_count to section.
        * bfd/targets.c: Add bfd_elf32_microblaze_vec.
        * binutils/MAINTAINERS: Add self as maintainer.
        * binutils/readelf.c: Include elf/microblaze.h, add EM_MICROBLAZE &
        EM_MICROBLAZE_OLD to guess_is_rela(), dump_relocations(),
        get_machine_name().
        * config.sub: Add microblaze target.
        * configure: Same.
        * configure.ac: Same.
        * gas/Makefile.am: add microblaze to CPU_TYPES, config/tc-microblaze.c to
        TARGET_CPU_CFILES, config/tc-microblaze.h to TARGET_CPU_HFILES, add
        DEP_microblaze_elf target.
        * gas/Makefile.in: Same.
        * gas/config/tc-microblaze.c: Add MicroBlaze assembler.
        * gas/config/tc-microblaze.h: Add header for tc-microblaze.c.
        * gas/configure: Add microblaze target.
        * gas/configure.in: Same.
        * gas/configure.tgt: Same.
        * gas/doc/Makefile.am: Add c-microblaze.texi to CPU_DOCS.
        * gas/doc/Makefile.in: Same.
        * gas/doc/all.texi: Set MICROBLAZE.
        * gas/doc/as.texinfo: Add MicroBlaze doc links.
        * gas/doc/c-microblaze.texi: New MicroBlaze docs.
        * include/dis-asm.h: Decl print_insn_microblaze().
        * include/elf/common.h: Define EM_MICROBLAZE & EM_MICROBLAZE_OLD.
        * include/elf/microblaze.h: New reloc definitions.
        * ld/Makefile.am: Add eelf32mb_linux.o, eelf32microblaze.o to
        ALL_EMULATIONS, targets.
        * ld/Makefile.in: Same.
        * ld/configure.tgt: Add microblaze*-linux*, microblaze* targets.
        * ld/emulparams/elf32mb_linux.sh: New.
        * ld/emulparams/elf32microblaze.sh. New.
        * ld/scripttempl/elfmicroblaze.sc: New.
        * opcodes/Makefile.am: Add microblaze-opc.h to HFILES, microblaze-dis.c to
        CFILES, microblaze-dis.lo to ALL_MACHINES, targets.
        * opcodes/Makefile.in: Same.
        * opcodes/configure: Add bfd_microblaze_arch target.
        * opcodes/configure.in: Same.
        * opcodes/disassemble.c: Define ARCH_microblaze, return
        print_insn_microblaze().
        * opcodes/microblaze-dis.c: New MicroBlaze disassembler.
        * opcodes/microblaze-opc.h: New MicroBlaze opcode definitions.
        * opcodes/microblaze-opcm.h: New MicroBlaze opcode types.
@
text
@d1 1
a1 1
# Makefile.in generated by automake 1.9.6 from Makefile.am.
d5 2
a6 1
# 2003, 2004, 2005  Free Software Foundation, Inc.
a18 2
srcdir = @@srcdir@@
top_srcdir = @@top_srcdir@@
d21 1
d23 1
a23 2
pkgincludedir = $(includedir)/@@PACKAGE@@
top_builddir = .
a24 1
INSTALL = @@INSTALL@@
d39 2
a40 2
DIST_COMMON = $(srcdir)/../config.guess $(srcdir)/../config.sub \
	ChangeLog $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
d43 1
a43 3
	$(top_srcdir)/po/Make-in $(srcdir)/../ltmain.sh \
	$(srcdir)/../config.guess $(srcdir)/../config.sub
subdir = .
a47 1
	$(top_srcdir)/../config/extensions.m4 \
a52 1
	$(top_srcdir)/../config/proginstall.m4 \
d60 1
a60 1
 configure.lineno configure.status.lineno
d64 1
d76 16
a91 1
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
a92 1
bfdlibLTLIBRARIES_INSTALL = $(INSTALL)
d97 4
a100 1
DEFAULT_INCLUDES = -I. -I$(srcdir) -I.
d105 3
a107 3
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
d109 3
a111 2
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@@
d115 9
a123 4
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
a127 2
AMDEP_FALSE = @@AMDEP_FALSE@@
AMDEP_TRUE = @@AMDEP_TRUE@@
a140 2
CGEN_MAINT_FALSE = @@CGEN_MAINT_FALSE@@
CGEN_MAINT_TRUE = @@CGEN_MAINT_TRUE@@
d161 1
a162 2
INSTALL_LIBBFD_FALSE = @@INSTALL_LIBBFD_FALSE@@
INSTALL_LIBBFD_TRUE = @@INSTALL_LIBBFD_TRUE@@
a178 2
MAINTAINER_MODE_FALSE = @@MAINTAINER_MODE_FALSE@@
MAINTAINER_MODE_TRUE = @@MAINTAINER_MODE_TRUE@@
d180 1
d196 1
d212 4
a215 1
ac_ct_AR = @@ac_ct_AR@@
a216 1
ac_ct_DSYMUTIL = @@ac_ct_DSYMUTIL@@
a217 9
ac_ct_LIPO = @@ac_ct_LIPO@@
ac_ct_NMEDIT = @@ac_ct_NMEDIT@@
ac_ct_OBJDUMP = @@ac_ct_OBJDUMP@@
ac_ct_OTOOL = @@ac_ct_OTOOL@@
ac_ct_OTOOL64 = @@ac_ct_OTOOL64@@
ac_ct_RANLIB = @@ac_ct_RANLIB@@
ac_ct_STRIP = @@ac_ct_STRIP@@
am__fastdepCC_FALSE = @@am__fastdepCC_FALSE@@
am__fastdepCC_TRUE = @@am__fastdepCC_TRUE@@
d232 1
d235 3
d245 1
d251 1
d257 1
d260 1
d263 1
d271 3
d713 2
a714 2
	      echo ' cd $(srcdir) && $(AUTOMAKE) --cygnus '; \
	      cd $(srcdir) && $(AUTOMAKE) --cygnus  \
d719 3
a721 3
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --cygnus  Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --cygnus  Makefile
d737 1
a737 1
	cd $(srcdir) && $(AUTOCONF)
d739 2
a740 1
	cd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
d745 1
a745 1
	  $(MAKE) stamp-h1; \
d752 1
a752 1
	cd $(top_srcdir) && $(AUTOHEADER)
d773 1
a773 1
	$(LINK) -rpath $(bfdlibdir) $(libopcodes_la_LDFLAGS) $(libopcodes_la_OBJECTS) $(libopcodes_la_LIBADD) $(LIBS)
d797 1
a797 2
	-rm -f libtool
uninstall-info-am:
d823 1
a823 1
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
d830 1
a830 2
mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
d857 1
a857 1
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
d862 1
a862 1
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
d866 1
a866 1
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
d874 2
a875 2
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
d881 1
a881 1
	tags=; \
d893 1
a893 1
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
d900 4
a903 3
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
d905 7
a911 2
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
a915 2
	tags=; \
	here=`pwd`; \
d920 3
a922 3
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
d924 1
a924 1
	     $$tags $$unique
d928 2
a929 2
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here
d939 1
a939 1
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
d962 1
d984 2
d992 4
d998 2
d1002 2
d1006 6
d1035 2
a1036 1
uninstall-info: uninstall-info-recursive
d1038 16
a1053 15
.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am am--refresh check \
	check-am clean clean-bfdlibLTLIBRARIES clean-generic \
	clean-libtool clean-noinstLIBRARIES clean-recursive ctags \
	ctags-recursive distclean distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-recursive \
	distclean-tags dvi dvi-am html html-am info info-am install \
	install-am install-bfdlibLTLIBRARIES install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic maintainer-clean-recursive \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool mostlyclean-recursive pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am \
	uninstall-bfdlibLTLIBRARIES uninstall-info-am
d3072 1
@


1.157
log
@	* dep-in.sed: Don't use \n in replacement part of s command.
	* Makefile.am (DEP1): LC_ALL for uniq.
	* Makefile.in: Regenerate.
@
text
@d290 1
d403 1
d559 1
d2369 5
@


1.156
log
@	* dep-in.sed: Don't modify .o to .lo here.  Output one filename
	per line with all lines having continuation backslash.  Prefix
	first line with "A", following lines with "B".
	* Makefile.am (DEP): Don't use dep.sed here.
	(DEP1): Run $MKDEP on single files, modify .o to .lo here.  Use
	dep.sed here on dependencies, sort and uniq.
	* Makefile.in: Regenerate.
@
text
@d1222 2
a1223 1
	  sed -e '1s/.*: //' -f dep.sed < DEPA | LC_ALL=C sort | uniq | \
@


1.155
log
@Run "make dep-am" and regenerate
@
text
@d1209 2
a1210 3
	sed -f dep.sed < DEP1 > DEPA
	echo '# IF YOU PUT ANYTHING HERE IT WILL GO AWAY' >> DEPA
	if grep ' /' DEPA > /dev/null 2> /dev/null; then \
d1213 1
a1213 1
	  mv -f DEPA $@@; \
d1219 7
a1225 1
	$(MKDEP) $(INCLUDES) $(CFLAGS) $? >> DEP2
d1257 35
a1291 4
alpha-dis.lo: alpha-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/alpha.h
alpha-opc.lo: alpha-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/alpha.h $(BFD_H) $(INCDIR)/symcat.h \
d1293 73
a1365 29
arc-dis.lo: arc-dis.c $(INCDIR)/ansidecl.h $(INCDIR)/libiberty.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/arc.h \
  $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h $(INCDIR)/elf/external.h \
  $(INCDIR)/elf/internal.h $(INCDIR)/bfdlink.h $(INCDIR)/elf/arc.h \
  $(INCDIR)/elf/reloc-macros.h opintl.h arc-dis.h arc-ext.h
arc-opc.lo: arc-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/arc.h \
  opintl.h
arc-ext.lo: arc-ext.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h arc-ext.h $(INCDIR)/libiberty.h
arm-dis.lo: arm-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/arm.h \
  opintl.h $(INCDIR)/safe-ctype.h $(INCDIR)/floatformat.h \
  $(INCDIR)/coff/internal.h $(BFDDIR)/libcoff.h $(INCDIR)/bfdlink.h \
  $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h $(INCDIR)/elf/external.h \
  $(INCDIR)/elf/internal.h $(INCDIR)/elf/arm.h $(INCDIR)/elf/reloc-macros.h
avr-dis.lo: avr-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h opintl.h \
  $(INCDIR)/libiberty.h $(INCDIR)/opcode/avr.h
bfin-dis.lo: bfin-dis.c $(INCDIR)/opcode/bfin.h $(INCDIR)/dis-asm.h \
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h
cgen-asm.lo: cgen-asm.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h $(BFD_H) \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  opintl.h
cgen-bitset.lo: cgen-bitset.c $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/opcode/cgen-bitset.h
cgen-dis.lo: cgen-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen.h \
d1367 65
a1431 20
cgen-opc.lo: cgen-opc.c $(INCDIR)/alloca-conf.h config.h \
  sysdep.h $(INCDIR)/ansidecl.h $(INCDIR)/libiberty.h \
  $(INCDIR)/safe-ctype.h $(BFD_H) $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h
cr16-dis.lo: cr16-dis.c $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h sysdep.h config.h \
  $(INCDIR)/opcode/cr16.h $(INCDIR)/libiberty.h
cr16-opc.lo: cr16-opc.c $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cr16.h
cris-dis.lo: cris-dis.c $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h sysdep.h config.h \
  $(INCDIR)/opcode/cris.h $(INCDIR)/libiberty.h
cris-opc.lo: cris-opc.c $(INCDIR)/opcode/cris.h
crx-dis.lo: crx-dis.c $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h sysdep.h config.h \
  $(INCDIR)/opcode/crx.h
crx-opc.lo: crx-opc.c $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/crx.h
d10v-dis.lo: d10v-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/d10v.h $(INCDIR)/dis-asm.h $(BFD_H) \
d1433 307
a1739 56
d10v-opc.lo: d10v-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/d10v.h
d30v-dis.lo: d30v-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/d30v.h $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/symcat.h opintl.h
d30v-opc.lo: d30v-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/d30v.h
dlx-dis.lo: dlx-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/dlx.h
dis-buf.lo: dis-buf.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h opintl.h
dis-init.lo: dis-init.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h
disassemble.lo: disassemble.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h
fr30-asm.lo: fr30-asm.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h fr30-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h fr30-opc.h opintl.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
fr30-desc.lo: fr30-desc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h fr30-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h fr30-opc.h opintl.h $(INCDIR)/libiberty.h \
  $(INCDIR)/xregex.h $(INCDIR)/xregex2.h
fr30-dis.lo: fr30-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  fr30-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  fr30-opc.h opintl.h
fr30-ibld.lo: fr30-ibld.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h fr30-desc.h \
  $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  fr30-opc.h opintl.h $(INCDIR)/safe-ctype.h
fr30-opc.lo: fr30-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h fr30-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h fr30-opc.h $(INCDIR)/libiberty.h
frv-asm.lo: frv-asm.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h frv-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h frv-opc.h opintl.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
frv-desc.lo: frv-desc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h frv-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h frv-opc.h opintl.h $(INCDIR)/libiberty.h \
  $(INCDIR)/xregex.h $(INCDIR)/xregex2.h
frv-dis.lo: frv-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  frv-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  frv-opc.h opintl.h
frv-ibld.lo: frv-ibld.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h frv-desc.h \
  $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  frv-opc.h opintl.h $(INCDIR)/safe-ctype.h
frv-opc.lo: frv-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h frv-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h frv-opc.h $(INCDIR)/libiberty.h \
  $(INCDIR)/elf/frv.h $(INCDIR)/elf/reloc-macros.h
moxie-dis.lo: moxie-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/moxie.h $(INCDIR)/dis-asm.h $(BFD_H) \
d1741 490
a2230 161
moxie-opc.lo: moxie-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/moxie.h
h8300-dis.lo: h8300-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/h8300.h $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/symcat.h opintl.h $(INCDIR)/libiberty.h
h8500-dis.lo: h8500-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  h8500-opc.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h \
  opintl.h
hppa-dis.lo: hppa-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(BFDDIR)/libhppa.h \
  $(INCDIR)/opcode/hppa.h
i370-dis.lo: i370-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/i370.h
i370-opc.lo: i370-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/i370.h
i386-dis.lo: i386-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h opintl.h \
  $(INCDIR)/opcode/i386.h $(INCDIR)/libiberty.h
i386-opc.lo: i386-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h i386-opc.h $(INCDIR)/opcode/i386.h \
  i386-tbl.h
i386-gen.lo: i386-gen.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/getopt.h $(INCDIR)/libiberty.h $(INCDIR)/hashtab.h \
  $(INCDIR)/safe-ctype.h i386-opc.h $(INCDIR)/opcode/i386.h
i860-dis.lo: i860-dis.c $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/opcode/i860.h
i960-dis.lo: i960-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h
ia64-dis.lo: ia64-dis.c $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/opcode/ia64.h
ia64-opc-a.lo: ia64-opc-a.c ia64-opc.h $(INCDIR)/opcode/ia64.h \
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h
ia64-opc-b.lo: ia64-opc-b.c ia64-opc.h $(INCDIR)/opcode/ia64.h \
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h
ia64-opc-f.lo: ia64-opc-f.c ia64-opc.h $(INCDIR)/opcode/ia64.h \
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h
ia64-opc-i.lo: ia64-opc-i.c ia64-opc.h $(INCDIR)/opcode/ia64.h \
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h
ia64-opc-m.lo: ia64-opc-m.c ia64-opc.h $(INCDIR)/opcode/ia64.h \
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h
ia64-opc-d.lo: ia64-opc-d.c
ia64-opc.lo: ia64-opc.c $(INCDIR)/ansidecl.h sysdep.h \
  config.h $(INCDIR)/libiberty.h ia64-asmtab.h $(INCDIR)/opcode/ia64.h \
  $(BFD_H) $(INCDIR)/symcat.h ia64-asmtab.c
ia64-gen.lo: ia64-gen.c $(INCDIR)/ansidecl.h $(INCDIR)/libiberty.h \
  $(INCDIR)/safe-ctype.h sysdep.h config.h $(INCDIR)/getopt.h \
  ia64-opc.h $(INCDIR)/opcode/ia64.h $(BFD_H) $(INCDIR)/symcat.h \
  ia64-opc-a.c ia64-opc-i.c ia64-opc-m.c ia64-opc-b.c \
  ia64-opc-f.c ia64-opc-x.c ia64-opc-d.c
ia64-asmtab.lo: ia64-asmtab.c
ip2k-asm.lo: ip2k-asm.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h ip2k-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h ip2k-opc.h opintl.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
ip2k-desc.lo: ip2k-desc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h ip2k-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h ip2k-opc.h opintl.h $(INCDIR)/libiberty.h \
  $(INCDIR)/xregex.h $(INCDIR)/xregex2.h
ip2k-dis.lo: ip2k-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  ip2k-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  ip2k-opc.h opintl.h
ip2k-ibld.lo: ip2k-ibld.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h ip2k-desc.h \
  $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  ip2k-opc.h opintl.h $(INCDIR)/safe-ctype.h
ip2k-opc.lo: ip2k-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h ip2k-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h ip2k-opc.h $(INCDIR)/libiberty.h \
  $(INCDIR)/safe-ctype.h
iq2000-asm.lo: iq2000-asm.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h iq2000-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h iq2000-opc.h opintl.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
iq2000-desc.lo: iq2000-desc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h iq2000-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h iq2000-opc.h opintl.h $(INCDIR)/libiberty.h \
  $(INCDIR)/xregex.h $(INCDIR)/xregex2.h
iq2000-dis.lo: iq2000-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  iq2000-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  iq2000-opc.h opintl.h
iq2000-ibld.lo: iq2000-ibld.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h iq2000-desc.h \
  $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  iq2000-opc.h opintl.h $(INCDIR)/safe-ctype.h
iq2000-opc.lo: iq2000-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h iq2000-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h iq2000-opc.h $(INCDIR)/libiberty.h
lm32-asm.lo: lm32-asm.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h lm32-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h lm32-opc.h opintl.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
lm32-desc.lo: lm32-desc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h lm32-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h lm32-opc.h opintl.h $(INCDIR)/libiberty.h \
  $(INCDIR)/xregex.h $(INCDIR)/xregex2.h
lm32-dis.lo: lm32-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  lm32-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  lm32-opc.h opintl.h
lm32-ibld.lo: lm32-ibld.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h lm32-desc.h \
  $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  lm32-opc.h opintl.h $(INCDIR)/safe-ctype.h
lm32-opc.lo: lm32-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h lm32-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h lm32-opc.h $(INCDIR)/libiberty.h
lm32-opinst.lo: lm32-opinst.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h lm32-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h lm32-opc.h
m32c-asm.lo: m32c-asm.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h m32c-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h m32c-opc.h cgen-types.h ../bfd/bfd_stdint.h \
  cgen-ops.h opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h \
  $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
m32c-desc.lo: m32c-desc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h m32c-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h m32c-opc.h cgen-types.h ../bfd/bfd_stdint.h \
  cgen-ops.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h
m32c-dis.lo: m32c-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  m32c-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  m32c-opc.h cgen-types.h ../bfd/bfd_stdint.h cgen-ops.h \
  opintl.h $(INCDIR)/elf/m32c.h $(INCDIR)/elf/reloc-macros.h \
  $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h $(INCDIR)/elf/external.h \
  $(INCDIR)/elf/internal.h $(INCDIR)/bfdlink.h
m32c-ibld.lo: m32c-ibld.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h m32c-desc.h \
  $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  m32c-opc.h cgen-types.h ../bfd/bfd_stdint.h cgen-ops.h \
  opintl.h $(INCDIR)/safe-ctype.h
m32c-opc.lo: m32c-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h m32c-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h m32c-opc.h cgen-types.h ../bfd/bfd_stdint.h \
  cgen-ops.h $(INCDIR)/libiberty.h
m32r-asm.lo: m32r-asm.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h m32r-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h m32r-opc.h opintl.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
m32r-desc.lo: m32r-desc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h m32r-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h m32r-opc.h opintl.h $(INCDIR)/libiberty.h \
  $(INCDIR)/xregex.h $(INCDIR)/xregex2.h
m32r-dis.lo: m32r-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  m32r-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  m32r-opc.h opintl.h
m32r-ibld.lo: m32r-ibld.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h m32r-desc.h \
  $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  m32r-opc.h opintl.h $(INCDIR)/safe-ctype.h
m32r-opc.lo: m32r-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h m32r-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h m32r-opc.h $(INCDIR)/libiberty.h
m32r-opinst.lo: m32r-opinst.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h m32r-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h m32r-opc.h
m68hc11-dis.lo: m68hc11-dis.c $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/m68hc11.h $(INCDIR)/dis-asm.h $(BFD_H) \
d2232 3
a2234 1
m68hc11-opc.lo: m68hc11-opc.c $(INCDIR)/ansidecl.h \
d2236 199
a2434 56
m68k-dis.lo: m68k-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/floatformat.h \
  $(INCDIR)/libiberty.h opintl.h $(INCDIR)/opcode/m68k.h
m68k-opc.lo: m68k-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/m68k.h
m88k-dis.lo: m88k-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/m88k.h \
  opintl.h $(INCDIR)/libiberty.h
maxq-dis.lo: maxq-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/maxq.h
mcore-dis.lo: mcore-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  mcore-opc.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h
mep-asm.lo: mep-asm.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h mep-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h mep-opc.h opintl.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h \
  $(INCDIR)/elf/mep.h $(INCDIR)/elf/reloc-macros.h
mep-desc.lo: mep-desc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h mep-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h mep-opc.h opintl.h $(INCDIR)/libiberty.h \
  $(INCDIR)/xregex.h $(INCDIR)/xregex2.h
mep-dis.lo: mep-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  mep-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  mep-opc.h opintl.h $(INCDIR)/elf/mep.h $(INCDIR)/elf/reloc-macros.h \
  $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h $(INCDIR)/elf/external.h \
  $(INCDIR)/elf/internal.h $(INCDIR)/bfdlink.h
mep-ibld.lo: mep-ibld.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h mep-desc.h \
  $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  mep-opc.h opintl.h $(INCDIR)/safe-ctype.h
mep-opc.lo: mep-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h mep-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h mep-opc.h $(INCDIR)/libiberty.h \
  $(INCDIR)/elf/mep.h $(INCDIR)/elf/reloc-macros.h
mips-dis.lo: mips-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/mips.h opintl.h $(BFDDIR)/elf-bfd.h \
  $(INCDIR)/elf/common.h $(INCDIR)/elf/external.h $(INCDIR)/elf/internal.h \
  $(INCDIR)/bfdlink.h $(INCDIR)/elf/mips.h $(INCDIR)/elf/reloc-macros.h
mips-opc.lo: mips-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/mips.h
mips16-opc.lo: mips16-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/mips.h
m10200-dis.lo: m10200-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/mn10200.h $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/symcat.h opintl.h
m10200-opc.lo: m10200-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/mn10200.h
m10300-dis.lo: m10300-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/mn10300.h $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/symcat.h opintl.h
m10300-opc.lo: m10300-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/mn10300.h
mmix-dis.lo: mmix-dis.c $(INCDIR)/opcode/mmix.h $(INCDIR)/dis-asm.h \
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
d2436 169
a2604 46
mmix-opc.lo: mmix-opc.c $(INCDIR)/opcode/mmix.h $(INCDIR)/symcat.h
mt-asm.lo: mt-asm.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h mt-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h mt-opc.h opintl.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
mt-desc.lo: mt-desc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h mt-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h mt-opc.h opintl.h $(INCDIR)/libiberty.h \
  $(INCDIR)/xregex.h $(INCDIR)/xregex2.h
mt-dis.lo: mt-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  mt-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  mt-opc.h opintl.h
mt-ibld.lo: mt-ibld.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h mt-desc.h \
  $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  mt-opc.h opintl.h $(INCDIR)/safe-ctype.h
mt-opc.lo: mt-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h mt-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h mt-opc.h $(INCDIR)/libiberty.h \
  $(INCDIR)/safe-ctype.h
ns32k-dis.lo: ns32k-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/dis-asm.h $(INCDIR)/opcode/ns32k.h \
  opintl.h
openrisc-asm.lo: openrisc-asm.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h openrisc-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h openrisc-opc.h opintl.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
openrisc-desc.lo: openrisc-desc.c sysdep.h config.h \
  $(INCDIR)/ansidecl.h $(BFD_H) $(INCDIR)/symcat.h openrisc-desc.h \
  $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  openrisc-opc.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h
openrisc-dis.lo: openrisc-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  openrisc-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  openrisc-opc.h opintl.h
openrisc-ibld.lo: openrisc-ibld.c sysdep.h config.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h \
  openrisc-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  openrisc-opc.h opintl.h $(INCDIR)/safe-ctype.h
openrisc-opc.lo: openrisc-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h openrisc-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h openrisc-opc.h $(INCDIR)/libiberty.h
or32-dis.lo: or32-dis.c $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/opcode/or32.h \
d2606 50
a2655 17
or32-opc.lo: or32-opc.c $(INCDIR)/safe-ctype.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/or32.h
pdp11-dis.lo: pdp11-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/pdp11.h
pdp11-opc.lo: pdp11-opc.c $(INCDIR)/opcode/pdp11.h
pj-dis.lo: pj-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/pj.h $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/symcat.h
pj-opc.lo: pj-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/pj.h
ppc-dis.lo: ppc-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h opintl.h \
  $(INCDIR)/opcode/ppc.h
ppc-opc.lo: ppc-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/ppc.h opintl.h
s390-mkopc.lo: s390-mkopc.c
s390-opc.lo: s390-opc.c $(INCDIR)/ansidecl.h $(INCDIR)/opcode/s390.h \
d2657 119
a2775 52
s390-dis.lo: s390-dis.c $(INCDIR)/ansidecl.h sysdep.h \
  config.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h \
  opintl.h $(INCDIR)/opcode/s390.h
score-dis.lo: score-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h opintl.h \
  $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h $(INCDIR)/elf/external.h \
  $(INCDIR)/elf/internal.h $(INCDIR)/bfdlink.h $(INCDIR)/elf/score.h \
  $(INCDIR)/elf/reloc-macros.h
score7-dis.lo: score7-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h opintl.h \
  $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h $(INCDIR)/elf/external.h \
  $(INCDIR)/elf/internal.h $(INCDIR)/bfdlink.h $(INCDIR)/elf/score.h \
  $(INCDIR)/elf/reloc-macros.h
sh-dis.lo: sh-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  sh-opc.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/dis-asm.h
sh64-dis.lo: sh64-dis.c $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h sysdep.h config.h \
  sh64-opc.h $(INCDIR)/libiberty.h $(BFDDIR)/elf-bfd.h \
  $(INCDIR)/elf/common.h $(INCDIR)/elf/external.h $(INCDIR)/elf/internal.h \
  $(INCDIR)/bfdlink.h $(INCDIR)/elf/sh.h $(INCDIR)/elf/reloc-macros.h \
  $(BFDDIR)/elf32-sh64.h
sh64-opc.lo: sh64-opc.c sh64-opc.h
sparc-dis.lo: sparc-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/sparc.h $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/symcat.h $(INCDIR)/libiberty.h opintl.h
sparc-opc.lo: sparc-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/sparc.h
spu-dis.lo: spu-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/spu.h \
  $(INCDIR)/opcode/spu-insns.h
spu-opc.lo: spu-opc.c $(INCDIR)/opcode/spu.h $(INCDIR)/opcode/spu-insns.h
tic30-dis.lo: tic30-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/tic30.h
tic4x-dis.lo: tic4x-dis.c $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/tic4x.h
tic54x-dis.lo: tic54x-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/tic54x.h \
  $(INCDIR)/coff/tic54x.h $(INCDIR)/coff/ti.h
tic54x-opc.lo: tic54x-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/tic54x.h
tic80-dis.lo: tic80-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/tic80.h $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/symcat.h
tic80-opc.lo: tic80-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/tic80.h
v850-dis.lo: v850-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/v850.h $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/symcat.h opintl.h
v850-opc.lo: v850-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/v850.h opintl.h
vax-dis.lo: vax-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/vax.h $(INCDIR)/dis-asm.h $(BFD_H) \
d2777 245
a3021 52
w65-dis.lo: w65-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  w65-opc.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h
xc16x-asm.lo: xc16x-asm.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h xc16x-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h xc16x-opc.h opintl.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
xc16x-desc.lo: xc16x-desc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h xc16x-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h xc16x-opc.h opintl.h $(INCDIR)/libiberty.h \
  $(INCDIR)/xregex.h $(INCDIR)/xregex2.h
xc16x-dis.lo: xc16x-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  xc16x-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  xc16x-opc.h opintl.h
xc16x-ibld.lo: xc16x-ibld.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h xc16x-desc.h \
  $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  xc16x-opc.h opintl.h $(INCDIR)/safe-ctype.h
xc16x-opc.lo: xc16x-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h xc16x-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h xc16x-opc.h $(INCDIR)/libiberty.h
xstormy16-asm.lo: xstormy16-asm.c sysdep.h config.h \
  $(INCDIR)/ansidecl.h $(BFD_H) $(INCDIR)/symcat.h xstormy16-desc.h \
  $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  xstormy16-opc.h opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h \
  $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
xstormy16-desc.lo: xstormy16-desc.c sysdep.h config.h \
  $(INCDIR)/ansidecl.h $(BFD_H) $(INCDIR)/symcat.h xstormy16-desc.h \
  $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  xstormy16-opc.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h
xstormy16-dis.lo: xstormy16-dis.c sysdep.h config.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h \
  $(INCDIR)/libiberty.h xstormy16-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h xstormy16-opc.h opintl.h
xstormy16-ibld.lo: xstormy16-ibld.c sysdep.h config.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h \
  xstormy16-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  xstormy16-opc.h opintl.h $(INCDIR)/safe-ctype.h
xstormy16-opc.lo: xstormy16-opc.c sysdep.h config.h \
  $(INCDIR)/ansidecl.h $(BFD_H) $(INCDIR)/symcat.h xstormy16-desc.h \
  $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  xstormy16-opc.h $(INCDIR)/libiberty.h
xtensa-dis.lo: xtensa-dis.c $(INCDIR)/xtensa-isa.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/libiberty.h sysdep.h \
  config.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h
z80-dis.lo: z80-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h
z8k-dis.lo: z8k-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h z8k-opc.h
z8kgen.lo: z8kgen.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h
@


1.154
log
@Add new binutils target: moxie
@
text
@d1364 1
a1364 1
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h
d1544 2
a1545 1
  $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
@


1.153
log
@bfd/
	* vms-hdr.c: Don't include alloca.h.
opcodes/
	* cgen-opc.c: Include alloca-conf.h rather than alloca.h.
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
@
text
@d340 2
d500 2
d1362 5
@


1.152
log
@include/
	* alloca-conf.h: Revise based on autoconf-2.61, autoconf-2.13
	documentation.
bfd/
	* elf32-m68hc1x.c: Include alloca-conf.h.
	* xsym.c: Likewise.
	* elf64-hppa.c: Likewise.  Remove existing #if's handling alloca.
	* som.c: Likewise.
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
binutils/
	* sysdep.h: Include alloca-conf.h instead of config.h and remove
	existing #if's handling alloca.
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
gas/
	* as.h: Include alloca-conf.h instead of config.h and remove
	existing #if's handling alloca.
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
opcodes/
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
	* openrisc-opc.c: Regenerate.
ld/
	* ld.h: Remove alloca handling.
@
text
@d1283 4
a1286 3
cgen-opc.lo: cgen-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h $(BFD_H) \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h
@


1.151
log
@make dep-am and regen
opcodes/
	* Makefile.am (HFILES): Move lm32-desc.h and lm32-opc.h from..
	(CFILES): ..here.
@
text
@d158 1
d1633 2
a1634 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/ppc.h
@


1.150
log
@Add support for Score7 architecture.
@
text
@d283 2
a370 1
	lm32-desc.h \
a373 1
	lm32-opc.h \
d687 2
a688 2
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign '; \
	      cd $(srcdir) && $(AUTOMAKE) --foreign  \
d693 1
a693 1
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  Makefile'; \
d695 1
a695 1
	  $(AUTOMAKE) --foreign  Makefile
d1253 4
a1256 5
  $(INCDIR)/ansidecl.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/arc.h $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h \
  $(INCDIR)/elf/external.h $(INCDIR)/elf/internal.h $(INCDIR)/bfdlink.h \
  $(INCDIR)/elf/arc.h $(INCDIR)/elf/reloc-macros.h opintl.h \
  arc-dis.h arc-ext.h
d1261 1
a1261 2
  $(BFD_H) $(INCDIR)/symcat.h arc-ext.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h
d1265 3
a1267 4
  $(INCDIR)/ansidecl.h $(INCDIR)/coff/internal.h $(BFDDIR)/libcoff.h \
  $(INCDIR)/bfdlink.h $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h \
  $(INCDIR)/elf/external.h $(INCDIR)/elf/internal.h $(INCDIR)/elf/arm.h \
  $(INCDIR)/elf/reloc-macros.h
d1270 1
a1270 1
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/opcode/avr.h
d1274 3
a1276 3
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h \
  $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/opcode/cgen-bitset.h opintl.h
d1280 4
a1283 1
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(BFD_H) \
a1284 4
cgen-opc.lo: cgen-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h \
  $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/opcode/cgen-bitset.h
d1287 1
a1287 1
  $(INCDIR)/opcode/cr16.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
d1292 1
a1292 1
  $(INCDIR)/opcode/cris.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
d1319 2
a1320 3
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  fr30-opc.h opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1323 1
a1323 2
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  fr30-opc.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1327 1
a1327 2
  $(INCDIR)/ansidecl.h fr30-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
d1332 1
a1332 2
  $(INCDIR)/opcode/cgen-bitset.h fr30-opc.h opintl.h \
  $(INCDIR)/safe-ctype.h
d1335 1
a1335 2
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  fr30-opc.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
d1338 2
a1339 3
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  frv-opc.h opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1342 1
a1342 2
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  frv-opc.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1346 1
a1346 2
  $(INCDIR)/ansidecl.h frv-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
d1351 1
a1351 1
  $(INCDIR)/opcode/cgen-bitset.h frv-opc.h opintl.h $(INCDIR)/safe-ctype.h
d1354 1
a1354 2
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  frv-opc.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1358 1
a1358 1
  $(INCDIR)/symcat.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
d1371 1
a1371 1
  $(INCDIR)/opcode/i386.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
d1373 2
a1374 2
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h i386-opc.h \
  $(INCDIR)/opcode/i386.h i386-tbl.h
d1376 1
a1376 1
  $(INCDIR)/getopt.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1396 2
a1397 3
  config.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  ia64-asmtab.h $(INCDIR)/opcode/ia64.h $(BFD_H) $(INCDIR)/symcat.h \
  ia64-asmtab.c
d1399 4
a1402 5
  $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h sysdep.h \
  config.h $(INCDIR)/getopt.h ia64-opc.h $(INCDIR)/opcode/ia64.h \
  $(BFD_H) $(INCDIR)/symcat.h ia64-opc-a.c ia64-opc-i.c \
  ia64-opc-m.c ia64-opc-b.c ia64-opc-f.c ia64-opc-x.c \
  ia64-opc-d.c
d1406 2
a1407 3
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  ip2k-opc.h opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1410 1
a1410 2
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  ip2k-opc.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1414 1
a1414 2
  $(INCDIR)/ansidecl.h ip2k-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
d1419 1
a1419 2
  $(INCDIR)/opcode/cgen-bitset.h ip2k-opc.h opintl.h \
  $(INCDIR)/safe-ctype.h
d1422 1
a1422 2
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  ip2k-opc.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1426 2
a1427 3
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  iq2000-opc.h opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1430 1
a1430 2
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  iq2000-opc.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1434 1
a1434 2
  $(INCDIR)/ansidecl.h iq2000-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
d1439 1
a1439 2
  $(INCDIR)/opcode/cgen-bitset.h iq2000-opc.h opintl.h \
  $(INCDIR)/safe-ctype.h
d1442 1
a1442 2
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  iq2000-opc.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
d1444 3
a1446 3
  $(BFD_H) $(INCDIR)/symcat.h lm32-desc.h $(INCDIR)/opcode/cgen.h \
  lm32-opc.h opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h \
  $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
d1448 3
a1450 3
  $(BFD_H) $(INCDIR)/symcat.h lm32-desc.h $(INCDIR)/opcode/cgen.h \
  lm32-opc.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h
d1453 2
a1454 1
  lm32-desc.h $(INCDIR)/opcode/cgen.h lm32-opc.h opintl.h
d1457 2
a1458 1
  $(INCDIR)/opcode/cgen.h lm32-opc.h opintl.h $(INCDIR)/safe-ctype.h
d1460 2
a1461 2
  $(BFD_H) $(INCDIR)/symcat.h lm32-desc.h $(INCDIR)/opcode/cgen.h \
  lm32-opc.h $(INCDIR)/libiberty.h
d1463 2
a1464 2
  $(BFD_H) $(INCDIR)/symcat.h lm32-desc.h $(INCDIR)/opcode/cgen.h \
  lm32-opc.h
d1467 3
a1469 4
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  m32c-opc.h cgen-types.h ../bfd/bfd_stdint.h cgen-ops.h \
  opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1472 3
a1474 4
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  m32c-opc.h cgen-types.h ../bfd/bfd_stdint.h cgen-ops.h \
  opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/xregex.h $(INCDIR)/xregex2.h
d1477 1
a1477 2
  $(INCDIR)/ansidecl.h m32c-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
d1485 2
a1486 2
  $(INCDIR)/opcode/cgen-bitset.h m32c-opc.h cgen-types.h \
  ../bfd/bfd_stdint.h cgen-ops.h opintl.h $(INCDIR)/safe-ctype.h
d1489 2
a1490 3
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  m32c-opc.h cgen-types.h ../bfd/bfd_stdint.h cgen-ops.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
d1493 2
a1494 3
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  m32r-opc.h opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1497 1
a1497 2
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  m32r-opc.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1501 1
a1501 2
  $(INCDIR)/ansidecl.h m32r-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
d1506 1
a1506 2
  $(INCDIR)/opcode/cgen-bitset.h m32r-opc.h opintl.h \
  $(INCDIR)/safe-ctype.h
d1509 1
a1509 2
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  m32r-opc.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
d1512 1
a1512 2
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  m32r-opc.h
d1520 1
a1520 2
  $(INCDIR)/ansidecl.h $(INCDIR)/libiberty.h opintl.h \
  $(INCDIR)/opcode/m68k.h
d1525 1
a1525 1
  opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
d1532 2
a1533 3
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  mep-opc.h opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1536 1
a1536 2
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  mep-opc.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1540 1
a1540 2
  $(INCDIR)/ansidecl.h mep-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
d1547 1
a1547 1
  $(INCDIR)/opcode/cgen-bitset.h mep-opc.h opintl.h $(INCDIR)/safe-ctype.h
d1550 1
a1550 2
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  mep-opc.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1554 3
a1556 4
  $(INCDIR)/ansidecl.h $(INCDIR)/opcode/mips.h opintl.h \
  $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h $(INCDIR)/elf/external.h \
  $(INCDIR)/elf/internal.h $(INCDIR)/bfdlink.h $(INCDIR)/elf/mips.h \
  $(INCDIR)/elf/reloc-macros.h
d1573 1
a1573 1
  $(INCDIR)/ansidecl.h opintl.h
d1577 2
a1578 3
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  mt-opc.h opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1581 1
a1581 2
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  mt-opc.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1585 1
a1585 2
  $(INCDIR)/ansidecl.h mt-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
d1590 1
a1590 1
  $(INCDIR)/opcode/cgen-bitset.h mt-opc.h opintl.h $(INCDIR)/safe-ctype.h
d1593 1
a1593 2
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  mt-opc.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1600 2
a1601 3
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  openrisc-opc.h opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1605 1
a1605 2
  $(INCDIR)/opcode/cgen-bitset.h openrisc-opc.h opintl.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/xregex.h \
d1609 1
a1609 2
  $(INCDIR)/ansidecl.h openrisc-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
d1614 1
a1614 2
  $(INCDIR)/opcode/cgen-bitset.h openrisc-opc.h opintl.h \
  $(INCDIR)/safe-ctype.h
d1617 1
a1617 2
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  openrisc-opc.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
d1642 4
a1645 4
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h score-opc.h \
  opintl.h $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h \
  $(INCDIR)/elf/external.h $(INCDIR)/elf/internal.h $(INCDIR)/bfdlink.h \
  $(INCDIR)/elf/score.h $(INCDIR)/elf/reloc-macros.h
d1647 4
a1650 4
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h score-opc.h \
  opintl.h $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h \
  $(INCDIR)/elf/external.h $(INCDIR)/elf/internal.h $(INCDIR)/bfdlink.h \
  $(INCDIR)/elf/score.h $(INCDIR)/elf/reloc-macros.h
d1655 4
a1658 4
  sh64-opc.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h $(INCDIR)/elf/external.h \
  $(INCDIR)/elf/internal.h $(INCDIR)/bfdlink.h $(INCDIR)/elf/sh.h \
  $(INCDIR)/elf/reloc-macros.h $(BFDDIR)/elf32-sh64.h
d1662 1
a1662 2
  $(INCDIR)/symcat.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  opintl.h
d1672 1
a1672 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/tic4x.h
d1695 2
a1696 3
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  xc16x-opc.h opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1699 1
a1699 2
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  xc16x-opc.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1703 1
a1703 2
  $(INCDIR)/ansidecl.h xc16x-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
d1708 1
a1708 2
  $(INCDIR)/opcode/cgen-bitset.h xc16x-opc.h opintl.h \
  $(INCDIR)/safe-ctype.h
d1711 1
a1711 2
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  xc16x-opc.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
d1715 2
a1716 3
  $(INCDIR)/opcode/cgen-bitset.h xstormy16-opc.h opintl.h \
  $(INCDIR)/xregex.h $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1720 1
a1720 2
  $(INCDIR)/opcode/cgen-bitset.h xstormy16-opc.h opintl.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/xregex.h \
d1724 2
a1725 3
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h xstormy16-desc.h \
  $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/opcode/cgen-bitset.h xstormy16-opc.h opintl.h
d1729 1
a1729 2
  $(INCDIR)/opcode/cgen-bitset.h xstormy16-opc.h opintl.h \
  $(INCDIR)/safe-ctype.h
d1733 1
a1733 2
  $(INCDIR)/opcode/cgen-bitset.h xstormy16-opc.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h
d1735 2
a1736 2
  $(INCDIR)/ansidecl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  sysdep.h config.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h
d1742 1
a1742 1
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
@


1.149
log
@bfd:
2009-02-03  Carlos O'Donell  <carlos@@codesourcery.com>

	* configure.in: AC_SUBST pdfdir.
	* Makefile.am: Add install-pdf, install-pdf-am
	and install-pdf-recursive targets. Define pdfdir.
	* doc/Makefile.am: Define pdf__strip_dir. Add
	install-pdf and install-pdf-am targets.
	* po/Make-in: Add install-pdf target.
	* configure: Regenerate.
	* Makefile.in: Regenerate
	* doc/Makefile.in: Regenerate.

binutils:
2009-02-03  Carlos O'Donell  <carlos@@codesourcery.com>

	* configure.in: AC_SUBST pdfdir.
	* Makefile.am: Add install-pdf, install-pdf-am,
	and install-pdf-recursive targets.
	* doc/Makefile.am: Define pdf__strip_dir. Add
	install-pdf and install-pdf-am targets.
	* po/Make-in: Add install-pdf target.
	* configure: Regenerate.
	* Makefile.in: Regenerate.
	* doc/Makefile.in: Regenerate.

etc:
2009-02-03  Carlos O'Donell  <carlos@@codesourcery.com>

	* configure.in: AC_SUBST pdfdir.
	* configure: Regenerate.

gas:
2009-02-03  Carlos O'Donell  <carlos@@codesourcery.com>

	* configure.in: AC_SUBST pdfdir.
	* Makefile.am: Add install-pdf, install-pdf-am,
	and install-pdf-recursive targets.
	* doc/Makefile.am: Define pdf__strip_dir. Add
	install-pdf and install-pdf-am targets.
	* po/Make-in: Add install-pdf target.
	* configure: Regenerate.
	* Makefile.in: Regenerate.
	* doc/Makefile.in: Regenerate.

gprof:
2009-02-03  Carlos O'Donell  <carlos@@codesourcery.com>

	* configure.in: AC_SUBST pdfdir.
	* Makefile.am: Add install-pdf, install-pdf-am,
	and install-pdf-recursive targets. Define pdf__strip_dir.
	* po/Make-in: Add install-pdf target.
	* configure: Regenerate.
	* Makefile.in: Regenerate.

ld:
2009-02-03  Carlos O'Donell  <carlos@@codesourcery.com>

	* configure.in: AC_SUBST pdfdir.
	* Makefile.am: Add install-pdf, install-pdf-am,
	and install-pdf-recursive targets. Define pdf__strip_dir.
	* po/Make-in: Add install-pdf target.
	* configure: Regenerate.
	* Makefile.in: Regenerate.

opcodes:
2009-02-03  Carlos O'Donell  <carlos@@codesourcery.com>

	* Makefile.am: Add install-pdf target.
	* po/Make-in: Add install-pdf target.
	* Makefile.in: Regenerate.
@
text
@d430 1
d579 1
d1694 5
@


1.148
log
@opcodes/
	* Makefile.am (CFILES, ALL_MACHINES): Add LM32 source and object files.
	* Makefile.in: Regenerate.
@
text
@d1006 3
@


1.147
log
@Add LM32 port.
@
text
@d367 8
d517 6
@


1.146
log
@run "make dep-am"
@
text
@d637 2
d671 2
a672 2
	      echo ' cd $(srcdir) && $(AUTOMAKE) --cygnus '; \
	      cd $(srcdir) && $(AUTOMAKE) --cygnus  \
d677 1
a677 1
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --cygnus  Makefile'; \
d679 1
a679 1
	  $(AUTOMAKE) --cygnus  Makefile
d1058 8
d1449 20
@


1.146.8.1
log
@Commit patches for ARCompact support to binutils-arc-20081103-branch .
@
text
@a305 3
	arc-dis-cgen.c \
	arc-desc.c \
	arcompact-dis.c \
a459 3
	arc-dis-cgen.lo \
	arc-desc.lo \
	arcompact-dis.lo \
d1228 1
a1228 7
  arc-dis.h arcompact-dis.h arc-ext.h
arcompact-dis.lo: arcompact-dis.c $(INCDIR)/ansidecl.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/arc.h $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h \
  $(INCDIR)/elf/external.h $(INCDIR)/elf/internal.h $(INCDIR)/bfdlink.h \
  $(INCDIR)/elf/arc.h $(INCDIR)/elf/reloc-macros.h opintl.h \
  arc-dis.h arcompact-dis.h arc-ext.h
@


1.145
log
@2008-09-29  H.J. Lu  <hongjiu.lu@@intel.com>

	* aclocal.m4: Regenerated.
	* configure: Likewise.
	* Makefile.in: Likewise.
@
text
@d1219 1
a1219 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/alpha.h
d1221 2
a1222 2
  $(INCDIR)/opcode/alpha.h $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h opintl.h
d1224 5
a1228 5
  $(INCDIR)/ansidecl.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/arc.h $(BFDDIR)/elf-bfd.h \
  $(INCDIR)/elf/common.h $(INCDIR)/elf/external.h $(INCDIR)/elf/internal.h \
  $(INCDIR)/bfdlink.h $(INCDIR)/elf/arc.h $(INCDIR)/elf/reloc-macros.h \
  opintl.h arc-dis.h arc-ext.h
d1230 1
a1230 1
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/opcode/arc.h \
d1233 2
a1234 2
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h arc-ext.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
d1236 6
a1241 6
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/arm.h opintl.h $(INCDIR)/safe-ctype.h \
  $(INCDIR)/floatformat.h $(INCDIR)/ansidecl.h $(INCDIR)/coff/internal.h \
  $(BFDDIR)/libcoff.h $(INCDIR)/bfdlink.h $(BFDDIR)/elf-bfd.h \
  $(INCDIR)/elf/common.h $(INCDIR)/elf/external.h $(INCDIR)/elf/internal.h \
  $(INCDIR)/elf/internal.h $(INCDIR)/elf/arm.h $(INCDIR)/elf/reloc-macros.h
d1243 2
a1244 3
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/avr.h
d1249 2
a1250 3
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h \
  opintl.h
d1255 1
a1255 2
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h
d1258 2
a1259 2
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h
d1262 1
a1262 2
  $(INCDIR)/ansidecl.h $(INCDIR)/opcode/cr16.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h
d1267 1
a1267 2
  $(INCDIR)/ansidecl.h $(INCDIR)/opcode/cris.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h
d1271 1
a1271 1
  $(INCDIR)/ansidecl.h $(INCDIR)/opcode/crx.h
d1276 1
a1276 1
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h
d1281 1
a1281 1
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h opintl.h
d1285 1
a1285 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/dlx.h
d1287 1
a1287 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  opintl.h
d1289 1
a1289 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(BFD_H)
d1291 1
a1291 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h
d1293 4
a1296 5
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  fr30-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h fr30-opc.h \
  opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1298 3
a1300 4
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  fr30-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h fr30-opc.h \
  opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1303 4
a1306 5
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  fr30-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h fr30-opc.h \
  opintl.h
d1308 5
a1312 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
d1314 2
a1315 7
  $(INCDIR)/opcode/cgen.h $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h \
  fr30-opc.h opintl.h $(INCDIR)/safe-ctype.h
fr30-opc.lo: fr30-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  fr30-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h fr30-opc.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
d1317 4
a1320 5
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  frv-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h frv-opc.h \
  opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1322 3
a1324 4
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  frv-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h frv-opc.h \
  opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1327 4
a1330 5
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  frv-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h frv-opc.h \
  opintl.h
d1332 4
a1335 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
d1337 3
a1339 8
  $(INCDIR)/opcode/cgen.h $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h \
  frv-opc.h opintl.h $(INCDIR)/safe-ctype.h
frv-opc.lo: frv-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  frv-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h frv-opc.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/elf/frv.h \
  $(INCDIR)/elf/reloc-macros.h
d1342 1
a1342 2
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h opintl.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h
d1344 2
a1345 2
  h8500-opc.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h opintl.h
d1347 2
a1348 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(BFDDIR)/libhppa.h $(INCDIR)/opcode/hppa.h
d1350 1
a1350 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/i370.h
d1354 2
a1355 3
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  opintl.h $(INCDIR)/opcode/i386.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h
d1365 1
a1365 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h
d1367 1
a1367 2
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/opcode/ia64.h \
  $(BFD_H)
d1381 2
a1382 2
  ia64-asmtab.h $(INCDIR)/opcode/ia64.h $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h ia64-asmtab.c
d1386 3
a1388 3
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h ia64-opc-a.c \
  ia64-opc-i.c ia64-opc-m.c ia64-opc-b.c ia64-opc-f.c \
  ia64-opc-x.c ia64-opc-d.c
d1391 4
a1394 5
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  ip2k-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h ip2k-opc.h \
  opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1396 3
a1398 4
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  ip2k-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h ip2k-opc.h \
  opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1401 4
a1404 5
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  ip2k-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h ip2k-opc.h \
  opintl.h
d1406 5
a1410 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
d1412 7
a1418 6
  $(INCDIR)/opcode/cgen.h $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h \
  ip2k-opc.h opintl.h $(INCDIR)/safe-ctype.h
ip2k-opc.lo: ip2k-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  ip2k-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h ip2k-opc.h \
a1419 6
iq2000-asm.lo: iq2000-asm.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  iq2000-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h iq2000-opc.h \
  opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1421 3
a1423 4
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  iq2000-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h iq2000-opc.h \
  opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1426 4
a1429 5
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  iq2000-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h iq2000-opc.h \
  opintl.h
d1431 5
a1435 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
d1437 2
a1438 7
  $(INCDIR)/opcode/cgen.h $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h \
  iq2000-opc.h opintl.h $(INCDIR)/safe-ctype.h
iq2000-opc.lo: iq2000-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  iq2000-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h iq2000-opc.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
d1440 4
a1443 5
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  m32c-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h m32c-opc.h \
  cgen-types.h ../bfd/bfd_stdint.h cgen-ops.h opintl.h \
  $(INCDIR)/xregex.h $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h \
d1446 5
a1450 6
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  m32c-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h m32c-opc.h \
  cgen-types.h ../bfd/bfd_stdint.h cgen-ops.h opintl.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h
d1452 7
a1458 8
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  m32c-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h m32c-opc.h \
  cgen-types.h ../bfd/bfd_stdint.h cgen-ops.h opintl.h \
  $(INCDIR)/elf/m32c.h $(INCDIR)/elf/reloc-macros.h $(BFDDIR)/elf-bfd.h \
  $(INCDIR)/elf/common.h $(INCDIR)/elf/external.h $(INCDIR)/elf/internal.h \
  $(INCDIR)/bfdlink.h
d1460 5
a1464 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
d1466 1
a1466 1
  $(INCDIR)/opcode/cgen.h $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h \
d1468 1
a1468 7
  opintl.h $(INCDIR)/safe-ctype.h
m32c-opc.lo: m32c-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  m32c-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h m32c-opc.h \
  cgen-types.h ../bfd/bfd_stdint.h cgen-ops.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h
d1470 4
a1473 5
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  m32r-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h m32r-opc.h \
  opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1475 3
a1477 4
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  m32r-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h m32r-opc.h \
  opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1480 4
a1483 5
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  m32r-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h m32r-opc.h \
  opintl.h
d1485 5
a1489 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
d1491 2
a1492 7
  $(INCDIR)/opcode/cgen.h $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h \
  m32r-opc.h opintl.h $(INCDIR)/safe-ctype.h
m32r-opc.lo: m32r-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  m32r-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h m32r-opc.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
d1494 3
a1496 3
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  m32r-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h m32r-opc.h
d1499 1
a1499 1
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h
d1503 3
a1505 3
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(INCDIR)/floatformat.h $(INCDIR)/ansidecl.h $(INCDIR)/libiberty.h \
  opintl.h $(INCDIR)/opcode/m68k.h
d1509 2
a1510 3
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/m88k.h opintl.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h
d1512 1
a1512 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/maxq.h
d1514 1
a1514 2
  mcore-opc.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h
d1516 4
a1519 5
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  mep-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h mep-opc.h \
  opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1521 3
a1523 4
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  mep-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h mep-opc.h \
  opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1526 4
a1529 5
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  mep-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h mep-opc.h \
  opintl.h $(INCDIR)/elf/mep.h $(INCDIR)/elf/reloc-macros.h \
d1533 4
a1536 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
d1538 8
a1545 7
  $(INCDIR)/opcode/cgen.h $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h \
  mep-opc.h opintl.h $(INCDIR)/safe-ctype.h
mep-opc.lo: mep-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  mep-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h mep-opc.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/elf/mep.h \
a1546 6
mips-dis.lo: mips-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/opcode/mips.h \
  opintl.h $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h \
  $(INCDIR)/elf/external.h $(INCDIR)/elf/internal.h $(INCDIR)/bfdlink.h \
  $(INCDIR)/elf/mips.h $(INCDIR)/elf/reloc-macros.h
d1553 1
a1553 1
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h opintl.h
d1558 1
a1558 1
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h opintl.h
d1563 1
a1563 1
  $(INCDIR)/ansidecl.h $(BFD_H) opintl.h
d1566 4
a1569 5
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  mt-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h mt-opc.h \
  opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1571 3
a1573 4
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  mt-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h mt-opc.h \
  opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1576 4
a1579 5
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  mt-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h mt-opc.h \
  opintl.h
d1581 4
a1584 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
d1586 3
a1588 7
  $(INCDIR)/opcode/cgen.h $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h \
  mt-opc.h opintl.h $(INCDIR)/safe-ctype.h
mt-opc.lo: mt-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  mt-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h mt-opc.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1590 2
a1591 2
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/dis-asm.h \
  $(BFD_H) $(INCDIR)/opcode/ns32k.h opintl.h
d1593 4
a1596 5
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  openrisc-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h openrisc-opc.h \
  opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1598 1
a1598 2
  $(INCDIR)/ansidecl.h $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h $(INCDIR)/symcat.h openrisc-desc.h \
d1600 3
a1602 3
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h openrisc-opc.h \
  opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/xregex.h $(INCDIR)/xregex2.h
d1604 6
a1609 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1611 2
a1612 8
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h openrisc-opc.h \
  opintl.h
openrisc-ibld.lo: openrisc-ibld.c sysdep.h config.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h $(BFD_H) $(INCDIR)/symcat.h openrisc-desc.h \
  $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h openrisc-opc.h \
  opintl.h $(INCDIR)/safe-ctype.h
d1614 3
a1616 4
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  openrisc-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h openrisc-opc.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
d1623 1
a1623 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/pdp11.h
d1627 1
a1627 1
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h
d1631 1
a1631 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/ppc.h
d1638 2
a1639 2
  config.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h opintl.h $(INCDIR)/opcode/s390.h
d1641 2
a1642 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  score-opc.h opintl.h $(BFD_H) $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h \
d1644 1
a1644 1
  $(INCDIR)/elf/internal.h $(INCDIR)/elf/score.h $(INCDIR)/elf/reloc-macros.h
d1646 1
a1646 2
  sh-opc.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(INCDIR)/dis-asm.h $(BFD_H)
d1649 4
a1652 4
  $(INCDIR)/ansidecl.h sh64-opc.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h \
  $(INCDIR)/elf/external.h $(INCDIR)/elf/internal.h $(INCDIR)/bfdlink.h \
  $(INCDIR)/elf/sh.h $(INCDIR)/elf/reloc-macros.h $(BFDDIR)/elf32-sh64.h
d1655 3
a1657 3
  $(INCDIR)/opcode/sparc.h $(INCDIR)/ansidecl.h $(INCDIR)/dis-asm.h \
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h opintl.h
d1659 1
a1659 1
  $(INCDIR)/opcode/sparc.h $(INCDIR)/ansidecl.h
d1661 1
a1661 3
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/spu.h $(INCDIR)/opcode/spu-insns.h
spu-opc.lo: spu-opc.c $(INCDIR)/opcode/spu.h $(INCDIR)/opcode/spu-insns.h \
d1663 1
d1665 1
a1665 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/tic30.h
d1670 2
a1671 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/tic54x.h $(INCDIR)/coff/tic54x.h $(INCDIR)/coff/ti.h
d1673 1
a1673 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/tic54x.h
d1676 1
a1676 1
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h
d1681 1
a1681 1
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h opintl.h
d1686 1
a1686 1
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h
d1688 1
a1688 2
  w65-opc.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h
d1690 4
a1693 5
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  xc16x-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h xc16x-opc.h \
  opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1695 3
a1697 4
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  xc16x-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h xc16x-opc.h \
  opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1700 4
a1703 5
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  xc16x-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h xc16x-opc.h \
  opintl.h
d1705 5
a1709 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
d1711 2
a1712 7
  $(INCDIR)/opcode/cgen.h $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h \
  xc16x-opc.h opintl.h $(INCDIR)/safe-ctype.h
xc16x-opc.lo: xc16x-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  xc16x-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h xc16x-opc.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
d1714 1
a1714 2
  $(INCDIR)/ansidecl.h $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h $(INCDIR)/symcat.h xstormy16-desc.h \
d1716 2
a1717 2
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h xstormy16-opc.h \
  opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h \
d1720 1
a1720 2
  $(INCDIR)/ansidecl.h $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h $(INCDIR)/symcat.h xstormy16-desc.h \
d1722 3
a1724 3
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h xstormy16-opc.h \
  opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/xregex.h $(INCDIR)/xregex2.h
d1726 4
a1729 5
  $(INCDIR)/ansidecl.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h xstormy16-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h \
  xstormy16-opc.h opintl.h
d1731 4
a1734 5
  $(INCDIR)/ansidecl.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h $(BFD_H) $(INCDIR)/symcat.h xstormy16-desc.h \
  $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h xstormy16-opc.h \
  opintl.h $(INCDIR)/safe-ctype.h
d1736 1
a1736 2
  $(INCDIR)/ansidecl.h $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h $(INCDIR)/symcat.h xstormy16-desc.h \
d1738 2
a1739 2
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h xstormy16-opc.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
d1742 1
a1742 2
  sysdep.h config.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h
d1744 1
a1744 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h
d1746 1
a1746 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  z8k-opc.h
@


1.144
log
@	PR 6526
	* configure.in: Invoke AC_USE_SYSTEM_EXTENSIONS.
@
text
@d62 1
a62 1
	$(top_srcdir)/configure.in
d133 1
d161 1
d172 1
d174 1
d176 2
d200 1
d202 5
@


1.144.2.1
log
@Regenerate makefile dependencies and .pot files.
@
text
@d1207 2
a1208 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/alpha.h
d1210 2
a1211 2
  $(INCDIR)/opcode/alpha.h $(BFD_H) $(INCDIR)/symcat.h \
  opintl.h
d1213 5
a1217 5
  $(INCDIR)/ansidecl.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/arc.h $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h \
  $(INCDIR)/elf/external.h $(INCDIR)/elf/internal.h $(INCDIR)/bfdlink.h \
  $(INCDIR)/elf/arc.h $(INCDIR)/elf/reloc-macros.h opintl.h \
  arc-dis.h arc-ext.h
d1219 1
a1219 1
  $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/arc.h \
d1222 2
a1223 2
  $(BFD_H) $(INCDIR)/symcat.h arc-ext.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h
d1225 6
a1230 6
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/arm.h \
  opintl.h $(INCDIR)/safe-ctype.h $(INCDIR)/floatformat.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/coff/internal.h $(BFDDIR)/libcoff.h \
  $(INCDIR)/bfdlink.h $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h \
  $(INCDIR)/elf/external.h $(INCDIR)/elf/internal.h $(INCDIR)/elf/arm.h \
  $(INCDIR)/elf/reloc-macros.h
d1232 3
a1234 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h opintl.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/opcode/avr.h
d1239 3
a1241 2
  $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/opcode/cgen-bitset.h opintl.h
d1246 2
a1247 1
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h
d1250 2
a1251 2
  $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/opcode/cgen-bitset.h
d1254 2
a1255 1
  $(INCDIR)/opcode/cr16.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
d1260 2
a1261 1
  $(INCDIR)/opcode/cris.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
d1265 1
a1265 1
  $(INCDIR)/opcode/crx.h
d1270 1
a1270 1
  $(INCDIR)/symcat.h
d1275 1
a1275 1
  $(INCDIR)/symcat.h opintl.h
d1279 2
a1280 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/dlx.h
d1282 2
a1283 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h opintl.h
d1285 2
a1286 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h
d1288 1
a1288 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h
d1290 5
a1294 4
  $(BFD_H) $(INCDIR)/symcat.h fr30-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  fr30-opc.h opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1296 4
a1299 3
  $(BFD_H) $(INCDIR)/symcat.h fr30-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  fr30-opc.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1302 5
a1306 4
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h fr30-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  fr30-opc.h opintl.h
d1308 4
a1311 4
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h fr30-desc.h \
  $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/opcode/cgen-bitset.h fr30-opc.h opintl.h \
  $(INCDIR)/safe-ctype.h
d1313 4
a1316 3
  $(BFD_H) $(INCDIR)/symcat.h fr30-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  fr30-opc.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
d1318 5
a1322 4
  $(BFD_H) $(INCDIR)/symcat.h frv-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  frv-opc.h opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1324 4
a1327 3
  $(BFD_H) $(INCDIR)/symcat.h frv-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  frv-opc.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1330 5
a1334 4
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h frv-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  frv-opc.h opintl.h
d1336 4
a1339 3
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h frv-desc.h \
  $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/opcode/cgen-bitset.h frv-opc.h opintl.h $(INCDIR)/safe-ctype.h
d1341 5
a1345 4
  $(BFD_H) $(INCDIR)/symcat.h frv-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  frv-opc.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/elf/frv.h $(INCDIR)/elf/reloc-macros.h
d1348 2
a1349 1
  $(INCDIR)/symcat.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
d1351 2
a1352 2
  h8500-opc.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h \
  opintl.h
d1354 2
a1355 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(BFDDIR)/libhppa.h \
  $(INCDIR)/opcode/hppa.h
d1357 2
a1358 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/i370.h
d1362 3
a1364 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h opintl.h \
  $(INCDIR)/opcode/i386.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
d1374 1
a1374 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h
d1376 2
a1377 1
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/opcode/ia64.h
d1391 2
a1392 2
  ia64-asmtab.h $(INCDIR)/opcode/ia64.h $(BFD_H) $(INCDIR)/symcat.h \
  ia64-asmtab.c
d1396 3
a1398 3
  $(BFD_H) $(INCDIR)/symcat.h ia64-opc-a.c ia64-opc-i.c \
  ia64-opc-m.c ia64-opc-b.c ia64-opc-f.c ia64-opc-x.c \
  ia64-opc-d.c
d1401 5
a1405 4
  $(BFD_H) $(INCDIR)/symcat.h ip2k-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  ip2k-opc.h opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1407 4
a1410 3
  $(BFD_H) $(INCDIR)/symcat.h ip2k-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  ip2k-opc.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1413 5
a1417 4
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h ip2k-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  ip2k-opc.h opintl.h
d1419 4
a1422 4
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h ip2k-desc.h \
  $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/opcode/cgen-bitset.h ip2k-opc.h opintl.h \
  $(INCDIR)/safe-ctype.h
d1424 4
a1427 4
  $(BFD_H) $(INCDIR)/symcat.h ip2k-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  ip2k-opc.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/safe-ctype.h
d1429 5
a1433 4
  $(BFD_H) $(INCDIR)/symcat.h iq2000-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  iq2000-opc.h opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1435 4
a1438 3
  $(BFD_H) $(INCDIR)/symcat.h iq2000-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  iq2000-opc.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1441 5
a1445 4
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h iq2000-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  iq2000-opc.h opintl.h
d1447 4
a1450 4
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h iq2000-desc.h \
  $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/opcode/cgen-bitset.h iq2000-opc.h opintl.h \
  $(INCDIR)/safe-ctype.h
d1452 4
a1455 3
  $(BFD_H) $(INCDIR)/symcat.h iq2000-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  iq2000-opc.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
d1457 5
a1461 4
  $(BFD_H) $(INCDIR)/symcat.h m32c-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  m32c-opc.h cgen-types.h ../bfd/bfd_stdint.h cgen-ops.h \
  opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h \
d1464 6
a1469 5
  $(BFD_H) $(INCDIR)/symcat.h m32c-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  m32c-opc.h cgen-types.h ../bfd/bfd_stdint.h cgen-ops.h \
  opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/xregex.h $(INCDIR)/xregex2.h
d1471 8
a1478 7
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h m32c-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  m32c-opc.h cgen-types.h ../bfd/bfd_stdint.h cgen-ops.h \
  opintl.h $(INCDIR)/elf/m32c.h $(INCDIR)/elf/reloc-macros.h \
  $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h $(INCDIR)/elf/external.h \
  $(INCDIR)/elf/internal.h $(INCDIR)/bfdlink.h
d1480 1
a1480 5
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h m32c-desc.h \
  $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/opcode/cgen-bitset.h m32c-opc.h cgen-types.h \
  ../bfd/bfd_stdint.h cgen-ops.h opintl.h $(INCDIR)/safe-ctype.h
m32c-opc.lo: m32c-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
d1482 1
a1482 1
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
d1484 7
a1490 1
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
d1492 5
a1496 4
  $(BFD_H) $(INCDIR)/symcat.h m32r-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  m32r-opc.h opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1498 4
a1501 3
  $(BFD_H) $(INCDIR)/symcat.h m32r-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  m32r-opc.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1504 5
a1508 4
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h m32r-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  m32r-opc.h opintl.h
d1510 4
a1513 4
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h m32r-desc.h \
  $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/opcode/cgen-bitset.h m32r-opc.h opintl.h \
  $(INCDIR)/safe-ctype.h
d1515 4
a1518 3
  $(BFD_H) $(INCDIR)/symcat.h m32r-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  m32r-opc.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
d1520 3
a1522 3
  $(BFD_H) $(INCDIR)/symcat.h m32r-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  m32r-opc.h
d1525 1
a1525 1
  $(INCDIR)/symcat.h
d1529 3
a1531 3
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/floatformat.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/libiberty.h opintl.h \
  $(INCDIR)/opcode/m68k.h
d1535 3
a1537 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/m88k.h \
  opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
d1539 2
a1540 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/maxq.h
d1542 2
a1543 1
  mcore-opc.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h
d1545 5
a1549 4
  $(BFD_H) $(INCDIR)/symcat.h mep-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  mep-opc.h opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1551 4
a1554 3
  $(BFD_H) $(INCDIR)/symcat.h mep-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  mep-opc.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1557 5
a1561 4
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h mep-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  mep-opc.h opintl.h $(INCDIR)/elf/mep.h $(INCDIR)/elf/reloc-macros.h \
d1565 4
a1568 3
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h mep-desc.h \
  $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/opcode/cgen-bitset.h mep-opc.h opintl.h $(INCDIR)/safe-ctype.h
d1570 5
a1574 4
  $(BFD_H) $(INCDIR)/symcat.h mep-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  mep-opc.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/elf/mep.h $(INCDIR)/elf/reloc-macros.h
d1576 5
a1580 5
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/opcode/mips.h opintl.h \
  $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h $(INCDIR)/elf/external.h \
  $(INCDIR)/elf/internal.h $(INCDIR)/bfdlink.h $(INCDIR)/elf/mips.h \
  $(INCDIR)/elf/reloc-macros.h
d1587 1
a1587 1
  $(INCDIR)/symcat.h opintl.h
d1592 1
a1592 1
  $(INCDIR)/symcat.h opintl.h
d1597 1
a1597 1
  $(INCDIR)/ansidecl.h opintl.h
d1600 5
a1604 4
  $(BFD_H) $(INCDIR)/symcat.h mt-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  mt-opc.h opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1606 4
a1609 3
  $(BFD_H) $(INCDIR)/symcat.h mt-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  mt-opc.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1612 5
a1616 4
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h mt-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  mt-opc.h opintl.h
d1618 4
a1621 3
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h mt-desc.h \
  $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/opcode/cgen-bitset.h mt-opc.h opintl.h $(INCDIR)/safe-ctype.h
d1623 4
a1626 4
  $(BFD_H) $(INCDIR)/symcat.h mt-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  mt-opc.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/safe-ctype.h
d1628 2
a1629 2
  $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/dis-asm.h $(INCDIR)/opcode/ns32k.h \
  opintl.h
d1631 5
a1635 4
  $(BFD_H) $(INCDIR)/symcat.h openrisc-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  openrisc-opc.h opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1637 2
a1638 1
  $(INCDIR)/ansidecl.h $(BFD_H) $(INCDIR)/symcat.h openrisc-desc.h \
d1640 3
a1642 3
  $(INCDIR)/opcode/cgen-bitset.h openrisc-opc.h opintl.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h
d1644 5
a1648 4
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h openrisc-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  openrisc-opc.h opintl.h
d1650 7
a1656 1
  $(INCDIR)/ansidecl.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h \
d1658 2
a1659 6
  $(INCDIR)/opcode/cgen-bitset.h openrisc-opc.h opintl.h \
  $(INCDIR)/safe-ctype.h
openrisc-opc.lo: openrisc-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h openrisc-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  openrisc-opc.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
d1666 2
a1667 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/pdp11.h
d1671 1
a1671 1
  $(INCDIR)/symcat.h
d1675 2
a1676 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/ppc.h
d1683 2
a1684 2
  config.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h \
  opintl.h $(INCDIR)/opcode/s390.h
d1686 2
a1687 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h score-opc.h \
  opintl.h $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h \
d1689 1
a1689 1
  $(INCDIR)/elf/score.h $(INCDIR)/elf/reloc-macros.h
d1691 2
a1692 1
  sh-opc.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/dis-asm.h
d1695 4
a1698 4
  sh64-opc.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h $(INCDIR)/elf/external.h \
  $(INCDIR)/elf/internal.h $(INCDIR)/bfdlink.h $(INCDIR)/elf/sh.h \
  $(INCDIR)/elf/reloc-macros.h $(BFDDIR)/elf32-sh64.h
d1701 3
a1703 3
  $(INCDIR)/opcode/sparc.h $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/symcat.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  opintl.h
d1705 1
a1705 1
  $(INCDIR)/opcode/sparc.h
d1707 3
a1709 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/spu.h \
a1710 1
spu-opc.lo: spu-opc.c $(INCDIR)/opcode/spu.h $(INCDIR)/opcode/spu-insns.h
d1712 2
a1713 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/tic30.h
d1718 2
a1719 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/tic54x.h \
  $(INCDIR)/coff/tic54x.h $(INCDIR)/coff/ti.h
d1721 2
a1722 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/tic54x.h
d1725 1
a1725 1
  $(INCDIR)/symcat.h
d1730 1
a1730 1
  $(INCDIR)/symcat.h opintl.h
d1735 3
a1738 2
w65-dis.lo: w65-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  w65-opc.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h
d1740 5
a1744 4
  $(BFD_H) $(INCDIR)/symcat.h xc16x-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  xc16x-opc.h opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1746 4
a1749 3
  $(BFD_H) $(INCDIR)/symcat.h xc16x-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  xc16x-opc.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1752 5
a1756 4
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h xc16x-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  xc16x-opc.h opintl.h
d1758 4
a1761 4
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h xc16x-desc.h \
  $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/opcode/cgen-bitset.h xc16x-opc.h opintl.h \
  $(INCDIR)/safe-ctype.h
d1763 4
a1766 3
  $(BFD_H) $(INCDIR)/symcat.h xc16x-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
  xc16x-opc.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
d1768 2
a1769 1
  $(INCDIR)/ansidecl.h $(BFD_H) $(INCDIR)/symcat.h xstormy16-desc.h \
d1771 2
a1772 2
  $(INCDIR)/opcode/cgen-bitset.h xstormy16-opc.h opintl.h \
  $(INCDIR)/xregex.h $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h \
d1775 2
a1776 1
  $(INCDIR)/ansidecl.h $(BFD_H) $(INCDIR)/symcat.h xstormy16-desc.h \
d1778 3
a1780 3
  $(INCDIR)/opcode/cgen-bitset.h xstormy16-opc.h opintl.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h
d1782 8
a1789 2
  $(INCDIR)/ansidecl.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h xstormy16-desc.h \
d1791 2
a1792 6
  $(INCDIR)/opcode/cgen-bitset.h xstormy16-opc.h opintl.h
xstormy16-ibld.lo: xstormy16-ibld.c sysdep.h config.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h \
  xstormy16-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/opcode/cgen-bitset.h xstormy16-opc.h opintl.h \
  $(INCDIR)/safe-ctype.h
d1794 2
a1795 1
  $(INCDIR)/ansidecl.h $(BFD_H) $(INCDIR)/symcat.h xstormy16-desc.h \
d1797 2
a1798 2
  $(INCDIR)/opcode/cgen-bitset.h xstormy16-opc.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h
d1801 2
a1802 1
  sysdep.h config.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h
d1804 1
a1804 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h
d1806 2
a1807 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h z8k-opc.h
@


1.143
log
@Set LC_ALL=C rather than unsetting LC_COLLATE for sort.
@
text
@d52 1
@


1.142
log
@	* Makefile.am ($(srcdir)/ia64-asmtab.c): Remove line continuation.
	* Makefile.in: Regenerate.
@
text
@d994 1
a994 1
	for f in $(POTFILES); do echo $$f; done | LC_COLLATE= sort > tmp \
@


1.141
log
@update dependencies
@
text
@d1143 3
a1145 2
$(srcdir)/ia64-asmtab.c: @@MAINT@@ ia64-gen ia64-ic.tbl ia64-raw.tbl \
  ia64-waw.tbl ia64-war.tbl
@


1.140
log
@        * configure.ac: m4_include config/proginstall.m4.
        * configure: Regenerate.
config/
        * proginstall.m4: New file, with fixed AC_PROG_INSTALL.
bfd/
        * aclocal.m4: Regenerate.
        * configure: Likewise.
        * Makefile.in: Likewise.
bfd/doc/
        * Makefile.in: Regenerate.
intl/
        * aclocal.m4: Regenerate.
        * configure: Likewise.
gas/
        * aclocal.m4: Regenerate.
        * configure: Likewise.
        * Makefile.in: Likewise.
        * doc/Makefile.in: Likewise.
ld/
        * aclocal.m4: Regenerate.
        * configure: Likewise.
        * Makefile.in: Likewise.
opcodes/
        * aclocal.m4: Regenerate.
        * configure: Likewise.
        * Makefile.in: Likewise.
binutils/
        * aclocal.m4: Regenerate.
        * configure: Likewise.
        * Makefile.in: Likewise.
        * doc/Makefile.in: Likewise.
gprof/
        * aclocal.m4: Regenerate.
        * configure: Likewise.
        * Makefile.in: Likewise.
@
text
@d54 3
a56 1
	$(top_srcdir)/../config/nls.m4 $(top_srcdir)/../config/po.m4 \
d1682 1
a1682 1
  $(INCDIR)/symcat.h $(INCDIR)/opcode/s390.h
@


1.139
log
@bfd/
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
	* po/SRC-POTFILES.in: Regenerate.
bfd/doc/
	* Makefile.in: Regenerate.
binutils/
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
	* doc/Makefile.in: Regenerate.
	* configure: Regenerate.
gas/
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
	* configure: Regenerate.
gprof/
	* configure: Regenerate.
ld/
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
	* configure: Regenerate.
opcodes/
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
	* configure: Regenerate.
@
text
@d55 1
@


1.138
log
@2007-12-21  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.am (i386-gen.o): Also depend on
	$(srcdir)/../include/opcode/i386.h.
	* Makefile.in: Regenerated.
@
text
@d188 1
d191 2
a210 3
datarootdir = @@datarootdir@@
docdir = @@docdir@@
dvidir = @@dvidir@@
a217 1
htmldir = @@htmldir@@
a222 1
localedir = @@localedir@@
a227 1
pdfdir = @@pdfdir@@
a229 1
psdir = @@psdir@@
d1210 1
a1210 1
  $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h \
d1224 1
a1224 1
  $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h \
d1472 1
a1472 1
  $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h \
d1557 2
a1558 2
  $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h \
  $(INCDIR)/elf/external.h $(INCDIR)/bfdlink.h
d1574 1
a1574 1
  $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h $(INCDIR)/bfdlink.h \
d1683 1
a1683 1
  $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h $(INCDIR)/bfdlink.h \
d1692 1
a1692 1
  $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h $(INCDIR)/bfdlink.h \
@


1.138.6.1
log
@Check in ARCompact simulator.  A valid configuration is arc-elf.
This is not quite finished and has most likely a few files that are
obsolete & not used, but it's good enough to run gcc regression tests.
@
text
@a259 1
	arc-desc.h arc-opc.h \
a290 3
	arc-ext.c \
	arc-asm.c \
	arc-desc.c \
a291 1
	arc-ibld.c \
d293 1
a293 1
	arc-opinst.c \
a444 3
	arc-ext.lo \
	arc-asm.lo \
	arc-desc.lo \
a445 1
	arc-ibld.lo \
d447 1
a447 1
	arc-opinst.lo \
d607 1
a607 1
	stamp-arc stamp-ip2k stamp-m32c stamp-m32r stamp-fr30 stamp-frv \
d622 1
a622 3
CGEN_CPUS = arc fr30 frv ip2k m32c m32r mep mt openrisc xc16x xstormy16
@@CGEN_MAINT_FALSE@@ARC_DEPS = 
@@CGEN_MAINT_TRUE@@ARC_DEPS = stamp-arc
a1037 7
$(srcdir)/arc-desc.h $(srcdir)/arc-desc.c $(srcdir)/arc-opc.h $(srcdir)/arc-opc.c $(srcdir)/arc-ibld.c $(srcdir)/arc-opinst.c $(srcdir)/arc-asm.c $(srcdir)/arc-dis.c: $(ARC_DEPS)
	@@true
stamp-arc: $(CGENDEPS) $(srcdir)/../cpu/arc.cpu $(srcdir)/../cpu/arc.opc
	$(MAKE) run-cgen arch=arc prefix=arc options=opinst \
		archfile=$(srcdir)/../cpu/arc.cpu \
		opcfile=$(srcdir)/../cpu/arc.opc extrafiles=opinst

d1211 9
a1222 32
arc-asm.lo: arc-asm.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  arc-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h arc-opc.h \
  opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
arc-desc.lo: arc-desc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  arc-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h arc-opc.h \
  opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/xregex.h $(INCDIR)/xregex2.h
arc-dis.lo: arc-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  arc-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h arc-opc.h \
  opintl.h
arc-ibld.lo: arc-ibld.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(BFD_H) $(INCDIR)/symcat.h arc-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h \
  arc-opc.h opintl.h $(INCDIR)/safe-ctype.h
arc-opc.lo: arc-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  arc-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h arc-opc.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
arc-opinst.lo: arc-opinst.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  arc-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h arc-opc.h
@


1.138.6.2
log
@gdb/insight for ARCompact (from Richard Stuckey)
@
text
@d292 1
a292 1
	arcompact-dis.c \
a295 1
	arc-dis-cgen.c \
a298 1
	arc-ext.c \
d450 1
a453 1
	arc-dis-cgen.lo \
d455 1
a456 2
	arc-opc.lo \
	arc-ext.lo \
d668 2
a669 2
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign '; \
	      cd $(srcdir) && $(AUTOMAKE) --foreign  \
d674 1
a674 1
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  Makefile'; \
d676 1
a676 1
	  $(AUTOMAKE) --foreign  Makefile
d1055 1
d1229 3
d1244 1
a1244 12
arcompact-dis.lo: arcompact-dis.c $(INCDIR)/ansidecl.h $(INCDIR)/libiberty.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/arc.h \
  $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h \
  $(INCDIR)/elf/external.h $(INCDIR)/bfdlink.h $(INCDIR)/elf/arc.h \
  $(INCDIR)/elf/reloc-macros.h opintl.h arc-dis.h arc-ext.h
arc-dis.lo: arc-dis.c $(INCDIR)/ansidecl.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/arc.h $(BFDDIR)/elf-bfd.h \
  $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h \
  $(INCDIR)/bfdlink.h $(INCDIR)/elf/arc.h $(INCDIR)/elf/reloc-macros.h \
  opintl.h arc-dis.h arc-ext.h
arc-dis-cgen.lo: arc-dis-cgen.c sysdep.h config.h $(INCDIR)/ansidecl.h \
a1249 3
arc-opco.lo: arc-opc_codito.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/opcode/arc.h \
  opintl.h
d1255 5
a1263 3
arc-ext.lo: arc-ext.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h arc-ext.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
@


1.137
log
@* configure.in (WIN32LDFLAGS): Rename to SHARED_LDFLAGS.
  (WIN32LIBADD): Rename to SHARED_LIBADD
  (SHARED_DEPENDENCIES): New exported variable.
  (enable_shared): Add dependency upon libbfd.la for non-cygwin based shared library builds.
* Makefile.am (libopcodes_la_DEPENDENCIES): Append SHARED_DEPENDENCIES.
  (libopcodes_la_LIBADD): Rename WIN32LIBADD to SHARED_LIBADD.
  (libopcodes_la_LDFLAGS): Rename WIN32LDFLAGS to SHARED_LDFLAGS.
* configure: Regenerate.
* Makefile.in: Regenerate.
@
text
@a187 1
ac_ct_AR = @@ac_ct_AR@@
a189 2
ac_ct_RANLIB = @@ac_ct_RANLIB@@
ac_ct_STRIP = @@ac_ct_STRIP@@
d208 3
d218 1
d224 1
d230 1
d233 1
d657 2
a658 2
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign '; \
	      cd $(srcdir) && $(AUTOMAKE) --foreign  \
d663 1
a663 1
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  Makefile'; \
d665 1
a665 1
	  $(AUTOMAKE) --foreign  Makefile
d1130 1
a1130 1
i386-gen.o: i386-gen.c i386-opc.h
@


1.136
log
@2007-09-14  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
@
text
@d179 3
a186 2
WIN32LDFLAGS = @@WIN32LDFLAGS@@
WIN32LIBADD = @@WIN32LIBADD@@
d188 1
d191 2
a210 3
datarootdir = @@datarootdir@@
docdir = @@docdir@@
dvidir = @@dvidir@@
a217 1
htmldir = @@htmldir@@
a222 1
localedir = @@localedir@@
a227 1
pdfdir = @@pdfdir@@
a229 1
psdir = @@psdir@@
d590 5
a594 4
# if host != build.
libopcodes_la_DEPENDENCIES = $(OFILES)
libopcodes_la_LIBADD = $(OFILES) @@WIN32LIBADD@@
libopcodes_la_LDFLAGS = -release `cat ../bfd/libtool-soversion` @@WIN32LDFLAGS@@
d653 2
a654 2
	      echo ' cd $(srcdir) && $(AUTOMAKE) --cygnus '; \
	      cd $(srcdir) && $(AUTOMAKE) --cygnus  \
d659 1
a659 1
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --cygnus  Makefile'; \
d661 1
a661 1
	  $(AUTOMAKE) --cygnus  Makefile
@


1.135
log
@2007-09-08  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
@
text
@d1360 2
a1361 1
  opintl.h $(INCDIR)/opcode/i386.h
@


1.134
log
@gas/

2007-09-08  H.J. Lu  <hongjiu.lu@@intel.com>

	* configure.in (AC_CHECK_HEADERS): Add limits.h.
	* configure: Regenerated.
	* config.in: Likewise.

	* config/tc-i386.c: Include "opcodes/i386-init.h".
	(_i386_insn): Use i386_operand_type for types.
	(cpu_arch_flags): Updated to new types with bitfield.
	(cpu_arch_tune_flags): Likewise.
	(cpu_arch_isa_flags): Likewise.
	(cpu_arch): Likewise.
	(i386_align_code): Likewise.
	(set_code_flag): Likewise.
	(set_16bit_gcc_code_flag): Likewise.
	(set_cpu_arch): Likewise.
	(md_assemble): Likewise.
	(parse_insn): Likewise.
	(process_operands): Likewise.
	(output_branch): Likewise.
	(output_jump): Likewise.
	(parse_real_register): Likewise.
	(mode_from_disp_size): Likewise.
	(smallest_imm_type): Likewise.
	(pi): Likewise.
	(type_names): Likewise.
	(pt): Likewise.
	(pte): Likewise.
	(swap_2_operands): Likewise.
	(optimize_imm): Likewise.
	(optimize_disp): Likewise.
	(match_template): Likewise.
	(check_string): Likewise.
	(process_suffix): Likewise.
	(check_byte_reg): Likewise.
	(check_long_reg): Likewise.
	(check_qword_reg): Likewise.
	(check_word_reg): Likewise.
	(finalize_imm): Likewise.
	(build_modrm_byte): Likewise.
	(output_insn): Likewise.
	(disp_size): Likewise.
	(imm_size): Likewise.
	(output_disp): Likewise.
	(output_imm): Likewise.
	(gotrel): Likewise.
	(i386_immediate): Likewise.
	(i386_displacement): Likewise.
	(i386_index_check): Likewise.
	(i386_operand): Likewise.
	(parse_real_register): Likewise.
	(i386_intel_operand): Likewise.
	(intel_e09): Likewise.
	(intel_bracket_expr): Likewise.
	(intel_e11): Likewise.
	(cpu_arch_flags_not): New.
	(cpu_flags_check_x64): Likewise.
	(cpu_flags_all_zero): Likewise.
	(cpu_flags_not): Likewise.
	(i386_cpu_flags_biop): Likewise.
	(cpu_flags_biop): Likewise.
	(cpu_flags_match); Likewise.
	(acc32): New.
	(acc64): Likewise.
	(control): Likewise.
	(reg16_inoutportreg): Likewise.
	(disp16): Likewise.
	(disp32): Likewise.
	(disp32s): Likewise.
	(disp16_32): Likewise.
	(anydisp): Likewise.
	(baseindex): Likewise.
	(regxmm): Likewise.
	(imm8): Likewise.
	(imm8s): Likewise.
	(imm16): Likewise.
	(imm32): Likewise.
	(imm32s): Likewise.
	(imm64): Likewise.
	(imm16_32): Likewise.
	(imm16_32s): Likewise.
	(imm16_32_32s): Likewise.
	(operand_type): Likewise.
	(operand_type_check): Likewise.
	(operand_type_match): Likewise.
	(operand_type_register_match): Likewise.
	(update_imm): Likewise.
	(set_code_flag): Also update cpu_arch_flags_not.
	(set_16bit_gcc_code_flag): Likewise.
	(md_begin): Likewise.
	(parse_insn): Use cpu_flags_check_x64 to check 64bit support.
	Use cpu_flags_match to match instructions.
	(i386_target_format): Update cpu_arch_isa_flags and
	cpu_arch_tune_flags to i386_cpu_flags type with bitfield.
	(smallest_imm_type): Check cpu_arch_tune to tune for i486.
	(match_template): Don't initialize overlap0, overlap1,
	overlap2, overlap3 and operand_types.
	(process_suffix): Handle crc32 with 64bit register.
	(MATCH): Removed.
	(CONSISTENT_REGISTER_MATCH): Likewise.

	* config/tc-i386.h (arch_entry): Updated to i386_cpu_flags
	type.

opcodes/

2007-09-08  H.J. Lu  <hongjiu.lu@@intel.com>

	* configure.in (AC_CHECK_HEADERS): Add limits.h.
	* configure: Regenerated.
	* config.in: Likewise.

	* i386-gen.c: Include "sysdep.h" instead of <stdlib.h> and
	<string.h>.  Use xstrerror instead of strerror.
	(initializer): New.
	(cpu_flag_init): Likewise.
	(bitfield): Likewise.
	(BITFIELD): New.
	(cpu_flags): Likewise.
	(opcode_modifiers): Likewise.
	(operand_types): Likewise.
	(compare): Likewise.
	(set_cpu_flags): Likewise.
	(output_cpu_flags): Likewise.
	(process_i386_cpu_flags): Likewise.
	(output_opcode_modifier): Likewise.
	(process_i386_opcode_modifier): Likewise.
	(output_operand_type): Likewise.
	(process_i386_operand_type): Likewise.
	(set_bitfield): Likewise.
	(operand_type_init): Likewise.
	(process_i386_initializers): Likewise.
	(process_i386_opcodes): Call process_i386_opcode_modifier to
	process opcode_modifier.  Call process_i386_operand_type to
	process operand_types.
	(process_i386_registers): Call process_i386_operand_type to
	process reg_type.
	(main): Check unused bits in i386_cpu_flags and i386_operand_type.
	Sort cpu_flags, opcode_modifiers and operand_types.  Call
	process_i386_initializers.

	* i386-init.h: New.
	* i386-tbl.h: Regenerated.

	* i386-opc.h: Include <limits.h>.
	(CHAR_BIT): Define as 8 if not defined.
	(Cpu186): Changed to position of bitfiled.
	(Cpu286): Likewise.
	(Cpu386): Likewise.
	(Cpu486): Likewise.
	(Cpu586): Likewise.
	(Cpu686): Likewise.
	(CpuP4): Likewise.
	(CpuK6): Likewise.
	(CpuK8): Likewise.
	(CpuMMX): Likewise.
	(CpuMMX2): Likewise.
	(CpuSSE): Likewise.
	(CpuSSE2): Likewise.
	(Cpu3dnow): Likewise.
	(Cpu3dnowA): Likewise.
	(CpuSSE3): Likewise.
	(CpuPadLock): Likewise.
	(CpuSVME): Likewise.
	(CpuVMX): Likewise.
	(CpuSSSE3): Likewise.
	(CpuSSE4a): Likewise.
	(CpuABM): Likewise.
	(CpuSSE4_1): Likewise.
	(CpuSSE4_2): Likewise.
	(Cpu64): Likewise.
	(CpuNo64): Likewise.
	(D): Likewise.
	(W): Likewise.
	(Modrm): Likewise.
	(ShortForm): Likewise.
	(Jump): Likewise.
	(JumpDword): Likewise.
	(JumpByte): Likewise.
	(JumpInterSegment): Likewise.
	(FloatMF): Likewise.
	(FloatR): Likewise.
	(FloatD): Likewise.
	(Size16): Likewise.
	(Size32): Likewise.
	(Size64): Likewise.
	(IgnoreSize): Likewise.
	(DefaultSize): Likewise.
	(No_bSuf): Likewise.
	(No_wSuf): Likewise.
	(No_lSuf): Likewise.
	(No_sSuf): Likewise.
	(No_qSuf): Likewise.
	(No_xSuf): Likewise.
	(FWait): Likewise.
	(IsString): Likewise.
	(RegKludge): Likewise.
	(IsPrefix): Likewise.
	(ImmExt): Likewise.
	(NoRex64): Likewise.
	(Rex64): Likewise.
	(Ugh): Likewise.
	(Reg8): Likewise.
	(Reg16): Likewise.
	(Reg32): Likewise.
	(Reg64): Likewise.
	(FloatReg): Likewise.
	(RegMMX): Likewise.
	(RegXMM): Likewise.
	(Imm8): Likewise.
	(Imm8S): Likewise.
	(Imm16): Likewise.
	(Imm32): Likewise.
	(Imm32S): Likewise.
	(Imm64): Likewise.
	(Imm1): Likewise.
	(BaseIndex): Likewise.
	(Disp8): Likewise.
	(Disp16): Likewise.
	(Disp32): Likewise.
	(Disp32S): Likewise.
	(Disp64): Likewise.
	(InOutPortReg): Likewise.
	(ShiftCount): Likewise.
	(Control): Likewise.
	(Debug): Likewise.
	(Test): Likewise.
	(SReg2): Likewise.
	(SReg3): Likewise.
	(Acc): Likewise.
	(FloatAcc): Likewise.
	(JumpAbsolute): Likewise.
	(EsSeg): Likewise.
	(RegMem): Likewise.
	(OTMax): Likewise.
	(Reg): Commented out.
	(WordReg): Likewise.
	(ImplicitRegister): Likewise.
	(Imm): Likewise.
	(EncImm): Likewise.
	(Disp): Likewise.
	(AnyMem): Likewise.
	(LLongMem): Likewise.
	(LongMem): Likewise.
	(ShortMem): Likewise.
	(WordMem): Likewise.
	(ByteMem): Likewise.
	(CpuMax): New
	(CpuLM): Likewise.
	(CpuNumOfUints): Likewise.
	(CpuNumOfBits): Likewise.
	(CpuUnused): Likewise.
	(OTNumOfUints): Likewise.
	(OTNumOfBits): Likewise.
	(OTUnused): Likewise.
	(i386_cpu_flags): New type.
	(i386_operand_type): Likewise.
	(i386_opcode_modifier): Likewise.
	(CpuSledgehammer): Removed.
	(CpuSSE4): Likewise.
	(CpuUnknownFlags): Likewise.
	(Reg): Likewise.
	(WordReg): Likewise.
	(ImplicitRegister): Likewise.
	(Imm): Likewise.
	(EncImm): Likewise.
	(Disp): Likewise.
	(AnyMem): Likewise.
	(LLongMem): Likewise.
	(LongMem): Likewise.
	(ShortMem): Likewise.
	(WordMem): Likewise.
	(ByteMem): Likewise.
	(template): Use i386_cpu_flags for cpu_flags, use
	i386_opcode_modifier for opcode_modifier, use
	i386_operand_type for operand_types.
	(reg_entry): Use i386_operand_type for reg_type.

	* Makefile.am (HFILES): Add i386-init.h.
	($(srcdir)/i386-init.h): New rule.
	($(srcdir)/i386-tbl.h): Depend on $(srcdir)/i386-init.h
	instead.
	* Makefile.in: Regenerated.
@
text
@d1358 3
a1360 3
i386-dis.lo: i386-dis.c $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h sysdep.h config.h \
  $(INCDIR)/ansidecl.h opintl.h $(INCDIR)/opcode/i386.h
d1364 3
a1366 3
i386-gen.lo: i386-gen.c $(INCDIR)/getopt.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h i386-opc.h \
  $(INCDIR)/opcode/i386.h
@


1.133
log
@2007-09-06  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386-gen.c (table): New.
	(process_i386_opcodes): Report errno when faied to open
	i386-opc.tbl.  Output opcodes to table.  Close i386-opc.tbl
	before return.
	(process_i386_registers): Report errno when faied to open
	i386-reg.tbl.  Output opcodes to table.  Close i386-reg.tbl
	before return.
	(main): Open i386-tbl.h for output.

	* Makefile.am ($(srcdir)/i386-tbl.h): Remove " > $@@".
	* Makefile.in: Regenerated.
@
text
@d263 1
d1130 4
a1133 1
$(srcdir)/i386-tbl.h: @@MAINT@@ i386-gen i386-opc.tbl i386-reg.tbl
@


1.132
log
@2007-08-31  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.am (INCLUDES): Remove -D_GNU_SOURCE.
	* Makefile.in: Regenerated.

	* configure.in (AC_GNU_SOURCE): Added.
	(AC_PROG_CC): Moved before AC_GNU_SOURCE.
	(AC_CHECK_DECLS): Add stpcpy.
	* configure: Regenerated.
	* config.in: Likewise.

	* i386-dis.c: Include "sysdep.h" before "dis-asm.h".

	* sysdep.h (stpcpy): New.
@
text
@d1130 1
a1130 1
	./i386-gen --srcdir $(srcdir) > $@@
@


1.131
log
@2007-07-06  Mark Kettenis  <kettenis@@gnu.org>
	    H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.am (i386-tbl.h): Add $(srcdir)/ to target.
	(ia64-asmtab.c): Likewise.
	* Makefile.in: Regenerate.
@
text
@d586 1
a586 1
INCLUDES = -D_GNU_SOURCE -I. -I$(srcdir) -I../bfd -I$(INCDIR) -I$(BFDDIR) @@HDEFINES@@ @@INCINTL@@
@


1.130
log
@Change source files over to GPLv3.
@
text
@d1 1
a1 1
# Makefile.in generated by automake 1.9.2 from Makefile.am.
d5 1
a5 1
# 2003, 2004  Free Software Foundation, Inc.
a17 2
SOURCES = libopcodes.c $(libopcodes_la_SOURCES)

d89 1
a89 1
LTCOMPILE = $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) \
d93 1
a93 1
LINK = $(LIBTOOL) --mode=link --tag=CC $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
a186 1
ac_ct_AR = @@ac_ct_AR@@
a188 2
ac_ct_RANLIB = @@ac_ct_RANLIB@@
ac_ct_STRIP = @@ac_ct_STRIP@@
d207 3
d217 1
d223 1
d229 1
d232 1
d654 2
a655 2
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign '; \
	      cd $(srcdir) && $(AUTOMAKE) --foreign  \
d660 1
a660 1
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  Makefile'; \
d662 1
a662 1
	  $(AUTOMAKE) --foreign  Makefile
d747 7
a753 1
	@@set fnord $$MAKEFLAGS; amf=$$2; \
d765 1
a765 1
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
d773 7
a779 1
	@@set fnord $$MAKEFLAGS; amf=$$2; \
d800 1
a800 1
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
d1129 2
a1130 2
i386-tbl.h: @@MAINT@@ i386-gen i386-opc.tbl i386-reg.tbl
	./i386-gen --srcdir $(srcdir) > $(srcdir)/i386-tbl.h
d1138 3
a1140 2
ia64-asmtab.c: @@MAINT@@ ia64-gen ia64-ic.tbl ia64-raw.tbl ia64-waw.tbl ia64-war.tbl
	./ia64-gen --srcdir $(srcdir) > $(srcdir)/ia64-asmtab.c
@


1.129
log
@Regenerate files.
@
text
@d1 1
a1 1
# Makefile.in generated by automake 1.9.6 from Makefile.am.
d5 1
a5 1
# 2003, 2004, 2005  Free Software Foundation, Inc.
d18 2
d91 1
a91 1
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
d95 1
a95 1
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
d745 1
a745 7
	@@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
d757 1
a757 1
	  || eval $$failcom; \
d765 1
a765 7
	@@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
d786 1
a786 1
	  || eval $$failcom; \
@


1.128
log
@bfd/

2007-06-30  H.J. Lu  <hongjiu.lu@@intel.com>

	* aclocal.m4: Regenerated.
	* Makefile.in: Likewise.

bfd/doc/

2007-06-30  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.in: Likewise.

binutils/

2007-06-30  H.J. Lu  <hongjiu.lu@@intel.com>

	* aclocal.m4: Regenerated.
	* doc/Makefile.in: Likewise.
	* Makefile.in: Likewise.

gas/

2007-06-30  H.J. Lu  <hongjiu.lu@@intel.com>

	* aclocal.m4: Regenerated.
	* doc/Makefile.in: Likewise.
	* Makefile.in: Likewise.

gprof/

2007-06-30  H.J. Lu  <hongjiu.lu@@intel.com>

	* aclocal.m4: Regenerated.
	* Makefile.in: Likewise.

ld/

2007-06-30  H.J. Lu  <hongjiu.lu@@intel.com>

	* aclocal.m4: Regenerated.
	* Makefile.in: Likewise.

opcodes/

2007-06-30  H.J. Lu  <hongjiu.lu@@intel.com>

	* aclocal.m4: Regenerated.
	* Makefile.in: Likewise.
@
text
@d187 1
d190 2
a209 3
datarootdir = @@datarootdir@@
docdir = @@docdir@@
dvidir = @@dvidir@@
a216 1
htmldir = @@htmldir@@
a221 1
localedir = @@localedir@@
a226 1
pdfdir = @@pdfdir@@
a228 1
psdir = @@psdir@@
d650 2
a651 2
	      echo ' cd $(srcdir) && $(AUTOMAKE) --cygnus '; \
	      cd $(srcdir) && $(AUTOMAKE) --cygnus  \
d656 1
a656 1
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --cygnus  Makefile'; \
d658 1
a658 1
	  $(AUTOMAKE) --cygnus  Makefile
d1242 2
a1243 1
  $(INCDIR)/opcode/cr16.h
@


1.127
log
@New port: National Semiconductor's CR16
@
text
@a186 1
ac_ct_AR = @@ac_ct_AR@@
a188 2
ac_ct_RANLIB = @@ac_ct_RANLIB@@
ac_ct_STRIP = @@ac_ct_STRIP@@
d207 3
d217 1
d223 1
d229 1
d232 1
d654 2
a655 2
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign '; \
	      cd $(srcdir) && $(AUTOMAKE) --foreign  \
d660 1
a660 1
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  Makefile'; \
d662 1
a662 1
	  $(AUTOMAKE) --foreign  Makefile
d1801 3
@


1.126
log
@2007-06-28  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.am (HFILES): Add i386-opc.h and i386-tbl.h.
	(CFILES): Add i386-gen.c.
	(i386-gen): New rule.
	(i386-gen.o): Likewise.
	(i386-tbl.h): Likewise.
	Run "make dep-am".
	* Makefile.in: Regenerated.

	* i386-gen.c: New file.
	* i386-opc.tbl: Likewise.
	* i386-reg.tbl: Likewise.
	* i386-tbl.h: Likewise.

	* i386-opc.c: Include "i386-tbl.h".
	(i386_optab): Removed.
	(i386_regtab): Likewise.
	(i386_regtab_size): Likewise.
@
text
@d295 2
d449 2
d650 2
a651 2
	      echo ' cd $(srcdir) && $(AUTOMAKE) --cygnus '; \
	      cd $(srcdir) && $(AUTOMAKE) --cygnus  \
d656 1
a656 1
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --cygnus  Makefile'; \
d658 1
a658 1
	  $(AUTOMAKE) --cygnus  Makefile
d1240 5
@


1.125
log
@bfd/

2007-06-14  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.am (ACLOCAL_AMFLAGS): Add -I . -I ../config.

	* acinclude.m4: Don't include m4 files. Remove libtool
	kludge.

	* Makefile.in: Regenerated.
	* doc/Makefile.in: Likewise.
	* aclocal.m4: Likewise.
	* configure: Likewise.

binutils/

2007-06-14  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.am (ACLOCAL_AMFLAGS): Add -I ../config -I ../bfd.

	* acinclude.m4: Removed.

	* Makefile.in: Regenerated.
	* aclocal.m4: Likewise.
	* configure: Likewise.

gas/

2007-06-14  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.am (ACLOCAL_AMFLAGS): Add -I ../config -I ../bfd.

	* acinclude.m4: Don't include m4 files.
	(BFD_BINARY_FOPEN): Removed.
	Remove libtool kludge.

	* Makefile.in: Regenerated.
	* doc/Makefile.in: Likewise.
	* aclocal.m4: Likewise.
	* configure: Likewise.

gprof/

2007-06-14  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.am (ACLOCAL_AMFLAGS): Add -I ../config -I ../bfd.

	* acinclude.m4: Removed.

	* Makefile.in: Regenerated.
	* aclocal.m4: Likewise.
	* configure: Likewise.

ld/

2007-06-14  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.am (ACLOCAL_AMFLAGS): Add -I ../config -I ../bfd.

	* acinclude.m4: Removed.

	* Makefile.in: Regenerated.
	* aclocal.m4: Likewise.
	* configure: Likewise.

opcodes/

2007-06-14  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.am (ACLOCAL_AMFLAGS): Add -I ../config -I ../bfd.

	* acinclude.m4: Removed.

	* Makefile.in: Regenerated.
	* doc/Makefile.in: Likewise.
	* aclocal.m4: Likewise.
	* configure: Likewise.
@
text
@d259 2
d324 1
d1116 8
d1344 3
a1787 3
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
@


1.124
log
@	* regenerated files from updating libtool.
@
text
@d49 3
a51 4
am__aclocal_m4_deps = $(top_srcdir)/../ltoptions.m4 \
	$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \
	$(top_srcdir)/acinclude.m4 $(top_srcdir)/../bfd/acinclude.m4 \
	$(top_srcdir)/../config/acx.m4 \
d53 1
d56 2
a57 2
	$(top_srcdir)/../config/stdint.m4 $(top_srcdir)/../bfd/bfd.m4 \
	$(top_srcdir)/../bfd/warning.m4 $(top_srcdir)/../libtool.m4 \
d239 1
a239 1
ACLOCAL_AMFLAGS = -I ..
@


1.123
log
@
bfd/
	Many files: Include sysdep.h before bfd.h.
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
binutils/
	* bucumm.h: Split off host dependencies to..
	* sysdep.h: ..here.
	Many files: Include sysdep.h.  Remove duplicate headers and reorder.
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
ld/
	Many files: Include sysdep.h first.  Remove duplicate headers.
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
opcodes/
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
	* ns32k-dis.c: Include sysdep.h first.
@
text
@d49 3
a51 2
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/../bfd/acinclude.m4 \
d89 1
a89 1
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) \
d93 1
a93 1
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
d129 1
d136 1
d139 1
d149 1
d165 1
d177 1
d189 1
d223 1
d643 2
a644 2
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign '; \
	      cd $(srcdir) && $(AUTOMAKE) --foreign  \
d649 1
a649 1
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  Makefile'; \
d651 1
a651 1
	  $(AUTOMAKE) --foreign  Makefile
@


1.122
log
@	* cgen-types.h: Include bfd_stdint.h, not stdint.h.
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
@
text
@d1581 3
a1583 4
ns32k-dis.lo: ns32k-dis.c $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/opcode/ns32k.h \
  opintl.h
@


1.121
log
@	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
	* po/POTFILES.in: Regenerate.
@
text
@d55 3
a57 2
	$(top_srcdir)/../bfd/bfd.m4 $(top_srcdir)/../bfd/warning.m4 \
	$(top_srcdir)/../libtool.m4 $(top_srcdir)/configure.in
d1414 3
a1416 3
  cgen-types.h cgen-ops.h opintl.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/safe-ctype.h
d1421 3
a1423 2
  cgen-types.h cgen-ops.h opintl.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h
d1429 4
a1432 3
  cgen-types.h cgen-ops.h opintl.h $(INCDIR)/elf/m32c.h \
  $(INCDIR)/elf/reloc-macros.h $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h \
  $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h $(INCDIR)/bfdlink.h
d1437 2
a1438 1
  m32c-opc.h cgen-types.h cgen-ops.h opintl.h $(INCDIR)/safe-ctype.h
d1443 2
a1444 1
  cgen-types.h cgen-ops.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
@


1.120
log
@2007-04-18  Matthias Klose  <doko@@ubuntu.com>

	* Makefile.am (libbfd_la_LDFLAGS): Use bfd soversion.
	(bfdver.h): Use the date in non-release builds for the soversion.
	* Makefile.in: Regenerate.

2007-04-18  Matthias Klose  <doko@@ubuntu.com>

	* Makefile.am (libopcodes_la_LDFLAGS): Use bfd soversion.
	* Makefile.in: Regenerate.
@
text
@d633 2
a634 2
	      echo ' cd $(srcdir) && $(AUTOMAKE) --cygnus '; \
	      cd $(srcdir) && $(AUTOMAKE) --cygnus  \
d639 1
a639 1
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --cygnus  Makefile'; \
d641 1
a641 1
	  $(AUTOMAKE) --cygnus  Makefile
d1322 2
a1323 1
  i386-opc.h $(INCDIR)/opcode/i386.h
@


1.119
log
@	* Makefile.am: Add ACLOCAL_AMFLAGS.
	* Makefile.in: Regenerate.
@
text
@d574 1
a574 1
libopcodes_la_LDFLAGS = -release $(VERSION) @@WIN32LDFLAGS@@
@


1.118
log
@gas/

2007-03-15  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerated.

	* config/tc-i386.c: Include "opcodes/i386-opc.h" instead of
	"opcode/i386.h".
	(md_begin): Check reg_name != NULL for the last entry in
	i386_regtab.

	* config/tc-i386.h: Move many entries to opcode/i386.h and
	opcodes/i386-opc.h.

	* configure.in (need_opcodes): Set true for i386.
	* configure: Regenerated.

include/opcode/

2007-03-15  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386.h: Add entries from config/tc-i386.h and move tables
	to opcodes/i386-opc.h.

opcodes/

2007-03-15  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.am (CFILES): Add i386-opc.c.
	(ALL_MACHINES): Add i386-opc.lo.
	Run "make dep-am".
	* Makefile.in: Regenerated.

	* configure.in: Add i386-opc.lo for bfd_i386_arch.
	* configure: Regenerated.

	* i386-dis.c: Include "opcode/i386.h".
	(MAXLEN): Renamed to MAX_MNEM_SIZE. Remove definition.
	(FWAIT_OPCODE): Remove definition.
	(UNIXWARE_COMPAT): Renamed to SYSV386_COMPAT. Remove definition.
	(MAX_OPERANDS): Remove definition.

	* i386-opc.c: New file.
	* i386-opc.h: Likewise.
@
text
@d229 1
@


1.117
log
@2007-03-15  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.in: Regenerated.
@
text
@d310 1
d456 1
d1319 3
a1321 1
  $(INCDIR)/ansidecl.h opintl.h
@


1.116
log
@	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
	* po/POTFILES.in: Regenerate.
@
text
@d630 2
a631 2
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign '; \
	      cd $(srcdir) && $(AUTOMAKE) --foreign  \
d636 1
a636 1
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  Makefile'; \
d638 1
a638 1
	  $(AUTOMAKE) --foreign  Makefile
@


1.115
log
@2007-02-05  Dave Brolley  <brolley@@redhat.com>

        * mep-*: New support for Toshiba Media Processor (MeP).
        * Makefile.am: Add support for MeP.
        * configure.in: Likewise.
        * disassemble.c: Likewise.
        * Makefile.in: Regenerated.
        * configure: Regenerated.
@
text
@d1487 31
a1517 17
mep-asm.lo: mep-asm.c sysdep.h config.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h mep-desc.h \
  $(INCDIR)/opcode/cgen.h mep-opc.h opintl.h
mep-desc.lo: mep-desc.c sysdep.h config.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h mep-desc.h \
  $(INCDIR)/opcode/cgen.h mep-opc.h opintl.h
mep-dis.lo: mep-dis.c sysdep.h config.h $(INCDIR)/dis-asm.h \
  $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h mep-desc.h $(INCDIR)/opcode/cgen.h \
  mep-opc.h opintl.h
mep-ibld.lo: mep-ibld.c sysdep.h config.h $(INCDIR)/dis-asm.h \
  $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h mep-desc.h $(INCDIR)/opcode/cgen.h \
  mep-opc.h opintl.h
mep-opc.lo: mep-opc.c sysdep.h config.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h mep-desc.h \
  $(INCDIR)/opcode/cgen.h mep-opc.h
@


1.114
log
@New Cell SPU port.
@
text
@d255 1
d350 5
d493 5
d581 1
a581 1
	stamp-openrisc stamp-iq2000 stamp-mt stamp-xstormy16 stamp-xc16x\
d595 1
a595 1
CGEN_CPUS = fr30 frv ip2k m32c m32r mt openrisc xc16x xstormy16
d606 2
d1060 6
d1487 17
@


1.113
log
@Add support for Score target.
@
text
@d386 2
d520 2
d1148 2
a1149 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/alpha.h
d1151 2
a1152 2
  $(INCDIR)/opcode/alpha.h $(BFD_H) $(INCDIR)/symcat.h \
  opintl.h
d1154 5
a1158 4
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/arc.h \
  $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h \
  $(INCDIR)/elf/external.h $(INCDIR)/bfdlink.h $(INCDIR)/elf/arc.h \
  $(INCDIR)/elf/reloc-macros.h opintl.h arc-dis.h arc-ext.h
d1160 1
a1160 1
  $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/arc.h \
d1163 2
a1164 1
  $(BFD_H) $(INCDIR)/symcat.h arc-ext.h $(INCDIR)/libiberty.h
d1166 6
a1171 5
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/arm.h \
  opintl.h $(INCDIR)/safe-ctype.h $(INCDIR)/floatformat.h \
  $(INCDIR)/coff/internal.h $(BFDDIR)/libcoff.h $(INCDIR)/bfdlink.h \
  $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h \
  $(INCDIR)/elf/external.h $(INCDIR)/elf/arm.h $(INCDIR)/elf/reloc-macros.h
d1173 3
a1175 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h opintl.h \
  $(INCDIR)/libiberty.h $(INCDIR)/opcode/avr.h
d1179 3
a1181 2
  $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h $(BFD_H) \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h \
d1186 3
a1188 2
  $(INCDIR)/libiberty.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/opcode/cgen-bitset.h
d1190 3
a1192 2
  $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h $(BFD_H) \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen.h $(INCDIR)/opcode/cgen-bitset.h
d1195 2
a1196 1
  $(INCDIR)/opcode/cris.h $(INCDIR)/libiberty.h
d1200 1
a1200 1
  $(INCDIR)/opcode/crx.h
d1205 1
a1205 1
  $(INCDIR)/symcat.h
d1210 1
a1210 1
  $(INCDIR)/symcat.h opintl.h
d1214 2
a1215 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/dlx.h
d1217 2
a1218 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h opintl.h
d1220 2
a1221 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h
d1223 1
a1223 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h
d1225 5
a1229 3
  $(BFD_H) $(INCDIR)/symcat.h fr30-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h fr30-opc.h opintl.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
d1231 4
a1234 2
  $(BFD_H) $(INCDIR)/symcat.h fr30-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h fr30-opc.h opintl.h $(INCDIR)/libiberty.h \
d1237 2
a1238 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
d1240 2
a1241 1
  fr30-opc.h opintl.h
d1243 3
a1245 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h fr30-desc.h \
  $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
d1248 4
a1251 2
  $(BFD_H) $(INCDIR)/symcat.h fr30-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h fr30-opc.h $(INCDIR)/libiberty.h
d1253 5
a1257 3
  $(BFD_H) $(INCDIR)/symcat.h frv-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h frv-opc.h opintl.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
d1259 4
a1262 2
  $(BFD_H) $(INCDIR)/symcat.h frv-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h frv-opc.h opintl.h $(INCDIR)/libiberty.h \
d1265 2
a1266 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
d1268 2
a1269 1
  frv-opc.h opintl.h
d1271 3
a1273 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h frv-desc.h \
  $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
d1276 5
a1280 3
  $(BFD_H) $(INCDIR)/symcat.h frv-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h frv-opc.h $(INCDIR)/libiberty.h \
  $(INCDIR)/elf/frv.h $(INCDIR)/elf/reloc-macros.h
d1283 2
a1284 1
  $(INCDIR)/symcat.h opintl.h $(INCDIR)/libiberty.h
d1286 2
a1287 2
  h8500-opc.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h \
  opintl.h
d1289 2
a1290 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(BFDDIR)/libhppa.h \
  $(INCDIR)/opcode/hppa.h
d1292 2
a1293 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/i370.h
d1298 1
a1298 1
  opintl.h
d1302 1
a1302 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h
d1304 2
a1305 1
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/opcode/ia64.h
d1318 3
a1320 2
  config.h $(INCDIR)/libiberty.h ia64-asmtab.h $(INCDIR)/opcode/ia64.h \
  $(BFD_H) $(INCDIR)/symcat.h ia64-asmtab.c
d1322 5
a1326 4
  $(INCDIR)/safe-ctype.h sysdep.h config.h $(INCDIR)/getopt.h \
  ia64-opc.h $(INCDIR)/opcode/ia64.h $(BFD_H) $(INCDIR)/symcat.h \
  ia64-opc-a.c ia64-opc-i.c ia64-opc-m.c ia64-opc-b.c \
  ia64-opc-f.c ia64-opc-x.c ia64-opc-d.c
d1329 5
a1333 3
  $(BFD_H) $(INCDIR)/symcat.h ip2k-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h ip2k-opc.h opintl.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
d1335 4
a1338 2
  $(BFD_H) $(INCDIR)/symcat.h ip2k-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h ip2k-opc.h opintl.h $(INCDIR)/libiberty.h \
d1341 2
a1342 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
d1344 2
a1345 1
  ip2k-opc.h opintl.h
d1347 3
a1349 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h ip2k-desc.h \
  $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
d1352 4
a1355 3
  $(BFD_H) $(INCDIR)/symcat.h ip2k-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h ip2k-opc.h $(INCDIR)/libiberty.h \
  $(INCDIR)/safe-ctype.h
d1357 5
a1361 3
  $(BFD_H) $(INCDIR)/symcat.h iq2000-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h iq2000-opc.h opintl.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
d1363 4
a1366 2
  $(BFD_H) $(INCDIR)/symcat.h iq2000-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h iq2000-opc.h opintl.h $(INCDIR)/libiberty.h \
d1369 2
a1370 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
d1372 2
a1373 1
  iq2000-opc.h opintl.h
d1375 3
a1377 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h iq2000-desc.h \
  $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
d1380 4
a1383 2
  $(BFD_H) $(INCDIR)/symcat.h iq2000-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h iq2000-opc.h $(INCDIR)/libiberty.h
d1385 5
a1389 3
  $(BFD_H) $(INCDIR)/symcat.h m32c-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h m32c-opc.h cgen-types.h cgen-ops.h \
  opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h \
d1392 5
a1396 3
  $(BFD_H) $(INCDIR)/symcat.h m32c-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h m32c-opc.h cgen-types.h cgen-ops.h \
  opintl.h $(INCDIR)/libiberty.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h
d1398 2
a1399 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
d1401 2
a1402 1
  m32c-opc.h cgen-types.h cgen-ops.h opintl.h $(INCDIR)/elf/m32c.h \
d1406 3
a1408 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h m32c-desc.h \
  $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
d1411 4
a1414 3
  $(BFD_H) $(INCDIR)/symcat.h m32c-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h m32c-opc.h cgen-types.h cgen-ops.h \
  $(INCDIR)/libiberty.h
d1416 5
a1420 3
  $(BFD_H) $(INCDIR)/symcat.h m32r-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h m32r-opc.h opintl.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
d1422 4
a1425 2
  $(BFD_H) $(INCDIR)/symcat.h m32r-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h m32r-opc.h opintl.h $(INCDIR)/libiberty.h \
d1428 2
a1429 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
d1431 2
a1432 1
  m32r-opc.h opintl.h
d1434 3
a1436 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h m32r-desc.h \
  $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
d1439 4
a1442 2
  $(BFD_H) $(INCDIR)/symcat.h m32r-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h m32r-opc.h $(INCDIR)/libiberty.h
d1444 3
a1446 2
  $(BFD_H) $(INCDIR)/symcat.h m32r-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h m32r-opc.h
d1449 1
a1449 1
  $(INCDIR)/symcat.h
d1453 3
a1455 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/floatformat.h \
  $(INCDIR)/libiberty.h opintl.h $(INCDIR)/opcode/m68k.h
d1459 3
a1461 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/m88k.h \
  opintl.h $(INCDIR)/libiberty.h
d1463 2
a1464 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/maxq.h
d1466 2
a1467 1
  mcore-opc.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h
d1469 5
a1473 4
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/mips.h opintl.h $(BFDDIR)/elf-bfd.h \
  $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h \
  $(INCDIR)/bfdlink.h $(INCDIR)/elf/mips.h $(INCDIR)/elf/reloc-macros.h
d1480 1
a1480 1
  $(INCDIR)/symcat.h opintl.h
d1485 1
a1485 1
  $(INCDIR)/symcat.h opintl.h
d1490 1
a1490 1
  opintl.h
d1493 5
a1497 3
  $(BFD_H) $(INCDIR)/symcat.h mt-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h mt-opc.h opintl.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
d1499 4
a1502 2
  $(BFD_H) $(INCDIR)/symcat.h mt-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h mt-opc.h opintl.h $(INCDIR)/libiberty.h \
d1505 2
a1506 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
d1508 2
a1509 1
  mt-opc.h opintl.h
d1511 3
a1513 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h mt-desc.h \
  $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
d1516 4
a1519 3
  $(BFD_H) $(INCDIR)/symcat.h mt-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h mt-opc.h $(INCDIR)/libiberty.h \
  $(INCDIR)/safe-ctype.h
d1521 3
a1523 2
  $(INCDIR)/symcat.h sysdep.h config.h $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/ns32k.h opintl.h
d1525 5
a1529 3
  $(BFD_H) $(INCDIR)/symcat.h openrisc-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h openrisc-opc.h opintl.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
d1531 2
a1532 1
  $(INCDIR)/ansidecl.h $(BFD_H) $(INCDIR)/symcat.h openrisc-desc.h \
d1534 3
a1536 2
  openrisc-opc.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h
d1538 2
a1539 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
d1541 2
a1542 1
  openrisc-opc.h opintl.h
d1544 7
a1550 1
  $(INCDIR)/ansidecl.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h \
d1552 2
a1553 4
  openrisc-opc.h opintl.h $(INCDIR)/safe-ctype.h
openrisc-opc.lo: openrisc-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h openrisc-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h openrisc-opc.h $(INCDIR)/libiberty.h
d1560 2
a1561 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/pdp11.h
d1565 1
a1565 1
  $(INCDIR)/symcat.h
d1569 2
a1570 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/ppc.h
d1577 2
a1578 2
  config.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/s390.h
d1580 4
a1583 4
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h score-opc.h \
  $(INCDIR)/bfdlink.h opintl.h $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h \
  $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h $(INCDIR)/elf/score.h \
  $(INCDIR)/elf/reloc-macros.h
d1585 2
a1586 1
  sh-opc.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/dis-asm.h
d1589 4
a1592 4
  sh64-opc.h $(INCDIR)/libiberty.h $(BFDDIR)/elf-bfd.h \
  $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h \
  $(INCDIR)/bfdlink.h $(INCDIR)/elf/sh.h $(INCDIR)/elf/reloc-macros.h \
  $(BFDDIR)/elf32-sh64.h
d1595 3
a1597 2
  $(INCDIR)/opcode/sparc.h $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/symcat.h $(INCDIR)/libiberty.h opintl.h
d1599 6
a1604 1
  $(INCDIR)/opcode/sparc.h
d1606 2
a1607 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/tic30.h
d1609 2
a1610 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/tic4x.h
d1612 2
a1613 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/tic54x.h \
  $(INCDIR)/coff/tic54x.h $(INCDIR)/coff/ti.h
d1615 2
a1616 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/tic54x.h
d1619 1
a1619 1
  $(INCDIR)/symcat.h
d1624 1
a1624 1
  $(INCDIR)/symcat.h opintl.h
d1629 3
a1632 2
w65-dis.lo: w65-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  w65-opc.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h
d1634 5
a1638 3
  $(BFD_H) $(INCDIR)/symcat.h xc16x-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h xc16x-opc.h opintl.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
d1640 4
a1643 2
  $(BFD_H) $(INCDIR)/symcat.h xc16x-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h xc16x-opc.h opintl.h $(INCDIR)/libiberty.h \
d1646 2
a1647 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
d1649 2
a1650 1
  xc16x-opc.h opintl.h
d1652 3
a1654 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h xc16x-desc.h \
  $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
d1657 4
a1660 2
  $(BFD_H) $(INCDIR)/symcat.h xc16x-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h xc16x-opc.h $(INCDIR)/libiberty.h
d1662 2
a1663 1
  $(INCDIR)/ansidecl.h $(BFD_H) $(INCDIR)/symcat.h xstormy16-desc.h \
d1665 3
a1667 2
  xstormy16-opc.h opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h \
  $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
d1669 2
a1670 1
  $(INCDIR)/ansidecl.h $(BFD_H) $(INCDIR)/symcat.h xstormy16-desc.h \
d1672 3
a1674 2
  xstormy16-opc.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h
d1676 5
a1680 3
  $(INCDIR)/ansidecl.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h \
  $(INCDIR)/libiberty.h xstormy16-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h xstormy16-opc.h opintl.h
d1682 5
a1686 3
  $(INCDIR)/ansidecl.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h \
  xstormy16-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  xstormy16-opc.h opintl.h $(INCDIR)/safe-ctype.h
d1688 2
a1689 1
  $(INCDIR)/ansidecl.h $(BFD_H) $(INCDIR)/symcat.h xstormy16-desc.h \
d1691 2
a1692 1
  xstormy16-opc.h $(INCDIR)/libiberty.h
d1694 3
a1696 2
  $(INCDIR)/ansidecl.h $(INCDIR)/libiberty.h sysdep.h \
  config.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h
d1698 1
a1698 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h
d1700 2
a1701 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h z8k-opc.h
d1703 1
a1703 1
  $(INCDIR)/libiberty.h
@


1.112
log
@	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
	* config.in: Regenerate.
@
text
@d257 1
d380 1
d512 1
d1479 5
@


1.111
log
@Configury changes: update src repository (binutils, gdb, and rda) to use
config/gettext-sister.m4 instead of the old gettext.m4.  Regenerate all
affected autotools files.  Include intl in gdb releases again.
@
text
@d1157 4
a1160 4
  opintl.h $(INCDIR)/safe-ctype.h $(INCDIR)/coff/internal.h \
  $(BFDDIR)/libcoff.h $(INCDIR)/bfdlink.h $(BFDDIR)/elf-bfd.h \
  $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h \
  $(INCDIR)/elf/arm.h $(INCDIR)/elf/reloc-macros.h
@


1.110
log
@	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
@
text
@d1 1
a1 1
# Makefile.in generated by automake 1.9.5 from Makefile.am.
a17 2
SOURCES = libopcodes.c $(libopcodes_la_SOURCES)

d51 6
a56 3
	$(top_srcdir)/../config/acx.m4 $(top_srcdir)/../bfd/bfd.m4 \
	$(top_srcdir)/../bfd/warning.m4 $(top_srcdir)/../libtool.m4 \
	$(top_srcdir)/../gettext.m4 $(top_srcdir)/configure.in
a103 1
ALLOCA = @@ALLOCA@@
d133 1
a133 1
GMOFILES = @@GMOFILES@@
a134 2
GT_NO = @@GT_NO@@
GT_YES = @@GT_YES@@
d136 1
a136 1
INCLUDE_LOCALE_H = @@INCLUDE_LOCALE_H@@
a143 3
INTLDEPS = @@INTLDEPS@@
INTLLIBS = @@INTLLIBS@@
INTLOBJS = @@INTLOBJS@@
d145 2
d158 1
a167 1
POFILES = @@POFILES@@
a172 1
USE_INCLUDED_LIBINTL = @@USE_INCLUDED_LIBINTL@@
a210 1
l = @@l@@
d544 1
a544 1
INCLUDES = -D_GNU_SOURCE -I. -I$(srcdir) -I../bfd -I$(INCDIR) -I$(BFDDIR) @@HDEFINES@@ -I$(srcdir)/../intl -I../intl
@


1.109
log
@
2006-04-06  Carlos O'Donell <carlos@@codesourcery.com>

	* Makefile.tpl: Add install-html target.
	* Makefile.def: Add install-html target.
	* Makefile.in: Regenerate.
	* configure.in: Add --with-datarootdir, --with-docdir,
	and --with-htmldir options.
	* configure: Regenerate.

bfd/

2006-04-06  Carlos O'Donell  <carlos@@codesourcery.com>

	* po/Make-in: Add install-html target.
	* Makefile.am: Rename docdir to bfddocdir. Add datarootdir, docdir
	htmldir. Add install-html and install-html-recursive targets.
	* Makefile.in: Regenerate.
	* configure.in: AC_SUBST for datarootdir, docdir and htmldir.
	* configure: Regenerate.

bfd/doc/

2006-04-06  Carlos O'Donell  <carlos@@codesourcery.com>

	* Makefile.am: Add install-html and install-html-am targets.
	Define datarootdir, docdir and htmldir.
	* Makefile.in: Regenerate.

binutils/

2006-04-06  Carlos O'Donell  <carlos@@codesourcery.com>

	* po/Make-in: Add install-html target.
	* Makefile.am: Add install-html and install-html-recursive targets.
	* Makefile.in: Regenerate.
	* configure.in: AC_SUBST datarootdir, docdir and htmldir.
	* configure: Regenerate.
	* doc/Makefile.am: Add install-html and install-html-am targets.
	* doc/Makefile.in: Regenerate.

etc/

2006-04-06  Carlos O'Donell  <carlos@@codesourcery.com>

	* Makefile.in: Add install-html target. Add htmldir,
	docdir and datarootdir.
	* configure.texi: Document install-html target.
	* configure.in: AC_SUBST datarootdir, docdir, htmldir.
	* configure: Regenerate.

gas/

2006-04-06  Carlos O'Donell  <carlos@@codesourcery.com>

	* po/Make-in: Add install-html target.
	* Makefile.am: Add install-html and install-html-recursive targets.
	* Makefile.in: Regenerate.
	* configure.in: AC_SUBST datarootdir, docdir, htmldir.
	* configure: Regenerate.
	* doc/Makefile.am: Add install-html and install-html-am targets.
	* doc/Makefile.in: Regenerate.

gprof/

2006-04-06  Carlos O'Donell  <carlos@@codesourcery.com>

	* po/Make-in: Add install-html target.
	* Makefile.am: Add install-html, install-html-am and
	install-html-recursive targets.
	* Makefile.in: Regenerate.
	* configure.in: AC_SUBST datarootdir, docdir, htmldir.
	* configure: Regenerate.

intl/

2006-04-06  Carlos O'Donell  <carlos@@codesourcery.com>

	* intl/Makefile.in: Add html info and dvi and install-html to .PHONY
	Add install-html target.

ld/

2006-04-06  Carlos O'Donell  <carlos@@codesourcery.com>

	* Makefile.am: Add install-html, install-html-am, and
	install-html-recursive targets.
	* Makefile.in: Regenerate.
	* configure.in: AC_SUBST datarootdir, docdir, htmldir.
	* configure: Regenerate.
	* po/Make-in: Add install-html target.

opcodes/

2006-04-06  Carlos O'Donell  <carlos@@codesourcery.com>

	* Makefile.am: Add install-html target.
	* Makefile.in: Regenerate.
@
text
@d1519 19
a1559 17
xc16x-asm.lo: xc16x-asm.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h xc16x-desc.h $(INCDIR)/opcode/cgen.h \
  xc16x-opc.h opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h \
  $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
xc16x-desc.lo: xc16x-desc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h xc16x-desc.h $(INCDIR)/opcode/cgen.h \
  xc16x-opc.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h
xc16x-dis.lo: xc16x-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  xc16x-desc.h $(INCDIR)/opcode/cgen.h xc16x-opc.h opintl.h
xc16x-ibld.lo: xc16x-ibld.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h xc16x-desc.h \
  $(INCDIR)/opcode/cgen.h xc16x-opc.h opintl.h $(INCDIR)/safe-ctype.h
xc16x-opc.lo: xc16x-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h xc16x-desc.h $(INCDIR)/opcode/cgen.h \
  xc16x-opc.h $(INCDIR)/libiberty.h 
@


1.108
log
@Add support for the Infineon XC16X.
@
text
@d936 3
@


1.108.6.1
log
@
2006-04-03  Carlos O'Donell <carlos@@codesourcery.com>

	* Makefile.tpl: Add install-html target.
	* Makefile.def: Add install-html target.
	* Makefile.in: Regenerate.
	* configure.in: Add --with-datarootdir, --with-docdir,
	and --with-htmldir options.
	* configure: Regenerate.
	* opcodes/Makefile.am: Add install-html target.
	* opcodes/Makefile.in: Regenerate.
	* libiberty/Makefile.in: Add install-html, install-html-am, and
	install-html-recursive targets. Define mkdir_p and
	NORMAL_INSTALL.
	* libiberty/configure.ac: AC_SUBST datarootdir, docdir, htmldir.
	* libiberty/configure: Regenerate.
	* libiberty/testsuite/Makefile.in: Add install-html and html targets.
	* ld/Makefile.am: Add install-html, install-html-am, and
	install-html-recursive targets.
	* ld/Makefile.in: Regenerate.
	* ld/configure.in: AC_SUBST datarootdir, docdir, htmldir.
	* ld/configure: Regenerate.
	* ld/po/Make-in: Add install-html target.
	* intl/Makefile.in: Add html info and dvi and install-html to .PHONY
	Add install-html target.
	* gprof/po/Make-in: Add install-html target.
	* gprof/Makefile.am: Add install-html, install-html-am and
	install-html-recursive targets.
	* gprof/Makefile.in: Regenerate.
	* gprof/configure.in: AC_SUBST datarootdir, docdir, htmldir.
	* gprof/configure: Regenerate.
	* gas/po/Make-in: Add install-html target.
	* gas/Makefile.am: Add install-html and install-html-recursive targets.
	* gas/Makefile.in: Regenerate.
	* gas/configure.in: AC_SUBST datarootdir, docdir, htmldir.
	* gas/configure: Regenerate.
	* gas/doc/Makefile.am: Add install-html and install-html-am targets.
	* gas/doc/Makefile.in: Regenerate.
	* binutils/po/Make-in: Add install-html target.
	* binutils/Makefile.am: Add install-html and install-html-recursive targets.
	* binutils/Makefile.in: Regenerate.
	* binutils/configure.in: AC_SUBST datarootdir, docdir and htmldir.
	* binutils/configure: Regenerate.
	* binutils/doc/Makefile.am: Add install-html and install-html-am targets.
	* binutils/doc/Makefile.in: Regenerate.
	* bfd/po/Make-in: Add install-html target.
	* bfd/Makefile.am: Rename docdir to bfddocdir. Add datarootdir, docdir
	htmldir. Add install-html and install-html-recursive targets.
	* bfd/Makefile.in: Regenerate.
	* bfd/configure.in: AC_SUBST for datarootdir, docdir and htmldir.
	* bfd/configure: Regenerate.
	* bfd/doc/Makefile.am: Add install-html and install-html-am targets.
	Define datarootdir, docdir and htmldir.
	* bfd/doc/Makefile.in: Regenerate.
	* etc/Makefile.in: Add install-html target. Add htmldir,
	docdir and datarootdir.
	* etc/configure.texi: Document install-html target.
	* etc/configure.in: AC_SUBST datarootdir, docdir, htmldir.
	* etc/configure: Regenerate.
@
text
@a935 3
.PHONY: install-html
install-html:

@


1.107
log
@	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
	* po/POTFILES.in: Regenerate.
@
text
@d266 1
d399 5
d530 5
d568 1
a568 1
	stamp-openrisc stamp-iq2000 stamp-mt stamp-xstormy16 \
d582 1
a582 1
CGEN_CPUS = fr30 frv ip2k m32c m32r mt openrisc xstormy16
d599 2
d1070 6
d1538 17
@


1.106
log
@	Second part of ms1 to mt renaming.
	* bfd/archures.c (bfd_arch_mt): Renamed.
	(bfd_mt_arch): Renamed.
	(bfd_archures_list): Adjusted.
	* bfd/bfd-in2.h: Rebuilt.
	* bfd/config.bfd (mt): Remove special case targ_archs.
	(mt-*-elf): Rename bfd_elf32_mt_vec.
	* bfd/configure: Rebuilt.
	* bfd/configure.in (bfd_elf32_mt_vec): Renamed.
	(selarchs) Remove mt special case.
	* bfd/cpu-mt.c (arch_info_struct): Adjust.
	(bfd_mt_arch): Renamed, adjust.
	* bfd/elf32-mt.c (mt_reloc_type_lookup, mt_info_to_howto_rela,
	mt_elf_relocate_hi16, mt_final_link_relocate, mt_relocate_section,
	mt_elf_howto_table): Renamed, adjusted.
	(mt_elf_gc_mark_hook, mt_elf_gc_sweep_hook, mt_elf_check_relocs,
	elf32_mt_machine, mt_elf_object_p, mt_elf_set_private_flags,
	mt_elf_copy_private_bfd_data, mt_elf_merge_private_bfd_data,
	mt_elf_print_private_bfd_data): Renamed, adjusted.
	(TARGET_BIG_SYM, TARGET_BIG_NAME, ELF_ARCH, ELF_MACHINE_CODE,
	ELF_MAXPAGESIZE, elf_info_to_howto, elf_backend_relocate_section,
	bfd_elf32_bfd_reloc_type_lookup, elf_backend_gc_mark_hook,
	elf_backend_gc_sweep_hook, elf_backend_check_relocs,
	eld_backend_object_p, bfd_elf32_bfd_set_private_flags,
	bfd_elf32_bfd_copy_private_bfd_data,
	bfd_elf32_bfd_merge_private_bfd_data,
	bfd_elf32_bfd_print_private_bfd_data): Adjusted.
	* bfd/libbfd.h: Regenerated.
	* bfd/reloc.c (BFD_RELOC_MT_PC16, BFD_RELOC_MT_HI16,
	BFD_RELOC_MT_LO16, BFD_RELOC_MT_GNU_VTINHERIT,
	BFD_RELOC_MT_GNU_VTENTRY, BFD_RELOC_MT_PCINSN8): Renamed.
	* bfd/targets.c (bfd_elf32_mt_vec): Renamed.
	(_bfd_target_vector): Adjusted.
	* binutils/readelf.c (guess_is_rela): Use EM_MT.
	(dump_relocations, get_machine_name): Adjust.

	* cpu/mt.cpu (define-arch, define-isa): Set name to mt.
	(define-mach): Adjust.
	* cpu/mt.opc (CGEN_ASM_HASH): Update.
	(mt_asm_hash, mt_cgen_insn_supported): Renamed.
	(parse_loopsize, parse_imm16): Adjust.

	* gas/configure: Rebuilt.
	* gas/configure.in (mt): Remove special case.
	* gas/config/tc-mt.c (opcodes/mt-desc.h, opcodes/mt-opc.h): Change
	#includes.
	(mt_insn, mt_mach, mt_mach_bitmask, mt_flags, mt_architectures):
	Rename, adjust.
	(md_parse_option, md_show_usage, md_begin, md_assemble,
	md_cgen_lookup_reloc, md_atof): Adjust.
	(mt_force_relocation, mt_apply_fix, mt_fix_adjustable): Rename, adjust.
	* gas/config/tc-mt.h (TC_MT): Rename.
	(LISTING_HEADER, TARGET_ARCH, TARGET_FORMAT): Adjust.
	(md_apply_fix): Adjust.
	(mt_apply_fix, mt_fix_adjustable, mt_force_relocation): Rename.
	(TC_FORCE_RELOCATION, tc_fix_adjustable): Adjust.

	* gdb/mt-tdep.c (mt_arch_constants, mt_gdb_regnums): Rename, adjust.
	(mt_register_name, mt_register_type, mt_register_reggroup_p,
	mt_return_value, mt_skip_prologue, mt_breapoint_from_pc,
	mt_pseudo_register_read, mt_pseudo_register_write, mt_frame_align,
	mt_registers_info, mt_push_dummy_call, mt_unwind_cache,
	mt_frame_unwind_cache, mt_unwind_pc, mt_unwind_dummy_id,
	mt_frame_this_id, mt_frame_prev_register, mt_frame_base_address,
	mt_frame_unwind, mt_frame_sniffer, mt_frame_base, mt_gdbarch_init,
	_initialize_mt_tdep): Rename & adjust.

	* include/dis-asm.h (print_insn_mt): Renamed.

	* include/elf/common.h (EM_MT): Renamed.
	* include/elf/mt.h: Rename relocs, cpu & other defines.

	* ld/emulparams/elf32mt.sh (ARCH, OUTPUT_FORMAT): Adjust.

	* opcodes/Makefile.am (HFILES, CFILES, ALL_MACHINES): Adjust.
	(stamp-mt): Adjust rule.
	(mt-asm.lo, mt-desc.lo, mt-dis.lo, mt-ibld.lo, mt-opc.lo): Rename &
	adjust.
	* opcodes/Makefile.in: Rebuilt.
	* opcodes/configure: Rebuilt.
	* opcodes/configure.in (bfd_mt_arch): Rename & adjust.
	* opcodes/disassemble.c (ARCH_mt): Renamed.
	(disassembler): Adjust.
	* opcodes/mt-asm.c: Renamed, rebuilt.
	* opcodes/mt-desc.c: Renamed, rebuilt.
	* opcodes/mt-desc.h: Renamed, rebuilt.
	* opcodes/mt-dis.c: Renamed, rebuilt.
	* opcodes/mt-ibld.c: Renamed, rebuilt.
	* opcodes/mt-opc.c: Renamed, rebuilt.
	* opcodes/mt-opc.h: Renamed, rebuilt.

	* sid/Makefile.in: Rebuilt.
	* sid/aclocal.m4: Rebuilt.
	* sid/configure: Rebuilt.
	* sid/sid.spec: Adjust.
	* sid/bsp/Makefile.am: Adjust.
	* sid/bsp/Makefile.in: Rebuilt.
	* sid/bsp/aclocal.m4: Rebuilt.
	* sid/bsp/configrun-sid.in: Adjust.
	* sid/bsp/pregen/Makefile.in: Rebuilt.
	* sid/bsp/pregen/mt-gdb.conf: Renamed & rebuilt.
	* sid/bsp/pregen/mt-gloss.conf: Renamed & rebuilt.
	* sid/bsp/pregen/pregen-configs.in: Adjust.
	* sid/component/aclocal.m4: Rebuilt.
	* sid/component/configure: Rebuilt.
	* sid/component/tconfig.in: Adjust.
	* sid/component/bochs/aclocal.m4: Rebuilt.
	* sid/component/cache/Makefile.in: Rebuilt.
	* sid/component/cgen-cpu/Makefile.in: Rebuilt.
	* sid/component/cgen-cpu/aclocal.m4: Rebuilt.
	* sid/component/cgen-cpu/compCGEN.cxx: Adjust.
	* sid/component/cgen-cpu/configure: Rebuilt.
	* sid/component/cgen-cpu/configure.in: Rebult.
	* sid/component/cgen-cpu/mt/Makefile.am: Adjust.
	* sid/component/cgen-cpu/mt/Makefile.in: Rebuilt.
	* sid/component/cgen-cpu/mt/hw-cpu-mt.txt: Adjust.
	* sid/component/cgen-cpu/mt/mt-cpu.h: Rebuilt.
	* sid/component/cgen-cpu/mt/mt-decode.cxx: Rebuilt.
	* sid/component/cgen-cpu/mt/mt-decode.h: Rebuilt.
	* sid/component/cgen-cpu/mt/mt-defs.h: Rebuilt.
	* sid/component/cgen-cpu/mt/mt-desc.h: Rebuilt.
	* sid/component/cgen-cpu/mt/mt-sem.cxx: Rebuilt.
	* sid/component/cgen-cpu/mt/mt-write.cxx: Rebuilt.
	* sid/component/cgen-cpu/mt/mt.cxx: Adjust.
	* sid/component/cgen-cpu/mt/mt.h: Adjust.
	* sid/component/consoles/Makefile.in: Rebuilt.
	* sid/component/families/aclocal.m4: Rebuilt.
	* sid/component/families/configure: Rebuilt.
	* sid/component/gdb/Makefile.in: Rebuilt.
	* sid/component/gloss/Makefile.in: Rebuilt.
	* sid/component/glue/Makefile.in: Rebuilt.
	* sid/component/ide/Makefile.in: Rebuilt.
	* sid/component/interrupt/Makefile.in: Rebuilt.
	* sid/component/lcd/Makefile.in: Rebuilt.
	* sid/component/lcd/testsuite/Makefile.in: Rebuilt.
	* sid/component/loader/Makefile.am: Rebuilt.
	* sid/component/loader/Makefile.in: Rebuilt.
	* sid/component/mapper/Makefile.in: Rebuilt.
	* sid/component/mapper/testsuite/Makefile.in: Rebuilt.
	* sid/component/memory/Makefile.in: Rebuilt.
	* sid/component/mmu/Makefile.in: Rebuilt.
	* sid/component/parport/Makefile.in: Rebuilt.
	* sid/component/profiling/Makefile.in: Rebuilt.
	* sid/component/rtc/Makefile.in: Rebuilt.
	* sid/component/sched/Makefile.in: Rebuilt.
	* sid/component/testsuite/Makefile.in: Rebuilt.
	* sid/component/timers/aclocal.m4: Rebuilt.
	* sid/component/timers/configure: Rebuilt.
	* sid/component/uart/Makefile.in: Rebuilt.
	* sid/component/uart/testsuite/Makefile.in: Rebuilt.
	* sid/config/config.sub: Adjust.
	* sid/config/info.tcl.in: Adjust.
	* sid/config/sidtargets.m4: Adjust.
	* sid/doc/Makefile.in: Rebuilt.
	* sid/main/dynamic/Makefile.am: Rebuilt.
	* sid/main/dynamic/Makefile.in: Rebuilt.
	* sid/main/dynamic/aclocal.m4: Rebuilt.
	* sid/main/dynamic/configure: Rebuilt.
@
text
@d1124 1
a1124 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/alpha.h
d1126 2
a1127 2
  $(INCDIR)/opcode/alpha.h $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h opintl.h
d1129 4
a1132 5
  $(INCDIR)/ansidecl.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/arc.h $(BFDDIR)/elf-bfd.h \
  $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h \
  $(INCDIR)/bfdlink.h $(INCDIR)/elf/arc.h $(INCDIR)/elf/reloc-macros.h \
  opintl.h arc-dis.h arc-ext.h
d1134 1
a1134 1
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/opcode/arc.h \
d1137 1
a1137 2
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h arc-ext.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
d1139 5
a1143 6
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/arm.h opintl.h $(INCDIR)/safe-ctype.h \
  $(INCDIR)/coff/internal.h $(BFDDIR)/libcoff.h $(INCDIR)/bfdlink.h \
  $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h \
  $(INCDIR)/elf/external.h $(INCDIR)/elf/internal.h $(INCDIR)/elf/arm.h \
  $(INCDIR)/elf/reloc-macros.h
d1145 2
a1146 3
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/avr.h
d1150 2
a1151 3
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h \
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h \
d1153 2
a1154 4
cgen-bitset.lo: cgen-bitset.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h \
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h
d1156 2
a1157 3
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h
d1159 2
a1160 3
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h \
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h
d1163 1
a1163 2
  $(INCDIR)/ansidecl.h $(INCDIR)/opcode/cris.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h
d1167 1
a1167 1
  $(INCDIR)/ansidecl.h $(INCDIR)/opcode/crx.h
d1172 1
a1172 1
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h
d1177 1
a1177 1
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h opintl.h
d1181 1
a1181 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/dlx.h
d1183 1
a1183 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  opintl.h
d1185 1
a1185 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(BFD_H)
d1187 1
a1187 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h
d1189 3
a1191 5
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  fr30-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h fr30-opc.h \
  opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1193 2
a1194 4
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  fr30-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h fr30-opc.h \
  opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1197 1
a1197 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1199 1
a1199 2
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h fr30-opc.h \
  opintl.h
d1201 2
a1202 3
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(BFD_H) $(INCDIR)/symcat.h fr30-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h \
d1205 2
a1206 4
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  fr30-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h fr30-opc.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
d1208 3
a1210 5
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  frv-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h frv-opc.h \
  opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1212 2
a1213 4
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  frv-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h frv-opc.h \
  opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1216 1
a1216 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1218 1
a1218 2
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h frv-opc.h \
  opintl.h
d1220 2
a1221 3
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(BFD_H) $(INCDIR)/symcat.h frv-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h \
d1224 3
a1226 5
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  frv-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h frv-opc.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/elf/frv.h \
  $(INCDIR)/elf/reloc-macros.h
d1229 1
a1229 2
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h opintl.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h
d1231 2
a1232 2
  h8500-opc.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h opintl.h
d1234 2
a1235 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(BFDDIR)/libhppa.h $(INCDIR)/opcode/hppa.h
d1237 1
a1237 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/i370.h
d1242 1
a1242 1
  $(INCDIR)/ansidecl.h opintl.h
d1246 1
a1246 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h
d1248 1
a1248 2
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/opcode/ia64.h \
  $(BFD_H)
d1261 2
a1262 3
  config.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  ia64-asmtab.h $(INCDIR)/opcode/ia64.h $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h ia64-asmtab.c
d1264 4
a1267 5
  $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h sysdep.h \
  config.h $(INCDIR)/getopt.h ia64-opc.h $(INCDIR)/opcode/ia64.h \
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h ia64-opc-a.c \
  ia64-opc-i.c ia64-opc-m.c ia64-opc-b.c ia64-opc-f.c \
  ia64-opc-x.c ia64-opc-d.c
d1270 3
a1272 5
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  ip2k-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h ip2k-opc.h \
  opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1274 2
a1275 4
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  ip2k-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h ip2k-opc.h \
  opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1278 1
a1278 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1280 1
a1280 2
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h ip2k-opc.h \
  opintl.h
d1282 2
a1283 3
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(BFD_H) $(INCDIR)/symcat.h ip2k-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h \
d1286 3
a1288 4
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  ip2k-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h ip2k-opc.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1290 3
a1292 5
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  iq2000-desc.h $(INCDIR)/opcode/cgen.h $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/cgen-bitset.h iq2000-opc.h opintl.h \
  $(INCDIR)/xregex.h $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1294 3
a1296 5
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  iq2000-desc.h $(INCDIR)/opcode/cgen.h $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/cgen-bitset.h iq2000-opc.h opintl.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h
d1298 3
a1300 4
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  iq2000-desc.h $(INCDIR)/opcode/cgen.h $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/cgen-bitset.h iq2000-opc.h opintl.h
d1302 3
a1304 4
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(BFD_H) $(INCDIR)/symcat.h iq2000-desc.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h iq2000-opc.h \
  opintl.h $(INCDIR)/safe-ctype.h
d1306 2
a1307 4
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  iq2000-desc.h $(INCDIR)/opcode/cgen.h $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/cgen-bitset.h iq2000-opc.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h
d1309 3
a1311 5
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  m32c-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h m32c-opc.h \
  cgen-types.h cgen-ops.h opintl.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1314 3
a1316 5
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  m32c-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h m32c-opc.h \
  cgen-types.h cgen-ops.h opintl.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h
d1318 1
a1318 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1320 1
a1320 2
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h m32c-opc.h \
  cgen-types.h cgen-ops.h opintl.h $(INCDIR)/elf/m32c.h \
d1324 2
a1325 3
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(BFD_H) $(INCDIR)/symcat.h m32c-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h \
d1328 3
a1330 4
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  m32c-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h m32c-opc.h \
  cgen-types.h cgen-ops.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
d1332 3
a1334 5
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  m32r-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h m32r-opc.h \
  opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1336 2
a1337 4
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  m32r-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h m32r-opc.h \
  opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1340 1
a1340 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1342 1
a1342 2
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h m32r-opc.h \
  opintl.h
d1344 2
a1345 3
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(BFD_H) $(INCDIR)/symcat.h m32r-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h \
d1348 2
a1349 4
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  m32r-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h m32r-opc.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
d1351 2
a1352 3
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  m32r-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h m32r-opc.h
d1355 1
a1355 1
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h
d1359 2
a1360 3
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(INCDIR)/floatformat.h $(INCDIR)/ansidecl.h $(INCDIR)/libiberty.h \
  opintl.h $(INCDIR)/opcode/m68k.h
d1364 2
a1365 3
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/m88k.h opintl.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h
d1367 1
a1367 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/maxq.h
d1369 1
a1369 2
  mcore-opc.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h
d1371 4
a1374 5
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/opcode/mips.h \
  opintl.h $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h \
  $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h $(INCDIR)/bfdlink.h \
  $(INCDIR)/elf/mips.h $(INCDIR)/elf/reloc-macros.h
d1381 1
a1381 1
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h opintl.h
d1386 1
a1386 1
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h opintl.h
d1391 1
a1391 1
  $(INCDIR)/ansidecl.h $(BFD_H) opintl.h
d1394 3
a1396 5
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  mt-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h mt-opc.h \
  opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1398 2
a1399 4
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  mt-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h mt-opc.h \
  opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1402 1
a1402 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1404 1
a1404 2
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h mt-opc.h \
  opintl.h
d1406 2
a1407 3
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(BFD_H) $(INCDIR)/symcat.h mt-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h \
d1410 3
a1412 4
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  mt-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h mt-opc.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1414 2
a1415 3
  $(INCDIR)/symcat.h sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/opcode/ns32k.h \
  opintl.h
d1417 3
a1419 5
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  openrisc-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h openrisc-opc.h \
  opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1421 1
a1421 2
  $(INCDIR)/ansidecl.h $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h $(INCDIR)/symcat.h openrisc-desc.h \
d1423 2
a1424 3
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h openrisc-opc.h \
  opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/xregex.h $(INCDIR)/xregex2.h
d1426 1
a1426 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1428 1
a1428 2
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h openrisc-opc.h \
  opintl.h
d1430 3
a1432 5
  $(INCDIR)/ansidecl.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h $(BFD_H) $(INCDIR)/symcat.h openrisc-desc.h \
  $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h openrisc-opc.h \
  opintl.h $(INCDIR)/safe-ctype.h
d1434 2
a1435 4
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/symcat.h \
  openrisc-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h openrisc-opc.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
d1442 1
a1442 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/pdp11.h
d1446 1
a1446 1
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h
d1450 1
a1450 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/ppc.h
d1457 2
a1458 2
  config.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/s390.h
d1460 1
a1460 2
  sh-opc.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(INCDIR)/dis-asm.h $(BFD_H)
d1463 4
a1466 4
  $(INCDIR)/ansidecl.h sh64-opc.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h \
  $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h $(INCDIR)/bfdlink.h \
  $(INCDIR)/elf/sh.h $(INCDIR)/elf/reloc-macros.h $(BFDDIR)/elf32-sh64.h
d1469 2
a1470 3
  $(INCDIR)/opcode/sparc.h $(INCDIR)/ansidecl.h $(INCDIR)/dis-asm.h \
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h opintl.h
d1472 1
a1472 1
  $(INCDIR)/opcode/sparc.h $(INCDIR)/ansidecl.h
d1474 1
a1474 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/tic30.h
d1476 1
a1476 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/tic4x.h
d1478 2
a1479 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/tic54x.h $(INCDIR)/coff/tic54x.h $(INCDIR)/coff/ti.h
d1481 1
a1481 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/tic54x.h
d1484 1
a1484 1
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h
d1489 1
a1489 1
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h opintl.h
d1494 1
a1494 1
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h
d1496 1
a1496 2
  w65-opc.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h
d1498 1
a1498 2
  $(INCDIR)/ansidecl.h $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h $(INCDIR)/symcat.h xstormy16-desc.h \
d1500 2
a1501 3
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h xstormy16-opc.h \
  opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1503 1
a1503 2
  $(INCDIR)/ansidecl.h $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h $(INCDIR)/symcat.h xstormy16-desc.h \
d1505 2
a1506 3
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h xstormy16-opc.h \
  opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/xregex.h $(INCDIR)/xregex2.h
d1508 3
a1510 5
  $(INCDIR)/ansidecl.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h xstormy16-desc.h $(INCDIR)/opcode/cgen-bitset.h \
  $(INCDIR)/opcode/cgen.h $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h \
  xstormy16-opc.h opintl.h
d1512 3
a1514 5
  $(INCDIR)/ansidecl.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h $(BFD_H) $(INCDIR)/symcat.h xstormy16-desc.h \
  $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h xstormy16-opc.h \
  opintl.h $(INCDIR)/safe-ctype.h
d1516 1
a1516 2
  $(INCDIR)/ansidecl.h $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h $(INCDIR)/symcat.h xstormy16-desc.h \
d1518 1
a1518 2
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h xstormy16-opc.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
d1520 2
a1521 3
  $(INCDIR)/ansidecl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  sysdep.h config.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h
d1523 1
a1523 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h
d1525 1
a1525 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  z8k-opc.h
d1527 1
a1527 1
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
@


1.105
log
@
	Rename ms1 to mt, part 1
	* config.sub: Replace ms1 arch with mt.  Allow ms1 as alias.
	* configure.in: Replace ms1 arch with mt.
	* configure: Rebuilt.

	* bfd/Makefile.am (ALL_MACHINES, ALL_MACHINES_CFILES,
	BFD32_BACKENDS, BFD32_BACKENDS_CFILES): Replace ms1 with mt.
	(cpu_mt.lo, elf32-mt.lo): Update target and dependency names.
	* bfd/Makefile.in: Rebuilt.
	* bfd/config.bfd: Replace ms1 arch with mt.
	* bfd/configure.in: Replace ms1 files with mt files.
	* bfd/configure: Rebuilt.
	* bfd/elf32-mt.c: Renamed from elf32-ms1.c.  Update include files.
	* bfd/cpu-mt.c: Renamed from cpu-ms1.c.

	* cpu/mt.cpu: Rename from ms1.cpu.
	* cpu/mt.opc: Rename from ms1.opc.

	* binutils/Makefile.am: Replace ms1 files with mt files.
	* binutils/Makefile.in: Rebuilt.
	* binutils/readelf.c (elf/mt.h): Adjust #include.

	* gas/configure.in: Replace ms1 arch with mt arch.
	* gas/configure: Rebuilt.
	* gas/configure.tgt: Replace ms1 arch with mt arch.
	* gas/config/tc-mt.c: Renamed from tc-ms1.c: Update include files.

	* gas/doc/Makefile.am (CPU_DOCS): Replace ms1 files with mt files.
	* gas/doc/Makefile.in: Rebuilt.

	* gas/testsuite/gas/mt: Renamed from ms1 dir.  Update file names as
	needed.
	* gas/testsuite/gas/mt/errors.exp: Replace ms1 arch with mt arch.
	* gas/testsuite/gas/mt/mt.exp: Replace ms1 arch with mt arch.
	* gas/testsuite/gas/mt/relocs.exp: Replace ms1 arch with mt arch.

	* gdb/configure.tgt: Replace ms1 arch with mt arch.
	* gdb/config/mt: Renamed from ms1 dir.  Update file names as needed.
	* gdb/config/mt/mt.mt (TDEPFILES): Replace ms1 file with mt file.

	* include/elf/mt.h: Renamed from ms1.h

	* ld/Makefile.am (ALL_EMULATIONS): Replace ms1 files with mt files.
	(eelf32mt.c): Update target name and dependencies.
	* ld/Makefile.in: Rebuilt.
	* ld/configure.tgt: Replace ms1 arch with mt arch.
	* ld/emulparams/elf32mt.sh: Renamed from elf32ms1.sh. Update
	comment.

	* libgloss/configure.in: Replace ms1 arch with mt arch.
	* libgloss/configure: Rebuilt.
	* libgloss/mt: Renamed from ms1 dir.

	* newlib/configure.host: Replace ms1 arch with mt arch.
	* newlib/libc/machine/mt: Renamed from ms1 dir.

	* opcodes/Makefile.am (CLEANFILES, CGEN_CPUS, MT_DEPS): Replace ms1
	with mt.
	* opcodes/Makefile.in: Rebuilt.
	* opcodes/configure.in: Replace ms1 files with mt files.
	* opcodes/configure: Rebuilt.

	* sid/component/cgen-cpu/mt: Renamed from ms1 dir.  Update file
	names as appropriate.
	* sid/component/cgen-cpu/mt/Makefile.am: Replace ms1 files with mt
	files.
	* sid/component/cgen-cpu/mt/Makefile.in: Rebuilt.
@
text
@d260 1
a260 1
	ms1-desc.h ms1-opc.h \
d361 5
a365 5
	ms1-asm.c \
	ms1-desc.c \
	ms1-dis.c \
	ms1-ibld.c \
	ms1-opc.c \
a486 5
	ms1-asm.lo \
	ms1-desc.lo \
	ms1-dis.lo \
	ms1-ibld.lo \
	ms1-opc.lo \
d488 5
d1029 1
a1029 1
$(srcdir)/ms1-desc.h $(srcdir)/ms1-desc.c $(srcdir)/ms1-opc.h $(srcdir)/ms1-opc.c $(srcdir)/ms1-ibld.c $(srcdir)/ms1-asm.c $(srcdir)/ms1-dis.c: $(MT_DEPS)
d1032 1
a1032 1
	$(MAKE) run-cgen arch=ms1 prefix=ms1 options= \
d1469 1
a1469 1
ms1-asm.lo: ms1-asm.c sysdep.h config.h $(INCDIR)/ansidecl.h \
d1471 2
a1472 2
  ms1-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h ms1-opc.h \
d1475 1
a1475 1
ms1-desc.lo: ms1-desc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
d1477 2
a1478 2
  ms1-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h ms1-opc.h \
d1481 1
a1481 1
ms1-dis.lo: ms1-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
d1484 2
a1485 2
  ms1-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h ms1-opc.h \
d1487 1
a1487 1
ms1-ibld.lo: ms1-ibld.c sysdep.h config.h $(INCDIR)/ansidecl.h \
d1489 1
a1489 1
  $(BFD_H) $(INCDIR)/symcat.h ms1-desc.h $(INCDIR)/opcode/cgen-bitset.h \
d1491 2
a1492 2
  ms1-opc.h opintl.h $(INCDIR)/safe-ctype.h
ms1-opc.lo: ms1-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
d1494 2
a1495 2
  ms1-desc.h $(INCDIR)/opcode/cgen-bitset.h $(INCDIR)/opcode/cgen.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen-bitset.h ms1-opc.h \
@


1.104
log
@2005-12-02  Dave Brolley  <brolley@@redhat.com>

        * configure.in (cgen_files): Add cgen-bitset.lo.
        (ta): Add cgen-bitset.lo when arch==bfd_cris_arch.
        * Makefile.am (CFILES): Add cgen-bitset.c.
        (ALL_MACHINES): Add cgen-bitset.lo.
        (cgen-bitset.lo): New target.
        * cgen-opc.c (cgen_bitset_create, cgen_bitset_init, cgen_bitset_clear)
        (cgen_bitset_add, cgen_bitset_set, cgen_bitset_contains)
        (cgen_bitset_compare, cgen_bitset_intersect_p, cgen_bitset_copy)
        (cgen_bitset_union): Moved from here ...
        * cgen-bitset.c: ... to here. New file.
        * Makefile.in: Regenerated.
        * configure: Regenerated.
@
text
@d557 1
a557 1
	stamp-openrisc stamp-iq2000 stamp-ms1 stamp-xstormy16 \
d571 1
a571 1
CGEN_CPUS = fr30 frv ip2k m32c m32r ms1 openrisc xstormy16
d582 2
a583 2
@@CGEN_MAINT_FALSE@@MS1_DEPS = 
@@CGEN_MAINT_TRUE@@MS1_DEPS = stamp-ms1
d1029 1
a1029 1
$(srcdir)/ms1-desc.h $(srcdir)/ms1-desc.c $(srcdir)/ms1-opc.h $(srcdir)/ms1-opc.c $(srcdir)/ms1-ibld.c $(srcdir)/ms1-asm.c $(srcdir)/ms1-dis.c: $(MS1_DEPS)
d1031 1
a1031 1
stamp-ms1: $(CGENDEPS) $(srcdir)/../cpu/ms1.cpu $(srcdir)/../cpu/ms1.opc
d1033 2
a1034 2
		archfile=$(srcdir)/../cpu/ms1.cpu \
		opcfile=$(srcdir)/../cpu/ms1.opc extrafiles=
@


1.103
log
@ld/
binutils/
opcodes/

2005-10-30  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerated.

	* dep-in.sed: Replace " ./" with " ".
@
text
@d281 1
d418 1
d1159 4
@


1.102
log
@Add support for the Z80 processor family
@
text
@d1121 1
a1121 1
alpha-dis.lo: alpha-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1124 1
a1124 1
alpha-opc.lo: alpha-opc.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1133 1
a1133 1
arc-opc.lo: arc-opc.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1136 1
a1136 1
arc-ext.lo: arc-ext.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1139 1
a1139 1
arm-dis.lo: arm-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1146 1
a1146 1
avr-dis.lo: avr-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1152 1
a1152 1
cgen-asm.lo: cgen-asm.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1155 3
a1157 2
  $(INCDIR)/opcode/cgen.h opintl.h
cgen-dis.lo: cgen-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1160 2
a1161 2
  $(INCDIR)/opcode/cgen.h
cgen-opc.lo: cgen-opc.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1164 1
a1164 1
  $(INCDIR)/opcode/cgen.h
d1166 1
a1166 1
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h sysdep.h ./config.h \
d1171 1
a1171 1
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h sysdep.h ./config.h \
d1175 1
a1175 1
d10v-dis.lo: d10v-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1178 1
a1178 1
d10v-opc.lo: d10v-opc.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1180 1
a1180 1
d30v-dis.lo: d30v-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1183 1
a1183 1
d30v-opc.lo: d30v-opc.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1185 1
a1185 1
dlx-dis.lo: dlx-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1188 1
a1188 1
dis-buf.lo: dis-buf.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1191 1
a1191 1
dis-init.lo: dis-init.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1194 1
a1194 1
disassemble.lo: disassemble.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1196 1
a1196 1
fr30-asm.lo: fr30-asm.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1198 3
a1200 2
  fr30-desc.h $(INCDIR)/opcode/cgen.h fr30-opc.h opintl.h \
  $(INCDIR)/xregex.h $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h \
d1202 1
a1202 1
fr30-desc.lo: fr30-desc.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1204 5
a1208 4
  fr30-desc.h $(INCDIR)/opcode/cgen.h fr30-opc.h opintl.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h
fr30-dis.lo: fr30-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1211 4
a1214 2
  fr30-desc.h $(INCDIR)/opcode/cgen.h fr30-opc.h opintl.h
fr30-ibld.lo: fr30-ibld.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1216 2
a1217 1
  $(BFD_H) $(INCDIR)/symcat.h fr30-desc.h $(INCDIR)/opcode/cgen.h \
d1219 1
a1219 1
fr30-opc.lo: fr30-opc.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1221 4
a1224 3
  fr30-desc.h $(INCDIR)/opcode/cgen.h fr30-opc.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h
frv-asm.lo: frv-asm.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1226 3
a1228 2
  frv-desc.h $(INCDIR)/opcode/cgen.h frv-opc.h opintl.h \
  $(INCDIR)/xregex.h $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h \
d1230 1
a1230 1
frv-desc.lo: frv-desc.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1232 5
a1236 4
  frv-desc.h $(INCDIR)/opcode/cgen.h frv-opc.h opintl.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h
frv-dis.lo: frv-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1239 4
a1242 2
  frv-desc.h $(INCDIR)/opcode/cgen.h frv-opc.h opintl.h
frv-ibld.lo: frv-ibld.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1244 2
a1245 1
  $(BFD_H) $(INCDIR)/symcat.h frv-desc.h $(INCDIR)/opcode/cgen.h \
d1247 1
a1247 1
frv-opc.lo: frv-opc.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1249 5
a1253 3
  frv-desc.h $(INCDIR)/opcode/cgen.h frv-opc.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/elf/frv.h $(INCDIR)/elf/reloc-macros.h
h8300-dis.lo: h8300-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1257 1
a1257 1
h8500-dis.lo: h8500-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1260 1
a1260 1
hppa-dis.lo: hppa-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1263 1
a1263 1
i370-dis.lo: i370-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1266 1
a1266 1
i370-opc.lo: i370-opc.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1269 1
a1269 1
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h sysdep.h ./config.h \
d1273 1
a1273 1
i960-dis.lo: i960-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1290 1
a1290 1
  ./config.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
d1295 1
a1295 1
  ./config.h $(INCDIR)/getopt.h ia64-opc.h $(INCDIR)/opcode/ia64.h \
d1300 1
a1300 1
ip2k-asm.lo: ip2k-asm.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1302 3
a1304 2
  ip2k-desc.h $(INCDIR)/opcode/cgen.h ip2k-opc.h opintl.h \
  $(INCDIR)/xregex.h $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h \
d1306 1
a1306 1
ip2k-desc.lo: ip2k-desc.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1308 5
a1312 4
  ip2k-desc.h $(INCDIR)/opcode/cgen.h ip2k-opc.h opintl.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h
ip2k-dis.lo: ip2k-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1315 4
a1318 2
  ip2k-desc.h $(INCDIR)/opcode/cgen.h ip2k-opc.h opintl.h
ip2k-ibld.lo: ip2k-ibld.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1320 2
a1321 1
  $(BFD_H) $(INCDIR)/symcat.h ip2k-desc.h $(INCDIR)/opcode/cgen.h \
d1323 1
a1323 1
ip2k-opc.lo: ip2k-opc.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1325 4
a1328 3
  ip2k-desc.h $(INCDIR)/opcode/cgen.h ip2k-opc.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
iq2000-asm.lo: iq2000-asm.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1330 3
a1332 2
  iq2000-desc.h $(INCDIR)/opcode/cgen.h iq2000-opc.h \
  opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h \
d1334 1
a1334 1
iq2000-desc.lo: iq2000-desc.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1336 5
a1340 4
  iq2000-desc.h $(INCDIR)/opcode/cgen.h iq2000-opc.h \
  opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/xregex.h $(INCDIR)/xregex2.h
iq2000-dis.lo: iq2000-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1343 3
a1345 3
  iq2000-desc.h $(INCDIR)/opcode/cgen.h iq2000-opc.h \
  opintl.h
iq2000-ibld.lo: iq2000-ibld.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1348 3
a1350 2
  iq2000-opc.h opintl.h $(INCDIR)/safe-ctype.h
iq2000-opc.lo: iq2000-opc.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1352 4
a1355 3
  iq2000-desc.h $(INCDIR)/opcode/cgen.h iq2000-opc.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
m32c-asm.lo: m32c-asm.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1357 6
a1362 4
  m32c-desc.h $(INCDIR)/opcode/cgen.h m32c-opc.h cgen-types.h \
  cgen-ops.h opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
m32c-desc.lo: m32c-desc.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1364 5
a1368 4
  m32c-desc.h $(INCDIR)/opcode/cgen.h m32c-opc.h cgen-types.h \
  cgen-ops.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/xregex.h $(INCDIR)/xregex2.h
m32c-dis.lo: m32c-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1371 6
a1376 5
  m32c-desc.h $(INCDIR)/opcode/cgen.h m32c-opc.h cgen-types.h \
  cgen-ops.h opintl.h $(INCDIR)/elf/m32c.h $(INCDIR)/elf/reloc-macros.h \
  $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h \
  $(INCDIR)/elf/external.h $(INCDIR)/bfdlink.h
m32c-ibld.lo: m32c-ibld.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1378 2
a1379 1
  $(BFD_H) $(INCDIR)/symcat.h m32c-desc.h $(INCDIR)/opcode/cgen.h \
d1381 1
a1381 1
m32c-opc.lo: m32c-opc.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1383 4
a1386 3
  m32c-desc.h $(INCDIR)/opcode/cgen.h m32c-opc.h cgen-types.h \
  cgen-ops.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h
m32r-asm.lo: m32r-asm.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1388 3
a1390 2
  m32r-desc.h $(INCDIR)/opcode/cgen.h m32r-opc.h opintl.h \
  $(INCDIR)/xregex.h $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h \
d1392 1
a1392 1
m32r-desc.lo: m32r-desc.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1394 5
a1398 4
  m32r-desc.h $(INCDIR)/opcode/cgen.h m32r-opc.h opintl.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h
m32r-dis.lo: m32r-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1401 4
a1404 2
  m32r-desc.h $(INCDIR)/opcode/cgen.h m32r-opc.h opintl.h
m32r-ibld.lo: m32r-ibld.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1406 2
a1407 1
  $(BFD_H) $(INCDIR)/symcat.h m32r-desc.h $(INCDIR)/opcode/cgen.h \
d1409 1
a1409 1
m32r-opc.lo: m32r-opc.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1411 4
a1414 3
  m32r-desc.h $(INCDIR)/opcode/cgen.h m32r-opc.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h
m32r-opinst.lo: m32r-opinst.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1416 2
a1417 1
  m32r-desc.h $(INCDIR)/opcode/cgen.h m32r-opc.h
d1423 1
a1423 1
m68k-dis.lo: m68k-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1427 1
a1427 1
m68k-opc.lo: m68k-opc.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1429 1
a1429 1
m88k-dis.lo: m88k-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1433 1
a1433 1
maxq-dis.lo: maxq-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1436 1
a1436 1
mcore-dis.lo: mcore-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1439 1
a1439 1
mips-dis.lo: mips-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1445 1
a1445 1
mips-opc.lo: mips-opc.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1447 1
a1447 1
mips16-opc.lo: mips16-opc.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1449 1
a1449 1
m10200-dis.lo: m10200-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1452 1
a1452 1
m10200-opc.lo: m10200-opc.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1454 1
a1454 1
m10300-dis.lo: m10300-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1457 1
a1457 1
m10300-opc.lo: m10300-opc.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1463 1
a1463 1
ms1-asm.lo: ms1-asm.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1465 3
a1467 2
  ms1-desc.h $(INCDIR)/opcode/cgen.h ms1-opc.h opintl.h \
  $(INCDIR)/xregex.h $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h \
d1469 1
a1469 1
ms1-desc.lo: ms1-desc.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1471 5
a1475 4
  ms1-desc.h $(INCDIR)/opcode/cgen.h ms1-opc.h opintl.h \
  $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h
ms1-dis.lo: ms1-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1478 4
a1481 2
  ms1-desc.h $(INCDIR)/opcode/cgen.h ms1-opc.h opintl.h
ms1-ibld.lo: ms1-ibld.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1483 2
a1484 1
  $(BFD_H) $(INCDIR)/symcat.h ms1-desc.h $(INCDIR)/opcode/cgen.h \
d1486 1
a1486 1
ms1-opc.lo: ms1-opc.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1488 3
a1490 2
  ms1-desc.h $(INCDIR)/opcode/cgen.h ms1-opc.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/safe-ctype.h
d1492 1
a1492 1
  $(INCDIR)/symcat.h sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1495 7
a1501 1
openrisc-asm.lo: openrisc-asm.c sysdep.h ./config.h \
d1504 11
a1514 14
  $(INCDIR)/opcode/cgen.h openrisc-opc.h opintl.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/safe-ctype.h
openrisc-desc.lo: openrisc-desc.c sysdep.h ./config.h \
  $(INCDIR)/ansidecl.h $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h $(INCDIR)/symcat.h openrisc-desc.h \
  $(INCDIR)/opcode/cgen.h openrisc-opc.h opintl.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h
openrisc-dis.lo: openrisc-dis.c sysdep.h ./config.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h openrisc-desc.h $(INCDIR)/opcode/cgen.h \
  openrisc-opc.h opintl.h
openrisc-ibld.lo: openrisc-ibld.c sysdep.h ./config.h \
d1517 8
a1524 6
  $(INCDIR)/opcode/cgen.h openrisc-opc.h opintl.h $(INCDIR)/safe-ctype.h
openrisc-opc.lo: openrisc-opc.c sysdep.h ./config.h \
  $(INCDIR)/ansidecl.h $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h $(INCDIR)/symcat.h openrisc-desc.h \
  $(INCDIR)/opcode/cgen.h openrisc-opc.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h
d1530 1
a1530 1
pdp11-dis.lo: pdp11-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1534 1
a1534 1
pj-dis.lo: pj-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1537 1
a1537 1
pj-opc.lo: pj-opc.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1539 1
a1539 1
ppc-dis.lo: ppc-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1542 1
a1542 1
ppc-opc.lo: ppc-opc.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1546 1
a1546 1
  ./s390-opc.tab
d1548 1
a1548 1
  ./config.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h \
d1550 1
a1550 1
sh-dis.lo: sh-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1554 1
a1554 1
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h sysdep.h ./config.h \
d1560 1
a1560 1
sparc-dis.lo: sparc-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1564 1
a1564 1
sparc-opc.lo: sparc-opc.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1566 1
a1566 1
tic30-dis.lo: tic30-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1572 1
a1572 1
tic54x-dis.lo: tic54x-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1575 1
a1575 1
tic54x-opc.lo: tic54x-opc.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1578 1
a1578 1
tic80-dis.lo: tic80-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1581 1
a1581 1
tic80-opc.lo: tic80-opc.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1583 1
a1583 1
v850-dis.lo: v850-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1586 1
a1586 1
v850-opc.lo: v850-opc.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1588 1
a1588 1
vax-dis.lo: vax-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1591 1
a1591 1
w65-dis.lo: w65-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1594 1
a1594 1
xstormy16-asm.lo: xstormy16-asm.c sysdep.h ./config.h \
d1597 5
a1601 4
  $(INCDIR)/opcode/cgen.h xstormy16-opc.h opintl.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/safe-ctype.h
xstormy16-desc.lo: xstormy16-desc.c sysdep.h ./config.h \
d1604 5
a1608 3
  $(INCDIR)/opcode/cgen.h xstormy16-opc.h opintl.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h
xstormy16-dis.lo: xstormy16-dis.c sysdep.h ./config.h \
d1611 2
a1612 1
  $(INCDIR)/ansidecl.h xstormy16-desc.h $(INCDIR)/opcode/cgen.h \
d1614 1
a1614 1
xstormy16-ibld.lo: xstormy16-ibld.c sysdep.h ./config.h \
d1617 4
a1620 2
  $(INCDIR)/opcode/cgen.h xstormy16-opc.h opintl.h $(INCDIR)/safe-ctype.h
xstormy16-opc.lo: xstormy16-opc.c sysdep.h ./config.h \
d1623 3
a1625 2
  $(INCDIR)/opcode/cgen.h xstormy16-opc.h $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h
d1628 1
a1628 1
  sysdep.h ./config.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h \
d1630 1
a1630 1
z80-dis.lo: z80-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1632 1
a1632 1
z8k-dis.lo: z8k-dis.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
d1635 1
a1635 1
z8kgen.lo: z8kgen.c sysdep.h ./config.h $(INCDIR)/ansidecl.h \
@


1.101
log
@2005-09-30  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerated.
	* aclocal.m4: Likewise.
	* configure: Likewise.
@
text
@d403 1
d528 1
d1575 2
@


1.100
log
@	* Makefile.am: Bfin support.
	* Makefile.in: Regenerated.
	* aclocal.m4: Regenerated.
	* bfin-dis.c: New file.
	* configure.in: Bfin support.
	* configure: Regenerated.
	* disassemble.c (ARCH_bfin): Define.
	(disassembler): Add case for bfd_arch_bfin.
@
text
@d1 1
a1 1
# Makefile.in generated by automake 1.9.2 from Makefile.am.
d44 1
a44 2
	INSTALL NEWS README AUTHORS ChangeLog COPYING THANKS \
	$(srcdir)/Makefile.in $(srcdir)/Makefile.am \
d691 7
a697 1
	@@set fnord $$MAKEFLAGS; amf=$$2; \
d709 1
a709 1
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
d717 7
a723 1
	@@set fnord $$MAKEFLAGS; amf=$$2; \
d744 1
a744 1
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
d1119 14
a1132 4
alpha-dis.lo: alpha-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/alpha.h
alpha-opc.lo: alpha-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/alpha.h $(BFD_H) $(INCDIR)/symcat.h \
d1134 7
a1140 2
arc-dis.lo: arc-dis.c $(INCDIR)/ansidecl.h $(INCDIR)/libiberty.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/arc.h \
d1142 20
a1161 27
  $(INCDIR)/elf/external.h $(INCDIR)/bfdlink.h $(INCDIR)/elf/arc.h \
  $(INCDIR)/elf/reloc-macros.h opintl.h arc-dis.h arc-ext.h
arc-opc.lo: arc-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/arc.h \
  opintl.h
arc-ext.lo: arc-ext.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h arc-ext.h $(INCDIR)/libiberty.h
arm-dis.lo: arm-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/arm.h \
  opintl.h $(INCDIR)/safe-ctype.h $(INCDIR)/coff/internal.h \
  $(BFDDIR)/libcoff.h $(INCDIR)/bfdlink.h $(BFDDIR)/elf-bfd.h \
  $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h \
  $(INCDIR)/elf/arm.h $(INCDIR)/elf/reloc-macros.h
avr-dis.lo: avr-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h opintl.h \
  $(INCDIR)/libiberty.h $(INCDIR)/opcode/avr.h
bfin-dis.lo: bfin-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h opintl.h \
  $(INCDIR)/libiberty.h $(INCDIR)/opcode/bfin.h
cgen-asm.lo: cgen-asm.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h $(BFD_H) \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen.h opintl.h
cgen-dis.lo: cgen-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen.h
cgen-opc.lo: cgen-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h $(BFD_H) \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen.h
d1163 3
a1165 2
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h sysdep.h config.h \
  $(INCDIR)/opcode/cris.h $(INCDIR)/libiberty.h
d1168 2
a1169 2
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h sysdep.h config.h \
  $(INCDIR)/opcode/crx.h
d1172 1
a1172 1
d10v-dis.lo: d10v-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
d1174 2
a1175 2
  $(INCDIR)/symcat.h
d10v-opc.lo: d10v-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
d1177 1
a1177 1
d30v-dis.lo: d30v-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
d1179 2
a1180 2
  $(INCDIR)/symcat.h opintl.h
d30v-opc.lo: d30v-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
d1182 20
a1201 15
dlx-dis.lo: dlx-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/dlx.h
dis-buf.lo: dis-buf.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h opintl.h
dis-init.lo: dis-init.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h
disassemble.lo: disassemble.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h
fr30-asm.lo: fr30-asm.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h fr30-desc.h $(INCDIR)/opcode/cgen.h \
  fr30-opc.h opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h \
  $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
fr30-desc.lo: fr30-desc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h fr30-desc.h $(INCDIR)/opcode/cgen.h \
  fr30-opc.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/xregex.h \
d1203 3
a1205 2
fr30-dis.lo: fr30-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
d1207 2
a1208 4
fr30-ibld.lo: fr30-ibld.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h fr30-desc.h \
  $(INCDIR)/opcode/cgen.h fr30-opc.h opintl.h $(INCDIR)/safe-ctype.h
fr30-opc.lo: fr30-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
d1210 14
a1223 8
  fr30-opc.h $(INCDIR)/libiberty.h
frv-asm.lo: frv-asm.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h frv-desc.h $(INCDIR)/opcode/cgen.h \
  frv-opc.h opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h \
  $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
frv-desc.lo: frv-desc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h frv-desc.h $(INCDIR)/opcode/cgen.h \
  frv-opc.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/xregex.h \
d1225 3
a1227 2
frv-dis.lo: frv-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
d1229 2
a1230 4
frv-ibld.lo: frv-ibld.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h frv-desc.h \
  $(INCDIR)/opcode/cgen.h frv-opc.h opintl.h $(INCDIR)/safe-ctype.h
frv-opc.lo: frv-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
d1232 6
a1237 3
  frv-opc.h $(INCDIR)/libiberty.h $(INCDIR)/elf/frv.h \
  $(INCDIR)/elf/reloc-macros.h
h8300-dis.lo: h8300-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
d1239 12
a1250 10
  $(INCDIR)/symcat.h opintl.h $(INCDIR)/libiberty.h
h8500-dis.lo: h8500-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  h8500-opc.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h \
  opintl.h
hppa-dis.lo: hppa-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(BFDDIR)/libhppa.h \
  $(INCDIR)/opcode/hppa.h
i370-dis.lo: i370-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/i370.h
i370-opc.lo: i370-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
d1253 2
a1254 2
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h sysdep.h config.h \
  opintl.h
d1257 2
a1258 2
i960-dis.lo: i960-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h
d1260 2
a1261 1
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h $(INCDIR)/opcode/ia64.h
d1274 3
a1276 2
  config.h $(INCDIR)/libiberty.h ia64-asmtab.h $(INCDIR)/opcode/ia64.h \
  $(BFD_H) $(INCDIR)/symcat.h ia64-asmtab.c
d1278 5
a1282 4
  $(INCDIR)/safe-ctype.h sysdep.h config.h $(INCDIR)/getopt.h \
  ia64-opc.h $(INCDIR)/opcode/ia64.h $(BFD_H) $(INCDIR)/symcat.h \
  ia64-opc-a.c ia64-opc-i.c ia64-opc-m.c ia64-opc-b.c \
  ia64-opc-f.c ia64-opc-x.c ia64-opc-d.c
d1284 9
a1292 7
ip2k-asm.lo: ip2k-asm.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h ip2k-desc.h $(INCDIR)/opcode/cgen.h \
  ip2k-opc.h opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h \
  $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
ip2k-desc.lo: ip2k-desc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h ip2k-desc.h $(INCDIR)/opcode/cgen.h \
  ip2k-opc.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/xregex.h \
d1294 3
a1296 2
ip2k-dis.lo: ip2k-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
d1298 2
a1299 4
ip2k-ibld.lo: ip2k-ibld.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h ip2k-desc.h \
  $(INCDIR)/opcode/cgen.h ip2k-opc.h opintl.h $(INCDIR)/safe-ctype.h
ip2k-opc.lo: ip2k-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
d1301 18
a1318 11
  ip2k-opc.h $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
iq2000-asm.lo: iq2000-asm.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h iq2000-desc.h $(INCDIR)/opcode/cgen.h \
  iq2000-opc.h opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h \
  $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
iq2000-desc.lo: iq2000-desc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h iq2000-desc.h $(INCDIR)/opcode/cgen.h \
  iq2000-opc.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h
iq2000-dis.lo: iq2000-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
d1321 2
a1322 4
iq2000-ibld.lo: iq2000-ibld.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h iq2000-desc.h \
  $(INCDIR)/opcode/cgen.h iq2000-opc.h opintl.h $(INCDIR)/safe-ctype.h
iq2000-opc.lo: iq2000-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
d1324 14
a1337 8
  iq2000-opc.h $(INCDIR)/libiberty.h
m32c-asm.lo: m32c-asm.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h m32c-desc.h $(INCDIR)/opcode/cgen.h \
  m32c-opc.h cgen-types.h cgen-ops.h opintl.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
m32c-desc.lo: m32c-desc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h m32c-desc.h $(INCDIR)/opcode/cgen.h \
  m32c-opc.h cgen-types.h cgen-ops.h opintl.h $(INCDIR)/libiberty.h \
d1339 3
a1341 2
m32c-dis.lo: m32c-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
d1346 2
a1347 5
m32c-ibld.lo: m32c-ibld.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h m32c-desc.h \
  $(INCDIR)/opcode/cgen.h m32c-opc.h cgen-types.h cgen-ops.h \
  opintl.h $(INCDIR)/safe-ctype.h
m32c-opc.lo: m32c-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
d1349 14
a1362 8
  m32c-opc.h cgen-types.h cgen-ops.h $(INCDIR)/libiberty.h
m32r-asm.lo: m32r-asm.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h m32r-desc.h $(INCDIR)/opcode/cgen.h \
  m32r-opc.h opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h \
  $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
m32r-desc.lo: m32r-desc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h m32r-desc.h $(INCDIR)/opcode/cgen.h \
  m32r-opc.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/xregex.h \
d1364 3
a1366 2
m32r-dis.lo: m32r-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
d1368 2
a1369 7
m32r-ibld.lo: m32r-ibld.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h m32r-desc.h \
  $(INCDIR)/opcode/cgen.h m32r-opc.h opintl.h $(INCDIR)/safe-ctype.h
m32r-opc.lo: m32r-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h m32r-desc.h $(INCDIR)/opcode/cgen.h \
  m32r-opc.h $(INCDIR)/libiberty.h
m32r-opinst.lo: m32r-opinst.c sysdep.h config.h $(INCDIR)/ansidecl.h \
d1371 8
a1378 1
  m32r-opc.h
d1381 1
a1381 1
  $(INCDIR)/symcat.h
d1384 5
a1388 4
m68k-dis.lo: m68k-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/floatformat.h \
  $(INCDIR)/libiberty.h opintl.h $(INCDIR)/opcode/m68k.h
m68k-opc.lo: m68k-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
d1390 17
a1406 13
m88k-dis.lo: m88k-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/m88k.h \
  opintl.h $(INCDIR)/libiberty.h
maxq-dis.lo: maxq-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/maxq.h
mcore-dis.lo: mcore-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  mcore-opc.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h
mips-dis.lo: mips-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/mips.h opintl.h $(BFDDIR)/elf-bfd.h \
  $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h \
  $(INCDIR)/bfdlink.h $(INCDIR)/elf/mips.h $(INCDIR)/elf/reloc-macros.h
mips-opc.lo: mips-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
d1408 1
a1408 1
mips16-opc.lo: mips16-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
d1410 1
a1410 1
m10200-dis.lo: m10200-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
d1412 2
a1413 2
  $(INCDIR)/symcat.h opintl.h
m10200-opc.lo: m10200-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
d1415 1
a1415 1
m10300-dis.lo: m10300-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
d1417 2
a1418 2
  $(INCDIR)/symcat.h opintl.h
m10300-opc.lo: m10300-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
d1422 1
a1422 1
  opintl.h
d1424 9
a1432 7
ms1-asm.lo: ms1-asm.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h ms1-desc.h $(INCDIR)/opcode/cgen.h \
  ms1-opc.h opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h \
  $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
ms1-desc.lo: ms1-desc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h ms1-desc.h $(INCDIR)/opcode/cgen.h \
  ms1-opc.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/xregex.h \
d1434 3
a1436 2
ms1-dis.lo: ms1-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
d1438 2
a1439 4
ms1-ibld.lo: ms1-ibld.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h ms1-desc.h \
  $(INCDIR)/opcode/cgen.h ms1-opc.h opintl.h $(INCDIR)/safe-ctype.h
ms1-opc.lo: ms1-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
d1441 5
a1445 1
  ms1-opc.h $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
d1447 12
a1458 8
  $(INCDIR)/symcat.h sysdep.h config.h $(INCDIR)/dis-asm.h \
  $(INCDIR)/opcode/ns32k.h opintl.h
openrisc-asm.lo: openrisc-asm.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h openrisc-desc.h $(INCDIR)/opcode/cgen.h \
  openrisc-opc.h opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h \
  $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
openrisc-desc.lo: openrisc-desc.c sysdep.h config.h \
  $(INCDIR)/ansidecl.h $(BFD_H) $(INCDIR)/symcat.h openrisc-desc.h \
d1460 15
a1474 12
  $(INCDIR)/xregex.h $(INCDIR)/xregex2.h
openrisc-dis.lo: openrisc-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  openrisc-desc.h $(INCDIR)/opcode/cgen.h openrisc-opc.h \
  opintl.h
openrisc-ibld.lo: openrisc-ibld.c sysdep.h config.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h \
  openrisc-desc.h $(INCDIR)/opcode/cgen.h openrisc-opc.h \
  opintl.h $(INCDIR)/safe-ctype.h
openrisc-opc.lo: openrisc-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h openrisc-desc.h $(INCDIR)/opcode/cgen.h \
  openrisc-opc.h $(INCDIR)/libiberty.h
d1480 3
a1482 2
pdp11-dis.lo: pdp11-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/pdp11.h
d1484 1
a1484 1
pj-dis.lo: pj-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
d1486 2
a1487 2
  $(INCDIR)/symcat.h
pj-opc.lo: pj-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
d1489 4
a1492 3
ppc-dis.lo: ppc-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/ppc.h
ppc-opc.lo: ppc-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
d1496 1
a1496 1
  s390-opc.tab
d1498 5
a1502 4
  config.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h \
  $(INCDIR)/opcode/s390.h
sh-dis.lo: sh-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  sh-opc.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/dis-asm.h
d1504 5
a1508 5
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h sysdep.h config.h \
  sh64-opc.h $(INCDIR)/libiberty.h $(BFDDIR)/elf-bfd.h \
  $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h \
  $(INCDIR)/bfdlink.h $(INCDIR)/elf/sh.h $(INCDIR)/elf/reloc-macros.h \
  $(BFDDIR)/elf32-sh64.h
d1510 9
a1518 7
sparc-dis.lo: sparc-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/sparc.h $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/symcat.h $(INCDIR)/libiberty.h opintl.h
sparc-opc.lo: sparc-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/sparc.h
tic30-dis.lo: tic30-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/tic30.h
d1520 9
a1528 7
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/tic4x.h
tic54x-dis.lo: tic54x-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/tic54x.h \
  $(INCDIR)/coff/tic54x.h $(INCDIR)/coff/ti.h
tic54x-opc.lo: tic54x-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/tic54x.h
tic80-dis.lo: tic80-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
d1530 2
a1531 2
  $(INCDIR)/symcat.h
tic80-opc.lo: tic80-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
d1533 1
a1533 1
v850-dis.lo: v850-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
d1535 2
a1536 2
  $(INCDIR)/symcat.h opintl.h
v850-opc.lo: v850-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
d1538 1
a1538 1
vax-dis.lo: vax-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
d1540 3
d1544 3
a1546 4
w65-dis.lo: w65-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  w65-opc.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h
xstormy16-asm.lo: xstormy16-asm.c sysdep.h config.h \
  $(INCDIR)/ansidecl.h $(BFD_H) $(INCDIR)/symcat.h xstormy16-desc.h \
d1548 5
a1552 3
  $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
xstormy16-desc.lo: xstormy16-desc.c sysdep.h config.h \
  $(INCDIR)/ansidecl.h $(BFD_H) $(INCDIR)/symcat.h xstormy16-desc.h \
d1554 5
a1558 4
  $(INCDIR)/xregex.h $(INCDIR)/xregex2.h
xstormy16-dis.lo: xstormy16-dis.c sysdep.h config.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h \
  $(INCDIR)/libiberty.h xstormy16-desc.h $(INCDIR)/opcode/cgen.h \
d1560 9
a1568 7
xstormy16-ibld.lo: xstormy16-ibld.c sysdep.h config.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h \
  xstormy16-desc.h $(INCDIR)/opcode/cgen.h xstormy16-opc.h \
  opintl.h $(INCDIR)/safe-ctype.h
xstormy16-opc.lo: xstormy16-opc.c sysdep.h config.h \
  $(INCDIR)/ansidecl.h $(BFD_H) $(INCDIR)/symcat.h xstormy16-desc.h \
  $(INCDIR)/opcode/cgen.h xstormy16-opc.h $(INCDIR)/libiberty.h
d1570 8
a1577 6
  $(INCDIR)/ansidecl.h $(INCDIR)/libiberty.h sysdep.h \
  config.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h
z8k-dis.lo: z8k-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h z8k-opc.h
z8kgen.lo: z8kgen.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h
@


1.99
log
@Remove a29k support.
@
text
@d1 1
a1 1
# Makefile.in generated by automake 1.9.5 from Makefile.am.
d44 2
a45 1
	ChangeLog $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
d280 1
d415 1
d692 1
a692 7
	@@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
d704 1
a704 1
	  || eval $$failcom; \
d712 1
a712 7
	@@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
d733 1
a733 1
	  || eval $$failcom; \
d1132 3
@


1.98
log
@bfd/
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
opcodes/
	* Makefile.am: Run "make dep-am".
	(stamp-m32c): Fix cpu dependencies.
	* Makefile.in: Regenerate.
	* ip2k-dis.c: Regenerate.
binutils/
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
gas/
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
ld/
	* Makefile.am: Run "make dep-am".
	(emipsidt.c, emipsidtl.c): Depend on generic.em.
	* Makefile.in: Regenerate.
@
text
@a271 1
	a29k-dis.c \
a405 1
	a29k-dis.lo \
a1116 2
a29k-dis.lo: a29k-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/a29k.h
@


1.97
log
@ChangeLog:
2005-07-14  Jim Blandy  <jimb@@redhat.com>

	* configure.in: Add cases for Renesas m32c.
	* configure: Regenerated.

bfd/ChangeLog:
2005-07-14  Jim Blandy  <jimb@@redhat.com>

	Add support for m32c-*-elf (Renesas m32c and m16c).
	* Makefile.am (ALL_MACHINES): Add cpu-m32c.lo.
	(ALL_MACHINES_CFILES): Add cpu-m32c.c.
	(BFD32_BACKENDS): Add elf32-m32c.lo.
	(BFD32_BACKENDS_CFILES): Add elf32-m32c.c.
	(cpu-m32c.lo, elf32-m32c.lo): New rules, generated by 'make dep-am'.
	* Makefile.in: Regenerated.
	* archures.c (bfd_arch_m32c, bfd_mach_m16c, bfd_mach_m32c): New
	arch and mach codes.
	(bfd_m32c_arch): New arch info object.
	(bfd_archures_list): List bfd_m32c_arch.
	* bfd-in2.h: Regenerated.
	* config.bfd: Add case for the m32c.
	* configure.in: Add case for the m32c.
	* configure: Regenerated.
	* cpu-m32c.c, elf32-m32c.c: New files.
	* libbfd.h: Regenerated.
	* targets.c (bfd_elf32_m32c_vec): Declare.
	(_bfd_target_vector): List bfd_elf32_m32c_vec.

binutils/ChangeLog:
2005-07-14  Jim Blandy  <jimb@@redhat.com>

	* readelf.c: #include "elf/m32c.h"
	(guess_is_rela, dump_relocations, get_machine_name): Add cases for
	EM_M32C.
	* Makefile.am (readelf.o): Update dependencies.
	* Makefile.in: Regenerated.

cpu/ChangeLog:
2005-07-14  Jim Blandy  <jimb@@redhat.com>

	* m32c.cpu, m32c.opc: Machine description for the Renesas M32C.

gas/ChangeLog:
2005-07-14  Jim Blandy  <jimb@@redhat.com>

	Add support for the Renesas M32C.
	* Makefile.am (CPU_TYPES): List m32c.
	(TARGET_CPU_CFILES): List config/tc-m32c.c.
	(TARGET_CPU_HFILES): List config/tc-m32c.h.
	* configure.in: Add case for m32c.
	* configure.tgt: Add cases for m32c and m32c-*-elf.
	* configure: Regenerated.
	* config/tc-m32c.c, config/tc-m32c.h: New files.
	* doc/Makefile.am (CPU_DOCS): Add c-m32c.texi.
	* doc/Makefile.in: Regenerated.
	* doc/all.texi: Set M32C.
	* doc/as.texinfo: Add text for the M32C-specific options and line
	comment characters, and refer to c-m32c.texi.
	* doc/c-m32c.texi: New file.

include/ChangeLog:
2005-07-14  Jim Blandy  <jimb@@redhat.com>

	* dis-asm.h (print_insn_m32c): New declaration.

include/elf/ChangeLog:
2005-07-14  Jim Blandy  <jimb@@redhat.com>

	Add support for Renesas M32C and M16C.
	* common.h (EM_M32C): New machine number.
	* m32c.h: New file.

ld/ChangeLog:
2005-07-14  Jim Blandy  <jimb@@redhat.com>

	Add support for the Renesas M32C and M16C.
	* Makefile.am (ALL_EMULATIONS): Add eelf32m32c.o.
	(eelf32m32c.c): New target.
	* Makefile.in: Regenerated.
	* configure.tgt: Add case for m32c-*-elf.
	* emulparams/elf32m32c.sh: New file.

opcodes/ChangeLog:
2005-07-14  Jim Blandy  <jimb@@redhat.com>

	Add support for the Renesas M32C and M16C.
	* m32c-asm.c, m32c-desc.c, m32c-dis.c, m32c-ibld.c, m32c-opc.c: New.
	* m32c-desc.h, m32c-opc.h: New.
	* Makefile.am (HFILES): List m32c-desc.h and m32c-opc.h.
	(CFILES): List m32c-asm.c, m32c-desc.c, m32c-dis.c, m32c-ibld.c,
	m32c-opc.c.
	(ALL_MACHINES): List m32c-asm.lo, m32c-desc.lo, m32c-dis.lo,
	m32c-ibld.lo, m32c-opc.lo.
	(CLEANFILES): List stamp-m32c.
	(M32C_DEPS): List stamp-m32c, if CGEN_MAINT.
	(CGEN_CPUS): Add m32c.
	(m32c-asm.c, m32c-desc.c, m32c-dis.c, m32c-ibld.c, m32c-opc.c)
	(m32c-desc.h, m32c-opc.h): Depend on M32C_DEPS.
	(m32c_opc_h): New variable.
	(stamp-m32c, m32c-asm.lo, m32c-desc.lo, m32c-dis.lo, m32c-ibld.lo)
	(m32c-opc.lo): New rules.
	* Makefile.in: Regenerated.
	* configure.in: Add case for bfd_m32c_arch.
	* configure: Regenerated.
	* disassemble.c (ARCH_m32c): New.
	[ARCH_m32c]: #include "m32c-desc.h".
	(disassembler) [ARCH_m32c]: Add case for bfd_arch_m32c.
	(disassemble_init_for_target) [ARCH_m32c]: Same.

	* cgen-ops.h, cgen-types.h: New files.
	* Makefile.am (HFILES): List them.
	* Makefile.in: Regenerated.
@
text
@d984 1
a984 1
stamp-m32c: $(CGENDEPS) $(CPUDIR)/m32c.cpu $(CPUDIR)/m32c.opc
d986 2
a987 1
		archfile=$(CPUDIR)/m32c.cpu opcfile=$(CPUDIR)/m32c.opc extrafiles=
d1132 2
a1133 1
  $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/arc.h
d1292 21
d1373 17
a1389 19
ms1-asm.lo: ms1-asm.c sysdep.h config.h \
  $(INCDIR)/ansidecl.h $(BFD_H) $(INCDIR)/symcat.h ms1-desc.h \
  $(INCDIR)/opcode/cgen.h ms1-opc.h opintl.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
ms1-desc.lo: ms1-desc.c sysdep.h config.h \
  $(INCDIR)/ansidecl.h $(BFD_H) $(INCDIR)/symcat.h ms1-desc.h \
  $(INCDIR)/opcode/cgen.h ms1-opc.h opintl.h $(INCDIR)/libiberty.h \
  $(INCDIR)/xregex.h $(INCDIR)/xregex2.h
ms1-dis.lo: ms1-dis.c sysdep.h config.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h \
  $(INCDIR)/libiberty.h ms1-desc.h $(INCDIR)/opcode/cgen.h \
  ms1-opc.h opintl.h
ms1-ibld.lo: ms1-ibld.c sysdep.h config.h \
  $(INCDIR)/ansidecl.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h \
  ms1-desc.h $(INCDIR)/opcode/cgen.h ms1-opc.h \
  opintl.h $(INCDIR)/safe-ctype.h
ms1-opc.lo: ms1-opc.c sysdep.h config.h \
  $(INCDIR)/ansidecl.h $(BFD_H) $(INCDIR)/symcat.h ms1-desc.h \
  $(INCDIR)/opcode/cgen.h ms1-opc.h $(INCDIR)/libiberty.h
@


1.96
log
@	* Makefile.am (stamp-m32r): Fix path to cpu files.
	(stamp-m32r, stamp-iq2000): Likewise.
	* Makefile.in: Regenerate.
	* m32r-asm.c: Regenerate.
	* po/POTFILES.in: Remove arm-opc.h.  Add ms1-asm.c, ms1-desc.c,
	ms1-desc.h, ms1-dis.c, ms1-ibld.c, ms1-opc.c, ms1-opc.h.
@
text
@d249 1
d257 1
d333 5
d457 5
d552 2
a553 2
	stamp-ip2k stamp-m32r stamp-fr30 stamp-frv stamp-openrisc \
	stamp-iq2000 stamp-ms1 stamp-xstormy16 \
d567 1
a567 1
CGEN_CPUS = fr30 frv ip2k m32r ms1 openrisc xstormy16
d570 2
d586 1
d982 23
d1028 2
a1029 1
		archfile=$(srcdir)/../cpu/ms1.cpu opcfile=$(srcdir)/../cpu/ms1.opc extrafiles=
@


1.95
log
@2005-06-15  Dave Brolley  <brolley@@redhat.com>

        Contribute Morpho ms1 on behalf of Red Hat
        * ms1-asm.c, ms1-desc.c, ms1-dis.c, ms1-ibld.c, ms1-opc.c,
        ms1-opc.h: New files, Morpho ms1 target.

        2004-05-14  Stan Cox  <scox@@redhat.com>

        * disassemble.c (ARCH_ms1): Define.
        (disassembler): Handle bfd_arch_ms1

        2004-05-13  Michael Snyder  <msnyder@@redhat.com>

        * Makefile.am, Makefile.in: Add ms1 target.
        * configure.in: Ditto.
@
text
@d1 1
a1 1
# Makefile.in generated by automake 1.9.3 from Makefile.am.
d5 1
a5 1
# 2003, 2004  Free Software Foundation, Inc.
d676 7
a682 1
	@@set fnord $$MAKEFLAGS; amf=$$2; \
d694 1
a694 1
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
d702 7
a708 1
	@@set fnord $$MAKEFLAGS; amf=$$2; \
d729 1
a729 1
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
d969 1
a969 1
stamp-m32r: $(CGENDEPS) $(CPUDIR)/m32r.cpu $(CPUDIR)/m32r.opc
d971 2
a972 1
		archfile=$(CPUDIR)/m32r.cpu opcfile=$(CPUDIR)/m32r.opc extrafiles=opinst
d1000 3
a1002 2
stamp-iq2000: $(CGENDEPS) $(CPUDIR)/iq2000.cpu $(CPUDIR)/iq2000.opc \
	$(CPUDIR)/iq2000m.cpu $(CPUDIR)/iq10.cpu
d1004 2
a1005 1
		archfile=$(CPUDIR)/iq2000.cpu opcfile=$(CPUDIR)/iq2000.opc extrafiles=
@


1.94
log
@opcodes:
	* arm-opc.h: Delete; fold contents into ...
	* arm-dis.c: ... here.  Move includes of internal COFF headers
	next to includes of internal ELF headers.
	(streq, WORD_ADDRESS, BDISP, BDISP23): Delete, unused.
	(struct arm_opcode): Rename struct opcode32.  Make 'assembler' const.
	(struct thumb_opcode): Rename struct opcode16.  Make 'assembler' const.
	(arm_conditional, arm_fp_const, arm_shift, arm_regname, regnames)
	(iwmmxt_wwnames, iwmmxt_wwssnames):
	Make const.
	(regnames): Remove iWMMXt coprocessor register sets.
	(iwmmxt_regnames, iwmmxt_cregnames): New statics.
	(get_arm_regnames): Adjust fourth argument to match above changes.
	(set_iwmmxt_regnames): Delete.
	(print_insn_arm): Constify 'c'.  Use ISO syntax for function
	pointer calls.  Expand sole use of BDISP.  Use iwmmxt_regnames
	and iwmmxt_cregnames, not set_iwmmxt_regnames.
	(print_insn_thumb16, print_insn_thumb32): Constify 'c'.  Use
	ISO syntax for function pointer calls.
include:
	* dis-asm.h (get_arm_regnames): Update prototype.
@
text
@d258 1
d353 5
d472 5
d541 1
a541 1
	stamp-iq2000 stamp-xstormy16 \
d555 1
a555 1
CGEN_CPUS = fr30 frv ip2k m32r openrisc xstormy16
d564 2
a968 2
# .cpu and .opc files for frv are kept in a different directory, but cgen has no switch to specify that location, so
# copy those file to the regular place.
d973 6
d1296 19
@


1.93
log
@2005-05-19  Kelley Cook  <kcook@@gcc.gnu.org>

	* Makefile.in:  Regenerate.
@
text
@a248 1
	arm-opc.h \
d1065 4
a1068 4
  arm-opc.h $(INCDIR)/coff/internal.h $(BFDDIR)/libcoff.h \
  $(INCDIR)/bfdlink.h opintl.h $(INCDIR)/safe-ctype.h \
  $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h \
  $(INCDIR)/elf/external.h $(INCDIR)/elf/arm.h $(INCDIR)/elf/reloc-macros.h
d1175 2
a1176 2
ia64-opc.lo: ia64-opc.c $(INCDIR)/ansidecl.h $(INCDIR)/libiberty.h \
  sysdep.h config.h ia64-asmtab.h $(INCDIR)/opcode/ia64.h \
@


1.92
log
@bfd/
	* Makefile.am (NO_WERROR): Define.
	* warning.m4: New file
	* acinclude.m4: Include warning.m4.
	* configure.in: Invoke AM_BINUTILS_WARNINGS.
	* Makefile.in: Regenerate.
	* configure: Regenerate.
bfd/doc/
	* Makefile.in: Regenerate.
binutils/
	* Makefile.am (NO_WERROR): Define.  Use instead of -Wno-error.
	* configure.in: Include ../bfd/warning.m4 contents.
	* Makefile.in: Regenerate.
	* configure: Regenerate.
	* doc/Makefile.in: Regenerate.
gas/
	* Makefile.am (NO_WERROR): Define.  Use instead of -Wno-error.
	* acinclude.m4: Include ../bfd/warning.m4.
	* configure.in: Invoke AM_BINUTILS_WARNINGS.
	* Makefile.in: Regenerate.
	* configure: Regenerate.
	* doc/Makefile.in: Regenerate.
gprof/
	* Makefile.am (NO_WERROR): Define.
	* acinclude.m4: Include ../bfd/warning.m4.
	* configure.in: Invoke AM_BINUTILS_WARNINGS.
	* Makefile.in: Regenerate.
	* aclocal.m4: Regenerate.
	* configure: Regenerate.
ld/
	* Makefile.am (NO_WERROR): Define.  Use instead of -Wno-error.
	* configure.in: Include ../bfd/warning.m4 contents.
	* Makefile.in: Regenerate.
	* configure: Regenerate.
opcodes/
	* Makefile.am (NO_WERROR): Define.
	* configure.in: Invoke AM_BINUTILS_WARNINGS.
	* Makefile.in: Regenerate.
	* aclocal.m4: Regenerate.
	* configure: Regenerate.
@
text
@a52 1
	$(top_srcdir)/../config/accross.m4 \
@


1.91
log
@	* Makefile.am: Run "make dep-am"
	* Makefile.in: Regenerate.
@
text
@d1 1
a1 1
# Makefile.in generated by automake 1.9.2 from Makefile.am.
d55 2
a56 2
	$(top_srcdir)/../libtool.m4 $(top_srcdir)/../gettext.m4 \
	$(top_srcdir)/configure.in
d162 1
@


1.90
log
@cgen/ChangeLog:
2005-02-07  Jim Blandy  <jimb@@redhat.com>

	* cgen-opc.scm: Don't load fixup.scm here.  (See corresponding
	changes in the opcodes directory.)

opcodes/ChangeLog:
2005-02-07  Jim Blandy  <jimb@@redhat.com>

	* Makefile.am (CGEN): Load guile.scm before calling the main
	application script.
	* Makefile.in: Regenerated.
	* cgen.sh: Be prepared for the 'cgen' argument to contain spaces.
	Simply pass the cgen-opc.scm path to ${cgen} as its first
	argument; ${cgen} itself now contains the '-s', or whatever is
	appropriate for the Scheme being used.
@
text
@d54 3
a56 2
	$(top_srcdir)/../config/acx.m4 $(top_srcdir)/../libtool.m4 \
	$(top_srcdir)/../gettext.m4 $(top_srcdir)/configure.in
d1065 5
a1069 5
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h arm-opc.h \
  $(INCDIR)/coff/internal.h $(BFDDIR)/libcoff.h $(INCDIR)/bfdlink.h \
  opintl.h $(INCDIR)/safe-ctype.h $(BFDDIR)/elf-bfd.h \
  $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h \
  $(INCDIR)/elf/arm.h $(INCDIR)/elf/reloc-macros.h $(INCDIR)/opcode/arm.h
d1253 2
a1254 2
maxq-dis.lo: maxq-dis.c sysdep.h config.h $(INCDIR)/opcode/maxq.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h
@


1.89
log
@* arm-opc.h (arm_opcode, thumb_opcode): Add extra field for the
architecuture defining the insn.
(arm_opcodes, thumb_opcodes): Delete.  Move to ...
* arm-dis.c (arm_opcodes, thumb_opcodes): Here.
Also include opcode/arm.h.
* Makefile.am (arm-dis.lo): Update dependency list.
* Makefile.in: Regenerate.
@
text
@d535 1
a535 1
CGEN = `if test -f ../guile/libguile/guile ; then echo ../guile/libguile/guile; else echo guile ; fi`
@


1.88
log
@Add support fpr MAXQ processor
@
text
@d1068 1
a1068 1
  $(INCDIR)/elf/arm.h $(INCDIR)/elf/reloc-macros.h
@


1.87
log
@	* Makefile.am: Run "make dep-am"
	* Makefile.in: Regenerate.
@
text
@d1 1
a1 1
# Makefile.in generated by automake 1.9.1 from Makefile.am.
d341 1
d459 1
d570 2
a571 2
	      echo ' cd $(srcdir) && $(AUTOMAKE) --cygnus '; \
	      cd $(srcdir) && $(AUTOMAKE) --cygnus  \
d576 1
a576 1
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --cygnus  Makefile'; \
d578 1
a578 1
	  $(AUTOMAKE) --cygnus  Makefile
d1252 2
@


1.86
log
@bfd/

2004-09-17  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.am (AUTOMAKE_OPTIONS): Require 1.9.
	(CONFIG_STATUS_DEPENDENCIES): New.
	(Makefile): Removed.
	(config.status): Likewise.
	* Makefile.in: Regenerated.

opcodes/

2004-09-17  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.am (AUTOMAKE_OPTIONS): Require 1.9.
	(CONFIG_STATUS_DEPENDENCIES): New.
	(Makefile): Removed.
	(config.status): Likewise.
	* Makefile.in: Regenerated.
@
text
@d1378 2
a1379 2
  $(INCDIR)/ansidecl.h sysdep.h config.h $(INCDIR)/dis-asm.h \
  $(BFD_H) $(INCDIR)/symcat.h
@


1.85
log
@	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
	* aclocal.m4: Regenerate.
	* configure: Regenerate.
	* po/POTFILES.in: Regenerate.
	* po/opcodes.pot: Regenerate.
@
text
@d232 1
a232 1
AUTOMAKE_OPTIONS = cygnus
d505 4
d578 9
a893 5
# We should reconfigure whenever bfd/configure.in changes, because
# that's where the version number comes from.
config.status: $(srcdir)/configure $(srcdir)/../bfd/configure.in
	$(SHELL) ./config.status --recheck

a996 2
Makefile: $(BFDDIR)/configure.in

@


1.84
log
@2004-08-30  Nathanael Nerode  <neroden@@gcc.gnu.org>

	* configure.in: Autoupdate to autoconf 2.59.
	* aclocal.m4: Rebuild with aclocal 1.4p6.
	* configure: Rebuild with autoconf 2.59.
	* Makefile.in: Rebuild with automake 1.4p6 (picking up
	bfd changes for autoconf 2.59 on the way).
	* config.in: Rebuild with autoheader 2.59.
@
text
@d1 2
a2 1
# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am
d4 2
a5 1
# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
d15 2
d18 1
a18 1
SHELL = @@SHELL@@
a22 18
prefix = @@prefix@@
exec_prefix = @@exec_prefix@@

bindir = @@bindir@@
sbindir = @@sbindir@@
libexecdir = @@libexecdir@@
datadir = @@datadir@@
sysconfdir = @@sysconfdir@@
sharedstatedir = @@sharedstatedir@@
localstatedir = @@localstatedir@@
libdir = @@libdir@@
infodir = @@infodir@@
mandir = @@mandir@@
includedir = @@includedir@@
oldincludedir = /usr/include

DESTDIR =

a25 1

d27 1
a27 6

ACLOCAL = @@ACLOCAL@@
AUTOCONF = @@AUTOCONF@@
AUTOMAKE = @@AUTOMAKE@@
AUTOHEADER = @@AUTOHEADER@@

d29 5
a33 5
INSTALL_PROGRAM = @@INSTALL_PROGRAM@@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @@INSTALL_DATA@@
INSTALL_SCRIPT = @@INSTALL_SCRIPT@@
transform = @@program_transform_name@@

d40 1
a40 1
host_alias = @@host_alias@@
d42 65
d108 4
a111 1
AS = @@AS@@
d116 1
d118 3
d122 2
a123 2
CXX = @@CXX@@
CXXCPP = @@CXXCPP@@
d125 6
a130 1
DLLTOOL = @@DLLTOOL@@
a132 2
GCJ = @@GCJ@@
GCJFLAGS = @@GCJFLAGS@@
a134 1
GNATBIND = @@GNATBIND@@
a136 1
HAVE_LIB = @@HAVE_LIB@@
d139 6
d149 3
a151 1
LIB = @@LIB@@
a152 1
LN = @@LN@@
d154 1
a154 1
LTLIB = @@LTLIB@@
d156 2
a160 1
OBJDUMP = @@OBJDUMP@@
d163 6
d172 2
d178 1
d181 12
d194 8
a201 2
build_noncanonical = @@build_noncanonical@@
build_subdir = @@build_subdir@@
d203 5
a207 1
do_compare = @@do_compare@@
d209 5
a213 1
host_subdir = @@host_subdir@@
d215 14
a228 1
ncn_cv_ = @@ncn_cv_@@
d230 2
a231 2
target_subdir = @@target_subdir@@

a232 1

a233 1

a236 2

WARN_CFLAGS = @@WARN_CFLAGS@@
a237 4

bfdlibdir = @@bfdlibdir@@
bfdincludedir = @@bfdincludedir@@

d247 18
a264 1
HFILES =  	arm-opc.h 	fr30-desc.h fr30-opc.h 	frv-desc.h frv-opc.h 	h8500-opc.h 	ia64-asmtab.h 	ia64-opc.h 	ip2k-desc.h ip2k-opc.h 	iq2000-desc.h iq2000-opc.h 	m32r-desc.h m32r-opc.h 	mcore-opc.h 	openrisc-desc.h openrisc-opc.h 	sh-opc.h 	sh64-opc.h 	sysdep.h 	w65-opc.h 	xstormy16-desc.h xstormy16-opc.h 	z8k-opc.h
d268 235
a502 5
CFILES =  	a29k-dis.c 	alpha-dis.c 	alpha-opc.c 	arc-dis.c 	arc-opc.c 	arc-ext.c 	arm-dis.c 	avr-dis.c 	cgen-asm.c 	cgen-dis.c 	cgen-opc.c 	cris-dis.c 	cris-opc.c 	crx-dis.c 	crx-opc.c 	d10v-dis.c 	d10v-opc.c 	d30v-dis.c 	d30v-opc.c 	dlx-dis.c 	dis-buf.c 	dis-init.c 	disassemble.c 	fr30-asm.c 	fr30-desc.c 	fr30-dis.c 	fr30-ibld.c 	fr30-opc.c 	frv-asm.c 	frv-desc.c 	frv-dis.c 	frv-ibld.c 	frv-opc.c 	h8300-dis.c 	h8500-dis.c 	hppa-dis.c 	i370-dis.c 	i370-opc.c 	i386-dis.c 	i860-dis.c 	i960-dis.c 	ia64-dis.c 	ia64-opc-a.c 	ia64-opc-b.c 	ia64-opc-f.c 	ia64-opc-i.c 	ia64-opc-m.c 	ia64-opc-d.c 	ia64-opc.c 	ia64-gen.c 	ia64-asmtab.c 	ip2k-asm.c 	ip2k-desc.c 	ip2k-dis.c 	ip2k-ibld.c 	ip2k-opc.c 	iq2000-asm.c 	iq2000-desc.c 	iq2000-dis.c 	iq2000-ibld.c 	iq2000-opc.c 	m32r-asm.c 	m32r-desc.c 	m32r-dis.c 	m32r-ibld.c 	m32r-opc.c 	m32r-opinst.c 	m68hc11-dis.c 	m68hc11-opc.c 	m68k-dis.c 	m68k-opc.c 	m88k-dis.c 	mcore-dis.c 	mips-dis.c 	mips-opc.c 	mips16-opc.c 	m10200-dis.c 	m10200-opc.c 	m10300-dis.c 	m10300-opc.c 	mmix-dis.c 	mmix-opc.c 	ns32k-dis.c 	openrisc-asm.c 	openrisc-desc.c 	openrisc-dis.c 	openrisc-ibld.c 	openrisc-opc.c 	or32-dis.c 	or32-opc.c 	pdp11-dis.c 	pdp11-opc.c 	pj-dis.c 	pj-opc.c 	ppc-dis.c 	ppc-opc.c 	s390-mkopc.c 	s390-opc.c 	s390-dis.c 	sh-dis.c 	sh64-dis.c 	sh64-opc.c 	sparc-dis.c 	sparc-opc.c 	tic30-dis.c 	tic4x-dis.c 	tic54x-dis.c 	tic54x-opc.c 	tic80-dis.c 	tic80-opc.c 	v850-dis.c 	v850-opc.c 	vax-dis.c 	w65-dis.c 	xstormy16-asm.c 	xstormy16-desc.c 	xstormy16-dis.c 	xstormy16-ibld.c 	xstormy16-opc.c 	xtensa-dis.c 	z8k-dis.c 	z8kgen.c


ALL_MACHINES =  	a29k-dis.lo 	alpha-dis.lo 	alpha-opc.lo 	arc-dis.lo 	arc-opc.lo 	arc-ext.lo 	arm-dis.lo 	avr-dis.lo 	cgen-asm.lo 	cgen-dis.lo 	cgen-opc.lo 	cris-dis.lo 	cris-opc.lo 	crx-dis.lo 	crx-opc.lo 	d10v-dis.lo 	d10v-opc.lo 	d30v-dis.lo 	d30v-opc.lo 	dlx-dis.lo 	fr30-asm.lo 	fr30-desc.lo 	fr30-dis.lo 	fr30-ibld.lo 	fr30-opc.lo 	frv-asm.lo 	frv-desc.lo 	frv-dis.lo 	frv-ibld.lo 	frv-opc.lo 	h8300-dis.lo 	h8500-dis.lo 	hppa-dis.lo 	i386-dis.lo 	i370-dis.lo 	i370-opc.lo 	i860-dis.lo 	i960-dis.lo 	ia64-dis.lo 	ia64-opc.lo 	ip2k-asm.lo 	ip2k-desc.lo 	ip2k-dis.lo 	ip2k-ibld.lo 	ip2k-opc.lo 	iq2000-asm.lo 	iq2000-desc.lo 	iq2000-dis.lo 	iq2000-ibld.lo 	iq2000-opc.lo 	m32r-asm.lo 	m32r-desc.lo 	m32r-dis.lo 	m32r-ibld.lo 	m32r-opc.lo 	m32r-opinst.lo 	m68hc11-dis.lo 	m68hc11-opc.lo 	m68k-dis.lo 	m68k-opc.lo 	m88k-dis.lo 	m10200-dis.lo 	m10200-opc.lo 	m10300-dis.lo 	m10300-opc.lo 	mcore-dis.lo 	mips-dis.lo 	mips-opc.lo 	mips16-opc.lo 	mmix-dis.lo 	mmix-opc.lo 	msp430-dis.lo 	ns32k-dis.lo 	openrisc-asm.lo 	openrisc-desc.lo 	openrisc-dis.lo 	openrisc-ibld.lo 	openrisc-opc.lo 	or32-dis.lo 	or32-opc.lo 	pdp11-dis.lo 	pdp11-opc.lo 	pj-dis.lo 	pj-opc.lo 	ppc-dis.lo 	ppc-opc.lo 	s390-dis.lo 	s390-opc.lo 	sh-dis.lo 	sh64-dis.lo 	sh64-opc.lo 	sparc-dis.lo 	sparc-opc.lo 	tic30-dis.lo 	tic4x-dis.lo 	tic54x-dis.lo 	tic54x-opc.lo 	tic80-dis.lo 	tic80-opc.lo 	v850-dis.lo 	v850-opc.lo 	vax-dis.lo 	w65-dis.lo 	xstormy16-asm.lo 	xstormy16-desc.lo 	xstormy16-dis.lo 	xstormy16-ibld.lo 	xstormy16-opc.lo 	xtensa-dis.lo 	z8k-dis.lo

a504 1

a505 1

a519 1

a520 1

d522 4
a525 3

CLEANFILES =  	stamp-ip2k stamp-m32r stamp-fr30 stamp-frv stamp-openrisc 	stamp-iq2000 stamp-xstormy16 	libopcodes.a stamp-lib dep.sed DEP DEPA DEP1 DEP2

d531 6
a536 3

CGENDEPS =  	$(CGENDIR)/desc.scm $(CGENDIR)/desc-cpu.scm 	$(CGENDIR)/opcodes.scm $(CGENDIR)/opc-asmdis.scm 	$(CGENDIR)/opc-ibld.scm $(CGENDIR)/opc-itab.scm 	$(CGENDIR)/opc-opinst.scm 	cgen-asm.in cgen-dis.in cgen-ibld.in

d539 1
d541 1
a541 1
@@CGEN_MAINT_FALSE@@IP2K_DEPS = 
d543 1
a543 1
@@CGEN_MAINT_FALSE@@M32R_DEPS = 
d545 1
a545 1
@@CGEN_MAINT_FALSE@@FR30_DEPS = 
d547 1
a547 1
@@CGEN_MAINT_FALSE@@FRV_DEPS = 
d549 1
a549 1
@@CGEN_MAINT_FALSE@@OPENRISC_DEPS = 
d551 1
a551 1
@@CGEN_MAINT_FALSE@@IQ2000_DEPS = 
d553 2
a554 6
@@CGEN_MAINT_FALSE@@XSTORMY16_DEPS = 
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES = 
LIBRARIES =  $(noinst_LIBRARIES)
d556 18
d575 2
a576 8
DEFS = @@DEFS@@ -I. -I$(srcdir) -I.
CPPFLAGS = @@CPPFLAGS@@
LDFLAGS = @@LDFLAGS@@
LIBS = @@LIBS@@
libopcodes_a_LIBADD = 
libopcodes_a_SOURCES = libopcodes.a.c
libopcodes_a_OBJECTS =  libopcodes.a.$(OBJEXT)
LTLIBRARIES =  $(bfdlib_LTLIBRARIES)
d578 1
a578 30
libopcodes_la_OBJECTS =  dis-buf.lo disassemble.lo dis-init.lo
CFLAGS = @@CFLAGS@@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@@
DIST_COMMON =  ./stamp-h.in ChangeLog Makefile.am Makefile.in \
acinclude.m4 aclocal.m4 config.in configure configure.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = tar
GZIP_ENV = --best
SOURCES = libopcodes.a.c $(libopcodes_la_SOURCES)
OBJECTS = libopcodes.a.$(OBJEXT) $(libopcodes_la_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .lo .o .obj .s
$(srcdir)/Makefile.in: @@MAINTAINER_MODE_TRUE@@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --cygnus Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$@@ CONFIG_HEADERS= $(SHELL) ./config.status

$(ACLOCAL_M4): @@MAINTAINER_MODE_TRUE@@ configure.in  acinclude.m4
	cd $(srcdir) && $(ACLOCAL)
$(srcdir)/configure: @@MAINTAINER_MODE_TRUE@@$(srcdir)/configure.in $(ACLOCAL_M4) $(CONFIGURE_DEPENDENCIES)
d580 2
d583 1
a583 1
config.h: stamp-h
d585 2
a586 2
		rm -f stamp-h; \
		$(MAKE) stamp-h; \
d588 5
a592 11
stamp-h: $(srcdir)/config.in $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES= CONFIG_HEADERS=config.h:config.in \
	     $(SHELL) ./config.status
	@@echo timestamp > stamp-h 2> /dev/null
$(srcdir)/config.in: @@MAINTAINER_MODE_TRUE@@$(srcdir)/stamp-h.in
	@@if test ! -f $@@; then \
		rm -f $(srcdir)/stamp-h.in; \
		$(MAKE) $(srcdir)/stamp-h.in; \
	else :; fi
$(srcdir)/stamp-h.in: $(top_srcdir)/configure.in $(ACLOCAL_M4) 
d594 2
a595 5
	@@echo timestamp > $(srcdir)/stamp-h.in 2> /dev/null

mostlyclean-hdr:

clean-hdr:
d598 3
a600 5
	-rm -f config.h

maintainer-clean-hdr:

mostlyclean-noinstLIBRARIES:
d605 10
a614 17
distclean-noinstLIBRARIES:

maintainer-clean-noinstLIBRARIES:

.c.o:
	$(COMPILE) -c $<

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<
a616 1
	-rm -f *.o core *.core
a618 2
clean-compile:

d622 5
a626 1
maintainer-clean-compile:
d629 1
a629 7
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<
d638 2
a639 14

maintainer-clean-libtool:

mostlyclean-bfdlibLTLIBRARIES:

clean-bfdlibLTLIBRARIES:
	-test -z "$(bfdlib_LTLIBRARIES)" || rm -f $(bfdlib_LTLIBRARIES)

distclean-bfdlibLTLIBRARIES:

maintainer-clean-bfdlibLTLIBRARIES:

libopcodes.la: $(libopcodes_la_OBJECTS) $(libopcodes_la_DEPENDENCIES)
	$(LINK) -rpath $(bfdlibdir) $(libopcodes_la_LDFLAGS) $(libopcodes_la_OBJECTS) $(libopcodes_la_LIBADD) $(LIBS)
d647 2
a648 7

@@SET_MAKE@@

all-recursive install-data-recursive install-exec-recursive \
installdirs-recursive install-recursive uninstall-recursive install-info-recursive \
check-recursive installcheck-recursive info-recursive dvi-recursive:
	@@set fnord $(MAKEFLAGS); amf=$$2; \
d668 1
a668 1
	@@set fnord $(MAKEFLAGS); amf=$$2; \
d670 8
a677 3
	rev=''; list='$(SUBDIRS)'; for subdir in $$list; do \
	  rev="$$subdir $$rev"; \
	  test "$$subdir" != "." || dot_seen=yes; \
d679 1
a679 1
	test "$$dot_seen" = "no" && rev=". $$rev"; \
d695 4
d700 8
d710 2
a711 9
ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS: tags-recursive $(HEADERS) $(SOURCES) config.in $(TAGS_DEPENDENCIES) $(LISP)
d714 7
d722 4
a725 3
   if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && tags="$$tags -i $$here/$$subdir/TAGS"; \
   fi; \
d727 21
a747 3
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
d749 8
a756 6
	test -z "$(ETAGS_ARGS)config.in$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags -o $$here/TAGS $(ETAGS_ARGS) $$tags config.in $$unique $(LISP))

mostlyclean-tags:

clean-tags:
d759 1
a759 66
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	-rm -rf $(distdir)
	GZIP=$(GZIP_ENV) $(TAR) zxf $(distdir).tar.gz
	mkdir $(distdir)/=build
	mkdir $(distdir)/=inst
	dc_install_base=`cd $(distdir)/=inst && pwd`; \
	cd $(distdir)/=build \
	  && ../configure --srcdir=.. --prefix=$$dc_install_base \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) dist
	-rm -rf $(distdir)
	@@banner="$(distdir).tar.gz is ready for distribution"; \
	dashes=`echo "$$banner" | sed s/./=/g`; \
	echo "$$dashes"; \
	echo "$$banner"; \
	echo "$$dashes"
dist: distdir
	-chmod -R a+r $(distdir)
	GZIP=$(GZIP_ENV) $(TAR) chozf $(distdir).tar.gz $(distdir)
	-rm -rf $(distdir)
dist-all: distdir
	-chmod -R a+r $(distdir)
	GZIP=$(GZIP_ENV) $(TAR) chozf $(distdir).tar.gz $(distdir)
	-rm -rf $(distdir)
distdir: $(DISTFILES)
	-rm -rf $(distdir)
	mkdir $(distdir)
	-chmod 777 $(distdir)
	@@for file in $(DISTFILES); do \
	  if test -f $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
	for subdir in $(SUBDIRS); do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    chmod 777 $(distdir)/$$subdir; \
	    (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir=../$(distdir) distdir=../$(distdir)/$$subdir distdir) \
	      || exit 1; \
	  fi; \
	done
info-am:
info: info-recursive
dvi-am:
dvi: dvi-recursive
d762 7
a768 8
installcheck-am:
installcheck: installcheck-recursive
install-info-am: 
install-info: install-info-recursive
all-recursive-am: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

install-exec-am:
a769 2

install-data-am: install-bfdlibLTLIBRARIES
d771 1
d775 2
a776 5
install: install-recursive
uninstall-am: uninstall-bfdlibLTLIBRARIES
uninstall: uninstall-recursive
all-am: Makefile $(LIBRARIES) $(LTLIBRARIES) config.h
all-redirect: all-recursive-am
d778 4
a781 6
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs: installdirs-recursive
installdirs-am:
	$(mkinstalldirs)  $(DESTDIR)$(bfdlibdir)


d788 1
a788 2
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*
d791 38
a828 4
mostlyclean-am:  mostlyclean-hdr mostlyclean-noinstLIBRARIES \
		mostlyclean-compile mostlyclean-libtool \
		mostlyclean-bfdlibLTLIBRARIES mostlyclean-tags \
		mostlyclean-generic
d832 2
a833 3
clean-am:  clean-hdr clean-noinstLIBRARIES clean-compile clean-libtool \
		clean-bfdlibLTLIBRARIES clean-tags clean-generic \
		mostlyclean-am
d835 3
a837 1
clean: clean-recursive
d839 1
a839 4
distclean-am:  distclean-hdr distclean-noinstLIBRARIES distclean-compile \
		distclean-libtool distclean-bfdlibLTLIBRARIES \
		distclean-tags distclean-generic clean-am
	-rm -f libtool
d841 1
a841 2
distclean: distclean-recursive
	-rm -f config.status
d843 1
a843 8
maintainer-clean-am:  maintainer-clean-hdr \
		maintainer-clean-noinstLIBRARIES \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-bfdlibLTLIBRARIES \
		maintainer-clean-tags maintainer-clean-generic \
		distclean-am
	@@echo "This command is intended for maintainers to use;"
	@@echo "it deletes files that may require special tools to rebuild."
d845 1
a845 2
maintainer-clean: maintainer-clean-recursive
	-rm -f config.status
d847 15
a861 21
.PHONY: mostlyclean-hdr distclean-hdr clean-hdr maintainer-clean-hdr \
mostlyclean-noinstLIBRARIES distclean-noinstLIBRARIES \
clean-noinstLIBRARIES maintainer-clean-noinstLIBRARIES \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile mostlyclean-libtool distclean-libtool \
clean-libtool maintainer-clean-libtool mostlyclean-bfdlibLTLIBRARIES \
distclean-bfdlibLTLIBRARIES clean-bfdlibLTLIBRARIES \
maintainer-clean-bfdlibLTLIBRARIES uninstall-bfdlibLTLIBRARIES \
install-bfdlibLTLIBRARIES install-data-recursive \
uninstall-data-recursive install-exec-recursive \
uninstall-exec-recursive installdirs-recursive uninstalldirs-recursive \
all-recursive check-recursive installcheck-recursive info-recursive \
dvi-recursive mostlyclean-recursive distclean-recursive clean-recursive \
maintainer-clean-recursive tags tags-recursive mostlyclean-tags \
distclean-tags clean-tags maintainer-clean-tags distdir info-am info \
dvi-am dvi check check-am installcheck-am installcheck install-info-am \
install-info all-recursive-am install-exec-am install-exec \
install-data-am install-data install-am install uninstall-am uninstall \
all-redirect all-am all installdirs-am installdirs mostlyclean-generic \
distclean-generic clean-generic maintainer-clean-generic clean \
mostlyclean distclean maintainer-clean
d1076 5
a1080 3
crx-dis.lo: crx-dis.c $(INCDIR)/opcode/crx.h \
  $(INCDIR)/dis-asm.h sysdep.h $(INCDIR)/ansidecl.h
crx-opc.lo: crx-opc.c $(INCDIR)/opcode/crx.h
d1315 1
a1315 1
  sh-opc.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h
a1378 1

@


1.83
log
@Add new port: crx-elf
@
text
@d1 1
a1 1
# Makefile.in generated automatically by automake 1.4-p5 from Makefile.am
a59 2
build_alias = @@build_alias@@
build_triplet = @@build@@
a61 2
target_alias = @@target_alias@@
target_triplet = @@target@@
d69 1
d80 1
d83 1
d90 1
d92 1
d94 1
d112 2
d115 3
d119 3
d146 1
a146 18
HFILES = \
	arm-opc.h \
	fr30-desc.h fr30-opc.h \
	frv-desc.h frv-opc.h \
	h8500-opc.h \
	ia64-asmtab.h \
	ia64-opc.h \
	ip2k-desc.h ip2k-opc.h \
	iq2000-desc.h iq2000-opc.h \
	m32r-desc.h m32r-opc.h \
	mcore-opc.h \
	openrisc-desc.h openrisc-opc.h \
	sh-opc.h \
	sh64-opc.h \
	sysdep.h \
	w65-opc.h \
	xstormy16-desc.h xstormy16-opc.h \
	z8k-opc.h
d150 4
a153 236
CFILES = \
	a29k-dis.c \
	alpha-dis.c \
	alpha-opc.c \
	arc-dis.c \
	arc-opc.c \
	arc-ext.c \
	arm-dis.c \
	avr-dis.c \
	cgen-asm.c \
	cgen-dis.c \
	cgen-opc.c \
	cris-dis.c \
	cris-opc.c \
	crx-dis.c \
	crx-opc.c \
	d10v-dis.c \
	d10v-opc.c \
	d30v-dis.c \
	d30v-opc.c \
	dlx-dis.c \
	dis-buf.c \
	dis-init.c \
	disassemble.c \
	fr30-asm.c \
	fr30-desc.c \
	fr30-dis.c \
	fr30-ibld.c \
	fr30-opc.c \
	frv-asm.c \
	frv-desc.c \
	frv-dis.c \
	frv-ibld.c \
	frv-opc.c \
	h8300-dis.c \
	h8500-dis.c \
	hppa-dis.c \
	i370-dis.c \
	i370-opc.c \
	i386-dis.c \
	i860-dis.c \
	i960-dis.c \
	ia64-dis.c \
	ia64-opc-a.c \
	ia64-opc-b.c \
	ia64-opc-f.c \
	ia64-opc-i.c \
	ia64-opc-m.c \
	ia64-opc-d.c \
	ia64-opc.c \
	ia64-gen.c \
	ia64-asmtab.c \
	ip2k-asm.c \
	ip2k-desc.c \
	ip2k-dis.c \
	ip2k-ibld.c \
	ip2k-opc.c \
	iq2000-asm.c \
	iq2000-desc.c \
	iq2000-dis.c \
	iq2000-ibld.c \
	iq2000-opc.c \
	m32r-asm.c \
	m32r-desc.c \
	m32r-dis.c \
	m32r-ibld.c \
	m32r-opc.c \
	m32r-opinst.c \
	m68hc11-dis.c \
	m68hc11-opc.c \
	m68k-dis.c \
	m68k-opc.c \
	m88k-dis.c \
	mcore-dis.c \
	mips-dis.c \
	mips-opc.c \
	mips16-opc.c \
	m10200-dis.c \
	m10200-opc.c \
	m10300-dis.c \
	m10300-opc.c \
	mmix-dis.c \
	mmix-opc.c \
	ns32k-dis.c \
	openrisc-asm.c \
	openrisc-desc.c \
	openrisc-dis.c \
	openrisc-ibld.c \
	openrisc-opc.c \
	or32-dis.c \
	or32-opc.c \
	pdp11-dis.c \
	pdp11-opc.c \
	pj-dis.c \
	pj-opc.c \
	ppc-dis.c \
	ppc-opc.c \
	s390-mkopc.c \
	s390-opc.c \
	s390-dis.c \
	sh-dis.c \
	sh64-dis.c \
	sh64-opc.c \
	sparc-dis.c \
	sparc-opc.c \
	tic30-dis.c \
	tic4x-dis.c \
	tic54x-dis.c \
	tic54x-opc.c \
	tic80-dis.c \
	tic80-opc.c \
	v850-dis.c \
	v850-opc.c \
	vax-dis.c \
	w65-dis.c \
	xstormy16-asm.c \
	xstormy16-desc.c \
	xstormy16-dis.c \
	xstormy16-ibld.c \
	xstormy16-opc.c \
	xtensa-dis.c \
	z8k-dis.c \
	z8kgen.c


ALL_MACHINES = \
	a29k-dis.lo \
	alpha-dis.lo \
	alpha-opc.lo \
	arc-dis.lo \
	arc-opc.lo \
	arc-ext.lo \
	arm-dis.lo \
	avr-dis.lo \
	cgen-asm.lo \
	cgen-dis.lo \
	cgen-opc.lo \
	cris-dis.lo \
	cris-opc.lo \
	crx-dis.lo \
	crx-opc.lo \
	d10v-dis.lo \
	d10v-opc.lo \
	d30v-dis.lo \
	d30v-opc.lo \
	dlx-dis.lo \
	fr30-asm.lo \
	fr30-desc.lo \
	fr30-dis.lo \
	fr30-ibld.lo \
	fr30-opc.lo \
	frv-asm.lo \
	frv-desc.lo \
	frv-dis.lo \
	frv-ibld.lo \
	frv-opc.lo \
	h8300-dis.lo \
	h8500-dis.lo \
	hppa-dis.lo \
	i386-dis.lo \
	i370-dis.lo \
	i370-opc.lo \
	i860-dis.lo \
	i960-dis.lo \
	ia64-dis.lo \
	ia64-opc.lo \
	ip2k-asm.lo \
	ip2k-desc.lo \
	ip2k-dis.lo \
	ip2k-ibld.lo \
	ip2k-opc.lo \
	iq2000-asm.lo \
	iq2000-desc.lo \
	iq2000-dis.lo \
	iq2000-ibld.lo \
	iq2000-opc.lo \
	m32r-asm.lo \
	m32r-desc.lo \
	m32r-dis.lo \
	m32r-ibld.lo \
	m32r-opc.lo \
	m32r-opinst.lo \
	m68hc11-dis.lo \
	m68hc11-opc.lo \
	m68k-dis.lo \
	m68k-opc.lo \
	m88k-dis.lo \
	m10200-dis.lo \
	m10200-opc.lo \
	m10300-dis.lo \
	m10300-opc.lo \
	mcore-dis.lo \
	mips-dis.lo \
	mips-opc.lo \
	mips16-opc.lo \
	mmix-dis.lo \
	mmix-opc.lo \
	msp430-dis.lo \
	ns32k-dis.lo \
	openrisc-asm.lo \
	openrisc-desc.lo \
	openrisc-dis.lo \
	openrisc-ibld.lo \
	openrisc-opc.lo \
	or32-dis.lo \
	or32-opc.lo \
	pdp11-dis.lo \
	pdp11-opc.lo \
	pj-dis.lo \
	pj-opc.lo \
	ppc-dis.lo \
	ppc-opc.lo \
	s390-dis.lo \
	s390-opc.lo \
	sh-dis.lo \
	sh64-dis.lo \
	sh64-opc.lo \
	sparc-dis.lo \
	sparc-opc.lo \
	tic30-dis.lo \
	tic4x-dis.lo \
	tic54x-dis.lo \
	tic54x-opc.lo \
	tic80-dis.lo \
	tic80-opc.lo \
	v850-dis.lo \
	v850-opc.lo \
	vax-dis.lo \
	w65-dis.lo \
	xstormy16-asm.lo \
	xstormy16-desc.lo \
	xstormy16-dis.lo \
	xstormy16-ibld.lo \
	xstormy16-opc.lo \
	xtensa-dis.lo \
	z8k-dis.lo
d179 1
a179 4
CLEANFILES = \
	stamp-ip2k stamp-m32r stamp-fr30 stamp-frv stamp-openrisc \
	stamp-iq2000 stamp-xstormy16 \
	libopcodes.a stamp-lib dep.sed DEP DEPA DEP1 DEP2
d187 1
a187 6
CGENDEPS = \
	$(CGENDIR)/desc.scm $(CGENDIR)/desc-cpu.scm \
	$(CGENDIR)/opcodes.scm $(CGENDIR)/opc-asmdis.scm \
	$(CGENDIR)/opc-ibld.scm $(CGENDIR)/opc-itab.scm \
	$(CGENDIR)/opc-opinst.scm \
	cgen-asm.in cgen-dis.in cgen-ibld.in
d191 1
a191 1
@@CGEN_MAINT_TRUE@@IP2K_DEPS = @@CGEN_MAINT_TRUE@@stamp-ip2k
d193 1
a193 1
@@CGEN_MAINT_TRUE@@M32R_DEPS = @@CGEN_MAINT_TRUE@@stamp-m32r
d195 1
a195 1
@@CGEN_MAINT_TRUE@@FR30_DEPS = @@CGEN_MAINT_TRUE@@stamp-fr30
d197 1
a197 1
@@CGEN_MAINT_TRUE@@FRV_DEPS = @@CGEN_MAINT_TRUE@@stamp-frv
d199 1
a199 1
@@CGEN_MAINT_TRUE@@OPENRISC_DEPS = @@CGEN_MAINT_TRUE@@stamp-openrisc
d201 1
a201 1
@@CGEN_MAINT_TRUE@@IQ2000_DEPS = @@CGEN_MAINT_TRUE@@stamp-iq2000
d203 1
a203 1
@@CGEN_MAINT_TRUE@@XSTORMY16_DEPS = @@CGEN_MAINT_TRUE@@stamp-xstormy16
d233 1
a233 1
TAR = gtar
d424 1
a424 1
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags config.in $$unique $(LISP) -o $$here/TAGS)
@


1.82
log
@	* Makefile.am (libopcodes_la_DEPENDENCIES)
	(libopcodes_la_LIBADD): Revert 2003-05-17 change.  Add explanatory
	comment about the problem.
	* Makefile.in: Regenerate.
@
text
@d1 1
a1 1
# Makefile.in generated automatically by automake 1.4 from Makefile.am
d3 1
a3 1
# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
d171 2
d296 2
d480 1
a480 1
TAR = tar
d629 1
a629 1
	  test "$$subdir" = "." && dot_seen=yes; \
d1051 3
@


1.82.8.1
log
@Merge mainline to intercu branch - 2004-09-15
@
text
@d1 1
a1 1
# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am
d3 1
a3 1
# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
d60 2
d64 2
a72 1
CPP = @@CPP@@
a82 1
GNATBIND = @@GNATBIND@@
a84 1
HAVE_LIB = @@HAVE_LIB@@
a90 1
LIB = @@LIB@@
a91 1
LN = @@LN@@
a92 1
LTLIB = @@LTLIB@@
a109 2
build_noncanonical = @@build_noncanonical@@
build_subdir = @@build_subdir@@
a110 3
do_compare = @@do_compare@@
host_noncanonical = @@host_noncanonical@@
host_subdir = @@host_subdir@@
a111 3
ncn_cv_ = @@ncn_cv_@@
target_noncanonical = @@target_noncanonical@@
target_subdir = @@target_subdir@@
d136 18
a153 1
HFILES =  	arm-opc.h 	fr30-desc.h fr30-opc.h 	frv-desc.h frv-opc.h 	h8500-opc.h 	ia64-asmtab.h 	ia64-opc.h 	ip2k-desc.h ip2k-opc.h 	iq2000-desc.h iq2000-opc.h 	m32r-desc.h m32r-opc.h 	mcore-opc.h 	openrisc-desc.h openrisc-opc.h 	sh-opc.h 	sh64-opc.h 	sysdep.h 	w65-opc.h 	xstormy16-desc.h xstormy16-opc.h 	z8k-opc.h
d157 232
a388 4
CFILES =  	a29k-dis.c 	alpha-dis.c 	alpha-opc.c 	arc-dis.c 	arc-opc.c 	arc-ext.c 	arm-dis.c 	avr-dis.c 	cgen-asm.c 	cgen-dis.c 	cgen-opc.c 	cris-dis.c 	cris-opc.c 	crx-dis.c 	crx-opc.c 	d10v-dis.c 	d10v-opc.c 	d30v-dis.c 	d30v-opc.c 	dlx-dis.c 	dis-buf.c 	dis-init.c 	disassemble.c 	fr30-asm.c 	fr30-desc.c 	fr30-dis.c 	fr30-ibld.c 	fr30-opc.c 	frv-asm.c 	frv-desc.c 	frv-dis.c 	frv-ibld.c 	frv-opc.c 	h8300-dis.c 	h8500-dis.c 	hppa-dis.c 	i370-dis.c 	i370-opc.c 	i386-dis.c 	i860-dis.c 	i960-dis.c 	ia64-dis.c 	ia64-opc-a.c 	ia64-opc-b.c 	ia64-opc-f.c 	ia64-opc-i.c 	ia64-opc-m.c 	ia64-opc-d.c 	ia64-opc.c 	ia64-gen.c 	ia64-asmtab.c 	ip2k-asm.c 	ip2k-desc.c 	ip2k-dis.c 	ip2k-ibld.c 	ip2k-opc.c 	iq2000-asm.c 	iq2000-desc.c 	iq2000-dis.c 	iq2000-ibld.c 	iq2000-opc.c 	m32r-asm.c 	m32r-desc.c 	m32r-dis.c 	m32r-ibld.c 	m32r-opc.c 	m32r-opinst.c 	m68hc11-dis.c 	m68hc11-opc.c 	m68k-dis.c 	m68k-opc.c 	m88k-dis.c 	mcore-dis.c 	mips-dis.c 	mips-opc.c 	mips16-opc.c 	m10200-dis.c 	m10200-opc.c 	m10300-dis.c 	m10300-opc.c 	mmix-dis.c 	mmix-opc.c 	ns32k-dis.c 	openrisc-asm.c 	openrisc-desc.c 	openrisc-dis.c 	openrisc-ibld.c 	openrisc-opc.c 	or32-dis.c 	or32-opc.c 	pdp11-dis.c 	pdp11-opc.c 	pj-dis.c 	pj-opc.c 	ppc-dis.c 	ppc-opc.c 	s390-mkopc.c 	s390-opc.c 	s390-dis.c 	sh-dis.c 	sh64-dis.c 	sh64-opc.c 	sparc-dis.c 	sparc-opc.c 	tic30-dis.c 	tic4x-dis.c 	tic54x-dis.c 	tic54x-opc.c 	tic80-dis.c 	tic80-opc.c 	v850-dis.c 	v850-opc.c 	vax-dis.c 	w65-dis.c 	xstormy16-asm.c 	xstormy16-desc.c 	xstormy16-dis.c 	xstormy16-ibld.c 	xstormy16-opc.c 	xtensa-dis.c 	z8k-dis.c 	z8kgen.c


ALL_MACHINES =  	a29k-dis.lo 	alpha-dis.lo 	alpha-opc.lo 	arc-dis.lo 	arc-opc.lo 	arc-ext.lo 	arm-dis.lo 	avr-dis.lo 	cgen-asm.lo 	cgen-dis.lo 	cgen-opc.lo 	cris-dis.lo 	cris-opc.lo 	crx-dis.lo 	crx-opc.lo 	d10v-dis.lo 	d10v-opc.lo 	d30v-dis.lo 	d30v-opc.lo 	dlx-dis.lo 	fr30-asm.lo 	fr30-desc.lo 	fr30-dis.lo 	fr30-ibld.lo 	fr30-opc.lo 	frv-asm.lo 	frv-desc.lo 	frv-dis.lo 	frv-ibld.lo 	frv-opc.lo 	h8300-dis.lo 	h8500-dis.lo 	hppa-dis.lo 	i386-dis.lo 	i370-dis.lo 	i370-opc.lo 	i860-dis.lo 	i960-dis.lo 	ia64-dis.lo 	ia64-opc.lo 	ip2k-asm.lo 	ip2k-desc.lo 	ip2k-dis.lo 	ip2k-ibld.lo 	ip2k-opc.lo 	iq2000-asm.lo 	iq2000-desc.lo 	iq2000-dis.lo 	iq2000-ibld.lo 	iq2000-opc.lo 	m32r-asm.lo 	m32r-desc.lo 	m32r-dis.lo 	m32r-ibld.lo 	m32r-opc.lo 	m32r-opinst.lo 	m68hc11-dis.lo 	m68hc11-opc.lo 	m68k-dis.lo 	m68k-opc.lo 	m88k-dis.lo 	m10200-dis.lo 	m10200-opc.lo 	m10300-dis.lo 	m10300-opc.lo 	mcore-dis.lo 	mips-dis.lo 	mips-opc.lo 	mips16-opc.lo 	mmix-dis.lo 	mmix-opc.lo 	msp430-dis.lo 	ns32k-dis.lo 	openrisc-asm.lo 	openrisc-desc.lo 	openrisc-dis.lo 	openrisc-ibld.lo 	openrisc-opc.lo 	or32-dis.lo 	or32-opc.lo 	pdp11-dis.lo 	pdp11-opc.lo 	pj-dis.lo 	pj-opc.lo 	ppc-dis.lo 	ppc-opc.lo 	s390-dis.lo 	s390-opc.lo 	sh-dis.lo 	sh64-dis.lo 	sh64-opc.lo 	sparc-dis.lo 	sparc-opc.lo 	tic30-dis.lo 	tic4x-dis.lo 	tic54x-dis.lo 	tic54x-opc.lo 	tic80-dis.lo 	tic80-opc.lo 	v850-dis.lo 	v850-opc.lo 	vax-dis.lo 	w65-dis.lo 	xstormy16-asm.lo 	xstormy16-desc.lo 	xstormy16-dis.lo 	xstormy16-ibld.lo 	xstormy16-opc.lo 	xtensa-dis.lo 	z8k-dis.lo
d414 4
a417 1
CLEANFILES =  	stamp-ip2k stamp-m32r stamp-fr30 stamp-frv stamp-openrisc 	stamp-iq2000 stamp-xstormy16 	libopcodes.a stamp-lib dep.sed DEP DEPA DEP1 DEP2
d425 6
a430 1
CGENDEPS =  	$(CGENDIR)/desc.scm $(CGENDIR)/desc-cpu.scm 	$(CGENDIR)/opcodes.scm $(CGENDIR)/opc-asmdis.scm 	$(CGENDIR)/opc-ibld.scm $(CGENDIR)/opc-itab.scm 	$(CGENDIR)/opc-opinst.scm 	cgen-asm.in cgen-dis.in cgen-ibld.in
d434 1
a434 1
@@CGEN_MAINT_TRUE@@IP2K_DEPS = stamp-ip2k
d436 1
a436 1
@@CGEN_MAINT_TRUE@@M32R_DEPS = stamp-m32r
d438 1
a438 1
@@CGEN_MAINT_TRUE@@FR30_DEPS = stamp-fr30
d440 1
a440 1
@@CGEN_MAINT_TRUE@@FRV_DEPS = stamp-frv
d442 1
a442 1
@@CGEN_MAINT_TRUE@@OPENRISC_DEPS = stamp-openrisc
d444 1
a444 1
@@CGEN_MAINT_TRUE@@IQ2000_DEPS = stamp-iq2000
d446 1
a446 1
@@CGEN_MAINT_TRUE@@XSTORMY16_DEPS = stamp-xstormy16
d625 1
a625 1
	  test "$$subdir" != "." || dot_seen=yes; \
d667 1
a667 1
	  || (cd $(srcdir) && etags -o $$here/TAGS $(ETAGS_ARGS) $$tags config.in $$unique $(LISP))
a1046 3
crx-dis.lo: crx-dis.c $(INCDIR)/opcode/crx.h \
  $(INCDIR)/dis-asm.h sysdep.h $(INCDIR)/ansidecl.h
crx-opc.lo: crx-opc.c $(INCDIR)/opcode/crx.h
@


1.82.8.2
log
@Merge from mainline.
@
text
@d1 1
a1 2
# Makefile.in generated by automake 1.9.1 from Makefile.am.
# @@configure_input@@
d3 1
a3 2
# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
a12 1
@@SET_MAKE@@
d14 1
a14 2

SOURCES = libopcodes.c $(libopcodes_la_SOURCES)
d19 18
d40 1
d42 6
a47 1
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
d49 5
a53 5
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
d60 1
a60 1
build_triplet = @@build@@
a61 65
target_triplet = @@target@@
DIST_COMMON = $(srcdir)/../config.guess $(srcdir)/../config.sub \
	ChangeLog $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/configure $(am__configure_deps) \
	$(srcdir)/config.in $(srcdir)/../mkinstalldirs \
	$(top_srcdir)/po/Make-in $(srcdir)/../ltmain.sh \
	$(srcdir)/../config.guess $(srcdir)/../config.sub
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/../bfd/acinclude.m4 \
	$(top_srcdir)/../config/accross.m4 \
	$(top_srcdir)/../config/acx.m4 $(top_srcdir)/../libtool.m4 \
	$(top_srcdir)/../gettext.m4 $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno configure.status.lineno
mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES = po/Makefile.in
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
libopcodes_a_AR = $(AR) $(ARFLAGS)
libopcodes_a_LIBADD =
libopcodes_a_SOURCES = libopcodes.c
libopcodes_a_OBJECTS = libopcodes.$(OBJEXT)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(bfdlibdir)"
bfdlibLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(bfdlib_LTLIBRARIES)
am__DEPENDENCIES_1 =
am_libopcodes_la_OBJECTS = dis-buf.lo disassemble.lo dis-init.lo
libopcodes_la_OBJECTS = $(am_libopcodes_la_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I.
depcomp =
am__depfiles_maybe =
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@@
SOURCES = libopcodes.c $(libopcodes_la_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
ACLOCAL = @@ACLOCAL@@
ALLOCA = @@ALLOCA@@
AMDEP_FALSE = @@AMDEP_FALSE@@
AMDEP_TRUE = @@AMDEP_TRUE@@
AMTAR = @@AMTAR@@
d63 1
a63 4
AUTOCONF = @@AUTOCONF@@
AUTOHEADER = @@AUTOHEADER@@
AUTOMAKE = @@AUTOMAKE@@
AWK = @@AWK@@
a67 1
CCDEPMODE = @@CCDEPMODE@@
a68 3
CFLAGS = @@CFLAGS@@
CGEN_MAINT_FALSE = @@CGEN_MAINT_FALSE@@
CGEN_MAINT_TRUE = @@CGEN_MAINT_TRUE@@
d70 2
a71 2
CPPFLAGS = @@CPPFLAGS@@
CYGPATH_W = @@CYGPATH_W@@
d73 1
a73 6
DEFS = @@DEFS@@
DEPDIR = @@DEPDIR@@
ECHO_C = @@ECHO_C@@
ECHO_N = @@ECHO_N@@
ECHO_T = @@ECHO_T@@
EGREP = @@EGREP@@
d76 2
d80 1
d83 1
a85 6
INSTALL_DATA = @@INSTALL_DATA@@
INSTALL_LIBBFD_FALSE = @@INSTALL_LIBBFD_FALSE@@
INSTALL_LIBBFD_TRUE = @@INSTALL_LIBBFD_TRUE@@
INSTALL_PROGRAM = @@INSTALL_PROGRAM@@
INSTALL_SCRIPT = @@INSTALL_SCRIPT@@
INSTALL_STRIP_PROGRAM = @@INSTALL_STRIP_PROGRAM@@
d90 1
a90 3
LDFLAGS = @@LDFLAGS@@
LIBOBJS = @@LIBOBJS@@
LIBS = @@LIBS@@
d92 1
d94 1
a94 1
LTLIBOBJS = @@LTLIBOBJS@@
a95 2
MAINTAINER_MODE_FALSE = @@MAINTAINER_MODE_FALSE@@
MAINTAINER_MODE_TRUE = @@MAINTAINER_MODE_TRUE@@
d99 1
a101 6
PACKAGE_BUGREPORT = @@PACKAGE_BUGREPORT@@
PACKAGE_NAME = @@PACKAGE_NAME@@
PACKAGE_STRING = @@PACKAGE_STRING@@
PACKAGE_TARNAME = @@PACKAGE_TARNAME@@
PACKAGE_VERSION = @@PACKAGE_VERSION@@
PATH_SEPARATOR = @@PATH_SEPARATOR@@
a104 2
SET_MAKE = @@SET_MAKE@@
SHELL = @@SHELL@@
a108 1
WARN_CFLAGS = @@WARN_CFLAGS@@
a110 12
XGETTEXT = @@XGETTEXT@@
ac_ct_AR = @@ac_ct_AR@@
ac_ct_CC = @@ac_ct_CC@@
ac_ct_RANLIB = @@ac_ct_RANLIB@@
ac_ct_STRIP = @@ac_ct_STRIP@@
am__fastdepCC_FALSE = @@am__fastdepCC_FALSE@@
am__fastdepCC_TRUE = @@am__fastdepCC_TRUE@@
am__include = @@am__include@@
am__leading_dot = @@am__leading_dot@@
am__quote = @@am__quote@@
am__tar = @@am__tar@@
am__untar = @@am__untar@@
d112 2
a113 8
bfdincludedir = @@bfdincludedir@@
bfdlibdir = @@bfdlibdir@@
bindir = @@bindir@@
build = @@build@@
build_alias = @@build_alias@@
build_cpu = @@build_cpu@@
build_os = @@build_os@@
build_vendor = @@build_vendor@@
d115 1
a115 5
datadir = @@datadir@@
exec_prefix = @@exec_prefix@@
host = @@host@@
host_alias = @@host_alias@@
host_cpu = @@host_cpu@@
d117 1
a117 5
host_os = @@host_os@@
host_vendor = @@host_vendor@@
includedir = @@includedir@@
infodir = @@infodir@@
install_sh = @@install_sh@@
d119 1
a119 14
libdir = @@libdir@@
libexecdir = @@libexecdir@@
localstatedir = @@localstatedir@@
mandir = @@mandir@@
mkdir_p = @@mkdir_p@@
oldincludedir = @@oldincludedir@@
prefix = @@prefix@@
program_transform_name = @@program_transform_name@@
sbindir = @@sbindir@@
sharedstatedir = @@sharedstatedir@@
sysconfdir = @@sysconfdir@@
target = @@target@@
target_alias = @@target_alias@@
target_cpu = @@target_cpu@@
d121 4
a124 3
target_os = @@target_os@@
target_vendor = @@target_vendor@@
AUTOMAKE_OPTIONS = 1.9 cygnus
d126 1
d130 2
d133 4
d146 1
a146 18
HFILES = \
	arm-opc.h \
	fr30-desc.h fr30-opc.h \
	frv-desc.h frv-opc.h \
	h8500-opc.h \
	ia64-asmtab.h \
	ia64-opc.h \
	ip2k-desc.h ip2k-opc.h \
	iq2000-desc.h iq2000-opc.h \
	m32r-desc.h m32r-opc.h \
	mcore-opc.h \
	openrisc-desc.h openrisc-opc.h \
	sh-opc.h \
	sh64-opc.h \
	sysdep.h \
	w65-opc.h \
	xstormy16-desc.h xstormy16-opc.h \
	z8k-opc.h
d150 5
a154 235
CFILES = \
	a29k-dis.c \
	alpha-dis.c \
	alpha-opc.c \
	arc-dis.c \
	arc-opc.c \
	arc-ext.c \
	arm-dis.c \
	avr-dis.c \
	cgen-asm.c \
	cgen-dis.c \
	cgen-opc.c \
	cris-dis.c \
	cris-opc.c \
	crx-dis.c \
	crx-opc.c \
	d10v-dis.c \
	d10v-opc.c \
	d30v-dis.c \
	d30v-opc.c \
	dlx-dis.c \
	dis-buf.c \
	dis-init.c \
	disassemble.c \
	fr30-asm.c \
	fr30-desc.c \
	fr30-dis.c \
	fr30-ibld.c \
	fr30-opc.c \
	frv-asm.c \
	frv-desc.c \
	frv-dis.c \
	frv-ibld.c \
	frv-opc.c \
	h8300-dis.c \
	h8500-dis.c \
	hppa-dis.c \
	i370-dis.c \
	i370-opc.c \
	i386-dis.c \
	i860-dis.c \
	i960-dis.c \
	ia64-dis.c \
	ia64-opc-a.c \
	ia64-opc-b.c \
	ia64-opc-f.c \
	ia64-opc-i.c \
	ia64-opc-m.c \
	ia64-opc-d.c \
	ia64-opc.c \
	ia64-gen.c \
	ia64-asmtab.c \
	ip2k-asm.c \
	ip2k-desc.c \
	ip2k-dis.c \
	ip2k-ibld.c \
	ip2k-opc.c \
	iq2000-asm.c \
	iq2000-desc.c \
	iq2000-dis.c \
	iq2000-ibld.c \
	iq2000-opc.c \
	m32r-asm.c \
	m32r-desc.c \
	m32r-dis.c \
	m32r-ibld.c \
	m32r-opc.c \
	m32r-opinst.c \
	m68hc11-dis.c \
	m68hc11-opc.c \
	m68k-dis.c \
	m68k-opc.c \
	m88k-dis.c \
	mcore-dis.c \
	mips-dis.c \
	mips-opc.c \
	mips16-opc.c \
	m10200-dis.c \
	m10200-opc.c \
	m10300-dis.c \
	m10300-opc.c \
	mmix-dis.c \
	mmix-opc.c \
	ns32k-dis.c \
	openrisc-asm.c \
	openrisc-desc.c \
	openrisc-dis.c \
	openrisc-ibld.c \
	openrisc-opc.c \
	or32-dis.c \
	or32-opc.c \
	pdp11-dis.c \
	pdp11-opc.c \
	pj-dis.c \
	pj-opc.c \
	ppc-dis.c \
	ppc-opc.c \
	s390-mkopc.c \
	s390-opc.c \
	s390-dis.c \
	sh-dis.c \
	sh64-dis.c \
	sh64-opc.c \
	sparc-dis.c \
	sparc-opc.c \
	tic30-dis.c \
	tic4x-dis.c \
	tic54x-dis.c \
	tic54x-opc.c \
	tic80-dis.c \
	tic80-opc.c \
	v850-dis.c \
	v850-opc.c \
	vax-dis.c \
	w65-dis.c \
	xstormy16-asm.c \
	xstormy16-desc.c \
	xstormy16-dis.c \
	xstormy16-ibld.c \
	xstormy16-opc.c \
	xtensa-dis.c \
	z8k-dis.c \
	z8kgen.c

ALL_MACHINES = \
	a29k-dis.lo \
	alpha-dis.lo \
	alpha-opc.lo \
	arc-dis.lo \
	arc-opc.lo \
	arc-ext.lo \
	arm-dis.lo \
	avr-dis.lo \
	cgen-asm.lo \
	cgen-dis.lo \
	cgen-opc.lo \
	cris-dis.lo \
	cris-opc.lo \
	crx-dis.lo \
	crx-opc.lo \
	d10v-dis.lo \
	d10v-opc.lo \
	d30v-dis.lo \
	d30v-opc.lo \
	dlx-dis.lo \
	fr30-asm.lo \
	fr30-desc.lo \
	fr30-dis.lo \
	fr30-ibld.lo \
	fr30-opc.lo \
	frv-asm.lo \
	frv-desc.lo \
	frv-dis.lo \
	frv-ibld.lo \
	frv-opc.lo \
	h8300-dis.lo \
	h8500-dis.lo \
	hppa-dis.lo \
	i386-dis.lo \
	i370-dis.lo \
	i370-opc.lo \
	i860-dis.lo \
	i960-dis.lo \
	ia64-dis.lo \
	ia64-opc.lo \
	ip2k-asm.lo \
	ip2k-desc.lo \
	ip2k-dis.lo \
	ip2k-ibld.lo \
	ip2k-opc.lo \
	iq2000-asm.lo \
	iq2000-desc.lo \
	iq2000-dis.lo \
	iq2000-ibld.lo \
	iq2000-opc.lo \
	m32r-asm.lo \
	m32r-desc.lo \
	m32r-dis.lo \
	m32r-ibld.lo \
	m32r-opc.lo \
	m32r-opinst.lo \
	m68hc11-dis.lo \
	m68hc11-opc.lo \
	m68k-dis.lo \
	m68k-opc.lo \
	m88k-dis.lo \
	m10200-dis.lo \
	m10200-opc.lo \
	m10300-dis.lo \
	m10300-opc.lo \
	mcore-dis.lo \
	mips-dis.lo \
	mips-opc.lo \
	mips16-opc.lo \
	mmix-dis.lo \
	mmix-opc.lo \
	msp430-dis.lo \
	ns32k-dis.lo \
	openrisc-asm.lo \
	openrisc-desc.lo \
	openrisc-dis.lo \
	openrisc-ibld.lo \
	openrisc-opc.lo \
	or32-dis.lo \
	or32-opc.lo \
	pdp11-dis.lo \
	pdp11-opc.lo \
	pj-dis.lo \
	pj-opc.lo \
	ppc-dis.lo \
	ppc-opc.lo \
	s390-dis.lo \
	s390-opc.lo \
	sh-dis.lo \
	sh64-dis.lo \
	sh64-opc.lo \
	sparc-dis.lo \
	sparc-opc.lo \
	tic30-dis.lo \
	tic4x-dis.lo \
	tic54x-dis.lo \
	tic54x-opc.lo \
	tic80-dis.lo \
	tic80-opc.lo \
	v850-dis.lo \
	v850-opc.lo \
	vax-dis.lo \
	w65-dis.lo \
	xstormy16-asm.lo \
	xstormy16-desc.lo \
	xstormy16-dis.lo \
	xstormy16-ibld.lo \
	xstormy16-opc.lo \
	xtensa-dis.lo \
	z8k-dis.lo
a157 3
# We should reconfigure whenever bfd/configure.in changes, because
# that's where the version number in Makefile comes from.
CONFIG_STATUS_DEPENDENCIES = $(BFDDIR)/configure.in
d159 1
d174 1
d176 1
d178 3
a180 4
CLEANFILES = \
	stamp-ip2k stamp-m32r stamp-fr30 stamp-frv stamp-openrisc \
	stamp-iq2000 stamp-xstormy16 \
	libopcodes.a stamp-lib dep.sed DEP DEPA DEP1 DEP2
d186 3
a188 6
CGENDEPS = \
	$(CGENDIR)/desc.scm $(CGENDIR)/desc-cpu.scm \
	$(CGENDIR)/opcodes.scm $(CGENDIR)/opc-asmdis.scm \
	$(CGENDIR)/opc-ibld.scm $(CGENDIR)/opc-itab.scm \
	$(CGENDIR)/opc-opinst.scm \
	cgen-asm.in cgen-dis.in cgen-ibld.in
d191 1
d193 1
a193 1
@@CGEN_MAINT_TRUE@@IP2K_DEPS = stamp-ip2k
d195 1
a195 1
@@CGEN_MAINT_TRUE@@M32R_DEPS = stamp-m32r
d197 1
a197 1
@@CGEN_MAINT_TRUE@@FR30_DEPS = stamp-fr30
d199 1
a199 1
@@CGEN_MAINT_TRUE@@FRV_DEPS = stamp-frv
d201 1
a201 1
@@CGEN_MAINT_TRUE@@OPENRISC_DEPS = stamp-openrisc
d203 1
a203 1
@@CGEN_MAINT_TRUE@@IQ2000_DEPS = stamp-iq2000
d205 25
a229 3
@@CGEN_MAINT_TRUE@@XSTORMY16_DEPS = stamp-xstormy16
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive
d231 1
a231 27
.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
am--refresh:
	@@:
$(srcdir)/Makefile.in: @@MAINTAINER_MODE_TRUE@@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --cygnus '; \
	      cd $(srcdir) && $(AUTOMAKE) --cygnus  \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --cygnus  Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --cygnus  Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@@ $(am__depfiles_maybe);; \
	esac;
d233 4
a236 2
$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck
d238 13
a250 1
$(top_srcdir)/configure: @@MAINTAINER_MODE_TRUE@@ $(am__configure_deps)
a251 2
$(ACLOCAL_M4): @@MAINTAINER_MODE_TRUE@@ $(am__aclocal_m4_deps)
	cd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
d253 11
a263 1
config.h: stamp-h1
d265 2
a266 2
	  rm -f stamp-h1; \
	  $(MAKE) stamp-h1; \
d268 3
d272 3
a274 7
stamp-h1: $(srcdir)/config.in $(top_builddir)/config.status
	@@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.in: @@MAINTAINER_MODE_TRUE@@ $(am__configure_deps) 
	cd $(top_srcdir) && $(AUTOHEADER)
	rm -f stamp-h1
	touch $@@
d277 5
a281 3
	-rm -f config.h stamp-h1
po/Makefile.in: $(top_builddir)/config.status $(top_srcdir)/po/Make-in
	cd $(top_builddir) && $(SHELL) ./config.status $@@
d286 17
a302 10
clean-bfdlibLTLIBRARIES:
	-test -z "$(bfdlib_LTLIBRARIES)" || rm -f $(bfdlib_LTLIBRARIES)
	@@list='$(bfdlib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libopcodes.la: $(libopcodes_la_OBJECTS) $(libopcodes_la_DEPENDENCIES) 
	$(LINK) -rpath $(bfdlibdir) $(libopcodes_la_LDFLAGS) $(libopcodes_la_OBJECTS) $(libopcodes_la_LIBADD) $(LIBS)
d305 1
d308 2
d313 4
a316 2
.c.o:
	$(COMPILE) -c $<
d318 2
a319 2
.c.obj:
	$(COMPILE) -c `$(CYGPATH_W) '$<'`
d321 2
a322 2
.c.lo:
	$(LTCOMPILE) -c -o $@@ $<
d331 14
a344 2
	-rm -f libtool
uninstall-info-am:
d352 7
a358 2
$(RECURSIVE_TARGETS):
	@@set fnord $$MAKEFLAGS; amf=$$2; \
d378 1
a378 1
	@@set fnord $$MAKEFLAGS; amf=$$2; \
d380 3
a382 8
	case "$@@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
d384 1
a384 1
	rev="$$rev ."; \
a399 4
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done
d401 6
a406 6
ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
d408 2
a409 2
	mkid -fID $$unique
tags: TAGS
d411 1
a411 2
TAGS: tags-recursive $(HEADERS) $(SOURCES) config.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
a413 7
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
d415 3
a417 4
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
d419 3
a421 5
	list='$(SOURCES) $(HEADERS) config.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
d423 6
a428 24
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES) config.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here
d431 66
a496 1
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
d499 8
a506 7
all-am: Makefile $(LIBRARIES) $(LTLIBRARIES) config.h
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bfdlibdir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-recursive
d508 2
a510 1
uninstall: uninstall-recursive
d514 11
a525 6
installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
d532 2
a533 1
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
d536 4
a539 3
	@@echo "This command is intended for maintainers to use"
	@@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive
d541 1
a541 2
clean-am: clean-bfdlibLTLIBRARIES clean-generic clean-libtool \
	clean-noinstLIBRARIES mostlyclean-am
d543 3
a545 5
distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags
d547 1
a547 1
dvi: dvi-recursive
d549 4
a552 1
dvi-am:
d554 2
a555 1
html: html-recursive
d557 8
a564 13
info: info-recursive

info-am:

install-data-am: install-bfdlibLTLIBRARIES

install-exec-am:

install-info: install-info-recursive

install-man:

installcheck-am:
d567 1
a567 19
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-bfdlibLTLIBRARIES
d569 21
a589 17
uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am am--refresh check \
	check-am clean clean-bfdlibLTLIBRARIES clean-generic \
	clean-libtool clean-noinstLIBRARIES clean-recursive ctags \
	ctags-recursive distclean distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-recursive \
	distclean-tags dvi dvi-am html html-am info info-am install \
	install-am install-bfdlibLTLIBRARIES install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic maintainer-clean-recursive \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool mostlyclean-recursive pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am \
	uninstall-bfdlibLTLIBRARIES uninstall-info-am
d609 5
d717 2
d804 3
a806 5
crx-dis.lo: crx-dis.c $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h sysdep.h config.h \
  $(INCDIR)/opcode/crx.h
crx-opc.lo: crx-opc.c $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/crx.h
d1041 1
a1041 1
  sh-opc.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/dis-asm.h
d1105 1
@


1.81
log
@make "dep-am"
@
text
@d1 1
a1 1
# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am
d3 1
a3 1
# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
d396 7
a402 2
libopcodes_la_DEPENDENCIES = $(OFILES) ../bfd/libbfd.la
libopcodes_la_LIBADD = $(OFILES) @@WIN32LIBADD@@ ../bfd/libbfd.la
d625 1
a625 1
	  test "$$subdir" != "." || dot_seen=yes; \
@


1.80
log
@2003-09-08  Dave Brolley  <brolley@@redhat.com>

        On behalf of Doug Evans <dje@@sebabeach.org>
        * Makefile.am (run-cgen): Pass new args archfile and opcfile
        to cgen.sh.
        (stamp-ip2k,stamp-m32r,stamp-fr30,stamp-frv,stamp-openrisc,
        stamp-iq2000,stamp-xstormy16): Pass paths of .cpu and .opc files
        to cgen.sh.
        (stamp-frv): Delete hardcoded path spec workaround.
        * Makefile.in: Regenerate.
        * cgen.sh: New args archfile and opcfile.  Pass on to cgen.
@
text
@d1 1
a1 1
# Makefile.in generated automatically by automake 1.4 from Makefile.am
d3 1
a3 1
# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
d471 1
a471 1
TAR = gtar
d620 1
a620 1
	  test "$$subdir" = "." && dot_seen=yes; \
d1057 1
a1057 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h opintl.h
@


1.79
log
@Index: opcodes/ChangeLog
2003-09-03  Andrew Cagney  <cagney@@redhat.com>

	* dis-init.c (init_disassemble_info): New file and function.
	* Makefile.am (CFILES): Add "dis-init.c".
	(libopcodes_la_SOURCES): Add "dis-init.c".
	(dis-init.lo): Specify dependencies.
	* Makefile.in: Regenerate.

Index: include/ChangeLog
2003-08-27  Andrew Cagney  <cagney@@redhat.com>

	* dis-asm.h (init_disassemble_info): Declare.
	(INIT_DISASSEMBLE_INFO): Redefine as a call to
	init_disassemble_info.
	(INIT_DISASSEMBLE_INFO_NO_ARCH): Ditto.

Index: binutils/ChangeLog
2003-09-03  Andrew Cagney  <cagney@@redhat.com>

	* objdump.c: Refer to init_disassemble_info in comments.
	(disassemble_data): Replace INIT_DISASSEMBLE_INFO with
	init_disassemble_info.
@
text
@d878 2
a879 2
	  $(CGENDIR) "$(CGENFLAGS)" $(arch) $(prefix) \
	  "$(options)" $(extrafiles)
d895 2
a896 1
	$(MAKE) run-cgen arch=ip2k prefix=ip2k options= extrafiles=
d901 2
a902 1
	$(MAKE) run-cgen arch=m32r prefix=m32r options=opinst extrafiles=opinst
d907 2
a908 1
	$(MAKE) run-cgen arch=fr30 prefix=fr30 options= extrafiles=
d915 2
a916 5
	cp -fp $(srcdir)/../cpu/frv.cpu $(CPUDIR)/frv.cpu
	cp -fp $(srcdir)/../cpu/frv.opc $(CPUDIR)/frv.opc
	$(MAKE) run-cgen arch=frv prefix=frv options= extrafiles=
	rm -f $(CPUDIR)/frv.cpu
	rm -f $(CPUDIR)/frv.opc
d921 2
a922 1
	$(MAKE) run-cgen arch=openrisc prefix=openrisc options= extrafiles=
d928 2
a929 1
	$(MAKE) run-cgen arch=iq2000 prefix=iq2000 options= extrafiles=
d934 2
a935 1
	$(MAKE) run-cgen arch=xstormy16 prefix=xstormy16 options= extrafiles=
@


1.78
log
@2003-08-29  Dave Brolley  <brolley@@redhat.com>

        * Makefile.am (stamp-frv): Copy frv.cpu and frv.opc from
        $(srcdir)/../cpu temporarily when regenerating source files.
        * Makefile.in: Regenerated.
@
text
@d177 1
d395 1
a395 1
libopcodes_la_SOURCES = dis-buf.c disassemble.c
d459 1
a459 1
libopcodes_la_OBJECTS =  dis-buf.lo disassemble.lo
d1052 2
@


1.77
log
@	* dep-in.sed: Remove libintl.h.
	* Makefile.am (POTFILES.in): Unset LC_COLLATE.
	Run "make dep-am".
	* Makefile.in: Regenerate.
@
text
@d1 1
a1 1
# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am
d3 1
a3 1
# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
d470 1
a470 1
TAR = tar
d619 1
a619 1
	  test "$$subdir" != "." || dot_seen=yes; \
d908 5
a912 1
stamp-frv: $(CGENDEPS) $(CPUDIR)/frv.cpu $(CPUDIR)/frv.opc
d914 2
@


1.76
log
@Update Turkish translation files for bfd, gas and opcodes
@
text
@d1 1
a1 1
# Makefile.in generated automatically by automake 1.4-p5 from Makefile.am
d470 1
a470 1
TAR = gtar
d843 1
a843 1
	for file in $(POTFILES); do echo $$file; done | sort > tmp \
d1014 3
a1016 3
  opintl.h $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h \
  $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h $(INCDIR)/elf/arm.h \
  $(INCDIR)/elf/reloc-macros.h
d1123 1
a1123 1
  ia64-opc-f.c ia64-opc-x.c ia64-opc-d.c ../intl/libintl.h
@


1.75
log
@* bfd/Makefile.am (config.status): Depend on version.h.
Run "make dep-am" in bfd/ and elsewhere, and regen files.
@
text
@d1 1
a1 1
# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am
d470 1
a470 1
TAR = tar
@


1.74
log
@Regenerate - forgot to commit with last commit
@
text
@d1 1
a1 1
# Makefile.in generated automatically by automake 1.4-p5 from Makefile.am
d470 1
a470 1
TAR = gtar
d1148 2
a1149 1
  iq2000-opc.h opintl.h $(INCDIR)/libiberty.h
d1151 3
a1153 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h iq2000-desc.h \
  $(INCDIR)/opcode/cgen.h iq2000-opc.h opintl.h
@


1.73
log
@Add Xtensa port
@
text
@d395 2
a396 2
libopcodes_la_DEPENDENCIES = $(OFILES)
libopcodes_la_LIBADD = $(OFILES) @@WIN32LIBADD@@
@


1.72
log
@include/elf/ChangeLog
	* sh.h: Split out various bits to bfd/elf32-sh64.h.

include/opcode/ChangeLog
	* m68hc11.h (cpu6812s): Define.

bfd/ChangeLog
	* elf-bfd.h (struct bfd_elf_section_data): Remove tdata.  Change
	dynindx to an int.  Rearrange for better packing.
	* elf.c (_bfd_elf_new_section_hook): Don't alloc if already done.
	* elf32-mips.c (bfd_elf32_new_section_hook): Define.
	* elf32-sh64.h: New.  Split out from include/elf/sh.h.
	(struct _sh64_elf_section_data): New struct.
	(sh64_elf_section_data): Don't dereference sh64_info (was tdata).
	* elf32-sh64-com.c: Include elf32-sh64.h.
	* elf32-sh64.c: Likewise.
	(sh64_elf_new_section_hook): New function.
	(bfd_elf32_new_section_hook): Define.
	(sh64_elf_fake_sections): Adjust for sh64_elf_section_data change.
	(sh64_bfd_elf_copy_private_section_data): Likewise.
	(sh64_elf_final_write_processing): Likewise.
	* elf32-sparc.c (struct elf32_sparc_section_data): New.
	(elf32_sparc_new_section_hook): New function.
	(SET_SEC_DO_RELAX, SEC_DO_RELAX): Delete.
	(sec_do_relax): Define.
	(elf32_sparc_relax_section): Adjust to use sec_do_relax.
	(elf32_sparc_relocate_section): Likewise.
	* elf64-mips.c (bfd_elf64_new_section_hook): Define.
	* elf64-mmix.c (struct _mmix_elf_section_data): New.
	(mmix_elf_section_data): Define.  Use throughout file.
	(mmix_elf_new_section_hook): New function.
	(bfd_elf64_new_section_hook): Define.
	* elf64-ppc.c (struct _ppc64_elf_section_data): New.
	(ppc64_elf_section_data): Define.  Use throughout.
	(ppc64_elf_new_section_hook): New function.
	(bfd_elf64_new_section_hook): Define.
	* elf64-sparc.c (struct sparc64_elf_section_data): New.
	(sparc64_elf_new_section_hook): New function.
	(SET_SEC_DO_RELAX, SEC_DO_RELAX): Delete.
	(sec_do_relax): Define.
	(sparc64_elf_relax_section): Adjust to use sec_do_relax.
	(sparc64_elf_relocate_section): Likewise.
	(bfd_elf64_new_section_hook): Define.
	* elfn32-mips.c (bfd_elf32_new_section_hook): Define.
	* elfxx-mips.c (struct _mips_elf_section_data): New.
	(mips_elf_section_data): Define.  Use throughout.
	(_bfd_mips_elf_new_section_hook): New function.
	(mips_elf_create_got_section): Don't alloc used_by_bfd.
	* elfxx-mips.h (_bfd_mips_elf_new_section_hook): Declare.
	* elfxx-target.h (bfd_elfNN_new_section_hook): Add #ifndef.
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.

opcodes/ChangeLog
	* sh64-dis.c: Include elf32-sh64.h.
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.

gas/ChangeLog
	* config/tc-sh64.c (shmedia_frob_section_type): Adjust for changed
	sh64_elf_section_data.
	* config/tc-sh64.h: Include elf32-sh64.h.
	* config/tc-m68hc11.c: Don't include stdio.h.
	(md_show_usage): Fix missing continuation.
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.

ld/ChangeLog
	* emultempl/sh64elf.em: Include elf32-sh64.h.
	(sh64_elf_${EMULATION_NAME}_before_allocation): Adjust for changed
	sh64_elf_section_data.
	(sh64_elf_${EMULATION_NAME}_after_allocation): Likewise.
@
text
@d1 1
a1 1
# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am
d274 1
d386 1
d470 1
a470 1
TAR = tar
d1318 3
@


1.71
log
@	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
	* po/POTFILES.in: Regenerate.
@
text
@d1265 2
a1266 1
  $(INCDIR)/bfdlink.h $(INCDIR)/elf/sh.h $(INCDIR)/elf/reloc-macros.h
@


1.70
log
@2003-01-08  Klee Dienes  <kdienes@@apple.com>

        * Makefile.am (ALL_MACHINES): Add msp430-dis.lo.
        * Makefile.in: Regenerate.
@
text
@d1 1
a1 1
# Makefile.in generated automatically by automake 1.4-p5 from Makefile.am
d407 2
a408 2
	stamp-ip2k stamp-iq2000 stamp-m32r stamp-fr30 stamp-frv stamp-openrisc \
	stamp-xstormy16 \
a427 2
@@CGEN_MAINT_TRUE@@IQ2000_DEPS = @@CGEN_MAINT_TRUE@@stamp-ip2000
@@CGEN_MAINT_FALSE@@IQ2000_DEPS = 
d436 2
d468 1
a468 1
TAR = gtar
a893 6
$(srcdir)/iq2000-desc.h $(srcdir)/iq2000-desc.c $(srcdir)/iq2000-opc.h $(srcdir)/iq2000-opc.c $(srcdir)/iq2000-ibld.c $(srcdir)/iq2000-asm.c $(srcdir)/iq2000-dis.c: $(IQ2000_DEPS)
	@@true
stamp-iq2000: $(CGENDEPS) $(CPUDIR)/iq2000.cpu $(CPUDIR)/iq2000.opc \
	$(CPUDIR)/iq2000m.cpu $(CPUDIR)/iq10.cpu
	$(MAKE) run-cgen arch=iq2000 prefix=iq2000 options= extrafiles=

d914 6
d1017 1
a1017 1
  $(INCDIR)/opcode/avr.h
d1052 2
a1053 1
  fr30-opc.h opintl.h $(INCDIR)/libiberty.h
d1055 2
a1056 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h fr30-desc.h \
  $(INCDIR)/opcode/cgen.h fr30-opc.h opintl.h
d1069 2
a1070 1
  frv-opc.h opintl.h $(INCDIR)/libiberty.h
d1072 2
a1073 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h frv-desc.h \
  $(INCDIR)/opcode/cgen.h frv-opc.h opintl.h
d1083 1
a1083 1
  $(INCDIR)/symcat.h opintl.h
d1121 1
a1121 1
  ia64-opc-f.c ia64-opc-x.c ia64-opc-d.c
d1129 2
a1130 1
  ip2k-opc.h opintl.h $(INCDIR)/libiberty.h
d1132 2
a1133 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h ip2k-desc.h \
  $(INCDIR)/opcode/cgen.h ip2k-opc.h opintl.h
d1139 10
a1148 6
  ip2k-opc.h $(INCDIR)/libiberty.h
iq2000-asm.lo: iq2000-asm.c sysdep.h config.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h iq2000-desc.h \
  $(INCDIR)/opcode/cgen.h iq2000-opc.h opintl.h
iq2000-desc.lo: iq2000-desc.c sysdep.h config.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h iq2000-desc.h \
d1150 6
a1155 11
iq2000-dis.lo: iq2000-dis.c sysdep.h config.h $(INCDIR)/dis-asm.h \
  $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h iq2000-desc.h $(INCDIR)/opcode/cgen.h \
  iq2000-opc.h opintl.h
iq2000-ibld.lo: iq2000-ibld.c sysdep.h config.h $(INCDIR)/dis-asm.h \
  $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h iq2000-desc.h $(INCDIR)/opcode/cgen.h \
  iq2000-opc.h opintl.h
iq2000-opc.lo: iq2000-opc.c sysdep.h config.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h iq2000-desc.h \
  $(INCDIR)/opcode/cgen.h iq2000-opc.h
d1162 2
a1163 1
  m32r-opc.h opintl.h $(INCDIR)/libiberty.h
d1165 2
a1166 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h m32r-desc.h \
  $(INCDIR)/opcode/cgen.h m32r-opc.h opintl.h
d1188 1
a1188 1
  opintl.h
d1192 4
a1195 4
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/mips.h \
  opintl.h $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h \
  $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h $(INCDIR)/bfdlink.h \
  $(INCDIR)/elf/mips.h $(INCDIR)/elf/reloc-macros.h
d1223 2
a1224 1
  $(INCDIR)/opcode/cgen.h openrisc-opc.h opintl.h $(INCDIR)/libiberty.h
d1226 3
a1228 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h openrisc-desc.h \
  $(INCDIR)/opcode/cgen.h openrisc-opc.h opintl.h
d1302 2
a1303 1
  $(INCDIR)/opcode/cgen.h xstormy16-opc.h opintl.h $(INCDIR)/libiberty.h
d1306 2
a1307 2
  xstormy16-desc.h $(INCDIR)/opcode/cgen.h xstormy16-opc.h \
  opintl.h
d1317 2
a1318 1
z8kgen.lo: z8kgen.c sysdep.h config.h $(INCDIR)/ansidecl.h
@


1.69
log
@	* iq2000-asm.c: New file.
	* iq2000-desc.c: Likewise.
	* iq2000-desc.h: Likewise.
	* iq2000-dis.c: Likewise.
	* iq2000-ibld.c: Likewise.
	* iq2000-opc.c: Likewise.
	* iq2000-opc.h: Likewise.
	* Makefile.am (HFILES): Add iq2000-desc.h, iq2000-opc.h.
	(CFILES): Add iq2000-asm.c, iq2000-desc.c, iq2000-dis.c,
	iq2000-ibld.c, iq2000-opc.c.
	(ALL_MACHINES): Add iq2000-asm.lo, iq2000-desc.lo, iq2000-dis.lo,
	iq2000-ibld.lo, iq2000-opc.lo.
	(CLEANFILES): Add stamp-iq2000.
	(IQ2000_DEPS): New macro.
	(stamp-iq2000): New target.
	* Makefile.in: Regenerate.
	* configure.in: Handle bfd_iq2000_arch.
	* configure: Regenerate.
@
text
@d348 1
@


1.68
log
@Add support for msp430.
@
text
@d144 1
d211 5
d322 5
d406 1
a406 1
	stamp-ip2k stamp-m32r stamp-fr30 stamp-frv stamp-openrisc \
d427 2
d893 6
d1136 17
@


1.67
log
@	* Makefile.in: Regenerate.
@
text
@d1 1
a1 1
# Makefile.in generated automatically by automake 1.4 from Makefile.am
d3 1
a3 1
# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
d454 1
a454 1
TAR = tar
d603 1
a603 1
	  test "$$subdir" = "." && dot_seen=yes; \
@


1.66
log
@	* Makefile.am (CGEN_CPUS): New variable.
	(run-cgen-all): New rule.
	* Makefile.in: Regenerate.
@
text
@d414 12
a425 18
@@CGEN_MAINT_TRUE@@IP2K_DEPS = \
@@CGEN_MAINT_TRUE@@stamp-ip2k
@@CGEN_MAINT_FALSE@@IP2K_DEPS = \
@@CGEN_MAINT_TRUE@@M32R_DEPS = \
@@CGEN_MAINT_TRUE@@stamp-m32r
@@CGEN_MAINT_FALSE@@M32R_DEPS = \
@@CGEN_MAINT_TRUE@@FR30_DEPS = \
@@CGEN_MAINT_TRUE@@stamp-fr30
@@CGEN_MAINT_FALSE@@FR30_DEPS = \
@@CGEN_MAINT_TRUE@@FRV_DEPS = \
@@CGEN_MAINT_TRUE@@stamp-frv
@@CGEN_MAINT_FALSE@@FRV_DEPS = \
@@CGEN_MAINT_TRUE@@OPENRISC_DEPS = \
@@CGEN_MAINT_TRUE@@stamp-openrisc
@@CGEN_MAINT_FALSE@@OPENRISC_DEPS = \
@@CGEN_MAINT_TRUE@@XSTORMY16_DEPS = \
@@CGEN_MAINT_TRUE@@stamp-xstormy16
@@CGEN_MAINT_FALSE@@XSTORMY16_DEPS = \
d454 1
a454 1
TAR = gtar
@


1.65
log
@Convert ia64-gen to use getopt().  Add standard GNU options plus --srcdir.
Convert Makefile.am to pass --srcdir to ia64-gen.  Fix compile time warnings.
@
text
@d1 1
a1 1
# Makefile.in generated automatically by automake 1.4-p5 from Makefile.am
d3 1
a3 1
# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
d412 20
a431 12
@@CGEN_MAINT_TRUE@@IP2K_DEPS = @@CGEN_MAINT_TRUE@@stamp-ip2k
@@CGEN_MAINT_FALSE@@IP2K_DEPS = 
@@CGEN_MAINT_TRUE@@M32R_DEPS = @@CGEN_MAINT_TRUE@@stamp-m32r
@@CGEN_MAINT_FALSE@@M32R_DEPS = 
@@CGEN_MAINT_TRUE@@FR30_DEPS = @@CGEN_MAINT_TRUE@@stamp-fr30
@@CGEN_MAINT_FALSE@@FR30_DEPS = 
@@CGEN_MAINT_TRUE@@FRV_DEPS = @@CGEN_MAINT_TRUE@@stamp-frv
@@CGEN_MAINT_FALSE@@FRV_DEPS = 
@@CGEN_MAINT_TRUE@@OPENRISC_DEPS = @@CGEN_MAINT_TRUE@@stamp-openrisc
@@CGEN_MAINT_FALSE@@OPENRISC_DEPS = 
@@CGEN_MAINT_TRUE@@XSTORMY16_DEPS = @@CGEN_MAINT_TRUE@@stamp-xstormy16
@@CGEN_MAINT_FALSE@@XSTORMY16_DEPS = 
d609 1
a609 1
	  test "$$subdir" != "." || dot_seen=yes; \
d871 8
@


1.64
log
@	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
	* po/POTFILES.in: Regenerate.
@
text
@d452 1
a452 1
TAR = tar
d902 1
a902 1
	here=`pwd`; cd $(srcdir); $$here/ia64-gen > ia64-asmtab.c
d1086 2
a1087 2
  $(INCDIR)/safe-ctype.h sysdep.h config.h ia64-opc.h \
  $(INCDIR)/opcode/ia64.h $(BFD_H) $(INCDIR)/symcat.h \
@


1.64.2.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@d1 1
a1 1
# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am
a143 1
	iq2000-desc.h iq2000-opc.h \
a175 1
	dis-init.c \
a209 5
	iq2000-asm.c \
	iq2000-desc.c \
	iq2000-dis.c \
	iq2000-ibld.c \
	iq2000-opc.c \
a267 1
	xtensa-dis.c \
a315 5
	iq2000-asm.lo \
	iq2000-desc.lo \
	iq2000-dis.lo \
	iq2000-ibld.lo \
	iq2000-opc.lo \
a336 1
	msp430-dis.lo \
a372 1
	xtensa-dis.lo \
d380 3
a382 3
libopcodes_la_SOURCES = dis-buf.c disassemble.c dis-init.c
libopcodes_la_DEPENDENCIES = $(OFILES) ../bfd/libbfd.la
libopcodes_la_LIBADD = $(OFILES) @@WIN32LIBADD@@ ../bfd/libbfd.la
d396 1
a396 1
	stamp-iq2000 stamp-xstormy16 \
a411 2

CGEN_CPUS = fr30 frv ip2k m32r openrisc xstormy16
a421 2
@@CGEN_MAINT_TRUE@@IQ2000_DEPS = @@CGEN_MAINT_TRUE@@stamp-iq2000
@@CGEN_MAINT_FALSE@@IQ2000_DEPS = 
d440 1
a440 1
libopcodes_la_OBJECTS =  dis-buf.lo disassemble.lo dis-init.lo
d825 1
a825 1
	for f in $(POTFILES); do echo $$f; done | LC_COLLATE= sort > tmp \
d859 2
a860 2
	  $(CGENDIR) "$(CGENFLAGS)" $(arch) $(prefix) $(archfile) $(opcfile) \
	  "$(options)" "$(extrafiles)"
a863 8
# Maintainer utility rule to regenerate all cgen files.
run-cgen-all:
	for c in $(CGEN_CPUS) ; \
	do \
		$(MAKE) stamp-$$c || exit 1 ; \
	done
.PHONY: run-cgen-all

d868 1
a868 2
	$(MAKE) run-cgen arch=ip2k prefix=ip2k options= \
		archfile=$(CPUDIR)/ip2k.cpu opcfile=$(CPUDIR)/ip2k.opc extrafiles=
d873 1
a873 2
	$(MAKE) run-cgen arch=m32r prefix=m32r options=opinst \
		archfile=$(CPUDIR)/m32r.cpu opcfile=$(CPUDIR)/m32r.opc extrafiles=opinst
d878 1
a878 2
	$(MAKE) run-cgen arch=fr30 prefix=fr30 options= \
		archfile=$(CPUDIR)/fr30.cpu opcfile=$(CPUDIR)/fr30.opc extrafiles=
d882 2
a883 5
# .cpu and .opc files for frv are kept in a different directory, but cgen has no switch to specify that location, so
# copy those file to the regular place.
stamp-frv: $(CGENDEPS) $(srcdir)/../cpu/frv.cpu $(srcdir)/../cpu/frv.opc
	$(MAKE) run-cgen arch=frv prefix=frv options= \
		archfile=$(srcdir)/../cpu/frv.cpu opcfile=$(srcdir)/../cpu/frv.opc extrafiles=
d888 1
a888 9
	$(MAKE) run-cgen arch=openrisc prefix=openrisc options= \
		archfile=$(CPUDIR)/openrisc.cpu opcfile=$(CPUDIR)/openrisc.opc extrafiles=

$(srcdir)/iq2000-desc.h $(srcdir)/iq2000-desc.c $(srcdir)/iq2000-opc.h $(srcdir)/iq2000-opc.c $(srcdir)/iq2000-ibld.c $(srcdir)/iq2000-asm.c $(srcdir)/iq2000-dis.c: $(IQ2000_DEPS)
	@@true
stamp-iq2000: $(CGENDEPS) $(CPUDIR)/iq2000.cpu $(CPUDIR)/iq2000.opc \
	$(CPUDIR)/iq2000m.cpu $(CPUDIR)/iq10.cpu
	$(MAKE) run-cgen arch=iq2000 prefix=iq2000 options= \
		archfile=$(CPUDIR)/iq2000.cpu opcfile=$(CPUDIR)/iq2000.opc extrafiles=
d893 1
a893 2
	$(MAKE) run-cgen arch=xstormy16 prefix=xstormy16 options= \
		archfile=$(CPUDIR)/xstormy16.cpu opcfile=$(CPUDIR)/xstormy16.opc extrafiles=
d902 1
a902 1
	./ia64-gen --srcdir $(srcdir) > $(srcdir)/ia64-asmtab.c
d982 3
a984 3
  opintl.h $(INCDIR)/safe-ctype.h $(BFDDIR)/elf-bfd.h \
  $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h \
  $(INCDIR)/elf/arm.h $(INCDIR)/elf/reloc-macros.h
d987 1
a987 1
  $(INCDIR)/libiberty.h $(INCDIR)/opcode/avr.h
a1013 2
dis-init.lo: dis-init.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h
d1022 1
a1022 2
  fr30-opc.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h
d1024 2
a1025 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  fr30-desc.h $(INCDIR)/opcode/cgen.h fr30-opc.h opintl.h
d1038 1
a1038 2
  frv-opc.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h
d1040 2
a1041 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  frv-desc.h $(INCDIR)/opcode/cgen.h frv-opc.h opintl.h
d1051 1
a1051 1
  $(INCDIR)/symcat.h opintl.h $(INCDIR)/libiberty.h
d1086 2
a1087 2
  $(INCDIR)/safe-ctype.h sysdep.h config.h $(INCDIR)/getopt.h \
  ia64-opc.h $(INCDIR)/opcode/ia64.h $(BFD_H) $(INCDIR)/symcat.h \
d1097 1
a1097 2
  ip2k-opc.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h
d1099 2
a1100 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  ip2k-desc.h $(INCDIR)/opcode/cgen.h ip2k-opc.h opintl.h
d1106 1
a1106 19
  ip2k-opc.h $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
iq2000-asm.lo: iq2000-asm.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h iq2000-desc.h $(INCDIR)/opcode/cgen.h \
  iq2000-opc.h opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h \
  $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
iq2000-desc.lo: iq2000-desc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h iq2000-desc.h $(INCDIR)/opcode/cgen.h \
  iq2000-opc.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h
iq2000-dis.lo: iq2000-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  iq2000-desc.h $(INCDIR)/opcode/cgen.h iq2000-opc.h \
  opintl.h
iq2000-ibld.lo: iq2000-ibld.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h iq2000-desc.h \
  $(INCDIR)/opcode/cgen.h iq2000-opc.h opintl.h $(INCDIR)/safe-ctype.h
iq2000-opc.lo: iq2000-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h iq2000-desc.h $(INCDIR)/opcode/cgen.h \
  iq2000-opc.h $(INCDIR)/libiberty.h
d1113 1
a1113 2
  m32r-opc.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h
d1115 2
a1116 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  m32r-desc.h $(INCDIR)/opcode/cgen.h m32r-opc.h opintl.h
d1138 1
a1138 1
  opintl.h $(INCDIR)/libiberty.h
d1142 4
a1145 4
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/mips.h opintl.h $(BFDDIR)/elf-bfd.h \
  $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h \
  $(INCDIR)/bfdlink.h $(INCDIR)/elf/mips.h $(INCDIR)/elf/reloc-macros.h
d1173 1
a1173 2
  $(INCDIR)/opcode/cgen.h openrisc-opc.h opintl.h $(INCDIR)/libiberty.h \
  $(INCDIR)/xregex.h $(INCDIR)/xregex2.h
d1175 2
a1176 3
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  openrisc-desc.h $(INCDIR)/opcode/cgen.h openrisc-opc.h \
  opintl.h
d1213 1
a1213 2
  $(INCDIR)/bfdlink.h $(INCDIR)/elf/sh.h $(INCDIR)/elf/reloc-macros.h \
  $(BFDDIR)/elf32-sh64.h
d1250 1
a1250 2
  $(INCDIR)/opcode/cgen.h xstormy16-opc.h opintl.h $(INCDIR)/libiberty.h \
  $(INCDIR)/xregex.h $(INCDIR)/xregex2.h
d1253 2
a1254 2
  $(INCDIR)/libiberty.h xstormy16-desc.h $(INCDIR)/opcode/cgen.h \
  xstormy16-opc.h opintl.h
a1261 3
xtensa-dis.lo: xtensa-dis.c $(INCDIR)/xtensa-isa.h \
  $(INCDIR)/ansidecl.h sysdep.h config.h $(INCDIR)/dis-asm.h \
  $(BFD_H) $(INCDIR)/symcat.h
d1264 1
a1264 2
z8kgen.lo: z8kgen.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h
@


1.64.2.2
log
@Merge mainline to branch.  GDB is broken until I update cp-names.y.
@
text
@d1 1
a1 1
# Makefile.in generated automatically by automake 1.4 from Makefile.am
d3 1
a3 1
# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
d396 2
a397 7
# It's desirable to list ../bfd/libbfd.la in DEPENDENCIES and LIBADD.
# Unfortunately this causes libtool to add -L$(libdir), referring to the
# planned install directory of libbfd.  This can cause us to pick up an
# old version of libbfd, or to pick up libbfd for the wrong architecture
# if host != build.
libopcodes_la_DEPENDENCIES = $(OFILES)
libopcodes_la_LIBADD = $(OFILES) @@WIN32LIBADD@@
d620 1
a620 1
	  test "$$subdir" = "." && dot_seen=yes; \
@


1.63
log
@Add TMS320C4x support
@
text
@d452 1
a452 1
TAR = gtar
d976 1
a976 1
  $(INCDIR)/opcode/arc.h
d1222 2
a1223 2
tic4x-dis.lo: tic4x-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/opcode/tic4x.h
@


1.63.6.1
log
@Merge with mainline; tag is carlton_dictionary-20020927-merge
@
text
@d452 1
a452 1
TAR = tar
d976 1
a976 1
  $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/arc.h
d1222 2
a1223 2
tic4x-dis.lo: tic4x-dis.c $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/tic4x.h
@


1.63.6.2
log
@2002-11-15  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021115-merge.
@
text
@d452 1
a452 1
TAR = gtar
d902 1
a902 1
	./ia64-gen --srcdir $(srcdir) > $(srcdir)/ia64-asmtab.c
d1086 2
a1087 2
  $(INCDIR)/safe-ctype.h sysdep.h config.h $(INCDIR)/getopt.h \
  ia64-opc.h $(INCDIR)/opcode/ia64.h $(BFD_H) $(INCDIR)/symcat.h \
@


1.63.6.3
log
@2002-12-23  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021223-merge.
@
text
@d1 1
a1 1
# Makefile.in generated automatically by automake 1.4 from Makefile.am
d3 1
a3 1
# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
a411 2

CGEN_CPUS = fr30 frv ip2k m32r openrisc xstormy16
d452 1
a452 1
TAR = tar
d601 1
a601 1
	  test "$$subdir" = "." && dot_seen=yes; \
a862 8

# Maintainer utility rule to regenerate all cgen files.
run-cgen-all:
	for c in $(CGEN_CPUS) ; \
	do \
		$(MAKE) stamp-$$c || exit 1 ; \
	done
.PHONY: run-cgen-all
@


1.63.6.4
log
@2003-02-07  David Carlton  <carlton@@math.stanford.edu>

	* Merge with mainline; tag is carlton_dictionary-20030207-merge.
@
text
@d1 1
a1 1
# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am
d3 1
a3 1
# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
a143 1
	iq2000-desc.h iq2000-opc.h \
a209 5
	iq2000-asm.c \
	iq2000-desc.c \
	iq2000-dis.c \
	iq2000-ibld.c \
	iq2000-opc.c \
a315 5
	iq2000-asm.lo \
	iq2000-desc.lo \
	iq2000-dis.lo \
	iq2000-ibld.lo \
	iq2000-opc.lo \
a336 1
	msp430-dis.lo \
d396 1
a396 1
	stamp-iq2000 stamp-xstormy16 \
a423 2
@@CGEN_MAINT_TRUE@@IQ2000_DEPS = @@CGEN_MAINT_TRUE@@stamp-iq2000
@@CGEN_MAINT_FALSE@@IQ2000_DEPS = 
d603 1
a603 1
	  test "$$subdir" != "." || dot_seen=yes; \
a899 6
$(srcdir)/iq2000-desc.h $(srcdir)/iq2000-desc.c $(srcdir)/iq2000-opc.h $(srcdir)/iq2000-opc.c $(srcdir)/iq2000-ibld.c $(srcdir)/iq2000-asm.c $(srcdir)/iq2000-dis.c: $(IQ2000_DEPS)
	@@true
stamp-iq2000: $(CGENDEPS) $(CPUDIR)/iq2000.cpu $(CPUDIR)/iq2000.opc \
	$(CPUDIR)/iq2000m.cpu $(CPUDIR)/iq10.cpu
	$(MAKE) run-cgen arch=iq2000 prefix=iq2000 options= extrafiles=

d997 1
a997 1
  $(INCDIR)/libiberty.h $(INCDIR)/opcode/avr.h
d1032 1
a1032 2
  fr30-opc.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h
d1034 2
a1035 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  fr30-desc.h $(INCDIR)/opcode/cgen.h fr30-opc.h opintl.h
d1048 1
a1048 2
  frv-opc.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h
d1050 2
a1051 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  frv-desc.h $(INCDIR)/opcode/cgen.h frv-opc.h opintl.h
d1061 1
a1061 1
  $(INCDIR)/symcat.h opintl.h $(INCDIR)/libiberty.h
d1099 1
a1099 1
  ia64-opc-f.c ia64-opc-x.c ia64-opc-d.c ../intl/libintl.h
d1107 1
a1107 2
  ip2k-opc.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h
d1109 2
a1110 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  ip2k-desc.h $(INCDIR)/opcode/cgen.h ip2k-opc.h opintl.h
d1116 1
a1116 17
  ip2k-opc.h $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
iq2000-asm.lo: iq2000-asm.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h iq2000-desc.h $(INCDIR)/opcode/cgen.h \
  iq2000-opc.h opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h \
  $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
iq2000-desc.lo: iq2000-desc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h iq2000-desc.h $(INCDIR)/opcode/cgen.h \
  iq2000-opc.h opintl.h $(INCDIR)/libiberty.h
iq2000-dis.lo: iq2000-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h iq2000-desc.h \
  $(INCDIR)/opcode/cgen.h iq2000-opc.h opintl.h
iq2000-ibld.lo: iq2000-ibld.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h iq2000-desc.h \
  $(INCDIR)/opcode/cgen.h iq2000-opc.h opintl.h $(INCDIR)/safe-ctype.h
iq2000-opc.lo: iq2000-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h iq2000-desc.h $(INCDIR)/opcode/cgen.h \
  iq2000-opc.h $(INCDIR)/libiberty.h
d1123 1
a1123 2
  m32r-opc.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h
d1125 2
a1126 2
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  m32r-desc.h $(INCDIR)/opcode/cgen.h m32r-opc.h opintl.h
d1148 1
a1148 1
  opintl.h $(INCDIR)/libiberty.h
d1152 4
a1155 4
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  $(INCDIR)/opcode/mips.h opintl.h $(BFDDIR)/elf-bfd.h \
  $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h \
  $(INCDIR)/bfdlink.h $(INCDIR)/elf/mips.h $(INCDIR)/elf/reloc-macros.h
d1183 1
a1183 2
  $(INCDIR)/opcode/cgen.h openrisc-opc.h opintl.h $(INCDIR)/libiberty.h \
  $(INCDIR)/xregex.h $(INCDIR)/xregex2.h
d1185 2
a1186 3
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  openrisc-desc.h $(INCDIR)/opcode/cgen.h openrisc-opc.h \
  opintl.h
d1223 1
a1223 2
  $(INCDIR)/bfdlink.h $(INCDIR)/elf/sh.h $(INCDIR)/elf/reloc-macros.h \
  $(BFDDIR)/elf32-sh64.h
d1260 1
a1260 2
  $(INCDIR)/opcode/cgen.h xstormy16-opc.h opintl.h $(INCDIR)/libiberty.h \
  $(INCDIR)/xregex.h $(INCDIR)/xregex2.h
d1263 2
a1264 2
  $(INCDIR)/libiberty.h xstormy16-desc.h $(INCDIR)/opcode/cgen.h \
  xstormy16-opc.h opintl.h
d1274 1
a1274 2
z8kgen.lo: z8kgen.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/libiberty.h
@


1.63.6.5
log
@2003-04-16  David Carlton  <carlton@@bactrian.org>

	* Merge with mainline; tag is carlton_dictionary-20030416-merge.
@
text
@d1 1
a1 1
# Makefile.in generated automatically by automake 1.4-p5 from Makefile.am
a273 1
	xtensa-dis.c \
a384 1
	xtensa-dis.lo \
d468 1
a468 1
TAR = gtar
a1315 3
xtensa-dis.lo: xtensa-dis.c $(INCDIR)/xtensa-isa.h \
  $(INCDIR)/ansidecl.h sysdep.h config.h $(INCDIR)/dis-asm.h \
  $(BFD_H) $(INCDIR)/symcat.h
@


1.63.6.6
log
@2003-05-23  David Carlton  <carlton@@bactrian.org>

	* Merge with mainline; tag is carlton_dictionary-20030523-merge.
@
text
@d395 2
a396 2
libopcodes_la_DEPENDENCIES = $(OFILES) ../bfd/libbfd.la
libopcodes_la_LIBADD = $(OFILES) @@WIN32LIBADD@@ ../bfd/libbfd.la
@


1.63.6.7
log
@2003-06-27  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20030627-merge.
@
text
@d1 1
a1 1
# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am
d470 1
a470 1
TAR = tar
d1148 1
a1148 2
  iq2000-opc.h opintl.h $(INCDIR)/libiberty.h $(INCDIR)/xregex.h \
  $(INCDIR)/xregex2.h
d1150 2
a1151 3
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/libiberty.h \
  iq2000-desc.h $(INCDIR)/opcode/cgen.h iq2000-opc.h \
  opintl.h
@


1.63.6.8
log
@2003-08-05  David Carlton  <carlton@@kealia.com>

	* configure.in (build_warnings): Delete -Wformat-nonliteral.
	* configure (build_warnings): Ditto.

	* Merge with mainline; tag is carlton_dictionary-20030805-merge.
@
text
@d1 1
a1 1
# Makefile.in generated automatically by automake 1.4-p5 from Makefile.am
d470 1
a470 1
TAR = gtar
@


1.63.6.9
log
@2003-09-17  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20030917-merge.
@
text
@d1 1
a1 1
# Makefile.in generated automatically by automake 1.4 from Makefile.am
d3 1
a3 1
# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
a176 1
	dis-init.c \
d394 1
a394 1
libopcodes_la_SOURCES = dis-buf.c disassemble.c dis-init.c
d458 1
a458 1
libopcodes_la_OBJECTS =  dis-buf.lo disassemble.lo dis-init.lo
d619 1
a619 1
	  test "$$subdir" = "." && dot_seen=yes; \
d843 1
a843 1
	for f in $(POTFILES); do echo $$f; done | LC_COLLATE= sort > tmp \
d877 2
a878 2
	  $(CGENDIR) "$(CGENFLAGS)" $(arch) $(prefix) $(archfile) $(opcfile) \
	  "$(options)" "$(extrafiles)"
d894 1
a894 2
	$(MAKE) run-cgen arch=ip2k prefix=ip2k options= \
		archfile=$(CPUDIR)/ip2k.cpu opcfile=$(CPUDIR)/ip2k.opc extrafiles=
d899 1
a899 2
	$(MAKE) run-cgen arch=m32r prefix=m32r options=opinst \
		archfile=$(CPUDIR)/m32r.cpu opcfile=$(CPUDIR)/m32r.opc extrafiles=opinst
d904 1
a904 2
	$(MAKE) run-cgen arch=fr30 prefix=fr30 options= \
		archfile=$(CPUDIR)/fr30.cpu opcfile=$(CPUDIR)/fr30.opc extrafiles=
d908 2
a909 5
# .cpu and .opc files for frv are kept in a different directory, but cgen has no switch to specify that location, so
# copy those file to the regular place.
stamp-frv: $(CGENDEPS) $(srcdir)/../cpu/frv.cpu $(srcdir)/../cpu/frv.opc
	$(MAKE) run-cgen arch=frv prefix=frv options= \
		archfile=$(srcdir)/../cpu/frv.cpu opcfile=$(srcdir)/../cpu/frv.opc extrafiles=
d914 1
a914 2
	$(MAKE) run-cgen arch=openrisc prefix=openrisc options= \
		archfile=$(CPUDIR)/openrisc.cpu opcfile=$(CPUDIR)/openrisc.opc extrafiles=
d920 1
a920 2
	$(MAKE) run-cgen arch=iq2000 prefix=iq2000 options= \
		archfile=$(CPUDIR)/iq2000.cpu opcfile=$(CPUDIR)/iq2000.opc extrafiles=
d925 1
a925 2
	$(MAKE) run-cgen arch=xstormy16 prefix=xstormy16 options= \
		archfile=$(CPUDIR)/xstormy16.cpu opcfile=$(CPUDIR)/xstormy16.opc extrafiles=
d1014 3
a1016 3
  opintl.h $(INCDIR)/safe-ctype.h $(BFDDIR)/elf-bfd.h \
  $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h \
  $(INCDIR)/elf/arm.h $(INCDIR)/elf/reloc-macros.h
a1045 2
dis-init.lo: dis-init.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h opintl.h
d1123 1
a1123 1
  ia64-opc-f.c ia64-opc-x.c ia64-opc-d.c
@


1.63.6.10
log
@2003-12-15  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20031215-merge.
	* cp-support.c (class_name_from_physname): Add DMGL_PARAMS to call
	to cplus_demangle.
	(method_name_from_physname): Ditto.
@
text
@d1 1
a1 1
# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am
d3 1
a3 1
# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
d471 1
a471 1
TAR = tar
d620 1
a620 1
	  test "$$subdir" != "." || dot_seen=yes; \
d1057 1
a1057 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h
@


1.63.6.11
log
@2004-01-26  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20040126-merge.
@
text
@d1 1
a1 1
# Makefile.in generated automatically by automake 1.4 from Makefile.am
d3 1
a3 1
# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
d396 2
a397 7
# It's desirable to list ../bfd/libbfd.la in DEPENDENCIES and LIBADD.
# Unfortunately this causes libtool to add -L$(libdir), referring to the
# planned install directory of libbfd.  This can cause us to pick up an
# old version of libbfd, or to pick up libbfd for the wrong architecture
# if host != build.
libopcodes_la_DEPENDENCIES = $(OFILES)
libopcodes_la_LIBADD = $(OFILES) @@WIN32LIBADD@@
d620 1
a620 1
	  test "$$subdir" = "." && dot_seen=yes; \
@


1.62
log
@	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
	* po/POTFILES.in: Regenerate.
@
text
@d254 1
d359 1
d452 1
a452 1
TAR = tar
d1222 2
@


1.61
log
@Add IP2k GAS and OPCODES support.
@
text
@d450 1
a450 1
TAR = gtar
d1030 9
a1038 2
frv-asm.lo: frv-asm.c sysdep.h config.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h frv-desc.h \
d1040 7
a1046 14
frv-desc.lo: frv-desc.c sysdep.h config.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h frv-desc.h \
  $(INCDIR)/opcode/cgen.h frv-opc.h opintl.h
frv-dis.lo: frv-dis.c sysdep.h config.h $(INCDIR)/dis-asm.h \
  $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h frv-desc.h $(INCDIR)/opcode/cgen.h \
  frv-opc.h opintl.h
frv-ibld.lo: frv-ibld.c sysdep.h config.h $(INCDIR)/dis-asm.h \
  $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h frv-desc.h $(INCDIR)/opcode/cgen.h \
  frv-opc.h opintl.h
frv-opc.lo: frv-opc.c sysdep.h config.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h frv-desc.h \
  $(INCDIR)/opcode/cgen.h frv-opc.h
d1089 9
a1097 5
ip2k-asm.lo: ip2k-asm.c sysdep.h config.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h ip2k-desc.h \
  $(INCDIR)/opcode/cgen.h ip2k-opc.h opintl.h
ip2k-desc.lo: ip2k-desc.c sysdep.h config.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h ip2k-desc.h \
d1099 6
a1104 11
ip2k-dis.lo: ip2k-dis.c sysdep.h config.h $(INCDIR)/dis-asm.h \
  $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h ip2k-desc.h $(INCDIR)/opcode/cgen.h \
  ip2k-opc.h opintl.h
ip2k-ibld.lo: ip2k-ibld.c sysdep.h config.h $(INCDIR)/dis-asm.h \
  $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h ip2k-desc.h $(INCDIR)/opcode/cgen.h \
  ip2k-opc.h opintl.h
ip2k-opc.lo: ip2k-opc.c sysdep.h config.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h ip2k-desc.h \
  $(INCDIR)/opcode/cgen.h ip2k-opc.h
@


1.60
log
@2002-06-18  Dave Brolley  <brolley@@redhat.com>

	* po/POTFILES.in: Add frv-*.[ch].
	* disassemble.c (ARCH_frv): New macro.
	(disassembler): Handle bfd_arch_frv.
	* configure.in: Support frv_bfd_arch.
	* Makefile.am (HFILES): Add frv-*.h.
	(CFILES): Add frv-*.c
	(ALL_MACHINES): Add frv-*.lo.
	(CLEANFILES): Add stamp-frv.
	(FRV_DEPS): New variable.
	(stamp-frv): New target.
	(frv-asm.lo): New target.
	(frv-desc.lo): New target.
	(frv-dis.lo): New target.
	(frv-ibld.lo): New target.
	(frv-opc.lo): New target.
	(frv-*.[ch]): New files.
@
text
@d143 1
d205 5
d310 5
d393 1
a393 1
	stamp-m32r stamp-fr30 stamp-frv stamp-openrisc \
d410 2
d450 1
a450 1
TAR = tar
d863 5
d1089 17
@


1.59
log
@	* Makefile.am (CGENDEPS): Remove unnecessary stamp-cgen.
	* Makefile.in: Regenerate.
@
text
@d139 1
d181 5
d289 5
d382 1
a382 1
	stamp-m32r stamp-fr30 stamp-openrisc \
d403 2
d860 5
d1012 17
@


1.58
log
@	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
	* po/POTFILES.in: Regenerate.
@
text
@d381 1
a381 1
CGENDEPS = ../cgen/stamp-cgen \
@


1.57
log
@Add DLX target
@
text
@d424 1
a424 1
TAR = gtar
d973 1
a973 2
  $(INCDIR)/opcode/dlx.h $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/symcat.h opintl.h
@


1.57.2.1
log
@Merge with mainline, kseitz_interps-20020619-merge.
@
text
@a138 1
	frv-desc.h frv-opc.h \
a179 5
	frv-asm.c \
	frv-desc.c \
	frv-dis.c \
	frv-ibld.c \
	frv-opc.c \
a282 5
	frv-asm.lo \
	frv-desc.lo \
	frv-dis.lo \
	frv-ibld.lo \
	frv-opc.lo \
d371 1
a371 1
	stamp-m32r stamp-fr30 stamp-frv stamp-openrisc \
d381 1
a381 1
CGENDEPS = \
a391 2
@@CGEN_MAINT_TRUE@@FRV_DEPS = @@CGEN_MAINT_TRUE@@stamp-frv
@@CGEN_MAINT_FALSE@@FRV_DEPS = 
d424 1
a424 1
TAR = tar
a846 5
$(srcdir)/frv-desc.h $(srcdir)/frv-desc.c $(srcdir)/frv-opc.h $(srcdir)/frv-opc.c $(srcdir)/frv-ibld.c $(srcdir)/frv-asm.c $(srcdir)/frv-dis.c: $(FRV_DEPS)
	@@true
stamp-frv: $(CGENDEPS) $(CPUDIR)/frv.cpu $(CPUDIR)/frv.opc
	$(MAKE) run-cgen arch=frv prefix=frv options= extrafiles=

d973 2
a974 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/dlx.h
a994 17
frv-asm.lo: frv-asm.c sysdep.h config.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h frv-desc.h \
  $(INCDIR)/opcode/cgen.h frv-opc.h opintl.h
frv-desc.lo: frv-desc.c sysdep.h config.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h frv-desc.h \
  $(INCDIR)/opcode/cgen.h frv-opc.h opintl.h
frv-dis.lo: frv-dis.c sysdep.h config.h $(INCDIR)/dis-asm.h \
  $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h frv-desc.h $(INCDIR)/opcode/cgen.h \
  frv-opc.h opintl.h
frv-ibld.lo: frv-ibld.c sysdep.h config.h $(INCDIR)/dis-asm.h \
  $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h frv-desc.h $(INCDIR)/opcode/cgen.h \
  frv-opc.h opintl.h
frv-opc.lo: frv-opc.c sysdep.h config.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h frv-desc.h \
  $(INCDIR)/opcode/cgen.h frv-opc.h
@


1.57.2.2
log
@Merge w/trunk (kseitz_interps-20020722-merge).
@
text
@a142 1
	ip2k-desc.h ip2k-opc.h \
a203 5
	ip2k-asm.c \
	ip2k-desc.c \
	ip2k-dis.c \
	ip2k-ibld.c \
	ip2k-opc.c \
a303 5
	ip2k-asm.lo \
	ip2k-desc.lo \
	ip2k-dis.lo \
	ip2k-ibld.lo \
	ip2k-opc.lo \
d382 1
a382 1
	stamp-ip2k stamp-m32r stamp-fr30 stamp-frv stamp-openrisc \
a398 2
@@CGEN_MAINT_TRUE@@IP2K_DEPS = @@CGEN_MAINT_TRUE@@stamp-ip2k
@@CGEN_MAINT_FALSE@@IP2K_DEPS = 
d437 1
a437 1
TAR = gtar
a849 5
$(srcdir)/ip2k-desc.h $(srcdir)/ip2k-desc.c $(srcdir)/ip2k-opc.h $(srcdir)/ip2k-opc.c $(srcdir)/ip2k-ibld.c $(srcdir)/ip2k-asm.c $(srcdir)/ip2k-dis.c: $(IP2K_DEPS)
	@@true
stamp-ip2k: $(CGENDEPS) $(CPUDIR)/ip2k.cpu $(CPUDIR)/ip2k.opc
	$(MAKE) run-cgen arch=ip2k prefix=ip2k options= extrafiles=

a1070 17
ip2k-asm.lo: ip2k-asm.c sysdep.h config.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h ip2k-desc.h \
  $(INCDIR)/opcode/cgen.h ip2k-opc.h opintl.h
ip2k-desc.lo: ip2k-desc.c sysdep.h config.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h ip2k-desc.h \
  $(INCDIR)/opcode/cgen.h ip2k-opc.h opintl.h
ip2k-dis.lo: ip2k-dis.c sysdep.h config.h $(INCDIR)/dis-asm.h \
  $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h ip2k-desc.h $(INCDIR)/opcode/cgen.h \
  ip2k-opc.h opintl.h
ip2k-ibld.lo: ip2k-ibld.c sysdep.h config.h $(INCDIR)/dis-asm.h \
  $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h ip2k-desc.h $(INCDIR)/opcode/cgen.h \
  ip2k-opc.h opintl.h
ip2k-opc.lo: ip2k-opc.c sysdep.h config.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h ip2k-desc.h \
  $(INCDIR)/opcode/cgen.h ip2k-opc.h
@


1.57.2.3
log
@Merge with kseitz_interps-20020809-merge of CVS head.
@
text
@d450 1
a450 1
TAR = tar
d1030 5
a1034 9
frv-asm.lo: frv-asm.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h frv-desc.h $(INCDIR)/opcode/cgen.h \
  frv-opc.h opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h \
  $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
frv-desc.lo: frv-desc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h frv-desc.h $(INCDIR)/opcode/cgen.h \
  frv-opc.h opintl.h $(INCDIR)/libiberty.h
frv-dis.lo: frv-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h frv-desc.h \
d1036 11
a1046 7
frv-ibld.lo: frv-ibld.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h frv-desc.h \
  $(INCDIR)/opcode/cgen.h frv-opc.h opintl.h $(INCDIR)/safe-ctype.h
frv-opc.lo: frv-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h frv-desc.h $(INCDIR)/opcode/cgen.h \
  frv-opc.h $(INCDIR)/libiberty.h $(INCDIR)/elf/frv.h \
  $(INCDIR)/elf/reloc-macros.h
d1089 5
a1093 9
ip2k-asm.lo: ip2k-asm.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h ip2k-desc.h $(INCDIR)/opcode/cgen.h \
  ip2k-opc.h opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h \
  $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h
ip2k-desc.lo: ip2k-desc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h ip2k-desc.h $(INCDIR)/opcode/cgen.h \
  ip2k-opc.h opintl.h $(INCDIR)/libiberty.h
ip2k-dis.lo: ip2k-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h ip2k-desc.h \
d1095 11
a1105 6
ip2k-ibld.lo: ip2k-ibld.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h ip2k-desc.h \
  $(INCDIR)/opcode/cgen.h ip2k-opc.h opintl.h $(INCDIR)/safe-ctype.h
ip2k-opc.lo: ip2k-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h ip2k-desc.h $(INCDIR)/opcode/cgen.h \
  ip2k-opc.h $(INCDIR)/libiberty.h
@


1.57.2.4
log
@Merge with kseitz_interps-20020829-merge tag from trunk.
@
text
@a253 1
	tic4x-dis.c \
a357 1
	tic4x-dis.lo \
d450 1
a450 1
TAR = gtar
a1219 2
tic4x-dis.lo: tic4x-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/opcode/tic4x.h
@


1.57.2.5
log
@Merge with kseitz_interps-20020930-merge.
@
text
@d452 1
a452 1
TAR = tar
d976 1
a976 1
  $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/arc.h
d1222 2
a1223 2
tic4x-dis.lo: tic4x-dis.c $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/tic4x.h
@


1.56
log
@	* Makefile.am (sh-dis.lo): Don't put make commands in deps.
	* Makefile.in: Regenerate.
	* arc-dis.c: Use #include "" instead of <> for local header files.
	* m68k-dis.c: Likewise.
@
text
@d172 1
d277 1
d424 1
a424 1
TAR = tar
d972 3
@


1.55
log
@	* Makefile.am (sh-dis.lo): Compile with @@archdefs@@.
	* Makefile.in: regenerate.
@
text
@d422 1
a422 1
TAR = gtar
d870 3
a1133 1
	$(LIBTOOL) --mode=compile $(COMPILE) -c @@archdefs@@ $<
@


1.54
log
@	* acinclude.m4 (AM_INSTALL_LIBBFD): Fake to fool autotools.
	* configure.in: Invoke AM_INSTALL_LIBBFD.
	* Makefile.am (install-data-local): Move to..
	(install_libopcodes): .. New target.
	(uninstall_libopcodes): Likewise.
	(install-bfdlibLTLIBRARIES): Likewise.
	(uninstall-bfdlibLTLIBRARIES): Likewise.
	(bfdlibdir): New.
	(bfdincludedir): New.
	(lib_LTLIBRARIES): Rename to bfdlib_LTLIBRARIES.
	* aclocal.m4: Regenerate.
	* configure: Regenerate.
	* Makefile.in: Regenerate.
@
text
@d422 1
a422 1
TAR = tar
d1131 1
@


1.53
log
@	* dep-in.sed: Cope with absolute paths.
	* Makefile.am (dep.sed): Subst TOPDIR.
	Run "make dep-am".
	* Makefile.in: Regenerate.
	* ppc-opc.c: Whitespace.
	* s390-dis.c: Fix copyright date.
@
text
@d124 4
a127 1
lib_LTLIBRARIES = libopcodes.la
d408 1
a408 1
LTLIBRARIES =  $(lib_LTLIBRARIES)
d523 1
a523 4
mostlyclean-libLTLIBRARIES:

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
d525 2
a526 1
distclean-libLTLIBRARIES:
d528 1
a528 1
maintainer-clean-libLTLIBRARIES:
d530 1
a530 15
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo "$(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p"; \
	    $(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@@$(NORMAL_UNINSTALL)
	list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  $(LIBTOOL)  --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done
d533 1
a533 1
	$(LINK) -rpath $(libdir) $(libopcodes_la_LDFLAGS) $(libopcodes_la_OBJECTS) $(libopcodes_la_LIBADD) $(LIBS)
d695 1
a695 1
install-exec-am: install-libLTLIBRARIES
d698 1
a698 1
install-data-am: install-data-local
d704 1
a704 1
uninstall-am: uninstall-libLTLIBRARIES
d712 1
a712 1
	$(mkinstalldirs)  $(DESTDIR)$(libdir)
d727 1
a727 1
		mostlyclean-libLTLIBRARIES mostlyclean-tags \
d733 1
a733 1
		clean-libLTLIBRARIES clean-tags clean-generic \
d739 1
a739 1
		distclean-libtool distclean-libLTLIBRARIES \
d749 3
a751 2
		maintainer-clean-libLTLIBRARIES maintainer-clean-tags \
		maintainer-clean-generic distclean-am
d763 8
a770 8
clean-libtool maintainer-clean-libtool mostlyclean-libLTLIBRARIES \
distclean-libLTLIBRARIES clean-libLTLIBRARIES \
maintainer-clean-libLTLIBRARIES uninstall-libLTLIBRARIES \
install-libLTLIBRARIES install-data-recursive uninstall-data-recursive \
install-exec-recursive uninstall-exec-recursive installdirs-recursive \
uninstalldirs-recursive all-recursive check-recursive \
installcheck-recursive info-recursive dvi-recursive \
mostlyclean-recursive distclean-recursive clean-recursive \
d775 4
a778 4
install-data-local install-data-am install-data install-am install \
uninstall-am uninstall all-redirect all-am all installdirs-am \
installdirs mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean
d803 1
a803 2
# Install libopcodes include file.
install-data-local: 
d805 21
a825 2
	$(mkinstalldirs) $(DESTDIR)$(includedir)
	$(INSTALL_DATA) $(INCDIR)/dis-asm.h $(DESTDIR)$(includedir)/dis-asm.h
@


1.53.4.1
log
@merge from trunk
@
text
@d124 1
a124 4
bfdlibdir = @@bfdlibdir@@
bfdincludedir = @@bfdincludedir@@

bfdlib_LTLIBRARIES = libopcodes.la
a168 1
	dlx-dis.c \
a272 1
	dlx-dis.lo \
d405 1
a405 1
LTLIBRARIES =  $(bfdlib_LTLIBRARIES)
d520 4
a523 1
mostlyclean-bfdlibLTLIBRARIES:
d525 1
a525 2
clean-bfdlibLTLIBRARIES:
	-test -z "$(bfdlib_LTLIBRARIES)" || rm -f $(bfdlib_LTLIBRARIES)
d527 1
a527 1
distclean-bfdlibLTLIBRARIES:
d529 15
a543 1
maintainer-clean-bfdlibLTLIBRARIES:
d546 1
a546 1
	$(LINK) -rpath $(bfdlibdir) $(libopcodes_la_LDFLAGS) $(libopcodes_la_OBJECTS) $(libopcodes_la_LIBADD) $(LIBS)
d708 1
a708 1
install-exec-am:
d711 1
a711 1
install-data-am: install-bfdlibLTLIBRARIES
d717 1
a717 1
uninstall-am: uninstall-bfdlibLTLIBRARIES
d725 1
a725 1
	$(mkinstalldirs)  $(DESTDIR)$(bfdlibdir)
d740 1
a740 1
		mostlyclean-bfdlibLTLIBRARIES mostlyclean-tags \
d746 1
a746 1
		clean-bfdlibLTLIBRARIES clean-tags clean-generic \
d752 1
a752 1
		distclean-libtool distclean-bfdlibLTLIBRARIES \
d762 2
a763 3
		maintainer-clean-bfdlibLTLIBRARIES \
		maintainer-clean-tags maintainer-clean-generic \
		distclean-am
d775 8
a782 8
clean-libtool maintainer-clean-libtool mostlyclean-bfdlibLTLIBRARIES \
distclean-bfdlibLTLIBRARIES clean-bfdlibLTLIBRARIES \
maintainer-clean-bfdlibLTLIBRARIES uninstall-bfdlibLTLIBRARIES \
install-bfdlibLTLIBRARIES install-data-recursive \
uninstall-data-recursive install-exec-recursive \
uninstall-exec-recursive installdirs-recursive uninstalldirs-recursive \
all-recursive check-recursive installcheck-recursive info-recursive \
dvi-recursive mostlyclean-recursive distclean-recursive clean-recursive \
d787 4
a790 4
install-data-am install-data install-am install uninstall-am uninstall \
all-redirect all-am all installdirs-am installdirs mostlyclean-generic \
distclean-generic clean-generic maintainer-clean-generic clean \
mostlyclean distclean maintainer-clean
d815 2
a816 1
install-bfdlibLTLIBRARIES: @@INSTALL_LIBBFD_TRUE@@install_libopcodes
d818 2
a819 21

uninstall-bfdlibLTLIBRARIES: @@INSTALL_LIBBFD_TRUE@@uninstall_libopcodes
	@@$(NORMAL_UNINSTALL)

.PHONY: install_libopcodes uninstall_libopcodes
install_libopcodes: $(bfdlib_LTLIBRARIES)
	$(mkinstalldirs) $(DESTDIR)$(bfdlibdir)
	$(mkinstalldirs) $(DESTDIR)$(bfdincludedir)
	@@list='$(bfdlib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo "$(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(bfdlibdir)/$$p"; \
	    $(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(bfdlibdir)/$$p; \
	  else :; fi; \
	done
	$(INSTALL_DATA) $(INCDIR)/dis-asm.h $(DESTDIR)$(bfdincludedir)/dis-asm.h

uninstall_libopcodes:
	list='$(bfdlib_LTLIBRARIES)'; for p in $$list; do \
	  $(LIBTOOL)  --mode=uninstall rm -f $(DESTDIR)$(bfdlibdir)/$$p; \
	done
	rm -f $(DESTDIR)$(bfdincludedir)/dis-asm.h
a863 3
sh-dis.lo: sh-dis.c
	$(LIBTOOL) --mode=compile $(COMPILE) -c @@archdefs@@ $<

a960 2
dlx-dis.lo: dlx-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/dlx.h
@


1.53.4.2
log
@Merge with trunk.
@
text
@a138 1
	frv-desc.h frv-opc.h \
a179 5
	frv-asm.c \
	frv-desc.c \
	frv-dis.c \
	frv-ibld.c \
	frv-opc.c \
a282 5
	frv-asm.lo \
	frv-desc.lo \
	frv-dis.lo \
	frv-ibld.lo \
	frv-opc.lo \
d371 1
a371 1
	stamp-m32r stamp-fr30 stamp-frv stamp-openrisc \
d381 1
a381 1
CGENDEPS = \
a391 2
@@CGEN_MAINT_TRUE@@FRV_DEPS = @@CGEN_MAINT_TRUE@@stamp-frv
@@CGEN_MAINT_FALSE@@FRV_DEPS = 
a846 5
$(srcdir)/frv-desc.h $(srcdir)/frv-desc.c $(srcdir)/frv-opc.h $(srcdir)/frv-opc.c $(srcdir)/frv-ibld.c $(srcdir)/frv-asm.c $(srcdir)/frv-dis.c: $(FRV_DEPS)
	@@true
stamp-frv: $(CGENDEPS) $(CPUDIR)/frv.cpu $(CPUDIR)/frv.opc
	$(MAKE) run-cgen arch=frv prefix=frv options= extrafiles=

a993 17
frv-asm.lo: frv-asm.c sysdep.h config.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h frv-desc.h \
  $(INCDIR)/opcode/cgen.h frv-opc.h opintl.h
frv-desc.lo: frv-desc.c sysdep.h config.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h frv-desc.h \
  $(INCDIR)/opcode/cgen.h frv-opc.h opintl.h
frv-dis.lo: frv-dis.c sysdep.h config.h $(INCDIR)/dis-asm.h \
  $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h frv-desc.h $(INCDIR)/opcode/cgen.h \
  frv-opc.h opintl.h
frv-ibld.lo: frv-ibld.c sysdep.h config.h $(INCDIR)/dis-asm.h \
  $(BFD_H) $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h frv-desc.h $(INCDIR)/opcode/cgen.h \
  frv-opc.h opintl.h
frv-opc.lo: frv-opc.c sysdep.h config.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h frv-desc.h \
  $(INCDIR)/opcode/cgen.h frv-opc.h
@


1.52
log
@	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.
@
text
@d890 2
a891 1
		-e 's!@@SRCDIR@@!$(srcdir)!'
d921 5
a925 5
arc-dis.lo: arc-dis.c $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/symcat.h $(INCDIR)/opcode/arc.h $(BFDDIR)/elf-bfd.h \
  $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h \
  $(INCDIR)/bfdlink.h $(INCDIR)/elf/arc.h $(INCDIR)/elf/reloc-macros.h \
  opintl.h arc-dis.h arc-ext.h
d1003 10
a1012 5
ia64-opc-a.lo: ia64-opc-a.c ia64-opc.h $(INCDIR)/opcode/ia64.h
ia64-opc-b.lo: ia64-opc-b.c ia64-opc.h $(INCDIR)/opcode/ia64.h
ia64-opc-f.lo: ia64-opc-f.c ia64-opc.h $(INCDIR)/opcode/ia64.h
ia64-opc-i.lo: ia64-opc-i.c ia64-opc.h $(INCDIR)/opcode/ia64.h
ia64-opc-m.lo: ia64-opc-m.c ia64-opc.h $(INCDIR)/opcode/ia64.h
d1016 1
a1016 1
  ia64-asmtab.c
d1019 3
a1021 2
  $(INCDIR)/opcode/ia64.h ia64-opc-a.c ia64-opc-i.c ia64-opc-m.c \
  ia64-opc-b.c ia64-opc-f.c ia64-opc-x.c ia64-opc-d.c
d1049 1
a1049 1
  opintl.h $(INCDIR)/opcode/m68k.h
@


1.51
log
@Tidy up sh64 rules
@
text
@d419 1
a419 1
TAR = gtar
a1117 1
sh64-opc.lo: sh64-opc.c sh64-opc.h
d1123 1
@


1.50
log
@Export dis-asm.h as part of an install
@
text
@d137 2
d143 1
a144 3
	ia64-asmtab.h \
	ia64-opc.h \
	  sh64-opc.h \
d233 2
a244 2
	  sh64-dis.c \
	  sh64-opc.c \
d326 2
a337 2
	  sh64-dis.lo \
	  sh64-opc.lo \
a838 4
sh64-opc.lo: sh64-opc.c sh64-opc.h
sh64-dis.lo: sh64-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  sh64-opc.h $(INCDIR)/dis-asm.h $(BFD_H) opintl.h

d1118 6
a1148 6
sh64-dis.lo: sh64-dis.c $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h sysdep.h config.h \
  sh64-opc.h $(INCDIR)/libiberty.h $(BFDDIR)/elf-bfd.h \
  $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h \
  $(INCDIR)/bfdlink.h $(INCDIR)/elf/sh.h $(INCDIR)/elf/reloc-macros.h
sh64-opc.lo: sh64-opc.c sh64-opc.h
@


1.49
log
@	* Makefile.am: "make dep-am".
	* Makefile.in: Regenerate.
	* aclocal.m4: Regenerate.
	* config.in: Regenerate.
	* configure: Regenerate.
@
text
@d419 1
a419 1
TAR = tar
d711 1
a711 1
install-data-am:
d787 4
a790 4
install-data-am install-data install-am install uninstall-am uninstall \
all-redirect all-am all installdirs-am installdirs mostlyclean-generic \
distclean-generic clean-generic maintainer-clean-generic clean \
mostlyclean distclean maintainer-clean
d814 6
@


1.48
log
@Contribute sh64-elf.
2001-10-08  Nick Clifton  <nickc@@cambridge.redhat.com>
* sh64-opc.c: Regenerate.
2001-03-13  DJ Delorie  <dj@@redhat.com>
* sh64-opc.h: Rename A_RESV_Fx to A_REUSE_PREV so that its
purpose is more obvious.
* sh64-opc.c (shmedia_table): Ditto.
* sh64-dis.c (initialize_shmedia_opcode_mask_table): Ditto.
(print_insn_shmedia): Ditto.
2001-03-12  DJ Delorie  <dj@@redhat.com>
* sh64-opc.c: Adjust comments to reflect reality: replace bits
3:0 with zeros (not "reserved"), replace "rrrrrr" with
"gggggg" for two-operand floating point opcodes.  Remove
"fsina".
2001-01-08  Hans-Peter Nilsson  <hpn@@cygnus.com>
* sh64-dis.c (print_insn_shmedia) <failing read_memory_func>:
Correct printing of .byte:s.  Return number of printed bytes or
-1; never 0.
(print_insn_sh64x) <not CRT_SH5_ISA16>: Ditto.  Print as .byte:s
to next four-byte-alignment if insn or data is not aligned.
2001-01-06  Hans-Peter Nilsson  <hpn@@cygnus.com>
* sh64-dis.c: Update comments and fix comment formatting.
(initialize_shmedia_opcode_mask_table) <case A_IMMM>:
Abort instead of setting length to 0.
(crange_qsort_cmpb, crange_qsort_cmpl, crange_bsearch_cmpb,
crange_bsearch_cmpl, sh64_get_contents_type,
sh64_address_in_cranges): Move to bfd/elf32-sh64.c.
2001-01-05  Hans-Peter Nilsson  <hpn@@cygnus.com>
* sh64-opc.c: Remove #if 0:d entries for instructions not found in
SH-5/ST50-023-04: fcosa.s, fsrra.s and prefo.
2000-12-30  Hans-Peter Nilsson  <hpn@@cygnus.com>
* sh64-dis.c (print_insn_shmedia): Display MOVI/SHORI-formed
address with same prefix as SHcompact.
In the disassembler, use a .cranges section for linked executables.
* sh64-dis.c (SAVED_MOVI_R, SAVED_MOVI_IMM): Move to head of file
and update for using structure in info->private_data.
(struct sh64_disassemble_info): New.
(is_shmedia_p): Delete.
(crange_qsort_cmpb): New function.
(crange_qsort_cmpl, crange_bsearch_cmpb): New functions.
(crange_bsearch_cmpl, sh64_address_in_cranges): New functions.
(init_sh64_disasm_info, sh64_get_contents_type_disasm): New functions.
(sh64_get_contents_type, sh64_address_is_shmedia): New functions.
(print_insn_shmedia): Correct displaying of address after MOVI/SHORI
pair.  Display addresses for linked executables only.
(print_insn_sh64x_media): Initialize info->private_data by calling
init_sh64_disasm_info.
(print_insn_sh64x): Ditto.  Find out type of contents by calling
sh64_contents_type_disasm.  Display data regions using ".long" and
".byte" similar to unrecognized opcodes.
2000-12-19  Hans-Peter Nilsson  <hpn@@cygnus.com>
* sh64-dis.c (is_shmedia_p): Check info->section and look for ISA
information in section flags before considering symbols.  Don't
assume an info->mach setting of bfd_mach_sh5 means SHmedia code.
* configure.in (bfd_sh_arch): Check presence of sh64 insns by
matching $target $canon_targets instead of looking at the
now-removed -DINCLUDE_SHMEDIA in $targ_cflags.
* configure: Regenerate.
2000-11-25  Hans-Peter Nilsson  <hpn@@cygnus.com>
* sh64-opc.c (shmedia_creg_table): New.
* sh64-opc.h (shmedia_creg_info): New type.
(shmedia_creg_table): Declare.
* sh64-dis.c (creg_name): New function.
(print_insn_shmedia): Use it.
* disassemble.c (disassembler) [ARCH_sh, INCLUDE_SHMEDIA]: Map
bfd_mach_sh5 to print_insn_sh64 if big-endian and to
print_insn_sh64l if little-endian.
* sh64-dis.c (print_insn_shmedia): Make r unsigned.
(print_insn_sh64l): New.
(print_insn_sh64x): New.
(print_insn_sh64x_media): New.
(print_insn_sh64): Break out code to print_insn_sh64x and
print_insn_sh64x_media.
2000-11-24  Hans-Peter Nilsson  <hpn@@cygnus.com>
* sh64-opc.h: New file
* sh64-opc.c: New file
* sh64-dis.c: New file
* Makefile.am: Add sh64 targets.
(HFILES): Add sh64-opc.h.
(CFILES): Add sh64-opc.c and sh64-dis.c.
(ALL_MACHINES): Add sh64 files.
* Makefile.in: Regenerate.
* configure.in: Add support for sh64 to bfd_sh_arch.
* configure: Regenerate.
* disassemble.c [ARCH_all] (INCLUDE_SHMEDIA): Define.
(disassembler) [ARCH_sh, INCLUDE_SHMEDIA]: Map bfd_mach_sh5 to
print_insn_sh64.
* sh-dis.c (print_insn_shx): Handle bfd_mach_sh5 as arch_sh4.
* po/POTFILES.in: Regenerate.
* po/opcodes.pot: Regenerate.
@
text
@d1 1
a1 1
# Makefile.in generated automatically by automake 1.4 from Makefile.am
d3 1
a3 1
# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
d419 1
a419 1
TAR = gtar
d584 1
a584 1
	  test "$$subdir" = "." && dot_seen=yes; \
d1141 6
@


1.48.2.1
log
@	* aclocal.m4: Regenerate.
	* config.in: Regenerate.
	* configure: Regenerate.
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.

	Merge from mainline.
	2002-03-23  matthew green  <mrg@@redhat.com>
	* ppc-opc.c (vmaddfp): Fix operand order.

	2002-03-21  Anton Blanchard  <anton@@samba.org>
	* ppc-opc.c: Add optional field to mtmsrd.
	(MTMSRD_L, XRLARB_MASK): Define.

	2002-03-13  Alan Modra  <amodra@@bigpond.net.au>
	* ppc-opc.c: Add optional `L' field to tlbie.
	(XRTLRA_MASK): Define.

	2002-02-20  Tom Rix  <trix@@redhat.com>
	* ppc-opc.c (powerpc_operands): Add WS feild.  Use for tlbre, tlbwe.
@
text
@d1 1
a1 1
# Makefile.in generated automatically by automake 1.4-p5 from Makefile.am
d3 1
a3 1
# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
d419 1
a419 1
TAR = tar
d584 1
a584 1
	  test "$$subdir" != "." || dot_seen=yes; \
a1140 6
sh64-dis.lo: sh64-dis.c $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h sysdep.h config.h \
  sh64-opc.h $(INCDIR)/libiberty.h $(BFDDIR)/elf-bfd.h \
  $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h \
  $(INCDIR)/bfdlink.h $(INCDIR)/elf/sh.h $(INCDIR)/elf/reloc-macros.h
sh64-opc.lo: sh64-opc.c sh64-opc.h
@


1.48.2.2
log
@Merge from mainline.
@
text
@d888 1
a888 2
		-e 's!@@SRCDIR@@!$(srcdir)!'	\
		-e 's!@@TOPDIR@@!'`echo $(srcdir) | sed -e s,/opcodes$$,,`'!'
d918 5
a922 5
arc-dis.lo: arc-dis.c $(INCDIR)/ansidecl.h $(INCDIR)/libiberty.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/arc.h \
  $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h \
  $(INCDIR)/elf/external.h $(INCDIR)/bfdlink.h $(INCDIR)/elf/arc.h \
  $(INCDIR)/elf/reloc-macros.h opintl.h arc-dis.h arc-ext.h
d1000 5
a1004 10
ia64-opc-a.lo: ia64-opc-a.c ia64-opc.h $(INCDIR)/opcode/ia64.h \
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h
ia64-opc-b.lo: ia64-opc-b.c ia64-opc.h $(INCDIR)/opcode/ia64.h \
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h
ia64-opc-f.lo: ia64-opc-f.c ia64-opc.h $(INCDIR)/opcode/ia64.h \
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h
ia64-opc-i.lo: ia64-opc-i.c ia64-opc.h $(INCDIR)/opcode/ia64.h \
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h
ia64-opc-m.lo: ia64-opc-m.c ia64-opc.h $(INCDIR)/opcode/ia64.h \
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h
d1008 1
a1008 1
  $(BFD_H) $(INCDIR)/symcat.h ia64-asmtab.c
d1011 2
a1012 3
  $(INCDIR)/opcode/ia64.h $(BFD_H) $(INCDIR)/symcat.h \
  ia64-opc-a.c ia64-opc-i.c ia64-opc-m.c ia64-opc-b.c \
  ia64-opc-f.c ia64-opc-x.c ia64-opc-d.c
d1040 1
a1040 1
  $(INCDIR)/libiberty.h opintl.h $(INCDIR)/opcode/m68k.h
@


1.47
log
@Run "make dep-am"
@
text
@d1 1
a1 1
# Makefile.in generated automatically by automake 1.4-p5 from Makefile.am
d3 1
a3 1
# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
d144 1
d243 2
d336 2
d419 1
a419 1
TAR = tar
d584 1
a584 1
	  test "$$subdir" != "." || dot_seen=yes; \
d832 4
@


1.46
log
@Add support for OpenRISC 32-bit embedded processor
@
text
@d414 1
a414 1
TAR = gtar
d1082 5
@


1.45
log
@run "make dep-am"; automake
regenerate po/POTFILES.in
@
text
@d1 1
a1 1
# Makefile.in generated automatically by automake 1.4 from Makefile.am
d3 1
a3 1
# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
d220 2
d312 2
d414 1
a414 1
TAR = tar
d579 1
a579 1
	  test "$$subdir" = "." && dot_seen=yes; \
@


1.44
log
@Index: bfd/ChangeLog
2001-12-07  Geoffrey Keating  <geoffk@@redhat.com>
	    Richard Henderson  <rth@@redhat.com>
	    Corinna Vinschen  <vinschen@@redhat.com>

	* Makefile.am: Add support for xstormy16.
	* archures.c: Add support for xstormy16.
	* config.bfd: Add support for xstormy16.
	* configure.in: Add support for xstormy16.
	* reloc.c: Add support for xstormy16.
	* targets.c: Add support for xstormy16.
	* cpu-xstormy16.c: New file.
	* elf32-xstormy16.c: New file.
	* Makefile.in: Regenerated.
	* bfd-in2.h: Regenerated.
	* configure: Regenerated.
	* libbfd.h: Regenerated.

Index: binutils/ChangeLog
2001-12-07  Geoffrey Keating  <geoffk@@redhat.com>

	* readelf.c (guess_is_rela): Add support for stormy16.
	(dump_relocations): Likewise.
	(get_machine_name): Likewise.

Index: gas/ChangeLog
2001-12-07  Geoffrey Keating  <geoffk@@redhat.com>
	    Richard Henderson  <rth@@redhat.com>

	* configure.in: Add support for xstormy16.
	* configure: Regenerated.
	* Makefile.am: Add support for xstormy16.
	* Makefile.in: Regenerated.
	* config/tc-xstormy16.c: New file.
	* config/tc-xstormy16.h: New file.

Index: gas/testsuite/ChangeLog
2001-12-07  Geoffrey Keating  <geoffk@@redhat.com>
	    matthew green  <mrg@@redhat.com>

	* gas/xstormy16/allinsn.d: New file.
	* gas/xstormy16/allinsn.exp: New file.
	* gas/xstormy16/allinsn.s: New file.
	* gas/xstormy16/allinsn.sh: New file.
	* gas/xstormy16/gcc.d: New file.
	* gas/xstormy16/gcc.s: New file.
	* gas/xstormy16/gcc.sh: New file.
	* gas/xstormy16/reloc-1.d: New file.
	* gas/xstormy16/reloc-1.s: New file.
	* gas/xstormy16/reloc-2.d: New file.
	* gas/xstormy16/reloc-2.s: New file.

Index: ld/ChangeLog
2001-12-07  Geoffrey Keating  <geoffk@@redhat.com>
	    Richard Henderson  <rth@@redhat.com>

	* Makefile.am: Add support for xstormy16.
	* configure.tgt: Add support for xstormy16.
	* Makefile.in: Regenerate.
	* emulparams/elf32xstormy16.sh: New file.
	* scripttempl/xstormy16.sc: New file.

Index: opcodes/ChangeLog
2001-12-07  Geoffrey Keating  <geoffk@@redhat.com>

	* Makefile.am: Add support for xstormy16.
	* Makefile.in: Regenerate.
	* configure.in: Add support for xstormy16.
	* configure: Regenerate.
	* disassemble.c: Add support for xstormy16.
	* xstormy16-asm.c: New generated file.
	* xstormy16-desc.c: New generated file.
	* xstormy16-desc.h: New generated file.
	* xstormy16-dis.c: New generated file.
	* xstormy16-ibld.c: New generated file.
	* xstormy16-opc.c: New generated file.
	* xstormy16-opc.h: New generated file.

Index: include/ChangeLog
2001-12-07  Geoffrey Keating  <geoffk@@redhat.com>

	* dis-asm.h (print_insn_xstormy16): Declare.

Index: include/elf/ChangeLog
2001-12-07  Geoffrey Keating  <geoffk@@redhat.com>
	    Richard Henderson  <rth@@redhat.com>

	* common.h (EM_XSTORMY16): Define.
	* xstormy16.h: New file.
@
text
@d410 1
a410 1
TAR = gtar
d950 3
a952 3
  $(INCDIR)/safe-ctype.h $(BFD_H) $(INCDIR)/symcat.h \
  fr30-desc.h $(INCDIR)/opcode/cgen.h fr30-opc.h opintl.h \
  $(INCDIR)/xregex.h $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h
d961 1
a961 1
  $(INCDIR)/opcode/cgen.h fr30-opc.h opintl.h
d1002 3
a1004 3
  $(INCDIR)/safe-ctype.h $(BFD_H) $(INCDIR)/symcat.h \
  m32r-desc.h $(INCDIR)/opcode/cgen.h m32r-opc.h opintl.h \
  $(INCDIR)/xregex.h $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h
d1013 1
a1013 1
  $(INCDIR)/opcode/cgen.h m32r-opc.h opintl.h
d1055 1
a1055 1
  $(BFD_H) $(INCDIR)/ansidecl.h $(INCDIR)/libiberty.h \
d1062 3
a1064 3
  $(INCDIR)/safe-ctype.h $(BFD_H) $(INCDIR)/symcat.h \
  openrisc-desc.h $(INCDIR)/opcode/cgen.h openrisc-opc.h \
  opintl.h $(INCDIR)/xregex.h $(INCDIR)/xregex2.h $(INCDIR)/libiberty.h
d1074 1
a1074 1
  opintl.h
d1109 1
a1109 1
  $(INCDIR)/opcode/tic54x.h
d1125 18
@


1.43
log
@Add MMIX support
@
text
@d1 1
a1 1
# Makefile.in generated automatically by automake 1.4-p5 from Makefile.am
d3 1
a3 1
# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
d145 1
d241 5
d330 5
d358 1
d380 2
d575 1
a575 1
	  test "$$subdir" != "." || dot_seen=yes; \
d828 5
@


1.42
log
@Fix compile time warnings in cgen-generated files
@
text
@d1 1
a1 1
# Makefile.in generated automatically by automake 1.4 from Makefile.am
d3 1
a3 1
# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
d211 2
d296 2
d561 1
a561 1
	  test "$$subdir" = "." && dot_seen=yes; \
d1035 4
@


1.41
log
@	* Makefile.am (Makefile): Depend on bfd/configure.in
	Run "make dep-am"
	* Makefile.in: Regenerate.
@
text
@d392 1
a392 1
TAR = tar
@


1.40
log
@	* Makefile.am: Update dependencies with "make dep-am".
	* Makefile.in: Regenerate.
@
text
@d826 2
d876 1
a876 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/opcode/a29k.h
d878 1
a878 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/opcode/alpha.h
d880 2
a881 1
  $(INCDIR)/opcode/alpha.h $(BFD_H) opintl.h
d883 4
a886 4
  $(INCDIR)/opcode/arc.h $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h \
  $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h $(INCDIR)/bfdlink.h \
  $(INCDIR)/elf/arc.h $(INCDIR)/elf/reloc-macros.h opintl.h \
  arc-dis.h arc-ext.h
d890 1
a890 1
  $(BFD_H) arc-ext.h $(INCDIR)/libiberty.h
d892 5
a896 4
  $(INCDIR)/dis-asm.h $(BFD_H) arm-opc.h $(INCDIR)/coff/internal.h \
  $(BFDDIR)/libcoff.h $(INCDIR)/bfdlink.h opintl.h $(BFDDIR)/elf-bfd.h \
  $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h \
  $(INCDIR)/elf/arm.h $(INCDIR)/elf/reloc-macros.h
d898 2
a899 1
  $(INCDIR)/dis-asm.h $(BFD_H) opintl.h $(INCDIR)/opcode/avr.h
d909 2
a910 2
  $(INCDIR)/ansidecl.h sysdep.h config.h $(INCDIR)/opcode/cris.h \
  $(INCDIR)/libiberty.h
d913 2
a914 1
  $(INCDIR)/opcode/d10v.h $(INCDIR)/dis-asm.h $(BFD_H)
d919 1
a919 1
  opintl.h
d923 1
a923 1
  $(INCDIR)/dis-asm.h $(BFD_H) opintl.h
d925 1
a925 1
  $(INCDIR)/dis-asm.h $(BFD_H)
d944 3
a947 2
h8500-dis.lo: h8500-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  h8500-opc.h $(INCDIR)/dis-asm.h $(BFD_H) opintl.h
d949 2
a950 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(BFDDIR)/libhppa.h $(INCDIR)/opcode/hppa.h
d952 1
a952 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/opcode/i370.h
d956 2
a957 1
  $(INCDIR)/ansidecl.h sysdep.h config.h opintl.h
d959 1
a959 1
  $(INCDIR)/ansidecl.h $(INCDIR)/opcode/i860.h
d961 1
a961 1
  $(INCDIR)/dis-asm.h $(BFD_H)
d963 1
a963 1
  $(INCDIR)/ansidecl.h $(INCDIR)/opcode/ia64.h
d998 2
a999 1
  $(INCDIR)/opcode/m68hc11.h $(INCDIR)/dis-asm.h $(BFD_H)
d1003 1
a1003 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/floatformat.h \
d1008 1
a1008 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/opcode/m88k.h \
d1011 1
a1011 1
  mcore-opc.h $(INCDIR)/dis-asm.h $(BFD_H)
d1013 1
a1013 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/opcode/mips.h \
d1023 1
a1023 1
  opintl.h
d1028 1
a1028 1
  opintl.h
d1032 2
a1033 2
  sysdep.h config.h $(INCDIR)/dis-asm.h $(INCDIR)/opcode/ns32k.h \
  opintl.h
d1052 1
a1052 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/opcode/pdp11.h
d1055 2
a1056 1
  $(INCDIR)/opcode/pj.h $(INCDIR)/dis-asm.h $(BFD_H)
d1060 1
a1060 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/opcode/ppc.h
d1067 2
a1068 1
  config.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/opcode/s390.h
d1070 1
a1070 1
  sh-opc.h $(INCDIR)/dis-asm.h $(BFD_H)
d1073 1
a1073 1
  $(INCDIR)/libiberty.h opintl.h
d1077 1
a1077 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/opcode/tic30.h
d1079 1
a1079 1
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/opcode/tic54x.h \
d1084 2
a1085 1
  $(INCDIR)/opcode/tic80.h $(INCDIR)/dis-asm.h $(BFD_H)
d1090 1
a1090 1
  opintl.h
d1094 2
a1095 1
  $(INCDIR)/opcode/vax.h $(INCDIR)/dis-asm.h $(BFD_H)
d1097 1
a1097 1
  w65-opc.h $(INCDIR)/dis-asm.h $(BFD_H)
d1099 1
a1099 1
  $(INCDIR)/dis-asm.h $(BFD_H) z8k-opc.h
@


1.39
log
@s390 assembler improvements and testsuite
@
text
@d392 1
a392 1
TAR = gtar
d884 4
a887 3
arc-opc.lo: arc-opc.c $(INCDIR)/ansidecl.h $(INCDIR)/opcode/arc.h
arc-ext.lo: arc-ext.c $(BFD_H) $(INCDIR)/ansidecl.h \
  arc-ext.h $(INCDIR)/libiberty.h
d896 2
a897 2
  $(INCDIR)/libiberty.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen.h \
  opintl.h
d901 2
a902 1
  $(INCDIR)/libiberty.h $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen.h
d921 3
a923 2
  $(BFD_H) $(INCDIR)/symcat.h fr30-desc.h $(INCDIR)/opcode/cgen.h \
  fr30-opc.h opintl.h
d965 3
a967 3
  sysdep.h config.h ia64-opc.h $(INCDIR)/opcode/ia64.h \
  ia64-opc-a.c ia64-opc-i.c ia64-opc-m.c ia64-opc-b.c \
  ia64-opc-f.c ia64-opc-x.c ia64-opc-d.c
d970 3
a972 2
  $(BFD_H) $(INCDIR)/symcat.h m32r-desc.h $(INCDIR)/opcode/cgen.h \
  m32r-opc.h opintl.h
d1025 3
a1027 2
  $(BFD_H) $(INCDIR)/symcat.h openrisc-desc.h $(INCDIR)/opcode/cgen.h \
  openrisc-opc.h opintl.h
d1041 2
a1042 2
pdp11-dis.lo: pdp11-dis.c $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/opcode/pdp11.h
d1052 3
a1054 2
s390-opc.lo: s390-opc.c s390-opc.tab $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/s390.h
@


1.38
log
@Update dependencies with "make dep-am".
@
text
@d223 1
d392 1
a392 1
TAR = tar
d820 6
d1047 2
a1048 1
s390-opc.lo: s390-opc.c $(INCDIR)/ansidecl.h $(INCDIR)/opcode/s390.h
@


1.37
log
@2001-07-05  Ben Elliston  <bje@@redhat.com>

	* Makefile.am (CPUDIR): Define.
	(stamp-m32r): Update dependencies.
	(stamp-fr30): Ditto.
	(stamp-openrisc): Ditto.
	* Makefile.in: Regenerate.
@
text
@d391 1
a391 1
TAR = gtar
d1016 3
a1018 3
openrisc-desc.lo: openrisc-desc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(BFD_H) $(INCDIR)/symcat.h openrisc-desc.h $(INCDIR)/opcode/cgen.h \
  openrisc-opc.h opintl.h $(INCDIR)/libiberty.h
d1022 4
a1025 3
openrisc-ibld.lo: openrisc-ibld.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/symcat.h openrisc-desc.h \
  $(INCDIR)/opcode/cgen.h openrisc-opc.h opintl.h
@


1.36
log
@Add openRISC support in opcodes
@
text
@d346 1
d797 1
a797 1
stamp-m32r: $(CGENDEPS) $(CGENDIR)/m32r.cpu $(CGENDIR)/m32r.opc
d802 1
a802 1
stamp-fr30: $(CGENDEPS) $(CGENDIR)/fr30.cpu $(CGENDIR)/fr30.opc
d807 1
a807 1
stamp-openrisc: $(CGENDEPS) $(CGENDIR)/openrisc.cpu $(CGENDIR)/openrisc.opc
@


1.35
log
@z8k fixes
@
text
@d139 1
d212 5
d294 5
d341 1
a341 1
	stamp-m32r stamp-fr30 \
d360 2
d804 5
d1012 15
@


1.34
log
@Bump version to 2.11.90, fix missing dependencies in bfd/,
and run "make dep-am".
@
text
@d377 1
a377 1
TAR = tar
@


1.33
log
@2001-02-20  H.J. Lu  <hjl@@gnu.org>

	* Makefile.am (ia64-ic.tbl): Remove the target.
	(ia64-raw.tbl): Likewise.
	(ia64-waw.tbl): Likewise.
	(ia64-war.tbl): Likewise.
	(ia64-asmtab.c): Generate it in the source directory.
	* Makefile.in: Regenerated.
@
text
@d377 1
a377 1
TAR = gtar
d853 8
a860 8
arc-dis.lo: arc-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/opcode/arc.h \
  $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h \
  $(INCDIR)/elf/external.h $(INCDIR)/bfdlink.h $(INCDIR)/elf/arc.h \
  $(INCDIR)/elf/reloc-macros.h opintl.h arc-dis.h arc-ext.h
arc-opc.lo: arc-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/arc.h opintl.h
arc-ext.lo: $(BFD_H) $(INCDIR)/libiberty.h arc-ext.h
d897 1
a897 1
  fr30-opc.h opintl.h
d906 1
a906 1
  fr30-opc.h
d945 1
a945 1
  m32r-opc.h opintl.h
d954 1
a954 1
  m32r-opc.h
d994 2
a995 1
pdp11-dis.lo: pdp11-dis.c $(INCDIR)/dis-asm.h $(INCDIR)/opcode/pdp11.h
d1005 3
a1007 4
s390-dis.lo: s390-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/opcode/s390.h
s390-opc.lo: s390-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/s390.h opintl.h
@


1.32
log
@Add PDP-11 support
@
text
@a790 9
ia64-ic.tbl: $(srcdir)/ia64-ic.tbl
	$(LN_S) -f $(srcdir)/ia64-ic.tbl
ia64-raw.tbl: $(srcdir)/ia64-raw.tbl
	$(LN_S) -f $(srcdir)/ia64-raw.tbl
ia64-waw.tbl: $(srcdir)/ia64-waw.tbl
	$(LN_S) -f $(srcdir)/ia64-waw.tbl
ia64-war.tbl: $(srcdir)/ia64-war.tbl
	$(LN_S) -f $(srcdir)/ia64-war.tbl

d798 1
a798 1
	./ia64-gen > $(srcdir)/ia64-asmtab.c
@


1.31
log
@	* Makefile.am (stamp-lib): ranlib the libopcodes.a in the build
	directory.
	* Makefile.in: Regenerate.
@
text
@d211 2
d287 3
a293 1
	ns32k-dis.lo \
d377 1
a377 1
TAR = tar
d1003 2
@


1.30
log
@Add s390 support
@
text
@d373 1
a373 1
TAR = gtar
d754 1
@


1.29
log
@Updated ARC assembler from arccores.com
@
text
@d215 2
d290 2
d1006 4
@


1.29.2.1
log
@Merge from mainline.
@
text
@a282 1
	ns32k-dis.lo \
d287 1
d369 1
a369 1
TAR = tar
a749 1
	  $(RANLIB) libopcodes.tmp; \
d782 9
d798 1
a798 1
	here=`pwd`; cd $(srcdir); $$here/ia64-gen > ia64-asmtab.c
d853 8
a860 8
arc-dis.lo: arc-dis.c $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/opcode/arc.h $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h \
  $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h $(INCDIR)/bfdlink.h \
  $(INCDIR)/elf/arc.h $(INCDIR)/elf/reloc-macros.h opintl.h \
  arc-dis.h arc-ext.h
arc-opc.lo: arc-opc.c $(INCDIR)/ansidecl.h $(INCDIR)/opcode/arc.h
arc-ext.lo: arc-ext.c $(BFD_H) $(INCDIR)/ansidecl.h \
  arc-ext.h $(INCDIR)/libiberty.h
d897 1
a897 1
  fr30-opc.h opintl.h $(INCDIR)/libiberty.h
d906 1
a906 1
  fr30-opc.h $(INCDIR)/libiberty.h
d945 1
a945 1
  m32r-opc.h opintl.h $(INCDIR)/libiberty.h
d954 1
a954 1
  m32r-opc.h $(INCDIR)/libiberty.h
@


1.28
log
@Regenerate files
@
text
@d154 1
d237 1
d857 1
a857 1
  $(INCDIR)/elf/reloc-macros.h opintl.h
d860 1
@


1.27
log
@Regenerate
@
text
@d79 2
@


1.26
log
@Minor formatting fixes
@
text
@d73 2
d96 1
d101 1
d350 1
a350 1
libopcodes_a_OBJECTS =  libopcodes.a.o
d368 1
a368 1
OBJECTS = libopcodes.a.o $(libopcodes_la_OBJECTS)
d372 1
a372 1
.SUFFIXES: .S .c .lo .o .s
d425 5
d438 1
d769 1
a769 1
	@@true	
a776 2

# The start marker is written this way to pass through automake unscathed.
@


1.25
log
@2000-07-28  Ben Elliston  <bje@@redhat.com>

	* Makefile.am (CGEN, CGENDEPS, CGENDIR, CGENFLAGS): New.
	(run-cgen, stamp-m32r, stamp-fr30): New targets.
	* Makefile.in: Regenerate.
	* configure.in: Add --enable-cgen-maint option.
	* configure: Regenerate.
@
text
@d72 1
d76 1
@


1.24
log
@

2000-07-22  Jason Eckhardt  <jle@@cygnus.com>

	* include/opcode/i860.h (btne, bte, bla): Changed these opcodes
	to use sbroff ('r') instead of split16 ('s').
	(J, K, L, M): New operand types for 16-bit aligned fields.
	(ld.x, {p}fld.x, fst.x, pst.d): Changed these opcodes to
	use I, J, K, L, M instead of just I.
	(T, U): New operand types for split 16-bit aligned fields.
	(st.x): Changed these opcodes to use S, T, U instead of just S.
	(andh, andnoth, orh, xorh): Deleted 3-register forms as they do not
	exist on the i860.
	(pfgt.sd, pfle.sd): Deleted these as they do not exist on the i860.
	(pfeq.ss, pfeq.dd): New opcodes.
	(st.s): Fixed incorrect mask bits.
	(fmlow): Fixed incorrect mask bits.
	(fzchkl, pfzchkl): Fixed incorrect mask bits.
	(faddz, pfaddz): Fixed incorrect mask bits.
	(form, pform): Fixed incorrect mask bits.
	(pfld.l): Fixed incorrect mask bits.
	(fst.q): Fixed incorrect mask bits.
	(all floating point opcodes): Fixed incorrect mask bits for
	handling of dual bit.

	* include/elf/i860.h: New file.
	(elf_i860_reloc_type): Defined ELF32 i860 relocations.

	* bfd/cpu-i860.c: Added comments.

	* bfd/elf32-i860.c (TARGET_LITTLE_SYM): Defined to
	bfd_elf32_i860_little_vec.
	(TARGET_LITTLE_NAME): Defined to "elf32-i860-little".
	(ELF_MAXPAGESIZE): Changed to 4096.

	* bfd/targets.c (bfd_elf32_i860_little_vec): Declaration of
	new target.
	(bfd_target_vector): Added bfd_elf32_i860_little_vec.

	* bfd/config.bfd (i860-stardent-sysv4*, i860-stardent-elf*): Added
	config for little endian elf32 i860.
	(targ_defvec): Define for the new config above
	as "bfd_elf32_i860_little_vec".
	(targ_selvecs): Define for the new config above
	as "bfd_elf32_i860_vec bfd_elf32_i860_little_vec"

	* bfd/configure.in (bfd_elf32_i860_little_vec): Added recognition
	of new target vec.

	* bfd/configure: Regenerated.

	* opcodes/i860-dis.c: New file.
	(print_insn_i860): New function.
	(print_br_address): New function.
	(sign_extend): New function.
	(BITWISE_OP): New macro.
	(I860_REG_PREFIX): New macro.
	(grnames, frnames, crnames): New structures.

	* opcodes/disassemble.c (ARCH_i860): Define.
	(disassembler): Add check for bfd_arch_i860 to set disassemble
	function to print_insn_i860.

	* include/dis-asm.h (print_insn_i860): Add prototype.

	* opcodes/Makefile.in (CFILES): Added i860-dis.c.
	(ALL_MACHINES): Added i860-dis.lo.
	(i860-dis.lo): New dependences.

	* opcodes/configure.in: New bits for bfd_i860_arch.

	* opcodes/configure: Regenerated.
@
text
@a71 1
CC_FOR_BUILD = @@CC_FOR_BUILD@@
a74 1
EXEEXT_FOR_BUILD = @@EXEEXT_FOR_BUILD@@
d102 1
d312 1
d315 16
d359 1
a359 1
TAR = tar
d747 18
@


1.23
log
@Revert spurious unrelated changes from last commit.  Oops.
@
text
@d171 1
d251 1
d871 2
@


1.22
log
@	* Makefile.am (CFILES): Add cris-dis.c and cris-opc.c.
	(ALL_MACHINES): Add cris-dis.lo and cris-opc.lo.
	(cris-dis.lo, cris-opc.lo): New rules.
	* Makefile.in: Rebuild.
	* configure.in (bfd_cris_arch): New target.
	* configure: Rebuild.
	* disassemble.c (ARCH_cris): Define.
	(disassembler): Support ARCH_cris.
	* cris-dis.c, cris-opc.c: New files.
	* po/POTFILES.in, po/opcodes.pot: Regenerate.
@
text
@a747 2
	for f in ia64-ic.tbl ia64-raw.tbl ia64-waw.tbl ia64-war.tbl; do \
	  if test -e $$f; then true; else cp -p $(srcdir)/$$f .; fi; done
@


1.21
log
@Fix 2000-06-22.  grep after running dep.sed
@
text
@d152 2
d233 2
d748 2
d826 4
@


1.20
log
@Ensure /usr/include and the like stay out of dependencies.
@
text
@d307 1
a307 1
	libopcodes.a stamp-lib dep.sed DEP DEP1 DEP2
d751 3
a753 1
	if grep ' /' DEP1 > /dev/null 2> /dev/null; then \
d756 1
a756 2
	  sed -f dep.sed < DEP1 > $@@; \
	  echo '# IF YOU PUT ANYTHING HERE IT WILL GO AWAY' >> $@@; \
@


1.19
log
@2000-06-20  H.J. Lu  <hjl@@gnu.org>

	* Makefile.am: Rebuild dependency.
	* Makefile.in: Rebuild.
@
text
@d337 1
a337 1
TAR = gtar
d751 6
a756 2
	sed -f dep.sed < DEP1 > $@@
	echo '# IF YOU PUT ANYTHING HERE IT WILL GO AWAY' >> $@@
@


1.18
log
@Applied Stephane Carrez <Stephane.Carrez@@worldnet.fr> patches to add support
for m68hc11 and m68hc12 processors.
@
text
@d807 1
a807 1
  $(INCDIR)/dis-asm.h $(BFD_H) opintl.h
d892 3
a894 2
m68hc11-dis.lo: m68hc11-dis.c $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/floatformat.h \
a895 1
m68hc11-opc.lo: m68hc11-opc.c $(INCDIR)/ansidecl.h $(INCDIR)/opcode/m68hc11.h
d945 5
a949 4
tic54x-dis.lo: tic54x-dis.c $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/opcode/tic54x.h $(INCDIR)/coff/tic54x.h \
  $(INCDIR)/coff/ti.h
tic54x-opc.lo: tic54x-opc.c $(INCDIR)/ansidecl.h $(INCDIR)/opcode/tic54x.h
@


1.17
log
@Update dependencies.
@
text
@d186 2
d255 2
d337 1
a337 1
TAR = tar
d892 4
@


1.16
log
@Regerbated after change to Makefile.am
@
text
@d333 1
a333 1
TAR = gtar
d854 16
a869 3
ia64-dis.lo: ia64-dis.c $(INCDIR)/dis-asm.h $(INCDIR)/opcode/ia64.h $(BFD_H)
ia64-opc.lo: $(INCDIR)/opcode/ia64.h $(BFD_H) $(INCDIR)/libiberty.h \
  $(INCDIR)/ansidecl.h sysdep.h ia64-asmtab.h ia64-asmtab.c
a919 7
pj-dis.lo: pj-dis.c $(INCDIR)/opcode/pj.h $(INCDIR)/dis-asm.h \
  $(BFD_H) $(INCDIR)/ansidecl.h
pj-opc.lo: pj-opc.c $(INCDIR)/ansidecl.h $(INCDIR)/opcode/pj.h
ppc-dis.lo: ppc-dis.c $(INCDIR)/ansidecl.h sysdep.h \
  config.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/opcode/ppc.h
ppc-opc.lo: ppc-opc.c $(INCDIR)/ansidecl.h $(INCDIR)/opcode/ppc.h \
  opintl.h
d937 4
a940 4
tic54x-dis.lo: tic54x-dis.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/opcode/tic54x.h
tic54x-opc.lo: tic54x-opc.c sysdep.h config.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/opcode/tic54x.h
@


1.15
log
@Support for tic54x target.
@
text
@d122 3
d333 1
a333 1
TAR = tar
a699 17
ia64-ic.tbl: $(srcdir)/ia64-ic.tbl
	$(LN_S) -f $(srcdir)/ia64-ic.tbl
ia64-raw.tbl: $(srcdir)/ia64-raw.tbl
	$(LN_S) -f $(srcdir)/ia64-raw.tbl
ia64-waw.tbl: $(srcdir)/ia64-waw.tbl
	$(LN_S) -f $(srcdir)/ia64-waw.tbl
ia64-war.tbl: $(srcdir)/ia64-war.tbl
	$(LN_S) -f $(srcdir)/ia64-war.tbl

ia64-gen: ia64-gen.o
	$(LINK) ia64-gen.o $(LIBIBERTY)

ia64-gen.o: ia64-gen.c ia64-opc.c ia64-opc-a.c ia64-opc-b.c ia64-opc-f.c \
  ia64-opc-i.c ia64-opc-m.c ia64-opc-d.c ia64-opc.h

ia64-asmtab.c: @@MAINT@@ ia64-gen ia64-ic.tbl ia64-raw.tbl ia64-waw.tbl ia64-war.tbl
	./ia64-gen > $(srcdir)/ia64-asmtab.c
d723 18
@


1.14
log
@IA-64 ELF support.
@
text
@d203 2
d270 2
d903 7
d927 4
@


1.13
log
@More portability patches.  Include sysdep.h everywhere.
@
text
@d131 2
d167 10
d240 2
d693 17
d846 3
@


1.12
log
@Remove ``-W -Wall'' from top-level Makefile/configure.
Add ``-W -Wall'' to sub-directories bfd, binutils, gas gprof, ld and
opcodes by the addition of WARN_CFLAGS to Makefile.am and configury to
set it.  Add configure option --enable-build-warnings.
Re-generate all and sundry using auto*-000227.
@
text
@d745 16
a760 8
a29k-dis.lo: a29k-dis.c $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/opcode/a29k.h
alpha-dis.lo: alpha-dis.c $(INCDIR)/ansidecl.h sysdep.h \
  config.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/opcode/alpha.h
alpha-opc.lo: alpha-opc.c $(INCDIR)/ansidecl.h $(INCDIR)/opcode/alpha.h \
  $(BFD_H) opintl.h
arc-dis.lo: arc-dis.c $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/opcode/arc.h $(BFDDIR)/elf-bfd.h \
d762 5
a766 1
  $(INCDIR)/bfdlink.h $(INCDIR)/elf/arc.h $(INCDIR)/elf/reloc-macros.h \
d768 16
a783 17
arc-opc.lo: arc-opc.c $(INCDIR)/ansidecl.h $(INCDIR)/opcode/arc.h \
  opintl.h
arm-dis.lo: arm-dis.c sysdep.h config.h $(INCDIR)/dis-asm.h \
  $(BFD_H) arm-opc.h $(INCDIR)/coff/internal.h $(BFDDIR)/libcoff.h \
  $(INCDIR)/bfdlink.h opintl.h $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h \
  $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h $(INCDIR)/elf/arm.h \
  $(INCDIR)/elf/reloc-macros.h
avr-dis.lo: avr-dis.c $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/ansidecl.h opintl.h
cgen-asm.lo: cgen-asm.c sysdep.h config.h $(INCDIR)/libiberty.h \
  $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen.h \
  opintl.h
cgen-dis.lo: cgen-dis.c sysdep.h config.h $(INCDIR)/libiberty.h \
  $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen.h
cgen-opc.lo: cgen-opc.c sysdep.h config.h $(INCDIR)/libiberty.h \
  $(BFD_H) $(INCDIR)/symcat.h $(INCDIR)/opcode/cgen.h
d10v-dis.lo: d10v-dis.c $(INCDIR)/ansidecl.h $(INCDIR)/opcode/d10v.h \
d785 2
a786 13
d10v-opc.lo: d10v-opc.c $(INCDIR)/ansidecl.h $(INCDIR)/opcode/d10v.h
d30v-dis.lo: d30v-dis.c $(INCDIR)/opcode/d30v.h $(INCDIR)/dis-asm.h \
  $(BFD_H) $(INCDIR)/ansidecl.h opintl.h
d30v-opc.lo: d30v-opc.c $(INCDIR)/ansidecl.h $(INCDIR)/opcode/d30v.h
dis-buf.lo: dis-buf.c sysdep.h config.h $(INCDIR)/dis-asm.h \
  $(BFD_H) opintl.h
disassemble.lo: disassemble.c $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H)
fr30-asm.lo: fr30-asm.c sysdep.h config.h $(BFD_H) \
  $(INCDIR)/symcat.h fr30-desc.h $(INCDIR)/opcode/cgen.h \
  fr30-opc.h opintl.h
fr30-desc.lo: fr30-desc.c sysdep.h config.h $(BFD_H) \
  $(INCDIR)/symcat.h fr30-desc.h $(INCDIR)/opcode/cgen.h \
d788 1
a788 1
fr30-dis.lo: fr30-dis.c sysdep.h config.h $(INCDIR)/dis-asm.h \
d791 7
a797 1
fr30-ibld.lo: fr30-ibld.c sysdep.h config.h $(INCDIR)/dis-asm.h \
a798 3
  fr30-opc.h opintl.h
fr30-opc.lo: fr30-opc.c sysdep.h config.h $(BFD_H) \
  $(INCDIR)/symcat.h fr30-desc.h $(INCDIR)/opcode/cgen.h \
d800 11
a810 9
h8300-dis.lo: h8300-dis.c $(INCDIR)/opcode/h8300.h \
  $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/ansidecl.h opintl.h
h8500-dis.lo: h8500-dis.c h8500-opc.h $(INCDIR)/dis-asm.h \
  $(BFD_H) $(INCDIR)/ansidecl.h opintl.h
hppa-dis.lo: hppa-dis.c sysdep.h config.h $(INCDIR)/dis-asm.h \
  $(BFD_H) $(BFDDIR)/libhppa.h $(INCDIR)/opcode/hppa.h
i370-dis.lo: i370-dis.c $(INCDIR)/ansidecl.h sysdep.h \
  config.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/opcode/i370.h
i370-opc.lo: i370-opc.c $(INCDIR)/ansidecl.h $(INCDIR)/opcode/i370.h
d813 4
a816 7
i960-dis.lo: i960-dis.c $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/ansidecl.h
m32r-asm.lo: m32r-asm.c sysdep.h config.h $(BFD_H) \
  $(INCDIR)/symcat.h m32r-desc.h $(INCDIR)/opcode/cgen.h \
  m32r-opc.h opintl.h
m32r-desc.lo: m32r-desc.c sysdep.h config.h $(BFD_H) \
  $(INCDIR)/symcat.h m32r-desc.h $(INCDIR)/opcode/cgen.h \
d818 1
a818 1
m32r-dis.lo: m32r-dis.c sysdep.h config.h $(INCDIR)/dis-asm.h \
d821 7
a827 1
m32r-ibld.lo: m32r-ibld.c sysdep.h config.h $(INCDIR)/dis-asm.h \
a828 3
  m32r-opc.h opintl.h
m32r-opc.lo: m32r-opc.c sysdep.h config.h $(BFD_H) \
  $(INCDIR)/symcat.h m32r-desc.h $(INCDIR)/opcode/cgen.h \
d830 2
a831 2
m32r-opinst.lo: m32r-opinst.c sysdep.h config.h $(BFD_H) \
  $(INCDIR)/symcat.h m32r-desc.h $(INCDIR)/opcode/cgen.h \
d833 4
a836 2
m68k-dis.lo: m68k-dis.c $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/floatformat.h opintl.h \
d838 24
a861 17
m68k-opc.lo: m68k-opc.c $(INCDIR)/ansidecl.h $(INCDIR)/opcode/m68k.h
m88k-dis.lo: m88k-dis.c $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/opcode/m88k.h opintl.h
mcore-dis.lo: mcore-dis.c mcore-opc.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/dis-asm.h $(BFD_H)
mips-dis.lo: mips-dis.c sysdep.h config.h $(INCDIR)/dis-asm.h \
  $(BFD_H) $(INCDIR)/opcode/mips.h opintl.h $(BFDDIR)/elf-bfd.h \
  $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h \
  $(INCDIR)/bfdlink.h $(INCDIR)/elf/mips.h $(INCDIR)/elf/reloc-macros.h
mips-opc.lo: mips-opc.c $(INCDIR)/ansidecl.h $(INCDIR)/opcode/mips.h
mips16-opc.lo: mips16-opc.c $(INCDIR)/ansidecl.h $(INCDIR)/opcode/mips.h
m10200-dis.lo: m10200-dis.c $(INCDIR)/ansidecl.h $(INCDIR)/opcode/mn10200.h \
  $(INCDIR)/dis-asm.h $(BFD_H) opintl.h
m10200-opc.lo: m10200-opc.c $(INCDIR)/ansidecl.h $(INCDIR)/opcode/mn10200.h
m10300-dis.lo: m10300-dis.c $(INCDIR)/ansidecl.h $(INCDIR)/opcode/mn10300.h \
  $(INCDIR)/dis-asm.h $(BFD_H) opintl.h
m10300-opc.lo: m10300-opc.c $(INCDIR)/ansidecl.h $(INCDIR)/opcode/mn10300.h
d865 33
a897 29
pj-dis.lo: pj-dis.c $(INCDIR)/opcode/pj.h $(INCDIR)/dis-asm.h \
  $(BFD_H) $(INCDIR)/ansidecl.h
pj-opc.lo: pj-opc.c $(INCDIR)/ansidecl.h $(INCDIR)/opcode/pj.h
ppc-dis.lo: ppc-dis.c $(INCDIR)/ansidecl.h sysdep.h \
  config.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/opcode/ppc.h
ppc-opc.lo: ppc-opc.c $(INCDIR)/ansidecl.h $(INCDIR)/opcode/ppc.h \
  opintl.h
sh-dis.lo: sh-dis.c sh-opc.h $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/ansidecl.h
sparc-dis.lo: sparc-dis.c $(INCDIR)/ansidecl.h sysdep.h \
  config.h $(INCDIR)/opcode/sparc.h $(INCDIR)/dis-asm.h \
  $(BFD_H) $(INCDIR)/libiberty.h opintl.h
sparc-opc.lo: sparc-opc.c $(INCDIR)/ansidecl.h $(INCDIR)/opcode/sparc.h
tic30-dis.lo: tic30-dis.c sysdep.h config.h $(INCDIR)/dis-asm.h \
  $(BFD_H) $(INCDIR)/opcode/tic30.h
tic80-dis.lo: tic80-dis.c $(INCDIR)/ansidecl.h $(INCDIR)/opcode/tic80.h \
  $(INCDIR)/dis-asm.h $(BFD_H)
tic80-opc.lo: tic80-opc.c $(INCDIR)/ansidecl.h $(INCDIR)/opcode/tic80.h
v850-dis.lo: v850-dis.c $(INCDIR)/ansidecl.h $(INCDIR)/opcode/v850.h \
  $(INCDIR)/dis-asm.h $(BFD_H) opintl.h
v850-opc.lo: v850-opc.c $(INCDIR)/ansidecl.h $(INCDIR)/opcode/v850.h \
  opintl.h
vax-dis.lo: vax-dis.c $(INCDIR)/opcode/vax.h $(INCDIR)/dis-asm.h \
  $(BFD_H) $(INCDIR)/ansidecl.h
w65-dis.lo: w65-dis.c w65-opc.h $(INCDIR)/dis-asm.h \
  $(BFD_H) $(INCDIR)/ansidecl.h
z8k-dis.lo: z8k-dis.c sysdep.h config.h $(INCDIR)/dis-asm.h \
  $(BFD_H) z8k-opc.h
z8kgen.lo: z8kgen.c sysdep.h config.h
@


1.11
log
@Use "gcc -MM" for dependencies, and update them.
@
text
@d1 1
a1 1
# Makefile.in generated automatically by automake 1.4a from Makefile.am
d3 1
a3 1
# Copyright (C) 1994, 1995-9, 2000 Free Software Foundation, Inc.
d13 1
d49 1
a49 1
INSTALL_PROGRAM = @@INSTALL_PROGRAM@@
a51 1
INSTALL_STRIP_FLAG =
a59 2

@@SET_MAKE@@
a105 1

d114 3
a283 1
subdir = .
a294 1
libopcodes_a_AR = $(AR) cru
d300 2
a301 2
am_libopcodes_la_OBJECTS =  dis-buf.lo disassemble.lo
libopcodes_la_OBJECTS =  $(am_libopcodes_la_OBJECTS)
a303 1
CFLAGS = @@CFLAGS@@
d305 3
a307 7
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@@
DIST_SOURCES =  libopcodes.a.c $(libopcodes_la_SOURCES)
depcomp = 
DIST_COMMON =  ../config.guess ../config.sub ../install-sh ../ltconfig \
../ltmain.sh ../missing ../mkinstalldirs ./stamp-h.in ChangeLog \
Makefile.am Makefile.in acinclude.m4 aclocal.m4 config.in configure \
configure.in
d310 1
a310 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
d312 1
d315 1
a315 1
OBJECTS = libopcodes.a.o $(am_libopcodes_la_OBJECTS)
d319 1
a319 1
.SUFFIXES: .c .lo .o
a337 2
	@@rm -f stamp-h stamp-hT
	@@echo timestamp > stamp-hT 2> /dev/null
d341 2
a342 2
	@@mv stamp-hT stamp-h
$(srcdir)/config.in: @@MAINTAINER_MODE_TRUE@@$(srcdir)/./stamp-h.in
d344 2
a345 2
		rm -f $(srcdir)/./stamp-h.in; \
		$(MAKE) $(srcdir)/./stamp-h.in; \
d347 1
a347 3
$(srcdir)/./stamp-h.in: $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	@@rm -f $(srcdir)/./stamp-h.in $(srcdir)/./stamp-h.inT
	@@echo timestamp > $(srcdir)/./stamp-h.inT 2> /dev/null
d349 1
a349 1
	@@mv $(srcdir)/./stamp-h.inT $(srcdir)/./stamp-h.in
d369 9
d388 9
d421 2
a422 2
	    echo " $(LIBTOOL)  --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$p"; \
	    $(LIBTOOL)  --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$p; \
d428 1
a428 2
	@@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  echo " $(LIBTOOL)  --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p"; \
a433 4
.c.o:
	$(COMPILE) -c $<
.c.lo:
	$(LTCOMPILE) -c -o $@@ $<
d442 2
d471 1
a471 1
	  if test "$$subdir" = "."; then dot_seen=yes; else :; fi; \
d492 4
a495 6
ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
d497 2
a498 1
	mkid -fID $$unique $(LISP)
d500 1
a500 2
TAGS: tags-recursive $(HEADERS) $(SOURCES) config.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
d508 3
a510 5
	list='$(SOURCES) $(HEADERS) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
d513 1
a513 1
	  || etags $(ETAGS_ARGS) $$tags config.in $$unique $(LISP)
a526 1

d531 2
a532 3
	-chmod -R a+w $(distdir) > /dev/null 2>&1; rm -rf $(distdir)
	GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(AMTAR) xf -
	chmod -R a-w $(distdir); chmod a+w $(distdir)
d535 2
a536 3
	chmod a-w $(distdir)
	dc_install_base=`CDPATH=: && cd $(distdir)/=inst && pwd` \
	  && cd $(distdir)/=build \
d543 2
a544 7
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && test `find $$dc_install_base -type f -print | wc -l` -le 1 \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && $(MAKE) $(AM_MAKEFLAGS) distclean \
	  && rm -f $(distdir).tar.gz \
	  && test `find . -type f -print | wc -l` -eq 0
	-chmod -R a+w $(distdir) > /dev/null 2>&1; rm -rf $(distdir)
d551 3
a553 7
	-find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(SHELL) $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r $(distdir)
	$(AMTAR) chof - $(distdir) | GZIP=$(GZIP_ENV) gzip -c > $(distdir).tar.gz
	-chmod -R a+w $(distdir) > /dev/null 2>&1; rm -rf $(distdir)
d555 3
a557 7
	-find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(SHELL) $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r $(distdir)
	$(AMTAR) chof - $(distdir) | GZIP=$(GZIP_ENV) gzip -c > $(distdir).tar.gz
	-chmod -R a+w $(distdir) > /dev/null 2>&1; rm -rf $(distdir)
d559 1
a559 1
	-chmod -R a+w $(distdir) > /dev/null 2>&1; rm -rf $(distdir)
d561 1
a561 1
	$(mkinstalldirs) $(distdir)/..
d565 1
a565 2
	    cp -pR $$d/$$file $(distdir) \
	    || exit 1; \
d568 2
a569 2
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
d577 1
d609 1
a609 1
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_STRIP_FLAG=-s install
a624 1
	-rm -f Makefile.in
d665 5
a669 5
install-libLTLIBRARIES install-recursive uninstall-recursive \
install-data-recursive uninstall-data-recursive install-exec-recursive \
uninstall-exec-recursive installdirs-recursive uninstalldirs-recursive \
all-recursive check-recursive installcheck-recursive info-recursive \
dvi-recursive mostlyclean-recursive distclean-recursive clean-recursive \
d675 3
a677 3
all-redirect all-am all install-strip installdirs-am installdirs \
mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean
@


1.10
log
@	* Makefile.am (CFILES): Add avr-dis.c.
	(ALL_MACHINES): Add avr-dis.lo.
@
text
@d1 1
a1 1
# Makefile.in generated automatically by automake 1.4 from Makefile.am
d3 1
a3 1
# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
a12 1

d48 1
a48 1
INSTALL_PROGRAM = @@INSTALL_PROGRAM@@ $(AM_INSTALL_PROGRAM_FLAGS)
d51 1
d60 2
d108 1
d115 1
a115 1
MKDEP = mkdep
d282 1
a282 1
	libopcodes.a stamp-lib dep.sed DEP DEP1
d284 1
d296 1
d302 2
a303 2
libopcodes_la_OBJECTS =  dis-buf.lo disassemble.lo
CFLAGS = @@CFLAGS@@
d306 1
d308 7
a314 3
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@@
DIST_COMMON =  ./stamp-h.in ChangeLog Makefile.am Makefile.in \
acinclude.m4 aclocal.m4 config.in configure configure.in
d317 1
a317 1
DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)
a318 1
TAR = gtar
d321 1
a321 1
OBJECTS = libopcodes.a.o $(libopcodes_la_OBJECTS)
d325 1
a325 1
.SUFFIXES: .S .c .lo .o .s
d344 2
d349 2
a350 2
	@@echo timestamp > stamp-h 2> /dev/null
$(srcdir)/config.in: @@MAINTAINER_MODE_TRUE@@$(srcdir)/stamp-h.in
d352 2
a353 2
		rm -f $(srcdir)/stamp-h.in; \
		$(MAKE) $(srcdir)/stamp-h.in; \
d355 3
a357 1
$(srcdir)/stamp-h.in: $(top_srcdir)/configure.in $(ACLOCAL_M4) 
d359 1
a359 1
	@@echo timestamp > $(srcdir)/stamp-h.in 2> /dev/null
a378 9
.c.o:
	$(COMPILE) -c $<

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

a388 9
.c.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

d413 2
a414 2
	    echo "$(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p"; \
	    $(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p; \
d420 2
a421 1
	list='$(lib_LTLIBRARIES)'; for p in $$list; do \
d427 4
a438 2
@@SET_MAKE@@

d466 1
a466 1
	  test "$$subdir" = "." && dot_seen=yes; \
d487 6
a492 4
ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
d494 1
a494 2
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)
d496 2
a497 1
TAGS: tags-recursive $(HEADERS) $(SOURCES) config.in $(TAGS_DEPENDENCIES) $(LISP)
d505 5
a509 3
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
d512 1
a512 1
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags config.in $$unique $(LISP) -o $$here/TAGS)
d526 1
d531 3
a533 2
	-rm -rf $(distdir)
	GZIP=$(GZIP_ENV) $(TAR) zxf $(distdir).tar.gz
d536 3
a538 2
	dc_install_base=`cd $(distdir)/=inst && pwd`; \
	cd $(distdir)/=build \
d545 7
a551 2
	  && $(MAKE) $(AM_MAKEFLAGS) dist
	-rm -rf $(distdir)
d558 7
a564 3
	-chmod -R a+r $(distdir)
	GZIP=$(GZIP_ENV) $(TAR) chozf $(distdir).tar.gz $(distdir)
	-rm -rf $(distdir)
d566 7
a572 3
	-chmod -R a+r $(distdir)
	GZIP=$(GZIP_ENV) $(TAR) chozf $(distdir).tar.gz $(distdir)
	-rm -rf $(distdir)
d574 1
a574 1
	-rm -rf $(distdir)
d576 1
a576 1
	-chmod 777 $(distdir)
d580 2
a581 1
	    cp -pr $$d/$$file $(distdir)/$$file; \
d584 2
a585 2
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
a592 1
	    chmod 777 $(distdir)/$$subdir; \
d624 1
a624 1
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
d640 1
d681 5
a685 5
install-libLTLIBRARIES install-data-recursive uninstall-data-recursive \
install-exec-recursive uninstall-exec-recursive installdirs-recursive \
uninstalldirs-recursive all-recursive check-recursive \
installcheck-recursive info-recursive dvi-recursive \
mostlyclean-recursive distclean-recursive clean-recursive \
d691 3
a693 3
all-redirect all-am all installdirs-am installdirs mostlyclean-generic \
distclean-generic clean-generic maintainer-clean-generic clean \
mostlyclean distclean maintainer-clean
d723 3
a725 2
	$(MAKE) MKDEP=$(MKDEP) DEP1
	sed -f dep.sed < DEP1 > DEP
a727 1
	rm -f DEP2 DEP2a
d729 3
a731 5
	echo > DEP2a
	$(MKDEP) -f DEP2a $(INCLUDES) $(CFLAGS) $?
	sed -e '/DO NOT DELETE/d' -e '/^$$/d' < DEP2a >> DEP2
	rm -f DEP2a
	$(srcdir)/../move-if-change DEP2 DEP1
d774 7
a780 5
arm-dis.lo: arm-dis.c $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/ansidecl.h arm-opc.h $(INCDIR)/coff/internal.h \
  $(BFDDIR)/libcoff.h $(INCDIR)/bfdlink.h opintl.h $(BFDDIR)/elf-bfd.h \
  $(INCDIR)/elf/common.h $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h \
  $(INCDIR)/elf/arm.h $(INCDIR)/elf/reloc-macros.h
d819 3
@


1.10.2.1
log
@This is a grab-bag of my stuff from the head branch.
Should have done it separately, I know.
- move bug report address to include file
- objcopy --redefine-sym
- update makefile dependencies (but use automake-000227)
- H.J. Lu's fix to readelf.c
@
text
@d112 1
a112 1
MKDEP = gcc -MM
d279 1
a279 1
	libopcodes.a stamp-lib dep.sed DEP DEP1 DEP2
d309 1
a309 1
TAR = tar
d704 2
a705 3
	$(MAKE) MKDEP="$(MKDEP)" DEP1
	sed -f dep.sed < DEP1 > $@@
	echo '# IF YOU PUT ANYTHING HERE IT WILL GO AWAY' >> $@@
d708 1
d710 5
a714 3
	echo '# DO NOT PUT ANYTHING AFTER THIS LINE, IT WILL GO AWAY.' >> DEP2
	$(MKDEP) $(INCLUDES) $(CFLAGS) $? >> DEP2
	mv -f DEP2 $@@
d757 5
a761 7
arm-dis.lo: arm-dis.c sysdep.h config.h $(INCDIR)/dis-asm.h \
  $(BFD_H) arm-opc.h $(INCDIR)/coff/internal.h $(BFDDIR)/libcoff.h \
  $(INCDIR)/bfdlink.h opintl.h $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h \
  $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h $(INCDIR)/elf/arm.h \
  $(INCDIR)/elf/reloc-macros.h
avr-dis.lo: avr-dis.c $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/ansidecl.h opintl.h
a799 3
i370-dis.lo: i370-dis.c $(INCDIR)/ansidecl.h sysdep.h \
  config.h $(INCDIR)/dis-asm.h $(BFD_H) $(INCDIR)/opcode/i370.h
i370-opc.lo: i370-opc.c $(INCDIR)/ansidecl.h $(INCDIR)/opcode/i370.h
@


1.9
log
@2000-02-27  Eli Zaretskii  <eliz@@is.elta.co.il>

	* Makefile.am (stamp-lib): Use $(LIBTOOL) --config to get the
	name of the libtool directory.
	* Makefile.in: Rebuild.
@
text
@d140 1
d205 1
@


1.8
log
@rebuild with current tools
@
text
@d679 3
a681 2
	if [ -f .libs/libopcodes.a ]; then \
	  cp .libs/libopcodes.a libopcodes.tmp; \
@


1.7
log
@Add IBM 370 support.
@
text
@a86 1
LD = @@LD@@
d93 1
a93 1
NM = @@NM@@
a99 1
USE_SYMBOL_UNDERSCORE = @@USE_SYMBOL_UNDERSCORE@@
@


1.6
log
@1999-09-04  Steve Chamberlain  <sac@@pobox.com>

	* pj-opc.c: New file.
	* pj-dis.c: New file.
	* disassemble.c	(disassembler): Handle bfd_arch_pj.
	* configure.in: Handle bfd_pj_arch.
	* Makefile.am: Rebuild dependencies.
	(CFILES): Add pj-dis.c and pj-opc.c.
	(ALL_MACHINES): Add pj-dis.lo and pj-opc.lo.
	* configure, Makefile.in: Rebuild.
@
text
@d159 2
d222 2
@


1.5
log
@rebuild with patched automake
@
text
@d179 2
d238 2
d840 3
@


1.4
log
@	* Makefile.am: Rename .dep* files to DEP*.  Change DEP variable to
	MKDEP.  Rebuild dependencies.
	* Makefile.in: Rebuild.
@
text
@d554 1
a554 1
	    cp -pr $$/$$file $(distdir)/$$file; \
@


1.3
log
@	* alpha-dis.c: Don't include <stdlib.h>.
	* arm-dis.c: Include "sysdep.h".
	* tic30-dis.c: Don't include <stdlib.h> or <string.h>.  Include
	"sysdep.h".
	* Makefile.am: Rebuild dependencies.
	* Makefile.in: Rebuild.
@
text
@d114 1
a114 1
DEP = mkdep
d271 1
a271 1
	libopcodes.a stamp-lib dep.sed .dep .dep1
d693 13
a705 13
.dep: dep.sed $(CFILES) $(HFILES) config.h
	rm -f .dep1
	$(MAKE) DEP=$(DEP) .dep1
	sed -f dep.sed < .dep1 > .dep

.dep1: $(CFILES)
	rm -f .dep2 .dep2a
	echo '# DO NOT DELETE THIS LINE -- mkdep uses it.' > .dep2
	echo > .dep2a
	$(DEP) -f .dep2a $(INCLUDES) $(CFLAGS) $?
	sed -e '/DO NOT DELETE/d' -e '/^$$/d' < .dep2a >> .dep2
	rm -f .dep2a
	$(srcdir)/../move-if-change .dep2 .dep1
d714 1
a714 1
dep: .dep
d716 1
a716 1
	cat .dep >> tmp-Makefile
d719 1
a719 1
dep-in: .dep
d721 1
a721 1
	cat .dep >> tmp-Makefile.in
d724 1
a724 1
dep-am: .dep
d726 1
a726 1
	cat .dep >> tmp-Makefile.am
d748 5
a752 5
arm-dis.lo: arm-dis.c sysdep.h config.h $(INCDIR)/dis-asm.h \
  $(BFD_H) arm-opc.h $(INCDIR)/coff/internal.h $(BFDDIR)/libcoff.h \
  $(INCDIR)/bfdlink.h opintl.h $(BFDDIR)/elf-bfd.h $(INCDIR)/elf/common.h \
  $(INCDIR)/elf/internal.h $(INCDIR)/elf/external.h $(INCDIR)/elf/arm.h \
  $(INCDIR)/elf/reloc-macros.h
@


1.2
log
@	* Makefile.am (CFILES): Add arc-{dis,opc}.c and v850-{dis,opc}.c.
	* Makefile.in: Regenerated.
@
text
@a105 2
cgen = @@cgen@@
cgendir = @@cgendir@@
a272 4



# The start marker is written this way to pass through automake unscathed.
d301 1
a301 1
TAR = tar
d689 1
a689 2


d741 2
a742 3
arm-dis.lo: arm-dis.c $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/ansidecl.h arm-opc.h $(INCDIR)/coff/internal.h \
  $(BFDDIR)/libcoff.h $(INCDIR)/bfdlink.h opintl.h $(BFDDIR)/elf-bfd.h \
d744 9
a752 1
  $(INCDIR)/elf/arm.h $(INCDIR)/elf/reloc-macros.h
d846 2
a847 2
tic30-dis.lo: tic30-dis.c $(INCDIR)/dis-asm.h $(BFD_H) \
  $(INCDIR)/ansidecl.h $(INCDIR)/opcode/tic30.h
d851 4
@


1.1
log
@Initial revision
@
text
@d141 2
d189 2
@


1.1.1.1
log
@19990502 sourceware import
@
text
@@

