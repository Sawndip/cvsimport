head	1.24;
access;
symbols
	sid-snapshot-20180601:1.24
	sid-snapshot-20180501:1.24
	sid-snapshot-20180401:1.24
	sid-snapshot-20180301:1.24
	sid-snapshot-20180201:1.24
	sid-snapshot-20180101:1.24
	sid-snapshot-20171201:1.24
	sid-snapshot-20171101:1.24
	sid-snapshot-20171001:1.24
	sid-snapshot-20170901:1.24
	sid-snapshot-20170801:1.24
	sid-snapshot-20170701:1.24
	sid-snapshot-20170601:1.24
	sid-snapshot-20170501:1.24
	sid-snapshot-20170401:1.24
	sid-snapshot-20170301:1.24
	sid-snapshot-20170201:1.24
	sid-snapshot-20170101:1.24
	sid-snapshot-20161201:1.24
	sid-snapshot-20161101:1.24
	sid-snapshot-20160901:1.24
	sid-snapshot-20160801:1.24
	sid-snapshot-20160701:1.24
	sid-snapshot-20160601:1.24
	sid-snapshot-20160501:1.24
	sid-snapshot-20160401:1.24
	sid-snapshot-20160301:1.24
	sid-snapshot-20160201:1.24
	sid-snapshot-20160101:1.24
	sid-snapshot-20151201:1.24
	sid-snapshot-20151101:1.24
	sid-snapshot-20151001:1.24
	sid-snapshot-20150901:1.24
	sid-snapshot-20150801:1.24
	sid-snapshot-20150701:1.24
	sid-snapshot-20150601:1.24
	sid-snapshot-20150501:1.24
	sid-snapshot-20150401:1.24
	sid-snapshot-20150301:1.24
	sid-snapshot-20150201:1.24
	sid-snapshot-20150101:1.24
	sid-snapshot-20141201:1.24
	sid-snapshot-20141101:1.24
	sid-snapshot-20141001:1.24
	sid-snapshot-20140901:1.24
	sid-snapshot-20140801:1.24
	sid-snapshot-20140701:1.24
	sid-snapshot-20140601:1.24
	sid-snapshot-20140501:1.24
	sid-snapshot-20140401:1.24
	sid-snapshot-20140301:1.24
	sid-snapshot-20140201:1.24
	sid-snapshot-20140101:1.24
	sid-snapshot-20131201:1.24
	sid-snapshot-20131101:1.24
	sid-snapshot-20131001:1.24
	binutils-2_24-branch:1.24.0.22
	binutils-2_24-branchpoint:1.24
	binutils-2_21_1:1.24
	sid-snapshot-20130901:1.24
	gdb_7_6_1-2013-08-30-release:1.24
	sid-snapshot-20130801:1.24
	sid-snapshot-20130701:1.24
	sid-snapshot-20130601:1.24
	sid-snapshot-20130501:1.24
	gdb_7_6-2013-04-26-release:1.24
	sid-snapshot-20130401:1.24
	binutils-2_23_2:1.24
	gdb_7_6-branch:1.24.0.20
	gdb_7_6-2013-03-12-branchpoint:1.24
	sid-snapshot-20130301:1.24
	sid-snapshot-20130201:1.24
	sid-snapshot-20130101:1.24
	sid-snapshot-20121201:1.24
	gdb_7_5_1-2012-11-29-release:1.24
	binutils-2_23_1:1.24
	sid-snapshot-20121101:1.24
	binutils-2_23:1.24
	sid-snapshot-20121001:1.24
	sid-snapshot-20120901:1.24
	gdb_7_5-2012-08-17-release:1.24
	sid-snapshot-20120801:1.24
	binutils-2_23-branch:1.24.0.18
	binutils-2_23-branchpoint:1.24
	gdb_7_5-branch:1.24.0.16
	gdb_7_5-2012-07-18-branchpoint:1.24
	sid-snapshot-20120701:1.24
	sid-snapshot-20120601:1.24
	sid-snapshot-20120501:1.24
	binutils-2_22_branch:1.24.0.14
	gdb_7_4_1-2012-04-26-release:1.24
	sid-snapshot-20120401:1.24
	sid-snapshot-20120301:1.24
	sid-snapshot-20120201:1.24
	gdb_7_4-2012-01-24-release:1.24
	sid-snapshot-20120101:1.24
	gdb_7_4-branch:1.24.0.12
	gdb_7_4-2011-12-13-branchpoint:1.24
	sid-snapshot-20111201:1.24
	binutils-2_22:1.24
	sid-snapshot-20111101:1.24
	sid-snapshot-20111001:1.24
	binutils-2_22-branch:1.24.0.10
	binutils-2_22-branchpoint:1.24
	gdb_7_3_1-2011-09-04-release:1.24
	sid-snapshot-20110901:1.24
	sid-snapshot-20110801:1.24
	gdb_7_3-2011-07-26-release:1.24
	sid-snapshot-20110701:1.24
	sid-snapshot-20110601:1.24
	sid-snapshot-20110501:1.24
	gdb_7_3-branch:1.24.0.8
	gdb_7_3-2011-04-01-branchpoint:1.24
	sid-snapshot-20110401:1.24
	sid-snapshot-20110301:1.24
	sid-snapshot-20110201:1.24
	sid-snapshot-20110101:1.24
	binutils-2_21:1.24
	sid-snapshot-20101201:1.24
	binutils-2_21-branch:1.24.0.6
	binutils-2_21-branchpoint:1.24
	sid-snapshot-20101101:1.24
	sid-snapshot-20101001:1.24
	binutils-2_20_1:1.23
	gdb_7_2-2010-09-02-release:1.24
	sid-snapshot-20100901:1.24
	sid-snapshot-20100801:1.24
	gdb_7_2-branch:1.24.0.4
	gdb_7_2-2010-07-07-branchpoint:1.24
	sid-snapshot-20100701:1.24
	sid-snapshot-20100601:1.24
	sid-snapshot-20100501:1.24
	sid-snapshot-20100401:1.24
	gdb_7_1-2010-03-18-release:1.24
	sid-snapshot-20100301:1.24
	gdb_7_1-branch:1.24.0.2
	gdb_7_1-2010-02-18-branchpoint:1.24
	sid-snapshot-20100201:1.24
	sid-snapshot-20100101:1.24
	gdb_7_0_1-2009-12-22-release:1.23
	sid-snapshot-20091201:1.23
	sid-snapshot-20091101:1.23
	binutils-2_20:1.23
	gdb_7_0-2009-10-06-release:1.23
	sid-snapshot-20091001:1.23
	gdb_7_0-branch:1.23.0.4
	gdb_7_0-2009-09-16-branchpoint:1.23
	arc-sim-20090309:1.22
	binutils-arc-20081103-branch:1.22.0.26
	binutils-arc-20081103-branchpoint:1.22
	binutils-2_20-branch:1.23.0.2
	binutils-2_20-branchpoint:1.23
	sid-snapshot-20090901:1.22
	sid-snapshot-20090801:1.22
	msnyder-checkpoint-072509-branch:1.22.0.24
	msnyder-checkpoint-072509-branchpoint:1.22
	sid-snapshot-20090701:1.22
	dje-cgen-play1-branch:1.22.0.22
	dje-cgen-play1-branchpoint:1.22
	sid-snapshot-20090601:1.22
	sid-snapshot-20090501:1.22
	sid-snapshot-20090401:1.22
	arc-20081103-branch:1.22.0.20
	arc-20081103-branchpoint:1.22
	arc-insight_6_8-branch:1.22.0.18
	arc-insight_6_8-branchpoint:1.22
	insight_6_8-branch:1.22.0.16
	insight_6_8-branchpoint:1.22
	sid-snapshot-20090301:1.22
	binutils-2_19_1:1.22
	sid-snapshot-20090201:1.22
	sid-snapshot-20090101:1.22
	reverse-20081226-branch:1.22.0.14
	reverse-20081226-branchpoint:1.22
	sid-snapshot-20081201:1.22
	multiprocess-20081120-branch:1.22.0.12
	multiprocess-20081120-branchpoint:1.22
	sid-snapshot-20081101:1.22
	binutils-2_19:1.22
	sid-snapshot-20081001:1.22
	reverse-20080930-branch:1.22.0.10
	reverse-20080930-branchpoint:1.22
	binutils-2_19-branch:1.22.0.8
	binutils-2_19-branchpoint:1.22
	sid-snapshot-20080901:1.22
	sid-snapshot-20080801:1.22
	reverse-20080717-branch:1.22.0.6
	reverse-20080717-branchpoint:1.22
	sid-snapshot-20080701:1.22
	msnyder-reverse-20080609-branch:1.22.0.4
	msnyder-reverse-20080609-branchpoint:1.22
	drow-reverse-20070409-branch:1.20.0.32
	drow-reverse-20070409-branchpoint:1.20
	sid-snapshot-20080601:1.22
	sid-snapshot-20080501:1.22
	sid-snapshot-20080403:1.22
	sid-snapshot-20080401:1.22
	gdb_6_8-2008-03-27-release:1.22
	sid-snapshot-20080301:1.22
	gdb_6_8-branch:1.22.0.2
	gdb_6_8-2008-02-26-branchpoint:1.22
	sid-snapshot-20080201:1.22
	sid-snapshot-20080101:1.22
	sid-snapshot-20071201:1.22
	sid-snapshot-20071101:1.22
	gdb_6_7_1-2007-10-29-release:1.21
	gdb_6_7-2007-10-10-release:1.21
	sid-snapshot-20071001:1.21
	gdb_6_7-branch:1.21.0.4
	gdb_6_7-2007-09-07-branchpoint:1.21
	binutils-2_18:1.21
	binutils-2_18-branch:1.21.0.2
	binutils-2_18-branchpoint:1.21
	insight_6_6-20070208-release:1.20
	binutils-csl-coldfire-4_1-32:1.20
	binutils-csl-sourcerygxx-4_1-32:1.20
	gdb_6_6-2006-12-18-release:1.20
	binutils-csl-innovasic-fido-3_4_4-33:1.20
	binutils-csl-sourcerygxx-3_4_4-32:1.18
	binutils-csl-coldfire-4_1-30:1.20
	binutils-csl-sourcerygxx-4_1-30:1.20
	binutils-csl-coldfire-4_1-28:1.20
	binutils-csl-sourcerygxx-4_1-29:1.20
	binutils-csl-sourcerygxx-4_1-28:1.20
	gdb_6_6-branch:1.20.0.30
	gdb_6_6-2006-11-15-branchpoint:1.20
	binutils-csl-arm-2006q3-27:1.20
	binutils-csl-sourcerygxx-4_1-27:1.20
	binutils-csl-arm-2006q3-26:1.20
	binutils-csl-sourcerygxx-4_1-26:1.20
	binutils-csl-sourcerygxx-4_1-25:1.20
	binutils-csl-sourcerygxx-4_1-24:1.20
	binutils-csl-sourcerygxx-4_1-23:1.20
	insight_6_5-20061003-release:1.20
	gdb-csl-symbian-6_4_50_20060226-12:1.20
	binutils-csl-sourcerygxx-4_1-21:1.20
	binutils-csl-arm-2006q3-21:1.20
	binutils-csl-sourcerygxx-4_1-22:1.20
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.20
	binutils-csl-sourcerygxx-4_1-20:1.20
	binutils-csl-arm-2006q3-19:1.20
	binutils-csl-sourcerygxx-4_1-19:1.20
	binutils-csl-sourcerygxx-4_1-18:1.20
	binutils-csl-renesas-4_1-9:1.20
	gdb-csl-sourcerygxx-3_4_4-25:1.20
	binutils-csl-sourcerygxx-3_4_4-25:1.18
	nickrob-async-20060828-mergepoint:1.20
	gdb-csl-symbian-6_4_50_20060226-11:1.20
	binutils-csl-renesas-4_1-8:1.20
	binutils-csl-renesas-4_1-7:1.20
	binutils-csl-renesas-4_1-6:1.20
	gdb-csl-sourcerygxx-4_1-17:1.20
	binutils-csl-sourcerygxx-4_1-17:1.20
	gdb-csl-20060226-branch-local-2:1.20
	gdb-csl-sourcerygxx-4_1-14:1.20
	binutils-csl-sourcerygxx-4_1-14:1.20
	binutils-csl-sourcerygxx-4_1-15:1.20
	gdb-csl-sourcerygxx-4_1-13:1.20
	binutils-csl-sourcerygxx-4_1-13:1.20
	binutils-2_17:1.20
	gdb-csl-sourcerygxx-4_1-12:1.20
	binutils-csl-sourcerygxx-4_1-12:1.20
	gdb-csl-sourcerygxx-3_4_4-21:1.20
	binutils-csl-sourcerygxx-3_4_4-21:1.20
	gdb_6_5-20060621-release:1.20
	binutils-csl-wrs-linux-3_4_4-24:1.18
	binutils-csl-wrs-linux-3_4_4-23:1.18
	gdb-csl-sourcerygxx-4_1-9:1.20
	binutils-csl-sourcerygxx-4_1-9:1.20
	gdb-csl-sourcerygxx-4_1-8:1.20
	binutils-csl-sourcerygxx-4_1-8:1.20
	gdb-csl-sourcerygxx-4_1-7:1.20
	binutils-csl-sourcerygxx-4_1-7:1.20
	gdb-csl-arm-2006q1-6:1.20
	binutils-csl-arm-2006q1-6:1.20
	gdb-csl-sourcerygxx-4_1-6:1.20
	binutils-csl-sourcerygxx-4_1-6:1.20
	binutils-csl-wrs-linux-3_4_4-22:1.18
	gdb-csl-symbian-6_4_50_20060226-10:1.20
	gdb-csl-symbian-6_4_50_20060226-9:1.20
	gdb-csl-symbian-6_4_50_20060226-8:1.20
	gdb-csl-coldfire-4_1-11:1.20
	binutils-csl-coldfire-4_1-11:1.20
	gdb-csl-sourcerygxx-3_4_4-19:1.20
	binutils-csl-sourcerygxx-3_4_4-19:1.20
	gdb-csl-coldfire-4_1-10:1.20
	gdb_6_5-branch:1.20.0.28
	gdb_6_5-2006-05-14-branchpoint:1.20
	binutils-csl-coldfire-4_1-10:1.20
	gdb-csl-sourcerygxx-4_1-5:1.20
	binutils-csl-sourcerygxx-4_1-5:1.20
	nickrob-async-20060513-branch:1.20.0.26
	nickrob-async-20060513-branchpoint:1.20
	gdb-csl-sourcerygxx-4_1-4:1.20
	binutils-csl-sourcerygxx-4_1-4:1.20
	msnyder-reverse-20060502-branch:1.20.0.24
	msnyder-reverse-20060502-branchpoint:1.20
	binutils-csl-wrs-linux-3_4_4-21:1.18
	gdb-csl-morpho-4_1-4:1.20
	binutils-csl-morpho-4_1-4:1.20
	gdb-csl-sourcerygxx-3_4_4-17:1.20
	binutils-csl-sourcerygxx-3_4_4-17:1.20
	binutils-csl-wrs-linux-3_4_4-20:1.18
	readline_5_1-import-branch:1.20.0.22
	readline_5_1-import-branchpoint:1.20
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.20
	binutils-2_17-branch:1.20.0.20
	binutils-2_17-branchpoint:1.20
	gdb-csl-symbian-20060226-branch:1.20.0.18
	gdb-csl-symbian-20060226-branchpoint:1.20
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.20
	msnyder-reverse-20060331-branch:1.20.0.16
	msnyder-reverse-20060331-branchpoint:1.20
	binutils-csl-2_17-branch:1.20.0.14
	binutils-csl-2_17-branchpoint:1.20
	gdb-csl-available-20060303-branch:1.20.0.12
	gdb-csl-available-20060303-branchpoint:1.20
	gdb-csl-20060226-branch:1.20.0.10
	gdb-csl-20060226-branchpoint:1.20
	gdb_6_4-20051202-release:1.20
	msnyder-fork-checkpoint-branch:1.20.0.8
	msnyder-fork-checkpoint-branchpoint:1.20
	gdb-csl-gxxpro-6_3-branch:1.20.0.6
	gdb-csl-gxxpro-6_3-branchpoint:1.20
	gdb_6_4-branch:1.20.0.4
	gdb_6_4-2005-11-01-branchpoint:1.20
	gdb-csl-arm-20051020-branch:1.20.0.2
	gdb-csl-arm-20051020-branchpoint:1.20
	binutils-csl-gxxpro-3_4-branch:1.18.0.8
	binutils-csl-gxxpro-3_4-branchpoint:1.18
	binutils-2_16_1:1.18
	msnyder-tracepoint-checkpoint-branch:1.19.0.2
	msnyder-tracepoint-checkpoint-branchpoint:1.19
	gdb-csl-arm-20050325-2005-q1b:1.18
	binutils-csl-arm-2005q1b:1.18
	binutils-2_16:1.18
	gdb-csl-arm-20050325-2005-q1a:1.18
	binutils-csl-arm-2005q1a:1.18
	csl-arm-20050325-branch:1.18.0.6
	csl-arm-20050325-branchpoint:1.18
	binutils-csl-arm-2005q1-branch:1.18.0.4
	binutils-csl-arm-2005q1-branchpoint:1.18
	binutils-2_16-branch:1.18.0.2
	binutils-2_16-branchpoint:1.18
	csl-arm-2004-q3d:1.17
	gdb_6_3-20041109-release:1.17
	gdb_6_3-branch:1.17.0.60
	gdb_6_3-20041019-branchpoint:1.17
	csl-arm-2004-q3:1.17
	drow_intercu-merge-20040921:1.17
	drow_intercu-merge-20040915:1.17
	jimb-gdb_6_2-e500-branch:1.17.0.62
	jimb-gdb_6_2-e500-branchpoint:1.17
	gdb_6_2-20040730-release:1.17
	gdb_6_2-branch:1.17.0.58
	gdb_6_2-2004-07-10-gmt-branchpoint:1.17
	gdb_6_1_1-20040616-release:1.17
	binutils-2_15:1.17
	binutils-2_15-branchpoint:1.17
	csl-arm-2004-q1a:1.17
	csl-arm-2004-q1:1.17
	gdb_6_1-2004-04-05-release:1.17
	drow_intercu-merge-20040402:1.17
	drow_intercu-merge-20040327:1.17
	ezannoni_pie-20040323-branch:1.17.0.56
	ezannoni_pie-20040323-branchpoint:1.17
	cagney_tramp-20040321-mergepoint:1.17
	cagney_tramp-20040309-branch:1.17.0.54
	cagney_tramp-20040309-branchpoint:1.17
	gdb_6_1-branch:1.17.0.52
	gdb_6_1-2004-03-01-gmt-branchpoint:1.17
	drow_intercu-20040221-branch:1.17.0.50
	drow_intercu-20040221-branchpoint:1.17
	binutils-2_15-branch:1.17.0.48
	cagney_bfdfile-20040213-branch:1.17.0.46
	cagney_bfdfile-20040213-branchpoint:1.17
	drow-cplus-merge-20040208:1.17
	carlton_dictionary-20040126-merge:1.17
	cagney_bigcore-20040122-branch:1.17.0.44
	cagney_bigcore-20040122-branchpoint:1.17
	drow-cplus-merge-20040113:1.17
	csl-arm-2003-q4:1.17
	drow-cplus-merge-20031224:1.17
	drow-cplus-merge-20031220:1.17
	carlton_dictionary-20031215-merge:1.17
	drow-cplus-merge-20031214:1.17
	carlton-dictionary-20031111-merge:1.17
	gdb_6_0-2003-10-04-release:1.17
	kettenis_sparc-20030918-branch:1.17.0.42
	kettenis_sparc-20030918-branchpoint:1.17
	carlton_dictionary-20030917-merge:1.17
	ezannoni_pie-20030916-branchpoint:1.17
	ezannoni_pie-20030916-branch:1.17.0.40
	cagney_x86i386-20030821-branch:1.17.0.38
	cagney_x86i386-20030821-branchpoint:1.17
	carlton_dictionary-20030805-merge:1.17
	carlton_dictionary-20030627-merge:1.17
	gdb_6_0-branch:1.17.0.36
	gdb_6_0-2003-06-23-branchpoint:1.17
	jimb-ppc64-linux-20030613-branch:1.17.0.34
	jimb-ppc64-linux-20030613-branchpoint:1.17
	binutils-2_14:1.17
	cagney_convert-20030606-branch:1.17.0.32
	cagney_convert-20030606-branchpoint:1.17
	cagney_writestrings-20030508-branch:1.17.0.30
	cagney_writestrings-20030508-branchpoint:1.17
	jimb-ppc64-linux-20030528-branch:1.17.0.28
	jimb-ppc64-linux-20030528-branchpoint:1.17
	carlton_dictionary-20030523-merge:1.17
	cagney_fileio-20030521-branch:1.17.0.26
	cagney_fileio-20030521-branchpoint:1.17
	kettenis_i386newframe-20030517-mergepoint:1.17
	jimb-ppc64-linux-20030509-branch:1.17.0.24
	jimb-ppc64-linux-20030509-branchpoint:1.17
	kettenis_i386newframe-20030504-mergepoint:1.17
	carlton_dictionary-20030430-merge:1.17
	binutils-2_14-branch:1.17.0.22
	binutils-2_14-branchpoint:1.17
	kettenis_i386newframe-20030419-branch:1.17.0.20
	kettenis_i386newframe-20030419-branchpoint:1.17
	carlton_dictionary-20030416-merge:1.17
	cagney_frameaddr-20030409-mergepoint:1.17
	kettenis_i386newframe-20030406-branch:1.17.0.18
	kettenis_i386newframe-20030406-branchpoint:1.17
	cagney_frameaddr-20030403-branchpoint:1.17
	cagney_frameaddr-20030403-branch:1.17.0.16
	cagney_framebase-20030330-mergepoint:1.17
	cagney_framebase-20030326-branch:1.17.0.14
	cagney_framebase-20030326-branchpoint:1.17
	cagney_lazyid-20030317-branch:1.17.0.12
	cagney_lazyid-20030317-branchpoint:1.17
	kettenis-i386newframe-20030316-mergepoint:1.17
	offbyone-20030313-branch:1.17.0.10
	offbyone-20030313-branchpoint:1.17
	kettenis-i386newframe-20030308-branch:1.17.0.8
	kettenis-i386newframe-20030308-branchpoint:1.17
	carlton_dictionary-20030305-merge:1.17
	cagney_offbyone-20030303-branch:1.17.0.6
	cagney_offbyone-20030303-branchpoint:1.17
	carlton_dictionary-20030207-merge:1.17
	interps-20030202-branch:1.17.0.4
	interps-20030202-branchpoint:1.17
	cagney-unwind-20030108-branch:1.17.0.2
	cagney-unwind-20030108-branchpoint:1.17
	binutils-2_13_2_1:1.16
	binutils-2_13_2:1.16
	carlton_dictionary-20021223-merge:1.17
	gdb_5_3-2002-12-12-release:1.16
	carlton_dictionary-20021115-merge:1.16
	binutils-2_13_1:1.16
	kseitz_interps-20021105-merge:1.16
	kseitz_interps-20021103-merge:1.16
	drow-cplus-merge-20021020:1.16
	drow-cplus-merge-20021025:1.16
	carlton_dictionary-20021025-merge:1.16
	carlton_dictionary-20021011-merge:1.16
	drow-cplus-branch:1.16.0.24
	drow-cplus-branchpoint:1.16
	kseitz_interps-20020930-merge:1.16
	carlton_dictionary-20020927-merge:1.16
	carlton_dictionary-branch:1.16.0.22
	carlton_dictionary-20020920-branchpoint:1.16
	sid-20020905-branchpoint:1.16
	sid-20020905-branch:1.16.0.20
	gdb_5_3-branch:1.16.0.18
	gdb_5_3-2002-09-04-branchpoint:1.16
	kseitz_interps-20020829-merge:1.16
	cagney_sysregs-20020825-branch:1.16.0.16
	cagney_sysregs-20020825-branchpoint:1.16
	readline_4_3-import-branch:1.16.0.14
	readline_4_3-import-branchpoint:1.16
	binutils-2_13:1.16
	gdb_5_2_1-2002-07-23-release:1.16
	binutils-2_13-branchpoint:1.16
	binutils-2_13-branch:1.16.0.12
	kseitz_interps-20020528-branch:1.16.0.10
	kseitz_interps-20020528-branchpoint:1.16
	cagney_regbuf-20020515-branch:1.16.0.8
	cagney_regbuf-20020515-branchpoint:1.16
	binutils-2_12_1:1.16
	jimb-macro-020506-branch:1.16.0.6
	jimb-macro-020506-branchpoint:1.16
	gdb_5_2-2002-04-29-release:1.16
	binutils-2_12:1.16
	gdb_5_2-branch:1.16.0.4
	gdb_5_2-2002-03-03-branchpoint:1.16
	binutils-2_12-branch:1.16.0.2
	binutils-2_12-branchpoint:1.16
	gdb_5_1_1-2002-01-24-release:1.15
	gdb_5_1_0_1-2002-01-03-release:1.15
	cygnus_cvs_20020108_pre:1.16
	gdb_5_1_0_1-2002-01-03-branch:1.15.0.6
	gdb_5_1_0_1-2002-01-03-branchpoint:1.15
	gdb_5_1-2001-11-21-release:1.15
	gdb_s390-2001-09-26-branch:1.15.0.4
	gdb_s390-2001-09-26-branchpoint:1.15
	gdb_5_1-2001-07-29-branch:1.15.0.2
	gdb_5_1-2001-07-29-branchpoint:1.15
	binutils-2_11_2:1.14.2.1
	binutils-2_11_1:1.14.2.1
	binutils-2_11:1.14
	x86_64versiong3:1.14
	binutils-2_11-branch:1.14.0.2
	insight-precleanup-2001-01-01:1.14
	binutils-2_10_1:1.11.2.1
	binutils-2_10:1.11.2.1
	gdb-premipsmulti-2000-06-06-branch:1.13.0.2
	gdb-premipsmulti-2000-06-06-branchpoint:1.13
	gdb_5_0-2000-05-19-release:1.11
	gdb_4_18_2-2000-05-18-release:1.11
	gdb_4_95_1-2000-05-11-snapshot:1.11
	gdb_4_95_0-2000-04-27-snapshot:1.11
	gdb_5_0-2000-04-10-branch:1.11.0.4
	gdb_5_0-2000-04-10-branchpoint:1.11
	binutils-2_10-branch:1.11.0.2
	binutils-2_10-branchpoint:1.11
	binutils_latest_snapshot:1.24
	repo-unification-2000-02-06:1.10
	binu_ss_19990721:1.4
	binu_ss_19990602:1.4
	binu_ss_19990502:1.1.1.1
	cygnus:1.1.1;
locks; strict;
comment	@ * @;


1.24
date	2009.12.11.13.42.17;	author nickc;	state Exp;
branches;
next	1.23;

1.23
date	2009.09.02.07.20.30;	author amodra;	state Exp;
branches;
next	1.22;

1.22
date	2007.10.15.02.01.40;	author amodra;	state Exp;
branches;
next	1.21;

1.21
date	2007.07.05.09.49.02;	author nickc;	state Exp;
branches;
next	1.20;

1.20
date	2005.07.07.19.27.51;	author wilson;	state Exp;
branches;
next	1.19;

1.19
date	2005.05.07.07.34.30;	author nickc;	state Exp;
branches;
next	1.18;

1.18
date	2005.03.03.11.49.50;	author amodra;	state Exp;
branches;
next	1.17;

1.17
date	2002.12.02.13.13.37;	author amodra;	state Exp;
branches;
next	1.16;

1.16
date	2001.08.13.08.09.58;	author kazu;	state Exp;
branches
	1.16.22.1
	1.16.24.1;
next	1.15;

1.15
date	2001.03.13.22.58.36;	author nickc;	state Exp;
branches;
next	1.14;

1.14
date	2000.10.16.18.18.47;	author nickc;	state Exp;
branches
	1.14.2.1;
next	1.13;

1.13
date	2000.05.30.18.35.33;	author nickc;	state Exp;
branches;
next	1.12;

1.12
date	2000.04.14.04.16.58;	author amodra;	state Exp;
branches;
next	1.11;

1.11
date	2000.02.10.21.41.11;	author nickc;	state Exp;
branches
	1.11.2.1;
next	1.10;

1.10
date	2000.01.20.19.08.43;	author nickc;	state Exp;
branches;
next	1.9;

1.9
date	99.10.28.09.05.01;	author nickc;	state Exp;
branches;
next	1.8;

1.8
date	99.10.25.16.29.40;	author nickc;	state Exp;
branches;
next	1.7;

1.7
date	99.10.25.15.28.44;	author nickc;	state Exp;
branches;
next	1.6;

1.6
date	99.08.31.15.11.20;	author ian;	state Exp;
branches;
next	1.5;

1.5
date	99.08.11.08.57.44;	author nickc;	state Exp;
branches;
next	1.4;

1.4
date	99.05.07.09.14.56;	author nickc;	state Exp;
branches;
next	1.3;

1.3
date	99.05.07.07.57.24;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	99.05.06.07.07.54;	author nickc;	state dead;
branches;
next	1.1;

1.1
date	99.05.03.07.28.59;	author rth;	state Exp;
branches
	1.1.1.1;
next	;

1.16.22.1
date	2002.12.23.19.39.36;	author carlton;	state Exp;
branches;
next	;

1.16.24.1
date	2003.12.14.20.28.07;	author drow;	state Exp;
branches;
next	;

1.14.2.1
date	2001.06.07.03.18.35;	author amodra;	state Exp;
branches;
next	;

1.11.2.1
date	2000.05.06.14.49.26;	author pb;	state Exp;
branches;
next	;

1.1.1.1
date	99.05.03.07.28.59;	author rth;	state Exp;
branches;
next	;


desc
@@


1.24
log
@Add -Wshadow to the gcc command line options used when compiling the binutils.
Fix up all warnings generated by the addition of this switch.
@
text
@/* Disassemble Motorola M*Core instructions.
   Copyright 1993, 1999, 2000, 2001, 2002, 2005, 2007, 2009
   Free Software Foundation, Inc.

   This file is part of the GNU opcodes library.

   This library is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3, or (at your option)
   any later version.

   It is distributed in the hope that it will be useful, but WITHOUT
   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
   License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
   MA 02110-1301, USA.  */

#include "sysdep.h"
#include <stdio.h>
#define STATIC_TABLE
#define DEFINE_TABLE

#include "mcore-opc.h"
#include "dis-asm.h"

/* Mask for each mcore_opclass: */
static const unsigned short imsk[] = {
    /* O0  */ 0xFFFF,
    /* OT  */ 0xFFFC,
    /* O1  */ 0xFFF0,
    /* OC  */ 0xFE00,
    /* O2  */ 0xFF00,
    /* X1  */ 0xFFF0,
    /* OI  */ 0xFE00,
    /* OB  */ 0xFE00,

    /* OMa */ 0xFFF0,
    /* SI  */ 0xFE00,
    /* I7  */ 0xF800,
    /* LS  */ 0xF000,
    /* BR  */ 0xF800,
    /* BL  */ 0xFF00,
    /* LR  */ 0xF000,
    /* LJ  */ 0xFF00,

    /* RM  */ 0xFFF0,
    /* RQ  */ 0xFFF0,
    /* JSR */ 0xFFF0,
    /* JMP */ 0xFFF0,
    /* OBRa*/ 0xFFF0,
    /* OBRb*/ 0xFF80,
    /* OBRc*/ 0xFF00,
    /* OBR2*/ 0xFE00,

    /* O1R1*/ 0xFFF0,
    /* OMb */ 0xFF80,
    /* OMc */ 0xFF00,
    /* SIa */ 0xFE00,

  /* MULSH */ 0xFF00,
  /* OPSR  */ 0xFFF8,   /* psrset/psrclr */

    /* JC  */ 0,		/* JC,JU,JL don't appear in object */
    /* JU  */ 0,
    /* JL  */ 0,
    /* RSI */ 0,
    /* DO21*/ 0,
    /* OB2 */ 0 		/* OB2 won't appear in object.  */
};

static const char *grname[] = {
 "r0",  "r1",  "r2",  "r3",  "r4",  "r5",  "r6",  "r7",
 "r8",  "r9", "r10", "r11", "r12", "r13", "r14", "r15"
};

static const char X[] = "??";

static const char *crname[] = {
  "psr",  "vbr", "epsr", "fpsr", "epc",  "fpc",  "ss0",  "ss1",
  "ss2",  "ss3", "ss4",  "gcr",  "gsr",     X,      X,      X,
     X,      X,      X,      X,      X,     X,      X,      X,
     X,      X,      X,      X,      X,     X,      X,      X
};

static const unsigned isiz[] = { 2, 0, 1, 0 };

int
print_insn_mcore (memaddr, info)
     bfd_vma memaddr;
     struct disassemble_info *info;
{
  unsigned char ibytes[4];
  fprintf_ftype print_func = info->fprintf_func;
  void *stream = info->stream;
  unsigned short inst;
  const mcore_opcode_info *op;
  int status;

  info->bytes_per_chunk = 2;

  status = info->read_memory_func (memaddr, ibytes, 2, info);

  if (status != 0)
    {
      info->memory_error_func (status, memaddr, info);
      return -1;
    }

  if (info->endian == BFD_ENDIAN_BIG)
    inst = (ibytes[0] << 8) | ibytes[1];
  else if (info->endian == BFD_ENDIAN_LITTLE)
    inst = (ibytes[1] << 8) | ibytes[0];
  else
    abort ();

  /* Just a linear search of the table.  */
  for (op = mcore_table; op->name != 0; op++)
    if (op->inst == (inst & imsk[op->opclass]))
      break;

  if (op->name == 0)
    (*print_func) (stream, ".short 0x%04x", inst);
  else
    {
      const char *name = grname[inst & 0x0F];

      (*print_func) (stream, "%s", op->name);

      switch (op->opclass)
	{
	case O0:
	  break;

	case OT:
	  (*print_func) (stream, "\t%d", inst & 0x3);
	  break;

	case O1:
	case JMP:
	case JSR:
	  (*print_func) (stream, "\t%s", name);
	  break;

	case OC:
	  (*print_func) (stream, "\t%s, %s", name, crname[(inst >> 4) & 0x1F]);
	  break;

	case O1R1:
	  (*print_func) (stream, "\t%s, r1", name);
	  break;

	case MULSH:
	case O2:
	  (*print_func) (stream, "\t%s, %s", name, grname[(inst >> 4) & 0xF]);
	  break;

	case X1:
	  (*print_func) (stream, "\tr1, %s", name);
	  break;

	case OI:
	  (*print_func) (stream, "\t%s, %d", name, ((inst >> 4) & 0x1F) + 1);
	  break;

	case RM:
	  (*print_func) (stream, "\t%s-r15, (r0)", name);
	  break;

	case RQ:
	  (*print_func) (stream, "\tr4-r7, (%s)", name);
	  break;

	case OB:
	case OBRa:
	case OBRb:
	case OBRc:
	case SI:
	case SIa:
	case OMa:
	case OMb:
	case OMc:
	  (*print_func) (stream, "\t%s, %d", name, (inst >> 4) & 0x1F);
	  break;

	case I7:
	  (*print_func) (stream, "\t%s, %d", name, (inst >> 4) & 0x7F);
	  break;

	case LS:
	  (*print_func) (stream, "\t%s, (%s, %d)", grname[(inst >> 8) & 0xF],
			 name, ((inst >> 4) & 0xF) << isiz[(inst >> 13) & 3]);
	  break;

	case BR:
	  {
	    long val = inst & 0x3FF;

	    if (inst & 0x400)
	      val |= 0xFFFFFC00;

	    (*print_func) (stream, "\t0x%lx", (long)(memaddr + 2 + (val << 1)));

	    if (strcmp (op->name, "bsr") == 0)
	      {
		/* For bsr, we'll try to get a symbol for the target.  */
		val = memaddr + 2 + (val << 1);

		if (info->print_address_func && val != 0)
		  {
		    (*print_func) (stream, "\t// ");
		    info->print_address_func (val, info);
		  }
	      }
	  }
	  break;

	case BL:
	  {
	    long val;
	    val = (inst & 0x000F);
	    (*print_func) (stream, "\t%s, 0x%lx",
			   grname[(inst >> 4) & 0xF],
			   (long) (memaddr - (val << 1)));
	  }
	  break;

	case LR:
	  {
	    unsigned long val;

	    val = (memaddr + 2 + ((inst & 0xFF) << 2)) & 0xFFFFFFFC;

	    status = info->read_memory_func (val, ibytes, 4, info);
	    if (status != 0)
	      {
		info->memory_error_func (status, memaddr, info);
		break;
	      }

	    if (info->endian == BFD_ENDIAN_LITTLE)
	      val = (ibytes[3] << 24) | (ibytes[2] << 16)
		| (ibytes[1] << 8) | (ibytes[0]);
	    else
	      val = (ibytes[0] << 24) | (ibytes[1] << 16)
		| (ibytes[2] << 8) | (ibytes[3]);

	    /* Removed [] around literal value to match ABI syntax 12/95.  */
	    (*print_func) (stream, "\t%s, 0x%lX", grname[(inst >> 8) & 0xF], val);

	    if (val == 0)
	      (*print_func) (stream, "\t// from address pool at 0x%lx",
			     (long) (memaddr + 2
				     + ((inst & 0xFF) << 2)) & 0xFFFFFFFC);
	  }
	  break;

	case LJ:
	  {
	    unsigned long val;

	    val = (memaddr + 2 + ((inst & 0xFF) << 2)) & 0xFFFFFFFC;

	    status = info->read_memory_func (val, ibytes, 4, info);
	    if (status != 0)
	      {
		info->memory_error_func (status, memaddr, info);
		break;
	      }

	    if (info->endian == BFD_ENDIAN_LITTLE)
	      val = (ibytes[3] << 24) | (ibytes[2] << 16)
		| (ibytes[1] << 8) | (ibytes[0]);
	    else
	      val = (ibytes[0] << 24) | (ibytes[1] << 16)
		| (ibytes[2] << 8) | (ibytes[3]);

	    /* Removed [] around literal value to match ABI syntax 12/95.  */
	    (*print_func) (stream, "\t0x%lX", val);
	    /* For jmpi/jsri, we'll try to get a symbol for the target.  */
	    if (info->print_address_func && val != 0)
	      {
		(*print_func) (stream, "\t// ");
		info->print_address_func (val, info);
	      }
	    else
	      {
		(*print_func) (stream, "\t// from address pool at 0x%lx",
			       (long) (memaddr + 2
				       + ((inst & 0xFF) << 2)) & 0xFFFFFFFC);
	      }
	  }
	  break;

	case OPSR:
	  {
	    static char *fields[] = {
	      "af", "ie",    "fe",    "fe,ie",
	      "ee", "ee,ie", "ee,fe", "ee,fe,ie"
	    };

	    (*print_func) (stream, "\t%s", fields[inst & 0x7]);
	  }
	  break;

	default:
	  /* If the disassembler lags the instruction set.  */
	  (*print_func) (stream, "\tundecoded operands, inst is 0x%04x", inst);
	  break;
	}
    }

  /* Say how many bytes we consumed.  */
  return 2;
}
@


1.23
log
@update copyright dates
@
text
@d2 1
a2 1
   Copyright 1993, 1999, 2000, 2001, 2002, 2005, 2007
d97 1
a97 1
  fprintf_ftype fprintf = info->fprintf_func;
d126 1
a126 1
    (*fprintf) (stream, ".short 0x%04x", inst);
d131 1
a131 1
      (*fprintf) (stream, "%s", op->name);
d139 1
a139 1
	  (*fprintf) (stream, "\t%d", inst & 0x3);
d145 1
a145 1
	  (*fprintf) (stream, "\t%s", name);
d149 1
a149 1
	  (*fprintf) (stream, "\t%s, %s", name, crname[(inst >> 4) & 0x1F]);
d153 1
a153 1
	  (*fprintf) (stream, "\t%s, r1", name);
d158 1
a158 1
	  (*fprintf) (stream, "\t%s, %s", name, grname[(inst >> 4) & 0xF]);
d162 1
a162 1
	  (*fprintf) (stream, "\tr1, %s", name);
d166 1
a166 1
	  (*fprintf) (stream, "\t%s, %d", name, ((inst >> 4) & 0x1F) + 1);
d170 1
a170 1
	  (*fprintf) (stream, "\t%s-r15, (r0)", name);
d174 1
a174 1
	  (*fprintf) (stream, "\tr4-r7, (%s)", name);
d186 1
a186 1
	  (*fprintf) (stream, "\t%s, %d", name, (inst >> 4) & 0x1F);
d190 1
a190 1
	  (*fprintf) (stream, "\t%s, %d", name, (inst >> 4) & 0x7F);
d194 2
a195 2
	  (*fprintf) (stream, "\t%s, (%s, %d)", grname[(inst >> 8) & 0xF],
		      name, ((inst >> 4) & 0xF) << isiz[(inst >> 13) & 3]);
d205 1
a205 1
	    (*fprintf) (stream, "\t0x%lx", (long)(memaddr + 2 + (val << 1)));
d214 1
a214 1
		    (*fprintf) (stream, "\t// ");
d225 3
a227 3
	    (*fprintf) (stream, "\t%s, 0x%lx",
			grname[(inst >> 4) & 0xF],
			(long) (memaddr - (val << 1)));
d252 1
a252 1
	    (*fprintf) (stream, "\t%s, 0x%lX", grname[(inst >> 8) & 0xF], val);
d255 3
a257 3
	      (*fprintf) (stream, "\t// from address pool at 0x%lx",
			  (long) (memaddr + 2
				  + ((inst & 0xFF) << 2)) & 0xFFFFFFFC);
d282 1
a282 1
	    (*fprintf) (stream, "\t0x%lX", val);
d286 1
a286 1
		(*fprintf) (stream, "\t// ");
d291 3
a293 3
		(*fprintf) (stream, "\t// from address pool at 0x%lx",
			    (long) (memaddr + 2
				    + ((inst & 0xFF) << 2)) & 0xFFFFFFFC);
d305 1
a305 1
	    (*fprintf) (stream, "\t%s", fields[inst & 0x7]);
d311 1
a311 1
	  (*fprintf) (stream, "\tundecoded operands, inst is 0x%04x", inst);
@


1.22
log
@	* mcore-dis.c (print_insn_mcore): Protect "fprintf" var against
	macro expansion.
@
text
@d2 2
a3 1
   Copyright 1993, 1999, 2000, 2001, 2002, 2007 Free Software Foundation, Inc.
@


1.21
log
@Change source files over to GPLv3.
@
text
@d125 1
a125 1
    fprintf (stream, ".short 0x%04x", inst);
d130 1
a130 1
      fprintf (stream, "%s", op->name);
d138 1
a138 1
	  fprintf (stream, "\t%d", inst & 0x3);
d144 1
a144 1
	  fprintf (stream, "\t%s", name);
d148 1
a148 1
	  fprintf (stream, "\t%s, %s", name, crname[(inst >> 4) & 0x1F]);
d152 1
a152 1
	  fprintf (stream, "\t%s, r1", name);
d157 1
a157 1
	  fprintf (stream, "\t%s, %s", name, grname[(inst >> 4) & 0xF]);
d161 1
a161 1
	  fprintf (stream, "\tr1, %s", name);
d165 1
a165 1
	  fprintf (stream, "\t%s, %d", name, ((inst >> 4) & 0x1F) + 1);
d169 1
a169 1
	  fprintf (stream, "\t%s-r15, (r0)", name);
d173 1
a173 1
	  fprintf (stream, "\tr4-r7, (%s)", name);
d185 1
a185 1
	  fprintf (stream, "\t%s, %d", name, (inst >> 4) & 0x1F);
d189 1
a189 1
	  fprintf (stream, "\t%s, %d", name, (inst >> 4) & 0x7F);
d193 2
a194 2
	  fprintf (stream, "\t%s, (%s, %d)", grname[(inst >> 8) & 0xF],
		   name, ((inst >> 4) & 0xF) << isiz[(inst >> 13) & 3]);
d204 1
a204 1
	    fprintf (stream, "\t0x%lx", (long)(memaddr + 2 + (val << 1)));
d213 1
a213 1
		    fprintf (stream, "\t// ");
d224 3
a226 2
	    fprintf (stream, "\t%s, 0x%lx",
		     grname[(inst >> 4) & 0xF], (long)(memaddr - (val << 1)));
d251 1
a251 1
	    fprintf (stream, "\t%s, 0x%lX", grname[(inst >> 8) & 0xF], val);
d254 3
a256 2
	      fprintf (stream, "\t// from address pool at 0x%lx",
		       (long)(memaddr + 2 + ((inst & 0xFF) << 2)) & 0xFFFFFFFC);
d281 1
a281 1
	    fprintf (stream, "\t0x%lX", val);
d285 1
a285 1
		fprintf (stream, "\t// ");
d290 3
a292 2
		fprintf (stream, "\t// from address pool at 0x%lx",
			 (long)(memaddr + 2 + ((inst & 0xFF) << 2)) & 0xFFFFFFFC);
d304 1
a304 1
	    fprintf (stream, "\t%s", fields[inst & 0x7]);
d310 1
a310 1
	  fprintf (stream, "\tundecoded operands, inst is 0x%04x", inst);
@


1.20
log
@Kaveh Ghazi's printf format attribute checking patch.
bfd:
	* elf32-xtensa.c (vsprint_msg): Add format attribute.  Fix
	format bugs.
	* vms.h (_bfd_vms_debug): Add format attribute.
	(_bfd_vms_debug, _bfd_hexdump): Fix typos.

binutils:
	* bucomm.h (report): Add format attribute.
	* dlltool.c (inform): Likewise.
	* dllwrap.c (display, inform, warn): Likewise.
	* objdump.c (objdump_sprintf): Likewise.
	* readelf.c (error, warn): Likewise.  Fix format bugs.

gas:
	* config/tc-tic30.c (debug): Add format attribute.  Fix format
	bugs.

include:
	* dis-asm.h (fprintf_ftype): Add format attribute.

opcodes:
	* arc-dis.c, arm-dis.c, cris-dis.c, crx-dis.c, d10v-dis.c,
	d30v-dis.c, fr30-dis.c, h8300-dis.c, h8500-dis.c, i860-dis.c,
	ia64-dis.c, ip2k-dis.c, m10200-dis.c, m10300-dis.c,
	m88k-dis.c, mcore-dis.c, mips-dis.c, ms1-dis.c, or32-dis.c,
	ppc-dis.c, sh64-dis.c, sparc-dis.c, tic4x-dis.c, tic80-dis.c,
	v850-dis.c: Fix format bugs.
	* ia64-gen.c (fail, warn): Add format attribute.
	* or32-opc.c (debug): Likewise.
@
text
@d2 1
a2 1
   Copyright 1993, 1999, 2000, 2001, 2002 Free Software Foundation, Inc.
d4 16
a19 13
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.  */
@


1.19
log
@Update the address and phone number of the FSF
@
text
@d201 1
a201 1
	    fprintf (stream, "\t0x%x", memaddr + 2 + (val << 1));
d221 2
a222 2
	    fprintf (stream, "\t%s, 0x%x",
		     grname[(inst >> 4) & 0xF], memaddr - (val << 1));
d247 1
a247 1
	    fprintf (stream, "\t%s, 0x%X", grname[(inst >> 8) & 0xF], val);
d250 2
a251 2
	      fprintf (stream, "\t// from address pool at 0x%x",
		       (memaddr + 2 + ((inst & 0xFF) << 2)) & 0xFFFFFFFC);
d276 1
a276 1
	    fprintf (stream, "\t0x%X", val);
d285 2
a286 2
		fprintf (stream, "\t// from address pool at 0x%x",
			 (memaddr + 2 + ((inst & 0xFF) << 2)) & 0xFFFFFFFC);
@


1.18
log
@update copyright dates
@
text
@d16 1
a16 1
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
@


1.17
log
@	* arm-dis.c (print_insn_arm): Constify "insn".  Formatting.
	(print_insn_thumb): Likewise.
	* h8500-dis.c (print_insn_h8500): Constify "opcode".
	* mcore-dis.c (print_insn_mcore): Constify "op".  Formatting.
	* ns32k-dis.c (print_insn_arg <case 'F'>): Use a union to avoid
	type-punned pointer warnings.
	<case 'L'>: Likewise.  Fix error message too.
	* pdp11-dis.c (print_reg): Warning fix.
	* sh-dis.c (print_movxy): Constify "op" param.
	(print_insn_ddt): Constify sh_opcode_info vars.
	(print_insn_ppi): Likewise.
	(print_insn_sh): Likewise.
	* tic30-dis.c (cnvt_tmsfloat_ieee): Use a union to avoid
	type-punned pointer warnings.
	* w65-dis.c (print_insn_w65): Constify "op".
@
text
@d2 1
a2 1
   Copyright 1993, 1999, 2000, 2002 Free Software Foundation, Inc.
@


1.16
log
@	* mcore-dis.c: Fix formatting.
	* mips-dis.c: Likewise.
	* pj-dis.c: Likewise.
	* z8k-dis.c: Likewise.
@
text
@d2 1
a2 1
   Copyright 1993, 1999, 2000 Free Software Foundation, Inc.
d92 6
a97 6
  unsigned char       ibytes[4];
  fprintf_ftype       fprintf = info->fprintf_func;
  void *              stream = info->stream;
  unsigned short      inst;
  mcore_opcode_info * op;
  int                 status;
d131 7
a137 2
	case O0: break;
	case OT: fprintf (stream, "\t%d", inst & 0x3); break;
d140 12
a151 3
	case JSR: fprintf (stream, "\t%s", name); break;
	case OC:  fprintf (stream, "\t%s, %s", name, crname[(inst >> 4) & 0x1F]); break;
	case O1R1: fprintf (stream, "\t%s, r1", name); break;
d153 20
a172 5
	case O2: fprintf (stream, "\t%s, %s", name, grname[(inst >> 4) & 0xF]); break;
	case X1: fprintf (stream, "\tr1, %s", name); break;
	case OI: fprintf (stream, "\t%s, %d", name, ((inst >> 4) & 0x1F) + 1); break;
	case RM: fprintf (stream, "\t%s-r15, (r0)", name); break;
	case RQ: fprintf (stream, "\tr4-r7, (%s)", name); break;
d181 11
a191 4
	case OMc: fprintf (stream, "\t%s, %d", name, (inst >> 4) & 0x1F); break;
	case I7: fprintf (stream, "\t%s, %d", name, (inst >> 4) & 0x7F); break;
	case LS: fprintf (stream, "\t%s, (%s, %d)", grname[(inst >> 8) & 0xF],
			  name, ((inst >> 4) & 0xF) << isiz[(inst >> 13) & 3]);
@


1.16.24.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@d2 1
a2 1
   Copyright 1993, 1999, 2000, 2002 Free Software Foundation, Inc.
d92 6
a97 6
  unsigned char ibytes[4];
  fprintf_ftype fprintf = info->fprintf_func;
  void *stream = info->stream;
  unsigned short inst;
  const mcore_opcode_info *op;
  int status;
d131 2
a132 7
	case O0:
	  break;

	case OT:
	  fprintf (stream, "\t%d", inst & 0x3);
	  break;

d135 3
a137 12
	case JSR:
	  fprintf (stream, "\t%s", name);
	  break;

	case OC:
	  fprintf (stream, "\t%s, %s", name, crname[(inst >> 4) & 0x1F]);
	  break;

	case O1R1:
	  fprintf (stream, "\t%s, r1", name);
	  break;

d139 5
a143 20
	case O2:
	  fprintf (stream, "\t%s, %s", name, grname[(inst >> 4) & 0xF]);
	  break;

	case X1:
	  fprintf (stream, "\tr1, %s", name);
	  break;

	case OI:
	  fprintf (stream, "\t%s, %d", name, ((inst >> 4) & 0x1F) + 1);
	  break;

	case RM:
	  fprintf (stream, "\t%s-r15, (r0)", name);
	  break;

	case RQ:
	  fprintf (stream, "\tr4-r7, (%s)", name);
	  break;

d152 4
a155 11
	case OMc:
	  fprintf (stream, "\t%s, %d", name, (inst >> 4) & 0x1F);
	  break;

	case I7:
	  fprintf (stream, "\t%s, %d", name, (inst >> 4) & 0x7F);
	  break;

	case LS:
	  fprintf (stream, "\t%s, (%s, %d)", grname[(inst >> 8) & 0xF],
		   name, ((inst >> 4) & 0xF) << isiz[(inst >> 13) & 3]);
@


1.16.22.1
log
@2002-12-23  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021223-merge.
@
text
@d2 1
a2 1
   Copyright 1993, 1999, 2000, 2002 Free Software Foundation, Inc.
d92 6
a97 6
  unsigned char ibytes[4];
  fprintf_ftype fprintf = info->fprintf_func;
  void *stream = info->stream;
  unsigned short inst;
  const mcore_opcode_info *op;
  int status;
d131 2
a132 7
	case O0:
	  break;

	case OT:
	  fprintf (stream, "\t%d", inst & 0x3);
	  break;

d135 3
a137 12
	case JSR:
	  fprintf (stream, "\t%s", name);
	  break;

	case OC:
	  fprintf (stream, "\t%s, %s", name, crname[(inst >> 4) & 0x1F]);
	  break;

	case O1R1:
	  fprintf (stream, "\t%s, r1", name);
	  break;

d139 5
a143 20
	case O2:
	  fprintf (stream, "\t%s, %s", name, grname[(inst >> 4) & 0xF]);
	  break;

	case X1:
	  fprintf (stream, "\tr1, %s", name);
	  break;

	case OI:
	  fprintf (stream, "\t%s, %d", name, ((inst >> 4) & 0x1F) + 1);
	  break;

	case RM:
	  fprintf (stream, "\t%s-r15, (r0)", name);
	  break;

	case RQ:
	  fprintf (stream, "\tr4-r7, (%s)", name);
	  break;

d152 4
a155 11
	case OMc:
	  fprintf (stream, "\t%s, %d", name, (inst >> 4) & 0x1F);
	  break;

	case I7:
	  fprintf (stream, "\t%s, %d", name, (inst >> 4) & 0x7F);
	  break;

	case LS:
	  fprintf (stream, "\t%s, (%s, %d)", grname[(inst >> 8) & 0xF],
		   name, ((inst >> 4) & 0xF) << isiz[(inst >> 13) & 3]);
@


1.15
log
@Fix typos in ChangeLogs; fix dates in copyright notices
@
text
@d27 1
a27 2
static const unsigned short imsk[] =
{
d36 1
a36 1
	      
d45 1
a45 1
	      
d54 1
a54 1
	      
d60 1
a60 1
  /* MULSH */ 0xFF00,    
d62 1
a62 1
		 
d68 1
a68 1
    /* OB2 */ 0 		/* OB2 won't appear in object. */
d71 1
a71 2
static const char * grname[] =
{
d78 1
a78 2
static const char * crname[] =
{
d87 1
a87 1
int 
d90 1
a90 1
     struct disassemble_info * info;
d103 1
a103 1
  if (status != 0) 
d117 1
a117 1
  for (op = mcore_table; op->name != 0; op ++)
d125 2
a126 2
      const char * name = grname[inst & 0x0F];
      
d128 1
a128 1
      
d157 1
a157 1
	  
d161 1
a161 1
	    
d164 3
a166 3
	    
	    fprintf (stream, "\t0x%x", memaddr + 2 + (val<<1));
	    
d171 1
a171 1
		
d180 1
a180 1
	  
d186 1
a186 1
		    grname[(inst >> 4) & 0xF], memaddr - (val << 1));
d189 1
a189 1
	  
d193 1
a193 1
	    
d195 1
a195 1
	    
d197 1
a197 1
	    if (status != 0) 
d202 1
a202 1
	    
d209 1
a209 1
	    
d218 1
a218 1
	  
d222 1
a222 1
	    
d224 1
a224 1
	    
d226 1
a226 1
	    if (status != 0) 
d238 1
a238 1
	    
d254 1
a254 1
	  
d257 2
a258 3
	    static char * fields[] = 
	    {
	      "af", "ie",    "fe",    "fe,ie", 
d261 1
a261 1
	    
d265 1
a265 1
	  
d272 1
a272 1
  
@


1.14
log
@Change mask for OC to 0xFE00
@
text
@d2 1
a2 1
   Copyright (C) 1993, 1999, 2000 Free Software Foundation, Inc.
@


1.14.2.1
log
@Update copyright notices.
@
text
@d2 1
a2 1
   Copyright 1993, 1999, 2000 Free Software Foundation, Inc.
@


1.13
log
@Replace defines with those from intl/libgettext.h to quieten gcc warnings.
@
text
@d32 1
a32 1
    /* OC  */ 0xFFE0,
@


1.12
log
@More portability patches.  Include sysdep.h everywhere.
@
text
@d172 1
a172 1
		/* for bsr, we'll try to get a symbol for the target */
d271 1
a271 1
	  /* if the disassembler lags the instruction set */
d277 1
a277 1
  /* Say how many bytes we consumed? */
@


1.11
log
@Add support for M340 part.
@
text
@d18 1
@


1.11.2.1
log
@2000-04-13  Michael Sokolov  <msokolov@@ivan.Harhan.ORG>

	* a29k-dis.c, alpha-dis.c, alpha-opc.c, arc-dis.c, arc-opc.c,
	avr-dis.c, d10v-dis.c, d10v-opc.c, d30v-dis.c, d30v-opc.c,
	disassemble.c, h8300-dis.c, h8500-dis.c, hppa-dis.c, i370-dis.c,
	i370-opc.c, i960-dis.c, m10200-dis.c, m10200-opc.c, m10300-dis.c,
	m10300-opc.c, m68k-dis.c, m68k-opc.c, m88k-dis.c, mcore-dis.c,
	mips-dis.c, mips-opc.c, mips16-opc.c, pj-dis.c, pj-opc.c, ppc-dis.c,
	ppc-opc.c, sh-dis.c, sparc-dis.c, sparc-opc.c, tic80-dis.c,
	tic80-opc.c, v850-dis.c, v850-opc.c, vax-dis.c, w65-dis.c, z8k-dis.c,
	z8kgen.c: Everyone includes sysdep.h. Remove ansidecl.h as sysdep.h
	includes it.
@
text
@a17 1
#include "sysdep.h"
@


1.10
log
@fix spelling of Motorola
@
text
@d2 1
a2 1
   Copyright (C) 1993, 1999 Free Software Foundation, Inc.
d60 3
d111 1
d113 4
d140 1
d205 4
d234 4
d254 12
@


1.9
log
@fix typo in previous delta
@
text
@d1 1
a1 1
/* Disassemble Motorolla M*Core instructions.
@


1.8
log
@revert previous delta
@
text
@a59 44
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */

#include <stdio.h>
#define STATIC_TABLE
#define DEFINE_TABLE

#include "mcore-opc.h"
#include "dis-asm.h"

/* Mask for each mcore_opclass: */
static const unsigned short imsk[] =
{
    /* O0  */ 0xFFFF,
    /* OT  */ 0xFFFC,
    /* O1  */ 0xFFF0,
    /* OC  */ 0xFFE0,
    /* O2  */ 0xFF00,
    /* X1  */ 0xFFF0,
    /* OI  */ 0xFE00,
    /* OB  */ 0xFE00,
	      
    /* OMa */ 0xFFF0,
    /* SI  */ 0xFE00,
    /* I7  */ 0xF800,
    /* LS  */ 0xF000,
    /* BR  */ 0xF800,
    /* BL  */ 0xFF00,
    /* LR  */ 0xF000,
    /* LJ  */ 0xFF00,
	      
    /* RM  */ 0xFFF0,
    /* RQ  */ 0xFFF0,
    /* JSR */ 0xFFF0,
    /* JMP */ 0xFFF0,
    /* OBRa*/ 0xFFF0,
    /* OBRb*/ 0xFF80,
    /* OBRc*/ 0xFF00,
    /* OBR2*/ 0xFE00,
	      
    /* O1R1*/ 0xFFF0,
    /* OMb */ 0xFF80,
    /* OMc */ 0xFF00,
    /* SIa */ 0xFE00,

@


1.7
log
@Apply patch supplied for case 102229 to implement new insns psrclr and psrset.
@
text
@a103 2
  /* OPSR  */ 0xFFF8,   /* psrset/psrclr */
		 
a283 12
	case OPSR:
	  {
	    static char * fields[] = 
	    {
	      "af", "ie",    "fe",    "fe,ie", 
	      "ee", "ee,ie", "ee,fe", "ee,fe,ie"
	    };
	    
	    fprintf (stream, "\t%s", fields[inst & 0x7]);
	  }
	  break;

@


1.6
log
@fix FSF address
@
text
@d60 46
d286 12
@


1.5
log
@remove bigus code.
@
text
@d16 1
a16 1
Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */
@


1.4
log
@Use .short to display unidentified instructions
@
text
@a59 4
/* start-sanitize-m340 */
  /* MULSH */ 0xFF00,
/* end-sanitize-m340 */
		 
a107 3
/* start-sanitize-m340 */
  if (info->endian == BFD_ENDIAN_BIG)
/* end-sanitize-m340 */
a108 6
/* start-sanitize-m340 */
  else if (info->endian == BFD_ENDIAN_LITTLE)
    inst = (ibytes[1] << 8) | ibytes[0];
  else
    abort ();
/* end-sanitize-m340 */
a131 3
/* start-sanitize-m340 */
	case MULSH:
/* end-sanitize-m340 */
a195 6
/* start-sanitize-m340 */
	    if (info->endian == BFD_ENDIAN_LITTLE)
	      val = (ibytes[3] << 24) | (ibytes[2] << 16)
		| (ibytes[1] << 8) | (ibytes[0]);
	    else
/* end-sanitize-m340 */
a220 6
/* start-sanitize-m340 */
	    if (info->endian == BFD_ENDIAN_LITTLE)
	      val = (ibytes[3] << 24) | (ibytes[2] << 16)
		| (ibytes[1] << 8) | (ibytes[0]);
	    else
/* end-sanitize-m340 */
@


1.3
log
@restore mcore files (Duh!)
@
text
@d129 1
a129 1
    fprintf (stream, ".word 0x%04x", inst);
@


1.2
log
@Currently CYGNUS local
@
text
@d60 3
d102 2
d112 10
a121 1
  inst = (ibytes[0] << 8) | ibytes[1];
d125 2
a126 4
    {
      if (op->inst == (inst & imsk[op->opclass]))
	break;
    }
d145 3
d209 1
a209 1
		return -1;
d212 8
a219 2
	    val = (ibytes[0] << 24) | (ibytes[1] << 16)
	      | (ibytes[2] << 8) | (ibytes[3]);
d240 1
a240 1
		return -1;
d242 9
a250 3
	    
	    val = (ibytes[0] << 24) | (ibytes[1] << 16)
	      | (ibytes[2] << 8) | (ibytes[3]);
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@19990502 sourceware import
@
text
@@

