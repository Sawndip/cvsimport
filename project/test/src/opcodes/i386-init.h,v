head	1.58;
access;
symbols
	sid-snapshot-20180601:1.58
	sid-snapshot-20180501:1.58
	sid-snapshot-20180401:1.58
	sid-snapshot-20180301:1.58
	sid-snapshot-20180201:1.58
	sid-snapshot-20180101:1.58
	sid-snapshot-20171201:1.58
	sid-snapshot-20171101:1.58
	sid-snapshot-20171001:1.58
	sid-snapshot-20170901:1.58
	sid-snapshot-20170801:1.58
	sid-snapshot-20170701:1.58
	sid-snapshot-20170601:1.58
	sid-snapshot-20170501:1.58
	sid-snapshot-20170401:1.58
	sid-snapshot-20170301:1.58
	sid-snapshot-20170201:1.58
	sid-snapshot-20170101:1.58
	sid-snapshot-20161201:1.58
	sid-snapshot-20161101:1.58
	sid-snapshot-20160901:1.58
	sid-snapshot-20160801:1.58
	sid-snapshot-20160701:1.58
	sid-snapshot-20160601:1.58
	sid-snapshot-20160501:1.58
	sid-snapshot-20160401:1.58
	sid-snapshot-20160301:1.58
	sid-snapshot-20160201:1.58
	sid-snapshot-20160101:1.58
	sid-snapshot-20151201:1.58
	sid-snapshot-20151101:1.58
	sid-snapshot-20151001:1.58
	sid-snapshot-20150901:1.58
	sid-snapshot-20150801:1.58
	sid-snapshot-20150701:1.58
	sid-snapshot-20150601:1.58
	sid-snapshot-20150501:1.58
	sid-snapshot-20150401:1.58
	sid-snapshot-20150301:1.58
	sid-snapshot-20150201:1.58
	sid-snapshot-20150101:1.58
	sid-snapshot-20141201:1.58
	sid-snapshot-20141101:1.58
	sid-snapshot-20141001:1.58
	sid-snapshot-20140901:1.58
	sid-snapshot-20140801:1.58
	sid-snapshot-20140701:1.58
	sid-snapshot-20140601:1.58
	sid-snapshot-20140501:1.58
	sid-snapshot-20140401:1.58
	sid-snapshot-20140301:1.58
	sid-snapshot-20140201:1.58
	sid-snapshot-20140101:1.58
	sid-snapshot-20131201:1.58
	sid-snapshot-20131101:1.58
	sid-snapshot-20131001:1.58
	binutils-2_24-branch:1.57.0.2
	binutils-2_24-branchpoint:1.57
	binutils-2_21_1:1.36.2.1
	sid-snapshot-20130901:1.57
	gdb_7_6_1-2013-08-30-release:1.53
	sid-snapshot-20130801:1.57
	sid-snapshot-20130701:1.54
	sid-snapshot-20130601:1.54
	sid-snapshot-20130501:1.53
	gdb_7_6-2013-04-26-release:1.53
	sid-snapshot-20130401:1.53
	binutils-2_23_2:1.46.4.3
	gdb_7_6-branch:1.53.0.2
	gdb_7_6-2013-03-12-branchpoint:1.53
	sid-snapshot-20130301:1.53
	sid-snapshot-20130201:1.52
	sid-snapshot-20130101:1.51
	sid-snapshot-20121201:1.51
	gdb_7_5_1-2012-11-29-release:1.46
	binutils-2_23_1:1.46.4.3
	sid-snapshot-20121101:1.51
	binutils-2_23:1.46.4.2
	sid-snapshot-20121001:1.50
	sid-snapshot-20120901:1.48
	gdb_7_5-2012-08-17-release:1.46
	sid-snapshot-20120801:1.46
	binutils-2_23-branch:1.46.0.4
	binutils-2_23-branchpoint:1.46
	gdb_7_5-branch:1.46.0.2
	gdb_7_5-2012-07-18-branchpoint:1.46
	sid-snapshot-20120701:1.45
	sid-snapshot-20120601:1.45
	sid-snapshot-20120501:1.45
	binutils-2_22_branch:1.43.0.6
	gdb_7_4_1-2012-04-26-release:1.43
	sid-snapshot-20120401:1.45
	sid-snapshot-20120301:1.45
	sid-snapshot-20120201:1.44
	gdb_7_4-2012-01-24-release:1.43
	sid-snapshot-20120101:1.43
	gdb_7_4-branch:1.43.0.4
	gdb_7_4-2011-12-13-branchpoint:1.43
	sid-snapshot-20111201:1.43
	binutils-2_22:1.43
	sid-snapshot-20111101:1.43
	sid-snapshot-20111001:1.43
	binutils-2_22-branch:1.43.0.2
	binutils-2_22-branchpoint:1.43
	gdb_7_3_1-2011-09-04-release:1.38
	sid-snapshot-20110901:1.43
	sid-snapshot-20110801:1.43
	gdb_7_3-2011-07-26-release:1.38
	sid-snapshot-20110701:1.42
	sid-snapshot-20110601:1.40
	sid-snapshot-20110501:1.39
	gdb_7_3-branch:1.38.0.2
	gdb_7_3-2011-04-01-branchpoint:1.38
	sid-snapshot-20110401:1.38
	sid-snapshot-20110301:1.38
	sid-snapshot-20110201:1.38
	sid-snapshot-20110101:1.36
	binutils-2_21:1.36
	sid-snapshot-20101201:1.36
	binutils-2_21-branch:1.36.0.2
	binutils-2_21-branchpoint:1.36
	sid-snapshot-20101101:1.36
	sid-snapshot-20101001:1.35
	binutils-2_20_1:1.26
	gdb_7_2-2010-09-02-release:1.34
	sid-snapshot-20100901:1.35
	sid-snapshot-20100801:1.34
	gdb_7_2-branch:1.34.0.2
	gdb_7_2-2010-07-07-branchpoint:1.34
	sid-snapshot-20100701:1.33
	sid-snapshot-20100601:1.33
	sid-snapshot-20100501:1.33
	sid-snapshot-20100401:1.33
	gdb_7_1-2010-03-18-release:1.32
	sid-snapshot-20100301:1.32
	gdb_7_1-branch:1.32.0.2
	gdb_7_1-2010-02-18-branchpoint:1.32
	sid-snapshot-20100201:1.30
	sid-snapshot-20100101:1.29
	gdb_7_0_1-2009-12-22-release:1.26
	sid-snapshot-20091201:1.29
	sid-snapshot-20091101:1.26
	binutils-2_20:1.26
	gdb_7_0-2009-10-06-release:1.26
	sid-snapshot-20091001:1.26
	gdb_7_0-branch:1.26.0.6
	gdb_7_0-2009-09-16-branchpoint:1.26
	arc-sim-20090309:1.15
	binutils-arc-20081103-branch:1.18.0.16
	binutils-arc-20081103-branchpoint:1.18
	binutils-2_20-branch:1.26.0.4
	binutils-2_20-branchpoint:1.26
	sid-snapshot-20090901:1.26
	sid-snapshot-20090801:1.26
	msnyder-checkpoint-072509-branch:1.26.0.2
	msnyder-checkpoint-072509-branchpoint:1.26
	sid-snapshot-20090701:1.23
	dje-cgen-play1-branch:1.23.0.2
	dje-cgen-play1-branchpoint:1.23
	sid-snapshot-20090601:1.23
	sid-snapshot-20090501:1.22
	sid-snapshot-20090401:1.22
	arc-20081103-branch:1.18.0.14
	arc-20081103-branchpoint:1.18
	arc-insight_6_8-branch:1.15.0.6
	arc-insight_6_8-branchpoint:1.15
	insight_6_8-branch:1.15.0.4
	insight_6_8-branchpoint:1.15
	sid-snapshot-20090301:1.22
	binutils-2_19_1:1.18
	sid-snapshot-20090201:1.21
	sid-snapshot-20090101:1.18
	reverse-20081226-branch:1.18.0.12
	reverse-20081226-branchpoint:1.18
	sid-snapshot-20081201:1.18
	multiprocess-20081120-branch:1.18.0.10
	multiprocess-20081120-branchpoint:1.18
	sid-snapshot-20081101:1.18
	binutils-2_19:1.18
	sid-snapshot-20081001:1.18
	reverse-20080930-branch:1.18.0.8
	reverse-20080930-branchpoint:1.18
	binutils-2_19-branch:1.18.0.6
	binutils-2_19-branchpoint:1.18
	sid-snapshot-20080901:1.18
	sid-snapshot-20080801:1.18
	reverse-20080717-branch:1.18.0.4
	reverse-20080717-branchpoint:1.18
	sid-snapshot-20080701:1.18
	msnyder-reverse-20080609-branch:1.18.0.2
	msnyder-reverse-20080609-branchpoint:1.18
	sid-snapshot-20080601:1.18
	sid-snapshot-20080501:1.17
	sid-snapshot-20080403:1.16
	sid-snapshot-20080401:1.15
	gdb_6_8-2008-03-27-release:1.15
	sid-snapshot-20080301:1.15
	gdb_6_8-branch:1.15.0.2
	gdb_6_8-2008-02-26-branchpoint:1.15
	sid-snapshot-20080201:1.12
	sid-snapshot-20080101:1.4
	sid-snapshot-20071201:1.3
	sid-snapshot-20071101:1.3
	sid-snapshot-20071001:1.2
	binutils_latest_snapshot:1.58;
locks; strict;
comment	@ * @;


1.58
date	2013.09.30.17.02.06;	author sekanath;	state Exp;
branches;
next	1.57;

1.57
date	2013.07.26.17.20.25;	author hjl;	state Exp;
branches;
next	1.56;

1.56
date	2013.07.25.16.16.35;	author hjl;	state Exp;
branches;
next	1.55;

1.55
date	2013.07.24.15.47.25;	author hjl;	state Exp;
branches;
next	1.54;

1.54
date	2013.05.15.05.06.23;	author sekanath;	state Exp;
branches;
next	1.53;

1.53
date	2013.02.19.19.10.31;	author hjl;	state Exp;
branches;
next	1.52;

1.52
date	2013.01.16.22.11.04;	author hjl;	state Exp;
branches;
next	1.51;

1.51
date	2012.10.09.08.43.06;	author neggone;	state Exp;
branches;
next	1.50;

1.50
date	2012.09.25.13.12.34;	author hjl;	state Exp;
branches;
next	1.49;

1.49
date	2012.09.20.11.53.33;	author hjl;	state Exp;
branches;
next	1.48;

1.48
date	2012.08.17.17.12.34;	author hjl;	state Exp;
branches;
next	1.47;

1.47
date	2012.08.10.21.19.40;	author hjl;	state Exp;
branches;
next	1.46;

1.46
date	2012.07.16.12.58.29;	author hjl;	state Exp;
branches
	1.46.4.1;
next	1.45;

1.45
date	2012.02.08.18.20.40;	author hjl;	state Exp;
branches;
next	1.44;

1.44
date	2012.01.13.22.19.28;	author hjl;	state Exp;
branches;
next	1.43;

1.43
date	2011.07.22.20.22.38;	author hjl;	state Exp;
branches;
next	1.42;

1.42
date	2011.06.10.21.27.39;	author hjl;	state Exp;
branches;
next	1.41;

1.41
date	2011.06.03.20.06.20;	author qneill;	state Exp;
branches;
next	1.40;

1.40
date	2011.05.11.22.35.20;	author qneill;	state Exp;
branches;
next	1.39;

1.39
date	2011.04.20.14.27.34;	author hjl;	state Exp;
branches;
next	1.38;

1.38
date	2011.01.18.14.14.46;	author jkratoch;	state Exp;
branches;
next	1.37;

1.37
date	2011.01.05.00.16.54;	author hjl;	state Exp;
branches;
next	1.36;

1.36
date	2010.10.16.21.53.16;	author hjl;	state Exp;
branches
	1.36.2.1;
next	1.35;

1.35
date	2010.08.06.18.22.49;	author hjl;	state Exp;
branches;
next	1.34;

1.34
date	2010.07.01.21.55.01;	author hjl;	state Exp;
branches;
next	1.33;

1.33
date	2010.03.23.02.56.24;	author spop;	state Exp;
branches;
next	1.32;

1.32
date	2010.02.11.05.06.14;	author spop;	state Exp;
branches;
next	1.31;

1.31
date	2010.02.03.20.36.14;	author spop;	state Exp;
branches;
next	1.30;

1.30
date	2010.01.06.22.52.47;	author spop;	state Exp;
branches;
next	1.29;

1.29
date	2009.11.18.20.28.59;	author spop;	state Exp;
branches;
next	1.28;

1.28
date	2009.11.18.04.04.17;	author spop;	state Exp;
branches;
next	1.27;

1.27
date	2009.11.05.23.40.05;	author spop;	state Exp;
branches;
next	1.26;

1.26
date	2009.07.25.14.58.58;	author hjl;	state Exp;
branches;
next	1.25;

1.25
date	2009.07.24.15.41.20;	author jbeulich;	state Exp;
branches;
next	1.24;

1.24
date	2009.07.06.19.34.30;	author dwarak;	state Exp;
branches;
next	1.23;

1.23
date	2009.05.22.15.57.25;	author dwarak;	state Exp;
branches;
next	1.22;

1.22
date	2009.02.23.20.41.46;	author hjl;	state Exp;
branches;
next	1.21;

1.21
date	2009.01.10.17.25.52;	author hjl;	state Exp;
branches;
next	1.20;

1.20
date	2009.01.09.20.32.32;	author hjl;	state Exp;
branches;
next	1.19;

1.19
date	2009.01.06.01.14.45;	author hjl;	state Exp;
branches;
next	1.18;

1.18
date	2008.05.02.16.53.40;	author hjl;	state Exp;
branches;
next	1.17;

1.17
date	2008.04.04.16.34.22;	author hjl;	state Exp;
branches;
next	1.16;

1.16
date	2008.04.03.14.03.21;	author hjl;	state Exp;
branches;
next	1.15;

1.15
date	2008.02.16.16.16.47;	author hjl;	state Exp;
branches;
next	1.14;

1.14
date	2008.02.12.05.35.36;	author hjl;	state Exp;
branches;
next	1.13;

1.13
date	2008.02.12.00.04.45;	author hjl;	state Exp;
branches;
next	1.12;

1.12
date	2008.01.23.19.05.12;	author hjl;	state Exp;
branches;
next	1.11;

1.11
date	2008.01.22.19.57.30;	author hjl;	state Exp;
branches;
next	1.10;

1.10
date	2008.01.22.19.16.45;	author hjl;	state Exp;
branches;
next	1.9;

1.9
date	2008.01.15.01.37.56;	author hjl;	state Exp;
branches;
next	1.8;

1.8
date	2008.01.12.16.05.42;	author hjl;	state Exp;
branches;
next	1.7;

1.7
date	2008.01.04.18.10.08;	author hjl;	state Exp;
branches;
next	1.6;

1.6
date	2008.01.04.01.05.44;	author hjl;	state Exp;
branches;
next	1.5;

1.5
date	2008.01.03.05.29.53;	author hjl;	state Exp;
branches;
next	1.4;

1.4
date	2007.12.28.16.04.40;	author hjl;	state Exp;
branches;
next	1.3;

1.3
date	2007.10.05.19.04.06;	author hjl;	state Exp;
branches;
next	1.2;

1.2
date	2007.09.14.18.21.09;	author meissner;	state Exp;
branches;
next	1.1;

1.1
date	2007.09.09.01.22.57;	author hjl;	state Exp;
branches;
next	;

1.46.4.1
date	2012.09.18.11.57.54;	author gingold;	state Exp;
branches;
next	1.46.4.2;

1.46.4.2
date	2012.09.18.12.21.53;	author gingold;	state Exp;
branches;
next	1.46.4.3;

1.46.4.3
date	2012.11.09.14.41.32;	author gingold;	state Exp;
branches;
next	;

1.36.2.1
date	2011.02.01.12.25.48;	author amodra;	state Exp;
branches;
next	;


desc
@@


1.58
log
@Add AMD bdver4 support.

gas/
	* config/tc-i386.c (cpu_arch): Add CPU_BDVER4_FLAGS.
	* doc/c-i386.texi: Add -march=bdver4 option.

gas/testsuite/
	* gas/i386/i386.exp: Run bdver4 test cases.
	* gas/i386/nops-1-bdver4.d: New.
	* gas/i386/arch-10-bdver4.d: New.
	* gas/i386/x86-64-nops-1-bdver4.d: New.
	* gas/i386/x86-64-arch-2-bdver4.d: New.

opcodes/
	* i386-gen.c (cpu_flag_init): Add CPU_BDVER4_FLAGS.
	* i386-init.h: Regenerated.
@
text
@/* This file is automatically generated by i386-gen.  Do not edit!  */
/* Copyright 2007, 2008, 2009, 2010, 2011, 2012, 2013
   Free Software Foundation, Inc.

   This file is part of the GNU opcodes library.

   This library is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3, or (at your option)
   any later version.

   It is distributed in the hope that it will be useful, but WITHOUT
   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
   License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
   MA 02110-1301, USA.  */

#define CPU_UNKNOWN_FLAGS \
  { { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  \
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1,  \
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  \
      1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1 } }

#define CPU_GENERIC32_FLAGS \
  { { 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_GENERIC64_FLAGS \
  { { 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_NONE_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_I186_FLAGS \
  { { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_I286_FLAGS \
  { { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_I386_FLAGS \
  { { 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_I486_FLAGS \
  { { 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_I586_FLAGS \
  { { 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_I686_FLAGS \
  { { 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_PENTIUMPRO_FLAGS \
  { { 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_P2_FLAGS \
  { { 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_P3_FLAGS \
  { { 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_P4_FLAGS \
  { { 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_NOCONA_FLAGS \
  { { 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_CORE_FLAGS \
  { { 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_CORE2_FLAGS \
  { { 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,  \
      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_COREI7_FLAGS \
  { { 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,  \
      0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_K6_FLAGS \
  { { 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_K6_2_FLAGS \
  { { 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_ATHLON_FLAGS \
  { { 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_K8_FLAGS \
  { { 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_AMDFAM10_FLAGS \
  { { 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,  \
      0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_BDVER1_FLAGS \
  { { 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,  \
      0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,  \
      1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0,  \
      0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0 } }

#define CPU_BDVER2_FLAGS \
  { { 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,  \
      0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,  \
      1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0,  \
      0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0 } }

#define CPU_BDVER3_FLAGS \
  { { 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,  \
      0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,  \
      1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0,  \
      0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0 } }

#define CPU_BDVER4_FLAGS \
  { { 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,  \
      0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1,  \
      1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,  \
      0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0 } }

#define CPU_BTVER1_FLAGS \
  { { 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,  \
      0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0,  \
      0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0 } }

#define CPU_BTVER2_FLAGS \
  { { 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,  \
      0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,  \
      1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0,  \
      0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0 } }

#define CPU_8087_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_287_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_387_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_ANY87_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_CLFLUSH_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_NOP_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_SYSCALL_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_MMX_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_SSE_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_SSE2_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_SSE3_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_SSSE3_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1,  \
      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_SSE4_1_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1,  \
      0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_SSE4_2_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1,  \
      0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_ANY_SSE_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1,  \
      0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_VMX_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_SMX_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_XSAVE_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_XSAVEOPT_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_AES_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1,  \
      0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_PCLMUL_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1,  \
      0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_FMA_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1,  \
      0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_FMA4_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1,  \
      0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_XOP_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1,  \
      0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_LWP_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_BMI_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_TBM_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_MOVBE_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_CX16_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_RDTSCP_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_EPT_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_FSGSBASE_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_RDRND_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_F16C_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_BMI2_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_LZCNT_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_HLE_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_RTM_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_INVPCID_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_VMFUNC_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_3DNOW_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_3DNOWA_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_PADLOCK_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_SVME_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_SSE4A_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1,  \
      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_ABM_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_AVX_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1,  \
      0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_AVX2_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1,  \
      0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_AVX512F_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1,  \
      0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_AVX512CD_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1,  \
      0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_AVX512ER_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1,  \
      0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_AVX512PF_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1,  \
      0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_ANY_AVX_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_L1OM_FLAGS \
  { { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  \
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  \
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  \
      1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1 } }

#define CPU_K1OM_FLAGS \
  { { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  \
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  \
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  \
      1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1 } }

#define CPU_ADX_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_RDSEED_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_PRFCHW_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 } }

#define CPU_SMAP_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 } }

#define CPU_MPX_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_SHA_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 } }


#define OPERAND_TYPE_NONE \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_REG8 \
  { { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_REG16 \
  { { 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_REG32 \
  { { 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_REG64 \
  { { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_IMM1 \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_IMM8 \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_IMM8S \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_IMM16 \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_IMM32 \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_IMM32S \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_IMM64 \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_BASEINDEX \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_DISP8 \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_DISP16 \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_DISP32 \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_DISP32S \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_DISP64 \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_INOUTPORTREG \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_SHIFTCOUNT \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_CONTROL \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_TEST \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_DEBUG \
  { { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_FLOATREG \
  { { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_FLOATACC \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_SREG2 \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_SREG3 \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_ACC \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_JUMPABSOLUTE \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_REGMMX \
  { { 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_REGXMM \
  { { 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_REGYMM \
  { { 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_REGZMM \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_REGMASK \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_ESSEG \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_ACC32 \
  { { 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_ACC64 \
  { { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_INOUTPORTREG \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_REG16_INOUTPORTREG \
  { { 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_DISP16_32 \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_ANYDISP \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_IMM16_32 \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_IMM16_32S \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, \
      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_IMM16_32_32S \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, \
      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_IMM32_64 \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, \
      0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_IMM32_32S_DISP32 \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, \
      1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_IMM64_DISP64 \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_IMM32_32S_64_DISP32 \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, \
      1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_IMM32_32S_64_DISP32_64 \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, \
      1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_VEC_IMM4 \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }

#define OPERAND_TYPE_REGBND \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 } }

#define OPERAND_TYPE_VEC_DISP8 \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0 } }
@


1.57
log
@Add Intel AVX-512 support

binutils/

2013-07-26  Sergey Guriev  <sergey.s.guriev@@intel.com>
	    Alexander Ivchenko  <alexander.ivchenko@@intel.com>
	    Maxim Kuznetsov  <maxim.kuznetsov@@intel.com>
	    Sergey Lega  <sergey.s.lega@@intel.com>
	    Anna Tikhonova  <anna.tikhonova@@intel.com>
	    Ilya Tocar  <ilya.tocar@@intel.com>
	    Andrey Turetskiy  <andrey.turetskiy@@intel.com>
	    Ilya Verbin  <ilya.verbin@@intel.com>
	    Kirill Yukhin  <kirill.yukhin@@intel.com>
	    Michael Zolotukhin  <michael.v.zolotukhin@@intel.com>

	* dwarf.c (dwarf_regnames_i386): Add k0-k7 registers and
	numeration in comments.
	(dwarf_regnames_x86_64): Add xmm16-31 and k0-k7 registers to
	dwarf table.

gas/

2013-07-26  Sergey Guriev  <sergey.s.guriev@@intel.com>
	    Alexander Ivchenko  <alexander.ivchenko@@intel.com>
	    Maxim Kuznetsov  <maxim.kuznetsov@@intel.com>
	    Sergey Lega  <sergey.s.lega@@intel.com>
	    Anna Tikhonova  <anna.tikhonova@@intel.com>
	    Ilya Tocar  <ilya.tocar@@intel.com>
	    Andrey Turetskiy  <andrey.turetskiy@@intel.com>
	    Ilya Verbin  <ilya.verbin@@intel.com>
	    Kirill Yukhin  <kirill.yukhin@@intel.com>
	    Michael Zolotukhin  <michael.v.zolotukhin@@intel.com>

	* config/tc-i386-intel.c (O_zmmword_ptr): New.
	(i386_types): Add zmmword.
	(i386_intel_simplify_register): Allow regzmm.
	(i386_intel_simplify): Handle zmmwords.
	(i386_intel_operand): Handle RC/SAE, vector operations and
	zmmwords.
	* config/tc-i386.c (ZMMWORD_MNEM_SUFFIX): New.
	(struct RC_Operation): New.
	(struct Mask_Operation): New.
	(struct Broadcast_Operation): New.
	(vex_prefix): Size of bytes increased to 4 to support EVEX
	encoding.
	(enum i386_error): Add new error codes: unsupported_broadcast,
	broadcast_not_on_src_operand, broadcast_needed,
	unsupported_masking, mask_not_on_destination, no_default_mask,
	unsupported_rc_sae, rc_sae_operand_not_last_imm,
	invalid_register_operand, try_vector_disp8.
	(struct _i386_insn): Add new fields vrex, need_vrex, mask,
	rounding, broadcast, memshift.
	(struct RC_name): New.
	(RC_NamesTable): New.
	(evexlig): New.
	(evexwig): New.
	(extra_symbol_chars): Add '{'.
	(cpu_arch): Add AVX512F, AVX512CD, AVX512ER and AVX512PF.
	(i386_operand_type): Add regzmm, regmask and vec_disp8.
	(match_mem_size): Handle zmmwords.
	(operand_type_match): Handle zmm-registers.
	(mode_from_disp_size): Handle vec_disp8.
	(fits_in_vec_disp8): New.
	(md_begin): Handle {} properly.
	(type_names): Add "rZMM", "Mask reg" and "Vector d8".
	(build_vex_prefix): Handle vrex.
	(build_evex_prefix): New.
	(process_immext): Adjust to properly handle EVEX.
	(md_assemble): Add EVEX encoding support.
	(swap_2_operands): Correctly handle operands with masking,
	broadcasting or RC/SAE.
	(check_VecOperands): Support EVEX features.
	(VEX_check_operands): Properly handle 16 upper [xyz]mm registers.
	(match_template): Support regzmm and handle new error codes.
	(process_suffix): Handle zmmwords and zmm-registers.
	(check_byte_reg): Extend to zmm-registers.
	(process_operands): Extend to zmm-registers.
	(build_modrm_byte): Handle EVEX.
	(output_insn): Adjust to properly handle EVEX case.
	(disp_size): Handle vec_disp8.
	(output_disp): Support compressed disp8*N evex feature.
	(output_imm): Handle RC/SAE immediates properly.
	(check_VecOperations): New.
	(i386_immediate): Handle EVEX features.
	(i386_index_check): Handle zmmwords and zmm-registers.
	(RC_SAE_immediate): New.
	(i386_att_operand): Handle EVEX features.
	(parse_real_register): Add a check for ZMM/Mask registers.
	(OPTION_MEVEXLIG): New.
	(OPTION_MEVEXWIG): New.
	(md_longopts): Add mevexlig and mevexwig.
	(md_parse_option): Handle mevexlig and mevexwig options.
	(md_show_usage): Add description for mevexlig and mevexwig.
	* doc/c-i386.texi: Document avx512f/.avx512f, avx512cd/.avx512cd,
	avx512er/.avx512er, avx512pf/.avx512pf, mevexlig and mevexwig.

gas/testsuite/

2013-07-26  Sergey Guriev  <sergey.s.guriev@@intel.com>
	    Alexander Ivchenko  <alexander.ivchenko@@intel.com>
	    Maxim Kuznetsov  <maxim.kuznetsov@@intel.com>
	    Sergey Lega  <sergey.s.lega@@intel.com>
	    Anna Tikhonova  <anna.tikhonova@@intel.com>
	    Ilya Tocar  <ilya.tocar@@intel.com>
	    Andrey Turetskiy  <andrey.turetskiy@@intel.com>
	    Ilya Verbin  <ilya.verbin@@intel.com>
	    Kirill Yukhin  <kirill.yukhin@@intel.com>
	    Michael Zolotukhin  <michael.v.zolotukhin@@intel.com>

	* gas/cfi/cfi-i386.s: Add tests for k0-k7.
	* gas/cfi/cfi-i386.d: Change to reflect above mentioned changes.
	* gas/cfi/cfi-x86_64.s: Add tests for xmm16-31, k0-7.
	* gas/cfi/cfi-x86_64.d: Change to reflect above mentioned changes.
	* gas/i386/ilp32/cfi/cfi-x86_64.d: Ditto.
	* gas/i386/intel-regs.s: Add tests for zmm0 and xmm16 registers.
	* gas/i386/intel-regs.d: Change correspondingly.
	* gas/i386/prefetch-intel.d: Reflect implementation of prefetchwt1.
	* gas/i386/prefetch.d: Ditto.
	* gas/i386/x86-64-prefetch-intel.d: Ditto.
	* gas/i386/x86-64-prefetch.d: Ditto.
	* gas/i386/avx512f-intel.d: New.
	* gas/i386/avx512f-nondef.d: New.
	* gas/i386/avx512f-nondef.s: New.
	* gas/i386/avx512f-opts-intel.d: New.
	* gas/i386/avx512f-opts.d: New.
	* gas/i386/avx512f-opts.s: New.
	* gas/i386/avx512f.d: New.
	* gas/i386/avx512f.s: New.
	* gas/i386/avx512cd-intel.d: New.
	* gas/i386/avx512cd.d: New.
	* gas/i386/avx512cd.s: New.
	* gas/i386/avx512er-intel.d: New.
	* gas/i386/avx512er.d: New.
	* gas/i386/avx512er.s: New.
	* gas/i386/avx512pf-intel.d: New.
	* gas/i386/avx512pf.d: New.
	* gas/i386/avx512pf.s: New.
	* gas/i386/evex-lig.s: New.
	* gas/i386/evex-lig256-intel.d: New.
	* gas/i386/evex-lig256.d: New.
	* gas/i386/evex-lig512-intel.d: New.
	* gas/i386/evex-lig512.d: New.
	* gas/i386/evex-wig.s: New.
	* gas/i386/evex-wig1-intel.d: New.
	* gas/i386/evex-wig1.d: New.
	* gas/i386/inval-avx512f.l: New.
	* gas/i386/inval-avx512f.s: New.
	* gas/i386/x86-64-avx512f-intel.d: New.
	* gas/i386/x86-64-avx512f-nondef.d: New.
	* gas/i386/x86-64-avx512f-nondef.s: New.
	* gas/i386/x86-64-avx512f-opts-intel.d: New.
	* gas/i386/x86-64-avx512f-opts.d: New.
	* gas/i386/x86-64-avx512f-opts.s: New.
	* gas/i386/x86-64-avx512f.d: New.
	* gas/i386/x86-64-avx512f.s: New.
	* gas/i386/x86-64-avx512cd-intel.d: New.
	* gas/i386/x86-64-avx512cd.d: New.
	* gas/i386/x86-64-avx512cd.s: New.
	* gas/i386/x86-64-avx512er-intel.d: New.
	* gas/i386/x86-64-avx512er.d: New.
	* gas/i386/x86-64-avx512er.s: New.
	* gas/i386/x86-64-avx512pf-intel.d: New.
	* gas/i386/x86-64-avx512pf.d: New.
	* gas/i386/x86-64-avx512pf.s: New.
	* gas/i386/x86-64-evex-lig.s: New.
	* gas/i386/x86-64-evex-lig256-intel.d: New.
	* gas/i386/x86-64-evex-lig256.d: New.
	* gas/i386/x86-64-evex-lig512-intel.d: New.
	* gas/i386/x86-64-evex-lig512.d: New.
	* gas/i386/x86-64-evex-wig.s: New.
	* gas/i386/x86-64-evex-wig1-intel.d: New.
	* gas/i386/x86-64-evex-wig1.d: New.
	* gas/i386/x86-64-inval-avx512f.l: New.
	* gas/i386/x86-64-inval-avx512f.s: New.
	* gas/i386/i386.exp: Run new AVX-512 tests.

opcodes/

2013-07-26  Sergey Guriev  <sergey.s.guriev@@intel.com>
	    Alexander Ivchenko  <alexander.ivchenko@@intel.com>
	    Maxim Kuznetsov  <maxim.kuznetsov@@intel.com>
	    Sergey Lega  <sergey.s.lega@@intel.com>
	    Anna Tikhonova  <anna.tikhonova@@intel.com>
	    Ilya Tocar  <ilya.tocar@@intel.com>
	    Andrey Turetskiy  <andrey.turetskiy@@intel.com>
	    Ilya Verbin  <ilya.verbin@@intel.com>
	    Kirill Yukhin  <kirill.yukhin@@intel.com>
	    Michael Zolotukhin  <michael.v.zolotukhin@@intel.com>

	* i386-dis-evex.h: New.
	* i386-dis.c (OP_Rounding): New.
	(VPCMP_Fixup): New.
	(OP_Mask): New.
	(Rdq): New.
	(XMxmmq): New.
	(EXdScalarS): New.
	(EXymm): New.
	(EXEvexHalfBcstXmmq): New.
	(EXxmm_mdq): New.
	(EXEvexXGscat): New.
	(EXEvexXNoBcst): New.
	(VPCMP): New.
	(EXxEVexR): New.
	(EXxEVexS): New.
	(XMask): New.
	(MaskG): New.
	(MaskE): New.
	(MaskR): New.
	(MaskVex): New.
	(modes enum): Add evex_x_gscat_mode, evex_x_nobcst_mode,
	evex_half_bcst_xmmq_mode, xmm_mdq_mode, ymm_mode,
	evex_rounding_mode, evex_sae_mode, mask_mode.
	(USE_EVEX_TABLE): New.
	(EVEX_TABLE): New.
	(EVEX enum): New.
	(REG enum): Add REG_EVEX_0F72, REG_EVEX_0F73, REG_EVEX_0F38C6,
	REG_EVEX_0F38C7.
	(MOD enum): Add MOD_EVEX_0F10_PREFIX_1, MOD_EVEX_0F10_PREFIX_3,
	MOD_EVEX_0F11_PREFIX_1, MOD_EVEX_0F11_PREFIX_3,
	MOD_EVEX_0F12_PREFIX_0, MOD_EVEX_0F16_PREFIX_0, MOD_EVEX_0F38C6_REG_1,
	MOD_EVEX_0F38C6_REG_2, MOD_EVEX_0F38C6_REG_5, MOD_EVEX_0F38C6_REG_6,
	MOD_EVEX_0F38C7_REG_1, MOD_EVEX_0F38C7_REG_2,  MOD_EVEX_0F38C7_REG_5,
	MOD_EVEX_0F38C7_REG_6.
	(PREFIX enum): Add PREFIX_VEX_0F41, PREFIX_VEX_0F42, PREFIX_VEX_0F44,
	PREFIX_VEX_0F45, PREFIX_VEX_0F46, PREFIX_VEX_0F47, PREFIX_VEX_0F4B,
	PREFIX_VEX_0F90, PREFIX_VEX_0F91, PREFIX_VEX_0F92, PREFIX_VEX_0F93,
	PREFIX_VEX_0F98, PREFIX_VEX_0F3A30, PREFIX_VEX_0F3A32,
	PREFIX_VEX_0F3AF0, PREFIX_EVEX_0F10, PREFIX_EVEX_0F11,
	PREFIX_EVEX_0F12, PREFIX_EVEX_0F13, PREFIX_EVEX_0F14,
	PREFIX_EVEX_0F15, PREFIX_EVEX_0F16, PREFIX_EVEX_0F17,
	PREFIX_EVEX_0F28, PREFIX_EVEX_0F29, PREFIX_EVEX_0F2A,
	PREFIX_EVEX_0F2B, PREFIX_EVEX_0F2C, PREFIX_EVEX_0F2D,
	PREFIX_EVEX_0F2E, PREFIX_EVEX_0F2F, PREFIX_EVEX_0F51,
	PREFIX_EVEX_0F58, PREFIX_EVEX_0F59, PREFIX_EVEX_0F5A,
	PREFIX_EVEX_0F5B, PREFIX_EVEX_0F5C, PREFIX_EVEX_0F5D,
	PREFIX_EVEX_0F5E, PREFIX_EVEX_0F5F, PREFIX_EVEX_0F62,
	PREFIX_EVEX_0F66, PREFIX_EVEX_0F6A, PREFIX_EVEX_0F6C,
	PREFIX_EVEX_0F6D, PREFIX_EVEX_0F6E, PREFIX_EVEX_0F6F,
	PREFIX_EVEX_0F70, PREFIX_EVEX_0F72_REG_0, PREFIX_EVEX_0F72_REG_1,
	PREFIX_EVEX_0F72_REG_2, PREFIX_EVEX_0F72_REG_4,
	PREFIX_EVEX_0F72_REG_6, PREFIX_EVEX_0F73_REG_2,
	PREFIX_EVEX_0F73_REG_6, PREFIX_EVEX_0F76, PREFIX_EVEX_0F78,
	PREFIX_EVEX_0F79, PREFIX_EVEX_0F7A, PREFIX_EVEX_0F7B,
	PREFIX_EVEX_0F7E, PREFIX_EVEX_0F7F, PREFIX_EVEX_0FC2,
	PREFIX_EVEX_0FC6, PREFIX_EVEX_0FD2, PREFIX_EVEX_0FD3,
	PREFIX_EVEX_0FD4, PREFIX_EVEX_0FD6, PREFIX_EVEX_0FDB,
	PREFIX_EVEX_0FDF, PREFIX_EVEX_0FE2, PREFIX_EVEX_0FE6 PREFIX_EVEX_0FE7,
	PREFIX_EVEX_0FEB, PREFIX_EVEX_0FEF, PREFIX_EVEX_0FF2,
	PREFIX_EVEX_0FF3, PREFIX_EVEX_0FF4, PREFIX_EVEX_0FFA, PREFIX_EVEX_0FFB,
	PREFIX_EVEX_0FFE, PREFIX_EVEX_0F380C, PREFIX_EVEX_0F380D,
	PREFIX_EVEX_0F3811, PREFIX_EVEX_0F3812, PREFIX_EVEX_0F3813,
	PREFIX_EVEX_0F3814, PREFIX_EVEX_0F3815, PREFIX_EVEX_0F3816,
	PREFIX_EVEX_0F3818, PREFIX_EVEX_0F3819, PREFIX_EVEX_0F381A,
	PREFIX_EVEX_0F381B, PREFIX_EVEX_0F381E, PREFIX_EVEX_0F381F,
	PREFIX_EVEX_0F3821, PREFIX_EVEX_0F3822, PREFIX_EVEX_0F3823,
	PREFIX_EVEX_0F3824, PREFIX_EVEX_0F3825, PREFIX_EVEX_0F3827,
	PREFIX_EVEX_0F3828, PREFIX_EVEX_0F3829, PREFIX_EVEX_0F382A,
	PREFIX_EVEX_0F382C, PREFIX_EVEX_0F382D, PREFIX_EVEX_0F3831,
	PREFIX_EVEX_0F3832, PREFIX_EVEX_0F3833, PREFIX_EVEX_0F3834,
	PREFIX_EVEX_0F3835, PREFIX_EVEX_0F3836, PREFIX_EVEX_0F3837,
	PREFIX_EVEX_0F3839, PREFIX_EVEX_0F383A, PREFIX_EVEX_0F383B,
	PREFIX_EVEX_0F383D, PREFIX_EVEX_0F383F, PREFIX_EVEX_0F3840,
	PREFIX_EVEX_0F3842, PREFIX_EVEX_0F3843, PREFIX_EVEX_0F3844,
	PREFIX_EVEX_0F3845, PREFIX_EVEX_0F3846, PREFIX_EVEX_0F3847,
	PREFIX_EVEX_0F384C, PREFIX_EVEX_0F384D, PREFIX_EVEX_0F384E,
	PREFIX_EVEX_0F384F, PREFIX_EVEX_0F3858, PREFIX_EVEX_0F3859,
	PREFIX_EVEX_0F385A, PREFIX_EVEX_0F385B, PREFIX_EVEX_0F3864,
	PREFIX_EVEX_0F3865, PREFIX_EVEX_0F3876, PREFIX_EVEX_0F3877,
	PREFIX_EVEX_0F387C, PREFIX_EVEX_0F387E, PREFIX_EVEX_0F387F,
	PREFIX_EVEX_0F3888, PREFIX_EVEX_0F3889, PREFIX_EVEX_0F388A,
	PREFIX_EVEX_0F388B, PREFIX_EVEX_0F3890, PREFIX_EVEX_0F3891,
	PREFIX_EVEX_0F3892, PREFIX_EVEX_0F3893, PREFIX_EVEX_0F3896,
	PREFIX_EVEX_0F3897, PREFIX_EVEX_0F3898, PREFIX_EVEX_0F3899,
	PREFIX_EVEX_0F389A, PREFIX_EVEX_0F389B, PREFIX_EVEX_0F389C,
	PREFIX_EVEX_0F389D, PREFIX_EVEX_0F389E, PREFIX_EVEX_0F389F,
	PREFIX_EVEX_0F38A0, PREFIX_EVEX_0F38A1, PREFIX_EVEX_0F38A2,
	PREFIX_EVEX_0F38A3, PREFIX_EVEX_0F38A6, PREFIX_EVEX_0F38A7,
	PREFIX_EVEX_0F38A8, PREFIX_EVEX_0F38A9, PREFIX_EVEX_0F38AA,
	PREFIX_EVEX_0F38AB, PREFIX_EVEX_0F38AC, PREFIX_EVEX_0F38AD,
	PREFIX_EVEX_0F38AE, PREFIX_EVEX_0F38AF, PREFIX_EVEX_0F38B6,
	PREFIX_EVEX_0F38B7, PREFIX_EVEX_0F38B8, PREFIX_EVEX_0F38B9,
	PREFIX_EVEX_0F38BA, PREFIX_EVEX_0F38BB, PREFIX_EVEX_0F38BC,
	PREFIX_EVEX_0F38BD, PREFIX_EVEX_0F38BE, PREFIX_EVEX_0F38BF,
	PREFIX_EVEX_0F38C4, PREFIX_EVEX_0F38C6_REG_1,
	PREFIX_EVEX_0F38C6_REG_2, PREFIX_EVEX_0F38C6_REG_5,
	PREFIX_EVEX_0F38C6_REG_6, PREFIX_EVEX_0F38C7_REG_1,
	PREFIX_EVEX_0F38C7_REG_2, PREFIX_EVEX_0F38C7_REG_5,
	PREFIX_EVEX_0F38C7_REG_6, PREFIX_EVEX_0F38C8, PREFIX_EVEX_0F38CA,
	PREFIX_EVEX_0F38CB, PREFIX_EVEX_0F38CC, PREFIX_EVEX_0F38CD,
	PREFIX_EVEX_0F3A00,  PREFIX_EVEX_0F3A01, PREFIX_EVEX_0F3A03,
	PREFIX_EVEX_0F3A04, PREFIX_EVEX_0F3A05, PREFIX_EVEX_0F3A08,
	PREFIX_EVEX_0F3A09, PREFIX_EVEX_0F3A0A, PREFIX_EVEX_0F3A0B,
	PREFIX_EVEX_0F3A17, PREFIX_EVEX_0F3A18, PREFIX_EVEX_0F3A19,
	PREFIX_EVEX_0F3A1A, PREFIX_EVEX_0F3A1B, PREFIX_EVEX_0F3A1D,
	PREFIX_EVEX_0F3A1E, PREFIX_EVEX_0F3A1F, PREFIX_EVEX_0F3A21,
	PREFIX_EVEX_0F3A23, PREFIX_EVEX_0F3A25, PREFIX_EVEX_0F3A26,
	PREFIX_EVEX_0F3A27, PREFIX_EVEX_0F3A38, PREFIX_EVEX_0F3A39,
	PREFIX_EVEX_0F3A3A, PREFIX_EVEX_0F3A3B, PREFIX_EVEX_0F3A3E,
	PREFIX_EVEX_0F3A3F, PREFIX_EVEX_0F3A43, PREFIX_EVEX_0F3A54,
	PREFIX_EVEX_0F3A55.
	(VEX_LEN enum): Add VEX_LEN_0F41_P_0, VEX_LEN_0F42_P_0, VEX_LEN_0F44_P_0,
	VEX_LEN_0F45_P_0, VEX_LEN_0F46_P_0, VEX_LEN_0F47_P_0,
	VEX_LEN_0F4B_P_2, VEX_LEN_0F90_P_0, VEX_LEN_0F91_P_0,
	VEX_LEN_0F92_P_0, VEX_LEN_0F93_P_0, VEX_LEN_0F98_P_0,
	VEX_LEN_0F3A30_P_2, VEX_LEN_0F3A32_P_2, VEX_W_0F41_P_0_LEN_1,
	VEX_W_0F42_P_0_LEN_1, VEX_W_0F44_P_0_LEN_0, VEX_W_0F45_P_0_LEN_1,
	VEX_W_0F46_P_0_LEN_1, VEX_W_0F47_P_0_LEN_1, VEX_W_0F4B_P_2_LEN_1,
	VEX_W_0F90_P_0_LEN_0, VEX_W_0F91_P_0_LEN_0, VEX_W_0F92_P_0_LEN_0,
	VEX_W_0F93_P_0_LEN_0, VEX_W_0F98_P_0_LEN_0, VEX_W_0F3A30_P_2_LEN_0,
	VEX_W_0F3A32_P_2_LEN_0.
	(VEX_W enum): Add EVEX_W_0F10_P_0, EVEX_W_0F10_P_1_M_0,
	EVEX_W_0F10_P_1_M_1, EVEX_W_0F10_P_2, EVEX_W_0F10_P_3_M_0,
	EVEX_W_0F10_P_3_M_1, EVEX_W_0F11_P_0, EVEX_W_0F11_P_1_M_0,
	EVEX_W_0F11_P_1_M_1, EVEX_W_0F11_P_2, EVEX_W_0F11_P_3_M_0,
	EVEX_W_0F11_P_3_M_1, EVEX_W_0F12_P_0_M_0, EVEX_W_0F12_P_0_M_1,
	EVEX_W_0F12_P_1, EVEX_W_0F12_P_2, EVEX_W_0F12_P_3, EVEX_W_0F13_P_0,
	EVEX_W_0F13_P_2, EVEX_W_0F14_P_0, EVEX_W_0F14_P_2, EVEX_W_0F15_P_0,
	EVEX_W_0F15_P_2, EVEX_W_0F16_P_0_M_0, EVEX_W_0F16_P_0_M_1,
	EVEX_W_0F16_P_1, EVEX_W_0F16_P_2, EVEX_W_0F17_P_0, EVEX_W_0F17_P_2,
	EVEX_W_0F28_P_0, EVEX_W_0F28_P_2, EVEX_W_0F29_P_0, EVEX_W_0F29_P_2,
	EVEX_W_0F2A_P_1, EVEX_W_0F2A_P_3, EVEX_W_0F2B_P_0, EVEX_W_0F2B_P_2,
	EVEX_W_0F2E_P_0, EVEX_W_0F2E_P_2, EVEX_W_0F2F_P_0, EVEX_W_0F2F_P_2,
	EVEX_W_0F51_P_0, EVEX_W_0F51_P_1, EVEX_W_0F51_P_2, EVEX_W_0F51_P_3,
	EVEX_W_0F58_P_0, EVEX_W_0F58_P_1, EVEX_W_0F58_P_2, EVEX_W_0F58_P_3,
	EVEX_W_0F59_P_0, EVEX_W_0F59_P_1, EVEX_W_0F59_P_2, EVEX_W_0F59_P_3,
	EVEX_W_0F5A_P_0, EVEX_W_0F5A_P_1, EVEX_W_0F5A_P_2, EVEX_W_0F5A_P_3,
	EVEX_W_0F5B_P_0, EVEX_W_0F5B_P_1, EVEX_W_0F5B_P_2, EVEX_W_0F5C_P_0,
	EVEX_W_0F5C_P_1, EVEX_W_0F5C_P_2, EVEX_W_0F5C_P_3, EVEX_W_0F5D_P_0,
	EVEX_W_0F5D_P_1, EVEX_W_0F5D_P_2, EVEX_W_0F5D_P_3, EVEX_W_0F5E_P_0,
	EVEX_W_0F5E_P_1, EVEX_W_0F5E_P_2, EVEX_W_0F5E_P_3, EVEX_W_0F5F_P_0,
	EVEX_W_0F5F_P_1, EVEX_W_0F5F_P_2, EVEX_W_0F5F_P_3, EVEX_W_0F62_P_2,
	EVEX_W_0F66_P_2, EVEX_W_0F6A_P_2, EVEX_W_0F6C_P_2, EVEX_W_0F6D_P_2,
	EVEX_W_0F6E_P_2, EVEX_W_0F6F_P_1, EVEX_W_0F6F_P_2, EVEX_W_0F70_P_2,
	EVEX_W_0F72_R_2_P_2, EVEX_W_0F72_R_6_P_2, EVEX_W_0F73_R_2_P_2,
	EVEX_W_0F73_R_6_P_2, EVEX_W_0F76_P_2, EVEX_W_0F78_P_0,
	EVEX_W_0F79_P_0, EVEX_W_0F7A_P_1, EVEX_W_0F7A_P_3, EVEX_W_0F7B_P_1,
	EVEX_W_0F7B_P_3, EVEX_W_0F7E_P_1, EVEX_W_0F7E_P_2, EVEX_W_0F7F_P_1,
	EVEX_W_0F7F_P_2, EVEX_W_0FC2_P_0, EVEX_W_0FC2_P_1, EVEX_W_0FC2_P_2,
	EVEX_W_0FC2_P_3, EVEX_W_0FC6_P_0, EVEX_W_0FC6_P_2, EVEX_W_0FD2_P_2,
	EVEX_W_0FD3_P_2, EVEX_W_0FD4_P_2, EVEX_W_0FD6_P_2, EVEX_W_0FE6_P_1,
	EVEX_W_0FE6_P_2, EVEX_W_0FE6_P_3, EVEX_W_0FE7_P_2, EVEX_W_0FF2_P_2,
	EVEX_W_0FF3_P_2, EVEX_W_0FF4_P_2, EVEX_W_0FFA_P_2, EVEX_W_0FFB_P_2,
	EVEX_W_0FFE_P_2, EVEX_W_0F380C_P_2, EVEX_W_0F380D_P_2,
	EVEX_W_0F3811_P_1, EVEX_W_0F3812_P_1, EVEX_W_0F3813_P_1,
	EVEX_W_0F3813_P_2, EVEX_W_0F3814_P_1, EVEX_W_0F3815_P_1,
	EVEX_W_0F3818_P_2, EVEX_W_0F3819_P_2, EVEX_W_0F381A_P_2,
	EVEX_W_0F381B_P_2, EVEX_W_0F381E_P_2, EVEX_W_0F381F_P_2,
	EVEX_W_0F3821_P_1, EVEX_W_0F3822_P_1, EVEX_W_0F3823_P_1,
	EVEX_W_0F3824_P_1, EVEX_W_0F3825_P_1, EVEX_W_0F3825_P_2,
	EVEX_W_0F3828_P_2, EVEX_W_0F3829_P_2, EVEX_W_0F382A_P_1,
	EVEX_W_0F382A_P_2, EVEX_W_0F3831_P_1, EVEX_W_0F3832_P_1,
	EVEX_W_0F3833_P_1, EVEX_W_0F3834_P_1, EVEX_W_0F3835_P_1,
	EVEX_W_0F3835_P_2, EVEX_W_0F3837_P_2, EVEX_W_0F383A_P_1,
	EVEX_W_0F3840_P_2, EVEX_W_0F3858_P_2, EVEX_W_0F3859_P_2,
	EVEX_W_0F385A_P_2, EVEX_W_0F385B_P_2, EVEX_W_0F3891_P_2,
	EVEX_W_0F3893_P_2, EVEX_W_0F38A1_P_2, EVEX_W_0F38A3_P_2,
	EVEX_W_0F38C7_R_1_P_2, EVEX_W_0F38C7_R_2_P_2, EVEX_W_0F38C7_R_5_P_2,
	EVEX_W_0F38C7_R_6_P_2, EVEX_W_0F3A00_P_2, EVEX_W_0F3A01_P_2,
	EVEX_W_0F3A04_P_2, EVEX_W_0F3A05_P_2, EVEX_W_0F3A08_P_2,
	EVEX_W_0F3A09_P_2, EVEX_W_0F3A0A_P_2, EVEX_W_0F3A0B_P_2,
	EVEX_W_0F3A18_P_2, EVEX_W_0F3A19_P_2, EVEX_W_0F3A1A_P_2,
	EVEX_W_0F3A1B_P_2, EVEX_W_0F3A1D_P_2, EVEX_W_0F3A21_P_2,
	EVEX_W_0F3A23_P_2, EVEX_W_0F3A38_P_2, EVEX_W_0F3A39_P_2,
	EVEX_W_0F3A3A_P_2, EVEX_W_0F3A3B_P_2, EVEX_W_0F3A43_P_2.
	(struct vex): Add fields evex, r, v, mask_register_specifier,
	zeroing, ll, b.
	(intel_names_xmm): Add upper 16 registers.
	(att_names_xmm): Ditto.
	(intel_names_ymm): Ditto.
	(att_names_ymm): Ditto.
	(names_zmm): New.
	(intel_names_zmm): Ditto.
	(att_names_zmm): Ditto.
	(names_mask): Ditto.
	(intel_names_mask): Ditto.
	(att_names_mask): Ditto.
	(names_rounding): Ditto.
	(names_broadcast): Ditto.
	(x86_64_table): Add escape to evex-table.
	(reg_table): Include reg_table evex-entries from
	i386-dis-evex.h.  Fix prefetchwt1 instruction.
	(prefix_table): Add entries for new instructions.
	(vex_table): Ditto.
	(vex_len_table): Ditto.
	(vex_w_table): Ditto.
	(mod_table): Ditto.
	(get_valid_dis386): Properly handle new instructions.
	(print_insn): Handle zmm and mask registers, print mask operand.
	(intel_operand_size): Support EVEX, new modes and sizes.
	(OP_E_register): Handle new modes.
	(OP_E_memory): Ditto.
	(OP_G): Ditto.
	(OP_XMM): Ditto.
	(OP_EX): Ditto.
	(OP_VEX): Ditto.
	* i386-gen.c (cpu_flag_init): Update CPU_ANY_SSE_FLAGS and
	CPU_ANY_AVX_FLAGS.  Add CPU_AVX512F_FLAGS, CPU_AVX512CD_FLAGS,
	CPU_AVX512ER_FLAGS and CPU_AVX512PF_FLAGS.
	(cpu_flags): Add CpuAVX512F, CpuAVX512CD, CpuAVX512ER,
	CpuAVX512PF and CpuVREX.
	(operand_type_init): Add OPERAND_TYPE_REGZMM,
	OPERAND_TYPE_REGMASK and OPERAND_TYPE_VEC_DISP8.
	(opcode_modifiers): Add EVex, Masking, VecESize, Broadcast,
	StaticRounding, SAE, Disp8MemShift, NoDefMask.
	(operand_types): Add RegZMM, RegMask, Vec_Disp8, Zmmword.
	* i386-init.h: Regenerate.
	* i386-opc.h (CpuAVX512F): New.
	(CpuAVX512CD): New.
	(CpuAVX512ER): New.
	(CpuAVX512PF): New.
	(CpuVREX): New.
	(i386_cpu_flags): Add cpuavx512f, cpuavx512cd, cpuavx512er,
	cpuavx512pf and cpuvrex fields.
	(VecSIB): Add VecSIB512.
	(EVex): New.
	(Masking): New.
	(VecESize): New.
	(Broadcast): New.
	(StaticRounding): New.
	(SAE): New.
	(Disp8MemShift): New.
	(NoDefMask): New.
	(i386_opcode_modifier): Add evex, masking, vecesize, broadcast,
	staticrounding, sae, disp8memshift and nodefmask.
	(RegZMM): New.
	(Zmmword): Ditto.
	(Vec_Disp8): Ditto.
	(i386_operand_type): Add regzmm, regmask, zmmword and vec_disp8
	fields.
	(RegVRex): New.
	* i386-opc.tbl: Add AVX512 instructions.
	* i386-reg.tbl: Add 16 upper XMM and YMM registers, 32 new ZMM
	registers, mask registers.
	* i386-tbl.h: Regenerate.
@
text
@d178 6
@


1.56
log
@Support Intel SHA

gas/

2013-07-25  Michael Zolotukhin  <michael.v.zolotukhin@@intel.com>

	* config/tc-i386.c (cpu_arch): Add .sha.
	* doc/c-i386.texi: Document sha/.sha.

gas/testsuite/

2013-07-25  Michael Zolotukhin  <michael.v.zolotukhin@@intel.com>

	* gas/i386/sha.d: New.
	* gas/i386/sha.s: New.
	* gas/i386/x86-64-sha.d: New.
	* gas/i386/x86-64-sha.s: New.
	* gas/i386/i386.exp: Run new SHA tests.

opcodes/

2013-07-25  Michael Zolotukhin  <michael.v.zolotukhin@@intel.com>

	* i386-dis.c (PREFIX enum): Add PREFIX_0F38C8, PREFIX_0F38C9,
	PREFIX_0F38CA, PREFIX_0F38CB, PREFIX_0F38CC, PREFIX_0F38CD,
	PREFIX_0F3ACC.
	(prefix_table): Updated.
	(three_byte_table): Likewise.
	* i386-gen.c (cpu_flag_init): Add CPU_SHA_FLAGS.
	(cpu_flags): Add CpuSHA.
	(i386_cpu_flags): Add cpusha.
	* i386-init.h: Regenerate.
	* i386-opc.h (CpuSHA): New.
	(CpuUnused): Restored.
	(i386_cpu_flags): Add cpusha.
	* i386-opc.tbl: Add SHA instructions.
	* i386-tbl.h: Regenerate.
@
text
@d24 1
a24 1
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1,  \
d26 1
a26 1
      1, 1, 1, 0, 1, 1 } }
d32 1
a32 1
      0, 0, 0, 0, 0, 0 } }
d37 2
a38 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,  \
      0, 0, 0, 0, 0, 0 } }
d44 1
a44 1
      0, 0, 0, 0, 0, 0 } }
d50 1
a50 1
      0, 0, 0, 0, 0, 0 } }
d56 1
a56 1
      0, 0, 0, 0, 0, 0 } }
d62 1
a62 1
      0, 0, 0, 0, 0, 0 } }
d68 1
a68 1
      0, 0, 0, 0, 0, 0 } }
d74 1
a74 1
      0, 0, 0, 0, 0, 0 } }
d80 1
a80 1
      0, 0, 0, 0, 0, 0 } }
d86 1
a86 1
      0, 0, 0, 0, 0, 0 } }
d92 1
a92 1
      0, 0, 0, 0, 0, 0 } }
d98 1
a98 1
      0, 0, 0, 0, 0, 0 } }
d104 1
a104 1
      0, 0, 0, 0, 0, 0 } }
d109 2
a110 2
      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,  \
      0, 0, 0, 0, 0, 0 } }
d115 2
a116 2
      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0 } }
d121 2
a122 2
      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,  \
      0, 0, 0, 0, 0, 0 } }
d127 2
a128 2
      0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,  \
      0, 0, 0, 0, 0, 0 } }
d134 1
a134 1
      0, 0, 0, 0, 0, 0 } }
d140 1
a140 1
      0, 0, 0, 0, 0, 0 } }
d146 1
a146 1
      0, 0, 0, 0, 0, 0 } }
d151 2
a152 2
      0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,  \
      0, 0, 0, 0, 0, 0 } }
d157 2
a158 2
      0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,  \
      0, 0, 0, 0, 0, 0 } }
d162 3
a164 3
      0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1,  \
      1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0,  \
      1, 0, 0, 0, 0, 0 } }
d168 3
a170 3
      0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1,  \
      1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0,  \
      1, 0, 0, 0, 0, 0 } }
d174 3
a176 3
      0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1,  \
      1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0,  \
      1, 0, 0, 0, 0, 0 } }
d181 2
a182 2
      0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0,  \
      1, 0, 0, 0, 0, 0 } }
d186 3
a188 3
      0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0,  \
      0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0,  \
      1, 0, 0, 0, 0, 0 } }
d194 1
a194 1
      0, 0, 0, 0, 0, 0 } }
d200 1
a200 1
      0, 0, 0, 0, 0, 0 } }
d206 1
a206 1
      0, 0, 0, 0, 0, 0 } }
d212 1
a212 1
      0, 0, 0, 0, 0, 0 } }
d218 1
a218 1
      0, 0, 0, 0, 0, 0 } }
d224 1
a224 1
      0, 0, 0, 0, 0, 0 } }
d230 1
a230 1
      0, 0, 0, 0, 0, 0 } }
d236 1
a236 1
      0, 0, 0, 0, 0, 0 } }
d242 1
a242 1
      0, 0, 0, 0, 0, 0 } }
d248 1
a248 1
      0, 0, 0, 0, 0, 0 } }
d254 1
a254 1
      0, 0, 0, 0, 0, 0 } }
d260 1
a260 1
      0, 0, 0, 0, 0, 0 } }
d266 1
a266 1
      0, 0, 0, 0, 0, 0 } }
d272 1
a272 1
      0, 0, 0, 0, 0, 0 } }
d276 1
a276 1
      0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
d278 1
a278 1
      0, 0, 0, 0, 0, 0 } }
d284 1
a284 1
      0, 0, 0, 0, 0, 0 } }
d290 1
a290 1
      0, 0, 0, 0, 0, 0 } }
d294 1
a294 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,  \
d296 1
a296 1
      0, 0, 0, 0, 0, 0 } }
d300 1
a300 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,  \
d302 1
a302 1
      0, 0, 0, 0, 0, 0 } }
d306 1
a306 1
      0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,  \
d308 1
a308 1
      0, 0, 0, 0, 0, 0 } }
d312 3
a314 3
      0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0 } }
d318 3
a320 3
      0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0 } }
d324 3
a326 3
      0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0 } }
d330 3
a332 3
      0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0 } }
d337 2
a338 2
      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0 } }
d343 2
a344 2
      0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0 } }
d349 2
a350 2
      0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0 } }
d355 2
a356 2
      0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0 } }
d361 2
a362 2
      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0 } }
d367 2
a368 2
      0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0 } }
d373 2
a374 2
      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0 } }
d379 2
a380 2
      0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0 } }
d385 2
a386 2
      0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0 } }
d391 2
a392 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0 } }
d397 2
a398 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0 } }
d403 2
a404 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0 } }
d409 2
a410 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0 } }
d415 2
a416 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0 } }
d421 2
a422 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0 } }
d427 2
a428 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0 } }
d434 1
a434 1
      0, 0, 0, 0, 0, 0 } }
d440 1
a440 1
      0, 0, 0, 0, 0, 0 } }
d446 1
a446 1
      0, 0, 0, 0, 0, 0 } }
d452 1
a452 1
      0, 0, 0, 0, 0, 0 } }
d458 1
a458 1
      0, 0, 0, 0, 0, 0 } }
d464 1
a464 1
      0, 0, 0, 0, 0, 0 } }
d470 1
a470 1
      0, 0, 0, 0, 0, 0 } }
d476 25
a500 1
      0, 0, 0, 0, 0, 0 } }
d504 1
a504 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
d506 1
a506 1
      0, 0, 0, 0, 0, 0 } }
d512 1
a512 1
      1, 1, 1, 0, 1, 1 } }
d518 1
a518 1
      1, 1, 1, 0, 1, 1 } }
d523 2
a524 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,  \
      0, 0, 0, 0, 0, 0 } }
d529 2
a530 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,  \
      0, 0, 0, 0, 0, 0 } }
d536 1
a536 1
      1, 0, 0, 0, 0, 0 } }
d542 1
a542 1
      0, 1, 0, 0, 0, 0 } }
d547 2
a548 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0 } }
d554 1
a554 1
      0, 0, 1, 0, 0, 0 } }
d560 1
a560 1
      0, 0, 0, 0, 0, 0, 0 } }
d565 1
a565 1
      0, 0, 0, 0, 0, 0, 0 } }
d570 1
a570 1
      0, 0, 0, 0, 0, 0, 0 } }
d575 1
a575 1
      0, 0, 0, 0, 0, 0, 0 } }
d580 1
a580 1
      0, 0, 0, 0, 0, 0, 0 } }
d583 1
a583 1
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, \
d585 1
a585 1
      0, 0, 0, 0, 0, 0, 0 } }
d588 1
a588 1
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, \
d590 1
a590 1
      0, 0, 0, 0, 0, 0, 0 } }
d593 1
a593 1
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, \
d595 1
a595 1
      0, 0, 0, 0, 0, 0, 0 } }
d598 1
a598 1
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, \
d600 1
a600 1
      0, 0, 0, 0, 0, 0, 0 } }
d603 1
a603 1
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, \
d605 1
a605 1
      0, 0, 0, 0, 0, 0, 0 } }
d608 3
a610 3
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0 } }
d613 3
a615 3
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0 } }
d619 2
a620 2
      0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0 } }
d624 2
a625 2
      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0 } }
d629 2
a630 2
      0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0 } }
d634 2
a635 2
      0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0 } }
d639 2
a640 2
      0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0 } }
d644 2
a645 2
      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0 } }
d649 2
a650 2
      0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0 } }
d654 2
a655 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0 } }
d658 1
a658 1
  { { 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
d660 1
a660 1
      0, 0, 0, 0, 0, 0, 0 } }
d663 1
a663 1
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
d665 1
a665 1
      0, 0, 0, 0, 0, 0, 0 } }
d670 1
a670 1
      0, 0, 0, 0, 0, 0, 0 } }
d675 1
a675 1
      0, 0, 0, 0, 0, 0, 0 } }
d679 2
a680 2
      0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0 } }
d683 1
a683 1
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, \
d685 1
a685 1
      0, 0, 0, 0, 0, 0, 0 } }
d688 1
a688 1
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, \
d690 1
a690 1
      0, 0, 0, 0, 0, 0, 0 } }
d694 2
a695 2
      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0 } }
d699 2
a700 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0 } }
d705 1
a705 1
      0, 0, 0, 0, 0, 0, 0 } }
d710 1
a710 1
      0, 0, 0, 0, 0, 0, 0 } }
d715 11
a725 1
      0, 0, 0, 0, 0, 0, 0 } }
d729 2
a730 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0 } }
d734 2
a735 2
      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0 } }
d739 2
a740 2
      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, \
      0, 0, 0, 0, 0, 0, 0 } }
d744 2
a745 2
      0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0 } }
d749 2
a750 2
      0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0 } }
d754 2
a755 2
      0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0 } }
d759 2
a760 2
      1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0 } }
d763 1
a763 1
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, \
d765 1
a765 1
      0, 0, 0, 0, 0, 0, 0 } }
d768 3
a770 3
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0 } }
d773 3
a775 3
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0 } }
d778 3
a780 3
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0 } }
d783 3
a785 3
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, \
      0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0 } }
d788 3
a790 3
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, \
      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0 } }
d793 3
a795 3
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, \
      0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0 } }
d798 3
a800 3
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, \
      0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0 } }
d805 1
a805 1
      0, 0, 0, 0, 1, 0, 0 } }
d810 6
a815 1
      0, 0, 0, 0, 0, 1, 0 } }
@


1.55
log
@Support Intel MPX

gas/

2013-07-24  Anna Tikhonova  <anna.tikhonova@@intel.com>
	    Kirill Yukhin  <kirill.yukhin@@intel.com>
	    Michael Zolotukhin  <michael.v.zolotukhin@@intel.com>

	* config/tc-i386.c (BND_PREFIX): New.
	(struct _i386_insn): Add new field bnd_prefix.
	(add_bnd_prefix): New.
	(cpu_arch): Add MPX.
	(i386_operand_type): Add regbnd.
	(md_assemble): Handle BND prefixes.
	(parse_insn): Likewise.
	(output_branch): Likewise.
	(output_jump): Likewise.
	(build_modrm_byte): Handle regbnd.
	(OPTION_MADD_BND_PREFIX): New.
	(md_longopts): Add entry for 'madd-bnd-prefix'.
	(md_parse_option): Handle madd-bnd-prefix option.
	(md_show_usage): Add description for madd-bnd-prefix
	option.
	* doc/c-i386.texi: Document mpx/.mpx and -madd-bnd-prefix.

gas/testsuite/

2013-07-24  Anna Tikhonova  <anna.tikhonova@@intel.com>
	    Kirill Yukhin  <kirill.yukhin@@intel.com>
	    Michael Zolotukhin  <michael.v.zolotukhin@@intel.com>

	* gas/i386/mpx-add-bnd-prefix.s: New.
	* gas/i386/mpx-add-bnd-prefix.d: New.
	* gas/i386/mpx-inval-1.l: New.
	* gas/i386/mpx-inval-1.s: New.
	* gas/i386/mpx.d: New.
	* gas/i386/mpx.s: New.
	* gas/i386/x86-64-mpx-add-bnd-prefix.d: New.
	* gas/i386/x86-64-mpx-add-bnd-prefix.s: New.
	* gas/i386/x86-64-mpx-addr32.d: New.
	* gas/i386/x86-64-mpx-addr32.s: New.
	* gas/i386/x86-64-mpx-inval-1.l: New.
	* gas/i386/x86-64-mpx-inval-1.s: New.
	* gas/i386/x86-64-mpx-inval-2.l: New.
	* gas/i386/x86-64-mpx-inval-2.s: New.
	* gas/i386/x86-64-mpx.d: New.
	* gas/i386/x86-64-mpx.s: New.
	* gas/i386/nops.d: Adjust to MPX changes.
	* gas/i386/nops.s: Likewise.
	* gas/i386/x86-64-nops.d: Likewise.
	* gas/i386/x86-64-nops.s: Likewise.
	* gas/i386/ilp32/x86-64-nops.d: Likewise.
	* gas/i386/i386.exp: Run new MPX tests.

include/opcode/

2013-07-24  Anna Tikhonova  <anna.tikhonova@@intel.com>
	    Kirill Yukhin  <kirill.yukhin@@intel.com>
	    Michael Zolotukhin  <michael.v.zolotukhin@@intel.com>

	* i386.h (BND_PREFIX_OPCODE): New.

opcodes/

2013-07-24  Anna Tikhonova  <anna.tikhonova@@intel.com>
	    Kirill Yukhin  <kirill.yukhin@@intel.com>
	    Michael Zolotukhin  <michael.v.zolotukhin@@intel.com>

	* i386-dis.c (BND_Fixup): New.
	(Ebnd): New.
	(Ev_bnd): New.
	(Gbnd): New.
	(BND): New.
	(v_bnd_mode): New.
	(bnd_mode): New.
	(MOD enum): Add new entries.
	(PREFIX enum): Likewise.
	(dis tables): Replace XX with BND for near branch and call
	instructions.
	(prefix_table): Add new entries.
	(mod_table): Likewise.
	(names_bnd): New.
	(intel_names_bnd): New.
	(att_names_bnd): New.
	(BND_PREFIX): New.
	(prefix_name): Handle BND_PREFIX.
	(print_insn): Initialize names_bnd.
	(intel_operand_size): Handle new modes.
	(OP_E_register): Likewise.
	(OP_E_memory): Likewise.
	(OP_G): Likewise.
	* i386-gen.c (cpu_flag_init): Add CpuMPX.
	(cpu_flags): Add CpuMPX.
	(operand_type_init): Add RegBND.
	(opcode_modifiers): Add BNDPrefixOk.
	(operand_types): Add RegBND.
	* i386-init.h: Regenerate.
	* i386-opc.h (CpuMPX): New.
	(CpuUnused): Comment out.
	(i386_cpu_flags): Add cpumpx.
	(BNDPrefixOk): New.
	(i386_opcode_modifier): Add bndprefixok.
	(RegBND): New.
	(i386_operand_type): Add regbnd.
	* i386-opc.tbl: Add BNDPrefixOk to near jumps, calls and rets.
	Add MPX instructions and bnd prefix.
	* i386-reg.tbl: Add bnd0-bnd3 registers.
	* i386-tbl.h: Regenerate.
@
text
@d26 1
a26 1
      1, 1, 0, 1 } }
d32 1
a32 1
      0, 0, 0, 0 } }
d38 1
a38 1
      0, 0, 0, 0 } }
d44 1
a44 1
      0, 0, 0, 0 } }
d50 1
a50 1
      0, 0, 0, 0 } }
d56 1
a56 1
      0, 0, 0, 0 } }
d62 1
a62 1
      0, 0, 0, 0 } }
d68 1
a68 1
      0, 0, 0, 0 } }
d74 1
a74 1
      0, 0, 0, 0 } }
d80 1
a80 1
      0, 0, 0, 0 } }
d86 1
a86 1
      0, 0, 0, 0 } }
d92 1
a92 1
      0, 0, 0, 0 } }
d98 1
a98 1
      0, 0, 0, 0 } }
d104 1
a104 1
      0, 0, 0, 0 } }
d110 1
a110 1
      0, 0, 0, 0 } }
d116 1
a116 1
      0, 0, 0, 0 } }
d122 1
a122 1
      0, 0, 0, 0 } }
d128 1
a128 1
      0, 0, 0, 0 } }
d134 1
a134 1
      0, 0, 0, 0 } }
d140 1
a140 1
      0, 0, 0, 0 } }
d146 1
a146 1
      0, 0, 0, 0 } }
d152 1
a152 1
      0, 0, 0, 0 } }
d158 1
a158 1
      0, 0, 0, 0 } }
d164 1
a164 1
      1, 0, 0, 0 } }
d170 1
a170 1
      1, 0, 0, 0 } }
d176 1
a176 1
      1, 0, 0, 0 } }
d182 1
a182 1
      1, 0, 0, 0 } }
d188 1
a188 1
      1, 0, 0, 0 } }
d194 1
a194 1
      0, 0, 0, 0 } }
d200 1
a200 1
      0, 0, 0, 0 } }
d206 1
a206 1
      0, 0, 0, 0 } }
d212 1
a212 1
      0, 0, 0, 0 } }
d218 1
a218 1
      0, 0, 0, 0 } }
d224 1
a224 1
      0, 0, 0, 0 } }
d230 1
a230 1
      0, 0, 0, 0 } }
d236 1
a236 1
      0, 0, 0, 0 } }
d242 1
a242 1
      0, 0, 0, 0 } }
d248 1
a248 1
      0, 0, 0, 0 } }
d254 1
a254 1
      0, 0, 0, 0 } }
d260 1
a260 1
      0, 0, 0, 0 } }
d266 1
a266 1
      0, 0, 0, 0 } }
d272 1
a272 1
      0, 0, 0, 0 } }
d278 1
a278 1
      0, 0, 0, 0 } }
d284 1
a284 1
      0, 0, 0, 0 } }
d290 1
a290 1
      0, 0, 0, 0 } }
d296 1
a296 1
      0, 0, 0, 0 } }
d302 1
a302 1
      0, 0, 0, 0 } }
d308 1
a308 1
      0, 0, 0, 0 } }
d314 1
a314 1
      0, 0, 0, 0 } }
d320 1
a320 1
      0, 0, 0, 0 } }
d326 1
a326 1
      0, 0, 0, 0 } }
d332 1
a332 1
      0, 0, 0, 0 } }
d338 1
a338 1
      0, 0, 0, 0 } }
d344 1
a344 1
      0, 0, 0, 0 } }
d350 1
a350 1
      0, 0, 0, 0 } }
d356 1
a356 1
      0, 0, 0, 0 } }
d362 1
a362 1
      0, 0, 0, 0 } }
d368 1
a368 1
      0, 0, 0, 0 } }
d374 1
a374 1
      0, 0, 0, 0 } }
d380 1
a380 1
      0, 0, 0, 0 } }
d386 1
a386 1
      0, 0, 0, 0 } }
d392 1
a392 1
      0, 0, 0, 0 } }
d398 1
a398 1
      0, 0, 0, 0 } }
d404 1
a404 1
      0, 0, 0, 0 } }
d410 1
a410 1
      0, 0, 0, 0 } }
d416 1
a416 1
      0, 0, 0, 0 } }
d422 1
a422 1
      0, 0, 0, 0 } }
d428 1
a428 1
      0, 0, 0, 0 } }
d434 1
a434 1
      0, 0, 0, 0 } }
d440 1
a440 1
      0, 0, 0, 0 } }
d446 1
a446 1
      0, 0, 0, 0 } }
d452 1
a452 1
      0, 0, 0, 0 } }
d458 1
a458 1
      0, 0, 0, 0 } }
d464 1
a464 1
      0, 0, 0, 0 } }
d470 1
a470 1
      0, 0, 0, 0 } }
d476 1
a476 1
      0, 0, 0, 0 } }
d482 1
a482 1
      0, 0, 0, 0 } }
d488 1
a488 1
      1, 1, 0, 1 } }
d494 1
a494 1
      1, 1, 0, 1 } }
d500 1
a500 1
      0, 0, 0, 0 } }
d506 1
a506 1
      0, 0, 0, 0 } }
d512 1
a512 1
      1, 0, 0, 0 } }
d518 1
a518 1
      0, 1, 0, 0 } }
d524 7
a530 1
      0, 0, 0, 0 } }
@


1.54
log
@gas/
* i386-gen.c (cpu_flag_init): Add CpuFSGSBase in CPU_BDVER3_FLAGS.
* i386-init.h: Regenerated.
@
text
@d26 1
a26 1
      1, 0, 1, 1 } }
d37 1
a37 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,  \
d109 1
a109 1
      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,  \
d121 1
a121 1
      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,  \
d127 1
a127 1
      0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,  \
d151 1
a151 1
      0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,  \
d157 1
a157 1
      0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,  \
d163 2
a164 2
      1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1,  \
      0, 0, 0, 0 } }
d169 2
a170 2
      1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1,  \
      0, 0, 0, 0 } }
d175 2
a176 2
      1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1,  \
      0, 0, 0, 0 } }
d181 2
a182 2
      0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1,  \
      0, 0, 0, 0 } }
d187 2
a188 2
      0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1,  \
      0, 0, 0, 0 } }
d488 1
a488 1
      1, 0, 1, 1 } }
d494 1
a494 1
      1, 0, 1, 1 } }
d499 1
a499 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,  \
d505 1
a505 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,  \
d511 2
a512 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,  \
      0, 0, 0, 0 } }
d518 7
a524 1
      1, 0, 0, 0 } }
d530 1
a530 1
      0, 0, 0, 0, 0, 0 } }
d535 1
a535 1
      0, 0, 0, 0, 0, 0 } }
d540 1
a540 1
      0, 0, 0, 0, 0, 0 } }
d545 1
a545 1
      0, 0, 0, 0, 0, 0 } }
d550 1
a550 1
      0, 0, 0, 0, 0, 0 } }
d555 1
a555 1
      0, 0, 0, 0, 0, 0 } }
d560 1
a560 1
      0, 0, 0, 0, 0, 0 } }
d565 1
a565 1
      0, 0, 0, 0, 0, 0 } }
d570 1
a570 1
      0, 0, 0, 0, 0, 0 } }
d575 1
a575 1
      0, 0, 0, 0, 0, 0 } }
d580 1
a580 1
      0, 0, 0, 0, 0, 0 } }
d585 1
a585 1
      0, 0, 0, 0, 0, 0 } }
d590 1
a590 1
      0, 0, 0, 0, 0, 0 } }
d595 1
a595 1
      0, 0, 0, 0, 0, 0 } }
d600 1
a600 1
      0, 0, 0, 0, 0, 0 } }
d605 1
a605 1
      0, 0, 0, 0, 0, 0 } }
d610 1
a610 1
      0, 0, 0, 0, 0, 0 } }
d615 1
a615 1
      0, 0, 0, 0, 0, 0 } }
d620 1
a620 1
      0, 0, 0, 0, 0, 0 } }
d625 1
a625 1
      0, 0, 0, 0, 0, 0 } }
d630 1
a630 1
      0, 0, 0, 0, 0, 0 } }
d635 1
a635 1
      0, 0, 0, 0, 0, 0 } }
d640 1
a640 1
      0, 0, 0, 0, 0, 0 } }
d645 1
a645 1
      0, 0, 0, 0, 0, 0 } }
d650 1
a650 1
      0, 0, 0, 0, 0, 0 } }
d655 1
a655 1
      0, 0, 0, 0, 0, 0 } }
d660 1
a660 1
      0, 0, 0, 0, 0, 0 } }
d665 1
a665 1
      0, 0, 0, 0, 0, 0 } }
d670 1
a670 1
      0, 0, 0, 0, 0, 0 } }
d675 1
a675 1
      0, 0, 0, 0, 0, 0 } }
d680 1
a680 1
      0, 0, 0, 0, 0, 0 } }
d685 1
a685 1
      0, 0, 0, 0, 0, 0 } }
d690 1
a690 1
      0, 0, 0, 0, 0, 0 } }
d695 1
a695 1
      0, 0, 0, 0, 0, 0 } }
d700 1
a700 1
      0, 0, 0, 0, 0, 0 } }
d705 1
a705 1
      0, 0, 0, 0, 0, 0 } }
d710 1
a710 1
      0, 0, 0, 0, 0, 0 } }
d715 1
a715 1
      0, 0, 0, 0, 0, 0 } }
d720 1
a720 1
      0, 0, 0, 0, 0, 0 } }
d725 1
a725 1
      0, 0, 0, 0, 0, 0 } }
d730 1
a730 1
      0, 0, 0, 0, 0, 0 } }
d735 1
a735 1
      0, 0, 0, 0, 0, 0 } }
d740 1
a740 1
      0, 0, 0, 0, 0, 0 } }
d745 1
a745 1
      0, 0, 0, 0, 0, 0 } }
d750 1
a750 1
      0, 0, 0, 0, 0, 0 } }
d755 1
a755 1
      0, 0, 0, 0, 0, 0 } }
d760 1
a760 1
      0, 0, 0, 0, 0, 0 } }
d765 6
a770 1
      0, 0, 0, 0, 1, 0 } }
@


1.53
log
@Implement Intel SMAP instructions

gas/

	PR gas/15159
	* config/tc-i386.c (cpu_arch): Add ".smap".

	* doc/c-i386.texi: Document smap.

gas/testsuite/

	PR gas/15159
	* gas/i386/i386.exp: Run smap and x86-64-smap.

	* gas/i386/smap.d: New file.
	* gas/i386/smap.s: likewise.
	* gas/i386/x86-64-smap.d: likewise.

opcodes/

	PR gas/15159
	* i386-dis.c (rm_table): Add clac and stac to RM_0F01_REG_1.

	* i386-gen.c (cpu_flag_init): Add CPU_SMAP_FLAGS.
	(cpu_flags): Add CpuSMAP.

	* i386-opc.h (CpuSMAP): New.
	(i386_cpu_flags): Add cpusmap.

	* i386-opc.tbl: Add clac and stac.

	* i386-init.h: Regenerated.
	* i386-tbl.h: Likewise.
@
text
@d175 1
a175 1
      1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1,  \
@


1.52
log
@Add OPERAND_TYPE_IMM32_64

	* i386-gen.c (operand_type_init): Add OPERAND_TYPE_IMM32_64.

	* i386-init.h: Regenerated.
	* i386-tbl.h: Likewise.
@
text
@d26 1
a26 1
      0, 1, 1 } }
d32 1
a32 1
      0, 0, 0 } }
d38 1
a38 1
      0, 0, 0 } }
d44 1
a44 1
      0, 0, 0 } }
d50 1
a50 1
      0, 0, 0 } }
d56 1
a56 1
      0, 0, 0 } }
d62 1
a62 1
      0, 0, 0 } }
d68 1
a68 1
      0, 0, 0 } }
d74 1
a74 1
      0, 0, 0 } }
d80 1
a80 1
      0, 0, 0 } }
d86 1
a86 1
      0, 0, 0 } }
d92 1
a92 1
      0, 0, 0 } }
d98 1
a98 1
      0, 0, 0 } }
d104 1
a104 1
      0, 0, 0 } }
d110 1
a110 1
      0, 0, 0 } }
d116 1
a116 1
      0, 0, 0 } }
d122 1
a122 1
      0, 0, 0 } }
d128 1
a128 1
      0, 0, 0 } }
d134 1
a134 1
      0, 0, 0 } }
d140 1
a140 1
      0, 0, 0 } }
d146 1
a146 1
      0, 0, 0 } }
d152 1
a152 1
      0, 0, 0 } }
d158 1
a158 1
      0, 0, 0 } }
d164 1
a164 1
      0, 0, 0 } }
d170 1
a170 1
      0, 0, 0 } }
d176 1
a176 1
      0, 0, 0 } }
d182 1
a182 1
      0, 0, 0 } }
d188 1
a188 1
      0, 0, 0 } }
d194 1
a194 1
      0, 0, 0 } }
d200 1
a200 1
      0, 0, 0 } }
d206 1
a206 1
      0, 0, 0 } }
d212 1
a212 1
      0, 0, 0 } }
d218 1
a218 1
      0, 0, 0 } }
d224 1
a224 1
      0, 0, 0 } }
d230 1
a230 1
      0, 0, 0 } }
d236 1
a236 1
      0, 0, 0 } }
d242 1
a242 1
      0, 0, 0 } }
d248 1
a248 1
      0, 0, 0 } }
d254 1
a254 1
      0, 0, 0 } }
d260 1
a260 1
      0, 0, 0 } }
d266 1
a266 1
      0, 0, 0 } }
d272 1
a272 1
      0, 0, 0 } }
d278 1
a278 1
      0, 0, 0 } }
d284 1
a284 1
      0, 0, 0 } }
d290 1
a290 1
      0, 0, 0 } }
d296 1
a296 1
      0, 0, 0 } }
d302 1
a302 1
      0, 0, 0 } }
d308 1
a308 1
      0, 0, 0 } }
d314 1
a314 1
      0, 0, 0 } }
d320 1
a320 1
      0, 0, 0 } }
d326 1
a326 1
      0, 0, 0 } }
d332 1
a332 1
      0, 0, 0 } }
d338 1
a338 1
      0, 0, 0 } }
d344 1
a344 1
      0, 0, 0 } }
d350 1
a350 1
      0, 0, 0 } }
d356 1
a356 1
      0, 0, 0 } }
d362 1
a362 1
      0, 0, 0 } }
d368 1
a368 1
      0, 0, 0 } }
d374 1
a374 1
      0, 0, 0 } }
d380 1
a380 1
      0, 0, 0 } }
d386 1
a386 1
      0, 0, 0 } }
d392 1
a392 1
      0, 0, 0 } }
d398 1
a398 1
      0, 0, 0 } }
d404 1
a404 1
      0, 0, 0 } }
d410 1
a410 1
      0, 0, 0 } }
d416 1
a416 1
      0, 0, 0 } }
d422 1
a422 1
      0, 0, 0 } }
d428 1
a428 1
      0, 0, 0 } }
d434 1
a434 1
      0, 0, 0 } }
d440 1
a440 1
      0, 0, 0 } }
d446 1
a446 1
      0, 0, 0 } }
d452 1
a452 1
      0, 0, 0 } }
d458 1
a458 1
      0, 0, 0 } }
d464 1
a464 1
      0, 0, 0 } }
d470 1
a470 1
      0, 0, 0 } }
d476 1
a476 1
      0, 0, 0 } }
d482 1
a482 1
      0, 0, 0 } }
d488 1
a488 1
      0, 1, 1 } }
d494 1
a494 1
      0, 1, 1 } }
d500 1
a500 1
      0, 0, 0 } }
d506 1
a506 1
      0, 0, 0 } }
d512 7
a518 1
      0, 0, 0 } }
@


1.51
log
@Add AMD bdver3 support.

gas/

	* config/tc-i386.c (cpu_arch): Add CPU_BDVER3_FLAGS.
	* doc/c-i386.texi: Add -march=bdver3 option.

gas/testsuite/

	* gas/i386/i386.exp: Run bdver3 test cases.
	* gas/i386/nops-1-bdver3.d: New.
	* gas/i386/arch-10-bdver3.d: New.
	* gas/i386/x86-64-nops-1-bdver3.d: New.
	* gas/i386/x86-64-arch-2-bdver3.d: New.

opcodes/

	* i386-gen.c (cpu_flag_init): Add CPU_BDVER3_FLAGS.
	* i386-init.h: Regenerated.
@
text
@d2 1
a2 1
/* Copyright 2007, 2008, 2009, 2010, 2011
d725 5
@


1.50
log
@Add missing Cpu flags in bd and bt cores

gas/testsuite/

2012-09-25  Saravanan Ekanathan <saravanan.ekanathan@@amd.com>

	* gas/i386/arch-10-bdver1.d: New file to test bdver1 core.
	* gas/i386/x86-64-arch-2-bdver1.d: Likewise.
	* gas/i386/i386.exp: Run bdver1 testcases.
	* gas/i386/arch-10-bdver2.d: Updated -march flags.
	* gas/i386/arch-10-btver1.d: Likewise.
	* gas/i386/arch-10-btver2.d: Likewise.
	* gas/i386/x86-64-arch-2-bdver2.d: Likewise.
	* gas/i386/x86-64-arch-2-btver1.d: Likewise.
	* gas/i386/x86-64-arch-2-btver2.d: Likewise.

opcodes/

2012-09-25  Saravanan Ekanathan <saravanan.ekanathan@@amd.com>

	* gas/i386/arch-10-bdver1.d: New file to test bdver1 core.
	* gas/i386/x86-64-arch-2-bdver1.d: Likewise.
	* gas/i386/i386.exp: Run bdver1 testcases.
	* gas/i386/arch-10-bdver2.d: Updated -march flags.
	* gas/i386/arch-10-btver1.d: Likewise.
	* gas/i386/arch-10-btver2.d: Likewise.
	* gas/i386/x86-64-arch-2-bdver2.d: Likewise.
	* gas/i386/x86-64-arch-2-btver1.d: Likewise.
	* gas/i386/x86-64-arch-2-btver2.d: Likewise.
@
text
@d172 6
@


1.49
log
@Replace CpuSSE3 with CpuCX16 for cmpxchg16b

gas/

	* config/tc-i386.c (cpu_arch): Add .cx16.
	* doc/c-i386.texi: Document .cx16.

gas/testsuite/

	* gas/i386/x86-64-arch-2.s: Add test for cmpxchg16b.
	* gas/i386/x86-64-arch-2.d: Update correspondingly.
	* gas/i386/x86-64-arch-2-bdver2.d: Likewise.
	* gas/i386/x86-64-arch-2-btver1.d: Likewise.
	* gas/i386/x86-64-arch-2-btver2.d: Likewise.
	* gas/i386/x86-64-arch-2-lzcnt.d: Likewise.
	* gas/i386/x86-64-arch-2-prefetchw.d: Likewise.
	* gas/i386/ilp32/x86-64-arch-2.d: Likewise.

opcodes/

	* i386-gen.c (cpu_flag_init): Add CpuCX16 to CPU_NOCONA_FLAGS,
	CPU_CORE_FLAGS, CPU_CORE2_FLAGS, CPU_COREI7_FLAGS,
	CPU_BDVER1_FLAGS, CPU_BDVER2_FLAGS, CPU_BTVER1_FLAGS,
	CPU_BTVER2_FLAGS.  Add CPU_CX16_FLAGS.
	(cpu_flags): Add CpuCX16.
	* i386-opc.h (CpuCX16): New.
	(i386_cpu_flags): Add cpucx16.
	* i386-opc.tbl: Replace CpuSSE3 with CpuCX16 for cmpxchg16b.
	* i386-tbl.h: Regenerate.
	* i386-init.h: Likewise.
@
text
@d161 3
a163 3
  { { 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,  \
      0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,  \
      1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,  \
d167 3
a169 3
  { { 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,  \
      0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,  \
      1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,  \
d173 3
a175 3
  { { 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1,  \
      0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1,  \
d179 3
a181 3
  { { 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1,  \
      0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0,  \
      0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1,  \
@


1.48
log
@Add AMD btver1 and btver2 support

gas/

2012-08-17  Nagajyothi Eggone  <nagajyothi.eggone@@amd.com>

	* config/tc-i386.c (cpu_arch): Add CPU_BTVER1_FLAGS and
	CPU_BTVER2_FLAGS.
	(i386_align_code): Add case for PROCESSOR_BT.

	* config/tc-i386.h (enum processor_type): Add PROCESSOR_BT.

	* doc/c-i386.texi: Add -march={btver1, btver2} options.

gas/testsuite/

2012-08-17  Nagajyothi Eggone  <nagajyothi.eggone@@amd.com>

	* gas/i386/i386.exp: Run btver1 and btver2 test cases.

	* gas/i386/nops-1-btver1.d: New.
	* gas/i386/nops-1-btver2.d: New.
	* gas/i386/arch-10-btver1.d: New.
	* gas/i386/arch-10-btver2.d: New.
	* gas/i386/x86-64-nops-1-btver1.d: New.
	* gas/i386/x86-64-nops-1-btver2.d: New.
	* gas/i386/x86-64-arch-2-btver1.d: New.
	* gas/i386/x86-64-arch-2-btver2.d: New.

opcodes/

2012-08-17  Nagajyothi Eggone  <nagajyothi.eggone@@amd.com>

	* i386-gen.c (cpu_flag_init): Add CPU_BTVER1_FLAGS and
	CPU_BTVER2_FLAGS.

	* i386-opc.h: Update CpuPRFCHW comment.

	* i386-opc.tbl: Enable prefetch instruction for CpuPRFCHW.
	* i386-init.h: Regenerated.
	* i386-tbl.h: Likewise.
@
text
@d25 2
a26 2
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,  \
      1, 1 } }
d32 1
a32 1
      0, 0 } }
d37 2
a38 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,  \
      0, 0 } }
d44 1
a44 1
      0, 0 } }
d50 1
a50 1
      0, 0 } }
d56 1
a56 1
      0, 0 } }
d62 1
a62 1
      0, 0 } }
d68 1
a68 1
      0, 0 } }
d74 1
a74 1
      0, 0 } }
d80 1
a80 1
      0, 0 } }
d86 1
a86 1
      0, 0 } }
d92 1
a92 1
      0, 0 } }
d98 1
a98 1
      0, 0 } }
d104 1
a104 1
      0, 0 } }
d109 2
a110 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,  \
      0, 0 } }
d115 2
a116 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0 } }
d121 2
a122 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,  \
      0, 0 } }
d127 2
a128 2
      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,  \
      0, 0 } }
d134 1
a134 1
      0, 0 } }
d140 1
a140 1
      0, 0 } }
d146 1
a146 1
      0, 0 } }
d151 2
a152 2
      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,  \
      0, 0 } }
d157 2
a158 2
      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,  \
      0, 0 } }
d163 2
a164 2
      1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,  \
      0, 0 } }
d169 2
a170 2
      1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,  \
      0, 0 } }
d175 2
a176 2
      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0,  \
      0, 0 } }
d181 2
a182 2
      0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0,  \
      0, 0 } }
d188 1
a188 1
      0, 0 } }
d194 1
a194 1
      0, 0 } }
d200 1
a200 1
      0, 0 } }
d206 1
a206 1
      0, 0 } }
d212 1
a212 1
      0, 0 } }
d218 1
a218 1
      0, 0 } }
d224 1
a224 1
      0, 0 } }
d230 1
a230 1
      0, 0 } }
d236 1
a236 1
      0, 0 } }
d242 1
a242 1
      0, 0 } }
d248 1
a248 1
      0, 0 } }
d254 1
a254 1
      0, 0 } }
d260 1
a260 1
      0, 0 } }
d266 1
a266 1
      0, 0 } }
d272 1
a272 1
      0, 0 } }
d278 1
a278 1
      0, 0 } }
d284 1
a284 1
      0, 0 } }
d290 1
a290 1
      0, 0 } }
d296 1
a296 1
      0, 0 } }
d302 1
a302 1
      0, 0 } }
d308 1
a308 1
      0, 0 } }
d314 1
a314 1
      0, 0 } }
d320 1
a320 1
      0, 0 } }
d326 1
a326 1
      0, 0 } }
d332 1
a332 1
      0, 0 } }
d338 1
a338 1
      0, 0 } }
d344 1
a344 1
      0, 0 } }
d350 7
a356 1
      0, 0 } }
d361 2
a362 2
      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0 } }
d367 2
a368 2
      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0 } }
d373 2
a374 2
      0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0 } }
d379 2
a380 2
      0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0 } }
d385 2
a386 2
      0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0 } }
d391 2
a392 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0 } }
d397 2
a398 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0 } }
d403 2
a404 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0 } }
d409 2
a410 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0 } }
d415 2
a416 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,  \
      0, 0 } }
d421 2
a422 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,  \
      0, 0 } }
d428 1
a428 1
      0, 0 } }
d434 1
a434 1
      0, 0 } }
d440 1
a440 1
      0, 0 } }
d446 1
a446 1
      0, 0 } }
d452 1
a452 1
      0, 0 } }
d458 1
a458 1
      0, 0 } }
d464 1
a464 1
      0, 0 } }
d470 1
a470 1
      0, 0 } }
d476 1
a476 1
      0, 0 } }
d481 2
a482 2
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,  \
      1, 1 } }
d487 2
a488 2
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,  \
      1, 1 } }
d493 2
a494 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,  \
      0, 0 } }
d499 2
a500 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,  \
      0, 0 } }
d505 2
a506 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,  \
      0, 0 } }
@


1.47
log
@Enable FMA instructions for bdver2

gas/testsuite/

	PR gas/14423
	* gas/i386/arch-10-bdver2.d: New file.
	* gas/i386/x86-64-arch-2-bdver2.d: Likewise.
	* gas/i386/i386.exp: Run new test

opcodes/

2012-08-11  Saravanan Ekanathan <saravanan.ekanathan@@amd.com>

	PR gas/14423
	* i386-gen.c (cpu_flag_init): Add CpuFMA in CPU_BDVER2_FLAGS.
	* i386-init.h: Regenerated.
@
text
@d172 12
@


1.46
log
@Implement RDRSEED, ADX and PRFCHW instructions

gas/

	* config/tc-i386.c: Add ADX, RDSEED and PRFCHW asm directives.
	* doc/c-i386.texi: Document the new directives.

gas/testsuite/

	* gas/i386/i386.exp: Run adx, rdseed and prefetchw tests.
	* gas/i386/x86-64-arch-2.s: Use prefetchw as 3dnow and Prfchw tests.
	* gas/i386/arch-10.s: Likewise.
	* gas/i386/arch-10-1.l: Changed correspondingly.
	* gas/i386/arch-10-2.l: Likewise.
	* gas/i386/arch-10-3.l: Likewise.
	* gas/i386/arch-10-4.l: Likewise.
	* gas/i386/arch-10.d: Likewise.
	* gas/i386/arch-10-lzcnt.d: Likewise.
	* gas/i386/x86-64-arch-2.d: Likewise.
	* gas/i386/x86-64-arch-2-lzcnt.d: Likewise.
	* gas/i386/ilp32/x86-64-arch-2.d: Likewise.
	* gas/i386/arch-10-prefetchw.d: New file.
	* gas/i386/x86-64-arch-2-prefetchw.d: Likewise.
	* gas/i386/rdseed.s: Likewise.
	* gas/i386/rdseed.d: Likewise.
	* gas/i386/rdseed-intel.d: Likewise.
	* gas/i386/adx.s: Likewise.
	* gas/i386/adx.d: Likewise.
	* gas/i386/adx-intel.d: Likewise.
	* gas/i386/x86-64-rdseed.s: Likewise.
	* gas/i386/x86-64-rdseed.d: Likewise.
	* gas/i386/x86-64-rdseed-intel.d: Likewise.
	* gas/i386/x86-64-adx.s: Likewise.
	* gas/i386/x86-64-adx.d: Likewise.
	* gas/i386/x86-64-adx-intel.d: Likewise.

opcodes/

	* i386-dis.c (PREFIX_0F38F6): New.
	(prefix_table): Add adcx, adox instructions.
	(three_byte_table): Use PREFIX_0F38F6.
	(mod_table): Add rdseed instruction.
	* i386-gen.c (cpu_flag_init): Add CpuADX, CpuRDSEED, CpuPRFCHW.
	(cpu_flags): Likewise.
	* i386-opc.h: Add CpuADX, CpuRDSEED, CpuPRFCHW.
	(i386_cpu_flags): Add fields cpurdseed, cpuadx, cpuprfchw.
	* i386-opc.tbl: Add instrcutions adcx, adox, rdseed. Extend
	prefetchw.
	* i386-tbl.h: Regenerate.
	* i386-init.h: Likewise.
@
text
@d168 1
a168 1
      0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,  \
@


1.46.4.1
log
@gas/
2012-08-11  Saravanan Ekanathan <saravanan.ekanathan@@amd.com>

	PR gas/14423
	* gas/i386/arch-10-bdver2.d: New file.
	* gas/i386/x86-64-arch-2-bdver2.d: Likewise.
	* gas/i386/i386.exp: Run new test

opcodes/
2012-08-11  Saravanan Ekanathan <saravanan.ekanathan@@amd.com>

	PR gas/14423
	* i386-gen.c (cpu_flag_init): Add CpuFMA in CPU_BDVER2_FLAGS.
	* i386-init.h: Regenerated.
@
text
@d168 1
a168 1
      0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,  \
@


1.46.4.2
log
@gas/
2012-08-17  Nagajyothi Eggone  <nagajyothi.eggone@@amd.com>

	* config/tc-i386.c (cpu_arch): Add CPU_BTVER1_FLAGS and
	CPU_BTVER2_FLAGS.
	(i386_align_code): Add case for PROCESSOR_BT.

	* config/tc-i386.h (enum processor_type): Add PROCESSOR_BT.

	* doc/c-i386.texi: Add -march={btver1, btver2} options.

gas/testsuite/
2012-08-17  Nagajyothi Eggone  <nagajyothi.eggone@@amd.com>

	* gas/i386/i386.exp: Run btver1 and btver2 test cases.

	* gas/i386/nops-1-btver1.d: New.
	* gas/i386/nops-1-btver2.d: New.
	* gas/i386/arch-10-btver1.d: New.
	* gas/i386/arch-10-btver2.d: New.
	* gas/i386/x86-64-nops-1-btver1.d: New.
	* gas/i386/x86-64-nops-1-btver2.d: New.
	* gas/i386/x86-64-arch-2-btver1.d: New.
	* gas/i386/x86-64-arch-2-btver2.d: New.

opcodes/
2012-08-17  Nagajyothi Eggone  <nagajyothi.eggone@@amd.com>

	* i386-gen.c (cpu_flag_init): Add CPU_BTVER1_FLAGS and
	CPU_BTVER2_FLAGS.

	* i386-opc.h: Update CpuPRFCHW comment.

	* i386-opc.tbl: Enable prefetch instruction for CpuPRFCHW.
	* i386-init.h: Regenerated.
	* i386-tbl.h: Likewise.
@
text
@a171 12
#define CPU_BTVER1_FLAGS \
  { { 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1,  \
      0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0,  \
      0, 0 } }

#define CPU_BTVER2_FLAGS \
  { { 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1,  \
      0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0,  \
      0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0,  \
      0, 0 } }

@


1.46.4.3
log
@gas/
2012-10-09  Nagajyothi Eggone  <nagajyothi.eggone@@amd.com>

	* config/tc-i386.c (cpu_arch): Add CPU_BDVER3_FLAGS.
	* doc/c-i386.texi: Add -march=bdver3 option.

gas/testsuite/
2012-10-09  Nagajyothi Eggone  <nagajyothi.eggone@@amd.com>

	* gas/i386/i386.exp: Run bdver3 test cases.
	* gas/i386/nops-1-bdver3.d: New.
	* gas/i386/arch-10-bdver3.d: New.
	* gas/i386/x86-64-nops-1-bdver3.d: New.
	* gas/i386/x86-64-arch-2-bdver3.d: New.

opcodes/
2012-10-09  Nagajyothi Eggone  <nagajyothi.eggone@@amd.com>

	* i386-gen.c (cpu_flag_init): Add CPU_BDVER3_FLAGS.
	* i386-init.h: Regenerated.
@
text
@a171 6
#define CPU_BDVER3_FLAGS \
  { { 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,  \
      0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1,  \
      1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0,  \
      0, 0 } }

@


1.45
log
@Implement Intel Transactional Synchronization Extensions

gas/

2012-02-08  H.J. Lu  <hongjiu.lu@@intel.com>

	* config/tc-i386.c (HLE_PREFIX): New.
	(check_hle): Likewise.
	(_i386_insn): Add have_hle.
	(cpu_arch): Add .hle and .rtm.
	(md_assemble): Call check_hle if i.have_hle isn't zero.
	(parse_insn): Set i.have_hle to 1 for HLE prefix.
	(output_jump): Support up to 2 byte opcode.

	* doc/c-i386.texi: Document hle/.hle and rtm/.rtm.

gas/testsuite/

2012-02-08  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/hle-intel.d: New.
	* gas/i386/hle.d: Likewise.
	* gas/i386/hle.s: Likewise.
	* gas/i386/hlebad.l: Likewise.
	* gas/i386/hlebad.s: Likewise.
	* gas/i386/rtm-intel.d: Likewise.
	* gas/i386/rtm.d: Likewise.
	* gas/i386/rtm.s: Likewise.
	* gas/i386/x86-64-hle-intel.d: Likewise.
	* gas/i386/x86-64-hle.d: Likewise.
	* gas/i386/x86-64-hle.s: Likewise.
	* gas/i386/x86-64-hlebad.l: Likewise.
	* gas/i386/x86-64-hlebad.s: Likewise.
	* gas/i386/x86-64-rtm-intel.d: Likewise.
	* gas/i386/x86-64-rtm.d: Likewise.
	* gas/i386/x86-64-rtm.s: Likewise.

	* gas/i386/i386.exp: Run hle, hle-intel, hlebad x86-64-hle, rtm,
	rtm-intel, x86-64-hle-intel, x86-64-hlebad, x86-64-rtm and
	x86-64-rtm-intel.

include/opcode/

2012-02-08  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386.h (XACQUIRE_PREFIX_OPCODE): New.
	(XRELEASE_PREFIX_OPCODE): Likewise.

opcodes/

2012-02-08  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386-dis.c (HLE_Fixup1): New.
	(HLE_Fixup2): Likewise.
	(HLE_Fixup3): Likewise.
	(Ebh1): Likewise.
	(Evh1): Likewise.
	(Ebh2): Likewise.
	(Evh2): Likewise.
	(Ebh3): Likewise.
	(Evh3): Likewise.
	(MOD_C6_REG_7): Likewise.
	(MOD_C7_REG_7): Likewise.
	(RM_C6_REG_7): Likewise.
	(RM_C7_REG_7): Likewise.
	(XACQUIRE_PREFIX): Likewise.
	(XRELEASE_PREFIX): Likewise.
	(dis386): Use Ebh1/Evh1 on add, adc, and, btc, btr, bts,
	cmpxchg, dec, inc, neg, not, or, sbb, sub, xor and xadd. Use
	Ebh2/Evh2 on xchg.  Use Ebh3/Evh3 on mov.
	(reg_table): Use Ebh1/Evh1 on add, adc, and, dec, inc, neg,
	not, or, sbb, sub and xor.  Use Ebh3/Evh3 on mov.  Use
	MOD_C6_REG_7 and MOD_C7_REG_7.
	(mod_table): Add MOD_C6_REG_7 and MOD_C7_REG_7.
	(rm_table): Add RM_C6_REG_7 and RM_C7_REG_7.  Add xend and
	xtest.
	(prefix_name): Handle XACQUIRE_PREFIX and XRELEASE_PREFIX.
	(CMPXCHG8B_Fixup): Handle HLE prefix on cmpxchg8b.

	* i386-gen.c (cpu_flag_init): Add CPU_HLE_FLAGS and
	CPU_RTM_FLAGS.
	(cpu_flags): Add CpuHLE and CpuRTM.
	(opcode_modifiers): Add HLEPrefixOk.

	* i386-opc.h (CpuHLE): New.
	(CpuRTM): Likewise.
	(HLEPrefixOk): Likewise.
	(i386_cpu_flags): Add cpuhle and cpurtm.
	(i386_opcode_modifier): Add hleprefixok.

	* i386-opc.tbl: Add HLEPrefixOk=3 to mov.  Add HLEPrefixOk to
	add, adc, and, btc, btr, bts, cmpxchg, dec, inc, neg, not, or,
	sbb, sub, xor and xadd.  Add HLEPrefixOk=2 to xchg with memory
	operand.  Add xacquire, xrelease, xabort, xbegin, xend and
	xtest.
	* i386-init.h: Regenerated.
	* i386-tbl.h: Likewise.
@
text
@d25 2
a26 1
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1 } }
d31 2
a32 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d37 2
a38 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d43 2
a44 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d49 2
a50 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d55 2
a56 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d61 2
a62 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d67 2
a68 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d73 2
a74 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d79 2
a80 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d85 2
a86 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d91 2
a92 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d97 2
a98 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d103 2
a104 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d109 2
a110 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d115 2
a116 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d121 2
a122 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d127 2
a128 1
      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d133 2
a134 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d139 2
a140 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d145 2
a146 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d151 2
a152 1
      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d157 2
a158 1
      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d163 2
a164 1
      1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d169 2
a170 1
      1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d175 2
a176 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d181 2
a182 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d187 2
a188 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d193 2
a194 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d199 2
a200 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d205 2
a206 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d211 2
a212 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d217 2
a218 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d223 2
a224 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d229 2
a230 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d235 2
a236 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d241 2
a242 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d247 2
a248 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d253 2
a254 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d259 2
a260 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d265 2
a266 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d271 2
a272 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d277 2
a278 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d283 2
a284 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d289 2
a290 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d295 2
a296 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d301 2
a302 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d307 2
a308 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d313 2
a314 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d319 2
a320 1
      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d325 2
a326 1
      0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d331 2
a332 1
      0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d337 2
a338 1
      0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d343 2
a344 1
      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d349 2
a350 1
      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d355 2
a356 1
      0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d361 2
a362 1
      0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d367 2
a368 1
      0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d373 2
a374 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d379 2
a380 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 } }
d385 2
a386 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0 } }
d391 2
a392 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 } }
d397 2
a398 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 } }
d403 2
a404 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 } }
d409 2
a410 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d415 2
a416 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d421 2
a422 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d427 2
a428 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d433 2
a434 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d439 2
a440 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d445 2
a446 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d451 2
a452 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d457 2
a458 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d463 2
a464 1
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1 } }
d469 20
a488 1
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1 } }
@


1.44
log
@Add vmfunc

gas/

2012-01-13  H.J. Lu  <hongjiu.lu@@intel.com>

	* config/tc-i386.c (cpu_arch): Add ".vmfunc".

	* doc/c-i386.texi: Document vmfunc.

gas/testsuite/

2012-01-13  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/i386.exp: Run vmfunc and x86-64-vmfunc.

	* gas/i386/vmfunc.d: New.
	* gas/i386/vmfunc.s: Likewise.
	* gas/i386/x86-64-vmfunc.d: Likewise.

opcodes/

2012-01-13  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386-dis.c (mod_table): Add vmfunc.

	* i386-gen.c (cpu_flag_init): Add CPU_VMFUNC_FLAGS.
	(cpu_flags): CpuVMFUNC.

	* i386-opc.h (CpuVMFUNC): New.
	(i386_cpu_flags): Add cpuvmfunc.

	* i386-opc.tbl: Add vmfunc.
	* i386-init.h: Regenerated.
	* i386-tbl.h: Likewise.
@
text
@d25 1
a25 1
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1 } }
d30 1
a30 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d35 1
a35 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d40 1
a40 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d45 1
a45 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d50 1
a50 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d55 1
a55 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d60 1
a60 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d65 1
a65 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d70 1
a70 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d75 1
a75 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d80 1
a80 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d85 1
a85 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d90 1
a90 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d95 1
a95 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d100 1
a100 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d105 1
a105 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d110 1
a110 1
      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d115 1
a115 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d120 1
a120 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d125 1
a125 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d130 1
a130 1
      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d135 1
a135 1
      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d140 1
a140 1
      1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d145 1
a145 1
      1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 } }
d150 1
a150 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d155 1
a155 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d160 1
a160 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d165 1
a165 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d170 1
a170 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d175 1
a175 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d180 1
a180 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d185 1
a185 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d190 1
a190 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d195 1
a195 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d200 1
a200 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d205 1
a205 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d210 1
a210 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d215 1
a215 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d220 1
a220 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d225 1
a225 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d230 1
a230 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d235 1
a235 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d240 1
a240 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d245 1
a245 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d250 1
a250 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d255 1
a255 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d260 1
a260 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d265 1
a265 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d270 1
a270 1
      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d275 1
a275 1
      0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d280 1
a280 1
      0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d285 1
a285 1
      0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d290 1
a290 1
      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d295 1
a295 1
      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d300 1
a300 1
      0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d305 1
a305 1
      0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d310 1
a310 1
      0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 } }
d315 1
a315 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0 } }
d320 11
a330 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 } }
d335 1
a335 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 } }
d340 1
a340 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 } }
d345 1
a345 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d350 1
a350 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d355 1
a355 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d360 1
a360 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d365 1
a365 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d370 1
a370 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d375 1
a375 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d380 1
a380 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d385 1
a385 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d390 1
a390 1
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1 } }
d395 1
a395 1
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1 } }
@


1.43
log
@Add initial Intel K1OM support.

bfd/

2011-07-22  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.am (ALL_MACHINES): Add cpu-k1om.lo.
	(ALL_MACHINES_CFILES): Add cpu-k1om.c.
	* Makefile.in: Regenerated.

	* archures.c (bfd_architecture): Add bfd_arch_k1om.
	(bfd_k1om_arch): New.
	(bfd_archures_list): Add &bfd_k1om_arch.
	* bfd-in2.h: Regenerated.

	* config.bfd (targ64_selvecs): Add bfd_elf64_k1om_vec if
	bfd_elf64_x86_64_vec is supported.  Add bfd_elf64_k1om_freebsd_vec
	if bfd_elf64_x86_64_freebsd_vec is supported.
	(targ_selvecs): Likewise.

	* configure.in: Support bfd_elf64_k1om_vec and
	bfd_elf64_k1om_freebsd_vec.
	* configure: Regenerated.

	* cpu-k1om.c: New.

	* elf64-x86-64.c (elf64_k1om_elf_object_p): New.
	(bfd_elf64_k1om_vec): Likewise.
	(bfd_elf64_k1om_freebsd_vec): Likewise.

	* targets.c (bfd_elf64_k1om_vec): New.
	(bfd_elf64_k1om_freebsd_vec): Likewise.
	(_bfd_target_vector): Add bfd_elf64_k1om_vec and
	bfd_elf64_k1om_freebsd_vec.

binutils/

2011-07-22  H.J. Lu  <hongjiu.lu@@intel.com>

	* dwarf.c (init_dwarf_regnames): Handle EM_K1OM.

	* elfedit.c (elf_machine): Support EM_K1OM.
	(elf_class): Likewise.

	* readelf.c (guess_is_rela): Handle EM_K1OM.
	(dump_relocations): Likewise.
	(get_machine_name): Likewise.
	(get_section_type_name): Likewise.
	(get_elf_section_flags): Likewise.
	(process_section_headers): Likewise.
	(get_symbol_index_type): Likewise.
	(is_32bit_abs_reloc): Likewise.
	(is_32bit_pcrel_reloc): Likewise.
	(is_64bit_abs_reloc): Likewise.
	(is_64bit_pcrel_reloc): Likewise.
	(is_none_reloc): Likewise.

	* doc/binutils.texi: Mention K1OM for elfedit.

binutils/testsuite/

2011-07-22  H.J. Lu  <hongjiu.lu@@intel.com>

	* binutils-all/elfedit.exp: Run elfedit-4.

	* binutils-all/elfedit-4.d: New.

gas/

2011-07-22  H.J. Lu  <hongjiu.lu@@intel.com>

	* config/tc-i386.c (cpu_arch): Add k1om.
	(i386_align_code): Handle PROCESSOR_K1OM.
	(check_cpu_arch_compatible): Check EM_K1OM.
	(i386_arch): Handle Intel K1OM.
	(i386_mach): Return bfd_mach_k1om for Intel K1OM.
	(i386_target_format): Return ELF_TARGET_K1OM_FORMAT for Intel
	K1OM.

	* config/tc-i386.h (ELF_TARGET_K1OM_FORMAT): New.
	(processor_type): Add PROCESSOR_K1OM.

	* doc/c-i386.texi: Document k1om.

gas/testsuite/

2011-07-22  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/k1om.d: New.
	* gas/i386/k1om-inval.l: Likewise.
	* gas/i386/k1om-inval.s: Likewise.

	* gas/i386/i386.exp: Run k1om-inval and k1om.

include/elf/

2011-07-22  H.J. Lu  <hongjiu.lu@@intel.com>

	* common.h (EM_K1OM): New.

ld/

2011-07-22  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.am (ALL_64_EMULATIONS): Add eelf_k1om.o and
	eelf_k1om_fbsd.o
	(eelf_k1om.c): New.
	(eelf_k1om_fbsd.c): Likewise.
	* Makefile.in: Regenerated.

	* configure.tgt (targ64_extra_emuls): Add elf_k1om if elf_x86_64
	is supported.  Add elf_k1om_fbsd if elf_x86_64_fbsd is supported.
	(targ_extra_emuls): Likewise.

	* emulparams/elf_k1om.sh: New.
	* emulparams/elf_k1om_fbsd.sh: Likewise.

ld/testsuite/

2011-07-22  H.J. Lu  <hongjiu.lu@@intel.com>

	* ld-x86-64/abs-k1om.d: New.
	* ld-x86-64/protected2-k1om.d: Likewise.
	* ld-x86-64/protected3-k1om.d: Likewise.

	* ld-x86-64/x86-64.exp: Run abs-k1om, protected2-k1om and
	protected3-k1om.

opcodes/

2011-07-22  H.J. Lu  <hongjiu.lu@@intel.com>

	* configure.in: Handle bfd_k1om_arch.
	* configure: Regenerated.

	* disassemble.c (disassembler): Handle bfd_k1om_arch.

	* i386-dis.c (print_insn): Handle bfd_mach_k1om and
	bfd_mach_k1om_intel_syntax.

	* i386-gen.c (cpu_flag_init): Set CPU_UNKNOWN_FLAGS to
	~(CpuL1OM|CpuK1OM).  Add CPU_K1OM_FLAGS.
	(cpu_flags): Add CpuK1OM.

	* i386-opc.h (CpuK1OM): New.
	(i386_cpu_flags): Add cpuk1om.

	* i386-init.h: Regenerated.
	* i386-tbl.h: Likewise.
@
text
@d25 1
a25 1
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1 } }
d30 1
a30 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d35 1
a35 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d40 1
a40 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d45 1
a45 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d50 1
a50 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d55 1
a55 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d60 1
a60 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d65 1
a65 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d70 1
a70 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d75 1
a75 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d80 1
a80 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d85 1
a85 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d90 1
a90 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d95 1
a95 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d100 1
a100 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d105 1
a105 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d110 1
a110 1
      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d115 1
a115 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d120 1
a120 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d125 1
a125 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d130 1
a130 1
      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d135 1
a135 1
      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d140 1
a140 1
      1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d145 1
a145 1
      1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0 } }
d150 1
a150 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d155 1
a155 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d160 1
a160 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d165 1
a165 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d170 1
a170 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d175 1
a175 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d180 1
a180 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d185 1
a185 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d190 1
a190 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d195 1
a195 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d200 1
a200 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d205 1
a205 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d210 1
a210 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d215 1
a215 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d220 1
a220 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d225 1
a225 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d230 1
a230 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d235 1
a235 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d240 1
a240 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d245 1
a245 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d250 1
a250 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d255 1
a255 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d260 1
a260 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d265 1
a265 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d270 1
a270 1
      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d275 1
a275 1
      0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d280 1
a280 1
      0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d285 1
a285 1
      0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d290 1
a290 1
      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d295 1
a295 1
      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d300 1
a300 1
      0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d305 1
a305 1
      0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 } }
d310 1
a310 1
      0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0 } }
d315 1
a315 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 } }
d320 1
a320 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 } }
d325 6
a330 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 } }
d335 1
a335 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d340 1
a340 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d345 1
a345 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d350 1
a350 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d355 1
a355 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d360 1
a360 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d365 1
a365 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d370 1
a370 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d375 1
a375 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d380 1
a380 1
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1 } }
d385 1
a385 1
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1 } }
@


1.42
log
@Support AVX Programming Reference (June, 2011).

gas/

2011-06-10  H.J. Lu  <hongjiu.lu@@intel.com>

	AVX Programming Reference (June, 2011)
	* config/tc-i386.c (i386_error): Add invalid_vsib_address and
	unsupported_vector_index_register.
	(cpu_arch): Add .avx2, .bmi2, .lzcnt and .invpcid.
	(check_VecOperands): New.
	(match_template): Call check_VecOperands.  Handle
	invalid_vsib_address and unsupported_vector_index_register.
	(build_modrm_byte): Support VecSIB.  Check register-only source
	operand when two source operands are swapped.
	(i386_index_check): Allow Xmm/Ymm index registers.

	* doc/c-i386.texi: Document avx2/.avx2, bmi2/.bmi2, lzcnt/.lzcnt
	and invpcid./invpcid.

gas/testsuite/

2011-06-10  H.J. Lu  <hongjiu.lu@@intel.com>

	AVX Programming Reference (June, 2011)
	* gas/i386/arch-10-1.l: Updated.
	* gas/i386/arch-10-2.l: Likewise.
	* gas/i386/arch-10-3.l: Likewise.
	* gas/i386/arch-10-4.l: Likewise.

	* gas/i386/arch-10.s: Add LZCNT to comments.
	* gas/i386/x86-64-arch-2.s: Likewise.

	* gas/i386/arch-10-lzcnt.d: New.
	* gas/i386/avx-gather-intel.d: Likewise.
	* gas/i386/avx-gather.d: Likewise.
	* gas/i386/avx-gather.s: Likewise.
	* gas/i386/avx2-intel.d: Likewise.
	* gas/i386/avx2.d: Likewise.
	* gas/i386/avx2.s: Likewise
	* gas/i386/avx256int-intel.d: Likewise.
	* gas/i386/avx256int.d: Likewise.
	* gas/i386/avx256int.s: Likewise.
	* gas/i386/bmi2-intel.d: Likewise.
	* gas/i386/bmi2.d: Likewise.
	* gas/i386/bmi2.s: Likewise.
	* gas/i386/inval-invpcid.l:Likewise.
	* gas/i386/inval-invpcid.s: Likewise.
	* gas/i386/invpcid-intel.d: Likewise.
	* gas/i386/invpcid.d: Likewise.
	* gas/i386/invpcid.s: Likewise.
	* gas/i386/x86-64-arch-2-lzcnt.d: Likewise.
	* gas/i386/x86-64-avx-gather-intel.d: Likewise.
	* gas/i386/x86-64-avx-gather.d: Likewise.
	* gas/i386/x86-64-avx-gather.s: Likewise.
	* gas/i386/x86-64-avx2-intel.d: Likewise.
	* gas/i386/x86-64-avx2.d: Likewise.
	* gas/i386/x86-64-avx2.s: Likewise.
	* gas/i386/x86-64-avx256int-intel.d: Likewise.
	* gas/i386/x86-64-avx256int.d: Likewise.
	* gas/i386/x86-64-avx256int.s: Likewise.
	* gas/i386/x86-64-bmi2-intel.d: Likewise.
	* gas/i386/x86-64-bmi2.d: Likewise.
	* gas/i386/x86-64-bmi2.s: Likewise.
	* gas/i386/x86-64-inval-invpcid.l: Likewise.
	* gas/i386/x86-64-inval-invpcid.s: Likewise.
	* gas/i386/x86-64-invpcid-intel.d: Likewise.
	* gas/i386/x86-64-invpcid.d: Likewise.
	* gas/i386/x86-64-invpcid.s: Likewise.

opcodes/

2011-06-10  H.J. Lu  <hongjiu.lu@@intel.com>

	AVX Programming Reference (June, 2011)
	* i386-dis.c (XMGatherQ): New.
	* i386-dis.c (EXxmm_mb): New.
	(EXxmm_mb): Likewise.
	(EXxmm_mw): Likewise.
	(EXxmm_md): Likewise.
	(EXxmm_mq): Likewise.
	(EXxmmdw): Likewise.
	(EXxmmqd): Likewise.
	(VexGatherQ): Likewise.
	(MVexVSIBDWpX): Likewise.
	(MVexVSIBQWpX): Likewise.
	(xmm_mb_mode): Likewise.
	(xmm_mw_mode): Likewise.
	(xmm_md_mode): Likewise.
	(xmm_mq_mode): Likewise.
	(xmmdw_mode): Likewise.
	(xmmqd_mode): Likewise.
	(ymmxmm_mode): Likewise.
	(vex_vsib_d_w_dq_mode): Likewise.
	(vex_vsib_q_w_dq_mode): Likewise.
	(MOD_VEX_0F385A_PREFIX_2): Likewise.
	(MOD_VEX_0F388C_PREFIX_2): Likewise.
	(MOD_VEX_0F388E_PREFIX_2): Likewise.
	(PREFIX_0F3882): Likewise.
	(PREFIX_VEX_0F3816): Likewise.
	(PREFIX_VEX_0F3836): Likewise.
	(PREFIX_VEX_0F3845): Likewise.
	(PREFIX_VEX_0F3846): Likewise.
	(PREFIX_VEX_0F3847): Likewise.
	(PREFIX_VEX_0F3858): Likewise.
	(PREFIX_VEX_0F3859): Likewise.
	(PREFIX_VEX_0F385A): Likewise.
	(PREFIX_VEX_0F3878): Likewise.
	(PREFIX_VEX_0F3879): Likewise.
	(PREFIX_VEX_0F388C): Likewise.
	(PREFIX_VEX_0F388E): Likewise.
	(PREFIX_VEX_0F3890..PREFIX_VEX_0F3893): Likewise.
	(PREFIX_VEX_0F38F5): Likewise.
	(PREFIX_VEX_0F38F6): Likewise.
	(PREFIX_VEX_0F3A00): Likewise.
	(PREFIX_VEX_0F3A01): Likewise.
	(PREFIX_VEX_0F3A02): Likewise.
	(PREFIX_VEX_0F3A38): Likewise.
	(PREFIX_VEX_0F3A39): Likewise.
	(PREFIX_VEX_0F3A46): Likewise.
	(PREFIX_VEX_0F3AF0): Likewise.
	(VEX_LEN_0F3816_P_2): Likewise.
	(VEX_LEN_0F3819_P_2): Likewise.
	(VEX_LEN_0F3836_P_2): Likewise.
	(VEX_LEN_0F385A_P_2_M_0): Likewise.
	(VEX_LEN_0F38F5_P_0): Likewise.
	(VEX_LEN_0F38F5_P_1): Likewise.
	(VEX_LEN_0F38F5_P_3): Likewise.
	(VEX_LEN_0F38F6_P_3): Likewise.
	(VEX_LEN_0F38F7_P_1): Likewise.
	(VEX_LEN_0F38F7_P_2): Likewise.
	(VEX_LEN_0F38F7_P_3): Likewise.
	(VEX_LEN_0F3A00_P_2): Likewise.
	(VEX_LEN_0F3A01_P_2): Likewise.
	(VEX_LEN_0F3A38_P_2): Likewise.
	(VEX_LEN_0F3A39_P_2): Likewise.
	(VEX_LEN_0F3A46_P_2): Likewise.
	(VEX_LEN_0F3AF0_P_3): Likewise.
	(VEX_W_0F3816_P_2): Likewise.
	(VEX_W_0F3818_P_2): Likewise.
	(VEX_W_0F3819_P_2): Likewise.
	(VEX_W_0F3836_P_2): Likewise.
	(VEX_W_0F3846_P_2): Likewise.
	(VEX_W_0F3858_P_2): Likewise.
	(VEX_W_0F3859_P_2): Likewise.
	(VEX_W_0F385A_P_2_M_0): Likewise.
	(VEX_W_0F3878_P_2): Likewise.
	(VEX_W_0F3879_P_2): Likewise.
	(VEX_W_0F3A00_P_2): Likewise.
	(VEX_W_0F3A01_P_2): Likewise.
	(VEX_W_0F3A02_P_2): Likewise.
	(VEX_W_0F3A38_P_2): Likewise.
	(VEX_W_0F3A39_P_2): Likewise.
	(VEX_W_0F3A46_P_2): Likewise.
	(MOD_VEX_0F3818_PREFIX_2): Removed.
	(MOD_VEX_0F3819_PREFIX_2): Likewise.
	(VEX_LEN_0F60_P_2..VEX_LEN_0F6D_P_2): Likewise.
	(VEX_LEN_0F70_P_1..VEX_LEN_0F76_P_2): Likewise.
	(VEX_LEN_0FD1_P_2..VEX_LEN_0FD5_P_2): Likewise.
	(VEX_LEN_0FD7_P_2_M_1..VEX_LEN_0F3819_P_2_M_0): Likewise.
	(VEX_LEN_0F381C_P_2..VEX_LEN_0F3840_P_2): Likewise.
	(VEX_LEN_0F3A0E_P_2): Likewise.
	(VEX_LEN_0F3A0F_P_2): Likewise.
	(VEX_LEN_0F3A42_P_2): Likewise.
	(VEX_LEN_0F3A4C_P_2): Likewise.
	(VEX_W_0F3818_P_2_M_0): Likewise.
	(VEX_W_0F3819_P_2_M_0): Likewise.
	(prefix_table): Updated.
	(three_byte_table): Likewise.
	(vex_table): Likewise.
	(vex_len_table): Likewise.
	(vex_w_table): Likewise.
	(mod_table): Likewise.
	(putop): Handle "LW".
	(intel_operand_size): Handle xmm_mb_mode, xmm_mw_mode,
	xmm_md_mode, xmm_mq_mode, xmmdw_mode, xmmqd_mode, ymmxmm_mode,
	vex_vsib_d_w_dq_mode, vex_vsib_q_w_dq_mode.
	(OP_EX): Likewise.
	(OP_E_memory): Handle vex_vsib_d_w_dq_mode and
	vex_vsib_q_w_dq_mode.
	(OP_XMM): Handle vex_vsib_q_w_dq_mode.
	(OP_VEX): Likewise.

	* i386-gen.c (cpu_flag_init): Add CpuAVX2 to CPU_ANY_SSE_FLAGS
	and CPU_ANY_AVX_FLAGS.  Add CPU_BMI2_FLAGS, CPU_LZCNT_FLAGS,
	CPU_INVPCID_FLAGS and CPU_AVX2_FLAGS.
	(cpu_flags): Add CpuAVX2, CpuBMI2, CpuLZCNT and CpuINVPCID.
	(opcode_modifiers): Add VecSIB.

	* i386-opc.h (CpuAVX2): New.
	(CpuBMI2): Likewise.
	(CpuLZCNT): Likewise.
	(CpuINVPCID): Likewise.
	(VecSIB128): Likewise.
	(VecSIB256): Likewise.
	(VecSIB): Likewise.
	(i386_cpu_flags): Add cpuavx2, cpubmi2, cpulzcnt and cpuinvpcid.
	(i386_opcode_modifier): Add vecsib.

	* i386-opc.tbl: Add invpcid, AVX2 and BMI2 instructions.
	* i386-init.h: Regenerated.
	* i386-tbl.h: Likewise.
@
text
@d24 2
a25 2
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1,  \
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1 } }
d30 1
a30 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d35 1
a35 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d40 1
a40 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d45 1
a45 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d50 1
a50 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d55 1
a55 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d60 1
a60 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d65 1
a65 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d70 1
a70 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d75 1
a75 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d80 1
a80 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d85 1
a85 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d90 1
a90 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d95 1
a95 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d100 1
a100 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d105 1
a105 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d110 1
a110 1
      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d115 1
a115 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d120 1
a120 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d125 1
a125 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d130 1
a130 1
      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d135 1
a135 1
      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d139 2
a140 2
      0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,  \
      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d144 2
a145 2
      0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,  \
      1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0 } }
d150 1
a150 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d155 1
a155 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d160 1
a160 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d165 1
a165 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d170 1
a170 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d175 1
a175 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d180 1
a180 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d185 1
a185 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d190 1
a190 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d195 1
a195 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d200 1
a200 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d205 1
a205 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d210 1
a210 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d215 1
a215 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d220 1
a220 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d225 1
a225 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d230 1
a230 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d234 2
a235 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d239 2
a240 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d244 2
a245 2
      0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d249 2
a250 2
      0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d254 2
a255 2
      0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d259 2
a260 2
      0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d264 2
a265 2
      0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d269 2
a270 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d275 1
a275 1
      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d280 1
a280 1
      0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d285 1
a285 1
      0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d290 1
a290 1
      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d295 1
a295 1
      0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d300 1
a300 1
      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d305 1
a305 1
      0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 } }
d310 1
a310 1
      0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0 } }
d315 1
a315 1
      0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 } }
d320 1
a320 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 } }
d325 1
a325 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 } }
d330 1
a330 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d335 1
a335 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d340 1
a340 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d345 1
a345 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d350 1
a350 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d355 1
a355 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d360 1
a360 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d365 1
a365 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d370 1
a370 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d375 6
a380 1
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1 } }
@


1.41
log
@Add CpuF16C to CPU_BDVER2_FLAGS.

opcodes/
	2011-06-02  Quentin Neill  <quentin.neill@@amd.com>

		* i386-gen.c (cpu_flag_init): Add CpuF16C to CPU_BDVER2_FLAGS.
		* i386-init.h: Regenerated.
@
text
@d24 2
a25 2
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,  \
      1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1 } }
d30 1
a30 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d35 1
a35 1
      0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d40 1
a40 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d45 1
a45 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d50 1
a50 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d55 1
a55 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d60 1
a60 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d65 1
a65 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d70 1
a70 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d75 1
a75 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d80 1
a80 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d85 1
a85 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d90 1
a90 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d95 1
a95 1
      0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d100 1
a100 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d105 1
a105 1
      0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d110 1
a110 1
      0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0 } }
d115 1
a115 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d120 1
a120 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d125 1
a125 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d130 1
a130 1
      0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0 } }
d135 1
a135 1
      0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0 } }
d139 2
a140 2
      0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0,  \
      0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0 } }
d144 2
a145 2
      0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,  \
      1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0 } }
d150 1
a150 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d155 1
a155 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d160 1
a160 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d165 1
a165 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d170 1
a170 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d175 1
a175 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d180 1
a180 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d185 1
a185 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d190 1
a190 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d195 1
a195 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d200 1
a200 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d205 1
a205 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d210 1
a210 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d215 1
a215 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d219 2
a220 2
      0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d225 1
a225 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d230 1
a230 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d234 2
a235 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d239 2
a240 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d244 2
a245 2
      0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d249 2
a250 2
      0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d254 2
a255 2
      0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d259 2
a260 2
      0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d264 2
a265 2
      0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d269 2
a270 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d274 2
a275 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d280 1
a280 1
      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d285 1
a285 1
      0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d290 1
a290 1
      0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0 } }
d295 1
a295 1
      0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 } }
d300 1
a300 1
      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 } }
d305 1
a305 1
      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 } }
d310 16
a325 1
      0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 } }
d330 1
a330 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d335 1
a335 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d340 1
a340 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d345 1
a345 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d350 1
a350 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d355 1
a355 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d360 6
a365 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d369 2
a370 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d375 1
a375 1
      1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1 } }
@


1.40
log
@2011-05-10  Quentin Neill  <quentin.neill@@amd.com>

gas/
        * config/tc-i386.c (cpu_arch): Add bdver2 and rename
        PROCESSOR_BDVER1 to PROCESSOR_BDVER.
        (i386_align_code): Rename PROCESSOR_BDVER1.
        (processor_type): Ditto.
        * doc/c-i386.texi: Add bdver2.

opcodes/
        * i386-gen.c (cpu_flag_init): Add new CPU_BDVER2_FLAGS.
        * i386-init.h: Regenerated.

gas/testsuite/
        * gas/i386/i386.exp: Add new bdver2 test cases.
        * gas/i386/nops-1-bdver2.d: New.
        * gas/i386/x86-64-nops-1-bdver2.d: New.
@
text
@d145 1
a145 1
      1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0 } }
@


1.39
log
@Regenerate i386-init.h.

2011-04-20  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386-init.h: Regenerated.
@
text
@d142 5
@


1.38
log
@opcodes/
	* i386-init.h: Regenerated.
	* i386-tbl.h: Regenerated.
@
text
@d138 1
a138 1
  { { 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,  \
@


1.37
log
@Implement BMI instructions.
@
text
@d25 1
a25 1
      1, 1, 1, 1, 1, 1, 1, 0, 1, 1 } }
d30 1
a30 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d35 1
a35 1
      0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d40 1
a40 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d45 1
a45 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d50 1
a50 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d55 1
a55 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d60 1
a60 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d65 1
a65 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d70 1
a70 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d75 1
a75 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d80 1
a80 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d85 1
a85 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d90 1
a90 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d95 1
a95 1
      0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d100 1
a100 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d105 1
a105 1
      0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d110 1
a110 1
      0, 0, 1, 0, 0, 0, 1, 0, 0, 0 } }
d115 1
a115 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d120 1
a120 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d125 1
a125 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d130 1
a130 1
      0, 0, 1, 0, 0, 0, 1, 0, 0, 0 } }
d135 1
a135 1
      0, 0, 1, 0, 0, 0, 1, 0, 0, 0 } }
d140 1
a140 1
      0, 0, 1, 0, 0, 0, 1, 0, 0, 0 } }
d145 1
a145 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d150 1
a150 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d155 1
a155 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d160 1
a160 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d165 1
a165 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d170 1
a170 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d175 1
a175 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d180 1
a180 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d185 1
a185 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d190 1
a190 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d195 1
a195 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d200 1
a200 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d205 1
a205 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d210 1
a210 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d215 1
a215 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d220 1
a220 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d225 1
a225 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d230 1
a230 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d235 1
a235 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d240 1
a240 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d245 1
a245 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d250 1
a250 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d255 1
a255 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d260 1
a260 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d265 1
a265 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d270 6
a275 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d280 1
a280 1
      1, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d285 1
a285 1
      0, 0, 1, 0, 0, 0, 0, 0, 0, 0 } }
d290 1
a290 1
      0, 1, 0, 0, 0, 0, 0, 0, 0, 0 } }
d295 1
a295 1
      0, 0, 0, 1, 0, 0, 0, 0, 0, 0 } }
d300 1
a300 1
      0, 0, 0, 0, 1, 0, 0, 0, 0, 0 } }
d305 1
a305 1
      0, 0, 0, 0, 0, 1, 0, 0, 0, 0 } }
d310 1
a310 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d315 1
a315 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d320 1
a320 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d325 1
a325 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d330 1
a330 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d335 1
a335 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d340 1
a340 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d345 1
a345 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d350 1
a350 1
      1, 1, 1, 1, 1, 1, 1, 0, 1, 1 } }
@


1.36
log
@Add CpuNop to CPU_GENERIC64_FLAGS.

gas/testsuite/

2010-10-16  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/i386.exp: Run x86-64-nops-1-g64.

	* gas/i386/x86-64-nops-1.d: Remove -mtune=generic64.

	* gas/i386/x86-64-nops-1-g64.d: New.

opcodes/

2010-10-16  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386-gen.c (cpu_flag_init): Add CpuNop to CPU_GENERIC64_FLAGS.

	* i386-init.h: Regenerated.
@
text
@d2 1
a2 1
/* Copyright 2007, 2008, 2009, 2010
d25 1
a25 1
      1, 1, 1, 1, 1, 1, 0, 1, 1 } }
d30 1
a30 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d35 1
a35 1
      0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d40 1
a40 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d45 1
a45 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d50 1
a50 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d55 1
a55 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d60 1
a60 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d65 1
a65 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d70 1
a70 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d75 1
a75 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d80 1
a80 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d85 1
a85 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d90 1
a90 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d95 1
a95 1
      0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d100 1
a100 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d105 1
a105 1
      0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d110 1
a110 1
      0, 1, 0, 0, 0, 1, 0, 0, 0 } }
d115 1
a115 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d120 1
a120 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d125 1
a125 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d130 1
a130 1
      0, 1, 0, 0, 0, 1, 0, 0, 0 } }
d135 1
a135 1
      0, 1, 0, 0, 0, 1, 0, 0, 0 } }
d140 1
a140 1
      0, 1, 0, 0, 0, 1, 0, 0, 0 } }
d145 1
a145 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d150 1
a150 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d155 1
a155 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d160 1
a160 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d165 1
a165 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d170 1
a170 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d175 1
a175 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d180 1
a180 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d185 1
a185 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d190 1
a190 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d195 1
a195 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d200 1
a200 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d205 1
a205 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d210 1
a210 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d215 1
a215 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d220 1
a220 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d225 1
a225 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d230 1
a230 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d235 1
a235 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d240 1
a240 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d245 1
a245 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d250 1
a250 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d255 1
a255 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d260 1
a260 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d265 6
a270 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d274 2
a275 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d280 1
a280 1
      0, 1, 0, 0, 0, 0, 0, 0, 0 } }
d285 1
a285 1
      1, 0, 0, 0, 0, 0, 0, 0, 0 } }
d290 1
a290 1
      0, 0, 1, 0, 0, 0, 0, 0, 0 } }
d295 1
a295 1
      0, 0, 0, 1, 0, 0, 0, 0, 0 } }
d300 1
a300 1
      0, 0, 0, 0, 1, 0, 0, 0, 0 } }
d305 1
a305 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d310 1
a310 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d315 1
a315 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d320 1
a320 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d325 1
a325 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d330 1
a330 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d335 1
a335 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d340 1
a340 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d345 1
a345 1
      1, 1, 1, 1, 1, 1, 0, 1, 1 } }
@


1.36.2.1
log
@backport from mainline
@
text
@d2 1
a2 1
/* Copyright 2007, 2008, 2009, 2010, 2010
@


1.35
log
@Don't generate multi-byte NOPs for i686.

gas/

2010-08-06  Quentin Neill <quentin.neill@@amd.com>

	* config/tc-i386.c (arch_entry): Add negated bit to
	  disambiguate flag names starting with "no".
	  (cpu_arch): Add negated bit definitions.  Add
	  ".nop" CPU extension.
	  (i386_align_code): Use new .cpunop bit to decide
	  when to generate alignment using nops.
	  (set_cpu_arch): Use negated bit instead to decide
	  when to use cpu_flags or vs. cpu_flags_and_not.
	  (md_parse_option): Likewise.

gas/testsuite/

2010-08-06  Quentin Neill <quentin.neill@@amd.com>

	* gas/i386/arch-10-1.l: Add nopl instruction.
	* gas/i386/arch-10-2.l: Likewise.
	* gas/i386/arch-10-3.l: Likewise.
	* gas/i386/arch-10-4.l: Likewise.
	* gas/i386/arch-10.s: Likewise.
	* gas/i386/arch-10.d: Add nopl instruction, and +nopl extension
	flag to as flags.
	* gas/i386/nops-5-i686.d: Change alignment code generated for
	-mtune=i686.
	* gas/i386/nops-5.d: Change alignment code generated for
	.arch i686.
	* gas/i386/x86-64-nops-5-k8.d: Likewise.
	* gas/i386/x86-64-nops-5.d: Likewise.

opcodes/

2010-08-06  Quentin Neill <quentin.neill@@amd.com>

	* i386-gen.c (cpu_flag_init): Define CpuNop extension flag, add
	to processor flags for PENTIUMPRO processors and later.
	* i386-opc.h (enum): Add CpuNop.
	(i386_cpu_flags): Add cpunop bit.
	* i386-opc.tbl: Change nop cpu_flags.
	* i386-init.h: Regenerated.
	* i386-tbl.h: Likewise.
@
text
@d33 1
a33 1
  { { 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0,  \
@


1.34
log
@Support AVX Programming Reference (June, 2010)

gas/

2010-07-01  H.J. Lu  <hongjiu.lu@@intel.com>

	AVX Programming Reference (June, 2010)
	* config/tc-i386.c (cpu_arch): Add .xsaveopt, .fsgsbase, .rdrnd
	and .f16c.

	* doc/c-i386.texi: Document xsaveopt, fsgsbase, rdrnd and f16c.

gas/testsuite/

2010-07-01  H.J. Lu  <hongjiu.lu@@intel.com>

	AVX Programming Reference (June, 2010)
	* gas/i386/arch-10.s: Add xsaveopt.
	* gas/i386/x86-64-arch-2.s: Likwise.

	* gas/i386/arch-10.d: Updated.
	* gas/i386/arch-10-1.l: Likewise.
	* gas/i386/arch-10-2.l: Likewise.
	* gas/i386/arch-10-3.l: Likewise.
	* gas/i386/arch-10-4.l: Likewise.
	* gas/i386/x86-64-arch-2.d: Likewise.

	* gas/i386/f16c-intel.d: New.
	* gas/i386/f16c.d: Likewise.
	* gas/i386/f16c.s: Likewise.
	* gas/i386/fsgs-intel.d: Likewise.
	* gas/i386/fsgs.d: Likewise.
	* gas/i386/fsgs.s: Likewise.
	* gas/i386/rdrnd-intel.d: Likewise.
	* gas/i386/rdrnd.d: Likewise.
	* gas/i386/rdrnd.s: Likewise.
	* gas/i386/x86-64-f16c-intel.d: Likewise.
	* gas/i386/x86-64-f16c.d: Likewise.
	* gas/i386/x86-64-f16c.s: Likewise.
	* gas/i386/x86-64-fsgs-intel.d: Likewise.
	* gas/i386/x86-64-fsgs.d: Likewise.
	* gas/i386/x86-64-fsgs.s: Likewise.
	* gas/i386/x86-64-rdrnd-intel.d: Likewise.
	* gas/i386/x86-64-rdrnd.d: Likewise.
	* gas/i386/x86-64-rdrnd.s: Likewise.

	* gas/i386/i386.exp: Run f16c, f16c-intel, fsgs, fsgs-intel,
	rdrnd, rdrnd-intel, x86-64-f16c, x86-64-f16c-intel, x86-64-fsgs,
	x86-64-fsgs-intel, x86-64-rdrnd, x86-64-rdrnd-intel.

	* gas/i386/x86-64-xsave.s: Add tests for xsaveopt64.

	* gas/i386/x86-64-xsave-intel.d: Updated.
	* gas/i386/x86-64-xsave.d: Likewise.

opcodes/

2010-07-01  H.J. Lu  <hongjiu.lu@@intel.com>

	AVX Programming Reference (June, 2010)
	* i386-dis.c (PREFIX_0FAE_REG_0): New.
	(PREFIX_0FAE_REG_1): Likewise.
	(PREFIX_0FAE_REG_2): Likewise.
	(PREFIX_0FAE_REG_3): Likewise.
	(PREFIX_VEX_3813): Likewise.
	(PREFIX_VEX_3A1D): Likewise.
	(prefix_table): Add PREFIX_0FAE_REG_0, PREFIX_0FAE_REG_1,
	PREFIX_0FAE_REG_2, PREFIX_0FAE_REG_3, PREFIX_VEX_3813 and
	PREFIX_VEX_3A1D.
	(vex_table): Add PREFIX_VEX_3813 and PREFIX_VEX_3A1D.
	(mod_table): Add PREFIX_0FAE_REG_0, PREFIX_0FAE_REG_1,
	PREFIX_0FAE_REG_2, PREFIX_0FAE_REG_3 xsaveopt and rdrnd.

	* i386-gen.c (cpu_flag_init): Add CPU_XSAVEOPT_FLAGS,
	CPU_FSGSBASE_FLAGS, CPU_RDRND_FLAGS and CPU_F16C_FLAGS.
	(cpu_flags): Add CpuXsaveopt, CpuFSGSBase, CpuRdRnd and CpuF16C.

	* i386-opc.h (CpuXsaveopt): New.
	(CpuFSGSBase):Likewise.
	(CpuRdRnd): Likewise.
	(CpuF16C): Likewise.
	(i386_cpu_flags): Add cpuxsaveopt, cpufsgsbase, cpurdrnd and
	cpuf16c.

	* i386-opc.tbl: Add xsaveopt, rdfsbase, rdgsbase, rdrnd,
	wrfsbase, wrgsbase, vcvtph2ps and vcvtps2ph.
@
text
@d24 2
a25 2
      1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  \
      1, 1, 1, 1, 1, 0, 1, 1 } }
d30 1
a30 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d33 1
a33 1
  { { 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0,  \
d35 1
a35 1
      0, 0, 0, 0, 1, 0, 0, 0 } }
d40 1
a40 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d45 1
a45 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d50 1
a50 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d55 1
a55 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d60 1
a60 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d63 1
a63 1
  { { 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
d65 1
a65 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d68 1
a68 1
  { { 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,  \
d70 6
a75 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d78 1
a78 1
  { { 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0,  \
d80 1
a80 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d83 1
a83 1
  { { 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0,  \
d85 1
a85 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d88 1
a88 1
  { { 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0,  \
d90 1
a90 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d93 1
a93 1
  { { 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0,  \
d95 1
a95 1
      0, 0, 0, 0, 1, 0, 0, 0 } }
d98 1
a98 1
  { { 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0,  \
d100 1
a100 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d103 3
a105 3
  { { 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0,  \
      0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 1, 0, 0, 0 } }
d108 3
a110 3
  { { 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0,  \
      0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      1, 0, 0, 0, 1, 0, 0, 0 } }
d113 1
a113 1
  { { 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0,  \
d115 1
a115 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d118 1
a118 1
  { { 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0,  \
d120 1
a120 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d123 1
a123 1
  { { 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0,  \
d125 1
a125 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d128 1
a128 1
  { { 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0,  \
d130 1
a130 1
      1, 0, 0, 0, 1, 0, 0, 0 } }
d133 3
a135 3
  { { 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,  \
      0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      1, 0, 0, 0, 1, 0, 0, 0 } }
d138 3
a140 3
  { { 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,  \
      0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0,  \
      1, 0, 0, 0, 1, 0, 0, 0 } }
d143 1
a143 1
  { { 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
d145 1
a145 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d148 1
a148 1
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
d150 1
a150 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d153 1
a153 1
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
d155 1
a155 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d158 1
a158 1
  { { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,  \
d160 1
a160 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d165 6
a170 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d173 1
a173 1
  { { 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
d175 1
a175 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d178 1
a178 1
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,  \
d180 1
a180 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d183 1
a183 1
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0,  \
d185 1
a185 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d188 1
a188 1
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0,  \
d190 1
a190 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d193 1
a193 1
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0,  \
d195 1
a195 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d198 3
a200 3
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0,  \
      0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0 } }
d203 3
a205 3
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0,  \
      0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0 } }
d208 3
a210 3
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0,  \
      0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0 } }
d213 3
a215 3
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0,  \
      0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0 } }
d219 2
a220 2
      0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0 } }
d224 2
a225 2
      0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0 } }
d229 2
a230 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0 } }
d234 2
a235 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0 } }
d238 3
a240 3
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0,  \
      0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0 } }
d243 3
a245 3
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0,  \
      0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0 } }
d248 3
a250 3
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0,  \
      0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0 } }
d253 3
a255 3
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0,  \
      0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0 } }
d258 3
a260 3
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0,  \
      0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0 } }
d264 2
a265 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0 } }
d269 2
a270 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0 } }
d275 1
a275 1
      1, 0, 0, 0, 0, 0, 0, 0 } }
d279 2
a280 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,  \
      0, 0, 0, 0, 0, 0, 0, 0 } }
d285 1
a285 1
      0, 1, 0, 0, 0, 0, 0, 0 } }
d290 1
a290 1
      0, 0, 1, 0, 0, 0, 0, 0 } }
d295 1
a295 1
      0, 0, 0, 1, 0, 0, 0, 0 } }
d298 1
a298 1
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0,  \
d300 1
a300 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d303 1
a303 1
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0,  \
d305 1
a305 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d308 3
a310 3
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0 } }
d314 2
a315 2
      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0 } }
d318 3
a320 3
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0,  \
      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0 } }
d324 2
a325 2
      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0 } }
d328 3
a330 3
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0,  \
      0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0 } }
d334 2
a335 2
      0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0 } }
d340 1
a340 1
      1, 1, 1, 1, 1, 0, 1, 1 } }
@


1.33
log
@2010-03-22  Sebastian Pop  <sebastian.pop@@amd.com>
	    Quentin Neill <quentin.neill@@amd.com>

	opcodes/
	* i386-dis.c (OP_LWP_I): Removed.
	(reg_table): Do not use OP_LWP_I, use Iq.
	(OP_LWPCB_E): Remove use of names16.
	(OP_LWP_E): Same.
	* i386-opc.tbl: Removed 16bit LWP insns.  32bit LWP insns
	should not set the Vex.length bit.
	* i386-tbl.h: Regenerated.

	gas/
	* testsuite/gas/i386/x86-64-lwp.s: Remove use of 16bit LWP insns.
	* testsuite/gas/i386/lwp.s: Same.
	* testsuite/gas/i386/x86-64-lwp.d: Updated.
	* testsuite/gas/i386/lwp.d: Updated.
@
text
@d25 1
a25 1
      1, 0, 1, 1 } }
d30 1
a30 1
      0, 0, 0, 0 } }
d35 1
a35 1
      1, 0, 0, 0 } }
d40 1
a40 1
      0, 0, 0, 0 } }
d45 1
a45 1
      0, 0, 0, 0 } }
d50 1
a50 1
      0, 0, 0, 0 } }
d55 1
a55 1
      0, 0, 0, 0 } }
d60 1
a60 1
      0, 0, 0, 0 } }
d65 1
a65 1
      0, 0, 0, 0 } }
d70 1
a70 1
      0, 0, 0, 0 } }
d75 1
a75 1
      0, 0, 0, 0 } }
d80 1
a80 1
      0, 0, 0, 0 } }
d85 1
a85 1
      0, 0, 0, 0 } }
d90 1
a90 1
      1, 0, 0, 0 } }
d95 1
a95 1
      0, 0, 0, 0 } }
d100 1
a100 1
      1, 0, 0, 0 } }
d104 2
a105 2
      0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,  \
      1, 0, 0, 0 } }
d110 1
a110 1
      0, 0, 0, 0 } }
d115 1
a115 1
      0, 0, 0, 0 } }
d120 1
a120 1
      0, 0, 0, 0 } }
d124 2
a125 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,  \
      1, 0, 0, 0 } }
d129 2
a130 2
      0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,  \
      1, 0, 0, 0 } }
d134 2
a135 2
      0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1,  \
      1, 0, 0, 0 } }
d140 1
a140 1
      0, 0, 0, 0 } }
d145 1
a145 1
      0, 0, 0, 0 } }
d150 1
a150 1
      0, 0, 0, 0 } }
d155 1
a155 1
      0, 0, 0, 0 } }
d160 1
a160 1
      0, 0, 0, 0 } }
d165 1
a165 1
      0, 0, 0, 0 } }
d170 1
a170 1
      0, 0, 0, 0 } }
d175 1
a175 1
      0, 0, 0, 0 } }
d180 1
a180 1
      0, 0, 0, 0 } }
d185 1
a185 1
      0, 0, 0, 0 } }
d190 1
a190 1
      0, 0, 0, 0 } }
d195 1
a195 1
      0, 0, 0, 0 } }
d200 1
a200 1
      0, 0, 0, 0 } }
d205 1
a205 1
      0, 0, 0, 0 } }
d210 1
a210 1
      0, 0, 0, 0 } }
d215 1
a215 1
      0, 0, 0, 0 } }
d220 6
a225 1
      0, 0, 0, 0 } }
d229 2
a230 2
      0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0 } }
d234 2
a235 2
      0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0 } }
d239 2
a240 2
      0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0 } }
d244 2
a245 2
      0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0 } }
d249 2
a250 2
      0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0,  \
      0, 0, 0, 0 } }
d254 2
a255 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,  \
      0, 0, 0, 0 } }
d259 2
a260 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,  \
      0, 0, 0, 0 } }
d264 5
d270 6
a275 1
      0, 0, 0, 0 } }
d277 6
a282 1
#define CPU_EPT_FLAGS \
d284 2
a285 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,  \
      0, 0, 0, 0 } }
d290 1
a290 1
      0, 0, 0, 0 } }
d295 1
a295 1
      0, 0, 0, 0 } }
d300 1
a300 1
      0, 0, 0, 0 } }
d305 1
a305 1
      0, 0, 0, 0 } }
d310 1
a310 1
      0, 0, 0, 0 } }
d315 1
a315 1
      0, 0, 0, 0 } }
d320 1
a320 1
      0, 0, 0, 0 } }
d325 1
a325 1
      0, 0, 0, 0 } }
d330 1
a330 1
      1, 0, 1, 1 } }
@


1.32
log
@2010-02-10  Quentin Neill  <quentin.neill@@amd.com>
            Sebastian Pop  <sebastian.pop@@amd.com>

gas:
        * config/tc-i386.c (vec_imm4) New operand type.
        (fits_in_imm4): New.
        (VEX_check_operands): New.
        (check_reverse): Call VEX_check_operands.
        (build_modrm_byte): Reintroduce code for 5
        operand insns.  Fix whitespace.

gas/testsuite:
        * gas/i386/x86-64-xop.d: Add vpermil2p[sd] tests.
        * gas/i386/x86-64-xop.s: Likewise.
        * gas/i386/xop.d: Likewise.
        * gas/i386/xop.s: Likewise.

opcodes:
        * i386-dis.c (OP_EX_VexImmW): Reintroduced
        function to handle 5th imm8 operand.
        (PREFIX_VEX_3A48): Added.
        (PREFIX_VEX_3A49): Added.
        (VEX_W_3A48_P_2): Added.
        (VEX_W_3A49_P_2): Added.
        (prefix table): Added entries for PREFIX_VEX_3A48
        and PREFIX_VEX_3A49.
        (vex table): Added entries for VEX_W_3A48_P_2 and
        and VEX_W_3A49_P_2.
        * i386-gen.c (operand_type_init): Added OPERAND_TYPE_VEC_IMM4
        for Vec_Imm4 operands.
        * i386-opc.h (enum): Added Vec_Imm4.
        (i386_operand_type): Added vec_imm4.
        * i386-opc.tbl: Add entries for vpermilp[ds].
        * i386-init.h: Regenerated.
        * i386-tbl.h: Regenerated.
@
text
@d2 1
a2 1
/* Copyright 2007, 2008, 2009
@


1.31
log
@2010-02-03  Quentin Neill  <quentin.neill@@amd.com>

gas/
	* config/tc-i386.c (cpu_arch): Change amdfam15 to bdver1.
	(i386_align_code): Rename  PROCESSOR_AMDFAM15 to PROCESSOR_BDVER1.
	* config/tc-i386.h (processor_type): Same.
	* doc/c-i386.texi: Change amdfam15 to bdver1.

opcodes/
	* i386-gen.c (cpu_flag_init): Rename CPU_AMDFAM15_FLAGS
	to CPU_BDVER1_FLAGS
	* i386-init.h: Regenerated.

testsuite/
	* gas/i386/i386.exp: Rename amdfam15 test cases to bdver1.
	* gas/i386/x86-64-nops-1-amdfam15.d: Renamed test case to
	gas/i386/x86-64-nops-1-bdver1.d.
	* gas/i386/nops-1-amdfam15.d: Renamed test case to
	gas/i386/nops-1-bdver1.d.
@
text
@d316 1
a316 1
      0, 0, 0, 0, 0 } }
d321 1
a321 1
      0, 0, 0, 0, 0 } }
d326 1
a326 1
      0, 0, 0, 0, 0 } }
d331 1
a331 1
      0, 0, 0, 0, 0 } }
d336 1
a336 1
      0, 0, 0, 0, 0 } }
d341 1
a341 1
      0, 0, 0, 0, 0 } }
d346 1
a346 1
      0, 0, 0, 0, 0 } }
d351 1
a351 1
      0, 0, 0, 0, 0 } }
d356 1
a356 1
      0, 0, 0, 0, 0 } }
d361 1
a361 1
      0, 0, 0, 0, 0 } }
d366 1
a366 1
      0, 0, 0, 0, 0 } }
d371 1
a371 1
      0, 0, 0, 0, 0 } }
d376 1
a376 1
      0, 0, 0, 0, 0 } }
d381 1
a381 1
      0, 0, 0, 0, 0 } }
d386 1
a386 1
      0, 0, 0, 0, 0 } }
d391 1
a391 1
      0, 0, 0, 0, 0 } }
d396 1
a396 1
      0, 0, 0, 0, 0 } }
d401 1
a401 1
      0, 0, 0, 0, 0 } }
d406 1
a406 1
      0, 0, 0, 0, 0 } }
d411 1
a411 1
      0, 0, 0, 0, 0 } }
d416 1
a416 1
      0, 0, 0, 0, 0 } }
d421 1
a421 1
      0, 0, 0, 0, 0 } }
d426 1
a426 1
      0, 0, 0, 0, 0 } }
d431 1
a431 1
      0, 0, 0, 0, 0 } }
d436 1
a436 1
      0, 0, 0, 0, 0 } }
d441 1
a441 1
      0, 0, 0, 0, 0 } }
d446 1
a446 1
      0, 0, 0, 0, 0 } }
d451 1
a451 1
      0, 0, 0, 0, 0 } }
d456 1
a456 1
      0, 0, 0, 0, 0 } }
d461 1
a461 1
      0, 0, 0, 0, 0 } }
d466 1
a466 1
      0, 0, 0, 0, 0 } }
d471 1
a471 1
      0, 0, 0, 0, 0 } }
d476 1
a476 1
      0, 0, 0, 0, 0 } }
d481 1
a481 1
      0, 0, 0, 0, 0 } }
d486 1
a486 1
      0, 0, 0, 0, 0 } }
d491 1
a491 1
      0, 0, 0, 0, 0 } }
d496 1
a496 1
      0, 0, 0, 0, 0 } }
d501 1
a501 1
      0, 0, 0, 0, 0 } }
d506 1
a506 1
      0, 0, 0, 0, 0 } }
d511 1
a511 1
      0, 0, 0, 0, 0 } }
d516 1
a516 1
      0, 0, 0, 0, 0 } }
d521 1
a521 1
      0, 0, 0, 0, 0 } }
d526 1
a526 1
      0, 0, 0, 0, 0 } }
d531 1
a531 1
      0, 0, 0, 0, 0 } }
d536 1
a536 1
      0, 0, 0, 0, 0 } }
d541 6
a546 1
      0, 0, 0, 0, 0 } }
@


1.30
log
@2010-01-06  Quentin Neill  <quentin.neill@@amd.com>

gas/
       * config/tc-i386.c (cpu_arch): Add amdfam15.
         (i386_align_code): Add PROCESSOR_AMDFAM15 cases.
       * config/tc-i386.h (processor_type): Add PROCESSOR_AMDFAM15.
       * doc/c-i386.texi: Add amdfam15.

opcodes/
       * i386-gen.c (cpu_flag_init): Add new CPU_AMDFAM15_FLAGS.
       * i386-init.h: Regenerated.

testsuite/
       * gas/i386/i386.exp: Add new amdfam15 test cases.
       * gas/i386/nops-1-amdfam15.d: New.
@
text
@d132 1
a132 1
#define CPU_AMDFAM15_FLAGS \
@


1.29
log
@2009-11-18  Sebastian Pop  <sebastian.pop@@amd.com>

	gas/
	* config/tc-i386.c (cpu_arch): Remove cvt16.
	(md_show_usage): Same.
	* doc/c-i386.texi: Same.

	gas/testsuite/
	* gas/i386/cvt16.d: Removed.
	* gas/i386/cvt16.s: Removed.
	* gas/i386/x86-64-cvt16.d: Removed.
	* gas/i386/x86-64-cvt16.s: Removed.
	* gas/i386/i386.exp: Remove cvt16 and x86-64-cvt16 tests.

	opcodes/
	* i386-dis.c (VEX_LEN_XOP_08_A0): Removed.
	(VEX_LEN_XOP_08_A1): Removed.
	(xop_table): Remove entries for VEX_LEN_XOP_08_A0 and
	VEX_LEN_XOP_08_A1.
	(vex_len_table): Same.
	* i386-gen.c (CPU_CVT16_FLAGS): Removed.
	(cpu_flags): Remove field for CpuCVT16.
	* i386-opc.h (CpuCVT16): Removed.
	(i386_cpu_flags): Remove bitfield cpucvt16.
	(i386-opc.tbl): Remove CVT16 instructions.
	* i386-init.h: Regenerated.
	* i386-tbl.h: Regenerated.
@
text
@d132 5
@


1.28
log
@2009-11-17  Sebastian Pop  <sebastian.pop@@amd.com>
	    Quentin Neill  <quentin.neill@@amd.com>

	gas/
	* config/tc-i386.c (cpu_arch): Added .xop and .cvt16.
	(build_vex_prefix): Handle xop08.
	(md_assemble): Don't special case the constant 3 for insns using MODRM.
	(build_modrm_byte): Handle vex2sources.
	(md_show_usage): Add xop and cvt16.
	* doc/c-i386.texi: Document fma4, xop, and cvt16.

	gas/testsuite/
	* gas/i386/i386.exp: Run xop and cvt16 in 32-bit mode.
	Run x86-64-xop and x86-64-cvt16 in 64-bit mode.
	* gas/i386/lwp.d: Update name of the testcase.
	* gas/i386/x86-64-xop.d: New.
	* gas/i386/x86-64-xop.s: New.
	* gas/i386/xop.d: New.
	* gas/i386/xop.s: New.
	* gas/i386/cvt16.d: New.
	* gas/i386/cvt16.s: New.

	opcodes/
	* i386-dis.c (OP_Vex_2src_1): New.
	(OP_Vex_2src_2): New.
	(Vex_2src_1): New.
	(Vex_2src_2): New.
	(XOP_08): Added.
	(VEX_LEN_XOP_08_A0): Added.
	(VEX_LEN_XOP_08_A1): Added.
	(VEX_LEN_XOP_09_80): Added.
	(VEX_LEN_XOP_09_81): Added.
	(xop_table): Added an entry for XOP_08.  Handle xop instructions.
	(vex_len_table): Added entries for VEX_LEN_XOP_08_A0,
	VEX_LEN_XOP_08_A1, VEX_LEN_XOP_09_80, VEX_LEN_XOP_09_81.
	(get_valid_dis386): Handle XOP_08.
	(OP_Vex_2src): New.
	* i386-gen.c (cpu_flag_init): Add CPU_XOP_FLAGS and CPU_CVT16_FLAGS.
	(cpu_flags): Add CpuXOP and CpuCVT16.
	(opcode_modifiers): Add XOP08, Vex2Sources.
	* i386-opc.h (CpuXOP): Added.
	(CpuCVT16): Added.
	(i386_cpu_flags): Add cpuxop and cpucvt16.
	(XOP08): Added.
	(Vex2Sources): Added.
	(i386_opcode_modifier): Add xop08, vex2sources.
	* i386-opc.tbl: Add entries for XOP and CVT16 instructions.
	* i386-init.h: Regenerated.
	* i386-tbl.h: Regenerated.
@
text
@d25 1
a25 1
      1, 1, 0, 1, 1 } }
d30 1
a30 1
      0, 0, 0, 0, 0 } }
d35 1
a35 1
      0, 1, 0, 0, 0 } }
d40 1
a40 1
      0, 0, 0, 0, 0 } }
d45 1
a45 1
      0, 0, 0, 0, 0 } }
d50 1
a50 1
      0, 0, 0, 0, 0 } }
d55 1
a55 1
      0, 0, 0, 0, 0 } }
d60 1
a60 1
      0, 0, 0, 0, 0 } }
d65 1
a65 1
      0, 0, 0, 0, 0 } }
d70 1
a70 1
      0, 0, 0, 0, 0 } }
d75 1
a75 1
      0, 0, 0, 0, 0 } }
d80 1
a80 1
      0, 0, 0, 0, 0 } }
d85 1
a85 1
      0, 0, 0, 0, 0 } }
d90 1
a90 1
      0, 1, 0, 0, 0 } }
d95 1
a95 1
      0, 0, 0, 0, 0 } }
d100 1
a100 1
      0, 1, 0, 0, 0 } }
d104 2
a105 2
      0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      1, 1, 0, 0, 0 } }
d110 1
a110 1
      0, 0, 0, 0, 0 } }
d115 1
a115 1
      0, 0, 0, 0, 0 } }
d120 1
a120 1
      0, 0, 0, 0, 0 } }
d124 2
a125 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      1, 1, 0, 0, 0 } }
d129 2
a130 2
      0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      1, 1, 0, 0, 0 } }
d135 1
a135 1
      0, 0, 0, 0, 0 } }
d140 1
a140 1
      0, 0, 0, 0, 0 } }
d145 1
a145 1
      0, 0, 0, 0, 0 } }
d150 1
a150 1
      0, 0, 0, 0, 0 } }
d155 1
a155 1
      0, 0, 0, 0, 0 } }
d160 1
a160 1
      0, 0, 0, 0, 0 } }
d165 1
a165 1
      0, 0, 0, 0, 0 } }
d170 1
a170 1
      0, 0, 0, 0, 0 } }
d175 1
a175 1
      0, 0, 0, 0, 0 } }
d180 1
a180 1
      0, 0, 0, 0, 0 } }
d185 1
a185 1
      0, 0, 0, 0, 0 } }
d190 1
a190 1
      0, 0, 0, 0, 0 } }
d195 1
a195 1
      0, 0, 0, 0, 0 } }
d200 1
a200 1
      0, 0, 0, 0, 0 } }
d205 1
a205 1
      0, 0, 0, 0, 0 } }
d210 1
a210 1
      0, 0, 0, 0, 0 } }
d215 1
a215 1
      0, 0, 0, 0, 0 } }
d220 1
a220 1
      0, 0, 0, 0, 0 } }
d225 1
a225 1
      0, 0, 0, 0, 0 } }
d230 1
a230 1
      0, 0, 0, 0, 0 } }
d235 1
a235 1
      0, 0, 0, 0, 0 } }
d239 2
a240 7
      0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0,  \
      0, 0, 0, 0, 0 } }

#define CPU_CVT16_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0,  \
      0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0,  \
      0, 0, 0, 0, 0 } }
d244 2
a245 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,  \
      0, 0, 0, 0, 0 } }
d249 2
a250 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,  \
      0, 0, 0, 0, 0 } }
d254 2
a255 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      1, 0, 0, 0, 0 } }
d259 2
a260 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,  \
      0, 0, 0, 0, 0 } }
d265 1
a265 1
      0, 0, 0, 0, 0 } }
d270 1
a270 1
      0, 0, 0, 0, 0 } }
d275 1
a275 1
      0, 0, 0, 0, 0 } }
d280 1
a280 1
      0, 0, 0, 0, 0 } }
d285 1
a285 1
      0, 0, 0, 0, 0 } }
d290 1
a290 1
      0, 0, 0, 0, 0 } }
d295 1
a295 1
      0, 0, 0, 0, 0 } }
d300 1
a300 1
      0, 0, 0, 0, 0 } }
d305 1
a305 1
      1, 1, 0, 1, 1 } }
@


1.27
log
@2009-11-05  Sebastian Pop  <sebastian.pop@@amd.com>
	    Quentin Neill  <quentin.neill@@amd.com>

	* gas/config/tc-i386.c (cpu_arch): Add CPU_LWP_FLAGS.
	(build_vex_prefix): Handle xop09 and xop0a.
	(build_modrm_byte): Handle vexlwp.
	(md_show_usage): Add lwp.
	* gas/doc/c-i386.texi (i386-LWP): New section.

	* gas/testsuite/gas/i386/i386.exp: Run x86-64-lwp in 64-bit mode,
	run lwp in 32-bit mode.
	* gas/testsuite/gas/i386/x86-64-lwp.d: New.
	* gas/testsuite/gas/i386/x86-64-lwp.s: New.
	* gas/testsuite/gas/i386/lwp.d: New.
	* gas/testsuite/gas/i386/lwp.s: New.

	* opcodes/i386-dis.c (OP_LWPCB_E): New.
	(OP_LWP_E): New.
	(OP_LWP_I): New.
	(USE_XOP_8F_TABLE): New.
	(XOP_8F_TABLE): New.
	(REG_XOP_LWPCB): New.
	(REG_XOP_LWP): New.
	(XOP_09): New.
	(XOP_0A): New.
	(reg_table): Redirect REG_8F to XOP_8F_TABLE.
	Add entries for REG_XOP_LWPCB and REG_XOP_LWP.
	(xop_table): New.
	(get_valid_dis386): Handle USE_XOP_8F_TABLE.
	Use the offsets VEX_0F, VEX_0F38, and VEX_0F3A instead of their values
	to access to the vex_table.
	(OP_LWPCB_E): New.
	(OP_LWP_E): New.
	(OP_LWP_I): New.
	* opcodes/i386-gen.c (cpu_flag_init): Add CPU_LWP_FLAGS, CpuLWP.
	(cpu_flags): Add CpuLWP.
	(opcode_modifiers): Add VexLWP, XOP09, and XOP0A.
	* opcodes/i386-opc.h (CpuLWP): New.
	(i386_cpu_flags): Add bit cpulwp.
	(VexLWP): New.
	(XOP09): New.
	(XOP0A): New.
	(i386_opcode_modifier): Add vexlwp, xop09, and xop0a.
	* opcodes/i386-opc.tbl (llwpcb): Added.
	(lwpval): Added.
	(lwpins): Added.
@
text
@d25 1
a25 1
      0, 1, 1 } }
d30 1
a30 1
      0, 0, 0 } }
d34 2
a35 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,  \
      0, 0, 0 } }
d40 1
a40 1
      0, 0, 0 } }
d45 1
a45 1
      0, 0, 0 } }
d50 1
a50 1
      0, 0, 0 } }
d55 1
a55 1
      0, 0, 0 } }
d60 1
a60 1
      0, 0, 0 } }
d65 1
a65 1
      0, 0, 0 } }
d70 1
a70 1
      0, 0, 0 } }
d75 1
a75 1
      0, 0, 0 } }
d80 1
a80 1
      0, 0, 0 } }
d85 1
a85 1
      0, 0, 0 } }
d89 2
a90 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,  \
      0, 0, 0 } }
d95 1
a95 1
      0, 0, 0 } }
d99 2
a100 2
      0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,  \
      0, 0, 0 } }
d104 2
a105 2
      0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,  \
      0, 0, 0 } }
d110 1
a110 1
      0, 0, 0 } }
d115 1
a115 1
      0, 0, 0 } }
d120 1
a120 1
      0, 0, 0 } }
d124 2
a125 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,  \
      0, 0, 0 } }
d129 2
a130 2
      0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,  \
      0, 0, 0 } }
d135 1
a135 1
      0, 0, 0 } }
d140 1
a140 1
      0, 0, 0 } }
d145 1
a145 1
      0, 0, 0 } }
d150 1
a150 1
      0, 0, 0 } }
d155 1
a155 1
      0, 0, 0 } }
d160 1
a160 1
      0, 0, 0 } }
d165 1
a165 1
      0, 0, 0 } }
d170 1
a170 1
      0, 0, 0 } }
d175 1
a175 1
      0, 0, 0 } }
d180 1
a180 1
      0, 0, 0 } }
d185 1
a185 1
      0, 0, 0 } }
d190 1
a190 1
      0, 0, 0 } }
d195 1
a195 1
      0, 0, 0 } }
d200 1
a200 1
      0, 0, 0 } }
d205 1
a205 1
      0, 0, 0 } }
d210 1
a210 1
      0, 0, 0 } }
d215 1
a215 1
      0, 0, 0 } }
d220 1
a220 1
      0, 0, 0 } }
d225 1
a225 1
      0, 0, 0 } }
d230 1
a230 1
      0, 0, 0 } }
d235 11
a245 1
      0, 0, 0 } }
d249 2
a250 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,  \
      0, 0, 0 } }
d254 2
a255 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,  \
      0, 0, 0 } }
d259 2
a260 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,  \
      0, 0, 0 } }
d264 2
a265 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,  \
      0, 0, 0 } }
d270 1
a270 1
      0, 0, 0 } }
d275 1
a275 1
      0, 0, 0 } }
d280 1
a280 1
      0, 0, 0 } }
d285 1
a285 1
      0, 0, 0 } }
d290 1
a290 1
      0, 0, 0 } }
d295 1
a295 1
      0, 0, 0 } }
d300 1
a300 1
      0, 0, 0 } }
d305 1
a305 1
      0, 0, 0 } }
d310 1
a310 1
      0, 1, 1 } }
@


1.26
log
@bfd/

2009-07-25  H.J. Lu  <hongjiu.lu@@intel.com>

	* archures.c (bfd_architecture): Add bfd_arch_l1om.
	(bfd_l1om_arch): New.
	(bfd_archures_list): Add &bfd_l1om_arch.
	* bfd-in2.h: Regenerated.

	* config.bfd (targ64_selvecs): Add bfd_elf64_l1om_vec if
	bfd_elf64_x86_64_vec is supported.  Add bfd_elf64_l1om_freebsd_vec
	if bfd_elf64_x86_64_freebsd_vec is supported.
	(targ_selvecs): Likewise.

	* configure.in: Support bfd_elf64_l1om_vec and
	bfd_elf64_l1om_freebsd_vec.
	* configure: Regenerated.

	* cpu-l1om.c: New.

	* elf64-x86-64.c (elf64_l1om_elf_object_p): New.
	(bfd_elf64_l1om_vec): Likewise.
	(bfd_elf64_l1om_freebsd_vec): Likewise.

	* Makefile.am (ALL_MACHINES): Add cpu-l1om.lo.
	(ALL_MACHINES_CFILES): Add cpu-l1om.c.
	* Makefile.in: Regenerated.

	* targets.c (bfd_elf64_l1om_vec): New.
	(bfd_elf64_l1om_freebsd_vec): Likewise.
	(_bfd_target_vector): Add bfd_elf64_l1om_vec and
	bfd_elf64_l1om_freebsd_vec.

binutils/

2009-07-25  H.J. Lu  <hongjiu.lu@@intel.com>

	* readelf.c (guess_is_rela): Handle EM_L1OM.
	(dump_relocations): Likewise.
	(get_machine_name): Likewise.
	(get_section_type_name): Likewise.
	(get_elf_section_flags): Likewise.
	(get_symbol_index_type): Likewise.
	(is_32bit_abs_reloc): Likewise.
	(is_32bit_pcrel_reloc): Likewise.
	(is_64bit_abs_reloc): Likewise.
	(is_64bit_pcrel_reloc): Likewise.
	(is_none_reloc): Likewise.

gas/

2009-07-25  H.J. Lu  <hongjiu.lu@@intel.com>

	* config/tc-i386.c (cpu_arch): Add l1om.
	(check_cpu_arch_compatible): New.
	(set_cpu_arch): Use it.
	(i386_arch): New.
	(i386_mach): Return bfd_mach_l1om for Intel L1OM.
	(md_show_usage): Display l1om.
	(i386_target_format): Return ELF_TARGET_L1OM_FORMAT if
	cpu_arch_isa_flags.bitfield.cpul1om is set.

	* config/tc-i386.h (TARGET_ARCH): Use (i386_arch ()).
	(i386_arch): New.
	(ELF_TARGET_L1OM_FORMAT): Likewise.

	* doc/c-i386.texi: Document l1om.

gas/testsuite/

2009-07-25  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/l1om.d: New.
	* gas/i386/l1om-inval.l: Likewise.
	* gas/i386/l1om-inval.s: Likewise.

	* gas/i386/i386.exp: Run l1om-inval and l1om.

include/elf/

2009-07-25  H.J. Lu  <hongjiu.lu@@intel.com>

	* common.h (EM_L1OM): New.

ld/

2009-07-25  H.J. Lu  <hongjiu.lu@@intel.com>

	* configure.tgt (targ64_extra_emuls): Add elf_l1om if elf_x86_64
	is supported.  Add elf_l1om_fbsd if elf_x86_64_fbsd is supported.
	(targ_extra_emuls): Likewise.

	* Makefile.am (ALL_64_EMULATIONS): Add eelf_l1om.o and
	eelf_l1om_fbsd.o
	(eelf_l1om.c): New.
	(eelf_l1om_fbsd.c): Likewise.
	* Makefile.in: Regenerated.

	* emulparams/elf_l1om.sh: New.
	* emulparams/elf_l1om_fbsd.sh: Likewise.

ld/testsuite/

2009-07-25  H.J. Lu  <hongjiu.lu@@intel.com>

	* ld-x86-64/abs-l1om.d: New.
	* ld-x86-64/protected2-l1om.d: Likewise.
	* ld-x86-64/protected3-l1om.d: Likewise.

	* ld-x86-64/x86-64.exp: Run abs-l1om, protected2-l1om and
	protected3-l1om.

opcodes/

2009-07-25  H.J. Lu  <hongjiu.lu@@intel.com>

	* configure.in: Handle bfd_l1om_arch.
	* disassemble.c (disassembler): Likewise.

	* configure: Regenerated.

	* i386-dis.c (print_insn): Handle bfd_mach_l1om and
	bfd_mach_l1om_intel_syntax.  Use 8 bytes per line for Intel L1OM.

	* i386-gen.c (cpu_flag_init): Set CPU_UNKNOWN_FLAGS to ~CpuL1OM.
	Add CPU_L1OM_FLAGS.
	(cpu_flags): Add CpuL1OM.
	(set_bitfield): Take an argument to set the value field.
	(process_i386_cpu_flag): Support ~CpuXXX and ~(CpuXXX|CpuYYY).
	(process_i386_opcode_modifier): Updated.
	(process_i386_operand_type): Likewise.
	* i386-init.h: Regenerated.
	* i386-tbl.h: Likewise.

	* i386-opc.h (CpuL1OM): New.
	(CpuXsave): Updated.
	(i386_cpu_flags): Add cpul1om.
@
text
@d24 2
a25 2
      1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,  \
      1, 1 } }
d30 1
a30 1
      0, 0 } }
d34 2
a35 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,  \
      0, 0 } }
d40 1
a40 1
      0, 0 } }
d45 1
a45 1
      0, 0 } }
d50 1
a50 1
      0, 0 } }
d55 1
a55 1
      0, 0 } }
d60 1
a60 1
      0, 0 } }
d65 1
a65 1
      0, 0 } }
d70 1
a70 1
      0, 0 } }
d75 1
a75 1
      0, 0 } }
d80 1
a80 1
      0, 0 } }
d85 1
a85 1
      0, 0 } }
d89 2
a90 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,  \
      0, 0 } }
d95 1
a95 1
      0, 0 } }
d99 2
a100 2
      0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,  \
      0, 0 } }
d104 2
a105 2
      0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,  \
      0, 0 } }
d110 1
a110 1
      0, 0 } }
d115 1
a115 1
      0, 0 } }
d120 1
a120 1
      0, 0 } }
d124 2
a125 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,  \
      0, 0 } }
d129 2
a130 2
      0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,  \
      0, 0 } }
d135 1
a135 1
      0, 0 } }
d140 1
a140 1
      0, 0 } }
d145 1
a145 1
      0, 0 } }
d150 1
a150 1
      0, 0 } }
d155 1
a155 1
      0, 0 } }
d160 1
a160 1
      0, 0 } }
d165 1
a165 1
      0, 0 } }
d170 1
a170 1
      0, 0 } }
d175 1
a175 1
      0, 0 } }
d180 1
a180 1
      0, 0 } }
d185 1
a185 1
      0, 0 } }
d190 1
a190 1
      0, 0 } }
d195 1
a195 1
      0, 0 } }
d200 1
a200 1
      0, 0 } }
d205 1
a205 1
      0, 0 } }
d210 1
a210 1
      0, 0 } }
d215 1
a215 1
      0, 0 } }
d220 1
a220 1
      0, 0 } }
d225 1
a225 1
      0, 0 } }
d230 1
a230 1
      0, 0 } }
d235 6
a240 1
      0, 0 } }
d244 2
a245 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,  \
      0, 0 } }
d249 2
a250 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,  \
      0, 0 } }
d254 2
a255 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,  \
      0, 0 } }
d260 1
a260 1
      0, 0 } }
d265 1
a265 1
      0, 0 } }
d270 1
a270 1
      0, 0 } }
d275 1
a275 1
      0, 0 } }
d280 1
a280 1
      0, 0 } }
d285 1
a285 1
      0, 0 } }
d290 1
a290 1
      0, 0 } }
d295 1
a295 1
      0, 0 } }
d299 2
a300 2
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,  \
      1, 1 } }
@


1.25
log
@gas/
2009-07-24  Jan Beulich  <jbeulich@@novell.com>

	* tc-i386.c (cpu_arch): Add .8087, .287, .387, .no87, .nommx,
	.nosse, and .noavx.
	(cpu_flags_and_not): New.
	(set_cpu_arch): Check whether sub-architecture specified is a
	feature disable.
	(md_parse_option): Likewise.
	(parse_real_register): Don't return floating point register
	when x87 functionality is disabled.
	(md_show_usage): Add new sub-options.
	* doc/c-i386.texi: Update with new command line sub-options.

gas/testsuite/
2009-07-24  Jan Beulich  <jbeulich@@novell.com>

	* gas/i386/8087.[ds]: New.
	* gas/i386/287.[ds]: New.
	* gas/i386/387.[ds]: New.
	* gas/i386/no87.[ls]: New.
	* gas/i386/no87-2.[ls]: New.
	* gas/i386/i386.exp: Run new tests.
	* gas/i386/att-regs.s: Also check FPU register access.
	* gas/i386/intel-regs.s: Likewise.
	* gas/i386/att-regs.d: Adjust expectations.
	* gas/i386/intel-regs.d: Likewise.

opcodes/
2009-07-24  Jan Beulich  <jbeulich@@novell.com>

	* i386-dis.c (fgrps): Correct annotation for feni/fdisi. Add
	frstpm.
	* i386-gen.c (cpu_flag_init): Add FP enabling flags where needed.
	(cpu_flags): Add Cpu8087, Cpu287, Cpu387, Cpu687, and CpuFISTTP.
	(set_bitfield): Expand CpuFP to Cpu8087|Cpu287|Cpu387.
	* i386-opc.h (Cpu8087, Cpu287, Cpu387, Cpu687, CpuFISTTP):
	Define.
	(union i386_cpu_flags): Add cpu8087, cpu287, cpu387, cpu687,
	and cpufisttp.
	* i386-opc.tbl: Qualify floating point instructions by their
	respective CpuXXX flag. Fix fucom{,p,pp}, fprem1, fsin, fcos,
	and fsincos to be avilable only on 387. Fix fstsw ax to be
	available only on 287+. Add f{,n}eni, f{,n}disi, f{,n}setpm,
	and frstpm.
	* i386-init.h, i386-tbl.h: Regenerate.
@
text
@d24 2
a25 2
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1,  \
      1 } }
d30 1
a30 1
      0 } }
d34 2
a35 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,  \
      0 } }
d40 1
a40 1
      0 } }
d45 1
a45 1
      0 } }
d50 1
a50 1
      0 } }
d55 1
a55 1
      0 } }
d60 1
a60 1
      0 } }
d65 1
a65 1
      0 } }
d70 1
a70 1
      0 } }
d75 1
a75 1
      0 } }
d80 1
a80 1
      0 } }
d85 1
a85 1
      0 } }
d89 2
a90 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,  \
      0 } }
d95 1
a95 1
      0 } }
d99 2
a100 2
      0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,  \
      0 } }
d104 2
a105 2
      0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0,  \
      0 } }
d110 1
a110 1
      0 } }
d115 1
a115 1
      0 } }
d120 1
a120 1
      0 } }
d124 2
a125 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0,  \
      0 } }
d129 2
a130 2
      0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0,  \
      0 } }
d135 1
a135 1
      0 } }
d140 1
a140 1
      0 } }
d145 1
a145 1
      0 } }
d150 1
a150 1
      0 } }
d155 1
a155 1
      0 } }
d160 1
a160 1
      0 } }
d165 1
a165 1
      0 } }
d170 1
a170 1
      0 } }
d175 1
a175 1
      0 } }
d180 1
a180 1
      0 } }
d185 1
a185 1
      0 } }
d190 1
a190 1
      0 } }
d195 1
a195 1
      0 } }
d200 1
a200 1
      0 } }
d205 1
a205 1
      0 } }
d210 1
a210 1
      0 } }
d214 2
a215 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0 } }
d219 2
a220 2
      0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0 } }
d224 2
a225 2
      0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0 } }
d229 2
a230 2
      0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,  \
      0 } }
d234 2
a235 2
      0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,  \
      0 } }
d239 2
a240 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,  \
      0 } }
d244 2
a245 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,  \
      0 } }
d249 2
a250 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,  \
      0 } }
d255 1
a255 1
      0 } }
d260 1
a260 1
      0 } }
d265 1
a265 1
      0 } }
d270 1
a270 1
      0 } }
d275 1
a275 1
      0 } }
d280 1
a280 1
      0 } }
d285 1
a285 1
      0 } }
d290 6
a295 1
      0 } }
@


1.24
log
@<gas changes>
2009-07-06  Dwarakanath Rajagopal  <dwarak.rajagopal@@amd.com>

	* config/tc-i386.c (cpu_arch): Add .fma4 and CPU_FMA4_FLAGS.
	(build_modrm_byte): Add support to handle FMA4 instructions.
	(md_show_usage): Add fma4.

<gas/testsuite changes>
2009-07-06  Dwarakanath Rajagopal  <dwarak.rajagopal@@amd.com>

	* gas/i386/i386.exp: Add FMA4 tests.
	* gas/i386/x86-64-fma4.d: Ditto.
	* gas/i386/fma4.d: Ditto.
	* gas/i386/x86-64-fma4.s: Ditto.
	* gas/i386/fma4.s: Ditto.

<opcodes changes>
2009-07-06  Dwarakanath Rajagopal  <dwarak.rajagopal@@amd.com>

	* i386-opc.h (CpuFMA4): Add CpuFMA4.
	(i386_cpu_flags): New.
	* i386-gen.c: Add CPU_FMA4_FLAGS.
	* i386-opc.tbl: Add FMA4 instructions.
	* i386-tbl.h: Regenerate.
	* i386-init.h: Regenerate.
	* i386-dis.c (OP_VEX_FMA): New. Handle FMA4.
	(OP_XMM_VexW): Ditto.
	(OP_EX_VexW): Ditto.
	(VEXI4_Fixup): Ditto.
	(VexI4, VexFMA, Vex128FMA, EXVexW, EXdVexW, XMVexW): New Macros.
	(PREFIX_VEX_3A5C, PREFIX_VEX_3A5D, PREFIX_VEX_3A5E): New.
	(PREFIX_VEX_3A5F, PREFIX_VEX_3A60): New.
	(PREFIX_VEX_3A68, PREFIX_VEX_3A69, PREFIX_VEX_3A6A): New.
	(PREFIX_VEX_3A6B, PREFIX_VEX_3A6C, PREFIX_VEX_3A6D): New.
	(PREFIX_VEX_3A6E, PREFIX_VEX_3A6F, PREFIX_VEX_3A7A): New.
	(PREFIX_VEX_3A7B, PREFIX_VEX_3A7C, PREFIX_VEX_3A7D): New.
	(PREFIX_VEX_3A7E, PREFIX_VEX_3A7F): New.
	(VEX_LEN_3A6A_P_2,VEX_LEN_3A6B_P_2, VEX_LEN_3A6E_P_2): New.
	(VEX_LEN_3A6F_P_2,VEX_LEN_3A7A_P_2, VEX_LEN_3A7B_P_2): New.
	(VEX_LEN_3A7E_P_2,VEX_LEN_3A7F_P_2): New.
	(get_vex_imm8): New. handle FMA4.
	(OP_EX_VexReg): Ditto.
@
text
@d24 2
a25 1
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1 } }
d29 2
a30 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d33 3
a35 2
  { { 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d39 2
a40 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d44 2
a45 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d49 2
a50 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d54 2
a55 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d59 2
a60 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d63 3
a65 2
  { { 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d68 3
a70 2
  { { 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d73 3
a75 2
  { { 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d78 3
a80 2
  { { 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d83 3
a85 2
  { { 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d88 3
a90 2
  { { 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d93 3
a95 2
  { { 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d98 3
a100 2
  { { 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d103 3
a105 2
  { { 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0,  \
      0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 } }
d108 3
a110 2
  { { 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d113 3
a115 2
  { { 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d118 3
a120 2
  { { 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d123 3
a125 2
  { { 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 } }
d128 23
a150 2
  { { 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1,  \
      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 } }
d154 2
a155 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d159 2
a160 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d163 3
a165 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d168 3
a170 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d173 3
a175 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d178 3
a180 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d183 3
a185 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d188 3
a190 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0,  \
      0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d193 8
a200 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0,  \
      0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d203 3
a205 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d208 3
a210 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d214 2
a215 1
      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d218 3
a220 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0,  \
      0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d223 3
a225 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0,  \
      0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d228 3
a230 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0,  \
      0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 } }
d233 3
a235 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0,  \
      0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0 } }
d239 2
a240 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 } }
d244 2
a245 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 } }
d249 2
a250 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 } }
d253 3
a255 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d258 3
a260 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d263 3
a265 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d268 3
a270 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d273 3
a275 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d279 2
a280 1
      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d283 8
a290 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0,  \
      0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
@


1.23
log
@<gas changes>
2009-05-22  Dwarakanath Rajagopal  <dwarak.rajagopal@@amd.com>

	* config/tc-i386.c (process_drex): Delete. Remove SSE5 support.
	(build_modrm_byte): Remove DREX handling support.
	(DREX_*): Delete.
	(drex_byte): Delete.
	(md_assemble): Remove DREX handling support.
	(process_operands): Remove DREX, SSE5 support.
	(i386_insn): Remove DREX.

<gas/testsuite changes>
2009-05-22  Dwarakanath Rajagopal  <dwarak.rajagopal@@amd.com>

	* gas/i386/i386.exp: Remove SSE5 tests.
	* gas/i386/x86-64-sse5.s: Delete. Remove SSE5 tests.
	* gas/i386/x86-64-sse5.d: Ditto.
	* gas/i386/arch-10-1.l: Remove SSE5 tests.
	* gas/i386/arch-10-2.l: Ditto.
	* gas/i386/arch-10-3.l: Ditto.
	* gas/i386/arch-10-4.l: Ditto.
	* gas/i386/arch-10.d: Ditto.
	* gas/i386/arch-10.s: Ditto.
	* gas/i386/arch-4.s: Delete. Remove SSE5 tests.
	* gas/i386/arch-4.d: Ditto.
	* gas/i386/arch-8.s: Ditto.
	* gas/i386/arch-8.d: Ditto.
	* gas/i386/arch-2.s: Remove SSE5 tests.
	* gas/i386/arch-2.d: Remove SSE5 tests.
	* gas/i386/x86-64-arch-2.s: Ditto.

<opcodes changes>
2009-05-22  Dwarakanath Rajagopal  <dwarak.rajagopal@@amd.com>

	* i386-opc.h (Cpusse5): Delete.
	(i386_cpu_flags): Delete.
	* i386-gen.c: Remove CpuSSE5, Drex, Drexv and Drexc.
	* i386-opc.tbl: Remove SSE5 instructions.
	* i386-tbl.h: Regenerate.
	* i386-init.h: Regenerate.
	* i386-dis.c (OP_E_memeory, OP_E_extended): Remove drex handling.
	(print_drex_arg): Delete.
	(OP_DREX4): Delete.
	(OP_DREX3): Delete.
	(OP_DREX_ICMP): Delete.
	(OP_DREX_FCMP): Delete.
	(DREX_*): Delete.
	(THREE_BYTE_0F24, THREE_BYTE_0F25, THREE_BYTE_0f7B): Delete.
@
text
@d24 1
a24 1
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1 } }
d28 1
a28 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d32 1
a32 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d36 1
a36 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d40 1
a40 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d44 1
a44 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d48 1
a48 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d52 1
a52 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d56 1
a56 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d60 1
a60 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d64 1
a64 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d68 1
a68 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d72 1
a72 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d76 1
a76 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d80 1
a80 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d84 1
a84 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d88 1
a88 1
      0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 } }
d92 1
a92 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d96 1
a96 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d100 1
a100 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d104 1
a104 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 } }
d108 1
a108 1
      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 } }
d112 1
a112 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d116 1
a116 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d120 1
a120 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d124 1
a124 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d128 1
a128 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d132 1
a132 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d136 1
a136 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d140 1
a140 1
      0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d144 1
a144 1
      0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d148 1
a148 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d152 1
a152 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d156 1
a156 1
      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d160 1
a160 1
      0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d164 1
a164 1
      0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 } }
d168 5
a172 1
      0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0 } }
d176 1
a176 1
      0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 } }
d180 1
a180 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 } }
d184 1
a184 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 } }
d188 1
a188 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d192 1
a192 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d196 1
a196 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d200 1
a200 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d204 1
a204 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d208 1
a208 1
      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d212 1
a212 1
      0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
@


1.22
log
@gas/

2009-02-23  H.J. Lu  <hongjiu.lu@@intel.com>

	* config/tc-i386.c (vex_imm4): Removed.
	(VEX_check_operands): Likewise.
	(match_template): Updated.

opcodes/

2009-02-23  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386-gen.c (operand_type_init): Remove OPERAND_TYPE_VEX_IMM4.
	(operand_types): Remove Vex_Imm4.

	* i386-opc.h (Vex_Imm4): Removed.
	(OTMax): Updated.
	(i386_operand_type): Remove vex_imm4.

	* i386-opc.tbl: Remove Vex_Imm4 comments.
	* i386-init.h: Regenerated.
	* i386-tbl.h: Likewise.
@
text
@d24 1
a24 1
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1 } }
d28 1
a28 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d32 1
a32 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d36 1
a36 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d40 1
a40 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d44 1
a44 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d48 1
a48 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d52 1
a52 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d56 1
a56 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d60 1
a60 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d64 1
a64 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d68 1
a68 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d72 1
a72 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d76 1
a76 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d80 1
a80 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d84 1
a84 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d88 1
a88 1
      0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 } }
d92 1
a92 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d96 1
a96 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d100 1
a100 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d104 1
a104 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 } }
d108 1
a108 1
      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 } }
d112 1
a112 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d116 1
a116 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d120 1
a120 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d124 1
a124 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d128 1
a128 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d132 1
a132 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d136 1
a136 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d140 1
a140 1
      0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d144 1
a144 1
      0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d148 1
a148 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d152 1
a152 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d156 1
a156 1
      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d160 1
a160 1
      0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d164 1
a164 1
      0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 } }
d168 1
a168 1
      0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0 } }
d172 1
a172 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 } }
d176 1
a176 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 } }
d180 1
a180 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 } }
d184 1
a184 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d188 1
a188 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d192 1
a192 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d196 1
a196 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d200 1
a200 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d204 1
a204 5
      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

#define CPU_SSE5_FLAGS \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1,  \
      1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d208 1
a208 1
      0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
@


1.21
log
@gas/

2009-01-10  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/config/tc-i386.c (cpu_arch): Add corei7, .clflush and
	.syscall.
	(i386_align_code): Handle PROCESSOR_COREI7.
	(md_show_usage): Add corei7, clflush and syscall.
	(i386_target_format): Replace cpup4 with cpuclflush.

	* gas/config/tc-i386.h (processor_type): Add PROCESSOR_COREI7.

	* doc/c-i386.texi: Document corei7, clflush and syscall.

gas/testsuite/

2009-01-10  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/arch-10.s: Add clflush and syscall.
	* gas/i386/x86-64-arch-2.s: Likewise.

	* gas/i386/arch-10.d: Updated.
	* gas/i386/arch-10-1.l: Likewise.
	* gas/i386/arch-10-2.l: Likewise.
	* gas/i386/arch-10-3.l: Likewise.
	* gas/i386/arch-10-4.l: Likewise.
	* gas/i386/x86-64-arch-2.d: Likewise.

opcodes/

2009-01-10  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386-gen.c (cpu_flag_init): Replace CpuP4 and CpuK6 with
	CpuClflush and CpuSYSCALL, respectively. Remove CpuK8.  Add
	CPU_COREI7_FLAGS, CPU_CLFLUSH_FLAGS and CPU_SYSCALL_FLAGS.
	(cpu_flags): Remove CpuP4, CpuK6 and CpuK8.  Add CpuClflush
	and CpuSYSCALL.
	(lineno): Removed.
	(set_bitfield): Take an argument, lineno.  Don't report lineno
	on error if it is -1.
	(process_i386_cpu_flag): Take an argument, lineno.
	(process_i386_opcode_modifier): Likewise.
	(process_i386_operand_type): Likewise.
	(output_i386_opcode): Likewise.
	(opcode_hash_entry): Add lineno.
	(process_i386_opcodes): Updated.
	(process_i386_registers): Likewise.
	(process_i386_initializers): Likewise.

	* i386-opc.h (CpuP4): Removed.
	(CpuK6): Likewise.
	(CpuK8): Likewise.
	(CpuClflush): New.
	(CpuSYSCALL): Likewise.
	(CpuMMX): Updated.
	(i386_cpu_flags): Remove cpup4, cpuk6 and cpuk8.  Add
	cpuclflush and cpusyscall.

	* i386-opc.tbl: Update movnti, clflush, lfence, mfence, pause,
	syscall and sysret.
	* i386-init.h: Regenerated.
	* i386-tbl.h: Likewise.
@
text
@d218 1
a218 1
      0, 0, 0, 0, 0, 0 } }
d223 1
a223 1
      0, 0, 0, 0, 0, 0 } }
d228 1
a228 1
      0, 0, 0, 0, 0, 0 } }
d233 1
a233 1
      0, 0, 0, 0, 0, 0 } }
d238 1
a238 1
      0, 0, 0, 0, 0, 0 } }
d243 1
a243 1
      0, 0, 0, 0, 0, 0 } }
d248 1
a248 1
      0, 0, 0, 0, 0, 0 } }
d253 1
a253 1
      0, 0, 0, 0, 0, 0 } }
d258 1
a258 1
      0, 0, 0, 0, 0, 0 } }
d263 1
a263 1
      0, 0, 0, 0, 0, 0 } }
d268 1
a268 1
      0, 0, 0, 0, 0, 0 } }
d273 1
a273 1
      0, 0, 0, 0, 0, 0 } }
d278 1
a278 1
      0, 0, 0, 0, 0, 0 } }
d283 1
a283 1
      0, 0, 0, 0, 0, 0 } }
d288 1
a288 1
      0, 0, 0, 0, 0, 0 } }
d293 1
a293 1
      0, 0, 0, 0, 0, 0 } }
d298 1
a298 1
      0, 0, 0, 0, 0, 0 } }
d303 1
a303 1
      0, 0, 0, 0, 0, 0 } }
d308 1
a308 1
      0, 0, 0, 0, 0, 0 } }
d313 1
a313 1
      0, 0, 0, 0, 0, 0 } }
d318 1
a318 1
      0, 0, 0, 0, 0, 0 } }
d323 1
a323 1
      0, 0, 0, 0, 0, 0 } }
d328 1
a328 1
      0, 0, 0, 0, 0, 0 } }
d333 1
a333 1
      0, 0, 0, 0, 0, 0 } }
d338 1
a338 1
      0, 0, 0, 0, 0, 0 } }
d343 1
a343 1
      0, 0, 0, 0, 0, 0 } }
d348 1
a348 1
      0, 0, 0, 0, 0, 0 } }
d353 1
a353 1
      0, 0, 0, 0, 0, 0 } }
d358 1
a358 1
      0, 0, 0, 0, 0, 0 } }
d363 1
a363 1
      0, 0, 0, 0, 0, 0 } }
d368 1
a368 1
      0, 0, 0, 0, 0, 0 } }
d373 1
a373 1
      0, 0, 0, 0, 0, 0 } }
d378 1
a378 1
      0, 0, 0, 0, 0, 0 } }
d383 1
a383 1
      0, 0, 0, 0, 0, 0 } }
d388 1
a388 1
      0, 0, 0, 0, 0, 0 } }
d393 1
a393 1
      0, 0, 0, 0, 0, 0 } }
d398 1
a398 1
      0, 0, 0, 0, 0, 0 } }
d403 1
a403 1
      0, 0, 0, 0, 0, 0 } }
d408 1
a408 1
      0, 0, 0, 0, 0, 0 } }
d413 1
a413 1
      0, 0, 0, 0, 0, 0 } }
d418 1
a418 1
      0, 0, 0, 0, 0, 0 } }
d423 1
a423 1
      0, 0, 0, 0, 0, 0 } }
d428 1
a428 1
      0, 0, 0, 0, 0, 0 } }
d433 1
a433 1
      0, 0, 0, 0, 0, 0 } }
d438 1
a438 1
      0, 0, 0, 0, 0, 0 } }
d443 1
a443 6
      0, 0, 0, 0, 0, 0 } }

#define OPERAND_TYPE_VEX_IMM4 \
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 1, 0 } }
@


1.20
log
@gas/

2009-01-09  H.J. Lu  <hongjiu.lu@@intel.com>

	* config/tc-i386.c (cpu_arch): Add .rdtscp.
	(md_show_usage): Display rdtscp.

	* doc/c-i386.texi: Document rdtscp.

gas/testsuite/

2009-01-09  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/arch-10.s: Add rdtscp.
	* gas/i386/x86-64-arch-2.s: Likewise.

	* gas/i386/arch-10.d: Updated.
	* gas/i386/arch-10-1.l: Likewise.
	* gas/i386/arch-10-2.l: Likewise.
	* gas/i386/arch-10-3.l: Likewise.
	* gas/i386/arch-10-4.l: Likewise.
	* gas/i386/x86-64-arch-2.d: Likewise.

opcodes/

2009-01-09  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386-gen.c (cpu_flag_init): Add CpuRdtscp to CPU_K8_FLAGS
	and CPU_AMDFAM10_FLAGS.  Add CPU_RDTSCP_FLAGS.
	(cpu_flags): Add CpuRdtscp.
	(set_bitfield): Remove CpuSledgehammer check.

	* i386-opc.h (CpuRdtscp): New.
	(CpuLM): Updated.
	(i386_cpu_flags): Add cpurdtscp.

	* i386-opc.tbl: Replace CpuSledgehammer with CpuRdtscp.
	* i386-init.h: Regenerated.
	* i386-tbl.h: Likewise.
@
text
@d24 1
a24 1
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1 } }
d28 1
a28 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d31 2
a32 2
  { { 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d36 1
a36 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d40 1
a40 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d44 1
a44 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d48 1
a48 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d52 1
a52 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d56 1
a56 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d60 1
a60 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d63 2
a64 2
  { { 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d67 2
a68 2
  { { 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d71 2
a72 2
  { { 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d75 2
a76 2
  { { 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d79 2
a80 2
  { { 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d83 6
a88 2
  { { 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d91 2
a92 2
  { { 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d95 2
a96 2
  { { 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d99 2
a100 2
  { { 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d103 2
a104 2
  { { 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 } }
d107 10
a116 2
  { { 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,  \
      1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 } }
d119 2
a120 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d123 2
a124 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d127 2
a128 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d131 2
a132 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d135 2
a136 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d139 2
a140 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1,  \
      0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d143 2
a144 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1,  \
      0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d147 2
a148 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d151 2
a152 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d156 1
a156 1
      0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d159 2
a160 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1,  \
      0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d163 2
a164 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1,  \
      0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 } }
d167 2
a168 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1,  \
      0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0 } }
d172 1
a172 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 } }
d176 1
a176 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 } }
d180 1
a180 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 } }
d183 2
a184 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d187 2
a188 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d191 2
a192 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d195 2
a196 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d199 2
a200 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0,  \
      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d204 1
a204 1
      0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d207 2
a208 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0,  \
      1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d211 2
a212 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1,  \
      0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
@


1.19
log
@2009-01-05  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386-gen.c (process_copyright): Update for 2009.

	* i386-init.h: Regenerated.
	* i386-tbl.h: Likewise.
@
text
@d24 1
a24 1
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1 } }
d28 1
a28 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d32 1
a32 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d36 1
a36 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d40 1
a40 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d44 1
a44 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d48 1
a48 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d52 1
a52 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d56 1
a56 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d60 1
a60 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d64 1
a64 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d68 1
a68 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d72 1
a72 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d76 1
a76 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d80 1
a80 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d84 1
a84 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d88 1
a88 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d92 1
a92 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d96 1
a96 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d100 1
a100 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d104 1
a104 1
      1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d108 1
a108 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d112 1
a112 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d116 1
a116 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d120 1
a120 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d124 1
a124 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d128 1
a128 1
      0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d132 1
a132 1
      0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d136 1
a136 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d140 1
a140 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d144 1
a144 1
      0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d148 1
a148 1
      0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 } }
d152 1
a152 1
      0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0 } }
d156 1
a156 1
      0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 } }
d160 5
a164 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 } }
d168 1
a168 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 } }
d172 1
a172 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d176 1
a176 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d180 1
a180 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d184 1
a184 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d188 1
a188 1
      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d192 1
a192 1
      0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d196 1
a196 1
      1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d200 1
a200 1
      0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
@


1.18
log
@gas/

2008-05-02  H.J. Lu  <hongjiu.lu@@intel.com>

	* NEWS: Mention XSAVE, EPT and MOVBE.

	* config/tc-i386.c (cpu_arch): Add .movbe and .ept.
	(md_show_usage): Add .movbe and .ept.

	* doc/c-i386.texi: Add movbe and ept to -march=.  Document
	.movbe and .ept.

gas/testsuite/

2008-05-02  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/i386.exp: Run movbe, movbe-intel, inval-movbe, ept,
	ept-intel, inval-ept, x86-64-movbe, x86-64-movbe-intel,
	x86-64-inval-movbe.  x86-64-ept, x86-64-ept-intel and
	x86-64-inval-ept.

	* gas/i386/arch-10.s: Add movbe and invept.
	* gas/i386/x86-64-arch-2.s: Likewise.

	* gas/i386/ept.d: New file
	* gas/i386/ept-intel.d: Likewise.
	* gas/i386/ept.s: Likewise.
	* gas/i386/inval-ept.l: Likewise.
	* gas/i386/inval-ept.s: Likewise.
	* gas/i386/inval-movbe.l: Likewise.
	* gas/i386/inval-movbe.s: Likewise.
	* gas/i386/movbe.d: Likewise.
	* gas/i386/movbe-intel.d: Likewise.
	* gas/i386/movbe.s: Likewise.
	* gas/i386/x86-64-inval-ept.l: Likewise.
	* gas/i386/x86-64-inval-ept.s: Likewise.
	* gas/i386/x86-64-inval-movbe.l: Likewise.
	* gas/i386/x86-64-inval-movbe.s: Likewise.
	* gas/i386/x86-64-ept.d: Likewise.
	* gas/i386/x86-64-ept-intel.d: Likewise.
	* gas/i386/x86-64-ept.s: Likewise.
	* gas/i386/x86-64-movbe.d: Likewise.
	* gas/i386/x86-64-movbe-intel.d: Likewise.
	* gas/i386/x86-64-movbe.s: Likewise.

	* gas/i386/arch-10.d: Updated.
	* gas/i386/arch-10-1.l: Likewise.
	* gas/i386/arch-10-2.l: Likewise.
	* gas/i386/arch-10-3.l: Likewise.
	* gas/i386/arch-10-4.l: Likewise.
	* gas/i386/x86-64-arch-2.d: Likewise.

opcodes/

2008-05-02  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386-dis.c (MOVBE_Fixup): New.
	(Mo): Likewise.
	(PREFIX_0F3880): Likewise.
	(PREFIX_0F3881): Likewise.
	(PREFIX_0F38F0): Updated.
	(prefix_table): Add PREFIX_0F3880 and PREFIX_0F3881.  Update
	PREFIX_0F38F0 and PREFIX_0F38F1 for movbe.
	(three_byte_table): Use PREFIX_0F3880 and PREFIX_0F3881.

	* i386-gen.c (cpu_flag_init): Add CPU_MOVBE_FLAGS and
	CPU_EPT_FLAGS.
	(cpu_flags): Add CpuMovbe and CpuEPT.

	* i386-opc.h (CpuMovbe): New.
	(CpuEPT): Likewise.
	(CpuLM): Updated.
	(i386_cpu_flags): Add cpumovbe and cpuept.

	* i386-opc.tbl: Add entries for movbe and EPT instructions.
	* i386-init.h: Regenerated.
	* i386-tbl.h: Likewise.
@
text
@d2 2
a3 1
/* Copyright 2007, 2008  Free Software Foundation, Inc.
@


1.17
log
@gas/

2008-04-04  H.J. Lu  <hongjiu.lu@@intel.com>

	* NEWS: Mention XSAVE.  Change CLMUL to PCLMUL.

	* config/tc-i386.c (cpu_arch): Add .pclmul.
	(md_show_usage): Replace clmul with pclmul.
	* doc/c-i386.texi: Likewise.

gas/testsuite/

2008-04-04  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/arch-10-1.l: Replace CLMUL with PCLMUL.
	* gas/i386/arch-10-2.l: Likewise.
	* gas/i386/arch-10-3.l: Likewise.
	* gas/i386/arch-10-4.l: Likewise.
	* gas/i386/arch-10.s: Likewise.
	* gas/i386/clmul-intel.d: Likewise.
	* gas/i386/clmul.d: Likewise.
	* gas/i386/clmul.s: Likewise.
	* gas/i386/x86-64-arch-2.s: Likewise.
	* gas/i386/x86-64-clmul-intel.d: Likewise.
	* gas/i386/x86-64-clmul.d: Likewise.
	* gas/i386/x86-64-clmul.s: Likewise.

	* gas/i386/arch-10.d: Replace clmul with pclmul.
	* gas/i386/x86-64-arch-2.d: Likewise.

opcodes/

2008-04-04  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386-gen.c (cpu_flag_init): Replace CPU_CLMUL_FLAGS/CpuCLMUL
	with CPU_PCLMUL_FLAGS/CpuPCLMUL.
	(cpu_flags): Replace CpuCLMUL with CpuPCLMUL.
	* i386-opc.tbl: Likewise.

	* i386-opc.h (CpuCLMUL): Renamed to ...
	(CpuPCLMUL): This.
	(CpuFMA): Updated.
	(i386_cpu_flags): Replace cpuclmul with cpupclmul.

	* i386-init.h: Regenerated.
@
text
@d23 1
a23 1
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1 } }
d27 1
a27 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d31 1
a31 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d35 1
a35 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d39 1
a39 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d43 1
a43 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d47 1
a47 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d51 1
a51 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d55 1
a55 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d59 1
a59 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d63 1
a63 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d67 1
a67 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d71 1
a71 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d75 1
a75 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d79 1
a79 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d83 1
a83 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d87 1
a87 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d91 1
a91 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d95 1
a95 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d99 1
a99 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d103 1
a103 1
      1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d107 1
a107 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d111 1
a111 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d115 1
a115 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d119 1
a119 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d123 1
a123 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d127 1
a127 1
      0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d131 1
a131 1
      0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d135 1
a135 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d139 1
a139 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d143 1
a143 1
      0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0 } }
d147 1
a147 1
      0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 } }
d151 1
a151 1
      0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 } }
d155 9
a163 1
      0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0 } }
d167 1
a167 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d171 1
a171 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d175 1
a175 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d179 1
a179 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d183 1
a183 1
      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d187 1
a187 1
      0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d191 1
a191 1
      1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d195 1
a195 1
      0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 } }
@


1.16
log
@binutils/

2008-04-03  H.J. Lu  <hongjiu.lu@@intel.com>

	* dwarf.c (dwarf_regnames_i386): Add AVX registers.
	(dwarf_regnames_x86_64): Likewise.

gas/

2008-04-03  H.J. Lu  <hongjiu.lu@@intel.com>

	* NEWS: Mention AES, CLMUL, AVX/FMA and -msse2avx.

	* doc/c-i386.texi: Add avx, aes, clmul and fma to -march=.
	Document -msse2avx, .avx, .aes, .clmul and .fma.

	* config/tc-i386.c (YMMWORD_MNEM_SUFFIX): New.
	(vex_prefix): Likewise.
	(sse2avx): Likewise.
	(CPU_FLAGS_ARCH_MATCH): Likewise.
	(CPU_FLAGS_64BIT_MATCH): Likewise.
	(CPU_FLAGS_32BIT_MATCH): Likewise.
	(CPU_FLAGS_PERFECT_MATCH): Likewise.
	(regymm): Likewise.
	(vex_imm4): Likewise.
	(fits_in_imm4): Likewise.
	(build_vex_prefix): Likewise.
	(VEX_check_operands): Likewise.
	(bad_implicit_operand): Likewise.
	(OPTION_MSSE2AVX): Likewise.
	(T_YMMWORD): Likewise.
	(_i386_insn): Add vex.
	(cpu_arch): Add .avx, .aes, .clmul and .fma.
	(cpu_flags_match): Changed to take a pointer to const template.
	Enable encoding SSE instructions with VEX prefix for -msse2avx.
	(match_mem_size): Also check ymmword.
	(operand_type_match): Clear ymmword.
	(md_begin): Allow '_' in mnemonic.
	(type_names): Add OPERAND_TYPE_VEX_IMM4.
	(process_immext): Update assert.
	(md_assemble): Don't call process_immext if sse2avx and immext
	are true.  Call build_vex_prefix if vex is true.
	(parse_insn): Updated for cpu_flags_match.
	(swap_operands): Handle 5 operands.
	(match_template): Handle 5 operands. Updated for cpu_flags_match.
	Check regymm.  Call VEX_check_operands. Handle YMMWORD_MNEM_SUFFIX.
	(process_suffix): Handle YMMWORD_MNEM_SUFFIX.
	(check_byte_reg): Check regymm.
	(process_operands): Duplicate the destination register for
	-msse2avx if needed.
	(build_modrm_byte): Updated for instructions with VEX encoding.
	(output_insn): Output VEX prefix if needed.
	(md_longopts): Add msse2avx.
	(md_parse_option): Handle OPTION_MSSE2AVX.
	(md_show_usage): Add avx, aes, clmul, fma and -msse2avx.
	(intel_e09): Support YMMWORD.
	(intel_e11): Likewise.
	(intel_get_token): Likewise.

gas/testsuite/

2008-04-03  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/i386.exp: Run aes, aes-intel, x86-64-aes,
	x86-64-aes-intel, avx, avx-intel, inval-avx, x86-64-avx,
	x86-64-avx-intel and x86-64-inval-avx.

	* gas/cfi/cfi-i386.s: Add tests for AVX register maps.
	* gas/cfi/cfi-x86_64.s: Likewise.

	* gas/i386/aes.d: New.
	* gas/i386/aes.s: Likewise.
	* gas/i386/aes-intel.d: Likewise.
	* gas/i386/avx.d: Likewise.
	* gas/i386/avx.s: Likewise.
	* gas/i386/avx-intel.d: Likewise.
	* gas/i386/clmul.d: Likewise.
	* gas/i386/clmul-intel.d: Likewise.
	* gas/i386/clmul.s: Likewise.
	* gas/i386/i386.exp: Likewise.
	* gas/i386/inval-avx.l: Likewise.
	* gas/i386/inval-avx.s: Likewise.
	* gas/i386/sse2avx.d: Likewise.
	* gas/i386/sse2avx.s: Likewise.
	* gas/i386/x86-64-aes.d: Likewise.
	* gas/i386/x86-64-aes.s: Likewise.
	* gas/i386/x86-64-aes-intel.d: Likewise.
	* gas/i386/x86-64-avx.d: Likewise.
	* gas/i386/x86-64-avx.s: Likewise.
	* gas/i386/x86-64-avx-intel.d: Likewise.
	* gas/i386/x86-64-clmul.d: Likewise.
	* gas/i386/x86-64-clmul-intel.d: Likewise.
	* gas/i386/x86-64-clmul.s: Likewise.
	* gas/i386/x86-64-inval-avx.l: Likewise.
	* gas/i386/x86-64-inval-avx.s: Likewise.
	* gas/i386/x86-64-sse2avx.d: Likewise.
	* gas/i386/x86-64-sse2avx.s: Likewise.

	* gas/i386/arch-10.s: Add tests for AVX, AES, CLMUL and FMA.
	* gas/i386/x86-64-arch-2.s: Likewise.

	* gas/i386/rexw.s: Add AVX tests.

	* gas/i386/x86-64-opcode-inval.s: Remove lds/les test.

	* gas/cfi/cfi-i386.d: Updated.
	* gas/cfi/cfi-x86_64.d: Likewise.
	* gas/i386/arch-10.d:  Likewise.
	* gas/i386/arch-10-1.l: Likewise.
	* gas/i386/arch-10-2.l: Likewise.
	* gas/i386/arch-10-3.l: Likewise.
	* gas/i386/arch-10-4.l: Likewise.
	* gas/i386/rexw.d: Likewise.
	* gas/i386/x86-64-arch-2.d: Likewise.
	* gas/i386/x86-64-opcode-inval.d: Likewise.
	* gas/i386/x86-64-opcode-inval-intel.d: Likewise.

include/opcode/

2008-04-03  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386.h (MAX_OPERANDS): Set to 5.
	(MAX_MNEM_SIZE): Changed to 20.

opcodes/

2008-04-03  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386-dis.c (OP_E_register): New.
	(OP_E_memory): Likewise.
	(OP_VEX): Likewise.
	(OP_EX_Vex): Likewise.
	(OP_EX_VexW): Likewise.
	(OP_XMM_Vex): Likewise.
	(OP_XMM_VexW): Likewise.
	(OP_REG_VexI4): Likewise.
	(PCLMUL_Fixup): Likewise.
	(VEXI4_Fixup): Likewise.
	(VZERO_Fixup): Likewise.
	(VCMP_Fixup): Likewise.
	(VPERMIL2_Fixup): Likewise.
	(rex_original): Likewise.
	(rex_ignored): Likewise.
	(Mxmm): Likewise.
	(XMM): Likewise.
	(EXxmm): Likewise.
	(EXxmmq): Likewise.
	(EXymmq): Likewise.
	(Vex): Likewise.
	(Vex128): Likewise.
	(Vex256): Likewise.
	(VexI4): Likewise.
	(EXdVex): Likewise.
	(EXqVex): Likewise.
	(EXVexW): Likewise.
	(EXdVexW): Likewise.
	(EXqVexW): Likewise.
	(XMVex): Likewise.
	(XMVexW): Likewise.
	(XMVexI4): Likewise.
	(PCLMUL): Likewise.
	(VZERO): Likewise.
	(VCMP): Likewise.
	(VPERMIL2): Likewise.
	(xmm_mode): Likewise.
	(xmmq_mode): Likewise.
	(ymmq_mode): Likewise.
	(vex_mode): Likewise.
	(vex128_mode): Likewise.
	(vex256_mode): Likewise.
	(USE_VEX_C4_TABLE): Likewise.
	(USE_VEX_C5_TABLE): Likewise.
	(USE_VEX_LEN_TABLE): Likewise.
	(VEX_C4_TABLE): Likewise.
	(VEX_C5_TABLE): Likewise.
	(VEX_LEN_TABLE): Likewise.
	(REG_VEX_XX): Likewise.
	(MOD_VEX_XXX): Likewise.
	(PREFIX_0F38DB..PREFIX_0F38DF): Likewise.
	(PREFIX_0F3A44): Likewise.
	(PREFIX_0F3ADF): Likewise.
	(PREFIX_VEX_XXX): Likewise.
	(VEX_OF): Likewise.
	(VEX_OF38): Likewise.
	(VEX_OF3A): Likewise.
	(VEX_LEN_XXX): Likewise.
	(vex): Likewise.
	(need_vex): Likewise.
	(need_vex_reg): Likewise.
	(vex_i4_done): Likewise.
	(vex_table): Likewise.
	(vex_len_table): Likewise.
	(OP_REG_VexI4): Likewise.
	(vex_cmp_op): Likewise.
	(pclmul_op): Likewise.
	(vpermil2_op): Likewise.
	(m_mode): Updated.
	(es_reg): Likewise.
	(PREFIX_0F38F0): Likewise.
	(PREFIX_0F3A60): Likewise.
	(reg_table): Add REG_VEX_71...REG_VEX_73 and REG_VEX_AE.
	(prefix_table): Add PREFIX_0F38DB..PREFIX_0F38DF, PREFIX_0F3ADF
	and PREFIX_VEX_XXX entries.
	(x86_64_table): Use VEX_C4_TABLE and VEX_C5_TABLE.
	(three_byte_table): Use PREFIX_0F38DB..PREFIX_0F38DF and
	PREFIX_0F3ADF.
	(mod_table): Use VEX_C4_TABLE, VEX_C5_TABLE and VEX_LEN_TABLE.
	Add MOD_VEX_XXX entries.
	(ckprefix): Initialize rex_original and rex_ignored.  Store the
	REX byte in rex_original.
	(get_valid_dis386): Handle the implicit prefix in VEX prefix
	bytes and USE_VEX_LEN_TABLE/USE_VEX_C4_TABLE/USE_VEX_C5_TABLE.
	(print_insn): Set need_vex/need_vex_reg/vex_i4_done to 0 before
	calling get_valid_dis386.  Use rex_original and rex_ignored when
	printing out REX.
	(putop): Handle "XY".
	(intel_operand_size): Handle VEX, xmm_mode, xmmq_mode and
	ymmq_mode.
	(OP_E_extended): Updated to use OP_E_register and
	OP_E_memory.
	(OP_XMM): Handle VEX.
	(OP_EX): Likewise.
	(XMM_Fixup): Likewise.
	(CMP_Fixup): Use ARRAY_SIZE.

	* i386-gen.c (cpu_flag_init): Add CpuAES, CPU_CLMUL_FLAGS,
	CPU_FMA_FLAGS and CPU_AVX_FLAGS.
	(operand_type_init): Add OPERAND_TYPE_REGYMM and
	OPERAND_TYPE_VEX_IMM4.
	(cpu_flags): Add CpuAVX, CpuAES, CpuCLMUL and CpuFMA.
	(opcode_modifiers): Add Implicit1stXmm0, Vex, Vex256, VexNDD,
	VexNDS, VexW0, VexW1, Vex0F, Vex0F38, Vex0F3A, Vex3Sources,
	VexImmExt and SSE2AVX.
	(operand_types): Add RegYMM, Ymmword and Vex_Imm4.

	* i386-opc.h (CpuAVX): New.
	(CpuAES): Likewise.
	(CpuCLMUL): Likewise.
	(CpuFMA): Likewise.
	(Vex): Likewise.
	(Vex256): Likewise.
	(VexNDS): Likewise.
	(VexNDD): Likewise.
	(VexW0): Likewise.
	(VexW1): Likewise.
	(Vex0F): Likewise.
	(Vex0F38): Likewise.
	(Vex0F3A): Likewise.
	(Vex3Sources): Likewise.
	(VexImmExt): Likewise.
	(SSE2AVX): Likewise.
	(RegYMM): Likewise.
	(Ymmword): Likewise.
	(Vex_Imm4): Likewise.
	(Implicit1stXmm0): Likewise.
	(CpuXsave): Updated.
	(CpuLM): Likewise.
	(ByteOkIntel): Likewise.
	(OldGcc): Likewise.
	(Control): Likewise.
	(Unspecified): Likewise.
	(OTMax): Likewise.
	(i386_cpu_flags): Add cpuavx, cpuaes, cpuclmul and cpufma.
	(i386_opcode_modifier): Add implicit1stxmm0, vex, vex256,
	vexnds, vexndd, vexw0, vexw1, vex0f, vex0f38, vex0f3a,
	vex3sources, veximmext and sse2avx.
	(i386_operand_type): Add regymm, ymmword and vex_imm4.

	* i386-opc.tbl: Add AES, CLMUL, AVX and FMA new instructions.

	* i386-reg.tbl: Add AVX registers, ymm0..ymm15.

	* i386-init.h: Regenerated.
	* i386-tbl.h: Likewise.
@
text
@d149 1
a149 1
#define CPU_CLMUL_FLAGS \
@


1.15
log
@gas/

2008-02-16  H.J. Lu  <hongjiu.lu@@intel.com>

	* config/tc-i386.c (inoutportreg): New.
	(process_immext): New.
	(md_assemble): Use it.
	(update_imm): Use imm16 and imm32s.
	(i386_att_operand): Use inoutportreg.

opcodes/

2008-02-16  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386-gen.c  (operand_type_init): Add OPERAND_TYPE_INOUTPORTREG.
	* i386-init.h: Regenerated.
@
text
@d23 1
a23 1
      1, 1, 1, 1, 1, 1, 1, 0, 1, 1 } }
d27 1
a27 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d31 1
a31 1
      0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d35 1
a35 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d39 1
a39 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d43 1
a43 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d47 1
a47 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d51 1
a51 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d55 1
a55 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d59 1
a59 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d63 1
a63 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d67 1
a67 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d71 1
a71 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d75 1
a75 1
      0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d79 1
a79 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d83 1
a83 1
      0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d87 1
a87 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d91 1
a91 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d95 1
a95 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d99 1
a99 1
      0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d103 1
a103 1
      1, 1, 0, 0, 0, 0, 1, 0, 0, 0 } }
d107 1
a107 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d111 1
a111 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d115 1
a115 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d119 1
a119 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d123 1
a123 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d127 1
a127 1
      0, 0, 1, 0, 0, 0, 0, 0, 0, 0 } }
d131 1
a131 1
      0, 0, 1, 1, 0, 0, 0, 0, 0, 0 } }
d135 1
a135 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d139 1
a139 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d143 13
a155 1
      0, 0, 0, 0, 0, 1, 0, 0, 0, 0 } }
d159 1
a159 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d163 1
a163 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d167 1
a167 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d171 1
a171 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d175 1
a175 1
      1, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d179 1
a179 1
      0, 1, 0, 0, 0, 0, 0, 0, 0, 0 } }
d183 5
a187 1
      1, 1, 0, 0, 1, 0, 0, 0, 0, 0 } }
d193 1
a193 1
      0, 0, 0 } }
d198 1
a198 1
      0, 0, 0 } }
d203 1
a203 1
      0, 0, 0 } }
d208 1
a208 1
      0, 0, 0 } }
d213 1
a213 1
      0, 0, 0 } }
d216 1
a216 1
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, \
d218 1
a218 1
      0, 0, 0 } }
d221 1
a221 1
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, \
d223 1
a223 1
      0, 0, 0 } }
d226 1
a226 1
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, \
d228 1
a228 1
      0, 0, 0 } }
d231 1
a231 1
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, \
d233 1
a233 1
      0, 0, 0 } }
d236 1
a236 1
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, \
d238 1
a238 1
      0, 0, 0 } }
d241 1
a241 1
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, \
d243 1
a243 1
      0, 0, 0 } }
d246 1
a246 1
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, \
d248 1
a248 1
      0, 0, 0 } }
d252 2
a253 2
      0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0 } }
d256 3
a258 3
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0 } }
d262 2
a263 2
      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0 } }
d267 2
a268 2
      0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0 } }
d272 2
a273 2
      0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0 } }
d277 2
a278 2
      0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0 } }
d282 2
a283 2
      0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0 } }
d287 2
a288 2
      0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0 } }
d291 1
a291 1
  { { 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
d293 1
a293 1
      0, 0, 0 } }
d296 1
a296 1
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
d298 1
a298 1
      0, 0, 0 } }
d303 1
a303 1
      0, 0, 0 } }
d308 1
a308 1
      0, 0, 0 } }
d312 2
a313 2
      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0 } }
d316 1
a316 1
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
d318 1
a318 1
      0, 0, 0 } }
d321 1
a321 1
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, \
d323 1
a323 1
      0, 0, 0 } }
d327 2
a328 2
      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0 } }
d332 2
a333 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0 } }
d338 1
a338 1
      0, 0, 0 } }
d343 6
a348 1
      0, 0, 0 } }
d352 2
a353 2
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0 } }
d357 2
a358 2
      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, \
      0, 0, 0 } }
d362 2
a363 2
      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, \
      0, 0, 0 } }
d367 2
a368 2
      0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0 } }
d372 2
a373 2
      0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0 } }
d377 2
a378 2
      1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0 } }
d381 3
a383 3
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, \
      1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0 } }
d386 1
a386 1
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, \
d388 1
a388 1
      0, 0, 0 } }
d391 1
a391 1
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, \
d393 1
a393 1
      0, 0, 0 } }
d396 1
a396 1
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, \
d398 1
a398 1
      0, 0, 0 } }
d401 3
a403 3
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, \
      0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0 } }
d406 3
a408 3
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, \
      0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0 } }
d411 3
a413 3
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, \
      0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0 } }
d416 8
a423 3
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, \
      0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0 } }
@


1.14
log
@gas/

2008-02-11  H.J. Lu  <hongjiu.lu@@intel.com>

	* config/tc-i386.c (cpu_arch): Add .xsave.
	(md_show_usage): Add .xsave.

	* doc/c-i386.texi: Add xsave to -march=.

gas/testsuite/

2008-02-11  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/arch-10.s: Add xgetbv.

	* gas/i386/arch-10.d: Updated.
	* gas/i386/arch-10-1.l: Likewise.
	* gas/i386/arch-10-2.l: Likewise.
	* gas/i386/arch-10-3.l: Likewise.
	* gas/i386/arch-10-4.l: Likewise.
	* gas/i386/x86-64-arch-10.d: Likewise.

opcodes/

2008-02-11  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386-gen.c  (cpu_flag_init): Add CPU_XSAVE_FLAGS.
	* i386-init.h: Updated.
@
text
@d344 5
@


1.13
log
@gas/testsuite/

2002-02-11  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/i386.exp: Run xsave, xsave-intel, x86-64-xsave
	and x86-64-xsave-intel.

	* gas/i386/x86-64-xsave-intel.d: New file.
	* gas/i386/x86-64-xsave.d: Likewise.
	* gas/i386/x86-64-xsave.s: Likewise.
	* gas/i386/xsave-intel.d: Likewise.
	* gas/i386/xsave.d: Likewise.
	* gas/i386/xsave.s: Likewise.

opcodes/

2008-02-11  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386-gen.c (cpu_flags): Add CpuXsave.

	* i386-opc.h (CpuXsave): New.
	(Cpu64): Updated.
	(i386_cpu_flags): Add cpuxsave.

	* i386-dis.c (MOD_0FAE_REG_4): New.
	(RM_0F01_REG_2): Likewise.
	(MOD_0FAE_REG_5): Updated.
	(RM_0F01_REG_3): Likewise.
	(reg_table): Use MOD_0FAE_REG_4.
	(mod_table): Use RM_0F01_REG_2.  Add MOD_0FAE_REG_4.  Updated
	for xrstor.
	(rm_table): Add RM_0F01_REG_2.

	* i386-opc.tbl: Add xsave, xrstor, xgetbv and xsetbv.
	* i386-init.h: Regenerated.
	* i386-tbl.h: Likewise.
@
text
@d141 4
@


1.12
log
@gas/

2008-01-23  H.J. Lu  <hongjiu.lu@@intel.com>

	* config/tc-i386.c (md_show_usage): Replace tabs with spaces.

gas/testsuite/

2008-01-23  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/i386.exp : Run x86-64-arch-1 and x86-64-arch-10.

	* gas/i386/x86-64-arch-1.d: New.
	* gas/i386/x86-64-arch-1.s: Likewise.
	* gas/i386/x86-64-arch-10.d: Likewise.

opcodes/

2008-01-23  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386-gen.c (cpu_flag_init): Add CpuLM to CPU_GENERIC64_FLAGS.
	* i386-init.h: Regenerated.
@
text
@d23 1
a23 1
      1, 1, 1, 1, 1, 1, 0, 1, 1 } }
d27 1
a27 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d31 1
a31 1
      0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d35 1
a35 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d39 1
a39 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d43 1
a43 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d47 1
a47 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d51 1
a51 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d55 1
a55 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d59 1
a59 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d63 1
a63 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d67 1
a67 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d71 1
a71 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d75 1
a75 1
      0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d79 1
a79 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d83 1
a83 1
      0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d87 1
a87 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d91 1
a91 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d95 1
a95 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d99 1
a99 1
      0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d103 1
a103 1
      1, 1, 0, 0, 0, 1, 0, 0, 0 } }
d107 1
a107 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d111 1
a111 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d115 1
a115 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d119 1
a119 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d123 1
a123 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d127 1
a127 1
      0, 0, 1, 0, 0, 0, 0, 0, 0 } }
d131 1
a131 1
      0, 0, 1, 1, 0, 0, 0, 0, 0 } }
d135 1
a135 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d139 1
a139 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d143 1
a143 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d147 1
a147 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d151 1
a151 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d155 1
a155 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d159 1
a159 1
      1, 0, 0, 0, 0, 0, 0, 0, 0 } }
d163 1
a163 1
      0, 1, 0, 0, 0, 0, 0, 0, 0 } }
d167 1
a167 1
      1, 1, 0, 0, 1, 0, 0, 0, 0 } }
@


1.11
log
@gas/

2008-01-22  H.J. Lu  <hongjiu.lu@@intel.com>

	* config/tc-i386.c (i386_target_format): Remove cpummx2.

gas/testsuite/

2008-01-22  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/arch-10.d: New.
	* gas/i386/arch-11.s: Likewise.
	* gas/i386/arch-12.d: Likewise.
	* gas/i386/arch-12.s: Likewise.

	* gas/i386/i386.exp: Run arch-11 and arch-12.

opcodes/

2008-01-22  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386-gen.c (cpu_flag_init): Remove CpuMMX2.
	(cpu_flags): Likewise.

	* i386-opc.h (CpuMMX2): Removed.
	(CpuSSE): Updated.

	* i386-opc.tbl: Replace CpuMMX2 with CpuSSE|Cpu3dnowA.
	* i386-init.h: Regenerated.
	* i386-tbl.h: Likewise.
@
text
@d31 1
a31 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
@


1.10
log
@gas/

2008-01-22  H.J. Lu  <hongjiu.lu@@intel.com>

	* config/tc-i386.c (XXX_PREFIX): Moved from tc-i386.h.
	(XXX_MNEM_SUFFIX): Likewise.
	(END_OF_INSN): Likewise.
	(templates): Likewise.
	(modrm_byte): Likewise.
	(rex_byte): Likewise.
	(DREX_XXX): Likewise.
	(drex_byte): Likewise.
	(sib_byte): Likewise.
	(processor_type): Likewise.
	(arch_entry): Likewise.
	(cpu_sub_arch_name): Remove const.
	(cpu_arch): Add .vmx and .smx.
	(set_cpu_arch): Append cpu_sub_arch_name.
	(md_parse_option): Support -march=CPU[,+EXTENSION...].
	(md_show_usage): Updated.

	* config/tc-i386.h (XXX_PREFIX): Moved to tc-i386.c.
	(XXX_MNEM_SUFFIX): Likewise.
	(END_OF_INSN): Likewise.
	(templates): Likewise.
	(modrm_byte): Likewise.
	(rex_byte): Likewise.
	(DREX_XXX): Likewise.
	(drex_byte): Likewise.
	(sib_byte): Likewise.
	(processor_type): Likewise.
	(arch_entry): Likewise.

	* doc/as.texinfo: Update i386 -march option.

	* doc/c-i386.texi: Update -march= for ISA.

gas/testsuite/

2008-01-22  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/arch-10-1.l: New.
	* gas/i386/arch-10-1.s: Likewise.
	* gas/i386/arch-10-2.l: Likewise.
	* gas/i386/arch-10-2.s: Likewise.
	* gas/i386/arch-10-3.l: Likewise.
	* gas/i386/arch-10-3.s: Likewise.
	* gas/i386/arch-10-4.l: Likewise.
	* gas/i386/arch-10-4.s: Likewise.
	* gas/i386/arch-10.d: Likewise.
	* gas/i386/arch-10.s: Likewise.

	* gas/i386/i386.exp: Run arch-10, arch-10-1, arch-10-2,
	arch-10-3 and arch-10-4.

	* gas/i386/nops-2.s: Use movsbl instead of cmove.
	* gas/i386/nops-2-i386.d: Updated.
	* gas/i386/nops-2-merom.d: Likewise.
	* gas/i386/nops-2.d: Likewise.
	* gas/i386/x86-64-nops-2.d: Likewise.

opcodes/

2008-01-22  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386-gen.c (cpu_flag_init): Add CPU_VMX_FLAGS and
	CPU_SMX_FLAGS.
	* i386-init.h: Regenerated.
@
text
@d23 1
a23 1
      1, 1, 1, 1, 1, 1, 1, 0, 1, 1 } }
d27 1
a27 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d30 2
a31 2
  { { 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d35 1
a35 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d39 1
a39 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d43 1
a43 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d47 1
a47 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d51 1
a51 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d55 1
a55 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d59 1
a59 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d63 1
a63 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d66 2
a67 2
  { { 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d70 2
a71 2
  { { 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d74 2
a75 2
  { { 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d78 2
a79 2
  { { 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d82 2
a83 2
  { { 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0,  \
      1, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d87 1
a87 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d90 2
a91 2
  { { 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d94 2
a95 2
  { { 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d98 2
a99 2
  { { 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d102 2
a103 2
  { { 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,  \
      0, 1, 1, 0, 0, 0, 1, 0, 0, 0 } }
d107 1
a107 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d110 2
a111 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d114 2
a115 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d118 2
a119 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d122 2
a123 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0,  \
      1, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d126 2
a127 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0,  \
      1, 0, 0, 1, 0, 0, 0, 0, 0, 0 } }
d130 2
a131 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0,  \
      1, 0, 0, 1, 1, 0, 0, 0, 0, 0 } }
d134 2
a135 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d138 2
a139 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d142 2
a143 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d146 2
a147 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d150 2
a151 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d154 2
a155 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d158 2
a159 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0,  \
      0, 1, 0, 0, 0, 0, 0, 0, 0, 0 } }
d163 1
a163 1
      0, 0, 1, 0, 0, 0, 0, 0, 0, 0 } }
d166 2
a167 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0,  \
      0, 1, 1, 0, 0, 1, 0, 0, 0, 0 } }
@


1.9
log
@gas/

2008-01-14  H.J. Lu  <hongjiu.lu@@intel.com>

	* config/tc-i386.c (match_reg_size): New.
	(match_mem_size): Likewise.
	(operand_size_match): Likewise.
	(operand_type_match): Also clear all size fields.
	(match_template): Skip Intel syntax when in AT&T syntax.
	Call operand_size_match to check operand size.
	(i386_att_operand): Set the mem field to 1 for memory
	operand.
	(i386_intel_operand): Likewise.

gas/testsuite/

2008-01-14  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/i386.s: Add tests for movsx, movzx and movnti.
	* gas/i386/inval.s: Likewise.
	* gas/i386/x86_64.s: Likewise.
	* gas/i386/x86-64-inval.s: Likewise.

	* gas/i386/i386.d: Updated.
	* gas/i386/inval.l: Likewise.
	* gas/i386/x86_64.d: Likewise.
	* gas/i386/x86-64-inval.l: Likewise.

opcodes/

2008-01-14  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386-gen.c (opcode_modifiers): Add IntelSyntax.
	(operand_types): Add Mem.

	* i386-opc.h (IntelSyntax): New.
	* i386-opc.h (Mem): New.
	(Byte): Updated.
	(Opcode_Modifier_Max): Updated.
	(i386_opcode_modifier): Add intelsyntax.
	(i386_operand_type): Add mem.

	* i386-opc.tbl: Remove Reg16 from movnti.  Add sizes to more
	instructions.

	* i386-reg.tbl: Add size for accumulator.

	* i386-init.h: Regenerated.
	* i386-tbl.h: Likewise.
@
text
@d133 8
@


1.8
log
@gas/testsuite/

2008-01-12  H.J. Lu  <hongjiu.lu@@intel.com>

	PR gas/5534
	* gas/i386/i386.s: Add tests for fnstsw and fstsw.
	* gas/i386/inval.s: Likewise.
	* gas/i386/x86_64.s: Likewise.

	* gas/i386/intel.s: Use word instead of dword on ss.

	* gas/i386/x86-64-inval.s: Add tests for fnstsw, fstsw, in
	and out.

	* gas/i386/prefix.s: Remove invalid fstsw.

	* gas/i386/inval.l: Updated.
	* gas/i386/intelbad.l: Likewise.
	* gas/i386/i386.d: Likewise.
	* gas/i386/x86_64.d: Likewise.
	* gas/i386/x86-64-inval.l: Likewise.
	* gas/i386/prefix.d: Updated.

gas/

2008-01-12  H.J. Lu  <hongjiu.lu@@intel.com>

	PR gas/5534
	* config/tc-i386.c (_i386_insn): Update comment.
	(operand_type_match): Also clear unspecified.
	(operand_type_register_match): Likewise.
	(parse_operands): Initialize unspecified.
	(i386_intel_operand): Likewise.
	(match_template): Check memory and accumulator operand size.
	(i386_att_operand): Clear unspecified on register operand.
	(intel_e11): Likewise.
	(intel_e09): Set operand size and clean unspecified for
	"XXX PTR".

opcodes/

2008-01-12  H.J. Lu  <hongjiu.lu@@intel.com>

	PR gas/5534
	* i386-gen.c (operand_type_init): Add Dword to
	OPERAND_TYPE_ACC32.  Add Qword to OPERAND_TYPE_ACC64.
	(opcode_modifiers): Remove CheckSize, Byte, Word, Dword,
	Qword and Xmmword.
	(operand_types): Add Byte, Word, Dword, Fword, Qword, Tbyte,
	Xmmword, Unspecified and Anysize.
	(set_bitfield): Make Mmword an alias of Qword.  Make Oword
	an alias of Xmmword.

	* i386-opc.h (CheckSize): Removed.
	(Byte): Updated.
	(Word): Likewise.
	(Dword): Likewise.
	(Qword): Likewise.
	(Xmmword): Likewise.
	(FWait): Updated.
	(OTMax): Likewise.
	(i386_opcode_modifier): Remove checksize, byte, word, dword,
	qword and xmmword.
	(Fword): New.
	(TBYTE): Likewise.
	(Unspecified): Likewise.
	(Anysize): Likewise.
	(i386_operand_type): Add byte, word, dword, fword, qword,
	tbyte xmmword, unspecified and anysize.

	* i386-opc.tbl: Updated to use Byte, Word, Dword, Fword, Qword,
	Tbyte, Xmmword, Unspecified and Anysize.

	* i386-reg.tbl: Add size for accumulator.

	* i386-init.h: Regenerated.
	* i386-tbl.h: Likewise.
@
text
@d165 1
a165 1
      0, 0 } }
d170 1
a170 1
      0, 0 } }
d175 1
a175 1
      0, 0 } }
d180 1
a180 1
      0, 0 } }
d185 1
a185 1
      0, 0 } }
d190 1
a190 1
      0, 0 } }
d195 1
a195 1
      0, 0 } }
d200 1
a200 1
      0, 0 } }
d205 1
a205 1
      0, 0 } }
d210 1
a210 1
      0, 0 } }
d215 1
a215 1
      0, 0 } }
d220 1
a220 1
      0, 0 } }
d225 1
a225 1
      0, 0 } }
d230 1
a230 1
      0, 0 } }
d235 1
a235 1
      0, 0 } }
d240 1
a240 1
      0, 0 } }
d245 1
a245 1
      0, 0 } }
d250 1
a250 1
      0, 0 } }
d255 1
a255 1
      0, 0 } }
d260 1
a260 1
      0, 0 } }
d265 1
a265 1
      0, 0 } }
d270 1
a270 1
      0, 0 } }
d275 1
a275 1
      0, 0 } }
d280 1
a280 1
      0, 0 } }
d285 1
a285 1
      0, 0 } }
d290 1
a290 1
      0, 0 } }
d295 1
a295 1
      0, 0 } }
d300 1
a300 1
      0, 0 } }
d305 1
a305 1
      0, 0 } }
d310 1
a310 1
      0, 0 } }
d315 1
a315 1
      0, 0 } }
d320 1
a320 1
      0, 0 } }
d324 2
a325 2
      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, \
      0, 0 } }
d329 2
a330 2
      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, \
      0, 0 } }
d335 1
a335 1
      0, 0 } }
d340 1
a340 1
      0, 0 } }
d345 1
a345 1
      0, 0 } }
d350 1
a350 1
      0, 0 } }
d355 1
a355 1
      0, 0 } }
d360 1
a360 1
      0, 0 } }
d365 1
a365 1
      0, 0 } }
d370 1
a370 1
      0, 0 } }
d375 1
a375 1
      0, 0 } }
d380 1
a380 1
      0, 0 } }
@


1.7
log
@2008-01-04  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386-gen.c: Update copyright to 2008.
	* i386-opc.h: Likewise.
	* i386-opc.tbl: Likewise.

	* i386-init.h: Regenerated.
	* i386-tbl.h: Likewise.
@
text
@d164 2
a165 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d169 2
a170 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d174 2
a175 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d179 2
a180 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d184 2
a185 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d188 3
a190 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d193 3
a195 2
  { { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d198 3
a200 2
  { { 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d203 3
a205 2
  { { 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d208 3
a210 2
  { { 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d213 3
a215 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d218 3
a220 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d223 3
a225 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d228 3
a230 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d233 3
a235 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d238 3
a240 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d243 3
a245 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d248 3
a250 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d253 3
a255 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d258 3
a260 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d263 3
a265 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d268 3
a270 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d273 3
a275 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d278 3
a280 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d284 2
a285 1
      0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 } }
d288 3
a290 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0 } }
d293 3
a295 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 } }
d299 2
a300 1
      0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 } }
d304 2
a305 1
      0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 } }
d308 3
a310 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d313 3
a315 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 } }
d319 2
a320 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0 } }
d324 2
a325 1
      0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 } }
d329 2
a330 1
      0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 } }
d333 3
a335 2
  { { 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d338 3
a340 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d343 3
a345 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d348 3
a350 2
  { { 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d353 3
a355 2
  { { 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d358 3
a360 2
  { { 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d363 3
a365 2
  { { 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d368 3
a370 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d373 3
a375 2
  { { 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d378 3
a380 2
  { { 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, \
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
@


1.6
log
@gas/

2008-01-03  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/config/tc-i386.c (cpu_arch_flags_not): Removed.
	(cpu_flags_not): Likewise.
	(cpu_flags_match): Updated to check 64bit and arch.
	(set_code_flag): Remove cpu_arch_flags_not.
	(set_16bit_gcc_code_flag): Likewise.
	(set_cpu_arch): Likewise.
	(md_begin): Likewise.
	(parse_insn): Call cpu_flags_match to check 64bit and arch.
	(match_template): Likewise.

gas/testsuite/

2008-01-03  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/arch-9.d: New file.
	* gas/i386/arch-9.s: Likewise.

	* gas/i386/i386.exp: Run arch-9.

opcodes/

2008-01-03  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386-gen.c (cpu_flag_init): Remove CpuSSE4_1_Or_5 and
	CpuSSE4_2_Or_ABM.
	(cpu_flags): Likewise.

	* i386-opc.h (CpuSSE4_1_Or_5): Removed.
	(CpuSSE4_2_Or_ABM): Likewise.
	(CpuLM): Updated.
	(i386_cpu_flags): Remove cpusse4_1_or_5 and cpusse4_2_or_abm.

	* i386-opc.tbl: Replace CpuSSE4_1_Or_5, CpuSSE4_2_Or_ABM and
	Cpu686|CpuPadLock with CpuSSE4_1|CpuSSE5, CpuABM|CpuSSE4_2
	and CpuPadLock, respectively.
	* i386-init.h: Regenerated.
	* i386-tbl.h: Likewise.
@
text
@d2 1
a2 1
/* Copyright 2007  Free Software Foundation, Inc.
@


1.5
log
@gas/testsuite/

2008-01-02  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/arch-5.d: New file.
	* gas/i386/arch-5.s: Likewise.
	* gas/i386/arch-6.d: Likewise.
	* gas/i386/arch-6.s: Likewise.
	* gas/i386/arch-7.d: Likewise.
	* gas/i386/arch-7.s: Likewise.
	* gas/i386/arch-8.d: Likewise.
	* gas/i386/arch-8.s: Likewise.

	* gas/i386/i386.exp: Run arch-5, arch-6, arch-7 and arch-8.

opcodes/

2008-01-02  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386-gen.c (cpu_flag_init): Add CpuSSE4_2_Or_ABM to
	CPU_AMDFAM10_FLAGS, CPU_SSE4_2_FLAGS, CpuABM and
	CPU_SSE5_FLAGS.
	(cpu_flags): Add CpuSSE4_2_Or_ABM.

	* i386-opc.h (CpuSSE4_2_Or_ABM): New.
	(CpuLM): Updated.
	(i386_cpu_flags): Add cpusse4_2_or_abm.

	* i386-opc.tbl: Use CpuSSE4_2_Or_ABM instead of
	CpuABM|CpuSSE4_2 on popcnt.
	* i386-init.h: Regenerated.
	* i386-tbl.h: Likewise.
@
text
@d23 1
a23 1
      1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1 } }
d27 1
a27 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d31 1
a31 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d35 1
a35 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d39 1
a39 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d43 1
a43 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d47 1
a47 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d51 1
a51 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d55 1
a55 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d59 1
a59 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d63 1
a63 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d67 1
a67 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d71 1
a71 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d75 1
a75 1
      0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d79 1
a79 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d83 1
a83 1
      1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d87 1
a87 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d91 1
a91 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d95 1
a95 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d99 1
a99 1
      0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d103 1
a103 1
      0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0 } }
d107 1
a107 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d111 1
a111 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d115 1
a115 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d119 1
a119 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d123 1
a123 1
      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d127 1
a127 1
      1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0 } }
d131 1
a131 1
      1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0 } }
d135 1
a135 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d139 1
a139 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d143 1
a143 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d147 1
a147 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d151 1
a151 1
      0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d155 1
a155 1
      0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0 } }
d159 1
a159 1
      0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0 } }
@


1.4
log
@gas/testsuite/

2007-12-28  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/arch-1.d: New file.
	* gas/i386/arch-1.s: Likewise.
	* gas/i386/arch-2.d: Likewise.
	* gas/i386/arch-2.s: Likewise.
	* gas/i386/arch-3.d: Likewise.
	* gas/i386/arch-3.s: Likewise.
	* gas/i386/arch-4.d: Likewise.
	* gas/i386/arch-4.s: Likewise.

	* gas/i386/i386.exp: Run arch-1, arch-2, arch-3 and arch-4.

opcodes/

2007-12-28  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386-gen.c (cpu_flag_init): Add CpuSSE4_1_Or_5 to
	CPU_SSE4_1_FLAGS, CPU_SSE4_2_FLAGS and CPU_SSE5_FLAGS.
	(cpu_flags): Add CpuSSE4_1_Or_5.

	* i386-init.h: Regenerated.
	* i386-tbl.h: Likewise.

	* i386-opc.h (CpuSSE4_1_Or_5): New.
	(CpuLM): Updated.
	(i386_cpu_flags): Add cpusse4_1_or_5.

	* i386-opc.tbl: Use CpuSSE4_1_Or_5 instead of CpuSSE4_1|CpuSSE5
	on ptest roundpd, roundps, roundsd and roundss.
@
text
@d23 1
a23 1
      1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1 } }
d27 1
a27 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d31 1
a31 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d35 1
a35 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d39 1
a39 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d43 1
a43 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d47 1
a47 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d51 1
a51 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d55 1
a55 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d59 1
a59 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d63 1
a63 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d67 1
a67 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d71 1
a71 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d75 1
a75 1
      0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d79 1
a79 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d83 1
a83 1
      1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d87 1
a87 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d91 1
a91 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d95 1
a95 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d99 1
a99 1
      0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d103 1
a103 1
      0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0 } }
d107 1
a107 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d111 1
a111 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d115 1
a115 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d119 1
a119 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d123 1
a123 1
      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d127 1
a127 1
      1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0 } }
d131 1
a131 1
      1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0 } }
d135 1
a135 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d139 1
a139 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d143 1
a143 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d147 1
a147 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d151 1
a151 1
      0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d155 1
a155 1
      0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 } }
d159 1
a159 1
      0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0 } }
@


1.3
log
@gas/testsuite/

2007-10-05  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/i386.exp: Run smx.

	* gas/i386/smx.d: New.
	* gas/i386/smx.s: Likewise.

opcodes/

2007-10-05  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386-dis.c (dis386_twobyte): Add getsec.

	* i386-gen.c (cpu_flags): Add CpuSMX.

	* i386-opc.h (CpuSMX): New.
	(CpuSSSE3): Updated.
	(i386_cpu_flags): Add cpusmx.

	* i386-opc.tbl: Add getsec.
	* i386-init.h: Regenerated.
	* i386-tbl.h: Likewise.
@
text
@d23 1
a23 1
      1, 1, 1, 1, 1, 1, 1, 0, 1, 1 } }
d27 1
a27 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d31 1
a31 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d35 1
a35 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d39 1
a39 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d43 1
a43 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d47 1
a47 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d51 1
a51 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d55 1
a55 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d59 1
a59 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d63 1
a63 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d67 1
a67 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d71 1
a71 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d75 1
a75 1
      0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d79 1
a79 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d83 1
a83 1
      1, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d87 1
a87 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d91 1
a91 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d95 1
a95 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d99 1
a99 1
      0, 0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d103 1
a103 1
      0, 1, 1, 0, 0, 0, 1, 0, 0, 0 } }
d107 1
a107 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d111 1
a111 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d115 1
a115 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d119 1
a119 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d123 1
a123 1
      1, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d127 1
a127 1
      1, 0, 0, 1, 0, 0, 0, 0, 0, 0 } }
d131 1
a131 1
      1, 0, 0, 1, 1, 0, 0, 0, 0, 0 } }
d135 1
a135 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d139 1
a139 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d143 1
a143 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d147 1
a147 1
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d151 1
a151 1
      0, 1, 0, 0, 0, 0, 0, 0, 0, 0 } }
d155 1
a155 1
      0, 0, 1, 0, 0, 0, 0, 0, 0, 0 } }
d159 1
a159 1
      0, 1, 1, 0, 0, 1, 0, 0, 0, 0 } }
@


1.2
log
@Add AMD SSE5 support
@
text
@d23 1
a23 1
      1, 1, 1, 1, 1, 1, 0, 1, 1 } }
d27 1
a27 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d31 1
a31 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d35 1
a35 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d39 1
a39 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d43 1
a43 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d47 1
a47 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d51 1
a51 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d55 1
a55 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d59 1
a59 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d63 1
a63 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d67 1
a67 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d71 1
a71 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d75 1
a75 1
      0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d79 1
a79 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d82 2
a83 2
  { { 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1,  \
      0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d87 1
a87 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d91 1
a91 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d95 1
a95 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d99 1
a99 1
      0, 0, 0, 0, 0, 1, 0, 0, 0 } }
d103 1
a103 1
      1, 1, 0, 0, 0, 1, 0, 0, 0 } }
d107 1
a107 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d111 1
a111 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d115 1
a115 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d119 1
a119 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d122 2
a123 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1,  \
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d126 2
a127 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1,  \
      0, 0, 1, 0, 0, 0, 0, 0, 0 } }
d130 2
a131 2
  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1,  \
      0, 0, 1, 1, 0, 0, 0, 0, 0 } }
d135 1
a135 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d139 1
a139 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d143 1
a143 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d147 1
a147 1
      0, 0, 0, 0, 0, 0, 0, 0, 0 } }
d151 1
a151 1
      1, 0, 0, 0, 0, 0, 0, 0, 0 } }
d155 1
a155 1
      0, 1, 0, 0, 0, 0, 0, 0, 0 } }
d159 1
a159 1
      1, 1, 0, 0, 1, 0, 0, 0, 0 } }
@


1.1
log
@gas/

2007-09-08  H.J. Lu  <hongjiu.lu@@intel.com>

	* configure.in (AC_CHECK_HEADERS): Add limits.h.
	* configure: Regenerated.
	* config.in: Likewise.

	* config/tc-i386.c: Include "opcodes/i386-init.h".
	(_i386_insn): Use i386_operand_type for types.
	(cpu_arch_flags): Updated to new types with bitfield.
	(cpu_arch_tune_flags): Likewise.
	(cpu_arch_isa_flags): Likewise.
	(cpu_arch): Likewise.
	(i386_align_code): Likewise.
	(set_code_flag): Likewise.
	(set_16bit_gcc_code_flag): Likewise.
	(set_cpu_arch): Likewise.
	(md_assemble): Likewise.
	(parse_insn): Likewise.
	(process_operands): Likewise.
	(output_branch): Likewise.
	(output_jump): Likewise.
	(parse_real_register): Likewise.
	(mode_from_disp_size): Likewise.
	(smallest_imm_type): Likewise.
	(pi): Likewise.
	(type_names): Likewise.
	(pt): Likewise.
	(pte): Likewise.
	(swap_2_operands): Likewise.
	(optimize_imm): Likewise.
	(optimize_disp): Likewise.
	(match_template): Likewise.
	(check_string): Likewise.
	(process_suffix): Likewise.
	(check_byte_reg): Likewise.
	(check_long_reg): Likewise.
	(check_qword_reg): Likewise.
	(check_word_reg): Likewise.
	(finalize_imm): Likewise.
	(build_modrm_byte): Likewise.
	(output_insn): Likewise.
	(disp_size): Likewise.
	(imm_size): Likewise.
	(output_disp): Likewise.
	(output_imm): Likewise.
	(gotrel): Likewise.
	(i386_immediate): Likewise.
	(i386_displacement): Likewise.
	(i386_index_check): Likewise.
	(i386_operand): Likewise.
	(parse_real_register): Likewise.
	(i386_intel_operand): Likewise.
	(intel_e09): Likewise.
	(intel_bracket_expr): Likewise.
	(intel_e11): Likewise.
	(cpu_arch_flags_not): New.
	(cpu_flags_check_x64): Likewise.
	(cpu_flags_all_zero): Likewise.
	(cpu_flags_not): Likewise.
	(i386_cpu_flags_biop): Likewise.
	(cpu_flags_biop): Likewise.
	(cpu_flags_match); Likewise.
	(acc32): New.
	(acc64): Likewise.
	(control): Likewise.
	(reg16_inoutportreg): Likewise.
	(disp16): Likewise.
	(disp32): Likewise.
	(disp32s): Likewise.
	(disp16_32): Likewise.
	(anydisp): Likewise.
	(baseindex): Likewise.
	(regxmm): Likewise.
	(imm8): Likewise.
	(imm8s): Likewise.
	(imm16): Likewise.
	(imm32): Likewise.
	(imm32s): Likewise.
	(imm64): Likewise.
	(imm16_32): Likewise.
	(imm16_32s): Likewise.
	(imm16_32_32s): Likewise.
	(operand_type): Likewise.
	(operand_type_check): Likewise.
	(operand_type_match): Likewise.
	(operand_type_register_match): Likewise.
	(update_imm): Likewise.
	(set_code_flag): Also update cpu_arch_flags_not.
	(set_16bit_gcc_code_flag): Likewise.
	(md_begin): Likewise.
	(parse_insn): Use cpu_flags_check_x64 to check 64bit support.
	Use cpu_flags_match to match instructions.
	(i386_target_format): Update cpu_arch_isa_flags and
	cpu_arch_tune_flags to i386_cpu_flags type with bitfield.
	(smallest_imm_type): Check cpu_arch_tune to tune for i486.
	(match_template): Don't initialize overlap0, overlap1,
	overlap2, overlap3 and operand_types.
	(process_suffix): Handle crc32 with 64bit register.
	(MATCH): Removed.
	(CONSISTENT_REGISTER_MATCH): Likewise.

	* config/tc-i386.h (arch_entry): Updated to i386_cpu_flags
	type.

opcodes/

2007-09-08  H.J. Lu  <hongjiu.lu@@intel.com>

	* configure.in (AC_CHECK_HEADERS): Add limits.h.
	* configure: Regenerated.
	* config.in: Likewise.

	* i386-gen.c: Include "sysdep.h" instead of <stdlib.h> and
	<string.h>.  Use xstrerror instead of strerror.
	(initializer): New.
	(cpu_flag_init): Likewise.
	(bitfield): Likewise.
	(BITFIELD): New.
	(cpu_flags): Likewise.
	(opcode_modifiers): Likewise.
	(operand_types): Likewise.
	(compare): Likewise.
	(set_cpu_flags): Likewise.
	(output_cpu_flags): Likewise.
	(process_i386_cpu_flags): Likewise.
	(output_opcode_modifier): Likewise.
	(process_i386_opcode_modifier): Likewise.
	(output_operand_type): Likewise.
	(process_i386_operand_type): Likewise.
	(set_bitfield): Likewise.
	(operand_type_init): Likewise.
	(process_i386_initializers): Likewise.
	(process_i386_opcodes): Call process_i386_opcode_modifier to
	process opcode_modifier.  Call process_i386_operand_type to
	process operand_types.
	(process_i386_registers): Call process_i386_operand_type to
	process reg_type.
	(main): Check unused bits in i386_cpu_flags and i386_operand_type.
	Sort cpu_flags, opcode_modifiers and operand_types.  Call
	process_i386_initializers.

	* i386-init.h: New.
	* i386-tbl.h: Regenerated.

	* i386-opc.h: Include <limits.h>.
	(CHAR_BIT): Define as 8 if not defined.
	(Cpu186): Changed to position of bitfiled.
	(Cpu286): Likewise.
	(Cpu386): Likewise.
	(Cpu486): Likewise.
	(Cpu586): Likewise.
	(Cpu686): Likewise.
	(CpuP4): Likewise.
	(CpuK6): Likewise.
	(CpuK8): Likewise.
	(CpuMMX): Likewise.
	(CpuMMX2): Likewise.
	(CpuSSE): Likewise.
	(CpuSSE2): Likewise.
	(Cpu3dnow): Likewise.
	(Cpu3dnowA): Likewise.
	(CpuSSE3): Likewise.
	(CpuPadLock): Likewise.
	(CpuSVME): Likewise.
	(CpuVMX): Likewise.
	(CpuSSSE3): Likewise.
	(CpuSSE4a): Likewise.
	(CpuABM): Likewise.
	(CpuSSE4_1): Likewise.
	(CpuSSE4_2): Likewise.
	(Cpu64): Likewise.
	(CpuNo64): Likewise.
	(D): Likewise.
	(W): Likewise.
	(Modrm): Likewise.
	(ShortForm): Likewise.
	(Jump): Likewise.
	(JumpDword): Likewise.
	(JumpByte): Likewise.
	(JumpInterSegment): Likewise.
	(FloatMF): Likewise.
	(FloatR): Likewise.
	(FloatD): Likewise.
	(Size16): Likewise.
	(Size32): Likewise.
	(Size64): Likewise.
	(IgnoreSize): Likewise.
	(DefaultSize): Likewise.
	(No_bSuf): Likewise.
	(No_wSuf): Likewise.
	(No_lSuf): Likewise.
	(No_sSuf): Likewise.
	(No_qSuf): Likewise.
	(No_xSuf): Likewise.
	(FWait): Likewise.
	(IsString): Likewise.
	(RegKludge): Likewise.
	(IsPrefix): Likewise.
	(ImmExt): Likewise.
	(NoRex64): Likewise.
	(Rex64): Likewise.
	(Ugh): Likewise.
	(Reg8): Likewise.
	(Reg16): Likewise.
	(Reg32): Likewise.
	(Reg64): Likewise.
	(FloatReg): Likewise.
	(RegMMX): Likewise.
	(RegXMM): Likewise.
	(Imm8): Likewise.
	(Imm8S): Likewise.
	(Imm16): Likewise.
	(Imm32): Likewise.
	(Imm32S): Likewise.
	(Imm64): Likewise.
	(Imm1): Likewise.
	(BaseIndex): Likewise.
	(Disp8): Likewise.
	(Disp16): Likewise.
	(Disp32): Likewise.
	(Disp32S): Likewise.
	(Disp64): Likewise.
	(InOutPortReg): Likewise.
	(ShiftCount): Likewise.
	(Control): Likewise.
	(Debug): Likewise.
	(Test): Likewise.
	(SReg2): Likewise.
	(SReg3): Likewise.
	(Acc): Likewise.
	(FloatAcc): Likewise.
	(JumpAbsolute): Likewise.
	(EsSeg): Likewise.
	(RegMem): Likewise.
	(OTMax): Likewise.
	(Reg): Commented out.
	(WordReg): Likewise.
	(ImplicitRegister): Likewise.
	(Imm): Likewise.
	(EncImm): Likewise.
	(Disp): Likewise.
	(AnyMem): Likewise.
	(LLongMem): Likewise.
	(LongMem): Likewise.
	(ShortMem): Likewise.
	(WordMem): Likewise.
	(ByteMem): Likewise.
	(CpuMax): New
	(CpuLM): Likewise.
	(CpuNumOfUints): Likewise.
	(CpuNumOfBits): Likewise.
	(CpuUnused): Likewise.
	(OTNumOfUints): Likewise.
	(OTNumOfBits): Likewise.
	(OTUnused): Likewise.
	(i386_cpu_flags): New type.
	(i386_operand_type): Likewise.
	(i386_opcode_modifier): Likewise.
	(CpuSledgehammer): Removed.
	(CpuSSE4): Likewise.
	(CpuUnknownFlags): Likewise.
	(Reg): Likewise.
	(WordReg): Likewise.
	(ImplicitRegister): Likewise.
	(Imm): Likewise.
	(EncImm): Likewise.
	(Disp): Likewise.
	(AnyMem): Likewise.
	(LLongMem): Likewise.
	(LongMem): Likewise.
	(ShortMem): Likewise.
	(WordMem): Likewise.
	(ByteMem): Likewise.
	(template): Use i386_cpu_flags for cpu_flags, use
	i386_opcode_modifier for opcode_modifier, use
	i386_operand_type for operand_types.
	(reg_entry): Use i386_operand_type for reg_type.

	* Makefile.am (HFILES): Add i386-init.h.
	($(srcdir)/i386-init.h): New rule.
	($(srcdir)/i386-tbl.h): Depend on $(srcdir)/i386-init.h
	instead.
	* Makefile.in: Regenerated.
@
text
@d23 1
a23 1
      1, 1, 1, 1, 1, 0, 1, 1 } }
d27 1
a27 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d31 1
a31 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d35 1
a35 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d39 1
a39 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d43 1
a43 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d47 1
a47 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d51 1
a51 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d55 1
a55 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d59 1
a59 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d63 1
a63 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d67 1
a67 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d71 1
a71 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d75 1
a75 1
      0, 0, 0, 0, 1, 0, 0, 0 } }
d79 1
a79 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d83 1
a83 1
      0, 0, 0, 0, 1, 0, 0, 0 } }
d87 1
a87 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d91 1
a91 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d95 1
a95 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d99 1
a99 1
      0, 0, 0, 0, 1, 0, 0, 0 } }
d103 1
a103 1
      1, 1, 0, 0, 1, 0, 0, 0 } }
d107 1
a107 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d111 1
a111 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d115 1
a115 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d119 1
a119 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d123 1
a123 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d127 1
a127 1
      0, 0, 1, 0, 0, 0, 0, 0 } }
d131 1
a131 1
      0, 0, 1, 1, 0, 0, 0, 0 } }
d135 1
a135 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d139 1
a139 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d143 1
a143 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d147 1
a147 1
      0, 0, 0, 0, 0, 0, 0, 0 } }
d151 1
a151 1
      1, 0, 0, 0, 0, 0, 0, 0 } }
d155 5
a159 1
      0, 1, 0, 0, 0, 0, 0, 0 } }
@

