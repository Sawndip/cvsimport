head	1.14;
access;
symbols
	sid-snapshot-20180601:1.14
	sid-snapshot-20180501:1.14
	sid-snapshot-20180401:1.14
	sid-snapshot-20180301:1.14
	sid-snapshot-20180201:1.14
	sid-snapshot-20180101:1.14
	sid-snapshot-20171201:1.14
	sid-snapshot-20171101:1.14
	sid-snapshot-20171001:1.14
	sid-snapshot-20170901:1.14
	sid-snapshot-20170801:1.14
	sid-snapshot-20170701:1.14
	sid-snapshot-20170601:1.14
	sid-snapshot-20170501:1.14
	sid-snapshot-20170401:1.14
	sid-snapshot-20170301:1.14
	sid-snapshot-20170201:1.14
	sid-snapshot-20170101:1.14
	sid-snapshot-20161201:1.14
	sid-snapshot-20161101:1.14
	sid-snapshot-20160901:1.14
	sid-snapshot-20160801:1.14
	sid-snapshot-20160701:1.14
	sid-snapshot-20160601:1.14
	sid-snapshot-20160501:1.14
	sid-snapshot-20160401:1.14
	sid-snapshot-20160301:1.14
	sid-snapshot-20160201:1.14
	sid-snapshot-20160101:1.14
	sid-snapshot-20151201:1.14
	sid-snapshot-20151101:1.14
	sid-snapshot-20151001:1.14
	sid-snapshot-20150901:1.14
	sid-snapshot-20150801:1.14
	sid-snapshot-20150701:1.14
	sid-snapshot-20150601:1.14
	sid-snapshot-20150501:1.14
	sid-snapshot-20150401:1.14
	sid-snapshot-20150301:1.14
	sid-snapshot-20150201:1.14
	sid-snapshot-20150101:1.14
	sid-snapshot-20141201:1.14
	sid-snapshot-20141101:1.14
	sid-snapshot-20141001:1.14
	sid-snapshot-20140901:1.14
	sid-snapshot-20140801:1.14
	sid-snapshot-20140701:1.14
	sid-snapshot-20140601:1.14
	sid-snapshot-20140501:1.14
	sid-snapshot-20140401:1.14
	sid-snapshot-20140301:1.14
	sid-snapshot-20140201:1.14
	sid-snapshot-20140101:1.14
	sid-snapshot-20131201:1.14
	sid-snapshot-20131101:1.14
	sid-snapshot-20131001:1.14
	binutils-2_24-branch:1.14.0.2
	binutils-2_24-branchpoint:1.14
	binutils-2_21_1:1.6
	sid-snapshot-20130901:1.14
	gdb_7_6_1-2013-08-30-release:1.12
	sid-snapshot-20130801:1.14
	sid-snapshot-20130701:1.14
	sid-snapshot-20130601:1.12
	sid-snapshot-20130501:1.12
	gdb_7_6-2013-04-26-release:1.12
	sid-snapshot-20130401:1.12
	binutils-2_23_2:1.10
	gdb_7_6-branch:1.12.0.2
	gdb_7_6-2013-03-12-branchpoint:1.12
	sid-snapshot-20130301:1.12
	sid-snapshot-20130201:1.11
	sid-snapshot-20130101:1.11
	sid-snapshot-20121201:1.10
	gdb_7_5_1-2012-11-29-release:1.10
	binutils-2_23_1:1.10
	sid-snapshot-20121101:1.10
	binutils-2_23:1.10
	sid-snapshot-20121001:1.10
	sid-snapshot-20120901:1.10
	gdb_7_5-2012-08-17-release:1.10
	sid-snapshot-20120801:1.10
	binutils-2_23-branch:1.10.0.4
	binutils-2_23-branchpoint:1.10
	gdb_7_5-branch:1.10.0.2
	gdb_7_5-2012-07-18-branchpoint:1.10
	sid-snapshot-20120701:1.10
	sid-snapshot-20120601:1.10
	sid-snapshot-20120501:1.8
	binutils-2_22_branch:1.7.0.6
	gdb_7_4_1-2012-04-26-release:1.7
	sid-snapshot-20120401:1.7
	sid-snapshot-20120301:1.7
	sid-snapshot-20120201:1.7
	gdb_7_4-2012-01-24-release:1.7
	sid-snapshot-20120101:1.7
	gdb_7_4-branch:1.7.0.4
	gdb_7_4-2011-12-13-branchpoint:1.7
	sid-snapshot-20111201:1.7
	binutils-2_22:1.7
	sid-snapshot-20111101:1.7
	sid-snapshot-20111001:1.7
	binutils-2_22-branch:1.7.0.2
	binutils-2_22-branchpoint:1.7
	gdb_7_3_1-2011-09-04-release:1.6
	sid-snapshot-20110901:1.7
	sid-snapshot-20110801:1.7
	gdb_7_3-2011-07-26-release:1.6
	sid-snapshot-20110701:1.7
	sid-snapshot-20110601:1.7
	sid-snapshot-20110501:1.7
	gdb_7_3-branch:1.6.0.4
	gdb_7_3-2011-04-01-branchpoint:1.6
	sid-snapshot-20110401:1.6
	sid-snapshot-20110301:1.6
	sid-snapshot-20110201:1.6
	sid-snapshot-20110101:1.6
	binutils-2_21:1.6
	sid-snapshot-20101201:1.6
	binutils-2_21-branch:1.6.0.2
	binutils-2_21-branchpoint:1.6
	sid-snapshot-20101101:1.6
	sid-snapshot-20101001:1.6
	gdb_7_2-2010-09-02-release:1.4
	sid-snapshot-20100901:1.6
	sid-snapshot-20100801:1.6
	gdb_7_2-branch:1.4.0.4
	gdb_7_2-2010-07-07-branchpoint:1.4
	sid-snapshot-20100701:1.4
	sid-snapshot-20100601:1.4
	sid-snapshot-20100501:1.4
	sid-snapshot-20100401:1.4
	gdb_7_1-2010-03-18-release:1.4
	sid-snapshot-20100301:1.4
	gdb_7_1-branch:1.4.0.2
	gdb_7_1-2010-02-18-branchpoint:1.4
	sid-snapshot-20100201:1.4
	sid-snapshot-20100101:1.4
	sid-snapshot-20091201:1.4
	sid-snapshot-20091101:1.3
	sid-snapshot-20091001:1.1
	binutils_latest_snapshot:1.14;
locks; strict;
comment	@ * @;


1.14
date	2013.06.26.10.31.37;	author nickc;	state Exp;
branches;
next	1.13;

1.13
date	2013.06.14.19.57.10;	author dj;	state Exp;
branches;
next	1.12;

1.12
date	2013.02.04.06.04.32;	author amodra;	state Exp;
branches;
next	1.11;

1.11
date	2012.12.17.16.56.11;	author nickc;	state Exp;
branches;
next	1.10;

1.10
date	2012.05.18.01.59.38;	author amodra;	state Exp;
branches;
next	1.9;

1.9
date	2012.05.17.15.13.25;	author nickc;	state Exp;
branches;
next	1.8;

1.8
date	2012.04.30.22.04.22;	author dj;	state Exp;
branches;
next	1.7;

1.7
date	2011.04.21.05.48.06;	author dj;	state Exp;
branches;
next	1.6;

1.6
date	2010.07.29.18.41.27;	author dj;	state Exp;
branches;
next	1.5;

1.5
date	2010.07.28.00.36.46;	author dj;	state Exp;
branches;
next	1.4;

1.4
date	2009.11.05.02.31.40;	author dj;	state Exp;
branches;
next	1.3;

1.3
date	2009.10.23.01.11.53;	author dj;	state Exp;
branches;
next	1.2;

1.2
date	2009.10.05.13.14.55;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	2009.09.29.14.17.19;	author nickc;	state Exp;
branches;
next	;


desc
@@


1.14
log
@	* rx-decode.opc (rx_decode_opcode): Check sd field as well as ss
	field when checking for type 2 nop.
	* rx-decode.c: Regenerate.
@
text
@#line 1 "rx-decode.opc"
/* -*- c -*- */
/* Copyright 2012 Free Software Foundation, Inc.
   Contributed by Red Hat.
   Written by DJ Delorie.

   This file is part of the GNU opcodes library.

   This library is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3, or (at your option)
   any later version.

   It is distributed in the hope that it will be useful, but WITHOUT
   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
   License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
   MA 02110-1301, USA.  */

#include "sysdep.h"
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "ansidecl.h"
#include "opcode/rx.h"

#define RX_OPCODE_BIG_ENDIAN 0

typedef struct
{
  RX_Opcode_Decoded * rx;
  int (* getbyte)(void *);
  void * ptr;
  unsigned char * op;
} LocalData;

static int trace = 0;

#define BSIZE 0
#define WSIZE 1
#define LSIZE 2

/* These are for when the upper bits are "don't care" or "undefined".  */
static int bwl[] =
{
  RX_Byte,
  RX_Word,
  RX_Long
};

static int sbwl[] =
{
  RX_SByte,
  RX_SWord,
  RX_Long
};

static int ubwl[] =
{
  RX_UByte,
  RX_UWord,
  RX_Long
};

static int memex[] =
{
  RX_SByte,
  RX_SWord,
  RX_Long,
  RX_UWord
};

#define ID(x) rx->id = RXO_##x
#define OP(n,t,r,a) (rx->op[n].type = t, \
		     rx->op[n].reg = r,	     \
		     rx->op[n].addend = a )
#define OPs(n,t,r,a,s) (OP (n,t,r,a), \
			rx->op[n].size = s )

/* This is for the BWL and BW bitfields.  */
static int SCALE[] = { 1, 2, 4 };
/* This is for the prefix size enum.  */
static int PSCALE[] = { 4, 1, 1, 1, 2, 2, 2, 3, 4 };

static int flagmap[] = {0, 1, 2, 3, 0, 0, 0, 0,
		       16, 17, 0, 0, 0, 0, 0, 0 };

static int dsp3map[] = { 8, 9, 10, 3, 4, 5, 6, 7 };

/*
 *C	a constant (immediate) c
 *R	A register
 *I	Register indirect, no offset
 *Is	Register indirect, with offset
 *D	standard displacement: type (r,[r],dsp8,dsp16 code), register, BWL code
 *P	standard displacement: type (r,[r]), reg, assumes UByte
 *Pm	memex displacement: type (r,[r]), reg, memex code
 *cc	condition code.  */

#define DC(c)       OP (0, RX_Operand_Immediate, 0, c)
#define DR(r)       OP (0, RX_Operand_Register,  r, 0)
#define DI(r,a)     OP (0, RX_Operand_Indirect,  r, a)
#define DIs(r,a,s)  OP (0, RX_Operand_Indirect,  r, (a) * SCALE[s])
#define DD(t,r,s)   rx_disp (0, t, r, bwl[s], ld);
#define DF(r)       OP (0, RX_Operand_Flag,  flagmap[r], 0)

#define SC(i)       OP (1, RX_Operand_Immediate, 0, i)
#define SR(r)       OP (1, RX_Operand_Register,  r, 0)
#define SRR(r)      OP (1, RX_Operand_TwoReg,  r, 0)
#define SI(r,a)     OP (1, RX_Operand_Indirect,  r, a)
#define SIs(r,a,s)  OP (1, RX_Operand_Indirect,  r, (a) * SCALE[s])
#define SD(t,r,s)   rx_disp (1, t, r, bwl[s], ld);
#define SP(t,r)     rx_disp (1, t, r, (t!=3) ? RX_UByte : RX_Long, ld); P(t, 1);
#define SPm(t,r,m)  rx_disp (1, t, r, memex[m], ld); rx->op[1].size = memex[m];
#define Scc(cc)     OP (1, RX_Operand_Condition,  cc, 0)

#define S2C(i)      OP (2, RX_Operand_Immediate, 0, i)
#define S2R(r)      OP (2, RX_Operand_Register,  r, 0)
#define S2I(r,a)    OP (2, RX_Operand_Indirect,  r, a)
#define S2Is(r,a,s) OP (2, RX_Operand_Indirect,  r, (a) * SCALE[s])
#define S2D(t,r,s)  rx_disp (2, t, r, bwl[s], ld);
#define S2P(t,r)    rx_disp (2, t, r, (t!=3) ? RX_UByte : RX_Long, ld); P(t, 2);
#define S2Pm(t,r,m) rx_disp (2, t, r, memex[m], ld); rx->op[2].size = memex[m];
#define S2cc(cc)    OP (2, RX_Operand_Condition,  cc, 0)

#define BWL(sz)     rx->op[0].size = rx->op[1].size = rx->op[2].size = rx->size = bwl[sz]
#define sBWL(sz)    rx->op[0].size = rx->op[1].size = rx->op[2].size = rx->size = sbwl[sz]
#define uBWL(sz)    rx->op[0].size = rx->op[1].size = rx->op[2].size = rx->size = ubwl[sz]
#define P(t, n)	    rx->op[n].size = (t!=3) ? RX_UByte : RX_Long;

#define F(f) store_flags(rx, f)

#define AU ATTRIBUTE_UNUSED
#define GETBYTE() (ld->op [ld->rx->n_bytes++] = ld->getbyte (ld->ptr))

#define SYNTAX(x) rx->syntax = x

#define UNSUPPORTED() \
  rx->syntax = "*unknown*"

#define IMM(sf)   immediate (sf, 0, ld)
#define IMMex(sf) immediate (sf, 1, ld)

static int
immediate (int sfield, int ex, LocalData * ld)
{
  unsigned long i = 0, j;

  switch (sfield)
    {
#define B ((unsigned long) GETBYTE())
    case 0:
#if RX_OPCODE_BIG_ENDIAN
      i  = B;
      if (ex && (i & 0x80))
	i -= 0x100;
      i <<= 24;
      i |= B << 16;
      i |= B << 8;
      i |= B;
#else
      i = B;
      i |= B << 8;
      i |= B << 16;
      j = B;
      if (ex && (j & 0x80))
	j -= 0x100;
      i |= j << 24;
#endif
      break;
    case 3:
#if RX_OPCODE_BIG_ENDIAN
      i  = B << 16;
      i |= B << 8;
      i |= B;
#else
      i  = B;
      i |= B << 8;
      i |= B << 16;
#endif
      if (ex && (i & 0x800000))
	i -= 0x1000000;
      break;
    case 2:
#if RX_OPCODE_BIG_ENDIAN
      i |= B << 8;
      i |= B;
#else
      i |= B;
      i |= B << 8;
#endif
      if (ex && (i & 0x8000))
	i -= 0x10000;
      break;
    case 1:
      i |= B;
      if (ex && (i & 0x80))
	i -= 0x100;
      break;
    default:
      abort();
    }
  return i;
}

static void
rx_disp (int n, int type, int reg, int size, LocalData * ld)
{
  int disp;

  ld->rx->op[n].reg = reg;
  switch (type)
    {
    case 3:
      ld->rx->op[n].type = RX_Operand_Register;
      break;
    case 0:
      ld->rx->op[n].type = RX_Operand_Indirect;
      ld->rx->op[n].addend = 0;
      break;
    case 1:
      ld->rx->op[n].type = RX_Operand_Indirect;
      disp = GETBYTE ();
      ld->rx->op[n].addend = disp * PSCALE[size];
      break;
    case 2:
      ld->rx->op[n].type = RX_Operand_Indirect;
      disp = GETBYTE ();
#if RX_OPCODE_BIG_ENDIAN
      disp = disp * 256 + GETBYTE ();
#else
      disp = disp + GETBYTE () * 256;
#endif
      ld->rx->op[n].addend = disp * PSCALE[size];
      break;
    default:
      abort ();
    }
}

#define xO 8
#define xS 4
#define xZ 2
#define xC 1

#define F_____ 
#define F___ZC rx->flags_0 = rx->flags_s = xZ|xC;
#define F__SZ_ rx->flags_0 = rx->flags_s = xS|xZ;
#define F__SZC rx->flags_0 = rx->flags_s = xS|xZ|xC;
#define F_0SZC rx->flags_0 = xO|xS|xZ|xC; rx->flags_s = xS|xZ|xC;
#define F_O___ rx->flags_0 = rx->flags_s = xO;
#define F_OS__ rx->flags_0 = rx->flags_s = xO|xS;
#define F_OSZ_ rx->flags_0 = rx->flags_s = xO|xS|xZ;
#define F_OSZC rx->flags_0 = rx->flags_s = xO|xS|xZ|xC;

int
rx_decode_opcode (unsigned long pc AU,
		  RX_Opcode_Decoded * rx,
		  int (* getbyte)(void *),
		  void * ptr)
{
  LocalData lds, * ld = &lds;
  unsigned char op[20] = {0};

  lds.rx = rx;
  lds.getbyte = getbyte;
  lds.ptr = ptr;
  lds.op = op;

  memset (rx, 0, sizeof (*rx));
  BWL(LSIZE);


/*----------------------------------------------------------------------*/
/* MOV									*/

  GETBYTE ();
  switch (op[0] & 0xff)
  {
    case 0x00:
        {
          /** 0000 0000			brk */
          if (trace)
            {
              printf ("\033[33m%s\033[0m  %02x\n",
                     "/** 0000 0000			brk */",
                     op[0]);
            }
          SYNTAX("brk");
#line 984 "rx-decode.opc"
          ID(brk);
        
        }
      break;
    case 0x01:
        {
          /** 0000 0001			dbt */
          if (trace)
            {
              printf ("\033[33m%s\033[0m  %02x\n",
                     "/** 0000 0001			dbt */",
                     op[0]);
            }
          SYNTAX("dbt");
#line 987 "rx-decode.opc"
          ID(dbt);
        
        }
      break;
    case 0x02:
        {
          /** 0000 0010			rts */
          if (trace)
            {
              printf ("\033[33m%s\033[0m  %02x\n",
                     "/** 0000 0010			rts */",
                     op[0]);
            }
          SYNTAX("rts");
#line 765 "rx-decode.opc"
          ID(rts);
        
        /*----------------------------------------------------------------------*/
        /* NOP								*/
        
        }
      break;
    case 0x03:
        {
          /** 0000 0011			nop */
          if (trace)
            {
              printf ("\033[33m%s\033[0m  %02x\n",
                     "/** 0000 0011			nop */",
                     op[0]);
            }
          SYNTAX("nop");
#line 771 "rx-decode.opc"
          ID(nop);
        
        /*----------------------------------------------------------------------*/
        /* STRING FUNCTIONS							*/
        
        }
      break;
    case 0x04:
        {
          /** 0000 0100			bra.a	%a0 */
          if (trace)
            {
              printf ("\033[33m%s\033[0m  %02x\n",
                     "/** 0000 0100			bra.a	%a0 */",
                     op[0]);
            }
          SYNTAX("bra.a	%a0");
#line 743 "rx-decode.opc"
          ID(branch); DC(pc + IMMex(3));
        
        }
      break;
    case 0x05:
        {
          /** 0000 0101			bsr.a	%a0 */
          if (trace)
            {
              printf ("\033[33m%s\033[0m  %02x\n",
                     "/** 0000 0101			bsr.a	%a0 */",
                     op[0]);
            }
          SYNTAX("bsr.a	%a0");
#line 759 "rx-decode.opc"
          ID(jsr); DC(pc + IMMex(3));
        
        }
      break;
    case 0x06:
        GETBYTE ();
        switch (op[1] & 0xff)
        {
          case 0x00:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_1:
                    {
                      /** 0000 0110 mx00 00ss rsrc rdst			sub	%2%S2, %1 */
#line 539 "rx-decode.opc"
                      int mx AU = (op[1] >> 6) & 0x03;
#line 539 "rx-decode.opc"
                      int ss AU = op[1] & 0x03;
#line 539 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 539 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 0000 0110 mx00 00ss rsrc rdst			sub	%2%S2, %1 */",
                                 op[0], op[1], op[2]);
                          printf ("  mx = 0x%x,", mx);
                          printf ("  ss = 0x%x,", ss);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("sub	%2%S2, %1");
#line 539 "rx-decode.opc"
                      ID(sub); S2Pm(ss, rsrc, mx); SR(rdst); DR(rdst); F_OSZC;
                    
                    }
                  break;
              }
            break;
          case 0x01:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_1;
                  break;
              }
            break;
          case 0x02:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_1;
                  break;
              }
            break;
          case 0x03:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_1;
                  break;
              }
            break;
          case 0x04:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_2:
                    {
                      /** 0000 0110 mx00 01ss rsrc rdst		cmp	%2%S2, %1 */
#line 527 "rx-decode.opc"
                      int mx AU = (op[1] >> 6) & 0x03;
#line 527 "rx-decode.opc"
                      int ss AU = op[1] & 0x03;
#line 527 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 527 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 0000 0110 mx00 01ss rsrc rdst		cmp	%2%S2, %1 */",
                                 op[0], op[1], op[2]);
                          printf ("  mx = 0x%x,", mx);
                          printf ("  ss = 0x%x,", ss);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("cmp	%2%S2, %1");
#line 527 "rx-decode.opc"
                      ID(sub); S2Pm(ss, rsrc, mx); SR(rdst); F_OSZC;
                    
                    /*----------------------------------------------------------------------*/
                    /* SUB									*/
                    
                    }
                  break;
              }
            break;
          case 0x05:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_2;
                  break;
              }
            break;
          case 0x06:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_2;
                  break;
              }
            break;
          case 0x07:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_2;
                  break;
              }
            break;
          case 0x08:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_3:
                    {
                      /** 0000 0110 mx00 10ss rsrc rdst	add	%1%S1, %0 */
#line 503 "rx-decode.opc"
                      int mx AU = (op[1] >> 6) & 0x03;
#line 503 "rx-decode.opc"
                      int ss AU = op[1] & 0x03;
#line 503 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 503 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 0000 0110 mx00 10ss rsrc rdst	add	%1%S1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  mx = 0x%x,", mx);
                          printf ("  ss = 0x%x,", ss);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("add	%1%S1, %0");
#line 503 "rx-decode.opc"
                      ID(add); SPm(ss, rsrc, mx); DR(rdst); F_OSZC;
                    
                    }
                  break;
              }
            break;
          case 0x09:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_3;
                  break;
              }
            break;
          case 0x0a:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_3;
                  break;
              }
            break;
          case 0x0b:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_3;
                  break;
              }
            break;
          case 0x0c:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_4:
                    {
                      /** 0000 0110 mx00 11ss rsrc rdst	mul	%1%S1, %0 */
#line 608 "rx-decode.opc"
                      int mx AU = (op[1] >> 6) & 0x03;
#line 608 "rx-decode.opc"
                      int ss AU = op[1] & 0x03;
#line 608 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 608 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 0000 0110 mx00 11ss rsrc rdst	mul	%1%S1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  mx = 0x%x,", mx);
                          printf ("  ss = 0x%x,", ss);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("mul	%1%S1, %0");
#line 608 "rx-decode.opc"
                      ID(mul); SPm(ss, rsrc, mx); DR(rdst); F_____;
                    
                    }
                  break;
              }
            break;
          case 0x0d:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_4;
                  break;
              }
            break;
          case 0x0e:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_4;
                  break;
              }
            break;
          case 0x0f:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_4;
                  break;
              }
            break;
          case 0x10:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_5:
                    {
                      /** 0000 0110 mx01 00ss rsrc rdst	and	%1%S1, %0 */
#line 416 "rx-decode.opc"
                      int mx AU = (op[1] >> 6) & 0x03;
#line 416 "rx-decode.opc"
                      int ss AU = op[1] & 0x03;
#line 416 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 416 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 0000 0110 mx01 00ss rsrc rdst	and	%1%S1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  mx = 0x%x,", mx);
                          printf ("  ss = 0x%x,", ss);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("and	%1%S1, %0");
#line 416 "rx-decode.opc"
                      ID(and); SPm(ss, rsrc, mx); DR(rdst); F__SZ_;
                    
                    }
                  break;
              }
            break;
          case 0x11:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_5;
                  break;
              }
            break;
          case 0x12:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_5;
                  break;
              }
            break;
          case 0x13:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_5;
                  break;
              }
            break;
          case 0x14:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_6:
                    {
                      /** 0000 0110 mx01 01ss rsrc rdst			or	%1%S1, %0 */
#line 434 "rx-decode.opc"
                      int mx AU = (op[1] >> 6) & 0x03;
#line 434 "rx-decode.opc"
                      int ss AU = op[1] & 0x03;
#line 434 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 434 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 0000 0110 mx01 01ss rsrc rdst			or	%1%S1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  mx = 0x%x,", mx);
                          printf ("  ss = 0x%x,", ss);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("or	%1%S1, %0");
#line 434 "rx-decode.opc"
                      ID(or); SPm(ss, rsrc, mx); DR(rdst); F__SZ_;
                    
                    }
                  break;
              }
            break;
          case 0x15:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_6;
                  break;
              }
            break;
          case 0x16:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_6;
                  break;
              }
            break;
          case 0x17:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_6;
                  break;
              }
            break;
          case 0x20:
              GETBYTE ();
              switch (op[2] & 0xff)
              {
                case 0x00:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        op_semantics_7:
                          {
                            /** 0000 0110 mx10 00sp 0000 0000 rsrc rdst	sbb	%1%S1, %0 */
#line 552 "rx-decode.opc"
                            int mx AU = (op[1] >> 6) & 0x03;
#line 552 "rx-decode.opc"
                            int sp AU = op[1] & 0x03;
#line 552 "rx-decode.opc"
                            int rsrc AU = (op[3] >> 4) & 0x0f;
#line 552 "rx-decode.opc"
                            int rdst AU = op[3] & 0x0f;
                            if (trace)
                              {
                                printf ("\033[33m%s\033[0m  %02x %02x %02x %02x\n",
                                       "/** 0000 0110 mx10 00sp 0000 0000 rsrc rdst	sbb	%1%S1, %0 */",
                                       op[0], op[1], op[2], op[3]);
                                printf ("  mx = 0x%x,", mx);
                                printf ("  sp = 0x%x,", sp);
                                printf ("  rsrc = 0x%x,", rsrc);
                                printf ("  rdst = 0x%x\n", rdst);
                              }
                            SYNTAX("sbb	%1%S1, %0");
#line 552 "rx-decode.opc"
                            ID(sbb); SPm(sp, rsrc, mx); DR(rdst); F_OSZC;
                          
                          /*----------------------------------------------------------------------*/
                          /* ABS									*/
                          
                          }
                        break;
                    }
                  break;
                case 0x04:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        op_semantics_8:
                          {
                            /** 0000 0110 mx10 00ss 0000 0100 rsrc rdst	max	%1%S1, %0 */
#line 581 "rx-decode.opc"
                            int mx AU = (op[1] >> 6) & 0x03;
#line 581 "rx-decode.opc"
                            int ss AU = op[1] & 0x03;
#line 581 "rx-decode.opc"
                            int rsrc AU = (op[3] >> 4) & 0x0f;
#line 581 "rx-decode.opc"
                            int rdst AU = op[3] & 0x0f;
                            if (trace)
                              {
                                printf ("\033[33m%s\033[0m  %02x %02x %02x %02x\n",
                                       "/** 0000 0110 mx10 00ss 0000 0100 rsrc rdst	max	%1%S1, %0 */",
                                       op[0], op[1], op[2], op[3]);
                                printf ("  mx = 0x%x,", mx);
                                printf ("  ss = 0x%x,", ss);
                                printf ("  rsrc = 0x%x,", rsrc);
                                printf ("  rdst = 0x%x\n", rdst);
                              }
                            SYNTAX("max	%1%S1, %0");
#line 581 "rx-decode.opc"
                            ID(max); SPm(ss, rsrc, mx); DR(rdst);
                          
                          /*----------------------------------------------------------------------*/
                          /* MIN									*/
                          
                          }
                        break;
                    }
                  break;
                case 0x05:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        op_semantics_9:
                          {
                            /** 0000 0110 mx10 00ss 0000 0101 rsrc rdst	min	%1%S1, %0 */
#line 593 "rx-decode.opc"
                            int mx AU = (op[1] >> 6) & 0x03;
#line 593 "rx-decode.opc"
                            int ss AU = op[1] & 0x03;
#line 593 "rx-decode.opc"
                            int rsrc AU = (op[3] >> 4) & 0x0f;
#line 593 "rx-decode.opc"
                            int rdst AU = op[3] & 0x0f;
                            if (trace)
                              {
                                printf ("\033[33m%s\033[0m  %02x %02x %02x %02x\n",
                                       "/** 0000 0110 mx10 00ss 0000 0101 rsrc rdst	min	%1%S1, %0 */",
                                       op[0], op[1], op[2], op[3]);
                                printf ("  mx = 0x%x,", mx);
                                printf ("  ss = 0x%x,", ss);
                                printf ("  rsrc = 0x%x,", rsrc);
                                printf ("  rdst = 0x%x\n", rdst);
                              }
                            SYNTAX("min	%1%S1, %0");
#line 593 "rx-decode.opc"
                            ID(min); SPm(ss, rsrc, mx); DR(rdst);
                          
                          /*----------------------------------------------------------------------*/
                          /* MUL									*/
                          
                          }
                        break;
                    }
                  break;
                case 0x06:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        op_semantics_10:
                          {
                            /** 0000 0110 mx10 00ss 0000 0110 rsrc rdst	emul	%1%S1, %0 */
#line 623 "rx-decode.opc"
                            int mx AU = (op[1] >> 6) & 0x03;
#line 623 "rx-decode.opc"
                            int ss AU = op[1] & 0x03;
#line 623 "rx-decode.opc"
                            int rsrc AU = (op[3] >> 4) & 0x0f;
#line 623 "rx-decode.opc"
                            int rdst AU = op[3] & 0x0f;
                            if (trace)
                              {
                                printf ("\033[33m%s\033[0m  %02x %02x %02x %02x\n",
                                       "/** 0000 0110 mx10 00ss 0000 0110 rsrc rdst	emul	%1%S1, %0 */",
                                       op[0], op[1], op[2], op[3]);
                                printf ("  mx = 0x%x,", mx);
                                printf ("  ss = 0x%x,", ss);
                                printf ("  rsrc = 0x%x,", rsrc);
                                printf ("  rdst = 0x%x\n", rdst);
                              }
                            SYNTAX("emul	%1%S1, %0");
#line 623 "rx-decode.opc"
                            ID(emul); SPm(ss, rsrc, mx); DR(rdst);
                          
                          /*----------------------------------------------------------------------*/
                          /* EMULU									*/
                          
                          }
                        break;
                    }
                  break;
                case 0x07:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        op_semantics_11:
                          {
                            /** 0000 0110 mx10 00ss 0000 0111 rsrc rdst	emulu	%1%S1, %0 */
#line 635 "rx-decode.opc"
                            int mx AU = (op[1] >> 6) & 0x03;
#line 635 "rx-decode.opc"
                            int ss AU = op[1] & 0x03;
#line 635 "rx-decode.opc"
                            int rsrc AU = (op[3] >> 4) & 0x0f;
#line 635 "rx-decode.opc"
                            int rdst AU = op[3] & 0x0f;
                            if (trace)
                              {
                                printf ("\033[33m%s\033[0m  %02x %02x %02x %02x\n",
                                       "/** 0000 0110 mx10 00ss 0000 0111 rsrc rdst	emulu	%1%S1, %0 */",
                                       op[0], op[1], op[2], op[3]);
                                printf ("  mx = 0x%x,", mx);
                                printf ("  ss = 0x%x,", ss);
                                printf ("  rsrc = 0x%x,", rsrc);
                                printf ("  rdst = 0x%x\n", rdst);
                              }
                            SYNTAX("emulu	%1%S1, %0");
#line 635 "rx-decode.opc"
                            ID(emulu); SPm(ss, rsrc, mx); DR(rdst);
                          
                          /*----------------------------------------------------------------------*/
                          /* DIV									*/
                          
                          }
                        break;
                    }
                  break;
                case 0x08:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        op_semantics_12:
                          {
                            /** 0000 0110 mx10 00ss 0000 1000 rsrc rdst	div	%1%S1, %0 */
#line 647 "rx-decode.opc"
                            int mx AU = (op[1] >> 6) & 0x03;
#line 647 "rx-decode.opc"
                            int ss AU = op[1] & 0x03;
#line 647 "rx-decode.opc"
                            int rsrc AU = (op[3] >> 4) & 0x0f;
#line 647 "rx-decode.opc"
                            int rdst AU = op[3] & 0x0f;
                            if (trace)
                              {
                                printf ("\033[33m%s\033[0m  %02x %02x %02x %02x\n",
                                       "/** 0000 0110 mx10 00ss 0000 1000 rsrc rdst	div	%1%S1, %0 */",
                                       op[0], op[1], op[2], op[3]);
                                printf ("  mx = 0x%x,", mx);
                                printf ("  ss = 0x%x,", ss);
                                printf ("  rsrc = 0x%x,", rsrc);
                                printf ("  rdst = 0x%x\n", rdst);
                              }
                            SYNTAX("div	%1%S1, %0");
#line 647 "rx-decode.opc"
                            ID(div); SPm(ss, rsrc, mx); DR(rdst); F_O___;
                          
                          /*----------------------------------------------------------------------*/
                          /* DIVU									*/
                          
                          }
                        break;
                    }
                  break;
                case 0x09:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        op_semantics_13:
                          {
                            /** 0000 0110 mx10 00ss 0000 1001 rsrc rdst	divu	%1%S1, %0 */
#line 659 "rx-decode.opc"
                            int mx AU = (op[1] >> 6) & 0x03;
#line 659 "rx-decode.opc"
                            int ss AU = op[1] & 0x03;
#line 659 "rx-decode.opc"
                            int rsrc AU = (op[3] >> 4) & 0x0f;
#line 659 "rx-decode.opc"
                            int rdst AU = op[3] & 0x0f;
                            if (trace)
                              {
                                printf ("\033[33m%s\033[0m  %02x %02x %02x %02x\n",
                                       "/** 0000 0110 mx10 00ss 0000 1001 rsrc rdst	divu	%1%S1, %0 */",
                                       op[0], op[1], op[2], op[3]);
                                printf ("  mx = 0x%x,", mx);
                                printf ("  ss = 0x%x,", ss);
                                printf ("  rsrc = 0x%x,", rsrc);
                                printf ("  rdst = 0x%x\n", rdst);
                              }
                            SYNTAX("divu	%1%S1, %0");
#line 659 "rx-decode.opc"
                            ID(divu); SPm(ss, rsrc, mx); DR(rdst); F_O___;
                          
                          /*----------------------------------------------------------------------*/
                          /* SHIFT								*/
                          
                          }
                        break;
                    }
                  break;
                case 0x0c:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        op_semantics_14:
                          {
                            /** 0000 0110 mx10 00ss 0000 1100 rsrc rdst	tst	%1%S1, %2 */
#line 470 "rx-decode.opc"
                            int mx AU = (op[1] >> 6) & 0x03;
#line 470 "rx-decode.opc"
                            int ss AU = op[1] & 0x03;
#line 470 "rx-decode.opc"
                            int rsrc AU = (op[3] >> 4) & 0x0f;
#line 470 "rx-decode.opc"
                            int rdst AU = op[3] & 0x0f;
                            if (trace)
                              {
                                printf ("\033[33m%s\033[0m  %02x %02x %02x %02x\n",
                                       "/** 0000 0110 mx10 00ss 0000 1100 rsrc rdst	tst	%1%S1, %2 */",
                                       op[0], op[1], op[2], op[3]);
                                printf ("  mx = 0x%x,", mx);
                                printf ("  ss = 0x%x,", ss);
                                printf ("  rsrc = 0x%x,", rsrc);
                                printf ("  rdst = 0x%x\n", rdst);
                              }
                            SYNTAX("tst	%1%S1, %2");
#line 470 "rx-decode.opc"
                            ID(and); SPm(ss, rsrc, mx); S2R(rdst); F__SZ_;
                          
                          /*----------------------------------------------------------------------*/
                          /* NEG									*/
                          
                          }
                        break;
                    }
                  break;
                case 0x0d:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        op_semantics_15:
                          {
                            /** 0000 0110 mx10 00ss 0000 1101 rsrc rdst	xor	%1%S1, %0 */
#line 449 "rx-decode.opc"
                            int mx AU = (op[1] >> 6) & 0x03;
#line 449 "rx-decode.opc"
                            int ss AU = op[1] & 0x03;
#line 449 "rx-decode.opc"
                            int rsrc AU = (op[3] >> 4) & 0x0f;
#line 449 "rx-decode.opc"
                            int rdst AU = op[3] & 0x0f;
                            if (trace)
                              {
                                printf ("\033[33m%s\033[0m  %02x %02x %02x %02x\n",
                                       "/** 0000 0110 mx10 00ss 0000 1101 rsrc rdst	xor	%1%S1, %0 */",
                                       op[0], op[1], op[2], op[3]);
                                printf ("  mx = 0x%x,", mx);
                                printf ("  ss = 0x%x,", ss);
                                printf ("  rsrc = 0x%x,", rsrc);
                                printf ("  rdst = 0x%x\n", rdst);
                              }
                            SYNTAX("xor	%1%S1, %0");
#line 449 "rx-decode.opc"
                            ID(xor); SPm(ss, rsrc, mx); DR(rdst); F__SZ_;
                          
                          /*----------------------------------------------------------------------*/
                          /* NOT									*/
                          
                          }
                        break;
                    }
                  break;
                case 0x10:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        op_semantics_16:
                          {
                            /** 0000 0110 mx10 00ss 0001 0000 rsrc rdst	xchg	%1%S1, %0 */
#line 383 "rx-decode.opc"
                            int mx AU = (op[1] >> 6) & 0x03;
#line 383 "rx-decode.opc"
                            int ss AU = op[1] & 0x03;
#line 383 "rx-decode.opc"
                            int rsrc AU = (op[3] >> 4) & 0x0f;
#line 383 "rx-decode.opc"
                            int rdst AU = op[3] & 0x0f;
                            if (trace)
                              {
                                printf ("\033[33m%s\033[0m  %02x %02x %02x %02x\n",
                                       "/** 0000 0110 mx10 00ss 0001 0000 rsrc rdst	xchg	%1%S1, %0 */",
                                       op[0], op[1], op[2], op[3]);
                                printf ("  mx = 0x%x,", mx);
                                printf ("  ss = 0x%x,", ss);
                                printf ("  rsrc = 0x%x,", rsrc);
                                printf ("  rdst = 0x%x\n", rdst);
                              }
                            SYNTAX("xchg	%1%S1, %0");
#line 383 "rx-decode.opc"
                            ID(xchg); DR(rdst); SPm(ss, rsrc, mx);
                          
                          /*----------------------------------------------------------------------*/
                          /* STZ/STNZ								*/
                          
                          }
                        break;
                    }
                  break;
                case 0x11:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        op_semantics_17:
                          {
                            /** 0000 0110 mx10 00sd 0001 0001 rsrc rdst	itof	%1%S1, %0 */
#line 888 "rx-decode.opc"
                            int mx AU = (op[1] >> 6) & 0x03;
#line 888 "rx-decode.opc"
                            int sd AU = op[1] & 0x03;
#line 888 "rx-decode.opc"
                            int rsrc AU = (op[3] >> 4) & 0x0f;
#line 888 "rx-decode.opc"
                            int rdst AU = op[3] & 0x0f;
                            if (trace)
                              {
                                printf ("\033[33m%s\033[0m  %02x %02x %02x %02x\n",
                                       "/** 0000 0110 mx10 00sd 0001 0001 rsrc rdst	itof	%1%S1, %0 */",
                                       op[0], op[1], op[2], op[3]);
                                printf ("  mx = 0x%x,", mx);
                                printf ("  sd = 0x%x,", sd);
                                printf ("  rsrc = 0x%x,", rsrc);
                                printf ("  rdst = 0x%x\n", rdst);
                              }
                            SYNTAX("itof	%1%S1, %0");
#line 888 "rx-decode.opc"
                            ID(itof); DR (rdst); SPm(sd, rsrc, mx); F__SZ_;
                          
                          /*----------------------------------------------------------------------*/
                          /* BIT OPS								*/
                          
                          }
                        break;
                    }
                  break;
                default: UNSUPPORTED(); break;
              }
            break;
          case 0x21:
              GETBYTE ();
              switch (op[2] & 0xff)
              {
                case 0x00:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_7;
                        break;
                    }
                  break;
                case 0x04:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_8;
                        break;
                    }
                  break;
                case 0x05:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_9;
                        break;
                    }
                  break;
                case 0x06:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_10;
                        break;
                    }
                  break;
                case 0x07:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_11;
                        break;
                    }
                  break;
                case 0x08:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_12;
                        break;
                    }
                  break;
                case 0x09:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_13;
                        break;
                    }
                  break;
                case 0x0c:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_14;
                        break;
                    }
                  break;
                case 0x0d:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_15;
                        break;
                    }
                  break;
                case 0x10:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_16;
                        break;
                    }
                  break;
                case 0x11:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_17;
                        break;
                    }
                  break;
                default: UNSUPPORTED(); break;
              }
            break;
          case 0x22:
              GETBYTE ();
              switch (op[2] & 0xff)
              {
                case 0x00:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_7;
                        break;
                    }
                  break;
                case 0x04:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_8;
                        break;
                    }
                  break;
                case 0x05:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_9;
                        break;
                    }
                  break;
                case 0x06:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_10;
                        break;
                    }
                  break;
                case 0x07:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_11;
                        break;
                    }
                  break;
                case 0x08:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_12;
                        break;
                    }
                  break;
                case 0x09:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_13;
                        break;
                    }
                  break;
                case 0x0c:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_14;
                        break;
                    }
                  break;
                case 0x0d:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_15;
                        break;
                    }
                  break;
                case 0x10:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_16;
                        break;
                    }
                  break;
                case 0x11:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_17;
                        break;
                    }
                  break;
                default: UNSUPPORTED(); break;
              }
            break;
          case 0x23:
              GETBYTE ();
              switch (op[2] & 0xff)
              {
                case 0x00:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_7;
                        break;
                    }
                  break;
                case 0x04:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_8;
                        break;
                    }
                  break;
                case 0x05:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_9;
                        break;
                    }
                  break;
                case 0x06:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_10;
                        break;
                    }
                  break;
                case 0x07:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_11;
                        break;
                    }
                  break;
                case 0x08:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_12;
                        break;
                    }
                  break;
                case 0x09:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_13;
                        break;
                    }
                  break;
                case 0x0c:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_14;
                        break;
                    }
                  break;
                case 0x0d:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_15;
                        break;
                    }
                  break;
                case 0x10:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_16;
                        break;
                    }
                  break;
                case 0x11:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_17;
                        break;
                    }
                  break;
                default: UNSUPPORTED(); break;
              }
            break;
          case 0x40:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_1;
                  break;
              }
            break;
          case 0x41:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_1;
                  break;
              }
            break;
          case 0x42:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_1;
                  break;
              }
            break;
          case 0x43:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_1;
                  break;
              }
            break;
          case 0x44:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_2;
                  break;
              }
            break;
          case 0x45:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_2;
                  break;
              }
            break;
          case 0x46:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_2;
                  break;
              }
            break;
          case 0x47:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_2;
                  break;
              }
            break;
          case 0x48:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_3;
                  break;
              }
            break;
          case 0x49:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_3;
                  break;
              }
            break;
          case 0x4a:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_3;
                  break;
              }
            break;
          case 0x4b:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_3;
                  break;
              }
            break;
          case 0x4c:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_4;
                  break;
              }
            break;
          case 0x4d:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_4;
                  break;
              }
            break;
          case 0x4e:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_4;
                  break;
              }
            break;
          case 0x4f:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_4;
                  break;
              }
            break;
          case 0x50:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_5;
                  break;
              }
            break;
          case 0x51:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_5;
                  break;
              }
            break;
          case 0x52:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_5;
                  break;
              }
            break;
          case 0x53:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_5;
                  break;
              }
            break;
          case 0x54:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_6;
                  break;
              }
            break;
          case 0x55:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_6;
                  break;
              }
            break;
          case 0x56:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_6;
                  break;
              }
            break;
          case 0x57:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_6;
                  break;
              }
            break;
          case 0x60:
              GETBYTE ();
              switch (op[2] & 0xff)
              {
                case 0x00:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_7;
                        break;
                    }
                  break;
                case 0x04:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_8;
                        break;
                    }
                  break;
                case 0x05:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_9;
                        break;
                    }
                  break;
                case 0x06:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_10;
                        break;
                    }
                  break;
                case 0x07:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_11;
                        break;
                    }
                  break;
                case 0x08:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_12;
                        break;
                    }
                  break;
                case 0x09:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_13;
                        break;
                    }
                  break;
                case 0x0c:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_14;
                        break;
                    }
                  break;
                case 0x0d:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_15;
                        break;
                    }
                  break;
                case 0x10:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_16;
                        break;
                    }
                  break;
                case 0x11:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_17;
                        break;
                    }
                  break;
                default: UNSUPPORTED(); break;
              }
            break;
          case 0x61:
              GETBYTE ();
              switch (op[2] & 0xff)
              {
                case 0x00:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_7;
                        break;
                    }
                  break;
                case 0x04:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_8;
                        break;
                    }
                  break;
                case 0x05:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_9;
                        break;
                    }
                  break;
                case 0x06:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_10;
                        break;
                    }
                  break;
                case 0x07:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_11;
                        break;
                    }
                  break;
                case 0x08:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_12;
                        break;
                    }
                  break;
                case 0x09:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_13;
                        break;
                    }
                  break;
                case 0x0c:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_14;
                        break;
                    }
                  break;
                case 0x0d:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_15;
                        break;
                    }
                  break;
                case 0x10:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_16;
                        break;
                    }
                  break;
                case 0x11:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_17;
                        break;
                    }
                  break;
                default: UNSUPPORTED(); break;
              }
            break;
          case 0x62:
              GETBYTE ();
              switch (op[2] & 0xff)
              {
                case 0x00:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_7;
                        break;
                    }
                  break;
                case 0x04:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_8;
                        break;
                    }
                  break;
                case 0x05:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_9;
                        break;
                    }
                  break;
                case 0x06:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_10;
                        break;
                    }
                  break;
                case 0x07:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_11;
                        break;
                    }
                  break;
                case 0x08:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_12;
                        break;
                    }
                  break;
                case 0x09:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_13;
                        break;
                    }
                  break;
                case 0x0c:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_14;
                        break;
                    }
                  break;
                case 0x0d:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_15;
                        break;
                    }
                  break;
                case 0x10:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_16;
                        break;
                    }
                  break;
                case 0x11:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_17;
                        break;
                    }
                  break;
                default: UNSUPPORTED(); break;
              }
            break;
          case 0x63:
              GETBYTE ();
              switch (op[2] & 0xff)
              {
                case 0x00:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_7;
                        break;
                    }
                  break;
                case 0x04:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_8;
                        break;
                    }
                  break;
                case 0x05:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_9;
                        break;
                    }
                  break;
                case 0x06:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_10;
                        break;
                    }
                  break;
                case 0x07:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_11;
                        break;
                    }
                  break;
                case 0x08:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_12;
                        break;
                    }
                  break;
                case 0x09:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_13;
                        break;
                    }
                  break;
                case 0x0c:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_14;
                        break;
                    }
                  break;
                case 0x0d:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_15;
                        break;
                    }
                  break;
                case 0x10:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_16;
                        break;
                    }
                  break;
                case 0x11:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_17;
                        break;
                    }
                  break;
                default: UNSUPPORTED(); break;
              }
            break;
          case 0x80:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_1;
                  break;
              }
            break;
          case 0x81:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_1;
                  break;
              }
            break;
          case 0x82:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_1;
                  break;
              }
            break;
          case 0x83:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_1;
                  break;
              }
            break;
          case 0x84:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_2;
                  break;
              }
            break;
          case 0x85:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_2;
                  break;
              }
            break;
          case 0x86:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_2;
                  break;
              }
            break;
          case 0x87:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_2;
                  break;
              }
            break;
          case 0x88:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_3;
                  break;
              }
            break;
          case 0x89:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_3;
                  break;
              }
            break;
          case 0x8a:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_3;
                  break;
              }
            break;
          case 0x8b:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_3;
                  break;
              }
            break;
          case 0x8c:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_4;
                  break;
              }
            break;
          case 0x8d:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_4;
                  break;
              }
            break;
          case 0x8e:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_4;
                  break;
              }
            break;
          case 0x8f:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_4;
                  break;
              }
            break;
          case 0x90:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_5;
                  break;
              }
            break;
          case 0x91:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_5;
                  break;
              }
            break;
          case 0x92:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_5;
                  break;
              }
            break;
          case 0x93:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_5;
                  break;
              }
            break;
          case 0x94:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_6;
                  break;
              }
            break;
          case 0x95:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_6;
                  break;
              }
            break;
          case 0x96:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_6;
                  break;
              }
            break;
          case 0x97:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_6;
                  break;
              }
            break;
          case 0xa0:
              GETBYTE ();
              switch (op[2] & 0xff)
              {
                case 0x00:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_7;
                        break;
                    }
                  break;
                case 0x02:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        op_semantics_18:
                          {
                            /** 0000 0110 1010 00ss 0000 0010 rsrc rdst	adc	%1%S1, %0 */
#line 491 "rx-decode.opc"
                            int ss AU = op[1] & 0x03;
#line 491 "rx-decode.opc"
                            int rsrc AU = (op[3] >> 4) & 0x0f;
#line 491 "rx-decode.opc"
                            int rdst AU = op[3] & 0x0f;
                            if (trace)
                              {
                                printf ("\033[33m%s\033[0m  %02x %02x %02x %02x\n",
                                       "/** 0000 0110 1010 00ss 0000 0010 rsrc rdst	adc	%1%S1, %0 */",
                                       op[0], op[1], op[2], op[3]);
                                printf ("  ss = 0x%x,", ss);
                                printf ("  rsrc = 0x%x,", rsrc);
                                printf ("  rdst = 0x%x\n", rdst);
                              }
                            SYNTAX("adc	%1%S1, %0");
#line 491 "rx-decode.opc"
                            ID(adc); SPm(ss, rsrc, 2); DR(rdst); F_OSZC;
                          
                          /*----------------------------------------------------------------------*/
                          /* ADD									*/
                          
                          }
                        break;
                    }
                  break;
                case 0x04:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_8;
                        break;
                    }
                  break;
                case 0x05:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_9;
                        break;
                    }
                  break;
                case 0x06:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_10;
                        break;
                    }
                  break;
                case 0x07:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_11;
                        break;
                    }
                  break;
                case 0x08:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_12;
                        break;
                    }
                  break;
                case 0x09:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_13;
                        break;
                    }
                  break;
                case 0x0c:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_14;
                        break;
                    }
                  break;
                case 0x0d:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_15;
                        break;
                    }
                  break;
                case 0x10:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_16;
                        break;
                    }
                  break;
                case 0x11:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_17;
                        break;
                    }
                  break;
                default: UNSUPPORTED(); break;
              }
            break;
          case 0xa1:
              GETBYTE ();
              switch (op[2] & 0xff)
              {
                case 0x00:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_7;
                        break;
                    }
                  break;
                case 0x02:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_18;
                        break;
                    }
                  break;
                case 0x04:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_8;
                        break;
                    }
                  break;
                case 0x05:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_9;
                        break;
                    }
                  break;
                case 0x06:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_10;
                        break;
                    }
                  break;
                case 0x07:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_11;
                        break;
                    }
                  break;
                case 0x08:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_12;
                        break;
                    }
                  break;
                case 0x09:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_13;
                        break;
                    }
                  break;
                case 0x0c:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_14;
                        break;
                    }
                  break;
                case 0x0d:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_15;
                        break;
                    }
                  break;
                case 0x10:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_16;
                        break;
                    }
                  break;
                case 0x11:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_17;
                        break;
                    }
                  break;
                default: UNSUPPORTED(); break;
              }
            break;
          case 0xa2:
              GETBYTE ();
              switch (op[2] & 0xff)
              {
                case 0x00:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_7;
                        break;
                    }
                  break;
                case 0x02:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_18;
                        break;
                    }
                  break;
                case 0x04:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_8;
                        break;
                    }
                  break;
                case 0x05:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_9;
                        break;
                    }
                  break;
                case 0x06:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_10;
                        break;
                    }
                  break;
                case 0x07:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_11;
                        break;
                    }
                  break;
                case 0x08:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_12;
                        break;
                    }
                  break;
                case 0x09:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_13;
                        break;
                    }
                  break;
                case 0x0c:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_14;
                        break;
                    }
                  break;
                case 0x0d:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_15;
                        break;
                    }
                  break;
                case 0x10:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_16;
                        break;
                    }
                  break;
                case 0x11:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_17;
                        break;
                    }
                  break;
                default: UNSUPPORTED(); break;
              }
            break;
          case 0xa3:
              GETBYTE ();
              switch (op[2] & 0xff)
              {
                case 0x00:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_7;
                        break;
                    }
                  break;
                case 0x02:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_18;
                        break;
                    }
                  break;
                case 0x04:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_8;
                        break;
                    }
                  break;
                case 0x05:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_9;
                        break;
                    }
                  break;
                case 0x06:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_10;
                        break;
                    }
                  break;
                case 0x07:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_11;
                        break;
                    }
                  break;
                case 0x08:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_12;
                        break;
                    }
                  break;
                case 0x09:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_13;
                        break;
                    }
                  break;
                case 0x0c:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_14;
                        break;
                    }
                  break;
                case 0x0d:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_15;
                        break;
                    }
                  break;
                case 0x10:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_16;
                        break;
                    }
                  break;
                case 0x11:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_17;
                        break;
                    }
                  break;
                default: UNSUPPORTED(); break;
              }
            break;
          case 0xc0:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_1;
                  break;
              }
            break;
          case 0xc1:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_1;
                  break;
              }
            break;
          case 0xc2:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_1;
                  break;
              }
            break;
          case 0xc3:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_1;
                  break;
              }
            break;
          case 0xc4:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_2;
                  break;
              }
            break;
          case 0xc5:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_2;
                  break;
              }
            break;
          case 0xc6:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_2;
                  break;
              }
            break;
          case 0xc7:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_2;
                  break;
              }
            break;
          case 0xc8:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_3;
                  break;
              }
            break;
          case 0xc9:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_3;
                  break;
              }
            break;
          case 0xca:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_3;
                  break;
              }
            break;
          case 0xcb:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_3;
                  break;
              }
            break;
          case 0xcc:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_4;
                  break;
              }
            break;
          case 0xcd:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_4;
                  break;
              }
            break;
          case 0xce:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_4;
                  break;
              }
            break;
          case 0xcf:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_4;
                  break;
              }
            break;
          case 0xd0:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_5;
                  break;
              }
            break;
          case 0xd1:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_5;
                  break;
              }
            break;
          case 0xd2:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_5;
                  break;
              }
            break;
          case 0xd3:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_5;
                  break;
              }
            break;
          case 0xd4:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_6;
                  break;
              }
            break;
          case 0xd5:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_6;
                  break;
              }
            break;
          case 0xd6:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_6;
                  break;
              }
            break;
          case 0xd7:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_6;
                  break;
              }
            break;
          case 0xe0:
              GETBYTE ();
              switch (op[2] & 0xff)
              {
                case 0x00:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_7;
                        break;
                    }
                  break;
                case 0x04:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_8;
                        break;
                    }
                  break;
                case 0x05:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_9;
                        break;
                    }
                  break;
                case 0x06:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_10;
                        break;
                    }
                  break;
                case 0x07:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_11;
                        break;
                    }
                  break;
                case 0x08:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_12;
                        break;
                    }
                  break;
                case 0x09:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_13;
                        break;
                    }
                  break;
                case 0x0c:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_14;
                        break;
                    }
                  break;
                case 0x0d:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_15;
                        break;
                    }
                  break;
                case 0x10:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_16;
                        break;
                    }
                  break;
                case 0x11:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_17;
                        break;
                    }
                  break;
                default: UNSUPPORTED(); break;
              }
            break;
          case 0xe1:
              GETBYTE ();
              switch (op[2] & 0xff)
              {
                case 0x00:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_7;
                        break;
                    }
                  break;
                case 0x04:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_8;
                        break;
                    }
                  break;
                case 0x05:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_9;
                        break;
                    }
                  break;
                case 0x06:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_10;
                        break;
                    }
                  break;
                case 0x07:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_11;
                        break;
                    }
                  break;
                case 0x08:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_12;
                        break;
                    }
                  break;
                case 0x09:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_13;
                        break;
                    }
                  break;
                case 0x0c:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_14;
                        break;
                    }
                  break;
                case 0x0d:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_15;
                        break;
                    }
                  break;
                case 0x10:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_16;
                        break;
                    }
                  break;
                case 0x11:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_17;
                        break;
                    }
                  break;
                default: UNSUPPORTED(); break;
              }
            break;
          case 0xe2:
              GETBYTE ();
              switch (op[2] & 0xff)
              {
                case 0x00:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_7;
                        break;
                    }
                  break;
                case 0x04:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_8;
                        break;
                    }
                  break;
                case 0x05:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_9;
                        break;
                    }
                  break;
                case 0x06:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_10;
                        break;
                    }
                  break;
                case 0x07:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_11;
                        break;
                    }
                  break;
                case 0x08:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_12;
                        break;
                    }
                  break;
                case 0x09:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_13;
                        break;
                    }
                  break;
                case 0x0c:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_14;
                        break;
                    }
                  break;
                case 0x0d:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_15;
                        break;
                    }
                  break;
                case 0x10:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_16;
                        break;
                    }
                  break;
                case 0x11:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_17;
                        break;
                    }
                  break;
                default: UNSUPPORTED(); break;
              }
            break;
          case 0xe3:
              GETBYTE ();
              switch (op[2] & 0xff)
              {
                case 0x00:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_7;
                        break;
                    }
                  break;
                case 0x04:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_8;
                        break;
                    }
                  break;
                case 0x05:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_9;
                        break;
                    }
                  break;
                case 0x06:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_10;
                        break;
                    }
                  break;
                case 0x07:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_11;
                        break;
                    }
                  break;
                case 0x08:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_12;
                        break;
                    }
                  break;
                case 0x09:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_13;
                        break;
                    }
                  break;
                case 0x0c:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_14;
                        break;
                    }
                  break;
                case 0x0d:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_15;
                        break;
                    }
                  break;
                case 0x10:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_16;
                        break;
                    }
                  break;
                case 0x11:
                    GETBYTE ();
                    switch (op[3] & 0x00)
                    {
                      case 0x00:
                        goto op_semantics_17;
                        break;
                    }
                  break;
                default: UNSUPPORTED(); break;
              }
            break;
          default: UNSUPPORTED(); break;
        }
      break;
    case 0x08:
    case 0x09:
    case 0x0a:
    case 0x0b:
    case 0x0c:
    case 0x0d:
    case 0x0e:
    case 0x0f:
        {
          /** 0000 1dsp			bra.s	%a0 */
#line 734 "rx-decode.opc"
          int dsp AU = op[0] & 0x07;
          if (trace)
            {
              printf ("\033[33m%s\033[0m  %02x\n",
                     "/** 0000 1dsp			bra.s	%a0 */",
                     op[0]);
              printf ("  dsp = 0x%x\n", dsp);
            }
          SYNTAX("bra.s	%a0");
#line 734 "rx-decode.opc"
          ID(branch); DC(pc + dsp3map[dsp]);
        
        }
      break;
    case 0x10:
    case 0x11:
    case 0x12:
    case 0x13:
    case 0x14:
    case 0x15:
    case 0x16:
    case 0x17:
    case 0x18:
    case 0x19:
    case 0x1a:
    case 0x1b:
    case 0x1c:
    case 0x1d:
    case 0x1e:
    case 0x1f:
        {
          /** 0001 n dsp			b%1.s	%a0 */
#line 724 "rx-decode.opc"
          int n AU = (op[0] >> 3) & 0x01;
#line 724 "rx-decode.opc"
          int dsp AU = op[0] & 0x07;
          if (trace)
            {
              printf ("\033[33m%s\033[0m  %02x\n",
                     "/** 0001 n dsp			b%1.s	%a0 */",
                     op[0]);
              printf ("  n = 0x%x,", n);
              printf ("  dsp = 0x%x\n", dsp);
            }
          SYNTAX("b%1.s	%a0");
#line 724 "rx-decode.opc"
          ID(branch); Scc(n); DC(pc + dsp3map[dsp]);
        
        }
      break;
    case 0x20:
    case 0x21:
    case 0x22:
    case 0x23:
    case 0x24:
    case 0x25:
    case 0x26:
    case 0x27:
    case 0x28:
    case 0x29:
    case 0x2a:
    case 0x2b:
    case 0x2c:
    case 0x2d:
    case 0x2f:
        {
          /** 0010 cond			b%1.b	%a0 */
#line 727 "rx-decode.opc"
          int cond AU = op[0] & 0x0f;
          if (trace)
            {
              printf ("\033[33m%s\033[0m  %02x\n",
                     "/** 0010 cond			b%1.b	%a0 */",
                     op[0]);
              printf ("  cond = 0x%x\n", cond);
            }
          SYNTAX("b%1.b	%a0");
#line 727 "rx-decode.opc"
          ID(branch); Scc(cond); DC(pc + IMMex (1));
        
        }
      break;
    case 0x2e:
        {
          /** 0010 1110			bra.b	%a0 */
          if (trace)
            {
              printf ("\033[33m%s\033[0m  %02x\n",
                     "/** 0010 1110			bra.b	%a0 */",
                     op[0]);
            }
          SYNTAX("bra.b	%a0");
#line 737 "rx-decode.opc"
          ID(branch); DC(pc + IMMex(1));
        
        }
      break;
    case 0x38:
        {
          /** 0011 1000			bra.w	%a0 */
          if (trace)
            {
              printf ("\033[33m%s\033[0m  %02x\n",
                     "/** 0011 1000			bra.w	%a0 */",
                     op[0]);
            }
          SYNTAX("bra.w	%a0");
#line 740 "rx-decode.opc"
          ID(branch); DC(pc + IMMex(2));
        
        }
      break;
    case 0x39:
        {
          /** 0011 1001			bsr.w	%a0 */
          if (trace)
            {
              printf ("\033[33m%s\033[0m  %02x\n",
                     "/** 0011 1001			bsr.w	%a0 */",
                     op[0]);
            }
          SYNTAX("bsr.w	%a0");
#line 756 "rx-decode.opc"
          ID(jsr); DC(pc + IMMex(2));
        
        }
      break;
    case 0x3a:
    case 0x3b:
        {
          /** 0011 101c			b%1.w	%a0 */
#line 730 "rx-decode.opc"
          int c AU = op[0] & 0x01;
          if (trace)
            {
              printf ("\033[33m%s\033[0m  %02x\n",
                     "/** 0011 101c			b%1.w	%a0 */",
                     op[0]);
              printf ("  c = 0x%x\n", c);
            }
          SYNTAX("b%1.w	%a0");
#line 730 "rx-decode.opc"
          ID(branch); Scc(c); DC(pc + IMMex (2));
        
        
        }
      break;
    case 0x3c:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            op_semantics_19:
              {
                /** 0011 11sz d dst sppp		mov%s	#%1, %0 */
#line 304 "rx-decode.opc"
                int sz AU = op[0] & 0x03;
#line 304 "rx-decode.opc"
                int d AU = (op[1] >> 7) & 0x01;
#line 304 "rx-decode.opc"
                int dst AU = (op[1] >> 4) & 0x07;
#line 304 "rx-decode.opc"
                int sppp AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0011 11sz d dst sppp		mov%s	#%1, %0 */",
                           op[0], op[1]);
                    printf ("  sz = 0x%x,", sz);
                    printf ("  d = 0x%x,", d);
                    printf ("  dst = 0x%x,", dst);
                    printf ("  sppp = 0x%x\n", sppp);
                  }
                SYNTAX("mov%s	#%1, %0");
#line 304 "rx-decode.opc"
                ID(mov); sBWL (sz); DIs(dst, d*16+sppp, sz); SC(IMM(1)); F_____;
              
              }
            break;
        }
      break;
    case 0x3d:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_19;
            break;
        }
      break;
    case 0x3e:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_19;
            break;
        }
      break;
    case 0x3f:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
              {
                /** 0011 1111 rega regb		rtsd	#%1, %2-%0 */
#line 401 "rx-decode.opc"
                int rega AU = (op[1] >> 4) & 0x0f;
#line 401 "rx-decode.opc"
                int regb AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0011 1111 rega regb		rtsd	#%1, %2-%0 */",
                           op[0], op[1]);
                    printf ("  rega = 0x%x,", rega);
                    printf ("  regb = 0x%x\n", regb);
                  }
                SYNTAX("rtsd	#%1, %2-%0");
#line 401 "rx-decode.opc"
                ID(rtsd); SC(IMM(1) * 4); S2R(rega); DR(regb);
              
              /*----------------------------------------------------------------------*/
              /* AND									*/
              
              }
            break;
        }
      break;
    case 0x40:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            op_semantics_20:
              {
                /** 0100 00ss rsrc rdst			sub	%2%S2, %1 */
#line 536 "rx-decode.opc"
                int ss AU = op[0] & 0x03;
#line 536 "rx-decode.opc"
                int rsrc AU = (op[1] >> 4) & 0x0f;
#line 536 "rx-decode.opc"
                int rdst AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0100 00ss rsrc rdst			sub	%2%S2, %1 */",
                           op[0], op[1]);
                    printf ("  ss = 0x%x,", ss);
                    printf ("  rsrc = 0x%x,", rsrc);
                    printf ("  rdst = 0x%x\n", rdst);
                  }
                SYNTAX("sub	%2%S2, %1");
#line 536 "rx-decode.opc"
                ID(sub); S2P(ss, rsrc); SR(rdst); DR(rdst); F_OSZC;
              
              }
            break;
        }
      break;
    case 0x41:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_20;
            break;
        }
      break;
    case 0x42:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_20;
            break;
        }
      break;
    case 0x43:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_20;
            break;
        }
      break;
    case 0x44:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            op_semantics_21:
              {
                /** 0100 01ss rsrc rdst		cmp	%2%S2, %1 */
#line 524 "rx-decode.opc"
                int ss AU = op[0] & 0x03;
#line 524 "rx-decode.opc"
                int rsrc AU = (op[1] >> 4) & 0x0f;
#line 524 "rx-decode.opc"
                int rdst AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0100 01ss rsrc rdst		cmp	%2%S2, %1 */",
                           op[0], op[1]);
                    printf ("  ss = 0x%x,", ss);
                    printf ("  rsrc = 0x%x,", rsrc);
                    printf ("  rdst = 0x%x\n", rdst);
                  }
                SYNTAX("cmp	%2%S2, %1");
#line 524 "rx-decode.opc"
                ID(sub); S2P(ss, rsrc); SR(rdst); F_OSZC;
              
              }
            break;
        }
      break;
    case 0x45:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_21;
            break;
        }
      break;
    case 0x46:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_21;
            break;
        }
      break;
    case 0x47:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_21;
            break;
        }
      break;
    case 0x48:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            op_semantics_22:
              {
                /** 0100 10ss rsrc rdst			add	%1%S1, %0 */
#line 500 "rx-decode.opc"
                int ss AU = op[0] & 0x03;
#line 500 "rx-decode.opc"
                int rsrc AU = (op[1] >> 4) & 0x0f;
#line 500 "rx-decode.opc"
                int rdst AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0100 10ss rsrc rdst			add	%1%S1, %0 */",
                           op[0], op[1]);
                    printf ("  ss = 0x%x,", ss);
                    printf ("  rsrc = 0x%x,", rsrc);
                    printf ("  rdst = 0x%x\n", rdst);
                  }
                SYNTAX("add	%1%S1, %0");
#line 500 "rx-decode.opc"
                ID(add); SP(ss, rsrc); DR(rdst); F_OSZC;
              
              }
            break;
        }
      break;
    case 0x49:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_22;
            break;
        }
      break;
    case 0x4a:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_22;
            break;
        }
      break;
    case 0x4b:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_22;
            break;
        }
      break;
    case 0x4c:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            op_semantics_23:
              {
                /** 0100 11ss rsrc rdst			mul	%1%S1, %0 */
#line 605 "rx-decode.opc"
                int ss AU = op[0] & 0x03;
#line 605 "rx-decode.opc"
                int rsrc AU = (op[1] >> 4) & 0x0f;
#line 605 "rx-decode.opc"
                int rdst AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0100 11ss rsrc rdst			mul	%1%S1, %0 */",
                           op[0], op[1]);
                    printf ("  ss = 0x%x,", ss);
                    printf ("  rsrc = 0x%x,", rsrc);
                    printf ("  rdst = 0x%x\n", rdst);
                  }
                SYNTAX("mul	%1%S1, %0");
#line 605 "rx-decode.opc"
                ID(mul); SP(ss, rsrc); DR(rdst); F_____;
              
              }
            break;
        }
      break;
    case 0x4d:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_23;
            break;
        }
      break;
    case 0x4e:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_23;
            break;
        }
      break;
    case 0x4f:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_23;
            break;
        }
      break;
    case 0x50:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            op_semantics_24:
              {
                /** 0101 00ss rsrc rdst			and	%1%S1, %0 */
#line 413 "rx-decode.opc"
                int ss AU = op[0] & 0x03;
#line 413 "rx-decode.opc"
                int rsrc AU = (op[1] >> 4) & 0x0f;
#line 413 "rx-decode.opc"
                int rdst AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0101 00ss rsrc rdst			and	%1%S1, %0 */",
                           op[0], op[1]);
                    printf ("  ss = 0x%x,", ss);
                    printf ("  rsrc = 0x%x,", rsrc);
                    printf ("  rdst = 0x%x\n", rdst);
                  }
                SYNTAX("and	%1%S1, %0");
#line 413 "rx-decode.opc"
                ID(and); SP(ss, rsrc); DR(rdst); F__SZ_;
              
              }
            break;
        }
      break;
    case 0x51:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_24;
            break;
        }
      break;
    case 0x52:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_24;
            break;
        }
      break;
    case 0x53:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_24;
            break;
        }
      break;
    case 0x54:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            op_semantics_25:
              {
                /** 0101 01ss rsrc rdst			or	%1%S1, %0 */
#line 431 "rx-decode.opc"
                int ss AU = op[0] & 0x03;
#line 431 "rx-decode.opc"
                int rsrc AU = (op[1] >> 4) & 0x0f;
#line 431 "rx-decode.opc"
                int rdst AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0101 01ss rsrc rdst			or	%1%S1, %0 */",
                           op[0], op[1]);
                    printf ("  ss = 0x%x,", ss);
                    printf ("  rsrc = 0x%x,", rsrc);
                    printf ("  rdst = 0x%x\n", rdst);
                  }
                SYNTAX("or	%1%S1, %0");
#line 431 "rx-decode.opc"
                ID(or); SP(ss, rsrc); DR(rdst); F__SZ_;
              
              }
            break;
        }
      break;
    case 0x55:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_25;
            break;
        }
      break;
    case 0x56:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_25;
            break;
        }
      break;
    case 0x57:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_25;
            break;
        }
      break;
    case 0x58:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            op_semantics_26:
              {
                /** 0101 1 s ss rsrc rdst	movu%s	%1, %0 */
#line 352 "rx-decode.opc"
                int s AU = (op[0] >> 2) & 0x01;
#line 352 "rx-decode.opc"
                int ss AU = op[0] & 0x03;
#line 352 "rx-decode.opc"
                int rsrc AU = (op[1] >> 4) & 0x0f;
#line 352 "rx-decode.opc"
                int rdst AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0101 1 s ss rsrc rdst	movu%s	%1, %0 */",
                           op[0], op[1]);
                    printf ("  s = 0x%x,", s);
                    printf ("  ss = 0x%x,", ss);
                    printf ("  rsrc = 0x%x,", rsrc);
                    printf ("  rdst = 0x%x\n", rdst);
                  }
                SYNTAX("movu%s	%1, %0");
#line 352 "rx-decode.opc"
                ID(mov); uBWL(s); SD(ss, rsrc, s); DR(rdst); F_____;
              
              }
            break;
        }
      break;
    case 0x59:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_26;
            break;
        }
      break;
    case 0x5a:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_26;
            break;
        }
      break;
    case 0x5b:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_26;
            break;
        }
      break;
    case 0x5c:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_26;
            break;
        }
      break;
    case 0x5d:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_26;
            break;
        }
      break;
    case 0x5e:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_26;
            break;
        }
      break;
    case 0x5f:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_26;
            break;
        }
      break;
    case 0x60:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
              {
                /** 0110 0000 immm rdst			sub	#%2, %0 */
#line 533 "rx-decode.opc"
                int immm AU = (op[1] >> 4) & 0x0f;
#line 533 "rx-decode.opc"
                int rdst AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0110 0000 immm rdst			sub	#%2, %0 */",
                           op[0], op[1]);
                    printf ("  immm = 0x%x,", immm);
                    printf ("  rdst = 0x%x\n", rdst);
                  }
                SYNTAX("sub	#%2, %0");
#line 533 "rx-decode.opc"
                ID(sub); S2C(immm); SR(rdst); DR(rdst); F_OSZC;
              
              }
            break;
        }
      break;
    case 0x61:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
              {
                /** 0110 0001 immm rdst			cmp	#%2, %1 */
#line 515 "rx-decode.opc"
                int immm AU = (op[1] >> 4) & 0x0f;
#line 515 "rx-decode.opc"
                int rdst AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0110 0001 immm rdst			cmp	#%2, %1 */",
                           op[0], op[1]);
                    printf ("  immm = 0x%x,", immm);
                    printf ("  rdst = 0x%x\n", rdst);
                  }
                SYNTAX("cmp	#%2, %1");
#line 515 "rx-decode.opc"
                ID(sub); S2C(immm); SR(rdst); F_OSZC;
              
              }
            break;
        }
      break;
    case 0x62:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
              {
                /** 0110 0010 immm rdst			add	#%1, %0 */
#line 497 "rx-decode.opc"
                int immm AU = (op[1] >> 4) & 0x0f;
#line 497 "rx-decode.opc"
                int rdst AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0110 0010 immm rdst			add	#%1, %0 */",
                           op[0], op[1]);
                    printf ("  immm = 0x%x,", immm);
                    printf ("  rdst = 0x%x\n", rdst);
                  }
                SYNTAX("add	#%1, %0");
#line 497 "rx-decode.opc"
                ID(add); SC(immm); DR(rdst); F_OSZC;
              
              }
            break;
        }
      break;
    case 0x63:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
              {
                /** 0110 0011 immm rdst			mul	#%1, %0 */
#line 599 "rx-decode.opc"
                int immm AU = (op[1] >> 4) & 0x0f;
#line 599 "rx-decode.opc"
                int rdst AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0110 0011 immm rdst			mul	#%1, %0 */",
                           op[0], op[1]);
                    printf ("  immm = 0x%x,", immm);
                    printf ("  rdst = 0x%x\n", rdst);
                  }
                SYNTAX("mul	#%1, %0");
#line 599 "rx-decode.opc"
                ID(mul); DR(rdst); SC(immm); F_____;
              
              }
            break;
        }
      break;
    case 0x64:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
              {
                /** 0110 0100 immm rdst			and	#%1, %0 */
#line 407 "rx-decode.opc"
                int immm AU = (op[1] >> 4) & 0x0f;
#line 407 "rx-decode.opc"
                int rdst AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0110 0100 immm rdst			and	#%1, %0 */",
                           op[0], op[1]);
                    printf ("  immm = 0x%x,", immm);
                    printf ("  rdst = 0x%x\n", rdst);
                  }
                SYNTAX("and	#%1, %0");
#line 407 "rx-decode.opc"
                ID(and); SC(immm); DR(rdst); F__SZ_;
              
              }
            break;
        }
      break;
    case 0x65:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
              {
                /** 0110 0101 immm rdst			or	#%1, %0 */
#line 425 "rx-decode.opc"
                int immm AU = (op[1] >> 4) & 0x0f;
#line 425 "rx-decode.opc"
                int rdst AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0110 0101 immm rdst			or	#%1, %0 */",
                           op[0], op[1]);
                    printf ("  immm = 0x%x,", immm);
                    printf ("  rdst = 0x%x\n", rdst);
                  }
                SYNTAX("or	#%1, %0");
#line 425 "rx-decode.opc"
                ID(or); SC(immm); DR(rdst); F__SZ_;
              
              }
            break;
        }
      break;
    case 0x66:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
              {
                /** 0110 0110 immm rdst		mov%s	#%1, %0 */
#line 301 "rx-decode.opc"
                int immm AU = (op[1] >> 4) & 0x0f;
#line 301 "rx-decode.opc"
                int rdst AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0110 0110 immm rdst		mov%s	#%1, %0 */",
                           op[0], op[1]);
                    printf ("  immm = 0x%x,", immm);
                    printf ("  rdst = 0x%x\n", rdst);
                  }
                SYNTAX("mov%s	#%1, %0");
#line 301 "rx-decode.opc"
                ID(mov); DR(rdst); SC(immm); F_____;
              
              }
            break;
        }
      break;
    case 0x67:
        {
          /** 0110 0111			rtsd	#%1 */
          if (trace)
            {
              printf ("\033[33m%s\033[0m  %02x\n",
                     "/** 0110 0111			rtsd	#%1 */",
                     op[0]);
            }
          SYNTAX("rtsd	#%1");
#line 398 "rx-decode.opc"
          ID(rtsd); SC(IMM(1) * 4);
        
        }
      break;
    case 0x68:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            op_semantics_27:
              {
                /** 0110 100i mmmm rdst			shlr	#%2, %0 */
#line 685 "rx-decode.opc"
                int i AU = op[0] & 0x01;
#line 685 "rx-decode.opc"
                int mmmm AU = (op[1] >> 4) & 0x0f;
#line 685 "rx-decode.opc"
                int rdst AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0110 100i mmmm rdst			shlr	#%2, %0 */",
                           op[0], op[1]);
                    printf ("  i = 0x%x,", i);
                    printf ("  mmmm = 0x%x,", mmmm);
                    printf ("  rdst = 0x%x\n", rdst);
                  }
                SYNTAX("shlr	#%2, %0");
#line 685 "rx-decode.opc"
                ID(shlr); S2C(i*16+mmmm); SR(rdst); DR(rdst); F__SZC;
              
              }
            break;
        }
      break;
    case 0x69:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_27;
            break;
        }
      break;
    case 0x6a:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            op_semantics_28:
              {
                /** 0110 101i mmmm rdst			shar	#%2, %0 */
#line 675 "rx-decode.opc"
                int i AU = op[0] & 0x01;
#line 675 "rx-decode.opc"
                int mmmm AU = (op[1] >> 4) & 0x0f;
#line 675 "rx-decode.opc"
                int rdst AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0110 101i mmmm rdst			shar	#%2, %0 */",
                           op[0], op[1]);
                    printf ("  i = 0x%x,", i);
                    printf ("  mmmm = 0x%x,", mmmm);
                    printf ("  rdst = 0x%x\n", rdst);
                  }
                SYNTAX("shar	#%2, %0");
#line 675 "rx-decode.opc"
                ID(shar); S2C(i*16+mmmm); SR(rdst); DR(rdst); F_0SZC;
              
              }
            break;
        }
      break;
    case 0x6b:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_28;
            break;
        }
      break;
    case 0x6c:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            op_semantics_29:
              {
                /** 0110 110i mmmm rdst			shll	#%2, %0 */
#line 665 "rx-decode.opc"
                int i AU = op[0] & 0x01;
#line 665 "rx-decode.opc"
                int mmmm AU = (op[1] >> 4) & 0x0f;
#line 665 "rx-decode.opc"
                int rdst AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0110 110i mmmm rdst			shll	#%2, %0 */",
                           op[0], op[1]);
                    printf ("  i = 0x%x,", i);
                    printf ("  mmmm = 0x%x,", mmmm);
                    printf ("  rdst = 0x%x\n", rdst);
                  }
                SYNTAX("shll	#%2, %0");
#line 665 "rx-decode.opc"
                ID(shll); S2C(i*16+mmmm); SR(rdst); DR(rdst); F_OSZC;
              
              }
            break;
        }
      break;
    case 0x6d:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_29;
            break;
        }
      break;
    case 0x6e:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
              {
                /** 0110 1110 dsta dstb		pushm	%1-%2 */
#line 365 "rx-decode.opc"
                int dsta AU = (op[1] >> 4) & 0x0f;
#line 365 "rx-decode.opc"
                int dstb AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0110 1110 dsta dstb		pushm	%1-%2 */",
                           op[0], op[1]);
                    printf ("  dsta = 0x%x,", dsta);
                    printf ("  dstb = 0x%x\n", dstb);
                  }
                SYNTAX("pushm	%1-%2");
#line 365 "rx-decode.opc"
                ID(pushm); SR(dsta); S2R(dstb); F_____;
                
              }
            break;
        }
      break;
    case 0x6f:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
              {
                /** 0110 1111 dsta dstb		popm	%1-%2 */
#line 362 "rx-decode.opc"
                int dsta AU = (op[1] >> 4) & 0x0f;
#line 362 "rx-decode.opc"
                int dstb AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0110 1111 dsta dstb		popm	%1-%2 */",
                           op[0], op[1]);
                    printf ("  dsta = 0x%x,", dsta);
                    printf ("  dstb = 0x%x\n", dstb);
                  }
                SYNTAX("popm	%1-%2");
#line 362 "rx-decode.opc"
                ID(popm); SR(dsta); S2R(dstb); F_____;
              
              }
            break;
        }
      break;
    case 0x70:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            op_semantics_30:
              {
                /** 0111 00im rsrc rdst			add	#%1, %2, %0 */
#line 506 "rx-decode.opc"
                int im AU = op[0] & 0x03;
#line 506 "rx-decode.opc"
                int rsrc AU = (op[1] >> 4) & 0x0f;
#line 506 "rx-decode.opc"
                int rdst AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 00im rsrc rdst			add	#%1, %2, %0 */",
                           op[0], op[1]);
                    printf ("  im = 0x%x,", im);
                    printf ("  rsrc = 0x%x,", rsrc);
                    printf ("  rdst = 0x%x\n", rdst);
                  }
                SYNTAX("add	#%1, %2, %0");
#line 506 "rx-decode.opc"
                ID(add); SC(IMMex(im)); S2R(rsrc); DR(rdst); F_OSZC;
              
              }
            break;
        }
      break;
    case 0x71:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_30;
            break;
        }
      break;
    case 0x72:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_30;
            break;
        }
      break;
    case 0x73:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_30;
            break;
        }
      break;
    case 0x74:
        GETBYTE ();
        switch (op[1] & 0xf0)
        {
          case 0x00:
            op_semantics_31:
              {
                /** 0111 01im 0000 rsrc		cmp	#%2, %1%S1 */
#line 518 "rx-decode.opc"
                int im AU = op[0] & 0x03;
#line 518 "rx-decode.opc"
                int rsrc AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 01im 0000 rsrc		cmp	#%2, %1%S1 */",
                           op[0], op[1]);
                    printf ("  im = 0x%x,", im);
                    printf ("  rsrc = 0x%x\n", rsrc);
                  }
                SYNTAX("cmp	#%2, %1%S1");
#line 518 "rx-decode.opc"
                ID(sub); SR(rsrc); S2C(IMMex(im)); F_OSZC;
              
              }
            break;
          case 0x10:
            op_semantics_32:
              {
                /** 0111 01im 0001rdst			mul	#%1, %0 */
#line 602 "rx-decode.opc"
                int im AU = op[0] & 0x03;
#line 602 "rx-decode.opc"
                int rdst AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 01im 0001rdst			mul	#%1, %0 */",
                           op[0], op[1]);
                    printf ("  im = 0x%x,", im);
                    printf ("  rdst = 0x%x\n", rdst);
                  }
                SYNTAX("mul	#%1, %0");
#line 602 "rx-decode.opc"
                ID(mul); DR(rdst); SC(IMMex(im)); F_____;
              
              }
            break;
          case 0x20:
            op_semantics_33:
              {
                /** 0111 01im 0010 rdst			and	#%1, %0 */
#line 410 "rx-decode.opc"
                int im AU = op[0] & 0x03;
#line 410 "rx-decode.opc"
                int rdst AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 01im 0010 rdst			and	#%1, %0 */",
                           op[0], op[1]);
                    printf ("  im = 0x%x,", im);
                    printf ("  rdst = 0x%x\n", rdst);
                  }
                SYNTAX("and	#%1, %0");
#line 410 "rx-decode.opc"
                ID(and); SC(IMMex(im)); DR(rdst); F__SZ_;
              
              }
            break;
          case 0x30:
            op_semantics_34:
              {
                /** 0111 01im 0011 rdst			or	#%1, %0 */
#line 428 "rx-decode.opc"
                int im AU = op[0] & 0x03;
#line 428 "rx-decode.opc"
                int rdst AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 01im 0011 rdst			or	#%1, %0 */",
                           op[0], op[1]);
                    printf ("  im = 0x%x,", im);
                    printf ("  rdst = 0x%x\n", rdst);
                  }
                SYNTAX("or	#%1, %0");
#line 428 "rx-decode.opc"
                ID(or); SC(IMMex(im)); DR(rdst); F__SZ_;
              
              }
            break;
          default: UNSUPPORTED(); break;
        }
      break;
    case 0x75:
        GETBYTE ();
        switch (op[1] & 0xff)
        {
          case 0x00:
          case 0x01:
          case 0x02:
          case 0x03:
          case 0x04:
          case 0x05:
          case 0x06:
          case 0x07:
          case 0x08:
          case 0x09:
          case 0x0a:
          case 0x0b:
          case 0x0c:
          case 0x0d:
          case 0x0e:
          case 0x0f:
            goto op_semantics_31;
            break;
          case 0x10:
          case 0x11:
          case 0x12:
          case 0x13:
          case 0x14:
          case 0x15:
          case 0x16:
          case 0x17:
          case 0x18:
          case 0x19:
          case 0x1a:
          case 0x1b:
          case 0x1c:
          case 0x1d:
          case 0x1e:
          case 0x1f:
            goto op_semantics_32;
            break;
          case 0x20:
          case 0x21:
          case 0x22:
          case 0x23:
          case 0x24:
          case 0x25:
          case 0x26:
          case 0x27:
          case 0x28:
          case 0x29:
          case 0x2a:
          case 0x2b:
          case 0x2c:
          case 0x2d:
          case 0x2e:
          case 0x2f:
            goto op_semantics_33;
            break;
          case 0x30:
          case 0x31:
          case 0x32:
          case 0x33:
          case 0x34:
          case 0x35:
          case 0x36:
          case 0x37:
          case 0x38:
          case 0x39:
          case 0x3a:
          case 0x3b:
          case 0x3c:
          case 0x3d:
          case 0x3e:
          case 0x3f:
            goto op_semantics_34;
            break;
          case 0x40:
          case 0x41:
          case 0x42:
          case 0x43:
          case 0x44:
          case 0x45:
          case 0x46:
          case 0x47:
          case 0x48:
          case 0x49:
          case 0x4a:
          case 0x4b:
          case 0x4c:
          case 0x4d:
          case 0x4e:
          case 0x4f:
              {
                /** 0111 0101 0100 rdst		mov%s	#%1, %0 */
#line 282 "rx-decode.opc"
                int rdst AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 0101 0100 rdst		mov%s	#%1, %0 */",
                           op[0], op[1]);
                    printf ("  rdst = 0x%x\n", rdst);
                  }
                SYNTAX("mov%s	#%1, %0");
#line 282 "rx-decode.opc"
                ID(mov); DR(rdst); SC(IMM (1)); F_____;
              
              }
            break;
          case 0x50:
          case 0x51:
          case 0x52:
          case 0x53:
          case 0x54:
          case 0x55:
          case 0x56:
          case 0x57:
          case 0x58:
          case 0x59:
          case 0x5a:
          case 0x5b:
          case 0x5c:
          case 0x5d:
          case 0x5e:
          case 0x5f:
              {
                /** 0111 0101 0101 rsrc			cmp	#%2, %1 */
#line 521 "rx-decode.opc"
                int rsrc AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 0101 0101 rsrc			cmp	#%2, %1 */",
                           op[0], op[1]);
                    printf ("  rsrc = 0x%x\n", rsrc);
                  }
                SYNTAX("cmp	#%2, %1");
#line 521 "rx-decode.opc"
                ID(sub); SR(rsrc); S2C(IMM(1)); F_OSZC;
              
              }
            break;
          case 0x60:
              {
                /** 0111 0101 0110 0000		int #%1 */
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 0101 0110 0000		int #%1 */",
                           op[0], op[1]);
                  }
                SYNTAX("int #%1");
#line 990 "rx-decode.opc"
                ID(int); SC(IMM(1));
              
              }
            break;
          case 0x70:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x00:
                    {
                      /** 0111 0101 0111 0000 0000 immm	mvtipl	#%1 */
#line 957 "rx-decode.opc"
                      int immm AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 0111 0101 0111 0000 0000 immm	mvtipl	#%1 */",
                                 op[0], op[1], op[2]);
                          printf ("  immm = 0x%x\n", immm);
                        }
                      SYNTAX("mvtipl	#%1");
#line 957 "rx-decode.opc"
                      ID(mvtipl); SC(immm);
                    
                    }
                  break;
                default: UNSUPPORTED(); break;
              }
            break;
          default: UNSUPPORTED(); break;
        }
      break;
    case 0x76:
        GETBYTE ();
        switch (op[1] & 0xf0)
        {
          case 0x00:
            goto op_semantics_31;
            break;
          case 0x10:
            goto op_semantics_32;
            break;
          case 0x20:
            goto op_semantics_33;
            break;
          case 0x30:
            goto op_semantics_34;
            break;
          default: UNSUPPORTED(); break;
        }
      break;
    case 0x77:
        GETBYTE ();
        switch (op[1] & 0xf0)
        {
          case 0x00:
            goto op_semantics_31;
            break;
          case 0x10:
            goto op_semantics_32;
            break;
          case 0x20:
            goto op_semantics_33;
            break;
          case 0x30:
            goto op_semantics_34;
            break;
          default: UNSUPPORTED(); break;
        }
      break;
    case 0x78:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            op_semantics_35:
              {
                /** 0111 100b ittt rdst			bset	#%1, %0 */
#line 902 "rx-decode.opc"
                int b AU = op[0] & 0x01;
#line 902 "rx-decode.opc"
                int ittt AU = (op[1] >> 4) & 0x0f;
#line 902 "rx-decode.opc"
                int rdst AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 100b ittt rdst			bset	#%1, %0 */",
                           op[0], op[1]);
                    printf ("  b = 0x%x,", b);
                    printf ("  ittt = 0x%x,", ittt);
                    printf ("  rdst = 0x%x\n", rdst);
                  }
                SYNTAX("bset	#%1, %0");
#line 902 "rx-decode.opc"
                ID(bset); BWL(LSIZE); SC(b*16+ittt); DR(rdst); F_____;
              
              
              }
            break;
        }
      break;
    case 0x79:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_35;
            break;
        }
      break;
    case 0x7a:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            op_semantics_36:
              {
                /** 0111 101b ittt rdst			bclr	#%1, %0 */
#line 914 "rx-decode.opc"
                int b AU = op[0] & 0x01;
#line 914 "rx-decode.opc"
                int ittt AU = (op[1] >> 4) & 0x0f;
#line 914 "rx-decode.opc"
                int rdst AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 101b ittt rdst			bclr	#%1, %0 */",
                           op[0], op[1]);
                    printf ("  b = 0x%x,", b);
                    printf ("  ittt = 0x%x,", ittt);
                    printf ("  rdst = 0x%x\n", rdst);
                  }
                SYNTAX("bclr	#%1, %0");
#line 914 "rx-decode.opc"
                ID(bclr); BWL(LSIZE); SC(b*16+ittt); DR(rdst); F_____;
              
              
              }
            break;
        }
      break;
    case 0x7b:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_36;
            break;
        }
      break;
    case 0x7c:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            op_semantics_37:
              {
                /** 0111 110b ittt rdst			btst	#%2, %1 */
#line 926 "rx-decode.opc"
                int b AU = op[0] & 0x01;
#line 926 "rx-decode.opc"
                int ittt AU = (op[1] >> 4) & 0x0f;
#line 926 "rx-decode.opc"
                int rdst AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 110b ittt rdst			btst	#%2, %1 */",
                           op[0], op[1]);
                    printf ("  b = 0x%x,", b);
                    printf ("  ittt = 0x%x,", ittt);
                    printf ("  rdst = 0x%x\n", rdst);
                  }
                SYNTAX("btst	#%2, %1");
#line 926 "rx-decode.opc"
                ID(btst); BWL(LSIZE); S2C(b*16+ittt); SR(rdst); F___ZC;
              
              
              }
            break;
        }
      break;
    case 0x7d:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_37;
            break;
        }
      break;
    case 0x7e:
        GETBYTE ();
        switch (op[1] & 0xf0)
        {
          case 0x00:
              {
                /** 0111 1110 0000 rdst			not	%0 */
#line 455 "rx-decode.opc"
                int rdst AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 1110 0000 rdst			not	%0 */",
                           op[0], op[1]);
                    printf ("  rdst = 0x%x\n", rdst);
                  }
                SYNTAX("not	%0");
#line 455 "rx-decode.opc"
                ID(xor); DR(rdst); SR(rdst); S2C(~0); F__SZ_;
              
              }
            break;
          case 0x10:
              {
                /** 0111 1110 0001 rdst			neg	%0 */
#line 476 "rx-decode.opc"
                int rdst AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 1110 0001 rdst			neg	%0 */",
                           op[0], op[1]);
                    printf ("  rdst = 0x%x\n", rdst);
                  }
                SYNTAX("neg	%0");
#line 476 "rx-decode.opc"
                ID(sub); DR(rdst); SC(0); S2R(rdst); F_OSZC;
              
              }
            break;
          case 0x20:
              {
                /** 0111 1110 0010 rdst			abs	%0 */
#line 558 "rx-decode.opc"
                int rdst AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 1110 0010 rdst			abs	%0 */",
                           op[0], op[1]);
                    printf ("  rdst = 0x%x\n", rdst);
                  }
                SYNTAX("abs	%0");
#line 558 "rx-decode.opc"
                ID(abs); DR(rdst); SR(rdst); F_OSZ_;
              
              }
            break;
          case 0x30:
              {
                /** 0111 1110 0011 rdst		sat	%0 */
#line 840 "rx-decode.opc"
                int rdst AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 1110 0011 rdst		sat	%0 */",
                           op[0], op[1]);
                    printf ("  rdst = 0x%x\n", rdst);
                  }
                SYNTAX("sat	%0");
#line 840 "rx-decode.opc"
                ID(sat); DR (rdst);
              
              }
            break;
          case 0x40:
              {
                /** 0111 1110 0100 rdst			rorc	%0 */
#line 700 "rx-decode.opc"
                int rdst AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 1110 0100 rdst			rorc	%0 */",
                           op[0], op[1]);
                    printf ("  rdst = 0x%x\n", rdst);
                  }
                SYNTAX("rorc	%0");
#line 700 "rx-decode.opc"
                ID(rorc); DR(rdst); F__SZC;
              
              }
            break;
          case 0x50:
              {
                /** 0111 1110 0101 rdst			rolc	%0 */
#line 697 "rx-decode.opc"
                int rdst AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 1110 0101 rdst			rolc	%0 */",
                           op[0], op[1]);
                    printf ("  rdst = 0x%x\n", rdst);
                  }
                SYNTAX("rolc	%0");
#line 697 "rx-decode.opc"
                ID(rolc); DR(rdst); F__SZC;
              
              }
            break;
          case 0x80:
          case 0x90:
          case 0xa0:
              {
                /** 0111 1110 10sz rsrc		push%s	%1 */
#line 371 "rx-decode.opc"
                int sz AU = (op[1] >> 4) & 0x03;
#line 371 "rx-decode.opc"
                int rsrc AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 1110 10sz rsrc		push%s	%1 */",
                           op[0], op[1]);
                    printf ("  sz = 0x%x,", sz);
                    printf ("  rsrc = 0x%x\n", rsrc);
                  }
                SYNTAX("push%s	%1");
#line 371 "rx-decode.opc"
                ID(mov); BWL(sz); OP(0, RX_Operand_Predec, 0, 0); SR(rsrc); F_____;
              
              }
            break;
          case 0xb0:
              {
                /** 0111 1110 1011 rdst		pop	%0 */
#line 368 "rx-decode.opc"
                int rdst AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 1110 1011 rdst		pop	%0 */",
                           op[0], op[1]);
                    printf ("  rdst = 0x%x\n", rdst);
                  }
                SYNTAX("pop	%0");
#line 368 "rx-decode.opc"
                ID(mov); OP(1, RX_Operand_Postinc, 0, 0); DR(rdst); F_____;
                
              }
            break;
          case 0xc0:
          case 0xd0:
              {
                /** 0111 1110 110 crsrc			pushc	%1 */
#line 963 "rx-decode.opc"
                int crsrc AU = op[1] & 0x1f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 1110 110 crsrc			pushc	%1 */",
                           op[0], op[1]);
                    printf ("  crsrc = 0x%x\n", crsrc);
                  }
                SYNTAX("pushc	%1");
#line 963 "rx-decode.opc"
                ID(mov); OP(0, RX_Operand_Predec, 0, 0); SR(crsrc + 16);
              
              }
            break;
          case 0xe0:
          case 0xf0:
              {
                /** 0111 1110 111 crdst			popc	%0 */
#line 960 "rx-decode.opc"
                int crdst AU = op[1] & 0x1f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 1110 111 crdst			popc	%0 */",
                           op[0], op[1]);
                    printf ("  crdst = 0x%x\n", crdst);
                  }
                SYNTAX("popc	%0");
#line 960 "rx-decode.opc"
                ID(mov); OP(1, RX_Operand_Postinc, 0, 0); DR(crdst + 16);
              
              }
            break;
          default: UNSUPPORTED(); break;
        }
      break;
    case 0x7f:
        GETBYTE ();
        switch (op[1] & 0xff)
        {
          case 0x00:
          case 0x01:
          case 0x02:
          case 0x03:
          case 0x04:
          case 0x05:
          case 0x06:
          case 0x07:
          case 0x08:
          case 0x09:
          case 0x0a:
          case 0x0b:
          case 0x0c:
          case 0x0d:
          case 0x0e:
          case 0x0f:
              {
                /** 0111 1111 0000 rsrc		jmp	%0 */
#line 750 "rx-decode.opc"
                int rsrc AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 1111 0000 rsrc		jmp	%0 */",
                           op[0], op[1]);
                    printf ("  rsrc = 0x%x\n", rsrc);
                  }
                SYNTAX("jmp	%0");
#line 750 "rx-decode.opc"
                ID(branch); DR(rsrc);
              
              }
            break;
          case 0x10:
          case 0x11:
          case 0x12:
          case 0x13:
          case 0x14:
          case 0x15:
          case 0x16:
          case 0x17:
          case 0x18:
          case 0x19:
          case 0x1a:
          case 0x1b:
          case 0x1c:
          case 0x1d:
          case 0x1e:
          case 0x1f:
              {
                /** 0111 1111 0001 rsrc		jsr	%0 */
#line 753 "rx-decode.opc"
                int rsrc AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 1111 0001 rsrc		jsr	%0 */",
                           op[0], op[1]);
                    printf ("  rsrc = 0x%x\n", rsrc);
                  }
                SYNTAX("jsr	%0");
#line 753 "rx-decode.opc"
                ID(jsr); DR(rsrc);
              
              }
            break;
          case 0x40:
          case 0x41:
          case 0x42:
          case 0x43:
          case 0x44:
          case 0x45:
          case 0x46:
          case 0x47:
          case 0x48:
          case 0x49:
          case 0x4a:
          case 0x4b:
          case 0x4c:
          case 0x4d:
          case 0x4e:
          case 0x4f:
              {
                /** 0111 1111 0100 rsrc		bra.l	%0 */
#line 746 "rx-decode.opc"
                int rsrc AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 1111 0100 rsrc		bra.l	%0 */",
                           op[0], op[1]);
                    printf ("  rsrc = 0x%x\n", rsrc);
                  }
                SYNTAX("bra.l	%0");
#line 746 "rx-decode.opc"
                ID(branchrel); DR(rsrc);
              
              
              }
            break;
          case 0x50:
          case 0x51:
          case 0x52:
          case 0x53:
          case 0x54:
          case 0x55:
          case 0x56:
          case 0x57:
          case 0x58:
          case 0x59:
          case 0x5a:
          case 0x5b:
          case 0x5c:
          case 0x5d:
          case 0x5e:
          case 0x5f:
              {
                /** 0111 1111 0101 rsrc		bsr.l	%0 */
#line 762 "rx-decode.opc"
                int rsrc AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 1111 0101 rsrc		bsr.l	%0 */",
                           op[0], op[1]);
                    printf ("  rsrc = 0x%x\n", rsrc);
                  }
                SYNTAX("bsr.l	%0");
#line 762 "rx-decode.opc"
                ID(jsrrel); DR(rsrc);
              
              }
            break;
          case 0x80:
          case 0x81:
          case 0x82:
              {
                /** 0111 1111 1000 00sz		suntil%s */
#line 786 "rx-decode.opc"
                int sz AU = op[1] & 0x03;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 1111 1000 00sz		suntil%s */",
                           op[0], op[1]);
                    printf ("  sz = 0x%x\n", sz);
                  }
                SYNTAX("suntil%s");
#line 786 "rx-decode.opc"
                ID(suntil); BWL(sz); F___ZC;
              
              }
            break;
          case 0x83:
              {
                /** 0111 1111 1000 0011		scmpu */
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 1111 1000 0011		scmpu */",
                           op[0], op[1]);
                  }
                SYNTAX("scmpu");
#line 777 "rx-decode.opc"
                ID(scmpu); F___ZC;
              
              }
            break;
          case 0x84:
          case 0x85:
          case 0x86:
              {
                /** 0111 1111 1000 01sz		swhile%s */
#line 789 "rx-decode.opc"
                int sz AU = op[1] & 0x03;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 1111 1000 01sz		swhile%s */",
                           op[0], op[1]);
                    printf ("  sz = 0x%x\n", sz);
                  }
                SYNTAX("swhile%s");
#line 789 "rx-decode.opc"
                ID(swhile); BWL(sz); F___ZC;
              
              }
            break;
          case 0x87:
              {
                /** 0111 1111 1000 0111		smovu */
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 1111 1000 0111		smovu */",
                           op[0], op[1]);
                  }
                SYNTAX("smovu");
#line 780 "rx-decode.opc"
                ID(smovu);
              
              }
            break;
          case 0x88:
          case 0x89:
          case 0x8a:
              {
                /** 0111 1111 1000 10sz		sstr%s */
#line 795 "rx-decode.opc"
                int sz AU = op[1] & 0x03;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 1111 1000 10sz		sstr%s */",
                           op[0], op[1]);
                    printf ("  sz = 0x%x\n", sz);
                  }
                SYNTAX("sstr%s");
#line 795 "rx-decode.opc"
                ID(sstr); BWL(sz);
              
              /*----------------------------------------------------------------------*/
              /* RMPA									*/
              
              }
            break;
          case 0x8b:
              {
                /** 0111 1111 1000 1011		smovb */
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 1111 1000 1011		smovb */",
                           op[0], op[1]);
                  }
                SYNTAX("smovb");
#line 783 "rx-decode.opc"
                ID(smovb);
              
              }
            break;
          case 0x8c:
          case 0x8d:
          case 0x8e:
              {
                /** 0111 1111 1000 11sz		rmpa%s */
#line 801 "rx-decode.opc"
                int sz AU = op[1] & 0x03;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 1111 1000 11sz		rmpa%s */",
                           op[0], op[1]);
                    printf ("  sz = 0x%x\n", sz);
                  }
                SYNTAX("rmpa%s");
#line 801 "rx-decode.opc"
                ID(rmpa); BWL(sz); F_OS__;
              
              /*----------------------------------------------------------------------*/
              /* HI/LO stuff								*/
              
              }
            break;
          case 0x8f:
              {
                /** 0111 1111 1000 1111		smovf */
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 1111 1000 1111		smovf */",
                           op[0], op[1]);
                  }
                SYNTAX("smovf");
#line 792 "rx-decode.opc"
                ID(smovf);
              
              }
            break;
          case 0x93:
              {
                /** 0111 1111 1001 0011		satr */
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 1111 1001 0011		satr */",
                           op[0], op[1]);
                  }
                SYNTAX("satr");
#line 843 "rx-decode.opc"
                ID(satr);
              
              /*----------------------------------------------------------------------*/
              /* FLOAT								*/
              
              }
            break;
          case 0x94:
              {
                /** 0111 1111 1001 0100		rtfi */
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 1111 1001 0100		rtfi */",
                           op[0], op[1]);
                  }
                SYNTAX("rtfi");
#line 978 "rx-decode.opc"
                ID(rtfi);
              
              }
            break;
          case 0x95:
              {
                /** 0111 1111 1001 0101		rte */
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 1111 1001 0101		rte */",
                           op[0], op[1]);
                  }
                SYNTAX("rte");
#line 981 "rx-decode.opc"
                ID(rte);
              
              }
            break;
          case 0x96:
              {
                /** 0111 1111 1001 0110		wait */
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 1111 1001 0110		wait */",
                           op[0], op[1]);
                  }
                SYNTAX("wait");
#line 993 "rx-decode.opc"
                ID(wait);
              
              /*----------------------------------------------------------------------*/
              /* SCcnd								*/
              
              }
            break;
          case 0xa0:
          case 0xa1:
          case 0xa2:
          case 0xa3:
          case 0xa4:
          case 0xa5:
          case 0xa6:
          case 0xa7:
          case 0xa8:
          case 0xa9:
          case 0xaa:
          case 0xab:
          case 0xac:
          case 0xad:
          case 0xae:
          case 0xaf:
              {
                /** 0111 1111 1010 rdst			setpsw	%0 */
#line 954 "rx-decode.opc"
                int rdst AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 1111 1010 rdst			setpsw	%0 */",
                           op[0], op[1]);
                    printf ("  rdst = 0x%x\n", rdst);
                  }
                SYNTAX("setpsw	%0");
#line 954 "rx-decode.opc"
                ID(setpsw); DF(rdst);
              
              }
            break;
          case 0xb0:
          case 0xb1:
          case 0xb2:
          case 0xb3:
          case 0xb4:
          case 0xb5:
          case 0xb6:
          case 0xb7:
          case 0xb8:
          case 0xb9:
          case 0xba:
          case 0xbb:
          case 0xbc:
          case 0xbd:
          case 0xbe:
          case 0xbf:
              {
                /** 0111 1111 1011 rdst			clrpsw	%0 */
#line 951 "rx-decode.opc"
                int rdst AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 0111 1111 1011 rdst			clrpsw	%0 */",
                           op[0], op[1]);
                    printf ("  rdst = 0x%x\n", rdst);
                  }
                SYNTAX("clrpsw	%0");
#line 951 "rx-decode.opc"
                ID(clrpsw); DF(rdst);
              
              }
            break;
          default: UNSUPPORTED(); break;
        }
      break;
    case 0x80:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            op_semantics_38:
              {
                /** 10sz 0dsp a dst b src	mov%s	%1, %0 */
#line 329 "rx-decode.opc"
                int sz AU = (op[0] >> 4) & 0x03;
#line 329 "rx-decode.opc"
                int dsp AU = op[0] & 0x07;
#line 329 "rx-decode.opc"
                int a AU = (op[1] >> 7) & 0x01;
#line 329 "rx-decode.opc"
                int dst AU = (op[1] >> 4) & 0x07;
#line 329 "rx-decode.opc"
                int b AU = (op[1] >> 3) & 0x01;
#line 329 "rx-decode.opc"
                int src AU = op[1] & 0x07;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 10sz 0dsp a dst b src	mov%s	%1, %0 */",
                           op[0], op[1]);
                    printf ("  sz = 0x%x,", sz);
                    printf ("  dsp = 0x%x,", dsp);
                    printf ("  a = 0x%x,", a);
                    printf ("  dst = 0x%x,", dst);
                    printf ("  b = 0x%x,", b);
                    printf ("  src = 0x%x\n", src);
                  }
                SYNTAX("mov%s	%1, %0");
#line 329 "rx-decode.opc"
                ID(mov); sBWL(sz); DIs(dst, dsp*4+a*2+b, sz); SR(src); F_____;
              
              }
            break;
        }
      break;
    case 0x81:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_38;
            break;
        }
      break;
    case 0x82:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_38;
            break;
        }
      break;
    case 0x83:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_38;
            break;
        }
      break;
    case 0x84:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_38;
            break;
        }
      break;
    case 0x85:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_38;
            break;
        }
      break;
    case 0x86:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_38;
            break;
        }
      break;
    case 0x87:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_38;
            break;
        }
      break;
    case 0x88:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            op_semantics_39:
              {
                /** 10sz 1dsp a src b dst	mov%s	%1, %0 */
#line 326 "rx-decode.opc"
                int sz AU = (op[0] >> 4) & 0x03;
#line 326 "rx-decode.opc"
                int dsp AU = op[0] & 0x07;
#line 326 "rx-decode.opc"
                int a AU = (op[1] >> 7) & 0x01;
#line 326 "rx-decode.opc"
                int src AU = (op[1] >> 4) & 0x07;
#line 326 "rx-decode.opc"
                int b AU = (op[1] >> 3) & 0x01;
#line 326 "rx-decode.opc"
                int dst AU = op[1] & 0x07;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 10sz 1dsp a src b dst	mov%s	%1, %0 */",
                           op[0], op[1]);
                    printf ("  sz = 0x%x,", sz);
                    printf ("  dsp = 0x%x,", dsp);
                    printf ("  a = 0x%x,", a);
                    printf ("  src = 0x%x,", src);
                    printf ("  b = 0x%x,", b);
                    printf ("  dst = 0x%x\n", dst);
                  }
                SYNTAX("mov%s	%1, %0");
#line 326 "rx-decode.opc"
                ID(mov); sBWL(sz); DR(dst); SIs(src, dsp*4+a*2+b, sz); F_____;
              
              }
            break;
        }
      break;
    case 0x89:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_39;
            break;
        }
      break;
    case 0x8a:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_39;
            break;
        }
      break;
    case 0x8b:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_39;
            break;
        }
      break;
    case 0x8c:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_39;
            break;
        }
      break;
    case 0x8d:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_39;
            break;
        }
      break;
    case 0x8e:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_39;
            break;
        }
      break;
    case 0x8f:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_39;
            break;
        }
      break;
    case 0x90:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_38;
            break;
        }
      break;
    case 0x91:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_38;
            break;
        }
      break;
    case 0x92:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_38;
            break;
        }
      break;
    case 0x93:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_38;
            break;
        }
      break;
    case 0x94:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_38;
            break;
        }
      break;
    case 0x95:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_38;
            break;
        }
      break;
    case 0x96:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_38;
            break;
        }
      break;
    case 0x97:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_38;
            break;
        }
      break;
    case 0x98:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_39;
            break;
        }
      break;
    case 0x99:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_39;
            break;
        }
      break;
    case 0x9a:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_39;
            break;
        }
      break;
    case 0x9b:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_39;
            break;
        }
      break;
    case 0x9c:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_39;
            break;
        }
      break;
    case 0x9d:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_39;
            break;
        }
      break;
    case 0x9e:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_39;
            break;
        }
      break;
    case 0x9f:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_39;
            break;
        }
      break;
    case 0xa0:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_38;
            break;
        }
      break;
    case 0xa1:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_38;
            break;
        }
      break;
    case 0xa2:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_38;
            break;
        }
      break;
    case 0xa3:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_38;
            break;
        }
      break;
    case 0xa4:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_38;
            break;
        }
      break;
    case 0xa5:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_38;
            break;
        }
      break;
    case 0xa6:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_38;
            break;
        }
      break;
    case 0xa7:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_38;
            break;
        }
      break;
    case 0xa8:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_39;
            break;
        }
      break;
    case 0xa9:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_39;
            break;
        }
      break;
    case 0xaa:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_39;
            break;
        }
      break;
    case 0xab:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_39;
            break;
        }
      break;
    case 0xac:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_39;
            break;
        }
      break;
    case 0xad:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_39;
            break;
        }
      break;
    case 0xae:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_39;
            break;
        }
      break;
    case 0xaf:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_39;
            break;
        }
      break;
    case 0xb0:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            op_semantics_40:
              {
                /** 1011 w dsp a src b dst	movu%s	%1, %0 */
#line 349 "rx-decode.opc"
                int w AU = (op[0] >> 3) & 0x01;
#line 349 "rx-decode.opc"
                int dsp AU = op[0] & 0x07;
#line 349 "rx-decode.opc"
                int a AU = (op[1] >> 7) & 0x01;
#line 349 "rx-decode.opc"
                int src AU = (op[1] >> 4) & 0x07;
#line 349 "rx-decode.opc"
                int b AU = (op[1] >> 3) & 0x01;
#line 349 "rx-decode.opc"
                int dst AU = op[1] & 0x07;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 1011 w dsp a src b dst	movu%s	%1, %0 */",
                           op[0], op[1]);
                    printf ("  w = 0x%x,", w);
                    printf ("  dsp = 0x%x,", dsp);
                    printf ("  a = 0x%x,", a);
                    printf ("  src = 0x%x,", src);
                    printf ("  b = 0x%x,", b);
                    printf ("  dst = 0x%x\n", dst);
                  }
                SYNTAX("movu%s	%1, %0");
#line 349 "rx-decode.opc"
                ID(mov); uBWL(w); DR(dst); SIs(src, dsp*4+a*2+b, w); F_____;
              
              }
            break;
        }
      break;
    case 0xb1:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_40;
            break;
        }
      break;
    case 0xb2:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_40;
            break;
        }
      break;
    case 0xb3:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_40;
            break;
        }
      break;
    case 0xb4:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_40;
            break;
        }
      break;
    case 0xb5:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_40;
            break;
        }
      break;
    case 0xb6:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_40;
            break;
        }
      break;
    case 0xb7:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_40;
            break;
        }
      break;
    case 0xb8:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_40;
            break;
        }
      break;
    case 0xb9:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_40;
            break;
        }
      break;
    case 0xba:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_40;
            break;
        }
      break;
    case 0xbb:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_40;
            break;
        }
      break;
    case 0xbc:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_40;
            break;
        }
      break;
    case 0xbd:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_40;
            break;
        }
      break;
    case 0xbe:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_40;
            break;
        }
      break;
    case 0xbf:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_40;
            break;
        }
      break;
    case 0xc0:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            op_semantics_41:
              {
                /** 11sz sd ss rsrc rdst	mov%s	%1, %0 */
#line 307 "rx-decode.opc"
                int sz AU = (op[0] >> 4) & 0x03;
#line 307 "rx-decode.opc"
                int sd AU = (op[0] >> 2) & 0x03;
#line 307 "rx-decode.opc"
                int ss AU = op[0] & 0x03;
#line 307 "rx-decode.opc"
                int rsrc AU = (op[1] >> 4) & 0x0f;
#line 307 "rx-decode.opc"
                int rdst AU = op[1] & 0x0f;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 11sz sd ss rsrc rdst	mov%s	%1, %0 */",
                           op[0], op[1]);
                    printf ("  sz = 0x%x,", sz);
                    printf ("  sd = 0x%x,", sd);
                    printf ("  ss = 0x%x,", ss);
                    printf ("  rsrc = 0x%x,", rsrc);
                    printf ("  rdst = 0x%x\n", rdst);
                  }
                SYNTAX("mov%s	%1, %0");
#line 307 "rx-decode.opc"
                if (sd == 3 && ss == 3 && sz == 2 && rsrc == 0 && rdst == 0)
                  {
                    ID(nop2);
                    rx->syntax = "nop";
                  }
                else
                  {
                    ID(mov); sBWL(sz); F_____;
                    if ((ss == 3) && (sd != 3))
              	{
              	  SD(ss, rdst, sz); DD(sd, rsrc, sz);
              	}
                    else
              	{
              	  SD(ss, rsrc, sz); DD(sd, rdst, sz);
              	}
                  }
              
              }
            break;
        }
      break;
    case 0xc1:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xc2:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xc3:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xc4:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xc5:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xc6:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xc7:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xc8:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xc9:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xca:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xcb:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xcc:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xcd:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xce:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xcf:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xd0:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xd1:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xd2:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xd3:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xd4:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xd5:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xd6:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xd7:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xd8:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xd9:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xda:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xdb:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xdc:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xdd:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xde:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xdf:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xe0:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xe1:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xe2:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xe3:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xe4:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xe5:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xe6:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xe7:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xe8:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xe9:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xea:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xeb:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xec:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xed:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xee:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xef:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_41;
            break;
        }
      break;
    case 0xf0:
        GETBYTE ();
        switch (op[1] & 0x08)
        {
          case 0x00:
            op_semantics_42:
              {
                /** 1111 00sd rdst 0bit			bset	#%1, %0%S0 */
#line 894 "rx-decode.opc"
                int sd AU = op[0] & 0x03;
#line 894 "rx-decode.opc"
                int rdst AU = (op[1] >> 4) & 0x0f;
#line 894 "rx-decode.opc"
                int bit AU = op[1] & 0x07;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 1111 00sd rdst 0bit			bset	#%1, %0%S0 */",
                           op[0], op[1]);
                    printf ("  sd = 0x%x,", sd);
                    printf ("  rdst = 0x%x,", rdst);
                    printf ("  bit = 0x%x\n", bit);
                  }
                SYNTAX("bset	#%1, %0%S0");
#line 894 "rx-decode.opc"
                ID(bset); BWL(BSIZE); SC(bit); DD(sd, rdst, BSIZE); F_____;
              
              }
            break;
          case 0x08:
            op_semantics_43:
              {
                /** 1111 00sd rdst 1bit			bclr	#%1, %0%S0 */
#line 906 "rx-decode.opc"
                int sd AU = op[0] & 0x03;
#line 906 "rx-decode.opc"
                int rdst AU = (op[1] >> 4) & 0x0f;
#line 906 "rx-decode.opc"
                int bit AU = op[1] & 0x07;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 1111 00sd rdst 1bit			bclr	#%1, %0%S0 */",
                           op[0], op[1]);
                    printf ("  sd = 0x%x,", sd);
                    printf ("  rdst = 0x%x,", rdst);
                    printf ("  bit = 0x%x\n", bit);
                  }
                SYNTAX("bclr	#%1, %0%S0");
#line 906 "rx-decode.opc"
                ID(bclr); BWL(BSIZE); SC(bit); DD(sd, rdst, BSIZE); F_____;
              
              }
            break;
        }
      break;
    case 0xf1:
        GETBYTE ();
        switch (op[1] & 0x08)
        {
          case 0x00:
            goto op_semantics_42;
            break;
          case 0x08:
            goto op_semantics_43;
            break;
        }
      break;
    case 0xf2:
        GETBYTE ();
        switch (op[1] & 0x08)
        {
          case 0x00:
            goto op_semantics_42;
            break;
          case 0x08:
            goto op_semantics_43;
            break;
        }
      break;
    case 0xf3:
        GETBYTE ();
        switch (op[1] & 0x08)
        {
          case 0x00:
            goto op_semantics_42;
            break;
          case 0x08:
            goto op_semantics_43;
            break;
        }
      break;
    case 0xf4:
        GETBYTE ();
        switch (op[1] & 0x0c)
        {
          case 0x00:
          case 0x04:
            op_semantics_44:
              {
                /** 1111 01sd rdst 0bit			btst	#%2, %1%S1 */
#line 918 "rx-decode.opc"
                int sd AU = op[0] & 0x03;
#line 918 "rx-decode.opc"
                int rdst AU = (op[1] >> 4) & 0x0f;
#line 918 "rx-decode.opc"
                int bit AU = op[1] & 0x07;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 1111 01sd rdst 0bit			btst	#%2, %1%S1 */",
                           op[0], op[1]);
                    printf ("  sd = 0x%x,", sd);
                    printf ("  rdst = 0x%x,", rdst);
                    printf ("  bit = 0x%x\n", bit);
                  }
                SYNTAX("btst	#%2, %1%S1");
#line 918 "rx-decode.opc"
                ID(btst); BWL(BSIZE); S2C(bit); SD(sd, rdst, BSIZE); F___ZC;
              
              }
            break;
          case 0x08:
            op_semantics_45:
              {
                /** 1111 01ss rsrc 10sz		push%s	%1 */
#line 374 "rx-decode.opc"
                int ss AU = op[0] & 0x03;
#line 374 "rx-decode.opc"
                int rsrc AU = (op[1] >> 4) & 0x0f;
#line 374 "rx-decode.opc"
                int sz AU = op[1] & 0x03;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 1111 01ss rsrc 10sz		push%s	%1 */",
                           op[0], op[1]);
                    printf ("  ss = 0x%x,", ss);
                    printf ("  rsrc = 0x%x,", rsrc);
                    printf ("  sz = 0x%x\n", sz);
                  }
                SYNTAX("push%s	%1");
#line 374 "rx-decode.opc"
                ID(mov); BWL(sz); OP(0, RX_Operand_Predec, 0, 0); SD(ss, rsrc, sz); F_____;
              
              /*----------------------------------------------------------------------*/
              /* XCHG									*/
              
              }
            break;
          default: UNSUPPORTED(); break;
        }
      break;
    case 0xf5:
        GETBYTE ();
        switch (op[1] & 0x0c)
        {
          case 0x00:
          case 0x04:
            goto op_semantics_44;
            break;
          case 0x08:
            goto op_semantics_45;
            break;
          default: UNSUPPORTED(); break;
        }
      break;
    case 0xf6:
        GETBYTE ();
        switch (op[1] & 0x0c)
        {
          case 0x00:
          case 0x04:
            goto op_semantics_44;
            break;
          case 0x08:
            goto op_semantics_45;
            break;
          default: UNSUPPORTED(); break;
        }
      break;
    case 0xf7:
        GETBYTE ();
        switch (op[1] & 0x0c)
        {
          case 0x00:
          case 0x04:
            goto op_semantics_44;
            break;
          case 0x08:
            goto op_semantics_45;
            break;
          default: UNSUPPORTED(); break;
        }
      break;
    case 0xf8:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            op_semantics_46:
              {
                /** 1111 10sd rdst im sz	mov%s	#%1, %0 */
#line 285 "rx-decode.opc"
                int sd AU = op[0] & 0x03;
#line 285 "rx-decode.opc"
                int rdst AU = (op[1] >> 4) & 0x0f;
#line 285 "rx-decode.opc"
                int im AU = (op[1] >> 2) & 0x03;
#line 285 "rx-decode.opc"
                int sz AU = op[1] & 0x03;
                if (trace)
                  {
                    printf ("\033[33m%s\033[0m  %02x %02x\n",
                           "/** 1111 10sd rdst im sz	mov%s	#%1, %0 */",
                           op[0], op[1]);
                    printf ("  sd = 0x%x,", sd);
                    printf ("  rdst = 0x%x,", rdst);
                    printf ("  im = 0x%x,", im);
                    printf ("  sz = 0x%x\n", sz);
                  }
                SYNTAX("mov%s	#%1, %0");
#line 285 "rx-decode.opc"
                ID(mov); DD(sd, rdst, sz);
                if ((im == 1 && sz == 0)
                    || (im == 2 && sz == 1)
                    || (im == 0 && sz == 2))
                  {
                    BWL (sz);
                    SC(IMM(im));
                  }
                else
                  {
                    sBWL (sz);
                    SC(IMMex(im));
                  }
                 F_____;
              
              }
            break;
        }
      break;
    case 0xf9:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_46;
            break;
        }
      break;
    case 0xfa:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_46;
            break;
        }
      break;
    case 0xfb:
        GETBYTE ();
        switch (op[1] & 0x00)
        {
          case 0x00:
            goto op_semantics_46;
            break;
        }
      break;
    case 0xfc:
        GETBYTE ();
        switch (op[1] & 0xff)
        {
          case 0x03:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                    {
                      /** 1111 1100 0000 0011 rsrc rdst	sbb	%1, %0 */
#line 548 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 548 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1100 0000 0011 rsrc rdst	sbb	%1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("sbb	%1, %0");
#line 548 "rx-decode.opc"
                      ID(sbb); SR (rsrc); DR(rdst); F_OSZC;
                    
                      /* FIXME: only supports .L */
                    }
                  break;
              }
            break;
          case 0x07:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                    {
                      /** 1111 1100 0000 0111 rsrc rdst	neg	%2, %0 */
#line 479 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 479 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1100 0000 0111 rsrc rdst	neg	%2, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("neg	%2, %0");
#line 479 "rx-decode.opc"
                      ID(sub); DR(rdst); SC(0); S2R(rsrc); F_OSZC;
                    
                    /*----------------------------------------------------------------------*/
                    /* ADC									*/
                    
                    }
                  break;
              }
            break;
          case 0x0b:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                    {
                      /** 1111 1100 0000 1011 rsrc rdst	adc	%1, %0 */
#line 488 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 488 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1100 0000 1011 rsrc rdst	adc	%1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("adc	%1, %0");
#line 488 "rx-decode.opc"
                      ID(adc); SR(rsrc); DR(rdst); F_OSZC;
                    
                    }
                  break;
              }
            break;
          case 0x0f:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                    {
                      /** 1111 1100 0000 1111 rsrc rdst	abs	%1, %0 */
#line 561 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 561 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1100 0000 1111 rsrc rdst	abs	%1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("abs	%1, %0");
#line 561 "rx-decode.opc"
                      ID(abs); DR(rdst); SR(rsrc); F_OSZ_;
                    
                    /*----------------------------------------------------------------------*/
                    /* MAX									*/
                    
                    }
                  break;
              }
            break;
          case 0x10:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_47:
                    {
                      /** 1111 1100 0001 00ss rsrc rdst	max	%1%S1, %0 */
#line 570 "rx-decode.opc"
                      int ss AU = op[1] & 0x03;
#line 570 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 570 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1100 0001 00ss rsrc rdst	max	%1%S1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  ss = 0x%x,", ss);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("max	%1%S1, %0");
#line 570 "rx-decode.opc"
                      if (ss == 3 && rsrc == 0 && rdst == 0)
                        {
                          ID(nop3);
                          rx->syntax = "nop";
                        }
                      else
                        {
                          ID(max); SP(ss, rsrc); DR(rdst);
                        }
                    
                    }
                  break;
              }
            break;
          case 0x11:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_47;
                  break;
              }
            break;
          case 0x12:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_47;
                  break;
              }
            break;
          case 0x13:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_47;
                  break;
              }
            break;
          case 0x14:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_48:
                    {
                      /** 1111 1100 0001 01ss rsrc rdst	min	%1%S1, %0 */
#line 590 "rx-decode.opc"
                      int ss AU = op[1] & 0x03;
#line 590 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 590 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1100 0001 01ss rsrc rdst	min	%1%S1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  ss = 0x%x,", ss);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("min	%1%S1, %0");
#line 590 "rx-decode.opc"
                      ID(min); SP(ss, rsrc); DR(rdst);
                    
                    }
                  break;
              }
            break;
          case 0x15:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_48;
                  break;
              }
            break;
          case 0x16:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_48;
                  break;
              }
            break;
          case 0x17:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_48;
                  break;
              }
            break;
          case 0x18:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_49:
                    {
                      /** 1111 1100 0001 10ss rsrc rdst	emul	%1%S1, %0 */
#line 620 "rx-decode.opc"
                      int ss AU = op[1] & 0x03;
#line 620 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 620 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1100 0001 10ss rsrc rdst	emul	%1%S1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  ss = 0x%x,", ss);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("emul	%1%S1, %0");
#line 620 "rx-decode.opc"
                      ID(emul); SP(ss, rsrc); DR(rdst);
                    
                    }
                  break;
              }
            break;
          case 0x19:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_49;
                  break;
              }
            break;
          case 0x1a:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_49;
                  break;
              }
            break;
          case 0x1b:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_49;
                  break;
              }
            break;
          case 0x1c:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_50:
                    {
                      /** 1111 1100 0001 11ss rsrc rdst	emulu	%1%S1, %0 */
#line 632 "rx-decode.opc"
                      int ss AU = op[1] & 0x03;
#line 632 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 632 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1100 0001 11ss rsrc rdst	emulu	%1%S1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  ss = 0x%x,", ss);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("emulu	%1%S1, %0");
#line 632 "rx-decode.opc"
                      ID(emulu); SP(ss, rsrc); DR(rdst);
                    
                    }
                  break;
              }
            break;
          case 0x1d:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_50;
                  break;
              }
            break;
          case 0x1e:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_50;
                  break;
              }
            break;
          case 0x1f:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_50;
                  break;
              }
            break;
          case 0x20:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_51:
                    {
                      /** 1111 1100 0010 00ss rsrc rdst	div	%1%S1, %0 */
#line 644 "rx-decode.opc"
                      int ss AU = op[1] & 0x03;
#line 644 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 644 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1100 0010 00ss rsrc rdst	div	%1%S1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  ss = 0x%x,", ss);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("div	%1%S1, %0");
#line 644 "rx-decode.opc"
                      ID(div); SP(ss, rsrc); DR(rdst); F_O___;
                    
                    }
                  break;
              }
            break;
          case 0x21:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_51;
                  break;
              }
            break;
          case 0x22:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_51;
                  break;
              }
            break;
          case 0x23:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_51;
                  break;
              }
            break;
          case 0x24:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_52:
                    {
                      /** 1111 1100 0010 01ss rsrc rdst	divu	%1%S1, %0 */
#line 656 "rx-decode.opc"
                      int ss AU = op[1] & 0x03;
#line 656 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 656 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1100 0010 01ss rsrc rdst	divu	%1%S1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  ss = 0x%x,", ss);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("divu	%1%S1, %0");
#line 656 "rx-decode.opc"
                      ID(divu); SP(ss, rsrc); DR(rdst); F_O___;
                    
                    }
                  break;
              }
            break;
          case 0x25:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_52;
                  break;
              }
            break;
          case 0x26:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_52;
                  break;
              }
            break;
          case 0x27:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_52;
                  break;
              }
            break;
          case 0x30:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_53:
                    {
                      /** 1111 1100 0011 00ss rsrc rdst	tst	%1%S1, %2 */
#line 467 "rx-decode.opc"
                      int ss AU = op[1] & 0x03;
#line 467 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 467 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1100 0011 00ss rsrc rdst	tst	%1%S1, %2 */",
                                 op[0], op[1], op[2]);
                          printf ("  ss = 0x%x,", ss);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("tst	%1%S1, %2");
#line 467 "rx-decode.opc"
                      ID(and); SP(ss, rsrc); S2R(rdst); F__SZ_;
                    
                    }
                  break;
              }
            break;
          case 0x31:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_53;
                  break;
              }
            break;
          case 0x32:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_53;
                  break;
              }
            break;
          case 0x33:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_53;
                  break;
              }
            break;
          case 0x34:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_54:
                    {
                      /** 1111 1100 0011 01ss rsrc rdst	xor	%1%S1, %0 */
#line 446 "rx-decode.opc"
                      int ss AU = op[1] & 0x03;
#line 446 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 446 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1100 0011 01ss rsrc rdst	xor	%1%S1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  ss = 0x%x,", ss);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("xor	%1%S1, %0");
#line 446 "rx-decode.opc"
                      ID(xor); SP(ss, rsrc); DR(rdst); F__SZ_;
                    
                    }
                  break;
              }
            break;
          case 0x35:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_54;
                  break;
              }
            break;
          case 0x36:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_54;
                  break;
              }
            break;
          case 0x37:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_54;
                  break;
              }
            break;
          case 0x3b:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                    {
                      /** 1111 1100 0011 1011 rsrc rdst	not	%1, %0 */
#line 458 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 458 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1100 0011 1011 rsrc rdst	not	%1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("not	%1, %0");
#line 458 "rx-decode.opc"
                      ID(xor); DR(rdst); SR(rsrc); S2C(~0); F__SZ_;
                    
                    /*----------------------------------------------------------------------*/
                    /* TST									*/
                    
                    }
                  break;
              }
            break;
          case 0x40:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_55:
                    {
                      /** 1111 1100 0100 00ss rsrc rdst	xchg	%1%S1, %0 */
#line 380 "rx-decode.opc"
                      int ss AU = op[1] & 0x03;
#line 380 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 380 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1100 0100 00ss rsrc rdst	xchg	%1%S1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  ss = 0x%x,", ss);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("xchg	%1%S1, %0");
#line 380 "rx-decode.opc"
                      ID(xchg); DR(rdst); SP(ss, rsrc);
                    
                    }
                  break;
              }
            break;
          case 0x41:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_55;
                  break;
              }
            break;
          case 0x42:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_55;
                  break;
              }
            break;
          case 0x43:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_55;
                  break;
              }
            break;
          case 0x44:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_56:
                    {
                      /** 1111 1100 0100 01sd rsrc rdst	itof	%1%S1, %0 */
#line 885 "rx-decode.opc"
                      int sd AU = op[1] & 0x03;
#line 885 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 885 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1100 0100 01sd rsrc rdst	itof	%1%S1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  sd = 0x%x,", sd);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("itof	%1%S1, %0");
#line 885 "rx-decode.opc"
                      ID(itof); DR (rdst); SP(sd, rsrc); F__SZ_;
                    
                    }
                  break;
              }
            break;
          case 0x45:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_56;
                  break;
              }
            break;
          case 0x46:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_56;
                  break;
              }
            break;
          case 0x47:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_56;
                  break;
              }
            break;
          case 0x60:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_57:
                    {
                      /** 1111 1100 0110 00sd rdst rsrc	bset	%1, %0%S0 */
#line 897 "rx-decode.opc"
                      int sd AU = op[1] & 0x03;
#line 897 "rx-decode.opc"
                      int rdst AU = (op[2] >> 4) & 0x0f;
#line 897 "rx-decode.opc"
                      int rsrc AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1100 0110 00sd rdst rsrc	bset	%1, %0%S0 */",
                                 op[0], op[1], op[2]);
                          printf ("  sd = 0x%x,", sd);
                          printf ("  rdst = 0x%x,", rdst);
                          printf ("  rsrc = 0x%x\n", rsrc);
                        }
                      SYNTAX("bset	%1, %0%S0");
#line 897 "rx-decode.opc"
                      ID(bset); BWL(BSIZE); SR(rsrc); DD(sd, rdst, BSIZE); F_____;
                      if (sd == 3) /* bset reg,reg */
                        BWL(LSIZE);
                    
                    }
                  break;
              }
            break;
          case 0x61:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_57;
                  break;
              }
            break;
          case 0x62:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_57;
                  break;
              }
            break;
          case 0x63:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_57;
                  break;
              }
            break;
          case 0x64:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_58:
                    {
                      /** 1111 1100 0110 01sd rdst rsrc	bclr	%1, %0%S0 */
#line 909 "rx-decode.opc"
                      int sd AU = op[1] & 0x03;
#line 909 "rx-decode.opc"
                      int rdst AU = (op[2] >> 4) & 0x0f;
#line 909 "rx-decode.opc"
                      int rsrc AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1100 0110 01sd rdst rsrc	bclr	%1, %0%S0 */",
                                 op[0], op[1], op[2]);
                          printf ("  sd = 0x%x,", sd);
                          printf ("  rdst = 0x%x,", rdst);
                          printf ("  rsrc = 0x%x\n", rsrc);
                        }
                      SYNTAX("bclr	%1, %0%S0");
#line 909 "rx-decode.opc"
                      ID(bclr); BWL(BSIZE); SR(rsrc); DD(sd, rdst, BSIZE); F_____;
                      if (sd == 3) /* bset reg,reg */
                        BWL(LSIZE);
                    
                    }
                  break;
              }
            break;
          case 0x65:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_58;
                  break;
              }
            break;
          case 0x66:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_58;
                  break;
              }
            break;
          case 0x67:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_58;
                  break;
              }
            break;
          case 0x68:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_59:
                    {
                      /** 1111 1100 0110 10sd rdst rsrc	btst	%2, %1%S1 */
#line 921 "rx-decode.opc"
                      int sd AU = op[1] & 0x03;
#line 921 "rx-decode.opc"
                      int rdst AU = (op[2] >> 4) & 0x0f;
#line 921 "rx-decode.opc"
                      int rsrc AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1100 0110 10sd rdst rsrc	btst	%2, %1%S1 */",
                                 op[0], op[1], op[2]);
                          printf ("  sd = 0x%x,", sd);
                          printf ("  rdst = 0x%x,", rdst);
                          printf ("  rsrc = 0x%x\n", rsrc);
                        }
                      SYNTAX("btst	%2, %1%S1");
#line 921 "rx-decode.opc"
                      ID(btst); BWL(BSIZE); S2R(rsrc); SD(sd, rdst, BSIZE); F___ZC;
                      if (sd == 3) /* bset reg,reg */
                        BWL(LSIZE);
                    
                    }
                  break;
              }
            break;
          case 0x69:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_59;
                  break;
              }
            break;
          case 0x6a:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_59;
                  break;
              }
            break;
          case 0x6b:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_59;
                  break;
              }
            break;
          case 0x6c:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_60:
                    {
                      /** 1111 1100 0110 11sd rdst rsrc	bnot	%1, %0%S0 */
#line 933 "rx-decode.opc"
                      int sd AU = op[1] & 0x03;
#line 933 "rx-decode.opc"
                      int rdst AU = (op[2] >> 4) & 0x0f;
#line 933 "rx-decode.opc"
                      int rsrc AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1100 0110 11sd rdst rsrc	bnot	%1, %0%S0 */",
                                 op[0], op[1], op[2]);
                          printf ("  sd = 0x%x,", sd);
                          printf ("  rdst = 0x%x,", rdst);
                          printf ("  rsrc = 0x%x\n", rsrc);
                        }
                      SYNTAX("bnot	%1, %0%S0");
#line 933 "rx-decode.opc"
                      ID(bnot); BWL(BSIZE); SR(rsrc); DD(sd, rdst, BSIZE);
                      if (sd == 3) /* bset reg,reg */
                        BWL(LSIZE);
                    
                    }
                  break;
              }
            break;
          case 0x6d:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_60;
                  break;
              }
            break;
          case 0x6e:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_60;
                  break;
              }
            break;
          case 0x6f:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_60;
                  break;
              }
            break;
          case 0x80:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_61:
                    {
                      /** 1111 1100 1000 00sd rsrc rdst	fsub	%1%S1, %0 */
#line 864 "rx-decode.opc"
                      int sd AU = op[1] & 0x03;
#line 864 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 864 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1100 1000 00sd rsrc rdst	fsub	%1%S1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  sd = 0x%x,", sd);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("fsub	%1%S1, %0");
#line 864 "rx-decode.opc"
                      ID(fsub); DR(rdst); SD(sd, rsrc, LSIZE); F__SZ_;
                    
                    }
                  break;
              }
            break;
          case 0x81:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_61;
                  break;
              }
            break;
          case 0x82:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_61;
                  break;
              }
            break;
          case 0x83:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_61;
                  break;
              }
            break;
          case 0x84:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_62:
                    {
                      /** 1111 1100 1000 01sd rsrc rdst	fcmp	%1%S1, %0 */
#line 858 "rx-decode.opc"
                      int sd AU = op[1] & 0x03;
#line 858 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 858 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1100 1000 01sd rsrc rdst	fcmp	%1%S1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  sd = 0x%x,", sd);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("fcmp	%1%S1, %0");
#line 858 "rx-decode.opc"
                      ID(fcmp); DR(rdst); SD(sd, rsrc, LSIZE); F_OSZ_;
                    
                    }
                  break;
              }
            break;
          case 0x85:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_62;
                  break;
              }
            break;
          case 0x86:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_62;
                  break;
              }
            break;
          case 0x87:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_62;
                  break;
              }
            break;
          case 0x88:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_63:
                    {
                      /** 1111 1100 1000 10sd rsrc rdst	fadd	%1%S1, %0 */
#line 852 "rx-decode.opc"
                      int sd AU = op[1] & 0x03;
#line 852 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 852 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1100 1000 10sd rsrc rdst	fadd	%1%S1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  sd = 0x%x,", sd);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("fadd	%1%S1, %0");
#line 852 "rx-decode.opc"
                      ID(fadd); DR(rdst); SD(sd, rsrc, LSIZE); F__SZ_;
                    
                    }
                  break;
              }
            break;
          case 0x89:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_63;
                  break;
              }
            break;
          case 0x8a:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_63;
                  break;
              }
            break;
          case 0x8b:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_63;
                  break;
              }
            break;
          case 0x8c:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_64:
                    {
                      /** 1111 1100 1000 11sd rsrc rdst	fmul	%1%S1, %0 */
#line 873 "rx-decode.opc"
                      int sd AU = op[1] & 0x03;
#line 873 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 873 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1100 1000 11sd rsrc rdst	fmul	%1%S1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  sd = 0x%x,", sd);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("fmul	%1%S1, %0");
#line 873 "rx-decode.opc"
                      ID(fmul); DR(rdst); SD(sd, rsrc, LSIZE); F__SZ_;
                    
                    }
                  break;
              }
            break;
          case 0x8d:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_64;
                  break;
              }
            break;
          case 0x8e:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_64;
                  break;
              }
            break;
          case 0x8f:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_64;
                  break;
              }
            break;
          case 0x90:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_65:
                    {
                      /** 1111 1100 1001 00sd rsrc rdst	fdiv	%1%S1, %0 */
#line 879 "rx-decode.opc"
                      int sd AU = op[1] & 0x03;
#line 879 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 879 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1100 1001 00sd rsrc rdst	fdiv	%1%S1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  sd = 0x%x,", sd);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("fdiv	%1%S1, %0");
#line 879 "rx-decode.opc"
                      ID(fdiv); DR(rdst); SD(sd, rsrc, LSIZE); F__SZ_;
                    
                    }
                  break;
              }
            break;
          case 0x91:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_65;
                  break;
              }
            break;
          case 0x92:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_65;
                  break;
              }
            break;
          case 0x93:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_65;
                  break;
              }
            break;
          case 0x94:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_66:
                    {
                      /** 1111 1100 1001 01sd rsrc rdst	ftoi	%1%S1, %0 */
#line 867 "rx-decode.opc"
                      int sd AU = op[1] & 0x03;
#line 867 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 867 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1100 1001 01sd rsrc rdst	ftoi	%1%S1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  sd = 0x%x,", sd);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("ftoi	%1%S1, %0");
#line 867 "rx-decode.opc"
                      ID(ftoi); DR(rdst); SD(sd, rsrc, LSIZE); F__SZ_;
                    
                    }
                  break;
              }
            break;
          case 0x95:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_66;
                  break;
              }
            break;
          case 0x96:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_66;
                  break;
              }
            break;
          case 0x97:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_66;
                  break;
              }
            break;
          case 0x98:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_67:
                    {
                      /** 1111 1100 1001 10sd rsrc rdst	round	%1%S1, %0 */
#line 882 "rx-decode.opc"
                      int sd AU = op[1] & 0x03;
#line 882 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 882 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1100 1001 10sd rsrc rdst	round	%1%S1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  sd = 0x%x,", sd);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("round	%1%S1, %0");
#line 882 "rx-decode.opc"
                      ID(round); DR(rdst); SD(sd, rsrc, LSIZE); F__SZ_;
                    
                    }
                  break;
              }
            break;
          case 0x99:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_67;
                  break;
              }
            break;
          case 0x9a:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_67;
                  break;
              }
            break;
          case 0x9b:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_67;
                  break;
              }
            break;
          case 0xd0:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_68:
                    {
                      /** 1111 1100 1101 sz sd rdst cond	sc%1%s	%0 */
#line 999 "rx-decode.opc"
                      int sz AU = (op[1] >> 2) & 0x03;
#line 999 "rx-decode.opc"
                      int sd AU = op[1] & 0x03;
#line 999 "rx-decode.opc"
                      int rdst AU = (op[2] >> 4) & 0x0f;
#line 999 "rx-decode.opc"
                      int cond AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1100 1101 sz sd rdst cond	sc%1%s	%0 */",
                                 op[0], op[1], op[2]);
                          printf ("  sz = 0x%x,", sz);
                          printf ("  sd = 0x%x,", sd);
                          printf ("  rdst = 0x%x,", rdst);
                          printf ("  cond = 0x%x\n", cond);
                        }
                      SYNTAX("sc%1%s	%0");
#line 999 "rx-decode.opc"
                      ID(sccnd); BWL(sz); DD (sd, rdst, sz); Scc(cond);
                    
                    }
                  break;
              }
            break;
          case 0xd1:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_68;
                  break;
              }
            break;
          case 0xd2:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_68;
                  break;
              }
            break;
          case 0xd3:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_68;
                  break;
              }
            break;
          case 0xd4:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_68;
                  break;
              }
            break;
          case 0xd5:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_68;
                  break;
              }
            break;
          case 0xd6:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_68;
                  break;
              }
            break;
          case 0xd7:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_68;
                  break;
              }
            break;
          case 0xd8:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_68;
                  break;
              }
            break;
          case 0xd9:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_68;
                  break;
              }
            break;
          case 0xda:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_68;
                  break;
              }
            break;
          case 0xdb:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_68;
                  break;
              }
            break;
          case 0xe0:
              GETBYTE ();
              switch (op[2] & 0x0f)
              {
                case 0x00:
                case 0x01:
                case 0x02:
                case 0x03:
                case 0x04:
                case 0x05:
                case 0x06:
                case 0x07:
                case 0x08:
                case 0x09:
                case 0x0a:
                case 0x0b:
                case 0x0c:
                case 0x0d:
                case 0x0e:
                  op_semantics_69:
                    {
                      /** 1111 1100 111bit sd rdst cond	bm%2	#%1, %0%S0 */
#line 942 "rx-decode.opc"
                      int bit AU = (op[1] >> 2) & 0x07;
#line 942 "rx-decode.opc"
                      int sd AU = op[1] & 0x03;
#line 942 "rx-decode.opc"
                      int rdst AU = (op[2] >> 4) & 0x0f;
#line 942 "rx-decode.opc"
                      int cond AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1100 111bit sd rdst cond	bm%2	#%1, %0%S0 */",
                                 op[0], op[1], op[2]);
                          printf ("  bit = 0x%x,", bit);
                          printf ("  sd = 0x%x,", sd);
                          printf ("  rdst = 0x%x,", rdst);
                          printf ("  cond = 0x%x\n", cond);
                        }
                      SYNTAX("bm%2	#%1, %0%S0");
#line 942 "rx-decode.opc"
                      ID(bmcc); BWL(BSIZE); S2cc(cond); SC(bit); DD(sd, rdst, BSIZE);
                    
                    }
                  break;
                case 0x0f:
                  op_semantics_70:
                    {
                      /** 1111 1100 111bit sd rdst 1111	bnot	#%1, %0%S0 */
#line 930 "rx-decode.opc"
                      int bit AU = (op[1] >> 2) & 0x07;
#line 930 "rx-decode.opc"
                      int sd AU = op[1] & 0x03;
#line 930 "rx-decode.opc"
                      int rdst AU = (op[2] >> 4) & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1100 111bit sd rdst 1111	bnot	#%1, %0%S0 */",
                                 op[0], op[1], op[2]);
                          printf ("  bit = 0x%x,", bit);
                          printf ("  sd = 0x%x,", sd);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("bnot	#%1, %0%S0");
#line 930 "rx-decode.opc"
                      ID(bnot); BWL(BSIZE); SC(bit); DD(sd, rdst, BSIZE);
                    
                    }
                  break;
              }
            break;
          case 0xe1:
              GETBYTE ();
              switch (op[2] & 0x0f)
              {
                case 0x00:
                case 0x01:
                case 0x02:
                case 0x03:
                case 0x04:
                case 0x05:
                case 0x06:
                case 0x07:
                case 0x08:
                case 0x09:
                case 0x0a:
                case 0x0b:
                case 0x0c:
                case 0x0d:
                case 0x0e:
                  goto op_semantics_69;
                  break;
                case 0x0f:
                  goto op_semantics_70;
                  break;
              }
            break;
          case 0xe2:
              GETBYTE ();
              switch (op[2] & 0x0f)
              {
                case 0x00:
                case 0x01:
                case 0x02:
                case 0x03:
                case 0x04:
                case 0x05:
                case 0x06:
                case 0x07:
                case 0x08:
                case 0x09:
                case 0x0a:
                case 0x0b:
                case 0x0c:
                case 0x0d:
                case 0x0e:
                  goto op_semantics_69;
                  break;
                case 0x0f:
                  goto op_semantics_70;
                  break;
              }
            break;
          case 0xe3:
              GETBYTE ();
              switch (op[2] & 0x0f)
              {
                case 0x00:
                case 0x01:
                case 0x02:
                case 0x03:
                case 0x04:
                case 0x05:
                case 0x06:
                case 0x07:
                case 0x08:
                case 0x09:
                case 0x0a:
                case 0x0b:
                case 0x0c:
                case 0x0d:
                case 0x0e:
                  goto op_semantics_69;
                  break;
                case 0x0f:
                  goto op_semantics_70;
                  break;
              }
            break;
          case 0xe4:
              GETBYTE ();
              switch (op[2] & 0x0f)
              {
                case 0x00:
                case 0x01:
                case 0x02:
                case 0x03:
                case 0x04:
                case 0x05:
                case 0x06:
                case 0x07:
                case 0x08:
                case 0x09:
                case 0x0a:
                case 0x0b:
                case 0x0c:
                case 0x0d:
                case 0x0e:
                  goto op_semantics_69;
                  break;
                case 0x0f:
                  goto op_semantics_70;
                  break;
              }
            break;
          case 0xe5:
              GETBYTE ();
              switch (op[2] & 0x0f)
              {
                case 0x00:
                case 0x01:
                case 0x02:
                case 0x03:
                case 0x04:
                case 0x05:
                case 0x06:
                case 0x07:
                case 0x08:
                case 0x09:
                case 0x0a:
                case 0x0b:
                case 0x0c:
                case 0x0d:
                case 0x0e:
                  goto op_semantics_69;
                  break;
                case 0x0f:
                  goto op_semantics_70;
                  break;
              }
            break;
          case 0xe6:
              GETBYTE ();
              switch (op[2] & 0x0f)
              {
                case 0x00:
                case 0x01:
                case 0x02:
                case 0x03:
                case 0x04:
                case 0x05:
                case 0x06:
                case 0x07:
                case 0x08:
                case 0x09:
                case 0x0a:
                case 0x0b:
                case 0x0c:
                case 0x0d:
                case 0x0e:
                  goto op_semantics_69;
                  break;
                case 0x0f:
                  goto op_semantics_70;
                  break;
              }
            break;
          case 0xe7:
              GETBYTE ();
              switch (op[2] & 0x0f)
              {
                case 0x00:
                case 0x01:
                case 0x02:
                case 0x03:
                case 0x04:
                case 0x05:
                case 0x06:
                case 0x07:
                case 0x08:
                case 0x09:
                case 0x0a:
                case 0x0b:
                case 0x0c:
                case 0x0d:
                case 0x0e:
                  goto op_semantics_69;
                  break;
                case 0x0f:
                  goto op_semantics_70;
                  break;
              }
            break;
          case 0xe8:
              GETBYTE ();
              switch (op[2] & 0x0f)
              {
                case 0x00:
                case 0x01:
                case 0x02:
                case 0x03:
                case 0x04:
                case 0x05:
                case 0x06:
                case 0x07:
                case 0x08:
                case 0x09:
                case 0x0a:
                case 0x0b:
                case 0x0c:
                case 0x0d:
                case 0x0e:
                  goto op_semantics_69;
                  break;
                case 0x0f:
                  goto op_semantics_70;
                  break;
              }
            break;
          case 0xe9:
              GETBYTE ();
              switch (op[2] & 0x0f)
              {
                case 0x00:
                case 0x01:
                case 0x02:
                case 0x03:
                case 0x04:
                case 0x05:
                case 0x06:
                case 0x07:
                case 0x08:
                case 0x09:
                case 0x0a:
                case 0x0b:
                case 0x0c:
                case 0x0d:
                case 0x0e:
                  goto op_semantics_69;
                  break;
                case 0x0f:
                  goto op_semantics_70;
                  break;
              }
            break;
          case 0xea:
              GETBYTE ();
              switch (op[2] & 0x0f)
              {
                case 0x00:
                case 0x01:
                case 0x02:
                case 0x03:
                case 0x04:
                case 0x05:
                case 0x06:
                case 0x07:
                case 0x08:
                case 0x09:
                case 0x0a:
                case 0x0b:
                case 0x0c:
                case 0x0d:
                case 0x0e:
                  goto op_semantics_69;
                  break;
                case 0x0f:
                  goto op_semantics_70;
                  break;
              }
            break;
          case 0xeb:
              GETBYTE ();
              switch (op[2] & 0x0f)
              {
                case 0x00:
                case 0x01:
                case 0x02:
                case 0x03:
                case 0x04:
                case 0x05:
                case 0x06:
                case 0x07:
                case 0x08:
                case 0x09:
                case 0x0a:
                case 0x0b:
                case 0x0c:
                case 0x0d:
                case 0x0e:
                  goto op_semantics_69;
                  break;
                case 0x0f:
                  goto op_semantics_70;
                  break;
              }
            break;
          case 0xec:
              GETBYTE ();
              switch (op[2] & 0x0f)
              {
                case 0x00:
                case 0x01:
                case 0x02:
                case 0x03:
                case 0x04:
                case 0x05:
                case 0x06:
                case 0x07:
                case 0x08:
                case 0x09:
                case 0x0a:
                case 0x0b:
                case 0x0c:
                case 0x0d:
                case 0x0e:
                  goto op_semantics_69;
                  break;
                case 0x0f:
                  goto op_semantics_70;
                  break;
              }
            break;
          case 0xed:
              GETBYTE ();
              switch (op[2] & 0x0f)
              {
                case 0x00:
                case 0x01:
                case 0x02:
                case 0x03:
                case 0x04:
                case 0x05:
                case 0x06:
                case 0x07:
                case 0x08:
                case 0x09:
                case 0x0a:
                case 0x0b:
                case 0x0c:
                case 0x0d:
                case 0x0e:
                  goto op_semantics_69;
                  break;
                case 0x0f:
                  goto op_semantics_70;
                  break;
              }
            break;
          case 0xee:
              GETBYTE ();
              switch (op[2] & 0x0f)
              {
                case 0x00:
                case 0x01:
                case 0x02:
                case 0x03:
                case 0x04:
                case 0x05:
                case 0x06:
                case 0x07:
                case 0x08:
                case 0x09:
                case 0x0a:
                case 0x0b:
                case 0x0c:
                case 0x0d:
                case 0x0e:
                  goto op_semantics_69;
                  break;
                case 0x0f:
                  goto op_semantics_70;
                  break;
              }
            break;
          case 0xef:
              GETBYTE ();
              switch (op[2] & 0x0f)
              {
                case 0x00:
                case 0x01:
                case 0x02:
                case 0x03:
                case 0x04:
                case 0x05:
                case 0x06:
                case 0x07:
                case 0x08:
                case 0x09:
                case 0x0a:
                case 0x0b:
                case 0x0c:
                case 0x0d:
                case 0x0e:
                  goto op_semantics_69;
                  break;
                case 0x0f:
                  goto op_semantics_70;
                  break;
              }
            break;
          case 0xf0:
              GETBYTE ();
              switch (op[2] & 0x0f)
              {
                case 0x00:
                case 0x01:
                case 0x02:
                case 0x03:
                case 0x04:
                case 0x05:
                case 0x06:
                case 0x07:
                case 0x08:
                case 0x09:
                case 0x0a:
                case 0x0b:
                case 0x0c:
                case 0x0d:
                case 0x0e:
                  goto op_semantics_69;
                  break;
                case 0x0f:
                  goto op_semantics_70;
                  break;
              }
            break;
          case 0xf1:
              GETBYTE ();
              switch (op[2] & 0x0f)
              {
                case 0x00:
                case 0x01:
                case 0x02:
                case 0x03:
                case 0x04:
                case 0x05:
                case 0x06:
                case 0x07:
                case 0x08:
                case 0x09:
                case 0x0a:
                case 0x0b:
                case 0x0c:
                case 0x0d:
                case 0x0e:
                  goto op_semantics_69;
                  break;
                case 0x0f:
                  goto op_semantics_70;
                  break;
              }
            break;
          case 0xf2:
              GETBYTE ();
              switch (op[2] & 0x0f)
              {
                case 0x00:
                case 0x01:
                case 0x02:
                case 0x03:
                case 0x04:
                case 0x05:
                case 0x06:
                case 0x07:
                case 0x08:
                case 0x09:
                case 0x0a:
                case 0x0b:
                case 0x0c:
                case 0x0d:
                case 0x0e:
                  goto op_semantics_69;
                  break;
                case 0x0f:
                  goto op_semantics_70;
                  break;
              }
            break;
          case 0xf3:
              GETBYTE ();
              switch (op[2] & 0x0f)
              {
                case 0x00:
                case 0x01:
                case 0x02:
                case 0x03:
                case 0x04:
                case 0x05:
                case 0x06:
                case 0x07:
                case 0x08:
                case 0x09:
                case 0x0a:
                case 0x0b:
                case 0x0c:
                case 0x0d:
                case 0x0e:
                  goto op_semantics_69;
                  break;
                case 0x0f:
                  goto op_semantics_70;
                  break;
              }
            break;
          case 0xf4:
              GETBYTE ();
              switch (op[2] & 0x0f)
              {
                case 0x00:
                case 0x01:
                case 0x02:
                case 0x03:
                case 0x04:
                case 0x05:
                case 0x06:
                case 0x07:
                case 0x08:
                case 0x09:
                case 0x0a:
                case 0x0b:
                case 0x0c:
                case 0x0d:
                case 0x0e:
                  goto op_semantics_69;
                  break;
                case 0x0f:
                  goto op_semantics_70;
                  break;
              }
            break;
          case 0xf5:
              GETBYTE ();
              switch (op[2] & 0x0f)
              {
                case 0x00:
                case 0x01:
                case 0x02:
                case 0x03:
                case 0x04:
                case 0x05:
                case 0x06:
                case 0x07:
                case 0x08:
                case 0x09:
                case 0x0a:
                case 0x0b:
                case 0x0c:
                case 0x0d:
                case 0x0e:
                  goto op_semantics_69;
                  break;
                case 0x0f:
                  goto op_semantics_70;
                  break;
              }
            break;
          case 0xf6:
              GETBYTE ();
              switch (op[2] & 0x0f)
              {
                case 0x00:
                case 0x01:
                case 0x02:
                case 0x03:
                case 0x04:
                case 0x05:
                case 0x06:
                case 0x07:
                case 0x08:
                case 0x09:
                case 0x0a:
                case 0x0b:
                case 0x0c:
                case 0x0d:
                case 0x0e:
                  goto op_semantics_69;
                  break;
                case 0x0f:
                  goto op_semantics_70;
                  break;
              }
            break;
          case 0xf7:
              GETBYTE ();
              switch (op[2] & 0x0f)
              {
                case 0x00:
                case 0x01:
                case 0x02:
                case 0x03:
                case 0x04:
                case 0x05:
                case 0x06:
                case 0x07:
                case 0x08:
                case 0x09:
                case 0x0a:
                case 0x0b:
                case 0x0c:
                case 0x0d:
                case 0x0e:
                  goto op_semantics_69;
                  break;
                case 0x0f:
                  goto op_semantics_70;
                  break;
              }
            break;
          case 0xf8:
              GETBYTE ();
              switch (op[2] & 0x0f)
              {
                case 0x00:
                case 0x01:
                case 0x02:
                case 0x03:
                case 0x04:
                case 0x05:
                case 0x06:
                case 0x07:
                case 0x08:
                case 0x09:
                case 0x0a:
                case 0x0b:
                case 0x0c:
                case 0x0d:
                case 0x0e:
                  goto op_semantics_69;
                  break;
                case 0x0f:
                  goto op_semantics_70;
                  break;
              }
            break;
          case 0xf9:
              GETBYTE ();
              switch (op[2] & 0x0f)
              {
                case 0x00:
                case 0x01:
                case 0x02:
                case 0x03:
                case 0x04:
                case 0x05:
                case 0x06:
                case 0x07:
                case 0x08:
                case 0x09:
                case 0x0a:
                case 0x0b:
                case 0x0c:
                case 0x0d:
                case 0x0e:
                  goto op_semantics_69;
                  break;
                case 0x0f:
                  goto op_semantics_70;
                  break;
              }
            break;
          case 0xfa:
              GETBYTE ();
              switch (op[2] & 0x0f)
              {
                case 0x00:
                case 0x01:
                case 0x02:
                case 0x03:
                case 0x04:
                case 0x05:
                case 0x06:
                case 0x07:
                case 0x08:
                case 0x09:
                case 0x0a:
                case 0x0b:
                case 0x0c:
                case 0x0d:
                case 0x0e:
                  goto op_semantics_69;
                  break;
                case 0x0f:
                  goto op_semantics_70;
                  break;
              }
            break;
          case 0xfb:
              GETBYTE ();
              switch (op[2] & 0x0f)
              {
                case 0x00:
                case 0x01:
                case 0x02:
                case 0x03:
                case 0x04:
                case 0x05:
                case 0x06:
                case 0x07:
                case 0x08:
                case 0x09:
                case 0x0a:
                case 0x0b:
                case 0x0c:
                case 0x0d:
                case 0x0e:
                  goto op_semantics_69;
                  break;
                case 0x0f:
                  goto op_semantics_70;
                  break;
              }
            break;
          case 0xfc:
              GETBYTE ();
              switch (op[2] & 0x0f)
              {
                case 0x00:
                case 0x01:
                case 0x02:
                case 0x03:
                case 0x04:
                case 0x05:
                case 0x06:
                case 0x07:
                case 0x08:
                case 0x09:
                case 0x0a:
                case 0x0b:
                case 0x0c:
                case 0x0d:
                case 0x0e:
                  goto op_semantics_69;
                  break;
                case 0x0f:
                  goto op_semantics_70;
                  break;
              }
            break;
          case 0xfd:
              GETBYTE ();
              switch (op[2] & 0x0f)
              {
                case 0x00:
                case 0x01:
                case 0x02:
                case 0x03:
                case 0x04:
                case 0x05:
                case 0x06:
                case 0x07:
                case 0x08:
                case 0x09:
                case 0x0a:
                case 0x0b:
                case 0x0c:
                case 0x0d:
                case 0x0e:
                  goto op_semantics_69;
                  break;
                case 0x0f:
                  goto op_semantics_70;
                  break;
              }
            break;
          case 0xfe:
              GETBYTE ();
              switch (op[2] & 0x0f)
              {
                case 0x00:
                case 0x01:
                case 0x02:
                case 0x03:
                case 0x04:
                case 0x05:
                case 0x06:
                case 0x07:
                case 0x08:
                case 0x09:
                case 0x0a:
                case 0x0b:
                case 0x0c:
                case 0x0d:
                case 0x0e:
                  goto op_semantics_69;
                  break;
                case 0x0f:
                  goto op_semantics_70;
                  break;
              }
            break;
          case 0xff:
              GETBYTE ();
              switch (op[2] & 0x0f)
              {
                case 0x00:
                case 0x01:
                case 0x02:
                case 0x03:
                case 0x04:
                case 0x05:
                case 0x06:
                case 0x07:
                case 0x08:
                case 0x09:
                case 0x0a:
                case 0x0b:
                case 0x0c:
                case 0x0d:
                case 0x0e:
                  goto op_semantics_69;
                  break;
                case 0x0f:
                  goto op_semantics_70;
                  break;
              }
            break;
          default: UNSUPPORTED(); break;
        }
      break;
    case 0xfd:
        GETBYTE ();
        switch (op[1] & 0xff)
        {
          case 0x00:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                    {
                      /** 1111 1101 0000 0000 srca srcb	mulhi	%1, %2 */
#line 807 "rx-decode.opc"
                      int srca AU = (op[2] >> 4) & 0x0f;
#line 807 "rx-decode.opc"
                      int srcb AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0000 0000 srca srcb	mulhi	%1, %2 */",
                                 op[0], op[1], op[2]);
                          printf ("  srca = 0x%x,", srca);
                          printf ("  srcb = 0x%x\n", srcb);
                        }
                      SYNTAX("mulhi	%1, %2");
#line 807 "rx-decode.opc"
                      ID(mulhi); SR(srca); S2R(srcb); F_____;
                    
                    }
                  break;
              }
            break;
          case 0x01:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                    {
                      /** 1111 1101 0000 0001 srca srcb	mullo	%1, %2 */
#line 810 "rx-decode.opc"
                      int srca AU = (op[2] >> 4) & 0x0f;
#line 810 "rx-decode.opc"
                      int srcb AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0000 0001 srca srcb	mullo	%1, %2 */",
                                 op[0], op[1], op[2]);
                          printf ("  srca = 0x%x,", srca);
                          printf ("  srcb = 0x%x\n", srcb);
                        }
                      SYNTAX("mullo	%1, %2");
#line 810 "rx-decode.opc"
                      ID(mullo); SR(srca); S2R(srcb); F_____;
                    
                    }
                  break;
              }
            break;
          case 0x04:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                    {
                      /** 1111 1101 0000 0100 srca srcb	machi	%1, %2 */
#line 813 "rx-decode.opc"
                      int srca AU = (op[2] >> 4) & 0x0f;
#line 813 "rx-decode.opc"
                      int srcb AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0000 0100 srca srcb	machi	%1, %2 */",
                                 op[0], op[1], op[2]);
                          printf ("  srca = 0x%x,", srca);
                          printf ("  srcb = 0x%x\n", srcb);
                        }
                      SYNTAX("machi	%1, %2");
#line 813 "rx-decode.opc"
                      ID(machi); SR(srca); S2R(srcb); F_____;
                    
                    }
                  break;
              }
            break;
          case 0x05:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                    {
                      /** 1111 1101 0000 0101 srca srcb	maclo	%1, %2 */
#line 816 "rx-decode.opc"
                      int srca AU = (op[2] >> 4) & 0x0f;
#line 816 "rx-decode.opc"
                      int srcb AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0000 0101 srca srcb	maclo	%1, %2 */",
                                 op[0], op[1], op[2]);
                          printf ("  srca = 0x%x,", srca);
                          printf ("  srcb = 0x%x\n", srcb);
                        }
                      SYNTAX("maclo	%1, %2");
#line 816 "rx-decode.opc"
                      ID(maclo); SR(srca); S2R(srcb); F_____;
                    
                    }
                  break;
              }
            break;
          case 0x17:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x00:
                    {
                      /** 1111 1101 0001 0111 0000 rsrc	mvtachi	%1 */
#line 819 "rx-decode.opc"
                      int rsrc AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0001 0111 0000 rsrc	mvtachi	%1 */",
                                 op[0], op[1], op[2]);
                          printf ("  rsrc = 0x%x\n", rsrc);
                        }
                      SYNTAX("mvtachi	%1");
#line 819 "rx-decode.opc"
                      ID(mvtachi); SR(rsrc); F_____;
                    
                    }
                  break;
                case 0x10:
                    {
                      /** 1111 1101 0001 0111 0001 rsrc	mvtaclo	%1 */
#line 822 "rx-decode.opc"
                      int rsrc AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0001 0111 0001 rsrc	mvtaclo	%1 */",
                                 op[0], op[1], op[2]);
                          printf ("  rsrc = 0x%x\n", rsrc);
                        }
                      SYNTAX("mvtaclo	%1");
#line 822 "rx-decode.opc"
                      ID(mvtaclo); SR(rsrc); F_____;
                    
                    }
                  break;
                default: UNSUPPORTED(); break;
              }
            break;
          case 0x18:
              GETBYTE ();
              switch (op[2] & 0xef)
              {
                case 0x00:
                    {
                      /** 1111 1101 0001 1000 000i 0000	racw	#%1 */
#line 834 "rx-decode.opc"
                      int i AU = (op[2] >> 4) & 0x01;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0001 1000 000i 0000	racw	#%1 */",
                                 op[0], op[1], op[2]);
                          printf ("  i = 0x%x\n", i);
                        }
                      SYNTAX("racw	#%1");
#line 834 "rx-decode.opc"
                      ID(racw); SC(i+1); F_____;
                    
                    /*----------------------------------------------------------------------*/
                    /* SAT									*/
                    
                    }
                  break;
                default: UNSUPPORTED(); break;
              }
            break;
          case 0x1f:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x00:
                    {
                      /** 1111 1101 0001 1111 0000 rdst	mvfachi	%0 */
#line 825 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0001 1111 0000 rdst	mvfachi	%0 */",
                                 op[0], op[1], op[2]);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("mvfachi	%0");
#line 825 "rx-decode.opc"
                      ID(mvfachi); DR(rdst); F_____;
                    
                    }
                  break;
                case 0x10:
                    {
                      /** 1111 1101 0001 1111 0001 rdst	mvfaclo	%0 */
#line 831 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0001 1111 0001 rdst	mvfaclo	%0 */",
                                 op[0], op[1], op[2]);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("mvfaclo	%0");
#line 831 "rx-decode.opc"
                      ID(mvfaclo); DR(rdst); F_____;
                    
                    }
                  break;
                case 0x20:
                    {
                      /** 1111 1101 0001 1111 0010 rdst	mvfacmi	%0 */
#line 828 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0001 1111 0010 rdst	mvfacmi	%0 */",
                                 op[0], op[1], op[2]);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("mvfacmi	%0");
#line 828 "rx-decode.opc"
                      ID(mvfacmi); DR(rdst); F_____;
                    
                    }
                  break;
                default: UNSUPPORTED(); break;
              }
            break;
          case 0x20:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_71:
                    {
                      /** 1111 1101 0010 0p sz rdst rsrc	mov%s	%1, %0 */
#line 341 "rx-decode.opc"
                      int p AU = (op[1] >> 2) & 0x01;
#line 341 "rx-decode.opc"
                      int sz AU = op[1] & 0x03;
#line 341 "rx-decode.opc"
                      int rdst AU = (op[2] >> 4) & 0x0f;
#line 341 "rx-decode.opc"
                      int rsrc AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0010 0p sz rdst rsrc	mov%s	%1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  p = 0x%x,", p);
                          printf ("  sz = 0x%x,", sz);
                          printf ("  rdst = 0x%x,", rdst);
                          printf ("  rsrc = 0x%x\n", rsrc);
                        }
                      SYNTAX("mov%s	%1, %0");
#line 341 "rx-decode.opc"
                      ID(mov); sBWL (sz); SR(rsrc); F_____;
                      OP(0, p ? RX_Operand_Predec : RX_Operand_Postinc, rdst, 0);
                    
                    }
                  break;
              }
            break;
          case 0x21:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_71;
                  break;
              }
            break;
          case 0x22:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_71;
                  break;
              }
            break;
          case 0x24:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_71;
                  break;
              }
            break;
          case 0x25:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_71;
                  break;
              }
            break;
          case 0x26:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_71;
                  break;
              }
            break;
          case 0x28:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_72:
                    {
                      /** 1111 1101 0010 1p sz rsrc rdst	mov%s	%1, %0 */
#line 345 "rx-decode.opc"
                      int p AU = (op[1] >> 2) & 0x01;
#line 345 "rx-decode.opc"
                      int sz AU = op[1] & 0x03;
#line 345 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 345 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0010 1p sz rsrc rdst	mov%s	%1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  p = 0x%x,", p);
                          printf ("  sz = 0x%x,", sz);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("mov%s	%1, %0");
#line 345 "rx-decode.opc"
                      ID(mov); sBWL (sz); DR(rdst); F_____;
                      OP(1, p ? RX_Operand_Predec : RX_Operand_Postinc, rsrc, 0);
                    
                    }
                  break;
              }
            break;
          case 0x29:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_72;
                  break;
              }
            break;
          case 0x2a:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_72;
                  break;
              }
            break;
          case 0x2c:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_72;
                  break;
              }
            break;
          case 0x2d:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_72;
                  break;
              }
            break;
          case 0x2e:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_72;
                  break;
              }
            break;
          case 0x38:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_73:
                    {
                      /** 1111 1101 0011 1p sz rsrc rdst	movu%s	%1, %0 */
#line 355 "rx-decode.opc"
                      int p AU = (op[1] >> 2) & 0x01;
#line 355 "rx-decode.opc"
                      int sz AU = op[1] & 0x03;
#line 355 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 355 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0011 1p sz rsrc rdst	movu%s	%1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  p = 0x%x,", p);
                          printf ("  sz = 0x%x,", sz);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("movu%s	%1, %0");
#line 355 "rx-decode.opc"
                      ID(mov); uBWL (sz); DR(rdst); F_____;
                       OP(1, p ? RX_Operand_Predec : RX_Operand_Postinc, rsrc, 0);
                    
                    /*----------------------------------------------------------------------*/
                    /* PUSH/POP								*/
                    
                    }
                  break;
              }
            break;
          case 0x39:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_73;
                  break;
              }
            break;
          case 0x3a:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_73;
                  break;
              }
            break;
          case 0x3c:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_73;
                  break;
              }
            break;
          case 0x3d:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_73;
                  break;
              }
            break;
          case 0x3e:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_73;
                  break;
              }
            break;
          case 0x60:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                    {
                      /** 1111 1101 0110 0000 rsrc rdst	shlr	%2, %0 */
#line 688 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 688 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0110 0000 rsrc rdst	shlr	%2, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("shlr	%2, %0");
#line 688 "rx-decode.opc"
                      ID(shlr); S2R(rsrc); SR(rdst); DR(rdst); F__SZC;
                    
                    }
                  break;
              }
            break;
          case 0x61:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                    {
                      /** 1111 1101 0110 0001 rsrc rdst	shar	%2, %0 */
#line 678 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 678 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0110 0001 rsrc rdst	shar	%2, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("shar	%2, %0");
#line 678 "rx-decode.opc"
                      ID(shar); S2R(rsrc); SR(rdst); DR(rdst); F_0SZC;
                    
                    }
                  break;
              }
            break;
          case 0x62:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                    {
                      /** 1111 1101 0110 0010 rsrc rdst	shll	%2, %0 */
#line 668 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 668 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0110 0010 rsrc rdst	shll	%2, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("shll	%2, %0");
#line 668 "rx-decode.opc"
                      ID(shll); S2R(rsrc); SR(rdst); DR(rdst); F_OSZC;
                    
                    }
                  break;
              }
            break;
          case 0x64:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                    {
                      /** 1111 1101 0110 0100 rsrc rdst	rotr	%1, %0 */
#line 712 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 712 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0110 0100 rsrc rdst	rotr	%1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("rotr	%1, %0");
#line 712 "rx-decode.opc"
                      ID(rotr); SR(rsrc); DR(rdst); F__SZC;
                    
                    }
                  break;
              }
            break;
          case 0x65:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                    {
                      /** 1111 1101 0110 0101 rsrc rdst	revw	%1, %0 */
#line 715 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 715 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0110 0101 rsrc rdst	revw	%1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("revw	%1, %0");
#line 715 "rx-decode.opc"
                      ID(revw); SR(rsrc); DR(rdst);
                    
                    }
                  break;
              }
            break;
          case 0x66:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                    {
                      /** 1111 1101 0110 0110 rsrc rdst	rotl	%1, %0 */
#line 706 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 706 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0110 0110 rsrc rdst	rotl	%1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("rotl	%1, %0");
#line 706 "rx-decode.opc"
                      ID(rotl); SR(rsrc); DR(rdst); F__SZC;
                    
                    }
                  break;
              }
            break;
          case 0x67:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                    {
                      /** 1111 1101 0110 0111 rsrc rdst	revl	%1, %0 */
#line 718 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 718 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0110 0111 rsrc rdst	revl	%1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("revl	%1, %0");
#line 718 "rx-decode.opc"
                      ID(revl); SR(rsrc); DR(rdst);
                    
                    /*----------------------------------------------------------------------*/
                    /* BRANCH								*/
                    
                    }
                  break;
              }
            break;
          case 0x68:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_74:
                    {
                      /** 1111 1101 0110 100c rsrc rdst	mvtc	%1, %0 */
#line 969 "rx-decode.opc"
                      int c AU = op[1] & 0x01;
#line 969 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 969 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0110 100c rsrc rdst	mvtc	%1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  c = 0x%x,", c);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("mvtc	%1, %0");
#line 969 "rx-decode.opc"
                      ID(mov); SR(rsrc); DR(c*16+rdst + 16);
                    
                    }
                  break;
              }
            break;
          case 0x69:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_74;
                  break;
              }
            break;
          case 0x6a:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_75:
                    {
                      /** 1111 1101 0110 101s rsrc rdst	mvfc	%1, %0 */
#line 972 "rx-decode.opc"
                      int s AU = op[1] & 0x01;
#line 972 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 972 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0110 101s rsrc rdst	mvfc	%1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  s = 0x%x,", s);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("mvfc	%1, %0");
#line 972 "rx-decode.opc"
                      ID(mov); SR((s*16+rsrc) + 16); DR(rdst);
                    
                    /*----------------------------------------------------------------------*/
                    /* INTERRUPTS								*/
                    
                    }
                  break;
              }
            break;
          case 0x6b:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_75;
                  break;
              }
            break;
          case 0x6c:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_76:
                    {
                      /** 1111 1101 0110 110i mmmm rdst	rotr	#%1, %0 */
#line 709 "rx-decode.opc"
                      int i AU = op[1] & 0x01;
#line 709 "rx-decode.opc"
                      int mmmm AU = (op[2] >> 4) & 0x0f;
#line 709 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0110 110i mmmm rdst	rotr	#%1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  i = 0x%x,", i);
                          printf ("  mmmm = 0x%x,", mmmm);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("rotr	#%1, %0");
#line 709 "rx-decode.opc"
                      ID(rotr); SC(i*16+mmmm); DR(rdst); F__SZC;
                    
                    }
                  break;
              }
            break;
          case 0x6d:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_76;
                  break;
              }
            break;
          case 0x6e:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_77:
                    {
                      /** 1111 1101 0110 111i mmmm rdst	rotl	#%1, %0 */
#line 703 "rx-decode.opc"
                      int i AU = op[1] & 0x01;
#line 703 "rx-decode.opc"
                      int mmmm AU = (op[2] >> 4) & 0x0f;
#line 703 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0110 111i mmmm rdst	rotl	#%1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  i = 0x%x,", i);
                          printf ("  mmmm = 0x%x,", mmmm);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("rotl	#%1, %0");
#line 703 "rx-decode.opc"
                      ID(rotl); SC(i*16+mmmm); DR(rdst); F__SZC;
                    
                    }
                  break;
              }
            break;
          case 0x6f:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_77;
                  break;
              }
            break;
          case 0x70:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x20:
                  op_semantics_78:
                    {
                      /** 1111 1101 0111 im00 0010rdst	adc	#%1, %0 */
#line 485 "rx-decode.opc"
                      int im AU = (op[1] >> 2) & 0x03;
#line 485 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0111 im00 0010rdst	adc	#%1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  im = 0x%x,", im);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("adc	#%1, %0");
#line 485 "rx-decode.opc"
                      ID(adc); SC(IMMex(im)); DR(rdst); F_OSZC;
                    
                    }
                  break;
                case 0x40:
                  op_semantics_79:
                    {
                      /** 1111 1101 0111 im00 0100rdst	max	#%1, %0 */
#line 567 "rx-decode.opc"
                      int im AU = (op[1] >> 2) & 0x03;
#line 567 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0111 im00 0100rdst	max	#%1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  im = 0x%x,", im);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("max	#%1, %0");
#line 567 "rx-decode.opc"
                      ID(max); DR(rdst); SC(IMMex(im));
                    
                    }
                  break;
                case 0x50:
                  op_semantics_80:
                    {
                      /** 1111 1101 0111 im00 0101rdst	min	#%1, %0 */
#line 587 "rx-decode.opc"
                      int im AU = (op[1] >> 2) & 0x03;
#line 587 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0111 im00 0101rdst	min	#%1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  im = 0x%x,", im);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("min	#%1, %0");
#line 587 "rx-decode.opc"
                      ID(min); DR(rdst); SC(IMMex(im));
                    
                    }
                  break;
                case 0x60:
                  op_semantics_81:
                    {
                      /** 1111 1101 0111 im00 0110rdst	emul	#%1, %0 */
#line 617 "rx-decode.opc"
                      int im AU = (op[1] >> 2) & 0x03;
#line 617 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0111 im00 0110rdst	emul	#%1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  im = 0x%x,", im);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("emul	#%1, %0");
#line 617 "rx-decode.opc"
                      ID(emul); DR(rdst); SC(IMMex(im));
                    
                    }
                  break;
                case 0x70:
                  op_semantics_82:
                    {
                      /** 1111 1101 0111 im00 0111rdst	emulu	#%1, %0 */
#line 629 "rx-decode.opc"
                      int im AU = (op[1] >> 2) & 0x03;
#line 629 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0111 im00 0111rdst	emulu	#%1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  im = 0x%x,", im);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("emulu	#%1, %0");
#line 629 "rx-decode.opc"
                      ID(emulu); DR(rdst); SC(IMMex(im));
                    
                    }
                  break;
                case 0x80:
                  op_semantics_83:
                    {
                      /** 1111 1101 0111 im00 1000rdst	div	#%1, %0 */
#line 641 "rx-decode.opc"
                      int im AU = (op[1] >> 2) & 0x03;
#line 641 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0111 im00 1000rdst	div	#%1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  im = 0x%x,", im);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("div	#%1, %0");
#line 641 "rx-decode.opc"
                      ID(div); DR(rdst); SC(IMMex(im)); F_O___;
                    
                    }
                  break;
                case 0x90:
                  op_semantics_84:
                    {
                      /** 1111 1101 0111 im00 1001rdst	divu	#%1, %0 */
#line 653 "rx-decode.opc"
                      int im AU = (op[1] >> 2) & 0x03;
#line 653 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0111 im00 1001rdst	divu	#%1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  im = 0x%x,", im);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("divu	#%1, %0");
#line 653 "rx-decode.opc"
                      ID(divu); DR(rdst); SC(IMMex(im)); F_O___;
                    
                    }
                  break;
                case 0xc0:
                  op_semantics_85:
                    {
                      /** 1111 1101 0111 im00 1100rdst	tst	#%1, %2 */
#line 464 "rx-decode.opc"
                      int im AU = (op[1] >> 2) & 0x03;
#line 464 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0111 im00 1100rdst	tst	#%1, %2 */",
                                 op[0], op[1], op[2]);
                          printf ("  im = 0x%x,", im);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("tst	#%1, %2");
#line 464 "rx-decode.opc"
                      ID(and); SC(IMMex(im)); S2R(rdst); F__SZ_;
                    
                    }
                  break;
                case 0xd0:
                  op_semantics_86:
                    {
                      /** 1111 1101 0111 im00 1101rdst	xor	#%1, %0 */
#line 443 "rx-decode.opc"
                      int im AU = (op[1] >> 2) & 0x03;
#line 443 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0111 im00 1101rdst	xor	#%1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  im = 0x%x,", im);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("xor	#%1, %0");
#line 443 "rx-decode.opc"
                      ID(xor); SC(IMMex(im)); DR(rdst); F__SZ_;
                    
                    }
                  break;
                case 0xe0:
                  op_semantics_87:
                    {
                      /** 1111 1101 0111 im00 1110rdst	stz	#%1, %0 */
#line 389 "rx-decode.opc"
                      int im AU = (op[1] >> 2) & 0x03;
#line 389 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0111 im00 1110rdst	stz	#%1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  im = 0x%x,", im);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("stz	#%1, %0");
#line 389 "rx-decode.opc"
                      ID(stcc); SC(IMMex(im)); DR(rdst); S2cc(RXC_z);
                    
                    }
                  break;
                case 0xf0:
                  op_semantics_88:
                    {
                      /** 1111 1101 0111 im00 1111rdst	stnz	#%1, %0 */
#line 392 "rx-decode.opc"
                      int im AU = (op[1] >> 2) & 0x03;
#line 392 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0111 im00 1111rdst	stnz	#%1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  im = 0x%x,", im);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("stnz	#%1, %0");
#line 392 "rx-decode.opc"
                      ID(stcc); SC(IMMex(im)); DR(rdst); S2cc(RXC_nz);
                    
                    /*----------------------------------------------------------------------*/
                    /* RTSD									*/
                    
                    }
                  break;
                default: UNSUPPORTED(); break;
              }
            break;
          case 0x72:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x00:
                    {
                      /** 1111 1101 0111 0010 0000 rdst	fsub	#%1, %0 */
#line 861 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0111 0010 0000 rdst	fsub	#%1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("fsub	#%1, %0");
#line 861 "rx-decode.opc"
                      ID(fsub); DR(rdst); SC(IMM(0)); F__SZ_;
                    
                    }
                  break;
                case 0x10:
                    {
                      /** 1111 1101 0111 0010 0001 rdst	fcmp	#%1, %0 */
#line 855 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0111 0010 0001 rdst	fcmp	#%1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("fcmp	#%1, %0");
#line 855 "rx-decode.opc"
                      ID(fcmp); DR(rdst); SC(IMM(0)); F_OSZ_;
                    
                    }
                  break;
                case 0x20:
                    {
                      /** 1111 1101 0111 0010 0010 rdst	fadd	#%1, %0 */
#line 849 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0111 0010 0010 rdst	fadd	#%1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("fadd	#%1, %0");
#line 849 "rx-decode.opc"
                      ID(fadd); DR(rdst); SC(IMM(0)); F__SZ_;
                    
                    }
                  break;
                case 0x30:
                    {
                      /** 1111 1101 0111 0010 0011 rdst	fmul	#%1, %0 */
#line 870 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0111 0010 0011 rdst	fmul	#%1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("fmul	#%1, %0");
#line 870 "rx-decode.opc"
                      ID(fmul); DR(rdst); SC(IMM(0)); F__SZ_;
                    
                    }
                  break;
                case 0x40:
                    {
                      /** 1111 1101 0111 0010 0100 rdst	fdiv	#%1, %0 */
#line 876 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0111 0010 0100 rdst	fdiv	#%1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("fdiv	#%1, %0");
#line 876 "rx-decode.opc"
                      ID(fdiv); DR(rdst); SC(IMM(0)); F__SZ_;
                    
                    }
                  break;
                default: UNSUPPORTED(); break;
              }
            break;
          case 0x73:
              GETBYTE ();
              switch (op[2] & 0xe0)
              {
                case 0x00:
                  op_semantics_89:
                    {
                      /** 1111 1101 0111 im11 000crdst	mvtc	#%1, %0 */
#line 966 "rx-decode.opc"
                      int im AU = (op[1] >> 2) & 0x03;
#line 966 "rx-decode.opc"
                      int crdst AU = op[2] & 0x1f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 0111 im11 000crdst	mvtc	#%1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  im = 0x%x,", im);
                          printf ("  crdst = 0x%x\n", crdst);
                        }
                      SYNTAX("mvtc	#%1, %0");
#line 966 "rx-decode.opc"
                      ID(mov); SC(IMMex(im)); DR(crdst + 16);
                    
                    }
                  break;
                default: UNSUPPORTED(); break;
              }
            break;
          case 0x74:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x20:
                  goto op_semantics_78;
                  break;
                case 0x40:
                  goto op_semantics_79;
                  break;
                case 0x50:
                  goto op_semantics_80;
                  break;
                case 0x60:
                  goto op_semantics_81;
                  break;
                case 0x70:
                  goto op_semantics_82;
                  break;
                case 0x80:
                  goto op_semantics_83;
                  break;
                case 0x90:
                  goto op_semantics_84;
                  break;
                case 0xc0:
                  goto op_semantics_85;
                  break;
                case 0xd0:
                  goto op_semantics_86;
                  break;
                case 0xe0:
                  goto op_semantics_87;
                  break;
                case 0xf0:
                  goto op_semantics_88;
                  break;
                default: UNSUPPORTED(); break;
              }
            break;
          case 0x77:
              GETBYTE ();
              switch (op[2] & 0xe0)
              {
                case 0x00:
                  goto op_semantics_89;
                  break;
                default: UNSUPPORTED(); break;
              }
            break;
          case 0x78:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x20:
                  goto op_semantics_78;
                  break;
                case 0x40:
                  goto op_semantics_79;
                  break;
                case 0x50:
                  goto op_semantics_80;
                  break;
                case 0x60:
                  goto op_semantics_81;
                  break;
                case 0x70:
                  goto op_semantics_82;
                  break;
                case 0x80:
                  goto op_semantics_83;
                  break;
                case 0x90:
                  goto op_semantics_84;
                  break;
                case 0xc0:
                  goto op_semantics_85;
                  break;
                case 0xd0:
                  goto op_semantics_86;
                  break;
                case 0xe0:
                  goto op_semantics_87;
                  break;
                case 0xf0:
                  goto op_semantics_88;
                  break;
                default: UNSUPPORTED(); break;
              }
            break;
          case 0x7b:
              GETBYTE ();
              switch (op[2] & 0xe0)
              {
                case 0x00:
                  goto op_semantics_89;
                  break;
                default: UNSUPPORTED(); break;
              }
            break;
          case 0x7c:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x20:
                  goto op_semantics_78;
                  break;
                case 0x40:
                  goto op_semantics_79;
                  break;
                case 0x50:
                  goto op_semantics_80;
                  break;
                case 0x60:
                  goto op_semantics_81;
                  break;
                case 0x70:
                  goto op_semantics_82;
                  break;
                case 0x80:
                  goto op_semantics_83;
                  break;
                case 0x90:
                  goto op_semantics_84;
                  break;
                case 0xc0:
                  goto op_semantics_85;
                  break;
                case 0xd0:
                  goto op_semantics_86;
                  break;
                case 0xe0:
                  goto op_semantics_87;
                  break;
                case 0xf0:
                  goto op_semantics_88;
                  break;
                default: UNSUPPORTED(); break;
              }
            break;
          case 0x7f:
              GETBYTE ();
              switch (op[2] & 0xe0)
              {
                case 0x00:
                  goto op_semantics_89;
                  break;
                default: UNSUPPORTED(); break;
              }
            break;
          case 0x80:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_90:
                    {
                      /** 1111 1101 100immmm rsrc rdst	shlr	#%2, %1, %0 */
#line 691 "rx-decode.opc"
                      int immmm AU = op[1] & 0x1f;
#line 691 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 691 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 100immmm rsrc rdst	shlr	#%2, %1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  immmm = 0x%x,", immmm);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("shlr	#%2, %1, %0");
#line 691 "rx-decode.opc"
                      ID(shlr); S2C(immmm); SR(rsrc); DR(rdst); F__SZC;
                    
                    /*----------------------------------------------------------------------*/
                    /* ROTATE								*/
                    
                    }
                  break;
              }
            break;
          case 0x81:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_90;
                  break;
              }
            break;
          case 0x82:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_90;
                  break;
              }
            break;
          case 0x83:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_90;
                  break;
              }
            break;
          case 0x84:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_90;
                  break;
              }
            break;
          case 0x85:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_90;
                  break;
              }
            break;
          case 0x86:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_90;
                  break;
              }
            break;
          case 0x87:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_90;
                  break;
              }
            break;
          case 0x88:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_90;
                  break;
              }
            break;
          case 0x89:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_90;
                  break;
              }
            break;
          case 0x8a:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_90;
                  break;
              }
            break;
          case 0x8b:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_90;
                  break;
              }
            break;
          case 0x8c:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_90;
                  break;
              }
            break;
          case 0x8d:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_90;
                  break;
              }
            break;
          case 0x8e:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_90;
                  break;
              }
            break;
          case 0x8f:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_90;
                  break;
              }
            break;
          case 0x90:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_90;
                  break;
              }
            break;
          case 0x91:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_90;
                  break;
              }
            break;
          case 0x92:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_90;
                  break;
              }
            break;
          case 0x93:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_90;
                  break;
              }
            break;
          case 0x94:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_90;
                  break;
              }
            break;
          case 0x95:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_90;
                  break;
              }
            break;
          case 0x96:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_90;
                  break;
              }
            break;
          case 0x97:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_90;
                  break;
              }
            break;
          case 0x98:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_90;
                  break;
              }
            break;
          case 0x99:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_90;
                  break;
              }
            break;
          case 0x9a:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_90;
                  break;
              }
            break;
          case 0x9b:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_90;
                  break;
              }
            break;
          case 0x9c:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_90;
                  break;
              }
            break;
          case 0x9d:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_90;
                  break;
              }
            break;
          case 0x9e:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_90;
                  break;
              }
            break;
          case 0x9f:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_90;
                  break;
              }
            break;
          case 0xa0:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_91:
                    {
                      /** 1111 1101 101immmm rsrc rdst	shar	#%2, %1, %0 */
#line 681 "rx-decode.opc"
                      int immmm AU = op[1] & 0x1f;
#line 681 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 681 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 101immmm rsrc rdst	shar	#%2, %1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  immmm = 0x%x,", immmm);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("shar	#%2, %1, %0");
#line 681 "rx-decode.opc"
                      ID(shar); S2C(immmm); SR(rsrc); DR(rdst); F_0SZC;
                    
                    
                    }
                  break;
              }
            break;
          case 0xa1:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_91;
                  break;
              }
            break;
          case 0xa2:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_91;
                  break;
              }
            break;
          case 0xa3:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_91;
                  break;
              }
            break;
          case 0xa4:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_91;
                  break;
              }
            break;
          case 0xa5:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_91;
                  break;
              }
            break;
          case 0xa6:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_91;
                  break;
              }
            break;
          case 0xa7:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_91;
                  break;
              }
            break;
          case 0xa8:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_91;
                  break;
              }
            break;
          case 0xa9:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_91;
                  break;
              }
            break;
          case 0xaa:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_91;
                  break;
              }
            break;
          case 0xab:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_91;
                  break;
              }
            break;
          case 0xac:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_91;
                  break;
              }
            break;
          case 0xad:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_91;
                  break;
              }
            break;
          case 0xae:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_91;
                  break;
              }
            break;
          case 0xaf:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_91;
                  break;
              }
            break;
          case 0xb0:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_91;
                  break;
              }
            break;
          case 0xb1:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_91;
                  break;
              }
            break;
          case 0xb2:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_91;
                  break;
              }
            break;
          case 0xb3:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_91;
                  break;
              }
            break;
          case 0xb4:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_91;
                  break;
              }
            break;
          case 0xb5:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_91;
                  break;
              }
            break;
          case 0xb6:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_91;
                  break;
              }
            break;
          case 0xb7:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_91;
                  break;
              }
            break;
          case 0xb8:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_91;
                  break;
              }
            break;
          case 0xb9:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_91;
                  break;
              }
            break;
          case 0xba:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_91;
                  break;
              }
            break;
          case 0xbb:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_91;
                  break;
              }
            break;
          case 0xbc:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_91;
                  break;
              }
            break;
          case 0xbd:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_91;
                  break;
              }
            break;
          case 0xbe:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_91;
                  break;
              }
            break;
          case 0xbf:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_91;
                  break;
              }
            break;
          case 0xc0:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_92:
                    {
                      /** 1111 1101 110immmm rsrc rdst	shll	#%2, %1, %0 */
#line 671 "rx-decode.opc"
                      int immmm AU = op[1] & 0x1f;
#line 671 "rx-decode.opc"
                      int rsrc AU = (op[2] >> 4) & 0x0f;
#line 671 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 110immmm rsrc rdst	shll	#%2, %1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  immmm = 0x%x,", immmm);
                          printf ("  rsrc = 0x%x,", rsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("shll	#%2, %1, %0");
#line 671 "rx-decode.opc"
                      ID(shll); S2C(immmm); SR(rsrc); DR(rdst); F_OSZC;
                    
                    
                    }
                  break;
              }
            break;
          case 0xc1:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_92;
                  break;
              }
            break;
          case 0xc2:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_92;
                  break;
              }
            break;
          case 0xc3:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_92;
                  break;
              }
            break;
          case 0xc4:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_92;
                  break;
              }
            break;
          case 0xc5:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_92;
                  break;
              }
            break;
          case 0xc6:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_92;
                  break;
              }
            break;
          case 0xc7:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_92;
                  break;
              }
            break;
          case 0xc8:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_92;
                  break;
              }
            break;
          case 0xc9:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_92;
                  break;
              }
            break;
          case 0xca:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_92;
                  break;
              }
            break;
          case 0xcb:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_92;
                  break;
              }
            break;
          case 0xcc:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_92;
                  break;
              }
            break;
          case 0xcd:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_92;
                  break;
              }
            break;
          case 0xce:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_92;
                  break;
              }
            break;
          case 0xcf:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_92;
                  break;
              }
            break;
          case 0xd0:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_92;
                  break;
              }
            break;
          case 0xd1:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_92;
                  break;
              }
            break;
          case 0xd2:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_92;
                  break;
              }
            break;
          case 0xd3:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_92;
                  break;
              }
            break;
          case 0xd4:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_92;
                  break;
              }
            break;
          case 0xd5:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_92;
                  break;
              }
            break;
          case 0xd6:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_92;
                  break;
              }
            break;
          case 0xd7:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_92;
                  break;
              }
            break;
          case 0xd8:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_92;
                  break;
              }
            break;
          case 0xd9:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_92;
                  break;
              }
            break;
          case 0xda:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_92;
                  break;
              }
            break;
          case 0xdb:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_92;
                  break;
              }
            break;
          case 0xdc:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_92;
                  break;
              }
            break;
          case 0xdd:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_92;
                  break;
              }
            break;
          case 0xde:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_92;
                  break;
              }
            break;
          case 0xdf:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_92;
                  break;
              }
            break;
          case 0xe0:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x00:
                case 0x10:
                case 0x20:
                case 0x30:
                case 0x40:
                case 0x50:
                case 0x60:
                case 0x70:
                case 0x80:
                case 0x90:
                case 0xa0:
                case 0xb0:
                case 0xc0:
                case 0xd0:
                case 0xe0:
                  op_semantics_93:
                    {
                      /** 1111 1101 111 bittt cond rdst	bm%2	#%1, %0%S0 */
#line 945 "rx-decode.opc"
                      int bittt AU = op[1] & 0x1f;
#line 945 "rx-decode.opc"
                      int cond AU = (op[2] >> 4) & 0x0f;
#line 945 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 111 bittt cond rdst	bm%2	#%1, %0%S0 */",
                                 op[0], op[1], op[2]);
                          printf ("  bittt = 0x%x,", bittt);
                          printf ("  cond = 0x%x,", cond);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("bm%2	#%1, %0%S0");
#line 945 "rx-decode.opc"
                      ID(bmcc); BWL(LSIZE); S2cc(cond); SC(bittt); DR(rdst);
                    
                    /*----------------------------------------------------------------------*/
                    /* CONTROL REGISTERS							*/
                    
                    }
                  break;
                case 0xf0:
                  op_semantics_94:
                    {
                      /** 1111 1101 111bittt 1111 rdst	bnot	#%1, %0 */
#line 938 "rx-decode.opc"
                      int bittt AU = op[1] & 0x1f;
#line 938 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1101 111bittt 1111 rdst	bnot	#%1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  bittt = 0x%x,", bittt);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("bnot	#%1, %0");
#line 938 "rx-decode.opc"
                      ID(bnot); BWL(LSIZE); SC(bittt); DR(rdst);
                    
                    
                    }
                  break;
              }
            break;
          case 0xe1:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x00:
                case 0x10:
                case 0x20:
                case 0x30:
                case 0x40:
                case 0x50:
                case 0x60:
                case 0x70:
                case 0x80:
                case 0x90:
                case 0xa0:
                case 0xb0:
                case 0xc0:
                case 0xd0:
                case 0xe0:
                  goto op_semantics_93;
                  break;
                case 0xf0:
                  goto op_semantics_94;
                  break;
              }
            break;
          case 0xe2:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x00:
                case 0x10:
                case 0x20:
                case 0x30:
                case 0x40:
                case 0x50:
                case 0x60:
                case 0x70:
                case 0x80:
                case 0x90:
                case 0xa0:
                case 0xb0:
                case 0xc0:
                case 0xd0:
                case 0xe0:
                  goto op_semantics_93;
                  break;
                case 0xf0:
                  goto op_semantics_94;
                  break;
              }
            break;
          case 0xe3:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x00:
                case 0x10:
                case 0x20:
                case 0x30:
                case 0x40:
                case 0x50:
                case 0x60:
                case 0x70:
                case 0x80:
                case 0x90:
                case 0xa0:
                case 0xb0:
                case 0xc0:
                case 0xd0:
                case 0xe0:
                  goto op_semantics_93;
                  break;
                case 0xf0:
                  goto op_semantics_94;
                  break;
              }
            break;
          case 0xe4:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x00:
                case 0x10:
                case 0x20:
                case 0x30:
                case 0x40:
                case 0x50:
                case 0x60:
                case 0x70:
                case 0x80:
                case 0x90:
                case 0xa0:
                case 0xb0:
                case 0xc0:
                case 0xd0:
                case 0xe0:
                  goto op_semantics_93;
                  break;
                case 0xf0:
                  goto op_semantics_94;
                  break;
              }
            break;
          case 0xe5:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x00:
                case 0x10:
                case 0x20:
                case 0x30:
                case 0x40:
                case 0x50:
                case 0x60:
                case 0x70:
                case 0x80:
                case 0x90:
                case 0xa0:
                case 0xb0:
                case 0xc0:
                case 0xd0:
                case 0xe0:
                  goto op_semantics_93;
                  break;
                case 0xf0:
                  goto op_semantics_94;
                  break;
              }
            break;
          case 0xe6:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x00:
                case 0x10:
                case 0x20:
                case 0x30:
                case 0x40:
                case 0x50:
                case 0x60:
                case 0x70:
                case 0x80:
                case 0x90:
                case 0xa0:
                case 0xb0:
                case 0xc0:
                case 0xd0:
                case 0xe0:
                  goto op_semantics_93;
                  break;
                case 0xf0:
                  goto op_semantics_94;
                  break;
              }
            break;
          case 0xe7:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x00:
                case 0x10:
                case 0x20:
                case 0x30:
                case 0x40:
                case 0x50:
                case 0x60:
                case 0x70:
                case 0x80:
                case 0x90:
                case 0xa0:
                case 0xb0:
                case 0xc0:
                case 0xd0:
                case 0xe0:
                  goto op_semantics_93;
                  break;
                case 0xf0:
                  goto op_semantics_94;
                  break;
              }
            break;
          case 0xe8:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x00:
                case 0x10:
                case 0x20:
                case 0x30:
                case 0x40:
                case 0x50:
                case 0x60:
                case 0x70:
                case 0x80:
                case 0x90:
                case 0xa0:
                case 0xb0:
                case 0xc0:
                case 0xd0:
                case 0xe0:
                  goto op_semantics_93;
                  break;
                case 0xf0:
                  goto op_semantics_94;
                  break;
              }
            break;
          case 0xe9:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x00:
                case 0x10:
                case 0x20:
                case 0x30:
                case 0x40:
                case 0x50:
                case 0x60:
                case 0x70:
                case 0x80:
                case 0x90:
                case 0xa0:
                case 0xb0:
                case 0xc0:
                case 0xd0:
                case 0xe0:
                  goto op_semantics_93;
                  break;
                case 0xf0:
                  goto op_semantics_94;
                  break;
              }
            break;
          case 0xea:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x00:
                case 0x10:
                case 0x20:
                case 0x30:
                case 0x40:
                case 0x50:
                case 0x60:
                case 0x70:
                case 0x80:
                case 0x90:
                case 0xa0:
                case 0xb0:
                case 0xc0:
                case 0xd0:
                case 0xe0:
                  goto op_semantics_93;
                  break;
                case 0xf0:
                  goto op_semantics_94;
                  break;
              }
            break;
          case 0xeb:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x00:
                case 0x10:
                case 0x20:
                case 0x30:
                case 0x40:
                case 0x50:
                case 0x60:
                case 0x70:
                case 0x80:
                case 0x90:
                case 0xa0:
                case 0xb0:
                case 0xc0:
                case 0xd0:
                case 0xe0:
                  goto op_semantics_93;
                  break;
                case 0xf0:
                  goto op_semantics_94;
                  break;
              }
            break;
          case 0xec:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x00:
                case 0x10:
                case 0x20:
                case 0x30:
                case 0x40:
                case 0x50:
                case 0x60:
                case 0x70:
                case 0x80:
                case 0x90:
                case 0xa0:
                case 0xb0:
                case 0xc0:
                case 0xd0:
                case 0xe0:
                  goto op_semantics_93;
                  break;
                case 0xf0:
                  goto op_semantics_94;
                  break;
              }
            break;
          case 0xed:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x00:
                case 0x10:
                case 0x20:
                case 0x30:
                case 0x40:
                case 0x50:
                case 0x60:
                case 0x70:
                case 0x80:
                case 0x90:
                case 0xa0:
                case 0xb0:
                case 0xc0:
                case 0xd0:
                case 0xe0:
                  goto op_semantics_93;
                  break;
                case 0xf0:
                  goto op_semantics_94;
                  break;
              }
            break;
          case 0xee:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x00:
                case 0x10:
                case 0x20:
                case 0x30:
                case 0x40:
                case 0x50:
                case 0x60:
                case 0x70:
                case 0x80:
                case 0x90:
                case 0xa0:
                case 0xb0:
                case 0xc0:
                case 0xd0:
                case 0xe0:
                  goto op_semantics_93;
                  break;
                case 0xf0:
                  goto op_semantics_94;
                  break;
              }
            break;
          case 0xef:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x00:
                case 0x10:
                case 0x20:
                case 0x30:
                case 0x40:
                case 0x50:
                case 0x60:
                case 0x70:
                case 0x80:
                case 0x90:
                case 0xa0:
                case 0xb0:
                case 0xc0:
                case 0xd0:
                case 0xe0:
                  goto op_semantics_93;
                  break;
                case 0xf0:
                  goto op_semantics_94;
                  break;
              }
            break;
          case 0xf0:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x00:
                case 0x10:
                case 0x20:
                case 0x30:
                case 0x40:
                case 0x50:
                case 0x60:
                case 0x70:
                case 0x80:
                case 0x90:
                case 0xa0:
                case 0xb0:
                case 0xc0:
                case 0xd0:
                case 0xe0:
                  goto op_semantics_93;
                  break;
                case 0xf0:
                  goto op_semantics_94;
                  break;
              }
            break;
          case 0xf1:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x00:
                case 0x10:
                case 0x20:
                case 0x30:
                case 0x40:
                case 0x50:
                case 0x60:
                case 0x70:
                case 0x80:
                case 0x90:
                case 0xa0:
                case 0xb0:
                case 0xc0:
                case 0xd0:
                case 0xe0:
                  goto op_semantics_93;
                  break;
                case 0xf0:
                  goto op_semantics_94;
                  break;
              }
            break;
          case 0xf2:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x00:
                case 0x10:
                case 0x20:
                case 0x30:
                case 0x40:
                case 0x50:
                case 0x60:
                case 0x70:
                case 0x80:
                case 0x90:
                case 0xa0:
                case 0xb0:
                case 0xc0:
                case 0xd0:
                case 0xe0:
                  goto op_semantics_93;
                  break;
                case 0xf0:
                  goto op_semantics_94;
                  break;
              }
            break;
          case 0xf3:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x00:
                case 0x10:
                case 0x20:
                case 0x30:
                case 0x40:
                case 0x50:
                case 0x60:
                case 0x70:
                case 0x80:
                case 0x90:
                case 0xa0:
                case 0xb0:
                case 0xc0:
                case 0xd0:
                case 0xe0:
                  goto op_semantics_93;
                  break;
                case 0xf0:
                  goto op_semantics_94;
                  break;
              }
            break;
          case 0xf4:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x00:
                case 0x10:
                case 0x20:
                case 0x30:
                case 0x40:
                case 0x50:
                case 0x60:
                case 0x70:
                case 0x80:
                case 0x90:
                case 0xa0:
                case 0xb0:
                case 0xc0:
                case 0xd0:
                case 0xe0:
                  goto op_semantics_93;
                  break;
                case 0xf0:
                  goto op_semantics_94;
                  break;
              }
            break;
          case 0xf5:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x00:
                case 0x10:
                case 0x20:
                case 0x30:
                case 0x40:
                case 0x50:
                case 0x60:
                case 0x70:
                case 0x80:
                case 0x90:
                case 0xa0:
                case 0xb0:
                case 0xc0:
                case 0xd0:
                case 0xe0:
                  goto op_semantics_93;
                  break;
                case 0xf0:
                  goto op_semantics_94;
                  break;
              }
            break;
          case 0xf6:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x00:
                case 0x10:
                case 0x20:
                case 0x30:
                case 0x40:
                case 0x50:
                case 0x60:
                case 0x70:
                case 0x80:
                case 0x90:
                case 0xa0:
                case 0xb0:
                case 0xc0:
                case 0xd0:
                case 0xe0:
                  goto op_semantics_93;
                  break;
                case 0xf0:
                  goto op_semantics_94;
                  break;
              }
            break;
          case 0xf7:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x00:
                case 0x10:
                case 0x20:
                case 0x30:
                case 0x40:
                case 0x50:
                case 0x60:
                case 0x70:
                case 0x80:
                case 0x90:
                case 0xa0:
                case 0xb0:
                case 0xc0:
                case 0xd0:
                case 0xe0:
                  goto op_semantics_93;
                  break;
                case 0xf0:
                  goto op_semantics_94;
                  break;
              }
            break;
          case 0xf8:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x00:
                case 0x10:
                case 0x20:
                case 0x30:
                case 0x40:
                case 0x50:
                case 0x60:
                case 0x70:
                case 0x80:
                case 0x90:
                case 0xa0:
                case 0xb0:
                case 0xc0:
                case 0xd0:
                case 0xe0:
                  goto op_semantics_93;
                  break;
                case 0xf0:
                  goto op_semantics_94;
                  break;
              }
            break;
          case 0xf9:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x00:
                case 0x10:
                case 0x20:
                case 0x30:
                case 0x40:
                case 0x50:
                case 0x60:
                case 0x70:
                case 0x80:
                case 0x90:
                case 0xa0:
                case 0xb0:
                case 0xc0:
                case 0xd0:
                case 0xe0:
                  goto op_semantics_93;
                  break;
                case 0xf0:
                  goto op_semantics_94;
                  break;
              }
            break;
          case 0xfa:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x00:
                case 0x10:
                case 0x20:
                case 0x30:
                case 0x40:
                case 0x50:
                case 0x60:
                case 0x70:
                case 0x80:
                case 0x90:
                case 0xa0:
                case 0xb0:
                case 0xc0:
                case 0xd0:
                case 0xe0:
                  goto op_semantics_93;
                  break;
                case 0xf0:
                  goto op_semantics_94;
                  break;
              }
            break;
          case 0xfb:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x00:
                case 0x10:
                case 0x20:
                case 0x30:
                case 0x40:
                case 0x50:
                case 0x60:
                case 0x70:
                case 0x80:
                case 0x90:
                case 0xa0:
                case 0xb0:
                case 0xc0:
                case 0xd0:
                case 0xe0:
                  goto op_semantics_93;
                  break;
                case 0xf0:
                  goto op_semantics_94;
                  break;
              }
            break;
          case 0xfc:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x00:
                case 0x10:
                case 0x20:
                case 0x30:
                case 0x40:
                case 0x50:
                case 0x60:
                case 0x70:
                case 0x80:
                case 0x90:
                case 0xa0:
                case 0xb0:
                case 0xc0:
                case 0xd0:
                case 0xe0:
                  goto op_semantics_93;
                  break;
                case 0xf0:
                  goto op_semantics_94;
                  break;
              }
            break;
          case 0xfd:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x00:
                case 0x10:
                case 0x20:
                case 0x30:
                case 0x40:
                case 0x50:
                case 0x60:
                case 0x70:
                case 0x80:
                case 0x90:
                case 0xa0:
                case 0xb0:
                case 0xc0:
                case 0xd0:
                case 0xe0:
                  goto op_semantics_93;
                  break;
                case 0xf0:
                  goto op_semantics_94;
                  break;
              }
            break;
          case 0xfe:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x00:
                case 0x10:
                case 0x20:
                case 0x30:
                case 0x40:
                case 0x50:
                case 0x60:
                case 0x70:
                case 0x80:
                case 0x90:
                case 0xa0:
                case 0xb0:
                case 0xc0:
                case 0xd0:
                case 0xe0:
                  goto op_semantics_93;
                  break;
                case 0xf0:
                  goto op_semantics_94;
                  break;
              }
            break;
          case 0xff:
              GETBYTE ();
              switch (op[2] & 0xf0)
              {
                case 0x00:
                case 0x10:
                case 0x20:
                case 0x30:
                case 0x40:
                case 0x50:
                case 0x60:
                case 0x70:
                case 0x80:
                case 0x90:
                case 0xa0:
                case 0xb0:
                case 0xc0:
                case 0xd0:
                case 0xe0:
                  goto op_semantics_93;
                  break;
                case 0xf0:
                  goto op_semantics_94;
                  break;
              }
            break;
          default: UNSUPPORTED(); break;
        }
      break;
    case 0xfe:
        GETBYTE ();
        switch (op[1] & 0xff)
        {
          case 0x00:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_95:
                    {
                      /** 1111 1110 00sz isrc bsrc rdst	mov%s	%0, [%1, %2] */
#line 335 "rx-decode.opc"
                      int sz AU = (op[1] >> 4) & 0x03;
#line 335 "rx-decode.opc"
                      int isrc AU = op[1] & 0x0f;
#line 335 "rx-decode.opc"
                      int bsrc AU = (op[2] >> 4) & 0x0f;
#line 335 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1110 00sz isrc bsrc rdst	mov%s	%0, [%1, %2] */",
                                 op[0], op[1], op[2]);
                          printf ("  sz = 0x%x,", sz);
                          printf ("  isrc = 0x%x,", isrc);
                          printf ("  bsrc = 0x%x,", bsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("mov%s	%0, [%1, %2]");
#line 335 "rx-decode.opc"
                      ID(movbir); sBWL(sz); DR(rdst); SRR(isrc); S2R(bsrc); F_____;
                    
                    }
                  break;
              }
            break;
          case 0x01:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x02:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x03:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x04:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x05:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x06:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x07:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x08:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x09:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x0a:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x0b:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x0c:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x0d:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x0e:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x0f:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x10:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x11:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x12:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x13:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x14:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x15:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x16:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x17:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x18:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x19:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x1a:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x1b:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x1c:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x1d:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x1e:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x1f:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x20:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x21:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x22:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x23:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x24:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x25:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x26:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x27:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x28:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x29:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x2a:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x2b:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x2c:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x2d:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x2e:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x2f:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_95;
                  break;
              }
            break;
          case 0x40:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_96:
                    {
                      /** 1111 1110 01sz isrc bsrc rdst	mov%s	[%1, %2], %0 */
#line 332 "rx-decode.opc"
                      int sz AU = (op[1] >> 4) & 0x03;
#line 332 "rx-decode.opc"
                      int isrc AU = op[1] & 0x0f;
#line 332 "rx-decode.opc"
                      int bsrc AU = (op[2] >> 4) & 0x0f;
#line 332 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1110 01sz isrc bsrc rdst	mov%s	[%1, %2], %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  sz = 0x%x,", sz);
                          printf ("  isrc = 0x%x,", isrc);
                          printf ("  bsrc = 0x%x,", bsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("mov%s	[%1, %2], %0");
#line 332 "rx-decode.opc"
                      ID(movbi); sBWL(sz); DR(rdst); SRR(isrc); S2R(bsrc); F_____;
                    
                    }
                  break;
              }
            break;
          case 0x41:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x42:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x43:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x44:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x45:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x46:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x47:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x48:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x49:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x4a:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x4b:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x4c:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x4d:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x4e:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x4f:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x50:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x51:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x52:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x53:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x54:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x55:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x56:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x57:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x58:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x59:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x5a:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x5b:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x5c:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x5d:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x5e:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x5f:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x60:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x61:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x62:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x63:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x64:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x65:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x66:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x67:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x68:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x69:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x6a:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x6b:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x6c:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x6d:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x6e:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0x6f:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_96;
                  break;
              }
            break;
          case 0xc0:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_97:
                    {
                      /** 1111 1110 11sz isrc bsrc rdst	movu%s	[%1, %2], %0 */
#line 338 "rx-decode.opc"
                      int sz AU = (op[1] >> 4) & 0x03;
#line 338 "rx-decode.opc"
                      int isrc AU = op[1] & 0x0f;
#line 338 "rx-decode.opc"
                      int bsrc AU = (op[2] >> 4) & 0x0f;
#line 338 "rx-decode.opc"
                      int rdst AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1110 11sz isrc bsrc rdst	movu%s	[%1, %2], %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  sz = 0x%x,", sz);
                          printf ("  isrc = 0x%x,", isrc);
                          printf ("  bsrc = 0x%x,", bsrc);
                          printf ("  rdst = 0x%x\n", rdst);
                        }
                      SYNTAX("movu%s	[%1, %2], %0");
#line 338 "rx-decode.opc"
                      ID(movbi); uBWL(sz); DR(rdst); SRR(isrc); S2R(bsrc); F_____;
                    
                    }
                  break;
              }
            break;
          case 0xc1:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xc2:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xc3:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xc4:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xc5:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xc6:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xc7:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xc8:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xc9:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xca:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xcb:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xcc:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xcd:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xce:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xcf:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xd0:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xd1:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xd2:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xd3:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xd4:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xd5:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xd6:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xd7:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xd8:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xd9:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xda:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xdb:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xdc:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xdd:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xde:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xdf:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xe0:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xe1:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xe2:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xe3:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xe4:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xe5:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xe6:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xe7:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xe8:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xe9:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xea:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xeb:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xec:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xed:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xee:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          case 0xef:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_97;
                  break;
              }
            break;
          default: UNSUPPORTED(); break;
        }
      break;
    case 0xff:
        GETBYTE ();
        switch (op[1] & 0xff)
        {
          case 0x00:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_98:
                    {
                      /** 1111 1111 0000 rdst srca srcb	sub	%2, %1, %0 */
#line 542 "rx-decode.opc"
                      int rdst AU = op[1] & 0x0f;
#line 542 "rx-decode.opc"
                      int srca AU = (op[2] >> 4) & 0x0f;
#line 542 "rx-decode.opc"
                      int srcb AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1111 0000 rdst srca srcb	sub	%2, %1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  rdst = 0x%x,", rdst);
                          printf ("  srca = 0x%x,", srca);
                          printf ("  srcb = 0x%x\n", srcb);
                        }
                      SYNTAX("sub	%2, %1, %0");
#line 542 "rx-decode.opc"
                      ID(sub); DR(rdst); SR(srcb); S2R(srca); F_OSZC;
                    
                    /*----------------------------------------------------------------------*/
                    /* SBB									*/
                    
                    }
                  break;
              }
            break;
          case 0x01:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_98;
                  break;
              }
            break;
          case 0x02:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_98;
                  break;
              }
            break;
          case 0x03:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_98;
                  break;
              }
            break;
          case 0x04:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_98;
                  break;
              }
            break;
          case 0x05:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_98;
                  break;
              }
            break;
          case 0x06:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_98;
                  break;
              }
            break;
          case 0x07:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_98;
                  break;
              }
            break;
          case 0x08:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_98;
                  break;
              }
            break;
          case 0x09:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_98;
                  break;
              }
            break;
          case 0x0a:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_98;
                  break;
              }
            break;
          case 0x0b:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_98;
                  break;
              }
            break;
          case 0x0c:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_98;
                  break;
              }
            break;
          case 0x0d:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_98;
                  break;
              }
            break;
          case 0x0e:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_98;
                  break;
              }
            break;
          case 0x0f:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_98;
                  break;
              }
            break;
          case 0x20:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_99:
                    {
                      /** 1111 1111 0010 rdst srca srcb	add	%2, %1, %0 */
#line 509 "rx-decode.opc"
                      int rdst AU = op[1] & 0x0f;
#line 509 "rx-decode.opc"
                      int srca AU = (op[2] >> 4) & 0x0f;
#line 509 "rx-decode.opc"
                      int srcb AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1111 0010 rdst srca srcb	add	%2, %1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  rdst = 0x%x,", rdst);
                          printf ("  srca = 0x%x,", srca);
                          printf ("  srcb = 0x%x\n", srcb);
                        }
                      SYNTAX("add	%2, %1, %0");
#line 509 "rx-decode.opc"
                      ID(add); DR(rdst); SR(srcb); S2R(srca); F_OSZC;
                    
                    /*----------------------------------------------------------------------*/
                    /* CMP									*/
                    
                    }
                  break;
              }
            break;
          case 0x21:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_99;
                  break;
              }
            break;
          case 0x22:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_99;
                  break;
              }
            break;
          case 0x23:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_99;
                  break;
              }
            break;
          case 0x24:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_99;
                  break;
              }
            break;
          case 0x25:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_99;
                  break;
              }
            break;
          case 0x26:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_99;
                  break;
              }
            break;
          case 0x27:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_99;
                  break;
              }
            break;
          case 0x28:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_99;
                  break;
              }
            break;
          case 0x29:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_99;
                  break;
              }
            break;
          case 0x2a:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_99;
                  break;
              }
            break;
          case 0x2b:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_99;
                  break;
              }
            break;
          case 0x2c:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_99;
                  break;
              }
            break;
          case 0x2d:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_99;
                  break;
              }
            break;
          case 0x2e:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_99;
                  break;
              }
            break;
          case 0x2f:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_99;
                  break;
              }
            break;
          case 0x30:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_100:
                    {
                      /** 1111 1111 0011 rdst srca srcb	mul 	%2, %1, %0 */
#line 611 "rx-decode.opc"
                      int rdst AU = op[1] & 0x0f;
#line 611 "rx-decode.opc"
                      int srca AU = (op[2] >> 4) & 0x0f;
#line 611 "rx-decode.opc"
                      int srcb AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1111 0011 rdst srca srcb	mul 	%2, %1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  rdst = 0x%x,", rdst);
                          printf ("  srca = 0x%x,", srca);
                          printf ("  srcb = 0x%x\n", srcb);
                        }
                      SYNTAX("mul 	%2, %1, %0");
#line 611 "rx-decode.opc"
                      ID(mul); DR(rdst); SR(srcb); S2R(srca); F_____;
                    
                    /*----------------------------------------------------------------------*/
                    /* EMUL									*/
                    
                    }
                  break;
              }
            break;
          case 0x31:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_100;
                  break;
              }
            break;
          case 0x32:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_100;
                  break;
              }
            break;
          case 0x33:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_100;
                  break;
              }
            break;
          case 0x34:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_100;
                  break;
              }
            break;
          case 0x35:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_100;
                  break;
              }
            break;
          case 0x36:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_100;
                  break;
              }
            break;
          case 0x37:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_100;
                  break;
              }
            break;
          case 0x38:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_100;
                  break;
              }
            break;
          case 0x39:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_100;
                  break;
              }
            break;
          case 0x3a:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_100;
                  break;
              }
            break;
          case 0x3b:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_100;
                  break;
              }
            break;
          case 0x3c:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_100;
                  break;
              }
            break;
          case 0x3d:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_100;
                  break;
              }
            break;
          case 0x3e:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_100;
                  break;
              }
            break;
          case 0x3f:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_100;
                  break;
              }
            break;
          case 0x40:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_101:
                    {
                      /** 1111 1111 0100 rdst srca srcb	and	%2, %1, %0 */
#line 419 "rx-decode.opc"
                      int rdst AU = op[1] & 0x0f;
#line 419 "rx-decode.opc"
                      int srca AU = (op[2] >> 4) & 0x0f;
#line 419 "rx-decode.opc"
                      int srcb AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1111 0100 rdst srca srcb	and	%2, %1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  rdst = 0x%x,", rdst);
                          printf ("  srca = 0x%x,", srca);
                          printf ("  srcb = 0x%x\n", srcb);
                        }
                      SYNTAX("and	%2, %1, %0");
#line 419 "rx-decode.opc"
                      ID(and); DR(rdst); SR(srcb); S2R(srca); F__SZ_;
                    
                    /*----------------------------------------------------------------------*/
                    /* OR									*/
                    
                    }
                  break;
              }
            break;
          case 0x41:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_101;
                  break;
              }
            break;
          case 0x42:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_101;
                  break;
              }
            break;
          case 0x43:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_101;
                  break;
              }
            break;
          case 0x44:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_101;
                  break;
              }
            break;
          case 0x45:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_101;
                  break;
              }
            break;
          case 0x46:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_101;
                  break;
              }
            break;
          case 0x47:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_101;
                  break;
              }
            break;
          case 0x48:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_101;
                  break;
              }
            break;
          case 0x49:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_101;
                  break;
              }
            break;
          case 0x4a:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_101;
                  break;
              }
            break;
          case 0x4b:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_101;
                  break;
              }
            break;
          case 0x4c:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_101;
                  break;
              }
            break;
          case 0x4d:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_101;
                  break;
              }
            break;
          case 0x4e:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_101;
                  break;
              }
            break;
          case 0x4f:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_101;
                  break;
              }
            break;
          case 0x50:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  op_semantics_102:
                    {
                      /** 1111 1111 0101 rdst srca srcb	or	%2, %1, %0 */
#line 437 "rx-decode.opc"
                      int rdst AU = op[1] & 0x0f;
#line 437 "rx-decode.opc"
                      int srca AU = (op[2] >> 4) & 0x0f;
#line 437 "rx-decode.opc"
                      int srcb AU = op[2] & 0x0f;
                      if (trace)
                        {
                          printf ("\033[33m%s\033[0m  %02x %02x %02x\n",
                                 "/** 1111 1111 0101 rdst srca srcb	or	%2, %1, %0 */",
                                 op[0], op[1], op[2]);
                          printf ("  rdst = 0x%x,", rdst);
                          printf ("  srca = 0x%x,", srca);
                          printf ("  srcb = 0x%x\n", srcb);
                        }
                      SYNTAX("or	%2, %1, %0");
#line 437 "rx-decode.opc"
                      ID(or); DR(rdst); SR(srcb); S2R(srca); F__SZ_;
                    
                    /*----------------------------------------------------------------------*/
                    /* XOR									*/
                    
                    }
                  break;
              }
            break;
          case 0x51:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_102;
                  break;
              }
            break;
          case 0x52:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_102;
                  break;
              }
            break;
          case 0x53:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_102;
                  break;
              }
            break;
          case 0x54:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_102;
                  break;
              }
            break;
          case 0x55:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_102;
                  break;
              }
            break;
          case 0x56:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_102;
                  break;
              }
            break;
          case 0x57:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_102;
                  break;
              }
            break;
          case 0x58:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_102;
                  break;
              }
            break;
          case 0x59:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_102;
                  break;
              }
            break;
          case 0x5a:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_102;
                  break;
              }
            break;
          case 0x5b:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_102;
                  break;
              }
            break;
          case 0x5c:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_102;
                  break;
              }
            break;
          case 0x5d:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_102;
                  break;
              }
            break;
          case 0x5e:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_102;
                  break;
              }
            break;
          case 0x5f:
              GETBYTE ();
              switch (op[2] & 0x00)
              {
                case 0x00:
                  goto op_semantics_102;
                  break;
              }
            break;
          default: UNSUPPORTED(); break;
        }
      break;
    default: UNSUPPORTED(); break;
  }
#line 1002 "rx-decode.opc"

  return rx->n_bytes;
}
@


1.13
log
@* rx-decode.opc (rx_decode_opcode): Bit operations on
registers are 32-bit operations, not 8-bit operations.
* rx-decode.c: Regenerate.
@
text
@d6343 1
a6343 1
                if (ss == 3 && sz == 2 && rsrc == 0 && rdst == 0)
@


1.12
log
@	* po/POTFILES.in: Regenerate.
	* rl78-decode.c: Regenerate.
	* rx-decode.c: Regenerate.
@
text
@d294 1
a294 1
#line 976 "rx-decode.opc"
d309 1
a309 1
#line 979 "rx-decode.opc"
d4837 1
a4837 1
#line 982 "rx-decode.opc"
d4849 1
a4849 1
#line 949 "rx-decode.opc"
d4859 1
a4859 1
#line 949 "rx-decode.opc"
d4916 1
a4916 1
#line 900 "rx-decode.opc"
d4918 1
a4918 1
#line 900 "rx-decode.opc"
d4920 1
a4920 1
#line 900 "rx-decode.opc"
d4932 1
a4932 1
#line 900 "rx-decode.opc"
d4957 1
a4957 1
#line 910 "rx-decode.opc"
d4959 1
a4959 1
#line 910 "rx-decode.opc"
d4961 1
a4961 1
#line 910 "rx-decode.opc"
d4973 1
a4973 1
#line 910 "rx-decode.opc"
d4998 1
a4998 1
#line 920 "rx-decode.opc"
d5000 1
a5000 1
#line 920 "rx-decode.opc"
d5002 1
a5002 1
#line 920 "rx-decode.opc"
d5014 1
a5014 1
#line 920 "rx-decode.opc"
d5188 1
a5188 1
#line 955 "rx-decode.opc"
d5198 1
a5198 1
#line 955 "rx-decode.opc"
d5207 1
a5207 1
#line 952 "rx-decode.opc"
d5217 1
a5217 1
#line 952 "rx-decode.opc"
d5536 1
a5536 1
#line 970 "rx-decode.opc"
d5551 1
a5551 1
#line 973 "rx-decode.opc"
d5566 1
a5566 1
#line 985 "rx-decode.opc"
d5592 1
a5592 1
#line 946 "rx-decode.opc"
d5602 1
a5602 1
#line 946 "rx-decode.opc"
d5625 1
a5625 1
#line 943 "rx-decode.opc"
d5635 1
a5635 1
#line 943 "rx-decode.opc"
d6821 1
a6821 1
#line 904 "rx-decode.opc"
d6823 1
a6823 1
#line 904 "rx-decode.opc"
d6825 1
a6825 1
#line 904 "rx-decode.opc"
d6837 1
a6837 1
#line 904 "rx-decode.opc"
d6889 1
a6889 1
#line 914 "rx-decode.opc"
d6891 1
a6891 1
#line 914 "rx-decode.opc"
d6893 1
a6893 1
#line 914 "rx-decode.opc"
d6905 1
a6905 1
#line 914 "rx-decode.opc"
d7820 2
d7862 1
a7862 1
#line 907 "rx-decode.opc"
d7864 1
a7864 1
#line 907 "rx-decode.opc"
d7866 1
a7866 1
#line 907 "rx-decode.opc"
d7878 1
a7878 1
#line 907 "rx-decode.opc"
d7880 2
d7922 1
a7922 1
#line 917 "rx-decode.opc"
d7924 1
a7924 1
#line 917 "rx-decode.opc"
d7926 1
a7926 1
#line 917 "rx-decode.opc"
d7938 1
a7938 1
#line 917 "rx-decode.opc"
d7940 2
d7982 1
a7982 1
#line 927 "rx-decode.opc"
d7984 1
a7984 1
#line 927 "rx-decode.opc"
d7986 1
a7986 1
#line 927 "rx-decode.opc"
d7998 1
a7998 1
#line 927 "rx-decode.opc"
d8000 2
d8448 1
a8448 1
#line 991 "rx-decode.opc"
d8450 1
a8450 1
#line 991 "rx-decode.opc"
d8452 1
a8452 1
#line 991 "rx-decode.opc"
d8454 1
a8454 1
#line 991 "rx-decode.opc"
d8467 1
a8467 1
#line 991 "rx-decode.opc"
d8595 1
a8595 1
#line 934 "rx-decode.opc"
d8597 1
a8597 1
#line 934 "rx-decode.opc"
d8599 1
a8599 1
#line 934 "rx-decode.opc"
d8601 1
a8601 1
#line 934 "rx-decode.opc"
d8614 1
a8614 1
#line 934 "rx-decode.opc"
d8623 1
a8623 1
#line 924 "rx-decode.opc"
d8625 1
a8625 1
#line 924 "rx-decode.opc"
d8627 1
a8627 1
#line 924 "rx-decode.opc"
d8639 1
a8639 1
#line 924 "rx-decode.opc"
d10142 1
a10142 1
#line 961 "rx-decode.opc"
d10144 1
a10144 1
#line 961 "rx-decode.opc"
d10146 1
a10146 1
#line 961 "rx-decode.opc"
d10158 1
a10158 1
#line 961 "rx-decode.opc"
d10182 1
a10182 1
#line 964 "rx-decode.opc"
d10184 1
a10184 1
#line 964 "rx-decode.opc"
d10186 1
a10186 1
#line 964 "rx-decode.opc"
d10198 1
a10198 1
#line 964 "rx-decode.opc"
d10654 1
a10654 1
#line 958 "rx-decode.opc"
d10656 1
a10656 1
#line 958 "rx-decode.opc"
d10667 1
a10667 1
#line 958 "rx-decode.opc"
d11782 1
a11782 1
#line 937 "rx-decode.opc"
d11784 1
a11784 1
#line 937 "rx-decode.opc"
d11786 1
a11786 1
#line 937 "rx-decode.opc"
d11798 1
a11798 1
#line 937 "rx-decode.opc"
d11810 1
a11810 1
#line 930 "rx-decode.opc"
d11812 1
a11812 1
#line 930 "rx-decode.opc"
d11823 1
a11823 1
#line 930 "rx-decode.opc"
d14872 1
a14872 1
#line 994 "rx-decode.opc"
@


1.11
log
@Add copyright notices
@
text
@d294 1
a294 1
#line 955 "rx-decode.opc"
d309 1
a309 1
#line 958 "rx-decode.opc"
d324 1
a324 1
#line 744 "rx-decode.opc"
d342 1
a342 1
#line 750 "rx-decode.opc"
d360 1
a360 1
#line 722 "rx-decode.opc"
d375 1
a375 1
#line 738 "rx-decode.opc"
d392 1
a392 1
#line 518 "rx-decode.opc"
d394 1
a394 1
#line 518 "rx-decode.opc"
d396 1
a396 1
#line 518 "rx-decode.opc"
d398 1
a398 1
#line 518 "rx-decode.opc"
d411 1
a411 1
#line 518 "rx-decode.opc"
d453 1
a453 1
#line 506 "rx-decode.opc"
d455 1
a455 1
#line 506 "rx-decode.opc"
d457 1
a457 1
#line 506 "rx-decode.opc"
d459 1
a459 1
#line 506 "rx-decode.opc"
d472 1
a472 1
#line 506 "rx-decode.opc"
d517 1
a517 1
#line 482 "rx-decode.opc"
d519 1
a519 1
#line 482 "rx-decode.opc"
d521 1
a521 1
#line 482 "rx-decode.opc"
d523 1
a523 1
#line 482 "rx-decode.opc"
d536 1
a536 1
#line 482 "rx-decode.opc"
d578 1
a578 1
#line 587 "rx-decode.opc"
d580 1
a580 1
#line 587 "rx-decode.opc"
d582 1
a582 1
#line 587 "rx-decode.opc"
d584 1
a584 1
#line 587 "rx-decode.opc"
d597 1
a597 1
#line 587 "rx-decode.opc"
d639 1
a639 1
#line 395 "rx-decode.opc"
d641 1
a641 1
#line 395 "rx-decode.opc"
d643 1
a643 1
#line 395 "rx-decode.opc"
d645 1
a645 1
#line 395 "rx-decode.opc"
d658 1
a658 1
#line 395 "rx-decode.opc"
d700 1
a700 1
#line 413 "rx-decode.opc"
d702 1
a702 1
#line 413 "rx-decode.opc"
d704 1
a704 1
#line 413 "rx-decode.opc"
d706 1
a706 1
#line 413 "rx-decode.opc"
d719 1
a719 1
#line 413 "rx-decode.opc"
d765 1
a765 1
#line 531 "rx-decode.opc"
d767 1
a767 1
#line 531 "rx-decode.opc"
d769 1
a769 1
#line 531 "rx-decode.opc"
d771 1
a771 1
#line 531 "rx-decode.opc"
d784 1
a784 1
#line 531 "rx-decode.opc"
d802 1
a802 1
#line 560 "rx-decode.opc"
d804 1
a804 1
#line 560 "rx-decode.opc"
d806 1
a806 1
#line 560 "rx-decode.opc"
d808 1
a808 1
#line 560 "rx-decode.opc"
d821 1
a821 1
#line 560 "rx-decode.opc"
d839 1
a839 1
#line 572 "rx-decode.opc"
d841 1
a841 1
#line 572 "rx-decode.opc"
d843 1
a843 1
#line 572 "rx-decode.opc"
d845 1
a845 1
#line 572 "rx-decode.opc"
d858 1
a858 1
#line 572 "rx-decode.opc"
d876 1
a876 1
#line 602 "rx-decode.opc"
d878 1
a878 1
#line 602 "rx-decode.opc"
d880 1
a880 1
#line 602 "rx-decode.opc"
d882 1
a882 1
#line 602 "rx-decode.opc"
d895 1
a895 1
#line 602 "rx-decode.opc"
d913 1
a913 1
#line 614 "rx-decode.opc"
d915 1
a915 1
#line 614 "rx-decode.opc"
d917 1
a917 1
#line 614 "rx-decode.opc"
d919 1
a919 1
#line 614 "rx-decode.opc"
d932 1
a932 1
#line 614 "rx-decode.opc"
d950 1
a950 1
#line 626 "rx-decode.opc"
d952 1
a952 1
#line 626 "rx-decode.opc"
d954 1
a954 1
#line 626 "rx-decode.opc"
d956 1
a956 1
#line 626 "rx-decode.opc"
d969 1
a969 1
#line 626 "rx-decode.opc"
d987 1
a987 1
#line 638 "rx-decode.opc"
d989 1
a989 1
#line 638 "rx-decode.opc"
d991 1
a991 1
#line 638 "rx-decode.opc"
d993 1
a993 1
#line 638 "rx-decode.opc"
d1006 1
a1006 1
#line 638 "rx-decode.opc"
d1024 1
a1024 1
#line 449 "rx-decode.opc"
d1026 1
a1026 1
#line 449 "rx-decode.opc"
d1028 1
a1028 1
#line 449 "rx-decode.opc"
d1030 1
a1030 1
#line 449 "rx-decode.opc"
d1043 1
a1043 1
#line 449 "rx-decode.opc"
d1061 1
a1061 1
#line 428 "rx-decode.opc"
d1063 1
a1063 1
#line 428 "rx-decode.opc"
d1065 1
a1065 1
#line 428 "rx-decode.opc"
d1067 1
a1067 1
#line 428 "rx-decode.opc"
d1080 1
a1080 1
#line 428 "rx-decode.opc"
d1098 1
a1098 1
#line 362 "rx-decode.opc"
d1100 1
a1100 1
#line 362 "rx-decode.opc"
d1102 1
a1102 1
#line 362 "rx-decode.opc"
d1104 1
a1104 1
#line 362 "rx-decode.opc"
d1117 1
a1117 1
#line 362 "rx-decode.opc"
d1135 1
a1135 1
#line 867 "rx-decode.opc"
d1137 1
a1137 1
#line 867 "rx-decode.opc"
d1139 1
a1139 1
#line 867 "rx-decode.opc"
d1141 1
a1141 1
#line 867 "rx-decode.opc"
d1154 1
a1154 1
#line 867 "rx-decode.opc"
d2362 1
a2362 1
#line 470 "rx-decode.opc"
d2364 1
a2364 1
#line 470 "rx-decode.opc"
d2366 1
a2366 1
#line 470 "rx-decode.opc"
d2378 1
a2378 1
#line 470 "rx-decode.opc"
d3479 1
a3479 1
#line 713 "rx-decode.opc"
d3489 1
a3489 1
#line 713 "rx-decode.opc"
d3512 1
a3512 1
#line 703 "rx-decode.opc"
d3514 1
a3514 1
#line 703 "rx-decode.opc"
d3525 1
a3525 1
#line 703 "rx-decode.opc"
d3547 1
a3547 1
#line 706 "rx-decode.opc"
d3557 1
a3557 1
#line 706 "rx-decode.opc"
d3572 1
a3572 1
#line 716 "rx-decode.opc"
d3587 1
a3587 1
#line 719 "rx-decode.opc"
d3602 1
a3602 1
#line 735 "rx-decode.opc"
d3611 1
a3611 1
#line 709 "rx-decode.opc"
d3621 1
a3621 1
#line 709 "rx-decode.opc"
d3635 1
a3635 1
#line 283 "rx-decode.opc"
d3637 1
a3637 1
#line 283 "rx-decode.opc"
d3639 1
a3639 1
#line 283 "rx-decode.opc"
d3641 1
a3641 1
#line 283 "rx-decode.opc"
d3654 1
a3654 1
#line 283 "rx-decode.opc"
d3686 1
a3686 1
#line 380 "rx-decode.opc"
d3688 1
a3688 1
#line 380 "rx-decode.opc"
d3699 1
a3699 1
#line 380 "rx-decode.opc"
d3717 1
a3717 1
#line 515 "rx-decode.opc"
d3719 1
a3719 1
#line 515 "rx-decode.opc"
d3721 1
a3721 1
#line 515 "rx-decode.opc"
d3733 1
a3733 1
#line 515 "rx-decode.opc"
d3775 1
a3775 1
#line 503 "rx-decode.opc"
d3777 1
a3777 1
#line 503 "rx-decode.opc"
d3779 1
a3779 1
#line 503 "rx-decode.opc"
d3791 1
a3791 1
#line 503 "rx-decode.opc"
d3833 1
a3833 1
#line 479 "rx-decode.opc"
d3835 1
a3835 1
#line 479 "rx-decode.opc"
d3837 1
a3837 1
#line 479 "rx-decode.opc"
d3849 1
a3849 1
#line 479 "rx-decode.opc"
d3891 1
a3891 1
#line 584 "rx-decode.opc"
d3893 1
a3893 1
#line 584 "rx-decode.opc"
d3895 1
a3895 1
#line 584 "rx-decode.opc"
d3907 1
a3907 1
#line 584 "rx-decode.opc"
d3949 1
a3949 1
#line 392 "rx-decode.opc"
d3951 1
a3951 1
#line 392 "rx-decode.opc"
d3953 1
a3953 1
#line 392 "rx-decode.opc"
d3965 1
a3965 1
#line 392 "rx-decode.opc"
d4007 1
a4007 1
#line 410 "rx-decode.opc"
d4009 1
a4009 1
#line 410 "rx-decode.opc"
d4011 1
a4011 1
#line 410 "rx-decode.opc"
d4023 1
a4023 1
#line 410 "rx-decode.opc"
d4065 1
a4065 1
#line 331 "rx-decode.opc"
d4067 1
a4067 1
#line 331 "rx-decode.opc"
d4069 1
a4069 1
#line 331 "rx-decode.opc"
d4071 1
a4071 1
#line 331 "rx-decode.opc"
d4084 1
a4084 1
#line 331 "rx-decode.opc"
d4161 1
a4161 1
#line 512 "rx-decode.opc"
d4163 1
a4163 1
#line 512 "rx-decode.opc"
d4174 1
a4174 1
#line 512 "rx-decode.opc"
d4188 1
a4188 1
#line 494 "rx-decode.opc"
d4190 1
a4190 1
#line 494 "rx-decode.opc"
d4201 1
a4201 1
#line 494 "rx-decode.opc"
d4215 1
a4215 1
#line 476 "rx-decode.opc"
d4217 1
a4217 1
#line 476 "rx-decode.opc"
d4228 1
a4228 1
#line 476 "rx-decode.opc"
d4242 1
a4242 1
#line 578 "rx-decode.opc"
d4244 1
a4244 1
#line 578 "rx-decode.opc"
d4255 1
a4255 1
#line 578 "rx-decode.opc"
d4269 1
a4269 1
#line 386 "rx-decode.opc"
d4271 1
a4271 1
#line 386 "rx-decode.opc"
d4282 1
a4282 1
#line 386 "rx-decode.opc"
d4296 1
a4296 1
#line 404 "rx-decode.opc"
d4298 1
a4298 1
#line 404 "rx-decode.opc"
d4309 1
a4309 1
#line 404 "rx-decode.opc"
d4323 1
a4323 1
#line 280 "rx-decode.opc"
d4325 1
a4325 1
#line 280 "rx-decode.opc"
d4336 1
a4336 1
#line 280 "rx-decode.opc"
d4353 1
a4353 1
#line 377 "rx-decode.opc"
d4366 1
a4366 1
#line 664 "rx-decode.opc"
d4368 1
a4368 1
#line 664 "rx-decode.opc"
d4370 1
a4370 1
#line 664 "rx-decode.opc"
d4382 1
a4382 1
#line 664 "rx-decode.opc"
d4406 1
a4406 1
#line 654 "rx-decode.opc"
d4408 1
a4408 1
#line 654 "rx-decode.opc"
d4410 1
a4410 1
#line 654 "rx-decode.opc"
d4422 1
a4422 1
#line 654 "rx-decode.opc"
d4446 1
a4446 1
#line 644 "rx-decode.opc"
d4448 1
a4448 1
#line 644 "rx-decode.opc"
d4450 1
a4450 1
#line 644 "rx-decode.opc"
d4462 1
a4462 1
#line 644 "rx-decode.opc"
d4485 1
a4485 1
#line 344 "rx-decode.opc"
d4487 1
a4487 1
#line 344 "rx-decode.opc"
d4498 1
a4498 1
#line 344 "rx-decode.opc"
d4512 1
a4512 1
#line 341 "rx-decode.opc"
d4514 1
a4514 1
#line 341 "rx-decode.opc"
d4525 1
a4525 1
#line 341 "rx-decode.opc"
d4540 1
a4540 1
#line 485 "rx-decode.opc"
d4542 1
a4542 1
#line 485 "rx-decode.opc"
d4544 1
a4544 1
#line 485 "rx-decode.opc"
d4556 1
a4556 1
#line 485 "rx-decode.opc"
d4598 1
a4598 1
#line 497 "rx-decode.opc"
d4600 1
a4600 1
#line 497 "rx-decode.opc"
d4611 1
a4611 1
#line 497 "rx-decode.opc"
d4620 1
a4620 1
#line 581 "rx-decode.opc"
d4622 1
a4622 1
#line 581 "rx-decode.opc"
d4633 1
a4633 1
#line 581 "rx-decode.opc"
d4642 1
a4642 1
#line 389 "rx-decode.opc"
d4644 1
a4644 1
#line 389 "rx-decode.opc"
d4655 1
a4655 1
#line 389 "rx-decode.opc"
d4664 1
a4664 1
#line 407 "rx-decode.opc"
d4666 1
a4666 1
#line 407 "rx-decode.opc"
d4677 1
a4677 1
#line 407 "rx-decode.opc"
d4779 1
a4779 1
#line 261 "rx-decode.opc"
d4789 1
a4789 1
#line 261 "rx-decode.opc"
d4812 1
a4812 1
#line 500 "rx-decode.opc"
d4822 1
a4822 1
#line 500 "rx-decode.opc"
d4837 1
a4837 1
#line 961 "rx-decode.opc"
d4849 1
a4849 1
#line 928 "rx-decode.opc"
d4859 1
a4859 1
#line 928 "rx-decode.opc"
d4916 1
a4916 1
#line 879 "rx-decode.opc"
d4918 1
a4918 1
#line 879 "rx-decode.opc"
d4920 1
a4920 1
#line 879 "rx-decode.opc"
d4932 1
a4932 1
#line 879 "rx-decode.opc"
d4957 1
a4957 1
#line 889 "rx-decode.opc"
d4959 1
a4959 1
#line 889 "rx-decode.opc"
d4961 1
a4961 1
#line 889 "rx-decode.opc"
d4973 1
a4973 1
#line 889 "rx-decode.opc"
d4998 1
a4998 1
#line 899 "rx-decode.opc"
d5000 1
a5000 1
#line 899 "rx-decode.opc"
d5002 1
a5002 1
#line 899 "rx-decode.opc"
d5014 1
a5014 1
#line 899 "rx-decode.opc"
d5038 1
a5038 1
#line 434 "rx-decode.opc"
d5048 1
a5048 1
#line 434 "rx-decode.opc"
d5056 1
a5056 1
#line 455 "rx-decode.opc"
d5066 1
a5066 1
#line 455 "rx-decode.opc"
d5074 1
a5074 1
#line 537 "rx-decode.opc"
d5084 1
a5084 1
#line 537 "rx-decode.opc"
d5092 1
a5092 1
#line 819 "rx-decode.opc"
d5102 1
a5102 1
#line 819 "rx-decode.opc"
d5110 1
a5110 1
#line 679 "rx-decode.opc"
d5120 1
a5120 1
#line 679 "rx-decode.opc"
d5128 1
a5128 1
#line 676 "rx-decode.opc"
d5138 1
a5138 1
#line 676 "rx-decode.opc"
d5148 1
a5148 1
#line 350 "rx-decode.opc"
d5150 1
a5150 1
#line 350 "rx-decode.opc"
d5161 1
a5161 1
#line 350 "rx-decode.opc"
d5169 1
a5169 1
#line 347 "rx-decode.opc"
d5179 1
a5179 1
#line 347 "rx-decode.opc"
d5188 1
a5188 1
#line 934 "rx-decode.opc"
d5198 1
a5198 1
#line 934 "rx-decode.opc"
d5207 1
a5207 1
#line 931 "rx-decode.opc"
d5217 1
a5217 1
#line 931 "rx-decode.opc"
d5247 1
a5247 1
#line 729 "rx-decode.opc"
d5257 1
a5257 1
#line 729 "rx-decode.opc"
d5280 1
a5280 1
#line 732 "rx-decode.opc"
d5290 1
a5290 1
#line 732 "rx-decode.opc"
d5313 1
a5313 1
#line 725 "rx-decode.opc"
d5323 1
a5323 1
#line 725 "rx-decode.opc"
d5347 1
a5347 1
#line 741 "rx-decode.opc"
d5357 1
a5357 1
#line 741 "rx-decode.opc"
d5367 1
a5367 1
#line 765 "rx-decode.opc"
d5377 1
a5377 1
#line 765 "rx-decode.opc"
d5392 1
a5392 1
#line 756 "rx-decode.opc"
d5402 1
a5402 1
#line 768 "rx-decode.opc"
d5412 1
a5412 1
#line 768 "rx-decode.opc"
d5427 1
a5427 1
#line 759 "rx-decode.opc"
d5437 1
a5437 1
#line 774 "rx-decode.opc"
d5447 1
a5447 1
#line 774 "rx-decode.opc"
d5465 1
a5465 1
#line 762 "rx-decode.opc"
d5475 1
a5475 1
#line 780 "rx-decode.opc"
d5485 1
a5485 1
#line 780 "rx-decode.opc"
d5503 1
a5503 1
#line 771 "rx-decode.opc"
d5518 1
a5518 1
#line 822 "rx-decode.opc"
d5536 1
a5536 1
#line 949 "rx-decode.opc"
d5551 1
a5551 1
#line 952 "rx-decode.opc"
d5566 1
a5566 1
#line 964 "rx-decode.opc"
d5592 1
a5592 1
#line 925 "rx-decode.opc"
d5602 1
a5602 1
#line 925 "rx-decode.opc"
d5625 1
a5625 1
#line 922 "rx-decode.opc"
d5635 1
a5635 1
#line 922 "rx-decode.opc"
d5651 1
a5651 1
#line 308 "rx-decode.opc"
d5653 1
a5653 1
#line 308 "rx-decode.opc"
d5655 1
a5655 1
#line 308 "rx-decode.opc"
d5657 1
a5657 1
#line 308 "rx-decode.opc"
d5659 1
a5659 1
#line 308 "rx-decode.opc"
d5661 1
a5661 1
#line 308 "rx-decode.opc"
d5676 1
a5676 1
#line 308 "rx-decode.opc"
d5754 1
a5754 1
#line 305 "rx-decode.opc"
d5756 1
a5756 1
#line 305 "rx-decode.opc"
d5758 1
a5758 1
#line 305 "rx-decode.opc"
d5760 1
a5760 1
#line 305 "rx-decode.opc"
d5762 1
a5762 1
#line 305 "rx-decode.opc"
d5764 1
a5764 1
#line 305 "rx-decode.opc"
d5779 1
a5779 1
#line 305 "rx-decode.opc"
d6145 1
a6145 1
#line 328 "rx-decode.opc"
d6147 1
a6147 1
#line 328 "rx-decode.opc"
d6149 1
a6149 1
#line 328 "rx-decode.opc"
d6151 1
a6151 1
#line 328 "rx-decode.opc"
d6153 1
a6153 1
#line 328 "rx-decode.opc"
d6155 1
a6155 1
#line 328 "rx-decode.opc"
d6170 1
a6170 1
#line 328 "rx-decode.opc"
d6320 1
a6320 1
#line 286 "rx-decode.opc"
d6322 1
a6322 1
#line 286 "rx-decode.opc"
d6324 1
a6324 1
#line 286 "rx-decode.opc"
d6326 1
a6326 1
#line 286 "rx-decode.opc"
d6328 1
a6328 1
#line 286 "rx-decode.opc"
d6342 1
a6342 1
#line 286 "rx-decode.opc"
d6796 1
a6796 1
#line 873 "rx-decode.opc"
d6798 1
a6798 1
#line 873 "rx-decode.opc"
d6800 1
a6800 1
#line 873 "rx-decode.opc"
d6812 1
a6812 1
#line 873 "rx-decode.opc"
d6821 1
a6821 1
#line 883 "rx-decode.opc"
d6823 1
a6823 1
#line 883 "rx-decode.opc"
d6825 1
a6825 1
#line 883 "rx-decode.opc"
d6837 1
a6837 1
#line 883 "rx-decode.opc"
d6889 1
a6889 1
#line 893 "rx-decode.opc"
d6891 1
a6891 1
#line 893 "rx-decode.opc"
d6893 1
a6893 1
#line 893 "rx-decode.opc"
d6905 1
a6905 1
#line 893 "rx-decode.opc"
d6914 1
a6914 1
#line 353 "rx-decode.opc"
d6916 1
a6916 1
#line 353 "rx-decode.opc"
d6918 1
a6918 1
#line 353 "rx-decode.opc"
d6930 1
a6930 1
#line 353 "rx-decode.opc"
d6991 1
a6991 1
#line 264 "rx-decode.opc"
d6993 1
a6993 1
#line 264 "rx-decode.opc"
d6995 1
a6995 1
#line 264 "rx-decode.opc"
d6997 1
a6997 1
#line 264 "rx-decode.opc"
d7010 1
a7010 1
#line 264 "rx-decode.opc"
d7068 1
a7068 1
#line 527 "rx-decode.opc"
d7070 1
a7070 1
#line 527 "rx-decode.opc"
d7081 1
a7081 1
#line 527 "rx-decode.opc"
d7096 1
a7096 1
#line 458 "rx-decode.opc"
d7098 1
a7098 1
#line 458 "rx-decode.opc"
d7109 1
a7109 1
#line 458 "rx-decode.opc"
d7126 1
a7126 1
#line 467 "rx-decode.opc"
d7128 1
a7128 1
#line 467 "rx-decode.opc"
d7139 1
a7139 1
#line 467 "rx-decode.opc"
d7153 1
a7153 1
#line 540 "rx-decode.opc"
d7155 1
a7155 1
#line 540 "rx-decode.opc"
d7166 1
a7166 1
#line 540 "rx-decode.opc"
d7184 1
a7184 1
#line 549 "rx-decode.opc"
d7186 1
a7186 1
#line 549 "rx-decode.opc"
d7188 1
a7188 1
#line 549 "rx-decode.opc"
d7200 1
a7200 1
#line 549 "rx-decode.opc"
d7250 1
a7250 1
#line 569 "rx-decode.opc"
d7252 1
a7252 1
#line 569 "rx-decode.opc"
d7254 1
a7254 1
#line 569 "rx-decode.opc"
d7266 1
a7266 1
#line 569 "rx-decode.opc"
d7308 1
a7308 1
#line 599 "rx-decode.opc"
d7310 1
a7310 1
#line 599 "rx-decode.opc"
d7312 1
a7312 1
#line 599 "rx-decode.opc"
d7324 1
a7324 1
#line 599 "rx-decode.opc"
d7366 1
a7366 1
#line 611 "rx-decode.opc"
d7368 1
a7368 1
#line 611 "rx-decode.opc"
d7370 1
a7370 1
#line 611 "rx-decode.opc"
d7382 1
a7382 1
#line 611 "rx-decode.opc"
d7424 1
a7424 1
#line 623 "rx-decode.opc"
d7426 1
a7426 1
#line 623 "rx-decode.opc"
d7428 1
a7428 1
#line 623 "rx-decode.opc"
d7440 1
a7440 1
#line 623 "rx-decode.opc"
d7482 1
a7482 1
#line 635 "rx-decode.opc"
d7484 1
a7484 1
#line 635 "rx-decode.opc"
d7486 1
a7486 1
#line 635 "rx-decode.opc"
d7498 1
a7498 1
#line 635 "rx-decode.opc"
d7540 1
a7540 1
#line 446 "rx-decode.opc"
d7542 1
a7542 1
#line 446 "rx-decode.opc"
d7544 1
a7544 1
#line 446 "rx-decode.opc"
d7556 1
a7556 1
#line 446 "rx-decode.opc"
d7598 1
a7598 1
#line 425 "rx-decode.opc"
d7600 1
a7600 1
#line 425 "rx-decode.opc"
d7602 1
a7602 1
#line 425 "rx-decode.opc"
d7614 1
a7614 1
#line 425 "rx-decode.opc"
d7655 1
a7655 1
#line 437 "rx-decode.opc"
d7657 1
a7657 1
#line 437 "rx-decode.opc"
d7668 1
a7668 1
#line 437 "rx-decode.opc"
d7686 1
a7686 1
#line 359 "rx-decode.opc"
d7688 1
a7688 1
#line 359 "rx-decode.opc"
d7690 1
a7690 1
#line 359 "rx-decode.opc"
d7702 1
a7702 1
#line 359 "rx-decode.opc"
d7744 1
a7744 1
#line 864 "rx-decode.opc"
d7746 1
a7746 1
#line 864 "rx-decode.opc"
d7748 1
a7748 1
#line 864 "rx-decode.opc"
d7760 1
a7760 1
#line 864 "rx-decode.opc"
d7802 1
a7802 1
#line 876 "rx-decode.opc"
d7804 1
a7804 1
#line 876 "rx-decode.opc"
d7806 1
a7806 1
#line 876 "rx-decode.opc"
d7818 1
a7818 1
#line 876 "rx-decode.opc"
d7860 1
a7860 1
#line 886 "rx-decode.opc"
d7862 1
a7862 1
#line 886 "rx-decode.opc"
d7864 1
a7864 1
#line 886 "rx-decode.opc"
d7876 1
a7876 1
#line 886 "rx-decode.opc"
d7918 1
a7918 1
#line 896 "rx-decode.opc"
d7920 1
a7920 1
#line 896 "rx-decode.opc"
d7922 1
a7922 1
#line 896 "rx-decode.opc"
d7934 1
a7934 1
#line 896 "rx-decode.opc"
d7976 1
a7976 1
#line 906 "rx-decode.opc"
d7978 1
a7978 1
#line 906 "rx-decode.opc"
d7980 1
a7980 1
#line 906 "rx-decode.opc"
d7992 1
a7992 1
#line 906 "rx-decode.opc"
d8034 1
a8034 1
#line 843 "rx-decode.opc"
d8036 1
a8036 1
#line 843 "rx-decode.opc"
d8038 1
a8038 1
#line 843 "rx-decode.opc"
d8050 1
a8050 1
#line 843 "rx-decode.opc"
d8092 1
a8092 1
#line 837 "rx-decode.opc"
d8094 1
a8094 1
#line 837 "rx-decode.opc"
d8096 1
a8096 1
#line 837 "rx-decode.opc"
d8108 1
a8108 1
#line 837 "rx-decode.opc"
d8150 1
a8150 1
#line 831 "rx-decode.opc"
d8152 1
a8152 1
#line 831 "rx-decode.opc"
d8154 1
a8154 1
#line 831 "rx-decode.opc"
d8166 1
a8166 1
#line 831 "rx-decode.opc"
d8208 1
a8208 1
#line 852 "rx-decode.opc"
d8210 1
a8210 1
#line 852 "rx-decode.opc"
d8212 1
a8212 1
#line 852 "rx-decode.opc"
d8224 1
a8224 1
#line 852 "rx-decode.opc"
d8266 1
a8266 1
#line 858 "rx-decode.opc"
d8268 1
a8268 1
#line 858 "rx-decode.opc"
d8270 1
a8270 1
#line 858 "rx-decode.opc"
d8282 1
a8282 1
#line 858 "rx-decode.opc"
d8324 1
a8324 1
#line 846 "rx-decode.opc"
d8326 1
a8326 1
#line 846 "rx-decode.opc"
d8328 1
a8328 1
#line 846 "rx-decode.opc"
d8340 1
a8340 1
#line 846 "rx-decode.opc"
d8382 1
a8382 1
#line 861 "rx-decode.opc"
d8384 1
a8384 1
#line 861 "rx-decode.opc"
d8386 1
a8386 1
#line 861 "rx-decode.opc"
d8398 1
a8398 1
#line 861 "rx-decode.opc"
d8440 1
a8440 1
#line 970 "rx-decode.opc"
d8442 1
a8442 1
#line 970 "rx-decode.opc"
d8444 1
a8444 1
#line 970 "rx-decode.opc"
d8446 1
a8446 1
#line 970 "rx-decode.opc"
d8459 1
a8459 1
#line 970 "rx-decode.opc"
d8587 1
a8587 1
#line 913 "rx-decode.opc"
d8589 1
a8589 1
#line 913 "rx-decode.opc"
d8591 1
a8591 1
#line 913 "rx-decode.opc"
d8593 1
a8593 1
#line 913 "rx-decode.opc"
d8606 1
a8606 1
#line 913 "rx-decode.opc"
d8615 1
a8615 1
#line 903 "rx-decode.opc"
d8617 1
a8617 1
#line 903 "rx-decode.opc"
d8619 1
a8619 1
#line 903 "rx-decode.opc"
d8631 1
a8631 1
#line 903 "rx-decode.opc"
d9458 1
a9458 1
#line 786 "rx-decode.opc"
d9460 1
a9460 1
#line 786 "rx-decode.opc"
d9471 1
a9471 1
#line 786 "rx-decode.opc"
d9485 1
a9485 1
#line 789 "rx-decode.opc"
d9487 1
a9487 1
#line 789 "rx-decode.opc"
d9498 1
a9498 1
#line 789 "rx-decode.opc"
d9512 1
a9512 1
#line 792 "rx-decode.opc"
d9514 1
a9514 1
#line 792 "rx-decode.opc"
d9525 1
a9525 1
#line 792 "rx-decode.opc"
d9539 1
a9539 1
#line 795 "rx-decode.opc"
d9541 1
a9541 1
#line 795 "rx-decode.opc"
d9552 1
a9552 1
#line 795 "rx-decode.opc"
d9566 1
a9566 1
#line 798 "rx-decode.opc"
d9576 1
a9576 1
#line 798 "rx-decode.opc"
d9584 1
a9584 1
#line 801 "rx-decode.opc"
d9594 1
a9594 1
#line 801 "rx-decode.opc"
d9609 1
a9609 1
#line 813 "rx-decode.opc"
d9619 1
a9619 1
#line 813 "rx-decode.opc"
d9637 1
a9637 1
#line 804 "rx-decode.opc"
d9647 1
a9647 1
#line 804 "rx-decode.opc"
d9655 1
a9655 1
#line 810 "rx-decode.opc"
d9665 1
a9665 1
#line 810 "rx-decode.opc"
d9673 1
a9673 1
#line 807 "rx-decode.opc"
d9683 1
a9683 1
#line 807 "rx-decode.opc"
d9699 1
a9699 1
#line 320 "rx-decode.opc"
d9701 1
a9701 1
#line 320 "rx-decode.opc"
d9703 1
a9703 1
#line 320 "rx-decode.opc"
d9705 1
a9705 1
#line 320 "rx-decode.opc"
d9718 1
a9718 1
#line 320 "rx-decode.opc"
d9779 1
a9779 1
#line 324 "rx-decode.opc"
d9781 1
a9781 1
#line 324 "rx-decode.opc"
d9783 1
a9783 1
#line 324 "rx-decode.opc"
d9785 1
a9785 1
#line 324 "rx-decode.opc"
d9798 1
a9798 1
#line 324 "rx-decode.opc"
d9859 1
a9859 1
#line 334 "rx-decode.opc"
d9861 1
a9861 1
#line 334 "rx-decode.opc"
d9863 1
a9863 1
#line 334 "rx-decode.opc"
d9865 1
a9865 1
#line 334 "rx-decode.opc"
d9878 1
a9878 1
#line 334 "rx-decode.opc"
d9941 1
a9941 1
#line 667 "rx-decode.opc"
d9943 1
a9943 1
#line 667 "rx-decode.opc"
d9954 1
a9954 1
#line 667 "rx-decode.opc"
d9968 1
a9968 1
#line 657 "rx-decode.opc"
d9970 1
a9970 1
#line 657 "rx-decode.opc"
d9981 1
a9981 1
#line 657 "rx-decode.opc"
d9995 1
a9995 1
#line 647 "rx-decode.opc"
d9997 1
a9997 1
#line 647 "rx-decode.opc"
d10008 1
a10008 1
#line 647 "rx-decode.opc"
d10022 1
a10022 1
#line 691 "rx-decode.opc"
d10024 1
a10024 1
#line 691 "rx-decode.opc"
d10035 1
a10035 1
#line 691 "rx-decode.opc"
d10049 1
a10049 1
#line 694 "rx-decode.opc"
d10051 1
a10051 1
#line 694 "rx-decode.opc"
d10062 1
a10062 1
#line 694 "rx-decode.opc"
d10076 1
a10076 1
#line 685 "rx-decode.opc"
d10078 1
a10078 1
#line 685 "rx-decode.opc"
d10089 1
a10089 1
#line 685 "rx-decode.opc"
d10103 1
a10103 1
#line 697 "rx-decode.opc"
d10105 1
a10105 1
#line 697 "rx-decode.opc"
d10116 1
a10116 1
#line 697 "rx-decode.opc"
d10134 1
a10134 1
#line 940 "rx-decode.opc"
d10136 1
a10136 1
#line 940 "rx-decode.opc"
d10138 1
a10138 1
#line 940 "rx-decode.opc"
d10150 1
a10150 1
#line 940 "rx-decode.opc"
d10174 1
a10174 1
#line 943 "rx-decode.opc"
d10176 1
a10176 1
#line 943 "rx-decode.opc"
d10178 1
a10178 1
#line 943 "rx-decode.opc"
d10190 1
a10190 1
#line 943 "rx-decode.opc"
d10217 1
a10217 1
#line 688 "rx-decode.opc"
d10219 1
a10219 1
#line 688 "rx-decode.opc"
d10221 1
a10221 1
#line 688 "rx-decode.opc"
d10233 1
a10233 1
#line 688 "rx-decode.opc"
d10257 1
a10257 1
#line 682 "rx-decode.opc"
d10259 1
a10259 1
#line 682 "rx-decode.opc"
d10261 1
a10261 1
#line 682 "rx-decode.opc"
d10273 1
a10273 1
#line 682 "rx-decode.opc"
d10297 1
a10297 1
#line 464 "rx-decode.opc"
d10299 1
a10299 1
#line 464 "rx-decode.opc"
d10310 1
a10310 1
#line 464 "rx-decode.opc"
d10319 1
a10319 1
#line 546 "rx-decode.opc"
d10321 1
a10321 1
#line 546 "rx-decode.opc"
d10332 1
a10332 1
#line 546 "rx-decode.opc"
d10341 1
a10341 1
#line 566 "rx-decode.opc"
d10343 1
a10343 1
#line 566 "rx-decode.opc"
d10354 1
a10354 1
#line 566 "rx-decode.opc"
d10363 1
a10363 1
#line 596 "rx-decode.opc"
d10365 1
a10365 1
#line 596 "rx-decode.opc"
d10376 1
a10376 1
#line 596 "rx-decode.opc"
d10385 1
a10385 1
#line 608 "rx-decode.opc"
d10387 1
a10387 1
#line 608 "rx-decode.opc"
d10398 1
a10398 1
#line 608 "rx-decode.opc"
d10407 1
a10407 1
#line 620 "rx-decode.opc"
d10409 1
a10409 1
#line 620 "rx-decode.opc"
d10420 1
a10420 1
#line 620 "rx-decode.opc"
d10429 1
a10429 1
#line 632 "rx-decode.opc"
d10431 1
a10431 1
#line 632 "rx-decode.opc"
d10442 1
a10442 1
#line 632 "rx-decode.opc"
d10451 1
a10451 1
#line 443 "rx-decode.opc"
d10453 1
a10453 1
#line 443 "rx-decode.opc"
d10464 1
a10464 1
#line 443 "rx-decode.opc"
d10473 1
a10473 1
#line 422 "rx-decode.opc"
d10475 1
a10475 1
#line 422 "rx-decode.opc"
d10486 1
a10486 1
#line 422 "rx-decode.opc"
d10495 1
a10495 1
#line 368 "rx-decode.opc"
d10497 1
a10497 1
#line 368 "rx-decode.opc"
d10508 1
a10508 1
#line 368 "rx-decode.opc"
d10517 1
a10517 1
#line 371 "rx-decode.opc"
d10519 1
a10519 1
#line 371 "rx-decode.opc"
d10530 1
a10530 1
#line 371 "rx-decode.opc"
d10548 1
a10548 1
#line 840 "rx-decode.opc"
d10558 1
a10558 1
#line 840 "rx-decode.opc"
d10566 1
a10566 1
#line 834 "rx-decode.opc"
d10576 1
a10576 1
#line 834 "rx-decode.opc"
d10584 1
a10584 1
#line 828 "rx-decode.opc"
d10594 1
a10594 1
#line 828 "rx-decode.opc"
d10602 1
a10602 1
#line 849 "rx-decode.opc"
d10612 1
a10612 1
#line 849 "rx-decode.opc"
d10620 1
a10620 1
#line 855 "rx-decode.opc"
d10630 1
a10630 1
#line 855 "rx-decode.opc"
d10646 1
a10646 1
#line 937 "rx-decode.opc"
d10648 1
a10648 1
#line 937 "rx-decode.opc"
d10659 1
a10659 1
#line 937 "rx-decode.opc"
d10825 1
a10825 1
#line 670 "rx-decode.opc"
d10827 1
a10827 1
#line 670 "rx-decode.opc"
d10829 1
a10829 1
#line 670 "rx-decode.opc"
d10841 1
a10841 1
#line 670 "rx-decode.opc"
d11138 1
a11138 1
#line 660 "rx-decode.opc"
d11140 1
a11140 1
#line 660 "rx-decode.opc"
d11142 1
a11142 1
#line 660 "rx-decode.opc"
d11154 1
a11154 1
#line 660 "rx-decode.opc"
d11449 1
a11449 1
#line 650 "rx-decode.opc"
d11451 1
a11451 1
#line 650 "rx-decode.opc"
d11453 1
a11453 1
#line 650 "rx-decode.opc"
d11465 1
a11465 1
#line 650 "rx-decode.opc"
d11774 1
a11774 1
#line 916 "rx-decode.opc"
d11776 1
a11776 1
#line 916 "rx-decode.opc"
d11778 1
a11778 1
#line 916 "rx-decode.opc"
d11790 1
a11790 1
#line 916 "rx-decode.opc"
d11802 1
a11802 1
#line 909 "rx-decode.opc"
d11804 1
a11804 1
#line 909 "rx-decode.opc"
d11815 1
a11815 1
#line 909 "rx-decode.opc"
d12644 1
a12644 1
#line 314 "rx-decode.opc"
d12646 1
a12646 1
#line 314 "rx-decode.opc"
d12648 1
a12648 1
#line 314 "rx-decode.opc"
d12650 1
a12650 1
#line 314 "rx-decode.opc"
d12663 1
a12663 1
#line 314 "rx-decode.opc"
d13101 1
a13101 1
#line 311 "rx-decode.opc"
d13103 1
a13103 1
#line 311 "rx-decode.opc"
d13105 1
a13105 1
#line 311 "rx-decode.opc"
d13107 1
a13107 1
#line 311 "rx-decode.opc"
d13120 1
a13120 1
#line 311 "rx-decode.opc"
d13558 1
a13558 1
#line 317 "rx-decode.opc"
d13560 1
a13560 1
#line 317 "rx-decode.opc"
d13562 1
a13562 1
#line 317 "rx-decode.opc"
d13564 1
a13564 1
#line 317 "rx-decode.opc"
d13577 1
a13577 1
#line 317 "rx-decode.opc"
d14022 1
a14022 1
#line 521 "rx-decode.opc"
d14024 1
a14024 1
#line 521 "rx-decode.opc"
d14026 1
a14026 1
#line 521 "rx-decode.opc"
d14038 1
a14038 1
#line 521 "rx-decode.opc"
d14191 1
a14191 1
#line 488 "rx-decode.opc"
d14193 1
a14193 1
#line 488 "rx-decode.opc"
d14195 1
a14195 1
#line 488 "rx-decode.opc"
d14207 1
a14207 1
#line 488 "rx-decode.opc"
d14360 1
a14360 1
#line 590 "rx-decode.opc"
d14362 1
a14362 1
#line 590 "rx-decode.opc"
d14364 1
a14364 1
#line 590 "rx-decode.opc"
d14376 1
a14376 1
#line 590 "rx-decode.opc"
d14529 1
a14529 1
#line 398 "rx-decode.opc"
d14531 1
a14531 1
#line 398 "rx-decode.opc"
d14533 1
a14533 1
#line 398 "rx-decode.opc"
d14545 1
a14545 1
#line 398 "rx-decode.opc"
d14698 1
a14698 1
#line 416 "rx-decode.opc"
d14700 1
a14700 1
#line 416 "rx-decode.opc"
d14702 1
a14702 1
#line 416 "rx-decode.opc"
d14714 1
a14714 1
#line 416 "rx-decode.opc"
d14864 1
a14864 1
#line 973 "rx-decode.opc"
@


1.10
log
@	* arc-dis.c: Include sysdep.h first, remove some redundant includes.
	* bfin-dis.c: Likewise.
	* i860-dis.c: Likewise.
	* ia64-dis.c: Likewise.
	* ia64-gen.c: Likewise.
	* m68hc11-dis.c: Likewise.
	* mmix-dis.c: Likewise.
	* msp430-dis.c: Likewise.
	* or32-dis.c: Likewise.
	* rl78-dis.c: Likewise.
	* rx-dis.c: Likewise.
	* tic4x-dis.c: Likewise.
	* tilegx-opc.c: Likewise.
	* tilepro-opc.c: Likewise.
	* rx-decode.c: Regenerate.
@
text
@d3 21
@


1.9
log
@	PR 14072
	* configure.in: Add check that sysdep.h has been included before
	any system header files.
	* configure: Regenerate.
	* config.in: Regenerate.
	* sysdep.h: Generate an error if included before config.h.
	* alpha-opc.c: Include sysdep.h before any other header file.
	* alpha-dis.c: Likewise.
	* avr-dis.c: Likewise.
	* cgen-opc.c: Likewise.
	* cr16-dis.c: Likewise.
	* cris-dis.c: Likewise.
	* crx-dis.c: Likewise.
	* d10v-dis.c: Likewise.
	* d10v-opc.c: Likewise.
	* d30v-dis.c: Likewise.
	* d30v-opc.c: Likewise.
	* h8500-dis.c: Likewise.
	* i370-dis.c: Likewise.
	* i370-opc.c: Likewise.
	* m10200-dis.c: Likewise.
	* m10300-dis.c: Likewise.
	* micromips-opc.c: Likewise.
	* mips-opc.c: Likewise.
	* mips61-opc.c: Likewise.
	* moxie-dis.c: Likewise.
	* or32-opc.c: Likewise.
	* pj-dis.c: Likewise.
	* ppc-dis.c: Likewise.
	* ppc-opc.c: Likewise.
	* s390-dis.c: Likewise.
	* sh-dis.c: Likewise.
	* sh64-dis.c: Likewise.
	* sparc-dis.c: Likewise.
	* sparc-opc.c: Likewise.
	* spu-dis.c: Likewise.
	* tic30-dis.c: Likewise.
	* tic54x-dis.c: Likewise.
	* tic80-dis.c: Likewise.
	* tic80-opc.c: Likewise.
	* tilegx-dis.c: Likewise.
	* tilepro-dis.c: Likewise.
	* v850-dis.c: Likewise.
	* v850-opc.c: Likewise.
	* vax-dis.c: Likewise.
	* w65-dis.c: Likewise.
	* xgate-dis.c: Likewise.
	* xtensa-dis.c: Likewise.
	* rl78-decode.opc: Likewise.
	* rl78-decode.c: Regenerate.
	* rx-decode.opc: Likewise.
	* rx-decode.c: Regenerate.

	* configure.in: Add check that sysdep.h has been included before
	any system header files.
	* configure: Regenerate.
	* config.in: Regenerate.
	* sysdep.h: Generate an error if included before config.h.

	* configure.in: Add check that sysdep.h has been included before
	any system header files.
	* configure: Regenerate.
	* config.in: Regenerate.
	* aclocal.m4: Regenerate.
	* bfd-in.h: Generate an error if included before config.h.
	* sysdep.h: Likewise.
	* bfd-in2.h: Regenerate.
	* compress.c: Remove #include "config.h".
	* plugin.c: Likewise.
	* elf32-m68hc1x.c: Include sysdep.h before alloca-conf.h.
	* elf64-hppa.c: Likewise.
	* som.c: Likewise.
	* xsymc.c: Likewise.

	* configure.in: Add check that sysdep.h has been included before
	any system header files.
	* configure: Regenerate.
	* config.in: Regenerate.

	* configure.in: Add check that sysdep.h has been included before
	any system header files.
	* configure: Regenerate.
	* config.in: Regenerate.
	* aclocal.m4: Regenerate.
	* Makefile.am: Use wrappers around C files generated by flex.
	* Makefile.in: Regenerate.
	* doc/Makefile.in: Regenerate.
	* itbl-lex-wrapper.c: New file.
	* config/bfin-lex-wrapper.c: New file.
	* cgen.c: Include as.h before setjmp.h.
	* config/tc-dlx.c: Include as.h before any other header.
	* config/tc-h8300.c: Likewise.
	* config/tc-lm32.c: Likewise.
	* config/tc-mep.c: Likewise.
	* config/tc-microblaze.c: Likewise.
	* config/tc-mmix.c: Likewise.
	* config/tc-msp430.c: Likewise.
	* config/tc-or32.c: Likewise.
	* config/tc-tic4x.c: Likewise.
	* config/tc-tic54x.c: Likewise.
	* config/tc-xtensa.c: Likewise.

	* configure.in: Add check that sysdep.h has been included before
	any system header files.
	* configure: Regenerate.
	* config.in: Regenerate.
	* unwind-ia64.h: Include config.h.
@
text
@d273 1
a273 1
#line 956 "rx-decode.opc"
d288 1
a288 1
#line 959 "rx-decode.opc"
d303 1
a303 1
#line 745 "rx-decode.opc"
d321 1
a321 1
#line 751 "rx-decode.opc"
d339 1
a339 1
#line 723 "rx-decode.opc"
d354 1
a354 1
#line 739 "rx-decode.opc"
d371 1
a371 1
#line 519 "rx-decode.opc"
d373 1
a373 1
#line 519 "rx-decode.opc"
d375 1
a375 1
#line 519 "rx-decode.opc"
d377 1
a377 1
#line 519 "rx-decode.opc"
d390 1
a390 1
#line 519 "rx-decode.opc"
d432 1
a432 1
#line 507 "rx-decode.opc"
d434 1
a434 1
#line 507 "rx-decode.opc"
d436 1
a436 1
#line 507 "rx-decode.opc"
d438 1
a438 1
#line 507 "rx-decode.opc"
d451 1
a451 1
#line 507 "rx-decode.opc"
d496 1
a496 1
#line 483 "rx-decode.opc"
d498 1
a498 1
#line 483 "rx-decode.opc"
d500 1
a500 1
#line 483 "rx-decode.opc"
d502 1
a502 1
#line 483 "rx-decode.opc"
d515 1
a515 1
#line 483 "rx-decode.opc"
d557 1
a557 1
#line 588 "rx-decode.opc"
d559 1
a559 1
#line 588 "rx-decode.opc"
d561 1
a561 1
#line 588 "rx-decode.opc"
d563 1
a563 1
#line 588 "rx-decode.opc"
d576 1
a576 1
#line 588 "rx-decode.opc"
d618 1
a618 1
#line 396 "rx-decode.opc"
d620 1
a620 1
#line 396 "rx-decode.opc"
d622 1
a622 1
#line 396 "rx-decode.opc"
d624 1
a624 1
#line 396 "rx-decode.opc"
d637 1
a637 1
#line 396 "rx-decode.opc"
d679 1
a679 1
#line 414 "rx-decode.opc"
d681 1
a681 1
#line 414 "rx-decode.opc"
d683 1
a683 1
#line 414 "rx-decode.opc"
d685 1
a685 1
#line 414 "rx-decode.opc"
d698 1
a698 1
#line 414 "rx-decode.opc"
d744 1
a744 1
#line 532 "rx-decode.opc"
d746 1
a746 1
#line 532 "rx-decode.opc"
d748 1
a748 1
#line 532 "rx-decode.opc"
d750 1
a750 1
#line 532 "rx-decode.opc"
d763 1
a763 1
#line 532 "rx-decode.opc"
d781 1
a781 1
#line 561 "rx-decode.opc"
d783 1
a783 1
#line 561 "rx-decode.opc"
d785 1
a785 1
#line 561 "rx-decode.opc"
d787 1
a787 1
#line 561 "rx-decode.opc"
d800 1
a800 1
#line 561 "rx-decode.opc"
d818 1
a818 1
#line 573 "rx-decode.opc"
d820 1
a820 1
#line 573 "rx-decode.opc"
d822 1
a822 1
#line 573 "rx-decode.opc"
d824 1
a824 1
#line 573 "rx-decode.opc"
d837 1
a837 1
#line 573 "rx-decode.opc"
d855 1
a855 1
#line 603 "rx-decode.opc"
d857 1
a857 1
#line 603 "rx-decode.opc"
d859 1
a859 1
#line 603 "rx-decode.opc"
d861 1
a861 1
#line 603 "rx-decode.opc"
d874 1
a874 1
#line 603 "rx-decode.opc"
d892 1
a892 1
#line 615 "rx-decode.opc"
d894 1
a894 1
#line 615 "rx-decode.opc"
d896 1
a896 1
#line 615 "rx-decode.opc"
d898 1
a898 1
#line 615 "rx-decode.opc"
d911 1
a911 1
#line 615 "rx-decode.opc"
d929 1
a929 1
#line 627 "rx-decode.opc"
d931 1
a931 1
#line 627 "rx-decode.opc"
d933 1
a933 1
#line 627 "rx-decode.opc"
d935 1
a935 1
#line 627 "rx-decode.opc"
d948 1
a948 1
#line 627 "rx-decode.opc"
d966 1
a966 1
#line 639 "rx-decode.opc"
d968 1
a968 1
#line 639 "rx-decode.opc"
d970 1
a970 1
#line 639 "rx-decode.opc"
d972 1
a972 1
#line 639 "rx-decode.opc"
d985 1
a985 1
#line 639 "rx-decode.opc"
d1003 1
a1003 1
#line 450 "rx-decode.opc"
d1005 1
a1005 1
#line 450 "rx-decode.opc"
d1007 1
a1007 1
#line 450 "rx-decode.opc"
d1009 1
a1009 1
#line 450 "rx-decode.opc"
d1022 1
a1022 1
#line 450 "rx-decode.opc"
d1040 1
a1040 1
#line 429 "rx-decode.opc"
d1042 1
a1042 1
#line 429 "rx-decode.opc"
d1044 1
a1044 1
#line 429 "rx-decode.opc"
d1046 1
a1046 1
#line 429 "rx-decode.opc"
d1059 1
a1059 1
#line 429 "rx-decode.opc"
d1077 1
a1077 1
#line 363 "rx-decode.opc"
d1079 1
a1079 1
#line 363 "rx-decode.opc"
d1081 1
a1081 1
#line 363 "rx-decode.opc"
d1083 1
a1083 1
#line 363 "rx-decode.opc"
d1096 1
a1096 1
#line 363 "rx-decode.opc"
d1114 1
a1114 1
#line 868 "rx-decode.opc"
d1116 1
a1116 1
#line 868 "rx-decode.opc"
d1118 1
a1118 1
#line 868 "rx-decode.opc"
d1120 1
a1120 1
#line 868 "rx-decode.opc"
d1133 1
a1133 1
#line 868 "rx-decode.opc"
d2341 1
a2341 1
#line 471 "rx-decode.opc"
d2343 1
a2343 1
#line 471 "rx-decode.opc"
d2345 1
a2345 1
#line 471 "rx-decode.opc"
d2357 1
a2357 1
#line 471 "rx-decode.opc"
d3458 1
a3458 1
#line 714 "rx-decode.opc"
d3468 1
a3468 1
#line 714 "rx-decode.opc"
d3491 1
a3491 1
#line 704 "rx-decode.opc"
d3493 1
a3493 1
#line 704 "rx-decode.opc"
d3504 1
a3504 1
#line 704 "rx-decode.opc"
d3526 1
a3526 1
#line 707 "rx-decode.opc"
d3536 1
a3536 1
#line 707 "rx-decode.opc"
d3551 1
a3551 1
#line 717 "rx-decode.opc"
d3566 1
a3566 1
#line 720 "rx-decode.opc"
d3581 1
a3581 1
#line 736 "rx-decode.opc"
d3590 1
a3590 1
#line 710 "rx-decode.opc"
d3600 1
a3600 1
#line 710 "rx-decode.opc"
d3614 1
a3614 1
#line 284 "rx-decode.opc"
d3616 1
a3616 1
#line 284 "rx-decode.opc"
d3618 1
a3618 1
#line 284 "rx-decode.opc"
d3620 1
a3620 1
#line 284 "rx-decode.opc"
d3633 1
a3633 1
#line 284 "rx-decode.opc"
d3665 1
a3665 1
#line 381 "rx-decode.opc"
d3667 1
a3667 1
#line 381 "rx-decode.opc"
d3678 1
a3678 1
#line 381 "rx-decode.opc"
d3696 1
a3696 1
#line 516 "rx-decode.opc"
d3698 1
a3698 1
#line 516 "rx-decode.opc"
d3700 1
a3700 1
#line 516 "rx-decode.opc"
d3712 1
a3712 1
#line 516 "rx-decode.opc"
d3754 1
a3754 1
#line 504 "rx-decode.opc"
d3756 1
a3756 1
#line 504 "rx-decode.opc"
d3758 1
a3758 1
#line 504 "rx-decode.opc"
d3770 1
a3770 1
#line 504 "rx-decode.opc"
d3812 1
a3812 1
#line 480 "rx-decode.opc"
d3814 1
a3814 1
#line 480 "rx-decode.opc"
d3816 1
a3816 1
#line 480 "rx-decode.opc"
d3828 1
a3828 1
#line 480 "rx-decode.opc"
d3870 1
a3870 1
#line 585 "rx-decode.opc"
d3872 1
a3872 1
#line 585 "rx-decode.opc"
d3874 1
a3874 1
#line 585 "rx-decode.opc"
d3886 1
a3886 1
#line 585 "rx-decode.opc"
d3928 1
a3928 1
#line 393 "rx-decode.opc"
d3930 1
a3930 1
#line 393 "rx-decode.opc"
d3932 1
a3932 1
#line 393 "rx-decode.opc"
d3944 1
a3944 1
#line 393 "rx-decode.opc"
d3986 1
a3986 1
#line 411 "rx-decode.opc"
d3988 1
a3988 1
#line 411 "rx-decode.opc"
d3990 1
a3990 1
#line 411 "rx-decode.opc"
d4002 1
a4002 1
#line 411 "rx-decode.opc"
d4044 1
a4044 1
#line 332 "rx-decode.opc"
d4046 1
a4046 1
#line 332 "rx-decode.opc"
d4048 1
a4048 1
#line 332 "rx-decode.opc"
d4050 1
a4050 1
#line 332 "rx-decode.opc"
d4063 1
a4063 1
#line 332 "rx-decode.opc"
d4140 1
a4140 1
#line 513 "rx-decode.opc"
d4142 1
a4142 1
#line 513 "rx-decode.opc"
d4153 1
a4153 1
#line 513 "rx-decode.opc"
d4167 1
a4167 1
#line 495 "rx-decode.opc"
d4169 1
a4169 1
#line 495 "rx-decode.opc"
d4180 1
a4180 1
#line 495 "rx-decode.opc"
d4194 1
a4194 1
#line 477 "rx-decode.opc"
d4196 1
a4196 1
#line 477 "rx-decode.opc"
d4207 1
a4207 1
#line 477 "rx-decode.opc"
d4221 1
a4221 1
#line 579 "rx-decode.opc"
d4223 1
a4223 1
#line 579 "rx-decode.opc"
d4234 1
a4234 1
#line 579 "rx-decode.opc"
d4248 1
a4248 1
#line 387 "rx-decode.opc"
d4250 1
a4250 1
#line 387 "rx-decode.opc"
d4261 1
a4261 1
#line 387 "rx-decode.opc"
d4275 1
a4275 1
#line 405 "rx-decode.opc"
d4277 1
a4277 1
#line 405 "rx-decode.opc"
d4288 1
a4288 1
#line 405 "rx-decode.opc"
d4302 1
a4302 1
#line 281 "rx-decode.opc"
d4304 1
a4304 1
#line 281 "rx-decode.opc"
d4315 1
a4315 1
#line 281 "rx-decode.opc"
d4332 1
a4332 1
#line 378 "rx-decode.opc"
d4345 1
a4345 1
#line 665 "rx-decode.opc"
d4347 1
a4347 1
#line 665 "rx-decode.opc"
d4349 1
a4349 1
#line 665 "rx-decode.opc"
d4361 1
a4361 1
#line 665 "rx-decode.opc"
d4385 1
a4385 1
#line 655 "rx-decode.opc"
d4387 1
a4387 1
#line 655 "rx-decode.opc"
d4389 1
a4389 1
#line 655 "rx-decode.opc"
d4401 1
a4401 1
#line 655 "rx-decode.opc"
d4425 1
a4425 1
#line 645 "rx-decode.opc"
d4427 1
a4427 1
#line 645 "rx-decode.opc"
d4429 1
a4429 1
#line 645 "rx-decode.opc"
d4441 1
a4441 1
#line 645 "rx-decode.opc"
d4464 1
a4464 1
#line 345 "rx-decode.opc"
d4466 1
a4466 1
#line 345 "rx-decode.opc"
d4477 1
a4477 1
#line 345 "rx-decode.opc"
d4491 1
a4491 1
#line 342 "rx-decode.opc"
d4493 1
a4493 1
#line 342 "rx-decode.opc"
d4504 1
a4504 1
#line 342 "rx-decode.opc"
d4519 1
a4519 1
#line 486 "rx-decode.opc"
d4521 1
a4521 1
#line 486 "rx-decode.opc"
d4523 1
a4523 1
#line 486 "rx-decode.opc"
d4535 1
a4535 1
#line 486 "rx-decode.opc"
d4577 1
a4577 1
#line 498 "rx-decode.opc"
d4579 1
a4579 1
#line 498 "rx-decode.opc"
d4590 1
a4590 1
#line 498 "rx-decode.opc"
d4599 1
a4599 1
#line 582 "rx-decode.opc"
d4601 1
a4601 1
#line 582 "rx-decode.opc"
d4612 1
a4612 1
#line 582 "rx-decode.opc"
d4621 1
a4621 1
#line 390 "rx-decode.opc"
d4623 1
a4623 1
#line 390 "rx-decode.opc"
d4634 1
a4634 1
#line 390 "rx-decode.opc"
d4643 1
a4643 1
#line 408 "rx-decode.opc"
d4645 1
a4645 1
#line 408 "rx-decode.opc"
d4656 1
a4656 1
#line 408 "rx-decode.opc"
d4758 1
a4758 1
#line 262 "rx-decode.opc"
d4768 1
a4768 1
#line 262 "rx-decode.opc"
d4791 1
a4791 1
#line 501 "rx-decode.opc"
d4801 1
a4801 1
#line 501 "rx-decode.opc"
d4816 1
a4816 1
#line 962 "rx-decode.opc"
d4828 1
a4828 1
#line 929 "rx-decode.opc"
d4838 1
a4838 1
#line 929 "rx-decode.opc"
d4895 1
a4895 1
#line 880 "rx-decode.opc"
d4897 1
a4897 1
#line 880 "rx-decode.opc"
d4899 1
a4899 1
#line 880 "rx-decode.opc"
d4911 1
a4911 1
#line 880 "rx-decode.opc"
d4936 1
a4936 1
#line 890 "rx-decode.opc"
d4938 1
a4938 1
#line 890 "rx-decode.opc"
d4940 1
a4940 1
#line 890 "rx-decode.opc"
d4952 1
a4952 1
#line 890 "rx-decode.opc"
d4977 1
a4977 1
#line 900 "rx-decode.opc"
d4979 1
a4979 1
#line 900 "rx-decode.opc"
d4981 1
a4981 1
#line 900 "rx-decode.opc"
d4993 1
a4993 1
#line 900 "rx-decode.opc"
d5017 1
a5017 1
#line 435 "rx-decode.opc"
d5027 1
a5027 1
#line 435 "rx-decode.opc"
d5035 1
a5035 1
#line 456 "rx-decode.opc"
d5045 1
a5045 1
#line 456 "rx-decode.opc"
d5053 1
a5053 1
#line 538 "rx-decode.opc"
d5063 1
a5063 1
#line 538 "rx-decode.opc"
d5071 1
a5071 1
#line 820 "rx-decode.opc"
d5081 1
a5081 1
#line 820 "rx-decode.opc"
d5089 1
a5089 1
#line 680 "rx-decode.opc"
d5099 1
a5099 1
#line 680 "rx-decode.opc"
d5107 1
a5107 1
#line 677 "rx-decode.opc"
d5117 1
a5117 1
#line 677 "rx-decode.opc"
d5127 1
a5127 1
#line 351 "rx-decode.opc"
d5129 1
a5129 1
#line 351 "rx-decode.opc"
d5140 1
a5140 1
#line 351 "rx-decode.opc"
d5148 1
a5148 1
#line 348 "rx-decode.opc"
d5158 1
a5158 1
#line 348 "rx-decode.opc"
d5167 1
a5167 1
#line 935 "rx-decode.opc"
d5177 1
a5177 1
#line 935 "rx-decode.opc"
d5186 1
a5186 1
#line 932 "rx-decode.opc"
d5196 1
a5196 1
#line 932 "rx-decode.opc"
d5226 1
a5226 1
#line 730 "rx-decode.opc"
d5236 1
a5236 1
#line 730 "rx-decode.opc"
d5259 1
a5259 1
#line 733 "rx-decode.opc"
d5269 1
a5269 1
#line 733 "rx-decode.opc"
d5292 1
a5292 1
#line 726 "rx-decode.opc"
d5302 1
a5302 1
#line 726 "rx-decode.opc"
d5326 1
a5326 1
#line 742 "rx-decode.opc"
d5336 1
a5336 1
#line 742 "rx-decode.opc"
d5346 1
a5346 1
#line 766 "rx-decode.opc"
d5356 1
a5356 1
#line 766 "rx-decode.opc"
d5371 1
a5371 1
#line 757 "rx-decode.opc"
d5381 1
a5381 1
#line 769 "rx-decode.opc"
d5391 1
a5391 1
#line 769 "rx-decode.opc"
d5406 1
a5406 1
#line 760 "rx-decode.opc"
d5416 1
a5416 1
#line 775 "rx-decode.opc"
d5426 1
a5426 1
#line 775 "rx-decode.opc"
d5444 1
a5444 1
#line 763 "rx-decode.opc"
d5454 1
a5454 1
#line 781 "rx-decode.opc"
d5464 1
a5464 1
#line 781 "rx-decode.opc"
d5482 1
a5482 1
#line 772 "rx-decode.opc"
d5497 1
a5497 1
#line 823 "rx-decode.opc"
d5515 1
a5515 1
#line 950 "rx-decode.opc"
d5530 1
a5530 1
#line 953 "rx-decode.opc"
d5545 1
a5545 1
#line 965 "rx-decode.opc"
d5571 1
a5571 1
#line 926 "rx-decode.opc"
d5581 1
a5581 1
#line 926 "rx-decode.opc"
d5604 1
a5604 1
#line 923 "rx-decode.opc"
d5614 1
a5614 1
#line 923 "rx-decode.opc"
d5630 1
a5630 1
#line 309 "rx-decode.opc"
d5632 1
a5632 1
#line 309 "rx-decode.opc"
d5634 1
a5634 1
#line 309 "rx-decode.opc"
d5636 1
a5636 1
#line 309 "rx-decode.opc"
d5638 1
a5638 1
#line 309 "rx-decode.opc"
d5640 1
a5640 1
#line 309 "rx-decode.opc"
d5655 1
a5655 1
#line 309 "rx-decode.opc"
d5733 1
a5733 1
#line 306 "rx-decode.opc"
d5735 1
a5735 1
#line 306 "rx-decode.opc"
d5737 1
a5737 1
#line 306 "rx-decode.opc"
d5739 1
a5739 1
#line 306 "rx-decode.opc"
d5741 1
a5741 1
#line 306 "rx-decode.opc"
d5743 1
a5743 1
#line 306 "rx-decode.opc"
d5758 1
a5758 1
#line 306 "rx-decode.opc"
d6124 1
a6124 1
#line 329 "rx-decode.opc"
d6126 1
a6126 1
#line 329 "rx-decode.opc"
d6128 1
a6128 1
#line 329 "rx-decode.opc"
d6130 1
a6130 1
#line 329 "rx-decode.opc"
d6132 1
a6132 1
#line 329 "rx-decode.opc"
d6134 1
a6134 1
#line 329 "rx-decode.opc"
d6149 1
a6149 1
#line 329 "rx-decode.opc"
d6299 1
a6299 1
#line 287 "rx-decode.opc"
d6301 1
a6301 1
#line 287 "rx-decode.opc"
d6303 1
a6303 1
#line 287 "rx-decode.opc"
d6305 1
a6305 1
#line 287 "rx-decode.opc"
d6307 1
a6307 1
#line 287 "rx-decode.opc"
d6321 1
a6321 1
#line 287 "rx-decode.opc"
d6775 1
a6775 1
#line 874 "rx-decode.opc"
d6777 1
a6777 1
#line 874 "rx-decode.opc"
d6779 1
a6779 1
#line 874 "rx-decode.opc"
d6791 1
a6791 1
#line 874 "rx-decode.opc"
d6800 1
a6800 1
#line 884 "rx-decode.opc"
d6802 1
a6802 1
#line 884 "rx-decode.opc"
d6804 1
a6804 1
#line 884 "rx-decode.opc"
d6816 1
a6816 1
#line 884 "rx-decode.opc"
d6868 1
a6868 1
#line 894 "rx-decode.opc"
d6870 1
a6870 1
#line 894 "rx-decode.opc"
d6872 1
a6872 1
#line 894 "rx-decode.opc"
d6884 1
a6884 1
#line 894 "rx-decode.opc"
d6893 1
a6893 1
#line 354 "rx-decode.opc"
d6895 1
a6895 1
#line 354 "rx-decode.opc"
d6897 1
a6897 1
#line 354 "rx-decode.opc"
d6909 1
a6909 1
#line 354 "rx-decode.opc"
d6970 1
a6970 1
#line 265 "rx-decode.opc"
d6972 1
a6972 1
#line 265 "rx-decode.opc"
d6974 1
a6974 1
#line 265 "rx-decode.opc"
d6976 1
a6976 1
#line 265 "rx-decode.opc"
d6989 1
a6989 1
#line 265 "rx-decode.opc"
d7047 1
a7047 1
#line 528 "rx-decode.opc"
d7049 1
a7049 1
#line 528 "rx-decode.opc"
d7060 1
a7060 1
#line 528 "rx-decode.opc"
d7075 1
a7075 1
#line 459 "rx-decode.opc"
d7077 1
a7077 1
#line 459 "rx-decode.opc"
d7088 1
a7088 1
#line 459 "rx-decode.opc"
d7105 1
a7105 1
#line 468 "rx-decode.opc"
d7107 1
a7107 1
#line 468 "rx-decode.opc"
d7118 1
a7118 1
#line 468 "rx-decode.opc"
d7132 1
a7132 1
#line 541 "rx-decode.opc"
d7134 1
a7134 1
#line 541 "rx-decode.opc"
d7145 1
a7145 1
#line 541 "rx-decode.opc"
d7163 1
a7163 1
#line 550 "rx-decode.opc"
d7165 1
a7165 1
#line 550 "rx-decode.opc"
d7167 1
a7167 1
#line 550 "rx-decode.opc"
d7179 1
a7179 1
#line 550 "rx-decode.opc"
d7229 1
a7229 1
#line 570 "rx-decode.opc"
d7231 1
a7231 1
#line 570 "rx-decode.opc"
d7233 1
a7233 1
#line 570 "rx-decode.opc"
d7245 1
a7245 1
#line 570 "rx-decode.opc"
d7287 1
a7287 1
#line 600 "rx-decode.opc"
d7289 1
a7289 1
#line 600 "rx-decode.opc"
d7291 1
a7291 1
#line 600 "rx-decode.opc"
d7303 1
a7303 1
#line 600 "rx-decode.opc"
d7345 1
a7345 1
#line 612 "rx-decode.opc"
d7347 1
a7347 1
#line 612 "rx-decode.opc"
d7349 1
a7349 1
#line 612 "rx-decode.opc"
d7361 1
a7361 1
#line 612 "rx-decode.opc"
d7403 1
a7403 1
#line 624 "rx-decode.opc"
d7405 1
a7405 1
#line 624 "rx-decode.opc"
d7407 1
a7407 1
#line 624 "rx-decode.opc"
d7419 1
a7419 1
#line 624 "rx-decode.opc"
d7461 1
a7461 1
#line 636 "rx-decode.opc"
d7463 1
a7463 1
#line 636 "rx-decode.opc"
d7465 1
a7465 1
#line 636 "rx-decode.opc"
d7477 1
a7477 1
#line 636 "rx-decode.opc"
d7519 1
a7519 1
#line 447 "rx-decode.opc"
d7521 1
a7521 1
#line 447 "rx-decode.opc"
d7523 1
a7523 1
#line 447 "rx-decode.opc"
d7535 1
a7535 1
#line 447 "rx-decode.opc"
d7577 1
a7577 1
#line 426 "rx-decode.opc"
d7579 1
a7579 1
#line 426 "rx-decode.opc"
d7581 1
a7581 1
#line 426 "rx-decode.opc"
d7593 1
a7593 1
#line 426 "rx-decode.opc"
d7634 1
a7634 1
#line 438 "rx-decode.opc"
d7636 1
a7636 1
#line 438 "rx-decode.opc"
d7647 1
a7647 1
#line 438 "rx-decode.opc"
d7665 1
a7665 1
#line 360 "rx-decode.opc"
d7667 1
a7667 1
#line 360 "rx-decode.opc"
d7669 1
a7669 1
#line 360 "rx-decode.opc"
d7681 1
a7681 1
#line 360 "rx-decode.opc"
d7723 1
a7723 1
#line 865 "rx-decode.opc"
d7725 1
a7725 1
#line 865 "rx-decode.opc"
d7727 1
a7727 1
#line 865 "rx-decode.opc"
d7739 1
a7739 1
#line 865 "rx-decode.opc"
d7781 1
a7781 1
#line 877 "rx-decode.opc"
d7783 1
a7783 1
#line 877 "rx-decode.opc"
d7785 1
a7785 1
#line 877 "rx-decode.opc"
d7797 1
a7797 1
#line 877 "rx-decode.opc"
d7839 1
a7839 1
#line 887 "rx-decode.opc"
d7841 1
a7841 1
#line 887 "rx-decode.opc"
d7843 1
a7843 1
#line 887 "rx-decode.opc"
d7855 1
a7855 1
#line 887 "rx-decode.opc"
d7897 1
a7897 1
#line 897 "rx-decode.opc"
d7899 1
a7899 1
#line 897 "rx-decode.opc"
d7901 1
a7901 1
#line 897 "rx-decode.opc"
d7913 1
a7913 1
#line 897 "rx-decode.opc"
d7955 1
a7955 1
#line 907 "rx-decode.opc"
d7957 1
a7957 1
#line 907 "rx-decode.opc"
d7959 1
a7959 1
#line 907 "rx-decode.opc"
d7971 1
a7971 1
#line 907 "rx-decode.opc"
d8013 1
a8013 1
#line 844 "rx-decode.opc"
d8015 1
a8015 1
#line 844 "rx-decode.opc"
d8017 1
a8017 1
#line 844 "rx-decode.opc"
d8029 1
a8029 1
#line 844 "rx-decode.opc"
d8071 1
a8071 1
#line 838 "rx-decode.opc"
d8073 1
a8073 1
#line 838 "rx-decode.opc"
d8075 1
a8075 1
#line 838 "rx-decode.opc"
d8087 1
a8087 1
#line 838 "rx-decode.opc"
d8129 1
a8129 1
#line 832 "rx-decode.opc"
d8131 1
a8131 1
#line 832 "rx-decode.opc"
d8133 1
a8133 1
#line 832 "rx-decode.opc"
d8145 1
a8145 1
#line 832 "rx-decode.opc"
d8187 1
a8187 1
#line 853 "rx-decode.opc"
d8189 1
a8189 1
#line 853 "rx-decode.opc"
d8191 1
a8191 1
#line 853 "rx-decode.opc"
d8203 1
a8203 1
#line 853 "rx-decode.opc"
d8245 1
a8245 1
#line 859 "rx-decode.opc"
d8247 1
a8247 1
#line 859 "rx-decode.opc"
d8249 1
a8249 1
#line 859 "rx-decode.opc"
d8261 1
a8261 1
#line 859 "rx-decode.opc"
d8303 1
a8303 1
#line 847 "rx-decode.opc"
d8305 1
a8305 1
#line 847 "rx-decode.opc"
d8307 1
a8307 1
#line 847 "rx-decode.opc"
d8319 1
a8319 1
#line 847 "rx-decode.opc"
d8361 1
a8361 1
#line 862 "rx-decode.opc"
d8363 1
a8363 1
#line 862 "rx-decode.opc"
d8365 1
a8365 1
#line 862 "rx-decode.opc"
d8377 1
a8377 1
#line 862 "rx-decode.opc"
d8419 1
a8419 1
#line 971 "rx-decode.opc"
d8421 1
a8421 1
#line 971 "rx-decode.opc"
d8423 1
a8423 1
#line 971 "rx-decode.opc"
d8425 1
a8425 1
#line 971 "rx-decode.opc"
d8438 1
a8438 1
#line 971 "rx-decode.opc"
d8566 1
a8566 1
#line 914 "rx-decode.opc"
d8568 1
a8568 1
#line 914 "rx-decode.opc"
d8570 1
a8570 1
#line 914 "rx-decode.opc"
d8572 1
a8572 1
#line 914 "rx-decode.opc"
d8585 1
a8585 1
#line 914 "rx-decode.opc"
d8594 1
a8594 1
#line 904 "rx-decode.opc"
d8596 1
a8596 1
#line 904 "rx-decode.opc"
d8598 1
a8598 1
#line 904 "rx-decode.opc"
d8610 1
a8610 1
#line 904 "rx-decode.opc"
d9437 1
a9437 1
#line 787 "rx-decode.opc"
d9439 1
a9439 1
#line 787 "rx-decode.opc"
d9450 1
a9450 1
#line 787 "rx-decode.opc"
d9464 1
a9464 1
#line 790 "rx-decode.opc"
d9466 1
a9466 1
#line 790 "rx-decode.opc"
d9477 1
a9477 1
#line 790 "rx-decode.opc"
d9491 1
a9491 1
#line 793 "rx-decode.opc"
d9493 1
a9493 1
#line 793 "rx-decode.opc"
d9504 1
a9504 1
#line 793 "rx-decode.opc"
d9518 1
a9518 1
#line 796 "rx-decode.opc"
d9520 1
a9520 1
#line 796 "rx-decode.opc"
d9531 1
a9531 1
#line 796 "rx-decode.opc"
d9545 1
a9545 1
#line 799 "rx-decode.opc"
d9555 1
a9555 1
#line 799 "rx-decode.opc"
d9563 1
a9563 1
#line 802 "rx-decode.opc"
d9573 1
a9573 1
#line 802 "rx-decode.opc"
d9588 1
a9588 1
#line 814 "rx-decode.opc"
d9598 1
a9598 1
#line 814 "rx-decode.opc"
d9616 1
a9616 1
#line 805 "rx-decode.opc"
d9626 1
a9626 1
#line 805 "rx-decode.opc"
d9634 1
a9634 1
#line 811 "rx-decode.opc"
d9644 1
a9644 1
#line 811 "rx-decode.opc"
d9652 1
a9652 1
#line 808 "rx-decode.opc"
d9662 1
a9662 1
#line 808 "rx-decode.opc"
d9678 1
a9678 1
#line 321 "rx-decode.opc"
d9680 1
a9680 1
#line 321 "rx-decode.opc"
d9682 1
a9682 1
#line 321 "rx-decode.opc"
d9684 1
a9684 1
#line 321 "rx-decode.opc"
d9697 1
a9697 1
#line 321 "rx-decode.opc"
d9758 1
a9758 1
#line 325 "rx-decode.opc"
d9760 1
a9760 1
#line 325 "rx-decode.opc"
d9762 1
a9762 1
#line 325 "rx-decode.opc"
d9764 1
a9764 1
#line 325 "rx-decode.opc"
d9777 1
a9777 1
#line 325 "rx-decode.opc"
d9838 1
a9838 1
#line 335 "rx-decode.opc"
d9840 1
a9840 1
#line 335 "rx-decode.opc"
d9842 1
a9842 1
#line 335 "rx-decode.opc"
d9844 1
a9844 1
#line 335 "rx-decode.opc"
d9857 1
a9857 1
#line 335 "rx-decode.opc"
d9920 1
a9920 1
#line 668 "rx-decode.opc"
d9922 1
a9922 1
#line 668 "rx-decode.opc"
d9933 1
a9933 1
#line 668 "rx-decode.opc"
d9947 1
a9947 1
#line 658 "rx-decode.opc"
d9949 1
a9949 1
#line 658 "rx-decode.opc"
d9960 1
a9960 1
#line 658 "rx-decode.opc"
d9974 1
a9974 1
#line 648 "rx-decode.opc"
d9976 1
a9976 1
#line 648 "rx-decode.opc"
d9987 1
a9987 1
#line 648 "rx-decode.opc"
d10001 1
a10001 1
#line 692 "rx-decode.opc"
d10003 1
a10003 1
#line 692 "rx-decode.opc"
d10014 1
a10014 1
#line 692 "rx-decode.opc"
d10028 1
a10028 1
#line 695 "rx-decode.opc"
d10030 1
a10030 1
#line 695 "rx-decode.opc"
d10041 1
a10041 1
#line 695 "rx-decode.opc"
d10055 1
a10055 1
#line 686 "rx-decode.opc"
d10057 1
a10057 1
#line 686 "rx-decode.opc"
d10068 1
a10068 1
#line 686 "rx-decode.opc"
d10082 1
a10082 1
#line 698 "rx-decode.opc"
d10084 1
a10084 1
#line 698 "rx-decode.opc"
d10095 1
a10095 1
#line 698 "rx-decode.opc"
d10113 1
a10113 1
#line 941 "rx-decode.opc"
d10115 1
a10115 1
#line 941 "rx-decode.opc"
d10117 1
a10117 1
#line 941 "rx-decode.opc"
d10129 1
a10129 1
#line 941 "rx-decode.opc"
d10153 1
a10153 1
#line 944 "rx-decode.opc"
d10155 1
a10155 1
#line 944 "rx-decode.opc"
d10157 1
a10157 1
#line 944 "rx-decode.opc"
d10169 1
a10169 1
#line 944 "rx-decode.opc"
d10196 1
a10196 1
#line 689 "rx-decode.opc"
d10198 1
a10198 1
#line 689 "rx-decode.opc"
d10200 1
a10200 1
#line 689 "rx-decode.opc"
d10212 1
a10212 1
#line 689 "rx-decode.opc"
d10236 1
a10236 1
#line 683 "rx-decode.opc"
d10238 1
a10238 1
#line 683 "rx-decode.opc"
d10240 1
a10240 1
#line 683 "rx-decode.opc"
d10252 1
a10252 1
#line 683 "rx-decode.opc"
d10276 1
a10276 1
#line 465 "rx-decode.opc"
d10278 1
a10278 1
#line 465 "rx-decode.opc"
d10289 1
a10289 1
#line 465 "rx-decode.opc"
d10298 1
a10298 1
#line 547 "rx-decode.opc"
d10300 1
a10300 1
#line 547 "rx-decode.opc"
d10311 1
a10311 1
#line 547 "rx-decode.opc"
d10320 1
a10320 1
#line 567 "rx-decode.opc"
d10322 1
a10322 1
#line 567 "rx-decode.opc"
d10333 1
a10333 1
#line 567 "rx-decode.opc"
d10342 1
a10342 1
#line 597 "rx-decode.opc"
d10344 1
a10344 1
#line 597 "rx-decode.opc"
d10355 1
a10355 1
#line 597 "rx-decode.opc"
d10364 1
a10364 1
#line 609 "rx-decode.opc"
d10366 1
a10366 1
#line 609 "rx-decode.opc"
d10377 1
a10377 1
#line 609 "rx-decode.opc"
d10386 1
a10386 1
#line 621 "rx-decode.opc"
d10388 1
a10388 1
#line 621 "rx-decode.opc"
d10399 1
a10399 1
#line 621 "rx-decode.opc"
d10408 1
a10408 1
#line 633 "rx-decode.opc"
d10410 1
a10410 1
#line 633 "rx-decode.opc"
d10421 1
a10421 1
#line 633 "rx-decode.opc"
d10430 1
a10430 1
#line 444 "rx-decode.opc"
d10432 1
a10432 1
#line 444 "rx-decode.opc"
d10443 1
a10443 1
#line 444 "rx-decode.opc"
d10452 1
a10452 1
#line 423 "rx-decode.opc"
d10454 1
a10454 1
#line 423 "rx-decode.opc"
d10465 1
a10465 1
#line 423 "rx-decode.opc"
d10474 1
a10474 1
#line 369 "rx-decode.opc"
d10476 1
a10476 1
#line 369 "rx-decode.opc"
d10487 1
a10487 1
#line 369 "rx-decode.opc"
d10496 1
a10496 1
#line 372 "rx-decode.opc"
d10498 1
a10498 1
#line 372 "rx-decode.opc"
d10509 1
a10509 1
#line 372 "rx-decode.opc"
d10527 1
a10527 1
#line 841 "rx-decode.opc"
d10537 1
a10537 1
#line 841 "rx-decode.opc"
d10545 1
a10545 1
#line 835 "rx-decode.opc"
d10555 1
a10555 1
#line 835 "rx-decode.opc"
d10563 1
a10563 1
#line 829 "rx-decode.opc"
d10573 1
a10573 1
#line 829 "rx-decode.opc"
d10581 1
a10581 1
#line 850 "rx-decode.opc"
d10591 1
a10591 1
#line 850 "rx-decode.opc"
d10599 1
a10599 1
#line 856 "rx-decode.opc"
d10609 1
a10609 1
#line 856 "rx-decode.opc"
d10625 1
a10625 1
#line 938 "rx-decode.opc"
d10627 1
a10627 1
#line 938 "rx-decode.opc"
d10638 1
a10638 1
#line 938 "rx-decode.opc"
d10804 1
a10804 1
#line 671 "rx-decode.opc"
d10806 1
a10806 1
#line 671 "rx-decode.opc"
d10808 1
a10808 1
#line 671 "rx-decode.opc"
d10820 1
a10820 1
#line 671 "rx-decode.opc"
d11117 1
a11117 1
#line 661 "rx-decode.opc"
d11119 1
a11119 1
#line 661 "rx-decode.opc"
d11121 1
a11121 1
#line 661 "rx-decode.opc"
d11133 1
a11133 1
#line 661 "rx-decode.opc"
d11428 1
a11428 1
#line 651 "rx-decode.opc"
d11430 1
a11430 1
#line 651 "rx-decode.opc"
d11432 1
a11432 1
#line 651 "rx-decode.opc"
d11444 1
a11444 1
#line 651 "rx-decode.opc"
d11753 1
a11753 1
#line 917 "rx-decode.opc"
d11755 1
a11755 1
#line 917 "rx-decode.opc"
d11757 1
a11757 1
#line 917 "rx-decode.opc"
d11769 1
a11769 1
#line 917 "rx-decode.opc"
d11781 1
a11781 1
#line 910 "rx-decode.opc"
d11783 1
a11783 1
#line 910 "rx-decode.opc"
d11794 1
a11794 1
#line 910 "rx-decode.opc"
d12623 1
a12623 1
#line 315 "rx-decode.opc"
d12625 1
a12625 1
#line 315 "rx-decode.opc"
d12627 1
a12627 1
#line 315 "rx-decode.opc"
d12629 1
a12629 1
#line 315 "rx-decode.opc"
d12642 1
a12642 1
#line 315 "rx-decode.opc"
d13080 1
a13080 1
#line 312 "rx-decode.opc"
d13082 1
a13082 1
#line 312 "rx-decode.opc"
d13084 1
a13084 1
#line 312 "rx-decode.opc"
d13086 1
a13086 1
#line 312 "rx-decode.opc"
d13099 1
a13099 1
#line 312 "rx-decode.opc"
d13537 1
a13537 1
#line 318 "rx-decode.opc"
d13539 1
a13539 1
#line 318 "rx-decode.opc"
d13541 1
a13541 1
#line 318 "rx-decode.opc"
d13543 1
a13543 1
#line 318 "rx-decode.opc"
d13556 1
a13556 1
#line 318 "rx-decode.opc"
d14001 1
a14001 1
#line 522 "rx-decode.opc"
d14003 1
a14003 1
#line 522 "rx-decode.opc"
d14005 1
a14005 1
#line 522 "rx-decode.opc"
d14017 1
a14017 1
#line 522 "rx-decode.opc"
d14170 1
a14170 1
#line 489 "rx-decode.opc"
d14172 1
a14172 1
#line 489 "rx-decode.opc"
d14174 1
a14174 1
#line 489 "rx-decode.opc"
d14186 1
a14186 1
#line 489 "rx-decode.opc"
d14339 1
a14339 1
#line 591 "rx-decode.opc"
d14341 1
a14341 1
#line 591 "rx-decode.opc"
d14343 1
a14343 1
#line 591 "rx-decode.opc"
d14355 1
a14355 1
#line 591 "rx-decode.opc"
d14508 1
a14508 1
#line 399 "rx-decode.opc"
d14510 1
a14510 1
#line 399 "rx-decode.opc"
d14512 1
a14512 1
#line 399 "rx-decode.opc"
d14524 1
a14524 1
#line 399 "rx-decode.opc"
d14677 1
a14677 1
#line 417 "rx-decode.opc"
d14679 1
a14679 1
#line 417 "rx-decode.opc"
d14681 1
a14681 1
#line 417 "rx-decode.opc"
d14693 1
a14693 1
#line 417 "rx-decode.opc"
d14843 1
a14843 1
#line 974 "rx-decode.opc"
@


1.8
log
@* rx-decode.opc (MOV): Do not sign-extend immediates which are
already the maximum bit size.
* rx-decode.c: Regenerate.
@
text
@d3 1
a6 2

#include "config.h"
@


1.7
log
@* rx-decode.opc (rx_decode_opcode): Set the syntax for multi-byte NOPs.
* rx-decode.c: Regenerate.
@
text
@d274 1
a274 1
#line 943 "rx-decode.opc"
d289 1
a289 1
#line 946 "rx-decode.opc"
d304 1
a304 1
#line 732 "rx-decode.opc"
d322 1
a322 1
#line 738 "rx-decode.opc"
d340 1
a340 1
#line 710 "rx-decode.opc"
d355 1
a355 1
#line 726 "rx-decode.opc"
d372 1
a372 1
#line 506 "rx-decode.opc"
d374 1
a374 1
#line 506 "rx-decode.opc"
d376 1
a376 1
#line 506 "rx-decode.opc"
d378 1
a378 1
#line 506 "rx-decode.opc"
d391 1
a391 1
#line 506 "rx-decode.opc"
d433 1
a433 1
#line 494 "rx-decode.opc"
d435 1
a435 1
#line 494 "rx-decode.opc"
d437 1
a437 1
#line 494 "rx-decode.opc"
d439 1
a439 1
#line 494 "rx-decode.opc"
d452 1
a452 1
#line 494 "rx-decode.opc"
d497 1
a497 1
#line 470 "rx-decode.opc"
d499 1
a499 1
#line 470 "rx-decode.opc"
d501 1
a501 1
#line 470 "rx-decode.opc"
d503 1
a503 1
#line 470 "rx-decode.opc"
d516 1
a516 1
#line 470 "rx-decode.opc"
d558 1
a558 1
#line 575 "rx-decode.opc"
d560 1
a560 1
#line 575 "rx-decode.opc"
d562 1
a562 1
#line 575 "rx-decode.opc"
d564 1
a564 1
#line 575 "rx-decode.opc"
d577 1
a577 1
#line 575 "rx-decode.opc"
d619 1
a619 1
#line 383 "rx-decode.opc"
d621 1
a621 1
#line 383 "rx-decode.opc"
d623 1
a623 1
#line 383 "rx-decode.opc"
d625 1
a625 1
#line 383 "rx-decode.opc"
d638 1
a638 1
#line 383 "rx-decode.opc"
d680 1
a680 1
#line 401 "rx-decode.opc"
d682 1
a682 1
#line 401 "rx-decode.opc"
d684 1
a684 1
#line 401 "rx-decode.opc"
d686 1
a686 1
#line 401 "rx-decode.opc"
d699 1
a699 1
#line 401 "rx-decode.opc"
d745 1
a745 1
#line 519 "rx-decode.opc"
d747 1
a747 1
#line 519 "rx-decode.opc"
d749 1
a749 1
#line 519 "rx-decode.opc"
d751 1
a751 1
#line 519 "rx-decode.opc"
d764 1
a764 1
#line 519 "rx-decode.opc"
d782 1
a782 1
#line 548 "rx-decode.opc"
d784 1
a784 1
#line 548 "rx-decode.opc"
d786 1
a786 1
#line 548 "rx-decode.opc"
d788 1
a788 1
#line 548 "rx-decode.opc"
d801 1
a801 1
#line 548 "rx-decode.opc"
d819 1
a819 1
#line 560 "rx-decode.opc"
d821 1
a821 1
#line 560 "rx-decode.opc"
d823 1
a823 1
#line 560 "rx-decode.opc"
d825 1
a825 1
#line 560 "rx-decode.opc"
d838 1
a838 1
#line 560 "rx-decode.opc"
d856 1
a856 1
#line 590 "rx-decode.opc"
d858 1
a858 1
#line 590 "rx-decode.opc"
d860 1
a860 1
#line 590 "rx-decode.opc"
d862 1
a862 1
#line 590 "rx-decode.opc"
d875 1
a875 1
#line 590 "rx-decode.opc"
d893 1
a893 1
#line 602 "rx-decode.opc"
d895 1
a895 1
#line 602 "rx-decode.opc"
d897 1
a897 1
#line 602 "rx-decode.opc"
d899 1
a899 1
#line 602 "rx-decode.opc"
d912 1
a912 1
#line 602 "rx-decode.opc"
d930 1
a930 1
#line 614 "rx-decode.opc"
d932 1
a932 1
#line 614 "rx-decode.opc"
d934 1
a934 1
#line 614 "rx-decode.opc"
d936 1
a936 1
#line 614 "rx-decode.opc"
d949 1
a949 1
#line 614 "rx-decode.opc"
d967 1
a967 1
#line 626 "rx-decode.opc"
d969 1
a969 1
#line 626 "rx-decode.opc"
d971 1
a971 1
#line 626 "rx-decode.opc"
d973 1
a973 1
#line 626 "rx-decode.opc"
d986 1
a986 1
#line 626 "rx-decode.opc"
d1004 1
a1004 1
#line 437 "rx-decode.opc"
d1006 1
a1006 1
#line 437 "rx-decode.opc"
d1008 1
a1008 1
#line 437 "rx-decode.opc"
d1010 1
a1010 1
#line 437 "rx-decode.opc"
d1023 1
a1023 1
#line 437 "rx-decode.opc"
d1041 1
a1041 1
#line 416 "rx-decode.opc"
d1043 1
a1043 1
#line 416 "rx-decode.opc"
d1045 1
a1045 1
#line 416 "rx-decode.opc"
d1047 1
a1047 1
#line 416 "rx-decode.opc"
d1060 1
a1060 1
#line 416 "rx-decode.opc"
d1078 1
a1078 1
#line 350 "rx-decode.opc"
d1080 1
a1080 1
#line 350 "rx-decode.opc"
d1082 1
a1082 1
#line 350 "rx-decode.opc"
d1084 1
a1084 1
#line 350 "rx-decode.opc"
d1097 1
a1097 1
#line 350 "rx-decode.opc"
d1115 1
a1115 1
#line 855 "rx-decode.opc"
d1117 1
a1117 1
#line 855 "rx-decode.opc"
d1119 1
a1119 1
#line 855 "rx-decode.opc"
d1121 1
a1121 1
#line 855 "rx-decode.opc"
d1134 1
a1134 1
#line 855 "rx-decode.opc"
d2342 1
a2342 1
#line 458 "rx-decode.opc"
d2344 1
a2344 1
#line 458 "rx-decode.opc"
d2346 1
a2346 1
#line 458 "rx-decode.opc"
d2358 1
a2358 1
#line 458 "rx-decode.opc"
d3459 1
a3459 1
#line 701 "rx-decode.opc"
d3469 1
a3469 1
#line 701 "rx-decode.opc"
d3492 1
a3492 1
#line 691 "rx-decode.opc"
d3494 1
a3494 1
#line 691 "rx-decode.opc"
d3505 1
a3505 1
#line 691 "rx-decode.opc"
d3527 1
a3527 1
#line 694 "rx-decode.opc"
d3537 1
a3537 1
#line 694 "rx-decode.opc"
d3552 1
a3552 1
#line 704 "rx-decode.opc"
d3567 1
a3567 1
#line 707 "rx-decode.opc"
d3582 1
a3582 1
#line 723 "rx-decode.opc"
d3591 1
a3591 1
#line 697 "rx-decode.opc"
d3601 1
a3601 1
#line 697 "rx-decode.opc"
d3615 1
a3615 1
#line 271 "rx-decode.opc"
d3617 1
a3617 1
#line 271 "rx-decode.opc"
d3619 1
a3619 1
#line 271 "rx-decode.opc"
d3621 1
a3621 1
#line 271 "rx-decode.opc"
d3634 1
a3634 1
#line 271 "rx-decode.opc"
d3666 1
a3666 1
#line 368 "rx-decode.opc"
d3668 1
a3668 1
#line 368 "rx-decode.opc"
d3679 1
a3679 1
#line 368 "rx-decode.opc"
d3697 1
a3697 1
#line 503 "rx-decode.opc"
d3699 1
a3699 1
#line 503 "rx-decode.opc"
d3701 1
a3701 1
#line 503 "rx-decode.opc"
d3713 1
a3713 1
#line 503 "rx-decode.opc"
d3755 1
a3755 1
#line 491 "rx-decode.opc"
d3757 1
a3757 1
#line 491 "rx-decode.opc"
d3759 1
a3759 1
#line 491 "rx-decode.opc"
d3771 1
a3771 1
#line 491 "rx-decode.opc"
d3813 1
a3813 1
#line 467 "rx-decode.opc"
d3815 1
a3815 1
#line 467 "rx-decode.opc"
d3817 1
a3817 1
#line 467 "rx-decode.opc"
d3829 1
a3829 1
#line 467 "rx-decode.opc"
d3871 1
a3871 1
#line 572 "rx-decode.opc"
d3873 1
a3873 1
#line 572 "rx-decode.opc"
d3875 1
a3875 1
#line 572 "rx-decode.opc"
d3887 1
a3887 1
#line 572 "rx-decode.opc"
d3929 1
a3929 1
#line 380 "rx-decode.opc"
d3931 1
a3931 1
#line 380 "rx-decode.opc"
d3933 1
a3933 1
#line 380 "rx-decode.opc"
d3945 1
a3945 1
#line 380 "rx-decode.opc"
d3987 1
a3987 1
#line 398 "rx-decode.opc"
d3989 1
a3989 1
#line 398 "rx-decode.opc"
d3991 1
a3991 1
#line 398 "rx-decode.opc"
d4003 1
a4003 1
#line 398 "rx-decode.opc"
d4045 1
a4045 1
#line 319 "rx-decode.opc"
d4047 1
a4047 1
#line 319 "rx-decode.opc"
d4049 1
a4049 1
#line 319 "rx-decode.opc"
d4051 1
a4051 1
#line 319 "rx-decode.opc"
d4064 1
a4064 1
#line 319 "rx-decode.opc"
d4141 1
a4141 1
#line 500 "rx-decode.opc"
d4143 1
a4143 1
#line 500 "rx-decode.opc"
d4154 1
a4154 1
#line 500 "rx-decode.opc"
d4168 1
a4168 1
#line 482 "rx-decode.opc"
d4170 1
a4170 1
#line 482 "rx-decode.opc"
d4181 1
a4181 1
#line 482 "rx-decode.opc"
d4195 1
a4195 1
#line 464 "rx-decode.opc"
d4197 1
a4197 1
#line 464 "rx-decode.opc"
d4208 1
a4208 1
#line 464 "rx-decode.opc"
d4222 1
a4222 1
#line 566 "rx-decode.opc"
d4224 1
a4224 1
#line 566 "rx-decode.opc"
d4235 1
a4235 1
#line 566 "rx-decode.opc"
d4249 1
a4249 1
#line 374 "rx-decode.opc"
d4251 1
a4251 1
#line 374 "rx-decode.opc"
d4262 1
a4262 1
#line 374 "rx-decode.opc"
d4276 1
a4276 1
#line 392 "rx-decode.opc"
d4278 1
a4278 1
#line 392 "rx-decode.opc"
d4289 1
a4289 1
#line 392 "rx-decode.opc"
d4303 1
a4303 1
#line 268 "rx-decode.opc"
d4305 1
a4305 1
#line 268 "rx-decode.opc"
d4316 1
a4316 1
#line 268 "rx-decode.opc"
d4333 1
a4333 1
#line 365 "rx-decode.opc"
d4346 1
a4346 1
#line 652 "rx-decode.opc"
d4348 1
a4348 1
#line 652 "rx-decode.opc"
d4350 1
a4350 1
#line 652 "rx-decode.opc"
d4362 1
a4362 1
#line 652 "rx-decode.opc"
d4386 1
a4386 1
#line 642 "rx-decode.opc"
d4388 1
a4388 1
#line 642 "rx-decode.opc"
d4390 1
a4390 1
#line 642 "rx-decode.opc"
d4402 1
a4402 1
#line 642 "rx-decode.opc"
d4426 1
a4426 1
#line 632 "rx-decode.opc"
d4428 1
a4428 1
#line 632 "rx-decode.opc"
d4430 1
a4430 1
#line 632 "rx-decode.opc"
d4442 1
a4442 1
#line 632 "rx-decode.opc"
d4465 1
a4465 1
#line 332 "rx-decode.opc"
d4467 1
a4467 1
#line 332 "rx-decode.opc"
d4478 1
a4478 1
#line 332 "rx-decode.opc"
d4492 1
a4492 1
#line 329 "rx-decode.opc"
d4494 1
a4494 1
#line 329 "rx-decode.opc"
d4505 1
a4505 1
#line 329 "rx-decode.opc"
d4520 1
a4520 1
#line 473 "rx-decode.opc"
d4522 1
a4522 1
#line 473 "rx-decode.opc"
d4524 1
a4524 1
#line 473 "rx-decode.opc"
d4536 1
a4536 1
#line 473 "rx-decode.opc"
d4578 1
a4578 1
#line 485 "rx-decode.opc"
d4580 1
a4580 1
#line 485 "rx-decode.opc"
d4591 1
a4591 1
#line 485 "rx-decode.opc"
d4600 1
a4600 1
#line 569 "rx-decode.opc"
d4602 1
a4602 1
#line 569 "rx-decode.opc"
d4613 1
a4613 1
#line 569 "rx-decode.opc"
d4622 1
a4622 1
#line 377 "rx-decode.opc"
d4624 1
a4624 1
#line 377 "rx-decode.opc"
d4635 1
a4635 1
#line 377 "rx-decode.opc"
d4644 1
a4644 1
#line 395 "rx-decode.opc"
d4646 1
a4646 1
#line 395 "rx-decode.opc"
d4657 1
a4657 1
#line 395 "rx-decode.opc"
d4792 1
a4792 1
#line 488 "rx-decode.opc"
d4802 1
a4802 1
#line 488 "rx-decode.opc"
d4817 1
a4817 1
#line 949 "rx-decode.opc"
d4829 1
a4829 1
#line 916 "rx-decode.opc"
d4839 1
a4839 1
#line 916 "rx-decode.opc"
d4896 1
a4896 1
#line 867 "rx-decode.opc"
d4898 1
a4898 1
#line 867 "rx-decode.opc"
d4900 1
a4900 1
#line 867 "rx-decode.opc"
d4912 1
a4912 1
#line 867 "rx-decode.opc"
d4937 1
a4937 1
#line 877 "rx-decode.opc"
d4939 1
a4939 1
#line 877 "rx-decode.opc"
d4941 1
a4941 1
#line 877 "rx-decode.opc"
d4953 1
a4953 1
#line 877 "rx-decode.opc"
d4978 1
a4978 1
#line 887 "rx-decode.opc"
d4980 1
a4980 1
#line 887 "rx-decode.opc"
d4982 1
a4982 1
#line 887 "rx-decode.opc"
d4994 1
a4994 1
#line 887 "rx-decode.opc"
d5018 1
a5018 1
#line 422 "rx-decode.opc"
d5028 1
a5028 1
#line 422 "rx-decode.opc"
d5036 1
a5036 1
#line 443 "rx-decode.opc"
d5046 1
a5046 1
#line 443 "rx-decode.opc"
d5054 1
a5054 1
#line 525 "rx-decode.opc"
d5064 1
a5064 1
#line 525 "rx-decode.opc"
d5072 1
a5072 1
#line 807 "rx-decode.opc"
d5082 1
a5082 1
#line 807 "rx-decode.opc"
d5090 1
a5090 1
#line 667 "rx-decode.opc"
d5100 1
a5100 1
#line 667 "rx-decode.opc"
d5108 1
a5108 1
#line 664 "rx-decode.opc"
d5118 1
a5118 1
#line 664 "rx-decode.opc"
d5128 1
a5128 1
#line 338 "rx-decode.opc"
d5130 1
a5130 1
#line 338 "rx-decode.opc"
d5141 1
a5141 1
#line 338 "rx-decode.opc"
d5149 1
a5149 1
#line 335 "rx-decode.opc"
d5159 1
a5159 1
#line 335 "rx-decode.opc"
d5168 1
a5168 1
#line 922 "rx-decode.opc"
d5178 1
a5178 1
#line 922 "rx-decode.opc"
d5187 1
a5187 1
#line 919 "rx-decode.opc"
d5197 1
a5197 1
#line 919 "rx-decode.opc"
d5227 1
a5227 1
#line 717 "rx-decode.opc"
d5237 1
a5237 1
#line 717 "rx-decode.opc"
d5260 1
a5260 1
#line 720 "rx-decode.opc"
d5270 1
a5270 1
#line 720 "rx-decode.opc"
d5293 1
a5293 1
#line 713 "rx-decode.opc"
d5303 1
a5303 1
#line 713 "rx-decode.opc"
d5327 1
a5327 1
#line 729 "rx-decode.opc"
d5337 1
a5337 1
#line 729 "rx-decode.opc"
d5347 1
a5347 1
#line 753 "rx-decode.opc"
d5357 1
a5357 1
#line 753 "rx-decode.opc"
d5372 1
a5372 1
#line 744 "rx-decode.opc"
d5382 1
a5382 1
#line 756 "rx-decode.opc"
d5392 1
a5392 1
#line 756 "rx-decode.opc"
d5407 1
a5407 1
#line 747 "rx-decode.opc"
d5417 1
a5417 1
#line 762 "rx-decode.opc"
d5427 1
a5427 1
#line 762 "rx-decode.opc"
d5445 1
a5445 1
#line 750 "rx-decode.opc"
d5455 1
a5455 1
#line 768 "rx-decode.opc"
d5465 1
a5465 1
#line 768 "rx-decode.opc"
d5483 1
a5483 1
#line 759 "rx-decode.opc"
d5498 1
a5498 1
#line 810 "rx-decode.opc"
d5516 1
a5516 1
#line 937 "rx-decode.opc"
d5531 1
a5531 1
#line 940 "rx-decode.opc"
d5546 1
a5546 1
#line 952 "rx-decode.opc"
d5572 1
a5572 1
#line 913 "rx-decode.opc"
d5582 1
a5582 1
#line 913 "rx-decode.opc"
d5605 1
a5605 1
#line 910 "rx-decode.opc"
d5615 1
a5615 1
#line 910 "rx-decode.opc"
d5631 1
a5631 1
#line 296 "rx-decode.opc"
d5633 1
a5633 1
#line 296 "rx-decode.opc"
d5635 1
a5635 1
#line 296 "rx-decode.opc"
d5637 1
a5637 1
#line 296 "rx-decode.opc"
d5639 1
a5639 1
#line 296 "rx-decode.opc"
d5641 1
a5641 1
#line 296 "rx-decode.opc"
d5656 1
a5656 1
#line 296 "rx-decode.opc"
d5734 1
a5734 1
#line 293 "rx-decode.opc"
d5736 1
a5736 1
#line 293 "rx-decode.opc"
d5738 1
a5738 1
#line 293 "rx-decode.opc"
d5740 1
a5740 1
#line 293 "rx-decode.opc"
d5742 1
a5742 1
#line 293 "rx-decode.opc"
d5744 1
a5744 1
#line 293 "rx-decode.opc"
d5759 1
a5759 1
#line 293 "rx-decode.opc"
d6125 1
a6125 1
#line 316 "rx-decode.opc"
d6127 1
a6127 1
#line 316 "rx-decode.opc"
d6129 1
a6129 1
#line 316 "rx-decode.opc"
d6131 1
a6131 1
#line 316 "rx-decode.opc"
d6133 1
a6133 1
#line 316 "rx-decode.opc"
d6135 1
a6135 1
#line 316 "rx-decode.opc"
d6150 1
a6150 1
#line 316 "rx-decode.opc"
d6300 1
a6300 1
#line 274 "rx-decode.opc"
d6302 1
a6302 1
#line 274 "rx-decode.opc"
d6304 1
a6304 1
#line 274 "rx-decode.opc"
d6306 1
a6306 1
#line 274 "rx-decode.opc"
d6308 1
a6308 1
#line 274 "rx-decode.opc"
d6322 1
a6322 1
#line 274 "rx-decode.opc"
d6776 1
a6776 1
#line 861 "rx-decode.opc"
d6778 1
a6778 1
#line 861 "rx-decode.opc"
d6780 1
a6780 1
#line 861 "rx-decode.opc"
d6792 1
a6792 1
#line 861 "rx-decode.opc"
d6801 1
a6801 1
#line 871 "rx-decode.opc"
d6803 1
a6803 1
#line 871 "rx-decode.opc"
d6805 1
a6805 1
#line 871 "rx-decode.opc"
d6817 1
a6817 1
#line 871 "rx-decode.opc"
d6869 1
a6869 1
#line 881 "rx-decode.opc"
d6871 1
a6871 1
#line 881 "rx-decode.opc"
d6873 1
a6873 1
#line 881 "rx-decode.opc"
d6885 1
a6885 1
#line 881 "rx-decode.opc"
d6894 1
a6894 1
#line 341 "rx-decode.opc"
d6896 1
a6896 1
#line 341 "rx-decode.opc"
d6898 1
a6898 1
#line 341 "rx-decode.opc"
d6910 1
a6910 1
#line 341 "rx-decode.opc"
d6991 14
a7004 1
                ID(mov); sBWL (sz); DD(sd, rdst, sz); SC(IMMex(im)); F_____;
d7048 1
a7048 1
#line 515 "rx-decode.opc"
d7050 1
a7050 1
#line 515 "rx-decode.opc"
d7061 1
a7061 1
#line 515 "rx-decode.opc"
d7076 1
a7076 1
#line 446 "rx-decode.opc"
d7078 1
a7078 1
#line 446 "rx-decode.opc"
d7089 1
a7089 1
#line 446 "rx-decode.opc"
d7106 1
a7106 1
#line 455 "rx-decode.opc"
d7108 1
a7108 1
#line 455 "rx-decode.opc"
d7119 1
a7119 1
#line 455 "rx-decode.opc"
d7133 1
a7133 1
#line 528 "rx-decode.opc"
d7135 1
a7135 1
#line 528 "rx-decode.opc"
d7146 1
a7146 1
#line 528 "rx-decode.opc"
d7164 1
a7164 1
#line 537 "rx-decode.opc"
d7166 1
a7166 1
#line 537 "rx-decode.opc"
d7168 1
a7168 1
#line 537 "rx-decode.opc"
d7180 1
a7180 1
#line 537 "rx-decode.opc"
d7230 1
a7230 1
#line 557 "rx-decode.opc"
d7232 1
a7232 1
#line 557 "rx-decode.opc"
d7234 1
a7234 1
#line 557 "rx-decode.opc"
d7246 1
a7246 1
#line 557 "rx-decode.opc"
d7288 1
a7288 1
#line 587 "rx-decode.opc"
d7290 1
a7290 1
#line 587 "rx-decode.opc"
d7292 1
a7292 1
#line 587 "rx-decode.opc"
d7304 1
a7304 1
#line 587 "rx-decode.opc"
d7346 1
a7346 1
#line 599 "rx-decode.opc"
d7348 1
a7348 1
#line 599 "rx-decode.opc"
d7350 1
a7350 1
#line 599 "rx-decode.opc"
d7362 1
a7362 1
#line 599 "rx-decode.opc"
d7404 1
a7404 1
#line 611 "rx-decode.opc"
d7406 1
a7406 1
#line 611 "rx-decode.opc"
d7408 1
a7408 1
#line 611 "rx-decode.opc"
d7420 1
a7420 1
#line 611 "rx-decode.opc"
d7462 1
a7462 1
#line 623 "rx-decode.opc"
d7464 1
a7464 1
#line 623 "rx-decode.opc"
d7466 1
a7466 1
#line 623 "rx-decode.opc"
d7478 1
a7478 1
#line 623 "rx-decode.opc"
d7520 1
a7520 1
#line 434 "rx-decode.opc"
d7522 1
a7522 1
#line 434 "rx-decode.opc"
d7524 1
a7524 1
#line 434 "rx-decode.opc"
d7536 1
a7536 1
#line 434 "rx-decode.opc"
d7578 1
a7578 1
#line 413 "rx-decode.opc"
d7580 1
a7580 1
#line 413 "rx-decode.opc"
d7582 1
a7582 1
#line 413 "rx-decode.opc"
d7594 1
a7594 1
#line 413 "rx-decode.opc"
d7635 1
a7635 1
#line 425 "rx-decode.opc"
d7637 1
a7637 1
#line 425 "rx-decode.opc"
d7648 1
a7648 1
#line 425 "rx-decode.opc"
d7666 1
a7666 1
#line 347 "rx-decode.opc"
d7668 1
a7668 1
#line 347 "rx-decode.opc"
d7670 1
a7670 1
#line 347 "rx-decode.opc"
d7682 1
a7682 1
#line 347 "rx-decode.opc"
d7724 1
a7724 1
#line 852 "rx-decode.opc"
d7726 1
a7726 1
#line 852 "rx-decode.opc"
d7728 1
a7728 1
#line 852 "rx-decode.opc"
d7740 1
a7740 1
#line 852 "rx-decode.opc"
d7782 1
a7782 1
#line 864 "rx-decode.opc"
d7784 1
a7784 1
#line 864 "rx-decode.opc"
d7786 1
a7786 1
#line 864 "rx-decode.opc"
d7798 1
a7798 1
#line 864 "rx-decode.opc"
d7840 1
a7840 1
#line 874 "rx-decode.opc"
d7842 1
a7842 1
#line 874 "rx-decode.opc"
d7844 1
a7844 1
#line 874 "rx-decode.opc"
d7856 1
a7856 1
#line 874 "rx-decode.opc"
d7898 1
a7898 1
#line 884 "rx-decode.opc"
d7900 1
a7900 1
#line 884 "rx-decode.opc"
d7902 1
a7902 1
#line 884 "rx-decode.opc"
d7914 1
a7914 1
#line 884 "rx-decode.opc"
d7956 1
a7956 1
#line 894 "rx-decode.opc"
d7958 1
a7958 1
#line 894 "rx-decode.opc"
d7960 1
a7960 1
#line 894 "rx-decode.opc"
d7972 1
a7972 1
#line 894 "rx-decode.opc"
d8014 1
a8014 1
#line 831 "rx-decode.opc"
d8016 1
a8016 1
#line 831 "rx-decode.opc"
d8018 1
a8018 1
#line 831 "rx-decode.opc"
d8030 1
a8030 1
#line 831 "rx-decode.opc"
d8072 1
a8072 1
#line 825 "rx-decode.opc"
d8074 1
a8074 1
#line 825 "rx-decode.opc"
d8076 1
a8076 1
#line 825 "rx-decode.opc"
d8088 1
a8088 1
#line 825 "rx-decode.opc"
d8130 1
a8130 1
#line 819 "rx-decode.opc"
d8132 1
a8132 1
#line 819 "rx-decode.opc"
d8134 1
a8134 1
#line 819 "rx-decode.opc"
d8146 1
a8146 1
#line 819 "rx-decode.opc"
d8188 1
a8188 1
#line 840 "rx-decode.opc"
d8190 1
a8190 1
#line 840 "rx-decode.opc"
d8192 1
a8192 1
#line 840 "rx-decode.opc"
d8204 1
a8204 1
#line 840 "rx-decode.opc"
d8246 1
a8246 1
#line 846 "rx-decode.opc"
d8248 1
a8248 1
#line 846 "rx-decode.opc"
d8250 1
a8250 1
#line 846 "rx-decode.opc"
d8262 1
a8262 1
#line 846 "rx-decode.opc"
d8304 1
a8304 1
#line 834 "rx-decode.opc"
d8306 1
a8306 1
#line 834 "rx-decode.opc"
d8308 1
a8308 1
#line 834 "rx-decode.opc"
d8320 1
a8320 1
#line 834 "rx-decode.opc"
d8362 1
a8362 1
#line 849 "rx-decode.opc"
d8364 1
a8364 1
#line 849 "rx-decode.opc"
d8366 1
a8366 1
#line 849 "rx-decode.opc"
d8378 1
a8378 1
#line 849 "rx-decode.opc"
d8420 1
a8420 1
#line 958 "rx-decode.opc"
d8422 1
a8422 1
#line 958 "rx-decode.opc"
d8424 1
a8424 1
#line 958 "rx-decode.opc"
d8426 1
a8426 1
#line 958 "rx-decode.opc"
d8439 1
a8439 1
#line 958 "rx-decode.opc"
d8567 1
a8567 1
#line 901 "rx-decode.opc"
d8569 1
a8569 1
#line 901 "rx-decode.opc"
d8571 1
a8571 1
#line 901 "rx-decode.opc"
d8573 1
a8573 1
#line 901 "rx-decode.opc"
d8586 1
a8586 1
#line 901 "rx-decode.opc"
d8595 1
a8595 1
#line 891 "rx-decode.opc"
d8597 1
a8597 1
#line 891 "rx-decode.opc"
d8599 1
a8599 1
#line 891 "rx-decode.opc"
d8611 1
a8611 1
#line 891 "rx-decode.opc"
d9438 1
a9438 1
#line 774 "rx-decode.opc"
d9440 1
a9440 1
#line 774 "rx-decode.opc"
d9451 1
a9451 1
#line 774 "rx-decode.opc"
d9465 1
a9465 1
#line 777 "rx-decode.opc"
d9467 1
a9467 1
#line 777 "rx-decode.opc"
d9478 1
a9478 1
#line 777 "rx-decode.opc"
d9492 1
a9492 1
#line 780 "rx-decode.opc"
d9494 1
a9494 1
#line 780 "rx-decode.opc"
d9505 1
a9505 1
#line 780 "rx-decode.opc"
d9519 1
a9519 1
#line 783 "rx-decode.opc"
d9521 1
a9521 1
#line 783 "rx-decode.opc"
d9532 1
a9532 1
#line 783 "rx-decode.opc"
d9546 1
a9546 1
#line 786 "rx-decode.opc"
d9556 1
a9556 1
#line 786 "rx-decode.opc"
d9564 1
a9564 1
#line 789 "rx-decode.opc"
d9574 1
a9574 1
#line 789 "rx-decode.opc"
d9589 1
a9589 1
#line 801 "rx-decode.opc"
d9599 1
a9599 1
#line 801 "rx-decode.opc"
d9617 1
a9617 1
#line 792 "rx-decode.opc"
d9627 1
a9627 1
#line 792 "rx-decode.opc"
d9635 1
a9635 1
#line 798 "rx-decode.opc"
d9645 1
a9645 1
#line 798 "rx-decode.opc"
d9653 1
a9653 1
#line 795 "rx-decode.opc"
d9663 1
a9663 1
#line 795 "rx-decode.opc"
d9679 1
a9679 1
#line 308 "rx-decode.opc"
d9681 1
a9681 1
#line 308 "rx-decode.opc"
d9683 1
a9683 1
#line 308 "rx-decode.opc"
d9685 1
a9685 1
#line 308 "rx-decode.opc"
d9698 1
a9698 1
#line 308 "rx-decode.opc"
d9759 1
a9759 1
#line 312 "rx-decode.opc"
d9761 1
a9761 1
#line 312 "rx-decode.opc"
d9763 1
a9763 1
#line 312 "rx-decode.opc"
d9765 1
a9765 1
#line 312 "rx-decode.opc"
d9778 1
a9778 1
#line 312 "rx-decode.opc"
d9839 1
a9839 1
#line 322 "rx-decode.opc"
d9841 1
a9841 1
#line 322 "rx-decode.opc"
d9843 1
a9843 1
#line 322 "rx-decode.opc"
d9845 1
a9845 1
#line 322 "rx-decode.opc"
d9858 1
a9858 1
#line 322 "rx-decode.opc"
d9921 1
a9921 1
#line 655 "rx-decode.opc"
d9923 1
a9923 1
#line 655 "rx-decode.opc"
d9934 1
a9934 1
#line 655 "rx-decode.opc"
d9948 1
a9948 1
#line 645 "rx-decode.opc"
d9950 1
a9950 1
#line 645 "rx-decode.opc"
d9961 1
a9961 1
#line 645 "rx-decode.opc"
d9975 1
a9975 1
#line 635 "rx-decode.opc"
d9977 1
a9977 1
#line 635 "rx-decode.opc"
d9988 1
a9988 1
#line 635 "rx-decode.opc"
d10002 1
a10002 1
#line 679 "rx-decode.opc"
d10004 1
a10004 1
#line 679 "rx-decode.opc"
d10015 1
a10015 1
#line 679 "rx-decode.opc"
d10029 1
a10029 1
#line 682 "rx-decode.opc"
d10031 1
a10031 1
#line 682 "rx-decode.opc"
d10042 1
a10042 1
#line 682 "rx-decode.opc"
d10056 1
a10056 1
#line 673 "rx-decode.opc"
d10058 1
a10058 1
#line 673 "rx-decode.opc"
d10069 1
a10069 1
#line 673 "rx-decode.opc"
d10083 1
a10083 1
#line 685 "rx-decode.opc"
d10085 1
a10085 1
#line 685 "rx-decode.opc"
d10096 1
a10096 1
#line 685 "rx-decode.opc"
d10114 1
a10114 1
#line 928 "rx-decode.opc"
d10116 1
a10116 1
#line 928 "rx-decode.opc"
d10118 1
a10118 1
#line 928 "rx-decode.opc"
d10130 1
a10130 1
#line 928 "rx-decode.opc"
d10154 1
a10154 1
#line 931 "rx-decode.opc"
d10156 1
a10156 1
#line 931 "rx-decode.opc"
d10158 1
a10158 1
#line 931 "rx-decode.opc"
d10170 1
a10170 1
#line 931 "rx-decode.opc"
d10197 1
a10197 1
#line 676 "rx-decode.opc"
d10199 1
a10199 1
#line 676 "rx-decode.opc"
d10201 1
a10201 1
#line 676 "rx-decode.opc"
d10213 1
a10213 1
#line 676 "rx-decode.opc"
d10237 1
a10237 1
#line 670 "rx-decode.opc"
d10239 1
a10239 1
#line 670 "rx-decode.opc"
d10241 1
a10241 1
#line 670 "rx-decode.opc"
d10253 1
a10253 1
#line 670 "rx-decode.opc"
d10277 1
a10277 1
#line 452 "rx-decode.opc"
d10279 1
a10279 1
#line 452 "rx-decode.opc"
d10290 1
a10290 1
#line 452 "rx-decode.opc"
d10299 1
a10299 1
#line 534 "rx-decode.opc"
d10301 1
a10301 1
#line 534 "rx-decode.opc"
d10312 1
a10312 1
#line 534 "rx-decode.opc"
d10321 1
a10321 1
#line 554 "rx-decode.opc"
d10323 1
a10323 1
#line 554 "rx-decode.opc"
d10334 1
a10334 1
#line 554 "rx-decode.opc"
d10343 1
a10343 1
#line 584 "rx-decode.opc"
d10345 1
a10345 1
#line 584 "rx-decode.opc"
d10356 1
a10356 1
#line 584 "rx-decode.opc"
d10365 1
a10365 1
#line 596 "rx-decode.opc"
d10367 1
a10367 1
#line 596 "rx-decode.opc"
d10378 1
a10378 1
#line 596 "rx-decode.opc"
d10387 1
a10387 1
#line 608 "rx-decode.opc"
d10389 1
a10389 1
#line 608 "rx-decode.opc"
d10400 1
a10400 1
#line 608 "rx-decode.opc"
d10409 1
a10409 1
#line 620 "rx-decode.opc"
d10411 1
a10411 1
#line 620 "rx-decode.opc"
d10422 1
a10422 1
#line 620 "rx-decode.opc"
d10431 1
a10431 1
#line 431 "rx-decode.opc"
d10433 1
a10433 1
#line 431 "rx-decode.opc"
d10444 1
a10444 1
#line 431 "rx-decode.opc"
d10453 1
a10453 1
#line 410 "rx-decode.opc"
d10455 1
a10455 1
#line 410 "rx-decode.opc"
d10466 1
a10466 1
#line 410 "rx-decode.opc"
d10475 1
a10475 1
#line 356 "rx-decode.opc"
d10477 1
a10477 1
#line 356 "rx-decode.opc"
d10488 1
a10488 1
#line 356 "rx-decode.opc"
d10497 1
a10497 1
#line 359 "rx-decode.opc"
d10499 1
a10499 1
#line 359 "rx-decode.opc"
d10510 1
a10510 1
#line 359 "rx-decode.opc"
d10528 1
a10528 1
#line 828 "rx-decode.opc"
d10538 1
a10538 1
#line 828 "rx-decode.opc"
d10546 1
a10546 1
#line 822 "rx-decode.opc"
d10556 1
a10556 1
#line 822 "rx-decode.opc"
d10564 1
a10564 1
#line 816 "rx-decode.opc"
d10574 1
a10574 1
#line 816 "rx-decode.opc"
d10582 1
a10582 1
#line 837 "rx-decode.opc"
d10592 1
a10592 1
#line 837 "rx-decode.opc"
d10600 1
a10600 1
#line 843 "rx-decode.opc"
d10610 1
a10610 1
#line 843 "rx-decode.opc"
d10626 1
a10626 1
#line 925 "rx-decode.opc"
d10628 1
a10628 1
#line 925 "rx-decode.opc"
d10639 1
a10639 1
#line 925 "rx-decode.opc"
d10805 1
a10805 1
#line 658 "rx-decode.opc"
d10807 1
a10807 1
#line 658 "rx-decode.opc"
d10809 1
a10809 1
#line 658 "rx-decode.opc"
d10821 1
a10821 1
#line 658 "rx-decode.opc"
d11118 1
a11118 1
#line 648 "rx-decode.opc"
d11120 1
a11120 1
#line 648 "rx-decode.opc"
d11122 1
a11122 1
#line 648 "rx-decode.opc"
d11134 1
a11134 1
#line 648 "rx-decode.opc"
d11429 1
a11429 1
#line 638 "rx-decode.opc"
d11431 1
a11431 1
#line 638 "rx-decode.opc"
d11433 1
a11433 1
#line 638 "rx-decode.opc"
d11445 1
a11445 1
#line 638 "rx-decode.opc"
d11754 1
a11754 1
#line 904 "rx-decode.opc"
d11756 1
a11756 1
#line 904 "rx-decode.opc"
d11758 1
a11758 1
#line 904 "rx-decode.opc"
d11770 1
a11770 1
#line 904 "rx-decode.opc"
d11782 1
a11782 1
#line 897 "rx-decode.opc"
d11784 1
a11784 1
#line 897 "rx-decode.opc"
d11795 1
a11795 1
#line 897 "rx-decode.opc"
d12624 1
a12624 1
#line 302 "rx-decode.opc"
d12626 1
a12626 1
#line 302 "rx-decode.opc"
d12628 1
a12628 1
#line 302 "rx-decode.opc"
d12630 1
a12630 1
#line 302 "rx-decode.opc"
d12643 1
a12643 1
#line 302 "rx-decode.opc"
d13081 1
a13081 1
#line 299 "rx-decode.opc"
d13083 1
a13083 1
#line 299 "rx-decode.opc"
d13085 1
a13085 1
#line 299 "rx-decode.opc"
d13087 1
a13087 1
#line 299 "rx-decode.opc"
d13100 1
a13100 1
#line 299 "rx-decode.opc"
d13538 1
a13538 1
#line 305 "rx-decode.opc"
d13540 1
a13540 1
#line 305 "rx-decode.opc"
d13542 1
a13542 1
#line 305 "rx-decode.opc"
d13544 1
a13544 1
#line 305 "rx-decode.opc"
d13557 1
a13557 1
#line 305 "rx-decode.opc"
d14002 1
a14002 1
#line 509 "rx-decode.opc"
d14004 1
a14004 1
#line 509 "rx-decode.opc"
d14006 1
a14006 1
#line 509 "rx-decode.opc"
d14018 1
a14018 1
#line 509 "rx-decode.opc"
d14171 1
a14171 1
#line 476 "rx-decode.opc"
d14173 1
a14173 1
#line 476 "rx-decode.opc"
d14175 1
a14175 1
#line 476 "rx-decode.opc"
d14187 1
a14187 1
#line 476 "rx-decode.opc"
d14340 1
a14340 1
#line 578 "rx-decode.opc"
d14342 1
a14342 1
#line 578 "rx-decode.opc"
d14344 1
a14344 1
#line 578 "rx-decode.opc"
d14356 1
a14356 1
#line 578 "rx-decode.opc"
d14509 1
a14509 1
#line 386 "rx-decode.opc"
d14511 1
a14511 1
#line 386 "rx-decode.opc"
d14513 1
a14513 1
#line 386 "rx-decode.opc"
d14525 1
a14525 1
#line 386 "rx-decode.opc"
d14678 1
a14678 1
#line 404 "rx-decode.opc"
d14680 1
a14680 1
#line 404 "rx-decode.opc"
d14682 1
a14682 1
#line 404 "rx-decode.opc"
d14694 1
a14694 1
#line 404 "rx-decode.opc"
d14844 1
a14844 1
#line 961 "rx-decode.opc"
@


1.6
log
@[include/opcode]

* rx.h (RX_Operand_Type): Add TwoReg.
(RX_Opcode_ID): Remove ediv and ediv2.

[opcodes]

* rx-decode.opc (SRR): New.
(rx_decode_opcode): Use it for movbi and movbir.  Decode NOP2 (mov
r0,r0) and NOP3 (max r0,r0) special cases.
* rx-decode.c: Regenerate.

[sim/rx]

* rx.c (decode_cache_base): New.
(id_names): Remove ediv and edivu.
(optype_names): Add TwoReg.
(maybe_get_mem_page): New.
(rx_get_byte): Call it.
(get_op): Add TwoReg support.
(put_op): Likewise.
(PD, PS, PS2, GD, GS, GS2, DSZ, SSZ, S2SZ, US1, US2, OM): "opcode"
is a pointer now.
(DO_RETURN): New.  We use longjmp to return an exception result.
(decode_opcode): Make opcode a pointer to the decode cache.  Save
decoded opcode information and re-use.  Call DO_RETURN instead of
return throughout.  Remove ediv and edivu.
* mem.c (ptdc): New.  Adds decode cache.
(rx_mem_ptr): Support it.
(rx_mem_decode_cache): New.
* mem.h (enum mem_ptr_action): add MPA_DECODE_CACHE.
(rx_mem_decode_cache): Declare.
* gdb-if.c (sim_resume): Add decode_opcode's setjmp logic here...
* main.c (main): ...and here.  Use a fast loop if neither trace
nor disassemble is given.
* cpu.h (RX_MAKE_STEPPED, RX_MAKE_HIT_BREAK, RX_MAKE_EXITED,
RX_MAKE_STOPPED, RX_EXITED, RX_STOPPED): Adjust so that 0 is not a
valid code for anything.
@
text
@d274 1
a274 1
#line 941 "rx-decode.opc"
d289 1
a289 1
#line 944 "rx-decode.opc"
d304 1
a304 1
#line 730 "rx-decode.opc"
d322 1
a322 1
#line 736 "rx-decode.opc"
d340 1
a340 1
#line 708 "rx-decode.opc"
d355 1
a355 1
#line 724 "rx-decode.opc"
d372 1
a372 1
#line 505 "rx-decode.opc"
d374 1
a374 1
#line 505 "rx-decode.opc"
d376 1
a376 1
#line 505 "rx-decode.opc"
d378 1
a378 1
#line 505 "rx-decode.opc"
d391 1
a391 1
#line 505 "rx-decode.opc"
d433 1
a433 1
#line 493 "rx-decode.opc"
d435 1
a435 1
#line 493 "rx-decode.opc"
d437 1
a437 1
#line 493 "rx-decode.opc"
d439 1
a439 1
#line 493 "rx-decode.opc"
d452 1
a452 1
#line 493 "rx-decode.opc"
d497 1
a497 1
#line 469 "rx-decode.opc"
d499 1
a499 1
#line 469 "rx-decode.opc"
d501 1
a501 1
#line 469 "rx-decode.opc"
d503 1
a503 1
#line 469 "rx-decode.opc"
d516 1
a516 1
#line 469 "rx-decode.opc"
d558 1
a558 1
#line 573 "rx-decode.opc"
d560 1
a560 1
#line 573 "rx-decode.opc"
d562 1
a562 1
#line 573 "rx-decode.opc"
d564 1
a564 1
#line 573 "rx-decode.opc"
d577 1
a577 1
#line 573 "rx-decode.opc"
d619 1
a619 1
#line 382 "rx-decode.opc"
d621 1
a621 1
#line 382 "rx-decode.opc"
d623 1
a623 1
#line 382 "rx-decode.opc"
d625 1
a625 1
#line 382 "rx-decode.opc"
d638 1
a638 1
#line 382 "rx-decode.opc"
d680 1
a680 1
#line 400 "rx-decode.opc"
d682 1
a682 1
#line 400 "rx-decode.opc"
d684 1
a684 1
#line 400 "rx-decode.opc"
d686 1
a686 1
#line 400 "rx-decode.opc"
d699 1
a699 1
#line 400 "rx-decode.opc"
d745 1
a745 1
#line 518 "rx-decode.opc"
d747 1
a747 1
#line 518 "rx-decode.opc"
d749 1
a749 1
#line 518 "rx-decode.opc"
d751 1
a751 1
#line 518 "rx-decode.opc"
d764 1
a764 1
#line 518 "rx-decode.opc"
d782 1
a782 1
#line 546 "rx-decode.opc"
d784 1
a784 1
#line 546 "rx-decode.opc"
d786 1
a786 1
#line 546 "rx-decode.opc"
d788 1
a788 1
#line 546 "rx-decode.opc"
d801 1
a801 1
#line 546 "rx-decode.opc"
d819 1
a819 1
#line 558 "rx-decode.opc"
d821 1
a821 1
#line 558 "rx-decode.opc"
d823 1
a823 1
#line 558 "rx-decode.opc"
d825 1
a825 1
#line 558 "rx-decode.opc"
d838 1
a838 1
#line 558 "rx-decode.opc"
d856 1
a856 1
#line 588 "rx-decode.opc"
d858 1
a858 1
#line 588 "rx-decode.opc"
d860 1
a860 1
#line 588 "rx-decode.opc"
d862 1
a862 1
#line 588 "rx-decode.opc"
d875 1
a875 1
#line 588 "rx-decode.opc"
d893 1
a893 1
#line 600 "rx-decode.opc"
d895 1
a895 1
#line 600 "rx-decode.opc"
d897 1
a897 1
#line 600 "rx-decode.opc"
d899 1
a899 1
#line 600 "rx-decode.opc"
d912 1
a912 1
#line 600 "rx-decode.opc"
d930 1
a930 1
#line 612 "rx-decode.opc"
d932 1
a932 1
#line 612 "rx-decode.opc"
d934 1
a934 1
#line 612 "rx-decode.opc"
d936 1
a936 1
#line 612 "rx-decode.opc"
d949 1
a949 1
#line 612 "rx-decode.opc"
d967 1
a967 1
#line 624 "rx-decode.opc"
d969 1
a969 1
#line 624 "rx-decode.opc"
d971 1
a971 1
#line 624 "rx-decode.opc"
d973 1
a973 1
#line 624 "rx-decode.opc"
d986 1
a986 1
#line 624 "rx-decode.opc"
d1004 1
a1004 1
#line 436 "rx-decode.opc"
d1006 1
a1006 1
#line 436 "rx-decode.opc"
d1008 1
a1008 1
#line 436 "rx-decode.opc"
d1010 1
a1010 1
#line 436 "rx-decode.opc"
d1023 1
a1023 1
#line 436 "rx-decode.opc"
d1041 1
a1041 1
#line 415 "rx-decode.opc"
d1043 1
a1043 1
#line 415 "rx-decode.opc"
d1045 1
a1045 1
#line 415 "rx-decode.opc"
d1047 1
a1047 1
#line 415 "rx-decode.opc"
d1060 1
a1060 1
#line 415 "rx-decode.opc"
d1078 1
a1078 1
#line 349 "rx-decode.opc"
d1080 1
a1080 1
#line 349 "rx-decode.opc"
d1082 1
a1082 1
#line 349 "rx-decode.opc"
d1084 1
a1084 1
#line 349 "rx-decode.opc"
d1097 1
a1097 1
#line 349 "rx-decode.opc"
d1115 1
a1115 1
#line 853 "rx-decode.opc"
d1117 1
a1117 1
#line 853 "rx-decode.opc"
d1119 1
a1119 1
#line 853 "rx-decode.opc"
d1121 1
a1121 1
#line 853 "rx-decode.opc"
d1134 1
a1134 1
#line 853 "rx-decode.opc"
d2342 1
a2342 1
#line 457 "rx-decode.opc"
d2344 1
a2344 1
#line 457 "rx-decode.opc"
d2346 1
a2346 1
#line 457 "rx-decode.opc"
d2358 1
a2358 1
#line 457 "rx-decode.opc"
d3459 1
a3459 1
#line 699 "rx-decode.opc"
d3469 1
a3469 1
#line 699 "rx-decode.opc"
d3492 1
a3492 1
#line 689 "rx-decode.opc"
d3494 1
a3494 1
#line 689 "rx-decode.opc"
d3505 1
a3505 1
#line 689 "rx-decode.opc"
d3527 1
a3527 1
#line 692 "rx-decode.opc"
d3537 1
a3537 1
#line 692 "rx-decode.opc"
d3552 1
a3552 1
#line 702 "rx-decode.opc"
d3567 1
a3567 1
#line 705 "rx-decode.opc"
d3582 1
a3582 1
#line 721 "rx-decode.opc"
d3591 1
a3591 1
#line 695 "rx-decode.opc"
d3601 1
a3601 1
#line 695 "rx-decode.opc"
d3666 1
a3666 1
#line 367 "rx-decode.opc"
d3668 1
a3668 1
#line 367 "rx-decode.opc"
d3679 1
a3679 1
#line 367 "rx-decode.opc"
d3697 1
a3697 1
#line 502 "rx-decode.opc"
d3699 1
a3699 1
#line 502 "rx-decode.opc"
d3701 1
a3701 1
#line 502 "rx-decode.opc"
d3713 1
a3713 1
#line 502 "rx-decode.opc"
d3755 1
a3755 1
#line 490 "rx-decode.opc"
d3757 1
a3757 1
#line 490 "rx-decode.opc"
d3759 1
a3759 1
#line 490 "rx-decode.opc"
d3771 1
a3771 1
#line 490 "rx-decode.opc"
d3813 1
a3813 1
#line 466 "rx-decode.opc"
d3815 1
a3815 1
#line 466 "rx-decode.opc"
d3817 1
a3817 1
#line 466 "rx-decode.opc"
d3829 1
a3829 1
#line 466 "rx-decode.opc"
d3871 1
a3871 1
#line 570 "rx-decode.opc"
d3873 1
a3873 1
#line 570 "rx-decode.opc"
d3875 1
a3875 1
#line 570 "rx-decode.opc"
d3887 1
a3887 1
#line 570 "rx-decode.opc"
d3929 1
a3929 1
#line 379 "rx-decode.opc"
d3931 1
a3931 1
#line 379 "rx-decode.opc"
d3933 1
a3933 1
#line 379 "rx-decode.opc"
d3945 1
a3945 1
#line 379 "rx-decode.opc"
d3987 1
a3987 1
#line 397 "rx-decode.opc"
d3989 1
a3989 1
#line 397 "rx-decode.opc"
d3991 1
a3991 1
#line 397 "rx-decode.opc"
d4003 1
a4003 1
#line 397 "rx-decode.opc"
d4045 1
a4045 1
#line 318 "rx-decode.opc"
d4047 1
a4047 1
#line 318 "rx-decode.opc"
d4049 1
a4049 1
#line 318 "rx-decode.opc"
d4051 1
a4051 1
#line 318 "rx-decode.opc"
d4064 1
a4064 1
#line 318 "rx-decode.opc"
d4141 1
a4141 1
#line 499 "rx-decode.opc"
d4143 1
a4143 1
#line 499 "rx-decode.opc"
d4154 1
a4154 1
#line 499 "rx-decode.opc"
d4168 1
a4168 1
#line 481 "rx-decode.opc"
d4170 1
a4170 1
#line 481 "rx-decode.opc"
d4181 1
a4181 1
#line 481 "rx-decode.opc"
d4195 1
a4195 1
#line 463 "rx-decode.opc"
d4197 1
a4197 1
#line 463 "rx-decode.opc"
d4208 1
a4208 1
#line 463 "rx-decode.opc"
d4222 1
a4222 1
#line 564 "rx-decode.opc"
d4224 1
a4224 1
#line 564 "rx-decode.opc"
d4235 1
a4235 1
#line 564 "rx-decode.opc"
d4249 1
a4249 1
#line 373 "rx-decode.opc"
d4251 1
a4251 1
#line 373 "rx-decode.opc"
d4262 1
a4262 1
#line 373 "rx-decode.opc"
d4276 1
a4276 1
#line 391 "rx-decode.opc"
d4278 1
a4278 1
#line 391 "rx-decode.opc"
d4289 1
a4289 1
#line 391 "rx-decode.opc"
d4333 1
a4333 1
#line 364 "rx-decode.opc"
d4346 1
a4346 1
#line 650 "rx-decode.opc"
d4348 1
a4348 1
#line 650 "rx-decode.opc"
d4350 1
a4350 1
#line 650 "rx-decode.opc"
d4362 1
a4362 1
#line 650 "rx-decode.opc"
d4386 1
a4386 1
#line 640 "rx-decode.opc"
d4388 1
a4388 1
#line 640 "rx-decode.opc"
d4390 1
a4390 1
#line 640 "rx-decode.opc"
d4402 1
a4402 1
#line 640 "rx-decode.opc"
d4426 1
a4426 1
#line 630 "rx-decode.opc"
d4428 1
a4428 1
#line 630 "rx-decode.opc"
d4430 1
a4430 1
#line 630 "rx-decode.opc"
d4442 1
a4442 1
#line 630 "rx-decode.opc"
d4465 1
a4465 1
#line 331 "rx-decode.opc"
d4467 1
a4467 1
#line 331 "rx-decode.opc"
d4478 1
a4478 1
#line 331 "rx-decode.opc"
d4492 1
a4492 1
#line 328 "rx-decode.opc"
d4494 1
a4494 1
#line 328 "rx-decode.opc"
d4505 1
a4505 1
#line 328 "rx-decode.opc"
d4520 1
a4520 1
#line 472 "rx-decode.opc"
d4522 1
a4522 1
#line 472 "rx-decode.opc"
d4524 1
a4524 1
#line 472 "rx-decode.opc"
d4536 1
a4536 1
#line 472 "rx-decode.opc"
d4578 1
a4578 1
#line 484 "rx-decode.opc"
d4580 1
a4580 1
#line 484 "rx-decode.opc"
d4591 1
a4591 1
#line 484 "rx-decode.opc"
d4600 1
a4600 1
#line 567 "rx-decode.opc"
d4602 1
a4602 1
#line 567 "rx-decode.opc"
d4613 1
a4613 1
#line 567 "rx-decode.opc"
d4622 1
a4622 1
#line 376 "rx-decode.opc"
d4624 1
a4624 1
#line 376 "rx-decode.opc"
d4635 1
a4635 1
#line 376 "rx-decode.opc"
d4644 1
a4644 1
#line 394 "rx-decode.opc"
d4646 1
a4646 1
#line 394 "rx-decode.opc"
d4657 1
a4657 1
#line 394 "rx-decode.opc"
d4792 1
a4792 1
#line 487 "rx-decode.opc"
d4802 1
a4802 1
#line 487 "rx-decode.opc"
d4817 1
a4817 1
#line 947 "rx-decode.opc"
d4829 1
a4829 1
#line 914 "rx-decode.opc"
d4839 1
a4839 1
#line 914 "rx-decode.opc"
d4896 1
a4896 1
#line 865 "rx-decode.opc"
d4898 1
a4898 1
#line 865 "rx-decode.opc"
d4900 1
a4900 1
#line 865 "rx-decode.opc"
d4912 1
a4912 1
#line 865 "rx-decode.opc"
d4937 1
a4937 1
#line 875 "rx-decode.opc"
d4939 1
a4939 1
#line 875 "rx-decode.opc"
d4941 1
a4941 1
#line 875 "rx-decode.opc"
d4953 1
a4953 1
#line 875 "rx-decode.opc"
d4978 1
a4978 1
#line 885 "rx-decode.opc"
d4980 1
a4980 1
#line 885 "rx-decode.opc"
d4982 1
a4982 1
#line 885 "rx-decode.opc"
d4994 1
a4994 1
#line 885 "rx-decode.opc"
d5018 1
a5018 1
#line 421 "rx-decode.opc"
d5028 1
a5028 1
#line 421 "rx-decode.opc"
d5036 1
a5036 1
#line 442 "rx-decode.opc"
d5046 1
a5046 1
#line 442 "rx-decode.opc"
d5054 1
a5054 1
#line 524 "rx-decode.opc"
d5064 1
a5064 1
#line 524 "rx-decode.opc"
d5072 1
a5072 1
#line 805 "rx-decode.opc"
d5082 1
a5082 1
#line 805 "rx-decode.opc"
d5090 1
a5090 1
#line 665 "rx-decode.opc"
d5100 1
a5100 1
#line 665 "rx-decode.opc"
d5108 1
a5108 1
#line 662 "rx-decode.opc"
d5118 1
a5118 1
#line 662 "rx-decode.opc"
d5128 1
a5128 1
#line 337 "rx-decode.opc"
d5130 1
a5130 1
#line 337 "rx-decode.opc"
d5141 1
a5141 1
#line 337 "rx-decode.opc"
d5149 1
a5149 1
#line 334 "rx-decode.opc"
d5159 1
a5159 1
#line 334 "rx-decode.opc"
d5168 1
a5168 1
#line 920 "rx-decode.opc"
d5178 1
a5178 1
#line 920 "rx-decode.opc"
d5187 1
a5187 1
#line 917 "rx-decode.opc"
d5197 1
a5197 1
#line 917 "rx-decode.opc"
d5227 1
a5227 1
#line 715 "rx-decode.opc"
d5237 1
a5237 1
#line 715 "rx-decode.opc"
d5260 1
a5260 1
#line 718 "rx-decode.opc"
d5270 1
a5270 1
#line 718 "rx-decode.opc"
d5293 1
a5293 1
#line 711 "rx-decode.opc"
d5303 1
a5303 1
#line 711 "rx-decode.opc"
d5327 1
a5327 1
#line 727 "rx-decode.opc"
d5337 1
a5337 1
#line 727 "rx-decode.opc"
d5347 1
a5347 1
#line 751 "rx-decode.opc"
d5357 1
a5357 1
#line 751 "rx-decode.opc"
d5372 1
a5372 1
#line 742 "rx-decode.opc"
d5382 1
a5382 1
#line 754 "rx-decode.opc"
d5392 1
a5392 1
#line 754 "rx-decode.opc"
d5407 1
a5407 1
#line 745 "rx-decode.opc"
d5417 1
a5417 1
#line 760 "rx-decode.opc"
d5427 1
a5427 1
#line 760 "rx-decode.opc"
d5445 1
a5445 1
#line 748 "rx-decode.opc"
d5455 1
a5455 1
#line 766 "rx-decode.opc"
d5465 1
a5465 1
#line 766 "rx-decode.opc"
d5483 1
a5483 1
#line 757 "rx-decode.opc"
d5498 1
a5498 1
#line 808 "rx-decode.opc"
d5516 1
a5516 1
#line 935 "rx-decode.opc"
d5531 1
a5531 1
#line 938 "rx-decode.opc"
d5546 1
a5546 1
#line 950 "rx-decode.opc"
d5572 1
a5572 1
#line 911 "rx-decode.opc"
d5582 1
a5582 1
#line 911 "rx-decode.opc"
d5605 1
a5605 1
#line 908 "rx-decode.opc"
d5615 1
a5615 1
#line 908 "rx-decode.opc"
d5631 1
a5631 1
#line 295 "rx-decode.opc"
d5633 1
a5633 1
#line 295 "rx-decode.opc"
d5635 1
a5635 1
#line 295 "rx-decode.opc"
d5637 1
a5637 1
#line 295 "rx-decode.opc"
d5639 1
a5639 1
#line 295 "rx-decode.opc"
d5641 1
a5641 1
#line 295 "rx-decode.opc"
d5656 1
a5656 1
#line 295 "rx-decode.opc"
d5734 1
a5734 1
#line 292 "rx-decode.opc"
d5736 1
a5736 1
#line 292 "rx-decode.opc"
d5738 1
a5738 1
#line 292 "rx-decode.opc"
d5740 1
a5740 1
#line 292 "rx-decode.opc"
d5742 1
a5742 1
#line 292 "rx-decode.opc"
d5744 1
a5744 1
#line 292 "rx-decode.opc"
d5759 1
a5759 1
#line 292 "rx-decode.opc"
d6125 1
a6125 1
#line 315 "rx-decode.opc"
d6127 1
a6127 1
#line 315 "rx-decode.opc"
d6129 1
a6129 1
#line 315 "rx-decode.opc"
d6131 1
a6131 1
#line 315 "rx-decode.opc"
d6133 1
a6133 1
#line 315 "rx-decode.opc"
d6135 1
a6135 1
#line 315 "rx-decode.opc"
d6150 1
a6150 1
#line 315 "rx-decode.opc"
d6326 1
d6776 1
a6776 1
#line 859 "rx-decode.opc"
d6778 1
a6778 1
#line 859 "rx-decode.opc"
d6780 1
a6780 1
#line 859 "rx-decode.opc"
d6792 1
a6792 1
#line 859 "rx-decode.opc"
d6801 1
a6801 1
#line 869 "rx-decode.opc"
d6803 1
a6803 1
#line 869 "rx-decode.opc"
d6805 1
a6805 1
#line 869 "rx-decode.opc"
d6817 1
a6817 1
#line 869 "rx-decode.opc"
d6869 1
a6869 1
#line 879 "rx-decode.opc"
d6871 1
a6871 1
#line 879 "rx-decode.opc"
d6873 1
a6873 1
#line 879 "rx-decode.opc"
d6885 1
a6885 1
#line 879 "rx-decode.opc"
d6894 1
a6894 1
#line 340 "rx-decode.opc"
d6896 1
a6896 1
#line 340 "rx-decode.opc"
d6898 1
a6898 1
#line 340 "rx-decode.opc"
d6910 1
a6910 1
#line 340 "rx-decode.opc"
d7035 1
a7035 1
#line 514 "rx-decode.opc"
d7037 1
a7037 1
#line 514 "rx-decode.opc"
d7048 1
a7048 1
#line 514 "rx-decode.opc"
d7063 1
a7063 1
#line 445 "rx-decode.opc"
d7065 1
a7065 1
#line 445 "rx-decode.opc"
d7076 1
a7076 1
#line 445 "rx-decode.opc"
d7093 1
a7093 1
#line 454 "rx-decode.opc"
d7095 1
a7095 1
#line 454 "rx-decode.opc"
d7106 1
a7106 1
#line 454 "rx-decode.opc"
d7120 1
a7120 1
#line 527 "rx-decode.opc"
d7122 1
a7122 1
#line 527 "rx-decode.opc"
d7133 1
a7133 1
#line 527 "rx-decode.opc"
d7151 1
a7151 1
#line 536 "rx-decode.opc"
d7153 1
a7153 1
#line 536 "rx-decode.opc"
d7155 1
a7155 1
#line 536 "rx-decode.opc"
d7167 1
a7167 1
#line 536 "rx-decode.opc"
d7171 1
d7217 1
a7217 1
#line 555 "rx-decode.opc"
d7219 1
a7219 1
#line 555 "rx-decode.opc"
d7221 1
a7221 1
#line 555 "rx-decode.opc"
d7233 1
a7233 1
#line 555 "rx-decode.opc"
d7275 1
a7275 1
#line 585 "rx-decode.opc"
d7277 1
a7277 1
#line 585 "rx-decode.opc"
d7279 1
a7279 1
#line 585 "rx-decode.opc"
d7291 1
a7291 1
#line 585 "rx-decode.opc"
d7333 1
a7333 1
#line 597 "rx-decode.opc"
d7335 1
a7335 1
#line 597 "rx-decode.opc"
d7337 1
a7337 1
#line 597 "rx-decode.opc"
d7349 1
a7349 1
#line 597 "rx-decode.opc"
d7391 1
a7391 1
#line 609 "rx-decode.opc"
d7393 1
a7393 1
#line 609 "rx-decode.opc"
d7395 1
a7395 1
#line 609 "rx-decode.opc"
d7407 1
a7407 1
#line 609 "rx-decode.opc"
d7449 1
a7449 1
#line 621 "rx-decode.opc"
d7451 1
a7451 1
#line 621 "rx-decode.opc"
d7453 1
a7453 1
#line 621 "rx-decode.opc"
d7465 1
a7465 1
#line 621 "rx-decode.opc"
d7507 1
a7507 1
#line 433 "rx-decode.opc"
d7509 1
a7509 1
#line 433 "rx-decode.opc"
d7511 1
a7511 1
#line 433 "rx-decode.opc"
d7523 1
a7523 1
#line 433 "rx-decode.opc"
d7565 1
a7565 1
#line 412 "rx-decode.opc"
d7567 1
a7567 1
#line 412 "rx-decode.opc"
d7569 1
a7569 1
#line 412 "rx-decode.opc"
d7581 1
a7581 1
#line 412 "rx-decode.opc"
d7622 1
a7622 1
#line 424 "rx-decode.opc"
d7624 1
a7624 1
#line 424 "rx-decode.opc"
d7635 1
a7635 1
#line 424 "rx-decode.opc"
d7653 1
a7653 1
#line 346 "rx-decode.opc"
d7655 1
a7655 1
#line 346 "rx-decode.opc"
d7657 1
a7657 1
#line 346 "rx-decode.opc"
d7669 1
a7669 1
#line 346 "rx-decode.opc"
d7711 1
a7711 1
#line 850 "rx-decode.opc"
d7713 1
a7713 1
#line 850 "rx-decode.opc"
d7715 1
a7715 1
#line 850 "rx-decode.opc"
d7727 1
a7727 1
#line 850 "rx-decode.opc"
d7769 1
a7769 1
#line 862 "rx-decode.opc"
d7771 1
a7771 1
#line 862 "rx-decode.opc"
d7773 1
a7773 1
#line 862 "rx-decode.opc"
d7785 1
a7785 1
#line 862 "rx-decode.opc"
d7827 1
a7827 1
#line 872 "rx-decode.opc"
d7829 1
a7829 1
#line 872 "rx-decode.opc"
d7831 1
a7831 1
#line 872 "rx-decode.opc"
d7843 1
a7843 1
#line 872 "rx-decode.opc"
d7885 1
a7885 1
#line 882 "rx-decode.opc"
d7887 1
a7887 1
#line 882 "rx-decode.opc"
d7889 1
a7889 1
#line 882 "rx-decode.opc"
d7901 1
a7901 1
#line 882 "rx-decode.opc"
d7943 1
a7943 1
#line 892 "rx-decode.opc"
d7945 1
a7945 1
#line 892 "rx-decode.opc"
d7947 1
a7947 1
#line 892 "rx-decode.opc"
d7959 1
a7959 1
#line 892 "rx-decode.opc"
d8001 1
a8001 1
#line 829 "rx-decode.opc"
d8003 1
a8003 1
#line 829 "rx-decode.opc"
d8005 1
a8005 1
#line 829 "rx-decode.opc"
d8017 1
a8017 1
#line 829 "rx-decode.opc"
d8059 1
a8059 1
#line 823 "rx-decode.opc"
d8061 1
a8061 1
#line 823 "rx-decode.opc"
d8063 1
a8063 1
#line 823 "rx-decode.opc"
d8075 1
a8075 1
#line 823 "rx-decode.opc"
d8117 1
a8117 1
#line 817 "rx-decode.opc"
d8119 1
a8119 1
#line 817 "rx-decode.opc"
d8121 1
a8121 1
#line 817 "rx-decode.opc"
d8133 1
a8133 1
#line 817 "rx-decode.opc"
d8175 1
a8175 1
#line 838 "rx-decode.opc"
d8177 1
a8177 1
#line 838 "rx-decode.opc"
d8179 1
a8179 1
#line 838 "rx-decode.opc"
d8191 1
a8191 1
#line 838 "rx-decode.opc"
d8233 1
a8233 1
#line 844 "rx-decode.opc"
d8235 1
a8235 1
#line 844 "rx-decode.opc"
d8237 1
a8237 1
#line 844 "rx-decode.opc"
d8249 1
a8249 1
#line 844 "rx-decode.opc"
d8291 1
a8291 1
#line 832 "rx-decode.opc"
d8293 1
a8293 1
#line 832 "rx-decode.opc"
d8295 1
a8295 1
#line 832 "rx-decode.opc"
d8307 1
a8307 1
#line 832 "rx-decode.opc"
d8349 1
a8349 1
#line 847 "rx-decode.opc"
d8351 1
a8351 1
#line 847 "rx-decode.opc"
d8353 1
a8353 1
#line 847 "rx-decode.opc"
d8365 1
a8365 1
#line 847 "rx-decode.opc"
d8407 1
a8407 1
#line 956 "rx-decode.opc"
d8409 1
a8409 1
#line 956 "rx-decode.opc"
d8411 1
a8411 1
#line 956 "rx-decode.opc"
d8413 1
a8413 1
#line 956 "rx-decode.opc"
d8426 1
a8426 1
#line 956 "rx-decode.opc"
d8554 1
a8554 1
#line 899 "rx-decode.opc"
d8556 1
a8556 1
#line 899 "rx-decode.opc"
d8558 1
a8558 1
#line 899 "rx-decode.opc"
d8560 1
a8560 1
#line 899 "rx-decode.opc"
d8573 1
a8573 1
#line 899 "rx-decode.opc"
d8582 1
a8582 1
#line 889 "rx-decode.opc"
d8584 1
a8584 1
#line 889 "rx-decode.opc"
d8586 1
a8586 1
#line 889 "rx-decode.opc"
d8598 1
a8598 1
#line 889 "rx-decode.opc"
d9425 1
a9425 1
#line 772 "rx-decode.opc"
d9427 1
a9427 1
#line 772 "rx-decode.opc"
d9438 1
a9438 1
#line 772 "rx-decode.opc"
d9452 1
a9452 1
#line 775 "rx-decode.opc"
d9454 1
a9454 1
#line 775 "rx-decode.opc"
d9465 1
a9465 1
#line 775 "rx-decode.opc"
d9479 1
a9479 1
#line 778 "rx-decode.opc"
d9481 1
a9481 1
#line 778 "rx-decode.opc"
d9492 1
a9492 1
#line 778 "rx-decode.opc"
d9506 1
a9506 1
#line 781 "rx-decode.opc"
d9508 1
a9508 1
#line 781 "rx-decode.opc"
d9519 1
a9519 1
#line 781 "rx-decode.opc"
d9533 1
a9533 1
#line 784 "rx-decode.opc"
d9543 1
a9543 1
#line 784 "rx-decode.opc"
d9551 1
a9551 1
#line 787 "rx-decode.opc"
d9561 1
a9561 1
#line 787 "rx-decode.opc"
d9576 1
a9576 1
#line 799 "rx-decode.opc"
d9586 1
a9586 1
#line 799 "rx-decode.opc"
d9604 1
a9604 1
#line 790 "rx-decode.opc"
d9614 1
a9614 1
#line 790 "rx-decode.opc"
d9622 1
a9622 1
#line 796 "rx-decode.opc"
d9632 1
a9632 1
#line 796 "rx-decode.opc"
d9640 1
a9640 1
#line 793 "rx-decode.opc"
d9650 1
a9650 1
#line 793 "rx-decode.opc"
d9666 1
a9666 1
#line 307 "rx-decode.opc"
d9668 1
a9668 1
#line 307 "rx-decode.opc"
d9670 1
a9670 1
#line 307 "rx-decode.opc"
d9672 1
a9672 1
#line 307 "rx-decode.opc"
d9685 1
a9685 1
#line 307 "rx-decode.opc"
d9746 1
a9746 1
#line 311 "rx-decode.opc"
d9748 1
a9748 1
#line 311 "rx-decode.opc"
d9750 1
a9750 1
#line 311 "rx-decode.opc"
d9752 1
a9752 1
#line 311 "rx-decode.opc"
d9765 1
a9765 1
#line 311 "rx-decode.opc"
d9826 1
a9826 1
#line 321 "rx-decode.opc"
d9828 1
a9828 1
#line 321 "rx-decode.opc"
d9830 1
a9830 1
#line 321 "rx-decode.opc"
d9832 1
a9832 1
#line 321 "rx-decode.opc"
d9845 1
a9845 1
#line 321 "rx-decode.opc"
d9908 1
a9908 1
#line 653 "rx-decode.opc"
d9910 1
a9910 1
#line 653 "rx-decode.opc"
d9921 1
a9921 1
#line 653 "rx-decode.opc"
d9935 1
a9935 1
#line 643 "rx-decode.opc"
d9937 1
a9937 1
#line 643 "rx-decode.opc"
d9948 1
a9948 1
#line 643 "rx-decode.opc"
d9962 1
a9962 1
#line 633 "rx-decode.opc"
d9964 1
a9964 1
#line 633 "rx-decode.opc"
d9975 1
a9975 1
#line 633 "rx-decode.opc"
d9989 1
a9989 1
#line 677 "rx-decode.opc"
d9991 1
a9991 1
#line 677 "rx-decode.opc"
d10002 1
a10002 1
#line 677 "rx-decode.opc"
d10016 1
a10016 1
#line 680 "rx-decode.opc"
d10018 1
a10018 1
#line 680 "rx-decode.opc"
d10029 1
a10029 1
#line 680 "rx-decode.opc"
d10043 1
a10043 1
#line 671 "rx-decode.opc"
d10045 1
a10045 1
#line 671 "rx-decode.opc"
d10056 1
a10056 1
#line 671 "rx-decode.opc"
d10070 1
a10070 1
#line 683 "rx-decode.opc"
d10072 1
a10072 1
#line 683 "rx-decode.opc"
d10083 1
a10083 1
#line 683 "rx-decode.opc"
d10101 1
a10101 1
#line 926 "rx-decode.opc"
d10103 1
a10103 1
#line 926 "rx-decode.opc"
d10105 1
a10105 1
#line 926 "rx-decode.opc"
d10117 1
a10117 1
#line 926 "rx-decode.opc"
d10141 1
a10141 1
#line 929 "rx-decode.opc"
d10143 1
a10143 1
#line 929 "rx-decode.opc"
d10145 1
a10145 1
#line 929 "rx-decode.opc"
d10157 1
a10157 1
#line 929 "rx-decode.opc"
d10184 1
a10184 1
#line 674 "rx-decode.opc"
d10186 1
a10186 1
#line 674 "rx-decode.opc"
d10188 1
a10188 1
#line 674 "rx-decode.opc"
d10200 1
a10200 1
#line 674 "rx-decode.opc"
d10224 1
a10224 1
#line 668 "rx-decode.opc"
d10226 1
a10226 1
#line 668 "rx-decode.opc"
d10228 1
a10228 1
#line 668 "rx-decode.opc"
d10240 1
a10240 1
#line 668 "rx-decode.opc"
d10264 1
a10264 1
#line 451 "rx-decode.opc"
d10266 1
a10266 1
#line 451 "rx-decode.opc"
d10277 1
a10277 1
#line 451 "rx-decode.opc"
d10286 1
a10286 1
#line 533 "rx-decode.opc"
d10288 1
a10288 1
#line 533 "rx-decode.opc"
d10299 1
a10299 1
#line 533 "rx-decode.opc"
d10308 1
a10308 1
#line 552 "rx-decode.opc"
d10310 1
a10310 1
#line 552 "rx-decode.opc"
d10321 1
a10321 1
#line 552 "rx-decode.opc"
d10330 1
a10330 1
#line 582 "rx-decode.opc"
d10332 1
a10332 1
#line 582 "rx-decode.opc"
d10343 1
a10343 1
#line 582 "rx-decode.opc"
d10352 1
a10352 1
#line 594 "rx-decode.opc"
d10354 1
a10354 1
#line 594 "rx-decode.opc"
d10365 1
a10365 1
#line 594 "rx-decode.opc"
d10374 1
a10374 1
#line 606 "rx-decode.opc"
d10376 1
a10376 1
#line 606 "rx-decode.opc"
d10387 1
a10387 1
#line 606 "rx-decode.opc"
d10396 1
a10396 1
#line 618 "rx-decode.opc"
d10398 1
a10398 1
#line 618 "rx-decode.opc"
d10409 1
a10409 1
#line 618 "rx-decode.opc"
d10418 1
a10418 1
#line 430 "rx-decode.opc"
d10420 1
a10420 1
#line 430 "rx-decode.opc"
d10431 1
a10431 1
#line 430 "rx-decode.opc"
d10440 1
a10440 1
#line 409 "rx-decode.opc"
d10442 1
a10442 1
#line 409 "rx-decode.opc"
d10453 1
a10453 1
#line 409 "rx-decode.opc"
d10462 1
a10462 1
#line 355 "rx-decode.opc"
d10464 1
a10464 1
#line 355 "rx-decode.opc"
d10475 1
a10475 1
#line 355 "rx-decode.opc"
d10484 1
a10484 1
#line 358 "rx-decode.opc"
d10486 1
a10486 1
#line 358 "rx-decode.opc"
d10497 1
a10497 1
#line 358 "rx-decode.opc"
d10515 1
a10515 1
#line 826 "rx-decode.opc"
d10525 1
a10525 1
#line 826 "rx-decode.opc"
d10533 1
a10533 1
#line 820 "rx-decode.opc"
d10543 1
a10543 1
#line 820 "rx-decode.opc"
d10551 1
a10551 1
#line 814 "rx-decode.opc"
d10561 1
a10561 1
#line 814 "rx-decode.opc"
d10569 1
a10569 1
#line 835 "rx-decode.opc"
d10579 1
a10579 1
#line 835 "rx-decode.opc"
d10587 1
a10587 1
#line 841 "rx-decode.opc"
d10597 1
a10597 1
#line 841 "rx-decode.opc"
d10613 1
a10613 1
#line 923 "rx-decode.opc"
d10615 1
a10615 1
#line 923 "rx-decode.opc"
d10626 1
a10626 1
#line 923 "rx-decode.opc"
d10792 1
a10792 1
#line 656 "rx-decode.opc"
d10794 1
a10794 1
#line 656 "rx-decode.opc"
d10796 1
a10796 1
#line 656 "rx-decode.opc"
d10808 1
a10808 1
#line 656 "rx-decode.opc"
d11105 1
a11105 1
#line 646 "rx-decode.opc"
d11107 1
a11107 1
#line 646 "rx-decode.opc"
d11109 1
a11109 1
#line 646 "rx-decode.opc"
d11121 1
a11121 1
#line 646 "rx-decode.opc"
d11416 1
a11416 1
#line 636 "rx-decode.opc"
d11418 1
a11418 1
#line 636 "rx-decode.opc"
d11420 1
a11420 1
#line 636 "rx-decode.opc"
d11432 1
a11432 1
#line 636 "rx-decode.opc"
d11741 1
a11741 1
#line 902 "rx-decode.opc"
d11743 1
a11743 1
#line 902 "rx-decode.opc"
d11745 1
a11745 1
#line 902 "rx-decode.opc"
d11757 1
a11757 1
#line 902 "rx-decode.opc"
d11769 1
a11769 1
#line 895 "rx-decode.opc"
d11771 1
a11771 1
#line 895 "rx-decode.opc"
d11782 1
a11782 1
#line 895 "rx-decode.opc"
d12611 1
a12611 1
#line 301 "rx-decode.opc"
d12613 1
a12613 1
#line 301 "rx-decode.opc"
d12615 1
a12615 1
#line 301 "rx-decode.opc"
d12617 1
a12617 1
#line 301 "rx-decode.opc"
d12630 1
a12630 1
#line 301 "rx-decode.opc"
d13068 1
a13068 1
#line 298 "rx-decode.opc"
d13070 1
a13070 1
#line 298 "rx-decode.opc"
d13072 1
a13072 1
#line 298 "rx-decode.opc"
d13074 1
a13074 1
#line 298 "rx-decode.opc"
d13087 1
a13087 1
#line 298 "rx-decode.opc"
d13525 1
a13525 1
#line 304 "rx-decode.opc"
d13527 1
a13527 1
#line 304 "rx-decode.opc"
d13529 1
a13529 1
#line 304 "rx-decode.opc"
d13531 1
a13531 1
#line 304 "rx-decode.opc"
d13544 1
a13544 1
#line 304 "rx-decode.opc"
d13989 1
a13989 1
#line 508 "rx-decode.opc"
d13991 1
a13991 1
#line 508 "rx-decode.opc"
d13993 1
a13993 1
#line 508 "rx-decode.opc"
d14005 1
a14005 1
#line 508 "rx-decode.opc"
d14158 1
a14158 1
#line 475 "rx-decode.opc"
d14160 1
a14160 1
#line 475 "rx-decode.opc"
d14162 1
a14162 1
#line 475 "rx-decode.opc"
d14174 1
a14174 1
#line 475 "rx-decode.opc"
d14327 1
a14327 1
#line 576 "rx-decode.opc"
d14329 1
a14329 1
#line 576 "rx-decode.opc"
d14331 1
a14331 1
#line 576 "rx-decode.opc"
d14343 1
a14343 1
#line 576 "rx-decode.opc"
d14496 1
a14496 1
#line 385 "rx-decode.opc"
d14498 1
a14498 1
#line 385 "rx-decode.opc"
d14500 1
a14500 1
#line 385 "rx-decode.opc"
d14512 1
a14512 1
#line 385 "rx-decode.opc"
d14665 1
a14665 1
#line 403 "rx-decode.opc"
d14667 1
a14667 1
#line 403 "rx-decode.opc"
d14669 1
a14669 1
#line 403 "rx-decode.opc"
d14681 1
a14681 1
#line 403 "rx-decode.opc"
d14831 1
a14831 1
#line 959 "rx-decode.opc"
@


1.5
log
@* rx-decode.opc (store_flags): Remove, replace with F_* macros.
(rx_decode_opcode): Likewise.
* rx-decode.c: Regenerate.
@
text
@d93 1
d274 1
a274 1
#line 926 "rx-decode.opc"
d289 1
a289 1
#line 929 "rx-decode.opc"
d304 1
a304 1
#line 715 "rx-decode.opc"
d322 1
a322 1
#line 721 "rx-decode.opc"
d340 2
a341 2
#line 693 "rx-decode.opc"
          ID(branch); Scc(RXC_always); DC(pc + IMMex(3));
d355 1
a355 1
#line 709 "rx-decode.opc"
d372 1
a372 1
#line 497 "rx-decode.opc"
d374 1
a374 1
#line 497 "rx-decode.opc"
d376 1
a376 1
#line 497 "rx-decode.opc"
d378 1
a378 1
#line 497 "rx-decode.opc"
d391 1
a391 1
#line 497 "rx-decode.opc"
d433 1
a433 1
#line 485 "rx-decode.opc"
d435 1
a435 1
#line 485 "rx-decode.opc"
d437 1
a437 1
#line 485 "rx-decode.opc"
d439 1
a439 1
#line 485 "rx-decode.opc"
d452 1
a452 1
#line 485 "rx-decode.opc"
d497 1
a497 1
#line 461 "rx-decode.opc"
d499 1
a499 1
#line 461 "rx-decode.opc"
d501 1
a501 1
#line 461 "rx-decode.opc"
d503 1
a503 1
#line 461 "rx-decode.opc"
d516 1
a516 1
#line 461 "rx-decode.opc"
d558 1
a558 1
#line 558 "rx-decode.opc"
d560 1
a560 1
#line 558 "rx-decode.opc"
d562 1
a562 1
#line 558 "rx-decode.opc"
d564 1
a564 1
#line 558 "rx-decode.opc"
d577 1
a577 1
#line 558 "rx-decode.opc"
d619 1
a619 1
#line 374 "rx-decode.opc"
d621 1
a621 1
#line 374 "rx-decode.opc"
d623 1
a623 1
#line 374 "rx-decode.opc"
d625 1
a625 1
#line 374 "rx-decode.opc"
d638 1
a638 1
#line 374 "rx-decode.opc"
d680 1
a680 1
#line 392 "rx-decode.opc"
d682 1
a682 1
#line 392 "rx-decode.opc"
d684 1
a684 1
#line 392 "rx-decode.opc"
d686 1
a686 1
#line 392 "rx-decode.opc"
d699 1
a699 1
#line 392 "rx-decode.opc"
d745 1
a745 1
#line 510 "rx-decode.opc"
d747 1
a747 1
#line 510 "rx-decode.opc"
d749 1
a749 1
#line 510 "rx-decode.opc"
d751 1
a751 1
#line 510 "rx-decode.opc"
d764 1
a764 1
#line 510 "rx-decode.opc"
d782 1
a782 1
#line 531 "rx-decode.opc"
d784 1
a784 1
#line 531 "rx-decode.opc"
d786 1
a786 1
#line 531 "rx-decode.opc"
d788 1
a788 1
#line 531 "rx-decode.opc"
d801 1
a801 1
#line 531 "rx-decode.opc"
d819 1
a819 1
#line 543 "rx-decode.opc"
d821 1
a821 1
#line 543 "rx-decode.opc"
d823 1
a823 1
#line 543 "rx-decode.opc"
d825 1
a825 1
#line 543 "rx-decode.opc"
d838 1
a838 1
#line 543 "rx-decode.opc"
d856 1
a856 1
#line 573 "rx-decode.opc"
d858 1
a858 1
#line 573 "rx-decode.opc"
d860 1
a860 1
#line 573 "rx-decode.opc"
d862 1
a862 1
#line 573 "rx-decode.opc"
d875 1
a875 1
#line 573 "rx-decode.opc"
d893 1
a893 1
#line 585 "rx-decode.opc"
d895 1
a895 1
#line 585 "rx-decode.opc"
d897 1
a897 1
#line 585 "rx-decode.opc"
d899 1
a899 1
#line 585 "rx-decode.opc"
d912 1
a912 1
#line 585 "rx-decode.opc"
d930 1
a930 1
#line 597 "rx-decode.opc"
d932 1
a932 1
#line 597 "rx-decode.opc"
d934 1
a934 1
#line 597 "rx-decode.opc"
d936 1
a936 1
#line 597 "rx-decode.opc"
d949 1
a949 1
#line 597 "rx-decode.opc"
d967 1
a967 1
#line 609 "rx-decode.opc"
d969 1
a969 1
#line 609 "rx-decode.opc"
d971 1
a971 1
#line 609 "rx-decode.opc"
d973 1
a973 1
#line 609 "rx-decode.opc"
d986 1
a986 1
#line 609 "rx-decode.opc"
d1004 1
a1004 1
#line 428 "rx-decode.opc"
d1006 1
a1006 1
#line 428 "rx-decode.opc"
d1008 1
a1008 1
#line 428 "rx-decode.opc"
d1010 1
a1010 1
#line 428 "rx-decode.opc"
d1023 1
a1023 1
#line 428 "rx-decode.opc"
d1041 1
a1041 1
#line 407 "rx-decode.opc"
d1043 1
a1043 1
#line 407 "rx-decode.opc"
d1045 1
a1045 1
#line 407 "rx-decode.opc"
d1047 1
a1047 1
#line 407 "rx-decode.opc"
d1060 1
a1060 1
#line 407 "rx-decode.opc"
d1078 1
a1078 1
#line 341 "rx-decode.opc"
d1080 1
a1080 1
#line 341 "rx-decode.opc"
d1082 1
a1082 1
#line 341 "rx-decode.opc"
d1084 1
a1084 1
#line 341 "rx-decode.opc"
d1097 1
a1097 1
#line 341 "rx-decode.opc"
d1115 1
a1115 1
#line 838 "rx-decode.opc"
d1117 1
a1117 1
#line 838 "rx-decode.opc"
d1119 1
a1119 1
#line 838 "rx-decode.opc"
d1121 1
a1121 1
#line 838 "rx-decode.opc"
d1134 1
a1134 1
#line 838 "rx-decode.opc"
d2342 1
a2342 1
#line 449 "rx-decode.opc"
d2344 1
a2344 1
#line 449 "rx-decode.opc"
d2346 1
a2346 1
#line 449 "rx-decode.opc"
d2358 1
a2358 1
#line 449 "rx-decode.opc"
d3459 1
a3459 1
#line 684 "rx-decode.opc"
d3469 2
a3470 2
#line 684 "rx-decode.opc"
          ID(branch); Scc(RXC_always); DC(pc + dsp3map[dsp]);
d3492 1
a3492 1
#line 674 "rx-decode.opc"
d3494 1
a3494 1
#line 674 "rx-decode.opc"
d3505 1
a3505 1
#line 674 "rx-decode.opc"
d3527 1
a3527 1
#line 677 "rx-decode.opc"
d3537 1
a3537 1
#line 677 "rx-decode.opc"
d3552 2
a3553 2
#line 687 "rx-decode.opc"
          ID(branch); Scc(RXC_always); DC(pc + IMMex(1));
d3567 2
a3568 2
#line 690 "rx-decode.opc"
          ID(branch); Scc(RXC_always); DC(pc + IMMex(2));
d3582 1
a3582 1
#line 706 "rx-decode.opc"
d3591 1
a3591 1
#line 680 "rx-decode.opc"
d3601 1
a3601 1
#line 680 "rx-decode.opc"
d3615 1
a3615 1
#line 270 "rx-decode.opc"
d3617 1
a3617 1
#line 270 "rx-decode.opc"
d3619 1
a3619 1
#line 270 "rx-decode.opc"
d3621 1
a3621 1
#line 270 "rx-decode.opc"
d3634 1
a3634 1
#line 270 "rx-decode.opc"
d3666 1
a3666 1
#line 359 "rx-decode.opc"
d3668 1
a3668 1
#line 359 "rx-decode.opc"
d3679 1
a3679 1
#line 359 "rx-decode.opc"
d3697 1
a3697 1
#line 494 "rx-decode.opc"
d3699 1
a3699 1
#line 494 "rx-decode.opc"
d3701 1
a3701 1
#line 494 "rx-decode.opc"
d3713 1
a3713 1
#line 494 "rx-decode.opc"
d3755 1
a3755 1
#line 482 "rx-decode.opc"
d3757 1
a3757 1
#line 482 "rx-decode.opc"
d3759 1
a3759 1
#line 482 "rx-decode.opc"
d3771 1
a3771 1
#line 482 "rx-decode.opc"
d3813 1
a3813 1
#line 458 "rx-decode.opc"
d3815 1
a3815 1
#line 458 "rx-decode.opc"
d3817 1
a3817 1
#line 458 "rx-decode.opc"
d3829 1
a3829 1
#line 458 "rx-decode.opc"
d3871 1
a3871 1
#line 555 "rx-decode.opc"
d3873 1
a3873 1
#line 555 "rx-decode.opc"
d3875 1
a3875 1
#line 555 "rx-decode.opc"
d3887 1
a3887 1
#line 555 "rx-decode.opc"
d3929 1
a3929 1
#line 371 "rx-decode.opc"
d3931 1
a3931 1
#line 371 "rx-decode.opc"
d3933 1
a3933 1
#line 371 "rx-decode.opc"
d3945 1
a3945 1
#line 371 "rx-decode.opc"
d3987 1
a3987 1
#line 389 "rx-decode.opc"
d3989 1
a3989 1
#line 389 "rx-decode.opc"
d3991 1
a3991 1
#line 389 "rx-decode.opc"
d4003 1
a4003 1
#line 389 "rx-decode.opc"
d4045 1
a4045 1
#line 310 "rx-decode.opc"
d4047 1
a4047 1
#line 310 "rx-decode.opc"
d4049 1
a4049 1
#line 310 "rx-decode.opc"
d4051 1
a4051 1
#line 310 "rx-decode.opc"
d4064 1
a4064 1
#line 310 "rx-decode.opc"
d4141 1
a4141 1
#line 491 "rx-decode.opc"
d4143 1
a4143 1
#line 491 "rx-decode.opc"
d4154 1
a4154 1
#line 491 "rx-decode.opc"
d4168 1
a4168 1
#line 473 "rx-decode.opc"
d4170 1
a4170 1
#line 473 "rx-decode.opc"
d4181 1
a4181 1
#line 473 "rx-decode.opc"
d4195 1
a4195 1
#line 455 "rx-decode.opc"
d4197 1
a4197 1
#line 455 "rx-decode.opc"
d4208 1
a4208 1
#line 455 "rx-decode.opc"
d4222 1
a4222 1
#line 549 "rx-decode.opc"
d4224 1
a4224 1
#line 549 "rx-decode.opc"
d4235 1
a4235 1
#line 549 "rx-decode.opc"
d4249 1
a4249 1
#line 365 "rx-decode.opc"
d4251 1
a4251 1
#line 365 "rx-decode.opc"
d4262 1
a4262 1
#line 365 "rx-decode.opc"
d4276 1
a4276 1
#line 383 "rx-decode.opc"
d4278 1
a4278 1
#line 383 "rx-decode.opc"
d4289 1
a4289 1
#line 383 "rx-decode.opc"
d4303 1
a4303 1
#line 267 "rx-decode.opc"
d4305 1
a4305 1
#line 267 "rx-decode.opc"
d4316 1
a4316 1
#line 267 "rx-decode.opc"
d4333 1
a4333 1
#line 356 "rx-decode.opc"
d4346 1
a4346 1
#line 635 "rx-decode.opc"
d4348 1
a4348 1
#line 635 "rx-decode.opc"
d4350 1
a4350 1
#line 635 "rx-decode.opc"
d4362 1
a4362 1
#line 635 "rx-decode.opc"
d4386 1
a4386 1
#line 625 "rx-decode.opc"
d4388 1
a4388 1
#line 625 "rx-decode.opc"
d4390 1
a4390 1
#line 625 "rx-decode.opc"
d4402 1
a4402 1
#line 625 "rx-decode.opc"
d4426 1
a4426 1
#line 615 "rx-decode.opc"
d4428 1
a4428 1
#line 615 "rx-decode.opc"
d4430 1
a4430 1
#line 615 "rx-decode.opc"
d4442 1
a4442 1
#line 615 "rx-decode.opc"
d4465 1
a4465 1
#line 323 "rx-decode.opc"
d4467 1
a4467 1
#line 323 "rx-decode.opc"
d4478 1
a4478 1
#line 323 "rx-decode.opc"
d4492 1
a4492 1
#line 320 "rx-decode.opc"
d4494 1
a4494 1
#line 320 "rx-decode.opc"
d4505 1
a4505 1
#line 320 "rx-decode.opc"
d4520 1
a4520 1
#line 464 "rx-decode.opc"
d4522 1
a4522 1
#line 464 "rx-decode.opc"
d4524 1
a4524 1
#line 464 "rx-decode.opc"
d4536 1
a4536 1
#line 464 "rx-decode.opc"
d4578 1
a4578 1
#line 476 "rx-decode.opc"
d4580 1
a4580 1
#line 476 "rx-decode.opc"
d4591 1
a4591 1
#line 476 "rx-decode.opc"
d4600 1
a4600 1
#line 552 "rx-decode.opc"
d4602 1
a4602 1
#line 552 "rx-decode.opc"
d4613 1
a4613 1
#line 552 "rx-decode.opc"
d4622 1
a4622 1
#line 368 "rx-decode.opc"
d4624 1
a4624 1
#line 368 "rx-decode.opc"
d4635 1
a4635 1
#line 368 "rx-decode.opc"
d4644 1
a4644 1
#line 386 "rx-decode.opc"
d4646 1
a4646 1
#line 386 "rx-decode.opc"
d4657 1
a4657 1
#line 386 "rx-decode.opc"
d4759 1
a4759 1
#line 261 "rx-decode.opc"
d4769 1
a4769 1
#line 261 "rx-decode.opc"
d4792 1
a4792 1
#line 479 "rx-decode.opc"
d4802 1
a4802 1
#line 479 "rx-decode.opc"
d4817 1
a4817 1
#line 932 "rx-decode.opc"
d4829 1
a4829 1
#line 899 "rx-decode.opc"
d4839 1
a4839 1
#line 899 "rx-decode.opc"
d4896 1
a4896 1
#line 850 "rx-decode.opc"
d4898 1
a4898 1
#line 850 "rx-decode.opc"
d4900 1
a4900 1
#line 850 "rx-decode.opc"
d4912 1
a4912 1
#line 850 "rx-decode.opc"
d4937 1
a4937 1
#line 860 "rx-decode.opc"
d4939 1
a4939 1
#line 860 "rx-decode.opc"
d4941 1
a4941 1
#line 860 "rx-decode.opc"
d4953 1
a4953 1
#line 860 "rx-decode.opc"
d4978 1
a4978 1
#line 870 "rx-decode.opc"
d4980 1
a4980 1
#line 870 "rx-decode.opc"
d4982 1
a4982 1
#line 870 "rx-decode.opc"
d4994 1
a4994 1
#line 870 "rx-decode.opc"
d5018 1
a5018 1
#line 413 "rx-decode.opc"
d5028 1
a5028 1
#line 413 "rx-decode.opc"
d5036 1
a5036 1
#line 434 "rx-decode.opc"
d5046 1
a5046 1
#line 434 "rx-decode.opc"
d5054 1
a5054 1
#line 516 "rx-decode.opc"
d5064 1
a5064 1
#line 516 "rx-decode.opc"
d5072 1
a5072 1
#line 790 "rx-decode.opc"
d5082 1
a5082 1
#line 790 "rx-decode.opc"
d5090 1
a5090 1
#line 650 "rx-decode.opc"
d5100 1
a5100 1
#line 650 "rx-decode.opc"
d5108 1
a5108 1
#line 647 "rx-decode.opc"
d5118 1
a5118 1
#line 647 "rx-decode.opc"
d5128 1
a5128 1
#line 329 "rx-decode.opc"
d5130 1
a5130 1
#line 329 "rx-decode.opc"
d5141 1
a5141 1
#line 329 "rx-decode.opc"
d5149 1
a5149 1
#line 326 "rx-decode.opc"
d5159 1
a5159 1
#line 326 "rx-decode.opc"
d5168 1
a5168 1
#line 905 "rx-decode.opc"
d5178 1
a5178 1
#line 905 "rx-decode.opc"
d5187 1
a5187 1
#line 902 "rx-decode.opc"
d5197 1
a5197 1
#line 902 "rx-decode.opc"
d5227 1
a5227 1
#line 700 "rx-decode.opc"
d5237 2
a5238 2
#line 700 "rx-decode.opc"
                ID(branch); Scc(RXC_always); DR(rsrc);
d5260 1
a5260 1
#line 703 "rx-decode.opc"
d5270 1
a5270 1
#line 703 "rx-decode.opc"
d5293 1
a5293 1
#line 696 "rx-decode.opc"
d5303 2
a5304 2
#line 696 "rx-decode.opc"
                ID(branchrel); Scc(RXC_always); DR(rsrc);
d5327 1
a5327 1
#line 712 "rx-decode.opc"
d5337 1
a5337 1
#line 712 "rx-decode.opc"
d5347 1
a5347 1
#line 736 "rx-decode.opc"
d5357 1
a5357 1
#line 736 "rx-decode.opc"
d5372 1
a5372 1
#line 727 "rx-decode.opc"
d5382 1
a5382 1
#line 739 "rx-decode.opc"
d5392 1
a5392 1
#line 739 "rx-decode.opc"
d5407 1
a5407 1
#line 730 "rx-decode.opc"
d5417 1
a5417 1
#line 745 "rx-decode.opc"
d5427 1
a5427 1
#line 745 "rx-decode.opc"
d5445 1
a5445 1
#line 733 "rx-decode.opc"
d5455 1
a5455 1
#line 751 "rx-decode.opc"
d5465 1
a5465 1
#line 751 "rx-decode.opc"
d5483 1
a5483 1
#line 742 "rx-decode.opc"
d5498 1
a5498 1
#line 793 "rx-decode.opc"
d5516 1
a5516 1
#line 920 "rx-decode.opc"
d5531 1
a5531 1
#line 923 "rx-decode.opc"
d5546 1
a5546 1
#line 935 "rx-decode.opc"
d5572 1
a5572 1
#line 896 "rx-decode.opc"
d5582 1
a5582 1
#line 896 "rx-decode.opc"
d5605 1
a5605 1
#line 893 "rx-decode.opc"
d5615 1
a5615 1
#line 893 "rx-decode.opc"
d5631 1
a5631 1
#line 287 "rx-decode.opc"
d5633 1
a5633 1
#line 287 "rx-decode.opc"
d5635 1
a5635 1
#line 287 "rx-decode.opc"
d5637 1
a5637 1
#line 287 "rx-decode.opc"
d5639 1
a5639 1
#line 287 "rx-decode.opc"
d5641 1
a5641 1
#line 287 "rx-decode.opc"
d5656 1
a5656 1
#line 287 "rx-decode.opc"
d5734 1
a5734 1
#line 284 "rx-decode.opc"
d5736 1
a5736 1
#line 284 "rx-decode.opc"
d5738 1
a5738 1
#line 284 "rx-decode.opc"
d5740 1
a5740 1
#line 284 "rx-decode.opc"
d5742 1
a5742 1
#line 284 "rx-decode.opc"
d5744 1
a5744 1
#line 284 "rx-decode.opc"
d5759 1
a5759 1
#line 284 "rx-decode.opc"
d6125 1
a6125 1
#line 307 "rx-decode.opc"
d6127 1
a6127 1
#line 307 "rx-decode.opc"
d6129 1
a6129 1
#line 307 "rx-decode.opc"
d6131 1
a6131 1
#line 307 "rx-decode.opc"
d6133 1
a6133 1
#line 307 "rx-decode.opc"
d6135 1
a6135 1
#line 307 "rx-decode.opc"
d6150 1
a6150 1
#line 307 "rx-decode.opc"
d6300 1
a6300 1
#line 273 "rx-decode.opc"
d6302 1
a6302 1
#line 273 "rx-decode.opc"
d6304 1
a6304 1
#line 273 "rx-decode.opc"
d6306 1
a6306 1
#line 273 "rx-decode.opc"
d6308 1
a6308 1
#line 273 "rx-decode.opc"
d6322 2
a6323 3
#line 273 "rx-decode.opc"
                ID(mov); sBWL(sz); F_____;
                if ((ss == 3) && (sd != 3))
d6325 1
a6325 1
                    SD(ss, rdst, sz); DD(sd, rsrc, sz);
d6329 9
a6337 1
                    SD(ss, rsrc, sz); DD(sd, rdst, sz);
d6775 1
a6775 1
#line 844 "rx-decode.opc"
d6777 1
a6777 1
#line 844 "rx-decode.opc"
d6779 1
a6779 1
#line 844 "rx-decode.opc"
d6791 1
a6791 1
#line 844 "rx-decode.opc"
d6800 1
a6800 1
#line 854 "rx-decode.opc"
d6802 1
a6802 1
#line 854 "rx-decode.opc"
d6804 1
a6804 1
#line 854 "rx-decode.opc"
d6816 1
a6816 1
#line 854 "rx-decode.opc"
d6868 1
a6868 1
#line 864 "rx-decode.opc"
d6870 1
a6870 1
#line 864 "rx-decode.opc"
d6872 1
a6872 1
#line 864 "rx-decode.opc"
d6884 1
a6884 1
#line 864 "rx-decode.opc"
d6893 1
a6893 1
#line 332 "rx-decode.opc"
d6895 1
a6895 1
#line 332 "rx-decode.opc"
d6897 1
a6897 1
#line 332 "rx-decode.opc"
d6909 1
a6909 1
#line 332 "rx-decode.opc"
d6970 1
a6970 1
#line 264 "rx-decode.opc"
d6972 1
a6972 1
#line 264 "rx-decode.opc"
d6974 1
a6974 1
#line 264 "rx-decode.opc"
d6976 1
a6976 1
#line 264 "rx-decode.opc"
d6989 1
a6989 1
#line 264 "rx-decode.opc"
d7034 1
a7034 1
#line 506 "rx-decode.opc"
d7036 1
a7036 1
#line 506 "rx-decode.opc"
d7047 1
a7047 1
#line 506 "rx-decode.opc"
d7062 1
a7062 1
#line 437 "rx-decode.opc"
d7064 1
a7064 1
#line 437 "rx-decode.opc"
d7075 1
a7075 1
#line 437 "rx-decode.opc"
d7092 1
a7092 1
#line 446 "rx-decode.opc"
d7094 1
a7094 1
#line 446 "rx-decode.opc"
d7105 1
a7105 1
#line 446 "rx-decode.opc"
d7119 1
a7119 1
#line 519 "rx-decode.opc"
d7121 1
a7121 1
#line 519 "rx-decode.opc"
d7132 1
a7132 1
#line 519 "rx-decode.opc"
d7150 1
a7150 1
#line 528 "rx-decode.opc"
d7152 1
a7152 1
#line 528 "rx-decode.opc"
d7154 1
a7154 1
#line 528 "rx-decode.opc"
d7166 9
a7174 2
#line 528 "rx-decode.opc"
                      ID(max); SP(ss, rsrc); DR(rdst);
d7215 1
a7215 1
#line 540 "rx-decode.opc"
d7217 1
a7217 1
#line 540 "rx-decode.opc"
d7219 1
a7219 1
#line 540 "rx-decode.opc"
d7231 1
a7231 1
#line 540 "rx-decode.opc"
d7273 1
a7273 1
#line 570 "rx-decode.opc"
d7275 1
a7275 1
#line 570 "rx-decode.opc"
d7277 1
a7277 1
#line 570 "rx-decode.opc"
d7289 1
a7289 1
#line 570 "rx-decode.opc"
d7331 1
a7331 1
#line 582 "rx-decode.opc"
d7333 1
a7333 1
#line 582 "rx-decode.opc"
d7335 1
a7335 1
#line 582 "rx-decode.opc"
d7347 1
a7347 1
#line 582 "rx-decode.opc"
d7389 1
a7389 1
#line 594 "rx-decode.opc"
d7391 1
a7391 1
#line 594 "rx-decode.opc"
d7393 1
a7393 1
#line 594 "rx-decode.opc"
d7405 1
a7405 1
#line 594 "rx-decode.opc"
d7447 1
a7447 1
#line 606 "rx-decode.opc"
d7449 1
a7449 1
#line 606 "rx-decode.opc"
d7451 1
a7451 1
#line 606 "rx-decode.opc"
d7463 1
a7463 1
#line 606 "rx-decode.opc"
d7505 1
a7505 1
#line 425 "rx-decode.opc"
d7507 1
a7507 1
#line 425 "rx-decode.opc"
d7509 1
a7509 1
#line 425 "rx-decode.opc"
d7521 1
a7521 1
#line 425 "rx-decode.opc"
d7563 1
a7563 1
#line 404 "rx-decode.opc"
d7565 1
a7565 1
#line 404 "rx-decode.opc"
d7567 1
a7567 1
#line 404 "rx-decode.opc"
d7579 1
a7579 1
#line 404 "rx-decode.opc"
d7620 1
a7620 1
#line 416 "rx-decode.opc"
d7622 1
a7622 1
#line 416 "rx-decode.opc"
d7633 1
a7633 1
#line 416 "rx-decode.opc"
d7651 1
a7651 1
#line 338 "rx-decode.opc"
d7653 1
a7653 1
#line 338 "rx-decode.opc"
d7655 1
a7655 1
#line 338 "rx-decode.opc"
d7667 1
a7667 1
#line 338 "rx-decode.opc"
d7709 1
a7709 1
#line 835 "rx-decode.opc"
d7711 1
a7711 1
#line 835 "rx-decode.opc"
d7713 1
a7713 1
#line 835 "rx-decode.opc"
d7725 1
a7725 1
#line 835 "rx-decode.opc"
d7767 1
a7767 1
#line 847 "rx-decode.opc"
d7769 1
a7769 1
#line 847 "rx-decode.opc"
d7771 1
a7771 1
#line 847 "rx-decode.opc"
d7783 1
a7783 1
#line 847 "rx-decode.opc"
d7825 1
a7825 1
#line 857 "rx-decode.opc"
d7827 1
a7827 1
#line 857 "rx-decode.opc"
d7829 1
a7829 1
#line 857 "rx-decode.opc"
d7841 1
a7841 1
#line 857 "rx-decode.opc"
d7883 1
a7883 1
#line 867 "rx-decode.opc"
d7885 1
a7885 1
#line 867 "rx-decode.opc"
d7887 1
a7887 1
#line 867 "rx-decode.opc"
d7899 1
a7899 1
#line 867 "rx-decode.opc"
d7941 1
a7941 1
#line 877 "rx-decode.opc"
d7943 1
a7943 1
#line 877 "rx-decode.opc"
d7945 1
a7945 1
#line 877 "rx-decode.opc"
d7957 1
a7957 1
#line 877 "rx-decode.opc"
d7999 1
a7999 1
#line 814 "rx-decode.opc"
d8001 1
a8001 1
#line 814 "rx-decode.opc"
d8003 1
a8003 1
#line 814 "rx-decode.opc"
d8015 1
a8015 1
#line 814 "rx-decode.opc"
d8057 1
a8057 1
#line 808 "rx-decode.opc"
d8059 1
a8059 1
#line 808 "rx-decode.opc"
d8061 1
a8061 1
#line 808 "rx-decode.opc"
d8073 1
a8073 1
#line 808 "rx-decode.opc"
d8115 1
a8115 1
#line 802 "rx-decode.opc"
d8117 1
a8117 1
#line 802 "rx-decode.opc"
d8119 1
a8119 1
#line 802 "rx-decode.opc"
d8131 1
a8131 1
#line 802 "rx-decode.opc"
d8173 1
a8173 1
#line 823 "rx-decode.opc"
d8175 1
a8175 1
#line 823 "rx-decode.opc"
d8177 1
a8177 1
#line 823 "rx-decode.opc"
d8189 1
a8189 1
#line 823 "rx-decode.opc"
d8231 1
a8231 1
#line 829 "rx-decode.opc"
d8233 1
a8233 1
#line 829 "rx-decode.opc"
d8235 1
a8235 1
#line 829 "rx-decode.opc"
d8247 1
a8247 1
#line 829 "rx-decode.opc"
d8289 1
a8289 1
#line 817 "rx-decode.opc"
d8291 1
a8291 1
#line 817 "rx-decode.opc"
d8293 1
a8293 1
#line 817 "rx-decode.opc"
d8305 1
a8305 1
#line 817 "rx-decode.opc"
d8347 1
a8347 1
#line 832 "rx-decode.opc"
d8349 1
a8349 1
#line 832 "rx-decode.opc"
d8351 1
a8351 1
#line 832 "rx-decode.opc"
d8363 1
a8363 1
#line 832 "rx-decode.opc"
d8405 1
a8405 1
#line 941 "rx-decode.opc"
d8407 1
a8407 1
#line 941 "rx-decode.opc"
d8409 1
a8409 1
#line 941 "rx-decode.opc"
d8411 1
a8411 1
#line 941 "rx-decode.opc"
d8424 1
a8424 1
#line 941 "rx-decode.opc"
d8552 1
a8552 1
#line 884 "rx-decode.opc"
d8554 1
a8554 1
#line 884 "rx-decode.opc"
d8556 1
a8556 1
#line 884 "rx-decode.opc"
d8558 1
a8558 1
#line 884 "rx-decode.opc"
d8571 1
a8571 1
#line 884 "rx-decode.opc"
d8580 1
a8580 1
#line 874 "rx-decode.opc"
d8582 1
a8582 1
#line 874 "rx-decode.opc"
d8584 1
a8584 1
#line 874 "rx-decode.opc"
d8596 1
a8596 1
#line 874 "rx-decode.opc"
d9423 1
a9423 1
#line 757 "rx-decode.opc"
d9425 1
a9425 1
#line 757 "rx-decode.opc"
d9436 1
a9436 1
#line 757 "rx-decode.opc"
d9450 1
a9450 1
#line 760 "rx-decode.opc"
d9452 1
a9452 1
#line 760 "rx-decode.opc"
d9463 1
a9463 1
#line 760 "rx-decode.opc"
d9477 1
a9477 1
#line 763 "rx-decode.opc"
d9479 1
a9479 1
#line 763 "rx-decode.opc"
d9490 1
a9490 1
#line 763 "rx-decode.opc"
d9504 1
a9504 1
#line 766 "rx-decode.opc"
d9506 1
a9506 1
#line 766 "rx-decode.opc"
d9517 1
a9517 1
#line 766 "rx-decode.opc"
d9531 1
a9531 1
#line 769 "rx-decode.opc"
d9541 1
a9541 1
#line 769 "rx-decode.opc"
d9549 1
a9549 1
#line 772 "rx-decode.opc"
d9559 1
a9559 1
#line 772 "rx-decode.opc"
d9574 1
a9574 1
#line 784 "rx-decode.opc"
d9584 1
a9584 1
#line 784 "rx-decode.opc"
d9602 1
a9602 1
#line 775 "rx-decode.opc"
d9612 1
a9612 1
#line 775 "rx-decode.opc"
d9620 1
a9620 1
#line 781 "rx-decode.opc"
d9630 1
a9630 1
#line 781 "rx-decode.opc"
d9638 1
a9638 1
#line 778 "rx-decode.opc"
d9648 1
a9648 1
#line 778 "rx-decode.opc"
d9664 1
a9664 1
#line 299 "rx-decode.opc"
d9666 1
a9666 1
#line 299 "rx-decode.opc"
d9668 1
a9668 1
#line 299 "rx-decode.opc"
d9670 1
a9670 1
#line 299 "rx-decode.opc"
d9683 1
a9683 1
#line 299 "rx-decode.opc"
d9744 1
a9744 1
#line 303 "rx-decode.opc"
d9746 1
a9746 1
#line 303 "rx-decode.opc"
d9748 1
a9748 1
#line 303 "rx-decode.opc"
d9750 1
a9750 1
#line 303 "rx-decode.opc"
d9763 1
a9763 1
#line 303 "rx-decode.opc"
d9824 1
a9824 1
#line 313 "rx-decode.opc"
d9826 1
a9826 1
#line 313 "rx-decode.opc"
d9828 1
a9828 1
#line 313 "rx-decode.opc"
d9830 1
a9830 1
#line 313 "rx-decode.opc"
d9843 1
a9843 1
#line 313 "rx-decode.opc"
d9906 1
a9906 1
#line 638 "rx-decode.opc"
d9908 1
a9908 1
#line 638 "rx-decode.opc"
d9919 1
a9919 1
#line 638 "rx-decode.opc"
d9933 1
a9933 1
#line 628 "rx-decode.opc"
d9935 1
a9935 1
#line 628 "rx-decode.opc"
d9946 1
a9946 1
#line 628 "rx-decode.opc"
d9960 1
a9960 1
#line 618 "rx-decode.opc"
d9962 1
a9962 1
#line 618 "rx-decode.opc"
d9973 1
a9973 1
#line 618 "rx-decode.opc"
d9987 1
a9987 1
#line 662 "rx-decode.opc"
d9989 1
a9989 1
#line 662 "rx-decode.opc"
d10000 1
a10000 1
#line 662 "rx-decode.opc"
d10014 1
a10014 1
#line 665 "rx-decode.opc"
d10016 1
a10016 1
#line 665 "rx-decode.opc"
d10027 1
a10027 1
#line 665 "rx-decode.opc"
d10041 1
a10041 1
#line 656 "rx-decode.opc"
d10043 1
a10043 1
#line 656 "rx-decode.opc"
d10054 1
a10054 1
#line 656 "rx-decode.opc"
d10068 1
a10068 1
#line 668 "rx-decode.opc"
d10070 1
a10070 1
#line 668 "rx-decode.opc"
d10081 1
a10081 1
#line 668 "rx-decode.opc"
d10099 1
a10099 1
#line 911 "rx-decode.opc"
d10101 1
a10101 1
#line 911 "rx-decode.opc"
d10103 1
a10103 1
#line 911 "rx-decode.opc"
d10115 1
a10115 1
#line 911 "rx-decode.opc"
d10139 1
a10139 1
#line 914 "rx-decode.opc"
d10141 1
a10141 1
#line 914 "rx-decode.opc"
d10143 1
a10143 1
#line 914 "rx-decode.opc"
d10155 1
a10155 1
#line 914 "rx-decode.opc"
d10182 1
a10182 1
#line 659 "rx-decode.opc"
d10184 1
a10184 1
#line 659 "rx-decode.opc"
d10186 1
a10186 1
#line 659 "rx-decode.opc"
d10198 1
a10198 1
#line 659 "rx-decode.opc"
d10222 1
a10222 1
#line 653 "rx-decode.opc"
d10224 1
a10224 1
#line 653 "rx-decode.opc"
d10226 1
a10226 1
#line 653 "rx-decode.opc"
d10238 1
a10238 1
#line 653 "rx-decode.opc"
d10262 1
a10262 1
#line 443 "rx-decode.opc"
d10264 1
a10264 1
#line 443 "rx-decode.opc"
d10275 1
a10275 1
#line 443 "rx-decode.opc"
d10284 1
a10284 1
#line 525 "rx-decode.opc"
d10286 1
a10286 1
#line 525 "rx-decode.opc"
d10297 1
a10297 1
#line 525 "rx-decode.opc"
d10306 1
a10306 1
#line 537 "rx-decode.opc"
d10308 1
a10308 1
#line 537 "rx-decode.opc"
d10319 1
a10319 1
#line 537 "rx-decode.opc"
d10328 1
a10328 1
#line 567 "rx-decode.opc"
d10330 1
a10330 1
#line 567 "rx-decode.opc"
d10341 1
a10341 1
#line 567 "rx-decode.opc"
d10350 1
a10350 1
#line 579 "rx-decode.opc"
d10352 1
a10352 1
#line 579 "rx-decode.opc"
d10363 1
a10363 1
#line 579 "rx-decode.opc"
d10372 1
a10372 1
#line 591 "rx-decode.opc"
d10374 1
a10374 1
#line 591 "rx-decode.opc"
d10385 1
a10385 1
#line 591 "rx-decode.opc"
d10394 1
a10394 1
#line 603 "rx-decode.opc"
d10396 1
a10396 1
#line 603 "rx-decode.opc"
d10407 1
a10407 1
#line 603 "rx-decode.opc"
d10416 1
a10416 1
#line 422 "rx-decode.opc"
d10418 1
a10418 1
#line 422 "rx-decode.opc"
d10429 1
a10429 1
#line 422 "rx-decode.opc"
d10438 1
a10438 1
#line 401 "rx-decode.opc"
d10440 1
a10440 1
#line 401 "rx-decode.opc"
d10451 1
a10451 1
#line 401 "rx-decode.opc"
d10460 1
a10460 1
#line 347 "rx-decode.opc"
d10462 1
a10462 1
#line 347 "rx-decode.opc"
d10473 1
a10473 1
#line 347 "rx-decode.opc"
d10482 1
a10482 1
#line 350 "rx-decode.opc"
d10484 1
a10484 1
#line 350 "rx-decode.opc"
d10495 1
a10495 1
#line 350 "rx-decode.opc"
d10513 1
a10513 1
#line 811 "rx-decode.opc"
d10523 1
a10523 1
#line 811 "rx-decode.opc"
d10531 1
a10531 1
#line 805 "rx-decode.opc"
d10541 1
a10541 1
#line 805 "rx-decode.opc"
d10549 1
a10549 1
#line 799 "rx-decode.opc"
d10559 1
a10559 1
#line 799 "rx-decode.opc"
d10567 1
a10567 1
#line 820 "rx-decode.opc"
d10577 1
a10577 1
#line 820 "rx-decode.opc"
d10585 1
a10585 1
#line 826 "rx-decode.opc"
d10595 1
a10595 1
#line 826 "rx-decode.opc"
d10611 1
a10611 1
#line 908 "rx-decode.opc"
d10613 1
a10613 1
#line 908 "rx-decode.opc"
d10624 1
a10624 1
#line 908 "rx-decode.opc"
d10790 1
a10790 1
#line 641 "rx-decode.opc"
d10792 1
a10792 1
#line 641 "rx-decode.opc"
d10794 1
a10794 1
#line 641 "rx-decode.opc"
d10806 1
a10806 1
#line 641 "rx-decode.opc"
d11103 1
a11103 1
#line 631 "rx-decode.opc"
d11105 1
a11105 1
#line 631 "rx-decode.opc"
d11107 1
a11107 1
#line 631 "rx-decode.opc"
d11119 1
a11119 1
#line 631 "rx-decode.opc"
d11414 1
a11414 1
#line 621 "rx-decode.opc"
d11416 1
a11416 1
#line 621 "rx-decode.opc"
d11418 1
a11418 1
#line 621 "rx-decode.opc"
d11430 1
a11430 1
#line 621 "rx-decode.opc"
d11739 1
a11739 1
#line 887 "rx-decode.opc"
d11741 1
a11741 1
#line 887 "rx-decode.opc"
d11743 1
a11743 1
#line 887 "rx-decode.opc"
d11755 1
a11755 1
#line 887 "rx-decode.opc"
d11767 1
a11767 1
#line 880 "rx-decode.opc"
d11769 1
a11769 1
#line 880 "rx-decode.opc"
d11780 1
a11780 1
#line 880 "rx-decode.opc"
d12609 1
a12609 1
#line 293 "rx-decode.opc"
d12611 1
a12611 1
#line 293 "rx-decode.opc"
d12613 1
a12613 1
#line 293 "rx-decode.opc"
d12615 1
a12615 1
#line 293 "rx-decode.opc"
d12628 2
a12629 2
#line 293 "rx-decode.opc"
                      ID(movbir); sBWL(sz); DR(rdst); SR(isrc); S2R(bsrc); F_____;
d13066 1
a13066 1
#line 290 "rx-decode.opc"
d13068 1
a13068 1
#line 290 "rx-decode.opc"
d13070 1
a13070 1
#line 290 "rx-decode.opc"
d13072 1
a13072 1
#line 290 "rx-decode.opc"
d13085 2
a13086 2
#line 290 "rx-decode.opc"
                      ID(movbi); sBWL(sz); DR(rdst); SR(isrc); S2R(bsrc); F_____;
d13523 1
a13523 1
#line 296 "rx-decode.opc"
d13525 1
a13525 1
#line 296 "rx-decode.opc"
d13527 1
a13527 1
#line 296 "rx-decode.opc"
d13529 1
a13529 1
#line 296 "rx-decode.opc"
d13542 2
a13543 2
#line 296 "rx-decode.opc"
                      ID(movbi); uBWL(sz); DR(rdst); SR(isrc); S2R(bsrc); F_____;
d13987 1
a13987 1
#line 500 "rx-decode.opc"
d13989 1
a13989 1
#line 500 "rx-decode.opc"
d13991 1
a13991 1
#line 500 "rx-decode.opc"
d14003 1
a14003 1
#line 500 "rx-decode.opc"
d14156 1
a14156 1
#line 467 "rx-decode.opc"
d14158 1
a14158 1
#line 467 "rx-decode.opc"
d14160 1
a14160 1
#line 467 "rx-decode.opc"
d14172 1
a14172 1
#line 467 "rx-decode.opc"
d14325 1
a14325 1
#line 561 "rx-decode.opc"
d14327 1
a14327 1
#line 561 "rx-decode.opc"
d14329 1
a14329 1
#line 561 "rx-decode.opc"
d14341 1
a14341 1
#line 561 "rx-decode.opc"
d14494 1
a14494 1
#line 377 "rx-decode.opc"
d14496 1
a14496 1
#line 377 "rx-decode.opc"
d14498 1
a14498 1
#line 377 "rx-decode.opc"
d14510 1
a14510 1
#line 377 "rx-decode.opc"
d14663 1
a14663 1
#line 395 "rx-decode.opc"
d14665 1
a14665 1
#line 395 "rx-decode.opc"
d14667 1
a14667 1
#line 395 "rx-decode.opc"
d14679 1
a14679 1
#line 395 "rx-decode.opc"
d14829 1
a14829 1
#line 944 "rx-decode.opc"
@


1.4
log
@[opcodes]
	* rx-decode.opc (rx_decode_opcode) (mvtipl): Add.
	(mvtcp, mvfcp, opecp): Remove.
	* rx-decode.c: Regenerate.
	* rx-dis.c (cpen): Remove.

[gas]
	* config/rx-parse.y (MVTIPL): Update bit pattern.
	(cpen): Remove.

[include/opcode]
	* rx.h (rx_decode_opcode) (mvtipl): Add.
	(mvtcp, mvfcp, opecp): Remove.
@
text
@d224 4
a227 6
/* The syntax is "OSZC" where each character is one of the following:
   - = flag unchanged
   0 = flag cleared
   1 = flag set
   ? = flag undefined
   x = flag set (any letter will do, use it for hints :).  */
d229 9
a237 32
static void
store_flags (RX_Opcode_Decoded * rx, char * str)
{
  int i, mask;
  rx->flags_0 = 0;
  rx->flags_1 = 0;
  rx->flags_s = 0;
  
  for (i = 0; i < 4; i++)
    {
      mask = 8 >> i;
      switch (str[i])
	{
	case 0:
	  abort ();
	case '-':
	  break;
	case '0':
	  rx->flags_0 |= mask;
	  break;
	case '1':
	  rx->flags_1 |= mask;
	  break;
	case '?':
	  break;
	default:
	  rx->flags_0 |= mask;
	  rx->flags_s |= mask;
	  break;
	}
    }
}
d273 1
a273 1
#line 951 "rx-decode.opc"
d288 1
a288 1
#line 954 "rx-decode.opc"
d303 1
a303 1
#line 740 "rx-decode.opc"
d321 1
a321 1
#line 746 "rx-decode.opc"
d339 1
a339 1
#line 718 "rx-decode.opc"
d354 1
a354 1
#line 734 "rx-decode.opc"
d371 1
a371 1
#line 522 "rx-decode.opc"
d373 1
a373 1
#line 522 "rx-decode.opc"
d375 1
a375 1
#line 522 "rx-decode.opc"
d377 1
a377 1
#line 522 "rx-decode.opc"
d390 2
a391 2
#line 522 "rx-decode.opc"
                      ID(sub); S2Pm(ss, rsrc, mx); SR(rdst); DR(rdst); F("OSZC");
d432 1
a432 1
#line 510 "rx-decode.opc"
d434 1
a434 1
#line 510 "rx-decode.opc"
d436 1
a436 1
#line 510 "rx-decode.opc"
d438 1
a438 1
#line 510 "rx-decode.opc"
d451 2
a452 2
#line 510 "rx-decode.opc"
                      ID(sub); S2Pm(ss, rsrc, mx); SR(rdst); F("OSZC");
d496 1
a496 1
#line 486 "rx-decode.opc"
d498 1
a498 1
#line 486 "rx-decode.opc"
d500 1
a500 1
#line 486 "rx-decode.opc"
d502 1
a502 1
#line 486 "rx-decode.opc"
d515 2
a516 2
#line 486 "rx-decode.opc"
                      ID(add); SPm(ss, rsrc, mx); DR(rdst); F("OSZC");
d557 1
a557 1
#line 583 "rx-decode.opc"
d559 1
a559 1
#line 583 "rx-decode.opc"
d561 1
a561 1
#line 583 "rx-decode.opc"
d563 1
a563 1
#line 583 "rx-decode.opc"
d576 2
a577 2
#line 583 "rx-decode.opc"
                      ID(mul); SPm(ss, rsrc, mx); DR(rdst); F("----");
d618 1
a618 1
#line 399 "rx-decode.opc"
d620 1
a620 1
#line 399 "rx-decode.opc"
d622 1
a622 1
#line 399 "rx-decode.opc"
d624 1
a624 1
#line 399 "rx-decode.opc"
d637 2
a638 2
#line 399 "rx-decode.opc"
                      ID(and); SPm(ss, rsrc, mx); DR(rdst); F("-SZ-");
d679 1
a679 1
#line 417 "rx-decode.opc"
d681 1
a681 1
#line 417 "rx-decode.opc"
d683 1
a683 1
#line 417 "rx-decode.opc"
d685 1
a685 1
#line 417 "rx-decode.opc"
d698 2
a699 2
#line 417 "rx-decode.opc"
                      ID(or); SPm(ss, rsrc, mx); DR(rdst); F("-SZ-");
d744 1
a744 1
#line 535 "rx-decode.opc"
d746 1
a746 1
#line 535 "rx-decode.opc"
d748 1
a748 1
#line 535 "rx-decode.opc"
d750 1
a750 1
#line 535 "rx-decode.opc"
d763 2
a764 2
#line 535 "rx-decode.opc"
                            ID(sbb); SPm(sp, rsrc, mx); DR(rdst); F("OSZC");
d781 1
a781 1
#line 556 "rx-decode.opc"
d783 1
a783 1
#line 556 "rx-decode.opc"
d785 1
a785 1
#line 556 "rx-decode.opc"
d787 1
a787 1
#line 556 "rx-decode.opc"
d800 1
a800 1
#line 556 "rx-decode.opc"
d818 1
a818 1
#line 568 "rx-decode.opc"
d820 1
a820 1
#line 568 "rx-decode.opc"
d822 1
a822 1
#line 568 "rx-decode.opc"
d824 1
a824 1
#line 568 "rx-decode.opc"
d837 1
a837 1
#line 568 "rx-decode.opc"
d855 1
a855 1
#line 598 "rx-decode.opc"
d857 1
a857 1
#line 598 "rx-decode.opc"
d859 1
a859 1
#line 598 "rx-decode.opc"
d861 1
a861 1
#line 598 "rx-decode.opc"
d874 1
a874 1
#line 598 "rx-decode.opc"
d892 1
a892 1
#line 610 "rx-decode.opc"
d894 1
a894 1
#line 610 "rx-decode.opc"
d896 1
a896 1
#line 610 "rx-decode.opc"
d898 1
a898 1
#line 610 "rx-decode.opc"
d911 1
a911 1
#line 610 "rx-decode.opc"
d929 1
a929 1
#line 622 "rx-decode.opc"
d931 1
a931 1
#line 622 "rx-decode.opc"
d933 1
a933 1
#line 622 "rx-decode.opc"
d935 1
a935 1
#line 622 "rx-decode.opc"
d948 2
a949 2
#line 622 "rx-decode.opc"
                            ID(div); SPm(ss, rsrc, mx); DR(rdst); F("O---");
d966 1
a966 1
#line 634 "rx-decode.opc"
d968 1
a968 1
#line 634 "rx-decode.opc"
d970 1
a970 1
#line 634 "rx-decode.opc"
d972 1
a972 1
#line 634 "rx-decode.opc"
d985 2
a986 2
#line 634 "rx-decode.opc"
                            ID(divu); SPm(ss, rsrc, mx); DR(rdst); F("O---");
d1003 1
a1003 1
#line 453 "rx-decode.opc"
d1005 1
a1005 1
#line 453 "rx-decode.opc"
d1007 1
a1007 1
#line 453 "rx-decode.opc"
d1009 1
a1009 1
#line 453 "rx-decode.opc"
d1022 2
a1023 2
#line 453 "rx-decode.opc"
                            ID(and); SPm(ss, rsrc, mx); S2R(rdst); F("-SZ-");
d1040 1
a1040 1
#line 432 "rx-decode.opc"
d1042 1
a1042 1
#line 432 "rx-decode.opc"
d1044 1
a1044 1
#line 432 "rx-decode.opc"
d1046 1
a1046 1
#line 432 "rx-decode.opc"
d1059 2
a1060 2
#line 432 "rx-decode.opc"
                            ID(xor); SPm(ss, rsrc, mx); DR(rdst); F("-SZ-");
d1077 1
a1077 1
#line 366 "rx-decode.opc"
d1079 1
a1079 1
#line 366 "rx-decode.opc"
d1081 1
a1081 1
#line 366 "rx-decode.opc"
d1083 1
a1083 1
#line 366 "rx-decode.opc"
d1096 1
a1096 1
#line 366 "rx-decode.opc"
d1114 1
a1114 1
#line 863 "rx-decode.opc"
d1116 1
a1116 1
#line 863 "rx-decode.opc"
d1118 1
a1118 1
#line 863 "rx-decode.opc"
d1120 1
a1120 1
#line 863 "rx-decode.opc"
d1133 2
a1134 2
#line 863 "rx-decode.opc"
                            ID(itof); DR (rdst); SPm(sd, rsrc, mx); F("-SZ-");
d2341 1
a2341 1
#line 474 "rx-decode.opc"
d2343 1
a2343 1
#line 474 "rx-decode.opc"
d2345 1
a2345 1
#line 474 "rx-decode.opc"
d2357 2
a2358 2
#line 474 "rx-decode.opc"
                            ID(adc); SPm(ss, rsrc, 2); DR(rdst); F("OSZC");
d3458 1
a3458 1
#line 709 "rx-decode.opc"
d3468 1
a3468 1
#line 709 "rx-decode.opc"
d3491 1
a3491 1
#line 699 "rx-decode.opc"
d3493 1
a3493 1
#line 699 "rx-decode.opc"
d3504 1
a3504 1
#line 699 "rx-decode.opc"
d3526 1
a3526 1
#line 702 "rx-decode.opc"
d3536 1
a3536 1
#line 702 "rx-decode.opc"
d3551 1
a3551 1
#line 712 "rx-decode.opc"
d3566 1
a3566 1
#line 715 "rx-decode.opc"
d3581 1
a3581 1
#line 731 "rx-decode.opc"
d3590 1
a3590 1
#line 705 "rx-decode.opc"
d3600 1
a3600 1
#line 705 "rx-decode.opc"
d3614 1
a3614 1
#line 295 "rx-decode.opc"
d3616 1
a3616 1
#line 295 "rx-decode.opc"
d3618 1
a3618 1
#line 295 "rx-decode.opc"
d3620 1
a3620 1
#line 295 "rx-decode.opc"
d3633 2
a3634 2
#line 295 "rx-decode.opc"
                ID(mov); sBWL (sz); DIs(dst, d*16+sppp, sz); SC(IMM(1)); F("----");
d3665 1
a3665 1
#line 384 "rx-decode.opc"
d3667 1
a3667 1
#line 384 "rx-decode.opc"
d3678 1
a3678 1
#line 384 "rx-decode.opc"
d3696 1
a3696 1
#line 519 "rx-decode.opc"
d3698 1
a3698 1
#line 519 "rx-decode.opc"
d3700 1
a3700 1
#line 519 "rx-decode.opc"
d3712 2
a3713 2
#line 519 "rx-decode.opc"
                ID(sub); S2P(ss, rsrc); SR(rdst); DR(rdst); F("OSZC");
d3754 1
a3754 1
#line 507 "rx-decode.opc"
d3756 1
a3756 1
#line 507 "rx-decode.opc"
d3758 1
a3758 1
#line 507 "rx-decode.opc"
d3770 2
a3771 2
#line 507 "rx-decode.opc"
                ID(sub); S2P(ss, rsrc); SR(rdst); F("OSZC");
d3812 1
a3812 1
#line 483 "rx-decode.opc"
d3814 1
a3814 1
#line 483 "rx-decode.opc"
d3816 1
a3816 1
#line 483 "rx-decode.opc"
d3828 2
a3829 2
#line 483 "rx-decode.opc"
                ID(add); SP(ss, rsrc); DR(rdst); F("OSZC");
d3870 1
a3870 1
#line 580 "rx-decode.opc"
d3872 1
a3872 1
#line 580 "rx-decode.opc"
d3874 1
a3874 1
#line 580 "rx-decode.opc"
d3886 2
a3887 2
#line 580 "rx-decode.opc"
                ID(mul); SP(ss, rsrc); DR(rdst); F("----");
d3928 1
a3928 1
#line 396 "rx-decode.opc"
d3930 1
a3930 1
#line 396 "rx-decode.opc"
d3932 1
a3932 1
#line 396 "rx-decode.opc"
d3944 2
a3945 2
#line 396 "rx-decode.opc"
                ID(and); SP(ss, rsrc); DR(rdst); F("-SZ-");
d3986 1
a3986 1
#line 414 "rx-decode.opc"
d3988 1
a3988 1
#line 414 "rx-decode.opc"
d3990 1
a3990 1
#line 414 "rx-decode.opc"
d4002 2
a4003 2
#line 414 "rx-decode.opc"
                ID(or); SP(ss, rsrc); DR(rdst); F("-SZ-");
d4044 1
a4044 1
#line 335 "rx-decode.opc"
d4046 1
a4046 1
#line 335 "rx-decode.opc"
d4048 1
a4048 1
#line 335 "rx-decode.opc"
d4050 1
a4050 1
#line 335 "rx-decode.opc"
d4063 2
a4064 2
#line 335 "rx-decode.opc"
                ID(mov); uBWL(s); SD(ss, rsrc, s); DR(rdst); F("----");
d4140 1
a4140 1
#line 516 "rx-decode.opc"
d4142 1
a4142 1
#line 516 "rx-decode.opc"
d4153 2
a4154 2
#line 516 "rx-decode.opc"
                ID(sub); S2C(immm); SR(rdst); DR(rdst); F("OSZC");
d4167 1
a4167 1
#line 498 "rx-decode.opc"
d4169 1
a4169 1
#line 498 "rx-decode.opc"
d4180 2
a4181 2
#line 498 "rx-decode.opc"
                ID(sub); S2C(immm); SR(rdst); F("OSZC");
d4194 1
a4194 1
#line 480 "rx-decode.opc"
d4196 1
a4196 1
#line 480 "rx-decode.opc"
d4207 2
a4208 2
#line 480 "rx-decode.opc"
                ID(add); SC(immm); DR(rdst); F("OSZC");
d4221 1
a4221 1
#line 574 "rx-decode.opc"
d4223 1
a4223 1
#line 574 "rx-decode.opc"
d4234 2
a4235 2
#line 574 "rx-decode.opc"
                ID(mul); DR(rdst); SC(immm); F("----");
d4248 1
a4248 1
#line 390 "rx-decode.opc"
d4250 1
a4250 1
#line 390 "rx-decode.opc"
d4261 2
a4262 2
#line 390 "rx-decode.opc"
                ID(and); SC(immm); DR(rdst); F("-SZ-");
d4275 1
a4275 1
#line 408 "rx-decode.opc"
d4277 1
a4277 1
#line 408 "rx-decode.opc"
d4288 2
a4289 2
#line 408 "rx-decode.opc"
                ID(or); SC(immm); DR(rdst); F("-SZ-");
d4302 1
a4302 1
#line 292 "rx-decode.opc"
d4304 1
a4304 1
#line 292 "rx-decode.opc"
d4315 2
a4316 2
#line 292 "rx-decode.opc"
                ID(mov); DR(rdst); SC(immm); F("----");
d4332 1
a4332 1
#line 381 "rx-decode.opc"
d4345 1
a4345 1
#line 660 "rx-decode.opc"
d4347 1
a4347 1
#line 660 "rx-decode.opc"
d4349 1
a4349 1
#line 660 "rx-decode.opc"
d4361 2
a4362 2
#line 660 "rx-decode.opc"
                ID(shlr); S2C(i*16+mmmm); SR(rdst); DR(rdst); F("-SZC");
d4385 1
a4385 1
#line 650 "rx-decode.opc"
d4387 1
a4387 1
#line 650 "rx-decode.opc"
d4389 1
a4389 1
#line 650 "rx-decode.opc"
d4401 2
a4402 2
#line 650 "rx-decode.opc"
                ID(shar); S2C(i*16+mmmm); SR(rdst); DR(rdst); F("0SZC");
d4425 1
a4425 1
#line 640 "rx-decode.opc"
d4427 1
a4427 1
#line 640 "rx-decode.opc"
d4429 1
a4429 1
#line 640 "rx-decode.opc"
d4441 2
a4442 2
#line 640 "rx-decode.opc"
                ID(shll); S2C(i*16+mmmm); SR(rdst); DR(rdst); F("OSZC");
d4464 1
a4464 1
#line 348 "rx-decode.opc"
d4466 1
a4466 1
#line 348 "rx-decode.opc"
d4477 2
a4478 2
#line 348 "rx-decode.opc"
                ID(pushm); SR(dsta); S2R(dstb); F("----");
d4491 1
a4491 1
#line 345 "rx-decode.opc"
d4493 1
a4493 1
#line 345 "rx-decode.opc"
d4504 2
a4505 2
#line 345 "rx-decode.opc"
                ID(popm); SR(dsta); S2R(dstb); F("----");
d4519 1
a4519 1
#line 489 "rx-decode.opc"
d4521 1
a4521 1
#line 489 "rx-decode.opc"
d4523 1
a4523 1
#line 489 "rx-decode.opc"
d4535 2
a4536 2
#line 489 "rx-decode.opc"
                ID(add); SC(IMMex(im)); S2R(rsrc); DR(rdst); F("OSZC");
d4577 1
a4577 1
#line 501 "rx-decode.opc"
d4579 1
a4579 1
#line 501 "rx-decode.opc"
d4590 2
a4591 2
#line 501 "rx-decode.opc"
                ID(sub); SR(rsrc); S2C(IMMex(im)); F("OSZC");
d4599 1
a4599 1
#line 577 "rx-decode.opc"
d4601 1
a4601 1
#line 577 "rx-decode.opc"
d4612 2
a4613 2
#line 577 "rx-decode.opc"
                ID(mul); DR(rdst); SC(IMMex(im)); F("----");
d4621 1
a4621 1
#line 393 "rx-decode.opc"
d4623 1
a4623 1
#line 393 "rx-decode.opc"
d4634 2
a4635 2
#line 393 "rx-decode.opc"
                ID(and); SC(IMMex(im)); DR(rdst); F("-SZ-");
d4643 1
a4643 1
#line 411 "rx-decode.opc"
d4645 1
a4645 1
#line 411 "rx-decode.opc"
d4656 2
a4657 2
#line 411 "rx-decode.opc"
                ID(or); SC(IMMex(im)); DR(rdst); F("-SZ-");
d4758 1
a4758 1
#line 286 "rx-decode.opc"
d4768 2
a4769 2
#line 286 "rx-decode.opc"
                ID(mov); DR(rdst); SC(IMM (1)); F("----");
d4791 1
a4791 1
#line 504 "rx-decode.opc"
d4801 2
a4802 2
#line 504 "rx-decode.opc"
                ID(sub); SR(rsrc); S2C(IMM(1)); F("OSZC");
d4816 1
a4816 1
#line 957 "rx-decode.opc"
d4828 1
a4828 1
#line 924 "rx-decode.opc"
d4838 1
a4838 1
#line 924 "rx-decode.opc"
d4895 1
a4895 1
#line 875 "rx-decode.opc"
d4897 1
a4897 1
#line 875 "rx-decode.opc"
d4899 1
a4899 1
#line 875 "rx-decode.opc"
d4911 2
a4912 2
#line 875 "rx-decode.opc"
                ID(bset); BWL(LSIZE); SC(b*16+ittt); DR(rdst); F("----");
d4936 1
a4936 1
#line 885 "rx-decode.opc"
d4938 1
a4938 1
#line 885 "rx-decode.opc"
d4940 1
a4940 1
#line 885 "rx-decode.opc"
d4952 2
a4953 2
#line 885 "rx-decode.opc"
                ID(bclr); BWL(LSIZE); SC(b*16+ittt); DR(rdst); F("----");
d4977 1
a4977 1
#line 895 "rx-decode.opc"
d4979 1
a4979 1
#line 895 "rx-decode.opc"
d4981 1
a4981 1
#line 895 "rx-decode.opc"
d4993 2
a4994 2
#line 895 "rx-decode.opc"
                ID(btst); BWL(LSIZE); S2C(b*16+ittt); SR(rdst); F("--ZC");
d5017 1
a5017 1
#line 438 "rx-decode.opc"
d5027 2
a5028 2
#line 438 "rx-decode.opc"
                ID(xor); DR(rdst); SR(rdst); S2C(~0); F("-SZ-");
d5035 1
a5035 1
#line 459 "rx-decode.opc"
d5045 2
a5046 2
#line 459 "rx-decode.opc"
                ID(sub); DR(rdst); SC(0); S2R(rdst); F("OSZC");
d5053 1
a5053 1
#line 541 "rx-decode.opc"
d5063 2
a5064 2
#line 541 "rx-decode.opc"
                ID(abs); DR(rdst); SR(rdst); F("OSZ-");
d5071 1
a5071 1
#line 815 "rx-decode.opc"
d5081 1
a5081 1
#line 815 "rx-decode.opc"
d5089 1
a5089 1
#line 675 "rx-decode.opc"
d5099 2
a5100 2
#line 675 "rx-decode.opc"
                ID(rorc); DR(rdst); F("-SZC");
d5107 1
a5107 1
#line 672 "rx-decode.opc"
d5117 2
a5118 2
#line 672 "rx-decode.opc"
                ID(rolc); DR(rdst); F("-SZC");
d5127 1
a5127 1
#line 354 "rx-decode.opc"
d5129 1
a5129 1
#line 354 "rx-decode.opc"
d5140 2
a5141 2
#line 354 "rx-decode.opc"
                ID(mov); BWL(sz); OP(0, RX_Operand_Predec, 0, 0); SR(rsrc); F("----");
d5148 1
a5148 1
#line 351 "rx-decode.opc"
d5158 2
a5159 2
#line 351 "rx-decode.opc"
                ID(mov); OP(1, RX_Operand_Postinc, 0, 0); DR(rdst); F("----");
d5167 1
a5167 1
#line 930 "rx-decode.opc"
d5177 1
a5177 1
#line 930 "rx-decode.opc"
d5186 1
a5186 1
#line 927 "rx-decode.opc"
d5196 1
a5196 1
#line 927 "rx-decode.opc"
d5226 1
a5226 1
#line 725 "rx-decode.opc"
d5236 1
a5236 1
#line 725 "rx-decode.opc"
d5259 1
a5259 1
#line 728 "rx-decode.opc"
d5269 1
a5269 1
#line 728 "rx-decode.opc"
d5292 1
a5292 1
#line 721 "rx-decode.opc"
d5302 1
a5302 1
#line 721 "rx-decode.opc"
d5326 1
a5326 1
#line 737 "rx-decode.opc"
d5336 1
a5336 1
#line 737 "rx-decode.opc"
d5346 1
a5346 1
#line 761 "rx-decode.opc"
d5356 2
a5357 2
#line 761 "rx-decode.opc"
                ID(suntil); BWL(sz); F("--ZC");
d5371 2
a5372 2
#line 752 "rx-decode.opc"
                ID(scmpu); F("--ZC");
d5381 1
a5381 1
#line 764 "rx-decode.opc"
d5391 2
a5392 2
#line 764 "rx-decode.opc"
                ID(swhile); BWL(sz); F("--ZC");
d5406 1
a5406 1
#line 755 "rx-decode.opc"
d5416 1
a5416 1
#line 770 "rx-decode.opc"
d5426 1
a5426 1
#line 770 "rx-decode.opc"
d5444 1
a5444 1
#line 758 "rx-decode.opc"
d5454 1
a5454 1
#line 776 "rx-decode.opc"
d5464 2
a5465 2
#line 776 "rx-decode.opc"
                ID(rmpa); BWL(sz); F("OS--");
d5482 1
a5482 1
#line 767 "rx-decode.opc"
d5497 1
a5497 1
#line 818 "rx-decode.opc"
d5515 1
a5515 1
#line 945 "rx-decode.opc"
d5530 1
a5530 1
#line 948 "rx-decode.opc"
d5545 1
a5545 1
#line 960 "rx-decode.opc"
d5571 1
a5571 1
#line 921 "rx-decode.opc"
d5581 1
a5581 1
#line 921 "rx-decode.opc"
d5604 1
a5604 1
#line 918 "rx-decode.opc"
d5614 1
a5614 1
#line 918 "rx-decode.opc"
d5630 1
a5630 1
#line 312 "rx-decode.opc"
d5632 1
a5632 1
#line 312 "rx-decode.opc"
d5634 1
a5634 1
#line 312 "rx-decode.opc"
d5636 1
a5636 1
#line 312 "rx-decode.opc"
d5638 1
a5638 1
#line 312 "rx-decode.opc"
d5640 1
a5640 1
#line 312 "rx-decode.opc"
d5655 2
a5656 2
#line 312 "rx-decode.opc"
                ID(mov); sBWL(sz); DIs(dst, dsp*4+a*2+b, sz); SR(src); F("----");
d5733 1
a5733 1
#line 309 "rx-decode.opc"
d5735 1
a5735 1
#line 309 "rx-decode.opc"
d5737 1
a5737 1
#line 309 "rx-decode.opc"
d5739 1
a5739 1
#line 309 "rx-decode.opc"
d5741 1
a5741 1
#line 309 "rx-decode.opc"
d5743 1
a5743 1
#line 309 "rx-decode.opc"
d5758 2
a5759 2
#line 309 "rx-decode.opc"
                ID(mov); sBWL(sz); DR(dst); SIs(src, dsp*4+a*2+b, sz); F("----");
d6124 1
a6124 1
#line 332 "rx-decode.opc"
d6126 1
a6126 1
#line 332 "rx-decode.opc"
d6128 1
a6128 1
#line 332 "rx-decode.opc"
d6130 1
a6130 1
#line 332 "rx-decode.opc"
d6132 1
a6132 1
#line 332 "rx-decode.opc"
d6134 1
a6134 1
#line 332 "rx-decode.opc"
d6149 2
a6150 2
#line 332 "rx-decode.opc"
                ID(mov); uBWL(w); DR(dst); SIs(src, dsp*4+a*2+b, w); F("----");
d6299 1
a6299 1
#line 298 "rx-decode.opc"
d6301 1
a6301 1
#line 298 "rx-decode.opc"
d6303 1
a6303 1
#line 298 "rx-decode.opc"
d6305 1
a6305 1
#line 298 "rx-decode.opc"
d6307 1
a6307 1
#line 298 "rx-decode.opc"
d6321 2
a6322 2
#line 298 "rx-decode.opc"
                ID(mov); sBWL(sz); F("----");
d6767 1
a6767 1
#line 869 "rx-decode.opc"
d6769 1
a6769 1
#line 869 "rx-decode.opc"
d6771 1
a6771 1
#line 869 "rx-decode.opc"
d6783 2
a6784 2
#line 869 "rx-decode.opc"
                ID(bset); BWL(BSIZE); SC(bit); DD(sd, rdst, BSIZE); F("----");
d6792 1
a6792 1
#line 879 "rx-decode.opc"
d6794 1
a6794 1
#line 879 "rx-decode.opc"
d6796 1
a6796 1
#line 879 "rx-decode.opc"
d6808 2
a6809 2
#line 879 "rx-decode.opc"
                ID(bclr); BWL(BSIZE); SC(bit); DD(sd, rdst, BSIZE); F("----");
d6860 1
a6860 1
#line 889 "rx-decode.opc"
d6862 1
a6862 1
#line 889 "rx-decode.opc"
d6864 1
a6864 1
#line 889 "rx-decode.opc"
d6876 2
a6877 2
#line 889 "rx-decode.opc"
                ID(btst); BWL(BSIZE); S2C(bit); SD(sd, rdst, BSIZE); F("--ZC");
d6885 1
a6885 1
#line 357 "rx-decode.opc"
d6887 1
a6887 1
#line 357 "rx-decode.opc"
d6889 1
a6889 1
#line 357 "rx-decode.opc"
d6901 2
a6902 2
#line 357 "rx-decode.opc"
                ID(mov); BWL(sz); OP(0, RX_Operand_Predec, 0, 0); SD(ss, rsrc, sz); F("----");
d6962 1
a6962 1
#line 289 "rx-decode.opc"
d6964 1
a6964 1
#line 289 "rx-decode.opc"
d6966 1
a6966 1
#line 289 "rx-decode.opc"
d6968 1
a6968 1
#line 289 "rx-decode.opc"
d6981 2
a6982 2
#line 289 "rx-decode.opc"
                ID(mov); sBWL (sz); DD(sd, rdst, sz); SC(IMMex(im)); F("----");
d7026 1
a7026 1
#line 531 "rx-decode.opc"
d7028 1
a7028 1
#line 531 "rx-decode.opc"
d7039 2
a7040 2
#line 531 "rx-decode.opc"
                      ID(sbb); SR (rsrc); DR(rdst); F("OSZC");
d7054 1
a7054 1
#line 462 "rx-decode.opc"
d7056 1
a7056 1
#line 462 "rx-decode.opc"
d7067 2
a7068 2
#line 462 "rx-decode.opc"
                      ID(sub); DR(rdst); SC(0); S2R(rsrc); F("OSZC");
d7084 1
a7084 1
#line 471 "rx-decode.opc"
d7086 1
a7086 1
#line 471 "rx-decode.opc"
d7097 2
a7098 2
#line 471 "rx-decode.opc"
                      ID(adc); SR(rsrc); DR(rdst); F("OSZC");
d7111 1
a7111 1
#line 544 "rx-decode.opc"
d7113 1
a7113 1
#line 544 "rx-decode.opc"
d7124 2
a7125 2
#line 544 "rx-decode.opc"
                      ID(abs); DR(rdst); SR(rsrc); F("OSZ-");
d7142 1
a7142 1
#line 553 "rx-decode.opc"
d7144 1
a7144 1
#line 553 "rx-decode.opc"
d7146 1
a7146 1
#line 553 "rx-decode.opc"
d7158 1
a7158 1
#line 553 "rx-decode.opc"
d7200 1
a7200 1
#line 565 "rx-decode.opc"
d7202 1
a7202 1
#line 565 "rx-decode.opc"
d7204 1
a7204 1
#line 565 "rx-decode.opc"
d7216 1
a7216 1
#line 565 "rx-decode.opc"
d7258 1
a7258 1
#line 595 "rx-decode.opc"
d7260 1
a7260 1
#line 595 "rx-decode.opc"
d7262 1
a7262 1
#line 595 "rx-decode.opc"
d7274 1
a7274 1
#line 595 "rx-decode.opc"
d7316 1
a7316 1
#line 607 "rx-decode.opc"
d7318 1
a7318 1
#line 607 "rx-decode.opc"
d7320 1
a7320 1
#line 607 "rx-decode.opc"
d7332 1
a7332 1
#line 607 "rx-decode.opc"
d7374 1
a7374 1
#line 619 "rx-decode.opc"
d7376 1
a7376 1
#line 619 "rx-decode.opc"
d7378 1
a7378 1
#line 619 "rx-decode.opc"
d7390 2
a7391 2
#line 619 "rx-decode.opc"
                      ID(div); SP(ss, rsrc); DR(rdst); F("O---");
d7432 1
a7432 1
#line 631 "rx-decode.opc"
d7434 1
a7434 1
#line 631 "rx-decode.opc"
d7436 1
a7436 1
#line 631 "rx-decode.opc"
d7448 2
a7449 2
#line 631 "rx-decode.opc"
                      ID(divu); SP(ss, rsrc); DR(rdst); F("O---");
d7490 1
a7490 1
#line 450 "rx-decode.opc"
d7492 1
a7492 1
#line 450 "rx-decode.opc"
d7494 1
a7494 1
#line 450 "rx-decode.opc"
d7506 2
a7507 2
#line 450 "rx-decode.opc"
                      ID(and); SP(ss, rsrc); S2R(rdst); F("-SZ-");
d7548 1
a7548 1
#line 429 "rx-decode.opc"
d7550 1
a7550 1
#line 429 "rx-decode.opc"
d7552 1
a7552 1
#line 429 "rx-decode.opc"
d7564 2
a7565 2
#line 429 "rx-decode.opc"
                      ID(xor); SP(ss, rsrc); DR(rdst); F("-SZ-");
d7605 1
a7605 1
#line 441 "rx-decode.opc"
d7607 1
a7607 1
#line 441 "rx-decode.opc"
d7618 2
a7619 2
#line 441 "rx-decode.opc"
                      ID(xor); DR(rdst); SR(rsrc); S2C(~0); F("-SZ-");
d7636 1
a7636 1
#line 363 "rx-decode.opc"
d7638 1
a7638 1
#line 363 "rx-decode.opc"
d7640 1
a7640 1
#line 363 "rx-decode.opc"
d7652 1
a7652 1
#line 363 "rx-decode.opc"
d7694 1
a7694 1
#line 860 "rx-decode.opc"
d7696 1
a7696 1
#line 860 "rx-decode.opc"
d7698 1
a7698 1
#line 860 "rx-decode.opc"
d7710 2
a7711 2
#line 860 "rx-decode.opc"
                      ID(itof); DR (rdst); SP(sd, rsrc); F("-SZ-");
d7752 1
a7752 1
#line 872 "rx-decode.opc"
d7754 1
a7754 1
#line 872 "rx-decode.opc"
d7756 1
a7756 1
#line 872 "rx-decode.opc"
d7768 2
a7769 2
#line 872 "rx-decode.opc"
                      ID(bset); BWL(BSIZE); SR(rsrc); DD(sd, rdst, BSIZE); F("----");
d7810 1
a7810 1
#line 882 "rx-decode.opc"
d7812 1
a7812 1
#line 882 "rx-decode.opc"
d7814 1
a7814 1
#line 882 "rx-decode.opc"
d7826 2
a7827 2
#line 882 "rx-decode.opc"
                      ID(bclr); BWL(BSIZE); SR(rsrc); DD(sd, rdst, BSIZE); F("----");
d7868 1
a7868 1
#line 892 "rx-decode.opc"
d7870 1
a7870 1
#line 892 "rx-decode.opc"
d7872 1
a7872 1
#line 892 "rx-decode.opc"
d7884 2
a7885 2
#line 892 "rx-decode.opc"
                      ID(btst); BWL(BSIZE); S2R(rsrc); SD(sd, rdst, BSIZE); F("--ZC");
d7926 1
a7926 1
#line 902 "rx-decode.opc"
d7928 1
a7928 1
#line 902 "rx-decode.opc"
d7930 1
a7930 1
#line 902 "rx-decode.opc"
d7942 1
a7942 1
#line 902 "rx-decode.opc"
d7984 1
a7984 1
#line 839 "rx-decode.opc"
d7986 1
a7986 1
#line 839 "rx-decode.opc"
d7988 1
a7988 1
#line 839 "rx-decode.opc"
d8000 2
a8001 2
#line 839 "rx-decode.opc"
                      ID(fsub); DR(rdst); SD(sd, rsrc, LSIZE); F("-SZ-");
d8042 1
a8042 1
#line 833 "rx-decode.opc"
d8044 1
a8044 1
#line 833 "rx-decode.opc"
d8046 1
a8046 1
#line 833 "rx-decode.opc"
d8058 2
a8059 2
#line 833 "rx-decode.opc"
                      ID(fcmp); DR(rdst); SD(sd, rsrc, LSIZE); F("OSZ-");
d8100 1
a8100 1
#line 827 "rx-decode.opc"
d8102 1
a8102 1
#line 827 "rx-decode.opc"
d8104 1
a8104 1
#line 827 "rx-decode.opc"
d8116 2
a8117 2
#line 827 "rx-decode.opc"
                      ID(fadd); DR(rdst); SD(sd, rsrc, LSIZE); F("-SZ-");
d8158 1
a8158 1
#line 848 "rx-decode.opc"
d8160 1
a8160 1
#line 848 "rx-decode.opc"
d8162 1
a8162 1
#line 848 "rx-decode.opc"
d8174 2
a8175 2
#line 848 "rx-decode.opc"
                      ID(fmul); DR(rdst); SD(sd, rsrc, LSIZE); F("-SZ-");
d8216 1
a8216 1
#line 854 "rx-decode.opc"
d8218 1
a8218 1
#line 854 "rx-decode.opc"
d8220 1
a8220 1
#line 854 "rx-decode.opc"
d8232 2
a8233 2
#line 854 "rx-decode.opc"
                      ID(fdiv); DR(rdst); SD(sd, rsrc, LSIZE); F("-SZ-");
d8274 1
a8274 1
#line 842 "rx-decode.opc"
d8276 1
a8276 1
#line 842 "rx-decode.opc"
d8278 1
a8278 1
#line 842 "rx-decode.opc"
d8290 2
a8291 2
#line 842 "rx-decode.opc"
                      ID(ftoi); DR(rdst); SD(sd, rsrc, LSIZE); F("-SZ-");
d8332 1
a8332 1
#line 857 "rx-decode.opc"
d8334 1
a8334 1
#line 857 "rx-decode.opc"
d8336 1
a8336 1
#line 857 "rx-decode.opc"
d8348 2
a8349 2
#line 857 "rx-decode.opc"
                      ID(round); DR(rdst); SD(sd, rsrc, LSIZE); F("-SZ-");
d8390 1
a8390 1
#line 966 "rx-decode.opc"
d8392 1
a8392 1
#line 966 "rx-decode.opc"
d8394 1
a8394 1
#line 966 "rx-decode.opc"
d8396 1
a8396 1
#line 966 "rx-decode.opc"
d8409 1
a8409 1
#line 966 "rx-decode.opc"
d8537 1
a8537 1
#line 909 "rx-decode.opc"
d8539 1
a8539 1
#line 909 "rx-decode.opc"
d8541 1
a8541 1
#line 909 "rx-decode.opc"
d8543 1
a8543 1
#line 909 "rx-decode.opc"
d8556 1
a8556 1
#line 909 "rx-decode.opc"
d8565 1
a8565 1
#line 899 "rx-decode.opc"
d8567 1
a8567 1
#line 899 "rx-decode.opc"
d8569 1
a8569 1
#line 899 "rx-decode.opc"
d8581 1
a8581 1
#line 899 "rx-decode.opc"
d9408 1
a9408 1
#line 782 "rx-decode.opc"
d9410 1
a9410 1
#line 782 "rx-decode.opc"
d9421 2
a9422 2
#line 782 "rx-decode.opc"
                      ID(mulhi); SR(srca); S2R(srcb); F("----");
d9435 1
a9435 1
#line 785 "rx-decode.opc"
d9437 1
a9437 1
#line 785 "rx-decode.opc"
d9448 2
a9449 2
#line 785 "rx-decode.opc"
                      ID(mullo); SR(srca); S2R(srcb); F("----");
d9462 1
a9462 1
#line 788 "rx-decode.opc"
d9464 1
a9464 1
#line 788 "rx-decode.opc"
d9475 2
a9476 2
#line 788 "rx-decode.opc"
                      ID(machi); SR(srca); S2R(srcb); F("----");
d9489 1
a9489 1
#line 791 "rx-decode.opc"
d9491 1
a9491 1
#line 791 "rx-decode.opc"
d9502 2
a9503 2
#line 791 "rx-decode.opc"
                      ID(maclo); SR(srca); S2R(srcb); F("----");
d9516 1
a9516 1
#line 794 "rx-decode.opc"
d9526 2
a9527 2
#line 794 "rx-decode.opc"
                      ID(mvtachi); SR(rsrc); F("----");
d9534 1
a9534 1
#line 797 "rx-decode.opc"
d9544 2
a9545 2
#line 797 "rx-decode.opc"
                      ID(mvtaclo); SR(rsrc); F("----");
d9559 1
a9559 1
#line 809 "rx-decode.opc"
d9569 2
a9570 2
#line 809 "rx-decode.opc"
                      ID(racw); SC(i+1); F("----");
d9587 1
a9587 1
#line 800 "rx-decode.opc"
d9597 2
a9598 2
#line 800 "rx-decode.opc"
                      ID(mvfachi); DR(rdst); F("----");
d9605 1
a9605 1
#line 806 "rx-decode.opc"
d9615 2
a9616 2
#line 806 "rx-decode.opc"
                      ID(mvfaclo); DR(rdst); F("----");
d9623 1
a9623 1
#line 803 "rx-decode.opc"
d9633 2
a9634 2
#line 803 "rx-decode.opc"
                      ID(mvfacmi); DR(rdst); F("----");
d9649 1
a9649 1
#line 324 "rx-decode.opc"
d9651 1
a9651 1
#line 324 "rx-decode.opc"
d9653 1
a9653 1
#line 324 "rx-decode.opc"
d9655 1
a9655 1
#line 324 "rx-decode.opc"
d9668 2
a9669 2
#line 324 "rx-decode.opc"
                      ID(mov); sBWL (sz); SR(rsrc); F("----");
d9729 1
a9729 1
#line 328 "rx-decode.opc"
d9731 1
a9731 1
#line 328 "rx-decode.opc"
d9733 1
a9733 1
#line 328 "rx-decode.opc"
d9735 1
a9735 1
#line 328 "rx-decode.opc"
d9748 2
a9749 2
#line 328 "rx-decode.opc"
                      ID(mov); sBWL (sz); DR(rdst); F("----");
d9809 1
a9809 1
#line 338 "rx-decode.opc"
d9811 1
a9811 1
#line 338 "rx-decode.opc"
d9813 1
a9813 1
#line 338 "rx-decode.opc"
d9815 1
a9815 1
#line 338 "rx-decode.opc"
d9828 2
a9829 2
#line 338 "rx-decode.opc"
                      ID(mov); uBWL (sz); DR(rdst); F("----");
d9891 1
a9891 1
#line 663 "rx-decode.opc"
d9893 1
a9893 1
#line 663 "rx-decode.opc"
d9904 2
a9905 2
#line 663 "rx-decode.opc"
                      ID(shlr); S2R(rsrc); SR(rdst); DR(rdst); F("-SZC");
d9918 1
a9918 1
#line 653 "rx-decode.opc"
d9920 1
a9920 1
#line 653 "rx-decode.opc"
d9931 2
a9932 2
#line 653 "rx-decode.opc"
                      ID(shar); S2R(rsrc); SR(rdst); DR(rdst); F("0SZC");
d9945 1
a9945 1
#line 643 "rx-decode.opc"
d9947 1
a9947 1
#line 643 "rx-decode.opc"
d9958 2
a9959 2
#line 643 "rx-decode.opc"
                      ID(shll); S2R(rsrc); SR(rdst); DR(rdst); F("OSZC");
d9972 1
a9972 1
#line 687 "rx-decode.opc"
d9974 1
a9974 1
#line 687 "rx-decode.opc"
d9985 2
a9986 2
#line 687 "rx-decode.opc"
                      ID(rotr); SR(rsrc); DR(rdst); F("-SZC");
d9999 1
a9999 1
#line 690 "rx-decode.opc"
d10001 1
a10001 1
#line 690 "rx-decode.opc"
d10012 1
a10012 1
#line 690 "rx-decode.opc"
d10026 1
a10026 1
#line 681 "rx-decode.opc"
d10028 1
a10028 1
#line 681 "rx-decode.opc"
d10039 2
a10040 2
#line 681 "rx-decode.opc"
                      ID(rotl); SR(rsrc); DR(rdst); F("-SZC");
d10053 1
a10053 1
#line 693 "rx-decode.opc"
d10055 1
a10055 1
#line 693 "rx-decode.opc"
d10066 1
a10066 1
#line 693 "rx-decode.opc"
d10084 1
a10084 1
#line 936 "rx-decode.opc"
d10086 1
a10086 1
#line 936 "rx-decode.opc"
d10088 1
a10088 1
#line 936 "rx-decode.opc"
d10100 1
a10100 1
#line 936 "rx-decode.opc"
d10124 1
a10124 1
#line 939 "rx-decode.opc"
d10126 1
a10126 1
#line 939 "rx-decode.opc"
d10128 1
a10128 1
#line 939 "rx-decode.opc"
d10140 1
a10140 1
#line 939 "rx-decode.opc"
d10167 1
a10167 1
#line 684 "rx-decode.opc"
d10169 1
a10169 1
#line 684 "rx-decode.opc"
d10171 1
a10171 1
#line 684 "rx-decode.opc"
d10183 2
a10184 2
#line 684 "rx-decode.opc"
                      ID(rotr); SC(i*16+mmmm); DR(rdst); F("-SZC");
d10207 1
a10207 1
#line 678 "rx-decode.opc"
d10209 1
a10209 1
#line 678 "rx-decode.opc"
d10211 1
a10211 1
#line 678 "rx-decode.opc"
d10223 2
a10224 2
#line 678 "rx-decode.opc"
                      ID(rotl); SC(i*16+mmmm); DR(rdst); F("-SZC");
d10247 1
a10247 1
#line 468 "rx-decode.opc"
d10249 1
a10249 1
#line 468 "rx-decode.opc"
d10260 2
a10261 2
#line 468 "rx-decode.opc"
                      ID(adc); SC(IMMex(im)); DR(rdst); F("OSZC");
d10269 1
a10269 1
#line 550 "rx-decode.opc"
d10271 1
a10271 1
#line 550 "rx-decode.opc"
d10282 1
a10282 1
#line 550 "rx-decode.opc"
d10291 1
a10291 1
#line 562 "rx-decode.opc"
d10293 1
a10293 1
#line 562 "rx-decode.opc"
d10304 1
a10304 1
#line 562 "rx-decode.opc"
d10313 1
a10313 1
#line 592 "rx-decode.opc"
d10315 1
a10315 1
#line 592 "rx-decode.opc"
d10326 1
a10326 1
#line 592 "rx-decode.opc"
d10335 1
a10335 1
#line 604 "rx-decode.opc"
d10337 1
a10337 1
#line 604 "rx-decode.opc"
d10348 1
a10348 1
#line 604 "rx-decode.opc"
d10357 1
a10357 1
#line 616 "rx-decode.opc"
d10359 1
a10359 1
#line 616 "rx-decode.opc"
d10370 2
a10371 2
#line 616 "rx-decode.opc"
                      ID(div); DR(rdst); SC(IMMex(im)); F("O---");
d10379 1
a10379 1
#line 628 "rx-decode.opc"
d10381 1
a10381 1
#line 628 "rx-decode.opc"
d10392 2
a10393 2
#line 628 "rx-decode.opc"
                      ID(divu); DR(rdst); SC(IMMex(im)); F("O---");
d10401 1
a10401 1
#line 447 "rx-decode.opc"
d10403 1
a10403 1
#line 447 "rx-decode.opc"
d10414 2
a10415 2
#line 447 "rx-decode.opc"
                      ID(and); SC(IMMex(im)); S2R(rdst); F("-SZ-");
d10423 1
a10423 1
#line 426 "rx-decode.opc"
d10425 1
a10425 1
#line 426 "rx-decode.opc"
d10436 2
a10437 2
#line 426 "rx-decode.opc"
                      ID(xor); SC(IMMex(im)); DR(rdst); F("-SZ-");
d10445 1
a10445 1
#line 372 "rx-decode.opc"
d10447 1
a10447 1
#line 372 "rx-decode.opc"
d10458 1
a10458 1
#line 372 "rx-decode.opc"
d10467 1
a10467 1
#line 375 "rx-decode.opc"
d10469 1
a10469 1
#line 375 "rx-decode.opc"
d10480 1
a10480 1
#line 375 "rx-decode.opc"
d10498 1
a10498 1
#line 836 "rx-decode.opc"
d10508 2
a10509 2
#line 836 "rx-decode.opc"
                      ID(fsub); DR(rdst); SC(IMM(0)); F("-SZ-");
d10516 1
a10516 1
#line 830 "rx-decode.opc"
d10526 2
a10527 2
#line 830 "rx-decode.opc"
                      ID(fcmp); DR(rdst); SC(IMM(0)); F("OSZ-");
d10534 1
a10534 1
#line 824 "rx-decode.opc"
d10544 2
a10545 2
#line 824 "rx-decode.opc"
                      ID(fadd); DR(rdst); SC(IMM(0)); F("-SZ-");
d10552 1
a10552 1
#line 845 "rx-decode.opc"
d10562 2
a10563 2
#line 845 "rx-decode.opc"
                      ID(fmul); DR(rdst); SC(IMM(0)); F("-SZ-");
d10570 1
a10570 1
#line 851 "rx-decode.opc"
d10580 2
a10581 2
#line 851 "rx-decode.opc"
                      ID(fdiv); DR(rdst); SC(IMM(0)); F("-SZ-");
d10596 1
a10596 1
#line 933 "rx-decode.opc"
d10598 1
a10598 1
#line 933 "rx-decode.opc"
d10609 1
a10609 1
#line 933 "rx-decode.opc"
d10775 1
a10775 1
#line 666 "rx-decode.opc"
d10777 1
a10777 1
#line 666 "rx-decode.opc"
d10779 1
a10779 1
#line 666 "rx-decode.opc"
d10791 2
a10792 2
#line 666 "rx-decode.opc"
                      ID(shlr); S2C(immmm); SR(rsrc); DR(rdst); F("-SZC");
d11088 1
a11088 1
#line 656 "rx-decode.opc"
d11090 1
a11090 1
#line 656 "rx-decode.opc"
d11092 1
a11092 1
#line 656 "rx-decode.opc"
d11104 2
a11105 2
#line 656 "rx-decode.opc"
                      ID(shar); S2C(immmm); SR(rsrc); DR(rdst); F("0SZC");
d11399 1
a11399 1
#line 646 "rx-decode.opc"
d11401 1
a11401 1
#line 646 "rx-decode.opc"
d11403 1
a11403 1
#line 646 "rx-decode.opc"
d11415 2
a11416 2
#line 646 "rx-decode.opc"
                      ID(shll); S2C(immmm); SR(rsrc); DR(rdst); F("OSZC");
d11724 1
a11724 1
#line 912 "rx-decode.opc"
d11726 1
a11726 1
#line 912 "rx-decode.opc"
d11728 1
a11728 1
#line 912 "rx-decode.opc"
d11740 1
a11740 1
#line 912 "rx-decode.opc"
d11752 1
a11752 1
#line 905 "rx-decode.opc"
d11754 1
a11754 1
#line 905 "rx-decode.opc"
d11765 1
a11765 1
#line 905 "rx-decode.opc"
d12594 1
a12594 1
#line 318 "rx-decode.opc"
d12596 1
a12596 1
#line 318 "rx-decode.opc"
d12598 1
a12598 1
#line 318 "rx-decode.opc"
d12600 1
a12600 1
#line 318 "rx-decode.opc"
d12613 2
a12614 2
#line 318 "rx-decode.opc"
                      ID(movbir); sBWL(sz); DR(rdst); SR(isrc); S2R(bsrc); F("----");
d13051 1
a13051 1
#line 315 "rx-decode.opc"
d13053 1
a13053 1
#line 315 "rx-decode.opc"
d13055 1
a13055 1
#line 315 "rx-decode.opc"
d13057 1
a13057 1
#line 315 "rx-decode.opc"
d13070 2
a13071 2
#line 315 "rx-decode.opc"
                      ID(movbi); sBWL(sz); DR(rdst); SR(isrc); S2R(bsrc); F("----");
d13508 1
a13508 1
#line 321 "rx-decode.opc"
d13510 1
a13510 1
#line 321 "rx-decode.opc"
d13512 1
a13512 1
#line 321 "rx-decode.opc"
d13514 1
a13514 1
#line 321 "rx-decode.opc"
d13527 2
a13528 2
#line 321 "rx-decode.opc"
                      ID(movbi); uBWL(sz); DR(rdst); SR(isrc); S2R(bsrc); F("----");
d13972 1
a13972 1
#line 525 "rx-decode.opc"
d13974 1
a13974 1
#line 525 "rx-decode.opc"
d13976 1
a13976 1
#line 525 "rx-decode.opc"
d13988 2
a13989 2
#line 525 "rx-decode.opc"
                      ID(sub); DR(rdst); SR(srcb); S2R(srca); F("OSZC");
d14141 1
a14141 1
#line 492 "rx-decode.opc"
d14143 1
a14143 1
#line 492 "rx-decode.opc"
d14145 1
a14145 1
#line 492 "rx-decode.opc"
d14157 2
a14158 2
#line 492 "rx-decode.opc"
                      ID(add); DR(rdst); SR(srcb); S2R(srca); F("OSZC");
d14310 1
a14310 1
#line 586 "rx-decode.opc"
d14312 1
a14312 1
#line 586 "rx-decode.opc"
d14314 1
a14314 1
#line 586 "rx-decode.opc"
d14326 2
a14327 2
#line 586 "rx-decode.opc"
                      ID(mul); DR(rdst); SR(srcb); S2R(srca); F("----");
d14479 1
a14479 1
#line 402 "rx-decode.opc"
d14481 1
a14481 1
#line 402 "rx-decode.opc"
d14483 1
a14483 1
#line 402 "rx-decode.opc"
d14495 2
a14496 2
#line 402 "rx-decode.opc"
                      ID(and); DR(rdst); SR(srcb); S2R(srca); F("-SZ-");
d14648 1
a14648 1
#line 420 "rx-decode.opc"
d14650 1
a14650 1
#line 420 "rx-decode.opc"
d14652 1
a14652 1
#line 420 "rx-decode.opc"
d14664 2
a14665 2
#line 420 "rx-decode.opc"
                      ID(or); DR(rdst); SR(srcb); S2R(srca); F("-SZ-");
d14814 1
a14814 1
#line 969 "rx-decode.opc"
@


1.3
log
@* rx-decode.opc (decode_opcode): Fix flags for MUL, SUNTIL, and SWHILE.
* rx-decode.c: Regenerated.
@
text
@d298 1
a298 1
#line 957 "rx-decode.opc"
d313 1
a313 1
#line 960 "rx-decode.opc"
d4841 1
a4841 1
#line 963 "rx-decode.opc"
d4846 25
d5192 1
a5192 1
#line 927 "rx-decode.opc"
d5202 1
a5202 1
#line 927 "rx-decode.opc"
d5211 1
a5211 1
#line 924 "rx-decode.opc"
d5221 1
a5221 1
#line 924 "rx-decode.opc"
d5540 1
a5540 1
#line 951 "rx-decode.opc"
d5555 1
a5555 1
#line 954 "rx-decode.opc"
d5570 1
a5570 1
#line 966 "rx-decode.opc"
d8415 1
a8415 1
#line 972 "rx-decode.opc"
d8417 1
a8417 1
#line 972 "rx-decode.opc"
d8419 1
a8419 1
#line 972 "rx-decode.opc"
d8421 1
a8421 1
#line 972 "rx-decode.opc"
d8434 1
a8434 1
#line 972 "rx-decode.opc"
d10109 1
a10109 1
#line 933 "rx-decode.opc"
d10111 1
a10111 1
#line 933 "rx-decode.opc"
d10113 1
a10113 1
#line 933 "rx-decode.opc"
d10125 1
a10125 1
#line 933 "rx-decode.opc"
d10149 1
a10149 1
#line 936 "rx-decode.opc"
d10151 1
a10151 1
#line 936 "rx-decode.opc"
d10153 1
a10153 1
#line 936 "rx-decode.opc"
d10165 1
a10165 1
#line 936 "rx-decode.opc"
d10168 3
d10621 1
a10621 1
#line 930 "rx-decode.opc"
d10623 1
a10623 1
#line 930 "rx-decode.opc"
d10634 1
a10634 1
#line 930 "rx-decode.opc"
d14839 1
a14839 1
#line 975 "rx-decode.opc"
@


1.2
log
@        * opc2c.c: Include "libiberty.h" and <errno.h>.
        (orig_filename): Constify.
        (dump_lines): Fix line number directive.
        (main): Set orig_filename to basename of input file.  Use
        xstrerror.

        * Makefile.am (rx-dis.lo): Remove explicit dependencies.
        ($(srcdir)/rx-decode.c): Use @@MAINT@@.  Use $(EXEEXT_FOR_BUILD)
        instead of $(EXEEXT).
        (opc2c$(EXEEXT_FOR_BUILD)): Renamed from opc2c$(EXEEXT) and use
        $(LINK_FOR_BUILD).  Link with libiberty.
        (MOSTLYCLEANFILES): Add opc2c$(EXEEXT_FOR_BUILD).
        (MAINTAINERCLEANFILES): Add $(srcdir)/rx-decode.c.
        * Makefile.in: Regenerated.
        * rx-decode.c: Regenerated.
@
text
@d1 1
a1 1
#line 2 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d298 1
a298 1
#line 957 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d313 1
a313 1
#line 960 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d328 1
a328 1
#line 740 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d346 1
a346 1
#line 746 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d364 1
a364 1
#line 718 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d379 1
a379 1
#line 734 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d396 1
a396 1
#line 521 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d398 1
a398 1
#line 521 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d400 1
a400 1
#line 521 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d402 1
a402 1
#line 521 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d415 1
a415 1
#line 522 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d457 1
a457 1
#line 509 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d459 1
a459 1
#line 509 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d461 1
a461 1
#line 509 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d463 1
a463 1
#line 509 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d476 1
a476 1
#line 510 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d521 1
a521 1
#line 485 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d523 1
a523 1
#line 485 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d525 1
a525 1
#line 485 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d527 1
a527 1
#line 485 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d540 1
a540 1
#line 486 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d582 1
a582 1
#line 582 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d584 1
a584 1
#line 582 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d586 1
a586 1
#line 582 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d588 1
a588 1
#line 582 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d601 2
a602 2
#line 583 "/work/sources/gcc/current/opcodes/rx-decode.opc"
                      ID(mul); SPm(ss, rsrc, mx); DR(rdst); F("O---");
d643 1
a643 1
#line 398 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d645 1
a645 1
#line 398 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d647 1
a647 1
#line 398 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d649 1
a649 1
#line 398 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d662 1
a662 1
#line 399 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d704 1
a704 1
#line 416 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d706 1
a706 1
#line 416 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d708 1
a708 1
#line 416 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d710 1
a710 1
#line 416 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d723 1
a723 1
#line 417 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d769 1
a769 1
#line 534 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d771 1
a771 1
#line 534 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d773 1
a773 1
#line 534 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d775 1
a775 1
#line 534 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d788 1
a788 1
#line 535 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d806 1
a806 1
#line 555 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d808 1
a808 1
#line 555 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d810 1
a810 1
#line 555 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d812 1
a812 1
#line 555 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d825 1
a825 1
#line 556 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d843 1
a843 1
#line 567 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d845 1
a845 1
#line 567 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d847 1
a847 1
#line 567 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d849 1
a849 1
#line 567 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d862 1
a862 1
#line 568 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d880 1
a880 1
#line 597 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d882 1
a882 1
#line 597 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d884 1
a884 1
#line 597 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d886 1
a886 1
#line 597 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d899 1
a899 1
#line 598 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d917 1
a917 1
#line 609 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d919 1
a919 1
#line 609 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d921 1
a921 1
#line 609 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d923 1
a923 1
#line 609 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d936 1
a936 1
#line 610 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d954 1
a954 1
#line 621 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d956 1
a956 1
#line 621 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d958 1
a958 1
#line 621 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d960 1
a960 1
#line 621 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d973 1
a973 1
#line 622 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d991 1
a991 1
#line 633 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d993 1
a993 1
#line 633 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d995 1
a995 1
#line 633 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d997 1
a997 1
#line 633 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d1010 1
a1010 1
#line 634 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d1028 1
a1028 1
#line 452 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d1030 1
a1030 1
#line 452 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d1032 1
a1032 1
#line 452 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d1034 1
a1034 1
#line 452 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d1047 1
a1047 1
#line 453 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d1065 1
a1065 1
#line 431 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d1067 1
a1067 1
#line 431 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d1069 1
a1069 1
#line 431 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d1071 1
a1071 1
#line 431 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d1084 1
a1084 1
#line 432 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d1102 1
a1102 1
#line 365 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d1104 1
a1104 1
#line 365 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d1106 1
a1106 1
#line 365 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d1108 1
a1108 1
#line 365 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d1121 1
a1121 1
#line 366 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d1139 1
a1139 1
#line 862 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d1141 1
a1141 1
#line 862 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d1143 1
a1143 1
#line 862 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d1145 1
a1145 1
#line 862 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d1158 1
a1158 1
#line 863 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d2366 1
a2366 1
#line 473 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d2368 1
a2368 1
#line 473 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d2370 1
a2370 1
#line 473 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d2382 1
a2382 1
#line 474 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3483 1
a3483 1
#line 708 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3493 1
a3493 1
#line 709 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3516 1
a3516 1
#line 698 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3518 1
a3518 1
#line 698 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3529 1
a3529 1
#line 699 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3551 1
a3551 1
#line 701 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3561 1
a3561 1
#line 702 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3576 1
a3576 1
#line 712 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3591 1
a3591 1
#line 715 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3606 1
a3606 1
#line 731 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3615 1
a3615 1
#line 704 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3625 1
a3625 1
#line 705 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3639 1
a3639 1
#line 294 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3641 1
a3641 1
#line 294 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3643 1
a3643 1
#line 294 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3645 1
a3645 1
#line 294 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3658 1
a3658 1
#line 295 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3690 1
a3690 1
#line 383 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3692 1
a3692 1
#line 383 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3703 1
a3703 1
#line 384 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3721 1
a3721 1
#line 518 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3723 1
a3723 1
#line 518 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3725 1
a3725 1
#line 518 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3737 1
a3737 1
#line 519 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3779 1
a3779 1
#line 506 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3781 1
a3781 1
#line 506 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3783 1
a3783 1
#line 506 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3795 1
a3795 1
#line 507 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3837 1
a3837 1
#line 482 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3839 1
a3839 1
#line 482 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3841 1
a3841 1
#line 482 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3853 1
a3853 1
#line 483 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3895 1
a3895 1
#line 579 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3897 1
a3897 1
#line 579 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3899 1
a3899 1
#line 579 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3911 2
a3912 2
#line 580 "/work/sources/gcc/current/opcodes/rx-decode.opc"
                ID(mul); SP(ss, rsrc); DR(rdst); F("O---");
d3953 1
a3953 1
#line 395 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3955 1
a3955 1
#line 395 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3957 1
a3957 1
#line 395 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d3969 1
a3969 1
#line 396 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4011 1
a4011 1
#line 413 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4013 1
a4013 1
#line 413 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4015 1
a4015 1
#line 413 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4027 1
a4027 1
#line 414 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4069 1
a4069 1
#line 334 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4071 1
a4071 1
#line 334 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4073 1
a4073 1
#line 334 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4075 1
a4075 1
#line 334 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4088 1
a4088 1
#line 335 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4165 1
a4165 1
#line 515 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4167 1
a4167 1
#line 515 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4178 1
a4178 1
#line 516 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4192 1
a4192 1
#line 497 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4194 1
a4194 1
#line 497 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4205 1
a4205 1
#line 498 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4219 1
a4219 1
#line 479 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4221 1
a4221 1
#line 479 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4232 1
a4232 1
#line 480 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4246 1
a4246 1
#line 573 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4248 1
a4248 1
#line 573 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4259 2
a4260 2
#line 574 "/work/sources/gcc/current/opcodes/rx-decode.opc"
                ID(mul); DR(rdst); SC(immm); F("O---");
d4273 1
a4273 1
#line 389 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4275 1
a4275 1
#line 389 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4286 1
a4286 1
#line 390 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4300 1
a4300 1
#line 407 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4302 1
a4302 1
#line 407 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4313 1
a4313 1
#line 408 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4327 1
a4327 1
#line 291 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4329 1
a4329 1
#line 291 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4340 1
a4340 1
#line 292 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4357 1
a4357 1
#line 381 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4370 1
a4370 1
#line 659 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4372 1
a4372 1
#line 659 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4374 1
a4374 1
#line 659 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4386 1
a4386 1
#line 660 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4410 1
a4410 1
#line 649 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4412 1
a4412 1
#line 649 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4414 1
a4414 1
#line 649 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4426 1
a4426 1
#line 650 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4450 1
a4450 1
#line 639 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4452 1
a4452 1
#line 639 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4454 1
a4454 1
#line 639 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4466 1
a4466 1
#line 640 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4489 1
a4489 1
#line 347 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4491 1
a4491 1
#line 347 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4502 1
a4502 1
#line 348 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4516 1
a4516 1
#line 344 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4518 1
a4518 1
#line 344 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4529 1
a4529 1
#line 345 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4544 1
a4544 1
#line 488 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4546 1
a4546 1
#line 488 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4548 1
a4548 1
#line 488 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4560 1
a4560 1
#line 489 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4602 1
a4602 1
#line 500 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4604 1
a4604 1
#line 500 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4615 1
a4615 1
#line 501 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4624 1
a4624 1
#line 576 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4626 1
a4626 1
#line 576 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4637 2
a4638 2
#line 577 "/work/sources/gcc/current/opcodes/rx-decode.opc"
                ID(mul); DR(rdst); SC(IMMex(im)); F("O---");
d4646 1
a4646 1
#line 392 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4648 1
a4648 1
#line 392 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4659 1
a4659 1
#line 393 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4668 1
a4668 1
#line 410 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4670 1
a4670 1
#line 410 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4681 1
a4681 1
#line 411 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4783 1
a4783 1
#line 285 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4793 1
a4793 1
#line 286 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4816 1
a4816 1
#line 503 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4826 1
a4826 1
#line 504 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4841 1
a4841 1
#line 963 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4895 1
a4895 1
#line 874 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4897 1
a4897 1
#line 874 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4899 1
a4899 1
#line 874 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4911 1
a4911 1
#line 875 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4936 1
a4936 1
#line 884 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4938 1
a4938 1
#line 884 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4940 1
a4940 1
#line 884 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4952 1
a4952 1
#line 885 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4977 1
a4977 1
#line 894 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4979 1
a4979 1
#line 894 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4981 1
a4981 1
#line 894 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d4993 1
a4993 1
#line 895 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5017 1
a5017 1
#line 437 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5027 1
a5027 1
#line 438 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5035 1
a5035 1
#line 458 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5045 1
a5045 1
#line 459 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5053 1
a5053 1
#line 540 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5063 1
a5063 1
#line 541 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5071 1
a5071 1
#line 814 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5081 1
a5081 1
#line 815 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5089 1
a5089 1
#line 674 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5099 1
a5099 1
#line 675 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5107 1
a5107 1
#line 671 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5117 1
a5117 1
#line 672 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5127 1
a5127 1
#line 353 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5129 1
a5129 1
#line 353 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5140 1
a5140 1
#line 354 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5148 1
a5148 1
#line 350 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5158 1
a5158 1
#line 351 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5167 1
a5167 1
#line 926 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5177 1
a5177 1
#line 927 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5186 1
a5186 1
#line 923 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5196 1
a5196 1
#line 924 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5226 1
a5226 1
#line 724 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5236 1
a5236 1
#line 725 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5259 1
a5259 1
#line 727 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5269 1
a5269 1
#line 728 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5292 1
a5292 1
#line 720 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5302 1
a5302 1
#line 721 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5326 1
a5326 1
#line 736 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5336 1
a5336 1
#line 737 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5346 1
a5346 1
#line 760 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5356 2
a5357 2
#line 761 "/work/sources/gcc/current/opcodes/rx-decode.opc"
                ID(suntil); BWL(sz); F("OSZC");
d5371 1
a5371 1
#line 752 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5381 1
a5381 1
#line 763 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5391 2
a5392 2
#line 764 "/work/sources/gcc/current/opcodes/rx-decode.opc"
                ID(swhile); BWL(sz); F("OSZC");
d5406 1
a5406 1
#line 755 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5416 1
a5416 1
#line 769 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5426 1
a5426 1
#line 770 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5444 1
a5444 1
#line 758 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5454 1
a5454 1
#line 775 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5464 1
a5464 1
#line 776 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5482 1
a5482 1
#line 767 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5497 1
a5497 1
#line 818 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5515 1
a5515 1
#line 951 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5530 1
a5530 1
#line 954 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5545 1
a5545 1
#line 966 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5571 1
a5571 1
#line 920 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5581 1
a5581 1
#line 921 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5604 1
a5604 1
#line 917 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5614 1
a5614 1
#line 918 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5630 1
a5630 1
#line 311 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5632 1
a5632 1
#line 311 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5634 1
a5634 1
#line 311 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5636 1
a5636 1
#line 311 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5638 1
a5638 1
#line 311 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5640 1
a5640 1
#line 311 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5655 1
a5655 1
#line 312 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5733 1
a5733 1
#line 308 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5735 1
a5735 1
#line 308 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5737 1
a5737 1
#line 308 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5739 1
a5739 1
#line 308 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5741 1
a5741 1
#line 308 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5743 1
a5743 1
#line 308 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d5758 1
a5758 1
#line 309 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d6124 1
a6124 1
#line 331 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d6126 1
a6126 1
#line 331 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d6128 1
a6128 1
#line 331 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d6130 1
a6130 1
#line 331 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d6132 1
a6132 1
#line 331 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d6134 1
a6134 1
#line 331 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d6149 1
a6149 1
#line 332 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d6299 1
a6299 1
#line 297 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d6301 1
a6301 1
#line 297 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d6303 1
a6303 1
#line 297 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d6305 1
a6305 1
#line 297 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d6307 1
a6307 1
#line 297 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d6321 1
a6321 1
#line 298 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d6767 1
a6767 1
#line 868 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d6769 1
a6769 1
#line 868 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d6771 1
a6771 1
#line 868 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d6783 1
a6783 1
#line 869 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d6792 1
a6792 1
#line 878 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d6794 1
a6794 1
#line 878 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d6796 1
a6796 1
#line 878 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d6808 1
a6808 1
#line 879 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d6860 1
a6860 1
#line 888 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d6862 1
a6862 1
#line 888 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d6864 1
a6864 1
#line 888 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d6876 1
a6876 1
#line 889 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d6885 1
a6885 1
#line 356 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d6887 1
a6887 1
#line 356 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d6889 1
a6889 1
#line 356 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d6901 1
a6901 1
#line 357 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d6962 1
a6962 1
#line 288 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d6964 1
a6964 1
#line 288 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d6966 1
a6966 1
#line 288 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d6968 1
a6968 1
#line 288 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d6981 1
a6981 1
#line 289 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7026 1
a7026 1
#line 530 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7028 1
a7028 1
#line 530 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7039 1
a7039 1
#line 531 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7054 1
a7054 1
#line 461 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7056 1
a7056 1
#line 461 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7067 1
a7067 1
#line 462 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7084 1
a7084 1
#line 470 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7086 1
a7086 1
#line 470 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7097 1
a7097 1
#line 471 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7111 1
a7111 1
#line 543 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7113 1
a7113 1
#line 543 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7124 1
a7124 1
#line 544 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7142 1
a7142 1
#line 552 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7144 1
a7144 1
#line 552 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7146 1
a7146 1
#line 552 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7158 1
a7158 1
#line 553 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7200 1
a7200 1
#line 564 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7202 1
a7202 1
#line 564 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7204 1
a7204 1
#line 564 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7216 1
a7216 1
#line 565 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7258 1
a7258 1
#line 594 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7260 1
a7260 1
#line 594 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7262 1
a7262 1
#line 594 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7274 1
a7274 1
#line 595 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7316 1
a7316 1
#line 606 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7318 1
a7318 1
#line 606 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7320 1
a7320 1
#line 606 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7332 1
a7332 1
#line 607 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7374 1
a7374 1
#line 618 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7376 1
a7376 1
#line 618 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7378 1
a7378 1
#line 618 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7390 1
a7390 1
#line 619 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7432 1
a7432 1
#line 630 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7434 1
a7434 1
#line 630 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7436 1
a7436 1
#line 630 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7448 1
a7448 1
#line 631 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7490 1
a7490 1
#line 449 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7492 1
a7492 1
#line 449 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7494 1
a7494 1
#line 449 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7506 1
a7506 1
#line 450 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7548 1
a7548 1
#line 428 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7550 1
a7550 1
#line 428 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7552 1
a7552 1
#line 428 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7564 1
a7564 1
#line 429 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7605 1
a7605 1
#line 440 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7607 1
a7607 1
#line 440 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7618 1
a7618 1
#line 441 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7636 1
a7636 1
#line 362 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7638 1
a7638 1
#line 362 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7640 1
a7640 1
#line 362 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7652 1
a7652 1
#line 363 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7694 1
a7694 1
#line 859 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7696 1
a7696 1
#line 859 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7698 1
a7698 1
#line 859 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7710 1
a7710 1
#line 860 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7752 1
a7752 1
#line 871 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7754 1
a7754 1
#line 871 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7756 1
a7756 1
#line 871 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7768 1
a7768 1
#line 872 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7810 1
a7810 1
#line 881 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7812 1
a7812 1
#line 881 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7814 1
a7814 1
#line 881 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7826 1
a7826 1
#line 882 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7868 1
a7868 1
#line 891 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7870 1
a7870 1
#line 891 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7872 1
a7872 1
#line 891 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7884 1
a7884 1
#line 892 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7926 1
a7926 1
#line 901 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7928 1
a7928 1
#line 901 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7930 1
a7930 1
#line 901 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7942 1
a7942 1
#line 902 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7984 1
a7984 1
#line 838 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7986 1
a7986 1
#line 838 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d7988 1
a7988 1
#line 838 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8000 1
a8000 1
#line 839 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8042 1
a8042 1
#line 832 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8044 1
a8044 1
#line 832 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8046 1
a8046 1
#line 832 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8058 1
a8058 1
#line 833 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8100 1
a8100 1
#line 826 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8102 1
a8102 1
#line 826 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8104 1
a8104 1
#line 826 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8116 1
a8116 1
#line 827 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8158 1
a8158 1
#line 847 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8160 1
a8160 1
#line 847 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8162 1
a8162 1
#line 847 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8174 1
a8174 1
#line 848 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8216 1
a8216 1
#line 853 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8218 1
a8218 1
#line 853 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8220 1
a8220 1
#line 853 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8232 1
a8232 1
#line 854 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8274 1
a8274 1
#line 841 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8276 1
a8276 1
#line 841 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8278 1
a8278 1
#line 841 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8290 1
a8290 1
#line 842 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8332 1
a8332 1
#line 856 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8334 1
a8334 1
#line 856 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8336 1
a8336 1
#line 856 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8348 1
a8348 1
#line 857 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8390 1
a8390 1
#line 971 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8392 1
a8392 1
#line 971 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8394 1
a8394 1
#line 971 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8396 1
a8396 1
#line 971 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8409 1
a8409 1
#line 972 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8537 1
a8537 1
#line 908 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8539 1
a8539 1
#line 908 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8541 1
a8541 1
#line 908 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8543 1
a8543 1
#line 908 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8556 1
a8556 1
#line 909 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8565 1
a8565 1
#line 898 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8567 1
a8567 1
#line 898 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8569 1
a8569 1
#line 898 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d8581 1
a8581 1
#line 899 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9408 1
a9408 1
#line 781 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9410 1
a9410 1
#line 781 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9421 1
a9421 1
#line 782 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9435 1
a9435 1
#line 784 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9437 1
a9437 1
#line 784 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9448 1
a9448 1
#line 785 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9462 1
a9462 1
#line 787 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9464 1
a9464 1
#line 787 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9475 1
a9475 1
#line 788 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9489 1
a9489 1
#line 790 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9491 1
a9491 1
#line 790 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9502 1
a9502 1
#line 791 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9516 1
a9516 1
#line 793 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9526 1
a9526 1
#line 794 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9534 1
a9534 1
#line 796 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9544 1
a9544 1
#line 797 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9559 1
a9559 1
#line 808 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9569 1
a9569 1
#line 809 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9587 1
a9587 1
#line 799 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9597 1
a9597 1
#line 800 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9605 1
a9605 1
#line 805 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9615 1
a9615 1
#line 806 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9623 1
a9623 1
#line 802 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9633 1
a9633 1
#line 803 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9649 1
a9649 1
#line 323 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9651 1
a9651 1
#line 323 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9653 1
a9653 1
#line 323 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9655 1
a9655 1
#line 323 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9668 1
a9668 1
#line 324 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9729 1
a9729 1
#line 327 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9731 1
a9731 1
#line 327 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9733 1
a9733 1
#line 327 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9735 1
a9735 1
#line 327 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9748 1
a9748 1
#line 328 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9809 1
a9809 1
#line 337 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9811 1
a9811 1
#line 337 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9813 1
a9813 1
#line 337 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9815 1
a9815 1
#line 337 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9828 1
a9828 1
#line 338 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9891 1
a9891 1
#line 662 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9893 1
a9893 1
#line 662 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9904 1
a9904 1
#line 663 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9918 1
a9918 1
#line 652 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9920 1
a9920 1
#line 652 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9931 1
a9931 1
#line 653 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9945 1
a9945 1
#line 642 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9947 1
a9947 1
#line 642 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9958 1
a9958 1
#line 643 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9972 1
a9972 1
#line 686 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9974 1
a9974 1
#line 686 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9985 1
a9985 1
#line 687 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d9999 1
a9999 1
#line 689 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10001 1
a10001 1
#line 689 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10012 1
a10012 1
#line 690 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10026 1
a10026 1
#line 680 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10028 1
a10028 1
#line 680 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10039 1
a10039 1
#line 681 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10053 1
a10053 1
#line 692 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10055 1
a10055 1
#line 692 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10066 1
a10066 1
#line 693 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10084 1
a10084 1
#line 932 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10086 1
a10086 1
#line 932 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10088 1
a10088 1
#line 932 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10100 1
a10100 1
#line 933 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10124 1
a10124 1
#line 935 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10126 1
a10126 1
#line 935 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10128 1
a10128 1
#line 935 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10140 1
a10140 1
#line 936 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10164 1
a10164 1
#line 683 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10166 1
a10166 1
#line 683 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10168 1
a10168 1
#line 683 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10180 1
a10180 1
#line 684 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10204 1
a10204 1
#line 677 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10206 1
a10206 1
#line 677 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10208 1
a10208 1
#line 677 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10220 1
a10220 1
#line 678 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10244 1
a10244 1
#line 467 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10246 1
a10246 1
#line 467 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10257 1
a10257 1
#line 468 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10266 1
a10266 1
#line 549 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10268 1
a10268 1
#line 549 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10279 1
a10279 1
#line 550 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10288 1
a10288 1
#line 561 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10290 1
a10290 1
#line 561 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10301 1
a10301 1
#line 562 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10310 1
a10310 1
#line 591 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10312 1
a10312 1
#line 591 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10323 1
a10323 1
#line 592 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10332 1
a10332 1
#line 603 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10334 1
a10334 1
#line 603 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10345 1
a10345 1
#line 604 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10354 1
a10354 1
#line 615 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10356 1
a10356 1
#line 615 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10367 1
a10367 1
#line 616 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10376 1
a10376 1
#line 627 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10378 1
a10378 1
#line 627 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10389 1
a10389 1
#line 628 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10398 1
a10398 1
#line 446 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10400 1
a10400 1
#line 446 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10411 1
a10411 1
#line 447 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10420 1
a10420 1
#line 425 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10422 1
a10422 1
#line 425 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10433 1
a10433 1
#line 426 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10442 1
a10442 1
#line 371 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10444 1
a10444 1
#line 371 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10455 1
a10455 1
#line 372 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10464 1
a10464 1
#line 374 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10466 1
a10466 1
#line 374 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10477 1
a10477 1
#line 375 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10495 1
a10495 1
#line 835 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10505 1
a10505 1
#line 836 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10513 1
a10513 1
#line 829 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10523 1
a10523 1
#line 830 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10531 1
a10531 1
#line 823 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10541 1
a10541 1
#line 824 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10549 1
a10549 1
#line 844 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10559 1
a10559 1
#line 845 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10567 1
a10567 1
#line 850 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10577 1
a10577 1
#line 851 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10593 1
a10593 1
#line 929 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10595 1
a10595 1
#line 929 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10606 1
a10606 1
#line 930 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10772 1
a10772 1
#line 665 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10774 1
a10774 1
#line 665 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10776 1
a10776 1
#line 665 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d10788 1
a10788 1
#line 666 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d11085 1
a11085 1
#line 655 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d11087 1
a11087 1
#line 655 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d11089 1
a11089 1
#line 655 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d11101 1
a11101 1
#line 656 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d11396 1
a11396 1
#line 645 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d11398 1
a11398 1
#line 645 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d11400 1
a11400 1
#line 645 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d11412 1
a11412 1
#line 646 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d11721 1
a11721 1
#line 911 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d11723 1
a11723 1
#line 911 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d11725 1
a11725 1
#line 911 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d11737 1
a11737 1
#line 912 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d11749 1
a11749 1
#line 904 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d11751 1
a11751 1
#line 904 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d11762 1
a11762 1
#line 905 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d12591 1
a12591 1
#line 317 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d12593 1
a12593 1
#line 317 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d12595 1
a12595 1
#line 317 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d12597 1
a12597 1
#line 317 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d12610 1
a12610 1
#line 318 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d13048 1
a13048 1
#line 314 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d13050 1
a13050 1
#line 314 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d13052 1
a13052 1
#line 314 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d13054 1
a13054 1
#line 314 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d13067 1
a13067 1
#line 315 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d13505 1
a13505 1
#line 320 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d13507 1
a13507 1
#line 320 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d13509 1
a13509 1
#line 320 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d13511 1
a13511 1
#line 320 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d13524 1
a13524 1
#line 321 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d13969 1
a13969 1
#line 524 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d13971 1
a13971 1
#line 524 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d13973 1
a13973 1
#line 524 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d13985 1
a13985 1
#line 525 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d14138 1
a14138 1
#line 491 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d14140 1
a14140 1
#line 491 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d14142 1
a14142 1
#line 491 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d14154 1
a14154 1
#line 492 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d14307 1
a14307 1
#line 585 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d14309 1
a14309 1
#line 585 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d14311 1
a14311 1
#line 585 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d14323 2
a14324 2
#line 586 "/work/sources/gcc/current/opcodes/rx-decode.opc"
                      ID(mul); DR(rdst); SR(srcb); S2R(srca); F("O---");
d14476 1
a14476 1
#line 401 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d14478 1
a14478 1
#line 401 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d14480 1
a14480 1
#line 401 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d14492 1
a14492 1
#line 402 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d14645 1
a14645 1
#line 419 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d14647 1
a14647 1
#line 419 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d14649 1
a14649 1
#line 419 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d14661 1
a14661 1
#line 420 "/work/sources/gcc/current/opcodes/rx-decode.opc"
d14811 1
a14811 1
#line 975 "/work/sources/gcc/current/opcodes/rx-decode.opc"
@


1.1
log
@bfd
        * Makefile.am (ALL_MACHINES): Add cpu-rx.lo.
        (ALL_MACHINES_CFILES): Add cpu-rx.c.
        (BFD32_BACKENDS): Add elf32-rx.lo.
        (BFD32_BACKENDS_CFILES): Add elf32-rx.c.
        * archures.c (bfd_architecture): Add bfd_arch_rx and bfd_mach_rx.
        Export bfd_rx_arch.
        (bfd_archures_list): Add bfd_rx_arch.
        * config.bfd: Add entry for rx-*-elf.
        * configure.in: Add entries for bfd_elf32_rx_le_vec and
        bfd_elf32_rx_be_vec.
        * reloc.c: Add RX relocations.
        * targets.c: Add RX target vectors.
        * Makefile.in: Regenerate.
        * bfd-in2.h: Regenerate.
        * configure: Regenerate.
        * libbfd.h: Regenerate.
        * cpu-rx.c: New file.
        * elf32-rx.c: New file.

binutils
        * readelf.c: Add support for RX target.
        * MAINTAINERS: Add DJ and NickC as maintainers for RX.

gas
        * Makefile.am: Add RX target.
        * configure.in: Likewise.
        * configure.tgt: Likewise.
        * read.c (do_repeat_with_expander): New function.
        * read.h: Provide a prototype for do_repeat_with_expander.
        * doc/Makefile.am: Add RX target documentation.
        * doc/all.texi: Likewise.
        * doc/as.texinfo: Likewise.
        * Makefile.in: Regenerate.
        * NEWS: Mention support for RX architecture.
        * configure: Regenerate.
        * doc/Makefile.in: Regenerate.
        * config/rx-defs.h: New file.
        * config/rx-parse.y: New file.
        * config/tc-rx.h: New file.
        * config/tc-rx.c: New file.
        * doc/c-rx.texi: New file.

gas/testsuite
        * gas/rx: New directory.
        * gas/rx/*: New set of test cases.
        * gas/elf/section2.e-rx: New expected output file.
        * gas/all/gas.exp: Add support for RX target.
        * gas/elf/elf.exp: Likewise.
        * gas/lns/lns.exp: Likewise.
        * gas/macros/macros.exp: Likewise.

include
        * dis-asm.h: Add prototype for print_insn_rx.

include/elf
        * rx.h: New file.

include/opcode
        * rx.h: New file.

ld
        * Makefile.am: Add rules to build RX emulation.
        * configure.tgt: Likewise.
        * NEWS: Mention support for RX architecture.
        * Makefile.in: Regenerate.
        * emulparams/elf32rx.sh: New file.
        * emultempl/rxelf.em: New file.

opcodes
        * Makefile.am: Add RX files.
        * configure.in: Add support for RX target.
        * disassemble.c: Likewise.
        * Makefile.in: Regenerate.
        * configure: Regenerate.
        * opc2c.c: New file.
        * rx-decode.c: New file.
        * rx-decode.opc: New file.
        * rx-dis.c: New file.
@
text
@d1 1
a1 1
#line 2 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d298 1
a298 1
#line 957 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d313 1
a313 1
#line 960 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d328 1
a328 1
#line 740 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d346 1
a346 1
#line 746 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d364 1
a364 1
#line 718 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d379 1
a379 1
#line 734 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d396 1
a396 1
#line 521 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d398 1
a398 1
#line 521 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d400 1
a400 1
#line 521 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d402 1
a402 1
#line 521 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d415 1
a415 1
#line 522 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d457 1
a457 1
#line 509 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d459 1
a459 1
#line 509 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d461 1
a461 1
#line 509 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d463 1
a463 1
#line 509 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d476 1
a476 1
#line 510 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d521 1
a521 1
#line 485 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d523 1
a523 1
#line 485 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d525 1
a525 1
#line 485 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d527 1
a527 1
#line 485 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d540 1
a540 1
#line 486 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d582 1
a582 1
#line 582 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d584 1
a584 1
#line 582 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d586 1
a586 1
#line 582 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d588 1
a588 1
#line 582 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d601 1
a601 1
#line 583 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d643 1
a643 1
#line 398 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d645 1
a645 1
#line 398 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d647 1
a647 1
#line 398 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d649 1
a649 1
#line 398 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d662 1
a662 1
#line 399 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d704 1
a704 1
#line 416 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d706 1
a706 1
#line 416 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d708 1
a708 1
#line 416 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d710 1
a710 1
#line 416 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d723 1
a723 1
#line 417 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d769 1
a769 1
#line 534 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d771 1
a771 1
#line 534 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d773 1
a773 1
#line 534 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d775 1
a775 1
#line 534 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d788 1
a788 1
#line 535 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d806 1
a806 1
#line 555 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d808 1
a808 1
#line 555 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d810 1
a810 1
#line 555 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d812 1
a812 1
#line 555 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d825 1
a825 1
#line 556 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d843 1
a843 1
#line 567 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d845 1
a845 1
#line 567 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d847 1
a847 1
#line 567 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d849 1
a849 1
#line 567 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d862 1
a862 1
#line 568 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d880 1
a880 1
#line 597 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d882 1
a882 1
#line 597 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d884 1
a884 1
#line 597 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d886 1
a886 1
#line 597 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d899 1
a899 1
#line 598 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d917 1
a917 1
#line 609 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d919 1
a919 1
#line 609 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d921 1
a921 1
#line 609 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d923 1
a923 1
#line 609 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d936 1
a936 1
#line 610 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d954 1
a954 1
#line 621 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d956 1
a956 1
#line 621 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d958 1
a958 1
#line 621 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d960 1
a960 1
#line 621 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d973 1
a973 1
#line 622 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d991 1
a991 1
#line 633 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d993 1
a993 1
#line 633 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d995 1
a995 1
#line 633 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d997 1
a997 1
#line 633 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d1010 1
a1010 1
#line 634 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d1028 1
a1028 1
#line 452 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d1030 1
a1030 1
#line 452 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d1032 1
a1032 1
#line 452 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d1034 1
a1034 1
#line 452 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d1047 1
a1047 1
#line 453 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d1065 1
a1065 1
#line 431 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d1067 1
a1067 1
#line 431 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d1069 1
a1069 1
#line 431 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d1071 1
a1071 1
#line 431 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d1084 1
a1084 1
#line 432 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d1102 1
a1102 1
#line 365 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d1104 1
a1104 1
#line 365 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d1106 1
a1106 1
#line 365 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d1108 1
a1108 1
#line 365 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d1121 1
a1121 1
#line 366 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d1139 1
a1139 1
#line 862 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d1141 1
a1141 1
#line 862 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d1143 1
a1143 1
#line 862 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d1145 1
a1145 1
#line 862 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d1158 1
a1158 1
#line 863 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d2366 1
a2366 1
#line 473 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d2368 1
a2368 1
#line 473 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d2370 1
a2370 1
#line 473 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d2382 1
a2382 1
#line 474 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3483 1
a3483 1
#line 708 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3493 1
a3493 1
#line 709 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3516 1
a3516 1
#line 698 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3518 1
a3518 1
#line 698 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3529 1
a3529 1
#line 699 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3551 1
a3551 1
#line 701 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3561 1
a3561 1
#line 702 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3576 1
a3576 1
#line 712 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3591 1
a3591 1
#line 715 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3606 1
a3606 1
#line 731 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3615 1
a3615 1
#line 704 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3625 1
a3625 1
#line 705 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3639 1
a3639 1
#line 294 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3641 1
a3641 1
#line 294 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3643 1
a3643 1
#line 294 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3645 1
a3645 1
#line 294 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3658 1
a3658 1
#line 295 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3690 1
a3690 1
#line 383 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3692 1
a3692 1
#line 383 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3703 1
a3703 1
#line 384 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3721 1
a3721 1
#line 518 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3723 1
a3723 1
#line 518 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3725 1
a3725 1
#line 518 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3737 1
a3737 1
#line 519 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3779 1
a3779 1
#line 506 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3781 1
a3781 1
#line 506 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3783 1
a3783 1
#line 506 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3795 1
a3795 1
#line 507 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3837 1
a3837 1
#line 482 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3839 1
a3839 1
#line 482 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3841 1
a3841 1
#line 482 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3853 1
a3853 1
#line 483 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3895 1
a3895 1
#line 579 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3897 1
a3897 1
#line 579 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3899 1
a3899 1
#line 579 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3911 1
a3911 1
#line 580 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3953 1
a3953 1
#line 395 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3955 1
a3955 1
#line 395 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3957 1
a3957 1
#line 395 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d3969 1
a3969 1
#line 396 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4011 1
a4011 1
#line 413 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4013 1
a4013 1
#line 413 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4015 1
a4015 1
#line 413 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4027 1
a4027 1
#line 414 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4069 1
a4069 1
#line 334 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4071 1
a4071 1
#line 334 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4073 1
a4073 1
#line 334 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4075 1
a4075 1
#line 334 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4088 1
a4088 1
#line 335 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4165 1
a4165 1
#line 515 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4167 1
a4167 1
#line 515 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4178 1
a4178 1
#line 516 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4192 1
a4192 1
#line 497 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4194 1
a4194 1
#line 497 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4205 1
a4205 1
#line 498 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4219 1
a4219 1
#line 479 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4221 1
a4221 1
#line 479 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4232 1
a4232 1
#line 480 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4246 1
a4246 1
#line 573 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4248 1
a4248 1
#line 573 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4259 1
a4259 1
#line 574 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4273 1
a4273 1
#line 389 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4275 1
a4275 1
#line 389 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4286 1
a4286 1
#line 390 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4300 1
a4300 1
#line 407 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4302 1
a4302 1
#line 407 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4313 1
a4313 1
#line 408 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4327 1
a4327 1
#line 291 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4329 1
a4329 1
#line 291 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4340 1
a4340 1
#line 292 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4357 1
a4357 1
#line 381 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4370 1
a4370 1
#line 659 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4372 1
a4372 1
#line 659 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4374 1
a4374 1
#line 659 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4386 1
a4386 1
#line 660 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4410 1
a4410 1
#line 649 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4412 1
a4412 1
#line 649 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4414 1
a4414 1
#line 649 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4426 1
a4426 1
#line 650 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4450 1
a4450 1
#line 639 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4452 1
a4452 1
#line 639 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4454 1
a4454 1
#line 639 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4466 1
a4466 1
#line 640 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4489 1
a4489 1
#line 347 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4491 1
a4491 1
#line 347 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4502 1
a4502 1
#line 348 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4516 1
a4516 1
#line 344 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4518 1
a4518 1
#line 344 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4529 1
a4529 1
#line 345 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4544 1
a4544 1
#line 488 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4546 1
a4546 1
#line 488 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4548 1
a4548 1
#line 488 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4560 1
a4560 1
#line 489 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4602 1
a4602 1
#line 500 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4604 1
a4604 1
#line 500 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4615 1
a4615 1
#line 501 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4624 1
a4624 1
#line 576 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4626 1
a4626 1
#line 576 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4637 1
a4637 1
#line 577 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4646 1
a4646 1
#line 392 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4648 1
a4648 1
#line 392 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4659 1
a4659 1
#line 393 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4668 1
a4668 1
#line 410 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4670 1
a4670 1
#line 410 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4681 1
a4681 1
#line 411 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4783 1
a4783 1
#line 285 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4793 1
a4793 1
#line 286 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4816 1
a4816 1
#line 503 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4826 1
a4826 1
#line 504 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4841 1
a4841 1
#line 963 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4895 1
a4895 1
#line 874 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4897 1
a4897 1
#line 874 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4899 1
a4899 1
#line 874 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4911 1
a4911 1
#line 875 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4936 1
a4936 1
#line 884 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4938 1
a4938 1
#line 884 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4940 1
a4940 1
#line 884 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4952 1
a4952 1
#line 885 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4977 1
a4977 1
#line 894 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4979 1
a4979 1
#line 894 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4981 1
a4981 1
#line 894 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d4993 1
a4993 1
#line 895 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5017 1
a5017 1
#line 437 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5027 1
a5027 1
#line 438 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5035 1
a5035 1
#line 458 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5045 1
a5045 1
#line 459 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5053 1
a5053 1
#line 540 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5063 1
a5063 1
#line 541 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5071 1
a5071 1
#line 814 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5081 1
a5081 1
#line 815 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5089 1
a5089 1
#line 674 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5099 1
a5099 1
#line 675 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5107 1
a5107 1
#line 671 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5117 1
a5117 1
#line 672 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5127 1
a5127 1
#line 353 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5129 1
a5129 1
#line 353 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5140 1
a5140 1
#line 354 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5148 1
a5148 1
#line 350 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5158 1
a5158 1
#line 351 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5167 1
a5167 1
#line 926 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5177 1
a5177 1
#line 927 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5186 1
a5186 1
#line 923 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5196 1
a5196 1
#line 924 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5226 1
a5226 1
#line 724 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5236 1
a5236 1
#line 725 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5259 1
a5259 1
#line 727 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5269 1
a5269 1
#line 728 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5292 1
a5292 1
#line 720 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5302 1
a5302 1
#line 721 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5326 1
a5326 1
#line 736 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5336 1
a5336 1
#line 737 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5346 1
a5346 1
#line 760 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5356 1
a5356 1
#line 761 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5371 1
a5371 1
#line 752 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5381 1
a5381 1
#line 763 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5391 1
a5391 1
#line 764 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5406 1
a5406 1
#line 755 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5416 1
a5416 1
#line 769 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5426 1
a5426 1
#line 770 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5444 1
a5444 1
#line 758 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5454 1
a5454 1
#line 775 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5464 1
a5464 1
#line 776 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5482 1
a5482 1
#line 767 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5497 1
a5497 1
#line 818 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5515 1
a5515 1
#line 951 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5530 1
a5530 1
#line 954 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5545 1
a5545 1
#line 966 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5571 1
a5571 1
#line 920 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5581 1
a5581 1
#line 921 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5604 1
a5604 1
#line 917 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5614 1
a5614 1
#line 918 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5630 1
a5630 1
#line 311 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5632 1
a5632 1
#line 311 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5634 1
a5634 1
#line 311 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5636 1
a5636 1
#line 311 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5638 1
a5638 1
#line 311 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5640 1
a5640 1
#line 311 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5655 1
a5655 1
#line 312 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5733 1
a5733 1
#line 308 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5735 1
a5735 1
#line 308 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5737 1
a5737 1
#line 308 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5739 1
a5739 1
#line 308 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5741 1
a5741 1
#line 308 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5743 1
a5743 1
#line 308 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d5758 1
a5758 1
#line 309 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d6124 1
a6124 1
#line 331 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d6126 1
a6126 1
#line 331 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d6128 1
a6128 1
#line 331 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d6130 1
a6130 1
#line 331 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d6132 1
a6132 1
#line 331 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d6134 1
a6134 1
#line 331 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d6149 1
a6149 1
#line 332 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d6299 1
a6299 1
#line 297 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d6301 1
a6301 1
#line 297 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d6303 1
a6303 1
#line 297 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d6305 1
a6305 1
#line 297 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d6307 1
a6307 1
#line 297 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d6321 1
a6321 1
#line 298 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d6767 1
a6767 1
#line 868 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d6769 1
a6769 1
#line 868 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d6771 1
a6771 1
#line 868 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d6783 1
a6783 1
#line 869 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d6792 1
a6792 1
#line 878 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d6794 1
a6794 1
#line 878 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d6796 1
a6796 1
#line 878 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d6808 1
a6808 1
#line 879 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d6860 1
a6860 1
#line 888 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d6862 1
a6862 1
#line 888 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d6864 1
a6864 1
#line 888 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d6876 1
a6876 1
#line 889 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d6885 1
a6885 1
#line 356 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d6887 1
a6887 1
#line 356 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d6889 1
a6889 1
#line 356 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d6901 1
a6901 1
#line 357 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d6962 1
a6962 1
#line 288 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d6964 1
a6964 1
#line 288 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d6966 1
a6966 1
#line 288 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d6968 1
a6968 1
#line 288 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d6981 1
a6981 1
#line 289 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7026 1
a7026 1
#line 530 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7028 1
a7028 1
#line 530 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7039 1
a7039 1
#line 531 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7054 1
a7054 1
#line 461 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7056 1
a7056 1
#line 461 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7067 1
a7067 1
#line 462 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7084 1
a7084 1
#line 470 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7086 1
a7086 1
#line 470 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7097 1
a7097 1
#line 471 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7111 1
a7111 1
#line 543 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7113 1
a7113 1
#line 543 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7124 1
a7124 1
#line 544 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7142 1
a7142 1
#line 552 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7144 1
a7144 1
#line 552 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7146 1
a7146 1
#line 552 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7158 1
a7158 1
#line 553 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7200 1
a7200 1
#line 564 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7202 1
a7202 1
#line 564 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7204 1
a7204 1
#line 564 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7216 1
a7216 1
#line 565 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7258 1
a7258 1
#line 594 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7260 1
a7260 1
#line 594 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7262 1
a7262 1
#line 594 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7274 1
a7274 1
#line 595 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7316 1
a7316 1
#line 606 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7318 1
a7318 1
#line 606 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7320 1
a7320 1
#line 606 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7332 1
a7332 1
#line 607 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7374 1
a7374 1
#line 618 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7376 1
a7376 1
#line 618 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7378 1
a7378 1
#line 618 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7390 1
a7390 1
#line 619 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7432 1
a7432 1
#line 630 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7434 1
a7434 1
#line 630 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7436 1
a7436 1
#line 630 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7448 1
a7448 1
#line 631 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7490 1
a7490 1
#line 449 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7492 1
a7492 1
#line 449 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7494 1
a7494 1
#line 449 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7506 1
a7506 1
#line 450 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7548 1
a7548 1
#line 428 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7550 1
a7550 1
#line 428 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7552 1
a7552 1
#line 428 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7564 1
a7564 1
#line 429 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7605 1
a7605 1
#line 440 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7607 1
a7607 1
#line 440 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7618 1
a7618 1
#line 441 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7636 1
a7636 1
#line 362 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7638 1
a7638 1
#line 362 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7640 1
a7640 1
#line 362 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7652 1
a7652 1
#line 363 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7694 1
a7694 1
#line 859 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7696 1
a7696 1
#line 859 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7698 1
a7698 1
#line 859 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7710 1
a7710 1
#line 860 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7752 1
a7752 1
#line 871 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7754 1
a7754 1
#line 871 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7756 1
a7756 1
#line 871 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7768 1
a7768 1
#line 872 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7810 1
a7810 1
#line 881 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7812 1
a7812 1
#line 881 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7814 1
a7814 1
#line 881 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7826 1
a7826 1
#line 882 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7868 1
a7868 1
#line 891 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7870 1
a7870 1
#line 891 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7872 1
a7872 1
#line 891 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7884 1
a7884 1
#line 892 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7926 1
a7926 1
#line 901 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7928 1
a7928 1
#line 901 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7930 1
a7930 1
#line 901 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7942 1
a7942 1
#line 902 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7984 1
a7984 1
#line 838 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7986 1
a7986 1
#line 838 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d7988 1
a7988 1
#line 838 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8000 1
a8000 1
#line 839 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8042 1
a8042 1
#line 832 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8044 1
a8044 1
#line 832 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8046 1
a8046 1
#line 832 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8058 1
a8058 1
#line 833 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8100 1
a8100 1
#line 826 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8102 1
a8102 1
#line 826 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8104 1
a8104 1
#line 826 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8116 1
a8116 1
#line 827 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8158 1
a8158 1
#line 847 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8160 1
a8160 1
#line 847 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8162 1
a8162 1
#line 847 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8174 1
a8174 1
#line 848 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8216 1
a8216 1
#line 853 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8218 1
a8218 1
#line 853 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8220 1
a8220 1
#line 853 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8232 1
a8232 1
#line 854 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8274 1
a8274 1
#line 841 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8276 1
a8276 1
#line 841 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8278 1
a8278 1
#line 841 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8290 1
a8290 1
#line 842 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8332 1
a8332 1
#line 856 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8334 1
a8334 1
#line 856 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8336 1
a8336 1
#line 856 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8348 1
a8348 1
#line 857 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8390 1
a8390 1
#line 971 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8392 1
a8392 1
#line 971 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8394 1
a8394 1
#line 971 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8396 1
a8396 1
#line 971 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8409 1
a8409 1
#line 972 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8537 1
a8537 1
#line 908 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8539 1
a8539 1
#line 908 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8541 1
a8541 1
#line 908 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8543 1
a8543 1
#line 908 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8556 1
a8556 1
#line 909 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8565 1
a8565 1
#line 898 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8567 1
a8567 1
#line 898 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8569 1
a8569 1
#line 898 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d8581 1
a8581 1
#line 899 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9408 1
a9408 1
#line 781 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9410 1
a9410 1
#line 781 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9421 1
a9421 1
#line 782 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9435 1
a9435 1
#line 784 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9437 1
a9437 1
#line 784 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9448 1
a9448 1
#line 785 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9462 1
a9462 1
#line 787 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9464 1
a9464 1
#line 787 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9475 1
a9475 1
#line 788 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9489 1
a9489 1
#line 790 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9491 1
a9491 1
#line 790 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9502 1
a9502 1
#line 791 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9516 1
a9516 1
#line 793 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9526 1
a9526 1
#line 794 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9534 1
a9534 1
#line 796 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9544 1
a9544 1
#line 797 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9559 1
a9559 1
#line 808 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9569 1
a9569 1
#line 809 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9587 1
a9587 1
#line 799 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9597 1
a9597 1
#line 800 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9605 1
a9605 1
#line 805 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9615 1
a9615 1
#line 806 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9623 1
a9623 1
#line 802 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9633 1
a9633 1
#line 803 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9649 1
a9649 1
#line 323 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9651 1
a9651 1
#line 323 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9653 1
a9653 1
#line 323 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9655 1
a9655 1
#line 323 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9668 1
a9668 1
#line 324 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9729 1
a9729 1
#line 327 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9731 1
a9731 1
#line 327 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9733 1
a9733 1
#line 327 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9735 1
a9735 1
#line 327 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9748 1
a9748 1
#line 328 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9809 1
a9809 1
#line 337 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9811 1
a9811 1
#line 337 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9813 1
a9813 1
#line 337 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9815 1
a9815 1
#line 337 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9828 1
a9828 1
#line 338 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9891 1
a9891 1
#line 662 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9893 1
a9893 1
#line 662 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9904 1
a9904 1
#line 663 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9918 1
a9918 1
#line 652 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9920 1
a9920 1
#line 652 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9931 1
a9931 1
#line 653 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9945 1
a9945 1
#line 642 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9947 1
a9947 1
#line 642 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9958 1
a9958 1
#line 643 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9972 1
a9972 1
#line 686 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9974 1
a9974 1
#line 686 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9985 1
a9985 1
#line 687 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d9999 1
a9999 1
#line 689 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10001 1
a10001 1
#line 689 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10012 1
a10012 1
#line 690 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10026 1
a10026 1
#line 680 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10028 1
a10028 1
#line 680 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10039 1
a10039 1
#line 681 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10053 1
a10053 1
#line 692 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10055 1
a10055 1
#line 692 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10066 1
a10066 1
#line 693 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10084 1
a10084 1
#line 932 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10086 1
a10086 1
#line 932 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10088 1
a10088 1
#line 932 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10100 1
a10100 1
#line 933 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10124 1
a10124 1
#line 935 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10126 1
a10126 1
#line 935 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10128 1
a10128 1
#line 935 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10140 1
a10140 1
#line 936 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10164 1
a10164 1
#line 683 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10166 1
a10166 1
#line 683 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10168 1
a10168 1
#line 683 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10180 1
a10180 1
#line 684 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10204 1
a10204 1
#line 677 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10206 1
a10206 1
#line 677 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10208 1
a10208 1
#line 677 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10220 1
a10220 1
#line 678 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10244 1
a10244 1
#line 467 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10246 1
a10246 1
#line 467 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10257 1
a10257 1
#line 468 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10266 1
a10266 1
#line 549 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10268 1
a10268 1
#line 549 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10279 1
a10279 1
#line 550 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10288 1
a10288 1
#line 561 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10290 1
a10290 1
#line 561 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10301 1
a10301 1
#line 562 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10310 1
a10310 1
#line 591 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10312 1
a10312 1
#line 591 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10323 1
a10323 1
#line 592 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10332 1
a10332 1
#line 603 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10334 1
a10334 1
#line 603 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10345 1
a10345 1
#line 604 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10354 1
a10354 1
#line 615 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10356 1
a10356 1
#line 615 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10367 1
a10367 1
#line 616 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10376 1
a10376 1
#line 627 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10378 1
a10378 1
#line 627 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10389 1
a10389 1
#line 628 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10398 1
a10398 1
#line 446 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10400 1
a10400 1
#line 446 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10411 1
a10411 1
#line 447 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10420 1
a10420 1
#line 425 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10422 1
a10422 1
#line 425 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10433 1
a10433 1
#line 426 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10442 1
a10442 1
#line 371 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10444 1
a10444 1
#line 371 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10455 1
a10455 1
#line 372 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10464 1
a10464 1
#line 374 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10466 1
a10466 1
#line 374 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10477 1
a10477 1
#line 375 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10495 1
a10495 1
#line 835 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10505 1
a10505 1
#line 836 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10513 1
a10513 1
#line 829 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10523 1
a10523 1
#line 830 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10531 1
a10531 1
#line 823 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10541 1
a10541 1
#line 824 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10549 1
a10549 1
#line 844 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10559 1
a10559 1
#line 845 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10567 1
a10567 1
#line 850 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10577 1
a10577 1
#line 851 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10593 1
a10593 1
#line 929 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10595 1
a10595 1
#line 929 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10606 1
a10606 1
#line 930 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10772 1
a10772 1
#line 665 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10774 1
a10774 1
#line 665 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10776 1
a10776 1
#line 665 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d10788 1
a10788 1
#line 666 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d11085 1
a11085 1
#line 655 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d11087 1
a11087 1
#line 655 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d11089 1
a11089 1
#line 655 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d11101 1
a11101 1
#line 656 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d11396 1
a11396 1
#line 645 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d11398 1
a11398 1
#line 645 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d11400 1
a11400 1
#line 645 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d11412 1
a11412 1
#line 646 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d11721 1
a11721 1
#line 911 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d11723 1
a11723 1
#line 911 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d11725 1
a11725 1
#line 911 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d11737 1
a11737 1
#line 912 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d11749 1
a11749 1
#line 904 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d11751 1
a11751 1
#line 904 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d11762 1
a11762 1
#line 905 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d12591 1
a12591 1
#line 317 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d12593 1
a12593 1
#line 317 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d12595 1
a12595 1
#line 317 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d12597 1
a12597 1
#line 317 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d12610 1
a12610 1
#line 318 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d13048 1
a13048 1
#line 314 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d13050 1
a13050 1
#line 314 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d13052 1
a13052 1
#line 314 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d13054 1
a13054 1
#line 314 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d13067 1
a13067 1
#line 315 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d13505 1
a13505 1
#line 320 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d13507 1
a13507 1
#line 320 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d13509 1
a13509 1
#line 320 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d13511 1
a13511 1
#line 320 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d13524 1
a13524 1
#line 321 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d13969 1
a13969 1
#line 524 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d13971 1
a13971 1
#line 524 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d13973 1
a13973 1
#line 524 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d13985 1
a13985 1
#line 525 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d14138 1
a14138 1
#line 491 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d14140 1
a14140 1
#line 491 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d14142 1
a14142 1
#line 491 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d14154 1
a14154 1
#line 492 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d14307 1
a14307 1
#line 585 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d14309 1
a14309 1
#line 585 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d14311 1
a14311 1
#line 585 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d14323 1
a14323 1
#line 586 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d14476 1
a14476 1
#line 401 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d14478 1
a14478 1
#line 401 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d14480 1
a14480 1
#line 401 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d14492 1
a14492 1
#line 402 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d14645 1
a14645 1
#line 419 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d14647 1
a14647 1
#line 419 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d14649 1
a14649 1
#line 419 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d14661 1
a14661 1
#line 420 "/work/sources/binutils/current/opcodes/rx-decode.opc"
d14811 1
a14811 1
#line 975 "/work/sources/binutils/current/opcodes/rx-decode.opc"
@

