head	1.5;
access;
symbols
	sid-snapshot-20180601:1.5
	cgen-snapshot-20180601:1.5
	sid-snapshot-20180501:1.5
	cgen-snapshot-20180501:1.5
	sid-snapshot-20180401:1.5
	cgen-snapshot-20180401:1.5
	sid-snapshot-20180301:1.5
	cgen-snapshot-20180301:1.5
	sid-snapshot-20180201:1.5
	cgen-snapshot-20180201:1.5
	sid-snapshot-20180101:1.5
	cgen-snapshot-20180101:1.5
	sid-snapshot-20171201:1.5
	cgen-snapshot-20171201:1.5
	sid-snapshot-20171101:1.5
	cgen-snapshot-20171101:1.5
	sid-snapshot-20171001:1.5
	cgen-snapshot-20171001:1.5
	sid-snapshot-20170901:1.5
	cgen-snapshot-20170901:1.5
	sid-snapshot-20170801:1.5
	cgen-snapshot-20170801:1.5
	sid-snapshot-20170701:1.5
	cgen-snapshot-20170701:1.5
	sid-snapshot-20170601:1.5
	cgen-snapshot-20170601:1.5
	sid-snapshot-20170501:1.5
	cgen-snapshot-20170501:1.5
	sid-snapshot-20170401:1.5
	cgen-snapshot-20170401:1.5
	sid-snapshot-20170301:1.5
	cgen-snapshot-20170301:1.5
	sid-snapshot-20170201:1.5
	cgen-snapshot-20170201:1.5
	sid-snapshot-20170101:1.5
	cgen-snapshot-20170101:1.5
	sid-snapshot-20161201:1.5
	cgen-snapshot-20161201:1.5
	sid-snapshot-20161101:1.5
	cgen-snapshot-20161101:1.5
	sid-snapshot-20160901:1.5
	cgen-snapshot-20160901:1.5
	sid-snapshot-20160801:1.5
	cgen-snapshot-20160801:1.5
	sid-snapshot-20160701:1.5
	cgen-snapshot-20160701:1.5
	sid-snapshot-20160601:1.5
	cgen-snapshot-20160601:1.5
	sid-snapshot-20160501:1.5
	cgen-snapshot-20160501:1.5
	sid-snapshot-20160401:1.5
	cgen-snapshot-20160401:1.5
	sid-snapshot-20160301:1.5
	cgen-snapshot-20160301:1.5
	sid-snapshot-20160201:1.5
	cgen-snapshot-20160201:1.5
	sid-snapshot-20160101:1.5
	cgen-snapshot-20160101:1.5
	sid-snapshot-20151201:1.5
	cgen-snapshot-20151201:1.5
	sid-snapshot-20151101:1.5
	cgen-snapshot-20151101:1.5
	sid-snapshot-20151001:1.5
	cgen-snapshot-20151001:1.5
	sid-snapshot-20150901:1.5
	cgen-snapshot-20150901:1.5
	sid-snapshot-20150801:1.5
	cgen-snapshot-20150801:1.5
	sid-snapshot-20150701:1.5
	cgen-snapshot-20150701:1.5
	sid-snapshot-20150601:1.5
	cgen-snapshot-20150601:1.5
	sid-snapshot-20150501:1.5
	cgen-snapshot-20150501:1.5
	sid-snapshot-20150401:1.5
	cgen-snapshot-20150401:1.5
	cygwin-1_7_35-release:1.5
	sid-snapshot-20150301:1.5
	cgen-snapshot-20150301:1.5
	cygwin-1_7_34-release:1.5
	sid-snapshot-20150201:1.5
	cgen-snapshot-20150201:1.5
	sid-snapshot-20150101:1.5
	cgen-snapshot-20150101:1.5
	newlib-2_2_0:1.5.0.26
	sid-snapshot-20141201:1.5
	cgen-snapshot-20141201:1.5
	cygwin-1_7_33-release:1.5
	sid-snapshot-20141101:1.5
	cgen-snapshot-20141101:1.5
	sid-snapshot-20141001:1.5
	cgen-snapshot-20141001:1.5
	sid-snapshot-20140901:1.5
	cgen-snapshot-20140901:1.5
	cygwin-1_7_32-release:1.5
	sid-snapshot-20140801:1.5
	cgen-snapshot-20140801:1.5
	cygwin-1_7_31-release:1.5
	sid-snapshot-20140701:1.5
	cgen-snapshot-20140701:1.5
	sid-snapshot-20140601:1.5
	cgen-snapshot-20140601:1.5
	cygwin-1_7_30-release:1.5
	sid-snapshot-20140501:1.5
	cgen-snapshot-20140501:1.5
	cygwin-1_7_29-release:1.5
	sid-snapshot-20140401:1.5
	cgen-snapshot-20140401:1.5
	sid-snapshot-20140301:1.5
	cgen-snapshot-20140301:1.5
	cygwin-1_7_28-release:1.5
	sid-snapshot-20140201:1.5
	cgen-snapshot-20140201:1.5
	sid-snapshot-20140101:1.5
	cgen-snapshot-20140101:1.5
	newlib-2_1_0:1.5
	sid-snapshot-20131201:1.5
	cgen-snapshot-20131201:1.5
	cygwin-1_7_27-release:1.5
	cygwin-1_7_26-release:1.5
	sid-snapshot-20131101:1.5
	cgen-snapshot-20131101:1.5
	sid-snapshot-20131001:1.5
	cgen-snapshot-20131001:1.5
	binutils-2_24-branch:1.5.0.24
	binutils-2_24-branchpoint:1.5
	binutils-2_21_1:1.5
	sid-snapshot-20130901:1.5
	cgen-snapshot-20130901:1.5
	cygwin-1_7_25-release:1.5
	gdb_7_6_1-2013-08-30-release:1.5
	cygwin-1_7_24-release:1.5
	cygwin-1_7_23-release:1.5
	sid-snapshot-20130801:1.5
	cgen-snapshot-20130801:1.5
	cygwin-1_7_22-release:1.5
	cygwin-1_7_21-release:1.5
	sid-snapshot-20130701:1.5
	cgen-snapshot-20130701:1.5
	cygwin-1_7_20-release:1.5
	cygwin-1_7_19-release:1.5
	sid-snapshot-20130601:1.5
	cgen-snapshot-20130601:1.5
	sid-snapshot-20130501:1.5
	cgen-snapshot-20130501:1.5
	gdb_7_6-2013-04-26-release:1.5
	cygwin-64bit-postmerge:1.5
	cygwin-64bit-premerge-branch:1.5.0.22
	cygwin-64bit-premerge:1.5
	sid-snapshot-20130401:1.5
	cgen-snapshot-20130401:1.5
	binutils-2_23_2:1.5
	gdb_7_6-branch:1.5.0.20
	gdb_7_6-2013-03-12-branchpoint:1.5
	cygwin-1_7_18-release:1.5
	sid-snapshot-20130301:1.5
	cgen-snapshot-20130301:1.5
	sid-snapshot-20130201:1.5
	cgen-snapshot-20130201:1.5
	sid-snapshot-20130101:1.5
	cgen-snapshot-20130101:1.5
	newlib-2_0_0:1.5
	sid-snapshot-20121201:1.5
	cgen-snapshot-20121201:1.5
	gdb_7_5_1-2012-11-29-release:1.5
	binutils-2_23_1:1.5
	sid-snapshot-20121101:1.5
	cgen-snapshot-20121101:1.5
	binutils-2_23:1.5
	cygwin-1_7_17-release:1.5
	sid-snapshot-20121001:1.5
	cgen-snapshot-20121001:1.5
	sid-snapshot-20120901:1.5
	cgen-snapshot-20120901:1.5
	gdb_7_5-2012-08-17-release:1.5
	sid-snapshot-20120801:1.5
	cgen-snapshot-20120801:1.5
	binutils-2_23-branch:1.5.0.18
	binutils-2_23-branchpoint:1.5
	cygwin-1_7_16-release:1.5
	gdb_7_5-branch:1.5.0.16
	gdb_7_5-2012-07-18-branchpoint:1.5
	sid-snapshot-20120701:1.5
	cgen-snapshot-20120701:1.5
	sid-snapshot-20120601:1.5
	cgen-snapshot-20120601:1.5
	cygwin-1_7_15-release:1.5
	sid-snapshot-20120501:1.5
	cgen-snapshot-20120501:1.5
	binutils-2_22_branch:1.5.0.14
	gdb_7_4_1-2012-04-26-release:1.5
	cygwin-1_7_14_2-release:1.5
	cygwin-1_7_14-release:1.5
	cygwin-1_7_12-release:1.5
	sid-snapshot-20120401:1.5
	cgen-snapshot-20120401:1.5
	sid-snapshot-20120301:1.5
	cgen-snapshot-20120301:1.5
	cygwin-1_7_11-release:1.5
	cygwin-1_7_10-release:1.5
	sid-snapshot-20120201:1.5
	cgen-snapshot-20120201:1.5
	gdb_7_4-2012-01-24-release:1.5
	sid-snapshot-20120101:1.5
	cgen-snapshot-20120101:1.5
	newlib-1_20_0:1.5
	gdb_7_4-branch:1.5.0.12
	gdb_7_4-2011-12-13-branchpoint:1.5
	sid-snapshot-20111201:1.5
	cgen-snapshot-20111201:1.5
	binutils-2_22:1.5
	sid-snapshot-20111101:1.5
	cgen-snapshot-20111101:1.5
	sid-snapshot-20111001:1.5
	cgen-snapshot-20111001:1.5
	binutils-2_22-branch:1.5.0.10
	binutils-2_22-branchpoint:1.5
	gdb_7_3_1-2011-09-04-release:1.5
	sid-snapshot-20110901:1.5
	cgen-snapshot-20110901:1.5
	sid-snapshot-20110801:1.5
	cgen-snapshot-20110801:1.5
	gdb_7_3-2011-07-26-release:1.5
	sid-snapshot-20110701:1.5
	cgen-snapshot-20110701:1.5
	sid-snapshot-20110601:1.5
	cgen-snapshot-20110601:1.5
	sid-snapshot-20110501:1.5
	cgen-snapshot-20110501:1.5
	gdb_7_3-branch:1.5.0.8
	gdb_7_3-2011-04-01-branchpoint:1.5
	sid-snapshot-20110401:1.5
	cgen-snapshot-20110401:1.5
	cygwin-1_7_9-release:1.5
	sid-snapshot-20110301:1.5
	cgen-snapshot-20110301:1.5
	sid-snapshot-20110201:1.5
	cgen-snapshot-20110201:1.5
	sid-snapshot-20110101:1.5
	cgen-snapshot-20110101:1.5
	newlib-1_19_0:1.5
	binutils-2_21:1.5
	sid-snapshot-20101201:1.5
	cgen-snapshot-20101201:1.5
	binutils-2_21-branch:1.5.0.6
	binutils-2_21-branchpoint:1.5
	sid-snapshot-20101101:1.5
	cgen-snapshot-20101101:1.5
	sid-snapshot-20101001:1.5
	cgen-snapshot-20101001:1.5
	binutils-2_20_1:1.4
	gdb_7_2-2010-09-02-release:1.5
	sid-snapshot-20100901:1.5
	cgen-snapshot-20100901:1.5
	sid-snapshot-20100801:1.5
	cgen-snapshot-20100801:1.5
	gdb_7_2-branch:1.5.0.4
	gdb_7_2-2010-07-07-branchpoint:1.5
	sid-snapshot-20100701:1.5
	cgen-snapshot-20100701:1.5
	sid-snapshot-20100601:1.5
	cgen-snapshot-20100601:1.5
	sid-snapshot-20100501:1.5
	cgen-snapshot-20100501:1.5
	cygwin-1_7_5-release:1.5
	cygwin-1_7_4-release:1.5
	sid-snapshot-20100401:1.5
	cgen-snapshot-20100401:1.5
	cygwin-1_7_3-release:1.5
	cygwin-1_7_2-release:1.5
	gdb_7_1-2010-03-18-release:1.5
	sid-snapshot-20100301:1.5
	cgen-snapshot-20100301:1.5
	gdb_7_1-branch:1.5.0.2
	gdb_7_1-2010-02-18-branchpoint:1.5
	sid-snapshot-20100201:1.5
	cgen-snapshot-20100201:1.5
	sid-snapshot-20100101:1.4
	cgen-snapshot-20100101:1.4
	gdb_7_0_1-2009-12-22-release:1.4
	newlib-1_18_0:1.4
	cygwin-1_7_1-release:1.4
	sid-snapshot-20091201:1.4
	cgen-snapshot-20091201:1.4
	sid-snapshot-20091101:1.4
	cgen-snapshot-20091101:1.4
	binutils-2_20:1.4
	gdb_7_0-2009-10-06-release:1.4
	sid-snapshot-20091001:1.4
	cgen-snapshot-20091001:1.4
	gdb_7_0-branch:1.4.0.22
	gdb_7_0-2009-09-16-branchpoint:1.4
	arc-sim-20090309:1.3
	binutils-arc-20081103-branch:1.4.0.20
	binutils-arc-20081103-branchpoint:1.4
	newlib-1_17_0-arc:1.4.0.18
	binutils-2_20-branch:1.4.0.16
	binutils-2_20-branchpoint:1.4
	sid-snapshot-20090901:1.4
	cgen-snapshot-20090901:1.4
	sid-snapshot-20090801:1.4
	cgen-snapshot-20090801:1.4
	msnyder-checkpoint-072509-branch:1.4.0.14
	msnyder-checkpoint-072509-branchpoint:1.4
	sid-snapshot-20090701:1.4
	cgen-snapshot-20090701:1.4
	dje-cgen-play1-branch:1.4.0.12
	dje-cgen-play1-branchpoint:1.4
	cgen-1_1-branch:1.4.0.10
	cgen-1_1-branchpoint:1.4
	sid-snapshot-20090601:1.4
	cgen-snapshot-20090601:1.4
	sid-snapshot-20090501:1.4
	cgen-snapshot-20090501:1.4
	sid-snapshot-20090401:1.4
	cgen-snapshot-20090401:1.4
	binutils-arc-20080908-branch:1.3.0.18
	binutils-arc-20080908-branchpoint:1.3
	arc-20081103-branch:1.4.0.8
	arc-20081103-branchpoint:1.4
	arc-insight_6_8-branch:1.3.0.16
	arc-insight_6_8-branchpoint:1.3
	insight_6_8-branch:1.3.0.14
	insight_6_8-branchpoint:1.3
	sid-snapshot-20090301:1.4
	cgen-snapshot-20090301:1.4
	binutils-2_19_1:1.3
	sid-snapshot-20090201:1.4
	cgen-snapshot-20090201:1.4
	sid-snapshot-20090101:1.4
	cgen-snapshot-20090101:1.4
	reverse-20081226-branch:1.4.0.6
	reverse-20081226-branchpoint:1.4
	newlib-1_17_0:1.4
	sid-snapshot-20081201:1.4
	cgen-snapshot-20081201:1.4
	multiprocess-20081120-branch:1.4.0.4
	multiprocess-20081120-branchpoint:1.4
	sid-snapshot-20081101:1.4
	cgen-snapshot-20081101:1.4
	binutils-2_19:1.3
	sid-snapshot-20081001:1.4
	cgen-snapshot-20081001:1.4
	reverse-20080930-branch:1.4.0.2
	reverse-20080930-branchpoint:1.4
	binutils-2_19-branch:1.3.0.12
	binutils-2_19-branchpoint:1.3
	sid-snapshot-20080901:1.3
	cgen-snapshot-20080901:1.3
	sid-snapshot-20080801:1.3
	cgen-snapshot-20080801:1.3
	reverse-20080717-branch:1.3.0.10
	reverse-20080717-branchpoint:1.3
	sid-snapshot-20080701:1.3
	cgen-snapshot-20080701:1.3
	msnyder-reverse-20080609-branch:1.3.0.8
	msnyder-reverse-20080609-branchpoint:1.3
	sid-snapshot-20080601:1.3
	cgen-snapshot-20080601:1.3
	sid-snapshot-20080501:1.3
	cgen-snapshot-20080501:1.3
	sid-snapshot-20080403:1.3
	sid-snapshot-20080401:1.3
	cgen-snapshot-20080401:1.3
	gdb_6_8-2008-03-27-release:1.3
	sid-snapshot-20080301:1.3
	cgen-snapshot-20080301:1.3
	gdb_6_8-branch:1.3.0.6
	gdb_6_8-2008-02-26-branchpoint:1.3
	sid-snapshot-20080201:1.3
	cgen-snapshot-20080201:1.3
	sid-snapshot-20080101:1.3
	cgen-snapshot-20080101:1.3
	newlib-1_16_0:1.3
	sid-snapshot-20071201:1.3
	cgen-snapshot-20071201:1.3
	sid-snapshot-20071101:1.3
	cgen-snapshot-20071101:1.3
	gdb_6_7_1-2007-10-29-release:1.3
	gdb_6_7-2007-10-10-release:1.3
	sid-snapshot-20071001:1.3
	cgen-snapshot-20071001:1.3
	gdb_6_7-branch:1.3.0.4
	gdb_6_7-2007-09-07-branchpoint:1.3
	binutils-2_18:1.3
	binutils-2_18-branch:1.3.0.2
	binutils-2_18-branchpoint:1.3
	binutils_latest_snapshot:1.5;
locks; strict;
comment	@# @;


1.5
date	2010.01.09.21.11.32;	author rwild;	state Exp;
branches;
next	1.4;

1.4
date	2008.09.29.15.28.14;	author sje;	state Exp;
branches;
next	1.3;

1.3
date	2007.05.24.17.33.26;	author sje;	state Exp;
branches;
next	1.2;

1.2
date	2007.05.21.16.07.45;	author bonzini;	state dead;
branches;
next	1.1;

1.1
date	2007.05.21.16.05.57;	author bonzini;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Sync Libtool from GCC.

/:
	* libtool.m4: Sync from git Libtool.
	* ltmain.sh: Likewise.
	* ltoptions.m4: Likewise.
	* ltversion.m4: Likewise.
	* lt~obsolete.m4: Likewise.

sim/iq2000/:
	* configure: Regenerate.

sim/d10v/:
	* configure: Regenerate.

sim/m32r/:
	* configure: Regenerate.

sim/frv/:
	* configure: Regenerate.

sim/:
	* avr/configure: Regenerate.
	* cris/configure: Regenerate.
	* microblaze/configure: Regenerate.

sim/h8300/:
	* configure: Regenerate.

sim/mn10300/:
	* configure: Regenerate.

sim/erc32/:
	* configure: Regenerate.

sim/arm/:
	* configure: Regenerate.

sim/m68hc11/:
	* configure: Regenerate.

sim/lm32/:
	* configure: Regenerate.

sim/sh64/:
	* configure: Regenerate.

sim/v850/:
	* configure: Regenerate.

sim/cr16/:
	* configure: Regenerate.

sim/moxie/:
	* configure: Regenerate.

sim/m32c/:
	* configure: Regenerate.

sim/mips/:
	* configure: Regenerate.

sim/mcore/:
	* configure: Regenerate.

sim/sh/:
	* configure: Regenerate.

gprof/:
	* Makefile.in: Regenerate.
	* configure: Regenerate.

opcodes/:
	* Makefile.in: Regenerate.
	* configure: Regenerate.

gas/:
	* Makefile.in: Regenerate.
	* configure: Regenerate.
	* doc/Makefile.in: Regenerate.

ld/:
	* configure: Regenerate.

gdb/testsuite/:
	* gdb.cell/configure: Regenerate.

binutils/:
	* Makefile.in: Regenerate.
	* configure: Regenerate.
	* doc/Makefile.in: Regenerate.

bfd/:
	* Makefile.in: Regenerate.
	* configure: Regenerate.

bfd/doc/:
	* Makefile.in: Regenerate.
@
text
@# Helper functions for option handling.                    -*- Autoconf -*-
#
#   Copyright (C) 2004, 2005, 2007, 2008, 2009 Free Software Foundation,
#   Inc.
#   Written by Gary V. Vaughan, 2004
#
# This file is free software; the Free Software Foundation gives
# unlimited permission to copy and/or distribute it, with or without
# modifications, as long as this notice is preserved.

# serial 6 ltoptions.m4

# This is to help aclocal find these macros, as it can't see m4_define.
AC_DEFUN([LTOPTIONS_VERSION], [m4_if([1])])


# _LT_MANGLE_OPTION(MACRO-NAME, OPTION-NAME)
# ------------------------------------------
m4_define([_LT_MANGLE_OPTION],
[[_LT_OPTION_]m4_bpatsubst($1__$2, [[^a-zA-Z0-9_]], [_])])


# _LT_SET_OPTION(MACRO-NAME, OPTION-NAME)
# ---------------------------------------
# Set option OPTION-NAME for macro MACRO-NAME, and if there is a
# matching handler defined, dispatch to it.  Other OPTION-NAMEs are
# saved as a flag.
m4_define([_LT_SET_OPTION],
[m4_define(_LT_MANGLE_OPTION([$1], [$2]))dnl
m4_ifdef(_LT_MANGLE_DEFUN([$1], [$2]),
        _LT_MANGLE_DEFUN([$1], [$2]),
    [m4_warning([Unknown $1 option `$2'])])[]dnl
])


# _LT_IF_OPTION(MACRO-NAME, OPTION-NAME, IF-SET, [IF-NOT-SET])
# ------------------------------------------------------------
# Execute IF-SET if OPTION is set, IF-NOT-SET otherwise.
m4_define([_LT_IF_OPTION],
[m4_ifdef(_LT_MANGLE_OPTION([$1], [$2]), [$3], [$4])])


# _LT_UNLESS_OPTIONS(MACRO-NAME, OPTION-LIST, IF-NOT-SET)
# -------------------------------------------------------
# Execute IF-NOT-SET unless all options in OPTION-LIST for MACRO-NAME
# are set.
m4_define([_LT_UNLESS_OPTIONS],
[m4_foreach([_LT_Option], m4_split(m4_normalize([$2])),
	    [m4_ifdef(_LT_MANGLE_OPTION([$1], _LT_Option),
		      [m4_define([$0_found])])])[]dnl
m4_ifdef([$0_found], [m4_undefine([$0_found])], [$3
])[]dnl
])


# _LT_SET_OPTIONS(MACRO-NAME, OPTION-LIST)
# ----------------------------------------
# OPTION-LIST is a space-separated list of Libtool options associated
# with MACRO-NAME.  If any OPTION has a matching handler declared with
# LT_OPTION_DEFINE, dispatch to that macro; otherwise complain about
# the unknown option and exit.
m4_defun([_LT_SET_OPTIONS],
[# Set options
m4_foreach([_LT_Option], m4_split(m4_normalize([$2])),
    [_LT_SET_OPTION([$1], _LT_Option)])

m4_if([$1],[LT_INIT],[
  dnl
  dnl Simply set some default values (i.e off) if boolean options were not
  dnl specified:
  _LT_UNLESS_OPTIONS([LT_INIT], [dlopen], [enable_dlopen=no
  ])
  _LT_UNLESS_OPTIONS([LT_INIT], [win32-dll], [enable_win32_dll=no
  ])
  dnl
  dnl If no reference was made to various pairs of opposing options, then
  dnl we run the default mode handler for the pair.  For example, if neither
  dnl `shared' nor `disable-shared' was passed, we enable building of shared
  dnl archives by default:
  _LT_UNLESS_OPTIONS([LT_INIT], [shared disable-shared], [_LT_ENABLE_SHARED])
  _LT_UNLESS_OPTIONS([LT_INIT], [static disable-static], [_LT_ENABLE_STATIC])
  _LT_UNLESS_OPTIONS([LT_INIT], [pic-only no-pic], [_LT_WITH_PIC])
  _LT_UNLESS_OPTIONS([LT_INIT], [fast-install disable-fast-install],
  		   [_LT_ENABLE_FAST_INSTALL])
  ])
])# _LT_SET_OPTIONS


## --------------------------------- ##
## Macros to handle LT_INIT options. ##
## --------------------------------- ##

# _LT_MANGLE_DEFUN(MACRO-NAME, OPTION-NAME)
# -----------------------------------------
m4_define([_LT_MANGLE_DEFUN],
[[_LT_OPTION_DEFUN_]m4_bpatsubst(m4_toupper([$1__$2]), [[^A-Z0-9_]], [_])])


# LT_OPTION_DEFINE(MACRO-NAME, OPTION-NAME, CODE)
# -----------------------------------------------
m4_define([LT_OPTION_DEFINE],
[m4_define(_LT_MANGLE_DEFUN([$1], [$2]), [$3])[]dnl
])# LT_OPTION_DEFINE


# dlopen
# ------
LT_OPTION_DEFINE([LT_INIT], [dlopen], [enable_dlopen=yes
])

AU_DEFUN([AC_LIBTOOL_DLOPEN],
[_LT_SET_OPTION([LT_INIT], [dlopen])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the `dlopen' option into LT_INIT's first parameter.])
])

dnl aclocal-1.4 backwards compatibility:
dnl AC_DEFUN([AC_LIBTOOL_DLOPEN], [])


# win32-dll
# ---------
# Declare package support for building win32 dll's.
LT_OPTION_DEFINE([LT_INIT], [win32-dll],
[enable_win32_dll=yes

case $host in
*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-cegcc*)
  AC_CHECK_TOOL(AS, as, false)
  AC_CHECK_TOOL(DLLTOOL, dlltool, false)
  AC_CHECK_TOOL(OBJDUMP, objdump, false)
  ;;
esac

test -z "$AS" && AS=as
_LT_DECL([], [AS],      [1], [Assembler program])dnl

test -z "$DLLTOOL" && DLLTOOL=dlltool
_LT_DECL([], [DLLTOOL], [1], [DLL creation program])dnl

test -z "$OBJDUMP" && OBJDUMP=objdump
_LT_DECL([], [OBJDUMP], [1], [Object dumper program])dnl
])# win32-dll

AU_DEFUN([AC_LIBTOOL_WIN32_DLL],
[AC_REQUIRE([AC_CANONICAL_HOST])dnl
_LT_SET_OPTION([LT_INIT], [win32-dll])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the `win32-dll' option into LT_INIT's first parameter.])
])

dnl aclocal-1.4 backwards compatibility:
dnl AC_DEFUN([AC_LIBTOOL_WIN32_DLL], [])


# _LT_ENABLE_SHARED([DEFAULT])
# ----------------------------
# implement the --enable-shared flag, and supports the `shared' and
# `disable-shared' LT_INIT options.
# DEFAULT is either `yes' or `no'.  If omitted, it defaults to `yes'.
m4_define([_LT_ENABLE_SHARED],
[m4_define([_LT_ENABLE_SHARED_DEFAULT], [m4_if($1, no, no, yes)])dnl
AC_ARG_ENABLE([shared],
    [AS_HELP_STRING([--enable-shared@@<:@@=PKGS@@:>@@],
	[build shared libraries @@<:@@default=]_LT_ENABLE_SHARED_DEFAULT[@@:>@@])],
    [p=${PACKAGE-default}
    case $enableval in
    yes) enable_shared=yes ;;
    no) enable_shared=no ;;
    *)
      enable_shared=no
      # Look at the argument we got.  We use all the common list separators.
      lt_save_ifs="$IFS"; IFS="${IFS}$PATH_SEPARATOR,"
      for pkg in $enableval; do
	IFS="$lt_save_ifs"
	if test "X$pkg" = "X$p"; then
	  enable_shared=yes
	fi
      done
      IFS="$lt_save_ifs"
      ;;
    esac],
    [enable_shared=]_LT_ENABLE_SHARED_DEFAULT)

    _LT_DECL([build_libtool_libs], [enable_shared], [0],
	[Whether or not to build shared libraries])
])# _LT_ENABLE_SHARED

LT_OPTION_DEFINE([LT_INIT], [shared], [_LT_ENABLE_SHARED([yes])])
LT_OPTION_DEFINE([LT_INIT], [disable-shared], [_LT_ENABLE_SHARED([no])])

# Old names:
AC_DEFUN([AC_ENABLE_SHARED],
[_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[shared])
])

AC_DEFUN([AC_DISABLE_SHARED],
[_LT_SET_OPTION([LT_INIT], [disable-shared])
])

AU_DEFUN([AM_ENABLE_SHARED], [AC_ENABLE_SHARED($@@)])
AU_DEFUN([AM_DISABLE_SHARED], [AC_DISABLE_SHARED($@@)])

dnl aclocal-1.4 backwards compatibility:
dnl AC_DEFUN([AM_ENABLE_SHARED], [])
dnl AC_DEFUN([AM_DISABLE_SHARED], [])



# _LT_ENABLE_STATIC([DEFAULT])
# ----------------------------
# implement the --enable-static flag, and support the `static' and
# `disable-static' LT_INIT options.
# DEFAULT is either `yes' or `no'.  If omitted, it defaults to `yes'.
m4_define([_LT_ENABLE_STATIC],
[m4_define([_LT_ENABLE_STATIC_DEFAULT], [m4_if($1, no, no, yes)])dnl
AC_ARG_ENABLE([static],
    [AS_HELP_STRING([--enable-static@@<:@@=PKGS@@:>@@],
	[build static libraries @@<:@@default=]_LT_ENABLE_STATIC_DEFAULT[@@:>@@])],
    [p=${PACKAGE-default}
    case $enableval in
    yes) enable_static=yes ;;
    no) enable_static=no ;;
    *)
     enable_static=no
      # Look at the argument we got.  We use all the common list separators.
      lt_save_ifs="$IFS"; IFS="${IFS}$PATH_SEPARATOR,"
      for pkg in $enableval; do
	IFS="$lt_save_ifs"
	if test "X$pkg" = "X$p"; then
	  enable_static=yes
	fi
      done
      IFS="$lt_save_ifs"
      ;;
    esac],
    [enable_static=]_LT_ENABLE_STATIC_DEFAULT)

    _LT_DECL([build_old_libs], [enable_static], [0],
	[Whether or not to build static libraries])
])# _LT_ENABLE_STATIC

LT_OPTION_DEFINE([LT_INIT], [static], [_LT_ENABLE_STATIC([yes])])
LT_OPTION_DEFINE([LT_INIT], [disable-static], [_LT_ENABLE_STATIC([no])])

# Old names:
AC_DEFUN([AC_ENABLE_STATIC],
[_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[static])
])

AC_DEFUN([AC_DISABLE_STATIC],
[_LT_SET_OPTION([LT_INIT], [disable-static])
])

AU_DEFUN([AM_ENABLE_STATIC], [AC_ENABLE_STATIC($@@)])
AU_DEFUN([AM_DISABLE_STATIC], [AC_DISABLE_STATIC($@@)])

dnl aclocal-1.4 backwards compatibility:
dnl AC_DEFUN([AM_ENABLE_STATIC], [])
dnl AC_DEFUN([AM_DISABLE_STATIC], [])



# _LT_ENABLE_FAST_INSTALL([DEFAULT])
# ----------------------------------
# implement the --enable-fast-install flag, and support the `fast-install'
# and `disable-fast-install' LT_INIT options.
# DEFAULT is either `yes' or `no'.  If omitted, it defaults to `yes'.
m4_define([_LT_ENABLE_FAST_INSTALL],
[m4_define([_LT_ENABLE_FAST_INSTALL_DEFAULT], [m4_if($1, no, no, yes)])dnl
AC_ARG_ENABLE([fast-install],
    [AS_HELP_STRING([--enable-fast-install@@<:@@=PKGS@@:>@@],
    [optimize for fast installation @@<:@@default=]_LT_ENABLE_FAST_INSTALL_DEFAULT[@@:>@@])],
    [p=${PACKAGE-default}
    case $enableval in
    yes) enable_fast_install=yes ;;
    no) enable_fast_install=no ;;
    *)
      enable_fast_install=no
      # Look at the argument we got.  We use all the common list separators.
      lt_save_ifs="$IFS"; IFS="${IFS}$PATH_SEPARATOR,"
      for pkg in $enableval; do
	IFS="$lt_save_ifs"
	if test "X$pkg" = "X$p"; then
	  enable_fast_install=yes
	fi
      done
      IFS="$lt_save_ifs"
      ;;
    esac],
    [enable_fast_install=]_LT_ENABLE_FAST_INSTALL_DEFAULT)

_LT_DECL([fast_install], [enable_fast_install], [0],
	 [Whether or not to optimize for fast installation])dnl
])# _LT_ENABLE_FAST_INSTALL

LT_OPTION_DEFINE([LT_INIT], [fast-install], [_LT_ENABLE_FAST_INSTALL([yes])])
LT_OPTION_DEFINE([LT_INIT], [disable-fast-install], [_LT_ENABLE_FAST_INSTALL([no])])

# Old names:
AU_DEFUN([AC_ENABLE_FAST_INSTALL],
[_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[fast-install])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you put
the `fast-install' option into LT_INIT's first parameter.])
])

AU_DEFUN([AC_DISABLE_FAST_INSTALL],
[_LT_SET_OPTION([LT_INIT], [disable-fast-install])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you put
the `disable-fast-install' option into LT_INIT's first parameter.])
])

dnl aclocal-1.4 backwards compatibility:
dnl AC_DEFUN([AC_ENABLE_FAST_INSTALL], [])
dnl AC_DEFUN([AM_DISABLE_FAST_INSTALL], [])


# _LT_WITH_PIC([MODE])
# --------------------
# implement the --with-pic flag, and support the `pic-only' and `no-pic'
# LT_INIT options.
# MODE is either `yes' or `no'.  If omitted, it defaults to `both'.
m4_define([_LT_WITH_PIC],
[AC_ARG_WITH([pic],
    [AS_HELP_STRING([--with-pic],
	[try to use only PIC/non-PIC objects @@<:@@default=use both@@:>@@])],
    [pic_mode="$withval"],
    [pic_mode=default])

test -z "$pic_mode" && pic_mode=m4_default([$1], [default])

_LT_DECL([], [pic_mode], [0], [What type of objects to build])dnl
])# _LT_WITH_PIC

LT_OPTION_DEFINE([LT_INIT], [pic-only], [_LT_WITH_PIC([yes])])
LT_OPTION_DEFINE([LT_INIT], [no-pic], [_LT_WITH_PIC([no])])

# Old name:
AU_DEFUN([AC_LIBTOOL_PICMODE],
[_LT_SET_OPTION([LT_INIT], [pic-only])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the `pic-only' option into LT_INIT's first parameter.])
])

dnl aclocal-1.4 backwards compatibility:
dnl AC_DEFUN([AC_LIBTOOL_PICMODE], [])

## ----------------- ##
## LTDL_INIT Options ##
## ----------------- ##

m4_define([_LTDL_MODE], [])
LT_OPTION_DEFINE([LTDL_INIT], [nonrecursive],
		 [m4_define([_LTDL_MODE], [nonrecursive])])
LT_OPTION_DEFINE([LTDL_INIT], [recursive],
		 [m4_define([_LTDL_MODE], [recursive])])
LT_OPTION_DEFINE([LTDL_INIT], [subproject],
		 [m4_define([_LTDL_MODE], [subproject])])

m4_define([_LTDL_TYPE], [])
LT_OPTION_DEFINE([LTDL_INIT], [installable],
		 [m4_define([_LTDL_TYPE], [installable])])
LT_OPTION_DEFINE([LTDL_INIT], [convenience],
		 [m4_define([_LTDL_TYPE], [convenience])])
@


1.4
log
@	* libtool.m4: Update to libtool 2.2.6.
	* lt~obsolete.m4: Update to libtool 2.2.6.
	* ltmain.sh: Update to libtool 2.2.6.
	* ltsugar.m4: Update to libtool 2.2.6.
	* ltversion.m4: Update to libtool 2.2.6.
	* ltoptions.m4: Update to libtool 2.2.6.
	* ltgcc.m4: Update to match changes from libtool 2.2.6.
@
text
@d3 2
a4 1
#   Copyright (C) 2004, 2005, 2007, 2008 Free Software Foundation, Inc.
d129 1
a129 1
*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-cegcc*)
d137 1
a137 1
_LT_DECL([], [AS],      [0], [Assembler program])dnl
d140 1
a140 1
_LT_DECL([], [DLLTOOL], [0], [DLL creation program])dnl
d143 1
a143 1
_LT_DECL([], [OBJDUMP], [0], [Object dumper program])dnl
@


1.3
log
@	* ltmain.sh: Update from GCC.
	* libtool.m4: Update from GCC.
	* ltsugar.m4: New. Update from GCC.
	* ltversion.m4: New. Update from GCC.
	* ltoptions.m4: New. Update from GCC.
	* ltconfig: Remove.
	* ltcf-c.sh: Remove.
	* ltcf-cxx.sh: Remove.
	* ltcf-gcj.sh: Remove.
	* src-release: Update with new libtool file list.
	* newlib/*/configure.in: invoke _LD_DECL_SED.
	* newlib/*/Makefile.am: Ensure toplevel is included in ACLOCAL_AMFLAGS.
	* Regenerate subdirectories
@
text
@d2 3
a4 3

# Copyright (C) 2004, 2005 Free Software Foundation, Inc.
# Written by Gary V. Vaughan <gary@@gnu.org>
d10 1
a10 1
# serial 3 ltoptions.m4
d16 2
a17 2
# _LT_MANGLE_OPTION(NAME)
# -----------------------
d19 1
a19 1
[[_LT_OPTION_]m4_bpatsubst($1, [[^a-zA-Z0-9_]], [_])])
d22 5
a26 4
# _LT_SET_OPTION(NAME)
# --------------------
# Set option NAME, and if there is a matching handler defined,
# dispatch to it.  Other NAMEs are saved as a flag.
d28 4
a31 4
[m4_define(_LT_MANGLE_OPTION([$1]))dnl
m4_ifdef(_LT_MANGLE_DEFUN([$1]),
        _LT_MANGLE_DEFUN([$1]),
    [m4_warning([Unknown Libtool option `$1'])])[]dnl
d35 2
a36 2
# _LT_IF_OPTION(OPTION, IF-SET, [IF-NOT-SET])
# -------------------------------------------
d39 1
a39 1
[m4_ifdef(_LT_MANGLE_OPTION([$1]), [$2], [$3])])
d42 4
a45 3
# _LT_UNLESS_OPTIONS(OPTIONS, IF-NOT-SET)
# ---------------------------------------
# Execute IF-NOT-SET if all OPTIONS are not set.
d47 2
a48 2
[m4_foreach([_LT_Option], m4_split(m4_normalize([$1])),
	    [m4_ifdef(_LT_MANGLE_OPTION(_LT_Option),
d50 1
a50 1
m4_ifdef([$0_found], [m4_undefine([$0_found])], [$2
d55 6
a60 6
# _LT_SET_OPTIONS(OPTIONS)
# ------------------------
# OPTIONS is a space-separated list of Libtool options.
# If any OPTION has a handler macro declared with LT_OPTION_DEFINE,
# dispatch to that macro; otherwise complain about the unknown option
# and exit.
d63 22
a84 19
m4_foreach([_LT_Option], m4_split(m4_normalize([$1])),
    [_LT_SET_OPTION(_LT_Option)])
dnl
dnl Simply set some default values (i.e off) if boolean options were not
dnl specified:
_LT_UNLESS_OPTIONS([dlopen], [enable_dlopen=no
])
_LT_UNLESS_OPTIONS([win32-dll], [enable_win32_dll=no
])
dnl
dnl If no reference was made to various pairs of opposing options, then
dnl we run the default mode handler for the pair.  For example, if neither
dnl `shared' nor `disable-shared' was passed, we enable building of shared
dnl archives by default:
_LT_UNLESS_OPTIONS([shared disable-shared], [_LT_ENABLE_SHARED])
_LT_UNLESS_OPTIONS([static disable-static], [_LT_ENABLE_STATIC])
_LT_UNLESS_OPTIONS([pic-only no-pic], [_LT_WITH_PIC])
_LT_UNLESS_OPTIONS([fast-install disable-fast-install],
		   [_LT_ENABLE_FAST_INSTALL])
d92 2
d95 1
a95 1
[[_LT_OPTION_DEFUN_]m4_bpatsubst(m4_toupper([$1]), [[^A-Z0-9_]], [_])])
d98 2
a99 2
# LT_OPTION_DEFINE(NAME, CODE)
# ----------------------------
d101 1
a101 1
[m4_define(_LT_MANGLE_DEFUN([$1]), [$2])[]dnl
d107 1
a107 1
LT_OPTION_DEFINE([dlopen], [enable_dlopen=yes
d111 1
a111 1
[_LT_SET_OPTION([dlopen])
d124 1
a124 1
LT_OPTION_DEFINE([win32-dll],
d128 1
a128 1
*-*-cygwin* | *-*-mingw* | *-*-pw32*)
d146 2
a147 1
[_LT_SET_OPTION([win32-dll])
d190 2
a191 2
LT_OPTION_DEFINE([shared], [_LT_ENABLE_SHARED([yes])])
LT_OPTION_DEFINE([disable-shared], [_LT_ENABLE_SHARED([no])])
d195 1
a195 1
[_LT_SET_OPTION([shared])
d199 1
a199 1
[_LT_SET_OPTION([disable-shared])
d244 2
a245 2
LT_OPTION_DEFINE([static], [_LT_ENABLE_STATIC([yes])])
LT_OPTION_DEFINE([disable-static], [_LT_ENABLE_STATIC([no])])
d249 1
a249 1
[_LT_SET_OPTION([static])
d253 1
a253 1
[_LT_SET_OPTION([disable-static])
d298 2
a299 2
LT_OPTION_DEFINE([fast-install], [_LT_ENABLE_FAST_INSTALL([yes])])
LT_OPTION_DEFINE([disable-fast-install], [_LT_ENABLE_FAST_INSTALL([no])])
d303 1
a303 1
[_LT_SET_OPTION([fast-install])
d310 1
a310 1
[_LT_SET_OPTION([disable-fast-install])
d338 2
a339 2
LT_OPTION_DEFINE([pic-only], [_LT_WITH_PIC([yes])])
LT_OPTION_DEFINE([no-pic], [_LT_WITH_PIC([no])])
d343 1
a343 1
[_LT_SET_OPTION([pic-only])
d351 18
@


1.2
log
@moved to the attic to please handling of src-support module
@
text
@d1 342
@


1.1
log
@add this momentarily, will move them to the attic soon
@
text
@@

