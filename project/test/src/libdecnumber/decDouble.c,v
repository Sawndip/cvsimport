head	1.8;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.6
	gdb_7_6-2013-04-26-release:1.6
	gdb_7_6-branch:1.6.0.2
	gdb_7_6-2013-03-12-branchpoint:1.6
	gdb_7_5_1-2012-11-29-release:1.5
	gdb_7_5-2012-08-17-release:1.5
	gdb_7_5-branch:1.5.0.14
	gdb_7_5-2012-07-18-branchpoint:1.5
	gdb_7_4_1-2012-04-26-release:1.5
	gdb_7_4-2012-01-24-release:1.5
	gdb_7_4-branch:1.5.0.12
	gdb_7_4-2011-12-13-branchpoint:1.5
	gdb_7_3_1-2011-09-04-release:1.5
	gdb_7_3-2011-07-26-release:1.5
	gdb_7_3-branch:1.5.0.10
	gdb_7_3-2011-04-01-branchpoint:1.5
	gdb_7_2-2010-09-02-release:1.5
	gdb_7_2-branch:1.5.0.8
	gdb_7_2-2010-07-07-branchpoint:1.5
	gdb_7_1-2010-03-18-release:1.5
	gdb_7_1-branch:1.5.0.6
	gdb_7_1-2010-02-18-branchpoint:1.5
	gdb_7_0_1-2009-12-22-release:1.5
	gdb_7_0-2009-10-06-release:1.5
	gdb_7_0-branch:1.5.0.4
	gdb_7_0-2009-09-16-branchpoint:1.5
	arc-sim-20090309:1.1
	msnyder-checkpoint-072509-branch:1.5.0.2
	msnyder-checkpoint-072509-branchpoint:1.5
	arc-insight_6_8-branch:1.1.0.16
	arc-insight_6_8-branchpoint:1.1
	insight_6_8-branch:1.1.0.14
	insight_6_8-branchpoint:1.1
	reverse-20081226-branch:1.1.0.12
	reverse-20081226-branchpoint:1.1
	multiprocess-20081120-branch:1.1.0.10
	multiprocess-20081120-branchpoint:1.1
	reverse-20080930-branch:1.1.0.8
	reverse-20080930-branchpoint:1.1
	reverse-20080717-branch:1.1.0.6
	reverse-20080717-branchpoint:1.1
	msnyder-reverse-20080609-branch:1.1.0.4
	msnyder-reverse-20080609-branchpoint:1.1
	gdb_6_8-2008-03-27-release:1.1
	gdb_6_8-branch:1.1.0.2
	gdb_6_8-2008-02-26-branchpoint:1.1;
locks; strict;
comment	@ * @;


1.8
date	2015.01.14.22.03.09;	author dj;	state Exp;
branches;
next	1.7;

1.7
date	2014.01.06.16.20.17;	author dj;	state Exp;
branches;
next	1.6;

1.6
date	2013.02.07.04.43.35;	author dj;	state Exp;
branches;
next	1.5;

1.5
date	2009.04.13.19.42.50;	author dj;	state Exp;
branches;
next	1.4;

1.4
date	2009.03.30.03.01.34;	author dj;	state Exp;
branches;
next	1.3;

1.3
date	2009.03.30.00.01.23;	author dj;	state Exp;
branches;
next	1.2;

1.2
date	2009.03.29.02.15.35;	author dj;	state Exp;
branches;
next	1.1;

1.1
date	2007.10.11.18.15.02;	author drow;	state Exp;
branches;
next	;


desc
@@


1.8
log
@merge from gcc
@
text
@/* decDouble module for the decNumber C Library.
   Copyright (C) 2007-2015 Free Software Foundation, Inc.
   Contributed by IBM Corporation.  Author Mike Cowlishaw.

   This file is part of GCC.

   GCC is free software; you can redistribute it and/or modify it under
   the terms of the GNU General Public License as published by the Free
   Software Foundation; either version 3, or (at your option) any later
   version.

   GCC is distributed in the hope that it will be useful, but WITHOUT ANY
   WARRANTY; without even the implied warranty of MERCHANTABILITY or
   FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
   for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/* ------------------------------------------------------------------ */
/* decDouble.c -- decDouble operations module			      */
/* ------------------------------------------------------------------ */
/* This module comprises decDouble operations (including conversions) */
/* ------------------------------------------------------------------ */

#include "decContext.h"       /* public includes */
#include "decDouble.h"	      /* .. */

/* Constant mappings for shared code */
#define DECPMAX     DECDOUBLE_Pmax
#define DECEMIN     DECDOUBLE_Emin
#define DECEMAX     DECDOUBLE_Emax
#define DECEMAXD    DECDOUBLE_EmaxD
#define DECBYTES    DECDOUBLE_Bytes
#define DECSTRING   DECDOUBLE_String
#define DECECONL    DECDOUBLE_EconL
#define DECBIAS     DECDOUBLE_Bias
#define DECLETS     DECDOUBLE_Declets
#define DECQTINY    (-DECDOUBLE_Bias)
/* parameters of next-wider format */
#define DECWBYTES   DECQUAD_Bytes
#define DECWPMAX    DECQUAD_Pmax
#define DECWECONL   DECQUAD_EconL
#define DECWBIAS    DECQUAD_Bias

/* Type and function mappings for shared code */
#define decFloat		   decDouble	  /* Type name */
#define decFloatWider		   decQuad	  /* Type name */

/* Utilities and conversions (binary results, extractors, etc.) */
#define decFloatFromBCD 	   decDoubleFromBCD
#define decFloatFromInt32	   decDoubleFromInt32
#define decFloatFromPacked	   decDoubleFromPacked
#define decFloatFromPackedChecked  decDoubleFromPackedChecked
#define decFloatFromString	   decDoubleFromString
#define decFloatFromUInt32	   decDoubleFromUInt32
#define decFloatFromWider	   decDoubleFromWider
#define decFloatGetCoefficient	   decDoubleGetCoefficient
#define decFloatGetExponent	   decDoubleGetExponent
#define decFloatSetCoefficient	   decDoubleSetCoefficient
#define decFloatSetExponent	   decDoubleSetExponent
#define decFloatShow		   decDoubleShow
#define decFloatToBCD		   decDoubleToBCD
#define decFloatToEngString	   decDoubleToEngString
#define decFloatToInt32 	   decDoubleToInt32
#define decFloatToInt32Exact	   decDoubleToInt32Exact
#define decFloatToPacked	   decDoubleToPacked
#define decFloatToString	   decDoubleToString
#define decFloatToUInt32	   decDoubleToUInt32
#define decFloatToUInt32Exact	   decDoubleToUInt32Exact
#define decFloatToWider 	   decDoubleToWider
#define decFloatZero		   decDoubleZero

/* Computational (result is a decFloat) */
#define decFloatAbs		   decDoubleAbs
#define decFloatAdd		   decDoubleAdd
#define decFloatAnd		   decDoubleAnd
#define decFloatDivide		   decDoubleDivide
#define decFloatDivideInteger	   decDoubleDivideInteger
#define decFloatFMA		   decDoubleFMA
#define decFloatInvert		   decDoubleInvert
#define decFloatLogB		   decDoubleLogB
#define decFloatMax		   decDoubleMax
#define decFloatMaxMag		   decDoubleMaxMag
#define decFloatMin		   decDoubleMin
#define decFloatMinMag		   decDoubleMinMag
#define decFloatMinus		   decDoubleMinus
#define decFloatMultiply	   decDoubleMultiply
#define decFloatNextMinus	   decDoubleNextMinus
#define decFloatNextPlus	   decDoubleNextPlus
#define decFloatNextToward	   decDoubleNextToward
#define decFloatOr		   decDoubleOr
#define decFloatPlus		   decDoublePlus
#define decFloatQuantize	   decDoubleQuantize
#define decFloatReduce		   decDoubleReduce
#define decFloatRemainder	   decDoubleRemainder
#define decFloatRemainderNear	   decDoubleRemainderNear
#define decFloatRotate		   decDoubleRotate
#define decFloatScaleB		   decDoubleScaleB
#define decFloatShift		   decDoubleShift
#define decFloatSubtract	   decDoubleSubtract
#define decFloatToIntegralValue    decDoubleToIntegralValue
#define decFloatToIntegralExact    decDoubleToIntegralExact
#define decFloatXor		   decDoubleXor

/* Comparisons */
#define decFloatCompare 	   decDoubleCompare
#define decFloatCompareSignal	   decDoubleCompareSignal
#define decFloatCompareTotal	   decDoubleCompareTotal
#define decFloatCompareTotalMag    decDoubleCompareTotalMag

/* Copies */
#define decFloatCanonical	   decDoubleCanonical
#define decFloatCopy		   decDoubleCopy
#define decFloatCopyAbs 	   decDoubleCopyAbs
#define decFloatCopyNegate	   decDoubleCopyNegate
#define decFloatCopySign	   decDoubleCopySign

/* Non-computational */
#define decFloatClass		   decDoubleClass
#define decFloatClassString	   decDoubleClassString
#define decFloatDigits		   decDoubleDigits
#define decFloatIsCanonical	   decDoubleIsCanonical
#define decFloatIsFinite	   decDoubleIsFinite
#define decFloatIsInfinite	   decDoubleIsInfinite
#define decFloatIsInteger	   decDoubleIsInteger
#define decFloatIsNaN		   decDoubleIsNaN
#define decFloatIsNormal	   decDoubleIsNormal
#define decFloatIsSignaling	   decDoubleIsSignaling
#define decFloatIsSignalling	   decDoubleIsSignalling
#define decFloatIsSigned	   decDoubleIsSigned
#define decFloatIsSubnormal	   decDoubleIsSubnormal
#define decFloatIsZero		   decDoubleIsZero
#define decFloatRadix		   decDoubleRadix
#define decFloatSameQuantum	   decDoubleSameQuantum
#define decFloatVersion 	   decDoubleVersion

#include "decNumberLocal.h"   /* local includes (need DECPMAX) */
#include "decCommon.c"	      /* non-arithmetic decFloat routines */
#include "decBasic.c"	      /* basic formats routines */

@


1.7
log
@merge from gcc
@
text
@d2 1
a2 1
   Copyright (C) 2007-2014 Free Software Foundation, Inc.
@


1.6
log
@merge from gcc
@
text
@d2 1
a2 1
   Copyright (C) 2007-2013 Free Software Foundation, Inc.
@


1.5
log
@merge from gcc
@
text
@d2 1
a2 1
   Copyright (C) 2007, 2009 Free Software Foundation, Inc.
@


1.4
log
@merge from gcc
@
text
@d2 1
a2 1
   Copyright (C) 2007 Free Software Foundation, Inc.
d9 1
a9 1
   Software Foundation; either version 2, or (at your option) any later
a11 9
   In addition to the permissions in the GNU General Public License,
   the Free Software Foundation gives you unlimited permission to link
   the compiled version of this file into combinations with other
   programs, and to distribute those combinations without any
   restriction coming from the use of this file.  (The General Public
   License restrictions do apply in other respects; for example, they
   cover modification of the file, and distribution when not linked
   into a combine executable.)

d17 8
a24 4
   You should have received a copy of the GNU General Public License
   along with GCC; see the file COPYING.  If not, write to the Free
   Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA
   02110-1301, USA.  */
@


1.3
log
@merge from gcc
@
text
@d37 1
a37 1
#include "decContext.h"	      /* public includes */
d41 3
a43 3
#define DECPMAX	    DECDOUBLE_Pmax
#define DECEMIN	    DECDOUBLE_Emin
#define DECEMAX	    DECDOUBLE_Emax
d48 2
a49 2
#define DECBIAS	    DECDOUBLE_Bias
#define DECLETS	    DECDOUBLE_Declets
d58 2
a59 2
#define decFloat	       decDouble	  /* Type name */
#define decFloatWider	       decQuad		  /* Type name */
d62 22
a83 21
#define decFloatFromBCD		decDoubleFromBCD
#define decFloatFromInt32	decDoubleFromInt32
#define decFloatFromPacked	decDoubleFromPacked
#define decFloatFromString	decDoubleFromString
#define decFloatFromUInt32	decDoubleFromUInt32
#define decFloatFromWider	decDoubleFromWider
#define decFloatGetCoefficient	decDoubleGetCoefficient
#define decFloatGetExponent	decDoubleGetExponent
#define decFloatSetCoefficient	decDoubleSetCoefficient
#define decFloatSetExponent	decDoubleSetExponent
#define decFloatShow		decDoubleShow
#define decFloatToBCD		decDoubleToBCD
#define decFloatToEngString	decDoubleToEngString
#define decFloatToInt32		decDoubleToInt32
#define decFloatToInt32Exact	decDoubleToInt32Exact
#define decFloatToPacked	decDoubleToPacked
#define decFloatToString	decDoubleToString
#define decFloatToUInt32	decDoubleToUInt32
#define decFloatToUInt32Exact	decDoubleToUInt32Exact
#define decFloatToWider		decDoubleToWider
#define decFloatZero		decDoubleZero
d86 30
a115 30
#define decFloatAbs		decDoubleAbs
#define decFloatAdd		decDoubleAdd
#define decFloatAnd		decDoubleAnd
#define decFloatDivide		decDoubleDivide
#define decFloatDivideInteger	decDoubleDivideInteger
#define decFloatFMA		decDoubleFMA
#define decFloatInvert		decDoubleInvert
#define decFloatLogB		decDoubleLogB
#define decFloatMax		decDoubleMax
#define decFloatMaxMag		decDoubleMaxMag
#define decFloatMin		decDoubleMin
#define decFloatMinMag		decDoubleMinMag
#define decFloatMinus		decDoubleMinus
#define decFloatMultiply	decDoubleMultiply
#define decFloatNextMinus	decDoubleNextMinus
#define decFloatNextPlus	decDoubleNextPlus
#define decFloatNextToward	decDoubleNextToward
#define decFloatOr		decDoubleOr
#define decFloatPlus		decDoublePlus
#define decFloatQuantize	decDoubleQuantize
#define decFloatReduce		decDoubleReduce
#define decFloatRemainder	decDoubleRemainder
#define decFloatRemainderNear	decDoubleRemainderNear
#define decFloatRotate		decDoubleRotate
#define decFloatScaleB		decDoubleScaleB
#define decFloatShift		decDoubleShift
#define decFloatSubtract	decDoubleSubtract
#define decFloatToIntegralValue decDoubleToIntegralValue
#define decFloatToIntegralExact decDoubleToIntegralExact
#define decFloatXor		decDoubleXor
d118 4
a121 4
#define decFloatCompare		decDoubleCompare
#define decFloatCompareSignal	decDoubleCompareSignal
#define decFloatCompareTotal	decDoubleCompareTotal
#define decFloatCompareTotalMag decDoubleCompareTotalMag
d124 5
a128 5
#define decFloatCanonical	decDoubleCanonical
#define decFloatCopy		decDoubleCopy
#define decFloatCopyAbs		decDoubleCopyAbs
#define decFloatCopyNegate	decDoubleCopyNegate
#define decFloatCopySign	decDoubleCopySign
d131 17
a147 18
#define decFloatClass		decDoubleClass
#define decFloatClassString	decDoubleClassString
#define decFloatDigits		decDoubleDigits
#define decFloatIsCanonical	decDoubleIsCanonical
#define decFloatIsFinite	decDoubleIsFinite
#define decFloatIsInfinite	decDoubleIsInfinite
#define decFloatIsInteger	decDoubleIsInteger
#define decFloatIsNaN		decDoubleIsNaN
#define decFloatIsNormal	decDoubleIsNormal
#define decFloatIsSignaling	decDoubleIsSignaling
#define decFloatIsSignalling	decDoubleIsSignalling
#define decFloatIsSigned	decDoubleIsSigned
#define decFloatIsSubnormal	decDoubleIsSubnormal
#define decFloatIsZero		decDoubleIsZero
#define decFloatRadix		decDoubleRadix
#define decFloatSameQuantum	decDoubleSameQuantum
#define decFloatVersion		decDoubleVersion

a152 2
/* Below here will move to shared file as completed */

@


1.2
log
@merge from gcc
@
text
@d37 1
a37 1
#include "decContext.h"       /* public includes */
d41 3
a43 3
#define DECPMAX     DECDOUBLE_Pmax
#define DECEMIN     DECDOUBLE_Emin
#define DECEMAX     DECDOUBLE_Emax
d48 2
a49 2
#define DECBIAS     DECDOUBLE_Bias
#define DECLETS     DECDOUBLE_Declets
d58 2
a59 2
#define decFloat		   decDouble	  /* Type name */
#define decFloatWider		   decQuad	  /* Type name */
d62 21
a82 22
#define decFloatFromBCD 	   decDoubleFromBCD
#define decFloatFromInt32	   decDoubleFromInt32
#define decFloatFromPacked	   decDoubleFromPacked
#define decFloatFromPackedChecked  decDoubleFromPackedChecked
#define decFloatFromString	   decDoubleFromString
#define decFloatFromUInt32	   decDoubleFromUInt32
#define decFloatFromWider	   decDoubleFromWider
#define decFloatGetCoefficient	   decDoubleGetCoefficient
#define decFloatGetExponent	   decDoubleGetExponent
#define decFloatSetCoefficient	   decDoubleSetCoefficient
#define decFloatSetExponent	   decDoubleSetExponent
#define decFloatShow		   decDoubleShow
#define decFloatToBCD		   decDoubleToBCD
#define decFloatToEngString	   decDoubleToEngString
#define decFloatToInt32 	   decDoubleToInt32
#define decFloatToInt32Exact	   decDoubleToInt32Exact
#define decFloatToPacked	   decDoubleToPacked
#define decFloatToString	   decDoubleToString
#define decFloatToUInt32	   decDoubleToUInt32
#define decFloatToUInt32Exact	   decDoubleToUInt32Exact
#define decFloatToWider 	   decDoubleToWider
#define decFloatZero		   decDoubleZero
d85 30
a114 30
#define decFloatAbs		   decDoubleAbs
#define decFloatAdd		   decDoubleAdd
#define decFloatAnd		   decDoubleAnd
#define decFloatDivide		   decDoubleDivide
#define decFloatDivideInteger	   decDoubleDivideInteger
#define decFloatFMA		   decDoubleFMA
#define decFloatInvert		   decDoubleInvert
#define decFloatLogB		   decDoubleLogB
#define decFloatMax		   decDoubleMax
#define decFloatMaxMag		   decDoubleMaxMag
#define decFloatMin		   decDoubleMin
#define decFloatMinMag		   decDoubleMinMag
#define decFloatMinus		   decDoubleMinus
#define decFloatMultiply	   decDoubleMultiply
#define decFloatNextMinus	   decDoubleNextMinus
#define decFloatNextPlus	   decDoubleNextPlus
#define decFloatNextToward	   decDoubleNextToward
#define decFloatOr		   decDoubleOr
#define decFloatPlus		   decDoublePlus
#define decFloatQuantize	   decDoubleQuantize
#define decFloatReduce		   decDoubleReduce
#define decFloatRemainder	   decDoubleRemainder
#define decFloatRemainderNear	   decDoubleRemainderNear
#define decFloatRotate		   decDoubleRotate
#define decFloatScaleB		   decDoubleScaleB
#define decFloatShift		   decDoubleShift
#define decFloatSubtract	   decDoubleSubtract
#define decFloatToIntegralValue    decDoubleToIntegralValue
#define decFloatToIntegralExact    decDoubleToIntegralExact
#define decFloatXor		   decDoubleXor
d117 4
a120 4
#define decFloatCompare 	   decDoubleCompare
#define decFloatCompareSignal	   decDoubleCompareSignal
#define decFloatCompareTotal	   decDoubleCompareTotal
#define decFloatCompareTotalMag    decDoubleCompareTotalMag
d123 5
a127 5
#define decFloatCanonical	   decDoubleCanonical
#define decFloatCopy		   decDoubleCopy
#define decFloatCopyAbs 	   decDoubleCopyAbs
#define decFloatCopyNegate	   decDoubleCopyNegate
#define decFloatCopySign	   decDoubleCopySign
d130 18
a147 17
#define decFloatClass		   decDoubleClass
#define decFloatClassString	   decDoubleClassString
#define decFloatDigits		   decDoubleDigits
#define decFloatIsCanonical	   decDoubleIsCanonical
#define decFloatIsFinite	   decDoubleIsFinite
#define decFloatIsInfinite	   decDoubleIsInfinite
#define decFloatIsInteger	   decDoubleIsInteger
#define decFloatIsNaN		   decDoubleIsNaN
#define decFloatIsNormal	   decDoubleIsNormal
#define decFloatIsSignaling	   decDoubleIsSignaling
#define decFloatIsSignalling	   decDoubleIsSignalling
#define decFloatIsSigned	   decDoubleIsSigned
#define decFloatIsSubnormal	   decDoubleIsSubnormal
#define decFloatIsZero		   decDoubleIsZero
#define decFloatRadix		   decDoubleRadix
#define decFloatSameQuantum	   decDoubleSameQuantum
#define decFloatVersion 	   decDoubleVersion
d153 2
@


1.1
log
@	* src-release (GDB_SUPPORT_DIRS): Add libdecnumber.
	* libdecnumber: New directory, imported from GCC.
@
text
@d37 1
a37 1
#include "decContext.h"	      /* public includes */
d41 3
a43 3
#define DECPMAX	    DECDOUBLE_Pmax
#define DECEMIN	    DECDOUBLE_Emin
#define DECEMAX	    DECDOUBLE_Emax
d48 2
a49 2
#define DECBIAS	    DECDOUBLE_Bias
#define DECLETS	    DECDOUBLE_Declets
d58 2
a59 2
#define decFloat	       decDouble	  /* Type name */
#define decFloatWider	       decQuad		  /* Type name */
d62 22
a83 21
#define decFloatFromBCD		decDoubleFromBCD
#define decFloatFromInt32	decDoubleFromInt32
#define decFloatFromPacked	decDoubleFromPacked
#define decFloatFromString	decDoubleFromString
#define decFloatFromUInt32	decDoubleFromUInt32
#define decFloatFromWider	decDoubleFromWider
#define decFloatGetCoefficient	decDoubleGetCoefficient
#define decFloatGetExponent	decDoubleGetExponent
#define decFloatSetCoefficient	decDoubleSetCoefficient
#define decFloatSetExponent	decDoubleSetExponent
#define decFloatShow		decDoubleShow
#define decFloatToBCD		decDoubleToBCD
#define decFloatToEngString	decDoubleToEngString
#define decFloatToInt32		decDoubleToInt32
#define decFloatToInt32Exact	decDoubleToInt32Exact
#define decFloatToPacked	decDoubleToPacked
#define decFloatToString	decDoubleToString
#define decFloatToUInt32	decDoubleToUInt32
#define decFloatToUInt32Exact	decDoubleToUInt32Exact
#define decFloatToWider		decDoubleToWider
#define decFloatZero		decDoubleZero
d86 30
a115 30
#define decFloatAbs		decDoubleAbs
#define decFloatAdd		decDoubleAdd
#define decFloatAnd		decDoubleAnd
#define decFloatDivide		decDoubleDivide
#define decFloatDivideInteger	decDoubleDivideInteger
#define decFloatFMA		decDoubleFMA
#define decFloatInvert		decDoubleInvert
#define decFloatLogB		decDoubleLogB
#define decFloatMax		decDoubleMax
#define decFloatMaxMag		decDoubleMaxMag
#define decFloatMin		decDoubleMin
#define decFloatMinMag		decDoubleMinMag
#define decFloatMinus		decDoubleMinus
#define decFloatMultiply	decDoubleMultiply
#define decFloatNextMinus	decDoubleNextMinus
#define decFloatNextPlus	decDoubleNextPlus
#define decFloatNextToward	decDoubleNextToward
#define decFloatOr		decDoubleOr
#define decFloatPlus		decDoublePlus
#define decFloatQuantize	decDoubleQuantize
#define decFloatReduce		decDoubleReduce
#define decFloatRemainder	decDoubleRemainder
#define decFloatRemainderNear	decDoubleRemainderNear
#define decFloatRotate		decDoubleRotate
#define decFloatScaleB		decDoubleScaleB
#define decFloatShift		decDoubleShift
#define decFloatSubtract	decDoubleSubtract
#define decFloatToIntegralValue decDoubleToIntegralValue
#define decFloatToIntegralExact decDoubleToIntegralExact
#define decFloatXor		decDoubleXor
d118 4
a121 4
#define decFloatCompare		decDoubleCompare
#define decFloatCompareSignal	decDoubleCompareSignal
#define decFloatCompareTotal	decDoubleCompareTotal
#define decFloatCompareTotalMag decDoubleCompareTotalMag
d124 5
a128 5
#define decFloatCanonical	decDoubleCanonical
#define decFloatCopy		decDoubleCopy
#define decFloatCopyAbs		decDoubleCopyAbs
#define decFloatCopyNegate	decDoubleCopyNegate
#define decFloatCopySign	decDoubleCopySign
d131 17
a147 18
#define decFloatClass		decDoubleClass
#define decFloatClassString	decDoubleClassString
#define decFloatDigits		decDoubleDigits
#define decFloatIsCanonical	decDoubleIsCanonical
#define decFloatIsFinite	decDoubleIsFinite
#define decFloatIsInfinite	decDoubleIsInfinite
#define decFloatIsInteger	decDoubleIsInteger
#define decFloatIsNaN		decDoubleIsNaN
#define decFloatIsNormal	decDoubleIsNormal
#define decFloatIsSignaling	decDoubleIsSignaling
#define decFloatIsSignalling	decDoubleIsSignalling
#define decFloatIsSigned	decDoubleIsSigned
#define decFloatIsSubnormal	decDoubleIsSubnormal
#define decFloatIsZero		decDoubleIsZero
#define decFloatRadix		decDoubleRadix
#define decFloatSameQuantum	decDoubleSameQuantum
#define decFloatVersion		decDoubleVersion

a152 2
/* Below here will move to shared file as completed */

@

