head	1.9;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.7
	gdb_7_6-2013-04-26-release:1.7
	gdb_7_6-branch:1.7.0.2
	gdb_7_6-2013-03-12-branchpoint:1.7
	gdb_7_5_1-2012-11-29-release:1.6
	gdb_7_5-2012-08-17-release:1.6
	gdb_7_5-branch:1.6.0.14
	gdb_7_5-2012-07-18-branchpoint:1.6
	gdb_7_4_1-2012-04-26-release:1.6
	gdb_7_4-2012-01-24-release:1.6
	gdb_7_4-branch:1.6.0.12
	gdb_7_4-2011-12-13-branchpoint:1.6
	gdb_7_3_1-2011-09-04-release:1.6
	gdb_7_3-2011-07-26-release:1.6
	gdb_7_3-branch:1.6.0.10
	gdb_7_3-2011-04-01-branchpoint:1.6
	gdb_7_2-2010-09-02-release:1.6
	gdb_7_2-branch:1.6.0.8
	gdb_7_2-2010-07-07-branchpoint:1.6
	gdb_7_1-2010-03-18-release:1.6
	gdb_7_1-branch:1.6.0.6
	gdb_7_1-2010-02-18-branchpoint:1.6
	gdb_7_0_1-2009-12-22-release:1.6
	gdb_7_0-2009-10-06-release:1.6
	gdb_7_0-branch:1.6.0.4
	gdb_7_0-2009-09-16-branchpoint:1.6
	arc-sim-20090309:1.1
	msnyder-checkpoint-072509-branch:1.6.0.2
	msnyder-checkpoint-072509-branchpoint:1.6
	arc-insight_6_8-branch:1.1.0.12
	arc-insight_6_8-branchpoint:1.1
	insight_6_8-branch:1.1.0.10
	insight_6_8-branchpoint:1.1
	reverse-20081226-branch:1.2.0.4
	reverse-20081226-branchpoint:1.2
	multiprocess-20081120-branch:1.2.0.2
	multiprocess-20081120-branchpoint:1.2
	reverse-20080930-branch:1.1.0.8
	reverse-20080930-branchpoint:1.1
	reverse-20080717-branch:1.1.0.6
	reverse-20080717-branchpoint:1.1
	msnyder-reverse-20080609-branch:1.1.0.4
	msnyder-reverse-20080609-branchpoint:1.1
	gdb_6_8-2008-03-27-release:1.1
	gdb_6_8-branch:1.1.0.2
	gdb_6_8-2008-02-26-branchpoint:1.1;
locks; strict;
comment	@ * @;


1.9
date	2015.01.14.22.03.10;	author dj;	state Exp;
branches;
next	1.8;

1.8
date	2014.01.06.16.20.18;	author dj;	state Exp;
branches;
next	1.7;

1.7
date	2013.02.07.04.43.35;	author dj;	state Exp;
branches;
next	1.6;

1.6
date	2009.04.13.19.42.50;	author dj;	state Exp;
branches;
next	1.5;

1.5
date	2009.03.30.03.01.34;	author dj;	state Exp;
branches;
next	1.4;

1.4
date	2009.03.30.00.01.24;	author dj;	state Exp;
branches;
next	1.3;

1.3
date	2009.03.29.02.15.35;	author dj;	state Exp;
branches;
next	1.2;

1.2
date	2008.10.27.18.25.21;	author dj;	state Exp;
branches;
next	1.1;

1.1
date	2007.10.11.18.15.02;	author drow;	state Exp;
branches;
next	;


desc
@@


1.9
log
@merge from gcc
@
text
@/* decSingle module header for the decNumber C Library.
   Copyright (C) 2005-2015 Free Software Foundation, Inc.
   Contributed by IBM Corporation.  Author Mike Cowlishaw.

   This file is part of GCC.

   GCC is free software; you can redistribute it and/or modify it under
   the terms of the GNU General Public License as published by the Free
   Software Foundation; either version 3, or (at your option) any later
   version.

   GCC is distributed in the hope that it will be useful, but WITHOUT ANY
   WARRANTY; without even the implied warranty of MERCHANTABILITY or
   FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
   for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/* ------------------------------------------------------------------ */
/* decSingle.h -- Decimal 32-bit format module header		      */
/* ------------------------------------------------------------------ */

#if !defined(DECSINGLE)
  #define DECSINGLE

  #define DECSINGLENAME       "decSingle"	      /* Short name   */
  #define DECSINGLETITLE      "Decimal 32-bit datum"  /* Verbose name */
  #define DECSINGLEAUTHOR     "Mike Cowlishaw"	      /* Who to blame */

  /* parameters for decSingles */
  #define DECSINGLE_Bytes    4	   /* length			      */
  #define DECSINGLE_Pmax     7	   /* maximum precision (digits)      */
  #define DECSINGLE_Emin   -95	   /* minimum adjusted exponent       */
  #define DECSINGLE_Emax    96	   /* maximum adjusted exponent       */
  #define DECSINGLE_EmaxD    3	   /* maximum exponent digits	      */
  #define DECSINGLE_Bias   101	   /* bias for the exponent	      */
  #define DECSINGLE_String  16	   /* maximum string length, +1       */
  #define DECSINGLE_EconL    6	   /* exponent continuation length    */
  #define DECSINGLE_Declets  2	   /* count of declets		      */
  /* highest biased exponent (Elimit-1) */
  #define DECSINGLE_Ehigh (DECSINGLE_Emax + DECSINGLE_Bias - (DECSINGLE_Pmax-1))

  /* Required includes						      */
  #include "decContext.h"
  #include "decQuad.h"
  #include "decDouble.h"

  /* The decSingle decimal 32-bit type, accessible by all sizes */
  typedef union {
    uint8_t   bytes[DECSINGLE_Bytes];	/* fields: 1, 5, 6, 20 bits */
    uint16_t shorts[DECSINGLE_Bytes/2];
    uint32_t  words[DECSINGLE_Bytes/4];
    } decSingle;

  /* ---------------------------------------------------------------- */
  /* Routines -- implemented as decFloat routines in common files     */
  /* ---------------------------------------------------------------- */

  #include "decSingleSymbols.h"

  /* Utilities (binary argument(s) or result, extractors, etc.) */
  extern decSingle * decSingleFromBCD(decSingle *, int32_t, const uint8_t *, int32_t);
  extern decSingle * decSingleFromPacked(decSingle *, int32_t, const uint8_t *);
  extern decSingle * decSingleFromPackedChecked(decSingle *, int32_t, const uint8_t *);
  extern decSingle * decSingleFromString(decSingle *, const char *, decContext *);
  extern decSingle * decSingleFromWider(decSingle *, const decDouble *, decContext *);
  extern int32_t     decSingleGetCoefficient(const decSingle *, uint8_t *);
  extern int32_t     decSingleGetExponent(const decSingle *);
  extern decSingle * decSingleSetCoefficient(decSingle *, const uint8_t *, int32_t);
  extern decSingle * decSingleSetExponent(decSingle *, decContext *, int32_t);
  extern void	     decSingleShow(const decSingle *, const char *);
  extern int32_t     decSingleToBCD(const decSingle *, int32_t *, uint8_t *);
  extern char	   * decSingleToEngString(const decSingle *, char *);
  extern int32_t     decSingleToPacked(const decSingle *, int32_t *, uint8_t *);
  extern char	   * decSingleToString(const decSingle *, char *);
  extern decDouble * decSingleToWider(const decSingle *, decDouble *);
  extern decSingle * decSingleZero(decSingle *);

  /* (No Arithmetic routines for decSingle) */

  /* Non-computational */
  extern uint32_t     decSingleRadix(const decSingle *);
  extern const char * decSingleVersion(void);

  /* decNumber conversions; these are implemented as macros so as not  */
  /* to force a dependency on decimal32 and decNumber in decSingle.    */
  /* decSingleFromNumber returns a decimal32 * to avoid warnings.      */
  #define decSingleToNumber(dq, dn) decimal32ToNumber((decimal32 *)(dq), dn)
  #define decSingleFromNumber(dq, dn, set) decimal32FromNumber((decimal32 *)(dq), dn, set)

#endif
@


1.8
log
@merge from gcc
@
text
@d2 1
a2 1
   Copyright (C) 2005-2014 Free Software Foundation, Inc.
@


1.7
log
@merge from gcc
@
text
@d2 1
a2 1
   Copyright (C) 2005-2013 Free Software Foundation, Inc.
@


1.6
log
@merge from gcc
@
text
@d2 1
a2 1
   Copyright (C) 2005, 2009 Free Software Foundation, Inc.
@


1.5
log
@merge from gcc
@
text
@d2 1
a2 1
   Copyright (C) 2005 Free Software Foundation, Inc.
d9 1
a9 1
   Software Foundation; either version 2, or (at your option) any later
a11 9
   In addition to the permissions in the GNU General Public License,
   the Free Software Foundation gives you unlimited permission to link
   the compiled version of this file into combinations with other
   programs, and to distribute those combinations without any
   restriction coming from the use of this file.  (The General Public
   License restrictions do apply in other respects; for example, they
   cover modification of the file, and distribution when not linked
   into a combine executable.)

d17 8
a24 4
   You should have received a copy of the GNU General Public License
   along with GCC; see the file COPYING.  If not, write to the Free
   Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA
   02110-1301, USA.  */
@


1.4
log
@merge from gcc
@
text
@a33 2
/* Please see decFloats.h for an overview and documentation details.  */
/* ------------------------------------------------------------------ */
d38 1
a38 1
  #define DECSINGLENAME	      "decSingle"	      /* Short name   */
d45 2
a46 2
  #define DECSINGLE_Emin   -95	   /* minimum adjusted exponent	      */
  #define DECSINGLE_Emax    96	   /* maximum adjusted exponent	      */
d49 1
a49 1
  #define DECSINGLE_String  16	   /* maximum string length, +1	      */
d60 1
a60 1
  /* The decSingle decimal 32-bit type, accessible by various types */
d62 1
a62 1
    uint8_t bytes[DECSINGLE_Bytes];	/* fields: 1, 5, 6, 20 bits */
d64 1
a64 1
    uint32_t words[DECSINGLE_Bytes/4];
d76 1
d99 1
d101 1
a101 1
  #define decSingleFromNumber(dq, dn, set) (decSingle *)decimal32FromNumber((decimal32 *)(dq), dn, set)
@


1.3
log
@merge from gcc
@
text
@d34 2
d40 1
a40 1
  #define DECSINGLENAME       "decSingle"	      /* Short name   */
d47 2
a48 2
  #define DECSINGLE_Emin   -95	   /* minimum adjusted exponent       */
  #define DECSINGLE_Emax    96	   /* maximum adjusted exponent       */
d51 1
a51 1
  #define DECSINGLE_String  16	   /* maximum string length, +1       */
d62 1
a62 1
  /* The decSingle decimal 32-bit type, accessible by all sizes */
d64 1
a64 1
    uint8_t   bytes[DECSINGLE_Bytes];	/* fields: 1, 5, 6, 20 bits */
d66 1
a66 1
    uint32_t  words[DECSINGLE_Bytes/4];
a77 1
  extern decSingle * decSingleFromPackedChecked(decSingle *, int32_t, const uint8_t *);
a99 1
  /* decSingleFromNumber returns a decimal32 * to avoid warnings.      */
d101 1
a101 1
  #define decSingleFromNumber(dq, dn, set) decimal32FromNumber((decimal32 *)(dq), dn, set)
@


1.2
log
@merge from gcc
@
text
@a33 2
/* Please see decFloats.h for an overview and documentation details.  */
/* ------------------------------------------------------------------ */
d38 1
a38 1
  #define DECSINGLENAME	      "decSingle"	      /* Short name   */
d45 2
a46 2
  #define DECSINGLE_Emin   -95	   /* minimum adjusted exponent	      */
  #define DECSINGLE_Emax    96	   /* maximum adjusted exponent	      */
d49 1
a49 1
  #define DECSINGLE_String  16	   /* maximum string length, +1	      */
d60 1
a60 1
  /* The decSingle decimal 32-bit type, accessible by various types */
d62 1
a62 1
    uint8_t bytes[DECSINGLE_Bytes];	/* fields: 1, 5, 6, 20 bits */
d64 1
a64 1
    uint32_t words[DECSINGLE_Bytes/4];
d76 1
d99 1
d101 1
a101 1
  #define decSingleFromNumber(dq, dn, set) (decSingle *)decimal32FromNumber((decimal32 *)(dq), dn, set)
@


1.1
log
@	* src-release (GDB_SUPPORT_DIRS): Add libdecnumber.
	* libdecnumber: New directory, imported from GCC.
@
text
@d62 2
a63 2
  /* The decSingle decimal 32-bit type, accessible by bytes */
  typedef struct {
d65 2
@

