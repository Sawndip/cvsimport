head	1.13;
access;
symbols
	sid-snapshot-20180601:1.13
	sid-snapshot-20180501:1.13
	sid-snapshot-20180401:1.13
	sid-snapshot-20180301:1.13
	sid-snapshot-20180201:1.13
	sid-snapshot-20180101:1.13
	sid-snapshot-20171201:1.13
	sid-snapshot-20171101:1.13
	sid-snapshot-20171001:1.13
	sid-snapshot-20170901:1.13
	sid-snapshot-20170801:1.13
	sid-snapshot-20170701:1.13
	sid-snapshot-20170601:1.13
	sid-snapshot-20170501:1.13
	sid-snapshot-20170401:1.13
	sid-snapshot-20170301:1.13
	sid-snapshot-20170201:1.13
	sid-snapshot-20170101:1.13
	sid-snapshot-20161201:1.13
	sid-snapshot-20161101:1.13
	sid-snapshot-20160901:1.13
	sid-snapshot-20160801:1.13
	sid-snapshot-20160701:1.13
	sid-snapshot-20160601:1.13
	sid-snapshot-20160501:1.13
	sid-snapshot-20160401:1.13
	sid-snapshot-20160301:1.13
	sid-snapshot-20160201:1.13
	sid-snapshot-20160101:1.13
	sid-snapshot-20151201:1.13
	sid-snapshot-20151101:1.13
	sid-snapshot-20151001:1.13
	sid-snapshot-20150901:1.13
	sid-snapshot-20150801:1.13
	sid-snapshot-20150701:1.13
	sid-snapshot-20150601:1.13
	sid-snapshot-20150501:1.13
	sid-snapshot-20150401:1.13
	cygwin-1_7_35-release:1.13
	sid-snapshot-20150301:1.13
	cygwin-1_7_34-release:1.13
	sid-snapshot-20150201:1.13
	sid-snapshot-20150101:1.13
	sid-snapshot-20141201:1.13
	cygwin-1_7_33-release:1.13
	sid-snapshot-20141101:1.13
	sid-snapshot-20141001:1.13
	sid-snapshot-20140901:1.13
	cygwin-1_7_32-release:1.13
	sid-snapshot-20140801:1.13
	cygwin-1_7_31-release:1.13
	sid-snapshot-20140701:1.13
	sid-snapshot-20140601:1.13
	cygwin-1_7_30-release:1.13
	sid-snapshot-20140501:1.13
	cygwin-1_7_29-release:1.13
	sid-snapshot-20140401:1.13
	sid-snapshot-20140301:1.13
	cygwin-1_7_28-release:1.13
	sid-snapshot-20140201:1.13
	sid-snapshot-20140101:1.13
	sid-snapshot-20131201:1.13
	cygwin-1_7_27-release:1.13
	cygwin-1_7_26-release:1.13
	sid-snapshot-20131101:1.13
	sid-snapshot-20131001:1.13
	binutils-2_24-branch:1.13.0.24
	binutils-2_24-branchpoint:1.13
	binutils-2_21_1:1.13
	sid-snapshot-20130901:1.13
	cygwin-1_7_25-release:1.13
	gdb_7_6_1-2013-08-30-release:1.13
	cygwin-1_7_24-release:1.13
	cygwin-1_7_23-release:1.13
	sid-snapshot-20130801:1.13
	cygwin-1_7_22-release:1.13
	cygwin-1_7_21-release:1.13
	sid-snapshot-20130701:1.13
	cygwin-1_7_20-release:1.13
	cygwin-1_7_19-release:1.13
	sid-snapshot-20130601:1.13
	sid-snapshot-20130501:1.13
	gdb_7_6-2013-04-26-release:1.13
	cygwin-64bit-postmerge:1.13
	cygwin-64bit-premerge-branch:1.13.0.22
	cygwin-64bit-premerge:1.13
	sid-snapshot-20130401:1.13
	binutils-2_23_2:1.13
	gdb_7_6-branch:1.13.0.20
	gdb_7_6-2013-03-12-branchpoint:1.13
	cygwin-1_7_18-release:1.13
	sid-snapshot-20130301:1.13
	sid-snapshot-20130201:1.13
	sid-snapshot-20130101:1.13
	sid-snapshot-20121201:1.13
	gdb_7_5_1-2012-11-29-release:1.13
	binutils-2_23_1:1.13
	sid-snapshot-20121101:1.13
	binutils-2_23:1.13
	cygwin-1_7_17-release:1.13
	sid-snapshot-20121001:1.13
	sid-snapshot-20120901:1.13
	gdb_7_5-2012-08-17-release:1.13
	cygwin-64bit-branch:1.13.0.18
	sid-snapshot-20120801:1.13
	binutils-2_23-branch:1.13.0.16
	binutils-2_23-branchpoint:1.13
	cygwin-1_7_16-release:1.13
	gdb_7_5-branch:1.13.0.14
	gdb_7_5-2012-07-18-branchpoint:1.13
	sid-snapshot-20120701:1.13
	sid-snapshot-20120601:1.13
	cygwin-1_7_15-release:1.13
	sid-snapshot-20120501:1.13
	binutils-2_22_branch:1.13.0.12
	gdb_7_4_1-2012-04-26-release:1.13
	cygwin-1_7_14_2-release:1.13
	cygwin-1_7_14-release:1.13
	cygwin-1_7_12-release:1.13
	sid-snapshot-20120401:1.13
	sid-snapshot-20120301:1.13
	cygwin-1_7_11-release:1.13
	cygwin-1_7_10-release:1.13
	sid-snapshot-20120201:1.13
	gdb_7_4-2012-01-24-release:1.13
	sid-snapshot-20120101:1.13
	gdb_7_4-branch:1.13.0.10
	gdb_7_4-2011-12-13-branchpoint:1.13
	sid-snapshot-20111201:1.13
	binutils-2_22:1.13
	sid-snapshot-20111101:1.13
	sid-snapshot-20111001:1.13
	binutils-2_22-branch:1.13.0.8
	binutils-2_22-branchpoint:1.13
	gdb_7_3_1-2011-09-04-release:1.13
	sid-snapshot-20110901:1.13
	sid-snapshot-20110801:1.13
	gdb_7_3-2011-07-26-release:1.13
	sid-snapshot-20110701:1.13
	sid-snapshot-20110601:1.13
	sid-snapshot-20110501:1.13
	gdb_7_3-branch:1.13.0.6
	gdb_7_3-2011-04-01-branchpoint:1.13
	sid-snapshot-20110401:1.13
	cygwin-1_7_9-release:1.13
	sid-snapshot-20110301:1.13
	cygwin-1_7_8-release:1.13
	sid-snapshot-20110201:1.13
	sid-snapshot-20110101:1.13
	binutils-2_21:1.13
	sid-snapshot-20101201:1.13
	binutils-2_21-branch:1.13.0.4
	binutils-2_21-branchpoint:1.13
	sid-snapshot-20101101:1.13
	sid-snapshot-20101001:1.13
	binutils-2_20_1:1.12
	gdb_7_2-2010-09-02-release:1.13
	sid-snapshot-20100901:1.13
	cygwin-1_7_7-release:1.13
	sid-snapshot-20100801:1.13
	gdb_7_2-branch:1.13.0.2
	gdb_7_2-2010-07-07-branchpoint:1.13
	sid-snapshot-20100701:1.13
	sid-snapshot-20100601:1.13
	sid-snapshot-20100501:1.13
	cygwin-1_7_5-release:1.12
	cygwin-1_7_4-release:1.12
	sid-snapshot-20100401:1.12
	cygwin-1_7_3-release:1.12
	cygwin-1_7_2-release:1.12
	gdb_7_1-2010-03-18-release:1.12
	sid-snapshot-20100301:1.12
	gdb_7_1-branch:1.12.0.72
	gdb_7_1-2010-02-18-branchpoint:1.12
	sid-snapshot-20100201:1.12
	sid-snapshot-20100101:1.12
	gdb_7_0_1-2009-12-22-release:1.12
	cygwin-1_7_1-release:1.12
	sid-snapshot-20091201:1.12
	sid-snapshot-20091101:1.12
	binutils-2_20:1.12
	gdb_7_0-2009-10-06-release:1.12
	sid-snapshot-20091001:1.12
	gdb_7_0-branch:1.12.0.70
	gdb_7_0-2009-09-16-branchpoint:1.12
	arc-sim-20090309:1.12
	binutils-arc-20081103-branch:1.12.0.68
	binutils-arc-20081103-branchpoint:1.12
	binutils-2_20-branch:1.12.0.66
	binutils-2_20-branchpoint:1.12
	sid-snapshot-20090901:1.12
	sid-snapshot-20090801:1.12
	msnyder-checkpoint-072509-branch:1.12.0.64
	msnyder-checkpoint-072509-branchpoint:1.12
	sid-snapshot-20090701:1.12
	dje-cgen-play1-branch:1.12.0.62
	dje-cgen-play1-branchpoint:1.12
	sid-snapshot-20090601:1.12
	sid-snapshot-20090501:1.12
	sid-snapshot-20090401:1.12
	arc-20081103-branch:1.12.0.60
	arc-20081103-branchpoint:1.12
	arc-insight_6_8-branch:1.12.0.58
	arc-insight_6_8-branchpoint:1.12
	insight_6_8-branch:1.12.0.56
	insight_6_8-branchpoint:1.12
	sid-snapshot-20090301:1.12
	binutils-2_19_1:1.12
	sid-snapshot-20090201:1.12
	sid-snapshot-20090101:1.12
	reverse-20081226-branch:1.12.0.54
	reverse-20081226-branchpoint:1.12
	sid-snapshot-20081201:1.12
	multiprocess-20081120-branch:1.12.0.52
	multiprocess-20081120-branchpoint:1.12
	sid-snapshot-20081101:1.12
	binutils-2_19:1.12
	sid-snapshot-20081001:1.12
	reverse-20080930-branch:1.12.0.50
	reverse-20080930-branchpoint:1.12
	binutils-2_19-branch:1.12.0.48
	binutils-2_19-branchpoint:1.12
	sid-snapshot-20080901:1.12
	sid-snapshot-20080801:1.12
	reverse-20080717-branch:1.12.0.46
	reverse-20080717-branchpoint:1.12
	sid-snapshot-20080701:1.12
	msnyder-reverse-20080609-branch:1.12.0.44
	msnyder-reverse-20080609-branchpoint:1.12
	drow-reverse-20070409-branch:1.12.0.42
	drow-reverse-20070409-branchpoint:1.12
	sid-snapshot-20080601:1.12
	sid-snapshot-20080501:1.12
	sid-snapshot-20080403:1.12
	sid-snapshot-20080401:1.12
	gdb_6_8-2008-03-27-release:1.12
	sid-snapshot-20080301:1.12
	gdb_6_8-branch:1.12.0.40
	gdb_6_8-2008-02-26-branchpoint:1.12
	sid-snapshot-20080201:1.12
	sid-snapshot-20080101:1.12
	sid-snapshot-20071201:1.12
	sid-snapshot-20071101:1.12
	gdb_6_7_1-2007-10-29-release:1.12
	gdb_6_7-2007-10-10-release:1.12
	sid-snapshot-20071001:1.12
	gdb_6_7-branch:1.12.0.38
	gdb_6_7-2007-09-07-branchpoint:1.12
	binutils-2_18:1.12
	binutils-2_18-branch:1.12.0.36
	binutils-2_18-branchpoint:1.12
	insight_6_6-20070208-release:1.12
	binutils-csl-coldfire-4_1-32:1.12
	binutils-csl-sourcerygxx-4_1-32:1.12
	gdb_6_6-2006-12-18-release:1.12
	binutils-csl-innovasic-fido-3_4_4-33:1.12
	binutils-csl-sourcerygxx-3_4_4-32:1.11
	binutils-csl-coldfire-4_1-30:1.12
	binutils-csl-sourcerygxx-4_1-30:1.12
	binutils-csl-coldfire-4_1-28:1.12
	binutils-csl-sourcerygxx-4_1-29:1.12
	binutils-csl-sourcerygxx-4_1-28:1.12
	gdb_6_6-branch:1.12.0.34
	gdb_6_6-2006-11-15-branchpoint:1.12
	binutils-csl-arm-2006q3-27:1.12
	binutils-csl-sourcerygxx-4_1-27:1.12
	binutils-csl-arm-2006q3-26:1.12
	binutils-csl-sourcerygxx-4_1-26:1.12
	binutils-csl-sourcerygxx-4_1-25:1.12
	binutils-csl-sourcerygxx-4_1-24:1.12
	binutils-csl-sourcerygxx-4_1-23:1.12
	insight_6_5-20061003-release:1.12
	gdb-csl-symbian-6_4_50_20060226-12:1.12
	binutils-csl-sourcerygxx-4_1-21:1.12
	binutils-csl-arm-2006q3-21:1.12
	binutils-csl-sourcerygxx-4_1-22:1.12
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.12
	binutils-csl-sourcerygxx-4_1-20:1.12
	binutils-csl-arm-2006q3-19:1.12
	binutils-csl-sourcerygxx-4_1-19:1.12
	binutils-csl-sourcerygxx-4_1-18:1.12
	binutils-csl-renesas-4_1-9:1.12
	gdb-csl-sourcerygxx-3_4_4-25:1.12
	binutils-csl-sourcerygxx-3_4_4-25:1.11
	nickrob-async-20060828-mergepoint:1.12
	gdb-csl-symbian-6_4_50_20060226-11:1.12
	binutils-csl-renesas-4_1-8:1.12
	binutils-csl-renesas-4_1-7:1.12
	binutils-csl-renesas-4_1-6:1.12
	gdb-csl-sourcerygxx-4_1-17:1.12
	binutils-csl-sourcerygxx-4_1-17:1.12
	gdb-csl-20060226-branch-local-2:1.12
	cr-0x5f1:1.12.0.32
	gdb-csl-sourcerygxx-4_1-14:1.12
	binutils-csl-sourcerygxx-4_1-14:1.12
	binutils-csl-sourcerygxx-4_1-15:1.12
	gdb-csl-sourcerygxx-4_1-13:1.12
	binutils-csl-sourcerygxx-4_1-13:1.12
	binutils-2_17:1.12
	gdb-csl-sourcerygxx-4_1-12:1.12
	binutils-csl-sourcerygxx-4_1-12:1.12
	gdb-csl-sourcerygxx-3_4_4-21:1.12
	binutils-csl-sourcerygxx-3_4_4-21:1.12
	gdb_6_5-20060621-release:1.12
	binutils-csl-wrs-linux-3_4_4-24:1.11
	binutils-csl-wrs-linux-3_4_4-23:1.11
	gdb-csl-sourcerygxx-4_1-9:1.12
	binutils-csl-sourcerygxx-4_1-9:1.12
	gdb-csl-sourcerygxx-4_1-8:1.12
	binutils-csl-sourcerygxx-4_1-8:1.12
	gdb-csl-sourcerygxx-4_1-7:1.12
	binutils-csl-sourcerygxx-4_1-7:1.12
	gdb-csl-arm-2006q1-6:1.12
	binutils-csl-arm-2006q1-6:1.12
	gdb-csl-sourcerygxx-4_1-6:1.12
	binutils-csl-sourcerygxx-4_1-6:1.12
	binutils-csl-wrs-linux-3_4_4-22:1.11
	gdb-csl-symbian-6_4_50_20060226-10:1.12
	gdb-csl-symbian-6_4_50_20060226-9:1.12
	gdb-csl-symbian-6_4_50_20060226-8:1.12
	gdb-csl-coldfire-4_1-11:1.12
	binutils-csl-coldfire-4_1-11:1.12
	gdb-csl-sourcerygxx-3_4_4-19:1.12
	binutils-csl-sourcerygxx-3_4_4-19:1.12
	gdb-csl-coldfire-4_1-10:1.12
	gdb_6_5-branch:1.12.0.30
	gdb_6_5-2006-05-14-branchpoint:1.12
	binutils-csl-coldfire-4_1-10:1.12
	gdb-csl-sourcerygxx-4_1-5:1.12
	binutils-csl-sourcerygxx-4_1-5:1.12
	nickrob-async-20060513-branch:1.12.0.28
	nickrob-async-20060513-branchpoint:1.12
	gdb-csl-sourcerygxx-4_1-4:1.12
	binutils-csl-sourcerygxx-4_1-4:1.12
	msnyder-reverse-20060502-branch:1.12.0.26
	msnyder-reverse-20060502-branchpoint:1.12
	binutils-csl-wrs-linux-3_4_4-21:1.11
	gdb-csl-morpho-4_1-4:1.12
	binutils-csl-morpho-4_1-4:1.12
	gdb-csl-sourcerygxx-3_4_4-17:1.12
	binutils-csl-sourcerygxx-3_4_4-17:1.12
	binutils-csl-wrs-linux-3_4_4-20:1.11
	readline_5_1-import-branch:1.12.0.24
	readline_5_1-import-branchpoint:1.12
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.12
	binutils-2_17-branch:1.12.0.22
	binutils-2_17-branchpoint:1.12
	gdb-csl-symbian-20060226-branch:1.12.0.20
	gdb-csl-symbian-20060226-branchpoint:1.12
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.12
	msnyder-reverse-20060331-branch:1.12.0.18
	msnyder-reverse-20060331-branchpoint:1.12
	binutils-csl-2_17-branch:1.12.0.16
	binutils-csl-2_17-branchpoint:1.12
	gdb-csl-available-20060303-branch:1.12.0.14
	gdb-csl-available-20060303-branchpoint:1.12
	gdb-csl-20060226-branch:1.12.0.12
	gdb-csl-20060226-branchpoint:1.12
	gdb_6_4-20051202-release:1.12
	msnyder-fork-checkpoint-branch:1.12.0.10
	msnyder-fork-checkpoint-branchpoint:1.12
	gdb-csl-gxxpro-6_3-branch:1.12.0.8
	gdb-csl-gxxpro-6_3-branchpoint:1.12
	gdb_6_4-branch:1.12.0.6
	gdb_6_4-2005-11-01-branchpoint:1.12
	gdb-csl-arm-20051020-branch:1.12.0.4
	gdb-csl-arm-20051020-branchpoint:1.12
	binutils-csl-gxxpro-3_4-branch:1.11.0.8
	binutils-csl-gxxpro-3_4-branchpoint:1.11
	binutils-2_16_1:1.11
	msnyder-tracepoint-checkpoint-branch:1.12.0.2
	msnyder-tracepoint-checkpoint-branchpoint:1.12
	gdb-csl-arm-20050325-2005-q1b:1.11
	binutils-csl-arm-2005q1b:1.11
	binutils-2_16:1.11
	gdb-csl-arm-20050325-2005-q1a:1.11
	binutils-csl-arm-2005q1a:1.11
	csl-arm-20050325-branch:1.11.0.6
	csl-arm-20050325-branchpoint:1.11
	binutils-csl-arm-2005q1-branch:1.11.0.4
	binutils-csl-arm-2005q1-branchpoint:1.11
	binutils-2_16-branch:1.11.0.2
	binutils-2_16-branchpoint:1.11
	csl-arm-2004-q3d:1.10
	gdb_6_3-20041109-release:1.10
	gdb_6_3-branch:1.10.0.24
	gdb_6_3-20041019-branchpoint:1.10
	csl-arm-2004-q3:1.10
	drow_intercu-merge-20040921:1.10
	drow_intercu-merge-20040915:1.10
	jimb-gdb_6_2-e500-branch:1.10.0.26
	jimb-gdb_6_2-e500-branchpoint:1.10
	gdb_6_2-20040730-release:1.10
	gdb_6_2-branch:1.10.0.22
	gdb_6_2-2004-07-10-gmt-branchpoint:1.10
	gdb_6_1_1-20040616-release:1.10
	binutils-2_15:1.10
	binutils-2_15-branchpoint:1.10
	csl-arm-2004-q1a:1.10
	csl-arm-2004-q1:1.10
	gdb_6_1-2004-04-05-release:1.10
	drow_intercu-merge-20040402:1.10
	drow_intercu-merge-20040327:1.10
	ezannoni_pie-20040323-branch:1.10.0.20
	ezannoni_pie-20040323-branchpoint:1.10
	cagney_tramp-20040321-mergepoint:1.10
	cagney_tramp-20040309-branch:1.10.0.18
	cagney_tramp-20040309-branchpoint:1.10
	gdb_6_1-branch:1.10.0.16
	gdb_6_1-2004-03-01-gmt-branchpoint:1.10
	drow_intercu-20040221-branch:1.10.0.14
	drow_intercu-20040221-branchpoint:1.10
	binutils-2_15-branch:1.10.0.12
	cagney_bfdfile-20040213-branch:1.10.0.10
	cagney_bfdfile-20040213-branchpoint:1.10
	drow-cplus-merge-20040208:1.10
	carlton_dictionary-20040126-merge:1.10
	cagney_bigcore-20040122-branch:1.10.0.8
	cagney_bigcore-20040122-branchpoint:1.10
	drow-cplus-merge-20040113:1.10
	csl-arm-2003-q4:1.10
	drow-cplus-merge-20031224:1.10
	drow-cplus-merge-20031220:1.10
	carlton_dictionary-20031215-merge:1.10
	drow-cplus-merge-20031214:1.10
	carlton-dictionary-20031111-merge:1.10
	gdb_6_0-2003-10-04-release:1.9
	kettenis_sparc-20030918-branch:1.10.0.6
	kettenis_sparc-20030918-branchpoint:1.10
	carlton_dictionary-20030917-merge:1.10
	ezannoni_pie-20030916-branchpoint:1.10
	ezannoni_pie-20030916-branch:1.10.0.4
	cagney_x86i386-20030821-branch:1.10.0.2
	cagney_x86i386-20030821-branchpoint:1.10
	carlton_dictionary-20030805-merge:1.9
	carlton_dictionary-20030627-merge:1.9
	gdb_6_0-branch:1.9.0.8
	gdb_6_0-2003-06-23-branchpoint:1.9
	jimb-ppc64-linux-20030613-branch:1.9.0.6
	jimb-ppc64-linux-20030613-branchpoint:1.9
	binutils-2_14:1.5
	cagney_convert-20030606-branch:1.9.0.4
	cagney_convert-20030606-branchpoint:1.9
	cagney_writestrings-20030508-branch:1.5.0.26
	cagney_writestrings-20030508-branchpoint:1.5
	jimb-ppc64-linux-20030528-branch:1.9.0.2
	jimb-ppc64-linux-20030528-branchpoint:1.9
	carlton_dictionary-20030523-merge:1.8
	cagney_fileio-20030521-branch:1.8.0.2
	cagney_fileio-20030521-branchpoint:1.8
	kettenis_i386newframe-20030517-mergepoint:1.5
	jimb-ppc64-linux-20030509-branch:1.5.0.24
	jimb-ppc64-linux-20030509-branchpoint:1.5
	kettenis_i386newframe-20030504-mergepoint:1.5
	carlton_dictionary-20030430-merge:1.5
	binutils-2_14-branch:1.5.0.22
	binutils-2_14-branchpoint:1.5
	kettenis_i386newframe-20030419-branch:1.5.0.20
	kettenis_i386newframe-20030419-branchpoint:1.5
	carlton_dictionary-20030416-merge:1.5
	cagney_frameaddr-20030409-mergepoint:1.5
	kettenis_i386newframe-20030406-branch:1.5.0.18
	kettenis_i386newframe-20030406-branchpoint:1.5
	cagney_frameaddr-20030403-branchpoint:1.5
	cagney_frameaddr-20030403-branch:1.5.0.16
	cagney_framebase-20030330-mergepoint:1.5
	cagney_framebase-20030326-branch:1.5.0.14
	cagney_framebase-20030326-branchpoint:1.5
	cagney_lazyid-20030317-branch:1.5.0.12
	cagney_lazyid-20030317-branchpoint:1.5
	kettenis-i386newframe-20030316-mergepoint:1.5
	offbyone-20030313-branch:1.5.0.10
	offbyone-20030313-branchpoint:1.5
	kettenis-i386newframe-20030308-branch:1.5.0.8
	kettenis-i386newframe-20030308-branchpoint:1.5
	carlton_dictionary-20030305-merge:1.5
	cagney_offbyone-20030303-branch:1.5.0.6
	cagney_offbyone-20030303-branchpoint:1.5
	w32api-2_2:1.5
	mingw-runtime-2_4:1.5
	carlton_dictionary-20030207-merge:1.5
	interps-20030202-branch:1.5.0.4
	interps-20030202-branchpoint:1.5
	cagney-unwind-20030108-branch:1.5.0.2
	cagney-unwind-20030108-branchpoint:1.5
	binutils-2_13_2_1:1.4
	binutils-2_13_2:1.4
	carlton_dictionary-20021223-merge:1.5
	gdb_5_3-2002-12-12-release:1.4
	carlton_dictionary-20021115-merge:1.4
	binutils-2_13_1:1.4
	kseitz_interps-20021105-merge:1.4
	kseitz_interps-20021103-merge:1.4
	drow-cplus-merge-20021020:1.4
	drow-cplus-merge-20021025:1.4
	carlton_dictionary-20021025-merge:1.4
	carlton_dictionary-20021011-merge:1.4
	drow-cplus-branch:1.4.0.30
	drow-cplus-branchpoint:1.4
	kseitz_interps-20020930-merge:1.4
	carlton_dictionary-20020927-merge:1.4
	carlton_dictionary-branch:1.4.0.28
	carlton_dictionary-20020920-branchpoint:1.4
	sid-20020905-branchpoint:1.4
	sid-20020905-branch:1.4.0.26
	gdb_5_3-branch:1.4.0.24
	gdb_5_3-2002-09-04-branchpoint:1.4
	kseitz_interps-20020829-merge:1.4
	cagney_sysregs-20020825-branch:1.4.0.22
	cagney_sysregs-20020825-branchpoint:1.4
	readline_4_3-import-branch:1.4.0.20
	readline_4_3-import-branchpoint:1.4
	binutils-2_13:1.4
	gdb_5_2_1-2002-07-23-release:1.4
	binutils-2_13-branchpoint:1.4
	binutils-2_13-branch:1.4.0.18
	kseitz_interps-20020528-branch:1.4.0.16
	kseitz_interps-20020528-branchpoint:1.4
	cagney_regbuf-20020515-branch:1.4.0.14
	cagney_regbuf-20020515-branchpoint:1.4
	binutils-2_12_1:1.4
	jimb-macro-020506-branch:1.4.0.12
	jimb-macro-020506-branchpoint:1.4
	gdb_5_2-2002-04-29-release:1.4
	binutils-2_12:1.4
	gdb_5_2-branch:1.4.0.10
	gdb_5_2-2002-03-03-branchpoint:1.4
	binutils-2_12-branch:1.4.0.8
	binutils-2_12-branchpoint:1.4
	gdb_5_1_1-2002-01-24-release:1.4
	gdb_5_1_0_1-2002-01-03-release:1.4
	cygnus_cvs_20020108_pre:1.4
	gdb_5_1_0_1-2002-01-03-branch:1.4.0.6
	gdb_5_1_0_1-2002-01-03-branchpoint:1.4
	gdb_5_1-2001-11-21-release:1.4
	gdb_s390-2001-09-26-branch:1.4.0.4
	gdb_s390-2001-09-26-branchpoint:1.4
	gdb_5_1-2001-07-29-branch:1.4.0.2
	gdb_5_1-2001-07-29-branchpoint:1.4
	binutils-2_11_2:1.3.2.1
	binutils-2_11_1:1.3.2.1
	binutils-2_11:1.3
	x86_64versiong3:1.3
	binutils-2_11-branch:1.3.0.2
	insight-precleanup-2001-01-01:1.3
	binutils-2_10_1:1.1.1.1
	binutils-2_10:1.1.1.1
	gdb-premipsmulti-2000-06-06-branch:1.1.1.1.0.6
	gdb-premipsmulti-2000-06-06-branchpoint:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.4
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	binutils-2_10-branch:1.1.1.1.0.2
	binutils-2_10-branchpoint:1.1.1.1
	binutils_latest_snapshot:1.13
	repo-unification-2000-02-06:1.1.1.1
	binu_ss_19990721:1.1.1.1
	binu_ss_19990602:1.1.1.1
	binu_ss_19990502:1.1.1.1
	cygnus:1.1.1;
locks; strict;
comment	@ * @;


1.13
date	2010.04.15.10.26.09;	author nickc;	state Exp;
branches;
next	1.12;

1.12
date	2005.05.10.10.21.12;	author nickc;	state Exp;
branches;
next	1.11;

1.11
date	2005.03.03.11.58.10;	author amodra;	state Exp;
branches;
next	1.10;

1.10
date	2003.08.17.03.16.23;	author jle;	state Exp;
branches;
next	1.9;

1.9
date	2003.05.24.04.22.23;	author jle;	state Exp;
branches;
next	1.8;

1.8
date	2003.05.21.05.06.49;	author jle;	state Exp;
branches;
next	1.7;

1.7
date	2003.05.21.02.06.40;	author jle;	state Exp;
branches;
next	1.6;

1.6
date	2003.05.18.21.24.32;	author jle;	state Exp;
branches;
next	1.5;

1.5
date	2002.11.18.16.49.56;	author kdienes;	state Exp;
branches;
next	1.4;

1.4
date	2001.03.14.02.27.44;	author nickc;	state Exp;
branches
	1.4.28.1
	1.4.30.1;
next	1.3;

1.3
date	2000.08.09.03.33.41;	author jle;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2000.07.28.21.10.19;	author jle;	state Exp;
branches;
next	1.1;

1.1
date	99.05.03.07.29.05;	author rth;	state Exp;
branches
	1.1.1.1;
next	;

1.4.28.1
date	2002.12.23.19.39.25;	author carlton;	state Exp;
branches;
next	1.4.28.2;

1.4.28.2
date	2003.05.23.18.40.54;	author carlton;	state Exp;
branches;
next	1.4.28.3;

1.4.28.3
date	2003.06.27.21.50.22;	author carlton;	state Exp;
branches;
next	1.4.28.4;

1.4.28.4
date	2003.09.17.21.28.55;	author carlton;	state Exp;
branches;
next	;

1.4.30.1
date	2003.12.14.20.28.01;	author drow;	state Exp;
branches;
next	;

1.3.2.1
date	2001.06.07.03.21.40;	author amodra;	state Exp;
branches;
next	;

1.1.1.1
date	99.05.03.07.29.05;	author rth;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Upgrade header files to use GPLv3
@
text
@/* Table of opcodes for the i860.
   Copyright 1989, 1991, 2000, 2002, 2003, 2010
   Free Software Foundation, Inc.

   This file is part of GAS, the GNU Assembler, and GDB, the GNU disassembler.

   GAS/GDB is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3, or (at your option)
   any later version.

   GAS/GDB is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with GAS or GDB; see the file COPYING3.  If not, write to
   the Free Software Foundation, 51 Franklin Street - Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* Structure of an opcode table entry.  */
struct i860_opcode
{
    /* The opcode name.  */
    const char *name;

    /* Bits that must be set.  */
    unsigned long match;

    /* Bits that must not be set.  */
    unsigned long lose;

    const char *args;

    /* Nonzero if this is a possible expand-instruction.  */
    char expand;
};


enum expand_type
{
    E_MOV = 1, E_ADDR, E_U32, E_AND, E_S32, E_DELAY, XP_ONLY
};


/* All i860 opcodes are 32 bits, except for the pseudo-instructions
   and the operations utilizing a 32-bit address expression, an
   unsigned 32-bit constant, or a signed 32-bit constant.
   These opcodes are expanded into a two-instruction sequence for
   any situation where the immediate operand does not fit in 32 bits.
   In the case of the add and subtract operations the expansion is
   to a three-instruction sequence (ex: orh, or, adds).  In cases
   where the address is to be relocated, the instruction is
   expanded to handle the worse case, this could be optimized at
   the final link if the actual address were known.

   The pseudoinstructions are:  mov, fmov, pmov, nop, and fnop.
   These instructions are implemented as a one or two instruction
   sequence of other operations.

   The match component is a mask saying which bits must match a
   particular opcode in order for an instruction to be an instance
   of that opcode.

   The args component is a string containing one character
   for each operand of the instruction.

Kinds of operands:
   #    Number used by optimizer.  It is ignored.
   1    src1 integer register.
   2    src2 integer register.
   d    dest register.
   c	ctrlreg control register.
   i    16 bit immediate.
   I    16 bit immediate, aligned 2^0. (ld.b)
   J    16 bit immediate, aligned 2^1. (ld.s)
   K    16 bit immediate, aligned 2^2. (ld.l, {p}fld.l, fst.l)
   L    16 bit immediate, aligned 2^3. ({p}fld.d, fst.d)
   M    16 bit immediate, aligned 2^4. ({p}fld.q, fst.q)
   5    5 bit immediate.
   l    lbroff 26 bit PC relative immediate.
   r    sbroff 16 bit PC relative immediate.
   s	split 16 bit immediate.
   S	split 16 bit immediate, aligned 2^0. (st.b)
   T	split 16 bit immediate, aligned 2^1. (st.s)
   U	split 16 bit immediate, aligned 2^2. (st.l)
   e    src1 floating point register.
   f    src2 floating point register.
   g    dest floating point register.  */


/* The order of the opcodes in this table is significant. The assembler
   requires that all instances of the same mnemonic must be consecutive.
   If they aren't, the assembler will not function properly.
 
   The order of opcodes does not affect the disassembler.  */

static const struct i860_opcode i860_opcodes[] =
{
/* REG-Format Instructions.  */
{ "ld.c",	0x30000000, 0xcc000000, "c,d", 0 },	/* ld.c csrc2,idest */
{ "ld.b",	0x00000000, 0xfc000000, "1(2),d", 0 },	/* ld.b isrc1(isrc2),idest */
{ "ld.b",	0x04000000, 0xf8000000, "I(2),d", E_ADDR },	/* ld.b #const(isrc2),idest */
{ "ld.s",	0x10000000, 0xec000001, "1(2),d", 0 },	/* ld.s isrc1(isrc2),idest */
{ "ld.s",	0x14000000, 0xe8000001, "J(2),d", E_ADDR },	/* ld.s #const(isrc2),idest */
{ "ld.l",	0x10000001, 0xec000000, "1(2),d", 0 },	/* ld.l isrc1(isrc2),idest */
{ "ld.l",	0x14000001, 0xe8000000, "K(2),d", E_ADDR },	/* ld.l #const(isrc2),idest */

{ "st.c",	0x38000000, 0xc4000000, "1,c", 0 },	/* st.c isrc1ni,csrc2 */
{ "st.b",	0x0c000000, 0xf0000000, "1,S(2)", E_ADDR },	/* st.b isrc1ni,#const(isrc2) */
{ "st.s",	0x1c000000, 0xe0000001, "1,T(2)", E_ADDR },	/* st.s isrc1ni,#const(isrc2) */
{ "st.l",	0x1c000001, 0xe0000000, "1,U(2)", E_ADDR },	/* st.l isrc1ni,#const(isrc2) */

{ "ixfr",	0x08000000, 0xf4000000, "1,g", 0 },	/* ixfr isrc1ni,fdest */

{ "fld.l",	0x20000002, 0xdc000001, "1(2),g", 0 },	/* fld.l isrc1(isrc2),fdest */
{ "fld.l",	0x24000002, 0xd8000001, "K(2),g", E_ADDR },	/* fld.l #const(isrc2),fdest */
{ "fld.l",	0x20000003, 0xdc000000, "1(2)++,g", 0 },	/* fld.l isrc1(isrc2)++,fdest */
{ "fld.l",	0x24000003, 0xd8000000, "K(2)++,g", E_ADDR },	/* fld.l #const(isrc2)++,fdest */
{ "fld.d",	0x20000000, 0xdc000007, "1(2),g", 0 },	/* fld.d isrc1(isrc2),fdest */
{ "fld.d",	0x24000000, 0xd8000007, "L(2),g", E_ADDR },	/* fld.d #const(isrc2),fdest */
{ "fld.d",	0x20000001, 0xdc000006, "1(2)++,g", 0 },	/* fld.d isrc1(isrc2)++,fdest */
{ "fld.d",	0x24000001, 0xd8000006, "L(2)++,g", E_ADDR },	/* fld.d #const(isrc2)++,fdest */
{ "fld.q",	0x20000004, 0xdc000003, "1(2),g", 0 },	/* fld.q isrc1(isrc2),fdest */
{ "fld.q",	0x24000004, 0xd8000003, "M(2),g", E_ADDR },	/* fld.q #const(isrc2),fdest */
{ "fld.q",	0x20000005, 0xdc000002, "1(2)++,g", 0 },	/* fld.q isrc1(isrc2)++,fdest */
{ "fld.q",	0x24000005, 0xd8000002, "M(2)++,g", E_ADDR },	/* fld.q #const(isrc2)++,fdest */

{ "pfld.l",	0x60000002, 0x9c000001, "1(2),g", 0 },	/* pfld.l isrc1(isrc2),fdest */
{ "pfld.l",	0x64000002, 0x98000001, "K(2),g", E_ADDR },	/* pfld.l #const(isrc2),fdest */
{ "pfld.l",	0x60000003, 0x9c000000, "1(2)++,g", 0 },	/* pfld.l isrc1(isrc2)++,fdest */
{ "pfld.l",	0x64000003, 0x98000000, "K(2)++,g", E_ADDR },	/* pfld.l #const(isrc2)++,fdest */
{ "pfld.d",	0x60000000, 0x9c000007, "1(2),g", 0 },	/* pfld.d isrc1(isrc2),fdest */
{ "pfld.d",	0x64000000, 0x98000007, "L(2),g", E_ADDR },	/* pfld.d #const(isrc2),fdest */
{ "pfld.d",	0x60000001, 0x9c000006, "1(2)++,g", 0 },	/* pfld.d isrc1(isrc2)++,fdest */
{ "pfld.d",	0x64000001, 0x98000006, "L(2)++,g", E_ADDR },	/* pfld.d #const(isrc2)++,fdest */
{ "pfld.q",	0x60000004, 0x9c000003, "1(2),g", XP_ONLY },	/* pfld.q isrc1(isrc2),fdest */
{ "pfld.q",	0x64000004, 0x98000003, "L(2),g", XP_ONLY },	/* pfld.q #const(isrc2),fdest */
{ "pfld.q",	0x60000005, 0x9c000002, "1(2)++,g", XP_ONLY },	/* pfld.q isrc1(isrc2)++,fdest */
{ "pfld.q",	0x64000005, 0x98000002, "L(2)++,g", XP_ONLY },	/* pfld.q #const(isrc2)++,fdest */

{ "fst.l",	0x28000002, 0xd4000001, "g,1(2)", 0 },	/* fst.l fdest,isrc1(isrc2) */
{ "fst.l",	0x2c000002, 0xd0000001, "g,K(2)", E_ADDR },	/* fst.l fdest,#const(isrc2) */
{ "fst.l",	0x28000003, 0xd4000000, "g,1(2)++", 0 },	/* fst.l fdest,isrc1(isrc2)++ */
{ "fst.l",	0x2c000003, 0xd0000000, "g,K(2)++", E_ADDR },	/* fst.l fdest,#const(isrc2)++ */
{ "fst.d",	0x28000000, 0xd4000007, "g,1(2)", 0 },	/* fst.d fdest,isrc1(isrc2) */
{ "fst.d",	0x2c000000, 0xd0000007, "g,L(2)", E_ADDR },	/* fst.d fdest,#const(isrc2) */
{ "fst.d",	0x28000001, 0xd4000006, "g,1(2)++", 0 },	/* fst.d fdest,isrc1(isrc2)++ */
{ "fst.d",	0x2c000001, 0xd0000006, "g,L(2)++", E_ADDR },	/* fst.d fdest,#const(isrc2)++ */
{ "fst.q",	0x28000004, 0xd4000003, "g,1(2)", 0 },	/* fst.d fdest,isrc1(isrc2) */
{ "fst.q",	0x2c000004, 0xd0000003, "g,M(2)", E_ADDR },	/* fst.d fdest,#const(isrc2) */
{ "fst.q",	0x28000005, 0xd4000002, "g,1(2)++", 0 },	/* fst.d fdest,isrc1(isrc2)++ */
{ "fst.q",	0x2c000005, 0xd0000002, "g,M(2)++", E_ADDR },	/* fst.d fdest,#const(isrc2)++ */

{ "pst.d",	0x3c000000, 0xc0000007, "g,L(2)", E_ADDR },	/* pst.d fdest,#const(isrc2) */
{ "pst.d",	0x3c000001, 0xc0000006, "g,L(2)++", E_ADDR },	/* pst.d fdest,#const(isrc2)++ */

{ "addu",	0x80000000, 0x7c000000, "1,2,d", 0 },	/* addu isrc1,isrc2,idest */
{ "addu",	0x84000000, 0x78000000, "i,2,d", E_S32 },	/* addu #const,isrc2,idest */
{ "adds",	0x90000000, 0x6c000000, "1,2,d", 0 },	/* adds isrc1,isrc2,idest */
{ "adds",	0x94000000, 0x68000000, "i,2,d", E_S32 },	/* adds #const,isrc2,idest */
{ "subu",	0x88000000, 0x74000000, "1,2,d", 0 },	/* subu isrc1,isrc2,idest */
{ "subu",	0x8c000000, 0x70000000, "i,2,d", E_S32 },	/* subu #const,isrc2,idest */
{ "subs",	0x98000000, 0x64000000, "1,2,d", 0 },	/* subs isrc1,isrc2,idest */
{ "subs",	0x9c000000, 0x60000000, "i,2,d", E_S32 },	/* subs #const,isrc2,idest */

{ "shl",	0xa0000000, 0x5c000000, "1,2,d", 0 },	/* shl isrc1,isrc2,idest */
{ "shl",	0xa4000000, 0x58000000, "i,2,d", 0 },	/* shl #const,isrc2,idest */
{ "shr",	0xa8000000, 0x54000000, "1,2,d", 0 },	/* shr isrc1,isrc2,idest */
{ "shr",	0xac000000, 0x50000000, "i,2,d", 0 },	/* shr #const,isrc2,idest */
{ "shrd",	0xb0000000, 0x4c000000, "1,2,d", 0 },	/* shrd isrc1,isrc2,idest */
{ "shra",	0xb8000000, 0x44000000, "1,2,d", 0 },	/* shra isrc1,isrc2,idest */
{ "shra",	0xbc000000, 0x40000000, "i,2,d", 0 },	/* shra #const,isrc2,idest */

{ "mov",	0xa0000000, 0x5c00f800, "2,d", 0 },	/* shl r0,isrc2,idest */
{ "mov",	0x94000000, 0x69e00000, "i,d", E_MOV },	/* adds #const,r0,idest */
{ "nop",	0xa0000000, 0x5ffff800, "", 0 },	/* shl r0,r0,r0 */
{ "fnop",	0xb0000000, 0x4ffff800, "", 0 },	/* shrd r0,r0,r0 */

{ "trap",	0x44000000, 0xb8000000, "1,2,d", 0 },	/* trap isrc1ni,isrc2,idest */

{ "flush",	0x34000004, 0xc81f0003, "L(2)", E_ADDR },	/* flush #const(isrc2) */
{ "flush",	0x34000005, 0xc81f0002, "L(2)++", E_ADDR },	/* flush #const(isrc2)++ */

{ "and",	0xc0000000, 0x3c000000, "1,2,d", 0 },	/* and isrc1,isrc2,idest */
{ "and",	0xc4000000, 0x38000000, "i,2,d", E_AND },	/* and #const,isrc2,idest */
{ "andh",	0xcc000000, 0x30000000, "i,2,d", 0 },	/* andh #const,isrc2,idest */
{ "andnot",	0xd0000000, 0x2c000000, "1,2,d", 0 },	/* andnot isrc1,isrc2,idest */
{ "andnot",	0xd4000000, 0x28000000, "i,2,d", E_U32 },	/* andnot #const,isrc2,idest */
{ "andnoth",	0xdc000000, 0x20000000, "i,2,d", 0 },	/* andnoth #const,isrc2,idest */
{ "or",		0xe0000000, 0x1c000000, "1,2,d", 0 },	/* or isrc1,isrc2,idest */
{ "or",		0xe4000000, 0x18000000, "i,2,d", E_U32 },	/* or #const,isrc2,idest */
{ "orh",	0xec000000, 0x10000000, "i,2,d", 0 },	/* orh #const,isrc2,idest */
{ "xor",	0xf0000000, 0x0c000000, "1,2,d", 0 },	/* xor isrc1,isrc2,idest */
{ "xor",	0xf4000000, 0x08000000, "i,2,d", E_U32 },	/* xor #const,isrc2,idest */
{ "xorh",	0xfc000000, 0x00000000, "i,2,d", 0 },	/* xorh #const,isrc2,idest */

{ "bte",	0x58000000, 0xa4000000, "1,2,r", 0 },	/* bte isrc1s,isrc2,sbroff */
{ "bte",	0x5c000000, 0xa0000000, "5,2,r", 0 },	/* bte #const5,isrc2,sbroff */
{ "btne",	0x50000000, 0xac000000, "1,2,r", 0 },	/* btne isrc1s,isrc2,sbroff */
{ "btne",	0x54000000, 0xa8000000, "5,2,r", 0 },	/* btne #const5,isrc2,sbroff */
{ "bla",	0xb4000000, 0x48000000, "1,2,r", E_DELAY },	/* bla isrc1s,isrc2,sbroff */
{ "bri",	0x40000000, 0xbc000000, "1", E_DELAY },	/* bri isrc1ni */

/* Core Escape Instruction Format */
{ "lock",	0x4c000001, 0xb000001e, "", 0 },	/* lock set BL in dirbase */
{ "calli",	0x4c000002, 0xb000001d, "1", E_DELAY },	/* calli isrc1ni */
{ "intovr",	0x4c000004, 0xb000001b, "", 0 },	/* intovr trap on integer overflow */
{ "unlock",	0x4c000007, 0xb0000018, "", 0 },	/* unlock clear BL in dirbase */
{ "ldio.l",	0x4c000408, 0xb00003f7, "2,d", XP_ONLY },	/* ldio.l isrc2,idest */
{ "ldio.s",	0x4c000208, 0xb00005f7, "2,d", XP_ONLY },	/* ldio.s isrc2,idest */
{ "ldio.b",	0x4c000008, 0xb00007f7, "2,d", XP_ONLY },	/* ldio.b isrc2,idest */
{ "stio.l",	0x4c000409, 0xb00003f6, "1,2", XP_ONLY },	/* stio.l isrc1ni,isrc2 */
{ "stio.s",	0x4c000209, 0xb00005f6, "1,2", XP_ONLY },	/* stio.s isrc1ni,isrc2 */
{ "stio.b",	0x4c000009, 0xb00007f6, "1,2", XP_ONLY },	/* stio.b isrc1ni,isrc2 */
{ "ldint.l",	0x4c00040a, 0xb00003f5, "2,d", XP_ONLY },	/* ldint.l isrc2,idest */
{ "ldint.s",	0x4c00020a, 0xb00005f5, "2,d", XP_ONLY },	/* ldint.s isrc2,idest */
{ "ldint.b",	0x4c00000a, 0xb00007f5, "2,d", XP_ONLY },	/* ldint.b isrc2,idest */
{ "scyc.b",	0x4c00000b, 0xb00007f4, "2", XP_ONLY },		/* scyc.b isrc2 */

/* CTRL-Format Instructions */
{ "br",		0x68000000, 0x94000000, "l", E_DELAY },	/* br lbroff */
{ "call",	0x6c000000, 0x90000000, "l", E_DELAY },	/* call lbroff */
{ "bc",		0x70000000, 0x8c000000, "l", 0 },	/* bc lbroff */
{ "bc.t",	0x74000000, 0x88000000, "l", E_DELAY },	/* bc.t lbroff */
{ "bnc",	0x78000000, 0x84000000, "l", 0 },	/* bnc lbroff */
{ "bnc.t",	0x7c000000, 0x80000000, "l", E_DELAY },	/* bnc.t lbroff */

/* Floating Point Escape Instruction Format - pfam.p fsrc1,fsrc2,fdest.  */
{ "r2p1.ss",	0x48000400, 0xb40001ff, "e,f,g", 0 },
{ "r2p1.sd",	0x48000480, 0xb400017f, "e,f,g", 0 },
{ "r2p1.dd",	0x48000580, 0xb400007f, "e,f,g", 0 },
{ "r2pt.ss",	0x48000401, 0xb40001fe, "e,f,g", 0 },
{ "r2pt.sd",	0x48000481, 0xb400017e, "e,f,g", 0 },
{ "r2pt.dd",	0x48000581, 0xb400007e, "e,f,g", 0 },
{ "r2ap1.ss",	0x48000402, 0xb40001fd, "e,f,g", 0 },
{ "r2ap1.sd",	0x48000482, 0xb400017d, "e,f,g", 0 },
{ "r2ap1.dd",	0x48000582, 0xb400007d, "e,f,g", 0 },
{ "r2apt.ss",	0x48000403, 0xb40001fc, "e,f,g", 0 },
{ "r2apt.sd",	0x48000483, 0xb400017c, "e,f,g", 0 },
{ "r2apt.dd",	0x48000583, 0xb400007c, "e,f,g", 0 },
{ "i2p1.ss",	0x48000404, 0xb40001fb, "e,f,g", 0 },
{ "i2p1.sd",	0x48000484, 0xb400017b, "e,f,g", 0 },
{ "i2p1.dd",	0x48000584, 0xb400007b, "e,f,g", 0 },
{ "i2pt.ss",	0x48000405, 0xb40001fa, "e,f,g", 0 },
{ "i2pt.sd",	0x48000485, 0xb400017a, "e,f,g", 0 },
{ "i2pt.dd",	0x48000585, 0xb400007a, "e,f,g", 0 },
{ "i2ap1.ss",	0x48000406, 0xb40001f9, "e,f,g", 0 },
{ "i2ap1.sd",	0x48000486, 0xb4000179, "e,f,g", 0 },
{ "i2ap1.dd",	0x48000586, 0xb4000079, "e,f,g", 0 },
{ "i2apt.ss",	0x48000407, 0xb40001f8, "e,f,g", 0 },
{ "i2apt.sd",	0x48000487, 0xb4000178, "e,f,g", 0 },
{ "i2apt.dd",	0x48000587, 0xb4000078, "e,f,g", 0 },
{ "rat1p2.ss",	0x48000408, 0xb40001f7, "e,f,g", 0 },
{ "rat1p2.sd",	0x48000488, 0xb4000177, "e,f,g", 0 },
{ "rat1p2.dd",	0x48000588, 0xb4000077, "e,f,g", 0 },
{ "m12apm.ss",	0x48000409, 0xb40001f6, "e,f,g", 0 },
{ "m12apm.sd",	0x48000489, 0xb4000176, "e,f,g", 0 },
{ "m12apm.dd",	0x48000589, 0xb4000076, "e,f,g", 0 },
{ "ra1p2.ss",	0x4800040a, 0xb40001f5, "e,f,g", 0 },
{ "ra1p2.sd",	0x4800048a, 0xb4000175, "e,f,g", 0 },
{ "ra1p2.dd",	0x4800058a, 0xb4000075, "e,f,g", 0 },
{ "m12ttpa.ss",	0x4800040b, 0xb40001f4, "e,f,g", 0 },
{ "m12ttpa.sd",	0x4800048b, 0xb4000174, "e,f,g", 0 },
{ "m12ttpa.dd",	0x4800058b, 0xb4000074, "e,f,g", 0 },
{ "iat1p2.ss",	0x4800040c, 0xb40001f3, "e,f,g", 0 },
{ "iat1p2.sd",	0x4800048c, 0xb4000173, "e,f,g", 0 },
{ "iat1p2.dd",	0x4800058c, 0xb4000073, "e,f,g", 0 },
{ "m12tpm.ss",	0x4800040d, 0xb40001f2, "e,f,g", 0 },
{ "m12tpm.sd",	0x4800048d, 0xb4000172, "e,f,g", 0 },
{ "m12tpm.dd",	0x4800058d, 0xb4000072, "e,f,g", 0 },
{ "ia1p2.ss",	0x4800040e, 0xb40001f1, "e,f,g", 0 },
{ "ia1p2.sd",	0x4800048e, 0xb4000171, "e,f,g", 0 },
{ "ia1p2.dd",	0x4800058e, 0xb4000071, "e,f,g", 0 },
{ "m12tpa.ss",	0x4800040f, 0xb40001f0, "e,f,g", 0 },
{ "m12tpa.sd",	0x4800048f, 0xb4000170, "e,f,g", 0 },
{ "m12tpa.dd",	0x4800058f, 0xb4000070, "e,f,g", 0 },

/* Floating Point Escape Instruction Format - pfsm.p fsrc1,fsrc2,fdest.  */
{ "r2s1.ss",	0x48000410, 0xb40001ef, "e,f,g", 0 },
{ "r2s1.sd",	0x48000490, 0xb400016f, "e,f,g", 0 },
{ "r2s1.dd",	0x48000590, 0xb400006f, "e,f,g", 0 },
{ "r2st.ss",	0x48000411, 0xb40001ee, "e,f,g", 0 },
{ "r2st.sd",	0x48000491, 0xb400016e, "e,f,g", 0 },
{ "r2st.dd",	0x48000591, 0xb400006e, "e,f,g", 0 },
{ "r2as1.ss",	0x48000412, 0xb40001ed, "e,f,g", 0 },
{ "r2as1.sd",	0x48000492, 0xb400016d, "e,f,g", 0 },
{ "r2as1.dd",	0x48000592, 0xb400006d, "e,f,g", 0 },
{ "r2ast.ss",	0x48000413, 0xb40001ec, "e,f,g", 0 },
{ "r2ast.sd",	0x48000493, 0xb400016c, "e,f,g", 0 },
{ "r2ast.dd",	0x48000593, 0xb400006c, "e,f,g", 0 },
{ "i2s1.ss",	0x48000414, 0xb40001eb, "e,f,g", 0 },
{ "i2s1.sd",	0x48000494, 0xb400016b, "e,f,g", 0 },
{ "i2s1.dd",	0x48000594, 0xb400006b, "e,f,g", 0 },
{ "i2st.ss",	0x48000415, 0xb40001ea, "e,f,g", 0 },
{ "i2st.sd",	0x48000495, 0xb400016a, "e,f,g", 0 },
{ "i2st.dd",	0x48000595, 0xb400006a, "e,f,g", 0 },
{ "i2as1.ss",	0x48000416, 0xb40001e9, "e,f,g", 0 },
{ "i2as1.sd",	0x48000496, 0xb4000169, "e,f,g", 0 },
{ "i2as1.dd",	0x48000596, 0xb4000069, "e,f,g", 0 },
{ "i2ast.ss",	0x48000417, 0xb40001e8, "e,f,g", 0 },
{ "i2ast.sd",	0x48000497, 0xb4000168, "e,f,g", 0 },
{ "i2ast.dd",	0x48000597, 0xb4000068, "e,f,g", 0 },
{ "rat1s2.ss",	0x48000418, 0xb40001e7, "e,f,g", 0 },
{ "rat1s2.sd",	0x48000498, 0xb4000167, "e,f,g", 0 },
{ "rat1s2.dd",	0x48000598, 0xb4000067, "e,f,g", 0 },
{ "m12asm.ss",	0x48000419, 0xb40001e6, "e,f,g", 0 },
{ "m12asm.sd",	0x48000499, 0xb4000166, "e,f,g", 0 },
{ "m12asm.dd",	0x48000599, 0xb4000066, "e,f,g", 0 },
{ "ra1s2.ss",	0x4800041a, 0xb40001e5, "e,f,g", 0 },
{ "ra1s2.sd",	0x4800049a, 0xb4000165, "e,f,g", 0 },
{ "ra1s2.dd",	0x4800059a, 0xb4000065, "e,f,g", 0 },
{ "m12ttsa.ss",	0x4800041b, 0xb40001e4, "e,f,g", 0 },
{ "m12ttsa.sd",	0x4800049b, 0xb4000164, "e,f,g", 0 },
{ "m12ttsa.dd",	0x4800059b, 0xb4000064, "e,f,g", 0 },
{ "iat1s2.ss",	0x4800041c, 0xb40001e3, "e,f,g", 0 },
{ "iat1s2.sd",	0x4800049c, 0xb4000163, "e,f,g", 0 },
{ "iat1s2.dd",	0x4800059c, 0xb4000063, "e,f,g", 0 },
{ "m12tsm.ss",	0x4800041d, 0xb40001e2, "e,f,g", 0 },
{ "m12tsm.sd",	0x4800049d, 0xb4000162, "e,f,g", 0 },
{ "m12tsm.dd",	0x4800059d, 0xb4000062, "e,f,g", 0 },
{ "ia1s2.ss",	0x4800041e, 0xb40001e1, "e,f,g", 0 },
{ "ia1s2.sd",	0x4800049e, 0xb4000161, "e,f,g", 0 },
{ "ia1s2.dd",	0x4800059e, 0xb4000061, "e,f,g", 0 },
{ "m12tsa.ss",	0x4800041f, 0xb40001e0, "e,f,g", 0 },
{ "m12tsa.sd",	0x4800049f, 0xb4000160, "e,f,g", 0 },
{ "m12tsa.dd",	0x4800059f, 0xb4000060, "e,f,g", 0 },

/* Floating Point Escape Instruction Format - pfmam.p fsrc1,fsrc2,fdest.  */
{ "mr2p1.ss",	0x48000000, 0xb40005ff, "e,f,g", 0 },
{ "mr2p1.sd",	0x48000080, 0xb400057f, "e,f,g", 0 },
{ "mr2p1.dd",	0x48000180, 0xb400047f, "e,f,g", 0 },
{ "mr2pt.ss",	0x48000001, 0xb40005fe, "e,f,g", 0 },
{ "mr2pt.sd",	0x48000081, 0xb400057e, "e,f,g", 0 },
{ "mr2pt.dd",	0x48000181, 0xb400047e, "e,f,g", 0 },
{ "mr2mp1.ss",	0x48000002, 0xb40005fd, "e,f,g", 0 },
{ "mr2mp1.sd",	0x48000082, 0xb400057d, "e,f,g", 0 },
{ "mr2mp1.dd",	0x48000182, 0xb400047d, "e,f,g", 0 },
{ "mr2mpt.ss",	0x48000003, 0xb40005fc, "e,f,g", 0 },
{ "mr2mpt.sd",	0x48000083, 0xb400057c, "e,f,g", 0 },
{ "mr2mpt.dd",	0x48000183, 0xb400047c, "e,f,g", 0 },
{ "mi2p1.ss",	0x48000004, 0xb40005fb, "e,f,g", 0 },
{ "mi2p1.sd",	0x48000084, 0xb400057b, "e,f,g", 0 },
{ "mi2p1.dd",	0x48000184, 0xb400047b, "e,f,g", 0 },
{ "mi2pt.ss",	0x48000005, 0xb40005fa, "e,f,g", 0 },
{ "mi2pt.sd",	0x48000085, 0xb400057a, "e,f,g", 0 },
{ "mi2pt.dd",	0x48000185, 0xb400047a, "e,f,g", 0 },
{ "mi2mp1.ss",	0x48000006, 0xb40005f9, "e,f,g", 0 },
{ "mi2mp1.sd",	0x48000086, 0xb4000579, "e,f,g", 0 },
{ "mi2mp1.dd",	0x48000186, 0xb4000479, "e,f,g", 0 },
{ "mi2mpt.ss",	0x48000007, 0xb40005f8, "e,f,g", 0 },
{ "mi2mpt.sd",	0x48000087, 0xb4000578, "e,f,g", 0 },
{ "mi2mpt.dd",	0x48000187, 0xb4000478, "e,f,g", 0 },
{ "mrmt1p2.ss",	0x48000008, 0xb40005f7, "e,f,g", 0 },
{ "mrmt1p2.sd",	0x48000088, 0xb4000577, "e,f,g", 0 },
{ "mrmt1p2.dd",	0x48000188, 0xb4000477, "e,f,g", 0 },
{ "mm12mpm.ss",	0x48000009, 0xb40005f6, "e,f,g", 0 },
{ "mm12mpm.sd",	0x48000089, 0xb4000576, "e,f,g", 0 },
{ "mm12mpm.dd",	0x48000189, 0xb4000476, "e,f,g", 0 },
{ "mrm1p2.ss",	0x4800000a, 0xb40005f5, "e,f,g", 0 },
{ "mrm1p2.sd",	0x4800008a, 0xb4000575, "e,f,g", 0 },
{ "mrm1p2.dd",	0x4800018a, 0xb4000475, "e,f,g", 0 },
{ "mm12ttpm.ss",0x4800000b, 0xb40005f4, "e,f,g", 0 },
{ "mm12ttpm.sd",0x4800008b, 0xb4000574, "e,f,g", 0 },
{ "mm12ttpm.dd",0x4800018b, 0xb4000474, "e,f,g", 0 },
{ "mimt1p2.ss",	0x4800000c, 0xb40005f3, "e,f,g", 0 },
{ "mimt1p2.sd",	0x4800008c, 0xb4000573, "e,f,g", 0 },
{ "mimt1p2.dd",	0x4800018c, 0xb4000473, "e,f,g", 0 },
{ "mm12tpm.ss",	0x4800000d, 0xb40005f2, "e,f,g", 0 },
{ "mm12tpm.sd",	0x4800008d, 0xb4000572, "e,f,g", 0 },
{ "mm12tpm.dd",	0x4800018d, 0xb4000472, "e,f,g", 0 },
{ "mim1p2.ss",	0x4800000e, 0xb40005f1, "e,f,g", 0 },
{ "mim1p2.sd",	0x4800008e, 0xb4000571, "e,f,g", 0 },
{ "mim1p2.dd",	0x4800018e, 0xb4000471, "e,f,g", 0 },

/* Floating Point Escape Instruction Format - pfmsm.p fsrc1,fsrc2,fdest.  */
{ "mr2s1.ss",	0x48000010, 0xb40005ef, "e,f,g", 0 },
{ "mr2s1.sd",	0x48000090, 0xb400056f, "e,f,g", 0 },
{ "mr2s1.dd",	0x48000190, 0xb400046f, "e,f,g", 0 },
{ "mr2st.ss",	0x48000011, 0xb40005ee, "e,f,g", 0 },
{ "mr2st.sd",	0x48000091, 0xb400056e, "e,f,g", 0 },
{ "mr2st.dd",	0x48000191, 0xb400046e, "e,f,g", 0 },
{ "mr2ms1.ss",	0x48000012, 0xb40005ed, "e,f,g", 0 },
{ "mr2ms1.sd",	0x48000092, 0xb400056d, "e,f,g", 0 },
{ "mr2ms1.dd",	0x48000192, 0xb400046d, "e,f,g", 0 },
{ "mr2mst.ss",	0x48000013, 0xb40005ec, "e,f,g", 0 },
{ "mr2mst.sd",	0x48000093, 0xb400056c, "e,f,g", 0 },
{ "mr2mst.dd",	0x48000193, 0xb400046c, "e,f,g", 0 },
{ "mi2s1.ss",	0x48000014, 0xb40005eb, "e,f,g", 0 },
{ "mi2s1.sd",	0x48000094, 0xb400056b, "e,f,g", 0 },
{ "mi2s1.dd",	0x48000194, 0xb400046b, "e,f,g", 0 },
{ "mi2st.ss",	0x48000015, 0xb40005ea, "e,f,g", 0 },
{ "mi2st.sd",	0x48000095, 0xb400056a, "e,f,g", 0 },
{ "mi2st.dd",	0x48000195, 0xb400046a, "e,f,g", 0 },
{ "mi2ms1.ss",	0x48000016, 0xb40005e9, "e,f,g", 0 },
{ "mi2ms1.sd",	0x48000096, 0xb4000569, "e,f,g", 0 },
{ "mi2ms1.dd",	0x48000196, 0xb4000469, "e,f,g", 0 },
{ "mi2mst.ss",	0x48000017, 0xb40005e8, "e,f,g", 0 },
{ "mi2mst.sd",	0x48000097, 0xb4000568, "e,f,g", 0 },
{ "mi2mst.dd",	0x48000197, 0xb4000468, "e,f,g", 0 },
{ "mrmt1s2.ss",	0x48000018, 0xb40005e7, "e,f,g", 0 },
{ "mrmt1s2.sd",	0x48000098, 0xb4000567, "e,f,g", 0 },
{ "mrmt1s2.dd",	0x48000198, 0xb4000467, "e,f,g", 0 },
{ "mm12msm.ss",	0x48000019, 0xb40005e6, "e,f,g", 0 },
{ "mm12msm.sd",	0x48000099, 0xb4000566, "e,f,g", 0 },
{ "mm12msm.dd",	0x48000199, 0xb4000466, "e,f,g", 0 },
{ "mrm1s2.ss",	0x4800001a, 0xb40005e5, "e,f,g", 0 },
{ "mrm1s2.sd",	0x4800009a, 0xb4000565, "e,f,g", 0 },
{ "mrm1s2.dd",	0x4800019a, 0xb4000465, "e,f,g", 0 },
{ "mm12ttsm.ss",0x4800001b, 0xb40005e4, "e,f,g", 0 },
{ "mm12ttsm.sd",0x4800009b, 0xb4000564, "e,f,g", 0 },
{ "mm12ttsm.dd",0x4800019b, 0xb4000464, "e,f,g", 0 },
{ "mimt1s2.ss",	0x4800001c, 0xb40005e3, "e,f,g", 0 },
{ "mimt1s2.sd",	0x4800009c, 0xb4000563, "e,f,g", 0 },
{ "mimt1s2.dd",	0x4800019c, 0xb4000463, "e,f,g", 0 },
{ "mm12tsm.ss",	0x4800001d, 0xb40005e2, "e,f,g", 0 },
{ "mm12tsm.sd",	0x4800009d, 0xb4000562, "e,f,g", 0 },
{ "mm12tsm.dd",	0x4800019d, 0xb4000462, "e,f,g", 0 },
{ "mim1s2.ss",	0x4800001e, 0xb40005e1, "e,f,g", 0 },
{ "mim1s2.sd",	0x4800009e, 0xb4000561, "e,f,g", 0 },
{ "mim1s2.dd",	0x4800019e, 0xb4000461, "e,f,g", 0 },

{ "fmul.ss",	0x48000020, 0xb40005df, "e,f,g", 0 },	/* fmul.p fsrc1,fsrc2,fdest */
{ "fmul.sd",	0x480000a0, 0xb400055f, "e,f,g", 0 },	/* fmul.p fsrc1,fsrc2,fdest */
{ "fmul.dd",	0x480001a0, 0xb400045f, "e,f,g", 0 },	/* fmul.p fsrc1,fsrc2,fdest */
{ "pfmul.ss",	0x48000420, 0xb40001df, "e,f,g", 0 },	/* pfmul.p fsrc1,fsrc2,fdest */
{ "pfmul.sd",	0x480004a0, 0xb400015f, "e,f,g", 0 },	/* pfmul.p fsrc1,fsrc2,fdest */
{ "pfmul.dd",	0x480005a0, 0xb400005f, "e,f,g", 0 },	/* pfmul.p fsrc1,fsrc2,fdest */
{ "pfmul3.dd",	0x480005a4, 0xb400005b, "e,f,g", 0 },	/* pfmul3.p fsrc1,fsrc2,fdest */
{ "fmlow.dd",	0x480001a1, 0xb400045e, "e,f,g", 0 },	/* fmlow.dd fsrc1,fsrc2,fdest */
{ "frcp.ss",	0x48000022, 0xb40005dd, "f,g", 0 },	/* frcp.p fsrc2,fdest */
{ "frcp.sd",	0x480000a2, 0xb400055d, "f,g", 0 },	/* frcp.p fsrc2,fdest */
{ "frcp.dd",	0x480001a2, 0xb400045d, "f,g", 0 },	/* frcp.p fsrc2,fdest */
{ "frsqr.ss",	0x48000023, 0xb40005dc, "f,g", 0 },	/* frsqr.p fsrc2,fdest */
{ "frsqr.sd",	0x480000a3, 0xb400055c, "f,g", 0 },	/* frsqr.p fsrc2,fdest */
{ "frsqr.dd",	0x480001a3, 0xb400045c, "f,g", 0 },	/* frsqr.p fsrc2,fdest */
{ "fadd.ss",	0x48000030, 0xb40005cf, "e,f,g", 0 },	/* fadd.p fsrc1,fsrc2,fdest */
{ "fadd.sd",	0x480000b0, 0xb400054f, "e,f,g", 0 },	/* fadd.p fsrc1,fsrc2,fdest */
{ "fadd.dd",	0x480001b0, 0xb400044f, "e,f,g", 0 },	/* fadd.p fsrc1,fsrc2,fdest */
{ "pfadd.ss",	0x48000430, 0xb40001cf, "e,f,g", 0 },	/* pfadd.p fsrc1,fsrc2,fdest */
{ "pfadd.sd",	0x480004b0, 0xb400014f, "e,f,g", 0 },	/* pfadd.p fsrc1,fsrc2,fdest */
{ "pfadd.dd",	0x480005b0, 0xb400004f, "e,f,g", 0 },	/* pfadd.p fsrc1,fsrc2,fdest */
{ "fsub.ss",	0x48000031, 0xb40005ce, "e,f,g", 0 },	/* fsub.p fsrc1,fsrc2,fdest */
{ "fsub.sd",	0x480000b1, 0xb400054e, "e,f,g", 0 },	/* fsub.p fsrc1,fsrc2,fdest */
{ "fsub.dd",	0x480001b1, 0xb400044e, "e,f,g", 0 },	/* fsub.p fsrc1,fsrc2,fdest */
{ "pfsub.ss",	0x48000431, 0xb40001ce, "e,f,g", 0 },	/* pfsub.p fsrc1,fsrc2,fdest */
{ "pfsub.sd",	0x480004b1, 0xb400014e, "e,f,g", 0 },	/* pfsub.p fsrc1,fsrc2,fdest */
{ "pfsub.dd",	0x480005b1, 0xb400004e, "e,f,g", 0 },	/* pfsub.p fsrc1,fsrc2,fdest */
{ "fix.sd",	0x480000b2, 0xb400054d, "e,g", 0 },	/* fix.p fsrc1,fdest */
{ "fix.dd",	0x480001b2, 0xb400044d, "e,g", 0 },	/* fix.p fsrc1,fdest */
{ "pfix.sd",	0x480004b2, 0xb400014d, "e,g", 0 },	/* pfix.p fsrc1,fdest */
{ "pfix.dd",	0x480005b2, 0xb400004d, "e,g", 0 },	/* pfix.p fsrc1,fdest */
{ "famov.ss",	0x48000033, 0xb40005cc, "e,g", 0 },	/* famov.p fsrc1,fdest */
{ "famov.ds",	0x48000133, 0xb40004cc, "e,g", 0 },	/* famov.p fsrc1,fdest */
{ "famov.sd",	0x480000b3, 0xb400054c, "e,g", 0 },	/* famov.p fsrc1,fdest */
{ "famov.dd",	0x480001b3, 0xb400044c, "e,g", 0 },	/* famov.p fsrc1,fdest */
{ "pfamov.ss",	0x48000433, 0xb40001cc, "e,g", 0 },	/* pfamov.p fsrc1,fdest */
{ "pfamov.ds",	0x48000533, 0xb40000cc, "e,g", 0 },	/* pfamov.p fsrc1,fdest */
{ "pfamov.sd",	0x480004b3, 0xb400014c, "e,g", 0 },	/* pfamov.p fsrc1,fdest */
{ "pfamov.dd",	0x480005b3, 0xb400004c, "e,g", 0 },	/* pfamov.p fsrc1,fdest */
/* Opcode pfgt has R bit cleared; pfle has R bit set.  */
{ "pfgt.ss",	0x48000434, 0xb40001cb, "e,f,g", 0 },	/* pfgt.p fsrc1,fsrc2,fdest */
{ "pfgt.dd",	0x48000534, 0xb40000cb, "e,f,g", 0 },	/* pfgt.p fsrc1,fsrc2,fdest */
/* Opcode pfgt has R bit cleared; pfle has R bit set.  */
{ "pfle.ss",	0x480004b4, 0xb400014b, "e,f,g", 0 },	/* pfle.p fsrc1,fsrc2,fdest */
{ "pfle.dd",	0x480005b4, 0xb400004b, "e,f,g", 0 },	/* pfle.p fsrc1,fsrc2,fdest */
{ "pfeq.ss",	0x48000435, 0xb40001ca, "e,f,g", 0 },	/* pfeq.p fsrc1,fsrc2,fdest */
{ "pfeq.dd",	0x48000535, 0xb40000ca, "e,f,g", 0 },	/* pfeq.p fsrc1,fsrc2,fdest */
{ "ftrunc.sd",	0x480000ba, 0xb4000545, "e,g", 0 },	/* ftrunc.p fsrc1,fdest */
{ "ftrunc.dd",	0x480001ba, 0xb4000445, "e,g", 0 },	/* ftrunc.p fsrc1,fdest */
{ "pftrunc.sd",	0x480004ba, 0xb4000145, "e,g", 0 },	/* pftrunc.p fsrc1,fdest */
{ "pftrunc.dd",	0x480005ba, 0xb4000045, "e,g", 0 },	/* pftrunc.p fsrc1,fdest */
{ "fxfr",	0x48000040, 0xb40005bf, "e,d", 0 },	/* fxfr fsrc1,idest */
{ "fiadd.ss",	0x48000049, 0xb40005b6, "e,f,g", 0 },	/* fiadd.w fsrc1,fsrc2,fdest */
{ "fiadd.dd",	0x480001c9, 0xb4000436, "e,f,g", 0 },	/* fiadd.w fsrc1,fsrc2,fdest */
{ "pfiadd.ss",	0x48000449, 0xb40001b6, "e,f,g", 0 },	/* pfiadd.w fsrc1,fsrc2,fdest */
{ "pfiadd.dd",	0x480005c9, 0xb4000036, "e,f,g", 0 },	/* pfiadd.w fsrc1,fsrc2,fdest */
{ "fisub.ss",	0x4800004d, 0xb40005b2, "e,f,g", 0 },	/* fisub.w fsrc1,fsrc2,fdest */
{ "fisub.dd",	0x480001cd, 0xb4000432, "e,f,g", 0 },	/* fisub.w fsrc1,fsrc2,fdest */
{ "pfisub.ss",	0x4800044d, 0xb40001b2, "e,f,g", 0 },	/* pfisub.w fsrc1,fsrc2,fdest */
{ "pfisub.dd",	0x480005cd, 0xb4000032, "e,f,g", 0 },	/* pfisub.w fsrc1,fsrc2,fdest */
{ "fzchkl",	0x480001d7, 0xb4000428, "e,f,g", 0 },	/* fzchkl fsrc1,fsrc2,fdest */
{ "pfzchkl",	0x480005d7, 0xb4000028, "e,f,g", 0 },	/* pfzchkl fsrc1,fsrc2,fdest */
{ "fzchks",	0x480001df, 0xb4000420, "e,f,g", 0 },	/* fzchks fsrc1,fsrc2,fdest */
{ "pfzchks",	0x480005df, 0xb4000020, "e,f,g", 0 },	/* pfzchks fsrc1,fsrc2,fdest */
{ "faddp",	0x480001d0, 0xb400042f, "e,f,g", 0 },	/* faddp fsrc1,fsrc2,fdest */
{ "pfaddp",	0x480005d0, 0xb400002f, "e,f,g", 0 },	/* pfaddp fsrc1,fsrc2,fdest */
{ "faddz",	0x480001d1, 0xb400042e, "e,f,g", 0 },	/* faddz fsrc1,fsrc2,fdest */
{ "pfaddz",	0x480005d1, 0xb400002e, "e,f,g", 0 },	/* pfaddz fsrc1,fsrc2,fdest */
{ "form",	0x480001da, 0xb4000425, "e,g", 0 },	/* form fsrc1,fdest */
{ "pform",	0x480005da, 0xb4000025, "e,g", 0 },	/* pform fsrc1,fdest */

/* Floating point pseudo-instructions.  */
{ "fmov.ss",	0x48000049, 0xb7e005b6, "e,g", 0 },	/* fiadd.ss fsrc1,f0,fdest */
{ "fmov.dd",	0x480001c9, 0xb7e00436, "e,g", 0 },	/* fiadd.dd fsrc1,f0,fdest */
{ "fmov.sd",	0x480000b3, 0xb400054c, "e,g", 0 },	/* famov.sd fsrc1,fdest */
{ "fmov.ds",	0x48000133, 0xb40004cc, "e,g", 0 },	/* famov.ds fsrc1,fdest */
{ "pfmov.ds",	0x48000533, 0xb40000cc, "e,g", 0 },	/* pfamov.ds fsrc1,fdest */
{ "pfmov.dd",	0x480005c9, 0xb7e00036, "e,g", 0 },	/* pfiadd.dd fsrc1,f0,fdest */
{ 0, 0, 0, 0, 0 },

};

#define NUMOPCODES ((sizeof i860_opcodes)/(sizeof i860_opcodes[0]))


@


1.12
log
@Update the address and phone number of the FSF organization
@
text
@d2 2
a3 1
   Copyright 1989, 1991, 2000, 2002, 2003 Free Software Foundation, Inc.
d5 1
a5 16
This file is part of GAS, the GNU Assembler, and GDB, the GNU disassembler.

GAS/GDB is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 1, or (at your option)
any later version.

GAS/GDB is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with GAS or GDB; see the file COPYING.  If not, write to
the Free Software Foundation, 51 Franklin Street - Fifth Floor,
Boston, MA 02110-1301, USA.  */
d7 14
@


1.11
log
@update copyright dates
@
text
@d18 2
a19 2
the Free Software Foundation, 59 Temple Place - Suite 330,
Boston, MA 02111-1307, USA.  */
@


1.10
log
@include/opcode/ChangeLog:
2003-08-16  Jason Eckhardt  <jle@@rice.edu>

        * i860.h (fmov.ds): Expand as famov.ds.
        (fmov.sd): Expand as famov.sd.
        (pfmov.ds): Expand as pfamov.ds.

gas/testsuite/ChangeLog:
2003-08-16  Jason Eckhardt  <jle@@rice.edu>

        * gas/i860/pseudo-ops01.{s,d}: New files.
        * gas/i860/i860.exp: Execute the new test above.
        * gas/i860/README.i860: Mention that pseudo-ops need more testing
        and remove the align fill defect from the list.
@
text
@d2 1
a2 1
   Copyright 1989, 1991, 2000, 2003 Free Software Foundation, Inc.
@


1.9
log
@2003-05-23  Jason Eckhardt  <jle@@rice.edu>
gas:
        * config/tc-i860.c (target_xp): Declare variable.
        (OPTION_XP): Declare macro.
        (md_longopts): Add option -mxp.
        (md_parse_option): Set target_xp.
        (md_show_usage): Add -mxp usage.
        (i860_process_insn): Recognize XP registers bear, ccr, p0-p3.
        (md_assemble): Don't try expansions if XP_ONLY is set.
        * doc/c-i860.texi: Document -mxp option.

gas/testsuite:
        * gas/i860/xp.s: New file.
        * gas/i860/xp.d: New file.

include/opcode:
        * i860.h (expand_type): Add XP_ONLY.
        (scyc.b): New XP instruction.
        (ldio.l): Likewise.
        (ldio.s): Likewise.
        (ldio.b): Likewise.
        (ldint.l): Likewise.
        (ldint.s): Likewise.
        (ldint.b): Likewise.
        (stio.l): Likewise.
        (stio.s): Likewise.
        (stio.b): Likewise.
        (pfld.q): Likewise.

opcodes:
        * i860-dis.c (crnames): Add bear, ccr, p0, p1, p2, p3.
        (print_insn_i860): Grab 4 bits of the control register field
        instead of 3.
@
text
@d497 3
a499 3
{ "fmov.sd",	0x480000b0, 0xb7e0054f, "e,g", 0 },	/* fadd.sd fsrc1,f0,fdest */
{ "fmov.ds",	0x48000130, 0xb7e004cf, "e,g", 0 },	/* fadd.ds fsrc1,f0,fdest */
{ "pfmov.ds",	0x48000530, 0xb73000cf, "e,g", 0 },	/* pfadd.ds fsrc1,f0,fdest */
@


1.8
log
@2003-05-20  Jason Eckhardt  <jle@@rice.edu>

        opcode/i860.h (flush): Set lower 3 bits properly and use 'L'
        for the immediate operand type instead of 'i'.
@
text
@d43 1
a43 1
    E_MOV = 1, E_ADDR, E_U32, E_AND, E_S32, E_DELAY
d138 4
d211 10
@


1.7
log
@2003-05-20  Jason Eckhardt  <jle@@rice.edu>

        opcode/i860.h (fzchks): Both S and R bits must be set.
        (pfzchks): Likewise.
        (faddp): Likewise.
        (pfaddp): Likewise.
        (fix.ss): Remove (invalid instruction).
        (pfix.ss): Likewise.
        (ftrunc.ss): Likewise.
        (pftrunc.ss): Likewise.
@
text
@d2 1
a2 1
   Copyright 1989, 1991, 2000 Free Software Foundation, Inc.
d179 2
a180 2
{ "flush",	0x34000000, 0xc81f0001, "i(2)", E_ADDR },	/* flush #const(isrc2) */
{ "flush",	0x34000001, 0xc81f0000, "i(2)++", E_ADDR },	/* flush #const(isrc2)++ */
@


1.6
log
@2003-05-18  Jason Eckhardt  <jle@@rice.edu>
gas:
        * config/tc-i860.c (i860_process_insn): Initialize fc after
        each opcode mismatch.

include/opcode:
        * i860.h (form, pform): Add missing .dd suffix.

opcodes:
        * i860-dis.c (print_insn_i860): Instruction shrd has a dual bit,
        print it.

bfd:
        * elf32-i860.c (elf32_i860_relocate_highadj): Simplify calculation.
@
text
@a435 1
{ "fix.ss",	0x48000032, 0xb40005cd, "e,g", 0 },	/* fix.p fsrc1,fdest */
a437 1
{ "pfix.ss",	0x48000432, 0xb40001cd, "e,g", 0 },	/* pfix.p fsrc1,fdest */
a455 1
{ "ftrunc.ss",	0x4800003a, 0xb40005c5, "e,g", 0 },	/* ftrunc.p fsrc1,fdest */
a457 1
{ "pftrunc.ss",	0x4800043a, 0xb40001c5, "e,g", 0 },	/* pftrunc.p fsrc1,fdest */
d471 4
a474 4
{ "fzchks",	0x4800015f, 0xb4000420, "e,f,g", 0 },	/* fzchks fsrc1,fsrc2,fdest */
{ "pfzchks",	0x4800055f, 0xb4000020, "e,f,g", 0 },	/* pfzchks fsrc1,fsrc2,fdest */
{ "faddp",	0x48000050, 0xb40005af, "e,f,g", 0 },	/* faddp fsrc1,fsrc2,fdest */
{ "pfaddp",	0x48000450, 0xb40001af, "e,f,g", 0 },	/* pfaddp fsrc1,fsrc2,fdest */
d477 2
a478 2
{ "form.dd",	0x480001da, 0xb4000425, "e,g", 0 },	/* form fsrc1,fdest */
{ "pform.dd",	0x480005da, 0xb4000025, "e,g", 0 },	/* pform fsrc1,fdest */
@


1.5
log
@2002-11-18  Klee Dienes  <kdienes@@apple.com>

	* arc.h (arc_ext_opcodes): Declare as extern.
	(arc_ext_operands): Declare as extern.
	* i860.h (i860_opcodes): Declare as const.

2002-11-18  Klee Dienes  <kdienes@@apple.com>

	* arc-opc.c (arc_ext_opcodes): Define.
	(arc_ext_operands): Define.
	* i386-dis.c (Suffix3DNow): Declare as const.
	* arm-opc.h (arm_opcodes): Declare as const.
	(thumb_opcodes): Declare as const.
	* h8500-opc.h (h8500_table): Declare as const.
	(h8500_table): Use a NULL for the opcode in the terminator, so
	that code testing (opcode->name) behaves correctly.
	* mcore-opc.h (mcore_table): Declare as const.
	* sh-opc.h (sh_table): Declare as const.
	* w65-opc.h (optable): Declare as const.
	* z8k-opc.h (z8k_table): Declare as const.
@
text
@d481 2
a482 2
{ "form",	0x480001da, 0xb4000425, "e,g", 0 },	/* form fsrc1,fdest */
{ "pform",	0x480005da, 0xb4000025, "e,g", 0 },	/* pform fsrc1,fdest */
@


1.4
log
@Fix typos in ChangeLogs; add coff/external.h; fix copyright dates
@
text
@d99 1
a99 1
static struct i860_opcode i860_opcodes[] =
@


1.4.30.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@d2 1
a2 1
   Copyright 1989, 1991, 2000, 2003 Free Software Foundation, Inc.
d43 1
a43 1
    E_MOV = 1, E_ADDR, E_U32, E_AND, E_S32, E_DELAY, XP_ONLY
d99 1
a99 1
static const struct i860_opcode i860_opcodes[] =
a137 4
{ "pfld.q",	0x60000004, 0x9c000003, "1(2),g", XP_ONLY },	/* pfld.q isrc1(isrc2),fdest */
{ "pfld.q",	0x64000004, 0x98000003, "L(2),g", XP_ONLY },	/* pfld.q #const(isrc2),fdest */
{ "pfld.q",	0x60000005, 0x9c000002, "1(2)++,g", XP_ONLY },	/* pfld.q isrc1(isrc2)++,fdest */
{ "pfld.q",	0x64000005, 0x98000002, "L(2)++,g", XP_ONLY },	/* pfld.q #const(isrc2)++,fdest */
d179 2
a180 2
{ "flush",	0x34000004, 0xc81f0003, "L(2)", E_ADDR },	/* flush #const(isrc2) */
{ "flush",	0x34000005, 0xc81f0002, "L(2)++", E_ADDR },	/* flush #const(isrc2)++ */
a206 10
{ "ldio.l",	0x4c000408, 0xb00003f7, "2,d", XP_ONLY },	/* ldio.l isrc2,idest */
{ "ldio.s",	0x4c000208, 0xb00005f7, "2,d", XP_ONLY },	/* ldio.s isrc2,idest */
{ "ldio.b",	0x4c000008, 0xb00007f7, "2,d", XP_ONLY },	/* ldio.b isrc2,idest */
{ "stio.l",	0x4c000409, 0xb00003f6, "1,2", XP_ONLY },	/* stio.l isrc1ni,isrc2 */
{ "stio.s",	0x4c000209, 0xb00005f6, "1,2", XP_ONLY },	/* stio.s isrc1ni,isrc2 */
{ "stio.b",	0x4c000009, 0xb00007f6, "1,2", XP_ONLY },	/* stio.b isrc1ni,isrc2 */
{ "ldint.l",	0x4c00040a, 0xb00003f5, "2,d", XP_ONLY },	/* ldint.l isrc2,idest */
{ "ldint.s",	0x4c00020a, 0xb00005f5, "2,d", XP_ONLY },	/* ldint.s isrc2,idest */
{ "ldint.b",	0x4c00000a, 0xb00007f5, "2,d", XP_ONLY },	/* ldint.b isrc2,idest */
{ "scyc.b",	0x4c00000b, 0xb00007f4, "2", XP_ONLY },		/* scyc.b isrc2 */
d436 1
d439 1
d458 1
d461 1
d475 4
a478 4
{ "fzchks",	0x480001df, 0xb4000420, "e,f,g", 0 },	/* fzchks fsrc1,fsrc2,fdest */
{ "pfzchks",	0x480005df, 0xb4000020, "e,f,g", 0 },	/* pfzchks fsrc1,fsrc2,fdest */
{ "faddp",	0x480001d0, 0xb400042f, "e,f,g", 0 },	/* faddp fsrc1,fsrc2,fdest */
{ "pfaddp",	0x480005d0, 0xb400002f, "e,f,g", 0 },	/* pfaddp fsrc1,fsrc2,fdest */
d487 3
a489 3
{ "fmov.sd",	0x480000b3, 0xb400054c, "e,g", 0 },	/* famov.sd fsrc1,fdest */
{ "fmov.ds",	0x48000133, 0xb40004cc, "e,g", 0 },	/* famov.ds fsrc1,fdest */
{ "pfmov.ds",	0x48000533, 0xb40000cc, "e,g", 0 },	/* pfamov.ds fsrc1,fdest */
@


1.4.28.1
log
@2002-12-23  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021223-merge.
@
text
@d99 1
a99 1
static const struct i860_opcode i860_opcodes[] =
@


1.4.28.2
log
@2003-05-23  David Carlton  <carlton@@bactrian.org>

	* Merge with mainline; tag is carlton_dictionary-20030523-merge.
@
text
@d2 1
a2 1
   Copyright 1989, 1991, 2000, 2003 Free Software Foundation, Inc.
d179 2
a180 2
{ "flush",	0x34000004, 0xc81f0003, "L(2)", E_ADDR },	/* flush #const(isrc2) */
{ "flush",	0x34000005, 0xc81f0002, "L(2)++", E_ADDR },	/* flush #const(isrc2)++ */
d436 1
d439 1
d458 1
d461 1
d475 4
a478 4
{ "fzchks",	0x480001df, 0xb4000420, "e,f,g", 0 },	/* fzchks fsrc1,fsrc2,fdest */
{ "pfzchks",	0x480005df, 0xb4000020, "e,f,g", 0 },	/* pfzchks fsrc1,fsrc2,fdest */
{ "faddp",	0x480001d0, 0xb400042f, "e,f,g", 0 },	/* faddp fsrc1,fsrc2,fdest */
{ "pfaddp",	0x480005d0, 0xb400002f, "e,f,g", 0 },	/* pfaddp fsrc1,fsrc2,fdest */
@


1.4.28.3
log
@2003-06-27  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20030627-merge.
@
text
@d43 1
a43 1
    E_MOV = 1, E_ADDR, E_U32, E_AND, E_S32, E_DELAY, XP_ONLY
a137 4
{ "pfld.q",	0x60000004, 0x9c000003, "1(2),g", XP_ONLY },	/* pfld.q isrc1(isrc2),fdest */
{ "pfld.q",	0x64000004, 0x98000003, "L(2),g", XP_ONLY },	/* pfld.q #const(isrc2),fdest */
{ "pfld.q",	0x60000005, 0x9c000002, "1(2)++,g", XP_ONLY },	/* pfld.q isrc1(isrc2)++,fdest */
{ "pfld.q",	0x64000005, 0x98000002, "L(2)++,g", XP_ONLY },	/* pfld.q #const(isrc2)++,fdest */
a206 10
{ "ldio.l",	0x4c000408, 0xb00003f7, "2,d", XP_ONLY },	/* ldio.l isrc2,idest */
{ "ldio.s",	0x4c000208, 0xb00005f7, "2,d", XP_ONLY },	/* ldio.s isrc2,idest */
{ "ldio.b",	0x4c000008, 0xb00007f7, "2,d", XP_ONLY },	/* ldio.b isrc2,idest */
{ "stio.l",	0x4c000409, 0xb00003f6, "1,2", XP_ONLY },	/* stio.l isrc1ni,isrc2 */
{ "stio.s",	0x4c000209, 0xb00005f6, "1,2", XP_ONLY },	/* stio.s isrc1ni,isrc2 */
{ "stio.b",	0x4c000009, 0xb00007f6, "1,2", XP_ONLY },	/* stio.b isrc1ni,isrc2 */
{ "ldint.l",	0x4c00040a, 0xb00003f5, "2,d", XP_ONLY },	/* ldint.l isrc2,idest */
{ "ldint.s",	0x4c00020a, 0xb00005f5, "2,d", XP_ONLY },	/* ldint.s isrc2,idest */
{ "ldint.b",	0x4c00000a, 0xb00007f5, "2,d", XP_ONLY },	/* ldint.b isrc2,idest */
{ "scyc.b",	0x4c00000b, 0xb00007f4, "2", XP_ONLY },		/* scyc.b isrc2 */
@


1.4.28.4
log
@2003-09-17  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20030917-merge.
@
text
@d497 3
a499 3
{ "fmov.sd",	0x480000b3, 0xb400054c, "e,g", 0 },	/* famov.sd fsrc1,fdest */
{ "fmov.ds",	0x48000133, 0xb40004cc, "e,g", 0 },	/* famov.ds fsrc1,fdest */
{ "pfmov.ds",	0x48000533, 0xb40000cc, "e,g", 0 },	/* pfamov.ds fsrc1,fdest */
@


1.3
log
@
gas:
2000-08-08  Jason Eckhardt  <jle@@cygnus.com>

	* config/tc-i860.h: Rework completely for BFD_ASSEMBLER.
	(i860_fix_info): New enum.
	(MD_APPLY_FIX3): Define.
	(WORKING_DOT_WORD): Define.
	(TC_HANDLES_FX_DONE): Define.
	(DIFF_EXPR_OK): Define.
	(LISTING_HEADER): Define.
	(TARGET_FORMAT): Select target format based on endian flag.
	(TARGET_BYTES_BIG_ENDIAN): Default to little endian.
	(target_big_endian): Add external declaration.

	* config/tc-i860.c: All existing code reworked completely. Other
	new code shown below.
	(SYNTAX_SVR4): Define.
	(target_warn_expand): New variable.
	(md_shortopts): Declare and define (-Qy, -Qn, and -V options).
	(md_longopts): Declare and define with new options (-EL, -EB,
	and -mwarn-expand).
	(md_show_usage): New function.
	(md_operand): New function.
	(obtain_reloc_for_imm16): New function.
	(md_apply_fix3): New function.
	(tc_gen_reloc): New function.

include:
2000-08-08  Jason Eckhardt  <jle@@cygnus.com>

	* opcode/i860.h: Small formatting adjustments.

opcode:
2000-08-08  Jason Eckhardt  <jle@@cygnus.com>

	* i860-dis.c (print_br_address): Change third argument from int
	to long.

bfd:
2000-08-08  Jason Eckhardt  <jle@@cygnus.com>
	* elf32-i860.c (elf32_i860_howto_table): Updated some fields.
@
text
@d2 1
a2 1
   Copyright (C) 1989, 2000 Free Software Foundation, Inc.
@


1.3.2.1
log
@Update copyright notices.
@
text
@d2 1
a2 1
   Copyright 1989, 1991, 2000 Free Software Foundation, Inc.
@


1.2
log
@

2000-07-22  Jason Eckhardt  <jle@@cygnus.com>

	* include/opcode/i860.h (btne, bte, bla): Changed these opcodes
	to use sbroff ('r') instead of split16 ('s').
	(J, K, L, M): New operand types for 16-bit aligned fields.
	(ld.x, {p}fld.x, fst.x, pst.d): Changed these opcodes to
	use I, J, K, L, M instead of just I.
	(T, U): New operand types for split 16-bit aligned fields.
	(st.x): Changed these opcodes to use S, T, U instead of just S.
	(andh, andnoth, orh, xorh): Deleted 3-register forms as they do not
	exist on the i860.
	(pfgt.sd, pfle.sd): Deleted these as they do not exist on the i860.
	(pfeq.ss, pfeq.dd): New opcodes.
	(st.s): Fixed incorrect mask bits.
	(fmlow): Fixed incorrect mask bits.
	(fzchkl, pfzchkl): Fixed incorrect mask bits.
	(faddz, pfaddz): Fixed incorrect mask bits.
	(form, pform): Fixed incorrect mask bits.
	(pfld.l): Fixed incorrect mask bits.
	(fst.q): Fixed incorrect mask bits.
	(all floating point opcodes): Fixed incorrect mask bits for
	handling of dual bit.

	* include/elf/i860.h: New file.
	(elf_i860_reloc_type): Defined ELF32 i860 relocations.

	* bfd/cpu-i860.c: Added comments.

	* bfd/elf32-i860.c (TARGET_LITTLE_SYM): Defined to
	bfd_elf32_i860_little_vec.
	(TARGET_LITTLE_NAME): Defined to "elf32-i860-little".
	(ELF_MAXPAGESIZE): Changed to 4096.

	* bfd/targets.c (bfd_elf32_i860_little_vec): Declaration of
	new target.
	(bfd_target_vector): Added bfd_elf32_i860_little_vec.

	* bfd/config.bfd (i860-stardent-sysv4*, i860-stardent-elf*): Added
	config for little endian elf32 i860.
	(targ_defvec): Define for the new config above
	as "bfd_elf32_i860_little_vec".
	(targ_selvecs): Define for the new config above
	as "bfd_elf32_i860_vec bfd_elf32_i860_little_vec"

	* bfd/configure.in (bfd_elf32_i860_little_vec): Added recognition
	of new target vec.

	* bfd/configure: Regenerated.

	* opcodes/i860-dis.c: New file.
	(print_insn_i860): New function.
	(print_br_address): New function.
	(sign_extend): New function.
	(BITWISE_OP): New macro.
	(I860_REG_PREFIX): New macro.
	(grnames, frnames, crnames): New structures.

	* opcodes/disassemble.c (ARCH_i860): Define.
	(disassembler): Add check for bfd_arch_i860 to set disassemble
	function to print_insn_i860.

	* include/dis-asm.h (print_insn_i860): Add prototype.

	* opcodes/Makefile.in (CFILES): Added i860-dis.c.
	(ALL_MACHINES): Added i860-dis.lo.
	(i860-dis.lo): New dependences.

	* opcodes/configure.in: New bits for bfd_i860_arch.

	* opcodes/configure: Regenerated.
@
text
@d18 2
a19 1
the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
d21 2
a22 7
#if !defined(__STDC__) && !defined(const)
#define const
#endif

/*
 * Structure of an opcode table entry.
 */
d25 1
d27 7
a33 2
    unsigned long match;	/* Bits that must be set.  */
    unsigned long lose;	/* Bits that must not be set.  */
d35 1
d40 1
d46 2
a47 2
/*
   All i860 opcodes are 32 bits, except for the pseudoinstructions
d90 1
a90 3
   g    dest floating point register.

*/
a91 4
/* The order of the opcodes in this table is significant:
   
   * The assembler requires that all instances of the same mnemonic must be
   consecutive.  If they aren't, the assembler will bomb at runtime.
d93 5
a97 1
   * The disassembler should not care about the order of the opcodes.  */
d101 1
a101 2

/* REG-Format Instructions */
d216 1
a216 1
/* Floating Point Escape Instruction Format - pfam.p fsrc1,fsrc2,fdest */
d266 1
a266 1
/* Floating Point Escape Instruction Format - pfsm.p fsrc1,fsrc2,fdest */
d316 1
a316 1
/* Floating Point Escape Instruction Format - pfmam.p fsrc1,fsrc2,fdest */
d363 1
a363 1
/* Floating Point Escape Instruction Format - pfmsm.p fsrc1,fsrc2,fdest */
a409 1

d450 1
a450 1
/* pfgt has R bit cleared; pfle has R bit set */
d453 1
a453 1
/* pfgt has R bit cleared; pfle has R bit set */
d484 1
a484 1
/* Floating point pseudo-instructions */
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
   Copyright (C) 1989 Free Software Foundation, Inc.
d72 5
a76 1
   I    16 bit immediate, aligned.
d81 3
a83 1
   S	split 16 bit immediate, aligned.
d105 1
a105 1
{ "ld.s",	0x14000001, 0xe8000000, "I(2),d", E_ADDR },	/* ld.s #const(isrc2),idest */
d107 1
a107 1
{ "ld.l",	0x14000001, 0xe8000000, "I(2),d", E_ADDR },	/* ld.l #const(isrc2),idest */
d111 2
a112 2
{ "st.s",	0x1c000000, 0xe0000000, "1,S(2)", E_ADDR },	/* st.s isrc1ni,#const(isrc2) */
{ "st.l",	0x1c000001, 0xe0000000, "1,S(2)", E_ADDR },	/* st.l isrc1ni,#const(isrc2) */
d117 1
a117 1
{ "fld.l",	0x24000002, 0xd8000001, "i(2),g", E_ADDR },	/* fld.l #const(isrc2),fdest */
d119 1
a119 1
{ "fld.l",	0x24000003, 0xd8000000, "i(2)++,g", E_ADDR },	/* fld.l #const(isrc2)++,fdest */
d121 1
a121 1
{ "fld.d",	0x24000000, 0xd8000007, "i(2),g", E_ADDR },	/* fld.d #const(isrc2),fdest */
d123 1
a123 1
{ "fld.d",	0x24000001, 0xd8000006, "i(2)++,g", E_ADDR },	/* fld.d #const(isrc2)++,fdest */
d125 1
a125 1
{ "fld.q",	0x24000004, 0xd8000003, "i(2),g", E_ADDR },	/* fld.q #const(isrc2),fdest */
d127 1
a127 1
{ "fld.q",	0x24000005, 0xd8000002, "i(2)++,g", E_ADDR },	/* fld.q #const(isrc2)++,fdest */
d129 4
a132 4
{ "pfld.l",	0x60000000, 0x9c000003, "1(2),g", 0 },	/* pfld.l isrc1(isrc2),fdest */
{ "pfld.l",	0x64000000, 0x98000003, "i(2),g", E_ADDR },	/* pfld.l #const(isrc2),fdest */
{ "pfld.l",	0x60000001, 0x9c000002, "1(2)++,g", 0 },	/* pfld.l isrc1(isrc2)++,fdest */
{ "pfld.l",	0x64000001, 0x98000002, "i(2)++,g", E_ADDR },	/* pfld.l #const(isrc2)++,fdest */
d134 1
a134 1
{ "pfld.d",	0x64000000, 0x98000007, "i(2),g", E_ADDR },	/* pfld.d #const(isrc2),fdest */
d136 1
a136 1
{ "pfld.d",	0x64000001, 0x98000006, "i(2)++,g", E_ADDR },	/* pfld.d #const(isrc2)++,fdest */
d139 1
a139 1
{ "fst.l",	0x2c000002, 0xd0000001, "g,i(2)", E_ADDR },	/* fst.l fdest,#const(isrc2) */
d141 1
a141 1
{ "fst.l",	0x2c000003, 0xd0000000, "g,i(2)++", E_ADDR },	/* fst.l fdest,#const(isrc2)++ */
d143 1
a143 1
{ "fst.d",	0x2c000000, 0xd0000007, "g,i(2)", E_ADDR },	/* fst.d fdest,#const(isrc2) */
d145 5
a149 1
{ "fst.d",	0x2c000001, 0xd0000006, "g,i(2)++", E_ADDR },	/* fst.d fdest,#const(isrc2)++ */
d151 2
a152 2
{ "pst.d",	0x3c000000, 0xc0000007, "g,i(2)", E_ADDR },	/* pst.d fdest,#const(isrc2) */
{ "pst.d",	0x3c000001, 0xc0000006, "g,i(2)++", E_ADDR },	/* pst.d fdest,#const(isrc2)++ */
a182 1
{ "andh",	0xc8000000, 0x34000000, "1,2,d", 0 },	/* andh isrc1,isrc2,idest */
a185 1
{ "andnoth",	0xd8000000, 0x24000000, "1,2,d", 0 },	/* andnoth isrc1,isrc2,idest */
a188 1
{ "orh",	0xe8000000, 0x14000000, "1,2,d", 0 },	/* orh isrc1,isrc2,idest */
a191 1
{ "xorh",	0xf8000000, 0x04000000, "1,2,d", 0 },	/* xorh isrc1,isrc2,idest */
d194 5
a198 5
{ "bte",	0x58000000, 0xa4000000, "1,2,s", 0 },	/* bte isrc1s,isrc2,sbroff */
{ "bte",	0x5c000000, 0xa0000000, "5,2,s", 0 },	/* bte #const5,isrc2,sbroff */
{ "btne",	0x50000000, 0xac000000, "1,2,s", 0 },	/* btne isrc1s,isrc2,sbroff */
{ "btne",	0x54000000, 0xa8000000, "5,2,s", 0 },	/* btne #const5,isrc2,sbroff */
{ "bla",	0xb4000000, 0x48000000, "1,2,s", E_DELAY },	/* bla isrc1s,isrc2,sbroff */
d216 48
a263 48
{ "r2p1.ss",	0x48000400, 0xb40003ff, "e,f,g", 0 },
{ "r2p1.sd",	0x48000480, 0xb400037f, "e,f,g", 0 },
{ "r2p1.dd",	0x48000580, 0xb400027f, "e,f,g", 0 },
{ "r2pt.ss",	0x48000401, 0xb40003fe, "e,f,g", 0 },
{ "r2pt.sd",	0x48000481, 0xb400037e, "e,f,g", 0 },
{ "r2pt.dd",	0x48000581, 0xb400027e, "e,f,g", 0 },
{ "r2ap1.ss",	0x48000402, 0xb40003fd, "e,f,g", 0 },
{ "r2ap1.sd",	0x48000482, 0xb400037d, "e,f,g", 0 },
{ "r2ap1.dd",	0x48000582, 0xb400027d, "e,f,g", 0 },
{ "r2apt.ss",	0x48000403, 0xb40003fc, "e,f,g", 0 },
{ "r2apt.sd",	0x48000483, 0xb400037c, "e,f,g", 0 },
{ "r2apt.dd",	0x48000583, 0xb400027c, "e,f,g", 0 },
{ "i2p1.ss",	0x48000404, 0xb40003fb, "e,f,g", 0 },
{ "i2p1.sd",	0x48000484, 0xb400037b, "e,f,g", 0 },
{ "i2p1.dd",	0x48000584, 0xb400027b, "e,f,g", 0 },
{ "i2pt.ss",	0x48000405, 0xb40003fa, "e,f,g", 0 },
{ "i2pt.sd",	0x48000485, 0xb400037a, "e,f,g", 0 },
{ "i2pt.dd",	0x48000585, 0xb400027a, "e,f,g", 0 },
{ "i2ap1.ss",	0x48000406, 0xb40003f9, "e,f,g", 0 },
{ "i2ap1.sd",	0x48000486, 0xb4000379, "e,f,g", 0 },
{ "i2ap1.dd",	0x48000586, 0xb4000279, "e,f,g", 0 },
{ "i2apt.ss",	0x48000407, 0xb40003f8, "e,f,g", 0 },
{ "i2apt.sd",	0x48000487, 0xb4000378, "e,f,g", 0 },
{ "i2apt.dd",	0x48000587, 0xb4000278, "e,f,g", 0 },
{ "rat1p2.ss",	0x48000408, 0xb40003f7, "e,f,g", 0 },
{ "rat1p2.sd",	0x48000488, 0xb4000377, "e,f,g", 0 },
{ "rat1p2.dd",	0x48000588, 0xb4000277, "e,f,g", 0 },
{ "m12apm.ss",	0x48000409, 0xb40003f6, "e,f,g", 0 },
{ "m12apm.sd",	0x48000489, 0xb4000376, "e,f,g", 0 },
{ "m12apm.dd",	0x48000589, 0xb4000276, "e,f,g", 0 },
{ "ra1p2.ss",	0x4800040a, 0xb40003f5, "e,f,g", 0 },
{ "ra1p2.sd",	0x4800048a, 0xb4000375, "e,f,g", 0 },
{ "ra1p2.dd",	0x4800058a, 0xb4000275, "e,f,g", 0 },
{ "m12ttpa.ss",	0x4800040b, 0xb40003f4, "e,f,g", 0 },
{ "m12ttpa.sd",	0x4800048b, 0xb4000374, "e,f,g", 0 },
{ "m12ttpa.dd",	0x4800058b, 0xb4000274, "e,f,g", 0 },
{ "iat1p2.ss",	0x4800040c, 0xb40003f3, "e,f,g", 0 },
{ "iat1p2.sd",	0x4800048c, 0xb4000373, "e,f,g", 0 },
{ "iat1p2.dd",	0x4800058c, 0xb4000273, "e,f,g", 0 },
{ "m12tpm.ss",	0x4800040d, 0xb40003f2, "e,f,g", 0 },
{ "m12tpm.sd",	0x4800048d, 0xb4000372, "e,f,g", 0 },
{ "m12tpm.dd",	0x4800058d, 0xb4000272, "e,f,g", 0 },
{ "ia1p2.ss",	0x4800040e, 0xb40003f1, "e,f,g", 0 },
{ "ia1p2.sd",	0x4800048e, 0xb4000371, "e,f,g", 0 },
{ "ia1p2.dd",	0x4800058e, 0xb4000271, "e,f,g", 0 },
{ "m12tpa.ss",	0x4800040f, 0xb40003f0, "e,f,g", 0 },
{ "m12tpa.sd",	0x4800048f, 0xb4000370, "e,f,g", 0 },
{ "m12tpa.dd",	0x4800058f, 0xb4000270, "e,f,g", 0 },
d266 48
a313 48
{ "r2s1.ss",	0x48000410, 0xb40003ef, "e,f,g", 0 },
{ "r2s1.sd",	0x48000490, 0xb400036f, "e,f,g", 0 },
{ "r2s1.dd",	0x48000590, 0xb400026f, "e,f,g", 0 },
{ "r2st.ss",	0x48000411, 0xb40003ee, "e,f,g", 0 },
{ "r2st.sd",	0x48000491, 0xb400036e, "e,f,g", 0 },
{ "r2st.dd",	0x48000591, 0xb400026e, "e,f,g", 0 },
{ "r2as1.ss",	0x48000412, 0xb40003ed, "e,f,g", 0 },
{ "r2as1.sd",	0x48000492, 0xb400036d, "e,f,g", 0 },
{ "r2as1.dd",	0x48000592, 0xb400026d, "e,f,g", 0 },
{ "r2ast.ss",	0x48000413, 0xb40003ec, "e,f,g", 0 },
{ "r2ast.sd",	0x48000493, 0xb400036c, "e,f,g", 0 },
{ "r2ast.dd",	0x48000593, 0xb400026c, "e,f,g", 0 },
{ "i2s1.ss",	0x48000414, 0xb40003eb, "e,f,g", 0 },
{ "i2s1.sd",	0x48000494, 0xb400036b, "e,f,g", 0 },
{ "i2s1.dd",	0x48000594, 0xb400026b, "e,f,g", 0 },
{ "i2st.ss",	0x48000415, 0xb40003ea, "e,f,g", 0 },
{ "i2st.sd",	0x48000495, 0xb400036a, "e,f,g", 0 },
{ "i2st.dd",	0x48000595, 0xb400026a, "e,f,g", 0 },
{ "i2as1.ss",	0x48000416, 0xb40003e9, "e,f,g", 0 },
{ "i2as1.sd",	0x48000496, 0xb4000369, "e,f,g", 0 },
{ "i2as1.dd",	0x48000596, 0xb4000269, "e,f,g", 0 },
{ "i2ast.ss",	0x48000417, 0xb40003e8, "e,f,g", 0 },
{ "i2ast.sd",	0x48000497, 0xb4000368, "e,f,g", 0 },
{ "i2ast.dd",	0x48000597, 0xb4000268, "e,f,g", 0 },
{ "rat1s2.ss",	0x48000418, 0xb40003e7, "e,f,g", 0 },
{ "rat1s2.sd",	0x48000498, 0xb4000367, "e,f,g", 0 },
{ "rat1s2.dd",	0x48000598, 0xb4000267, "e,f,g", 0 },
{ "m12asm.ss",	0x48000419, 0xb40003e6, "e,f,g", 0 },
{ "m12asm.sd",	0x48000499, 0xb4000366, "e,f,g", 0 },
{ "m12asm.dd",	0x48000599, 0xb4000266, "e,f,g", 0 },
{ "ra1s2.ss",	0x4800041a, 0xb40003e5, "e,f,g", 0 },
{ "ra1s2.sd",	0x4800049a, 0xb4000365, "e,f,g", 0 },
{ "ra1s2.dd",	0x4800059a, 0xb4000265, "e,f,g", 0 },
{ "m12ttsa.ss",	0x4800041b, 0xb40003e4, "e,f,g", 0 },
{ "m12ttsa.sd",	0x4800049b, 0xb4000364, "e,f,g", 0 },
{ "m12ttsa.dd",	0x4800059b, 0xb4000264, "e,f,g", 0 },
{ "iat1s2.ss",	0x4800041c, 0xb40003e3, "e,f,g", 0 },
{ "iat1s2.sd",	0x4800049c, 0xb4000363, "e,f,g", 0 },
{ "iat1s2.dd",	0x4800059c, 0xb4000263, "e,f,g", 0 },
{ "m12tsm.ss",	0x4800041d, 0xb40003e2, "e,f,g", 0 },
{ "m12tsm.sd",	0x4800049d, 0xb4000362, "e,f,g", 0 },
{ "m12tsm.dd",	0x4800059d, 0xb4000262, "e,f,g", 0 },
{ "ia1s2.ss",	0x4800041e, 0xb40003e1, "e,f,g", 0 },
{ "ia1s2.sd",	0x4800049e, 0xb4000361, "e,f,g", 0 },
{ "ia1s2.dd",	0x4800059e, 0xb4000261, "e,f,g", 0 },
{ "m12tsa.ss",	0x4800041f, 0xb40003e0, "e,f,g", 0 },
{ "m12tsa.sd",	0x4800049f, 0xb4000360, "e,f,g", 0 },
{ "m12tsa.dd",	0x4800059f, 0xb4000260, "e,f,g", 0 },
d316 45
a360 45
{ "mr2p1.ss",	0x48000000, 0xb40007ff, "e,f,g", 0 },
{ "mr2p1.sd",	0x48000080, 0xb400077f, "e,f,g", 0 },
{ "mr2p1.dd",	0x48000180, 0xb400067f, "e,f,g", 0 },
{ "mr2pt.ss",	0x48000001, 0xb40007fe, "e,f,g", 0 },
{ "mr2pt.sd",	0x48000081, 0xb400077e, "e,f,g", 0 },
{ "mr2pt.dd",	0x48000181, 0xb400067e, "e,f,g", 0 },
{ "mr2mp1.ss",	0x48000002, 0xb40007fd, "e,f,g", 0 },
{ "mr2mp1.sd",	0x48000082, 0xb400077d, "e,f,g", 0 },
{ "mr2mp1.dd",	0x48000182, 0xb400067d, "e,f,g", 0 },
{ "mr2mpt.ss",	0x48000003, 0xb40007fc, "e,f,g", 0 },
{ "mr2mpt.sd",	0x48000083, 0xb400077c, "e,f,g", 0 },
{ "mr2mpt.dd",	0x48000183, 0xb400067c, "e,f,g", 0 },
{ "mi2p1.ss",	0x48000004, 0xb40007fb, "e,f,g", 0 },
{ "mi2p1.sd",	0x48000084, 0xb400077b, "e,f,g", 0 },
{ "mi2p1.dd",	0x48000184, 0xb400067b, "e,f,g", 0 },
{ "mi2pt.ss",	0x48000005, 0xb40007fa, "e,f,g", 0 },
{ "mi2pt.sd",	0x48000085, 0xb400077a, "e,f,g", 0 },
{ "mi2pt.dd",	0x48000185, 0xb400067a, "e,f,g", 0 },
{ "mi2mp1.ss",	0x48000006, 0xb40007f9, "e,f,g", 0 },
{ "mi2mp1.sd",	0x48000086, 0xb4000779, "e,f,g", 0 },
{ "mi2mp1.dd",	0x48000186, 0xb4000679, "e,f,g", 0 },
{ "mi2mpt.ss",	0x48000007, 0xb40007f8, "e,f,g", 0 },
{ "mi2mpt.sd",	0x48000087, 0xb4000778, "e,f,g", 0 },
{ "mi2mpt.dd",	0x48000187, 0xb4000678, "e,f,g", 0 },
{ "mrmt1p2.ss",	0x48000008, 0xb40007f7, "e,f,g", 0 },
{ "mrmt1p2.sd",	0x48000088, 0xb4000777, "e,f,g", 0 },
{ "mrmt1p2.dd",	0x48000188, 0xb4000677, "e,f,g", 0 },
{ "mm12mpm.ss",	0x48000009, 0xb40007f6, "e,f,g", 0 },
{ "mm12mpm.sd",	0x48000089, 0xb4000776, "e,f,g", 0 },
{ "mm12mpm.dd",	0x48000189, 0xb4000676, "e,f,g", 0 },
{ "mrm1p2.ss",	0x4800000a, 0xb40007f5, "e,f,g", 0 },
{ "mrm1p2.sd",	0x4800008a, 0xb4000775, "e,f,g", 0 },
{ "mrm1p2.dd",	0x4800018a, 0xb4000675, "e,f,g", 0 },
{ "mm12ttpm.ss",0x4800000b, 0xb40007f4, "e,f,g", 0 },
{ "mm12ttpm.sd",0x4800008b, 0xb4000774, "e,f,g", 0 },
{ "mm12ttpm.dd",0x4800018b, 0xb4000674, "e,f,g", 0 },
{ "mimt1p2.ss",	0x4800000c, 0xb40007f3, "e,f,g", 0 },
{ "mimt1p2.sd",	0x4800008c, 0xb4000773, "e,f,g", 0 },
{ "mimt1p2.dd",	0x4800018c, 0xb4000673, "e,f,g", 0 },
{ "mm12tpm.ss",	0x4800000d, 0xb40007f2, "e,f,g", 0 },
{ "mm12tpm.sd",	0x4800008d, 0xb4000772, "e,f,g", 0 },
{ "mm12tpm.dd",	0x4800018d, 0xb4000672, "e,f,g", 0 },
{ "mim1p2.ss",	0x4800000e, 0xb40007f1, "e,f,g", 0 },
{ "mim1p2.sd",	0x4800008e, 0xb4000771, "e,f,g", 0 },
{ "mim1p2.dd",	0x4800018e, 0xb4000671, "e,f,g", 0 },
d363 87
a449 87
{ "mr2s1.ss",	0x48000010, 0xb40007ef, "e,f,g", 0 },
{ "mr2s1.sd",	0x48000090, 0xb400076f, "e,f,g", 0 },
{ "mr2s1.dd",	0x48000190, 0xb400066f, "e,f,g", 0 },
{ "mr2st.ss",	0x48000011, 0xb40007ee, "e,f,g", 0 },
{ "mr2st.sd",	0x48000091, 0xb400076e, "e,f,g", 0 },
{ "mr2st.dd",	0x48000191, 0xb400066e, "e,f,g", 0 },
{ "mr2ms1.ss",	0x48000012, 0xb40007ed, "e,f,g", 0 },
{ "mr2ms1.sd",	0x48000092, 0xb400076d, "e,f,g", 0 },
{ "mr2ms1.dd",	0x48000192, 0xb400066d, "e,f,g", 0 },
{ "mr2mst.ss",	0x48000013, 0xb40007ec, "e,f,g", 0 },
{ "mr2mst.sd",	0x48000093, 0xb400076c, "e,f,g", 0 },
{ "mr2mst.dd",	0x48000193, 0xb400066c, "e,f,g", 0 },
{ "mi2s1.ss",	0x48000014, 0xb40007eb, "e,f,g", 0 },
{ "mi2s1.sd",	0x48000094, 0xb400076b, "e,f,g", 0 },
{ "mi2s1.dd",	0x48000194, 0xb400066b, "e,f,g", 0 },
{ "mi2st.ss",	0x48000015, 0xb40007ea, "e,f,g", 0 },
{ "mi2st.sd",	0x48000095, 0xb400076a, "e,f,g", 0 },
{ "mi2st.dd",	0x48000195, 0xb400066a, "e,f,g", 0 },
{ "mi2ms1.ss",	0x48000016, 0xb40007e9, "e,f,g", 0 },
{ "mi2ms1.sd",	0x48000096, 0xb4000769, "e,f,g", 0 },
{ "mi2ms1.dd",	0x48000196, 0xb4000669, "e,f,g", 0 },
{ "mi2mst.ss",	0x48000017, 0xb40007e8, "e,f,g", 0 },
{ "mi2mst.sd",	0x48000097, 0xb4000768, "e,f,g", 0 },
{ "mi2mst.dd",	0x48000197, 0xb4000668, "e,f,g", 0 },
{ "mrmt1s2.ss",	0x48000018, 0xb40007e7, "e,f,g", 0 },
{ "mrmt1s2.sd",	0x48000098, 0xb4000767, "e,f,g", 0 },
{ "mrmt1s2.dd",	0x48000198, 0xb4000667, "e,f,g", 0 },
{ "mm12msm.ss",	0x48000019, 0xb40007e6, "e,f,g", 0 },
{ "mm12msm.sd",	0x48000099, 0xb4000766, "e,f,g", 0 },
{ "mm12msm.dd",	0x48000199, 0xb4000666, "e,f,g", 0 },
{ "mrm1s2.ss",	0x4800001a, 0xb40007e5, "e,f,g", 0 },
{ "mrm1s2.sd",	0x4800009a, 0xb4000765, "e,f,g", 0 },
{ "mrm1s2.dd",	0x4800019a, 0xb4000665, "e,f,g", 0 },
{ "mm12ttsm.ss",0x4800001b, 0xb40007e4, "e,f,g", 0 },
{ "mm12ttsm.sd",0x4800009b, 0xb4000764, "e,f,g", 0 },
{ "mm12ttsm.dd",0x4800019b, 0xb4000664, "e,f,g", 0 },
{ "mimt1s2.ss",	0x4800001c, 0xb40007e3, "e,f,g", 0 },
{ "mimt1s2.sd",	0x4800009c, 0xb4000763, "e,f,g", 0 },
{ "mimt1s2.dd",	0x4800019c, 0xb4000663, "e,f,g", 0 },
{ "mm12tsm.ss",	0x4800001d, 0xb40007e2, "e,f,g", 0 },
{ "mm12tsm.sd",	0x4800009d, 0xb4000762, "e,f,g", 0 },
{ "mm12tsm.dd",	0x4800019d, 0xb4000662, "e,f,g", 0 },
{ "mim1s2.ss",	0x4800001e, 0xb40007e1, "e,f,g", 0 },
{ "mim1s2.sd",	0x4800009e, 0xb4000761, "e,f,g", 0 },
{ "mim1s2.dd",	0x4800019e, 0xb4000661, "e,f,g", 0 },


{ "fmul.ss",	0x48000020, 0xb40007df, "e,f,g", 0 },	/* fmul.p fsrc1,fsrc2,fdest */
{ "fmul.sd",	0x480000a0, 0xb400075f, "e,f,g", 0 },	/* fmul.p fsrc1,fsrc2,fdest */
{ "fmul.dd",	0x480001a0, 0xb400065f, "e,f,g", 0 },	/* fmul.p fsrc1,fsrc2,fdest */
{ "pfmul.ss",	0x48000420, 0xb40003df, "e,f,g", 0 },	/* pfmul.p fsrc1,fsrc2,fdest */
{ "pfmul.sd",	0x480004a0, 0xb400035f, "e,f,g", 0 },	/* pfmul.p fsrc1,fsrc2,fdest */
{ "pfmul.dd",	0x480005a0, 0xb400025f, "e,f,g", 0 },	/* pfmul.p fsrc1,fsrc2,fdest */
{ "pfmul3.dd",	0x480005a4, 0xb400025b, "e,f,g", 0 },	/* pfmul3.p fsrc1,fsrc2,fdest */
{ "fmlow.dd",	0x480001a1, 0xb400065e, "e,f,g", 0 },	/* fmlow.dd fsrc1,fsrc2,fdest */
{ "frcp.ss",	0x48000022, 0xb40007dd, "f,g", 0 },	/* frcp.p fsrc2,fdest */
{ "frcp.sd",	0x480000a2, 0xb400075d, "f,g", 0 },	/* frcp.p fsrc2,fdest */
{ "frcp.dd",	0x480001a2, 0xb400065d, "f,g", 0 },	/* frcp.p fsrc2,fdest */
{ "frsqr.ss",	0x48000023, 0xb40007dc, "f,g", 0 },	/* frsqr.p fsrc2,fdest */
{ "frsqr.sd",	0x480000a3, 0xb400075c, "f,g", 0 },	/* frsqr.p fsrc2,fdest */
{ "frsqr.dd",	0x480001a3, 0xb400065c, "f,g", 0 },	/* frsqr.p fsrc2,fdest */
{ "fadd.ss",	0x48000030, 0xb40007cf, "e,f,g", 0 },	/* fadd.p fsrc1,fsrc2,fdest */
{ "fadd.sd",	0x480000b0, 0xb400074f, "e,f,g", 0 },	/* fadd.p fsrc1,fsrc2,fdest */
{ "fadd.dd",	0x480001b0, 0xb400064f, "e,f,g", 0 },	/* fadd.p fsrc1,fsrc2,fdest */
{ "pfadd.ss",	0x48000430, 0xb40003cf, "e,f,g", 0 },	/* pfadd.p fsrc1,fsrc2,fdest */
{ "pfadd.sd",	0x480004b0, 0xb400034f, "e,f,g", 0 },	/* pfadd.p fsrc1,fsrc2,fdest */
{ "pfadd.dd",	0x480005b0, 0xb400024f, "e,f,g", 0 },	/* pfadd.p fsrc1,fsrc2,fdest */
{ "fsub.ss",	0x48000031, 0xb40007ce, "e,f,g", 0 },	/* fsub.p fsrc1,fsrc2,fdest */
{ "fsub.sd",	0x480000b1, 0xb400074e, "e,f,g", 0 },	/* fsub.p fsrc1,fsrc2,fdest */
{ "fsub.dd",	0x480001b1, 0xb400064e, "e,f,g", 0 },	/* fsub.p fsrc1,fsrc2,fdest */
{ "pfsub.ss",	0x48000431, 0xb40003ce, "e,f,g", 0 },	/* pfsub.p fsrc1,fsrc2,fdest */
{ "pfsub.sd",	0x480004b1, 0xb400034e, "e,f,g", 0 },	/* pfsub.p fsrc1,fsrc2,fdest */
{ "pfsub.dd",	0x480005b1, 0xb400024e, "e,f,g", 0 },	/* pfsub.p fsrc1,fsrc2,fdest */
{ "fix.ss",	0x48000032, 0xb40007cd, "e,g", 0 },	/* fix.p fsrc1,fdest */
{ "fix.sd",	0x480000b2, 0xb400074d, "e,g", 0 },	/* fix.p fsrc1,fdest */
{ "fix.dd",	0x480001b2, 0xb400064d, "e,g", 0 },	/* fix.p fsrc1,fdest */
{ "pfix.ss",	0x48000432, 0xb40003cd, "e,g", 0 },	/* pfix.p fsrc1,fdest */
{ "pfix.sd",	0x480004b2, 0xb400034d, "e,g", 0 },	/* pfix.p fsrc1,fdest */
{ "pfix.dd",	0x480005b2, 0xb400024d, "e,g", 0 },	/* pfix.p fsrc1,fdest */
{ "famov.ss",	0x48000033, 0xb40007cc, "e,g", 0 },	/* famov.p fsrc1,fdest */
{ "famov.ds",	0x48000133, 0xb40006cc, "e,g", 0 },	/* famov.p fsrc1,fdest */
{ "famov.sd",	0x480000b3, 0xb400074c, "e,g", 0 },	/* famov.p fsrc1,fdest */
{ "famov.dd",	0x480001b3, 0xb400064c, "e,g", 0 },	/* famov.p fsrc1,fdest */
{ "pfamov.ss",	0x48000433, 0xb40003cc, "e,g", 0 },	/* pfamov.p fsrc1,fdest */
{ "pfamov.ds",	0x48000533, 0xb40002cc, "e,g", 0 },	/* pfamov.p fsrc1,fdest */
{ "pfamov.sd",	0x480004b3, 0xb400034c, "e,g", 0 },	/* pfamov.p fsrc1,fdest */
{ "pfamov.dd",	0x480005b3, 0xb400024c, "e,g", 0 },	/* pfamov.p fsrc1,fdest */
d451 2
a452 3
{ "pfgt.ss",	0x48000434, 0xb40003cb, "e,f,g", 0 },	/* pfgt.p fsrc1,fsrc2,fdest */
{ "pfgt.sd",	0x48000434, 0xb40003cb, "e,f,g", 0 },	/* pfgt.p fsrc1,fsrc2,fdest */
{ "pfgt.dd",	0x48000534, 0xb40002cb, "e,f,g", 0 },	/* pfgt.p fsrc1,fsrc2,fdest */
d454 29
a482 28
{ "pfle.ss",	0x480004b4, 0xb400034b, "e,f,g", 0 },	/* pfle.p fsrc1,fsrc2,fdest */
{ "pfle.sd",	0x480004b4, 0xb400034b, "e,f,g", 0 },	/* pfle.p fsrc1,fsrc2,fdest */
{ "pfle.dd",	0x480005b4, 0xb400024b, "e,f,g", 0 },	/* pfle.p fsrc1,fsrc2,fdest */
{ "ftrunc.ss",	0x4800003a, 0xb40007c5, "e,g", 0 },	/* ftrunc.p fsrc1,fdest */
{ "ftrunc.sd",	0x480000ba, 0xb4000745, "e,g", 0 },	/* ftrunc.p fsrc1,fdest */
{ "ftrunc.dd",	0x480001ba, 0xb4000645, "e,g", 0 },	/* ftrunc.p fsrc1,fdest */
{ "pftrunc.ss",	0x4800043a, 0xb40003c5, "e,g", 0 },	/* pftrunc.p fsrc1,fdest */
{ "pftrunc.sd",	0x480004ba, 0xb4000345, "e,g", 0 },	/* pftrunc.p fsrc1,fdest */
{ "pftrunc.dd",	0x480005ba, 0xb4000245, "e,g", 0 },	/* pftrunc.p fsrc1,fdest */
{ "fxfr",	0x48000040, 0xb40007bf, "e,d", 0 },	/* fxfr fsrc1,idest */
{ "fiadd.ss",	0x48000049, 0xb40007b6, "e,f,g", 0 },	/* fiadd.w fsrc1,fsrc2,fdest */
{ "fiadd.dd",	0x480001c9, 0xb4000636, "e,f,g", 0 },	/* fiadd.w fsrc1,fsrc2,fdest */
{ "pfiadd.ss",	0x48000449, 0xb40003b6, "e,f,g", 0 },	/* pfiadd.w fsrc1,fsrc2,fdest */
{ "pfiadd.dd",	0x480005c9, 0xb4000236, "e,f,g", 0 },	/* pfiadd.w fsrc1,fsrc2,fdest */
{ "fisub.ss",	0x4800004d, 0xb40007b2, "e,f,g", 0 },	/* fisub.w fsrc1,fsrc2,fdest */
{ "fisub.dd",	0x480001cd, 0xb4000632, "e,f,g", 0 },	/* fisub.w fsrc1,fsrc2,fdest */
{ "pfisub.ss",	0x4800044d, 0xb40003b2, "e,f,g", 0 },	/* pfisub.w fsrc1,fsrc2,fdest */
{ "pfisub.dd",	0x480005cd, 0xb4000232, "e,f,g", 0 },	/* pfisub.w fsrc1,fsrc2,fdest */
{ "fzchkl",	0x48000057, 0xb40007a8, "e,f,g", 0 },	/* fzchkl fsrc1,fsrc2,fdest */
{ "pfzchkl",	0x48000457, 0xb40003a8, "e,f,g", 0 },	/* pfzchkl fsrc1,fsrc2,fdest */
{ "fzchks",	0x4800005f, 0xb40007a0, "e,f,g", 0 },	/* fzchks fsrc1,fsrc2,fdest */
{ "pfzchks",	0x4800045f, 0xb40003a0, "e,f,g", 0 },	/* pfzchks fsrc1,fsrc2,fdest */
{ "faddp",	0x48000050, 0xb40007af, "e,f,g", 0 },	/* faddp fsrc1,fsrc2,fdest */
{ "pfaddp",	0x48000450, 0xb40003af, "e,f,g", 0 },	/* pfaddp fsrc1,fsrc2,fdest */
{ "faddz",	0x48000051, 0xb40007ae, "e,f,g", 0 },	/* faddz fsrc1,fsrc2,fdest */
{ "pfaddz",	0x48000451, 0xb40003ae, "e,f,g", 0 },	/* pfaddz fsrc1,fsrc2,fdest */
{ "form",	0x4800005a, 0xb40007a5, "e,g", 0 },	/* form fsrc1,fdest */
{ "pform",	0x4800045a, 0xb40003a5, "e,g", 0 },	/* pform fsrc1,fdest */
d485 7
a491 7
{ "fmov.ss",	0x48000049, 0xb7e007b6, "e,g", 0 },	/* fiadd.ss fsrc1,f0,fdest */
{ "fmov.dd",	0x480001c9, 0xb7e00636, "e,g", 0 },	/* fiadd.dd fsrc1,f0,fdest */
{ "fmov.sd",	0x480000b0, 0xb7e0074f, "e,g", 0 },	/* fadd.sd fsrc1,f0,fdest */
{ "fmov.ds",	0x48000130, 0xb7e006cf, "e,g", 0 },	/* fadd.ds fsrc1,f0,fdest */
{ "pfmov.ds",	0x48000530, 0xb73002cf, "e,g", 0 },	/* pfadd.ds fsrc1,f0,fdest */
{ "pfmov.dd",	0x480005c9, 0xb7e00236, "e,g", 0 },	/* pfiadd.dd fsrc1,f0,fdest */

@


1.1.1.1
log
@19990502 sourceware import
@
text
@@

