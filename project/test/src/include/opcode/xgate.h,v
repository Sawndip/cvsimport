head	1.3;
access;
symbols
	sid-snapshot-20180601:1.3
	sid-snapshot-20180501:1.3
	sid-snapshot-20180401:1.3
	sid-snapshot-20180301:1.3
	sid-snapshot-20180201:1.3
	sid-snapshot-20180101:1.3
	sid-snapshot-20171201:1.3
	sid-snapshot-20171101:1.3
	sid-snapshot-20171001:1.3
	sid-snapshot-20170901:1.3
	sid-snapshot-20170801:1.3
	sid-snapshot-20170701:1.3
	sid-snapshot-20170601:1.3
	sid-snapshot-20170501:1.3
	sid-snapshot-20170401:1.3
	sid-snapshot-20170301:1.3
	sid-snapshot-20170201:1.3
	sid-snapshot-20170101:1.3
	sid-snapshot-20161201:1.3
	sid-snapshot-20161101:1.3
	sid-snapshot-20160901:1.3
	sid-snapshot-20160801:1.3
	sid-snapshot-20160701:1.3
	sid-snapshot-20160601:1.3
	sid-snapshot-20160501:1.3
	sid-snapshot-20160401:1.3
	sid-snapshot-20160301:1.3
	sid-snapshot-20160201:1.3
	sid-snapshot-20160101:1.3
	sid-snapshot-20151201:1.3
	sid-snapshot-20151101:1.3
	sid-snapshot-20151001:1.3
	sid-snapshot-20150901:1.3
	sid-snapshot-20150801:1.3
	sid-snapshot-20150701:1.3
	sid-snapshot-20150601:1.3
	sid-snapshot-20150501:1.3
	sid-snapshot-20150401:1.3
	cygwin-1_7_35-release:1.3
	sid-snapshot-20150301:1.3
	cygwin-1_7_34-release:1.3
	sid-snapshot-20150201:1.3
	sid-snapshot-20150101:1.3
	sid-snapshot-20141201:1.3
	cygwin-1_7_33-release:1.3
	sid-snapshot-20141101:1.3
	sid-snapshot-20141001:1.3
	sid-snapshot-20140901:1.3
	cygwin-1_7_32-release:1.3
	sid-snapshot-20140801:1.3
	cygwin-1_7_31-release:1.3
	sid-snapshot-20140701:1.3
	sid-snapshot-20140601:1.3
	cygwin-1_7_30-release:1.3
	sid-snapshot-20140501:1.3
	cygwin-1_7_29-release:1.3
	sid-snapshot-20140401:1.3
	sid-snapshot-20140301:1.3
	cygwin-1_7_28-release:1.3
	sid-snapshot-20140201:1.3
	sid-snapshot-20140101:1.3
	sid-snapshot-20131201:1.3
	cygwin-1_7_27-release:1.3
	cygwin-1_7_26-release:1.3
	sid-snapshot-20131101:1.3
	sid-snapshot-20131001:1.2
	binutils-2_24-branch:1.2.0.12
	binutils-2_24-branchpoint:1.2
	sid-snapshot-20130901:1.2
	cygwin-1_7_25-release:1.2
	gdb_7_6_1-2013-08-30-release:1.2
	cygwin-1_7_24-release:1.2
	cygwin-1_7_23-release:1.2
	sid-snapshot-20130801:1.2
	cygwin-1_7_22-release:1.2
	cygwin-1_7_21-release:1.2
	sid-snapshot-20130701:1.2
	cygwin-1_7_20-release:1.2
	cygwin-1_7_19-release:1.2
	sid-snapshot-20130601:1.2
	sid-snapshot-20130501:1.2
	gdb_7_6-2013-04-26-release:1.2
	cygwin-64bit-postmerge:1.2
	cygwin-64bit-premerge-branch:1.2.0.10
	cygwin-64bit-premerge:1.2
	sid-snapshot-20130401:1.2
	binutils-2_23_2:1.2
	gdb_7_6-branch:1.2.0.8
	gdb_7_6-2013-03-12-branchpoint:1.2
	cygwin-1_7_18-release:1.2
	sid-snapshot-20130301:1.2
	sid-snapshot-20130201:1.2
	sid-snapshot-20130101:1.2
	sid-snapshot-20121201:1.2
	gdb_7_5_1-2012-11-29-release:1.2
	binutils-2_23_1:1.2
	sid-snapshot-20121101:1.2
	binutils-2_23:1.2
	cygwin-1_7_17-release:1.2
	sid-snapshot-20121001:1.2
	sid-snapshot-20120901:1.2
	gdb_7_5-2012-08-17-release:1.2
	cygwin-64bit-branch:1.2.0.6
	sid-snapshot-20120801:1.2
	binutils-2_23-branch:1.2.0.4
	binutils-2_23-branchpoint:1.2
	cygwin-1_7_16-release:1.2
	gdb_7_5-branch:1.2.0.2
	gdb_7_5-2012-07-18-branchpoint:1.2
	sid-snapshot-20120701:1.1
	sid-snapshot-20120601:1.1
	cygwin-1_7_15-release:1.1
	binutils_latest_snapshot:1.3;
locks; strict;
comment	@ * @;


1.3
date	2013.10.11.04.55.42;	author seank;	state Exp;
branches;
next	1.2;

1.2
date	2012.07.05.19.37.52;	author seank;	state Exp;
branches;
next	1.1;

1.1
date	2012.05.03.13.12.01;	author nickc;	state Exp;
branches;
next	;


desc
@@


1.3
log
@     * Removed short_hand field from opcode table and
     refactored assembler/disassember accordingly.
     Testsuite checkout OK.
@
text
@/* xgate.h -- Freescale XGATE opcode list
   Copyright 2010, 2011, 2012 Free Software Foundation, Inc.
   Written by Sean Keys (skeys@@ipdatasys.com)

   This file is part of the GNU opcodes library.

   This library is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3, or (at your option)
   any later version.

   It is distributed in the hope that it will be useful, but WITHOUT
   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
   License for more details.

   You should have received a copy of the GNU General Public License
   along with this file; see the file COPYING.  If not, write to the
   Free Software Foundation, 51 Franklin Street - Fifth Floor, Boston,
   MA 02110-1301, USA. */

#ifndef _OPCODE_XGATE_H
#define _OPCODE_XGATE_H

/* XGATE CCR flag definitions.  */
#define XGATE_N_BIT   0x08	/* XGN - Sign Flag */
#define XGATE_Z_BIT   0x04	/* XGZ - Zero Flag */
#define XGATE_V_BIT   0x02	/* XGV - Overflow Flag */
#define XGATE_C_BIT   0x01	/* XGC - Carry Flag */

/* Access Detail Notation
   V — Vector fetch: always an aligned word read, lasts for at least one RISC core cycle
   P — Program word fetch: always an aligned word read, lasts for at least one RISC core cycle
   r — 8-bit data read: lasts for at least one RISC core cycle
   R — 16-bit data read: lasts for at least one RISC core cycle
   w — 8-bit data write: lasts for at least one RISC core cycle
   W — 16-bit data write: lasts for at least one RISC core cycle
   A — Alignment cycle: no read or write, lasts for zero or one RISC core cycles
   f — Free cycle: no read or write, lasts for one RISC core cycles.  */
#define XGATE_CYCLE_V	0x01
#define XGATE_CYCLE_P	0x02
#define XGATE_CYCLE_r	0x04
#define XGATE_CYCLE_R	0x08
#define XGATE_CYCLE_w	0x10
#define XGATE_CYCLE_W	0x20
#define XGATE_CYCLE_A	0x40
#define XGATE_CYCLE_f	0x80

/* XGATE operand formats as stored in the XGATE_opcode table.
   They are only used by GAS to recognize operands.  */
#define XGATE_OP_INH                  ""  /* Inherent.  */
#define XGATE_OP_TRI		 "r,r,r"  /* Register followed by two registers.                    */
#define XGATE_OP_DYA		   "r,r"  /* Register followed by a register.                       */
#define XGATE_OP_IMM16            "r,if"  /* Register followed by 16-bit value.                    */
#define XGATE_OP_IMM8	          "r,i8"  /* Register followed by 8-bit value.                      */
#define XGATE_OP_IMM4             "r,i4"  /* Register followed by 4-bit value.                     */
#define XGATE_OP_IMM3	            "i3"  /* Register followed by 3-bit value.                      */
#define XGATE_OP_MON		     "r"  /* Single register.                                       */
#define XGATE_OP_MON_R_C	   "r,c"  /* General register followed by ccr register.             */
#define XGATE_OP_MON_C_R	   "c,r"  /* CCR register followed by a general register.           */
#define XGATE_OP_MON_R_P	   "r,p"  /* General register followed by pc register.              */
#define XGATE_OP_IDR		 "r,r,+"  /* Three registers with the third having a -/+ directive. */
#define XGATE_OP_IDO5	        "r,r,i5"  /* Two general registers followed by an immediate value.  */
#define XGATE_OP_REL9	            "b9"  /* 9-bit value that is relative to the current pc.        */
#define XGATE_OP_REL10	            "ba"  /* 10-bit value that is relative to the current pc.       */
#define XGATE_OP_DYA_MON	    "=r"
/* Macro definitions.  */
#define XGATE_OP_IMM16mADD    "r,if; addl addh"
#define XGATE_OP_IMM16mAND    "r,if; andl andh"
#define XGATE_OP_IMM16mCPC    "r,if; cmpl cpch"
#define XGATE_OP_IMM16mSUB    "r,if; subl subh"
#define XGATE_OP_IMM16mLDW    "r,if; ldl ldh"

/* CPU variant identification.  */
#define XGATE_V1 0x1
#define XGATE_V2 0x2
#define XGATE_V3 0x4

/* The opcode table definitions.  */
struct xgate_opcode
{
  char * name;                  /* Op-code name.  */
  char * constraints;           /* Constraint chars.  */
  char * format;                /* Bit definitions.  */
  unsigned int size;            /* Opcode size in bytes.  */
  unsigned int bin_opcode;      /* Binary opcode with operands masked off.  */
  unsigned char cycles_min;     /* Minimum cpu cycles needed.  */
  unsigned char cycles_max;     /* Maximum cpu cycles needed.  */
  unsigned char set_flags_mask; /* CCR flags set.  */
  unsigned char clr_flags_mask; /* CCR flags cleared.  */
  unsigned char chg_flags_mask; /* CCR flags changed.  */
  unsigned char arch;           /* CPU variant.  */
};

/* The opcode table.  The table contains all the opcodes (all pages).
   You can't rely on the order.  */
extern const struct xgate_opcode xgate_opcodes[];
extern const int xgate_num_opcodes;

#endif /* _OPCODE_XGATE_H */
@


1.2
log
@gas/config/
        * tc-xgate.c: Revised assembler so that operands
	are collected before the addressing mode is
	determined.

include/opcode/
	* xgate.h: Changed the format string for mode
	XGATE_OP_DYA_MON.

opcodes/
	* xgate-dis.c: Removed an IF statement that will
	always be false due to overlapping operand masks.
	* xgate-opc.c: Corrected 'com' opcode entry and
	fixed spacing.
@
text
@a48 14
/* Opcode format abbreviations.  */
#define XG_INH		0x0001  /* Inherent.  */
#define XG_I		0x0002  /* 3-bit immediate address.  */
#define XG_R_I		0x0004  /* Register followed by 4/8-bit immediate value.  */
#define XG_R_R		0x0008  /* Register followed by a register.  */
#define XG_R_R_R	0x0010  /* Register followed by two registers.  */
#define XG_R		0x0020  /* Single register.  */
#define XG_PC		0x0040  /* PC relative 10 or 11 bit.  */
#define XG_R_C		0x0080  /* General register followed by ccr register.  */
#define XG_C_R		0x0100  /* CCR register followed by a general register.  */
#define XG_R_P		0x0200  /* General register followed by pc register.  */
#define XG_R_R_I	0x0400  /* Two general registers followed by an immediate value.  */
#define XG_PCREL	0x0800  /* Immediate value that is relative to the current pc.  */

d51 16
a66 16
#define XGATE_OP_INH		""
#define XGATE_OP_TRI		"r,r,r"
#define XGATE_OP_DYA		"r,r"
#define XGATE_OP_IMM16          "r,if"
#define XGATE_OP_IMM8	        "r,i8"
#define XGATE_OP_IMM4           "r,i4"
#define XGATE_OP_IMM3	        "i3"
#define XGATE_OP_MON		"r"
#define XGATE_OP_MON_R_C	"r,c"
#define XGATE_OP_MON_C_R	"c,r"
#define XGATE_OP_MON_R_P	"r,p"
#define XGATE_OP_IDR		"r,r,+"
#define XGATE_OP_IDO5	        "r,r,i5"
#define XGATE_OP_REL9	        "b9"
#define XGATE_OP_REL10	        "ba"
#define XGATE_OP_DYA_MON	"=r"
a78 5
/* Max opcodes per opcode handle.  */
#define MAX_OPCODES     0x05

#define MAX_DETECT_CHARS 0x10

a84 1
  unsigned int sh_format;       /* Shorthand format mask.  */
@


1.1
log
@Add support for Motorola XGATE embedded CPU
@
text
@d80 1
a80 1
#define XGATE_OP_DYA_MON	"=r,r"
@

