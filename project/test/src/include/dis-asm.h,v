head	1.90;
access;
symbols
	sid-snapshot-20180601:1.90
	sid-snapshot-20180501:1.90
	sid-snapshot-20180401:1.90
	sid-snapshot-20180301:1.90
	sid-snapshot-20180201:1.90
	sid-snapshot-20180101:1.90
	sid-snapshot-20171201:1.90
	sid-snapshot-20171101:1.90
	sid-snapshot-20171001:1.90
	sid-snapshot-20170901:1.90
	sid-snapshot-20170801:1.90
	sid-snapshot-20170701:1.90
	sid-snapshot-20170601:1.90
	sid-snapshot-20170501:1.90
	sid-snapshot-20170401:1.90
	sid-snapshot-20170301:1.90
	sid-snapshot-20170201:1.90
	sid-snapshot-20170101:1.90
	sid-snapshot-20161201:1.90
	sid-snapshot-20161101:1.90
	sid-snapshot-20160901:1.90
	sid-snapshot-20160801:1.90
	sid-snapshot-20160701:1.90
	sid-snapshot-20160601:1.90
	sid-snapshot-20160501:1.90
	sid-snapshot-20160401:1.90
	sid-snapshot-20160301:1.90
	sid-snapshot-20160201:1.90
	sid-snapshot-20160101:1.90
	sid-snapshot-20151201:1.90
	sid-snapshot-20151101:1.90
	sid-snapshot-20151001:1.90
	sid-snapshot-20150901:1.90
	sid-snapshot-20150801:1.90
	sid-snapshot-20150701:1.90
	sid-snapshot-20150601:1.90
	sid-snapshot-20150501:1.90
	sid-snapshot-20150401:1.90
	cygwin-1_7_35-release:1.90
	sid-snapshot-20150301:1.90
	cygwin-1_7_34-release:1.90
	sid-snapshot-20150201:1.90
	sid-snapshot-20150101:1.90
	sid-snapshot-20141201:1.90
	cygwin-1_7_33-release:1.90
	sid-snapshot-20141101:1.90
	sid-snapshot-20141001:1.90
	sid-snapshot-20140901:1.90
	cygwin-1_7_32-release:1.90
	sid-snapshot-20140801:1.90
	cygwin-1_7_31-release:1.90
	sid-snapshot-20140701:1.90
	sid-snapshot-20140601:1.90
	cygwin-1_7_30-release:1.90
	sid-snapshot-20140501:1.90
	cygwin-1_7_29-release:1.90
	sid-snapshot-20140401:1.90
	sid-snapshot-20140301:1.90
	cygwin-1_7_28-release:1.90
	sid-snapshot-20140201:1.90
	sid-snapshot-20140101:1.90
	sid-snapshot-20131201:1.90
	cygwin-1_7_27-release:1.90
	cygwin-1_7_26-release:1.90
	sid-snapshot-20131101:1.90
	sid-snapshot-20131001:1.90
	binutils-2_24-branch:1.90.0.6
	binutils-2_24-branchpoint:1.90
	binutils-2_21_1:1.80
	sid-snapshot-20130901:1.90
	cygwin-1_7_25-release:1.90
	gdb_7_6_1-2013-08-30-release:1.90
	cygwin-1_7_24-release:1.90
	cygwin-1_7_23-release:1.90
	sid-snapshot-20130801:1.90
	cygwin-1_7_22-release:1.90
	cygwin-1_7_21-release:1.90
	sid-snapshot-20130701:1.90
	cygwin-1_7_20-release:1.90
	cygwin-1_7_19-release:1.90
	sid-snapshot-20130601:1.90
	sid-snapshot-20130501:1.90
	gdb_7_6-2013-04-26-release:1.90
	cygwin-64bit-postmerge:1.90
	cygwin-64bit-premerge-branch:1.90.0.4
	cygwin-64bit-premerge:1.90
	sid-snapshot-20130401:1.90
	binutils-2_23_2:1.87.2.1
	gdb_7_6-branch:1.90.0.2
	gdb_7_6-2013-03-12-branchpoint:1.90
	cygwin-1_7_18-release:1.90
	sid-snapshot-20130301:1.90
	sid-snapshot-20130201:1.89
	sid-snapshot-20130101:1.88
	sid-snapshot-20121201:1.88
	gdb_7_5_1-2012-11-29-release:1.86
	binutils-2_23_1:1.87.2.1
	sid-snapshot-20121101:1.88
	binutils-2_23:1.87.2.1
	cygwin-1_7_17-release:1.88
	sid-snapshot-20121001:1.88
	sid-snapshot-20120901:1.88
	gdb_7_5-2012-08-17-release:1.86
	cygwin-64bit-branch:1.87.0.4
	sid-snapshot-20120801:1.87
	binutils-2_23-branch:1.87.0.2
	binutils-2_23-branchpoint:1.87
	cygwin-1_7_16-release:1.86
	gdb_7_5-branch:1.86.0.2
	gdb_7_5-2012-07-18-branchpoint:1.86
	sid-snapshot-20120701:1.86
	sid-snapshot-20120601:1.86
	cygwin-1_7_15-release:1.85
	sid-snapshot-20120501:1.84
	binutils-2_22_branch:1.81.0.4
	gdb_7_4_1-2012-04-26-release:1.83
	cygwin-1_7_14_2-release:1.84
	cygwin-1_7_14-release:1.84
	cygwin-1_7_12-release:1.84
	sid-snapshot-20120401:1.84
	sid-snapshot-20120301:1.83
	cygwin-1_7_11-release:1.83
	cygwin-1_7_10-release:1.83
	sid-snapshot-20120201:1.83
	gdb_7_4-2012-01-24-release:1.83
	sid-snapshot-20120101:1.83
	gdb_7_4-branch:1.83.0.2
	gdb_7_4-2011-12-13-branchpoint:1.83
	sid-snapshot-20111201:1.83
	binutils-2_22:1.81
	sid-snapshot-20111101:1.82
	sid-snapshot-20111001:1.81
	binutils-2_22-branch:1.81.0.2
	binutils-2_22-branchpoint:1.81
	gdb_7_3_1-2011-09-04-release:1.80
	sid-snapshot-20110901:1.81
	sid-snapshot-20110801:1.81
	gdb_7_3-2011-07-26-release:1.80
	sid-snapshot-20110701:1.81
	sid-snapshot-20110601:1.80
	sid-snapshot-20110501:1.80
	gdb_7_3-branch:1.80.0.6
	gdb_7_3-2011-04-01-branchpoint:1.80
	sid-snapshot-20110401:1.80
	cygwin-1_7_9-release:1.80
	sid-snapshot-20110301:1.80
	cygwin-1_7_8-release:1.80
	sid-snapshot-20110201:1.80
	sid-snapshot-20110101:1.80
	binutils-2_21:1.80
	sid-snapshot-20101201:1.80
	binutils-2_21-branch:1.80.0.4
	binutils-2_21-branchpoint:1.80
	sid-snapshot-20101101:1.80
	sid-snapshot-20101001:1.80
	binutils-2_20_1:1.75
	gdb_7_2-2010-09-02-release:1.80
	sid-snapshot-20100901:1.80
	cygwin-1_7_7-release:1.80
	sid-snapshot-20100801:1.80
	gdb_7_2-branch:1.80.0.2
	gdb_7_2-2010-07-07-branchpoint:1.80
	sid-snapshot-20100701:1.80
	sid-snapshot-20100601:1.79
	sid-snapshot-20100501:1.79
	cygwin-1_7_5-release:1.78
	cygwin-1_7_4-release:1.78
	sid-snapshot-20100401:1.78
	cygwin-1_7_3-release:1.78
	cygwin-1_7_2-release:1.77
	gdb_7_1-2010-03-18-release:1.77
	sid-snapshot-20100301:1.77
	gdb_7_1-branch:1.77.0.2
	gdb_7_1-2010-02-18-branchpoint:1.77
	sid-snapshot-20100201:1.77
	sid-snapshot-20100101:1.77
	gdb_7_0_1-2009-12-22-release:1.75
	cygwin-1_7_1-release:1.76
	sid-snapshot-20091201:1.76
	sid-snapshot-20091101:1.76
	binutils-2_20:1.75
	gdb_7_0-2009-10-06-release:1.75
	sid-snapshot-20091001:1.76
	gdb_7_0-branch:1.75.0.4
	gdb_7_0-2009-09-16-branchpoint:1.75
	arc-sim-20090309:1.68.10.1
	binutils-arc-20081103-branch:1.70.0.12
	binutils-arc-20081103-branchpoint:1.70
	binutils-2_20-branch:1.75.0.2
	binutils-2_20-branchpoint:1.75
	sid-snapshot-20090901:1.75
	sid-snapshot-20090801:1.74
	msnyder-checkpoint-072509-branch:1.74.0.4
	msnyder-checkpoint-072509-branchpoint:1.74
	sid-snapshot-20090701:1.74
	dje-cgen-play1-branch:1.74.0.2
	dje-cgen-play1-branchpoint:1.74
	sid-snapshot-20090601:1.72
	sid-snapshot-20090501:1.72
	sid-snapshot-20090401:1.71
	arc-20081103-branch:1.70.0.10
	arc-20081103-branchpoint:1.70
	arc-insight_6_8-branch:1.68.0.10
	arc-insight_6_8-branchpoint:1.68
	insight_6_8-branch:1.68.0.8
	insight_6_8-branchpoint:1.68
	sid-snapshot-20090301:1.71
	binutils-2_19_1:1.70
	sid-snapshot-20090201:1.71
	sid-snapshot-20090101:1.71
	reverse-20081226-branch:1.71.0.2
	reverse-20081226-branchpoint:1.71
	sid-snapshot-20081201:1.70
	multiprocess-20081120-branch:1.70.0.8
	multiprocess-20081120-branchpoint:1.70
	sid-snapshot-20081101:1.70
	binutils-2_19:1.70
	sid-snapshot-20081001:1.70
	reverse-20080930-branch:1.70.0.6
	reverse-20080930-branchpoint:1.70
	binutils-2_19-branch:1.70.0.4
	binutils-2_19-branchpoint:1.70
	sid-snapshot-20080901:1.70
	sid-snapshot-20080801:1.70
	reverse-20080717-branch:1.70.0.2
	reverse-20080717-branchpoint:1.70
	sid-snapshot-20080701:1.69
	msnyder-reverse-20080609-branch:1.69.0.2
	msnyder-reverse-20080609-branchpoint:1.69
	drow-reverse-20070409-branch:1.67.0.2
	drow-reverse-20070409-branchpoint:1.67
	sid-snapshot-20080601:1.69
	sid-snapshot-20080501:1.69
	sid-snapshot-20080403:1.68
	sid-snapshot-20080401:1.68
	gdb_6_8-2008-03-27-release:1.68
	sid-snapshot-20080301:1.68
	gdb_6_8-branch:1.68.0.6
	gdb_6_8-2008-02-26-branchpoint:1.68
	sid-snapshot-20080201:1.68
	sid-snapshot-20080101:1.68
	sid-snapshot-20071201:1.68
	sid-snapshot-20071101:1.68
	gdb_6_7_1-2007-10-29-release:1.68
	gdb_6_7-2007-10-10-release:1.68
	sid-snapshot-20071001:1.68
	gdb_6_7-branch:1.68.0.4
	gdb_6_7-2007-09-07-branchpoint:1.68
	binutils-2_18:1.68
	binutils-2_18-branch:1.68.0.2
	binutils-2_18-branchpoint:1.68
	insight_6_6-20070208-release:1.65
	binutils-csl-coldfire-4_1-32:1.62.6.1
	binutils-csl-sourcerygxx-4_1-32:1.62.6.1
	gdb_6_6-2006-12-18-release:1.65
	binutils-csl-innovasic-fido-3_4_4-33:1.62.6.1
	binutils-csl-sourcerygxx-3_4_4-32:1.50
	binutils-csl-coldfire-4_1-30:1.62.6.1
	binutils-csl-sourcerygxx-4_1-30:1.62.6.1
	binutils-csl-coldfire-4_1-28:1.62.6.1
	binutils-csl-sourcerygxx-4_1-29:1.62.6.1
	binutils-csl-sourcerygxx-4_1-28:1.62.6.1
	gdb_6_6-branch:1.65.0.2
	gdb_6_6-2006-11-15-branchpoint:1.65
	binutils-csl-arm-2006q3-27:1.62.6.1
	binutils-csl-sourcerygxx-4_1-27:1.62.6.1
	binutils-csl-arm-2006q3-26:1.62.6.1
	binutils-csl-sourcerygxx-4_1-26:1.62.6.1
	binutils-csl-sourcerygxx-4_1-25:1.62.6.1
	binutils-csl-sourcerygxx-4_1-24:1.62
	binutils-csl-sourcerygxx-4_1-23:1.62
	insight_6_5-20061003-release:1.62
	gdb-csl-symbian-6_4_50_20060226-12:1.62
	binutils-csl-sourcerygxx-4_1-21:1.62
	binutils-csl-arm-2006q3-21:1.62
	binutils-csl-sourcerygxx-4_1-22:1.62
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.62
	binutils-csl-sourcerygxx-4_1-20:1.62
	binutils-csl-arm-2006q3-19:1.62
	binutils-csl-sourcerygxx-4_1-19:1.62
	binutils-csl-sourcerygxx-4_1-18:1.62
	binutils-csl-renesas-4_1-9:1.62
	gdb-csl-sourcerygxx-3_4_4-25:1.59
	binutils-csl-sourcerygxx-3_4_4-25:1.50
	nickrob-async-20060828-mergepoint:1.62
	gdb-csl-symbian-6_4_50_20060226-11:1.62
	binutils-csl-renesas-4_1-8:1.62
	binutils-csl-renesas-4_1-7:1.62
	binutils-csl-renesas-4_1-6:1.62
	gdb-csl-sourcerygxx-4_1-17:1.62
	binutils-csl-sourcerygxx-4_1-17:1.62
	gdb-csl-20060226-branch-local-2:1.62
	cr-0x5f1:1.62.0.22
	gdb-csl-sourcerygxx-4_1-14:1.62
	binutils-csl-sourcerygxx-4_1-14:1.62
	binutils-csl-sourcerygxx-4_1-15:1.62
	gdb-csl-sourcerygxx-4_1-13:1.62
	binutils-csl-sourcerygxx-4_1-13:1.62
	binutils-2_17:1.62
	gdb-csl-sourcerygxx-4_1-12:1.62
	binutils-csl-sourcerygxx-4_1-12:1.62
	gdb-csl-sourcerygxx-3_4_4-21:1.62
	binutils-csl-sourcerygxx-3_4_4-21:1.62
	gdb_6_5-20060621-release:1.62
	binutils-csl-wrs-linux-3_4_4-24:1.50
	binutils-csl-wrs-linux-3_4_4-23:1.50
	gdb-csl-sourcerygxx-4_1-9:1.62
	binutils-csl-sourcerygxx-4_1-9:1.62
	gdb-csl-sourcerygxx-4_1-8:1.62
	binutils-csl-sourcerygxx-4_1-8:1.62
	gdb-csl-sourcerygxx-4_1-7:1.62
	binutils-csl-sourcerygxx-4_1-7:1.62
	gdb-csl-arm-2006q1-6:1.62
	binutils-csl-arm-2006q1-6:1.62
	gdb-csl-sourcerygxx-4_1-6:1.62
	binutils-csl-sourcerygxx-4_1-6:1.62
	binutils-csl-wrs-linux-3_4_4-22:1.50
	gdb-csl-symbian-6_4_50_20060226-10:1.62
	gdb-csl-symbian-6_4_50_20060226-9:1.62
	gdb-csl-symbian-6_4_50_20060226-8:1.62
	gdb-csl-coldfire-4_1-11:1.62
	binutils-csl-coldfire-4_1-11:1.62
	gdb-csl-sourcerygxx-3_4_4-19:1.62
	binutils-csl-sourcerygxx-3_4_4-19:1.62
	gdb-csl-coldfire-4_1-10:1.62
	gdb_6_5-branch:1.62.0.20
	gdb_6_5-2006-05-14-branchpoint:1.62
	binutils-csl-coldfire-4_1-10:1.62
	gdb-csl-sourcerygxx-4_1-5:1.62
	binutils-csl-sourcerygxx-4_1-5:1.62
	nickrob-async-20060513-branch:1.62.0.18
	nickrob-async-20060513-branchpoint:1.62
	gdb-csl-sourcerygxx-4_1-4:1.62
	binutils-csl-sourcerygxx-4_1-4:1.62
	msnyder-reverse-20060502-branch:1.62.0.16
	msnyder-reverse-20060502-branchpoint:1.62
	binutils-csl-wrs-linux-3_4_4-21:1.50
	gdb-csl-morpho-4_1-4:1.62
	binutils-csl-morpho-4_1-4:1.62
	gdb-csl-sourcerygxx-3_4_4-17:1.62
	binutils-csl-sourcerygxx-3_4_4-17:1.62
	binutils-csl-wrs-linux-3_4_4-20:1.50
	readline_5_1-import-branch:1.62.0.14
	readline_5_1-import-branchpoint:1.62
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.62
	binutils-2_17-branch:1.62.0.12
	binutils-2_17-branchpoint:1.62
	gdb-csl-symbian-20060226-branch:1.62.0.10
	gdb-csl-symbian-20060226-branchpoint:1.62
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.62
	msnyder-reverse-20060331-branch:1.62.0.8
	msnyder-reverse-20060331-branchpoint:1.62
	binutils-csl-2_17-branch:1.62.0.6
	binutils-csl-2_17-branchpoint:1.62
	gdb-csl-available-20060303-branch:1.62.0.4
	gdb-csl-available-20060303-branchpoint:1.62
	gdb-csl-20060226-branch:1.62.0.2
	gdb-csl-20060226-branchpoint:1.62
	gdb_6_4-20051202-release:1.59
	msnyder-fork-checkpoint-branch:1.59.0.6
	msnyder-fork-checkpoint-branchpoint:1.59
	gdb-csl-gxxpro-6_3-branch:1.59.0.4
	gdb-csl-gxxpro-6_3-branchpoint:1.59
	gdb_6_4-branch:1.59.0.2
	gdb_6_4-2005-11-01-branchpoint:1.59
	gdb-csl-arm-20051020-branch:1.57.0.2
	gdb-csl-arm-20051020-branchpoint:1.57
	binutils-csl-gxxpro-3_4-branch:1.50.0.8
	binutils-csl-gxxpro-3_4-branchpoint:1.50
	binutils-2_16_1:1.50
	msnyder-tracepoint-checkpoint-branch:1.51.0.2
	msnyder-tracepoint-checkpoint-branchpoint:1.51
	gdb-csl-arm-20050325-2005-q1b:1.50
	binutils-csl-arm-2005q1b:1.50
	binutils-2_16:1.50
	gdb-csl-arm-20050325-2005-q1a:1.50
	binutils-csl-arm-2005q1a:1.50
	csl-arm-20050325-branch:1.50.0.6
	csl-arm-20050325-branchpoint:1.50
	binutils-csl-arm-2005q1-branch:1.50.0.4
	binutils-csl-arm-2005q1-branchpoint:1.50
	binutils-2_16-branch:1.50.0.2
	binutils-2_16-branchpoint:1.50
	csl-arm-2004-q3d:1.47
	gdb_6_3-20041109-release:1.47
	gdb_6_3-branch:1.47.0.4
	gdb_6_3-20041019-branchpoint:1.47
	csl-arm-2004-q3:1.47
	drow_intercu-merge-20040921:1.47
	drow_intercu-merge-20040915:1.47
	jimb-gdb_6_2-e500-branch:1.47.0.6
	jimb-gdb_6_2-e500-branchpoint:1.47
	gdb_6_2-20040730-release:1.47
	gdb_6_2-branch:1.47.0.2
	gdb_6_2-2004-07-10-gmt-branchpoint:1.47
	gdb_6_1_1-20040616-release:1.46
	binutils-2_15:1.46
	binutils-2_15-branchpoint:1.46
	csl-arm-2004-q1a:1.46
	csl-arm-2004-q1:1.46
	gdb_6_1-2004-04-05-release:1.46
	drow_intercu-merge-20040402:1.46
	drow_intercu-merge-20040327:1.46
	ezannoni_pie-20040323-branch:1.46.0.14
	ezannoni_pie-20040323-branchpoint:1.46
	cagney_tramp-20040321-mergepoint:1.46
	cagney_tramp-20040309-branch:1.46.0.12
	cagney_tramp-20040309-branchpoint:1.46
	gdb_6_1-branch:1.46.0.10
	gdb_6_1-2004-03-01-gmt-branchpoint:1.46
	drow_intercu-20040221-branch:1.46.0.8
	drow_intercu-20040221-branchpoint:1.46
	binutils-2_15-branch:1.46.0.6
	cagney_bfdfile-20040213-branch:1.46.0.4
	cagney_bfdfile-20040213-branchpoint:1.46
	drow-cplus-merge-20040208:1.46
	carlton_dictionary-20040126-merge:1.46
	cagney_bigcore-20040122-branch:1.46.0.2
	cagney_bigcore-20040122-branchpoint:1.46
	drow-cplus-merge-20040113:1.46
	csl-arm-2003-q4:1.46
	drow-cplus-merge-20031224:1.46
	drow-cplus-merge-20031220:1.46
	carlton_dictionary-20031215-merge:1.46
	drow-cplus-merge-20031214:1.46
	carlton-dictionary-20031111-merge:1.45
	gdb_6_0-2003-10-04-release:1.43
	kettenis_sparc-20030918-branch:1.45.0.4
	kettenis_sparc-20030918-branchpoint:1.45
	carlton_dictionary-20030917-merge:1.45
	ezannoni_pie-20030916-branchpoint:1.45
	ezannoni_pie-20030916-branch:1.45.0.2
	cagney_x86i386-20030821-branch:1.44.0.2
	cagney_x86i386-20030821-branchpoint:1.44
	carlton_dictionary-20030805-merge:1.43
	carlton_dictionary-20030627-merge:1.43
	gdb_6_0-branch:1.43.0.22
	gdb_6_0-2003-06-23-branchpoint:1.43
	jimb-ppc64-linux-20030613-branch:1.43.0.20
	jimb-ppc64-linux-20030613-branchpoint:1.43
	binutils-2_14:1.43
	cagney_convert-20030606-branch:1.43.0.18
	cagney_convert-20030606-branchpoint:1.43
	cagney_writestrings-20030508-branch:1.43.0.16
	cagney_writestrings-20030508-branchpoint:1.43
	jimb-ppc64-linux-20030528-branch:1.43.0.14
	jimb-ppc64-linux-20030528-branchpoint:1.43
	carlton_dictionary-20030523-merge:1.43
	cagney_fileio-20030521-branch:1.43.0.12
	cagney_fileio-20030521-branchpoint:1.43
	kettenis_i386newframe-20030517-mergepoint:1.43
	jimb-ppc64-linux-20030509-branch:1.43.0.10
	jimb-ppc64-linux-20030509-branchpoint:1.43
	kettenis_i386newframe-20030504-mergepoint:1.43
	carlton_dictionary-20030430-merge:1.43
	binutils-2_14-branch:1.43.0.8
	binutils-2_14-branchpoint:1.43
	kettenis_i386newframe-20030419-branch:1.43.0.6
	kettenis_i386newframe-20030419-branchpoint:1.43
	carlton_dictionary-20030416-merge:1.43
	cagney_frameaddr-20030409-mergepoint:1.43
	kettenis_i386newframe-20030406-branch:1.43.0.4
	kettenis_i386newframe-20030406-branchpoint:1.43
	cagney_frameaddr-20030403-branchpoint:1.43
	cagney_frameaddr-20030403-branch:1.43.0.2
	cagney_framebase-20030330-mergepoint:1.42
	cagney_framebase-20030326-branch:1.42.0.14
	cagney_framebase-20030326-branchpoint:1.42
	cagney_lazyid-20030317-branch:1.42.0.12
	cagney_lazyid-20030317-branchpoint:1.42
	kettenis-i386newframe-20030316-mergepoint:1.42
	offbyone-20030313-branch:1.42.0.10
	offbyone-20030313-branchpoint:1.42
	kettenis-i386newframe-20030308-branch:1.42.0.8
	kettenis-i386newframe-20030308-branchpoint:1.42
	carlton_dictionary-20030305-merge:1.42
	cagney_offbyone-20030303-branch:1.42.0.6
	cagney_offbyone-20030303-branchpoint:1.42
	w32api-2_2:1.42
	mingw-runtime-2_4:1.42
	carlton_dictionary-20030207-merge:1.42
	interps-20030202-branch:1.42.0.4
	interps-20030202-branchpoint:1.42
	cagney-unwind-20030108-branch:1.42.0.2
	cagney-unwind-20030108-branchpoint:1.42
	binutils-2_13_2_1:1.35.2.1
	binutils-2_13_2:1.35.2.1
	carlton_dictionary-20021223-merge:1.39
	gdb_5_3-2002-12-12-release:1.37
	carlton_dictionary-20021115-merge:1.39
	binutils-2_13_1:1.35.2.1
	kseitz_interps-20021105-merge:1.39
	kseitz_interps-20021103-merge:1.39
	drow-cplus-merge-20021020:1.39
	drow-cplus-merge-20021025:1.39
	carlton_dictionary-20021025-merge:1.39
	carlton_dictionary-20021011-merge:1.39
	drow-cplus-branch:1.39.0.4
	drow-cplus-branchpoint:1.39
	kseitz_interps-20020930-merge:1.39
	carlton_dictionary-20020927-merge:1.39
	carlton_dictionary-branch:1.39.0.2
	carlton_dictionary-20020920-branchpoint:1.39
	sid-20020905-branchpoint:1.38
	sid-20020905-branch:1.38.0.2
	gdb_5_3-branch:1.37.0.2
	gdb_5_3-2002-09-04-branchpoint:1.37
	kseitz_interps-20020829-merge:1.37
	cagney_sysregs-20020825-branch:1.36.0.4
	cagney_sysregs-20020825-branchpoint:1.36
	readline_4_3-import-branch:1.36.0.2
	readline_4_3-import-branchpoint:1.36
	binutils-2_13:1.35
	gdb_5_2_1-2002-07-23-release:1.32
	binutils-2_13-branchpoint:1.35
	binutils-2_13-branch:1.35.0.2
	kseitz_interps-20020528-branch:1.34.0.2
	kseitz_interps-20020528-branchpoint:1.34
	cagney_regbuf-20020515-branch:1.32.0.8
	cagney_regbuf-20020515-branchpoint:1.32
	binutils-2_12_1:1.32
	jimb-macro-020506-branch:1.32.0.6
	jimb-macro-020506-branchpoint:1.32
	gdb_5_2-2002-04-29-release:1.32
	binutils-2_12:1.32
	gdb_5_2-branch:1.32.0.4
	gdb_5_2-2002-03-03-branchpoint:1.32
	binutils-2_12-branch:1.32.0.2
	binutils-2_12-branchpoint:1.32
	gdb_5_1_1-2002-01-24-release:1.24
	gdb_5_1_0_1-2002-01-03-release:1.24
	cygnus_cvs_20020108_pre:1.29
	gdb_5_1_0_1-2002-01-03-branch:1.24.0.6
	gdb_5_1_0_1-2002-01-03-branchpoint:1.24
	gdb_5_1-2001-11-21-release:1.24
	gdb_s390-2001-09-26-branch:1.24.0.4
	gdb_s390-2001-09-26-branchpoint:1.24
	gdb_5_1-2001-07-29-branch:1.24.0.2
	gdb_5_1-2001-07-29-branchpoint:1.24
	binutils-2_11_2:1.20.2.1
	binutils-2_11_1:1.20.2.1
	binutils-2_11:1.20
	x86_64versiong3:1.22
	binutils-2_11-branch:1.20.0.2
	insight-precleanup-2001-01-01:1.19
	binutils-2_10_1:1.12
	binutils-2_10:1.12
	gdb-premipsmulti-2000-06-06-branch:1.14.0.2
	gdb-premipsmulti-2000-06-06-branchpoint:1.14
	gdb_5_0-2000-05-19-release:1.12
	gdb_4_18_2-2000-05-18-release:1.12
	gdb_4_95_1-2000-05-11-snapshot:1.12
	gdb_4_95_0-2000-04-27-snapshot:1.12
	gdb_5_0-2000-04-10-branch:1.12.0.4
	gdb_5_0-2000-04-10-branchpoint:1.12
	binutils-2_10-branch:1.12.0.2
	binutils-2_10-branchpoint:1.12
	binutils_latest_snapshot:1.90
	repo-unification-2000-02-06:1.8
	binu_ss_19990721:1.2
	binu_ss_19990602:1.1.1.1
	binu_ss_19990502:1.1.1.1
	cygnus:1.1.1;
locks; strict;
comment	@ * @;


1.90
date	2013.02.06.23.22.17;	author sandra;	state Exp;
branches;
next	1.89;

1.89
date	2013.01.10.09.49.18;	author nickc;	state Exp;
branches;
next	1.88;

1.88
date	2012.08.13.14.52.47;	author nickc;	state Exp;
branches;
next	1.87;

1.87
date	2012.07.24.12.56.47;	author nickc;	state Exp;
branches
	1.87.2.1;
next	1.86;

1.86
date	2012.05.15.12.55.50;	author nickc;	state Exp;
branches;
next	1.85;

1.85
date	2012.05.03.13.12.06;	author nickc;	state Exp;
branches;
next	1.84;

1.84
date	2012.03.15.12.58.48;	author amodra;	state Exp;
branches;
next	1.83;

1.83
date	2011.11.02.03.09.06;	author dj;	state Exp;
branches;
next	1.82;

1.82
date	2011.10.25.11.18.10;	author nickc;	state Exp;
branches;
next	1.81;

1.81
date	2011.06.13.15.18.53;	author nickc;	state Exp;
branches;
next	1.80;

1.80
date	2010.06.29.04.17.27;	author amodra;	state Exp;
branches;
next	1.79;

1.79
date	2010.04.15.10.26.05;	author nickc;	state Exp;
branches;
next	1.78;

1.78
date	2010.03.25.21.12.29;	author jsm28;	state Exp;
branches;
next	1.77;

1.77
date	2009.12.15.02.02.39;	author dougkwan;	state Exp;
branches;
next	1.76;

1.76
date	2009.09.29.14.17.11;	author nickc;	state Exp;
branches;
next	1.75;

1.75
date	2009.08.06.17.38.03;	author nickc;	state Exp;
branches;
next	1.74;

1.74
date	2009.06.18.10.31.20;	author nickc;	state Exp;
branches;
next	1.73;

1.73
date	2009.06.15.11.37.26;	author nickc;	state Exp;
branches;
next	1.72;

1.72
date	2009.04.16.15.39.44;	author nickc;	state Exp;
branches;
next	1.71;

1.71
date	2008.12.23.19.10.21;	author nickc;	state Exp;
branches;
next	1.70;

1.70
date	2008.07.07.18.40.13;	author shebs;	state Exp;
branches
	1.70.12.1;
next	1.69;

1.69
date	2008.04.10.13.36.43;	author krebbel;	state Exp;
branches;
next	1.68;

1.68
date	2007.06.29.14.09.34;	author nickc;	state Exp;
branches
	1.68.10.1;
next	1.67;

1.67
date	2007.02.05.19.17.10;	author brolley;	state Exp;
branches;
next	1.66;

1.66
date	2007.02.02.15.27.04;	author hjl;	state Exp;
branches;
next	1.65;

1.65
date	2006.10.31.20.21.56;	author pbrook;	state Exp;
branches;
next	1.64;

1.64
date	2006.10.25.06.49.18;	author amodra;	state Exp;
branches;
next	1.63;

1.63
date	2006.09.16.23.51.50;	author nickc;	state Exp;
branches;
next	1.62;

1.62
date	2006.02.17.14.36.26;	author nickc;	state Exp;
branches
	1.62.6.1;
next	1.61;

1.61
date	2006.01.17.17.39.17;	author schwab;	state Exp;
branches;
next	1.60;

1.60
date	2005.12.16.10.23.10;	author nathan;	state Exp;
branches;
next	1.59;

1.59
date	2005.10.28.19.41.01;	author brolley;	state Exp;
branches;
next	1.58;

1.58
date	2005.10.25.17.40.19;	author nickc;	state Exp;
branches;
next	1.57;

1.57
date	2005.09.30.15.12.51;	author clm;	state Exp;
branches;
next	1.56;

1.56
date	2005.08.18.03.49.39;	author amodra;	state Exp;
branches;
next	1.55;

1.55
date	2005.07.14.22.52.14;	author jimb;	state Exp;
branches;
next	1.54;

1.54
date	2005.07.07.19.27.44;	author wilson;	state Exp;
branches;
next	1.53;

1.53
date	2005.06.08.17.27.41;	author zack;	state Exp;
branches;
next	1.52;

1.52
date	2005.06.07.21.08.36;	author aldyh;	state Exp;
branches;
next	1.51;

1.51
date	2005.05.10.10.21.08;	author nickc;	state Exp;
branches;
next	1.50;

1.50
date	2005.03.03.11.58.01;	author amodra;	state Exp;
branches;
next	1.49;

1.49
date	2005.01.10.09.54.50;	author schwab;	state Exp;
branches;
next	1.48;

1.48
date	2004.11.08.13.17.38;	author nickc;	state Exp;
branches;
next	1.47;

1.47
date	2004.07.07.17.28.50;	author nickc;	state Exp;
branches;
next	1.46;

1.46
date	2003.11.14.15.12.43;	author nickc;	state Exp;
branches
	1.46.8.1;
next	1.45;

1.45
date	2003.09.03.23.43.17;	author cagney;	state Exp;
branches;
next	1.44;

1.44
date	2003.08.07.02.25.49;	author amodra;	state Exp;
branches;
next	1.43;

1.43
date	2003.04.01.15.50.30;	author nickc;	state Exp;
branches;
next	1.42;

1.42
date	2003.01.03.18.03.17;	author scox;	state Exp;
branches;
next	1.41;

1.41
date	2002.12.30.19.25.11;	author nickc;	state Exp;
branches;
next	1.40;

1.40
date	2002.12.27.08.00.30;	author cgd;	state Exp;
branches;
next	1.39;

1.39
date	2002.09.19.15.48.16;	author nickc;	state Exp;
branches
	1.39.2.1
	1.39.4.1;
next	1.38;

1.38
date	2002.09.04.10.08.07;	author nickc;	state Exp;
branches;
next	1.37;

1.37
date	2002.08.28.10.38.48;	author nickc;	state Exp;
branches;
next	1.36;

1.36
date	2002.07.19.07.52.39;	author nickc;	state Exp;
branches;
next	1.35;

1.35
date	2002.06.18.21.16.32;	author brolley;	state Exp;
branches
	1.35.2.1;
next	1.34;

1.34
date	2002.05.28.14.08.14;	author nickc;	state Exp;
branches
	1.34.2.1;
next	1.33;

1.33
date	2002.05.17.14.36.42;	author amylaar;	state Exp;
branches;
next	1.32;

1.32
date	2002.02.08.05.01.25;	author aoliva;	state Exp;
branches
	1.32.8.1;
next	1.31;

1.31
date	2002.02.05.19.40.42;	author fche;	state Exp;
branches;
next	1.30;

1.30
date	2002.01.31.17.33.01;	author nickc;	state Exp;
branches;
next	1.29;

1.29
date	2001.12.14.21.32.04;	author nickc;	state Exp;
branches;
next	1.28;

1.28
date	2001.12.08.03.46.02;	author geoffk;	state Exp;
branches;
next	1.27;

1.27
date	2001.11.14.03.15.28;	author amodra;	state Exp;
branches;
next	1.26;

1.26
date	2001.11.11.15.45.34;	author twall;	state Exp;
branches;
next	1.25;

1.25
date	2001.10.30.15.20.09;	author nickc;	state Exp;
branches;
next	1.24;

1.24
date	2001.04.27.13.33.26;	author nickc;	state Exp;
branches;
next	1.23;

1.23
date	2001.03.14.02.27.43;	author nickc;	state Exp;
branches;
next	1.22;

1.22
date	2001.02.18.23.33.06;	author nickc;	state Exp;
branches;
next	1.21;

1.21
date	2001.02.10.00.55.51;	author nickc;	state Exp;
branches;
next	1.20;

1.20
date	2001.01.11.21.20.19;	author nickc;	state Exp;
branches
	1.20.2.1;
next	1.19;

1.19
date	2000.12.18.23.19.55;	author hp;	state Exp;
branches;
next	1.18;

1.18
date	2000.09.29.18.07.47;	author hp;	state Exp;
branches;
next	1.17;

1.17
date	2000.07.28.21.10.20;	author jle;	state Exp;
branches;
next	1.16;

1.16
date	2000.07.20.15.36.12;	author hp;	state Exp;
branches;
next	1.15;

1.15
date	2000.06.19.01.22.42;	author nickc;	state Exp;
branches;
next	1.14;

1.14
date	2000.05.08.11.01.40;	author amodra;	state Exp;
branches;
next	1.13;

1.13
date	2000.04.21.20.22.23;	author wilson;	state Exp;
branches;
next	1.12;

1.12
date	2000.03.27.08.39.13;	author amodra;	state Exp;
branches;
next	1.11;

1.11
date	2000.02.23.13.52.21;	author amodra;	state Exp;
branches;
next	1.10;

1.10
date	2000.02.21.12.01.26;	author amodra;	state Exp;
branches;
next	1.9;

1.9
date	2000.02.16.18.20.10;	author nickc;	state Exp;
branches;
next	1.8;

1.8
date	2000.02.03.18.12.54;	author twall;	state Exp;
branches;
next	1.7;

1.7
date	2000.01.28.01.54.05;	author nickc;	state Exp;
branches;
next	1.6;

1.6
date	2000.01.27.22.17.12;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	2000.01.27.21.44.26;	author nickc;	state Exp;
branches;
next	1.4;

1.4
date	99.12.16.01.23.39;	author ian;	state Exp;
branches;
next	1.3;

1.3
date	99.09.04.17.17.37;	author ian;	state Exp;
branches;
next	1.2;

1.2
date	99.06.16.02.24.26;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	99.05.03.07.29.01;	author rth;	state Exp;
branches
	1.1.1.1;
next	;

1.87.2.1
date	2012.08.16.09.21.48;	author nickc;	state Exp;
branches;
next	;

1.70.12.1
date	2009.09.10.15.09.40;	author amylaar;	state Exp;
branches;
next	;

1.68.10.1
date	2009.03.09.20.36.10;	author amylaar;	state Exp;
branches;
next	1.68.10.2;

1.68.10.2
date	2009.09.11.04.45.51;	author amylaar;	state Exp;
branches;
next	;

1.62.6.1
date	2006.10.26.19.41.53;	author pbrook;	state Exp;
branches;
next	;

1.46.8.1
date	2004.09.16.17.01.49;	author drow;	state Exp;
branches;
next	;

1.39.2.1
date	2003.02.07.19.18.00;	author carlton;	state Exp;
branches;
next	1.39.2.2;

1.39.2.2
date	2003.04.16.19.57.03;	author carlton;	state Exp;
branches;
next	1.39.2.3;

1.39.2.3
date	2003.09.17.21.28.53;	author carlton;	state Exp;
branches;
next	1.39.2.4;

1.39.2.4
date	2003.12.16.00.01.05;	author carlton;	state Exp;
branches;
next	;

1.39.4.1
date	2003.12.14.20.27.59;	author drow;	state Exp;
branches;
next	;

1.35.2.1
date	2002.09.23.22.14.52;	author drow;	state Exp;
branches;
next	;

1.34.2.1
date	2002.06.20.01.37.17;	author kseitz;	state Exp;
branches;
next	1.34.2.2;

1.34.2.2
date	2002.07.22.21.47.13;	author kseitz;	state Exp;
branches;
next	1.34.2.3;

1.34.2.3
date	2002.08.30.22.52.53;	author kseitz;	state Exp;
branches;
next	1.34.2.4;

1.34.2.4
date	2002.10.01.00.46.36;	author kseitz;	state Exp;
branches;
next	;

1.32.8.1
date	2002.06.15.16.43.16;	author cagney;	state Exp;
branches;
next	1.32.8.2;

1.32.8.2
date	2002.06.21.15.39.18;	author cagney;	state Exp;
branches;
next	;

1.20.2.1
date	2001.06.07.03.21.38;	author amodra;	state Exp;
branches;
next	;

1.1.1.1
date	99.05.03.07.29.01;	author rth;	state Exp;
branches;
next	;


desc
@@


1.90
log
@2013-02-06  Sandra Loosemore  <sandra@@codesourcery.com>
            Andrew Jenner <andrew@@codesourcery.com>

	Based on patches from Altera Corporation.

	bfd/
	* Makefile.am (ALL_MACHINES): Add cpu-nios2.lo.
	(ALL_MACHINES_CFILES): Add cpu-nios2.c.
	(BFD_BACKENDS): Add elf32-nios2.lo.
	(BFD32_BACKENDS_CFILES): Add elf32-nios2.c.
	* Makefile.in: Regenerated.
	* configure.in: Add entries for bfd_elf32_bignios2_vec and
	bfd_elf32_littlenios2_vec.
	* configure: Regenerated.
	* config.bfd: Add cases for nios2.
	* archures.c (enum bfd_architecture): Add bfd_arch_nios2.
	(bfd_mach_nios2): Define.
	(bfd_nios2_arch): Declare.
	(bfd_archures_list): Add bfd_nios2_arch.
	* targets.c (bfd_elf32_bignios2_vec): Declare.
	(bfd_elf32_littlenios2_vec): Declare.
	(_bfd_target_vector): Add entries for bfd_elf32_bignios2_vec and
	bfd_elf32_littlenios2_vec.
	* elf-bfd.h (enum elf_target_id): Add NIOS2_ELF_DATA.
	* reloc.c (enum bfd_reloc_code_real): Add Nios II relocations.
	* bfd-in2.h: Regenerated.
	* libbfd.h: Regenerated.
	* cpu-nios2.c: New file.
	* elf32-nios2.c: New file.

	opcodes/
	* Makefile.am (TARGET_LIBOPCODES_CFILES): Add nios2-dis.c and
	nios2-opc.c.
	* Makefile.in: Regenerated.
	* configure.in: Add case for bfd_nios2_arch.
	* configure: Regenerated.
	* disassemble.c (ARCH_nios2): Define.
	(disassembler): Add case for bfd_arch_nios2.
	* nios2-dis.c: New file.
	* nios2-opc.c: New file.

	include/
	* dis-asm.h (print_insn_big_nios2): Declare.
	(print_insn_little_nios2): Declare.

	include/elf
	* nios2.h: New file.

	include/opcode/
	* nios2.h: New file.

	gas/
	* Makefile.am (TARGET_CPU_CFILES): Add config/tc-nios2.c.
	(TARGET_CPU_HFILES): Add config/tc-nios2.h.
	* Makefile.in: Regenerated.
	* configure.tgt: Add case for nios2*-linux*.
	* config/obj-elf.c: Conditionally include elf/nios2.h.
	* config/tc-nios2.c: New file.
	* config/tc-nios2.h: New file.
	* doc/Makefile.am (CPU_DOCS): Add c-nios2.texi.
	* doc/Makefile.in: Regenerated.
	* doc/all.texi: Set NIOSII.
	* doc/as.texinfo (Overview): Add Nios II options.
	(Machine Dependencies): Include c-nios2.texi.
	* doc/c-nios2.texi: New file.
	* NEWS: Note Altera Nios II support.

	gas/testsuite/
	* gas/nios2/add.d: New.
	* gas/nios2/add.s: New.
	* gas/nios2/align_fill.d: New.
	* gas/nios2/align_fill.s: New.
	* gas/nios2/align_text.d: New.
	* gas/nios2/align_text.s: New.
	* gas/nios2/and.d: New.
	* gas/nios2/and.s: New.
	* gas/nios2/branch.d: New.
	* gas/nios2/branch.s: New.
	* gas/nios2/break.d: New.
	* gas/nios2/break.s: New.
	* gas/nios2/bret.d: New.
	* gas/nios2/bret.s: New.
	* gas/nios2/cache.d: New.
	* gas/nios2/cache.s: New.
	* gas/nios2/call26.d: New.
	* gas/nios2/call26.s: New.
	* gas/nios2/call.d: New.
	* gas/nios2/call.s: New.
	* gas/nios2/cmp.d: New.
	* gas/nios2/cmp.s: New.
	* gas/nios2/comments.d: New.
	* gas/nios2/comments.s: New.
	* gas/nios2/complex.d: New.
	* gas/nios2/complex.s: New.
	* gas/nios2/ctl.d: New.
	* gas/nios2/ctl.s: New.
	* gas/nios2/custom.d: New.
	* gas/nios2/custom.s: New.
	* gas/nios2/etbt.d: New.
	* gas/nios2/etbt.s: New.
	* gas/nios2/flushda.d: New.
	* gas/nios2/flushda.s: New.
	* gas/nios2/illegal.l: New.
	* gas/nios2/illegal.s: New.
	* gas/nios2/jmp.d: New.
	* gas/nios2/jmp.s: New.
	* gas/nios2/ldb.d: New.
	* gas/nios2/ldb.s: New.
	* gas/nios2/ldh.d: New.
	* gas/nios2/ldh.s: New.
	* gas/nios2/ldw.d: New.
	* gas/nios2/ldw.s: New.
	* gas/nios2/lineseparator.d: New.
	* gas/nios2/lineseparator.s: New.
	* gas/nios2/mov.d: New.
	* gas/nios2/movia.d: New.
	* gas/nios2/movia.s: New.
	* gas/nios2/movi.d: New.
	* gas/nios2/movi.s: New.
	* gas/nios2/mov.s: New.
	* gas/nios2/mul.d: New.
	* gas/nios2/mul.s: New.
	* gas/nios2/nios2.exp: New.
	* gas/nios2/nor.d: New.
	* gas/nios2/nor.s: New.
	* gas/nios2/or.d: New.
	* gas/nios2/or.s: New.
	* gas/nios2/ret.d: New.
	* gas/nios2/ret.s: New.
	* gas/nios2/rol.d: New.
	* gas/nios2/rol.s: New.
	* gas/nios2/rotate.d: New.
	* gas/nios2/rotate.s: New.
	* gas/nios2/stb.d: New.
	* gas/nios2/stb.s: New.
	* gas/nios2/sth.d: New.
	* gas/nios2/sth.s: New.
	* gas/nios2/stw.d: New.
	* gas/nios2/stw.s: New.
	* gas/nios2/sub.d: New.
	* gas/nios2/sub.s: New.
	* gas/nios2/sync.d: New.
	* gas/nios2/sync.s: New.
	* gas/nios2/trap.d: New.
	* gas/nios2/trap.s: New.
	* gas/nios2/tret.d: New.
	* gas/nios2/tret.s: New.
	* gas/nios2/warn_noat.l: New.
	* gas/nios2/warn_noat.s: New.
	* gas/nios2/warn_nobreak.l: New.
	* gas/nios2/warn_nobreak.s: New.
	* gas/nios2/xor.d: New.
	* gas/nios2/xor.s: New.

	ld/
	* Makefile.am (enios2elf.c): New rule.
	* Makefile.in: Regenerated.
	* configure.tgt: Add case for nios2*-*-*.
	* emulparams/nios2elf.sh: New file.
	* NEWS: Note Altera Nios II support.

	ld/testsuite/
	* ld-nios2/emit-relocs-1a.s: New.
	* ld-nios2/emit-relocs-1b.s: New.
	* ld-nios2/emit-relocs-1.d: New.
	* ld-nios2/emit-relocs-1.ld: New.
	* ld-nios2/gprel.d: New.
	* ld-nios2/gprel.s: New.
	* ld-nios2/hilo16.d: New.
	* ld-nios2/hilo16.s: New.
	* ld-nios2/hilo16_symbol.s: New.
	* ld-nios2/imm5.d: New.
	* ld-nios2/imm5.s: New.
	* ld-nios2/imm5_symbol.s: New.
	* ld-nios2/nios2.exp: New.
	* ld-nios2/pcrel16.d: New.
	* ld-nios2/pcrel16_label.s: New.
	* ld-nios2/pcrel16.s: New.
	* ld-nios2/relax_callr.d: New.
	* ld-nios2/relax_callr.ld: New.
	* ld-nios2/relax_callr.s: New.
	* ld-nios2/relax_cjmp.d: New.
	* ld-nios2/relax_cjmp.s: New.
	* ld-nios2/relax_jmp.ld: New.
	* ld-nios2/relax_section.d: New.
	* ld-nios2/relax_section.s: New.
	* ld-nios2/relax_ujmp.d: New.
	* ld-nios2/relax_ujmp.s: New.
	* ld-nios2/reloc.d: New.
	* ld-nios2/reloc.s: New.
	* ld-nios2/reloc_symbol.s: New.
	* ld-nios2/s16.d: New.
	* ld-nios2/s16.s: New.
	* ld-nios2/s16_symbol.s: New.
	* ld-nios2/u16.d: New.
	* ld-nios2/u16.s: New.
	* ld-nios2/u16_symbol.s: New.
	* ld-elf/indirect.exp: Skip on targets that don't support
	-shared -fPIC.
	* ld-elfcomm/elfcomm.exp: Build with -G0 for nios2.
	* ld-plugin/lto.exp: Skip shared library tests on targets that
	don't support them.  Skip execution tests on non-native targets.

	binutils/
	* readelf.c: Include elf/nios2.h.
	(dump_relocations): Add case for EM_ALTERA_NIOS2.
	(get_nios2_dynamic_type): New.
	(get_dynamic_type): Add case for EM_ALTERA_NIOS2.
	(is_32bit_abs_reloc): Fix EM_ALTERA_NIOS2 case.
	(is_16bit_abs_reloc): Likewise.
	(is_none_reloc): Add EM_ALTERA_NIOS2 and EM_NIOS32 cases.
	* NEWS: Note Altera Nios II support.
	* MAINTAINERS: Add Nios II maintainers.
@
text
@/* Interface between the opcode library and its callers.

   Copyright 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2009, 2010,
   2011, 2012 Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street - Fifth Floor,
   Boston, MA 02110-1301, USA.

   Written by Cygnus Support, 1993.

   The opcode library (libopcodes.a) provides instruction decoders for
   a large variety of instruction sets, callable with an identical
   interface, for making instruction-processing programs more independent
   of the instruction set being processed.  */

#ifndef DIS_ASM_H
#define DIS_ASM_H

#ifdef __cplusplus
extern "C" {
#endif

#include <stdio.h>
#include "bfd.h"

  typedef int (*fprintf_ftype) (void *, const char*, ...) ATTRIBUTE_FPTR_PRINTF_2;

enum dis_insn_type
{
  dis_noninsn,			/* Not a valid instruction.  */
  dis_nonbranch,		/* Not a branch instruction.  */
  dis_branch,			/* Unconditional branch.  */
  dis_condbranch,		/* Conditional branch.  */
  dis_jsr,			/* Jump to subroutine.  */
  dis_condjsr,			/* Conditional jump to subroutine.  */
  dis_dref,			/* Data reference instruction.  */
  dis_dref2			/* Two data references in instruction.  */
};

/* This struct is passed into the instruction decoding routine,
   and is passed back out into each callback.  The various fields are used
   for conveying information from your main routine into your callbacks,
   for passing information into the instruction decoders (such as the
   addresses of the callback functions), or for passing information
   back from the instruction decoders to their callers.

   It must be initialized before it is first passed; this can be done
   by hand, or using one of the initialization macros below.  */

typedef struct disassemble_info
{
  fprintf_ftype fprintf_func;
  void *stream;
  void *application_data;

  /* Target description.  We could replace this with a pointer to the bfd,
     but that would require one.  There currently isn't any such requirement
     so to avoid introducing one we record these explicitly.  */
  /* The bfd_flavour.  This can be bfd_target_unknown_flavour.  */
  enum bfd_flavour flavour;
  /* The bfd_arch value.  */
  enum bfd_architecture arch;
  /* The bfd_mach value.  */
  unsigned long mach;
  /* Endianness (for bi-endian cpus).  Mono-endian cpus can ignore this.  */
  enum bfd_endian endian;
  /* Endianness of code, for mixed-endian situations such as ARM BE8.  */
  enum bfd_endian endian_code;
  /* An arch/mach-specific bitmask of selected instruction subsets, mainly
     for processors with run-time-switchable instruction sets.  The default,
     zero, means that there is no constraint.  CGEN-based opcodes ports
     may use ISA_foo masks.  */
  void *insn_sets;

  /* Some targets need information about the current section to accurately
     display insns.  If this is NULL, the target disassembler function
     will have to make its best guess.  */
  asection *section;

  /* An array of pointers to symbols either at the location being disassembled
     or at the start of the function being disassembled.  The array is sorted
     so that the first symbol is intended to be the one used.  The others are
     present for any misc. purposes.  This is not set reliably, but if it is
     not NULL, it is correct.  */
  asymbol **symbols;
  /* Number of symbols in array.  */
  int num_symbols;

  /* Symbol table provided for targets that want to look at it.  This is
     used on Arm to find mapping symbols and determine Arm/Thumb code.  */
  asymbol **symtab;
  int symtab_pos;
  int symtab_size;

  /* For use by the disassembler.
     The top 16 bits are reserved for public use (and are documented here).
     The bottom 16 bits are for the internal use of the disassembler.  */
  unsigned long flags;
  /* Set if the disassembler has determined that there are one or more
     relocations associated with the instruction being disassembled.  */
#define INSN_HAS_RELOC	 (1 << 31)
  /* Set if the user has requested the disassembly of data as well as code.  */
#define DISASSEMBLE_DATA (1 << 30)
  /* Set if the user has specifically set the machine type encoded in the
     mach field of this structure.  */
#define USER_SPECIFIED_MACHINE_TYPE (1 << 29)

  /* Use internally by the target specific disassembly code.  */
  void *private_data;

  /* Function used to get bytes to disassemble.  MEMADDR is the
     address of the stuff to be disassembled, MYADDR is the address to
     put the bytes in, and LENGTH is the number of bytes to read.
     INFO is a pointer to this struct.
     Returns an errno value or 0 for success.  */
  int (*read_memory_func)
    (bfd_vma memaddr, bfd_byte *myaddr, unsigned int length,
     struct disassemble_info *dinfo);

  /* Function which should be called if we get an error that we can't
     recover from.  STATUS is the errno value from read_memory_func and
     MEMADDR is the address that we were trying to read.  INFO is a
     pointer to this struct.  */
  void (*memory_error_func)
    (int status, bfd_vma memaddr, struct disassemble_info *dinfo);

  /* Function called to print ADDR.  */
  void (*print_address_func)
    (bfd_vma addr, struct disassemble_info *dinfo);

  /* Function called to determine if there is a symbol at the given ADDR.
     If there is, the function returns 1, otherwise it returns 0.
     This is used by ports which support an overlay manager where
     the overlay number is held in the top part of an address.  In
     some circumstances we want to include the overlay number in the
     address, (normally because there is a symbol associated with
     that address), but sometimes we want to mask out the overlay bits.  */
  int (* symbol_at_address_func)
    (bfd_vma addr, struct disassemble_info *dinfo);

  /* Function called to check if a SYMBOL is can be displayed to the user.
     This is used by some ports that want to hide special symbols when
     displaying debugging outout.  */
  bfd_boolean (* symbol_is_valid)
    (asymbol *, struct disassemble_info *dinfo);

  /* These are for buffer_read_memory.  */
  bfd_byte *buffer;
  bfd_vma buffer_vma;
  unsigned int buffer_length;

  /* This variable may be set by the instruction decoder.  It suggests
      the number of bytes objdump should display on a single line.  If
      the instruction decoder sets this, it should always set it to
      the same value in order to get reasonable looking output.  */
  int bytes_per_line;

  /* The next two variables control the way objdump displays the raw data.  */
  /* For example, if bytes_per_line is 8 and bytes_per_chunk is 4, the */
  /* output will look like this:
     00:   00000000 00000000
     with the chunks displayed according to "display_endian". */
  int bytes_per_chunk;
  enum bfd_endian display_endian;

  /* Number of octets per incremented target address
     Normally one, but some DSPs have byte sizes of 16 or 32 bits.  */
  unsigned int octets_per_byte;

  /* The number of zeroes we want to see at the end of a section before we
     start skipping them.  */
  unsigned int skip_zeroes;

  /* The number of zeroes to skip at the end of a section.  If the number
     of zeroes at the end is between SKIP_ZEROES_AT_END and SKIP_ZEROES,
     they will be disassembled.  If there are fewer than
     SKIP_ZEROES_AT_END, they will be skipped.  This is a heuristic
     attempt to avoid disassembling zeroes inserted by section
     alignment.  */
  unsigned int skip_zeroes_at_end;

  /* Whether the disassembler always needs the relocations.  */
  bfd_boolean disassembler_needs_relocs;

  /* Results from instruction decoders.  Not all decoders yet support
     this information.  This info is set each time an instruction is
     decoded, and is only valid for the last such instruction.

     To determine whether this decoder supports this information, set
     insn_info_valid to 0, decode an instruction, then check it.  */

  char insn_info_valid;		/* Branch info has been set. */
  char branch_delay_insns;	/* How many sequential insn's will run before
				   a branch takes effect.  (0 = normal) */
  char data_size;		/* Size of data reference in insn, in bytes */
  enum dis_insn_type insn_type;	/* Type of instruction */
  bfd_vma target;		/* Target address of branch or dref, if known;
				   zero if unknown.  */
  bfd_vma target2;		/* Second target address for dref2 */

  /* Command line options specific to the target disassembler.  */
  char * disassembler_options;

} disassemble_info;


/* Standard disassemblers.  Disassemble one instruction at the given
   target address.  Return number of octets processed.  */
typedef int (*disassembler_ftype) (bfd_vma, disassemble_info *);

extern int print_insn_aarch64		(bfd_vma, disassemble_info *);
extern int print_insn_alpha		(bfd_vma, disassemble_info *);
extern int print_insn_avr		(bfd_vma, disassemble_info *);
extern int print_insn_bfin		(bfd_vma, disassemble_info *);
extern int print_insn_big_arm		(bfd_vma, disassemble_info *);
extern int print_insn_big_mips		(bfd_vma, disassemble_info *);
extern int print_insn_big_nios2		(bfd_vma, disassemble_info *);
extern int print_insn_big_or32		(bfd_vma, disassemble_info *);
extern int print_insn_big_powerpc	(bfd_vma, disassemble_info *);
extern int print_insn_big_score         (bfd_vma, disassemble_info *);
extern int print_insn_cr16              (bfd_vma, disassemble_info *);
extern int print_insn_crx               (bfd_vma, disassemble_info *);
extern int print_insn_d10v		(bfd_vma, disassemble_info *);
extern int print_insn_d30v		(bfd_vma, disassemble_info *);
extern int print_insn_dlx 		(bfd_vma, disassemble_info *);
extern int print_insn_epiphany		(bfd_vma, disassemble_info *);
extern int print_insn_fr30		(bfd_vma, disassemble_info *);
extern int print_insn_frv		(bfd_vma, disassemble_info *);
extern int print_insn_h8300		(bfd_vma, disassemble_info *);
extern int print_insn_h8300h		(bfd_vma, disassemble_info *);
extern int print_insn_h8300s		(bfd_vma, disassemble_info *);
extern int print_insn_h8500		(bfd_vma, disassemble_info *);
extern int print_insn_hppa		(bfd_vma, disassemble_info *);
extern int print_insn_i370		(bfd_vma, disassemble_info *);
extern int print_insn_i386		(bfd_vma, disassemble_info *);
extern int print_insn_i386_att		(bfd_vma, disassemble_info *);
extern int print_insn_i386_intel	(bfd_vma, disassemble_info *);
extern int print_insn_i860		(bfd_vma, disassemble_info *);
extern int print_insn_i960		(bfd_vma, disassemble_info *);
extern int print_insn_ia64		(bfd_vma, disassemble_info *);
extern int print_insn_ip2k		(bfd_vma, disassemble_info *);
extern int print_insn_iq2000		(bfd_vma, disassemble_info *);
extern int print_insn_little_arm	(bfd_vma, disassemble_info *);
extern int print_insn_little_mips	(bfd_vma, disassemble_info *);
extern int print_insn_little_nios2	(bfd_vma, disassemble_info *);
extern int print_insn_little_or32	(bfd_vma, disassemble_info *);
extern int print_insn_little_powerpc	(bfd_vma, disassemble_info *);
extern int print_insn_little_score      (bfd_vma, disassemble_info *); 
extern int print_insn_lm32		(bfd_vma, disassemble_info *);
extern int print_insn_m32c	        (bfd_vma, disassemble_info *);
extern int print_insn_m32r		(bfd_vma, disassemble_info *);
extern int print_insn_m68hc11		(bfd_vma, disassemble_info *);
extern int print_insn_m68hc12		(bfd_vma, disassemble_info *);
extern int print_insn_m9s12x		(bfd_vma, disassemble_info *);
extern int print_insn_m9s12xg		(bfd_vma, disassemble_info *);
extern int print_insn_m68k		(bfd_vma, disassemble_info *);
extern int print_insn_m88k		(bfd_vma, disassemble_info *);
extern int print_insn_mcore		(bfd_vma, disassemble_info *);
extern int print_insn_mep		(bfd_vma, disassemble_info *);
extern int print_insn_metag		(bfd_vma, disassemble_info *);
extern int print_insn_microblaze	(bfd_vma, disassemble_info *);
extern int print_insn_mmix		(bfd_vma, disassemble_info *);
extern int print_insn_mn10200		(bfd_vma, disassemble_info *);
extern int print_insn_mn10300		(bfd_vma, disassemble_info *);
extern int print_insn_moxie		(bfd_vma, disassemble_info *);
extern int print_insn_msp430		(bfd_vma, disassemble_info *);
extern int print_insn_mt                (bfd_vma, disassemble_info *);
extern int print_insn_ns32k		(bfd_vma, disassemble_info *);
extern int print_insn_openrisc		(bfd_vma, disassemble_info *);
extern int print_insn_pdp11		(bfd_vma, disassemble_info *);
extern int print_insn_pj		(bfd_vma, disassemble_info *);
extern int print_insn_rs6000		(bfd_vma, disassemble_info *);
extern int print_insn_s390		(bfd_vma, disassemble_info *);
extern int print_insn_sh		(bfd_vma, disassemble_info *);
extern int print_insn_sh64		(bfd_vma, disassemble_info *);
extern int print_insn_sh64x_media	(bfd_vma, disassemble_info *);
extern int print_insn_sparc		(bfd_vma, disassemble_info *);
extern int print_insn_spu		(bfd_vma, disassemble_info *);
extern int print_insn_tic30		(bfd_vma, disassemble_info *);
extern int print_insn_tic4x		(bfd_vma, disassemble_info *);
extern int print_insn_tic54x		(bfd_vma, disassemble_info *);
extern int print_insn_tic6x		(bfd_vma, disassemble_info *);
extern int print_insn_tic80		(bfd_vma, disassemble_info *);
extern int print_insn_tilegx		(bfd_vma, disassemble_info *);
extern int print_insn_tilepro		(bfd_vma, disassemble_info *);
extern int print_insn_v850		(bfd_vma, disassemble_info *);
extern int print_insn_vax		(bfd_vma, disassemble_info *);
extern int print_insn_w65		(bfd_vma, disassemble_info *);
extern int print_insn_xc16x		(bfd_vma, disassemble_info *);
extern int print_insn_xgate             (bfd_vma, disassemble_info *);
extern int print_insn_xstormy16		(bfd_vma, disassemble_info *);
extern int print_insn_xtensa		(bfd_vma, disassemble_info *);
extern int print_insn_z80		(bfd_vma, disassemble_info *);
extern int print_insn_z8001		(bfd_vma, disassemble_info *);
extern int print_insn_z8002		(bfd_vma, disassemble_info *);
extern int print_insn_rx		(bfd_vma, disassemble_info *);
extern int print_insn_rl78		(bfd_vma, disassemble_info *);

extern disassembler_ftype arc_get_disassembler (void *);
extern disassembler_ftype cris_get_disassembler (bfd *);

extern void print_aarch64_disassembler_options (FILE *);
extern void print_i386_disassembler_options (FILE *);
extern void print_mips_disassembler_options (FILE *);
extern void print_ppc_disassembler_options (FILE *);
extern void print_arm_disassembler_options (FILE *);
extern void parse_arm_disassembler_option (char *);
extern void print_s390_disassembler_options (FILE *);
extern int  get_arm_regname_num_options (void);
extern int  set_arm_regname_option (int);
extern int  get_arm_regnames (int, const char **, const char **, const char *const **);
extern bfd_boolean aarch64_symbol_is_valid (asymbol *, struct disassemble_info *);
extern bfd_boolean arm_symbol_is_valid (asymbol *, struct disassemble_info *);
extern void disassemble_init_powerpc (struct disassemble_info *);

/* Fetch the disassembler for a given BFD, if that support is available.  */
extern disassembler_ftype disassembler (bfd *);

/* Amend the disassemble_info structure as necessary for the target architecture.
   Should only be called after initialising the info->arch field.  */
extern void disassemble_init_for_target (struct disassemble_info * dinfo);

/* Document any target specific options available from the disassembler.  */
extern void disassembler_usage (FILE *);


/* This block of definitions is for particular callers who read instructions
   into a buffer before calling the instruction decoder.  */

/* Here is a function which callers may wish to use for read_memory_func.
   It gets bytes from a buffer.  */
extern int buffer_read_memory
  (bfd_vma, bfd_byte *, unsigned int, struct disassemble_info *);

/* This function goes with buffer_read_memory.
   It prints a message using info->fprintf_func and info->stream.  */
extern void perror_memory (int, bfd_vma, struct disassemble_info *);


/* Just print the address in hex.  This is included for completeness even
   though both GDB and objdump provide their own (to print symbolic
   addresses).  */
extern void generic_print_address
  (bfd_vma, struct disassemble_info *);

/* Always true.  */
extern int generic_symbol_at_address
  (bfd_vma, struct disassemble_info *);

/* Also always true.  */
extern bfd_boolean generic_symbol_is_valid
  (asymbol *, struct disassemble_info *);

/* Method to initialize a disassemble_info struct.  This should be
   called by all applications creating such a struct.  */
extern void init_disassemble_info (struct disassemble_info *dinfo, void *stream,
				   fprintf_ftype fprintf_func);

/* For compatibility with existing code.  */
#define INIT_DISASSEMBLE_INFO(INFO, STREAM, FPRINTF_FUNC) \
  init_disassemble_info (&(INFO), (STREAM), (fprintf_ftype) (FPRINTF_FUNC))
#define INIT_DISASSEMBLE_INFO_NO_ARCH(INFO, STREAM, FPRINTF_FUNC) \
  init_disassemble_info (&(INFO), (STREAM), (fprintf_ftype) (FPRINTF_FUNC))


#ifdef __cplusplus
}
#endif

#endif /* ! defined (DIS_ASM_H) */
@


1.89
log
@	* common.h: Fix case of "Meta".
	* metag.h: New file.

	* dis-asm.h (print_insn_metag): New declaration.

	* metag.h: New file.

	* Makefile.am: Add Meta.
	* Makefile.in: Regenerate.
	* configure: Regenerate.
	* configure.in: Add Meta.
	* disassemble.c: Add Meta support.
	* metag-dis.c: New file.

	* Makefile.am: Add Meta.
	* Makefile.in: Regenerate.
	* archures.c (bfd_mach_metag): New.
	* bfd-in2.h: Regenerate.
	* config.bfd: Add Meta.
	* configure: Regenerate.
	* configure.in: Add Meta.
	* cpu-metag.c: New file.
	* elf-bfd.h: Add Meta.
	* elf32-metag.c: New file.
	* elf32-metag.h: New file.
	* libbfd.h: Regenerate.
	* reloc.c: Add Meta relocations.
	* targets.c: Add Meta.

	* Makefile.am: Add Meta.
	* Makefile.in: Regenerate.
	* config/tc-metag.c: New file.
	* config/tc-metag.h: New file.
	* configure.tgt: Add Meta.
	* doc/Makefile.am: Add Meta.
	* doc/Makefile.in: Regenerate.
	* doc/all.texi: Add Meta.
	* doc/as.texiinfo: Document Meta options.
	* doc/c-metag.texi: New file.

	* gas/metag/labelarithmetic.d: New file.
	* gas/metag/labelarithmetic.s: New file.
	* gas/metag/metacore12.d: New file.
	* gas/metag/metacore12.s: New file.
	* gas/metag/metacore21-invalid.l: New file.
	* gas/metag/metacore21-invalid.s: New file.
	* gas/metag/metacore21.d: New file.
	* gas/metag/metacore21.s: New file.
	* gas/metag/metacore21ext.d: New file.
	* gas/metag/metacore21ext.s: New file.
	* gas/metag/metadsp21-invalid.l: New file.
	* gas/metag/metadsp21-invalid.s: New file.
	* gas/metag/metadsp21.d: New file.
	* gas/metag/metadsp21.s: New file.
	* gas/metag/metadsp21ext.d: New file.
	* gas/metag/metadsp21ext.s: New file.
	* gas/metag/metafpu21.d: New file.
	* gas/metag/metafpu21.s: New file.
	* gas/metag/metafpu21ext.d: New file.
	* gas/metag/metafpu21ext.s: New file.
	* gas/metag/metag.exp: New file.
	* gas/metag/tls.d: New file.
	* gas/metag/tls.s: New file.

	* Makefile.am: Add Meta.
	* Makefile.in: Regenerate.
	* configure.tgt: Add Meta.
	* emulparams/elf32metag.sh: New file.
	* emultempl/metagelf.em: New file.

	* ld-elf/merge.d: Mark Meta as xfail.
	* ld-gc/start.d: Skip this test on Meta.
	* ld-gc/personality.d: Skip this test on Meta.
	* ld-metag/external.s: New file.
	* ld-metag/metag.exp: New file.
	* ld-metag/pcrel.d: New file.
	* ld-metag/pcrel.s: New file.
	* ld-metag/shared.d: New file.
	* ld-metag/shared.r: New file.
	* ld-metag/shared.s: New file.
	* ld-metag/stub.d: New file.
	* ld-metag/stub.s: New file.
	* ld-metag/stub_pic_app.d: New file.
	* ld-metag/stub_pic_app.r: New file.
	* ld-metag/stub_pic_app.s: New file.
	* ld-metag/stub_pic_shared.d: New file.
	* ld-metag/stub_pic_shared.s: New file.
	* ld-metag/stub_shared.d: New file.
	* ld-metag/stub_shared.r: New file.
	* ld-metag/stub_shared.s: New file.

	* binutils/readelf.c: (guess_is_rela): Add EM_METAG.
	(dump_relocations): Add EM_METAG.
	(get_machine_name): Correct case for Meta.
	(is_32bit_abs_reloc): Add support for Meta ADDR32 reloc.
	(is_none_reloc): Add support for Meta NONE reloc.
@
text
@d229 1
d257 1
@


1.88
log
@Add support for 64-bit ARM architecture: AArch64
@
text
@d270 1
@


1.87
log
@	PR binutils/13135
	* arm-dis.c: Add necessary casts for printing integer values.
	Use %s when printing string values.
	* hppa-dis.c: Likewise.
	* m68k-dis.c: Likewise.
	* microblaze-dis.c: Likewise.
	* mips-dis.c: Likewise.
	* ppc-dis.c: Likewise.
	* sparc-dis.c: Likewise.

	* dis-asm.h (fprintf_ftype): Add ATTRIBUTE_FPTR_PRINTF_2.
@
text
@d223 1
d311 1
d321 1
@


1.87.2.1
log
@Add support for 64-bit ARM architecture: aarch64
@
text
@a222 1
extern int print_insn_aarch64		(bfd_vma, disassemble_info *);
a309 1
extern void print_aarch64_disassembler_options (FILE *);
a318 1
extern bfd_boolean aarch64_symbol_is_valid (asymbol *, struct disassemble_info *);
@


1.86
log
@	* config/tc-m68hc11.c: Add S12X and XGATE co-processor support.
	Add option to offset S12 addresses into XGATE memory space.
	Tweak target flags to match other tools. (i.e. -m m68hc11).
	* doc/as.texinfo: Mention new options.
	* doc/c-m68hc11.texi: Document new options.
	* NEWS: Mention new support.

	* archures.c: Add bfd_arch_m9s12x and bfd_arch_m9s12xg.
	* config.bfd: Likewise.
	* cpu-m9s12x.c: New.
	* cpu-m9s12xg.c: New.
	* elf32-m68hc12.c: Add S12X and XGATE co-processor support.
	Add option to offset S12 addresses into XGATE memory space.
	Fix carry bug in IMM16 (IMM8 low/high) relocate.
	* Makefile.am (ALL_MACHINES): Add cpu-m9s12x and cpu-m9s12xg.
	(ALL_MACHINES_CFILES): Likewise.
	* reloc.c: Add S12X relocs.
	* Makefile.in: Regenerate.
	* bfd-in2.h: Regenerate.
	* libbfd.h: Regenerate.

	* gas/m68hc11/insns9s12x.s: New
	* gas/m68hc11/insns9s12x.d: New
	* gas/m68hc11/hexprefix.s: New
	* gas/m68hc11/hexprefix.d: New
	* gas/m68hc11/9s12x-exg-sex-tfr.s: New
	* gas/m68hc11/9s12x-exg-sex-tfr.d: New
	* gas/m68hc11/insns9s12xg.s: New
	* gas/m68hc11/insns9s12xg.d: New
	* gas/m68hc11/9s12x-mov.s: New
	* gas/m68hc11/9s12x-mov.d: New
	* gas/m68hc11/m68hc11.exp: Updated
	* gas/m68hc11/*.d: Brought in line with changed objdump output.
	* gas/all/gas.exp: XFAIL all hc11/12 targets for redef2,3.
	* gas/elf/elf.exp: XFAIL all hc11/12 targets for redef.
	* gas/elf/dwarf2-1.d: Skip for hc11/12 targets.
	* gas/elf/dwarf2-2.d: Likewise.

	* ld-m68hc11/xgate-link.s: New.
	* ld-m68hc11/xgate-link.d: New.
	* ld-m68hc11/xgate-offset.s: New.
	* ld-m68hc11/xgate-offset.d: New.
	* ld-m68hc11/xgate1.s: New.
	* ld-m68hc11/xgate1.d: New.
	* ld-m68hc11/xgate2.s: New.
	* ld-m68hc11/m68hc11.exp: Updated.
	* ld-m68hc11/*.d: Brought in line with changed objdump output.
	* ld-gc/gc.exp: Update CFLAGS for m68hc11.
	* ld-plugin/plugin.exp: Likewise.
	* ld-srec/srec.exp: XFAIL for m68hc11 and m68hc12.

	* configure.in: Add S12X and XGATE co-processor support to m68hc11
	target.
	* disassemble.c: Likewise.
	* configure: Regenerate.
	* m68hc11-dis.c: Make objdump output more consistent, use hex
	instead of decimal and use 0x prefix for hex.
	* m68hc11-opc.c: Add S12X and XGATE opcodes.
	* dis-asm.h (print_insn_m9s12x): Prototype.
	(print_insn_m9s12xg): Prototype.

	* m68hc11.h (R_M68HC12_16B, R_M68HC12_PCREL_9, R_M68HC12_PCREL_10)
	R_M68HC12_HI8XG, R_M68HC12_LO8XG): New relocations.
	(E_M68HC11_XGATE_RAMOFFSET): Define.

	* m68hc11.h: Add XGate definitions.
	(struct m68hc11_opcode): Add xg_mask field.
@
text
@d38 1
a38 1
  typedef int (*fprintf_ftype) (void *, const char*, ...) /*ATTRIBUTE_FPTR_PRINTF_2*/;
@


1.85
log
@Add support for Motorola XGATE embedded CPU
@
text
@d263 2
@


1.84
log
@include/
	* dis-asm.h (disassemble_init_powerpc): Declare.
opcodes/
	* disassemble.c (disassemble_init_for_target): Handle ppc init.
	* ppc-dis.c (private): New var.
	(powerpc_init_dialect): Don't return calloc failure, instead use
	private.
	(PPC_OPCD_SEGS, PPC_OP_TO_SEG): Define.
	(powerpc_opcd_indices): New array.
	(disassemble_init_powerpc): New function.
	(print_insn_big_powerpc): Don't init dialect here.
	(print_insn_little_powerpc): Likewise.
	(print_insn_powerpc): Start search using powerpc_opcd_indices.
@
text
@d296 1
@


1.83
log
@[.]
	* configure.ac (rl78-*-*) New case.
	* configure: Regenerate.

[bfd]
	* Makefile.am (ALL_MACHINES): Add cpu-rl78.lo.
	(ALL_MACHINES_CFILES): Add cpu-rl78.c.
	(BFD32_BACKENDS): Add elf32-rl78.lo.
	(BFD32_BACKENDS_CFILES): Add elf32-rl78.c.
	(Makefile.in): Regenerate.
	* archures.c (bfd_architecture): Define bfd_arch_rl78.
	(bfd_archures_list): Add bfd_rl78_arch.
	* config.bfd: Add rl78-*-elf.
	* configure.in: Add bfd_elf32_rl78_vec.
	* reloc.c (bfd_reloc_code_type): Add BFD_RELOC_RL78_* relocations.
	* targets.c (bfd_target_vector): Add bfd_elf32_rl78_vec.
	* Makefile.in: Regenerate.
	* bfd-in2.h: Regenerate.
	* configure: Regenerate.
	* libbfd.h: Regenerate.
	* cpu-rl78.c: New file.
	* elf32-rl78.c: New file.

[binutils]
	* readelf.c: Include elf/rl78.h
	(guess_is_rela): Handle EM_RL78.
	(dump_relocations): Likewise.
	(get_machine_name): Likewise.
	(is_32bit_abs_reloc): Likewise.
	* NEWS: Mention addition of RL78 support.
	* MAINTAINERS: Add myself as RL78 port maintainer.

[gas]
	* Makefile.am (TARGET_CPU_CFILES): Add tc-rl78.c.
	(TARGET_CPU_HFILES): Add rc-rl78.h.
	(EXTRA_DIST): Add rl78-parse.c and rl78-parse.y.
	(rl78-parse.c, rl78-parse.h, rl78-parse.o, rl78-defs.h): New rules.
	* Makefile.in: Regenerate.
	* configure.in: Add rl78 case.
	* configure: Regenerate.
	* configure.tgt: Add rl78 case.
	* config/rl78-defs.h: New file.
	* config/rl78-parse.y: New file.
	* config/tc-rl78.c: New file.
	* config/tc-rl78.h: New file.
	* NEWS: Add Renesas RL78.

	* doc/Makefile.am (c-rl78.texi): New.
	* doc/Makefile.in: Likewise.
	* doc/all.texi: Enable it.
	* doc/as.texi: Add it.

[include]
	* dis-asm.h (print_insn_rl78): Declare.

[include/elf]
	* common.h (EM_RL78, EM_78K0R): New.
	* rl78.h: New.

[include/opcode]
	* rl78.h: New file.

[ld]
	* Makefile.am (ALL_EMULATION_SOURCES): Add eelf32rl78.c.
	(+eelf32rl78.c): New rule.
	* Makefile.in: Regenerate.
	* configure.tgt: Add rl78-*-* case.
	* emulparams/elf32rl78.sh: New file.
	* NEWS: Mention addition of Renesas RL78 support.

[opcodes]
	* Makefile.am (TARGET_LIBOPCODES_CFILES): Add rl78-decode.c and
	rl78-dis.c.
	(MAINTAINERCLEANFILES): Add rl78-decode.c.
	(rl78-decode.c): New rule, built from rl78-decode.opc and opc2c.
	* Makefile.in: Regenerate.
	* configure.in: Add bfd_rl78_arch case.
	* configure: Regenerate.
	* disassemble.c: Define ARCH_rl78.
	(disassembler): Add ARCH_rl78 case.
	* rl78-decode.c: New file.
	* rl78-decode.opc: New file.
	* rl78-dis.c: New file.
@
text
@d4 1
a4 1
   2011  Free Software Foundation, Inc.
d317 1
@


1.82
log
@bfd:
	* Makefile.am (ALL_MACHINES): Add cpu-epiphany.lo .
	(ALL_MACHINES_CFILES): Add cpu-epiphany.c .
	(BFD32_BACKENDS): Add elf32-epiphany.lo .
	(BFD32_BACKENDS_CFILES): Add elf32-epiphany.c .
	* Makefile.in, bfd-in2.h, configure, libbfd.h: Regenerate.
	* archures.c (bfd_arch_epiphany): Add.
	(bfd_mach_epiphany16, bfd_mach_epiphany32): Define.
	(bfd_epiphany_arch): Declare.
	(bfd_archures_list): Add &bfd_epiphany_arch.
	* config.bfd (epiphany-*-elf): New target case.
	* configure.in (bfd_elf32_epiphany_vec): New target vector case.
	* reloc.c (BFD_RELOC_EPIPHANY_SIMM8): New relocation.
	(BFD_RELOC_EPIPHANY_SIMM24, BFD_RELOC_EPIPHANY_HIGH): Likewise.
	(BFD_RELOC_EPIPHANY_LOW, BFD_RELOC_EPIPHANY_SIMM11): Likewise.
	(BFD_RELOC_EPIPHANY_IMM11, BFD_RELOC_EPIPHANY_IMM8): Likewise.
	* targets.c (bfd_elf32_epiphany_vec): Declare.
	(_bfd_target_vector): Add bfd_elf32_epiphany_vec.
	* po/SRC-POTFILES.in, po/bfd.pot: Regenerate.
	* cpu-epiphany.c, elf32-epiphany.c: New files.
binutils:
	* readelf.c (include "elf/epiphany.h")
	(guess_is_rela, dump_relocation): Handle EM_ADAPTEVA_EPIPHANY.
	(get_machine_name, is_32bit_abs_reloc, is_32bit_pcrel_reloc): Likewise.
	(is_16bit_abs_reloc, is_none_reloc): Likewise.
	* po/binutils.pot: Regenerate.
cpu:
	* cpu/epiphany.cpu, cpu/epiphany.opc: New files.
gas:
	* NEWS: Mention addition of Adapteva Epiphany support.
	* config/tc-epiphany.c, config/tc-epiphany.h: New files.
	* Makefile.am (TARGET_CPU_CFILES): Add config/tc-epiphany.c .
	(TARGET_CPU_HFILES): Add config/tc-epiphany.h .
	* Makefile.in, configure, doc/Makefile.in, po/POTFILES.in: Regenerate.
	* configure.in: Also set using_cgen for epiphany.
	* configure.tgt: Handle epiphany.
	* doc/Makefile.am (CPU_DOCS): Add c-epiphany.texi .
	* doc/all.texi: Set EPIPHANY.
	* doc/as.texinfo: Add EPIPHANY-specific text.
	* doc/c-epiphany.texi: New file.
	* po/gas.pot: Regenerate.
gas/testsuite:
	* gas/epiphany: New directory.
include:
	* dis-asm.h (print_insn_epiphany): Declare.
	* elf/epiphany.h: New file.
	* elf/common.h (EM_ADAPTEVA_EPIPHANY): Define.
ld:
	* NEWS: Mention addition of Adapteva Epiphany support.
	* Makefile.am (ALL_EMULATION_SOURCES): Add eelf32epiphany.c .
	(eelf32epiphany.c): New rule.
	* Makefile.in: Regenerate.
	* configure.tgt: Handle epiphany-*-elf.
	* po/ld.pot: Regenerate.
	* testsuite/ld-srec/srec.exp: xfail epiphany.
	* emulparams/elf32epiphany.sh: New file.
opcodes:
	* Makefile.am (HFILES): Add epiphany-desc.h and epiphany-opc.h .
	(TARGET_LIBOPCODES_CFILES): Add  epiphany-asm.c, epiphany-desc.c,
	epiphany-dis.c, epiphany-ibld.c and epiphany-opc.c .
	(CLEANFILES): Add stamp-epiphany.
	(EPIPHANY_DEPS): Set.  Make CGEN-generated Epiphany files depend on it.
	(stamp-epiphany): New rule.
	* Makefile.in, configure, po/POTFILES.in, po/opcodes.pot: Regenerate.
	* configure.in: Handle bfd_epiphany_arch.
	* disassemble.c (ARCH_epiphany): Define.
	(disassembler): Handle bfd_arch_epiphany.
	* epiphany-asm.c, epiphany-desc.c, epiphany-desc.h: New files.
	* epiphany-dis.c, epiphany-ibld.c, epiphany-opc.c: Likewise.
	* epiphany-opc.h: Likewise.
@
text
@d302 1
@


1.81
log
@    * Makefile.am (ALL_MACHINES): Add cpu-tilegx.lo and cpu-tilepro.lo.
    (ALL_MACHINE_CFILES): Add cpu-tilegx.c and cpu-tilepro.c.
    (BFD32_BACKENDS): Add elf32-tilegx.lo, elf32-tilepro.lo,
    and elfxx-tilegx.lo.
    (BFD32_BACKENDS_CFILES): Add elf32-tilegx.c elf32-tilepro.c, and
    elfxx-tilegx.c.
    (BFD64_BACKENDS): Add elf64-tilegx.lo.
    (BFD64_BACKENDS_CFILES): Add elf64-tilegx.c.
    * Makefile.in: Regenerate.
    * arctures.c (bfd_architecture): Define bfd_arch_tilepro,
    bfd_arch_tilegx, bfd_mach_tilepro, bfd_mach_tilegx.
    (bfd_arch_info): Add bfd_tilegx_arch, bfd_tilepro_arch.
    (bfd_archures_list): Add bfd_tilegx_arch, bfd_tilepro_arch.
    bfd-in2.h: Regenerate.
    * config.bfd: Handle tilegx-*-* and tilepro-*-*.
    * configure.in: Handle bfd_elf32_tilegx_vec, bfd_elf32_tilepro_vec,
    and bfd_elf64_tilegx_vec.
    * configure: Regenerate.
    * elf-bfd.h (enum elf_target_id): Define TILEGX_ELF_DATA and
    TILEPRO_ELF_DATA.
    * libbfd.h: Regenerate.
    * reloc.c: Add BFD_RELOC_TILEPRO_{COPY, GLOB_DAT, JMP_SLOT,
    RELATIVE, BROFF_X1, JOFFLONG_X1, JOFFLONG_X1_PLT, IMM8_X0,
    IMM8_Y0, IMM8_X1, IMM8_Y1, DEST_IMM8_X1, MT_IMM15_X1, MF_IMM15_X1,
    IMM16_X0, IMM16_X1, IMM16_X0_LO, IMM16_X1_LO, IMM16_X0_HI,
    IMM16_X1_HI, IMM16_X0_HA, IMM16_X1_HA, IMM16_X0_PCREL,
    IMM16_X1_PCREL, IMM16_X0_LO_PCREL, IMM16_X1_LO_PCREL,
    IMM16_X0_HI_PCREL, IMM16_X1_HI_PCREL, IMM16_X0_HA_PCREL,
    IMM16_X1_HA_PCREL, IMM16_X0_GOT, IMM16_X1_GOT, IMM16_X0_GOT_LO,
    IMM16_X1_GOT_LO, IMM16_X0_GOT_HI, IMM16_X1_GOT_HI,
    IMM16_X0_GOT_HA, IMM16_X1_GOT_HA, MMSTART_X0, MMEND_X0,
    MMSTART_X1, MMEND_X1, SHAMT_X0, SHAMT_X1, SHAMT_Y0, SHAMT_Y1,
    IMM16_X0_TLS_GD, IMM16_X1_TLS_GD, IMM16_X0_TLS_GD_LO,
    IMM16_X1_TLS_GD_LO, IMM16_X0_TLS_GD_HI, IMM16_X1_TLS_GD_HI,
    IMM16_X0_TLS_GD_HA, IMM16_X1_TLS_GD_HA, IMM16_X0_TLS_IE,
    IMM16_X1_TLS_IE, IMM16_X0_TLS_IE_LO, IMM16_X1_TLS_IE_LO,
    IMM16_X0_TLS_IE_HI, IMM16_X1_TLS_IE_HI, IMM16_X0_TLS_IE_HA,
    IMM16_X1_TLS_IE_HA, TLS_DTPMOD32, TLS_DTPOFF32, TLS_TPOFF32}
    Add BFD_RELOC_TILEGX_{HW0, HW1, HW2, HW3, HW0_LAST, HW1_LAST,
    HW2_LAST, COPY, GLOB_DAT, JMP_SLOT, RELATIVE, BROFF_X1,
    JUMPOFF_X1, JUMPOFF_X1_PLT, IMM8_X0, IMM8_Y0, IMM8_X1, IMM8_Y1,
    DEST_IMM8_X1, MT_IMM14_X1, MF_IMM14_X1, MMSTART_X0, MMEND_X0,
    SHAMT_X0, SHAMT_X1, SHAMT_Y0, SHAMT_Y1, IMM16_X0_HW0,
    IMM16_X1_HW0, IMM16_X0_HW1, IMM16_X1_HW1, IMM16_X0_HW2,
    IMM16_X1_HW2, IMM16_X0_HW3, IMM16_X1_HW3, IMM16_X0_HW0_LAST,
    IMM16_X1_HW0_LAST, IMM16_X0_HW1_LAST, IMM16_X1_HW1_LAST,
    IMM16_X0_HW2_LAST, IMM16_X1_HW2_LAST, IMM16_X0_HW0_PCREL,
    IMM16_X1_HW0_PCREL, IMM16_X0_HW1_PCREL, IMM16_X1_HW1_PCREL,
    IMM16_X0_HW2_PCREL, IMM16_X1_HW2_PCREL, IMM16_X0_HW3_PCREL,
    IMM16_X1_HW3_PCREL, IMM16_X0_HW0_LAST_PCREL,
    IMM16_X1_HW0_LAST_PCREL, IMM16_X0_HW1_LAST_PCREL,
    IMM16_X1_HW1_LAST_PCREL, IMM16_X0_HW2_LAST_PCREL,
    IMM16_X1_HW2_LAST_PCREL, IMM16_X0_HW0_GOT, IMM16_X1_HW0_GOT,
    IMM16_X0_HW1_GOT, IMM16_X1_HW1_GOT, IMM16_X0_HW2_GOT,
    IMM16_X1_HW2_GOT, IMM16_X0_HW3_GOT, IMM16_X1_HW3_GOT,
    IMM16_X0_HW0_LAST_GOT, IMM16_X1_HW0_LAST_GOT,
    IMM16_X0_HW1_LAST_GOT, IMM16_X1_HW1_LAST_GOT,
    IMM16_X0_HW2_LAST_GOT, IMM16_X1_HW2_LAST_GOT, IMM16_X0_HW0_TLS_GD,
    IMM16_X1_HW0_TLS_GD, IMM16_X0_HW1_TLS_GD, IMM16_X1_HW1_TLS_GD,
    IMM16_X0_HW2_TLS_GD, IMM16_X1_HW2_TLS_GD, IMM16_X0_HW3_TLS_GD,
    IMM16_X1_HW3_TLS_GD, IMM16_X0_HW0_LAST_TLS_GD,
    IMM16_X1_HW0_LAST_TLS_GD, IMM16_X0_HW1_LAST_TLS_GD,
    IMM16_X1_HW1_LAST_TLS_GD, IMM16_X0_HW2_LAST_TLS_GD,
    IMM16_X1_HW2_LAST_TLS_GD, IMM16_X0_HW0_TLS_IE,
    IMM16_X1_HW0_TLS_IE, IMM16_X0_HW1_TLS_IE, IMM16_X1_HW1_TLS_IE,
    IMM16_X0_HW2_TLS_IE, IMM16_X1_HW2_TLS_IE, IMM16_X0_HW3_TLS_IE,
    IMM16_X1_HW3_TLS_IE, IMM16_X0_HW0_LAST_TLS_IE,
    IMM16_X1_HW0_LAST_TLS_IE, IMM16_X0_HW1_LAST_TLS_IE,
    IMM16_X1_HW1_LAST_TLS_IE, IMM16_X0_HW2_LAST_TLS_IE,
    IMM16_X1_HW2_LAST_TLS_IE, TLS_DTPMOD64, TLS_DTPOFF64, TLS_TPOFF64,
    TLS_DTPMOD32, TLS_DTPOFF32, TLS_TPOFF32}
    * targets.c (bfd_elf32_tilegx_vec): Declare.
    (bfd_elf32_tilepro_vec): Declare.
    (bfd_elf64_tilegx_vec): Declare.
    (bfd_target_vector): Add bfd_elf32_tilegx_vec, bfd_elf32_tilepro_vec,
    and bfd_elf64_tilegx_vec.
    * cpu-tilegx.c: New file.
    * cpu-tilepro.c: New file.
    * elf32-tilepro.h: New file.
    * elf32-tilepro.c: New file.
    * elf32-tilegx.c: New file.
    * elf32-tilegx.h: New file.
    * elf64-tilegx.c: New file.
    * elf64-tilegx.h: New file.
    * elfxx-tilegx.c: New file.
    * elfxx-tilegx.h: New file.

	* Makefile.am (TARGET_CPU_CFILES): Add config/tc-tilegx.c and
	config/tc-tilepro.c.
	(TARGET_CPU_HFILES): Add config/tc-tilegx.h and
	config/tc-tilepro.h.
	* Makefile.in: Regenerate.
	* configure.tgt (tilepro-*-*): New.
	(tilegx-*-*): Likewise.
	* config/tc-tilegx.c: New file.
	* config/tc-tilegx.h: Likewise.
	* config/tc-tilepro.h: Likewise.
	* config/tc-tilepro.c: Likewise.
	* doc/Makefile.am (CPU_DOCS): Add c-tilegx.texi and
	c-tilepro.texi.
	* doc/Makefile.in: Regenerate.
	* doc/all.texi (TILEGX): Define.
	(TILEPRO): Define.
	* doc/as.texinfo: Add Tile-Gx and TILEPro documentation.  Include
	c-tilegx.texi and c-tilepro.texi.
	* doc/c-tilegx.texi: New.
	* doc/c-tilepro.texi: New.

        * gas/tilepro/t_constants.s: New file.
	* gas/tilepro/t_constants.d: Likewise.
	* gas/tilepro/t_insns.s: Likewise.
	* gas/tilepro/tilepro.exp: Likewise.
	* gas/tilepro/t_insns.d: Likewise.
	* gas/tilegx/tilegx.exp: Likewise.
	* gas/tilegx/t_insns.d: Likewise.
	* gas/tilegx/t_insns.s: Likewise.

	* dis-asm.h (print_insn_tilegx): Declare.
	(print_insn_tilepro): Likewise.

	* tilegx.h: New file.
	* tilepro.h: New file.

	* common.h: Add EM_TILEGX.
	* tilegx.h: New file.
	* tilepro.h: New file.

	* Makefile.am (ALL_EMULATION_SOURCES): Add eelf32tilegx.c and
	eelf32tilepro.c.
	(ALL_64_EMULATION_SOURCES): Add eelf64tilegx.c.
	(eelf32tilegx.c): New target.
	(eelf32tilepro.c): Likewise.
	(eelf64tilegx.c): Likewise.
	* Makefile.in: Regenerate.
	* configure.tgt: Handle tilegx-*-* and tilepro-*-*.
	* emulparams/elf32tilegx.sh: New file.
	* emulparams/elf64tilegx.sh: New file.
	* emulparams/elf32tilepro.sh: New file.

	* ld-elf/eh5.d: Don't run on tile*.
	* ld-srec/srec.exp: xfail on tile*.
	* ld-tilegx/external.s: New file.
	* ld-tilegx/reloc.d: New file.
	* ld-tilegx/reloc.s: New file.
	* ld-tilegx/tilegx.exp: New file.
	* ld-tilepro/external.s: New file.
	* ld-tilepro/reloc.d: New file.
	* ld-tilepro/reloc.s: New file.
	* ld-tilepro/tilepro.exp: New file.

	* Makefile.am (TARGET_LIBOPCODES_CFILES): Add tilegx-dis.c,
	tilegx-opc.c, tilepro-dis.c, and tilepro-opc.c.
	* Makefile.in: Regenerate.
	* configure.in: Handle bfd_tilegx_arch and bfd_tilepro_arch.
	* configure: Regenerate.
	* disassemble.c (disassembler): Add ARCH_tilegx and ARCH_tilepro.
	* po/POTFILES.in: Regenerate.
	* tilegx-dis.c: New file.
	* tilegx-opc.c: New file.
	* tilepro-dis.c: New file.
	* tilepro-opc.c: New file.
@
text
@d236 1
@


1.80
log
@remove maxq-coff port
@
text
@d3 2
a4 2
   Copyright 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2009, 2010
   Free Software Foundation, Inc.
d289 2
@


1.79
log
@Upgrade header files to use GPLv3
@
text
@a263 2
extern int print_insn_maxq_big		(bfd_vma, disassemble_info *);
extern int print_insn_maxq_little	(bfd_vma, disassemble_info *);
@


1.78
log
@bfd:
	* Makefile.am (ALL_MACHINES): Add cpu-tic6x.lo.
	(ALL_MACHINES_CFILES): Add cpu-tic6x.c.
	(BFD32_BACKENDS): Add elf32-tic6x.lo.
	(BFD32_BACKENDS_CFILES): Add elf32-tic6x.c.
	* Makefile.in: Regenerate.
	* archures.c (bfd_arch_tic6x, bfd_tic6x_arch): New.
	(bfd_archures_list): Update.
	* config.bfd (tic6x-*-elf): New.
	* configure.in (bfd_elf32_tic6x_be_vec, bfd_elf32_tic6x_le_vec):
	New.
	* configure: Regenerate.
	* cpu-tic6x.c, elf32-tic6x.c: New.
	* reloc.c (BFD_RELOC_C6000_PCR_S21, BFD_RELOC_C6000_PCR_S12,
	BFD_RELOC_C6000_PCR_S10, BFD_RELOC_C6000_PCR_S7,
	BFD_RELOC_C6000_ABS_S16, BFD_RELOC_C6000_ABS_L16,
	BFD_RELOC_C6000_ABS_H16, BFD_RELOC_C6000_SBR_U15_B,
	BFD_RELOC_C6000_SBR_U15_H, BFD_RELOC_C6000_SBR_U15_W,
	BFD_RELOC_C6000_SBR_S16, BFD_RELOC_C6000_SBR_L16_B,
	BFD_RELOC_C6000_SBR_L16_H, BFD_RELOC_C6000_SBR_L16_W,
	BFD_RELOC_C6000_SBR_H16_B, BFD_RELOC_C6000_SBR_H16_H,
	BFD_RELOC_C6000_SBR_H16_W, BFD_RELOC_C6000_SBR_GOT_U15_W,
	BFD_RELOC_C6000_SBR_GOT_L16_W, BFD_RELOC_C6000_SBR_GOT_H16_W,
	BFD_RELOC_C6000_DSBT_INDEX, BFD_RELOC_C6000_PREL31,
	BFD_RELOC_C6000_COPY, BFD_RELOC_C6000_ALIGN,
	BFD_RELOC_C6000_FPHEAD, BFD_RELOC_C6000_NOCMP): New.
	* targets.c (bfd_elf32_tic6x_be_vec, bfd_elf32_tic6x_le_vec): New.
	(_bfd_target_vector): Update.
	* bfd-in2.h, libbfd.h: Regenerate.

binutils:
	* MAINTAINERS: Add self as TI C6X maintainer.
	* NEWS: Add news entry for TI C6X support.
	* readelf.c: Include elf/tic6x.h.
	(guess_is_rela): Handle EM_TI_C6000.
	(dump_relocations): Likewise.
	(get_tic6x_dynamic_type): New.
	(get_dynamic_type): Call it.
	(get_machine_flags): Handle EF_C6000_REL.
	(get_osabi_name): Handle machine-specific values only for relevant
	machines.  Handle C6X values.
	(get_tic6x_segment_type): New.
	(get_segment_type): Call it.
	(get_tic6x_section_type_name): New.
	(get_section_type_name): Call it.
	(is_32bit_abs_reloc, is_16bit_abs_reloc, is_none_reloc): Handle
	EM_TI_C6000.

gas:
	* Makefile.am (TARGET_CPU_CFILES): Add config/tc-tic6x.c.
	(TARGET_CPU_HFILES): Add config/tc-tic6x.h.
	* Makefile.in: Regenerate.
	* NEWS: Add news entry for TI C6X support.
	* app.c (do_scrub_chars): Handle "||^" for TI C6X.  Handle
	TC_PREDICATE_START_CHAR and TC_PREDICATE_END_CHAR.  Keep spaces in
	operands if TC_KEEP_OPERAND_SPACES.
	* configure.tgt (tic6x-*-*): New.
	* config/tc-ia64.h (TC_PREDICATE_START_CHAR,
	TC_PREDICATE_END_CHAR): Define.
	* config/tc-tic6x.c, config/tc-tic6x.h: New.
	* doc/Makefile.am (CPU_DOCS): Add c-tic6x.texi.
	* doc/Makefile.in: Regenerate.
	* doc/all.texi (TIC6X): Define.
	* doc/as.texinfo: Add TI C6X documentation.  Include c-tic6x.texi.
	* doc/c-tic6x.texi: New.

gas/testsuite:
	* gas/tic6x: New directory and testcases.

include:
	* dis-asm.h (print_insn_tic6x): Declare.

include/elf:
	* common.h (ELFOSABI_C6000_ELFABI, ELFOSABI_C6000_LINUX): Define.
	* tic6x.h: New.

include/opcode:
	* tic6x-control-registers.h, tic6x-insn-formats.h,
	tic6x-opcode-table.h, tic6x.h: New.

ld:
	* Makefile.am (ALL_EMULATIONS): Add eelf32_tic6x_be.o and
	eelf32_tic6x_le.o.
	(eelf32_tic6x_be.c, eelf32_tic6x_le.c): New.
	* NEWS: Add news entry for TI C6X support.
	* configure.tgt (tic6x-*-*): New.
	* emulparams/elf32_tic6x_be.sh, emulparams/elf32_tic6x_le.sh: New.

ld/testsuite:
	* ld-elf/flags1.d, ld-elf/merge.d: XFAIL for tic6x-*-*.
	* ld-elf/sec-to-seg.exp: Set B_test_same_seg to 0 for tic6x-*-*.
	* ld-tic6x: New directory and testcases.

opcodes:
	* Makefile.am (TARGET_LIBOPCODES_CFILES): Add tic6x-dis.c.
	* Makefile.in: Regenerate.
	* configure.in (bfd_tic6x_arch): New.
	* configure: Regenerate.
	* disassemble.c (ARCH_tic6x): Define if ARCH_all.
	(disassembler): Handle TI C6X.
	* tic6x-dis.c: New.
@
text
@d8 1
a8 1
   the Free Software Foundation; either version 2, or (at your option)
@


1.77
log
@2009-12-14  Doug Kwan  <dougkwan@@google.com>

bfd/ChangeLog:

	* opncls.c (bfd_opnr_iovec): Rename parameters to avoid shawdowed
	variable warnings.
	* bfd-in2.h: Regnenerate.

include/ChangeLog:

	* bfdlink.h (struct bfd_link_callbacks): Rename function parameters
	to avoid shadowed variable warnings.
	* dis-asm.h (struct disassemble_info): Ditto.
	(disassemble_init_for_target): Ditto.
	(init_disassemble_info): Ditto.
@
text
@d3 1
a3 1
   Copyright 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2009
d289 1
@


1.76
log
@bfd
        * Makefile.am (ALL_MACHINES): Add cpu-rx.lo.
        (ALL_MACHINES_CFILES): Add cpu-rx.c.
        (BFD32_BACKENDS): Add elf32-rx.lo.
        (BFD32_BACKENDS_CFILES): Add elf32-rx.c.
        * archures.c (bfd_architecture): Add bfd_arch_rx and bfd_mach_rx.
        Export bfd_rx_arch.
        (bfd_archures_list): Add bfd_rx_arch.
        * config.bfd: Add entry for rx-*-elf.
        * configure.in: Add entries for bfd_elf32_rx_le_vec and
        bfd_elf32_rx_be_vec.
        * reloc.c: Add RX relocations.
        * targets.c: Add RX target vectors.
        * Makefile.in: Regenerate.
        * bfd-in2.h: Regenerate.
        * configure: Regenerate.
        * libbfd.h: Regenerate.
        * cpu-rx.c: New file.
        * elf32-rx.c: New file.

binutils
        * readelf.c: Add support for RX target.
        * MAINTAINERS: Add DJ and NickC as maintainers for RX.

gas
        * Makefile.am: Add RX target.
        * configure.in: Likewise.
        * configure.tgt: Likewise.
        * read.c (do_repeat_with_expander): New function.
        * read.h: Provide a prototype for do_repeat_with_expander.
        * doc/Makefile.am: Add RX target documentation.
        * doc/all.texi: Likewise.
        * doc/as.texinfo: Likewise.
        * Makefile.in: Regenerate.
        * NEWS: Mention support for RX architecture.
        * configure: Regenerate.
        * doc/Makefile.in: Regenerate.
        * config/rx-defs.h: New file.
        * config/rx-parse.y: New file.
        * config/tc-rx.h: New file.
        * config/tc-rx.c: New file.
        * doc/c-rx.texi: New file.

gas/testsuite
        * gas/rx: New directory.
        * gas/rx/*: New set of test cases.
        * gas/elf/section2.e-rx: New expected output file.
        * gas/all/gas.exp: Add support for RX target.
        * gas/elf/elf.exp: Likewise.
        * gas/lns/lns.exp: Likewise.
        * gas/macros/macros.exp: Likewise.

include
        * dis-asm.h: Add prototype for print_insn_rx.

include/elf
        * rx.h: New file.

include/opcode
        * rx.h: New file.

ld
        * Makefile.am: Add rules to build RX emulation.
        * configure.tgt: Likewise.
        * NEWS: Mention support for RX architecture.
        * Makefile.in: Regenerate.
        * emulparams/elf32rx.sh: New file.
        * emultempl/rxelf.em: New file.

opcodes
        * Makefile.am: Add RX files.
        * configure.in: Add support for RX target.
        * disassemble.c: Likewise.
        * Makefile.in: Regenerate.
        * configure: Regenerate.
        * opc2c.c: New file.
        * rx-decode.c: New file.
        * rx-decode.opc: New file.
        * rx-dis.c: New file.
@
text
@d130 1
a130 1
     struct disassemble_info *info);
d137 1
a137 1
    (int status, bfd_vma memaddr, struct disassemble_info *info);
d141 1
a141 1
    (bfd_vma addr, struct disassemble_info *info);
d151 1
a151 1
    (bfd_vma addr, struct disassemble_info * info);
d157 1
a157 1
    (asymbol *, struct disassemble_info * info);
d320 1
a320 1
extern void disassemble_init_for_target (struct disassemble_info * info);
d355 1
a355 1
extern void init_disassemble_info (struct disassemble_info *info, void *stream,
@


1.75
log
@        Add support for Xilinx MicroBlaze processor.

        * bfd/Makefile.am: Add cpu-microblaze.{lo,c}, elf32-microblaze.{lo,c}.
        * bfd/Makefile.in: Same.
        * bfd/archures.c: Add bfd_arch_microblaze.
        * bfd/bfd-in2.h: Regenerate.
        * bfd/config.bfd: Add microblaze target.
        * bfd/configure: Add bfd_elf32_microblaze_vec target.
        * bfd/configure.in: Same.
        * bfd/cpu-microblaze.c: New.
        * bfd/elf32-microblaze.c: New.
        * bfd/libbfd-in.h: Add prototype _bfd_dwarf2_fixup_section_debug_loc().
        * bfd/libbfd.h: Regenerate.
        * bfd/reloc.c: Add MICROBLAZE relocations.
        * bfd/section.c: Add struct relax_table and relax_count to section.
        * bfd/targets.c: Add bfd_elf32_microblaze_vec.
        * binutils/MAINTAINERS: Add self as maintainer.
        * binutils/readelf.c: Include elf/microblaze.h, add EM_MICROBLAZE &
        EM_MICROBLAZE_OLD to guess_is_rela(), dump_relocations(),
        get_machine_name().
        * config.sub: Add microblaze target.
        * configure: Same.
        * configure.ac: Same.
        * gas/Makefile.am: add microblaze to CPU_TYPES, config/tc-microblaze.c to
        TARGET_CPU_CFILES, config/tc-microblaze.h to TARGET_CPU_HFILES, add
        DEP_microblaze_elf target.
        * gas/Makefile.in: Same.
        * gas/config/tc-microblaze.c: Add MicroBlaze assembler.
        * gas/config/tc-microblaze.h: Add header for tc-microblaze.c.
        * gas/configure: Add microblaze target.
        * gas/configure.in: Same.
        * gas/configure.tgt: Same.
        * gas/doc/Makefile.am: Add c-microblaze.texi to CPU_DOCS.
        * gas/doc/Makefile.in: Same.
        * gas/doc/all.texi: Set MICROBLAZE.
        * gas/doc/as.texinfo: Add MicroBlaze doc links.
        * gas/doc/c-microblaze.texi: New MicroBlaze docs.
        * include/dis-asm.h: Decl print_insn_microblaze().
        * include/elf/common.h: Define EM_MICROBLAZE & EM_MICROBLAZE_OLD.
        * include/elf/microblaze.h: New reloc definitions.
        * ld/Makefile.am: Add eelf32mb_linux.o, eelf32microblaze.o to
        ALL_EMULATIONS, targets.
        * ld/Makefile.in: Same.
        * ld/configure.tgt: Add microblaze*-linux*, microblaze* targets.
        * ld/emulparams/elf32mb_linux.sh: New.
        * ld/emulparams/elf32microblaze.sh. New.
        * ld/scripttempl/elfmicroblaze.sc: New.
        * opcodes/Makefile.am: Add microblaze-opc.h to HFILES, microblaze-dis.c to
        CFILES, microblaze-dis.lo to ALL_MACHINES, targets.
        * opcodes/Makefile.in: Same.
        * opcodes/configure: Add bfd_microblaze_arch target.
        * opcodes/configure.in: Same.
        * opcodes/disassemble.c: Define ARCH_microblaze, return
        print_insn_microblaze().
        * opcodes/microblaze-dis.c: New MicroBlaze disassembler.
        * opcodes/microblaze-opc.h: New MicroBlaze opcode definitions.
        * opcodes/microblaze-opcm.h: New MicroBlaze opcode types.
@
text
@d299 1
@


1.74
log
@        PR 10288
        * arm-dis.c (print_insn_coprocessor): Check that a user specified
        ARM architecture supports the matched instruction.
        (print_insn_arm): Likewise.
        (select_arm_features): New function.  Fills in the fields of an
        arm_feature_set structure based on a given arm machine number.
        (print_insn): Initialise an arm_feature_set structure.

        * objdump.c (disassemble_bytes): Set the
        USER_SPECIFIED_MACHINE_TYPE flag in the disassemble_info structure
        if the user has invoked the -m switch.
        * doc/binutils.texi: Document the additional behaviour of
        objdump's -m switch for ARM targets.

        * dis-asm.h (USER_SPECIFIED_MACHINE_TYPE): New value for the flags
        field of struct disassemble_info.

        * gas/arm/align.s: Add labels so that COFF based targets can
        correctly locate THUMB code.
        * gas/arm/copro.d: Do not pass --architecture switch to objdump.
@
text
@d268 1
@


1.73
log
@        PR 10263
        * arm-dis.c (print_insn): Ignore is_data if the user has requested
        the disassembly of data as well as instructions.

        * objdump.c (disassemble_bytes): Set the DISASSEMBLE_DATA bit in
        the flags field of the disassemble_info structure if the -D switch
        is in operation.

        * dis-asm.h (struct disassemble_info): New value for the flags
        field.
@
text
@d116 3
@


1.72
log
@Add new binutils target: moxie
@
text
@d3 1
a3 1
   Copyright 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006
d42 8
a49 8
  dis_noninsn,			/* Not a valid instruction */
  dis_nonbranch,		/* Not a branch instruction */
  dis_branch,			/* Unconditional branch */
  dis_condbranch,		/* Conditional branch */
  dis_jsr,			/* Jump to subroutine */
  dis_condjsr,			/* Conditional jump to subroutine */
  dis_dref,			/* Data reference instruction */
  dis_dref2			/* Two data references in instruction */
d111 7
a117 1
#define INSN_HAS_RELOC	0x80000000
@


1.71
log
@Add LM32 port.
@
text
@d262 1
@


1.70
log
@2008-07-07  Stan Shebs  <stan@@codesourcery.com>

	    * dis-asm.h (struct disassemble_info): Add endian_code field.
@
text
@d248 1
@


1.70.12.1
log
@Commit patches for ARCompact support to binutils-arc-20081103-branch .
@
text
@d288 1
a288 1
extern disassembler_ftype arc_get_disassembler (bfd *);
@


1.69
log
@2008-04-10  Andreas Krebbel  <krebbel1@@de.ibm.com>

	* s390-dis.c (init_disasm): Evaluate disassembler_options.
	(print_s390_disassembler_options): New function.
	* disassemble.c (disassembler_usage): Invoke
	print_s390_disassembler_options.

2008-04-10  Andreas Krebbel  <krebbel1@@de.ibm.com>

	* dis-asm.h (print_s390_disassembler_options):
	Prototype added.
@
text
@d79 2
@


1.68
log
@New port: National Semiconductor's CR16
@
text
@d294 1
@


1.68.10.1
log
@Check in ARCompact simulator.  A valid configuration is arc-elf.
This is not quite finished and has most likely a few files that are
obsolete & not used, but it's good enough to run gcc regression tests.
@
text
@d3 1
a3 1
   Copyright 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007
a212 1
extern int print_insn_arc		(bfd_vma, disassemble_info *);
d286 1
a286 1
extern disassembler_ftype arc_get_disassembler (bfd *);
@


1.68.10.2
log
@gdb/insight for ARCompact (from Richard Stuckey)
@
text
@d213 1
d287 1
a287 1
extern disassembler_ftype arc_get_disassembler (void *);
@


1.67
log
@2007-02-05  Dave Brolley  <brolley@@redhat.com>

        * Contribute the following changes:
        2001-03-26  Ben Elliston  <bje@@redhat.com>

        * dis-asm.h (print_insn_mep): Declare.
@
text
@d220 1
@


1.66
log
@binutils/

2076-02-02  H.J. Lu  <hongjiu.lu@@intel.com>

	* doc/binutils.texi (objdump): Document the new addr64 option
	for i386 disassembler.

include/

2076-02-02  H.J. Lu  <hongjiu.lu@@intel.com>

	* dis-asm.h (print_i386_disassembler_options): New.

opcodes/

2076-02-02  H.J. Lu  <hongjiu.lu@@intel.com>

	* disassemble.c (disassembler_usage): Call
	print_i386_disassembler_options for i386 disassembler.

	* i386-dis.c (print_i386_disassembler_options): New.
	(print_insn): Support the new addr64 option.
@
text
@d38 1
a38 1
typedef int (*fprintf_ftype) (void *, const char*, ...) ATTRIBUTE_FPTR_PRINTF_2;
d254 1
@


1.65
log
@2006-10-30  Paul Brook  <paul@@codesourcery.com>

	binutils/
	* objdump.c (disassemble_section): Set info->symtab_pos.
	(disassemble_data): Set info->symtab and info->symtab_size.

	include/
	* dis-asm.h (disassemble_info): Add symtab, symtab_pos and
	symtab_size.

	opcodes/
	* arm-dis.c (last_is_thumb, last_mapping_sym, last_mapping_addr): New.
	(get_sym_code_type): New function.
	(print_insn): Search for mapping symbols.
@
text
@d287 1
@


1.64
log
@New Cell SPU port.
@
text
@d99 6
@


1.63
log
@Add support for Score target.
@
text
@d263 1
@


1.62
log
@Add support for the Infineon XC16X.
@
text
@d3 1
a3 1
   Copyright 1999, 2000, 2001, 2002, 2003, 2004, 2005
d40 2
a41 1
enum dis_insn_type {
d62 2
a63 1
typedef struct disassemble_info {
a205 17
extern int print_insn_big_mips		(bfd_vma, disassemble_info *);
extern int print_insn_little_mips	(bfd_vma, disassemble_info *);
extern int print_insn_i386		(bfd_vma, disassemble_info *);
extern int print_insn_i386_att		(bfd_vma, disassemble_info *);
extern int print_insn_i386_intel	(bfd_vma, disassemble_info *);
extern int print_insn_ia64		(bfd_vma, disassemble_info *);
extern int print_insn_i370		(bfd_vma, disassemble_info *);
extern int print_insn_m68hc11		(bfd_vma, disassemble_info *);
extern int print_insn_m68hc12		(bfd_vma, disassemble_info *);
extern int print_insn_m68k		(bfd_vma, disassemble_info *);
extern int print_insn_z80		(bfd_vma, disassemble_info *);
extern int print_insn_z8001		(bfd_vma, disassemble_info *);
extern int print_insn_z8002		(bfd_vma, disassemble_info *);
extern int print_insn_h8300		(bfd_vma, disassemble_info *);
extern int print_insn_h8300h		(bfd_vma, disassemble_info *);
extern int print_insn_h8300s		(bfd_vma, disassemble_info *);
extern int print_insn_h8500		(bfd_vma, disassemble_info *);
a206 3
extern int print_insn_big_arm		(bfd_vma, disassemble_info *);
extern int print_insn_little_arm	(bfd_vma, disassemble_info *);
extern int print_insn_sparc		(bfd_vma, disassemble_info *);
d209 6
d219 5
d225 4
d231 1
d233 7
d241 3
d245 1
a246 1
extern int print_insn_maxq_big		(bfd_vma, disassemble_info *);
d251 1
a252 1
extern int print_insn_msp430		(bfd_vma, disassemble_info *);
a253 1
extern int print_insn_crx               (bfd_vma, disassemble_info *);
a254 2
extern int print_insn_big_or32		(bfd_vma, disassemble_info *);
extern int print_insn_little_or32	(bfd_vma, disassemble_info *);
a256 2
extern int print_insn_big_powerpc	(bfd_vma, disassemble_info *);
extern int print_insn_little_powerpc	(bfd_vma, disassemble_info *);
d260 3
d270 1
d273 3
a275 6
extern int print_insn_sh64		(bfd_vma, disassemble_info *);
extern int print_insn_sh64x_media	(bfd_vma, disassemble_info *);
extern int print_insn_frv		(bfd_vma, disassemble_info *);
extern int print_insn_iq2000		(bfd_vma, disassemble_info *);
extern int print_insn_xc16x		(bfd_vma, disassemble_info *);
extern int print_insn_m32c	(bfd_vma, disassemble_info *);
d284 3
a286 3
extern int get_arm_regname_num_options (void);
extern int set_arm_regname_option (int);
extern int get_arm_regnames (int, const char **, const char **, const char *const **);
@


1.62.6.1
log
@2006-10-26  Paul Brook  <paul@@codesourcery.com>

	binutils/
	* objdump.c (disassemble_section): Set info->symtab_pos.
	(disassemble_data): Set info->symtab and info->symtab_size.

	include/
	* dis-asm.h (disassemble_info): Add symtab, symtab_pos and
	symtab_size.

	opcodes/
	* arm-dis.c (last_is_thumb, last_mapping_sym, last_mapping_addr): New.
	(get_sym_code_type): New function.
	(print_insn): Search for mapping symbols.
@
text
@a96 6
  /* Symbol table provided for targets that want to look at it.  This is
     used on Arm to find mapping symbols and determine Arm/Thumb code.  */
  asymbol **symtab;
  int symtab_pos;
  int symtab_size;

@


1.61
log
@	PR binutils/1486
binutils/:
	* configure.in: Don't define DISASSEMBLER_NEEDS_RELOCS.
	* configure: Regenerate.
	* objdump.c (struct objdump_disasm_info): Don't check for
	DISASSEMBLER_NEEDS_RELOCS.
	(objdump_print_addr): Likewise.
	(disassemble_bytes): Check disassembler_needs_relocs from
	disassemble_info at run-time instead of DISASSEMBLER_NEEDS_RELOCS
	at compile-time.
	(disassemble_section): Likewise.
	(disassemble_data): Initialize it.

include/:
	* dis-asm.h (struct disassemble_info): Add
	disassembler_needs_relocs.

objdump/:
	* disassemble.c (disassemble_init_for_target): Set
	disassembler_needs_relocs for bfd_arch_arm.
@
text
@d5 1
a5 1
   
d20 1
a20 1
   
d51 1
a51 1
/* This struct is passed into the instruction decoding routine, 
d139 1
a139 1
    
d159 1
a159 1
  /* Number of octets per incremented target address 
d255 1
a255 1
extern int print_insn_s390		(bfd_vma, disassemble_info *); 
d270 1
d319 1
a319 1
/* Also always true.  */  
d322 1
a322 1
  
@


1.60
log
@	Second part of ms1 to mt renaming.
	* bfd/archures.c (bfd_arch_mt): Renamed.
	(bfd_mt_arch): Renamed.
	(bfd_archures_list): Adjusted.
	* bfd/bfd-in2.h: Rebuilt.
	* bfd/config.bfd (mt): Remove special case targ_archs.
	(mt-*-elf): Rename bfd_elf32_mt_vec.
	* bfd/configure: Rebuilt.
	* bfd/configure.in (bfd_elf32_mt_vec): Renamed.
	(selarchs) Remove mt special case.
	* bfd/cpu-mt.c (arch_info_struct): Adjust.
	(bfd_mt_arch): Renamed, adjust.
	* bfd/elf32-mt.c (mt_reloc_type_lookup, mt_info_to_howto_rela,
	mt_elf_relocate_hi16, mt_final_link_relocate, mt_relocate_section,
	mt_elf_howto_table): Renamed, adjusted.
	(mt_elf_gc_mark_hook, mt_elf_gc_sweep_hook, mt_elf_check_relocs,
	elf32_mt_machine, mt_elf_object_p, mt_elf_set_private_flags,
	mt_elf_copy_private_bfd_data, mt_elf_merge_private_bfd_data,
	mt_elf_print_private_bfd_data): Renamed, adjusted.
	(TARGET_BIG_SYM, TARGET_BIG_NAME, ELF_ARCH, ELF_MACHINE_CODE,
	ELF_MAXPAGESIZE, elf_info_to_howto, elf_backend_relocate_section,
	bfd_elf32_bfd_reloc_type_lookup, elf_backend_gc_mark_hook,
	elf_backend_gc_sweep_hook, elf_backend_check_relocs,
	eld_backend_object_p, bfd_elf32_bfd_set_private_flags,
	bfd_elf32_bfd_copy_private_bfd_data,
	bfd_elf32_bfd_merge_private_bfd_data,
	bfd_elf32_bfd_print_private_bfd_data): Adjusted.
	* bfd/libbfd.h: Regenerated.
	* bfd/reloc.c (BFD_RELOC_MT_PC16, BFD_RELOC_MT_HI16,
	BFD_RELOC_MT_LO16, BFD_RELOC_MT_GNU_VTINHERIT,
	BFD_RELOC_MT_GNU_VTENTRY, BFD_RELOC_MT_PCINSN8): Renamed.
	* bfd/targets.c (bfd_elf32_mt_vec): Renamed.
	(_bfd_target_vector): Adjusted.
	* binutils/readelf.c (guess_is_rela): Use EM_MT.
	(dump_relocations, get_machine_name): Adjust.

	* cpu/mt.cpu (define-arch, define-isa): Set name to mt.
	(define-mach): Adjust.
	* cpu/mt.opc (CGEN_ASM_HASH): Update.
	(mt_asm_hash, mt_cgen_insn_supported): Renamed.
	(parse_loopsize, parse_imm16): Adjust.

	* gas/configure: Rebuilt.
	* gas/configure.in (mt): Remove special case.
	* gas/config/tc-mt.c (opcodes/mt-desc.h, opcodes/mt-opc.h): Change
	#includes.
	(mt_insn, mt_mach, mt_mach_bitmask, mt_flags, mt_architectures):
	Rename, adjust.
	(md_parse_option, md_show_usage, md_begin, md_assemble,
	md_cgen_lookup_reloc, md_atof): Adjust.
	(mt_force_relocation, mt_apply_fix, mt_fix_adjustable): Rename, adjust.
	* gas/config/tc-mt.h (TC_MT): Rename.
	(LISTING_HEADER, TARGET_ARCH, TARGET_FORMAT): Adjust.
	(md_apply_fix): Adjust.
	(mt_apply_fix, mt_fix_adjustable, mt_force_relocation): Rename.
	(TC_FORCE_RELOCATION, tc_fix_adjustable): Adjust.

	* gdb/mt-tdep.c (mt_arch_constants, mt_gdb_regnums): Rename, adjust.
	(mt_register_name, mt_register_type, mt_register_reggroup_p,
	mt_return_value, mt_skip_prologue, mt_breapoint_from_pc,
	mt_pseudo_register_read, mt_pseudo_register_write, mt_frame_align,
	mt_registers_info, mt_push_dummy_call, mt_unwind_cache,
	mt_frame_unwind_cache, mt_unwind_pc, mt_unwind_dummy_id,
	mt_frame_this_id, mt_frame_prev_register, mt_frame_base_address,
	mt_frame_unwind, mt_frame_sniffer, mt_frame_base, mt_gdbarch_init,
	_initialize_mt_tdep): Rename & adjust.

	* include/dis-asm.h (print_insn_mt): Renamed.

	* include/elf/common.h (EM_MT): Renamed.
	* include/elf/mt.h: Rename relocs, cpu & other defines.

	* ld/emulparams/elf32mt.sh (ARCH, OUTPUT_FORMAT): Adjust.

	* opcodes/Makefile.am (HFILES, CFILES, ALL_MACHINES): Adjust.
	(stamp-mt): Adjust rule.
	(mt-asm.lo, mt-desc.lo, mt-dis.lo, mt-ibld.lo, mt-opc.lo): Rename &
	adjust.
	* opcodes/Makefile.in: Rebuilt.
	* opcodes/configure: Rebuilt.
	* opcodes/configure.in (bfd_mt_arch): Rename & adjust.
	* opcodes/disassemble.c (ARCH_mt): Renamed.
	(disassembler): Adjust.
	* opcodes/mt-asm.c: Renamed, rebuilt.
	* opcodes/mt-desc.c: Renamed, rebuilt.
	* opcodes/mt-desc.h: Renamed, rebuilt.
	* opcodes/mt-dis.c: Renamed, rebuilt.
	* opcodes/mt-ibld.c: Renamed, rebuilt.
	* opcodes/mt-opc.c: Renamed, rebuilt.
	* opcodes/mt-opc.h: Renamed, rebuilt.

	* sid/Makefile.in: Rebuilt.
	* sid/aclocal.m4: Rebuilt.
	* sid/configure: Rebuilt.
	* sid/sid.spec: Adjust.
	* sid/bsp/Makefile.am: Adjust.
	* sid/bsp/Makefile.in: Rebuilt.
	* sid/bsp/aclocal.m4: Rebuilt.
	* sid/bsp/configrun-sid.in: Adjust.
	* sid/bsp/pregen/Makefile.in: Rebuilt.
	* sid/bsp/pregen/mt-gdb.conf: Renamed & rebuilt.
	* sid/bsp/pregen/mt-gloss.conf: Renamed & rebuilt.
	* sid/bsp/pregen/pregen-configs.in: Adjust.
	* sid/component/aclocal.m4: Rebuilt.
	* sid/component/configure: Rebuilt.
	* sid/component/tconfig.in: Adjust.
	* sid/component/bochs/aclocal.m4: Rebuilt.
	* sid/component/cache/Makefile.in: Rebuilt.
	* sid/component/cgen-cpu/Makefile.in: Rebuilt.
	* sid/component/cgen-cpu/aclocal.m4: Rebuilt.
	* sid/component/cgen-cpu/compCGEN.cxx: Adjust.
	* sid/component/cgen-cpu/configure: Rebuilt.
	* sid/component/cgen-cpu/configure.in: Rebult.
	* sid/component/cgen-cpu/mt/Makefile.am: Adjust.
	* sid/component/cgen-cpu/mt/Makefile.in: Rebuilt.
	* sid/component/cgen-cpu/mt/hw-cpu-mt.txt: Adjust.
	* sid/component/cgen-cpu/mt/mt-cpu.h: Rebuilt.
	* sid/component/cgen-cpu/mt/mt-decode.cxx: Rebuilt.
	* sid/component/cgen-cpu/mt/mt-decode.h: Rebuilt.
	* sid/component/cgen-cpu/mt/mt-defs.h: Rebuilt.
	* sid/component/cgen-cpu/mt/mt-desc.h: Rebuilt.
	* sid/component/cgen-cpu/mt/mt-sem.cxx: Rebuilt.
	* sid/component/cgen-cpu/mt/mt-write.cxx: Rebuilt.
	* sid/component/cgen-cpu/mt/mt.cxx: Adjust.
	* sid/component/cgen-cpu/mt/mt.h: Adjust.
	* sid/component/consoles/Makefile.in: Rebuilt.
	* sid/component/families/aclocal.m4: Rebuilt.
	* sid/component/families/configure: Rebuilt.
	* sid/component/gdb/Makefile.in: Rebuilt.
	* sid/component/gloss/Makefile.in: Rebuilt.
	* sid/component/glue/Makefile.in: Rebuilt.
	* sid/component/ide/Makefile.in: Rebuilt.
	* sid/component/interrupt/Makefile.in: Rebuilt.
	* sid/component/lcd/Makefile.in: Rebuilt.
	* sid/component/lcd/testsuite/Makefile.in: Rebuilt.
	* sid/component/loader/Makefile.am: Rebuilt.
	* sid/component/loader/Makefile.in: Rebuilt.
	* sid/component/mapper/Makefile.in: Rebuilt.
	* sid/component/mapper/testsuite/Makefile.in: Rebuilt.
	* sid/component/memory/Makefile.in: Rebuilt.
	* sid/component/mmu/Makefile.in: Rebuilt.
	* sid/component/parport/Makefile.in: Rebuilt.
	* sid/component/profiling/Makefile.in: Rebuilt.
	* sid/component/rtc/Makefile.in: Rebuilt.
	* sid/component/sched/Makefile.in: Rebuilt.
	* sid/component/testsuite/Makefile.in: Rebuilt.
	* sid/component/timers/aclocal.m4: Rebuilt.
	* sid/component/timers/configure: Rebuilt.
	* sid/component/uart/Makefile.in: Rebuilt.
	* sid/component/uart/testsuite/Makefile.in: Rebuilt.
	* sid/config/config.sub: Adjust.
	* sid/config/info.tcl.in: Adjust.
	* sid/config/sidtargets.m4: Adjust.
	* sid/doc/Makefile.in: Rebuilt.
	* sid/main/dynamic/Makefile.am: Rebuilt.
	* sid/main/dynamic/Makefile.in: Rebuilt.
	* sid/main/dynamic/aclocal.m4: Rebuilt.
	* sid/main/dynamic/configure: Rebuilt.
@
text
@d175 3
@


1.59
log
@2005-10-28  Dave Brolley  <brolley@@redhat.com>

        Contribute the following changes:
        2003-09-29  Dave Brolley  <brolley@@redhat.com>

        * dis-asm.h (disassemble_info): insn_sets now (void *) to allow for
        more exotic underlying types to be used.
@
text
@d240 1
a240 1
extern int print_insn_ms1               (bfd_vma, disassemble_info *);
@


1.58
log
@Add support for the Z80 processor family
@
text
@d81 1
a81 1
  unsigned long insn_sets;
@


1.57
log
@	* dis-asm.h (print_insn_bfin): Declare.
	* elf/bfin.h: New file.
	* elf/common.h (EM_BLACKFIN): Define.
	* opcode/bfin.h: New file.
@
text
@d211 1
@


1.56
log
@Remove a29k support.
@
text
@d222 1
@


1.55
log
@ChangeLog:
2005-07-14  Jim Blandy  <jimb@@redhat.com>

	* configure.in: Add cases for Renesas m32c.
	* configure: Regenerated.

bfd/ChangeLog:
2005-07-14  Jim Blandy  <jimb@@redhat.com>

	Add support for m32c-*-elf (Renesas m32c and m16c).
	* Makefile.am (ALL_MACHINES): Add cpu-m32c.lo.
	(ALL_MACHINES_CFILES): Add cpu-m32c.c.
	(BFD32_BACKENDS): Add elf32-m32c.lo.
	(BFD32_BACKENDS_CFILES): Add elf32-m32c.c.
	(cpu-m32c.lo, elf32-m32c.lo): New rules, generated by 'make dep-am'.
	* Makefile.in: Regenerated.
	* archures.c (bfd_arch_m32c, bfd_mach_m16c, bfd_mach_m32c): New
	arch and mach codes.
	(bfd_m32c_arch): New arch info object.
	(bfd_archures_list): List bfd_m32c_arch.
	* bfd-in2.h: Regenerated.
	* config.bfd: Add case for the m32c.
	* configure.in: Add case for the m32c.
	* configure: Regenerated.
	* cpu-m32c.c, elf32-m32c.c: New files.
	* libbfd.h: Regenerated.
	* targets.c (bfd_elf32_m32c_vec): Declare.
	(_bfd_target_vector): List bfd_elf32_m32c_vec.

binutils/ChangeLog:
2005-07-14  Jim Blandy  <jimb@@redhat.com>

	* readelf.c: #include "elf/m32c.h"
	(guess_is_rela, dump_relocations, get_machine_name): Add cases for
	EM_M32C.
	* Makefile.am (readelf.o): Update dependencies.
	* Makefile.in: Regenerated.

cpu/ChangeLog:
2005-07-14  Jim Blandy  <jimb@@redhat.com>

	* m32c.cpu, m32c.opc: Machine description for the Renesas M32C.

gas/ChangeLog:
2005-07-14  Jim Blandy  <jimb@@redhat.com>

	Add support for the Renesas M32C.
	* Makefile.am (CPU_TYPES): List m32c.
	(TARGET_CPU_CFILES): List config/tc-m32c.c.
	(TARGET_CPU_HFILES): List config/tc-m32c.h.
	* configure.in: Add case for m32c.
	* configure.tgt: Add cases for m32c and m32c-*-elf.
	* configure: Regenerated.
	* config/tc-m32c.c, config/tc-m32c.h: New files.
	* doc/Makefile.am (CPU_DOCS): Add c-m32c.texi.
	* doc/Makefile.in: Regenerated.
	* doc/all.texi: Set M32C.
	* doc/as.texinfo: Add text for the M32C-specific options and line
	comment characters, and refer to c-m32c.texi.
	* doc/c-m32c.texi: New file.

include/ChangeLog:
2005-07-14  Jim Blandy  <jimb@@redhat.com>

	* dis-asm.h (print_insn_m32c): New declaration.

include/elf/ChangeLog:
2005-07-14  Jim Blandy  <jimb@@redhat.com>

	Add support for Renesas M32C and M16C.
	* common.h (EM_M32C): New machine number.
	* m32c.h: New file.

ld/ChangeLog:
2005-07-14  Jim Blandy  <jimb@@redhat.com>

	Add support for the Renesas M32C and M16C.
	* Makefile.am (ALL_EMULATIONS): Add eelf32m32c.o.
	(eelf32m32c.c): New target.
	* Makefile.in: Regenerated.
	* configure.tgt: Add case for m32c-*-elf.
	* emulparams/elf32m32c.sh: New file.

opcodes/ChangeLog:
2005-07-14  Jim Blandy  <jimb@@redhat.com>

	Add support for the Renesas M32C and M16C.
	* m32c-asm.c, m32c-desc.c, m32c-dis.c, m32c-ibld.c, m32c-opc.c: New.
	* m32c-desc.h, m32c-opc.h: New.
	* Makefile.am (HFILES): List m32c-desc.h and m32c-opc.h.
	(CFILES): List m32c-asm.c, m32c-desc.c, m32c-dis.c, m32c-ibld.c,
	m32c-opc.c.
	(ALL_MACHINES): List m32c-asm.lo, m32c-desc.lo, m32c-dis.lo,
	m32c-ibld.lo, m32c-opc.lo.
	(CLEANFILES): List stamp-m32c.
	(M32C_DEPS): List stamp-m32c, if CGEN_MAINT.
	(CGEN_CPUS): Add m32c.
	(m32c-asm.c, m32c-desc.c, m32c-dis.c, m32c-ibld.c, m32c-opc.c)
	(m32c-desc.h, m32c-opc.h): Depend on M32C_DEPS.
	(m32c_opc_h): New variable.
	(stamp-m32c, m32c-asm.lo, m32c-desc.lo, m32c-dis.lo, m32c-ibld.lo)
	(m32c-opc.lo): New rules.
	* Makefile.in: Regenerated.
	* configure.in: Add case for bfd_m32c_arch.
	* configure: Regenerated.
	* disassemble.c (ARCH_m32c): New.
	[ARCH_m32c]: #include "m32c-desc.h".
	(disassembler) [ARCH_m32c]: Add case for bfd_arch_m32c.
	(disassemble_init_for_target) [ARCH_m32c]: Same.

	* cgen-ops.h, cgen-types.h: New files.
	* Makefile.am (HFILES): List them.
	* Makefile.in: Regenerated.
@
text
@a220 2
extern int print_insn_big_a29k		(bfd_vma, disassemble_info *);
extern int print_insn_little_a29k	(bfd_vma, disassemble_info *);
@


1.54
log
@Kaveh Ghazi's printf format attribute checking patch.
bfd:
	* elf32-xtensa.c (vsprint_msg): Add format attribute.  Fix
	format bugs.
	* vms.h (_bfd_vms_debug): Add format attribute.
	(_bfd_vms_debug, _bfd_hexdump): Fix typos.

binutils:
	* bucomm.h (report): Add format attribute.
	* dlltool.c (inform): Likewise.
	* dllwrap.c (display, inform, warn): Likewise.
	* objdump.c (objdump_sprintf): Likewise.
	* readelf.c (error, warn): Likewise.  Fix format bugs.

gas:
	* config/tc-tic30.c (debug): Add format attribute.  Fix format
	bugs.

include:
	* dis-asm.h (fprintf_ftype): Add format attribute.

opcodes:
	* arc-dis.c, arm-dis.c, cris-dis.c, crx-dis.c, d10v-dis.c,
	d30v-dis.c, fr30-dis.c, h8300-dis.c, h8500-dis.c, i860-dis.c,
	ia64-dis.c, ip2k-dis.c, m10200-dis.c, m10300-dis.c,
	m88k-dis.c, mcore-dis.c, mips-dis.c, ms1-dis.c, or32-dis.c,
	ppc-dis.c, sh64-dis.c, sparc-dis.c, tic4x-dis.c, tic80-dis.c,
	v850-dis.c: Fix format bugs.
	* ia64-gen.c (fail, warn): Add format attribute.
	* or32-opc.c (debug): Likewise.
@
text
@d267 1
@


1.53
log
@opcodes:
	* arm-opc.h: Delete; fold contents into ...
	* arm-dis.c: ... here.  Move includes of internal COFF headers
	next to includes of internal ELF headers.
	(streq, WORD_ADDRESS, BDISP, BDISP23): Delete, unused.
	(struct arm_opcode): Rename struct opcode32.  Make 'assembler' const.
	(struct thumb_opcode): Rename struct opcode16.  Make 'assembler' const.
	(arm_conditional, arm_fp_const, arm_shift, arm_regname, regnames)
	(iwmmxt_wwnames, iwmmxt_wwssnames):
	Make const.
	(regnames): Remove iWMMXt coprocessor register sets.
	(iwmmxt_regnames, iwmmxt_cregnames): New statics.
	(get_arm_regnames): Adjust fourth argument to match above changes.
	(set_iwmmxt_regnames): Delete.
	(print_insn_arm): Constify 'c'.  Use ISO syntax for function
	pointer calls.  Expand sole use of BDISP.  Use iwmmxt_regnames
	and iwmmxt_cregnames, not set_iwmmxt_regnames.
	(print_insn_thumb16, print_insn_thumb32): Constify 'c'.  Use
	ISO syntax for function pointer calls.
include:
	* dis-asm.h (get_arm_regnames): Update prototype.
@
text
@d38 1
a38 1
typedef int (*fprintf_ftype) (void *, const char*, ...);
@


1.52
log
@	* dis-asm.h: Externalize print_insn_ms1.
@
text
@d277 1
a277 1
extern int get_arm_regnames (int, const char **, const char **, const char ***);
@


1.51
log
@Update the address and phone number of the FSF organization
@
text
@d240 1
@


1.50
log
@update copyright dates
@
text
@d18 2
a19 2
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.
@


1.49
log
@binutils/:
	* configure.in: Don't define SKIP_ZEROES.
	* configure: Regenerate.
	* objdump.c (disassemble_data): Set skip_zeroes and
	skip_zeroes_at_end in disasm_info to defaults.
	(DEFAULT_SKIP_ZEROES): Rename from SKIP_ZEROES and always define.
	(DEFAULT_SKIP_ZEROES_AT_END): Rename from SKIP_ZEROES_AT_END and
	always define.
	(disassemble_bytes): Use skip_zeroes and skip_zeroes_at_end from
	objdump_disasm_info.

include/:
	* dis-asm.h (struct disassemble_info): Add skip_zeroes and
	skip_zeroes_at_end.

opcodes/:
	* disassemble.c (disassemble_init_for_target) <case
	bfd_arch_ia64>: Set skip_zeroes to 16.
	<case bfd_arch_tic4x>: Set skip_zeroes to 32.
@
text
@d3 2
a4 1
   Copyright 2001, 2002, 2003, 2004 Free Software Foundation, Inc.
@


1.48
log
@Add support fpr MAXQ processor
@
text
@d162 12
@


1.47
log
@Add new port: crx-elf
@
text
@d3 1
a3 1
   Copyright 2001, 2002, 2003 Free Software Foundation, Inc.
d221 2
@


1.46
log
@Add new field to disassemble_info structure: symbol_is_valid() and use it to
skip displaying arm elf mapping symbols in disassembly output.
@
text
@d227 1
@


1.46.8.1
log
@Merge mainline to intercu branch - 2004-09-15
@
text
@a226 1
extern int print_insn_crx               (bfd_vma, disassemble_info *);
@


1.45
log
@Index: opcodes/ChangeLog
2003-09-03  Andrew Cagney  <cagney@@redhat.com>

	* dis-init.c (init_disassemble_info): New file and function.
	* Makefile.am (CFILES): Add "dis-init.c".
	(libopcodes_la_SOURCES): Add "dis-init.c".
	(dis-init.lo): Specify dependencies.
	* Makefile.in: Regenerate.

Index: include/ChangeLog
2003-08-27  Andrew Cagney  <cagney@@redhat.com>

	* dis-asm.h (init_disassemble_info): Declare.
	(INIT_DISASSEMBLE_INFO): Redefine as a call to
	init_disassemble_info.
	(INIT_DISASSEMBLE_INFO_NO_ARCH): Ditto.

Index: binutils/ChangeLog
2003-09-03  Andrew Cagney  <cagney@@redhat.com>

	* objdump.c: Refer to init_disassemble_info in comments.
	(disassemble_data): Replace INIT_DISASSEMBLE_INFO with
	init_disassemble_info.
@
text
@d133 6
d150 1
a150 1
  /* the next two variables control the way objdump displays the raw data */
d260 2
a261 2
extern int get_arm_regnames
  (int, const char **, const char **, const char ***);
d266 4
d297 4
@


1.44
log
@Convert to C90.
@
text
@d287 6
a292 2
/* Macro to initialize a disassemble_info struct.  This should be called
   by all applications creating such a struct.  */
d294 3
a296 7
  (INFO).flavour = bfd_target_unknown_flavour, \
  (INFO).arch = bfd_arch_unknown, \
  (INFO).mach = 0, \
  (INFO).insn_sets = 0, \
  (INFO).endian = BFD_ENDIAN_UNKNOWN, \
  (INFO).octets_per_byte = 1, \
  INIT_DISASSEMBLE_INFO_NO_ARCH(INFO, STREAM, FPRINTF_FUNC)
a297 25
/* Call this macro to initialize only the internal variables for the
   disassembler.  Architecture dependent things such as byte order, or machine
   variant are not touched by this macro.  This makes things much easier for
   GDB which must initialize these things separately.  */

#define INIT_DISASSEMBLE_INFO_NO_ARCH(INFO, STREAM, FPRINTF_FUNC) \
  (INFO).fprintf_func = (fprintf_ftype)(FPRINTF_FUNC), \
  (INFO).stream = (STREAM), \
  (INFO).section = NULL, \
  (INFO).symbols = NULL, \
  (INFO).num_symbols = 0, \
  (INFO).private_data = NULL, \
  (INFO).buffer = NULL, \
  (INFO).buffer_vma = 0, \
  (INFO).buffer_length = 0, \
  (INFO).read_memory_func = buffer_read_memory, \
  (INFO).memory_error_func = perror_memory, \
  (INFO).print_address_func = generic_print_address, \
  (INFO).symbol_at_address_func = generic_symbol_at_address, \
  (INFO).flags = 0, \
  (INFO).bytes_per_line = 0, \
  (INFO).bytes_per_chunk = 0, \
  (INFO).display_endian = BFD_ENDIAN_UNKNOWN, \
  (INFO).disassembler_options = NULL, \
  (INFO).insn_info_valid = 0
@


1.43
log
@Add Xtensa port
@
text
@d3 1
a3 1
   Copyright 2001, 2002 Free Software Foundation, Inc.
d37 1
a37 1
typedef int (*fprintf_ftype) PARAMS((PTR, const char*, ...));
d62 2
a63 2
  PTR stream;
  PTR application_data;
d101 1
a101 1
  PTR private_data;
d109 2
a110 2
    PARAMS ((bfd_vma memaddr, bfd_byte *myaddr, unsigned int length,
	     struct disassemble_info *info));
d117 1
a117 1
    PARAMS ((int status, bfd_vma memaddr, struct disassemble_info *info));
d121 1
a121 1
    PARAMS ((bfd_vma addr, struct disassemble_info *info));
d131 1
a131 1
    PARAMS ((bfd_vma addr, struct disassemble_info * info));
d180 1
a180 2
typedef int (*disassembler_ftype)
     PARAMS((bfd_vma, disassemble_info *));
d182 74
a255 73
extern int print_insn_big_mips		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_little_mips	PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_i386		PARAMS ((bfd_vma, disassemble_info *));
extern int print_insn_i386_att		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_i386_intel	PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_ia64		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_i370		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_m68hc11		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_m68hc12		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_m68k		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_z8001		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_z8002		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_h8300		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_h8300h		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_h8300s		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_h8500		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_alpha		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_big_arm		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_little_arm	PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_sparc		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_big_a29k		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_little_a29k	PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_avr		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_d10v		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_d30v		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_dlx 		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_fr30		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_hppa		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_i860		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_i960		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_ip2k		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_m32r		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_m88k		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_mcore		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_mmix		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_mn10200		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_mn10300		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_msp430		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_ns32k		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_openrisc		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_big_or32          PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_little_or32       PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_pdp11		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_pj		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_big_powerpc	PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_little_powerpc	PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_rs6000		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_s390              PARAMS ((bfd_vma, disassemble_info*)); 
extern int print_insn_sh		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_tic30		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_tic4x		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_tic54x		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_tic80		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_v850		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_vax		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_w65		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_xstormy16		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_xtensa		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_sh64		PARAMS ((bfd_vma, disassemble_info *));
extern int print_insn_sh64x_media	PARAMS ((bfd_vma, disassemble_info *));
extern int print_insn_frv		PARAMS ((bfd_vma, disassemble_info *));
extern int print_insn_iq2000            PARAMS ((bfd_vma, disassemble_info *));

extern disassembler_ftype arc_get_disassembler PARAMS ((void *));
extern disassembler_ftype cris_get_disassembler PARAMS ((bfd *));

extern void print_mips_disassembler_options PARAMS ((FILE *));
extern void print_ppc_disassembler_options PARAMS ((FILE *));
extern void print_arm_disassembler_options PARAMS ((FILE *));
extern void parse_arm_disassembler_option  PARAMS ((char *));
extern int  get_arm_regname_num_options    PARAMS ((void));
extern int  set_arm_regname_option         PARAMS ((int));
extern int  get_arm_regnames               PARAMS ((int, const char **, const char **, const char ***));
d258 1
a258 1
extern disassembler_ftype disassembler	PARAMS ((bfd *));
d261 1
a261 1
extern void disassembler_usage          PARAMS ((FILE *));
d270 1
a270 1
  PARAMS ((bfd_vma, bfd_byte *, unsigned int, struct disassemble_info *));
d274 1
a274 1
extern void perror_memory PARAMS ((int, bfd_vma, struct disassemble_info *));
d281 1
a281 1
  PARAMS ((bfd_vma, struct disassemble_info *));
d285 1
a285 1
  PARAMS ((bfd_vma, struct disassemble_info *));
d305 1
a305 1
  (INFO).stream = (PTR)(STREAM), \
@


1.42
log
@	* dis-asm.h (print_insn_iq2000): Declare.
	* common.h (EM_IQ2000): Define.
	* iq2000.h: New file.
@
text
@d240 1
@


1.41
log
@Add support for msp430.
@
text
@d243 1
@


1.40
log
@[ binutils/ChangeLog ]
2002-12-27  Chris Demetriou  <cgd@@broadcom.com>

        * doc/binutils.texi (objdump): Document MIPS -M options.

[ gas/testsuite/ChangeLog ]
2002-12-27  Chris Demetriou  <cgd@@broadcom.com>

        * gas/mips/cp0-names-mips32.d: New file.
        * gas/mips/cp0-names-mips64.d: New file.
        * gas/mips/cp0-names-numeric.d: New file.
        * gas/mips/cp0-names-sb1.d: New file.
        * gas/mips/cp0-names.s: New file.
        * gas/mips/fpr-names-32.d: New file.
        * gas/mips/fpr-names-64.d: New file.
        * gas/mips/fpr-names-n32.d: New file.
        * gas/mips/fpr-names-numeric.d: New file.
        * gas/mips/fpr-names.s: New file.
        * gas/mips/gpr-names-32.d: New file.
        * gas/mips/gpr-names-64.d: New file.
        * gas/mips/gpr-names-n32.d: New file.
        * gas/mips/gpr-names-numeric.d: New file.
        * gas/mips/gpr-names.s: New file.
        * gas/mips/mips.exp: Run new tests.

[ include/ChangeLog ]
2002-12-27  Chris Demetriou  <cgd@@broadcom.com>

        * dis-asm.h (print_mips_disassembler_options): Prototype.

[ include/opcode/ChangeLog ]
2002-12-19  Chris Demetriou  <cgd@@broadcom.com>

        * mips.h (OP_OP_COP0, OP_OP_COP1, OP_OP_COP2, OP_OP_COP3)
        (OP_OP_LWC1, OP_OP_LWC2, OP_OP_LWC3, OP_OP_LDC1, OP_OP_LDC2)
        (OP_OP_LDC3, OP_OP_SWC1, OP_OP_SWC2, OP_OP_SWC3, OP_OP_SDC1)
        (OP_OP_SDC2, OP_OP_SDC3): Define.

[ opcodes/ChangeLog ]
2002-12-27  Chris Demetriou  <cgd@@broadcom.com>

        * disassemble.c (disassembler_usage): Add invocation of
        print_mips_disassembler_options.
        * mips-dis.c (print_mips_disassembler_options)
        (set_default_mips_dis_options, parse_mips_dis_option)
        (parse_mips_dis_options, choose_abi_by_name, choose_arch_by_name)
        (choose_arch_by_number): New functions.
        (mips_abi_choice, mips_arch_choice): New structures.
        (mips32_reg_names, mips64_reg_names, reg_names): Remove.
        (mips_gpr_names_numeric, mips_gpr_names_oldabi)
        (mips_gpr_names_newabi, mips_fpr_names_numeric)
        (mips_fpr_names_32, mips_fpr_names_n32, mips_fpr_names_64)
        (mips_cp0_names_numeric, mips_cp0_names_mips3264)
        (mips_cp0_names_sb1, mips_abi_choices, mips_arch_choices)
        (mips_processor, mips_isa, mips_gpr_names, mips_fpr_names)
        (mips_cp0_names): New variables.
        (print_insn_args): Use new variables to print GPR, FPR, and CP0
        register names.
        (mips_isa_type): Remove.
        (print_insn_mips): Remove ISA and CPU setup since it is now done...
        (_print_insn_mips): Here.  Remove register setup code, and
        call set_default_mips_dis_options and parse_mips_dis_options
        instead.
        (print_mips16_insn_arg): Use mips_gpr_names instead of mips32_names.
@
text
@d220 1
@


1.39
log
@Remove (errant) trailing semicolon (;) from the extern "C" { } declaration.
@
text
@d246 1
@


1.39.4.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@d3 1
a3 1
   Copyright 2001, 2002, 2003 Free Software Foundation, Inc.
d37 1
a37 1
typedef int (*fprintf_ftype) (void *, const char*, ...);
d62 2
a63 2
  void *stream;
  void *application_data;
d101 1
a101 1
  void *private_data;
d109 2
a110 2
    (bfd_vma memaddr, bfd_byte *myaddr, unsigned int length,
     struct disassemble_info *info);
d117 1
a117 1
    (int status, bfd_vma memaddr, struct disassemble_info *info);
d121 1
a121 1
    (bfd_vma addr, struct disassemble_info *info);
d131 1
a131 1
    (bfd_vma addr, struct disassemble_info * info);
a132 6
  /* Function called to check if a SYMBOL is can be displayed to the user.
     This is used by some ports that want to hide special symbols when
     displaying debugging outout.  */
  bfd_boolean (* symbol_is_valid)
    (asymbol *, struct disassemble_info * info);
    
d144 1
a144 1
  /* The next two variables control the way objdump displays the raw data.  */
d180 2
a181 1
typedef int (*disassembler_ftype) (bfd_vma, disassemble_info *);
d183 69
a251 74
extern int print_insn_big_mips		(bfd_vma, disassemble_info *);
extern int print_insn_little_mips	(bfd_vma, disassemble_info *);
extern int print_insn_i386		(bfd_vma, disassemble_info *);
extern int print_insn_i386_att		(bfd_vma, disassemble_info *);
extern int print_insn_i386_intel	(bfd_vma, disassemble_info *);
extern int print_insn_ia64		(bfd_vma, disassemble_info *);
extern int print_insn_i370		(bfd_vma, disassemble_info *);
extern int print_insn_m68hc11		(bfd_vma, disassemble_info *);
extern int print_insn_m68hc12		(bfd_vma, disassemble_info *);
extern int print_insn_m68k		(bfd_vma, disassemble_info *);
extern int print_insn_z8001		(bfd_vma, disassemble_info *);
extern int print_insn_z8002		(bfd_vma, disassemble_info *);
extern int print_insn_h8300		(bfd_vma, disassemble_info *);
extern int print_insn_h8300h		(bfd_vma, disassemble_info *);
extern int print_insn_h8300s		(bfd_vma, disassemble_info *);
extern int print_insn_h8500		(bfd_vma, disassemble_info *);
extern int print_insn_alpha		(bfd_vma, disassemble_info *);
extern int print_insn_big_arm		(bfd_vma, disassemble_info *);
extern int print_insn_little_arm	(bfd_vma, disassemble_info *);
extern int print_insn_sparc		(bfd_vma, disassemble_info *);
extern int print_insn_big_a29k		(bfd_vma, disassemble_info *);
extern int print_insn_little_a29k	(bfd_vma, disassemble_info *);
extern int print_insn_avr		(bfd_vma, disassemble_info *);
extern int print_insn_d10v		(bfd_vma, disassemble_info *);
extern int print_insn_d30v		(bfd_vma, disassemble_info *);
extern int print_insn_dlx 		(bfd_vma, disassemble_info *);
extern int print_insn_fr30		(bfd_vma, disassemble_info *);
extern int print_insn_hppa		(bfd_vma, disassemble_info *);
extern int print_insn_i860		(bfd_vma, disassemble_info *);
extern int print_insn_i960		(bfd_vma, disassemble_info *);
extern int print_insn_ip2k		(bfd_vma, disassemble_info *);
extern int print_insn_m32r		(bfd_vma, disassemble_info *);
extern int print_insn_m88k		(bfd_vma, disassemble_info *);
extern int print_insn_mcore		(bfd_vma, disassemble_info *);
extern int print_insn_mmix		(bfd_vma, disassemble_info *);
extern int print_insn_mn10200		(bfd_vma, disassemble_info *);
extern int print_insn_mn10300		(bfd_vma, disassemble_info *);
extern int print_insn_msp430		(bfd_vma, disassemble_info *);
extern int print_insn_ns32k		(bfd_vma, disassemble_info *);
extern int print_insn_openrisc		(bfd_vma, disassemble_info *);
extern int print_insn_big_or32		(bfd_vma, disassemble_info *);
extern int print_insn_little_or32	(bfd_vma, disassemble_info *);
extern int print_insn_pdp11		(bfd_vma, disassemble_info *);
extern int print_insn_pj		(bfd_vma, disassemble_info *);
extern int print_insn_big_powerpc	(bfd_vma, disassemble_info *);
extern int print_insn_little_powerpc	(bfd_vma, disassemble_info *);
extern int print_insn_rs6000		(bfd_vma, disassemble_info *);
extern int print_insn_s390		(bfd_vma, disassemble_info *); 
extern int print_insn_sh		(bfd_vma, disassemble_info *);
extern int print_insn_tic30		(bfd_vma, disassemble_info *);
extern int print_insn_tic4x		(bfd_vma, disassemble_info *);
extern int print_insn_tic54x		(bfd_vma, disassemble_info *);
extern int print_insn_tic80		(bfd_vma, disassemble_info *);
extern int print_insn_v850		(bfd_vma, disassemble_info *);
extern int print_insn_vax		(bfd_vma, disassemble_info *);
extern int print_insn_w65		(bfd_vma, disassemble_info *);
extern int print_insn_xstormy16		(bfd_vma, disassemble_info *);
extern int print_insn_xtensa		(bfd_vma, disassemble_info *);
extern int print_insn_sh64		(bfd_vma, disassemble_info *);
extern int print_insn_sh64x_media	(bfd_vma, disassemble_info *);
extern int print_insn_frv		(bfd_vma, disassemble_info *);
extern int print_insn_iq2000		(bfd_vma, disassemble_info *);

extern disassembler_ftype arc_get_disassembler (void *);
extern disassembler_ftype cris_get_disassembler (bfd *);

extern void print_mips_disassembler_options (FILE *);
extern void print_ppc_disassembler_options (FILE *);
extern void print_arm_disassembler_options (FILE *);
extern void parse_arm_disassembler_option (char *);
extern int get_arm_regname_num_options (void);
extern int set_arm_regname_option (int);
extern int get_arm_regnames (int, const char **, const char **, const char ***);
extern bfd_boolean arm_symbol_is_valid (asymbol *, struct disassemble_info *);
d254 1
a254 5
extern disassembler_ftype disassembler (bfd *);

/* Amend the disassemble_info structure as necessary for the target architecture.
   Should only be called after initialising the info->arch field.  */
extern void disassemble_init_for_target (struct disassemble_info * info);
d257 1
a257 1
extern void disassembler_usage (FILE *);
d266 1
a266 1
  (bfd_vma, bfd_byte *, unsigned int, struct disassemble_info *);
d270 1
a270 1
extern void perror_memory (int, bfd_vma, struct disassemble_info *);
d277 1
a277 1
  (bfd_vma, struct disassemble_info *);
d281 1
a281 1
  (bfd_vma, struct disassemble_info *);
d283 15
a297 8
/* Also always true.  */  
extern bfd_boolean generic_symbol_is_valid
  (asymbol *, struct disassemble_info *);
  
/* Method to initialize a disassemble_info struct.  This should be
   called by all applications creating such a struct.  */
extern void init_disassemble_info (struct disassemble_info *info, void *stream,
				   fprintf_ftype fprintf_func);
a298 3
/* For compatibility with existing code.  */
#define INIT_DISASSEMBLE_INFO(INFO, STREAM, FPRINTF_FUNC) \
  init_disassemble_info (&(INFO), (STREAM), (fprintf_ftype) (FPRINTF_FUNC))
d300 19
a318 2
  init_disassemble_info (&(INFO), (STREAM), (fprintf_ftype) (FPRINTF_FUNC))

@


1.39.2.1
log
@2003-02-07  David Carlton  <carlton@@math.stanford.edu>

	* Merge with mainline; tag is carlton_dictionary-20030207-merge.
@
text
@a219 1
extern int print_insn_msp430		PARAMS ((bfd_vma, disassemble_info*));
a241 1
extern int print_insn_iq2000            PARAMS ((bfd_vma, disassemble_info *));
a245 1
extern void print_mips_disassembler_options PARAMS ((FILE *));
@


1.39.2.2
log
@2003-04-16  David Carlton  <carlton@@bactrian.org>

	* Merge with mainline; tag is carlton_dictionary-20030416-merge.
@
text
@a239 1
extern int print_insn_xtensa		PARAMS ((bfd_vma, disassemble_info*));
@


1.39.2.3
log
@2003-09-17  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20030917-merge.
@
text
@d3 1
a3 1
   Copyright 2001, 2002, 2003 Free Software Foundation, Inc.
d37 1
a37 1
typedef int (*fprintf_ftype) (void *, const char*, ...);
d62 2
a63 2
  void *stream;
  void *application_data;
d101 1
a101 1
  void *private_data;
d109 2
a110 2
    (bfd_vma memaddr, bfd_byte *myaddr, unsigned int length,
     struct disassemble_info *info);
d117 1
a117 1
    (int status, bfd_vma memaddr, struct disassemble_info *info);
d121 1
a121 1
    (bfd_vma addr, struct disassemble_info *info);
d131 1
a131 1
    (bfd_vma addr, struct disassemble_info * info);
d180 2
a181 1
typedef int (*disassembler_ftype) (bfd_vma, disassemble_info *);
d183 73
a255 74
extern int print_insn_big_mips		(bfd_vma, disassemble_info *);
extern int print_insn_little_mips	(bfd_vma, disassemble_info *);
extern int print_insn_i386		(bfd_vma, disassemble_info *);
extern int print_insn_i386_att		(bfd_vma, disassemble_info *);
extern int print_insn_i386_intel	(bfd_vma, disassemble_info *);
extern int print_insn_ia64		(bfd_vma, disassemble_info *);
extern int print_insn_i370		(bfd_vma, disassemble_info *);
extern int print_insn_m68hc11		(bfd_vma, disassemble_info *);
extern int print_insn_m68hc12		(bfd_vma, disassemble_info *);
extern int print_insn_m68k		(bfd_vma, disassemble_info *);
extern int print_insn_z8001		(bfd_vma, disassemble_info *);
extern int print_insn_z8002		(bfd_vma, disassemble_info *);
extern int print_insn_h8300		(bfd_vma, disassemble_info *);
extern int print_insn_h8300h		(bfd_vma, disassemble_info *);
extern int print_insn_h8300s		(bfd_vma, disassemble_info *);
extern int print_insn_h8500		(bfd_vma, disassemble_info *);
extern int print_insn_alpha		(bfd_vma, disassemble_info *);
extern int print_insn_big_arm		(bfd_vma, disassemble_info *);
extern int print_insn_little_arm	(bfd_vma, disassemble_info *);
extern int print_insn_sparc		(bfd_vma, disassemble_info *);
extern int print_insn_big_a29k		(bfd_vma, disassemble_info *);
extern int print_insn_little_a29k	(bfd_vma, disassemble_info *);
extern int print_insn_avr		(bfd_vma, disassemble_info *);
extern int print_insn_d10v		(bfd_vma, disassemble_info *);
extern int print_insn_d30v		(bfd_vma, disassemble_info *);
extern int print_insn_dlx 		(bfd_vma, disassemble_info *);
extern int print_insn_fr30		(bfd_vma, disassemble_info *);
extern int print_insn_hppa		(bfd_vma, disassemble_info *);
extern int print_insn_i860		(bfd_vma, disassemble_info *);
extern int print_insn_i960		(bfd_vma, disassemble_info *);
extern int print_insn_ip2k		(bfd_vma, disassemble_info *);
extern int print_insn_m32r		(bfd_vma, disassemble_info *);
extern int print_insn_m88k		(bfd_vma, disassemble_info *);
extern int print_insn_mcore		(bfd_vma, disassemble_info *);
extern int print_insn_mmix		(bfd_vma, disassemble_info *);
extern int print_insn_mn10200		(bfd_vma, disassemble_info *);
extern int print_insn_mn10300		(bfd_vma, disassemble_info *);
extern int print_insn_msp430		(bfd_vma, disassemble_info *);
extern int print_insn_ns32k		(bfd_vma, disassemble_info *);
extern int print_insn_openrisc		(bfd_vma, disassemble_info *);
extern int print_insn_big_or32		(bfd_vma, disassemble_info *);
extern int print_insn_little_or32	(bfd_vma, disassemble_info *);
extern int print_insn_pdp11		(bfd_vma, disassemble_info *);
extern int print_insn_pj		(bfd_vma, disassemble_info *);
extern int print_insn_big_powerpc	(bfd_vma, disassemble_info *);
extern int print_insn_little_powerpc	(bfd_vma, disassemble_info *);
extern int print_insn_rs6000		(bfd_vma, disassemble_info *);
extern int print_insn_s390		(bfd_vma, disassemble_info *); 
extern int print_insn_sh		(bfd_vma, disassemble_info *);
extern int print_insn_tic30		(bfd_vma, disassemble_info *);
extern int print_insn_tic4x		(bfd_vma, disassemble_info *);
extern int print_insn_tic54x		(bfd_vma, disassemble_info *);
extern int print_insn_tic80		(bfd_vma, disassemble_info *);
extern int print_insn_v850		(bfd_vma, disassemble_info *);
extern int print_insn_vax		(bfd_vma, disassemble_info *);
extern int print_insn_w65		(bfd_vma, disassemble_info *);
extern int print_insn_xstormy16		(bfd_vma, disassemble_info *);
extern int print_insn_xtensa		(bfd_vma, disassemble_info *);
extern int print_insn_sh64		(bfd_vma, disassemble_info *);
extern int print_insn_sh64x_media	(bfd_vma, disassemble_info *);
extern int print_insn_frv		(bfd_vma, disassemble_info *);
extern int print_insn_iq2000		(bfd_vma, disassemble_info *);

extern disassembler_ftype arc_get_disassembler (void *);
extern disassembler_ftype cris_get_disassembler (bfd *);

extern void print_mips_disassembler_options (FILE *);
extern void print_ppc_disassembler_options (FILE *);
extern void print_arm_disassembler_options (FILE *);
extern void parse_arm_disassembler_option (char *);
extern int get_arm_regname_num_options (void);
extern int set_arm_regname_option (int);
extern int get_arm_regnames
  (int, const char **, const char **, const char ***);
d258 1
a258 1
extern disassembler_ftype disassembler (bfd *);
d261 1
a261 1
extern void disassembler_usage (FILE *);
d270 1
a270 1
  (bfd_vma, bfd_byte *, unsigned int, struct disassemble_info *);
d274 1
a274 1
extern void perror_memory (int, bfd_vma, struct disassemble_info *);
d281 1
a281 1
  (bfd_vma, struct disassemble_info *);
d285 1
a285 1
  (bfd_vma, struct disassemble_info *);
d287 15
a301 4
/* Method to initialize a disassemble_info struct.  This should be
   called by all applications creating such a struct.  */
extern void init_disassemble_info (struct disassemble_info *info, void *stream,
				   fprintf_ftype fprintf_func);
a302 3
/* For compatibility with existing code.  */
#define INIT_DISASSEMBLE_INFO(INFO, STREAM, FPRINTF_FUNC) \
  init_disassemble_info (&(INFO), (STREAM), (fprintf_ftype) (FPRINTF_FUNC))
d304 19
a322 2
  init_disassemble_info (&(INFO), (STREAM), (fprintf_ftype) (FPRINTF_FUNC))

@


1.39.2.4
log
@2003-12-15  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20031215-merge.
	* cp-support.c (class_name_from_physname): Add DMGL_PARAMS to call
	to cplus_demangle.
	(method_name_from_physname): Ditto.
@
text
@a132 6
  /* Function called to check if a SYMBOL is can be displayed to the user.
     This is used by some ports that want to hide special symbols when
     displaying debugging outout.  */
  bfd_boolean (* symbol_is_valid)
    (asymbol *, struct disassemble_info * info);
    
d144 1
a144 1
  /* The next two variables control the way objdump displays the raw data.  */
d254 2
a255 2
extern int get_arm_regnames (int, const char **, const char **, const char ***);
extern bfd_boolean arm_symbol_is_valid (asymbol *, struct disassemble_info *);
a259 4
/* Amend the disassemble_info structure as necessary for the target architecture.
   Should only be called after initialising the info->arch field.  */
extern void disassemble_init_for_target (struct disassemble_info * info);

a286 4
/* Also always true.  */  
extern bfd_boolean generic_symbol_is_valid
  (asymbol *, struct disassemble_info *);
  
@


1.38
log
@Have objdump's --help switch document PPC -M options.
@
text
@d321 1
a321 1
};
@


1.37
log
@Add TMS320C4x support
@
text
@d246 1
@


1.36
log
@Add IP2k GAS and OPCODES support.
@
text
@d232 1
@


1.35
log
@2002-06-18  Dave Brolley  <brolley@@redhat.com>

	From Catherine Moore:
	* dis-asm.h (print_insn_frv): New prototype.
@
text
@d213 1
@


1.35.2.1
log
@2002-09-23  Daniel Jacobowitz  <drow@@mvista.com>

	Merge from mainline:
	2002-09-19  Jakub Jelinek  <jakub@@redhat.com>
	* elf/i386.h (R_386_TLS_TPOFF, R_386_TLS_IE, R_386_TLS_GOTIE):
	Define.

	2002-09-19  Nathan Tallent  <eraxxon@@alumni.rice.edu>
	* dis-asm.h: Remove (errant) trailing semicolon (;) from the
	extern "C" { } declaration.

	2002-09-04  Nick Clifton  <nickc@@redhat.com>
	* dis-asm.h (print_ppc_disassembler_options): Prototype.

	2002-08-06  H.J. Lu <hjl@@gnu.org>
	* bfdlink.h (bfd_link_info): Add allow_undefined_version.
	(bfd_elf_version_expr): Add symver and script.
@
text
@a243 1
extern void print_ppc_disassembler_options PARAMS ((FILE *));
d318 1
a318 1
}
@


1.34
log
@Add DLX target
@
text
@d239 1
@


1.34.2.1
log
@Merge with mainline, kseitz_interps-20020619-merge.
@
text
@a238 1
extern int print_insn_frv		PARAMS ((bfd_vma, disassemble_info *));
@


1.34.2.2
log
@Merge w/trunk (kseitz_interps-20020722-merge).
@
text
@a212 1
extern int print_insn_ip2k		PARAMS ((bfd_vma, disassemble_info*));
@


1.34.2.3
log
@Merge with kseitz_interps-20020829-merge tag from trunk.
@
text
@a231 1
extern int print_insn_tic4x		PARAMS ((bfd_vma, disassemble_info*));
@


1.34.2.4
log
@Merge with kseitz_interps-20020930-merge.
@
text
@a245 1
extern void print_ppc_disassembler_options PARAMS ((FILE *));
d320 1
a320 1
}
@


1.33
log
@print_insn_sh cleanup:

include:
	* dis-asm.h (print_insn_shl, print_insn_sh64l): Remove prototype.
gdb:
	* sh-tdep.c (gdb_print_insn_sh64): Delete.
	(gdb_print_insn_sh): Just set info->endian and use print_insn_sh.
	(sh_gdbarch_init): Always use gdb_print_insn_sh.
opcodes:
	* disassemble.c (disassembler): Just use print_insn_sh for bfd_arch_sh.
	* sh-dis.c (LITTLE_BIT): Delete.
	(print_insn_sh, print_insn_shl): Deleted.
	(print_insn_shx): Renamed to
	(print_insn_sh).  No longer static.  Handle SHmedia instructions.
	Use info->endian to determine endianness.
	* sh64-dis.c (print_insn_sh64, print_insn_sh64l): Delete.
	(print_insn_sh64x): No longer static.  Renamed to
	(print_insn_sh64).  Removed pfun_compact and endian arguments.
	If we got an uneven address to indicate SHmedia, adjust it.
	Return -2 for SHcompact instructions.
sim/sh64:
	* sim-if.c (sh64_disassemble_insn): Use  print_insn_sh instead of
	print_insn_shl.
@
text
@d208 1
@


1.32
log
@Contribute sh64-elf.
2000-11-25  Hans-Peter Nilsson  <hpn@@cygnus.com>
* dis-asm.h (print_insn_sh64): New prototype.
(print_insn_sh64l): New prototype.
(print_insn_sh64x_media): New prototype.
@
text
@a228 1
extern int print_insn_shl		PARAMS ((bfd_vma, disassemble_info*));
a236 1
extern int print_insn_sh64l		PARAMS ((bfd_vma, disassemble_info *));
@


1.32.8.1
log
@merge from trunk
@
text
@a207 1
extern int print_insn_dlx 		PARAMS ((bfd_vma, disassemble_info*));
d229 1
d238 1
@


1.32.8.2
log
@merge from trunk
@
text
@a238 1
extern int print_insn_frv		PARAMS ((bfd_vma, disassemble_info *));
@


1.31
log
@* opcodes disassembler extension

[includes]
2002-02-04  Frank Ch. Eigler  <fche@@redhat.com>

	* dis-asm.h (disassemble_info): New field `insn_sets'.
	(INIT_DISASSEMBLE_INFO): Clear it.

[opcodes]
2002-02-04  Frank Ch. Eigler  <fche@@redhat.com>

	* cgen-dis.in (print_insn_@@arch@@): Support disassemble_info.insn_sets.
@
text
@d237 3
@


1.30
log
@Add support for OpenRISC 32-bit embedded processor
@
text
@d76 5
d283 1
@


1.29
log
@Initialise the disassembler_options field (to NULL).
@
text
@d3 1
a3 1
   Copyright 2001 Free Software Foundation, Inc.
d215 2
@


1.28
log
@Index: bfd/ChangeLog
2001-12-07  Geoffrey Keating  <geoffk@@redhat.com>
	    Richard Henderson  <rth@@redhat.com>
	    Corinna Vinschen  <vinschen@@redhat.com>

	* Makefile.am: Add support for xstormy16.
	* archures.c: Add support for xstormy16.
	* config.bfd: Add support for xstormy16.
	* configure.in: Add support for xstormy16.
	* reloc.c: Add support for xstormy16.
	* targets.c: Add support for xstormy16.
	* cpu-xstormy16.c: New file.
	* elf32-xstormy16.c: New file.
	* Makefile.in: Regenerated.
	* bfd-in2.h: Regenerated.
	* configure: Regenerated.
	* libbfd.h: Regenerated.

Index: binutils/ChangeLog
2001-12-07  Geoffrey Keating  <geoffk@@redhat.com>

	* readelf.c (guess_is_rela): Add support for stormy16.
	(dump_relocations): Likewise.
	(get_machine_name): Likewise.

Index: gas/ChangeLog
2001-12-07  Geoffrey Keating  <geoffk@@redhat.com>
	    Richard Henderson  <rth@@redhat.com>

	* configure.in: Add support for xstormy16.
	* configure: Regenerated.
	* Makefile.am: Add support for xstormy16.
	* Makefile.in: Regenerated.
	* config/tc-xstormy16.c: New file.
	* config/tc-xstormy16.h: New file.

Index: gas/testsuite/ChangeLog
2001-12-07  Geoffrey Keating  <geoffk@@redhat.com>
	    matthew green  <mrg@@redhat.com>

	* gas/xstormy16/allinsn.d: New file.
	* gas/xstormy16/allinsn.exp: New file.
	* gas/xstormy16/allinsn.s: New file.
	* gas/xstormy16/allinsn.sh: New file.
	* gas/xstormy16/gcc.d: New file.
	* gas/xstormy16/gcc.s: New file.
	* gas/xstormy16/gcc.sh: New file.
	* gas/xstormy16/reloc-1.d: New file.
	* gas/xstormy16/reloc-1.s: New file.
	* gas/xstormy16/reloc-2.d: New file.
	* gas/xstormy16/reloc-2.s: New file.

Index: ld/ChangeLog
2001-12-07  Geoffrey Keating  <geoffk@@redhat.com>
	    Richard Henderson  <rth@@redhat.com>

	* Makefile.am: Add support for xstormy16.
	* configure.tgt: Add support for xstormy16.
	* Makefile.in: Regenerate.
	* emulparams/elf32xstormy16.sh: New file.
	* scripttempl/xstormy16.sc: New file.

Index: opcodes/ChangeLog
2001-12-07  Geoffrey Keating  <geoffk@@redhat.com>

	* Makefile.am: Add support for xstormy16.
	* Makefile.in: Regenerate.
	* configure.in: Add support for xstormy16.
	* configure: Regenerate.
	* disassemble.c: Add support for xstormy16.
	* xstormy16-asm.c: New generated file.
	* xstormy16-desc.c: New generated file.
	* xstormy16-desc.h: New generated file.
	* xstormy16-dis.c: New generated file.
	* xstormy16-ibld.c: New generated file.
	* xstormy16-opc.c: New generated file.
	* xstormy16-opc.h: New generated file.

Index: include/ChangeLog
2001-12-07  Geoffrey Keating  <geoffk@@redhat.com>

	* dis-asm.h (print_insn_xstormy16): Declare.

Index: include/elf/ChangeLog
2001-12-07  Geoffrey Keating  <geoffk@@redhat.com>
	    Richard Henderson  <rth@@redhat.com>

	* common.h (EM_XSTORMY16): Define.
	* xstormy16.h: New file.
@
text
@d303 1
@


1.27
log
@binutils/ChangeLog
	* doc/binutils.texi (objdump): Document x86 -M options.
include/ChangeLog
 	* dis-asm.h (print_insn_i386): Declare.
opcodes/ChangeLog
	* disassemble.c (disassembler): Call print_insn_i386.
	* i386-dis.c (SUFFIX_ALWAYS): Define.
	(struct dis_private): Add orig_sizeflag.
	(print_insn_i386): Make it a wrapper, calling..
	(print_insn): ..The old body of print_insn_i386.  Avoid longjmp
	warning without using volatile by moving orig_sizeflag to priv,
	and removing inbuf.  Parse disassembler_options.
	(print_insn_i386_att, print_insn_i386_intel): Move initialisation
	code to print_insn.
	(putop): Remove #ifdef SUFFIX_ALWAYS.
@
text
@d229 1
@


1.26
log
@Clarify length reference in comment
@
text
@d180 1
@


1.25
log
@Add MMIX support
@
text
@d174 1
a174 1
   target address.  Return number of bytes processed.  */
@


1.24
log
@Add openRISC support in opcodes
@
text
@d148 1
a148 2
     Normally one, but some DSPs have byte sizes of 16 or 32 bits
   */
a193 1
extern disassembler_ftype arc_get_disassembler PARAMS ((void *));
d199 5
a205 4
extern int print_insn_sh		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_shl		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_hppa		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_fr30		PARAMS ((bfd_vma, disassemble_info*));
d209 1
d215 1
d219 3
a221 5
extern int print_insn_w65		PARAMS ((bfd_vma, disassemble_info*));
extern disassembler_ftype cris_get_disassembler PARAMS ((bfd *));
extern int print_insn_d10v		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_d30v		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_v850		PARAMS ((bfd_vma, disassemble_info*));
a222 1
extern int print_insn_vax		PARAMS ((bfd_vma, disassemble_info*));
d225 6
a230 3
extern int print_insn_pj		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_avr		PARAMS ((bfd_vma, disassemble_info*));
extern int print_insn_s390            PARAMS ((bfd_vma, disassemble_info*)); 
@


1.23
log
@Fix typos in ChangeLogs; add coff/external.h; fix copyright dates
@
text
@d213 1
@


1.22
log
@Add PDP-11 support
@
text
@d2 18
@


1.21
log
@Add s390 support
@
text
@d195 1
@


1.20
log
@Updated ARC assembler from arccores.com
@
text
@d209 1
@


1.20.2.1
log
@Update copyright notices.
@
text
@a1 18

   Copyright 2001 Free Software Foundation, Inc.
   
   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.
   
@


1.19
log
@	* dis-asm.h (struct disassemble_info): New member "section".
	(INIT_DISASSEMBLE_INFO_NO_ARCH): Initialize private_data member.
	Initialize section member.
@
text
@d177 1
a177 1
extern disassembler_ftype arc_get_disassembler PARAMS ((int, int));
@


1.18
log
@	* dis-asm.h: Declare cris_get_disassembler, not print_insn_cris.
	Fix typo in comment.
@
text
@d59 5
d264 1
d267 1
@


1.17
log
@

2000-07-22  Jason Eckhardt  <jle@@cygnus.com>

	* include/opcode/i860.h (btne, bte, bla): Changed these opcodes
	to use sbroff ('r') instead of split16 ('s').
	(J, K, L, M): New operand types for 16-bit aligned fields.
	(ld.x, {p}fld.x, fst.x, pst.d): Changed these opcodes to
	use I, J, K, L, M instead of just I.
	(T, U): New operand types for split 16-bit aligned fields.
	(st.x): Changed these opcodes to use S, T, U instead of just S.
	(andh, andnoth, orh, xorh): Deleted 3-register forms as they do not
	exist on the i860.
	(pfgt.sd, pfle.sd): Deleted these as they do not exist on the i860.
	(pfeq.ss, pfeq.dd): New opcodes.
	(st.s): Fixed incorrect mask bits.
	(fmlow): Fixed incorrect mask bits.
	(fzchkl, pfzchkl): Fixed incorrect mask bits.
	(faddz, pfaddz): Fixed incorrect mask bits.
	(form, pform): Fixed incorrect mask bits.
	(pfld.l): Fixed incorrect mask bits.
	(fst.q): Fixed incorrect mask bits.
	(all floating point opcodes): Fixed incorrect mask bits for
	handling of dual bit.

	* include/elf/i860.h: New file.
	(elf_i860_reloc_type): Defined ELF32 i860 relocations.

	* bfd/cpu-i860.c: Added comments.

	* bfd/elf32-i860.c (TARGET_LITTLE_SYM): Defined to
	bfd_elf32_i860_little_vec.
	(TARGET_LITTLE_NAME): Defined to "elf32-i860-little".
	(ELF_MAXPAGESIZE): Changed to 4096.

	* bfd/targets.c (bfd_elf32_i860_little_vec): Declaration of
	new target.
	(bfd_target_vector): Added bfd_elf32_i860_little_vec.

	* bfd/config.bfd (i860-stardent-sysv4*, i860-stardent-elf*): Added
	config for little endian elf32 i860.
	(targ_defvec): Define for the new config above
	as "bfd_elf32_i860_little_vec".
	(targ_selvecs): Define for the new config above
	as "bfd_elf32_i860_vec bfd_elf32_i860_little_vec"

	* bfd/configure.in (bfd_elf32_i860_little_vec): Added recognition
	of new target vec.

	* bfd/configure: Regenerated.

	* opcodes/i860-dis.c: New file.
	(print_insn_i860): New function.
	(print_br_address): New function.
	(sign_extend): New function.
	(BITWISE_OP): New macro.
	(I860_REG_PREFIX): New macro.
	(grnames, frnames, crnames): New structures.

	* opcodes/disassemble.c (ARCH_i860): Define.
	(disassembler): Add check for bfd_arch_i860 to set disassemble
	function to print_insn_i860.

	* include/dis-asm.h (print_insn_i860): Add prototype.

	* opcodes/Makefile.in (CFILES): Added i860-dis.c.
	(ALL_MACHINES): Added i860-dis.lo.
	(i860-dis.lo): New dependences.

	* opcodes/configure.in: New bits for bfd_i860_arch.

	* opcodes/configure: Regenerated.
@
text
@d194 1
a194 1
extern int print_insn_cris		PARAMS ((bfd_vma, disassemble_info*));
d254 1
a254 1
   GDB which must initialize these things seperatly.  */
@


1.16
log
@	* dis-asm.h (print_insn_cris): Declare.
@
text
@d178 1
@


1.15
log
@Applied Stephane Carrez <Stephane.Carrez@@worldnet.fr> patches to add support
for m68hc11 and m68hc12 processors.
@
text
@d193 1
@


1.14
log
@(print_insn_tic54x): Declare.
@
text
@d162 2
@


1.13
log
@IA-64 ELF support.
@
text
@d196 1
@


1.12
log
@ATMEL AVR microcontroller support.
@
text
@d160 1
@


1.11
log
@Add IBM 370 support.
@
text
@d197 1
@


1.10
log
@This lot mainly cleans up `comparison between signed and unsigned' gcc
warnings.  One usused var, and a macro parenthesis fix too.  Also check
input sections are elf when doing gc in elflink.h.
@
text
@d160 1
@


1.9
log
@Add prototypes for ARM register name functions.
@
text
@d81 1
a81 1
    PARAMS ((bfd_vma memaddr, bfd_byte *myaddr, int length,
d108 1
a108 1
  int buffer_length;
d127 1
a127 1
  int octets_per_byte;
d216 1
a216 1
  PARAMS ((bfd_vma, bfd_byte *, int, struct disassemble_info *));
@


1.8
log
@octets vs bytes changes for binutils
@
text
@d199 3
@


1.7
log
@Add prototype for parse_arm_diassembler_option
@
text
@d124 5
d237 1
@


1.6
log
@Add ATPCS support to ARM disassembler.
Document ARM disassembler options.
@
text
@d193 1
@


1.5
log
@Add support for documenting target specific disassembler options
@
text
@d192 1
a192 1
extern int arm_toggle_regnames          PARAMS ((void));
@


1.4
log
@1999-12-15  Doug Evans  <dje@@transmeta.com>

	* dis-asm.h: Enclose in extern "C" ifdef __cplusplus.
@
text
@d197 3
@


1.3
log
@1999-09-04  Steve Chamberlain  <sac@@pobox.com>

	* dis-asm.h (print_insn_pj): Declare.
@
text
@d12 4
d252 4
@


1.2
log
@Add -M command line switch to objdump - text of switch is passed on to disassembler
Add support for register name set selection ot ARM disassembler.
@
text
@d186 1
@


1.1
log
@Initial revision
@
text
@d136 3
d186 2
@


1.1.1.1
log
@19990502 sourceware import
@
text
@@

