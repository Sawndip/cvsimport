head	1.24;
access;
symbols
	sid-snapshot-20180601:1.24
	sid-snapshot-20180501:1.24
	sid-snapshot-20180401:1.24
	sid-snapshot-20180301:1.24
	sid-snapshot-20180201:1.24
	sid-snapshot-20180101:1.24
	sid-snapshot-20171201:1.24
	sid-snapshot-20171101:1.24
	sid-snapshot-20171001:1.24
	sid-snapshot-20170901:1.24
	sid-snapshot-20170801:1.24
	sid-snapshot-20170701:1.24
	sid-snapshot-20170601:1.24
	sid-snapshot-20170501:1.24
	sid-snapshot-20170401:1.24
	sid-snapshot-20170301:1.24
	sid-snapshot-20170201:1.24
	sid-snapshot-20170101:1.24
	sid-snapshot-20161201:1.24
	sid-snapshot-20161101:1.24
	sid-snapshot-20160901:1.24
	sid-snapshot-20160801:1.24
	sid-snapshot-20160701:1.24
	sid-snapshot-20160601:1.24
	sid-snapshot-20160501:1.24
	sid-snapshot-20160401:1.24
	sid-snapshot-20160301:1.24
	sid-snapshot-20160201:1.24
	sid-snapshot-20160101:1.24
	sid-snapshot-20151201:1.24
	sid-snapshot-20151101:1.24
	sid-snapshot-20151001:1.24
	sid-snapshot-20150901:1.24
	sid-snapshot-20150801:1.24
	sid-snapshot-20150701:1.24
	sid-snapshot-20150601:1.24
	sid-snapshot-20150501:1.24
	sid-snapshot-20150401:1.24
	cygwin-1_7_35-release:1.24
	sid-snapshot-20150301:1.24
	cygwin-1_7_34-release:1.24
	sid-snapshot-20150201:1.24
	sid-snapshot-20150101:1.24
	sid-snapshot-20141201:1.24
	cygwin-1_7_33-release:1.24
	sid-snapshot-20141101:1.24
	sid-snapshot-20141001:1.24
	sid-snapshot-20140901:1.24
	cygwin-1_7_32-release:1.24
	sid-snapshot-20140801:1.24
	cygwin-1_7_31-release:1.24
	sid-snapshot-20140701:1.24
	sid-snapshot-20140601:1.24
	cygwin-1_7_30-release:1.24
	sid-snapshot-20140501:1.24
	cygwin-1_7_29-release:1.24
	sid-snapshot-20140401:1.24
	sid-snapshot-20140301:1.24
	cygwin-1_7_28-release:1.24
	sid-snapshot-20140201:1.24
	sid-snapshot-20140101:1.24
	sid-snapshot-20131201:1.24
	cygwin-1_7_27-release:1.24
	cygwin-1_7_26-release:1.24
	sid-snapshot-20131101:1.24
	sid-snapshot-20131001:1.24
	binutils-2_24-branch:1.24.0.24
	binutils-2_24-branchpoint:1.24
	binutils-2_21_1:1.24
	sid-snapshot-20130901:1.24
	cygwin-1_7_25-release:1.24
	gdb_7_6_1-2013-08-30-release:1.24
	cygwin-1_7_24-release:1.24
	cygwin-1_7_23-release:1.24
	sid-snapshot-20130801:1.24
	cygwin-1_7_22-release:1.24
	cygwin-1_7_21-release:1.24
	sid-snapshot-20130701:1.24
	cygwin-1_7_20-release:1.24
	cygwin-1_7_19-release:1.24
	sid-snapshot-20130601:1.24
	sid-snapshot-20130501:1.24
	gdb_7_6-2013-04-26-release:1.24
	cygwin-64bit-postmerge:1.24
	cygwin-64bit-premerge-branch:1.24.0.22
	cygwin-64bit-premerge:1.24
	sid-snapshot-20130401:1.24
	binutils-2_23_2:1.24
	gdb_7_6-branch:1.24.0.20
	gdb_7_6-2013-03-12-branchpoint:1.24
	cygwin-1_7_18-release:1.24
	sid-snapshot-20130301:1.24
	sid-snapshot-20130201:1.24
	sid-snapshot-20130101:1.24
	sid-snapshot-20121201:1.24
	gdb_7_5_1-2012-11-29-release:1.24
	binutils-2_23_1:1.24
	sid-snapshot-20121101:1.24
	binutils-2_23:1.24
	cygwin-1_7_17-release:1.24
	sid-snapshot-20121001:1.24
	sid-snapshot-20120901:1.24
	gdb_7_5-2012-08-17-release:1.24
	cygwin-64bit-branch:1.24.0.18
	sid-snapshot-20120801:1.24
	binutils-2_23-branch:1.24.0.16
	binutils-2_23-branchpoint:1.24
	cygwin-1_7_16-release:1.24
	gdb_7_5-branch:1.24.0.14
	gdb_7_5-2012-07-18-branchpoint:1.24
	sid-snapshot-20120701:1.24
	sid-snapshot-20120601:1.24
	cygwin-1_7_15-release:1.24
	sid-snapshot-20120501:1.24
	binutils-2_22_branch:1.24.0.12
	gdb_7_4_1-2012-04-26-release:1.24
	cygwin-1_7_14_2-release:1.24
	cygwin-1_7_14-release:1.24
	cygwin-1_7_12-release:1.24
	sid-snapshot-20120401:1.24
	sid-snapshot-20120301:1.24
	cygwin-1_7_11-release:1.24
	cygwin-1_7_10-release:1.24
	sid-snapshot-20120201:1.24
	gdb_7_4-2012-01-24-release:1.24
	sid-snapshot-20120101:1.24
	gdb_7_4-branch:1.24.0.10
	gdb_7_4-2011-12-13-branchpoint:1.24
	sid-snapshot-20111201:1.24
	binutils-2_22:1.24
	sid-snapshot-20111101:1.24
	sid-snapshot-20111001:1.24
	binutils-2_22-branch:1.24.0.8
	binutils-2_22-branchpoint:1.24
	gdb_7_3_1-2011-09-04-release:1.24
	sid-snapshot-20110901:1.24
	sid-snapshot-20110801:1.24
	gdb_7_3-2011-07-26-release:1.24
	sid-snapshot-20110701:1.24
	sid-snapshot-20110601:1.24
	sid-snapshot-20110501:1.24
	gdb_7_3-branch:1.24.0.6
	gdb_7_3-2011-04-01-branchpoint:1.24
	sid-snapshot-20110401:1.24
	cygwin-1_7_9-release:1.24
	sid-snapshot-20110301:1.24
	cygwin-1_7_8-release:1.24
	sid-snapshot-20110201:1.24
	sid-snapshot-20110101:1.24
	binutils-2_21:1.24
	sid-snapshot-20101201:1.24
	binutils-2_21-branch:1.24.0.4
	binutils-2_21-branchpoint:1.24
	sid-snapshot-20101101:1.24
	sid-snapshot-20101001:1.24
	binutils-2_20_1:1.22
	gdb_7_2-2010-09-02-release:1.24
	sid-snapshot-20100901:1.24
	cygwin-1_7_7-release:1.24
	sid-snapshot-20100801:1.24
	gdb_7_2-branch:1.24.0.2
	gdb_7_2-2010-07-07-branchpoint:1.24
	sid-snapshot-20100701:1.24
	sid-snapshot-20100601:1.24
	sid-snapshot-20100501:1.23
	cygwin-1_7_5-release:1.22
	cygwin-1_7_4-release:1.22
	sid-snapshot-20100401:1.22
	cygwin-1_7_3-release:1.22
	cygwin-1_7_2-release:1.22
	gdb_7_1-2010-03-18-release:1.22
	sid-snapshot-20100301:1.22
	gdb_7_1-branch:1.22.0.26
	gdb_7_1-2010-02-18-branchpoint:1.22
	sid-snapshot-20100201:1.22
	sid-snapshot-20100101:1.22
	gdb_7_0_1-2009-12-22-release:1.22
	cygwin-1_7_1-release:1.22
	sid-snapshot-20091201:1.22
	sid-snapshot-20091101:1.22
	binutils-2_20:1.22
	gdb_7_0-2009-10-06-release:1.22
	sid-snapshot-20091001:1.22
	gdb_7_0-branch:1.22.0.24
	gdb_7_0-2009-09-16-branchpoint:1.22
	arc-sim-20090309:1.21
	binutils-arc-20081103-branch:1.22.0.22
	binutils-arc-20081103-branchpoint:1.22
	binutils-2_20-branch:1.22.0.20
	binutils-2_20-branchpoint:1.22
	sid-snapshot-20090901:1.22
	sid-snapshot-20090801:1.22
	msnyder-checkpoint-072509-branch:1.22.0.18
	msnyder-checkpoint-072509-branchpoint:1.22
	sid-snapshot-20090701:1.22
	dje-cgen-play1-branch:1.22.0.16
	dje-cgen-play1-branchpoint:1.22
	sid-snapshot-20090601:1.22
	sid-snapshot-20090501:1.22
	sid-snapshot-20090401:1.22
	arc-20081103-branch:1.22.0.14
	arc-20081103-branchpoint:1.22
	arc-insight_6_8-branch:1.21.0.46
	arc-insight_6_8-branchpoint:1.21
	insight_6_8-branch:1.21.0.44
	insight_6_8-branchpoint:1.21
	sid-snapshot-20090301:1.22
	binutils-2_19_1:1.22
	sid-snapshot-20090201:1.22
	sid-snapshot-20090101:1.22
	reverse-20081226-branch:1.22.0.12
	reverse-20081226-branchpoint:1.22
	sid-snapshot-20081201:1.22
	multiprocess-20081120-branch:1.22.0.10
	multiprocess-20081120-branchpoint:1.22
	sid-snapshot-20081101:1.22
	binutils-2_19:1.22
	sid-snapshot-20081001:1.22
	reverse-20080930-branch:1.22.0.8
	reverse-20080930-branchpoint:1.22
	binutils-2_19-branch:1.22.0.6
	binutils-2_19-branchpoint:1.22
	sid-snapshot-20080901:1.22
	sid-snapshot-20080801:1.22
	reverse-20080717-branch:1.22.0.4
	reverse-20080717-branchpoint:1.22
	sid-snapshot-20080701:1.22
	msnyder-reverse-20080609-branch:1.22.0.2
	msnyder-reverse-20080609-branchpoint:1.22
	drow-reverse-20070409-branch:1.21.0.42
	drow-reverse-20070409-branchpoint:1.21
	sid-snapshot-20080601:1.21
	sid-snapshot-20080501:1.21
	sid-snapshot-20080403:1.21
	sid-snapshot-20080401:1.21
	gdb_6_8-2008-03-27-release:1.21
	sid-snapshot-20080301:1.21
	gdb_6_8-branch:1.21.0.40
	gdb_6_8-2008-02-26-branchpoint:1.21
	sid-snapshot-20080201:1.21
	sid-snapshot-20080101:1.21
	sid-snapshot-20071201:1.21
	sid-snapshot-20071101:1.21
	gdb_6_7_1-2007-10-29-release:1.21
	gdb_6_7-2007-10-10-release:1.21
	sid-snapshot-20071001:1.21
	gdb_6_7-branch:1.21.0.38
	gdb_6_7-2007-09-07-branchpoint:1.21
	binutils-2_18:1.21
	binutils-2_18-branch:1.21.0.36
	binutils-2_18-branchpoint:1.21
	insight_6_6-20070208-release:1.21
	binutils-csl-coldfire-4_1-32:1.21
	binutils-csl-sourcerygxx-4_1-32:1.21
	gdb_6_6-2006-12-18-release:1.21
	binutils-csl-innovasic-fido-3_4_4-33:1.21
	binutils-csl-sourcerygxx-3_4_4-32:1.20
	binutils-csl-coldfire-4_1-30:1.21
	binutils-csl-sourcerygxx-4_1-30:1.21
	binutils-csl-coldfire-4_1-28:1.21
	binutils-csl-sourcerygxx-4_1-29:1.21
	binutils-csl-sourcerygxx-4_1-28:1.21
	gdb_6_6-branch:1.21.0.34
	gdb_6_6-2006-11-15-branchpoint:1.21
	binutils-csl-arm-2006q3-27:1.21
	binutils-csl-sourcerygxx-4_1-27:1.21
	binutils-csl-arm-2006q3-26:1.21
	binutils-csl-sourcerygxx-4_1-26:1.21
	binutils-csl-sourcerygxx-4_1-25:1.21
	binutils-csl-sourcerygxx-4_1-24:1.21
	binutils-csl-sourcerygxx-4_1-23:1.21
	insight_6_5-20061003-release:1.21
	gdb-csl-symbian-6_4_50_20060226-12:1.21
	binutils-csl-sourcerygxx-4_1-21:1.21
	binutils-csl-arm-2006q3-21:1.21
	binutils-csl-sourcerygxx-4_1-22:1.21
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.21
	binutils-csl-sourcerygxx-4_1-20:1.21
	binutils-csl-arm-2006q3-19:1.21
	binutils-csl-sourcerygxx-4_1-19:1.21
	binutils-csl-sourcerygxx-4_1-18:1.21
	binutils-csl-renesas-4_1-9:1.21
	gdb-csl-sourcerygxx-3_4_4-25:1.21
	binutils-csl-sourcerygxx-3_4_4-25:1.20
	nickrob-async-20060828-mergepoint:1.21
	gdb-csl-symbian-6_4_50_20060226-11:1.21
	binutils-csl-renesas-4_1-8:1.21
	binutils-csl-renesas-4_1-7:1.21
	binutils-csl-renesas-4_1-6:1.21
	gdb-csl-sourcerygxx-4_1-17:1.21
	binutils-csl-sourcerygxx-4_1-17:1.21
	gdb-csl-20060226-branch-local-2:1.21
	cr-0x5f1:1.21.0.32
	gdb-csl-sourcerygxx-4_1-14:1.21
	binutils-csl-sourcerygxx-4_1-14:1.21
	binutils-csl-sourcerygxx-4_1-15:1.21
	gdb-csl-sourcerygxx-4_1-13:1.21
	binutils-csl-sourcerygxx-4_1-13:1.21
	binutils-2_17:1.21
	gdb-csl-sourcerygxx-4_1-12:1.21
	binutils-csl-sourcerygxx-4_1-12:1.21
	gdb-csl-sourcerygxx-3_4_4-21:1.21
	binutils-csl-sourcerygxx-3_4_4-21:1.21
	gdb_6_5-20060621-release:1.21
	binutils-csl-wrs-linux-3_4_4-24:1.20
	binutils-csl-wrs-linux-3_4_4-23:1.20
	gdb-csl-sourcerygxx-4_1-9:1.21
	binutils-csl-sourcerygxx-4_1-9:1.21
	gdb-csl-sourcerygxx-4_1-8:1.21
	binutils-csl-sourcerygxx-4_1-8:1.21
	gdb-csl-sourcerygxx-4_1-7:1.21
	binutils-csl-sourcerygxx-4_1-7:1.21
	gdb-csl-arm-2006q1-6:1.21
	binutils-csl-arm-2006q1-6:1.21
	gdb-csl-sourcerygxx-4_1-6:1.21
	binutils-csl-sourcerygxx-4_1-6:1.21
	binutils-csl-wrs-linux-3_4_4-22:1.20
	gdb-csl-symbian-6_4_50_20060226-10:1.21
	gdb-csl-symbian-6_4_50_20060226-9:1.21
	gdb-csl-symbian-6_4_50_20060226-8:1.21
	gdb-csl-coldfire-4_1-11:1.21
	binutils-csl-coldfire-4_1-11:1.21
	gdb-csl-sourcerygxx-3_4_4-19:1.21
	binutils-csl-sourcerygxx-3_4_4-19:1.21
	gdb-csl-coldfire-4_1-10:1.21
	gdb_6_5-branch:1.21.0.30
	gdb_6_5-2006-05-14-branchpoint:1.21
	binutils-csl-coldfire-4_1-10:1.21
	gdb-csl-sourcerygxx-4_1-5:1.21
	binutils-csl-sourcerygxx-4_1-5:1.21
	nickrob-async-20060513-branch:1.21.0.28
	nickrob-async-20060513-branchpoint:1.21
	gdb-csl-sourcerygxx-4_1-4:1.21
	binutils-csl-sourcerygxx-4_1-4:1.21
	msnyder-reverse-20060502-branch:1.21.0.26
	msnyder-reverse-20060502-branchpoint:1.21
	binutils-csl-wrs-linux-3_4_4-21:1.20
	gdb-csl-morpho-4_1-4:1.21
	binutils-csl-morpho-4_1-4:1.21
	gdb-csl-sourcerygxx-3_4_4-17:1.21
	binutils-csl-sourcerygxx-3_4_4-17:1.21
	binutils-csl-wrs-linux-3_4_4-20:1.20
	readline_5_1-import-branch:1.21.0.24
	readline_5_1-import-branchpoint:1.21
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.21
	binutils-2_17-branch:1.21.0.22
	binutils-2_17-branchpoint:1.21
	gdb-csl-symbian-20060226-branch:1.21.0.20
	gdb-csl-symbian-20060226-branchpoint:1.21
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.21
	msnyder-reverse-20060331-branch:1.21.0.18
	msnyder-reverse-20060331-branchpoint:1.21
	binutils-csl-2_17-branch:1.21.0.16
	binutils-csl-2_17-branchpoint:1.21
	gdb-csl-available-20060303-branch:1.21.0.14
	gdb-csl-available-20060303-branchpoint:1.21
	gdb-csl-20060226-branch:1.21.0.12
	gdb-csl-20060226-branchpoint:1.21
	gdb_6_4-20051202-release:1.21
	msnyder-fork-checkpoint-branch:1.21.0.10
	msnyder-fork-checkpoint-branchpoint:1.21
	gdb-csl-gxxpro-6_3-branch:1.21.0.8
	gdb-csl-gxxpro-6_3-branchpoint:1.21
	gdb_6_4-branch:1.21.0.6
	gdb_6_4-2005-11-01-branchpoint:1.21
	gdb-csl-arm-20051020-branch:1.21.0.4
	gdb-csl-arm-20051020-branchpoint:1.21
	binutils-csl-gxxpro-3_4-branch:1.20.0.8
	binutils-csl-gxxpro-3_4-branchpoint:1.20
	binutils-2_16_1:1.20
	msnyder-tracepoint-checkpoint-branch:1.21.0.2
	msnyder-tracepoint-checkpoint-branchpoint:1.21
	gdb-csl-arm-20050325-2005-q1b:1.20
	binutils-csl-arm-2005q1b:1.20
	binutils-2_16:1.20
	gdb-csl-arm-20050325-2005-q1a:1.20
	binutils-csl-arm-2005q1a:1.20
	csl-arm-20050325-branch:1.20.0.6
	csl-arm-20050325-branchpoint:1.20
	binutils-csl-arm-2005q1-branch:1.20.0.4
	binutils-csl-arm-2005q1-branchpoint:1.20
	binutils-2_16-branch:1.20.0.2
	binutils-2_16-branchpoint:1.20
	csl-arm-2004-q3d:1.19
	gdb_6_3-20041109-release:1.19
	gdb_6_3-branch:1.19.0.2
	gdb_6_3-20041019-branchpoint:1.19
	csl-arm-2004-q3:1.19
	drow_intercu-merge-20040921:1.19
	drow_intercu-merge-20040915:1.19
	jimb-gdb_6_2-e500-branch:1.18.0.6
	jimb-gdb_6_2-e500-branchpoint:1.18
	gdb_6_2-20040730-release:1.18
	gdb_6_2-branch:1.18.0.2
	gdb_6_2-2004-07-10-gmt-branchpoint:1.18
	gdb_6_1_1-20040616-release:1.16
	binutils-2_15:1.16
	binutils-2_15-branchpoint:1.16
	csl-arm-2004-q1a:1.17
	csl-arm-2004-q1:1.17
	gdb_6_1-2004-04-05-release:1.16
	drow_intercu-merge-20040402:1.17
	drow_intercu-merge-20040327:1.17
	ezannoni_pie-20040323-branch:1.17.0.4
	ezannoni_pie-20040323-branchpoint:1.17
	cagney_tramp-20040321-mergepoint:1.17
	cagney_tramp-20040309-branch:1.17.0.2
	cagney_tramp-20040309-branchpoint:1.17
	gdb_6_1-branch:1.16.0.10
	gdb_6_1-2004-03-01-gmt-branchpoint:1.16
	drow_intercu-20040221-branch:1.16.0.8
	drow_intercu-20040221-branchpoint:1.16
	binutils-2_15-branch:1.16.0.6
	cagney_bfdfile-20040213-branch:1.16.0.4
	cagney_bfdfile-20040213-branchpoint:1.16
	drow-cplus-merge-20040208:1.16
	carlton_dictionary-20040126-merge:1.16
	cagney_bigcore-20040122-branch:1.16.0.2
	cagney_bigcore-20040122-branchpoint:1.16
	drow-cplus-merge-20040113:1.16
	csl-arm-2003-q4:1.16
	drow-cplus-merge-20031224:1.16
	drow-cplus-merge-20031220:1.16
	carlton_dictionary-20031215-merge:1.16
	drow-cplus-merge-20031214:1.16
	carlton-dictionary-20031111-merge:1.16
	gdb_6_0-2003-10-04-release:1.14
	kettenis_sparc-20030918-branch:1.14.0.36
	kettenis_sparc-20030918-branchpoint:1.14
	carlton_dictionary-20030917-merge:1.14
	ezannoni_pie-20030916-branchpoint:1.14
	ezannoni_pie-20030916-branch:1.14.0.34
	cagney_x86i386-20030821-branch:1.14.0.32
	cagney_x86i386-20030821-branchpoint:1.14
	carlton_dictionary-20030805-merge:1.14
	carlton_dictionary-20030627-merge:1.14
	gdb_6_0-branch:1.14.0.30
	gdb_6_0-2003-06-23-branchpoint:1.14
	jimb-ppc64-linux-20030613-branch:1.14.0.28
	jimb-ppc64-linux-20030613-branchpoint:1.14
	binutils-2_14:1.14
	cagney_convert-20030606-branch:1.14.0.26
	cagney_convert-20030606-branchpoint:1.14
	cagney_writestrings-20030508-branch:1.14.0.24
	cagney_writestrings-20030508-branchpoint:1.14
	jimb-ppc64-linux-20030528-branch:1.14.0.22
	jimb-ppc64-linux-20030528-branchpoint:1.14
	carlton_dictionary-20030523-merge:1.14
	cagney_fileio-20030521-branch:1.14.0.20
	cagney_fileio-20030521-branchpoint:1.14
	kettenis_i386newframe-20030517-mergepoint:1.14
	jimb-ppc64-linux-20030509-branch:1.14.0.18
	jimb-ppc64-linux-20030509-branchpoint:1.14
	kettenis_i386newframe-20030504-mergepoint:1.14
	carlton_dictionary-20030430-merge:1.14
	binutils-2_14-branch:1.14.0.16
	binutils-2_14-branchpoint:1.14
	kettenis_i386newframe-20030419-branch:1.14.0.14
	kettenis_i386newframe-20030419-branchpoint:1.14
	carlton_dictionary-20030416-merge:1.14
	cagney_frameaddr-20030409-mergepoint:1.14
	kettenis_i386newframe-20030406-branch:1.14.0.12
	kettenis_i386newframe-20030406-branchpoint:1.14
	cagney_frameaddr-20030403-branchpoint:1.14
	cagney_frameaddr-20030403-branch:1.14.0.10
	cagney_framebase-20030330-mergepoint:1.14
	cagney_framebase-20030326-branch:1.14.0.8
	cagney_framebase-20030326-branchpoint:1.14
	cagney_lazyid-20030317-branch:1.14.0.6
	cagney_lazyid-20030317-branchpoint:1.14
	kettenis-i386newframe-20030316-mergepoint:1.14
	offbyone-20030313-branch:1.14.0.4
	offbyone-20030313-branchpoint:1.14
	kettenis-i386newframe-20030308-branch:1.14.0.2
	kettenis-i386newframe-20030308-branchpoint:1.14
	carlton_dictionary-20030305-merge:1.14
	cagney_offbyone-20030303-branch:1.13.0.4
	cagney_offbyone-20030303-branchpoint:1.13
	w32api-2_2:1.13
	mingw-runtime-2_4:1.13
	carlton_dictionary-20030207-merge:1.13
	interps-20030202-branch:1.13.0.2
	interps-20030202-branchpoint:1.13
	cagney-unwind-20030108-branch:1.11.0.2
	cagney-unwind-20030108-branchpoint:1.11
	binutils-2_13_2_1:1.9
	binutils-2_13_2:1.9
	carlton_dictionary-20021223-merge:1.11
	gdb_5_3-2002-12-12-release:1.9
	carlton_dictionary-20021115-merge:1.10
	binutils-2_13_1:1.9
	kseitz_interps-20021105-merge:1.10
	kseitz_interps-20021103-merge:1.10
	drow-cplus-merge-20021020:1.10
	drow-cplus-merge-20021025:1.10
	carlton_dictionary-20021025-merge:1.10
	carlton_dictionary-20021011-merge:1.10
	drow-cplus-branch:1.9.0.14
	drow-cplus-branchpoint:1.9
	kseitz_interps-20020930-merge:1.9
	carlton_dictionary-20020927-merge:1.9
	carlton_dictionary-branch:1.9.0.12
	carlton_dictionary-20020920-branchpoint:1.9
	sid-20020905-branchpoint:1.9
	sid-20020905-branch:1.9.0.10
	gdb_5_3-branch:1.9.0.8
	gdb_5_3-2002-09-04-branchpoint:1.9
	kseitz_interps-20020829-merge:1.9
	cagney_sysregs-20020825-branch:1.9.0.6
	cagney_sysregs-20020825-branchpoint:1.9
	readline_4_3-import-branch:1.9.0.4
	readline_4_3-import-branchpoint:1.9
	binutils-2_13:1.9
	gdb_5_2_1-2002-07-23-release:1.8
	binutils-2_13-branchpoint:1.9
	binutils-2_13-branch:1.9.0.2
	kseitz_interps-20020528-branch:1.8.0.10
	kseitz_interps-20020528-branchpoint:1.8
	cagney_regbuf-20020515-branch:1.8.0.8
	cagney_regbuf-20020515-branchpoint:1.8
	binutils-2_12_1:1.8
	jimb-macro-020506-branch:1.8.0.6
	jimb-macro-020506-branchpoint:1.8
	gdb_5_2-2002-04-29-release:1.8
	binutils-2_12:1.8
	gdb_5_2-branch:1.8.0.4
	gdb_5_2-2002-03-03-branchpoint:1.8
	binutils-2_12-branch:1.8.0.2
	binutils-2_12-branchpoint:1.8
	gdb_5_1_1-2002-01-24-release:1.7
	gdb_5_1_0_1-2002-01-03-release:1.7
	cygnus_cvs_20020108_pre:1.7
	gdb_5_1_0_1-2002-01-03-branch:1.7.0.6
	gdb_5_1_0_1-2002-01-03-branchpoint:1.7
	gdb_5_1-2001-11-21-release:1.7
	gdb_s390-2001-09-26-branch:1.7.0.4
	gdb_s390-2001-09-26-branchpoint:1.7
	gdb_5_1-2001-07-29-branch:1.7.0.2
	gdb_5_1-2001-07-29-branchpoint:1.7
	binutils-2_11_2:1.6.2.1
	binutils-2_11_1:1.6.2.1
	binutils-2_11:1.6
	x86_64versiong3:1.6
	binutils-2_11-branch:1.6.0.2
	insight-precleanup-2001-01-01:1.6
	binutils-2_10_1:1.2
	binutils-2_10:1.2
	gdb-premipsmulti-2000-06-06-branch:1.3.0.4
	gdb-premipsmulti-2000-06-06-branchpoint:1.3
	gdb_5_0-2000-05-19-release:1.3
	gdb_4_18_2-2000-05-18-release:1.3
	gdb_4_95_1-2000-05-11-snapshot:1.3
	gdb_4_95_0-2000-04-27-snapshot:1.3
	gdb_5_0-2000-04-10-branch:1.3.0.2
	gdb_5_0-2000-04-10-branchpoint:1.3
	binutils-2_10-branch:1.2.0.2
	binutils-2_10-branchpoint:1.2
	binutils_latest_snapshot:1.24
	repo-unification-2000-02-06:1.1.1.1
	binu_ss_19990721:1.1.1.1
	binu_ss_19990602:1.1.1.1
	binu_ss_19990502:1.1.1.1
	cygnus:1.1.1;
locks; strict;
comment	@ * @;


1.24
date	2010.05.25.14.12.41;	author nickc;	state Exp;
branches;
next	1.23;

1.23
date	2010.04.15.10.26.08;	author nickc;	state Exp;
branches;
next	1.22;

1.22
date	2008.06.09.22.20.46;	author kkojima;	state Exp;
branches;
next	1.21;

1.21
date	2005.05.10.10.21.10;	author nickc;	state Exp;
branches;
next	1.20;

1.20
date	2005.01.17.14.08.16;	author nickc;	state Exp;
branches;
next	1.19;

1.19
date	2004.07.29.05.17.37;	author aoliva;	state Exp;
branches;
next	1.18;

1.18
date	2004.05.28.12.32.08;	author amylaar;	state Exp;
branches;
next	1.17;

1.17
date	2004.03.03.18.01.49;	author amylaar;	state Exp;
branches;
next	1.16;

1.16
date	2003.10.23.09.43.20;	author corinna;	state Exp;
branches
	1.16.8.1;
next	1.15;

1.15
date	2003.09.24.02.27.56;	author dj;	state Exp;
branches;
next	1.14;

1.14
date	2003.03.03.21.03.58;	author amylaar;	state Exp;
branches;
next	1.13;

1.13
date	2003.01.23.18.50.57;	author nickc;	state Exp;
branches;
next	1.12;

1.12
date	2003.01.23.11.51.31;	author amodra;	state Exp;
branches;
next	1.11;

1.11
date	2002.11.30.08.39.45;	author amodra;	state Exp;
branches;
next	1.10;

1.10
date	2002.10.11.14.36.03;	author kkojima;	state Exp;
branches;
next	1.9;

1.9
date	2002.06.05.01.50.42;	author thorpej;	state Exp;
branches
	1.9.12.1
	1.9.14.1;
next	1.8;

1.8
date	2002.02.08.05.05.58;	author aoliva;	state Exp;
branches
	1.8.8.1
	1.8.10.1;
next	1.7;

1.7
date	2001.03.14.02.27.44;	author nickc;	state Exp;
branches;
next	1.6;

1.6
date	2000.09.14.04.56.55;	author aoliva;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	2000.09.02.02.24.02;	author aoliva;	state Exp;
branches;
next	1.4;

1.4
date	2000.06.07.03.43.33;	author amodra;	state Exp;
branches;
next	1.3;

1.3
date	2000.04.05.21.23.03;	author amylaar;	state Exp;
branches;
next	1.2;

1.2
date	2000.02.17.00.33.35;	author amylaar;	state Exp;
branches;
next	1.1;

1.1
date	99.05.03.07.29.03;	author rth;	state Exp;
branches
	1.1.1.1;
next	;

1.16.8.1
date	2004.03.27.17.38.06;	author drow;	state Exp;
branches;
next	1.16.8.2;

1.16.8.2
date	2004.09.16.17.01.51;	author drow;	state Exp;
branches;
next	;

1.9.12.1
date	2002.10.11.22.23.03;	author carlton;	state Exp;
branches;
next	1.9.12.2;

1.9.12.2
date	2002.12.23.19.39.24;	author carlton;	state Exp;
branches;
next	1.9.12.3;

1.9.12.3
date	2003.02.07.19.18.00;	author carlton;	state Exp;
branches;
next	1.9.12.4;

1.9.12.4
date	2003.03.06.00.56.37;	author carlton;	state Exp;
branches;
next	1.9.12.5;

1.9.12.5
date	2003.11.11.23.51.13;	author carlton;	state Exp;
branches;
next	;

1.9.14.1
date	2002.10.26.17.12.26;	author drow;	state Exp;
branches;
next	1.9.14.2;

1.9.14.2
date	2003.12.14.20.28.00;	author drow;	state Exp;
branches;
next	;

1.8.8.1
date	2002.06.15.16.43.16;	author cagney;	state Exp;
branches;
next	;

1.8.10.1
date	2002.06.20.01.37.29;	author kseitz;	state Exp;
branches;
next	1.8.10.2;

1.8.10.2
date	2002.11.03.21.52.23;	author ezannoni;	state Exp;
branches;
next	;

1.6.2.1
date	2001.06.07.03.21.39;	author amodra;	state Exp;
branches;
next	;

1.1.1.1
date	99.05.03.07.29.03;	author rth;	state Exp;
branches;
next	;


desc
@@


1.24
log
@2010-05-21  Daniel Jacobowitz  <dan@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>
            Andrew Stubbs  <ams@@codesourcery.com>

        bfd/
        * config.bfd (sh-*-uclinux* | sh[12]-*-uclinux*): Add
        bfd_elf32_shl_vec, and FDPIC vectors to targ_selvecs.
        * configure.in: Handle FDPIC vectors.
        * elf32-sh-relocs.h: Add FDPIC and movi20 relocations.
        * elf32-sh.c (DEFAULT_STACK_SIZE): Define.
        (SYMBOL_FUNCDESC_LOCAL): Define.  Use it instead of
        SYMBOL_REFERENCES_LOCAL for function descriptors.
        (fdpic_object_p): New.
        (sh_reloc_map): Add FDPIC and movi20 relocations.
        (sh_elf_info_to_howto, sh_elf_relocate_section): Handle new invalid
        range.
        (struct elf_sh_plt_info): Add got20 and short_plt.  Update all
        definitions.
        (FDPIC_PLT_ENTRY_SIZE, FDPIC_PLT_LAZY_OFFSET): Define.
        (fdpic_sh_plt_entry_be, fdpic_sh_plt_entry_le, fdpic_sh_plts): New.
        (FDPIC_SH2A_PLT_ENTRY_SIZE, FDPIC_SH2A_PLT_LAZY_OFFSET): Define.
        (fdpic_sh2a_plt_entry_be, fdpic_sh2a_plt_entry_le)
        (fdpic_sh2a_short_plt_be, fdpic_sh2a_short_plt_le, fdpic_sh2a_plts):
        New.
        (get_plt_info): Handle FDPIC.
        (MAX_SHORT_PLT): Define.
        (get_plt_index, get_plt_offset): Handle short_plt.
        (union gotref): New.
        (struct elf_sh_link_hash_entry): Add funcdesc, rename tls_type to
        got_type and adjust all uses.  Add GOT_FUNCDESC.
        (struct sh_elf_obj_tdata): Add local_funcdesc.  Rename
        local_got_tls_type to local_got_type.
        (sh_elf_local_got_type): Renamed from sh_elf_local_got_tls_type.  All
        users changed.
        (sh_elf_local_funcdesc): Define.
        (struct elf_sh_link_hash_table): Add sfuncdesc, srelfuncdesc, fdpic_p,
        and srofixup.
        (sh_elf_link_hash_newfunc): Initialize new fields.
        (sh_elf_link_hash_table_create): Set fdpic_p.
        (sh_elf_omit_section_dynsym): New.
        (create_got_section): Create .got.funcdesc, .rela.got.funcdesc
        and .rofixup.
        (allocate_dynrelocs): Allocate local function descriptors and space
        for R_SH_FUNCDESC-related relocations, and for rofixups.
        Handle GOT_FUNCDESC.  Create fixups.  Handle GOT entries which
        require function descriptors.
        (sh_elf_always_size_sections): Handle PT_GNU_STACK and __stacksize.
        (sh_elf_modify_program_headers): New.
        (sh_elf_size_dynamic_sections): Allocate function descriptors for
        local symbols.  Allocate .got.funcdesc contents.  Allocate rofixups.
        Handle local GOT entries of type GOT_FUNCDESC.  Create fixups for
        local GOT entries.  Ensure that FDPIC libraries always have a PLTGOT
        entry in the .dynamic section.
        (sh_elf_add_dyn_reloc, sh_elf_got_offset, sh_elf_initialize_funcdesc)
        (sh_elf_add_rofixup, sh_elf_osec_to_segment)
        (sh_elf_osec_readonly_p, install_movi20_field): New functions.
        (sh_elf_relocate_section): Handle new relocations, R_SH_FUNCDESC,
        R_SH_GOTFUNCDESC and R_SH_GOTOFFFUNCDESC.  Use sh_elf_got_offset
        and .got.plt throughout to find _GLOBAL_OFFSET_TABLE_.  Add rofixup
        read-only section warnings.  Handle undefined weak symbols.  Generate
        fixups for R_SH_DIR32 and GOT entries.  Check for cross-segment
        relocations and clear EF_SH_PIC.  Handle 20-bit relocations.
        Always generate R_SH_DIR32 for FDPIC instead of R_SH_RELATIVE.
        (sh_elf_gc_sweep_hook): Handle R_SH_FUNCDESC, R_SH_GOTOFF20,
        R_SH_GOTFUNCDESC, R_SH_GOTFUNCDESC20, and R_SH_GOTOFFFUNCDESC.
        Handle 20-bit relocations.
        (sh_elf_copy_indirect_symbol): Copy function descriptor reference
        counts.
        (sh_elf_check_relocs): Handle new relocations.  Make symbols
        dynamic for FDPIC relocs.  Account for rofixups.  Error for FDPIC
        symbol mismatches.  Allocate a GOT for R_SH_DIR32. Allocate fixups
        for R_SH_DIR32.
        (sh_elf_copy_private_data): Copy PT_GNU_STACK size.
        (sh_elf_merge_private_data): Copy initial flags.  Do not clobber
        non-mach flags.  Set EF_SH_PIC for FDPIC.  Reject FDPIC mismatches.
        (sh_elf_finish_dynamic_symbol): Do not handle got_funcdesc entries
        here.  Rename sgot to sgotplt and srel to srelplt.  Handle short_plt,
        FDPIC descriptors, and got20.  Create R_SH_FUNCDESC_VALUE for FDPIC.
        Use install_movi20_field.  Rename srel to srelgot.  Always generate
        R_SH_DIR32 for FDPIC instead of R_SH_RELATIVE.
        (sh_elf_finish_dynamic_sections): Fill in the GOT pointer in rofixup.
        Do not fill in reserved GOT entries for FDPIC.  Correct DT_PLTGOT.
        Rename sgot to sgotplt.  Assert that the right number of rofixups
        and dynamic relocations were allocated.
        (sh_elf_use_relative_eh_frame, sh_elf_encode_eh_address): New.
        (elf_backend_omit_section_dynsym): Use sh_elf_omit_section_dynsym.
        (elf_backend_can_make_relative_eh_frame)
        (elf_backend_can_make_lsda_relative_eh_frame)
        (elf_backend_encode_eh_address): Define.
        (TARGET_BIG_SYM, TARGET_BIG_NAME, TARGET_LITTLE_SYM)
        (TARGET_LITTLE_NAME, elf_backend_modify_program_headers, elf32_bed):
        Redefine for FDPIC vector.
        * reloc.c: Add SH FDPIC and movi20 relocations.
        * targets.c (_bfd_target_vector): Add FDPIC vectors.
        * configure, bfd-in2.h, libbfd.h: Regenerated.

        binutils/
        * readelf.c (get_machine_flags): Handle EF_SH_PIC and EF_SH_FDPIC.

        gas/
        * config/tc-sh.c (sh_fdpic): New.
        (sh_check_fixup): Handle relocations on movi20.
        (parse_exp): Do not reject PIC operators here.
        (build_Mytes): Check for unhandled PIC operators here.  Use
        sh_check_fixup for movi20.
        (enum options): Add OPTION_FDPIC.
        (md_longopts, md_parse_option, md_show_usage): Add --fdpic.
        (sh_fix_adjustable, md_apply_fix): Handle FDPIC and movi20 relocations.
        (sh_elf_final_processing): Handle --fdpic.
        (sh_uclinux_target_format): New.
        (sh_parse_name): Handle FDPIC relocation operators.
        * config/tc-sh.h (TARGET_FORMAT): Define specially for TE_UCLINUX.
        (sh_uclinux_target_format): Declare for TE_UCLINUX.
        * configure.tgt (sh-*-uclinux* | sh[12]-*-uclinux*): Set
        em=uclinux.
        * doc/c-sh.texi (SH Options): Document --fdpic.

        gas/testsuite/
        * gas/sh/basic.exp: Run new tests.  Handle uClinux like Linux.
        * gas/sh/fdpic.d: New file.
        * gas/sh/fdpic.s: New file.
        * gas/sh/reg-prefix.d: Force big-endian.
        * gas/sh/sh2a-pic.d: New file.
        * gas/sh/sh2a-pic.s: New file.
        * lib/gas-defs.exp (is_elf_format): Include sh*-*-uclinux*.

        include/elf/
        * sh.h (EF_SH_PIC, EF_SH_FDPIC): Define.
        (R_SH_FIRST_INVALID_RELOC_6, R_SH_LAST_INVALID_RELOC_6): New.  Adjust
        other invalid ranges.
        (R_SH_GOT20, R_SH_GOTOFF20, R_SH_GOTFUNCDESC, R_SH_GOTFUNCDESC20)
        (R_SH_GOTOFFFUNCDESC, R_SH_GOTOFFFUNCDESC20, R_SH_FUNCDESC)
        (R_SH_FUNCDESC_VALUE): New.

        ld/
        * Makefile.am (ALL_EMULATIONS): Add eshelf_fd.o and eshlelf_fd.o.
        (eshelf_fd.c, eshlelf_fd.c): New rules.
        * Makefile.in: Regenerate.
        * configure.tgt (sh-*-uclinux*): Add shelf_fd and shlelf_fd
        emulations.
        * emulparams/shelf_fd.sh: New file.
        * emulparams/shlelf_fd.sh: New file.
        * emulparams/shlelf_linux.sh: Update comment.

        ld/testsuite/
        * ld-sh/sh.exp: Handle uClinux like Linux.
        * lib/ld-lib.exp (is_elf_format): Include sh*-*-uclinux*.
        * ld-sh/fdpic-funcdesc-shared.d: New file.
        * ld-sh/fdpic-funcdesc-shared.s: New file.
        * ld-sh/fdpic-funcdesc-static.d: New file.
        * ld-sh/fdpic-funcdesc-static.s: New file.
        * ld-sh/fdpic-gotfuncdesc-shared.d: New file.
        * ld-sh/fdpic-gotfuncdesc-shared.s: New file.
        * ld-sh/fdpic-gotfuncdesc-static.d: New file.
        * ld-sh/fdpic-gotfuncdesc-static.s: New file.
        * ld-sh/fdpic-gotfuncdesci20-shared.d: New file.
        * ld-sh/fdpic-gotfuncdesci20-shared.s: New file.
        * ld-sh/fdpic-gotfuncdesci20-static.d: New file.
        * ld-sh/fdpic-gotfuncdesci20-static.s: New file.
        * ld-sh/fdpic-goti20-shared.d: New file.
        * ld-sh/fdpic-goti20-shared.s: New file.
        * ld-sh/fdpic-goti20-static.d: New file.
        * ld-sh/fdpic-goti20-static.s: New file.
        * ld-sh/fdpic-gotofffuncdesc-shared.d: New file.
        * ld-sh/fdpic-gotofffuncdesc-shared.s: New file.
        * ld-sh/fdpic-gotofffuncdesc-static.d: New file.
        * ld-sh/fdpic-gotofffuncdesc-static.s: New file.
        * ld-sh/fdpic-gotofffuncdesci20-shared.d: New file.
        * ld-sh/fdpic-gotofffuncdesci20-shared.s: New file.
        * ld-sh/fdpic-gotofffuncdesci20-static.d: New file.
        * ld-sh/fdpic-gotofffuncdesci20-static.s: New file.
        * ld-sh/fdpic-gotoffi20-shared.d: New file.
        * ld-sh/fdpic-gotoffi20-shared.s: New file.
        * ld-sh/fdpic-gotoffi20-static.d: New file.
        * ld-sh/fdpic-gotoffi20-static.s: New file.
        * ld-sh/fdpic-plt-be.d: New file.
        * ld-sh/fdpic-plt-le.d: New file.
        * ld-sh/fdpic-plt.s: New file.
        * ld-sh/fdpic-plti20-be.d: New file.
        * ld-sh/fdpic-plti20-le.d: New file.
        * ld-sh/fdpic-stack-default.d: New file.
        * ld-sh/fdpic-stack-size.d: New file.
        * ld-sh/fdpic-stack.s: New file.
@
text
@/* SH ELF support for BFD.
   Copyright 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2010
   Free Software Foundation, Inc.

   This file is part of BFD, the Binary File Descriptor library.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software Foundation,
   Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.  */

#ifndef _ELF_SH_H
#define _ELF_SH_H

/* Processor specific flags for the ELF header e_flags field.  */

#define EF_SH_MACH_MASK	0x1f
#define EF_SH_UNKNOWN	   0 /* For backwards compatibility.  */
#define EF_SH1		   1
#define EF_SH2		   2
#define EF_SH3		   3
#define EF_SH_DSP	   4
#define EF_SH3_DSP	   5
#define EF_SH4AL_DSP	   6
#define EF_SH3E		   8
#define EF_SH4		   9
#define EF_SH2E            11
#define EF_SH4A		   12
#define EF_SH2A            13

#define EF_SH4_NOFPU	   16
#define EF_SH4A_NOFPU	   17
#define EF_SH4_NOMMU_NOFPU 18
#define EF_SH2A_NOFPU      19
#define EF_SH3_NOMMU       20

#define EF_SH2A_SH4_NOFPU  21
#define EF_SH2A_SH3_NOFPU  22
#define EF_SH2A_SH4        23
#define EF_SH2A_SH3E       24

/* This one can only mix in objects from other EF_SH5 objects.  */
#define EF_SH5		  10

/* Define the mapping from ELF to bfd mach numbers.
   bfd_mach_* are defined in bfd_in2.h (generated from
   archures.c).  */
#define EF_SH_BFD_TABLE \
/* EF_SH_UNKNOWN	*/ bfd_mach_sh		, \
/* EF_SH1		*/ bfd_mach_sh		, \
/* EF_SH2		*/ bfd_mach_sh2		, \
/* EF_SH3		*/ bfd_mach_sh3		, \
/* EF_SH_DSP		*/ bfd_mach_sh_dsp	, \
/* EF_SH3_DSP		*/ bfd_mach_sh3_dsp	, \
/* EF_SHAL_DSP		*/ bfd_mach_sh4al_dsp	, \
/* 7			*/ 0, \
/* EF_SH3E		*/ bfd_mach_sh3e	, \
/* EF_SH4		*/ bfd_mach_sh4		, \
/* EF_SH5		*/ 0, \
/* EF_SH2E		*/ bfd_mach_sh2e	, \
/* EF_SH4A		*/ bfd_mach_sh4a	, \
/* EF_SH2A		*/ bfd_mach_sh2a        , \
/* 14, 15		*/ 0, 0, \
/* EF_SH4_NOFPU		*/ bfd_mach_sh4_nofpu	, \
/* EF_SH4A_NOFPU	*/ bfd_mach_sh4a_nofpu	, \
/* EF_SH4_NOMMU_NOFPU	*/ bfd_mach_sh4_nommu_nofpu, \
/* EF_SH2A_NOFPU	*/ bfd_mach_sh2a_nofpu  , \
/* EF_SH3_NOMMU		*/ bfd_mach_sh3_nommu   , \
/* EF_SH2A_SH4_NOFPU    */ bfd_mach_sh2a_nofpu_or_sh4_nommu_nofpu, \
/* EF_SH2A_SH3_NOFPU    */ bfd_mach_sh2a_nofpu_or_sh3_nommu, \
/* EF_SH2A_SH4          */ bfd_mach_sh2a_or_sh4 , \
/* EF_SH2A_SH3E         */ bfd_mach_sh2a_or_sh3e

/* Convert arch_sh* into EF_SH*.  */
int sh_find_elf_flags (unsigned int arch_set);

/* Convert bfd_mach_* into EF_SH*.  */
int sh_elf_get_flags_from_mach (unsigned long mach);

/* Other e_flags bits.  */

#define EF_SH_PIC		0x100	/* Segments of an FDPIC binary may
					   be relocated independently.  */
#define EF_SH_FDPIC		0x8000	/* Uses the FDPIC ABI.  */

/* Flags for the st_other symbol field.
   Keep away from the STV_ visibility flags (bit 0..1).  */

/* A reference to this symbol should by default add 1.  */
#define STO_SH5_ISA32 (1 << 2)

/* Section contains only SHmedia code (no SHcompact code).  */
#define SHF_SH5_ISA32		0x40000000

/* Section contains both SHmedia and SHcompact code, and possibly also
   constants.  */
#define SHF_SH5_ISA32_MIXED	0x20000000

/* If applied to a .cranges section, marks that the section is sorted by
   increasing cr_addr values.  */
#define SHT_SH5_CR_SORTED 0x80000001

/* Symbol should be handled as DataLabel (attached to global SHN_UNDEF
   symbols).  */
#define STT_DATALABEL STT_LOPROC

#include "elf/reloc-macros.h"

/* Relocations.  */
/* Relocations 10-32 and 128-255 are GNU extensions.
   25..32 and 10 are used for relaxation.  */
START_RELOC_NUMBERS (elf_sh_reloc_type)
  RELOC_NUMBER (R_SH_NONE, 0)
  RELOC_NUMBER (R_SH_DIR32, 1)
  RELOC_NUMBER (R_SH_REL32, 2)
  RELOC_NUMBER (R_SH_DIR8WPN, 3)
  RELOC_NUMBER (R_SH_IND12W, 4)
  RELOC_NUMBER (R_SH_DIR8WPL, 5)
  RELOC_NUMBER (R_SH_DIR8WPZ, 6)
  RELOC_NUMBER (R_SH_DIR8BP, 7)
  RELOC_NUMBER (R_SH_DIR8W, 8)
  RELOC_NUMBER (R_SH_DIR8L, 9)

  RELOC_NUMBER (R_SH_LOOP_START, 10)
  RELOC_NUMBER (R_SH_LOOP_END, 11)

  FAKE_RELOC (R_SH_FIRST_INVALID_RELOC, 12)
  FAKE_RELOC (R_SH_LAST_INVALID_RELOC, 21)

  RELOC_NUMBER (R_SH_GNU_VTINHERIT, 22)
  RELOC_NUMBER (R_SH_GNU_VTENTRY, 23)
  RELOC_NUMBER (R_SH_SWITCH8, 24)
  RELOC_NUMBER (R_SH_SWITCH16, 25)
  RELOC_NUMBER (R_SH_SWITCH32, 26)
  RELOC_NUMBER (R_SH_USES, 27)
  RELOC_NUMBER (R_SH_COUNT, 28)
  RELOC_NUMBER (R_SH_ALIGN, 29)
  RELOC_NUMBER (R_SH_CODE, 30)
  RELOC_NUMBER (R_SH_DATA, 31)
  RELOC_NUMBER (R_SH_LABEL, 32)

  RELOC_NUMBER (R_SH_DIR16, 33)
  RELOC_NUMBER (R_SH_DIR8, 34)
  RELOC_NUMBER (R_SH_DIR8UL, 35)
  RELOC_NUMBER (R_SH_DIR8UW, 36)
  RELOC_NUMBER (R_SH_DIR8U, 37)
  RELOC_NUMBER (R_SH_DIR8SW, 38)
  RELOC_NUMBER (R_SH_DIR8S, 39)
  RELOC_NUMBER (R_SH_DIR4UL, 40)
  RELOC_NUMBER (R_SH_DIR4UW, 41)
  RELOC_NUMBER (R_SH_DIR4U, 42)
  RELOC_NUMBER (R_SH_PSHA, 43)
  RELOC_NUMBER (R_SH_PSHL, 44)
  RELOC_NUMBER (R_SH_DIR5U, 45)
  RELOC_NUMBER (R_SH_DIR6U, 46)
  RELOC_NUMBER (R_SH_DIR6S, 47)
  RELOC_NUMBER (R_SH_DIR10S, 48)
  RELOC_NUMBER (R_SH_DIR10SW, 49)
  RELOC_NUMBER (R_SH_DIR10SL, 50)
  RELOC_NUMBER (R_SH_DIR10SQ, 51)
  FAKE_RELOC (R_SH_FIRST_INVALID_RELOC_2, 52)
  FAKE_RELOC (R_SH_LAST_INVALID_RELOC_2, 52)
  RELOC_NUMBER (R_SH_DIR16S, 53)
  FAKE_RELOC (R_SH_FIRST_INVALID_RELOC_3, 54)
  FAKE_RELOC (R_SH_LAST_INVALID_RELOC_3, 143)
  RELOC_NUMBER (R_SH_TLS_GD_32, 144)
  RELOC_NUMBER (R_SH_TLS_LD_32, 145)
  RELOC_NUMBER (R_SH_TLS_LDO_32, 146)
  RELOC_NUMBER (R_SH_TLS_IE_32, 147)
  RELOC_NUMBER (R_SH_TLS_LE_32, 148)
  RELOC_NUMBER (R_SH_TLS_DTPMOD32, 149)
  RELOC_NUMBER (R_SH_TLS_DTPOFF32, 150)
  RELOC_NUMBER (R_SH_TLS_TPOFF32, 151)
  FAKE_RELOC (R_SH_FIRST_INVALID_RELOC_4, 152)
  FAKE_RELOC (R_SH_LAST_INVALID_RELOC_4, 159)
  RELOC_NUMBER (R_SH_GOT32, 160)
  RELOC_NUMBER (R_SH_PLT32, 161)
  RELOC_NUMBER (R_SH_COPY, 162)
  RELOC_NUMBER (R_SH_GLOB_DAT, 163)
  RELOC_NUMBER (R_SH_JMP_SLOT, 164)
  RELOC_NUMBER (R_SH_RELATIVE, 165)
  RELOC_NUMBER (R_SH_GOTOFF, 166)
  RELOC_NUMBER (R_SH_GOTPC, 167)
  RELOC_NUMBER (R_SH_GOTPLT32, 168)
  RELOC_NUMBER (R_SH_GOT_LOW16, 169)
  RELOC_NUMBER (R_SH_GOT_MEDLOW16, 170)
  RELOC_NUMBER (R_SH_GOT_MEDHI16, 171)
  RELOC_NUMBER (R_SH_GOT_HI16, 172)
  RELOC_NUMBER (R_SH_GOTPLT_LOW16, 173)
  RELOC_NUMBER (R_SH_GOTPLT_MEDLOW16, 174)
  RELOC_NUMBER (R_SH_GOTPLT_MEDHI16, 175)
  RELOC_NUMBER (R_SH_GOTPLT_HI16, 176)
  RELOC_NUMBER (R_SH_PLT_LOW16, 177)
  RELOC_NUMBER (R_SH_PLT_MEDLOW16, 178)
  RELOC_NUMBER (R_SH_PLT_MEDHI16, 179)
  RELOC_NUMBER (R_SH_PLT_HI16, 180)
  RELOC_NUMBER (R_SH_GOTOFF_LOW16, 181)
  RELOC_NUMBER (R_SH_GOTOFF_MEDLOW16, 182)
  RELOC_NUMBER (R_SH_GOTOFF_MEDHI16, 183)
  RELOC_NUMBER (R_SH_GOTOFF_HI16, 184)
  RELOC_NUMBER (R_SH_GOTPC_LOW16, 185)
  RELOC_NUMBER (R_SH_GOTPC_MEDLOW16, 186)
  RELOC_NUMBER (R_SH_GOTPC_MEDHI16, 187)
  RELOC_NUMBER (R_SH_GOTPC_HI16, 188)
  RELOC_NUMBER (R_SH_GOT10BY4, 189)
  RELOC_NUMBER (R_SH_GOTPLT10BY4, 190)
  RELOC_NUMBER (R_SH_GOT10BY8, 191)
  RELOC_NUMBER (R_SH_GOTPLT10BY8, 192)
  RELOC_NUMBER (R_SH_COPY64, 193)
  RELOC_NUMBER (R_SH_GLOB_DAT64, 194)
  RELOC_NUMBER (R_SH_JMP_SLOT64, 195)
  RELOC_NUMBER (R_SH_RELATIVE64, 196)
  FAKE_RELOC (R_SH_FIRST_INVALID_RELOC_5, 197)
  FAKE_RELOC (R_SH_LAST_INVALID_RELOC_5, 200)
  RELOC_NUMBER (R_SH_GOT20, 201)
  RELOC_NUMBER (R_SH_GOTOFF20, 202)
  RELOC_NUMBER (R_SH_GOTFUNCDESC, 203)
  RELOC_NUMBER (R_SH_GOTFUNCDESC20, 204)
  RELOC_NUMBER (R_SH_GOTOFFFUNCDESC, 205)
  RELOC_NUMBER (R_SH_GOTOFFFUNCDESC20, 206)
  RELOC_NUMBER (R_SH_FUNCDESC, 207)
  RELOC_NUMBER (R_SH_FUNCDESC_VALUE, 208)
  FAKE_RELOC (R_SH_FIRST_INVALID_RELOC_6, 209)
  FAKE_RELOC (R_SH_LAST_INVALID_RELOC_6, 241)
  RELOC_NUMBER (R_SH_SHMEDIA_CODE, 242)
  RELOC_NUMBER (R_SH_PT_16, 243)
  RELOC_NUMBER (R_SH_IMMS16, 244)
  RELOC_NUMBER (R_SH_IMMU16, 245)
  RELOC_NUMBER (R_SH_IMM_LOW16, 246)
  RELOC_NUMBER (R_SH_IMM_LOW16_PCREL, 247)
  RELOC_NUMBER (R_SH_IMM_MEDLOW16, 248)
  RELOC_NUMBER (R_SH_IMM_MEDLOW16_PCREL, 249)
  RELOC_NUMBER (R_SH_IMM_MEDHI16, 250)
  RELOC_NUMBER (R_SH_IMM_MEDHI16_PCREL, 251)
  RELOC_NUMBER (R_SH_IMM_HI16, 252)
  RELOC_NUMBER (R_SH_IMM_HI16_PCREL, 253)
  RELOC_NUMBER (R_SH_64, 254)
  RELOC_NUMBER (R_SH_64_PCREL, 255)
END_RELOC_NUMBERS (R_SH_max)

#endif
@


1.23
log
@Upgrade header files to use GPLv3
@
text
@d89 6
d223 11
a233 1
  FAKE_RELOC (R_SH_LAST_INVALID_RELOC_5, 241)
@


1.22
log
@	* sh.h (EF_SH_BFD_TABLE): Set bfd_mach_sh for EF_SH_UNKNOWN.
@
text
@d2 2
a3 1
   Copyright 1998, 2000, 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.
d9 1
a9 1
   the Free Software Foundation; either version 2 of the License, or
@


1.21
log
@Update the address and phone number of the FSF organization
@
text
@d57 1
a57 1
/* EF_SH_UNKNOWN	*/ bfd_mach_sh3		, \
@


1.20
log
@Fix SH2A machine variants in order to correctly select instruction inheritance
@
text
@d18 1
a18 1
   Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
@


1.19
log
@include/elf/ChangeLog:
Introduce SH2a support.
2004-02-18  Corinna Vinschen  <vinschen@@redhat.com>
* sh.h (EF_SH2A_NOFPU): New.
2003-12-01  Michael Snyder  <msnyder@@redhat.com>
* sh.h (EF_SH2A): New.
bfd/ChangeLog:
Introduce SH2a support.
2004-02-18  Corinna Vinschen  <vinschen@@redhat.com>
* archures.c (bfd_mach_sh2a_nofpu): New.
* bfd-in2.h: Rebuilt.
* cpu-sh.c (SH2A_NOFPU_NEXT): New.
(arch_info_struct): Add sh2a_nofpu.
* elf32-sh.c (sh_elf_set_mach_from_flags): Handle sh2a_nofpu.
2003-12-29  DJ Delorie  <dj@@redhat.com>
* reloc.c: Add relocs for sh2a.
* bfd-in2.h: Regenerate.
* libbfd.hh: Regenerate.
2003-12-01  Michael Snyder  <msnyder@@redhat.com>
* archures.c (bfd_mach_sh2a): New.
* bfd-in2.h: Rebuilt.
* cpu-sh.c (SH_NEXT, SH2_NEXT, etc.): Change defines to enums.
(SH2A_NEXT): New.
(arch_info_struct): Add sh2a.
* elf32-sh.c (sh_elf_set_mach_from_flags): Handle sh2a.
binutils/ChangeLog:
* readelf.c (get_machine_flags <EM_SH>): Handle EF_SH2A and
EF_SH2A_NOFPU.
gas/ChangeLog:
Introduce SH2a support.
2004-02-24  Corinna Vinschen  <vinschen@@redhat.com>
* config/tc-sh.c (get_specific): Change arch_sh2a_up to
arch_sh2a_nofpu_up.
2004-02-24  Corinna Vinschen  <vinschen@@redhat.com>
* config/tc-sh.c (md_parse_option): Add sh2a-nofpu ISA handling.
2004-02-20  Corinna Vinschen  <vinschen@@redhat.com>
* config/tc-sh.c (sh_elf_final_processing): Move sh2a recognition
to end of conditional expression.
2004-02-20  Corinna Vinschen  <vinschen@@redhat.com>
* config/tc-sh.c: Add sh2a-nofpu support.
2003-12-29  DJ Delorie  <dj@@redhat.com>
* tc-sh.c: Add sh2a support.
(parse_reg): Add tbr.
(parse_at): Support @@@@(disp,tbr).
(get_specific): Support sh2a opcodes.
(insert4): New, for 4 byte relocs.
(build_Mytes): Support sh2a opcodes.
(md_apply_fix3_Mytes): Support sh2a opcodes.
2003-12-02  Michael Snyder  <msnyder@@redhat.com>
* config/tc-sh.c (md_parse_option): Handle sh2a.
(sh_elf_final_processing): Ditto.
gas/testsuite/ChangeLog:
2003-12-30  DJ Delorie  <dj@@redhat.com>
* gas/sh/sh2a.s: New.
* gas/sh/sh2a.d: New.
* gas/sh/basic.exp: Add it.
@
text
@d2 1
a2 1
   Copyright 1998, 2000, 2001, 2002, 2003, 2004 Free Software Foundation, Inc.
d45 5
d76 5
a80 1
/* EF_SH3_NOMMU		*/ bfd_mach_sh3_nommu
@


1.18
log
@2004-05-28  Andrew Stubbs <andrew.stubbs@@superh.com>

bfd:
	* Makefile.am: Regenerate dependencies.
	* Makefile.in: Regenerate.
	* archures.c: Add bfd_mach_sh3_nommu .
	* bfd-in2.h: Regenerate.
	* cpu-sh.c: Add sh3-nommu architecture.
	(bfd_to_arch_table): Create new table.
	(sh_get_arch_from_bfd_mach): Create new function.
	(sh_get_arch_up_from_bfd_mach): Create new function.
	(sh_merge_bfd_arch): Create new function.
	* elf32-sh.c (sh_ef_bfd_table): Add table.
	(sh_elf_check_relocs): Replace switch statement with
	use of sh_ef_bfd_table .
	(sh_elf_get_flags_from_mach): Add new function.
	(sh_find_elf_flags): Likewise.
	(sh_elf_copy_private_data): Replace most of non-elf contents
	with a call to sh_merge_bfd_arch() .

gas:
	* Makefile.am: Regenerate dependecies.
	* Makefile.in: Regenerate.
	* config/tc-sh.c (valid_arch): Make unsigned.
	(preset_target_arch): Likewise.
	(md_begin): Use new architecture flags system.
	(get_specific): Likewise.
	(assemble_ppi): Likewise.
	(md_assemble): Likewise. Also fix error check for bad opcodes.
	(md_parse_option): Likewise. Also generate -isa values according
	to the table in bfd/cpu-sh.c instead of just constants. Also
	allow <arch>-up ISA variants.
	(sh_elf_final_processing): Replace if-else chain with a call to
	sh_find_elf_flags().
	* testsuite/gas/sh/arch: New directory.
	* testsuite/gas/sh/arch/arch.exp: New test script.
	* testsuite/gas/sh/arch/arch_expected.txt: New file.
	* testsuite/gas/sh/arch/sh.s: New file.
	* testsuite/gas/sh/arch/sh2.s: New file.
	* testsuite/gas/sh/arch/sh-dsp.s: New file.
	* testsuite/gas/sh/arch/sh2e.s: New file.
	* testsuite/gas/sh/arch/sh3-nommu.s: New file.
	* testsuite/gas/sh/arch/sh3.s: New file.
	* testsuite/gas/sh/arch/sh3-dsp.s: New file.
	* testsuite/gas/sh/arch/sh3e.s: New file.
	* testsuite/gas/sh/arch/sh4-nommu-nofpu.s: New file.
	* testsuite/gas/sh/arch/sh4-nofpu.s: New file.
	* testsuite/gas/sh/arch/sh4.s: New file.
	* testsuite/gas/sh/arch/sh4a-nofpu.s: New file.
	* testsuite/gas/sh/arch/sh4al-dsp.s: New file.
	* testsuite/gas/sh/arch/sh4a.s: New file.

include/elf:
	* sh.h (EF_SH_HAS_DSP): Remove.
	(EF_SH_HAS_FP): Remove.
	(EF_SH_MERGE_MACH): Remove.
	(EF_SH4_NOFPU): Convert to decimal.
	(EF_SH4A_NOFPU): Likewise.
	(EF_SH4_NOMMU_NOFPU): Likewise.
	(EF_SH3_NOMMU): Add new macro.
	(EF_SH_BFD_TABLE): Likewise.
	(sh_find_elf_flags): Add prototype.
	(sh_elf_get_flags_from_mach): Likewise.

opcodes:
	* sh-dis.c (target_arch): Make unsigned.
	(print_insn_sh): Replace (most of) switch with a call to
	sh_get_arch_from_bfd_mach(). Also use new architecture flags system.
	* sh-opc.h: Redefine architecture flags values.
	Add sh3-nommu architecture.
	Reorganise <arch>_up macros so they make more visual sense.
	(SH_MERGE_ARCH_SET): Define new macro.
	(SH_VALID_BASE_ARCH_SET): Likewise.
	(SH_VALID_MMU_ARCH_SET): Likewise.
	(SH_VALID_CO_ARCH_SET): Likewise.
	(SH_VALID_ARCH_SET): Likewise.
	(SH_MERGE_ARCH_SET_VALID): Likewise.
	(SH_ARCH_SET_HAS_FPU): Likewise.
	(SH_ARCH_SET_HAS_DSP): Likewise.
	(SH_ARCH_UNKNOWN_ARCH): Likewise.
	(sh_get_arch_from_bfd_mach): Add prototype.
	(sh_get_arch_up_from_bfd_mach): Likewise.
	(sh_get_bfd_mach_from_arch_set): Likewise.
	(sh_merge_bfd_arc): Likewise.

ld:
	* testsuite/ld-sh/arch/arch.exp: New test script.
	* testsuite/ld-sh/arch/arch_expected.txt: New file.
	* testsuite/ld-sh/arch/sh.s: New file.
	* testsuite/ld-sh/arch/sh2.s: New file.
	* testsuite/ld-sh/arch/sh-dsp.s: New file.
	* testsuite/ld-sh/arch/sh2e.s: New file.
	* testsuite/ld-sh/arch/sh3-nommu.s: New file.
	* testsuite/ld-sh/arch/sh3.s: New file.
	* testsuite/ld-sh/arch/sh3-dsp.s: New file.
	* testsuite/ld-sh/arch/sh3e.s: New file.
	* testsuite/ld-sh/arch/sh4-nommu-nofpu.s: New file.
	* testsuite/ld-sh/arch/sh4-nofpu.s: New file.
	* testsuite/ld-sh/arch/sh4.s: New file.
	* testsuite/ld-sh/arch/sh4a-nofpu.s: New file.
	* testsuite/ld-sh/arch/sh4al-dsp.s: New file.
	* testsuite/ld-sh/arch/sh4a.s: New file.
@
text
@d37 1
d42 1
d65 2
a66 1
/* 13, 14, 15		*/ 0, 0, 0, \
d70 1
a70 1
/* 19			*/ 0, \
@


1.17
log
@2003-03-03  Andrew Stubbs  <andrew.stubbs@@superh.com>

opcodes:
	* sh-dis.c (print_insn_sh): Don't disassemble fp instructions in
	nofpu mode.  Add BFD type bfd_mach_sh4_nommu_nofpu.
	* sh-opc.h: Add sh4_nommu_nofpu architecture and adjust instructions
	accordingly.
bfd:
	* archures.c: Add bfd_mach_sh4_nommu_nofpu.
	* cpu-sh.c: Ditto.
	* elf32-sh.c: Ditto.
	* bfd-in2.h: Regenerate.
include/elf:
	* sh.h: Add EF_SH4_NOMMU_NOFPU.
gas:
	* config/tc-sh.c (md_parse_option): Add -isa=sh4-nofpu and
	-isa=sh4-nommu-nofpu options. Adjust help messages accordingly.
	(sh_elf_final_processing): Output BFD type sh4_nofpu if that is
	the most general type or the user specifically requested it.
	(md_assemble): Add a new error message for when an instruction
	is understood, but is not allowed due to an -isa option.
@
text
@a29 1
#define EF_SH_HAS_DSP(flags) (((flags) & EF_SH_MACH_MASK & ~3) == 4)
a32 1
#define EF_SH_HAS_FP(flags) ((flags) & 8)
d38 4
a41 3
#define EF_SH4_NOFPU	   0x10
#define EF_SH4A_NOFPU	   0x11
#define EF_SH4_NOMMU_NOFPU 0x12
d46 29
a74 34
#define EF_SH_MERGE_MACH(mach1, mach2) \
  (((((mach1) == EF_SH3 || (mach1) == EF_SH_UNKNOWN) && (mach2) == EF_SH_DSP) \
    || ((mach1) == EF_SH_DSP \
	&& ((mach2) == EF_SH3 || (mach2) == EF_SH_UNKNOWN))) \
   ? EF_SH3_DSP \
   : (((mach1) < EF_SH3 && (mach2) == EF_SH_UNKNOWN) \
      || ((mach2) < EF_SH3 && (mach1) == EF_SH_UNKNOWN)) \
   ? EF_SH3 \
   : ((mach1) == EF_SH2E && EF_SH_HAS_FP (mach2)) \
   ? (mach2) \
   : ((mach2) == EF_SH2E && EF_SH_HAS_FP (mach1)) \
   ? (mach1) \
   : (((mach1) == EF_SH2E && (mach2) == EF_SH_UNKNOWN) \
      || ((mach2) == EF_SH2E && (mach1) == EF_SH_UNKNOWN)) \
   ? EF_SH2E \
   : (((mach1) == EF_SH3E && (mach2) == EF_SH_UNKNOWN) \
      || ((mach2) == EF_SH3E && (mach1) == EF_SH_UNKNOWN)) \
   ? EF_SH4 \
   /* ??? SH4?  Why not SH3E?  */ \
   : ((((mach1) == EF_SH4_NOFPU || (mach1) == EF_SH4A_NOFPU) \
       && EF_SH_HAS_DSP (mach2)) \
      || (((mach2) == EF_SH4_NOFPU || (mach2) == EF_SH4A_NOFPU) \
	  && EF_SH_HAS_DSP (mach1))) \
   ? EF_SH4AL_DSP \
   : ((mach1) == EF_SH4_NOFPU && EF_SH_HAS_FP (mach2)) \
   ? ((mach2) < EF_SH4A) ? EF_SH4 : (mach2) \
   : ((mach2) == EF_SH4_NOFPU && EF_SH_HAS_FP (mach1)) \
   ? ((mach1) < EF_SH4A) ? EF_SH4 : (mach1) \
   : ((mach1) == EF_SH4A_NOFPU && EF_SH_HAS_FP (mach2)) \
   ? ((mach2) <= EF_SH4A) ? EF_SH4A : (mach2) \
   : ((mach2) == EF_SH4A_NOFPU && EF_SH_HAS_FP (mach1)) \
   ? ((mach1) <= EF_SH4A) ? EF_SH4A : (mach1) \
   : (((mach1) == EF_SH2E ? 7 : (mach1)) > ((mach2) == EF_SH2E ? 7 : (mach2)) \
      ? (mach1) : (mach2)))
@


1.16
log
@	* sh.h (EF_SH4A, EF_SH4AL_DSP, EF_SH4_NOFPU, EF_SH4A_NOFPU): New.
	(EF_SH_MERGE_MACH): Combine them.
@
text
@d2 1
a2 1
   Copyright 1998, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.
d42 1
@


1.16.8.1
log
@Merge mainline to intercu branch.
@
text
@d2 1
a2 1
   Copyright 1998, 2000, 2001, 2002, 2003, 2004 Free Software Foundation, Inc.
a41 1
#define EF_SH4_NOMMU_NOFPU 0x12
@


1.16.8.2
log
@Merge mainline to intercu branch - 2004-09-15
@
text
@d30 1
d34 1
a38 1
#define EF_SH2A            13
d40 3
a42 5
#define EF_SH4_NOFPU	   16
#define EF_SH4A_NOFPU	   17
#define EF_SH4_NOMMU_NOFPU 18
#define EF_SH2A_NOFPU      19
#define EF_SH3_NOMMU       20
d47 34
a80 30
/* Define the mapping from ELF to bfd mach numbers.
   bfd_mach_* are defined in bfd_in2.h (generated from
   archures.c).  */
#define EF_SH_BFD_TABLE \
/* EF_SH_UNKNOWN	*/ bfd_mach_sh3		, \
/* EF_SH1		*/ bfd_mach_sh		, \
/* EF_SH2		*/ bfd_mach_sh2		, \
/* EF_SH3		*/ bfd_mach_sh3		, \
/* EF_SH_DSP		*/ bfd_mach_sh_dsp	, \
/* EF_SH3_DSP		*/ bfd_mach_sh3_dsp	, \
/* EF_SHAL_DSP		*/ bfd_mach_sh4al_dsp	, \
/* 7			*/ 0, \
/* EF_SH3E		*/ bfd_mach_sh3e	, \
/* EF_SH4		*/ bfd_mach_sh4		, \
/* EF_SH5		*/ 0, \
/* EF_SH2E		*/ bfd_mach_sh2e	, \
/* EF_SH4A		*/ bfd_mach_sh4a	, \
/* EF_SH2A		*/ bfd_mach_sh2a        , \
/* 14, 15		*/ 0, 0, \
/* EF_SH4_NOFPU		*/ bfd_mach_sh4_nofpu	, \
/* EF_SH4A_NOFPU	*/ bfd_mach_sh4a_nofpu	, \
/* EF_SH4_NOMMU_NOFPU	*/ bfd_mach_sh4_nommu_nofpu, \
/* EF_SH2A_NOFPU	*/ bfd_mach_sh2a_nofpu  , \
/* EF_SH3_NOMMU		*/ bfd_mach_sh3_nommu

/* Convert arch_sh* into EF_SH*.  */
int sh_find_elf_flags (unsigned int arch_set);

/* Convert bfd_mach_* into EF_SH*.  */
int sh_elf_get_flags_from_mach (unsigned long mach);
@


1.15
log
@* sh.h (R_SH_SWITCH8, R_SH_GNU_VTINHERIT, R_SH_GNU_VTENTRY,
R_SH_LOOP_START,R_SH_LOOP_END): Move to "reserved" spaces.
(R_SH_DIR16, R_SH_DIR8, R_SH_DIR8UL, R_SH_DIR8UW, R_SH_DIR8U,
R_SH_DIR8SW, R_SH_DIR8S, R_SH_DIR4UL, R_SH_DIR4UW, R_SH_DIR4U,
R_SH_PSHA, R_SH_PSHL): New.

* elf32-sh.c (sh_elf_howto_table): R_SH_SWITCH8,
R_SH_GNU_VTINHERIT, R_SH_GNU_VTENTRY,
R_SH_LOOP_START,R_SH_LOOP_END moved to "reserved" spaces,
R_SH_DIR16, R_SH_DIR8, R_SH_DIR8UL, R_SH_DIR8UW, R_SH_DIR8U,
R_SH_DIR8SW, R_SH_DIR8S, R_SH_DIR4UL, R_SH_DIR4UW, R_SH_DIR4U,
R_SH_PSHA, R_SH_PSHL added.
(sh_reloc_map): Add R_SH_DIR16 and R_SH_DIR8.
(sh_elf_relocate_section): Support new relocs.
@
text
@d30 1
a30 1
#define EF_SH_HAS_DSP(flags) ((flags) & 4)
d33 1
d38 4
d64 14
@


1.14
log
@Fix sh-elf linker relaxation:

gcc:
	* config/sh/sh.h (EXTRA_SPECS): Add subtarget_asm_relax_spec and
	subtarget_asm_isa_spec.
	(SUBTARGET_ASM_RELAX_SPEC, SUBTARGET_ASM_ISA_SPEC): Define.
	(ASM_SPEC): Define as SH_ASM_SPEC.
	(SH_ASM_SPEC): New; take the role of ASM_SPEC, but safe from svr4.h.
	Use subtarget_asm_relax_spec and subtarget_asm_isa_spec.
	* config/sh/elf.h (ASM_SPEC): Use SH_ASM_SPEC.
	(SUBTARGET_ASM_ISA_SPEC): Undef / define.
gcc/testsuite:
	gcc.dg/sh-relax.c: New test.

include/elf:
	* sh.h (EF_SH_MERGE_MACH): Make sure SH2E & SH3/SH3E merge to SH3E,
	and SH2E & SH4 merge to SH4, not SH2E.

gas:
	* config/tc-sh.c (sh_dsp): Replace with preset_target_arch.
	(md_begin): Use preset_target_arch.
	(md_longopts): Make isa option unconditional.
	(md_parse_option): Make OPTION_DSP and OPTION_ISA sh4 / any
	set preset_target_arch.
	(md_apply_fix3): If BFD_ASSEMBLER, adjust SWITCH_TABLE fixups
	by -S_GET_VALUE  (fixP->fx_subsy).
	(tc_gen_reloc): For SWITCH_TABLE fixups, the symbol is fixp->fx_subsy,
	and the addend is 0.
	Adjust addend of R_SH_IND12W relocations by fixp->fx_offset - 4.
	* config/tc-sh.h (TC_FORCE_RELOCATION_SUB_LOCAL): Define.

bfd:
	elf32-sh.c (sh_elf_howto_tab): Make R_SH_IND12W into an ordinary
	relocation (no special function), and make it non-partial_inplace.
	(sh_elf_relax_section): When creating a bsr, use a consistent value
	no matter if the symbol is extern or not;  set addend to -4.
	Don't swap load / non-load instructions for SH4.
	(sh_elf_relax_delete_bytes): In R_SH_IND12W case, check the offset
	rather than if the symbol is external to determine if adjusting the
	offset makes sense.  Adjust the addend too if appropriate.
	(sh_elf_relocate_section): In R_SH_IND12W, don't fiddle with the
	relocation.
@
text
@d86 2
a87 2
/* Relocations 25ff are GNU extensions.
   25..33 are used for relaxation and use the same constants as COFF uses.  */
d99 10
a108 2
  FAKE_RELOC (R_SH_FIRST_INVALID_RELOC, 10)
  FAKE_RELOC (R_SH_LAST_INVALID_RELOC, 24)
d117 13
a129 7
  RELOC_NUMBER (R_SH_SWITCH8, 33)
  RELOC_NUMBER (R_SH_GNU_VTINHERIT, 34)
  RELOC_NUMBER (R_SH_GNU_VTENTRY, 35)
  RELOC_NUMBER (R_SH_LOOP_START, 36)
  RELOC_NUMBER (R_SH_LOOP_END, 37)
  FAKE_RELOC (R_SH_FIRST_INVALID_RELOC_2, 38)
  FAKE_RELOC (R_SH_LAST_INVALID_RELOC_2, 44)
d137 4
a140 1
  FAKE_RELOC (R_SH_FIRST_INVALID_RELOC_3, 52)
@


1.13
log
@Add SH2E support
@
text
@d59 2
a60 1
   : ((mach1) > (mach2) ? (mach1) : (mach2)))
@


1.12
log
@include/elf/ChangeLog
	* sh.h: Split out various bits to bfd/elf32-sh64.h.

include/opcode/ChangeLog
	* m68hc11.h (cpu6812s): Define.

bfd/ChangeLog
	* elf-bfd.h (struct bfd_elf_section_data): Remove tdata.  Change
	dynindx to an int.  Rearrange for better packing.
	* elf.c (_bfd_elf_new_section_hook): Don't alloc if already done.
	* elf32-mips.c (bfd_elf32_new_section_hook): Define.
	* elf32-sh64.h: New.  Split out from include/elf/sh.h.
	(struct _sh64_elf_section_data): New struct.
	(sh64_elf_section_data): Don't dereference sh64_info (was tdata).
	* elf32-sh64-com.c: Include elf32-sh64.h.
	* elf32-sh64.c: Likewise.
	(sh64_elf_new_section_hook): New function.
	(bfd_elf32_new_section_hook): Define.
	(sh64_elf_fake_sections): Adjust for sh64_elf_section_data change.
	(sh64_bfd_elf_copy_private_section_data): Likewise.
	(sh64_elf_final_write_processing): Likewise.
	* elf32-sparc.c (struct elf32_sparc_section_data): New.
	(elf32_sparc_new_section_hook): New function.
	(SET_SEC_DO_RELAX, SEC_DO_RELAX): Delete.
	(sec_do_relax): Define.
	(elf32_sparc_relax_section): Adjust to use sec_do_relax.
	(elf32_sparc_relocate_section): Likewise.
	* elf64-mips.c (bfd_elf64_new_section_hook): Define.
	* elf64-mmix.c (struct _mmix_elf_section_data): New.
	(mmix_elf_section_data): Define.  Use throughout file.
	(mmix_elf_new_section_hook): New function.
	(bfd_elf64_new_section_hook): Define.
	* elf64-ppc.c (struct _ppc64_elf_section_data): New.
	(ppc64_elf_section_data): Define.  Use throughout.
	(ppc64_elf_new_section_hook): New function.
	(bfd_elf64_new_section_hook): Define.
	* elf64-sparc.c (struct sparc64_elf_section_data): New.
	(sparc64_elf_new_section_hook): New function.
	(SET_SEC_DO_RELAX, SEC_DO_RELAX): Delete.
	(sec_do_relax): Define.
	(sparc64_elf_relax_section): Adjust to use sec_do_relax.
	(sparc64_elf_relocate_section): Likewise.
	(bfd_elf64_new_section_hook): Define.
	* elfn32-mips.c (bfd_elf32_new_section_hook): Define.
	* elfxx-mips.c (struct _mips_elf_section_data): New.
	(mips_elf_section_data): Define.  Use throughout.
	(_bfd_mips_elf_new_section_hook): New function.
	(mips_elf_create_got_section): Don't alloc used_by_bfd.
	* elfxx-mips.h (_bfd_mips_elf_new_section_hook): Declare.
	* elfxx-target.h (bfd_elfNN_new_section_hook): Add #ifndef.
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.

opcodes/ChangeLog
	* sh64-dis.c: Include elf32-sh64.h.
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.

gas/ChangeLog
	* config/tc-sh64.c (shmedia_frob_section_type): Adjust for changed
	sh64_elf_section_data.
	* config/tc-sh64.h: Include elf32-sh64.h.
	* config/tc-m68hc11.c: Don't include stdio.h.
	(md_show_usage): Fix missing continuation.
	* Makefile.am: Run "make dep-am".
	* Makefile.in: Regenerate.

ld/ChangeLog
	* emultempl/sh64elf.em: Include elf32-sh64.h.
	(sh64_elf_${EMULATION_NAME}_before_allocation): Adjust for changed
	sh64_elf_section_data.
	(sh64_elf_${EMULATION_NAME}_after_allocation): Likewise.
@
text
@d36 1
d49 7
@


1.11
log
@s/boolean/bfd_boolean/ s/true/TRUE/ s/false/FALSE/.  Simplify
comparisons of bfd_boolean vars with TRUE/FALSE.  Formatting.
@
text
@d2 1
a2 1
   Copyright 1998, 2000, 2001, 2002 Free Software Foundation, Inc.
a72 55

#define SH64_CRANGES_SECTION_NAME ".cranges"
enum sh64_elf_cr_type {
  CRT_NONE = 0,
  CRT_DATA = 1,
  CRT_SH5_ISA16 = 2,
  CRT_SH5_ISA32 = 3
};

/* The official definition is this:

    typedef struct {
      Elf32_Addr cr_addr;
      Elf32_Word cr_size;
      Elf32_Half cr_type;
    } Elf32_CRange;

   but we have no use for that exact type.  Instead we use this struct for
   the internal representation.  */
typedef struct {
  bfd_vma cr_addr;
  bfd_size_type cr_size;
  enum sh64_elf_cr_type cr_type;
} sh64_elf_crange;

#define SH64_CRANGE_SIZE (4 + 4 + 2)
#define SH64_CRANGE_CR_ADDR_OFFSET 0
#define SH64_CRANGE_CR_SIZE_OFFSET 4
#define SH64_CRANGE_CR_TYPE_OFFSET (4 + 4)

/* Get the contents type of an arbitrary address, or return CRT_NONE.  */
extern enum sh64_elf_cr_type sh64_get_contents_type
  PARAMS ((asection *, bfd_vma, sh64_elf_crange *));

/* Simpler interface.
   FIXME: This seems redundant now that we export the interface above.  */
extern bfd_boolean sh64_address_is_shmedia PARAMS ((asection *, bfd_vma));

extern int _bfd_sh64_crange_qsort_cmpb PARAMS ((const void *, const void *));
extern int _bfd_sh64_crange_qsort_cmpl PARAMS ((const void *, const void *));
extern int _bfd_sh64_crange_bsearch_cmpb PARAMS ((const void *, const void *));
extern int _bfd_sh64_crange_bsearch_cmpl PARAMS ((const void *, const void *));

/* We put this in elf_section_data (section)->tdata.  */
struct sh64_section_data
{
  flagword contents_flags;

  /* Only used in the cranges section, but we don't have an official
     backend-specific bfd field.  */
  bfd_size_type cranges_growth;
};

#define sh64_elf_section_data(sec) \
  ((struct sh64_section_data *) ((elf_section_data (sec))->tdata))
@


1.10
log
@	* sh.h: Add SH TLS relocs.
@
text
@d109 1
a109 1
extern boolean sh64_address_is_shmedia PARAMS ((asection *, bfd_vma));
@


1.9
log
@bfd/
* Makefile.am (BFD32_BACKENDS): Add elf32-sh64-com.lo.
(BFD32_BACKENDS_CFILES): Add elf32-sh64-com.c.
(elf32-sh64-com.lo): New dependency list.
* Makefile.in: Regenerate.
* configure.in (bfd_elf32_sh64_vec, bfd_elf32_sh64l_vec)
(bfd_elf32_sh64nbsd_vec, bfd_elf32_sh64lnbsd_vec): Add
elf32-sh64-com.lo.
* configure: Regenerate.
* elf32-sh64.c (sh64_address_in_cranges)
(sh64_get_contents_type, sh64_address_is_shmedia): Move to...
(crange_qsort_cmpb, crange_qsort_cmpl, crange_bsearch_cmpb):
(crange_bsearch_cmpl): Prepend _bfd_sh64_ to name and move to...
* elf32-sh64-com.c: ...here.  New file.

include/elf/
* sh.h (_bfd_sh64_crange_qsort_cmpb, _bfd_sh64_crange_qsort_cmpl)
(_bfd_sh64_crange_bsearch_cmpb, _bfd_sh64_crange_bsearch_cmpl): New
prototypes.
@
text
@d170 11
a180 1
  FAKE_RELOC (R_SH_LAST_INVALID_RELOC_3, 159)
d218 2
a219 2
  FAKE_RELOC (R_SH_FIRST_INVALID_RELOC_4, 197)
  FAKE_RELOC (R_SH_LAST_INVALID_RELOC_4, 241)
@


1.9.14.1
log
@Merge drow-cplus-merge-20021025 to drow-cplus-branch.
@
text
@d170 1
a170 11
  FAKE_RELOC (R_SH_LAST_INVALID_RELOC_3, 143)
  RELOC_NUMBER (R_SH_TLS_GD_32, 144)
  RELOC_NUMBER (R_SH_TLS_LD_32, 145)
  RELOC_NUMBER (R_SH_TLS_LDO_32, 146)
  RELOC_NUMBER (R_SH_TLS_IE_32, 147)
  RELOC_NUMBER (R_SH_TLS_LE_32, 148)
  RELOC_NUMBER (R_SH_TLS_DTPMOD32, 149)
  RELOC_NUMBER (R_SH_TLS_DTPOFF32, 150)
  RELOC_NUMBER (R_SH_TLS_TPOFF32, 151)
  FAKE_RELOC (R_SH_FIRST_INVALID_RELOC_4, 152)
  FAKE_RELOC (R_SH_LAST_INVALID_RELOC_4, 159)
d208 2
a209 2
  FAKE_RELOC (R_SH_FIRST_INVALID_RELOC_5, 197)
  FAKE_RELOC (R_SH_LAST_INVALID_RELOC_5, 241)
@


1.9.14.2
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@d2 1
a2 1
   Copyright 1998, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.
d30 1
a30 1
#define EF_SH_HAS_DSP(flags) (((flags) & EF_SH_MACH_MASK & ~3) == 4)
a32 1
#define EF_SH4AL_DSP	   6
a35 5
#define EF_SH2E            11
#define EF_SH4A		   12

#define EF_SH4_NOFPU	   0x10
#define EF_SH4A_NOFPU	   0x11
a47 7
   : ((mach1) == EF_SH2E && EF_SH_HAS_FP (mach2)) \
   ? (mach2) \
   : ((mach2) == EF_SH2E && EF_SH_HAS_FP (mach1)) \
   ? (mach1) \
   : (((mach1) == EF_SH2E && (mach2) == EF_SH_UNKNOWN) \
      || ((mach2) == EF_SH2E && (mach1) == EF_SH_UNKNOWN)) \
   ? EF_SH2E \
d51 1
a51 16
   /* ??? SH4?  Why not SH3E?  */ \
   : ((((mach1) == EF_SH4_NOFPU || (mach1) == EF_SH4A_NOFPU) \
       && EF_SH_HAS_DSP (mach2)) \
      || (((mach2) == EF_SH4_NOFPU || (mach2) == EF_SH4A_NOFPU) \
	  && EF_SH_HAS_DSP (mach1))) \
   ? EF_SH4AL_DSP \
   : ((mach1) == EF_SH4_NOFPU && EF_SH_HAS_FP (mach2)) \
   ? ((mach2) < EF_SH4A) ? EF_SH4 : (mach2) \
   : ((mach2) == EF_SH4_NOFPU && EF_SH_HAS_FP (mach1)) \
   ? ((mach1) < EF_SH4A) ? EF_SH4 : (mach1) \
   : ((mach1) == EF_SH4A_NOFPU && EF_SH_HAS_FP (mach2)) \
   ? ((mach2) <= EF_SH4A) ? EF_SH4A : (mach2) \
   : ((mach2) == EF_SH4A_NOFPU && EF_SH_HAS_FP (mach1)) \
   ? ((mach1) <= EF_SH4A) ? EF_SH4A : (mach1) \
   : (((mach1) == EF_SH2E ? 7 : (mach1)) > ((mach2) == EF_SH2E ? 7 : (mach2)) \
      ? (mach1) : (mach2)))
d74 55
d132 2
a133 2
/* Relocations 10-32 and 128-255 are GNU extensions.
   25..32 and 10 are used for relaxation.  */
d145 2
a146 10

  RELOC_NUMBER (R_SH_LOOP_START, 10)
  RELOC_NUMBER (R_SH_LOOP_END, 11)

  FAKE_RELOC (R_SH_FIRST_INVALID_RELOC, 12)
  FAKE_RELOC (R_SH_LAST_INVALID_RELOC, 21)

  RELOC_NUMBER (R_SH_GNU_VTINHERIT, 22)
  RELOC_NUMBER (R_SH_GNU_VTENTRY, 23)
  RELOC_NUMBER (R_SH_SWITCH8, 24)
d155 7
a161 13

  RELOC_NUMBER (R_SH_DIR16, 33)
  RELOC_NUMBER (R_SH_DIR8, 34)
  RELOC_NUMBER (R_SH_DIR8UL, 35)
  RELOC_NUMBER (R_SH_DIR8UW, 36)
  RELOC_NUMBER (R_SH_DIR8U, 37)
  RELOC_NUMBER (R_SH_DIR8SW, 38)
  RELOC_NUMBER (R_SH_DIR8S, 39)
  RELOC_NUMBER (R_SH_DIR4UL, 40)
  RELOC_NUMBER (R_SH_DIR4UW, 41)
  RELOC_NUMBER (R_SH_DIR4U, 42)
  RELOC_NUMBER (R_SH_PSHA, 43)
  RELOC_NUMBER (R_SH_PSHL, 44)
d169 1
a169 4
  FAKE_RELOC (R_SH_FIRST_INVALID_RELOC_2, 52)
  FAKE_RELOC (R_SH_LAST_INVALID_RELOC_2, 52)
  RELOC_NUMBER (R_SH_DIR16S, 53)
  FAKE_RELOC (R_SH_FIRST_INVALID_RELOC_3, 54)
@


1.9.12.1
log
@Merge with mainline; merge tag carlton_dictionary-20021011-merge.
@
text
@d170 1
a170 11
  FAKE_RELOC (R_SH_LAST_INVALID_RELOC_3, 143)
  RELOC_NUMBER (R_SH_TLS_GD_32, 144)
  RELOC_NUMBER (R_SH_TLS_LD_32, 145)
  RELOC_NUMBER (R_SH_TLS_LDO_32, 146)
  RELOC_NUMBER (R_SH_TLS_IE_32, 147)
  RELOC_NUMBER (R_SH_TLS_LE_32, 148)
  RELOC_NUMBER (R_SH_TLS_DTPMOD32, 149)
  RELOC_NUMBER (R_SH_TLS_DTPOFF32, 150)
  RELOC_NUMBER (R_SH_TLS_TPOFF32, 151)
  FAKE_RELOC (R_SH_FIRST_INVALID_RELOC_4, 152)
  FAKE_RELOC (R_SH_LAST_INVALID_RELOC_4, 159)
d208 2
a209 2
  FAKE_RELOC (R_SH_FIRST_INVALID_RELOC_5, 197)
  FAKE_RELOC (R_SH_LAST_INVALID_RELOC_5, 241)
@


1.9.12.2
log
@2002-12-23  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021223-merge.
@
text
@d109 1
a109 1
extern bfd_boolean sh64_address_is_shmedia PARAMS ((asection *, bfd_vma));
@


1.9.12.3
log
@2003-02-07  David Carlton  <carlton@@math.stanford.edu>

	* Merge with mainline; tag is carlton_dictionary-20030207-merge.
@
text
@d2 1
a2 1
   Copyright 1998, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.
a35 1
#define EF_SH2E            11
a47 7
   : ((mach1) == EF_SH2E && EF_SH_HAS_FP (mach2)) \
   ? (mach2) \
   : ((mach2) == EF_SH2E && EF_SH_HAS_FP (mach1)) \
   ? (mach1) \
   : (((mach1) == EF_SH2E && (mach2) == EF_SH_UNKNOWN) \
      || ((mach2) == EF_SH2E && (mach1) == EF_SH_UNKNOWN)) \
   ? EF_SH2E \
d73 55
@


1.9.12.4
log
@2003-03-05  David Carlton  <carlton@@math.stanford.edu>

	* Merge with mainline.  Tag is carlton_dictionary-20030305-merge.
@
text
@d59 1
a59 2
   : (((mach1) == EF_SH2E ? 7 : (mach1)) > ((mach2) == EF_SH2E ? 7 : (mach2)) \
      ? (mach1) : (mach2)))
@


1.9.12.5
log
@2003-11-11  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton-dictionary-20031111-merge.
@
text
@d30 1
a30 1
#define EF_SH_HAS_DSP(flags) (((flags) & EF_SH_MACH_MASK & ~3) == 4)
a32 1
#define EF_SH4AL_DSP	   6
a36 4
#define EF_SH4A		   12

#define EF_SH4_NOFPU	   0x10
#define EF_SH4A_NOFPU	   0x11
a58 14
   /* ??? SH4?  Why not SH3E?  */ \
   : ((((mach1) == EF_SH4_NOFPU || (mach1) == EF_SH4A_NOFPU) \
       && EF_SH_HAS_DSP (mach2)) \
      || (((mach2) == EF_SH4_NOFPU || (mach2) == EF_SH4A_NOFPU) \
	  && EF_SH_HAS_DSP (mach1))) \
   ? EF_SH4AL_DSP \
   : ((mach1) == EF_SH4_NOFPU && EF_SH_HAS_FP (mach2)) \
   ? ((mach2) < EF_SH4A) ? EF_SH4 : (mach2) \
   : ((mach2) == EF_SH4_NOFPU && EF_SH_HAS_FP (mach1)) \
   ? ((mach1) < EF_SH4A) ? EF_SH4 : (mach1) \
   : ((mach1) == EF_SH4A_NOFPU && EF_SH_HAS_FP (mach2)) \
   ? ((mach2) <= EF_SH4A) ? EF_SH4A : (mach2) \
   : ((mach2) == EF_SH4A_NOFPU && EF_SH_HAS_FP (mach1)) \
   ? ((mach1) <= EF_SH4A) ? EF_SH4A : (mach1) \
d86 2
a87 2
/* Relocations 10-32 and 128-255 are GNU extensions.
   25..32 and 10 are used for relaxation.  */
d99 2
a100 10

  RELOC_NUMBER (R_SH_LOOP_START, 10)
  RELOC_NUMBER (R_SH_LOOP_END, 11)

  FAKE_RELOC (R_SH_FIRST_INVALID_RELOC, 12)
  FAKE_RELOC (R_SH_LAST_INVALID_RELOC, 21)

  RELOC_NUMBER (R_SH_GNU_VTINHERIT, 22)
  RELOC_NUMBER (R_SH_GNU_VTENTRY, 23)
  RELOC_NUMBER (R_SH_SWITCH8, 24)
d109 7
a115 13

  RELOC_NUMBER (R_SH_DIR16, 33)
  RELOC_NUMBER (R_SH_DIR8, 34)
  RELOC_NUMBER (R_SH_DIR8UL, 35)
  RELOC_NUMBER (R_SH_DIR8UW, 36)
  RELOC_NUMBER (R_SH_DIR8U, 37)
  RELOC_NUMBER (R_SH_DIR8SW, 38)
  RELOC_NUMBER (R_SH_DIR8S, 39)
  RELOC_NUMBER (R_SH_DIR4UL, 40)
  RELOC_NUMBER (R_SH_DIR4UW, 41)
  RELOC_NUMBER (R_SH_DIR4U, 42)
  RELOC_NUMBER (R_SH_PSHA, 43)
  RELOC_NUMBER (R_SH_PSHL, 44)
d123 1
a123 4
  FAKE_RELOC (R_SH_FIRST_INVALID_RELOC_2, 52)
  FAKE_RELOC (R_SH_LAST_INVALID_RELOC_2, 52)
  RELOC_NUMBER (R_SH_DIR16S, 53)
  FAKE_RELOC (R_SH_FIRST_INVALID_RELOC_3, 54)
@


1.8
log
@Contribute sh64-elf.
2002-01-23  Alexandre Oliva  <aoliva@@redhat.com>
* sh.h (R_SH_GOTPLT32, R_SH_GOT_LOW16, R_SH_GOT_MEDLOW16,
R_SH_GOT_MEDHI16, R_SH_GOT_HI16, R_SH_GOTPLT_LOW16,
R_SH_GOTPLT_MEDLOW16, R_SH_GOTPLT_MEDHI16, R_SH_GOTPLT_HI16,
R_SH_PLT_LOW16, R_SH_PLT_MEDLOW16, R_SH_PLT_MEDHI16,
R_SH_PLT_HI16, R_SH_GOTOFF_LOW16, R_SH_GOTOFF_MEDLOW16,
R_SH_GOTOFF_MEDHI16, R_SH_GOTOFF_HI16, R_SH_GOTPC_LOW16,
R_SH_GOTPC_MEDLOW16, R_SH_GOTPC_MEDHI16, R_SH_GOTPC_HI16,
R_SH_GOT10BY4, R_SH_GOTPLT10BY4, R_SH_GOT10BY8,
R_SH_GOTPLT10BY8, R_SH_COPY64, R_SH_GLOB_DAT64, R_SH_JMP_SLOT64,
R_SH_RELATIVE64): New relocs.
(R_SH_FIRST_INVALID_RELOC_4): Adjust.
2001-05-16  Alexandre Oliva  <aoliva@@redhat.com>
* sh.h: Renumbered and renamed some SH5 relocations to match
official numbers and names; moved unmaching ones to the range
0xf2-0xff.
2001-01-06  Hans-Peter Nilsson  <hpn@@cygnus.com>
* sh.h (sh64_get_contents_type): Declare.
(sh64_address_is_shmedia): Likewise.
2000-12-30  Hans-Peter Nilsson  <hpn@@cygnus.com>
* sh.h (sh64_elf_crange): New type.
(struct sh64_section_data): New.
(sh64_elf_section_data): New macro.
(EF_SH5): Rename back from EF_SH64.
2000-12-18  Hans-Peter Nilsson  <hpn@@cygnus.com>
* sh.h (SHF_SH5_ISA32_MIXED, SHT_SH5_CR_SORTED,
SH64_CRANGES_SECTION_NAME, SH64_CRANGE_SIZE,
SH64_CRANGE_CR_ADDR_OFFSET, SH64_CRANGE_CR_SIZE_OFFSET,
SH64_CRANGE_CR_TYPE_OFFSET): New macros.
2000-12-12  Hans-Peter Nilsson  <hpn@@cygnus.com>
* sh.h (EF_SH64): Don't define EF_SH64_ABI64.
2000-11-27  Hans-Peter Nilsson  <hpn@@cygnus.com>
* sh.h (EF_SH64_32BIT_ABI, EF_SH64_64BIT_ABI): Delete.
(EF_SH64_ABI64): New.
2000-11-23  Hans-Peter Nilsson  <hpn@@cygnus.com>
* sh.h (EF_SH64): Rename from EF_SH5.
(EF_SH64_32BIT_ABI): New.
(EF_SH64_64BIT_ABI): New.
(R_SH_PT_16, R_SH_SHMEDIA_CODE
R_SH_IMMU5, R_SH_IMMS6, R_SH_IMMU6, R_SH_IMMS10, R_SH_IMMS10BY2,
R_SH_IMMS10BY4, R_SH_IMMS10BY8, R_SH_IMMS16, R_SH_IMMU16,
R_SH_IMM_LOW16, R_SH_IMM_LOW16_PCREL, R_SH_IMM_MEDLOW16,
R_SH_IMM_MEDLOW16_PCREL, R_SH_IMM_MEDHI16, R_SH_IMM_MEDHI16_PCREL,
R_SH_IMM_HI16, R_SH_IMM_HI16_PCREL, R_SH_64, R_SH_64_PCREL): New
relocs.
2000-09-01  Ben Elliston  <bje@@redhat.com>
* sh.h (EF_SH5): Define.
@
text
@d111 5
@


1.8.10.1
log
@Merge with mainline, kseitz_interps-20020619-merge.
@
text
@a110 5
extern int _bfd_sh64_crange_qsort_cmpb PARAMS ((const void *, const void *));
extern int _bfd_sh64_crange_qsort_cmpl PARAMS ((const void *, const void *));
extern int _bfd_sh64_crange_bsearch_cmpb PARAMS ((const void *, const void *));
extern int _bfd_sh64_crange_bsearch_cmpl PARAMS ((const void *, const void *));

@


1.8.10.2
log
@merge from mainline
@
text
@d170 1
a170 11
  FAKE_RELOC (R_SH_LAST_INVALID_RELOC_3, 143)
  RELOC_NUMBER (R_SH_TLS_GD_32, 144)
  RELOC_NUMBER (R_SH_TLS_LD_32, 145)
  RELOC_NUMBER (R_SH_TLS_LDO_32, 146)
  RELOC_NUMBER (R_SH_TLS_IE_32, 147)
  RELOC_NUMBER (R_SH_TLS_LE_32, 148)
  RELOC_NUMBER (R_SH_TLS_DTPMOD32, 149)
  RELOC_NUMBER (R_SH_TLS_DTPOFF32, 150)
  RELOC_NUMBER (R_SH_TLS_TPOFF32, 151)
  FAKE_RELOC (R_SH_FIRST_INVALID_RELOC_4, 152)
  FAKE_RELOC (R_SH_LAST_INVALID_RELOC_4, 159)
d208 2
a209 2
  FAKE_RELOC (R_SH_FIRST_INVALID_RELOC_5, 197)
  FAKE_RELOC (R_SH_LAST_INVALID_RELOC_5, 241)
@


1.8.8.1
log
@merge from trunk
@
text
@a110 5
extern int _bfd_sh64_crange_qsort_cmpb PARAMS ((const void *, const void *));
extern int _bfd_sh64_crange_qsort_cmpl PARAMS ((const void *, const void *));
extern int _bfd_sh64_crange_bsearch_cmpb PARAMS ((const void *, const void *));
extern int _bfd_sh64_crange_bsearch_cmpl PARAMS ((const void *, const void *));

@


1.7
log
@Fix typos in ChangeLogs; add coff/external.h; fix copyright dates
@
text
@d2 1
a2 1
   Copyright 1998, 2000 Free Software Foundation, Inc.
d37 3
d53 71
d156 10
a165 1
  FAKE_RELOC (R_SH_LAST_INVALID_RELOC_2, 159)
d174 45
@


1.6
log
@* sh.h (R_SH_GOT32, R_SH_PLT32, R_SH_COPY, R_SH_GLOB_DAT,
R_SH_JMP_SLOT, R_SH_RELATIVE, R_SH_GOTOFF, R_SH_GOTPC): Change
numbers to the range from 160 to 167.
(R_SH_FIRST_INVALID_RELOC): Adjust.
(R_SH_FIRST_INVALID_RELOC_2, R_SH_LAST_INVALID_RELOC_2):
New relocs to fill in the gap.
@
text
@d2 1
a2 1
   Copyright (C) 1998, 2000 Free Software Foundation, Inc.
@


1.6.2.1
log
@Update copyright notices.
@
text
@d2 1
a2 1
   Copyright 1998, 2000 Free Software Foundation, Inc.
@


1.5
log
@* sh.h (R_SH_GOT32, R_SH_PLT32, R_SH_COPY, R_SH_GLOB_DAT,
R_SH_JMP_SLOT, R_SH_RELATIVE, R_SH_GOTOFF, R_SH_GOTPC): New relocs.
(R_SH_FIRST_INVALID_RELOC): Adjust.
@
text
@d66 1
a66 9
  RELOC_NUMBER (R_SH_GOT32, 10)
  RELOC_NUMBER (R_SH_PLT32, 11)
  RELOC_NUMBER (R_SH_COPY, 12)
  RELOC_NUMBER (R_SH_GLOB_DAT, 13)
  RELOC_NUMBER (R_SH_JMP_SLOT, 14)
  RELOC_NUMBER (R_SH_RELATIVE, 15)
  RELOC_NUMBER (R_SH_GOTOFF, 16)
  RELOC_NUMBER (R_SH_GOTPC, 17)
  FAKE_RELOC (R_SH_FIRST_INVALID_RELOC, 18)
d81 10
@


1.4
log
@Get rid of the -1 dummy valued enum in START_RELOC_NUMBERS.
Remove duplicate reloc enums in elf32-d[13]0v.c
Remove EMPTY_HOWTOs in elf32-i386.c
@
text
@d66 9
a74 1
  FAKE_RELOC (R_SH_FIRST_INVALID_RELOC, 10)
@


1.3
log
@sh-dsp REPEAT support:
opcodes:

        * sh-opc.h (sh_nibble_type): Remove DISP_8 and DISP_4.
        Split IMM_[48]{,BY[24]} into IMM[01]_[48]{,BY[24]}.  Add REPEAT.
        (sh_arg_type): Add A_PC.
        (sh_table): Update entries using immediates.  Add repeat.
        * sh-dis.c (print_insn_shx): Remove DISP_8 and DISP_4.
        Split IMM_[48]{,BY[24]} into IMM[01]_[48]{,BY[24]}.  Add REPEAT.

gas:

        * config/tc-sh.c (immediate): Delete.
        (sh_operand_info): Add immediate member.
        (parse_reg): Use A_PC for pc.
        (parse_exp): Add second argument 'op'.  All callers changed.
        (parse_at): Expect pc to be coded as A_PC.
        Use immediate field in *op.
        (insert): Add fourth argument 'op'.  All callers changed.
        (build_relax): Add second argument 'op'.  All callers changed.
        (insert_loop_bounds): New function.
        (build_Mytes): Remove DISP_4.
        Split IMM_[48]{,BY[24]} into IMM[01]_[48]{,BY[24]}.  Add REPEAT.
        (assemble_ppi): Use immediate field in *operand.
        (sh_force_relocation): Handle BFD_RELOC_SH_LOOP_{START,END}.
        (md_apply_fix): Likewise.
        (tc_gen_reloc): Likewise.  Check for a pcrel BFD_RELOC_SH_LABEL.

include/coff:

        * sh.h (R_SH_LOOP_START, R_SH_LOOP_END): Define.

include/elf:

        * sh.h (R_SH_LOOP_START, R_SH_LOOP_END): New RELOC_NUMBERs.

bfd:

        * reloc.c (_bfd_relocate_contents): Add BFD_RELOC_SH_LOOP_START and
        BFD_RELOC_SH_LOOP_END.
        * elf32-sh.c (sh_elf_howto_tab): Change special_func to
        sh_elf_ignore_reloc for all entries that sh_elf_reloc used to ignore.
        Add entries for R_SH_LOOP_START and R_SH_LOOP_END.
        (sh_elf_reloc_loop): New function.
        (sh_elf_reloc): No need to test for always-to-be-ignored relocs
        any more.
        (sh_rel): Add entries for BFD_RELOC_SH_LOOP_{START,END}.
        (sh_elf_relocate_section): Handle BFD_RELOC_SH_LOOP_{START,END}.
        * bfd-in2.h, libbfd.h: Regenerate.
@
text
@d81 1
a81 2
  EMPTY_RELOC (R_SH_max)
END_RELOC_NUMBERS
@


1.2
log
@bfd:
Reinstate bits of sh4 support that got accidentally deleted.
Add sh-dsp support.

bfd:

	* archures.c (bfd_mach_sh2, bfd_mach_sh_dsp): New macros.
	(bfd_mach_sh3_dsp): Likewise.
	(bfd_mach_sh4): Reinstate.
	(bfd_default_scan): Recognize 7410, 7708, 7729 and 7750.
	* bfd-in2.h: Regenerate.
	* coff-sh.c (struct sh_opcode): flags is no longer short.
	(USESAS, USESAS_REG, USESR8, SETSAS, SETSAS_REG): New macros.
	(sh_opcode41, sh_opcode42): Integrate as sh_opcode41.
	(sh_opcode01, sh_opcode02, sh_opcode40): Add sh-dsp opcodes.
	(sh_opcode41, sh_opcode4, sh_opcode80): Likewise.
	(sh_opcodes): No longer const.
	(sh_dsp_opcodef0, sh_dsp_opcodef): New arrays.
	(sh_insn_uses_reg): Check for USESAS and USESR8.
	(sh_insn_sets_reg, sh_insns_conflict): Check for SETSAS.
	(_bfd_sh_align_load_span): Return early for SH4.
	Modify sh_opcodes lookup table for sh-dsp / sh3-dsp.
	Take into account that field b of a parallel processing insn
	could be mistaken for a separate insn.
	* cpu-sh.c (arch_info_struct): New array elements for
	sh2, sh-dsp and sh3-dsp.
	Reinstate element for sh4.
	(SH2_NEXT, SH_DSP_NEXT, SH3_DSP_NEXT): New macros.
	(SH4_NEXT): Reinstate.
	(SH3_NEXT, SH3E_NEXT): Adjust.
	* elf-bfd.h (_sh_elf_set_mach_from_flags): Declare.
	* elf32-sh.c (sh_elf_set_private_flags): New function.
	(sh_elf_copy_private_data, sh_elf_set_mach_from_flags): Likewise.
	(sh_elf_merge_private_data): New function.
	(elf_backend_object_p, bfd_elf32_bfd_set_private_bfd_flags): Define.
	(bfd_elf32_bfd_copy_private_bfd_data): Define.
	(bfd_elf32_bfd_merge_private_bfd_data): Change to
	sh_elf_merge_private_data.

gas:

	* config/tc-sh.c ("elf/sh.h"): Include.
	(sh_dsp, valid_arch, reg_x, reg_y, reg_efg): New static variables.
	(md.begin): Initialize target_arch.
	Only include opcodes in has table that match selected architecture.
	(parse_reg): Recognize register names for sh-dsp.
	(parse_at): Recognize post-modify addressing.
	(get_operands): The leading space is now optional.
	(get_specific): Remove FDREG_N support.  Add support for sh-dsp
	arguments.  Update valid_arch.
	(build_Mytes): Add support for SDT_REG_N.
	(find_cooked_opcode): New function, broken out of md_assemble.
	(assemble_ppi, sh_elf_final_processing): New functions.
	(md_assemble): Use find_cooked_opcode and assemble_ppi.
	(md_longopts, md_parse_option): New option: -dsp.
	* config/tc-sh.h (elf_tc_final_processing): Define.
	(sh_elf_final_processing): Declare.

include/elf:

	* sh.h: (EF_SH_MACH_MASK, EF_SH_UNKNOWN, EF_SH1, EF_SH2): New macros.
	(EF_SH3, EF_SH_HAS_DSP, EF_SH_DSP, EF_SH3_DSP): Likewise.
	(EF_SH_HAS_FP, EF_SH3E, EF_SH4, EF_SH_MERGE_MACH): Likewise.

opcodes:

	* sh-dis.c (print_movxy, print_insn_ddt, print_dsp_reg): New functions.
	(print_insn_ppi): Likewise.
	(print_insn_shx): Use info->mach to select appropriate insn set.
	Add support for sh-dsp.  Remove FD_REG_N support.
	* sh-opc.h (sh_nibble_type): Add new values for sh-dsp support.
	(sh_arg_type): Likewise.  Remove FD_REG_N.
	(sh_dsp_reg_nums): New enum.
	(arch_sh1, arch_sh2, arch_sh3, arch_sh3e, arch_sh4): New macros.
	(arch_sh_dsp, arch_sh3_dsp, arch_sh1_up, arch_sh2_up): Likewise.
	(arch_sh3_up, arch_sh3e_up, arch_sh4_up, arch_sh_dsp_up): Likewise.
	(arch_sh3_dsp_up): Likewise.
	(sh_opcode_info): New field: arch.
	(sh_table): Split up insn with FD_REG_N into ones with F_REG_N and
	D_REG_N.  Fill in arch field.  Add sh-dsp insns.
@
text
@d2 1
a2 1
   Copyright (C) 1998 Free Software Foundation, Inc.
d79 2
@


1.1
log
@Initial revision
@
text
@d23 27
@


1.1.1.1
log
@19990502 sourceware import
@
text
@@

