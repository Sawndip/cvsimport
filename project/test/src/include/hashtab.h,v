head	1.27;
access;
symbols
	sid-snapshot-20180601:1.27
	sid-snapshot-20180501:1.27
	sid-snapshot-20180401:1.27
	sid-snapshot-20180301:1.27
	sid-snapshot-20180201:1.27
	sid-snapshot-20180101:1.27
	sid-snapshot-20171201:1.27
	sid-snapshot-20171101:1.27
	sid-snapshot-20171001:1.27
	sid-snapshot-20170901:1.27
	sid-snapshot-20170801:1.27
	sid-snapshot-20170701:1.27
	sid-snapshot-20170601:1.27
	sid-snapshot-20170501:1.27
	sid-snapshot-20170401:1.27
	sid-snapshot-20170301:1.27
	sid-snapshot-20170201:1.27
	sid-snapshot-20170101:1.27
	sid-snapshot-20161201:1.27
	sid-snapshot-20161101:1.27
	sid-snapshot-20160901:1.27
	sid-snapshot-20160801:1.27
	sid-snapshot-20160701:1.27
	sid-snapshot-20160601:1.27
	sid-snapshot-20160501:1.27
	sid-snapshot-20160401:1.27
	sid-snapshot-20160301:1.27
	sid-snapshot-20160201:1.27
	sid-snapshot-20160101:1.27
	sid-snapshot-20151201:1.27
	sid-snapshot-20151101:1.27
	sid-snapshot-20151001:1.27
	sid-snapshot-20150901:1.27
	sid-snapshot-20150801:1.27
	sid-snapshot-20150701:1.27
	sid-snapshot-20150601:1.27
	sid-snapshot-20150501:1.27
	sid-snapshot-20150401:1.27
	cygwin-1_7_35-release:1.27
	sid-snapshot-20150301:1.27
	cygwin-1_7_34-release:1.27
	sid-snapshot-20150201:1.27
	sid-snapshot-20150101:1.27
	sid-snapshot-20141201:1.26
	cygwin-1_7_33-release:1.26
	sid-snapshot-20141101:1.26
	sid-snapshot-20141001:1.26
	sid-snapshot-20140901:1.26
	cygwin-1_7_32-release:1.26
	sid-snapshot-20140801:1.26
	cygwin-1_7_31-release:1.26
	sid-snapshot-20140701:1.26
	sid-snapshot-20140601:1.26
	cygwin-1_7_30-release:1.26
	sid-snapshot-20140501:1.26
	cygwin-1_7_29-release:1.26
	sid-snapshot-20140401:1.26
	sid-snapshot-20140301:1.26
	cygwin-1_7_28-release:1.26
	sid-snapshot-20140201:1.26
	sid-snapshot-20140101:1.26
	sid-snapshot-20131201:1.26
	cygwin-1_7_27-release:1.26
	cygwin-1_7_26-release:1.26
	sid-snapshot-20131101:1.26
	sid-snapshot-20131001:1.26
	binutils-2_24-branch:1.26.0.24
	binutils-2_24-branchpoint:1.26
	binutils-2_21_1:1.26
	sid-snapshot-20130901:1.26
	cygwin-1_7_25-release:1.26
	gdb_7_6_1-2013-08-30-release:1.26
	cygwin-1_7_24-release:1.26
	cygwin-1_7_23-release:1.26
	sid-snapshot-20130801:1.26
	cygwin-1_7_22-release:1.26
	cygwin-1_7_21-release:1.26
	sid-snapshot-20130701:1.26
	cygwin-1_7_20-release:1.26
	cygwin-1_7_19-release:1.26
	sid-snapshot-20130601:1.26
	sid-snapshot-20130501:1.26
	gdb_7_6-2013-04-26-release:1.26
	cygwin-64bit-postmerge:1.26
	cygwin-64bit-premerge-branch:1.26.0.22
	cygwin-64bit-premerge:1.26
	sid-snapshot-20130401:1.26
	binutils-2_23_2:1.26
	gdb_7_6-branch:1.26.0.20
	gdb_7_6-2013-03-12-branchpoint:1.26
	cygwin-1_7_18-release:1.26
	sid-snapshot-20130301:1.26
	sid-snapshot-20130201:1.26
	sid-snapshot-20130101:1.26
	sid-snapshot-20121201:1.26
	gdb_7_5_1-2012-11-29-release:1.26
	binutils-2_23_1:1.26
	sid-snapshot-20121101:1.26
	binutils-2_23:1.26
	cygwin-1_7_17-release:1.26
	sid-snapshot-20121001:1.26
	sid-snapshot-20120901:1.26
	gdb_7_5-2012-08-17-release:1.26
	cygwin-64bit-branch:1.26.0.18
	sid-snapshot-20120801:1.26
	binutils-2_23-branch:1.26.0.16
	binutils-2_23-branchpoint:1.26
	cygwin-1_7_16-release:1.26
	gdb_7_5-branch:1.26.0.14
	gdb_7_5-2012-07-18-branchpoint:1.26
	sid-snapshot-20120701:1.26
	sid-snapshot-20120601:1.26
	cygwin-1_7_15-release:1.26
	sid-snapshot-20120501:1.26
	binutils-2_22_branch:1.26.0.12
	gdb_7_4_1-2012-04-26-release:1.26
	cygwin-1_7_14_2-release:1.26
	cygwin-1_7_14-release:1.26
	cygwin-1_7_12-release:1.26
	sid-snapshot-20120401:1.26
	sid-snapshot-20120301:1.26
	cygwin-1_7_11-release:1.26
	cygwin-1_7_10-release:1.26
	sid-snapshot-20120201:1.26
	gdb_7_4-2012-01-24-release:1.26
	sid-snapshot-20120101:1.26
	gdb_7_4-branch:1.26.0.10
	gdb_7_4-2011-12-13-branchpoint:1.26
	sid-snapshot-20111201:1.26
	binutils-2_22:1.26
	sid-snapshot-20111101:1.26
	sid-snapshot-20111001:1.26
	binutils-2_22-branch:1.26.0.8
	binutils-2_22-branchpoint:1.26
	gdb_7_3_1-2011-09-04-release:1.26
	sid-snapshot-20110901:1.26
	sid-snapshot-20110801:1.26
	gdb_7_3-2011-07-26-release:1.26
	sid-snapshot-20110701:1.26
	sid-snapshot-20110601:1.26
	sid-snapshot-20110501:1.26
	gdb_7_3-branch:1.26.0.6
	gdb_7_3-2011-04-01-branchpoint:1.26
	sid-snapshot-20110401:1.26
	cygwin-1_7_9-release:1.26
	sid-snapshot-20110301:1.26
	cygwin-1_7_8-release:1.26
	sid-snapshot-20110201:1.26
	sid-snapshot-20110101:1.26
	binutils-2_21:1.26
	sid-snapshot-20101201:1.26
	binutils-2_21-branch:1.26.0.4
	binutils-2_21-branchpoint:1.26
	sid-snapshot-20101101:1.26
	sid-snapshot-20101001:1.26
	binutils-2_20_1:1.25
	gdb_7_2-2010-09-02-release:1.26
	sid-snapshot-20100901:1.26
	cygwin-1_7_7-release:1.26
	sid-snapshot-20100801:1.26
	gdb_7_2-branch:1.26.0.2
	gdb_7_2-2010-07-07-branchpoint:1.26
	sid-snapshot-20100701:1.26
	sid-snapshot-20100601:1.25
	sid-snapshot-20100501:1.25
	cygwin-1_7_5-release:1.25
	cygwin-1_7_4-release:1.25
	sid-snapshot-20100401:1.25
	cygwin-1_7_3-release:1.25
	cygwin-1_7_2-release:1.25
	gdb_7_1-2010-03-18-release:1.25
	sid-snapshot-20100301:1.25
	gdb_7_1-branch:1.25.0.6
	gdb_7_1-2010-02-18-branchpoint:1.25
	sid-snapshot-20100201:1.25
	sid-snapshot-20100101:1.25
	gdb_7_0_1-2009-12-22-release:1.25
	cygwin-1_7_1-release:1.25
	sid-snapshot-20091201:1.25
	sid-snapshot-20091101:1.25
	binutils-2_20:1.25
	gdb_7_0-2009-10-06-release:1.25
	sid-snapshot-20091001:1.25
	gdb_7_0-branch:1.25.0.4
	gdb_7_0-2009-09-16-branchpoint:1.25
	arc-sim-20090309:1.21
	binutils-arc-20081103-branch:1.21.0.60
	binutils-arc-20081103-branchpoint:1.21
	binutils-2_20-branch:1.25.0.2
	binutils-2_20-branchpoint:1.25
	sid-snapshot-20090901:1.22
	sid-snapshot-20090801:1.22
	msnyder-checkpoint-072509-branch:1.22.0.4
	msnyder-checkpoint-072509-branchpoint:1.22
	sid-snapshot-20090701:1.22
	dje-cgen-play1-branch:1.22.0.2
	dje-cgen-play1-branchpoint:1.22
	sid-snapshot-20090601:1.22
	sid-snapshot-20090501:1.22
	sid-snapshot-20090401:1.21
	arc-20081103-branch:1.21.0.58
	arc-20081103-branchpoint:1.21
	arc-insight_6_8-branch:1.21.0.56
	arc-insight_6_8-branchpoint:1.21
	insight_6_8-branch:1.21.0.54
	insight_6_8-branchpoint:1.21
	sid-snapshot-20090301:1.21
	binutils-2_19_1:1.21
	sid-snapshot-20090201:1.21
	sid-snapshot-20090101:1.21
	reverse-20081226-branch:1.21.0.52
	reverse-20081226-branchpoint:1.21
	sid-snapshot-20081201:1.21
	multiprocess-20081120-branch:1.21.0.50
	multiprocess-20081120-branchpoint:1.21
	sid-snapshot-20081101:1.21
	binutils-2_19:1.21
	sid-snapshot-20081001:1.21
	reverse-20080930-branch:1.21.0.48
	reverse-20080930-branchpoint:1.21
	binutils-2_19-branch:1.21.0.46
	binutils-2_19-branchpoint:1.21
	sid-snapshot-20080901:1.21
	sid-snapshot-20080801:1.21
	reverse-20080717-branch:1.21.0.44
	reverse-20080717-branchpoint:1.21
	sid-snapshot-20080701:1.21
	msnyder-reverse-20080609-branch:1.21.0.42
	msnyder-reverse-20080609-branchpoint:1.21
	drow-reverse-20070409-branch:1.21.0.40
	drow-reverse-20070409-branchpoint:1.21
	sid-snapshot-20080601:1.21
	sid-snapshot-20080501:1.21
	sid-snapshot-20080403:1.21
	sid-snapshot-20080401:1.21
	gdb_6_8-2008-03-27-release:1.21
	sid-snapshot-20080301:1.21
	gdb_6_8-branch:1.21.0.38
	gdb_6_8-2008-02-26-branchpoint:1.21
	sid-snapshot-20080201:1.21
	sid-snapshot-20080101:1.21
	sid-snapshot-20071201:1.21
	sid-snapshot-20071101:1.21
	gdb_6_7_1-2007-10-29-release:1.21
	gdb_6_7-2007-10-10-release:1.21
	sid-snapshot-20071001:1.21
	gdb_6_7-branch:1.21.0.36
	gdb_6_7-2007-09-07-branchpoint:1.21
	binutils-2_18:1.21
	binutils-2_18-branch:1.21.0.34
	binutils-2_18-branchpoint:1.21
	insight_6_6-20070208-release:1.21
	binutils-csl-coldfire-4_1-32:1.21
	binutils-csl-sourcerygxx-4_1-32:1.21
	gdb_6_6-2006-12-18-release:1.21
	binutils-csl-innovasic-fido-3_4_4-33:1.21
	binutils-csl-sourcerygxx-3_4_4-32:1.17
	binutils-csl-coldfire-4_1-30:1.21
	binutils-csl-sourcerygxx-4_1-30:1.21
	binutils-csl-coldfire-4_1-28:1.21
	binutils-csl-sourcerygxx-4_1-29:1.21
	binutils-csl-sourcerygxx-4_1-28:1.21
	gdb_6_6-branch:1.21.0.32
	gdb_6_6-2006-11-15-branchpoint:1.21
	binutils-csl-arm-2006q3-27:1.21
	binutils-csl-sourcerygxx-4_1-27:1.21
	binutils-csl-arm-2006q3-26:1.21
	binutils-csl-sourcerygxx-4_1-26:1.21
	binutils-csl-sourcerygxx-4_1-25:1.21
	binutils-csl-sourcerygxx-4_1-24:1.21
	binutils-csl-sourcerygxx-4_1-23:1.21
	insight_6_5-20061003-release:1.21
	gdb-csl-symbian-6_4_50_20060226-12:1.21
	binutils-csl-sourcerygxx-4_1-21:1.21
	binutils-csl-arm-2006q3-21:1.21
	binutils-csl-sourcerygxx-4_1-22:1.21
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.21
	binutils-csl-sourcerygxx-4_1-20:1.21
	binutils-csl-arm-2006q3-19:1.21
	binutils-csl-sourcerygxx-4_1-19:1.21
	binutils-csl-sourcerygxx-4_1-18:1.21
	binutils-csl-renesas-4_1-9:1.21
	gdb-csl-sourcerygxx-3_4_4-25:1.21
	binutils-csl-sourcerygxx-3_4_4-25:1.17
	nickrob-async-20060828-mergepoint:1.21
	gdb-csl-symbian-6_4_50_20060226-11:1.21
	binutils-csl-renesas-4_1-8:1.21
	binutils-csl-renesas-4_1-7:1.21
	binutils-csl-renesas-4_1-6:1.21
	gdb-csl-sourcerygxx-4_1-17:1.21
	binutils-csl-sourcerygxx-4_1-17:1.21
	gdb-csl-20060226-branch-local-2:1.21
	cr-0x5f1:1.21.0.30
	gdb-csl-sourcerygxx-4_1-14:1.21
	binutils-csl-sourcerygxx-4_1-14:1.21
	binutils-csl-sourcerygxx-4_1-15:1.21
	gdb-csl-sourcerygxx-4_1-13:1.21
	binutils-csl-sourcerygxx-4_1-13:1.21
	binutils-2_17:1.21
	gdb-csl-sourcerygxx-4_1-12:1.21
	binutils-csl-sourcerygxx-4_1-12:1.21
	gdb-csl-sourcerygxx-3_4_4-21:1.21
	binutils-csl-sourcerygxx-3_4_4-21:1.21
	gdb_6_5-20060621-release:1.21
	binutils-csl-wrs-linux-3_4_4-24:1.17
	binutils-csl-wrs-linux-3_4_4-23:1.17
	gdb-csl-sourcerygxx-4_1-9:1.21
	binutils-csl-sourcerygxx-4_1-9:1.21
	gdb-csl-sourcerygxx-4_1-8:1.21
	binutils-csl-sourcerygxx-4_1-8:1.21
	gdb-csl-sourcerygxx-4_1-7:1.21
	binutils-csl-sourcerygxx-4_1-7:1.21
	gdb-csl-arm-2006q1-6:1.21
	binutils-csl-arm-2006q1-6:1.21
	gdb-csl-sourcerygxx-4_1-6:1.21
	binutils-csl-sourcerygxx-4_1-6:1.21
	binutils-csl-wrs-linux-3_4_4-22:1.17
	gdb-csl-symbian-6_4_50_20060226-10:1.21
	gdb-csl-symbian-6_4_50_20060226-9:1.21
	gdb-csl-symbian-6_4_50_20060226-8:1.21
	gdb-csl-coldfire-4_1-11:1.21
	binutils-csl-coldfire-4_1-11:1.21
	gdb-csl-sourcerygxx-3_4_4-19:1.21
	binutils-csl-sourcerygxx-3_4_4-19:1.21
	gdb-csl-coldfire-4_1-10:1.21
	gdb_6_5-branch:1.21.0.28
	gdb_6_5-2006-05-14-branchpoint:1.21
	binutils-csl-coldfire-4_1-10:1.21
	gdb-csl-sourcerygxx-4_1-5:1.21
	binutils-csl-sourcerygxx-4_1-5:1.21
	nickrob-async-20060513-branch:1.21.0.26
	nickrob-async-20060513-branchpoint:1.21
	gdb-csl-sourcerygxx-4_1-4:1.21
	binutils-csl-sourcerygxx-4_1-4:1.21
	msnyder-reverse-20060502-branch:1.21.0.24
	msnyder-reverse-20060502-branchpoint:1.21
	binutils-csl-wrs-linux-3_4_4-21:1.17
	gdb-csl-morpho-4_1-4:1.21
	binutils-csl-morpho-4_1-4:1.21
	gdb-csl-sourcerygxx-3_4_4-17:1.21
	binutils-csl-sourcerygxx-3_4_4-17:1.21
	binutils-csl-wrs-linux-3_4_4-20:1.17
	readline_5_1-import-branch:1.21.0.22
	readline_5_1-import-branchpoint:1.21
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.21
	binutils-2_17-branch:1.21.0.20
	binutils-2_17-branchpoint:1.21
	gdb-csl-symbian-20060226-branch:1.21.0.18
	gdb-csl-symbian-20060226-branchpoint:1.21
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.21
	msnyder-reverse-20060331-branch:1.21.0.16
	msnyder-reverse-20060331-branchpoint:1.21
	binutils-csl-2_17-branch:1.21.0.14
	binutils-csl-2_17-branchpoint:1.21
	gdb-csl-available-20060303-branch:1.21.0.12
	gdb-csl-available-20060303-branchpoint:1.21
	gdb-csl-20060226-branch:1.21.0.10
	gdb-csl-20060226-branchpoint:1.21
	gdb_6_4-20051202-release:1.21
	msnyder-fork-checkpoint-branch:1.21.0.8
	msnyder-fork-checkpoint-branchpoint:1.21
	gdb-csl-gxxpro-6_3-branch:1.21.0.6
	gdb-csl-gxxpro-6_3-branchpoint:1.21
	gdb_6_4-branch:1.21.0.4
	gdb_6_4-2005-11-01-branchpoint:1.21
	gdb-csl-arm-20051020-branch:1.21.0.2
	gdb-csl-arm-20051020-branchpoint:1.21
	binutils-csl-gxxpro-3_4-branch:1.17.0.14
	binutils-csl-gxxpro-3_4-branchpoint:1.17
	binutils-2_16_1:1.17
	msnyder-tracepoint-checkpoint-branch:1.20.0.2
	msnyder-tracepoint-checkpoint-branchpoint:1.20
	gdb-csl-arm-20050325-2005-q1b:1.17
	binutils-csl-arm-2005q1b:1.17
	binutils-2_16:1.17
	gdb-csl-arm-20050325-2005-q1a:1.17
	binutils-csl-arm-2005q1a:1.17
	csl-arm-20050325-branch:1.17.0.12
	csl-arm-20050325-branchpoint:1.17
	binutils-csl-arm-2005q1-branch:1.17.0.10
	binutils-csl-arm-2005q1-branchpoint:1.17
	binutils-2_16-branch:1.17.0.8
	binutils-2_16-branchpoint:1.17
	csl-arm-2004-q3d:1.17
	gdb_6_3-20041109-release:1.17
	gdb_6_3-branch:1.17.0.4
	gdb_6_3-20041019-branchpoint:1.17
	csl-arm-2004-q3:1.17
	drow_intercu-merge-20040921:1.17
	drow_intercu-merge-20040915:1.17
	jimb-gdb_6_2-e500-branch:1.17.0.6
	jimb-gdb_6_2-e500-branchpoint:1.17
	gdb_6_2-20040730-release:1.17
	gdb_6_2-branch:1.17.0.2
	gdb_6_2-2004-07-10-gmt-branchpoint:1.17
	gdb_6_1_1-20040616-release:1.14
	binutils-2_15:1.14
	binutils-2_15-branchpoint:1.14
	csl-arm-2004-q1a:1.17
	csl-arm-2004-q1:1.15
	gdb_6_1-2004-04-05-release:1.14
	drow_intercu-merge-20040402:1.15
	drow_intercu-merge-20040327:1.14
	ezannoni_pie-20040323-branch:1.14.0.34
	ezannoni_pie-20040323-branchpoint:1.14
	cagney_tramp-20040321-mergepoint:1.14
	cagney_tramp-20040309-branch:1.14.0.32
	cagney_tramp-20040309-branchpoint:1.14
	gdb_6_1-branch:1.14.0.30
	gdb_6_1-2004-03-01-gmt-branchpoint:1.14
	drow_intercu-20040221-branch:1.14.0.28
	drow_intercu-20040221-branchpoint:1.14
	binutils-2_15-branch:1.14.0.26
	cagney_bfdfile-20040213-branch:1.14.0.24
	cagney_bfdfile-20040213-branchpoint:1.14
	drow-cplus-merge-20040208:1.14
	carlton_dictionary-20040126-merge:1.14
	cagney_bigcore-20040122-branch:1.14.0.22
	cagney_bigcore-20040122-branchpoint:1.14
	drow-cplus-merge-20040113:1.14
	csl-arm-2003-q4:1.14
	drow-cplus-merge-20031224:1.14
	drow-cplus-merge-20031220:1.14
	carlton_dictionary-20031215-merge:1.14
	drow-cplus-merge-20031214:1.14
	carlton-dictionary-20031111-merge:1.14
	gdb_6_0-2003-10-04-release:1.14
	kettenis_sparc-20030918-branch:1.14.0.20
	kettenis_sparc-20030918-branchpoint:1.14
	carlton_dictionary-20030917-merge:1.14
	ezannoni_pie-20030916-branchpoint:1.14
	ezannoni_pie-20030916-branch:1.14.0.18
	cagney_x86i386-20030821-branch:1.14.0.16
	cagney_x86i386-20030821-branchpoint:1.14
	carlton_dictionary-20030805-merge:1.14
	carlton_dictionary-20030627-merge:1.14
	gdb_6_0-branch:1.14.0.14
	gdb_6_0-2003-06-23-branchpoint:1.14
	jimb-ppc64-linux-20030613-branch:1.14.0.12
	jimb-ppc64-linux-20030613-branchpoint:1.14
	binutils-2_14:1.12
	cagney_convert-20030606-branch:1.14.0.10
	cagney_convert-20030606-branchpoint:1.14
	cagney_writestrings-20030508-branch:1.14.0.8
	cagney_writestrings-20030508-branchpoint:1.14
	jimb-ppc64-linux-20030528-branch:1.14.0.6
	jimb-ppc64-linux-20030528-branchpoint:1.14
	carlton_dictionary-20030523-merge:1.14
	cagney_fileio-20030521-branch:1.14.0.4
	cagney_fileio-20030521-branchpoint:1.14
	kettenis_i386newframe-20030517-mergepoint:1.14
	jimb-ppc64-linux-20030509-branch:1.14.0.2
	jimb-ppc64-linux-20030509-branchpoint:1.14
	kettenis_i386newframe-20030504-mergepoint:1.12
	carlton_dictionary-20030430-merge:1.12
	binutils-2_14-branch:1.12.0.10
	binutils-2_14-branchpoint:1.12
	kettenis_i386newframe-20030419-branch:1.12.0.8
	kettenis_i386newframe-20030419-branchpoint:1.12
	carlton_dictionary-20030416-merge:1.12
	cagney_frameaddr-20030409-mergepoint:1.12
	kettenis_i386newframe-20030406-branch:1.12.0.6
	kettenis_i386newframe-20030406-branchpoint:1.12
	cagney_frameaddr-20030403-branchpoint:1.12
	cagney_frameaddr-20030403-branch:1.12.0.4
	cagney_framebase-20030330-mergepoint:1.12
	cagney_framebase-20030326-branch:1.12.0.2
	cagney_framebase-20030326-branchpoint:1.12
	cagney_lazyid-20030317-branch:1.11.0.10
	cagney_lazyid-20030317-branchpoint:1.11
	kettenis-i386newframe-20030316-mergepoint:1.11
	offbyone-20030313-branch:1.11.0.8
	offbyone-20030313-branchpoint:1.11
	kettenis-i386newframe-20030308-branch:1.11.0.6
	kettenis-i386newframe-20030308-branchpoint:1.11
	carlton_dictionary-20030305-merge:1.11
	cagney_offbyone-20030303-branch:1.11.0.4
	cagney_offbyone-20030303-branchpoint:1.11
	w32api-2_2:1.11
	mingw-runtime-2_4:1.11
	carlton_dictionary-20030207-merge:1.11
	interps-20030202-branch:1.11.0.2
	interps-20030202-branchpoint:1.11
	cagney-unwind-20030108-branch:1.10.0.16
	cagney-unwind-20030108-branchpoint:1.10
	binutils-2_13_2_1:1.10
	binutils-2_13_2:1.10
	carlton_dictionary-20021223-merge:1.10
	gdb_5_3-2002-12-12-release:1.10
	carlton_dictionary-20021115-merge:1.10
	binutils-2_13_1:1.10
	kseitz_interps-20021105-merge:1.10
	kseitz_interps-20021103-merge:1.10
	drow-cplus-merge-20021020:1.10
	drow-cplus-merge-20021025:1.10
	carlton_dictionary-20021025-merge:1.10
	carlton_dictionary-20021011-merge:1.10
	drow-cplus-branch:1.10.0.14
	drow-cplus-branchpoint:1.10
	kseitz_interps-20020930-merge:1.10
	carlton_dictionary-20020927-merge:1.10
	carlton_dictionary-branch:1.10.0.12
	carlton_dictionary-20020920-branchpoint:1.10
	sid-20020905-branchpoint:1.10
	sid-20020905-branch:1.10.0.10
	gdb_5_3-branch:1.10.0.8
	gdb_5_3-2002-09-04-branchpoint:1.10
	kseitz_interps-20020829-merge:1.10
	cagney_sysregs-20020825-branch:1.10.0.6
	cagney_sysregs-20020825-branchpoint:1.10
	readline_4_3-import-branch:1.10.0.4
	readline_4_3-import-branchpoint:1.10
	binutils-2_13:1.10
	gdb_5_2_1-2002-07-23-release:1.8
	binutils-2_13-branchpoint:1.10
	binutils-2_13-branch:1.10.0.2
	kseitz_interps-20020528-branch:1.8.0.10
	kseitz_interps-20020528-branchpoint:1.8
	cagney_regbuf-20020515-branch:1.8.0.8
	cagney_regbuf-20020515-branchpoint:1.8
	binutils-2_12_1:1.8
	jimb-macro-020506-branch:1.8.0.6
	jimb-macro-020506-branchpoint:1.8
	gdb_5_2-2002-04-29-release:1.8
	binutils-2_12:1.8
	gdb_5_2-branch:1.8.0.4
	gdb_5_2-2002-03-03-branchpoint:1.8
	binutils-2_12-branch:1.8.0.2
	binutils-2_12-branchpoint:1.8
	gdb_5_1_1-2002-01-24-release:1.7
	gdb_5_1_0_1-2002-01-03-release:1.7
	cygnus_cvs_20020108_pre:1.8
	gdb_5_1_0_1-2002-01-03-branch:1.7.0.6
	gdb_5_1_0_1-2002-01-03-branchpoint:1.7
	gdb_5_1-2001-11-21-release:1.7
	gdb_s390-2001-09-26-branch:1.7.0.4
	gdb_s390-2001-09-26-branchpoint:1.7
	gdb_5_1-2001-07-29-branch:1.7.0.2
	gdb_5_1-2001-07-29-branchpoint:1.7
	binutils-2_11_2:1.5
	binutils-2_11_1:1.5
	binutils-2_11:1.5
	x86_64versiong3:1.5
	binutils-2_11-branch:1.5.0.2
	insight-precleanup-2001-01-01:1.5
	binutils-2_10_1:1.2
	binutils-2_10:1.2
	gdb-premipsmulti-2000-06-06-branch:1.2.0.6
	gdb-premipsmulti-2000-06-06-branchpoint:1.2
	gdb_5_0-2000-05-19-release:1.2
	gdb_4_18_2-2000-05-18-release:1.2
	gdb_4_95_1-2000-05-11-snapshot:1.2
	gdb_4_95_0-2000-04-27-snapshot:1.2
	gdb_5_0-2000-04-10-branch:1.2.0.4
	gdb_5_0-2000-04-10-branchpoint:1.2
	binutils-2_10-branch:1.2.0.2
	binutils-2_10-branchpoint:1.2
	binutils_latest_snapshot:1.26
	egcs_20000222:1.1.1.1
	cygnus:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.27
date	2014.12.15.06.56.39;	author dj;	state Exp;
branches;
next	1.26;

1.26
date	2010.06.10.18.30.17;	author dj;	state Exp;
branches;
next	1.25;

1.25
date	2009.09.03.02.02.48;	author amodra;	state Exp;
branches;
next	1.24;

1.24
date	2009.09.02.16.08.35;	author dj;	state Exp;
branches;
next	1.23;

1.23
date	2009.09.02.07.21.39;	author amodra;	state Exp;
branches;
next	1.22;

1.22
date	2009.04.22.19.09.13;	author dj;	state Exp;
branches;
next	1.21;

1.21
date	2005.06.30.23.02.54;	author dj;	state Exp;
branches;
next	1.20;

1.20
date	2005.05.10.10.21.08;	author nickc;	state Exp;
branches;
next	1.19;

1.19
date	2005.04.19.19.09.30;	author dj;	state Exp;
branches;
next	1.18;

1.18
date	2005.03.28.02.08.50;	author dj;	state Exp;
branches;
next	1.17;

1.17
date	2004.04.22.18.38.58;	author dj;	state Exp;
branches;
next	1.16;

1.16
date	2004.04.13.15.23.09;	author dj;	state Exp;
branches;
next	1.15;

1.15
date	2004.03.30.20.03.09;	author dj;	state Exp;
branches;
next	1.14;

1.14
date	2003.05.07.20.30.13;	author jason;	state Exp;
branches
	1.14.28.1;
next	1.13;

1.13
date	2003.05.07.18.06.23;	author jason;	state Exp;
branches;
next	1.12;

1.12
date	2003.03.17.18.01.05;	author dj;	state Exp;
branches
	1.12.8.1;
next	1.11;

1.11
date	2003.01.26.07.33.29;	author drow;	state Exp;
branches;
next	1.10;

1.10
date	2002.06.25.01.03.52;	author dj;	state Exp;
branches
	1.10.12.1
	1.10.14.1;
next	1.9;

1.9
date	2002.06.06.12.55.14;	author dj;	state Exp;
branches;
next	1.8;

1.8
date	2001.08.17.06.32.52;	author dj;	state Exp;
branches
	1.8.8.1
	1.8.10.1;
next	1.7;

1.7
date	2001.03.14.19.45.29;	author nickc;	state Exp;
branches;
next	1.6;

1.6
date	2001.03.14.02.27.43;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	2000.11.04.07.48.51;	author hp;	state Exp;
branches;
next	1.4;

1.4
date	2000.11.03.20.53.04;	author hp;	state Exp;
branches;
next	1.3;

1.3
date	2000.06.15.20.47.02;	author hjl;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.24.21.31.21;	author jason;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.22.16.18.13;	author ian;	state Exp;
branches
	1.1.1.1;
next	;

1.14.28.1
date	2004.04.02.16.47.52;	author drow;	state Exp;
branches;
next	1.14.28.2;

1.14.28.2
date	2004.09.16.17.01.49;	author drow;	state Exp;
branches;
next	;

1.12.8.1
date	2003.05.18.09.44.36;	author kettenis;	state Exp;
branches;
next	;

1.10.12.1
date	2003.02.07.19.18.00;	author carlton;	state Exp;
branches;
next	1.10.12.2;

1.10.12.2
date	2003.04.16.19.57.03;	author carlton;	state Exp;
branches;
next	1.10.12.3;

1.10.12.3
date	2003.05.23.18.40.53;	author carlton;	state Exp;
branches;
next	;

1.10.14.1
date	2003.12.14.20.27.59;	author drow;	state Exp;
branches;
next	;

1.8.8.1
date	2002.06.15.16.43.16;	author cagney;	state Exp;
branches;
next	;

1.8.10.1
date	2002.06.20.01.37.19;	author kseitz;	state Exp;
branches;
next	1.8.10.2;

1.8.10.2
date	2002.07.22.21.47.13;	author kseitz;	state Exp;
branches;
next	;

1.1.1.1
date	2000.02.22.16.18.13;	author ian;	state Exp;
branches;
next	;


desc
@@


1.27
log
@merge from gcc
@
text
@/* An expandable hash tables datatype.  
   Copyright (C) 1999, 2000, 2002, 2003, 2004, 2005, 2009, 2010
   Free Software Foundation, Inc.
   Contributed by Vladimir Makarov (vmakarov@@cygnus.com).

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.  */

/* This package implements basic hash table functionality.  It is possible
   to search for an entry, create an entry and destroy an entry.

   Elements in the table are generic pointers.

   The size of the table is not fixed; if the occupancy of the table
   grows too high the hash table will be expanded.

   The abstract data implementation is based on generalized Algorithm D
   from Knuth's book "The art of computer programming".  Hash table is
   expanded by creation of new hash table and transferring elements from
   the old table to the new table.  */

#ifndef __HASHTAB_H__
#define __HASHTAB_H__

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#include "ansidecl.h"

/* The type for a hash code.  */
typedef unsigned int hashval_t;

/* Callback function pointer types.  */

/* Calculate hash of a table entry.  */
typedef hashval_t (*htab_hash) (const void *);

/* Compare a table entry with a possible entry.  The entry already in
   the table always comes first, so the second element can be of a
   different type (but in this case htab_find and htab_find_slot
   cannot be used; instead the variants that accept a hash value
   must be used).  */
typedef int (*htab_eq) (const void *, const void *);

/* Cleanup function called whenever a live element is removed from
   the hash table.  */
typedef void (*htab_del) (void *);
  
/* Function called by htab_traverse for each live element.  The first
   arg is the slot of the element (which can be passed to htab_clear_slot
   if desired), the second arg is the auxiliary pointer handed to
   htab_traverse.  Return 1 to continue scan, 0 to stop.  */
typedef int (*htab_trav) (void **, void *);

/* Memory-allocation function, with the same functionality as calloc().
   Iff it returns NULL, the hash table implementation will pass an error
   code back to the user, so if your code doesn't handle errors,
   best if you use xcalloc instead.  */
typedef void *(*htab_alloc) (size_t, size_t);

/* We also need a free() routine.  */
typedef void (*htab_free) (void *);

/* Memory allocation and deallocation; variants which take an extra
   argument.  */
typedef void *(*htab_alloc_with_arg) (void *, size_t, size_t);
typedef void (*htab_free_with_arg) (void *, void *);

/* This macro defines reserved value for empty table entry.  */

#define HTAB_EMPTY_ENTRY    ((PTR) 0)

/* This macro defines reserved value for table entry which contained
   a deleted element. */

#define HTAB_DELETED_ENTRY  ((PTR) 1)

/* Hash tables are of the following type.  The structure
   (implementation) of this type is not needed for using the hash
   tables.  All work with hash table should be executed only through
   functions mentioned below.  The size of this structure is subject to
   change.  */

struct htab {
  /* Pointer to hash function.  */
  htab_hash hash_f;

  /* Pointer to comparison function.  */
  htab_eq eq_f;

  /* Pointer to cleanup function.  */
  htab_del del_f;

  /* Table itself.  */
  void **entries;

  /* Current size (in entries) of the hash table.  */
  size_t size;

  /* Current number of elements including also deleted elements.  */
  size_t n_elements;

  /* Current number of deleted elements in the table.  */
  size_t n_deleted;

  /* The following member is used for debugging. Its value is number
     of all calls of `htab_find_slot' for the hash table. */
  unsigned int searches;

  /* The following member is used for debugging.  Its value is number
     of collisions fixed for time of work with the hash table. */
  unsigned int collisions;

  /* Pointers to allocate/free functions.  */
  htab_alloc alloc_f;
  htab_free free_f;

  /* Alternate allocate/free functions, which take an extra argument.  */
  void *alloc_arg;
  htab_alloc_with_arg alloc_with_arg_f;
  htab_free_with_arg free_with_arg_f;

  /* Current size (in entries) of the hash table, as an index into the
     table of primes.  */
  unsigned int size_prime_index;
};

typedef struct htab *htab_t;

/* An enum saying whether we insert into the hash table or not.  */
enum insert_option {NO_INSERT, INSERT};

/* The prototypes of the package functions. */

extern htab_t	htab_create_alloc  (size_t, htab_hash,
                                    htab_eq, htab_del,
                                    htab_alloc, htab_free);

extern htab_t	htab_create_alloc_ex (size_t, htab_hash,
                                      htab_eq, htab_del,
                                      void *, htab_alloc_with_arg,
                                      htab_free_with_arg);

extern htab_t  htab_create_typed_alloc (size_t, htab_hash, htab_eq, htab_del,
					htab_alloc, htab_alloc, htab_free);

/* Backward-compatibility functions.  */
extern htab_t htab_create (size_t, htab_hash, htab_eq, htab_del);
extern htab_t htab_try_create (size_t, htab_hash, htab_eq, htab_del);

extern void	htab_set_functions_ex (htab_t, htab_hash,
                                       htab_eq, htab_del,
                                       void *, htab_alloc_with_arg,
                                       htab_free_with_arg);

extern void	htab_delete (htab_t);
extern void	htab_empty (htab_t);

extern void *	htab_find (htab_t, const void *);
extern void **	htab_find_slot (htab_t, const void *, enum insert_option);
extern void *	htab_find_with_hash (htab_t, const void *, hashval_t);
extern void **	htab_find_slot_with_hash (htab_t, const void *,
					  hashval_t, enum insert_option);
extern void	htab_clear_slot	(htab_t, void **);
extern void	htab_remove_elt	(htab_t, void *);
extern void	htab_remove_elt_with_hash (htab_t, void *, hashval_t);

extern void	htab_traverse (htab_t, htab_trav, void *);
extern void	htab_traverse_noresize (htab_t, htab_trav, void *);

extern size_t	htab_size (htab_t);
extern size_t	htab_elements (htab_t);
extern double	htab_collisions	(htab_t);

/* A hash function for pointers.  */
extern htab_hash htab_hash_pointer;

/* An equality function for pointers.  */
extern htab_eq htab_eq_pointer;

/* A hash function for null-terminated strings.  */
extern hashval_t htab_hash_string (const void *);

/* An iterative hash function for arbitrary data.  */
extern hashval_t iterative_hash (const void *, size_t, hashval_t);
/* Shorthand for hashing something with an intrinsic size.  */
#define iterative_hash_object(OB,INIT) iterative_hash (&OB, sizeof (OB), INIT)

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif /* __HASHTAB_H */
@


1.26
log
@merge from gcc
@
text
@a41 4
#ifndef GTY
#define GTY(X)
#endif

d96 1
a96 1
struct GTY(()) htab {
d107 1
a107 1
  void ** GTY ((use_param, length ("%h.size"))) entries;
d131 1
a131 1
  void * GTY((skip)) alloc_arg;
@


1.25
log
@update copyright dates
@
text
@d2 1
a2 1
   Copyright (C) 1999, 2000, 2002, 2003, 2004, 2005, 2009
d160 3
@


1.24
log
@merge from gcc
@
text
@d2 2
a3 1
   Copyright (C) 1999, 2000, 2002, 2003, 2004 Free Software Foundation, Inc.
@


1.23
log
@update copyright dates
@
text
@d2 1
a2 2
   Copyright (C) 1999, 2000, 2002, 2003, 2004, 2005, 2009
   Free Software Foundation, Inc.
@


1.22
log
@merge from gcc
@
text
@d2 2
a3 1
   Copyright (C) 1999, 2000, 2002, 2003, 2004 Free Software Foundation, Inc.
@


1.21
log
@merge from gcc
@
text
@d99 1
a99 2
struct htab GTY(())
{
@


1.20
log
@Update the address and phone number of the FSF organization
@
text
@d84 9
@


1.19
log
@merge from gcc
@
text
@d17 1
a17 1
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
@


1.18
log
@merge from gcc
@
text
@d74 1
a74 1
typedef PTR (*htab_alloc) (size_t, size_t);
d77 1
a77 1
typedef void (*htab_free) (PTR);
d81 1
a81 1
typedef PTR (*htab_alloc_with_arg) (void *, size_t, size_t);
d102 1
a102 1
  PTR * GTY ((use_param, length ("%h.size"))) entries;
d126 1
a126 1
  PTR GTY((skip)) alloc_arg;
d148 1
a148 1
                                      PTR, htab_alloc_with_arg,
d157 1
a157 1
                                       PTR, htab_alloc_with_arg,
d163 5
a167 6
extern PTR	htab_find (htab_t, const void *);
extern PTR     *htab_find_slot (htab_t, const void *, enum insert_option);
extern PTR	htab_find_with_hash (htab_t, const void *, hashval_t);
extern PTR     *htab_find_slot_with_hash (htab_t, const void *,
                                          hashval_t,
                                          enum insert_option);
d186 1
a186 1
extern hashval_t htab_hash_string (const PTR);
d189 1
a189 1
extern hashval_t iterative_hash (const PTR, size_t, hashval_t);
@


1.17
log
@merge from gcc
@
text
@d51 1
a51 1
typedef hashval_t (*htab_hash) PARAMS ((const void *));
d58 1
a58 1
typedef int (*htab_eq) PARAMS ((const void *, const void *));
d62 1
a62 1
typedef void (*htab_del) PARAMS ((void *));
d68 1
a68 1
typedef int (*htab_trav) PARAMS ((void **, void *));
d74 1
a74 1
typedef PTR (*htab_alloc) PARAMS ((size_t, size_t));
d77 1
a77 1
typedef void (*htab_free) PARAMS ((PTR));
d81 2
a82 2
typedef PTR (*htab_alloc_with_arg) PARAMS ((void *, size_t, size_t));
typedef void (*htab_free_with_arg) PARAMS ((void *, void *));
d142 8
a149 8
extern htab_t	htab_create_alloc	PARAMS ((size_t, htab_hash,
						 htab_eq, htab_del,
						 htab_alloc, htab_free));

extern htab_t	htab_create_alloc_ex	PARAMS ((size_t, htab_hash,
						    htab_eq, htab_del,
						    PTR, htab_alloc_with_arg,
						    htab_free_with_arg));
d152 2
a153 2
extern htab_t htab_create PARAMS ((size_t, htab_hash, htab_eq, htab_del));
extern htab_t htab_try_create PARAMS ((size_t, htab_hash, htab_eq, htab_del));
d155 24
a178 26
extern void	htab_set_functions_ex	PARAMS ((htab_t, htab_hash,
						 htab_eq, htab_del,
						 PTR, htab_alloc_with_arg,
						 htab_free_with_arg));

extern void	htab_delete	PARAMS ((htab_t));
extern void	htab_empty	PARAMS ((htab_t));

extern PTR	htab_find	PARAMS ((htab_t, const void *));
extern PTR     *htab_find_slot	PARAMS ((htab_t, const void *,
					 enum insert_option));
extern PTR	htab_find_with_hash	  PARAMS ((htab_t, const void *,
						   hashval_t));
extern PTR     *htab_find_slot_with_hash  PARAMS ((htab_t, const void *,
						   hashval_t,
						   enum insert_option));
extern void	htab_clear_slot	PARAMS ((htab_t, void **));
extern void	htab_remove_elt	PARAMS ((htab_t, void *));
extern void	htab_remove_elt_with_hash PARAMS ((htab_t, void *, hashval_t));

extern void	htab_traverse	PARAMS ((htab_t, htab_trav, void *));
extern void	htab_traverse_noresize	PARAMS ((htab_t, htab_trav, void *));

extern size_t	htab_size	PARAMS ((htab_t));
extern size_t	htab_elements	PARAMS ((htab_t));
extern double	htab_collisions	PARAMS ((htab_t));
d187 1
a187 1
extern hashval_t htab_hash_string PARAMS ((const PTR));
d190 1
a190 1
extern hashval_t iterative_hash PARAMS ((const PTR, size_t, hashval_t));
@


1.16
log
@merge from gcc
@
text
@d2 1
a2 1
   Copyright (C) 1999, 2000, 2002, 2003 Free Software Foundation, Inc.
d104 1
a104 1
  /* Current size (in entries) of the hash table */
d107 1
a107 1
  /* Current number of elements including also deleted elements */
d110 1
a110 1
  /* Current number of deleted elements in the table */
d129 4
@


1.15
log
@merge from gcc
@
text
@d169 1
@


1.14
log
@s/burtle/iterative
@
text
@d102 1
a102 1
  PTR * GTY ((use_param (""), length ("%h.size"))) entries;
d126 1
a126 1
  PTR GTY((skip (""))) alloc_arg;
@


1.14.28.1
log
@Merge GDB mainline of 20040402 to intercu branch.
@
text
@d102 1
a102 1
  PTR * GTY ((use_param, length ("%h.size"))) entries;
d126 1
a126 1
  PTR GTY((skip)) alloc_arg;
@


1.14.28.2
log
@Merge mainline to intercu branch - 2004-09-15
@
text
@d2 1
a2 1
   Copyright (C) 1999, 2000, 2002, 2003, 2004 Free Software Foundation, Inc.
d104 1
a104 1
  /* Current size (in entries) of the hash table.  */
d107 1
a107 1
  /* Current number of elements including also deleted elements.  */
d110 1
a110 1
  /* Current number of deleted elements in the table.  */
a128 4

  /* Current size (in entries) of the hash table, as an index into the
     table of primes.  */
  unsigned int size_prime_index;
a168 1
extern void	htab_remove_elt_with_hash PARAMS ((htab_t, void *, hashval_t));
@


1.13
log
@libiberty/
        * hashtab.c (burtle_hash): New fn.
        * configure.in: Add AC_C_BIGENDIAN_CROSS.
        * aclocal.m4: Include accross.m4.
        * configure, config.in: Regenerate.
include/
        * hashtab.h (burtle_hash): Prototype.
        (burtle_hash_object): New macro.
@
text
@d187 1
a187 1
extern hashval_t burtle_hash PARAMS ((const PTR, size_t, hashval_t));
d189 1
a189 1
#define burtle_hash_object(OB,INIT) burtle_hash (&OB, sizeof (OB), INIT)
@


1.12
log
@merge from gcc
@
text
@d186 5
@


1.12.8.1
log
@2003-05-18  Mark Kettenis  <kettenis@@gnu.org>

	Merge from mainline.
	* i386-tdep.h (I386_SIZEOF_GREGS, I386_SIZEOF_FREGS,
	I386_SIZEOF_XREGS): Remove defenitions.
	(IS_FP_REGNUM, IS_SSE_REGNUM): Remove definitions.
	* i386-tdep.c (i386_gdbarch_init): Don't set register_bytes,
	register_size, call_dummy_words and sizeof_call_dummy.
	* i386-linux-tdep.c (i386_linux_init_abi): Don't set register_bytes.
	* x86-64-tdep.c (x86_64_init_abi): Don't set register_bytes and
	register_size.
	(x86_64_register_bytes): Remove variable.
	(_initialize_x86_64_tdep): Remove function.

	* i386-linux-tdep.c (i386_linux_sigcontext_addr): Call read_memory
	with correct arguments.
	* config/i386/x86-64linux.mt (TDEPFILES): Add i386-linux-tdep.o.
@
text
@a185 5
/* An iterative hash function for arbitrary data.  */
extern hashval_t iterative_hash PARAMS ((const PTR, size_t, hashval_t));
/* Shorthand for hashing something with an intrinsic size.  */
#define iterative_hash_object(OB,INIT) iterative_hash (&OB, sizeof (OB), INIT)

@


1.11
log
@include/
	* hashtab.h (htab_alloc_with_arg, htab_free_with_arg): Add new types.
	(struct htab): Add alloc_arg, alloc_with_arg_f, free_with_arg_f.
	(htab_create_alloc_ex): New prototype.
	(htab_set_functions_ex): New prototype.
libiberty/
	* hashtab.c (htab_create_alloc_ex): New function.
	(hatab_set_functions_ex): New function.
	(htab_delete, htab_expand): Support alternate allocation functions.
@
text
@d171 1
@


1.10
log
@merge from gcc
@
text
@d2 1
a2 1
   Copyright (C) 1999, 2000, 2002 Free Software Foundation, Inc.
d79 5
d87 2
a88 1
   functions mentioned below. */
d124 5
d142 5
d150 5
@


1.10.14.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@d2 1
a2 1
   Copyright (C) 1999, 2000, 2002, 2003 Free Software Foundation, Inc.
a78 5
/* Memory allocation and deallocation; variants which take an extra
   argument.  */
typedef PTR (*htab_alloc_with_arg) PARAMS ((void *, size_t, size_t));
typedef void (*htab_free_with_arg) PARAMS ((void *, void *));

d82 1
a82 2
   functions mentioned below.  The size of this structure is subject to
   change.  */
a117 5

  /* Alternate allocate/free functions, which take an extra argument.  */
  PTR GTY((skip (""))) alloc_arg;
  htab_alloc_with_arg alloc_with_arg_f;
  htab_free_with_arg free_with_arg_f;
a130 5
extern htab_t	htab_create_alloc_ex	PARAMS ((size_t, htab_hash,
						    htab_eq, htab_del,
						    PTR, htab_alloc_with_arg,
						    htab_free_with_arg));

a134 5
extern void	htab_set_functions_ex	PARAMS ((htab_t, htab_hash,
						 htab_eq, htab_del,
						 PTR, htab_alloc_with_arg,
						 htab_free_with_arg));

a149 1
extern void	htab_traverse_noresize	PARAMS ((htab_t, htab_trav, void *));
a162 5

/* An iterative hash function for arbitrary data.  */
extern hashval_t iterative_hash PARAMS ((const PTR, size_t, hashval_t));
/* Shorthand for hashing something with an intrinsic size.  */
#define iterative_hash_object(OB,INIT) iterative_hash (&OB, sizeof (OB), INIT)
@


1.10.12.1
log
@2003-02-07  David Carlton  <carlton@@math.stanford.edu>

	* Merge with mainline; tag is carlton_dictionary-20030207-merge.
@
text
@d2 1
a2 1
   Copyright (C) 1999, 2000, 2002, 2003 Free Software Foundation, Inc.
a78 5
/* Memory allocation and deallocation; variants which take an extra
   argument.  */
typedef PTR (*htab_alloc_with_arg) PARAMS ((void *, size_t, size_t));
typedef void (*htab_free_with_arg) PARAMS ((void *, void *));

d82 1
a82 2
   functions mentioned below.  The size of this structure is subject to
   change.  */
a117 5

  /* Alternate allocate/free functions, which take an extra argument.  */
  PTR GTY((skip (""))) alloc_arg;
  htab_alloc_with_arg alloc_with_arg_f;
  htab_free_with_arg free_with_arg_f;
a130 5
extern htab_t	htab_create_alloc_ex	PARAMS ((size_t, htab_hash,
						    htab_eq, htab_del,
						    PTR, htab_alloc_with_arg,
						    htab_free_with_arg));

a133 5

extern void	htab_set_functions_ex	PARAMS ((htab_t, htab_hash,
						 htab_eq, htab_del,
						 PTR, htab_alloc_with_arg,
						 htab_free_with_arg));
@


1.10.12.2
log
@2003-04-16  David Carlton  <carlton@@bactrian.org>

	* Merge with mainline; tag is carlton_dictionary-20030416-merge.
@
text
@a170 1
extern void	htab_traverse_noresize	PARAMS ((htab_t, htab_trav, void *));
@


1.10.12.3
log
@2003-05-23  David Carlton  <carlton@@bactrian.org>

	* Merge with mainline; tag is carlton_dictionary-20030523-merge.
@
text
@a185 5
/* An iterative hash function for arbitrary data.  */
extern hashval_t iterative_hash PARAMS ((const PTR, size_t, hashval_t));
/* Shorthand for hashing something with an intrinsic size.  */
#define iterative_hash_object(OB,INIT) iterative_hash (&OB, sizeof (OB), INIT)

@


1.9
log
@merge from gcc
@
text
@d2 1
a2 1
   Copyright (C) 1999, 2000 Free Software Foundation, Inc.
d39 1
a39 1
#include <ansidecl.h>
@


1.8
log
@merge from gcc
@
text
@d41 4
d70 9
d84 1
a84 1
struct htab
d96 1
a96 1
  PTR *entries;
d115 3
a117 3
  /* This is non-zero if we are allowed to return NULL for function calls
     that allocate memory.  */
  int return_allocation_failure;
d127 7
a133 2
extern htab_t	htab_create	PARAMS ((size_t, htab_hash,
					 htab_eq, htab_del));
a134 5
/* This function is like htab_create, but may return NULL if memory
   allocation fails, and also signals that htab_find_slot_with_hash and
   htab_find_slot are allowed to return NULL when inserting.  */
extern htab_t	htab_try_create	PARAMS ((size_t, htab_hash,
					 htab_eq, htab_del));
@


1.8.10.1
log
@Merge with mainline, kseitz_interps-20020619-merge.
@
text
@a40 4
#ifndef GTY
#define GTY(X)
#endif

a65 9
/* Memory-allocation function, with the same functionality as calloc().
   Iff it returns NULL, the hash table implementation will pass an error
   code back to the user, so if your code doesn't handle errors,
   best if you use xcalloc instead.  */
typedef PTR (*htab_alloc) PARAMS ((size_t, size_t));

/* We also need a free() routine.  */
typedef void (*htab_free) PARAMS ((PTR));

d71 1
a71 1
struct htab GTY(())
d83 1
a83 1
  PTR * GTY ((use_param (""), length ("%h.size"))) entries;
d102 3
a104 3
  /* Pointers to allocate/free functions.  */
  htab_alloc alloc_f;
  htab_free free_f;
d114 2
a115 7
extern htab_t	htab_create_alloc	PARAMS ((size_t, htab_hash,
						 htab_eq, htab_del,
						 htab_alloc, htab_free));

/* Backward-compatibility functions.  */
extern htab_t htab_create PARAMS ((size_t, htab_hash, htab_eq, htab_del));
extern htab_t htab_try_create PARAMS ((size_t, htab_hash, htab_eq, htab_del));
d117 5
@


1.8.10.2
log
@Merge w/trunk (kseitz_interps-20020722-merge).
@
text
@d2 1
a2 1
   Copyright (C) 1999, 2000, 2002 Free Software Foundation, Inc.
d39 1
a39 1
#include "ansidecl.h"
@


1.8.8.1
log
@merge from trunk
@
text
@a40 4
#ifndef GTY
#define GTY(X)
#endif

a65 9
/* Memory-allocation function, with the same functionality as calloc().
   Iff it returns NULL, the hash table implementation will pass an error
   code back to the user, so if your code doesn't handle errors,
   best if you use xcalloc instead.  */
typedef PTR (*htab_alloc) PARAMS ((size_t, size_t));

/* We also need a free() routine.  */
typedef void (*htab_free) PARAMS ((PTR));

d71 1
a71 1
struct htab GTY(())
d83 1
a83 1
  PTR * GTY ((use_param (""), length ("%h.size"))) entries;
d102 3
a104 3
  /* Pointers to allocate/free functions.  */
  htab_alloc alloc_f;
  htab_free free_f;
d114 2
a115 7
extern htab_t	htab_create_alloc	PARAMS ((size_t, htab_hash,
						 htab_eq, htab_del,
						 htab_alloc, htab_free));

/* Backward-compatibility functions.  */
extern htab_t htab_create PARAMS ((size_t, htab_hash, htab_eq, htab_del));
extern htab_t htab_try_create PARAMS ((size_t, htab_hash, htab_eq, htab_del));
d117 5
@


1.7
log
@Synchronise with copyright dates on FSF GCC versions of these files
@
text
@d148 3
@


1.6
log
@Fix typos in ChangeLogs; add coff/external.h; fix copyright dates
@
text
@d2 1
a2 1
   Copyright 1999, 2000 Free Software Foundation, Inc.
@


1.5
log
@	* hashtab.h (struct htab): Add member return_allocation_failure.
	(htab_try_create): New prototype.  Mention which functions may
	return NULL when this is used.
@
text
@d2 1
a2 1
   Copyright (C) 1999, 2000 Free Software Foundation, Inc.
@


1.4
log
@	* hashtab.h: Change void * to PTR where necessary.
@
text
@d101 4
d115 6
@


1.3
log
@2000-06-15  H.J. Lu  <hjl@@gnu.org>

	* sort.h: New file. Impored from gcc.

	* hashtab.h: Updated from from gcc.

2000-06-07  Kaveh R. Ghazi  <ghazi@@caip.rutgers.edu>

	* demangle.h (demangling_styles): Remove trailing comma in enum.

	* dyn-string.h (dyn_string_append_char): Change parameter from
	char to int.

2000-06-04  Alex Samuel  <samuel@@codesourcery.com>

	* dyn-string.h: Move here from gcc/dyn-string.h.  Add new functions.

	* demangle.h (DMGL_GNU_NEW_ABI): New macro.
	(DMGL_STYLE_MASK): Or in DMGL_GNU_NEW_ABI.
	(current_demangling_style): Add gnu_new_abi_demangling.
	(GNU_NEW_ABI_DEMANGLING_STYLE_STRING): New macro.
	(GNU_NEW_ABI_DEMANGLING): Likewise.
	(cplus_demangle_new_abi): New declaration.
@
text
@d83 1
a83 1
  void **entries;
d115 2
a116 2
extern void    *htab_find	PARAMS ((htab_t, const void *));
extern void   **htab_find_slot	PARAMS ((htab_t, const void *,
d118 1
a118 1
extern void    *htab_find_with_hash	  PARAMS ((htab_t, const void *,
d120 1
a120 1
extern void   **htab_find_slot_with_hash  PARAMS ((htab_t, const void *,
@


1.2
log
@merge from gcc
@
text
@d2 1
a2 1
   Copyright (C) 1999 Free Software Foundation, Inc.
d41 3
d47 1
a47 1
typedef unsigned int (*htab_hash) PARAMS ((const void *));
d105 3
d116 7
a122 5
extern void   **htab_find_slot	PARAMS ((htab_t, const void *, int));
extern void    *htab_find_with_hash		PARAMS ((htab_t, const void *,
							 unsigned int));
extern void   **htab_find_slot_with_hash	PARAMS ((htab_t, const void *,
							 unsigned int, int));
d131 6
@


1.1
log
@Initial revision
@
text
@d41 1
a41 1
/* The hash table element is represented by the following type. */
d43 19
a61 1
typedef const void *hash_table_entry_t;
d68 1
a68 1
typedef struct hash_table
d70 12
d84 1
d86 2
a87 1
  size_t number_of_elements;
d89 2
a90 1
  size_t number_of_deleted_elements;
d92 3
a94 2
     of all calls of `find_hash_table_entry' for the hash table. */
  int searches;
d97 2
a98 10
  int collisions;
  /* Pointer to function for evaluation of hash value (any unsigned value).
     This function has one parameter of type hash_table_entry_t. */
  unsigned (*hash_function) PARAMS ((hash_table_entry_t));
  /* Pointer to function for test on equality of hash table elements (two
     parameter of type hash_table_entry_t. */
  int (*eq_function) PARAMS ((hash_table_entry_t, hash_table_entry_t));
  /* Table itself */
  hash_table_entry_t *entries;
} *hash_table_t;
d100 1
d104 19
a122 27
extern hash_table_t create_hash_table
  PARAMS ((size_t, unsigned (*) (hash_table_entry_t),
	   int (*) (hash_table_entry_t, hash_table_entry_t)));

extern void delete_hash_table PARAMS ((hash_table_t));

extern void empty_hash_table PARAMS ((hash_table_t));

extern hash_table_entry_t *find_hash_table_entry
  PARAMS ((hash_table_t, hash_table_entry_t, int));

extern void remove_element_from_hash_table_entry PARAMS ((hash_table_t,
							  hash_table_entry_t));

extern void clear_hash_table_slot PARAMS ((hash_table_t, hash_table_entry_t *));

extern void traverse_hash_table PARAMS ((hash_table_t,
					 int (*) (hash_table_entry_t, void *),
					 void *));
    
extern size_t hash_table_size PARAMS ((hash_table_t));

extern size_t hash_table_elements_number PARAMS ((hash_table_t));

extern int hash_table_collisions PARAMS ((hash_table_t));

extern int all_hash_table_collisions PARAMS ((void));
@


1.1.1.1
log
@import libiberty from egcs
@
text
@@
