head	1.1;
access;
symbols
	sid-snapshot-20180601:1.1
	sid-snapshot-20180501:1.1
	sid-snapshot-20180401:1.1
	sid-snapshot-20180301:1.1
	sid-snapshot-20180201:1.1
	sid-snapshot-20180101:1.1
	sid-snapshot-20171201:1.1
	sid-snapshot-20171101:1.1
	sid-snapshot-20171001:1.1
	sid-snapshot-20170901:1.1
	sid-snapshot-20170801:1.1
	sid-snapshot-20170701:1.1
	sid-snapshot-20170601:1.1
	sid-snapshot-20170501:1.1
	sid-snapshot-20170401:1.1
	sid-snapshot-20170301:1.1
	sid-snapshot-20170201:1.1
	sid-snapshot-20170101:1.1
	sid-snapshot-20161201:1.1
	sid-snapshot-20161101:1.1
	sid-snapshot-20160901:1.1
	sid-snapshot-20160801:1.1
	sid-snapshot-20160701:1.1
	sid-snapshot-20160601:1.1
	sid-snapshot-20160501:1.1
	sid-snapshot-20160401:1.1
	sid-snapshot-20160301:1.1
	sid-snapshot-20160201:1.1
	sid-snapshot-20160101:1.1
	sid-snapshot-20151201:1.1
	sid-snapshot-20151101:1.1
	sid-snapshot-20151001:1.1
	sid-snapshot-20150901:1.1
	sid-snapshot-20150801:1.1
	sid-snapshot-20150701:1.1
	sid-snapshot-20150601:1.1
	sid-snapshot-20150501:1.1
	sid-snapshot-20150401:1.1
	cygwin-1_7_35-release:1.1
	sid-snapshot-20150301:1.1
	cygwin-1_7_34-release:1.1
	sid-snapshot-20150201:1.1
	sid-snapshot-20150101:1.1
	sid-snapshot-20141201:1.1
	cygwin-1_7_33-release:1.1
	sid-snapshot-20141101:1.1
	sid-snapshot-20141001:1.1
	sid-snapshot-20140901:1.1
	cygwin-1_7_32-release:1.1
	sid-snapshot-20140801:1.1
	cygwin-1_7_31-release:1.1
	sid-snapshot-20140701:1.1
	sid-snapshot-20140601:1.1
	cygwin-1_7_30-release:1.1
	sid-snapshot-20140501:1.1
	cygwin-1_7_29-release:1.1
	sid-snapshot-20140401:1.1
	sid-snapshot-20140301:1.1
	cygwin-1_7_28-release:1.1
	sid-snapshot-20140201:1.1
	sid-snapshot-20140101:1.1
	sid-snapshot-20131201:1.1
	cygwin-1_7_27-release:1.1
	cygwin-1_7_26-release:1.1
	sid-snapshot-20131101:1.1
	sid-snapshot-20131001:1.1
	binutils-2_24-branch:1.1.0.26
	binutils-2_24-branchpoint:1.1
	binutils-2_21_1:1.1
	sid-snapshot-20130901:1.1
	cygwin-1_7_25-release:1.1
	gdb_7_6_1-2013-08-30-release:1.1
	cygwin-1_7_24-release:1.1
	cygwin-1_7_23-release:1.1
	sid-snapshot-20130801:1.1
	cygwin-1_7_22-release:1.1
	cygwin-1_7_21-release:1.1
	sid-snapshot-20130701:1.1
	cygwin-1_7_20-release:1.1
	cygwin-1_7_19-release:1.1
	sid-snapshot-20130601:1.1
	sid-snapshot-20130501:1.1
	gdb_7_6-2013-04-26-release:1.1
	cygwin-64bit-postmerge:1.1
	cygwin-64bit-premerge-branch:1.1.0.24
	cygwin-64bit-premerge:1.1
	sid-snapshot-20130401:1.1
	binutils-2_23_2:1.1
	gdb_7_6-branch:1.1.0.22
	gdb_7_6-2013-03-12-branchpoint:1.1
	cygwin-1_7_18-release:1.1
	sid-snapshot-20130301:1.1
	sid-snapshot-20130201:1.1
	sid-snapshot-20130101:1.1
	sid-snapshot-20121201:1.1
	gdb_7_5_1-2012-11-29-release:1.1
	binutils-2_23_1:1.1
	sid-snapshot-20121101:1.1
	binutils-2_23:1.1
	cygwin-1_7_17-release:1.1
	sid-snapshot-20121001:1.1
	sid-snapshot-20120901:1.1
	gdb_7_5-2012-08-17-release:1.1
	cygwin-64bit-branch:1.1.0.20
	sid-snapshot-20120801:1.1
	binutils-2_23-branch:1.1.0.18
	binutils-2_23-branchpoint:1.1
	cygwin-1_7_16-release:1.1
	gdb_7_5-branch:1.1.0.16
	gdb_7_5-2012-07-18-branchpoint:1.1
	sid-snapshot-20120701:1.1
	sid-snapshot-20120601:1.1
	cygwin-1_7_15-release:1.1
	sid-snapshot-20120501:1.1
	binutils-2_22_branch:1.1.0.14
	gdb_7_4_1-2012-04-26-release:1.1
	cygwin-1_7_14_2-release:1.1
	cygwin-1_7_14-release:1.1
	cygwin-1_7_12-release:1.1
	sid-snapshot-20120401:1.1
	sid-snapshot-20120301:1.1
	cygwin-1_7_11-release:1.1
	cygwin-1_7_10-release:1.1
	sid-snapshot-20120201:1.1
	gdb_7_4-2012-01-24-release:1.1
	sid-snapshot-20120101:1.1
	gdb_7_4-branch:1.1.0.12
	gdb_7_4-2011-12-13-branchpoint:1.1
	sid-snapshot-20111201:1.1
	binutils-2_22:1.1
	sid-snapshot-20111101:1.1
	sid-snapshot-20111001:1.1
	binutils-2_22-branch:1.1.0.10
	binutils-2_22-branchpoint:1.1
	gdb_7_3_1-2011-09-04-release:1.1
	sid-snapshot-20110901:1.1
	sid-snapshot-20110801:1.1
	gdb_7_3-2011-07-26-release:1.1
	sid-snapshot-20110701:1.1
	sid-snapshot-20110601:1.1
	sid-snapshot-20110501:1.1
	gdb_7_3-branch:1.1.0.8
	gdb_7_3-2011-04-01-branchpoint:1.1
	sid-snapshot-20110401:1.1
	cygwin-1_7_9-release:1.1
	sid-snapshot-20110301:1.1
	sid-snapshot-20110201:1.1
	sid-snapshot-20110101:1.1
	binutils-2_21:1.1
	sid-snapshot-20101201:1.1
	binutils-2_21-branch:1.1.0.6
	binutils-2_21-branchpoint:1.1
	sid-snapshot-20101101:1.1
	sid-snapshot-20101001:1.1
	gdb_7_2-2010-09-02-release:1.1
	sid-snapshot-20100901:1.1
	sid-snapshot-20100801:1.1
	gdb_7_2-branch:1.1.0.4
	gdb_7_2-2010-07-07-branchpoint:1.1
	sid-snapshot-20100701:1.1
	sid-snapshot-20100601:1.1
	sid-snapshot-20100501:1.1
	cygwin-1_7_5-release:1.1
	cygwin-1_7_4-release:1.1
	sid-snapshot-20100401:1.1
	cygwin-1_7_3-release:1.1
	cygwin-1_7_2-release:1.1
	gdb_7_1-2010-03-18-release:1.1
	sid-snapshot-20100301:1.1
	gdb_7_1-branch:1.1.0.2
	gdb_7_1-2010-02-18-branchpoint:1.1
	binutils_latest_snapshot:1.1;
locks; strict;
comment	@ * @;


1.1
date	2010.02.17.10.12.48;	author gingold;	state Exp;
branches;
next	;


desc
@@


1.1
log
@2010-02-17  Tristan Gingold  <gingold@@adacore.com>

	* dmt.h, dst.h, eeom.h, egps.h, egsd.h, egst.h, egsy.h: New Files.
	* eiaf.h, eicp.h, eiha.h, eihd.h, eihi.h, eihs.h, eihvn.h: Ditto.
	* eisd.h, emh.h, eobjrec.h, esdf.h, esrf.h, etir.h, shl.h: Ditto.
@
text
@/* Alpha VMS external format of Extended Text Information and Relocation.

   Copyright 2010 Free Software Foundation, Inc.
   Written by Tristan Gingold <gingold@@adacore.com>, AdaCore.

   This file is part of BFD, the Binary File Descriptor library.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
   MA 02110-1301, USA.  */

#ifndef _VMS_ETIR_H
#define _VMS_ETIR_H

#define ETIR__C_MINSTACOD 0	/* Minimum stack code.		*/
#define ETIR__C_STA_GBL   0	/* Stack global symbol value.	*/
#define ETIR__C_STA_LW    1	/* Stack longword.		*/
#define ETIR__C_STA_QW    2	/* Stack quadword.		*/
#define ETIR__C_STA_PQ    3	/* Stack psect base + quadword off.  */
#define ETIR__C_STA_LI    4	/* Stack literal.		*/
#define ETIR__C_STA_MOD   5	/* Stack module.		*/
#define ETIR__C_STA_CKARG 6	/* Check Arguments.		*/
#define ETIR__C_MAXSTACOD 6	/* Maximum stack code.		*/

#define ETIR__C_MINSTOCOD  50	/* Minimum store code.		*/
#define ETIR__C_STO_B      50	/* Store byte.			*/
#define ETIR__C_STO_W      51	/* Store word.			*/
#define ETIR__C_STO_LW     52	/* Store longword.		*/
#define ETIR__C_STO_QW     53	/* Store quadword.		*/
#define ETIR__C_STO_IMMR   54	/* Store immediate Repeated.	*/
#define ETIR__C_STO_GBL    55	/* Store global.		*/
#define ETIR__C_STO_CA     56	/* Store code address.		*/
#define ETIR__C_STO_RB     57	/* Store relative branch.	*/
#define ETIR__C_STO_AB     58	/* Store absolute branch.	*/
#define ETIR__C_STO_OFF    59	/* Store offset within psect.	*/
#define ETIR__C_STO_IMM    61	/* Store immediate.		*/
#define ETIR__C_STO_GBL_LW 62	/* Store global Longword.	*/
#define ETIR__C_STO_LP_PSB 63	/* STO_LP_PSB not valid in level 2 use STC_LP_PSB.  */
#define ETIR__C_STO_HINT_GBL 64  /* Store 14 bit HINT at global address.  */
#define ETIR__C_STO_HINT_PS  65  /* Store 14 bit HINT at psect + offset */
#define ETIR__C_MAXSTOCOD    65  /* Maximum store code.		*/

/* Operate codes.  */
#define ETIR__C_MINOPRCOD 100	/* Minimum operate code.	*/
#define ETIR__C_OPR_NOP   100	/* No-op.			*/
#define ETIR__C_OPR_ADD   101	/* Add.				*/
#define ETIR__C_OPR_SUB   102	/* Subtract.			*/
#define ETIR__C_OPR_MUL   103	/* Multiply.			*/
#define ETIR__C_OPR_DIV   104	/* Divide.			*/
#define ETIR__C_OPR_AND   105	/* Logical AND.			*/
#define ETIR__C_OPR_IOR   106	/* Logical inclusive OR.	*/
#define ETIR__C_OPR_EOR   107	/* Logical exclusive OR.	*/
#define ETIR__C_OPR_NEG   108	/* Negate.			*/
#define ETIR__C_OPR_COM   109	/* Complement.			*/
#define ETIR__C_OPR_INSV  110	/* Insert bit field.		*/
#define ETIR__C_OPR_ASH   111	/* Arithmetic shift.		*/
#define ETIR__C_OPR_USH   112	/* Unsigned shift.		*/
#define ETIR__C_OPR_ROT   113	/* Rotate.			*/
#define ETIR__C_OPR_SEL   114	/* Select one of 3 long on top of stack.   */
#define ETIR__C_OPR_REDEF 115	/* Redefine this symbol after pass 2.  */
#define ETIR__C_OPR_DFLIT 116	/* Define a literal.		*/
#define ETIR__C_MAXOPRCOD 116	/* Maximum operate code.	*/

/* Control codes.  */
#define ETIR__C_MINCTLCOD 150	/* Minimum control code.	*/
#define ETIR__C_CTL_SETRB 150	/* Set relocation base.		*/
#define ETIR__C_CTL_AUGRB 151	/* Augment relocation base.	*/
#define ETIR__C_CTL_DFLOC 152	/* Define debug location.	*/
#define ETIR__C_CTL_STLOC 153	/* Set debug location.		*/
#define ETIR__C_CTL_STKDL 154	/* Stack debug location.	*/
#define ETIR__C_MAXCTLCOD 154	/* Maximum control code.	*/

/* Store-conditional (STC) codes.  */
#define ETIR__C_MINSTCCOD   200 /* Minimum store-conditional code.   */
#define ETIR__C_STC_LP      200 /* STC Linkage Pair.   */
#define ETIR__C_STC_LP_PSB  201 /* STC Linkage Pair with Proc Signature.  */
#define ETIR__C_STC_GBL     202 /* STC Address at global address.  */
#define ETIR__C_STC_GCA     203 /* STC Code Address at global address.  */
#define ETIR__C_STC_PS      204 /* STC Address at psect + offset.  */
#define ETIR__C_STC_NOP_GBL 205 /* STC NOP at address of global.  */
#define ETIR__C_STC_NOP_PS  206 /* STC NOP at pect + offset.  */
#define ETIR__C_STC_BSR_GBL 207 /* STC BSR at global address.  */
#define ETIR__C_STC_BSR_PS  208 /* STC BSR at pect + offset.  */
#define ETIR__C_STC_LDA_GBL 209 /* STC LDA at global address.  */
#define ETIR__C_STC_LDA_PS  210 /* STC LDA at psect + offset.  */
#define ETIR__C_STC_BOH_GBL 211 /* STC BSR or Hint at global address.  */
#define ETIR__C_STC_BOH_PS  212 /* STC BSR or Hint at pect + offset.  */
#define ETIR__C_STC_NBH_GBL 213 /* STC NOP,BSR or HINT at global address.  */
#define ETIR__C_STC_NBH_PS  214 /* STC NOP,BSR or HINT at psect + offset.  */
#define ETIR__C_MAXSTCCOD   214 /* Maximum store-conditional code.   */

#define ETIR__C_HEADER_SIZE 4	/* Size of the header of a command */

struct vms_etir
{
  /* Commands.  See above.  */
  unsigned char rectyp[2];

  /* Size (including this header).  */
  unsigned char size[2];
};

#endif /* _VMS_ETIR_H */
@
