head	1.1;
access;
symbols
	newlib-csl-coldfire-4_1-32:1.1.16.61
	binutils-csl-coldfire-4_1-32:1.1.14.132
	newlib-csl-sourcerygxx-4_1-32:1.1.16.61
	binutils-csl-sourcerygxx-4_1-32:1.1.14.132
	newlib-csl-innovasic-fido-3_4_4-33:1.1.16.61
	binutils-csl-innovasic-fido-3_4_4-33:1.1.14.132
	binutils-csl-sourcerygxx-3_4_4-32:1.1.6.5
	newlib-csl-coldfire-4_1-30:1.1.16.57
	binutils-csl-coldfire-4_1-30:1.1.14.124
	newlib-csl-sourcerygxx-4_1-30:1.1.16.57
	binutils-csl-sourcerygxx-4_1-30:1.1.14.124
	newlib-csl-coldfire-4_1-28:1.1.16.57
	binutils-csl-coldfire-4_1-28:1.1.14.124
	binutils-csl-sourcerygxx-4_1-29:1.1.14.129
	newlib-csl-sourcerygxx-4_1-28:1.1.16.57
	binutils-csl-sourcerygxx-4_1-28:1.1.14.124
	newlib-csl-arm-2006q3-27:1.1.16.57
	binutils-csl-arm-2006q3-27:1.1.14.120
	newlib-csl-sourcerygxx-4_1-27:1.1.16.57
	binutils-csl-sourcerygxx-4_1-27:1.1.14.120
	newlib-csl-arm-2006q3-26:1.1.16.54
	binutils-csl-arm-2006q3-26:1.1.14.115
	newlib-csl-sourcerygxx-4_1-26:1.1.16.54
	binutils-csl-sourcerygxx-4_1-26:1.1.14.115
	binutils-csl-sourcerygxx-4_1-25:1.1.14.113
	newlib-csl-sourcerygxx-4_1-24:1.1.16.49
	binutils-csl-sourcerygxx-4_1-24:1.1.14.100
	newlib-csl-sourcerygxx-4_1-23:1.1.16.48
	binutils-csl-sourcerygxx-4_1-23:1.1.14.100
	gdb-csl-symbian-6_4_50_20060226-12:1.1.12.26.2.33
	newlib-csl-sourcerygxx-4_1-21:1.1.16.48
	binutils-csl-sourcerygxx-4_1-21:1.1.14.99
	newlib-csl-arm-2006q3-21:1.1.16.48
	binutils-csl-arm-2006q3-21:1.1.14.99
	binutils-csl-sourcerygxx-4_1-22:1.1.14.99
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.1.14.98
	binutils-csl-sourcerygxx-4_1-20:1.1.14.91
	newlib-csl-arm-2006q3-19:1.1.16.36
	binutils-csl-arm-2006q3-19:1.1.14.90
	newlib-csl-sourcerygxx-4_1-19:1.1.16.36
	binutils-csl-sourcerygxx-4_1-19:1.1.14.90
	newlib-csl-sourcerygxx-4_1-18:1.1.16.34
	binutils-csl-sourcerygxx-4_1-18:1.1.14.84
	binutils-csl-renesas-4_1-9:1.1.14.74
	gdb-csl-sourcerygxx-3_4_4-25:1.1.10.7
	binutils-csl-sourcerygxx-3_4_4-25:1.1.6.5
	gdb-csl-symbian-6_4_50_20060226-11:1.1.12.26.2.24
	binutils-csl-renesas-4_1-8:1.1.14.65
	binutils-csl-renesas-4_1-7:1.1.14.58
	binutils-csl-renesas-4_1-6:1.1.14.58
	newlib-csl-sourcerygxx-4_1-17:1.1.16.20
	gdb-csl-sourcerygxx-4_1-17:1.1.12.69
	binutils-csl-sourcerygxx-4_1-17:1.1.14.57
	gdb-csl-20060226-branch-local-2:1.1.12.69
	newlib-csl-sourcerygxx-4_1-14:1.1.16.18
	gdb-csl-sourcerygxx-4_1-14:1.1.12.61
	binutils-csl-sourcerygxx-4_1-14:1.1.14.49
	binutils-csl-sourcerygxx-4_1-15:1.1.14.49
	newlib-csl-sourcerygxx-4_1-13:1.1.16.18
	gdb-csl-sourcerygxx-4_1-13:1.1.12.61
	binutils-csl-sourcerygxx-4_1-13:1.1.14.49
	newlib-csl-sourcerygxx-4_1-12:1.1.16.17
	gdb-csl-sourcerygxx-4_1-12:1.1.12.60
	binutils-csl-sourcerygxx-4_1-12:1.1.14.49
	gdb-csl-sourcerygxx-3_4_4-21:1.1.12.59
	binutils-csl-sourcerygxx-3_4_4-21:1.1.14.47
	binutils-csl-wrs-linux-3_4_4-24:1.1.4.17
	binutils-csl-wrs-linux-3_4_4-23:1.1.4.17
	newlib-csl-sourcerygxx-4_1-9:1.1.16.17
	gdb-csl-sourcerygxx-4_1-9:1.1.12.57
	binutils-csl-sourcerygxx-4_1-9:1.1.14.43
	newlib-csl-sourcerygxx-4_1-8:1.1.16.16
	gdb-csl-sourcerygxx-4_1-8:1.1.12.55
	binutils-csl-sourcerygxx-4_1-8:1.1.14.43
	newlib-csl-sourcerygxx-4_1-7:1.1.16.14
	gdb-csl-sourcerygxx-4_1-7:1.1.12.48
	binutils-csl-sourcerygxx-4_1-7:1.1.14.43
	newlib-csl-arm-2006q1-6:1.1.16.13
	gdb-csl-arm-2006q1-6:1.1.12.46
	binutils-csl-arm-2006q1-6:1.1.14.43
	newlib-csl-sourcerygxx-4_1-6:1.1.16.13
	gdb-csl-sourcerygxx-4_1-6:1.1.12.46
	binutils-csl-sourcerygxx-4_1-6:1.1.14.43
	binutils-csl-wrs-linux-3_4_4-22:1.1.4.17
	gdb-csl-symbian-6_4_50_20060226-10:1.1.12.26.2.19
	gdb-csl-symbian-6_4_50_20060226-9:1.1.12.26.2.17
	gdb-csl-symbian-6_4_50_20060226-8:1.1.12.26.2.13
	gdb-csl-coldfire-4_1-11:1.1.12.37
	binutils-csl-coldfire-4_1-11:1.1.14.38
	gdb-csl-sourcerygxx-3_4_4-19:1.1.12.37
	binutils-csl-sourcerygxx-3_4_4-19:1.1.14.37
	gdb-csl-coldfire-4_1-10:1.1.12.37
	binutils-csl-coldfire-4_1-10:1.1.14.35
	newlib-csl-sourcerygxx-4_1-5:1.1.16.5
	gdb-csl-sourcerygxx-4_1-5:1.1.12.37
	binutils-csl-sourcerygxx-4_1-5:1.1.14.35
	newlib-csl-sourcerygxx-4_1-4:1.1.16.5
	gdb-csl-sourcerygxx-4_1-4:1.1.12.36
	binutils-csl-sourcerygxx-4_1-4:1.1.14.31
	binutils-csl-wrs-linux-3_4_4-21:1.1.4.16
	gdb-csl-morpho-4_1-4:1.1.12.31
	binutils-csl-morpho-4_1-4:1.1.14.26
	gdb-csl-sourcerygxx-3_4_4-17:1.1.12.29
	binutils-csl-sourcerygxx-3_4_4-17:1.1.14.21
	binutils-csl-wrs-linux-3_4_4-20:1.1.4.15
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.1.12.29
	gdb-csl-symbian-20060226-branch:1.1.12.26.0.2
	gdb-csl-symbian-20060226-branchpoint:1.1.12.26
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.1.12.24
	newlib-csl-20060320-branch:1.1.0.16
	binutils-csl-2_17-branch:1.1.0.14
	gdb-csl-20060226-branch:1.1.0.12
	gdb-csl-gxxpro-6_3-branch:1.1.0.10
	gdb-csl-arm-20051020-branch:1.1.0.8
	binutils-csl-gxxpro-3_4-branch:1.1.0.6
	gdb-csl-arm-20050325-2005-q1b:1.1.2.26
	binutils-csl-arm-2005q1b:1.1.4.13
	gdb-csl-arm-20050325-2005-q1a:1.1.2.20
	binutils-csl-arm-2005q1a:1.1.4.4
	binutils-csl-arm-2005q1-branch:1.1.0.4
	csl-arm-20050325-branch:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2005.03.25.20.52.20;	author drow;	state dead;
branches
	1.1.2.1
	1.1.4.1
	1.1.6.1
	1.1.8.1
	1.1.10.1
	1.1.12.1
	1.1.14.1
	1.1.16.1;
next	;

1.1.2.1
date	2005.03.25.20.52.20;	author drow;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2005.03.25.21.09.22;	author drow;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2005.03.25.21.19.19;	author drow;	state Exp;
branches;
next	1.1.2.4;

1.1.2.4
date	2005.03.25.21.28.50;	author drow;	state Exp;
branches;
next	1.1.2.5;

1.1.2.5
date	2005.03.25.21.46.10;	author drow;	state Exp;
branches;
next	1.1.2.6;

1.1.2.6
date	2005.03.25.22.02.34;	author drow;	state Exp;
branches;
next	1.1.2.7;

1.1.2.7
date	2005.03.25.22.20.46;	author drow;	state Exp;
branches;
next	1.1.2.8;

1.1.2.8
date	2005.03.28.18.31.39;	author mmitchel;	state Exp;
branches;
next	1.1.2.9;

1.1.2.9
date	2005.03.28.18.33.28;	author mmitchel;	state Exp;
branches;
next	1.1.2.10;

1.1.2.10
date	2005.03.28.18.46.12;	author mmitchel;	state Exp;
branches;
next	1.1.2.11;

1.1.2.11
date	2005.03.28.19.10.20;	author mmitchel;	state Exp;
branches;
next	1.1.2.12;

1.1.2.12
date	2005.03.28.19.10.50;	author mmitchel;	state Exp;
branches;
next	1.1.2.13;

1.1.2.13
date	2005.03.28.19.11.14;	author mmitchel;	state Exp;
branches;
next	1.1.2.14;

1.1.2.14
date	2005.03.28.19.34.23;	author mmitchel;	state Exp;
branches;
next	1.1.2.15;

1.1.2.15
date	2005.03.28.19.52.12;	author drow;	state Exp;
branches;
next	1.1.2.16;

1.1.2.16
date	2005.03.28.20.05.39;	author mmitchel;	state Exp;
branches;
next	1.1.2.17;

1.1.2.17
date	2005.03.28.20.06.59;	author mmitchel;	state Exp;
branches;
next	1.1.2.18;

1.1.2.18
date	2005.03.29.02.52.04;	author pbrook;	state Exp;
branches;
next	1.1.2.19;

1.1.2.19
date	2005.03.30.14.59.25;	author drow;	state Exp;
branches;
next	1.1.2.20;

1.1.2.20
date	2005.03.30.16.08.38;	author pbrook;	state Exp;
branches;
next	1.1.2.21;

1.1.2.21
date	2005.04.05.17.53.02;	author mmitchel;	state Exp;
branches;
next	1.1.2.22;

1.1.2.22
date	2005.04.25.20.43.39;	author pbrook;	state Exp;
branches;
next	1.1.2.23;

1.1.2.23
date	2005.04.28.01.46.47;	author pbrook;	state Exp;
branches;
next	1.1.2.24;

1.1.2.24
date	2005.04.28.14.07.52;	author pbrook;	state Exp;
branches;
next	1.1.2.25;

1.1.2.25
date	2005.04.29.14.18.05;	author pbrook;	state Exp;
branches;
next	1.1.2.26;

1.1.2.26
date	2005.04.29.14.39.19;	author pbrook;	state Exp;
branches;
next	1.1.2.27;

1.1.2.27
date	2005.06.07.22.56.33;	author mmitchel;	state Exp;
branches;
next	1.1.2.28;

1.1.2.28
date	2005.06.08.03.46.18;	author mmitchel;	state Exp;
branches;
next	1.1.2.29;

1.1.2.29
date	2005.06.08.16.38.24;	author mmitchel;	state Exp;
branches;
next	1.1.2.30;

1.1.2.30
date	2005.06.08.16.48.51;	author mmitchel;	state Exp;
branches;
next	1.1.2.31;

1.1.2.31
date	2005.06.09.07.39.06;	author mmitchel;	state Exp;
branches;
next	1.1.2.32;

1.1.2.32
date	2005.06.13.18.46.16;	author mmitchel;	state Exp;
branches;
next	1.1.2.33;

1.1.2.33
date	2005.06.14.15.40.05;	author mmitchel;	state Exp;
branches;
next	1.1.2.34;

1.1.2.34
date	2005.10.14.20.04.50;	author drow;	state Exp;
branches;
next	;

1.1.4.1
date	2005.03.28.15.30.05;	author drow;	state Exp;
branches;
next	1.1.4.2;

1.1.4.2
date	2005.03.28.15.32.58;	author drow;	state Exp;
branches;
next	1.1.4.3;

1.1.4.3
date	2005.03.28.15.39.03;	author drow;	state Exp;
branches;
next	1.1.4.4;

1.1.4.4
date	2005.03.29.15.00.25;	author pbrook;	state Exp;
branches;
next	1.1.4.5;

1.1.4.5
date	2005.04.08.11.48.09;	author pbrook;	state Exp;
branches;
next	1.1.4.6;

1.1.4.6
date	2005.04.08.16.59.53;	author mmitchel;	state Exp;
branches;
next	1.1.4.7;

1.1.4.7
date	2005.04.13.14.58.16;	author pbrook;	state Exp;
branches;
next	1.1.4.8;

1.1.4.8
date	2005.04.26.05.31.36;	author zack;	state Exp;
branches;
next	1.1.4.9;

1.1.4.9
date	2005.04.29.17.45.56;	author zack;	state Exp;
branches;
next	1.1.4.10;

1.1.4.10
date	2005.04.30.23.36.13;	author pbrook;	state Exp;
branches;
next	1.1.4.11;

1.1.4.11
date	2005.04.30.23.50.30;	author pbrook;	state Exp;
branches;
next	1.1.4.12;

1.1.4.12
date	2005.05.01.23.31.25;	author pbrook;	state Exp;
branches;
next	1.1.4.13;

1.1.4.13
date	2005.05.02.03.12.46;	author pbrook;	state Exp;
branches;
next	1.1.4.14;

1.1.4.14
date	2005.05.23.20.44.32;	author mmitchel;	state Exp;
branches;
next	1.1.4.15;

1.1.4.15
date	2006.01.17.16.40.16;	author jsm28;	state Exp;
branches;
next	1.1.4.16;

1.1.4.16
date	2006.04.28.19.10.40;	author jsm28;	state Exp;
branches;
next	1.1.4.17;

1.1.4.17
date	2006.06.02.22.17.20;	author jsm28;	state Exp;
branches;
next	;

1.1.6.1
date	2005.08.30.19.57.31;	author mmitchel;	state Exp;
branches;
next	1.1.6.2;

1.1.6.2
date	2005.10.13.22.14.22;	author mmitchel;	state Exp;
branches;
next	1.1.6.3;

1.1.6.3
date	2005.11.18.06.00.24;	author mmitchel;	state Exp;
branches;
next	1.1.6.4;

1.1.6.4
date	2005.11.29.03.45.00;	author mmitchel;	state Exp;
branches;
next	1.1.6.5;

1.1.6.5
date	2006.03.16.20.07.44;	author carlos;	state Exp;
branches;
next	;

1.1.8.1
date	2005.10.20.03.34.11;	author pbrook;	state Exp;
branches;
next	1.1.8.2;

1.1.8.2
date	2005.10.20.03.34.52;	author pbrook;	state Exp;
branches;
next	1.1.8.3;

1.1.8.3
date	2005.10.20.03.35.18;	author pbrook;	state Exp;
branches;
next	1.1.8.4;

1.1.8.4
date	2005.10.20.03.35.47;	author pbrook;	state Exp;
branches;
next	1.1.8.5;

1.1.8.5
date	2005.10.20.03.36.26;	author pbrook;	state Exp;
branches;
next	1.1.8.6;

1.1.8.6
date	2005.10.20.03.36.54;	author pbrook;	state Exp;
branches;
next	1.1.8.7;

1.1.8.7
date	2005.10.20.13.32.35;	author jules;	state Exp;
branches;
next	1.1.8.8;

1.1.8.8
date	2005.10.20.13.36.44;	author jules;	state Exp;
branches;
next	1.1.8.9;

1.1.8.9
date	2005.10.20.14.10.25;	author jules;	state Exp;
branches;
next	1.1.8.10;

1.1.8.10
date	2006.01.25.01.36.17;	author drow;	state Exp;
branches;
next	1.1.8.11;

1.1.8.11
date	2006.01.26.18.05.54;	author drow;	state Exp;
branches;
next	1.1.8.12;

1.1.8.12
date	2006.01.26.18.11.40;	author drow;	state Exp;
branches;
next	1.1.8.13;

1.1.8.13
date	2006.01.26.18.12.46;	author drow;	state Exp;
branches;
next	;

1.1.10.1
date	2005.11.17.06.22.44;	author mmitchel;	state Exp;
branches;
next	1.1.10.2;

1.1.10.2
date	2006.01.14.05.14.26;	author mmitchel;	state Exp;
branches;
next	1.1.10.3;

1.1.10.3
date	2006.01.26.18.10.22;	author drow;	state Exp;
branches;
next	1.1.10.4;

1.1.10.4
date	2006.01.26.18.11.52;	author drow;	state Exp;
branches;
next	1.1.10.5;

1.1.10.5
date	2006.02.02.06.50.07;	author mmitchel;	state Exp;
branches;
next	1.1.10.6;

1.1.10.6
date	2006.03.15.19.53.36;	author drow;	state Exp;
branches;
next	1.1.10.7;

1.1.10.7
date	2006.03.31.16.52.26;	author drow;	state Exp;
branches;
next	;

1.1.12.1
date	2006.03.07.15.48.33;	author pbrook;	state Exp;
branches;
next	1.1.12.2;

1.1.12.2
date	2006.03.07.17.48.27;	author pbrook;	state Exp;
branches;
next	1.1.12.3;

1.1.12.3
date	2006.03.07.18.55.11;	author pbrook;	state Exp;
branches;
next	1.1.12.4;

1.1.12.4
date	2006.03.07.20.00.03;	author pbrook;	state Exp;
branches;
next	1.1.12.5;

1.1.12.5
date	2006.03.07.21.47.32;	author pbrook;	state Exp;
branches;
next	1.1.12.6;

1.1.12.6
date	2006.03.08.14.23.31;	author pbrook;	state Exp;
branches;
next	1.1.12.7;

1.1.12.7
date	2006.03.17.22.06.21;	author jimb;	state Exp;
branches;
next	1.1.12.8;

1.1.12.8
date	2006.03.17.22.22.34;	author mmitchel;	state Exp;
branches;
next	1.1.12.9;

1.1.12.9
date	2006.03.20.22.45.13;	author mmitchel;	state Exp;
branches;
next	1.1.12.10;

1.1.12.10
date	2006.03.21.02.13.34;	author pbrook;	state Exp;
branches;
next	1.1.12.11;

1.1.12.11
date	2006.03.21.07.48.37;	author mmitchel;	state Exp;
branches;
next	1.1.12.12;

1.1.12.12
date	2006.03.21.07.54.30;	author mmitchel;	state Exp;
branches;
next	1.1.12.13;

1.1.12.13
date	2006.03.22.01.22.28;	author mmitchel;	state Exp;
branches;
next	1.1.12.14;

1.1.12.14
date	2006.03.29.07.40.35;	author nathan;	state Exp;
branches;
next	1.1.12.15;

1.1.12.15
date	2006.03.30.16.27.58;	author pbrook;	state Exp;
branches;
next	1.1.12.16;

1.1.12.16
date	2006.03.31.00.33.00;	author mmitchel;	state Exp;
branches;
next	1.1.12.17;

1.1.12.17
date	2006.03.31.15.31.55;	author nathan;	state Exp;
branches;
next	1.1.12.18;

1.1.12.18
date	2006.03.31.15.48.35;	author nathan;	state Exp;
branches;
next	1.1.12.19;

1.1.12.19
date	2006.03.31.15.50.07;	author nathan;	state Exp;
branches;
next	1.1.12.20;

1.1.12.20
date	2006.03.31.16.08.45;	author nathan;	state Exp;
branches;
next	1.1.12.21;

1.1.12.21
date	2006.03.31.16.21.03;	author nathan;	state Exp;
branches;
next	1.1.12.22;

1.1.12.22
date	2006.03.31.16.53.18;	author drow;	state Exp;
branches;
next	1.1.12.23;

1.1.12.23
date	2006.03.31.17.19.09;	author nathan;	state Exp;
branches;
next	1.1.12.24;

1.1.12.24
date	2006.04.03.00.47.35;	author drow;	state Exp;
branches;
next	1.1.12.25;

1.1.12.25
date	2006.04.11.15.54.53;	author drow;	state Exp;
branches;
next	1.1.12.26;

1.1.12.26
date	2006.04.11.16.33.05;	author drow;	state Exp;
branches
	1.1.12.26.2.1;
next	1.1.12.27;

1.1.12.27
date	2006.04.12.03.22.29;	author mmitchel;	state Exp;
branches;
next	1.1.12.28;

1.1.12.28
date	2006.04.19.04.53.13;	author mmitchel;	state Exp;
branches;
next	1.1.12.29;

1.1.12.29
date	2006.04.19.18.19.20;	author drow;	state Exp;
branches;
next	1.1.12.30;

1.1.12.30
date	2006.04.28.15.12.02;	author rsandifo;	state Exp;
branches;
next	1.1.12.31;

1.1.12.31
date	2006.04.29.00.38.42;	author mmitchel;	state Exp;
branches;
next	1.1.12.32;

1.1.12.32
date	2006.05.03.01.51.29;	author pbrook;	state Exp;
branches;
next	1.1.12.33;

1.1.12.33
date	2006.05.03.02.07.50;	author pbrook;	state Exp;
branches;
next	1.1.12.34;

1.1.12.34
date	2006.05.03.16.30.55;	author pbrook;	state Exp;
branches;
next	1.1.12.35;

1.1.12.35
date	2006.05.03.16.32.25;	author pbrook;	state Exp;
branches;
next	1.1.12.36;

1.1.12.36
date	2006.05.03.17.54.31;	author pbrook;	state Exp;
branches;
next	1.1.12.37;

1.1.12.37
date	2006.05.08.09.32.48;	author rsandifo;	state Exp;
branches;
next	1.1.12.38;

1.1.12.38
date	2006.05.22.11.59.13;	author rsandifo;	state Exp;
branches;
next	1.1.12.39;

1.1.12.39
date	2006.05.24.08.00.02;	author nathan;	state Exp;
branches;
next	1.1.12.40;

1.1.12.40
date	2006.06.01.13.00.47;	author nathan;	state Exp;
branches;
next	1.1.12.41;

1.1.12.41
date	2006.06.05.14.51.35;	author nathan;	state Exp;
branches;
next	1.1.12.42;

1.1.12.42
date	2006.06.05.15.00.39;	author nathan;	state Exp;
branches;
next	1.1.12.43;

1.1.12.43
date	2006.06.05.15.30.47;	author nathan;	state Exp;
branches;
next	1.1.12.44;

1.1.12.44
date	2006.06.05.15.36.02;	author nathan;	state Exp;
branches;
next	1.1.12.45;

1.1.12.45
date	2006.06.05.15.39.14;	author nathan;	state Exp;
branches;
next	1.1.12.46;

1.1.12.46
date	2006.06.05.17.31.50;	author nathan;	state Exp;
branches;
next	1.1.12.47;

1.1.12.47
date	2006.06.08.07.23.04;	author nathan;	state Exp;
branches;
next	1.1.12.48;

1.1.12.48
date	2006.06.08.18.30.21;	author nathan;	state Exp;
branches;
next	1.1.12.49;

1.1.12.49
date	2006.06.09.12.12.03;	author nathan;	state Exp;
branches;
next	1.1.12.50;

1.1.12.50
date	2006.06.09.20.01.39;	author nathan;	state Exp;
branches;
next	1.1.12.51;

1.1.12.51
date	2006.06.09.20.11.07;	author nathan;	state Exp;
branches;
next	1.1.12.52;

1.1.12.52
date	2006.06.09.20.25.24;	author nathan;	state Exp;
branches;
next	1.1.12.53;

1.1.12.53
date	2006.06.09.20.43.16;	author nathan;	state Exp;
branches;
next	1.1.12.54;

1.1.12.54
date	2006.06.09.20.53.31;	author nathan;	state Exp;
branches;
next	1.1.12.55;

1.1.12.55
date	2006.06.10.17.56.57;	author drow;	state Exp;
branches;
next	1.1.12.56;

1.1.12.56
date	2006.06.12.08.01.53;	author nathan;	state Exp;
branches;
next	1.1.12.57;

1.1.12.57
date	2006.06.13.13.09.17;	author nathan;	state Exp;
branches;
next	1.1.12.58;

1.1.12.58
date	2006.06.15.20.38.13;	author drow;	state Exp;
branches;
next	1.1.12.59;

1.1.12.59
date	2006.06.19.14.34.26;	author nathan;	state Exp;
branches;
next	1.1.12.60;

1.1.12.60
date	2006.06.22.20.30.54;	author drow;	state Exp;
branches;
next	1.1.12.61;

1.1.12.61
date	2006.06.23.10.20.59;	author nathan;	state Exp;
branches;
next	1.1.12.62;

1.1.12.62
date	2006.07.03.15.58.50;	author drow;	state Exp;
branches;
next	1.1.12.63;

1.1.12.63
date	2006.07.04.13.42.10;	author drow;	state Exp;
branches;
next	1.1.12.64;

1.1.12.64
date	2006.07.15.09.44.49;	author vprus;	state Exp;
branches;
next	1.1.12.65;

1.1.12.65
date	2006.07.16.19.42.39;	author nathan;	state Exp;
branches;
next	1.1.12.66;

1.1.12.66
date	2006.07.18.07.27.41;	author nathan;	state Exp;
branches;
next	1.1.12.67;

1.1.12.67
date	2006.07.23.22.22.48;	author kazu;	state Exp;
branches;
next	1.1.12.68;

1.1.12.68
date	2006.07.24.13.31.33;	author nathan;	state Exp;
branches;
next	1.1.12.69;

1.1.12.69
date	2006.07.27.08.28.43;	author nathan;	state Exp;
branches;
next	1.1.12.70;

1.1.12.70
date	2006.08.01.16.48.27;	author kazu;	state Exp;
branches;
next	1.1.12.71;

1.1.12.71
date	2006.08.02.17.40.18;	author rsandifo;	state Exp;
branches;
next	;

1.1.12.26.2.1
date	2006.04.11.18.03.01;	author drow;	state Exp;
branches;
next	1.1.12.26.2.2;

1.1.12.26.2.2
date	2006.04.11.21.58.21;	author drow;	state Exp;
branches;
next	1.1.12.26.2.3;

1.1.12.26.2.3
date	2006.04.12.14.46.26;	author drow;	state Exp;
branches;
next	1.1.12.26.2.4;

1.1.12.26.2.4
date	2006.04.12.18.11.38;	author drow;	state Exp;
branches;
next	1.1.12.26.2.5;

1.1.12.26.2.5
date	2006.04.17.14.21.14;	author drow;	state Exp;
branches;
next	1.1.12.26.2.6;

1.1.12.26.2.6
date	2006.04.19.18.30.09;	author drow;	state Exp;
branches;
next	1.1.12.26.2.7;

1.1.12.26.2.7
date	2006.04.24.20.06.49;	author drow;	state Exp;
branches;
next	1.1.12.26.2.8;

1.1.12.26.2.8
date	2006.05.08.15.39.13;	author drow;	state Exp;
branches;
next	1.1.12.26.2.9;

1.1.12.26.2.9
date	2006.05.08.20.19.58;	author drow;	state Exp;
branches;
next	1.1.12.26.2.10;

1.1.12.26.2.10
date	2006.05.09.17.46.17;	author drow;	state Exp;
branches;
next	1.1.12.26.2.11;

1.1.12.26.2.11
date	2006.05.10.18.34.29;	author drow;	state Exp;
branches;
next	1.1.12.26.2.12;

1.1.12.26.2.12
date	2006.05.23.21.44.18;	author drow;	state Exp;
branches;
next	1.1.12.26.2.13;

1.1.12.26.2.13
date	2006.05.23.22.21.00;	author drow;	state Exp;
branches;
next	1.1.12.26.2.14;

1.1.12.26.2.14
date	2006.05.31.16.18.16;	author drow;	state Exp;
branches;
next	1.1.12.26.2.15;

1.1.12.26.2.15
date	2006.06.01.15.41.13;	author drow;	state Exp;
branches;
next	1.1.12.26.2.16;

1.1.12.26.2.16
date	2006.06.01.15.46.41;	author drow;	state Exp;
branches;
next	1.1.12.26.2.17;

1.1.12.26.2.17
date	2006.06.01.15.53.16;	author drow;	state Exp;
branches;
next	1.1.12.26.2.18;

1.1.12.26.2.18
date	2006.06.01.20.03.29;	author drow;	state Exp;
branches;
next	1.1.12.26.2.19;

1.1.12.26.2.19
date	2006.06.02.18.38.43;	author drow;	state Exp;
branches;
next	1.1.12.26.2.20;

1.1.12.26.2.20
date	2006.07.11.19.35.43;	author drow;	state Exp;
branches;
next	1.1.12.26.2.21;

1.1.12.26.2.21
date	2006.07.11.20.37.02;	author drow;	state Exp;
branches;
next	1.1.12.26.2.22;

1.1.12.26.2.22
date	2006.08.17.14.45.29;	author drow;	state Exp;
branches;
next	1.1.12.26.2.23;

1.1.12.26.2.23
date	2006.08.17.14.47.25;	author drow;	state Exp;
branches;
next	1.1.12.26.2.24;

1.1.12.26.2.24
date	2006.08.23.17.24.07;	author drow;	state Exp;
branches;
next	1.1.12.26.2.25;

1.1.12.26.2.25
date	2006.08.30.13.39.39;	author drow;	state Exp;
branches;
next	1.1.12.26.2.26;

1.1.12.26.2.26
date	2006.09.15.15.58.28;	author drow;	state Exp;
branches;
next	1.1.12.26.2.27;

1.1.12.26.2.27
date	2006.09.15.16.01.57;	author drow;	state Exp;
branches;
next	1.1.12.26.2.28;

1.1.12.26.2.28
date	2006.09.15.16.06.58;	author drow;	state Exp;
branches;
next	1.1.12.26.2.29;

1.1.12.26.2.29
date	2006.09.15.18.52.15;	author drow;	state Exp;
branches;
next	1.1.12.26.2.30;

1.1.12.26.2.30
date	2006.09.21.20.43.50;	author drow;	state Exp;
branches;
next	1.1.12.26.2.31;

1.1.12.26.2.31
date	2006.09.25.18.16.03;	author drow;	state Exp;
branches;
next	1.1.12.26.2.32;

1.1.12.26.2.32
date	2006.09.28.20.18.15;	author drow;	state Exp;
branches;
next	1.1.12.26.2.33;

1.1.12.26.2.33
date	2006.10.02.14.39.33;	author drow;	state Exp;
branches;
next	;

1.1.14.1
date	2006.03.20.19.21.04;	author nathan;	state Exp;
branches;
next	1.1.14.2;

1.1.14.2
date	2006.03.20.20.40.56;	author pbrook;	state Exp;
branches;
next	1.1.14.3;

1.1.14.3
date	2006.03.20.20.53.13;	author pbrook;	state Exp;
branches;
next	1.1.14.4;

1.1.14.4
date	2006.03.20.20.54.38;	author pbrook;	state Exp;
branches;
next	1.1.14.5;

1.1.14.5
date	2006.03.20.20.55.46;	author pbrook;	state Exp;
branches;
next	1.1.14.6;

1.1.14.6
date	2006.03.20.23.35.40;	author pbrook;	state Exp;
branches;
next	1.1.14.7;

1.1.14.7
date	2006.03.21.09.51.28;	author rsandifo;	state Exp;
branches;
next	1.1.14.8;

1.1.14.8
date	2006.03.21.09.54.33;	author mmitchel;	state Exp;
branches;
next	1.1.14.9;

1.1.14.9
date	2006.03.21.10.20.17;	author nathan;	state Exp;
branches;
next	1.1.14.10;

1.1.14.10
date	2006.03.21.10.37.27;	author nathan;	state Exp;
branches;
next	1.1.14.11;

1.1.14.11
date	2006.03.21.22.45.46;	author pbrook;	state Exp;
branches;
next	1.1.14.12;

1.1.14.12
date	2006.03.26.16.12.20;	author nathan;	state Exp;
branches;
next	1.1.14.13;

1.1.14.13
date	2006.03.27.09.44.43;	author mmitchel;	state Exp;
branches;
next	1.1.14.14;

1.1.14.14
date	2006.03.31.01.17.05;	author mmitchel;	state Exp;
branches;
next	1.1.14.15;

1.1.14.15
date	2006.04.01.22.39.54;	author pbrook;	state Exp;
branches;
next	1.1.14.16;

1.1.14.16
date	2006.04.03.00.03.32;	author jules;	state Exp;
branches;
next	1.1.14.17;

1.1.14.17
date	2006.04.03.15.44.45;	author carlos;	state Exp;
branches;
next	1.1.14.18;

1.1.14.18
date	2006.04.07.15.46.20;	author jules;	state Exp;
branches;
next	1.1.14.19;

1.1.14.19
date	2006.04.12.19.06.00;	author carlos;	state Exp;
branches;
next	1.1.14.20;

1.1.14.20
date	2006.04.12.19.06.26;	author carlos;	state Exp;
branches;
next	1.1.14.21;

1.1.14.21
date	2006.04.24.21.37.24;	author jules;	state Exp;
branches;
next	1.1.14.22;

1.1.14.22
date	2006.04.26.16.24.25;	author jules;	state Exp;
branches;
next	1.1.14.23;

1.1.14.23
date	2006.04.26.16.30.48;	author jules;	state Exp;
branches;
next	1.1.14.24;

1.1.14.24
date	2006.04.27.17.01.18;	author rsandifo;	state Exp;
branches;
next	1.1.14.25;

1.1.14.25
date	2006.04.27.17.04.49;	author rsandifo;	state Exp;
branches;
next	1.1.14.26;

1.1.14.26
date	2006.04.29.00.33.35;	author mmitchel;	state Exp;
branches;
next	1.1.14.27;

1.1.14.27
date	2006.04.29.17.54.31;	author pbrook;	state Exp;
branches;
next	1.1.14.28;

1.1.14.28
date	2006.05.01.16.27.15;	author pbrook;	state Exp;
branches;
next	1.1.14.29;

1.1.14.29
date	2006.05.02.14.51.26;	author jsm28;	state Exp;
branches;
next	1.1.14.30;

1.1.14.30
date	2006.05.03.14.30.23;	author pbrook;	state Exp;
branches;
next	1.1.14.31;

1.1.14.31
date	2006.05.03.16.13.43;	author jules;	state Exp;
branches;
next	1.1.14.32;

1.1.14.32
date	2006.05.05.12.21.52;	author nathan;	state Exp;
branches;
next	1.1.14.33;

1.1.14.33
date	2006.05.05.18.31.28;	author jules;	state Exp;
branches;
next	1.1.14.34;

1.1.14.34
date	2006.05.06.17.22.14;	author jsm28;	state Exp;
branches;
next	1.1.14.35;

1.1.14.35
date	2006.05.11.15.17.42;	author carlos;	state Exp;
branches;
next	1.1.14.36;

1.1.14.36
date	2006.05.12.19.39.03;	author carlos;	state Exp;
branches;
next	1.1.14.37;

1.1.14.37
date	2006.05.15.20.46.23;	author pbrook;	state Exp;
branches;
next	1.1.14.38;

1.1.14.38
date	2006.05.20.14.48.56;	author nathan;	state Exp;
branches;
next	1.1.14.39;

1.1.14.39
date	2006.05.22.11.58.45;	author rsandifo;	state Exp;
branches;
next	1.1.14.40;

1.1.14.40
date	2006.05.24.16.24.55;	author pbrook;	state Exp;
branches;
next	1.1.14.41;

1.1.14.41
date	2006.05.24.17.14.51;	author pbrook;	state Exp;
branches;
next	1.1.14.42;

1.1.14.42
date	2006.05.25.13.12.42;	author nathan;	state Exp;
branches;
next	1.1.14.43;

1.1.14.43
date	2006.05.25.16.49.50;	author jules;	state Exp;
branches;
next	1.1.14.44;

1.1.14.44
date	2006.06.15.15.25.02;	author jules;	state Exp;
branches;
next	1.1.14.45;

1.1.14.45
date	2006.06.15.15.53.09;	author shinwell;	state Exp;
branches;
next	1.1.14.46;

1.1.14.46
date	2006.06.19.14.22.33;	author pbrook;	state Exp;
branches;
next	1.1.14.47;

1.1.14.47
date	2006.06.21.14.40.24;	author shinwell;	state Exp;
branches;
next	1.1.14.48;

1.1.14.48
date	2006.06.22.15.40.14;	author rsandifo;	state Exp;
branches;
next	1.1.14.49;

1.1.14.49
date	2006.06.22.15.44.17;	author rsandifo;	state Exp;
branches;
next	1.1.14.50;

1.1.14.50
date	2006.07.12.13.05.40;	author rsandifo;	state Exp;
branches;
next	1.1.14.51;

1.1.14.51
date	2006.07.14.13.39.07;	author shinwell;	state Exp;
branches;
next	1.1.14.52;

1.1.14.52
date	2006.07.18.16.45.51;	author pbrook;	state Exp;
branches;
next	1.1.14.53;

1.1.14.53
date	2006.07.19.13.08.20;	author pbrook;	state Exp;
branches;
next	1.1.14.54;

1.1.14.54
date	2006.07.20.14.16.41;	author jules;	state Exp;
branches;
next	1.1.14.55;

1.1.14.55
date	2006.07.26.11.56.20;	author rsandifo;	state Exp;
branches;
next	1.1.14.56;

1.1.14.56
date	2006.07.26.18.46.21;	author nathan;	state Exp;
branches;
next	1.1.14.57;

1.1.14.57
date	2006.07.28.17.26.04;	author carlos;	state Exp;
branches;
next	1.1.14.58;

1.1.14.58
date	2006.08.03.16.23.00;	author jsm28;	state Exp;
branches;
next	1.1.14.59;

1.1.14.59
date	2006.08.15.10.50.38;	author shinwell;	state Exp;
branches;
next	1.1.14.60;

1.1.14.60
date	2006.08.15.10.53.53;	author shinwell;	state Exp;
branches;
next	1.1.14.61;

1.1.14.61
date	2006.08.16.10.04.14;	author jules;	state Exp;
branches;
next	1.1.14.62;

1.1.14.62
date	2006.08.16.10.37.32;	author jules;	state Exp;
branches;
next	1.1.14.63;

1.1.14.63
date	2006.08.18.10.30.35;	author jules;	state Exp;
branches;
next	1.1.14.64;

1.1.14.64
date	2006.08.18.11.56.44;	author jules;	state Exp;
branches;
next	1.1.14.65;

1.1.14.65
date	2006.08.18.15.01.15;	author pbrook;	state Exp;
branches;
next	1.1.14.66;

1.1.14.66
date	2006.08.19.16.27.34;	author jsm28;	state Exp;
branches;
next	1.1.14.67;

1.1.14.67
date	2006.08.21.09.53.55;	author shinwell;	state Exp;
branches;
next	1.1.14.68;

1.1.14.68
date	2006.08.22.15.08.28;	author jsm28;	state Exp;
branches;
next	1.1.14.69;

1.1.14.69
date	2006.08.24.14.46.50;	author shinwell;	state Exp;
branches;
next	1.1.14.70;

1.1.14.70
date	2006.08.24.14.49.51;	author shinwell;	state Exp;
branches;
next	1.1.14.71;

1.1.14.71
date	2006.08.29.10.57.15;	author nathan;	state Exp;
branches;
next	1.1.14.72;

1.1.14.72
date	2006.08.29.11.03.29;	author nathan;	state Exp;
branches;
next	1.1.14.73;

1.1.14.73
date	2006.08.29.11.09.04;	author nathan;	state Exp;
branches;
next	1.1.14.74;

1.1.14.74
date	2006.08.29.13.55.31;	author nathan;	state Exp;
branches;
next	1.1.14.75;

1.1.14.75
date	2006.08.30.17.39.16;	author shinwell;	state Exp;
branches;
next	1.1.14.76;

1.1.14.76
date	2006.08.31.13.21.22;	author jsm28;	state Exp;
branches;
next	1.1.14.77;

1.1.14.77
date	2006.08.31.14.59.52;	author shinwell;	state Exp;
branches;
next	1.1.14.78;

1.1.14.78
date	2006.09.01.09.25.14;	author nathan;	state Exp;
branches;
next	1.1.14.79;

1.1.14.79
date	2006.09.01.17.14.16;	author shinwell;	state Exp;
branches;
next	1.1.14.80;

1.1.14.80
date	2006.09.04.15.55.35;	author pbrook;	state Exp;
branches;
next	1.1.14.81;

1.1.14.81
date	2006.09.05.14.24.01;	author jules;	state Exp;
branches;
next	1.1.14.82;

1.1.14.82
date	2006.09.05.16.25.47;	author pbrook;	state Exp;
branches;
next	1.1.14.83;

1.1.14.83
date	2006.09.05.20.23.46;	author jules;	state Exp;
branches;
next	1.1.14.84;

1.1.14.84
date	2006.09.06.16.35.21;	author pbrook;	state Exp;
branches;
next	1.1.14.85;

1.1.14.85
date	2006.09.07.20.02.44;	author pbrook;	state Exp;
branches;
next	1.1.14.86;

1.1.14.86
date	2006.09.08.17.24.01;	author kazu;	state Exp;
branches;
next	1.1.14.87;

1.1.14.87
date	2006.09.08.20.45.56;	author nathan;	state Exp;
branches;
next	1.1.14.88;

1.1.14.88
date	2006.09.08.22.36.13;	author pbrook;	state Exp;
branches;
next	1.1.14.89;

1.1.14.89
date	2006.09.11.09.45.46;	author nathan;	state Exp;
branches;
next	1.1.14.90;

1.1.14.90
date	2006.09.11.11.34.50;	author nathan;	state Exp;
branches;
next	1.1.14.91;

1.1.14.91
date	2006.09.14.02.23.01;	author pbrook;	state Exp;
branches;
next	1.1.14.92;

1.1.14.92
date	2006.09.14.13.57.36;	author jules;	state Exp;
branches;
next	1.1.14.93;

1.1.14.93
date	2006.09.14.15.28.35;	author pbrook;	state Exp;
branches;
next	1.1.14.94;

1.1.14.94
date	2006.09.14.22.33.44;	author pbrook;	state Exp;
branches;
next	1.1.14.95;

1.1.14.95
date	2006.09.16.16.28.05;	author pbrook;	state Exp;
branches;
next	1.1.14.96;

1.1.14.96
date	2006.09.18.18.29.56;	author pbrook;	state Exp;
branches;
next	1.1.14.97;

1.1.14.97
date	2006.09.19.18.45.45;	author jsm28;	state Exp;
branches;
next	1.1.14.98;

1.1.14.98
date	2006.09.28.20.41.08;	author shinwell;	state Exp;
branches;
next	1.1.14.99;

1.1.14.99
date	2006.09.29.12.25.31;	author nathan;	state Exp;
branches;
next	1.1.14.100;

1.1.14.100
date	2006.10.03.22.55.01;	author jsm28;	state Exp;
branches;
next	1.1.14.101;

1.1.14.101
date	2006.10.13.07.39.34;	author nathan;	state Exp;
branches;
next	1.1.14.102;

1.1.14.102
date	2006.10.16.13.09.20;	author shinwell;	state Exp;
branches;
next	1.1.14.103;

1.1.14.103
date	2006.10.16.20.21.22;	author nathan;	state Exp;
branches;
next	1.1.14.104;

1.1.14.104
date	2006.10.19.22.36.12;	author jsm28;	state Exp;
branches;
next	1.1.14.105;

1.1.14.105
date	2006.10.24.14.06.25;	author shinwell;	state Exp;
branches;
next	1.1.14.106;

1.1.14.106
date	2006.10.25.23.28.50;	author pbrook;	state Exp;
branches;
next	1.1.14.107;

1.1.14.107
date	2006.10.26.19.31.10;	author pbrook;	state Exp;
branches;
next	1.1.14.108;

1.1.14.108
date	2006.10.26.19.41.14;	author pbrook;	state Exp;
branches;
next	1.1.14.109;

1.1.14.109
date	2006.10.26.19.41.53;	author pbrook;	state Exp;
branches;
next	1.1.14.110;

1.1.14.110
date	2006.10.26.19.44.33;	author pbrook;	state Exp;
branches;
next	1.1.14.111;

1.1.14.111
date	2006.10.26.22.18.50;	author pbrook;	state Exp;
branches;
next	1.1.14.112;

1.1.14.112
date	2006.10.28.23.12.44;	author kazu;	state Exp;
branches;
next	1.1.14.113;

1.1.14.113
date	2006.10.29.00.03.03;	author pbrook;	state Exp;
branches;
next	1.1.14.114;

1.1.14.114
date	2006.10.30.19.46.09;	author kazu;	state Exp;
branches;
next	1.1.14.115;

1.1.14.115
date	2006.10.30.21.56.42;	author pbrook;	state Exp;
branches;
next	1.1.14.116;

1.1.14.116
date	2006.10.31.16.46.37;	author shinwell;	state Exp;
branches;
next	1.1.14.117;

1.1.14.117
date	2006.11.04.10.20.53;	author vprus;	state Exp;
branches;
next	1.1.14.118;

1.1.14.118
date	2006.11.06.10.16.55;	author vprus;	state Exp;
branches;
next	1.1.14.119;

1.1.14.119
date	2006.11.08.10.25.05;	author vprus;	state Exp;
branches;
next	1.1.14.120;

1.1.14.120
date	2006.11.08.17.45.23;	author vprus;	state Exp;
branches;
next	1.1.14.121;

1.1.14.121
date	2006.11.13.09.59.52;	author nathan;	state Exp;
branches;
next	1.1.14.122;

1.1.14.122
date	2006.11.16.12.46.52;	author nathan;	state Exp;
branches;
next	1.1.14.123;

1.1.14.123
date	2006.11.17.14.21.49;	author kazu;	state Exp;
branches;
next	1.1.14.124;

1.1.14.124
date	2006.11.19.22.00.45;	author nathan;	state Exp;
branches;
next	1.1.14.125;

1.1.14.125
date	2006.11.28.14.09.49;	author kazu;	state Exp;
branches;
next	1.1.14.126;

1.1.14.126
date	2006.11.29.10.32.51;	author kazu;	state Exp;
branches;
next	1.1.14.127;

1.1.14.127
date	2006.11.29.16.31.06;	author shinwell;	state Exp;
branches;
next	1.1.14.128;

1.1.14.128
date	2006.11.29.16.31.58;	author drow;	state Exp;
branches;
next	1.1.14.129;

1.1.14.129
date	2006.11.30.14.49.41;	author kazu;	state Exp;
branches;
next	1.1.14.130;

1.1.14.130
date	2006.12.01.08.13.19;	author kazu;	state Exp;
branches;
next	1.1.14.131;

1.1.14.131
date	2006.12.01.16.45.26;	author pbrook;	state Exp;
branches;
next	1.1.14.132;

1.1.14.132
date	2006.12.13.16.07.32;	author pbrook;	state Exp;
branches;
next	1.1.14.133;

1.1.14.133
date	2006.12.18.16.21.45;	author shinwell;	state Exp;
branches;
next	;

1.1.16.1
date	2006.03.23.18.36.09;	author mmitchel;	state Exp;
branches;
next	1.1.16.2;

1.1.16.2
date	2006.03.29.07.03.19;	author nathan;	state Exp;
branches;
next	1.1.16.3;

1.1.16.3
date	2006.03.29.09.08.37;	author nathan;	state Exp;
branches;
next	1.1.16.4;

1.1.16.4
date	2006.03.29.13.59.02;	author nathan;	state Exp;
branches;
next	1.1.16.5;

1.1.16.5
date	2006.05.04.17.14.59;	author kazu;	state Exp;
branches;
next	1.1.16.6;

1.1.16.6
date	2006.05.22.22.26.09;	author sandra;	state Exp;
branches;
next	1.1.16.7;

1.1.16.7
date	2006.05.24.07.54.51;	author nathan;	state Exp;
branches;
next	1.1.16.8;

1.1.16.8
date	2006.05.25.17.33.19;	author nathan;	state Exp;
branches;
next	1.1.16.9;

1.1.16.9
date	2006.05.31.13.52.58;	author mmitchel;	state Exp;
branches;
next	1.1.16.10;

1.1.16.10
date	2006.05.31.14.07.02;	author mmitchel;	state Exp;
branches;
next	1.1.16.11;

1.1.16.11
date	2006.05.31.14.11.13;	author mmitchel;	state Exp;
branches;
next	1.1.16.12;

1.1.16.12
date	2006.06.05.14.22.25;	author nathan;	state Exp;
branches;
next	1.1.16.13;

1.1.16.13
date	2006.06.05.14.25.04;	author nathan;	state Exp;
branches;
next	1.1.16.14;

1.1.16.14
date	2006.06.08.06.55.17;	author nathan;	state Exp;
branches;
next	1.1.16.15;

1.1.16.15
date	2006.06.09.15.52.15;	author sandra;	state Exp;
branches;
next	1.1.16.16;

1.1.16.16
date	2006.06.09.20.31.19;	author nathan;	state Exp;
branches;
next	1.1.16.17;

1.1.16.17
date	2006.06.13.20.56.37;	author mmitchel;	state Exp;
branches;
next	1.1.16.18;

1.1.16.18
date	2006.06.23.22.11.48;	author mmitchel;	state Exp;
branches;
next	1.1.16.19;

1.1.16.19
date	2006.07.24.16.49.07;	author nathan;	state Exp;
branches;
next	1.1.16.20;

1.1.16.20
date	2006.07.24.16.50.26;	author nathan;	state Exp;
branches;
next	1.1.16.21;

1.1.16.21
date	2006.08.14.16.11.25;	author kazu;	state Exp;
branches;
next	1.1.16.22;

1.1.16.22
date	2006.08.22.20.48.23;	author pbrook;	state Exp;
branches;
next	1.1.16.23;

1.1.16.23
date	2006.08.25.11.55.48;	author nathan;	state Exp;
branches;
next	1.1.16.24;

1.1.16.24
date	2006.08.29.20.26.58;	author pbrook;	state Exp;
branches;
next	1.1.16.25;

1.1.16.25
date	2006.08.29.21.53.30;	author pbrook;	state Exp;
branches;
next	1.1.16.26;

1.1.16.26
date	2006.08.29.22.05.40;	author pbrook;	state Exp;
branches;
next	1.1.16.27;

1.1.16.27
date	2006.08.30.22.24.17;	author pbrook;	state Exp;
branches;
next	1.1.16.28;

1.1.16.28
date	2006.08.31.09.00.40;	author nathan;	state Exp;
branches;
next	1.1.16.29;

1.1.16.29
date	2006.08.31.13.08.46;	author nathan;	state Exp;
branches;
next	1.1.16.30;

1.1.16.30
date	2006.08.31.17.40.35;	author kazu;	state Exp;
branches;
next	1.1.16.31;

1.1.16.31
date	2006.09.01.15.28.54;	author pbrook;	state Exp;
branches;
next	1.1.16.32;

1.1.16.32
date	2006.09.01.17.00.14;	author nathan;	state Exp;
branches;
next	1.1.16.33;

1.1.16.33
date	2006.09.01.21.55.12;	author pbrook;	state Exp;
branches;
next	1.1.16.34;

1.1.16.34
date	2006.09.06.08.45.15;	author nathan;	state Exp;
branches;
next	1.1.16.35;

1.1.16.35
date	2006.09.11.16.55.11;	author pbrook;	state Exp;
branches;
next	1.1.16.36;

1.1.16.36
date	2006.09.11.17.58.46;	author pbrook;	state Exp;
branches;
next	1.1.16.37;

1.1.16.37
date	2006.09.15.13.24.03;	author nathan;	state Exp;
branches;
next	1.1.16.38;

1.1.16.38
date	2006.09.18.07.41.02;	author nathan;	state Exp;
branches;
next	1.1.16.39;

1.1.16.39
date	2006.09.18.11.30.53;	author nathan;	state Exp;
branches;
next	1.1.16.40;

1.1.16.40
date	2006.09.20.16.56.02;	author pbrook;	state Exp;
branches;
next	1.1.16.41;

1.1.16.41
date	2006.09.20.17.06.36;	author pbrook;	state Exp;
branches;
next	1.1.16.42;

1.1.16.42
date	2006.09.20.18.58.42;	author pbrook;	state Exp;
branches;
next	1.1.16.43;

1.1.16.43
date	2006.09.20.23.27.53;	author pbrook;	state Exp;
branches;
next	1.1.16.44;

1.1.16.44
date	2006.09.21.23.42.46;	author pbrook;	state Exp;
branches;
next	1.1.16.45;

1.1.16.45
date	2006.09.22.07.09.38;	author nathan;	state Exp;
branches;
next	1.1.16.46;

1.1.16.46
date	2006.09.27.19.57.14;	author pbrook;	state Exp;
branches;
next	1.1.16.47;

1.1.16.47
date	2006.09.29.13.35.17;	author nathan;	state Exp;
branches;
next	1.1.16.48;

1.1.16.48
date	2006.10.01.21.05.22;	author pbrook;	state Exp;
branches;
next	1.1.16.49;

1.1.16.49
date	2006.10.07.20.08.48;	author nathan;	state Exp;
branches;
next	1.1.16.50;

1.1.16.50
date	2006.10.20.14.06.44;	author vprus;	state Exp;
branches;
next	1.1.16.51;

1.1.16.51
date	2006.10.20.21.01.50;	author nathan;	state Exp;
branches;
next	1.1.16.52;

1.1.16.52
date	2006.10.23.19.28.29;	author nathan;	state Exp;
branches;
next	1.1.16.53;

1.1.16.53
date	2006.10.23.21.25.20;	author pbrook;	state Exp;
branches;
next	1.1.16.54;

1.1.16.54
date	2006.10.26.15.43.24;	author vprus;	state Exp;
branches;
next	1.1.16.55;

1.1.16.55
date	2006.11.01.17.31.07;	author nathan;	state Exp;
branches;
next	1.1.16.56;

1.1.16.56
date	2006.11.01.17.39.29;	author nathan;	state Exp;
branches;
next	1.1.16.57;

1.1.16.57
date	2006.11.06.16.55.49;	author pbrook;	state Exp;
branches;
next	1.1.16.58;

1.1.16.58
date	2006.12.01.11.02.06;	author kazu;	state Exp;
branches;
next	1.1.16.59;

1.1.16.59
date	2006.12.13.10.39.14;	author nathan;	state Exp;
branches;
next	1.1.16.60;

1.1.16.60
date	2006.12.15.16.47.08;	author drow;	state Exp;
branches;
next	1.1.16.61;

1.1.16.61
date	2006.12.15.18.09.03;	author drow;	state Exp;
branches;
next	1.1.16.62;

1.1.16.62
date	2006.12.18.11.22.17;	author kazu;	state Exp;
branches;
next	1.1.16.63;

1.1.16.63
date	2006.12.22.07.47.30;	author nathan;	state Exp;
branches;
next	1.1.16.64;

1.1.16.64
date	2006.12.22.21.45.29;	author kazu;	state Exp;
branches;
next	1.1.16.65;

1.1.16.65
date	2007.01.03.19.43.06;	author kazu;	state Exp;
branches;
next	;


desc
@@


1.1
log
@file ChangeLog.csl was initially added on branch csl-arm-20050325-branch.
@
text
@@


1.1.16.1
log
@2006-03-23  Mark Mitchell  <mark@@codesourcery.com>

	* libc/sys/arm/Makefile.am (extra_objs): Add _exit.o _nmi_isr.o
	_fault_isr.o.
	* libc/sys/arm/Makefile.in: Regenerated.
	* libc/sys/arm/_exit.c: New file.
	* libc/sys/arm/_fault_isr.c: Likewise.
	* libc/sys/arm/_nmi_isr.c: Likewise.
	* libc/sys/arm/configure.in (--enable-newlib-arm-v7m): New option.
	* libc/sys/arm/configure:
	* libc/sys/arm/crt0.S (_start): Do not use semihosting calls in
	_start when configured for ARM V7M.  Do not call
	initialise_monitor_handles.  Indent preprocessor directives.
	(.isr_vector): New section, on ARM V7M.
	* libc/sys/arm/swi.h (do_AngelSWI): New function.
	* syscalls.c (_exit): Remove.
	(do_AngelSWI): Likewise.
	(CHECK_INIT): Remove.
	(remap_handle): Call initialise_monitor_handles.
	(__arm_monitor_handles_lock): New variable.
	(initialise_monitor_handles): Make sure to run only once.
@
text
@a0 22
2006-03-23  Mark Mitchell  <mark@@codesourcery.com>

	* libc/sys/arm/Makefile.am (extra_objs): Add _exit.o _nmi_isr.o
	_fault_isr.o.
	* libc/sys/arm/Makefile.in: Regenerated.
	* libc/sys/arm/_exit.c: New file. 
	* libc/sys/arm/_fault_isr.c: Likewise.
	* libc/sys/arm/_nmi_isr.c: Likewise.
	* libc/sys/arm/configure.in (--enable-newlib-arm-v7m): New option.
	* libc/sys/arm/configure: 
	* libc/sys/arm/crt0.S (_start): Do not use semihosting calls in
	_start when configured for ARM V7M.  Do not call
	initialise_monitor_handles.  Indent preprocessor directives.
	(.isr_vector): New section, on ARM V7M.
	* libc/sys/arm/swi.h (do_AngelSWI): New function.
	* syscalls.c (_exit): Remove.
	(do_AngelSWI): Likewise.
	(CHECK_INIT): Remove.
	(remap_handle): Call initialise_monitor_handles.
	(__arm_monitor_handles_lock): New variable.
	(initialise_monitor_handles): Make sure to run only once.

@


1.1.16.2
log
@	* libgloss/m68k/Makefile.in (BDM_BSP, BDM_OBJS, BDM_ISRS): New.
	(CF_SCRIPTS): Rename dbug scripts.  Add bdm scripts. Add m5485
	scripts.
	(all): Add new targets.
	(BDM_BSP): New target.
	(bdm-isv.o, bdm-exit.o, bdm-outbyte.o, bdm-semihost.o): New
	targets.
	(BDM_ISRS): New targets.
	(m5208evb.ld, m5213evb.ld, m5235evb.ld, m5272c3.ld, m5282evb.ld):
	Rename and adjust.
	(m5485evb-dbug): New.
	(m5208evb-bdm.ld, m5213evb-bdm.ld, m5235evb-bdm.ld,
	m5272c3-bdm.ld, m5282evb-bdm.ld, m5485evb-bdm.ld): New.
	(install): Add BDM_BSP.
	* libgloss/m68k/bdm-exit.c: New
	* libgloss/m68k/bdm-inbyte.c: New
	* libgloss/m68k/bdm-outbyte.c: New
	* libgloss/m68k/bdm-semihost.c: New
	* libgloss/m68k/bdm-semihost.h: New
	* libgloss/m68k/bdm-isrs.c: New.
	* libgloss/m68k/bdm-isv.c: New.
	* cf-dbug.sc: Renamed to ...
	* cf.sc: ... here.  Add bdm flexibility. Remove GROUP
@
text
@a0 26
2006-03-29  Nathan Sidwell  <nathan@@codesourcery.com>

	* libgloss/m68k/Makefile.in (BDM_BSP, BDM_OBJS, BDM_ISRS): New.
	(CF_SCRIPTS): Rename dbug scripts.  Add bdm scripts. Add m5485
	scripts.
	(all): Add new targets.
	(BDM_BSP): New target.
	(bdm-isv.o, bdm-exit.o, bdm-outbyte.o, bdm-semihost.o): New
	targets.
	(BDM_ISRS): New targets.
	(m5208evb.ld, m5213evb.ld, m5235evb.ld, m5272c3.ld, m5282evb.ld):
	Rename and adjust.
	(m5485evb-dbug): New.
	(m5208evb-bdm.ld, m5213evb-bdm.ld, m5235evb-bdm.ld,
	m5272c3-bdm.ld, m5282evb-bdm.ld, m5485evb-bdm.ld): New.
	(install): Add BDM_BSP.
	* libgloss/m68k/bdm-exit.c: New
	* libgloss/m68k/bdm-inbyte.c: New
	* libgloss/m68k/bdm-outbyte.c: New
	* libgloss/m68k/bdm-semihost.c: New
	* libgloss/m68k/bdm-semihost.h: New
	* libgloss/m68k/bdm-isrs.c: New.
	* libgloss/m68k/bdm-isv.c: New.
	* cf-dbug.sc: Renamed to ...
	* cf.sc: ... here.  Add bdm flexibility. Remove GROUP

@


1.1.16.3
log
@	* libgloss/m68k/Makefile.in (CF_SCRIPTS): Add m5329 board.
	Reorder.
	(*-dbug.ld, *-bdm.ld): Add appropriate IO definition.
	(m5329evb-dbug.ld, m5329evb-bdm.ld): New.
	* cf.sc (GROUP): Revert previous change.  Add IO library.
@
text
@a2 6
	* libgloss/m68k/Makefile.in (CF_SCRIPTS): Add m5329 board.
	Reorder.
	(*-dbug.ld, *-bdm.ld): Add appropriate IO definition.
	(m5329evb-dbug.ld, m5329evb-bdm.ld): New.
	* cf.sc (GROUP): Revert previous change.  Add IO library.

@


1.1.16.4
log
@	* libgloss/m68k/bdm-isv.c (software_init_hook): Fix trap numbering.
@
text
@a2 2
	* libgloss/m68k/bdm-isv.c (software_init_hook): Fix trap numbering.

@


1.1.16.5
log
@	* libc/sys/arm/Makefile.am (lib_a_SOURCES): Add aeabi_memclr.c,
	aeabi_memcpy.c, aeabi_memmove.c and aeabi_memset.c.
	* libc/sys/arm/Makefile.in: Regenerate.
	* libc/sys/arm/aeabi.h: New file.
	* libc/sys/arm/aeabi_memclr.c: New file.
	* libc/sys/arm/aeabi_memcpy.c: New file.
	* libc/sys/arm/aeabi_memmove.c: New file.
	* libc/sys/arm/aeabi_memset.c: New file.
@
text
@a0 11
2006-05-04  Paul Brook  <paul@@codesourcery.com>

	* libc/sys/arm/Makefile.am (lib_a_SOURCES): Add aeabi_memclr.c,
	aeabi_memcpy.c, aeabi_memmove.c and aeabi_memset.c.
	* libc/sys/arm/Makefile.in: Regenerate.
	* libc/sys/arm/aeabi.h: New file.
	* libc/sys/arm/aeabi_memclr.c: New file.
	* libc/sys/arm/aeabi_memcpy.c: New file.
	* libc/sys/arm/aeabi_memmove.c: New file.
	* libc/sys/arm/aeabi_memset.c: New file.

@


1.1.16.6
log
@Add semihosting support for BDM mode on ColdFire
@
text
@a0 28
2006-05-22  Sandra Loosemore <sandra@@codesourcery.com>

	* libgloss/m68k/bdm-semihost.h: Add new constants for additional
	semihosting functions.  Add new BDM_TRAP macro to encapsulate
	inline asm.
	* libgloss/m68k/bdm-exit.c (_exit): Use new BDM_TRAP macro.
	* libgloss/m68k/bdm-outbyte.c (outbyte): Ditto.
	* libgloss/m68k/bdm-isrs.c, libgloss/m68k/bdm-isv.c: Former BDM_TRAP
	now called BDM_TRAPNUM.
	* libgloss/m68k/bdm-gdb.h, libgloss/m68k/bdm-gdb.c: New files
	containing declarations and conversion functions for GDB's fileio
	protocol.
	* libgloss/m68k/bdm-close.c: New file to define corresponding function.
	* libgloss/m68k/bdm-fstat.c: Ditto.
	* libgloss/m68k/bdm-gettimeofday.c: Ditto.
	* libgloss/m68k/bdm-isatty.c: Ditto.
	* libgloss/m68k/bdm-lseek.c: Ditto.
	* libgloss/m68k/bdm-open.c: Ditto.
	* libgloss/m68k/bdm-read.c: Ditto.
	* libgloss/m68k/bdm-rename.c: Ditto.
	* libgloss/m68k/bdm-stat.c: Ditto.
	* libgloss/m68k/bdm-system.c: Ditto.
	* libgloss/m68k/bdm-unlink.c: Ditto.
	* libgloss/m68k/bdm-write.c Ditto.
	* libgloss/m68k/Makefile.in: Add dependencies for new files.
	* newlib/configure.host: Tell it we have _rename and _system when
	building m68k-unknown-elf.

@


1.1.16.7
log
@	* libgloss/m68k/Makefile.in (BDM_SYSOBJS): Remove bdm-outbyte.o
	* libgloss/m68k/bdm-outbyte.c: Delete.
	* libgloss/m68k/bdm-semihost.h (BDM_OUTBYTE): Mark as obsolete.
@
text
@a0 6
2006-05-24  Nathan Sidwell  <nathan@@codesourcery.com>

	* libgloss/m68k/Makefile.in (BDM_SYSOBJS): Remove bdm-outbyte.o
	* libgloss/m68k/bdm-outbyte.c: Delete.
	* libgloss/m68k/bdm-semihost.h (BDM_OUTBYTE): Mark as obsolete.

@


1.1.16.8
log
@	* libgloss/m68k/Makefile.in (m52235-dbug.ld, m52235-bdm.ld): New
	scripts.
@
text
@a0 5
2006-05-25  Nathan Sidwell  <nathan@@codesourcery.com>

	* libgloss/m68k/Makefile.in (m52235-dbug.ld, m52235-bdm.ld): New
	scripts.

@


1.1.16.9
log
@	Issue #667
	* newlib/libc/sys/arm/syscalls.c (findslot): Call
	initialise_monitor_handles.
	(remap_handle): Do not call initialise_monitor_handles.
@
text
@a0 7
2006-05-31  Mark Mitchell  <mark@@codesourcery.com>

	Issue #667
	* newlib/libc/sys/arm/syscalls.c (findslot): Call
	initialise_monitor_handles.
	(remap_handle): Do not call initialise_monitor_handles.

@


1.1.16.10
log
@	* libgloss/arm/Makefile.in (LMS_SCRIPTS): New variable.
	(LMS_INSTALL): Likewise.
	(install): Depend on LMS_INSTALL.
	(install-lms): New target.
	* libgloss/arm/elf-cm3.lmd: New file.
	* libgloss/arm/elf-lm3s10x.ld: Likewise.
@
text
@a2 7
	* libgloss/arm/Makefile.in (LMS_SCRIPTS): New variable.
	(LMS_INSTALL): Likewise.
	(install): Depend on LMS_INSTALL.
	(install-lms): New target.
	* libgloss/arm/elf-cm3.lmd: New file.
	* libgloss/arm/elf-lm3s10x.ld: Likewise.

@


1.1.16.11
log
@	* libgloss/arm/elf-lm3s301.ld: New script.
	* libgloss/arm/elf-lm3s31x.ld: Likewise.
@
text
@a2 3
	* libgloss/arm/elf-lm3s301.ld: New script.
	* libgloss/arm/elf-lm3s31x.ld: Likewise.

@


1.1.16.12
log
@	* libgloss/m68k/Makefile.in (BDM_SYSOBJS): Remove bdm-inbyte.o.
	Add bdm-time.o.
	* libgloss/m68k/bdm-close.c: Add copyright notice.
	* libgloss/m68k/bdm-fstat.c: Add copyright notice.
	* libgloss/m68k/bdm-gettimeofday.c: Add copyright notice. Fix &/|
	thinko.
	* libgloss/m68k/bdm-inbyte.c: Remove.
	* libgloss/m68k/bdm-isatty.c: Add copyright notice.
	* libgloss/m68k/bdm-lseek.c: Add copyright notice.
	* libgloss/m68k/bdm-open.c: Add copyright notice.
	* libgloss/m68k/bdm-read.c: Add copyright notice.
	* libgloss/m68k/bdm-rename.c: Add copyright notice.
	* libgloss/m68k/bdm-stat.c: Add copyright notice.
	* libgloss/m68k/bdm-system.c: Add copyright notice.
	* libgloss/m68k/bdm-time.c: New.
	* libgloss/m68k/bdm-unlink.c: Add copyright notice.
	* libgloss/m68k/bdm-write.c: Add copyright notice.
@
text
@a0 20
2006-06-05  Nathan Sidwell  <nathan@@codesourcery.com>

	* libgloss/m68k/Makefile.in (BDM_SYSOBJS): Remove bdm-inbyte.o.
	Add bdm-time.o.
	* libgloss/m68k/bdm-close.c: Add copyright notice.
	* libgloss/m68k/bdm-fstat.c: Add copyright notice.
	* libgloss/m68k/bdm-gettimeofday.c: Add copyright notice. Fix &/|
	thinko.
	* libgloss/m68k/bdm-inbyte.c: Remove.
	* libgloss/m68k/bdm-isatty.c: Add copyright notice.
	* libgloss/m68k/bdm-lseek.c: Add copyright notice.
	* libgloss/m68k/bdm-open.c: Add copyright notice.
	* libgloss/m68k/bdm-read.c: Add copyright notice.
	* libgloss/m68k/bdm-rename.c: Add copyright notice.
	* libgloss/m68k/bdm-stat.c: Add copyright notice.
	* libgloss/m68k/bdm-system.c: Add copyright notice.
	* libgloss/m68k/bdm-time.c: New.
	* libgloss/m68k/bdm-unlink.c: Add copyright notice.
	* libgloss/m68k/bdm-write.c: Add copyright notice.

@


1.1.16.13
log
@fix changelog
@
text
@d7 2
a8 1
	* libgloss/m68k/bdm-gettimeofday.c: Add copyright notice.
d11 1
a11 2
	* libgloss/m68k/bdm-lseek.c: Add copyright notice. Fix &/|
	thinko.
@


1.1.16.14
log
@	* libgloss/m68k/bdm-system.c (_system): Properly encode non
	failure exit code.
@
text
@a0 5
2006-06-08  Nathan Sidwell  <nathan@@codesourcery.com>

	* libgloss/m68k/bdm-system.c (_system): Properly encode non
	failure exit code.

@


1.1.16.15
log
@Add additional ARM_RDI_MONITOR calls
@
text
@a0 7
2006-06-09  Sandra Loosemore <sandra@@codesourcery.com>

	* newlib/libc/sys/arm/syscalls.c (_unlink, isatty, _system, _rename):
	Make them do something useful in the ARM_RDI_MONITOR case.
	* libgloss/arm/syscalls.c (_unlink, isatty, _system, _rename):
	Likewise.

@


1.1.16.16
log
@	libgloss/
	* m68k/bdm-system.c (_system): Support system(NULL).
@
text
@a0 5
2006-06-09  Nathan Sidwell  <nathan@@codesourcery.com>

	libgloss/
	* m68k/bdm-system.c (_system): Support system(NULL).

@


1.1.16.17
log
@	Issue #733
	libgloss/
	* arm/Makefile.in (LMS_SCRIPTS): Add lm3s301.ld and lm3s31x.ld.
@
text
@a0 6
2006-06-13  Mark Mitchell  <mark@@codesourcery.com>

	Issue #733
	libgloss/
	* arm/Makefile.in (LMS_SCRIPTS): Add lm3s301.ld and lm3s31x.ld. 

@


1.1.16.18
log
@	Issue #754
	libgloss/
	* arm/elf-lm3s301.ld: Include cm3.ld.
	* arm/elf-lm3s31x.ld: Likewise.
@
text
@a0 7
2006-06-23  Mark Mitchell  <mark@@codesourcery.com>

	Issue #754
	libgloss/
	* arm/elf-lm3s301.ld: Include cm3.ld.
	* arm/elf-lm3s31x.ld: Likewise.

@


1.1.16.19
log
@	libgloss/
	* m68k/cf.sc: Set entry point to _start.
	* m68k/crt0.X (_start): New name for entrypoint
	(start): Weak alias for start.
@
text
@a0 7
2006-07-24  Nathan Sidwell  <nathan@@codesourcery.com>

	libgloss/
	* m68k/cf.sc: Set entry point to _start.
	* m68k/crt0.X (_start): New name for entrypoint
	(start): Weak alias for start.

@


1.1.16.20
log
@add bug number
@
text
@a2 1
	Bug 844
@


1.1.16.21
log
@Fix a typo.
@
text
@d157 1
a157 1
	* dbug-cf.sc: Renamed to ...
@


1.1.16.22
log
@2006-08-22  Paul Brook  <paul@@codesourcery.com>

	newlib/
	* libc/sys/arm/syscalls.c (initialise_monitor_handles): Fix
	multithreaded locking.
@
text
@a0 6
2006-08-22  Paul Brook  <paul@@codesourcery.com>

	newlib/
	* libc/sys/arm/syscalls.c (initialise_monitor_handles): Fix
	multithreaded locking.

@


1.1.16.23
log
@	libgloss/
	* m68k/Makefile.in (DBUG_BSP, DBUG_OBJS): Remove.
	(BDM_CRT0): New.
	(BDM_OBJS): Add bdm-crt1.o.
	(BDM_OTHER_OBJS): Remove print.o putnum.o
	(CF_BOARDS): New.
	(CF_BDM_SCRIPTS): Generated name of ram scripts.
	(CF_ROM_SCRIPTS): Generated name of rom scripts.
	(CF_SCRIPTS): Adjust.
	(all): Add BDM_CRT0.
	(bdm-crt0.o, bdm-crt1.o): New targets.
	(bdm-isv.o): Remove.
	(m5208evb, m5213evb, m52235evb, m5235evb, m5273c3, m5282evb,
	m5329evb, m5485evb): New.
	(%-bdm.ld, %-rom.ld): New. Replace individual linker script rules.
	(install): Remove DBUG installs.
	* m68k/bdm-crt0.S: New.
	* m68k/bdm-crt1.c: New.
	* m68k/bdm-exit.c: Call __reset.
	* m68k/bdm-isv.c: Remove.
	* m68k/cf.sc: Adjust to produce either rom or ram images.
	* m68k/dbug-exit.S, m68k/dbug-inbyte.S, m68k/dbug-outbyte.S: Remove.
@
text
@a0 25
2006-08-25  Nathan Sidwell  <nathan@@codesourcery.com>

	libgloss/
	* m68k/Makefile.in (DBUG_BSP, DBUG_OBJS): Remove.
	(BDM_CRT0): New.
	(BDM_OBJS): Add bdm-crt1.o.
	(BDM_OTHER_OBJS): Remove print.o putnum.o
	(CF_BOARDS): New.
	(CF_BDM_SCRIPTS): Generated name of ram scripts.
	(CF_ROM_SCRIPTS): Generated name of rom scripts.
	(CF_SCRIPTS): Adjust.
	(all): Add BDM_CRT0.
	(bdm-crt0.o, bdm-crt1.o): New targets.
	(bdm-isv.o): Remove.
	(m5208evb, m5213evb, m52235evb, m5235evb, m5273c3, m5282evb,
	m5329evb, m5485evb): New.
	(%-bdm.ld, %-rom.ld): New. Replace individual linker script rules.
	(install): Remove DBUG installs.
	* m68k/bdm-crt0.S: New.
	* m68k/bdm-crt1.c: New.
	* m68k/bdm-exit.c: Call __reset.
	* m68k/bdm-isv.c: Remove.
	* m68k/cf.sc: Adjust to produce either rom or ram images.
	* m68k/dbug-exit.S, m68k/dbug-inbyte.S, m68k/dbug-outbyte.S: Remove.

@


1.1.16.24
log
@2006-08-29  Paul Brook  <paul@@codesourcery.com>

	newlib/
	* libc/include/sys/config.h: Define _REENT_SMALL for Thumb-2.
@
text
@a0 5
2006-08-29  Paul Brook  <paul@@codesourcery.com>

	newlib/
	* libc/include/sys/config.h: Define _REENT_SMALL for Thumb-2.

@


1.1.16.25
log
@2006-08-29  Paul Brook  <paul@@codesourcery.com>

	newlib/
	* acconfig.h (_ATEXIT_DYNAMIC_ALLOC): Remove.
	* configure.in: Remove --disable-newlib-atexit-dynamic-alloc.
	* libc/stdlib/__atexit.c (__register_exitproc): Use weak reference to
	malloc.  Only allocate dynamically if it is present.
	* libc/stdlib/__call_atexit.c (__call_exitprocs): Use weak reference
	to free.
	* configure: Regenerate.
	* newlib.hin: Regenerate.
@
text
@a3 12
	* acconfig.h (_ATEXIT_DYNAMIC_ALLOC): Remove.
	* configure.in: Remove --disable-newlib-atexit-dynamic-alloc.
	* libc/stdlib/__atexit.c (__register_exitproc): Use weak reference to
	malloc.  Only allocate dynamically if it is present.
	* libc/stdlib/__call_atexit.c (__call_exitprocs): Use weak reference
	to free.
	* configure: Regenerate.
	* newlib.hin: Regenerate.

2006-08-29  Paul Brook  <paul@@codesourcery.com>

	newlib/
@


1.1.16.26
log
@2006-08-29  Paul Brook  <paul@@codesourcery.com>

	newlib/
	* libc/sys/arm/_fault_isr.c (_fault_isr): Compile unconditionally.
	* libc/sys/arm/_nmi_isr.c (_nmi_isr): Ditto.
@
text
@a3 6
	* libc/sys/arm/_fault_isr.c (_fault_isr): Compile unconditionally.
	* libc/sys/arm/_nmi_isr.c (_nmi_isr): Ditto.

2006-08-29  Paul Brook  <paul@@codesourcery.com>

	newlib/
@


1.1.16.27
log
@2006-08-30  Paul Brook  <paul@@codesourcery.com>

	libgloss/
	* arm/Makefile.in: Change armv7m linker script generation.  Add
	armv7m.spec.  Build armv7m-crt0.o.
	* arm/arm.sc: New file.
	* arm/armv7m.specs: New file.
	* arm/crt0.S: Add armv7m code.
	* arm/elf-lm3s10x.ld: Remove.
	* arm/elf-lm3s301.ld: Remove.
	* arm/elf-lm3s31x.ld: Remove.
	* arm/swi.h (do_AngelSWI): Add definition.
	* arm/syscalls.c: Merge lazy semihosting initialization from newlib.

	newlib/
	* libc/sys/arm/crt0.S: Add armv7m rom startup code.
@
text
@a0 17
2006-08-30  Paul Brook  <paul@@codesourcery.com>

	libgloss/
	* arm/Makefile.in: Change armv7m linker script generation.  Add
	armv7m.spec.  Build armv7m-crt0.o.
	* arm/arm.sc: New file.
	* arm/armv7m.specs: New file.
	* arm/crt0.S: Add armv7m code.
	* arm/elf-lm3s10x.ld: Remove.
	* arm/elf-lm3s301.ld: Remove.
	* arm/elf-lm3s31x.ld: Remove.
	* arm/swi.h (do_AngelSWI): Add definition.
	* arm/syscalls.c: Merge lazy semihosting initialization from newlib.

	newlib/
	* libc/sys/arm/crt0.S: Add armv7m rom startup code.

@


1.1.16.28
log
@	libgloss/
	* m68k/Makefile.in (CF_BDM_SCRIPTS): Rename to CF_RAM_SCRIPTS.
	(CF_SCRIPTS): Update.
	(%-bdm.ld): Rename to %-ram.ld.
@
text
@a0 7
2006-08-31  Nathan Sidwell  <nathan@@codesourcery.com>

	libgloss/
	* m68k/Makefile.in (CF_BDM_SCRIPTS): Rename to CF_RAM_SCRIPTS.
	(CF_SCRIPTS): Update.
	(%-bdm.ld): Rename to %-ram.ld.

@


1.1.16.29
log
@	libgloss/
	* m68k/bdm-crt1.c: Call hardware_init_hook before copying
	initialized data.
@
text
@a3 4
	* m68k/bdm-crt1.c: Call hardware_init_hook before copying
	initialized data.

	libgloss/
@


1.1.16.30
log
@Reformat ChangeLog entries.
@
text
@d111 1
a111 2
	newlib/
	* libc/sys/arm/syscalls.c (_unlink, isatty, _system, _rename):
d113 2
a114 4

	libgloss/
	* arm/syscalls.c (_unlink, isatty, _system, _rename): Make
	them do something useful in the ARM_RDI_MONITOR case.
d118 2
a119 3
	libgloss/
	* m68k/bdm-system.c (_system): Properly encode non failure exit
	code.
d123 1
a123 2
	libgloss/
	* m68k/Makefile.in (BDM_SYSOBJS): Remove bdm-inbyte.o.
d125 15
a139 14
	* m68k/bdm-close.c: Add copyright notice.
	* m68k/bdm-fstat.c: Add copyright notice.
	* m68k/bdm-gettimeofday.c: Add copyright notice.
	* m68k/bdm-inbyte.c: Remove.
	* m68k/bdm-isatty.c: Add copyright notice.
	* m68k/bdm-lseek.c: Add copyright notice. Fix &/| thinko.
	* m68k/bdm-open.c: Add copyright notice.
	* m68k/bdm-read.c: Add copyright notice.
	* m68k/bdm-rename.c: Add copyright notice.
	* m68k/bdm-stat.c: Add copyright notice.
	* m68k/bdm-system.c: Add copyright notice.
	* m68k/bdm-time.c: New.
	* m68k/bdm-unlink.c: Add copyright notice.
	* m68k/bdm-write.c: Add copyright notice.
d143 2
a144 3
	libgloss/
	* arm/elf-lm3s301.ld: New script.
	* arm/elf-lm3s31x.ld: Likewise.
d146 1
a146 1
	* arm/Makefile.in (LMS_SCRIPTS): New variable.
d150 2
a151 2
	* arm/elf-cm3.lmd: New file.
	* arm/elf-lm3s10x.ld: Likewise.
d154 1
a154 2
	newlib/
	* libc/sys/arm/syscalls.c (findslot): Call
d160 1
a160 2
	libgloss/
	* m68k/Makefile.in (m52235-dbug.ld, m52235-bdm.ld): New
d165 3
a167 4
	libgloss/
	* m68k/Makefile.in (BDM_SYSOBJS): Remove bdm-outbyte.o.
	* m68k/bdm-outbyte.c: Delete.
	* m68k/bdm-semihost.h (BDM_OUTBYTE): Mark as obsolete.
d171 1
a171 2
	libgloss/
	* m68k/bdm-semihost.h: Add new constants for additional
d174 3
a176 3
	* m68k/bdm-exit.c (_exit): Use new BDM_TRAP macro.
	* m68k/bdm-outbyte.c (outbyte): Ditto.
	* m68k/bdm-isrs.c, m68k/bdm-isv.c: Former BDM_TRAP
d178 1
a178 1
	* m68k/bdm-gdb.h, m68k/bdm-gdb.c: New files
d181 14
a194 16
	* m68k/bdm-close.c: New file to define corresponding function.
	* m68k/bdm-fstat.c: Ditto.
	* m68k/bdm-gettimeofday.c: Ditto.
	* m68k/bdm-isatty.c: Ditto.
	* m68k/bdm-lseek.c: Ditto.
	* m68k/bdm-open.c: Ditto.
	* m68k/bdm-read.c: Ditto.
	* m68k/bdm-rename.c: Ditto.
	* m68k/bdm-stat.c: Ditto.
	* m68k/bdm-system.c: Ditto.
	* m68k/bdm-unlink.c: Ditto.
	* m68k/bdm-write.c Ditto.
	* m68k/Makefile.in: Add dependencies for new files.

	newlib/
	* configure.host: Tell it we have _rename and _system when
a198 1
	newlib/
d210 1
a210 2
	libgloss/
	* m68k/bdm-isv.c (software_init_hook): Fix trap numbering.
d212 1
a212 1
	* m68k/Makefile.in (CF_SCRIPTS): Add m5329 board.
d218 1
a218 1
	* m68k/Makefile.in (BDM_BSP, BDM_OBJS, BDM_ISRS): New.
d232 7
a238 7
	* m68k/bdm-exit.c: New
	* m68k/bdm-inbyte.c: New
	* m68k/bdm-outbyte.c: New
	* m68k/bdm-semihost.c: New
	* m68k/bdm-semihost.h: New
	* m68k/bdm-isrs.c: New.
	* m68k/bdm-isv.c: New.
a243 1
	newlib/
@


1.1.16.31
log
@2006-09-01  Paul Brook  <paul@@codesourcery.com>

	libgloss/
	* arm/Makefile.in: Include _exit.c in BSPs.  Add rdimon-ram.ld.
	Build linker scripts instead of spec files for rdimon and rdpmon.
	Pass CRT0 ad BSP to arm.sc.
	* arm/_exit.c: New file.
	* arm/arm.sc: Add STARTUP, GROUP and SEARCH_DIR.  Remove defaults
	for ROM and RAM.
	* arm/crt0.S: Give Thumb-2 symbols function type.
	Skip generic Arm init code for Thumb-2.
	Add _nmi_isr and _fault_isr.
	* arm/libcfunc.c (do_AngelSWI): Remove.
	* arm/swi.h (do_AngelSWI): New function.
	* arm/syscalls.c (do_AngelSWI): Remove.
	(_exit): Remove.
	(isatty): New function.
@
text
@a0 18
2006-09-01  Paul Brook  <paul@@codesourcery.com>

	libgloss/
	* arm/Makefile.in: Include _exit.c in BSPs.  Add rdimon-ram.ld.
	Build linker scripts instead of spec files for rdimon and rdpmon.
	Pass CRT0 ad BSP to arm.sc.
	* arm/_exit.c: New file.
	* arm/arm.sc: Add STARTUP, GROUP and SEARCH_DIR.  Remove defaults
	for ROM and RAM.
	* arm/crt0.S: Give Thumb-2 symbols function type.
	Skip generic Arm init code for Thumb-2.
	Add _nmi_isr and _fault_isr.
	* arm/libcfunc.c (do_AngelSWI): Remove.
	* arm/swi.h (do_AngelSWI): New function.
	* arm/syscalls.c (do_AngelSWI): Remove.
	(_exit): Remove.
	(isatty): New function.

@


1.1.16.32
log
@	libgloss/
	* m68k/cf.sc: Add .jcr section to .text.
@
text
@a0 5
2006-09-01  Nathan Sidwell  <nathan@@codesourcery.com>

	libgloss/
	* m68k/cf.sc: Add .jcr section to .text.

@


1.1.16.33
log
@2006-09-01  Paul Brook  <paul@@codesourcery.com>

	libgloss/
	* arm/Makefile.in: Reduce rdi/rdp ram size to avoid overflow.
@
text
@a0 5
2006-09-01  Paul Brook  <paul@@codesourcery.com>

	libgloss/
	* arm/Makefile.in: Reduce rdi/rdp ram size to avoid overflow.

@


1.1.16.34
log
@	libgloss/
	* m68k/Makefile.in (CF_SOURCES): New.
	(install): Install them.
@
text
@a0 6
2006-09-06  Nathan Sidwell  <nathan@@codesourcery.com>

	libgloss/
	* m68k/Makefile.in (CF_SOURCES): New.
	(install): Install them.

@


1.1.16.35
log
@2006-09-11  Daniel Jacobowitz  <dan@@codesourcery.com>

	libgloss/
	* arm/Makefile.in (armv7m, lm3s10x, lm3s301, lm3s31x): Swap
	RAM and ROM.
	(rdimon, rdpmon): Skip 8k.
@
text
@a0 7
2006-09-11  Daniel Jacobowitz  <dan@@codesourcery.com>

	libgloss/
	* arm/Makefile.in (armv7m, lm3s10x, lm3s301, lm3s31x): Swap
	RAM and ROM.
	(rdimon, rdpmon): Skip 8k.

@


1.1.16.36
log
@2006-09-11  Paul Brook  <paul@@codesourcery.com>

	libgloss/
	* arm/arm.sc: Add .jcr.
@
text
@a0 5
2006-09-11  Paul Brook  <paul@@codesourcery.com>

	libgloss/
	* arm/arm.sc: Add .jcr.

@


1.1.16.37
log
@	libgloss/
	* m68k/Makefile.in (BDM_OTHER_OBJS): Remove sbrk.o.
	(BDM_SYSOBJS): Add bdm-sbrk.o.
	* m68k/bdm-sbrk.c: New.
@
text
@a0 7
2006-09-15  Nathan Sidwell  <nathan@@codesourcery.com>

	libgloss/
	* m68k/Makefile.in (BDM_OTHER_OBJS): Remove sbrk.o.
	(BDM_SYSOBJS): Add bdm-sbrk.o.
	* m68k/bdm-sbrk.c: New.

@


1.1.16.38
log
@	libgloss/
	* m68k/Makefile.in (bdm-semihost.o): Build from bdm-semihost.S.
	* m68k/bdm-semihost.c: Remove.
	* m68k/bdm-semihost.S: New.
	* m68k/bdm-crt0.S: Don't install semihosting trap handler.
	* m68k/bdm-close.c, bdm-exit.c, bdm-fstat.c, bdm-gettimeofday.c,
	bdm-isatty.c, bdm-lseek.c, bdm-open.c, bdm-read.c, bdm-rename.c,
	bdm-stat.c, bdm-system.c, bdm-unlink.c, bdm-write.c): Update.
	* m68k/bdm-isrs.c: Update comment.
	* m68k/bdm-semihost.h (BDM_TRAPNUM, BDM_FUNC_REG, BDM_ARG_REG,
	BDM_TRAP): Remove.
	(__bdm_semihost): Declare.
@
text
@a0 15
2006-09-18  Nathan Sidwell  <nathan@@codesourcery.com>

	libgloss/
	* m68k/Makefile.in (bdm-semihost.o): Build from bdm-semihost.S.
	* m68k/bdm-semihost.c: Remove.
	* m68k/bdm-semihost.S: New.
	* m68k/bdm-crt0.S: Don't install semihosting trap handler.
	* m68k/bdm-close.c, bdm-exit.c, bdm-fstat.c, bdm-gettimeofday.c,
	bdm-isatty.c, bdm-lseek.c, bdm-open.c, bdm-read.c, bdm-rename.c,
	bdm-stat.c, bdm-system.c, bdm-unlink.c, bdm-write.c): Update.
	* m68k/bdm-isrs.c: Update comment.
	* m68k/bdm-semihost.h (BDM_TRAPNUM, BDM_FUNC_REG, BDM_ARG_REG,
	BDM_TRAP): Remove.
	(__bdm_semihost): Declare.

@


1.1.16.39
log
@	libgloss/
	* m68k/Makefile.in: Don't force a frame pointer on the ISRs.
	* m68k/bdm-crt1.c (__start1): Don't set the VBR here.
	(hardeare_init_hook): Define weakly.  Set VBR here, enable caching
	if supported.
@
text
@a3 6
	* m68k/Makefile.in: Don't force a frame pointer on the ISRs.
	* m68k/bdm-crt1.c (__start1): Don't set the VBR here.
	(hardeare_init_hook): Define weakly.  Set VBR here, enable caching
	if supported.

	libgloss/
@


1.1.16.40
log
@2006-09-20  Paul Brook  <paul@@codesourcery.com>

	newlib/
	* libc/stdlib/rand.c (srand): Add _REENT_CHECK_RAND48.
@
text
@a0 5
2006-09-20  Paul Brook  <paul@@codesourcery.com>

	newlib/
	* libc/stdlib/rand.c (srand): Add _REENT_CHECK_RAND48.

@


1.1.16.41
log
@2006-09-20  Paul Brook  <paul@@codesourcery.com>

	libgloss/
	* configure.in: Add check for .init_array.
	* configure: Regenerate.
@
text
@a2 6
	libgloss/
	* configure.in: Add check for .init_array.
	* configure: Regenerate.

2006-09-20  Paul Brook  <paul@@codesourcery.com>

@


1.1.16.42
log
@2006-09-20  Paul Brook  <paul@@codesourcery.com>

	libgloss/
	* arm/arm.sc: Add .gnu.linkonce and .ARM.extab sections.
@
text
@a3 5
	* arm/arm.sc: Add .gnu.linkonce and .ARM.extab sections.

2006-09-20  Paul Brook  <paul@@codesourcery.com>

	libgloss/
@


1.1.16.43
log
@2006-09-20  Paul Brook  <paul@@codesourcery.com>

	newlib/
	* libc/include/sys/reent.h: Define and use __reent_assert.
@
text
@a2 5
	newlib/
	* libc/include/sys/reent.h: Define and use __reent_assert.

2006-09-20  Paul Brook  <paul@@codesourcery.com>

@


1.1.16.44
log
@2006-09-21  Paul Brook  <paul@@codesourcery.com>

	newlib/
	* libc/include/sys/reent.h (_reent): Adjust _REENT_SMALL to be binary
	compatible with normal layout
@
text
@a0 6
2006-09-21  Paul Brook  <paul@@codesourcery.com>

	newlib/
	* libc/include/sys/reent.h (_reent): Adjust _REENT_SMALL to be binary
	compatible with normal layout

@


1.1.16.45
log
@	libgloss/
	* m68k/bdm-crt1.c (hardware_init_hook): Use #defines for CACR bits.
@
text
@a0 5
2006-09-22  Nathan Sidwell  <nathan@@codesourcery.com>

	libgloss/
	* m68k/bdm-crt1.c (hardware_init_hook): Use #defines for CACR bits.

@


1.1.16.46
log
@2006-09-17  Paul Brook  <paul@@codesourcery.com>

	newlib/
	Backport form mainline
	2006-09-26  Jeff Johnston  <jjohnstn@@redhat.com>
	* libc/include/stdio.h: Do not allow macros
	for clearerr, feof, or fileno.
	* libc/include/sys/reent.h[_REENT_SMALL](struct _reent): Change
	the dummy std stream scheme to use pointers to const external
	fake files, one for each standard stream.
	* libc/stdio/local.h (CHECK_INIT): Change to take a file pointer
	argument.  For _REENT_SMALL, reset the file pointer if it
	matches one of the fake std stream pointers.
	* libc/stdio/clearerr.c: Fix CHECK_INIT macro to add file pointer
	argument.
	* libc/stdio/fclose.c: Ditto.
	* libc/stdio/feof.c: Ditto.
	* libc/stdio/ferror.c: Ditto.
	* libc/stdio/fflush.c: Ditto.
	* libc/stdio/fgetc.c: Ditto.
	* libc/stdio/fgets.c: Ditto.
	* libc/stdio/fileno.c: Ditto.
	* libc/stdio/findfp.c: Ditto.
	* libc/stdio/fputc.c: Ditto.
	* libc/stdio/fputs.c: Ditto.
	* libc/stdio/fread.c: Ditto.
	* libc/stdio/freopen.c: Ditto.
	* libc/stdio/fseek.c: Ditto.
	* libc/stdio/ftell.c: Ditto.
	* libc/stdio/fwrite.c: Ditto.
	* libc/stdio/getc.c: Ditto.
	* libc/stdio/getdelim.c: Ditto.
	* libc/stdio/putc.c: Ditto.
	* libc/stdio/refill.c: Ditto.
	* libc/stdio/setvbuf.c: Ditto.
	* libc/stdio/ungetc.c: Ditto.
	* libc/stdio/vfprintf.c: Ditto.
	* libc/stdio/vfscanf.c: Ditto.
	* libc/stdio/wbuf.c: Ditto.: Ditto.
	* libc/stdio/wsetup.c: Ditto.
	* libc/stdio64/freopen64.c: Ditto.
	* libc/stdio64/fseeko64.c: Ditto.
	* libc/stdio64/ftello64.c: Ditto.
	* libc/machine/powerpc/vfprintf.c: Ditto.
	* libc/machine/powerpc/vfscanf.c: Ditto.
@
text
@a0 46
2006-09-17  Paul Brook  <paul@@codesourcery.com>

	newlib/
	Backport form mainline
	2006-09-26  Jeff Johnston  <jjohnstn@@redhat.com>
	* libc/include/stdio.h: Do not allow macros
	for clearerr, feof, or fileno.
	* libc/include/sys/reent.h[_REENT_SMALL](struct _reent): Change 
	the dummy std stream scheme to use pointers to const external 
	fake files, one for each standard stream.
	* libc/stdio/local.h (CHECK_INIT): Change to take a file pointer
	argument.  For _REENT_SMALL, reset the file pointer if it
	matches one of the fake std stream pointers.
	* libc/stdio/clearerr.c: Fix CHECK_INIT macro to add file pointer
	argument.
	* libc/stdio/fclose.c: Ditto.
	* libc/stdio/feof.c: Ditto.
	* libc/stdio/ferror.c: Ditto.
	* libc/stdio/fflush.c: Ditto.
	* libc/stdio/fgetc.c: Ditto.
	* libc/stdio/fgets.c: Ditto.
	* libc/stdio/fileno.c: Ditto.
	* libc/stdio/findfp.c: Ditto.
	* libc/stdio/fputc.c: Ditto.
	* libc/stdio/fputs.c: Ditto.
	* libc/stdio/fread.c: Ditto.
	* libc/stdio/freopen.c: Ditto.
	* libc/stdio/fseek.c: Ditto.
	* libc/stdio/ftell.c: Ditto.
	* libc/stdio/fwrite.c: Ditto.
	* libc/stdio/getc.c: Ditto.
	* libc/stdio/getdelim.c: Ditto.
	* libc/stdio/putc.c: Ditto.
	* libc/stdio/refill.c: Ditto.
	* libc/stdio/setvbuf.c: Ditto.
	* libc/stdio/ungetc.c: Ditto.
	* libc/stdio/vfprintf.c: Ditto.
	* libc/stdio/vfscanf.c: Ditto.
	* libc/stdio/wbuf.c: Ditto.: Ditto.
	* libc/stdio/wsetup.c: Ditto.
	* libc/stdio64/freopen64.c: Ditto.
	* libc/stdio64/fseeko64.c: Ditto.
	* libc/stdio64/ftello64.c: Ditto.
	* libc/machine/powerpc/vfprintf.c: Ditto.
	* libc/machine/powerpc/vfscanf.c: Ditto.

@


1.1.16.47
log
@	libgloss/
	* m68k/bdm-semihost.S: Add more comments.  Make instruction weirder.
@
text
@a0 5
2006-09-29  Nathan Sidwell  <nathan@@codesourcery.com>

	libgloss/
	* m68k/bdm-semihost.S: Add more comments.  Make instruction weirder.

@


1.1.16.48
log
@2006-10-01  Paul Brook  <paul@@codesourcery.com>

	* libgloss/
	arm/arm.sc: Add all .ARM.extab* sections.
@
text
@a0 5
2006-10-01  Paul Brook  <paul@@codesourcery.com>

	* libgloss/
	arm/arm.sc: Add all .ARM.extab* sections.

@


1.1.16.49
log
@	libgloss/
	* m68k/Makefile.in: Adjust Coldfire rules.
	(BDM_CRT0, BDM_BSP, BDM_OBJS, BDM_ISRS): Rename	to ...
	(CF_CRT0, CF_BSP, CF_OBJS, CF_ISRS): ... here.  Adjust.
	(BDM_OTHER_OBJS): Remove.
	(BDM_SYSOBJS): Rename to ...
	(UNHOSTED_OBJS): ... here.  Adjust.
	(UNHOSTED_BSP, HOSTED_OBJS, HOSTED_BSP): New.
	(CF_HOSTED_SCRIPTS): New.
	(CF_SCRIPTS, CF_SOURCES): Adjust.
	* m68k/cf.sc: Add IO library variable.
	* m68k/bdm-crt0.S, m68k/bdm-crt1.c, m68k/bdm-isrs.c,
	m68k/bdm-sbrk.c, m68k/bdm-semihost.S: Rename to ...
	* m68k/cf-crt0.S, m68k/cf-crt1.c, m68k/cf-isrs.c, m68k/cf-sbrk.c,
	m68k/cf-hosted.S: ... here.
	* m68k/cf-exit.c: New.
	* m68k/bdm-gdb.h, m68k/bdm-semihost.h: Merge into ...
	* m68k/io.h: ... here.  Add unhosted support.  Adjust conversion
	function names.
	* m68k/bdm-gdb.c: Rename to ...
	* m68k/io-gdb.c: ... here.  Adjust names of conversion functions.
	* m68k/bdm-close.c, m68k/bdm-exit.c, m68k/bdm-fstat.c,
	m68k/bdm-gettimeofday.c, m68k/bdm-isatty.c, m68k/bdm-lseek.c,
	m68k/bdm-open.c, m68k/bdm-read.c, m68k/bdm-rename.c,
	m68k/bdm-stat.c, m68k/bdm-system.c, m68k/bdm-time.c,
	m68k/bdm-unlink.c, m68k/bdm-write.c: Rename to ...
	* m68k/io-close.c, m68k/io-exit.c, m68k/io-fstat.c,
	m68k/io-gettimeofday.c, m68k/io-isatty.c, m68k/io-lseek.c,
	m68k/io-open.c, m68k/io-read.c, m68k/io-rename.c, m68k/io-stat.c,
	m68k/io-system.c, m68k/io-time.c, m68k/io-unlink.c,
	m68k/io-write.c: ... here.  Include io.h. Adjust for hosted &
	unhosted libraries.  Adjust names of gdb conversion functions.
@
text
@a0 35
2006-10-07  Nathan Sidwell  <nathan@@codesourcery.com>

	libgloss/
	* m68k/Makefile.in: Adjust Coldfire rules.
	(BDM_CRT0, BDM_BSP, BDM_OBJS, BDM_ISRS): Rename	to ...
	(CF_CRT0, CF_BSP, CF_OBJS, CF_ISRS): ... here.  Adjust.
	(BDM_OTHER_OBJS): Remove.
	(BDM_SYSOBJS): Rename to ...
	(UNHOSTED_OBJS): ... here.  Adjust.
	(UNHOSTED_BSP, HOSTED_OBJS, HOSTED_BSP): New.
	(CF_HOSTED_SCRIPTS): New.
	(CF_SCRIPTS, CF_SOURCES): Adjust.
	* m68k/cf.sc: Add IO library variable.
	* m68k/bdm-crt0.S, m68k/bdm-crt1.c, m68k/bdm-isrs.c,
	m68k/bdm-sbrk.c, m68k/bdm-semihost.S: Rename to ...
	* m68k/cf-crt0.S, m68k/cf-crt1.c, m68k/cf-isrs.c, m68k/cf-sbrk.c,
	m68k/cf-hosted.S: ... here.
	* m68k/cf-exit.c: New.
	* m68k/bdm-gdb.h, m68k/bdm-semihost.h: Merge into ...
	* m68k/io.h: ... here.  Add unhosted support.  Adjust conversion
	function names.
	* m68k/bdm-gdb.c: Rename to ...
	* m68k/io-gdb.c: ... here.  Adjust names of conversion functions.
	* m68k/bdm-close.c, m68k/bdm-exit.c, m68k/bdm-fstat.c,
	m68k/bdm-gettimeofday.c, m68k/bdm-isatty.c, m68k/bdm-lseek.c,
	m68k/bdm-open.c, m68k/bdm-read.c, m68k/bdm-rename.c,
	m68k/bdm-stat.c, m68k/bdm-system.c, m68k/bdm-time.c,
	m68k/bdm-unlink.c, m68k/bdm-write.c: Rename to ...
	* m68k/io-close.c, m68k/io-exit.c, m68k/io-fstat.c,
	m68k/io-gettimeofday.c, m68k/io-isatty.c, m68k/io-lseek.c,
	m68k/io-open.c, m68k/io-read.c, m68k/io-rename.c, m68k/io-stat.c,
	m68k/io-system.c, m68k/io-time.c, m68k/io-unlink.c,
	m68k/io-write.c: ... here.  Include io.h. Adjust for hosted &
	unhosted libraries.  Adjust names of gdb conversion functions.

@


1.1.16.50
log
@       libgloss/
       * m68k/cf.sc: Add linkonce sections and
       DWARF sections.
@
text
@a0 6
2006-10-20  Vladimir Prus  <vladimir@@codesourcery.com>

	libgloss/
	* m68k/cf.sc: Add linkonce sections and
	DWARF sections.
            
@


1.1.16.51
log
@	libgloss/
	* m68k/Makefile.in (CF_BOARDS): Add m5275evb.
	(m5275evb): New board.
@
text
@a0 6
2006-10-20  Nathan Sidwell  <nathan@@codesourcery.com>

	libgloss/
	* m68k/Makefile.in (CF_BOARDS): Add m5275evb.
	(m5275evb): New board.

@


1.1.16.52
log
@	libgloss/
	* m68k/Makefile.in (CF_CRT0): Rename to CF_CRT0S, separate hosted
	& unhosted versions.
	(CF_OBJS): Add cf-isv.o.
	(CF_SOURCES): Add cf-isv.S.
	(cf-hosted-crt0.o, cf-unhosted-crt0.o): New targets.
	* m68k/cf-isv.S: New, broken out of ...
	* m68k/cf-crt0.S: ... here.  Add HOSTED & UNHOSTED differences.
	* m68k/cf-crt1.c (__start1): Add heap_limit argument.
	(__heap_limit): Define.
	* m68k/cf-sbrk.c (__heap_limit): Declare.
	(sbrk): Adjust for __heap_limit.
	* m68k/cf.sc: Use different crt0's for hosted & unhosted.
	Install a separate isv.o file.
	* m68k/io.h (HOSTED_PUTCHAR): Replace with ...
	(HOSTED_INIT_SIM): ... this.
@
text
@a0 19
2006-10-23  Nathan Sidwell  <nathan@@codesourcery.com>

	libgloss/
	* m68k/Makefile.in (CF_CRT0): Rename to CF_CRT0S, separate hosted
	& unhosted versions.
	(CF_OBJS): Add cf-isv.o.
	(CF_SOURCES): Add cf-isv.S.
	(cf-hosted-crt0.o, cf-unhosted-crt0.o): New targets.
	* m68k/cf-isv.S: New, broken out of ...
	* m68k/cf-crt0.S: ... here.  Add HOSTED & UNHOSTED differences.
	* m68k/cf-crt1.c (__start1): Add heap_limit argument.
	(__heap_limit): Define.
	* m68k/cf-sbrk.c (__heap_limit): Declare.
	(sbrk): Adjust for __heap_limit.
	* m68k/cf.sc: Use different crt0's for hosted & unhosted.
	Install a separate isv.o file.
	* m68k/io.h (HOSTED_PUTCHAR): Replace with ...
	(HOSTED_INIT_SIM): ... this.

@


1.1.16.53
log
@2006-10-23  Paul Brook  <paul@@codesourcery.com>

	libgloss/
	* arm/Makefile.in (ARMV7M_OBJS): Add lm3s6xx-rom.ld, lm3s8xx-rom.ld,
	lm3s6xx-ram.ld and lm3s8xx-ram.ld
	(lm3s6xx, lm3s8xx): Define.
@
text
@a0 7
2006-10-23  Paul Brook  <paul@@codesourcery.com>

	libgloss/
	* arm/Makefile.in (ARMV7M_OBJS): Add lm3s6xx-rom.ld, lm3s8xx-rom.ld,
	lm3s6xx-ram.ld and lm3s8xx-ram.ld
	(lm3s6xx, lm3s8xx): Define.

@


1.1.16.54
log
@       Merge from HEAD:
       newlib/
       * libc/include/math.h: (exception): Add a comment
       telling fixincludes that we handle C vs. C++ issue.
@
text
@a0 7
2006-10-25  Vladimir Prus  <vladimir@@codesourcery.com>
	
	Merge from HEAD:
	newlib/         
	* libc/include/math.h: (exception): Add a comment
	telling fixincludes that we handle C vs. C++ issue.

@


1.1.16.55
log
@	libgloss/
	* m68k/configure.in (DO) Set to list of target cpu families.
	* m68k/configure: Rebuilt.
	* m68k/Makefile.in (DO): New.
	(UNHOSTED_BSP, UNHOSTED_OBJS, HOSTED_BSP, HOSTED_OBJS): Move
	later.
	(m5208evb, m5213evb, m52235evb, m5235evb, m5273c3, m5275evb,
	m5282evb, m5329evb, m5485evb): Move earlier.
	(all): Add all_$DO dependencies.
	(all_cf, all_m68k): New targets, depend on cf & m68k bsps as
	appropriate.
	(m%-ram.ld, m%-rom.ld, m%-ram-hosted.ld, m%-rom-hosted.ld): Add
	'm' prefix.
	(install): Add install_$DO dependencies.
	(install_cf, install_m68k): New targets.  Perform cf and m68k
	installs as appropriate.
	(install_io): New, install the io libraries.
@
text
@a0 18
2006-11-01  Nathan Sidwell  <nathan@@codesourcery.com>

	libgloss/
	* m68k/Makefile.in (IS_GCC, DO_CF, DO_M68K): New.
	(UNHOSTED_BSP, UNHOSTED_OBJS, HOSTED_BSP, HOSTED_OBJS): Move
	later.
	(m5208evb, m5213evb, m52235evb, m5235evb, m5273c3, m5275evb,
	m5282evb, m5329evb, m5485evb): Move earlier.
	(all): Add all_cf & all_m68k conditional dependencies.
	(all_cf, all_m68k): New targets, depend on cf & m68k bsps as
	appropriate.
	(m%-ram.ld, m%-rom.ld, m%-ram-hosted.ld, m%-rom-hosted.ld): Add
	'm' prefix.
	(install): Add install_cf, install_m68k conditional dependencies.
	(install_cf, install_m68k): New targets.  Perform cf and m68k
	installs as appropriate.
	(install_io): New, install the io libraries.

@


1.1.16.56
log
@	libgloss/
	* m68k/Makefile.in (CFLAGS): Do not clear.  Add to all compilations.
	(ARFLAGS): Remove commented out definition.
@
text
@d4 1
a4 7
	* m68k/Makefile.in (CFLAGS): Do not clear.  Add to all compilations.
	(ARFLAGS): Remove commented out definition.

	libgloss/
	* m68k/configure.in (DO) Set to list of target cpu families.
	* m68k/configure: Rebuilt.
	* m68k/Makefile.in (DO): New.
d9 1
a9 1
	(all): Add all_$DO dependencies.
d14 1
a14 1
	(install): Add install_$DO dependencies.
d20 1
a20 1

@


1.1.16.57
log
@2006-11-06  Paul Brook  <paul@@codesourcery.com>

	libgloss/
	* arm/Makefie.in (ALL_CFLAGS): Define and use.
@
text
@a0 5
2006-11-06  Paul Brook  <paul@@codesourcery.com>

	libgloss/
	* arm/Makefie.in (ALL_CFLAGS): Define and use.

@


1.1.16.58
log
@	/
	* config.sub: Recognize fido and fido-*.

	libgloss/
	* configure.in: Recognize fido-*-*.
	* configure: Regenerate.
	* m68k/Makefile.in (CF_ISRS): Use addprefix.
	(FIDO_CRT0, FIDO_BSP, FIDO_OBJS, FIDO_HANDLERS,
	FIDO_UNHOSTED_SCRIPTS, FIDO_HOSTED_SCRIPTS, FIDO_SCRIPTS,
	FIDO_SOURCES, all_fido, fido-%-crt0.o, fido-rom.ld,
	fido-rom-hosted.ld, fido-sram.ld, fido-sram-hosted.ld,
	fido-sdram.ld, fido-sdram-hosted.ld, fido-redboot.ld,
	install_fido): New.
	* m68k/asm.h (mbb): New.
	* m68k/configure.in (DO): Check for __mfido__.
	* m68k/configure: Regenerate.
	* m68k/fido-_exit.c, m68k/fido-crt0.S, m68k/fido-handler.c,
	m68k/fido-hosted.S, m68k/fido-sbrk.c, m68k/fido.h,
	m68k/fido.sc, m68k/fido_profiling.h: New.

	newlib/
	* configure.host: Recognize fido.
@
text
@a0 26
2006-12-01  Nathan Sidwell  <nathan@@codesourcery.com>
	    Kazu Hirata  <kazu@@codesourcery.com>

	/
	* config.sub: Recognize fido and fido-*.

	libgloss/
	* configure.in: Recognize fido-*-*.
	* configure: Regenerate.
	* m68k/Makefile.in (CF_ISRS): Use addprefix.
	(FIDO_CRT0, FIDO_BSP, FIDO_OBJS, FIDO_HANDLERS,
	FIDO_UNHOSTED_SCRIPTS, FIDO_HOSTED_SCRIPTS, FIDO_SCRIPTS,
	FIDO_SOURCES, all_fido, fido-%-crt0.o, fido-rom.ld,
	fido-rom-hosted.ld, fido-sram.ld, fido-sram-hosted.ld,
	fido-sdram.ld, fido-sdram-hosted.ld, fido-redboot.ld,
	install_fido): New.
	* m68k/asm.h (mbb): New.
	* m68k/configure.in (DO): Check for __mfido__.
	* m68k/configure: Regenerate.
	* m68k/fido-_exit.c, m68k/fido-crt0.S, m68k/fido-handler.c,
	m68k/fido-hosted.S, m68k/fido-sbrk.c, m68k/fido.h,
	m68k/fido.sc, m68k/fido_profiling.h: New.

	newlib/
	* configure.host: Recognize fido.

@


1.1.16.59
log
@	libgloss/
	* m68k/Makefile (install_cf): Don't loop over files here.  Only
	install sources for the default multilib.
	(install_fido): Likewise.
	(install_io): Install bsps in one go.
@
text
@a0 8
2006-12-13  Nathan Sidwell  <nathan@@codesourcery.com>

	libgloss/
	* m68k/Makefile (install_cf): Don't loop over files here.  Only
	install sources for the default multilib.
	(install_fido): Likewise.
	(install_io): Install bsps in one go.

@


1.1.16.60
log
@	* libgloss/m68k/fido-crt0.S (_start): Set %vbr for context 0 in
	RAM configs.
	* libgloss/m68k/fido.sc: Clean up formatting.  Add comments.  Move
	stack and heap end to SDRAM for SRAM and SDRAM configurations.
	Put RedBoot application text in SRAM.
@
text
@a0 8
2006-12-15  Daniel Jacobowitz  <dan@@codesourcery.com>

	* libgloss/m68k/fido-crt0.S (_start): Set %vbr for context 0 in
	RAM configs.
	* libgloss/m68k/fido.sc: Clean up formatting.  Add comments.  Move
	stack and heap end to SDRAM for SRAM and SDRAM configurations.
	Put RedBoot application text in SRAM.

@


1.1.16.61
log
@	libgloss/
	* m68k/Makefile.in (FIDO_OBJS): Build fido-priv.o.
	* m68k/fido-crt0.S (_vector_table): Reference
	_PrivilegeViolationHandler.
	* m68k/fido-priv.S: New file.
@
text
@d3 1
a3 10
	libgloss/
	* m68k/Makefile.in (FIDO_OBJS): Build fido-priv.o.
	* m68k/fido-crt0.S (_vector_table): Reference
	_PrivilegeViolationHandler.
	* m68k/fido-priv.S: New file.

2006-12-15  Daniel Jacobowitz  <dan@@codesourcery.com>

	libgloss/
	* m68k/fido-crt0.S (_start): Set %vbr for context 0 in
d5 1
a5 1
	* m68k/fido.sc: Clean up formatting.  Add comments.  Move
@


1.1.16.62
log
@Fix a typo.
@
text
@d55 1
a55 1
	* arm/Makefile.in (ALL_CFLAGS): Define and use.
@


1.1.16.63
log
@	libgloss/
	* m68k/Makefile.in (CF_ISRS): Remove now shared routines.
	* m68k/cf-crt0.S (__reset): Define here.
	(__start): Adjust semihosting.
	* m68k/cf-hosted.S (__hosted): Adjust semihosting.
	* m68k/cf-isrs.c: Share some ISRS.  Add aliases for each IRQ slot.
	* m68k/cf-isv.S: Move to .interrupt_vector section.  Make each
	slot a unique routine.
	* m68k/cf.sc: Adjust for .interrupt_vector section.
@
text
@d1 1
a1 1
2006-12-22  Nathan Sidwell  <nathan@@codesourcery.com>
a3 11
	* m68k/Makefile.in (CF_ISRS): Remove now shared routines.
	* m68k/cf-crt0.S (__reset): Define here.
	(__start): Adjust semihosting.
	* m68k/cf-hosted.S (__hosted): Adjust semihosting.
	* m68k/cf-isrs.c: Share some ISRS.  Add aliases for each IRQ slot.
	* m68k/cf-isv.S: Move to .interrupt_vector section.  Make each
	slot a unique routine.
	* m68k/cf.sc: Adjust for .interrupt_vector section.

2006-12-15  Daniel Jacobowitz  <dan@@codesourcery.com>

@


1.1.16.64
log
@	newlib/
	* testsuite/lib/flags.exp (newlib_include_flags): Drop
	-I${newlib_dir}.
@
text
@a0 6
2006-12-22  Kazu Hirata  <kazu@@codesourcery.com>

	newlib/
	* testsuite/lib/flags.exp (newlib_include_flags): Drop
	-I${newlib_dir}.

@


1.1.16.65
log
@	libgloss/
	* m68k/Makefile.in (m5273c3): Rename to ...
	(m5272c3): ... here to fix typo.
	(m5249c3): New.
	(CF_BOARDS): Add it.
@
text
@a18 6
	libgloss/
	* m68k/Makefile.in (m5273c3): Rename to ...
	(m5272c3): ... here to fix typo.
	(m5249c3): New.
	(CF_BOARDS): Add it.

@


1.1.14.1
log
@new
@
text
@a0 1
Local patches on this branch
@


1.1.14.2
log
@2006-03-20  Paul Brook  <paul@@codesourcery.com>

gas/
	* config/tc-arm.c (THUMB2_LOAD_BIT): Define.
	(move_or_literal_pool): Handle Thumb-2 instructions.
	(do_t_ldst): Call move_or_literal_pool for =N addressing modes.
gas/testsuite/
	* gas/arm/thumb2_pool.d: New test.
	* gas/arm/thumb2_pool.s: New test.
@
text
@d1 1
a1 9
2006-03-20  Paul Brook  <paul@@codesourcery.com>

gas/
	* config/tc-arm.c (THUMB2_LOAD_BIT): Define.
	(move_or_literal_pool): Handle Thumb-2 instructions.
	(do_t_ldst): Call move_or_literal_pool for =N addressing modes.
gas/testsuite/
	* gas/arm/thumb2_pool.d: New test.
	* gas/arm/thumb2_pool.s: New test.
@


1.1.14.3
log
@2006-03-20  Paul Brook  <paul@@codesourcery.com>

	* gas/config/tc-arm.c (md_apply_fix): Set H bit on blx instruction.

	* gas/testsuite/gas/arm/blx-local.d: New test.
	* gas/testsuite/gas/arm/blx-local.d: New test.
@
text
@d3 2
a4 8
	* gas/config/tc-arm.c (md_apply_fix): Set H bit on blx instruction.

	* gas/testsuite/gas/arm/blx-local.d: New test.
	* gas/testsuite/gas/arm/blx-local.d: New test.

2006-03-20  Paul Brook  <paul@@codesourcery.com>

	* gas/config/tc-arm.c (THUMB2_LOAD_BIT): Define.
d7 3
a9 3

	* gas/testsuite/gas/arm/thumb2_pool.d: New test.
	* gas/testsuite/gas/arm/thumb2_pool.s: New test.
@


1.1.14.4
log
@2006-03-20  Paul Brook  <paul@@codesourcery.com>

	* gas/config/tc-arm.c (parse_tb): Set inst.error before returning FAIL.
@
text
@a2 4
	* gas/config/tc-arm.c (parse_tb): Set inst.error before returning FAIL.

2006-03-20  Paul Brook  <paul@@codesourcery.com>

@


1.1.14.5
log
@2006-03-20  Paul Brook  <paul@@codesourcery.com>

	* gas/config/tc-arm.c (parse_operands): Set default error message.
@
text
@a2 4
	* gas/config/tc-arm.c (parse_operands): Set default error message.

2006-03-20  Paul Brook  <paul@@codesourcery.com>

@


1.1.14.6
log
@2006-03-20  Paul Brook  <paul@@codesourcery.com>

	* gas/config/tc-arm.c (insns): Correct opcodes for ldrbt and strbt.
	* gas/testsuite/gas/arm/thumb32.d: Correct expected output.
@
text
@a2 5
	* gas/config/tc-arm.c (insns): Correct opcodes for ldrbt and strbt.
	* gas/testsuite/gas/arm/thumb32.d: Correct expected output.

2006-03-20  Paul Brook  <paul@@codesourcery.com>

@


1.1.14.7
log
@bfd/
	* cpu-m68k.c (bfd_m68k_compatible): Treat ISA A+ and ISA B code as
	incompatible.  Likewise MAC and EMAC code.
	* elf32-m68k.c (elf32_m68k_merge_private_bfd_data): Use
	bfd_get_compatible to set the new bfd architecture.  Rely on it
	to detect incompatibilities.

gas/
	* config/tc-m68k.c (m68k_cpus): Change cpu_cf5208 entries to use
	mcfemac instead of mcfmac.

ld/testsuite/
	* ld-m68k/merge-error-1a.s, ld-m68k/merge-error-1b.s,
	* ld-m68k/merge-error-1a.d, ld-m68k/merge-error-1b.d,
	* ld-m68k/merge-error-1c.d, ld-m68k/merge-error-1d.d,
	* ld-m68k/merge-error-1e.d, ld-m68k/merge-ok-1a.d,
	* ld-m68k/merge-ok-1b.d: New tests.
	* ld-m68k/m68k.exp: Run them.
@
text
@a0 20
2006-03-21  Richard Sandiford  <richard@@codesourcery.com>

	* bfd/cpu-m68k.c (bfd_m68k_compatible): Treat ISA A+ and ISA B code as
	incompatible.  Likewise MAC and EMAC code.
	* bfd/elf32-m68k.c (elf32_m68k_merge_private_bfd_data): Use
	bfd_get_compatible to set the new bfd architecture.  Rely on it
	to detect incompatibilities.
	* gas/config/tc-m68k.c (m68k_cpus): Change cpu_cf5208 entries to use
	mcfemac instead of mcfmac.
	* ld/testsuite/ld-m68k/merge-error-1a.s,
	* ld/testsuite/ld-m68k/merge-error-1b.s,
	* ld/testsuite/ld-m68k/merge-error-1a.d,
	* ld/testsuite/ld-m68k/merge-error-1b.d,
	* ld/testsuite/ld-m68k/merge-error-1c.d,
	* ld/testsuite/ld-m68k/merge-error-1d.d,
	* ld/testsuite/ld-m68k/merge-error-1e.d,
	* ld/testsuite/ld-m68k/merge-ok-1a.d,
	* ld/testsuite/ld-m68k/merge-ok-1b.d: New tests.
	* ld/testsuite/ld-m68k/m68k.exp: Run them.

@


1.1.14.8
log
@	* libiberty/pex-win32.c (<errno.h>): Include.
	(fix_argv): Remove.
	(argv_to_cmdline): New function.
	(std_suffixes): New variable.
	(no_suffixes): Likewise.
	(find_executable): New function.
	(win32_spawn): Likewise.
	(spawn_script): Use win32_spawn instead of _spawnv[p].
	(pex_win32_exec_child): Replace MSVCRT calls with Win32 API calls.
	(pex_win32_wait): Likewise.
@
text
@a0 13
2006-03-20  Mark Mitchell  <mark@@codesourcery.com>

	* libiberty/pex-win32.c (<errno.h>): Include.
	(fix_argv): Remove.
	(argv_to_cmdline): New function.
	(std_suffixes): New variable.
	(no_suffixes): Likewise.
	(find_executable): New function.
	(win32_spawn): Likewise.
	(spawn_script): Use win32_spawn instead of _spawnv[p].
	(pex_win32_exec_child): Replace MSVCRT calls with Win32 API calls.
	(pex_win32_wait): Likewise.

@


1.1.14.9
log
@	* gcc/config/tc-m68k.c (m68000_control_regs, m68010_control_regs,
	m68020_control_regs, m68040_control_regs, m68060_control_regs,
	mcf_control_regs, mcf5208_control_regs, mcf5213_control_regs,
	mcf5329_control_regs, mcf5249_control_regs, mcf528x_control_regs,
	mcfv4e_control_regs, m68010_control_regs): Rename and reorder to ...
	(m68000_ctrl, m68010_ctrl, m68020_ctrl, m68040_ctrl, m68060_ctrl,
	mcf_ctrl, mcf5208_ctrl, mcf5213_ctrl, mcf5235_ctrl, mcf5249_ctrl,
	mcf5216_ctrl, mcf5250_ctrl, mcf5271_ctrl, mcf5272_ctrl,
	mcf5282_ctrl, mcfv4e_ctrl): ... these.
	(mcf5275_ctrl, mcf5329_ctrl, mcf5373_ctrl): New.
	(struct m68k_cpu): Change chip field to control_regs.
	(current_chip): Remove.
	(control_regs): New.
	(m68k_archs, m68k_extensions): Adjust.
	(m68k_cpus): Reorder to be in cpu number order.  Adjust.
	(CPU_ALLOW_MC, CPU_ALLOW_NEGATION): Remove.
	(find_cf_chip): Reimplement for new organization of cpu table.
	(select_control_regs): Remove.
	(mri_chip): Adjust.
	(struct save_opts): Save control regs, not chip.
	(s_save, s_restore): Adjust.
	(m68k_lookup_cpu): Give deprecated warning when necessary.
	(m68k_init_arch): Adjust.
	(md_show_usage): Adjust for new cpu table organization.
	* include/opcode/m68k.h (cpu_m68k, cpu_cf, cpu_m68000, cpu_m68008,
	cpu_m68010, cpu_m68020, cpu_m68ec030, cpu_m68040, cpu_m68060,
	cpu_m68851, cpu_m68881, cpu_m68882, cpu_cpu32, cpu_cf5200, cpu_cf5206e,
	cpu_cf5208, cpu_cf521x, cpu_cf5213, cpu_cf5249, cpu_cf528x,
	cpu_cf5307, cpu_cf5329, cpu_cf5407, cpu_cf547x, cpu_cf548x): Remove.
@
text
@a0 32
2006-03-21  Nathan Sidwell  <nathan@@codesourcery.com>

	* gcc/config/tc-m68k.c (m68000_control_regs, m68010_control_regs,
	m68020_control_regs, m68040_control_regs, m68060_control_regs,
	mcf_control_regs, mcf5208_control_regs, mcf5213_control_regs,
	mcf5329_control_regs, mcf5249_control_regs, mcf528x_control_regs,
	mcfv4e_control_regs, m68010_control_regs): Rename and reorder to ...
	(m68000_ctrl, m68010_ctrl, m68020_ctrl, m68040_ctrl, m68060_ctrl,
	mcf_ctrl, mcf5208_ctrl, mcf5213_ctrl, mcf5235_ctrl, mcf5249_ctrl, 
	mcf5216_ctrl, mcf5250_ctrl, mcf5271_ctrl, mcf5272_ctrl,
	mcf5282_ctrl, mcfv4e_ctrl): ... these.
	(mcf5275_ctrl, mcf5329_ctrl, mcf5373_ctrl): New.
	(struct m68k_cpu): Change chip field to control_regs.
	(current_chip): Remove.
	(control_regs): New.
	(m68k_archs, m68k_extensions): Adjust.
	(m68k_cpus): Reorder to be in cpu number order.  Adjust.
	(CPU_ALLOW_MC, CPU_ALLOW_NEGATION): Remove.
	(find_cf_chip): Reimplement for new organization of cpu table.
	(select_control_regs): Remove.
	(mri_chip): Adjust.
	(struct save_opts): Save control regs, not chip.
	(s_save, s_restore): Adjust.
	(m68k_lookup_cpu): Give deprecated warning when necessary.
	(m68k_init_arch): Adjust.
	(md_show_usage): Adjust for new cpu table organization.
	* include/opcode/m68k.h (cpu_m68k, cpu_cf, cpu_m68000, cpu_m68008,
	cpu_m68010, cpu_m68020, cpu_m68ec030, cpu_m68040, cpu_m68060,
	cpu_m68851, cpu_m68881, cpu_m68882, cpu_cpu32, cpu_cf5200, cpu_cf5206e,
	cpu_cf5208, cpu_cf521x, cpu_cf5213, cpu_cf5249, cpu_cf528x,
	cpu_cf5307, cpu_cf5329, cpu_cf5407, cpu_cf547x, cpu_cf548x): Remove.

@


1.1.14.10
log
@	* gas/config/tc-m68k.c (find_cf_chip): Merge into ...
	(m68k_ip): ... here.  Use for all chips.  Protect against buffer
	overrun and avoid excessive copying.
@
text
@a2 4
	* gas/config/tc-m68k.c (find_cf_chip): Merge into ...
	(m68k_ip): ... here.  Use for all chips.  Protect against buffer
	overrun and avoid excessive copying.

@


1.1.14.11
log
@2006-03-21  Paul Brook  <paul@@codesourcery.com>

	* gas/config/tc-arm.c (md_apply_fix): Fix typo in offset mask.
@
text
@a0 4
2006-03-21  Paul Brook  <paul@@codesourcery.com>

	* gas/config/tc-arm.c (md_apply_fix): Fix typo in offset mask.

@


1.1.14.12
log
@	* gas/config/tc-m68k.c (m68k_init_arch): Move checking of
	cfloat/m68881 to correct architecture before using it.
@
text
@a0 5
2006-03-26  Nathan Sidwell  <nathan@@codesourcery.com>

	* gas/config/tc-m68k.c (m68k_init_arch): Move checking of
	cfloat/m68881 to correct architecture before using it.

@


1.1.14.13
log
@	* libiberty/pex-win32.c (pex_win32_exec_child): Close stdout/stderr
	in parent.
@
text
@a0 5
2006-03-27  Mark Mitchell  <mark@@codesourcery.com>

	* libiberty/pex-win32.c (pex_win32_exec_child): Close stdout/stderr
	in parent.

@


1.1.14.14
log
@	* libiberty/configure.ac: Add cygpath for mingw hosts.
	* libiberty.configure: Rebuilt.
	* libiberty/Makefile.in: Add cygpath.
	* libiberty/cygpath.c: New.

	* include/libiberty.h (pex_write_input): New declaration.

	* libiberty/pex-common.c (pex_write_input): New function.
	* libiberty/pexecute.txh (pex_write_input): Document it.
	* libiberty/pex-common.h (struct pex_funcs): New function ptr fdopenw.
	* libiberty/pex-unix.c (pex_unix_fdopenw): New function.
	(funcs): List it as our fdopenw function.
	* libiberty/pex-win32.c (pex_win32_fdopenw): New function.
	(funcs): List it as our fdopenw function.
	* libiberty/pex-djgpp.c (funcs): Leave fdopenw null.
	* libiberty/pex-msdos (funcs): Same.
	* libiberty/functions.texi: Regenerated.

	* libiberty/pex-common.h (struct pex_obj): Doc fixes.

	* libiberty/functions.texi: Regenerate.
@
text
@a0 26
2006-03-30  Mark Mitchell <mark@@codesourcery.com>

	* libiberty/configure.ac: Add cygpath for mingw hosts.
	* libiberty.configure: Rebuilt.
	* libiberty/Makefile.in: Add cygpath.
	* libiberty/cygpath.c: New.

2006-03-30  Jim Blandy	<jimb@@codesourcery.com>

	* include/libiberty.h (pex_write_input): New declaration.

	* libiberty/pex-common.c (pex_write_input): New function.
	* libiberty/pexecute.txh (pex_write_input): Document it.
	* libiberty/pex-common.h (struct pex_funcs): New function ptr fdopenw.
	* libiberty/pex-unix.c (pex_unix_fdopenw): New function.
	(funcs): List it as our fdopenw function.
	* libiberty/pex-win32.c (pex_win32_fdopenw): New function.
	(funcs): List it as our fdopenw function.
	* libiberty/pex-djgpp.c (funcs): Leave fdopenw null.
	* libiberty/pex-msdos (funcs): Same.
	* libiberty/functions.texi: Regenerated.

	* libiberty/pex-common.h (struct pex_obj): Doc fixes.

	* libiberty/functions.texi: Regenerate.

@


1.1.14.15
log
@2005-04-01  Paul Brook  <paul@@codesourcery.com>

	* config/tc-arm.c (arm_fix_adjustable): Return 0 for function symbols.
@
text
@a0 4
2005-04-01  Paul Brook  <paul@@codesourcery.com>

	* config/tc-arm.c (arm_fix_adjustable): Return 0 for function symbols.

@


1.1.14.16
log
@	* binutils/readelf.c (arm_attr_tag_VFP_arch): Add VFPv3.

	* gas/config/tc-arm.c (limits.h): Include.
	(fpu_arch_vfp_v3, fpu_vfp_ext_v3, fpu_neon_ext_v1)
	(fpu_vfp_v3_or_neon_ext): Declare constants.
	(neon_el_type): New enumeration of types for Neon vector elements.
	(neon_type_el): New struct. Define type and size of a vector element.
   	(NEON_MAX_TYPE_ELS): Define constant. The maximum number of types per
	instruction.
	(neon_type): Define struct. The type of an instruction.
	(arm_it): Add 'vectype' for the current instruction.
	(isscalar, immisalign, regisimm, isquad): New predicates for operands.
	(vfp_sp_reg_pos): Rename to...
	(vfp_reg_pos): ...this, and add VFP_REG_Dd, VFP_REG_Dm, VFP_REG_Dn
	tags.
	(arm_reg_type): Add REG_TYPE_NQ (Neon Q register) and REG_TYPE_NDQ
	(Neon D or Q register).
	(reg_expected_msgs): Sync with above. Allow VFD to mean VFP or Neon
	D register.
	(GE_OPT_PREFIX_BIG): Define constant, for use in...
	(my_get_expression): Allow above constant as argument to accept
	64-bit constants with optional prefix.
	(arm_reg_parse): Add extra argument to return the specific type of
	register in when either a D or Q register (REG_TYPE_NDQ) is requested.
	Can be NULL.
	(parse_scalar): New function. Parse Neon scalar (vector reg and index).
	(parse_reg_list): Update for new arm_reg_parse args.
	(parse_vfp_reg_list): Allow parsing of Neon D/Q register lists.
	(parse_neon_el_struct_list): New function. Parse element/structure
	register lists for VLD<n>/VST<n> instructions.
	(s_arm_unwind_save_vfp): Update for new parse_vfp_reg_list args.
	(s_arm_unwind_save_mmxwr): Likewise.
	(s_arm_unwind_save_mmxwcg): Likewise.
	(s_arm_unwind_movsp): Likewise.
	(s_arm_unwind_setfp): Likewise.
	(parse_big_immediate): New function. Parse an immediate, which may
	be 64 bits wide. Put results in inst.operands[i].
	(parse_shift): Update for new arm_reg_parse args.
	(parse_address): Likewise. Add parsing of alignment specifiers.
	(parse_neon_mov): Parse the operands of a VMOV instruction.
	(operand_parse_code): Add OP_RND, OP_RNQ, OP_RNDQ, OP_RNSC,
	OP_NRDLST, OP_NSTRLST, OP_NILO, OP_RNDQ_I0, OP_RR_RNSC,
	OP_RNDQ_RNSC, OP_RND_RNSC, OP_VMOV, OP_RNDQ_IMVNb, OP_RNDQ_I63b,
	OP_I0, OP_I16z, OP_I32z, OP_I64, OP_I64z, OP_oI32b, OP_oRND,
	OP_oRNQ, OP_oRNDQ.
	(parse_operands): Handle new codes above.
	(encode_arm_vfp_sp_reg): Rename to...
	(encode_arm_vfp_reg): ...this. Handle D regs (0-31) too. Complain if
	selected VFP version only supports D0-D15.
	(do_vfp_sp_monadic, do_vfp_sp_dyadic, do_vfp_sp_compare_z)
	(do_vfp_dp_sp_cvt, do_vfp_reg_from_sp, do_vfp_reg2_from_sp2)
	(do_vfp_sp_from_reg, do_vfp_sp2_from_reg2, do_vfp_sp_ldst)
	(do_vfp_dp_ldst, vfp_sp_ldstm, vfp_dp_ldstm): Update for new
	encode_arm_vfp_reg name, and allow 32 D regs.
	(do_vfp_dp_rd_rm, do_vfp_dp_rn_rd, do_vfp_dp_rd_rn)
	(do_vfp_dp_rd_rn_rm, do_vfp_rm_rd_rn): New functions to encode VFP
	insns allowing 32 D regs.
	(do_vfp_sp_const, do_vfp_dp_const, vfp_conv, do_vfp_sp_conv_16)
	(do_vfp_dp_conv_16, do_vfp_sp_conv_32, do_vfp_dp_conv_32): Handle
	constant-load and conversion insns introduced with VFPv3.
	(neon_tab_entry): New struct.
	(NEON_ENC_TAB): Bit patterns for overloaded Neon instructions, and
	those which are the targets of pseudo-instructions.
	(neon_opc): Enumerate opcodes, use as indices into...
	(neon_enc_tab): ...this. Hold data from NEON_ENC_TAB.
	(NEON_ENC_INTEGER, NEON_ENC_ARMREG, NEON_ENC_POLY, NEON_ENC_FLOAT)
	(NEON_ENC_SCALAR, NEON_ENC_IMMED, NEON_ENC_INTERLV, NEON_ENC_LANE)
	(NEON_ENC_DUP): Define meaningful helper macros to look up values in
	neon_enc_tab.
	(neon_shape): Enumerate shapes (permitted register widths, etc.) for
	Neon instructions.
	(neon_type_mask): New. Compact type representation for type
	checking.
	(N_SU_ALL, N_SU_32, N_SU_16_64, N_SUF_32, N_I_ALL, N_IF_32): Common
	permitted type combinations.
	(N_IGNORE_TYPE): New macro.
	(neon_check_shape): New function. Check an instruction shape for
	multiple alternatives. Return the specific shape for the current
	instruction.
	(neon_modify_type_size): New function. Modify a vector type and
	size, depending on the bit mask in argument 1.
	(neon_type_promote): New function. Convert a given "key" type (of an
	operand) into the correct type for a different operand, based on a bit
	mask.
	(type_chk_of_el_type): New function. Convert a type and size into the
	compact representation used for type checking.
	(el_type_of_type_ckh): New function. Reverse of above (only when a
	single bit is set in the bit mask).
	(modify_types_allowed): New function. Alter a mask of allowed types
	based on a bit mask of modifications.
	(neon_check_type): New function. Check the type of the current
	instruction against the variable argument list. The "key" type of the
	instruction is returned.
	(neon_dp_fixup): New function. Fill in and modify instruction bits for
	a Neon data-processing instruction depending on whether we're in ARM
	mode or Thumb-2 mode.
	(neon_logbits): New function.
	(neon_three_same, neon_two_same, do_neon_dyadic_i_su)
	(do_neon_dyadic_i64_su, neon_imm_shift, do_neon_shl_imm)
	(do_neon_qshl_imm, neon_cmode_for_logic_imm)
	(neon_bits_same_in_bytes, neon_squash_bits, neon_is_quarter_float)
	(neon_qfloat_bits, neon_cmode_for_move_imm, neon_write_immbits)
	(neon_invert_size, do_neon_logic, do_neon_bitfield, neon_dyadic)
	(do_neon_dyadic_if_su, do_neon_dyadic_if_su_d, do_neon_dyadic_if_i)
	(do_neon_dyadic_if_i_d, do_neon_addsub_if_i, neon_exchange_operands)
	(neon_compare, do_neon_cmp, do_neon_cmp_inv, do_neon_ceq)
	(neon_scalar_for_mul, neon_mul_mac, do_neon_mac_maybe_scalar)
	(do_neon_tst, do_neon_mul, do_neon_qdmulh, do_neon_fcmp_absolute)
	(do_neon_fcmp_absolute_inv, do_neon_step, do_neon_abs_neg)
	(do_neon_sli, do_neon_sri, do_neon_qshlu_imm, do_neon_qmovn)
	(do_neon_qmovun, do_neon_rshift_sat_narrow)
	(do_neon_rshift_sat_narrow_u, do_neon_movn, do_neon_rshift_narrow)
	(do_neon_shll, neon_cvt_flavour, do_neon_cvt, neon_move_immediate)
	(do_neon_mvn, neon_mixed_length, do_neon_dyadic_long, do_neon_abal)
	(neon_mac_reg_scalar_long, do_neon_mac_maybe_scalar_long)
	(do_neon_dyadic_wide, do_neon_vmull, do_neon_ext, do_neon_rev)
	(do_neon_dup, do_neon_mov, do_neon_rshift_round_imm, do_neon_movl)
	(do_neon_trn, do_neon_zip_uzp, do_neon_sat_abs_neg)
	(do_neon_pair_long, do_neon_recip_est, do_neon_cls, do_neon_clz)
	(do_neon_cnt, do_neon_swp, do_neon_tbl_tbx, do_neon_ldm_stm)
	(do_neon_ldr_str, do_neon_ld_st_interleave, neon_alignment_bit)
	(do_neon_ld_st_lane, do_neon_ld_dup, do_neon_ldx_stx): New
	functions. Neon bit encoding and encoding helpers.
	(parse_neon_type): New function. Parse Neon type specifier.
	(opcode_lookup): Allow parsing of Neon type specifiers.
	(REGNUM2, REGSETH, REGSET2): New macros.
	(reg_names): Add new VFPv3 and Neon registers.
	(NUF, nUF, NCE, nCE): New macros for opcode table.
	(insns): More VFP registers allowed in fcpyd, fmdhr, fmdlr, fmrdh,
	fmrdl, fabsd, fnegd, fsqrtd, faddd, fsubd, fmuld, fdivd, fmacd,
	fmscd, fnmuld, fnmacd, fnmscd, fcmpd, fcmpzd, fcmped, fcmpezd,
	fmdrr, fmrrd. Add Neon instructions vaba, vhadd, vrhadd, vhsub,
	vqadd, vqsub, vrshl, vqrshl, vshl, vqshl{u}, vand, vbic, vorr, vorn,
	veor, vbsl, vbit, vbif, vabd, vmax, vmin, vcge, vcgt, vclt, vcle,
	vceq, vpmax, vpmin, vmla, vmls, vpadd, vadd, vsub, vtst, vmul,
	vqdmulh, vqrdmulh, vacge, vacgt, vaclt, vacle, vrecps, vrsqrts,
	vabs, vneg, v{r}shr,  v{r}sra, vsli, vsri, vqshrn, vq{r}shr{u}n,
	v{r}shrn, vshll, vcvt, vmov, vmvn, vabal, vabdl, vaddl, vsubl,
	vmlal, vmlsl, vaddw, vsubw, v{r}addhn, v{r}subhn, vqdmlal, vqdmlsl,
	vqdmull, vmull, vext, vrev64, vrev32, vrev16, vdup, vmovl, v{q}movn,
	vzip, vuzp, vqabs, vqneg, vpadal, vpaddl, vrecpe, vrsqrte, vcls,
	vclz, vcnt, vswp, vtrn, vtbl, vtbx, vldm, vstm, vldr, vstr,
	vld[1234], vst[1234], fconst[sd], f[us][lh]to[sd], fto[us][lh][sd].
	(tc_arm_regname_to_dw2regnum): Update for arm_reg_parse args.
	(arm_cpu_option_table): Add Neon and VFPv3 to Cortex-A8.
	(arm_option_cpu_value): Add vfp3 and neon.
	(aeabi_set_public_attributes): Support VFPv3 and NEON attributes.
	Fix VFPv1 attribute.

	* gas/testsuite/gas/arm/copro.s: Avoid ldcl which encodes as a bad Neon
	instruction.
	* gas/testsuite/gas/arm/copro.d: Update accordingly.
	* gas/testsuite/gas/arm/neon-cond.s: New test. Conditional Neon opcodes
	in ARM mode.
	* gas/testsuite/gas/arm/neon-cond.d: Expected results of above.
	* gas/testsuite/gas/arm/neon-cov.s: New test. Coverage of Neon
	instructions.
	* gas/testsuite/gas/arm/neon-cov.d: Expected results of above.
	* gas/testsuite/gas/arm/neon-ldst-es.s: New test. Element and structure
	loads and stores.
	* gas/testsuite/gas/arm/neon-ldst-es.d: Expected results of above.
	* gas/testsuite/gas/arm/neon-ldst-rm.s: New test. Single and multiple
	register loads and stores.
	* gas/testsuite/gas/arm/neon-ldst-rm.d: Expected results of above.
	* gas/testsuite/gas/arm/neon-omit.s: New test. Omission of optional
	operands.
	* gas/testsuite/gas/arm/neon-omit.d: Expected results of above.
	* gas/testsuite/gas/arm/vfp1.d: Expect Neon syntax for some VFP
	instructions.
	* gas/testsuite/gas/arm/vfp1_t2.d: Likewise.
	* gas/testsuite/gas/arm/vfp1xD.d: Likewise.
	* gas/testsuite/gas/arm/vfp1xD_t2.d: Likewise.
	* gas/testsuite/gas/arm/vfp2.d: Likewise.
	* gas/testsuite/gas/arm/vfp2_t2.d: Likewise.
	* gas/testsuite/gas/arm/vfp3-32drs.s: New test. Extended D register
	range for VFP instructions.
	* gas/testsuite/gas/arm/vfp3-32drs.d: Expected results of above.
	* gas/testsuite/gas/arm/vfp3-const-conv.s: New test. VFPv3
	constant-load and conversion instructions.
	* gas/testsuite/gas/arm/vfp3-const-conv.d: Expected results of above.

	* include/opcode/arm.h (FPU_VFP_EXT_V3): Define constant.
	(FPU_NEON_EXT_V1): Likewise.
	(FPU_VFP_HARD): Update.
	(FPU_VFP_V3): Define macro.
	(FPU_ARCH_VFP_V3, FPU_ARCH_VFP_V3_PLUS_NEON_V1): Define macros.

	* opcodes/arm-dis.c (coprocessor_opcodes): Add %A, %B, %k,
	convert %<code>[zy] into %[zy]<code>.  Expand meaning of
	%<bitfield>['`?].
	Add unified load/store instruction names.
	(neon_opcode_table): New.
	(arm_opcodes): Expand meaning of %<bitfield>['`?].
	(arm_decode_bitfield): New.
	(print_insn_coprocessor): Add pc argument. Add %A & %B specifiers.
	Use arm_decode_bitfield and adjust numeric specifiers.
	Adjust %z & %y.
	(print_insn_neon): New.
	(print_insn_arm): Adjust print_insn_coprocessor call. Call
	print_insn_neon. Use arm_decode_bitfield and adjust numeric specifiers.
	(print_insn_thumb32): Likewise.
@
text
@a0 205
2005-04-03  Julian Brown  <julian@@codesourcery.com>
	    Nathan Sidwell  <nathan@@codesourcery.com>

	* binutils/readelf.c (arm_attr_tag_VFP_arch): Add VFPv3.
    
	* gas/config/tc-arm.c (limits.h): Include.
	(fpu_arch_vfp_v3, fpu_vfp_ext_v3, fpu_neon_ext_v1)
	(fpu_vfp_v3_or_neon_ext): Declare constants.
	(neon_el_type): New enumeration of types for Neon vector elements.
	(neon_type_el): New struct. Define type and size of a vector element.
   	(NEON_MAX_TYPE_ELS): Define constant. The maximum number of types per
	instruction.
	(neon_type): Define struct. The type of an instruction.
	(arm_it): Add 'vectype' for the current instruction.
	(isscalar, immisalign, regisimm, isquad): New predicates for operands.
	(vfp_sp_reg_pos): Rename to...
	(vfp_reg_pos): ...this, and add VFP_REG_Dd, VFP_REG_Dm, VFP_REG_Dn
	tags.
	(arm_reg_type): Add REG_TYPE_NQ (Neon Q register) and REG_TYPE_NDQ
	(Neon D or Q register).
	(reg_expected_msgs): Sync with above. Allow VFD to mean VFP or Neon
	D register.
	(GE_OPT_PREFIX_BIG): Define constant, for use in...
	(my_get_expression): Allow above constant as argument to accept
	64-bit constants with optional prefix.
	(arm_reg_parse): Add extra argument to return the specific type of
	register in when either a D or Q register (REG_TYPE_NDQ) is requested.
	Can be NULL.
	(parse_scalar): New function. Parse Neon scalar (vector reg and index).
	(parse_reg_list): Update for new arm_reg_parse args.
	(parse_vfp_reg_list): Allow parsing of Neon D/Q register lists.
	(parse_neon_el_struct_list): New function. Parse element/structure
	register lists for VLD<n>/VST<n> instructions.
	(s_arm_unwind_save_vfp): Update for new parse_vfp_reg_list args.
	(s_arm_unwind_save_mmxwr): Likewise.
	(s_arm_unwind_save_mmxwcg): Likewise.
	(s_arm_unwind_movsp): Likewise.
	(s_arm_unwind_setfp): Likewise.
	(parse_big_immediate): New function. Parse an immediate, which may
	be 64 bits wide. Put results in inst.operands[i].
	(parse_shift): Update for new arm_reg_parse args.
	(parse_address): Likewise. Add parsing of alignment specifiers.
	(parse_neon_mov): Parse the operands of a VMOV instruction.
	(operand_parse_code): Add OP_RND, OP_RNQ, OP_RNDQ, OP_RNSC,
	OP_NRDLST, OP_NSTRLST, OP_NILO, OP_RNDQ_I0, OP_RR_RNSC,
	OP_RNDQ_RNSC, OP_RND_RNSC, OP_VMOV, OP_RNDQ_IMVNb, OP_RNDQ_I63b,
	OP_I0, OP_I16z, OP_I32z, OP_I64, OP_I64z, OP_oI32b, OP_oRND,
	OP_oRNQ, OP_oRNDQ.
	(parse_operands): Handle new codes above.
	(encode_arm_vfp_sp_reg): Rename to...
	(encode_arm_vfp_reg): ...this. Handle D regs (0-31) too. Complain if
	selected VFP version only supports D0-D15.
	(do_vfp_sp_monadic, do_vfp_sp_dyadic, do_vfp_sp_compare_z)
	(do_vfp_dp_sp_cvt, do_vfp_reg_from_sp, do_vfp_reg2_from_sp2)
	(do_vfp_sp_from_reg, do_vfp_sp2_from_reg2, do_vfp_sp_ldst)
	(do_vfp_dp_ldst, vfp_sp_ldstm, vfp_dp_ldstm): Update for new
	encode_arm_vfp_reg name, and allow 32 D regs.
	(do_vfp_dp_rd_rm, do_vfp_dp_rn_rd, do_vfp_dp_rd_rn)
	(do_vfp_dp_rd_rn_rm, do_vfp_rm_rd_rn): New functions to encode VFP
	insns allowing 32 D regs.
	(do_vfp_sp_const, do_vfp_dp_const, vfp_conv, do_vfp_sp_conv_16)
	(do_vfp_dp_conv_16, do_vfp_sp_conv_32, do_vfp_dp_conv_32): Handle
	constant-load and conversion insns introduced with VFPv3.
	(neon_tab_entry): New struct.
	(NEON_ENC_TAB): Bit patterns for overloaded Neon instructions, and
	those which are the targets of pseudo-instructions.
	(neon_opc): Enumerate opcodes, use as indices into...
	(neon_enc_tab): ...this. Hold data from NEON_ENC_TAB.
	(NEON_ENC_INTEGER, NEON_ENC_ARMREG, NEON_ENC_POLY, NEON_ENC_FLOAT)
	(NEON_ENC_SCALAR, NEON_ENC_IMMED, NEON_ENC_INTERLV, NEON_ENC_LANE)
	(NEON_ENC_DUP): Define meaningful helper macros to look up values in
	neon_enc_tab.
	(neon_shape): Enumerate shapes (permitted register widths, etc.) for
	Neon instructions.
	(neon_type_mask): New. Compact type representation for type
	checking.
	(N_SU_ALL, N_SU_32, N_SU_16_64, N_SUF_32, N_I_ALL, N_IF_32): Common
	permitted type combinations.
	(N_IGNORE_TYPE): New macro.
	(neon_check_shape): New function. Check an instruction shape for
	multiple alternatives. Return the specific shape for the current
	instruction.
	(neon_modify_type_size): New function. Modify a vector type and
	size, depending on the bit mask in argument 1.
	(neon_type_promote): New function. Convert a given "key" type (of an
	operand) into the correct type for a different operand, based on a bit
	mask.
	(type_chk_of_el_type): New function. Convert a type and size into the
	compact representation used for type checking.
	(el_type_of_type_ckh): New function. Reverse of above (only when a
	single bit is set in the bit mask).
	(modify_types_allowed): New function. Alter a mask of allowed types
	based on a bit mask of modifications.
	(neon_check_type): New function. Check the type of the current
	instruction against the variable argument list. The "key" type of the
	instruction is returned.
	(neon_dp_fixup): New function. Fill in and modify instruction bits for
	a Neon data-processing instruction depending on whether we're in ARM
	mode or Thumb-2 mode.
	(neon_logbits): New function.
	(neon_three_same, neon_two_same, do_neon_dyadic_i_su)
	(do_neon_dyadic_i64_su, neon_imm_shift, do_neon_shl_imm)
	(do_neon_qshl_imm, neon_cmode_for_logic_imm)
	(neon_bits_same_in_bytes, neon_squash_bits, neon_is_quarter_float)
	(neon_qfloat_bits, neon_cmode_for_move_imm, neon_write_immbits)
	(neon_invert_size, do_neon_logic, do_neon_bitfield, neon_dyadic)
	(do_neon_dyadic_if_su, do_neon_dyadic_if_su_d, do_neon_dyadic_if_i)
	(do_neon_dyadic_if_i_d, do_neon_addsub_if_i, neon_exchange_operands)
	(neon_compare, do_neon_cmp, do_neon_cmp_inv, do_neon_ceq)
	(neon_scalar_for_mul, neon_mul_mac, do_neon_mac_maybe_scalar)
	(do_neon_tst, do_neon_mul, do_neon_qdmulh, do_neon_fcmp_absolute)
	(do_neon_fcmp_absolute_inv, do_neon_step, do_neon_abs_neg)
	(do_neon_sli, do_neon_sri, do_neon_qshlu_imm, do_neon_qmovn)
	(do_neon_qmovun, do_neon_rshift_sat_narrow)
	(do_neon_rshift_sat_narrow_u, do_neon_movn, do_neon_rshift_narrow)
	(do_neon_shll, neon_cvt_flavour, do_neon_cvt, neon_move_immediate)
	(do_neon_mvn, neon_mixed_length, do_neon_dyadic_long, do_neon_abal)
	(neon_mac_reg_scalar_long, do_neon_mac_maybe_scalar_long)
	(do_neon_dyadic_wide, do_neon_vmull, do_neon_ext, do_neon_rev)
	(do_neon_dup, do_neon_mov, do_neon_rshift_round_imm, do_neon_movl)
	(do_neon_trn, do_neon_zip_uzp, do_neon_sat_abs_neg)
	(do_neon_pair_long, do_neon_recip_est, do_neon_cls, do_neon_clz)
	(do_neon_cnt, do_neon_swp, do_neon_tbl_tbx, do_neon_ldm_stm)
	(do_neon_ldr_str, do_neon_ld_st_interleave, neon_alignment_bit)
	(do_neon_ld_st_lane, do_neon_ld_dup, do_neon_ldx_stx): New
	functions. Neon bit encoding and encoding helpers.
	(parse_neon_type): New function. Parse Neon type specifier.
	(opcode_lookup): Allow parsing of Neon type specifiers.
	(REGNUM2, REGSETH, REGSET2): New macros.
	(reg_names): Add new VFPv3 and Neon registers.
	(NUF, nUF, NCE, nCE): New macros for opcode table.
	(insns): More VFP registers allowed in fcpyd, fmdhr, fmdlr, fmrdh,
	fmrdl, fabsd, fnegd, fsqrtd, faddd, fsubd, fmuld, fdivd, fmacd,
	fmscd, fnmuld, fnmacd, fnmscd, fcmpd, fcmpzd, fcmped, fcmpezd,
	fmdrr, fmrrd. Add Neon instructions vaba, vhadd, vrhadd, vhsub,
	vqadd, vqsub, vrshl, vqrshl, vshl, vqshl{u}, vand, vbic, vorr, vorn,
	veor, vbsl, vbit, vbif, vabd, vmax, vmin, vcge, vcgt, vclt, vcle,
	vceq, vpmax, vpmin, vmla, vmls, vpadd, vadd, vsub, vtst, vmul,
	vqdmulh, vqrdmulh, vacge, vacgt, vaclt, vacle, vrecps, vrsqrts,
	vabs, vneg, v{r}shr,  v{r}sra, vsli, vsri, vqshrn, vq{r}shr{u}n,
	v{r}shrn, vshll, vcvt, vmov, vmvn, vabal, vabdl, vaddl, vsubl,
	vmlal, vmlsl, vaddw, vsubw, v{r}addhn, v{r}subhn, vqdmlal, vqdmlsl,
	vqdmull, vmull, vext, vrev64, vrev32, vrev16, vdup, vmovl, v{q}movn,
	vzip, vuzp, vqabs, vqneg, vpadal, vpaddl, vrecpe, vrsqrte, vcls,
	vclz, vcnt, vswp, vtrn, vtbl, vtbx, vldm, vstm, vldr, vstr,
	vld[1234], vst[1234], fconst[sd], f[us][lh]to[sd], fto[us][lh][sd].
	(tc_arm_regname_to_dw2regnum): Update for arm_reg_parse args.
	(arm_cpu_option_table): Add Neon and VFPv3 to Cortex-A8.
	(arm_option_cpu_value): Add vfp3 and neon.
	(aeabi_set_public_attributes): Support VFPv3 and NEON attributes.
	Fix VFPv1 attribute.

	* gas/testsuite/gas/arm/copro.s: Avoid ldcl which encodes as a bad Neon
	instruction.
	* gas/testsuite/gas/arm/copro.d: Update accordingly.
	* gas/testsuite/gas/arm/neon-cond.s: New test. Conditional Neon opcodes
	in ARM mode.
	* gas/testsuite/gas/arm/neon-cond.d: Expected results of above.
	* gas/testsuite/gas/arm/neon-cov.s: New test. Coverage of Neon
	instructions.
	* gas/testsuite/gas/arm/neon-cov.d: Expected results of above.
	* gas/testsuite/gas/arm/neon-ldst-es.s: New test. Element and structure
	loads and stores.
	* gas/testsuite/gas/arm/neon-ldst-es.d: Expected results of above.
	* gas/testsuite/gas/arm/neon-ldst-rm.s: New test. Single and multiple
	register loads and stores.
	* gas/testsuite/gas/arm/neon-ldst-rm.d: Expected results of above.
	* gas/testsuite/gas/arm/neon-omit.s: New test. Omission of optional
	operands.
	* gas/testsuite/gas/arm/neon-omit.d: Expected results of above.
	* gas/testsuite/gas/arm/vfp1.d: Expect Neon syntax for some VFP
	instructions.
	* gas/testsuite/gas/arm/vfp1_t2.d: Likewise.
	* gas/testsuite/gas/arm/vfp1xD.d: Likewise.
	* gas/testsuite/gas/arm/vfp1xD_t2.d: Likewise.
	* gas/testsuite/gas/arm/vfp2.d: Likewise.
	* gas/testsuite/gas/arm/vfp2_t2.d: Likewise.
	* gas/testsuite/gas/arm/vfp3-32drs.s: New test. Extended D register
	range for VFP instructions.
	* gas/testsuite/gas/arm/vfp3-32drs.d: Expected results of above.
	* gas/testsuite/gas/arm/vfp3-const-conv.s: New test. VFPv3
	constant-load and conversion instructions.
	* gas/testsuite/gas/arm/vfp3-const-conv.d: Expected results of above.

	* include/opcode/arm.h (FPU_VFP_EXT_V3): Define constant.
	(FPU_NEON_EXT_V1): Likewise.
	(FPU_VFP_HARD): Update.
	(FPU_VFP_V3): Define macro.
	(FPU_ARCH_VFP_V3, FPU_ARCH_VFP_V3_PLUS_NEON_V1): Define macros.

	* opcodes/arm-dis.c (coprocessor_opcodes): Add %A, %B, %k,
	convert %<code>[zy] into %[zy]<code>.  Expand meaning of
	%<bitfield>['`?].
	Add unified load/store instruction names.
	(neon_opcode_table): New.
	(arm_opcodes): Expand meaning of %<bitfield>['`?].
	(arm_decode_bitfield): New.
	(print_insn_coprocessor): Add pc argument. Add %A & %B specifiers.
	Use arm_decode_bitfield and adjust numeric specifiers.
	Adjust %z & %y.
	(print_insn_neon): New.
	(print_insn_arm): Adjust print_insn_coprocessor call. Call
	print_insn_neon. Use arm_decode_bitfield and adjust numeric specifiers.
	(print_insn_thumb32): Likewise.

@


1.1.14.17
log
@
2006-04-03  Carlos O'Donell <carlos@@codesourcery.com>

	* Makefile.tpl: Add install-html target.
	* Makefile.def: Add install-html target.
	* Makefile.in: Regenerate.
	* configure.in: Add --with-datarootdir, --with-docdir,
	and --with-htmldir options.
	* configure: Regenerate.
	* opcodes/Makefile.am: Add install-html target.
	* opcodes/Makefile.in: Regenerate.
	* libiberty/Makefile.in: Add install-html, install-html-am, and
	install-html-recursive targets. Define mkdir_p and
	NORMAL_INSTALL.
	* libiberty/configure.ac: AC_SUBST datarootdir, docdir, htmldir.
	* libiberty/configure: Regenerate.
	* libiberty/testsuite/Makefile.in: Add install-html and html targets.
	* ld/Makefile.am: Add install-html, install-html-am, and
	install-html-recursive targets.
	* ld/Makefile.in: Regenerate.
	* ld/configure.in: AC_SUBST datarootdir, docdir, htmldir.
	* ld/configure: Regenerate.
	* ld/po/Make-in: Add install-html target.
	* intl/Makefile.in: Add html info and dvi and install-html to .PHONY
	Add install-html target.
	* gprof/po/Make-in: Add install-html target.
	* gprof/Makefile.am: Add install-html, install-html-am and
	install-html-recursive targets.
	* gprof/Makefile.in: Regenerate.
	* gprof/configure.in: AC_SUBST datarootdir, docdir, htmldir.
	* gprof/configure: Regenerate.
	* gas/po/Make-in: Add install-html target.
	* gas/Makefile.am: Add install-html and install-html-recursive targets.
	* gas/Makefile.in: Regenerate.
	* gas/configure.in: AC_SUBST datarootdir, docdir, htmldir.
	* gas/configure: Regenerate.
	* gas/doc/Makefile.am: Add install-html and install-html-am targets.
	* gas/doc/Makefile.in: Regenerate.
	* binutils/po/Make-in: Add install-html target.
	* binutils/Makefile.am: Add install-html and install-html-recursive targets.
	* binutils/Makefile.in: Regenerate.
	* binutils/configure.in: AC_SUBST datarootdir, docdir and htmldir.
	* binutils/configure: Regenerate.
	* binutils/doc/Makefile.am: Add install-html and install-html-am targets.
	* binutils/doc/Makefile.in: Regenerate.
	* bfd/po/Make-in: Add install-html target.
	* bfd/Makefile.am: Rename docdir to bfddocdir. Add datarootdir, docdir
	htmldir. Add install-html and install-html-recursive targets.
	* bfd/Makefile.in: Regenerate.
	* bfd/configure.in: AC_SUBST for datarootdir, docdir and htmldir.
	* bfd/configure: Regenerate.
	* bfd/doc/Makefile.am: Add install-html and install-html-am targets.
	Define datarootdir, docdir and htmldir.
	* bfd/doc/Makefile.in: Regenerate.
	* etc/Makefile.in: Add install-html target. Add htmldir,
	docdir and datarootdir.
	* etc/configure.texi: Document install-html target.
	* etc/configure.in: AC_SUBST datarootdir, docdir, htmldir.
	* etc/configure: Regenerate.
@
text
@a0 59
2006-04-03  Carlos O'Donell <carlos@@codesourcery.com>

	* Makefile.tpl: Add install-html target.
	* Makefile.def: Add install-html target.
	* Makefile.in: Regenerate.
	* configure.in: Add --with-datarootdir, --with-docdir,
	and --with-htmldir options.
	* configure: Regenerate.
	* opcodes/Makefile.am: Add install-html target.
	* opcodes/Makefile.in: Regenerate.
	* libiberty/Makefile.in: Add install-html, install-html-am, and
	install-html-recursive targets. Define mkdir_p and 
	NORMAL_INSTALL. 
	* libiberty/configure.ac: AC_SUBST datarootdir, docdir, htmldir.
	* libiberty/configure: Regenerate.
	* libiberty/testsuite/Makefile.in: Add install-html and html targets.
	* ld/Makefile.am: Add install-html, install-html-am, and
	install-html-recursive targets.
	* ld/Makefile.in: Regenerate.
	* ld/configure.in: AC_SUBST datarootdir, docdir, htmldir.
	* ld/configure: Regenerate.
	* ld/po/Make-in: Add install-html target.
	* intl/Makefile.in: Add html info and dvi and install-html to .PHONY
	Add install-html target.
	* gprof/po/Make-in: Add install-html target.
	* gprof/Makefile.am: Add install-html, install-html-am and 
	install-html-recursive targets. 
	* gprof/Makefile.in: Regenerate.
	* gprof/configure.in: AC_SUBST datarootdir, docdir, htmldir.
	* gprof/configure: Regenerate.
	* gas/po/Make-in: Add install-html target.
	* gas/Makefile.am: Add install-html and install-html-recursive targets.
	* gas/Makefile.in: Regenerate.
	* gas/configure.in: AC_SUBST datarootdir, docdir, htmldir.
	* gas/configure: Regenerate.
	* gas/doc/Makefile.am: Add install-html and install-html-am targets.
	* gas/doc/Makefile.in: Regenerate.
	* binutils/po/Make-in: Add install-html target.
	* binutils/Makefile.am: Add install-html and install-html-recursive targets.
	* binutils/Makefile.in: Regenerate.
	* binutils/configure.in: AC_SUBST datarootdir, docdir and htmldir.
	* binutils/configure: Regenerate.
	* binutils/doc/Makefile.am: Add install-html and install-html-am targets.
	* binutils/doc/Makefile.in: Regenerate.
	* bfd/po/Make-in: Add install-html target.
	* bfd/Makefile.am: Rename docdir to bfddocdir. Add datarootdir, docdir
	htmldir. Add install-html and install-html-recursive targets.
	* bfd/Makefile.in: Regenerate.
	* bfd/configure.in: AC_SUBST for datarootdir, docdir and htmldir.
	* bfd/configure: Regenerate.
	* bfd/doc/Makefile.am: Add install-html and install-html-am targets. 
	Define datarootdir, docdir and htmldir.
	* bfd/doc/Makefile.in: Regenerate.
	* etc/Makefile.in: Add install-html target. Add htmldir,
	docdir and datarootdir.
	* etc/configure.texi: Document install-html target.
	* etc/configure.in: AC_SUBST datarootdir, docdir, htmldir.
	* etc/configure: Regenerate.

@


1.1.14.18
log
@
	* gas/config/tc-arm.c (neon_el_type): Make NT_invtype be the zero (so
	zero-initialising structures containing it will lead to invalid
	types).
	(arm_it): Add vectype to each operand.
	(NTA_HASTYPE, NTA_HASINDEX): Constants used in neon_typed_alias
	defined field.
	(neon_typed_alias): New structure. Extra information for typed
	register aliases.
	(reg_entry): Add neon type info field.
	(arm_reg_parse): Remove RTYPE argument (revert to previous arguments).
	Break out alternative syntax for coprocessor registers, etc. into...
	(arm_reg_alt_syntax): New function. Alternate syntax handling broken
	out from arm_reg_parse.
	(parse_neon_type): Move. Return SUCCESS/FAIL.
	(first_error): New function. Call to ensure first error which occurs
	is reported.
	(parse_neon_operand_type): Parse exactly one type.
	(NEON_ALL_LANES, NEON_INTERLEAVE_LANES): Move.
	(parse_typed_reg_or_scalar): New function. Handle core of both
	arm_typed_reg_parse and parse_scalar.
	(arm_typed_reg_parse): Parse a register with an optional type.
	(NEON_SCALAR_REG, NEON_SCALAR_INDEX): Extract parts of parse_scalar
	result.
	(parse_scalar): Parse a Neon scalar with optional type.
	(parse_reg_list): Use first_error.
	(parse_vfp_reg_list): Use arm_typed_reg_parse instead of arm_reg_parse.
	(neon_alias_types_same): New function. Return true if two (alias) types
	are the same.
	(parse_neon_el_struct_list): Use parse_typed_reg_or_scalar. Return type
	of elements.
	(insert_reg_alias): Return new reg_entry not void.
	(insert_neon_reg_alias): New function. Insert type/index information as
	well as register for alias.
	(create_neon_reg_alias): New function. Parse .dn/.qn directives and
	make typed register aliases accordingly.
	(s_dn, s_qn): New functions. Handle incorrectly used .dn/.qn at start
	of line.
	(s_unreq): Delete type information if present.
	(s_arm_unwind_save_mmxwr): Remove arg 3 from arm_reg_parse calls.
	(s_arm_unwind_save_mmxwcg): Likewise.
	(s_arm_unwind_movsp): Likewise.
	(s_arm_unwind_setfp): Likewise.
	(parse_shift): Likewise.
	(parse_shifter_operand): Likewise.
	(parse_address): Likewise.
	(parse_tb): Likewise.
	(tc_arm_regname_to_dw2regnum): Likewise.
	(md_pseudo_table): Add dn, qn.
	(parse_neon_mov): Handle typed operands.
	(parse_operands): Likewise.
	(neon_type_mask): Add N_SIZ.
	(N_ALLMODS): New macro.
	(neon_check_shape): Fix typo in NS_DDD_QQQ case. Use first_error.
	(el_type_of_type_chk): Add some safeguards.
	(modify_types_allowed): Fix logic bug.
	(neon_check_type): Handle operands with types.
	(neon_three_same): Remove redundant optional arg handling.
	(do_neon_dyadic_i64_su, do_neon_shl_imm, do_neon_qshl_imm)
	(do_neon_logic, do_neon_qdmulh, do_neon_fcmp_absolute)
	(do_neon_step): Adjust accordingly.
	(neon_cmode_for_logic_imm): Use first_error.
	(do_neon_bitfield): Call neon_check_type.
	(neon_dyadic): Rename to...
	(neon_dyadic_misc): ...this. New name for neon_dyadic. Add bitfield to
	allow modification of type of the destination.
	(do_neon_dyadic_if_su, do_neon_dyadic_if_i, do_neon_dyadic_if_i_d)
	(do_neon_addsub_if_i, do_neon_mul): Adjust accordingly.
	(do_neon_compare): Make destination be an untyped bitfield.
	(neon_scalar_for_mul): Use NEON_SCALAR_REG, NEON_SCALAR_INDEX.
	(neon_mul_mac): Return early in case of errors.
	(neon_move_immediate): Use first_error.
	(neon_mac_reg_scalar_long): Fix type to include scalar.
	(do_neon_dup): Likewise.
	(do_neon_mov): Likewise (in several places).
	(do_neon_tbl_tbx): Fix type.
	(do_neon_ld_st_interleave, neon_alignment_bit, do_neon_ld_st_lane)
	(do_neon_ld_dup): Exit early in case of errors and/or use first_error.
	(opcode_lookup): Update for parse_neon_type returning SUCCESS/FAIL.
	Handle .dn/.qn directives.
	(REGDEF): Add zero for reg_entry neon field.

	* gas/testsuite/gas/arm/neon-psyn.s: Basic test of programmers syntax.
	* gas/testsuite/gas/arm/neon-psyn.d: Expected output of above.
@
text
@a0 86
2006-04-07  Julian Brown  <julian@@codesourcery.com>

	* gas/config/tc-arm.c (neon_el_type): Make NT_invtype be the zero (so
	zero-initialising structures containing it will lead to invalid
	types).
	(arm_it): Add vectype to each operand.
	(NTA_HASTYPE, NTA_HASINDEX): Constants used in neon_typed_alias
	defined field.
	(neon_typed_alias): New structure. Extra information for typed
	register aliases.
	(reg_entry): Add neon type info field.
	(arm_reg_parse): Remove RTYPE argument (revert to previous arguments).
	Break out alternative syntax for coprocessor registers, etc. into...
	(arm_reg_alt_syntax): New function. Alternate syntax handling broken
	out from arm_reg_parse.
	(parse_neon_type): Move. Return SUCCESS/FAIL.
	(first_error): New function. Call to ensure first error which occurs
	is reported.
	(parse_neon_operand_type): Parse exactly one type.
	(NEON_ALL_LANES, NEON_INTERLEAVE_LANES): Move.
	(parse_typed_reg_or_scalar): New function. Handle core of both
	arm_typed_reg_parse and parse_scalar.
	(arm_typed_reg_parse): Parse a register with an optional type.
	(NEON_SCALAR_REG, NEON_SCALAR_INDEX): Extract parts of parse_scalar
	result.
	(parse_scalar): Parse a Neon scalar with optional type.
	(parse_reg_list): Use first_error.
	(parse_vfp_reg_list): Use arm_typed_reg_parse instead of arm_reg_parse.
	(neon_alias_types_same): New function. Return true if two (alias) types
	are the same.
	(parse_neon_el_struct_list): Use parse_typed_reg_or_scalar. Return type
	of elements.
	(insert_reg_alias): Return new reg_entry not void.
	(insert_neon_reg_alias): New function. Insert type/index information as
	well as register for alias.
	(create_neon_reg_alias): New function. Parse .dn/.qn directives and
	make typed register aliases accordingly.
	(s_dn, s_qn): New functions. Handle incorrectly used .dn/.qn at start
	of line.
	(s_unreq): Delete type information if present.
	(s_arm_unwind_save_mmxwr): Remove arg 3 from arm_reg_parse calls.
	(s_arm_unwind_save_mmxwcg): Likewise.
	(s_arm_unwind_movsp): Likewise.
	(s_arm_unwind_setfp): Likewise.
	(parse_shift): Likewise.
	(parse_shifter_operand): Likewise.
	(parse_address): Likewise.
	(parse_tb): Likewise.
	(tc_arm_regname_to_dw2regnum): Likewise.
	(md_pseudo_table): Add dn, qn.
	(parse_neon_mov): Handle typed operands.
	(parse_operands): Likewise.
	(neon_type_mask): Add N_SIZ.
	(N_ALLMODS): New macro.
	(neon_check_shape): Fix typo in NS_DDD_QQQ case. Use first_error.
	(el_type_of_type_chk): Add some safeguards.
	(modify_types_allowed): Fix logic bug.
	(neon_check_type): Handle operands with types.
	(neon_three_same): Remove redundant optional arg handling.
	(do_neon_dyadic_i64_su, do_neon_shl_imm, do_neon_qshl_imm)
	(do_neon_logic, do_neon_qdmulh, do_neon_fcmp_absolute)
	(do_neon_step): Adjust accordingly.
	(neon_cmode_for_logic_imm): Use first_error.
	(do_neon_bitfield): Call neon_check_type.
	(neon_dyadic): Rename to...
	(neon_dyadic_misc): ...this. New name for neon_dyadic. Add bitfield to
	allow modification of type of the destination.
	(do_neon_dyadic_if_su, do_neon_dyadic_if_i, do_neon_dyadic_if_i_d)
	(do_neon_addsub_if_i, do_neon_mul): Adjust accordingly.
	(do_neon_compare): Make destination be an untyped bitfield.
	(neon_scalar_for_mul): Use NEON_SCALAR_REG, NEON_SCALAR_INDEX.
	(neon_mul_mac): Return early in case of errors.
	(neon_move_immediate): Use first_error.
	(neon_mac_reg_scalar_long): Fix type to include scalar.
	(do_neon_dup): Likewise.
	(do_neon_mov): Likewise (in several places).
	(do_neon_tbl_tbx): Fix type.
	(do_neon_ld_st_interleave, neon_alignment_bit, do_neon_ld_st_lane)
	(do_neon_ld_dup): Exit early in case of errors and/or use first_error.
	(opcode_lookup): Update for parse_neon_type returning SUCCESS/FAIL.
	Handle .dn/.qn directives.
	(REGDEF): Add zero for reg_entry neon field.

	* gas/testsuite/gas/arm/neon-psyn.s: Basic test of programmers syntax.
	* gas/testsuite/gas/arm/neon-psyn.d: Expected output of above.

@


1.1.14.19
log
@
2006-04-12  Carlos O'Donell  <carlos@@codesourcery.com>

	* Makefile.tpl: Add install-html to install target deps.
	* Makefile.in: Regenerate.
@
text
@a0 5
2006-04-10  Carlos O'Donell  <carlos@@codesourcery.com>

	* Makefile.tpl: Add install-html to install target deps.
	* Makefile.in: Regenerate.

d87 1
a87 1
2006-04-03  Carlos O'Donell  <carlos@@codesourcery.com>
@


1.1.14.20
log
@
Correct ChangeLog.csl date typo.
@
text
@d1 1
a1 1
2006-04-12  Carlos O'Donell  <carlos@@codesourcery.com>
@


1.1.14.21
log
@	* libiberty/floatformat.c (floatformat_to_double): Fix (biased)
	exponent=0 case.
@
text
@a0 5
2006-04-24  Julian Brown  <julian@@codesourcery.com>

	* libiberty/floatformat.c (floatformat_to_double): Fix (biased)
	exponent=0 case.

@


1.1.14.22
log
@	* gas/config/tc-arm.c (neon_is_quarter_float): Move, and rename to...
	(is_quarter_float): Rename from above. Simplify slightly.
	(parse_qfloat_immediate): Parse a "quarter precision" floating-point
	number.
	(parse_neon_mov): Parse floating-point constants.
	(neon_qfloat_bits): Fix encoding.
	(neon_cmode_for_move_imm): Tweak to use floating-point encoding in
	preference to integer encoding when using the F32 type.

   	* gas/testsuite/gas/arm/neon-const.s: New testcase. Neon floating-point
	constants.
	* gas/testsuite/gas/arm/neon-const.d: Expected output of above.
	* gas/testsuite/gas/arm/neon-cov.d: Expect floating-point disassembly
	for VMOV.F32.

   	* opcodes/arm-dis.c (print_insn_neon): Disassemble floating-point
	constant VMOV.
@
text
@a0 20
2006-04-26  Julian Brown  <julian@@codesourcery.com>

	* gas/config/tc-arm.c (neon_is_quarter_float): Move, and rename to...
	(is_quarter_float): Rename from above. Simplify slightly.
	(parse_qfloat_immediate): Parse a "quarter precision" floating-point
	number.
	(parse_neon_mov): Parse floating-point constants.
	(neon_qfloat_bits): Fix encoding.
	(neon_cmode_for_move_imm): Tweak to use floating-point encoding in
	preference to integer encoding when using the F32 type.

   	* gas/testsuite/gas/arm/neon-const.s: New testcase. Neon floating-point
	constants.
	* gas/testsuite/gas/arm/neon-const.d: Expected output of above.
	* gas/testsuite/gas/arm/neon-cov.d: Expect floating-point disassembly
	for VMOV.F32.

   	* opcodes/arm-dis.c (print_insn_neon): Disassemble floating-point
	constant VMOV.

@


1.1.14.23
log
@	* gas/config/tc-arm.c (parse_vfp_reg_list): Improve register bounds
	checking.
	(do_neon_mov): Enable several VMOV variants for VFP. Add suitable
	architecture version checks.
	(insns): Allow overlapping instructions to be used in VFP mode.

   	* gas/testsuite/gas/arm/vfp-neon-overlap.s: New test. Overlapping
	VFP/Neon instructions.
	* gas/testsuite/gas/arm/vfp-neon-overlap.d: Expected output of above.
	* gas/testsuite/gas/arm/vfp1xD.d: Test for fldmx/fstmx.
	* gas/testsuite/gas/arm/vfp1xD_t2.d: Likewise.
	* gas/testsuite/gas/arm/vfpv3-32drs.d: Likewise.

   	* opcodes/arm-dis.c (coprocessor_opcodes): Don't interpret fldmx/fstmx
	as vldm/vstm.
@
text
@a2 18
	* gas/config/tc-arm.c (parse_vfp_reg_list): Improve register bounds
	checking.
	(do_neon_mov): Enable several VMOV variants for VFP. Add suitable
	architecture version checks.
	(insns): Allow overlapping instructions to be used in VFP mode.

   	* gas/testsuite/gas/arm/vfp-neon-overlap.s: New test. Overlapping
	VFP/Neon instructions.
	* gas/testsuite/gas/arm/vfp-neon-overlap.d: Expected output of above.
	* gas/testsuite/gas/arm/vfp1xD.d: Test for fldmx/fstmx.
	* gas/testsuite/gas/arm/vfp1xD_t2.d: Likewise.
	* gas/testsuite/gas/arm/vfpv3-32drs.d: Likewise.

   	* opcodes/arm-dis.c (coprocessor_opcodes): Don't interpret fldmx/fstmx
	as vldm/vstm.

2006-04-26  Julian Brown  <julian@@codesourcery.com>

@


1.1.14.24
log
@bfd/
	* elf32-m68k.c (elf_m68k_pcrel_insn): New structure.
	(elf_m68k_plt_info): Likewise.
	(elf_m68k_plt_info): New table.
	(CFV4E_PLT_ENTRY_SIZE): Rename to...
	(ISAB_PLT_ENTRY_SIZE): ...this.
	(CFV4E_FLAG): Delete.
	(elf_cfv4e_plt0_entry): Rename to...
	(elf_isab_plt0_entry): ...this.  Adjust comments.  Use (-6,%pc,%d0)
	for the second instruction too.
	(elf_cfv4e_plt_entry): Rename to...
	(elf_isab_plt_entry): ...this.  Adjust comments and use (-6,%pc,%d0).
	(elf_isab_plt_info): New table.
	(CPU32_FLAG): Delete.
	(PLT_CPU32_ENTRY_SIZE): Rename to...
	(CPU32_PLT_ENTRY_SIZE): ...this.
	(elf_cpu32_plt0_entry): Update bounds accordingly.
	(elf_cpu32_plt_entry): Likewise.
	(elf_cpu32_plt_info): New table.
	(elf_m68k_link_hash_table): Add a plt_info field.
	(elf_m68k_link_hash_table_create): Initialize it.
	(elf_m68k_get_plt_info): New function.
	(elf_m68k_always_size_sections): Likewise.
	(elf_m68k_adjust_dynamic_symbol): Use the plt_info hash table field.
	(elf_m68k_install_pcrel_field): New function.
	(elf_m68k_finish_dynamic_symbol): Factor code using plt_info and
	elf_m68k_install_pcrel_field.
	(elf_m68k_finish_dynamic_sections): Likewise.
	(elf_m68k_plt_sym_val): Use elf_m68k_get_plt_info.
	(elf_backend_always_size_sections): Define.
@
text
@a0 33
2006-04-27  Richard Sandiford  <richard@@codesourcery.com>

	bfd/
	* elf32-m68k.c (elf_m68k_pcrel_insn): New structure.
	(elf_m68k_plt_info): Likewise.
	(elf_m68k_plt_info): New table.
	(CFV4E_PLT_ENTRY_SIZE): Rename to...
	(ISAB_PLT_ENTRY_SIZE): ...this.
	(CFV4E_FLAG): Delete.
	(elf_cfv4e_plt0_entry): Rename to...
	(elf_isab_plt0_entry): ...this.  Adjust comments.  Use (-6,%pc,%d0)
	for the second instruction too.
	(elf_cfv4e_plt_entry): Rename to...
	(elf_isab_plt_entry): ...this.  Adjust comments and use (-6,%pc,%d0).
	(elf_isab_plt_info): New table.
	(CPU32_FLAG): Delete.
	(PLT_CPU32_ENTRY_SIZE): Rename to...
	(CPU32_PLT_ENTRY_SIZE): ...this.
	(elf_cpu32_plt0_entry): Update bounds accordingly.
	(elf_cpu32_plt_entry): Likewise.
	(elf_cpu32_plt_info): New table.
	(elf_m68k_link_hash_table): Add a plt_info field.
	(elf_m68k_link_hash_table_create): Initialize it.
	(elf_m68k_get_plt_info): New function.
	(elf_m68k_always_size_sections): Likewise.
	(elf_m68k_adjust_dynamic_symbol): Use the plt_info hash table field.
	(elf_m68k_install_pcrel_field): New function.
	(elf_m68k_finish_dynamic_symbol): Factor code using plt_info and
	elf_m68k_install_pcrel_field.
	(elf_m68k_finish_dynamic_sections): Likewise.
	(elf_m68k_plt_sym_val): Use elf_m68k_get_plt_info.
	(elf_backend_always_size_sections): Define.

@


1.1.14.25
log
@include/opcodes/
	* m68k.h (mcf_mask): Define.

opcodes/
	* m68k-opc.c (m68k_opcodes): Fix the masks of the Coldfire fmovemd
	and fmovem entries.  Put register list entries before immediate
	mask entries.  Use "l" rather than "L" in the fmovem entries.
	* m68k-dis.c (match_insn_m68k): Remove the PRIV argument and work it
	out from INFO.
	(m68k_scan_mask): New function, split out from...
	(print_insn_m68k): ...here.  If no architecture has been set,
	first try printing an m680x0 instruction, then try a Coldfire one.
@
text
@a2 15
	include/opcodes/
	* m68k.h (mcf_mask): Define.

	opcodes/
	* m68k-opc.c (m68k_opcodes): Fix the masks of the Coldfire fmovemd
	and fmovem entries.  Put register list entries before immediate
	mask entries.  Use "l" rather than "L" in the fmovem entries.
	* m68k-dis.c (match_insn_m68k): Remove the PRIV argument and work it
	out from INFO.
	(m68k_scan_mask): New function, split out from...
	(print_insn_m68k): ...here.  If no architecture has been set,
	first try printing an m680x0 instruction, then try a Coldfire one.

2006-04-27  Richard Sandiford  <richard@@codesourcery.com>

@


1.1.14.26
log
@	* doc/as.texinfo: Mention that some .type syntaxes are not
	supported on all architectures.
@
text
@a0 5
2006-04-28  Mark Mitchell  <mark@@codesourcery.com>

	* doc/as.texinfo: Mention that some .type syntaxes are not
	supported on all architectures.

@


1.1.14.27
log
@2006-04-29  Paul Brook  <paul@@codesourcery.com>

	* opcodes/arm-dis.c (coprocessor_opcodes): Add %c to unconditional
	arm instructions.
	(neon_opcodes): Add conditional execution specifiers.
	(thumb_opcodes): Ditto.
	(thumb32_opcodes): Ditto.
	(arm_conditional): Change 0xe to "al" and add "" to end.
	(ifthen_state, ifthen_next_state, ifthen_address): New.
	(IFTHEN_COND): Define.
	(print_insn_coprocessor, print_insn_neon): Print thumb conditions.
	(print_insn_arm): Change %c to use new values of arm_conditional.
	(print_insn_thumb16): Print thumb conditions.  Add %I.
	(print_insn_thumb32): Print thumb conditions.
	(find_ifthen_state): New function.
	(print_insn): Track IT block state.
	* gas/testsuite/gas/arm/thumb2_bcond.d: Update expected output.
	* gas/testsuite/gas/arm/thumb32.d: Ditto.
	* gas/testsuite/gas/arm/vfp1_t2.d: Ditto.
	* gas/testsuite/gas/arm/vfp1xD_t2.d: Ditto.
	* binutils/testsuite/binutils-all/arm/objdump.exp: New file.
	* binutils/testsuite/binutils-all/arm/thumb2-cond.s: New test.
@
text
@a0 23
2006-04-29  Paul Brook  <paul@@codesourcery.com>

	* opcodes/arm-dis.c (coprocessor_opcodes): Add %c to unconditional
	arm instructions.
	(neon_opcodes): Add conditional execution specifiers.
	(thumb_opcodes): Ditto.
	(thumb32_opcodes): Ditto.
	(arm_conditional): Change 0xe to "al" and add "" to end.
	(ifthen_state, ifthen_next_state, ifthen_address): New.
	(IFTHEN_COND): Define.
	(print_insn_coprocessor, print_insn_neon): Print thumb conditions.
	(print_insn_arm): Change %c to use new values of arm_conditional.
	(print_insn_thumb16): Print thumb conditions.  Add %I.
	(print_insn_thumb32): Print thumb conditions.
	(find_ifthen_state): New function.
	(print_insn): Track IT block state.
	* gas/testsuite/gas/arm/thumb2_bcond.d: Update expected output.
	* gas/testsuite/gas/arm/thumb32.d: Ditto.
	* gas/testsuite/gas/arm/vfp1_t2.d: Ditto.
	* gas/testsuite/gas/arm/vfp1xD_t2.d: Ditto.
	* binutils/testsuite/binutils-all/arm/objdump.exp: New file.
	* binutils/testsuite/binutils-all/arm/thumb2-cond.s: New test.

@


1.1.14.28
log
@2006-05-01  Paul Brook  <paul@@codesourcery.com>

	* bfd/elf32-arm.c (elf32_arm_final_link_relocate): Set thumb funciton
	bit for R_ARM_REL32.
	* gas/config/tc-arm.c (arm_optimize_expr): New function.
	* gas/config/tc-arm.h (md_optimize_expr): Define
	(arm_optimize_expr): Add prototype.
	(TC_FORCE_RELOCATION_SUB_SAME): Define.
	* ld/testsuite/ld-arm/arm-elf.exp: Add thumb-rel32.
	* ld/testsuite/ld-arm/thumb-rel32.d: New test.
	* ld/testsuite/ld-arm/thumb-rel32.s: New test.
@
text
@a0 12
2006-05-01  Paul Brook  <paul@@codesourcery.com>

	* bfd/elf32-arm.c (elf32_arm_final_link_relocate): Set thumb funciton
	bit for R_ARM_REL32.
	* gas/config/tc-arm.c (arm_optimize_expr): New function.
	* gas/config/tc-arm.h (md_optimize_expr): Define
	(arm_optimize_expr): Add prototype.
	(TC_FORCE_RELOCATION_SUB_SAME): Define.
	* ld/testsuite/ld-arm/arm-elf.exp: Add thumb-rel32.
	* ld/testsuite/ld-arm/thumb-rel32.d: New test.
	* ld/testsuite/ld-arm/thumb-rel32.s: New test.

@


1.1.14.29
log
@	* gas/config/tc-arm.c (do_iwmmxt_wldstbh): Don't multiply offset
	by 4 here.
	(md_apply_fix3): Multiply offset by 4 here for
	BFD_RELOC_ARM_CP_OFF_IMM_S2 and BFD_RELOC_ARM_T32_CP_OFF_IMM_S2.
	* gas/testsuite/gas/arm/iwmmxt.s: Increase offsets for wstrb and
	wstrh.
	* gas/testsuite/gas/arm/iwmmxt.d: Update expected results.
	* gas/testsuite/gas/arm/iwmmxt-bad2.s: Test wstrb, wstrh, wldrb
	and wldrh.
	* gas/testsuite/gas/arm/iwmmxt-bad2.l: Update expected error
	messages.
@
text
@a0 14
2006-05-02  Joseph Myers  <joseph@@codesourcery.com>

	* gas/config/tc-arm.c (do_iwmmxt_wldstbh): Don't multiply offset
	by 4 here.
	(md_apply_fix3): Multiply offset by 4 here for
	BFD_RELOC_ARM_CP_OFF_IMM_S2 and BFD_RELOC_ARM_T32_CP_OFF_IMM_S2.
	* gas/testsuite/gas/arm/iwmmxt.s: Increase offsets for wstrb and
	wstrh.
	* gas/testsuite/gas/arm/iwmmxt.d: Update expected results.
	* gas/testsuite/gas/arm/iwmmxt-bad2.s: Test wstrb, wstrh, wldrb
	and wldrh.
	* gas/testsuite/gas/arm/iwmmxt-bad2.l: Update expected error
	messages.

@


1.1.14.30
log
@2006-05-03  Paul Brook  <paul@@codesourcery.com>

	* bfd/elf32-arm.c (elf32_arm_reloc_map): Add MOVW and MOVT relocs.
	(elf32_arm_final_link_relocate): Handle MOVW and MOVT relocs.
	(elf32_arm_gc_sweep_hook, elf32_arm_check_relocs): Ditto.
	* bfd/reloc.c: Ditto.
	* bfd/bfd-in2.h: Regenerate.
	* bfd/libbfd.h: Regenerate.
	* bfd/libcoff.h: Regenerate.
	* gas/config/tc-arm.c (parse_half): New function.
	(operand_parse_code): Remove OP_Iffff.  Add OP_HALF.
	(parse_operands): Ditto.
	(do_mov16): Reject invalid relocations.
	(do_t_mov16): Ditto.  Use Thumb reloc numbers.
	(insns): Replace Iffff with HALF.
	(md_apply_fix): Add MOVW and MOVT relocs.
	(tc_gen_reloc): Ditto.
	* gas/doc/c-arm.texi: Document relocation operators
	* ld/testsuite/ld-arm/arm-elf.exp: Add arm-movwt.
	* ld/testsuite/ld-arm/arm-movwt.d: New test.
	* ld/testsuite/ld-arm/arm-movwt.s: New test.
	* ld/testsuite/ld-arm/arm.ld: Add .far.
@
text
@a0 23
2006-05-03  Paul Brook  <paul@@codesourcery.com>

	* bfd/elf32-arm.c (elf32_arm_reloc_map): Add MOVW and MOVT relocs.
	(elf32_arm_final_link_relocate): Handle MOVW and MOVT relocs.
	(elf32_arm_gc_sweep_hook, elf32_arm_check_relocs): Ditto.
	* bfd/reloc.c: Ditto.
	* bfd/bfd-in2.h: Regenerate.
	* bfd/libbfd.h: Regenerate.
	* bfd/libcoff.h: Regenerate.
	* gas/config/tc-arm.c (parse_half): New function.
	(operand_parse_code): Remove OP_Iffff.  Add OP_HALF.
	(parse_operands): Ditto.
	(do_mov16): Reject invalid relocations.
	(do_t_mov16): Ditto.  Use Thumb reloc numbers.
	(insns): Replace Iffff with HALF.
	(md_apply_fix): Add MOVW and MOVT relocs.
	(tc_gen_reloc): Ditto.
	* gas/doc/c-arm.texi: Document relocation operators
	* ld/testsuite/ld-arm/arm-elf.exp: Add arm-movwt.
	* ld/testsuite/ld-arm/arm-movwt.d: New test.
	* ld/testsuite/ld-arm/arm-movwt.s: New test.
	* ld/testsuite/ld-arm/arm.ld: Add .far.

@


1.1.14.31
log
@	* gas/doc/c-arm.texi: Add documentation for .dn/.qn directives.
@
text
@a0 4
2006-05-03  Julian Brown  <julian@@codesourcery.com>

	* gas/doc/c-arm.texi: Add documentation for .dn/.qn directives.

@


1.1.14.32
log
@	* configure: Regenerate.
	* configure.in: Enable gprof for cross builds.
@
text
@a0 5
2006-05-05  Mark Shinwell  <shinwell@@codesourcery.com>

	* configure: Regenerate.
	* configure.in: Enable gprof for cross builds.

@


1.1.14.33
log
@	* gas/config/tc-arm.c (stdarg.h): include.
	(arm_it): Add uncond_value field. Add isvec and issingle to operand
	array.
	(arm_reg_type): Add REG_TYPE_VFSD (single or double VFP reg) and
	REG_TYPE_NSDQ (single, double or quad vector reg).
	(reg_expected_msgs): Update.
	(BAD_FPU): Add macro for unsupported FPU instruction error.
	(parse_neon_type): Support 'd' as an alias for .f64.
	(parse_typed_reg_or_scalar): Support REG_TYPE_VFSD, REG_TYPE_NSDQ
	sets of registers.
	(parse_vfp_reg_list): Don't update first arg on error.
	(parse_neon_mov): Support extra syntax for VFP moves.
	(operand_parse_code): Add OP_RVSD, OP_RNSDQ, OP_VRSDLST, OP_RVSD_IO,
	OP_RNSDQ_RNSC, OP_RVC_PSR, OP_APSR_RR, OP_oRNSDQ.
	(parse_operands): Support isvec, issingle operands fields, new parse
	codes above.
	(do_vfp_nsyn_mrs, do_vfp_nsyn_msr): New functions. Support VFP mrs,
	msr variants.
	(do_mrs, do_msr, do_t_mrs, do_t_msr): Add support for above.
	(NEON_ENC_TAB): Add vnmul, vnmla, vnmls, vcmp, vcmpz, vcmpe, vcmpez.
	(NEON_ENC_SINGLE, NEON_ENC_DOUBLE): Define macros.
	(NEON_SHAPE_DEF): New macro. Define table of possible instruction
	shapes.
	(neon_shape): Redefine in terms of above.
	(neon_shape_class): New enumeration, table of shape classes.
	(neon_shape_el): New enumeration. One element of a shape.
	(neon_shape_el_size): Register widths of above, where appropriate.
	(neon_shape_info): New struct. Info for shape table.
	(neon_shape_tab): New array.
	(neon_type_mask): Add N_F64, N_VFP. Update N_MAX_NONSPECIAL.
	(neon_check_shape): Rewrite as...
	(neon_select_shape): New function to classify instruction shapes,
	driven by new table neon_shape_tab array.
	(neon_quad): New function. Return 1 if shape should set Q flag in
	instructions (or equivalent), 0 otherwise.
	(type_chk_of_el_type): Support F64.
	(el_type_of_type_chk): Likewise.
	(neon_check_type): Add support for VFP type checking (VFP data
	elements fill their containing registers).
	(do_vfp_cond_or_thumb): Fill in condition field in ARM mode, or 0xE
	in thumb mode for VFP instructions.
	(do_vfp_nsyn_opcode): New function. Look up the opcode in argument,
	and encode the current instruction as if it were that opcode.
	(try_vfp_nsyn): New. If this looks like a VFP instruction with ARGS
	arguments, call function in PFN.
	(do_vfp_nsyn_add_sub, do_vfp_nsyn_mla_mls, do_vfp_nsyn_mul)
	(do_vfp_nsyn_abs_neg, do_vfp_nsyn_ldm_stm, do_vfp_nsyn_ldr_str)
	(do_vfp_nsyn_sqrt, do_vfp_nsyn_div, do_vfp_nsyn_nmul)
	(do_vfp_nsyn_cmp, nsyn_insert_sp, do_vfp_nsyn_push)
	(do_vfp_nsyn_pop, do_vfp_nsyn_cvt, do_vfp_nsyn_cvtz): New functions.
	Redirect Neon-syntax VFP instructions to VFP instruction handlers.
	(do_neon_dyadic_i_su, do_neon_dyadic_i64_su, do_neon_shl_imm)
	(do_neon_qshl_imm, do_neon_logic, do_neon_bitfield)
	(neon_dyadic_misc, neon_compare, do_neon_tst, do_neon_qdmulh)
	(do_neon_fcmp_absolute, do_neon_step, do_neon_sli, do_neon_sri)
	(do_neon_qshlu_imm, neon_move_immediate, do_neon_mvn, do_neon_ext)
	(do_neon_rev, do_neon_dup, do_neon_rshift_round_imm, do_neon_trn)
	(do_neon_zip_uzp, do_neon_sat_abs_neg, do_neon_pair_long)
	(do_neon_recip_est, do_neon_cls, do_neon_clz, do_neon_cnt)
	(do_neon_swp): Use neon_select_shape not neon_check_shape. Use
	neon_quad.
	(vfp_or_neon_is_neon): New function. Call if a mnemonic shared
	between VFP and Neon turns out to belong to Neon. Perform
	architecture check and fill in condition field if appropriate.
	(do_neon_addsub_if_i, do_neon_mac_maybe_scalar, do_neon_abs_neg)
	(do_neon_cvt): Add support for VFP variants of instructions.
	(neon_cvt_flavour): Extend to cover VFP conversions.
	(do_neon_mov): Rewrite to use neon_select_shape. Add support for VFP
	vmov variants.
	(do_neon_ldr_str): Handle single-precision VFP load/store.
	(do_neon_ld_st_interleave, do_neon_ld_st_lane, do_neon_ld_dup): Use
	NS_NULL not NS_IGNORE.
	(opcode_tag): Add OT_csuffixF for operands which either take a
	conditional suffix, or have 0xF in the condition field.
	(md_assemble): Add support for OT_csuffixF.
	(NCE): Replace macro with...
	(NCE_tag, NCE, NCEF): New macros.
	(nCE): Replace macro with...
	(nCE_tag, nCE, nCEF): New macros.
	(insns): Add support for VFP insns or VFP versions of insns msr, mrs,
	vsqrt, vdiv, vnmul, vnmla, vnmls, vcmp, vcmpe, vpush, vpop, vcvtz,
	vmul, vmla, vmls, vadd, vsub, vabs, vneg, vldm, vldmia, vldbdb, vstm,
	vstmia, vstmdb, vldr, vstr, vcvt, vmov. Group shared VFP/Neon insns
	together.

	* gas/testsuite/gas/arm/itblock.s: New file. Helper macro for making
	all-true IT blocks.
	* gas/testsuite/gas/arm/neon-cond-bad-inc.s: New test. Make sure
	unconditional Neon instructions are rejected...
	* gas/testsuite/gas/arm/neon-cond-bad.s: In ARM mode, and...
	* gas/testsuite/gas/arm/neon-cond-bad_t2.s: Accepted in Thumb mode
	(with IT).
	* gas/testsuite/gas/arm/neon-cond-bad.l: Expected error output in ARM
	mode.
	* gas/testsuite/gas/arm/neon-cond-bad.d: Control ARM mode test.
	* gas/testsuite/gas/arm/neon-cond-bad_t2.d: Expected output in Thumb
	mode.
	* gas/testsuite/gas/arm/vfp-neon-syntax-inc.s: Test VFP Neon-style
	syntax.
	* gas/testsuite/gas/arm/vfp-neon-syntax.s: ...in ARM mode.
	* gas/testsuite/gas/arm/vfp-neon-syntax_t2.s: ...and Thumb mode.
	* gas/testsuite/gas/arm/vfp-neon-syntax.d: Expected output in ARM mode.
	* gas/testsuite/gas/arm/vfp-neon-syntax_t2.d: Expected output in Thumb
	mode.
@
text
@a0 107
2006-05-05  Julian Brown  <julian@@codesourcery.com>

	* gas/config/tc-arm.c (stdarg.h): include.
	(arm_it): Add uncond_value field. Add isvec and issingle to operand
	array.
	(arm_reg_type): Add REG_TYPE_VFSD (single or double VFP reg) and
	REG_TYPE_NSDQ (single, double or quad vector reg).
	(reg_expected_msgs): Update.
	(BAD_FPU): Add macro for unsupported FPU instruction error.
	(parse_neon_type): Support 'd' as an alias for .f64.
	(parse_typed_reg_or_scalar): Support REG_TYPE_VFSD, REG_TYPE_NSDQ
	sets of registers.
	(parse_vfp_reg_list): Don't update first arg on error.
	(parse_neon_mov): Support extra syntax for VFP moves.
	(operand_parse_code): Add OP_RVSD, OP_RNSDQ, OP_VRSDLST, OP_RVSD_IO,
	OP_RNSDQ_RNSC, OP_RVC_PSR, OP_APSR_RR, OP_oRNSDQ.
	(parse_operands): Support isvec, issingle operands fields, new parse
	codes above.
	(do_vfp_nsyn_mrs, do_vfp_nsyn_msr): New functions. Support VFP mrs,
	msr variants.
	(do_mrs, do_msr, do_t_mrs, do_t_msr): Add support for above.
	(NEON_ENC_TAB): Add vnmul, vnmla, vnmls, vcmp, vcmpz, vcmpe, vcmpez.
	(NEON_ENC_SINGLE, NEON_ENC_DOUBLE): Define macros.
	(NEON_SHAPE_DEF): New macro. Define table of possible instruction
	shapes.
	(neon_shape): Redefine in terms of above.
	(neon_shape_class): New enumeration, table of shape classes.
	(neon_shape_el): New enumeration. One element of a shape.
	(neon_shape_el_size): Register widths of above, where appropriate.
	(neon_shape_info): New struct. Info for shape table.
	(neon_shape_tab): New array.
	(neon_type_mask): Add N_F64, N_VFP. Update N_MAX_NONSPECIAL.
	(neon_check_shape): Rewrite as...
	(neon_select_shape): New function to classify instruction shapes,
	driven by new table neon_shape_tab array.
	(neon_quad): New function. Return 1 if shape should set Q flag in
	instructions (or equivalent), 0 otherwise.
	(type_chk_of_el_type): Support F64.
	(el_type_of_type_chk): Likewise.
	(neon_check_type): Add support for VFP type checking (VFP data
	elements fill their containing registers).
	(do_vfp_cond_or_thumb): Fill in condition field in ARM mode, or 0xE
	in thumb mode for VFP instructions.
	(do_vfp_nsyn_opcode): New function. Look up the opcode in argument,
	and encode the current instruction as if it were that opcode.
	(try_vfp_nsyn): New. If this looks like a VFP instruction with ARGS
	arguments, call function in PFN.
	(do_vfp_nsyn_add_sub, do_vfp_nsyn_mla_mls, do_vfp_nsyn_mul)
	(do_vfp_nsyn_abs_neg, do_vfp_nsyn_ldm_stm, do_vfp_nsyn_ldr_str)
	(do_vfp_nsyn_sqrt, do_vfp_nsyn_div, do_vfp_nsyn_nmul)
	(do_vfp_nsyn_cmp, nsyn_insert_sp, do_vfp_nsyn_push)
	(do_vfp_nsyn_pop, do_vfp_nsyn_cvt, do_vfp_nsyn_cvtz): New functions.
	Redirect Neon-syntax VFP instructions to VFP instruction handlers.
	(do_neon_dyadic_i_su, do_neon_dyadic_i64_su, do_neon_shl_imm)
	(do_neon_qshl_imm, do_neon_logic, do_neon_bitfield)
	(neon_dyadic_misc, neon_compare, do_neon_tst, do_neon_qdmulh)
	(do_neon_fcmp_absolute, do_neon_step, do_neon_sli, do_neon_sri)
	(do_neon_qshlu_imm, neon_move_immediate, do_neon_mvn, do_neon_ext)
	(do_neon_rev, do_neon_dup, do_neon_rshift_round_imm, do_neon_trn)
	(do_neon_zip_uzp, do_neon_sat_abs_neg, do_neon_pair_long)
	(do_neon_recip_est, do_neon_cls, do_neon_clz, do_neon_cnt)
	(do_neon_swp): Use neon_select_shape not neon_check_shape. Use
	neon_quad.
	(vfp_or_neon_is_neon): New function. Call if a mnemonic shared
	between VFP and Neon turns out to belong to Neon. Perform
	architecture check and fill in condition field if appropriate.
	(do_neon_addsub_if_i, do_neon_mac_maybe_scalar, do_neon_abs_neg)
	(do_neon_cvt): Add support for VFP variants of instructions.
	(neon_cvt_flavour): Extend to cover VFP conversions.
	(do_neon_mov): Rewrite to use neon_select_shape. Add support for VFP
	vmov variants.
	(do_neon_ldr_str): Handle single-precision VFP load/store.
	(do_neon_ld_st_interleave, do_neon_ld_st_lane, do_neon_ld_dup): Use
	NS_NULL not NS_IGNORE.
	(opcode_tag): Add OT_csuffixF for operands which either take a
	conditional suffix, or have 0xF in the condition field.
	(md_assemble): Add support for OT_csuffixF.
	(NCE): Replace macro with...
	(NCE_tag, NCE, NCEF): New macros.
	(nCE): Replace macro with...
	(nCE_tag, nCE, nCEF): New macros.
	(insns): Add support for VFP insns or VFP versions of insns msr, mrs,
	vsqrt, vdiv, vnmul, vnmla, vnmls, vcmp, vcmpe, vpush, vpop, vcvtz,
	vmul, vmla, vmls, vadd, vsub, vabs, vneg, vldm, vldmia, vldbdb, vstm,
	vstmia, vstmdb, vldr, vstr, vcvt, vmov. Group shared VFP/Neon insns
	together.

	* gas/testsuite/gas/arm/itblock.s: New file. Helper macro for making
	all-true IT blocks.
	* gas/testsuite/gas/arm/neon-cond-bad-inc.s: New test. Make sure
	unconditional Neon instructions are rejected...
	* gas/testsuite/gas/arm/neon-cond-bad.s: In ARM mode, and...
	* gas/testsuite/gas/arm/neon-cond-bad_t2.s: Accepted in Thumb mode
	(with IT).
	* gas/testsuite/gas/arm/neon-cond-bad.l: Expected error output in ARM
	mode.
	* gas/testsuite/gas/arm/neon-cond-bad.d: Control ARM mode test.
	* gas/testsuite/gas/arm/neon-cond-bad_t2.d: Expected output in Thumb
	mode.
	* gas/testsuite/gas/arm/vfp-neon-syntax-inc.s: Test VFP Neon-style
	syntax.
	* gas/testsuite/gas/arm/vfp-neon-syntax.s: ...in ARM mode.
	* gas/testsuite/gas/arm/vfp-neon-syntax_t2.s: ...and Thumb mode.
	* gas/testsuite/gas/arm/vfp-neon-syntax.d: Expected output in ARM mode.
	* gas/testsuite/gas/arm/vfp-neon-syntax_t2.d: Expected output in Thumb
	mode.

@


1.1.14.34
log
@	Backport:
	2006-03-30  Jakub Jelinek  <jakub@@redhat.com>
	* ldmisc.c (vfinfo): Revert 2005-10-05 changes.  If
	bfd_find_nearest_line succeeded for %C or %D, but filename
	is NULL, print section+offset at the end.
@
text
@a0 8
2006-05-06  Joseph S. Myers  <joseph@@codesourcery.com>

	Backport:
	2006-03-30  Jakub Jelinek  <jakub@@redhat.com>
	* ldmisc.c (vfinfo): Revert 2005-10-05 changes.  If
	bfd_find_nearest_line succeeded for %C or %D, but filename
	is NULL, print section+offset at the end.

@


1.1.14.35
log
@
2006-05-11  Carlos O'Donell  <carlos@@codesourcery.com>

	* bfd/doc/bfd.texinfo: Rename "Index" to "BFD Index"
	* ld/ld.texinfo: Rename "Index" to "LD Index"
	* gas/doc/as.texinfo: Rename "Index" to "AS Index"
	Rename "ABORT" to "ABORT (COFF)"
@
text
@a0 7
2006-05-11  Carlos O'Donell  <carlos@@codesourcery.com>

	* bfd/doc/bfd.texinfo: Rename "Index" to "BFD Index"
	* ld/ld.texinfo: Rename "Index" to "LD Index"
	* gas/doc/as.texinfo: Rename "Index" to "AS Index"
	Rename "ABORT" to "ABORT (COFF)"

@


1.1.14.36
log
@
2006-05-12  Carlos O'Donell  <carlos@@codesourcery.com>

	* binutils/doc/binutils.texi: Rename "Index" to "Binutils Index"
@
text
@a0 4
2006-05-12  Carlos O'Donell  <carlos@@codesourcery.com>

	* binutils/doc/binutils.texi: Rename "Index" to "Binutils Index"

@


1.1.14.37
log
@2006-05-15  Paul Brook  <paul@@codesourcery.com>

	Backport from mainline.
	* bfd/cpu-arm.c (bfd_is_arm_mapping_symbol_name): Rename ...
	(bfd_is_arm_special_symbol_name): ... to this.  Add type argument.
	Check symbol name is of specified type.
	* bfd/elf32-arm.c (elf32_arm_is_target_special_symbol,
	arm_elf_find_function, elf32_arm_output_symbol_hook): Use
	bfd_is_arm_special_symbol_name.
	* bfd/bfd-in.h (BFD_ARM_SPECIAL_SYM_TYPE_MAP,
	BFD_ARM_SPECIAL_SYM_TYPE_TAG, BFD_ARM_SPECIAL_SYM_TYPE_OTHER,
	BFD_ARM_SPECIAL_SYM_TYPE_ANY): Define.
	(bfd_is_arm_mapping_symbol_name): Remove prototype.
	(bfd_is_arm_special_symbol_name): Add prototype.
	* bfd/bfd-in2.h: Regenerate.
	* gas/config/tc-arm.c (arm_adjust_symtab): Use
	bfd_is_arm_special_symbol_name.
	* ld/testsuite/ld-arm/arm-be8.d: New test.
	* ld/testsuite/ld-arm/arm-be8.s: New test.
	* ld/testsuite/ld-arm/arm-elf.exp: Add arm-be8.
@
text
@a0 21
2006-05-15  Paul Brook  <paul@@codesourcery.com>

	Backport from mainline.
	* bfd/cpu-arm.c (bfd_is_arm_mapping_symbol_name): Rename ...
	(bfd_is_arm_special_symbol_name): ... to this.  Add type argument.
	Check symbol name is of specified type.
	* bfd/elf32-arm.c (elf32_arm_is_target_special_symbol,
	arm_elf_find_function, elf32_arm_output_symbol_hook): Use
	bfd_is_arm_special_symbol_name.
	* bfd/bfd-in.h (BFD_ARM_SPECIAL_SYM_TYPE_MAP,
	BFD_ARM_SPECIAL_SYM_TYPE_TAG, BFD_ARM_SPECIAL_SYM_TYPE_OTHER,
	BFD_ARM_SPECIAL_SYM_TYPE_ANY): Define.
	(bfd_is_arm_mapping_symbol_name): Remove prototype.
	(bfd_is_arm_special_symbol_name): Add prototype.
	* bfd/bfd-in2.h: Regenerate.
	* gas/config/tc-arm.c (arm_adjust_symtab): Use
	bfd_is_arm_special_symbol_name.
	* ld/testsuite/ld-arm/arm-be8.d: New test.
	* ld/testsuite/ld-arm/arm-be8.s: New test.
	* ld/testsuite/ld-arm/arm-elf.exp: Add arm-be8.

@


1.1.14.38
log
@	* binutils/testsuite/binutils-all/objcopy.exp: Skip for uclinux
	targets.
@
text
@a0 5
2006-05-20  Nathan Sidwell  <nathan@@codesourcery.com>

	* binutils/testsuite/binutils-all/objcopy.exp: Skip for uclinux
	targets.

@


1.1.14.39
log
@	opcodes/
	* m68k-dis.c (m68k_scan_mask): Add missing return.
@
text
@a0 5
2006-05-22  Richard Sandiford  <richard@@codesourcery.com>

	opcodes/
	* m68k-dis.c (m68k_scan_mask): Add missing return.

@


1.1.14.40
log
@2006-05-24  Paul Brook  <paul@@codesourcery.com>

	Backport form mainline.
	* bfd/elf32-arm.c (put_arm_insn, put_thumb_insn): New functions.
	(elf32_thumb_to_arm_stub, elf32_arm_to_thumb_stub,
	elf32_arm_finish_dynamic_symbol): Use them.
@
text
@a0 7
2006-05-24  Paul Brook  <paul@@codesourcery.com>

	Backport form mainline.
	* bfd/elf32-arm.c (put_arm_insn, put_thumb_insn): New functions.
	(elf32_thumb_to_arm_stub, elf32_arm_to_thumb_stub,
	elf32_arm_finish_dynamic_symbol): Use them.

@


1.1.14.41
log
@2006-05-24  Paul Brook  <paul@@codesourcery.com>

	Backport from mainline.
	* bfd/elf-bfd.h (elf_backend_data): Add
	elf_backend_output_arch_local_syms
	* bfd/elf32-arm.c (output_arch_syminfo): Define.
	(elf32_arm_ouput_plt_map_sym, elf32_arm_output_plt_map,
	elf32_arm_output_arch_local_syms): New functions.
	(elf_backend_output_arch_local_syms): Define.
	* bfd/elflink.c (bfd_elf_final_link): Call
	elf_backend_output_arch_local_syms.
	* bfd/elfxx-target.h (elf_backend_output_arch_local_syms): Provide
	default definition.
	(elfNN_bed): Add elf_backend_output_arch_local_syms.
	* ld/testsuite/ld-arm/arm-app-abs32.d: Update expected output.
	* ld/testsuite/ld-arm/arm-app.d: Ditto.
	* ld/testsuite/ld-arm/arm-lib-plt32.d: Ditto.
	* ld/testsuite/ld-arm/arm-lib.d: Ditto.
	* ld/testsuite/ld-arm/mixed-app-v5.d: Ditto.
	* ld/testsuite/ld-arm/mixed-app.d: Ditto.
	* ld/testsuite/ld-arm/mixed-lib.d: Ditto.
@
text
@d3 1
a3 23
	Backport from mainline.
	* bfd/elf-bfd.h (elf_backend_data): Add
	elf_backend_output_arch_local_syms
	* bfd/elf32-arm.c (output_arch_syminfo): Define.
	(elf32_arm_ouput_plt_map_sym, elf32_arm_output_plt_map,
	elf32_arm_output_arch_local_syms): New functions.
	(elf_backend_output_arch_local_syms): Define.
	* bfd/elflink.c (bfd_elf_final_link): Call
	elf_backend_output_arch_local_syms.
	* bfd/elfxx-target.h (elf_backend_output_arch_local_syms): Provide
	default definition.
	(elfNN_bed): Add elf_backend_output_arch_local_syms.
	* ld/testsuite/ld-arm/arm-app-abs32.d: Update expected output.
	* ld/testsuite/ld-arm/arm-app.d: Ditto.
	* ld/testsuite/ld-arm/arm-lib-plt32.d: Ditto.
	* ld/testsuite/ld-arm/arm-lib.d: Ditto.
	* ld/testsuite/ld-arm/mixed-app-v5.d: Ditto.
	* ld/testsuite/ld-arm/mixed-app.d: Ditto.
	* ld/testsuite/ld-arm/mixed-lib.d: Ditto.

2006-05-24  Paul Brook  <paul@@codesourcery.com>

	Backport from mainline.
@


1.1.14.42
log
@	* gas/config/tc-m68k.c (mcf52235_ctrl, mcf5225_ctrl): New.
	(m68k_cpus): Add 52230, 52233, 52234, 52235, 5224, 5225.
@
text
@a0 5
2006-05-25  Nathan Sidwell  <nathan@@codesourcery.com>

	* gas/config/tc-m68k.c (mcf52235_ctrl, mcf5225_ctrl): New.
	(m68k_cpus): Add 52230, 52233, 52234, 52235, 5224, 5225.

@


1.1.14.43
log
@	* elf.c (sym_is_global): Return a bfd_boolean.
	(ignore_section_sym): New function.
	(elf_map_symbols): Use ignore_section_sym to discard some syms.
	(_bfd_elf_symbol_from_bfd_symbol): Ensure section belongs to
	bfd before using elf_section_syms.
@
text
@a0 8
2006-05-25  Alan Modra  <amodra@@bigpond.net.au>

	* bfd/elf.c (sym_is_global): Return a bfd_boolean.
	(ignore_section_sym): New function.
	(elf_map_symbols): Use ignore_section_sym to discard some syms.
	(_bfd_elf_symbol_from_bfd_symbol): Ensure section belongs to
	bfd before using elf_section_syms.

@


1.1.14.44
log
@	gas/
	* config/tc-arm.c (do_vfp_nsyn_ldr_str): Remove, fold into...
	(do_neon_ldr_str): Always defer to VFP encoding routines, which handle
	relocs properly.
@
text
@a0 7
2006-06-15  Julian Brown  <julian@@codesourcery.com>

	gas/
	* config/tc-arm.c (do_vfp_nsyn_ldr_str): Remove, fold into...
	(do_neon_ldr_str): Always defer to VFP encoding routines, which handle
	relocs properly.

@


1.1.14.45
log
@Support for ARM "group relocations" numbers 4, and 57 through 83.

	* include/elf/arm.h: Correct names of R_ARM_LDC_G{0,1,2}
	to R_ARM_LDC_SB_G{0,1,2} respectively.

	bfd/
	* bfd-in2.h: Regenerate.
	* elf32-arm.c (R_ARM_ALU_PC_G0_NC, R_ARM_ALU_PC_G0,
	R_ARM_ALU_PC_G1_NC, R_ARM_ALU_PC_G1, R_ARM_ALU_PC_G2,
	R_ARM_LDR_PC_G1, R_ARM_LDR_PC_G2, R_ARM_LDRS_PC_G0,
	R_ARM_LDRS_PC_G1, R_ARM_LDRS_PC_G2, R_ARM_LDC_PC_G0,
	R_ARM_LDC_PC_G1, R_ARM_LDC_PC_G2, R_ARM_ALU_SB_G0_NC,
	R_ARM_ALU_SB_G0, R_ARM_ALU_SB_G1_NC, R_ARM_ALU_SB_G1,
	R_ARM_ALU_SB_G2, R_ARM_LDR_SB_G0, R_ARM_LDR_SB_G1,
	R_ARM_LDR_SB_G2, R_ARM_LDRS_SB_G0, R_ARM_LDRS_SB_G1,
	R_ARM_LDRS_SB_G2, R_ARM_LDC_SB_G0, R_ARM_LDC_SB_G1,
	R_ARM_LDC_SB_G2): New relocation types.
	(R_ARM_PC13): Rename to AAELF name R_ARM_LDR_PC_G0 and
	adjust HOWTO entry to be consistent with R_ARM_LDR_PC_G1
	and friends.
	(elf32_arm_howto_table_3): Delete; contents merged into
	elf32_arm_howto_table_2.
	(elf32_arm_howto_from_type): Adjust correspondingly.
	(elf32_arm_reloc_map): Extend with the above relocations.
	(calculate_group_reloc_mask): New function.
	(identify_add_or_sub): New function.
	(elf32_arm_final_link_relocate): Support for the above
	relocations.
	* reloc.c: Add enumeration entries for BFD_RELOC_ARM_...
	codes to correspond to the above relocations.

	gas/
	* config/tc-arm.c (enum parse_operand_result): New.
	(struct group_reloc_table_entry): New.
	(enum group_reloc_type): New.
	(group_reloc_table): New array.
	(find_group_reloc_table_entry): New function.
	(parse_shifter_operand_group_reloc): New function.
	(parse_address_main): New function, incorporating code
	from the old parse_address function.  To be used via...
	(parse_address): wrapper for parse_address_main; and
	(parse_address_group_reloc): new function, likewise.
	(enum operand_parse_code): New codes OP_SHG, OP_ADDRGLDR,
	OP_ADDRGLDRS, OP_ADDRGLDC.
	(parse_operands): Support for these new operand codes.
	New macro po_misc_or_fail_no_backtrack.
	(encode_arm_cp_address): Preserve group relocations.
	(insns): Modify to use the above operand codes where group
	relocations are permitted.
	(md_apply_fix): Handle the group relocations
	ALU_PC_G0_NC through LDC_SB_G2.
	(tc_gen_reloc): Likewise.
	(arm_force_relocation): Leave group relocations for the linker.
	(arm_fix_adjustable): Likewise.

	gas/testsuite/
	* gas/arm/group-reloc-alu.d: New test.
	* gas/arm/group-reloc-alu-encoding-bad.d: New test.
	* gas/arm/group-reloc-alu-encoding-bad.l: New test.
	* gas/arm/group-reloc-alu-encoding-bad.s: New test.
	* gas/arm/group-reloc-alu-parsing-bad.d: New test.
	* gas/arm/group-reloc-alu-parsing-bad.l: New test.
	* gas/arm/group-reloc-alu-parsing-bad.s: New test.
	* gas/arm/group-reloc-alu.s: New test.
	* gas/arm/group-reloc-ldc.d: New test.
	* gas/arm/group-reloc-ldc-encoding-bad.d: New test.
	* gas/arm/group-reloc-ldc-encoding-bad.l: New test.
	* gas/arm/group-reloc-ldc-encoding-bad.s: New test.
	* gas/arm/group-reloc-ldc-parsing-bad.d: New test.
	* gas/arm/group-reloc-ldc-parsing-bad.l: New test.
	* gas/arm/group-reloc-ldc-parsing-bad.s: New test.
	* gas/arm/group-reloc-ldc.s: New test.
	* gas/arm/group-reloc-ldr.d: New test.
	* gas/arm/group-reloc-ldr-encoding-bad.d: New test.
	* gas/arm/group-reloc-ldr-encoding-bad.l: New test.
	* gas/arm/group-reloc-ldr-encoding-bad.s: New test.
	* gas/arm/group-reloc-ldr-parsing-bad.d: New test.
	* gas/arm/group-reloc-ldr-parsing-bad.l: New test.
	* gas/arm/group-reloc-ldr-parsing-bad.s: New test.
	* gas/arm/group-reloc-ldr.s: New test.
	* gas/arm/group-reloc-ldrs.d: New test.
	* gas/arm/group-reloc-ldrs-encoding-bad.d: New test.
	* gas/arm/group-reloc-ldrs-encoding-bad.l: New test.
	* gas/arm/group-reloc-ldrs-encoding-bad.s: New test.
	* gas/arm/group-reloc-ldrs-parsing-bad.d: New test.
	* gas/arm/group-reloc-ldrs-parsing-bad.l: New test.
	* gas/arm/group-reloc-ldrs-parsing-bad.s: New test.
	* gas/arm/group-reloc-ldrs.s: New test.

	ld/testsuite/
	* ld-arm/group-relocs-alu-bad.d: New test.
	* ld-arm/group-relocs-alu-bad.s: New test.
	* ld-arm/group-relocs.d: New test.
	* ld-arm/group-relocs-ldc-bad.d: New test.
	* ld-arm/group-relocs-ldc-bad.s: New test.
	* ld-arm/group-relocs-ldr-bad.d: New test.
	* ld-arm/group-relocs-ldr-bad.s: New test.
	* ld-arm/group-relocs-ldrs-bad.d: New test.
	* ld-arm/group-relocs-ldrs-bad.s: New test.
	* ld-arm/group-relocs.s: New test.
	* ld-arm/arm-elf.exp: Wire in new tests.
@
text
@a0 102
2006-06-15  Mark Shinwell  <shinwell@@codesourcery.com>

	* include/elf/arm.h: Correct names of R_ARM_LDC_G{0,1,2}
	to R_ARM_LDC_SB_G{0,1,2} respectively.

	bfd/
	* bfd-in2.h: Regenerate.
	* elf32-arm.c (R_ARM_ALU_PC_G0_NC, R_ARM_ALU_PC_G0,
	R_ARM_ALU_PC_G1_NC, R_ARM_ALU_PC_G1, R_ARM_ALU_PC_G2,
	R_ARM_LDR_PC_G1, R_ARM_LDR_PC_G2, R_ARM_LDRS_PC_G0,
	R_ARM_LDRS_PC_G1, R_ARM_LDRS_PC_G2, R_ARM_LDC_PC_G0,
	R_ARM_LDC_PC_G1, R_ARM_LDC_PC_G2, R_ARM_ALU_SB_G0_NC,
	R_ARM_ALU_SB_G0, R_ARM_ALU_SB_G1_NC, R_ARM_ALU_SB_G1,
	R_ARM_ALU_SB_G2, R_ARM_LDR_SB_G0, R_ARM_LDR_SB_G1,
	R_ARM_LDR_SB_G2, R_ARM_LDRS_SB_G0, R_ARM_LDRS_SB_G1,
	R_ARM_LDRS_SB_G2, R_ARM_LDC_SB_G0, R_ARM_LDC_SB_G1,
	R_ARM_LDC_SB_G2): New relocation types.
	(R_ARM_PC13): Rename to AAELF name R_ARM_LDR_PC_G0 and
	adjust HOWTO entry to be consistent with R_ARM_LDR_PC_G1
	and friends.
	(elf32_arm_howto_table_3): Delete; contents merged into
	elf32_arm_howto_table_2.
	(elf32_arm_howto_from_type): Adjust correspondingly.
	(elf32_arm_reloc_map): Extend with the above relocations.
	(calculate_group_reloc_mask): New function.
	(identify_add_or_sub): New function.
	(elf32_arm_final_link_relocate): Support for the above
	relocations.
	* reloc.c: Add enumeration entries for BFD_RELOC_ARM_...
	codes to correspond to the above relocations.

	gas/
	* config/tc-arm.c (enum parse_operand_result): New.
	(struct group_reloc_table_entry): New.
	(enum group_reloc_type): New.
	(group_reloc_table): New array.
	(find_group_reloc_table_entry): New function.
	(parse_shifter_operand_group_reloc): New function.
	(parse_address_main): New function, incorporating code
	from the old parse_address function.  To be used via...
	(parse_address): wrapper for parse_address_main; and
	(parse_address_group_reloc): new function, likewise.
	(enum operand_parse_code): New codes OP_SHG, OP_ADDRGLDR,
	OP_ADDRGLDRS, OP_ADDRGLDC.
	(parse_operands): Support for these new operand codes.
	New macro po_misc_or_fail_no_backtrack.
	(encode_arm_cp_address): Preserve group relocations.
	(insns): Modify to use the above operand codes where group
	relocations are permitted.
	(md_apply_fix): Handle the group relocations
	ALU_PC_G0_NC through LDC_SB_G2.
	(tc_gen_reloc): Likewise.
	(arm_force_relocation): Leave group relocations for the linker.
	(arm_fix_adjustable): Likewise.

	gas/testsuite/
	* gas/arm/group-reloc-alu.d: New test.
	* gas/arm/group-reloc-alu-encoding-bad.d: New test.
	* gas/arm/group-reloc-alu-encoding-bad.l: New test.
	* gas/arm/group-reloc-alu-encoding-bad.s: New test.
	* gas/arm/group-reloc-alu-parsing-bad.d: New test.
	* gas/arm/group-reloc-alu-parsing-bad.l: New test.
	* gas/arm/group-reloc-alu-parsing-bad.s: New test.
	* gas/arm/group-reloc-alu.s: New test.
	* gas/arm/group-reloc-ldc.d: New test.
	* gas/arm/group-reloc-ldc-encoding-bad.d: New test.
	* gas/arm/group-reloc-ldc-encoding-bad.l: New test.
	* gas/arm/group-reloc-ldc-encoding-bad.s: New test.
	* gas/arm/group-reloc-ldc-parsing-bad.d: New test.
	* gas/arm/group-reloc-ldc-parsing-bad.l: New test.
	* gas/arm/group-reloc-ldc-parsing-bad.s: New test.
	* gas/arm/group-reloc-ldc.s: New test.
	* gas/arm/group-reloc-ldr.d: New test.
	* gas/arm/group-reloc-ldr-encoding-bad.d: New test.
	* gas/arm/group-reloc-ldr-encoding-bad.l: New test.
	* gas/arm/group-reloc-ldr-encoding-bad.s: New test.
	* gas/arm/group-reloc-ldr-parsing-bad.d: New test.
	* gas/arm/group-reloc-ldr-parsing-bad.l: New test.
	* gas/arm/group-reloc-ldr-parsing-bad.s: New test.
	* gas/arm/group-reloc-ldr.s: New test.
	* gas/arm/group-reloc-ldrs.d: New test.
	* gas/arm/group-reloc-ldrs-encoding-bad.d: New test.
	* gas/arm/group-reloc-ldrs-encoding-bad.l: New test.
	* gas/arm/group-reloc-ldrs-encoding-bad.s: New test.
	* gas/arm/group-reloc-ldrs-parsing-bad.d: New test.
	* gas/arm/group-reloc-ldrs-parsing-bad.l: New test.
	* gas/arm/group-reloc-ldrs-parsing-bad.s: New test.
	* gas/arm/group-reloc-ldrs.s: New test.

	ld/testsuite/
	* ld-arm/group-relocs-alu-bad.d: New test.
	* ld-arm/group-relocs-alu-bad.s: New test.
	* ld-arm/group-relocs.d: New test.
	* ld-arm/group-relocs-ldc-bad.d: New test.
	* ld-arm/group-relocs-ldc-bad.s: New test.
	* ld-arm/group-relocs-ldr-bad.d: New test.
	* ld-arm/group-relocs-ldr-bad.s: New test.
	* ld-arm/group-relocs-ldrs-bad.d: New test.
	* ld-arm/group-relocs-ldrs-bad.s: New test.
	* ld-arm/group-relocs.s: New test.
	* ld-arm/arm-elf.exp: Wire in new tests.

@


1.1.14.46
log
@2006-06-19  Vladimir Prus  <vladimir@@codesourcery.com>

	bfd/
	* elf32-arm.c (elf32_arm_swap_symbol_out): Don't set low
	bit for undefined symbols.

	ld/testsuite
	* ld-arm/arm-elf.exp: New test.
	* ld-arm/use-thumb-lib.s: New file.
	* ld-arm/use-thumb-lib.sym: New file.
@
text
@a0 11
2006-06-19  Vladimir Prus  <vladimir@@codesourcery.com>

	bfd/
	* elf32-arm.c (elf32_arm_swap_symbol_out): Don't set low
	bit for undefined symbols.

	ld/testsuite
	* ld-arm/arm-elf.exp: New test.
	* ld-arm/use-thumb-lib.s: New file.
	* ld-arm/use-thumb-lib.sym: New file.

@


1.1.14.47
log
@ld/
	* ldlang.c (lang_insert_orphan): Correctly handle the case where
	the section is to end up after the section currently at the end
	of the list in output_bfd.
@
text
@a0 7
2006-06-21  Mark Shinwell  <shinwell@@codesourcery.com>

	ld/
	* ldlang.c (lang_insert_orphan): Correctly handle the case where
	the section is to end up after the section currently at the end
	of the list in output_bfd.

@


1.1.14.48
log
@	Backport from mainline:

	binutils/testsuite/
	2006-04-26  H.J. Lu  <hongjiu.lu@@intel.com>

	* lib/utils-lib.exp (run_dump_test): New.
	(slurp_options): Likewise.
	(regexp_diff): Likewise.
	(file_contents): Likewise.
	(verbose_eval): Likewise.
@
text
@a0 13
2006-06-22  Richard Sandiford  <richard@@codesourcery.com>

	Backport from mainline:

	binutils/testsuite/
	2006-04-26  H.J. Lu  <hongjiu.lu@@intel.com>

	* lib/utils-lib.exp (run_dump_test): New.
	(slurp_options): Likewise.
	(regexp_diff): Likewise.
	(file_contents): Likewise.
	(verbose_eval): Likewise.

@


1.1.14.49
log
@binutils/
	* objcopy.c (localize_hidden): New variable.
	(OPTION_LOCALIZE_HIDDEN): New command_line_switch value.
	(copy_options): Add --localize-hidden.
	(copy_usage): Mention --localize-hidden.
	(is_hidden_symbol): New function.
	(filter_symbols): Handle localize_hidden.
	(copy_object): Call filter_symbols if localize_hidden.
	(copy_main): Handle OPTION_LOCALIZE_HIDDEN.
	* doc/binutils.texi (--localize-hidden): Document new option.

binutils/testsuite/
	* binutils-all/localize-hidden-1.s,
	* binutils-all/localize-hidden-1.d,
	* binutils-all/localize-hidden-2.s,
	* binutils-all/localize-hidden-2.d: New tests.
	* binutils-all/objcopy.exp: Run them.
@
text
@a2 20
	binutils/
	* objcopy.c (localize_hidden): New variable.
	(OPTION_LOCALIZE_HIDDEN): New command_line_switch value.
	(copy_options): Add --localize-hidden.
	(copy_usage): Mention --localize-hidden.
	(is_hidden_symbol): New function.
	(filter_symbols): Handle localize_hidden.
	(copy_object): Call filter_symbols if localize_hidden.
	(copy_main): Handle OPTION_LOCALIZE_HIDDEN.
	* doc/binutils.texi (--localize-hidden): Document new option.

	binutils/testsuite/
	* binutils-all/localize-hidden-1.s,
	* binutils-all/localize-hidden-1.d,
	* binutils-all/localize-hidden-2.s,
	* binutils-all/localize-hidden-2.d: New tests.
	* binutils-all/objcopy.exp: Run them.

2006-06-22  Richard Sandiford  <richard@@codesourcery.com>

@


1.1.14.50
log
@bfd/
2006-07-12  Matthew R. Dempsky  <mrd@@alkemio.org>

	* cpu-m68k.c (bfd_m68k_compatible): Handle CPU32.

ld/testsuite/
2006-07-12  Richard Sandiford  <richard@@codesourcery.com>

	* ld-m68k/merge-ok-1c.d: New test.
	* ld-m68k/m68k.exp: Run it.
@
text
@a0 15
2006-07-12  Richard Sandiford  <richard@@codesourcery.com>

	Backport from mainline:

	bfd/
	2006-07-12  Matthew R. Dempsky  <mrd@@alkemio.org>

	* cpu-m68k.c (bfd_m68k_compatible): Handle CPU32.

	ld/testsuite/
	2006-07-12  Richard Sandiford  <richard@@codesourcery.com>

	* ld-m68k/merge-ok-1c.d: New test.
	* ld-m68k/m68k.exp: Run it.

@


1.1.14.51
log
@2006-07-14  Nathan Sidwell  <nathan@@codesourcery.com>

	bfd/
	* config.bfd (sh-*-uclinux, sh[12]-*-uclinux): New stanza.

	gas/
	* configure.tgt (sh-*-uclinux, sh[12]-*-uclinux): Specify as elf.

	ld/
	* Makefile.am (ALL_EMULATIONS): Add eshelf_uclinux.o
	(eshelf_uclinux.c): New target.
	* Makefile.in: Rebuilt.
	* configure.tgt (sh-*-uclinux* | sh[12]-*-uclinux*): New stanza.
	* emulparams/shelf_uclinux.sh: New.
@
text
@a0 15
2006-07-14  Nathan Sidwell  <nathan@@codesourcery.com>

	bfd/
	* config.bfd (sh-*-uclinux, sh[12]-*-uclinux): New stanza.

	gas/
	* configure.tgt (sh-*-uclinux, sh[12]-*-uclinux): Specify as elf.

	ld/
	* Makefile.am (ALL_EMULATIONS): Add eshelf_uclinux.o
	(eshelf_uclinux.c): New target.
	* Makefile.in: Rebuilt.
	* configure.tgt (sh-*-uclinux* | sh[12]-*-uclinux*): New stanza.
	* emulparams/shelf_uclinux.sh: New.

@


1.1.14.52
log
@2006-07-18  Paul Brook  <paul@@codesourcery.com>

	Merge from mainline.
	bfd/
	* bfd-in2.h: Regenerate.
	* libbfd.h: Regenerate.
	* reloc.c: Add BFD_RELOC_ARM_T32_ADD_IMM.

	gas/
	* tc-arm.c (do_t_add_sub): Use addw/subw when source is PC.
	(md_convert_frag): Use correct reloc for add_pc.  Use
	BFD_RELOC_ARM_T32_ADD_IMM for normal add/sum.
	(md_apply_fix): Handle BFD_RELOC_ARM_T32_ADD_IMM.
	(arm_force_relocation): Handle BFD_RELOC_ARM_T32_ADD_IMM.

	gas/testsuite/
	* gas/arm/thumb2_add.d: New test.
	* gas/arm/thumb2_add.s: New test.
@
text
@a0 19
2006-07-18  Paul Brook  <paul@@codesourcery.com>

	Merge from mainline.
	bfd/
	* bfd-in2.h: Regenerate.
	* libbfd.h: Regenerate.
	* reloc.c: Add BFD_RELOC_ARM_T32_ADD_IMM.

	gas/
	* tc-arm.c (do_t_add_sub): Use addw/subw when source is PC.
	(md_convert_frag): Use correct reloc for add_pc.  Use
	BFD_RELOC_ARM_T32_ADD_IMM for normal add/sum.
	(md_apply_fix): Handle BFD_RELOC_ARM_T32_ADD_IMM.
	(arm_force_relocation): Handle BFD_RELOC_ARM_T32_ADD_IMM.

	gas/testsuite/
	* gas/arm/thumb2_add.d: New test.
	* gas/arm/thumb2_add.s: New test.

@


1.1.14.53
log
@2006-07-19  Paul Brook  <paul@@codesourcery.com>

	Backport from mainline.
	gas/
	* config/tc-arm.c (insns): Fix rbit Arm opcode.
	gas/testsuite/
	* gas/arm/archv6t2.d: Adjust expected output for rbit.
	opcodes/
	* armd-dis.c (arm_opcodes): Fix rbit opcode.
@
text
@a0 10
2006-07-19  Paul Brook  <paul@@codesourcery.com>

	Backport from mainline.
	gas/
	* config/tc-arm.c (insns): Fix rbit Arm opcode.
	gas/testsuite/
	* gas/arm/archv6t2.d: Adjust expected output for rbit.
	opcodes/
	* armd-dis.c (arm_opcodes): Fix rbit opcode.

d3 1
a3 1
	Backport from mainline.
@


1.1.14.54
log
@	Backport from mainline.

	opcodes/
	* arm-dis.c (coprocessor): Alter fmsrr disassembly syntax.

	gas/testsuite/
	* gas/arm/vfp-neon-syntax.d: Tweak expected fmsrr syntax.
	* gas/arm/vfp-neon-syntax_t2.d: Likewise.
	* gas/arm/vfp2.d: Likewise.
	* gas/arm/vfp2_t2.d: Likewise.
@
text
@a0 13
2006-07-20  Julian Brown  <julian@@codesourcery.com>

	Backport from mainline.

	opcodes/
	* arm-dis.c (coprocessor): Alter fmsrr disassembly syntax.

	gas/testsuite/
	* gas/arm/vfp-neon-syntax.d: Tweak expected fmsrr syntax.
	* gas/arm/vfp-neon-syntax_t2.d: Likewise.
	* gas/arm/vfp2.d: Likewise.
	* gas/arm/vfp2_t2.d: Likewise.

@


1.1.14.55
log
@opcodes/
	* m68k-opc.c (m68k_opcodes): Fix operand specificer in the Coldfire
	"fdaddl" entry.

gas/testsuite/
	* gas/m68k/mcf-fpu.s: Add tests for all addressing modes.
	* gas/m68k/mcf-fpu.d: Update accordingly.
@
text
@a0 10
2006-07-26  Richard Sandiford  <richard@@codesourcery.com>

	opcodes/
	* m68k-opc.c (m68k_opcodes): Fix operand specificer in the Coldfire
	"fdaddl" entry.

	gas/testsuite/
	* gas/m68k/mcf-fpu.s: Add tests for all addressing modes.
	* gas/m68k/mcf-fpu.d: Update accordingly.

@


1.1.14.56
log
@	bfd/
	* Makefile.am: (VERSUFFIX_s): New. Pass it to compiler
	via -D.
	* Makefile.in: Regenerated.
	* configure: Regenerated.
	* configure.in: Add --with-versuffix option.
	* version.h: Add BFD_VERSION_SUFFIX, use it
	in BFD_VERSION_STRING.

	binutils/
	* Makefile.am: (REPORT_BUGS_TO_s): New. Pass it to compiler
	via -D.
	* Makefile.in: Regenerated.
	* configure: Regenerated.
	* configure.in: Add --with-bugurl option.

	gas/
	* Makefile.am: (REPORT_BUGS_TO_s): New. Pass it to compiler
	via -D.
	* Makefile.in: Regenerated.
	* configure: Regenerated.
	* configure.in: Add --with-bugurl option.

	gprof/
	* Makefile.am: (VERSUFFIX_s, REPORT_BUGS_TO_s): New. Pass
	them to compiler via -D.
	* Makefile.in: Regenerated.
	* configure: Regenerated.
	* configure.in: Add --with-versuffix and --with-bugurl option.
	* gprof.c: Print version suffix.

	ld/
	* Makefile.am: (REPORT_BUGS_TO_s): New. Pass it to compiler
	via -D.
	* Makefile.in: Regenerated.
	* configure: Regenerated.
	* configure.in: Add --with-bugurl option.
@
text
@a0 40
2006-07-26  Vladimir Prus  <vladimir@@codesourcery.com>
	
	bfd/
	* Makefile.am: (VERSUFFIX_s): New. Pass it to compiler
	via -D.
	* Makefile.in: Regenerated.
	* configure: Regenerated.
	* configure.in: Add --with-versuffix option.
	* version.h: Add BFD_VERSION_SUFFIX, use it 
	in BFD_VERSION_STRING.
	
	binutils/
	* Makefile.am: (REPORT_BUGS_TO_s): New. Pass it to compiler
	via -D.
	* Makefile.in: Regenerated.
	* configure: Regenerated.
	* configure.in: Add --with-bugurl option.

	gas/
	* Makefile.am: (REPORT_BUGS_TO_s): New. Pass it to compiler
	via -D.
	* Makefile.in: Regenerated.
	* configure: Regenerated.
	* configure.in: Add --with-bugurl option.

	gprof/
	* Makefile.am: (VERSUFFIX_s, REPORT_BUGS_TO_s): New. Pass 
	them to compiler via -D.
	* Makefile.in: Regenerated.
	* configure: Regenerated.
	* configure.in: Add --with-versuffix and --with-bugurl option.
	* gprof.c: Print version suffix.

	ld/
	* Makefile.am: (REPORT_BUGS_TO_s): New. Pass it to compiler
	via -D.
	* Makefile.in: Regenerated.
	* configure: Regenerated.
	* configure.in: Add --with-bugurl option.

d4 1
a4 1
	* m68k-opc.c (m68k_opcodes): Fix operand specifier in the Coldfire
@


1.1.14.57
log
@
2006-07-27  Carlos O'Donell  <carlos@@codesourcery.com>

	bfd/
	* elfxx-mips.c (_bfd_mips_elf_print_private_bfd_data):
	Print EF_MIPS_NOREORDER, EF_MIPS_PIC, EF_MIPS_CPIC, EF_MIPS_XGOT
	and EF_MIPS_UCODE.
@
text
@a0 7
2006-07-27  Carlos O'Donell  <carlos@@codesourcery.com>

	bfd/
	* elfxx-mips.c (_bfd_mips_elf_print_private_bfd_data):
	Print EF_MIPS_NOREORDER, EF_MIPS_PIC, EF_MIPS_CPIC, EF_MIPS_XGOT
	and EF_MIPS_UCODE.

@


1.1.14.58
log
@	Backport from mainline.

	gas/
	* config/tc-arm.c (parse_operands): Handle invalid register name
	for OP_RIWR_RIWC.

	gas/testsuite/
	* gas/arm/iwmmxt-bad.s: Test invalid register names for wldrw and
	wstrw.
	* gas/arm/iwmmxt-bad.l: Update.

	gas/
	* config/tc-arm.c (enum operand_parse_code): Add OP_RIWC_RIWG.
	(parse_operands): Handle it.
	(insns): Use it for tmcr and tmrc.

	gas/testsuite/
	* gas/arm/iwmmxt.s: Test tmcr and tmrc with wcgr registers.
	* gas/arm/iwmmxt.d: Update.
@
text
@a0 22
2006-08-03  Joseph Myers  <joseph@@codesourcery.com>

	Backport from mainline.

	gas/
	* config/tc-arm.c (parse_operands): Handle invalid register name
	for OP_RIWR_RIWC. 

	gas/testsuite/
	* gas/arm/iwmmxt-bad.s: Test invalid register names for wldrw and
	wstrw.
	* gas/arm/iwmmxt-bad.l: Update.

	gas/
	* config/tc-arm.c (enum operand_parse_code): Add OP_RIWC_RIWG.
	(parse_operands): Handle it.
	(insns): Use it for tmcr and tmrc.

	gas/testsuite/
	* gas/arm/iwmmxt.s: Test tmcr and tmrc with wcgr registers.
	* gas/arm/iwmmxt.d: Update.

@


1.1.14.59
log
@        * config/tc-arm.c (s_arm_unwind_save_vfp_armv6): New.  Parse
        a directive saving VFP registers for ARMv6 or later.
        (s_arm_unwind_save): Add parameter arch_v6 and call
        s_arm_unwind_save_vfp or s_arm_unwind_save_vfp_armv6 as
        appropriate.
        (md_pseudo_table): Add entry for new "vsave" directive.
        * doc/c-arm.texi: Correct error in example for "save"
        directive (fstmdf -> fstmdx).  Also document "vsave" directive.
@
text
@a0 11
2006-08-15  Mark Shinwell  <shinwell@@codesourcery.com>

	* config/tc-arm.c (s_arm_unwind_save_vfp_armv6): New.  Parse
	a directive saving VFP registers for ARMv6 or later.
	(s_arm_unwind_save): Add parameter arch_v6 and call
	s_arm_unwind_save_vfp or s_arm_unwind_save_vfp_armv6 as
	appropriate.
	(md_pseudo_table): Add entry for new "vsave" directive.
	* doc/c-arm.texi: Correct error in example for "save"
	directive (fstmdf -> fstmdx).  Also document "vsave" directive.

@


1.1.14.60
log
@Correction to add missing "gas/" from previous ChangeLog.csl entry.
@
text
@a2 1
	gas/
@


1.1.14.61
log
@	* config/tc-arm.c (opcode_lookup): Allow Neon type suffixes to be
	recognized in non-unified syntax mode.
@
text
@a0 5
2006-08-16  Julian Brown  <julian@@codesourcery.com>

	* config/tc-arm.c (opcode_lookup): Allow Neon type suffixes to be
	recognized in non-unified syntax mode.

@


1.1.14.62
log
@	gas/
	* config/tc-arm.c (md_assemble): Improve diagnostic when attempting
	to use ARM instructions on non-ARM-supporting cores.
	(autoselect_thumb_from_cpu_variant): New function. Switch on Thumb
	mode automatically based on cpu variant.
	(md_begin): Call above function.

	gas/testsuite/
	* gas/arm/noarm.s: Add test for disabled ARM insns.
	* gas/arm/noarm.d: Drive test for above.
	* gas/arm/noarm.l: Expected error output.
@
text
@a2 15
	gas/
	* config/tc-arm.c (md_assemble): Improve diagnostic when attempting
	to use ARM instructions on non-ARM-supporting cores.
	(autoselect_thumb_from_cpu_variant): New function. Switch on Thumb
	mode automatically based on cpu variant.
	(md_begin): Call above function.

	gas/testsuite/
	* gas/arm/noarm.s: Add test for disabled ARM insns.
	* gas/arm/noarm.d: Drive test for above.
	* gas/arm/noarm.l: Expected error output.

2006-08-16  Julian Brown  <julian@@codesourcery.com>

	gas/
@


1.1.14.63
log
@	* arm-dis.c (print_insn_neon): Disassemble 32-bit immediates as
	signed on 64-bit hosts.
@
text
@a0 6
2006-08-18  Julian Brown  <julian@@codesourcery.com>

	opcodes/
	* arm-dis.c (print_insn_neon): Disassemble 32-bit immediates as
	signed on 64-bit hosts.

@


1.1.14.64
log
@	libiberty/
	* floatformat.c (get_field): Fix segfault with little-endian word
	order on 64-bit hosts.
	(put_field): Likewise.
	(min): Move definition.
@
text
@a2 8
	libiberty/
	* floatformat.c (get_field): Fix segfault with little-endian word
	order on 64-bit hosts.
	(put_field): Likewise.
	(min): Move definition.

2006-08-18  Julian Brown  <julian@@codesourcery.com>

@


1.1.14.65
log
@2006-08-18  Paul Brook  <paul@@codesourcery.com>

	Backport from mainline.
	bfd/
	* elf32-arm.c (elf32_arm_link_hash_entry): Add export_glue.
	(elf32_arm_link_hash_newfunc): Initialize export_glue.
	(record_arm_to_thumb_glue): Return stub symbol.
	(elf32_arm_create_thumb_stub): New function.
	(elf32_arm_to_thumb_stub): Use it.
	(elf32_arm_to_thumb_export_stub): New function.
	(elf32_arm_begin_write_processing): New function.
	(allocate_dynrelocs): Allocate Arm stubs.
	(elf_backend_begin_write_processing): Define.
	(elf32_arm_symbian_begin_write_processing): Remove ATTRIBUTE_UNUSED.
	Call elf32_arm_begin_write_processing.

	ld/
	* emultempl/armelf.em (arm_elf_before_allocation): Call
	gld${EMULATION_NAME}_before_allocation after setting interworking bfd.

	ld/testsuite/
	* ld-arm/arm-elf.exp (armelftests): Add armthumb-lib.so.  Add
	-use-blx to mixed-lib.so
	* ld-arm/armthumb-lib.d: New file.
	* ld-arm/armthumb-lib.sym: New file.
@
text
@a0 26
2006-08-18  Paul Brook  <paul@@codesourcery.com>

	Backport from mainline.
	bfd/
	* elf32-arm.c (elf32_arm_link_hash_entry): Add export_glue.
	(elf32_arm_link_hash_newfunc): Initialize export_glue.
	(record_arm_to_thumb_glue): Return stub symbol.
	(elf32_arm_create_thumb_stub): New function.
	(elf32_arm_to_thumb_stub): Use it.
	(elf32_arm_to_thumb_export_stub): New function.
	(elf32_arm_begin_write_processing): New function.
	(allocate_dynrelocs): Allocate Arm stubs.
	(elf_backend_begin_write_processing): Define.
	(elf32_arm_symbian_begin_write_processing): Remove ATTRIBUTE_UNUSED.
	Call elf32_arm_begin_write_processing.

	ld/
	* emultempl/armelf.em (arm_elf_before_allocation): Call
	gld${EMULATION_NAME}_before_allocation after setting interworking bfd.

	ld/testsuite/
	* ld-arm/arm-elf.exp (armelftests): Add armthumb-lib.so.  Add
	-use-blx to mixed-lib.so
	* ld-arm/armthumb-lib.d: New file.
	* ld-arm/armthumb-lib.sym: New file.

@


1.1.14.66
log
@	gas/
	* config/tc-arm.c (s_arm_unwind_save_mmxwr): Correct condition for
	merging with previous long opcode.

	gas/testsuite/
	* gas/arm/unwind.s: Test not merging iWMMXt register save with
	previous long opcode.
	* gas/arm/unwind.d, gas/arm/unwind_vxworks.d: Update.
@
text
@a0 11
2006-08-19  Joseph Myers  <joseph@@codesourcery.com>

	gas/
	* config/tc-arm.c (s_arm_unwind_save_mmxwr): Correct condition for
	merging with previous long opcode.

	gas/testsuite/
	* gas/arm/unwind.s: Test not merging iWMMXt register save with
	previous long opcode.
	* gas/arm/unwind.d, gas/arm/unwind_vxworks.d: Update.

@


1.1.14.67
log
@	bfd/
	* elf32-arm.c (elf32_arm_link_hash_table): Correct typo in
	comment for target1_is_rel.
@
text
@a0 6
2006-08-21  Mark Shinwell  <shinwell@@codesourcery.com>

	bfd/
	* elf32-arm.c (elf32_arm_link_hash_table): Correct typo in
	comment for target1_is_rel.

@


1.1.14.68
log
@Merge changes between binutils-csl-2_17-branchpoint and
binutils-2_17, except for the addition of generated files to CVS.
@
text
@a0 5
2006-08-22  Joseph Myers  <joseph@@codesourcery.com>

	Merge changes between binutils-csl-2_17-branchpoint and
	binutils-2_17, except for the addition of generated files to CVS.

@


1.1.14.69
log
@	bfd/
	* elf32-arm.c (elf32_arm_final_link_relocate): Add cases
	for R_ARM_ABS32_NOI and R_ARM_REL32_NOI.
	(elf32_arm_gc_sweep_hook): Likewise.
	(elf32_arm_check_relocs): Likewise.
	(allocate_dynrelocs): Likewise.
@
text
@a0 9
2006-08-24  Mark Shinwell  <shinwell@@codesourcery.com>

	bfd/
	* elf32-arm.c (elf32_arm_final_link_relocate): Add cases
	for R_ARM_ABS32_NOI and R_ARM_REL32_NOI.
	(elf32_arm_gc_sweep_hook): Likewise.
	(elf32_arm_check_relocs): Likewise.
	(allocate_dynrelocs): Likewise.

@


1.1.14.70
log
@	bfd/
	* elf32-arm.c (elf32_arm_howto_table_1): Change offset for
	R_THM_CALL to 25 and remove FIXME comment.
	(using_thumb2): New function.
	(elf32_arm_final_link_relocate): Cope with Thumb-2 BL encoding.

	ld/testsuite/
	* arm-elf.exp: Add thumb1-bl, thumb2-bl, thumb2-bl-as-thumb1-bad
	and thumb2-bl-bad tests.
	* thumb1-bl.d: New.
	* thumb1-bl.s: New.
	* thumb2-bl-as-thumb1-bad.d: New.
	* thumb2-bl-as-thumb1-bad.s: New.
	* thumb2-bl-bad.d: New.
	* thumb2-bl-bad.s: New.
	* thumb2-bl.d: New.
	* thumb2-bl.s: New.
@
text
@a3 20
	* elf32-arm.c (elf32_arm_howto_table_1): Change offset for
	R_THM_CALL to 25 and remove FIXME comment.
	(using_thumb2): New function.
	(elf32_arm_final_link_relocate): Cope with Thumb-2 BL encoding.

	ld/testsuite/
	* arm-elf.exp: Add thumb1-bl, thumb2-bl, thumb2-bl-as-thumb1-bad
	and thumb2-bl-bad tests.
	* thumb1-bl.d: New.
	* thumb1-bl.s: New.
	* thumb2-bl-as-thumb1-bad.d: New.
	* thumb2-bl-as-thumb1-bad.s: New.
	* thumb2-bl-bad.d: New.
	* thumb2-bl-bad.s: New.
	* thumb2-bl.d: New.
	* thumb2-bl.s: New.

2006-08-24  Mark Shinwell  <shinwell@@codesourcery.com>

	bfd/
@


1.1.14.71
log
@	ld/
	* ldexp.c (fold_name): Loadaddrs of sections with an lma_region
	are absolute.

	ld/testsuite/
	* ld-elf/loadaddr3.t: New.
	* ld-elf/loadaddr3a.d: New.
	* ld-elf/loadaddr3b.d: New.
@
text
@a0 11
2006-08-29  Nathan Sidwell  <nathan@@codesourcery.com>

	ld/
	* ldexp.c (fold_name): Loadaddrs of sections with an lma_region
	are absolute.

	ld/testsuite/
	* ld-elf/loadaddr3.t: New.
	* ld-elf/loadaddr3a.d: New.
	* ld-elf/loadaddr3b.d: New.

@


1.1.14.72
log
@	ld/
	Backport 2006-08-28  Alan Modra  <amodra@@bigpond.net.au>
	* scripttempl/elf.sc: Ensure that crtbegin and crtend entries will
	not match random object files in a path containing "crtbegin" or
	"crtend" as part of a directory name.
	* scripttempl/armbpabi.sc: Likewise.
	* scripttempl/crisaout.sc: Likewise.
	* scripttempl/elf32crx.sc: Likewise.
	* scripttempl/elf32sh-symbian.sc: Likewise.
	* scripttempl/elf_chaos.sc: Likewise.
	* scripttempl/elfd10v.sc: Likewise.
	* scripttempl/elfd30v.sc: Likewise.
	* scripttempl/elfxtensa.sc: Likewise.
	* scripttempl/iq2000.sc: Likewise.
	* scripttempl/mmo.sc: Likewise.
	* scripttempl/xstormy16.sc: Likewise.
@
text
@a3 19
	Backport 2006-08-28  Alan Modra  <amodra@@bigpond.net.au>
	* scripttempl/elf.sc: Ensure that crtbegin and crtend entries will
	not match random object files in a path containing "crtbegin" or
	"crtend" as part of a directory name.
	* scripttempl/armbpabi.sc: Likewise.
	* scripttempl/crisaout.sc: Likewise.
	* scripttempl/elf32crx.sc: Likewise.
	* scripttempl/elf32sh-symbian.sc: Likewise.
	* scripttempl/elf_chaos.sc: Likewise.
	* scripttempl/elfd10v.sc: Likewise.
	* scripttempl/elfd30v.sc: Likewise.
	* scripttempl/elfxtensa.sc: Likewise.
	* scripttempl/iq2000.sc: Likewise.
	* scripttempl/mmo.sc: Likewise.
	* scripttempl/xstormy16.sc: Likewise.

2006-08-29  Nathan Sidwell  <nathan@@codesourcery.com>

	ld/
@


1.1.14.73
log
@	* ldlang.c (walk_wild): Allow * to glob '/' in wildcarded match.
@
text
@a2 4
	* ldlang.c (walk_wild): Allow * to glob '/' in wildcarded match.

2006-08-29  Nathan Sidwell  <nathan@@codesourcery.com>

@


1.1.14.74
log
@Add comment about my ldexp.c change
@
text
@a26 1
	This is fixed differently (and more intrusively) upstream.
@


1.1.14.75
log
@        bfd/
        * elf32-arm.c (elf32_arm_final_link_relocate): Add support for
        R_ARM_MOVW_BREL_NC, R_ARM_MOVW_BREL, R_ARM_MOVT_BREL,
        R_ARM_THM_MOVW_BREL_NC, R_ARM_THM_MOVW_BREL and
        R_ARM_THM_MOVT_BREL relocations.
@
text
@a0 8
2006-08-30  Mark Shinwell  <shinwell@@codesourcery.com>

	bfd/
	* elf32-arm.c (elf32_arm_final_link_relocate): Add support for
	R_ARM_MOVW_BREL_NC, R_ARM_MOVW_BREL, R_ARM_MOVT_BREL,
	R_ARM_THM_MOVW_BREL_NC, R_ARM_THM_MOVW_BREL and
	R_ARM_THM_MOVT_BREL relocations.

@


1.1.14.76
log
@	ld/testsuite/
	* ld-scripts/crossref.exp: XFAIL third test on mips*-*-linux*.
@
text
@a0 5
2006-08-31  Joseph Myers  <joseph@@codesourcery.com>

	ld/testsuite/
	* ld-scripts/crossref.exp: XFAIL third test on mips*-*-linux*.

@


1.1.14.77
log
@        bfd/
        * elf32-arm.c (elf32_arm_howto_table_1): Adjust entries for
        R_ARM_THM_ALU_PREL_11_0 and R_ARM_THM_PC12 relocations.
        (elf32_arm_final_link_relocate): Handle R_ARM_THM_ALU_PREL_11_0
        and R_ARM_THM_PC12 relocations.
@
text
@a0 8
2006-08-31  Mark Shinwell  <shinwell@@codesourcery.com>

	bfd/
	* elf32-arm.c (elf32_arm_howto_table_1): Adjust entries for
	R_ARM_THM_ALU_PREL_11_0 and R_ARM_THM_PC12 relocations.
	(elf32_arm_final_link_relocate): Handle R_ARM_THM_ALU_PREL_11_0
	and R_ARM_THM_PC12 relocations.

@


1.1.14.78
log
@	ld/testsuite/
	* ld-elf/loadaddr.s: Copy from mainline.
@
text
@a0 5
2006-09-01  Nathan Sidwell  <nathan@@codesourcery.com>

	ld/testsuite/
	* ld-elf/loadaddr.s: Copy from mainline.

a23 1
	ld/
@


1.1.14.79
log
@        bfd/
        * elf32-arm.c (elf32_arm_howto_table_1): Correct masks for
        R_ARM_THM_PC12 relocation.
@
text
@a0 6
2006-09-01  Mark Shinwell  <shinwell@@codesourcery.com>

	bfd/
	* elf32-arm.c (elf32_arm_howto_table_1): Correct masks for
	R_ARM_THM_PC12 relocation.

@


1.1.14.80
log
@2006-09-04  Paul Brook  <paul@@codesourcery.com>

	gas/
	* config/tc-arm.c (do_neon_dyadic_if_i): Remove.
	(do_neon_dyadic_if_i_d): Avoid setting U bit.
	(do_neon_mac_maybe_scalar): Ditto.
	(do_neon_dyadic_narrow): Force operand type to NT_integer.
	(insns): Remove out of date comments.

	gas/testsuite/
	* gas/arm/neon-cov.s: Test .u and .s aliases for .i suffixes.
	* gas/arm/neon-cov.d: Adjust expected output.

	opcodes/
	* arm-dis.c (neon_opcode): Fix suffix on VMOVN.
@
text
@a0 16
2006-09-04  Paul Brook  <paul@@codesourcery.com>

	gas/
	* config/tc-arm.c (do_neon_dyadic_if_i): Remove.
	(do_neon_dyadic_if_i_d): Avoid setting U bit.
	(do_neon_mac_maybe_scalar): Ditto.
	(do_neon_dyadic_narrow): Force operand type to NT_integer.
	(insns): Remove out of date comments.

	gas/testsuite/
	* gas/arm/neon-cov.s: Test .u and .s aliases for .i suffixes.
	* gas/arm/neon-cov.d: Adjust expected output.

	opcodes/
	* arm-dis.c (neon_opcode): Fix suffix on VMOVN.

@


1.1.14.81
log
@	gas/
	* config/tc-arm.c (parse_qfloat_immediate): Disallow integer syntax for
	floating-point immediates.
@
text
@a0 6
2006-09-05  Julian Brown  <julian@@codesourcery.com>

	gas/
	* config/tc-arm.c (parse_qfloat_immediate): Disallow integer syntax for
	floating-point immediates.

@


1.1.14.82
log
@2006-09-05  Vladimir Prus  <vladimir@@codesourcery.com>

	bfd/
	* elf32-arm.c (elf32_arm_swap_symbol_out): Remove
	unconditionall setting of low bit for Thumb symbol
	mistakenly left behind after check for external
	symbols was added.

	ld/testsuite/
	* ld-arm/use-thumb-lib.sym: Use regexps instead of
	absolute addresses, for robustness.
@
text
@a0 12
2006-09-05  Vladimir Prus  <vladimir@@codesourcery.com>

	bfd/
	* elf32-arm.c (elf32_arm_swap_symbol_out): Remove
	unconditionall setting of low bit for Thumb symbol
	mistakenly left behind after check for external
	symbols was added.

	ld/testsuite/
	* ld-arm/use-thumb-lib.sym: Use regexps instead of
	absolute addresses, for robustness.

@


1.1.14.83
log
@	gas/
	* config/tc-arm.c (parse_qfloat_immediate): Fix hex immediates,
	handle 0.0 and -0.0 specially.

	gas/testsuite/
	* gas/arm/neon-const.s: Use FP syntax for 0/-0.
	* gas/arm/vfp-neon-syntax-inc.s: Likewise, for 1.
@
text
@a0 10
2006-09-05  Julian Brown  <julian@@codesourcery.com>

	gas/
	* config/tc-arm.c (parse_qfloat_immediate): Fix hex immediates,
	handle 0.0 and -0.0 specially.

	gas/testsuite/
	* gas/arm/neon-const.s: Use FP syntax for 0/-0.
	* gas/arm/vfp-neon-syntax-inc.s: Likewise, for 1.

@


1.1.14.84
log
@2006-09-06  Paul Brook  <paul@@codesourcery.com>

	gas/
	* config/tc-arm.c (parse_operands): Mark operand as present.

	gas/testsuite/
	* gas/arm/neon-omit.s: Test three-argument variants.
	* gas/arm/neon-omit.d: Update expected output.
@
text
@a0 9
2006-09-06  Paul Brook  <paul@@codesourcery.com>

	gas/
	* config/tc-arm.c (parse_operands): Mark operand as present.

	gas/testsuite/
	* gas/arm/neon-omit.s: Test three-argument variants.
	* gas/arm/neon-omit.d: Update expected output.

@


1.1.14.85
log
@2006-09-07  Paul Brook  <paul@@codesourcery.com>

	gas/
	* config/tc-arm.c (insns): Allow ARM IT pseudo-insn on all cores.

	gas/testsuite/
	* gas/arm/arm-it.s: New test.
	* gas/arm/arm-it.d: New test.
@
text
@a0 9
2006-09-07  Paul Brook  <paul@@codesourcery.com>

	gas/
	* config/tc-arm.c (insns): Allow ARM IT pseudo-insn on all cores.

	gas/testsuite/
	* gas/arm/arm-it.s: New test.
	* gas/arm/arm-it.d: New test.

@


1.1.14.86
log
@	gas/testsuite/
	Backport
	2006-09-08  Kazu Hirata  <kazu@@codesourcery.com>

	* lib/gas-dg.exp (gas-dg-test): Treat $dir as a literal.
@
text
@a0 8
2006-09-08  Kazu Hirata  <kazu@@codesourcery.com>

	gas/testsuite/
	Backport
	2006-09-08  Kazu Hirata  <kazu@@codesourcery.com>

	* lib/gas-dg.exp (gas-dg-test): Treat $dir as a literal.

@


1.1.14.87
log
@missing changelog
@
text
@a8 8
2006-09-07  Mark Mitchell  <mark@@codesourcery.com>
            Nathan Sidwell  <nathan@@codesourcery.com>
	    Vladimir Prus  <vladimir@@codesourcery.com>

        * configure.in (TOPLEVEL_CONFIGURE_ARGUMENTS, baseargs): Fix
        quoting.
        * configure: Regenerated.

@


1.1.14.88
log
@2006-09-08  Paul Brook  <paul@@codesourcery.com>

	gas/
	* config/tc-arm.c (object_arch): New variable.
	(s_arm_object_arch): New function.
	(md_pseudo_table): Add object_arch.
	(aeabi_set_public_attributes): Obey object_arch.
	* doc/c-arm.texi: Document .object_arch.
@
text
@a0 9
2006-09-08  Paul Brook  <paul@@codesourcery.com>

	gas/
	* config/tc-arm.c (object_arch): New variable.
	(s_arm_object_arch): New function.
	(md_pseudo_table): Add object_arch.
	(aeabi_set_public_attributes): Obey object_arch.
	* doc/c-arm.texi: Document .object_arch.

@


1.1.14.89
log
@	bfd/
	* Makefile.am (VERSUFFIX_s): Remove.
	(bfdver.h): Replace bfd_version_suffix with bfd_version_package.
	* configure.in: Replace --with-versuffix with --with-pkgversion.
	* version.h: Remove BFD_VERSION_SUFFIX. Update BFD_VERSION_STRING.
	* Makefile.in: Rebuilt.
	* configure: Rebuilt.

	binutils/
	* Makefile.am (REPORT_BUGS_TO_s): Replace with ...
	(REPORT_BUGS_TO): ... this.
	(INCLUDES): Update.
	* Makefile.in: Rebuilt.

	gas/
	* Makefile.am (REPORT_BUGS_TO_s): Replace with ...
	(REPORT_BUGS_TO): ... this.
	(INCLUDES, DEP_INCLUDES): Update.
	* Makefile.in: Rebuilt.

	gprof/
	* Makefile.am (REPORT_BUGS_TO_s): Replace with ...
	(REPORT_BUGS_TO): ... this.
	(VERSUFFIX_s): Remove.
	(INCLUDES): Update.
	* configure.in: Replace --with-versuffix with --with-pkgversion.
	* gprof.c (main): Update version printing.
	* Makefile.in: Rebuilt.
	* configure: Rebuilt.

	ld/
	* Makefile.am (REPORT_BUGS_TO_s): Replace with ...
	(REPORT_BUGS_TO): ... this.
	(INCLUDES): Update.
	* Makefile.in: Rebuilt.
@
text
@a0 38
2006-09-10  Nathan Sidwell  <nathan@@codesourcery.com>

	bfd/
	* Makefile.am (VERSUFFIX_s): Remove.
	(bfdver.h): Replace bfd_version_suffix with bfd_version_package.
	* configure.in: Replace --with-versuffix with --with-pkgversion.
	* version.h: Remove BFD_VERSION_SUFFIX. Update BFD_VERSION_STRING.
	* Makefile.in: Rebuilt.
	* configure: Rebuilt.

	binutils/
	* Makefile.am (REPORT_BUGS_TO_s): Replace with ...
	(REPORT_BUGS_TO): ... this.
	(INCLUDES): Update.
	* Makefile.in: Rebuilt.

	gas/
	* Makefile.am (REPORT_BUGS_TO_s): Replace with ...
	(REPORT_BUGS_TO): ... this.
	(INCLUDES, DEP_INCLUDES): Update.
	* Makefile.in: Rebuilt.

	gprof/
	* Makefile.am (REPORT_BUGS_TO_s): Replace with ...
	(REPORT_BUGS_TO): ... this.
	(VERSUFFIX_s): Remove.
	(INCLUDES): Update.
	* configure.in: Replace --with-versuffix with --with-pkgversion.
	* gprof.c (main): Update version printing.
	* Makefile.in: Rebuilt.
	* configure: Rebuilt.

	ld/
	* Makefile.am (REPORT_BUGS_TO_s): Replace with ...
	(REPORT_BUGS_TO): ... this.
	(INCLUDES): Update.
	* Makefile.in: Rebuilt.

@


1.1.14.90
log
@	gas/
	* config/tc-m68k.c (m68k_register_mcf5210a_ctrl): New.
	(m68k_cpus): Add 5210a & 5211a.
@
text
@a0 6
2006-09-11  Nathan Sidwell  <nathan@@codesourcery.com>

	gas/
	* config/tc-m68k.c (m68k_register_mcf5210a_ctrl): New.
	(m68k_cpus): Add 5210a & 5211a.

@


1.1.14.91
log
@2006-09-14  Paul Brook  <paul@@codesourcery.com>

	ld/
	* Makefile.in: Regenerate.
@
text
@a0 5
2006-09-14  Paul Brook  <paul@@codesourcery.com>

	ld/
	* Makefile.in: Regenerate.

@


1.1.14.92
log
@	gas/
	* config/tc-arm.c (parse_immediate): Add BOUNDED parameter, rename
	to...
	(parse_immediate_maybe_bounded): This. Only bounds-check if BOUNDED
	is true.
	(parse_immediate_bounded): New function, with same arguments and
	semantics as previous parse_immediate.
	(parse_immediate_unbounded): New function. Parse an unbounded
	integer (with sizeof (exp.X_add_number)).
	(parse_big_immediate): Allow for 64-bit exp.X_add_number when
	parsing 64-bit immediates.
	(parse_address_main): Use parse_immediate_bounded not
	parse_immediate.
	(parse_ror): Likewise.
	(parse_operands): Likewise. For Neon immediates, use
	parse_immediate_unbounded. Add new local po_imm_unb_or_fail macro.
@
text
@a0 19
2006-09-14  Julian Brown  <julian@@codesourcery.com>

	gas/
	* config/tc-arm.c (parse_immediate): Add BOUNDED parameter, rename
	to...
	(parse_immediate_maybe_bounded): This. Only bounds-check if BOUNDED
	is true.
	(parse_immediate_bounded): New function, with same arguments and
	semantics as previous parse_immediate.
	(parse_immediate_unbounded): New function. Parse an unbounded
	integer (with sizeof (exp.X_add_number)).
	(parse_big_immediate): Allow for 64-bit exp.X_add_number when
	parsing 64-bit immediates.
	(parse_address_main): Use parse_immediate_bounded not
	parse_immediate.
	(parse_ror): Likewise.
	(parse_operands): Likewise. For Neon immediates, use
	parse_immediate_unbounded. Add new local po_imm_unb_or_fail macro.

@


1.1.14.93
log
@2006-09-14  Paul Brook  <paul@@codesourcery.com>

	* config/tc-arm.c (thumb32_negate_data_op): Consistently use
	unsigned int to avoid 64-bit host problems.
@
text
@a0 5
2006-09-14  Paul Brook  <paul@@codesourcery.com>

	* config/tc-arm.c (thumb32_negate_data_op): Consistently use
	unsigned int to avoid 64-bit host problems.

@


1.1.14.94
log
@2006-09-14  Paul Brook  <paul@@codesourcery.com>

	gas/
	* config/tc-arm.c (s_arm_unwind_movsp): Add offset argument.
	* doc/c-arm.texi (movsp): Document offset argument.
@
text
@a2 6
	gas/
	* config/tc-arm.c (s_arm_unwind_movsp): Add offset argument.
	* doc/c-arm.texi (movsp): Document offset argument.

2006-09-14  Paul Brook  <paul@@codesourcery.com>

@


1.1.14.95
log
@2006-09-16  Paul Brook  <paul@@codesourcery.com>

	gas/testsuite/
	* gas/arm/unwind.s: Test two argument form of .movsp.
	* gas/arm/unwind.d: Update expected output.
	* gas/arm/unwind_vxworks.d: Ditto.
@
text
@a0 7
2006-09-16  Paul Brook  <paul@@codesourcery.com>

	gas/testsuite/
	* gas/arm/unwind.s: Test two argument form of .movsp.
	* gas/arm/unwind.d: Update expected output.
	* gas/arm/unwind_vxworks.d: Ditto.

@


1.1.14.96
log
@2006-09-18  Paul Brook  <paul@@codesourcery.com>

	gas/
	* config/tc-arm.c (parse_immediate_maybe_bounded): Rename back...
	(parse_immediate): ... to this.  Revert earlier changes.
	(parse_immediate_bounded): Remove.
	(parse_immediate_unbounded): Remove.
	(parse_address_main): Revert earlier changes.
	(parse_ror): Ditto.
	(po_imm_unb_or_fail): Remove.
	(neon_cmode_for_logic_imm): Try smaller element sizes.
	(neon_cmode_for_move_imm): Ditto.
	(do_neon_logic): Handle .i64 pseudo-op.

	gas/testsuite/
	* testsuite/gas/arm/neon-cov.s: Test pseudo-instruction forms of
	vmov, vmvn and logic immediate instructions.
	* testsuite/gas/arm/neon-cov.d: ditto.
@
text
@a0 19
2006-09-18  Paul Brook  <paul@@codesourcery.com>

	gas/
	* config/tc-arm.c (parse_immediate_maybe_bounded): Rename back...
	(parse_immediate): ... to this.  Revert earlier changes.
	(parse_immediate_bounded): Remove.
	(parse_immediate_unbounded): Remove.
	(parse_address_main): Revert earlier changes.
	(parse_ror): Ditto.
	(po_imm_unb_or_fail): Remove.
	(neon_cmode_for_logic_imm): Try smaller element sizes.
	(neon_cmode_for_move_imm): Ditto.
	(do_neon_logic): Handle .i64 pseudo-op.

	gas/testsuite/
	* testsuite/gas/arm/neon-cov.s: Test pseudo-instruction forms of
	vmov, vmvn and logic immediate instructions.
	* testsuite/gas/arm/neon-cov.d: ditto.

@


1.1.14.97
log
@2006-09-19  Mark Shinwell  <shinwell@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>
            Ian Lance Taylor  <ian@@wasabisystems.com>
            Ben Elliston  <bje@@wasabisystems.com>

	bfd/
	* archures.c: Add definition for bfd_mach_arm_iWMMXt2.
	* cpu-arm.c (processors): Add bfd_mach_arm_iWMMXt2.
	(arch_info_struct, bfd_arm_update_notes): Likewise.
	(architectures): Likewise.
	(bfd_arm_merge_machines): Check for iWMMXt2.
	* bfd-in2.h: Rebuild.

	gas/
	* config/tc-arm.c (enum operand_parse_code): New code OP_RIWR_I32z.
	(parse_operands): Handle OP_RIWR_I32z.
	(do_iwmmxt_wmerge): New function.
	(do_iwmmxt_wldstd): Handle iwmmxt2 case where second operand is
	a register.
	(do_iwmmxt_wrwrwr_or_imm5): New function.
	(insns): Mark instructions as RIWR_I32z as appropriate.
	Also add torvsc<b,h,w>, wabs<b,h,w>, wabsdiff<b,h,w>,
	waddbhus<l,m>, waddhc, waddwc, waddsubhx, wavg4{r}, wmaddu{x,n},
	wmadds{x,n}, wmerge, wmiaxy{n}, wmiawxy{n}, wmul<sm,um>{r},
	wmulw<um,sm,l>{r}, wqmiaxy{n}, wqmulm{r}, wqmulwm{r}, wsubaddhx.
	(md_begin): Handle IWMMXT2.
	(arm_cpus): Add iwmmxt2.
	(arm_extensions): Likewise.
	(arm_archs): Likewise.

	gas/testsuite/
	* gas/arm/iwmmxt2.s: New file.
	* gas/arm/iwmmxt2.d: New file.

	opcodes/
	* arm-dis.c (coprocessor_opcodes): The X-qualifier to WMADD may
	only be used with the default multiply-add operation, so if N is
	set, don't bother printing X.  Add new iwmmxt instructions.
	(IWMMXT_INSN_COUNT): Update.
	(iwmmxt_wwssnames): Qualify "wwss" names at index 2, 6, 10 and 14
	with a 'c' suffix.
	(print_insn_coprocessor): Check for iWMMXt2.  Handle format
	specifiers 'r', 'i'.
@
text
@a0 44
2006-09-19  Mark Shinwell  <shinwell@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>
            Ian Lance Taylor  <ian@@wasabisystems.com>
            Ben Elliston  <bje@@wasabisystems.com>

	bfd/
	* archures.c: Add definition for bfd_mach_arm_iWMMXt2.
	* cpu-arm.c (processors): Add bfd_mach_arm_iWMMXt2.
	(arch_info_struct, bfd_arm_update_notes): Likewise.
	(architectures): Likewise.
	(bfd_arm_merge_machines): Check for iWMMXt2.
	* bfd-in2.h: Rebuild.

	gas/
	* config/tc-arm.c (enum operand_parse_code): New code OP_RIWR_I32z.
	(parse_operands): Handle OP_RIWR_I32z.
	(do_iwmmxt_wmerge): New function.
	(do_iwmmxt_wldstd): Handle iwmmxt2 case where second operand is
	a register.
	(do_iwmmxt_wrwrwr_or_imm5): New function.
	(insns): Mark instructions as RIWR_I32z as appropriate.
	Also add torvsc<b,h,w>, wabs<b,h,w>, wabsdiff<b,h,w>,
	waddbhus<l,m>, waddhc, waddwc, waddsubhx, wavg4{r}, wmaddu{x,n},
	wmadds{x,n}, wmerge, wmiaxy{n}, wmiawxy{n}, wmul<sm,um>{r},
	wmulw<um,sm,l>{r}, wqmiaxy{n}, wqmulm{r}, wqmulwm{r}, wsubaddhx.
	(md_begin): Handle IWMMXT2.
	(arm_cpus): Add iwmmxt2.
	(arm_extensions): Likewise.
	(arm_archs): Likewise.

	gas/testsuite/
	* gas/arm/iwmmxt2.s: New file.
	* gas/arm/iwmmxt2.d: New file.

	opcodes/
	* arm-dis.c (coprocessor_opcodes): The X-qualifier to WMADD may
	only be used with the default multiply-add operation, so if N is
	set, don't bother printing X.  Add new iwmmxt instructions.
	(IWMMXT_INSN_COUNT): Update.
	(iwmmxt_wwssnames): Qualify "wwss" names at index 2, 6, 10 and 14
	with a 'c' suffix.
	(print_insn_coprocessor): Check for iWMMXt2.  Handle format
	specifiers 'r', 'i'.

@


1.1.14.98
log
@	include/
	* libiberty.h: Declare pex_run_in_environment.

	libiberty/
	* pex-common.c: New function pex_run_in_environment.
	* pex-common.h: Add environment parameter to exec_child.
	* pex-msdos.c: Add environment parameter to pex_msdos_exec_child.
	* pex-djgpp.c: Add environment parameter to pex_djgpp_exec_child.
	(pex_djgpp_exec_child): Pass environment to child process.
	* pex-unix.c: Add environment parameter to pex_unix_exec_child.
	(pex_unix_exec_child): Pass environment to child process.
	* pex-win32.c: Add environment parameter to pex_win32_exec_child.
	New function env_compare for comparing VAR=VALUE pairs.
	(win32_spawn): Assemble environment block and pass to CreateProcess.
	(spawn_script): Pass environment through to win32_spawn.
	(pex_win32_exec_child): Pass environment through to spawn_script and
	win32_spawn.
	* functions.texi: Regenerate.
	* pexecute.txh: Document pex_run_in_environment.
@
text
@a0 22
2006-09-28  Mark Shinwell  <shinwell@@codesourcery.com>

	include/
	* libiberty.h: Declare pex_run_in_environment.

	libiberty/  
	* pex-common.c: New function pex_run_in_environment.
	* pex-common.h: Add environment parameter to exec_child.
	* pex-msdos.c: Add environment parameter to pex_msdos_exec_child.
	* pex-djgpp.c: Add environment parameter to pex_djgpp_exec_child.
	(pex_djgpp_exec_child): Pass environment to child process.
	* pex-unix.c: Add environment parameter to pex_unix_exec_child.
	(pex_unix_exec_child): Pass environment to child process.
	* pex-win32.c: Add environment parameter to pex_win32_exec_child.
	New function env_compare for comparing VAR=VALUE pairs.
	(win32_spawn): Assemble environment block and pass to CreateProcess.
	(spawn_script): Pass environment through to win32_spawn.
	(pex_win32_exec_child): Pass environment through to spawn_script and
	win32_spawn.
	* functions.texi: Regenerate.
	* pexecute.txh: Document pex_run_in_environment.

@


1.1.14.99
log
@	binutils/
	* ar.c (usage): Pass s to list_supported_targets.
	* cxxfilt.c (usage): Print bug url when giving help.
@
text
@a0 6
2006-09-29  Nathan Sidwell  <nathan@@codesourcery.com>

	binutils/
	* ar.c (usage): Pass s to list_supported_targets.
	* cxxfilt.c (usage): Print bug url when giving help.

@


1.1.14.100
log
@	ld/
	* configure.tgt (i[3-7]86-*-linux-*): Also define
	targ_extra_libpath in want64 case.
	* emulparams/elf_x86_64.sh: Handle i[3-7]86-*-linux-* the same as
	x86_64*-linux*.
@
text
@a0 8
2006-10-03  Joseph Myers  <joseph@@codesourcery.com>

	ld/
	* configure.tgt (i[3-7]86-*-linux-*): Also define
	targ_extra_libpath in want64 case.
	* emulparams/elf_x86_64.sh: Handle i[3-7]86-*-linux-* the same as
	x86_64*-linux*.

@


1.1.14.101
log
@	gas/
	* config/tc-m68k.c (m68k_ip):  Correct output of cpu aliases.
@
text
@a0 5
2006-10-13  Nathan Sidwell  <nathan@@codesourcery.com>

	gas/
	* config/tc-m68k.c (m68k_ip):  Correct output of cpu aliases.

@


1.1.14.102
log
@        bfd/
        * elf32-arm.c (using_thumb2): Use TAG_CPU_* constants.

        include/
        * elf/arm.h: Define TAG_CPU_ARCH_* constants.
@
text
@a0 8
2006-10-16  Mark Shinwell  <shinwell@@codesourcery.com>

	bfd/
	* elf32-arm.c (using_thumb2): Use TAG_CPU_* constants.

	include/
	* elf/arm.h: Define TAG_CPU_ARCH_* constants.

@


1.1.14.103
log
@	binutils/
	* Makefile.am: Rebuild dependencies.
	(REPORT_BUGS_TO): Always defined.
	(INCLUDES): Adjust.
	* Makefile.in: Rebuilt.
	* configure.in (REPORT_BUGS_TO): Provide default value.
	* configure: Rebuilt.
	* bucomm.h: Remove bin-bugs.h.
	* addr2line.c (usage): Don't print empty REPORT_BUGS_TO.
	* coffdump.c (show_usage): Likewise.
	* cxxfilt.c (usage): Likewise.
	* nlmconv.c (show_usage): Likewise.
	* nm.c (usage): Likewise.
	* objcopy.c (copy_usage, strip_usage): Likewise.
	* objdump.c (usage): Likewise.
	* size.c (usage): Likewise.
	* srconv.c (show_usage): Likewise.
	* string.c (usage): Likewise.
	* sysdymp.c (show_usage): Likewise.
	* windres.c (usage): Likewise.
	* readelf (usage): Likewise. Add STREAM argument.  Adjust callers.

	gas/
	* Makefile.am: Rebuild dependencies.
	(REPORT_BUGS_TO): Always defined.
	(INCLUDES): Adjust.
	* Makefile.in: Rebuilt.
	* configure.in (REPORT_BUGS_TO): Provide default value.
	* configure: Rebuilt.
	* as.c (show_usage): Don't print empty REPORT_BUGS_TO.
	* as.h: Remove bin-bugs.h.

	ld/
	* Makefile.am: Rebuild dependencies.
	(REPORT_BUGS_TO): Always defined.
	(INCLUDES): Adjust.
	* Makefile.in: Rebuilt.
	* configure.in (REPORT_BUGS_TO): Provide default value.
	* configure: Rebuilt.
	* ld.h: Remove bin-bugs.h
	* lexsup.c (help):  Don't print empty REPORT_BUGS_TO.

	gprof/
	* Makefile.am: Rebuild dependencies.
	(REPORT_BUGS_TO): Always defined.
	(PKGVERSION): Define.
	(INCLUDES): Adjust.
	* Makefile.in: Rebuilt.
	* configure.in (REPORT_BUGS_TO): Provide default value.
	* configure: Rebuilt.
	* gprof.c (usage): Don't print empty REPORT_BUGS_TO.
	* gprof.h: Remove bin-bugs.h

	include/
	* bin-bugs.h: Remove.
@
text
@a0 58
2006-10-16  Nathan Sidwell  <nathan@@codesourcery.com>

	binutils/
	* Makefile.am: Rebuild dependencies.
	(REPORT_BUGS_TO): Always defined.
	(INCLUDES): Adjust.
	* Makefile.in: Rebuilt.
	* configure.in (REPORT_BUGS_TO): Provide default value.
	* configure: Rebuilt.
	* bucomm.h: Remove bin-bugs.h.
	* addr2line.c (usage): Don't print empty REPORT_BUGS_TO.
	* coffdump.c (show_usage): Likewise.
	* cxxfilt.c (usage): Likewise.
	* nlmconv.c (show_usage): Likewise.
	* nm.c (usage): Likewise.
	* objcopy.c (copy_usage, strip_usage): Likewise.
	* objdump.c (usage): Likewise.
	* size.c (usage): Likewise.
	* srconv.c (show_usage): Likewise.
	* string.c (usage): Likewise.
	* sysdymp.c (show_usage): Likewise.
	* windres.c (usage): Likewise.
	* readelf (usage): Likewise. Add STREAM argument.  Adjust callers.

	gas/
	* Makefile.am: Rebuild dependencies.
	(REPORT_BUGS_TO): Always defined.
	(INCLUDES): Adjust.
	* Makefile.in: Rebuilt.
	* configure.in (REPORT_BUGS_TO): Provide default value.
	* configure: Rebuilt.
	* as.c (show_usage): Don't print empty REPORT_BUGS_TO.
	* as.h: Remove bin-bugs.h.

	ld/
	* Makefile.am: Rebuild dependencies.
	(REPORT_BUGS_TO): Always defined.
	(INCLUDES): Adjust.
	* Makefile.in: Rebuilt.
	* configure.in (REPORT_BUGS_TO): Provide default value.
	* configure: Rebuilt.
	* ld.h: Remove bin-bugs.h
	* lexsup.c (help):  Don't print empty REPORT_BUGS_TO.

	gprof/
	* Makefile.am: Rebuild dependencies.
	(REPORT_BUGS_TO): Always defined.
	(PKGVERSION): Define.
	(INCLUDES): Adjust.
	* Makefile.in: Rebuilt.
	* configure.in (REPORT_BUGS_TO): Provide default value.
	* configure: Rebuilt.
	* gprof.c (usage): Don't print empty REPORT_BUGS_TO.
	* gprof.h: Remove bin-bugs.h

	include/
	* bin-bugs.h: Remove.

@


1.1.14.104
log
@2006-10-19  Joseph S. Myers  <joseph@@codesourcery.com>
            Mark Mitchell  <mark@@codesourcery.com>

	ld/
	* configure.tgt (arm*linux*): Support both big- and little-endian.
@
text
@a0 6
2006-10-19  Joseph S. Myers  <joseph@@codesourcery.com>
            Mark Mitchell  <mark@@codesourcery.com>

	ld/
	* configure.tgt (arm*linux*): Support both big- and little-endian.

@


1.1.14.105
log
@        gas/
        * config/tc-arm.c (md_apply_fix): Turn CZB instructions that
        attempt to jump to the next instruction into NOPs.
@
text
@a0 6
2006-10-24  Mark Shinwell  <shinwell@@codesourcery.com>

	gas/
	* config/tc-arm.c (md_apply_fix): Turn CZB instructions that
	attempt to jump to the next instruction into NOPs.

@


1.1.14.106
log
@2006-10-25  Paul Brook  <paul@@codesourcery.com>

	gas/
	* config/tc-arm.c (do_vfp_sp_const, do_vfp_dp_const): Fix operans
	encoding.

	gas/testsuite/
	* gas/arm/vfpv3-const-conv.s: Improve test coverage.
	* gas/arm/vfpv3-const-conv.d: Adjust expected output.
	* gas/arm/vfp-neon-syntax_t2.d: Ditto.
	* gas/arm/vfp-neon-syntax.d: Ditto.

	opcodes/
	* arm-dis.c (coprocessor_opcodes): Fix bitfields for fconstd/fconstd.
@
text
@a0 15
2006-10-25  Paul Brook  <paul@@codesourcery.com>

	gas/
	* config/tc-arm.c (do_vfp_sp_const, do_vfp_dp_const): Fix operans
	encoding.

	gas/testsuite/
	* gas/arm/vfpv3-const-conv.s: Improve test coverage.
	* gas/arm/vfpv3-const-conv.d: Adjust expected output.
	* gas/arm/vfp-neon-syntax_t2.d: Ditto.
	* gas/arm/vfp-neon-syntax.d: Ditto.

	opcodes/
	* arm-dis.c (coprocessor_opcodes): Fix bitfields for fconstd/fconstd.

@


1.1.14.107
log
@2006-10-26  Paul Brook  <paul@@codesourcery.com>

	gas/
	* config/tc-arm.c (do_neon_ext): Enforce immediate range.
	(insns): Use I15 for vext.

	gas/testsute/
	* gas/arm/neon-cov.s: Add new vext test.
	* gas/arm/neon-cov.d: Ditto.
@
text
@a0 10
2006-10-26  Paul Brook  <paul@@codesourcery.com>

	gas/
	* config/tc-arm.c (do_neon_ext): Enforce immediate range.
	(insns): Use I15 for vext.

	gas/testsute/
	* gas/arm/neon-cov.s: Add new vext test.
	* gas/arm/neon-cov.d: Ditto.

@


1.1.14.108
log
@2006-10-26  Paul Brook  <paul@@codesourcery.com>

	gas/
	* config/tc-arm.c (arm_adjust_symtab): Don't use STT_ARM_16BIT
	for EABIv4.
@
text
@a3 6
	* config/tc-arm.c (arm_adjust_symtab): Don't use STT_ARM_16BIT
	for EABIv4.

2006-10-26  Paul Brook  <paul@@codesourcery.com>

	gas/
@


1.1.14.109
log
@2006-10-26  Paul Brook  <paul@@codesourcery.com>

	binutils/
	* objdump.c (disassemble_section): Set info->symtab_pos.
	(disassemble_data): Set info->symtab and info->symtab_size.

	include/
	* dis-asm.h (disassemble_info): Add symtab, symtab_pos and
	symtab_size.

	opcodes/
	* arm-dis.c (last_is_thumb, last_mapping_sym, last_mapping_addr): New.
	(get_sym_code_type): New function.
	(print_insn): Search for mapping symbols.
@
text
@a2 15
	binutils/
	* objdump.c (disassemble_section): Set info->symtab_pos.
	(disassemble_data): Set info->symtab and info->symtab_size.

	include/
	* dis-asm.h (disassemble_info): Add symtab, symtab_pos and
	symtab_size.

	opcodes/
	* arm-dis.c (last_is_thumb, last_mapping_sym, last_mapping_addr): New.
	(get_sym_code_type): New function.
	(print_insn): Search for mapping symbols.

2006-10-26  Paul Brook  <paul@@codesourcery.com>

@


1.1.14.110
log
@2006-10-26  Paul Brook  <paul@@codesourcery.com>

	gas/
	* config/tc-arm.c (arm_is_eabi): New function.
	* config/tc-arm.h (arm_is_eabi): New prototype.
	(THUMB_IS_FUNC): Use ELF function type for EABI objects.
	* doc/c-arm.texi (.thumb_func): Update documentation.
@
text
@a2 8
	gas/
	* config/tc-arm.c (arm_is_eabi): New function.
	* config/tc-arm.h (arm_is_eabi): New prototype.
	(THUMB_IS_FUNC): Use ELF function type for EABI objects.
	* doc/c-arm.texi (.thumb_func): Update documentation.

2006-10-26  Paul Brook  <paul@@codesourcery.com>

@


1.1.14.111
log
@2006-10-26  Paul Brook  <paul@@codesourcery.com>

	gas/
	* config/tc-arm.c (do_neon_ext): Fix constraint.
@
text
@a3 5
	* config/tc-arm.c (do_neon_ext): Fix constraint.

2006-10-26  Paul Brook  <paul@@codesourcery.com>

	gas/
@


1.1.14.112
log
@	include/opcode/
	* m68k.h (mcfmac, mcfemac, cfloat, mcfhwdiv, mcfisa_a,
	mcfisa_aa, mcfisa_b, mcfusp, mcf_mask): Double the defined
	values.
@
text
@a0 7
2006-10-28  Kazu Hirata  <kazu@@codesourcery.com>

	include/opcode/
	* m68k.h (mcfmac, mcfemac, cfloat, mcfhwdiv, mcfisa_a,
	mcfisa_aa, mcfisa_b, mcfusp, mcf_mask): Double the defined
	values.

@


1.1.14.113
log
@2006-10-28  Paul Brook  <paul@@codesourcery.com>
	Julian Brown  <julian@@codesourcery.com>

	bfd/
	* elf32-arm.c (copy_eabi_attributes): Correct starting offset.
	(elf32_arm_merge_eabi_attributes): Mark output as initialized.
	Only set Tag_CPU_name and Tag_ABI_PCS_R9_use if input attribute
	is present.
@
text
@a0 9
2006-10-28  Paul Brook  <paul@@codesourcery.com>
	Julian Brown  <julian@@codesourcery.com>

	bfd/
	* elf32-arm.c (copy_eabi_attributes): Correct starting offset.
	(elf32_arm_merge_eabi_attributes): Mark output as initialized.
	Only set Tag_CPU_name and Tag_ABI_PCS_R9_use if input attribute
	is present.

@


1.1.14.114
log
@	Merge fido bits:
	2006-10-25  Kazu Hirata  <kazu@@codesourcery.com>

	gprof/
	* hist.c, hist.h: Fix formatting.

	gprof/
	* Makefile.in (corefile.o): Depend on hist.h.
	* corefile.c: Include hist.h.

	2006-10-06  Vladimir Prus  <vladimir@@codesourcery.com>

	* hist.h (struct histogram)
	(histograms, num_histograms): New.
	* hist.c (find_histogram, find_histogram_for_pc)
	(read_histogram_header): New.
	(s_lowpc, s_highpc, lowpc, highpc, hist_num_bins)
	(hist_sample): Remove.
	(hist_read_rec): Use the above, and handle multiple
	histogram records with disjoint address ranges.
	(hist_write_hist): Support several histogram records.
	(scale_and_align_entries): Adjust for multiple histograms.
	(hist_assign_samples_1): New.
	(hist_assign_samples): Use the above.
	(hist_clip_symbol_address): New.
	* hist.h (hist_check_address)
	(hist_clip_symbol_address): Declare.
	* gmon_io.c (gmon_out_read, gmon_out_write): Adjust handling
	of legacy format for multiple histogram changes.
	* corefile.c (find_call): Check for core_text_space and
	clip symbol address range here.
	* vax.c	(vax_find_call): Don't check for
	core_text_space, or clip the symbol's address range here.
	Use hist_check_address to check call's target address.
	* sparc.c: Likewise.
	* tahoe.c: Likewise.
	* i386.c: Likewise.
	* mips.c: Likewise. Also use core_text_sect->vma as the base
	address for code accesses, just like other machine-specific
	routines do.

	2006-08-03  Kazu Hirata  <kazu@@codesourcery.com>

	* gas/config/tc-m68k.c (archs): Add -mfido as an alias for
	-mfido_a.

	2006-06-23  Kazu Hirata  <kazu@@codesourcery.com>

	* gas/config/tc-m68k.c (cpu_of_arch): Replace fido with
	fido_a.
	(archs): Likewise.
	(m68k_ip): Likewise.
	(select_control_regs): Likewise.
	(md_show_usage): Replace -mfido with -mfidoa.
	* include/opcode/m68k.h (fido): Rename to fido_a.
	* opcodes/m68k-opc.c (m68k_opcodes): Replace fido with fido_a.

	2006-06-22  Kazu Hirata  <kazu@@codesourcery.com>

	* config.sub: Replace fido with fido.
	* bfd/config.bfd: Likewise
	* gas/configure.tgt: Likewise.
	* gas/config/m68k-parse.h: Likewise.
	* gas/config/tc-m68k.c: Likewise.
	* gas/testsuite/gas/m68k/all.exp: Likewise.
	* gas/testsuite/gas/m68k/fido.d: Rename to fido.d.
	* gas/testsuite/gas/m68k/fido.s: Rename to fido.s.
	* include/opcode/m68k.h: Replace fido with fido.
	* ld/configure.tgt: Likewise.
	* opcodes/m68k-dis.c: Likewise.
	* opcodes/m68k-opc.c: Likewise.

	2005-08-01  Kazu Hirata  <kazu@@codesourcery.com>

	* gas/config/m68k-parse.h (m68k_register): Add CAC and MBB.
	* gas/config/tc-m68k.c (fido_control_regs): New.
	(cpu_of_arch): Add fido.
	(archs): Add an entry for fido.
	(m68k_ip): Add warnings for uses of tbl[su]{n,}[bwl] on
	fido.  Recognize CAC and MBB.
	(init_tabl): Add CAC and MBB.
	(select_control_regs): Choose fido as the current chip
	when the current architecture is fido or when -mfido
	is given explicitly.
	* gas/testsuite/gas/m68k/all.exp: Disable operands, cas, and
	bitfield on fido-*-*.  Run fido on fido-*-*.
	* gas/testsuite/gas/m68k/fido.d: New.
	* gas/testsuite/gas/m68k/fido.s: Likewise.
	* include/opcode/m68k.h: Document new control registers CAC
	and MBB.
	* opcodes/m68k-dis.c (print_insn_arg): Add cac and mbb.
	* opcodes/m68k-opc.c (m68k_opcodes): Add sleep and trapx.

	2005-07-22  Kazu Hirata  <kazu@@codesourcery.com>

	* gas/config/tc-m68k.c (archs): Add fido as an OR of
	cpu32 and fido.
	(md_show_usage): Add -mfido.
	* include/opcode/m68k.h (fido): New.

	2005-07-11  Kazu Hirata  <kazu@@codesourcery.com>

	* config.sub: Recognize fido and fido-*.
	* bfd/config.bfd: Likewise.
	* gas/configure.tgt: Likewise.
	* ld/configure.tgt: Likewise.
@
text
@a0 109
2006-10-30  Kazu Hirata  <kazu@@codesourcery.com>

	Merge fido bits:
	2006-10-25  Kazu Hirata  <kazu@@codesourcery.com>

	gprof/
	* hist.c, hist.h: Fix formatting.

	gprof/
	* Makefile.in (corefile.o): Depend on hist.h.
	* corefile.c: Include hist.h.

	2006-10-06  Vladimir Prus  <vladimir@@codesourcery.com>

	* hist.h (struct histogram)
	(histograms, num_histograms): New.
	* hist.c (find_histogram, find_histogram_for_pc)
	(read_histogram_header): New.
	(s_lowpc, s_highpc, lowpc, highpc, hist_num_bins)
	(hist_sample): Remove.
	(hist_read_rec): Use the above, and handle multiple
	histogram records with disjoint address ranges.
	(hist_write_hist): Support several histogram records.
	(scale_and_align_entries): Adjust for multiple histograms.
	(hist_assign_samples_1): New.
	(hist_assign_samples): Use the above.
	(hist_clip_symbol_address): New.
	* hist.h (hist_check_address)
	(hist_clip_symbol_address): Declare.
	* gmon_io.c (gmon_out_read, gmon_out_write): Adjust handling
	of legacy format for multiple histogram changes.
	* corefile.c (find_call): Check for core_text_space and
	clip symbol address range here.
	* vax.c	(vax_find_call): Don't check for
	core_text_space, or clip the symbol's address range here.
	Use hist_check_address to check call's target address.	
	* sparc.c: Likewise.
	* tahoe.c: Likewise.
	* i386.c: Likewise.
	* mips.c: Likewise. Also use core_text_sect->vma as the base
	address for code accesses, just like other machine-specific
	routines do.

	2006-08-03  Kazu Hirata  <kazu@@codesourcery.com>

	* gas/config/tc-m68k.c (archs): Add -mfido as an alias for
	-mfido_a.

	2006-06-23  Kazu Hirata  <kazu@@codesourcery.com>

	* gas/config/tc-m68k.c (cpu_of_arch): Replace fido with
	fido_a.
	(archs): Likewise.
	(m68k_ip): Likewise.
	(select_control_regs): Likewise.
	(md_show_usage): Replace -mfido with -mfidoa.
	* include/opcode/m68k.h (fido): Rename to fido_a.
	* opcodes/m68k-opc.c (m68k_opcodes): Replace fido with fido_a.

	2006-06-22  Kazu Hirata  <kazu@@codesourcery.com>

	* config.sub: Replace fido with fido.
	* bfd/config.bfd: Likewise
	* gas/configure.tgt: Likewise.
	* gas/config/m68k-parse.h: Likewise.
	* gas/config/tc-m68k.c: Likewise.
	* gas/testsuite/gas/m68k/all.exp: Likewise.
	* gas/testsuite/gas/m68k/fido.d: Rename to fido.d.
	* gas/testsuite/gas/m68k/fido.s: Rename to fido.s.
	* include/opcode/m68k.h: Replace fido with fido.
	* ld/configure.tgt: Likewise.
	* opcodes/m68k-dis.c: Likewise.
	* opcodes/m68k-opc.c: Likewise.

	2005-08-01  Kazu Hirata  <kazu@@codesourcery.com>

	* gas/config/m68k-parse.h (m68k_register): Add CAC and MBB.
	* gas/config/tc-m68k.c (fido_control_regs): New.
	(cpu_of_arch): Add fido.
	(archs): Add an entry for fido.
	(m68k_ip): Add warnings for uses of tbl[su]{n,}[bwl] on
	fido.  Recognize CAC and MBB.
	(init_tabl): Add CAC and MBB.
	(select_control_regs): Choose fido as the current chip
	when the current architecture is fido or when -mfido
	is given explicitly.
	* gas/testsuite/gas/m68k/all.exp: Disable operands, cas, and
	bitfield on fido-*-*.  Run fido on fido-*-*.
	* gas/testsuite/gas/m68k/fido.d: New.
	* gas/testsuite/gas/m68k/fido.s: Likewise.
	* include/opcode/m68k.h: Document new control registers CAC
	and MBB.
	* opcodes/m68k-dis.c (print_insn_arg): Add cac and mbb.
	* opcodes/m68k-opc.c (m68k_opcodes): Add sleep and trapx.

	2005-07-22  Kazu Hirata  <kazu@@codesourcery.com>

	* gas/config/tc-m68k.c (archs): Add fido as an OR of
	cpu32 and fido.
	(md_show_usage): Add -mfido.
	* include/opcode/m68k.h (fido): New.

	2005-07-11  Kazu Hirata  <kazu@@codesourcery.com>

	* config.sub: Recognize fido and fido-*.
	* bfd/config.bfd: Likewise.
	* gas/configure.tgt: Likewise.
	* ld/configure.tgt: Likewise.

@


1.1.14.115
log
@2006-10-30  Paul Brook  <paul@@codesourcery.com>

	bfd/
	* elf32-arm.c (elf32_arm_to_thumb_export_stub): Assert that output
	section is present.
	(allocate_dynrelocs): Only add export stub for symbols definind in
	this object.
@
text
@a0 8
2006-10-30  Paul Brook  <paul@@codesourcery.com>

	bfd/
	* elf32-arm.c (elf32_arm_to_thumb_export_stub): Assert that output
	section is present.
	(allocate_dynrelocs): Only add export stub for symbols definind in
	this object.

@


1.1.14.116
log
@        gas/
        * config/tc-arm.c (do_t_czb): Rename to do_t_cbz.
        (insns): Adjust accordingly.
        (md_apply_fix): Alter comments to use CBZ instead of CZB.
@
text
@a0 7
2006-10-31  Mark Shinwell  <shinwell@@codesourcery.com>

	gas/
	* config/tc-arm.c (do_t_czb): Rename to do_t_cbz.
	(insns): Adjust accordingly.
	(md_apply_fix): Alter comments to use CBZ instead of CZB.

@


1.1.14.117
log
@        ld/
        * emultempl/elf32.em (gld${EMULATION_NAME}_before_allocation):
        Don't prepend "warning" to the message.

        ld/testsuite
        * ld-elf/warn2.d: New.
        * ld-elf/symbol2w.s: New.
        * ld-elf/symbol2ref.s: New.
@
text
@a0 11
2006-11-04  Vladimir Prus  <vladimir@@codesourcery.com>

	ld/
	* emultempl/elf32.em (gld${EMULATION_NAME}_before_allocation):
	Don't prepend "warning" to the message.

	ld/testsuite	
	* ld-elf/warn2.d: New.
	* ld-elf/symbol2w.s: New.
	* ld-elf/symbol2ref.s: New.	

@


1.1.14.118
log
@2006-11-06  Vladimir Prus  <vladimir@@codesourcery.com>

        ld/testsuite
        * ld-elf/symbol2ref.s: Use "dc.a" as opposed to ".long".
@
text
@a0 5
2006-11-06  Vladimir Prus  <vladimir@@codesourcery.com>

	ld/testsuite	
	* ld-elf/symbol2ref.s: Use "dc.a" as opposed to ".long".

@


1.1.14.119
log
@2006-11-07  Vladimir Prus  <vladimir@@codesourcery.com>

	* testsuite/ld-elf/symbol2w.s: Use "%" instead
	of "@@" to avoid breakage on ARM.
@
text
@a0 5
2006-11-07  Vladimir Prus  <vladimir@@codesourcery.com>  

	* testsuite/ld-elf/symbol2w.s: Use "%" instead
	of "@@" to avoid breakage on ARM.

@


1.1.14.120
log
@2006-11-08  Vladimir Prus  <vladimir@@codesourcery.com>

        * pex-win32.c (no_suffixes): Remove.
        (std_suffixes): Add "" as first element.
        (find_executable): Remove detection of already-present
        extension. Try all suffixes in std_suffixes.
@
text
@a0 7
2006-11-08  Vladimir Prus  <vladimir@@codesourcery.com>

	* pex-win32.c (no_suffixes): Remove.
	(std_suffixes): Add "" as first element.
	(find_executable): Remove detection of already-present
	extension. Try all suffixes in std_suffixes.

@


1.1.14.121
log
@	binutils/
	* Makefile.am (TOOL_PROGS): Set from @@TOOL_PROGS@@.
	(install-exec-local): Protect against TOOL_PROGS being empty.
	* configure.in (TOOL_PROGS): New, set it appropriately.
	* Makefile.in: Rebuilt.
	* configure: Rebuilt.
@
text
@a0 9
2006-11-10  Nathan Sidwell  <nathan@@codesourcery.com>

	binutils/
	* Makefile.am (TOOL_PROGS): Set from @@TOOL_PROGS@@.
	(install-exec-local): Protect against TOOL_PROGS being empty.
	* configure.in (TOOL_PROGS): New, set it appropriately.
	* Makefile.in: Rebuilt.
	* configure: Rebuilt.

a2 1
	libiberty/
@


1.1.14.122
log
@	gas/testuite/
	* gas/m68k/all.exp: Add mcf-trap.
	* gas/m68k/mcf-trap.[sd]: New.

	opcodes/
	* m68k-opc.c (m68k_opcodes): Place trap instructions before set
	conditionals.  Add tpf coldfire instruction as alias for trapf.
@
text
@a0 10
2006-11-16  Nathan Sidwell  <nathan@@codesourcery.com>

	gas/testuite/
	* gas/m68k/all.exp: Add mcf-trap.
	* gas/m68k/mcf-trap.[sd]: New.

	opcodes/
	* m68k-opc.c (m68k_opcodes): Place trap instructions before set
	conditionals.  Add tpf coldfire instruction as alias for trapf.

@


1.1.14.123
log
@	bfd/
	* elf32-m68k.c: Update uses of EF_M68K_*.

	binutils/
	* readelf.c: Update uses of EF_M68K_*.

	gas/
	* config/tc-m68k.c: Update uses of EF_M68K_*.

	include/elf
	* m68k.h (EF_M68K_ISA_MASK, EF_M68K_ISA_A_NODIV,
	EF_M68K_ISA_A, EF_M68K_ISA_A_PLUS, EF_M68K_ISA_B_NOUSP,
	EF_M68K_ISA_B, EF_M68K_ISA_C, EF_M68K_MAC_MASK, EF_M68K_MAC,
	EF_M68K_EMAC, EF_M68K_EMAC_B, EF_M68K_FLOAT): Rename to
	EF_M68K_CF_ISA_MASK, EF_M68K_CF_ISA_A_NODIV, EF_M68K_CF_ISA_A,
	EF_M68K_CF_ISA_A_PLUS, EF_M68K_CF_ISA_B_NOUSP,
	EF_M68K_CF_ISA_B, EF_M68K_CF_ISA_C, EF_M68K_CF_MAC_MASK,
	EF_M68K_CF_MAC, EF_M68K_CF_EMAC, EF_M68K_CF_EMAC_B,
	EF_M68K_CF_FLOAT, respectively.
@
text
@a0 22
2006-11-17  Kazu Hirata  <kazu@@codesourcery.com>

	bfd/
	* elf32-m68k.c: Update uses of EF_M68K_*.

	binutils/
	* readelf.c: Update uses of EF_M68K_*.

	gas/
	* config/tc-m68k.c: Update uses of EF_M68K_*.

	include/elf
	* m68k.h (EF_M68K_ISA_MASK, EF_M68K_ISA_A_NODIV,
	EF_M68K_ISA_A, EF_M68K_ISA_A_PLUS, EF_M68K_ISA_B_NOUSP,
	EF_M68K_ISA_B, EF_M68K_ISA_C, EF_M68K_MAC_MASK, EF_M68K_MAC,
	EF_M68K_EMAC, EF_M68K_EMAC_B, EF_M68K_FLOAT): Rename to
	EF_M68K_CF_ISA_MASK, EF_M68K_CF_ISA_A_NODIV, EF_M68K_CF_ISA_A,
	EF_M68K_CF_ISA_A_PLUS, EF_M68K_CF_ISA_B_NOUSP,
	EF_M68K_CF_ISA_B, EF_M68K_CF_ISA_C, EF_M68K_CF_MAC_MASK,
	EF_M68K_CF_MAC, EF_M68K_CF_EMAC, EF_M68K_CF_EMAC_B,
	EF_M68K_CF_FLOAT, respectively.

@


1.1.14.124
log
@	opcodes/
	* m68k-opc.c (m68k_opcodes):   Add tpf coldfire instruction as
	alias for trapf. (missed on 2006-11-16 checkin).
@
text
@a0 6
2006-11-19  Nathan Sidwell  <nathan@@codesourcery.com>

	opcodes/
	* m68k-opc.c (m68k_opcodes):   Add tpf coldfire instruction as
	alias for trapf. (missed on 2006-11-16 checkin).

d31 1
a31 1
	conditionals.
@


1.1.14.125
log
@	bfd/
	* elf32-m68k.c (elf32_m68k_object_p,
	elf32_m68k_print_private_bfd_data): Use EF_M68K_ARCH_MASK to
	extract architecture mask.

	binutils/
	* readelf.c (get_machine_flags): Use EF_M68K_ARCH_MASK to
	extract architecture mask.

	include/elf/
	* m68k.h (EF_M68K_ARCH_MASK): New.
@
text
@a0 14
2006-11-28  Kazu Hirata  <kazu@@codesourcery.com>

	bfd/
	* elf32-m68k.c (elf32_m68k_object_p,
	elf32_m68k_print_private_bfd_data): Use EF_M68K_ARCH_MASK to
	extract architecture mask.

	binutils/
	* readelf.c (get_machine_flags): Use EF_M68K_ARCH_MASK to
	extract architecture mask.

	include/elf/
	* m68k.h (EF_M68K_ARCH_MASK): New.

@


1.1.14.126
log
@	bfd/
	* elf32-m68k.c (elf32_m68k_object_p): Treat the default case
	as ColdFire.
	(elf32_m68k_merge_private_bfd_data): Use EF_M68K_ARCH_MASK to
	extract architecture mask.  Treat the default case as ColdFire.

	binutils/
	* readelf.c (get_machine_flags): Treat the default case as
	ColdFire.
@
text
@a0 12
2006-11-29  Kazu Hirata  <kazu@@codesourcery.com>

	bfd/
	* elf32-m68k.c (elf32_m68k_object_p): Treat the default case
	as ColdFire.
	(elf32_m68k_merge_private_bfd_data): Use EF_M68K_ARCH_MASK to
	extract architecture mask.  Treat the default case as ColdFire.

	binutils/
	* readelf.c (get_machine_flags): Treat the default case as
	ColdFire.

@


1.1.14.127
log
@        Backport from mainline:

        2006-07-29  Richard Sandiford  <richard@@codesourcery.com>

        ld/
        * Makefile.am (eelf32b4300.c): Update dependencies.
        (eelf32bmip.c): Likewise.
        (eelf32bsmip.c): Likewise.
        (eelf32btsmip.c): Likewise.
        (eelf32btsmipn32.c): Likewise.
        (eelf32ltsmip.c): Likewise.
        (eelf32ltsmipn32.c): Likewise.
        (eelf32ebmip.c): Likewise.
        (eelf32ebmipvxworks.c): Likewise.
        (eelf32elmip.c): Likewise.
        (eelf32elmipvxworks.c): Likewise.
        (eelf32bmipn32.c): Likewise.
        (eelf32lmip.c): Likewise.
        (eelf32mipswindiss.c): Likewise.
        (eelf32lsmip.c): Likewise.
        (eelf64bmip.c): Likewise.
        (eelf64btsmip.c): Likewise.
        (eelf64ltsmip.c): Likewise.
        (emipsbig.c): Likewise.  Canonicalize ${GENSCRIPTS} line.
        (emipsbsd.c): Likewise.
        (emipsidt.c): Update dependencies.
        (emipsidtl.c): Likewise.
        (emipslit.c): Likewise.
        (emipslnews.c): Likewise.
        (emipspe.c): Likewise.  Fix ${GENSCRIPTS} invocation.
        * Makefile.in: Regenerate.
        * emulparams/elf32bmip.sh (EXTRA_EM_FILE): Define.
        * emulparams/elf32bmipn32-defs.sh (EXTRA_EM_FILE): Likewise.
        * emultempl/irix.em: Include emultempl/mipself.em.
        * emultempl/mipself.em: New file.

        ld/testsuite/
        * ld-mips-elf/hash1.s, ld-mips-elf/hash1a.d,
        * ld-mips-elf/hash1b.d, ld-mips-elf/hash1c.d: New tests.
        * ld-mips-elf/mips-elf.exp: Run them.

        2006-07-14  Jakub Jelinek  <jakub@@redhat.com>

        * elflink.c (bfd_elf_size_dynsym_hash_dynstr): Fix cinfo.shift2 value.

        2006-07-10  Jakub Jelinek  <jakub@@redhat.com>

        include/
        * bfdlink.h (struct bfd_link_info): Add emit_hash and
        emit_gnu_hash bitfields.

        include/elf/
        * common.h (SHT_GNU_HASH, DT_GNU_HASH): Define.

        ld/
        * scripttempl/elf.sc: Add .gnu.hash section.
        * emultempl/elf32.em (OPTION_HASH_STYLE): Define.
        (gld${EMULATION_NAME}_add_options): Register --hash-style option.
        (gld${EMULATION_NAME}_handle_option): Handle it.
        (gld${EMULATION_NAME}_list_options): Document it.
        * ldmain.c (main): Initialize emit_hash and emit_gnu_hash.
        * ld.texinfo: Document --hash-style option.

        ld/testsuite/
        * ld-powerpc/tlsso32.r: Adjust.
        * ld-powerpc/tlsso32.d: Adjust.
        * ld-powerpc/tlsso32.g: Adjust.
        * ld-powerpc/tlsso.r: Adjust.
        * ld-powerpc/tlsso.g: Adjust.
        * ld-powerpc/tlstocso.g: Adjust.

        bfd/
        * elf.c (_bfd_elf_print_private_bfd_data): Handle DT_GNU_HASH.
        (bfd_section_from_shdr, elf_fake_sections, assign_section_numbers):
        Handle SHT_GNU_HASH.
        (special_sections_g): Include .gnu.hash section.
        (bfd_elf_gnu_hash): New function.
        * elf-bfd.h (bfd_elf_gnu_hash, _bfd_elf_hash_symbol): New prototypes.
        (struct elf_backend_data): Add elf_hash_symbol method.
        * elflink.c (_bfd_elf_link_create_dynamic_sections): Create .hash
        only if info->emit_hash, create .gnu.hash section if
        info->emit_gnu_hash.
        (struct collect_gnu_hash_codes): New type.
        (elf_collect_gnu_hash_codes, elf_renumber_gnu_hash_syms,
        _bfd_elf_hash_symbol): New functions.
        (compute_bucket_count): Don't compute HASHCODES array, instead add
        that and NSYMS as arguments.  Use bed->s->sizeof_hash_entry
        instead of bed->s->arch_size / 8.  Fix .hash size estimation.
        When not optimizing, use the number of hashed symbols rather than
        dynsymcount.
        (bfd_elf_size_dynamic_sections): Only add DT_HASH if info->emit_hash,
        and ADD DT_GNU_HASH if info->emit_gnu_hash.
        (bfd_elf_size_dynsym_hash_dynstr): Size .hash only if info->emit_hash,
        adjust compute_bucket_count caller.  Create and populate .gnu.hash
        section if info->emit_gnu_hash.
        (elf_link_output_extsym): Only populate .hash section if
        finfo->hash_sec != NULL.
        (bfd_elf_final_link): Adjust assertion.  Handle DT_GNU_HASH.
        * elfxx-target.h (elf_backend_hash_symbol): Define if not yet defined.
        (elfNN_bed): Add elf_backend_hash_symbol.
        * elf64-x86-64.c (elf64_x86_64_hash_symbol): New function.
        (elf_backend_hash_symbol): Define.
        * elf32-i386.c (elf_i386_hash_symbol): New function.
        (elf_backend_hash_symbol): Define.

        binutils/
        * readelf.c (get_dynamic_type): Handle DT_GNU_HASH.
        (get_section_type_name): Handle SHT_GNU_HASH.
        (dynamic_info_DT_GNU_HASH): New variable.
        (process_dynamic_section): Handle DT_GNU_HASH.
        (process_symbol_table): Print also DT_GNU_HASH histogram.
@
text
@a0 114
2006-11-29  Mark Shinwell  <shinwell@@codesourcery.com>

	Backport from mainline:

	2006-07-29  Richard Sandiford  <richard@@codesourcery.com>

	ld/
	* Makefile.am (eelf32b4300.c): Update dependencies.
	(eelf32bmip.c): Likewise.
	(eelf32bsmip.c): Likewise.
	(eelf32btsmip.c): Likewise.
	(eelf32btsmipn32.c): Likewise.
	(eelf32ltsmip.c): Likewise.
	(eelf32ltsmipn32.c): Likewise.
	(eelf32ebmip.c): Likewise.
	(eelf32ebmipvxworks.c): Likewise.
	(eelf32elmip.c): Likewise.
	(eelf32elmipvxworks.c): Likewise.
	(eelf32bmipn32.c): Likewise.
	(eelf32lmip.c): Likewise.
	(eelf32mipswindiss.c): Likewise.
	(eelf32lsmip.c): Likewise.
	(eelf64bmip.c): Likewise.
	(eelf64btsmip.c): Likewise.
	(eelf64ltsmip.c): Likewise.
	(emipsbig.c): Likewise.  Canonicalize ${GENSCRIPTS} line.
	(emipsbsd.c): Likewise.
	(emipsidt.c): Update dependencies.
	(emipsidtl.c): Likewise.
	(emipslit.c): Likewise.
	(emipslnews.c): Likewise.
	(emipspe.c): Likewise.  Fix ${GENSCRIPTS} invocation.
	* Makefile.in: Regenerate.
	* emulparams/elf32bmip.sh (EXTRA_EM_FILE): Define.
	* emulparams/elf32bmipn32-defs.sh (EXTRA_EM_FILE): Likewise.
	* emultempl/irix.em: Include emultempl/mipself.em.
	* emultempl/mipself.em: New file.

	ld/testsuite/
	* ld-mips-elf/hash1.s, ld-mips-elf/hash1a.d,
	* ld-mips-elf/hash1b.d, ld-mips-elf/hash1c.d: New tests.
	* ld-mips-elf/mips-elf.exp: Run them.

	2006-07-14  Jakub Jelinek  <jakub@@redhat.com>

	* elflink.c (bfd_elf_size_dynsym_hash_dynstr): Fix cinfo.shift2 value.

	2006-07-10  Jakub Jelinek  <jakub@@redhat.com>

	include/
	* bfdlink.h (struct bfd_link_info): Add emit_hash and
	emit_gnu_hash bitfields.

	include/elf/
	* common.h (SHT_GNU_HASH, DT_GNU_HASH): Define.

	ld/
	* scripttempl/elf.sc: Add .gnu.hash section.
	* emultempl/elf32.em (OPTION_HASH_STYLE): Define.
	(gld${EMULATION_NAME}_add_options): Register --hash-style option.
	(gld${EMULATION_NAME}_handle_option): Handle it.
	(gld${EMULATION_NAME}_list_options): Document it.
	* ldmain.c (main): Initialize emit_hash and emit_gnu_hash.
	* ld.texinfo: Document --hash-style option.

	ld/testsuite/
	* ld-powerpc/tlsso32.r: Adjust.
	* ld-powerpc/tlsso32.d: Adjust.
	* ld-powerpc/tlsso32.g: Adjust.
	* ld-powerpc/tlsso.r: Adjust.
	* ld-powerpc/tlsso.g: Adjust.
	* ld-powerpc/tlstocso.g: Adjust.

	bfd/
	* elf.c (_bfd_elf_print_private_bfd_data): Handle DT_GNU_HASH.
	(bfd_section_from_shdr, elf_fake_sections, assign_section_numbers):
	Handle SHT_GNU_HASH.
	(special_sections_g): Include .gnu.hash section.
	(bfd_elf_gnu_hash): New function.
	* elf-bfd.h (bfd_elf_gnu_hash, _bfd_elf_hash_symbol): New prototypes.
	(struct elf_backend_data): Add elf_hash_symbol method.
	* elflink.c (_bfd_elf_link_create_dynamic_sections): Create .hash
	only if info->emit_hash, create .gnu.hash section if
	info->emit_gnu_hash.
	(struct collect_gnu_hash_codes): New type.
	(elf_collect_gnu_hash_codes, elf_renumber_gnu_hash_syms,
	_bfd_elf_hash_symbol): New functions.
	(compute_bucket_count): Don't compute HASHCODES array, instead add
	that and NSYMS as arguments.  Use bed->s->sizeof_hash_entry
	instead of bed->s->arch_size / 8.  Fix .hash size estimation.
	When not optimizing, use the number of hashed symbols rather than
	dynsymcount.
	(bfd_elf_size_dynamic_sections): Only add DT_HASH if info->emit_hash,
	and ADD DT_GNU_HASH if info->emit_gnu_hash.
	(bfd_elf_size_dynsym_hash_dynstr): Size .hash only if info->emit_hash,
	adjust compute_bucket_count caller.  Create and populate .gnu.hash
	section if info->emit_gnu_hash.
	(elf_link_output_extsym): Only populate .hash section if
	finfo->hash_sec != NULL.
	(bfd_elf_final_link): Adjust assertion.  Handle DT_GNU_HASH.
	* elfxx-target.h (elf_backend_hash_symbol): Define if not yet defined.
	(elfNN_bed): Add elf_backend_hash_symbol.
	* elf64-x86-64.c (elf64_x86_64_hash_symbol): New function.
	(elf_backend_hash_symbol): Define.
	* elf32-i386.c (elf_i386_hash_symbol): New function.
	(elf_backend_hash_symbol): Define.

	binutils/
	* readelf.c (get_dynamic_type): Handle DT_GNU_HASH.
	(get_section_type_name): Handle SHT_GNU_HASH.
	(dynamic_info_DT_GNU_HASH): New variable.
	(process_dynamic_section): Handle DT_GNU_HASH.
	(process_symbol_table): Print also DT_GNU_HASH histogram.

@


1.1.14.128
log
@	Backport:
	2006-05-02  James E Wilson  <wilson@@specifix.com>
	* gprof.c (main): When setting default output_style, add separate
	checks for INPUT_HISTOGRAM and INPUT_CALL_GRAPH.
@
text
@a0 7
2006-11-29  Daniel Jacobowitz  <dan@@codesourcery.com>

	Backport:
	2006-05-02  James E Wilson  <wilson@@specifix.com>
	* gprof.c (main): When setting default output_style, add separate
	checks for INPUT_HISTOGRAM and INPUT_CALL_GRAPH.

@


1.1.14.129
log
@	bfd/
	* archures.c (bfd_mach_cpu32_fido): New.
	(bfd_mach_mcf_isa_a_nodiv, bfd_mach_mcf_isa_a,
	bfd_mach_mcf_isa_a_mac, bfd_mach_mcf_isa_a_emac,
	bfd_mach_mcf_isa_aplus, bfd_mach_mcf_isa_aplus_mac,
	bfd_mach_mcf_isa_aplus_emac, bfd_mach_mcf_isa_b_nousp,
	bfd_mach_mcf_isa_b_nousp_mac, bfd_mach_mcf_isa_b_nousp_emac,
	bfd_mach_mcf_isa_b, bfd_mach_mcf_isa_b_mac,
	bfd_mach_mcf_isa_b_emac, bfd_mach_mcf_isa_b_float,
	bfd_mach_mcf_isa_b_float_mac, bfd_mach_mcf_isa_b_float_emac):
	Increment the defined values.
	* cpu-m68k.c (arch_info_struct): Add en entry for
	bfd_mach_cpu32_fido.
	(m68k_arch_features): Add an entry corresponding to
	bfd_mach_cpu32_fido.
	(bfd_m68k_compatible): Handle bfd_mach_cpu32_fido.
	* elf32-m68k.c (elf32_m68k_object_p): Handle
	EF_M68K_CPU32_FIDO_A.
	(elf32_m68k_merge_private_bfd_data): Use EF_M68K_CPU32_MASK.
	(elf32_m68k_print_private_bfd_data): Handle
	EF_M68K_CPU32_FIDO_A.

	binutils/
	* readelf.c (get_machine_flags): Handle EF_M68K_CPU32_FIDO_A.

	gas/
	* config/tc-m68k.c (m68k_elf_final_processing): Handle
	EF_M68K_CPU32_FIDO_A.

	include/
	* include/elf/m68k.h (EF_M68K_CPU32_FIDO_A,
	EF_M68K_CPU32_MASK): New.
@
text
@a0 35
2006-11-30  Kazu Hirata  <kazu@@codesourcery.com>

	bfd/
	* archures.c (bfd_mach_cpu32_fido): New.
	(bfd_mach_mcf_isa_a_nodiv, bfd_mach_mcf_isa_a,
	bfd_mach_mcf_isa_a_mac, bfd_mach_mcf_isa_a_emac,
	bfd_mach_mcf_isa_aplus, bfd_mach_mcf_isa_aplus_mac,
	bfd_mach_mcf_isa_aplus_emac, bfd_mach_mcf_isa_b_nousp,
	bfd_mach_mcf_isa_b_nousp_mac, bfd_mach_mcf_isa_b_nousp_emac,
	bfd_mach_mcf_isa_b, bfd_mach_mcf_isa_b_mac,
	bfd_mach_mcf_isa_b_emac, bfd_mach_mcf_isa_b_float,
	bfd_mach_mcf_isa_b_float_mac, bfd_mach_mcf_isa_b_float_emac):
	Increment the defined values.
	* cpu-m68k.c (arch_info_struct): Add en entry for
	bfd_mach_cpu32_fido.
	(m68k_arch_features): Add an entry corresponding to
	bfd_mach_cpu32_fido.
	(bfd_m68k_compatible): Handle bfd_mach_cpu32_fido.
	* elf32-m68k.c (elf32_m68k_object_p): Handle
	EF_M68K_CPU32_FIDO_A.
	(elf32_m68k_merge_private_bfd_data): Use EF_M68K_CPU32_MASK.
	(elf32_m68k_print_private_bfd_data): Handle
	EF_M68K_CPU32_FIDO_A.

	binutils/
	* readelf.c (get_machine_flags): Handle EF_M68K_CPU32_FIDO_A.

	gas/
	* config/tc-m68k.c (m68k_elf_final_processing): Handle
	EF_M68K_CPU32_FIDO_A.

	include/
	* include/elf/m68k.h (EF_M68K_CPU32_FIDO_A,
	EF_M68K_CPU32_MASK): New.

@


1.1.14.130
log
@	bfd/
	* bfd-in2.h: Regenerate.
@
text
@a0 5
2006-12-01  Kazu Hirata  <kazu@@codesourcery.com>

	bfd/
	* bfd-in2.h: Regenerate.

@


1.1.14.131
log
@2006-12-01  Paul Brook  <paul@@codesourcery.com>

	Backport from mainline.
	gas/
	* config/tc-arm.c (arm_force_relocation): Return 1 for relocs against
	function symbols.

	gas/testsuite/
	* gas/arm/thumbrel.s: New test.
	* gas/arm/thumbrel.d: New test.
@
text
@a0 11
2006-12-01  Paul Brook  <paul@@codesourcery.com>

	Backport from mainline.
	gas/
	* config/tc-arm.c (arm_force_relocation): Return 1 for relocs against
	function symbols.

	gas/testsuite/
	* gas/arm/thumbrel.s: New test.
	* gas/arm/thumbrel.d: New test.

@


1.1.14.132
log
@2006-12-13  Paul Brook  <paul@@codesourcery.com>

	Backport from mainline.
	gas/
	* config/tc-arm.c (arm_arch_option_table): Add v7-{a,r,m}.
	* doc/c-arm.texi: Fix spelling of ARMv7 profile variants.
@
text
@a0 7
2006-12-13  Paul Brook  <paul@@codesourcery.com>

	Backport from mainline.
	gas/
	* config/tc-arm.c (arm_arch_option_table): Add v7-{a,r,m}.
	* doc/c-arm.texi: Fix spelling of ARMv7 profile variants.

@


1.1.14.133
log
@2006-12-18  Mark Shinwell  <shinwell@@codesourcery.com>

        ld/testsuite/
        * ld-arm/armthumb-lib.d: Correct address of lib_func2.
        * armthumb-lib.sym: Correct order of symbols.
        * mixed-lib.sym: Likewise.
@
text
@a0 7
2006-12-18  Mark Shinwell  <shinwell@@codesourcery.com>

	ld/testsuite/
	* ld-arm/armthumb-lib.d: Correct address of lib_func2.
	* armthumb-lib.sym: Correct order of symbols.
	* mixed-lib.sym: Likewise.

@


1.1.12.1
log
@2006-03-07  Paul Brook  <paul@@codesourcery.com>

	Backport from mainline.
	* gdb.arch/altivec-abi.exp: Use nowarnings instead of
	additional_flags=-w.
	* gdb.arch/altivec-regs.exp: Ditto.
	* gdb.arch/e500-abi.exp: Ditto.
	* gdb.arch/e500-regs.exp: Ditto.
	* gdb.base/all-bin.exp: Ditto.
	* gdb.base/annota1.exp: Ditto.
	* gdb.base/annota3.exp: Ditto.
	* gdb.base/args.exp: Ditto.
	* gdb.base/arithmet.exp: Ditto.
	* gdb.base/assign.exp: Ditto.
	* gdb.base/async.exp: Ditto.
	* gdb.base/bang.exp: Ditto.
	* gdb.base/break.exp: Ditto.
	* gdb.base/call-rt-st.exp: Ditto.
	* gdb.base/completion.exp: Ditto.
	* gdb.base/cond-expr.exp: Ditto.
	* gdb.base/condbreak.exp: Ditto.
	* gdb.base/consecutive.exp: Ditto.
	* gdb.base/define.exp: Ditto.
	* gdb.base/display.exp: Ditto.
	* gdb.base/ena-dis-br.exp: Ditto.
	* gdb.base/environ.exp: Ditto.
	* gdb.base/eval-skip.exp: Ditto.
	* gdb.base/info-proc.exp: Ditto.
	* gdb.base/jump.exp: Ditto.
	* gdb.base/logical.exp: Ditto.
	* gdb.base/long_long.exp: Ditto.
	* gdb.base/maint.exp: Ditto.
	* gdb.base/miscexprs.exp: Ditto.
	* gdb.base/pc-fp.exp: Ditto.
	* gdb.base/pointers.exp: Ditto.
	* gdb.base/relational.exp: Ditto.
	* gdb.base/reread.exp: Ditto.
	* gdb.base/sect-cmd.exp: Ditto.
	* gdb.base/sep.exp: Ditto.
	* gdb.base/sepdebug.exp: Ditto.
	* gdb.base/until.exp: Ditto.
	* gdb.base/whatis-exp.exp: Ditto.
	* gdb.cp/annota2.exp: Ditto.
	* gdb.cp/annota3.exp: Ditto.
	* gdb.trace/actions.exp: Ditto.
	* gdb.trace/backtrace.exp: Ditto.
	* gdb.trace/circ.exp: Ditto.
	* gdb.trace/collection.exp: Ditto.
	* gdb.trace/deltrace.exp: Ditto.
	* gdb.trace/infotrace.exp: Ditto.
	* gdb.trace/limits.exp: Ditto.
	* gdb.trace/packetlen.exp: Ditto.
	* gdb.trace/passc-dyn.exp: Ditto.
	* gdb.trace/passcount.exp: Ditto.
	* gdb.trace/report.exp: Ditto.
	* gdb.trace/save-trace.exp: Ditto.
	* gdb.trace/tfind.exp: Ditto.
	* gdb.trace/tracecmd.exp: Ditto.
	* gdb.trace/while-dyn.exp: Ditto.
	* gdb.trace/while-stepping.exp: Ditto.
	* lib/gdb.exp: Ditto.
	(gdb_compile): Handle nowarning option.
@
text
@a0 63
2006-03-07  Paul Brook  <paul@@codesourcery.com>

	Backport from mainline.
	* gdb.arch/altivec-abi.exp: Use nowarnings instead of
	additional_flags=-w.
	* gdb.arch/altivec-regs.exp: Ditto.
	* gdb.arch/e500-abi.exp: Ditto.
	* gdb.arch/e500-regs.exp: Ditto.
	* gdb.base/all-bin.exp: Ditto.
	* gdb.base/annota1.exp: Ditto.
	* gdb.base/annota3.exp: Ditto.
	* gdb.base/args.exp: Ditto.
	* gdb.base/arithmet.exp: Ditto.
	* gdb.base/assign.exp: Ditto.
	* gdb.base/async.exp: Ditto.
	* gdb.base/bang.exp: Ditto.
	* gdb.base/break.exp: Ditto.
	* gdb.base/call-rt-st.exp: Ditto.
	* gdb.base/completion.exp: Ditto.
	* gdb.base/cond-expr.exp: Ditto.
	* gdb.base/condbreak.exp: Ditto.
	* gdb.base/consecutive.exp: Ditto.
	* gdb.base/define.exp: Ditto.
	* gdb.base/display.exp: Ditto.
	* gdb.base/ena-dis-br.exp: Ditto.
	* gdb.base/environ.exp: Ditto.
	* gdb.base/eval-skip.exp: Ditto.
	* gdb.base/info-proc.exp: Ditto.
	* gdb.base/jump.exp: Ditto.
	* gdb.base/logical.exp: Ditto.
	* gdb.base/long_long.exp: Ditto.
	* gdb.base/maint.exp: Ditto.
	* gdb.base/miscexprs.exp: Ditto.
	* gdb.base/pc-fp.exp: Ditto.
	* gdb.base/pointers.exp: Ditto.
	* gdb.base/relational.exp: Ditto.
	* gdb.base/reread.exp: Ditto.
	* gdb.base/sect-cmd.exp: Ditto.
	* gdb.base/sep.exp: Ditto.
	* gdb.base/sepdebug.exp: Ditto.
	* gdb.base/until.exp: Ditto.
	* gdb.base/whatis-exp.exp: Ditto.
	* gdb.cp/annota2.exp: Ditto.
	* gdb.cp/annota3.exp: Ditto.
	* gdb.trace/actions.exp: Ditto.
	* gdb.trace/backtrace.exp: Ditto.
	* gdb.trace/circ.exp: Ditto.
	* gdb.trace/collection.exp: Ditto.
	* gdb.trace/deltrace.exp: Ditto.
	* gdb.trace/infotrace.exp: Ditto.
	* gdb.trace/limits.exp: Ditto.
	* gdb.trace/packetlen.exp: Ditto.
	* gdb.trace/passc-dyn.exp: Ditto.
	* gdb.trace/passcount.exp: Ditto.
	* gdb.trace/report.exp: Ditto.
	* gdb.trace/save-trace.exp: Ditto.
	* gdb.trace/tfind.exp: Ditto.
	* gdb.trace/tracecmd.exp: Ditto.
	* gdb.trace/while-dyn.exp: Ditto.
	* gdb.trace/while-stepping.exp: Ditto.
	* lib/gdb.exp: Ditto.
	(gdb_compile): Handle nowarning option.

@


1.1.12.2
log
@2006-03-07  Paul Brook  <paul@@codesourcery.com>

	Backport from mainline.
	2006-03-03  Khem Raj <khem@@mvista.com>
	* remote-rdp.c (remote_rdp_xfer_inferior_memory): Use gdb_byte.
@
text
@a3 6
	2006-03-03  Khem Raj <khem@@mvista.com>
	* remote-rdp.c (remote_rdp_xfer_inferior_memory): Use gdb_byte.

2006-03-07  Paul Brook  <paul@@codesourcery.com>

	Backport from mainline.
@


1.1.12.3
log
@2006-03-07  Paul Brook  <paul@@codesourcery.com>

	Backport from mainline.
	* gdb/testsuite/lib/compiler.c: Extract armcc version number.
	* gdb/testsuite/lib/compiler.cc: Ditto.
@
text
@a3 6
	* gdb/testsuite/lib/compiler.c: Extract armcc version number.
	* gdb/testsuite/lib/compiler.cc: Ditto.

2006-03-07  Paul Brook  <paul@@codesourcery.com>

	Backport from mainline.
@


1.1.12.4
log
@2006-03-07  Paul Brook  <paul@@codesourcery.com>

	Backport from mainline.
	* sim/arm/elfos.c (ARMul_OSHandleSWI): Call correct function for IsTTY.
@
text
@a3 5
	* sim/arm/elfos.c (ARMul_OSHandleSWI): Call correct function for IsTTY.

2006-03-07  Paul Brook  <paul@@codesourcery.com>

	Backport from mainline.
@


1.1.12.5
log
@2006-03-07  Paul Brook  <paul@@codesourcery.com>

	Backport from mainline.
	* gdb/testsuite/gdb.base/assign.exp: Correct fail message.
@
text
@a3 5
	* gdb/testsuite/gdb.base/assign.exp: Correct fail message.

2006-03-07  Paul Brook  <paul@@codesourcery.com>

	Backport from mainline.
@


1.1.12.6
log
@2006-03-08  Paul Brook  <paul@@codesourcery.com>

	Backport from mainline.
	* gdb/arm-tdep.c (arm_push_dummy_call): Remove stack alignment.
	(arm_frame_align): New function.
	(arm_gdbarch_init): Use it.
@
text
@a0 7
2006-03-08  Paul Brook  <paul@@codesourcery.com>

	Backport from mainline.
	* gdb/arm-tdep.c (arm_push_dummy_call): Remove stack alignment.
	(arm_frame_align): New function.
	(arm_gdbarch_init): Use it.

@


1.1.12.7
log
@Move ChangeLog entries to top-level ChangeLog.csl.
@
text
@a0 27
2006-03-17  Jim Blandy  <jimb@@codesourcery.com>

	Add support for 'target remote |' on MinGW.
	* gdb/ser-mingw.c (struct pipe_state): New structure.
	(make_pipe_state, free_pipe_state, cleanup_pipe_state)
	(pipe_windows_open, pipe_windows_close, pipe_windows_read)
	(pipe_windows_write, pipe_wait_handle): New functions.
	(_initialize_ser_windows): Register a "pipe" interface based on
	them.

 	* libiberty/pex-common.c (pex_write_input): New function.
 	* libiberty/pexecute.txh (pex_write_input): Document it.
 	* libiberty/pex-common.h (struct pex_funcs): New function ptr fdopenw.
 	* libiberty/pex-unix.c (pex_unix_fdopenw): New function.
 	(funcs): List it as our fdopenw function.
 	* libiberty/pex-win32.c (pex_win32_fdopenw): New function.
 	(funcs): List it as our fdopenw function.
 	* libiberty/pex-djgpp.c (funcs): Leave fdopenw null.
 	* libiberty/pex-msdos (funcs): Same.
 	* libiberty/functions.texi: Regenerated.

 	* include/libiberty.h (pex_write_input): New declaration.

	* libiberty/pex-common.h (struct pex_obj): Doc fixes.

	* libibery/functions.texi: Regenerate.

@


1.1.12.8
log
@	* gdb/config/arm/embed.mt (TDEPFILES): Remove remote-rdp.o.
@
text
@a0 4
2006-03-17  Mark Mitchell  <mark@@codesourcery.com>

	* gdb/config/arm/embed.mt (TDEPFILES): Remove remote-rdp.o.

@


1.1.12.9
log
@	* configure.tgt (arm*-stellaris-*): Use armv7m configuration.
	* config/arm/armv7m.mt: New file.
	* config/arm/tm-armv7m.h: Likewise.
	* arm-tdep.c (arm_register_name_strings): Use xPSR on ARM V7M.
	(arm_pc_is_thumb): ARM V7M is always Thumb.
	(set_disassembly_style): Use xPSR on ARM V7M.
	(arm_write_pc): Do not set T bit in CSPR on V7M.
@
text
@a0 26
	* configure.tgt (arm*-stellaris-*): Use armv7m configuration.
	* config/arm/armv7m.mt: New file.
	* config/arm/tm-armv7m.h: Likewise.
	* arm-tdep.c (arm_register_name_strings): Use xPSR on ARM V7M.
	(arm_pc_is_thumb): ARM V7M is always Thumb.
	(set_disassembly_style): Use xPSR on ARM V7M.
	(arm_write_pc): Do not set T bit in CSPR on V7M.

2006-03-20  Mark Mitchell  <mark@@codesourcery.com>

	* libiberty/pex-win32.c (<errno.h>): Include.
	(fix_argv): Remove.
	(argv_to_cmdline): New function.
	(std_suffixes): New variable.
	(no_suffixes): Likewise.
	(find_executable): New function.
	(win32_spawn): Likewise.
	(spawn_script): Use win32_spawn instead of _spawnv[p].
	(pex_win32_exec_child): Replace MSVCRT calls with Win32 API calls.
	(pex_win32_wait): Likewise.

2006-03-19  Mark Mitchell  <mark@@codesourcery.com>

	* gdb/ser-mingw.c (free_pipe_state): Close pipe before calling
	pex_free. 

@


1.1.12.10
log
@2006-03-21  Paul Brook  <paul@@codesourcery.com>
	Daniel Jacobowitz <dan@@codesourcery.com>
	Jim Blandy <jimb@@codesourcery.com>

	* gdb/Makefile.in: Add prologue_value.{c,h}
	* gdb/arm-tdep.c: Include prologue-value.h.
	(thumb_skip_prologue): Remove.
	(thumb_analyze_prologue): New function.
	(arm_skip_prologue): Use thumb_analyze_prologue.
	(thumb_scan_prologue): Ditto.
	* gdb/prologue-value.c: New file.
	* gdb/prologue-value.h: New file.
	* gdb/config/arm/embed.mt (TDEPFILES): Add prologue-value.o.
	* gdb/config/arm/linux.mt (TDEPFILES): Add prologue-value.o.
	* gdb/config/arm/nbsd.mt (TDEPFILES): Add prologue-value.o.
	* gdb/config/arm/wince.mt (TDEPFILES): Add prologue-value.o.
	* gdb/testsuite/gdb.arch/thumb-prologue.c: New file.
	* gdb/testsuite/gdb.arch/thumb-prologue.exp: New file.
@
text
@a0 21
2006-03-21  Paul Brook  <paul@@codesourcery.com>
	Daniel Jacobowitz <dan@@codesourcery.com>
	Jim Blandy <jimb@@codesourcery.com>

	* gdb/Makefile.in: Add prologue_value.{c,h}
	* gdb/arm-tdep.c: Include prologue-value.h.
	(thumb_skip_prologue): Remove.
	(thumb_analyze_prologue): New function.
	(arm_skip_prologue): Use thumb_analyze_prologue.
	(thumb_scan_prologue): Ditto.
	* gdb/prologue-value.c: New file.
	* gdb/prologue-value.h: New file.
	* gdb/config/arm/embed.mt (TDEPFILES): Add prologue-value.o.
	* gdb/config/arm/linux.mt (TDEPFILES): Add prologue-value.o.
	* gdb/config/arm/nbsd.mt (TDEPFILES): Add prologue-value.o.
	* gdb/config/arm/wince.mt (TDEPFILES): Add prologue-value.o.
	* gdb/testsuite/gdb.arch/thumb-prologue.c: New file.
	* gdb/testsuite/gdb.arch/thumb-prologue.exp: New file.

2006-03-20  Mark Mitchell  <mark@@codesourcery.com>

@


1.1.12.11
log
@	* gdb/config/arm/armv7m.mt (TDEPFILES): Add prologue-value.o.
@
text
@a0 4
2006-03-20  Mark Mitchell  <mark@@codesourcery.com>

	* gdb/config/arm/armv7m.mt (TDEPFILES): Add prologue-value.o.

@


1.1.12.12
log
@	* libiberty/pex-common.c (pex_run): Close the write end of the
	pipe after starting the child.
@
text
@a2 3
	* libiberty/pex-common.c (pex_run): Close the write end of the
	pipe after starting the child.

@


1.1.12.13
log
@	* gdb/ser-mingw.c (net_windows_state): Add mutex.
	(net_windows_select_thread): Grab lock around access to
	read_event.
	(net_windows_wait_handle): Do not reset the read_event.
	(net_windows_open): Create a mutex.
	(net_windows_read_prim): New function.
	(_initialize_ser_windows): Use it.
@
text
@a0 10
2006-03-21  Mark Mitchell  <mark@@codesourcery.com>

	* gdb/ser-mingw.c (net_windows_state): Add mutex.
	(net_windows_select_thread): Grab lock around access to
	read_event.
	(net_windows_wait_handle): Do not reset the read_event.
	(net_windows_open): Create a mutex.
	(net_windows_read_prim): New function.
	(_initialize_ser_windows): Use it.

@


1.1.12.14
log
@	* gdb/m68k-tdep.c (M68K_FPREG_TYPE, M68K_LONG_DOUBLE_FORMAT,
	M68K_RETURN_FP0): New.  Set for Coldfire.
	(m68k_register_type, m68k_register_to_value,
	m68k_svr4_extract_return_value, m68k_svr4_store_return_value,
	m68k_gdbarch_init): Use them.
@
text
@a0 8
2006-03-29  Nathan Sidwell  <nathan@@codesourcery.com>

	* gdb/m68k-tdep.c (M68K_FPREG_TYPE, M68K_LONG_DOUBLE_FORMAT,
	M68K_RETURN_FP0): New.  Set for Coldfire.
	(m68k_register_type, m68k_register_to_value,
	m68k_svr4_extract_return_value, m68k_svr4_store_return_value,
	m68k_gdbarch_init): Use them.

@


1.1.12.15
log
@2006-03-30  Paul Brook  <paul@@codesourcery.com>

	Backport form mainline.
	* gdb/testsuite/gdb.mi/mi-until.exp: kfail broken until command.
	* gdb/testsuite/gdb.mi/mi2-until.exp: Ditto.
@
text
@a0 6
2006-03-30  Paul Brook  <paul@@codesourcery.com>

	Backport form mainline.
	* gdb/testsuite/gdb.mi/mi-until.exp: kfail broken until command.
	* gdb/testsuite/gdb.mi/mi2-until.exp: Ditto.

@


1.1.12.16
log
@	* libiberty/configure.ac: Add cygpath for mingw hosts.
	* libiberty/configure: Rebuilt.
	* libiberty/Makefile.in: Add cygpath.
	* libiberty/cygpath.c: New.
@
text
@a0 7
2006-03-30  Mark Mitchell <mark@@codesourcery.com>

	* libiberty/configure.ac: Add cygpath for mingw hosts.
	* libiberty/configure: Rebuilt.
	* libiberty/Makefile.in: Add cygpath.
	* libiberty/cygpath.c: New.

@


1.1.12.17
log
@	* gdb/gdbserver/Makefile.in (reg-cf.o, reg-cf.c): New targets.
	* gdb/gdbserver/configure.srv (m68k*-*-uclinux*): New target.
	* gdb/gdbserver/linux-low.c (linux_create_inferior): Use vfork on
	mmuless systems.
	(linux_resume_one_process): Remove extraneous cast.
	(linux_read_offsets): New.
	(linux_target_op): Add linux_read_offsets on mmuless systems.
	* gdb/gdbserver/server.c (handle_query): Add qOffsets logic.
	* gdb/gdbserver/target.h (struct target_ops): Add read_offsets.
@
text
@a0 12
2006-03-31  Nathan Sidwell  <nathan@@codesourcery.com>

	* gdb/gdbserver/Makefile.in (reg-cf.o, reg-cf.c): New targets.
	* gdb/gdbserver/configure.srv (m68k*-*-uclinux*): New target.
	* gdb/gdbserver/linux-low.c (linux_create_inferior): Use vfork on
	mmuless systems.
	(linux_resume_one_process): Remove extraneous cast.
	(linux_read_offsets): New.
	(linux_target_op): Add linux_read_offsets on mmuless systems.
	* gdb/gdbserver/server.c (handle_query): Add qOffsets logic.
	* gdb/gdbserver/target.h (struct target_ops): Add read_offsets.

@


1.1.12.18
log
@missing changelog
@
text
@a2 3
	* gdb/gdbserver/linux-low.c (linux_read_offsets): Remove debugging
	printf.

@


1.1.12.19
log
@	* gdb/remote.c (remote_fetch_registers): Don't warn about short
	register packet if we've not set the expected value.
@
text
@a2 3
	* gdb/remote.c (remote_fetch_registers): Don't warn about short
	register packet if we've not set the expected value.

@


1.1.12.20
log
@	* gdb/remote.c (remote_fetch_registers): Revert bogus change.
@
text
@a2 2
	* gdb/remote.c (remote_fetch_registers): Revert bogus change.

@


1.1.12.21
log
@	* gdb/m68k-tdep.c (M68K_FPREG_SIZE): Define.
	(REGISTER_BYTES_FP): Use it.

	* gdb/configure.tgt (m68k-*-uclinux*): target is linux.
@
text
@a2 5
	* gdb/m68k-tdep.c (M68K_FPREG_SIZE): Define.
	(REGISTER_BYTES_FP): Use it.

	* gdb/configure.tgt (m68k-*-uclinux*): target is linux.

@


1.1.12.22
log
@Add ChangeLog entries to the right branch.
@
text
@a141 104
2006-03-15  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/gdb_proc_service.h (paddr_t): Use psaddr_t if available.
	* gdb/proc-service.c (ps_xfer_memory): Cast paddr_t to unsigned
	long.
	(ps_pglobal_lookup): Cast CORE_ADDR to paddr_t.

2006-03-15  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/gdbserver/linux-mips-low.c: Include <sys/ptrace.h> and
	"gdb_proc_service.h".
	(PTRACE_GET_THREAD_AREA): Define.
	(ps_get_thread_area): New function.
	* gdb/gdbserver/Makefile.in (linux-i386-low.o, linux-mips-low.o)
	(linux-x86-64-low.o): Update.

2006-03-15  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/gdbserver/configure.ac: Remove checks for prfpregset_t.
	* gdb/gdbserver/gdb_proc_service.h: New file.
	* gdb/gdbserver/linux-i386-low.c, gdb/gdbserver/linux-x86-64-low.c,
	gdb/gdbserver/thread-db.c: Use the new "gdb_proc_service.h".
	* gdb/gdbserver/proc-service.c: Likewise.
	(ps_pglobal_lookup, ps_pdread, ps_pdwrite): Use psaddr_t.
	(ps_lgetfpregs, ps_lsetfpregs): Use a void* argument.
	* gdb/gdbserver/Makefile.in (gdb_proc_service_h): Updated.
	* gdb/gdbserver/configure, config.in: Regenerated.

2006-03-15  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/Makefile.in (mips_linux_tdep_h): New.
	(mpis-linux-nat.o, mips-linux-tdep.o): Update.
	* gdb/mips-linux-nat.c: Include "inferior.h", "mips-linux-tdep.h", and
	<sys/ptrace.h>.
	(have_ptrace_regsets, super_fetch_registers, super_store_registers)
	(mips64_linux_regsets_fetch_registers)
	(mips64_linux_regsets_store_registers, mips64_linux_fetch_registers)
	(mips64_linux_store_registers): New.
	(_initialize_mips_linux_nat): Override to_fetch_registers and
	to_store_registers.
	* gdb/mips-linux-tdep.h: New file.
	* gdb/mips-linux-tdep.c: Include "mips-linux-tdep.c".
	(ELF_NGREG, ELF_NFPREG, elf_greg_t, elf_gregset_t, elf_fpreg_t)
	(elf_fpregset_t, FPR_BASE, PC, CAUSE, BADVADDR, MMHI, MMLO)
	(FPC_CSR, FPC_EIR, EF_REG0, EF_REG31, EF_LO, EF_HI, EF_CP0_EPC)
	(EF_CP0_BADVADDR, EF_CP0_STATUS, EF_CP0_CAUSE, EF_SIZE)
	(MIPS64_ELF_NGREG, MIPS64_ELF_NFPREG, mips64_elf_greg_t)
	(mips64_elf_gregset_t, mips64_elf_fpreg_t, mips64_elf_fpregset_t)
	(MIPS64_FPR_BASE, MIPS64_PC, MIPS64_CAUSE, MIPS64_BADVADDR)
	(MIPS64_MMHI, MIPS64_MMLO, MIPS64_FPC_CSR, MIPS64_FPC_EIR)
	(MIPS64_EF_REG0, MIPS64_EF_REG31, MIPS64_EF_LO, MIPS64_EF_HI)
	(MIPS64_EF_CP0_EPC, MIPS64_EF_CP0_BADVADDR, MIPS64_EF_CP0_STATUS)
	(MIPS64_EF_CP0_CAUSE, MIPS64_EF_SIZE): Delete.
	(supply_32bit_reg): Use gdb_byte.
	(supply_64bit_reg): New.
	(mips_supply_gregset, mips_fill_gregset, mips_supply_fpregset)
	(mips_fill_fpregset, fetch_core_registers, supply_gregset)
	(fill_gregset, supply_fpregset): Update for renamed types.
	(mips64_supply_gregset): Use gdb_byte and supply_64bit_reg.
	(mips64_fill_gregset): Make global.  Handle 32-bit register
	sizes.
	(mips64_fill_fpregset): Make global.  Use gdb_byte.  Handle
	FP regsets properly.

2006-03-15  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/mips-linux-tdep.c (mips_supply_gregset): Renamed from supply_gregset.
	(mips_fill_gregset): Renamed from fill_gregset.
	(mips_supply_fpregset): Renamed from supply_fpregset.
	(mips_fill_fpregset): Renamed from fill_fpregset.
	(fetch_core_registers): Update calls.
	(supply_gregset, fill_gregset, supply_fpregset, fill_fpregset): New
	functions.

2006-03-15  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/mips-tdep.c (mips_gdbarch_init): Default 64-bit ELF files to N64.

2006-03-15  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/mips-tdep.c (is_mips16_addr, mips32_next_pc, add_offset_16):
	Correct arithmetic for 64-bit CORE_ADDR.

2006-03-15  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/mips-linux-tdep.c: Include "floatformat.h".
	(mips_linux_init_abi): Use 128-bit long double for N32 and N64.
	(mips_n32n64_return_value): Support 128-bit long double.
	(print_gp_register_row): Don't print spaces before ignored
	or floating point registers.

2006-03-15  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/mips-mdebug-tdep.c (compare_pdr_entries): Use bfd_get_signed_32
	for code addresses.
	(non_heuristic_proc_desc): Likewise.

2006-03-15  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/mips-linux-nat.c: Include "gdb_proc_service.h".
	(PTRACE_GET_THREAD_AREA): Define.
	(ps_get_thread_area): New.
	* gdb/Makefile.in (mips-linux-nat.o): Update.

@


1.1.12.23
log
@	* gdb/config/m68k/monitor.mt (TDEPFILES): Remove unneeded
	monitors.
	(DEPRECATED_TM_FILE): Remove.
@
text
@a2 4
	* gdb/config/m68k/monitor.mt (TDEPFILES): Remove unneeded
	monitors.
	(DEPRECATED_TM_FILE): Remove.

@


1.1.12.24
log
@Merge XML and VFP support to this branch.
@
text
@a0 48
2006-04-02  Daniel Jacobowitz  <dan@@codesourcery.com>

	* Makefile.def (host_modules, dependencies): Add expat.
	* configure.in (host_libs): Add expat.
	* Makefile.in, configure: Regenerate.
	* expat: New directory.

	* gdb/Makefile.in: Add expat, new files, and xml-builtin.c.  Update
	dependencies.
	* gdb/acinclude.m4: Include stdint.m4.
	* gdb/configure.ac: Use AC_C_BIGENDIAN and GCC_HEADER_STDINT.
	* gdb/aclocal.m4, gdb/config.in, gdb/configure: Regenerate.

	* gdb/auxv.h: Remove target_auxv_read prototype.
	* gdb/auxv.c, gdb/avr-tdep.c, gdb/ia64-tdep.c, gdb/linux-nat.c,
	gdb/procfs.c: Use target_read_whole.
	* gdb/sparc-tdep.c: Use target_read.

	* gdb/frame.c: Work around null frame_id handling.

	* gdb/breakpoint.c, gdb/f-valprint.c, gdb/infcmd.c, gdb/inflow.c,
	gdb/infrun.c, gdb/stack.c, gdb/valops.c, gdb/varobj.c,
	gdb/cli-cmds.c, gdb/testsuite/gdb.base/default.exp,
	gdb/tui/tui-disasm.c, gdb/tui/tui-source.c,
	gdb/tui/tui-winsource.c: Selected frame fixups.

	* gdb/README.AVAIL, gdb/available.c, gdb/available.h,
	gdb/parse-avail.c, gdb/sha1.c, gdb/features/feature_to_c.sh,
	gdb/features/gdb-target.dtd: New files.
	* gdb/arm-tdep.c: Handle missing FPA, present VFP, and
	self-described registers.  Decode VFP register numbers from DWARF.
	* gdb/arm-tdep.h: Add flags for VFP and FPA.
	* gdb/gdbarch.sh: Add available_features_support and feature_set.
	Export the arch's obstack.  Check feature sets.  Improve error
	handling.
	* gdb/gdbarch.c, gdb/gdbarch.h: Regenerated.
	* gdb/infcmd.c: Trigger architecture selection.
	* gdb/remote.c: Available feature support.  qPacketInfo support.
	Improved g/G packet support.  Improved qPart support.
	qPart:features support.
	* gdb/symfile.c: Adjust download_write_size.
	* gdb/target.c: Revise partial transfer support.  Handle available
	features method.  Add target_read_whole.
	* gdb/target.h: Add the available features object and methods.
	* gdb/doc/gdb.texinfo: Document new features.

	* gdb/symfile.h: Include symtab.h.

@


1.1.12.25
log
@	Backport:
	2006-03-09  Paul Brook  <paul@@codesourcery.com>
	* bfd/cpu-arm.c (bfd_is_arm_mapping_symbol_name): Recognise additional
	mapping symbols.
@
text
@a0 7
2006-04-11  Daniel Jacobowitz  <dan@@codesourcery.com>

	Backport:
	2006-03-09  Paul Brook  <paul@@codesourcery.com>
	* bfd/cpu-arm.c (bfd_is_arm_mapping_symbol_name): Recognise additional
	mapping symbols.

@


1.1.12.26
log
@	* bfd/cpu-arm.c (bfd_is_arm_mapping_symbol_name): Accept more
	mapping symbols.
@
text
@a2 5
	* bfd/cpu-arm.c (bfd_is_arm_mapping_symbol_name): Accept more
	mapping symbols.

2006-04-11  Daniel Jacobowitz  <dan@@codesourcery.com>

@


1.1.12.27
log
@	* mt-tdep.c (mt_gdb_regnums): Define
	MT_COPRO_PSEUDOREG_MAC_REGNUM.
	(mt_register_name): Use it.
	(mt_copro_register_type): Likewise.
	(mt_register_type): Likewise.
	(mt_pseudo_register_read): Likewise.  Read the MAC register, not
	the coprocessor register.
	(mt_pseudo_register_write): Likewise.
@
text
@a0 12
2006-04-11  Mark Mitchell  <mark@@codesourcery.com>

	Issue #658
	* gdb/mt-tdep.c (mt_gdb_regnums): Define
	MT_COPRO_PSEUDOREG_MAC_REGNUM.
	(mt_register_name): Use it.
	(mt_copro_register_type): Likewise.
	(mt_register_type): Likewise.
	(mt_pseudo_register_read): Likewise.  Read the MAC register, not
	the coprocessor register.
	(mt_pseudo_register_write): Likewise.

@


1.1.12.28
log
@	Issue #655
	* gdb/mt-tdep.c (mt_gdb_regnums): Add ZI2, ZQ2, Ichannel2,
	Iscramb2, Qscramb2, Qchannel2.
	(mt_register_name): Likewise.
	(mt_copro_register_type): Describe ZI2 and ZQ2.
@
text
@a0 8
2006-04-18  Mark Mitchell  <mark@@codesourcery.com>

	Issue #655
	* gdb/mt-tdep.c (mt_gdb_regnums): Add ZI2, ZQ2, Ichannel2,
	Iscramb2, Qscramb2, Qchannel2.
	(mt_register_name): Likewise.
	(mt_copro_register_type): Describe ZI2 and ZQ2.
	
@


1.1.12.29
log
@	* gdb/doc/gdb.texinfo (Remote configuration): Mention "set remote
	load-offsets".
	(General Query Packets): Document qPartInfo.
@
text
@a0 6
2006-04-19  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/doc/gdb.texinfo (Remote configuration): Mention "set remote
	load-offsets".
	(General Query Packets): Document qPartInfo.

@


1.1.12.30
log
@	* gdb/gdbserver/configure.srv (m68k*-*-linux*): Use reg-cf.o.
@
text
@a0 4
2006-04-28  Richard Sandiford  <richard@@codesourcery.com>

	* gdb/gdbserver/configure.srv (m68k*-*-linux*): Use reg-cf.o.

@


1.1.12.31
log
@	* gdb/mt-tdep.c (mt_register_name): Correct out-of-range logic to
	include additional registers.
@
text
@a0 5
2006-04-28  Mark Mitchell  <mark@@codesourcery.com>

	* gdb/mt-tdep.c (mt_register_name): Correct out-of-range logic to
	include additional registers. 

@


1.1.12.32
log
@2006-05-03  Paul Brook  <paul@@codesourcery.com>

	* gdb/dwarf2read.c (field_info): Add baseclasses.
	(dwarf2_add_field): Check base classes.
	(dwarf2_attach_fields_to_type): Ditto.

	* gdb/gnu-v3-abi.c (gnuv3_rtti_type): Check for NULL base_type.
	(gnuv3_virtual_fn_field): Handle missing base.
	(gnuv3_baseclass_offset): Handle missing vptr.
	* gdb/varobj.c (cplus_class_num_children): Call fill_in_vptr_fieldno.
	(cplus_name_of_child): Ditto.
	* gdb/eval.c (evaluate_subexp_standard): Ditto.
	* gdb/dwarf2read.c (read_structure_type): Search for vtable pointer
	by name in objects built by ARM compiler.

	* gdb/dwarf2read.c (dwarf2_add_member_fn): Calculate virtual function
	offset for classes without DW_AT_containing_type.
@
text
@a0 18
2006-05-03  Paul Brook  <paul@@codesourcery.com>

	* gdb/dwarf2read.c (field_info): Add baseclasses.
	(dwarf2_add_field): Check base classes.
	(dwarf2_attach_fields_to_type): Ditto.
	
	* gdb/gnu-v3-abi.c (gnuv3_rtti_type): Check for NULL base_type.
	(gnuv3_virtual_fn_field): Handle missing base.
	(gnuv3_baseclass_offset): Handle missing vptr.
	* gdb/varobj.c (cplus_class_num_children): Call fill_in_vptr_fieldno.
	(cplus_name_of_child): Ditto.
	* gdb/eval.c (evaluate_subexp_standard): Ditto.
	* gdb/dwarf2read.c (read_structure_type): Search for vtable pointer
	by name in objects built by ARM compiler.
	
	* gdb/dwarf2read.c (dwarf2_add_member_fn): Calculate virtual function
	offset for classes without DW_AT_containing_type.

@


1.1.12.33
log
@2006-05-03  Paul Brook  <paul@@codesourcery.com>
	Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/dwarf2read.c (read_subroutine_type): Add armcc workaround.

	* gdb/dwarf2read.c (read_structure_type): Look for ADS vtable
	pointers.

	* gdb/dwarf2read.c (dwarf_decode_lines): Don't set dir for absolute
	paths.
	(dwarf_decode_lines): Ditto.
	(dwarf2_start_subfile): Split absolute filenames into path+file.

	* gdb/symtab.h (struct symbol): Add is_argument.
	(SYMBOL_IS_ARGUMENT): Define.
	* gdb/stack.c (print_frame_args): Use SYMBOL_IS_ARGUMENT.
	(print_frame_arg_vars): Ditto.
	* gdb/dwarf2read.c (new_symbol): Set SYMBOL_IS_ARGUMENT.
	(new_symbol): Mark optimized out arguments.

	* gdb/dwarf2read.c (partial_read_comp_unit_head): Accept version 3.

	* gdb/dwarf2read.c (read_unspecified_type): New function.
	(read_type_die): Handle DW_TAG_unspecified_type.
@
text
@a1 26
	Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/dwarf2read.c (read_subroutine_type): Add armcc workaround.

	* gdb/dwarf2read.c (read_structure_type): Look for ADS vtable
	pointers.

	* gdb/dwarf2read.c (dwarf_decode_lines): Don't set dir for absolute
	paths.
	(dwarf_decode_lines): Ditto.
	(dwarf2_start_subfile): Split absolute filenames into path+file.

	* gdb/symtab.h (struct symbol): Add is_argument.
	(SYMBOL_IS_ARGUMENT): Define.
	* gdb/stack.c (print_frame_args): Use SYMBOL_IS_ARGUMENT.
	(print_frame_arg_vars): Ditto.
	* gdb/dwarf2read.c (new_symbol): Set SYMBOL_IS_ARGUMENT.
	(new_symbol): Mark optimized out arguments.

	* gdb/dwarf2read.c (partial_read_comp_unit_head): Accept version 3.

	* gdb/dwarf2read.c (read_unspecified_type): New function.
	(read_type_die): Handle DW_TAG_unspecified_type.

2006-05-03  Paul Brook  <paul@@codesourcery.com>
	Daniel Jacobowitz  <dan@@codesourcery.com>
@


1.1.12.34
log
@2006-05-03  Paul Brook  <paul@@codesourcery.com>
	Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/c-valprint.c: Handle class member typedefs.

	* gdb/symtab.c (skip_prologue_using_sal): Treat two consecutive lines
	at the same address as a prolouge marker.
	* gdb/arm-tdep.c (arm_skip_prologue): Use skip_prologue_using_sal.

	* gdb/dwarf2expr.c (execute_stack_op): Check for bogus DW_OP_reg.

	* gdb/dwarf2read.c (read_structure_type): Use tag name for C++/Java
	classes.

	* Makefile.in (eval.o): Update dependencies.
	* eval.c: Include "ui-out.h" and "exceptions.h".
	(evaluate_subexp_standard): Use TRY_CATCH around value_of_variable.
	Use value_zero if an error occurs when avoiding side effects.
	* varobj.c (varobj_create): Call release_value after evaluate_type.
	(c_value_of_root): Initialize new_val.  Don't release_value a NULL
	value.

	* gdb/c-typeprint.c (cp_type_print_method_args): Don't print type
	details.

	* gdb/dwarf2read.c (dwarf2_debug_line_missing_file_complaint): New
	function.
	(dwarf_decode_lines): Check for line info without a file.
@
text
@a3 29
	* gdb/c-valprint.c: Handle class member typedefs.

	* gdb/symtab.c (skip_prologue_using_sal): Treat two consecutive lines
	at the same address as a prolouge marker.
	* gdb/arm-tdep.c (arm_skip_prologue): Use skip_prologue_using_sal.

	* gdb/dwarf2expr.c (execute_stack_op): Check for bogus DW_OP_reg.

	* gdb/dwarf2read.c (read_structure_type): Use tag name for C++/Java
	classes.

	* Makefile.in (eval.o): Update dependencies.
	* eval.c: Include "ui-out.h" and "exceptions.h".
	(evaluate_subexp_standard): Use TRY_CATCH around value_of_variable.
	Use value_zero if an error occurs when avoiding side effects.
	* varobj.c (varobj_create): Call release_value after evaluate_type.
	(c_value_of_root): Initialize new_val.  Don't release_value a NULL
	value.

	* gdb/c-typeprint.c (cp_type_print_method_args): Don't print type
	details.

	* gdb/dwarf2read.c (dwarf2_debug_line_missing_file_complaint): New
	function.
	(dwarf_decode_lines): Check for line info without a file.

2006-05-03  Paul Brook  <paul@@codesourcery.com>
	Daniel Jacobowitz  <dan@@codesourcery.com>

@


1.1.12.35
log
@2006-05-03  Paul Brook  <paul@@codesourcery.com>

	* arm-linux-tdep.c (arm_linux_extract_return_value): Use gdb_byte.
@
text
@a1 4

	* arm-linux-tdep.c (arm_linux_extract_return_value): Use gdb_byte.

2006-05-03  Paul Brook  <paul@@codesourcery.com>
@


1.1.12.36
log
@2006-05-03  Paul Brook  <paul@@codesourcery.com>
	Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/testsuite/gdb.cp/gdb1355.exp: Accept different spellings of
	integer types.
	* gdb/testsuite/gdb.cp/gdb1355.cc: Ensure all types are referenced.
	* gdb/testsuite/gdb.cp/hang2.C: Ditto.
	* gdb/testsuite/gdb.cp/m-data.cc: Ditto.
	* gdb/testsuite/gdb.cp/hang3.C: Ditto.
	* gdb/testsuite/gdb.cp/hang1.C: Ditto.

	* gdb/gdbtypes.c (rank_one_type): Check for plain char -> signed/
	unsigned char.

	* gdb/testsuite/gdb.base/completion.exp: Accept "long" as a type.

	* gdb/testsuite/gdb.base/volatile.exp: Accept different spellings of
	integer types.
	* gdb/testsuite/gdb.base/constvars.c: Ensure all types are referenced.

	* gdb/testsuite/gdb.stabs/weird.exp: Return -1 instead of issuing
	error.

	* gdb/testsuite/gdb.base/advance.c: Add proper function prototype.

	* gdb/testsuite/gdb.base/ending-run.exp: Add case for ARM runtime.

	* gdb/testsuite/gdb.base/gdb1821.c: Ensure all types are referenced.

	* gdb/testsuite/gdb.base/ptype.exp: Accept different spellings of
	integer types.

	* gdb/testsuite/gdb.cp/inherit.exp: Cope with armcc vtable pointers.

	* gdb/testsuite/gdb.mi/mi2-var-child.exp: Accept different spellings
	of integer types.
	* gdb/testsuite/gdb.mi/mi-var-display.exp: Ditto.
	* gdb/testsuite/gdb.mi/mi2-var-display.exp: Ditto.
	* gdb/testsuite/gdb.mi/mi2-var-cmd.exp: Ditto.
@
text
@a1 40
	Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/testsuite/gdb.cp/gdb1355.exp: Accept different spellings of
	integer types.
	* gdb/testsuite/gdb.cp/gdb1355.cc: Ensure all types are referenced.
	* gdb/testsuite/gdb.cp/hang2.C: Ditto.
	* gdb/testsuite/gdb.cp/m-data.cc: Ditto.
	* gdb/testsuite/gdb.cp/hang3.C: Ditto.
	* gdb/testsuite/gdb.cp/hang1.C: Ditto.

	* gdb/gdbtypes.c (rank_one_type): Check for plain char -> signed/
	unsigned char.

	* gdb/testsuite/gdb.base/completion.exp: Accept "long" as a type.

	* gdb/testsuite/gdb.base/volatile.exp: Accept different spellings of
	integer types.
	* gdb/testsuite/gdb.base/constvars.c: Ensure all types are referenced.

	* gdb/testsuite/gdb.stabs/weird.exp: Return -1 instead of issuing
	error.

	* gdb/testsuite/gdb.base/advance.c: Add proper function prototype.

	* gdb/testsuite/gdb.base/ending-run.exp: Add case for ARM runtime.

	* gdb/testsuite/gdb.base/gdb1821.c: Ensure all types are referenced.

	* gdb/testsuite/gdb.base/ptype.exp: Accept different spellings of
	integer types.

	* gdb/testsuite/gdb.cp/inherit.exp: Cope with armcc vtable pointers.

	* gdb/testsuite/gdb.mi/mi2-var-child.exp: Accept different spellings
	of integer types.
	* gdb/testsuite/gdb.mi/mi-var-display.exp: Ditto.
	* gdb/testsuite/gdb.mi/mi2-var-display.exp: Ditto.
	* gdb/testsuite/gdb.mi/mi2-var-cmd.exp: Ditto.

2006-05-03  Paul Brook  <paul@@codesourcery.com>
@


1.1.12.37
log
@include/opcodes/
	* m68k.h (mcf_mask): Define.

opcodes/
	* m68k-opc.c (m68k_opcodes): Fix the masks of the Coldfire fmovemd
	and fmovem entries.  Put register list entries before immediate
	mask entries.  Use "l" rather than "L" in the fmovem entries.
	* m68k-dis.c (match_insn_m68k): Remove the PRIV argument and work it
	out from INFO.
	(m68k_scan_mask): New function, split out from...
	(print_insn_m68k): ...here.  If no architecture has been set,
	first try printing an m680x0 instruction, then try a Coldfire one.
@
text
@a0 15
2006-05-08  Richard Sandiford  <richard@@codesourcery.com>

	include/opcodes/
	* m68k.h (mcf_mask): Define.

	opcodes/
	* m68k-opc.c (m68k_opcodes): Fix the masks of the Coldfire fmovemd
	and fmovem entries.  Put register list entries before immediate
	mask entries.  Use "l" rather than "L" in the fmovem entries.
	* m68k-dis.c (match_insn_m68k): Remove the PRIV argument and work it
	out from INFO.
	(m68k_scan_mask): New function, split out from...
	(print_insn_m68k): ...here.  If no architecture has been set,
	first try printing an m680x0 instruction, then try a Coldfire one.

@


1.1.12.38
log
@	opcodes/
	* m68k-dis.c (m68k_scan_mask): Add missing return.
@
text
@a0 5
2006-05-22  Richard Sandiford  <richard@@codesourcery.com>

	opcodes/
	* m68k-dis.c (m68k_scan_mask): Add missing return.

@


1.1.12.39
log
@	* gdb/remote-fileio.c (remote_fileio_reset): New.
	* gdb/remote-fileio.h (remote_fileio_reset): Prototype.
	* gdb/remote.c (extended_remote_restart, remote_open_1): Call it.
@
text
@a0 6
2006-05-24  Nathan Sidwell  <nathan@@codesourcery.com>

	* gdb/remote-fileio.c (remote_fileio_reset): New.
	* gdb/remote-fileio.h (remote_fileio_reset): Prototype.
	* gdb/remote.c (extended_remote_restart, remote_open_1): Call it.

@


1.1.12.40
log
@	* gdb/breakpoint.c (insert_bp_location): Remember the failing
	watchpoint address and pass to remove_breakpoint.
	(remove_breakpoints, remove_hw_watchpoints, reattach_breakpoints,
	detach_breakpoints): Adjust remove_breakpoint call.
	(remove_breakpoint): Add VAL_FAILED parameter.  Stop removing
	watchpoint addresses when it is reached.
	(delete_breakpoint): Adjust remove_breakpoint call.
@
text
@a0 10
2006-06-01  Nathan Sidwell  <nathan@@codesourcery.com>

	* gdb/breakpoint.c (insert_bp_location): Remember the failing
	watchpoint address and pass to remove_breakpoint.
	(remove_breakpoints, remove_hw_watchpoints, reattach_breakpoints,
	detach_breakpoints): Adjust remove_breakpoint call.
	(remove_breakpoint): Add VAL_FAILED parameter.  Stop removing
	watchpoint addresses when it is reached.
	(delete_breakpoint): Adjust remove_breakpoint call.

@


1.1.12.41
log
@i	* gdb/configure.tgt (gdb_osabi): uclinux is like linux.
	* gdb/m68k-tdep.c (m68k_svr4_extract_return_value): Return value
	is never in %a0.
	(m68k_reg_struct_return_p): Duplicate gcc's struct mode algorithm.
	(m68k_svr4_return_value) Use VALUE_STRUCT_CONVENTION.  do not rely
	on %a0.
	(m68k_push_dummy_call): Force stack alignment.
	(m68k_svr4_init_abi): Set struct_return convention.
	(m68k_aout_init_abi): New.
	(m68k_gdbarch_init): Default to bare elf ABI that gcc provides.
	* gdb/m68k-tdep.h (m68k_aout_init_abi): Declare.
	* gdb/m68kbsd-tdep.c (m68kbsd_aout_init_abi): Use m68k_aout_init_abi.
	(m68kbsd_elf_init_abi): Add comment.
	* gdb/m68klinux-tdep.c (m68k_linux_init_abi): Just set the struct
	pointer register here.
@
text
@a0 18
2006-06-05  Nathan Sidwell  <nathan@@codesourcery.com>

	* gdb/configure.tgt (gdb_osabi): uclinux is like linux.
	* gdb/m68k-tdep.c (m68k_svr4_extract_return_value): Return value
	is never in %a0.
	(m68k_reg_struct_return_p): Duplicate gcc's struct mode algorithm.
	(m68k_svr4_return_value) Use VALUE_STRUCT_CONVENTION.  do not rely
	on %a0.
	(m68k_push_dummy_call): Force stack alignment.
	(m68k_svr4_init_abi): Set struct_return convention.
	(m68k_aout_init_abi): New.
	(m68k_gdbarch_init): Default to bare elf ABI that gcc provides.
	* gdb/m68k-tdep.h (m68k_aout_init_abi): Declare.
	* gdb/m68kbsd-tdep.c (m68kbsd_aout_init_abi): Use m68k_aout_init_abi.
	(m68kbsd_elf_init_abi): Add comment.
	* gdb/m68klinux-tdep.c (m68k_linux_init_abi): Just set the struct
	pointer register here.

@


1.1.12.42
log
@	* gdb/m68k-tdep.c (m68k_dwarf_reg_to_regnum): New.
	(m68k_gdbarch_init): Set it for dwarf & dwarf2 reg number
	conversion. Use M68K_NUM_REGS for number of regs.
@
text
@a2 4
	* gdb/m68k-tdep.c (m68k_dwarf_reg_to_regnum): New.
	(m68k_gdbarch_init): Set it for dwarf & dwarf2 reg number
	conversion. Use M68K_NUM_REGS for number of regs.

@


1.1.12.43
log
@missing changelog
@
text
@a2 13
	* gdb/m68k-tdep.c (M68K_FPREG_SIZE): Remove.
	(REGISTER_BYTES_FP): Use tdep->fpreg_type.
	(m68k_register_bytes_ok): adjust.
	(m68k_register_type): Use tdep->fpreg_type.
	(m68k_register_to_value, m68k_value_to_register): Likewise.
	(m68k_svr4_extract_return_value): Use tdep->float_return &
	tdep->fpreg_type.
	(m68k_svr4_store_return_value): Likewise.
	(m68k_gdbarch_init): Set tdep->float_return & tdep->fpreg_type.
	* gdb/m68k-tdep.h (struct gdbarch_tdep): Add floar_return &
	fpreg_type fields.
	* gdb/m68kbsd-tdep.c (m68kbsd_fpreg_offset): Use tdep->fpreg_type.

@


1.1.12.44
log
@	* gdb/testsuite/gdb.asm/m68k.inc (gdbasm_call): Use jsr.
	* gdb/testsuite/gdb.base/fileio.c (stop): New.  Call it everywhere
	the debugger should stop.
	* gdb/testsuite/gdb.base/charset.exp: Add breakpoint to stop
	routine and adjust.
@
text
@a2 6
	* gdb/testsuite/gdb.asm/m68k.inc (gdbasm_call): Use jsr.
	* gdb/testsuite/gdb.base/fileio.c (stop): New.  Call it everywhere
	the debugger should stop.
	* gdb/testsuite/gdb.base/charset.exp: Add breakpoint to stop
	routine and adjust.

@


1.1.12.45
log
@	* gdb/testsuite/gdb.asm/m68k.inc (gdbasm_call): Use jsr.
	* gdb/testsuite/gdb.base/fileio.c (stop): New.  Call it everywhere
	the debugger should stop.
	* gdb/testsuite/gdb.base/fileio.exp: Add breakpoint to stop
	routine and adjust.
	* gdb/testsuite/gdb.base/charset.exp: Specify source file for
	breakpoint address.
@
text
@d6 1
a6 1
	* gdb/testsuite/gdb.base/fileio.exp: Add breakpoint to stop
a7 2
	* gdb/testsuite/gdb.base/charset.exp: Specify source file for
	breakpoint address.
@


1.1.12.46
log
@	* gdb/remote.c (remote_insert_watchpoint): Return -1, rather than
	fatal error if packet is disabled.
	(remote_remove_watchpoint, remote_insert_hw_breakpoint,
	remote_remove_hw_breakpoint): Likewise.
	Revert my 2006-06-01  Nathan Sidwell  <nathan@@codesourcery.com>
	change to breakpoint.c
@
text
@a2 7
	* gdb/remote.c (remote_insert_watchpoint): Return -1, rather than
	fatal error if packet is disabled.
	(remote_remove_watchpoint, remote_insert_hw_breakpoint,
	remote_remove_hw_breakpoint): Likewise.
	Revert my 2006-06-01  Nathan Sidwell  <nathan@@codesourcery.com>
	change to breakpoint.c

@


1.1.12.47
log
@	* gdb/m68k-tdep.c (m68k_svr4_extract_return_value): Use
	tdep->ptr_value_regnum for pointer returns.
	(m68k_svr4_store_return_value): Likewise.
	(m68k_reg_struct_return_r): New, broken out of ...
	(m68k_reg_struct_return_p): ... here.  Implement gcc's structure
	mode algorithm.
	(m68k_svr4_init_abi, m68k_aout_init_abi): Set ptr_value_regnum.
	(m68k_gdbarch_init): Likewise.
	* gdb/m68k-tdep.h (struct gdbarch_tdep): Add ptr_value_regnum
	field.
@
text
@a0 13
2006-06-08  Nathan Sidwell  <nathan@@codesourcery.com>

	* gdb/m68k-tdep.c (m68k_svr4_extract_return_value): Use
	tdep->ptr_value_regnum for pointer returns.
	(m68k_svr4_store_return_value): Likewise.
	(m68k_reg_struct_return_r): New, broken out of ...
	(m68k_reg_struct_return_p): ... here.  Implement gcc's structure
	mode algorithm.
	(m68k_svr4_init_abi, m68k_aout_init_abi): Set ptr_value_regnum.
	(m68k_gdbarch_init): Likewise.
	* gdb/m68k-tdep.h (struct gdbarch_tdep): Add ptr_value_regnum
	field.

@


1.1.12.48
log
@	* gdb/remote.c (remote_open_1): Do preopen tasks before
	irreversably destroying state.
@
text
@a2 3
	* gdb/remote.c (remote_open_1): Do preopen tasks before
	irreversably destroying state.

@


1.1.12.49
log
@	gdb/
	* m68k-tdep.c (m68k_frame_align): New.
	(m68k_push_dummy_call): Don't align here.
	(m68k_gdbarch_init): Set frame_align here.
@
text
@a0 7
2006-06-09  Nathan Sidwell  <nathan@@codesourcery.com>

	gdb/
	* m68k-tdep.c (m68k_frame_align): New.
	(m68k_push_dummy_call): Don't align here.
	(m68k_gdbarch_init): Set frame_align here.

@


1.1.12.50
log
@	gdb/testsuite/
	* gdb.base/break.c: Add breakpoint 10a marker.
	* gdb.base/break.exp: Check breakpoint on }
@
text
@a2 4
	gdb/testsuite/
	* gdb.base/break.c: Add breakpoint 10a marker.
	* gdb.base/break.exp: Check breakpoint on }

@


1.1.12.51
log
@	gdb/testsuite/
	* gdb.cp/anon-union.cc: Add code at end of function.
	* gdb.cp/anon-union.exp: Adjust end of function breakpoint.
	* gdb.mi/var-cmd.c: Add code at end of function.
	* gdb.mi/mi-var-display.exp: Adjust end of next.
	* gdb.mi/mi2-var-display.exp: Likewise.
@
text
@a3 7
	* gdb.cp/anon-union.cc: Add code at end of function.
	* gdb.cp/anon-union.exp: Adjust end of function breakpoint.
	* gdb.mi/var-cmd.c: Add code at end of function.
	* gdb.mi/mi-var-display.exp: Adjust end of next.
	* gdb.mi/mi2-var-display.exp: Likewise.

	gdb/testsuite/
@


1.1.12.52
log
@	gdb/
	* remote-file.io.c (remote_fileio_func_system): Treat zero length
	string as NULL.  Adjust for NULL pointer argument.
	* doc/gdb.texinfo (system): Document behaviour with zero length
	string.

	gdb/testsuite/
	* gdb.base/fileio.c: Add system(NULL) test.
	* gdb.base/fileio.exp: Check it.
@
text
@a2 10
	gdb/
	* remote-file.io.c (remote_fileio_func_system): Treat zero length
	string as NULL.  Adjust for NULL pointer argument.
	* doc/gdb.texinfo (system): Document behaviour with zero length
	string.

	gdb/testsuite/
	* gdb.base/fileio.c: Add system(NULL) test.
	* gdb.base/fileio.exp: Check it.

@


1.1.12.53
log
@	gdb/testsuite/
	* gdb.base/cursal.exp: Run to main before setting listing
	size.
	* gdb.base/dbx.exp: Run to main before testing.
	* gdb.base/ending-run.exp: Add additional expected string.
	* gdb.base/huge.c: Allow CRASH_GDB to be set from command
	line.
	* gdb.base/huge.exp: Loop over compilation to find a size that
	is acceptable.
	* gdb.base/remote.exp: Correct expected strings.
	* gdb.dwarf2/mac-fileno.S: Avoid # comments.
@
text
@a2 12
	gdb/testsuite/
	* gdb.base/cursal.exp: Run to main before setting listing
	size.
	* gdb.base/dbx.exp: Run to main before testing.
	* gdb.base/ending-run.exp: Add additional expected string.
	* gdb.base/huge.c: Allow CRASH_GDB to be set from command
	line.
	* gdb.base/huge.exp: Loop over compilation to find a size that
	is acceptable.
	* gdb.base/remote.exp: Correct expected strings.
	* gdb.dwarf2/mac-fileno.S: Avoid # comments.

@


1.1.12.54
log
@	gdb/testsuite/
	* gdb.base/recurse.exp: Add gdb,hardware_watchpoint target
	info.  Adjust testing to cope with a single watchpoint.
	* gdb.base/watchpoint.exp: Adjust expected string.
@
text
@a3 5
	* gdb.base/recurse.exp: Add gdb,hardware_watchpoint target
	info.  Adjust testing to cope with a single watchpoint.
	* gdb.base/watchpoint.exp: Adjust expected string.

	gdb/testsuite/
@


1.1.12.55
log
@	* remote-fileio.c (remote_fileio_func_read): Limit console
	reads to 8K.
@
text
@a0 7
2006-06-10  Daniel Jacobowitz  <dan@@codesourcery.com>

	Issue #669
	gdb/
	* remote-fileio.c (remote_fileio_func_read): Limit console
	reads to 8K.

@


1.1.12.56
log
@	gdb/
	* m68k-tdep.c (m68k_frame_align): Say which archs need alignment.

	gdb/testsuite/
	* gdb.base/charset.exp: Use ${srcfile}.
@
text
@a0 8
2006-06-12  Nathan Sidwell  <nathan@@codesourcery.com>

	gdb/
	* m68k-tdep.c (m68k_frame_align): Say which archs need alignment.

	gdb/testsuite/
	* gdb.base/charset.exp: Use ${srcfile}.

a10 5
	* gdb.base/auxv.exp: Skip if bare_board
	* gdb.base/gdb1555.exp: Likewise.
	* gdb.base/start.exp: Skip if use_gdb_stub.

	gdb/testsuite/
@


1.1.12.57
log
@	gdb/testsuite/
	* lib/gdb.exp (gdb_load_cmd): New.
@
text
@a0 5
2006-06-13  Nathan Sidwell  <nathan@@codesourcery.com>

	gdb/testsuite/
	* lib/gdb.exp (gdb_load_cmd): New.

@


1.1.12.58
log
@	* Makefile.def (fixincludes): Correct extra_configure_flags
	typo.
	(expat): Don't install.  Don't build shared libraries.
	* Makefile.in: Regenerated.
@
text
@a0 7
2006-06-15  Daniel Jacobowitz  <dan@@codesourcery.com>

	* Makefile.def (fixincludes): Correct extra_configure_flags
	typo.
	(expat): Don't install.  Don't build shared libraries.
	* Makefile.in: Regenerated.

@


1.1.12.59
log
@	* gdb/testsuite/
	gdb.base/recurse.exp: Revert my 2006-06-09 patch.  Rely on test
	harness to set number of hardware watchpoints.
@
text
@a0 6
2006-06-19  Nathan Sidwell  <nathan@@codesourcery.com>

	* gdb/testsuite/
	gdb.base/recurse.exp: Revert my 2006-06-09 patch.  Rely on test
	harness to set number of hardware watchpoints.

@


1.1.12.60
log
@Merge testsuite ERROR fixes from HEAD.
@
text
@a0 11
2006-06-22  Daniel Jacobowitz  <dan@@codesourcery.com>

	gdb/testsuite/:
	* gdb.base/store.exp: Don't use gdb_suppress_entire_file.
	* gdb.base/gdb1555.exp: Use gdb_compile_shlib.  Skip if not
	native.
	* gdb.stabs/exclfwd.exp: Skip the test if configure did not
	enable stabs testing.
	* gdb.base/auxv.exp: Intercept undefined command messages before
	gdb_test_multiple does.

@


1.1.12.61
log
@	gdb/testsuite/
	* lib/gdb.exp (gdb_load_cmd): Fix variable name typo
	* config/unknown.exp: Check gdb_board_support before claiming it
	is not supported.
@
text
@a0 7
2006-06-23  Nathan Sidwell  <nathan@@codesourcery.com>

	gdb/testsuite/
	* lib/gdb.exp (gdb_load_cmd): Fix variable name typo
	* config/unknown.exp: Check gdb_board_support before claiming it
	is not supported.

d14 2
a15 2
	gdb/testsuite/
	* gdb.base/recurse.exp: Revert my 2006-06-09 patch.  Rely on test
@


1.1.12.62
log
@Backport rs->buf patch from HEAD.
@
text
@a0 51
2006-07-03  Daniel Jacobowitz  <dan@@codesourcery.com>

	gdb/
	* remote.c (remote_query_packet_info): Update for backported patch.
	(fetch_registers_using_g, store_registers_using_G)
	(remote_read_qpart): Likewise.

	Backport:
	2006-03-30  Daniel Jacobowitz  <dan@@codesourcery.com>
	* remote.c (struct remote_state): Add BUF and BUF_SIZE.
	(init_remote_state): Initialize the new fields.
	(get_memory_packet_size): Update BUF and BUF_SIZE if necessary.
	(set_thread, remote_thread_alive, remote_unpack_thread_info_response)
	(remote_get_threadinfo, parse_threadlist_response)
	(remote_get_threadlist, remote_current_thread, remote_threads_info)
	(remote_threads_extra_info, extended_remote_restart, get_offsets)
	(remote_check_symbols, remote_open_1, remote_detach)
	(remove_vcont_probe, remote_vcont_resume, remote_resume)
	(remote_wait, remote_async_wait, fetch_register_using_p)
	(remote_fetch_registers, store_register_using_P)
	(remote_store_registers, check_binary_download, remote_write_bytes)
	(remote_read_bytes, remote_insert_breakpoint)
	(remote_remove_breakpoint, remote_insert_watchpoint)
	(remote_remove_watchpoint, remote_insert_hw_breakpoint)
	(remote_remove_hw_breakpoint, compare_sections_command)
	(remote_xfer_partial, remote_rcmd, packet_command)
	(remote_get_thread_local_address): Use the global incoming buffer
	instead of alloca or xmalloc.  Limit outgoing packets to
	rs->remote_packet_size and incoming packets to rs->buf_size.
	Update calls to getpkt and remote_send.
	(remote_send): Take arguments by reference.
	(putpkt_binary): Eliminate junkbuf.  Use skip_frame.
	(skip_frame): New function.
	(read_frame): Take arguments by reference.  Expand the packet
	buffer instead of issuing an error.
	(getpkt, getpkt_sane): Take arguments by reference.
	* remote.h (getpkt): Update prototype and doc.
	* tracepoint.c (remote_get_noisy_reply): Take arguments by
	reference.
	(target_buf): Change from array to pointer.
	(target_buf_size): New variable.
	(remote_set_transparent_ranges): Update call to getpkt.
	(trace_start_command, trace_stop_command, trace_status_command):
	Update calls to remote_get_noisy_reply.
	(finish_tfind_command): Take arguments by reference.
	(trace_find_command, trace_find_pc_command)
	(trace_find_tracepoint_command, trace_find_line_command):
	(trace_find_range_command, trace_find_outside_command): Update
	calls to finish_tfind_command.
	(_initialize_tracepoint): Initialize target_buf_size and target_buf.

@


1.1.12.63
log
@Backport get_remote_packet_size from HEAD.
@
text
@a0 31
2006-07-04  Daniel Jacobowitz  <dan@@codesourcery.com>

	gdb/
	* remote.c (struct remote_state): Add explicit_packet_size.
	(remote_arch_state): Remove explicit_packet_size.
	(get_remote_packet_size): Check explicit_packet_size.
	(get_memory_packet_size): Likewise.
	(remote_query_packet_info): Update.
	(remote_open_1): Reset explicit_packet_size.

	Backport:
	2006-07-04  Daniel Jacobowitz  <dan@@codesourcery.com>
	* remote.c (init_remote_state): Use xrealloc instead of xmalloc.

	2006-06-08  Daniel Jacobowitz  <dan@@codesourcery.com>
	* (struct remote_state): New type, only containing
	buf and buf_size.
	(remote_state): New variable.
	(get_remote_state): New function.
	(struct remote_arch_state): Renamed from struct remote_state.
	Removed buf and buf_size.
	(get_remote_arch_state): Renamed from get_remote_state.  All
	necessary callers updated to call this function.
	(init_remote_state): Initialize the architecture-specific state.
	Update the target-specific state if necessary.
	(get_remote_packet_size): New function.  All previous references
	changed to use this accessor function.
	(packet_reg_from_regnum, packet_reg_from_pnum): Take a
	remote_arch_state instead of a remote_state.  All callers changed.
	(_initialize_remote): Initialize the packet buffer here.

@


1.1.12.64
log
@	* configure.ac: Accept --with-versuffix and --with-bugurl.
	* configure: Regenerate.
	* Makefile.in: (VERSUFFIX_s, BUGURL_s): New.
	(GDB_FLAGS): Add -DVERSUFFIX and -DBUGURL.
	* top.c (print_gdb_version): Print VERSUFFIX and BUGURL.
@
text
@a0 8
2006-07-15  Vladimir Prus  <vladimir@@codesourcery.com>

	* configure.ac: Accept --with-versuffix and --with-bugurl.
	* configure: Regenerate.
	* Makefile.in: (VERSUFFIX_s, BUGURL_s): New.
	(GDB_FLAGS): Add -DVERSUFFIX and -DBUGURL.
	* top.c (print_gdb_version): Print VERSUFFIX and BUGURL.

@


1.1.12.65
log
@	gdb/
	* configure: Rebuild to correct problem in previous patch.
@
text
@a0 5
2006-07-16  Nathan Sidwell  <nathan@@codesourcery.com>

	gdb/
	* configure: Rebuild to correct problem in previous patch.

a2 1
	gdb/
@


1.1.12.66
log
@	gdb/
	* remote-fileio.c (remote_fileio_func_rename): Reorder to process
	input buffer before reading memory.
	(remote_fileio_func_stat): Likewise.
@
text
@a0 7
2006-07-18  Nathan Sidwell  <nathan@@codesourcery.com>

	gdb/
	* remote-fileio.c (remote_fileio_func_rename): Reorder to process
	input buffer before reading memory.
	(remote_fileio_func_stat): Likewise.

@


1.1.12.67
log
@	readline/
	Backport from mainline:
	* emacs_keymap.c: Add a MINGW32 hack.
	* readline.c: Use _rl_bind_if_unbound to avoid macro bugs.
@
text
@a0 7
2006-07-23  Kazu Hirata  <kazu@@codesourcery.com>

	readline/
	Backport from mainline:
	* emacs_keymap.c: Add a MINGW32 hack.
	* readline.c: Use _rl_bind_if_unbound to avoid macro bugs.

@


1.1.12.68
log
@	gdb/testsuite/
	* gdb.base/auxv.exp: Skip on non-linux, non-solaris targets.
	* gdb.base/cursal.exp: Revert my 2006-06-09 change.  Use
	gdb_file_cmd followed by gdb_load.
	* gdb.base/dbx.exp: Revert my 2006-06-09 change.
@
text
@a0 8
2006-07-24  Nathan Sidwell  <nathan@@codesourcery.com>

	gdb/testsuite/
	* gdb.base/auxv.exp: Skip on non-linux, non-solaris targets.
	* gdb.base/cursal.exp: Revert my 2006-06-09 change.  Use
	gdb_file_cmd followed by gdb_load.
	* gdb.base/dbx.exp: Revert my 2006-06-09 change.

@


1.1.12.69
log
@	gdb/testsuite/
	* gdb.base/cursal.exp: Add "" to gdb_load call.
@
text
@a0 5
2006-07-27  Nathan Sidwell  <nathan@@codesourcery.com>

	gdb/testsuite/
	* gdb.base/cursal.exp: Add "" to gdb_load call.

@


1.1.12.70
log
@	gdb/
	Backport from mainline:
	2006-06-24  Eli Zaretskii  <eliz@@gnu.org>
	* defs.h (DIRNAME_SEPARATOR) [!__CYGWIN__ && _WIN32]:
	Define to `;'.
@
text
@a0 8
2006-08-01  Vladimir Prus  <vladimir@@codesourcery.com>

	gdb/
	Backport from mainline:
	2006-06-24  Eli Zaretskii  <eliz@@gnu.org>
	* defs.h (DIRNAME_SEPARATOR) [!__CYGWIN__ && _WIN32]:
	Define to `;'.
	
@


1.1.12.71
log
@	gdb/gdbserver/
	* server.c (terminal_fd): New variable.
	(old_foreground_pgrp): Likewise.
	(restore_old_foreground_pgrp): New function.
	(start_inferior): Record the terminal file descriptor in terminal_fd
	and its original foreground group in old_foreground_pgrp.  Register
	restore_old_foreground_pgrp with atexit().
@
text
@a0 10
2006-08-02  Richard Sandiford  <richard@@codesourcery.com>

	gdb/gdbserver/
	* server.c (terminal_fd): New variable.
	(old_foreground_pgrp): Likewise.
	(restore_old_foreground_pgrp): New function.
	(start_inferior): Record the terminal file descriptor in terminal_fd
	and its original foreground group in old_foreground_pgrp.  Register
	restore_old_foreground_pgrp with atexit().

@


1.1.12.26.2.1
log
@	Backport:
	2006-04-07  Daniel Jacobowitz  <dan@@codesourcery.com>
	* remote.c (remote_wait): Convert warning to error before
	parsing corrupt packets.
@
text
@a2 7
	Backport:
	2006-04-07  Daniel Jacobowitz  <dan@@codesourcery.com>
	* remote.c (remote_wait): Convert warning to error before
	parsing corrupt packets.

2006-04-11  Daniel Jacobowitz  <dan@@codesourcery.com>

@


1.1.12.26.2.2
log
@Merge to branch:
  http://sourceware.org/ml/gdb-patches/2006-04/msg00139.html
@
text
@a2 115
	* gdb/breakpoint.c (insert_bp_location, reattach_breakpoints)
	(remove_breakpoint, delete_breakpoint): Update calls to changed
	methods.
	(deprecated_insert_raw_breakpoint, deprecated_remove_raw_breakpoint)
	(single_step_breakpoints, insert_single_step_breakpoint)
	(remove_single_step_breakpoints): New.
	* gdb/breakpoint.h (struct bp_location): Add placed_address and
	placed_size.  Move shadow_contents below the new comment.
	(deprecated_insert_raw_breakpoint, deprecated_remove_raw_breakpoint)
	(insert_single_step_breakpoint, remove_single_step_breakpoints): New
	prototypes.
	* gdb/gdbarch.sh: Forward struct bp_location in gdbarch.h.
	(memory_insert_breakpoint, memory_remove_breakpoint): Update second
	argument.
	* gdb/mem-break.c (default_memory_insert_breakpoint): Update.  Set
	placed_address and placed_size.
	(default_memory_remove_breakpoint): Update.  Don't use
	BREAKPOINT_FROM_PC.
	(memory_insert_breakpoint, memory_remove_breakpoint): Update.
	* gdb/target.c (update_current_target): Update prototypes for changed
	functions.
	(debug_to_insert_breakpoint, debug_to_remove_breakpoint)
	(debug_to_insert_hw_breakpoint, debug_to_remove_hw_breakpoint):
	Update.
	* gdb/target.h: Forward declare struct bp_location.
	(struct target_ops): Use a bp_location argument for
	to_insert_breakpoint, to_remove_breakpoint,
	to_insert_hw_breakpoint, and to_remove_hw_breakpoint.
	(target_insert_breakpoint, target_remove_breakpoint)
	(target_insert_hw_breakpoint, target_remove_hw_breakpoint)
	(memory_insert_breakpoint, memory_remove_breakpoint)
	(default_memory_insert_breakpoint, default_memory_remove_breakpoint):
	Update.
	* gdb/config/i386/nm-i386.h: Forward declare struct bp_location.
	(i386_insert_hw_breakpoint, i386_remove_hw_breakpoint): Update.
	(target_insert_hw_breakpoint, target_remove_hw_breakpoint): Likewise.

	* gdb/gdbarch.c, gdbarch.h: Regenerated.

	* gdb/alpha-tdep.c (alpha_software_single_step): Use
	insert_single_step_breakpoint and remove_single_step_breakpoints.
	Remove unused statics.
	* gdb/arm-tdep.c (arm_software_single_step): Likewise.  Add a note.
	* gdb/cris-tdep.c (cris_software_single_step): Likewise.
	* gdb/mips-tdep.c (mips_software_single_step): Likewise.
	* gdb/rs6000-tdep.c (rs6000_software_single_step): Likewise.
	* gdb/sparc-tdep.c (sparc_software_single_step): Likewise.
	* gdb/wince.c (struct thread_info_struct): Remove step_prev.
	(undoSStep): Use remove_single_step_breakpoints.
	(wince_software_single_step): Use insert_single_step_breakpoint.

	* gdb/corelow.c (ignore): Remove unneeded prototype.  Update second
	argument.
	* gdb/exec.c (ignore): Likewise.
	* gdb/sol-thread.c (ignore): Likewise.

	* gdb/procfs.c (dbx_link_bpt_addr, dbx_link_shadow_contents): Delete.
	(dbx_link_bpt): New.
	(procfs_wait): Check it.
	(procfs_mourn_inferior): Remove it if necessary.
	(remove_dbx_link_breakpoint): Use it.
	(insert_dbx_link_bpt_in_file): Set it.
	(procfs_init_inferior): Don't update dbx_link_bpt_addr.
	* gdb/rs6000-nat.c (exec_one_dummy_insn): Use
	deprecated_insert_raw_breakpoint and
	deprecated_remove_raw_breakpoint.
	* gdb/solib-irix.c (shadow_contents, breakpoint_addr): Delete.
	(base_breakpoint): New.
	(disable_break): Use it.
	(enable_break): Set it.

	* gdb/i386-nat.c (i386_insert_hw_breakpoint, i386_remove_hw_breakpoint):
	Update.
	* gdb/ia64-tdep.c (ia64_memory_insert_breakpoint)
	(ia64_memory_remove_breakpoint): Likewise.
	* gdb/m32r-tdep.c (m32r_memory_insert_breakpoint)
	(m32r_memory_remove_breakpoint): Likewise.
	* gdb/monitor.c (monitor_insert_breakpoint, monitor_remove_breakpoint):
	Likewise.  Remove unnecessary prototypes.  Use placed_address
	and placed_size.  Removed useless read from memory.
	* gdb/nto-procfs.c (procfs_insert_breakpoint)
	(procfs_remove_breakpoint, procfs_insert_hw_breakpoint)
	(procfs_remove_hw_breakpoint): Update.
	* gdb/ocd.c (ocd_insert_breakpoint, ocd_remove_breakpoint): Likewise.
	* gdb/ocd.h (ocd_insert_breakpoint, ocd_remove_breakpoint): Likewise.
	* gdb/ppc-linux-tdep.c (ppc_linux_memory_remove_breakpoint): Likewise.
	* gdb/ppc-tdep.h (ppc_linux_memory_remove_breakpoint): Likewise.
	* gdb/remote-e7000.c (e7000_insert_breakpoint)
	(e7000_remove_breakpoint): Likewise.
	* gdb/remote-m32r-sdi.c (m32r_insert_breakpoint)
	(m32r_remove_breakpoint): Likewise.
	* gdb/remote-mips.c (mips_insert_breakpoint)
	(mips_remove_breakpoint): Likewise.
	* gdb/remote-rdp.c (remote_rdp_insert_breakpoint)
	(remote_rdp_remove_breakpoint): Likewise.
	(rdp_step): Use deprecated_insert_raw_breakpoint and
	deprecated_remove_raw_breakpoint.
	* gdb/remote-sds.c (sds_insert_breakpoint, sds_remove_breakpoint):
	Update.
	* gdb/remote-sim.c (gdbsim_insert_breakpoint, gdbsim_remove_breakpoint):
	Delete.
	(init_gdbsim_ops): Use memory_insert_breakpoint and
	memory_remove_breakpoint.
	* gdb/remote-st.c (st2000_insert_breakpoint)
	(st2000_remove_breakpoint): Update.  Remove unused
	BREAKPOINT_FROM_PC.
	* gdb/remote.c (remote_insert_breakpoint, remote_remove_breakpoint):
	Update.  Use placed_address and placed_size.
	(remote_insert_hw_breakpoint, remote_remove_hw_breakpoint): Likewise.

	* gdb/doc/gdbint.texinfo (Watchpoints, Target Conditionals): Update insert
	and remove breakpoint prototypes.

2006-04-11  Daniel Jacobowitz  <dan@@codesourcery.com>

@


1.1.12.26.2.3
log
@Backport remote protocol alloca / infinite length incoming cleanups.
@
text
@a0 50
2006-04-12  Daniel Jacobowitz  <dan@@codesourcery.com>

	Backport:
	2006-04-12  Daniel Jacobowitz  <dan@@codesourcery.com>
	* remote.c (extended_remote_restart): Pass the correct length
	to getpkt.

	2006-03-30  Daniel Jacobowitz  <dan@@codesourcery.com>
	* remote.c (struct remote_state): Add BUF and BUF_SIZE.
	(init_remote_state): Initialize the new fields.
	(get_memory_packet_size): Update BUF and BUF_SIZE if necessary.
	(set_thread, remote_thread_alive, remote_unpack_thread_info_response)
	(remote_get_threadinfo, parse_threadlist_response)
	(remote_get_threadlist, remote_current_thread, remote_threads_info)
	(remote_threads_extra_info, extended_remote_restart, get_offsets)
	(remote_check_symbols, remote_open_1, remote_detach)
	(remove_vcont_probe, remote_vcont_resume, remote_resume)
	(remote_wait, remote_async_wait, fetch_register_using_p)
	(remote_fetch_registers, store_register_using_P)
	(remote_store_registers, check_binary_download, remote_write_bytes)
	(remote_read_bytes, remote_insert_breakpoint)
	(remote_remove_breakpoint, remote_insert_watchpoint)
	(remote_remove_watchpoint, remote_insert_hw_breakpoint)
	(remote_remove_hw_breakpoint, compare_sections_command)
	(remote_xfer_partial, remote_rcmd, packet_command)
	(remote_get_thread_local_address): Use the global incoming buffer
	instead of alloca or xmalloc.  Limit outgoing packets to
	rs->remote_packet_size and incoming packets to rs->buf_size.
	Update calls to getpkt and remote_send.
	(remote_send): Take arguments by reference.
	(putpkt_binary): Eliminate junkbuf.  Use skip_frame.
	(skip_frame): New function.
	(read_frame): Take arguments by reference.  Expand the packet
	buffer instead of issuing an error.
	(getpkt, getpkt_sane): Take arguments by reference.
	* remote.h (getpkt): Update prototype and doc.
	* tracepoint.c (remote_get_noisy_reply): Take arguments by
	reference.
	(target_buf): Change from array to pointer.
	(target_buf_size): New variable.
	(remote_set_transparent_ranges): Update call to getpkt.
	(trace_start_command, trace_stop_command, trace_status_command):
	Update calls to remote_get_noisy_reply.
	(finish_tfind_command): Take arguments by reference.
	(trace_find_command, trace_find_pc_command)
	(trace_find_tracepoint_command, trace_find_line_command):
	(trace_find_range_command, trace_find_outside_command): Update
	calls to finish_tfind_command.
	(_initialize_tracepoint): Initialize target_buf_size and target_buf.

@


1.1.12.26.2.4
log
@Add experimental support for SymbianOS-related protocol features.
@
text
@a2 128
	* gdb/Makefile.in (ALLDEPFILES): Add solib-target.c.
	(remote.o): Update dependencies.
	(solib-target.o, symbian-tdep.o): New rules.
	* gdb/arm-tdep.c (arm_mode_strings, arm_fallback_mode_string)
	(arm_force_mode_string): New.
	(arm_pc_is_thumb): Use them.
	(thumb_scan_prologue): Abort scan when symbols are missing.
	(arm_show_fallback_mode, arm_show_force_mode): New.
	(_initialize_arm_tdep): Register fallback-mode and force-mode.
	* gdb/configure.tgt: Add arm*-*-symbian*.
	* gdb/infcmd.c (_initialize_infcmd): Make "set args" a string
	variable.
	* gdb/inflow.c (kill_command): Assume that a target with stack
	can have a frame.
	* gdb/infrun.c (init_wait_for_inferior): Clear
	target_last_wait_ptid.
	(insert_step_resume_breakpoint_at_frame): Add use_previous argument.
	Use get_prev_frame if requested.
	(handle_inferior_event): Update TARGET_WAITKIND_LOADED support.
	Update calls to insert_step_resume_breakpoint_at_frame.
	* gdb/remote.c: Include "solist.h".
	(remote_exec_file): New variable.
	(PACKET_vAttach, PACKET_vRun, PACKET_qfDllInfo): New enums.
	(remote_mark_running, remote_mark_killed): New functions.
	(extended_remote_restart): Don't send a query.
	(get_offsets): Handle TextSeg and DataSeg response.
	(parse_load_response, remote_get_shared_libraries): New functions.
	(remote_start_remote): Take a target as the second argument for
	extended mode.  Check whether the target is running.  Reset
	inferior_ptid here.
	(remote_open_1): Assume the target is running.  Don't reset
	inferior_ptid here.  Pass the target to remote_start_remote
	in extended mode.  Only do some setup if the target is running.
	(remote_detach_1): New function, renamed from remote_detach.
	Don't say we are disconnecting if we aren't.
	(remote_detach): Call remote_detach_1.
	(extended_remote_detach): New function.
	(remote_disconnect): Take a target_ops argument.  Correct the
	error message.  Call remote_mourn_1 directly.
	(extended_remote_attach_1, extended_remote_attach)
	(extended_async_remote_attach): New functions.
	(remote_wait): Handle load and unload events.
	(extended_remote_mourn_1): New function.
	(extended_remote_mourn): Replace with a call to
	extended_remote_mourn_1.
	(extended_async_remote_mourn): New function.
	(extended_remote_run): New function.
	(extended_remote_create_inferior_1): New function, from
	extended_remote_create_inferior.  Call get_offsets.
	(extended_remote_create_inferior)
	(extended_remote_async_create_inferior): Use it.
	(remote_stopped_by_watchpoint, crc32_table)
	(compare_sections_command): Whitespace tweaks.
	(init_remote_ops, init_extended_remote_ops): Update.
	(init_remote_async_ops): Whitespace tweaks and update.
	(init_extended_async_remote_ops): Update.
	(_initialize_remote): Add new configurable packets.  Add
	"set remote exec-file".
	* gdb/solib-som.c (som_current_sos): Set addr_low and addr_high.
	* gdb/solib-target.c: New file.
	* gdb/solib.c (solib_symbols_extension): New variable.
	(solib_open): Use it.
	(solib_map_sections): Set addr_low and addr_high instead of
	textsection.
	(info_sharedlibrary_command): Use addr_low and addr_high.
	* gdb/solib.h (solib_symbols_extension): New declaration.
	* gdb/solist.h (struct so_list): Replace textsection
	with addr_low and addr_high.
	(struct target_so_ops): Add add_one_solib and remove_one_solib.
	* gdb/symbian-tdep.c: New file.
	* gdb/symfile.c (init_objfile_sect_indices): Use
	symfile_find_segment_sections to find the text section.
	(symfile_find_segments, symfile_find_segment_sections)
	(symfile_map_offsets_to_segments, symfile_find_segment_lengths)
	(symfile_section_offset_from_segment): New functions.
	* gdb/symfile.h (symfile_map_offsets_to_segments)
	(symfile_section_offset_from_segment)
	(symfile_find_segment_lengths): New prototypes.
	* gdb/target.c (debug_to_disconnect): Delete.
	(update_current_target): Make global.  Do not inherit to_disconnect.
	Mention to_get_shared_libraries.
	(target_disconnect): Search for to_disconnect.
	(target_get_shared_libraries): New.
	(setup_target_debug): Update.
	* gdb/target.h (struct target_ops): Update to_disconnect prototype.
	Add to_get_shared_libraries.
	(target_has_execution): Update comment.
	(target_get_shared_libraries, update_current_target): New
	prototypes.
	* gdb/cli/cli-setshow.c (do_setshow_command): Revise string variable
	handling.
	* gdb/config/arm/symbian.mt: New file.
	* gdb/doc/gdb.texinfo (ARM): Document set/show arm fallback-mode
	and set/show arm force-mode.

	* gdb/testsuite/gdb.base/define.exp: Don't use backslashes in the
	prompt.

	* readline/emacs_keymap.c: Add a MINGW32 hack.
	* readline/readline.c: Use _rl_bind_if_unbound to avoid macro bugs.

	* gdb/gdbserver/linux-low.c (linux_kill): Reset inferior thread and
	process lists.
	(linux_detach): Likewise.
	(linux_wait_for_process): Discard unexpected exits.
	* gdb/gdbserver/remote-utils.c (unblock_async_io): Ignore if we are
	restarting.
	* gdb/gdbserver/server.c (exit_requested, restarting_program)
	(program_argv): New variables.
	(attached): Move higher.
	(start_inferior): Clear attached.  Use restarting_program to avoid
	troubles with the 'R' packet.
	(attach_inferior): Set attached.
	(handle_query): Implement "monitor exit".
	(handle_query_non_running): New function.
	(handle_v_cont): Report errors.
	(handle_v_attach, handle_v_run): New.
	(handle_v_requests): Handle vAttach and vRun.
	(handle_v_requests_non_running, non_running): New.
	(debug_threads): Add declaration.
	(main): Handle --debug.  Don't adjust attached here.
	Save the argv.  Keep track of requested exits.  Use
	non_running when the target is dead.  Do not always exit
	after detach.  Fix up Hc support.  Do not automatically
	restart the inferior in extended mode.

2006-04-12  Daniel Jacobowitz  <dan@@codesourcery.com>

@


1.1.12.26.2.5
log
@	* buildsym.c (start_subfile): Handle producer.
	(record_producer): New function.
	* buildsym.h (struct subfile): Include producer.
	(record_producer): New prototype.
	* dwarf2-frame.c (struct dwarf2_cie): Add version.
	(struct dwarf2_frame_state): Add armcc_cfa_offsets_sf and
	armcc_cfa_offsets_reversed.
	(execute_cfa_program): Handle armcc_cfa_offsets_sf.
	(dwarf2_frame_find_quirks): New function.
	(dwarf2_frame_cache): Call it.  Handle armcc_cfa_offsets_reversed.
	(decode_frame_entry_1): Record the CIE version.
	* dwarf2read.c (read_file_scope): Save the producer.
	* symtab.h (struct symtab): Rename unused version member to
	producer.
@
text
@a0 17
2006-04-17  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/buildsym.c (start_subfile): Handle producer.
	(record_producer): New function.
	* gdb/buildsym.h (struct subfile): Include producer.
	(record_producer): New prototype.
	* gdb/dwarf2-frame.c (struct dwarf2_cie): Add version.
	(struct dwarf2_frame_state): Add armcc_cfa_offsets_sf and
	armcc_cfa_offsets_reversed.
	(execute_cfa_program): Handle armcc_cfa_offsets_sf.
	(dwarf2_frame_find_quirks): New function.
	(dwarf2_frame_cache): Call it.  Handle armcc_cfa_offsets_reversed.
	(decode_frame_entry_1): Record the CIE version.
	* gdb/dwarf2read.c (read_file_scope): Save the producer.
	* gdb/symtab.h (struct symtab): Rename unused version member to
	producer.

@


1.1.12.26.2.6
log
@Merge from parent branch.
@
text
@a0 27
2006-04-19  Daniel Jacobowitz  <dan@@codesourcery.com>

	Merge from gdb-csl-20060226-branch:

	2006-04-19  Daniel Jacobowitz  <dan@@codesourcery.com>
	* gdb/doc/gdb.texinfo (Remote configuration): Mention "set remote
	load-offsets".
	(General Query Packets): Document qPartInfo.

	2006-04-18  Mark Mitchell  <mark@@codesourcery.com>
	Issue #655
	* gdb/mt-tdep.c (mt_gdb_regnums): Add ZI2, ZQ2, Ichannel2,
	Iscramb2, Qscramb2, Qchannel2.
	(mt_register_name): Likewise.
	(mt_copro_register_type): Describe ZI2 and ZQ2.
	
	2006-04-11  Mark Mitchell  <mark@@codesourcery.com>
	Issue #658
	* gdb/mt-tdep.c (mt_gdb_regnums): Define
	MT_COPRO_PSEUDOREG_MAC_REGNUM.
	(mt_register_name): Use it.
	(mt_copro_register_type): Likewise.
	(mt_register_type): Likewise.
	(mt_pseudo_register_read): Likewise.  Read the MAC register, not
	the coprocessor register.
	(mt_pseudo_register_write): Likewise.

@


1.1.12.26.2.7
log
@	* arm-tdep.c (thumb_heuristic_function_start): New function.
	(thumb_scan_prologue): Use it.
	(arm_prologue_this_id): Adjust LOWEST_PC check.
@
text
@a0 6
2006-04-24  Daniel Jacobowitz  <dan@@codesourcery.com>

	* arm-tdep.c (thumb_heuristic_function_start): New function.
	(thumb_scan_prologue): Use it.
	(arm_prologue_this_id): Adjust LOWEST_PC check.

@


1.1.12.26.2.8
log
@	* gdb/solib-target.c (solib_target_remove_one_solib): Correct loop
	logic.
@
text
@a0 5
2006-05-08  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/solib-target.c (solib_target_remove_one_solib): Correct loop
	logic.

@


1.1.12.26.2.9
log
@	* gdb/remote.c (remote_get_shared_libraries): Check for NULL ops.
	(remote_wait): Handle ",nop" on DLL packets and "dll:dll" response.
@
text
@a2 5
	* gdb/remote.c (remote_get_shared_libraries): Check for NULL ops.
	(remote_wait): Handle ",nop" on DLL packets and "dll:dll" response.

2006-05-08  Daniel Jacobowitz  <dan@@codesourcery.com>

@


1.1.12.26.2.10
log
@	* gdb/bsd-uthread.c (bsd_uthread_solib_loaded): Always pass 0 for
	from_tty.
	* gdb/remote.c (remote_get_shared_libraries): Don't call solib_add.
	* gdb/solib.c: Include "exceptions.h".
	(solib_map_sections): Throw NOT_FOUND_ERROR if appropriate.
	(symbol_add_stub): Delete.
	(solib_read_symbols): Use TRY_CATCH.  Inline symbol_add_stub.
	Use current from_tty, not a copy from the so_list.  Don't warn
	a second time for a missing library.
	(update_solib_list): Don't save from_tty.  Use TRY_CATCH.  Print
	out a single warning for all missing libraries.
	* gdb/solist.h (struct so_list): Remove from_tty.
	* gdb/Makefile.in (solib.o): Update.
@
text
@a0 16
2006-05-09  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/bsd-uthread.c (bsd_uthread_solib_loaded): Always pass 0 for
	from_tty.
	* gdb/remote.c (remote_get_shared_libraries): Don't call solib_add.
	* gdb/solib.c: Include "exceptions.h".
	(solib_map_sections): Throw NOT_FOUND_ERROR if appropriate.
	(symbol_add_stub): Delete.
	(solib_read_symbols): Use TRY_CATCH.  Inline symbol_add_stub.
	Use current from_tty, not a copy from the so_list.  Don't warn
	a second time for a missing library.
	(update_solib_list): Don't save from_tty.  Use TRY_CATCH.  Print
	out a single warning for all missing libraries.
	* gdb/solist.h (struct so_list): Remove from_tty.
	* gdb/Makefile.in (solib.o): Update.

@


1.1.12.26.2.11
log
@	* gdb/frame.c (get_prev_frame): Move check for pc == 0 ...
	(get_prev_frame_1): ... to here.
@
text
@a0 5
2006-05-10  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/frame.c (get_prev_frame): Move check for pc == 0 ...
	(get_prev_frame_1): ... to here.

@


1.1.12.26.2.12
log
@	* gdb/remote.c: Include "gdb/fileio.h".
	(PACKET_Fopen, PACKET_Fread, PACKET_Fwrite, PACKET_Fclose): New
	enums.
	(remote_escape_output, remote_unescape_input): New functions.
	(remote_write_bytes): Use remote_escape_output.
	(readchar): Do not mask off the high bit.
	(read_frame): Print binary packets correctly.
	(getpkt_sane): Likewise.  Return the number of bytes read
	or -1.
	(remote_buffer_add_string, remote_buffer_add_bytes)
	(remote_buffer_add_int, remote_hostio_parse_result)
	(remote_hostio_send_command, remote_hostio_open)
	(remote_hostio_write, remote_hostio_read)
	(remote_hostio_close, remote_fileio_errno_to_host)
	(remote_hostio_error, fclose_cleanup, remote_download_command)
	(remote_upload_command): New functions.
	(_initialize_remote): Register new packets and remote-upload
	and remote-download commands.

	* gdb/doc/gdb.texinfo (File Transfer): New section.
	(Remote Configuration): Document Host I/O packet commands.
	(Host I/O Packets): New section.
	(Packets): Mention overloading of F prefix.

	* gdb/gdbserver/Makefile.in (OBS): Add hostio.o.
	(hostio.o): New rule.
	* gdb/gdbserver/hostio.c: New file.
	* gdb/gdbserver/remote-utils.c (putpkt_binary): New function,
	broken out from putpkt.
	(putpkt): Use it.
	(readchar): Do not mask the high bits.  Correct the buffer
	type.
	* gdb/gdbserver/server.c (main): Leave space for a trailing
	zero in the packet buffer.  Save the length of the
	received packet.  Handle Host I/O requests.  Optionally call
	putpkt_binary.
	* gdb/gdbserver/server.h (handle_f_hostio, putpkt_binary): New
	prototypes.
@
text
@a0 41
2006-05-23  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/remote.c: Include "gdb/fileio.h".
	(PACKET_Fopen, PACKET_Fread, PACKET_Fwrite, PACKET_Fclose): New
	enums.
	(remote_escape_output, remote_unescape_input): New functions.
	(remote_write_bytes): Use remote_escape_output.
	(readchar): Do not mask off the high bit.
	(read_frame): Print binary packets correctly.
	(getpkt_sane): Likewise.  Return the number of bytes read
	or -1.
	(remote_buffer_add_string, remote_buffer_add_bytes)
	(remote_buffer_add_int, remote_hostio_parse_result)
	(remote_hostio_send_command, remote_hostio_open)
	(remote_hostio_write, remote_hostio_read)
	(remote_hostio_close, remote_fileio_errno_to_host)
	(remote_hostio_error, fclose_cleanup, remote_download_command)
	(remote_upload_command): New functions.
	(_initialize_remote): Register new packets and remote-upload
	and remote-download commands.

	* gdb/doc/gdb.texinfo (File Transfer): New section.
	(Remote Configuration): Document Host I/O packet commands.
	(Host I/O Packets): New section.
	(Packets): Mention overloading of F prefix.

	* gdb/gdbserver/Makefile.in (OBS): Add hostio.o.
	(hostio.o): New rule.
	* gdb/gdbserver/hostio.c: New file.
	* gdb/gdbserver/remote-utils.c (putpkt_binary): New function,
	broken out from putpkt.
	(putpkt): Use it.
	(readchar): Do not mask the high bits.  Correct the buffer
	type.
	* gdb/gdbserver/server.c (main): Leave space for a trailing
	zero in the packet buffer.  Save the length of the
	received packet.  Handle Host I/O requests.  Optionally call
	putpkt_binary.
	* gdb/gdbserver/server.h (handle_f_hostio, putpkt_binary): New
	prototypes.

@


1.1.12.26.2.13
log
@	* gdb/remote.c (remote_fileio_errno_to_host)
	(remote_hostio_error): Rename argument to errnum.
	(_initialize_remote): Update calls to add_packet_config_cmd.
@
text
@a2 6
	* gdb/remote.c (remote_fileio_errno_to_host)
	(remote_hostio_error): Rename argument to errnum.
	(_initialize_remote): Update calls to add_packet_config_cmd.

2006-05-23  Daniel Jacobowitz  <dan@@codesourcery.com>

@


1.1.12.26.2.14
log
@	* gdb/remote.c (remote_download_command): Correct short write
	handling.
@
text
@a0 5
2006-05-31  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/remote.c (remote_download_command): Correct short write
	handling.

@


1.1.12.26.2.15
log
@	* gdb/doc/gdb.texinfo (Host I/O Packets): Mention explicit negative
	signs.
@
text
@a0 5
2006-06-01  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/doc/gdb.texinfo (Host I/O Packets): Mention explicit negative
	signs.

@


1.1.12.26.2.16
log
@	* gdb/remote.c (remote_hostio_parse_result): Check for strtol
	errors.
@
text
@a2 5
	* gdb/remote.c (remote_hostio_parse_result): Check for strtol
	errors.

2006-06-01  Daniel Jacobowitz  <dan@@codesourcery.com>

@


1.1.12.26.2.17
log
@	* gdb/remote.c (remote_download_command): Use FILEIO_O_TRUNC.
@
text
@a2 4
	* gdb/remote.c (remote_download_command): Use FILEIO_O_TRUNC.

2006-06-01  Daniel Jacobowitz  <dan@@codesourcery.com>

@


1.1.12.26.2.18
log
@	* gdb/exec.c (exec_set_section_address): Always update the
	section's address.
	* gdb/objfiles.c (objfile_relocate): Also relocate the
	target sections table.
	* gdb/Makefile.in (objfiles.o): Update.

	* gdb/remote.c (remote_xfer_partial): Fail if the target is not
	running.
@
text
@a2 11
	* gdb/exec.c (exec_set_section_address): Always update the
	section's address.
	* gdb/objfiles.c (objfile_relocate): Also relocate the
	target sections table.
	* gdb/Makefile.in (objfiles.o): Update.

	* gdb/remote.c (remote_xfer_partial): Fail if the target is not
	running.

2006-06-01  Daniel Jacobowitz  <dan@@codesourcery.com>

@


1.1.12.26.2.19
log
@	* gdb/remote.c (remote_hostio_write): Correct buffer length
	calculation.
@
text
@a0 5
2006-06-02  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/remote.c (remote_hostio_write): Correct buffer length
	calculation.

@


1.1.12.26.2.20
log
@        * symfile.c (symfile_map_offsets_to_segments): Don't warn
        for empty sections.
        (symfile_section_offset_from_segment): Likewise.
@
text
@a0 7
2006-07-11  Daniel Jacobowitz  <dan@@codesourcery.com>

	gdb/
	* symfile.c (symfile_map_offsets_to_segments): Don't warn
	for empty sections.
	(symfile_section_offset_from_segment): Likewise.

@


1.1.12.26.2.21
log
@        gdb/
        * symfile.c (symfile_section_offset_from_segment): Correct
        last change.

        * solib.c (solib_open): Always set errno.
@
text
@a3 8
	* symfile.c (symfile_section_offset_from_segment): Correct
	last change.

	* solib.c (solib_open): Always set errno.

2006-07-11  Daniel Jacobowitz  <dan@@codesourcery.com>

	gdb/
@


1.1.12.26.2.22
log
@	* objfiles.c (init_entry_point_info): Handle shared objects
	with entry points.
@
text
@a0 6
2006-08-17  Daniel Jacobowitz  <dan@@codesourcery.com>

	gdb/
	* objfiles.c (init_entry_point_info): Handle shared objects
	with entry points.

@


1.1.12.26.2.23
log
@	* config/symbian.exp: New file.
@
text
@a2 5
	gdb/testsuite/
	* config/symbian.exp: New file.

2006-08-17  Daniel Jacobowitz  <dan@@codesourcery.com>

@


1.1.12.26.2.24
log
@        * config/symbian.exp (symbian_compile): Fail after unknown options.
        Copy ELF files from the build tree.
        * gdb.asm/asm-source.exp: Use untested.
@
text
@a0 7
2006-08-23  Daniel Jacobowitz  <dan@@codesourcery.com>

	gdb/testsuite/
	* config/symbian.exp (symbian_compile): Fail after unknown options.
	Copy ELF files from the build tree.
	* gdb.asm/asm-source.exp: Use untested.

@


1.1.12.26.2.25
log
@        * remote.c (remote_start_remote, extended_remote_attach_1)
        (extended_remote_mourn_1, extended_remote_run): Use only rs->buf.
@
text
@a0 6
2006-08-30  Daniel Jacobowitz  <dan@@codesourcery.com>

	gdb/
	* remote.c (remote_start_remote, extended_remote_attach_1)
	(extended_remote_mourn_1, extended_remote_run): Use only rs->buf.

@


1.1.12.26.2.26
log
@	gdb/testsuite/
	* gdb.base/args.c (main): Add breakpoint marker.
	* gdb.base/args.exp: Use args_test for tests.  Add new tests which
	really test empty arguments.
	(args_load): Delete.
	(args_test): New.
@
text
@a0 9
2006-09-15  Daniel Jacobowitz  <dan@@codesourcery.com>

	gdb/testsuite/
	* gdb.base/args.c (main): Add breakpoint marker.
	* gdb.base/args.exp: Use args_test for tests.  Add new tests which
	really test empty arguments.
	(args_load): Delete.
	(args_test): New.

@


1.1.12.26.2.27
log
@        gdb/testsuite/
        * config/symbian.exp (infer_host_exec): Cope with MI.
        (mi_target_gdb_load): New.
        * lib/mi-support.exp: Use mi_target_gdb_load.
@
text
@a3 7
	* config/symbian.exp (infer_host_exec): Cope with MI.
	(mi_target_gdb_load): New.
	* lib/mi-support.exp: Use mi_target_gdb_load.

2006-09-15  Daniel Jacobowitz  <dan@@codesourcery.com>

	gdb/testsuite/
@


1.1.12.26.2.28
log
@        gdb/testsuite/
        * gdb.base/commands.exp (bp_deleted_in_command_test)
        (temporary_breakpoint_commands): Allow run.c without a pathname.
        * gdb.base/ending-run.exp: Allow E32Main.
@
text
@a3 7
	* gdb.base/commands.exp (bp_deleted_in_command_test)
	(temporary_breakpoint_commands): Allow run.c without a pathname.
	* gdb.base/ending-run.exp: Allow E32Main.

2006-09-15  Daniel Jacobowitz  <dan@@codesourcery.com>

	gdb/testsuite/
@


1.1.12.26.2.29
log
@        gdb/testsuite/
        * config/symbian.exp (cyg_to_win): New.
        (symbian_compile): Use it.  Handle c++ and incdir.
@
text
@a3 6
	* config/symbian.exp (cyg_to_win): New.
	(symbian_compile): Use it.  Handle c++ and incdir.

2006-09-15  Daniel Jacobowitz  <dan@@codesourcery.com>

	gdb/testsuite/
@


1.1.12.26.2.30
log
@        * infrun.c (handle_inferior_event): Always clear stop_stack_dummy.
        Don't check it for load events.
@
text
@a0 6
2006-09-21  Daniel Jacobowitz  <dan@@codesourcery.com>

	gdb/
	* infrun.c (handle_inferior_event): Always clear stop_stack_dummy.
	Don't check it for load events.

@


1.1.12.26.2.31
log
@        gdb/testsuite/
        * gdb.arch/thumb-prologue.c: Update breakpoint mechanism.  Restore
        lr before returning for completeness.
        * gdb.arch/thumb-prologue.exp: Update to set a breakpoint.
@
text
@a0 7
2006-09-25  Daniel Jacobowitz  <dan@@codesourcery.com>

	gdb/testsuite/
	* gdb.arch/thumb-prologue.c: Update breakpoint mechanism.  Restore
	lr before returning for completeness.
	* gdb.arch/thumb-prologue.exp: Update to set a breakpoint.

@


1.1.12.26.2.32
log
@        gdb/
        * buildsym.c, symtab.c: Add local hack for FILENAME_CMP testing.
        * utils.c (cygwin_filename_cmp): New.

        Backport:
        2006-04-21  Frederic Riss  <frederic.riss@@st.com>
        * dwarf2read.c (dwarf2_start_subfile): Change prototype to accept
        compilation directory as last argument.
        Always pass comp_dir as second argument to start_subfile and prepend
        dirname to the filename when necessary.
        Remove now superfluous search for pre-existing subfile.
        (dwarf_decode_lines): Pass the compilation directory to
        dwarf2_start_subfile.

        gdb/testsuite/
        * config/symbian.exp (gdb_target_symbian): Handle a running target.
        (gdb_load): Add return value.

        * gdb.base/completion.exp: Test arg rather than a.  Handle
        very small lists of symbols.

        * gdb.base/list.exp: Differentiate run behavior based on
        use_gdb_stub.

        * gdb.base/maint.exp: Accept local symbols.  Accept missing .data.

        * gdb.base/remote.exp: Update packet limits.

        * gdb.base/varargs.exp: Don't pass an empty list item.

        * lib/gdb.exp (fullname_syntax): Recognize forward slashes in DOS
        paths.

        Backport:
        2006-06-22  Daniel Jacobowitz  <dan@@codesourcery.com>
        * gdb.base/gdb1555.exp: Use gdb_compile_shlib.  Skip if not
        native.

        2006-06-22  Daniel Jacobowitz  <dan@@codesourcery.com>
        * gdb.stabs/exclfwd.exp: Skip the test if configure did not
        enable stabs testing.

        2006-05-06  Ulrich Weigand  <Ulrich.Weigand@@de.ibm.com>
        * gdb.mi/mi-basics.exp: Add missing serial number to
        expected output in some mi_gdb_test statements.
        * gdb.mi/mi2-basics.exp: Likewise.
@
text
@a0 49
2006-09-28  Daniel Jacobowitz  <dan@@codesourcery.com>

	gdb/
	* buildsym.c, symtab.c: Add local hack for FILENAME_CMP testing.
	* utils.c (cygwin_filename_cmp): New.

	Backport:
	2006-04-21  Frederic Riss  <frederic.riss@@st.com>
	* dwarf2read.c (dwarf2_start_subfile): Change prototype to accept
	compilation directory as last argument. 
	Always pass comp_dir as second argument to start_subfile and prepend
	dirname to the filename when necessary. 
	Remove now superfluous search for pre-existing subfile.
	(dwarf_decode_lines): Pass the compilation directory to
	dwarf2_start_subfile.

	gdb/testsuite/
	* config/symbian.exp (gdb_target_symbian): Handle a running target.
	(gdb_load): Add return value.

	* gdb.base/completion.exp: Test arg rather than a.  Handle
	very small lists of symbols.

	* gdb.base/list.exp: Differentiate run behavior based on
	use_gdb_stub.

	* gdb.base/maint.exp: Accept local symbols.  Accept missing .data.

	* gdb.base/remote.exp: Update packet limits.

	* gdb.base/varargs.exp: Don't pass an empty list item.

	* lib/gdb.exp (fullname_syntax): Recognize forward slashes in DOS
	paths.

	Backport:
	2006-06-22  Daniel Jacobowitz  <dan@@codesourcery.com>
	* gdb.base/gdb1555.exp: Use gdb_compile_shlib.  Skip if not
	native.

	2006-06-22  Daniel Jacobowitz  <dan@@codesourcery.com>
	* gdb.stabs/exclfwd.exp: Skip the test if configure did not
	enable stabs testing.

	2006-05-06  Ulrich Weigand  <Ulrich.Weigand@@de.ibm.com>
	* gdb.mi/mi-basics.exp: Add missing serial number to 
	expected output in some mi_gdb_test statements.
	* gdb.mi/mi2-basics.exp: Likewise.

@


1.1.12.26.2.33
log
@	Backport:
	2006-06-15  Daniel Jacobowitz  <dan@@codesourcery.com>
	* Makefile.def (fixincludes): Correct extra_configure_flags
	typo.
	(expat): Don't install.  Don't build shared libraries.
	* Makefile.in: Regenerated.
@
text
@a0 9
2006-10-02  Daniel Jacobowitz  <dan@@codesourcery.com>

	Backport:
	2006-06-15  Daniel Jacobowitz  <dan@@codesourcery.com>
	* Makefile.def (fixincludes): Correct extra_configure_flags
	typo.
	(expat): Don't install.  Don't build shared libraries.
	* Makefile.in: Regenerated.

@


1.1.10.1
log
@	* gdb/remote-sim.c (gdbsim_wait): Don't use target_signal_to_host
	or target_signal_from_host.
	* sim/arm/wrapper.c (gdb/signals.h): Include it.
	(SIGTRAP): Don't define it.
	(SIGBUS): Likewise.
	(sim_stop_reason): Use TARGET_SIGNAL_*.
	* sim/common/sim-reason.c (sim_stop_reason): Use
	sim_signal_to_target, not sim_signal_to_host.
	* sim/common/sim-signal.c (sim_signal_to_host): Fix typo.
	(sim_signal_to_target): New function.
	* sim/common/sim-signal.h: Declare it.
	* sim/d10v/interp.c (gdb/signals.h): Include it.
	(sim_stop_reason): Use TARGET_SIGNAL_*.
	* sim/erc32/interf.c: (gdb/signals.h): Include it.
	(sim_stop_reason): Use TARGET_SIGNAL_*.
	* sim/ppc/sim_calls.c (gdb/signals.h): Include it.
	(sim_stop_reason): Use TARGET_SIGNAL_*.
@
text
@a0 31
2005-11-16  Mark Mitchell  <mark@@codesourcery.com>

	* gdb/remote-sim.c (gdbsim_wait): Don't use target_signal_to_host
	or target_signal_from_host.
	* sim/arm/wrapper.c (gdb/signals.h): Include it.
	(SIGTRAP): Don't define it.
	(SIGBUS): Likewise.
	(sim_stop_reason): Use TARGET_SIGNAL_*.
	* sim/common/sim-reason.c (sim_stop_reason): Use
	sim_signal_to_target, not sim_signal_to_host.
	* sim/common/sim-signal.c (sim_signal_to_host): Fix typo.
	(sim_signal_to_target): New function.
	* sim/common/sim-signal.h: Declare it.
	* sim/d10v/interp.c (gdb/signals.h): Include it.
	(sim_stop_reason): Use TARGET_SIGNAL_*.
	* sim/erc32/interf.c: (gdb/signals.h): Include it.
	(sim_stop_reason): Use TARGET_SIGNAL_*.
	* sim/ppc/sim_calls.c (gdb/signals.h): Include it.
	(sim_stop_reason): Use TARGET_SIGNAL_*.

2005-11-16  Mark Mitchell  <mark@@codesourcery.com>

	* sim/ppc/configure.ac (USE_WIN32API): Define it.
	(sys/errno.h): Add it to AC_CHECK_HEADERS list.
	* sim/ppc/configure.in: Regenerate.
	* sim/ppc/config.in: Likewise.
	* sim/ppc/emul_netbsd.c (sys/errno.h): Guard with HAVE_SYS_ERRNO_H.
	(write_timezone): Guard with HAVE_GETTIMEOFDAY.
	* sim/ppc/emul_unix.c (do_unix_mkdir): Handle Win32 1-argument mkdir. 
	

@


1.1.10.2
log
@	Backport:
	2006-01-13  Mark Mitchell  <mark@@codesourcery.com>
	* event-loop.c (gdb_select): Detect file descriptors that have
	been closed.
@
text
@a0 7
2006-01-13  Mark Mitchell  <mark@@codesourcery.com>

	Backport:
	2006-01-13  Mark Mitchell  <mark@@codesourcery.com>
	* event-loop.c (gdb_select): Detect file descriptors that have
	been closed.

@


1.1.10.3
log
@	Backport:
	2006-01-24  Daniel Jacobowitz  <dan@@codesourcery.com>

	* infcmd.c: Include "observer.h".
	(post_create_inferior): New function.
	(run_command_1): Call it.  Also call proceed.
	* inferior.h (post_create_inferior): New prototype.
	* Makefile.in (infcmd.o): Update.
...
@
text
@a0 37
2006-01-26  Daniel Jacobowitz  <dan@@codesourcery.com>

	Backport:
	2006-01-24  Daniel Jacobowitz  <dan@@codesourcery.com>

	* infcmd.c: Include "observer.h".
	(post_create_inferior): New function.
	(run_command_1): Call it.  Also call proceed.
	* inferior.h (post_create_inferior): New prototype.
	* Makefile.in (infcmd.o): Update.

	* gnu-nat.c (gnu_create_inferior): Don't call proceed.
	* go32-nat.c (go32_create_inferior): Likewise.
	* nto-procfs.c (procfs_create_inferior): Likewise.
	* procfs.c (procfs_create_inferior): Likewise.
	* remote-sim.c (gdbsim_create_inferior): Likewise.
	* remote.c (extended_remote_create_inferior)
	(extended_remote_async_create_inferior): Likewise.
	* win32-nat.c (win32_create_inferior): Likewise.
	* wince.c (child_create_inferior): Likewise.

	* monitor.c (monitor_create_inferior): Don't call proceed.
	Set the PC manually.
	* ocd.c (ocd_create_inferior): Likewise.
	* remote-e7000.c (e7000_create_inferior): Likewise.
	* remote-m32r-sdi.c (m32r_create_inferior): Likewise.
	* remote-mips.c (mips_create_inferior): Likewise.
	* remote-rdi.c (arm_rdi_create_inferior): Likewise.
	* remote-rdp.c (remote_rdp_create_inferior): Likewise.
	* remote-sds.c (sds_create_inferior): Likewise.
	* remote-st.c (st2000_create_inferior): Likewise.

	* inf-ptrace.c (inf_ptrace_create_inferior): Don't call
	proceed or observer_notify_inferior_created.
	* inf-ttrace.c (inf_ttrace_create_inferior): Likewise.
	* inftarg.c (child_create_inferior): Likewise.

@


1.1.10.4
log
@	Backport:
	2006-01-24  Daniel Jacobowitz  <dan@@codesourcery.com>

	PR gdb/1914
	* fork-child.c (fork_inferior): Don't call
	solib_create_inferior_hook.
	* infcmd.c (post_create_inferior): Call solib_add,
	solib_create_inferior_hook, and re_enable_breakpoints_in_shlibs.
	(attach_command): Don't call solib_add or
	re_enable_breakpoints_in_shlibs.  Call post_create_inferior
	instead.
...
@
text
@a5 30
	PR gdb/1914
	* fork-child.c (fork_inferior): Don't call
	solib_create_inferior_hook.
	* infcmd.c (post_create_inferior): Call solib_add,
	solib_create_inferior_hook, and re_enable_breakpoints_in_shlibs.
	(attach_command): Don't call solib_add or
	re_enable_breakpoints_in_shlibs.  Call post_create_inferior
	instead.
	* remote.c (remote_open_1): Don't call solib_create_inferior_hook
	or observer_notify_inferior_created.  Call post_create_inferior
	instead.
	* corelow.c: Don't include "observer.h".
	(solib_add_stub): Deleted.
	(core_open): Don't call observer_notify_inferior_created or
	solib_add_stub.  Call post_create_inferior instead.
	* inf-ptrace.c: Don't include "observer.h".
	(inf_ptrace_attach): Don't call observer_notify_inferior_created.
	* inf-ttrace.c: Don't include "observer.h".
	(inf_ttrace_attach): Don't call observer_notify_inferior_created.
	* inferior.h (solib_create_inferior_hook): Remove redundant
	prototype.
	* inftarg.c: Don't include "observer.h".
	(child_attach): Don't call observer_notify_inferior_created.
	* Makefile.in: Update dependencies.

2006-01-26  Daniel Jacobowitz  <dan@@codesourcery.com>

	Backport:
	2006-01-24  Daniel Jacobowitz  <dan@@codesourcery.com>

@


1.1.10.5
log
@	Backport:
	2006-02-01  Mark Mitchell  <mark@@codesourcery.com>
	* sim/ppc/emul_netbsd.c (emul_netbsd_create): Quote file-name property.
	* sim/ppc/emul_unix.c (emul_unix_create): Likewise.
	* sim/ppc/tree.c (libiberty.h): Include it.
	(tree_quote_property): New function.
	* sim/ppc/tree.h (tree_quote_property): Declare.

	Backport:
	2006-01-23  Mark Mitchell  <mark@@codesourcery.com>
	* sim/ppc/words.h (signed32): Define as "int".
	(unsigned32): Define as "unsigned int".
@
text
@a0 17
2006-02-01  Mark Mitchell  <mark@@codesourcery.com>

	Backport:
	2006-02-01  Mark Mitchell  <mark@@codesourcery.com>
	* sim/ppc/emul_netbsd.c (emul_netbsd_create): Quote file-name property.
	* sim/ppc/emul_unix.c (emul_unix_create): Likewise.
	* sim/ppc/tree.c (libiberty.h): Include it.
	(tree_quote_property): New function.
	* sim/ppc/tree.h (tree_quote_property): Declare.

2006-01-23  Mark Mitchell  <mark@@codesourcery.com>

	Backport:
	2006-01-23  Mark Mitchell  <mark@@codesourcery.com>
	* sim/ppc/words.h (signed32): Define as "int".
	(unsigned32): Define as "unsigned int".

@


1.1.10.6
log
@Merge ten gdb and gdbserver patches for MIPS/MIPS64 support.
@
text
@a0 104
2006-03-15  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/gdb_proc_service.h (paddr_t): Use psaddr_t if available.
	* gdb/proc-service.c (ps_xfer_memory): Cast paddr_t to unsigned
	long.
	(ps_pglobal_lookup): Cast CORE_ADDR to paddr_t.

2006-03-15  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/gdbserver/linux-mips-low.c: Include <sys/ptrace.h> and
	"gdb_proc_service.h".
	(PTRACE_GET_THREAD_AREA): Define.
	(ps_get_thread_area): New function.
	* gdb/gdbserver/Makefile.in (linux-i386-low.o, linux-mips-low.o)
	(linux-x86-64-low.o): Update.

2006-03-15  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/gdbserver/configure.ac: Remove checks for prfpregset_t.
	* gdb/gdbserver/gdb_proc_service.h: New file.
	* gdb/gdbserver/linux-i386-low.c, gdb/gdbserver/linux-x86-64-low.c,
	gdb/gdbserver/thread-db.c: Use the new "gdb_proc_service.h".
	* gdb/gdbserver/proc-service.c: Likewise.
	(ps_pglobal_lookup, ps_pdread, ps_pdwrite): Use psaddr_t.
	(ps_lgetfpregs, ps_lsetfpregs): Use a void* argument.
	* gdb/gdbserver/Makefile.in (gdb_proc_service_h): Updated.
	* gdb/gdbserver/configure, config.in: Regenerated.

2006-03-15  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/Makefile.in (mips_linux_tdep_h): New.
	(mpis-linux-nat.o, mips-linux-tdep.o): Update.
	* gdb/mips-linux-nat.c: Include "inferior.h", "mips-linux-tdep.h", and
	<sys/ptrace.h>.
	(have_ptrace_regsets, super_fetch_registers, super_store_registers)
	(mips64_linux_regsets_fetch_registers)
	(mips64_linux_regsets_store_registers, mips64_linux_fetch_registers)
	(mips64_linux_store_registers): New.
	(_initialize_mips_linux_nat): Override to_fetch_registers and
	to_store_registers.
	* gdb/mips-linux-tdep.h: New file.
	* gdb/mips-linux-tdep.c: Include "mips-linux-tdep.c".
	(ELF_NGREG, ELF_NFPREG, elf_greg_t, elf_gregset_t, elf_fpreg_t)
	(elf_fpregset_t, FPR_BASE, PC, CAUSE, BADVADDR, MMHI, MMLO)
	(FPC_CSR, FPC_EIR, EF_REG0, EF_REG31, EF_LO, EF_HI, EF_CP0_EPC)
	(EF_CP0_BADVADDR, EF_CP0_STATUS, EF_CP0_CAUSE, EF_SIZE)
	(MIPS64_ELF_NGREG, MIPS64_ELF_NFPREG, mips64_elf_greg_t)
	(mips64_elf_gregset_t, mips64_elf_fpreg_t, mips64_elf_fpregset_t)
	(MIPS64_FPR_BASE, MIPS64_PC, MIPS64_CAUSE, MIPS64_BADVADDR)
	(MIPS64_MMHI, MIPS64_MMLO, MIPS64_FPC_CSR, MIPS64_FPC_EIR)
	(MIPS64_EF_REG0, MIPS64_EF_REG31, MIPS64_EF_LO, MIPS64_EF_HI)
	(MIPS64_EF_CP0_EPC, MIPS64_EF_CP0_BADVADDR, MIPS64_EF_CP0_STATUS)
	(MIPS64_EF_CP0_CAUSE, MIPS64_EF_SIZE): Delete.
	(supply_32bit_reg): Use gdb_byte.
	(supply_64bit_reg): New.
	(mips_supply_gregset, mips_fill_gregset, mips_supply_fpregset)
	(mips_fill_fpregset, fetch_core_registers, supply_gregset)
	(fill_gregset, supply_fpregset): Update for renamed types.
	(mips64_supply_gregset): Use gdb_byte and supply_64bit_reg.
	(mips64_fill_gregset): Make global.  Handle 32-bit register
	sizes.
	(mips64_fill_fpregset): Make global.  Use gdb_byte.  Handle
	FP regsets properly.

2006-03-15  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/mips-linux-tdep.c (mips_supply_gregset): Renamed from supply_gregset.
	(mips_fill_gregset): Renamed from fill_gregset.
	(mips_supply_fpregset): Renamed from supply_fpregset.
	(mips_fill_fpregset): Renamed from fill_fpregset.
	(fetch_core_registers): Update calls.
	(supply_gregset, fill_gregset, supply_fpregset, fill_fpregset): New
	functions.

2006-03-15  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/mips-tdep.c (mips_gdbarch_init): Default 64-bit ELF files to N64.

2006-03-15  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/mips-tdep.c (is_mips16_addr, mips32_next_pc, add_offset_16):
	Correct arithmetic for 64-bit CORE_ADDR.

2006-03-15  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/mips-linux-tdep.c: Include "floatformat.h".
	(mips_linux_init_abi): Use 128-bit long double for N32 and N64.
	(mips_n32n64_return_value): Support 128-bit long double.
	(print_gp_register_row): Don't print spaces before ignored
	or floating point registers.

2006-03-15  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/mips-mdebug-tdep.c (compare_pdr_entries): Use bfd_get_signed_32
	for code addresses.
	(non_heuristic_proc_desc): Likewise.

2006-03-15  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/mips-linux-nat.c: Include "gdb_proc_service.h".
	(PTRACE_GET_THREAD_AREA): Define.
	(ps_get_thread_area): New.
	* gdb/Makefile.in (mips-linux-nat.o): Update.

@


1.1.10.7
log
@Remove changelog entries from wrong branch.
@
text
@d1 104
@


1.1.8.1
log
@2005-03-25  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/elfread.c (elf_symtab_read): Skip symbols which BFD considers
	special.
@
text
@a0 4
2005-03-25  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/elfread.c (elf_symtab_read): Skip symbols which BFD considers
	special.
@


1.1.8.2
log
@2005-03-25  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/Makefile.in (arm-linux-nat.o): Update dependencies.
	* gdb/arm-linux-nat.c: Include "gdb_proc_service.h".
	(PTRACE_GET_THREAD_AREA): Define.
	(ps_get_thread_area): New function.

	* gdb/gdbserver/Makefile.in (linux-arm-low.o): Update dependencies.
	* gdb/gdbserver/linux-arm-low.c: Include "../gdb_proc_service.h".
	(PTRACE_GET_THREAD_AREA): Define.
	(ps_get_thread_area): New function.
@
text
@a2 12
	* gdb/Makefile.in (arm-linux-nat.o): Update dependencies.
	* gdb/arm-linux-nat.c: Include "gdb_proc_service.h".
	(PTRACE_GET_THREAD_AREA): Define.
	(ps_get_thread_area): New function.

	* gdb/gdbserver/Makefile.in (linux-arm-low.o): Update dependencies.
	* gdb/gdbserver/linux-arm-low.c: Include "../gdb_proc_service.h".
	(PTRACE_GET_THREAD_AREA): Define.
	(ps_get_thread_area): New function.

2005-03-25  Daniel Jacobowitz  <dan@@codesourcery.com>

@


1.1.8.3
log
@2005-04-25  Paul Brook  <paul@@codesourcery.com>

	* gdb/configure.tgt: Don't build rdi-share library.
	* gdb/config/arm/embed.mt: Ditto.
@
text
@a0 5
2005-04-25  Paul Brook  <paul@@codesourcery.com>

	* gdb/configure.tgt: Don't build rdi-share library.
	* gdb/config/arm/embed.mt: Ditto.

@


1.1.8.4
log
@2005-04-29  Paul Brook  <paul@@codesourcery.com>

	* gdb/remote-sim.c (SIGTRAP): Provide default defnition.
	* gdb/signals/signals.c (SIGRAP): Ditto.
@
text
@a0 5
2005-04-29  Paul Brook  <paul@@codesourcery.com>

	* gdb/remote-sim.c (SIGTRAP): Provide default defnition.
	* gdb/signals/signals.c (SIGRAP): Ditto.

@


1.1.8.5
log
@2005-03-30  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/Makefile.in (arm-linux-nat.o): Update dependencies.
	* gdb/arm-linux-nat.c: Include "gdb_assert.h".
	(PTRACE_GETWMMXREGS, PTRACE_SETWMMXREGS): Define.
	(arm_linux_has_wmmx_registers): New flag.
	(GET_THREAD_ID): Remove stray punctuation.
	(IWMMXT_REGS_SIZE): Define.
	(fetch_wmmx_regs, store_wmmx_regs): New functions.
	(fetch_inferior_registers, store_inferior_registers): Call them.
	(arm_linux_available_registers): New function.
	* gdb/inftarg.c (child_xfer_partial): Handle
	TARGET_OBJECT_AVAILABLE_REGISTERS.
	* gdb/config/arm/nm-linux.h (arm_linux_available_registers): Add
	prototype.
	(NATIVE_XFER_AVAILABLE_REGISTERS): Define.

	* gdb/gdbserver/linux-arm-low.c (arm_fill_wmmxregset)
	(arm_store_wmmxregset): Remove stray text.
	(arm_available_registers): Remove debugging output.  Use hex.
	* gdb/gdbserver/regcache.c (num_registers): Make global.
	* gdb/gdbserver/server.c (handle_p_packet, handle_P_packet): Check
	the value of regnum.

2005-03-28  Paul Brook  <paul@@codesourcery.com>
	Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/Makefile.in: arm-tdep.o depends on $(observer_h).
	* gdb/arm-linux-nat.c (fetch_fpregister, fetch_fpregs,
	store_fpregister, store_fpregs): Rename...
	(fetch_fpa_register, fetch_fpa_regs, store_fpa_register,
	store_fpa_regs): ... to this.
	* gdb/arm-linux-tdep.c (arm_linux_init_abi): Provide ABI specific
	overrides.
	* gdb/arm-tdep.c: Include opserver.h.
	(struct gdbarch_tdep_info): Add.
	(arm_push_dummy_call): Handle doubleword alignment.
	(arm_register_type): Handle iWMMXt and VFP regs.
	(arm_register_byte): Ditto.
	(arm_pseudo_register_read): New function.
	(arm_pseudo_register_write): New function.
	(arm_dwarf_reg_to_regnum): New function.
	(arm_register_sim_regno): Handle iWMMXT regs.
	(arm_register_remote_regno): New function.
	(arm_extract_return_value): Use new macro names.
	(arm_register_name): Handle iWMMXt and VFP registers.
	(arm_sim_available_registers): New function.
	(arm_update_architecture): New function.
	(arm_gdbarch_init): Handle optional register sets.  Register new
	hooks.  Fix misleading error message.
	(_initialize_arm_tdep): Call observer_attach_inferior_created.
	* gdb/arm-tdep.h (ARM_NUM_FP_ARG_REGS, ARM_LAST_FP_ARG_REGNUM,
	FP_REGISTER_SIZE, NUM_FREGS): Rename ...
	(ARM_NUM_FPA_ARG_REGS, ARM_LAST_FPA_ARG_REGNUM, FPA_REGISTER_SIZE,
	NUM_FPA_REGS): ... to this.
	(NUM_IWMMXT_COP0REGS, NUM_IWMMXT_COP1REGS, NUM_IWMMXT_REGS,
	IWMMXT_COP0_REGSIZE, IWMMXT_COP1_REGSIZE, NUM_VFP_XREGS,
	VFP_XREG_SIZE, NUM_VFP_SREGS, VFP_SREG_SIZE, NUM_VFP_PSEUDOS): Define.
	(struct gdbarch_tdep): Add target_has_iwmmxt_regs,
	target_has_vfp_regs, first_iwmmxt_regnum, target_iwmmxt_regnum,
	first_vfp_regnum, first_vfp_pseudo and target_vfp_regnum.
	* gdb/gdbarch.c (struct gdbarch): Add remote_num_g_packet_regs,
	sim_available_registers and register_remote_regno.
	(startup_gdbarch, verify_gdbarch): Ditto.
	(gdbarch_dump): Dump new fields.
	(gdbarch_remote_num_g_packet_regs_p, gdbarch_remote_num_g_packet_regs,
	set_gdbarch_remote_num_g_packet_regs,
	gdbarch_sim_available_registers_p, gdbarch_sim_available_registers,
	set_gdbarch_sim_available_registers, gdbarch_register_remote_regno_p,
	gdbarch_register_remote_regno, set_gdbarch_register_remote_regno):
	New functions.
	* gdb/gdbarch.h: Add prototypes.
	* gdb/gdbarch.sh: Add new fields.
	(deprecated_current_gdbarch_select_hack): Call flush_cached_frames.
	* gdb/remote-sim.h (gdbsim_create_inferior): Call
	observer_notify_inferior_created.
	(gdbsim_xfer_partial): New function.
	(init_gdbsim_ops): Use it.
	* gdb/remote.c (struct remote_state): Add num_g_regs.
	(init_remote_state): Only consider hard regs.  Allow target to provide
	register mapping.
	(packet_reg_from_regnum): Don't check pseudo regs.
	(packet_reg_from_pnum): Ditto.
	(remote_protocol_qPart_availableRegisters): Add.
	(set_remote_protocol_qPart_availableRegisters_packet_cmd,
	show_remote_protocol_qPart_availableRegisters_packet_cmd): New
	functions.
	(fetch_register_using_p, store_register_using_P): Handle arbitrary
	register mappings.
	(fetch_registers_using_g): New function.
	(remote_fetch_registers): Use it.
	(store_registers_using_G): New function.
	(remote_store_registers): Use it.
	(remote_xfer_partial): Handle TARGET_OBJECT_AVAILABLE_REGISTERS.
	(show_remote_cmd): Display availableRegisters.
	(_initialize_remote): Register qPart_availableRegisters.
	* gdb/target.h (enum target_object): Add
	TARGET_OBJECT_AVAILABLE_REGISTERS.
	* gdb/gdbserver/configure.srv (arm*-*-linux*): set
	srv_linux_regsets=yes.
	* gdb/gdbserver/linux-arm-low.c (PTRACE_GETWMMXREGS,
	PTRACE_SETWMMXREGS): Define.
	(arm_fill_gregset, arm_store_gregset, arm_fill_wmmxregset,
	arm_store_wmmxregset, arm_available_registers): New functions.
	(target_regsets): Add.
	(the_low_target): Use arm_available_registers.
	* gdb/gdbserver/linux-low.c (linux_available_registers): New function.
	(linux_target_op): Use it.
	* gdb/gdbserver/linux-low.h (gdbserver/linux-low.h): Add
	available_registers.
	(use_regsets_p): Declare.
	* gdb/gdbserver/regcache.c (g_register_bytes): Add.
	(regcache_invalidate, registers_to_string, registers_from_string):
	Use it.
	(set_register_cache): Set g_register_bytes.
	(supply_register_as_string): New function.
	* gdb/gdbserver/regcache.h (supply_register_as_string): Add prototype.
	* gdb/gdbserver/server.c (handle_query): Handle
	qPart:availableRegisters.
	(handle_p_packet, handle_P_packet): New functions.
	(main): Handle 'p' and 'P' packets.
	* gdb/gdbserver/target.h (struct target_ops): Add available_registers.
	* gdb/regformats/reg-arm.dat: Add last_g_reg and iWMMXT regs.
	* gdb/regformats/regdat.sh: Handle last_g_reg.
	* gdb/regformats/regdef.h (set_register_cache): Update prototype.
@
text
@a0 126
2005-03-30  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/Makefile.in (arm-linux-nat.o): Update dependencies.
	* gdb/arm-linux-nat.c: Include "gdb_assert.h".
	(PTRACE_GETWMMXREGS, PTRACE_SETWMMXREGS): Define.
	(arm_linux_has_wmmx_registers): New flag.
	(GET_THREAD_ID): Remove stray punctuation.
	(IWMMXT_REGS_SIZE): Define.
	(fetch_wmmx_regs, store_wmmx_regs): New functions.
	(fetch_inferior_registers, store_inferior_registers): Call them.
	(arm_linux_available_registers): New function.
	* gdb/inftarg.c (child_xfer_partial): Handle
	TARGET_OBJECT_AVAILABLE_REGISTERS.
	* gdb/config/arm/nm-linux.h (arm_linux_available_registers): Add
	prototype.
	(NATIVE_XFER_AVAILABLE_REGISTERS): Define.

	* gdb/gdbserver/linux-arm-low.c (arm_fill_wmmxregset)
	(arm_store_wmmxregset): Remove stray text.
	(arm_available_registers): Remove debugging output.  Use hex.
	* gdb/gdbserver/regcache.c (num_registers): Make global. 
	* gdb/gdbserver/server.c (handle_p_packet, handle_P_packet): Check
	the value of regnum.

2005-03-28  Paul Brook  <paul@@codesourcery.com>
	Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/Makefile.in: arm-tdep.o depends on $(observer_h).
	* gdb/arm-linux-nat.c (fetch_fpregister, fetch_fpregs,
	store_fpregister, store_fpregs): Rename...
	(fetch_fpa_register, fetch_fpa_regs, store_fpa_register,
	store_fpa_regs): ... to this.
	* gdb/arm-linux-tdep.c (arm_linux_init_abi): Provide ABI specific
	overrides.
	* gdb/arm-tdep.c: Include opserver.h.
	(struct gdbarch_tdep_info): Add.
	(arm_push_dummy_call): Handle doubleword alignment.
	(arm_register_type): Handle iWMMXt and VFP regs.
	(arm_register_byte): Ditto.
	(arm_pseudo_register_read): New function.
	(arm_pseudo_register_write): New function.
	(arm_dwarf_reg_to_regnum): New function.
	(arm_register_sim_regno): Handle iWMMXT regs.
	(arm_register_remote_regno): New function.
	(arm_extract_return_value): Use new macro names.
	(arm_register_name): Handle iWMMXt and VFP registers.
	(arm_sim_available_registers): New function.
	(arm_update_architecture): New function.
	(arm_gdbarch_init): Handle optional register sets.  Register new
	hooks.  Fix misleading error message.
	(_initialize_arm_tdep): Call observer_attach_inferior_created.
	* gdb/arm-tdep.h (ARM_NUM_FP_ARG_REGS, ARM_LAST_FP_ARG_REGNUM,
	FP_REGISTER_SIZE, NUM_FREGS): Rename ...
	(ARM_NUM_FPA_ARG_REGS, ARM_LAST_FPA_ARG_REGNUM, FPA_REGISTER_SIZE,
	NUM_FPA_REGS): ... to this.
	(NUM_IWMMXT_COP0REGS, NUM_IWMMXT_COP1REGS, NUM_IWMMXT_REGS,
	IWMMXT_COP0_REGSIZE, IWMMXT_COP1_REGSIZE, NUM_VFP_XREGS,
	VFP_XREG_SIZE, NUM_VFP_SREGS, VFP_SREG_SIZE, NUM_VFP_PSEUDOS): Define.
	(struct gdbarch_tdep): Add target_has_iwmmxt_regs,
	target_has_vfp_regs, first_iwmmxt_regnum, target_iwmmxt_regnum,
	first_vfp_regnum, first_vfp_pseudo and target_vfp_regnum.
	* gdb/gdbarch.c (struct gdbarch): Add remote_num_g_packet_regs,
	sim_available_registers and register_remote_regno.
	(startup_gdbarch, verify_gdbarch): Ditto.
	(gdbarch_dump): Dump new fields.
	(gdbarch_remote_num_g_packet_regs_p, gdbarch_remote_num_g_packet_regs,
	set_gdbarch_remote_num_g_packet_regs,
	gdbarch_sim_available_registers_p, gdbarch_sim_available_registers,
	set_gdbarch_sim_available_registers, gdbarch_register_remote_regno_p,
	gdbarch_register_remote_regno, set_gdbarch_register_remote_regno):
	New functions.
	* gdb/gdbarch.h: Add prototypes.
	* gdb/gdbarch.sh: Add new fields.
	(deprecated_current_gdbarch_select_hack): Call flush_cached_frames.
	* gdb/remote-sim.h (gdbsim_create_inferior): Call
	observer_notify_inferior_created.
	(gdbsim_xfer_partial): New function.
	(init_gdbsim_ops): Use it.
	* gdb/remote.c (struct remote_state): Add num_g_regs.
	(init_remote_state): Only consider hard regs.  Allow target to provide
	register mapping.
	(packet_reg_from_regnum): Don't check pseudo regs.
	(packet_reg_from_pnum): Ditto.
	(remote_protocol_qPart_availableRegisters): Add.
	(set_remote_protocol_qPart_availableRegisters_packet_cmd,
	show_remote_protocol_qPart_availableRegisters_packet_cmd): New
	functions.
	(fetch_register_using_p, store_register_using_P): Handle arbitrary
	register mappings.
	(fetch_registers_using_g): New function.
	(remote_fetch_registers): Use it.
	(store_registers_using_G): New function.
	(remote_store_registers): Use it.
	(remote_xfer_partial): Handle TARGET_OBJECT_AVAILABLE_REGISTERS.
	(show_remote_cmd): Display availableRegisters.
	(_initialize_remote): Register qPart_availableRegisters.
	* gdb/target.h (enum target_object): Add
	TARGET_OBJECT_AVAILABLE_REGISTERS.
	* gdb/gdbserver/configure.srv (arm*-*-linux*): set
	srv_linux_regsets=yes.
	* gdb/gdbserver/linux-arm-low.c (PTRACE_GETWMMXREGS,
	PTRACE_SETWMMXREGS): Define.
	(arm_fill_gregset, arm_store_gregset, arm_fill_wmmxregset,
	arm_store_wmmxregset, arm_available_registers): New functions.
	(target_regsets): Add.
	(the_low_target): Use arm_available_registers.
	* gdb/gdbserver/linux-low.c (linux_available_registers): New function.
	(linux_target_op): Use it.
	* gdb/gdbserver/linux-low.h (gdbserver/linux-low.h): Add
	available_registers.
	(use_regsets_p): Declare.
	* gdb/gdbserver/regcache.c (g_register_bytes): Add.
	(regcache_invalidate, registers_to_string, registers_from_string):
	Use it.
	(set_register_cache): Set g_register_bytes.
	(supply_register_as_string): New function.
	* gdb/gdbserver/regcache.h (supply_register_as_string): Add prototype.
	* gdb/gdbserver/server.c (handle_query): Handle
	qPart:availableRegisters.
	(handle_p_packet, handle_P_packet): New functions.
	(main): Handle 'p' and 'P' packets.
	* gdb/gdbserver/target.h (struct target_ops): Add available_registers.
	* gdb/regformats/reg-arm.dat: Add last_g_reg and iWMMXT regs.
	* gdb/regformats/regdat.sh: Handle last_g_reg.
	* gdb/regformats/regdef.h (set_register_cache): Update prototype.

@


1.1.8.6
log
@2005-10-20  Paul Brook  <paul@@codesourcery.com>

	* arm-tdep.c (arm_iwmmxt_type): New.
	(arm_build_iwmmxt_type): New function.
	(arm_register_type): Use it.
@
text
@a0 6
2005-10-20  Paul Brook  <paul@@codesourcery.com>

	* arm-tdep.c (arm_iwmmxt_type): New.
	(arm_build_iwmmxt_type): New function.
	(arm_register_type): Use it.

@


1.1.8.7
log
@        * gdb/arm-tdep.c (submask, bit, bits, sbits): Move macro definitions.
        (thumb_skip_prologue): Don't require frame pointer. Handle Thumb-2
        prologue instructions.
        (thumb_get_insn): New function. Read a Thumb or Thumb-2 instruction
        from memory.
        (arm_skip_prologue): Change comment to include Thumb-2.
        (thumb2_modify_constant): New function. Perform the Thumb-2 12-bit
        immediate transformation.
        (thumb_scan_prologue): Handle Thumb-2 prologue instructions.
@
text
@a0 12
2005-10-20  Julian Brown  <julian@@codesourcery.com>

	* gdb/arm-tdep.c (submask, bit, bits, sbits): Move macro definitions.
	(thumb_skip_prologue): Don't require frame pointer. Handle Thumb-2
	prologue instructions.
	(thumb_get_insn): New function. Read a Thumb or Thumb-2 instruction
	from memory.
	(arm_skip_prologue): Change comment to include Thumb-2.
	(thumb2_modify_constant): New function. Perform the Thumb-2 12-bit
	immediate transformation.
	(thumb_scan_prologue): Handle Thumb-2 prologue instructions.

@


1.1.8.8
log
@    * gdb/arm-tdep.c (bitcount): Move function higher up in file.
    (thumb2_it_block): New function. Find the next instruction to be
    executed in an IT block.
    (thumb_get_next_pc): Handle 16- and 32-bit Thumb-2 instructions.
@
text
@a2 7
	* gdb/arm-tdep.c (bitcount): Move function higher up in file.
	(thumb2_it_block): New function. Find the next instruction to be
	executed in an IT block.
	(thumb_get_next_pc): Handle 16- and 32-bit Thumb-2 instructions.

2005-10-20  Julian Brown  <julian@@codesourcery.com>

@


1.1.8.9
log
@        * gdb/arm-tdep.c (thumb2_modify_constant): Silence compiler warning.
        (thumb_scan_prologue): Fix typo.
@
text
@a2 5
	* gdb/arm-tdep.c (thumb2_modify_constant): Silence compiler warning.
	(thumb_scan_prologue): Fix typo.

2005-10-20  Julian Brown  <julian@@codesourcery.com>

@


1.1.8.10
log
@	* gdb/gdbserver/linux-arm-low.c: Move #include below ELF_GREGSET_T
	definition.
@
text
@a0 5
2006-01-24  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/gdbserver/linux-arm-low.c: Move #include below ELF_GREGSET_T
	definition.

@


1.1.8.11
log
@	Backport:
	2006-01-24  Daniel Jacobowitz  <dan@@codesourcery.com>

	* infcmd.c: Include "observer.h".
	(post_create_inferior): New function.
	(run_command_1): Call it.  Also call proceed.
	* inferior.h (post_create_inferior): New prototype.
	* Makefile.in (infcmd.o): Update.
...
@
text
@a0 37
2006-01-26  Daniel Jacobowitz  <dan@@codesourcery.com>

	Backport:
	2006-01-24  Daniel Jacobowitz  <dan@@codesourcery.com>

	* infcmd.c: Include "observer.h".
	(post_create_inferior): New function.
	(run_command_1): Call it.  Also call proceed.
	* inferior.h (post_create_inferior): New prototype.
	* Makefile.in (infcmd.o): Update.

	* gnu-nat.c (gnu_create_inferior): Don't call proceed.
	* go32-nat.c (go32_create_inferior): Likewise.
	* nto-procfs.c (procfs_create_inferior): Likewise.
	* procfs.c (procfs_create_inferior): Likewise.
	* remote-sim.c (gdbsim_create_inferior): Likewise.
	* remote.c (extended_remote_create_inferior)
	(extended_remote_async_create_inferior): Likewise.
	* win32-nat.c (win32_create_inferior): Likewise.
	* wince.c (child_create_inferior): Likewise.

	* monitor.c (monitor_create_inferior): Don't call proceed.
	Set the PC manually.
	* ocd.c (ocd_create_inferior): Likewise.
	* remote-e7000.c (e7000_create_inferior): Likewise.
	* remote-m32r-sdi.c (m32r_create_inferior): Likewise.
	* remote-mips.c (mips_create_inferior): Likewise.
	* remote-rdi.c (arm_rdi_create_inferior): Likewise.
	* remote-rdp.c (remote_rdp_create_inferior): Likewise.
	* remote-sds.c (sds_create_inferior): Likewise.
	* remote-st.c (st2000_create_inferior): Likewise.

	* inf-ptrace.c (inf_ptrace_create_inferior): Don't call
	proceed or observer_notify_inferior_created.
	* inf-ttrace.c (inf_ttrace_create_inferior): Likewise.
	* inftarg.c (child_create_inferior): Likewise.

@


1.1.8.12
log
@	Backport:
	2006-01-24  Daniel Jacobowitz  <dan@@codesourcery.com>

	PR gdb/1914
	* fork-child.c (fork_inferior): Don't call
	solib_create_inferior_hook.
	* infcmd.c (post_create_inferior): Call solib_add,
	solib_create_inferior_hook, and re_enable_breakpoints_in_shlibs.
	(attach_command): Don't call solib_add or
	re_enable_breakpoints_in_shlibs.  Call post_create_inferior
	instead.
...
@
text
@a5 30
	PR gdb/1914
	* fork-child.c (fork_inferior): Don't call
	solib_create_inferior_hook.
	* infcmd.c (post_create_inferior): Call solib_add,
	solib_create_inferior_hook, and re_enable_breakpoints_in_shlibs.
	(attach_command): Don't call solib_add or
	re_enable_breakpoints_in_shlibs.  Call post_create_inferior
	instead.
	* remote.c (remote_open_1): Don't call solib_create_inferior_hook
	or observer_notify_inferior_created.  Call post_create_inferior
	instead.
	* corelow.c: Don't include "observer.h".
	(solib_add_stub): Deleted.
	(core_open): Don't call observer_notify_inferior_created or
	solib_add_stub.  Call post_create_inferior instead.
	* inf-ptrace.c: Don't include "observer.h".
	(inf_ptrace_attach): Don't call observer_notify_inferior_created.
	* inf-ttrace.c: Don't include "observer.h".
	(inf_ttrace_attach): Don't call observer_notify_inferior_created.
	* inferior.h (solib_create_inferior_hook): Remove redundant
	prototype.
	* inftarg.c: Don't include "observer.h".
	(child_attach): Don't call observer_notify_inferior_created.
	* Makefile.in: Update dependencies.

2006-01-26  Daniel Jacobowitz  <dan@@codesourcery.com>

	Backport:
	2006-01-24  Daniel Jacobowitz  <dan@@codesourcery.com>

@


1.1.8.13
log
@	* gdb/regformats/regdat.sh: Include <stdlib.h>.
@
text
@a2 4
	* gdb/regformats/regdat.sh: Include <stdlib.h>.

2006-01-26  Daniel Jacobowitz  <dan@@codesourcery.com>

@


1.1.6.1
log
@	* ld/ldmain.c (main): Use expandargv.
	* binutils/addr2line.c (main): Likewise.
	* binutils/ar.c (main): Likewise.
	* binutils/coffdump.c (main): Likewise.
	* binutils/cxxfilt.c (main): Likewise.
	* binutils/dlltool.c (main): Likewise.
	* binutils/dllwrap.c (main): Likewise.
	* binutils/nlmconv.c (main): Likewise.
	* binutils/nm.c (main): Likewise.
	* binutils/objcopy.c (main): Likewise.
	* binutils/objdump.c (main): Likewise.
	* binutils/readelf.c (main): Likewise.
	* binutils/size.c (main): Likeiwse.
	* binutils/srcconv.c (main): Likewise.
	* binutils/strings.c (main): Likewise.
	* binutils/sysdump.c (main): Likewise.
	* binutils/sysinfo.c (main): Likewise.
	* binutils/windres.c (main): Likewise.

	* include/libiberty.h (expandargv): New function.
	* libiberty/argv.c (safe-ctype.h): Include it.
	(ISBLANK): Remove.
	(stdio.h): Include.
	(expandargv): New function.
	* libiberty/Makefile.in: Regenerated.
@
text
@a0 31
2005-08-30  Mark Mitchell  <mark@@codesourcery.com>

	* ld/ldmain.c (main): Use expandargv.
	* binutils/addr2line.c (main): Likewise.
	* binutils/ar.c (main): Likewise.
	* binutils/coffdump.c (main): Likewise.
	* binutils/cxxfilt.c (main): Likewise.
	* binutils/dlltool.c (main): Likewise.
	* binutils/dllwrap.c (main): Likewise.
	* binutils/nlmconv.c (main): Likewise.
	* binutils/nm.c (main): Likewise.
	* binutils/objcopy.c (main): Likewise.
	* binutils/objdump.c (main): Likewise.
	* binutils/readelf.c (main): Likewise.
	* binutils/size.c (main): Likeiwse.
	* binutils/srcconv.c (main): Likewise.
	* binutils/strings.c (main): Likewise.
	* binutils/sysdump.c (main): Likewise.
	* binutils/sysinfo.c (main): Likewise.
	* binutils/windres.c (main): Likewise.
	
2005-08-30  Mark Mitchell  <mark@@codesourcery.com>

	* include/libiberty.h (expandargv): New function.
	* libiberty/argv.c (safe-ctype.h): Include it.
	(ISBLANK): Remove.
	(stdio.h): Include.
	(expandargv): New function.
	* libiberty/Makefile.in: Regenerated.


@


1.1.6.2
log
@	Issue #439
	Backport:
	2005-10-13  Mark Mitchell  <mark@@codesourcery.com>
	* ld.texino: Describe double-quoted string syntax for version
	nodes.
	* ldlang.h (lang_new_vers_pattern): Add literal_p parameter.
	* ldgram.y (vers_defns): Allow NAME as well as VERS_IDENTIFIER.
	Adjust calls to lang_new_vers_pattern to pass literal_p argument.
	* ldlang.c (lang_vers_match): Fix indentation.  Do not glob-match
	version nodes without a pattern.
	(lang_new_vers_pattern): Add literal_p parameter.
	(lang_do_version_exports_section): Pass it.
@
text
@a0 15
2005-10-13  Mark Mitchell  <mark@@codesourcery.com>

	Issue #439
	Backport:
	2005-10-13  Mark Mitchell  <mark@@codesourcery.com>
	* ld.texino: Describe double-quoted string syntax for version
	nodes.
	* ldlang.h (lang_new_vers_pattern): Add literal_p parameter.
	* ldgram.y (vers_defns): Allow NAME as well as VERS_IDENTIFIER.
	Adjust calls to lang_new_vers_pattern to pass literal_p argument.
	* ldlang.c (lang_vers_match): Fix indentation.  Do not glob-match
	version nodes without a pattern.
	(lang_new_vers_pattern): Add literal_p parameter.
	(lang_do_version_exports_section): Pass it.

@


1.1.6.3
log
@	Issue #488
	* libiberty/argv.c (expandargv): Check for errors with ferror,
	rather than by looking at return value from fread.
@
text
@a0 6
2005-11-17  Carlos O'Donell  <carlos@@codesourcery.com>

	Issue #488
	* libiberty/argv.c (expandargv): Check for errors with ferror,
	rather than by looking at return value from fread.
	
@


1.1.6.4
log
@	* binutils/dlltool.c (main): Fix typo.
	* binutils/windres.c (main): Likewise.
@
text
@a0 5
2005-11-28  Mark Mitchell  <mark@@codesourcery.com>

	* binutils/dlltool.c (main): Fix typo.
	* binutils/windres.c (main): Likewise.

@


1.1.6.5
log
@
Update.
@
text
@d1 55
a55 1
2006-03-16  Carlos O'Donell  <carlos@@codesourcery.com>
a56 21
	* binutils/rcparse.c: Remove generated file.
	* binutils/rcparse.h: Likewise.
	* binutils/nlmheader.c: Likewise.
	* binutils/nlmheader.h: Likewise.
	* binutils/arparse.c: Likewise.
	* binutils/arparse.h: Likewise.
	* binutils/sysinfo.c: Likewise.
	* binutils/sysinfo.h: Likewise.
	* binutils/defparse.c: Likewise.
	* binutils/defparse.h: Likewise.
	* binutils/rclex.c: Likewise.
	* binutils/syslex.c: Likewise.
	* binutils/deflex.c: Likewise.
	* binutils/arlex: Likewise.
	* gas/itbl-parse.c: Remove generated file.
	* gas/itbl-parse.h: Likewise.
	* gas/m68k-parse.c: Likewise.
	* gas/itbl-lex.c: Likewise.
	* ld/ldgram.c: Remove generated file.
	* ld/ldgram.h: Likewise.
	* ld/ldlex.c: Likewise.
@


1.1.4.1
log
@Backport ARM patches from HEAD to binutils-csl-arm-2005q1-branch.
@
text
@a0 58
2005-03-23  Jim Blandy  <jimb@@redhat.com>

	* config/tc-arm.c (arm_adjust_symtab): Fetch elf_sym's binding
	attributes properly.

2005-03-21  Nick Clifton  <nickc@@redhat.com>

	* gas/testsuite/gas/arm/iwmmxt.s: Update instructions that use the "never" value
	in the conditional field to use "le" instead.  This is so that the
	disassembler will disassemble them.
	* gas/testsuite/gas/arm/iwmmxt.d: Update expected disassemblies.

2005-03-18  Julian Brown  <julian@@codesourcery.com>

	* ld/scripttempl/armbpapi.sc (.rel.dyn): Add .rel.init_array,
	.rel.fini_array.
	(.rela.dyn): Add .rela.init_array, .rela.fini_array.
	(SECTIONS): Add .rel.other, .rela.other, .reli.other after PLT relocs.

2005-03-16  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gas/configure.tgt: Set emulation for arm-*-eabi*.
	* gas/config/tc-arm.c (meabi_flags): Check EABI_DEFAULT.
	* gas/config/te-armeabi.h: New file.
	* gas/config/te-armlinuxeabi.h (EABI_DEFAULT): Define.
	* gas/config/te-symbian.h: Include "te-armeabi.h".

2005-03-15  Zack Weinberg  <zack@@codesourcery.com>

	* gas/config/tc-arm.c (do_mla): Rename to do_mlas, take second
	is_mls parameter; do not diagnose Rm==Rd when is_mls.
	(do_mla, do_mls, five_bit_unsigned_immediate, bfci_lsb_and_width)
	(do_bfc, do_bfi, do_bfx, do_rbit, do_mov16, do_ldsttv4): New functions.
	(insns): Add ARMv6T2 instructions:
	bfc bfi mls movw movt rbit sbfx ubfx ldrht ldrsht ldrsbt strht.
	(arm_archs): Add V6T2 variants.

2005-03-12  Zack Weinberg  <zack@@codesourcery.com>

	* gas/config/tc-arm.c (tinsns): Add ARMv6K instructions sev, wfe,
	wfi, yield.

	* opcodes/arm-dis.c (thumb_opcodes): Add ARMv6K instructions nop, sev,
	wfe, wfi, yield.

	* gas/testsuite/gas/arm/thumbv6k.d, gas/arm/thumbv6k.s: New dump test.
	* gas/testsuite/gas/arm/arm.exp: Run it.

2005-03-12  Zack Weinberg  <zack@@codesourcery.com>

	* opcodes/arm-dis.c (arm_opcodes): Document %E and %V.
	Add entries for v6T2 ARM instructions:
	bfc bfi mls strht ldrht ldrsht ldrsbt movw movt rbit ubfx sbfx.
	(print_insn_arm): Add support for %E and %V.

	* include/opcode/arm.h: Adjust comments for ARM_EXT_V4T and ARM_EXT_V5T.
	Add ARM_EXT_V6T2, ARM_ARCH_V6T2, ARM_ARCH_V6KT2, ARM_ARCH_V6ZT2,
	and ARM_ARCH_V6ZKT2.
@


1.1.4.2
log
@	* elf32-arm.c (elf32_arm_check_relocs): Increment count for all
	relocation types.  Don't count relocations which will use a PLT.
@
text
@a0 5
2005-03-28  Daniel Jacobowitz  <dan@@codesourcery.com>

	* elf32-arm.c (elf32_arm_check_relocs): Increment count for all
	relocation types.  Don't count relocations which will use a PLT.

@


1.1.4.3
log
@	* bfd/bfd-in2.h, libbfd.h: Regenerated.
	* bfd/reloc.c: Add ARM TLS relocations.
	* bfd/elf32-arm.c (elf32_arm_howto_table): Add dynamic TLS
	relocations.
	(elf32_arm_tls_gd32_howto, elf32_arm_tls_ldo32_howto)
	(elf32_arm_tls_ldm32_howto, elf32_arm_tls_le32_howto)
	(elf32_arm_tls_ie32_howto): New.
	(elf32_arm_howto_from_type): Support TLS relocations.
	(elf32_arm_reloc_map): Likewise.
	(elf32_arm_reloc_type_lookup): Likewise.
	(TCB_SIZE): Define.
	(struct elf32_arm_obj_tdata): New.
	(elf32_arm_tdata, elf32_arm_local_got_tls_type): Define.
	(elf32_arm_mkobject): New function.
	(struct elf32_arm_relocs_copied): Add pc_count.
	(elf32_arm_hash_entry, GOT_UNKNOWN, GOT_NORMAL, GOT_TLS_GD)
	(GOT_TLS_IE): Define.
	(struct elf32_arm_link_hash_table): Add tls_ldm_got.
	(elf32_arm_link_hash_newfunc): Initialize tls_type.
	(elf32_arm_copy_indirect_symbol): Copy pc_count and tls_type.
	(elf32_arm_link_hash_table_create): Initialize tls_ldm_got.
	(dtpoff_base, tpoff): New functions.
	(elf32_arm_final_link_relocate): Handle TLS relocations.
	(IS_ARM_TLS_RELOC): Define.
	(elf32_arm_relocate_section): Warn about TLS mismatches.
	(elf32_arm_gc_sweep_hook): Handle TLS relocations and pc_count.
	(elf32_arm_check_relocs): Detect invalid symbol indexes.  Handle
	TLS relocations and pc_count.
	(elf32_arm_adjust_dynamic_symbol): Check non_got_ref.
	(allocate_dynrelocs): Handle TLS.  Bind REL32 relocs to local
	calls.
	(elf32_arm_size_dynamic_sections): Handle TLS.
	(elf32_arm_finish_dynamic_symbol): Likewise.
	(bfd_elf32_mkobject): Define.

	* gas/config/tc-arm.c (arm_parse_reloc): Add TLS relocations.
	(md_apply_fix3): Mark TLS symbols.
	(tc_gen_reloc): Handle TLS relocations.
	(arm_fix_adjustable): Ignore TLS relocations.
	(s_arm_elf_cons): Support expressions after decorated symbols.

	* gas/testsuite/gas/arm/tls.s, gas/testsuite/gas/arm/tls.d: New files.
	* gas/testsuite/gas/arm/arm.exp: Run TLS test.

	* include/elf/arm.h: Add TLS relocations.

	* ld/testsuite/ld-arm/tls-lib.s, ld/testsuite/ld-arm/tls-lib.d,
	ld/testsuite/ld-arm/tls-lib.r, ld/testsuite/ld-arm/tls-app.s,
	ld/testsuite/ld-arm/tls-app.d, ld/testsuite/ld-arm/tls-app.r: New files.
	* ld/testsuite/ld-arm/arm-lib.ld, ld/testsuite/ld-arm/arm-dyn.ld:
	Increase data segment alignment.
	* ld/testsuite/ld-arm/arm-elf.exp: Run TLS tests.
@
text
@a1 1
	    Phil Blundell  <philb@@gnu.org>
d3 1
a3 56
	* bfd/bfd-in2.h, libbfd.h: Regenerated.
	* bfd/reloc.c: Add ARM TLS relocations.
	* bfd/elf32-arm.c (elf32_arm_howto_table): Add dynamic TLS
	relocations.
	(elf32_arm_tls_gd32_howto, elf32_arm_tls_ldo32_howto)
	(elf32_arm_tls_ldm32_howto, elf32_arm_tls_le32_howto)
	(elf32_arm_tls_ie32_howto): New.
	(elf32_arm_howto_from_type): Support TLS relocations.
	(elf32_arm_reloc_map): Likewise.
	(elf32_arm_reloc_type_lookup): Likewise.
	(TCB_SIZE): Define.
	(struct elf32_arm_obj_tdata): New.
	(elf32_arm_tdata, elf32_arm_local_got_tls_type): Define.
	(elf32_arm_mkobject): New function.
	(struct elf32_arm_relocs_copied): Add pc_count.
	(elf32_arm_hash_entry, GOT_UNKNOWN, GOT_NORMAL, GOT_TLS_GD)
	(GOT_TLS_IE): Define.
	(struct elf32_arm_link_hash_table): Add tls_ldm_got.
	(elf32_arm_link_hash_newfunc): Initialize tls_type.
	(elf32_arm_copy_indirect_symbol): Copy pc_count and tls_type.
	(elf32_arm_link_hash_table_create): Initialize tls_ldm_got.
	(dtpoff_base, tpoff): New functions.
	(elf32_arm_final_link_relocate): Handle TLS relocations.
	(IS_ARM_TLS_RELOC): Define.
	(elf32_arm_relocate_section): Warn about TLS mismatches.
	(elf32_arm_gc_sweep_hook): Handle TLS relocations and pc_count.
	(elf32_arm_check_relocs): Detect invalid symbol indexes.  Handle
	TLS relocations and pc_count.
	(elf32_arm_adjust_dynamic_symbol): Check non_got_ref.
	(allocate_dynrelocs): Handle TLS.  Bind REL32 relocs to local
	calls.
	(elf32_arm_size_dynamic_sections): Handle TLS.
	(elf32_arm_finish_dynamic_symbol): Likewise.
	(bfd_elf32_mkobject): Define.

	* gas/config/tc-arm.c (arm_parse_reloc): Add TLS relocations.
	(md_apply_fix3): Mark TLS symbols.
	(tc_gen_reloc): Handle TLS relocations.
	(arm_fix_adjustable): Ignore TLS relocations.
	(s_arm_elf_cons): Support expressions after decorated symbols.

	* gas/testsuite/gas/arm/tls.s, gas/testsuite/gas/arm/tls.d: New files.
	* gas/testsuite/gas/arm/arm.exp: Run TLS test.

	* include/elf/arm.h: Add TLS relocations.

	* ld/testsuite/ld-arm/tls-lib.s, ld/testsuite/ld-arm/tls-lib.d,
	ld/testsuite/ld-arm/tls-lib.r, ld/testsuite/ld-arm/tls-app.s,
	ld/testsuite/ld-arm/tls-app.d, ld/testsuite/ld-arm/tls-app.r: New files.
	* ld/testsuite/ld-arm/arm-lib.ld, ld/testsuite/ld-arm/arm-dyn.ld:
	Increase data segment alignment.
	* ld/testsuite/ld-arm/arm-elf.exp: Run TLS tests.

2005-03-28  Daniel Jacobowitz  <dan@@codesourcery.com>

	* bfd/elf32-arm.c (elf32_arm_check_relocs): Increment count for all
@


1.1.4.4
log
@2005-03-29  Julian Brown  <julian@@codesourcery.com>

	* elf32-arm.c (elf32_arm_final_link_relocate): Use blx to get to
	symbian plt entries from thumb mode.
@
text
@a0 5
2005-03-29  Julian Brown  <julian@@codesourcery.com>

	* elf32-arm.c (elf32_arm_final_link_relocate): Use blx to get to
	symbian plt entries from thumb mode.

@


1.1.4.5
log
@2005-04-08  Paul Brook  <paul@@codesourcery.com>

	* elf32-arm.c (ARM2THUMB_GLUE_SIZE): Rename...
	(ARM2THUMB_STATIC_GLUE_SIZE): ... to this.
	(ARM2THUMB_PIC_GLUE_SIZE): Define.
	(a2t1p_ldr_insn, a2t2p_add_pc_insn, a2t3p_bx_r12_insn): Add.
	(elf32_arm_to_thumb_stub): Create PIC stubs.
	(record_arm_to_thumb_glue): Use different stub size for relocatable
	images.
@
text
@a0 10
2005-04-08  Paul Brook  <paul@@codesourcery.com>

	* elf32-arm.c (ARM2THUMB_GLUE_SIZE): Rename...
	(ARM2THUMB_STATIC_GLUE_SIZE): ... to this.
	(ARM2THUMB_PIC_GLUE_SIZE): Define.
	(a2t1p_ldr_insn, a2t2p_add_pc_insn, a2t3p_bx_r12_insn): Add.
	(elf32_arm_to_thumb_stub): Create PIC stubs.
	(record_arm_to_thumb_glue): Use different stub size for relocatable
	images.

@


1.1.4.6
log
@	* ld/configure.tgt (arm-wrs-linux-gnueabi*): Support both big- and
	little-endian.
@
text
@a0 5
2005-04-08  Mark Mitchell <mark@@codesourcery.com>

	* ld/configure.tgt (arm-wrs-linux-gnueabi*): Support both big- and
	little-endian.
	
@


1.1.4.7
log
@2005-04-13  Paul Brook  <paul@@codesourcery.com>

	Backport from mainline.
	2005-04-11  Alan Modra  <amodra@@bigpond.net.au>
	* emultempl/elf32.em (gld${EMULATION_NAME}_stat_needed): Ignore
	as_needed libs that were not needed.
	(gld${EMULATION_NAME}_check_needed): Likewise.
@
text
@a0 8
2005-04-13  Paul Brook  <paul@@codesourcery.com>

	Backport from mainline.
	2005-04-11  Alan Modra  <amodra@@bigpond.net.au>
	* emultempl/elf32.em (gld${EMULATION_NAME}_stat_needed): Ignore
	as_needed libs that were not needed.
	(gld${EMULATION_NAME}_check_needed): Likewise.

@


1.1.4.8
log
@	Thumb32 assembler.

	* include/elf/arm.h: Import full set of relocation names from
	latest AAELF.  Make the primary name of all relocations be the one
	AAELF specifies.  Provide aliases under the traditional names.
	Kill FIRST_INVALID_RELOC_* and LAST_INVALID_RELOC_*.
	* bfd/reloc.c: Reorganize ARM relocations.  Remove ARM relocations
	that are never generated.  Document more of the relocations.  Add
	relocations for Thumb32.
	* bfd/libbfd.h, bfd/bfd-in2.h: Regenerate.
	* bfd/elf32-arm.c: Reorganize howto tables.  Implement Thumb32
	relocations.
	* ld/testsuite/ld-arm/mixed-app.d: Adjust expectations for
	renamed relocations.

	* gas/hash.c (hash_find_n): New interface.
	* gas/hash.h: Prototype it.

	* gas/config/tc-arm.c: Rewrite and reorganize.  Implement 32-bit
	Thumb instructions.
	* gas/testsuite/gas/arm: Convert all "gas_test" style tests to
	"run_dump_test" style tests, for more thorough testing.  Make
	adjustments to expectations where necessary.
	* gas/testsuite/gas/arm/t16-bad.s, gas/testsuite/gas/arm/tcompat.s
	* gas/testsuite/gas/arm/tcompat2.s, gas/testsuite/gas/arm/thumb32.s:
	New test cases.

	* opcodes/arm-dis.c: Add support for Thumb32 instructions and
	16-bit V6T2 instructions.
@
text
@a0 33
2005-04-25  Zack Weinberg  <zack@@codesourcery.com>

	Thumb32 assembler.

	* include/elf/arm.h: Import full set of relocation names from
	latest AAELF.  Make the primary name of all relocations be the one
	AAELF specifies.  Provide aliases under the traditional names.
	Kill FIRST_INVALID_RELOC_* and LAST_INVALID_RELOC_*.
	* bfd/reloc.c: Reorganize ARM relocations.  Remove ARM relocations
	that are never generated.  Document more of the relocations.  Add
	relocations for Thumb32.
	* bfd/libbfd.h, bfd/bfd-in2.h: Regenerate.
	* bfd/elf32-arm.c: Reorganize howto tables.  Implement Thumb32
	relocations.
	* ld/testsuite/ld-arm/mixed-app.d: Adjust expectations for
	renamed relocations.

	* gas/hash.c (hash_find_n): New interface.
	* gas/hash.h: Prototype it.

	* gas/config/tc-arm.c: Rewrite and reorganize.  Implement 32-bit
	Thumb instructions.
	* gas/testsuite/gas/arm: Convert all "gas_test" style tests to
	"run_dump_test" style tests, for more thorough testing.  Make
	adjustments to expectations where necessary.
	* gas/testsuite/gas/arm/t16-bad.s, gas/testsuite/gas/arm/tcompat.s
	* gas/testsuite/gas/arm/tcompat2.s, gas/testsuite/gas/arm/thumb32.s:
	New test cases.

	* opcodes/arm-dis.c: Add support for Thumb32 instructions and
	16-bit V6T2 instructions.


d13 1
a13 1

@


1.1.4.9
log
@	* gas/sb.c: Include as.h.
	(sb_to_scrub, scrub_position, scrub_from_sb): New statics.
	(sb_scrub_and_add_sb): New interface.
	* gas/sb.h: Declare sb_scrub_and_add_sb.
	* gas/input-scrub.c (input_scrub_include_sb): Use it.

	* gas/config/tc-arm.c (do_t_arit3c): Correct typo in expression.
	(do_t_mul): Allow dest to equal either source1 or source2 in
	16-bit form; do not complain about dest == source1 in any
	case.

	* gas/testsuite/gas/arm/tcompat2.s: Test both dest==source1 and
	dest==source2 for commutative arithmetic instructions.
	* gas/testsuite/gas/arm/tcompat2.d: Update to match.
	* gas/testsuite/gas/arm/t16-bad.l: Adjust expected diagnostic.
	* gas/testsuite/gas/arm/macro1.s, gas/arm/macro1.d: New test pair.
	* gas/testsuite/gas/arm/arm.exp: Run it.
@
text
@a0 20
2005-04-29  Zack Weinberg  <zack@@codesourcery.com>

	* gas/sb.c: Include as.h.
	(sb_to_scrub, scrub_position, scrub_from_sb): New statics.
	(sb_scrub_and_add_sb): New interface.
	* gas/sb.h: Declare sb_scrub_and_add_sb.
	* gas/input-scrub.c (input_scrub_include_sb): Use it.

	* gas/config/tc-arm.c (do_t_arit3c): Correct typo in expression.
	(do_t_mul): Allow dest to equal either source1 or source2 in
	16-bit form; do not complain about dest == source1 in any
	case.

	* gas/testsuite/gas/arm/tcompat2.s: Test both dest==source1 and
	dest==source2 for commutative arithmetic instructions.
	* gas/testsuite/gas/arm/tcompat2.d: Update to match.
	* gas/testsuite/gas/arm/t16-bad.l: Adjust expected diagnostic.
	* gas/testsuite/gas/arm/macro1.s, gas/arm/macro1.d: New test pair.
	* gas/testsuite/gas/arm/arm.exp: Run it.

@


1.1.4.10
log
@2005-05-01  Zack Weinberg  <zack@@codesourcery.com>

	* gas/config/tc-arm.c (encode_thumb32_addr_mode): Set inst.reloc.pc_rel
	if is_pc.
	(T16_32_TAB): Delete unused entry for BLX.
	(do_t_ldst): Don't offset inst.reloc.exp.X_add_number for PC-relative
	addressing.
	(md_pcrel_from): Report the adjusted PC for
	BFD_RELOC_ARM_THUMB_OFFSET and BFD_RELOC_ARM_T32_OFFSET_IMM.
	(md_apply_fix3): Correct bitmasks for BFD_RELOC_ARM_T32_OFFSET_IMM.
	Do not round up value for PC-relative BFD_RELOC_ARM_THUMB_OFFSET.

	* gas/testsuite/gas/arm/thumb.s: Test PC-relative ldr more thoroughly.
	* gas/testsuite/gas/arm/thumb.d: Update to match.

	* gas/testsuite/gas/arm/thumb32.s: Properly align labels that
	will be targeted by blx instructions.
	* gas/testsuite/gas/arm/thumb32.d: Update to match.  Correct
	expected dissassembly of PC-relative ldr.

	* gas/testsuite/gas/arm/macro1.s: Add leading label and
	trailing padding for a.out compatibility.
	* gas/testsuite/gas/arm/macro1.d: Update to match.
	* gas/testsuite/gas/arm/tcompat2.s: Add trailing padding for a.out
	compatibility.
	* gas/testsuite/gas/arm/tcompat2.d: Update to match.

	* opcodes/arm-dis.c (print_insn_thumb32): Reorganize %a and %A
	handling.  Call info->print_address_func when %a/%A are applied
	to a PC-relative instruction.
@
text
@a0 31
2005-05-01  Zack Weinberg  <zack@@codesourcery.com>

	* gas/config/tc-arm.c (encode_thumb32_addr_mode): Set inst.reloc.pc_rel
	if is_pc.
	(T16_32_TAB): Delete unused entry for BLX.
	(do_t_ldst): Don't offset inst.reloc.exp.X_add_number for PC-relative
	addressing.
	(md_pcrel_from): Report the adjusted PC for
	BFD_RELOC_ARM_THUMB_OFFSET and BFD_RELOC_ARM_T32_OFFSET_IMM.
	(md_apply_fix3): Correct bitmasks for BFD_RELOC_ARM_T32_OFFSET_IMM.
	Do not round up value for PC-relative BFD_RELOC_ARM_THUMB_OFFSET.

	* gas/testsuite/gas/arm/thumb.s: Test PC-relative ldr more thoroughly.
	* gas/testsuite/gas/arm/thumb.d: Update to match.

	* gas/testsuite/gas/arm/thumb32.s: Properly align labels that
	will be targeted by blx instructions.
	* gas/testsuite/gas/arm/thumb32.d: Update to match.  Correct
	expected dissassembly of PC-relative ldr.

	* gas/testsuite/gas/arm/macro1.s: Add leading label and
	trailing padding for a.out compatibility.
	* gas/testsuite/gas/arm/macro1.d: Update to match.
	* gas/testsuite/gas/arm/tcompat2.s: Add trailing padding for a.out
	compatibility.
	* gas/testsuite/gas/arm/tcompat2.d: Update to match.

	* opcodes/arm-dis.c (print_insn_thumb32): Reorganize %a and %A
	handling.  Call info->print_address_func when %a/%A are applied 
	to a PC-relative instruction.

@


1.1.4.11
log
@2005-05-01  Zack Weinberg  <zack@@codesourcery.com>

	* gas/config/tc-arm.c (thumb32_mode): Rename unified_syntax.
	All uses changed to match.
	(COND_ALWAYS): Don't offset.
	(COND_MASK): Delete.
	(struct arm_it): Add cond field.
	(struct asm_opcode): Add tag field.  Change some fields to
	unsigned int and/or to bitfields.
	(my_get_expression): If unified_syntax, always treat the
	prefix as optional.
	(s_thumb32, s_thumb32_func): Delete.
	(opcode_select, s_force_thumb): Don't set thumb32_mode.
	(s_syntax): New function.
	(md_pseudo_table): Update to match.
	(do_blx, do_iwmmxt_wldstw): Look at inst.cond, not
	inst.instruction, for the condition.
	(do_it): New function.
	(do_t_branch): Get the condition from inst.cond and patch it
	into the appropriate place.
	(output_inst): If inst.size == 0, output nothing, but do issue
	a diagnostic if any.
	(enum opcode_tag): New set of constants.
	(opcode_lookup): New function.
	(md_assemble): Use opcode_lookup.  Restructure a little.
	(conds, OPS0): Adjust comment.
	(TxCE, TxCM, TUE, TUF): Rewrite.
	(TCC): Delete.
	(TxC3, TC3, tC3, TxCM_, C3, C3E): New notational macros.

	(insns): Use TC3, tC3, or C3, as appropriate, for all
	instructions where the conditional infix appears after the
	third letter of the mnemonic.  Use TCE for 'b'.  Use C3E for
	'cmfe' and 'cnfe'.  Change 'czbne' to 'cbnz', 'czbeq' to 'cbz'.
	Use TUE, with a dummy ARM opcode, for all variants of 'it'.

	* opcodes/arm-dis.c: Change 'czbne' to 'cbnz', 'czbeq' to 'cbz'.

	* gas/testsuite/gas/arm/thumb.d: bal.n is no longer
	distinguishable from b.n.
	* gas/testsuite/gas/arm/thumb32.d: Likewise.  Change 'czbne'
	to 'cbnz', 'czbeq' to 'cbz'.
	* gas/testsuite/gas/arm/thumb32.s: Use .syntax unified.
	Change 'czbne' to 'cbnz', 'czbeq' to 'cbz'.
@
text
@a2 45
	* gas/config/tc-arm.c (thumb32_mode): Rename unified_syntax.
	All uses changed to match.
	(COND_ALWAYS): Don't offset.
	(COND_MASK): Delete.
	(struct arm_it): Add cond field.
	(struct asm_opcode): Add tag field.  Change some fields to
	unsigned int and/or to bitfields.
	(my_get_expression): If unified_syntax, always treat the
	prefix as optional.
	(s_thumb32, s_thumb32_func): Delete.
	(opcode_select, s_force_thumb): Don't set thumb32_mode.
	(s_syntax): New function.
	(md_pseudo_table): Update to match.
	(do_blx, do_iwmmxt_wldstw): Look at inst.cond, not
	inst.instruction, for the condition.  
	(do_it): New function.
	(do_t_branch): Get the condition from inst.cond and patch it
	into the appropriate place.
	(output_inst): If inst.size == 0, output nothing, but do issue
	a diagnostic if any.
	(enum opcode_tag): New set of constants.
	(opcode_lookup): New function.
	(md_assemble): Use opcode_lookup.  Restructure a little.
	(conds, OPS0): Adjust comment.
	(TxCE, TxCM, TUE, TUF): Rewrite.
	(TCC): Delete.
	(TxC3, TC3, tC3, TxCM_, C3, C3E): New notational macros.

	(insns): Use TC3, tC3, or C3, as appropriate, for all
	instructions where the conditional infix appears after the
	third letter of the mnemonic.  Use TCE for 'b'.  Use C3E for
	'cmfe' and 'cnfe'.  Change 'czbne' to 'cbnz', 'czbeq' to 'cbz'.
	Use TUE, with a dummy ARM opcode, for all variants of 'it'.

	* opcodes/arm-dis.c: Change 'czbne' to 'cbnz', 'czbeq' to 'cbz'.

	* gas/testsuite/gas/arm/thumb.d: bal.n is no longer
	distinguishable from b.n.
	* gas/testsuite/gas/arm/thumb32.d: Likewise.  Change 'czbne'
	to 'cbnz', 'czbeq' to 'cbz'.
	* gas/testsuite/gas/arm/thumb32.s: Use .syntax unified.
	Change 'czbne' to 'cbnz', 'czbeq' to 'cbz'.

2005-05-01  Zack Weinberg  <zack@@codesourcery.com>

@


1.1.4.12
log
@2005-05-01  Paul Brook  <paul@@codesourcery.com>

	* bfd/elf32-arm.c (bfd_elf32_arm_process_before_allocation): Treat
	R_ARM_PLT32 the same as R_ARM_PC24.
	(arm_add_to_rel): Ditto.
@
text
@a0 6
2005-05-01  Paul Brook  <paul@@codesourcery.com>

	* bfd/elf32-arm.c (bfd_elf32_arm_process_before_allocation): Treat
	R_ARM_PLT32 the same as R_ARM_PC24.
	(arm_add_to_rel): Ditto.

@


1.1.4.13
log
@2005-05-01  Paul Brook  <paul@@codesourcery.com>

	* bfd/elflink.c (_bfd_elf_merge_symbol): Skip weak definitions if a
	strong definition has already been seen.
@
text
@a2 5
	* bfd/elflink.c (_bfd_elf_merge_symbol): Skip weak definitions if a
	strong definition has already been seen.

2005-05-01  Paul Brook  <paul@@codesourcery.com>

@


1.1.4.14
log
@	* doc/binutils.info: Remove.
@
text
@a0 4
2005-04-13  Mark Mitchell <mark@@codesourcery.com>

	* doc/binutils.info: Remove.

@


1.1.4.15
log
@	Backport:
	2005-08-02  Khem Raj  <kraj@@mvista.com>

	* config/tc-arm.c (do_iwmmxt_wldstd): Correct the offset range for
	WLDRD/WSTRD instruction.

	2005-08-03  Nick Clifton  <nickc@@redhat.com>

	* gas/arm/iwmmxt-bad2.s: New file: Check for error messages about
	erroneous offsets in iwmmxt instructions.  Cannot be part of
	iwmmxt-bad.s because the errors there stop the assembler before it
	gets to check the offsets in instructions.
	* gas/arm/iwmmxt-bad2.d: New file.
	* gas/arm/iwmmxt-bad2.l: New file: Expected error messages.

	2005-08-02  Khem Raj  <kraj@@mvista.com>

	* gas/arm/iwmmxt.s: Change the offset values of the WLDRD, WSTRD
	and WSTRW instructions to be larger than +/-255.
	* gas/arm/iwmmxt.d: Fix the expected results for these
	instructions.
@
text
@a0 24
2006-01-16  Joseph Myers  <joseph@@codesourcery.com>

	Backport:
	2005-08-02  Khem Raj  <kraj@@mvista.com>

	* config/tc-arm.c (do_iwmmxt_wldstd): Correct the offset range for
	WLDRD/WSTRD instruction.

	2005-08-03  Nick Clifton  <nickc@@redhat.com>

	* gas/arm/iwmmxt-bad2.s: New file: Check for error messages about
	erroneous offsets in iwmmxt instructions.  Cannot be part of
	iwmmxt-bad.s because the errors there stop the assembler before it
	gets to check the offsets in instructions.
	* gas/arm/iwmmxt-bad2.d: New file.
	* gas/arm/iwmmxt-bad2.l: New file: Expected error messages.

	2005-08-02  Khem Raj  <kraj@@mvista.com>

	* gas/arm/iwmmxt.s: Change the offset values of the WLDRD, WSTRD
	and WSTRW instructions to be larger than +/-255.
	* gas/arm/iwmmxt.d: Fix the expected results for these
	instructions.

@


1.1.4.16
log
@	* gas/config/tc-arm.c (do_iwmmxt_wldstbh): Don't multiply offset
	by 4 here.
	(md_apply_fix3): Multiply offset by 4 here for
	BFD_RELOC_ARM_CP_OFF_IMM_S2.
	* gas/testsuite/gas/arm/arm.exp: Run iwmmxt-bad2.
	* gas/testsuite/gas/arm/iwmmxt.s: Increase offsets for wstrb and
	wstrh.
	* gas/testsuite/gas/arm/iwmmxt.d: Update expected results.
	* gas/testsuite/gas/arm/iwmmxt-bad2.s: Test wstrb, wstrh, wldrb
	and wldrh.
	* gas/testsuite/gas/arm/iwmmxt-bad2.l: Update expected error
	messages.
@
text
@a0 15
2006-04-28  Joseph Myers  <joseph@@codesourcery.com>

	* gas/config/tc-arm.c (do_iwmmxt_wldstbh): Don't multiply offset
	by 4 here.
	(md_apply_fix3): Multiply offset by 4 here for
	BFD_RELOC_ARM_CP_OFF_IMM_S2.
	* gas/testsuite/gas/arm/arm.exp: Run iwmmxt-bad2.
	* gas/testsuite/gas/arm/iwmmxt.s: Increase offsets for wstrb and
	wstrh.
	* gas/testsuite/gas/arm/iwmmxt.d: Update expected results.
	* gas/testsuite/gas/arm/iwmmxt-bad2.s: Test wstrb, wstrh, wldrb
	and wldrh.
	* gas/testsuite/gas/arm/iwmmxt-bad2.l: Update expected error
	messages.

@


1.1.4.17
log
@	* gas/doc/c-arc.texi: Fix typo.
@
text
@a0 4
2006-06-02  Joseph Myers  <joseph@@codesourcery.com>

	* gas/doc/c-arc.texi: Fix typo.

@


1.1.2.1
log
@	* gdb/elfread.c (elf_symtab_read): Skip symbols which BFD considers
	special.
@
text
@a0 10
2005-03-25  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/elfread.c (elf_symtab_read): Skip symbols which BFD considers
	special.

2005-03-25  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/testsuite/lib/mi-support.exp (mi_gdb_load): Use /tmp for
	gdbserver downloads.
	* gdb/testsuite/config/gdbserver.exp (gdb_load): Likewise.
@


1.1.2.2
log
@	* gdb/Makefile.in (arm-tdep.o): Update dependencies.
	* gdb/arm-tdep.c: Include "objfiles.h" and "dwarf2-frame.h".
	(arm_gdbarch_init): Register dwarf2_frame_sniffer.
@
text
@a2 6
	* gdb/Makefile.in (arm-tdep.o): Update dependencies.
	* gdb/arm-tdep.c: Include "objfiles.h" and "dwarf2-frame.h".
	(arm_gdbarch_init): Register dwarf2_frame_sniffer.

2005-03-25  Daniel Jacobowitz  <dan@@codesourcery.com>

@


1.1.2.3
log
@	* gdb/arm-linux-tdep.c (arm_linux_thumb_be_breakpoint)
	(arm_linux_thumb_le_breakpoint): New.  Update comments.
	(arm_linux_init_abi): Set Thumb breakpoints also.
@
text
@a2 6
	* gdb/arm-linux-tdep.c (arm_linux_thumb_be_breakpoint)
	(arm_linux_thumb_le_breakpoint): New.  Update comments.
	(arm_linux_init_abi): Set Thumb breakpoints also.

2005-03-25  Daniel Jacobowitz  <dan@@codesourcery.com>

@


1.1.2.4
log
@	* gdb/arm-tdep.c (target_is_thumb, caller_is_thumb)
	(arm_pc_is_thumb_dummy): Remove.
	(arm_breakpoint_from_pc): Don't call arm_pc_is_thumb_dummy.
@
text
@a2 6
	* gdb/arm-tdep.c (target_is_thumb, caller_is_thumb)
	(arm_pc_is_thumb_dummy): Remove.
	(arm_breakpoint_from_pc): Don't call arm_pc_is_thumb_dummy.

2005-03-25  Daniel Jacobowitz  <dan@@codesourcery.com>

@


1.1.2.5
log
@	* gdb/arm-linux-nat.c (store_register, store_regs): Handle
	ARM_PS_REGNUM.
@
text
@a2 5
	* gdb/arm-linux-nat.c (store_register, store_regs): Handle
	ARM_PS_REGNUM.

2005-03-25  Daniel Jacobowitz  <dan@@codesourcery.com>

@


1.1.2.6
log
@	* gdb/configure.tgt: Add default OSABI setting for
	arm*-*-linux-gnueabi.
	* gdb/arm-tdep.c (arm_type_align): New function.
	(arm_push_dummy_call): Use it.  Ensure proper argument alignment.
	Don't try to align the stack.
	(arm_frame_align): New function.
	(arm_extract_struct_value_address): Remove.
	(arm_use_struct_convention): Rename...
	(arm_return_in_memory): ... To this.  Return nonzero for all small
	aggregates under the EABI.
	(arm_return_value): New function.
	(arm_elf_osabi_sniffer): Add EF_ARM_EABI_VER4 case.  Handle
	GDB_OSABI_ARM_EABI_V4_LINUX.
	(arm_gdbarch_init): Set different FPU and ABI defaults for EABI
	objects.  Use set_gdbarch_return_value instead of obsolete functions.
	Call set_gdbarch_frame_align.
	(arm_init_abi_eabi_v4): New function.
	(_initialize_arm_tdep): Register GDB_OSABI_ARM_EABI_V4.
	* gdb/arm-linux-tdep.c (ARM_LINUX_EABI_JB_PC): Define.
	(arm_linux_eabi_init_abi): New function.
	(_initialize_arm_linux_tdep): Register GDB_OSABI_ARM_EABI_V4_LINUX.
	* gdb/arm-tdep.h (enum arm_abi_variant): New.
	(struct gdbarch_tdep): Add abi field.
	* gdb/defs.h (enum gdb_osabi): Add GDB_OSABI_ARM_EABI_V4 and
	GDB_OSABI_ARM_EABI_V4_LINUX.
	* gdb/osabi.c (gdb_osabi_name): Add "ARM EABI v4" and
	"ARM EABI v4 GNU/Linux".

	* gdb/testsuite/gdb.base/long_long.exp: Don't expect FPA format for
	ARM EABI targets.
@
text
@a0 34
2005-03-25  Paul Brook  <paul@@codesourcery.com>
	    Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/configure.tgt: Add default OSABI setting for
	arm*-*-linux-gnueabi.
	* gdb/arm-tdep.c (arm_type_align): New function.
	(arm_push_dummy_call): Use it.  Ensure proper argument alignment.
	Don't try to align the stack.
	(arm_frame_align): New function.
	(arm_extract_struct_value_address): Remove.
	(arm_use_struct_convention): Rename...
	(arm_return_in_memory): ... To this.  Return nonzero for all small
	aggregates under the EABI.
	(arm_return_value): New function.
	(arm_elf_osabi_sniffer): Add EF_ARM_EABI_VER4 case.  Handle
	GDB_OSABI_ARM_EABI_V4_LINUX.
	(arm_gdbarch_init): Set different FPU and ABI defaults for EABI
	objects.  Use set_gdbarch_return_value instead of obsolete functions.
	Call set_gdbarch_frame_align.
	(arm_init_abi_eabi_v4): New function.
	(_initialize_arm_tdep): Register GDB_OSABI_ARM_EABI_V4.
	* gdb/arm-linux-tdep.c (ARM_LINUX_EABI_JB_PC): Define.
	(arm_linux_eabi_init_abi): New function.
	(_initialize_arm_linux_tdep): Register GDB_OSABI_ARM_EABI_V4_LINUX.
	* gdb/arm-tdep.h (enum arm_abi_variant): New.
	(struct gdbarch_tdep): Add abi field.
	* gdb/defs.h (enum gdb_osabi): Add GDB_OSABI_ARM_EABI_V4 and
	GDB_OSABI_ARM_EABI_V4_LINUX.
	* gdb/osabi.c (gdb_osabi_name): Add "ARM EABI v4" and
	"ARM EABI v4 GNU/Linux".

	* gdb/testsuite/gdb.base/long_long.exp: Don't expect FPA format for
	ARM EABI targets.

@


1.1.2.7
log
@	* gdb/Makefile.in (arm-linux-nat.o): Update dependencies.
	* gdb/arm-linux-nat.c: Include "gdb_proc_service.h".
	(PTRACE_GET_THREAD_AREA): Define.
	(ps_get_thread_area): New function.

	* gdb/gdbserver/Makefile.in (linux-arm-low.o): Update dependencies.
	* gdb/gdbserver/linux-arm-low.c: Include "../gdb_proc_service.h".
	(PTRACE_GET_THREAD_AREA): Define.
	(ps_get_thread_area): New function.
@
text
@a0 12
2005-03-25  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/Makefile.in (arm-linux-nat.o): Update dependencies.
	* gdb/arm-linux-nat.c: Include "gdb_proc_service.h".
	(PTRACE_GET_THREAD_AREA): Define.
	(ps_get_thread_area): New function.

	* gdb/gdbserver/Makefile.in (linux-arm-low.o): Update dependencies.
	* gdb/gdbserver/linux-arm-low.c: Include "../gdb_proc_service.h".
	(PTRACE_GET_THREAD_AREA): Define.
	(ps_get_thread_area): New function.

@


1.1.2.8
log
@	Backport from mainline.
	2005-03-22  Mark Mitchell  <mark@@codesourcery.com>
	* Makefile.in (SFILES): Add ser-base.c.
	(ser_base_h): New variable.
	(ser-base.o): New target.
	(ser-pipe.o): Depend on $(ser_base_h).
	(ser-tcp.o): Likewise.
	(ser-unix.o): Likewise.  Do not depend on $(event_loop_h).
	* configure.ac (SER_HARDWIRE): Include ser-base.o where
	appropriate.
	* ser-base.c: New file.
	(push_event): Move from ser-unix.c.
	(fd_event): Likewise.
	(reschedule): Likewise.
	(ser_unix_write): Likewise.
	(ser_unix_nop_flush_output): Likewise.
	(ser_unix_flush_input): Likewise.
	(ser_unix_nop_send_break): Likewise.
	(ser_unix_nop_drain_output): Likewise.
	(ser_unix_nop_raw): Likewise.
	(ser_unix_nop_get_tty_state): Likewise.
	(ser_unix_nop_set_tty_state): Likewise.
	(ser_unix_nop_noflush_set_tty_state): Likewise.
	(ser_unix_nop_print_tty_state): Likewise.
	(ser_unix_nop_setbaudrate): Likewise.
	(ser_unix_nop_setstopbits): Likewise.
	(ser_unix_async): Likewise.
	* ser-base.h: New file.
	* ser-pipe.c (ser-base.h): Include it.
	* ser-tcp.c (ser-base.h): Likewise.
	* ser-unix.h (ser_unix_nop_flush_output): Remove.
	(ser_unix_flush_input): Likewise.
	(ser_unix_nop_send_break): Likewise.
	(ser_unix_nop_raw): Likewise.
	(ser_unix_nop_get_tty_state): Likewise.
	(ser_unix_nop_set_tty_state): Likewise.
	(ser_unix_nop_print_tty_state): Likewise.
	(ser_unix_nop_noflush_set_tty_state): Likewise.
	(ser_unix_nop_setbaudrate): Likewise.
	(ser_unix_nop_setstopbits): Likewise.
	(ser_unix_nop_drain_output): Likewise.
	(ser_unix_wait_for): Likewise.
	(ser_unix_write): Likewise.
	(ser_unix_async): Likewise.
	* ser-unix.c (event-loop.h): Do not include it.
	(push_event): Move to ser-base.c.
	(fd_event): Likewise.
	(reschedule): Likewise.
	(ser_unix_write): Likewise.
	(ser_unix_nop_flush_output): Likewise.
	(ser_unix_flush_input): Likewise.
	(ser_unix_nop_send_break): Likewise.
	(ser_unix_nop_drain_output): Likewise.
	(ser_unix_nop_raw): Likewise.
	(ser_unix_nop_get_tty_state): Likewise.
	(ser_unix_nop_set_tty_state): Likewise.
	(ser_unix_nop_noflush_set_tty_state): Likewise.
	(ser_unix_nop_print_tty_state): Likewise.
	(ser_unix_nop_setbaudrate): Likewise.
	(ser_unix_nop_setstopbits): Likewise.
	(ser_unix_async): Likewise.
	(ser_unix_wait_for): Make it static.
@
text
@a0 65
2005-03-28  Mark Mitchell  <mark@@codesourcery.com>

	Backport from mainline.
	2005-03-22  Mark Mitchell  <mark@@codesourcery.com>
	* Makefile.in (SFILES): Add ser-base.c.
	(ser_base_h): New variable.
	(ser-base.o): New target.
	(ser-pipe.o): Depend on $(ser_base_h).
	(ser-tcp.o): Likewise.
	(ser-unix.o): Likewise.  Do not depend on $(event_loop_h).
	* configure.ac (SER_HARDWIRE): Include ser-base.o where
	appropriate.
	* ser-base.c: New file.
	(push_event): Move from ser-unix.c.
	(fd_event): Likewise.
	(reschedule): Likewise.
	(ser_unix_write): Likewise.
	(ser_unix_nop_flush_output): Likewise.
	(ser_unix_flush_input): Likewise.
	(ser_unix_nop_send_break): Likewise.
	(ser_unix_nop_drain_output): Likewise.
	(ser_unix_nop_raw): Likewise.
	(ser_unix_nop_get_tty_state): Likewise.
	(ser_unix_nop_set_tty_state): Likewise.
	(ser_unix_nop_noflush_set_tty_state): Likewise.
	(ser_unix_nop_print_tty_state): Likewise.
	(ser_unix_nop_setbaudrate): Likewise.
	(ser_unix_nop_setstopbits): Likewise.
	(ser_unix_async): Likewise.
	* ser-base.h: New file.
	* ser-pipe.c (ser-base.h): Include it.
	* ser-tcp.c (ser-base.h): Likewise.
	* ser-unix.h (ser_unix_nop_flush_output): Remove.
	(ser_unix_flush_input): Likewise.
	(ser_unix_nop_send_break): Likewise.
	(ser_unix_nop_raw): Likewise.
	(ser_unix_nop_get_tty_state): Likewise.
	(ser_unix_nop_set_tty_state): Likewise.
	(ser_unix_nop_print_tty_state): Likewise.
	(ser_unix_nop_noflush_set_tty_state): Likewise.
	(ser_unix_nop_setbaudrate): Likewise.
	(ser_unix_nop_setstopbits): Likewise.
	(ser_unix_nop_drain_output): Likewise.
	(ser_unix_wait_for): Likewise.
	(ser_unix_write): Likewise.
	(ser_unix_async): Likewise.
	* ser-unix.c (event-loop.h): Do not include it.
	(push_event): Move to ser-base.c.
	(fd_event): Likewise.
	(reschedule): Likewise.
	(ser_unix_write): Likewise.
	(ser_unix_nop_flush_output): Likewise.
	(ser_unix_flush_input): Likewise.
	(ser_unix_nop_send_break): Likewise.
	(ser_unix_nop_drain_output): Likewise.
	(ser_unix_nop_raw): Likewise.
	(ser_unix_nop_get_tty_state): Likewise.
	(ser_unix_nop_set_tty_state): Likewise.
	(ser_unix_nop_noflush_set_tty_state): Likewise.
	(ser_unix_nop_print_tty_state): Likewise.
	(ser_unix_nop_setbaudrate): Likewise.
	(ser_unix_nop_setstopbits): Likewise.
	(ser_unix_async): Likewise.
	(ser_unix_wait_for): Make it static.

@


1.1.2.9
log
@	Backport from mainline:
        2005-03-25  Mark Mitchell  <mark@@codesourcery.com>
	* ser-base.c (ser_unix_write): Rename to ...
	(ser_base_write): ... this.
	(ser_unix_nop_flush_output): Rename to ...
	(ser_base_flush_output): ... this.
	(ser_unix_flush_input): Rename to ...
	(ser_base_flush_input): ... this.
	(ser_unix_nop_send_break): Rename to ...
	(ser_base_send_break): ... this.
	(ser_unix_nop_drain_output): Rename to ...
	(ser_base_drain_output): ... this.
	(ser_unix_nop_raw): Rename to ...
	(ser_base_raw): ... this.
	(ser_unix_nop_get_tty_state): Rename to ...
	(ser_base_set_tty_state): ... this.
	(ser_unix_nop_noflush_set_tty_state): Rename to ...
	(ser_base_noflush_set_tty_state): ... this.
	(ser_unix_nop_print_tty_state): Rename to ...
	(ser_base_print_tty_state): ... this.
	(ser_unix_nop_setbaudrate): Rename to ...
	(ser_base_setbaudrate): ... this.
	(ser_unix_nop_setstopbits): Rename to ...
	(ser_base_setstopbits): ... this.
	(ser_unix_async): Rename to ...
	(ser_base_async): ... this.
	* ser-base.h (ser_unix_write): Rename to ...
	(ser_base_write): ... this.
	(ser_unix_nop_flush_output): Rename to ...
	(ser_base_flush_output): ... this.
	(ser_unix_flush_input): Rename to ...
	(ser_base_flush_input): ... this.
	(ser_unix_nop_send_break): Rename to ...
	(ser_base_send_break): ... this.
	(ser_unix_nop_drain_output): Rename to ...
	(ser_base_drain_output): ... this.
	(ser_unix_nop_raw): Rename to ...
	(ser_base_raw): ... this.
	(ser_unix_nop_get_tty_state): Rename to ...
	(ser_base_set_tty_state): ... this.
	(ser_unix_nop_noflush_set_tty_state): Rename to ...
	(ser_base_noflush_set_tty_state): ... this.
	(ser_unix_nop_print_tty_state): Rename to ...
	(ser_base_print_tty_state): ... this.
	(ser_unix_nop_setbaudrate): Rename to ...
	(ser_base_setbaudrate): ... this.
	(ser_unix_nop_setstopbits): Rename to ...
	(ser_base_setstopbits): ... this.
	(ser_unix_async): Rename to ...
	(ser_base_async): ... this.
	* ser-pipe.c (_initialize_ser_pipe): Update accordingly.
	* ser-tcp.c (_initialize_ser_tcp): Likewise.
	* ser-unix.c (hardwire_flush_input): Likewise.
	(_initializer_ser_hardwire): Likewise.
@
text
@a2 57
	Backport from mainline:
        2005-03-25  Mark Mitchell  <mark@@codesourcery.com>
	* ser-base.c (ser_unix_write): Rename to ...
	(ser_base_write): ... this.
	(ser_unix_nop_flush_output): Rename to ...
	(ser_base_flush_output): ... this.
	(ser_unix_flush_input): Rename to ...
	(ser_base_flush_input): ... this.
	(ser_unix_nop_send_break): Rename to ...
	(ser_base_send_break): ... this.
	(ser_unix_nop_drain_output): Rename to ...
	(ser_base_drain_output): ... this.
	(ser_unix_nop_raw): Rename to ...
	(ser_base_raw): ... this.
	(ser_unix_nop_get_tty_state): Rename to ...
	(ser_base_set_tty_state): ... this.
	(ser_unix_nop_noflush_set_tty_state): Rename to ...
	(ser_base_noflush_set_tty_state): ... this.
	(ser_unix_nop_print_tty_state): Rename to ...
	(ser_base_print_tty_state): ... this.
	(ser_unix_nop_setbaudrate): Rename to ...
	(ser_base_setbaudrate): ... this.
	(ser_unix_nop_setstopbits): Rename to ...
	(ser_base_setstopbits): ... this.
	(ser_unix_async): Rename to ...
	(ser_base_async): ... this.
	* ser-base.h (ser_unix_write): Rename to ...
	(ser_base_write): ... this.
	(ser_unix_nop_flush_output): Rename to ...
	(ser_base_flush_output): ... this.
	(ser_unix_flush_input): Rename to ...
	(ser_base_flush_input): ... this.
	(ser_unix_nop_send_break): Rename to ...
	(ser_base_send_break): ... this.
	(ser_unix_nop_drain_output): Rename to ...
	(ser_base_drain_output): ... this.
	(ser_unix_nop_raw): Rename to ...
	(ser_base_raw): ... this.
	(ser_unix_nop_get_tty_state): Rename to ...
	(ser_base_set_tty_state): ... this.
	(ser_unix_nop_noflush_set_tty_state): Rename to ...
	(ser_base_noflush_set_tty_state): ... this.
	(ser_unix_nop_print_tty_state): Rename to ...
	(ser_base_print_tty_state): ... this.
	(ser_unix_nop_setbaudrate): Rename to ...
	(ser_base_setbaudrate): ... this.
	(ser_unix_nop_setstopbits): Rename to ...
	(ser_base_setstopbits): ... this.
	(ser_unix_async): Rename to ...
	(ser_base_async): ... this.
	* ser-pipe.c (_initialize_ser_pipe): Update accordingly.
	* ser-tcp.c (_initialize_ser_tcp): Likewise.
	* ser-unix.c (hardwire_flush_input): Likewise.
	(_initializer_ser_hardwire): Likewise.

2005-03-28  Mark Mitchell  <mark@@codesourcery.com>

@


1.1.2.10
log
@	* gdb/configure.ac: Link with -lws2_32 on mingw.
	* gdb/configure: Regenerated.
	* gdb/defs.h (WINAPI): Define, conditionally.
	* gdb/ser-base.c (winsock2.h): Include it.
	(fd_event): Use read_prim.
	(ser_base_wait_for): Moved here from ser-unix.c.
	(do_ser_base_readchar): Likewise.
	(generic_readchar): Likewise.
	(ser_base_readchar): Likewise.
	* gdb/ser-base.h (generic_readchar): Declare.
	(ser_base_readchar): Likewise.
	* gdb/ser-pipe.c (_initialize_ser_pipe): Adjust for name changes.
	* gdb/ser-tcp.c (winsock2.h): Include it.
	(ETIMEDOUT): Define on Windows.
	(closesocket): Define on UNIX.
	(ioctlsocket): Likewise.
	(net_open): Adjust for differences in socket functions between
	Windows and UNIX.
	(_initialize_ser_tcp): Adjust for name changes.
	(net_read_prim): New function.
	(net_write_prim): Likewise.
	* gdb/ser-unix.c (generic_readchar): Remove.
	(ser_unix_wait_for): Likewise.
	(do_unix_readchar): Likewise.
	(ser_unix_readchar): Likewise.
	(_initialize_ser_hardwire): Adjust for name changes.
	(ser_unix_read_prim): New function.
	(ser_unix_write_prim): New function.
	* gdb/ser-unix.h (ser_unix_readchar): Remove.
	(ser_unix_read_prim): Declare.
	(ser_unix_write_prim): Declare.
	* gdb/serial.h (struct serial_ops): Add read_prim and write_prim.
	* gdb/utils.c (winerror.h): Include it.
	(safe_strerror): Handle winsock errors.
@
text
@a0 37
2005-03-25  Mark Mitchell  <mark@@codesourcery.com>

	* gdb/configure.ac: Link with -lws2_32 on mingw.
	* gdb/configure: Regenerated.
	* gdb/defs.h (WINAPI): Define, conditionally.
	* gdb/ser-base.c (winsock2.h): Include it.
	(fd_event): Use read_prim.
	(ser_base_wait_for): Moved here from ser-unix.c.
	(do_ser_base_readchar): Likewise.
	(generic_readchar): Likewise.
	(ser_base_readchar): Likewise.
	* gdb/ser-base.h (generic_readchar): Declare.
	(ser_base_readchar): Likewise.
	* gdb/ser-pipe.c (_initialize_ser_pipe): Adjust for name changes.
	* gdb/ser-tcp.c (winsock2.h): Include it.
	(ETIMEDOUT): Define on Windows.
	(closesocket): Define on UNIX.
	(ioctlsocket): Likewise.
	(net_open): Adjust for differences in socket functions between
	Windows and UNIX.
	(_initialize_ser_tcp): Adjust for name changes.
	(net_read_prim): New function.
	(net_write_prim): Likewise.
	* gdb/ser-unix.c (generic_readchar): Remove.
	(ser_unix_wait_for): Likewise.
	(do_unix_readchar): Likewise.
	(ser_unix_readchar): Likewise.
	(_initialize_ser_hardwire): Adjust for name changes.
	(ser_unix_read_prim): New function.
	(ser_unix_write_prim): New function.
	* gdb/ser-unix.h (ser_unix_readchar): Remove.
	(ser_unix_read_prim): Declare.
	(ser_unix_write_prim): Declare.
	* gdb/serial.h (struct serial_ops): Add read_prim and write_prim.
	* gdb/utils.c (winerror.h): Include it.
	(safe_strerror): Handle winsock errors.

@


1.1.2.11
log
@	* gdb/configure.ac: No tgetent on MinGW.
	* gdb/event-loop.c (struct gdb_notifier): Add "handles" for Windows.
	(create_file_handler): On Windows, update handles, rather than
	check_masks and ready_masks.
	(delete_file_handler): Likewise.
	(gdb_wait_for_event): Use WaitForMultipleObjects, not select, on
	Windows.
	* gdb/event-top.c (gdb_setup_readline): Put console into
	character-at-a-time mode under Windows.
@
text
@a0 12
2005-03-28  Mark Mitchell  <mark@@codesourcery.com>

	* gdb/configure.ac: No tgetent on MinGW.
	* gdb/event-loop.c (struct gdb_notifier): Add "handles" for Windows.
	(create_file_handler): On Windows, update handles, rather than
	check_masks and ready_masks.  
	(delete_file_handler): Likewise.
	(gdb_wait_for_event): Use WaitForMultipleObjects, not select, on
	Windows.
	* gdb/event-top.c (gdb_setup_readline): Put console into
	character-at-a-time mode under Windows.

@


1.1.2.12
log
@Fix typo in ChangeLog
@
text
@a3 1
	* gdb/configure: Regenerated.
@


1.1.2.13
log
@Fix typo in ChangeLog
@
text
@d14 1
a14 1
2005-03-28  Mark Mitchell  <mark@@codesourcery.com>
@


1.1.2.14
log
@	* readline/Makefile.in (RLTTYOBJ): New variable.
	(OBJECTS): Use RLTTYOBJ.
	* readline/aclocal.m4: Use AC_RTY_LINK to check for mbstate_t.
	* readline/complete.c (pwd.h): Guard with HAVE_PWD_H.
	(getpwent): Guard with HAVE_GETPWENT.
	(rl_username_completion_function): Guard use of getpwent.
	(endpwent): Likewise.
	* readline/config.h.in (HAVE_FCNTL): New macro.
	(HAVE_GETPWENT): Likewise.
	(HAVE_GETPWNAM): Likewise.
	(HAVE_GETPWUID): Likewise.
	(HAVE_PWD_H): Likewise.
	* readline/configure: Regenerated.
	* readline/configure.in: Handle MinGW when cross compiling.  Check for
	getpwnam, getpwent, getpwuid, and pwd.h.  Set RLTTYOBJ.
	* readline/display.c (rl_clear_screen): Treat Windows like DOS.
	(insert_some_chars): Likewise.
	(delete_chars): Likewise.
	* readline/rldefs.h (NEW_TTY_DRIVER): Do not define for Windows.
	* readline/rlnotty.c: New file.
	* readline/shell.c (pwd.h): Guard with HAVE_PWD_H.
	(getpwuid): Guard with HAVE_GETPWUID.
	(sh_unset_nodelay_mode): Guard use of fnctl with HAVE_FNCTL_H.
	* readline/signals.c (rl_signal_handler): Don't use SIGALRM or
	SIGQUIT if not defined.  Use "raise" rather than "kill".
	(rl_set_signals): Don't set handlers for SIGQUIT or SIGALRM if
	they are not defined.
	(rl_clear_signals): Likewise.
	* readline/tilde.c (pwd.h): Guard with HAVE_PWD_H.
	(getpwuid): Guard declaration with HAVE_GETPWUID.
	(getpwnam): Guard declaration with HAVE_GETPWNAM.
	(tilde_expand_word): Guard use of getpwnam with HAVE_GETPWNAM.
@
text
@a0 35
2005-03-28  Mark Mitchell <mark@@codesourcery.com>

	* readline/Makefile.in (RLTTYOBJ): New variable.
	(OBJECTS): Use RLTTYOBJ.
	* readline/aclocal.m4: Use AC_RTY_LINK to check for mbstate_t.
	* readline/complete.c (pwd.h): Guard with HAVE_PWD_H.
	(getpwent): Guard with HAVE_GETPWENT.
	(rl_username_completion_function): Guard use of getpwent.
	(endpwent): Likewise.
	* readline/config.h.in (HAVE_FCNTL): New macro.
	(HAVE_GETPWENT): Likewise.
	(HAVE_GETPWNAM): Likewise.
	(HAVE_GETPWUID): Likewise.
	(HAVE_PWD_H): Likewise.
	* readline/configure: Regenerated.
	* readline/configure.in: Handle MinGW when cross compiling.  Check for
	getpwnam, getpwent, getpwuid, and pwd.h.  Set RLTTYOBJ.
	* readline/display.c (rl_clear_screen): Treat Windows like DOS.
	(insert_some_chars): Likewise.
	(delete_chars): Likewise.
	* readline/rldefs.h (NEW_TTY_DRIVER): Do not define for Windows.
	* readline/rlnotty.c: New file.
	* readline/shell.c (pwd.h): Guard with HAVE_PWD_H.
	(getpwuid): Guard with HAVE_GETPWUID.
	(sh_unset_nodelay_mode): Guard use of fnctl with HAVE_FNCTL_H.
	* readline/signals.c (rl_signal_handler): Don't use SIGALRM or
	SIGQUIT if not defined.  Use "raise" rather than "kill".
	(rl_set_signals): Don't set handlers for SIGQUIT or SIGALRM if
	they are not defined.
	(rl_clear_signals): Likewise.
	* readline/tilde.c (pwd.h): Guard with HAVE_PWD_H.
	(getpwuid): Guard declaration with HAVE_GETPWUID.
	(getpwnam): Guard declaration with HAVE_GETPWNAM.
	(tilde_expand_word): Guard use of getpwnam with HAVE_GETPWNAM.

@


1.1.2.15
log
@	* gdb/remote-rdi.c (arm_rdi_insert_breakpoint): Don't call
	arm_pc_is_thumb_dummy.
@
text
@a0 5
2005-03-28  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/remote-rdi.c (arm_rdi_insert_breakpoint): Don't call
	arm_pc_is_thumb_dummy.

@


1.1.2.16
log
@	* gdb/ser-tcp.c (net_read_prim): Use recv unconditionally.
	(net_write_prim): Use send unconditionally.
	* gdb/configure.ac: Do not check for send and recv.
	* gdb/configure: Regenerated.
@
text
@a0 7
2005-03-28  Mark Mitchell <mark@@codesourcery.com>

	* gdb/ser-tcp.c (net_read_prim): Use recv unconditionally.
	(net_write_prim): Use send unconditionally.
	* gdb/configure.ac: Do not check for send and recv.
	* gdb/configure: Regenerated.
	
@


1.1.2.17
log
@	* include/libiberty.h (ffs): Declare.
@
text
@a2 4
	* include/libiberty.h (ffs): Declare.
	
2005-03-28  Mark Mitchell <mark@@codesourcery.com>

@


1.1.2.18
log
@2005-03-28  Paul Brook  <paul@@codesourcery.com>
	Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/Makefile.in: arm-tdep.o depends on $(observer_h).
	* gdb/arm-linux-nat.c (fetch_fpregister, fetch_fpregs,
	store_fpregister, store_fpregs): Rename...
	(fetch_fpa_register, fetch_fpa_regs, store_fpa_register,
	store_fpa_regs): ... to this.
	* gdb/arm-linux-tdep.c (arm_linux_init_abi): Provide ABI specific
	overrides.
	* gdb/arm-tdep.c: Include opserver.h.
	(struct gdbarch_tdep_info): Add.
	(arm_push_dummy_call): Handle doubleword alignment.
	(arm_register_type): Handle iWMMXt and VFP regs.
	(arm_register_byte): Ditto.
	(arm_pseudo_register_read): New function.
	(arm_pseudo_register_write): New function.
	(arm_dwarf_reg_to_regnum): New function.
	(arm_register_sim_regno): Handle iWMMXT regs.
	(arm_register_remote_regno): New function.
	(arm_extract_return_value): Use new macro names.
	(arm_register_name): Handle iWMMXt and VFP registers.
	(arm_sim_available_registers): New function.
	(arm_update_architecture): New function.
	(arm_gdbarch_init): Handle optional register sets.  Register new
	hooks.  Fix misleading error message.
	(_initialize_arm_tdep): Call observer_attach_inferior_created.
	* gdb/arm-tdep.h (ARM_NUM_FP_ARG_REGS, ARM_LAST_FP_ARG_REGNUM,
	FP_REGISTER_SIZE, NUM_FREGS): Rename ...
	(ARM_NUM_FPA_ARG_REGS, ARM_LAST_FPA_ARG_REGNUM, FPA_REGISTER_SIZE,
	NUM_FPA_REGS): ... to this.
	(NUM_IWMMXT_COP0REGS, NUM_IWMMXT_COP1REGS, NUM_IWMMXT_REGS,
	IWMMXT_COP0_REGSIZE, IWMMXT_COP1_REGSIZE, NUM_VFP_XREGS,
	VFP_XREG_SIZE, NUM_VFP_SREGS, VFP_SREG_SIZE, NUM_VFP_PSEUDOS): Define.
	(struct gdbarch_tdep): Add target_has_iwmmxt_regs,
	target_has_vfp_regs, first_iwmmxt_regnum, target_iwmmxt_regnum,
	first_vfp_regnum, first_vfp_pseudo and target_vfp_regnum.
	* gdb/gdbarch.c (struct gdbarch): Add remote_num_g_packet_regs,
	sim_available_registers and register_remote_regno.
	(startup_gdbarch, verify_gdbarch): Ditto.
	(gdbarch_dump): Dump new fields.
	(gdbarch_remote_num_g_packet_regs_p, gdbarch_remote_num_g_packet_regs,
	set_gdbarch_remote_num_g_packet_regs,
	gdbarch_sim_available_registers_p, gdbarch_sim_available_registers,
	set_gdbarch_sim_available_registers, gdbarch_register_remote_regno_p,
	gdbarch_register_remote_regno, set_gdbarch_register_remote_regno):
	New functions.
	* gdb/gdbarch.h: Add prototypes.
	* gdb/gdbarch.sh: Add new fields.
	(deprecated_current_gdbarch_select_hack): Call flush_cached_frames.
	* gdb/remote-sim.h (gdbsim_create_inferior): Call
	observer_notify_inferior_created.
	(gdbsim_xfer_partial): New function.
	(init_gdbsim_ops): Use it.
	* gdb/remote.c (struct remote_state): Add num_g_regs.
	(init_remote_state): Only consider hard regs.  Allow target to provide
	register mapping.
	(packet_reg_from_regnum): Don't check pseudo regs.
	(packet_reg_from_pnum): Ditto.
	(remote_protocol_qPart_availableRegisters): Add.
	(set_remote_protocol_qPart_availableRegisters_packet_cmd,
	show_remote_protocol_qPart_availableRegisters_packet_cmd): New
	functions.
	(fetch_register_using_p, store_register_using_P): Handle arbitrary
	register mappings.
	(fetch_registers_using_g): New function.
	(remote_fetch_registers): Use it.
	(store_registers_using_G): New function.
	(remote_store_registers): Use it.
	(remote_xfer_partial): Handle TARGET_OBJECT_AVAILABLE_REGISTERS.
	(show_remote_cmd): Display availableRegisters.
	(_initialize_remote): Register qPart_availableRegisters.
	* gdb/target.h (enum target_object): Add
	TARGET_OBJECT_AVAILABLE_REGISTERS.
	* gdb/gdbserver/configure.srv (arm*-*-linux*): set
	srv_linux_regsets=yes.
	* gdb/gdbserver/linux-arm-low.c (PTRACE_GETWMMXREGS,
	PTRACE_SETWMMXREGS): Define.
	(arm_fill_gregset, arm_store_gregset, arm_fill_wmmxregset,
	arm_store_wmmxregset, arm_available_registers): New functions.
	(target_regsets): Add.
	(the_low_target): Use arm_available_registers.
	* gdb/gdbserver/linux-low.c (linux_available_registers): New function.
	(linux_target_op): Use it.
	* gdb/gdbserver/linux-low.h (gdbserver/linux-low.h): Add
	available_registers.
	(use_regsets_p): Declare.
	* gdb/gdbserver/regcache.c (g_register_bytes): Add.
	(regcache_invalidate, registers_to_string, registers_from_string):
	Use it.
	(set_register_cache): Set g_register_bytes.
	(supply_register_as_string): New function.
	* gdb/gdbserver/regcache.h (supply_register_as_string): Add prototype.
	* gdb/gdbserver/server.c (handle_query): Handle
	qPart:availableRegisters.
	(handle_p_packet, handle_P_packet): New functions.
	(main): Handle 'p' and 'P' packets.
	* gdb/gdbserver/target.h (struct target_ops): Add available_registers.
	* gdb/regformats/reg-arm.dat: Add last_g_reg and iWMMXT regs.
	* gdb/regformats/regdat.sh: Handle last_g_reg.
	* gdb/regformats/regdef.h (set_register_cache): Update prototype.
@
text
@a0 102
2005-03-28  Paul Brook  <paul@@codesourcery.com>
	Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/Makefile.in: arm-tdep.o depends on $(observer_h).
	* gdb/arm-linux-nat.c (fetch_fpregister, fetch_fpregs,
	store_fpregister, store_fpregs): Rename...
	(fetch_fpa_register, fetch_fpa_regs, store_fpa_register,
	store_fpa_regs): ... to this.
	* gdb/arm-linux-tdep.c (arm_linux_init_abi): Provide ABI specific
	overrides.
	* gdb/arm-tdep.c: Include opserver.h.
	(struct gdbarch_tdep_info): Add.
	(arm_push_dummy_call): Handle doubleword alignment.
	(arm_register_type): Handle iWMMXt and VFP regs.
	(arm_register_byte): Ditto.
	(arm_pseudo_register_read): New function.
	(arm_pseudo_register_write): New function.
	(arm_dwarf_reg_to_regnum): New function.
	(arm_register_sim_regno): Handle iWMMXT regs.
	(arm_register_remote_regno): New function.
	(arm_extract_return_value): Use new macro names.
	(arm_register_name): Handle iWMMXt and VFP registers.
	(arm_sim_available_registers): New function.
	(arm_update_architecture): New function.
	(arm_gdbarch_init): Handle optional register sets.  Register new
	hooks.  Fix misleading error message.
	(_initialize_arm_tdep): Call observer_attach_inferior_created.
	* gdb/arm-tdep.h (ARM_NUM_FP_ARG_REGS, ARM_LAST_FP_ARG_REGNUM,
	FP_REGISTER_SIZE, NUM_FREGS): Rename ...
	(ARM_NUM_FPA_ARG_REGS, ARM_LAST_FPA_ARG_REGNUM, FPA_REGISTER_SIZE,
	NUM_FPA_REGS): ... to this.
	(NUM_IWMMXT_COP0REGS, NUM_IWMMXT_COP1REGS, NUM_IWMMXT_REGS,
	IWMMXT_COP0_REGSIZE, IWMMXT_COP1_REGSIZE, NUM_VFP_XREGS,
	VFP_XREG_SIZE, NUM_VFP_SREGS, VFP_SREG_SIZE, NUM_VFP_PSEUDOS): Define.
	(struct gdbarch_tdep): Add target_has_iwmmxt_regs,
	target_has_vfp_regs, first_iwmmxt_regnum, target_iwmmxt_regnum,
	first_vfp_regnum, first_vfp_pseudo and target_vfp_regnum.
	* gdb/gdbarch.c (struct gdbarch): Add remote_num_g_packet_regs,
	sim_available_registers and register_remote_regno.
	(startup_gdbarch, verify_gdbarch): Ditto.
	(gdbarch_dump): Dump new fields.
	(gdbarch_remote_num_g_packet_regs_p, gdbarch_remote_num_g_packet_regs,
	set_gdbarch_remote_num_g_packet_regs,
	gdbarch_sim_available_registers_p, gdbarch_sim_available_registers,
	set_gdbarch_sim_available_registers, gdbarch_register_remote_regno_p,
	gdbarch_register_remote_regno, set_gdbarch_register_remote_regno):
	New functions.
	* gdb/gdbarch.h: Add prototypes.
	* gdb/gdbarch.sh: Add new fields.
	(deprecated_current_gdbarch_select_hack): Call flush_cached_frames.
	* gdb/remote-sim.h (gdbsim_create_inferior): Call
	observer_notify_inferior_created.
	(gdbsim_xfer_partial): New function.
	(init_gdbsim_ops): Use it.
	* gdb/remote.c (struct remote_state): Add num_g_regs.
	(init_remote_state): Only consider hard regs.  Allow target to provide
	register mapping.
	(packet_reg_from_regnum): Don't check pseudo regs.
	(packet_reg_from_pnum): Ditto.
	(remote_protocol_qPart_availableRegisters): Add.
	(set_remote_protocol_qPart_availableRegisters_packet_cmd,
	show_remote_protocol_qPart_availableRegisters_packet_cmd): New
	functions.
	(fetch_register_using_p, store_register_using_P): Handle arbitrary
	register mappings.
	(fetch_registers_using_g): New function.
	(remote_fetch_registers): Use it.
	(store_registers_using_G): New function.
	(remote_store_registers): Use it.
	(remote_xfer_partial): Handle TARGET_OBJECT_AVAILABLE_REGISTERS.
	(show_remote_cmd): Display availableRegisters.
	(_initialize_remote): Register qPart_availableRegisters.
	* gdb/target.h (enum target_object): Add
	TARGET_OBJECT_AVAILABLE_REGISTERS.
	* gdb/gdbserver/configure.srv (arm*-*-linux*): set
	srv_linux_regsets=yes.
	* gdb/gdbserver/linux-arm-low.c (PTRACE_GETWMMXREGS,
	PTRACE_SETWMMXREGS): Define.
	(arm_fill_gregset, arm_store_gregset, arm_fill_wmmxregset,
	arm_store_wmmxregset, arm_available_registers): New functions.
	(target_regsets): Add.
	(the_low_target): Use arm_available_registers.
	* gdb/gdbserver/linux-low.c (linux_available_registers): New function.
	(linux_target_op): Use it.
	* gdb/gdbserver/linux-low.h (gdbserver/linux-low.h): Add
	available_registers.
	(use_regsets_p): Declare.
	* gdb/gdbserver/regcache.c (g_register_bytes): Add.
	(regcache_invalidate, registers_to_string, registers_from_string):
	Use it.
	(set_register_cache): Set g_register_bytes.
	(supply_register_as_string): New function.
	* gdb/gdbserver/regcache.h (supply_register_as_string): Add prototype.
	* gdb/gdbserver/server.c (handle_query): Handle
	qPart:availableRegisters.
	(handle_p_packet, handle_P_packet): New functions.
	(main): Handle 'p' and 'P' packets.
	* gdb/gdbserver/target.h (struct target_ops): Add available_registers.
	* gdb/regformats/reg-arm.dat: Add last_g_reg and iWMMXT regs.
	* gdb/regformats/regdat.sh: Handle last_g_reg.
	* gdb/regformats/regdef.h (set_register_cache): Update prototype.

@


1.1.2.19
log
@	* gdb/Makefile.in (arm-linux-nat.o): Update dependencies.
	* gdb/arm-linux-nat.c: Include "gdb_assert.h".
	(PTRACE_GETWMMXREGS, PTRACE_SETWMMXREGS): Define.
	(arm_linux_has_wmmx_registers): New flag.
	(GET_THREAD_ID): Remove stray punctuation.
	(IWMMXT_REGS_SIZE): Define.
	(fetch_wmmx_regs, store_wmmx_regs): New functions.
	(fetch_inferior_registers, store_inferior_registers): Call them.
	(arm_linux_available_registers): New function.
	* gdb/inftarg.c (child_xfer_partial): Handle
	TARGET_OBJECT_AVAILABLE_REGISTERS.
	* gdb/config/arm/nm-linux.h (arm_linux_available_registers): Add
	prototype.
	(NATIVE_XFER_AVAILABLE_REGISTERS): Define.

	* gdb/gdbserver/linux-arm-low.c (arm_fill_wmmxregset)
	(arm_store_wmmxregset): Remove stray text.
	(arm_available_registers): Remove debugging output.  Use hex.
	* gdb/gdbserver/regcache.c (num_registers): Make global.
	* gdb/gdbserver/server.c (handle_p_packet, handle_P_packet): Check
	the value of regnum.
@
text
@a0 24
2005-03-30  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/Makefile.in (arm-linux-nat.o): Update dependencies.
	* gdb/arm-linux-nat.c: Include "gdb_assert.h".
	(PTRACE_GETWMMXREGS, PTRACE_SETWMMXREGS): Define.
	(arm_linux_has_wmmx_registers): New flag.
	(GET_THREAD_ID): Remove stray punctuation.
	(IWMMXT_REGS_SIZE): Define.
	(fetch_wmmx_regs, store_wmmx_regs): New functions.
	(fetch_inferior_registers, store_inferior_registers): Call them.
	(arm_linux_available_registers): New function.
	* gdb/inftarg.c (child_xfer_partial): Handle
	TARGET_OBJECT_AVAILABLE_REGISTERS.
	* gdb/config/arm/nm-linux.h (arm_linux_available_registers): Add
	prototype.
	(NATIVE_XFER_AVAILABLE_REGISTERS): Define.

	* gdb/gdbserver/linux-arm-low.c (arm_fill_wmmxregset)
	(arm_store_wmmxregset): Remove stray text.
	(arm_available_registers): Remove debugging output.  Use hex.
	* gdb/gdbserver/regcache.c (num_registers): Make global. 
	* gdb/gdbserver/server.c (handle_p_packet, handle_P_packet): Check
	the value of regnum.

@


1.1.2.20
log
@2005-03-30  Paul Brook  <paul@@codesourcery.com>

	* arm/wrapper.c: Provide SIGTRAP and SIGBUS.
@
text
@a0 4
2005-03-30  Paul Brook  <paul@@codesourcery.com>

	* arm/wrapper.c: Provide SIGTRAP and SIGBUS.

@


1.1.2.21
log
@	* gdb/ser-tcp.c (net_write_prim): Correct prototype.

	* readline/input.c (rl_getc): Use getche to read console input on
	Windows.

	Revert:
	2005-03-28  Mark Mitchell  <mark@@codesourcery.com>
	* gdb/event-top.c (gdb_setup_readline): Put console into
	character-at-a-time mode under Windows.
@
text
@a0 12
2005-03-31  Mark Mitchell  <mark@@codesourcery.com>

	* gdb/ser-tcp.c (net_write_prim): Correct prototype.
	
	* readline/input.c (rl_getc): Use getche to read console input on
	Windows.
	
	Revert:
	2005-03-28  Mark Mitchell  <mark@@codesourcery.com>
	* gdb/event-top.c (gdb_setup_readline): Put console into
	character-at-a-time mode under Windows.

@


1.1.2.22
log
@2005-04-25  Paul Brook  <paul@@codesourcery.com>

	* gdb/configure.tgt: Don't build rdi-share library.
	* gdb/config/arm/embed.mt: Ditto.
@
text
@a0 5
2005-04-25  Paul Brook  <paul@@codesourcery.com>

	* gdb/configure.tgt: Don't build rdi-share library.
	* gdb/config/arm/embed.mt: Ditto.

@


1.1.2.23
log
@2005-04-27  Paul Brook  <paul@@codesourcery.com>

	* sim/common/Make-common.in: Add $(EXEEXT) to "run".
@
text
@a0 4
2005-04-27  Paul Brook  <paul@@codesourcery.com>

	* sim/common/Make-common.in: Add $(EXEEXT) to "run".

@


1.1.2.24
log
@2005-04-28  Paul Brook  <paul@@codesourcery.com>

	* exceptions.c (print_flush): Handle NULL gdb_stdout_serial.
@
text
@a0 4
2005-04-28  Paul Brook  <paul@@codesourcery.com>

	* gdb/exceptions.c (print_flush): Handle NULL gdb_stdout_serial.

@


1.1.2.25
log
@2005-04-29  Paul Brook  <paul@@codesourcery.com>

	* gdb/remote-sim.c (SIGTRAP): Provide default defnition.
	* gdb/signals/signals.c (SIGRAP): Ditto.
@
text
@a0 5
2005-04-29  Paul Brook  <paul@@codesourcery.com>

	* gdb/remote-sim.c (SIGTRAP): Provide default defnition.
	* gdb/signals/signals.c (SIGRAP): Ditto.

@


1.1.2.26
log
@2005-04-29  Paul Brook  <paul@@codesourcery.com>

	* sim/common/callback.c (PIPE_BUF): Provide default refinition.
	(os_lstat): Use stat if lstat is not available on the host.
	(os_ftruncate): Return EINVAL if not available on the host.
	(os_truncate): Ditto.
	* sim/common/configure.ac: Check for lstat, truncate and ftruncate.
	* sim/common/configure: Regenerate.
	* sim/common/config.in: Regenerate.
@
text
@a2 10
	* sim/common/callback.c (PIPE_BUF): Provide default refinition.
	(os_lstat): Use stat if lstat is not available on the host.
	(os_ftruncate): Return EINVAL if not available on the host.
	(os_truncate): Ditto.
	* sim/common/configure.ac: Check for lstat, truncate and ftruncate.
	* sim/common/configure: Regenerate.
	* sim/common/config.in: Regenerate.

2005-04-29  Paul Brook  <paul@@codesourcery.com>

@


1.1.2.27
log
@	* bfd/opncls.c (bfd_fopen): New API.
	(bfd_openr): Use it.
	(bfd_fdopenr): Likewise.
	* bfd/bfd-in2.h: Regenerated.
@
text
@a0 7
2005-06-06  Mark Mitchell  <mark@@codesourcery.com>

	* bfd/opncls.c (bfd_fopen): New API.
	(bfd_openr): Use it.
	(bfd_fdopenr): Likewise.
	* bfd/bfd-in2.h: Regenerated.

@


1.1.2.28
log
@        * opncls.c (bfd_fopen): Don't set bfd_error unconditionally.
@
text
@d1 1
a1 9
2005-06-08  Alan Modra  <amodra@@bigpond.net.au>

        * opncls.c (bfd_fopen): Don't set bfd_error unconditionally.
	
2005-06-07  Mark Mitchell  <mark@@codesourcery.com>

        * opncls.c (bfd_fdopenr): Add missing break statements.

2005-06-07  Mark Mitchell  <mark@@codesourcery.com>
@


1.1.2.29
log
@	* readline/input.c (rL_getc): Use getch, not getche.
	* readline/readline.c (bind_arrow_keys_internal): Translate
	Windows keysequences into POSIX key sequences.
	* readline/rlnotty.c (tputs): Fix thinko.
	(rl_prep_terminal): Set readline_echoing_p.
@
text
@a0 8
2005-06-08  Mark Mitchell  <mark@@codesourcery.com>

	* readline/input.c (rL_getc): Use getch, not getche.
	* readline/readline.c (bind_arrow_keys_internal): Translate
	Windows keysequences into POSIX key sequences.
	* readline/rlnotty.c (tputs): Fix thinko.
	(rl_prep_terminal): Set readline_echoing_p.

d3 1
a3 1
        * bfd/opncls.c (bfd_fopen): Don't set bfd_error unconditionally.
d7 1
a7 1
        * bfd/opncls.c (bfd_fdopenr): Add missing break statements.
@


1.1.2.30
log
@	* readline/display.c (insert_some_chars): Likewise.
	(delete_chars): Likewise.
@
text
@a2 7
	Revert:
	2005-03-28  Mark Mitchell <mark@@codesourcery.com>
	* readline/display.c (insert_some_chars): Likewise.
	(delete_chars): Likewise.
	
2005-06-08  Mark Mitchell  <mark@@codesourcery.com>

@


1.1.2.31
log
@	* bfd/opncls.c (bfd_fopen): Mark returned BFD as cacheable if FD == -1.
@
text
@a2 4
	* bfd/opncls.c (bfd_fopen): Mark returned BFD as cacheable if FD == -1.

2005-06-08  Mark Mitchell  <mark@@codesourcery.com>

@


1.1.2.32
log
@	* gdb/corelow.c (core_open): Use bfd_fopen, not bfd_fdopenr.
	* gdb/exec.c (exec_file_attach): Likewise.
	* gdb/solib-frv.c (enable_break2): Likewise.
	* gdb/solib-svr4.c (enable_break): Likewise.
	* gdb/solib.c (solib_map_sections): Likewise.
	* gdb/symfile.c (symfile_bfd_open): Likewise.
@
text
@a0 9
2005-06-13  Mark Mitchell  <mark@@codesourcery.com>

	* gdb/corelow.c (core_open): Use bfd_fopen, not bfd_fdopenr.
	* gdb/exec.c (exec_file_attach): Likewise.
	* gdb/solib-frv.c (enable_break2): Likewise.
	* gdb/solib-svr4.c (enable_break): Likewise.
	* gdb/solib.c (solib_map_sections): Likewise.
	* gdb/symfile.c (symfile_bfd_open): Likewise.

@


1.1.2.33
log
@	* readline/rlnotty.c (tgoto): New function.
@
text
@a0 4
2005-06-14  Mark Mitchell  <mark@@codesourcery.com>

	* readline/rlnotty.c (tgoto): New function.
	
@


1.1.2.34
log
@	Backport:
	2005-09-09  Richard Earnshaw  <richard.earnshaw@@arm.com>
	* bfd/elf32-arm.c (elf32_arm_section_from_shdr): Accept
	SHT_ARM_PREEMPTMAP and SHT_ARM_ATTRIBUTES.

	2005-09-09  Richard Earnshaw  <richard.earnshaw@@arm.com>
	* include/elf/arm.h (SHT_ARM_PREEMPTMAP, SHT_ARM_ATTRIBUTES): New
	defines.
@
text
@a0 11
2005-10-14  Daniel Jacobowitz  <dan@@codesourcery.com>

	Backport:
	2005-09-09  Richard Earnshaw  <richard.earnshaw@@arm.com>
	* bfd/elf32-arm.c (elf32_arm_section_from_shdr): Accept
	SHT_ARM_PREEMPTMAP and SHT_ARM_ATTRIBUTES.

	2005-09-09  Richard Earnshaw  <richard.earnshaw@@arm.com>
	* include/elf/arm.h (SHT_ARM_PREEMPTMAP, SHT_ARM_ATTRIBUTES): New
	defines.

@


