head	1.5;
access;
symbols
	binutils-2_11_2:1.1.1.1
	binutils-2_11_1:1.1.1.1
	binutils-2_11:1.1.1.1
	x86_64versiong3:1.1.1.1
	binutils-2_11-branch:1.1.1.1.0.4
	binutils-2_10_1:1.1.1.1
	binutils-2_10:1.1.1.1
	binutils-2_10-branch:1.1.1.1.0.2
	binutils-2_10-branchpoint:1.1.1.1
	binutils_latest_snapshot:1.4
	repo-unification-2000-02-06:1.1.1.1
	binu_ss_19990721:1.1.1.1
	binu_ss_19990602:1.1.1.1
	binu_ss_19990502:1.1.1.1
	cygnus:1.1.1;
locks; strict;
comment	@.\" @;


1.5
date	2001.06.19.11.57.27;	author nickc;	state dead;
branches;
next	1.4;

1.4
date	2001.05.30.10.46.25;	author nickc;	state Exp;
branches;
next	1.3;

1.3
date	2001.03.25.20.32.25;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.13.06.43.57;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	99.05.03.07.29.09;	author rth;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.05.03.07.29.09;	author rth;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Remove auot generated man pages
@
text
@.\" Automatically generated by Pod::Man version 1.02
.\" Wed May 30 12:24:30 2001
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` `
.    ds C' '
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
.    .
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
.\"
.\" Accent mark definitions (@@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.bd B 3
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ======================================================================
.\"
.IX Title "CXXFILT.MAN 1"
.TH CXXFILT.MAN 1 "binutils-2.11.90" "2001-05-30" "GNU"
.UC
.SH "NAME"
cxxfilt \- Demangle \*(C+ and Java symbols.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
c++filt [ \-_ | \-\-strip-underscores ]
        [ \-j | \-\-java ]
	[ \-n | \-\-no-strip-underscores ]
        [ \-s \fIformat\fR | \-\-format=\fIformat\fR ]
        [ \-\-help ]  [ \-\-version ]  [ \fIsymbol\fR... ]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \*(C+ and Java languages provides function overloading, which means
that you can write many functions with the same name (providing each
takes parameters of different types).  All \*(C+ and Java function names
are encoded into a low-level assembly label (this process is known as
\&\fImangling\fR). The \f(CW\*(C`c++filt\*(C'\fR
[1]
program does the inverse mapping: it decodes (\fIdemangles\fR) low-level
names into user-level names so that the linker can keep these overloaded
functions from clashing.
.PP
Every alphanumeric word (consisting of letters, digits, underscores,
dollars, or periods) seen in the input is a potential label.  If the
label decodes into a \*(C+ name, the \*(C+ name replaces the low-level
name in the output.
.PP
You can use \f(CW\*(C`c++filt\*(C'\fR to decipher individual symbols:
.PP
.Vb 1
\&        c++filt I<symbol>
.Ve
If no \fIsymbol\fR arguments are given, \f(CW\*(C`c++filt\*(C'\fR reads symbol
names from the standard input and writes the demangled names to the
standard output.  All results are printed on the standard output.
.SH "OPTIONS"
.IX Header "OPTIONS"
.Ip "\f(CW\*(C`\-_\*(C'\fR" 4
.IX Item "-_"
.Ip "\f(CW\*(C`\-\-strip\-underscores\*(C'\fR" 4
.IX Item "--strip-underscores"
On some systems, both the C and \*(C+ compilers put an underscore in front
of every name.  For example, the C name \f(CW\*(C`foo\*(C'\fR gets the low-level
name \f(CW\*(C`_foo\*(C'\fR.  This option removes the initial underscore.  Whether
\&\f(CW\*(C`c++filt\*(C'\fR removes the underscore by default is target dependent.
.Ip "\f(CW\*(C`\-j\*(C'\fR" 4
.IX Item "-j"
.Ip "\f(CW\*(C`\-\-java\*(C'\fR" 4
.IX Item "--java"
Prints demangled names using Java syntax.  The default is to use \*(C+
syntax.
.Ip "\f(CW\*(C`\-n\*(C'\fR" 4
.IX Item "-n"
.Ip "\f(CW\*(C`\-\-no\-strip\-underscores\*(C'\fR" 4
.IX Item "--no-strip-underscores"
Do not remove the initial underscore.
.Ip "\f(CW\*(C`\-s \f(CIformat\f(CW\*(C'\fR" 4
.IX Item "-s format"
.Ip "\f(CW\*(C`\-\-format=\f(CIformat\f(CW\*(C'\fR" 4
.IX Item "--format=format"
\&\s-1GNU\s0 \f(CW\*(C`nm\*(C'\fR can decode three different methods of mangling, used by
different \*(C+ compilers.  The argument to this option selects which
method it uses:
.RS 4
.Ip "\f(CW\*(C`gnu\*(C'\fR" 4
.IX Item "gnu"
the one used by the \s-1GNU\s0 compiler (the default method)
.Ip "\f(CW\*(C`lucid\*(C'\fR" 4
.IX Item "lucid"
the one used by the Lucid compiler
.Ip "\f(CW\*(C`arm\*(C'\fR" 4
.IX Item "arm"
the one specified by the \*(C+ Annotated Reference Manual
.Ip "\f(CW\*(C`hp\*(C'\fR" 4
.IX Item "hp"
the one used by the \s-1HP\s0 compiler
.Ip "\f(CW\*(C`edg\*(C'\fR" 4
.IX Item "edg"
the one used by the \s-1EDG\s0 compiler
.Ip "\f(CW\*(C`gnu\-new\-abi\*(C'\fR" 4
.IX Item "gnu-new-abi"
the one used by the \s-1GNU\s0 compiler with the new \s-1ABI\s0.
.RE
.RS 4
.RE
.Ip "\f(CW\*(C`\-\-help\*(C'\fR" 4
.IX Item "--help"
Print a summary of the options to \f(CW\*(C`c++filt\*(C'\fR and exit.
.Ip "\f(CW\*(C`\-\-version\*(C'\fR" 4
.IX Item "--version"
Print the version number of \f(CW\*(C`c++filt\*(C'\fR and exit.
.SH "FOOTNOTES"
.IX Header "FOOTNOTES"
.Ip "1." 4
\&\s-1MS-DOS\s0 does not allow \f(CW\*(C`+\*(C'\fR characters in file names, so on
\&\s-1MS-DOS\s0 this program is named \f(CW\*(C`cxxfilt\*(C'\fR.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
the Info entries for \fIbinutils\fR.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 1991, 92, 93, 94, 95, 96, 97, 98, 99, 2000, 2001 Free Software Foundation, Inc.
.PP
Permission is granted to copy, distribute and/or modify this document
under the terms of the \s-1GNU\s0 Free Documentation License, Version 1.1
or any later version published by the Free Software Foundation;
with no Invariant Sections, with no Front-Cover Texts, and with no
Back-Cover Texts.  A copy of the license is included in the
section entitled \*(L"\s-1GNU\s0 Free Documentation License\*(R".
@


1.4
log
@Add command line switches to objcopy to provide lists of symbols in files
@
text
@@


1.3
log
@Automate generate on man pages
@
text
@d1 6
a6 6
.rn '' }`
''' $RCSfile$$Revision$$Date$
'''
''' $Log$
'''
.de Sh
d14 1
a14 1
.de Sp
d18 1
a18 1
.de Ip
d24 1
a24 1
.de Vb
d29 1
a29 1
.de Ve
d34 6
a39 6
'''
'''
'''     Set up \*(-- to give an unbreakable dash;
'''     string Tr holds user defined translation string.
'''     Bell System Logo is used as a dummy character.
'''
d41 1
d43 8
a50 20
.ds -- \(*W-
.ds PI pi
.if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\" diablo 12 pitch
.ds L" ""
.ds R" ""
'''   \*(M", \*(S", \*(N" and \*(T" are the equivalent of
'''   \*(L" and \*(R", except that they are used on ".xx" lines,
'''   such as .IP and .SH, which do another additional levels of
'''   double-quote interpretation
.ds M" """
.ds S" """
.ds N" """""
.ds T" """""
.ds L' '
.ds R' '
.ds M' '
.ds S' '
.ds N' '
.ds T' '
d53 4
a56 15
.ds -- \(em\|
.tr \*(Tr
.ds L" ``
.ds R" ''
.ds M" ``
.ds S" ''
.ds N" ``
.ds T" ''
.ds L' `
.ds R' '
.ds M' `
.ds S' '
.ds N' `
.ds T' '
.ds PI \(*p
d58 19
a76 31
.\"	If the F register is turned on, we'll generate
.\"	index entries out stderr for the following things:
.\"		TH	Title 
.\"		SH	Header
.\"		Sh	Subsection 
.\"		Ip	Item
.\"		X<>	Xref  (embedded
.\"	Of course, you have to process the output yourself
.\"	in some meaninful fashion.
.if \nF \{
.de IX
.tm Index:\\$1\t\\n%\t"\\$2"
..
.nr % 0
.rr F
.\}
.TH CXXFILT.MAN 1 "binutils-2.11.90" "23/Mar/101" "GNU"
.UC
.if n .hy 0
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.de CQ          \" put $1 in typewriter font
.ft CW
'if n "\c
'if t \\&\\$1\c
'if n \\&\\$1\c
'if n \&"
\\&\\$2 \\$3 \\$4 \\$5 \\$6 \\$7
'.ft R
..
.\" @@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2
.	\" AM - accent mark definitions
d78 1
a78 1
.	\" fudge factors for nroff and troff
d80 5
a84 5
.	ds #H 0
.	ds #V .8m
.	ds #F .3m
.	ds #[ \f1
.	ds #] \fP
d87 5
a91 5
.	ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.	ds #V .6m
.	ds #F 0
.	ds #[ \&
.	ds #] \&
d93 1
a93 1
.	\" simple accents for nroff and troff
d95 6
a100 9
.	ds ' \&
.	ds ` \&
.	ds ^ \&
.	ds , \&
.	ds ~ ~
.	ds ? ?
.	ds ! !
.	ds /
.	ds q
d103 6
a108 9
.	ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.	ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.	ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.	ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.	ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.	ds ? \s-2c\h'-\w'c'u*7/10'\u\h'\*(#H'\zi\d\s+2\h'\w'c'u*8/10'
.	ds ! \s-2\(or\s+2\h'-\w'\(or'u'\v'-.8m'.\v'.8m'
.	ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.	ds q o\h'-\w'o'u*8/10'\s-4\v'.4m'\z\(*i\v'-.4m'\s+4\h'\w'o'u*8/10'
d110 1
a110 1
.	\" troff and (daisy-wheel) nroff accents
a112 4
.ds v \\k:\h'-(\\n(.wu*9/10-\*(#H)'\v'-\*(#V'\*(#[\s-4v\s0\v'\*(#V'\h'|\\n:u'\*(#]
.ds _ \\k:\h'-(\\n(.wu*9/10-\*(#H+(\*(#F*2/3))'\v'-.4m'\z\(hy\v'.4m'\h'|\\n:u'
.ds . \\k:\h'-(\\n(.wu*8/10)'\v'\*(#V*4/10'\z.\v'-\*(#V*4/10'\h'|\\n:u'
.ds 3 \*(#[\v'.2m'\s-2\&3\s0\v'-.2m'\*(#]
d120 1
a120 3
.ds oe o\h'-(\w'o'u*4/10)'e
.ds Oe O\h'-(\w'O'u*4/10)'E
.	\" corrections for vroff
d123 1
a123 1
.	\" for low resolution devices (crt and lpr)
d126 9
a134 15
.	ds : e
.	ds 8 ss
.	ds v \h'-1'\o'\(aa\(ga'
.	ds _ \h'-1'^
.	ds . \h'-1'.
.	ds 3 3
.	ds o a
.	ds d- d\h'-1'\(ga
.	ds D- D\h'-1'\(hy
.	ds th \o'bp'
.	ds Th \o'LP'
.	ds ae ae
.	ds Ae AE
.	ds oe oe
.	ds Oe OE
d137 5
d145 6
a150 5
c++filt [ \-_ | --strip-underscores ]
        [ \-j | --java ]
	[ \-n | --no-strip-underscores ]
        [ \-s \fIformat\fR | --format=\fIformat\fR ]
        [ --help ]  [ --version ]  [ \fIsymbol\fR... ]
d152 1
d157 1
a157 1
\fImangling\fR). The \f(CWc++filt\fR
d168 1
a168 1
You can use \f(CWc++filt\fR to decipher individual symbols:
d170 1
a170 2
.Vb 2
\&        
d173 1
a173 1
If no \fIsymbol\fR arguments are given, \f(CWc++filt\fR reads symbol
d177 5
a181 2
.Ip "\f(CW-_\fR" 4
.Ip "\f(CW--strip-underscores\fR" 4
d183 7
a189 5
of every name.  For example, the C name \f(CWfoo\fR gets the low-level
name \f(CW_foo\fR.  This option removes the initial underscore.  Whether
\f(CWc++filt\fR removes the underscore by default is target dependent.
.Ip "\f(CW-j\fR" 4
.Ip "\f(CW--java\fR" 4
d192 4
a195 2
.Ip "\f(CW-n\fR" 4
.Ip "\f(CW--no-strip-underscores\fR" 4
d197 5
a201 3
.Ip "\f(CW-s \fIformat\fR\fR" 4
.Ip "\f(CW--format=\fIformat\fR\fR" 4
\s-1GNU\s0 \f(CWnm\fR can decode three different methods of mangling, used by
d204 3
a206 1
.Ip "\f(CWgnu\fR" 8
d208 2
a209 1
.Ip "\f(CWlucid\fR" 8
d211 2
a212 1
.Ip "\f(CWarm\fR" 8
d214 2
a215 1
.Ip "\f(CWhp\fR" 8
d217 2
a218 1
.Ip "\f(CWedg\fR" 8
d220 2
a221 1
.Ip "\f(CWgnu-new-abi\fR" 8
d223 9
a231 4
.Ip "\f(CW--help\fR" 4
Print a summary of the options to \f(CWc++filt\fR and exit.
.Ip "\f(CW--version\fR" 4
Print the version number of \f(CWc++filt\fR and exit.
d233 1
d235 2
a236 2
\s-1MS\s0\-\s-1DOS\s0 does not allow \f(CW+\fR characters in file names, so on
\s-1MS\s0\-\s-1DOS\s0 this program is named \f(CWcxxfilt\fR.
d238 1
d241 1
d245 1
a245 1
under the terms of the GNU Free Documentation License, Version 1.1
d249 1
a249 54
section entitled \*(L"GNU Free Documentation License\*(R".

.rn }` ''
.IX Title "CXXFILT.MAN 1"
.IX Name "cxxfilt - Demangle C++ and Java symbols."

.IX Header "NAME"

.IX Header "SYNOPSIS"

.IX Header "DESCRIPTION"

.IX Header "OPTIONS"

.IX Item "\f(CW-_\fR"

.IX Item "\f(CW--strip-underscores\fR"

.IX Item "\f(CW-j\fR"

.IX Item "\f(CW--java\fR"

.IX Item "\f(CW-n\fR"

.IX Item "\f(CW--no-strip-underscores\fR"

.IX Item "\f(CW-s \fIformat\fR\fR"

.IX Item "\f(CW--format=\fIformat\fR\fR"

.IX Item "\f(CWgnu\fR"

.IX Item "\f(CWlucid\fR"

.IX Item "\f(CWarm\fR"

.IX Item "\f(CWhp\fR"

.IX Item "\f(CWedg\fR"

.IX Item "\f(CWgnu-new-abi\fR"

.IX Item "\f(CW--help\fR"

.IX Item "\f(CW--version\fR"

.IX Header "FOOTNOTES"

.IX Item "1."

.IX Header "SEE ALSO"

.IX Header "COPYRIGHT"

@


1.2
log
@Fix typos in ChangeLogs and update copyright notices
@
text
@d1 206
a206 33
.\" Copyright 1991, 1994 Free Software Foundation, Inc.
.\" See section COPYING for conditions for redistribution
.TH @@PROGRAM@@ 1 "June 1993" "cygnus support" "GNU Development Tools"
.de BP
.sp
.ti \-.2i
\(**
..

.SH NAME
@@PROGRAM@@ \- demangle C++ symbols

.SH SYNOPSIS
.hy 0
.na
.TP
.B @@PROGRAM@@
.RB "[\|" \-_ | \-\-strip-underscores "\|]"
.RB "[\|" "\-s {gnu,lucid,arm} " | " \-\-format={gnu,lucid,arm}" "\|]"
.RB "[\|" \-\-help "\|]"
.RB "[\|" \-\-version "\|]"
.RB "[\|" symbol "...\|]"
.SH DESCRIPTION
The C++ language provides function overloading, which means that you can
write many functions with the same name (providing each takes parameters
of different types).  All C++ function names are encoded into a
low-level assembly label (this process is known as
.I mangling\c
).  The 
.B @@PROGRAM@@
program does the inverse mapping: it decodes (\fIdemangles\fR)
low-level names into user-level names so that the linker can keep
these overloaded functions from clashing.
d210 1
a210 1
label decodes into a C++ name, the C++ name replaces the low-level
d213 111
a323 47
You can use
.B @@PROGRAM@@
to decipher individual symbols by specifying these symbols on the
command line.
.PP
If no
.B symbol
arguments are given,
.B @@PROGRAM@@
reads symbol names from the standard input and writes the demangled
names to the standard output.  All results are printed on the standard
output.
.SH OPTIONS
.TP
.B \-_
.TP
.B \-\-strip\-underscores
On some systems, both the C and C++ compilers put an
underscore in front of every name.  For example, the C name 
.B foo
gets the low-level name 
.BR _foo .
This option removes the leading underscore.

.TP
.B "\-s {gnu,lucid,arm}"
.TP
.B \-\-format={gnu,lucid,arm}
GNU
.B nm
can decode three different methods of mangling, used by different C++
compilers.  This option selects which method it uses: the one used by
the GNU compiler, the one used by the Lucid compiler, or the one
specified by the C++ Annotated Reference Manual.  The default is the
GNU style.

.TP
.B \-\-help
Print a summary of the options to
.B @@PROGRAM@@
and exit.

.TP
.B \-\-version
Print the version number of
.B @@PROGRAM@@
and exit.
a324 27
.SH "SEE ALSO"
.RB "`\|" binutils "\|'" 
entry in 
.B
info\c
\&; 
.I
The GNU Binary Utilities\c
\&, Roland H. Pesch (June 1993).

.SH COPYING
Copyright (c) 1993 Free Software Foundation, Inc.
.PP
Permission is granted to make and distribute verbatim copies of
this manual provided the copyright notice and this permission notice
are preserved on all copies.
.PP
Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided that the
entire resulting derived work is distributed under the terms of a
permission notice identical to this one.
.PP
Permission is granted to copy and distribute translations of this
manual into another language, under the above conditions for modified
versions, except that this permission notice may be included in
translations approved by the Free Software Foundation instead of in
the original English.
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
.\" Copyright (c) 1991 Free Software Foundation
@


1.1.1.1
log
@19990502 sourceware import
@
text
@@

