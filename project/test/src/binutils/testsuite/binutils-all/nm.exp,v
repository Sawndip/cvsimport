head	1.10;
access;
symbols
	binutils-2_24-branch:1.10.0.2
	binutils-2_24-branchpoint:1.10
	binutils-2_21_1:1.5.4.1
	binutils-2_23_2:1.6
	binutils-2_23_1:1.6
	binutils-2_23:1.6
	binutils-2_23-branch:1.6.0.6
	binutils-2_23-branchpoint:1.6
	binutils-2_22_branch:1.6.0.4
	binutils-2_22:1.6
	binutils-2_22-branch:1.6.0.2
	binutils-2_22-branchpoint:1.6
	binutils-2_21:1.5
	binutils-2_21-branch:1.5.0.4
	binutils-2_21-branchpoint:1.5
	binutils-2_20_1:1.5
	binutils-2_20:1.5
	binutils-arc-20081103-branch:1.4.0.10
	binutils-arc-20081103-branchpoint:1.4
	binutils-2_20-branch:1.5.0.2
	binutils-2_20-branchpoint:1.5
	dje-cgen-play1-branch:1.4.0.8
	dje-cgen-play1-branchpoint:1.4
	arc-20081103-branch:1.4.0.6
	arc-20081103-branchpoint:1.4
	binutils-2_19_1:1.4
	binutils-2_19:1.4
	binutils-2_19-branch:1.4.0.4
	binutils-2_19-branchpoint:1.4
	binutils-2_18:1.4
	binutils-2_18-branch:1.4.0.2
	binutils-2_18-branchpoint:1.4
	binutils-csl-coldfire-4_1-32:1.3
	binutils-csl-sourcerygxx-4_1-32:1.3
	binutils-csl-innovasic-fido-3_4_4-33:1.3
	binutils-csl-sourcerygxx-3_4_4-32:1.2
	binutils-csl-coldfire-4_1-30:1.3
	binutils-csl-sourcerygxx-4_1-30:1.3
	binutils-csl-coldfire-4_1-28:1.3
	binutils-csl-sourcerygxx-4_1-29:1.3
	binutils-csl-sourcerygxx-4_1-28:1.3
	binutils-csl-arm-2006q3-27:1.3
	binutils-csl-sourcerygxx-4_1-27:1.3
	binutils-csl-arm-2006q3-26:1.3
	binutils-csl-sourcerygxx-4_1-26:1.3
	binutils-csl-sourcerygxx-4_1-25:1.3
	binutils-csl-sourcerygxx-4_1-24:1.3
	binutils-csl-sourcerygxx-4_1-23:1.3
	binutils-csl-sourcerygxx-4_1-21:1.3
	binutils-csl-arm-2006q3-21:1.3
	binutils-csl-sourcerygxx-4_1-22:1.3
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.3
	binutils-csl-sourcerygxx-4_1-20:1.3
	binutils-csl-arm-2006q3-19:1.3
	binutils-csl-sourcerygxx-4_1-19:1.3
	binutils-csl-sourcerygxx-4_1-18:1.3
	binutils-csl-renesas-4_1-9:1.3
	binutils-csl-sourcerygxx-3_4_4-25:1.2
	binutils-csl-renesas-4_1-8:1.3
	binutils-csl-renesas-4_1-7:1.3
	binutils-csl-renesas-4_1-6:1.3
	binutils-csl-sourcerygxx-4_1-17:1.3
	binutils-csl-sourcerygxx-4_1-14:1.3
	binutils-csl-sourcerygxx-4_1-15:1.3
	binutils-csl-sourcerygxx-4_1-13:1.3
	binutils-2_17:1.3
	binutils-csl-sourcerygxx-4_1-12:1.3
	binutils-csl-sourcerygxx-3_4_4-21:1.3
	binutils-csl-wrs-linux-3_4_4-24:1.2
	binutils-csl-wrs-linux-3_4_4-23:1.2
	binutils-csl-sourcerygxx-4_1-9:1.3
	binutils-csl-sourcerygxx-4_1-8:1.3
	binutils-csl-sourcerygxx-4_1-7:1.3
	binutils-csl-arm-2006q1-6:1.3
	binutils-csl-sourcerygxx-4_1-6:1.3
	binutils-csl-wrs-linux-3_4_4-22:1.2
	binutils-csl-coldfire-4_1-11:1.3
	binutils-csl-sourcerygxx-3_4_4-19:1.3
	binutils-csl-coldfire-4_1-10:1.3
	binutils-csl-sourcerygxx-4_1-5:1.3
	binutils-csl-sourcerygxx-4_1-4:1.3
	binutils-csl-wrs-linux-3_4_4-21:1.2
	binutils-csl-morpho-4_1-4:1.3
	binutils-csl-sourcerygxx-3_4_4-17:1.3
	binutils-csl-wrs-linux-3_4_4-20:1.2
	binutils-2_17-branch:1.3.0.4
	binutils-2_17-branchpoint:1.3
	binutils-csl-2_17-branch:1.3.0.2
	binutils-csl-2_17-branchpoint:1.3
	binutils-csl-gxxpro-3_4-branch:1.2.0.18
	binutils-csl-gxxpro-3_4-branchpoint:1.2
	binutils-2_16_1:1.2
	binutils-csl-arm-2005q1b:1.2
	binutils-2_16:1.2
	binutils-csl-arm-2005q1a:1.2
	binutils-csl-arm-2005q1-branch:1.2.0.16
	binutils-csl-arm-2005q1-branchpoint:1.2
	binutils-2_16-branch:1.2.0.14
	binutils-2_16-branchpoint:1.2
	csl-arm-2004-q3d:1.2
	csl-arm-2004-q3:1.2
	binutils-2_15:1.2
	binutils-2_15-branchpoint:1.2
	csl-arm-2004-q1a:1.2
	csl-arm-2004-q1:1.2
	binutils-2_15-branch:1.2.0.12
	cagney_bfdfile-20040213-branch:1.2.0.10
	cagney_bfdfile-20040213-branchpoint:1.2
	cagney_bigcore-20040122-branch:1.2.0.8
	cagney_bigcore-20040122-branchpoint:1.2
	csl-arm-2003-q4:1.2
	binutils-2_14:1.2
	binutils-2_14-branch:1.2.0.6
	binutils-2_14-branchpoint:1.2
	binutils-2_13_2_1:1.2
	binutils-2_13_2:1.2
	binutils-2_13_1:1.2
	binutils-2_13:1.2
	binutils-2_13-branchpoint:1.2
	binutils-2_13-branch:1.2.0.4
	binutils-2_12_1:1.2
	binutils-2_12:1.2
	binutils-2_12-branch:1.2.0.2
	binutils-2_12-branchpoint:1.2
	cygnus_cvs_20020108_pre:1.2
	binutils-2_11_2:1.1.1.1.4.1
	binutils-2_11_1:1.1.1.1.4.1
	binutils-2_11:1.1.1.1
	x86_64versiong3:1.1.1.1
	binutils-2_11-branch:1.1.1.1.0.4
	binutils-2_10_1:1.1.1.1
	binutils-2_10:1.1.1.1
	binutils-2_10-branch:1.1.1.1.0.2
	binutils-2_10-branchpoint:1.1.1.1
	binutils_latest_snapshot:1.10
	repo-unification-2000-02-06:1.1.1.1
	binu_ss_19990721:1.1.1.1
	binu_ss_19990602:1.1.1.1
	binu_ss_19990502:1.1.1.1
	cygnus:1.1.1;
locks; strict;
comment	@# @;


1.10
date	2013.08.22.11.29.43;	author nickc;	state Exp;
branches;
next	1.9;

1.9
date	2013.08.20.22.50.11;	author hp;	state Exp;
branches;
next	1.8;

1.8
date	2013.08.20.01.29.44;	author hp;	state Exp;
branches;
next	1.7;

1.7
date	2013.08.19.15.08.52;	author gingold;	state Exp;
branches;
next	1.6;

1.6
date	2011.05.18.16.35.02;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	2009.09.02.07.22.32;	author amodra;	state Exp;
branches
	1.5.4.1;
next	1.4;

1.4
date	2007.07.05.16.54.45;	author nickc;	state Exp;
branches;
next	1.3;

1.3
date	2005.05.08.14.17.40;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.13.06.43.59;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	99.05.03.07.29.11;	author rth;	state Exp;
branches
	1.1.1.1;
next	;

1.5.4.1
date	2011.05.29.04.51.30;	author amodra;	state Exp;
branches;
next	;

1.1.1.1
date	99.05.03.07.29.11;	author rth;	state Exp;
branches
	1.1.1.1.4.1;
next	;

1.1.1.1.4.1
date	2001.06.07.03.12.29;	author amodra;	state Exp;
branches;
next	;


desc
@@


1.10
log
@	* binutils-all/nm.exp: --size-sort test: Add more ELF-like
	targets.
	* binutils-all/nm-1.s: Use .byte instead of .long.
	Provide a terminating symbol.
@
text
@#   Copyright 1993, 1994, 1995, 1997, 2007, 2009 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.

# Please email any bugs, comments, and/or additions to this file to:
# bug-dejagnu@@prep.ai.mit.edu

# This file was written by Rob Savoye <rob@@cygnus.com>
# and rewritten by Ian Lance Taylor <ian@@cygnus.com>

if ![is_remote host] {
    if {[which $NM] == 0} then {
        perror "$NM does not exist"
        return
    }
}

send_user "Version [binutil_version $NM]"


if {![binutils_assemble $srcdir/$subdir/bintest.s tmpdir/bintest.o]} then {
    return
}

if [is_remote host] {
    set tempfile [remote_download host tmpdir/bintest.o]
} else {
    set tempfile tmpdir/bintest.o
}

# Test nm with no arguments.

# This test does not work correctly on ECOFF targets, because ECOFF
# stores most symbols twice, which messes up the nm output.
setup_xfail "alpha*-*-osf*" "alpha*-*-netware*"
setup_xfail "mips*-*-ultrix*" "mips*-*-ecoff*" "mips*-*-irix4*"
setup_xfail "mips*-*-riscos*" "mips*-*-sysv3*" "mips*-sony-bsd*"

# This test does not work correctly on XCOFF targets, because XCOFF
# does not enter static symbols in the symbol table.
setup_xfail "*-*-aix*"

set got [binutils_run $NM "$NMFLAGS $tempfile"]

if [info exists vars] then { unset vars }
while {[regexp "(\[a-zA-Z\]) (\[a-z_\]*_symbol)(.*)" $got all type symbol rest]} {
    set vars($symbol) $type
    set got $rest
}

if {![info exists vars(text_symbol)] \
     || $vars(text_symbol) != "T" \
     || ![info exists vars(data_symbol)] \
     || $vars(data_symbol) != "D" \
     || ![info exists vars(common_symbol)] \
     || $vars(common_symbol) != "C" \
     || ![info exists vars(external_symbol)] \
     || $vars(external_symbol) != "U" \
     || ![info exists vars(static_text_symbol)] \
     || $vars(static_text_symbol) != "t" \
     || ![info exists vars(static_data_symbol)] \
     || $vars(static_data_symbol) != "d"} {
    fail "nm (no arguments)"
} else {
    pass "nm (no arguments)"
}

# Test nm -g

set got [binutils_run $NM "$NMFLAGS -g $tempfile"]

if [info exists vars] then { unset vars }
while {[regexp "(\[a-z_\]*_symbol)(.*)" $got all symbol rest]} {
    set vars($symbol) 1
    set got $rest
}

if {![info exists vars(text_symbol)] \
     || ![info exists vars(data_symbol)] \
     || ![info exists vars(common_symbol)] \
     || ![info exists vars(external_symbol)] \
     || [info exists vars(static_text_symbol)] \
     || [info exists vars(static_data_symbol)]} {
    fail "nm -g"
} else {
    pass "nm -g"
}

if [is_elf_format] {
    # PR binutils/12753
    # Test nm -g on a unique global symbol.

    # Only some targets support unique symbols.
    if {([istarget "i?86-*-*"]
	 || [istarget "x86_64-*-*"]
	 || [istarget "arm-*-*"]
	 || [istarget "powerpc*-*-*"]
	 || [istarget "sparc*-*-*"])} then {

	if {![binutils_assemble $srcdir/$subdir/unique.s tmpdir/unique.o]} then {
	    fail "nm -g on unique symbols (assembling)"
	} else {
	    if [is_remote host] {
		set tmpfile [remote_download host tmpdir/unique.o]
	    } else {
		set tmpfile tmpdir/unique.o
	    }
	
	    set got [binutils_run $NM "$NMFLAGS -g $tmpfile"]

	    if [regexp "u foo" $got] then {
		pass "nm -g on unique symbols"
	    } else {
		fail "nm -g on unique symbols"
	    }

	    if { $verbose < 1 } {
		remote_file host delete "tmpdir/unique.o"
	    }
	}
   }
}

# Test nm -P

# This test does not work correctly on ECOFF targets, because ECOFF
# stores most symbols twice, which messes up the nm output.
setup_xfail "alpha*-*-osf*" "alpha*-*-netware*"
setup_xfail "mips*-*-ultrix*" "mips*-*-ecoff*" "mips*-*-irix4*"
setup_xfail "mips*-*-riscos*" "mips*-*-sysv3*" "mips*-sony-bsd*"

# This test does not work correctly on XCOFF targets, because XCOFF
# does not enter static symbols in the symbol table.
setup_xfail "*-*-aix*"

set got [binutils_run $NM "$NMFLAGS -P $tempfile"]

set want "common_symbol C \[0\]*4.*data_symbol D \[0-9a-fA-F\]*.*external_symbol U.*static_data_symbol d \[0-9a-fA-F\]*.*static_text_symbol t \[0-9a-fA-F\]*.*text_symbol T \[0-9a-fA-F\]*"

if [regexp $want $got] then {
    pass "nm -P"
} else {
    fail "nm -P"
}

# Test nm --size-sort

# The target exceptions here are intended for targets that have ELF as
# an intermediate format or otherwise require the ELF-variant syntax
# for proper size annotation.  It would be nice if is_elf_format found
# all the ELF variants, but adding the patterns here to that proc then
# introduces a whole slew of new regressions in the GAS and LD testsuites.
if {   [is_elf_format]
    || [istarget *-*-dragonfly*]
    || [istarget *-*-*elf]
    || [istarget *-*-freebsd*]
    || [istarget *-*-lynxos*]
    || [istarget "mmix-knuth-mmixware"]
    || [istarget *-*-netware*]
    || [istarget *-*-nto*]
    || [istarget *-*-rdos*]
    || [istarget *-*-tpf*]
    || [istarget *-*-uclinux*]
    || [istarget ia64-*-*vms*]
    || [istarget *-*-vxworks*] } {
    set nm_1_src "nm-elf-1.s"
} else {
    set nm_1_src "nm-1.s"
}

if {![binutils_assemble $srcdir/$subdir/$nm_1_src tmpdir/nm-1.o]} then {
    return
}

if [is_remote host] {
    set tempfile [remote_download host tmpdir/nm-1.o]
} else {
    set tempfile tmpdir/nm-1.o
}

# This test does not work correctly on ECOFF targets, because ECOFF
# stores most symbols twice, which messes up the nm output.
setup_xfail "alpha*-*-osf*" "alpha*-*-netware*"
setup_xfail "mips*-*-ultrix*" "mips*-*-ecoff*" "mips*-*-irix4*"
setup_xfail "mips*-*-riscos*" "mips*-*-sysv3*" "mips*-sony-bsd*"

set got [binutils_run $NM "$NMFLAGS --size-sort $tempfile"]

set want "0*4 T text_symbol3.*0*8 T text_symbol2.*0*c T text_symbol1"

if [regexp $want $got] then {
    pass "nm --size-sort"
} else {
    fail "nm --size-sort"
}

# There are certainly other tests that could be run.
@


1.9
log
@	* binutils-all/nm.exp: Revert last change.  Instead use nm-elf-1.s
	for mmix-knuth-mmixware.
@
text
@d162 16
a177 2
# for proper size annotation.
if {[is_elf_format] || [istarget "mmix-knuth-mmixware"]} {
@


1.8
log
@	* binutils-all/nm.exp: Xfail test for nm --size-sort for
	mmix-knuth-mmixware.
@
text
@d160 4
a163 1
if [is_elf_format] {
a184 4
# It also doesn't work with the MMO object format, because a MMO
# symbol has no size information.
setup_xfail "mmix-knuth-mmixware"

@


1.7
log
@binutils/
2013-08-19  Tristan Gingold  <gingold@@adacore.com>

	* nm.c (print_size_symbols): Directly get symbol size.


binutils/testsuite/
2013-08-19  Tristan Gingold  <gingold@@adacore.com>

	* binutils-all/nm.exp: Add a test for nm --size-sort
	* binutils-all/nm-elf-1.s: New file.
	* binutils-all/nm-1.s: New file.
@
text
@d182 4
@


1.6
log
@	PR binutils/12753
	* nm.c (filter_symbols): Treat unique symbols as global symbols.
	* doc/binutils.texi (nm): Mention that some lowercase letters
	actually indicate global symbols.

	* lib/utils-lib.exp (run_dump_test): Allow nm as a program.
	* binutils-all/nm.exp: Test running "nm -g" on an object file
	containing a unique symbol.
@
text
@d158 34
@


1.5
log
@update copyright dates
@
text
@d101 35
@


1.5.4.1
log
@	PR 12365
	PR 12613
	PR 12632
	PR 12739
	PR 12753
	PR 12760
	PR 12763
Apply fix from mainline along with assorted other small fixes.
@
text
@a100 35
if [is_elf_format] {
    # PR binutils/12753
    # Test nm -g on a unique global symbol.

    # Only some targets support unique symbols.
    if {([istarget "i?86-*-*"]
	 || [istarget "x86_64-*-*"]
	 || [istarget "arm-*-*"]
	 || [istarget "powerpc*-*-*"]
	 || [istarget "sparc*-*-*"])} then {

	if {![binutils_assemble $srcdir/$subdir/unique.s tmpdir/unique.o]} then {
	    fail "nm -g on unique symbols (assembling)"
	} else {
	    if [is_remote host] {
		set tmpfile [remote_download host tmpdir/unique.o]
	    } else {
		set tmpfile tmpdir/unique.o
	    }
	
	    set got [binutils_run $NM "$NMFLAGS -g $tmpfile"]

	    if [regexp "u foo" $got] then {
		pass "nm -g on unique symbols"
	    } else {
		fail "nm -g on unique symbols"
	    }

	    if { $verbose < 1 } {
		remote_file host delete "tmpdir/unique.o"
	    }
	}
   }
}

@


1.4
log
@Change sources over to using GPLv3
@
text
@d1 1
a1 1
#   Copyright 1993, 1994, 1995, 1997, 2007 Free Software Foundation, Inc.
@


1.3
log
@Update FSF address
@
text
@d1 1
a1 1
#   Copyright 1993, 1994, 1995, 1997 Free Software Foundation, Inc.
d5 1
a5 1
# the Free Software Foundation; either version 2 of the License, or
@


1.2
log
@Fix typos in ChangeLogs and update copyright notices
@
text
@d15 1
a15 1
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#   Copyright (C) 1993, 1994, 1996, 1997 Free Software Foundation, Inc.
@


1.1.1.1
log
@19990502 sourceware import
@
text
@@


1.1.1.1.4.1
log
@Update copyright notices.
@
text
@d1 1
a1 1
#   Copyright 1993, 1994, 1995, 1997 Free Software Foundation, Inc.
@


