head	1.17;
access;
symbols
	binutils-2_24-branch:1.17.0.4
	binutils-2_24-branchpoint:1.17
	binutils-2_21_1:1.15
	binutils-2_23_2:1.17
	binutils-2_23_1:1.17
	binutils-2_23:1.17
	binutils-2_23-branch:1.17.0.2
	binutils-2_23-branchpoint:1.17
	binutils-2_22_branch:1.15.0.6
	binutils-2_22:1.15
	binutils-2_22-branch:1.15.0.4
	binutils-2_22-branchpoint:1.15
	binutils-2_21:1.15
	binutils-2_21-branch:1.15.0.2
	binutils-2_21-branchpoint:1.15
	binutils-2_20_1:1.11
	binutils-2_20:1.11
	binutils-arc-20081103-branch:1.10.0.10
	binutils-arc-20081103-branchpoint:1.10
	binutils-2_20-branch:1.11.0.2
	binutils-2_20-branchpoint:1.11
	dje-cgen-play1-branch:1.10.0.8
	dje-cgen-play1-branchpoint:1.10
	arc-20081103-branch:1.10.0.6
	arc-20081103-branchpoint:1.10
	binutils-2_19_1:1.10
	binutils-2_19:1.10
	binutils-2_19-branch:1.10.0.4
	binutils-2_19-branchpoint:1.10
	binutils-2_18:1.10
	binutils-2_18-branch:1.10.0.2
	binutils-2_18-branchpoint:1.10
	binutils-csl-coldfire-4_1-32:1.7
	binutils-csl-sourcerygxx-4_1-32:1.7
	binutils-csl-innovasic-fido-3_4_4-33:1.7
	binutils-csl-sourcerygxx-3_4_4-32:1.6
	binutils-csl-coldfire-4_1-30:1.7
	binutils-csl-sourcerygxx-4_1-30:1.7
	binutils-csl-coldfire-4_1-28:1.7
	binutils-csl-sourcerygxx-4_1-29:1.7
	binutils-csl-sourcerygxx-4_1-28:1.7
	binutils-csl-arm-2006q3-27:1.7
	binutils-csl-sourcerygxx-4_1-27:1.7
	binutils-csl-arm-2006q3-26:1.7
	binutils-csl-sourcerygxx-4_1-26:1.7
	binutils-csl-sourcerygxx-4_1-25:1.7
	binutils-csl-sourcerygxx-4_1-24:1.7
	binutils-csl-sourcerygxx-4_1-23:1.7
	binutils-csl-sourcerygxx-4_1-21:1.7
	binutils-csl-arm-2006q3-21:1.7
	binutils-csl-sourcerygxx-4_1-22:1.7
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.7
	binutils-csl-sourcerygxx-4_1-20:1.7
	binutils-csl-arm-2006q3-19:1.7
	binutils-csl-sourcerygxx-4_1-19:1.7
	binutils-csl-sourcerygxx-4_1-18:1.7
	binutils-csl-renesas-4_1-9:1.7
	binutils-csl-sourcerygxx-3_4_4-25:1.6
	binutils-csl-renesas-4_1-8:1.7
	binutils-csl-renesas-4_1-7:1.7
	binutils-csl-renesas-4_1-6:1.7
	binutils-csl-sourcerygxx-4_1-17:1.7
	binutils-csl-sourcerygxx-4_1-14:1.7
	binutils-csl-sourcerygxx-4_1-15:1.7
	binutils-csl-sourcerygxx-4_1-13:1.7
	binutils-2_17:1.7
	binutils-csl-sourcerygxx-4_1-12:1.7
	binutils-csl-sourcerygxx-3_4_4-21:1.7
	binutils-csl-wrs-linux-3_4_4-24:1.6
	binutils-csl-wrs-linux-3_4_4-23:1.6
	binutils-csl-sourcerygxx-4_1-9:1.7
	binutils-csl-sourcerygxx-4_1-8:1.7
	binutils-csl-sourcerygxx-4_1-7:1.7
	binutils-csl-arm-2006q1-6:1.7
	binutils-csl-sourcerygxx-4_1-6:1.7
	binutils-csl-wrs-linux-3_4_4-22:1.6
	binutils-csl-coldfire-4_1-11:1.7
	binutils-csl-sourcerygxx-3_4_4-19:1.7
	binutils-csl-coldfire-4_1-10:1.7
	binutils-csl-sourcerygxx-4_1-5:1.7
	binutils-csl-sourcerygxx-4_1-4:1.7
	binutils-csl-wrs-linux-3_4_4-21:1.6
	binutils-csl-morpho-4_1-4:1.7
	binutils-csl-sourcerygxx-3_4_4-17:1.7
	binutils-csl-wrs-linux-3_4_4-20:1.6
	binutils-2_17-branch:1.7.0.4
	binutils-2_17-branchpoint:1.7
	binutils-csl-2_17-branch:1.7.0.2
	binutils-csl-2_17-branchpoint:1.7
	binutils-csl-gxxpro-3_4-branch:1.6.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.6
	binutils-2_16_1:1.6
	binutils-csl-arm-2005q1b:1.6
	binutils-2_16:1.6
	binutils-csl-arm-2005q1a:1.6
	binutils-csl-arm-2005q1-branch:1.6.0.4
	binutils-csl-arm-2005q1-branchpoint:1.6
	binutils-2_16-branch:1.6.0.2
	binutils-2_16-branchpoint:1.6
	csl-arm-2004-q3d:1.5
	csl-arm-2004-q3:1.3
	binutils-2_15:1.1
	binutils-2_15-branchpoint:1.1
	csl-arm-2004-q1a:1.1
	csl-arm-2004-q1:1.1
	binutils-2_15-branch:1.1.0.8
	cagney_bfdfile-20040213-branch:1.1.0.6
	cagney_bfdfile-20040213-branchpoint:1.1
	cagney_bigcore-20040122-branch:1.1.0.4
	cagney_bigcore-20040122-branchpoint:1.1
	csl-arm-2003-q4:1.1
	binutils-2_14:1.1
	binutils-2_14-branch:1.1.0.2
	binutils-2_14-branchpoint:1.1
	binutils_latest_snapshot:1.17;
locks; strict;
comment	@# @;


1.17
date	2012.02.14.02.40.39;	author amodra;	state Exp;
branches;
next	1.16;

1.16
date	2012.02.11.20.02.02;	author ktietz;	state Exp;
branches;
next	1.15;

1.15
date	2010.04.30.19.30.55;	author hjl;	state Exp;
branches;
next	1.14;

1.14
date	2010.04.27.17.28.15;	author ktietz;	state Exp;
branches;
next	1.13;

1.13
date	2009.10.28.17.21.06;	author ktietz;	state Exp;
branches;
next	1.12;

1.12
date	2009.10.23.14.53.57;	author ktietz;	state Exp;
branches;
next	1.11;

1.11
date	2009.09.02.07.22.32;	author amodra;	state Exp;
branches;
next	1.10;

1.10
date	2007.07.05.16.54.45;	author nickc;	state Exp;
branches;
next	1.9;

1.9
date	2007.01.08.17.21.49;	author nickc;	state Exp;
branches;
next	1.8;

1.8
date	2006.09.20.11.35.11;	author nickc;	state Exp;
branches;
next	1.7;

1.7
date	2005.05.08.14.17.40;	author nickc;	state Exp;
branches;
next	1.6;

1.6
date	2005.03.03.11.46.14;	author amodra;	state Exp;
branches;
next	1.5;

1.5
date	2004.10.28.14.58.26;	author hjl;	state Exp;
branches;
next	1.4;

1.4
date	2004.10.23.17.26.36;	author nickc;	state Exp;
branches;
next	1.3;

1.3
date	2004.07.12.17.07.55;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	2004.05.12.03.28.45;	author bje;	state Exp;
branches;
next	1.1;

1.1
date	2002.11.06.19.36.18;	author nickc;	state Exp;
branches;
next	;


desc
@@


1.17
log
@	* binutils-all/dlltool.exp: Add setup_xfail.
@
text
@# Copyright 2002, 2004, 2006, 2007, 2009 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.

if {![istarget "i*86-*-*"]
    && ![istarget "x86_64-*-mingw*"]
    && ![istarget "arm-*-pe*"]} {
    return
}

if {![istarget "i*86-*-*pe*"] \
    && ![istarget "i*86-*-cygwin*"] \
    && ![istarget "i*86-*-mingw32*"] \
    && ![istarget "arm-*-pe*"] \
    && ![istarget "x86_64-*-mingw*"] } {
    set target_xfail "yes"
} else {
    set target_xfail "no"
}

if {![info exists DLLTOOL]} then {
    return
}

if {[which $DLLTOOL] == 0} then {
    return
}

verbose "$DLLTOOL --leading-underscore -d $srcdir/$subdir/fastcall.def" 1
catch "exec $DLLTOOL --leading-underscore -d $srcdir/$subdir/fastcall.def" err

if ![string match "" $err] then {
    send_log "$err\n"
    verbose "$err" 1
    fail "dlltool (fastcall export)"
} else {
    pass "dlltool (fastcall export)"
}

if { "$target_xfail" == "yes" } {
    setup_xfail *-*
}

verbose "$DLLTOOL -l libversion.a --def $srcdir/$subdir/version.def" 1
catch "exec $DLLTOOL -l libersion.a --def $srcdir/$subdir/version.def" err

if ![string match "" $err] then {
    send_log "$err\n"
    verbose "$err" 1
    fail "dlltool (version.dll)"
} else {
    pass "dlltool (version.dll)"
}

if { "$target_xfail" == "yes" } {
    setup_xfail *-*
}

verbose "$DLLTOOL -p prefix --leading-underscore -l tmpdir/libalias.a -d $srcdir/$subdir/alias.def $dlltool_gas_flag" 1
catch "exec $DLLTOOL -p prefix --leading-underscore -l tmpdir/libalias.a -d $srcdir/$subdir/alias.def $dlltool_gas_flag" err

if ![string match "" $err] then {
    send_log "$err\n"
    verbose "$err" 1
    fail "dlltool -p (execution)"
    continue
}

pass "dlltool -p (execution)"

set got [binutils_run $NM "tmpdir/libalias.a"]
set want "00000000 I __imp__prefix_symbol.*00000000 T _prefix_symbol.*00000000 I __imp__symbol.*00000000 T _symbol"

if [regexp $want $got] then {
    pass "dlltool -p (symbol names)"
} else {
    fail "dlltool -p (symbol names)"
}

set got [binutils_run $OBJDUMP "-s -j .idata\$6 tmpdir/libalias.a"]
set want "(Contents of section .idata\\\$6:.*\\.\\.symbol\\.\\..*){2,2}"

if [regexp $want $got] then {
    pass "dlltool -p (import name)"
} else {
    fail "dlltool -p (import name)"
}

verbose "$DLLTOOL -p prefix --leading-underscore -l tmpdir/libalias2.a -d $srcdir/$subdir/alias-2.def $dlltool_gas_flag" 1
catch "exec $DLLTOOL -p prefix --leading-underscore -l tmpdir/libalias2.a -d $srcdir/$subdir/alias-2.def $dlltool_gas_flag" err

if ![string match "" $err] then {
    send_log "$err\n"
    verbose "$err" 1
    fail "dlltool -p (execution) alias-2.def"
    continue
}

pass "dlltool -p (execution) alias-2.def"

set got [binutils_run $NM "tmpdir/libalias2.a"]
set want "00000000 I __imp__prefix_symbol.*00000000 T _prefix_symbol.*00000000 I __imp__symbol.*00000000 T _symbol"

if [regexp $want $got] then {
    pass "dlltool -p (symbol names) alias-2.def"
} else {
    fail "dlltool -p (symbol names) alias-2.def"
}

set got [binutils_run $OBJDUMP "-s -j .idata\$6 tmpdir/libalias2.a"]
set want "(Contents of section .idata\\\$6:.*\\.\\.something\\..*){2,2}"

if [regexp $want $got] then {
    pass "dlltool -p (import name) alias-2.def"
} else {
    fail "dlltool -p (import name) alias-2.def"
}

# Here we test explicit without leading underscore

verbose "$DLLTOOL --no-leading-underscore -d $srcdir/$subdir/fastcall.def" 1
catch "exec $DLLTOOL --no-leading-underscore -d $srcdir/$subdir/fastcall.def" err

if ![string match "" $err] then {
    send_log "$err\n"
    verbose "$err" 1
    fail "dlltool (fastcall export no leading underscore)"
} else {
    pass "dlltool (fastcall export no leading underscore)"
}

if { "$target_xfail" == "yes" } {
    setup_xfail *-*
}

verbose "$DLLTOOL --no-leading-underscore -p prefix -l tmpdir/libalias_nu.a -d $srcdir/$subdir/alias.def $dlltool_gas_flag" 1
catch "exec $DLLTOOL --no-leading-underscore -p prefix -l tmpdir/libalias_nu.a -d $srcdir/$subdir/alias.def $dlltool_gas_flag" err

if ![string match "" $err] then {
    send_log "$err\n"
    verbose "$err" 1
    fail "dlltool -p (execution no leading underscore)"
    continue
}

pass "dlltool -p (execution no leading underscore)"

set got [binutils_run $NM "tmpdir/libalias_nu.a"]
set want "00000000 I __imp_prefixsymbol.*00000000 T prefixsymbol.*00000000 I __imp_symbol.*00000000 T symbol"

if [regexp $want $got] then {
    pass "dlltool -p (symbol names no leading underscore)"
} else {
    fail "dlltool -p (symbol names no leading underscore)"
}

set got [binutils_run $OBJDUMP "-s -j .idata\$6 tmpdir/libalias_nu.a"]
set want "(Contents of section .idata\\\$6:.*\\.\\.symbol\\.\\..*){2,2}"

if [regexp $want $got] then {
    pass "dlltool -p (import name no leading underscore)"
} else {
    fail "dlltool -p (import name no leading underscore)"
}

verbose "$DLLTOOL --no-leading-underscore -p prefix -l tmpdir/libalias_nu2.a -d $srcdir/$subdir/alias-2.def $dlltool_gas_flag" 1
catch "exec $DLLTOOL --no-leading-underscore -p prefix -l tmpdir/libalias_nu2.a -d $srcdir/$subdir/alias-2.def $dlltool_gas_flag" err

if ![string match "" $err] then {
    send_log "$err\n"
    verbose "$err" 1
    fail "dlltool -p (execution no leading underscore) alias-2.def"
    continue
}

pass "dlltool -p (execution no leading underscore) alias-2.def"

set got [binutils_run $NM "tmpdir/libalias_nu2.a"]
set want "00000000 I __imp_prefixsymbol.*00000000 T prefixsymbol.*00000000 I __imp_symbol.*00000000 T symbol"

if [regexp $want $got] then {
    pass "dlltool -p (symbol names no leading underscore) alias-2.def"
} else {
    fail "dlltool -p (symbol names no leading underscore) alias-2.def"
}

set got [binutils_run $OBJDUMP "-s -j .idata\$6 tmpdir/libalias_nu2.a"]
set want "(Contents of section .idata\\\$6:.*\\.\\.something\\..*){2,2}"

if [regexp $want $got] then {
    pass "dlltool -p (import name no leading underscore) alias-2.def"
} else {
    fail "dlltool -p (import name no leading underscore) alias-2.def"
}

# Now we test with leading underscore
verbose "$DLLTOOL --leading-underscore -d $srcdir/$subdir/fastcall.def" 1
catch "exec $DLLTOOL --leading-underscore -d $srcdir/$subdir/fastcall.def" err

if ![string match "" $err] then {
    send_log "$err\n"
    verbose "$err" 1
    fail "dlltool (fastcall export leading underscore)"
} else {
    pass "dlltool (fastcall export leading underscore)"
}

if { "$target_xfail" == "yes" } {
    setup_xfail *-*
}

verbose "$DLLTOOL --leading-underscore -p prefix -l tmpdir/libalias_u.a -d $srcdir/$subdir/alias.def $dlltool_gas_flag" 1
catch "exec $DLLTOOL --leading-underscore -p prefix -l tmpdir/libalias_u.a -d $srcdir/$subdir/alias.def $dlltool_gas_flag" err

if ![string match "" $err] then {
    send_log "$err\n"
    verbose "$err" 1
    fail "dlltool -p (execution leading underscore)"
    continue
}

pass "dlltool -p (execution leading-underscore)"

set got [binutils_run $NM "tmpdir/libalias_u.a"]
set want "00000000 I __imp__prefix_symbol.*00000000 T _prefix_symbol.*00000000 I __imp__symbol.*00000000 T _symbol"

if [regexp $want $got] then {
    pass "dlltool -p (symbol names leading underscore)"
} else {
    fail "dlltool -p (symbol names leading underscore)"
}

set got [binutils_run $OBJDUMP "-s -j .idata\$6 tmpdir/libalias_u.a"]
set want "(Contents of section .idata\\\$6:.*\\.\\.symbol\\..*){2,2}"

if [regexp $want $got] then {
    pass "dlltool -p (import name leading underscore)"
} else {
    fail "dlltool -p (import name leading underscore)"
}

verbose "$DLLTOOL --leading-underscore -p prefix -l tmpdir/libalias_u2.a -d $srcdir/$subdir/alias-2.def $dlltool_gas_flag" 1
catch "exec $DLLTOOL --leading-underscore -p prefix -l tmpdir/libalias_u2.a -d $srcdir/$subdir/alias-2.def $dlltool_gas_flag" err

if ![string match "" $err] then {
    send_log "$err\n"
    verbose "$err" 1
    fail "dlltool -p (execution) alias-2.def"
    continue
}

pass "dlltool -p (execution leading underscore) alias-2.def"

set got [binutils_run $NM "tmpdir/libalias_u2.a"]
set want "00000000 I __imp__prefix_symbol.*00000000 T _prefix_symbol.*00000000 I __imp__symbol.*00000000 T _symbol"

if [regexp $want $got] then {
    pass "dlltool -p (symbol names leading underscore) alias-2.def"
} else {
    fail "dlltool -p (symbol names leading underscore) alias-2.def"
}

set got [binutils_run $OBJDUMP "-s -j .idata\$6 tmpdir/libalias_u2.a"]
set want "(Contents of section .idata\\\$6:.*\\.\\.something\\..*){2,2}"

if [regexp $want $got] then {
    pass "dlltool -p (import name leading underscore) alias-2.def"
} else {
    fail "dlltool -p (import name leading underscore) alias-2.def"
}
@


1.16
log
@ChangeLog binutils

2012-02-11  Kai Tietz  <ktietz@@redhat.com>

	PR binutils/13657
	* defparse.y (%union): New type id_const.
	(opt_name2): New rule.
	(keyword_as_name): New rule.
	(opt_name): Adjust rule.
	(opt_import_name): Likewise.
	(opt_equal_name): Likewise.

ChangeLog binutils/testsuite

2012-02-11  Kai Tietz  <ktietz@@redhat.com>

	* binutils-all/version.def: New file.
	* binutils-all/dlltool.exp: Add version-dll test.

ChangeLog ld

2012-02-11  Kai Tietz  <ktietz@@redhat.com>

	* deffilep.y (%union): New type id_const.
	(opt_name2): New rule.
	(keyword_as_name): New rule.
	(dot_name): Replaced by opt_name2 rule.
	(opt_name): Adjust rule.
	(opt_equal_name): Likewise.
@
text
@d67 4
@


1.15
log
@Add a missing `"'.

2010-04-30  H.J. Lu  <hongjiu.lu@@intel.com>

	* binutils-all/dlltool.exp: Add a missing `"'.
@
text
@d56 11
@


1.14
log
@2010-04-27  Kai Tietz  <kai.tietz@@onevision.com>

	* dlltool.c (main): Query for bfd's underscoring default for
	default target case.

2010-04-27  Kai Tietz  <kai.tietz@@onevision.com>

	* binutils-all/dlltool.exp: Allow test for
	arm-wince-pe target.
@
text
@d17 3
a19 1
if {![istarget "i*86-*-*"] && ![istarget "x86_64-*-mingw*"] && ![istarget "arm-*-pe*]} {
@


1.13
log
@2009-10-28  Kai Tietz <kai.tietz@@onevision.com>

	* binutils-all/dlltool.exp: Add tests for --no-leading-underscore
	and --leading-underscore option for dlltool.
@
text
@d17 1
a17 1
if {![istarget "i*86-*-*"] && ![istarget "x86_64-*-mingw*"] } {
d24 1
d39 2
a40 2
verbose "$DLLTOOL -d $srcdir/$subdir/fastcall.def" 1
catch "exec $DLLTOOL -d $srcdir/$subdir/fastcall.def" err
d54 2
a55 2
verbose "$DLLTOOL -p prefix -l tmpdir/libalias.a -d $srcdir/$subdir/alias.def $dlltool_gas_flag" 1
catch "exec $DLLTOOL -p prefix -l tmpdir/libalias.a -d $srcdir/$subdir/alias.def $dlltool_gas_flag" err
d84 2
a85 2
verbose "$DLLTOOL -p prefix -l tmpdir/libalias2.a -d $srcdir/$subdir/alias-2.def $dlltool_gas_flag" 1
catch "exec $DLLTOOL -p prefix -l tmpdir/libalias2.a -d $srcdir/$subdir/alias-2.def $dlltool_gas_flag" err
@


1.12
log
@2009-10-23  Kai Tietz  <kai.tietz@@onevision.com>

	* deflex.l: Allow '<' and '>' in ID names.

	* defparse.y (EQUAL): New token constant.
	(opt_import_name): New rule for emptry or '==' ID.
	(expline): Add opt_import_name as last line element.
	(impline): Likewise.
	* dlltool.c (ifunct): New member its_name.
	(export): Likewise.
	(append_import): Add its_name argument.
	(defexports): Likewise.
	(defimport): Likewise.
	(scan_drectve_symbols): Adjust calls to def_exports.
	(dump_def_info): Print new optinal import/export table
	symbol name.
	(generate_idata_ofile): Use its_name member.
	(make_one_lib_file): Likewise.
	(nfunc): Take its_name in account on sort.
	* dlltool.h (def_exports): Add its_name as argument.
	(def_import): Likewise.
	* doc/binutils.texi: Add new def file syntax extension.
	* deflex.l (EQUAL): Add rule for '=='.
	* NEWS: Mention new feature.

2009-10-23  Kai Tietz  <kai.tietz@@onevision.com>

	* binutils-all/dlltool.exp: Add new test.
	* binutils-all/alias-2.def: New file.
@
text
@d112 153
@


1.11
log
@update copyright dates
@
text
@d82 30
@


1.10
log
@Change sources over to using GPLv3
@
text
@d1 1
a1 1
# Copyright 2002, 2004, 2006, 2007 Free Software Foundation, Inc.
@


1.9
log
@Renamed target x86_64-*-mingw64 to x86_64-*-mingw*.
@
text
@d1 1
a1 1
# Copyright 2002, 2004, 2006 Free Software Foundation, Inc.
d5 1
a5 1
# the Free Software Foundation; either version 2 of the License, or
@


1.8
log
@Add x86_64-mingw64 target
@
text
@d17 1
a17 1
if {![istarget "i*86-*-*"] && ![istarget "x86_64-*-mingw64*"] } {
d24 1
a24 1
    && ![istarget "x86_64-*-mingw64*"] } {
@


1.7
log
@Update FSF address
@
text
@d1 1
a1 1
# Copyright 2002, 2004 Free Software Foundation, Inc.
d17 1
a17 1
if {![istarget "i*86-*-*"]} {
d23 2
a24 1
    && ![istarget "i*86-*-mingw32*"] } {
@


1.6
log
@update copyright dates
@
text
@d15 1
a15 1
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
@


1.5
log
@2004-10-28  H.J. Lu  <hongjiu.lu@@intel.com>

	* binutils-all/dlltool.exp: Set XFAIL if $target_xfail is yes.
@
text
@d1 1
a1 1
# Copyright 2002 Free Software Foundation, Inc.
@


1.4
log
@* dlltool.c: Include <assert.h>.
(PREFIX_ALIAS_BASE): Define.
(struct export): Add member import_name;
(def_exports): Set import_name.
(make_one_lib_file): Remove prefix alias code, use import_name in .idata$6.
(gen_lib_file): Create and delete aliases.

* binutils-all/alias.def: New file.
* binutils-all/dlltool.exp: Two new -p tests.
* config/default.exp (dlltool_gas_flag): New variable.
Copy gas and lds executables into tmpdir/gas directory rather than making
symlinks which might not be supported by the host OS.
Attempt to handle the case where the host OS does not use the .exe extension
but the target OS does.
* lib/utils-lib.exp (exe_ext): New procedure.
@
text
@d48 4
@


1.3
log
@dlltool.c (ext_prefix_alias): New global variable.
 (make_one_lib_file): Add aliases with prefixes for external and import
 definitions.
 (usage): Document -p option.
 (long_options): Add --ext-prefix-alias option.
 (main): Handle -p.
* doc/binutils.texi: Document new switch.
* NEWS: Mention new switch.
@
text
@d44 2
a45 1
    continue
d48 2
a49 4
pass "dlltool (fastcall export)"

verbose "$DLLTOOL -p foo -d $srcdir/$subdir/fastcall.def" 1
catch "exec $DLLTOOL -p foo -d $srcdir/$subdir/fastcall.def" err
d54 1
a54 1
    fail "dlltool (aliased export)"
d58 19
a76 1
pass "dlltool (aliased export)"
@


1.2
log
@	* binutils-all/ar.exp: Remove stray semicolons.
	* binutils-all/dlltool.exp: Likewise.
	* binutils-all/objcopy.exp: Likewise.
	* binutils-all/readelf.exp: Likewise.
	* binutils-all/windres/windres.exp: Likewise.
	* lib/utils-lib.exp: Likewise.
@
text
@d48 12
@


1.1
log
@Adds support for fastcall symbols as used on Microsoft Windows platforms
(i386)
@
text
@d44 1
a44 1
    continue;
@

