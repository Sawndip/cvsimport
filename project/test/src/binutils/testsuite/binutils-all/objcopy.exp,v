head	1.77;
access;
symbols
	binutils-2_24-branch:1.77.0.4
	binutils-2_24-branchpoint:1.77
	binutils-2_21_1:1.69.2.1
	binutils-2_23_2:1.77
	binutils-2_23_1:1.77
	binutils-2_23:1.77
	binutils-2_23-branch:1.77.0.2
	binutils-2_23-branchpoint:1.77
	binutils-2_22_branch:1.75.0.4
	binutils-2_22:1.75
	binutils-2_22-branch:1.75.0.2
	binutils-2_22-branchpoint:1.75
	binutils-2_21:1.69
	binutils-2_21-branch:1.69.0.2
	binutils-2_21-branchpoint:1.69
	binutils-2_20_1:1.62
	binutils-2_20:1.62
	binutils-arc-20081103-branch:1.53.0.4
	binutils-arc-20081103-branchpoint:1.53
	binutils-2_20-branch:1.62.0.2
	binutils-2_20-branchpoint:1.62
	dje-cgen-play1-branch:1.57.0.2
	dje-cgen-play1-branchpoint:1.57
	arc-20081103-branch:1.53.0.2
	arc-20081103-branchpoint:1.53
	binutils-2_19_1:1.50
	binutils-2_19:1.50
	binutils-2_19-branch:1.50.0.2
	binutils-2_19-branchpoint:1.50
	binutils-2_18:1.46.2.1
	binutils-2_18-branch:1.46.0.2
	binutils-2_18-branchpoint:1.46
	binutils-csl-coldfire-4_1-32:1.31.2.2
	binutils-csl-sourcerygxx-4_1-32:1.31.2.2
	binutils-csl-innovasic-fido-3_4_4-33:1.31.2.2
	binutils-csl-sourcerygxx-3_4_4-32:1.25
	binutils-csl-coldfire-4_1-30:1.31.2.2
	binutils-csl-sourcerygxx-4_1-30:1.31.2.2
	binutils-csl-coldfire-4_1-28:1.31.2.2
	binutils-csl-sourcerygxx-4_1-29:1.31.2.2
	binutils-csl-sourcerygxx-4_1-28:1.31.2.2
	binutils-csl-arm-2006q3-27:1.31.2.2
	binutils-csl-sourcerygxx-4_1-27:1.31.2.2
	binutils-csl-arm-2006q3-26:1.31.2.2
	binutils-csl-sourcerygxx-4_1-26:1.31.2.2
	binutils-csl-sourcerygxx-4_1-25:1.31.2.2
	binutils-csl-sourcerygxx-4_1-24:1.31.2.2
	binutils-csl-sourcerygxx-4_1-23:1.31.2.2
	binutils-csl-sourcerygxx-4_1-21:1.31.2.2
	binutils-csl-arm-2006q3-21:1.31.2.2
	binutils-csl-sourcerygxx-4_1-22:1.31.2.2
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.31.2.2
	binutils-csl-sourcerygxx-4_1-20:1.31.2.2
	binutils-csl-arm-2006q3-19:1.31.2.2
	binutils-csl-sourcerygxx-4_1-19:1.31.2.2
	binutils-csl-sourcerygxx-4_1-18:1.31.2.2
	binutils-csl-renesas-4_1-9:1.31.2.2
	binutils-csl-sourcerygxx-3_4_4-25:1.25
	binutils-csl-renesas-4_1-8:1.31.2.2
	binutils-csl-renesas-4_1-7:1.31.2.2
	binutils-csl-renesas-4_1-6:1.31.2.2
	binutils-csl-sourcerygxx-4_1-17:1.31.2.2
	binutils-csl-sourcerygxx-4_1-14:1.31.2.2
	binutils-csl-sourcerygxx-4_1-15:1.31.2.2
	binutils-csl-sourcerygxx-4_1-13:1.31.2.2
	binutils-2_17:1.31
	binutils-csl-sourcerygxx-4_1-12:1.31.2.2
	binutils-csl-sourcerygxx-3_4_4-21:1.31.2.1
	binutils-csl-wrs-linux-3_4_4-24:1.25
	binutils-csl-wrs-linux-3_4_4-23:1.25
	binutils-csl-sourcerygxx-4_1-9:1.31.2.1
	binutils-csl-sourcerygxx-4_1-8:1.31.2.1
	binutils-csl-sourcerygxx-4_1-7:1.31.2.1
	binutils-csl-arm-2006q1-6:1.31.2.1
	binutils-csl-sourcerygxx-4_1-6:1.31.2.1
	binutils-csl-wrs-linux-3_4_4-22:1.25
	binutils-csl-coldfire-4_1-11:1.31.2.1
	binutils-csl-sourcerygxx-3_4_4-19:1.31
	binutils-csl-coldfire-4_1-10:1.31
	binutils-csl-sourcerygxx-4_1-5:1.31
	binutils-csl-sourcerygxx-4_1-4:1.31
	binutils-csl-wrs-linux-3_4_4-21:1.25
	binutils-csl-morpho-4_1-4:1.31
	binutils-csl-sourcerygxx-3_4_4-17:1.31
	binutils-csl-wrs-linux-3_4_4-20:1.25
	binutils-2_17-branch:1.31.0.4
	binutils-2_17-branchpoint:1.31
	binutils-csl-2_17-branch:1.31.0.2
	binutils-csl-2_17-branchpoint:1.31
	binutils-csl-gxxpro-3_4-branch:1.25.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.25
	binutils-2_16_1:1.25
	binutils-csl-arm-2005q1b:1.25
	binutils-2_16:1.25
	binutils-csl-arm-2005q1a:1.25
	binutils-csl-arm-2005q1-branch:1.25.0.4
	binutils-csl-arm-2005q1-branchpoint:1.25
	binutils-2_16-branch:1.25.0.2
	binutils-2_16-branchpoint:1.25
	csl-arm-2004-q3d:1.24
	csl-arm-2004-q3:1.24
	binutils-2_15:1.21.6.2
	binutils-2_15-branchpoint:1.21
	csl-arm-2004-q1a:1.23
	csl-arm-2004-q1:1.23
	binutils-2_15-branch:1.21.0.6
	cagney_bfdfile-20040213-branch:1.21.0.4
	cagney_bfdfile-20040213-branchpoint:1.21
	cagney_bigcore-20040122-branch:1.21.0.2
	cagney_bigcore-20040122-branchpoint:1.21
	csl-arm-2003-q4:1.21
	binutils-2_14:1.19
	binutils-2_14-branch:1.19.0.2
	binutils-2_14-branchpoint:1.19
	binutils-2_13_2_1:1.15
	binutils-2_13_2:1.15
	binutils-2_13_1:1.15
	binutils-2_13:1.15
	binutils-2_13-branchpoint:1.15
	binutils-2_13-branch:1.15.0.2
	binutils-2_12_1:1.12.2.1
	binutils-2_12:1.12.2.1
	binutils-2_12-branch:1.12.0.2
	binutils-2_12-branchpoint:1.12
	cygnus_cvs_20020108_pre:1.11
	binutils-2_11_2:1.6.2.2
	binutils-2_11_1:1.6.2.2
	binutils-2_11:1.6
	x86_64versiong3:1.7
	binutils-2_11-branch:1.6.0.2
	binutils-2_10_1:1.4
	binutils-2_10:1.4
	binutils-2_10-branch:1.4.0.2
	binutils-2_10-branchpoint:1.4
	binutils_latest_snapshot:1.77
	repo-unification-2000-02-06:1.4
	binu_ss_19990721:1.1.1.1
	binu_ss_19990602:1.1.1.1
	binu_ss_19990502:1.1.1.1
	cygnus:1.1.1;
locks; strict;
comment	@# @;


1.77
date	2012.03.13.00.41.22;	author hp;	state Exp;
branches;
next	1.76;

1.76
date	2011.11.25.14.47.48;	author nickc;	state Exp;
branches;
next	1.75;

1.75
date	2011.09.16.04.23.19;	author hjl;	state Exp;
branches;
next	1.74;

1.74
date	2011.06.30.21.41.05;	author bernds;	state Exp;
branches;
next	1.73;

1.73
date	2011.05.13.04.14.51;	author amodra;	state Exp;
branches;
next	1.72;

1.72
date	2011.04.06.17.09.50;	author jsm28;	state Exp;
branches;
next	1.71;

1.71
date	2011.01.01.01.56.59;	author danglin;	state Exp;
branches;
next	1.70;

1.70
date	2010.11.08.06.43.34;	author tschwinge;	state Exp;
branches;
next	1.69;

1.69
date	2010.09.23.12.04.37;	author amodra;	state Exp;
branches
	1.69.2.1;
next	1.68;

1.68
date	2010.09.10.12.11.28;	author nickc;	state Exp;
branches;
next	1.67;

1.67
date	2010.05.18.03.31.07;	author hjl;	state Exp;
branches;
next	1.66;

1.66
date	2010.03.30.17.45.19;	author ktietz;	state Exp;
branches;
next	1.65;

1.65
date	2010.02.18.00.13.30;	author amodra;	state Exp;
branches;
next	1.64;

1.64
date	2010.02.01.09.59.46;	author nathan;	state Exp;
branches;
next	1.63;

1.63
date	2010.01.20.00.09.13;	author ian;	state Exp;
branches;
next	1.62;

1.62
date	2009.09.02.07.22.32;	author amodra;	state Exp;
branches;
next	1.61;

1.61
date	2009.08.06.16.22.36;	author hjl;	state Exp;
branches;
next	1.60;

1.60
date	2009.07.16.21.10.49;	author hjl;	state Exp;
branches;
next	1.59;

1.59
date	2009.07.16.21.00.09;	author hjl;	state Exp;
branches;
next	1.58;

1.58
date	2009.07.14.16.57.18;	author jkratoch;	state Exp;
branches;
next	1.57;

1.57
date	2009.06.26.01.26.28;	author cgf;	state Exp;
branches;
next	1.56;

1.56
date	2009.06.25.15.55.44;	author cgf;	state Exp;
branches;
next	1.55;

1.55
date	2009.04.02.13.47.44;	author davek;	state Exp;
branches;
next	1.54;

1.54
date	2009.03.10.00.48.10;	author hjl;	state Exp;
branches;
next	1.53;

1.53
date	2008.10.02.01.06.12;	author hjl;	state Exp;
branches;
next	1.52;

1.52
date	2008.10.01.23.10.48;	author hjl;	state Exp;
branches;
next	1.51;

1.51
date	2008.10.01.21.54.59;	author hjl;	state Exp;
branches;
next	1.50;

1.50
date	2008.07.08.08.15.09;	author ktietz;	state Exp;
branches;
next	1.49;

1.49
date	2008.05.29.07.07.21;	author jkratoch;	state Exp;
branches;
next	1.48;

1.48
date	2007.08.28.13.21.53;	author jsm28;	state Exp;
branches;
next	1.47;

1.47
date	2007.08.09.11.25.58;	author amodra;	state Exp;
branches;
next	1.46;

1.46
date	2007.07.05.16.54.45;	author nickc;	state Exp;
branches
	1.46.2.1;
next	1.45;

1.45
date	2007.05.15.04.23.50;	author amodra;	state Exp;
branches;
next	1.44;

1.44
date	2007.05.02.10.38.00;	author amodra;	state Exp;
branches;
next	1.43;

1.43
date	2007.04.24.10.56.58;	author nickc;	state Exp;
branches;
next	1.42;

1.42
date	2007.04.23.10.59.07;	author nickc;	state Exp;
branches;
next	1.41;

1.41
date	2007.04.12.19.20.46;	author hjl;	state Exp;
branches;
next	1.40;

1.40
date	2007.02.27.12.19.16;	author nathan;	state Exp;
branches;
next	1.39;

1.39
date	2006.09.20.11.35.11;	author nickc;	state Exp;
branches;
next	1.38;

1.38
date	2006.09.14.23.37.35;	author hjl;	state Exp;
branches;
next	1.37;

1.37
date	2006.06.23.16.23.09;	author rsandifo;	state Exp;
branches;
next	1.36;

1.36
date	2006.05.03.14.21.18;	author hjl;	state Exp;
branches;
next	1.35;

1.35
date	2006.05.01.14.09.35;	author hjl;	state Exp;
branches;
next	1.34;

1.34
date	2006.05.01.04.01.25;	author bje;	state Exp;
branches;
next	1.33;

1.33
date	2006.04.26.13.37.05;	author hjl;	state Exp;
branches;
next	1.32;

1.32
date	2006.04.25.14.06.10;	author hjl;	state Exp;
branches;
next	1.31;

1.31
date	2005.10.20.17.06.40;	author hjl;	state Exp;
branches
	1.31.2.1;
next	1.30;

1.30
date	2005.10.19.20.49.02;	author hjl;	state Exp;
branches;
next	1.29;

1.29
date	2005.10.19.17.39.43;	author hjl;	state Exp;
branches;
next	1.28;

1.28
date	2005.08.26.09.47.49;	author nickc;	state Exp;
branches;
next	1.27;

1.27
date	2005.08.18.03.51.19;	author amodra;	state Exp;
branches;
next	1.26;

1.26
date	2005.05.08.14.17.40;	author nickc;	state Exp;
branches;
next	1.25;

1.25
date	2005.03.03.11.46.14;	author amodra;	state Exp;
branches;
next	1.24;

1.24
date	2004.05.12.03.28.45;	author bje;	state Exp;
branches;
next	1.23;

1.23
date	2004.03.30.09.54.15;	author jakub;	state Exp;
branches;
next	1.22;

1.22
date	2004.02.20.15.21.54;	author nathan;	state Exp;
branches;
next	1.21;

1.21
date	2003.06.28.23.27.42;	author dannysmith;	state Exp;
branches
	1.21.6.1;
next	1.20;

1.20
date	2003.06.19.07.45.50;	author nickc;	state Exp;
branches;
next	1.19;

1.19
date	2002.11.18.08.28.38;	author sveinse;	state Exp;
branches;
next	1.18;

1.18
date	2002.08.26.23.14.35;	author amodra;	state Exp;
branches;
next	1.17;

1.17
date	2002.08.26.10.15.46;	author amodra;	state Exp;
branches;
next	1.16;

1.16
date	2002.08.15.23.41.18;	author amodra;	state Exp;
branches;
next	1.15;

1.15
date	2002.06.06.06.45.10;	author law;	state Exp;
branches;
next	1.14;

1.14
date	2002.05.29.05.00.33;	author amodra;	state Exp;
branches;
next	1.13;

1.13
date	2002.02.18.09.13.48;	author hp;	state Exp;
branches;
next	1.12;

1.12
date	2002.01.14.17.26.13;	author nickc;	state Exp;
branches
	1.12.2.1;
next	1.11;

1.11
date	2001.11.29.17.34.07;	author hjl;	state Exp;
branches;
next	1.10;

1.10
date	2001.11.15.12.51.42;	author amodra;	state Exp;
branches;
next	1.9;

1.9
date	2001.05.25.07.21.00;	author amodra;	state Exp;
branches;
next	1.8;

1.8
date	2001.03.13.06.43.59;	author nickc;	state Exp;
branches;
next	1.7;

1.7
date	2001.02.12.00.21.58;	author hjl;	state Exp;
branches;
next	1.6;

1.6
date	2000.06.19.01.04.20;	author nickc;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	2000.05.02.00.00.27;	author amodra;	state Exp;
branches;
next	1.4;

1.4
date	99.11.01.17.12.11;	author nickc;	state Exp;
branches;
next	1.3;

1.3
date	99.11.01.16.48.05;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	99.08.09.04.37.25;	author ian;	state Exp;
branches;
next	1.1;

1.1
date	99.05.03.07.29.11;	author rth;	state Exp;
branches
	1.1.1.1;
next	;

1.69.2.1
date	2011.02.10.03.41.05;	author amodra;	state Exp;
branches;
next	;

1.46.2.1
date	2007.08.09.11.45.03;	author amodra;	state Exp;
branches;
next	;

1.31.2.1
date	2006.05.20.14.48.55;	author nathan;	state Exp;
branches;
next	1.31.2.2;

1.31.2.2
date	2006.06.22.15.44.18;	author rsandifo;	state Exp;
branches;
next	;

1.21.6.1
date	2004.02.20.15.23.32;	author nathan;	state Exp;
branches;
next	1.21.6.2;

1.21.6.2
date	2004.04.08.12.41.51;	author amodra;	state Exp;
branches;
next	;

1.12.2.1
date	2002.02.18.09.19.51;	author hp;	state Exp;
branches;
next	;

1.6.2.1
date	2001.06.07.03.12.29;	author amodra;	state Exp;
branches;
next	1.6.2.2;

1.6.2.2
date	2001.06.11.10.04.32;	author amodra;	state Exp;
branches;
next	;

1.1.1.1
date	99.05.03.07.29.11;	author rth;	state Exp;
branches;
next	;


desc
@@


1.77
log
@	PR binutils/3807
	* binutils-all/objcopy.exp (localize-hidden-1): Correct xfailed
	mips-targets.
@
text
@#   Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003,
#   2004, 2006, 2007, 2009, 2010, 2011
#   Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.

# Please email any bugs, comments, and/or additions to this file to:
# bug-dejagnu@@prep.ai.mit.edu

# Written by Ian Lance Taylor <ian@@cygnus.com>

if ![is_remote host] {
    if {[which $OBJCOPY] == 0} then {
        perror "$OBJCOPY does not exist"
        return
    }
}

send_user "Version [binutil_version $OBJCOPY]"

if ![is_remote host] {
    set tempfile tmpdir/bintest.o
    set copyfile tmpdir/copy
} else {
    set tempfile [remote_download host tmpdir/bintest.o]
    set copyfile copy
}

# Test that objcopy does not modify a file when copying it.

proc objcopy_test {testname srcfile} {
    global OBJCOPY
    global OBJCOPYFLAGS
    global srcdir
    global subdir
    global tempfile
    global copyfile

    if {![binutils_assemble $srcdir/$subdir/${srcfile} tmpdir/bintest.o]} then {
 	perror "unresolved $testname"
	unresolved "objcopy ($testname)"
	return
    }

    set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS $tempfile ${copyfile}.o"]

    if ![string match "" $got] then {
	fail "objcopy ($testname)"
    } else {
	send_log "cmp $tempfile ${copyfile}.o\n"
	verbose "cmp $tempfile ${copyfile}.o"
	if [is_remote host] {
	    set src1 tmpdir/bintest.o
	    set src2 tmpdir/copy.o
	    remote_upload host $tempfile $src1
	    remote_upload host ${copyfile}.o $src2
	} else {
	    set src1 ${tempfile}
	    set src2 ${copyfile}.o
	}
	set status [remote_exec build cmp "${src1} ${src2}"]
	set exec_output [lindex $status 1]
	set exec_output [prune_warnings $exec_output]

	# On some systems the result of objcopy will not be identical.
	# Usually this is just because gas isn't using bfd to write the
	# files in the first place, and may order things a little
	# differently. Those systems should use setup_xfail here.

	setup_xfail "h8300-*-coff"
	setup_xfail "h8500-*-rtems*" "h8500-*-coff"
	setup_xfail "hppa*-*-*"
	setup_xfail "i960-*"
	setup_xfail "m68*-*-*coff" "m68*-*-hpux*" "m68*-*-lynxos*"
	setup_xfail "m68*-*-sysv*" "m68*-apple-aux*"
	setup_xfail "m8*-*"
	setup_xfail "or32-*-rtems*" "or32-*-coff"
	setup_xfail "sh-*-coff*"
	setup_xfail "tic80-*-*" "w65-*"

	clear_xfail "hppa*64*-*-hpux*" "hppa*-*-linux*" "hppa*-*-lites*"
	clear_xfail "hppa*-*-*n*bsd*" "hppa*-*-rtems*" "*-*-*elf*"
	clear_xfail "m68*-*-sysv4*"

	if [string match "" $exec_output] then {
	    pass "objcopy ($testname)"
	} else {
	    send_log "$exec_output\n"
	    verbose "$exec_output" 1

	    # On OSF/1, this succeeds with gas and fails with /bin/as.
	    setup_xfail "alpha*-*-osf*"

	    fail "objcopy ($testname)"
	}
    }
}

objcopy_test "simple copy" bintest.s

# Test reversing bytes in a section.

set reversed ${tempfile}-reversed
set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS -j .data --reverse-bytes=4 $tempfile $reversed"]

if ![string match "" $got] then {
    fail "objcopy --reverse-bytes"
} else {
    if [is_remote host] {
        remote_upload host ${reversed} tmpdir/copy-reversed.o
        set reversed tmpdir/copy-reversed.o
    }

    set origdata [binutils_run $OBJDUMP "$OBJDUMPFLAGS -s -j .data $tempfile"]
    set revdata [binutils_run $OBJDUMP "$OBJDUMPFLAGS -s -j .data $reversed"]

    set want "^ \[0-9\]+ (\[0-9\]+)"
    set found_orig [regexp -lineanchor $want $origdata -> origdata]
    set found_rev [regexp -lineanchor $want $revdata -> revdata]

    if {$found_orig == 0 || $found_rev == 0} then {
	# som doesn't have a .data section
	setup_xfail "hppa*-*-hpux*"
	clear_xfail "hppa*64*-*-hpux*"

        fail "objcopy --reverse-bytes"
    } else {
        scan $origdata "%2x%2x%2x%2x" b1 b2 b3 b4
        scan $revdata "%2x%2x%2x%2x" c4 c3 c2 c1

        if {$b1 == $c1 && $b2 == $c2 && $b3 == $c3 && $b4 == $c4} then {
            pass "objcopy --reverse-bytes"
        } else {
            fail "objcopy --reverse-bytes"
        }
    }
}

# Test interleaved copy of multiple byte width

set sequence_file sequence_file
set file [open ${sequence_file} w]
puts ${file} "12345678"
close ${file}

if [is_remote host] {
    remote_upload host ${sequence_file} tmpdir/sequence_file
    set sequence_file tmpdir/sequence_file
}

set got [binutils_run $OBJCOPY "-I binary -i 4 -b 0 --interleave-width 2 ${sequence_file} ${copyfile}"]

if ![string match "" $got] then {
    fail "objcopy -i --interleave-width"
} else {
    if [is_remote host] {
	remote_upload host ${copyfile} tmpdir/interleave_output
	set interleave_output tmpdir/interleave_output
    } else {
	set interleave_output ${copyfile}
    }

    set file [open ${interleave_output} r]
    gets $file line
    send_log "$line\n"
    verbose $line

    if ![string match "1256" $line] then {
	fail "objcopy -i --interleave-width"
    }
    pass "objcopy -i --interleave-width"

    close $file
}

# Test generating S records.

# We make the srec filename 8.3 compatible. Note that the header string
# matched against depends on the name of the file. Ugh.

if [is_remote host] {
    set srecfile copy.sre
    set header_string S00B0000636F70792E737265C1
} else {
    set srecfile ${copyfile}.srec
    set header_string S0130000746D706469722F636F70792E7372656397
}

set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS -O srec $tempfile ${srecfile}"]

if ![string match "" $got] then {
    fail "objcopy -O srec"
} else {
    if [is_remote host] {
	remote_upload host ${srecfile} tmpdir/copy.srec
	set srecfile tmpdir/copy.srec
    }
    set file [open ${srecfile} r]

    # The first S record is fixed by the file name we are using.
    gets $file line
    send_log "$line\n"
    verbose $line
    if ![regexp "$header_string.*" $line] {
	send_log "bad header\n"
	fail "objcopy -O srec"
    } else {
	while {[gets $file line] != -1 \
	       && [regexp "^S\[123\]\[0-9a-fA-F\]+\[\r\n\]*$" $line]} {
	    send_log "$line\n"
	    verbose $line
	    set line "**EOF**"
	}
	send_log "$line\n"
	verbose $line
	if ![regexp "^S\[789\]\[0-9a-fA-F\]+\[\r\n\]*$" $line] then {
	    send_log "bad trailer\n"
	    fail "objcopy -O srec"
	} else {
	    if {[gets $file line] != -1} then {
		send_log "garbage at end\n"
		send_log "$line\n"
		verbose $line
		fail "objcopy -O srec"
	    } else {
		set got [binutils_run $OBJDUMP "$OBJDUMPFLAGS -f ${srecfile}"]
		if ![regexp "file format srec" $got] then {
		    send_log "objdump failed\n"
		    fail "objcopy -O srec"
		} else {
		    pass "objcopy -O srec"
		}
	    }
	}
    }

    close $file
}

# Test setting and adjusting the start address.  We only test this
# while generating S records, because we may not be able to set the
# start address for other object file formats, and the S record case
# is the only useful one anyhow.

set got [binutils_run $OBJDUMP "$OBJDUMPFLAGS -f $tempfile"]
if ![regexp "start address (\[0-9a-fA-FxX\]+)" $got all origstart] then {
    perror "objdump can not recognize bintest.o"
    set origstart ""
} else {
    set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS -O srec --set-start 0x7654 $tempfile ${copyfile}.srec"]
    if ![string match "" $got] then {
	fail "objcopy --set-start"
    } else {
	set got [binutils_run $OBJDUMP "$OBJDUMPFLAGS -f ${copyfile}.srec"]
	if ![regexp "file format srec.*start address (\[0-9a-fA-FxX\]+)" $got all srecstart] then {
	    fail "objcopy --set-start"
	} else {
	    if {$srecstart != 0x7654} then {
		send_log "$srecstart != 0x7654\n"
		fail "objcopy --set-start"
	    } else {
		pass "objcopy --set-start"
	    }
	}
    }

    set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS -O srec --adjust-start 0x123 $tempfile ${copyfile}.srec"]
    if ![string match "" $got] then {
	fail "objcopy --adjust-start"
    } else {
	set got [binutils_run $OBJDUMP "$OBJDUMPFLAGS -f ${copyfile}.srec"]
	if ![regexp "file format srec.*start address (\[0-9a-fA-FxX\]+)" $got all srecstart] then {
	    fail "objcopy --adjust-start"
	} else {
	    if {$srecstart != $origstart + 0x123} then {
		send_log "$srecstart != $origstart + 0x123\n"
		fail "objcopy --adjust-start"
	    } else {
		pass "objcopy --adjust-start"
	    }
	}
    }
}

# Test adjusting the overall VMA, and adjusting the VMA of a
# particular section.  We again only test this when generating S
# records.

set low ""
set lowname ""

set headers [binutils_run $OBJDUMP "$OBJDUMPFLAGS -h $tempfile"]

set headers_regexp "\[ 	0-9\]+(\[^ 	\]+)\[ 	\]*(\[0-9a-fA-F\]+)\[ 	\]+\[0-9a-fA-F\]+\[ 	\]+(\[0-9a-fA-F\]+)\[ 	\]+\[0-9a-fA-F\]+\[ 	\]+2\[*\]\[*\]\[0-9\]+(.*)"

set got $headers
while {[regexp $headers_regexp $got all name size vma rest]} {
    set vma 0x$vma
    set size 0x$size
    if {$size != 0} {
	if {$low == "" || $vma < $low} {
            set low $vma
	    set lowname $name
	}
    }
    set got $rest
}

if {$low == "" || $origstart == ""} then {
    perror "objdump can not recognize bintest.o"
} else {
    set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS -O srec --adjust-vma 0x123 $tempfile ${copyfile}.srec"]
    if ![string match "" $got] then {
        fail "objcopy --adjust-vma"
    } else {
	set got [binutils_run $OBJDUMP "$OBJDUMPFLAGS -fh ${copyfile}.srec"]
	set want "file format srec.*start address\[ 	\]*(\[0-9a-fA-FxX\]+).*sec1\[ 	\]+\[0-9a-fA-F\]+\[ 	\]+(\[0-9a-fA-F\]+)"
	if ![regexp $want $got all start vma] then {
	    fail "objcopy --adjust-vma"
	} else {
	    set vma 0x$vma
	    if {$vma != $low + 0x123} then {
		send_log "$vma != $low + 0x123\n"
		fail "objcopy --adjust-vma"
	    } else {
		if {$start != $origstart + 0x123} then {
		    send_log "$start != $origstart + 0x123\n"
		    fail "objcopy --adjust-vma"
		} else {
		    pass "objcopy --adjust-vma"
		}
	    }
	}
    }

    set arg ""
    set got $headers
    while {[regexp $headers_regexp $got all name size vma rest]} {
	set vma 0x$vma
	if {$vma == $low} then {
	    set arg "$arg --adjust-section-vma $name+4"
	}
	set got $rest
    }

    set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS -O srec $arg $tempfile ${copyfile}.srec"]
    if ![string match "" $got] then {
	fail "objcopy --adjust-section-vma +"
    } else {
	set got [binutils_run $OBJDUMP "$OBJDUMPFLAGS -h ${copyfile}.srec"]
	set want "file format srec.*sec1\[ 	\]+\[0-9a-fA-F\]+\[ 	\]+(\[0-9a-fA-F\]+)"
	if ![regexp $want $got all vma] then {
	    fail "objcopy --adjust-section-vma +"
	} else {
	    set vma 0x$vma
	    if {$vma != $low + 4} then {
		send_log "$vma != $low + 4\n"
		fail "objcopy --adjust-section-vma +"
	    } else {
		pass "objcopy --adjust-section-vma +"
	    }
	}
    }

    regsub -all "\\+4" $arg "=[expr $low + 4]" argeq
    set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS -O srec $argeq $tempfile ${copyfile}.srec"]
    if ![string match "" $got] then {
	fail "objcopy --adjust-section-vma ="
    } else {
	set got [binutils_run $OBJDUMP "$OBJDUMPFLAGS -h ${copyfile}.srec"]
	set want "file format srec.*sec1\[ 	\]+\[0-9a-fA-F\]+\[ 	\]+(\[0-9a-fA-F\]+)"
	if ![regexp $want $got all vma] then {
	    fail "objcopy --adjust-section-vma ="
	} else {
	    set vma 0x$vma
	    if {$vma != $low + 4} then {
		send_log "$vma != $low + 4\n"
		fail "objcopy --adjust-section-vma ="
	    } else {
		pass "objcopy --adjust-section-vma ="
	    }
	}
    }
}

# Test stripping an object.

proc strip_test { } {
    global AR
    global CC
    global STRIP
    global STRIPFLAGS
    global NM
    global NMFLAGS
    global srcdir
    global subdir
    global READELF

    set test "strip"

    if { [target_compile $srcdir/$subdir/testprog.c tmpdir/testprog.o object debug] != "" } {
	untested $test
	return
    }

    set osabi_fail "false"
    if [is_elf_format] {
	verbose -log "$READELF -a tmpdir/testprog.o > tmpdir/osabi.in"
	set exec_output [remote_exec host "$READELF -h tmpdir/testprog.o" "" "/dev/null" "tmpdir/osabi.in"]
	if { [lindex $exec_output 0] != 0 } then {
	    unresolved "$test preserving OS/ABI"	
	    set osabi_fail "true"
	} else {
	    verbose -log "grep OS/ABI tmpdir/osabi.in"
	    catch "exec grep OS/ABI tmpdir/osabi.in" osabi_in
	}
    }

    if [is_remote host] {
	set archive libstrip.a
	set objfile [remote_download host tmpdir/testprog.o]
	remote_file host delete $archive
    } else {
	set archive tmpdir/libstrip.a
	set objfile tmpdir/testprog.o
    }

    remote_file build delete tmpdir/libstrip.a

    set exec_output [binutils_run $AR "rc $archive ${objfile}"]
    if ![string match "" $exec_output] {
	fail $test
	unresolved "$test preserving OS/ABI"	
	return
    }

    set exec_output [binutils_run $STRIP "-g $archive"]
    if ![string match "" $exec_output] {
	fail $test
	unresolved "$test preserving OS/ABI"	
	return
    }

    set exec_output [binutils_run $STRIP "$STRIPFLAGS $archive"]
    if ![string match "" $exec_output] {
	fail $test
	unresolved "$test preserving OS/ABI"	
	return
    }

    if { $osabi_fail != "true" && [is_elf_format] } {
	verbose -log "$READELF -a tmpdir/testprog.o > tmpdir/osabi.out"
	set exec_output [remote_exec host "$READELF -h tmpdir/testprog.o" "" "/dev/null" "tmpdir/osabi.out"]
	if { [lindex $exec_output 0] != 0 } then {
	    unresolved "$test preserving OS/ABI"	
	} else {
	    verbose -log "grep OS/ABI tmpdir/osabi.out"
	    catch "exec grep OS/ABI tmpdir/osabi.out" osabi_out
	    if { "$osabi_in" == "$osabi_out" } {
		pass "$test preserving OS/ABI"
	    } else {
		fail "$test preserving OS/ABI"
	    }
	}
    }

    if { [target_compile $srcdir/$subdir/testprog.c tmpdir/testprog.o object debug] != "" } {
	untested $test
	return
    }

    if [is_remote host] {
	set objfile [remote_download host tmpdir/testprog.o]
    } else {
	set objfile tmpdir/testprog.o
    }

    set exec_output [binutils_run $STRIP "$STRIPFLAGS $objfile"]
    if ![string match "" $exec_output] {
	fail $test
	return
    }

    set exec_output [binutils_run $NM "-a $NMFLAGS $objfile"]
    if ![string match "*: no symbols*" $exec_output] {
	fail $test
	return
    }

    pass $test
}

strip_test

# Test stripping an object file with saving a symbol

proc strip_test_with_saving_a_symbol { } {
    global CC
    global STRIP
    global STRIPFLAGS
    global NM
    global NMFLAGS
    global srcdir
    global subdir

    set test "strip with saving a symbol"

    if { [target_compile $srcdir/$subdir/testprog.c tmpdir/testprog.o object debug] != "" } {
	untested $test
	return
    }

    if [is_remote host] {
	set objfile [remote_download host tmpdir/testprog.o]
    } else {
	set objfile tmpdir/testprog.o
    }

    set exec_output [binutils_run $STRIP "$STRIPFLAGS -K main -K _main $objfile"]
    if ![string match "" $exec_output] {
	fail $test
	return
    }

    set exec_output [binutils_run $NM "$NMFLAGS $objfile"]
    if {![regexp {^([0-9a-fA-F]+)?[ ]+[TD] main} $exec_output] \
         && ![regexp {^([0-9a-fA-F]+)?[ ]+T _main} $exec_output]} {
	fail $test
	return
    }

    pass $test
}

strip_test_with_saving_a_symbol

# Build a final executable.

if { [istarget *-*-cygwin] || [istarget *-*-mingw*] } {
    set test_prog "testprog.exe"
} else {
    set test_prog "testprog"
}

proc copy_setup { } {
    global srcdir
    global subdir
    global gcc_gas_flag
    global test_prog
    global host_triplet
    
    set res [build_wrapper testglue.o]
    set flags { debug }
    
    if { [istarget *-*-uclinux*] && ![istarget tic6x-*-*] } {
	return 1
    }
    
    if { $res != "" } {
	lappend flags "additional_flags=[lindex $res 1]"
	set add_libs "testglue.o"
    } else {
	set add_libs ""
    }

    if { [istarget *-*-linux*]
	 || [istarget *-*-gnu*] } {
	foreach i $gcc_gas_flag {
	    set flags "additional_flags=$i $flags"
	}
    }
    if { [target_compile "$srcdir/$subdir/testprog.c $add_libs" tmpdir/$test_prog executable $flags]  != "" } {
	return 2
    }

    set result [remote_load target tmpdir/$test_prog]
    set status [lindex $result 0]

    if { $status != "pass"  } {
	send_log "cannot run executable, status = ${status} on ${host_triplet}\n"
	if { [istarget $host_triplet] } {
	  return 3
	}
      set status "pass"
    }

    return 0
}

# Test copying an executable.

proc copy_executable { prog flags test1 test2 } {
    global test_prog
    global host_triplet

    if [is_remote host] {
	set testfile [remote_download host tmpdir/$test_prog]
	set testcopy copyprog
    } else {
	set testfile tmpdir/$test_prog
	set testcopy tmpdir/copyprog
    }
    remote_file host delete $testcopy

    set exec_output [binutils_run $prog "$flags $testfile $testcopy"]

    if ![string match "" $exec_output] {
	fail $test1
	if [string match "" $test2] {
	    return
	}
	fail $test2
	return
    }

    if [is_remote host] {
	remote_upload host $testcopy tmpdir/copyprog
    }

    set status [remote_exec build "cmp" "tmpdir/$test_prog tmpdir/copyprog"]
    set exec_output [lindex $status 1]

    if [string match "" $exec_output] then {
	pass $test1
    } else {
	send_log "$exec_output\n"
	verbose "$exec_output"

	# This will fail for many reasons.  For example, it will most
	# likely fail if a non-GNU linker is used.  Therefore, we do
	# not insist that it pass.  If you are using an assembler and
	# linker based on the same BFD as objcopy, it is worth
	# investigating to see why this failure occurs.  If we are
	# cross compiling, we assume that a GNU linker is being used,
	# and expect it to succeed.
	if {[isnative]} then {
	    setup_xfail "*-*-*"
	}

	# This also fails for mips*-*-elf targets.  See elf32-mips.c
	# mips_elf_sym_is_global.
	setup_xfail "mips*-*-elf"

	setup_xfail "arm*-*-coff"
	setup_xfail "arm*-*-pe"
	setup_xfail "*-*-mingw*"
	setup_xfail "*-*-cygwin*"
    
	fail $test1
    }

    if [string match "" $test2] {
	return
    }

    set output [remote_load target tmpdir/copyprog]
    set status [lindex $output 0]
    if { ![istarget $host_triplet] } {
      set status "pass"
    }
    if { $status != "pass" } {
	fail $test2
    } else {
	pass $test2
    }
}

# Test stripping an executable

proc strip_executable { prog flags test } {
    global NM
    global NMFLAGS
    global READELF
    global host_triplet

    remote_file build delete tmpdir/striprog
    remote_download build tmpdir/copyprog tmpdir/striprog
    if [is_remote host] {
	set copyfile [remote_download host tmpdir/striprog]
    } else {
	set copyfile tmpdir/striprog
    }

    set osabi_fail "false"
    if [is_elf_format] {
	verbose -log "$READELF -a ${copyfile} > tmpdir/osabi.in"
	set exec_output [remote_exec host "$READELF -h ${copyfile}" "" "/dev/null" "tmpdir/osabi.in"]
	if { [lindex $exec_output 0] != 0 } then {
	    unresolved "$test preserving OS/ABI"	
	    set osabi_fail "true"
	} else {
	    verbose -log "grep OS/ABI tmpdir/osabi.in"
	    catch "exec grep OS/ABI tmpdir/osabi.in" osabi_in
	}
     }

    set exec_output [binutils_run $prog "$flags ${copyfile}"]
    if ![string match "" $exec_output] {
	fail $test
	return
    }

    if [is_remote host] {
	remote_upload host ${copyfile} tmpdir/striprog
    }

    set result [remote_load target tmpdir/striprog]
    set status [lindex $result 0]
    if { ![istarget $host_triplet] } {
      set status "pass"
    }
    if { $status != "pass" } {
	fail $test
        return
    }

    if { $osabi_fail != "true" && [is_elf_format] } {
	verbose -log "$READELF -a ${copyfile} > tmpdir/osabi.out"
	set exec_output [remote_exec host "$READELF -h ${copyfile}" "" "/dev/null" "tmpdir/osabi.out"]
	if { [lindex $exec_output 0] != 0 } then {
	    unresolved "$test preserving OS/ABI"	
	} else {
	    verbose -log "grep OS/ABI tmpdir/osabi.out"
	    catch "exec grep OS/ABI tmpdir/osabi.out" osabi_out
	    if { "$osabi_in" == "$osabi_out" } {
		pass "$test preserving OS/ABI"
	    } else {
		fail "$test preserving OS/ABI"
	    }
	}
    }

    set exec_output [binutils_run $NM "$NMFLAGS ${copyfile}"]
    if ![string match "*: no symbols*" $exec_output] {
	fail $test
	return
    }
    pass $test
}

# Test stripping an executable with saving a symbol

proc strip_executable_with_saving_a_symbol { prog flags test } {
    global NM
    global NMFLAGS
    global host_triplet

    remote_file build delete tmpdir/striprog
    remote_download build tmpdir/copyprog tmpdir/striprog
    if [is_remote host] {
	set copyfile [remote_download host tmpdir/striprog]
    } else {
	set copyfile tmpdir/striprog
    }

    set exec_output [binutils_run $prog "$flags ${copyfile}"]
    if ![string match "" $exec_output] {
	fail $test
	return
    }

    if [is_remote host] {
	remote_upload host ${copyfile} tmpdir/striprog
    }

    set result [remote_load target tmpdir/striprog]
    set status [lindex $result 0]
    if { ![istarget $host_triplet] } {
      set status "pass"
    }
    if { $status != "pass" } {
	fail $test
        return
    }

    set exec_output [binutils_run $NM "$NMFLAGS ${copyfile}"]
    if { [istarget mmix-knuth-mmixware] } {
	# Whenever there's a symbol in the mmo format, there's the symbol
	# Main, so remove it manually from the expected output for sake of
	# this test.

	# Using "" not {} to get the \n and \r translated.
	regsub "^\[0-9a-fA-F\]+\[ \]+T Main\[\n\r\]+" $exec_output "" exec_output
    }

    if {![regexp {^([0-9a-fA-F]+)?[ ]+[TD] main} $exec_output] \
         && ![regexp {^([0-9a-fA-F]+)?[ ]+[TD] _main} $exec_output]} {
	fail $test
	return
    }
    pass $test
}

# Test keeping only debug symbols of an executable

proc keep_debug_symbols_and_test_copy { prog1 flags1 test1 prog2 flags2 test2 } {
    global NM
    global NMFLAGS

    remote_file build delete tmpdir/striprog
    remote_download build tmpdir/copyprog tmpdir/striprog
    if [is_remote host] {
	set copyfile [remote_download host tmpdir/striprog]
    } else {
	set copyfile tmpdir/striprog
    }

    set exec_output [binutils_run $prog1 "$flags1 ${copyfile}"]
    if ![string match "" $exec_output] {
	fail $test1
	return
    }
    pass $test1

    set exec_output [binutils_run $prog2 "$flags2 ${copyfile}"]
    if ![string match "" $exec_output] {
	fail $test2
	return
    }
    pass $test2
}

set test1 "simple objcopy of executable"
set test2 "run objcopy of executable"
set test3 "run stripped executable"
set test4 "run stripped executable with saving a symbol"
set test5 "keep only debug data"
set test6 "simple objcopy of debug data"

switch [copy_setup] {
    "1" {
	# do nothing
    }
    "2" {
	untested $test1
	untested $test2
	untested $test3
	untested $test4
	untested $test5
	untested $test6
    }
    "3" {
	copy_executable "$OBJCOPY" "$OBJCOPYFLAGS" "$test1" ""
	unsupported $test2
	unsupported $test3
	unsupported $test4
	unsupported $test5
	unsupported $test6
    }
    "0" {
	copy_executable "$OBJCOPY" "$OBJCOPYFLAGS" "$test1" "$test2"
	strip_executable "$STRIP" "$STRIPFLAGS" "$test3"
	strip_executable_with_saving_a_symbol "$STRIP" "-K main -K _main $STRIPFLAGS" "$test4"
	keep_debug_symbols_and_test_copy "$STRIP" "--only-keep-debug $STRIPFLAGS" "$test5" \
					 "$OBJCOPY" "$OBJCOPYFLAGS" "$test6"
    }
}

proc objcopy_test_readelf {testname srcfile} {
    global OBJCOPY
    global OBJCOPYFLAGS
    global READELF
    global srcdir
    global subdir

    if {![binutils_assemble $srcdir/$subdir/${srcfile} tmpdir/bintest.o]} then {
	unresolved "objcopy ($testname)"
	return
    }

    verbose -log "$OBJCOPY $OBJCOPYFLAGS tmpdir/bintest.o tmpdir/copy.o"
    set exec_output [remote_exec host "$OBJCOPY $OBJCOPYFLAGS tmpdir/bintest.o tmpdir/copy.o"]
    if { [lindex $exec_output 0] != 0
	 || ![string match "" [lindex $exec_output 1]] } then {
	fail "objcopy ($testname)"
	return
    }

    verbose -log "$READELF -a tmpdir/bintest.o > tmpdir/bintest.o.out"
    set exec_output [remote_exec host "$READELF -a tmpdir/bintest.o" "" "/dev/null" "tmpdir/bintest.o.out"]
    if { [lindex $exec_output 0] != 0 } then {
	unresolved "objcopy ($testname)"
	return
    }
    set exec_output [prune_warnings [lindex $exec_output 1]]
    if ![string match "" $exec_output] then {
	unresolved "objcopy ($testname)"
	return
    }

    verbose -log "$READELF -a tmpdir/copy.o > tmpdir/copy.o.out"
    set exec_output [remote_exec host "$READELF -a tmpdir/copy.o" "" "/dev/null" "tmpdir/copy.o.out"]
    if { [lindex $exec_output 0] != 0 } then {
	unresolved "objcopy ($testname)"
	return
    }
    set exec_output [prune_warnings [lindex $exec_output 1]]
    if ![string match "" $exec_output] then {
	unresolved "objcopy ($testname)"
	return
    }

    verbose -log "diff tmpdir/bintest.o.out tmpdir/copy.o.out"
    catch "exec diff tmpdir/bintest.o.out tmpdir/copy.o.out" exec_output
    set exec_output [prune_warnings $exec_output]

    if [string match "" $exec_output] then {
	pass "objcopy ($testname)"
    } else {
	fail "objcopy ($testname)"
    }
}

# ia64 specific tests
if { ([istarget "ia64-*-elf*"]
       || [istarget "ia64-*-linux*"]) } {
    objcopy_test "ia64 link order" link-order.s
}

# ELF specific tests
if [is_elf_format] {
    objcopy_test "ELF unknown section type" unknown.s
    objcopy_test_readelf "ELF group" group.s
    objcopy_test_readelf "ELF group" group-2.s
    objcopy_test_readelf "ELF group" group-3.s
    objcopy_test_readelf "ELF group" group-4.s
    run_dump_test "group-5"
    run_dump_test "group-6"
    run_dump_test "copy-1"
    run_dump_test "note-1"
}

run_dump_test "copy-2"
run_dump_test "copy-3"
run_dump_test "copy-4"

if [is_elf_format] {
    run_dump_test "strip-1"
    run_dump_test "strip-2"
    run_dump_test "strip-3"
    run_dump_test "strip-4"
    run_dump_test "strip-5"
    run_dump_test "strip-6"
    run_dump_test "strip-7"
    run_dump_test "strip-8"
    run_dump_test "strip-9"
    if { ![istarget "*-*-hpux*"]
	 && ![istarget "msp*-*-*"] } {
	run_dump_test "strip-10"
    }

    if { [istarget "i*86-*"] || [istarget "x86_64-*-*"] } {
	# Check to make sure we don't strip a symbol named in relocations.
	set test "objcopy keeps symbols needed by relocs"

	set srcfile $srcdir/$subdir/needed-by-reloc.s

	if {![binutils_assemble $srcfile tmpdir/bintest.o]} then {
	    unresolved $test
	} else {
	    set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS --strip-symbol=foo tmpdir/bintest.o ${copyfile}.o"]

	    if [regexp "not stripping symbol `foo' because it is named in a relocation" $got] {
		pass $test
	    } else {
		fail $test
	    }
	}
    }

    # The symbol table for some MIPS targets is sorted differently than
    # the ELF canonical order, so the regexps in localize-hidden-1.d fail
    # to match.  These tests must be matched to targets for which
    # targ_defvec=bfd_elf32_bigmips_vec,
    # targ_defvec=bfd_elf32_littlemips_vec,
    # targ_defvec=bfd_elf32_nbigmips_vec or
    # targ_defvec=bfd_elf32_nlittlemips_vec in config.bfd.  When syncing,
    # don't forget that earlier case-matches trump later ones.
    if { ![istarget "mips*-sde-elf*"] && ![istarget "mips64*-*-openbsd*"] } {
	setup_xfail "mips*-*-irix5*" "mips*-*-irix6*" "mips*-*-elf*" \
	    "mips*-*-rtems*" "mips*-*-windiss" "mips*-*-none" \
	    "mips*-*-openbsd*" "mips*-*-chorus*"
    }
    run_dump_test "localize-hidden-1"
    run_dump_test "testranges"
    run_dump_test "testranges-ia64"

    run_dump_test "add-section"
    run_dump_test "add-empty-section"

    run_dump_test "exclude-1a"
    run_dump_test "exclude-1b"
}
run_dump_test "localize-hidden-2"
@


1.76
log
@	* binutils-all/objdump.exp (cpus): Add MicroBlaze.
	(objdump -WL): Skip this test on MCore, Moxie and OpenRisc
	targets.

	* binutils-all/objcopy.exp (localize-hidden-1): Expect this test
	to fail on MIPS based targets.
@
text
@d983 13
a995 3
    # The symbol table for MIPS targets is not sorted by ascending value,
    # so the regexps in localize-hidden-1.d fail to match.
    setup_xfail "mips-*-*"
@


1.75
log
@Remove the group section if all members are removed.

binutils/

2011-09-15  H.J. Lu  <hongjiu.lu@@intel.com>

	PR binutils/13180
	* objcopy.c (is_strip_section_1): New.
	(is_strip_section): Use it.  Remove the group section if all
	members are removed.

binutils/testsuite/

2011-09-15  H.J. Lu  <hongjiu.lu@@intel.com>

	PR binutils/13180
	* binutils-all/group-6.d: New.
	* binutils-all/group-6.s: Likewise.

	* binutils-all/objcopy.exp: Run group-6 for ELF targrts.
@
text
@d983 3
@


1.74
log
@	* binutils-all/objcopy.exp (strip_test, strip_executable):
	On ELF targets, test that OS/ABI is preserved.
	(copy_setup): Do test on tic6x-*-uclinux.
@
text
@d940 1
@


1.73
log
@	* binutils-all/objcopy.exp objcopy_text): Remove xfails for sh-rtems
	and tic4x.
@
text
@d409 1
d418 13
d445 1
d452 1
d459 1
d463 16
d567 1
a567 1
    if { [istarget *-*-uclinux*] } {
d685 1
d696 13
d729 16
@


1.72
log
@bfd:
	* config.bfd (thumb-*-oabi): Don't handle in list of obsolete
	targets.
	(strongarm*, thumb*, xscale*): Remove architectures.
	(strongarm-*-kaos*, thumb-*-coff, thumb-*-elf, thumb-epoc-pe*,
	thumb-*-pe*, strongarm-*-elf, strongarm-*-coff, xscale-*-elf,
	xscale-*-coff): Remove targets.

binutils:
	* configure.in (thumb-*-pe*): Remove.
	* configure: Regenerate.

binutils/testsuite:
	* binutils-all/objcopy.exp (*arm*-*-coff): Change to arm*-*-coff.
	(xscale-*-coff, thumb*-*-coff, thumb*-*-pe): Don't handle.

gas:
	* configure.tgt (strongarm*be, strongarm*b, strongarm*,
	xscale*be|xscale*b, xscale*): Remove architectures.
	(thumb-*-coff, thumb-*-rtems*, thumb-*-elf, thumb-epoc-pe,
	thumb-*-pe, xscale-*-coff, xscale-*-elf): Remove targets.

gas/testsuite:
	* gas/all/gas.exp (*arm*-*-coff): Change to arm*-*-coff.
	(thumb*-*-coff, thumb*-*-pe*): Don;t handle.
	* gas/arm/arm.exp (*arm*-*-*): Change to arm*-*-*.
	(*xscale*-*-*): Don't handle.
	* gas/cfi/cfi.exp (xscale*-*): Don't handle.
	* gas/elf/elf.exp (*arm*-*-*): Change to arm*-*-*.
	(xscale*-*-*): Don't handle.

ld:
	* configure.tgt (thumb-*-linux-* | thumb-*-uclinux*,
	strongarm-*-coff, strongarm-*-elf, strongarm-*-kaos*,
	thumb-*-coff, thumb-*-elf, thumb-epoc-pe, thumb-*-pe,
	xscale-*-coff, xscale-*-elf): Remove targets.

ld/testsuite:
	* ld-selective/selective.exp (xscale-*-*): Don't handle.
	* ld-srec/srec.exp (strongarm*-*-*, xscale*-*-*, thumb-*-*): Don't
	handle.
	(*arm*-*-*): Change to arm*-*-*.
	(strongarm*-*-coff, xscale*-*-coff, thumb-*-coff*, thumb-*-pe*,
	thumb-*-elf*, strongarm*-*-*, thumb-*-*): Remove xfails.
	* ld-undefined/undefined.exp (thumb*-*-pe*, thumb*-*-pe*): Remove
	commented-out xfails.
	(thumb-elf): Remove reference in comment.
	* lib/ld-lib.exp (strongarm*-*-*, xscale*-*-*, thumb-*-*): Don't
	handle.
@
text
@d90 2
a91 2
	setup_xfail "sh-*-coff*" "sh-*-rtems*" 
	setup_xfail "tic4x-*-*" "tic80-*-*" "w65-*"
@


1.71
log
@	* binutils-all/copy-2.d: Change "hppa" to "hppa*" in not-target list.
	* binutils-all/copy-3.d: Add hppa*-*-hpux* to not-target list.
	* binutils-all/objcopy.exp (reverse-bytes): xfail on 32-bit hpux.
@
text
@d2 1
a2 1
#   2004, 2006, 2007, 2009, 2010
d623 1
a623 2
	setup_xfail "*arm*-*-coff"
	setup_xfail "xscale-*-coff"
a624 2
	setup_xfail "thumb*-*-coff"
	setup_xfail "thumb*-*-pe"
@


1.70
log
@Improve binutils testsuite coverage for GNU/Hurd.

binutils/testsuite/

	* lib/utils-lib.exp (is_elf_format): Consider for *-*-gnu*, too.
	* binutils-all/elfedit-2.d (target): Likewise.
	* binutils-all/elfedit-3.d (target): Likewise.
	* binutils-all/i386/i386.exp: Likewise.
	* binutils-all/objcopy.exp: Likewise.
	* binutils-all/strip-3.d (target): Likewise.

gas/testsuite/

	* lib/gas-defs.exp (is_elf_format): Consider for *-*-gnu*, too.
	* gas/elf/elf.exp: Likewise.
	* gas/symver/symver.exp: Likewise.

ld/

	* configure.host: Add stanza for *-*-gnu*.

ld/testsuite/

	* lib/ld-lib.exp (is_elf_format): Consider for *-*-gnu*, too.
	* ld-discard/discard.exp: Likewise.
	* ld-elf/binutils.exp: Likewise.
	* ld-elf/commonpage1.d (target): Likewise.
	* ld-elf/compress1c.d (target): Likewise.
	* ld-elf/discard1.d (target): Likewise.
	* ld-elf/discard2.d (target): Likewise.
	* ld-elf/discard3.d (target): Likewise.
	* ld-elf/dynsym1.d (target): Likewise.
	* ld-elf/eh6.d (target): Likewise.
	* ld-elf/elf.exp: Likewise.
	(array_tests): Move -static tests to...
	(array_tests_static): ... here, and handle it accordingly.
	* ld-elf/hash.d (target): Likewise.
	* ld-elf/header.d (target): Likewise.
	* ld-elf/loadaddr1.d (target): Likewise.
	* ld-elf/loadaddr2.d (target): Likewise.
	* ld-elf/loadaddr3a.d (target): Likewise.
	* ld-elf/loadaddr3b.d (target): Likewise.
	* ld-elf/local1.d (target): Likewise.
	* ld-elf/maxpage1.d (target): Likewise.
	* ld-elf/maxpage2.d (target): Likewise.
	* ld-elf/maxpage3a.d (target): Likewise.
	* ld-elf/multibss1.d (target): Likewise.
	* ld-elf/noload-2.d (target): Likewise.
	* ld-elf/seg.d (target): Likewise.
	* ld-elf/textaddr1.d (target): Likewise.
	* ld-elf/textaddr2.d (target): Likewise.
	* ld-elf/textaddr3.d (target): Likewise.
	* ld-elf/textaddr4.d (target): Likewise.
	* ld-elf/textaddr5.d (target): Likewise.
	* ld-elf/textaddr6.d (target): Likewise.
	* ld-elf/textaddr7.d (target): Likewise.
	* ld-elf/tls_common.exp: Likewise.
	* ld-elf/unknown2.d (target): Likewise.
	* ld-elfvers/vers.exp: Likewise.
	* ld-elfvsb/elfvsb.exp: Likewise.
	* ld-elfweak/elfweak.exp: Likewise.
	(setup_xfail_gnu_hurd): New function.  Use it where appropriate.
	* ld-gc/abi-note.d (target): Likewise.
	* ld-gc/gc.exp: Likewise.
	* ld-gc/pr11218.d (target): Likewise.
	* ld-gc/start.d (target): Likewise.
	* ld-i386/i386.exp: Likewise.
	* ld-ifunc/binutils.exp: Likewise.
	* ld-ifunc/ifunc.exp: Likewise.
	* ld-linkonce/linkonce.exp: Likewise.
	* ld-linkonce/zeroehl32.d (target): Likewise.
	* ld-pie/pie.exp: Likewise.
	* ld-scripts/phdrs2.exp: Likewise.
	* ld-scripts/rgn-at5.d (target): Likewise.
	* ld-shared/shared.exp: Likewise.
	* ld-undefined/entry-3.d (target): Likewise.
	* ld-undefined/entry-4.d (target): Likewise.
	* ld-undefined/weak-undef.exp: Likewise.
@
text
@d134 4
@


1.69
log
@	* binutils-all/ar.exp: Don't run unique_symbol on msp or hpux.
	* binutils-all/copy-2.d: Update not-target list.
	* binutils-all/note-1.d: Don't run on h8300.
	* binutils-all/objcopy.exp: Don't run strip-10 on msp or hpux.
	(objcopy_test): Remove h8300-rtems from xfails.
@
text
@d541 2
a542 1
    if { [istarget *-*-linux*] } {
@


1.69.2.1
log
@apply mainline testsuite fixes and tweaks
@
text
@d541 1
a541 2
    if { [istarget *-*-linux*]
	 || [istarget *-*-gnu*] } {
@


1.68
log
@        * objcopy.c: Add --interleave-width option to allow interleaving
        of more than one byte at a time.
        (copy_width): New variable.
        (copy_options): Add --interleave-width.
        (copy_section): When interleaving copy in units of copy_width
        bytes.
        (copy_main): Parse the new option.
        * doc/binutils: Document the new option.
        * NEWS: Mention the new feature.

        * binutils-all/objcopy.exp: Add test of new --interleave-width
        option.
@
text
@d82 1
a82 1
	setup_xfail "h8300-*-rtems*" "h8300-*-coff"
d893 4
a896 1
    run_dump_test "strip-10"
@


1.67
log
@Implement generic SHF_EXCLUDE.

bfd/

2010-05-18  H.J. Lu  <hongjiu.lu@@intel.com>

	PR gas/11600
	* elf.c (_bfd_elf_make_section_from_shdr): Handle SHF_EXCLUDE
	(elf_fake_sections): Likewise.

	* elf32-i370.c (i370_elf_section_from_shdr): Don't handle
	SHF_EXCLUDE here.
	* elf32-ppc.c (ppc_elf_fake_sections): Likewise.

binutils/

2010-05-18  H.J. Lu  <hongjiu.lu@@intel.com>

	PR gas/11600
	* readelf.c (get_elf_section_flags): Treat SHF_EXCLUDE as a
	generic flag.

binutils/testsuite/

2010-05-18  H.J. Lu  <hongjiu.lu@@intel.com>

	PR gas/11600
	* binutils-all/objcopy.exp: Run exclude-1a and exclude-1b for
	ELF targets.

	* binutils-all/exclude-1.s: New.
	* binutils-all/exclude-1a.d: Likewise.
	* binutils-all/exclude-1b.d: Likewise.

gas/

2010-05-18  H.J. Lu  <hongjiu.lu@@intel.com>

	PR gas/11600
	* obj-elf.c (obj_elf_change_section): Handle SHF_EXCLUDE.
	(obj_elf_parse_section_letters): Likewise.
	(obj_elf_section_word): Likewise.

	* config/tc-ppc.c (ppc_section_letter): Removed.
	(ppc_section_word): Likewise.
	* config/tc-ppc.h (ppc_section_letter): Likewise.
	(ppc_section_word): Likewise.
	(md_elf_section_letter): Likewise.
	(md_elf_section_word): Likewise.

	* doc/as.texinfo: Document `e' and `#exclude'.

gas/testsuite/

2010-05-18  H.J. Lu  <hongjiu.lu@@intel.com>

	PR gas/11600
	* gas/elf/elf.exp: Run section8.

	* gas/elf/section8.d: New.
	* gas/elf/section8.s: Likewise.

include/elf/

2010-05-18  H.J. Lu  <hongjiu.lu@@intel.com>

	PR gas/11600
	* common.h (SHF_EXCLUDE): New.

	* i370.h (SHF_EXCLUDE): Removed.
	* or32.h (SHF_EXCLUDE): Likewise.
	* ppc.h (SHF_EXCLUDE): Likewise.
	* sparc.h (SHF_EXCLUDE): Likewise.

ld/testsuite/

2010-05-18  H.J. Lu  <hongjiu.lu@@intel.com>

	PR gas/11600
	* ld-elf/exclude3.s: New.
	* ld-elf/exclude3a.d: Likewise.
	* ld-elf/exclude3b.d: Likewise.
	* ld-elf/exclude3c.d: Likewise.
@
text
@d2 1
a2 1
#   2004, 2006, 2007, 2009
d147 37
@


1.66
log
@2010-03-30  Kai TIetz  <kai.tietz@@onevision.com>

        * binutils-all/objcopy.exp: Mark simple copy executable
        as failing for all *-*-mingw32* targets.
@
text
@d883 3
@


1.65
log
@	* binutils-all/group-5.s, * binutils-all/group-5.d: New test.
	* binutils-all/objcopy.exp: Run it.
@
text
@d586 1
a586 1
	setup_xfail "x86_64-*-mingw*"
@


1.64
log
@	* objcopy.c (copy_object): Set SEC_LINKER_CREATED when adding
	sections.

	testsuite/
	* binutils-all/note-1.d: New.
	* binutils-all/objcopy.exp: Add it.
@
text
@d837 1
@


1.63
log
@binutils/:
	* objcopy.c (copy_main): Rewrite OPTION_ADD_SECTION code to work
	with non-ordinary files like /dev/null.
binutils/testsuite/:
	* lib/utils-lib.exp (run_dump_test): Permit option values to use
	$srcdir to refer to the source directory.
	* binutils-all/add-section.d: New test.
	* binutils-all/add-empty-section.d: New test.
	* binutils-all/empty-file: New test input file.
	* binutils-all/objcopy.exp: Run new tests.
@
text
@d838 1
@


1.62
log
@update copyright dates
@
text
@d878 3
@


1.61
log
@2009-08-03  H.J. Lu  <hongjiu.lu@@intel.com>

	PR binutils/10492
	* binutils-all/objcopy.exp: Run strip-10.

	* binutils-all/strip-10.d: New.
	* binutils-all/unique.s: Likewise.
@
text
@d2 1
a2 1
#   2004, 2006, 2007
@


1.60
log
@2009-07-16  Dave Korn  <dave.korn.cygwin@@gmail.com>
	    H.J. Lu  <hongjiu.lu@@intel.com>

	* binutils-all/objcopy.exp: Run testranges and testranges-ia64
	for ELF targets only.
@
text
@d854 1
@


1.59
log
@2009-07-16  H.J. Lu  <hongjiu.lu@@intel.com>

	* binutils-all/objcopy.exp; Run testranges-ia64.

	* binutils-all/testranges.d: Don't run for ia64.

	* binutils-all/testranges-ia64.d: New.
	* binutils-all/testranges-ia64.s: Likewise.
@
text
@d875 2
a878 2
run_dump_test "testranges"
run_dump_test "testranges-ia64"
@


1.58
log
@binutils/
	Support unordered .debug_info references to .debug_ranges.
	* dwarf.c (struct range_entry, range_entry_compar): New.
	(display_debug_ranges): Remove variables last_offset, first, j,
	seen_first_offset, use_debug_info and next.  New variables
	range_entries and range_entry_fill.  Create the sorted copy
	range_entries.  Remove the FIXME error on detected unordered references.
	* dwarf.h (debug_info <range_lists>): New comment.

binutils/testsuite/
	* binutils-all/objcopy.exp (testranges): New test.
	* binutils-all/testranges.d, binutils-all/testranges.s: New files.
@
text
@d878 1
@


1.57
log
@* binutils-all/objcopy.exp: Move XFAIL from objcopy_test to copy_executable.
@
text
@d877 1
@


1.56
log
@* binutils-all/objcopy.exp: Always treat objcopy_test as XFAIL on cygwin.
@
text
@a91 1
	setup_xfail "*-*-cygwin*"
d587 1
@


1.55
log
@	* inutils-all/objcopy.exp (strip_executable):  Delete remote dest
	file before downloading.
	(strip_executable_with_saving_a_symbol):  Likewise.
	(keep_debug_symbols_and_test_copy):  Likewise.
@
text
@d92 1
@


1.54
log
@binutils/

2009-03-09  H.J. Lu  <hongjiu.lu@@intel.com>

	PR binutils/9933
	* objcopy.c (filter_symbols): Properly handle common symbols
	in relocatable file.

binutils/testsuite/

2009-03-09  H.J. Lu  <hongjiu.lu@@intel.com>

	PR binutils/9933
	* binutils-all/copy-4.d: New.

	* binutils-all/objcopy.exp: Run copy-4.
@
text
@d614 1
d657 1
d709 1
@


1.53
log
@2008-10-01  H.J. Lu  <hongjiu.lu@@intel.com>

	* binutils-all/group-4.s: New.
	* binutils-all/strip-8.d: Likewise.
	* binutils-all/strip-9.d: Likewise.

	* binutils-all/objcopy.exp: Test objcopy on group-4.s.  Run
	strip-8 and strip-9.
@
text
@d838 1
@


1.52
log
@2008-10-01  H.J. Lu  <hongjiu.lu@@intel.com>

	* binutils-all/group-3.s: New.
	* binutils-all/strip-6.d: Likewise.
	* binutils-all/strip-7.d: Likewise.

	* binutils-all/objcopy.exp: Test objcopy on group-3.s.  Run
	strip-6 and strip-7.
@
text
@d832 1
d847 2
@


1.51
log
@2008-10-01  H.J. Lu  <hongjiu.lu@@intel.com>

	* binutils-all/group-2.s: New.
	* binutils-all/strip-4.d: Likewise.
	* binutils-all/strip-5.d: Likewise.

	* binutils-all/objcopy.exp: Test objcopy on group-2.s.  Run
	strip-4 and strip-5.
@
text
@d831 1
d844 2
@


1.50
log
@2008-07-08  Kai Tietz  <kai.tietz@@onevision.com>

	* binutils-all/objcopy.exp (copy_setup): Check if host-triplet
	is target-triplet for execution tests.
	(copy_executable): Likewise.
	(strip_executable): Likewise.
	(strip_executable_with_saving_a_symbol): Likewise.
@
text
@d830 1
d841 2
@


1.49
log
@bfd/
	* elf.c (assign_file_positions_for_load_sections): Adjust pre-section
	gaps based on VMA and P_VADDR instead of LMA and P_PADDR addresses.
binutils/testsuite/
	* binutils-all/objcopy.exp: Call KEEP_DEBUG_SYMBOLS_AND_TEST_COPY.
	(keep_debug_symbols_and_test_copy): New function.
	(test5, test6): New variables.
@
text
@d488 1
d517 5
a521 2
	send_log "cannot run executable, status = ${status}\n"
	return 3
d531 1
d586 1
d597 3
d612 1
d633 3
d654 1
d675 3
@


1.48
log
@bfd:
2007-08-28  Mark Shinwell  <shinwell@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* elf32-arm.c (elf32_arm_compare_mapping): Compare first on vma,
	then on type.

binutils/testsuite:
2007-08-28  Mark Shinwell  <shinwell@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* binutils-all/ar.exp (long_filenames): Delete temporary files on
	the host.
	* binutils-all/arm/objdump.exp: Only check "which $OBJDUMP" if
	host is local.
	* binutils-all/objcopy.exp: Use ${srecfile} to get the name of the
	srec file to be passed to binutils_run.
	(objcopy_test_readelf): Use remote_exec.
	* binutils-all/readelf.exp (readelf_find_size): Use remote_exec.
	(readelf_test): Likewise.
	(readelf_wi_test): Likewise.
	* lib/utils-lib.exp (run_dump_test): Only check "which $binary" if
	host is local.  Use remote_exec.  Use $tempfile not
	tmpdir/bintest.o.

gas:
2007-08-28  Mark Shinwell  <shinwell@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* as.c (main): Flush stderr before printing listings to ensure
	consistent output order across platforms.

gas/testsuite:
2007-08-28  Mark Shinwell  <shinwell@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* lib/gas-defs.exp (gas_version): Use remote_* functions instead
	of exec.
	(gas_host_run): New.
	(gas_run): Use gas_host_run.
	(gas_start): Likewise.
	(run_dump_test): Likewise.
	(objdump): Use gas_host_run.
	(objdump_start_no_subdir): Likewise.
	* lib/gas-dg.exp (gas-dg-test): Use "remote_file host delete".
	* lib/run: Remove.
	* gas/macros/macros.exp: Download app4b.s to host.
	* gas/i386/i386.exp (gas_64_check): Use gas_host_run.
	(gas_32_check): Likewise.
	* gas/maxq10/maxq10.exp (gas_64_check): Likewise
	(gas_32_check): Likewise.
	* gas/maxq20/maxq20.exp (gas_64_check): Likewise
	(gas_32_check): Likewise.
	* gas/sparc/sparc.exp (gas_64_check): Likewise.
	* gas/cfi/cfi.exp: Likewise.
	* gas/elf/elf.exp (run_list_test): Likewise.  Use temporary file
	for readelf output in place of pipe.
	* gas/all/gas.exp: Download incbin.dat to host.
	(do_comment): Allow \r\r\n.

ld:
2007-08-28  Mark Shinwell  <shinwell@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* ldlang.c (sort_sections_by_lma): Sort by internal id after lma
	for stable sort.

ld/testsuite:
2007-08-28  Mark Shinwell  <shinwell@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* ld-elfcomm/elfcomm.exp: Use run_host_cmd.  Only check "which
	$CC" if host is local.
	* ld-checks/checks.exp: Use run_host_cmd.
	* ld-elf/exclude.exp: Likewise.
	* ld-elf/elf.exp: Download merge.ld if host is remote.
	* ld-elf/binutils.exp (binutils_test): Use remote_exec.
	* ld-elf/tls_common.exp: Use run_host_cmd.
	* lib/ld-lib.exp (ld_version): Only check "which $ld" if host is
	local.  Use remote_exec.
	(run_host_cmd): New.
	(run_host_cmd_yesno): New.
	(default_ld_relocate): Use run_host_cmd_yesno.
	(default_ld_link): Likewise.
	(default_ld_simple_link): Use run_host_cmd.
	(default_ld_compile): Only check "which $ccprog" if host is local.
	Use remote_file and remote_exec.
	(default_ld_assemble): Only check "which $as" if host is local.
	Use run_host_cmd.
	(default_ld_nm): Use remote_exec, remote_upload and remote_file.
	(run_dump_test): Use remote_exec, remote_upload and remote_file.
	Only check "which $binary" if host is local.
	(run_ld_link_tests): Use remote_exec, remote_upload and
	remote_file.
	* ld-selective/selective.exp: Only check "which $CXX" if host is
	local.  Use remote_exec.
	* ld-scripts/phdrs.exp: Only check "which $objdump" if host is
	local.  Use run_host_cmd.
	* ld-scripts/phdrs2.exp: Likewise.
	* ld-scripts/weak.exp: Likewise.
	* ld-undefined/weak-undef.exp: Likewise.
	* ld-scripts/crossref.exp: Only check "which $CC" if host is local.
	Use run_host_cmd.
	* ld-scripts/map-address.exp: Upload map_address.map if host is
	remote.
	* ld-srec/srec.exp (run_srec_tests): Use run_host_cmd.  Only check
	"which $CC" and "which $CXX" if host is local.
	* ld-undefined/undefined.exp: Only check "which $CC" if host is
	local.  Use remote_file and run_host_cmd.
	* config/default.exp: Use remote_exec to create tmpdir.
@
text
@d684 28
d716 2
d728 2
d736 2
d743 2
@


1.47
log
@binutils/testsuite/
	* binutils-all/copy-2.d (not-target): Match *-*-*aout.
	* binutils-all/copy-3.d (not-target): Likewise.
	* binutils-all/objcopy.exp (objcopy_test): Remove extraneous
	setup_xfail.
gas/testsuite/
	* gas/all/weakref1u.d (not-target): Match *-*-*aout.
@
text
@d197 1
a197 1
		set got [binutils_run $OBJDUMP "$OBJDUMPFLAGS -f ${copyfile}.srec"]
d725 3
a727 2
    catch "exec $OBJCOPY $OBJCOPYFLAGS tmpdir/bintest.o tmpdir/copy.o" exec_output
    if ![string match "" $exec_output] then {
d733 6
a738 2
    catch "exec $READELF -a tmpdir/bintest.o > tmpdir/bintest.o.out" exec_output
    set exec_output [prune_warnings $exec_output]
d745 6
a750 2
    catch "exec $READELF -a tmpdir/copy.o > tmpdir/copy.o.out" exec_output
    set exec_output [prune_warnings $exec_output]
@


1.46
log
@Change sources over to using GPLv3
@
text
@a105 3
	    # This fails for COFF i960-vxworks targets.
	    setup_xfail "i960-*-vxworks*"

@


1.46.2.1
log
@binutils/testsuite/
	* binutils-all/copy-2.d (not-target): Match *-*-*aout.
	* binutils-all/copy-3.d (not-target): Likewise.
	* binutils-all/objcopy.exp (objcopy_test): Remove extraneous
	setup_xfail.
	* windres/windres.exp: Return unsupported rather than fail if
	windows.h not found.
gas/testsuite/
	* gas/all/weakref1u.d (not-target): Match *-*-*aout.
@
text
@d106 3
@


1.45
log
@	* binutils-all/objcopy.exp: Only run needed-by-reloc test for ELF.
@
text
@d7 1
a7 1
# the Free Software Foundation; either version 2 of the License, or
@


1.44
log
@	* binutils-all/objcopy.exp (copy_setup): Don't perror, use send_log.
	(copy_executable): Return early if test2 is blank.
	Return unsupported rather than unresolved if we can't run
	executables.  Do test1 if we can compile.
@
text
@a777 1
    run_dump_test "localize-hidden-1"
a780 2
}
run_dump_test "localize-hidden-2"
d782 3
a784 3
if { [istarget "i*86-*"] || [istarget "x86_64-*-*"] } {
    # Check to make sure we don't strip a symbol named in relocations.
    set test "objcopy doesn't strip needed symbols"
d786 1
a786 1
    set srcfile $srcdir/$subdir/needed-by-reloc.s
d788 4
a791 4
    if {![binutils_assemble $srcfile tmpdir/bintest.o]} then {
        unresolved $test
    } else {
        set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS --strip-symbol=foo tmpdir/bintest.o ${copyfile}.o"]
d793 6
a798 5
        if [regexp "not stripping symbol `foo' because it is named in a relocation" $got] {
            pass $test
        } else {
            fail $test
        }
d800 2
d803 1
@


1.43
log
@* objcopy.c (filter_symbols): Explicitly stripping a symbol used in relocations is an error.
  Retype 'keep' to bfd_boolean.
* binutils-all/objcopy.exp: Add test for stripping a symbol used in a relocation.
* binutils-all/needed-by-reloc.s: New file.
@
text
@d519 1
a519 1
	perror "unresolved setup, status = $status"
d544 3
d588 4
d703 4
a706 4
	unresolved $test1
	unresolved $test2
	unresolved $test3
	unresolved $test4
@


1.42
log
@* objcopy.c (reverse_bytes):  New variable.
  (command_line_switch, copy_main):  Add OPTION_REVERSE_ENDIAN.
  (copy_options, copy_usage):  Add "reverse-bytes" entry.
  (copy_section):  Reverse bytes within output sections.
* doc/binutils.texi:  Document new objcopy option.
* testsuite/binutils-all/objcopy.exp: Add test for --reverse-bytes.
@
text
@d2 1
a2 1
#   2004, 2006
d777 19
@


1.41
log
@2007-04-12  H.J. Lu  <hongjiu.lu@@intel.com>

	PR binutils/4348
	* objcopy.c (copy_object): Don't stop when there are no
	sections to be copied.

testsuite/

2007-04-12  H.J. Lu  <hongjiu.lu@@intel.com>

	PR binutils/4348
	* binutils-all/empty.s: New file.
	* binutils-all/strip-3.d: Likewise.

	* binutils-all/objcopy.exp: Run strip-3 for ELF target.
@
text
@d116 34
@


1.40
log
@	* binutils-all/objcopy.exp: Skip for uclinux targets.
@
text
@d740 1
@


1.39
log
@Add x86_64-mingw64 target
@
text
@d461 4
@


1.38
log
@binutils/

2006-09-14  H.J. Lu  <hongjiu.lu@@intel.com>

	PR binutils/3182
	* objcopy.c (group_signature): Return proper group signature.

binutils/testsuite/

2006-09-14  H.J. Lu  <hongjiu.lu@@intel.com>

	PR binutils/3182
	* binutils-all/objcopy.exp: Run strip-1 and strip-2 for ELF
	targets.

	* binutils-all/strip-1.d: New file.
	* binutils-all/strip-2.d: Likewise.

	* lib/utils-lib.exp (run_dump_test): Support strip.
@
text
@d2 1
a2 1
#   2004
d446 1
a446 1
if { [istarget *-*-cygwin] || [istarget *-*-mingw32] } {
@


1.37
log
@binutils/
	* objcopy.c (localize_hidden): New variable.
	(OPTION_LOCALIZE_HIDDEN): New command_line_switch value.
	(copy_options): Add --localize-hidden.
	(copy_usage): Mention --localize-hidden.
	(is_hidden_symbol): New function.
	(filter_symbols): Handle localize_hidden.
	(copy_object): Call filter_symbols if localize_hidden.
	(copy_main): Handle OPTION_LOCALIZE_HIDDEN.
	* doc/binutils.texi (--localize-hidden): Document new option.

binutils/testsuite/
	* binutils-all/localize-hidden-1.s,
	* binutils-all/localize-hidden-1.d,
	* binutils-all/localize-hidden-2.s,
	* binutils-all/localize-hidden-2.d: New tests.
	* binutils-all/objcopy.exp: Run them.
@
text
@d734 2
@


1.36
log
@2006-05-03  H.J. Lu  <hongjiu.lu@@intel.com>

	* binutils-all/copy-3.d: New.

	* objcopy.exp: Run copy-3.
@
text
@d731 5
@


1.35
log
@2006-05-01  H.J. Lu  <hongjiu.lu@@intel.com>

	* binutils-all/objcopy.exp: Run "copy-1" for ELF only.
@
text
@d730 1
@


1.34
log
@	* binutils-all/objcopy.exp (objcopy_test_readelf): Remove stray ;
@
text
@d726 1
a728 1
run_dump_test "copy-1"
@


1.33
log
@2006-04-26  H.J. Lu  <hongjiu.lu@@intel.com>

	PR binutils/2593
	* binutils-all/copy-1.d: New file.
	* binutils-all/copy-1.s: Likewise.
	* binutils-all/copy-2.d: Likewise.

	* binutils-all/objcopy.exp: Add run_dump_test "copy-1" and
	run_dump_test "copy-2".

	* lib/utils-lib.exp (run_dump_test): New.
	(slurp_options): Likewise.
	(regexp_diff): Likewise.
	(file_contents): Likewise.
	(verbose_eval): Likewise.
@
text
@d686 1
a686 1
	return;
@


1.32
log
@2006-04-25  H.J. Lu  <hongjiu.lu@@intel.com>

	PR binutils/2467
	* binutils-all/objcopy.exp (strip_test): Also test "strip -g"
	on archive.
@
text
@d727 3
@


1.31
log
@binutils/testsuite/

2005-10-20  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/251
	* binutils-all/group.s: New file.

	* binutils-all/objcopy.exp (objcopy_test_readelf): New
	procedure.
	Use it to test ELF group.

ld/testsuite/

2005-10-20  H.J. Lu  <hongjiu.lu@@intel.com>

	PR ld/251
	* ld-elf/group.2d: New file.
@
text
@d362 6
@


1.31.2.1
log
@	* binutils/testsuite/binutils-all/objcopy.exp: Skip for uclinux
	targets.
@
text
@a454 4
    if { [istarget *-*-uclinux*] } {
	return 1
    }
    
@


1.31.2.2
log
@binutils/
	* objcopy.c (localize_hidden): New variable.
	(OPTION_LOCALIZE_HIDDEN): New command_line_switch value.
	(copy_options): Add --localize-hidden.
	(copy_usage): Mention --localize-hidden.
	(is_hidden_symbol): New function.
	(filter_symbols): Handle localize_hidden.
	(copy_object): Call filter_symbols if localize_hidden.
	(copy_main): Handle OPTION_LOCALIZE_HIDDEN.
	* doc/binutils.texi (--localize-hidden): Document new option.

binutils/testsuite/
	* binutils-all/localize-hidden-1.s,
	* binutils-all/localize-hidden-1.d,
	* binutils-all/localize-hidden-2.s,
	* binutils-all/localize-hidden-2.d: New tests.
	* binutils-all/objcopy.exp: Run them.
@
text
@a724 5

if [is_elf_format] {
    run_dump_test "localize-hidden-1"
}
run_dump_test "localize-hidden-2"
@


1.30
log
@binutils/testsuite/

2005-10-19  H.J. Lu  <hongjiu.lu@@intel.com>

	PR binutils/1487
	* binutils-all/objcopy.exp (objcopy_test): New procedure.
	Use it to test simple copy, ia64 link order and ELF unknown
	section type.

	* binutils-all/unknown.s: New file.

ld/testsuite/

2005-10-19  H.J. Lu  <hongjiu.lu@@intel.com>

	PR binutils/1487
	* ld-elf/unknown.d: New file.
@
text
@d664 46
d719 1
@


1.29
log
@2005-10-19  H.J. Lu  <hongjiu.lu@@intel.com>

	PR binutils/1321
	* binutils-all/link-order.s: New.

	* binutils-all/objcopy.exp: Check ia64 link order.
@
text
@a32 6
if {![binutils_assemble $srcdir/$subdir/bintest.s tmpdir/bintest.o]} then {
    perror "unresolved 1"
    unresolved "objcopy (simple copy)"
    return
}

d43 7
a49 1
set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS $tempfile ${copyfile}.o"]
d51 4
a54 13
if ![string match "" $got] then {
    fail "objcopy (simple copy)"
} else {
    send_log "cmp $tempfile ${copyfile}.o\n"
    verbose "cmp $tempfile ${copyfile}.o"
    if [is_remote host] {
	set src1 tmpdir/bintest.o
	set src2 tmpdir/copy.o
	remote_upload host $tempfile $src1
	remote_upload host ${copyfile}.o $src2
    } else {
	set src1 ${tempfile}
	set src2 ${copyfile}.o
a55 3
    set status [remote_exec build cmp "${src1} ${src2}"]
    set exec_output [lindex $status 1]
    set exec_output [prune_warnings $exec_output]
d57 1
a57 15
    # On some systems the result of objcopy will not be identical.
    # Usually this is just because gas isn't using bfd to write the files
    # in the first place, and may order things a little differently.
    # Those systems should use setup_xfail here.

    setup_xfail "h8300-*-rtems*" "h8300-*-coff"
    setup_xfail "h8500-*-rtems*" "h8500-*-coff"
    setup_xfail "hppa*-*-*"
    setup_xfail "i960-*"
    setup_xfail "m68*-*-*coff" "m68*-*-hpux*" "m68*-*-lynxos*"
    setup_xfail "m68*-*-sysv*" "m68*-apple-aux*"
    setup_xfail "m8*-*"
    setup_xfail "or32-*-rtems*" "or32-*-coff"
    setup_xfail "sh-*-coff*" "sh-*-rtems*" 
    setup_xfail "tic4x-*-*" "tic80-*-*" "w65-*"
d59 37
a95 2
    clear_xfail "hppa*64*-*-hpux*" "hppa*-*-linux*" "hppa*-*-lites*"
    clear_xfail "hppa*-*-*n*bsd*" "hppa*-*-rtems*" "*-*-*elf*" "m68*-*-sysv4*"
d97 5
a101 5
    if [string match "" $exec_output] then {
	pass "objcopy (simple copy)"
    } else {
	send_log "$exec_output\n"
	verbose "$exec_output" 1
d103 2
a104 2
	# On OSF/1, this succeeds with gas and fails with /bin/as.
	setup_xfail "alpha*-*-osf*"
d106 2
a107 2
	# This fails for COFF i960-vxworks targets.
	setup_xfail "i960-*-vxworks*"
d109 2
a110 1
	fail "objcopy (simple copy)"
d114 2
d667 2
a668 6
    if {![binutils_assemble $srcdir/$subdir/link-order.s tmpdir/bintest.o]} then {
	perror "unresolved ia64 link order."
	unresolved "objcopy (ia64 link order)"
    } else {
	# Test that objcopy does not modify a file with link order bit
	# when copying it.
d670 3
a672 27
	set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS $tempfile ${copyfile}.o"]

	if ![string match "" $got] then {
	    fail "objcopy (ia64 link order)"
	} else {
	    send_log "cmp $tempfile ${copyfile}.o\n"
	    verbose "cmp $tempfile ${copyfile}.o"
	    if [is_remote host] {
		set src1 tmpdir/bintest.o
		set src2 tmpdir/copy.o
		remote_upload host $tempfile $src1
		remote_upload host ${copyfile}.o $src2
	    } else {
		set src1 ${tempfile}
		set src2 ${copyfile}.o
	    }
	    set status [remote_exec build cmp "${src1} ${src2}"]
	    set exec_output [lindex $status 1]
	    set exec_output [prune_warnings $exec_output]

	    if [string match "" $exec_output] then {
		pass "objcopy (ia64 link order)"
	    } else {
		fail "objcopy (ia64 link order)"
	    }
	}
    }
@


1.28
log
@Re-enable GAS for z8k-coff
@
text
@d651 39
@


1.27
log
@Remove a29k support.
@
text
@d83 1
a83 1
    setup_xfail "tic4x-*-*" "tic80-*-*" "w65-*" "z8*-*"
@


1.26
log
@Update FSF address
@
text
@a73 1
    setup_xfail "a29k-*"
@


1.25
log
@update copyright dates
@
text
@d17 1
a17 1
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
@


1.24
log
@	* binutils-all/ar.exp: Remove stray semicolons.
	* binutils-all/dlltool.exp: Likewise.
	* binutils-all/objcopy.exp: Likewise.
	* binutils-all/readelf.exp: Likewise.
	* binutils-all/windres/windres.exp: Likewise.
	* lib/utils-lib.exp: Likewise.
@
text
@d1 2
a2 1
#   Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
@


1.23
log
@	* binutils-all/objcopy.exp: Accept main as a data symbol as well.
@
text
@d39 2
a40 2
    set tempfile tmpdir/bintest.o;
    set copyfile tmpdir/copy;
d58 2
a59 2
	remote_upload host $tempfile $src1;
	remote_upload host ${copyfile}.o $src2;
d64 2
a65 2
    set status [remote_exec build cmp "${src1} ${src2}"];
    set exec_output [lindex $status 1];
d123 2
a124 2
	remote_upload host ${srecfile} tmpdir/copy.srec;
	set srecfile tmpdir/copy.srec;
d335 1
a335 1
	set objfile [remote_download host tmpdir/testprog.o];
d362 1
a362 1
	set objfile [remote_download host tmpdir/testprog.o];
d403 1
a403 1
	set objfile [remote_download host tmpdir/testprog.o];
d440 2
a441 2
    set res [build_wrapper testglue.o];
    set flags { debug };
d444 2
a445 2
	lappend flags "additional_flags=[lindex $res 1]";
	set add_libs "testglue.o";
d447 1
a447 1
	set add_libs "";
d459 2
a460 2
    set result [remote_load target tmpdir/$test_prog];
    set status [lindex $result 0];
d476 1
a476 1
	set testfile [remote_download host tmpdir/$test_prog];
d482 1
a482 1
    remote_file host delete $testcopy;
d497 1
a497 1
    set exec_output [lindex $status 1];
d530 1
a530 1
    set status [lindex $output 0];
d546 1
a546 1
	set copyfile [remote_download host tmpdir/striprog];
d558 1
a558 1
	remote_upload host ${copyfile} tmpdir/striprog;
d562 1
a562 1
    set status [lindex $result 0];
d584 1
a584 1
	set copyfile [remote_download host tmpdir/striprog];
d596 1
a596 1
	remote_upload host ${copyfile} tmpdir/striprog;
d600 1
a600 1
    set status [lindex $result 0];
@


1.22
log
@	* binutils-all/objcopy.exp: Reorder arguments for POSIXLY_CORRECT
	systems.p
@
text
@d616 2
a617 2
    if {![regexp {^[0-9a-fA-F]+ T main} $exec_output] \
         && ![regexp {^[0-9a-fA-F]+ T _main} $exec_output]} {
@


1.21
log
@	* binutils-all/objcopy.exp: Initialise $test_prog to
	testprog.exe on mingw targeted systems too.
@
text
@d178 1
a178 1
    set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS -O srec $tempfile ${copyfile}.srec --set-start 0x7654"]
d195 1
a195 1
    set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS -O srec $tempfile ${copyfile}.srec --adjust-start 0x123"]
d240 1
a240 1
    set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS -O srec $tempfile ${copyfile}.srec --adjust-vma 0x123"]
d274 1
a274 1
    set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS -O srec $tempfile ${copyfile}.srec $arg"]
d294 1
a294 1
    set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS -O srec $tempfile ${copyfile}.srec $argeq"]
@


1.21.6.1
log
@	* binutils-all/objcopy.exp: Reorder arguments for POSIXLY_CORRECT
	systems.
@
text
@d178 1
a178 1
    set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS -O srec --set-start 0x7654 $tempfile ${copyfile}.srec"]
d195 1
a195 1
    set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS -O srec --adjust-start 0x123 $tempfile ${copyfile}.srec"]
d240 1
a240 1
    set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS -O srec --adjust-vma 0x123 $tempfile ${copyfile}.srec"]
d274 1
a274 1
    set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS -O srec $arg $tempfile ${copyfile}.srec"]
d294 1
a294 1
    set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS -O srec $argeq $tempfile ${copyfile}.srec"]
@


1.21.6.2
log
@Merge from mainline
@
text
@d616 2
a617 2
    if {![regexp {^([0-9a-fA-F]+)?[ ]+[TD] main} $exec_output] \
         && ![regexp {^([0-9a-fA-F]+)?[ ]+[TD] _main} $exec_output]} {
@


1.20
log
@Replace occurances of testprog with $test_prog.  Initialise this variable to
testprog.exe on Cygwin targeted systems.
@
text
@d428 1
a428 1
if { [istarget *-*-cygwin] } {
@


1.19
log
@
TIC4X testcase commit

	* binutils/testsuite/binutils-all/objcopy.exp: Disable tic4x
	from test
	* binutils/testsuite/binutils-all/objdump.exp: Setup proper
	values for tic4x testcase
	* gas/testsuite/gas/all/gas.exp: Setup for tic4x testcase
	* gas/testsuite/gas/macros/macros.exp: Ditto
	* gas/testsuite/gas/all/gas.exp: Setup for tic4x testcase
	* gas/testsuite/gas/macros/macros.exp: Ditto
	* gas/testsuite/gas/tic4x: New tic4x gas testsuite directory
	* ld/testsuite/ld-scripts/script.exp: Setup for tic4x testcase
@
text
@d428 6
d438 1
d455 1
a455 1
    if { [target_compile "$srcdir/$subdir/testprog.c $add_libs" tmpdir/testprog executable $flags]  != "" } {
d459 1
a459 1
    set result [remote_load target tmpdir/testprog];
d473 1
d476 1
a476 1
	set testfile [remote_download host tmpdir/testprog];
d479 1
a479 1
	set testfile tmpdir/testprog
d496 1
a496 1
    set status [remote_exec build "cmp" "tmpdir/testprog tmpdir/copyprog"]
@


1.18
log
@Revert last change.
@
text
@d83 1
a83 1
    setup_xfail "tic80-*-*" "w65-*" "z8*-*"
@


1.17
log
@	* binutils-all/objcopy.exp (strip_test): Adjust for "no symbols" on
	stdout.
	(strip_executable): Likewise.
@
text
@d374 1
a374 1
    if ![string match "" $exec_output] {
d561 1
a561 1
    if ![string match "" $exec_output] {
@


1.16
log
@	* binutils-all/objdump.exp (cpus_expected): Add fr500, ip2022,
	tic80, tms320c30.
	* binutils-all/objcopy.exp (simple copy): Revise xfails.
@
text
@d374 1
a374 1
    if ![string match "*: no symbols*" $exec_output] {
d561 1
a561 1
    if ![string match "*: no symbols*" $exec_output] {
@


1.15
log
@        * testsuite/binutils-all/objcopy.exp: clear xfail for
        "hppa*64*-*-hpux*".
        * testsuite/binutils-all/hppa/objdump.exp: Return if
        "*64*-*-*".
@
text
@d73 3
a75 10
    setup_xfail "sh-*-coff" "sh-*-hms" 
    setup_xfail "m68*-*-hpux*" "m68*-*-sunos*" "m68*-*-coff" "m68*-*-vxworks*"
    setup_xfail "m68*-ericsson-ose" "m68k*-motorola-sysv*"
    setup_xfail "i*86-*-aout*"
    setup_xfail "i*86-*-sysv3" "i*86-*-isc*" "i*86-*-sco*" "i*86-*-coff"
    setup_xfail "i*86-*-aix*" "i*86-*-go32*" "i*86-*-msdos*"
    setup_xfail "a29k-*-udi" "a29k-*-coff" "a29k-*-vxworks*"
    setup_xfail "i960-*-coff"
    setup_xfail "h8300-*-hms" "h8300-*-coff"
    setup_xfail "h8500-*-hms" "h8500-*-coff"
d77 10
a86 3
    clear_xfail "hppa*64*-*-hpux*" "hppa*-*-*elf*" "hppa*-*-linux*"
    setup_xfail "m88*-*-coff" "m88*-motorola-sysv*"
    setup_xfail "z8*-*-coff"
@


1.14
log
@	* binutils-all/objcopy.exp (strip_test_with_saving_a_symbol):
	Revert 2001-11-15.  Instead allow `D main'.
@
text
@d84 1
a84 1
    clear_xfail "hppa*-*-*elf*" "hppa*-*-linux*"
@


1.13
log
@	* binutils-all/objcopy.exp
	(strip_executable_with_saving_a_symbol): Prune symbol Main in nm
	output for mmix-knuth-mmixware.
@
text
@d415 1
a415 1
    if {![regexp {^([0-9a-fA-F]+)?[ ]+[T\?] main} $exec_output] \
@


1.12
log
@Expect xscale-coff to fail simple objcopy test for the same reason as arm-coff.
@
text
@d599 9
@


1.12.2.1
log
@	* binutils-all/objcopy.exp
	(strip_executable_with_saving_a_symbol): Prune symbol Main in nm
	output for mmix-knuth-mmixware.
@
text
@a598 9
    if { [istarget mmix-knuth-mmixware] } {
	# Whenever there's a symbol in the mmo format, there's the symbol
	# Main, so remove it manually from the expected output for sake of
	# this test.

	# Using "" not {} to get the \n and \r translated.
	regsub "^\[0-9a-fA-F\]+\[ \]+T Main\[\n\r\]+" $exec_output "" exec_output
    }

@


1.11
log
@2001-11-29  H.J. Lu <hjl@@gnu.org>

	* binutils-all/objcopy.exp (strip_test): Add strip on archive.
@
text
@d1 1
a1 1
#   Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001
d513 1
@


1.10
log
@	* binutils-all/objcopy.exp: Allow '? main', to suit powerpc64.
@
text
@d317 1
d327 28
@


1.9
log
@s/linuxaout/linux*aout/, s/linuxoldld/linux*oldld/
@
text
@d386 1
a386 1
    if {![regexp {^([0-9a-fA-F]+)?[ ]+T main} $exec_output] \
@


1.8
log
@Fix typos in ChangeLogs and update copyright notices
@
text
@d76 1
a76 1
    setup_xfail "i*86-*-linuxaout*" "i*86-*-aout*"
@


1.7
log
@2001-02-11  H.J. Lu  <hjl@@gnu.org>

	* config/default.exp: Set up gcc_gas_flag.

	* binutils-all/objcopy.exp (copy_setup): Process gcc_gas_flag
	for Linux only.

	* binutils-all/testprog.c: Include <string.h> and don't use
	exit ().
@
text
@d1 2
a2 1
#   Copyright (C) 1994, 95, 96, 97, 1998 Free Software Foundation, Inc.
@


1.6
log
@Expect all arm variants to fail copying executable test
@
text
@d401 1
d413 5
@


1.6.2.1
log
@Update copyright notices.
@
text
@d1 1
a1 2
#   Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001
#   Free Software Foundation, Inc.
@


1.6.2.2
log
@Merge from mainline.
@
text
@d76 1
a76 1
    setup_xfail "i*86-*-aout*"
a401 1
    global gcc_gas_flag
a412 5
    if { [istarget *-*-linux*] } {
	foreach i $gcc_gas_flag {
	    set flags "additional_flags=$i $flags"
	}
    }
@


1.5
log
@elf fixes.
@
text
@d476 1
a476 1
	setup_xfail "arm*-*-coff"
@


1.4
log
@expect thumb-pe and thumb-coff failures
@
text
@d83 1
a83 1
    clear_xfail "hppa*-*-*elf*"
@


1.3
log
@Expect arm-pe and arm-coff failure of the simple objcopy test
@
text
@d478 2
@


1.2
log
@	* binutils-all/objcopy.exp: Add setup_xfail for simple copy test
	for i*86-*-msdos*.
@
text
@d476 3
@


1.1
log
@Initial revision
@
text
@d77 1
a77 1
    setup_xfail "i*86-*-aix*" "i*86-*-go32*"
@


1.1.1.1
log
@19990502 sourceware import
@
text
@@

