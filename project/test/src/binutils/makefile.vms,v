head	1.6;
access;
symbols
	binutils-2_24-branch:1.6.0.2
	binutils-2_24-branchpoint:1.6
	binutils-2_21_1:1.2
	binutils-2_23_2:1.5
	binutils-2_23_1:1.5
	binutils-2_23:1.5
	binutils-2_23-branch:1.5.0.6
	binutils-2_23-branchpoint:1.5
	binutils-2_22_branch:1.5.0.4
	binutils-2_22:1.5
	binutils-2_22-branch:1.5.0.2
	binutils-2_22-branchpoint:1.5
	binutils-2_21:1.2
	binutils-2_21-branch:1.2.0.2
	binutils-2_21-branchpoint:1.2
	binutils-2_20_1:1.1
	binutils-2_20:1.1
	binutils-2_20-branch:1.1.0.2
	binutils-2_20-branchpoint:1.1
	binutils_latest_snapshot:1.6;
locks; strict;
comment	@# @;


1.6
date	2012.12.17.16.55.39;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	2011.06.08.12.40.28;	author gingold;	state Exp;
branches;
next	1.4;

1.4
date	2011.03.31.14.15.31;	author gingold;	state Exp;
branches;
next	1.3;

1.3
date	2011.03.31.11.08.40;	author gingold;	state Exp;
branches;
next	1.2;

1.2
date	2010.01.12.10.16.50;	author gingold;	state Exp;
branches;
next	1.1;

1.1
date	2009.09.02.14.14.49;	author gingold;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Add copyright notices
@
text
@#
# Makefile for binutils under openVMS (Alpha and Itanium)
#
# For use with gnu-make for vms
#
# Created by Klaus Kaempf, kkaempf@@rmi.de
#
#   Copyright 2012 Free Software Foundation
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; see the file COPYING3.  If not see
# <http://www.gnu.org/licenses/>.
#

DEFS=/define=("OBJDUMP_PRIVATE_VECTORS=")
OPT=/noopt/debug
CFLAGS=$(OPT)/include=([],"../include",[-.bfd])$(DEFS)\
 /name=(as_is,shortened)\
 /prefix=(all,except=("getopt","optarg","optopt","optind","opterr"))\
 /warns=(info=(ptrmismatch,shiftcount))

LIBBFD = [-.bfd]libbfd.olb/lib
LIBBFD_DEP = [-.bfd]libbfd.olb
LIBIBERTY_DEP = [-.libiberty]libiberty.olb
LIBIBERTY = [-.libiberty]libiberty.olb/lib
OPCODES_DEP = [-.opcodes]libopcodes.olb
OPCODES = [-.opcodes]libopcodes.olb/lib

DEBUG_OBJS = rddbg.obj,debug.obj,stabs.obj,ieee.obj,rdcoff.obj,dwarf.obj,\
  elfcomm.obj

BULIBS = bucomm.obj,version.obj,filemode.obj

ADDL_DEPS = $(BULIBS),$(LIBBFD_DEP),$(LIBIBERTY_DEP)
ADDL_LIBS = $(BULIBS),$(LIBBFD),$(LIBIBERTY)

SIZEOBJS = $(ADDL_DEPS),size.obj

STRINGSOBJS = $(ADDL_DEPS),strings.obj

NMOBJS = $(ADDL_DEPS),nm.obj

ADDR2LINEOBJS = $(ADDL_DEPS),addr2line.obj

OBJDUMPOBJS = objdump.obj,prdbg.obj,$(DEBUG_OBJS),$(ADDL_DEPS),$(OPCODES_DEP)

READELFOBJS = readelf.obj,dwarf.obj,unwind-ia64.obj,$(ADDL_DEPS)

all: config.h size.exe strings.exe objdump.exe nm.exe addr2line.exe

size.exe: $(SIZEOBJS)
	link/exe=$@@ size.obj,$(ADDL_LIBS)

strings.exe: $(STRINGSOBJS)
	link/exe=$@@ strings.obj,$(ADDL_LIBS)

nm.exe: $(NMOBJS)
	link/exe=$@@ nm.obj,$(ADDL_LIBS)

addr2line.exe: $(ADDR2LINEOBJS)
	link/exe=$@@ addr2line.obj,$(ADDL_LIBS)

objdump.exe: $(OBJDUMPOBJS)
	link/exe=$@@ objdump.obj,prdbg.obj,$(DEBUG_OBJS),$(ADDL_LIBS),$(OPCODES)

readelf.exe: $(READELFOBJS)
	link/exe=$@@ readelf.obj,dwarf.obj,unwind-ia64.obj,$(ADDL_LIBS)

config.h:
	$$ @@configure
	$(MAKE) -f makefile.vms "CC=$(CC)"

clean:
	$$ purge
	$(RM) *.obj;
	$(RM) *.exe;

distclean: clean
	$(RM) config.h;
	$(RM) makefile.vms;
@


1.5
log
@2011-06-08  Tristan Gingold  <gingold@@adacore.com>

	* makefile.vms (DEFS): Define OBJDUMP_PRIVATE_VECTORS.
@
text
@d8 15
@


1.4
log
@bfd/
2011-03-31  Tristan Gingold  <gingold@@adacore.com>

	* makefile.vms (DEFS): Add HAVE_bfd_elf64_ia64_vms_vec.
	* configure.com: Set BFD_HOST_64BIT_LONG_LONG and
	BFD_HOST_LONG_LONG to 1.

binutils/
2011-03-31  Tristan Gingold  <gingold@@adacore.com>

	* makefile.vms (readelf.exe): New target.
@
text
@d2 1
a2 1
# Makefile for binutils under openVMS (Alpha and Vax)
d6 1
a6 1
# Created by Klaus K"ampf, kkaempf@@rmi.de
d10 1
a10 6
ifeq ($(CC),gcc)
DEFS=
CFLAGS=/include=([],[-.include],[-.bfd])$(DEFS)
LIBS=,gnu_cc_library:libgcc/lib,sys$$library:vaxcrtl.olb/lib,gnu_cc_library:crt0.obj
else
DEFS=
a15 1
endif
@


1.3
log
@bfd/
2011-03-31  Tristan Gingold  <gingold@@adacore.com>

	* vms-alpha.c (vms_get_remaining_object_record): Fix dec-c warning.
	(_bfd_vms_write_etir): Ditto.
	(_bfd_vms_slurp_etir): Avoid to use intptr_t
	* configure.com: Generate bfd_stdint.h

binutils/
2011-03-31  Tristan Gingold  <gingold@@adacore.com>

	* makefile.vms (DEBUG_OBJS): Add elfcomm.obj.

libiberty/
2011-03-31  Tristan Gingold  <gingold@@adacore.com>

	* makefile.vms (OBJS): Add filename_cmp.obj
@
text
@d48 2
d65 4
a68 1
	link/exe=$@@ objdump.obj,prdbg.obj,$(DEBUG_OBJS),$(ADDL_LIBS),$(LIBBFD),$(OPCODES)
@


1.2
log
@bfd/
2010-01-12  Tristan Gingold  <gingold@@adacore.com>

	* makefile.vms (CFLAGS): Turns warnings into informational messages.

binutils/
2010-01-12  Tristan Gingold  <gingold@@adacore.com>

	* makefile.vms (CFLAGS): Turns warnings into informational messages.
@
text
@d30 2
a31 1
DEBUG_OBJS = rddbg.obj,debug.obj,stabs.obj,ieee.obj,rdcoff.obj,dwarf.obj
@


1.1
log
@2009-09-02  Tristan Gingold  <gingold@@adacore.com>

	* configure.com: Do not copy makefile.vms-in to makefile.vms
	* makefile.vms-in: Renamed to...
	* makefile.vms: ... this usual name as it is not processed anymore.
	Remove WRITE_DEBUG_OBJS (unused) and reorder object files for
	objdump.exe.
@
text
@d19 2
a20 1
 /prefix=(all,except=("getopt","optarg","optopt","optind","opterr"))
@

