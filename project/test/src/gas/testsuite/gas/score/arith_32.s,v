head	1.1;
access;
symbols
	binutils-2_24-branch:1.1.0.14
	binutils-2_24-branchpoint:1.1
	binutils-2_21_1:1.1
	binutils-2_23_2:1.1
	binutils-2_23_1:1.1
	binutils-2_23:1.1
	binutils-2_23-branch:1.1.0.12
	binutils-2_23-branchpoint:1.1
	binutils-2_22_branch:1.1.0.10
	binutils-2_22:1.1
	binutils-2_22-branch:1.1.0.8
	binutils-2_22-branchpoint:1.1
	binutils-2_21:1.1
	binutils-2_21-branch:1.1.0.6
	binutils-2_21-branchpoint:1.1
	binutils-2_20_1:1.1
	binutils-2_20:1.1
	binutils-2_20-branch:1.1.0.4
	binutils-2_20-branchpoint:1.1
	dje-cgen-play1-branch:1.1.0.2
	dje-cgen-play1-branchpoint:1.1
	binutils_latest_snapshot:1.1;
locks; strict;
comment	@# @;


1.1
date	2009.03.02.10.33.07;	author nickc;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Add support for Score7 architecture.
@
text
@/*
 * tests for arithmetic instruction relaxation 
 *
 * Author: libin
 */

.include "relaxation_macro.h"

.macro _arith_op_pattern insn insn1
  insn_32 "\insn r0, r0, r15"

  tran_16_32 "\insn! r0, r15", "\insn r0, r0, r15"

  /* shouldn't alter */
  .set r1
  insn_32 "\insn1  r0,  r0,  r15"
  insn_32 "\insn   r0,  r0,  r16"
  insn_32 "\insn   r16, r16, r0"
  insn_32 "\insn   r16, r16, r17"
  insn_32 "\insn   r0,  r1,  r2"
.endm

.text
/* add rD,rA,rB -> add! rD,rA */
_arith_op_pattern "add", "add.c"

/* sub rD,rA,rB -> sub rD,rA */
_arith_op_pattern "sub", "sub.c"

/* addi rD,SImm16 -> addi! rD,SImm6 */
insn_32 "addi r0,  -32"
insn_32 "addi r0,  31"
insn_32 "addi r15, -32"
insn_32 "addi r15, 31"

tran_16_32 "addi! r0,-32", "addi r0,-32"

/* shouldn't alter */
insn_32 "addi.c r0,  -32"
insn_32 "addi   r0,  -33"
insn_32 "addi   r0,  32"
insn_32 "addi   r16, -32"
insn_32 "addi   r16, 31"
@
