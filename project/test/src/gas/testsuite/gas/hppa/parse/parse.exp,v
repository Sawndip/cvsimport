head	1.14;
access;
symbols
	binutils-2_24-branch:1.14.0.12
	binutils-2_24-branchpoint:1.14
	binutils-2_21_1:1.14
	binutils-2_23_2:1.14
	binutils-2_23_1:1.14
	binutils-2_23:1.14
	binutils-2_23-branch:1.14.0.10
	binutils-2_23-branchpoint:1.14
	binutils-2_22_branch:1.14.0.8
	binutils-2_22:1.14
	binutils-2_22-branch:1.14.0.6
	binutils-2_22-branchpoint:1.14
	binutils-2_21:1.14
	binutils-2_21-branch:1.14.0.4
	binutils-2_21-branchpoint:1.14
	binutils-2_20_1:1.14
	binutils-2_20:1.14
	binutils-arc-20081103-branch:1.12.0.8
	binutils-arc-20081103-branchpoint:1.12
	binutils-2_20-branch:1.14.0.2
	binutils-2_20-branchpoint:1.14
	dje-cgen-play1-branch:1.13.0.2
	dje-cgen-play1-branchpoint:1.13
	arc-20081103-branch:1.12.0.6
	arc-20081103-branchpoint:1.12
	binutils-2_19_1:1.12
	binutils-2_19:1.12
	binutils-2_19-branch:1.12.0.4
	binutils-2_19-branchpoint:1.12
	binutils-2_18:1.12
	binutils-2_18-branch:1.12.0.2
	binutils-2_18-branchpoint:1.12
	binutils-csl-coldfire-4_1-32:1.11
	binutils-csl-sourcerygxx-4_1-32:1.11
	binutils-csl-innovasic-fido-3_4_4-33:1.11
	binutils-csl-sourcerygxx-3_4_4-32:1.10
	binutils-csl-coldfire-4_1-30:1.11
	binutils-csl-sourcerygxx-4_1-30:1.11
	binutils-csl-coldfire-4_1-28:1.11
	binutils-csl-sourcerygxx-4_1-29:1.11
	binutils-csl-sourcerygxx-4_1-28:1.11
	binutils-csl-arm-2006q3-27:1.11
	binutils-csl-sourcerygxx-4_1-27:1.11
	binutils-csl-arm-2006q3-26:1.11
	binutils-csl-sourcerygxx-4_1-26:1.11
	binutils-csl-sourcerygxx-4_1-25:1.11
	binutils-csl-sourcerygxx-4_1-24:1.11
	binutils-csl-sourcerygxx-4_1-23:1.11
	binutils-csl-sourcerygxx-4_1-21:1.11
	binutils-csl-arm-2006q3-21:1.11
	binutils-csl-sourcerygxx-4_1-22:1.11
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.11
	binutils-csl-sourcerygxx-4_1-20:1.11
	binutils-csl-arm-2006q3-19:1.11
	binutils-csl-sourcerygxx-4_1-19:1.11
	binutils-csl-sourcerygxx-4_1-18:1.11
	binutils-csl-renesas-4_1-9:1.11
	binutils-csl-sourcerygxx-3_4_4-25:1.10
	binutils-csl-renesas-4_1-8:1.11
	binutils-csl-renesas-4_1-7:1.11
	binutils-csl-renesas-4_1-6:1.11
	binutils-csl-sourcerygxx-4_1-17:1.11
	binutils-csl-sourcerygxx-4_1-14:1.11
	binutils-csl-sourcerygxx-4_1-15:1.11
	binutils-csl-sourcerygxx-4_1-13:1.11
	binutils-2_17:1.11
	binutils-csl-sourcerygxx-4_1-12:1.11
	binutils-csl-sourcerygxx-3_4_4-21:1.11
	binutils-csl-wrs-linux-3_4_4-24:1.10
	binutils-csl-wrs-linux-3_4_4-23:1.10
	binutils-csl-sourcerygxx-4_1-9:1.11
	binutils-csl-sourcerygxx-4_1-8:1.11
	binutils-csl-sourcerygxx-4_1-7:1.11
	binutils-csl-arm-2006q1-6:1.11
	binutils-csl-sourcerygxx-4_1-6:1.11
	binutils-csl-wrs-linux-3_4_4-22:1.10
	binutils-csl-coldfire-4_1-11:1.11
	binutils-csl-sourcerygxx-3_4_4-19:1.11
	binutils-csl-coldfire-4_1-10:1.11
	binutils-csl-sourcerygxx-4_1-5:1.11
	binutils-csl-sourcerygxx-4_1-4:1.11
	binutils-csl-wrs-linux-3_4_4-21:1.10
	binutils-csl-morpho-4_1-4:1.11
	binutils-csl-sourcerygxx-3_4_4-17:1.11
	binutils-csl-wrs-linux-3_4_4-20:1.10
	binutils-2_17-branch:1.11.0.4
	binutils-2_17-branchpoint:1.11
	binutils-csl-2_17-branch:1.11.0.2
	binutils-csl-2_17-branchpoint:1.11
	binutils-csl-gxxpro-3_4-branch:1.10.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.10
	binutils-2_16_1:1.10
	binutils-csl-arm-2005q1b:1.10
	binutils-2_16:1.10
	binutils-csl-arm-2005q1a:1.10
	binutils-csl-arm-2005q1-branch:1.10.0.4
	binutils-csl-arm-2005q1-branchpoint:1.10
	binutils-2_16-branch:1.10.0.2
	binutils-2_16-branchpoint:1.10
	csl-arm-2004-q3d:1.9
	csl-arm-2004-q3:1.9
	binutils-2_15:1.9
	binutils-2_15-branchpoint:1.9
	csl-arm-2004-q1a:1.9
	csl-arm-2004-q1:1.9
	binutils-2_15-branch:1.9.0.6
	cagney_bfdfile-20040213-branch:1.9.0.4
	cagney_bfdfile-20040213-branchpoint:1.9
	cagney_bigcore-20040122-branch:1.9.0.2
	cagney_bigcore-20040122-branchpoint:1.9
	csl-arm-2003-q4:1.9
	binutils-2_14:1.8
	binutils-2_14-branch:1.8.0.2
	binutils-2_14-branchpoint:1.8
	binutils-2_13_2_1:1.7
	binutils-2_13_2:1.7
	binutils-2_13_1:1.7
	binutils-2_13:1.7
	binutils-2_13-branchpoint:1.7
	binutils-2_13-branch:1.7.0.2
	binutils-2_12_1:1.6.2.1
	binutils-2_12:1.6
	binutils-2_12-branch:1.6.0.2
	binutils-2_12-branchpoint:1.6
	cygnus_cvs_20020108_pre:1.6
	binutils-2_11_2:1.5
	binutils-2_11_1:1.5
	binutils-2_11:1.5
	x86_64versiong3:1.5
	binutils-2_11-branch:1.5.0.2
	binutils-2_10_1:1.2
	binutils-2_10:1.2
	binutils-2_10-branch:1.2.0.2
	binutils-2_10-branchpoint:1.2
	binutils_latest_snapshot:1.14
	repo-unification-2000-02-06:1.2
	binu_ss_19990721:1.1.1.1
	binu_ss_19990602:1.1.1.1
	binu_ss_19990502:1.1.1.1
	cygnus:1.1.1;
locks; strict;
comment	@# @;


1.14
date	2009.09.02.07.24.24;	author amodra;	state Exp;
branches;
next	1.13;

1.13
date	2009.04.16.04.24.06;	author amodra;	state Exp;
branches;
next	1.12;

1.12
date	2007.07.03.11.01.07;	author nickc;	state Exp;
branches;
next	1.11;

1.11
date	2005.05.05.09.13.12;	author nickc;	state Exp;
branches;
next	1.10;

1.10
date	2005.03.03.11.47.59;	author amodra;	state Exp;
branches;
next	1.9;

1.9
date	2003.05.21.19.40.54;	author danglin;	state Exp;
branches;
next	1.8;

1.8
date	2002.09.09.01.54.43;	author bje;	state Exp;
branches;
next	1.7;

1.7
date	2002.04.23.16.19.08;	author hjl;	state Exp;
branches;
next	1.6;

1.6
date	2001.11.23.16.18.14;	author law;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	2000.09.28.10.16.33;	author amodra;	state Exp;
branches;
next	1.4;

1.4
date	2000.07.10.15.21.05;	author amodra;	state Exp;
branches;
next	1.3;

1.3
date	2000.05.01.23.56.49;	author amodra;	state Exp;
branches;
next	1.2;

1.2
date	99.08.30.20.09.00;	author law;	state Exp;
branches;
next	1.1;

1.1
date	99.05.03.07.28.50;	author rth;	state Exp;
branches
	1.1.1.1;
next	;

1.6.2.1
date	2002.04.27.12.46.09;	author amodra;	state Exp;
branches;
next	;

1.1.1.1
date	99.05.03.07.28.50;	author rth;	state Exp;
branches;
next	;


desc
@@


1.14
log
@update copyright dates
@
text
@# Copyright (C) 1993, 1996, 1997, 1999, 2000, 2001, 2002, 2003, 2005, 2007, 2009
# Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.  

# Please email any bugs, comments, and/or additions to this file to:
# dejagnu@@gnu.org

# Written by the Center for Software Science at the University of Utah
# and by Cygnus Support.

proc do_string_tests {} {
    set testname "stringer.s: Test embedded quotes and octal escapes in strings"
    set x 0

    gas_start "stringer.s" "-al"

    # Instead of having a variable for each match string just increment the
    # total number of matches seen.  That's simpler when testing large numbers
    # of instructions (as these tests to).
    while 1 {
	expect {
	    -re "^ +\[0-9\]+ 0000 23696E63\[^\n\]*\n"	{ set x [expr $x+1] }
	    -re "^ +\[0-9\]+      6C756465\[^\n\]*\n"	{ set x [expr $x+1] }
	    -re "^ +\[0-9\]+      6B2E6465\[^\n\]*\n"	{ set x [expr $x+1] }
	    -re "^ +\[0-9\]+      66220A00\[^\n\]*\n"	{ set x [expr $x+1] }
	    -re "^ +\[0-9\]+ 0014 09307831\[^\n\]*\n"	{ set x [expr $x+1] }
	    -re "^ +\[0-9\]+      3233\[^\n\]*\n"	{ set x [expr $x+1] }
	    -re "\[^\n\]*\n"				{ }
	    timeout				{ perror "timeout\n"; break }
	    eof					{ break }
	}
    }

    # This was intended to do any cleanup necessary.  It kinda looks like it
    # isn't needed, but just in case, please keep it in for now.
    gas_finish

    # Did we find what we were looking for?  If not, flunk it.
    if [expr $x==6] then { pass $testname } else { fail $testname }
}

proc do_lsel_test {} {
    set testname "lselbugs.s: lselbug"
    set x 0

    gas_start "lselbug.s" "-al"

    # Make sure we correctly handle field selectors. 
    while 1 {
	expect {
	    -re "^ +\[0-9\]+ 0000 22A04000\[^\n\]*\n"	{ set x [expr $x+1] }
	    -re "^ +\[0-9\]+ 0004 36B50100\[^\n\]*\n"	{ set x [expr $x+1] }
	    -re "^ +\[0-9\]+ 0008 22A04000\[^\n\]*\n"	{ set x [expr $x+1] }
	    -re "^ +\[0-9\]+ 000c 36B50100\[^\n\]*\n"	{ set x [expr $x+1] }
	    -re "\[^\n\]*\n"				{ }
	    timeout				{ perror "timeout\n"; break }
	    eof					{ break }
	}
    }

    # This was intended to do any cleanup necessary.  It kinda looks like it
    # isn't needed, but just in case, please keep it in for now.
    gas_finish

    # Did we find what we were looking for?  If not, flunk it.
    if [expr $x==4] then { pass $testname } else { fail $testname }
}

proc do_valid_align_tests {} {
    set testname "align1.s: valid alignment tests"
    set x 0

    gas_start "align1.s" "-al"

    # Make sure we correctly handle field selectors. 
    while 1 {
	expect {
	    -re "^ +\[0-9\]+ 0000 08000240\[^\n\]*\n"	{ set x [expr $x+1] }
	    -re "^ +\[0-9\]+ 0008 08000240\[^\n\]*\n"	{ set x [expr $x+1] }
	    -re "^ +\[0-9\]+ 1000 08000240\[^\n\]*\n"	{ set x [expr $x+1] }
	    -re "^ +\[0-9\]+ 0000\[^\n\]*BLOCK\[^\n\]*1024\[^\n\]*\n"
		{ set x [expr $x+1] }
	    -re "^ +\[0-9\]+ 0400\[^\n\]*BLOCK\[^\n\]*1024\[^\n\]*\n"
		{ set x [expr $x+1] }
	    -re "^ +\[0-9\]+ 0800\[^\n\]*BLOCK\[^\n\]*4\[^\n\]*\n"
		{ set x [expr $x+1] }
	    -re "^ +\[0-9\]+ 0804\[^\n\]*ALIGN\[^\n\]*8\[^\n\]*\n"
		{ set x [expr $x+1] }
	    -re "^ +\[0-9\]+ 0808\[^\n\]*BLOCK\[^\n\]*30\[^\n\]*\n"
		{ set x [expr $x+1] }
	    -re "^ +\[0-9\]+ 0826\[^\n\]*ALIGN\[^\n\]*4\[^\n\]*\n"
		{ set x [expr $x+1] }
	    -re "^ +\[0-9\]+ 0828\[^\n\]*BLOCK\[^\n\]*4\[^\n\]*\n"
		{ set x [expr $x+1] }
	    -re "\[^\n\]*\n"				{ }
	    timeout				{ perror "timeout\n"; break }
	    eof					{ break }
	}
    }

    # This was intended to do any cleanup necessary.  It kinda looks like it
    # isn't needed, but just in case, please keep it in for now.
    gas_finish

    # Did we find what we were looking for?  If not, flunk it.
    if [expr $x==10] then { pass $testname } else { fail $testname }
}

if [istarget hppa*-*-*] then {
    if { ![istarget hppa*-*-linux*] 
	 && ![istarget hppa*-*-netbsd*] } {
	# GAS-2.0 does not always parse ! as a line separator when it should.
	setup_xfail hppa*-*-*
    }
    gas_test "linesepbug.s" "" "" "line separator bug"

    # Make sure GAS accepts syntax for accessing static data.
    gas_test "global.s" "" "" "check for sym-\$global\$ acceptance"

    # GAS-2.0 (and 1.36 for that matter) can not handle a .proc which
    # has no label before it.
    gas_test "procbug.s" "" "" "Label following .proc"

    # One is required to explicitly IMPORT any non-local symbol used
    # in an assembly file.  Make sure we give an error if we use
    # an undefined symbol.
    setup_xfail hppa*-*-*
    gas_test_error "undefbug.s" "" "Check for error when using undefined symbol"

    # This file has code and assembler directives before switching into any
    # space/subspace pair.  This should report an error for SOM (it is not
    # an error for ELF.  The file also has mismatched entry/exit and
    # proc/procend pairs which are errors for both SOM and ELF.
    gas_test_error "nosubspace.s" "" "Check for error(s) in input file "

    # This file should return errors for both the ENTRY_GR and ENTRY_FR
    # directives (they are out-of-range)
    gas_test_error "entrybug.s" "" "Check for error on entry_gr and entry_fr"

    # Make sure embedded quotes and octal escapes in strings work
    do_string_tests

    # Make sure we do not die on a .version directive
    gas_test "versionbug.s" "" "" ".version directive"

    # Make sure we give an error on a bogus .space directive.
    # recent version of gas2 went into infinite loops printing
    # errors on this test.
    gas_test_error "spacebug.s" "" "Check for error on bogus .space directive"

    # GAS should give an error for this test.
    gas_test_error "calldatabug.s" "" "Check for invalid aguments on .call"

    # Old versions of gas incorrectly gave errors on some valid .EXPORT lines
    gas_test "exportbug.s" "" "" "syntax check for an old .EXPORT bug"

    # Old versions of gas choked on this file for some reason
    gas_test "fixup7bug.s" "" "" "check for old \"fixup7\" gas bug"

    # Test an L% selector parsing bug which existed in gas-1.36   
    do_lsel_test

    # First check how some valid alignments are handled.
    do_valid_align_tests

    # Now check to make sure an invalid argument is flagged as an error.
    gas_test_error "align2.s" "" "Check for error on bogus argument to .align"

    gas_test "block1.s" "" "" "Check min/max values for .block"

    # Now check for an invalid argument
    gas_test_error "block2.s" "" "Check for error on bogus argument to .block"

    # GAS-1.36 choked on this file.
    # FIXME.  Should check relocations made for this test!
    gas_test "exprbug.s" "" "" "Check for sym1-sym2 acceptance"

    # Bad things happen in the PA ELF backend (others too?) if a non-default
    # section is created...
    setup_xfail "hppa*-*-*elf*" "hppa*-*-linux*" "hppa*64*-*-*"
    gas_test "ssbug.s" "" "" "Check for acceptance of non-default subspaces"

    # To be compatable with certain "features" of the HP compiler
    # non-existant registers should default to %r0.
    gas_test "defbug.s" "" "" "Missing register should default to %%r0"

    # Make sure GAS understands a reasonable set of standard predefined
    # registers.  eg %rp, %dp, %sp, etc.
    gas_test "stdreg.s" "" "" "Test standard predefined registers"

    # Make sure GAS will accept a label without a colon.
    setup_xfail "hppa*-*-linux*"
    gas_test "labelbug.s" "" "" "Test label without colon"

    # Make sure we grok # line directives.
    gas_test "appbug.s" "" "" "Test acceptance of #line directives"

    # Make sure we give errors if a floating point format is specified
    # for an xmpyu instruction (integer multiple)
    gas_test_error "xmpyubug.s" "" "Check for error on bogus argument to xmpyu"

    # Make sure gas handles various kinds of .reg pseudo-ops
    gas_test "regpopbug.s" "" "" "Test for bugs in .reg pseudo-op"

    # Check some bugs that have appeared in parsing .callinfo directives
    gas_test "callinfobug.s" "" "" "Test for bugs in .callinfo directive"

    # Check for bogus registers in single precision fmpyadd/fmpysub
    # instructions
    gas_test_error "badfmpyadd.s" "" "Check for error on bad fmpyadd insn"

    # Make sure we grok spaces in directives.
    gas_test "space.s" "" "" "Test acceptance of spaces in directives"
}

@


1.13
log
@binutils/testsuite/
	* binutils-all/localize-hidden-1.s: Use "==" instead of ".set".
	* binutils-all/localize-hidden-2.s: Likewise.
gas/testsuite/
	* gas/all/gas.exp: Disable assign and assign-ok tests on blackfin.
	* gas/all/p2425.s: Use "==" instead of "=".
	* gas/all/weakref1.s: Likewise.
	* gas/macros/and.s: Likewise.
	* gas/macros/test1.s: Likewise.
	* gas/hppa/parse/parse.exp: Remove xfail on block1.
ld/testsuite/
	* ld-libs/lib-1.s: Use "==" instead of ".set".
	* ld-libs/lib-2.s: Likewise.
	* ld-scripts/defined.s: Likewise.
@
text
@d1 1
a1 1
# Copyright (C) 1993, 1996, 1997, 1999, 2000, 2001, 2002, 2003, 2007
@


1.12
log
@Switch to GPLv3
@
text
@a181 2
    # GAS can't handle upper bound for a PA .block[z] directive
    setup_xfail hppa*-*-*
@


1.11
log
@Update the address and phone number of the FSF
@
text
@d1 1
a1 1
# Copyright (C) 1993, 1996, 1997, 1999, 2000, 2001, 2002, 2003
d6 1
a6 1
# the Free Software Foundation; either version 2 of the License, or
@


1.10
log
@update copyright dates
@
text
@d16 1
a16 1
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  
@


1.9
log
@	* config/tc-hppa.c (hppa_symbol_chars): Remove `,' and `!'.
	* testsuite/gas/hppa/parse/parse.exp: Add "space.s".
	* testsuite/gas/hppa/parse/space.s: New file to test spaces.
@
text
@d1 2
a2 1
# Copyright (C) 1993, 1996, 1997 Free Software Foundation, Inc.
@


1.8
log
@2002-09-08  Ben Elliston  <bje@@redhat.com>

	* gas/hppa/basic/basic.exp: Update DejaGnu mail address.
	* gas/hppa/parse/parse.exp: Likewise.
	* gas/hppa/reloc/reloc.exp: Likewise.
	* gas/hppa/unsorted/unsorted.exp: Likewise.
	* gas/mn10200/basic.exp: Likewise.
	* gas/mn10300/basic.exp: Likewise.
	* gas/sh/basic.exp: Likewise.
	* gas/sh/sh64/sh64.exp: Likewise.
	* gas/v850/basic.exp: Likewise.
	* lib/gas-defs.exp: Likewise.

	* gas/all/gas.exp: Removing limping support for DejaGnu 1.1.1.
	* gasp/gasp.exp: Likewise.
@
text
@d225 3
@


1.7
log
@2002-04-23  H.J. Lu <hjl@@gnu.org>

	* gas/hppa/parse/parse.exp: Don't expect failure on line separator
	test on hppa*-*-linux* nor hppa*-*-netbsd*.
@
text
@d18 1
a18 1
# DejaGnu@@cygnus.com
@


1.6
log
@        * gas/hppa/parse/parse.exp: Expect failure on line separator bug.
@
text
@d122 5
a126 2
    # GAS-2.0 does not always parse ! as a line separator when it should.
    setup_xfail hppa*-*-*
@


1.6.2.1
log
@	Merge from mainline.
	2002-04-23  H.J. Lu <hjl@@gnu.org>
	* gas/hppa/parse/parse.exp: Don't expect failure on line separator
	test on hppa*-*-linux* nor hppa*-*-netbsd*.

	2002-03-19  Bo Thorsen  <bo@@suse.de>
	* gas/i386/x86-64-opcode.d: More test cases for x86-64 opcodes.
	* gas/i386/x86-64-opcode.s: Likewise

	2002-02-24  Hans-Peter Nilsson  <hp@@bitrange.com>
	* gas/mmix/bspec-1.d, gas/mmix/bspec-2.d, gas/mmix/comment-1.d:
	Adjust to changes in readelf output.

	2002-02-22  Bo Thorsen  <bo@@suse.de>
	* i386.exp: Add x86-64-opcode (checks valid opcodes) and x86-64-inval
	(checks invalid opcodes) checks
	* x86-64-inval.l: New file.
	* x86-64-inval.s: New file.
	* x86-64-opcode.d: New file.
	* x86-64-opcode.s: New file.
@
text
@d122 2
a123 5
    if { ![istarget hppa*-*-linux*] 
	 && ![istarget hppa*-*-netbsd*] } {
	# GAS-2.0 does not always parse ! as a line separator when it should.
	setup_xfail hppa*-*-*
    }
@


1.5
log
@Update for hppa*w -> hppa*64* configure name change.
@
text
@d123 1
@


1.4
log
@Yet more hppa testuite tweaks for hppa-linux.
@
text
@d190 1
a190 1
    setup_xfail "hppa*-*-*elf*" "hppa*-*-linux*" "hppa*w-*-*"
@


1.3
log
@Duplicate hppa*-*-*elf* behaviour for hppa*-*-linux*.
Fix elf tests for targets that define LABELS_WITHOUT_COLONS.
@
text
@a122 1
    setup_xfail hppa*-*-*
d202 1
@


1.2
log
@        * gas/hppa/parse/*.s: Use .code instead of .SPACE/.SUBSPA for
        sectioning.
        * gas/hppa/parse/parse.exp: Disable tests not appropriate for PA64.
@
text
@d191 1
a191 2
    setup_xfail hppa*-*-*elf*
    setup_xfail hppa*w-*-*
@


1.1
log
@Initial revision
@
text
@d192 1
@


1.1.1.1
log
@19990502 sourceware import
@
text
@@

