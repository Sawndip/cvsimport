head	1.4;
access;
symbols
	binutils-2_24-branch:1.4.0.8
	binutils-2_24-branchpoint:1.4
	binutils-2_21_1:1.3
	binutils-2_23_2:1.4
	binutils-2_23_1:1.4
	binutils-2_23:1.4
	binutils-2_23-branch:1.4.0.6
	binutils-2_23-branchpoint:1.4
	binutils-2_22_branch:1.4.0.4
	binutils-2_22:1.4
	binutils-2_22-branch:1.4.0.2
	binutils-2_22-branchpoint:1.4
	binutils-2_21:1.3
	binutils-2_21-branch:1.3.0.2
	binutils-2_21-branchpoint:1.3
	binutils-2_20_1:1.2
	binutils-2_20:1.2
	binutils-arc-20081103-branch:1.2.0.38
	binutils-arc-20081103-branchpoint:1.2
	binutils-2_20-branch:1.2.0.36
	binutils-2_20-branchpoint:1.2
	dje-cgen-play1-branch:1.2.0.34
	dje-cgen-play1-branchpoint:1.2
	arc-20081103-branch:1.2.0.32
	arc-20081103-branchpoint:1.2
	binutils-2_19_1:1.2
	binutils-2_19:1.2
	binutils-2_19-branch:1.2.0.30
	binutils-2_19-branchpoint:1.2
	binutils-2_18:1.2
	binutils-2_18-branch:1.2.0.28
	binutils-2_18-branchpoint:1.2
	binutils-csl-coldfire-4_1-32:1.2
	binutils-csl-sourcerygxx-4_1-32:1.2
	binutils-csl-innovasic-fido-3_4_4-33:1.2
	binutils-csl-sourcerygxx-3_4_4-32:1.2
	binutils-csl-coldfire-4_1-30:1.2
	binutils-csl-sourcerygxx-4_1-30:1.2
	binutils-csl-coldfire-4_1-28:1.2
	binutils-csl-sourcerygxx-4_1-29:1.2
	binutils-csl-sourcerygxx-4_1-28:1.2
	binutils-csl-arm-2006q3-27:1.2
	binutils-csl-sourcerygxx-4_1-27:1.2
	binutils-csl-arm-2006q3-26:1.2
	binutils-csl-sourcerygxx-4_1-26:1.2
	binutils-csl-sourcerygxx-4_1-25:1.2
	binutils-csl-sourcerygxx-4_1-24:1.2
	binutils-csl-sourcerygxx-4_1-23:1.2
	binutils-csl-sourcerygxx-4_1-21:1.2
	binutils-csl-arm-2006q3-21:1.2
	binutils-csl-sourcerygxx-4_1-22:1.2
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.2
	binutils-csl-sourcerygxx-4_1-20:1.2
	binutils-csl-arm-2006q3-19:1.2
	binutils-csl-sourcerygxx-4_1-19:1.2
	binutils-csl-sourcerygxx-4_1-18:1.2
	binutils-csl-renesas-4_1-9:1.2
	binutils-csl-sourcerygxx-3_4_4-25:1.2
	binutils-csl-renesas-4_1-8:1.2
	binutils-csl-renesas-4_1-7:1.2
	binutils-csl-renesas-4_1-6:1.2
	binutils-csl-sourcerygxx-4_1-17:1.2
	binutils-csl-sourcerygxx-4_1-14:1.2
	binutils-csl-sourcerygxx-4_1-15:1.2
	binutils-csl-sourcerygxx-4_1-13:1.2
	binutils-2_17:1.2
	binutils-csl-sourcerygxx-4_1-12:1.2
	binutils-csl-sourcerygxx-3_4_4-21:1.2
	binutils-csl-wrs-linux-3_4_4-24:1.2
	binutils-csl-wrs-linux-3_4_4-23:1.2
	binutils-csl-sourcerygxx-4_1-9:1.2
	binutils-csl-sourcerygxx-4_1-8:1.2
	binutils-csl-sourcerygxx-4_1-7:1.2
	binutils-csl-arm-2006q1-6:1.2
	binutils-csl-sourcerygxx-4_1-6:1.2
	binutils-csl-wrs-linux-3_4_4-22:1.2
	binutils-csl-coldfire-4_1-11:1.2
	binutils-csl-sourcerygxx-3_4_4-19:1.2
	binutils-csl-coldfire-4_1-10:1.2
	binutils-csl-sourcerygxx-4_1-5:1.2
	binutils-csl-sourcerygxx-4_1-4:1.2
	binutils-csl-wrs-linux-3_4_4-21:1.2
	binutils-csl-morpho-4_1-4:1.2
	binutils-csl-sourcerygxx-3_4_4-17:1.2
	binutils-csl-wrs-linux-3_4_4-20:1.2
	binutils-2_17-branch:1.2.0.26
	binutils-2_17-branchpoint:1.2
	binutils-csl-2_17-branch:1.2.0.24
	binutils-csl-2_17-branchpoint:1.2
	binutils-csl-gxxpro-3_4-branch:1.2.0.22
	binutils-csl-gxxpro-3_4-branchpoint:1.2
	binutils-2_16_1:1.2
	binutils-csl-arm-2005q1b:1.2
	binutils-2_16:1.2
	binutils-csl-arm-2005q1a:1.2
	binutils-csl-arm-2005q1-branch:1.2.0.20
	binutils-csl-arm-2005q1-branchpoint:1.2
	binutils-2_16-branch:1.2.0.18
	binutils-2_16-branchpoint:1.2
	csl-arm-2004-q3d:1.2
	csl-arm-2004-q3:1.2
	binutils-2_15:1.2
	binutils-2_15-branchpoint:1.2
	csl-arm-2004-q1a:1.2
	csl-arm-2004-q1:1.2
	binutils-2_15-branch:1.2.0.16
	cagney_bfdfile-20040213-branch:1.2.0.14
	cagney_bfdfile-20040213-branchpoint:1.2
	cagney_bigcore-20040122-branch:1.2.0.12
	cagney_bigcore-20040122-branchpoint:1.2
	csl-arm-2003-q4:1.2
	binutils-2_14:1.2
	binutils-2_14-branch:1.2.0.10
	binutils-2_14-branchpoint:1.2
	binutils-2_13_2_1:1.2
	binutils-2_13_2:1.2
	binutils-2_13_1:1.2
	binutils-2_13:1.2
	binutils-2_13-branchpoint:1.2
	binutils-2_13-branch:1.2.0.8
	binutils-2_12_1:1.2
	binutils-2_12:1.2
	binutils-2_12-branch:1.2.0.6
	binutils-2_12-branchpoint:1.2
	cygnus_cvs_20020108_pre:1.2
	binutils-2_11_2:1.2
	binutils-2_11_1:1.2
	binutils-2_11:1.2
	x86_64versiong3:1.2
	binutils-2_11-branch:1.2.0.4
	binutils-2_10_1:1.2
	binutils-2_10:1.2
	binutils-2_10-branch:1.2.0.2
	binutils-2_10-branchpoint:1.2
	binutils_latest_snapshot:1.4
	repo-unification-2000-02-06:1.2;
locks; strict;
comment	@# @;


1.4
date	2010.12.27.02.05.13;	author danglin;	state Exp;
branches;
next	1.3;

1.3
date	2010.04.16.11.20.40;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	99.08.30.18.20.18;	author law;	state Exp;
branches;
next	1.1;

1.1
date	99.08.28.10.32.43;	author law;	state Exp;
branches;
next	;


desc
@@


1.4
log
@	PR gas/11395
	* config/tc-hppa.c (pa_ip): Set doubleword carry/borrow bit when a
	doubleword completer or doubleword condition is found in an add/sub
	instruction.  Reject match for 'A'/'S' only if there is no condition
	and d bit is not set.

	* gas/hppa/basic/add2.s: Add test for a simple doubleword carry
	instruction.
	* gas/hppa/basic/sub2.s: Add tests for simple word and doubleword
	borrow instructions.
	* gas/hppa/basic/basic.exp: Update regexps for above.

	* opcode/hppa.h: Clear "d" bit in "add" and "sub" patterns.
@
text
@	.LEVEL 2.0
	.code
	.align 4
; Basic add/sh?add instruction tests.  
;
; We could/should test some of the corner cases for register and 
; immediate fields.  We should also check the assorted field
; selectors to make sure they're handled correctly.
	add,*  %r4,%r5,%r6
	add,*=  %r4,%r5,%r6
	add,*<  %r4,%r5,%r6
	add,*<=  %r4,%r5,%r6
	add,*nuv  %r4,%r5,%r6
	add,*znv  %r4,%r5,%r6
	add,*sv  %r4,%r5,%r6
	add,*od  %r4,%r5,%r6
	add,*tr  %r4,%r5,%r6
	add,*<>  %r4,%r5,%r6
	add,*>=  %r4,%r5,%r6
	add,*>  %r4,%r5,%r6
	add,*uv  %r4,%r5,%r6
	add,*vnz  %r4,%r5,%r6
	add,*nsv  %r4,%r5,%r6
	add,*ev  %r4,%r5,%r6

	add,l,*  %r4,%r5,%r6
	add,l,*=  %r4,%r5,%r6
	add,l,*<  %r4,%r5,%r6
	add,l,*<=  %r4,%r5,%r6
	add,l,*nuv  %r4,%r5,%r6
	add,l,*znv  %r4,%r5,%r6
	add,l,*sv  %r4,%r5,%r6
	add,l,*od  %r4,%r5,%r6
	add,l,*tr  %r4,%r5,%r6
	add,l,*<>  %r4,%r5,%r6
	add,l,*>=  %r4,%r5,%r6
	add,l,*>  %r4,%r5,%r6
	add,l,*uv  %r4,%r5,%r6
	add,l,*vnz  %r4,%r5,%r6
	add,l,*nsv  %r4,%r5,%r6
	add,l,*ev  %r4,%r5,%r6

	add,tsv,*  %r4,%r5,%r6
	add,tsv,*=  %r4,%r5,%r6
	add,tsv,*<  %r4,%r5,%r6
	add,tsv,*<=  %r4,%r5,%r6
	add,tsv,*nuv  %r4,%r5,%r6
	add,tsv,*znv  %r4,%r5,%r6
	add,tsv,*sv  %r4,%r5,%r6
	add,tsv,*od  %r4,%r5,%r6
	add,tsv,*tr  %r4,%r5,%r6
	add,tsv,*<>  %r4,%r5,%r6
	add,tsv,*>=  %r4,%r5,%r6
	add,tsv,*>  %r4,%r5,%r6
	add,tsv,*uv  %r4,%r5,%r6
	add,tsv,*vnz  %r4,%r5,%r6
	add,tsv,*nsv  %r4,%r5,%r6
	add,tsv,*ev  %r4,%r5,%r6

	add,dc,*  %r4,%r5,%r6
	add,dc,*=  %r4,%r5,%r6
	add,dc,*<  %r4,%r5,%r6
	add,dc,*<=  %r4,%r5,%r6
	add,dc,*nuv  %r4,%r5,%r6
	add,dc,*znv  %r4,%r5,%r6
	add,dc,*sv  %r4,%r5,%r6
	add,dc,*od  %r4,%r5,%r6
	add,dc,*tr  %r4,%r5,%r6
	add,dc,*<>  %r4,%r5,%r6
	add,dc,*>=  %r4,%r5,%r6
	add,dc,*>  %r4,%r5,%r6
	add,dc,*uv  %r4,%r5,%r6
	add,dc,*vnz  %r4,%r5,%r6
	add,dc,*nsv  %r4,%r5,%r6
	add,dc,*ev  %r4,%r5,%r6

	add,dc,tsv,*  %r4,%r5,%r6
	add,dc,tsv,*=  %r4,%r5,%r6
	add,dc,tsv,*<  %r4,%r5,%r6
	add,dc,tsv,*<=  %r4,%r5,%r6
	add,dc,tsv,*nuv  %r4,%r5,%r6
	add,dc,tsv,*znv  %r4,%r5,%r6
	add,dc,tsv,*sv  %r4,%r5,%r6
	add,dc,tsv,*od  %r4,%r5,%r6
	add,tsv,dc,*tr  %r4,%r5,%r6
	add,tsv,dc,*<>  %r4,%r5,%r6
	add,tsv,dc,*>=  %r4,%r5,%r6
	add,tsv,dc,*>  %r4,%r5,%r6
	add,tsv,dc,*uv  %r4,%r5,%r6
	add,tsv,dc,*vnz  %r4,%r5,%r6
	add,tsv,dc,*nsv  %r4,%r5,%r6
	add,tsv,dc,*ev  %r4,%r5,%r6

	;; PR gas/11395: Check for the correct assembly
	;; of unconditional 32-bit and 64-bit add instructions.
	add %r1,%r1,%r1
	add,dc %r1,%r1,%r1
@


1.3
log
@        PR gas/11395
        * config/tc-hppa.c (pa_ip): Do not allow 64-bit add condition
        matcher to accept and unconditional 32-bit add instruction.
        (pa_build_unwind_subspace): Cope with error conditions not
        allowing the start symbol to be set.

        * gas/hppa/basic/add2.s: Add test of simple 32-bit instruction.
        * gas/hppa/basic/basic.exp (do_add2): Add grep for expected
        disassembly.
@
text
@d95 1
a95 1
	;; of an unconditional 32-bit add instruction.
d97 1
@


1.2
log
@        * gas/hppa/basic/*.s: Use .code instead of .SPACE/.SUBSPA for
        sectioning.
@
text
@d93 4
@


1.1
log
@        * gas/hppa/basic/add.s,addi.s,dcor.s,shladd.s,sub.s,subi.s,unit.s:
        Add new syntax versions of instructions to tests.
        * gas/hppa/basic/add2.s,dcor2.s,perf.s,purge2.s,shladd2.s,sub2.s,
        system2.s, unit2.s:  New tests.
        * hppa/basic/basic.exp: Add new tests.
@
text
@d2 1
a2 10
	.SPACE $PRIVATE$
	.SUBSPA $DATA$,QUAD=1,ALIGN=8,ACCESS=31
	.SUBSPA $BSS$,QUAD=1,ALIGN=8,ACCESS=31,ZERO,SORT=82
	.SPACE $TEXT$
	.SUBSPA $LIT$,QUAD=0,ALIGN=8,ACCESS=44
	.SUBSPA $CODE$,QUAD=0,ALIGN=8,ACCESS=44,CODE_ONLY

	.SPACE $TEXT$
	.SUBSPA $CODE$

@

