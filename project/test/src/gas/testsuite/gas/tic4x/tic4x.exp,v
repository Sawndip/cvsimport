head	1.3;
access;
symbols
	binutils-2_24-branch:1.3.0.2
	binutils-2_24-branchpoint:1.3
	binutils-2_21_1:1.2
	binutils-2_23_2:1.2
	binutils-2_23_1:1.2
	binutils-2_23:1.2
	binutils-2_23-branch:1.2.0.38
	binutils-2_23-branchpoint:1.2
	binutils-2_22_branch:1.2.0.36
	binutils-2_22:1.2
	binutils-2_22-branch:1.2.0.34
	binutils-2_22-branchpoint:1.2
	binutils-2_21:1.2
	binutils-2_21-branch:1.2.0.32
	binutils-2_21-branchpoint:1.2
	binutils-2_20_1:1.2
	binutils-2_20:1.2
	binutils-arc-20081103-branch:1.2.0.30
	binutils-arc-20081103-branchpoint:1.2
	binutils-2_20-branch:1.2.0.28
	binutils-2_20-branchpoint:1.2
	dje-cgen-play1-branch:1.2.0.26
	dje-cgen-play1-branchpoint:1.2
	arc-20081103-branch:1.2.0.24
	arc-20081103-branchpoint:1.2
	binutils-2_19_1:1.2
	binutils-2_19:1.2
	binutils-2_19-branch:1.2.0.22
	binutils-2_19-branchpoint:1.2
	binutils-2_18:1.2
	binutils-2_18-branch:1.2.0.20
	binutils-2_18-branchpoint:1.2
	binutils-csl-coldfire-4_1-32:1.2
	binutils-csl-sourcerygxx-4_1-32:1.2
	binutils-csl-innovasic-fido-3_4_4-33:1.2
	binutils-csl-sourcerygxx-3_4_4-32:1.2
	binutils-csl-coldfire-4_1-30:1.2
	binutils-csl-sourcerygxx-4_1-30:1.2
	binutils-csl-coldfire-4_1-28:1.2
	binutils-csl-sourcerygxx-4_1-29:1.2
	binutils-csl-sourcerygxx-4_1-28:1.2
	binutils-csl-arm-2006q3-27:1.2
	binutils-csl-sourcerygxx-4_1-27:1.2
	binutils-csl-arm-2006q3-26:1.2
	binutils-csl-sourcerygxx-4_1-26:1.2
	binutils-csl-sourcerygxx-4_1-25:1.2
	binutils-csl-sourcerygxx-4_1-24:1.2
	binutils-csl-sourcerygxx-4_1-23:1.2
	binutils-csl-sourcerygxx-4_1-21:1.2
	binutils-csl-arm-2006q3-21:1.2
	binutils-csl-sourcerygxx-4_1-22:1.2
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.2
	binutils-csl-sourcerygxx-4_1-20:1.2
	binutils-csl-arm-2006q3-19:1.2
	binutils-csl-sourcerygxx-4_1-19:1.2
	binutils-csl-sourcerygxx-4_1-18:1.2
	binutils-csl-renesas-4_1-9:1.2
	binutils-csl-sourcerygxx-3_4_4-25:1.2
	binutils-csl-renesas-4_1-8:1.2
	binutils-csl-renesas-4_1-7:1.2
	binutils-csl-renesas-4_1-6:1.2
	binutils-csl-sourcerygxx-4_1-17:1.2
	binutils-csl-sourcerygxx-4_1-14:1.2
	binutils-csl-sourcerygxx-4_1-15:1.2
	binutils-csl-sourcerygxx-4_1-13:1.2
	binutils-2_17:1.2
	binutils-csl-sourcerygxx-4_1-12:1.2
	binutils-csl-sourcerygxx-3_4_4-21:1.2
	binutils-csl-wrs-linux-3_4_4-24:1.2
	binutils-csl-wrs-linux-3_4_4-23:1.2
	binutils-csl-sourcerygxx-4_1-9:1.2
	binutils-csl-sourcerygxx-4_1-8:1.2
	binutils-csl-sourcerygxx-4_1-7:1.2
	binutils-csl-arm-2006q1-6:1.2
	binutils-csl-sourcerygxx-4_1-6:1.2
	binutils-csl-wrs-linux-3_4_4-22:1.2
	binutils-csl-coldfire-4_1-11:1.2
	binutils-csl-sourcerygxx-3_4_4-19:1.2
	binutils-csl-coldfire-4_1-10:1.2
	binutils-csl-sourcerygxx-4_1-5:1.2
	binutils-csl-sourcerygxx-4_1-4:1.2
	binutils-csl-wrs-linux-3_4_4-21:1.2
	binutils-csl-morpho-4_1-4:1.2
	binutils-csl-sourcerygxx-3_4_4-17:1.2
	binutils-csl-wrs-linux-3_4_4-20:1.2
	binutils-2_17-branch:1.2.0.18
	binutils-2_17-branchpoint:1.2
	binutils-csl-2_17-branch:1.2.0.16
	binutils-csl-2_17-branchpoint:1.2
	binutils-csl-gxxpro-3_4-branch:1.2.0.14
	binutils-csl-gxxpro-3_4-branchpoint:1.2
	binutils-2_16_1:1.2
	binutils-csl-arm-2005q1b:1.2
	binutils-2_16:1.2
	binutils-csl-arm-2005q1a:1.2
	binutils-csl-arm-2005q1-branch:1.2.0.12
	binutils-csl-arm-2005q1-branchpoint:1.2
	binutils-2_16-branch:1.2.0.10
	binutils-2_16-branchpoint:1.2
	csl-arm-2004-q3d:1.2
	csl-arm-2004-q3:1.2
	binutils-2_15:1.2
	binutils-2_15-branchpoint:1.2
	csl-arm-2004-q1a:1.2
	csl-arm-2004-q1:1.2
	binutils-2_15-branch:1.2.0.8
	cagney_bfdfile-20040213-branch:1.2.0.6
	cagney_bfdfile-20040213-branchpoint:1.2
	cagney_bigcore-20040122-branch:1.2.0.4
	cagney_bigcore-20040122-branchpoint:1.2
	csl-arm-2003-q4:1.2
	binutils-2_14:1.2
	binutils-2_14-branch:1.2.0.2
	binutils-2_14-branchpoint:1.2
	binutils_latest_snapshot:1.3;
locks; strict;
comment	@# @;


1.3
date	2012.12.17.16.56.00;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	2002.11.18.09.09.31;	author sveinse;	state Exp;
branches;
next	1.1;

1.1
date	2002.11.18.08.28.37;	author sveinse;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Add copyright notices
@
text
@# Copyright 2012
# Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.  

#
# Test x930509a -- correct assembly of differences involving forward
# references.
#
proc do_930509a_tic4x {} {
    set testname "difference between forward references (tic4x version)"
    set x 0
    gas_start "../all/x930509.s" "-al"
    while 1 {
# We need to accomodate both byte orders here.
# If ".long" means an 8-byte value on some target someday, this test will have
# to be fixed.
	expect {
	    -re "^ +1 .... 00 ?00 ?00 ?00" { fail $testname; set x 1 }
	    -re "^ +1 .... 01 ?00 ?00 ?00" { pass $testname; set x 1 }
	    -re "^ +1 .... 00 ?00 ?00 ?01" { pass $testname; set x 1 }
	    -re "\[^\n\]*\n" { }
	    timeout { perror "timeout\n"; break }
	    eof { break }
	}
    }
    gas_finish
    if !$x then { fail $testname }
}


#
# TI TMS320C4X tests.
#
if [istarget *c4x*-*-*] then {
    do_930509a_tic4x

    # Test zero-based disassemble test
    run_dump_test "zeros"

    # Test the register names on the c3x and on the c4x
    run_dump_test "registers_c3x"
    run_dump_test "registers_c4x"

    # Make sure the c4x registers dont work on c3x
    gas_test_error "registers.s" "-m30 --defsym TEST_C4X=1" "c4x register usage in c3x"

    # Test data storage
    run_dump_test "data"

    # Test flonums
    run_dump_test "float"

    # Test all addressing modes
    run_dump_test "addressing_c3x"
    run_dump_test "addressing_c4x"

    # Make sure the c4x addressing dont work on c3x
    gas_test_error "addressing.s" "-m30 --defsym TEST_C4X=1" "c4x addressing usage in c3x"

    # Test float instructions
    run_dump_test "opcodes_c3x"
    run_dump_test "opcodes_c4x"
    run_dump_test "opcodes_new"

    # Make sure the c4x ops dont work on c3x
    #gas_test_error "opcodes.s" "-m30 --defsym TEST_C4X=1" "c4x instruction usage in c3x"
    #  -- for some reason this test crashes dejagnu, hence disabled!
}
@


1.2
log
@
	* gas/config/tc-tic4x.c: Fixed proper commandline
	parameters. Added support for new opcode-list format. General
	error message fixups.
	(c4x_inst_add): Reject insn not for our CPU
	(md_begin): Added matrix for setting the proper opcode-level &
	device-flags according to cpu type and revision. Rewrite the
	opcode hasher.
	(c4x_operand_parse): Fix opcode bug
	(c4x_operands_match): New function argument. Added dry-run
	mechanism, that is optional error generation. Added constraint 'i'
	and 'j'.
	(c4x_insn_check): Added new function for post-verification of the
	generated insn.
	(md_assemble): Check all opcodes before croaking because of an
	argument mismatch. Need this to be able to fully support
	ortogonally arguments.
	(md_parse_options): Revised commandprompt swicthes and added new
	ones.
	(md_show_usage): Complete rewrite of printout.
	* gas/testsuite/gas/tic4x/addressing.s: Fix bug in one insn
	* gas/testsuite/gas/tic4x/addressing_c3x.d: Update thereafter
	* gas/testsuite/gas/tic4x/addressing_c4x.d: Update thereafter
	* gas/testsuite/gas/tic4x/allopcodes.S: Add support for new
	opclass.h changes
	* gas/testsuite/gas/tic4x/opclasses.h: Added testsuites for
	the new enhanced opcodes.
	* gas/testsuite/gas/tic4x/opcodes.s: Regenerate
	* gas/testsuite/gas/tic4x/opcodes_c3x.d: Update from above
	* gas/testsuite/gas/tic4x/opcodes_c4x.d: Update from above
	* gas/testsuite/gas/tic4x/opcodes_new.d: Added new testsuite for
	the enhanced and special insns.
	* gas/testsuite/gas/tic4x/tic4x.exp: Added the opcodes_new testsuite
	* include/opcode/tic4x.h: File reordering. Added enhanced opcodes.
	* opcodes/tic4x-dis.c: Added support for enhanced and special
	insn.
	(c4x_print_op): Added insn class 'i' and 'j'
	(c4x_hash_opcode_special): Add to support special insn
	(c4x_hash_opcode): Update to support the new opcode-list
	format. Add support for the new special insns.
	(c4x_disassemble): New opcode-list support.
@
text
@d1 16
@


1.1
log
@
TIC4X testcase commit

	* binutils/testsuite/binutils-all/objcopy.exp: Disable tic4x
	from test
	* binutils/testsuite/binutils-all/objdump.exp: Setup proper
	values for tic4x testcase
	* gas/testsuite/gas/all/gas.exp: Setup for tic4x testcase
	* gas/testsuite/gas/macros/macros.exp: Ditto
	* gas/testsuite/gas/all/gas.exp: Setup for tic4x testcase
	* gas/testsuite/gas/macros/macros.exp: Ditto
	* gas/testsuite/gas/tic4x: New tic4x gas testsuite directory
	* ld/testsuite/ld-scripts/script.exp: Setup for tic4x testcase
@
text
@d60 1
@

