head	1.5;
access;
symbols
	binutils-2_24-branch:1.5.0.2
	binutils-2_24-branchpoint:1.5
	binutils-2_21_1:1.3.2.1
	binutils-2_23_2:1.4
	binutils-2_23_1:1.4
	binutils-2_23:1.4
	binutils-2_23-branch:1.4.0.6
	binutils-2_23-branchpoint:1.4
	binutils-2_22_branch:1.4.0.4
	binutils-2_22:1.4
	binutils-2_22-branch:1.4.0.2
	binutils-2_22-branchpoint:1.4
	binutils-2_21:1.3
	binutils-2_21-branch:1.3.0.2
	binutils-2_21-branchpoint:1.3
	binutils-2_20_1:1.2
	binutils-2_20:1.2
	binutils-arc-20081103-branch:1.1.0.8
	binutils-arc-20081103-branchpoint:1.1
	binutils-2_20-branch:1.2.0.4
	binutils-2_20-branchpoint:1.2
	dje-cgen-play1-branch:1.2.0.2
	dje-cgen-play1-branchpoint:1.2
	arc-20081103-branch:1.1.0.6
	arc-20081103-branchpoint:1.1
	binutils-2_19_1:1.1
	binutils-2_19:1.1
	binutils-2_19-branch:1.1.0.4
	binutils-2_19-branchpoint:1.1
	binutils-2_18:1.1
	binutils-2_18-branch:1.1.0.2
	binutils-2_18-branchpoint:1.1
	binutils_latest_snapshot:1.5;
locks; strict;
comment	@# @;


1.5
date	2012.12.17.16.55.56;	author nickc;	state Exp;
branches;
next	1.4;

1.4
date	2010.11.20.15.36.33;	author rsandifo;	state Exp;
branches;
next	1.3;

1.3
date	2010.08.02.08.48.57;	author gingold;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2009.02.03.21.58.20;	author dj;	state Exp;
branches;
next	1.1;

1.1
date	2007.02.05.20.10.25;	author brolley;	state Exp;
branches;
next	;

1.3.2.1
date	2011.02.10.03.41.06;	author amodra;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Add copyright notices
@
text
@# Copyright 2012
# Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.  

# complex relocations testsuite

proc ld_test { objects ldflags dest test } {
    set ld_output [target_link $objects $dest $ldflags]
    if [string match "" $ld_output] then { pass $test } else { fail $test }
}

proc ld_test_error { objects ldflags dest test } {
    set ld_output [target_link $objects $dest $ldflags]
    if [string match "" $ld_output] then { fail $test } else { pass $test }
}

proc objdump_test { exec flags dest test } {
    set objdump [find_binutils_prog objdump]
    verbose -log "$objdump $flags $exec > $dest"
    catch "exec $objdump $flags $exec > $dest" objdump_output
    if [string match "" $objdump_output] then { pass $test } else { fail $test }
}

proc regexp_test { file1 file2 test } {
    if [regexp_diff $file1 $file2] then { fail $test } else { pass $test }
}


global srcdir subdir
if [istarget mep*-*-*] {

    # test that complex relocs between files work, generally
    gas_test relocs-junk1.s {-mconfig=default -o relocs-junk1.o} {} {assembling relocs-junk1}
    gas_test relocs-syms.s {-mconfig=default -o relocs-syms.o} {} {assembling relocs-syms}
    gas_test relocs-junk2.s {-mconfig=default -o relocs-junk2.o} {} {assembling relocs-junk2}
    gas_test relocs-refs.s {-mconfig=default -o relocs-refs.o} {} {assembling relocs-refs}
    ld_test {relocs-junk1.o relocs-syms.o relocs-junk2.o relocs-refs.o} {--defsym __stack=0x1ffff0 --defsym __sbss_end=0x1000 -e 1233 -EL} {relocs.x} {linking relocs.x}
    objdump_test {relocs.x} {-dzs} {relocs.dump} {disassembling relocs.x}
    regexp_test {relocs.dump} "$srcdir/$subdir/relocs.d" {matching disassembly for relocs.x}

    foreach test {3} {
	# perform specific negative boundary tests
	gas_test "relocs-bad$test.s" [list -mconfig=default -o "relocs-bad$test.o"] {} [list assembling "relocs-bad$test"]
	ld_test_error "relocs-bad$test.o" {-e 1233 -EL} "relocs-bad$test.x" [list linking "relocs-bad$test"]
    }
}
@


1.4
log
@binutils/testsuite/
	* lib/binutils-common.exp (regexp_diff): New procedure.
	* lib/utils-lib.exp (regexp_diff): Delete.

gas/testsuite/
	* lib/gas-defs.exp (regexp_diff): Delete.
	(run_dump_test): Remove final "" argument in call to regexp_diff.
	(run_list_test): Likewise.
	(run_list_test_stdin): Likewise.
	* gas/all/gas.exp (test_cond): Likewise.
	* gas/elf/elf.exp (run_elf_list_test): Likewise.
	* gas/m68k/all.exp: Likewise.
	* gas/mep/complex-relocs.exp (regexp_test): Likewise.
	* gas/mt/relocs.exp (regexp_test): Likewise.
	* gas/symver/symver.exp (run_error_test): Likewise.

ld/testsuite/
	* lib/ld-lib.exp (regexp_diff, simple_diff): Delete.
@
text
@d1 17
@


1.3
log
@2010-08-02  Tristan Gingold  <gingold@@adacore.com>

	* lib/gas-defs.exp (get_standard_section_names): New function.
	(run_dump_tests): Document the new behavior for objdump,
	document to new section-subst option.  Automatically perform
	substitutions for objdump.
	(objdump_finish): Add REF_SUBST argument.
	(run_list_test): Adjust call of regexp_diff.
	(run_list_test_stdin): Ditto.
	* gas/all/gas.exp (test_cond): Adjust call of regexp_diff.
	* gas/symver/symver.exp (run_error_test): Ditto.
	* gas/mt/relocs.exp (regexp_test): Ditto.
	* gas/mep/complex-relocs.exp (regexp_test): Ditto.
	* gas/m68k/all.exp: Ditto.
	* gas/elf/elf.exp (run_elf_list_test): Ditto.
	* gas/rx/rx-asm-good.d: Set section-subst to no.
@
text
@d21 1
a21 1
    if [regexp_diff $file1 $file2 ""] then { fail $test } else { pass $test }
@


1.3.2.1
log
@apply mainline testsuite fixes and tweaks
@
text
@d21 1
a21 1
    if [regexp_diff $file1 $file2] then { fail $test } else { pass $test }
@


1.2
log
@* gas/mep/relocs.d: Updated for new configuration.
* gas/mep/complex-relocs.exp: Likewise.
@
text
@d21 1
a21 1
    if [regexp_diff $file1 $file2] then { fail $test } else { pass $test }
@


1.1
log
@Support for Toshiba MeP and for complex relocations.
@
text
@d29 5
a33 5
    gas_test relocs-junk1.s {-mconfig=fmax -o relocs-junk1.o} {} {assembling relocs-junk1}
    gas_test relocs-syms.s {-mconfig=fmax -o relocs-syms.o} {} {assembling relocs-syms}
    gas_test relocs-junk2.s {-mconfig=fmax -o relocs-junk2.o} {} {assembling relocs-junk2}
    gas_test relocs-refs.s {-mconfig=fmax -o relocs-refs.o} {} {assembling relocs-refs}
    ld_test {relocs-junk1.o relocs-syms.o relocs-junk2.o relocs-refs.o} {--defsym __stack=0x1ffff0 --defsym __sbss_end=0x1000 -e 1233} {relocs.x} {linking relocs.x}
d39 2
a40 2
	gas_test "relocs-bad$test.s" [list -mconfig=fmax -o "relocs-bad$test.o"] {} [list assembling "relocs-bad$test"]
	ld_test_error "relocs-bad$test.o" {-e 1233} "relocs-bad$test.x" [list linking "relocs-bad$test"]
@

