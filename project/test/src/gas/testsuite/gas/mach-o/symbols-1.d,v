head	1.2;
access;
symbols
	binutils-2_24-branch:1.2.0.4
	binutils-2_24-branchpoint:1.2
	binutils-2_23_2:1.2
	binutils-2_23_1:1.2
	binutils-2_23:1.2
	binutils-2_23-branch:1.2.0.2
	binutils-2_23-branchpoint:1.2
	binutils_latest_snapshot:1.2;
locks; strict;
comment	@# @;


1.2
date	2012.01.13.11.55.02;	author iains;	state Exp;
branches;
next	1.1;

1.1
date	2012.01.03.10.54.01;	author iains;	state Exp;
branches;
next	;


desc
@@


1.2
log
@set vma on mach-o sections.

gas:

	* config/obj-macho.c (obj_mach_o_set_vma_data): New type.
	(obj_mach_o_set_section_vma): New.
	(obj_mach_o_post_relax_hook): New.
	* config/obj-macho.h (md_post_relax_hook): Define.
	(obj_mach_o_post_relax_hook): Declare.

gas/testsuite:

	* gas/mach-o/dysymtab-2.d: Update to include the set VMA.
	* gas/mach-o/symbols-1-64.d: Likewise.
	* gas/mach-o/symbols-1.d: Likewise.
	* gas/mach-o/symbols-6.d: Likewise.
	* gas/mach-o/zerofill-1.d: Likewise.
	* gas/mach-o/zerofill-2.d: Likewise.
@
text
@#as: -L
#objdump: -t
#target: i?86-*-darwin* powerpc-*-darwin*
#source: symbols-base.s
.*: +file format mach-o.*
#...
SYMBOL TABLE:
00000000 l( )+0e SECT( )+01 0000 \[.text\] Lzt0
00000002 l( )+0e SECT( )+01 0000 \[.text\] Lmt0
00000004 l( )+0e SECT( )+01 0000 \[.text\] Lat0
00000018 l( )+0e SECT( )+02 0000 \[.data\] Lzd0
0000001a l( )+0e SECT( )+02 0000 \[.data\] Lmd0
0000001d l( )+0e SECT( )+02 0000 \[.data\] Lad0
00000060 l( )+0e SECT( )+03 0000 \[.bss\] zlcomm0
00000066 l( )+0e SECT( )+03 0000 \[.bss\] mlcomm0
0000006c l( )+0e SECT( )+03 0000 \[.bss\] alcomm0
0000003c l( )+0e SECT( )+04 0000 \[__HERE.__there\] Lzs0
0000003e l( )+0e SECT( )+04 0000 \[__HERE.__there\] Lms0
00000040 l( )+0e SECT( )+04 0000 \[__HERE.__there\] Las0
00000012 l( )+0e SECT( )+01 0000 \[.text\] Lzt1
00000015 l( )+0e SECT( )+01 0000 \[.text\] Lmt1
00000017 l( )+0e SECT( )+01 0000 \[.text\] Lat1
0000002a l( )+0e SECT( )+02 0000 \[.data\] Lzd1
0000002c l( )+0e SECT( )+02 0000 \[.data\] Lmd1
0000002f l( )+0e SECT( )+02 0000 \[.data\] Lad1
00000072 l( )+0e SECT( )+03 0000 \[.bss\] zlcomm1
00000078 l( )+0e SECT( )+03 0000 \[.bss\] mlcomm1
0000007e l( )+0e SECT( )+03 0000 \[.bss\] alcomm1
00000052 l( )+0e SECT( )+04 0000 \[__HERE.__there\] Lzs1
0000005a l( )+0e SECT( )+04 0000 \[__HERE.__there\] Lms1
0000005b l( )+0e SECT( )+04 0000 \[__HERE.__there\] Las1
0000001c g( )+0f SECT( )+02 0000 \[.data\] adg0
0000002e g( )+0f SECT( )+02 0000 \[.data\] adg1
00000041 g( )+0f SECT( )+04 0000 \[__HERE.__there\] asg0
00000059 g( )+0f SECT( )+04 0000 \[__HERE.__there\] asg1
00000005 g( )+0f SECT( )+01 0000 \[.text\] atg0
00000016 g( )+0f SECT( )+01 0000 \[.text\] atg1
0000001b g( )+0f SECT( )+02 0000 \[.data\] mdg0
0000002d g( )+0f SECT( )+02 0000 \[.data\] mdg1
0000003f g( )+0f SECT( )+04 0000 \[__HERE.__there\] msg0
00000058 g( )+0f SECT( )+04 0000 \[__HERE.__there\] msg1
00000003 g( )+0f SECT( )+01 0000 \[.text\] mtg0
00000014 g( )+0f SECT( )+01 0000 \[.text\] mtg1
00000019 g( )+0f SECT( )+02 0000 \[.data\] zdg0
0000002b g( )+0f SECT( )+02 0000 \[.data\] zdg1
0000003d g( )+0f SECT( )+04 0000 \[__HERE.__there\] zsg0
00000053 g( )+0f SECT( )+04 0000 \[__HERE.__there\] zsg1
00000001 g( )+0f SECT( )+01 0000 \[.text\] ztg0
00000013 g( )+0f SECT( )+01 0000 \[.text\] ztg1
00000000 g( )+01 UND( )+ 00 0000 _aud0
00000000 g( )+01 UND( )+ 00 0000 _aud1
00000000 g( )+01 UND( )+ 00 0000 _aus0
00000000 g( )+01 UND( )+ 00 0000 _aus1
00000000 g( )+01 UND( )+ 00 0000 _aut0
00000000 g( )+01 UND( )+ 00 0000 _mud0
00000000 g( )+01 UND( )+ 00 0000 _mud1
00000000 g( )+01 UND( )+ 00 0000 _mus0
00000000 g( )+01 UND( )+ 00 0000 _mus1
00000000 g( )+01 UND( )+ 00 0000 _mut0
00000000 g( )+01 UND( )+ 00 0000 _zud0
00000000 g( )+01 UND( )+ 00 0000 _zud1
00000000 g( )+01 UND( )+ 00 0000 _zus0
00000000 g( )+01 UND( )+ 00 0000 _zus1
00000000 g( )+01 UND( )+ 00 0000 _zut0
0000000a( )+01 COM( )+ 00 0300 acommon0
0000000a( )+01 COM( )+ 00 0300 acommon1
0000000a( )+01 COM( )+ 00 0300 mcommon0
0000000a( )+01 COM( )+ 00 0300 mcommon1
0000000a( )+01 COM( )+00 0300 zcommon0
0000000a( )+01 COM( )+00 0300 zcommon1
@


1.1
log
@add dysymtab write support to bfd/mach-o.

bfd:

	* mach-o.c (bfd_mach_o_write_symtab): Fill in the string table index
	as the value of an indirect symbol.  Keep the string table index in
	non-indirect syms for reference.
	(bfd_mach_o_write_dysymtab): New.
	(bfd_mach_o_primary_symbol_sort_key): New.
	(bfd_mach_o_cf_symbols): New.
	(bfd_mach_o_sort_symbol_table): New.
	(bfd_mach_o_mangle_symbols): Return early if no symbols.  Sort symbols.
	If we are emitting a dysymtab, process indirect symbols and count the
	number of each other kind.
	(bfd_mach_o_mangle_sections): New.
	(bfd_mach_o_write_contents): Split out some pre-requisite code into
	the command builder. Write dysymtab if the command is present.
	(bfd_mach_o_count_sections_for_seg): New.
	(bfd_mach_o_build_seg_command): New.
	(bfd_mach_o_build_dysymtab_command): New.
	(bfd_mach_o_build_commands): Reorganize to support the fact that some
	commands are optional and should not be emitted if there are no
	sections or symbols.
	(bfd_mach_o_set_section_contents): Amend comment.
	* mach-o.h: Amend and add to comments.
	(mach_o_data_struct): Add fields for dysymtab symbols counts and a
	pointer to the indirects, when present.
	(bfd_mach_o_should_emit_dysymtab): New macro.
	(IS_MACHO_INDIRECT): Likewise.

gas/testsuite:

	* gas/mach-o/dysymtab-1-64.d: New.
	* gas/mach-o/dysymtab-1.d: New.
	* gas/mach-o/symbols-1-64.d: New.
	* gas/mach-o/symbols-1.d: New.
	* gas/mach-o/symbols-base-64.s: New.
	* gas/mach-o/symbols-base.s: New.
@
text
@d8 63
a70 63
00000000 l.*0e SECT   01 0000 \[.text\] Lzt0
00000002 l.*0e SECT   01 0000 \[.text\] Lmt0
00000004 l.*0e SECT   01 0000 \[.text\] Lat0
00000000 l.*0e SECT   02 0000 \[.data\] Lzd0
00000002 l.*0e SECT   02 0000 \[.data\] Lmd0
00000005 l.*0e SECT   02 0000 \[.data\] Lad0
00000000 l.*0e SECT   03 0000 \[.bss\] zlcomm0
00000006 l.*0e SECT   03 0000 \[.bss\] mlcomm0
0000000c l.*0e SECT   03 0000 \[.bss\] alcomm0
00000000 l.*0e SECT   04 0000 \[__HERE.__there\] Lzs0
00000002 l.*0e SECT   04 0000 \[__HERE.__there\] Lms0
00000004 l.*0e SECT   04 0000 \[__HERE.__there\] Las0
00000012 l.*0e SECT   01 0000 \[.text\] Lzt1
00000015 l.*0e SECT   01 0000 \[.text\] Lmt1
00000017 l.*0e SECT   01 0000 \[.text\] Lat1
00000012 l.*0e SECT   02 0000 \[.data\] Lzd1
00000014 l.*0e SECT   02 0000 \[.data\] Lmd1
00000017 l.*0e SECT   02 0000 \[.data\] Lad1
00000012 l.*0e SECT   03 0000 \[.bss\] zlcomm1
00000018 l.*0e SECT   03 0000 \[.bss\] mlcomm1
0000001e l.*0e SECT   03 0000 \[.bss\] alcomm1
00000016 l.*0e SECT   04 0000 \[__HERE.__there\] Lzs1
0000001e l.*0e SECT   04 0000 \[__HERE.__there\] Lms1
0000001f l.*0e SECT   04 0000 \[__HERE.__there\] Las1
00000004 g.*0f SECT   02 0000 \[.data\] adg0
00000016 g.*0f SECT   02 0000 \[.data\] adg1
00000005 g.*0f SECT   04 0000 \[__HERE.__there\] asg0
0000001d g.*0f SECT   04 0000 \[__HERE.__there\] asg1
00000005 g.*0f SECT   01 0000 \[.text\] atg0
00000016 g.*0f SECT   01 0000 \[.text\] atg1
00000003 g.*0f SECT   02 0000 \[.data\] mdg0
00000015 g.*0f SECT   02 0000 \[.data\] mdg1
00000003 g.*0f SECT   04 0000 \[__HERE.__there\] msg0
0000001c g.*0f SECT   04 0000 \[__HERE.__there\] msg1
00000003 g.*0f SECT   01 0000 \[.text\] mtg0
00000014 g.*0f SECT   01 0000 \[.text\] mtg1
00000001 g.*0f SECT   02 0000 \[.data\] zdg0
00000013 g.*0f SECT   02 0000 \[.data\] zdg1
00000001 g.*0f SECT   04 0000 \[__HERE.__there\] zsg0
00000017 g.*0f SECT   04 0000 \[__HERE.__there\] zsg1
00000001 g.*0f SECT   01 0000 \[.text\] ztg0
00000013 g.*0f SECT   01 0000 \[.text\] ztg1
00000000 g.*01 UND    00 0000 _aud0
00000000 g.*01 UND    00 0000 _aud1
00000000 g.*01 UND    00 0000 _aus0
00000000 g.*01 UND    00 0000 _aus1
00000000 g.*01 UND    00 0000 _aut0
00000000 g.*01 UND    00 0000 _mud0
00000000 g.*01 UND    00 0000 _mud1
00000000 g.*01 UND    00 0000 _mus0
00000000 g.*01 UND    00 0000 _mus1
00000000 g.*01 UND    00 0000 _mut0
00000000 g.*01 UND    00 0000 _zud0
00000000 g.*01 UND    00 0000 _zud1
00000000 g.*01 UND    00 0000 _zus0
00000000 g.*01 UND    00 0000 _zus1
00000000 g.*01 UND    00 0000 _zut0
0000000a.*01 COM    00 0300 acommon0
0000000a.*01 COM    00 0300 acommon1
0000000a.*01 COM    00 0300 mcommon0
0000000a.*01 COM    00 0300 mcommon1
0000000a.*01 COM    00 0300 zcommon0
0000000a.*01 COM    00 0300 zcommon1@

