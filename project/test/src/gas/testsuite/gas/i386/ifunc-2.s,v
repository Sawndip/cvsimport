head	1.1;
access;
symbols
	binutils-2_24-branch:1.1.0.10
	binutils-2_24-branchpoint:1.1
	binutils-2_21_1:1.1.2.1
	binutils-2_23_2:1.1
	binutils-2_23_1:1.1
	binutils-2_23:1.1
	binutils-2_23-branch:1.1.0.8
	binutils-2_23-branchpoint:1.1
	binutils-2_22_branch:1.1.0.6
	binutils-2_22:1.1
	binutils-2_22-branch:1.1.0.4
	binutils-2_22-branchpoint:1.1
	binutils-2_21-branch:1.1.0.2
	binutils_latest_snapshot:1.1;
locks; strict;
comment	@# @;


1.1
date	2010.12.02.13.25.13;	author rsandifo;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2011.02.01.12.25.42;	author amodra;	state Exp;
branches;
next	;


desc
@@


1.1
log
@gas/
	* symbols.c (S_FORCE_RELOC): Return true for indirect functions
	even if !strict.
	* expr.c (operand): Don't convert absolute symbols to constants
	if S_FORCE_RELOC is true.
	(expr): Only reduce subtractions between different symbols if
	S_FORCE_RELOC is false for both of them.
	* write.c (fixup_segment): Don't remove symbols if S_FORCE_RELOC
	is true for them, regardless of their segment.

gas/testsuite/
	* gas/i386/ifunc-2.s, gas/i386/ifunc-2.l: New test.
	* gas/i386/ifunc-3.s, gas/i386/ifunc-3.d: Likeise.
	* gas/i386/i386.exp: Run them.
@
text
@	.section .text.1,"ax",@@progbits

start1:
	.long	bar1-foo1
	.long	bar2-foo2
	.long	bar1-bar2
	.long	bar2-bar1
	.long	start1-bar1
	.long	start1-bar2
	.long	bar1-abs1
	.long	abs1-bar1
	.long	.-bar1

	.type	foo1,%gnu_indirect_function
foo1:
	ret
	.size	foo1,.-foo1

	.long	bar1-foo1
	.long	bar2-foo2
	.long	bar1-bar2
	.long	bar2-bar1
	.long	start1-bar1
	.long	start1-bar2
	.long	bar1-abs1
	.long	abs1-bar1
	.long	.-bar1

	.type	bar1,%gnu_indirect_function
bar1:
	ret
	.size	bar1,.-bar1

	.long	bar1-foo1
	.long	bar2-foo2
	.long	bar1-bar2
	.long	bar2-bar1
	.long	start1-bar1
	.long	start1-bar2
	.long	bar1-abs1
	.long	abs1-bar1
	.long	.-bar1

	.long	abs1-abs2
	.long	abs2-abs1

	.equ	abs1,0x11223300
	.type	abs1,%gnu_indirect_function

	.long	abs1-abs2
	.long	abs2-abs1

	.equ	abs2,0x11223380
	.type	abs2,%gnu_indirect_function

	.long	abs1-abs2
	.long	abs2-abs1

	.section .text.2,"ax",@@progbits

start2:
	.long	bar1-foo1
	.long	bar2-foo2
	.long	bar1-bar2
	.long	bar2-bar1
	.long	start2-bar1
	.long	start2-bar2
	.long	bar2-abs1
	.long	abs1-bar2
	.long	.-bar2

	.type	foo2,%gnu_indirect_function
foo2:
	ret
	.size	foo2,.-foo2

	.long	bar1-foo1
	.long	bar2-foo2
	.long	bar1-bar2
	.long	bar2-bar1
	.long	start2-bar1
	.long	start2-bar2
	.long	bar2-abs1
	.long	abs1-bar2
	.long	.-bar2

	.type	bar2,%gnu_indirect_function
bar2:
	ret
	.size	bar2,.-bar2

	.long	bar1-foo1
	.long	bar2-foo2
	.long	bar1-bar2
	.long	bar2-bar1
	.long	start2-bar1
	.long	start2-bar2
	.long	bar2-abs1
	.long	abs1-bar2
	.long	.-bar2
@


1.1.2.1
log
@backport from mainline
@
text
@@

