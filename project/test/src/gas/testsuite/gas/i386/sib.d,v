head	1.3;
access;
symbols
	binutils-2_24-branch:1.3.0.20
	binutils-2_24-branchpoint:1.3
	binutils-2_21_1:1.3
	binutils-2_23_2:1.3
	binutils-2_23_1:1.3
	binutils-2_23:1.3
	binutils-2_23-branch:1.3.0.18
	binutils-2_23-branchpoint:1.3
	binutils-2_22_branch:1.3.0.16
	binutils-2_22:1.3
	binutils-2_22-branch:1.3.0.14
	binutils-2_22-branchpoint:1.3
	binutils-2_21:1.3
	binutils-2_21-branch:1.3.0.12
	binutils-2_21-branchpoint:1.3
	binutils-2_20_1:1.3
	binutils-2_20:1.3
	binutils-arc-20081103-branch:1.3.0.10
	binutils-arc-20081103-branchpoint:1.3
	binutils-2_20-branch:1.3.0.8
	binutils-2_20-branchpoint:1.3
	dje-cgen-play1-branch:1.3.0.6
	dje-cgen-play1-branchpoint:1.3
	arc-20081103-branch:1.3.0.4
	arc-20081103-branchpoint:1.3
	binutils-2_19_1:1.3
	binutils-2_19:1.3
	binutils-2_19-branch:1.3.0.2
	binutils-2_19-branchpoint:1.3
	binutils-2_18:1.1
	binutils-2_18-branch:1.1.0.12
	binutils-2_18-branchpoint:1.1
	binutils-csl-coldfire-4_1-32:1.1
	binutils-csl-sourcerygxx-4_1-32:1.1
	binutils-csl-innovasic-fido-3_4_4-33:1.1
	binutils-csl-sourcerygxx-3_4_4-32:1.1
	binutils-csl-coldfire-4_1-30:1.1
	binutils-csl-sourcerygxx-4_1-30:1.1
	binutils-csl-coldfire-4_1-28:1.1
	binutils-csl-sourcerygxx-4_1-29:1.1
	binutils-csl-sourcerygxx-4_1-28:1.1
	binutils-csl-arm-2006q3-27:1.1
	binutils-csl-sourcerygxx-4_1-27:1.1
	binutils-csl-arm-2006q3-26:1.1
	binutils-csl-sourcerygxx-4_1-26:1.1
	binutils-csl-sourcerygxx-4_1-25:1.1
	binutils-csl-sourcerygxx-4_1-24:1.1
	binutils-csl-sourcerygxx-4_1-23:1.1
	binutils-csl-sourcerygxx-4_1-21:1.1
	binutils-csl-arm-2006q3-21:1.1
	binutils-csl-sourcerygxx-4_1-22:1.1
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.1
	binutils-csl-sourcerygxx-4_1-20:1.1
	binutils-csl-arm-2006q3-19:1.1
	binutils-csl-sourcerygxx-4_1-19:1.1
	binutils-csl-sourcerygxx-4_1-18:1.1
	binutils-csl-renesas-4_1-9:1.1
	binutils-csl-sourcerygxx-3_4_4-25:1.1
	binutils-csl-renesas-4_1-8:1.1
	binutils-csl-renesas-4_1-7:1.1
	binutils-csl-renesas-4_1-6:1.1
	binutils-csl-sourcerygxx-4_1-17:1.1
	binutils-csl-sourcerygxx-4_1-14:1.1
	binutils-csl-sourcerygxx-4_1-15:1.1
	binutils-csl-sourcerygxx-4_1-13:1.1
	binutils-2_17:1.1
	binutils-csl-sourcerygxx-4_1-12:1.1
	binutils-csl-sourcerygxx-3_4_4-21:1.1
	binutils-csl-wrs-linux-3_4_4-24:1.1
	binutils-csl-wrs-linux-3_4_4-23:1.1
	binutils-csl-sourcerygxx-4_1-9:1.1
	binutils-csl-sourcerygxx-4_1-8:1.1
	binutils-csl-sourcerygxx-4_1-7:1.1
	binutils-csl-arm-2006q1-6:1.1
	binutils-csl-sourcerygxx-4_1-6:1.1
	binutils-csl-wrs-linux-3_4_4-22:1.1
	binutils-csl-coldfire-4_1-11:1.1
	binutils-csl-sourcerygxx-3_4_4-19:1.1
	binutils-csl-coldfire-4_1-10:1.1
	binutils-csl-sourcerygxx-4_1-5:1.1
	binutils-csl-sourcerygxx-4_1-4:1.1
	binutils-csl-wrs-linux-3_4_4-21:1.1
	binutils-csl-morpho-4_1-4:1.1
	binutils-csl-sourcerygxx-3_4_4-17:1.1
	binutils-csl-wrs-linux-3_4_4-20:1.1
	binutils-2_17-branch:1.1.0.10
	binutils-2_17-branchpoint:1.1
	binutils-csl-2_17-branch:1.1.0.8
	binutils-csl-2_17-branchpoint:1.1
	binutils-csl-gxxpro-3_4-branch:1.1.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.1
	binutils-2_16_1:1.1
	binutils-csl-arm-2005q1b:1.1
	binutils-2_16:1.1
	binutils-csl-arm-2005q1a:1.1
	binutils-csl-arm-2005q1-branch:1.1.0.4
	binutils-csl-arm-2005q1-branchpoint:1.1
	binutils-2_16-branch:1.1.0.2
	binutils-2_16-branchpoint:1.1
	binutils_latest_snapshot:1.3;
locks; strict;
comment	@# @;


1.3
date	2007.09.20.20.13.26;	author hjl;	state Exp;
branches;
next	1.2;

1.2
date	2007.09.20.17.38.38;	author hjl;	state Exp;
branches;
next	1.1;

1.1
date	2005.01.12.19.12.51;	author hjl;	state Exp;
branches;
next	;


desc
@@


1.3
log
@gas/testsuite/

2007-09-20  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/sib.s: Add more eiz tests.
	* gas/i386/x86-64-sib.s: Add more riz tests.

	* gas/i386/sib-intel.d: Updated.
	* gas/i386/sib.d: Likewise.
	* gas/i386/x86-64-sib-intel.d: Likewise.
	* gas/i386/x86-64-sib.d: Likewise.

opcodes/

2007-09-20  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386-dis.c (OP_E_extended): Display eiz for [eiz*1 + offset].
@
text
@#objdump: -dw
#name: i386 SIB

.*: +file format .*

Disassembly of section .text:

0+ <foo>:
[ 	]*[a-f0-9]+:	8b 1d e2 ff ff ff    	mov    0xffffffe2,%ebx
[ 	]*[a-f0-9]+:	8b 1c 25 e2 ff ff ff 	mov    -0x1e\(,%eiz,1\),%ebx
[ 	]*[a-f0-9]+:	8b 04 25 e2 ff ff ff 	mov    -0x1e\(,%eiz,1\),%eax
[ 	]*[a-f0-9]+:	8b 04 65 e2 ff ff ff 	mov    -0x1e\(,%eiz,2\),%eax
[ 	]*[a-f0-9]+:	8b 04 a5 e2 ff ff ff 	mov    -0x1e\(,%eiz,4\),%eax
[ 	]*[a-f0-9]+:	8b 04 e5 e2 ff ff ff 	mov    -0x1e\(,%eiz,8\),%eax
[ 	]*[a-f0-9]+:	a1 1e 00 00 00       	mov    0x1e,%eax
[ 	]*[a-f0-9]+:	8b 04 25 1e 00 00 00 	mov    0x1e\(,%eiz,1\),%eax
[ 	]*[a-f0-9]+:	8b 04 25 1e 00 00 00 	mov    0x1e\(,%eiz,1\),%eax
[ 	]*[a-f0-9]+:	8b 04 65 1e 00 00 00 	mov    0x1e\(,%eiz,2\),%eax
[ 	]*[a-f0-9]+:	8b 04 a5 1e 00 00 00 	mov    0x1e\(,%eiz,4\),%eax
[ 	]*[a-f0-9]+:	8b 04 e5 1e 00 00 00 	mov    0x1e\(,%eiz,8\),%eax
[ 	]*[a-f0-9]+:	8b 03                	mov    \(%ebx\),%eax
[ 	]*[a-f0-9]+:	8b 04 23             	mov    \(%ebx,%eiz,1\),%eax
[ 	]*[a-f0-9]+:	8b 04 23             	mov    \(%ebx,%eiz,1\),%eax
[ 	]*[a-f0-9]+:	8b 04 63             	mov    \(%ebx,%eiz,2\),%eax
[ 	]*[a-f0-9]+:	8b 04 a3             	mov    \(%ebx,%eiz,4\),%eax
[ 	]*[a-f0-9]+:	8b 04 e3             	mov    \(%ebx,%eiz,8\),%eax
[ 	]*[a-f0-9]+:	8b 04 24             	mov    \(%esp\),%eax
[ 	]*[a-f0-9]+:	8b 04 24             	mov    \(%esp\),%eax
[ 	]*[a-f0-9]+:	8b 04 64             	mov    \(%esp,%eiz,2\),%eax
[ 	]*[a-f0-9]+:	8b 04 a4             	mov    \(%esp,%eiz,4\),%eax
[ 	]*[a-f0-9]+:	8b 04 e4             	mov    \(%esp,%eiz,8\),%eax
[ 	]*[a-f0-9]+:	8b 04 25 e2 ff ff ff 	mov    -0x1e\(,%eiz,1\),%eax
[ 	]*[a-f0-9]+:	8b 04 65 e2 ff ff ff 	mov    -0x1e\(,%eiz,2\),%eax
[ 	]*[a-f0-9]+:	8b 04 a5 e2 ff ff ff 	mov    -0x1e\(,%eiz,4\),%eax
[ 	]*[a-f0-9]+:	8b 04 e5 e2 ff ff ff 	mov    -0x1e\(,%eiz,8\),%eax
[ 	]*[a-f0-9]+:	8b 04 25 1e 00 00 00 	mov    0x1e\(,%eiz,1\),%eax
[ 	]*[a-f0-9]+:	8b 04 65 1e 00 00 00 	mov    0x1e\(,%eiz,2\),%eax
[ 	]*[a-f0-9]+:	8b 04 a5 1e 00 00 00 	mov    0x1e\(,%eiz,4\),%eax
[ 	]*[a-f0-9]+:	8b 04 e5 1e 00 00 00 	mov    0x1e\(,%eiz,8\),%eax
[ 	]*[a-f0-9]+:	8b 04 23             	mov    \(%ebx,%eiz,1\),%eax
[ 	]*[a-f0-9]+:	8b 04 23             	mov    \(%ebx,%eiz,1\),%eax
[ 	]*[a-f0-9]+:	8b 04 63             	mov    \(%ebx,%eiz,2\),%eax
[ 	]*[a-f0-9]+:	8b 04 a3             	mov    \(%ebx,%eiz,4\),%eax
[ 	]*[a-f0-9]+:	8b 04 e3             	mov    \(%ebx,%eiz,8\),%eax
[ 	]*[a-f0-9]+:	8b 04 24             	mov    \(%esp\),%eax
[ 	]*[a-f0-9]+:	8b 04 24             	mov    \(%esp\),%eax
[ 	]*[a-f0-9]+:	8b 04 24             	mov    \(%esp\),%eax
[ 	]*[a-f0-9]+:	8b 04 64             	mov    \(%esp,%eiz,2\),%eax
[ 	]*[a-f0-9]+:	8b 04 a4             	mov    \(%esp,%eiz,4\),%eax
[ 	]*[a-f0-9]+:	8b 04 e4             	mov    \(%esp,%eiz,8\),%eax
#pass
@


1.2
log
@gas/

2007-09-20  H.J. Lu  <hongjiu.lu@@intel.com>

	PR 658
	* config/tc-i386.c (SCALE1_WHEN_NO_INDEX): Removed.
	(set_allow_index_reg): New.
	(allow_index_reg): Likewise.
	(md_pseudo_table): Add "allow_index_reg" and
	"disallow_index_reg".
	(build_modrm_byte): Set i.sib.index to NO_INDEX_REGISTER for
	fake index registers.
	(i386_scale): Updated.
	(i386_index_check): Support fake index registers.
	(parse_real_register): Return NULL on eiz/riz if fake index
	registers aren't allowed.

gas/testsuite/

2007-09-20  H.J. Lu  <hongjiu.lu@@intel.com>

	PR 658
	* gas/i386/i386.exp: Run sib-intel, x86-64-sib and
	x86-64-sib-intel.

	* gas/i386/nops-1-i386-i686.d: Updated.
	* gas/i386/nops-1-i386.d: Likewise.
	* gas/i386/nops-1.d: Likewise.
	* gas/i386/nops-2-i386.d: Likewise.
	* gas/i386/nops-2-merom.d: Likewise.
	* gas/i386/nops-2.d: Likewise.
	* gas/i386/nops-3-i386.d: Likewise.
	* gas/i386/nops-3.d : Likewise.
	* gas/i386/sib.d: Likewise.

	* gas/i386/sib.s: Use %eiz in testcases.

	* gas/i386/sib-intel.d: New.
	* gas/i386/x86-64-sib-intel.d: Likewise.
	* gas/i386/x86-64-sib.d: Likewise.
	* gas/i386/x86-64-sib.s: Likewise.

ld/testsuite/

2007-09-20  H.J. Lu  <hongjiu.lu@@intel.com>

	PR 658
	* ld-i386/tlsbin.dd: Updated.
	* ld-i386/tlsld1.dd: Likewise.

opcodes/

2007-09-20  H.J. Lu  <hongjiu.lu@@intel.com>

	PR 658
	* 386-dis.c (index64): New.
	(index32): Likewise.
	(intel_index64): Likewise.
	(intel_index32): Likewise.
	(att_index64): Likewise.
	(att_index32): Likewise.
	(print_insn): Set index64 and index32.
	(OP_E_extended): Use index64/index32 for index register for
	SIB with INDEX == 4.

	* i386-opc.h (RegEiz): New.
	(RegRiz): Likewise.

	* i386-reg.tbl: Add eiz and riz.
	* i386-tbl.h: Regenerated.
@
text
@d9 12
d23 19
d47 1
@


1.1
log
@gas/testsuite/

2005-01-12  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386/i386.exp: Run "sib".

	* gas/i386/sib.d: New file.
	* gas/i386/sib.s: Likewise.

opcodes/

2005-01-12  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386-dis.c (OP_E): Ignore scale when index == 0x4 in SIB.
@
text
@d8 12
a19 8
0+000 <foo>:
   0:	8b 04 23 [ 	]*mov [ 	]*\(%ebx\),%eax
   3:	8b 04 63 [ 	]*mov [ 	]*\(%ebx\),%eax
   6:	8b 04 a3 [ 	]*mov [ 	]*\(%ebx\),%eax
   9:	8b 04 e3 [ 	]*mov [ 	]*\(%ebx\),%eax
   c:	90 [ 	]*nop [ 	]*
   d:	90 [ 	]*nop [ 	]*
	...
@

