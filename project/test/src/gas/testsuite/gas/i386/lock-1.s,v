head	1.2;
access;
symbols
	binutils-2_24-branch:1.2.0.10
	binutils-2_24-branchpoint:1.2
	binutils-2_21_1:1.2
	binutils-2_23_2:1.2
	binutils-2_23_1:1.2
	binutils-2_23:1.2
	binutils-2_23-branch:1.2.0.8
	binutils-2_23-branchpoint:1.2
	binutils-2_22_branch:1.2.0.6
	binutils-2_22:1.2
	binutils-2_22-branch:1.2.0.4
	binutils-2_22-branchpoint:1.2
	binutils-2_21:1.2
	binutils-2_21-branch:1.2.0.2
	binutils-2_21-branchpoint:1.2
	binutils_latest_snapshot:1.2;
locks; strict;
comment	@# @;


1.2
date	2009.11.14.06.04.34;	author hjl;	state Exp;
branches;
next	1.1;

1.1
date	2009.11.12.18.57.13;	author hjl;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Check destination operand for lockable instructions.

gas/

2009-11-13  H.J. Lu  <hongjiu.lu@@intel.com>

	* config/tc-i386.c (md_assemble): Check destination operand
	for lockable instructions.

gas/testsuite/

2009-11-13  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/lock-1-intel.d: Updated.
	* gas/i386/lock-1.d: Likewise.
	* gas/i386/lock-1.s: Likewise.
	* gas/i386/lockbad-1.l: Likewise.
	* gas/i386/lockbad-1.s: Likewise.
	* gas/i386/x86-64-lock-1-intel.d: Likewise.
	* gas/i386/x86-64-lock-1.d: Likewise.
	* gas/i386/x86-64-lock-1.s: Likewise.
	* gas/i386/x86-64-lockbad-1.l: Likewise.
	* gas/i386/x86-64-lockbad-1.s: Likewise.
@
text
@# Lockable Instructions

	.text
foo:
	lock add %eax, (%ebx)
	lock add $0x64, (%ebx)
	lock adc %eax, (%ebx)
	lock adc $0x64, (%ebx)
	lock and %eax, (%ebx)
	lock and $0x64, (%ebx)
	lock btc %eax, (%ebx)
	lock btc $0x64, (%ebx)
	lock btr %eax, (%ebx)
	lock btr $0x64, (%ebx)
	lock bts %eax, (%ebx)
	lock bts $0x64, (%ebx)
	lock cmpxchg %eax,(%ebx)
	lock cmpxchg8b (%ebx)
	lock decl (%ebx)
	lock incl (%ebx)
	lock negl (%ebx)
	lock notl (%ebx)
	lock or %eax, (%ebx)
	lock or $0x64, (%ebx)
	lock sbb %eax, (%ebx)
	lock sbb $0x64, (%ebx)
	lock sub %eax, (%ebx)
	lock sub $0x64, (%ebx)
	lock xadd %eax, (%ebx)
	lock xchg (%ebx), %eax
	lock xchg %eax, (%ebx)
	lock xor %eax, (%ebx)
	lock xor $0x64, (%ebx)

	.intel_syntax noprefix
	lock add DWORD PTR [ebx],eax
	lock add DWORD PTR [ebx],0x64
	lock adc DWORD PTR [ebx],eax
	lock adc DWORD PTR [ebx],0x64
	lock and DWORD PTR [ebx],eax
	lock and DWORD PTR [ebx],0x64
	lock btc DWORD PTR [ebx],eax
	lock btc DWORD PTR [ebx],0x64
	lock btr DWORD PTR [ebx],eax
	lock btr DWORD PTR [ebx],0x64
	lock bts DWORD PTR [ebx],eax
	lock bts DWORD PTR [ebx],0x64
	lock cmpxchg DWORD PTR [ebx],eax
	lock cmpxchg8b QWORD PTR [ebx]
	lock dec DWORD PTR [ebx]
	lock inc DWORD PTR [ebx]
	lock neg DWORD PTR [ebx]
	lock not DWORD PTR [ebx]
	lock or DWORD PTR [ebx],eax
	lock or DWORD PTR [ebx],0x64
	lock sbb DWORD PTR [ebx],eax
	lock sbb DWORD PTR [ebx],0x64
	lock sub DWORD PTR [ebx],eax
	lock sub DWORD PTR [ebx],0x64
	lock xadd DWORD PTR [ebx],eax
	lock xchg DWORD PTR [ebx],eax
	lock xchg DWORD PTR [ebx],eax
	lock xor DWORD PTR [ebx],eax
	lock xor DWORD PTR [ebx],0x64
@


1.1
log
@gas/

2009-11-12  H.J. Lu  <hongjiu.lu@@intel.com>

	* config/tc-i386.c (LOCKREP_PREFIX): Removed.
	(REP_PREFIX): New.
	(LOCK_PREFIX): Likewise.
	(PREFIX_GROUP): Likewise.
	(REX_PREFIX): Updated.
	(MAX_PREFIXES): Likewise.
	(add_prefix): Updated.  Return enum PREFIX_GROUP.
	(md_assemble): Check for lock without a lockable instruction.
	(parse_insn): Updated.
	(output_insn): Likewise.

gas/testsuite/

2009-11-12  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/i386.exp: Run lock-1, lock-1-intel, lockbad-1,
	x86-64-lock-1, x86-64-lock-1-intel and x86-64-lockbad-1.

	* gas/i386/lock-1-intel.d: New.
	* gas/i386/lock-1.d: Likewise.
	* gas/i386/lock-1.s: Likewise.
	* gas/i386/lockbad-1.l: Likewise.
	* gas/i386/lockbad-1.s: Likewise.
	* gas/i386/x86-64-lock-1-intel.d: Likewise.
	* gas/i386/x86-64-lock-1.d: Likewise.
	* gas/i386/x86-64-lock-1.s: Likewise.
	* gas/i386/x86-64-lockbad-1.l: Likewise.
	* gas/i386/x86-64-lockbad-1.s: Likewise.

opcodes/

2009-11-12  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386-gen.c (opcode_modifiers): Add IsLockable.

	* i386-opc.h (IsLockable): New.
	(i386_opcode_modifier): Add islockable.

	* i386-opc.tbl: Add IsLockable to add, adc, and, btc, btr,
	bts, cmpxchg, cmpxch8b, dec, inc, neg, not, or, sbb, sub,
	xor, xadd and xchg.
	* i386-tbl.h: Regenerated.
@
text
@d5 1
a5 1
	lock add (%ebx), %eax
d7 1
a7 1
	lock adc (%ebx), %eax
d9 1
a9 1
	lock and (%ebx), %eax
d23 1
a23 1
	lock or (%ebx), %eax
d25 1
a25 1
	lock sbb (%ebx), %eax
d27 1
a27 1
	lock sub (%ebx), %eax
d32 1
a32 1
	lock xor (%ebx), %eax
d36 1
a36 1
	lock add eax,DWORD PTR [ebx]
d38 1
a38 1
	lock adc eax,DWORD PTR [ebx]
d40 1
a40 1
	lock and eax,DWORD PTR [ebx]
d54 1
a54 1
	lock or eax,DWORD PTR [ebx]
d56 1
a56 1
	lock sbb eax,DWORD PTR [ebx]
d58 1
a58 1
	lock sub eax,DWORD PTR [ebx]
d63 1
a63 1
	lock xor eax,DWORD PTR [ebx]
@

