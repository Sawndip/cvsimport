head	1.12;
access;
symbols
	binutils-2_24-branch:1.12.0.32
	binutils-2_24-branchpoint:1.12
	binutils-2_21_1:1.12
	binutils-2_23_2:1.12
	binutils-2_23_1:1.12
	binutils-2_23:1.12
	binutils-2_23-branch:1.12.0.30
	binutils-2_23-branchpoint:1.12
	binutils-2_22_branch:1.12.0.28
	binutils-2_22:1.12
	binutils-2_22-branch:1.12.0.26
	binutils-2_22-branchpoint:1.12
	binutils-2_21:1.12
	binutils-2_21-branch:1.12.0.24
	binutils-2_21-branchpoint:1.12
	binutils-2_20_1:1.12
	binutils-2_20:1.12
	binutils-arc-20081103-branch:1.12.0.22
	binutils-arc-20081103-branchpoint:1.12
	binutils-2_20-branch:1.12.0.20
	binutils-2_20-branchpoint:1.12
	dje-cgen-play1-branch:1.12.0.18
	dje-cgen-play1-branchpoint:1.12
	arc-20081103-branch:1.12.0.16
	arc-20081103-branchpoint:1.12
	binutils-2_19_1:1.12
	binutils-2_19:1.12
	binutils-2_19-branch:1.12.0.14
	binutils-2_19-branchpoint:1.12
	binutils-2_18:1.12
	binutils-2_18-branch:1.12.0.12
	binutils-2_18-branchpoint:1.12
	binutils-csl-coldfire-4_1-32:1.12
	binutils-csl-sourcerygxx-4_1-32:1.12
	binutils-csl-innovasic-fido-3_4_4-33:1.12
	binutils-csl-sourcerygxx-3_4_4-32:1.12
	binutils-csl-coldfire-4_1-30:1.12
	binutils-csl-sourcerygxx-4_1-30:1.12
	binutils-csl-coldfire-4_1-28:1.12
	binutils-csl-sourcerygxx-4_1-29:1.12
	binutils-csl-sourcerygxx-4_1-28:1.12
	binutils-csl-arm-2006q3-27:1.12
	binutils-csl-sourcerygxx-4_1-27:1.12
	binutils-csl-arm-2006q3-26:1.12
	binutils-csl-sourcerygxx-4_1-26:1.12
	binutils-csl-sourcerygxx-4_1-25:1.12
	binutils-csl-sourcerygxx-4_1-24:1.12
	binutils-csl-sourcerygxx-4_1-23:1.12
	binutils-csl-sourcerygxx-4_1-21:1.12
	binutils-csl-arm-2006q3-21:1.12
	binutils-csl-sourcerygxx-4_1-22:1.12
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.12
	binutils-csl-sourcerygxx-4_1-20:1.12
	binutils-csl-arm-2006q3-19:1.12
	binutils-csl-sourcerygxx-4_1-19:1.12
	binutils-csl-sourcerygxx-4_1-18:1.12
	binutils-csl-renesas-4_1-9:1.12
	binutils-csl-sourcerygxx-3_4_4-25:1.12
	binutils-csl-renesas-4_1-8:1.12
	binutils-csl-renesas-4_1-7:1.12
	binutils-csl-renesas-4_1-6:1.12
	binutils-csl-sourcerygxx-4_1-17:1.12
	binutils-csl-sourcerygxx-4_1-14:1.12
	binutils-csl-sourcerygxx-4_1-15:1.12
	binutils-csl-sourcerygxx-4_1-13:1.12
	binutils-2_17:1.12
	binutils-csl-sourcerygxx-4_1-12:1.12
	binutils-csl-sourcerygxx-3_4_4-21:1.12
	binutils-csl-wrs-linux-3_4_4-24:1.12
	binutils-csl-wrs-linux-3_4_4-23:1.12
	binutils-csl-sourcerygxx-4_1-9:1.12
	binutils-csl-sourcerygxx-4_1-8:1.12
	binutils-csl-sourcerygxx-4_1-7:1.12
	binutils-csl-arm-2006q1-6:1.12
	binutils-csl-sourcerygxx-4_1-6:1.12
	binutils-csl-wrs-linux-3_4_4-22:1.12
	binutils-csl-coldfire-4_1-11:1.12
	binutils-csl-sourcerygxx-3_4_4-19:1.12
	binutils-csl-coldfire-4_1-10:1.12
	binutils-csl-sourcerygxx-4_1-5:1.12
	binutils-csl-sourcerygxx-4_1-4:1.12
	binutils-csl-wrs-linux-3_4_4-21:1.12
	binutils-csl-morpho-4_1-4:1.12
	binutils-csl-sourcerygxx-3_4_4-17:1.12
	binutils-csl-wrs-linux-3_4_4-20:1.12
	binutils-2_17-branch:1.12.0.10
	binutils-2_17-branchpoint:1.12
	binutils-csl-2_17-branch:1.12.0.8
	binutils-csl-2_17-branchpoint:1.12
	binutils-csl-gxxpro-3_4-branch:1.12.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.12
	binutils-2_16_1:1.12
	binutils-csl-arm-2005q1b:1.12
	binutils-2_16:1.12
	binutils-csl-arm-2005q1a:1.12
	binutils-csl-arm-2005q1-branch:1.12.0.4
	binutils-csl-arm-2005q1-branchpoint:1.12
	binutils-2_16-branch:1.12.0.2
	binutils-2_16-branchpoint:1.12
	csl-arm-2004-q3d:1.11
	csl-arm-2004-q3:1.11
	binutils-2_15:1.11
	binutils-2_15-branchpoint:1.11
	csl-arm-2004-q1a:1.11
	csl-arm-2004-q1:1.11
	binutils-2_15-branch:1.11.0.14
	cagney_bfdfile-20040213-branch:1.11.0.12
	cagney_bfdfile-20040213-branchpoint:1.11
	cagney_bigcore-20040122-branch:1.11.0.10
	cagney_bigcore-20040122-branchpoint:1.11
	csl-arm-2003-q4:1.11
	binutils-2_14:1.11
	binutils-2_14-branch:1.11.0.8
	binutils-2_14-branchpoint:1.11
	binutils-2_13_2_1:1.11
	binutils-2_13_2:1.11
	binutils-2_13_1:1.11
	binutils-2_13:1.11
	binutils-2_13-branchpoint:1.11
	binutils-2_13-branch:1.11.0.6
	binutils-2_12_1:1.11
	binutils-2_12:1.11
	binutils-2_12-branch:1.11.0.4
	binutils-2_12-branchpoint:1.11
	cygnus_cvs_20020108_pre:1.11
	binutils-2_11_2:1.11
	binutils-2_11_1:1.11
	binutils-2_11:1.11
	x86_64versiong3:1.11
	binutils-2_11-branch:1.11.0.2
	binutils-2_10_1:1.9
	binutils-2_10:1.9
	binutils-2_10-branch:1.9.0.2
	binutils-2_10-branchpoint:1.9
	binutils_latest_snapshot:1.12
	repo-unification-2000-02-06:1.7
	binu_ss_19990721:1.1.1.1
	binu_ss_19990602:1.1.1.1
	binu_ss_19990502:1.1.1.1
	cygnus:1.1.1;
locks; strict;
comment	@ * @;


1.12
date	2004.11.06.01.50.21;	author hjl;	state Exp;
branches;
next	1.11;

1.11
date	2000.04.25.07.19.46;	author amodra;	state Exp;
branches;
next	1.10;

1.10
date	2000.04.03.12.20.55;	author amodra;	state Exp;
branches;
next	1.9;

1.9
date	2000.02.26.00.49.27;	author hjl;	state Exp;
branches;
next	1.8;

1.8
date	2000.02.25.11.41.12;	author amodra;	state Exp;
branches;
next	1.7;

1.7
date	2000.01.21.22.58.04;	author amodra;	state Exp;
branches;
next	1.6;

1.6
date	2000.01.21.10.18.33;	author amodra;	state Exp;
branches;
next	1.5;

1.5
date	2000.01.15.12.06.03;	author amodra;	state Exp;
branches;
next	1.4;

1.4
date	2000.01.15.04.46.00;	author amodra;	state Exp;
branches;
next	1.3;

1.3
date	99.08.20.11.59.19;	author amodra;	state Exp;
branches;
next	1.2;

1.2
date	99.08.09.04.41.00;	author ian;	state Exp;
branches;
next	1.1;

1.1
date	99.05.03.07.28.50;	author rth;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.05.03.07.28.50;	author rth;	state Exp;
branches;
next	;


desc
@@


1.12
log
@2004-11-05  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/general.s: Add movzb.
	* gas/i386/general.l: Updated.
@
text
@.*: Assembler messages:
.*:7: Warning:.*
.*:9: Warning:.*
.*:11: Warning:.*
.*:13: Warning:.*
.*:15: Warning:.*
.*:21: Warning:.*
.*:23: Warning:.*
.*:25: Warning:.*
.*:27: Warning:.*
.*:29: Warning:.*
.*:39: Warning:.*
.*:41: Warning:.*
.*:48: Warning:.*
.*:51: Warning:.*
.*:124: Warning:.*
.*:125: Warning:.*
.*:126: Warning:.*
.*:127: Warning:.*
.*:128: Warning:.*
.*:129: Warning:.*
.*:130: Warning:.*
.*:131: Warning:.*
.*:132: Warning:.*
.*:133: Warning:.*
.*:134: Warning:.*
.*:135: Warning:.*
.*:136: Warning:.*
.*:137: Warning:.*
.*:138: Warning:.*
.*:139: Warning:.*
.*:140: Warning:.*
.*:141: Warning:.*
.*:142: Warning:.*
.*:143: Warning:.*
.*:144: Warning:.*
.*:178: Warning:.*
   1                       	.psize 0
   2                       	.text
   3                       	#test jumps and calls
   4 0000 EBFE              	1:	jmp	1b
   5 0002 E9((FC|F9)FFFF FF|000000 00)       		jmp	xxx
   6 0007 FF250000 0000     		jmp	\*xxx
   7 000d FF250000 0000     		jmp	xxx\(,1\)
.*Warning:.*
   8 0013 FFE7              		jmp	\*%edi
   9 0015 FFE7              		jmp	%edi
.*Warning:.*
  10 0017 FF27              		jmp	\*\(%edi\)
  11 0019 FF27              		jmp	\(%edi\)
.*Warning:.*
  12 001b FF2CBD00 000000   		ljmp	\*xxx\(,%edi,4\)
  13 0022 FF2CBD00 000000   		ljmp	xxx\(,%edi,4\)
.*Warning:.*
  14 0029 FF2D0000 0000     		ljmp	\*xxx
  15 002f FF2D0000 0000     		ljmp	xxx\(,1\)
.*Warning:.*
  16 0035 EA000000 003412   		ljmp	\$0x1234,\$xxx
  17                       	
  18 003c E8BFFFFF FF       		call	1b
  19 0041 E8((FC|BA)FFFF FF|000000 00)       		call	xxx
  20 0046 FF150000 0000     		call	\*xxx
  21 004c FF150000 0000     		call	xxx\(,1\)
.*Warning:.*
  22 0052 FFD7              		call	\*%edi
  23 0054 FFD7              		call	%edi
.*Warning:.*
  24 0056 FF17              		call	\*\(%edi\)
  25 0058 FF17              		call	\(%edi\)
.*Warning:.*
  26 005a FF1CBD00 000000   		lcall	\*xxx\(,%edi,4\)
  27 0061 FF1CBD00 000000   		lcall	xxx\(,%edi,4\)
.*Warning:.*
  28 0068 FF1D0000 0000     		lcall	\*xxx
  29 006e FF1D0000 0000     		lcall	xxx\(,1\)
.*Warning:.*
  30 0074 9A000000 003412   		lcall	\$0x1234,\$xxx
  31                       	
  32                       	# test various segment reg insns
  33 007b 1E                		push	%ds
  34 007c 1E                		pushl	%ds
  35 007d 1F                		pop	%ds
  36 007e 1F                		popl	%ds
  37 007f 8CD8              		mov	%ds,%eax
  38 0081 8CD8              		movl	%ds,%eax
  39 0083 8CD8              		movl	%ds,%ax
.*Warning:.*
  40 0085 8ED8              		mov	%eax,%ds
  41 0087 8ED8              		movl	%ax,%ds
.*Warning:.*
  42 0089 8ED8              		movl	%eax,%ds
  43                       	
  44 008b 661E              		pushw	%ds
  45 008d 661F              		popw	%ds
  46 008f 668CD8            		mov	%ds,%ax
  47 0092 668CD8            		movw	%ds,%ax
  48 0095 668CD8            		movw	%ds,%eax
.*Warning:.*
  49 0098 8ED8              		mov	%ax,%ds
  50 009a 8ED8              		movw	%ax,%ds
  51 009c 8ED8              		movw	%eax,%ds
.*Warning:.*
  52                       	
  53                       	# test various pushes
  54 009e 6A0A              		pushl	\$10
  55 00a0 666A0A            		pushw	\$10
  56 00a3 6A0A              		push	\$10
  57 00a5 68E80300 00       		pushl	\$1000
  58 00aa 6668E803          		pushw	\$1000
  59 00ae 68E80300 00       		push	\$1000
  60 00b3 FF35D200 0000     		pushl	1f
  61 00b9 66FF35D2 000000   		pushw	1f
  62 00c0 FF35D200 0000     		push	1f
  63 00c6 FFB30C00 0000     		push	\(1f-.\)\(%ebx\)
  64 00cc FF350600 0000     		push	1f-.
  65                       	# these, and others like them should have no operand size prefix
  66 00d2 0F00D1            	1:	lldt	%cx
  67 00d5 0F01F0            		lmsw	%ax
  68                       	
  69                       	# Just to make sure these don't become illegal due to over-enthusiastic
  70                       	# register checking
  71 00d8 660FBEF8          		movsbw	%al,%di
  72 00dc 0FBEC8            		movsbl	%al,%ecx
  73 00df 0FBFC8            		movswl	%ax,%ecx
  74 00e2 660FB6F8          		movzbw	%al,%di
  75 00e6 0FB6C8            		movzbl	%al,%ecx
  76 00e9 0FB7C8            		movzwl	%ax,%ecx
  77                       	
  78 00ec EC                		in	%dx,%al
  79 00ed 66ED              		in	%dx,%ax
  80 00ef ED                		in	%dx,%eax
  81 00f0 EC                		in	\(%dx\),%al
  82 00f1 66ED              		in	\(%dx\),%ax
  83 00f3 ED                		in	\(%dx\),%eax
  84 00f4 EC                		inb	%dx,%al
  85 00f5 66ED              		inw	%dx,%ax
  86 00f7 ED                		inl	%dx,%eax
  87 00f8 EC                		inb	%dx
  88 00f9 66ED              		inw	%dx
  89 00fb ED                		inl	%dx
  90 00fc E4FF              		inb	\$255
  91 00fe 66E502            		inw	\$2
  92 0101 E504              		inl	\$4
  93 0103 66E50D            		in	\$13, %ax
  94 0106 EE                		out	%al,%dx
  95 0107 66EF              		out	%ax,%dx
  96 0109 EF                		out	%eax,%dx
  97 010a EE                		out	%al,\(%dx\)
  98 010b 66EF              		out	%ax,\(%dx\)
  99 010d EF                		out	%eax,\(%dx\)
 100 010e EE                		outb	%al,%dx
 101 010f 66EF              		outw	%ax,%dx
 102 0111 EF                		outl	%eax,%dx
 103 0112 EE                		outb	%dx
 104 0113 66EF              		outw	%dx
 105 0115 EF                		outl	%dx
 106 0116 E6FF              		outb	\$255
 107 0118 66E702            		outw	\$2
 108 011b E704              		outl	\$4
 109 011d 66E70D            		out	%ax, \$13
 110                       	# These are used in AIX.
 111 0120 66ED              		inw	\(%dx\)
 112 0122 66EF              		outw	\(%dx\)
 113                       	
 114 0124 A4                		movsb
 115 0125 66A7              		cmpsw
 116 0127 AF                		scasl
 117 0128 D7                		xlatb
 118 0129 2EA5              		movsl	%cs:\(%esi\),%es:\(%edi\)
 119 012b 0F9303            		setae	\(%ebx\)
 120 012e 0F9303            		setaeb	\(%ebx\)
 121 0131 0F93C0            		setae	%al
 122                       	
 123                       	#these should give warnings
 124 0134 0C01              		orb	\$1,%ax
.*Warning:.*
 125 0136 0C01              		orb	\$1,%eax
.*Warning:.*
 126 0138 80CB01            		orb	\$1,%bx
.*Warning:.*
 127 013b 80CB01            		orb	\$1,%ebx
.*Warning:.*
 128 013e D9C1              		fldl	%st\(1\)
.*Warning:.*
 129 0140 DDD2              		fstl	%st\(2\)
.*Warning:.*
 130 0142 DDDB              		fstpl	%st\(3\)
.*Warning:.*
 131 0144 D8D4              		fcoml	%st\(4\)
.*Warning:.*
 132 0146 D8DD              		fcompl	%st\(5\)
.*Warning:.*
 133 0148 DEC1              		faddp	%st\(1\),%st
.*Warning:.*
 134 014a DECA              		fmulp	%st\(2\),%st
.*Warning:.*
 135 014c DEE3              		fsubp	%st\(3\),%st
.*Warning:.*
 136 014e DEEC              		fsubrp	%st\(4\),%st
.*Warning:.*
 137 0150 DEF5              		fdivp	%st\(5\),%st
.*Warning:.*
 138 0152 DEFE              		fdivrp	%st\(6\),%st
.*Warning:.*
 139 0154 DEC1              		fadd
.*Warning:.*
 140 0156 DEE1              		fsub
.*Warning:.*
 141 0158 DEC9              		fmul
.*Warning:.*
 142 015a DEF1              		fdiv
.*Warning:.*
 143 015c DEE9              		fsubr
.*Warning:.*
 144 015e DEF9              		fdivr
.*Warning:.*
 145                       	#these should all be legal
 146 0160 0FA31556 341200   		btl	%edx, 0x123456
 147 0167 0FA3D0            		btl	%edx, %eax
 148 016a 0C01              		orb	\$1,%al
 149 016c 80CB01            		orb	\$1,%bl
 150 016f A1110000 00       		movl	17,%eax
 151 0174 A1110000 00       		mov	17,%eax
 152 0179 66ED              		inw	%dx,%ax
 153 017b ED                		inl	%dx,%eax
 154 017c 66ED              		inw	\(%dx\),%ax
 155 017e ED                		inl	\(%dx\),%eax
 156 017f EC                		in	\(%dx\),%al
 157 0180 66ED              		in	\(%dx\),%ax
 158 0182 ED                		in	\(%dx\),%eax
 159 0183 0FB61437          		movzbl	\(%edi,%esi\),%edx
 160 0187 0FB6451C          		movzbl	28\(%ebp\),%eax
 161 018b 0FB6C0            		movzbl	%al,%eax
 162 018e 0FB6F1            		movzbl	%cl,%esi
 163 0191 26D7              		xlat	%es:\(%ebx\)
 164 0193 D7                		xlat
 165 0194 D7                		xlatb
 166 0195 DDD8              	1:	fstp	%st\(0\)
 167 0197 E2FC              		loop	1b
 168 0199 F6F1              		divb    %cl 
 169 019b 66F7F1            		divw    %cx 
 170 019e F7F1              		divl    %ecx
 171 01a0 F6F1              		div	%cl
 172 01a2 66F7F1            		div	%cx
 173 01a5 F7F1              		div	%ecx
 174 01a7 F6F1              		div	%cl,%al
 175 01a9 66F7F1            		div	%cx,%ax
 176 01ac F7F1              		div	%ecx,%eax
 177 01ae 8EDE              		mov	%si,%ds
 178 01b0 8EDE              		movl	%si,%ds		# warning here
.*Warning:.*
 179 01b2 1E                		pushl	%ds
 180 01b3 1E                		push	%ds
 181 01b4 A0000000 00       		mov	0,%al
 182 01b9 66A10000 0100     		mov	0x10000,%ax
 183 01bf 89C3              		mov	%eax,%ebx
 184 01c1 9C                		pushf
 185 01c2 9C                		pushfl
 186 01c3 669C              		pushfw
 187 01c5 9D                		popf
 188 01c6 9D                		popfl
 189 01c7 669D              		popfw
 190 01c9 89341D00 000000   		mov	%esi,\(,%ebx,1\)
 191 01d0 80250000 00007F   		andb	\$~0x80,foo
 192                       	
 193 01d7 6683E0FE          		and	\$0xfffe,%ax
 194 01db 662500FF          		and	\$0xff00,%ax
 195 01df 25FEFF00 00       		and	\$0xfffe,%eax
 196 01e4 2500FF00 00       		and	\$0xff00,%eax
 197 01e9 83E0FE            		and	\$0xfffffffe,%eax
 198                       	
 199                       	.code16
 200 01ec 83E0FE            		and	\$0xfffe,%ax
 201 01ef 2500FF            		and	\$0xff00,%ax
 202 01f2 6625FEFF 0000     		and	\$0xfffe,%eax
 203 01f8 662500FF 0000     		and	\$0xff00,%eax
 204 01fe 6683E0FE          		and	\$0xfffffffe,%eax
 205                       	
 206                       	#check 16-bit code auto address prefix
 207                       	.code16gcc
 208 0202 67668D95 00FFFFFF 		leal	-256\(%ebp\),%edx
 209 020a 6788857F FFFFFF   		mov	%al,-129\(%ebp\)
 210 0211 67886580          		mov	%ah,-128\(%ebp\)
 211 0215 67668D9D 20F9FFFF 		leal	-1760\(%ebp\),%ebx
 212 021d 67668984 248C0000 		movl	%eax,140\(%esp\)
 212      00
 213                       	
 214                       	.code32
 215                       	# Make sure that we won't remove movzb by accident.
 216 0226 660FB6F8          		movzb	%al,%di
 217 022a 0FB6C8            		movzb	%al,%ecx
 218                       	
 219                       		# Force a good alignment.
 220 022d 000000            		.p2align	4,0
@


1.11
log
@Cope with PE relocs.
@
text
@d288 7
a294 3
 214                       		# Force a good alignment.
 215 0226 00000000 00000000 		.p2align	4,0
 215      0000
@


1.10
log
@Add 16-bit immediate tests.
@
text
@d42 1
a42 1
   5 0002 E9F(CF|9F)FFF FF       		jmp	xxx
d61 1
a61 1
  19 0041 E8(FC|BA)FFFF FF       		call	xxx
@


1.9
log
@2000-02-25  H.J. Lu <hjl@@gnu.org>

	* gas/i386/general.l: Support a.out and coff.
@
text
@d2 35
a36 27
.*:10: Warning:.*
.*:12: Warning:.*
.*:19: Warning:.*
.*:22: Warning:.*
.*:95: Warning:.*
.*:96: Warning:.*
.*:97: Warning:.*
.*:98: Warning:.*
.*:99: Warning:.*
.*:100: Warning:.*
.*:101: Warning:.*
.*:102: Warning:.*
.*:103: Warning:.*
.*:104: Warning:.*
.*:105: Warning:.*
.*:106: Warning:.*
.*:107: Warning:.*
.*:108: Warning:.*
.*:109: Warning:.*
.*:110: Warning:.*
.*:111: Warning:.*
.*:112: Warning:.*
.*:113: Warning:.*
.*:114: Warning:.*
.*:115: Warning:.*
.*:149: Warning:.*
.*:176: Warning:.*
a37 8
.*:180: Warning:.*
.*:182: Warning:.*
.*:184: Warning:.*
.*:190: Warning:.*
.*:192: Warning:.*
.*:194: Warning:.*
.*:196: Warning:.*
.*:198: Warning:.*
d40 251
a290 237
   3                       	# test various segment reg insns
   4 0000 1E                		push	%ds
   5 0001 1E                		pushl	%ds
   6 0002 1F                		pop	%ds
   7 0003 1F                		popl	%ds
   8 0004 8CD8              		mov	%ds,%eax
   9 0006 8CD8              		movl	%ds,%eax
  10 0008 8CD8              		movl	%ds,%ax
.*Warning:.*
  11 000a 8ED8              		mov	%eax,%ds
  12 000c 8ED8              		movl	%ax,%ds
.*Warning:.*
  13 000e 8ED8              		movl	%eax,%ds
  14                       	
  15 0010 661E              		pushw	%ds
  16 0012 661F              		popw	%ds
  17 0014 668CD8            		mov	%ds,%ax
  18 0017 668CD8            		movw	%ds,%ax
  19 001a 668CD8            		movw	%ds,%eax
.*Warning:.*
  20 001d 8ED8              		mov	%ax,%ds
  21 001f 8ED8              		movw	%ax,%ds
  22 0021 8ED8              		movw	%eax,%ds
.*Warning:.*
  23                       	
  24                       	# test various pushes
  25 0023 6A0A              		pushl	\$10
  26 0025 666A0A            		pushw	\$10
  27 0028 6A0A              		push	\$10
  28 002a 68E80300 00       		pushl	\$1000
  29 002f 6668E803          		pushw	\$1000
  30 0033 68E80300 00       		push	\$1000
  31 0038 FF355700 0000     		pushl	1f
  32 003e 66FF3557 000000   		pushw	1f
  33 0045 FF355700 0000     		push	1f
  34 004b FFB30C00 0000     		push	\(1f-.\)\(%ebx\)
  35 0051 FF350600 0000     		push	1f-.
  36                       	# these, and others like them should have no operand size prefix
  37 0057 0F00D1            	1:	lldt	%cx
  38 005a 0F01F0            		lmsw	%ax
  39                       	
  40                       	# Just to make sure these don't become illegal due to over-enthusiastic
  41                       	# register checking
  42 005d 660FBEF8          		movsbw	%al,%di
  43 0061 0FBEC8            		movsbl	%al,%ecx
  44 0064 0FBFC8            		movswl	%ax,%ecx
  45 0067 660FB6F8          		movzbw	%al,%di
  46 006b 0FB6C8            		movzbl	%al,%ecx
  47 006e 0FB7C8            		movzwl	%ax,%ecx
  48                       	
  49 0071 EC                		in	%dx,%al
  50 0072 66ED              		in	%dx,%ax
  51 0074 ED                		in	%dx,%eax
  52 0075 EC                		in	\(%dx\),%al
  53 0076 66ED              		in	\(%dx\),%ax
  54 0078 ED                		in	\(%dx\),%eax
  55 0079 EC                		inb	%dx,%al
  56 007a 66ED              		inw	%dx,%ax
  57 007c ED                		inl	%dx,%eax
  58 007d EC                		inb	%dx
  59 007e 66ED              		inw	%dx
  60 0080 ED                		inl	%dx
  61 0081 E4FF              		inb	\$255
  62 0083 66E502            		inw	\$2
  63 0086 E504              		inl	\$4
  64 0088 66E50D            		in	\$13, %ax
  65 008b EE                		out	%al,%dx
  66 008c 66EF              		out	%ax,%dx
  67 008e EF                		out	%eax,%dx
  68 008f EE                		out	%al,\(%dx\)
  69 0090 66EF              		out	%ax,\(%dx\)
  70 0092 EF                		out	%eax,\(%dx\)
  71 0093 EE                		outb	%al,%dx
  72 0094 66EF              		outw	%ax,%dx
  73 0096 EF                		outl	%eax,%dx
  74 0097 EE                		outb	%dx
  75 0098 66EF              		outw	%dx
  76 009a EF                		outl	%dx
  77 009b E6FF              		outb	\$255
  78 009d 66E702            		outw	\$2
  79 00a0 E704              		outl	\$4
  80 00a2 66E70D            		out	%ax, \$13
  81                       	# These are used in AIX.
  82 00a5 66ED              		inw	\(%dx\)
  83 00a7 66EF              		outw	\(%dx\)
  84                       	
  85 00a9 A4                		movsb
  86 00aa 66A7              		cmpsw
  87 00ac AF                		scasl
  88 00ad D7                		xlatb
  89 00ae 2EA5              		movsl	%cs:\(%esi\),%es:\(%edi\)
  90 00b0 0F9303            		setae	\(%ebx\)
  91 00b3 0F9303            		setaeb	\(%ebx\)
  92 00b6 0F93C0            		setae	%al
  93                       	
  94                       	#these should give warnings
  95 00b9 0C01              		orb	\$1,%ax
.*Warning:.*
  96 00bb 0C01              		orb	\$1,%eax
.*Warning:.*
  97 00bd 80CB01            		orb	\$1,%bx
.*Warning:.*
  98 00c0 80CB01            		orb	\$1,%ebx
.*Warning:.*
  99 00c3 D9C1              		fldl	%st\(1\)
.*Warning:.*
 100 00c5 DDD2              		fstl	%st\(2\)
.*Warning:.*
 101 00c7 DDDB              		fstpl	%st\(3\)
.*Warning:.*
 102 00c9 D8D4              		fcoml	%st\(4\)
.*Warning:.*
 103 00cb D8DD              		fcompl	%st\(5\)
.*Warning:.*
 104 00cd DEC1              		faddp	%st\(1\),%st
.*Warning:.*
 105 00cf DECA              		fmulp	%st\(2\),%st
.*Warning:.*
 106 00d1 DEE3              		fsubp	%st\(3\),%st
.*Warning:.*
 107 00d3 DEEC              		fsubrp	%st\(4\),%st
.*Warning:.*
 108 00d5 DEF5              		fdivp	%st\(5\),%st
.*Warning:.*
 109 00d7 DEFE              		fdivrp	%st\(6\),%st
.*Warning:.*
 110 00d9 DEC1              		fadd
.*Warning:.*
 111 00db DEE1              		fsub
.*Warning:.*
 112 00dd DEC9              		fmul
.*Warning:.*
 113 00df DEF1              		fdiv
.*Warning:.*
 114 00e1 DEE9              		fsubr
.*Warning:.*
 115 00e3 DEF9              		fdivr
.*Warning:.*
 116                       	#these should all be legal
 117 00e5 0FA31556 341200   		btl	%edx, 0x123456
 118 00ec 0FA3D0            		btl	%edx, %eax
 119 00ef 0C01              		orb	\$1,%al
 120 00f1 80CB01            		orb	\$1,%bl
 121 00f4 A1110000 00       		movl	17,%eax
 122 00f9 A1110000 00       		mov	17,%eax
 123 00fe 66ED              		inw	%dx,%ax
 124 0100 ED                		inl	%dx,%eax
 125 0101 66ED              		inw	\(%dx\),%ax
 126 0103 ED                		inl	\(%dx\),%eax
 127 0104 EC                		in	\(%dx\),%al
 128 0105 66ED              		in	\(%dx\),%ax
 129 0107 ED                		in	\(%dx\),%eax
 130 0108 0FB61437          		movzbl	\(%edi,%esi\),%edx
 131 010c 0FB6451C          		movzbl	28\(%ebp\),%eax
 132 0110 0FB6C0            		movzbl	%al,%eax
 133 0113 0FB6F1            		movzbl	%cl,%esi
 134 0116 26D7              		xlat	%es:\(%ebx\)
 135 0118 D7                		xlat
 136 0119 D7                		xlatb
 137 011a DDD8              	1:	fstp	%st\(0\)
 138 011c E2FC              		loop	1b
 139 011e F6F1              		divb    %cl 
 140 0120 66F7F1            		divw    %cx 
 141 0123 F7F1              		divl    %ecx
 142 0125 F6F1              		div	%cl
 143 0127 66F7F1            		div	%cx
 144 012a F7F1              		div	%ecx
 145 012c F6F1              		div	%cl,%al
 146 012e 66F7F1            		div	%cx,%ax
 147 0131 F7F1              		div	%ecx,%eax
 148 0133 8EDE              		mov	%si,%ds
 149 0135 8EDE              		movl	%si,%ds		# warning here
.*Warning:.*
 150 0137 1E                		pushl	%ds
 151 0138 1E                		push	%ds
 152 0139 A0000000 00       		mov	0,%al
 153 013e 66A10000 0100     		mov	0x10000,%ax
 154 0144 89C3              		mov	%eax,%ebx
 155 0146 9C                		pushf
 156 0147 9C                		pushfl
 157 0148 669C              		pushfw
 158 014a 9D                		popf
 159 014b 9D                		popfl
 160 014c 669D              		popfw
 161 014e 89341D00 000000   		mov	%esi,\(,%ebx,1\)
 162 0155 80250000 00007F   		andb	\$~0x80,foo
 163                       	
 164                       	#check 16-bit code auto address prefix
 165                       	.code16gcc
 166 015c 67668D95 00FFFFFF 		leal	-256\(%ebp\),%edx
 167 0164 6788857F FFFFFF   		mov	%al,-129\(%ebp\)
 168 016b 67886580          		mov	%ah,-128\(%ebp\)
 169 016f 67668D9D 20F9FFFF 		leal	-1760\(%ebp\),%ebx
 170 0177 67668984 248C0000 		movl	%eax,140\(%esp\)
 170      00
 171                       	
 172                       	.code32
 173 0180 EB98              		jmp	1b
 174 0182 E9(FCFF|79FE)FF FF       		jmp	xxx
 175 0187 FF250000 0000     		jmp	\*xxx
 176 018d FF250000 0000     		jmp	xxx\(,1\)
.*Warning:.*
 177 0193 FFE7              		jmp	\*%edi
 178 0195 FFE7              		jmp	%edi
.*Warning:.*
 179 0197 FF27              		jmp	\*\(%edi\)
 180 0199 FF27              		jmp	\(%edi\)
.*Warning:.*
 181 019b FF2CBD00 000000   		ljmp	\*xxx\(,%edi,4\)
 182 01a2 FF2CBD00 000000   		ljmp	xxx\(,%edi,4\)
.*Warning:.*
 183 01a9 FF2D0000 0000     		ljmp	\*xxx
 184 01af FF2D0000 0000     		ljmp	xxx\(,1\)
.*Warning:.*
 185 01b5 EA000000 003412   		ljmp	\$0x1234,\$xxx
 186                       	
 187 01bc E859FFFF FF       		call	1b
 188 01c1 E8(FCFF|3AFE)FF FF       		call	xxx
 189 01c6 FF150000 0000     		call	\*xxx
 190 01cc FF150000 0000     		call	xxx\(,1\)
.*Warning:.*
 191 01d2 FFD7              		call	\*%edi
 192 01d4 FFD7              		call	%edi
.*Warning:.*
 193 01d6 FF17              		call	\*\(%edi\)
 194 01d8 FF17              		call	\(%edi\)
.*Warning:.*
 195 01da FF1CBD00 000000   		lcall	\*xxx\(,%edi,4\)
 196 01e1 FF1CBD00 000000   		lcall	xxx\(,%edi,4\)
.*Warning:.*
 197 01e8 FF1D0000 0000     		lcall	\*xxx
 198 01ee FF1D0000 0000     		lcall	xxx\(,1\)
.*Warning:.*
 199 01f4 9A000000 003412   		lcall	\$0x1234,\$xxx
 200                       	
 201                       		# Force a good alignment.
 202 01fb 00000000 00       		.p2align	4,0
@


1.8
log
@Extend the i386 gas testsuite to do some tests for intel_syntax.  Fix all
the errors exposed by this addition.  These were intel mode
"fi... word ptr", "fi... dword ptr", "jmp Imm seg, Imm offset", "out dx,al".
The failure with intel "out dx,al" was also present in att "out al,dx".
Extend testsuite to catch this case too.
@
text
@d238 1
a238 1
 174 0182 E9(FCFF|90FE)FF FF       		jmp	xxx
d257 1
a257 1
 188 01c1 E8(FCFF|51FE)FF FF       		call	xxx
@


1.7
log
@Fix gas x86 testsuite for a.out
@
text
@a5 14
.*:81: Warning:.*
.*:82: Warning:.*
.*:83: Warning:.*
.*:84: Warning:.*
.*:85: Warning:.*
.*:86: Warning:.*
.*:87: Warning:.*
.*:88: Warning:.*
.*:89: Warning:.*
.*:90: Warning:.*
.*:91: Warning:.*
.*:92: Warning:.*
.*:93: Warning:.*
.*:94: Warning:.*
d13 15
a27 6
.*:135: Warning:.*
.*:162: Warning:.*
.*:164: Warning:.*
.*:166: Warning:.*
.*:168: Warning:.*
.*:170: Warning:.*
d33 5
d105 142
a246 147
  64 0088 EF                		outl	%eax,%dx
  65 0089 E62A              		out	%al, \$42
  66 008b 66E50D            		in	\$13, %ax
  67                       	# These are used in AIX.
  68 008e 66ED              		inw	\(%dx\)
  69 0090 66EF              		outw	\(%dx\)
  70                       	
  71 0092 A4                		movsb
  72 0093 66A7              		cmpsw
  73 0095 AF                		scasl
  74 0096 D7                		xlatb
  75 0097 2EA5              		movsl	%cs:\(%esi\),%es:\(%edi\)
  76 0099 0F9303            		setae	\(%ebx\)
  77 009c 0F9303            		setaeb	\(%ebx\)
  78 009f 0F93C0            		setae	%al
  79                       	
  80                       	#these should give warnings
  81 00a2 0C01              		orb	\$1,%ax
.*Warning:.*
  82 00a4 0C01              		orb	\$1,%eax
.*Warning:.*
  83 00a6 80CB01            		orb	\$1,%bx
.*Warning:.*
  84 00a9 80CB01            		orb	\$1,%ebx
.*Warning:.*
  85 00ac D9C1              		fldl	%st\(1\)
.*Warning:.*
  86 00ae DDD2              		fstl	%st\(2\)
.*Warning:.*
  87 00b0 DDDB              		fstpl	%st\(3\)
.*Warning:.*
  88 00b2 D8D4              		fcoml	%st\(4\)
.*Warning:.*
  89 00b4 D8DD              		fcompl	%st\(5\)
.*Warning:.*
  90 00b6 DEC1              		faddp	%st\(1\),%st
.*Warning:.*
  91 00b8 DECA              		fmulp	%st\(2\),%st
.*Warning:.*
  92 00ba DEE3              		fsubp	%st\(3\),%st
.*Warning:.*
  93 00bc DEEC              		fsubrp	%st\(4\),%st
.*Warning:.*
  94 00be DEF5              		fdivp	%st\(5\),%st
.*Warning:.*
  95 00c0 DEFE              		fdivrp	%st\(6\),%st
.*Warning:.*
  96 00c2 DEC1              		fadd
.*Warning:.*
  97 00c4 DEE1              		fsub
.*Warning:.*
  98 00c6 DEC9              		fmul
.*Warning:.*
  99 00c8 DEF1              		fdiv
.*Warning:.*
 100 00ca DEE9              		fsubr
.*Warning:.*
 101 00cc DEF9              		fdivr
.*Warning:.*
 102                       	#these should all be legal
 103 00ce 0FA31556 341200   		btl	%edx, 0x123456
 104 00d5 0FA3D0            		btl	%edx, %eax
 105 00d8 0C01              		orb	\$1,%al
 106 00da 80CB01            		orb	\$1,%bl
 107 00dd A1110000 00       		movl	17,%eax
 108 00e2 A1110000 00       		mov	17,%eax
 109 00e7 66ED              		inw	%dx,%ax
 110 00e9 ED                		inl	%dx,%eax
 111 00ea 66ED              		inw	\(%dx\),%ax
 112 00ec ED                		inl	\(%dx\),%eax
 113 00ed EC                		in	\(%dx\),%al
 114 00ee 66ED              		in	\(%dx\),%ax
 115 00f0 ED                		in	\(%dx\),%eax
 116 00f1 0FB61437          		movzbl	\(%edi,%esi\),%edx
 117 00f5 0FB6451C          		movzbl	28\(%ebp\),%eax
 118 00f9 0FB6C0            		movzbl	%al,%eax
 119 00fc 0FB6F1            		movzbl	%cl,%esi
 120 00ff 26D7              		xlat	%es:\(%ebx\)
 121 0101 D7                		xlat
 122 0102 D7                		xlatb
 123 0103 DDD8              	1:	fstp	%st\(0\)
 124 0105 E2FC              		loop	1b
 125 0107 F6F1              		divb    %cl 
 126 0109 66F7F1            		divw    %cx 
 127 010c F7F1              		divl    %ecx
 128 010e F6F1              		div	%cl
 129 0110 66F7F1            		div	%cx
 130 0113 F7F1              		div	%ecx
 131 0115 F6F1              		div	%cl,%al
 132 0117 66F7F1            		div	%cx,%ax
 133 011a F7F1              		div	%ecx,%eax
 134 011c 8EDE              		mov	%si,%ds
 135 011e 8EDE              		movl	%si,%ds		# warning here
.*Warning:.*
 136 0120 1E                		pushl	%ds
 137 0121 1E                		push	%ds
 138 0122 A0000000 00       		mov	0,%al
 139 0127 66A10000 0100     		mov	0x10000,%ax
 140 012d 89C3              		mov	%eax,%ebx
 141 012f 9C                		pushf
 142 0130 9C                		pushfl
 143 0131 669C              		pushfw
 144 0133 9D                		popf
 145 0134 9D                		popfl
 146 0135 669D              		popfw
 147 0137 89341D00 000000   		mov	%esi,\(,%ebx,1\)
 148 013e 80250000 00007F   		andb	\$~0x80,foo
 149                       	
 150                       	#check 16-bit code auto address prefix
 151                       	.code16gcc
 152 0145 67668D95 00FFFFFF 		leal	-256\(%ebp\),%edx
 153 014d 6788857F FFFFFF   		mov	%al,-129\(%ebp\)
 154 0154 67886580          		mov	%ah,-128\(%ebp\)
 155 0158 67668D9D 20F9FFFF 		leal	-1760\(%ebp\),%ebx
 156 0160 67668984 248C0000 		movl	%eax,140\(%esp\)
 156      00
 157                       	
 158                       	.code32
 159 0169 EB98              		jmp	1b
 160 016b E9(FCFF|90FE)FF FF       		jmp	xxx
 161 0170 FF250000 0000     		jmp	\*xxx
 162 0176 FF250000 0000     		jmp	xxx\(,1\)
.*Warning:.*
 163 017c FFE7              		jmp	\*%edi
 164 017e FFE7              		jmp	%edi
.*Warning:.*
 165 0180 FF27              		jmp	\*\(%edi\)
 166 0182 FF27              		jmp	\(%edi\)
.*Warning:.*
 167 0184 FF2CBD00 000000   		ljmp	\*xxx\(,%edi,4\)
 168 018b FF2CBD00 000000   		ljmp	xxx\(,%edi,4\)
.*Warning:.*
 169 0192 FF2D0000 0000     		ljmp	\*xxx
 170 0198 FF2D0000 0000     		ljmp	xxx\(,1\)
.*Warning:.*
 171 019e EA000000 003412   		ljmp	\$0x1234,\$xxx
 172                       	
 173 01a5 E859FFFF FF       		call	1b
 174 01aa E8(FCFF|51FE)FF FF       		call	xxx
 175 01af FF150000 0000     		call	\*xxx
 176 01b5 FF150000 0000     		call	xxx\(,1\)
.*Warning:.*
 177 01bb FFD7              		call	\*%edi
 178 01bd FFD7              		call	%edi
.*Warning:.*
 179 01bf FF17              		call	\*\(%edi\)
 180 01c1 FF17              		call	\(%edi\)
d248 2
a249 2
 181 01c3 FF1CBD00 000000   		lcall	\*xxx\(,%edi,4\)
 182 01ca FF1CBD00 000000   		lcall	xxx\(,%edi,4\)
d251 2
a252 2
 183 01d1 FF1D0000 0000     		lcall	\*xxx
 184 01d7 FF1D0000 0000     		lcall	xxx\(,1\)
d254 1
a254 1
 185 01dd 9A000000 003412   		lcall	\$0x1234,\$xxx
d256 21
a276 3
 187                       		# Force a good alignment.
 188 01e4 00000000 00000000 		.p2align	4,0
 188      00000000 
@


1.6
log
@gas/testsuite/ChangeLog
	* gas/i386/general.{s,l}: Move 16 bit jmp and call tests from here
	* gas/i386/jump16.{s,d}: To here.
	* gas/i386/jump.{s,d}: New files.  Duplicate 32 bit jmp and call
	tests in general.s so that objdump is exercised.

	* gas/i386/i386.exp: Call new tests.
@
text
@d224 1
a224 1
 160 016b E9FCFFFF FF       		jmp	xxx
d243 1
a243 1
 174 01aa E8FCFFFF FF       		call	xxx
@


1.5
log
@Cosmetic changes to tc-i386.[ch] + extend x86 gas testsuite jmp and
call tests + tweak intel mode far call and jmp.
@
text
@a37 20
.*:191: Warning:.*
.*:193: Warning:.*
.*:195: Warning:.*
.*:197: Warning:.*
.*:199: Warning:.*
.*:205: Warning:.*
.*:207: Warning:.*
.*:209: Warning:.*
.*:211: Warning:.*
.*:213: Warning:.*
.*:220: Warning:.*
.*:222: Warning:.*
.*:224: Warning:.*
.*:226: Warning:.*
.*:228: Warning:.*
.*:234: Warning:.*
.*:236: Warning:.*
.*:238: Warning:.*
.*:240: Warning:.*
.*:242: Warning:.*
d222 1
a222 1
 158                       	.extern xxx
d224 3
a226 3
 160 016b E9FEFF            		jmp	xxx
 161 016e FF260000          		jmp	\*xxx
 162 0172 FF260000          		jmp	xxx\(,1\)
d228 2
a229 2
 163 0176 66FFE7            		jmp	\*%edi
 164 0179 66FFE7            		jmp	%edi
d231 2
a232 2
 165 017c 67FF27            		jmp	\*\(%edi\)
 166 017f 67FF27            		jmp	\(%edi\)
d234 2
a235 2
 167 0182 67FFAF00 000000   		ljmp	\*xxx\(%edi\)
 168 0189 67FFAF00 000000   		ljmp	xxx\(%edi\)
d237 2
a238 2
 169 0190 FF2E0000          		ljmp	\*xxx
 170 0194 FF2E0000          		ljmp	xxx\(,1\)
d240 1
a240 1
 171 0198 EA000034 12       		ljmp	\$0x1234,\$xxx
d242 4
a245 4
 173 019d 66E860FF FFFF     		call	1b
 174 01a3 66E8FCFF FFFF     		call	xxx
 175 01a9 66FF1600 00       		call	\*xxx
 176 01ae 66FF1600 00       		call	xxx\(,1\)
d247 2
a248 2
 177 01b3 66FFD7            		call	\*%edi
 178 01b6 66FFD7            		call	%edi
d250 2
a251 2
 179 01b9 6766FF17          		call	\*\(%edi\)
 180 01bd 6766FF17          		call	\(%edi\)
d253 2
a254 2
 181 01c1 6766FF9F 00000000 		lcall	\*xxx\(%edi\)
 182 01c9 6766FF9F 00000000 		lcall	xxx\(%edi\)
d256 2
a257 2
 183 01d1 66FF1E00 00       		lcall	\*xxx
 184 01d6 66FF1E00 00       		lcall	xxx\(,1\)
d259 1
a259 1
 185 01db 669A0000 00003412 		lcall	\$0x1234,\$xxx
d261 3
a263 81
 187                       	.code16
 188 01e3 E91DFF            		jmp	1b
 189 01e6 E9FEFF            		jmp	xxx
 190 01e9 FF260000          		jmp	\*xxx
 191 01ed FF260000          		jmp	xxx\(,1\)
.*Warning:.*
 192 01f1 FFE7              		jmp	\*%di
 193 01f3 FFE7              		jmp	%di
.*Warning:.*
 194 01f5 FF25              		jmp	\*\(%di\)
 195 01f7 FF25              		jmp	\(%di\)
.*Warning:.*
 196 01f9 FFAD0000          		ljmp	\*xxx\(%di\)
 197 01fd FFAD0000          		ljmp	xxx\(%di\)
.*Warning:.*
 198 0201 FF2E0000          		ljmp	\*xxx
 199 0205 FF2E0000          		ljmp	xxx\(,1\)
.*Warning:.*
 200 0209 EA000034 12       		ljmp	\$0x1234,\$xxx
 201                       	
 202 020e E8F2FE            		call	1b
 203 0211 E8FEFF            		call	xxx
 204 0214 FF160000          		call	\*xxx
 205 0218 FF160000          		call	xxx\(,1\)
.*Warning:.*
 206 021c FFD7              		call	\*%di
 207 021e FFD7              		call	%di
.*Warning:.*
 208 0220 FF15              		call	\*\(%di\)
 209 0222 FF15              		call	\(%di\)
.*Warning:.*
 210 0224 FF9D0000          		lcall	\*xxx\(%di\)
 211 0228 FF9D0000          		lcall	xxx\(%di\)
.*Warning:.*
 212 022c FF1E0000          		lcall	\*xxx
 213 0230 FF1E0000          		lcall	xxx\(,1\)
.*Warning:.*
 214 0234 9A000034 12       		lcall	\$0x1234,\$xxx
 215                       	
 216                       	.code32
 217 0239 E9C5FEFF FF       		jmp	1b
 218 023e E9FCFFFF FF       		jmp	xxx
 219 0243 FF250000 0000     		jmp	\*xxx
 220 0249 FF250000 0000     		jmp	xxx\(,1\)
.*Warning:.*
 221 024f FFE7              		jmp	\*%edi
 222 0251 FFE7              		jmp	%edi
.*Warning:.*
 223 0253 FF27              		jmp	\*\(%edi\)
 224 0255 FF27              		jmp	\(%edi\)
.*Warning:.*
 225 0257 FF2CBD00 000000   		ljmp	\*xxx\(,%edi,4\)
 226 025e FF2CBD00 000000   		ljmp	xxx\(,%edi,4\)
.*Warning:.*
 227 0265 FF2D0000 0000     		ljmp	\*xxx
 228 026b FF2D0000 0000     		ljmp	xxx\(,1\)
.*Warning:.*
 229 0271 EA000000 003412   		ljmp	\$0x1234,\$xxx
 230                       	
 231 0278 E886FEFF FF       		call	1b
 232 027d E8FCFFFF FF       		call	xxx
 233 0282 FF150000 0000     		call	\*xxx
 234 0288 FF150000 0000     		call	xxx\(,1\)
.*Warning:.*
 235 028e FFD7              		call	\*%edi
 236 0290 FFD7              		call	%edi
.*Warning:.*
 237 0292 FF17              		call	\*\(%edi\)
 238 0294 FF17              		call	\(%edi\)
.*Warning:.*
 239 0296 FF1CBD00 000000   		lcall	\*xxx\(,%edi,4\)
 240 029d FF1CBD00 000000   		lcall	xxx\(,%edi,4\)
.*Warning:.*
 241 02a4 FF1D0000 0000     		lcall	\*xxx
 242 02aa FF1D0000 0000     		lcall	xxx\(,1\)
.*Warning:.*
 243 02b0 9A000000 003412   		lcall	\$0x1234,\$xxx
 244                       	
 245                       		# Force a good alignment.
 246 02b7 00000000 00000000 		.p2align	4,0
 246      00
@


1.4
log
@Add jmp and call tests to prevent intel mode lossage creeping in again.
@
text
@d28 30
a57 10
.*:163: Warning:.*
.*:165: Warning:.*
.*:167: Warning:.*
.*:169: Warning:.*
.*:171: Warning:.*
.*:177: Warning:.*
.*:179: Warning:.*
.*:181: Warning:.*
.*:183: Warning:.*
.*:185: Warning:.*
d242 120
a361 43
 158                       	.code32
 159                       	.extern xxx
 160 0169 EB98              		jmp	1b
 161 016b E9FCFFFF FF       		jmp	xxx
 162 0170 FF250000 0000     		jmp	\*xxx
 163 0176 FF250000 0000     		jmp	xxx\(,1\)
.*Warning:.*
 164 017c FFE7              		jmp	\*%edi
 165 017e FFE7              		jmp	%edi
.*Warning:.*
 166 0180 FF27              		jmp	\*\(%edi\)
 167 0182 FF27              		jmp	\(%edi\)
.*Warning:.*
 168 0184 FF2CBD00 000000   		ljmp	\*xxx\(,%edi,4\)
 169 018b FF2CBD00 000000   		ljmp	xxx\(,%edi,4\)
.*Warning:.*
 170 0192 FF2D0000 0000     		ljmp	\*xxx
 171 0198 FF2D0000 0000     		ljmp	xxx\(,1\)
.*Warning:.*
 172 019e EA000000 003412   		ljmp	\$0x1234,\$xxx
 173                       	
 174 01a5 E859FFFF FF       		call	1b
 175 01aa E8FCFFFF FF       		call	xxx
 176 01af FF150000 0000     		call	\*xxx
 177 01b5 FF150000 0000     		call	xxx\(,1\)
.*Warning:.*
 178 01bb FFD7              		call	\*%edi
 179 01bd FFD7              		call	%edi
.*Warning:.*
 180 01bf FF17              		call	\*\(%edi\)
 181 01c1 FF17              		call	\(%edi\)
.*Warning:.*
 182 01c3 FF1CBD00 000000   		lcall	\*xxx\(,%edi,4\)
 183 01ca FF1CBD00 000000   		lcall	xxx\(,%edi,4\)
.*Warning:.*
 184 01d1 FF1D0000 0000     		lcall	\*xxx
 185 01d7 FF1D0000 0000     		lcall	xxx\(,1\)
.*Warning:.*
 186 01dd 9A000000 003412   		lcall	\$0x1234,\$xxx
 187                       	
 188                       		# Force a good alignment.
 189 01e4 00000000 00000000 		.p2align	4,0
 189      00000000 
@


1.3
log
@
*gas/config/tc-i386.c: Fix errors in displacement size when
automatically inferring an address prefex.
@
text
@d28 10
d222 43
a264 2
 158                       		# Force a good alignment.
 159 0169 00000000 000000[ 	]*.p2align	4,0
@


1.2
log
@	* gas/i386/float.s, gas/i386/float.l: Modify to work correctly
	when gas uses 2**4 alignment for .text.
	* gas/i386/general.s, gas/i386/general.l: Likewise.
	* gas/i386/katmai.s, gas/i386/katmai.d: Likewise.
	* gas/i386/modrm.s, gas/i386/modrm.l: Likewise.
	* gas/i386/prefix.s, gas/i386/prefix.d: Likewise.
@
text
@d203 11
a213 4
 150                       		# Force a good alignment.
 151 0145 00000000 00000000[ 	]*.p2align	4,0
 151      000000

@


1.1
log
@Initial revision
@
text
@d204 3
a206 2
 151 0145 0000              		.word	0
 152 0147 00                		.byte	0
@


1.1.1.1
log
@19990502 sourceware import
@
text
@@

