head	1.4;
access;
symbols
	binutils-2_24-branch:1.4.0.4
	binutils-2_24-branchpoint:1.4
	binutils-2_21_1:1.2
	binutils-2_23_2:1.4
	binutils-2_23_1:1.4
	binutils-2_23:1.4
	binutils-2_23-branch:1.4.0.2
	binutils-2_23-branchpoint:1.4
	binutils-2_22_branch:1.2.0.6
	binutils-2_22:1.2
	binutils-2_22-branch:1.2.0.4
	binutils-2_22-branchpoint:1.2
	binutils-2_21:1.2
	binutils-2_21-branch:1.2.0.2
	binutils-2_21-branchpoint:1.2
	binutils_latest_snapshot:1.4;
locks; strict;
comment	@# @;


1.4
date	2012.02.11.15.12.56;	author ktietz;	state Exp;
branches;
next	1.3;

1.3
date	2012.01.20.20.53.50;	author hjl;	state Exp;
branches;
next	1.2;

1.2
date	2010.10.18.05.50.30;	author ktietz;	state Exp;
branches;
next	1.1;

1.1
date	2010.10.14.13.31.13;	author hjl;	state Exp;
branches;
next	;


desc
@@


1.4
log
@        * gas/i386/disp32.d: Adjust lable-pattern.
@
text
@#as:
#objdump: -drw
#name: i386 32bit displacement

.*: +file format .*


Disassembly of section .text:

0+ <.*>:
[ 	]*[a-f0-9]+:	8b 18                	mov    \(%eax\),%ebx
[ 	]*[a-f0-9]+:	8b 58 03             	mov    0x3\(%eax\),%ebx
[ 	]*[a-f0-9]+:	8b 58 00             	mov    0x0\(%eax\),%ebx
[ 	]*[a-f0-9]+:	8b 58 03             	mov    0x3\(%eax\),%ebx
[ 	]*[a-f0-9]+:	8b 98 ff 0f 00 00    	mov    0xfff\(%eax\),%ebx
[ 	]*[a-f0-9]+:	8b 98 00 00 00 00    	mov    0x0\(%eax\),%ebx
[ 	]*[a-f0-9]+:	8b 98 03 00 00 00    	mov    0x3\(%eax\),%ebx
[ 	]*[a-f0-9]+:	eb 07                	jmp    26 <foo>
[ 	]*[a-f0-9]+:	eb 05                	jmp    26 <foo>
[ 	]*[a-f0-9]+:	e9 00 00 00 00       	jmp    26 <foo>

0+26 <foo>:
[ 	]*[a-f0-9]+:	89 18                	mov    %ebx,\(%eax\)
[ 	]*[a-f0-9]+:	89 58 03             	mov    %ebx,0x3\(%eax\)
[ 	]*[a-f0-9]+:	89 98 ff 0f 00 00    	mov    %ebx,0xfff\(%eax\)
[ 	]*[a-f0-9]+:	89 58 00             	mov    %ebx,0x0\(%eax\)
[ 	]*[a-f0-9]+:	89 58 03             	mov    %ebx,0x3\(%eax\)
[ 	]*[a-f0-9]+:	89 98 00 00 00 00    	mov    %ebx,0x0\(%eax\)
[ 	]*[a-f0-9]+:	89 98 03 00 00 00    	mov    %ebx,0x3\(%eax\)
#pass
@


1.3
log
@Add .d8 suffix support to x86 assembler

gas/

2012-01-20  H.J. Lu  <hongjiu.lu@@intel.com>

	* config/tc-i386.c (_i386_insn): Replace disp32_encoding with
	disp_encoding.
	(md_assemble): Updated.
	(output_branch): Likewise.
	(parse_insn): Support .d8 suffix.
	(build_modrm_byte): Fake zero displacement for .d8 and .d32
	suffixes.

	* doc/c-i386.texi: Document .d8 suffix.

gas/testsuite/

2012-01-20  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/disp32.s: Add tests for .d8 suffix.
	* gas/i386/x86-64-disp32.s: Likewise.

	* gas/i386/disp32.d: Updated.
	* gas/i386/x86-64-disp32.d: Likewise.
@
text
@d10 1
a10 1
0+ <foo-0x26>:
@


1.2
log
@2010-10-18  Kai Tietz  <kaI.tietz@@onevision.com>

        * gas/i386/disp32.d: Adjust initial symbol check.
        * gas/i386/x86-64-disp32.d: Likewise.
@
text
@d10 2
a11 1
0+ <.*>:
d13 4
d18 3
a20 2
[ 	]*[a-f0-9]+:	eb 05                	jmp    10 <foo>
[ 	]*[a-f0-9]+:	e9 00 00 00 00       	jmp    10 <foo>
d22 5
a26 1
0+10 <foo>:
d28 1
@


1.1
log
@Add .d32 encoding suffix.

gas/

2010-10-14  H.J. Lu  <hongjiu.lu@@intel.com>

	* config/tc-i386.c (_i386_insn): Add disp32_encoding.
	(md_assemble): Don't call optimize_disp if disp32_encoding is
	set.
	(parse_insn): Support .d32 to force 32bit displacement.
	(output_branch): Use BIG if disp32_encoding is set.

	* doc/c-i386.texi: Document .d32 encoding suffix.

gas/testsuite/

2010-10-14  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/disp32.d: New.
	* gas/i386/disp32.s: Likewise.
	* gas/i386/x86-64-disp32.d: Likewise.
	* gas/i386/x86-64-disp32.s: Likewise.

	* gas/i386/i386.exp: Run disp32 and x86-64-disp32.
@
text
@d10 1
a10 1
0+ <foo-0x10>:
@

