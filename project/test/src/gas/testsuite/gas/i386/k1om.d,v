head	1.2;
access;
symbols
	binutils-2_24-branch:1.2.0.4
	binutils-2_24-branchpoint:1.2
	binutils-2_23_2:1.2
	binutils-2_23_1:1.2
	binutils-2_23:1.2
	binutils-2_23-branch:1.2.0.2
	binutils-2_23-branchpoint:1.2
	binutils-2_22_branch:1.1.0.4
	binutils-2_22:1.1
	binutils-2_22-branch:1.1.0.2
	binutils-2_22-branchpoint:1.1
	binutils_latest_snapshot:1.2;
locks; strict;
comment	@# @;


1.2
date	2012.04.03.16.01.30;	author roland;	state Exp;
branches;
next	1.1;

1.1
date	2011.07.22.20.22.36;	author hjl;	state Exp;
branches;
next	;


desc
@@


1.2
log
@bfd/
2012-04-03  Roland McGrath  <mcgrathr@@google.com>

	* elf-nacl.c: New file.
	* elf-nacl.h: New file.
	* elf32-i386.c (elf_backend_modify_segment_map): Define for
	bfd_elf32_i386_nacl_vec.
	(elf_backend_modify_program_headers): Likewise.
	* elf64-x86-64.c (elf_backend_modify_segment_map): Define for
	bfd_elf64_x86_64_nacl_vec and bfd_elf32_x86_64_nacl_vec.
	(elf_backend_modify_program_headers): Likewise.
	* Makefile.am (BFD32_BACKENDS, BFD64_BACKENDS): Add elf-nacl.lo here.
	(BFD32_BACKENDS_CFILES, BFD64_BACKENDS_CFILES): Add elf-nacl.c here.
	* Makefile.in: Regenerated.
	* configure.in (bfd_elf64_x86_64_nacl_vec): Add elf-nacl.o to tb here.
	(bfd_elf32_x86_64_nacl_vec): Likewise.
	(bfd_elf64_x86_64_vec, bfd_elf32_x86_64_vec): Likewise.
	(bfd_elf64_x86_64_freebsd_vec, bfd_elf64_x86_64_sol2_vec): Likewise.
	(bfd_elf64_l1om_vec, bfd_elf64_l1om_freebsd_vec): Likewise.
	(bfd_elf64_k1om_vec, bfd_elf64_k1om_freebsd_vec): Likewise.
	(bfd_elf32_i386_nacl_vec): Likewise.
	(bfd_elf32_i386_sol2_vec, bfd_elf32_i386_freebsd_vec): Likewise.
	(bfd_elf32_i386_vxworks_vec, bfd_elf32_i386_vec): Likewise.
	* configure: Regenerated.

binutils/testsuite/
2012-04-03  Roland McGrath  <mcgrathr@@google.com>

	* lib/binutils-common.exp (is_elf_format): Consider *-*-nacl* to
	be ELF too.

	* binutils-all/elfedit-4.d: Add "#as: --64" option.

	* binutils-all/i386/i386.exp: Accept nacl targets too.
	* binutils-all/x86-64/x86-64.exp: Likewise.

gas/testsuite/
2012-04-03  Roland McGrath  <mcgrathr@@google.com>

	* gas/i386/k1om.d: Add not-target match for *-*-nacl*.
	* gas/i386/l1om.d: Likewise.

ld/
2012-04-03  Roland McGrath  <mcgrathr@@google.com>

	* configure.tgt (i[3-7]86-*-nacl*, x86_64-*-nacl*): Handle them.
	* emulparams/elf_nacl.sh: New file.
	* emulparams/elf_i386_nacl.sh: New file.
	* emulparams/elf32_x86_64_nacl.sh: New file.
	* emulparams/elf_x86_64_nacl.sh: New file.
	* Makefile.am (ALL_EMULATION_SOURCES): Add eelf_i386_nacl.c here.
	(ALL_64_EMULATION_SOURCES): Add eelf32_x86_64_nacl.c and
	eelf_x86_64_nacl.c here.
	(eelf_i386_nacl.c, eelf32_x86_64_nacl.c, eelf_x86_64_nacl.c):
	New targets.
	* Makefile.in: Regenerated.

	* scripttempl/elf.sc: Handle SEPARATE_CODE cases.

ld/testsuite/
2012-04-03  Roland McGrath  <mcgrathr@@google.com>

	* ld-x86-64/ilp32-4-nacl.d: New file.
	* ld-x86-64/x86-64.exp: Run it.

	* ld-discard/discard.exp: Accept nacl targets too.
	* ld-elf/binutils.exp: Likewise.
	* ld-elf/comm-data.exp: Likewise.
	* ld-elf/elf.exp: Likewise.
	* ld-elf/tls_common.exp: Likewise.
	* ld-elfvers/vers.exp: Likewise.
	* ld-elfvsb/elfvsb.exp: Likewise.
	* ld-elfweak/elfweak.exp: Likewise.
	* ld-gc/gc.exp: Likewise.
	* ld-ifunc/binutils.exp: Likewise.
	* ld-ifunc/ifunc.exp: Likewise.
	* ld-linkonce/linkonce.exp:Likewise.
	* ld-pie/pie.exp: Likewise.
	* ld-shared/shared.exp: Likewise.
	* ld-undefined/weak-undef.exp: Likewise.
	* ld-unique/unique.exp: Likewise.
	* ld-x86-64/dwarfreloc.exp: Likewise.
	* ld-x86-64/line.exp: Likewise.

	* lib/ld-lib.exp (slurp_options): Support global array
	options_regsub to apply substitutions to the contents
	of options lines read from the file.
	* ld-i386/emit-relocs.d: Renamed to ...
	* ld-i386/emit-relocs.rd: ... this.
	* ld-i386/i386.exp: Accept nacl targets too.
	For them, use options_regsub to replace elf_i386 with
	elf_i386_nacl in run_dump_test cases; apply the same
	substitution in $i386tests; replace foo.rd expectations
	files with foo-nacl.rd in $i386tests.
	(i386tests): Change emit-relocs.d to emit-relocs.rd here.
	* ld-i386/emit-relocs-nacl.rd: New file.
	* ld-i386/plt-nacl.pd: New file.
	* ld-i386/plt-pic-nacl.pd: New file.
	* ld-i386/tlsbin-nacl.rd: New file.
	* ld-i386/tlsbindesc-nacl.rd: New file.
	* ld-i386/tlsdesc-nacl.rd: New file.
	* ld-i386/tlsgdesc-nacl.rd: New file.
	* ld-i386/tlsnopic-nacl.rd: New file.
	* ld-i386/tlspic-nacl.rd: New file.
	* ld-x86-64/x86-64.exp: Accept nacl targets too.
	For them, use options_regsub to replace elf_x86_64 with
	elf_x86_64_nacl in run_dump_test cases; apply the same
	substitution in $x86_64tests; replace foo.rd expectations
	files with foo-nacl.rd in $x86_64tests.
	Add explicit -melf_x86_64 to ld options in tests that need it,
	in case the default emulation is x32 (as it is for x86_64-nacl).
	* ld/testsuite/ld-x86-64/plt-nacl.pd: New file.
	* ld/testsuite/ld-x86-64/split-by-file-nacl.rd: New file.
	* ld/testsuite/ld-x86-64/tlsbin-nacl.rd: New file.
	* ld/testsuite/ld-x86-64/tlsbindesc-nacl.rd: New file.
	* ld/testsuite/ld-x86-64/tlsdesc-nacl.pd: New file.
	* ld/testsuite/ld-x86-64/tlsdesc-nacl.rd: New file.
	* ld/testsuite/ld-x86-64/tlsgdesc-nacl.rd: New file.
	* ld/testsuite/ld-x86-64/tlspic-nacl.rd: New file.

	* ld-i386/hidden2.d: Loosen regexps to match any file format variant,
	and not to depend on exact addresses, displacements, etc. where
	they are irrelevant.
	* ld-i386/pcrel16.d: Likewise.
	* ld-i386/pcrel16abs.d: Likewise.
	* ld-i386/pr12718.d: Likewise.
	* ld-i386/pr12921.d: Likewise.
	* ld-i386/reloc.d: Likewise.
	* ld-i386/tlsbin.dd: Likewise.
	* ld-i386/tlsbin.sd: Likewise.
	* ld-i386/tlsbin.td: Likewise.
	* ld-i386/tlsbindesc.dd: Likewise.
	* ld-i386/tlsbindesc.sd: Likewise.
	* ld-i386/tlsbindesc.td: Likewise.
	* ld-i386/tlsdesc.dd: Likewise.
	* ld-i386/tlsdesc.sd: Likewise.
	* ld-i386/tlsdesc.td: Likewise.
	* ld-i386/tlsg.sd: Likewise.
	* ld-i386/tlsgdesc.dd: Likewise.
	* ld-i386/tlsindntpoff.dd: Likewise.
	* ld-i386/tlsnopic.dd: Likewise.
	* ld-i386/tlsnopic.sd: Likewise.
	* ld-i386/tlspic.dd: Likewise.
	* ld-i386/tlspic.sd: Likewise.
	* ld-i386/tlspic.td: Likewise.
	* ld-i386/tlspie2.d: Likewise.
	* ld-x86-64/hidden2.d: Likewise.
	* ld-x86-64/pcrel16.d: Likewise.
	* ld-x86-64/pr12718.d: Likewise.
	* ld-x86-64/pr12921.d: Likewise.
	* ld-x86-64/protected3.d: Likewise.
	* ld-x86-64/tlsbin.dd: Likewise.
	* ld-x86-64/tlsbin.sd: Likewise.
	* ld-x86-64/tlsbin.td: Likewise.
	* ld-x86-64/tlsbindesc.dd: Likewise.
	* ld-x86-64/tlsbindesc.sd: Likewise.
	* ld-x86-64/tlsbindesc.td: Likewise.
	* ld-x86-64/tlsdesc.dd: Likewise.
	* ld-x86-64/tlsdesc.sd: Likewise.
	* ld-x86-64/tlsdesc.td: Likewise.
	* ld-x86-64/tlsg.sd: Likewise.
	* ld-x86-64/tlsgd5.dd: Likewise.
	* ld-x86-64/tlsgd6.dd: Likewise.
	* ld-x86-64/tlsgdesc.dd: Likewise.
	* ld-x86-64/tlspic.dd: Likewise.
	* ld-x86-64/tlspic.sd: Likewise.
	* ld-x86-64/tlspic.td: Likewise.

	* ld-x86-64/ilp32-8.d: Match any file format variant.
	Use a -Ttext and adjust expected results, to handle variant layouts.
	* ld-x86-64/ilp32-9.d: Likewise.

	* ld-i386/alloc.t: Remove superfluous OUTPUT_FORMAT statement.
	* ld-i386/pr12627.t: Likewise.

	* ld-x86-64/abs-l1om.d: Add target: constraint.
	* ld-x86-64/protected2-l1om.d: Likewise.
	* ld-x86-64/protected3-l1om.d: Likewise.
	* ld-x86-64/ilp32-4.d: Likewise.

	* ld-x86-64/plt.s: New file.
	* ld-x86-64/pltlib.s: New file.
	* ld-x86-64/plt.pd: New file.
	* ld-x86-64/x86-64.exp (x86_64tests): Add them.

	* ld-i386/plt.s: New file.
	* ld-i386/pltlib.s: New file.
	* ld-i386/plt.pd: New file.
	* ld-i386/plt-pic.s: New file.
	* ld-i386/plt-pic.pd: New file.
	* ld-i386/i386.exp (i386tests): Add them.
@
text
@#source: x86_64.s
#as: -J -march=k1om
#objdump: -dw
#name: k1om
#not-target: *-*-nacl*

.*: +file format elf64-k1om.*

Disassembly of section .text:

0+ <.*>:
[ 	]*[a-f0-9]+:	01 ca                	add    %ecx,%edx
[ 	]*[a-f0-9]+:	44 01 ca             	add    %r9d,%edx
[ 	]*[a-f0-9]+:	41 01 ca             	add    %ecx,%r10d
[ 	]*[a-f0-9]+:	48 01 ca             	add    %rcx,%rdx
[ 	]*[a-f0-9]+:	4d 01 ca             	add    %r9,%r10
[ 	]*[a-f0-9]+:	41 01 c0             	add    %eax,%r8d
[ 	]*[a-f0-9]+:	66 41 01 c0          	add    %ax,%r8w
[ 	]*[a-f0-9]+:	49 01 c0             	add    %rax,%r8
[ 	]*[a-f0-9]+:	05 11 22 33 44       	add    \$0x44332211,%eax
[ 	]*[a-f0-9]+:	48 05 11 22 33 f4    	add    \$0xfffffffff4332211,%rax
[ 	]*[a-f0-9]+:	66 05 33 44          	add    \$0x4433,%ax
[ 	]*[a-f0-9]+:	48 05 11 22 33 44    	add    \$0x44332211,%rax
[ 	]*[a-f0-9]+:	00 ca                	add    %cl,%dl
[ 	]*[a-f0-9]+:	00 f7                	add    %dh,%bh
[ 	]*[a-f0-9]+:	40 00 f7             	add    %sil,%dil
[ 	]*[a-f0-9]+:	41 00 f7             	add    %sil,%r15b
[ 	]*[a-f0-9]+:	44 00 f7             	add    %r14b,%dil
[ 	]*[a-f0-9]+:	45 00 f7             	add    %r14b,%r15b
[ 	]*[a-f0-9]+:	50                   	push   %rax
[ 	]*[a-f0-9]+:	41 50                	push   %r8
[ 	]*[a-f0-9]+:	41 59                	pop    %r9
[ 	]*[a-f0-9]+:	04 11                	add    \$0x11,%al
[ 	]*[a-f0-9]+:	80 c4 11             	add    \$0x11,%ah
[ 	]*[a-f0-9]+:	40 80 c4 11          	add    \$0x11,%spl
[ 	]*[a-f0-9]+:	41 80 c0 11          	add    \$0x11,%r8b
[ 	]*[a-f0-9]+:	41 80 c4 11          	add    \$0x11,%r12b
[ 	]*[a-f0-9]+:	0f 20 c0             	mov    %cr0,%rax
[ 	]*[a-f0-9]+:	41 0f 20 c0          	mov    %cr0,%r8
[ 	]*[a-f0-9]+:	44 0f 20 c0          	mov    %cr8,%rax
[ 	]*[a-f0-9]+:	44 0f 22 c0          	mov    %rax,%cr8
[ 	]*[a-f0-9]+:	f3 48 a5             	rep movsq %ds:\(%rsi\),%es:\(%rdi\)
[ 	]*[a-f0-9]+:	66 f3 a5             	rep movsw %ds:\(%rsi\),%es:\(%rdi\)
[ 	]*[a-f0-9]+:	f3 48 a5             	rep movsq %ds:\(%rsi\),%es:\(%rdi\)
[ 	]*[a-f0-9]+:	b0 11                	mov    \$0x11,%al
[ 	]*[a-f0-9]+:	b4 11                	mov    \$0x11,%ah
[ 	]*[a-f0-9]+:	40 b4 11             	mov    \$0x11,%spl
[ 	]*[a-f0-9]+:	41 b4 11             	mov    \$0x11,%r12b
[ 	]*[a-f0-9]+:	b8 44 33 22 11       	mov    \$0x11223344,%eax
[ 	]*[a-f0-9]+:	41 b8 44 33 22 11    	mov    \$0x11223344,%r8d
[ 	]*[a-f0-9]+:	48 b8 88 77 66 55 44 33 22 11 	movabs \$0x1122334455667788,%rax
[ 	]*[a-f0-9]+:	49 b8 88 77 66 55 44 33 22 11 	movabs \$0x1122334455667788,%r8
[ 	]*[a-f0-9]+:	03 00                	add    \(%rax\),%eax
[ 	]*[a-f0-9]+:	41 03 00             	add    \(%r8\),%eax
[ 	]*[a-f0-9]+:	45 03 00             	add    \(%r8\),%r8d
[ 	]*[a-f0-9]+:	49 03 00             	add    \(%r8\),%rax
[ 	]*[a-f0-9]+:	03 05 22 22 22 22    	add    0x22222222\(%rip\),%eax        # 222222c7 <foo\+0x222220c4>
[ 	]*[a-f0-9]+:	03 45 00             	add    0x0\(%rbp\),%eax
[ 	]*[a-f0-9]+:	03 04 25 22 22 22 22 	add    0x22222222,%eax
[ 	]*[a-f0-9]+:	41 03 45 00          	add    0x0\(%r13\),%eax
[ 	]*[a-f0-9]+:	03 04 80             	add    \(%rax,%rax,4\),%eax
[ 	]*[a-f0-9]+:	41 03 04 80          	add    \(%r8,%rax,4\),%eax
[ 	]*[a-f0-9]+:	45 03 04 80          	add    \(%r8,%rax,4\),%r8d
[ 	]*[a-f0-9]+:	43 03 04 80          	add    \(%r8,%r8,4\),%eax
[ 	]*[a-f0-9]+:	46 01 04 81          	add    %r8d,\(%rcx,%r8,4\)
[ 	]*[a-f0-9]+:	03 14 c0             	add    \(%rax,%rax,8\),%edx
[ 	]*[a-f0-9]+:	03 14 c8             	add    \(%rax,%rcx,8\),%edx
[ 	]*[a-f0-9]+:	03 14 d0             	add    \(%rax,%rdx,8\),%edx
[ 	]*[a-f0-9]+:	03 14 d8             	add    \(%rax,%rbx,8\),%edx
[ 	]*[a-f0-9]+:	03 10                	add    \(%rax\),%edx
[ 	]*[a-f0-9]+:	03 14 e8             	add    \(%rax,%rbp,8\),%edx
[ 	]*[a-f0-9]+:	03 14 f0             	add    \(%rax,%rsi,8\),%edx
[ 	]*[a-f0-9]+:	03 14 f8             	add    \(%rax,%rdi,8\),%edx
[ 	]*[a-f0-9]+:	42 03 14 c0          	add    \(%rax,%r8,8\),%edx
[ 	]*[a-f0-9]+:	42 03 14 c8          	add    \(%rax,%r9,8\),%edx
[ 	]*[a-f0-9]+:	42 03 14 d0          	add    \(%rax,%r10,8\),%edx
[ 	]*[a-f0-9]+:	42 03 14 d8          	add    \(%rax,%r11,8\),%edx
[ 	]*[a-f0-9]+:	42 03 14 e0          	add    \(%rax,%r12,8\),%edx
[ 	]*[a-f0-9]+:	42 03 14 e8          	add    \(%rax,%r13,8\),%edx
[ 	]*[a-f0-9]+:	42 03 14 f0          	add    \(%rax,%r14,8\),%edx
[ 	]*[a-f0-9]+:	42 03 14 f8          	add    \(%rax,%r15,8\),%edx
[ 	]*[a-f0-9]+:	83 c1 11             	add    \$0x11,%ecx
[ 	]*[a-f0-9]+:	83 00 11             	addl   \$0x11,\(%rax\)
[ 	]*[a-f0-9]+:	48 83 00 11          	addq   \$0x11,\(%rax\)
[ 	]*[a-f0-9]+:	41 83 00 11          	addl   \$0x11,\(%r8\)
[ 	]*[a-f0-9]+:	83 04 81 11          	addl   \$0x11,\(%rcx,%rax,4\)
[ 	]*[a-f0-9]+:	41 83 04 81 11       	addl   \$0x11,\(%r9,%rax,4\)
[ 	]*[a-f0-9]+:	42 83 04 81 11       	addl   \$0x11,\(%rcx,%r8,4\)
[ 	]*[a-f0-9]+:	83 05 22 22 22 22 33 	addl   \$0x33,0x22222222\(%rip\)        # 22222342 <foo\+0x2222213f>
[ 	]*[a-f0-9]+:	48 83 05 22 22 22 22 33 	addq   \$0x33,0x22222222\(%rip\)        # 2222234a <foo\+0x22222147>
[ 	]*[a-f0-9]+:	81 05 22 22 22 22 33 33 33 33 	addl   \$0x33333333,0x22222222\(%rip\)        # 22222354 <foo\+0x22222151>
[ 	]*[a-f0-9]+:	48 81 05 22 22 22 22 33 33 33 33 	addq   \$0x33333333,0x22222222\(%rip\)        # 2222235f <foo\+0x2222215c>
[ 	]*[a-f0-9]+:	83 04 c5 22 22 22 22 33 	addl   \$0x33,0x22222222\(,%rax,8\)
[ 	]*[a-f0-9]+:	83 80 22 22 22 22 33 	addl   \$0x33,0x22222222\(%rax\)
[ 	]*[a-f0-9]+:	83 80 22 22 22 22 33 	addl   \$0x33,0x22222222\(%rax\)
[ 	]*[a-f0-9]+:	41 83 04 e8 33       	addl   \$0x33,\(%r8,%rbp,8\)
[ 	]*[a-f0-9]+:	83 04 25 22 22 22 22 33 	addl   \$0x33,0x22222222
[ 	]*[a-f0-9]+:	a0 11 22 33 44 55 66 77 88 	movabs 0x8877665544332211,%al
[ 	]*[a-f0-9]+:	a1 11 22 33 44 55 66 77 88 	movabs 0x8877665544332211,%eax
[ 	]*[a-f0-9]+:	a2 11 22 33 44 55 66 77 88 	movabs %al,0x8877665544332211
[ 	]*[a-f0-9]+:	a3 11 22 33 44 55 66 77 88 	movabs %eax,0x8877665544332211
[ 	]*[a-f0-9]+:	48 a1 11 22 33 44 55 66 77 88 	movabs 0x8877665544332211,%rax
[ 	]*[a-f0-9]+:	48 a3 11 22 33 44 55 66 77 88 	movabs %rax,0x8877665544332211
[ 	]*[a-f0-9]+:	48 99                	cqto   
[ 	]*[a-f0-9]+:	48 98                	cltq   
[ 	]*[a-f0-9]+:	48 63 c0             	movslq %eax,%rax
[ 	]*[a-f0-9]+:	48 0f bf c0          	movswq %ax,%rax
[ 	]*[a-f0-9]+:	48 0f be c0          	movsbq %al,%rax

0+1a7 <bar>:
[ 	]*[a-f0-9]+:	b0 00                	mov    \$0x0,%al
[ 	]*[a-f0-9]+:	66 b8 00 00          	mov    \$0x0,%ax
[ 	]*[a-f0-9]+:	b8 00 00 00 00       	mov    \$0x0,%eax
[ 	]*[a-f0-9]+:	48 c7 c0 00 00 00 00 	mov    \$0x0,%rax
[ 	]*[a-f0-9]+:	a1 00 00 00 00 00 00 00 00 	movabs 0x0,%eax
[ 	]*[a-f0-9]+:	8b 04 25 00 00 00 00 	mov    0x0,%eax
[ 	]*[a-f0-9]+:	8b 80 00 00 00 00    	mov    0x0\(%rax\),%eax
[ 	]*[a-f0-9]+:	8b 05 00 00 00 00    	mov    0x0\(%rip\),%eax        # 1d5 <bar\+0x2e>
[ 	]*[a-f0-9]+:	b0 00                	mov    \$0x0,%al
[ 	]*[a-f0-9]+:	66 b8 00 00          	mov    \$0x0,%ax
[ 	]*[a-f0-9]+:	b8 00 00 00 00       	mov    \$0x0,%eax
[ 	]*[a-f0-9]+:	48 c7 c0 00 00 00 00 	mov    \$0x0,%rax
[ 	]*[a-f0-9]+:	a1 00 00 00 00 00 00 00 00 	movabs 0x0,%eax
[ 	]*[a-f0-9]+:	8b 04 25 00 00 00 00 	mov    0x0,%eax
[ 	]*[a-f0-9]+:	8b 80 00 00 00 00    	mov    0x0\(%rax\),%eax
[ 	]*[a-f0-9]+:	8b 05 00 00 00 00    	mov    0x0\(%rip\),%eax        # 203 <foo>

0+203 <foo>:
[ 	]*[a-f0-9]+:	a0 11 22 33 44 55 66 77 88 	movabs 0x8877665544332211,%al
[ 	]*[a-f0-9]+:	66 a1 11 22 33 44 55 66 77 88 	movabs 0x8877665544332211,%ax
[ 	]*[a-f0-9]+:	a1 11 22 33 44 55 66 77 88 	movabs 0x8877665544332211,%eax
[ 	]*[a-f0-9]+:	48 a1 11 22 33 44 55 66 77 88 	movabs 0x8877665544332211,%rax
[ 	]*[a-f0-9]+:	a2 11 22 33 44 55 66 77 88 	movabs %al,0x8877665544332211
[ 	]*[a-f0-9]+:	66 a3 11 22 33 44 55 66 77 88 	movabs %ax,0x8877665544332211
[ 	]*[a-f0-9]+:	a3 11 22 33 44 55 66 77 88 	movabs %eax,0x8877665544332211
[ 	]*[a-f0-9]+:	48 a3 11 22 33 44 55 66 77 88 	movabs %rax,0x8877665544332211
[ 	]*[a-f0-9]+:	a0 11 22 33 44 55 66 77 88 	movabs 0x8877665544332211,%al
[ 	]*[a-f0-9]+:	66 a1 11 22 33 44 55 66 77 88 	movabs 0x8877665544332211,%ax
[ 	]*[a-f0-9]+:	a1 11 22 33 44 55 66 77 88 	movabs 0x8877665544332211,%eax
[ 	]*[a-f0-9]+:	48 a1 11 22 33 44 55 66 77 88 	movabs 0x8877665544332211,%rax
[ 	]*[a-f0-9]+:	a2 11 22 33 44 55 66 77 88 	movabs %al,0x8877665544332211
[ 	]*[a-f0-9]+:	66 a3 11 22 33 44 55 66 77 88 	movabs %ax,0x8877665544332211
[ 	]*[a-f0-9]+:	a3 11 22 33 44 55 66 77 88 	movabs %eax,0x8877665544332211
[ 	]*[a-f0-9]+:	48 a3 11 22 33 44 55 66 77 88 	movabs %rax,0x8877665544332211
[ 	]*[a-f0-9]+:	8a 04 25 11 22 33 ff 	mov    0xffffffffff332211,%al
[ 	]*[a-f0-9]+:	66 8b 04 25 11 22 33 ff 	mov    0xffffffffff332211,%ax
[ 	]*[a-f0-9]+:	8b 04 25 11 22 33 ff 	mov    0xffffffffff332211,%eax
[ 	]*[a-f0-9]+:	48 8b 04 25 11 22 33 ff 	mov    0xffffffffff332211,%rax
[ 	]*[a-f0-9]+:	88 04 25 11 22 33 ff 	mov    %al,0xffffffffff332211
[ 	]*[a-f0-9]+:	66 89 04 25 11 22 33 ff 	mov    %ax,0xffffffffff332211
[ 	]*[a-f0-9]+:	89 04 25 11 22 33 ff 	mov    %eax,0xffffffffff332211
[ 	]*[a-f0-9]+:	48 89 04 25 11 22 33 ff 	mov    %rax,0xffffffffff332211
[ 	]*[a-f0-9]+:	8a 04 25 11 22 33 ff 	mov    0xffffffffff332211,%al
[ 	]*[a-f0-9]+:	66 8b 04 25 11 22 33 ff 	mov    0xffffffffff332211,%ax
[ 	]*[a-f0-9]+:	8b 04 25 11 22 33 ff 	mov    0xffffffffff332211,%eax
[ 	]*[a-f0-9]+:	48 8b 04 25 11 22 33 ff 	mov    0xffffffffff332211,%rax
[ 	]*[a-f0-9]+:	88 04 25 11 22 33 ff 	mov    %al,0xffffffffff332211
[ 	]*[a-f0-9]+:	66 89 04 25 11 22 33 ff 	mov    %ax,0xffffffffff332211
[ 	]*[a-f0-9]+:	89 04 25 11 22 33 ff 	mov    %eax,0xffffffffff332211
[ 	]*[a-f0-9]+:	48 89 04 25 11 22 33 ff 	mov    %rax,0xffffffffff332211
[ 	]*[a-f0-9]+:	48 0f c7 08          	cmpxchg16b \(%rax\)
[ 	]*[a-f0-9]+:	48 0f c7 08          	cmpxchg16b \(%rax\)
[ 	]*[a-f0-9]+:	66 0f be f0          	movsbw %al,%si
[ 	]*[a-f0-9]+:	0f be f0             	movsbl %al,%esi
[ 	]*[a-f0-9]+:	48 0f be f0          	movsbq %al,%rsi
[ 	]*[a-f0-9]+:	0f bf f0             	movswl %ax,%esi
[ 	]*[a-f0-9]+:	48 0f bf f0          	movswq %ax,%rsi
[ 	]*[a-f0-9]+:	48 63 f0             	movslq %eax,%rsi
[ 	]*[a-f0-9]+:	0f be 10             	movsbl \(%rax\),%edx
[ 	]*[a-f0-9]+:	48 0f be 10          	movsbq \(%rax\),%rdx
[ 	]*[a-f0-9]+:	66 0f be 10          	movsbw \(%rax\),%dx
[ 	]*[a-f0-9]+:	0f be 10             	movsbl \(%rax\),%edx
[ 	]*[a-f0-9]+:	48 0f be 10          	movsbq \(%rax\),%rdx
[ 	]*[a-f0-9]+:	66 0f be 10          	movsbw \(%rax\),%dx
[ 	]*[a-f0-9]+:	0f bf 10             	movswl \(%rax\),%edx
[ 	]*[a-f0-9]+:	48 0f bf 10          	movswq \(%rax\),%rdx
[ 	]*[a-f0-9]+:	66 0f b6 f0          	movzbw %al,%si
[ 	]*[a-f0-9]+:	0f b6 f0             	movzbl %al,%esi
[ 	]*[a-f0-9]+:	48 0f b6 f0          	movzbq %al,%rsi
[ 	]*[a-f0-9]+:	0f b7 f0             	movzwl %ax,%esi
[ 	]*[a-f0-9]+:	48 0f b7 f0          	movzwq %ax,%rsi
[ 	]*[a-f0-9]+:	0f b6 10             	movzbl \(%rax\),%edx
[ 	]*[a-f0-9]+:	48 0f b6 10          	movzbq \(%rax\),%rdx
[ 	]*[a-f0-9]+:	66 0f b6 10          	movzbw \(%rax\),%dx
[ 	]*[a-f0-9]+:	0f b6 10             	movzbl \(%rax\),%edx
[ 	]*[a-f0-9]+:	48 0f b6 10          	movzbq \(%rax\),%rdx
[ 	]*[a-f0-9]+:	66 0f b6 10          	movzbw \(%rax\),%dx
[ 	]*[a-f0-9]+:	0f b6 10             	movzbl \(%rax\),%edx
[ 	]*[a-f0-9]+:	48 0f b6 10          	movzbq \(%rax\),%rdx
[ 	]*[a-f0-9]+:	66 0f b6 10          	movzbw \(%rax\),%dx
[ 	]*[a-f0-9]+:	0f b7 10             	movzwl \(%rax\),%edx
[ 	]*[a-f0-9]+:	48 0f b7 10          	movzwq \(%rax\),%rdx
[ 	]*[a-f0-9]+:	66 0f be f0          	movsbw %al,%si
[ 	]*[a-f0-9]+:	0f be f0             	movsbl %al,%esi
[ 	]*[a-f0-9]+:	48 0f be f0          	movsbq %al,%rsi
[ 	]*[a-f0-9]+:	0f bf f0             	movswl %ax,%esi
[ 	]*[a-f0-9]+:	48 0f bf f0          	movswq %ax,%rsi
[ 	]*[a-f0-9]+:	48 63 f0             	movslq %eax,%rsi
[ 	]*[a-f0-9]+:	0f be 10             	movsbl \(%rax\),%edx
[ 	]*[a-f0-9]+:	48 0f be 10          	movsbq \(%rax\),%rdx
[ 	]*[a-f0-9]+:	66 0f be 10          	movsbw \(%rax\),%dx
[ 	]*[a-f0-9]+:	0f bf 10             	movswl \(%rax\),%edx
[ 	]*[a-f0-9]+:	48 0f bf 10          	movswq \(%rax\),%rdx
[ 	]*[a-f0-9]+:	66 0f b6 f0          	movzbw %al,%si
[ 	]*[a-f0-9]+:	0f b6 f0             	movzbl %al,%esi
[ 	]*[a-f0-9]+:	48 0f b6 f0          	movzbq %al,%rsi
[ 	]*[a-f0-9]+:	0f b7 f0             	movzwl %ax,%esi
[ 	]*[a-f0-9]+:	48 0f b7 f0          	movzwq %ax,%rsi
[ 	]*[a-f0-9]+:	0f b6 10             	movzbl \(%rax\),%edx
[ 	]*[a-f0-9]+:	48 0f b6 10          	movzbq \(%rax\),%rdx
[ 	]*[a-f0-9]+:	66 0f b6 10          	movzbw \(%rax\),%dx
[ 	]*[a-f0-9]+:	0f b7 10             	movzwl \(%rax\),%edx
[ 	]*[a-f0-9]+:	48 0f b7 10          	movzwq \(%rax\),%rdx
[ 	]*[a-f0-9]+:	f3 0f 7e 0c 24       	movq   \(%rsp\),%xmm1
[ 	]*[a-f0-9]+:	f3 0f 7e 0c 24       	movq   \(%rsp\),%xmm1
[ 	]*[a-f0-9]+:	66 0f d6 0c 24       	movq   %xmm1,\(%rsp\)
[ 	]*[a-f0-9]+:	66 0f d6 0c 24       	movq   %xmm1,\(%rsp\)
[ 	]*[a-f0-9]+:	df e0                	fnstsw %ax
[ 	]*[a-f0-9]+:	df e0                	fnstsw %ax
[ 	]*[a-f0-9]+:	9b df e0             	fstsw  %ax
[ 	]*[a-f0-9]+:	9b df e0             	fstsw  %ax
[ 	]*[a-f0-9]+:	df e0                	fnstsw %ax
[ 	]*[a-f0-9]+:	df e0                	fnstsw %ax
[ 	]*[a-f0-9]+:	9b df e0             	fstsw  %ax
[ 	]*[a-f0-9]+:	9b df e0             	fstsw  %ax
[ 	]*[a-f0-9]+:	66 0f be 00          	movsbw \(%rax\),%ax
[ 	]*[a-f0-9]+:	0f be 00             	movsbl \(%rax\),%eax
[ 	]*[a-f0-9]+:	48 0f be 00          	movsbq \(%rax\),%rax
[ 	]*[a-f0-9]+:	66 0f be 10          	movsbw \(%rax\),%dx
[ 	]*[a-f0-9]+:	0f be 10             	movsbl \(%rax\),%edx
[ 	]*[a-f0-9]+:	48 0f be 10          	movsbq \(%rax\),%rdx
[ 	]*[a-f0-9]+:	0f bf 10             	movswl \(%rax\),%edx
[ 	]*[a-f0-9]+:	48 0f bf 10          	movswq \(%rax\),%rdx
[ 	]*[a-f0-9]+:	48 63 10             	movslq \(%rax\),%rdx
[ 	]*[a-f0-9]+:	48 63 00             	movslq \(%rax\),%rax
[ 	]*[a-f0-9]+:	66 0f b6 00          	movzbw \(%rax\),%ax
[ 	]*[a-f0-9]+:	0f b6 00             	movzbl \(%rax\),%eax
[ 	]*[a-f0-9]+:	48 0f b6 00          	movzbq \(%rax\),%rax
[ 	]*[a-f0-9]+:	66 0f b6 10          	movzbw \(%rax\),%dx
[ 	]*[a-f0-9]+:	0f b6 10             	movzbl \(%rax\),%edx
[ 	]*[a-f0-9]+:	48 0f b6 10          	movzbq \(%rax\),%rdx
[ 	]*[a-f0-9]+:	0f b7 10             	movzwl \(%rax\),%edx
[ 	]*[a-f0-9]+:	48 0f b7 10          	movzwq \(%rax\),%rdx
[ 	]*[a-f0-9]+:	0f c3 00             	movnti %eax,\(%rax\)
[ 	]*[a-f0-9]+:	0f c3 00             	movnti %eax,\(%rax\)
[ 	]*[a-f0-9]+:	48 0f c3 00          	movnti %rax,\(%rax\)
[ 	]*[a-f0-9]+:	48 0f c3 00          	movnti %rax,\(%rax\)
[ 	]*[a-f0-9]+:	66 0f be 00          	movsbw \(%rax\),%ax
[ 	]*[a-f0-9]+:	0f be 00             	movsbl \(%rax\),%eax
[ 	]*[a-f0-9]+:	0f bf 00             	movswl \(%rax\),%eax
[ 	]*[a-f0-9]+:	48 0f bf 00          	movswq \(%rax\),%rax
[ 	]*[a-f0-9]+:	48 63 00             	movslq \(%rax\),%rax
[ 	]*[a-f0-9]+:	48 63 00             	movslq \(%rax\),%rax
[ 	]*[a-f0-9]+:	66 0f b6 00          	movzbw \(%rax\),%ax
[ 	]*[a-f0-9]+:	0f b6 00             	movzbl \(%rax\),%eax
[ 	]*[a-f0-9]+:	0f b7 00             	movzwl \(%rax\),%eax
[ 	]*[a-f0-9]+:	48 0f b7 00          	movzwq \(%rax\),%rax
[ 	]*[a-f0-9]+:	0f c3 00             	movnti %eax,\(%rax\)
[ 	]*[a-f0-9]+:	48 0f c3 00          	movnti %rax,\(%rax\)
#pass
@


1.1
log
@Add initial Intel K1OM support.

bfd/

2011-07-22  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.am (ALL_MACHINES): Add cpu-k1om.lo.
	(ALL_MACHINES_CFILES): Add cpu-k1om.c.
	* Makefile.in: Regenerated.

	* archures.c (bfd_architecture): Add bfd_arch_k1om.
	(bfd_k1om_arch): New.
	(bfd_archures_list): Add &bfd_k1om_arch.
	* bfd-in2.h: Regenerated.

	* config.bfd (targ64_selvecs): Add bfd_elf64_k1om_vec if
	bfd_elf64_x86_64_vec is supported.  Add bfd_elf64_k1om_freebsd_vec
	if bfd_elf64_x86_64_freebsd_vec is supported.
	(targ_selvecs): Likewise.

	* configure.in: Support bfd_elf64_k1om_vec and
	bfd_elf64_k1om_freebsd_vec.
	* configure: Regenerated.

	* cpu-k1om.c: New.

	* elf64-x86-64.c (elf64_k1om_elf_object_p): New.
	(bfd_elf64_k1om_vec): Likewise.
	(bfd_elf64_k1om_freebsd_vec): Likewise.

	* targets.c (bfd_elf64_k1om_vec): New.
	(bfd_elf64_k1om_freebsd_vec): Likewise.
	(_bfd_target_vector): Add bfd_elf64_k1om_vec and
	bfd_elf64_k1om_freebsd_vec.

binutils/

2011-07-22  H.J. Lu  <hongjiu.lu@@intel.com>

	* dwarf.c (init_dwarf_regnames): Handle EM_K1OM.

	* elfedit.c (elf_machine): Support EM_K1OM.
	(elf_class): Likewise.

	* readelf.c (guess_is_rela): Handle EM_K1OM.
	(dump_relocations): Likewise.
	(get_machine_name): Likewise.
	(get_section_type_name): Likewise.
	(get_elf_section_flags): Likewise.
	(process_section_headers): Likewise.
	(get_symbol_index_type): Likewise.
	(is_32bit_abs_reloc): Likewise.
	(is_32bit_pcrel_reloc): Likewise.
	(is_64bit_abs_reloc): Likewise.
	(is_64bit_pcrel_reloc): Likewise.
	(is_none_reloc): Likewise.

	* doc/binutils.texi: Mention K1OM for elfedit.

binutils/testsuite/

2011-07-22  H.J. Lu  <hongjiu.lu@@intel.com>

	* binutils-all/elfedit.exp: Run elfedit-4.

	* binutils-all/elfedit-4.d: New.

gas/

2011-07-22  H.J. Lu  <hongjiu.lu@@intel.com>

	* config/tc-i386.c (cpu_arch): Add k1om.
	(i386_align_code): Handle PROCESSOR_K1OM.
	(check_cpu_arch_compatible): Check EM_K1OM.
	(i386_arch): Handle Intel K1OM.
	(i386_mach): Return bfd_mach_k1om for Intel K1OM.
	(i386_target_format): Return ELF_TARGET_K1OM_FORMAT for Intel
	K1OM.

	* config/tc-i386.h (ELF_TARGET_K1OM_FORMAT): New.
	(processor_type): Add PROCESSOR_K1OM.

	* doc/c-i386.texi: Document k1om.

gas/testsuite/

2011-07-22  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/k1om.d: New.
	* gas/i386/k1om-inval.l: Likewise.
	* gas/i386/k1om-inval.s: Likewise.

	* gas/i386/i386.exp: Run k1om-inval and k1om.

include/elf/

2011-07-22  H.J. Lu  <hongjiu.lu@@intel.com>

	* common.h (EM_K1OM): New.

ld/

2011-07-22  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.am (ALL_64_EMULATIONS): Add eelf_k1om.o and
	eelf_k1om_fbsd.o
	(eelf_k1om.c): New.
	(eelf_k1om_fbsd.c): Likewise.
	* Makefile.in: Regenerated.

	* configure.tgt (targ64_extra_emuls): Add elf_k1om if elf_x86_64
	is supported.  Add elf_k1om_fbsd if elf_x86_64_fbsd is supported.
	(targ_extra_emuls): Likewise.

	* emulparams/elf_k1om.sh: New.
	* emulparams/elf_k1om_fbsd.sh: Likewise.

ld/testsuite/

2011-07-22  H.J. Lu  <hongjiu.lu@@intel.com>

	* ld-x86-64/abs-k1om.d: New.
	* ld-x86-64/protected2-k1om.d: Likewise.
	* ld-x86-64/protected3-k1om.d: Likewise.

	* ld-x86-64/x86-64.exp: Run abs-k1om, protected2-k1om and
	protected3-k1om.

opcodes/

2011-07-22  H.J. Lu  <hongjiu.lu@@intel.com>

	* configure.in: Handle bfd_k1om_arch.
	* configure: Regenerated.

	* disassemble.c (disassembler): Handle bfd_k1om_arch.

	* i386-dis.c (print_insn): Handle bfd_mach_k1om and
	bfd_mach_k1om_intel_syntax.

	* i386-gen.c (cpu_flag_init): Set CPU_UNKNOWN_FLAGS to
	~(CpuL1OM|CpuK1OM).  Add CPU_K1OM_FLAGS.
	(cpu_flags): Add CpuK1OM.

	* i386-opc.h (CpuK1OM): New.
	(i386_cpu_flags): Add cpuk1om.

	* i386-init.h: Regenerated.
	* i386-tbl.h: Likewise.
@
text
@d5 1
@

