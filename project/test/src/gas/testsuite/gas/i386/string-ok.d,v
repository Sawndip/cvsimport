head	1.2;
access;
symbols
	binutils-2_24-branch:1.2.0.10
	binutils-2_24-branchpoint:1.2
	binutils-2_21_1:1.2
	binutils-2_23_2:1.2
	binutils-2_23_1:1.2
	binutils-2_23:1.2
	binutils-2_23-branch:1.2.0.8
	binutils-2_23-branchpoint:1.2
	binutils-2_22_branch:1.2.0.6
	binutils-2_22:1.2
	binutils-2_22-branch:1.2.0.4
	binutils-2_22-branchpoint:1.2
	binutils-2_21:1.2
	binutils-2_21-branch:1.2.0.2
	binutils-2_21-branchpoint:1.2
	binutils-2_20_1:1.1
	binutils-2_20:1.1
	binutils-arc-20081103-branch:1.1.0.10
	binutils-arc-20081103-branchpoint:1.1
	binutils-2_20-branch:1.1.0.8
	binutils-2_20-branchpoint:1.1
	dje-cgen-play1-branch:1.1.0.6
	dje-cgen-play1-branchpoint:1.1
	arc-20081103-branch:1.1.0.4
	arc-20081103-branchpoint:1.1
	binutils-2_19_1:1.1
	binutils-2_19:1.1
	binutils-2_19-branch:1.1.0.2
	binutils-2_19-branchpoint:1.1
	binutils_latest_snapshot:1.2;
locks; strict;
comment	@# @;


1.2
date	2009.11.13.20.42.09;	author hjl;	state Exp;
branches;
next	1.1;

1.1
date	2008.08.28.09.42.11;	author jbeulich;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Rewrite prefix processing.

gas/testsuite/

2009-11-13  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/i386.exp: Run long-1, long-1-intel, x86-64-long-1,
	and x86-64-long-1-intel.

	* gas/i386/long-1-intel.d: New.
	* gas/i386/long-1.d: Likewise.
	* gas/i386/long-1.s: Likewise.
	* gas/i386/x86-64-long-1-intel.d: Likewise.
	* gas/i386/x86-64-long-1.d: Likewise.
	* gas/i386/x86-64-long-1.s: Likewise.

	* gas/i386/jump16.d: Updated for prefix processing.
	* gas/i386/naked.d: Likewise.
	* gas/i386/nops-1-core2.d: Likewise.
	* gas/i386/nops-1-i686.d: Likewise.
	* gas/i386/nops-3-i686.d: Likewise.
	* gas/i386/nops-4-i686.d: Likewise.
	* gas/i386/nops-5-i686.d: Likewise.
	* gas/i386/nops-5.d: Likewise.
	* gas/i386/prefix.d: Likewise.
	* gas/i386/rep.d: Likewise.
	* gas/i386/string-ok.d: Likewise.
	* gas/i386/x86-64-addr32-intel.d: Likewise.
	* gas/i386/x86-64-addr32.d: Likewise.
	* gas/i386/x86-64-cbw-intel.d: Likewise.
	* gas/i386/x86-64-cbw.d: Likewise.
	* gas/i386/x86-64-io-intel.d: Likewise.
	* gas/i386/x86-64-io-suffix.d: Likewise.
	* gas/i386/x86-64-io.d: Likewise.
	* gas/i386/x86-64-lwp.d: Likewise.
	* gas/i386/x86-64-nops-1-core2.d: Likewise.
	* gas/i386/x86-64-nops-1-nocona.d: Likewise.
	* gas/i386/x86-64-nops-1.d: Likewise.
	* gas/i386/x86-64-nops-2.d: Likewise.
	* gas/i386/x86-64-nops-3.d: Likewise.
	* gas/i386/x86-64-nops-4-core2.d: Likewise.
	* gas/i386/x86-64-nops-4.d: Likewise.
	* gas/i386/x86-64-nops-5-k8.d: Likewise.
	* gas/i386/x86-64-nops-5.d: Likewise.
	* gas/i386/x86-64-rep.d: Likewise.
	* gas/i386/x86-64-stack-intel.d: Likewise.
	* gas/i386/x86-64-stack-suffix.d: Likewise.
	* gas/i386/x86-64-stack.d: Likewise.

ld/testsuite/

2009-11-13  H.J. Lu  <hongjiu.lu@@intel.com>

	* ld-x86-64/tlsbin.dd: Updated for prefix processing.
	* ld-x86-64/tlsgdesc.dd: Likewise.
	* ld-x86-64/tlsld1.dd: Likewise.
	* ld-x86-64/tlspic.dd: Likewise.

opcodes/

2009-11-13  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386-dis.c (ckprefix): Updated to return 0 if number of
	prefixes > 14 and record the last position for each prefix.
	(lock_prefix): Removed.
	(data_prefix): Likewise.
	(addr_prefix): Likewise.
	(repz_prefix): Likewise.
	(repnz_prefix): Likewise.
	(last_lock_prefix): New.
	(last_repz_prefix): Likewise.
	(last_repnz_prefix): Likewise.
	(last_data_prefix): Likewise.
	(last_addr_prefix): Likewise.
	(last_rex_prefix): Likewise.
	(last_seg_prefix): Likewise.
	(MAX_CODE_LENGTH): Likewise.
	(ADDR16_PREFIX): Likewise.
	(ADDR32_PREFIX): Likewise.
	(DATA16_PREFIX): Likewise.
	(DATA32_PREFIX): Likewise.
	(REP_PREFIX): Likewise.
	(seg_prefix): Likewise.
	(all_prefixes): Change size to MAX_CODE_LENGTH - 1.
	(prefix_name): Handle ADDR16_PREFIX, ADDR32_PREFIX,
	DATA16_PREFIX, DATA32_PREFIX and REP_PREFIX.
	(get_valid_dis386): Updated.
	(OP_C): Likewise.
	(OP_Monitor): Likewise.
	(REP_Fixup): Likewise.
	(print_insn): Display all prefixes.
	(putop): Set PREFIX_DATA on used_prefixes only if it is used.
	(intel_operand_size): Likewise.
	(OP_E_register): Likewise.
	(OP_G): Likewise.
	(OP_REG): Likewise.
	(OP_IMREG): Likewise.
	(OP_I): Likewise.
	(OP_I64): Likewise.
	(OP_sI): Likewise.
	(CRC32_Fixup): Likewise.
	(MOVBE_Fixup): Likewise.
	(OP_E_memory): Set REFIX_DATA on used_prefixes when it is used
	in 16bit mode.
	(OP_J): Set REX_W used if it is used. Set PREFIX_DATA on
	used_prefixes only if it is used.
@
text
@#as: -J
#objdump: -dw -mi386
#name: string insn operands
#stderr: string-ok.e
.*: +file format .*

Disassembly of section .text:

0+ <.*start32>:
[ 	]+[0-9a-f]+:	2e a6[ 	]+cmpsb  (%es:)?\(%edi\),%cs:\(%esi\)
[ 	]+[0-9a-f]+:	a6[ 	]+cmpsb  (%es:)?\(%edi\),(%ds:)?\(%esi\)
[ 	]+[0-9a-f]+:	67 a6[ 	]+cmpsb  (%es:)?\(%di\),(%ds:)?\(%si\)
[ 	]+[0-9a-f]+:	a6[ 	]+cmpsb  (%es:)?\(%edi\),(%ds:)?\(%esi\)
[ 	]+[0-9a-f]+:	6c[ 	]+insb   \(%dx\),(%es:)?\(%edi\)
[ 	]+[0-9a-f]+:	6c[ 	]+insb   \(%dx\),(%es:)?\(%edi\)
[ 	]+[0-9a-f]+:	2e ac[ 	]+lods   %cs:\(%esi\),%al
[ 	]+[0-9a-f]+:	ac[ 	]+lods   (%ds:)?\(%esi\),%al
[ 	]+[0-9a-f]+:	2e a4[ 	]+movsb  %cs:\(%esi\),(%es:)?\(%edi\)
[ 	]+[0-9a-f]+:	a4[ 	]+movsb  (%ds:)?\(%esi\),(%es:)?\(%edi\)
[ 	]+[0-9a-f]+:	67 a4[ 	]+movsb  (%ds:)?\(%si\),(%es:)?\(%di\)
[ 	]+[0-9a-f]+:	a4[ 	]+movsb  (%ds:)?\(%esi\),(%es:)?\(%edi\)
[ 	]+[0-9a-f]+:	a4[ 	]+movsb  (%ds:)?\(%esi\),(%es:)?\(%edi\)
[ 	]+[0-9a-f]+:	2e 6e[ 	]+outsb  %cs:\(%esi\),\(%dx\)
[ 	]+[0-9a-f]+:	6e[ 	]+outsb  (%ds:)?\(%esi\),\(%dx\)
[ 	]+[0-9a-f]+:	ae[ 	]+scas   (%es:)?\(%edi\),%al
[ 	]+[0-9a-f]+:	ae[ 	]+scas   (%es:)?\(%edi\),%al
[ 	]+[0-9a-f]+:	aa[ 	]+stos   %al,(%es:)?\(%edi\)
[ 	]+[0-9a-f]+:	aa[ 	]+stos   %al,(%es:)?\(%edi\)
[ 	]+[0-9a-f]+:	2e d7[ 	]+xlat   %cs:\(%ebx\)
[ 	]+[0-9a-f]+:	d7[ 	]+xlat   (%ds:)?\(%ebx\)
[ 	]+[0-9a-f]+:	d7[ 	]+xlat   (%ds:)?\(%ebx\)
[ 	]+[0-9a-f]+:	d7[ 	]+xlat   (%ds:)?\(%ebx\)
[ 	]+[0-9a-f]+:	d7[ 	]+xlat   (%ds:)?\(%ebx\)
[ 	]+[0-9a-f]+:	d7[ 	]+xlat   (%ds:)?\(%ebx\)

[0-9a-f]+ <.*start16>:
[ 	]+[0-9a-f]+:	a6[ 	]+cmpsb  (%es:)?\(%edi\),(%ds:)?\(%esi\)
[ 	]+[0-9a-f]+:	67 a4[ 	]+movsb  (%ds:)?\(%si\),(%es:)?\(%di\)

[0-9a-f]+ <.*start64>:
[ 	]+[0-9a-f]+:	a6[ 	]+cmpsb  (%es:)?\(%edi\),(%ds:)?\(%esi\)
[ 	]+[0-9a-f]+:	67 a4[ 	]+movsb  (%ds:)?\(%si\),(%es:)?\(%di\)

[0-9a-f]+ <.*intel32>:
[ 	]+[0-9a-f]+:	2e a6[ 	]+cmpsb  (%es:)?\(%edi\),%cs:\(%esi\)
[ 	]+[0-9a-f]+:	a6[ 	]+cmpsb  (%es:)?\(%edi\),(%ds:)?\(%esi\)
[ 	]+[0-9a-f]+:	a6[ 	]+cmpsb  (%es:)?\(%edi\),(%ds:)?\(%esi\)
[ 	]+[0-9a-f]+:	67 a6[ 	]+cmpsb  (%es:)?\(%di\),(%ds:)?\(%si\)
[ 	]+[0-9a-f]+:	a6[ 	]+cmpsb  (%es:)?\(%edi\),(%ds:)?\(%esi\)
[ 	]+[0-9a-f]+:	6c[ 	]+insb   \(%dx\),(%es:)?\(%edi\)
[ 	]+[0-9a-f]+:	6c[ 	]+insb   \(%dx\),(%es:)?\(%edi\)
[ 	]+[0-9a-f]+:	2e ac[ 	]+lods   %cs:\(%esi\),%al
[ 	]+[0-9a-f]+:	ac[ 	]+lods   (%ds:)?\(%esi\),%al
[ 	]+[0-9a-f]+:	2e a4[ 	]+movsb  %cs:\(%esi\),(%es:)?\(%edi\)
[ 	]+[0-9a-f]+:	a4[ 	]+movsb  (%ds:)?\(%esi\),(%es:)?\(%edi\)
[ 	]+[0-9a-f]+:	a4[ 	]+movsb  (%ds:)?\(%esi\),(%es:)?\(%edi\)
[ 	]+[0-9a-f]+:	67 a4[ 	]+movsb  (%ds:)?\(%si\),(%es:)?\(%di\)
[ 	]+[0-9a-f]+:	a4[ 	]+movsb  (%ds:)?\(%esi\),(%es:)?\(%edi\)
[ 	]+[0-9a-f]+:	a4[ 	]+movsb  (%ds:)?\(%esi\),(%es:)?\(%edi\)
[ 	]+[0-9a-f]+:	2e 6e[ 	]+outsb  %cs:\(%esi\),\(%dx\)
[ 	]+[0-9a-f]+:	6e[ 	]+outsb  (%ds:)?\(%esi\),\(%dx\)
[ 	]+[0-9a-f]+:	ae[ 	]+scas   (%es:)?\(%edi\),%al
[ 	]+[0-9a-f]+:	ae[ 	]+scas   (%es:)?\(%edi\),%al
[ 	]+[0-9a-f]+:	aa[ 	]+stos   %al,(%es:)?\(%edi\)
[ 	]+[0-9a-f]+:	aa[ 	]+stos   %al,(%es:)?\(%edi\)
[ 	]+[0-9a-f]+:	2e d7[ 	]+xlat   %cs:\(%ebx\)
[ 	]+[0-9a-f]+:	d7[ 	]+xlat   (%ds:)?\(%ebx\)
[ 	]+[0-9a-f]+:	d7[ 	]+xlat   (%ds:)?\(%ebx\)
[ 	]+[0-9a-f]+:	d7[ 	]+xlat   (%ds:)?\(%ebx\)
[ 	]+[0-9a-f]+:	d7[ 	]+xlat   (%ds:)?\(%ebx\)
[ 	]+[0-9a-f]+:	d7[ 	]+xlat   (%ds:)?\(%ebx\)

[0-9a-f]+ <.*intel16>:
[ 	]+[0-9a-f]+:	a6[ 	]+cmpsb  (%es:)?\(%edi\),(%ds:)?\(%esi\)
[ 	]+[0-9a-f]+:	67 a4[ 	]+movsb  (%ds:)?\(%si\),(%es:)?\(%di\)

[0-9a-f]+ <.*intel64>:
[ 	]+[0-9a-f]+:	a6[ 	]+cmpsb  (%es:)?\(%edi\),(%ds:)?\(%esi\)
[ 	]+[0-9a-f]+:	67 a4[ 	]+movsb  (%ds:)?\(%si\),(%es:)?\(%di\)
#pass
@


1.1
log
@gas/
2008-08-28  Jan Beulich  <jbeulich@@novell.com>

	* config/tc-i386.c (md_assemble): Force number of displacement
	operands to zero when processing string instruction.
	(i386_index_check): Special-case string instruction operands. Don't
	fudge address prefix if there already was a memory operand. Fix
	error message to correctly reflect the addressing mode used.
	(i386_att_operand): Fix comment.
	(i386_intel_operand): Snapshot, clear, and restore base and index
	reg for each operand processed. Increment count of memory operands
	later.

gas/testsuite/
2008-08-28  Jan Beulich  <jbeulich@@novell.com>

	* gas/i386/string-bad.{l,s}, gas/i386/string-ok.{d,e,s}: New.
	* gas/i386/i386.exp: Run new tests.
@
text
@d12 1
a12 1
[ 	]+[0-9a-f]+:	67 a6[ 	]+(addr16 )?cmpsb (%es:)?\(%di\),(%ds:)?\(%si\)
d20 1
a20 1
[ 	]+[0-9a-f]+:	67 a4[ 	]+(addr16 )?movsb (%ds:)?\(%si\),(%es:)?\(%di\)
d38 1
a38 1
[ 	]+[0-9a-f]+:	67 a4[ 	]+(addr16 )?movsb (%ds:)?\(%si\),(%es:)?\(%di\)
d42 1
a42 1
[ 	]+[0-9a-f]+:	67 a4[ 	]+(addr16 )?movsb (%ds:)?\(%si\),(%es:)?\(%di\)
d48 1
a48 1
[ 	]+[0-9a-f]+:	67 a6[ 	]+(addr16 )?cmpsb (%es:)?\(%di\),(%ds:)?\(%si\)
d57 1
a57 1
[ 	]+[0-9a-f]+:	67 a4[ 	]+(addr16 )?movsb (%ds:)?\(%si\),(%es:)?\(%di\)
d75 1
a75 1
[ 	]+[0-9a-f]+:	67 a4[ 	]+(addr16 )?movsb (%ds:)?\(%si\),(%es:)?\(%di\)
d79 1
a79 1
[ 	]+[0-9a-f]+:	67 a4[ 	]+(addr16 )?movsb (%ds:)?\(%si\),(%es:)?\(%di\)
@

