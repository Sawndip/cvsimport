head	1.2;
access;
symbols
	binutils-2_24-branch:1.1.0.2
	binutils-2_24-branchpoint:1.1
	binutils_latest_snapshot:1.2;
locks; strict;
comment	@# @;


1.2
date	2013.10.12.15.57.07;	author hjl;	state Exp;
branches;
next	1.1;

1.1
date	2013.07.24.15.47.24;	author hjl;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2013.10.12.17.11.40;	author hjl;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Only allow 32-bit/64-bit registers for bndcl/bndcu/bndcn

gas/testsuite/

	* gas/i386/mpx.s: Remove bndcl/bndcu/bndcn tests with AX.
	* gas/i386/x86-64-mpx.s: Likwise.

	* gas/i386/mpx.d: Updated.
	* gas/i386/x86-64-mpx.d: Likewise.

opcodes/

	* i386-dis.c (intel_operand_size): Move v_bnd_mode alongside the
	default case.
	(OP_E_register): Move v_bnd_mode alongside m_mode.
	* i386-opc.tbl (bndcl, bndcu, bndcn): Split 32- and 64-bit variants.
	Drop Reg16 and Disp16. Add NoRex64.
	(bndmk, bndmov, bndldx, bndstx): Drop Disp16.
	* i386-tbl.h: Re-generate.
@
text
@#objdump: -drw
#name: i386 MPX

.*: +file format .*


Disassembly of section .text:

0+ <start>:
[ 	]*[a-f0-9]+:	f3 0f 1b 08          	bndmk  \(%eax\),%bnd1
[ 	]*[a-f0-9]+:	f3 0f 1b 0d 99 03 00 00 	bndmk  0x399,%bnd1
[ 	]*[a-f0-9]+:	f3 0f 1b 4a 03       	bndmk  0x3\(%edx\),%bnd1
[ 	]*[a-f0-9]+:	f3 0f 1b 0c 08       	bndmk  \(%eax,%ecx,1\),%bnd1
[ 	]*[a-f0-9]+:	f3 0f 1b 0c 0d 00 00 00 00 	bndmk  0x0\(,%ecx,1\),%bnd1
[ 	]*[a-f0-9]+:	f3 0f 1b 4c 01 03    	bndmk  0x3\(%ecx,%eax,1\),%bnd1
[ 	]*[a-f0-9]+:	66 0f 1a 08          	bndmov \(%eax\),%bnd1
[ 	]*[a-f0-9]+:	66 0f 1a 0d 99 03 00 00 	bndmov 0x399,%bnd1
[ 	]*[a-f0-9]+:	66 0f 1a 52 03       	bndmov 0x3\(%edx\),%bnd2
[ 	]*[a-f0-9]+:	66 0f 1a 14 10       	bndmov \(%eax,%edx,1\),%bnd2
[ 	]*[a-f0-9]+:	66 0f 1a 14 05 00 00 00 00 	bndmov 0x0\(,%eax,1\),%bnd2
[ 	]*[a-f0-9]+:	66 0f 1a 4c 01 03    	bndmov 0x3\(%ecx,%eax,1\),%bnd1
[ 	]*[a-f0-9]+:	66 0f 1a c2          	bndmov %bnd2,%bnd0
[ 	]*[a-f0-9]+:	66 0f 1b 08          	bndmov %bnd1,\(%eax\)
[ 	]*[a-f0-9]+:	66 0f 1b 0d 99 03 00 00 	bndmov %bnd1,0x399
[ 	]*[a-f0-9]+:	66 0f 1b 52 03       	bndmov %bnd2,0x3\(%edx\)
[ 	]*[a-f0-9]+:	66 0f 1b 14 10       	bndmov %bnd2,\(%eax,%edx,1\)
[ 	]*[a-f0-9]+:	66 0f 1b 14 05 00 00 00 00 	bndmov %bnd2,0x0\(,%eax,1\)
[ 	]*[a-f0-9]+:	66 0f 1b 4c 01 03    	bndmov %bnd1,0x3\(%ecx,%eax,1\)
[ 	]*[a-f0-9]+:	66 0f 1a d0          	bndmov %bnd0,%bnd2
[ 	]*[a-f0-9]+:	f3 0f 1a 09          	bndcl  \(%ecx\),%bnd1
[ 	]*[a-f0-9]+:	f3 0f 1a c9          	bndcl  %ecx,%bnd1
[ 	]*[a-f0-9]+:	f3 0f 1a 0d 99 03 00 00 	bndcl  0x399,%bnd1
[ 	]*[a-f0-9]+:	f3 0f 1a 4a 03       	bndcl  0x3\(%edx\),%bnd1
[ 	]*[a-f0-9]+:	f3 0f 1a 0c 08       	bndcl  \(%eax,%ecx,1\),%bnd1
[ 	]*[a-f0-9]+:	f3 0f 1a 0c 0d 00 00 00 00 	bndcl  0x0\(,%ecx,1\),%bnd1
[ 	]*[a-f0-9]+:	f3 0f 1a 4c 01 03    	bndcl  0x3\(%ecx,%eax,1\),%bnd1
[ 	]*[a-f0-9]+:	f2 0f 1a 09          	bndcu  \(%ecx\),%bnd1
[ 	]*[a-f0-9]+:	f2 0f 1a c9          	bndcu  %ecx,%bnd1
[ 	]*[a-f0-9]+:	f2 0f 1a 0d 99 03 00 00 	bndcu  0x399,%bnd1
[ 	]*[a-f0-9]+:	f2 0f 1a 4a 03       	bndcu  0x3\(%edx\),%bnd1
[ 	]*[a-f0-9]+:	f2 0f 1a 0c 08       	bndcu  \(%eax,%ecx,1\),%bnd1
[ 	]*[a-f0-9]+:	f2 0f 1a 0c 0d 00 00 00 00 	bndcu  0x0\(,%ecx,1\),%bnd1
[ 	]*[a-f0-9]+:	f2 0f 1a 4c 01 03    	bndcu  0x3\(%ecx,%eax,1\),%bnd1
[ 	]*[a-f0-9]+:	f2 0f 1b 09          	bndcn  \(%ecx\),%bnd1
[ 	]*[a-f0-9]+:	f2 0f 1b c9          	bndcn  %ecx,%bnd1
[ 	]*[a-f0-9]+:	f2 0f 1b 0d 99 03 00 00 	bndcn  0x399,%bnd1
[ 	]*[a-f0-9]+:	f2 0f 1b 4a 03       	bndcn  0x3\(%edx\),%bnd1
[ 	]*[a-f0-9]+:	f2 0f 1b 0c 08       	bndcn  \(%eax,%ecx,1\),%bnd1
[ 	]*[a-f0-9]+:	f2 0f 1b 0c 0d 00 00 00 00 	bndcn  0x0\(,%ecx,1\),%bnd1
[ 	]*[a-f0-9]+:	f2 0f 1b 4c 01 03    	bndcn  0x3\(%ecx,%eax,1\),%bnd1
[ 	]*[a-f0-9]+:	0f 1b 44 18 03       	bndstx %bnd0,0x3\(%eax,%ebx,1\)
[ 	]*[a-f0-9]+:	0f 1b 54 13 03       	bndstx %bnd2,0x3\(%ebx,%edx,1\)
[ 	]*[a-f0-9]+:	0f 1b 14 15 03 00 00 00 	bndstx %bnd2,0x3\(,%edx,1\)
[ 	]*[a-f0-9]+:	0f 1b 9a 99 03 00 00 	bndstx %bnd3,0x399\(%edx\)
[ 	]*[a-f0-9]+:	0f 1b 93 34 12 00 00 	bndstx %bnd2,0x1234\(%ebx\)
[ 	]*[a-f0-9]+:	0f 1b 53 03          	bndstx %bnd2,0x3\(%ebx\)
[ 	]*[a-f0-9]+:	0f 1b 0a             	bndstx %bnd1,\(%edx\)
[ 	]*[a-f0-9]+:	0f 1a 44 18 03       	bndldx 0x3\(%eax,%ebx,1\),%bnd0
[ 	]*[a-f0-9]+:	0f 1a 54 13 03       	bndldx 0x3\(%ebx,%edx,1\),%bnd2
[ 	]*[a-f0-9]+:	0f 1a 14 15 03 00 00 00 	bndldx 0x3\(,%edx,1\),%bnd2
[ 	]*[a-f0-9]+:	0f 1a 9a 99 03 00 00 	bndldx 0x399\(%edx\),%bnd3
[ 	]*[a-f0-9]+:	0f 1a 93 34 12 00 00 	bndldx 0x1234\(%ebx\),%bnd2
[ 	]*[a-f0-9]+:	0f 1a 53 03          	bndldx 0x3\(%ebx\),%bnd2
[ 	]*[a-f0-9]+:	0f 1a 0a             	bndldx \(%edx\),%bnd1
[ 	]*[a-f0-9]+:	f2 e8 63 01 00 00    	bnd call 2a9 <foo>
[ 	]*[a-f0-9]+:	f2 ff 10             	bnd call \*\(%eax\)
[ 	]*[a-f0-9]+:	f2 0f 84 59 01 00 00 	bnd je 2a9 <foo>
[ 	]*[a-f0-9]+:	f2 e9 53 01 00 00    	bnd jmp 2a9 <foo>
[ 	]*[a-f0-9]+:	f2 ff 21             	bnd jmp \*\(%ecx\)
[ 	]*[a-f0-9]+:	f2 c3                	bnd ret 
[ 	]*[a-f0-9]+:	f3 0f 1b 08          	bndmk  \(%eax\),%bnd1
[ 	]*[a-f0-9]+:	f3 0f 1b 0d 99 03 00 00 	bndmk  0x399,%bnd1
[ 	]*[a-f0-9]+:	f3 0f 1b 49 03       	bndmk  0x3\(%ecx\),%bnd1
[ 	]*[a-f0-9]+:	f3 0f 1b 0c 08       	bndmk  \(%eax,%ecx,1\),%bnd1
[ 	]*[a-f0-9]+:	f3 0f 1b 0c 0d 00 00 00 00 	bndmk  0x0\(,%ecx,1\),%bnd1
[ 	]*[a-f0-9]+:	f3 0f 1b 4c 02 03    	bndmk  0x3\(%edx,%eax,1\),%bnd1
[ 	]*[a-f0-9]+:	66 0f 1a 08          	bndmov \(%eax\),%bnd1
[ 	]*[a-f0-9]+:	66 0f 1a 0d 99 03 00 00 	bndmov 0x399,%bnd1
[ 	]*[a-f0-9]+:	66 0f 1a 49 03       	bndmov 0x3\(%ecx\),%bnd1
[ 	]*[a-f0-9]+:	66 0f 1a 0c 08       	bndmov \(%eax,%ecx,1\),%bnd1
[ 	]*[a-f0-9]+:	66 0f 1a 0c 0d 00 00 00 00 	bndmov 0x0\(,%ecx,1\),%bnd1
[ 	]*[a-f0-9]+:	66 0f 1a 4c 02 03    	bndmov 0x3\(%edx,%eax,1\),%bnd1
[ 	]*[a-f0-9]+:	66 0f 1a c1          	bndmov %bnd1,%bnd0
[ 	]*[a-f0-9]+:	66 0f 1b 08          	bndmov %bnd1,\(%eax\)
[ 	]*[a-f0-9]+:	66 0f 1b 0d 99 03 00 00 	bndmov %bnd1,0x399
[ 	]*[a-f0-9]+:	66 0f 1b 49 03       	bndmov %bnd1,0x3\(%ecx\)
[ 	]*[a-f0-9]+:	66 0f 1b 0c 08       	bndmov %bnd1,\(%eax,%ecx,1\)
[ 	]*[a-f0-9]+:	66 0f 1b 0c 0d 00 00 00 00 	bndmov %bnd1,0x0\(,%ecx,1\)
[ 	]*[a-f0-9]+:	66 0f 1b 4c 02 03    	bndmov %bnd1,0x3\(%edx,%eax,1\)
[ 	]*[a-f0-9]+:	66 0f 1a c8          	bndmov %bnd0,%bnd1
[ 	]*[a-f0-9]+:	f3 0f 1a 08          	bndcl  \(%eax\),%bnd1
[ 	]*[a-f0-9]+:	f3 0f 1a c9          	bndcl  %ecx,%bnd1
[ 	]*[a-f0-9]+:	f3 0f 1a 0d 99 03 00 00 	bndcl  0x399,%bnd1
[ 	]*[a-f0-9]+:	f3 0f 1a 49 03       	bndcl  0x3\(%ecx\),%bnd1
[ 	]*[a-f0-9]+:	f3 0f 1a 0c 08       	bndcl  \(%eax,%ecx,1\),%bnd1
[ 	]*[a-f0-9]+:	f3 0f 1a 0c 0d 00 00 00 00 	bndcl  0x0\(,%ecx,1\),%bnd1
[ 	]*[a-f0-9]+:	f3 0f 1a 4c 02 03    	bndcl  0x3\(%edx,%eax,1\),%bnd1
[ 	]*[a-f0-9]+:	f2 0f 1a 08          	bndcu  \(%eax\),%bnd1
[ 	]*[a-f0-9]+:	f2 0f 1a c9          	bndcu  %ecx,%bnd1
[ 	]*[a-f0-9]+:	f2 0f 1a 0d 99 03 00 00 	bndcu  0x399,%bnd1
[ 	]*[a-f0-9]+:	f2 0f 1a 49 03       	bndcu  0x3\(%ecx\),%bnd1
[ 	]*[a-f0-9]+:	f2 0f 1a 0c 08       	bndcu  \(%eax,%ecx,1\),%bnd1
[ 	]*[a-f0-9]+:	f2 0f 1a 0c 0d 00 00 00 00 	bndcu  0x0\(,%ecx,1\),%bnd1
[ 	]*[a-f0-9]+:	f2 0f 1a 4c 02 03    	bndcu  0x3\(%edx,%eax,1\),%bnd1
[ 	]*[a-f0-9]+:	f2 0f 1b 08          	bndcn  \(%eax\),%bnd1
[ 	]*[a-f0-9]+:	f2 0f 1b c9          	bndcn  %ecx,%bnd1
[ 	]*[a-f0-9]+:	f2 0f 1b 0d 99 03 00 00 	bndcn  0x399,%bnd1
[ 	]*[a-f0-9]+:	f2 0f 1b 49 03       	bndcn  0x3\(%ecx\),%bnd1
[ 	]*[a-f0-9]+:	f2 0f 1b 0c 08       	bndcn  \(%eax,%ecx,1\),%bnd1
[ 	]*[a-f0-9]+:	f2 0f 1b 0c 0d 00 00 00 00 	bndcn  0x0\(,%ecx,1\),%bnd1
[ 	]*[a-f0-9]+:	f2 0f 1b 4c 02 03    	bndcn  0x3\(%edx,%eax,1\),%bnd1
[ 	]*[a-f0-9]+:	0f 1b 44 18 03       	bndstx %bnd0,0x3\(%eax,%ebx,1\)
[ 	]*[a-f0-9]+:	0f 1b 54 13 03       	bndstx %bnd2,0x3\(%ebx,%edx,1\)
[ 	]*[a-f0-9]+:	0f 1b 14 0d 00 00 00 00 	bndstx %bnd2,0x0\(,%ecx,1\)
[ 	]*[a-f0-9]+:	0f 1b 9a 99 03 00 00 	bndstx %bnd3,0x399\(%edx\)
[ 	]*[a-f0-9]+:	0f 1b 14 1d 03 00 00 00 	bndstx %bnd2,0x3\(,%ebx,1\)
[ 	]*[a-f0-9]+:	0f 1b 0a             	bndstx %bnd1,\(%edx\)
[ 	]*[a-f0-9]+:	0f 1a 44 18 03       	bndldx 0x3\(%eax,%ebx,1\),%bnd0
[ 	]*[a-f0-9]+:	0f 1a 54 13 03       	bndldx 0x3\(%ebx,%edx,1\),%bnd2
[ 	]*[a-f0-9]+:	0f 1a 14 0d 00 00 00 00 	bndldx 0x0\(,%ecx,1\),%bnd2
[ 	]*[a-f0-9]+:	0f 1a 9a 99 03 00 00 	bndldx 0x399\(%edx\),%bnd3
[ 	]*[a-f0-9]+:	0f 1a 14 1d 03 00 00 00 	bndldx 0x3\(,%ebx,1\),%bnd2
[ 	]*[a-f0-9]+:	0f 1a 0a             	bndldx \(%edx\),%bnd1
[ 	]*[a-f0-9]+:	f2 e8 0e 00 00 00    	bnd call 2a9 <foo>
[ 	]*[a-f0-9]+:	f2 ff d0             	bnd call \*%eax
[ 	]*[a-f0-9]+:	f2 74 08             	bnd je 2a9 <foo>
[ 	]*[a-f0-9]+:	f2 eb 05             	bnd jmp 2a9 <foo>
[ 	]*[a-f0-9]+:	f2 ff e1             	bnd jmp \*%ecx
[ 	]*[a-f0-9]+:	f2 c3                	bnd ret 

[a-f0-9]+ <foo>:
[ 	]*[a-f0-9]+:	f2 c3                	bnd ret 
#pass
@


1.1
log
@Support Intel MPX

gas/

2013-07-24  Anna Tikhonova  <anna.tikhonova@@intel.com>
	    Kirill Yukhin  <kirill.yukhin@@intel.com>
	    Michael Zolotukhin  <michael.v.zolotukhin@@intel.com>

	* config/tc-i386.c (BND_PREFIX): New.
	(struct _i386_insn): Add new field bnd_prefix.
	(add_bnd_prefix): New.
	(cpu_arch): Add MPX.
	(i386_operand_type): Add regbnd.
	(md_assemble): Handle BND prefixes.
	(parse_insn): Likewise.
	(output_branch): Likewise.
	(output_jump): Likewise.
	(build_modrm_byte): Handle regbnd.
	(OPTION_MADD_BND_PREFIX): New.
	(md_longopts): Add entry for 'madd-bnd-prefix'.
	(md_parse_option): Handle madd-bnd-prefix option.
	(md_show_usage): Add description for madd-bnd-prefix
	option.
	* doc/c-i386.texi: Document mpx/.mpx and -madd-bnd-prefix.

gas/testsuite/

2013-07-24  Anna Tikhonova  <anna.tikhonova@@intel.com>
	    Kirill Yukhin  <kirill.yukhin@@intel.com>
	    Michael Zolotukhin  <michael.v.zolotukhin@@intel.com>

	* gas/i386/mpx-add-bnd-prefix.s: New.
	* gas/i386/mpx-add-bnd-prefix.d: New.
	* gas/i386/mpx-inval-1.l: New.
	* gas/i386/mpx-inval-1.s: New.
	* gas/i386/mpx.d: New.
	* gas/i386/mpx.s: New.
	* gas/i386/x86-64-mpx-add-bnd-prefix.d: New.
	* gas/i386/x86-64-mpx-add-bnd-prefix.s: New.
	* gas/i386/x86-64-mpx-addr32.d: New.
	* gas/i386/x86-64-mpx-addr32.s: New.
	* gas/i386/x86-64-mpx-inval-1.l: New.
	* gas/i386/x86-64-mpx-inval-1.s: New.
	* gas/i386/x86-64-mpx-inval-2.l: New.
	* gas/i386/x86-64-mpx-inval-2.s: New.
	* gas/i386/x86-64-mpx.d: New.
	* gas/i386/x86-64-mpx.s: New.
	* gas/i386/nops.d: Adjust to MPX changes.
	* gas/i386/nops.s: Likewise.
	* gas/i386/x86-64-nops.d: Likewise.
	* gas/i386/x86-64-nops.s: Likewise.
	* gas/i386/ilp32/x86-64-nops.d: Likewise.
	* gas/i386/i386.exp: Run new MPX tests.

include/opcode/

2013-07-24  Anna Tikhonova  <anna.tikhonova@@intel.com>
	    Kirill Yukhin  <kirill.yukhin@@intel.com>
	    Michael Zolotukhin  <michael.v.zolotukhin@@intel.com>

	* i386.h (BND_PREFIX_OPCODE): New.

opcodes/

2013-07-24  Anna Tikhonova  <anna.tikhonova@@intel.com>
	    Kirill Yukhin  <kirill.yukhin@@intel.com>
	    Michael Zolotukhin  <michael.v.zolotukhin@@intel.com>

	* i386-dis.c (BND_Fixup): New.
	(Ebnd): New.
	(Ev_bnd): New.
	(Gbnd): New.
	(BND): New.
	(v_bnd_mode): New.
	(bnd_mode): New.
	(MOD enum): Add new entries.
	(PREFIX enum): Likewise.
	(dis tables): Replace XX with BND for near branch and call
	instructions.
	(prefix_table): Add new entries.
	(mod_table): Likewise.
	(names_bnd): New.
	(intel_names_bnd): New.
	(att_names_bnd): New.
	(BND_PREFIX): New.
	(prefix_name): Handle BND_PREFIX.
	(print_insn): Initialize names_bnd.
	(intel_operand_size): Handle new modes.
	(OP_E_register): Likewise.
	(OP_E_memory): Likewise.
	(OP_G): Likewise.
	* i386-gen.c (cpu_flag_init): Add CpuMPX.
	(cpu_flags): Add CpuMPX.
	(operand_type_init): Add RegBND.
	(opcode_modifiers): Add BNDPrefixOk.
	(operand_types): Add RegBND.
	* i386-init.h: Regenerate.
	* i386-opc.h (CpuMPX): New.
	(CpuUnused): Comment out.
	(i386_cpu_flags): Add cpumpx.
	(BNDPrefixOk): New.
	(i386_opcode_modifier): Add bndprefixok.
	(RegBND): New.
	(i386_operand_type): Add regbnd.
	* i386-opc.tbl: Add BNDPrefixOk to near jumps, calls and rets.
	Add MPX instructions and bnd prefix.
	* i386-reg.tbl: Add bnd0-bnd3 registers.
	* i386-tbl.h: Regenerate.
@
text
@d9 1
a9 1
0+ <foo-0x2c1>:
a31 1
[ 	]*[a-f0-9]+:	f3 0f 1a c8          	bndcl  %eax,%bnd1
a38 1
[ 	]*[a-f0-9]+:	f2 0f 1a c8          	bndcu  %eax,%bnd1
a45 1
[ 	]*[a-f0-9]+:	f2 0f 1b c8          	bndcn  %eax,%bnd1
d65 1
a65 1
[ 	]*[a-f0-9]+:	f2 e8 6f 01 00 00    	bnd call 2c1 <foo>
d67 2
a68 2
[ 	]*[a-f0-9]+:	f2 0f 84 65 01 00 00 	bnd je 2c1 <foo>
[ 	]*[a-f0-9]+:	f2 e9 5f 01 00 00    	bnd jmp 2c1 <foo>
a92 1
[ 	]*[a-f0-9]+:	f3 0f 1a c8          	bndcl  %eax,%bnd1
a99 1
[ 	]*[a-f0-9]+:	f2 0f 1a c8          	bndcu  %eax,%bnd1
a106 1
[ 	]*[a-f0-9]+:	f2 0f 1b c8          	bndcn  %eax,%bnd1
d124 1
a124 1
[ 	]*[a-f0-9]+:	f2 e8 0e 00 00 00    	bnd call 2c1 <foo>
d126 2
a127 2
[ 	]*[a-f0-9]+:	f2 74 08             	bnd je 2c1 <foo>
[ 	]*[a-f0-9]+:	f2 eb 05             	bnd jmp 2c1 <foo>
d131 1
a131 1
0+2c1 <foo>:
@


1.1.2.1
log
@Only allow 32-bit/64-bit registers for bndcl/bndcu/bndcn

gcc/

	PR target/58690
	* config/i386/i386.c (ix86_copy_addr_to_reg): New function.
	(ix86_expand_movmem): Replace copy_addr_to_reg with
	ix86_copy_addr_to_reg.
	(ix86_expand_setmem): Likewise.

gcc/testsuite/

	PR target/58690
	* gcc.target/i386/pr58690.c: New test
@
text
@d9 1
a9 1
0+ <start>:
d32 1
d40 1
d48 1
d68 1
a68 1
[ 	]*[a-f0-9]+:	f2 e8 63 01 00 00    	bnd call 2a9 <foo>
d70 2
a71 2
[ 	]*[a-f0-9]+:	f2 0f 84 59 01 00 00 	bnd je 2a9 <foo>
[ 	]*[a-f0-9]+:	f2 e9 53 01 00 00    	bnd jmp 2a9 <foo>
d96 1
d104 1
d112 1
d130 1
a130 1
[ 	]*[a-f0-9]+:	f2 e8 0e 00 00 00    	bnd call 2a9 <foo>
d132 2
a133 2
[ 	]*[a-f0-9]+:	f2 74 08             	bnd je 2a9 <foo>
[ 	]*[a-f0-9]+:	f2 eb 05             	bnd jmp 2a9 <foo>
d137 1
a137 1
[a-f0-9]+ <foo>:
@


