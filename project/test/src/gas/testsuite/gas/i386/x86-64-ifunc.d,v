head	1.1;
access;
symbols
	binutils-2_24-branch:1.1.0.12
	binutils-2_24-branchpoint:1.1
	binutils-2_21_1:1.1
	binutils-2_23_2:1.1
	binutils-2_23_1:1.1
	binutils-2_23:1.1
	binutils-2_23-branch:1.1.0.10
	binutils-2_23-branchpoint:1.1
	binutils-2_22_branch:1.1.0.8
	binutils-2_22:1.1
	binutils-2_22-branch:1.1.0.6
	binutils-2_22-branchpoint:1.1
	binutils-2_21:1.1
	binutils-2_21-branch:1.1.0.4
	binutils-2_21-branchpoint:1.1
	binutils-2_20_1:1.1
	binutils-2_20:1.1
	binutils-2_20-branch:1.1.0.2
	binutils-2_20-branchpoint:1.1
	binutils_latest_snapshot:1.1;
locks; strict;
comment	@# @;


1.1
date	2009.07.16.17.37.26;	author hjl;	state Exp;
branches;
next	;


desc
@@


1.1
log
@gas/

2009-07-16  H.J. Lu  <hongjiu.lu@@intel.com>

	* config/tc-i386.c (md_assemble): Only check i.operands for AX.
	(md_estimate_size_before_relax): Don't relax IFUNC symbols.

gas/testsuite/

2009-07-16  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/i386.exp: Run ifunc and x86-64-ifunc.

	* gas/i386/ifunc.d: New,
	* gas/i386/ifunc.s: Likewise.
	* gas/i386/x86-64-ifunc.d: Likewise.
@
text
@#source: ifunc.s
#objdump: -drw
#name: x86-64 ifunc

.*: +file format .*

Disassembly of section .text:

0+ <foo>:
[ 	]*[a-f0-9]+:	e9 00 00 00 00       	jmpq   5 <ifunc>	1: R_X86_64_PLT32	ifunc(\+0xf+c|-0x4)

0+5 <ifunc>:
[ 	]*[a-f0-9]+:	c3                   	retq   

0+6 <bar>:
[ 	]*[a-f0-9]+:	eb 00                	jmp    8 <normal>

0+8 <normal>:
[ 	]*[a-f0-9]+:	c3                   	retq   
#pass
@
