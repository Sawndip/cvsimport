head	1.1;
access;
symbols
	binutils-2_24-branch:1.1.0.14
	binutils-2_24-branchpoint:1.1
	binutils-2_21_1:1.1
	binutils-2_23_2:1.1
	binutils-2_23_1:1.1
	binutils-2_23:1.1
	binutils-2_23-branch:1.1.0.12
	binutils-2_23-branchpoint:1.1
	binutils-2_22_branch:1.1.0.10
	binutils-2_22:1.1
	binutils-2_22-branch:1.1.0.8
	binutils-2_22-branchpoint:1.1
	binutils-2_21:1.1
	binutils-2_21-branch:1.1.0.6
	binutils-2_21-branchpoint:1.1
	binutils-2_20_1:1.1
	binutils-2_20:1.1
	binutils-2_20-branch:1.1.0.4
	binutils-2_20-branchpoint:1.1
	dje-cgen-play1-branch:1.1.0.2
	dje-cgen-play1-branchpoint:1.1
	binutils_latest_snapshot:1.1;
locks; strict;
comment	@# @;


1.1
date	2008.12.23.15.14.15;	author hjl;	state Exp;
branches;
next	;


desc
@@


1.1
log
@gas/

2008-12-23  H.J. Lu  <hongjiu.lu@@intel.com>

	* config/tc-i386.c (match_template): Changed to return
	 const template *.  Handle i.swap_operand for 3 operands.
	 (build_vex_prefix): Take const template *.  Swap operand for
	 2-byte VEX prefix if possible.
	 (md_assemble): Updated.
	 (build_modrm_byte): Handle RegMem bit for SSE2AVX.

gas/testsuite/

2008-12-23  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/i386.exp: Run x86-64-avx-swap and x86-64-avx-swap-intel.

	* gas/i386/opts.s: Add tests for movsd, movss, vmovsd and
	vmovss.
	* gas/i386/x86-64-opts.s: Likewise.

	* gas/i386/opts.d: Updated.
	* gas/i386/opts-intel.d: Likewise.
	* gas/i386/sse2avx-opts.d: Likewise.
	* gas/i386/sse2avx-opts-intel.d: Likewise.
	* gas/i386/x86-64-opts.d: Likewise.
	* gas/i386/x86-64-opts-intel.d: Likewise.
	* gas/i386/x86-64-sse2avx-opts.d: Likewise.
	* gas/i386/x86-64-sse2avx-opts-intel.d: Likewise.

	* gas/i386/x86-64-avx-swap.d: New.
	* gas/i386/x86-64-avx-swap.s: Likewise.
	* gas/i386/x86-64-avx-swap-intel.d: Likewise.

opcodes/

2008-12-23  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386-dis.c (EXdS): New.
	(EXdVexS): Likewise.
	(EXqVexS): Likewise.
	(d_swap_mode): Likewise.
	(q_mode): Updated.
	(prefix_table): Use EXdS on movss and EXqS on movsd.
	(vex_len_table): Use EXdVexS on vmovss and EXqVexS on vmovsd.
	(intel_operand_size): Handle d_swap_mode.
	(OP_EX): Likewise.

	* i386-opc.h (S): Update comments.

	* i386-opc.tbl: Add S to movss, movsd, vmovss and vmovsd.
	* i386-tbl.h: Regenerated.
@
text
@#as: -msse2avx
#objdump: -drwMintel
#name: x86-64 AVX swap (Intel mode)
#source: x86-64-avx-swap.s

.*: +file format .*


Disassembly of section .text:

0+ <_start>:
[ 	]*[a-f0-9]+:	c5 7d 29 c6          	vmovapd ymm6,ymm8
[ 	]*[a-f0-9]+:	c5 7c 29 c6          	vmovaps ymm6,ymm8
[ 	]*[a-f0-9]+:	c5 7d 7f c6          	vmovdqa ymm6,ymm8
[ 	]*[a-f0-9]+:	c5 7e 7f c6          	vmovdqu ymm6,ymm8
[ 	]*[a-f0-9]+:	c5 7d 11 c6          	vmovupd ymm6,ymm8
[ 	]*[a-f0-9]+:	c5 7c 11 c6          	vmovups ymm6,ymm8
[ 	]*[a-f0-9]+:	c5 79 29 c6          	vmovapd xmm6,xmm8
[ 	]*[a-f0-9]+:	c5 78 29 c6          	vmovaps xmm6,xmm8
[ 	]*[a-f0-9]+:	c5 79 7f c6          	vmovdqa xmm6,xmm8
[ 	]*[a-f0-9]+:	c5 7a 7f c6          	vmovdqu xmm6,xmm8
[ 	]*[a-f0-9]+:	c5 79 d6 c6          	vmovq  xmm6,xmm8
[ 	]*[a-f0-9]+:	c5 4b 11 c6          	vmovsd xmm6,xmm6,xmm8
[ 	]*[a-f0-9]+:	c5 4a 11 c6          	vmovss xmm6,xmm6,xmm8
[ 	]*[a-f0-9]+:	c5 79 11 c6          	vmovupd xmm6,xmm8
[ 	]*[a-f0-9]+:	c5 78 11 c6          	vmovups xmm6,xmm8
[ 	]*[a-f0-9]+:	c5 79 29 c6          	vmovapd xmm6,xmm8
[ 	]*[a-f0-9]+:	c5 78 29 c6          	vmovaps xmm6,xmm8
[ 	]*[a-f0-9]+:	c5 79 7f c6          	vmovdqa xmm6,xmm8
[ 	]*[a-f0-9]+:	c5 7a 7f c6          	vmovdqu xmm6,xmm8
[ 	]*[a-f0-9]+:	c5 79 d6 c6          	vmovq  xmm6,xmm8
[ 	]*[a-f0-9]+:	c5 79 11 c6          	vmovupd xmm6,xmm8
[ 	]*[a-f0-9]+:	c5 78 11 c6          	vmovups xmm6,xmm8
[ 	]*[a-f0-9]+:	c5 4b 11 c2          	vmovsd xmm2,xmm6,xmm8
[ 	]*[a-f0-9]+:	c5 4a 11 c2          	vmovss xmm2,xmm6,xmm8
[ 	]*[a-f0-9]+:	c5 7d 29 c6          	vmovapd ymm6,ymm8
[ 	]*[a-f0-9]+:	c5 7c 29 c6          	vmovaps ymm6,ymm8
[ 	]*[a-f0-9]+:	c5 7d 7f c6          	vmovdqa ymm6,ymm8
[ 	]*[a-f0-9]+:	c5 7e 7f c6          	vmovdqu ymm6,ymm8
[ 	]*[a-f0-9]+:	c5 7d 11 c6          	vmovupd ymm6,ymm8
[ 	]*[a-f0-9]+:	c5 7c 11 c6          	vmovups ymm6,ymm8
[ 	]*[a-f0-9]+:	c5 79 29 c6          	vmovapd xmm6,xmm8
[ 	]*[a-f0-9]+:	c5 78 29 c6          	vmovaps xmm6,xmm8
[ 	]*[a-f0-9]+:	c5 79 7f c6          	vmovdqa xmm6,xmm8
[ 	]*[a-f0-9]+:	c5 7a 7f c6          	vmovdqu xmm6,xmm8
[ 	]*[a-f0-9]+:	c5 79 d6 c6          	vmovq  xmm6,xmm8
[ 	]*[a-f0-9]+:	c5 4b 11 c6          	vmovsd xmm6,xmm6,xmm8
[ 	]*[a-f0-9]+:	c5 4a 11 c6          	vmovss xmm6,xmm6,xmm8
[ 	]*[a-f0-9]+:	c5 79 11 c6          	vmovupd xmm6,xmm8
[ 	]*[a-f0-9]+:	c5 78 11 c6          	vmovups xmm6,xmm8
[ 	]*[a-f0-9]+:	c5 79 29 c6          	vmovapd xmm6,xmm8
[ 	]*[a-f0-9]+:	c5 78 29 c6          	vmovaps xmm6,xmm8
[ 	]*[a-f0-9]+:	c5 79 7f c6          	vmovdqa xmm6,xmm8
[ 	]*[a-f0-9]+:	c5 7a 7f c6          	vmovdqu xmm6,xmm8
[ 	]*[a-f0-9]+:	c5 79 d6 c6          	vmovq  xmm6,xmm8
[ 	]*[a-f0-9]+:	c5 79 11 c6          	vmovupd xmm6,xmm8
[ 	]*[a-f0-9]+:	c5 78 11 c6          	vmovups xmm6,xmm8
[ 	]*[a-f0-9]+:	c5 4b 11 c2          	vmovsd xmm2,xmm6,xmm8
[ 	]*[a-f0-9]+:	c5 4a 11 c2          	vmovss xmm2,xmm6,xmm8
#pass
@
