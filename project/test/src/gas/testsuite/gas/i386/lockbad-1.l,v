head	1.2;
access;
symbols
	binutils-2_24-branch:1.2.0.10
	binutils-2_24-branchpoint:1.2
	binutils-2_21_1:1.2
	binutils-2_23_2:1.2
	binutils-2_23_1:1.2
	binutils-2_23:1.2
	binutils-2_23-branch:1.2.0.8
	binutils-2_23-branchpoint:1.2
	binutils-2_22_branch:1.2.0.6
	binutils-2_22:1.2
	binutils-2_22-branch:1.2.0.4
	binutils-2_22-branchpoint:1.2
	binutils-2_21:1.2
	binutils-2_21-branch:1.2.0.2
	binutils-2_21-branchpoint:1.2
	binutils_latest_snapshot:1.2;
locks; strict;
comment	@ * @;


1.2
date	2009.11.14.06.04.34;	author hjl;	state Exp;
branches;
next	1.1;

1.1
date	2009.11.12.18.57.13;	author hjl;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Check destination operand for lockable instructions.

gas/

2009-11-13  H.J. Lu  <hongjiu.lu@@intel.com>

	* config/tc-i386.c (md_assemble): Check destination operand
	for lockable instructions.

gas/testsuite/

2009-11-13  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/lock-1-intel.d: Updated.
	* gas/i386/lock-1.d: Likewise.
	* gas/i386/lock-1.s: Likewise.
	* gas/i386/lockbad-1.l: Likewise.
	* gas/i386/lockbad-1.s: Likewise.
	* gas/i386/x86-64-lock-1-intel.d: Likewise.
	* gas/i386/x86-64-lock-1.d: Likewise.
	* gas/i386/x86-64-lock-1.s: Likewise.
	* gas/i386/x86-64-lockbad-1.l: Likewise.
	* gas/i386/x86-64-lockbad-1.s: Likewise.
@
text
@.*: Assembler messages:
.*:5: Error: .*
.*:6: Error: .*
.*:8: Error: .*
.*:9: Error: .*
.*:10: Error: .*
.*:11: Error: .*
.*:12: Error: .*
.*:13: Error: .*
.*:14: Error: .*
.*:15: Error: .*
.*:16: Error: .*
.*:17: Error: .*
.*:18: Error: .*
.*:19: Error: .*
.*:20: Error: .*
.*:21: Error: .*
.*:22: Error: .*
.*:23: Error: .*
.*:24: Error: .*
.*:25: Error: .*
.*:26: Error: .*
.*:27: Error: .*
.*:28: Error: .*
.*:29: Error: .*
.*:30: Error: .*
.*:31: Error: .*
.*:32: Error: .*
.*:33: Error: .*
.*:34: Error: .*
.*:35: Error: .*
.*:37: Error: .*
.*:38: Error: .*
.*:39: Error: .*
.*:40: Error: .*
.*:41: Error: .*
.*:42: Error: .*
.*:43: Error: .*
.*:46: Error: .*
.*:47: Error: .*
.*:49: Error: .*
.*:50: Error: .*
.*:51: Error: .*
.*:52: Error: .*
.*:53: Error: .*
.*:54: Error: .*
.*:55: Error: .*
.*:56: Error: .*
.*:57: Error: .*
.*:58: Error: .*
.*:59: Error: .*
.*:60: Error: .*
.*:61: Error: .*
.*:62: Error: .*
.*:63: Error: .*
.*:64: Error: .*
.*:65: Error: .*
.*:66: Error: .*
.*:67: Error: .*
.*:68: Error: .*
.*:69: Error: .*
.*:70: Error: .*
.*:71: Error: .*
.*:72: Error: .*
.*:73: Error: .*
.*:74: Error: .*
.*:75: Error: .*
.*:76: Error: .*
.*:78: Error: .*
.*:79: Error: .*
.*:80: Error: .*
.*:81: Error: .*
.*:82: Error: .*
.*:83: Error: .*
.*:84: Error: .*
GAS LISTING .*


[ 	]*1[ 	]+\# Unlockable Instructions
[ 	]*2[ 	]+
[ 	]*3[ 	]+\.text
[ 	]*4[ 	]+foo:
[ 	]*5[ 	]+lock mov %ecx, %eax
[ 	]*6[ 	]+lock mov \(%ebx\), %eax
[ 	]*7[ 	]+
[ 	]*8[ 	]+lock add %ebx, %eax
[ 	]*9[ 	]+lock add \$0x64, %ebx
[ 	]*10[ 	]+lock adc %ebx, %eax
[ 	]*11[ 	]+lock adc \$0x64, %ebx
[ 	]*12[ 	]+lock and %ebx, %eax
[ 	]*13[ 	]+lock and \$0x64, %ebx
[ 	]*14[ 	]+lock btc %eax, %ebx
[ 	]*15[ 	]+lock btc \$0x64, %ebx
[ 	]*16[ 	]+lock btr %eax, %ebx
[ 	]*17[ 	]+lock btr \$0x64, %ebx
[ 	]*18[ 	]+lock bts %eax, %ebx
[ 	]*19[ 	]+lock bts \$0x64, %ebx
[ 	]*20[ 	]+lock cmpxchg %eax,%ebx
[ 	]*21[ 	]+lock decl %ebx
[ 	]*22[ 	]+lock incl %ebx
[ 	]*23[ 	]+lock negl %ebx
[ 	]*24[ 	]+lock notl %ebx
[ 	]*25[ 	]+lock or %ebx, %eax
[ 	]*26[ 	]+lock or \$0x64, %ebx
[ 	]*27[ 	]+lock sbb %ebx, %eax
[ 	]*28[ 	]+lock sbb \$0x64, %ebx
[ 	]*29[ 	]+lock sub %ebx, %eax
[ 	]*30[ 	]+lock sub \$0x64, %ebx
[ 	]*31[ 	]+lock xadd %eax, %ebx
[ 	]*32[ 	]+lock xchg %ebx, %eax
[ 	]*33[ 	]+lock xchg %eax, %ebx
[ 	]*34[ 	]+lock xor %ebx, %eax
[ 	]*35[ 	]+lock xor \$0x64, %ebx
[ 	]*36[ 	]+
[ 	]*37[ 	]+lock add \(%ebx\), %eax
[ 	]*38[ 	]+lock adc \(%ebx\), %eax
[ 	]*39[ 	]+lock and \(%ebx\), %eax
[ 	]*40[ 	]+lock or \(%ebx\), %eax
[ 	]*41[ 	]+lock sbb \(%ebx\), %eax
[ 	]*42[ 	]+lock sub \(%ebx\), %eax
[ 	]*43[ 	]+lock xor \(%ebx\), %eax
[ 	]*44[ 	]+
[ 	]*45[ 	]+\.intel_syntax noprefix
[ 	]*46[ 	]+lock mov eax,ebx
[ 	]*47[ 	]+lock mov eax,DWORD PTR \[ebx\]
[ 	]*48[ 	]+
[ 	]*49[ 	]+lock add eax,ebx
[ 	]*50[ 	]+lock add ebx,0x64
[ 	]*51[ 	]+lock adc eax,ebx
[ 	]*52[ 	]+lock adc ebx,0x64
[ 	]*53[ 	]+lock and eax,ebx
[ 	]*54[ 	]+lock and ebx,0x64
[ 	]*55[ 	]+lock btc ebx,eax
[ 	]*56[ 	]+lock btc ebx,0x64
[ 	]*57[ 	]+lock btr ebx,eax
GAS LISTING .*


[ 	]*58[ 	]+lock btr ebx,0x64
[ 	]*59[ 	]+lock bts ebx,eax
[ 	]*60[ 	]+lock bts ebx,0x64
[ 	]*61[ 	]+lock cmpxchg ebx,eax
[ 	]*62[ 	]+lock dec ebx
[ 	]*63[ 	]+lock inc ebx
[ 	]*64[ 	]+lock neg ebx
[ 	]*65[ 	]+lock not ebx
[ 	]*66[ 	]+lock or eax,ebx
[ 	]*67[ 	]+lock or ebx,0x64
[ 	]*68[ 	]+lock sbb eax,ebx
[ 	]*69[ 	]+lock sbb ebx,0x64
[ 	]*70[ 	]+lock sub eax,ebx
[ 	]*71[ 	]+lock sub ebx,0x64
[ 	]*72[ 	]+lock xadd ebx,eax
[ 	]*73[ 	]+lock xchg ebx,eax
[ 	]*74[ 	]+lock xchg ebx,eax
[ 	]*75[ 	]+lock xor eax,ebx
[ 	]*76[ 	]+lock xor ebx,0x64
[ 	]*77[ 	]+
[ 	]*78[ 	]+lock add eax,DWORD PTR \[ebx\]
[ 	]*79[ 	]+lock adc eax,DWORD PTR \[ebx\]
[ 	]*80[ 	]+lock and eax,DWORD PTR \[ebx\]
[ 	]*81[ 	]+lock or eax,DWORD PTR \[ebx\]
[ 	]*82[ 	]+lock sbb eax,DWORD PTR \[ebx\]
[ 	]*83[ 	]+lock sub eax,DWORD PTR \[ebx\]
[ 	]*84[ 	]+lock xor eax,DWORD PTR \[ebx\]
@


1.1
log
@gas/

2009-11-12  H.J. Lu  <hongjiu.lu@@intel.com>

	* config/tc-i386.c (LOCKREP_PREFIX): Removed.
	(REP_PREFIX): New.
	(LOCK_PREFIX): Likewise.
	(PREFIX_GROUP): Likewise.
	(REX_PREFIX): Updated.
	(MAX_PREFIXES): Likewise.
	(add_prefix): Updated.  Return enum PREFIX_GROUP.
	(md_assemble): Check for lock without a lockable instruction.
	(parse_insn): Updated.
	(output_insn): Likewise.

gas/testsuite/

2009-11-12  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/i386.exp: Run lock-1, lock-1-intel, lockbad-1,
	x86-64-lock-1, x86-64-lock-1-intel and x86-64-lockbad-1.

	* gas/i386/lock-1-intel.d: New.
	* gas/i386/lock-1.d: Likewise.
	* gas/i386/lock-1.s: Likewise.
	* gas/i386/lockbad-1.l: Likewise.
	* gas/i386/lockbad-1.s: Likewise.
	* gas/i386/x86-64-lock-1-intel.d: Likewise.
	* gas/i386/x86-64-lock-1.d: Likewise.
	* gas/i386/x86-64-lock-1.s: Likewise.
	* gas/i386/x86-64-lockbad-1.l: Likewise.
	* gas/i386/x86-64-lockbad-1.s: Likewise.

opcodes/

2009-11-12  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386-gen.c (opcode_modifiers): Add IsLockable.

	* i386-opc.h (IsLockable): New.
	(i386_opcode_modifier): Add islockable.

	* i386-opc.tbl: Add IsLockable to add, adc, and, btc, btr,
	bts, cmpxchg, cmpxch8b, dec, inc, neg, not, or, sbb, sub,
	xor, xadd and xchg.
	* i386-tbl.h: Regenerated.
@
text
@d32 1
d35 1
a38 2
.*:44: Error: .*
.*:45: Error: .*
a40 1
.*:48: Error: .*
d61 15
d115 21
a135 21
[ 	]*37[ 	]+\.intel_syntax noprefix
[ 	]*38[ 	]+lock mov eax,ebx
[ 	]*39[ 	]+lock mov eax,DWORD PTR \[ebx\]
[ 	]*40[ 	]+
[ 	]*41[ 	]+lock add eax,ebx
[ 	]*42[ 	]+lock add ebx,0x64
[ 	]*43[ 	]+lock adc eax,ebx
[ 	]*44[ 	]+lock adc ebx,0x64
[ 	]*45[ 	]+lock and eax,ebx
[ 	]*46[ 	]+lock and ebx,0x64
[ 	]*47[ 	]+lock btc ebx,eax
[ 	]*48[ 	]+lock btc ebx,0x64
[ 	]*49[ 	]+lock btr ebx,eax
[ 	]*50[ 	]+lock btr ebx,0x64
[ 	]*51[ 	]+lock bts ebx,eax
[ 	]*52[ 	]+lock bts ebx,0x64
[ 	]*53[ 	]+lock cmpxchg ebx,eax
[ 	]*54[ 	]+lock dec ebx
[ 	]*55[ 	]+lock inc ebx
[ 	]*56[ 	]+lock neg ebx
[ 	]*57[ 	]+lock not ebx
d139 27
a165 11
[ 	]*58[ 	]+lock or eax,ebx
[ 	]*59[ 	]+lock or ebx,0x64
[ 	]*60[ 	]+lock sbb eax,ebx
[ 	]*61[ 	]+lock sbb ebx,0x64
[ 	]*62[ 	]+lock sub eax,ebx
[ 	]*63[ 	]+lock sub ebx,0x64
[ 	]*64[ 	]+lock xadd ebx,eax
[ 	]*65[ 	]+lock xchg ebx,eax
[ 	]*66[ 	]+lock xchg ebx,eax
[ 	]*67[ 	]+lock xor eax,ebx
[ 	]*68[ 	]+lock xor ebx,0x64
@

