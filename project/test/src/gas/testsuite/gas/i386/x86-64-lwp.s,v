head	1.3;
access;
symbols
	binutils-2_24-branch:1.3.0.10
	binutils-2_24-branchpoint:1.3
	binutils-2_21_1:1.3
	binutils-2_23_2:1.3
	binutils-2_23_1:1.3
	binutils-2_23:1.3
	binutils-2_23-branch:1.3.0.8
	binutils-2_23-branchpoint:1.3
	binutils-2_22_branch:1.3.0.6
	binutils-2_22:1.3
	binutils-2_22-branch:1.3.0.4
	binutils-2_22-branchpoint:1.3
	binutils-2_21:1.3
	binutils-2_21-branch:1.3.0.2
	binutils-2_21-branchpoint:1.3
	binutils_latest_snapshot:1.3;
locks; strict;
comment	@# @;


1.3
date	2010.03.23.02.56.23;	author spop;	state Exp;
branches;
next	1.2;

1.2
date	2009.11.06.23.17.26;	author spop;	state Exp;
branches;
next	1.1;

1.1
date	2009.11.05.23.40.04;	author spop;	state Exp;
branches;
next	;


desc
@@


1.3
log
@2010-03-22  Sebastian Pop  <sebastian.pop@@amd.com>
	    Quentin Neill <quentin.neill@@amd.com>

	opcodes/
	* i386-dis.c (OP_LWP_I): Removed.
	(reg_table): Do not use OP_LWP_I, use Iq.
	(OP_LWPCB_E): Remove use of names16.
	(OP_LWP_E): Same.
	* i386-opc.tbl: Removed 16bit LWP insns.  32bit LWP insns
	should not set the Vex.length bit.
	* i386-tbl.h: Regenerated.

	gas/
	* testsuite/gas/i386/x86-64-lwp.s: Remove use of 16bit LWP insns.
	* testsuite/gas/i386/lwp.s: Same.
	* testsuite/gas/i386/x86-64-lwp.d: Updated.
	* testsuite/gas/i386/lwp.d: Updated.
@
text
@# Check 64bit LWP instructions

	.allow_index_reg
	.text
_start:

	llwpcb %eax
	llwpcb %ecx
	llwpcb %edx
	llwpcb %ebx
	llwpcb %esp
	llwpcb %ebp
	llwpcb %esi
	llwpcb %edi
	llwpcb %r8d
	llwpcb %r9d
	llwpcb %r10d
	llwpcb %r11d
	llwpcb %r12d
	llwpcb %r13d
	llwpcb %r14d
	llwpcb %r15d
	llwpcb %rax
	llwpcb %rcx
	llwpcb %rdx
	llwpcb %rbx
	llwpcb %rsp
	llwpcb %rbp
	llwpcb %rsi
	llwpcb %rdi
	llwpcb %r8
	llwpcb %r9
	llwpcb %r10
	llwpcb %r11
	llwpcb %r12
	llwpcb %r13
	llwpcb %r14
	llwpcb %r15

	slwpcb %r15
	slwpcb %r14
	slwpcb %r13
	slwpcb %r12
	slwpcb %r11
	slwpcb %r10
	slwpcb %r9
	slwpcb %r8
	slwpcb %rdi
	slwpcb %rsi
	slwpcb %rbp
	slwpcb %rsp
	slwpcb %rbx
	slwpcb %rdx
	slwpcb %rcx
	slwpcb %rax
	slwpcb %r15d
	slwpcb %r14d
	slwpcb %r13d
	slwpcb %r12d
	slwpcb %r11d
	slwpcb %r10d
	slwpcb %r9d
	slwpcb %r8d
	slwpcb %edi
	slwpcb %esi
	slwpcb %ebp
	slwpcb %esp
	slwpcb %ebx
	slwpcb %edx
	slwpcb %ecx
	slwpcb %eax

	lwpins $0x12345678, %r15d, %eax
	lwpins $0x12345678, %r14d, %ecx
	lwpins $0x12345678, %r13d, %edx
	lwpins $0x12345678, %r12d, %ebx
	lwpins $0x12345678, %r11d, %esp
	lwpins $0x12345678, %r10d, %ebp
	lwpins $0x12345678, %r9d, %esi
	lwpins $0x12345678, %r8d, %edi
	lwpins $0x12345678, %edi, %r8d
	lwpins $0x12345678, %esi, %r9d
	lwpins $0x12345678, %ebp, %r10d
	lwpins $0x12345678, %esp, %r11d
	lwpins $0x12345678, %ebx, %r12d
	lwpins $0x12345678, %edx, %r13d
	lwpins $0x12345678, %ecx, %r14d
	lwpins $0x12345678, %eax, %r15d
	lwpins $0x12345678, %r15d, %rax
	lwpins $0x12345678, %r14d, %rcx
	lwpins $0x12345678, %r13d, %rdx
	lwpins $0x12345678, %r12d, %rbx
	lwpins $0x12345678, %r11d, %rsp
	lwpins $0x12345678, %r10d, %rbp
	lwpins $0x12345678, %r9d, %rsi
	lwpins $0x12345678, %r8d, %rdi
	lwpins $0x12345678, %eax, %r8
	lwpins $0x12345678, %ecx, %r9
	lwpins $0x12345678, %edx, %r10
	lwpins $0x12345678, %ebx, %r11
	lwpins $0x12345678, %esp, %r12
	lwpins $0x12345678, %ebp, %r13
	lwpins $0x12345678, %esi, %r14
	lwpins $0x12345678, %edi, %r15

	lwpval $0x12345678, %r15d, %eax
	lwpval $0x12345678, %r14d, %ecx
	lwpval $0x12345678, %r13d, %edx
	lwpval $0x12345678, %r12d, %ebx
	lwpval $0x12345678, %r11d, %esp
	lwpval $0x12345678, %r10d, %ebp
	lwpval $0x12345678, %r9d, %esi
	lwpval $0x12345678, %r8d, %edi
	lwpval $0x12345678, %edi, %r8d
	lwpval $0x12345678, %esi, %r9d
	lwpval $0x12345678, %ebp, %r10d
	lwpval $0x12345678, %esp, %r11d
	lwpval $0x12345678, %ebx, %r12d
	lwpval $0x12345678, %edx, %r13d
	lwpval $0x12345678, %ecx, %r14d
	lwpval $0x12345678, %eax, %r15d
	lwpval $0x12345678, %r15d, %rax
	lwpval $0x12345678, %r14d, %rcx
	lwpval $0x12345678, %r13d, %rdx
	lwpval $0x12345678, %r12d, %rbx
	lwpval $0x12345678, %r11d, %rsp
	lwpval $0x12345678, %r10d, %rbp
	lwpval $0x12345678, %r9d, %rsi
	lwpval $0x12345678, %r8d, %rdi
	lwpval $0x12345678, %eax, %r8
	lwpval $0x12345678, %ecx, %r9
	lwpval $0x12345678, %edx, %r10
	lwpval $0x12345678, %ebx, %r11
	lwpval $0x12345678, %esp, %r12
	lwpval $0x12345678, %ebp, %r13
	lwpval $0x12345678, %esi, %r14
	lwpval $0x12345678, %edi, %r15

	lwpins $0x12345678, (%r15d), %eax
	lwpins $0x12345678, (%r14d), %ecx
	lwpins $0x12345678, (%r13d), %edx
	lwpins $0x12345678, (%r12d), %ebx
	lwpins $0x12345678, (%r11d), %esp
	lwpins $0x12345678, (%r10d), %ebp
	lwpins $0x12345678, (%r9d), %esi
	lwpins $0x12345678, (%r8d), %edi
	lwpins $0x12345678, (%edi), %r8d
	lwpins $0x12345678, (%esi), %r9d
	lwpins $0x12345678, (%ebp), %r10d
	lwpins $0x12345678, (%esp), %r11d
	lwpins $0x12345678, (%ebx), %r12d
	lwpins $0x12345678, (%edx), %r13d
	lwpins $0x12345678, (%ecx), %r14d
	lwpins $0x12345678, (%eax), %r15d
	lwpins $0x12345678, (%r15d), %rax
	lwpins $0x12345678, (%r14d), %rcx
	lwpins $0x12345678, (%r13d), %rdx
	lwpins $0x12345678, (%r12d), %rbx
	lwpins $0x12345678, (%r11d), %rsp
	lwpins $0x12345678, (%r10d), %rbp
	lwpins $0x12345678, (%r9d), %rsi
	lwpins $0x12345678, (%r8d), %rdi
	lwpins $0x12345678, (%eax), %r8
	lwpins $0x12345678, (%ecx), %r9
	lwpins $0x12345678, (%edx), %r10
	lwpins $0x12345678, (%ebx), %r11
	lwpins $0x12345678, (%esp), %r12
	lwpins $0x12345678, (%ebp), %r13
	lwpins $0x12345678, (%esi), %r14
	lwpins $0x12345678, (%edi), %r15

	lwpval $0x12345678, (%r15d), %eax
	lwpval $0x12345678, (%r14d), %ecx
	lwpval $0x12345678, (%r13d), %edx
	lwpval $0x12345678, (%r12d), %ebx
	lwpval $0x12345678, (%r11d), %esp
	lwpval $0x12345678, (%r10d), %ebp
	lwpval $0x12345678, (%r9d), %esi
	lwpval $0x12345678, (%r8d), %edi
	lwpval $0x12345678, (%edi), %r8d
	lwpval $0x12345678, (%esi), %r9d
	lwpval $0x12345678, (%ebp), %r10d
	lwpval $0x12345678, (%esp), %r11d
	lwpval $0x12345678, (%ebx), %r12d
	lwpval $0x12345678, (%edx), %r13d
	lwpval $0x12345678, (%ecx), %r14d
	lwpval $0x12345678, (%eax), %r15d
	lwpval $0x12345678, (%r15d), %rax
	lwpval $0x12345678, (%r14d), %rcx
	lwpval $0x12345678, (%r13d), %rdx
	lwpval $0x12345678, (%r12d), %rbx
	lwpval $0x12345678, (%r11d), %rsp
	lwpval $0x12345678, (%r10d), %rbp
	lwpval $0x12345678, (%r9d), %rsi
	lwpval $0x12345678, (%r8d), %rdi
	lwpval $0x12345678, (%eax), %r8
	lwpval $0x12345678, (%ecx), %r9
	lwpval $0x12345678, (%edx), %r10
	lwpval $0x12345678, (%ebx), %r11
	lwpval $0x12345678, (%esp), %r12
	lwpval $0x12345678, (%ebp), %r13
	lwpval $0x12345678, (%esi), %r14
	lwpval $0x12345678, (%edi), %r15

	lwpins $0x12345678, 0xcafe(%r15d), %eax
	lwpins $0x12345678, 0xcafe(%r14d), %ecx
	lwpins $0x12345678, 0xcafe(%r13d), %edx
	lwpins $0x12345678, 0xcafe(%r12d), %ebx
	lwpins $0x12345678, 0xcafe(%r11d), %esp
	lwpins $0x12345678, 0xcafe(%r10d), %ebp
	lwpins $0x12345678, 0xcafe(%r9d), %esi
	lwpins $0x12345678, 0xcafe(%r8d), %edi
	lwpins $0x12345678, 0xcafe(%edi), %r8d
	lwpins $0x12345678, 0xcafe(%esi), %r9d
	lwpins $0x12345678, 0xcafe(%ebp), %r10d
	lwpins $0x12345678, 0xcafe(%esp), %r11d
	lwpins $0x12345678, 0xcafe(%ebx), %r12d
	lwpins $0x12345678, 0xcafe(%edx), %r13d
	lwpins $0x12345678, 0xcafe(%ecx), %r14d
	lwpins $0x12345678, 0xcafe(%eax), %r15d
	lwpins $0x12345678, 0xcafe(%r15d), %rax
	lwpins $0x12345678, 0xcafe(%r14d), %rcx
	lwpins $0x12345678, 0xcafe(%r13d), %rdx
	lwpins $0x12345678, 0xcafe(%r12d), %rbx
	lwpins $0x12345678, 0xcafe(%r11d), %rsp
	lwpins $0x12345678, 0xcafe(%r10d), %rbp
	lwpins $0x12345678, 0xcafe(%r9d), %rsi
	lwpins $0x12345678, 0xcafe(%r8d), %rdi
	lwpins $0x12345678, 0xcafe(%eax), %r8
	lwpins $0x12345678, 0xcafe(%ecx), %r9
	lwpins $0x12345678, 0xcafe(%edx), %r10
	lwpins $0x12345678, 0xcafe(%ebx), %r11
	lwpins $0x12345678, 0xcafe(%esp), %r12
	lwpins $0x12345678, 0xcafe(%ebp), %r13
	lwpins $0x12345678, 0xcafe(%esi), %r14
	lwpins $0x12345678, 0xcafe(%edi), %r15

	lwpval $0x12345678, 0xcafe(%r15d), %eax
	lwpval $0x12345678, 0xcafe(%r14d), %ecx
	lwpval $0x12345678, 0xcafe(%r13d), %edx
	lwpval $0x12345678, 0xcafe(%r12d), %ebx
	lwpval $0x12345678, 0xcafe(%r11d), %esp
	lwpval $0x12345678, 0xcafe(%r10d), %ebp
	lwpval $0x12345678, 0xcafe(%r9d), %esi
	lwpval $0x12345678, 0xcafe(%r8d), %edi
	lwpval $0x12345678, 0xcafe(%edi), %r8d
	lwpval $0x12345678, 0xcafe(%esi), %r9d
	lwpval $0x12345678, 0xcafe(%ebp), %r10d
	lwpval $0x12345678, 0xcafe(%esp), %r11d
	lwpval $0x12345678, 0xcafe(%ebx), %r12d
	lwpval $0x12345678, 0xcafe(%edx), %r13d
	lwpval $0x12345678, 0xcafe(%ecx), %r14d
	lwpval $0x12345678, 0xcafe(%eax), %r15d
	lwpval $0x12345678, 0xcafe(%r15d), %rax
	lwpval $0x12345678, 0xcafe(%r14d), %rcx
	lwpval $0x12345678, 0xcafe(%r13d), %rdx
	lwpval $0x12345678, 0xcafe(%r12d), %rbx
	lwpval $0x12345678, 0xcafe(%r11d), %rsp
	lwpval $0x12345678, 0xcafe(%r10d), %rbp
	lwpval $0x12345678, 0xcafe(%r9d), %rsi
	lwpval $0x12345678, 0xcafe(%r8d), %rdi
	lwpval $0x12345678, 0xcafe(%eax), %r8
	lwpval $0x12345678, 0xcafe(%ecx), %r9
	lwpval $0x12345678, 0xcafe(%edx), %r10
	lwpval $0x12345678, 0xcafe(%ebx), %r11
	lwpval $0x12345678, 0xcafe(%esp), %r12
	lwpval $0x12345678, 0xcafe(%ebp), %r13
	lwpval $0x12345678, 0xcafe(%esi), %r14
	lwpval $0x12345678, 0xcafe(%edi), %r15
@


1.2
log
@2009-11-06  Sebastian Pop  <sebastian.pop@@amd.com>

	* opcodes/i386-dis.c (reg_table): Add XOP_8F_TABLE (XOP_09) to
	reg_table[REG_8F][1]: for XOP instructions, ModRM.reg first points to
	B.mm in the RXB.mmmmm byte, and so when B is set, we still should use
	the xop_table.
	(get_valid_dis386): Removed unused condition (from cut/n/paste) for
	XOP instructions.

	* gas/testsuite/gas/i386/x86-64-lwp.s: Updated to also contain
	patterns with r[8-15] registers.
	* gas/testsuite/gas/i386/x86-64-lwp.d: Same.
@
text
@a6 16
	llwpcb %ax
	llwpcb %cx
	llwpcb %dx
	llwpcb %bx
	llwpcb %sp
	llwpcb %bp
	llwpcb %si
	llwpcb %di
	llwpcb %r8w
	llwpcb %r9w
	llwpcb %r10w
	llwpcb %r11w
	llwpcb %r12w
	llwpcb %r13w
	llwpcb %r14w
	llwpcb %r15w
a71 16
	slwpcb %r15w
	slwpcb %r14w
	slwpcb %r13w
	slwpcb %r12w
	slwpcb %r11w
	slwpcb %r10w
	slwpcb %r9w
	slwpcb %r8w
	slwpcb %di
	slwpcb %si
	slwpcb %bp
	slwpcb %sp
	slwpcb %bx
	slwpcb %dx
	slwpcb %cx
	slwpcb %ax
a72 16
	lwpins $0x1234, %eax, %ax
	lwpins $0x1234, %ecx, %cx
	lwpins $0x1234, %edx, %dx
	lwpins $0x1234, %ebx, %bx
	lwpins $0x1234, %esp, %sp
	lwpins $0x1234, %ebp, %bp
	lwpins $0x1234, %esi, %si
	lwpins $0x1234, %edi, %di
	lwpins $0x1234, %r8d, %r8w
	lwpins $0x1234, %r9d, %r9w
	lwpins $0x1234, %r10d, %r10w
	lwpins $0x1234, %r11d, %r11w
	lwpins $0x1234, %r12d, %r12w
	lwpins $0x1234, %r13d, %r13w
	lwpins $0x1234, %r14d, %r14w
	lwpins $0x1234, %r15d, %r15w
a105 16
	lwpval $0x1234, %eax, %ax
	lwpval $0x1234, %ecx, %cx
	lwpval $0x1234, %edx, %dx
	lwpval $0x1234, %ebx, %bx
	lwpval $0x1234, %esp, %sp
	lwpval $0x1234, %ebp, %bp
	lwpval $0x1234, %esi, %si
	lwpval $0x1234, %edi, %di
	lwpval $0x1234, %r8d, %r8w
	lwpval $0x1234, %r9d, %r9w
	lwpval $0x1234, %r10d, %r10w
	lwpval $0x1234, %r11d, %r11w
	lwpval $0x1234, %r12d, %r12w
	lwpval $0x1234, %r13d, %r13w
	lwpval $0x1234, %r14d, %r14w
	lwpval $0x1234, %r15d, %r15w
a138 16
	lwpins $0x1234, (%eax), %ax
	lwpins $0x1234, (%ecx), %cx
	lwpins $0x1234, (%edx), %dx
	lwpins $0x1234, (%ebx), %bx
	lwpins $0x1234, (%esp), %sp
	lwpins $0x1234, (%ebp), %bp
	lwpins $0x1234, (%esi), %si
	lwpins $0x1234, (%edi), %di
	lwpins $0x1234, (%r8d), %r8w
	lwpins $0x1234, (%r9d), %r9w
	lwpins $0x1234, (%r10d), %r10w
	lwpins $0x1234, (%r11d), %r11w
	lwpins $0x1234, (%r12d), %r12w
	lwpins $0x1234, (%r13d), %r13w
	lwpins $0x1234, (%r14d), %r14w
	lwpins $0x1234, (%r15d), %r15w
a171 16
	lwpval $0x1234, (%eax), %ax
	lwpval $0x1234, (%ecx), %cx
	lwpval $0x1234, (%edx), %dx
	lwpval $0x1234, (%ebx), %bx
	lwpval $0x1234, (%esp), %sp
	lwpval $0x1234, (%ebp), %bp
	lwpval $0x1234, (%esi), %si
	lwpval $0x1234, (%edi), %di
	lwpval $0x1234, (%r8d), %r8w
	lwpval $0x1234, (%r9d), %r9w
	lwpval $0x1234, (%r10d), %r10w
	lwpval $0x1234, (%r11d), %r11w
	lwpval $0x1234, (%r12d), %r12w
	lwpval $0x1234, (%r13d), %r13w
	lwpval $0x1234, (%r14d), %r14w
	lwpval $0x1234, (%r15d), %r15w
a204 16
	lwpins $0x1234, 0xcafe(%eax), %ax
	lwpins $0x1234, 0xcafe(%ecx), %cx
	lwpins $0x1234, 0xcafe(%edx), %dx
	lwpins $0x1234, 0xcafe(%ebx), %bx
	lwpins $0x1234, 0xcafe(%esp), %sp
	lwpins $0x1234, 0xcafe(%ebp), %bp
	lwpins $0x1234, 0xcafe(%esi), %si
	lwpins $0x1234, 0xcafe(%edi), %di
	lwpins $0x1234, 0xcafe(%r8d), %r8w
	lwpins $0x1234, 0xcafe(%r9d), %r9w
	lwpins $0x1234, 0xcafe(%r10d), %r10w
	lwpins $0x1234, 0xcafe(%r11d), %r11w
	lwpins $0x1234, 0xcafe(%r12d), %r12w
	lwpins $0x1234, 0xcafe(%r13d), %r13w
	lwpins $0x1234, 0xcafe(%r14d), %r14w
	lwpins $0x1234, 0xcafe(%r15d), %r15w
a237 16
	lwpval $0x1234, 0xcafe(%eax), %ax
	lwpval $0x1234, 0xcafe(%ecx), %cx
	lwpval $0x1234, 0xcafe(%edx), %dx
	lwpval $0x1234, 0xcafe(%ebx), %bx
	lwpval $0x1234, 0xcafe(%esp), %sp
	lwpval $0x1234, 0xcafe(%ebp), %bp
	lwpval $0x1234, 0xcafe(%esi), %si
	lwpval $0x1234, 0xcafe(%edi), %di
	lwpval $0x1234, 0xcafe(%r8d), %r8w
	lwpval $0x1234, 0xcafe(%r9d), %r9w
	lwpval $0x1234, 0xcafe(%r10d), %r10w
	lwpval $0x1234, 0xcafe(%r11d), %r11w
	lwpval $0x1234, 0xcafe(%r12d), %r12w
	lwpval $0x1234, 0xcafe(%r13d), %r13w
	lwpval $0x1234, 0xcafe(%r14d), %r14w
	lwpval $0x1234, 0xcafe(%r15d), %r15w
@


1.1
log
@2009-11-05  Sebastian Pop  <sebastian.pop@@amd.com>
	    Quentin Neill  <quentin.neill@@amd.com>

	* gas/config/tc-i386.c (cpu_arch): Add CPU_LWP_FLAGS.
	(build_vex_prefix): Handle xop09 and xop0a.
	(build_modrm_byte): Handle vexlwp.
	(md_show_usage): Add lwp.
	* gas/doc/c-i386.texi (i386-LWP): New section.

	* gas/testsuite/gas/i386/i386.exp: Run x86-64-lwp in 64-bit mode,
	run lwp in 32-bit mode.
	* gas/testsuite/gas/i386/x86-64-lwp.d: New.
	* gas/testsuite/gas/i386/x86-64-lwp.s: New.
	* gas/testsuite/gas/i386/lwp.d: New.
	* gas/testsuite/gas/i386/lwp.s: New.

	* opcodes/i386-dis.c (OP_LWPCB_E): New.
	(OP_LWP_E): New.
	(OP_LWP_I): New.
	(USE_XOP_8F_TABLE): New.
	(XOP_8F_TABLE): New.
	(REG_XOP_LWPCB): New.
	(REG_XOP_LWP): New.
	(XOP_09): New.
	(XOP_0A): New.
	(reg_table): Redirect REG_8F to XOP_8F_TABLE.
	Add entries for REG_XOP_LWPCB and REG_XOP_LWP.
	(xop_table): New.
	(get_valid_dis386): Handle USE_XOP_8F_TABLE.
	Use the offsets VEX_0F, VEX_0F38, and VEX_0F3A instead of their values
	to access to the vex_table.
	(OP_LWPCB_E): New.
	(OP_LWP_E): New.
	(OP_LWP_I): New.
	* opcodes/i386-gen.c (cpu_flag_init): Add CPU_LWP_FLAGS, CpuLWP.
	(cpu_flags): Add CpuLWP.
	(opcode_modifiers): Add VexLWP, XOP09, and XOP0A.
	* opcodes/i386-opc.h (CpuLWP): New.
	(i386_cpu_flags): Add bit cpulwp.
	(VexLWP): New.
	(XOP09): New.
	(XOP0A): New.
	(i386_opcode_modifier): Add vexlwp, xop09, and xop0a.
	* opcodes/i386-opc.tbl (llwpcb): Added.
	(lwpval): Added.
	(lwpins): Added.
@
text
@d15 8
d31 8
d47 8
d56 8
d72 8
d88 8
d113 40
a152 16
	lwpins $0x12345678, %edi, %eax
	lwpins $0x12345678, %esi, %ecx
	lwpins $0x12345678, %ebp, %edx
	lwpins $0x12345678, %esp, %ebx
	lwpins $0x12345678, %ebx, %esp
	lwpins $0x12345678, %edx, %ebp
	lwpins $0x12345678, %ecx, %esi
	lwpins $0x12345678, %eax, %edi
	lwpins $0x12345678, %eax, %rax
	lwpins $0x12345678, %ecx, %rcx
	lwpins $0x12345678, %edx, %rdx
	lwpins $0x12345678, %ebx, %rbx
	lwpins $0x12345678, %esp, %rsp
	lwpins $0x12345678, %ebp, %rbp
	lwpins $0x12345678, %esi, %rsi
	lwpins $0x12345678, %edi, %rdi
d162 40
a201 16
	lwpval $0x12345678, %edi, %eax
	lwpval $0x12345678, %esi, %ecx
	lwpval $0x12345678, %ebp, %edx
	lwpval $0x12345678, %esp, %ebx
	lwpval $0x12345678, %ebx, %esp
	lwpval $0x12345678, %edx, %ebp
	lwpval $0x12345678, %ecx, %esi
	lwpval $0x12345678, %eax, %edi
	lwpval $0x12345678, %eax, %rax
	lwpval $0x12345678, %ecx, %rcx
	lwpval $0x12345678, %edx, %rdx
	lwpval $0x12345678, %ebx, %rbx
	lwpval $0x12345678, %esp, %rsp
	lwpval $0x12345678, %ebp, %rbp
	lwpval $0x12345678, %esi, %rsi
	lwpval $0x12345678, %edi, %rdi
d211 40
a250 16
	lwpins $0x12345678, (%edi), %eax
	lwpins $0x12345678, (%esi), %ecx
	lwpins $0x12345678, (%ebp), %edx
	lwpins $0x12345678, (%esp), %ebx
	lwpins $0x12345678, (%ebx), %esp
	lwpins $0x12345678, (%edx), %ebp
	lwpins $0x12345678, (%ecx), %esi
	lwpins $0x12345678, (%eax), %edi
	lwpins $0x12345678, (%eax), %rax
	lwpins $0x12345678, (%ecx), %rcx
	lwpins $0x12345678, (%edx), %rdx
	lwpins $0x12345678, (%ebx), %rbx
	lwpins $0x12345678, (%esp), %rsp
	lwpins $0x12345678, (%ebp), %rbp
	lwpins $0x12345678, (%esi), %rsi
	lwpins $0x12345678, (%edi), %rdi
d260 40
a299 16
	lwpval $0x12345678, (%edi), %eax
	lwpval $0x12345678, (%esi), %ecx
	lwpval $0x12345678, (%ebp), %edx
	lwpval $0x12345678, (%esp), %ebx
	lwpval $0x12345678, (%ebx), %esp
	lwpval $0x12345678, (%edx), %ebp
	lwpval $0x12345678, (%ecx), %esi
	lwpval $0x12345678, (%eax), %edi
	lwpval $0x12345678, (%eax), %rax
	lwpval $0x12345678, (%ecx), %rcx
	lwpval $0x12345678, (%edx), %rdx
	lwpval $0x12345678, (%ebx), %rbx
	lwpval $0x12345678, (%esp), %rsp
	lwpval $0x12345678, (%ebp), %rbp
	lwpval $0x12345678, (%esi), %rsi
	lwpval $0x12345678, (%edi), %rdi
d309 40
a348 16
	lwpins $0x12345678, 0xcafe(%edi), %eax
	lwpins $0x12345678, 0xcafe(%esi), %ecx
	lwpins $0x12345678, 0xcafe(%ebp), %edx
	lwpins $0x12345678, 0xcafe(%esp), %ebx
	lwpins $0x12345678, 0xcafe(%ebx), %esp
	lwpins $0x12345678, 0xcafe(%edx), %ebp
	lwpins $0x12345678, 0xcafe(%ecx), %esi
	lwpins $0x12345678, 0xcafe(%eax), %edi
	lwpins $0x12345678, 0xcafe(%eax), %rax
	lwpins $0x12345678, 0xcafe(%ecx), %rcx
	lwpins $0x12345678, 0xcafe(%edx), %rdx
	lwpins $0x12345678, 0xcafe(%ebx), %rbx
	lwpins $0x12345678, 0xcafe(%esp), %rsp
	lwpins $0x12345678, 0xcafe(%ebp), %rbp
	lwpins $0x12345678, 0xcafe(%esi), %rsi
	lwpins $0x12345678, 0xcafe(%edi), %rdi
d358 40
a397 16
	lwpval $0x12345678, 0xcafe(%edi), %eax
	lwpval $0x12345678, 0xcafe(%esi), %ecx
	lwpval $0x12345678, 0xcafe(%ebp), %edx
	lwpval $0x12345678, 0xcafe(%esp), %ebx
	lwpval $0x12345678, 0xcafe(%ebx), %esp
	lwpval $0x12345678, 0xcafe(%edx), %ebp
	lwpval $0x12345678, 0xcafe(%ecx), %esi
	lwpval $0x12345678, 0xcafe(%eax), %edi
	lwpval $0x12345678, 0xcafe(%eax), %rax
	lwpval $0x12345678, 0xcafe(%ecx), %rcx
	lwpval $0x12345678, 0xcafe(%edx), %rdx
	lwpval $0x12345678, 0xcafe(%ebx), %rbx
	lwpval $0x12345678, 0xcafe(%esp), %rsp
	lwpval $0x12345678, 0xcafe(%ebp), %rbp
	lwpval $0x12345678, 0xcafe(%esi), %rsi
	lwpval $0x12345678, 0xcafe(%edi), %rdi
@

