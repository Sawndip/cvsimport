head	1.2;
access;
symbols
	binutils-2_24-branch:1.2.0.4
	binutils-2_24-branchpoint:1.2
	binutils-2_23_2:1.2
	binutils-2_23_1:1.2
	binutils-2_23:1.2
	binutils-2_23-branch:1.2.0.2
	binutils-2_23-branchpoint:1.2
	binutils_latest_snapshot:1.2;
locks; strict;
comment	@# @;


1.2
date	2012.05.29.16.32.11;	author roland;	state Exp;
branches;
next	1.1;

1.1
date	2012.03.13.16.59.57;	author roland;	state Exp;
branches;
next	;


desc
@@


1.2
log
@gas/
	* read.c [HANDLE_BUNDLE] (bundle_lock_depth): New variable.
	(read_a_source_file) [HANDLE_BUNDLE]: Reset it.
	[HANDLE_BUNDLE] (s_bundle_lock, s_bundle_unlock): Allow nested
	pairs.

gas/testsuite/
	* gas/i386/bundle-bad.s: Remove nested .bundle_lock case.
	* gas/i386/bundle-bad.l: Remove expected error line.
	* gas/i386/bundle-lock.s: Add nested .bundle_lock case.
	* gas/i386/bundle-lock.d: Update expectations.
@
text
@	.bundle_align_mode 5

# We use these macros to test each pattern at every offset from
# bundle alignment, i.e. [0,31].

.macro offset_sequence size, offset
	.p2align 5
sequence_\size\()_offset_\offset\():
	.if \offset
	.space \offset, 0xf4
	.endif
	test_sequence \size
.endm

.macro test_offsets size
	offset_sequence \size, 0
	offset_sequence \size, 1
	offset_sequence \size, 2
	offset_sequence \size, 3
	offset_sequence \size, 4
	offset_sequence \size, 5
	offset_sequence \size, 6
	offset_sequence \size, 7
	offset_sequence \size, 8
	offset_sequence \size, 9
	offset_sequence \size, 10
	offset_sequence \size, 11
	offset_sequence \size, 12
	offset_sequence \size, 13
	offset_sequence \size, 14
	offset_sequence \size, 15
	offset_sequence \size, 16
	offset_sequence \size, 17
	offset_sequence \size, 18
	offset_sequence \size, 19
	offset_sequence \size, 20
	offset_sequence \size, 21
	offset_sequence \size, 22
	offset_sequence \size, 23
	offset_sequence \size, 24
	offset_sequence \size, 25
	offset_sequence \size, 26
	offset_sequence \size, 27
	offset_sequence \size, 28
	offset_sequence \size, 29
	offset_sequence \size, 30
	offset_sequence \size, 31
.endm

.macro test_sequence size
	.bundle_lock
	clc
	.rept \size - 1
	cld
	.endr
	.bundle_unlock
.endm

	test_offsets 1
	test_offsets 2
	test_offsets 3
	test_offsets 4
	test_offsets 5
	test_offsets 6
	test_offsets 7
	test_offsets 8
	test_offsets 9
	test_offsets 10
	test_offsets 11
	test_offsets 12
	test_offsets 13
	test_offsets 14
	test_offsets 15
	test_offsets 16
	test_offsets 17
	test_offsets 18
	test_offsets 19
	test_offsets 20
	test_offsets 21
	test_offsets 22
	test_offsets 23
	test_offsets 24
	test_offsets 25
	test_offsets 26
	test_offsets 27
	test_offsets 28
	test_offsets 29
	test_offsets 30
	test_offsets 31
	test_offsets 32

.p2align 5
	# Nested .bundle_lock.
	.bundle_lock
	clc
	.bundle_lock
	cld
	.bundle_unlock
	clc
	.bundle_unlock

.p2align 5
	hlt
@


1.1
log
@gas/
2012-03-12  Roland McGrath  <mcgrathr@@google.com>

	* config/tc-arm.c (arm_frag_max_var): New function.
	* config/tc-arm.h: Declare it.
	(md_frag_max_var): New macro.

	* config/tc-i386.c (i386_frag_max_var): New function.
	* config/tc-i386.h: Declare it.
	(md_frag_max_var): New macro.

	* doc/as.texinfo (Bundle directives): New node.
	(Pseudo Ops): Add it to the menu.
	* NEWS: Mention new feature.
	* read.c [md_frag_max_var] (HANDLE_BUNDLE): New macro.
	[HANDLE_BUNDLE] (bundle_align_p2): New variable.
	[HANDLE_BUNDLE] (bundle_lock_frchain, bundle_lock_frag): New variables.
	[HANDLE_BUNDLE] (start_bundle, pending_bundle_size, finish_bundle):
	New functions.
	(assemble_one): New function if [HANDLE_BUNDLE], #define directly
	to md_assembly if not.
	(read_a_source_file): Call assemble_one in place of md_assemble.
	(read_a_source_file) [HANDLE_BUNDLE]: Check for unterminated
	.bundle_lock at end of processing.
	[HANDLE_BUNDLE] (s_bundle_align_mode, s_bundle_lock, s_bundle_unlock):
	New functions.
	[HANDLE_BUNDLE] (potable): Add their entries.
	* read.h: Declare new functions.

gas/testsuite/
2012-03-12  Roland McGrath  <mcgrathr@@google.com>

	* gas/i386/bundle-bad.s: New file.
	* gas/i386/bundle-bad.d: New file.
	* gas/i386/bundle-bad.l: New file.
	* gas/i386/i386.exp: Run it.

	* gas/arm/bundle.s: New file.
	* gas/arm/bundle.d: New file.
	* gas/arm/bundle-lock.s: New file.
	* gas/arm/bundle-lock.d: New file.

	* gas/i386/bundle.s: New file.
	* gas/i386/bundle.d: New file.
	* gas/i386/x86-64-bundle.s: New file.
	* gas/i386/x86-64-bundle.d: New file.
	* gas/i386/bundle-lock.s: New file.
	* gas/i386/bundle-lock.d: New file.
	* gas/i386/i386.exp: Run them.
@
text
@d93 10
@

