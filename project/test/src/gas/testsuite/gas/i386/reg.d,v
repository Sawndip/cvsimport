head	1.1;
access;
symbols
	binutils-2_24-branch:1.1.0.20
	binutils-2_24-branchpoint:1.1
	binutils-2_21_1:1.1
	binutils-2_23_2:1.1
	binutils-2_23_1:1.1
	binutils-2_23:1.1
	binutils-2_23-branch:1.1.0.18
	binutils-2_23-branchpoint:1.1
	binutils-2_22_branch:1.1.0.16
	binutils-2_22:1.1
	binutils-2_22-branch:1.1.0.14
	binutils-2_22-branchpoint:1.1
	binutils-2_21:1.1
	binutils-2_21-branch:1.1.0.12
	binutils-2_21-branchpoint:1.1
	binutils-2_20_1:1.1
	binutils-2_20:1.1
	binutils-arc-20081103-branch:1.1.0.10
	binutils-arc-20081103-branchpoint:1.1
	binutils-2_20-branch:1.1.0.8
	binutils-2_20-branchpoint:1.1
	dje-cgen-play1-branch:1.1.0.6
	dje-cgen-play1-branchpoint:1.1
	arc-20081103-branch:1.1.0.4
	arc-20081103-branchpoint:1.1
	binutils-2_19_1:1.1
	binutils-2_19:1.1
	binutils-2_19-branch:1.1.0.2
	binutils-2_19-branchpoint:1.1
	binutils_latest_snapshot:1.1;
locks; strict;
comment	@# @;


1.1
date	2007.08.29.15.34.41;	author hjl;	state Exp;
branches;
next	;


desc
@@


1.1
log
@gas/testsuite/

2007-08-29  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/i386.exp: Run reg and reg-intel.

	* gas/i386/katmai.d: Update bad instructions.

	* gas/i386/reg.s: New. Add tests for instructions with one
	register operand.
	* gas/i386/reg-intel.d: Likewise.
	* gas/i386/reg.d: Likewise.

opcodes/

2007-08-29  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386-dis.c (OP_Skip_MODRM): New.
	(OP_Monitor): Likewise.
	(OP_Mwait): Likewise.
	(Mb): Likewise.
	(Skip_MODRM): Likewise.
	(USE_OPC_EXT_TABLE): Likewise.
	(USE_OPC_EXT_RM_TABLE): Likewise.
	(PREGRP98...PREGRP100): Likewise.
	(OPC_EXT_0...OPC_EXT_24): Likewise.
	(OPC_EXT_RM_0...OPC_EXT_RM_4): Likewise.
	(lock_prefix): Likewise.
	(data_prefix): Likewise.
	(addr_prefix): Likewise.
	(repz_prefix): Likewise.
	(repnz_prefix): Likewise.
	(opc_ext_table): Likewise.
	(opc_ext_rm_table): Likewise.
	(get_valid_dis386): Likewise.
	(OP_VMX): Removed.
	(OP_0fae): Likewise.
	(PNI_Fixup): Likewise.
	(VMX_Fixup): Likewise.
	(VM): Likewise.
	(twobyte_uses_DATA_prefix): Likewise.
	(twobyte_uses_REPNZ_prefix): Likewise.
	(twobyte_uses_REPZ_prefix): Likewise.
	(threebyte_0x38_uses_DATA_prefix): Likewise.
	(threebyte_0x38_uses_REPNZ_prefix): Likewise.
	(threebyte_0x38_uses_REPZ_prefix): Likewise.
	(threebyte_0x3a_uses_DATA_prefix): Likewise.
	(threebyte_0x3a_uses_REPNZ_prefix): Likewise.
	(threebyte_0x3a_uses_REPZ_prefix): Likewise.
	(grps): Use OPC_EXT_0...OPC_EXT_24.
	(prefix_user_table): Use PREGRP98.
	(print_insn): Remove uses_DATA_prefix, uses_LOCK_prefix,
	uses_REPNZ_prefix and uses_REPZ_prefix.  Initialize
	repz_prefix, repnz_prefix, lock_prefix, addr_prefix and
	data_prefix based on prefixes.  Call get_valid_dis386 to
	get a pointer to the valid dis386.  Print out prefixes if
	they aren't NULL.
	(OP_C): Clear lock_prefix if PREFIX_LOCK is used.
	(REP_Fixup): Set repz_prefix to "rep " when seeing
	PREFIX_REPZ.
@
text
@#objdump: -dw
#name: i386 reg

.*:     file format .*

Disassembly of section .text:

0+ <_start>:
[ 	]*[a-f0-9]+:	0f 71 d6 02          	psrlw  \$0x2,%mm6
[ 	]*[a-f0-9]+:	66 0f 71 d6 02       	psrlw  \$0x2,%xmm6
[ 	]*[a-f0-9]+:	0f 71 e6 02          	psraw  \$0x2,%mm6
[ 	]*[a-f0-9]+:	66 0f 71 e6 02       	psraw  \$0x2,%xmm6
[ 	]*[a-f0-9]+:	0f 71 f6 02          	psllw  \$0x2,%mm6
[ 	]*[a-f0-9]+:	66 0f 71 f6 02       	psllw  \$0x2,%xmm6
[ 	]*[a-f0-9]+:	0f 72 d6 02          	psrld  \$0x2,%mm6
[ 	]*[a-f0-9]+:	66 0f 72 d6 02       	psrld  \$0x2,%xmm6
[ 	]*[a-f0-9]+:	0f 72 e6 02          	psrad  \$0x2,%mm6
[ 	]*[a-f0-9]+:	66 0f 72 e6 02       	psrad  \$0x2,%xmm6
[ 	]*[a-f0-9]+:	0f 72 f6 02          	pslld  \$0x2,%mm6
[ 	]*[a-f0-9]+:	66 0f 72 f6 02       	pslld  \$0x2,%xmm6
[ 	]*[a-f0-9]+:	0f 73 d6 02          	psrlq  \$0x2,%mm6
[ 	]*[a-f0-9]+:	66 0f 73 d6 02       	psrlq  \$0x2,%xmm6
[ 	]*[a-f0-9]+:	66 0f 73 de 02       	psrldq \$0x2,%xmm6
[ 	]*[a-f0-9]+:	0f 73 f6 02          	psllq  \$0x2,%mm6
[ 	]*[a-f0-9]+:	66 0f 73 f6 02       	psllq  \$0x2,%xmm6
[ 	]*[a-f0-9]+:	66 0f 73 fe 02       	pslldq \$0x2,%xmm6
[ 	]*[a-f0-9]+:	0f 71 d6 02          	psrlw  \$0x2,%mm6
[ 	]*[a-f0-9]+:	66 0f 71 d6 02       	psrlw  \$0x2,%xmm6
[ 	]*[a-f0-9]+:	0f 71 e6 02          	psraw  \$0x2,%mm6
[ 	]*[a-f0-9]+:	66 0f 71 e6 02       	psraw  \$0x2,%xmm6
[ 	]*[a-f0-9]+:	0f 71 f6 02          	psllw  \$0x2,%mm6
[ 	]*[a-f0-9]+:	66 0f 71 f6 02       	psllw  \$0x2,%xmm6
[ 	]*[a-f0-9]+:	0f 72 d6 02          	psrld  \$0x2,%mm6
[ 	]*[a-f0-9]+:	66 0f 72 d6 02       	psrld  \$0x2,%xmm6
[ 	]*[a-f0-9]+:	0f 72 e6 02          	psrad  \$0x2,%mm6
[ 	]*[a-f0-9]+:	66 0f 72 e6 02       	psrad  \$0x2,%xmm6
[ 	]*[a-f0-9]+:	0f 72 f6 02          	pslld  \$0x2,%mm6
[ 	]*[a-f0-9]+:	66 0f 72 f6 02       	pslld  \$0x2,%xmm6
[ 	]*[a-f0-9]+:	0f 73 d6 02          	psrlq  \$0x2,%mm6
[ 	]*[a-f0-9]+:	66 0f 73 d6 02       	psrlq  \$0x2,%xmm6
[ 	]*[a-f0-9]+:	66 0f 73 de 02       	psrldq \$0x2,%xmm6
[ 	]*[a-f0-9]+:	0f 73 f6 02          	psllq  \$0x2,%mm6
[ 	]*[a-f0-9]+:	66 0f 73 f6 02       	psllq  \$0x2,%xmm6
[ 	]*[a-f0-9]+:	66 0f 73 fe 02       	pslldq \$0x2,%xmm6
#pass
@
