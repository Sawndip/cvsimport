head	1.3;
access;
symbols
	binutils-2_24-branch:1.3.0.14
	binutils-2_24-branchpoint:1.3
	binutils-2_21_1:1.3
	binutils-2_23_2:1.3
	binutils-2_23_1:1.3
	binutils-2_23:1.3
	binutils-2_23-branch:1.3.0.12
	binutils-2_23-branchpoint:1.3
	binutils-2_22_branch:1.3.0.10
	binutils-2_22:1.3
	binutils-2_22-branch:1.3.0.8
	binutils-2_22-branchpoint:1.3
	binutils-2_21:1.3
	binutils-2_21-branch:1.3.0.6
	binutils-2_21-branchpoint:1.3
	binutils-2_20_1:1.3
	binutils-2_20:1.3
	binutils-2_20-branch:1.3.0.4
	binutils-2_20-branchpoint:1.3
	dje-cgen-play1-branch:1.3.0.2
	dje-cgen-play1-branchpoint:1.3
	binutils_latest_snapshot:1.3;
locks; strict;
comment	@# @;


1.3
date	2009.01.12.16.53.08;	author hjl;	state Exp;
branches;
next	1.2;

1.2
date	2008.12.23.15.14.15;	author hjl;	state Exp;
branches;
next	1.1;

1.1
date	2008.12.20.17.40.51;	author hjl;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update gas/i386/sse2avx-opts.d, gas/i386/sse2avx-opts-intel.d,
gas/i386/x86-64-sse2avx-opts.d and gas/i386/x86-64-sse2avx-opts-intel.d.
@
text
@#as: -msse2avx
#objdump: -drwMintel,suffix
#name: x86-64 encoding option with -msse2avx (Intel mode)
#source: x86-64-opts.s

.*: +file format .*


Disassembly of section .text:

0+ <_start>:
[ 	]*[a-f0-9]+:	00 d1                	add    cl,dl
[ 	]*[a-f0-9]+:	02 ca                	add.s cl,dl
[ 	]*[a-f0-9]+:	66 01 d1             	add    cx,dx
[ 	]*[a-f0-9]+:	66 03 ca             	add.s cx,dx
[ 	]*[a-f0-9]+:	01 d1                	add    ecx,edx
[ 	]*[a-f0-9]+:	03 ca                	add.s ecx,edx
[ 	]*[a-f0-9]+:	00 d1                	add    cl,dl
[ 	]*[a-f0-9]+:	02 ca                	add.s cl,dl
[ 	]*[a-f0-9]+:	66 01 d1             	add    cx,dx
[ 	]*[a-f0-9]+:	66 03 ca             	add.s cx,dx
[ 	]*[a-f0-9]+:	01 d1                	add    ecx,edx
[ 	]*[a-f0-9]+:	03 ca                	add.s ecx,edx
[ 	]*[a-f0-9]+:	48 01 d1             	add    rcx,rdx
[ 	]*[a-f0-9]+:	48 03 ca             	add.s rcx,rdx
[ 	]*[a-f0-9]+:	48 01 d1             	add    rcx,rdx
[ 	]*[a-f0-9]+:	48 03 ca             	add.s rcx,rdx
[ 	]*[a-f0-9]+:	10 d1                	adc    cl,dl
[ 	]*[a-f0-9]+:	12 ca                	adc.s cl,dl
[ 	]*[a-f0-9]+:	66 11 d1             	adc    cx,dx
[ 	]*[a-f0-9]+:	66 13 ca             	adc.s cx,dx
[ 	]*[a-f0-9]+:	11 d1                	adc    ecx,edx
[ 	]*[a-f0-9]+:	13 ca                	adc.s ecx,edx
[ 	]*[a-f0-9]+:	10 d1                	adc    cl,dl
[ 	]*[a-f0-9]+:	12 ca                	adc.s cl,dl
[ 	]*[a-f0-9]+:	66 11 d1             	adc    cx,dx
[ 	]*[a-f0-9]+:	66 13 ca             	adc.s cx,dx
[ 	]*[a-f0-9]+:	11 d1                	adc    ecx,edx
[ 	]*[a-f0-9]+:	13 ca                	adc.s ecx,edx
[ 	]*[a-f0-9]+:	48 11 d1             	adc    rcx,rdx
[ 	]*[a-f0-9]+:	48 13 ca             	adc.s rcx,rdx
[ 	]*[a-f0-9]+:	48 11 d1             	adc    rcx,rdx
[ 	]*[a-f0-9]+:	48 13 ca             	adc.s rcx,rdx
[ 	]*[a-f0-9]+:	20 d1                	and    cl,dl
[ 	]*[a-f0-9]+:	22 ca                	and.s cl,dl
[ 	]*[a-f0-9]+:	66 21 d1             	and    cx,dx
[ 	]*[a-f0-9]+:	66 23 ca             	and.s cx,dx
[ 	]*[a-f0-9]+:	21 d1                	and    ecx,edx
[ 	]*[a-f0-9]+:	23 ca                	and.s ecx,edx
[ 	]*[a-f0-9]+:	20 d1                	and    cl,dl
[ 	]*[a-f0-9]+:	22 ca                	and.s cl,dl
[ 	]*[a-f0-9]+:	66 21 d1             	and    cx,dx
[ 	]*[a-f0-9]+:	66 23 ca             	and.s cx,dx
[ 	]*[a-f0-9]+:	21 d1                	and    ecx,edx
[ 	]*[a-f0-9]+:	23 ca                	and.s ecx,edx
[ 	]*[a-f0-9]+:	48 21 d1             	and    rcx,rdx
[ 	]*[a-f0-9]+:	48 23 ca             	and.s rcx,rdx
[ 	]*[a-f0-9]+:	48 21 d1             	and    rcx,rdx
[ 	]*[a-f0-9]+:	48 23 ca             	and.s rcx,rdx
[ 	]*[a-f0-9]+:	38 d1                	cmp    cl,dl
[ 	]*[a-f0-9]+:	3a ca                	cmp.s cl,dl
[ 	]*[a-f0-9]+:	66 39 d1             	cmp    cx,dx
[ 	]*[a-f0-9]+:	66 3b ca             	cmp.s cx,dx
[ 	]*[a-f0-9]+:	39 d1                	cmp    ecx,edx
[ 	]*[a-f0-9]+:	3b ca                	cmp.s ecx,edx
[ 	]*[a-f0-9]+:	38 d1                	cmp    cl,dl
[ 	]*[a-f0-9]+:	3a ca                	cmp.s cl,dl
[ 	]*[a-f0-9]+:	66 39 d1             	cmp    cx,dx
[ 	]*[a-f0-9]+:	66 3b ca             	cmp.s cx,dx
[ 	]*[a-f0-9]+:	39 d1                	cmp    ecx,edx
[ 	]*[a-f0-9]+:	3b ca                	cmp.s ecx,edx
[ 	]*[a-f0-9]+:	48 39 d1             	cmp    rcx,rdx
[ 	]*[a-f0-9]+:	48 3b ca             	cmp.s rcx,rdx
[ 	]*[a-f0-9]+:	48 39 d1             	cmp    rcx,rdx
[ 	]*[a-f0-9]+:	48 3b ca             	cmp.s rcx,rdx
[ 	]*[a-f0-9]+:	88 d1                	mov    cl,dl
[ 	]*[a-f0-9]+:	8a ca                	mov.s cl,dl
[ 	]*[a-f0-9]+:	66 89 d1             	mov    cx,dx
[ 	]*[a-f0-9]+:	66 8b ca             	mov.s cx,dx
[ 	]*[a-f0-9]+:	89 d1                	mov    ecx,edx
[ 	]*[a-f0-9]+:	8b ca                	mov.s ecx,edx
[ 	]*[a-f0-9]+:	88 d1                	mov    cl,dl
[ 	]*[a-f0-9]+:	8a ca                	mov.s cl,dl
[ 	]*[a-f0-9]+:	66 89 d1             	mov    cx,dx
[ 	]*[a-f0-9]+:	66 8b ca             	mov.s cx,dx
[ 	]*[a-f0-9]+:	89 d1                	mov    ecx,edx
[ 	]*[a-f0-9]+:	8b ca                	mov.s ecx,edx
[ 	]*[a-f0-9]+:	48 89 d1             	mov    rcx,rdx
[ 	]*[a-f0-9]+:	48 8b ca             	mov.s rcx,rdx
[ 	]*[a-f0-9]+:	48 89 d1             	mov    rcx,rdx
[ 	]*[a-f0-9]+:	48 8b ca             	mov.s rcx,rdx
[ 	]*[a-f0-9]+:	08 d1                	or     cl,dl
[ 	]*[a-f0-9]+:	0a ca                	or.s cl,dl
[ 	]*[a-f0-9]+:	66 09 d1             	or     cx,dx
[ 	]*[a-f0-9]+:	66 0b ca             	or.s cx,dx
[ 	]*[a-f0-9]+:	09 d1                	or     ecx,edx
[ 	]*[a-f0-9]+:	0b ca                	or.s ecx,edx
[ 	]*[a-f0-9]+:	08 d1                	or     cl,dl
[ 	]*[a-f0-9]+:	0a ca                	or.s cl,dl
[ 	]*[a-f0-9]+:	66 09 d1             	or     cx,dx
[ 	]*[a-f0-9]+:	66 0b ca             	or.s cx,dx
[ 	]*[a-f0-9]+:	09 d1                	or     ecx,edx
[ 	]*[a-f0-9]+:	0b ca                	or.s ecx,edx
[ 	]*[a-f0-9]+:	48 09 d1             	or     rcx,rdx
[ 	]*[a-f0-9]+:	48 0b ca             	or.s rcx,rdx
[ 	]*[a-f0-9]+:	48 09 d1             	or     rcx,rdx
[ 	]*[a-f0-9]+:	48 0b ca             	or.s rcx,rdx
[ 	]*[a-f0-9]+:	18 d1                	sbb    cl,dl
[ 	]*[a-f0-9]+:	1a ca                	sbb.s cl,dl
[ 	]*[a-f0-9]+:	66 19 d1             	sbb    cx,dx
[ 	]*[a-f0-9]+:	66 1b ca             	sbb.s cx,dx
[ 	]*[a-f0-9]+:	19 d1                	sbb    ecx,edx
[ 	]*[a-f0-9]+:	1b ca                	sbb.s ecx,edx
[ 	]*[a-f0-9]+:	18 d1                	sbb    cl,dl
[ 	]*[a-f0-9]+:	1a ca                	sbb.s cl,dl
[ 	]*[a-f0-9]+:	66 19 d1             	sbb    cx,dx
[ 	]*[a-f0-9]+:	66 1b ca             	sbb.s cx,dx
[ 	]*[a-f0-9]+:	19 d1                	sbb    ecx,edx
[ 	]*[a-f0-9]+:	1b ca                	sbb.s ecx,edx
[ 	]*[a-f0-9]+:	48 19 d1             	sbb    rcx,rdx
[ 	]*[a-f0-9]+:	48 1b ca             	sbb.s rcx,rdx
[ 	]*[a-f0-9]+:	48 19 d1             	sbb    rcx,rdx
[ 	]*[a-f0-9]+:	48 1b ca             	sbb.s rcx,rdx
[ 	]*[a-f0-9]+:	28 d1                	sub    cl,dl
[ 	]*[a-f0-9]+:	2a ca                	sub.s cl,dl
[ 	]*[a-f0-9]+:	66 29 d1             	sub    cx,dx
[ 	]*[a-f0-9]+:	66 2b ca             	sub.s cx,dx
[ 	]*[a-f0-9]+:	29 d1                	sub    ecx,edx
[ 	]*[a-f0-9]+:	2b ca                	sub.s ecx,edx
[ 	]*[a-f0-9]+:	28 d1                	sub    cl,dl
[ 	]*[a-f0-9]+:	2a ca                	sub.s cl,dl
[ 	]*[a-f0-9]+:	66 29 d1             	sub    cx,dx
[ 	]*[a-f0-9]+:	66 2b ca             	sub.s cx,dx
[ 	]*[a-f0-9]+:	29 d1                	sub    ecx,edx
[ 	]*[a-f0-9]+:	2b ca                	sub.s ecx,edx
[ 	]*[a-f0-9]+:	48 29 d1             	sub    rcx,rdx
[ 	]*[a-f0-9]+:	48 2b ca             	sub.s rcx,rdx
[ 	]*[a-f0-9]+:	48 29 d1             	sub    rcx,rdx
[ 	]*[a-f0-9]+:	48 2b ca             	sub.s rcx,rdx
[ 	]*[a-f0-9]+:	30 d1                	xor    cl,dl
[ 	]*[a-f0-9]+:	32 ca                	xor.s cl,dl
[ 	]*[a-f0-9]+:	66 31 d1             	xor    cx,dx
[ 	]*[a-f0-9]+:	66 33 ca             	xor.s cx,dx
[ 	]*[a-f0-9]+:	31 d1                	xor    ecx,edx
[ 	]*[a-f0-9]+:	33 ca                	xor.s ecx,edx
[ 	]*[a-f0-9]+:	30 d1                	xor    cl,dl
[ 	]*[a-f0-9]+:	32 ca                	xor.s cl,dl
[ 	]*[a-f0-9]+:	66 31 d1             	xor    cx,dx
[ 	]*[a-f0-9]+:	66 33 ca             	xor.s cx,dx
[ 	]*[a-f0-9]+:	31 d1                	xor    ecx,edx
[ 	]*[a-f0-9]+:	33 ca                	xor.s ecx,edx
[ 	]*[a-f0-9]+:	48 31 d1             	xor    rcx,rdx
[ 	]*[a-f0-9]+:	48 33 ca             	xor.s rcx,rdx
[ 	]*[a-f0-9]+:	48 31 d1             	xor    rcx,rdx
[ 	]*[a-f0-9]+:	48 33 ca             	xor.s rcx,rdx
[ 	]*[a-f0-9]+:	c5 fd 28 f4          	vmovapd ymm6,ymm4
[ 	]*[a-f0-9]+:	c5 fd 29 e6          	vmovapd.s ymm6,ymm4
[ 	]*[a-f0-9]+:	c5 fc 28 f4          	vmovaps ymm6,ymm4
[ 	]*[a-f0-9]+:	c5 fc 29 e6          	vmovaps.s ymm6,ymm4
[ 	]*[a-f0-9]+:	c5 fd 6f f4          	vmovdqa ymm6,ymm4
[ 	]*[a-f0-9]+:	c5 fd 7f e6          	vmovdqa.s ymm6,ymm4
[ 	]*[a-f0-9]+:	c5 fe 6f f4          	vmovdqu ymm6,ymm4
[ 	]*[a-f0-9]+:	c5 fe 7f e6          	vmovdqu.s ymm6,ymm4
[ 	]*[a-f0-9]+:	c5 fd 10 f4          	vmovupd ymm6,ymm4
[ 	]*[a-f0-9]+:	c5 fd 11 e6          	vmovupd.s ymm6,ymm4
[ 	]*[a-f0-9]+:	c5 fc 10 f4          	vmovups ymm6,ymm4
[ 	]*[a-f0-9]+:	c5 fc 11 e6          	vmovups.s ymm6,ymm4
[ 	]*[a-f0-9]+:	c5 f9 28 f4          	vmovapd xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f9 29 e6          	vmovapd.s xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f8 28 f4          	vmovaps xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f8 29 e6          	vmovaps.s xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f9 6f f4          	vmovdqa xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f9 7f e6          	vmovdqa.s xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 fa 6f f4          	vmovdqu xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 fa 7f e6          	vmovdqu.s xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 fa 7e f4          	vmovq  xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f9 d6 e6          	vmovq.s xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 cb 10 f4          	vmovsd xmm6,xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 cb 11 e6          	vmovsd.s xmm6,xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 ca 10 f4          	vmovss xmm6,xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 ca 11 e6          	vmovss.s xmm6,xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f9 10 f4          	vmovupd xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f9 11 e6          	vmovupd.s xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f8 10 f4          	vmovups xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f8 11 e6          	vmovups.s xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f9 28 f4          	vmovapd xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f9 29 e6          	vmovapd.s xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f8 28 f4          	vmovaps xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f8 29 e6          	vmovaps.s xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f9 6f f4          	vmovdqa xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f9 7f e6          	vmovdqa.s xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 fa 6f f4          	vmovdqu xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 fa 7f e6          	vmovdqu.s xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 fa 7e f4          	vmovq  xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f9 d6 e6          	vmovq.s xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f9 10 f4          	vmovupd xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f9 11 e6          	vmovupd.s xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f8 10 f4          	vmovups xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f8 11 e6          	vmovups.s xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 cb 10 d4          	vmovsd xmm2,xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 cb 11 e2          	vmovsd.s xmm2,xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 ca 10 d4          	vmovss xmm2,xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 ca 11 e2          	vmovss.s xmm2,xmm6,xmm4
[ 	]*[a-f0-9]+:	0f 6f e0             	movq   mm4,mm0
[ 	]*[a-f0-9]+:	0f 7f c4             	movq.s mm4,mm0
[ 	]*[a-f0-9]+:	00 d1                	add    cl,dl
[ 	]*[a-f0-9]+:	02 ca                	add.s cl,dl
[ 	]*[a-f0-9]+:	66 01 d1             	add    cx,dx
[ 	]*[a-f0-9]+:	66 03 ca             	add.s cx,dx
[ 	]*[a-f0-9]+:	01 d1                	add    ecx,edx
[ 	]*[a-f0-9]+:	03 ca                	add.s ecx,edx
[ 	]*[a-f0-9]+:	48 01 d1             	add    rcx,rdx
[ 	]*[a-f0-9]+:	48 03 ca             	add.s rcx,rdx
[ 	]*[a-f0-9]+:	10 d1                	adc    cl,dl
[ 	]*[a-f0-9]+:	12 ca                	adc.s cl,dl
[ 	]*[a-f0-9]+:	66 11 d1             	adc    cx,dx
[ 	]*[a-f0-9]+:	66 13 ca             	adc.s cx,dx
[ 	]*[a-f0-9]+:	11 d1                	adc    ecx,edx
[ 	]*[a-f0-9]+:	13 ca                	adc.s ecx,edx
[ 	]*[a-f0-9]+:	48 11 d1             	adc    rcx,rdx
[ 	]*[a-f0-9]+:	48 13 ca             	adc.s rcx,rdx
[ 	]*[a-f0-9]+:	20 d1                	and    cl,dl
[ 	]*[a-f0-9]+:	22 ca                	and.s cl,dl
[ 	]*[a-f0-9]+:	66 21 d1             	and    cx,dx
[ 	]*[a-f0-9]+:	66 23 ca             	and.s cx,dx
[ 	]*[a-f0-9]+:	21 d1                	and    ecx,edx
[ 	]*[a-f0-9]+:	23 ca                	and.s ecx,edx
[ 	]*[a-f0-9]+:	48 21 d1             	and    rcx,rdx
[ 	]*[a-f0-9]+:	48 23 ca             	and.s rcx,rdx
[ 	]*[a-f0-9]+:	38 d1                	cmp    cl,dl
[ 	]*[a-f0-9]+:	3a ca                	cmp.s cl,dl
[ 	]*[a-f0-9]+:	66 39 d1             	cmp    cx,dx
[ 	]*[a-f0-9]+:	66 3b ca             	cmp.s cx,dx
[ 	]*[a-f0-9]+:	39 d1                	cmp    ecx,edx
[ 	]*[a-f0-9]+:	3b ca                	cmp.s ecx,edx
[ 	]*[a-f0-9]+:	48 39 d1             	cmp    rcx,rdx
[ 	]*[a-f0-9]+:	48 3b ca             	cmp.s rcx,rdx
[ 	]*[a-f0-9]+:	88 d1                	mov    cl,dl
[ 	]*[a-f0-9]+:	8a ca                	mov.s cl,dl
[ 	]*[a-f0-9]+:	66 89 d1             	mov    cx,dx
[ 	]*[a-f0-9]+:	66 8b ca             	mov.s cx,dx
[ 	]*[a-f0-9]+:	89 d1                	mov    ecx,edx
[ 	]*[a-f0-9]+:	8b ca                	mov.s ecx,edx
[ 	]*[a-f0-9]+:	48 89 d1             	mov    rcx,rdx
[ 	]*[a-f0-9]+:	48 8b ca             	mov.s rcx,rdx
[ 	]*[a-f0-9]+:	08 d1                	or     cl,dl
[ 	]*[a-f0-9]+:	0a ca                	or.s cl,dl
[ 	]*[a-f0-9]+:	66 09 d1             	or     cx,dx
[ 	]*[a-f0-9]+:	66 0b ca             	or.s cx,dx
[ 	]*[a-f0-9]+:	09 d1                	or     ecx,edx
[ 	]*[a-f0-9]+:	0b ca                	or.s ecx,edx
[ 	]*[a-f0-9]+:	48 09 d1             	or     rcx,rdx
[ 	]*[a-f0-9]+:	48 0b ca             	or.s rcx,rdx
[ 	]*[a-f0-9]+:	18 d1                	sbb    cl,dl
[ 	]*[a-f0-9]+:	1a ca                	sbb.s cl,dl
[ 	]*[a-f0-9]+:	66 19 d1             	sbb    cx,dx
[ 	]*[a-f0-9]+:	66 1b ca             	sbb.s cx,dx
[ 	]*[a-f0-9]+:	19 d1                	sbb    ecx,edx
[ 	]*[a-f0-9]+:	1b ca                	sbb.s ecx,edx
[ 	]*[a-f0-9]+:	48 19 d1             	sbb    rcx,rdx
[ 	]*[a-f0-9]+:	48 1b ca             	sbb.s rcx,rdx
[ 	]*[a-f0-9]+:	28 d1                	sub    cl,dl
[ 	]*[a-f0-9]+:	2a ca                	sub.s cl,dl
[ 	]*[a-f0-9]+:	66 29 d1             	sub    cx,dx
[ 	]*[a-f0-9]+:	66 2b ca             	sub.s cx,dx
[ 	]*[a-f0-9]+:	29 d1                	sub    ecx,edx
[ 	]*[a-f0-9]+:	2b ca                	sub.s ecx,edx
[ 	]*[a-f0-9]+:	48 29 d1             	sub    rcx,rdx
[ 	]*[a-f0-9]+:	48 2b ca             	sub.s rcx,rdx
[ 	]*[a-f0-9]+:	30 d1                	xor    cl,dl
[ 	]*[a-f0-9]+:	32 ca                	xor.s cl,dl
[ 	]*[a-f0-9]+:	66 31 d1             	xor    cx,dx
[ 	]*[a-f0-9]+:	66 33 ca             	xor.s cx,dx
[ 	]*[a-f0-9]+:	31 d1                	xor    ecx,edx
[ 	]*[a-f0-9]+:	33 ca                	xor.s ecx,edx
[ 	]*[a-f0-9]+:	48 31 d1             	xor    rcx,rdx
[ 	]*[a-f0-9]+:	48 33 ca             	xor.s rcx,rdx
[ 	]*[a-f0-9]+:	c5 fd 28 f4          	vmovapd ymm6,ymm4
[ 	]*[a-f0-9]+:	c5 fd 29 e6          	vmovapd.s ymm6,ymm4
[ 	]*[a-f0-9]+:	c5 fc 28 f4          	vmovaps ymm6,ymm4
[ 	]*[a-f0-9]+:	c5 fc 29 e6          	vmovaps.s ymm6,ymm4
[ 	]*[a-f0-9]+:	c5 fd 6f f4          	vmovdqa ymm6,ymm4
[ 	]*[a-f0-9]+:	c5 fd 7f e6          	vmovdqa.s ymm6,ymm4
[ 	]*[a-f0-9]+:	c5 fe 6f f4          	vmovdqu ymm6,ymm4
[ 	]*[a-f0-9]+:	c5 fe 7f e6          	vmovdqu.s ymm6,ymm4
[ 	]*[a-f0-9]+:	c5 fd 10 f4          	vmovupd ymm6,ymm4
[ 	]*[a-f0-9]+:	c5 fd 11 e6          	vmovupd.s ymm6,ymm4
[ 	]*[a-f0-9]+:	c5 fc 10 f4          	vmovups ymm6,ymm4
[ 	]*[a-f0-9]+:	c5 fc 11 e6          	vmovups.s ymm6,ymm4
[ 	]*[a-f0-9]+:	c5 f9 28 f4          	vmovapd xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f9 29 e6          	vmovapd.s xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f8 28 f4          	vmovaps xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f8 29 e6          	vmovaps.s xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f9 6f f4          	vmovdqa xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f9 7f e6          	vmovdqa.s xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 fa 6f f4          	vmovdqu xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 fa 7f e6          	vmovdqu.s xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 fa 7e f4          	vmovq  xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f9 d6 e6          	vmovq.s xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 cb 10 f4          	vmovsd xmm6,xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 cb 11 e6          	vmovsd.s xmm6,xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 ca 10 f4          	vmovss xmm6,xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 ca 11 e6          	vmovss.s xmm6,xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f9 10 f4          	vmovupd xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f9 11 e6          	vmovupd.s xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f8 10 f4          	vmovups xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f8 11 e6          	vmovups.s xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f9 28 f4          	vmovapd xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f9 29 e6          	vmovapd.s xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f8 28 f4          	vmovaps xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f8 29 e6          	vmovaps.s xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f9 6f f4          	vmovdqa xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f9 7f e6          	vmovdqa.s xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 fa 6f f4          	vmovdqu xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 fa 7f e6          	vmovdqu.s xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 fa 7e f4          	vmovq  xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f9 d6 e6          	vmovq.s xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f9 10 f4          	vmovupd xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f9 11 e6          	vmovupd.s xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f8 10 f4          	vmovups xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 f8 11 e6          	vmovups.s xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 cb 10 d4          	vmovsd xmm2,xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 cb 11 e2          	vmovsd.s xmm2,xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 ca 10 d4          	vmovss xmm2,xmm6,xmm4
[ 	]*[a-f0-9]+:	c5 ca 11 e2          	vmovss.s xmm2,xmm6,xmm4
[ 	]*[a-f0-9]+:	0f 6f e0             	movq   mm4,mm0
[ 	]*[a-f0-9]+:	0f 7f c4             	movq.s mm4,mm0
#pass
@


1.2
log
@gas/

2008-12-23  H.J. Lu  <hongjiu.lu@@intel.com>

	* config/tc-i386.c (match_template): Changed to return
	 const template *.  Handle i.swap_operand for 3 operands.
	 (build_vex_prefix): Take const template *.  Swap operand for
	 2-byte VEX prefix if possible.
	 (md_assemble): Updated.
	 (build_modrm_byte): Handle RegMem bit for SSE2AVX.

gas/testsuite/

2008-12-23  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/i386.exp: Run x86-64-avx-swap and x86-64-avx-swap-intel.

	* gas/i386/opts.s: Add tests for movsd, movss, vmovsd and
	vmovss.
	* gas/i386/x86-64-opts.s: Likewise.

	* gas/i386/opts.d: Updated.
	* gas/i386/opts-intel.d: Likewise.
	* gas/i386/sse2avx-opts.d: Likewise.
	* gas/i386/sse2avx-opts-intel.d: Likewise.
	* gas/i386/x86-64-opts.d: Likewise.
	* gas/i386/x86-64-opts-intel.d: Likewise.
	* gas/i386/x86-64-sse2avx-opts.d: Likewise.
	* gas/i386/x86-64-sse2avx-opts-intel.d: Likewise.

	* gas/i386/x86-64-avx-swap.d: New.
	* gas/i386/x86-64-avx-swap.s: Likewise.
	* gas/i386/x86-64-avx-swap-intel.d: Likewise.

opcodes/

2008-12-23  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386-dis.c (EXdS): New.
	(EXdVexS): Likewise.
	(EXqVexS): Likewise.
	(d_swap_mode): Likewise.
	(q_mode): Updated.
	(prefix_table): Use EXdS on movss and EXqS on movsd.
	(vex_len_table): Use EXdVexS on vmovss and EXqVexS on vmovsd.
	(intel_operand_size): Handle d_swap_mode.
	(OP_EX): Likewise.

	* i386-opc.h (S): Update comments.

	* i386-opc.tbl: Add S to movss, movsd, vmovss and vmovsd.
	* i386-tbl.h: Regenerated.
@
text
@d12 64
d92 64
d206 32
d246 32
@


1.1
log
@gas/

2008-12-20  H.J. Lu  <hongjiu.lu@@intel.com>

	* config/tc-i386.c (_i386_insn): Add swap_operand.
	(parse_insn): Handle ".s".
	(match_template): Handle swap_operand.

	* doc/c-i386.texi: Document .s suffix.

gas/testsuite/

2008-12-20  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/i386.exp: Run opts, opts-intel, sse2avx-opts,
	sse2avx-opts-intel, x86-64-opts, x86-64-opts-intel,
	x86-64-sse2avx-opts and x86-64-sse2avx-opts-intel.

	* gas/i386/opts.d: New.
	* gas/i386/opts-intel.d: Likewise.
	* gas/i386/opts.s: Likewise.
	* gas/i386/sse2avx-opts.d: Likewise.
	* gas/i386/sse2avx-opts-intel.d: Likewise.
	* gas/i386/x86-64-opts.d: Likewise.
	* gas/i386/x86-64-opts-intel.d: Likewise.
	* gas/i386/x86-64-opts.s: Likewise.
	* gas/i386/x86-64-sse2avx-opts.d: Likewise.
	* gas/i386/x86-64-sse2avx-opts-intel.d: Likewise.

opcodes/

2008-12-20  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386-dis.c (EbS): New.
	(EvS): Likewise.
	(EMS): Likewise.
	(EXqS): Likewise.
	(EXxS): Likewise.
	(b_swap_mode): Likewise.
	(v_swap_mode): Likewise.
	(q_swap_mode): Likewise.
	(x_swap_mode): Likewise.
	(v_mode): Updated.
	(w_mode): Likewise.
	(t_mode): Likewise.
	(xmm_mode): Likewise.
	(swap_operand): Likewise.
	(dis386): Use EbS on movB.  Use EvS on moveS.
	(dis386_twobyte): Use EXxS on movapX.
	(prefix_table): Use EXxS on movups, movupd, movdqu, movdqa,
	vmovups, vmovdqu, vmovdqa. Use EMS and EXqS on movq.
	(vex_table): Use EXxS on vmovapX.
	(vex_len_table): Use EXqS on vmovq.
	(intel_operand_size): Handle b_swap_mode, v_swap_mode,
	q_swap_mode and x_swap_mode.
	(OP_E_register): Handle b_swap_mode and v_swap_mode.
	(OP_EM): Handle v_swap_mode.
	(OP_EX): x_swap_mode and q_swap_mode.

	* i386-gen.c (opcode_modifiers): Add S.

	* i386-opc.h (S): New.
	(Modrm): Updated.
	(i386_opcode_modifier): Add s.

	* i386-opc.tbl: Add S to movapd, movaps, movdqa, movdqu, movq,
	movupd, movups, vmovapd, vmovaps, vmovdqa, vmovdqu and vmovq.
	* i386-tbl.h: Regenerated.
@
text
@d50 4
d72 4
d108 4
d130 4
@

