head	1.2;
access;
symbols
	binutils-2_24-branch:1.2.0.10
	binutils-2_24-branchpoint:1.2
	binutils-2_21_1:1.2
	binutils-2_23_2:1.2
	binutils-2_23_1:1.2
	binutils-2_23:1.2
	binutils-2_23-branch:1.2.0.8
	binutils-2_23-branchpoint:1.2
	binutils-2_22_branch:1.2.0.6
	binutils-2_22:1.2
	binutils-2_22-branch:1.2.0.4
	binutils-2_22-branchpoint:1.2
	binutils-2_21:1.2
	binutils-2_21-branch:1.2.0.2
	binutils-2_21-branchpoint:1.2
	binutils_latest_snapshot:1.2;
locks; strict;
comment	@# @;


1.2
date	2009.11.14.06.04.34;	author hjl;	state Exp;
branches;
next	1.1;

1.1
date	2009.11.12.18.57.13;	author hjl;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Check destination operand for lockable instructions.

gas/

2009-11-13  H.J. Lu  <hongjiu.lu@@intel.com>

	* config/tc-i386.c (md_assemble): Check destination operand
	for lockable instructions.

gas/testsuite/

2009-11-13  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/lock-1-intel.d: Updated.
	* gas/i386/lock-1.d: Likewise.
	* gas/i386/lock-1.s: Likewise.
	* gas/i386/lockbad-1.l: Likewise.
	* gas/i386/lockbad-1.s: Likewise.
	* gas/i386/x86-64-lock-1-intel.d: Likewise.
	* gas/i386/x86-64-lock-1.d: Likewise.
	* gas/i386/x86-64-lock-1.s: Likewise.
	* gas/i386/x86-64-lockbad-1.l: Likewise.
	* gas/i386/x86-64-lockbad-1.s: Likewise.
@
text
@#objdump: -dwMintel
#name: i386 lockable insns (Intel disassembly)
#source: lock-1.s

.*: +file format .*


Disassembly of section .text:

0+ <foo>:
[ 	]*[a-f0-9]+:	f0 01 03             	lock add DWORD PTR \[ebx\],eax
[ 	]*[a-f0-9]+:	f0 83 03 64          	lock add DWORD PTR \[ebx\],0x64
[ 	]*[a-f0-9]+:	f0 11 03             	lock adc DWORD PTR \[ebx\],eax
[ 	]*[a-f0-9]+:	f0 83 13 64          	lock adc DWORD PTR \[ebx\],0x64
[ 	]*[a-f0-9]+:	f0 21 03             	lock and DWORD PTR \[ebx\],eax
[ 	]*[a-f0-9]+:	f0 83 23 64          	lock and DWORD PTR \[ebx\],0x64
[ 	]*[a-f0-9]+:	f0 0f bb 03          	lock btc DWORD PTR \[ebx\],eax
[ 	]*[a-f0-9]+:	f0 0f ba 3b 64       	lock btc DWORD PTR \[ebx\],0x64
[ 	]*[a-f0-9]+:	f0 0f b3 03          	lock btr DWORD PTR \[ebx\],eax
[ 	]*[a-f0-9]+:	f0 0f ba 33 64       	lock btr DWORD PTR \[ebx\],0x64
[ 	]*[a-f0-9]+:	f0 0f ab 03          	lock bts DWORD PTR \[ebx\],eax
[ 	]*[a-f0-9]+:	f0 0f ba 2b 64       	lock bts DWORD PTR \[ebx\],0x64
[ 	]*[a-f0-9]+:	f0 0f b1 03          	lock cmpxchg DWORD PTR \[ebx\],eax
[ 	]*[a-f0-9]+:	f0 0f c7 0b          	lock cmpxchg8b QWORD PTR \[ebx\]
[ 	]*[a-f0-9]+:	f0 ff 0b             	lock dec DWORD PTR \[ebx\]
[ 	]*[a-f0-9]+:	f0 ff 03             	lock inc DWORD PTR \[ebx\]
[ 	]*[a-f0-9]+:	f0 f7 1b             	lock neg DWORD PTR \[ebx\]
[ 	]*[a-f0-9]+:	f0 f7 13             	lock not DWORD PTR \[ebx\]
[ 	]*[a-f0-9]+:	f0 09 03             	lock or DWORD PTR \[ebx\],eax
[ 	]*[a-f0-9]+:	f0 83 0b 64          	lock or DWORD PTR \[ebx\],0x64
[ 	]*[a-f0-9]+:	f0 19 03             	lock sbb DWORD PTR \[ebx\],eax
[ 	]*[a-f0-9]+:	f0 83 1b 64          	lock sbb DWORD PTR \[ebx\],0x64
[ 	]*[a-f0-9]+:	f0 29 03             	lock sub DWORD PTR \[ebx\],eax
[ 	]*[a-f0-9]+:	f0 83 2b 64          	lock sub DWORD PTR \[ebx\],0x64
[ 	]*[a-f0-9]+:	f0 0f c1 03          	lock xadd DWORD PTR \[ebx\],eax
[ 	]*[a-f0-9]+:	f0 87 03             	lock xchg DWORD PTR \[ebx\],eax
[ 	]*[a-f0-9]+:	f0 87 03             	lock xchg DWORD PTR \[ebx\],eax
[ 	]*[a-f0-9]+:	f0 31 03             	lock xor DWORD PTR \[ebx\],eax
[ 	]*[a-f0-9]+:	f0 83 33 64          	lock xor DWORD PTR \[ebx\],0x64
[ 	]*[a-f0-9]+:	f0 01 03             	lock add DWORD PTR \[ebx\],eax
[ 	]*[a-f0-9]+:	f0 83 03 64          	lock add DWORD PTR \[ebx\],0x64
[ 	]*[a-f0-9]+:	f0 11 03             	lock adc DWORD PTR \[ebx\],eax
[ 	]*[a-f0-9]+:	f0 83 13 64          	lock adc DWORD PTR \[ebx\],0x64
[ 	]*[a-f0-9]+:	f0 21 03             	lock and DWORD PTR \[ebx\],eax
[ 	]*[a-f0-9]+:	f0 83 23 64          	lock and DWORD PTR \[ebx\],0x64
[ 	]*[a-f0-9]+:	f0 0f bb 03          	lock btc DWORD PTR \[ebx\],eax
[ 	]*[a-f0-9]+:	f0 0f ba 3b 64       	lock btc DWORD PTR \[ebx\],0x64
[ 	]*[a-f0-9]+:	f0 0f b3 03          	lock btr DWORD PTR \[ebx\],eax
[ 	]*[a-f0-9]+:	f0 0f ba 33 64       	lock btr DWORD PTR \[ebx\],0x64
[ 	]*[a-f0-9]+:	f0 0f ab 03          	lock bts DWORD PTR \[ebx\],eax
[ 	]*[a-f0-9]+:	f0 0f ba 2b 64       	lock bts DWORD PTR \[ebx\],0x64
[ 	]*[a-f0-9]+:	f0 0f b1 03          	lock cmpxchg DWORD PTR \[ebx\],eax
[ 	]*[a-f0-9]+:	f0 0f c7 0b          	lock cmpxchg8b QWORD PTR \[ebx\]
[ 	]*[a-f0-9]+:	f0 ff 0b             	lock dec DWORD PTR \[ebx\]
[ 	]*[a-f0-9]+:	f0 ff 03             	lock inc DWORD PTR \[ebx\]
[ 	]*[a-f0-9]+:	f0 f7 1b             	lock neg DWORD PTR \[ebx\]
[ 	]*[a-f0-9]+:	f0 f7 13             	lock not DWORD PTR \[ebx\]
[ 	]*[a-f0-9]+:	f0 09 03             	lock or DWORD PTR \[ebx\],eax
[ 	]*[a-f0-9]+:	f0 83 0b 64          	lock or DWORD PTR \[ebx\],0x64
[ 	]*[a-f0-9]+:	f0 19 03             	lock sbb DWORD PTR \[ebx\],eax
[ 	]*[a-f0-9]+:	f0 83 1b 64          	lock sbb DWORD PTR \[ebx\],0x64
[ 	]*[a-f0-9]+:	f0 29 03             	lock sub DWORD PTR \[ebx\],eax
[ 	]*[a-f0-9]+:	f0 83 2b 64          	lock sub DWORD PTR \[ebx\],0x64
[ 	]*[a-f0-9]+:	f0 0f c1 03          	lock xadd DWORD PTR \[ebx\],eax
[ 	]*[a-f0-9]+:	f0 87 03             	lock xchg DWORD PTR \[ebx\],eax
[ 	]*[a-f0-9]+:	f0 87 03             	lock xchg DWORD PTR \[ebx\],eax
[ 	]*[a-f0-9]+:	f0 31 03             	lock xor DWORD PTR \[ebx\],eax
[ 	]*[a-f0-9]+:	f0 83 33 64          	lock xor DWORD PTR \[ebx\],0x64
#pass
@


1.1
log
@gas/

2009-11-12  H.J. Lu  <hongjiu.lu@@intel.com>

	* config/tc-i386.c (LOCKREP_PREFIX): Removed.
	(REP_PREFIX): New.
	(LOCK_PREFIX): Likewise.
	(PREFIX_GROUP): Likewise.
	(REX_PREFIX): Updated.
	(MAX_PREFIXES): Likewise.
	(add_prefix): Updated.  Return enum PREFIX_GROUP.
	(md_assemble): Check for lock without a lockable instruction.
	(parse_insn): Updated.
	(output_insn): Likewise.

gas/testsuite/

2009-11-12  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/i386.exp: Run lock-1, lock-1-intel, lockbad-1,
	x86-64-lock-1, x86-64-lock-1-intel and x86-64-lockbad-1.

	* gas/i386/lock-1-intel.d: New.
	* gas/i386/lock-1.d: Likewise.
	* gas/i386/lock-1.s: Likewise.
	* gas/i386/lockbad-1.l: Likewise.
	* gas/i386/lockbad-1.s: Likewise.
	* gas/i386/x86-64-lock-1-intel.d: Likewise.
	* gas/i386/x86-64-lock-1.d: Likewise.
	* gas/i386/x86-64-lock-1.s: Likewise.
	* gas/i386/x86-64-lockbad-1.l: Likewise.
	* gas/i386/x86-64-lockbad-1.s: Likewise.

opcodes/

2009-11-12  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386-gen.c (opcode_modifiers): Add IsLockable.

	* i386-opc.h (IsLockable): New.
	(i386_opcode_modifier): Add islockable.

	* i386-opc.tbl: Add IsLockable to add, adc, and, btc, btr,
	bts, cmpxchg, cmpxch8b, dec, inc, neg, not, or, sbb, sub,
	xor, xadd and xchg.
	* i386-tbl.h: Regenerated.
@
text
@d11 1
a11 1
[ 	]*[a-f0-9]+:	f0 03 03             	lock add eax,DWORD PTR \[ebx\]
d13 1
a13 1
[ 	]*[a-f0-9]+:	f0 13 03             	lock adc eax,DWORD PTR \[ebx\]
d15 1
a15 1
[ 	]*[a-f0-9]+:	f0 23 03             	lock and eax,DWORD PTR \[ebx\]
d29 1
a29 1
[ 	]*[a-f0-9]+:	f0 0b 03             	lock or eax,DWORD PTR \[ebx\]
d31 1
a31 1
[ 	]*[a-f0-9]+:	f0 1b 03             	lock sbb eax,DWORD PTR \[ebx\]
d33 1
a33 1
[ 	]*[a-f0-9]+:	f0 2b 03             	lock sub eax,DWORD PTR \[ebx\]
d38 1
a38 1
[ 	]*[a-f0-9]+:	f0 33 03             	lock xor eax,DWORD PTR \[ebx\]
d40 1
a40 1
[ 	]*[a-f0-9]+:	f0 03 03             	lock add eax,DWORD PTR \[ebx\]
d42 1
a42 1
[ 	]*[a-f0-9]+:	f0 13 03             	lock adc eax,DWORD PTR \[ebx\]
d44 1
a44 1
[ 	]*[a-f0-9]+:	f0 23 03             	lock and eax,DWORD PTR \[ebx\]
d58 1
a58 1
[ 	]*[a-f0-9]+:	f0 0b 03             	lock or eax,DWORD PTR \[ebx\]
d60 1
a60 1
[ 	]*[a-f0-9]+:	f0 1b 03             	lock sbb eax,DWORD PTR \[ebx\]
d62 1
a62 1
[ 	]*[a-f0-9]+:	f0 2b 03             	lock sub eax,DWORD PTR \[ebx\]
d67 1
a67 1
[ 	]*[a-f0-9]+:	f0 33 03             	lock xor eax,DWORD PTR \[ebx\]
@

