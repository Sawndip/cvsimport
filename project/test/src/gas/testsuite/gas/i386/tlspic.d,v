head	1.4;
access;
symbols
	binutils-2_24-branch:1.4.0.22
	binutils-2_24-branchpoint:1.4
	binutils-2_21_1:1.4
	binutils-2_23_2:1.4
	binutils-2_23_1:1.4
	binutils-2_23:1.4
	binutils-2_23-branch:1.4.0.20
	binutils-2_23-branchpoint:1.4
	binutils-2_22_branch:1.4.0.18
	binutils-2_22:1.4
	binutils-2_22-branch:1.4.0.16
	binutils-2_22-branchpoint:1.4
	binutils-2_21:1.4
	binutils-2_21-branch:1.4.0.14
	binutils-2_21-branchpoint:1.4
	binutils-2_20_1:1.4
	binutils-2_20:1.4
	binutils-arc-20081103-branch:1.4.0.12
	binutils-arc-20081103-branchpoint:1.4
	binutils-2_20-branch:1.4.0.10
	binutils-2_20-branchpoint:1.4
	dje-cgen-play1-branch:1.4.0.8
	dje-cgen-play1-branchpoint:1.4
	arc-20081103-branch:1.4.0.6
	arc-20081103-branchpoint:1.4
	binutils-2_19_1:1.4
	binutils-2_19:1.4
	binutils-2_19-branch:1.4.0.4
	binutils-2_19-branchpoint:1.4
	binutils-2_18:1.4
	binutils-2_18-branch:1.4.0.2
	binutils-2_18-branchpoint:1.4
	binutils-csl-coldfire-4_1-32:1.3
	binutils-csl-sourcerygxx-4_1-32:1.3
	binutils-csl-innovasic-fido-3_4_4-33:1.3
	binutils-csl-sourcerygxx-3_4_4-32:1.2
	binutils-csl-coldfire-4_1-30:1.3
	binutils-csl-sourcerygxx-4_1-30:1.3
	binutils-csl-coldfire-4_1-28:1.3
	binutils-csl-sourcerygxx-4_1-29:1.3
	binutils-csl-sourcerygxx-4_1-28:1.3
	binutils-csl-arm-2006q3-27:1.3
	binutils-csl-sourcerygxx-4_1-27:1.3
	binutils-csl-arm-2006q3-26:1.3
	binutils-csl-sourcerygxx-4_1-26:1.3
	binutils-csl-sourcerygxx-4_1-25:1.3
	binutils-csl-sourcerygxx-4_1-24:1.3
	binutils-csl-sourcerygxx-4_1-23:1.3
	binutils-csl-sourcerygxx-4_1-21:1.3
	binutils-csl-arm-2006q3-21:1.3
	binutils-csl-sourcerygxx-4_1-22:1.3
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.3
	binutils-csl-sourcerygxx-4_1-20:1.3
	binutils-csl-arm-2006q3-19:1.3
	binutils-csl-sourcerygxx-4_1-19:1.3
	binutils-csl-sourcerygxx-4_1-18:1.3
	binutils-csl-renesas-4_1-9:1.3
	binutils-csl-sourcerygxx-3_4_4-25:1.2
	binutils-csl-renesas-4_1-8:1.3
	binutils-csl-renesas-4_1-7:1.3
	binutils-csl-renesas-4_1-6:1.3
	binutils-csl-sourcerygxx-4_1-17:1.3
	binutils-csl-sourcerygxx-4_1-14:1.3
	binutils-csl-sourcerygxx-4_1-15:1.3
	binutils-csl-sourcerygxx-4_1-13:1.3
	binutils-2_17:1.3
	binutils-csl-sourcerygxx-4_1-12:1.3
	binutils-csl-sourcerygxx-3_4_4-21:1.3
	binutils-csl-wrs-linux-3_4_4-24:1.2
	binutils-csl-wrs-linux-3_4_4-23:1.2
	binutils-csl-sourcerygxx-4_1-9:1.3
	binutils-csl-sourcerygxx-4_1-8:1.3
	binutils-csl-sourcerygxx-4_1-7:1.3
	binutils-csl-arm-2006q1-6:1.3
	binutils-csl-sourcerygxx-4_1-6:1.3
	binutils-csl-wrs-linux-3_4_4-22:1.2
	binutils-csl-coldfire-4_1-11:1.3
	binutils-csl-sourcerygxx-3_4_4-19:1.3
	binutils-csl-coldfire-4_1-10:1.3
	binutils-csl-sourcerygxx-4_1-5:1.3
	binutils-csl-sourcerygxx-4_1-4:1.3
	binutils-csl-wrs-linux-3_4_4-21:1.2
	binutils-csl-morpho-4_1-4:1.3
	binutils-csl-sourcerygxx-3_4_4-17:1.3
	binutils-csl-wrs-linux-3_4_4-20:1.2
	binutils-2_17-branch:1.3.0.4
	binutils-2_17-branchpoint:1.3
	binutils-csl-2_17-branch:1.3.0.2
	binutils-csl-2_17-branchpoint:1.3
	binutils-csl-gxxpro-3_4-branch:1.2.0.14
	binutils-csl-gxxpro-3_4-branchpoint:1.2
	binutils-2_16_1:1.2
	binutils-csl-arm-2005q1b:1.2
	binutils-2_16:1.2
	binutils-csl-arm-2005q1a:1.2
	binutils-csl-arm-2005q1-branch:1.2.0.12
	binutils-csl-arm-2005q1-branchpoint:1.2
	binutils-2_16-branch:1.2.0.10
	binutils-2_16-branchpoint:1.2
	csl-arm-2004-q3d:1.2
	csl-arm-2004-q3:1.2
	binutils-2_15:1.2
	binutils-2_15-branchpoint:1.2
	csl-arm-2004-q1a:1.2
	csl-arm-2004-q1:1.2
	binutils-2_15-branch:1.2.0.8
	cagney_bfdfile-20040213-branch:1.2.0.6
	cagney_bfdfile-20040213-branchpoint:1.2
	cagney_bigcore-20040122-branch:1.2.0.4
	cagney_bigcore-20040122-branchpoint:1.2
	csl-arm-2003-q4:1.2
	binutils-2_14:1.2
	binutils-2_14-branch:1.2.0.2
	binutils-2_14-branchpoint:1.2
	binutils-2_13_2_1:1.1.2.1
	binutils-2_13_2:1.1.2.1
	binutils-2_13_1:1.1.2.1
	binutils-2_13:1.1
	binutils-2_13-branchpoint:1.1
	binutils-2_13-branch:1.1.0.2
	binutils_latest_snapshot:1.4;
locks; strict;
comment	@# @;


1.4
date	2007.04.27.04.22.00;	author hjl;	state Exp;
branches;
next	1.3;

1.3
date	2005.05.09.15.41.47;	author jbeulich;	state Exp;
branches;
next	1.2;

1.2
date	2002.09.19.19.01.13;	author jakub;	state Exp;
branches;
next	1.1;

1.1
date	2002.05.23.13.12.50;	author jakub;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2002.09.23.22.13.39;	author drow;	state Exp;
branches;
next	;


desc
@@


1.4
log
@gas/testsuite/

2007-04-26  H.J. Lu  <hongjiu.lu@@intel.com>

	PR binutils/4430
	* gas/i386/amd.d: Updated.
	* gas/i386/immed32.d: Likewise.
	* gas/i386/intel.d: Likewise.
	* gas/i386/intel16.d: Likewise.
	* gas/i386/intelok.d: Likewise.
	* gas/i386/jump16.d: Likewise.
	* gas/i386/naked.d: Likewise.
	* gas/i386/opcode-suffix.d: Likewise.
	* gas/i386/opcode.d: Likewise.
	* gas/i386/prescott.d: Likewise.
	* gas/i386/ssemmx2.d: Likewise.
	* gas/i386/tlsd.d: Likewise.
	* gas/i386/tlspic.d: Likewise.
	* gas/i386/x86-64-addr32.d: Likewise.
	* gas/i386/x86-64-prescott.d: Likewise.
	* gas/i386/x86-64-rip.d: Likewise.
	* gas/i386/x86_64.d: Likewise.

ld/testsuite/

2007-04-26  H.J. Lu  <hongjiu.lu@@intel.com>

	PR binutils/4430
	* ld-i386/tlsbin.dd: Updated.
	* ld-i386/tlsbindesc.dd: Likewise
	* ld-i386/tlsdesc.dd: Likewise
	* ld-i386/tlsgdesc.dd: Likewise
	* ld-i386/tlsnopic.dd: Likewise
	* ld-i386/tlspic.dd: Likewise
	* ld-x86-64/tlsbin.dd: Likewise
	* ld-x86-64/tlsbindesc.dd: Likewise
	* ld-x86-64/tlsdesc.dd: Likewise
	* ld-x86-64/tlsgdesc.dd: Likewise
	* ld-x86-64/tlspic.dd: Likewise

opcodes/

2007-04-26  H.J. Lu  <hongjiu.lu@@intel.com>

	PR binutils/4430
	* i386-dis.c (print_displacement): New.
	(OP_E): Call print_displacement instead of print_operand_value
	to output displacement when either base or index exist.  Print
	the explicit zero displacement in 16bit mode.
@
text
@#objdump: -dr
#name: i386 pic tls

.*: +file format .*

Disassembly of section .text:

0+000 <fn>:
   0:	55 [ 	]*push   %ebp
   1:	89 e5 [ 	]*mov    %esp,%ebp
   3:	53 [ 	]*push   %ebx
   4:	50 [ 	]*push   %eax
   5:	e8 00 00 00 00 [ 	]*call   a <fn\+0xa>
   a:	5b [ 	]*pop    %ebx
   b:	81 c3 03 00 00 00 [ 	]*add    \$0x3,%ebx
[ 	]+d: R_386_GOTPC	_GLOBAL_OFFSET_TABLE_
  11:	65 a1 00 00 00 00 [ 	]*mov    %gs:0x0,%eax
  17:	83 c6 00 [ 	]*add    \$0x0,%esi
  1a:	2b 83 00 00 00 00 [ 	]*sub    0x0\(%ebx\),%eax
[ 	]+1c: R_386_TLS_IE_32	foo
  20:	8b 83 00 00 00 00 [ 	]*mov    0x0\(%ebx\),%eax
[ 	]+22: R_386_TLS_GOTIE	foo
  26:	83 c6 00 [ 	]*add    \$0x0,%esi
  29:	65 8b 00 [ 	]*mov    %gs:\(%eax\),%eax
  2c:	65 8b 0d 00 00 00 00 [ 	]*mov    %gs:0x0,%ecx
  33:	03 8b 00 00 00 00 [ 	]*add    0x0\(%ebx\),%ecx
[ 	]+35: R_386_TLS_GOTIE	foo
  39:	8b 5d fc [ 	]*mov    -0x4\(%ebp\),%ebx
  3c:	c9 [ 	]*leave[ 	]*
  3d:	c3 [ 	]*ret[ 	]*
@


1.3
log
@gas/
2005-05-09  Jan Beulich  <jbeulich@@novell.com>

	* config/tc-i386.c (optimize_disp): Discard displacement entirely when zero and
	not required by encoding constraints.

gas/testsuite/
2005-05-09  Jan Beulich  <jbeulich@@novell.com>

	* gas/i386/tlsd.[sd]: Adjust to not assume zero displacement will
	actually be present in memory addressing.
	* gas/i386/tlspic.[sd]: Likewise.
@
text
@d28 1
a28 1
  39:	8b 5d fc [ 	]*mov    0xfffffffc\(%ebp\),%ebx
@


1.2
log
@bfd/
	* reloc.c (BFD_RELOC_386_TLS_TPOFF, BFD_RELOC_386_TLS_IE,
	BFD_RELOC_386_TLS_GOTIE): Add.
	* bfd-in2.h, libbfd.h: Rebuilt.
	* elf32-i386.c (elf_howto_table): Add R_386_TLS_TPOFF, R_386_TLS_IE
	and R_386_TLS_GOTIE.
	(elf_i386_reloc_type_lookup): Handle it.
	(struct elf_i386_link_hash_entry): Change tls_type type to unsigned
	char instead of enum, change GOT_* into defines.
	(GOT_TLS_IE_POS, GOT_TLS_IE_NEG, GOT_TLS_IE_BOTH): Define.
	(elf_i386_tls_transition): Handle R_386_TLS_IE and R_386_TLS_GOTIE.
	(elf_i386_check_relocs): Likewise.  Avoid crash if local symbol is
	accessed both as normal and TLS symbol.  Move R_386_TLS_LDM and
	R_386_PLT32 cases so that R_386_TLS_IE can fall through.
	Handle R_386_TLS_LE_32 and R_386_TLS_LE in shared libs.
	(elf_i386_gc_sweep_hook): Handle R_386_TLS_IE and R_386_TLS_GOTIE.
	Handle R_386_TLS_LE_32 and R_386_TLS_LE in shared libs.
	(allocate_dynrelocs): Allocate 2 .got and 2 .rel.got entries if
	tls_type is GOT_TLS_IE_BOTH.
	(elf_i386_size_dynamic_sections): Likewise.
	(elf_i386_relocate_section): Handle R_386_TLS_IE and R_386_TLS_GOTIE.
	Handle R_386_TLS_LE_32 and R_386_TLS_LE in shared libs.
	(elf_i386_finish_dynamic_symbol): Use tls_type & GOT_TLS_IE to catch
	all 4 GOT_TLS_* TLS types.
gas/
	* config/tc-i386.c (tc_i386_fix_adjustable): Handle
	BFD_RELOC_386_TLS_IE and BFD_RELOC_386_TLS_GOTIE.
	(BFD_RELOC_386_TLS_IE, BFD_RELOC_386_TLS_GOTIE): Define to 0
	if not defined.
	(lex_got): Handle @@GOTNTPOFF and @@INDNTPOFF.
	(md_apply_fix3, tc_gen_reloc): Handle BFD_RELOC_386_TLS_IE and
	BFD_RELOC_386_TLS_GOTIE.
gas/testsuite/
	* gas/i386/tlspic.s: Add tests.
	* gas/i386/tlspic.d: Regenerated.
	* gas/i386/tlsnopic.s: Add tests.
	* gas/i386/tlsnopic.d: Regenerated.
include/
	* elf/i386.h (R_386_TLS_TPOFF, R_386_TLS_IE, R_386_TLS_GOTIE):
	Define.
ld/testsuite/
	* ld-i386/i386.exp: New.
	* ld-i386/tlsbin.dd: New test.
	* ld-i386/tlsbinpic.s: New test.
	* ld-i386/tlsbin.rd: New test.
	* ld-i386/tlsbin.s: New test.
	* ld-i386/tlsbin.sd: New test.
	* ld-i386/tlsbin.td: New test.
	* ld-i386/tlslib.s: New test.
	* ld-i386/tlsnopic1.s: New test.
	* ld-i386/tlsnopic2.s: New test.
	* ld-i386/tlsnopic.dd: New test.
	* ld-i386/tlsnopic.rd: New test.
	* ld-i386/tlsnopic.sd: New test.
	* ld-i386/tlspic1.s: New test.
	* ld-i386/tlspic2.s: New test.
	* ld-i386/tlspic.dd: New test.
	* ld-i386/tlspic.rd: New test.
	* ld-i386/tlspic.sd: New test.
	* ld-i386/tlspic.td: New test.
@
text
@d2 1
a2 1
#name: i386 non-pic tls
d18 1
a18 1
  17:	8d 76 00 [ 	]*lea    0x0\(%esi\),%esi
d23 1
a23 1
  26:	8d 76 00 [ 	]*lea    0x0\(%esi\),%esi
@


1.1
log
@	* elf.c (_bfd_elf_make_section_from_shdr): Set SEC_THREAD_LOCAL
	for symbols from SHF_TLS section.
	(_bfd_elf_print_private_bfd_data): Add PT_TLS.
	(elf_fake_sections): Set SHF_TLS for SEC_THREAD_LOCAL sections.
	(map_sections_to_segments): Build PT_TLS segment if necessary.
	(assign_file_positions_for_segments): Likewise.
	(get_program_header_size): Account for PT_TLS segment.
	(swap_out_syms): Set type of BSF_THREAD_LOCAL symbols and symbols from
	SEC_THREAD_LOCAL sections to STT_TLS.
	* reloc.c: Add 386 and IA-64 TLS relocs.
	* section.c (SEC_THREAD_LOCAL): Define.
	(SEC_CONSTRUCTOR_TEXT, SEC_CONSTRUCTOR_DATA, SEC_CONSTRUCTOR_BSS):
	Remove.
	* elflink.h (elf_link_add_object_symbols): Support .tcommon.
	(size_dynamic_sections): If DF_STATIC_TLS, set DF_FLAGS
	unconditionally.
	(struct elf_final_link_info): Add first_tls_sec.
	(elf_bfd_final_link): Set first_tls_sec.
	Compute elf_hash_table (info)->tls_segment.
	(elf_link_output_extsym): Handle STT_TLS symbols.
	(elf_link_input_bfd): Likewise.
	* syms.c (BSF_THREAD_LOCAL): Define.
	* bfd-in2.h: Rebuilt.
	* libbfd.h: Rebuilt.
	* elf32-i386.c (elf_i386_tls_transition, dtpoff_base, tpoff,
	elf_i386_mkobject, elf_i386_object_p): New functions.
	(elf_howto_table): Add TLS relocs.
	(elf_i386_reloc_type_lookup): Support TLS relocs.
	(elf_i386_info_to_howto_rel): Likewise.
	(struct elf_i386_link_hash_entry): Add tls_type.
	(struct elf_i386_obj_tdata): New.
	(elf_i386_hash_entry, elf_i386_tdata, elf_i386_local_got_tls_type):
	New macros.
	(struct elf_i386_link_hash_table): Add tls_ldm_got.
	(link_hash_newfunc): Clear tls_type.
	(elf_i386_check_relocs): Support TLS relocs.
	(elf_i386_gc_sweep_hook): Likewise.
	(allocate_dynrelocs): Likewise.
	(elf_i386_size_dynamic_sections): Likewise.
	(elf_i386_relocate_section): Likewise.
	(elf_i386_finish_dynamic_symbol): Likewise.
	(bfd_elf32_mkobject, elf_backend_object_p): Define.
	* elfxx-ia64.c (struct elfNN_ia64_dyn_sym_info): Add tprel_offset,
	dtpmod_offset, dtprel_offset, tprel_done, dtpmod_done, dtprel_done,
	want_tprel, want_dtpmod, want_dtprel.
	(elfNN_ia64_tprel_base, elfNN_ia64_dtprel_base): New functions.
	(ia64_howto_table): Add TLS relocs, rename R_IA64_LTOFF_TP22 to
	R_IA64_LTOFF_TPREL22.
	(elf_code_to_howto_index): Add TLS relocs.
	(elfNN_ia64_check_relocs): Support TLS relocs.
	(allocate_global_data_got): Account for TLS .got data.
	(allocate_dynrel_entries): Account for TLS dynamic relocations.
	(elfNN_ia64_install_value): Supprt TLS relocs.
	(set_got_entry): Support TLS relocs.
	(elfNN_ia64_relocate_section): Likewise.

	* config/obj-elf.c (elf_common): Renamed from obj_elf_common.
	(obj_elf_common): Call elf_common.
	(obj_elf_tls_common): New function.
	(elf_pseudo_tab): Support .tls_common.
	(special_sections): Add .tdata and .tbss.
	(obj_elf_change_section): Set SEC_THREAD_LOCAL for SHF_TLS
	sections.
	(obj_elf_parse_section_letters): Support T in section flags (SHF_TLS).
	(obj_elf_parse_section_letters): Include T in error message.
	* config/tc-ppc.c (ppc_section_letter): Likewise.
	* config/tc-alpha.c (alpha_elf_section_letter): Likewise.
	(tc_gen_reloc): Handle SEC_THREAD_LOCAL the same way as
	SEC_MERGE.
	* config/tc-sparc.c (md_apply_fix3): Likewise.
	* config/tc-i386.c (tc_i386_fix_adjustable): Add TLS relocs.
	Define them if not BFD_ASSEMBLER.
	(lex_got): Support @@TLSGD, @@TLSLDM, @@GOTTPOFF, @@TPOFF, @@DTPOFF
	and @@NTPOFF.
	(md_apply_fix3): Add TLS relocs.
	* config/tc-ia64.c (enum reloc_func): Add FUNC_DTP_MODULE,
	FUNC_DTP_RELATIVE, FUNC_TP_RELATIVE, FUNC_LT_DTP_MODULE,
	FUNC_LT_DTP_RELATIVE, FUNC_LT_TP_RELATIVE.
	(pseudo_func): Support @@dtpmod(), @@dtprel() and @@tprel().
	(ia64_elf_section_letter): Include T in error message.
	(md_begin): Support TLS operators.
	(md_operand): Likewise.
	(ia64_gen_real_reloc_type): Support TLS relocs.
	* testsuite/gas/i386/tlspic.s: New file.
	* testsuite/gas/i386/tlsd.s: New file.
	* testsuite/gas/i386/tlsnopic.s: New file.
	* testsuite/gas/i386/tlsd.d: New file.
	* testsuite/gas/i386/tlsnopic.d: New file.
	* testsuite/gas/i386/tlspic.d: New file.
	* testsuite/gas/i386/i386.exp: Add tlsd, tlsnopic and tlspic tests.
	* testsuite/gas/ia64/tls.s: New file.
	* testsuite/gas/ia64/tls.d: New file.
	* testsuite/gas/ia64/ia64.exp: Add tls test.
	* write.c (adjust_reloc_syms): Don't change symbols in
	SEC_THREAD_LOCAL sections to STT_SECTION + addend.

	* elf/common.h (PT_TLS, SHF_TLS, STT_TLS, DF_STATIC_TLS): Define.
	* elf/ia64.h (R_IA64_LTOFF_TPREL22): Renamed from R_IA64_LTOFF_TP22.
	* elf/i386.h: Add TLS relocs.

	* scripttempl/elf.sc: Add .rel{,a}.t{bss,data}, .tdata and .tbss.
	* ldlang.c (lang_add_section): Set SEC_THREAD_LOCAL for
	output section if necessary.  Handle .tbss.
	(lang_size_sections): Clear _raw_size for .tbss section
	(it allocates space in PT_TLS segment only).
	* ldwrite.c (build_link_order): Build link order for .tbss too.

	* readelf.c (get_segment_type): Add PT_TLS.
	(get_elf_section_flags): Add SHF_TLS.
	(get_dynamic_flags): Optimize.  Add DF_STATIC_TLS.
	(process_dynamic_segment): Use puts instead of printf.
	(get_symbol_type): Support STT_TLS.
	* objdump.c (dump_section_header): Remove SEC_CONSTRUCTOR_TEXT,
	SEC_CONSTRUCTOR_DATA, SEC_CONSTRUCTOR_BSS.
	Add SEC_THREAD_LOCAL.
@
text
@d21 10
a30 3
  20:	8b 5d fc [ 	]*mov    0xfffffffc\(%ebp\),%ebx
  23:	c9 [ 	]*leave[ 	]*
  24:	c3 [ 	]*ret[ 	]*
@


1.1.2.1
log
@2002-09-23  Daniel Jacobowitz  <drow@@mvista.com>

	Merge from mainline:
	2002-09-19  Jakub Jelinek  <jakub@@redhat.com>
	* gas/i386/tlspic.s: Add tests.
	* gas/i386/tlspic.d: Regenerated.
	* gas/i386/tlsnopic.s: Add tests.
	* gas/i386/tlsnopic.d: Regenerated.

	2002-09-16  Chris Demetriou  <cgd@@broadcom.com>
	* gas/mips/mips-abi32-pic2.s: New file.
	* gas/mips/mips-abi32-pic2.d: New file.
	* gas/mips/mips.exp: Run new test.

	2002-08-20  Richard Sandiford  <rsandifo@@redhat.com>
	* gas/mips/rol.s: Add rotate by zero tests.
	* gas/mips/rol.d: Update accordingly.
	* gas/mips/rol64.d: Expect rotates by zero to use dsrl.

	2002-08-13  Stephen Clarke <stephen.clarke@@superh.com>
	* gas/sh/sh64/datal32-3.d: Formatting change to match the current
	output of objdump.

	2002-08-12  Richard Sandiford  <rsandifo@@redhat.com>
	* gas/mips/elf-consthilo.[sd]: New test.
	* gas/mips/mips.exp: Run it.

	2002-08-06  Alan Modra  <amodra@@bigpond.net.au>
	* gas/ppc/altivec_xcoff64.d: Adjust for aix5 target.
	* gas/ppc/booke_xcoff64.d: Likewise.  Also fix relocs.

	2002-08-03  Jakub Jelinek  <jakub@@redhat.com>
	* testsuite/gas/i386/gotpc.s: New.
	* testsuite/gas/i386/gotpc.d: New.
	* testsuite/gas/i386/i386.exp: Add gotpc test.
@
text
@d21 3
a23 10
  20:	8b 83 00 00 00 00 [ 	]*mov    0x0\(%ebx\),%eax
[ 	]+22: R_386_TLS_GOTIE	foo
  26:	8d 76 00 [ 	]*lea    0x0\(%esi\),%esi
  29:	65 8b 00 [ 	]*mov    %gs:\(%eax\),%eax
  2c:	65 8b 0d 00 00 00 00 [ 	]*mov    %gs:0x0,%ecx
  33:	03 8b 00 00 00 00 [ 	]*add    0x0\(%ebx\),%ecx
[ 	]+35: R_386_TLS_GOTIE	foo
  39:	8b 5d fc [ 	]*mov    0xfffffffc\(%ebp\),%ebx
  3c:	c9 [ 	]*leave[ 	]*
  3d:	c3 [ 	]*ret[ 	]*
@


