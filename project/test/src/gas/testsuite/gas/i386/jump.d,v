head	1.10;
access;
symbols
	binutils-2_24-branch:1.10.0.10
	binutils-2_24-branchpoint:1.10
	binutils-2_21_1:1.10
	binutils-2_23_2:1.10
	binutils-2_23_1:1.10
	binutils-2_23:1.10
	binutils-2_23-branch:1.10.0.8
	binutils-2_23-branchpoint:1.10
	binutils-2_22_branch:1.10.0.6
	binutils-2_22:1.10
	binutils-2_22-branch:1.10.0.4
	binutils-2_22-branchpoint:1.10
	binutils-2_21:1.10
	binutils-2_21-branch:1.10.0.2
	binutils-2_21-branchpoint:1.10
	binutils-2_20_1:1.8
	binutils-2_20:1.8
	binutils-arc-20081103-branch:1.5.0.6
	binutils-arc-20081103-branchpoint:1.5
	binutils-2_20-branch:1.8.0.2
	binutils-2_20-branchpoint:1.8
	dje-cgen-play1-branch:1.7.0.2
	dje-cgen-play1-branchpoint:1.7
	arc-20081103-branch:1.5.0.4
	arc-20081103-branchpoint:1.5
	binutils-2_19_1:1.5
	binutils-2_19:1.5
	binutils-2_19-branch:1.5.0.2
	binutils-2_19-branchpoint:1.5
	binutils-2_18:1.3
	binutils-2_18-branch:1.3.0.26
	binutils-2_18-branchpoint:1.3
	binutils-csl-coldfire-4_1-32:1.3
	binutils-csl-sourcerygxx-4_1-32:1.3
	binutils-csl-innovasic-fido-3_4_4-33:1.3
	binutils-csl-sourcerygxx-3_4_4-32:1.3
	binutils-csl-coldfire-4_1-30:1.3
	binutils-csl-sourcerygxx-4_1-30:1.3
	binutils-csl-coldfire-4_1-28:1.3
	binutils-csl-sourcerygxx-4_1-29:1.3
	binutils-csl-sourcerygxx-4_1-28:1.3
	binutils-csl-arm-2006q3-27:1.3
	binutils-csl-sourcerygxx-4_1-27:1.3
	binutils-csl-arm-2006q3-26:1.3
	binutils-csl-sourcerygxx-4_1-26:1.3
	binutils-csl-sourcerygxx-4_1-25:1.3
	binutils-csl-sourcerygxx-4_1-24:1.3
	binutils-csl-sourcerygxx-4_1-23:1.3
	binutils-csl-sourcerygxx-4_1-21:1.3
	binutils-csl-arm-2006q3-21:1.3
	binutils-csl-sourcerygxx-4_1-22:1.3
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.3
	binutils-csl-sourcerygxx-4_1-20:1.3
	binutils-csl-arm-2006q3-19:1.3
	binutils-csl-sourcerygxx-4_1-19:1.3
	binutils-csl-sourcerygxx-4_1-18:1.3
	binutils-csl-renesas-4_1-9:1.3
	binutils-csl-sourcerygxx-3_4_4-25:1.3
	binutils-csl-renesas-4_1-8:1.3
	binutils-csl-renesas-4_1-7:1.3
	binutils-csl-renesas-4_1-6:1.3
	binutils-csl-sourcerygxx-4_1-17:1.3
	binutils-csl-sourcerygxx-4_1-14:1.3
	binutils-csl-sourcerygxx-4_1-15:1.3
	binutils-csl-sourcerygxx-4_1-13:1.3
	binutils-2_17:1.3
	binutils-csl-sourcerygxx-4_1-12:1.3
	binutils-csl-sourcerygxx-3_4_4-21:1.3
	binutils-csl-wrs-linux-3_4_4-24:1.3
	binutils-csl-wrs-linux-3_4_4-23:1.3
	binutils-csl-sourcerygxx-4_1-9:1.3
	binutils-csl-sourcerygxx-4_1-8:1.3
	binutils-csl-sourcerygxx-4_1-7:1.3
	binutils-csl-arm-2006q1-6:1.3
	binutils-csl-sourcerygxx-4_1-6:1.3
	binutils-csl-wrs-linux-3_4_4-22:1.3
	binutils-csl-coldfire-4_1-11:1.3
	binutils-csl-sourcerygxx-3_4_4-19:1.3
	binutils-csl-coldfire-4_1-10:1.3
	binutils-csl-sourcerygxx-4_1-5:1.3
	binutils-csl-sourcerygxx-4_1-4:1.3
	binutils-csl-wrs-linux-3_4_4-21:1.3
	binutils-csl-morpho-4_1-4:1.3
	binutils-csl-sourcerygxx-3_4_4-17:1.3
	binutils-csl-wrs-linux-3_4_4-20:1.3
	binutils-2_17-branch:1.3.0.24
	binutils-2_17-branchpoint:1.3
	binutils-csl-2_17-branch:1.3.0.22
	binutils-csl-2_17-branchpoint:1.3
	binutils-csl-gxxpro-3_4-branch:1.3.0.20
	binutils-csl-gxxpro-3_4-branchpoint:1.3
	binutils-2_16_1:1.3
	binutils-csl-arm-2005q1b:1.3
	binutils-2_16:1.3
	binutils-csl-arm-2005q1a:1.3
	binutils-csl-arm-2005q1-branch:1.3.0.18
	binutils-csl-arm-2005q1-branchpoint:1.3
	binutils-2_16-branch:1.3.0.16
	binutils-2_16-branchpoint:1.3
	csl-arm-2004-q3d:1.3
	csl-arm-2004-q3:1.3
	binutils-2_15:1.3
	binutils-2_15-branchpoint:1.3
	csl-arm-2004-q1a:1.3
	csl-arm-2004-q1:1.3
	binutils-2_15-branch:1.3.0.14
	cagney_bfdfile-20040213-branch:1.3.0.12
	cagney_bfdfile-20040213-branchpoint:1.3
	cagney_bigcore-20040122-branch:1.3.0.10
	cagney_bigcore-20040122-branchpoint:1.3
	csl-arm-2003-q4:1.3
	binutils-2_14:1.3
	binutils-2_14-branch:1.3.0.8
	binutils-2_14-branchpoint:1.3
	binutils-2_13_2_1:1.3
	binutils-2_13_2:1.3
	binutils-2_13_1:1.3
	binutils-2_13:1.3
	binutils-2_13-branchpoint:1.3
	binutils-2_13-branch:1.3.0.6
	binutils-2_12_1:1.3
	binutils-2_12:1.3
	binutils-2_12-branch:1.3.0.4
	binutils-2_12-branchpoint:1.3
	cygnus_cvs_20020108_pre:1.3
	binutils-2_11_2:1.3
	binutils-2_11_1:1.3
	binutils-2_11:1.3
	x86_64versiong3:1.3
	binutils-2_11-branch:1.3.0.2
	binutils-2_10_1:1.2
	binutils-2_10:1.2
	binutils-2_10-branch:1.2.0.2
	binutils-2_10-branchpoint:1.2
	binutils_latest_snapshot:1.10
	repo-unification-2000-02-06:1.2;
locks; strict;
comment	@# @;


1.10
date	2010.06.22.07.43.41;	author jbeulich;	state Exp;
branches;
next	1.9;

1.9
date	2009.10.13.16.23.24;	author hjl;	state Exp;
branches;
next	1.8;

1.8
date	2009.07.07.08.29.58;	author gingold;	state Exp;
branches;
next	1.7;

1.7
date	2009.06.08.15.55.36;	author davek;	state Exp;
branches;
next	1.6;

1.6
date	2009.06.01.16.31.00;	author hjl;	state Exp;
branches;
next	1.5;

1.5
date	2008.02.26.16.18.16;	author hjl;	state Exp;
branches;
next	1.4;

1.4
date	2008.02.23.17.29.17;	author hjl;	state Exp;
branches;
next	1.3;

1.3
date	2000.04.25.07.19.46;	author amodra;	state Exp;
branches;
next	1.2;

1.2
date	2000.01.21.22.58.04;	author amodra;	state Exp;
branches;
next	1.1;

1.1
date	2000.01.21.10.18.33;	author amodra;	state Exp;
branches;
next	;


desc
@@


1.10
log
@gas/
2010-06-22  Jan Beulich  <jbeulich@@novell.com>

	PR gas/11732
	* config/tc-i386-intel.c (i386_intel_parse_name): Handle pseudo
	symbols named "$".
	(i386_intel_operand): Remove bogus handling of pseudo symbols
	named "$".
	* expr.c (current_location): Remove 'static' and local
	declaration.
	* expr.h (current_location): Declare.

gas/testsuite/
2010-06-22  Jan Beulich  <jbeulich@@novell.com>

	PR gas/11732
	* gas/i386/jump.d: Adjust.
	* gas/i386/jump.s: Add check for branch to 2+$.
@
text
@#name: i386 jump
#objdump: -drw

.*: +file format .*i386.*

Disassembly of section .text:

0+ <.text>:
[ 	]*[a-f0-9]+:	eb fe                	jmp    (0x0|0 <.text>)
[ 	]*[a-f0-9]+:	e9 ((fc|f9) ff ff ff|00 00 00 00)       	jmp    (0x)?(0|3|7)( <.text(\+0x7)?>)?	3: (R_386_PC)?(DISP)?32	xxx
[ 	]*[a-f0-9]+:	ff 25 00 00 00 00    	jmp    \*0x0	9: (R_386_)?(dir)?32	xxx
[ 	]*[a-f0-9]+:	ff e7                	jmp    \*%edi
[ 	]*[a-f0-9]+:	ff 27                	jmp    \*\(%edi\)
[ 	]*[a-f0-9]+:	ff 2c bd 00 00 00 00 	ljmp   \*0x0\(,%edi,4\)	14: (R_386_)?(dir)?32	xxx
[ 	]*[a-f0-9]+:	66 ff 2c bd 00 00 00 00 	ljmpw  \*0x0\(,%edi,4\)	1c: (R_386_)?(dir)?32	xxx
[ 	]*[a-f0-9]+:	ff 2d 00 00 00 00    	ljmp   \*0x0	22: (R_386_)?(dir)?32	xxx
[ 	]*[a-f0-9]+:	66 ff 2d 00 00 00 00 	ljmpw  \*0x0	29: (R_386_)?(dir)?32	xxx
[ 	]*[a-f0-9]+:	ea 00 00 00 00 34 12 	ljmp   \$0x1234,\$0x0	2e: (R_386_)?(dir)?32	xxx
[ 	]*[a-f0-9]+:	e8 c7 ff ff ff       	call   (0x0|0 <.text>)
[ 	]*[a-f0-9]+:	e8 ((fc|c2) ff ff ff|00 00 00 00)       	call   (0x)?(0|3a|3e)( <.text(\+0x3e)?>)?	3a: (R_386_PC)?(DISP)?32	xxx
[ 	]*[a-f0-9]+:	ff 15 00 00 00 00    	call   \*0x0	40: (R_386_)?(dir)?32	xxx
[ 	]*[a-f0-9]+:	ff d7                	call   \*%edi
[ 	]*[a-f0-9]+:	ff 17                	call   \*\(%edi\)
[ 	]*[a-f0-9]+:	ff 1c bd 00 00 00 00 	lcall  \*0x0\(,%edi,4\)	4b: (R_386_)?(dir)?32	xxx
[ 	]*[a-f0-9]+:	66 ff 1c bd 00 00 00 00 	lcallw \*0x0\(,%edi,4\)	53: (R_386_)?(dir)?32	xxx
[ 	]*[a-f0-9]+:	ff 1d 00 00 00 00    	lcall  \*0x0	59: (R_386_)?(dir)?32	xxx
[ 	]*[a-f0-9]+:	66 ff 1d 00 00 00 00 	lcallw \*0x0	60: (R_386_)?(dir)?32	xxx
[ 	]*[a-f0-9]+:	9a 00 00 00 00 34 12 	lcall  \$0x1234,\$0x0	65: (R_386_)?(dir)?32	xxx
[ 	]*[a-f0-9]+:	66 ff 13             	callw  \*\(%ebx\)
[ 	]*[a-f0-9]+:	ff 13                	call   \*\(%ebx\)
[ 	]*[a-f0-9]+:	ff 1b                	lcall  \*\(%ebx\)
[ 	]*[a-f0-9]+:	66 ff 23             	jmpw   \*\(%ebx\)
[ 	]*[a-f0-9]+:	ff 23                	jmp    \*\(%ebx\)
[ 	]*[a-f0-9]+:	ff 2b                	ljmp   \*\(%ebx\)
[ 	]*[a-f0-9]+:	eb 00                	jmp    (0x)?7b( <.text(\+0x7b)?>)?
[ 	]*[a-f0-9]+:	90                   	nop
[ 	]*[a-f0-9]+:	e3 00                	jecxz  (0x)?7e( <.text(\+0x7e)?>)?
[ 	]*[a-f0-9]+:	90                   	nop
[ 	]*[a-f0-9]+:	eb 00                	jmp    (0x)?81( <.text(\+0x81)?>)?
[ 	]*[a-f0-9]+:	90                   	nop
[ 	]*[a-f0-9]+:	9a 90 90 90 90 90 90 	lcall  \$0x9090,\$0x90909090
[ 	]*[a-f0-9]+:	9a 90 90 90 90 90 90 	lcall  \$0x9090,\$0x90909090
[ 	]*[a-f0-9]+:	9a 00 00 00 00 90 90 	lcall  \$0x9090,\$0x0[ 	]+[a-f0-9]+: (R_386_)?(dir)?32	xxx
[ 	]*[a-f0-9]+:	9a 00 00 00 00 90 90 	lcall  \$0x9090,\$0x0[ 	]+[a-f0-9]+: (R_386_)?(dir)?32	xxx
[ 	]*[a-f0-9]+:	9a 90 90 90 90 90 90 	lcall  \$0x9090,\$0x90909090
[ 	]*[a-f0-9]+:	9a 90 90 90 90 90 90 	lcall  \$0x9090,\$0x90909090
[ 	]*[a-f0-9]+:	9a 00 00 00 00 90 90 	lcall  \$0x9090,\$0x0[ 	]+[a-f0-9]+: (R_386_)?(dir)?32	xxx
[ 	]*[a-f0-9]+:	9a 00 00 00 00 90 90 	lcall  \$0x9090,\$0x0[ 	]+[a-f0-9]+: (R_386_)?(dir)?32	xxx
[ 	]*[a-f0-9]+:	ea 90 90 90 90 90 90 	ljmp   \$0x9090,\$0x90909090
[ 	]*[a-f0-9]+:	ea 90 90 90 90 90 90 	ljmp   \$0x9090,\$0x90909090
[ 	]*[a-f0-9]+:	ea 00 00 00 00 90 90 	ljmp   \$0x9090,\$0x0[ 	]+[a-f0-9]+: (R_386_)?(dir)?32	xxx
[ 	]*[a-f0-9]+:	ea 00 00 00 00 90 90 	ljmp   \$0x9090,\$0x0[ 	]+[a-f0-9]+: (R_386_)?(dir)?32	xxx
[ 	]*[a-f0-9]+:	ea 90 90 90 90 90 90 	ljmp   \$0x9090,\$0x90909090
[ 	]*[a-f0-9]+:	ea 90 90 90 90 90 90 	ljmp   \$0x9090,\$0x90909090
[ 	]*[a-f0-9]+:	ea 00 00 00 00 90 90 	ljmp   \$0x9090,\$0x0[ 	]+[a-f0-9]+: (R_386_)?(dir)?32	xxx
[ 	]*[a-f0-9]+:	ea 00 00 00 00 90 90 	ljmp   \$0x9090,\$0x0[ 	]+[a-f0-9]+: (R_386_)?(dir)?32	xxx
#pass
@


1.9
log
@gas/

2009-10-13  H.J. Lu  <hongjiu.lu@@intel.com>

	PR gas/10740
	* config/tc-i386-intel.c (i386_intel_operand): Handle call
	and jump with 2 immediate operands.

	* config/tc-i386.c (i386_finalize_immediate): Don't generate
	error message if operand string is NULL.

gas/testsuite/

2009-10-13  H.J. Lu  <hongjiu.lu@@intel.com>

	PR gas/10740
	* gas/i386/jump.s: Add new tests.
	* gas/i386/jump16.s: Likewise.

	* gas/i386/jump.d: Updated.
	* gas/i386/jump16.d: Likewise.
@
text
@d37 3
a39 1
[ 	]*[a-f0-9]+:	eb 00                	jmp    (0x)?7e( <.text(\+0x7e)?>)?
d43 2
a44 2
[ 	]*[a-f0-9]+:	9a 00 00 00 00 90 90 	lcall  \$0x9090,\$0x0	8e: (R_386_)?(dir)?32	xxx
[ 	]*[a-f0-9]+:	9a 00 00 00 00 90 90 	lcall  \$0x9090,\$0x0	95: (R_386_)?(dir)?32	xxx
d47 2
a48 2
[ 	]*[a-f0-9]+:	9a 00 00 00 00 90 90 	lcall  \$0x9090,\$0x0	aa: (R_386_)?(dir)?32	xxx
[ 	]*[a-f0-9]+:	9a 00 00 00 00 90 90 	lcall  \$0x9090,\$0x0	b1: (R_386_)?(dir)?32	xxx
d51 2
a52 2
[ 	]*[a-f0-9]+:	ea 00 00 00 00 90 90 	ljmp   \$0x9090,\$0x0	c6: (R_386_)?(dir)?32	xxx
[ 	]*[a-f0-9]+:	ea 00 00 00 00 90 90 	ljmp   \$0x9090,\$0x0	cd: (R_386_)?(dir)?32	xxx
d55 2
a56 2
[ 	]*[a-f0-9]+:	ea 00 00 00 00 90 90 	ljmp   \$0x9090,\$0x0	e2: (R_386_)?(dir)?32	xxx
[ 	]*[a-f0-9]+:	ea 00 00 00 00 90 90 	ljmp   \$0x9090,\$0x0	e9: (R_386_)?(dir)?32	xxx
@


1.8
log
@2009-07-07  Tristan Gingold  <gingold@@adacore.com>

	* gas/i386/jump.d: Adjust to be relocated offset for jump to external
	symbol.
@
text
@d39 16
@


1.7
log
@	* gas/i386/jump.d:  Tweak patterns to also match PE platform output.
@
text
@d20 1
a20 1
[ 	]*[a-f0-9]+:	e8 ((fc|d1) ff ff ff|00 00 00 00)       	call   (0x)?(0|3a|3e)( <.text(\+0x3e)?>)?	3a: (R_386_PC)?(DISP)?32	xxx
@


1.6
log
@gas/

2009-06-01  H.J. Lu  <hongjiu.lu@@intel.com>

	PR gas/10198
	* config/tc-i386-intel.c (i386_intel_operand): Check '$' as '.'.

gas/testsuite/

2009-06-01  H.J. Lu  <hongjiu.lu@@intel.com>

	PR gas/10198
	* gas/i386/jump.s: Add test for "jmp $+2".
	* gas/i386/jump16.s: Likewise.

	* gas/i386/jump.d: Updated.
	* gas/i386/jump16.d: Likewise.
@
text
@d35 1
a35 1
[ 	]*[a-f0-9]+:	eb 00                	jmp    0x7b
d37 1
a37 1
[ 	]*[a-f0-9]+:	eb 00                	jmp    0x7e
@


1.5
log
@2008-02-26  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/jump.d: Updated for COFF.
@
text
@d35 4
@


1.4
log
@gas/testsuite/

2008-02-23  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/jump.s: Add tests for far branches.
	* gas/i386/jump16.s: Likewise.

	* gas/i386/jump.d: Updated.
	* gas/i386/jump16.d: Likewise.
	* gas/i386/x86-64-inval.l: Likewise.

	* gas/i386/x86-64-inval.s: Add tests for 16-bit near indirect
	branches.

opcodes/

2008-02-23  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386-opc.tbl: Disallow 16-bit near indirect branches for
	x86-64.
	* i386-tbl.h: Regenerated.
@
text
@d9 3
a11 3
[ 	]*[a-f0-9]+:	eb fe                	jmp    0x0
[ 	]*[a-f0-9]+:	e9 fc ff ff ff       	jmp    0x3	3: R_386_PC32	xxx
[ 	]*[a-f0-9]+:	ff 25 00 00 00 00    	jmp    \*0x0	9: R_386_32	xxx
d14 8
a21 8
[ 	]*[a-f0-9]+:	ff 2c bd 00 00 00 00 	ljmp   \*0x0\(,%edi,4\)	14: R_386_32	xxx
[ 	]*[a-f0-9]+:	66 ff 2c bd 00 00 00 00 	ljmpw  \*0x0\(,%edi,4\)	1c: R_386_32	xxx
[ 	]*[a-f0-9]+:	ff 2d 00 00 00 00    	ljmp   \*0x0	22: R_386_32	xxx
[ 	]*[a-f0-9]+:	66 ff 2d 00 00 00 00 	ljmpw  \*0x0	29: R_386_32	xxx
[ 	]*[a-f0-9]+:	ea 00 00 00 00 34 12 	ljmp   \$0x1234,\$0x0	2e: R_386_32	xxx
[ 	]*[a-f0-9]+:	e8 c7 ff ff ff       	call   0x0
[ 	]*[a-f0-9]+:	e8 fc ff ff ff       	call   0x3a	3a: R_386_PC32	xxx
[ 	]*[a-f0-9]+:	ff 15 00 00 00 00    	call   \*0x0	40: R_386_32	xxx
d24 5
a28 5
[ 	]*[a-f0-9]+:	ff 1c bd 00 00 00 00 	lcall  \*0x0\(,%edi,4\)	4b: R_386_32	xxx
[ 	]*[a-f0-9]+:	66 ff 1c bd 00 00 00 00 	lcallw \*0x0\(,%edi,4\)	53: R_386_32	xxx
[ 	]*[a-f0-9]+:	ff 1d 00 00 00 00    	lcall  \*0x0	59: R_386_32	xxx
[ 	]*[a-f0-9]+:	66 ff 1d 00 00 00 00 	lcallw \*0x0	60: R_386_32	xxx
[ 	]*[a-f0-9]+:	9a 00 00 00 00 34 12 	lcall  \$0x1234,\$0x0	65: R_386_32	xxx
@


1.3
log
@Cope with PE relocs.
@
text
@d8 28
a35 19
0+000 <.text>:
   0:	eb fe [ 	]*jmp    (0x0|0 <.text>)
   2:	e9 ((fc|f9) ff ff ff|00 00 00 00) [ 	]*jmp    (0x)?(0|3|7)( <.text(\+0x7)?>)?	3: (R_386_PC)?(DISP)?32	xxx
   7:	ff 25 00 00 00 00 [ 	]*jmp    \*0x0	9: (R_386_)?(dir)?32	xxx
   d:	ff e7 [ 	]*jmp    \*%edi
   f:	ff 27 [ 	]*jmp    \*\(%edi\)
  11:	ff 2c bd 00 00 00 00 [ 	]*ljmp   \*0x0\(,%edi,4\)	14: (R_386_)?(dir)?32	xxx
  18:	ff 2d 00 00 00 00 [ 	]*ljmp   \*0x0	1a: (R_386_)?(dir)?32	xxx
  1e:	ea 00 00 00 00 34 12 [ 	]*ljmp   \$0x1234,\$0x0	1f: (R_386_)?(dir)?32	xxx
  25:	e8 d6 ff ff ff [ 	]*call   (0x0|0 <.text>)
  2a:	e8 ((fc|d1) ff ff ff|00 00 00 00) [ 	]*call   (0x)?(0|2b|2f)( <.text(\+0x2f)?>)?	2b: (R_386_PC)?(DISP)?32	xxx
  2f:	ff 15 00 00 00 00 [ 	]*call   \*0x0	31: (R_386_)?(dir)?32	xxx
  35:	ff d7 [ 	]*call   \*%edi
  37:	ff 17 [ 	]*call   \*\(%edi\)
  39:	ff 1c bd 00 00 00 00 [ 	]*lcall  \*0x0\(,%edi,4\)	3c: (R_386_)?(dir)?32	xxx
  40:	ff 1d 00 00 00 00 [ 	]*lcall  \*0x0	42: (R_386_)?(dir)?32	xxx
  46:	9a 00 00 00 00 34 12 [ 	]*lcall  \$0x1234,\$0x0	47: (R_386_)?(dir)?32	xxx
  4d:.*
.*
@


1.2
log
@Fix gas x86 testsuite for a.out
@
text
@d10 1
a10 1
   2:	e9 (fc|f9) ff ff ff [ 	]*jmp    (0x3|0x0|0 <.text>)	3: (R_386_PC)?(DISP)?32	xxx
d18 1
a18 1
  2a:	e8 (fc|d1) ff ff ff [ 	]*call   (0x2b|0x0|0 <.text>)	2b: (R_386_PC)?(DISP)?32	xxx
@


1.1
log
@gas/testsuite/ChangeLog
	* gas/i386/general.{s,l}: Move 16 bit jmp and call tests from here
	* gas/i386/jump16.{s,d}: To here.
	* gas/i386/jump.{s,d}: New files.  Duplicate 32 bit jmp and call
	tests in general.s so that objdump is exercised.

	* gas/i386/i386.exp: Call new tests.
@
text
@d10 1
a10 1
   2:	e9 (fc|f9) ff ff ff [ 	]*jmp    (0x3|0 <.text>)	3: (R_386_PC)?(DISP)?32	xxx
d18 1
a18 1
  2a:	e8 (fc|d1) ff ff ff [ 	]*call   (0x2b|0 <.text>)	2b: (R_386_PC)?(DISP)?32	xxx
@

