head	1.2;
access;
symbols
	binutils-2_24-branch:1.2.0.4
	binutils-2_24-branchpoint:1.2
	binutils-2_21_1:1.1.2.1
	binutils-2_23_2:1.2
	binutils-2_23_1:1.2
	binutils-2_23:1.2
	binutils-2_23-branch:1.2.0.2
	binutils-2_23-branchpoint:1.2
	binutils-2_22_branch:1.1.0.6
	binutils-2_22:1.1
	binutils-2_22-branch:1.1.0.4
	binutils-2_22-branchpoint:1.1
	binutils-2_21-branch:1.1.0.2
	binutils_latest_snapshot:1.2;
locks; strict;
comment	@# @;


1.2
date	2012.02.14.01.01.30;	author amodra;	state Exp;
branches;
next	1.1;

1.1
date	2010.12.02.13.25.13;	author rsandifo;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2011.02.01.12.25.42;	author amodra;	state Exp;
branches;
next	;


desc
@@


1.2
log
@	* gas/elf/bad-group.s: Add section attributes.
	* gas/elf/elf.exp (groupautoa, groupautob): Don't run for hppa64-hpux.
	(ifunc-1, type): Don't run for hpux.
	* gas/elf/type-noifunc.e: Accept ANSI_COM.
	* gas/elf/section7.s: Always have whitespace before directives.
	* gas/elf/warn-2.s: Likewise.
	* gas/i386/ifunc-3.s: Move .size directive.
@
text
@	.section .text.1,"ax",@@progbits

start1:
	.long	bar1-.
	.long	bar2-.
	.long	bar1-start1
	.long	bar2-start1
	.long	bar1-base

	.type	bar1,%gnu_indirect_function
	.size	bar1,.Lendbar1-bar1
bar1:
	ret
.Lendbar1:
	.align	4

	.long	bar1-.
	.long	bar2-.
	.long	bar1-start1
	.long	bar2-start1
	.long	bar1-base

	.long	abs1-.
	.long	abs1-start1
	.long	abs1-base

	.equ	abs1,0x11223300
	.type	abs1,%gnu_indirect_function

	.long	abs1-.
	.long	abs1-start1
	.long	abs1-base

	.section .text.2,"ax",@@progbits

start2:
	.long	bar1-.
	.long	bar2-.
	.long	bar1-start2
	.long	bar2-start2
	.long	bar2-base

	.type	bar2,%gnu_indirect_function
bar2:
	ret
	.size	bar2,.-bar2
	.align	4

	.long	bar1-.
	.long	bar2-.
	.long	bar1-start2
	.long	bar2-start2
	.long	bar2-base

	.equ	base,0xabc0
@


1.1
log
@gas/
	* symbols.c (S_FORCE_RELOC): Return true for indirect functions
	even if !strict.
	* expr.c (operand): Don't convert absolute symbols to constants
	if S_FORCE_RELOC is true.
	(expr): Only reduce subtractions between different symbols if
	S_FORCE_RELOC is false for both of them.
	* write.c (fixup_segment): Don't remove symbols if S_FORCE_RELOC
	is true for them, regardless of their segment.

gas/testsuite/
	* gas/i386/ifunc-2.s, gas/i386/ifunc-2.l: New test.
	* gas/i386/ifunc-3.s, gas/i386/ifunc-3.d: Likeise.
	* gas/i386/i386.exp: Run them.
@
text
@d11 1
d14 1
a14 1
	.size	bar1,.-bar1
@


1.1.2.1
log
@backport from mainline
@
text
@@

