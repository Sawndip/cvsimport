head	1.6;
access;
symbols
	binutils-2_24-branch:1.6.0.2
	binutils-2_24-branchpoint:1.6
	binutils-2_21_1:1.5
	binutils-2_23_2:1.5
	binutils-2_23_1:1.5
	binutils-2_23:1.5
	binutils-2_23-branch:1.5.0.36
	binutils-2_23-branchpoint:1.5
	binutils-2_22_branch:1.5.0.34
	binutils-2_22:1.5
	binutils-2_22-branch:1.5.0.32
	binutils-2_22-branchpoint:1.5
	binutils-2_21:1.5
	binutils-2_21-branch:1.5.0.30
	binutils-2_21-branchpoint:1.5
	binutils-2_20_1:1.5
	binutils-2_20:1.5
	binutils-arc-20081103-branch:1.5.0.28
	binutils-arc-20081103-branchpoint:1.5
	binutils-2_20-branch:1.5.0.26
	binutils-2_20-branchpoint:1.5
	dje-cgen-play1-branch:1.5.0.24
	dje-cgen-play1-branchpoint:1.5
	arc-20081103-branch:1.5.0.22
	arc-20081103-branchpoint:1.5
	binutils-2_19_1:1.5
	binutils-2_19:1.5
	binutils-2_19-branch:1.5.0.20
	binutils-2_19-branchpoint:1.5
	binutils-2_18:1.5
	binutils-2_18-branch:1.5.0.18
	binutils-2_18-branchpoint:1.5
	binutils-csl-coldfire-4_1-32:1.5
	binutils-csl-sourcerygxx-4_1-32:1.5
	binutils-csl-innovasic-fido-3_4_4-33:1.5
	binutils-csl-sourcerygxx-3_4_4-32:1.5
	binutils-csl-coldfire-4_1-30:1.5
	binutils-csl-sourcerygxx-4_1-30:1.5
	binutils-csl-coldfire-4_1-28:1.5
	binutils-csl-sourcerygxx-4_1-29:1.5
	binutils-csl-sourcerygxx-4_1-28:1.5
	binutils-csl-arm-2006q3-27:1.5
	binutils-csl-sourcerygxx-4_1-27:1.5
	binutils-csl-arm-2006q3-26:1.5
	binutils-csl-sourcerygxx-4_1-26:1.5
	binutils-csl-sourcerygxx-4_1-25:1.5
	binutils-csl-sourcerygxx-4_1-24:1.5
	binutils-csl-sourcerygxx-4_1-23:1.5
	binutils-csl-sourcerygxx-4_1-21:1.5
	binutils-csl-arm-2006q3-21:1.5
	binutils-csl-sourcerygxx-4_1-22:1.5
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.5
	binutils-csl-sourcerygxx-4_1-20:1.5
	binutils-csl-arm-2006q3-19:1.5
	binutils-csl-sourcerygxx-4_1-19:1.5
	binutils-csl-sourcerygxx-4_1-18:1.5
	binutils-csl-renesas-4_1-9:1.5
	binutils-csl-sourcerygxx-3_4_4-25:1.5
	binutils-csl-renesas-4_1-8:1.5
	binutils-csl-renesas-4_1-7:1.5
	binutils-csl-renesas-4_1-6:1.5
	binutils-csl-sourcerygxx-4_1-17:1.5
	binutils-csl-sourcerygxx-4_1-14:1.5
	binutils-csl-sourcerygxx-4_1-15:1.5
	binutils-csl-sourcerygxx-4_1-13:1.5
	binutils-2_17:1.5
	binutils-csl-sourcerygxx-4_1-12:1.5
	binutils-csl-sourcerygxx-3_4_4-21:1.5
	binutils-csl-wrs-linux-3_4_4-24:1.5
	binutils-csl-wrs-linux-3_4_4-23:1.5
	binutils-csl-sourcerygxx-4_1-9:1.5
	binutils-csl-sourcerygxx-4_1-8:1.5
	binutils-csl-sourcerygxx-4_1-7:1.5
	binutils-csl-arm-2006q1-6:1.5
	binutils-csl-sourcerygxx-4_1-6:1.5
	binutils-csl-wrs-linux-3_4_4-22:1.5
	binutils-csl-coldfire-4_1-11:1.5
	binutils-csl-sourcerygxx-3_4_4-19:1.5
	binutils-csl-coldfire-4_1-10:1.5
	binutils-csl-sourcerygxx-4_1-5:1.5
	binutils-csl-sourcerygxx-4_1-4:1.5
	binutils-csl-wrs-linux-3_4_4-21:1.5
	binutils-csl-morpho-4_1-4:1.5
	binutils-csl-sourcerygxx-3_4_4-17:1.5
	binutils-csl-wrs-linux-3_4_4-20:1.5
	binutils-2_17-branch:1.5.0.16
	binutils-2_17-branchpoint:1.5
	binutils-csl-2_17-branch:1.5.0.14
	binutils-csl-2_17-branchpoint:1.5
	binutils-csl-gxxpro-3_4-branch:1.5.0.12
	binutils-csl-gxxpro-3_4-branchpoint:1.5
	binutils-2_16_1:1.5
	binutils-csl-arm-2005q1b:1.5
	binutils-2_16:1.5
	binutils-csl-arm-2005q1a:1.5
	binutils-csl-arm-2005q1-branch:1.5.0.10
	binutils-csl-arm-2005q1-branchpoint:1.5
	binutils-2_16-branch:1.5.0.8
	binutils-2_16-branchpoint:1.5
	csl-arm-2004-q3d:1.5
	csl-arm-2004-q3:1.5
	binutils-2_15:1.5
	binutils-2_15-branchpoint:1.5
	csl-arm-2004-q1a:1.5
	csl-arm-2004-q1:1.5
	binutils-2_15-branch:1.5.0.6
	cagney_bfdfile-20040213-branch:1.5.0.4
	cagney_bfdfile-20040213-branchpoint:1.5
	cagney_bigcore-20040122-branch:1.5.0.2
	cagney_bigcore-20040122-branchpoint:1.5
	csl-arm-2003-q4:1.5
	binutils_latest_snapshot:1.6;
locks; strict;
comment	@# @;


1.6
date	2012.12.17.16.55.53;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	2003.08.17.03.16.22;	author jle;	state Exp;
branches;
next	1.4;

1.4
date	2003.08.06.19.53.19;	author jle;	state Exp;
branches;
next	1.3;

1.3
date	2003.08.06.04.37.10;	author jle;	state Exp;
branches;
next	1.2;

1.2
date	2003.08.04.02.23.49;	author jle;	state Exp;
branches;
next	1.1;

1.1
date	2003.08.02.04.27.50;	author jle;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Add copyright notices
@
text
@
Testsuite for the i860 version of the GNU assembler
---------------------------------------------------

This is a simple testsuite for the i860 assembler.  It currently
consists mostly of testcases for checking that every instruction is
parsed correctly and that correct object code is generated (these
are called "blah.s").  The files called "blah-err.s" test for error
conditions.

The suite includes testcases for the base i860XR instruction set as well
as the enhanced i860XP instructions and control registers.

The expected results files were generated using the UNIX System V/i860
Release 4 vendor assembler (/usr/ccs/bin/as -V reports version
"Standard C Development Environment  (SCDE) 5.0 12/08/89").  This
way GAS/i860 is tested against a known good assembler.

TODO:
 - Relocation testing is basically non-existent.
 - pst.d (pixel store) is the only instruction with no testcase.
 - Some pseudo instructions need testcases (mov, all pfmov, etc.).
 - More tests for dual instruction mode: check that dual mode has a
   proper pair (FLOP/core) of instructions, and other error conditions.
 - Most current testcases use the default AT&T/SVR4 syntax; a few simple
   tests of the Intel syntax should be added to prevent bitrot (including
   relocatable expression syntax, etc).  Test file dual03.s uses Intel
   syntax lightly (i.e., register names without '%' prefix).

Contact me (Jason Eckhardt, jle@@rice.edu) if you'd like to help.

Known testsuite failures:
  - none.

Copyright (C) 2012 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.
@


1.5
log
@include/opcode/ChangeLog:
2003-08-16  Jason Eckhardt  <jle@@rice.edu>

        * i860.h (fmov.ds): Expand as famov.ds.
        (fmov.sd): Expand as famov.sd.
        (pfmov.ds): Expand as pfamov.ds.

gas/testsuite/ChangeLog:
2003-08-16  Jason Eckhardt  <jle@@rice.edu>

        * gas/i860/pseudo-ops01.{s,d}: New files.
        * gas/i860/i860.exp: Execute the new test above.
        * gas/i860/README.i860: Mention that pseudo-ops need more testing
        and remove the align fill defect from the list.
@
text
@d34 2
d37 3
@


1.4
log
@gas:
2003-08-06  Jason Eckhardt  <jle@@rice.edu>

        * config/tc-i860.c (i860_process_insn): Check that instructions
        with their dual-bit set are 8-byte aligned.

gas/testsuite:
2003-08-06  Jason Eckhardt  <jle@@rice.edu>

        * gas/i860/dual02-err.l: Update expected error message.
        * gas/i860/README.i860: Remove dual02-err from known failure list.
@
text
@d22 1
a28 3
 - Currently, .align in a .text section fills with 0x00000000.  This is
   a defect and it needs to fill with nop (0xa0000000).  Write a testcase
   for it.
@


1.3
log
@2003-08-05  Jason Eckhardt  <jle@@rice.edu>

        * gas/i860/README.i860: Remove dual01 from the known failures.
@
text
@d28 3
d35 1
a35 2
  - dual02-err.s: GAS currently doesn't check that dual mode pairs
      are properly aligned.
@


1.2
log
@2003-08-03  Jason Eckhardt  <jle@@rice.edu>

        * gas/i860/dual01.{s,d}: New files.
        * gas/i860/dual02-err.{s,l}: New files.
        * gas/i860/dual03.{s,d}: New files.
        * gas/i860/i860.exp: Execute the above new tests.
        * gas/i860/README.i860: Update.
@
text
@d31 1
a31 3
Known failures:
  - dual01.s: GAS mishandles d.fnop (dual bit erroneously set on next
      instruction).
@


1.1
log
@2003-08-01  Jason Eckhardt  <jle@@rice.edu>

        * gas/i860/README.i860: New file.
@
text
@d6 4
a9 2
consists of testcases for checking that every instruction is
parsed correctly and that correct object code is generated.
d11 1
a11 1
It includes testcases for the base i860XR instruction set as well
d22 6
a27 5
 - Tests for dual instruction mode: alignment of a dual mode pair,
   check that dual mode has a proper pair (FLOP/integer) of instructions,
   known gas defect when handling the d.fnop, etc.
 - All current testcases use the default AT&T/SVR4 syntax; a few simple
   tests of the Intel syntax should be added to prevent bitrot.
d30 6
@

