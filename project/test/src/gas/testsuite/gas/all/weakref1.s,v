head	1.5;
access;
symbols
	binutils-2_24-branch:1.5.0.14
	binutils-2_24-branchpoint:1.5
	binutils-2_21_1:1.5
	binutils-2_23_2:1.5
	binutils-2_23_1:1.5
	binutils-2_23:1.5
	binutils-2_23-branch:1.5.0.12
	binutils-2_23-branchpoint:1.5
	binutils-2_22_branch:1.5.0.10
	binutils-2_22:1.5
	binutils-2_22-branch:1.5.0.8
	binutils-2_22-branchpoint:1.5
	binutils-2_21:1.5
	binutils-2_21-branch:1.5.0.6
	binutils-2_21-branchpoint:1.5
	binutils-2_20_1:1.5
	binutils-2_20:1.5
	binutils-arc-20081103-branch:1.4.0.12
	binutils-arc-20081103-branchpoint:1.4
	binutils-2_20-branch:1.5.0.4
	binutils-2_20-branchpoint:1.5
	dje-cgen-play1-branch:1.5.0.2
	dje-cgen-play1-branchpoint:1.5
	arc-20081103-branch:1.4.0.10
	arc-20081103-branchpoint:1.4
	binutils-2_19_1:1.4
	binutils-2_19:1.4
	binutils-2_19-branch:1.4.0.8
	binutils-2_19-branchpoint:1.4
	binutils-2_18:1.4
	binutils-2_18-branch:1.4.0.6
	binutils-2_18-branchpoint:1.4
	binutils-csl-coldfire-4_1-32:1.4
	binutils-csl-sourcerygxx-4_1-32:1.4
	binutils-csl-innovasic-fido-3_4_4-33:1.4
	binutils-csl-coldfire-4_1-30:1.4
	binutils-csl-sourcerygxx-4_1-30:1.4
	binutils-csl-coldfire-4_1-28:1.4
	binutils-csl-sourcerygxx-4_1-29:1.4
	binutils-csl-sourcerygxx-4_1-28:1.4
	binutils-csl-arm-2006q3-27:1.4
	binutils-csl-sourcerygxx-4_1-27:1.4
	binutils-csl-arm-2006q3-26:1.4
	binutils-csl-sourcerygxx-4_1-26:1.4
	binutils-csl-sourcerygxx-4_1-25:1.4
	binutils-csl-sourcerygxx-4_1-24:1.4
	binutils-csl-sourcerygxx-4_1-23:1.4
	binutils-csl-sourcerygxx-4_1-21:1.4
	binutils-csl-arm-2006q3-21:1.4
	binutils-csl-sourcerygxx-4_1-22:1.4
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.4
	binutils-csl-sourcerygxx-4_1-20:1.4
	binutils-csl-arm-2006q3-19:1.4
	binutils-csl-sourcerygxx-4_1-19:1.4
	binutils-csl-sourcerygxx-4_1-18:1.4
	binutils-csl-renesas-4_1-9:1.4
	binutils-csl-renesas-4_1-8:1.4
	binutils-csl-renesas-4_1-7:1.4
	binutils-csl-renesas-4_1-6:1.4
	binutils-csl-sourcerygxx-4_1-17:1.4
	binutils-csl-sourcerygxx-4_1-14:1.4
	binutils-csl-sourcerygxx-4_1-15:1.4
	binutils-csl-sourcerygxx-4_1-13:1.4
	binutils-2_17:1.4
	binutils-csl-sourcerygxx-4_1-12:1.4
	binutils-csl-sourcerygxx-3_4_4-21:1.4
	binutils-csl-sourcerygxx-4_1-9:1.4
	binutils-csl-sourcerygxx-4_1-8:1.4
	binutils-csl-sourcerygxx-4_1-7:1.4
	binutils-csl-arm-2006q1-6:1.4
	binutils-csl-sourcerygxx-4_1-6:1.4
	binutils-csl-coldfire-4_1-11:1.4
	binutils-csl-sourcerygxx-3_4_4-19:1.4
	binutils-csl-coldfire-4_1-10:1.4
	binutils-csl-sourcerygxx-4_1-5:1.4
	binutils-csl-sourcerygxx-4_1-4:1.4
	binutils-csl-morpho-4_1-4:1.4
	binutils-csl-sourcerygxx-3_4_4-17:1.4
	binutils-2_17-branch:1.4.0.4
	binutils-2_17-branchpoint:1.4
	binutils-csl-2_17-branch:1.4.0.2
	binutils-csl-2_17-branchpoint:1.4
	binutils_latest_snapshot:1.5;
locks; strict;
comment	@# @;


1.5
date	2009.04.16.04.24.06;	author amodra;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.20.22.03.25;	author danglin;	state Exp;
branches;
next	1.3;

1.3
date	2005.11.16.22.00.31;	author rth;	state Exp;
branches;
next	1.2;

1.2
date	2005.11.04.19.45.25;	author aoliva;	state Exp;
branches;
next	1.1;

1.1
date	2005.10.24.17.51.42;	author aoliva;	state Exp;
branches;
next	;


desc
@@


1.5
log
@binutils/testsuite/
	* binutils-all/localize-hidden-1.s: Use "==" instead of ".set".
	* binutils-all/localize-hidden-2.s: Likewise.
gas/testsuite/
	* gas/all/gas.exp: Disable assign and assign-ok tests on blackfin.
	* gas/all/p2425.s: Use "==" instead of "=".
	* gas/all/weakref1.s: Likewise.
	* gas/macros/and.s: Likewise.
	* gas/macros/test1.s: Likewise.
	* gas/hppa/parse/parse.exp: Remove xfail on block1.
ld/testsuite/
	* ld-libs/lib-1.s: Use "==" instead of ".set".
	* ld-libs/lib-2.s: Likewise.
	* ld-scripts/defined.s: Likewise.
@
text
@	.text
l:
/* a# test references after weakref. */
	.weakref Wwa1, wa1
	.long Wwa1

	.weakref Wua2, ua2
	.long ua2

	.weakref Wua3, ua3
	.long Wua3
	.long ua3

	.weakref Wua4, ua4
	.long ua4
	.long Wua4

	.weakref Wna5, na5

/* b# test references before weakref.  */
	.long Wwb1
	.weakref Wwb1, wb1

	.long ub2
	.weakref Wub2, ub2

	.long Wub3
	.long ub3
	.weakref Wub3, ub3

	.long ub4
	.long Wub4
	.weakref Wub4, ub4

/* c# test combinations of references before and after weakref.  */
	.long Wwc1
	.weakref Wwc1, wc1
	.long Wwc1

	.long uc2
	.weakref Wuc2, uc2
	.long uc2

	.long Wuc3
	.long uc3
	.weakref Wuc3, uc3
	.long Wuc3
	.long uc3

	.long uc4
	.long Wuc4
	.weakref Wuc4, uc4
	.long uc4
	.long Wuc4

	.long Wuc5
	.long uc5
	.weakref Wuc5, uc5
	.long uc5
	.long Wuc5

	.long uc6
	.long Wuc6
	.weakref Wuc6, uc6
	.long uc6
	.long Wuc6

	.long uc7
	.weakref Wuc7, uc7
	.long Wuc7

	.long Wuc8
	.weakref Wuc8, uc8
	.long uc8

	.long Wuc9
	.weakref Wuc9, uc9
	.long Wuc9
	.long uc9

/* w# test that explicitly weak target don't lose the weak status */
	.weakref Www1, ww1
	.weak ww1
	.long ww1

	.weak ww2
	.weakref Www2, ww2
	.long ww2

	.weak ww3
	.long ww3
	.weakref Www3, ww3
	.long ww3

	.long ww4
	.weakref Www4, ww4
	.weak ww4
	.long ww4

	.long ww5
	.weakref Www5, ww5
	.long ww5
	.weak ww5

	.weakref Www6, ww6
	.weak ww6
	.long Www6

	.weak ww7
	.weakref Www7, ww7
	.long Www7

	.weak ww8
	.long Www8
	.weakref Www8, ww8
	.long Www8

	.long Www9
	.weakref Www9, ww9
	.weak ww9
	.long Www9

	.long Www10
	.weakref Www10, ww10
	.long Www10
	.weak ww10

/* m# test multiple weakrefs */
	.weakref Wnm4a, nm4
	.weakref Wnm4b, nm4

	.weakref Wum5a, um5
	.weakref Wum5b, um5
	.long um5

	.weakref Wwm6a, wm6
	.weakref Wwm6b, wm6
	.long Wwm6a

	.weakref Wwm7a, wm7
	.weakref Wwm7b, wm7
	.long Wwm7b

	.weakref Wwm8a, wm8
	.long Wwm8b
	.weakref Wwm8b, wm8

/* h# test weakref chain */
	.weakref Wnh1a, nh1
	.weakref Wnh1b, Wnh1a
	.weakref Wnh1c, Wnh1b

	.weakref Wwh2a, wh2
	.weakref Wwh2b, Wwh2a
	.long Wwh2b

	.weakref Wwh3a, wh3
	.weakref Wwh3b, Wwh3a
	.long Wwh3a

	.weakref Wwh4b, Wwh4a
	.weakref Wwh4a, wh4
	.long Wwh4b

	.long Wwh5b
	.weakref Wwh5a, wh5
	.weakref Wwh5b, Wwh5a

	.long Wwh6b
	.weakref Wwh6b, Wwh6a
	.weakref Wwh6a, wh6

	.weakref Wwh7b, Wwh7a
	.long Wwh7b
	.weakref Wwh7a, wh7

	.long Wuh8c
	.weakref Wuh8a, uh8
	.weakref Wuh8b, Wuh8a
	.weakref Wuh8c, Wuh8b
	.long uh8

	.long Wuh9c
	.weakref Wuh9c, Wuh9b
	.weakref Wuh9b, Wuh9a
	.weakref Wuh9a, uh9
	.long uh9

/* d# target symbol definitions */
	.weakref Wld1, ld1
	.long Wld1
	ld1 == l

	.weakref Wld2, ld2
	.long Wld2
ld2:

ld3:
	.weakref Wld3, ld3
	.long Wld3

ld4:
	.long Wld4
	.weakref Wld4, ld4

	.global ud5
	.weakref Wud5, ud5
	.long Wud5

	.global gd6
	.weakref Wgd6, gd6
	.long Wgd6
gd6:

	.weakref Wgd7, gd7
	.long Wgd7
	.global gd7
gd7:

	.long Wld8c
	.weakref Wld8a, ld8
	.weakref Wld8b, Wld8a
	.weakref Wld8c, Wld8b
	.long ld8
ld8:

	.long Wld9c
	.weakref Wld9c, Wld9b
	.weakref Wld9b, Wld9a
	.weakref Wld9a, ld9
	.long ld9
ld9:
@


1.4
log
@	Bug gas/1879
	* gas/all/weakref1.d: Check for "$CODE$" as well as ".text".
	* gas/all/weakref1.s: Indent "-ld1 = l".
	* gas/all/weakref1g.d: Remove --no-sort option.
	* gas/all/weakref1l.d: Likewise.
	* gas/all/weakref1u.d: Likewise.  Sort expected results.
	* gas/all/weakref1w.d: Likewise.
	* gas/all/weakref2.s: Indent directives.
	* gas/all/weakref3.s: Likewise.
@
text
@d192 1
a192 1
	ld1 = l
@


1.3
log
@        * gas/all/weakref1.s: Use "=" instead of ".set" for equivalence.
@
text
@d192 1
a192 1
ld1 = l
@


1.2
log
@gas/ChangeLog:
* read.c (s_weakref): Do not permit redefinitions.
* symbols.c (colon): Do not permit redefinitions of equated
symbols.
gas/testsuite/ChangeLog:
* gas/all/gas.exp: Remove weakref xfail.  Run weakref4.s.
* gas/all/weakref1.s: Move redefinition bits to...
* gas/all/weakref4.s: ... new file.
* gas/all/weakref1.d: Remove command moved to weakref1u.  Adjust
remaining command for leading tabs.  Regenerate.
* gas/all/weakref1l.d: Regenerate.
* gas/all/weakref1u.d: Likewise.
* gas/all/wealref1w.d: Likewise.
@
text
@d192 1
a192 1
	.set ld1, l
@


1.1
log
@gas/ChangeLog:
* read.c (potable): Add weakref.
(s_weakref): New.
* read.h (s_weakref): Declare.
* struc-symbol.h (struct symbol): Add sy_weakrefr and sy_weakrefd.
* symbols.c (colon): Clear weakrefr.
(symbol_find_exact): Rename to, and reimplement in terms of...
(symbol_find_exact_noref): ... new function.
(symbol_find): Likewise...
(symbol_find_noref): ... ditto.
(resolve_symbol_value): Resolve weakrefr without setting their
values.
(S_SET_WEAK): Call hook.
(S_GET_VALUE): Follow weakref link.
(S_SET_VALUE): Clear weakrefr.
(S_IS_WEAK): Follow weakref link.
(S_IS_WEAKREFR, S_SET_WEAKREFR, S_CLEAR_WEAKREFR): New.
(S_IS_WEAKREFD, S_SET_WEAKREFD, S_CLEAR_WEAKREFD): New.
(symbol_set_value_expression, symbol_set_frag): Clear weakrefr.
(symbol_mark_used): Follow weakref link.
(print_symbol_value_1): Print weak, weakrefr and weakrefd.
* symbols.h (symbol_find_noref, symbol_find_exact_noref): Declare.
(S_IS_WEAKREFR, S_SET_WEAKREFR, S_CLEAR_WEAKREFR): Declare.
(S_IS_WEAKREFD, S_SET_WEAKREFD, S_CLEAR_WEAKREFD): Declare.
* write.c (adust_reloc_syms): Follow weakref link.  Do not
complain if target is undefined.
(write_object_file): Likewise.  Remove weakrefr symbols.  Drop
unreferenced weakrefd symbols.
* config/obj-coff.c (obj_frob_symbol): Do not force WEAKREFD
symbols EXTERNAL.
(pecoff_obj_set_weak_hook, pecoff_obj_clear_weak_hook): New.
* config/obj-coff.h (obj_set_weak_hook, obj_clear_weak_hook): Define.
* doc/as.texinfo: Document weakref.
* doc/internals.texi: Document new struct members, internal
functions and hooks.
gas/testsuite/ChangeLog:
* gas/all/weakref1.s, gas/all/weakref1.d: New test.
* gas/all/weakref1g.d, gas/all/weakref1l.d: New tests.
* gas/all/weakref1u.d, gas/all/weakref1w.d: New tests.
* gas/all/weakref2.s, gas/all/weakref3.s: New tests.
* gas/all/gas.exp: Run new tests.
@
text
@a128 11
	.weakref Wnm1, nm1
	.weakref Wnm1, nm1

	.weakref Wum2, um2
	.weakref Wum2, um2
	.long um2

	.weakref Wwm3, wm3
	.weakref Wwm3, wm3
	.long Wwm3

a188 34
/* r# weakref redefinitions, to and from */
	.weakref lr1, nr1
	.long lr1
	.set lr1, l
	.long lr1

	.long lr2
	.weakref lr2, nr2
	.set lr2, l
	.long lr2

	.set Wwr3, l
	.long Wwr3
	.weakref Wwr3, wr3
	.long Wwr3

	.set Wwr4, l
	.weakref Wwr4, wr4
	.long Wwr4

	.set Wwr5, l
	.long Wwr5
	.weakref Wwr5, wr5

	.weakref lr6, ur6
	.long lr6
	.set lr6, l
	.long ur6

	.weakref lr7, nr7
	.long lr7
lr7:
	.long lr7

@

