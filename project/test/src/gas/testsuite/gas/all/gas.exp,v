head	1.84;
access;
symbols
	binutils-2_24-branch:1.84.0.2
	binutils-2_24-branchpoint:1.84
	binutils-2_21_1:1.67.2.1
	binutils-2_23_2:1.79
	binutils-2_23_1:1.79
	binutils-2_23:1.79
	binutils-2_23-branch:1.79.0.2
	binutils-2_23-branchpoint:1.79
	binutils-2_22_branch:1.74.0.4
	binutils-2_22:1.74
	binutils-2_22-branch:1.74.0.2
	binutils-2_22-branchpoint:1.74
	binutils-2_21:1.67
	binutils-2_21-branch:1.67.0.2
	binutils-2_21-branchpoint:1.67
	binutils-2_20_1:1.57.4.1
	binutils-2_20:1.57.4.1
	binutils-arc-20081103-branch:1.55.0.4
	binutils-arc-20081103-branchpoint:1.55
	binutils-2_20-branch:1.57.0.4
	binutils-2_20-branchpoint:1.57
	dje-cgen-play1-branch:1.57.0.2
	dje-cgen-play1-branchpoint:1.57
	arc-20081103-branch:1.55.0.2
	arc-20081103-branchpoint:1.55
	binutils-2_19_1:1.54.2.1
	binutils-2_19:1.54.2.1
	binutils-2_19-branch:1.54.0.2
	binutils-2_19-branchpoint:1.54
	binutils-2_18:1.47
	binutils-2_18-branch:1.47.0.2
	binutils-2_18-branchpoint:1.47
	binutils-csl-coldfire-4_1-32:1.40
	binutils-csl-sourcerygxx-4_1-32:1.40
	binutils-csl-innovasic-fido-3_4_4-33:1.40
	binutils-csl-sourcerygxx-3_4_4-32:1.25
	binutils-csl-coldfire-4_1-30:1.40
	binutils-csl-sourcerygxx-4_1-30:1.40
	binutils-csl-coldfire-4_1-28:1.40
	binutils-csl-sourcerygxx-4_1-29:1.40
	binutils-csl-sourcerygxx-4_1-28:1.40
	binutils-csl-arm-2006q3-27:1.40
	binutils-csl-sourcerygxx-4_1-27:1.40
	binutils-csl-arm-2006q3-26:1.40
	binutils-csl-sourcerygxx-4_1-26:1.40
	binutils-csl-sourcerygxx-4_1-25:1.40
	binutils-csl-sourcerygxx-4_1-24:1.40
	binutils-csl-sourcerygxx-4_1-23:1.40
	binutils-csl-sourcerygxx-4_1-21:1.40
	binutils-csl-arm-2006q3-21:1.40
	binutils-csl-sourcerygxx-4_1-22:1.40
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.40
	binutils-csl-sourcerygxx-4_1-20:1.40
	binutils-csl-arm-2006q3-19:1.40
	binutils-csl-sourcerygxx-4_1-19:1.40
	binutils-csl-sourcerygxx-4_1-18:1.40
	binutils-csl-renesas-4_1-9:1.40
	binutils-csl-sourcerygxx-3_4_4-25:1.25
	binutils-csl-renesas-4_1-8:1.40
	binutils-csl-renesas-4_1-7:1.40
	binutils-csl-renesas-4_1-6:1.40
	binutils-csl-sourcerygxx-4_1-17:1.40
	binutils-csl-sourcerygxx-4_1-14:1.40
	binutils-csl-sourcerygxx-4_1-15:1.40
	binutils-csl-sourcerygxx-4_1-13:1.40
	binutils-2_17:1.40
	binutils-csl-sourcerygxx-4_1-12:1.40
	binutils-csl-sourcerygxx-3_4_4-21:1.40
	binutils-csl-wrs-linux-3_4_4-24:1.25
	binutils-csl-wrs-linux-3_4_4-23:1.25
	binutils-csl-sourcerygxx-4_1-9:1.40
	binutils-csl-sourcerygxx-4_1-8:1.40
	binutils-csl-sourcerygxx-4_1-7:1.40
	binutils-csl-arm-2006q1-6:1.40
	binutils-csl-sourcerygxx-4_1-6:1.40
	binutils-csl-wrs-linux-3_4_4-22:1.25
	binutils-csl-coldfire-4_1-11:1.40
	binutils-csl-sourcerygxx-3_4_4-19:1.40
	binutils-csl-coldfire-4_1-10:1.40
	binutils-csl-sourcerygxx-4_1-5:1.40
	binutils-csl-sourcerygxx-4_1-4:1.40
	binutils-csl-wrs-linux-3_4_4-21:1.25
	binutils-csl-morpho-4_1-4:1.40
	binutils-csl-sourcerygxx-3_4_4-17:1.40
	binutils-csl-wrs-linux-3_4_4-20:1.25
	binutils-2_17-branch:1.40.0.4
	binutils-2_17-branchpoint:1.40
	binutils-csl-2_17-branch:1.40.0.2
	binutils-csl-2_17-branchpoint:1.40
	binutils-csl-gxxpro-3_4-branch:1.25.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.25
	binutils-2_16_1:1.25
	binutils-csl-arm-2005q1b:1.25
	binutils-2_16:1.25
	binutils-csl-arm-2005q1a:1.25
	binutils-csl-arm-2005q1-branch:1.25.0.4
	binutils-csl-arm-2005q1-branchpoint:1.25
	binutils-2_16-branch:1.25.0.2
	binutils-2_16-branchpoint:1.25
	csl-arm-2004-q3d:1.22
	csl-arm-2004-q3:1.21
	binutils-2_15:1.17
	binutils-2_15-branchpoint:1.17
	csl-arm-2004-q1a:1.17
	csl-arm-2004-q1:1.17
	binutils-2_15-branch:1.17.0.8
	cagney_bfdfile-20040213-branch:1.17.0.6
	cagney_bfdfile-20040213-branchpoint:1.17
	cagney_bigcore-20040122-branch:1.17.0.4
	cagney_bigcore-20040122-branchpoint:1.17
	csl-arm-2003-q4:1.17
	binutils-2_14:1.17
	binutils-2_14-branch:1.17.0.2
	binutils-2_14-branchpoint:1.17
	binutils-2_13_2_1:1.12
	binutils-2_13_2:1.12
	binutils-2_13_1:1.12
	binutils-2_13:1.12
	binutils-2_13-branchpoint:1.12
	binutils-2_13-branch:1.12.0.2
	binutils-2_12_1:1.10
	binutils-2_12:1.10
	binutils-2_12-branch:1.10.0.2
	binutils-2_12-branchpoint:1.10
	cygnus_cvs_20020108_pre:1.10
	binutils-2_11_2:1.5
	binutils-2_11_1:1.5
	binutils-2_11:1.5
	x86_64versiong3:1.5
	binutils-2_11-branch:1.5.0.2
	binutils-2_10_1:1.3
	binutils-2_10:1.3
	binutils-2_10-branch:1.3.0.2
	binutils-2_10-branchpoint:1.3
	binutils_latest_snapshot:1.84
	repo-unification-2000-02-06:1.2
	binu_ss_19990721:1.1.1.1
	binu_ss_19990602:1.1.1.1
	binu_ss_19990502:1.1.1.1
	cygnus:1.1.1;
locks; strict;
comment	@# @;


1.84
date	2013.06.22.16.44.15;	author rsandifo;	state Exp;
branches;
next	1.83;

1.83
date	2013.05.02.21.06.14;	author nickc;	state Exp;
branches;
next	1.82;

1.82
date	2013.04.15.10.30.22;	author jules;	state Exp;
branches;
next	1.81;

1.81
date	2013.04.11.10.54.13;	author jules;	state Exp;
branches;
next	1.80;

1.80
date	2012.12.17.16.55.48;	author nickc;	state Exp;
branches;
next	1.79;

1.79
date	2012.06.07.14.52.41;	author hjl;	state Exp;
branches;
next	1.78;

1.78
date	2012.06.07.13.47.14;	author hjl;	state Exp;
branches;
next	1.77;

1.77
date	2012.05.03.13.12.06;	author nickc;	state Exp;
branches;
next	1.76;

1.76
date	2012.04.07.14.16.34;	author davem;	state Exp;
branches;
next	1.75;

1.75
date	2012.02.13.02.31.17;	author amodra;	state Exp;
branches;
next	1.74;

1.74
date	2011.05.14.00.52.07;	author amodra;	state Exp;
branches;
next	1.73;

1.73
date	2011.05.13.04.16.22;	author amodra;	state Exp;
branches;
next	1.72;

1.72
date	2011.04.18.13.43.20;	author gingold;	state Exp;
branches;
next	1.71;

1.71
date	2011.04.12.06.21.25;	author amodra;	state Exp;
branches;
next	1.70;

1.70
date	2011.04.06.17.09.51;	author jsm28;	state Exp;
branches;
next	1.69;

1.69
date	2010.12.31.20.01.39;	author danglin;	state Exp;
branches;
next	1.68;

1.68
date	2010.11.20.15.36.32;	author rsandifo;	state Exp;
branches;
next	1.67;

1.67
date	2010.10.27.15.01.32;	author krebbel;	state Exp;
branches
	1.67.2.1;
next	1.66;

1.66
date	2010.09.29.06.49.33;	author amodra;	state Exp;
branches;
next	1.65;

1.65
date	2010.09.23.12.15.55;	author amodra;	state Exp;
branches;
next	1.64;

1.64
date	2010.08.03.10.30.52;	author amodra;	state Exp;
branches;
next	1.63;

1.63
date	2010.08.02.08.48.56;	author gingold;	state Exp;
branches;
next	1.62;

1.62
date	2010.06.29.04.17.26;	author amodra;	state Exp;
branches;
next	1.61;

1.61
date	2010.05.13.06.46.13;	author amodra;	state Exp;
branches;
next	1.60;

1.60
date	2010.05.05.14.17.50;	author nathan;	state Exp;
branches;
next	1.59;

1.59
date	2009.09.29.14.17.09;	author nickc;	state Exp;
branches;
next	1.58;

1.58
date	2009.09.08.02.54.55;	author amodra;	state Exp;
branches;
next	1.57;

1.57
date	2009.04.16.04.24.06;	author amodra;	state Exp;
branches
	1.57.4.1;
next	1.56;

1.56
date	2009.01.29.09.03.09;	author nickc;	state Exp;
branches;
next	1.55;

1.55
date	2008.09.15.13.53.47;	author amodra;	state Exp;
branches
	1.55.4.1;
next	1.54;

1.54
date	2008.08.20.23.38.39;	author bwilson;	state Exp;
branches
	1.54.2.1;
next	1.53;

1.53
date	2008.04.10.12.45.18;	author nickc;	state Exp;
branches;
next	1.52;

1.52
date	2008.02.01.17.58.48;	author bwilson;	state Exp;
branches;
next	1.51;

1.51
date	2007.12.29.01.57.08;	author danglin;	state Exp;
branches;
next	1.50;

1.50
date	2007.10.30.15.18.29;	author nickc;	state Exp;
branches;
next	1.49;

1.49
date	2007.10.04.17.05.37;	author nickc;	state Exp;
branches;
next	1.48;

1.48
date	2007.08.28.13.21.53;	author jsm28;	state Exp;
branches;
next	1.47;

1.47
date	2007.07.03.11.17.32;	author nickc;	state Exp;
branches;
next	1.46;

1.46
date	2007.06.29.14.09.31;	author nickc;	state Exp;
branches;
next	1.45;

1.45
date	2007.03.14.13.39.54;	author hjl;	state Exp;
branches;
next	1.44;

1.44
date	2007.02.06.15.13.26;	author nickc;	state Exp;
branches;
next	1.43;

1.43
date	2007.02.05.20.10.25;	author brolley;	state Exp;
branches;
next	1.42;

1.42
date	2007.01.08.17.21.49;	author nickc;	state Exp;
branches;
next	1.41;

1.41
date	2006.09.20.11.35.11;	author nickc;	state Exp;
branches;
next	1.40;

1.40
date	2005.11.21.04.30.32;	author danglin;	state Exp;
branches;
next	1.39;

1.39
date	2005.11.17.07.29.28;	author jbeulich;	state Exp;
branches;
next	1.38;

1.38
date	2005.11.08.16.23.31;	author nickc;	state Exp;
branches;
next	1.37;

1.37
date	2005.11.07.08.04.53;	author jbeulich;	state Exp;
branches;
next	1.36;

1.36
date	2005.11.04.19.45.25;	author aoliva;	state Exp;
branches;
next	1.35;

1.35
date	2005.11.04.13.25.59;	author jbeulich;	state Exp;
branches;
next	1.34;

1.34
date	2005.10.29.10.54.08;	author hp;	state Exp;
branches;
next	1.33;

1.33
date	2005.10.27.07.40.07;	author jbeulich;	state Exp;
branches;
next	1.32;

1.32
date	2005.10.25.17.40.18;	author nickc;	state Exp;
branches;
next	1.31;

1.31
date	2005.10.24.17.51.42;	author aoliva;	state Exp;
branches;
next	1.30;

1.30
date	2005.10.11.11.16.17;	author nickc;	state Exp;
branches;
next	1.29;

1.29
date	2005.09.30.15.10.11;	author clm;	state Exp;
branches;
next	1.28;

1.28
date	2005.08.11.01.21.21;	author amodra;	state Exp;
branches;
next	1.27;

1.27
date	2005.04.15.06.06.42;	author amodra;	state Exp;
branches;
next	1.26;

1.26
date	2005.04.11.22.32.22;	author kettenis;	state Exp;
branches;
next	1.25;

1.25
date	2005.02.16.05.04.33;	author amodra;	state Exp;
branches;
next	1.24;

1.24
date	2005.01.19.11.53.53;	author rsandifo;	state Exp;
branches;
next	1.23;

1.23
date	2004.11.22.13.00.23;	author hp;	state Exp;
branches;
next	1.22;

1.22
date	2004.11.04.15.03.05;	author hp;	state Exp;
branches;
next	1.21;

1.21
date	2004.08.25.17.05.10;	author hjl;	state Exp;
branches;
next	1.20;

1.20
date	2004.08.24.11.37.54;	author nickc;	state Exp;
branches;
next	1.19;

1.19
date	2004.08.13.19.53.52;	author nickc;	state Exp;
branches;
next	1.18;

1.18
date	2004.07.27.11.37.11;	author nickc;	state Exp;
branches;
next	1.17;

1.17
date	2002.11.18.08.28.39;	author sveinse;	state Exp;
branches;
next	1.16;

1.16
date	2002.11.07.09.20.10;	author nickc;	state Exp;
branches;
next	1.15;

1.15
date	2002.11.06.19.36.19;	author nickc;	state Exp;
branches;
next	1.14;

1.14
date	2002.09.09.01.54.42;	author bje;	state Exp;
branches;
next	1.13;

1.13
date	2002.08.16.00.06.04;	author amodra;	state Exp;
branches;
next	1.12;

1.12
date	2002.05.23.17.12.49;	author hjl;	state Exp;
branches;
next	1.11;

1.11
date	2002.04.19.09.40.37;	author nickc;	state Exp;
branches;
next	1.10;

1.10
date	2001.11.25.15.21.58;	author aj;	state Exp;
branches;
next	1.9;

1.9
date	2001.11.23.16.26.01;	author law;	state Exp;
branches;
next	1.8;

1.8
date	2001.11.13.14.22.43;	author twall;	state Exp;
branches;
next	1.7;

1.7
date	2001.09.05.02.05.06;	author law;	state Exp;
branches;
next	1.6;

1.6
date	2001.07.09.08.19.18;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	2000.07.20.17.53.38;	author hp;	state Exp;
branches;
next	1.4;

1.4
date	2000.06.20.13.52.30;	author twall;	state Exp;
branches;
next	1.3;

1.3
date	2000.03.27.23.47.09;	author amodra;	state Exp;
branches;
next	1.2;

1.2
date	99.09.12.05.32.03;	author ian;	state Exp;
branches;
next	1.1;

1.1
date	99.05.03.07.28.46;	author rth;	state Exp;
branches
	1.1.1.1;
next	;

1.67.2.1
date	2011.02.10.03.41.06;	author amodra;	state Exp;
branches;
next	;

1.57.4.1
date	2009.09.08.02.56.27;	author amodra;	state Exp;
branches;
next	;

1.55.4.1
date	2009.09.10.15.09.37;	author amylaar;	state Exp;
branches;
next	;

1.54.2.1
date	2008.09.15.13.57.00;	author amodra;	state Exp;
branches;
next	;

1.1.1.1
date	99.05.03.07.28.46;	author rth;	state Exp;
branches;
next	;


desc
@@


1.84
log
@	* configure.ac (mips*-*-bsd*, mips*-*-ultrix*, mips*-*-osf*)
	(mips*-*-ecoff*, mips*-*-pe*, mips*-*-irix* [v4 and earlier])
	(mips*-*-lnews*, mips*-*-riscos*): Add gas and ld to noconfigdirs.
	* configure: Regenerate.

gas/
	* NEWS: Note removal of ECOFF support.
	* doc/as.texinfo (--emulation): Update for the removal of MIPS ECOFF.
	* Makefile.am (TARG_ENV_HFILES): Remove config/te-lnews.h.
	(MULTI_CFILES): Remove config/e-mipsecoff.c.
	* Makefile.in: Regenerate.
	* configure.in: Remove MIPS ECOFF references.
	(mips-sony-bsd*, mips-*-bsd*, mips-*-lnews*-ecoff, mips-*-*-ecoff):
	Delete cases.
	(mips-*-irix5*-*, mips*-*-linux*-*, mips*-*-freebsd*)
	(mips*-*-kfreebsd*-gnu, mips-*-*-elf): Fold into...
	(mips-*-*): ...this single case.
	(mipsbecoff, mipslecoff, mipsecoff): Remove emulations.  Expect
	MIPS emulations to be e-mipself*.
	* configure: Regenerate.
	* configure.tgt (mips-sony-bsd*, mips-*-ultrix*, mips-*-osf*)
	(mips-*-ecoff*, mips-*-pe*, mips-*-irix*, ips-*-lnews*, mips-*-riscos*)
	(mips-*-sysv*): Remove coff and ecoff cases.
	* as.c (mipsbecoff, mipslecoff, mipsecoff): Remove.
	* ecoff.c: Remove reference to MIPS ECOFF.
	* config/e-mipsecoff.c, config/te-lnews.h: Delete files.
	* config/tc-mips.c (ECOFF_LITTLE_FORMAT): Delete.
	(RDATA_SECTION_NAME, mips_target_form): Remove COFF and ECOFF cases.
	(mips_hi_fixup): Tweak comment.
	(append_insn): Require a howto.
	(mips_after_parse_args): Remove OBJ_MAYBE_ECOFF code.

gas/testsuite/
	* gas/all/gas.exp: Remove reference to mips-ecoff.
	* gas/mips/branch-misc-1.d, gas/mips/branch-misc-2.d,
	gas/mips/branch-misc-2-64.d, gas/mips/branch-misc-2pic.d,
	gas/mips/branch-misc-2pic-64.d, gas/mips/branch-swap.d: Remove
	skips for mips-*-ecoff.

ld/
	* NEWS: Document the removal of MIPS ECOFF targets.
	* ld.texinfo (--gpsize=@@var{value}): Use MIPS ELF rather than
	MIPS ECOFF as an example of a target that supports small data.
	* ldmain.c (g_switch_value): Likewise.
	* configure.tgt (mips*-*-pe, mips*-dec-ultrix*, mips*-dec-osf*)
	(mips*-sgi-irix* [v4 and earlier], mips*el-*-ecoff*, mips*-*-ecoff*)
	(mips*-*-bsd*, mips*-*-lnews*): Remove cases.
	* Makefile.am (ALL_EMULATION_SOURCES): Remove emipsbig.c, emipsbsd.c,
	emipsidt.c, emipsidtl.c, emipslit.c, emipslnews.c and emipspe.c.
	(emipsbig.c, emipsbsd.c, emipsidt.c, emipsidtl.c, emipslit.c)
	(emipslnews.c, emipspe.c): Delete rules.
	* Makefile.in: Regenerate.
	* emulparams/mipsbig.sh, emulparams/mipsbsd.sh, emulparams/mipsidt.sh,
	emulparams/mipsidtl.sh, emulparams/mipslit.sh, emulparams/mipslnews.sh,
	emulparams/mipspe.sh, emultempl/mipsecoff.em: Delete.
	* emultempl/m68kcoff.em: Update comment to say that MIPS ECOFF support
	has now been removed.
	* emultempl/pe.em: Remove TARGET_IS_mipspe checks.
@
text
@# Copyright 2012
# Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.  

#
# These tests should be valid on all targets.
#

# I think currently all targets fail this one when listings are enabled.
gas_test "p2425.s" ""   "" "pcrel values in assignment"

# p1480.s uses a ".space" directive which for most assemblers means
# "allocate some space".  On the PA it means "switch into this space".
#
# Therefore this test (as it is currently written) is completely bogus
# for any PA target.  Do not bother trying to run it and just claim
# it fails.
#
# The C54x uses ".space" to allocate bits, and requires absolute expressions;
# The ".space" directive is taken care of in the C54x-specific tests, so fail
#  here 
#
# The test also doesn't work on mep targets, since they use RELC, and it
# will avoid simplifying the expression since it conservatively assumes
# ugly expressions can be saved until link-time.
if { [istarget hppa*-*-*] || [istarget *c54x*-*-*] || [istarget mep*-*-*]} then {
    setup_xfail *-*-*
    fail "simplifiable double subtraction"
} else {
    gas_test "p1480.s" "" "-a>" "simplifiable double subtraction"
}

# No floating point support in assembly code for CRIS and Z80.
if { ![istarget cris-*-*] && ![istarget crisv32-*-*] 
     && ![istarget z80-*-*] } then {
    gas_test "float.s" ""   "" "simple FP constants"
}

# This test is meaningless for the PA; the difference of two undefined
# symbols is something that is (and must be) supported on the PA.
# The same is true for alpha-vms
#
# The MN10300 port supports link time relaxation which in turn allows
# for link time resolution of the differneces of two symbols which are
# undefined at assembly time.  Hence this test will not pass for the
# MN10300.  The same thing is true for the RX port as well.
if { ![istarget hppa*-*-*]
     && ![istarget alpha*-*-*vms*]
     && ![istarget rx-*-*]
     && ![istarget mn10300-*-*]
     && ![istarget msp430*-*-*]
     && ![istarget am3*-*-*] } then {
    gas_test_error "diff1.s" "" "difference of two undefined symbols"
}

gas_test_error "equiv1.s" "" ".equiv for symbol already set to another one"
gas_test_error "equiv2.s" "" ".equiv for symbol already set to an expression"

# .equ works differently on some targets.
case $target_triplet in {
    { hppa*-*-* } { }
    { *c54x*-*-* } { }
    default {
	gas_test "equ-ok.s" "" "" ".equ for symbol already set"
	gas_test_error "equ-bad.s" "" ".equ for symbol already set through .eqv"
    }
}

gas_test "eqv-ok.s" "" "" ".eqv support"
gas_test_error "eqv-bad.s" "" ".eqv for symbol already set"

if { ![istarget "bfin-*-*"] } then {
    gas_test "assign-ok.s" "" "" "== assignment support"
}
gas_test_error "assign-bad.s" "" "== assignment for symbol already set"

# .equ works differently on some targets.
# linkrelax-ing prevents most forward references from working.
case $target_triplet in {
    { *c54x*-*-* } { }
    { cr16*-*-* } { }
    { crx*-*-* } { }
    { h8300*-*-* } { }
    { hppa*-*-* } { }
    { mep-*-* } { }
    { mn10\[23\]00*-*-* } { }
    default {
	# Some targets don't manage to resolve BFD_RELOC_8 for constants.
	setup_xfail "alpha*-*-*" "*c30*-*-*" "*c4x*-*-*" \
	    "d\[13\]0v*-*-*" "i860-*-*" "mips*-*-*" \
	    "pdp11-*-*" "xtensa*-*-*"
	run_dump_test forward
    }
}

# aout relocs are often weird, so is mep. don't bother testing
# som doesn't use a .text section
# mmix doesn't like .L1:
# ti addresses aren't octets.
if { ![is_aout_format] } {
    case $target_triplet in {
	{ hppa*64*-*-* } {
	    run_dump_test fwdexp
	}
	{ hppa*-*-hpux* } { }
	{ mep-*-* } { }
	{ mmix-*-* } { }
	{ tic30*-*-* } { }
	{ tic4x*-*-* } { }
	{ tic54x*-*-* } { }
	default {
	    run_dump_test fwdexp
	}
    }
}

# .set works differently on some targets.
# most of the tests won't work on targets that set linkrelax.
# 4 octet bytes confuse address matching on ti targets.
# pdp11 gets unexpected reloc types.
case $target_triplet in {
    { alpha*-*-* } { }
    { cr16*-*-* } { }
    { crx*-*-* } { }
    { h8300-*-* } { }
    { mips*-*-* } { }
    { mn10200-*-* } { }
    { mn10300-*-* } { }
    { msp430*-*-* } { }
    { pdp11-*-* } { }
    { tic30*-*-* } { }
    { tic4x*-*-* } { }
    { tic54x*-*-* } { }
    { xtensa*-*-* } { }
    { z80-*-* } { }
    default {
	run_dump_test redef
	# These targets fail redef2 because they disallow redefined
	# symbols on relocs.
	setup_xfail "m68hc1*-*-*" "m6811-*-*" "m6812-*-*"
	setup_xfail "rx-*-*" "vax*-*-*" "xgate*-*-*" "z8k-*-*"
	run_dump_test redef2
	setup_xfail "m68hc1*-*-*" "m6811-*-*" "m6812-*-*"
	setup_xfail "rx-*-*" "vax*-*-*" "xgate*-*-*" "z8k-*-*"
	# rs6000-aix disallows redefinition via .comm.
	setup_xfail "*-*-aix*"
	# SOM uses a different syntax for .comm
	setup_xfail "hppa*-*-hpux*"
	# These targets fail redef3 because section contents for the
	# word referencing the .comm sym is not zero and/or its reloc
	# has a non-zero addend.  Relaxing the test would hide real
	# failures such as or32-elf.
	setup_xfail "bfin-*-*" "i\[3-7\]86-*-*coff" \
	    "i\[3-7\]86-*-*pe" "i\[3-7\]86-*-go32*" \
	    "i\[3-7\]86-*-cygwin*" "i\[3-7\]86-*-mingw*" "x86_64-*-mingw*"
	run_dump_test redef3
	gas_test_error "redef4.s" "" ".set for symbol already used as label"
	gas_test_error "redef5.s" "" ".set for symbol already defined through .comm"
    }
}

proc do_comment {} {
    set testname "comment.s: comments in listings"
    set x1 0
    set x2 0
    set x3 0
    set white {[ \t]*}
    gas_start "comment.s" "-al"
    while 1 {
# Apparently CRLF is received when using ptys for subprocesses; hence the
# \r\n for line 3.
	expect {
	    -re "^ +1\[ \t\]+# This\[^\n\]*\n"		{ set x1 1 }
	    -re "^ +2\[ \t\]+# correctly\[^\n\]*\n"	{ set x2 1 }
	    -re "^ +3\[ \t\]+/. C comments too. ./\r?\r?\n" { set x3 1 }
	    -re "\[^\n\]*\n"				{ }
	    timeout				{ perror "timeout\n"; break }
	    eof					{ break }
	}
    }
    gas_finish
    if [all_ones $x1 $x2 $x3] then { pass $testname } else { fail $testname }
}

# m32c pads out sections, even empty ones.
case $target_triplet in {
    { m32c-*-* } { }
    default {
	do_comment
    }
}

# This test checks the output of the -ag switch. It must detect at least
# the name of the input file, output file, and options passed.
proc general_info_section {} {
    set testname "general info section in listings"
    set x1 0
    set x2 0
    set x3 0
    set white {[ \t]*}
    gas_start "comment.s" "-agn"
    while 1 {
	expect {
	    -re "^ \[^\n\]*\t: .*\-agn\[^\n\]*\n"                { set x1 1 }
	    -re "^ \[^\n\]*\t: \[^\n\]*comment\.s\[^\n\]*\n"   { set x2 1 }
	    -re "^ \[^\n\]*\t: a\.out\[^\n\]*\n"               { set x3 1 }
	    -re "\[^\n\]*\n"     { }
	    timeout              { perror "timeout\n"; break }
	    eof                  { break }
	}
    }
    gas_finish
    if [all_ones $x1 $x2 $x3] then { pass $testname } else { fail $testname }
}

general_info_section

#
# Test x930509a -- correct assembly of differences involving forward
# references.
#

proc do_930509a {} {
    set testname "difference between forward references"
    set x 0
    gas_start "x930509.s" "-al"
    while 1 {
# We need to accomodate both byte orders here.
# If ".long" means an 8-byte value on some target someday, this test will have
# to be fixed.
	expect {
	    -re "^ +1 .... 00 ?00 ?00 ?00" { fail $testname; set x 1 }
	    -re "^ +1 .... 04 ?00 ?00 ?00" { pass $testname; set x 1 }
	    -re "^ +1 .... 00 ?00 ?00 ?04" { pass $testname; set x 1 }
	    -re "\[^\n\]*\n" { }
	    timeout { perror "timeout\n"; break }
	    eof { break }
	}
    }
    gas_finish
    if !$x then { fail $testname }
}

# This test is meaningless for the PA and CR16/CRX: the difference of two
# symbols cannot be resolved by the assembler.
# C54x assembler (for compatibility) does not allow differences between
# forward references.
# C30 counts a four byte offset as a difference of one.
if { ![istarget hppa*-*-*] &&
     ![istarget cr16*-*-*] &&
     ![istarget  crx*-*-*] &&
     ![istarget *c30*-*-*] &&
     ![istarget *c4x*-*-*] &&
     ![istarget *c54x*-*-*] } then {
    # the vax fails because VMS can apparently actually handle this
    # case in relocs, so gas doesn't handle it itself.
    # msp430 and mn10300 emit two relocs to handle the difference of two symbols.
    setup_xfail "mn10300*-*-*" "msp430*-*-*" "vax*-*-vms*"
    do_930509a
}

# ".struct" and ".align" have different meanings on c54x
# These directives are done in the c54x-specific tests instead
case $target_triplet in {
    { hppa*-*-* } { }
    { *c4x*-*-* } { }
    { *c54x*-*-* } { }
    default {
	run_dump_test struct
	run_dump_test align
	run_dump_test align2
    }
}

# '<' and '>' appear to have special meanings on the excluded targets
case $target_triplet in {
    { frv-*-* } { }
    { hppa*-*-* } { }
    { m32r-*-* } { }
    { mmix-*-* } { }
    { *c4x*-*-* } { }
    { *c54x*-*-* } { }
    { bfin-*-* } { }
    default {
	run_dump_test altmacro
	# The second test is valid only when '!' is not a comment
	# character (it is allowed to be a line comment character).
	if [string match "" [lindex [gas_run excl.s "-o /dev/null" ""] 0]] {
	    run_dump_test altmac2
	    # Similarly this test does not work when ! is a line seperator.
	    run_dump_test eval
	}
    }
}

# This test is for any COFF target.
# We omit the ARM toolchains because they define locals to
#  start with '.', which eliminates .eos, .text etc from the output.
# Omit c54x, since .tag and .def mean something different on that target
if {   ([istarget *-*-coff*] && ![istarget arm*-*-coff] && ![istarget *c4x*-*-coff] && ![istarget *c54x*-*-coff]) \
     ||([istarget *-*-pe*] && ![istarget arm*-*-pe*]) \
     || [istarget i*86-*-aix*] \
     || [istarget i*86-*-sco*] \
     || [istarget i*86-*-isc*] \
     || [istarget i*86-*-go32*] \
     || [istarget i*86-*-cygwin*] \
     || [istarget x86_64-*-mingw*] \
     || [istarget i*86-*-*nt] \
     || [istarget i*86-*-interix*] \
     || ([istarget i960-*-vxworks5.*] && ![istarget i960-*-vxworks5.0*]) } {
    run_dump_test cofftag
}

# Test omitting conditionals from listings.
proc test_cond {} {
    global comp_output
    global srcdir
    global subdir

    set testname "conditional listings"
    gas_run cond.s "-alc" ">dump.out"
    if ![string match "" $comp_output] {
	send_log "$comp_output\n"
	fail $testname
    } else {
	if { [regexp_diff dump.out $srcdir/$subdir/cond.l] } {
	    fail $testname
	} else {
	    pass $testname
	}
    }
}

# This test is not suitable for the PA for various reasons
# not limited to the fact that it depends on specific section
# names appearing in the output file.
# again, p2align doesn't work on c54x target
case $target_triplet in {
    { hppa*-*-* } { }
    { *c4x*-*-* } { }
    { *c54x*-*-* } { }
    { rx-*-* } { }
    default {
        test_cond
	remote_download host "$srcdir/$subdir/incbin.dat"
        run_dump_test incbin
    }
}

if {  ([istarget "i*86-*-*pe*"] && ![istarget "i*86-*-openbsd*"]) \
    || [istarget "i*86-*-cygwin*"] \
    || [istarget "i*86-*-mingw32*"] } {
  gas_test "fastcall.s" ""   "" "fastcall labels"
}

if { ![istarget "bfin-*-*"] } then {
    run_dump_test assign
}
run_dump_test sleb128
run_dump_test sleb128-2
run_dump_test sleb128-3
run_dump_test sleb128-4
run_dump_test sleb128-5
# .byte is not 8 bits on either tic4x or tic54x
if { ![istarget "tic4x*-*-*"] && ![istarget "tic54x*-*-*"] } {
    run_dump_test sleb128-7
}

# .byte is 32 bits on tic4x, and .p2align isn't supported on tic54x
# .space is different on hppa*-hpux.
# MeP put bytes into packets.
if { ![istarget "tic4x*-*-*"] && ![istarget "tic54x*-*-*"] && ![istarget "hppa*-*-hpux*"] && ![istarget "mep*-*-*"] } {
    run_dump_test relax
}

# powerpc and s390 allow a string argument to .byte
if { ![istarget "powerpc*-*-*"] && ![istarget "rs6000*-*-*"] && ![istarget "s390*-*-*"] } {
    run_dump_test byte
}

# .quad is 16 bytes on i960.
if { ![istarget "i960-*-*"] } {
    run_dump_test quad
}

# som doesn't use .data section.
case $target_triplet in {
    { hppa*64*-*-* } {
	run_dump_test octa
    }
    { hppa*-*-hpux* } { }
    default {
	run_dump_test octa
    }
}

# .set works differently on some targets.
case $target_triplet in {
    { alpha*-*-* } { }
    { mips*-*-* } { }
    { *c54x*-*-* } { }
    { z80-*-* } { }
    default {
	run_dump_test weakref1
	run_dump_test weakref1g
	run_dump_test weakref1l
	run_dump_test weakref1u
	run_dump_test weakref1w
    }
}
gas_test_error "weakref2.s" "" "e: would close weakref loop: e => a => b => c => d => e"
gas_test_error "weakref3.s" "" "a: would close weakref loop: a => b => c => d => e => a"
gas_test_error "weakref4.s" "" "is already defined"

run_dump_test string

load_lib gas-dg.exp
dg-init
dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/err-*.s $srcdir/$subdir/warn-*.s]] "" ""
dg-finish
@


1.83
log
@	* archures.c: Add some more MSP430 machine numbers.
	* config.bfd (msp430): Define targ_selvecs.
	* configure.in: Add bfd_elf32_msp430_ti_vec.
	* cpu-msp430.c: Add some more MSP430 machine numbers.
	* elf32-msp430.c Add support for MSP430X relocations.
	Add support for TI compiler generated relocations.
	Add support for sym_diff relocations.
	Add support for relaxing out of range short branches into long
	branches.
	Add support for MSP430 attribute section.
	* reloc.c: Add MSP430X relocations.
	* targets.c: Add bfd_elf32_msp430_ti_vec.
	* bfd-in2.h: Regenerate.
	* configure: Regenerate.
	* libbfd.h: Regenerate.

	* readelf.c: Add support for MSP430X architecture.

	* readelf.exp: Expect -wi test to fail for the MSP430.

	* config/tc-msp430.c: Add support for the MSP430X architecture.
	Add code to insert a NOP instruction after any instruction that
	might change the interrupt state.
	Add support for the LARGE memory model.
	Add code to initialise the .MSP430.attributes section.
	* config/tc-msp430.h: Add support for the MSP430X architecture.
	* doc/c-msp430.texi: Document the new -mL and -mN command line
	options.
	* NEWS: Mention support for the MSP430X architecture.

	* gas/all/gas.exp: Skip the DIFF1 test for the MSP430.
	Expect the FORWARD test to pass for the MSP430.
	Skip the REDEF tests for the MSP430.
	Expect the 930509A test to fail for the MSP430.
	* gas/all/sleb128-4.d: Skip for the MSP430.
	* gas/elf/elf.exp: Set target_machine to msp430 for the MSP430.
	Skip the EHOPT0 test for the MSP430.
	Skip the REDEF and EQU-RELOC tests for the MSP430.
	* gas/elf/section2.e-msp430: New file.
	* gas/lns/lns-big-delta.d: Remove expectation of 20-bit
	addresses.
	* gas/lns/lns.exp: Use alternate LNS COMMON test for the MSP430.
	* gas/msp430/msp430x.s: New test.
	* gas/msp430/msp430x.d: Expected disassembly.
	* gas/msp430/msp430.exp: Run new test.
	* gas/msp430/opcode.d: Update expected disassembly.

	* msp430.h: Add MSP430X relocs.
	Add some more MSP430 machine numbers.
	Add values used by .MSP430.attributes section.

	* msp430.h: Add patterns for MSP430X instructions.

	* Makefile.am: Add emsp430X.c
	* Makefine.in: Regenerate.
	* configure.tgt (msp430): Add msp430X emulation.
	* ldmain.c (multiple_definition): Only disable relaxation if it
	was enabled by the user.
	* ldmain.h (RELAXATION_ENABLED_BY_USER): New macro.
	* emulparams/msp430all.sh: Add support for MSP430X.
	* emultempl/generic.em: (before_parse): Enable relaxation for the
	MSP430.
	* scripttempl/msp430.sc: Reorganize sections.  Add .rodata
	section.
	* scripttempl/msp430_3.sc: Likewise.
	* NEWS: Mention support for MSP430X.

	* ld-elf/flags1.d: Expect this test to pass on the MSP430.
	* ld-elf/init-fini-arrays.d: Expect this test to fail on the
	MSP430.
	* ld-elf/merge.d: Expect this test to pass on the MSP430.
	* ld-elf/sec64k.exp: Skip these tests for the MSP430.
	* ld-gc/pr13683.d: Expect this test to fail on the MSP430.
	* ld-srec/srec.exp: Expect these tests to fail on the MSP430.
	* ld-undefined/undefined.exp: Expect the UNDEFINED LINE test to
	fail on the MSP430.

	* msp430-dis.c: Add support for MSP430X instructions.
@
text
@d109 1
a109 1
# aout relocs are often weird, so is mep and mips-ecoff. don't bother testing
a119 1
	{ mips*-*-ecoff* } { }
@


1.82
log
@    gas/
    * expr.c (add_to_result, subtract_from_result): Make global.
    * expr.h (add_to_result, subtract_from_result): Add prototypes.
    * config/tc-sh.c (sh_optimize_expr): Use add_to_result,
    subtract_from_result to handle extra bit of precision for .sleb128
    directive operands.

    gas/testsuite/
    * gas/all/gas.exp (sleb128-7): Don't run for tic4x, tic54x.
    * gas/all/sleb128-2.s: Reformat, use _ at start of labels, remove
    cruft.
    * gas/all/sleb128-3.s: Likewise.
    * gas/all/sleb128-4.s: Likewise.
    * gas/all/sleb128-5.s: Likewise.
    * gas/all/sleb128-7.s: Likewise.
    * gas/all/sleb128-2.d: Handle data sections named $DATA$.
    * gas/all/sleb128-3.d: Likewise.
    * gas/all/sleb128-4.d: Likewise.
    * gas/all/sleb128-5.d: Likewise.
    * gas/all/sleb128-7.d: Likewise.
@
text
@d64 1
d103 1
a103 1
	    "d\[13\]0v*-*-*" "i860-*-*" "mips*-*-*" "msp430-*-*" \
d143 1
d271 2
a272 2
    # mn10300 emits two relocs to handle the difference of two symbols.
    setup_xfail "mn10300*-*-*" "vax*-*-vms*"
@


1.81
log
@    gas/
    * read.c (convert_to_bignum): Add sign parameter. Use it
    instead of X_unsigned to determine sign of resulting bignum.
    (emit_expr): Pass extra argument to convert_to_bignum.
    (emit_leb128_expr): Use X_extrabit instead of X_unsigned. Pass
    X_extrabit to convert_to_bignum.
    (parse_bitfield_cons): Set X_extrabit.
    * expr.c (make_expr_symbol, expr_build_uconstant, operand):
    Initialise X_extrabit field as appropriate.
    (add_to_result): New.
    (subtract_from_result): New.
    (expr): Use above.
    * expr.h (expressionS): Add X_extrabit field.

    gas/testsuite/
    * gas/all/sleb128-2.s: New test.
    * gas/all/sleb128-3.s: Likewise.
    * gas/all/sleb128-4.s: Likewise.
    * gas/all/sleb128-5.s: Likewise.
    * gas/all/sleb128-7.s: Likewise.
    * gas/all/sleb128-2.d: New.
    * gas/all/sleb128-3.d: New.
    * gas/all/sleb123-4.d: New.
    * gas/all/sleb123-5.d: New.
    * gas/all/sleb123-7.d: New.
    * gas/all/gas.exp (sleb128-2, sleb128-3, sleb128-4, sleb128-5)
    (sleb128-7): Run new tests.
@
text
@d376 4
a379 1
run_dump_test sleb128-7
@


1.80
log
@Add copyright notices
@
text
@d372 5
@


1.79
log
@Move gas/all/rept.[ds] to gas/i386

	* gas/all/gas.exp: Don't run rept.

	* gas/all/rept.d: Moved to ...
	* gas/i386/rept.d: Here.
	* gas/all/rept.s: Moved to ...
	* gas/i386/rept.s: Here.

	* gas/i386/i386.exp: Run rept.
@
text
@d1 17
@


1.78
log
@Add a testcase for PR gas/14201

	PR gas/14201
	* gas/all/gas.exp: Run rept.

	* gas/all/rept.d: New file.
	* gas/all/rept.s: Likewise.
@
text
@a402 1
run_dump_test rept
@


1.77
log
@Add support for Motorola XGATE embedded CPU
@
text
@d403 1
@


1.76
log
@gas/testsuite/

	* gas/all/gas.exp: Sparc can handle BFD_RELOC_8 for constants.

ld/testsuite/

	* ld-sparc/tlssunbin32.rd: Fix regexp.
	* ld-sparc/tlssunbin64.rd: Likewise.
@
text
@d136 1
a136 1
	setup_xfail "rx-*-*" "vax*-*-*" "z8k-*-*"
d139 1
a139 1
	setup_xfail "rx-*-*" "vax*-*-*" "z8k-*-*"
@


1.75
log
@	* gas/all/gas.exp (redef2): xfail m6811 and m6812.
	* gas/elf/elf.exp: Use is_elf_format.
	* gas/symver/symver.exp: Likewise.
	* gas/m68hc11/m68hc11.exp: Simplify target test.
	Add -m68hc11 to error tests that pass for hc12.
@
text
@d86 1
a86 1
	    "pdp11-*-*" "sparc*-*-*" "xtensa*-*-*"
@


1.74
log
@	* gas/all/gas.exp: Fix typo last change.
@
text
@d135 2
a136 1
	setup_xfail "m68hc*-*-*" "rx-*-*" "vax*-*-*" "z8k-*-*"
d138 2
a139 1
	setup_xfail "m68hc*-*-*" "rx-*-*" "vax*-*-*" "z8k-*-*"
@


1.73
log
@	* gas/all/gas.exp: Remove some xfails on redef2 and redef3 tests.
	Update comments.
	* gas/hppa/unsorted/unsorted.exp: Run globalbug test on appropriate
	targets rather than xfailing.
@
text
@d148 1
a148 1
	    "i\[3-7\]86-*-cygwin*" "i\[3-7\]86-*-mingw*" "86_64-*-mingw*"
@


1.72
log
@2011-04-18  Tristan Gingold  <gingold@@adacore.com>

	* lib/gas-defs.exp (get_standard_section_names): Add names for
	alpha vms.
	* gas/all/gas.exp: Do not test diff1.s on alpha-vms.
@
text
@d133 3
a135 7
	# The next two tests can fail if the target does not convert fixups
	# against ordinary symbols into relocations against section symbols.
	# This is usually revealed by the error message:
	#  symbol `sym' required but not present
	setup_xfail "*arm*-*-*aout*" "*arm*-*-*coff" \
	    "*arm*-*-pe" "m68hc*-*-*" \
	    "rx-*-*" "vax*-*-*" "z8k-*-*"
d137 12
a148 6
	setup_xfail "*-*-aix*" "bfin-*-*" "hppa*-*-hpux*" \
	    "i\[3-7\]86-*-*coff" "i\[3-7\]86-*-*pe" "i\[3-7\]86-*-go32*" \
	    "i\[3-7\]86-*-cygwin*" "i\[3-7\]86-*-mingw*" \
	    "x86_64-*-*coff" "x86_64-*-*pe" \
	    "x86_64-*-cygwin*" "x86_64-*-mingw*" \
	    "m68hc*-*-*" "or32-*-*" "rx-*-*" "vax*-*-*" "z8k-*-*"
@


1.71
log
@	* gas/all/gas.exp (do_930509a): Don't xfail h8300 and mn10200.
@
text
@d37 1
d44 1
@


1.70
log
@bfd:
	* config.bfd (thumb-*-oabi): Don't handle in list of obsolete
	targets.
	(strongarm*, thumb*, xscale*): Remove architectures.
	(strongarm-*-kaos*, thumb-*-coff, thumb-*-elf, thumb-epoc-pe*,
	thumb-*-pe*, strongarm-*-elf, strongarm-*-coff, xscale-*-elf,
	xscale-*-coff): Remove targets.

binutils:
	* configure.in (thumb-*-pe*): Remove.
	* configure: Regenerate.

binutils/testsuite:
	* binutils-all/objcopy.exp (*arm*-*-coff): Change to arm*-*-coff.
	(xscale-*-coff, thumb*-*-coff, thumb*-*-pe): Don't handle.

gas:
	* configure.tgt (strongarm*be, strongarm*b, strongarm*,
	xscale*be|xscale*b, xscale*): Remove architectures.
	(thumb-*-coff, thumb-*-rtems*, thumb-*-elf, thumb-epoc-pe,
	thumb-*-pe, xscale-*-coff, xscale-*-elf): Remove targets.

gas/testsuite:
	* gas/all/gas.exp (*arm*-*-coff): Change to arm*-*-coff.
	(thumb*-*-coff, thumb*-*-pe*): Don;t handle.
	* gas/arm/arm.exp (*arm*-*-*): Change to arm*-*-*.
	(*xscale*-*-*): Don't handle.
	* gas/cfi/cfi.exp (xscale*-*): Don't handle.
	* gas/elf/elf.exp (*arm*-*-*): Change to arm*-*-*.
	(xscale*-*-*): Don't handle.

ld:
	* configure.tgt (thumb-*-linux-* | thumb-*-uclinux*,
	strongarm-*-coff, strongarm-*-elf, strongarm-*-kaos*,
	thumb-*-coff, thumb-*-elf, thumb-epoc-pe, thumb-*-pe,
	xscale-*-coff, xscale-*-elf): Remove targets.

ld/testsuite:
	* ld-selective/selective.exp (xscale-*-*): Don't handle.
	* ld-srec/srec.exp (strongarm*-*-*, xscale*-*-*, thumb-*-*): Don't
	handle.
	(*arm*-*-*): Change to arm*-*-*.
	(strongarm*-*-coff, xscale*-*-coff, thumb-*-coff*, thumb-*-pe*,
	thumb-*-elf*, strongarm*-*-*, thumb-*-*): Remove xfails.
	* ld-undefined/undefined.exp (thumb*-*-pe*, thumb*-*-pe*): Remove
	commented-out xfails.
	(thumb-elf): Remove reference in comment.
	* lib/ld-lib.exp (strongarm*-*-*, xscale*-*-*, thumb-*-*): Don't
	handle.
@
text
@d246 2
a247 1
    setup_xfail "h8300*-*-elf*" "mn10200*-*-*" "mn10300*-*-*" "vax*-*-vms*"
@


1.69
log
@	* gas/all/gas.exp (fwdexp): Run on hppa*64*-*-*.  Skip on 32-bit
	hppa*-*-hpux*.
	(octa): Likewise.
@
text
@d288 2
a289 2
if {   ([istarget *-*-coff*] && ![istarget *arm*-*-coff] && ![istarget thumb*-*-coff] && ![istarget xscale-*-coff] && ![istarget *c4x*-*-coff] && ![istarget *c54x*-*-coff]) \
     ||([istarget *-*-pe*] && ![istarget arm*-*-pe*] && ![istarget thumb*-*-pe*]) \
@


1.68
log
@binutils/testsuite/
	* lib/binutils-common.exp (regexp_diff): New procedure.
	* lib/utils-lib.exp (regexp_diff): Delete.

gas/testsuite/
	* lib/gas-defs.exp (regexp_diff): Delete.
	(run_dump_test): Remove final "" argument in call to regexp_diff.
	(run_list_test): Likewise.
	(run_list_test_stdin): Likewise.
	* gas/all/gas.exp (test_cond): Likewise.
	* gas/elf/elf.exp (run_elf_list_test): Likewise.
	* gas/m68k/all.exp: Likewise.
	* gas/mep/complex-relocs.exp (regexp_test): Likewise.
	* gas/mt/relocs.exp (regexp_test): Likewise.
	* gas/symver/symver.exp (run_error_test): Likewise.

ld/testsuite/
	* lib/ld-lib.exp (regexp_diff, simple_diff): Delete.
@
text
@d95 4
a98 1
	{ hppa-*-hpux* } { }
d366 10
a375 1
run_dump_test octa
@


1.67
log
@2010-10-27  Andreas Krebbel  <Andreas.Krebbel@@de.ibm.com>

	* gas/all/gas.exp: Don't run byte test on s390.
@
text
@d311 1
a311 1
	if { [regexp_diff dump.out $srcdir/$subdir/cond.l ""] } {
@


1.67.2.1
log
@apply mainline testsuite fixes and tweaks
@
text
@d311 1
a311 1
	if { [regexp_diff dump.out $srcdir/$subdir/cond.l] } {
@


1.66
log
@	* gas/all/fwdexp.d, * gas/all/fwdexp.s: New test.
	* gas/all/gas.exp: Run it.
@
text
@d353 2
a354 2
# powerpc allows a string argument to .byte
if { ![istarget "powerpc*-*-*"] && ![istarget "rs6000*-*-*"] } {
@


1.65
log
@	* gas/all/gas.exp: Update "forward" and "redef3" xfails.
	* gas/m68k/all.exp: Don't xfail pcrel on uclinux.
	* gas/sh/arch/arch.exp: Don't pass dashes to send_log.
@
text
@d89 19
@


1.64
log
@	* gas/all/octa.s, * gas/all/octa.d: New test.
	* gas/all/gas.exp: Run octa.
	* gas/elf/data-1.s, * gas/elf/data-1.d: Delete.
	* gas/elf/elf.exp: Don't run data-1.
@
text
@d82 1
a82 1
	setup_xfail "alpha*-*-*" "avr-*-*" "*c30*-*-*" "*c4x*-*-*" \
d117 6
a122 4
	setup_xfail "*-*-aix*" "*-*-coff" "*-*-cygwin" "*-*-mingw*" "*-*-pe*" \
	    "bfin-*-*" "hppa*-*-hpux*" \
	    "m68hc*-*-*" "or32-*-*" \
	    "rx-*-*" "vax*-*-*" "z8k-*-*"
@


1.63
log
@2010-08-02  Tristan Gingold  <gingold@@adacore.com>

	* lib/gas-defs.exp (get_standard_section_names): New function.
	(run_dump_tests): Document the new behavior for objdump,
	document to new section-subst option.  Automatically perform
	substitutions for objdump.
	(objdump_finish): Add REF_SUBST argument.
	(run_list_test): Adjust call of regexp_diff.
	(run_list_test_stdin): Ditto.
	* gas/all/gas.exp (test_cond): Adjust call of regexp_diff.
	* gas/symver/symver.exp (run_error_test): Ditto.
	* gas/mt/relocs.exp (regexp_test): Ditto.
	* gas/mep/complex-relocs.exp (regexp_test): Ditto.
	* gas/m68k/all.exp: Ditto.
	* gas/elf/elf.exp (run_elf_list_test): Ditto.
	* gas/rx/rx-asm-good.d: Set section-subst to no.
@
text
@d342 1
@


1.62
log
@remove maxq-coff port
@
text
@d290 1
a290 1
	if { [regexp_diff dump.out $srcdir/$subdir/cond.l] } {
@


1.61
log
@	* gas/all/gas.exp: Don't run byte test on powerpc.
@
text
@d114 1
a114 1
	    "*arm*-*-pe" "m68hc*-*-*" "maxq-*-*" \
d119 1
a119 1
	    "m68hc*-*-*" "maxq-*-*" "or32-*-*" \
@


1.60
log
@	* read.c (cons_worker): Detect and reject unexpected string argument.

	testsuite/
	* gas/all/byte.s: New.
	* gas/all/byte.l: New.
	* gas/all/byte.d: New.
	* gas/all/gas.exp: Add it.
@
text
@d332 4
a335 1
run_dump_test byte
@


1.59
log
@bfd
        * Makefile.am (ALL_MACHINES): Add cpu-rx.lo.
        (ALL_MACHINES_CFILES): Add cpu-rx.c.
        (BFD32_BACKENDS): Add elf32-rx.lo.
        (BFD32_BACKENDS_CFILES): Add elf32-rx.c.
        * archures.c (bfd_architecture): Add bfd_arch_rx and bfd_mach_rx.
        Export bfd_rx_arch.
        (bfd_archures_list): Add bfd_rx_arch.
        * config.bfd: Add entry for rx-*-elf.
        * configure.in: Add entries for bfd_elf32_rx_le_vec and
        bfd_elf32_rx_be_vec.
        * reloc.c: Add RX relocations.
        * targets.c: Add RX target vectors.
        * Makefile.in: Regenerate.
        * bfd-in2.h: Regenerate.
        * configure: Regenerate.
        * libbfd.h: Regenerate.
        * cpu-rx.c: New file.
        * elf32-rx.c: New file.

binutils
        * readelf.c: Add support for RX target.
        * MAINTAINERS: Add DJ and NickC as maintainers for RX.

gas
        * Makefile.am: Add RX target.
        * configure.in: Likewise.
        * configure.tgt: Likewise.
        * read.c (do_repeat_with_expander): New function.
        * read.h: Provide a prototype for do_repeat_with_expander.
        * doc/Makefile.am: Add RX target documentation.
        * doc/all.texi: Likewise.
        * doc/as.texinfo: Likewise.
        * Makefile.in: Regenerate.
        * NEWS: Mention support for RX architecture.
        * configure: Regenerate.
        * doc/Makefile.in: Regenerate.
        * config/rx-defs.h: New file.
        * config/rx-parse.y: New file.
        * config/tc-rx.h: New file.
        * config/tc-rx.c: New file.
        * doc/c-rx.texi: New file.

gas/testsuite
        * gas/rx: New directory.
        * gas/rx/*: New set of test cases.
        * gas/elf/section2.e-rx: New expected output file.
        * gas/all/gas.exp: Add support for RX target.
        * gas/elf/elf.exp: Likewise.
        * gas/lns/lns.exp: Likewise.
        * gas/macros/macros.exp: Likewise.

include
        * dis-asm.h: Add prototype for print_insn_rx.

include/elf
        * rx.h: New file.

include/opcode
        * rx.h: New file.

ld
        * Makefile.am: Add rules to build RX emulation.
        * configure.tgt: Likewise.
        * NEWS: Mention support for RX architecture.
        * Makefile.in: Regenerate.
        * emulparams/elf32rx.sh: New file.
        * emultempl/rxelf.em: New file.

opcodes
        * Makefile.am: Add RX files.
        * configure.in: Add support for RX target.
        * disassemble.c: Likewise.
        * Makefile.in: Regenerate.
        * configure: Regenerate.
        * opc2c.c: New file.
        * rx-decode.c: New file.
        * rx-decode.opc: New file.
        * rx-dis.c: New file.
@
text
@d332 2
@


1.58
log
@	* gas/all/gas.exp (do_comment): Don't run on m32c.
	* gas/all/align.d: Likewise.
	* gas/all/incbin.d: Likewise.
	* gas/macros/semi.d: Likewise.
	* gas/elf/ifunc-1.d: Don't run on alpha.
@
text
@d41 5
a45 2
# MN10300.
if { ![istarget hppa*-*-*] && ![istarget mn10300-*-*] && ![istarget am3*-*-*] } then {
d115 1
a115 1
	    "vax*-*-*" "z8k-*-*"
d120 1
a120 1
	    "vax*-*-*" "z8k-*-*"
d169 1
a169 1
	    -re "^ \[^\n\]*\t: \-agn\[^\n\]*\n"                { set x1 1 }
d306 1
@


1.57
log
@binutils/testsuite/
	* binutils-all/localize-hidden-1.s: Use "==" instead of ".set".
	* binutils-all/localize-hidden-2.s: Likewise.
gas/testsuite/
	* gas/all/gas.exp: Disable assign and assign-ok tests on blackfin.
	* gas/all/p2425.s: Use "==" instead of "=".
	* gas/all/weakref1.s: Likewise.
	* gas/macros/and.s: Likewise.
	* gas/macros/test1.s: Likewise.
	* gas/hppa/parse/parse.exp: Remove xfail on block1.
ld/testsuite/
	* ld-libs/lib-1.s: Use "==" instead of ".set".
	* ld-libs/lib-2.s: Likewise.
	* ld-scripts/defined.s: Likewise.
@
text
@d147 7
a153 1
do_comment
@


1.57.4.1
log
@	* gas/all/gas.exp (do_comment): Don't run on m32c.
	* gas/all/align.d: Likewise.
	* gas/all/incbin.d: Likewise.
	* gas/macros/semi.d: Likewise.
	* gas/elf/ifunc-1.d: Don't run on alpha.
@
text
@d147 1
a147 7
# m32c pads out sections, even empty ones.
case $target_triplet in {
    { m32c-*-* } { }
    default {
	do_comment
    }
}
@


1.56
log
@        * config/tc-mep.h (DIFF_EXPR_OK): Do not define.

        * gas/all/gas.exp: Expect forward test to fail for MeP.
        Expect relax test to fail for MeP.
        * gas/mep/relocs.d: Update expected disassembly.

        * lib/ld-lib.exp (check_gc_sections_available): Add MeP to list of
        targets which do not support garbage collection.
        * ld-srec/srec.exp (run_srec_test): Expect tests to fail for MeP.
        * ld-elf/group8a.d: Likewise.
        * ld-elf/group8b.d: Likewise.
        * ld-elf/group9a.d: Likewise.
        * ld-elf/group9b.d: Likewise.

        * binutils-all/objdump.W: Do not assume that high and low PC
        addresses will have been computed.
@
text
@d62 3
a64 1
gas_test "assign-ok.s" "" "" "== assignment support"
d310 3
a312 1
run_dump_test assign
@


1.55
log
@	* gas/all/gas.exp: Don't run redef tests on a bunch of targets.
	* gas/elf/elf.exp: Likewise.
@
text
@d68 1
d73 1
a74 1
    { *c54x*-*-* } { }
d313 2
a314 1
if { ![istarget "tic4x*-*-*"] && ![istarget "tic54x*-*-*"] && ![istarget "hppa*-*-hpux*"] } {
@


1.55.4.1
log
@Commit patches for ARCompact support to binutils-arc-20081103-branch .
@
text
@d115 1
a115 1
	# TODO irfan ARC BUG run_dump_test redef3
@


1.54
log
@2008-08-20  Bob Wilson  <bob.wilson@@acm.org>
        * gas/all/gas.exp: Expect the redef test to fail on Xtensa.
@
text
@d84 3
d89 3
d93 7
a99 1
    { *c54x*-*-* } { }
a101 1
	setup_xfail "*c30*-*-*" "*c4x*-*-*" "pdp11-*-*" "xtensa*-*-*"
d107 3
a109 3
	setup_xfail "*c30*-*-*" "*c4x*-*-*" "*arm*-*-*aout*" "*arm*-*-*coff" \
	    "*arm*-*-pe" "crx*-*-*" "h8300*-*-*" "m68hc*-*-*" "maxq-*-*" \
	    "mn10300-*-*" "pdp11-*-*" "vax*-*-*" "z8k-*-*" "cr16-*-*"
d112 3
a114 3
	    "bfin-*-*" "*c4x*-*-*" "crx*-*-*" "h8300*-*-*" "hppa*-*-hpux*" \
	    "m68hc*-*-*" "maxq-*-*" "mn10300-*-*" "or32-*-*" "pdp11-*-*" \
	    "vax*-*-*" "z8k-*-*" "cr16-*-*"
a115 1
	setup_xfail "*c4x*-*-*"
a116 1
	setup_xfail "*c4x*-*-*"
@


1.54.2.1
log
@	* gas/all/gas.exp: Don't run redef tests on a bunch of targets.
	* gas/elf/elf.exp: Likewise.
@
text
@a83 3
# most of the tests won't work on targets that set linkrelax.
# 4 octet bytes confuse address matching on ti targets.
# pdp11 gets unexpected reloc types.
a85 3
    { cr16*-*-* } { }
    { crx*-*-* } { }
    { h8300-*-* } { }
d87 1
a87 7
    { mn10200-*-* } { }
    { mn10300-*-* } { }
    { pdp11-*-* } { }
    { tic30*-*-* } { }
    { tic4x*-*-* } { }
    { tic54x*-*-* } { }
    { xtensa*-*-* } { }
d90 1
d96 3
a98 3
	setup_xfail "*arm*-*-*aout*" "*arm*-*-*coff" \
	    "*arm*-*-pe" "m68hc*-*-*" "maxq-*-*" \
	    "vax*-*-*" "z8k-*-*"
d101 3
a103 3
	    "bfin-*-*" "hppa*-*-hpux*" \
	    "m68hc*-*-*" "maxq-*-*" "or32-*-*" \
	    "vax*-*-*" "z8k-*-*"
d105 1
d107 1
@


1.53
log
@        * listing.c: Add -ag listing flag to show general information in
        listings such as gas version, passed options, and time stamp.
        (listing_general_info): New function.
        (print_options): New function.
        (print_single_option): New function.
        (print_timestamp): New function.
        (MAX_DATELEN): Define.
        (listing_print): Add call to listing_general_info.
        * listing.h (LISTING_GENERAL): Define.
        (listing_print): Add new parameter.
        * as.c (show_usage): Print new switch.
        (parse_args): Parse new switch.
        (main): Pass command line on to listing_print.
        * NEWS: Mention this new feature.
        * doc/as.texinfo: Document the new sub-option.

        * gas/all/gas.exp: Check the performance of the -ag command line
        switch.
@
text
@d90 1
a90 1
	setup_xfail "*c30*-*-*" "*c4x*-*-*" "pdp11-*-*"
@


1.52
log
@2008-01-31  Marc Gauthier  <marc@@tensilica.com>
bfd/
	* config.bfd (xtensa*-*-*): Recognize processor variants.
gas/
	* configure.tgt (xtensa*-*-*): Recognize processor variants.
gas/testsuite/
	* gas/all/gas.exp: Recognize Xtensa processor variants.
	* gas/elf/elf.exp: Likewise.
	* gas/lns/lns.exp: Likewise.
ld/
	* configure.tgt (xtensa*-*-*): Recognize processor variants.
ld/testsuite/
	* ld-elf/merge.d: Recognize Xtensa processor variants.
	* ld-xtensa/coalesce.exp: Likewise.
	* ld-xtensa/lcall.exp: Likewise.
@
text
@d137 25
@


1.51
log
@	* gas/all/gas.exp: Skip relax test on hppa*-*-hpux*.
@
text
@d78 1
a78 1
	    "pdp11-*-*" "sparc*-*-*" "xtensa-*-*"
@


1.50
log
@* mn10300.h (R_MN10300_ALIGN): Define.
* reloc.c (BFD_RELOC_MN10300_ALIGN): Add.
* bfd-in2.h: Regenerate.
* libbfd.h: Regenerate.
* elf-m10300.h: Handle R_MN10300_ALIGN relocs.
* mn10300_elf_relax_delete_bytes): Honour R_MN10300_ALIGN relocs.
  Re-fix off by one error in comparisons.
* config/tc-mn10300.c (tc_gen_reloc): Fix test that decides when
  sym_diff relocs should be generated.
  (md_apply_fix): Skip R_MN10300_ALIGN relocs.
  (mn10300_fix_adjustable): Do not adjust R_MN10300_ALIGN relocs.
  (mn10300_handle_align): New function.  Generate R_MN10300_ALIGN
  relocs to record alignment requests.
* config/tc-mn10300.h (TC_FORCE_RELOCATION_SUB_SAME): Also force
  R_MN10300_ALIGN relocs.
  (HANDLE_ALIGN): Define.  Call mn10300_handle_align.
* gas/all/gas.exp: Do not run diff1.s test for mn10300.
* ld-mn10300/mn10300.exp: Run new tests.  Skip i126256 test if
  a compiler is not available.
* ld-mn10300/i112045-3.s: New test.
* ld-mn10300/i112045-3.d: Expected disassembly.
* ld-mn10300/i135409.s: Rename to i135409-1.s.
* ld-mn10300/i135409.d: Rename to i135409-1.d
* ld-mn10300/i135409-2.s: New test.
* ld-mn10300/i135409-2.d: Expected symbol table.
* ld-mn10300/i36434.d: Adjust expected disassembly.
@
text
@d277 2
a278 1
if { ![istarget "tic4x*-*-*"] && ![istarget "tic54x*-*-*"] } {
@


1.49
log
@* read.c (potable): Add string8, string16, string32 and string64. Add bit size for stringer function.
 (stringer_append_char): New.
 (stringer): Use stringer_append_char().
* config/obj-coff.c (obj_coff_ident): Add bit size for stringer function.
* config/obj-elf.c (obj_elf_ident): Likewise.
* config/tc-alpha.c (s_alpha_stringer): Likewise.
* config/tc-dlx.c (dlx_pseudo_table): Likewise.
* config/tc-hppa.c (pa_stringer): Likewise.
* config/tc-ia64.c (md_pseudo_table, pseudo_opcode): Likewise.
* config/tc-m68hc11.c (md_pseudo_table): Likewise.
* config/tc-mcore.c (md_pseudo_table): Likewise.
* config/tc-mips.c (mips_pseudo_table): Likewise.
* config/tc-spu.c (md_pseudo_table): Likewise.
* config/tc-s390.c (md_pseudo_table): Likewise. Replace '2' by '1'.
* doc/as.texinfo (ABORT): Fix identing.
  (String): Document new string8, string16, string32, string64 functions.
* NEWS: Mention the new feature.

* testsuite/gas/all/gas.exp: Include new test "strings".
* testsuite/gas/all/string.s: New
* testsuite/gas/all/string.d: New.
@
text
@d37 6
a42 1
if ![istarget hppa*-*-*] then {
@


1.48
log
@bfd:
2007-08-28  Mark Shinwell  <shinwell@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* elf32-arm.c (elf32_arm_compare_mapping): Compare first on vma,
	then on type.

binutils/testsuite:
2007-08-28  Mark Shinwell  <shinwell@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* binutils-all/ar.exp (long_filenames): Delete temporary files on
	the host.
	* binutils-all/arm/objdump.exp: Only check "which $OBJDUMP" if
	host is local.
	* binutils-all/objcopy.exp: Use ${srecfile} to get the name of the
	srec file to be passed to binutils_run.
	(objcopy_test_readelf): Use remote_exec.
	* binutils-all/readelf.exp (readelf_find_size): Use remote_exec.
	(readelf_test): Likewise.
	(readelf_wi_test): Likewise.
	* lib/utils-lib.exp (run_dump_test): Only check "which $binary" if
	host is local.  Use remote_exec.  Use $tempfile not
	tmpdir/bintest.o.

gas:
2007-08-28  Mark Shinwell  <shinwell@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* as.c (main): Flush stderr before printing listings to ensure
	consistent output order across platforms.

gas/testsuite:
2007-08-28  Mark Shinwell  <shinwell@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* lib/gas-defs.exp (gas_version): Use remote_* functions instead
	of exec.
	(gas_host_run): New.
	(gas_run): Use gas_host_run.
	(gas_start): Likewise.
	(run_dump_test): Likewise.
	(objdump): Use gas_host_run.
	(objdump_start_no_subdir): Likewise.
	* lib/gas-dg.exp (gas-dg-test): Use "remote_file host delete".
	* lib/run: Remove.
	* gas/macros/macros.exp: Download app4b.s to host.
	* gas/i386/i386.exp (gas_64_check): Use gas_host_run.
	(gas_32_check): Likewise.
	* gas/maxq10/maxq10.exp (gas_64_check): Likewise
	(gas_32_check): Likewise.
	* gas/maxq20/maxq20.exp (gas_64_check): Likewise
	(gas_32_check): Likewise.
	* gas/sparc/sparc.exp (gas_64_check): Likewise.
	* gas/cfi/cfi.exp: Likewise.
	* gas/elf/elf.exp (run_list_test): Likewise.  Use temporary file
	for readelf output in place of pipe.
	* gas/all/gas.exp: Download incbin.dat to host.
	(do_comment): Allow \r\r\n.

ld:
2007-08-28  Mark Shinwell  <shinwell@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* ldlang.c (sort_sections_by_lma): Sort by internal id after lma
	for stable sort.

ld/testsuite:
2007-08-28  Mark Shinwell  <shinwell@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* ld-elfcomm/elfcomm.exp: Use run_host_cmd.  Only check "which
	$CC" if host is local.
	* ld-checks/checks.exp: Use run_host_cmd.
	* ld-elf/exclude.exp: Likewise.
	* ld-elf/elf.exp: Download merge.ld if host is remote.
	* ld-elf/binutils.exp (binutils_test): Use remote_exec.
	* ld-elf/tls_common.exp: Use run_host_cmd.
	* lib/ld-lib.exp (ld_version): Only check "which $ld" if host is
	local.  Use remote_exec.
	(run_host_cmd): New.
	(run_host_cmd_yesno): New.
	(default_ld_relocate): Use run_host_cmd_yesno.
	(default_ld_link): Likewise.
	(default_ld_simple_link): Use run_host_cmd.
	(default_ld_compile): Only check "which $ccprog" if host is local.
	Use remote_file and remote_exec.
	(default_ld_assemble): Only check "which $as" if host is local.
	Use run_host_cmd.
	(default_ld_nm): Use remote_exec, remote_upload and remote_file.
	(run_dump_test): Use remote_exec, remote_upload and remote_file.
	Only check "which $binary" if host is local.
	(run_ld_link_tests): Use remote_exec, remote_upload and
	remote_file.
	* ld-selective/selective.exp: Only check "which $CXX" if host is
	local.  Use remote_exec.
	* ld-scripts/phdrs.exp: Only check "which $objdump" if host is
	local.  Use run_host_cmd.
	* ld-scripts/phdrs2.exp: Likewise.
	* ld-scripts/weak.exp: Likewise.
	* ld-undefined/weak-undef.exp: Likewise.
	* ld-scripts/crossref.exp: Only check "which $CC" if host is local.
	Use run_host_cmd.
	* ld-scripts/map-address.exp: Upload map_address.map if host is
	remote.
	* ld-srec/srec.exp (run_srec_tests): Use run_host_cmd.  Only check
	"which $CC" and "which $CXX" if host is local.
	* ld-undefined/undefined.exp: Only check "which $CC" if host is
	local.  Use remote_file and run_host_cmd.
	* config/default.exp: Use remote_exec to create tmpdir.
@
text
@d300 2
@


1.47
log
@Add expected failures for CR16 tests
@
text
@d120 1
a120 1
	    -re "^ +3\[ \t\]+/. C comments too. ./\r?\n" { set x3 1 }
d257 1
@


1.46
log
@New port: National Semiconductor's CR16
@
text
@d63 1
d158 2
a159 2
# This test is meaningless for the PA and CRX; the difference of two symbols
# must not be resolved by the assembler.
d161 1
a161 1
# forward references
d164 1
@


1.45
log
@	* gas/all/gas.exp: Run relax.
@
text
@d92 1
a92 1
	    "mn10300-*-*" "pdp11-*-*" "vax*-*-*" "z8k-*-*"
d97 1
a97 1
	    "vax*-*-*" "z8k-*-*"
@


1.44
log
@PR gas/3810 gas/3800
* gas/elf/elf.exp: Expect the redef test to fail on targets which do not
  convert fixups against ordinary symbols into relocs against section symbols.
* gas/all/gas.exp: Likewise.
@
text
@d268 5
@


1.43
log
@Support for Toshiba MeP and for complex relocations.
@
text
@d86 4
d92 1
a92 1
	    "pdp11-*-*" "vax*-*-*" "z8k-*-*"
d96 2
a97 1
	    "m68hc*-*-*" "maxq-*-*" "or32-*-*" "pdp11-*-*" "vax*-*-*" "z8k-*-*"
@


1.42
log
@Renamed target x86_64-*-mingw64 to x86_64-*-mingw*.
@
text
@d19 4
a22 1
if { [istarget hppa*-*-*] || [istarget *c54x*-*-*] } then {
@


1.41
log
@Add x86_64-mingw64 target
@
text
@d210 1
a210 1
     || [istarget x86_64-*-mingw64*] \
@


1.40
log
@	Bug gas/1894 Bug gas/1895
	* gas/all/gas.exp (redef3): xfail on hppa*-*-hpux*.
	* gas/all/redef.d: Add -j "\$DATA\$".  Modify regexp to check for
	"$DATA$" as well as ".data".
	* gas/all/redef2.d: Likewise.
@
text
@d210 1
@


1.39
log
@gas/
2005-11-17  Jan Beulich  <jbeulich@@novell.com>


	* symbols.h (S_CLEAR_VOLATILE): Declare.
	* symbols.c (colon): Also accept redefinable symbols for
	redefinition. Clone them before modifying.
	(S_CLEAR_VOLATILE): Define.
	* cond.c (s_ifdef): Also test for equated symbols.
	* read.c (s_comm_internal): Also exclude non-redefinable
	equated symbols. Clone redefinable ones before modifying.
	(s_weakref): Clone redefinable symbols before modifying.
	* doc/internals.texi: Document sy_volatile, sy_forward_ref,
	S_IS_VOLATILE, S_SET_VOLATILE, S_CLEAR_VOLATILE,
	S_IS_FORWARD_REF, and S_SET_FORWARD_REF.

gas/testsuite/
2005-11-17  Jan Beulich  <jbeulich@@novell.com>

	* gas/all/cond.s: Also check ifdef works on equates and
	commons.
	* gas/all/cond.l: Adjust.
	* gas/all/redef2.s: Also test redefining equate to label.
	* gas/all/redef2.d: Adjust.
	* gas/all/redef3.[sd]: New.
	* gas/all/redef4.s: New.
	* gas/all/redef5.s: New.
	* gas/elf/redef.s: New, copied from original gas/all/redef2.s.
	* gas/elf/redef.d: Remove #source.
	* gas/all/gas.exp: Remove exclusion of iq2000-*-* from and
	adjust xfails for redefinition tests. Run new tests. Exclude
	alpha*-*-*, mips*-*-*, *c54x*-*-* from weakref tests.
@
text
@d88 2
a89 2
	    "bfin-*-*" "*c4x*-*-*" "crx*-*-*" "h8300*-*-*" "m68hc*-*-*" \
	    "maxq-*-*" "or32-*-*" "pdp11-*-*" "vax*-*-*" "z8k-*-*"
@


1.38
log
@* gas/all/cofftag.s: Convert numbers in .type directives to decimal.
* gas/all/gas.exp: enable cofftag-test for z80-*-coff.
@
text
@a76 1
    { iq2000*-*-* } { }
d83 3
a85 2
	setup_xfail "*c30*-*-*" "*c4x*-*-*" "*arm*-*-coff" "arm*-*-pe*" "crx*-*-*"
	setup_xfail "h8300*-*-*" "m68hc*-*-*" "maxq-*-*" "pdp11-*-*" "vax*-*-*" "z8k-*-*"
d87 8
d267 3
@


1.37
log
@gas/testsuite/
2005-11-07  Jan Beulich  <jbeulich@@novell.com>

	* gas/all/redef2.[sd]: New.
	* gas/all/gas.exp: Run new test.
	* gas/elf/redef.d: New.
	* gas/elf/elf.exp: Run new test.
@
text
@d195 1
a195 2
# Omit Z80, since octal numbers need a suffix on that target
if {   ([istarget *-*-coff*] && ![istarget *arm*-*-coff] && ![istarget thumb*-*-coff] && ![istarget xscale-*-coff] && ![istarget *c4x*-*-coff] && ![istarget *c54x*-*-coff] && ![istarget z80-*-coff]) \
@


1.36
log
@gas/ChangeLog:
* read.c (s_weakref): Do not permit redefinitions.
* symbols.c (colon): Do not permit redefinitions of equated
symbols.
gas/testsuite/ChangeLog:
* gas/all/gas.exp: Remove weakref xfail.  Run weakref4.s.
* gas/all/weakref1.s: Move redefinition bits to...
* gas/all/weakref4.s: ... new file.
* gas/all/weakref1.d: Remove command moved to weakref1u.  Adjust
remaining command for leading tabs.  Regenerate.
* gas/all/weakref1l.d: Regenerate.
* gas/all/weakref1u.d: Likewise.
* gas/all/wealref1w.d: Likewise.
@
text
@d84 3
@


1.35
log
@gas/testsuite/
2005-11-04  Jan Beulich  <jbeulich@@novell.com>

	* gas/all/gas.exp: xfail weakref dump tests for all targets.
@
text
@a258 1
	setup_xfail *-*-*
a259 1
	setup_xfail *-*-*
a260 1
	setup_xfail *-*-*
a261 1
	setup_xfail *-*-*
a262 1
	setup_xfail *-*-*
d268 1
@


1.34
log
@	PR gas/1630
	* gas/all/gas.exp <weakref1, weakref1g, weakref1l, weakref1u,
	weakref1w>: Xfail for cris-*-* and mmix-*-*.
@
text
@d259 1
a259 1
	setup_xfail cris-*-* mmix-*-*
d261 1
a261 1
	setup_xfail cris-*-* mmix-*-*
d263 1
a263 1
	setup_xfail cris-*-* mmix-*-*
d265 1
a265 1
	setup_xfail cris-*-* mmix-*-*
d267 1
a267 1
	setup_xfail cris-*-* mmix-*-*
@


1.33
log
@gas/
2005-10-27  Jan Beulich  <jbeulich@@novell.com>

	* read.c (assign_symbol): Also consider equates already defined.
	* symbols.c (symbol_clone): Also clone the underlying BFD symbol.
	* config/obj-coff.h (obj_symbol_clone_hook): New.
	(coff_obj_symbol_clone_hook): Declare.
	* config/obj-coff.c (coff_obj_symbol_clone_hook): New.

gas/testsuite/
2005-10-27  Jan Beulich  <jbeulich@@novell.com>

	* gas/all/gas.exp: Don't xfail equiv1 test anymore.
@
text
@d259 1
d261 1
d263 1
d265 1
d267 1
@


1.32
log
@Add support for the Z80 processor family
@
text
@a37 2
# PR/1387
setup_xfail "*-*-*"
@


1.31
log
@gas/ChangeLog:
* read.c (potable): Add weakref.
(s_weakref): New.
* read.h (s_weakref): Declare.
* struc-symbol.h (struct symbol): Add sy_weakrefr and sy_weakrefd.
* symbols.c (colon): Clear weakrefr.
(symbol_find_exact): Rename to, and reimplement in terms of...
(symbol_find_exact_noref): ... new function.
(symbol_find): Likewise...
(symbol_find_noref): ... ditto.
(resolve_symbol_value): Resolve weakrefr without setting their
values.
(S_SET_WEAK): Call hook.
(S_GET_VALUE): Follow weakref link.
(S_SET_VALUE): Clear weakrefr.
(S_IS_WEAK): Follow weakref link.
(S_IS_WEAKREFR, S_SET_WEAKREFR, S_CLEAR_WEAKREFR): New.
(S_IS_WEAKREFD, S_SET_WEAKREFD, S_CLEAR_WEAKREFD): New.
(symbol_set_value_expression, symbol_set_frag): Clear weakrefr.
(symbol_mark_used): Follow weakref link.
(print_symbol_value_1): Print weak, weakrefr and weakrefd.
* symbols.h (symbol_find_noref, symbol_find_exact_noref): Declare.
(S_IS_WEAKREFR, S_SET_WEAKREFR, S_CLEAR_WEAKREFR): Declare.
(S_IS_WEAKREFD, S_SET_WEAKREFD, S_CLEAR_WEAKREFD): Declare.
* write.c (adust_reloc_syms): Follow weakref link.  Do not
complain if target is undefined.
(write_object_file): Likewise.  Remove weakrefr symbols.  Drop
unreferenced weakrefd symbols.
* config/obj-coff.c (obj_frob_symbol): Do not force WEAKREFD
symbols EXTERNAL.
(pecoff_obj_set_weak_hook, pecoff_obj_clear_weak_hook): New.
* config/obj-coff.h (obj_set_weak_hook, obj_clear_weak_hook): Define.
* doc/as.texinfo: Document weakref.
* doc/internals.texi: Document new struct members, internal
functions and hooks.
gas/testsuite/ChangeLog:
* gas/all/weakref1.s, gas/all/weakref1.d: New test.
* gas/all/weakref1g.d, gas/all/weakref1l.d: New tests.
* gas/all/weakref1u.d, gas/all/weakref1w.d: New tests.
* gas/all/weakref2.s, gas/all/weakref3.s: New tests.
* gas/all/gas.exp: Run new tests.
@
text
@d26 3
a28 2
# No floating point support in assembly code for CRIS.
if { ![istarget cris-*-*] && ![istarget crisv32-*-*] } then {
d82 1
d194 2
a195 1
if {   ([istarget *-*-coff*] && ![istarget *arm*-*-coff] && ![istarget thumb*-*-coff] && ![istarget xscale-*-coff] && ![istarget *c4x*-*-coff] && ![istarget *c54x*-*-coff]) \
d256 12
a267 5
run_dump_test weakref1
run_dump_test weakref1g
run_dump_test weakref1l
run_dump_test weakref1u
run_dump_test weakref1w
@


1.30
log
@This adjusts equate handling by
- allowing true forward references (which will always assume the referenced
  symbols have at the point of use) through the new .eqv pseudo-op and the
  new == operator
- disallowing changing .equiv-generated equates (so that the protection this
  provides is both forward and backward)
- snapshotting equates when their value gets changed so that previous uses
  don't get affected by the new value.
- allowing expressions in places where absolute expressions (or register
  names) are needed which were not completely resolvable at the point of
  their definition but which are fully resolvable at the point of use

In addition it fixes PR/288.
@
text
@d253 8
@


1.29
log
@	* gas/bfin: New testsuite for bfin.
	* gas/all/gas.exp (bfin-*-*): Expected failure for alternate
	macro syntax.
@
text
@d37 50
d182 2
d217 1
a217 1
	if { [regexp_diff dump.out $srcdir/$subdir/cond.d] } {
@


1.28
log
@	* gas/all/gas.exp: Remove a29k and m88k support.
	* gas/m88k/*: Delete.
	* gas/tic80/*: Delete.
@
text
@d125 1
@


1.27
log
@	* gas/all/assign.s: New.
	* gas/all/assign.d: New.
	* gas/all/gas.exp: Run it.
@
text
@a118 1
    { a29k-*-* } { }
a135 1
# We omit m88k COFF because it uses weird pseudo-op names.
d139 1
a139 1
if {   ([istarget *-*-coff*] && ![istarget m88*-*-*] && ![istarget *arm*-*-coff] && ![istarget thumb*-*-coff] && ![istarget xscale-*-coff] && ![istarget *c4x*-*-coff] && ![istarget *c54x*-*-coff]) \
a140 4
     || [istarget a29k-*-udi*] \
     || [istarget a29k-*-ebmon*] \
     || [istarget a29k-*-sym*] \
     || [istarget a29k-*-vxworks*] \
@


1.26
log
@* gas/all/gas.exp: Don't run fastcall labels test on
i*86-*-openbsd*.
@
text
@d198 1
@


1.25
log
@	* gas/all/gas.exp (quad): Don't run on i960.
@
text
@d192 1
a192 1
if {   [istarget "i*86-*-*pe*"] \
@


1.24
log
@	* read.c (convert_to_bignum): New function, split out from...
	(emit_expr): ...here.  Handle the case where X_add_number is
	positive and the input value is negative.
	(output_big_sleb128): Fix setting of continuation bit.  Check whether
	the final byte needs to be sign-extended.  Fix size-shrinking loop.
	(emit_leb128_expr): When generating a signed leb128, see whether the
	sign of an O_constant's X_add_number matches the sign of the input
	value.  Use a bignum if not.
@
text
@d199 5
a203 1
run_dump_test quad
@


1.23
log
@	* gas/all/gas.exp: Run dg-runtest for all err-*.s and warn-*.s.
	* gas/all/err-1.s, gas/all/warn-1.s: New tests.
@
text
@d198 3
@


1.22
log
@	* gas/all/gas.exp: Exclude float.s for crisv32-*-*.
	* gas/cris/operand-err-1.s (test.m constant): Remove xfail marker
	and update rationale.  Mark "ba [external_symbol]" and "ba [r3]"
	as invalid.
	* gas/ieee-fp/x930509a.exp: setup_xfail for crisv32-*-*.
	* gas/macros/macros.exp: setup_xfail strings for crisv32-*-*.
	* gas/cris/abs32-1.s, gas/cris/arch-err-1.s,
	gas/cris/arch-err-2.s, gas/cris/arch-err-3.s,
	gas/cris/arch-err-4.s, gas/cris/arch-err-5.s,
	gas/cris/bound-err-1.s, gas/cris/brokw-3b.s,
	gas/cris/march-err-1.s, gas/cris/march-err-2.s,
	gas/cris/push-err-1.s, gas/cris/push-err-2.s,
	gas/cris/pushpopv32.s, gas/cris/rd-abs32-1.d,
	gas/cris/rd-abs32-2.d, gas/cris/rd-arch-1.d, gas/cris/rd-arch-2.d,
	gas/cris/rd-arch-3.d, gas/cris/rd-bkw1b.d, gas/cris/rd-bkw2b.d,
	gas/cris/rd-bkw3b.d, gas/cris/rd-bound1.d, gas/cris/rd-bound1.s,
	gas/cris/rd-bound2.d, gas/cris/rd-bound3.d, gas/cris/rd-bound4.d,
	gas/cris/rd-break32.d, gas/cris/rd-ppv1032.d, gas/cris/rd-ppv32.d,
	gas/cris/rd-spr-1.d, gas/cris/rd-spr-1.s, gas/cris/rd-usp-1.d,
	gas/cris/rd-usp-1b.d, gas/cris/rd-v10_32o-1.d,
	gas/cris/rd-v10_32o-2.d, gas/cris/rd-v10_32o-2.s,
	gas/cris/rd-v32-b1.d, gas/cris/rd-v32-b1.s, gas/cris/rd-v32-b2.d,
	gas/cris/rd-v32-b2.s, gas/cris/rd-v32-b3.d, gas/cris/rd-v32-b3.s,
	gas/cris/rd-v32-f1.d, gas/cris/rd-v32-f1.s, gas/cris/rd-v32-i1.d,
	gas/cris/rd-v32-i1.s, gas/cris/rd-v32-l1.d, gas/cris/rd-v32-l1.s,
	gas/cris/rd-v32-l3.d, gas/cris/rd-v32-l3.s, gas/cris/rd-v32-l4.d,
	gas/cris/rd-v32-l4.s, gas/cris/rd-v32o-1.d, gas/cris/rd-v32s-1.d,
	gas/cris/rd-v32s-2.d, gas/cris/rd-v32s-2.s, gas/cris/rd-v32s-3.d,
	gas/cris/rd-v32s-3.s, gas/cris/rd-v32s-4.d, gas/cris/rd-v32s-4.s,
	gas/cris/rd-vao-1.d, gas/cris/v32-err-1.s, gas/cris/v32-err-10.s,
	gas/cris/v32-err-11.s, gas/cris/v32-err-2.s, gas/cris/v32-err-3.s,
	gas/cris/v32-err-4.s, gas/cris/v32-err-5.s, gas/cris/v32-err-6.s,
	gas/cris/v32-err-7.s, gas/cris/v32-err-8.s, gas/cris/v32-err-9.s:
	New tests.
@
text
@d197 5
@


1.21
log
@2004-08-25  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/all/gas.exp: Use `string match ""' instead of `eq ""'.
@
text
@d27 1
a27 1
if ![istarget cris-*-*] then {
@


1.20
log
@altmacro.[sd]: Split out part from here...
altmac2.[sd]: ... to here.
excl.s: New.
gas.exp: Suppress both tests for a few targets known to break. Run the new
 (split out) test only when the target doesn't use '!' as a comment character.
@
text
@d130 1
a130 1
	if { [lindex [gas_run excl.s "-o /dev/null" ""] 0] eq "" } {
@


1.19
log
@Add and handle new --alternate command line option.
@
text
@d117 18
a134 1
run_dump_test altmacro
@


1.18
log
@Add CRX insns: pushx, popx
Add support to GAS for expressions which are the difference of two symbols
@
text
@d117 2
@


1.17
log
@
TIC4X testcase commit

	* binutils/testsuite/binutils-all/objcopy.exp: Disable tic4x
	from test
	* binutils/testsuite/binutils-all/objdump.exp: Setup proper
	values for tic4x testcase
	* gas/testsuite/gas/all/gas.exp: Setup for tic4x testcase
	* gas/testsuite/gas/macros/macros.exp: Ditto
	* gas/testsuite/gas/all/gas.exp: Setup for tic4x testcase
	* gas/testsuite/gas/macros/macros.exp: Ditto
	* gas/testsuite/gas/tic4x: New tic4x gas testsuite directory
	* ld/testsuite/ld-scripts/script.exp: Setup for tic4x testcase
@
text
@d88 1
a88 1
# This test is meaningless for the PA; the difference of two symbols
d94 1
@


1.16
log
@ Only run fastcall test for x86 PE targets.
@
text
@d93 4
a96 2
if { ![istarget hppa*-*-*]
     && ![istarget *c30*-*-*] && ![istarget *c54x*-*-*] } then {
d107 1
d121 1
a121 1
if {   ([istarget *-*-coff*] && ![istarget m88*-*-*] && ![istarget *arm*-*-coff] && ![istarget thumb*-*-coff] && ![istarget xscale-*-coff] && ![istarget *c54x*-*-coff]) \
d164 1
@


1.15
log
@Adds support for fastcall symbols as used on Microsoft Windows platforms
(i386)
@
text
@d168 5
a172 1
gas_test "fastcall.s" ""   "" "fastcall labels"
@


1.14
log
@2002-09-08  Ben Elliston  <bje@@redhat.com>

	* gas/hppa/basic/basic.exp: Update DejaGnu mail address.
	* gas/hppa/parse/parse.exp: Likewise.
	* gas/hppa/reloc/reloc.exp: Likewise.
	* gas/hppa/unsorted/unsorted.exp: Likewise.
	* gas/mn10200/basic.exp: Likewise.
	* gas/mn10300/basic.exp: Likewise.
	* gas/sh/basic.exp: Likewise.
	* gas/sh/sh64/sh64.exp: Likewise.
	* gas/v850/basic.exp: Likewise.
	* lib/gas-defs.exp: Likewise.

	* gas/all/gas.exp: Removing limping support for DejaGnu 1.1.1.
	* gasp/gasp.exp: Likewise.
@
text
@d167 2
@


1.13
log
@	* gas/all/gas.exp (forward references): Don't test c30.
	* gas/d30v/guard-debug.d: Use -gstabs rather than -g.
	* gas/elf/ehopt0.s: Don't use "$" in labels.
	* gas/ieee-fp/x930509a.exp: Don't test c30.
	* gas/m68hc11/malis.d: Adjust -I so that test runs when not building
	in source dir.
	* gas/mri/mri.exp: Don't run on "m68hc*".
	* gas/sh/basic.exp (do_fp): Match LE too.
	(pcrel-coff): Run this version for "sh*-pe*" and rename "sh*-hms" to
	"sh*-rtems".
	* gas/sh/pcrel-coff.d: Add -EB to objdump flags.
	* gas/vtable/vtable.exp: Don't run on linuxecoff.  setup_xfail in
	preference to not running on ELF targets that might one day pass.
	Add more xfails.  Add more targets to the REL list.
@
text
@a166 6

# FIXME: this is here cause of a bug in DejaGnu 1.1.1. When it is no longer
#        in use, then this can be removed.
if [info exists errorInfo] then {
    unset errorInfo
}
@


1.12
log
@2002-05-23  H.J. Lu <hjl@@gnu.org>

	* gas/all/align2.d: New.
	* gas/all/align2.s: New.

	* gas/all/gas.exp: Run align2.
@
text
@d92 3
a94 1
if { ![istarget hppa*-*-*] && ![istarget *c54x*-*-*] } then {
d97 1
a97 4
    setup_xfail "vax*-*-vms*"
    setup_xfail "mn10300*-*-*"
    setup_xfail "mn10200*-*-*"
    setup_xfail "h8300*-*-elf*"
@


1.11
log
@(cofftag): Do not run test for xscale-coff toolchain.
(struct, align, incbin): Use case switch so that other targets to be skipped
can be added in the future.
@
text
@d110 1
@


1.10
log
@	* gas/all/gas.exp (incbin): Fix condition.
@
text
@d118 1
a118 1
if {   ([istarget *-*-coff*] && ![istarget m88*-*-*] && ![istarget *arm*-*-coff] && ![istarget thumb*-*-coff] && ![istarget *c54x*-*-coff]) \
d159 7
a165 3
if { ![istarget *c54x*-*-*] && ![istarget hppa*-*-*] } then {
    test_cond
    run_dump_test incbin
@


1.9
log
@        * gas/all/gas.exp (incbin): Do not run on the PA.
@
text
@d159 1
a159 1
if { ![istarget *c54x*-*-*] ![istarget hppa*-*-*] } then {
@


1.8
log
@Fix tic54x testsuite failures and Lmem disassembly bugs.
@
text
@d155 3
d159 1
a159 1
if ![istarget *c54x*-*-*] then {
@


1.7
log
@Tue Sep  4 20:06:09 2001  Jeffrey A Law  (law@@cygnus.com)

        * gas/all/gas.exp (930509a): Expect failure on the H8/300 ELF port.

        * gas/h8300/ffxx1-elf.d: Update due to recent changes to H8/300
        ELF toolchain.
        * gas/h8300/h8300-elf.exp: Likewise.

        * gas/macros/macros.exp: Expect failure on all H8/300 ports.

        * gas/vtable/vtable.exp: Do not run tests on H8/300 ELF ports.
@
text
@d158 1
a159 2

run_dump_test incbin
@


1.6
log
@Add .incbin pseudo op
@
text
@d98 1
@


1.5
log
@	* gas/all/gas.exp: Don't run floating-point tests on CRIS.
	* gas/ieee-fp/x930509a.exp: Ditto.
	* gas/macros/macros.exp: Mark strings test xfail for CRIS.
@
text
@d159 2
@


1.4
log
@TI C54x target.
@
text
@d26 4
a29 1
gas_test "float.s" ""   "" "simple FP constants"
@


1.3
log
@Default LISTING_LHS_WIDTH to depend on LISTING_WORD_SIZE so that bytes per
line is 4.  Fix tests for LISTING_WORD_SIZE==1.
@
text
@d14 6
a19 1
if [istarget hppa*-*-*] then {
d87 3
a89 1
if ![istarget hppa*-*-*] then {
d98 2
d102 1
d113 2
a114 1
if {   ([istarget *-*-coff*] && ![istarget m88*-*-*] && ![istarget *arm*-*-coff] && ![istarget thumb*-*-coff]) \
d151 4
a154 1
test_cond
@


1.2
log
@1999-09-12  Donn Terry  <donn@@interix.com>

	* gas/all/gas.exp: Run cofftag test for i*86-*-interix*.
	* lib/gas-defs.exp: Add perror if can not read .d file.
@
text
@d68 3
a70 3
	    -re "^ +1 .... 0000 *0000" { fail $testname; set x 1 }
	    -re "^ +1 .... 0400 *0000" { pass $testname; set x 1 }
	    -re "^ +1 .... 0000 *0004" { pass $testname; set x 1 }
d127 1
a127 1
    gas_run cond.s -alc ">dump.out"
@


1.1
log
@Initial revision
@
text
@d115 1
@


1.1.1.1
log
@19990502 sourceware import
@
text
@@

