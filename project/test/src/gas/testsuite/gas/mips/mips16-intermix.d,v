head	1.3;
access;
symbols
	binutils-2_24-branch:1.3.0.14
	binutils-2_24-branchpoint:1.3
	binutils-2_21_1:1.3
	binutils-2_23_2:1.3
	binutils-2_23_1:1.3
	binutils-2_23:1.3
	binutils-2_23-branch:1.3.0.12
	binutils-2_23-branchpoint:1.3
	binutils-2_22_branch:1.3.0.10
	binutils-2_22:1.3
	binutils-2_22-branch:1.3.0.8
	binutils-2_22-branchpoint:1.3
	binutils-2_21:1.3
	binutils-2_21-branch:1.3.0.6
	binutils-2_21-branchpoint:1.3
	binutils-2_20_1:1.3
	binutils-2_20:1.3
	binutils-arc-20081103-branch:1.2.0.6
	binutils-arc-20081103-branchpoint:1.2
	binutils-2_20-branch:1.3.0.4
	binutils-2_20-branchpoint:1.3
	dje-cgen-play1-branch:1.3.0.2
	dje-cgen-play1-branchpoint:1.3
	arc-20081103-branch:1.2.0.4
	arc-20081103-branchpoint:1.2
	binutils-2_19_1:1.2
	binutils-2_19:1.2
	binutils-2_19-branch:1.2.0.2
	binutils-2_19-branchpoint:1.2
	binutils-2_18:1.1
	binutils-2_18-branch:1.1.0.2
	binutils-2_18-branchpoint:1.1
	binutils_latest_snapshot:1.3;
locks; strict;
comment	@# @;


1.3
date	2009.01.27.13.48.14;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	2008.03.17.18.45.35;	author rsandifo;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.02.15.20.31;	author ths;	state Exp;
branches;
next	;


desc
@@


1.3
log
@        * config/tc-mips.c (append_insn): Cope with a complex reloc
        sequence containing an unsupported reloc type.
        (enum options): Replace computed #define's constants for option
        numbers with this enum.
        (struct md_longopts): Use the enum.  Allow OPTION_32 in a non-ELF
        environment.
        (md_parse_option): Allow -32 in a non-ELF environment.

        * gas/lib/gas-defs.exp: Update description of run_dump_test proc.

        * gas/mips/dli.d: Pass -64 to gas.
        * gas/mips/mips64-mips3d-incl.d: Likewise.
        * gas/mips/octeon.d: Likewise.
        * gas/mips/sb1-ext-mdmx.d: Likewise.
        * gas/mips/sb1-ext-ps.d: Likewise.
        * gas/mips/e32el-rel2.s: Pass -march=mips3 to gas.
        Update expected relocs.
        * gas/mips/ld-ilocks-addr32.d: Do not run for tx39 targets.
        * gas/mips/mips.exp: Remove 'ilocks' variable.
        Add ecoff targets to 'addr32' variable.
        Set 'no_mips16' for ecoff targets.
        Do not run div-ilocks or mul-ilocks test variants.
        * gas/mips/mips16-intermix.d: Use nm instead of objdump so that
        the symbol table output is sorted.  Update expecetd output.
@
text
@#PROG: nm
#as: -mips32r2 -32
#name: MIPS16 intermix

0+[0-9a-f]+ t __call_stub_fp_m16_static16_d_d
0+[0-9a-f]+ t __call_stub_fp_m16_static16_d_l
0+[0-9a-f]+ t __call_stub_fp_m16_static1_d_d
0+[0-9a-f]+ t __call_stub_fp_m16_static1_d_l
0+[0-9a-f]+ t __call_stub_fp_m32_static16_d_d
0+[0-9a-f]+ t __call_stub_fp_m32_static16_d_l
0+[0-9a-f]+ t __call_stub_fp_m32_static1_d_d
0+[0-9a-f]+ t __call_stub_fp_m32_static1_d_l
0+[0-9a-f]+ t __call_stub_m16_static16_d
0+[0-9a-f]+ t __call_stub_m16_static16_dl
0+[0-9a-f]+ t __call_stub_m16_static16_dlld
0+[0-9a-f]+ t __call_stub_m16_static1_d
0+[0-9a-f]+ t __call_stub_m16_static1_dl
0+[0-9a-f]+ t __call_stub_m16_static1_dlld
0+[0-9a-f]+ t __call_stub_m32_static16_d
0+[0-9a-f]+ t __call_stub_m32_static16_dl
0+[0-9a-f]+ t __call_stub_m32_static16_dlld
0+[0-9a-f]+ t __call_stub_m32_static1_d
0+[0-9a-f]+ t __call_stub_m32_static1_dl
0+[0-9a-f]+ t __call_stub_m32_static1_dlld
0+[0-9a-f]+ t __fn_stub_m16_d
0+[0-9a-f]+ t __fn_stub_m16_d_d
0+[0-9a-f]+ t __fn_stub_m16_dl
0+[0-9a-f]+ t __fn_stub_m16_dlld
0+[0-9a-f]+ t __fn_stub_m16_static16_d
0+[0-9a-f]+ t __fn_stub_m16_static16_d_d
0+[0-9a-f]+ t __fn_stub_m16_static16_dl
0+[0-9a-f]+ t __fn_stub_m16_static16_dlld
0+[0-9a-f]+ t __fn_stub_m16_static1_d
0+[0-9a-f]+ t __fn_stub_m16_static1_d_d
0+[0-9a-f]+ t __fn_stub_m16_static1_dl
0+[0-9a-f]+ t __fn_stub_m16_static1_dlld
0+[0-9a-f]+ t __fn_stub_m16_static32_d
0+[0-9a-f]+ t __fn_stub_m16_static32_d_d
0+[0-9a-f]+ t __fn_stub_m16_static32_dl
0+[0-9a-f]+ t __fn_stub_m16_static32_dlld
0+[0-9a-f]+ t __fn_stub_m16_static_d
0+[0-9a-f]+ t __fn_stub_m16_static_d_d
0+[0-9a-f]+ t __fn_stub_m16_static_dl
0+[0-9a-f]+ t __fn_stub_m16_static_dlld
[ 	]+ U __mips16_adddf3
[ 	]+ U __mips16_fixdfsi
[ 	]+ U __mips16_floatsidf
[ 	]+ U __mips16_ret_df
0+[0-9a-f]+ T f16
0+[0-9a-f]+ T f32
0+[0-9a-f]+ T m16_d
0+[0-9a-f]+ T m16_d_d
0+[0-9a-f]+ T m16_d_l
0+[0-9a-f]+ T m16_dl
0+[0-9a-f]+ T m16_dlld
0+[0-9a-f]+ T m16_l
0+[0-9a-f]+ T m16_ld
0+[0-9a-f]+ t m16_static16_d
0+[0-9a-f]+ t m16_static16_d_d
0+[0-9a-f]+ t m16_static16_d_l
0+[0-9a-f]+ t m16_static16_dl
0+[0-9a-f]+ t m16_static16_dlld
0+[0-9a-f]+ t m16_static16_l
0+[0-9a-f]+ t m16_static16_ld
0+[0-9a-f]+ t m16_static1_d
0+[0-9a-f]+ t m16_static1_d_d
0+[0-9a-f]+ t m16_static1_d_l
0+[0-9a-f]+ t m16_static1_dl
0+[0-9a-f]+ t m16_static1_dlld
0+[0-9a-f]+ t m16_static1_l
0+[0-9a-f]+ t m16_static1_ld
0+[0-9a-f]+ t m16_static32_d
0+[0-9a-f]+ t m16_static32_d_d
0+[0-9a-f]+ t m16_static32_d_l
0+[0-9a-f]+ t m16_static32_dl
0+[0-9a-f]+ t m16_static32_dlld
0+[0-9a-f]+ t m16_static32_l
0+[0-9a-f]+ t m16_static32_ld
0+[0-9a-f]+ t m16_static_d
0+[0-9a-f]+ t m16_static_d_d
0+[0-9a-f]+ t m16_static_d_l
0+[0-9a-f]+ t m16_static_dl
0+[0-9a-f]+ t m16_static_dlld
0+[0-9a-f]+ t m16_static_l
0+[0-9a-f]+ t m16_static_ld
0+[0-9a-f]+ T m32_d
0+[0-9a-f]+ T m32_d_d
0+[0-9a-f]+ T m32_d_l
0+[0-9a-f]+ T m32_dl
0+[0-9a-f]+ T m32_dlld
0+[0-9a-f]+ T m32_l
0+[0-9a-f]+ T m32_ld
0+[0-9a-f]+ t m32_static16_d
0+[0-9a-f]+ t m32_static16_d_d
0+[0-9a-f]+ t m32_static16_d_l
0+[0-9a-f]+ t m32_static16_dl
0+[0-9a-f]+ t m32_static16_dlld
0+[0-9a-f]+ t m32_static16_l
0+[0-9a-f]+ t m32_static16_ld
0+[0-9a-f]+ t m32_static1_d
0+[0-9a-f]+ t m32_static1_d_d
0+[0-9a-f]+ t m32_static1_d_l
0+[0-9a-f]+ t m32_static1_dl
0+[0-9a-f]+ t m32_static1_dlld
0+[0-9a-f]+ t m32_static1_l
0+[0-9a-f]+ t m32_static1_ld
0+[0-9a-f]+ t m32_static32_d
0+[0-9a-f]+ t m32_static32_d_d
0+[0-9a-f]+ t m32_static32_d_l
0+[0-9a-f]+ t m32_static32_dl
0+[0-9a-f]+ t m32_static32_dlld
0+[0-9a-f]+ t m32_static32_l
0+[0-9a-f]+ t m32_static32_ld
0+[0-9a-f]+ t m32_static_d
0+[0-9a-f]+ t m32_static_d_d
0+[0-9a-f]+ t m32_static_d_l
0+[0-9a-f]+ t m32_static_dl
0+[0-9a-f]+ t m32_static_dlld
0+[0-9a-f]+ t m32_static_l
0+[0-9a-f]+ t m32_static_ld
#pass
@


1.2
log
@gas/testsuite/
	* gas/mips/elf-rel26.d: Add -32.
	* gas/mips/mips16-intermix.d: Likewise.

ld/testsuite/
	* ld-mips-elf/mips-elf.exp (o32_as_flags, o32_ld_flags): New variables.
	(mips16_call_global_test, mips16_intermix_test): Use them.
@
text
@d1 1
a1 1
#objdump: -t
d5 116
a120 159
.*: +file format .*mips.*

SYMBOL TABLE:
#...
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ m32_static_l
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ 0xf0 m16_static_l
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ m32_static1_l
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ 0xf0 m16_static1_l
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ m32_static32_l
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ 0xf0 m16_static32_l
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ m32_static16_l
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ 0xf0 m16_static16_l
0+[0-9a-f]+ l    d  .mips16.fn.m16_d	0+[0-9a-f]+ .mips16.fn.m16_d
0+[0-9a-f]+ l     F .mips16.fn.m16_d	0+[0-9a-f]+ __fn_stub_m16_d
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ m32_static_d
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ 0xf0 m16_static_d
0+[0-9a-f]+ l    d  .mips16.fn.m16_static_d	0+[0-9a-f]+ .mips16.fn.m16_static_d
0+[0-9a-f]+ l     F .mips16.fn.m16_static_d	0+[0-9a-f]+ __fn_stub_m16_static_d
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ m32_static1_d
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ 0xf0 m16_static1_d
0+[0-9a-f]+ l    d  .mips16.fn.m16_static1_d	0+[0-9a-f]+ .mips16.fn.m16_static1_d
0+[0-9a-f]+ l     F .mips16.fn.m16_static1_d	0+[0-9a-f]+ __fn_stub_m16_static1_d
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ m32_static32_d
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ 0xf0 m16_static32_d
0+[0-9a-f]+ l    d  .mips16.fn.m16_static32_d	0+[0-9a-f]+ .mips16.fn.m16_static32_d
0+[0-9a-f]+ l     F .mips16.fn.m16_static32_d	0+[0-9a-f]+ __fn_stub_m16_static32_d
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ m32_static16_d
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ 0xf0 m16_static16_d
0+[0-9a-f]+ l    d  .mips16.fn.m16_static16_d	0+[0-9a-f]+ .mips16.fn.m16_static16_d
0+[0-9a-f]+ l     F .mips16.fn.m16_static16_d	0+[0-9a-f]+ __fn_stub_m16_static16_d
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ m32_static_ld
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ 0xf0 m16_static_ld
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ m32_static1_ld
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ 0xf0 m16_static1_ld
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ m32_static32_ld
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ 0xf0 m16_static32_ld
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ m32_static16_ld
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ 0xf0 m16_static16_ld
0+[0-9a-f]+ l    d  .mips16.fn.m16_dl	0+[0-9a-f]+ .mips16.fn.m16_dl
0+[0-9a-f]+ l     F .mips16.fn.m16_dl	0+[0-9a-f]+ __fn_stub_m16_dl
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ m32_static_dl
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ 0xf0 m16_static_dl
0+[0-9a-f]+ l    d  .mips16.fn.m16_static_dl	0+[0-9a-f]+ .mips16.fn.m16_static_dl
0+[0-9a-f]+ l     F .mips16.fn.m16_static_dl	0+[0-9a-f]+ __fn_stub_m16_static_dl
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ m32_static1_dl
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ 0xf0 m16_static1_dl
0+[0-9a-f]+ l    d  .mips16.fn.m16_static1_dl	0+[0-9a-f]+ .mips16.fn.m16_static1_dl
0+[0-9a-f]+ l     F .mips16.fn.m16_static1_dl	0+[0-9a-f]+ __fn_stub_m16_static1_dl
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ m32_static32_dl
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ 0xf0 m16_static32_dl
0+[0-9a-f]+ l    d  .mips16.fn.m16_static32_dl	0+[0-9a-f]+ .mips16.fn.m16_static32_dl
0+[0-9a-f]+ l     F .mips16.fn.m16_static32_dl	0+[0-9a-f]+ __fn_stub_m16_static32_dl
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ m32_static16_dl
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ 0xf0 m16_static16_dl
0+[0-9a-f]+ l    d  .mips16.fn.m16_static16_dl	0+[0-9a-f]+ .mips16.fn.m16_static16_dl
0+[0-9a-f]+ l     F .mips16.fn.m16_static16_dl	0+[0-9a-f]+ __fn_stub_m16_static16_dl
0+[0-9a-f]+ l    d  .mips16.fn.m16_dlld	0+[0-9a-f]+ .mips16.fn.m16_dlld
0+[0-9a-f]+ l     F .mips16.fn.m16_dlld	0+[0-9a-f]+ __fn_stub_m16_dlld
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ m32_static_dlld
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ 0xf0 m16_static_dlld
0+[0-9a-f]+ l    d  .mips16.fn.m16_static_dlld	0+[0-9a-f]+ .mips16.fn.m16_static_dlld
0+[0-9a-f]+ l     F .mips16.fn.m16_static_dlld	0+[0-9a-f]+ __fn_stub_m16_static_dlld
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ m32_static1_dlld
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ 0xf0 m16_static1_dlld
0+[0-9a-f]+ l    d  .mips16.fn.m16_static1_dlld	0+[0-9a-f]+ .mips16.fn.m16_static1_dlld
0+[0-9a-f]+ l     F .mips16.fn.m16_static1_dlld	0+[0-9a-f]+ __fn_stub_m16_static1_dlld
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ m32_static32_dlld
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ 0xf0 m16_static32_dlld
0+[0-9a-f]+ l    d  .mips16.fn.m16_static32_dlld	0+[0-9a-f]+ .mips16.fn.m16_static32_dlld
0+[0-9a-f]+ l     F .mips16.fn.m16_static32_dlld	0+[0-9a-f]+ __fn_stub_m16_static32_dlld
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ m32_static16_dlld
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ 0xf0 m16_static16_dlld
0+[0-9a-f]+ l    d  .mips16.fn.m16_static16_dlld	0+[0-9a-f]+ .mips16.fn.m16_static16_dlld
0+[0-9a-f]+ l     F .mips16.fn.m16_static16_dlld	0+[0-9a-f]+ __fn_stub_m16_static16_dlld
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ m32_static_d_l
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ 0xf0 m16_static_d_l
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ m32_static1_d_l
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ 0xf0 m16_static1_d_l
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ m32_static32_d_l
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ 0xf0 m16_static32_d_l
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ m32_static16_d_l
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ 0xf0 m16_static16_d_l
0+[0-9a-f]+ l    d  .mips16.fn.m16_d_d	0+[0-9a-f]+ .mips16.fn.m16_d_d
0+[0-9a-f]+ l     F .mips16.fn.m16_d_d	0+[0-9a-f]+ __fn_stub_m16_d_d
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ m32_static_d_d
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ 0xf0 m16_static_d_d
0+[0-9a-f]+ l    d  .mips16.fn.m16_static_d_d	0+[0-9a-f]+ .mips16.fn.m16_static_d_d
0+[0-9a-f]+ l     F .mips16.fn.m16_static_d_d	0+[0-9a-f]+ __fn_stub_m16_static_d_d
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ m32_static1_d_d
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ 0xf0 m16_static1_d_d
0+[0-9a-f]+ l    d  .mips16.fn.m16_static1_d_d	0+[0-9a-f]+ .mips16.fn.m16_static1_d_d
0+[0-9a-f]+ l     F .mips16.fn.m16_static1_d_d	0+[0-9a-f]+ __fn_stub_m16_static1_d_d
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ m32_static32_d_d
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ 0xf0 m16_static32_d_d
0+[0-9a-f]+ l    d  .mips16.fn.m16_static32_d_d	0+[0-9a-f]+ .mips16.fn.m16_static32_d_d
0+[0-9a-f]+ l     F .mips16.fn.m16_static32_d_d	0+[0-9a-f]+ __fn_stub_m16_static32_d_d
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ m32_static16_d_d
0+[0-9a-f]+ l     F .text	0+[0-9a-f]+ 0xf0 m16_static16_d_d
0+[0-9a-f]+ l    d  .mips16.fn.m16_static16_d_d	0+[0-9a-f]+ .mips16.fn.m16_static16_d_d
0+[0-9a-f]+ l     F .mips16.fn.m16_static16_d_d	0+[0-9a-f]+ __fn_stub_m16_static16_d_d
0+[0-9a-f]+ l    d  .mips16.call.m32_static1_d	0+[0-9a-f]+ .mips16.call.m32_static1_d
0+[0-9a-f]+ l     F .mips16.call.m32_static1_d	0+[0-9a-f]+ __call_stub_m32_static1_d
0+[0-9a-f]+ l    d  .mips16.call.m16_static1_d	0+[0-9a-f]+ .mips16.call.m16_static1_d
0+[0-9a-f]+ l     F .mips16.call.m16_static1_d	0+[0-9a-f]+ __call_stub_m16_static1_d
0+[0-9a-f]+ l    d  .mips16.call.m32_static1_dl	0+[0-9a-f]+ .mips16.call.m32_static1_dl
0+[0-9a-f]+ l     F .mips16.call.m32_static1_dl	0+[0-9a-f]+ __call_stub_m32_static1_dl
0+[0-9a-f]+ l    d  .mips16.call.m16_static1_dl	0+[0-9a-f]+ .mips16.call.m16_static1_dl
0+[0-9a-f]+ l     F .mips16.call.m16_static1_dl	0+[0-9a-f]+ __call_stub_m16_static1_dl
0+[0-9a-f]+ l    d  .mips16.call.m32_static1_dlld	0+[0-9a-f]+ .mips16.call.m32_static1_dlld
0+[0-9a-f]+ l     F .mips16.call.m32_static1_dlld	0+[0-9a-f]+ __call_stub_m32_static1_dlld
0+[0-9a-f]+ l    d  .mips16.call.m16_static1_dlld	0+[0-9a-f]+ .mips16.call.m16_static1_dlld
0+[0-9a-f]+ l     F .mips16.call.m16_static1_dlld	0+[0-9a-f]+ __call_stub_m16_static1_dlld
0+[0-9a-f]+ l    d  .mips16.call.fp.m32_static1_d_l	0+[0-9a-f]+ .mips16.call.fp.m32_static1_d_l
0+[0-9a-f]+ l     F .mips16.call.fp.m32_static1_d_l	0+[0-9a-f]+ __call_stub_fp_m32_static1_d_l
0+[0-9a-f]+ l    d  .mips16.call.fp.m16_static1_d_l	0+[0-9a-f]+ .mips16.call.fp.m16_static1_d_l
0+[0-9a-f]+ l     F .mips16.call.fp.m16_static1_d_l	0+[0-9a-f]+ __call_stub_fp_m16_static1_d_l
0+[0-9a-f]+ l    d  .mips16.call.fp.m32_static1_d_d	0+[0-9a-f]+ .mips16.call.fp.m32_static1_d_d
0+[0-9a-f]+ l     F .mips16.call.fp.m32_static1_d_d	0+[0-9a-f]+ __call_stub_fp_m32_static1_d_d
0+[0-9a-f]+ l    d  .mips16.call.fp.m16_static1_d_d	0+[0-9a-f]+ .mips16.call.fp.m16_static1_d_d
0+[0-9a-f]+ l     F .mips16.call.fp.m16_static1_d_d	0+[0-9a-f]+ __call_stub_fp_m16_static1_d_d
0+[0-9a-f]+ l    d  .mips16.call.m32_static16_d	0+[0-9a-f]+ .mips16.call.m32_static16_d
0+[0-9a-f]+ l     F .mips16.call.m32_static16_d	0+[0-9a-f]+ __call_stub_m32_static16_d
0+[0-9a-f]+ l    d  .mips16.call.m16_static16_d	0+[0-9a-f]+ .mips16.call.m16_static16_d
0+[0-9a-f]+ l     F .mips16.call.m16_static16_d	0+[0-9a-f]+ __call_stub_m16_static16_d
0+[0-9a-f]+ l    d  .mips16.call.m32_static16_dl	0+[0-9a-f]+ .mips16.call.m32_static16_dl
0+[0-9a-f]+ l     F .mips16.call.m32_static16_dl	0+[0-9a-f]+ __call_stub_m32_static16_dl
0+[0-9a-f]+ l    d  .mips16.call.m16_static16_dl	0+[0-9a-f]+ .mips16.call.m16_static16_dl
0+[0-9a-f]+ l     F .mips16.call.m16_static16_dl	0+[0-9a-f]+ __call_stub_m16_static16_dl
0+[0-9a-f]+ l    d  .mips16.call.m32_static16_dlld	0+[0-9a-f]+ .mips16.call.m32_static16_dlld
0+[0-9a-f]+ l     F .mips16.call.m32_static16_dlld	0+[0-9a-f]+ __call_stub_m32_static16_dlld
0+[0-9a-f]+ l    d  .mips16.call.m16_static16_dlld	0+[0-9a-f]+ .mips16.call.m16_static16_dlld
0+[0-9a-f]+ l     F .mips16.call.m16_static16_dlld	0+[0-9a-f]+ __call_stub_m16_static16_dlld
0+[0-9a-f]+ l    d  .mips16.call.fp.m32_static16_d_l	0+[0-9a-f]+ .mips16.call.fp.m32_static16_d_l
0+[0-9a-f]+ l     F .mips16.call.fp.m32_static16_d_l	0+[0-9a-f]+ __call_stub_fp_m32_static16_d_l
0+[0-9a-f]+ l    d  .mips16.call.fp.m16_static16_d_l	0+[0-9a-f]+ .mips16.call.fp.m16_static16_d_l
0+[0-9a-f]+ l     F .mips16.call.fp.m16_static16_d_l	0+[0-9a-f]+ __call_stub_fp_m16_static16_d_l
0+[0-9a-f]+ l    d  .mips16.call.fp.m32_static16_d_d	0+[0-9a-f]+ .mips16.call.fp.m32_static16_d_d
0+[0-9a-f]+ l     F .mips16.call.fp.m32_static16_d_d	0+[0-9a-f]+ __call_stub_fp_m32_static16_d_d
0+[0-9a-f]+ l    d  .mips16.call.fp.m16_static16_d_d	0+[0-9a-f]+ .mips16.call.fp.m16_static16_d_d
0+[0-9a-f]+ l     F .mips16.call.fp.m16_static16_d_d	0+[0-9a-f]+ __call_stub_fp_m16_static16_d_d
#...
0+[0-9a-f]+ g     F .text	0+[0-9a-f]+ m32_l
0+[0-9a-f]+ g     F .text	0+[0-9a-f]+ 0xf0 m16_l
0+[0-9a-f]+ g     F .text	0+[0-9a-f]+ m32_d
0+[0-9a-f]+ g     F .text	0+[0-9a-f]+ 0xf0 m16_d
#...
0+[0-9a-f]+ g     F .text	0+[0-9a-f]+ m32_ld
0+[0-9a-f]+ g     F .text	0+[0-9a-f]+ 0xf0 m16_ld
0+[0-9a-f]+ g     F .text	0+[0-9a-f]+ m32_dl
0+[0-9a-f]+ g     F .text	0+[0-9a-f]+ 0xf0 m16_dl
0+[0-9a-f]+ g     F .text	0+[0-9a-f]+ m32_dlld
0+[0-9a-f]+ g     F .text	0+[0-9a-f]+ 0xf0 m16_dlld
0+[0-9a-f]+ g     F .text	0+[0-9a-f]+ m32_d_l
0+[0-9a-f]+ g     F .text	0+[0-9a-f]+ 0xf0 m16_d_l
#...
0+[0-9a-f]+ g     F .text	0+[0-9a-f]+ m32_d_d
0+[0-9a-f]+ g     F .text	0+[0-9a-f]+ 0xf0 m16_d_d
0+[0-9a-f]+ g     F .text	0+[0-9a-f]+ f32
0+[0-9a-f]+ g     F .text	0+[0-9a-f]+ 0xf0 f16
@


1.1
log
@	[ bfd/ChangeLog ]
	* elf-bfd.h (local_call_stubs): New member.
	* elfxx-mips.c (FN_STUB_P, CALL_STUB_P, CALL_FP_STUB_P): New macros.
	(mips_elf_calculate_relocation): Handle local mips16 call stubs.
	(mips16_stub_section_p): Rename from mips_elf_stub_section_p, use
	the new stub macros.
	(_bfd_mips_elf_check_relocs): Handle call stubs for code which
	mixes mips16 and mips32 functions. Use mips16_stub_section_p. Mark
	used stubs with SEC_KEEP. Use the new stub macros.

	[ gas/testsuite/ChangeLog ]
	* gas/mips/mips16-intermix.d, gas/mips/mips16-intermix.s: New
	testcase.
	* gas/mips/mips.exp: Run new testcase.

	[ ld/testsuite/ChangeLog ]
	* ld-mips-elf/mips16-intermix-1.s, ld-mips-elf/mips16-intermix-2.s,
	ld-mips-elf/mips16-intermix.d: New testcase.
	* ld-mips-elf/mips-elf.exp (mips16_intermix_test): Run new testcases.
@
text
@d2 1
a2 1
#as: -mips32r2
@

