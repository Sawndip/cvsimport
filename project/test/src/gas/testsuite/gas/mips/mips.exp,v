head	1.236;
access;
symbols
	binutils-2_24-branch:1.234.0.2
	binutils-2_24-branchpoint:1.234
	binutils-2_21_1:1.174.2.1
	binutils-2_23_2:1.199.2.2
	binutils-2_23_1:1.199.2.2
	binutils-2_23:1.199.2.2
	binutils-2_23-branch:1.199.0.2
	binutils-2_23-branchpoint:1.199
	binutils-2_22_branch:1.192.2.1.0.2
	binutils-2_22:1.192.2.1
	binutils-2_22-branch:1.192.0.2
	binutils-2_22-branchpoint:1.192
	binutils-2_21:1.174.2.1
	binutils-2_21-branch:1.174.0.2
	binutils-2_21-branchpoint:1.174
	binutils-2_20_1:1.151.4.1
	binutils-2_20:1.151.4.1
	binutils-arc-20081103-branch:1.145.0.6
	binutils-arc-20081103-branchpoint:1.145
	binutils-2_20-branch:1.151.0.4
	binutils-2_20-branchpoint:1.151
	dje-cgen-play1-branch:1.151.0.2
	dje-cgen-play1-branchpoint:1.151
	arc-20081103-branch:1.145.0.4
	arc-20081103-branchpoint:1.145
	binutils-2_19_1:1.145.2.1
	binutils-2_19:1.145
	binutils-2_19-branch:1.145.0.2
	binutils-2_19-branchpoint:1.145
	binutils-2_18:1.128
	binutils-2_18-branch:1.128.0.2
	binutils-2_18-branchpoint:1.128
	binutils-csl-coldfire-4_1-32:1.112.2.1
	binutils-csl-sourcerygxx-4_1-32:1.112.2.1
	binutils-csl-innovasic-fido-3_4_4-33:1.112.2.1
	binutils-csl-sourcerygxx-3_4_4-32:1.104.2.3
	binutils-csl-coldfire-4_1-30:1.112.2.1
	binutils-csl-sourcerygxx-4_1-30:1.112.2.1
	binutils-csl-coldfire-4_1-28:1.112.2.1
	binutils-csl-sourcerygxx-4_1-29:1.112.2.1
	binutils-csl-sourcerygxx-4_1-28:1.112.2.1
	binutils-csl-arm-2006q3-27:1.112.2.1
	binutils-csl-sourcerygxx-4_1-27:1.112.2.1
	binutils-csl-arm-2006q3-26:1.112.2.1
	binutils-csl-sourcerygxx-4_1-26:1.112.2.1
	binutils-csl-sourcerygxx-4_1-25:1.112.2.1
	binutils-csl-sourcerygxx-4_1-24:1.112.2.1
	binutils-csl-sourcerygxx-4_1-23:1.112.2.1
	binutils-csl-sourcerygxx-4_1-21:1.112.2.1
	binutils-csl-arm-2006q3-21:1.112.2.1
	binutils-csl-sourcerygxx-4_1-22:1.112.2.1
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.112.2.1
	binutils-csl-sourcerygxx-4_1-20:1.112.2.1
	binutils-csl-arm-2006q3-19:1.112.2.1
	binutils-csl-sourcerygxx-4_1-19:1.112.2.1
	binutils-csl-sourcerygxx-4_1-18:1.112.2.1
	binutils-csl-renesas-4_1-9:1.112.2.1
	binutils-csl-sourcerygxx-3_4_4-25:1.104.2.3
	binutils-csl-renesas-4_1-8:1.112
	binutils-csl-renesas-4_1-7:1.112
	binutils-csl-renesas-4_1-6:1.112
	binutils-csl-sourcerygxx-4_1-17:1.112
	binutils-csl-sourcerygxx-4_1-14:1.112
	binutils-csl-sourcerygxx-4_1-15:1.112
	binutils-csl-sourcerygxx-4_1-13:1.112
	binutils-2_17:1.113
	binutils-csl-sourcerygxx-4_1-12:1.112
	binutils-csl-sourcerygxx-3_4_4-21:1.112
	binutils-csl-wrs-linux-3_4_4-24:1.104.2.2
	binutils-csl-wrs-linux-3_4_4-23:1.104.2.2
	binutils-csl-sourcerygxx-4_1-9:1.112
	binutils-csl-sourcerygxx-4_1-8:1.112
	binutils-csl-sourcerygxx-4_1-7:1.112
	binutils-csl-arm-2006q1-6:1.112
	binutils-csl-sourcerygxx-4_1-6:1.112
	binutils-csl-wrs-linux-3_4_4-22:1.104.2.2
	binutils-csl-coldfire-4_1-11:1.112
	binutils-csl-sourcerygxx-3_4_4-19:1.112
	binutils-csl-coldfire-4_1-10:1.112
	binutils-csl-sourcerygxx-4_1-5:1.112
	binutils-csl-sourcerygxx-4_1-4:1.112
	binutils-csl-wrs-linux-3_4_4-21:1.104.2.2
	binutils-csl-morpho-4_1-4:1.112
	binutils-csl-sourcerygxx-3_4_4-17:1.112
	binutils-csl-wrs-linux-3_4_4-20:1.104.2.2
	binutils-2_17-branch:1.113.0.2
	binutils-2_17-branchpoint:1.113
	binutils-csl-2_17-branch:1.112.0.2
	binutils-csl-2_17-branchpoint:1.112
	binutils-csl-gxxpro-3_4-branch:1.104.2.3.0.2
	binutils-csl-gxxpro-3_4-branchpoint:1.104.2.3
	binutils-2_16_1:1.104.2.3
	binutils-csl-arm-2005q1b:1.104.2.2
	binutils-2_16:1.104.2.3
	binutils-csl-arm-2005q1a:1.104.2.2
	binutils-csl-arm-2005q1-branch:1.104.2.2.0.2
	binutils-csl-arm-2005q1-branchpoint:1.104.2.2
	binutils-2_16-branch:1.104.0.2
	binutils-2_16-branchpoint:1.104
	csl-arm-2004-q3d:1.96
	csl-arm-2004-q3:1.93
	binutils-2_15:1.87
	binutils-2_15-branchpoint:1.87
	csl-arm-2004-q1a:1.89
	csl-arm-2004-q1:1.87
	binutils-2_15-branch:1.87.0.4
	cagney_bfdfile-20040213-branch:1.87.0.2
	cagney_bfdfile-20040213-branchpoint:1.87
	cagney_bigcore-20040122-branch:1.85.0.2
	cagney_bigcore-20040122-branchpoint:1.85
	csl-arm-2003-q4:1.82
	binutils-2_14:1.67.2.7
	binutils-2_14-branch:1.67.0.2
	binutils-2_14-branchpoint:1.67
	binutils-2_13_2_1:1.37.2.4
	binutils-2_13_2:1.37.2.4
	binutils-2_13_1:1.37.2.4
	binutils-2_13:1.37.2.2
	binutils-2_13-branchpoint:1.37
	binutils-2_13-branch:1.37.0.2
	binutils-2_12_1:1.28.2.2
	binutils-2_12:1.28.2.1
	binutils-2_12-branch:1.28.0.2
	binutils-2_12-branchpoint:1.28
	cygnus_cvs_20020108_pre:1.27
	binutils-2_11_2:1.6.2.1
	binutils-2_11_1:1.6.2.1
	binutils-2_11:1.6
	x86_64versiong3:1.7
	binutils-2_11-branch:1.6.0.2
	binutils-2_10_1:1.3
	binutils-2_10:1.3
	binutils-2_10-branch:1.3.0.2
	binutils-2_10-branchpoint:1.3
	binutils_latest_snapshot:1.236
	repo-unification-2000-02-06:1.2
	binu_ss_19990721:1.1.1.1
	binu_ss_19990602:1.1.1.1
	binu_ss_19990502:1.1.1.1
	cygnus:1.1.1;
locks; strict;
comment	@# @;


1.236
date	2013.10.18.21.16.57;	author chaoyingfu;	state Exp;
branches;
next	1.235;

1.235
date	2013.10.14.19.06.20;	author chaoyingfu;	state Exp;
branches;
next	1.234;

1.234
date	2013.09.12.21.45.04;	author chaoyingfu;	state Exp;
branches;
next	1.233;

1.233
date	2013.08.19.19.26.11;	author rsandifo;	state Exp;
branches;
next	1.232;

1.232
date	2013.08.04.07.31.39;	author rsandifo;	state Exp;
branches;
next	1.231;

1.231
date	2013.08.03.10.41.13;	author rsandifo;	state Exp;
branches;
next	1.230;

1.230
date	2013.07.14.14.16.02;	author rsandifo;	state Exp;
branches;
next	1.229;

1.229
date	2013.07.12.15.58.14;	author macro;	state Exp;
branches;
next	1.228;

1.228
date	2013.07.07.11.32.31;	author rsandifo;	state Exp;
branches;
next	1.227;

1.227
date	2013.07.07.10.15.08;	author rsandifo;	state Exp;
branches;
next	1.226;

1.226
date	2013.06.25.18.02.34;	author macro;	state Exp;
branches;
next	1.225;

1.225
date	2013.06.22.16.57.42;	author rsandifo;	state Exp;
branches;
next	1.224;

1.224
date	2013.06.20.19.25.20;	author rsandifo;	state Exp;
branches;
next	1.223;

1.223
date	2013.06.17.22.59.10;	author clm;	state Exp;
branches;
next	1.222;

1.222
date	2013.06.14.13.30.28;	author rsandifo;	state Exp;
branches;
next	1.221;

1.221
date	2013.06.13.21.04.33;	author chaoyingfu;	state Exp;
branches;
next	1.220;

1.220
date	2013.06.10.18.15.48;	author macro;	state Exp;
branches;
next	1.219;

1.219
date	2013.05.31.17.04.53;	author clm;	state Exp;
branches;
next	1.218;

1.218
date	2013.05.29.16.22.14;	author macro;	state Exp;
branches;
next	1.217;

1.217
date	2013.05.28.22.19.34;	author macro;	state Exp;
branches;
next	1.216;

1.216
date	2013.05.22.18.08.26;	author rsandifo;	state Exp;
branches;
next	1.215;

1.215
date	2013.05.10.01.08.48;	author pinskia;	state Exp;
branches;
next	1.214;

1.214
date	2013.05.02.22.30.11;	author rsandifo;	state Exp;
branches;
next	1.213;

1.213
date	2013.05.01.01.04.45;	author chaoyingfu;	state Exp;
branches;
next	1.212;

1.212
date	2013.02.09.10.24.19;	author rsandifo;	state Exp;
branches;
next	1.211;

1.211
date	2013.01.04.17.22.49;	author nickc;	state Exp;
branches;
next	1.210;

1.210
date	2012.12.17.16.55.57;	author nickc;	state Exp;
branches;
next	1.209;

1.209
date	2012.11.08.18.21.25;	author macro;	state Exp;
branches;
next	1.208;

1.208
date	2012.11.01.22.54.11;	author macro;	state Exp;
branches;
next	1.207;

1.207
date	2012.11.01.22.49.28;	author macro;	state Exp;
branches;
next	1.206;

1.206
date	2012.09.23.11.16.53;	author rsandifo;	state Exp;
branches;
next	1.205;

1.205
date	2012.09.23.11.14.26;	author rsandifo;	state Exp;
branches;
next	1.204;

1.204
date	2012.09.23.10.41.23;	author rsandifo;	state Exp;
branches;
next	1.203;

1.203
date	2012.08.06.21.28.44;	author macro;	state Exp;
branches;
next	1.202;

1.202
date	2012.08.06.21.05.52;	author macro;	state Exp;
branches;
next	1.201;

1.201
date	2012.08.06.20.33.00;	author macro;	state Exp;
branches;
next	1.200;

1.200
date	2012.07.31.21.38.53;	author macro;	state Exp;
branches;
next	1.199;

1.199
date	2012.01.08.12.33.54;	author rsandifo;	state Exp;
branches
	1.199.2.1;
next	1.198;

1.198
date	2012.01.08.12.11.41;	author rsandifo;	state Exp;
branches;
next	1.197;

1.197
date	2011.12.08.20.47.26;	author pinskia;	state Exp;
branches;
next	1.196;

1.196
date	2011.12.03.10.29.53;	author rsandifo;	state Exp;
branches;
next	1.195;

1.195
date	2011.11.29.20.28.55;	author pinskia;	state Exp;
branches;
next	1.194;

1.194
date	2011.11.21.11.18.28;	author macro;	state Exp;
branches;
next	1.193;

1.193
date	2011.11.14.13.43.23;	author macro;	state Exp;
branches;
next	1.192;

1.192
date	2011.09.05.19.19.00;	author rsandifo;	state Exp;
branches
	1.192.2.1;
next	1.191;

1.191
date	2011.08.10.22.52.03;	author macro;	state Exp;
branches;
next	1.190;

1.190
date	2011.08.10.22.28.41;	author macro;	state Exp;
branches;
next	1.189;

1.189
date	2011.08.09.15.20.02;	author macro;	state Exp;
branches;
next	1.188;

1.188
date	2011.07.24.14.20.09;	author rsandifo;	state Exp;
branches;
next	1.187;

1.187
date	2011.07.04.19.27.28;	author macro;	state Exp;
branches;
next	1.186;

1.186
date	2011.06.29.20.39.00;	author rsandifo;	state Exp;
branches;
next	1.185;

1.185
date	2011.06.23.20.21.37;	author rsandifo;	state Exp;
branches;
next	1.184;

1.184
date	2011.05.11.12.39.08;	author rsandifo;	state Exp;
branches;
next	1.183;

1.183
date	2011.04.20.16.44.28;	author clm;	state Exp;
branches;
next	1.182;

1.182
date	2011.02.28.16.34.38;	author macro;	state Exp;
branches;
next	1.181;

1.181
date	2011.02.28.16.26.46;	author macro;	state Exp;
branches;
next	1.180;

1.180
date	2011.02.28.15.52.25;	author macro;	state Exp;
branches;
next	1.179;

1.179
date	2011.02.28.15.44.53;	author macro;	state Exp;
branches;
next	1.178;

1.178
date	2010.12.18.11.14.14;	author rsandifo;	state Exp;
branches;
next	1.177;

1.177
date	2010.12.11.10.48.55;	author rsandifo;	state Exp;
branches;
next	1.176;

1.176
date	2010.12.09.23.57.22;	author macro;	state Exp;
branches;
next	1.175;

1.175
date	2010.11.13.11.59.20;	author rsandifo;	state Exp;
branches;
next	1.174;

1.174
date	2010.10.24.10.54.31;	author macro;	state Exp;
branches
	1.174.2.1;
next	1.173;

1.173
date	2010.10.24.10.43.40;	author macro;	state Exp;
branches;
next	1.172;

1.172
date	2010.10.24.10.33.10;	author macro;	state Exp;
branches;
next	1.171;

1.171
date	2010.10.24.10.19.02;	author macro;	state Exp;
branches;
next	1.170;

1.170
date	2010.10.24.10.08.56;	author macro;	state Exp;
branches;
next	1.169;

1.169
date	2010.10.24.10.06.24;	author macro;	state Exp;
branches;
next	1.168;

1.168
date	2010.10.24.09.59.20;	author macro;	state Exp;
branches;
next	1.167;

1.167
date	2010.10.24.07.31.40;	author macro;	state Exp;
branches;
next	1.166;

1.166
date	2010.10.24.07.29.01;	author macro;	state Exp;
branches;
next	1.165;

1.165
date	2010.10.18.00.44.18;	author macro;	state Exp;
branches;
next	1.164;

1.164
date	2010.10.04.15.24.49;	author daney;	state Exp;
branches;
next	1.163;

1.163
date	2010.09.14.23.49.03;	author macro;	state Exp;
branches;
next	1.162;

1.162
date	2010.07.24.01.51.53;	author macro;	state Exp;
branches;
next	1.161;

1.161
date	2010.07.24.01.43.32;	author macro;	state Exp;
branches;
next	1.160;

1.160
date	2010.07.06.00.12.42;	author macro;	state Exp;
branches;
next	1.159;

1.159
date	2010.07.05.23.57.27;	author macro;	state Exp;
branches;
next	1.158;

1.158
date	2010.07.05.23.55.24;	author macro;	state Exp;
branches;
next	1.157;

1.157
date	2010.07.05.23.46.21;	author macro;	state Exp;
branches;
next	1.156;

1.156
date	2010.05.26.12.59.55;	author clm;	state Exp;
branches;
next	1.155;

1.155
date	2010.02.25.11.15.48;	author nickc;	state Exp;
branches;
next	1.154;

1.154
date	2009.12.19.00.21.29;	author macro;	state Exp;
branches;
next	1.153;

1.153
date	2009.09.21.13.08.36;	author macro;	state Exp;
branches;
next	1.152;

1.152
date	2009.09.13.19.18.11;	author rsandifo;	state Exp;
branches;
next	1.151;

1.151
date	2009.05.27.14.14.42;	author clm;	state Exp;
branches
	1.151.4.1;
next	1.150;

1.150
date	2009.04.09.15.55.59;	author clm;	state Exp;
branches;
next	1.149;

1.149
date	2009.02.03.18.16.04;	author jsm28;	state Exp;
branches;
next	1.148;

1.148
date	2009.01.27.13.48.14;	author nickc;	state Exp;
branches;
next	1.147;

1.147
date	2008.11.06.19.49.26;	author nemet;	state Exp;
branches;
next	1.146;

1.146
date	2008.11.06.19.43.00;	author chaoyingfu;	state Exp;
branches;
next	1.145;

1.145
date	2008.09.06.08.47.00;	author rsandifo;	state Exp;
branches
	1.145.2.1;
next	1.144;

1.144
date	2008.08.08.19.24.49;	author drow;	state Exp;
branches;
next	1.143;

1.143
date	2008.08.06.19.44.47;	author rsandifo;	state Exp;
branches;
next	1.142;

1.142
date	2008.07.10.19.05.29;	author rsandifo;	state Exp;
branches;
next	1.141;

1.141
date	2008.07.07.19.28.02;	author nemet;	state Exp;
branches;
next	1.140;

1.140
date	2008.06.12.16.14.52;	author nickc;	state Exp;
branches;
next	1.139;

1.139
date	2008.05.09.19.28.47;	author clm;	state Exp;
branches;
next	1.138;

1.138
date	2008.04.28.17.10.18;	author nemet;	state Exp;
branches;
next	1.137;

1.137
date	2008.02.06.05.29.03;	author nemet;	state Exp;
branches;
next	1.136;

1.136
date	2008.02.04.19.19.43;	author nemet;	state Exp;
branches;
next	1.135;

1.135
date	2008.01.02.20.59.46;	author clm;	state Exp;
branches;
next	1.134;

1.134
date	2007.12.10.10.36.00;	author rsandifo;	state Exp;
branches;
next	1.133;

1.133
date	2007.11.29.12.23.44;	author shinwell;	state Exp;
branches;
next	1.132;

1.132
date	2007.10.08.16.41.34;	author macro;	state Exp;
branches;
next	1.131;

1.131
date	2007.10.08.16.09.35;	author macro;	state Exp;
branches;
next	1.130;

1.130
date	2007.10.04.21.53.06;	author daney;	state Exp;
branches;
next	1.129;

1.129
date	2007.09.24.22.08.21;	author carlos;	state Exp;
branches;
next	1.128;

1.128
date	2007.06.05.17.00.32;	author nickc;	state Exp;
branches;
next	1.127;

1.127
date	2007.02.20.13.28.53;	author ths;	state Exp;
branches;
next	1.126;

1.126
date	2006.11.07.23.55.36;	author daney;	state Exp;
branches;
next	1.125;

1.125
date	2006.11.02.15.20.31;	author ths;	state Exp;
branches;
next	1.124;

1.124
date	2006.08.15.18.23.11;	author ths;	state Exp;
branches;
next	1.123;

1.123
date	2006.07.04.16.39.08;	author ths;	state Exp;
branches;
next	1.122;

1.122
date	2006.06.20.17.09.29;	author ths;	state Exp;
branches;
next	1.121;

1.121
date	2006.06.14.18.04.44;	author ths;	state Exp;
branches;
next	1.120;

1.120
date	2006.06.09.11.53.39;	author ths;	state Exp;
branches;
next	1.119;

1.119
date	2006.06.06.10.49.47;	author ths;	state Exp;
branches;
next	1.118;

1.118
date	2006.05.19.22.48.13;	author ths;	state Exp;
branches;
next	1.117;

1.117
date	2006.05.14.15.35.22;	author ths;	state Exp;
branches;
next	1.116;

1.116
date	2006.05.08.15.57.05;	author ths;	state Exp;
branches;
next	1.115;

1.115
date	2006.05.05.16.38.08;	author ths;	state Exp;
branches;
next	1.114;

1.114
date	2006.05.04.10.47.03;	author ths;	state Exp;
branches;
next	1.113;

1.113
date	2006.03.22.09.28.13;	author rsandifo;	state Exp;
branches;
next	1.112;

1.112
date	2005.11.23.14.04.18;	author drow;	state Exp;
branches
	1.112.2.1;
next	1.111;

1.111
date	2005.11.14.02.25.39;	author ths;	state Exp;
branches;
next	1.110;

1.110
date	2005.10.19.18.47.09;	author davidu;	state Exp;
branches;
next	1.109;

1.109
date	2005.09.06.18.56.21;	author chaoyingfu;	state Exp;
branches;
next	1.108;

1.108
date	2005.08.25.18.21.47;	author chaoyingfu;	state Exp;
branches;
next	1.107;

1.107
date	2005.04.13.18.17.10;	author macro;	state Exp;
branches;
next	1.106;

1.106
date	2005.03.09.09.53.50;	author rsandifo;	state Exp;
branches;
next	1.105;

1.105
date	2005.03.09.09.34.59;	author rsandifo;	state Exp;
branches;
next	1.104;

1.104
date	2005.03.04.09.51.11;	author rsandifo;	state Exp;
branches
	1.104.2.1;
next	1.103;

1.103
date	2005.03.03.15.01.49;	author rsandifo;	state Exp;
branches;
next	1.102;

1.102
date	2005.03.02.21.22.47;	author drow;	state Exp;
branches;
next	1.101;

1.101
date	2005.02.22.20.50.11;	author macro;	state Exp;
branches;
next	1.100;

1.100
date	2005.02.22.12.32.26;	author macro;	state Exp;
branches;
next	1.99;

1.99
date	2005.02.18.22.12.52;	author ths;	state Exp;
branches;
next	1.98;

1.98
date	2005.02.15.19.57.53;	author macro;	state Exp;
branches;
next	1.97;

1.97
date	2004.12.10.19.48.42;	author ian;	state Exp;
branches;
next	1.96;

1.96
date	2004.10.07.22.29.19;	author rsandifo;	state Exp;
branches;
next	1.95;

1.95
date	2004.10.07.19.15.29;	author rsandifo;	state Exp;
branches;
next	1.94;

1.94
date	2004.10.07.19.12.54;	author rsandifo;	state Exp;
branches;
next	1.93;

1.93
date	2004.08.18.15.58.12;	author ths;	state Exp;
branches;
next	1.92;

1.92
date	2004.07.03.15.20.53;	author rsandifo;	state Exp;
branches;
next	1.91;

1.91
date	2004.05.12.03.06.10;	author bje;	state Exp;
branches;
next	1.90;

1.90
date	2004.05.07.16.39.26;	author rsandifo;	state Exp;
branches;
next	1.89;

1.89
date	2004.04.22.18.13.56;	author ths;	state Exp;
branches;
next	1.88;

1.88
date	2004.04.22.02.41.02;	author cgd;	state Exp;
branches;
next	1.87;

1.87
date	2004.01.23.13.01.07;	author rsandifo;	state Exp;
branches
	1.87.4.1;
next	1.86;

1.86
date	2004.01.23.12.58.22;	author rsandifo;	state Exp;
branches;
next	1.85;

1.85
date	2004.01.14.18.01.09;	author macro;	state Exp;
branches;
next	1.84;

1.84
date	2004.01.14.03.06.02;	author ian;	state Exp;
branches;
next	1.83;

1.83
date	2004.01.12.09.30.49;	author rsandifo;	state Exp;
branches;
next	1.82;

1.82
date	2003.12.18.10.23.10;	author rsandifo;	state Exp;
branches;
next	1.81;

1.81
date	2003.12.06.13.52.23;	author rsandifo;	state Exp;
branches;
next	1.80;

1.80
date	2003.11.18.21.22.55;	author macro;	state Exp;
branches;
next	1.79;

1.79
date	2003.10.01.02.07.48;	author ths;	state Exp;
branches;
next	1.78;

1.78
date	2003.09.30.16.17.13;	author cgd;	state Exp;
branches;
next	1.77;

1.77
date	2003.07.15.07.50.39;	author rsandifo;	state Exp;
branches;
next	1.76;

1.76
date	2003.07.09.01.27.30;	author cgd;	state Exp;
branches;
next	1.75;

1.75
date	2003.06.29.19.41.33;	author ths;	state Exp;
branches;
next	1.74;

1.74
date	2003.06.12.05.45.50;	author rsandifo;	state Exp;
branches;
next	1.73;

1.73
date	2003.06.10.19.45.24;	author ths;	state Exp;
branches;
next	1.72;

1.72
date	2003.05.22.12.13.43;	author ths;	state Exp;
branches;
next	1.71;

1.71
date	2003.05.19.19.22.25;	author ths;	state Exp;
branches;
next	1.70;

1.70
date	2003.05.07.05.08.20;	author aoliva;	state Exp;
branches;
next	1.69;

1.69
date	2003.05.03.06.52.20;	author cgd;	state Exp;
branches;
next	1.68;

1.68
date	2003.05.02.05.29.13;	author cgd;	state Exp;
branches;
next	1.67;

1.67
date	2003.04.11.01.56.51;	author aoliva;	state Exp;
branches
	1.67.2.1;
next	1.66;

1.66
date	2003.04.04.17.35.44;	author cgd;	state Exp;
branches;
next	1.65;

1.65
date	2003.04.02.18.43.16;	author cgd;	state Exp;
branches;
next	1.64;

1.64
date	2003.03.12.23.05.31;	author aoliva;	state Exp;
branches;
next	1.63;

1.63
date	2003.03.02.21.30.15;	author ths;	state Exp;
branches;
next	1.62;

1.62
date	2003.02.21.10.28.27;	author rsandifo;	state Exp;
branches;
next	1.61;

1.61
date	2003.02.08.17.05.55;	author rsandifo;	state Exp;
branches;
next	1.60;

1.60
date	2003.02.07.15.06.33;	author rsandifo;	state Exp;
branches;
next	1.59;

1.59
date	2003.02.02.19.37.20;	author rsandifo;	state Exp;
branches;
next	1.58;

1.58
date	2003.01.27.23.01.55;	author aoliva;	state Exp;
branches;
next	1.57;

1.57
date	2002.12.31.08.11.17;	author cgd;	state Exp;
branches;
next	1.56;

1.56
date	2002.12.31.07.42.20;	author cgd;	state Exp;
branches;
next	1.55;

1.55
date	2002.12.31.07.29.28;	author cgd;	state Exp;
branches;
next	1.54;

1.54
date	2002.12.27.23.51.48;	author cgd;	state Exp;
branches;
next	1.53;

1.53
date	2002.12.27.08.00.30;	author cgd;	state Exp;
branches;
next	1.52;

1.52
date	2002.12.18.22.52.48;	author cgd;	state Exp;
branches;
next	1.51;

1.51
date	2002.12.12.04.40.22;	author aoliva;	state Exp;
branches;
next	1.50;

1.50
date	2002.10.21.14.59.30;	author rsandifo;	state Exp;
branches;
next	1.49;

1.49
date	2002.10.12.05.23.46;	author aoliva;	state Exp;
branches;
next	1.48;

1.48
date	2002.10.01.04.37.47;	author hjl;	state Exp;
branches;
next	1.47;

1.47
date	2002.09.30.21.12.24;	author hjl;	state Exp;
branches;
next	1.46;

1.46
date	2002.09.30.12.04.54;	author rsandifo;	state Exp;
branches;
next	1.45;

1.45
date	2002.09.26.09.56.33;	author ths;	state Exp;
branches;
next	1.44;

1.44
date	2002.09.18.21.45.29;	author cgd;	state Exp;
branches;
next	1.43;

1.43
date	2002.09.18.21.33.07;	author cgd;	state Exp;
branches;
next	1.42;

1.42
date	2002.09.18.20.50.46;	author cgd;	state Exp;
branches;
next	1.41;

1.41
date	2002.09.17.08.38.27;	author ths;	state Exp;
branches;
next	1.40;

1.40
date	2002.08.12.08.30.50;	author rsandifo;	state Exp;
branches;
next	1.39;

1.39
date	2002.08.01.20.14.49;	author rsandifo;	state Exp;
branches;
next	1.38;

1.38
date	2002.07.29.21.07.11;	author cgd;	state Exp;
branches;
next	1.37;

1.37
date	2002.06.14.14.08.54;	author drow;	state Exp;
branches
	1.37.2.1;
next	1.36;

1.36
date	2002.05.31.18.27.02;	author cgd;	state Exp;
branches;
next	1.35;

1.35
date	2002.05.31.16.48.07;	author cgd;	state Exp;
branches;
next	1.34;

1.34
date	2002.05.31.01.17.17;	author cgd;	state Exp;
branches;
next	1.33;

1.33
date	2002.05.21.23.54.44;	author ths;	state Exp;
branches;
next	1.32;

1.32
date	2002.04.04.08.23.30;	author nickc;	state Exp;
branches;
next	1.31;

1.31
date	2002.03.16.03.09.17;	author cgd;	state Exp;
branches;
next	1.30;

1.30
date	2002.03.16.02.09.36;	author cgd;	state Exp;
branches;
next	1.29;

1.29
date	2002.02.26.22.17.56;	author cgd;	state Exp;
branches;
next	1.28;

1.28
date	2002.02.09.07.18.54;	author cgd;	state Exp;
branches
	1.28.2.1;
next	1.27;

1.27
date	2002.01.02.18.59.30;	author cgd;	state Exp;
branches;
next	1.26;

1.26
date	2001.11.17.02.59.06;	author cgd;	state Exp;
branches;
next	1.25;

1.25
date	2001.11.12.22.22.20;	author ths;	state Exp;
branches;
next	1.24;

1.24
date	2001.11.04.19.06.38;	author cgd;	state Exp;
branches;
next	1.23;

1.23
date	2001.11.01.01.33.47;	author cgd;	state Exp;
branches;
next	1.22;

1.22
date	2001.10.18.01.42.16;	author cgd;	state Exp;
branches;
next	1.21;

1.21
date	2001.08.25.00.48.49;	author ths;	state Exp;
branches;
next	1.20;

1.20
date	2001.08.16.19.24.33;	author ths;	state Exp;
branches;
next	1.19;

1.19
date	2001.08.10.20.38.33;	author hjl;	state Exp;
branches;
next	1.18;

1.18
date	2001.08.05.00.53.28;	author hjl;	state Exp;
branches;
next	1.17;

1.17
date	2001.08.03.18.37.42;	author rsandifo;	state Exp;
branches;
next	1.16;

1.16
date	2001.08.02.10.16.49;	author rsandifo;	state Exp;
branches;
next	1.15;

1.15
date	2001.07.30.13.59.00;	author rsandifo;	state Exp;
branches;
next	1.14;

1.14
date	2001.06.09.06.25.55;	author hjl;	state Exp;
branches;
next	1.13;

1.13
date	2001.06.09.04.54.16;	author hjl;	state Exp;
branches;
next	1.12;

1.12
date	2001.06.09.03.28.32;	author hjl;	state Exp;
branches;
next	1.11;

1.11
date	2001.06.07.17.18.56;	author hjl;	state Exp;
branches;
next	1.10;

1.10
date	2001.06.07.00.57.10;	author hjl;	state Exp;
branches;
next	1.9;

1.9
date	2001.05.25.18.39.02;	author hjl;	state Exp;
branches;
next	1.8;

1.8
date	2001.03.25.20.32.30;	author nickc;	state Exp;
branches;
next	1.7;

1.7
date	2001.02.18.01.52.11;	author cgd;	state Exp;
branches;
next	1.6;

1.6
date	2000.12.03.22.10.02;	author nickc;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	2000.12.01.21.35.37;	author nickc;	state Exp;
branches;
next	1.4;

1.4
date	2000.05.11.01.55.11;	author amodra;	state Exp;
branches;
next	1.3;

1.3
date	2000.03.11.02.16.25;	author geoffk;	state Exp;
branches;
next	1.2;

1.2
date	99.10.07.02.57.33;	author geoffk;	state Exp;
branches;
next	1.1;

1.1
date	99.05.03.07.28.51;	author rth;	state Exp;
branches
	1.1.1.1;
next	;

1.199.2.1
date	2012.09.04.14.01.39;	author gingold;	state Exp;
branches;
next	1.199.2.2;

1.199.2.2
date	2012.09.04.14.37.57;	author gingold;	state Exp;
branches;
next	;

1.192.2.1
date	2011.11.14.13.46.18;	author macro;	state Exp;
branches;
next	1.192.2.2;

1.192.2.2
date	2012.01.08.12.34.30;	author rsandifo;	state Exp;
branches;
next	;

1.174.2.1
date	2010.11.15.21.56.50;	author rsandifo;	state Exp;
branches;
next	;

1.151.4.1
date	2009.09.21.19.32.47;	author rsandifo;	state Exp;
branches;
next	;

1.145.2.1
date	2009.01.09.00.16.12;	author nemet;	state Exp;
branches;
next	;

1.112.2.1
date	2006.08.22.15.08.39;	author jsm28;	state Exp;
branches;
next	;

1.104.2.1
date	2005.03.09.09.50.16;	author rsandifo;	state Exp;
branches;
next	1.104.2.2;

1.104.2.2
date	2005.03.09.09.53.20;	author rsandifo;	state Exp;
branches;
next	1.104.2.3;

1.104.2.3
date	2005.04.13.18.17.48;	author macro;	state Exp;
branches;
next	;

1.87.4.1
date	2004.08.18.18.30.52;	author ths;	state Exp;
branches;
next	;

1.67.2.1
date	2003.05.02.05.31.49;	author cgd;	state Exp;
branches;
next	1.67.2.2;

1.67.2.2
date	2003.05.03.06.53.40;	author cgd;	state Exp;
branches;
next	1.67.2.3;

1.67.2.3
date	2003.05.15.19.19.35;	author drow;	state Exp;
branches;
next	1.67.2.4;

1.67.2.4
date	2003.05.19.19.39.46;	author ths;	state Exp;
branches;
next	1.67.2.5;

1.67.2.5
date	2003.05.24.19.30.30;	author ths;	state Exp;
branches;
next	1.67.2.6;

1.67.2.6
date	2003.06.10.19.51.28;	author ths;	state Exp;
branches;
next	1.67.2.7;

1.67.2.7
date	2003.06.12.06.03.59;	author rsandifo;	state Exp;
branches;
next	;

1.37.2.1
date	2002.07.30.18.20.01;	author drow;	state Exp;
branches;
next	1.37.2.2;

1.37.2.2
date	2002.08.02.02.03.10;	author drow;	state Exp;
branches;
next	1.37.2.3;

1.37.2.3
date	2002.09.23.22.13.39;	author drow;	state Exp;
branches;
next	1.37.2.4;

1.37.2.4
date	2002.10.28.18.45.51;	author drow;	state Exp;
branches;
next	;

1.28.2.1
date	2002.02.26.22.24.46;	author cgd;	state Exp;
branches;
next	1.28.2.2;

1.28.2.2
date	2002.04.30.21.42.06;	author cgd;	state Exp;
branches;
next	;

1.6.2.1
date	2001.06.11.10.05.00;	author amodra;	state Exp;
branches;
next	;

1.1.1.1
date	99.05.03.07.28.51;	author rth;	state Exp;
branches;
next	;


desc
@@


1.236
log
@2013-10-18  Chao-ying Fu  <Chao-ying.Fu@@imgtec.com>

	* gas/mips/micromips@@msa-branch.d, gas/mips/msa-branch.d,
	gas/mips/msa-branch.s: New.
	* gas/mips/mips.exp: Run new tests.
@
text
@# Copyright 2012, 2013
# Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.  

#
# Some generic MIPS tests
#

# When adding a new test to this file, try to do the following things:
#
# * If testing assembly and disassembly of code, don't forget to test
# the actual bit encodings of the instructions (using the
# --show-raw-insn flag to objdump). 
#
# * Try to run the test for as many architectures as appropriate,
# using the "run_dump_test_arches" or "run_list_test_arches" functions,
# along with the output from a call to "mips_arch_list_matching."
#
# * Be sure to compare the test output before and after your testsuite
# changes, to verify that existing and new tests were run as expected.
# Look for expect ERROR messages in the testsuite .log file to make sure
# the new expect code did not contain errors.

# To add support for a new CPU to this file, add an appropriate entry
# to the sequence of "mips_arch_create" function calls below, and test
# the result.  The new CPU should automatically be used when running
# various tests.  If the new CPU is the default CPU for any tool
# targets, make sure the call to "mips_arch_create" reflects that fact.


# The functions below create and manipulate an "architecture data
# array" which contains entries for each MIPS architecture (or CPU)
# known to these tests.  The array contains the following information
# for each architecture, indexed by the name of the architecture
# described by the entry:
#
# displayname: The name of the entry to be used for pretty-printing.
#
# gprsize: The size in bits of General Purpose Registers provided by
# the architecture (must be 32 or 64).
#
# props: A list of text strings which are associated with the
# architecture.  These include the architecture name as well as
# information about what instructions the CPU supports.  When matching
# based on properties, an additional property is added to the normal
# property list, "gpr<gprsize>" so that tests can match CPUs which
# have GPRs of a specific size.  The following properties are most
# useful when matching properties for generic (i.e., not CPU-specific)
# tests:
#
#	mips1, mips2, mips3, mips4, mips5, mips32, mips64
#		The architecture includes the instructions defined
#		by that MIPS ISA.
#
#	fpisa3, fpisa4, fpisa5
#		The architecture includes the floating-point
#		instructions defined by that MIPS ISA.
#
#	gpr_ilocks
#		The architecture interlocks GPRs accesses.  (That is,
#		there are no load delay slots.)
#
#	mips3d	The architecture includes the MIPS-3D ASE.
#
#	ror	The architecture includes hardware rotate instructions.
#
#	gpr32, gpr64
#		The architecture provides 32- or 64-bit General Purpose
#		Registers.
#
#	singlefloat
#		The CPU is 64 bit, but only supports 32 bit FPU.
#
#	nollsc
#		The CPU doesn't support ll, sc, lld and scd instructions.
#
# as_flags: The assembler flags used when assembling tests for this
# architecture.
#
# objdump_flags: The objdump flags used when disassembling tests for
# this architecture.
#
# Most entries in the architecture array will have values in all of
# the fields above.  One entry, "default" represents the default CPU
# based on the target of the assembler being built.  If always has
# empty "as_flags" and "objdump_flags."

# mips_arch_init
#
# This function initializes the architecture data array ("mips_arches")
# to be empty.
proc mips_arch_init {} {
    global mips_arches

    # Catch because the variable won't be set the first time through.
    catch {unset mips_arches}
}

# mips_arch_create ARCH GPRSIZE EXTENDS PROPS AS_FLAGS OBJDUMP_FLAGS \
#		   (optional:) DEFAULT_FOR_TARGETS
#
# This function creates a new entry in the architecture data array,
# for the architecture or CPU named ARCH, and fills in the entry
# according to the rest of the arguments.
#
# The new entry's property list is initialized to contain ARCH, any
# properties specified by PROPS, and the properties associated with
# the entry specified by EXTENDS.  (The new architecture is considered
# to extend the capabilities provided by that architecture.)
#
# If DEFAULT_FOR_TARGETS is specified, it is a list of targets for which
# this architecture is the default architecture.  If "istarget" returns
# true for any of the targets in the list, a "default" entry will be
# added to the architecture array which indicates that ARCH is the default
# architecture.
proc mips_arch_create {arch gprsize extends props as_flags objdump_flags
		       {default_for_targets {}}} {
    global mips_arches

    if { [info exists mips_arches($arch)] } {
             error "mips_arch_create: arch \"$arch\" already exists"
    }
    if { $gprsize != 32 && $gprsize != 64 } {
	error "mips_arch_create: invalid GPR size $gprsize"
    }

    set archdata(displayname) $arch
    set archdata(gprsize) $gprsize
    set archdata(as_flags) $as_flags
    set archdata(objdump_flags) $objdump_flags
    set archdata(props) $arch
    eval lappend archdata(props) $props
    if { [string length $extends] != 0 } {
	eval lappend archdata(props) [mips_arch_properties $extends 0]
    }

    set mips_arches($arch) [array get archdata]

    # Set as default if appropriate.
    foreach target $default_for_targets {
	if { [istarget $target] } {
	    if { [info exists mips_arches(default)] } {
		error "mips_arch_create: default arch already exists"
	    }

	    set archdata(displayname) "default = $arch"
    	    set archdata(as_flags) ""
	    set archdata(objdump_flags) ""

	    set mips_arches(default) [array get archdata]
	    break
	}
    }
}

# mips_arch_destroy ARCH
#
# The opposite of the above.  This function removes an entry from
# the architecture data array, for the architecture or CPU named ARCH.

proc mips_arch_destroy {arch} {
    global mips_arches

    if { [info exists mips_arches($arch)] } {
	unset mips_arches($arch)
    }
}

# mips_arch_list_all
#
# This function returns the list of all names of entries in the
# architecture data array (including the default entry, if a default
# is known).
proc mips_arch_list_all {} {
    global mips_arches
    return [lsort -dictionary [array names mips_arches]]
}

# mips_arch_data ARCH
#
# This function returns the information associated with ARCH
# in the architecture data array, in "array get" form.
proc mips_arch_data {arch} {
    global mips_arches

    if { ! [info exists mips_arches($arch)] } {
	error "mips_arch_data: unknown arch \"$arch\""
    }
    return $mips_arches($arch)
}

# mips_arch_displayname ARCH
#
# This function returns the printable name associated with ARCH in
# the architecture data array.
proc mips_arch_displayname {arch} {
    array set archdata [mips_arch_data $arch]
    return $archdata(displayname)
}

# mips_arch_properties ARCH (optional:) INCLUDE_GPRSIZE
#
# This function returns the property list associated with ARCH in the
# architecture data array, including the "canonical" target name as the
# first element.
#
# If INCLUDE_GPRSIZE is non-zero, an additional "gpr32" or "gpr64"
# property will be returned as part of the list based on the
# architecture's GPR size.
proc mips_arch_properties {arch {include_gprsize 1}} {
    array set archdata [mips_arch_data $arch]
    set props $archdata(props)
    if { $include_gprsize } {
	lappend props gpr$archdata(gprsize)
    }
    return $props
}

# mips_arch_as_flags ARCH
#
# This function returns the assembler flags associated with ARCH in
# the architecture data array. 
proc mips_arch_as_flags {arch} {
    array set archdata [mips_arch_data $arch]
    return $archdata(as_flags)
}

# mips_arch_objdump_flags ARCH
#
# This function returns the objdump disassembly flags associated with
# ARCH in the architecture data array. 
proc mips_arch_objdump_flags {arch} {
    array set archdata [mips_arch_data $arch]
    return $archdata(objdump_flags)
}

# mips_arch_matches ARCH PROPMATCHLIST
#
# This function returns non-zero if ARCH matches the set of properties
# described by PROPMATCHLIST.  Each entry in PROPMATCHLIST can either
# be the name of a property which must be matched, or "!" followed by
# the name of a property which must not be matched.  ARCH matches
# PROPMATCHLIST if and only if all of the conditions specified by
# PROPMATCHLIST are satisfied.
proc mips_arch_matches {arch propmatchlist} {
    foreach pm $propmatchlist {
	if { [string match {!*} $pm] } {
	    # fail if present.
	    set inverted 1
	    set p [string range $pm 1 end]
	} {
	    # fail if not present.
	    set inverted 0
	    set p $pm
	}

	set loc [lsearch -exact [mips_arch_properties $arch] $p]

	# required-absent and found, or required-present and not found: fail.
	if { ($inverted && $loc != -1) || (! $inverted && $loc == -1) } {
	    return 0
	}
    }
    return 1
}

# mips_arch_list_matching ARGS
#
# This function returns a list of all architectures which match
# the conditions described by its arguments.  Its arguments are
# taken as a list and used as the PROPMATCHLIST in a call to
# "mips_arch_matches" for each known architecture.
proc mips_arch_list_matching {args} {
    set l ""
    foreach arch [mips_arch_list_all] {
	# For now, don't match default arch until we know what its
	# properties actually are.
	if { [string compare $arch default] == 0
	     && [string length [mips_arch_properties default]] == 0} {
	    continue
	}
	if { [mips_arch_matches $arch $args] } {
	    lappend l $arch
	}
    }
    return $l
}


# The functions below facilitate running various types of tests.

# run_dump_test_arch NAME OPTS ARCH
#
# Invoke "run_dump_test" for test NAME with additional assembler options OPTS.
# Add the assembler and disassembler flags that are associated with
# architecture ARCH.
#
# You can override the expected output for particular architectures.
# The possible test names are, in order of preference:
#
# 1. CARCH@@NAME.d
# 2. NAME.d
#
# where CARCH is the "canonical" name of architecture ARCH as recorded
# in its associated property list.
proc run_dump_test_arch { name opts arch } {
    global subdir srcdir

    set proparch [lindex [mips_arch_properties $arch 0] 0]
    set prefixes [list ${proparch}@@ ]
    if { [ string match "octeon*" $proparch ] && $proparch != "octeon" } {
	lappend prefixes octeon@@
    }
    foreach prefix ${prefixes} {
	set archname ${prefix}${name}
	if { [file exists "$srcdir/$subdir/${archname}.d"] } {
	    set name $archname
	    break
	}
    }

    if [catch {run_dump_test $name \
		   "{name    {([concat $opts [mips_arch_displayname $arch]])}}
		    {objdump {[mips_arch_objdump_flags $arch]}}
		    {as      {[concat $opts [mips_arch_as_flags $arch]]}}"} rv] {
        perror "$rv"
        untested "$subdir/$name ($arch)"
    }
}

# run_dump_test_arches NAME [OPTS] ARCH_LIST
#
# Invoke "run_dump_test_arch" for test NAME, for each architecture
# listed in ARCH_LIST.  OPTS, if specified, is a list of additional
# assembler options that should be used for all architectures.
proc run_dump_test_arches { name args } {
    set opts ""
    if { [llength $args] > 1 } {
	set opts [lindex $args 0]
	set args [lrange $args 1 end]
    }
    set arch_list [lindex $args 0]
    foreach arch $arch_list {
	run_dump_test_arch $name $opts $arch
    }
}

# run_list_test_arch NAME OPTS ARCH
#
# Invoke "run_list_test" for test NAME with additional assembler options OPTS.
# Add the assembler flags that are associated with architecture ARCH.
proc run_list_test_arch { name opts arch } {
    global subdir

    set testname "MIPS $name ([concat $opts [mips_arch_displayname $arch]])"
    if [catch {run_list_test \
		   $name \
		   [concat $opts [mips_arch_as_flags $arch]] \
		   $testname} rv] {
        perror "$rv"
        untested "$testname"
    }
}

# run_list_test_arches NAME [OPTS] ARCH_LIST
#
# Invoke "run_list_test_arch" for test NAME, for each architecture listed
# in ARCH_LIST.  OPTS, if specified, is a list of additional assembler
# options that should be used for all architectures.
proc run_list_test_arches { name args } {
    set opts ""
    if { [llength $args] > 1 } {
	set opts [lindex $args 0]
	set args [lrange $args 1 end]
    }
    set arch_list [lindex $args 0]
    foreach arch $arch_list {
	run_list_test_arch "$name" "$opts" "$arch"
    }
}


# Create the architecture data array by providing data for all
# known architectures.
#
# Note that several targets pick default CPU based on ABI.  We
# can't easily handle that; do NOT list those targets as defaulting
# to any architecture.
mips_arch_init
mips_arch_create mips1 	32	{}	{} \
			{ -march=mips1 -mtune=mips1 } { -mmips:3000 }
mips_arch_create mips2 	32	mips1	{ gpr_ilocks } \
		        { -march=mips2 -mtune=mips2 } { -mmips:6000 }
mips_arch_create mips3 	64	mips2	{ fpisa3 } \
			{ -march=mips3 -mtune=mips3 } { -mmips:4000 }
mips_arch_create mips4 	64	mips3	{ fpisa4 } \
			{ -march=mips4 -mtune=mips4 } { -mmips:8000 }
mips_arch_create mips5 	64	mips4	{ fpisa5 } \
			{ -march=mips5 -mtune=mips5 } { -mmips:mips5 }
mips_arch_create mips32	32	mips2	{} \
			{ -march=mips32 -mtune=mips32 } { -mmips:isa32 } \
			{ mipsisa32-*-* mipsisa32el-*-* }
mips_arch_create mips32r2 32	mips32	{ fpisa3 fpisa4 fpisa5 ror } \
			{ -march=mips32r2 -mtune=mips32r2 } \
			{ -mmips:isa32r2 } \
			{ mipsisa32r2-*-* mipsisa32r2el-*-* }
mips_arch_create mips64	64	mips5	{ mips32 } \
			{ -march=mips64 -mtune=mips64 } { -mmips:isa64 } \
			{ mipsisa64-*-* mipsisa64el-*-* }
mips_arch_create mips64r2 64	mips64	{ mips32r2 ror } \
			{ -march=mips64r2 -mtune=mips64r2 } \
			{ -mmips:isa64r2 } \
			{ mipsisa64r2-*-* mipsisa64r2el-*-* }
mips_arch_create mips16	32	{}	{} \
			{ -march=mips1 -mips16 } { -mmips:16 }
mips_arch_create micromips 64	mips64r2 {} \
			{ -march=mips64 -mmicromips } {}
mips_arch_create r3000 	32	mips1	{} \
			{ -march=r3000 -mtune=r3000 } { -mmips:3000 }
mips_arch_create r3900 	32	mips1	{ gpr_ilocks } \
			{ -march=r3900 -mtune=r3900 } { -mmips:3900 } \
			{ mipstx39-*-* mipstx39el-*-* }
mips_arch_create r4000 	64	mips3	{} \
			{ -march=r4000 -mtune=r4000 } { -mmips:4000 }
mips_arch_create vr5400	64	mips4	{ ror } \
			{ -march=vr5400 -mtune=vr5400 } { -mmips:5400 }
mips_arch_create sb1 	64	mips64	{ mips3d } \
			{ -march=sb1 -mtune=sb1 } { -mmips:sb1 } \
			{ mipsisa64sb1-*-* mipsisa64sb1el-*-* }
mips_arch_create octeon 64	mips64r2 {} \
			{ -march=octeon -mtune=octeon } { -mmips:octeon } \
			{ mips64octeon*-*-* }
mips_arch_create octeonp 64	octeon {} \
			{ -march=octeon+ -mtune=octeon+ } { -mmips:octeon+ } \
			{ }
mips_arch_create octeon2 64	octeonp {} \
			{ -march=octeon2 -mtune=octeon2 } { -mmips:octeon2 } \
			{ }
mips_arch_create xlr 	64	mips64	{} \
			{ -march=xlr -mtune=xlr } { -mmips:xlr }
mips_arch_create r5900 	64	mips3	{ gpr_ilocks singlefloat nollsc } \
			{ -march=r5900 -mtune=r5900 } { -mmips:5900 } \
			{ mipsr5900el-*-* mips64r5900el-*-* }

#
# And now begin the actual tests!  VxWorks uses RELA rather than REL
# relocations, so most of the generic dump tests will not work there.
#
if { [istarget mips*-*-vxworks*] } {
    run_dump_test "vxworks1"
    run_dump_test "vxworks1-xgot"
    run_dump_test "vxworks1-el"
    run_dump_test "vxworks1-xgot-el"
} elseif { [istarget mips*-*-*] } {
    set addr32 [expr [istarget mipstx39*-*-*] || [istarget mips-*-linux*] || [istarget mipsel-*-linux*]]
    set has_newabi [expr [istarget *-*-irix6*] || [istarget mips*-*-linux*] || [istarget mips*-sde-elf*]]

    if { [istarget "mips*-*-*linux*"]
	 || [istarget "mips*-sde-elf*"]
	 || [istarget "mips*-*-*bsd*"] } then {
	set tmips "t"
    } else {
	set tmips ""
    }
    if [istarget mips*el-*-*] {
	set el "el"
    } {
	set el ""
    }

    run_dump_test_arches "dot-1"	[mips_arch_list_matching mips1]
    run_dump_test_arches "abs"		[mips_arch_list_matching mips1]
    run_dump_test_arches "add"		[mips_arch_list_matching mips1]
    run_dump_test_arches "and"		[mips_arch_list_matching mips1]
    run_dump_test_arches "mips1-fp"	[mips_arch_list_matching mips1]
    run_list_test_arches "mips1-fp" "-32 -msoft-float" \
					[mips_arch_list_matching mips1]
    run_dump_test "break20"
    run_dump_test "trap20"

    run_dump_test_arches "beq"		[mips_arch_list_matching mips1]
    run_dump_test_arches "bge"		[mips_arch_list_matching mips1]
    run_dump_test_arches "bgeu"		[mips_arch_list_matching mips1]
    run_dump_test_arches "blt"		[mips_arch_list_matching mips1]
    run_dump_test_arches "bltu"		[mips_arch_list_matching mips1]
    run_dump_test_arches "branch-likely" [mips_arch_list_matching mips2]
    run_dump_test_arches "branch-misc-1" [mips_arch_list_matching mips1]
    run_dump_test_arches "branch-misc-2" [mips_arch_list_matching mips1]
    run_dump_test_arches "branch-misc-2pic" [mips_arch_list_matching mips1]
    run_dump_test_arches "branch-misc-2-64" [mips_arch_list_matching mips3]
    run_dump_test_arches "branch-misc-2pic-64" [mips_arch_list_matching mips3]
    run_dump_test "branch-misc-3"
    run_dump_test "branch-swap"

    # Sweep a range of branch offsets so that it hits a position where
    # it is at the beginning of a frag and then swapped with a 16-bit
    # instruction from the preceding frag.  The offset will be somewhere
    # close below 4096 as this is the default obstack size limit that
    # we use and some space will have been already consumed.  The exact
    # amount depends on the host's programming model.
    for { set count 960 } { $count <= 1024 } { incr count } {
	run_list_test "branch-swap-2" "--defsym count=$count" \
	    "MIPS branch swapping ($count)"
    }

    run_dump_test "div"

    if { !$addr32 } {
	run_dump_test_arches "dli"	[mips_arch_list_matching mips3]
    }
    run_dump_test_arches "jal"		[mips_arch_list_matching mips1]
    run_dump_test_arches "jal-mask-11"	[mips_arch_list_matching mips1]
    run_dump_test_arches "jal-mask-12"	[mips_arch_list_matching mips1]
    run_dump_test_arches "jal-mask-21"	[mips_arch_list_matching micromips]
    run_dump_test_arches "jal-mask-22"	[mips_arch_list_matching micromips]
    run_dump_test "eret-1"
    run_dump_test "eret-2"
    run_dump_test "eret-3"
    run_dump_test_arches "24k-branch-delay-1" \
					[mips_arch_list_matching mips1]
    run_dump_test_arches "24k-triple-stores-1" \
				[mips_arch_list_matching fpisa5 !octeon]
    run_dump_test_arches "24k-triple-stores-2" \
					[mips_arch_list_matching mips2]
    run_dump_test_arches "24k-triple-stores-2-llsc" \
					[mips_arch_list_matching mips2 !nollsc]
    run_dump_test_arches "24k-triple-stores-3" \
					[mips_arch_list_matching mips2]
    run_dump_test_arches "24k-triple-stores-4" \
					[mips_arch_list_matching mips2 !singlefloat]
    run_dump_test_arches "24k-triple-stores-5" \
					[mips_arch_list_matching mips1]
    run_dump_test_arches "24k-triple-stores-6" \
					[mips_arch_list_matching mips2 !singlefloat]
    run_dump_test_arches "24k-triple-stores-7" \
					[mips_arch_list_matching mips2 !singlefloat]
    run_dump_test_arches "24k-triple-stores-8" \
					[mips_arch_list_matching mips1]
    run_dump_test_arches "24k-triple-stores-9" \
					[mips_arch_list_matching mips1]
    run_dump_test_arches "24k-triple-stores-10" \
					[mips_arch_list_matching mips1]
    run_dump_test_arches "24k-triple-stores-11" \
	    				[mips_arch_list_matching mips1]

    run_dump_test_arches "jal-svr4pic"	[mips_arch_list_matching mips1]
    run_dump_test_arches "jal-svr4pic-noreorder" \
					[mips_arch_list_matching mips1]
    run_dump_test "jal-xgot"
    run_list_test_arches "jal-range" "-32" [mips_arch_list_matching mips1]
    if $has_newabi { run_dump_test "jal-newabi" }
    run_dump_test "la"
    run_dump_test "la-svr4pic"
    run_dump_test "la-xgot"
    run_dump_test "lca-svr4pic"
    run_dump_test "lca-xgot"
    # XXX FIXME: Has mips2 and later insns with mips1 disassemblies.
    # (Should split and then use appropriate arch lists.)
    run_dump_test_arches "lb"	[mips_arch_list_matching mips1 !mips2]
    run_dump_test_arches "lb-svr4pic" \
				[mips_arch_list_matching mips1 !gpr_ilocks]
    run_dump_test_arches "lb-svr4pic-ilocks" [mips_arch_list_matching gpr_ilocks]
    # Both versions specify the cpu, so we can run both regardless of
    # the interlocking in the configured default cpu.
    run_dump_test "lb-xgot"
    run_dump_test "lb-xgot-ilocks"
    run_dump_test_arches "ld"		[mips_arch_list_matching mips1]
    run_dump_test_arches "ld-forward" 	[mips_arch_list_matching mips1]
    run_dump_test_arches "sd"		[mips_arch_list_matching mips1]
    run_dump_test_arches "sd-forward" 	[mips_arch_list_matching mips1]
    run_dump_test_arches "l_d" 		[mips_arch_list_matching mips1 !singlefloat]
    run_dump_test_arches "l_d-single"	[mips_arch_list_matching mips1 singlefloat]
    run_dump_test_arches "l_d-forward"	[mips_arch_list_matching mips1 !singlefloat]
    run_dump_test_arches "s_d"		[mips_arch_list_matching mips1 !singlefloat]
    run_dump_test_arches "s_d-single"	[mips_arch_list_matching mips1 singlefloat]
    run_dump_test_arches "s_d-forward" 	[mips_arch_list_matching mips1 !singlefloat]
    run_dump_test_arches "ldc1"		[mips_arch_list_matching mips2 !singlefloat]
    run_dump_test_arches "ldc1-forward" [mips_arch_list_matching mips2 !singlefloat]
    run_dump_test_arches "sdc1"		[mips_arch_list_matching mips2 !singlefloat]
    run_dump_test_arches "sdc1-forward" [mips_arch_list_matching mips2 !singlefloat]
    if $has_newabi {
	run_dump_test_arches "ld-n32" 	[mips_arch_list_matching mips3]
	run_dump_test_arches "ld-forward-n32" \
					[mips_arch_list_matching mips3]
	run_dump_test_arches "sd-n32" 	[mips_arch_list_matching mips3]
	run_dump_test_arches "sd-forward-n32" \
					[mips_arch_list_matching mips3]
	run_dump_test_arches "l_d-n32" 	[mips_arch_list_matching mips3 !singlefloat]
	run_dump_test_arches "l_d-forward-n32" \
					[mips_arch_list_matching mips3 !singlefloat]
	run_dump_test_arches "s_d-n32" 	[mips_arch_list_matching mips3 !singlefloat]
	run_dump_test_arches "s_d-forward-n32" \
					[mips_arch_list_matching mips3 !singlefloat]
	run_dump_test_arches "ldc1-n32" [mips_arch_list_matching mips3 !singlefloat]
	run_dump_test_arches "ldc1-forward-n32" \
					[mips_arch_list_matching mips3 !singlefloat]
	run_dump_test_arches "sdc1-n32" [mips_arch_list_matching mips3 !singlefloat]
	run_dump_test_arches "sdc1-forward-n32" \
					[mips_arch_list_matching mips3 !singlefloat]
	run_dump_test_arches "ld-n64"	[mips_arch_list_matching mips3]
	run_dump_test_arches "ld-forward-n64" \
					[mips_arch_list_matching mips3]
	run_dump_test_arches "sd-n64"	[mips_arch_list_matching mips3]
	run_dump_test_arches "sd-forward-n64" \
					[mips_arch_list_matching mips3]
	run_dump_test_arches "l_d-n64"	[mips_arch_list_matching mips3 !singlefloat]
	run_dump_test_arches "l_d-forward-n64" \
					[mips_arch_list_matching mips3 !singlefloat]
	run_dump_test_arches "s_d-n64"	[mips_arch_list_matching mips3 !singlefloat]
	run_dump_test_arches "s_d-forward-n64" \
					[mips_arch_list_matching mips3 !singlefloat]
	run_dump_test_arches "ldc1-n64"	[mips_arch_list_matching mips3 !singlefloat]
	run_dump_test_arches "ldc1-forward-n64" \
					[mips_arch_list_matching mips3 !singlefloat]
	run_dump_test_arches "sdc1-n64"	[mips_arch_list_matching mips3 !singlefloat]
	run_dump_test_arches "sdc1-forward-n64" \
					[mips_arch_list_matching mips3 !singlefloat]
    }
    run_dump_test_arches "ld-zero"	[mips_arch_list_matching mips1]
    run_dump_test_arches "ld-zero-2"	[mips_arch_list_matching mips2 !nollsc]
    run_dump_test_arches "ld-zero-3"	[mips_arch_list_matching mips3 !nollsc]
    run_dump_test_arches "ld-zero-u"	[mips_arch_list_matching micromips]
    run_dump_test_arches "ld-zero-q"	[mips_arch_list_matching r5900]
    run_dump_test "ld-svr4pic"
    run_dump_test "ld-xgot"
    run_dump_test_arches "li"		[mips_arch_list_matching mips1]
    run_dump_test "lifloat"
    run_dump_test "lif-svr4pic"
    run_dump_test "lif-xgot"
    run_dump_test_arches "mips4"	[mips_arch_list_matching mips4]
    run_dump_test_arches "mips4-fp" "-32" \
					[mips_arch_list_matching fpisa4]
    run_dump_test_arches "mips4-fp" "-mabi=o64" \
					[mips_arch_list_matching fpisa4 gpr64]
    run_list_test_arches "mips4-fp" "-32 -msoft-float" \
					[mips_arch_list_matching fpisa4]
    run_dump_test_arches "mips4-branch-likely" \
					[mips_arch_list_matching mips4]
    run_list_test_arches "mips4-branch-likely" "-32 -msoft-float" \
					[mips_arch_list_matching mips4]
    run_dump_test_arches "mips5-fp" "-32" \
					[mips_arch_list_matching fpisa5]
    run_dump_test_arches "mips5-fp" "-mabi=o64" \
					[mips_arch_list_matching fpisa5 gpr64]
    run_dump_test "mul"

    run_dump_test_arches "rol"		[mips_arch_list_matching mips1 !ror]
    run_dump_test_arches "rol-hw" 	[mips_arch_list_matching ror]

    run_dump_test_arches "rol64"	[mips_arch_list_matching gpr64 !ror]
    run_dump_test_arches "rol64-hw"	[mips_arch_list_matching gpr64 ror]

    run_dump_test "sb"
    run_dump_test "trunc"
    run_dump_test "ulh"
    run_dump_test_arches "ulh2-eb"	[mips_arch_list_matching mips1]
    run_dump_test_arches "ulh2-el"	[mips_arch_list_matching mips1]
    run_dump_test "ulh-svr4pic"
    run_dump_test "ulh-xgot"
    run_dump_test "ulw"
    run_dump_test "uld"
    run_dump_test "ush"
    run_dump_test "usw"
    run_dump_test "usd"
    run_dump_test_arches "ulw2-eb" [mips_arch_list_matching mips1 !gpr_ilocks]
    run_dump_test_arches "ulw2-eb-ilocks" [mips_arch_list_matching gpr_ilocks]
    run_dump_test_arches "ulw2-el" [mips_arch_list_matching mips1 !gpr_ilocks]
    run_dump_test_arches "ulw2-el-ilocks" [mips_arch_list_matching gpr_ilocks]

    run_dump_test_arches "uld2-eb" [mips_arch_list_matching mips3]
    run_dump_test_arches "uld2-el" [mips_arch_list_matching mips3]

    run_dump_test "mips16"
    run_dump_test "mips16-64"
    run_dump_test "mips16-macro"
    # Check MIPS16e extensions
    run_dump_test_arches "mips16e" [mips_arch_list_matching mips32 !micromips]
    # Check jalx handling
    run_dump_test "mips16-jalx"
    run_dump_test "mips-jalx"
    run_dump_test "mips-jalx-2"
    # Check MIPS16 HI16/LO16 relocations
    run_dump_test "mips16-hilo"
    if $has_newabi {
	run_dump_test "mips16-hilo-n32"
    }
    run_dump_test "mips16-hilo-match"
    run_dump_test "delay"
    run_dump_test "nodelay"
    run_dump_test "mips4010"
    run_dump_test "mips4650"
    run_dump_test "mips4100"
    run_dump_test "vr4111"
    run_dump_test "vr4120"
    run_dump_test "vr4120-2"
    run_dump_test "vr4130"
    run_dump_test "vr5400"
    run_list_test "vr5400-ill" "-march=vr5400"
    run_dump_test "vr5500"
    run_dump_test "rm7000"
    run_dump_test "perfcount"
    run_dump_test "lineno"
    run_dump_test "sync"

    run_dump_test_arches "virt"		[mips_arch_list_matching mips32r2]
    run_dump_test_arches "virt64"	[mips_arch_list_matching mips64r2]

    run_dump_test_arches "mips32"	[mips_arch_list_matching mips32]
    run_dump_test_arches "mips32-imm"	[mips_arch_list_matching mips32]

    run_dump_test_arches "mips32-sf32"	[mips_arch_list_matching mips32]
    run_list_test_arches "mips32-sf32" "-32 -msoft-float" \
					[mips_arch_list_matching mips32]
    run_dump_test_arches "mips32-cp2"	[mips_arch_list_matching mips32 \
					    !octeon]

    run_dump_test_arches "mips32r2"	[mips_arch_list_matching mips32r2]
    run_dump_test_arches "mips32r2-cp2"	[mips_arch_list_matching mips32r2 \
					    !octeon]
    run_dump_test_arches "mips32r2-fp32" \
					[mips_arch_list_matching mips32r2]
    run_list_test_arches "mips32r2-fp32" "-32 -msoft-float" \
					[mips_arch_list_matching mips32r2]
    run_list_test_arches "mips32r2-ill" "-32" \
			[mips_arch_list_matching mips32r2 gpr32]
    run_list_test_arches "mips32r2-ill-fp64" "-mabi=o64" \
			[mips_arch_list_matching mips32r2 gpr64]
    run_list_test_arches "mips32r2-ill-nofp" "-32 -msoft-float" \
			[mips_arch_list_matching mips32r2]

    run_dump_test_arches "mips64"	[mips_arch_list_matching mips64]
    run_dump_test_arches "mips64-cp2"	[mips_arch_list_matching mips64 \
					    !octeon]

    run_dump_test_arches "mips64r2"	[mips_arch_list_matching mips64r2]
    run_list_test_arches "mips64r2-ill"	[mips_arch_list_matching mips64r2]

    run_dump_test "set-arch"

    if { !$addr32 } {
	run_dump_test "mips64-mips3d"
	run_dump_test_arches "mips64-mips3d-incl" [mips_arch_list_matching mips3d]

	run_dump_test "mips64-mdmx"
	run_dump_test "sb1-ext-mdmx"
	run_dump_test "sb1-ext-ps"
	run_dump_test "xlr-ext"
    }

    run_dump_test_arches "relax"	[mips_arch_list_matching mips2]
    run_dump_test_arches "relax-at"	[mips_arch_list_matching mips2]
    run_dump_test "relax-swap1-mips1"
    run_dump_test "relax-swap1-mips2"
    run_dump_test "relax-swap2"
    run_dump_test_arches "relax-swap3"	[mips_arch_list_all]
    run_list_test_arches "relax-bc1any" "-mips3d -relax-branch" \
					[mips_arch_list_matching mips64 \
					    !micromips]
    run_list_test_arches "relax-bposge" "-mdsp -relax-branch" \
					[mips_arch_list_matching mips64r2 \
					    !micromips]

    run_dump_test_arches "eva"		[mips_arch_list_matching mips32r2 !octeon]

    run_list_test "illegal" "-32"
    run_list_test "baddata1" "-32"
    run_list_test "jalr" ""

    run_dump_test "mips-gp32-fp32"
    run_dump_test "mips-gp32-fp64"
    run_dump_test "mips-gp64-fp32"
    run_dump_test "mips-gp64-fp64"

    # Make sure that -mcpu=FOO and -mFOO are equivalent.  Assemble a file
    # containing 4650-specific instructions with -m4650 and -mcpu=4650,
    # and verify that they're the same.  Specifically, we're checking
    # that the EF_MIPS_MACH field is set, and that the 4650 'mul'
    # instruction does get used.  In previous versions of GAS,
    # only -mcpu=4650 would set the EF_MIPS_MACH field; -m4650 wouldn't.
    run_dump_test "elf_e_flags1"
    run_dump_test "elf_e_flags2"
    run_dump_test "elf_e_flags3"
    run_dump_test "elf_e_flags4"

    # Check EF_MIPS_ARCH markings for each supported architecture.
    run_dump_test "elf_arch_mips1"
    run_dump_test "elf_arch_mips2"
    run_dump_test "elf_arch_mips3"
    run_dump_test "elf_arch_mips4"
    run_dump_test "elf_arch_mips5"
    run_dump_test "elf_arch_mips32"
    run_dump_test "elf_arch_mips32r2"
    run_dump_test "elf_arch_mips64"
    run_dump_test "elf_arch_mips64r2"

    # Verify that ASE markings are handled properly.
    run_dump_test "elf_ase_mips16"
    run_dump_test "elf_ase_mips16-2"

    run_dump_test "elf_ase_micromips"
    run_dump_test "elf_ase_micromips-2"

    run_dump_test "mips-gp32-fp32-pic"
    run_dump_test "mips-gp32-fp64-pic"
    run_dump_test "mips-gp64-fp32-pic"
    run_dump_test "mips-gp64-fp64-pic"

    run_dump_test "mips-abi32"
    run_dump_test "mips-abi32-pic"
    run_dump_test "mips-abi32-pic2"

    run_dump_test "elf${el}-rel"
    run_dump_test_arches "elf${el}-rel2" [mips_arch_list_matching gpr64 !singlefloat]
    run_dump_test "e32${el}-rel2"
    run_dump_test "elf${el}-rel3"
    run_dump_test_arches "elf-rel4" [mips_arch_list_matching gpr64]
    run_dump_test "e32-rel4"
    run_dump_test "elf-rel5"
    run_dump_test "elf-rel6"
    if $has_newabi {
	run_dump_test "elf-rel6-n32"
	run_dump_test "elf-rel6-n64"
    }
    run_dump_test "elf-rel7"
    run_dump_test "elf-rel8"
    run_dump_test "elf-rel8-mips16"
    run_dump_test "elf-rel9"
    run_dump_test "elf-rel9-mips16"
    if $has_newabi {
	run_dump_test "elf-rel10"
	run_dump_test "elf-rel11"
    }
    run_dump_test "elf-rel12"
    run_dump_test "elf-rel13"
    run_dump_test "elf-rel13-mips16"
    run_dump_test "elf-rel14"

    if $has_newabi {
	run_dump_test "elf-rel15"
	run_dump_test "elf-rel16"

	run_dump_test "elf-rel-got-n32"
	run_dump_test "elf-rel-xgot-n32"
	run_dump_test "elf-rel-got-n64"
	run_dump_test "elf-rel-xgot-n64"
    }
    run_dump_test "elf-rel17"
    if $has_newabi {
	run_dump_test "elf-rel18"
    }
    run_dump_test "elf-rel19"
    run_dump_test "elf-rel20"
    if $has_newabi {
	run_dump_test "elf-rel21"
	run_dump_test "elf-rel22"
	run_dump_test "elf-rel23"
	run_dump_test "elf-rel23a"
	run_dump_test "elf-rel23b"
	run_dump_test "elf-rel24"
    }

    run_dump_test "elf-rel25"
    run_dump_test "elf-rel25a"
    run_dump_test "elf-rel26"

    run_dump_test_arches "elf-rel27" [mips_arch_list_all]

    if $has_newabi {
	run_dump_test "elf-rel28-n32"
	run_dump_test "elf-rel28-n64"
	run_dump_test_arches "elf-rel29" [mips_arch_list_matching mips3]
    }
    run_list_test_arches "elf-rel30" "-32" [mips_arch_list_all]

    run_dump_test "${tmips}mips${el}16-e"
    run_dump_test "${tmips}mips${el}16-f"

    run_dump_test "elf-consthilo"
    run_dump_test "expr1"

    run_list_test "tls-ill" "-32"
    run_dump_test "tls-o32"
    run_dump_test "tls-relw"
    run_dump_test "jalr2"
    run_dump_test_arches "jalr3"	[mips_arch_list_matching mips1 \
					!micromips]
    if $has_newabi {
	run_dump_test_arches "jalr3-n32" \
				    [mips_arch_list_matching mips3 \
					!micromips]
	run_dump_test_arches "jalr3-n64" \
				    [mips_arch_list_matching mips3 \
					!micromips]
    }

    run_dump_test_arches "aent"	[mips_arch_list_matching mips1]

    run_dump_test_arches "branch-misc-4"	[mips_arch_list_matching mips1]
    run_dump_test_arches "branch-misc-4-64"	[mips_arch_list_matching mips3]

    run_dump_test_arches "loc-swap"	[mips_arch_list_all]
    run_dump_test_arches "loc-swap-dis"	[mips_arch_list_all]
    run_dump_test_arches "loc-swap-2"	[mips_arch_list_all]
    run_dump_test_arches "loc-swap-3"	[mips_arch_list_all]

    run_dump_test "nan-legacy-1"
    run_dump_test "nan-legacy-2"
    run_dump_test "nan-legacy-3"
    run_dump_test "nan-legacy-4"
    run_dump_test "nan-legacy-5"

    run_dump_test "nan-2008-1"
    run_dump_test "nan-2008-2"
    run_dump_test "nan-2008-3"
    run_dump_test "nan-2008-4"

    run_list_test "nan-error-1"
    run_list_test "nan-error-2" "-mnan=foo"

    if $has_newabi {
	run_dump_test "n32-consec"
    }

    # tests of objdump's ability to disassemble using different
    # register names.
    run_dump_test "gpr-names-numeric"
    run_dump_test "gpr-names-32"
    run_dump_test "gpr-names-n32"
    run_dump_test "gpr-names-64"

    run_dump_test "fpr-names-numeric"
    run_dump_test "fpr-names-32"
    run_dump_test "fpr-names-n32"
    run_dump_test "fpr-names-64"

    run_dump_test "cp0-names-numeric"
    run_dump_test "cp0-names-r3000"
    run_dump_test "cp0-names-r4000" \
		  { { {name} {(r4000)} } { {objdump} {-M cp0-names=r4000} } }
    run_dump_test "cp0-names-r4000" \
		  { { {name} {(r4400)} } { {objdump} {-M cp0-names=r4400} } }
    run_dump_test "cp0-names-mips32"
    run_dump_test "cp0-names-mips32r2"
    run_dump_test "cp0-names-mips64"
    run_dump_test "cp0-names-mips64r2"
    run_dump_test "cp0-names-sb1"

    run_dump_test "cp0sel-names-numeric"
    run_dump_test "cp0sel-names-mips32"
    run_dump_test "cp0sel-names-mips32r2"
    run_dump_test "cp0sel-names-mips64"
    run_dump_test "cp0sel-names-mips64r2"
    run_dump_test "cp0sel-names-sb1"

    run_dump_test "hwr-names-numeric"
    run_dump_test "hwr-names-mips32r2"
    run_dump_test "hwr-names-mips64r2"

    run_dump_test "ldstla-32"
    run_dump_test "ldstla-32-mips3"
    run_dump_test "ldstla-32-shared"
    run_dump_test "ldstla-32-mips3-shared"
    run_list_test "ldstla-32-1" "-mabi=32" \
	"MIPS ld-st-la bad constants (ABI o32)"
    run_list_test "ldstla-32-mips3-1" "-mabi=32" \
	"MIPS ld-st-la bad constants (ABI o32, mips3)"
    run_list_test "ldstla-32-1" "-KPIC -mabi=32" \
	"MIPS ld-st-la bad constants (ABI o32, shared)"
    run_list_test "ldstla-32-mips3-1" "-KPIC -mabi=32" \
	"MIPS ld-st-la bad constants (ABI o32, mips3, shared)"
    run_dump_test "ldstla-eabi64"
    if $has_newabi {
	run_dump_test "ldstla-n64"
	run_dump_test "ldstla-n64-shared"
	run_dump_test "ldstla-n64-sym32"
    }

    run_dump_test "macro-warn-1"
    run_dump_test "macro-warn-2"
    run_dump_test "macro-warn-3"
    run_dump_test "macro-warn-4"
    if $has_newabi {
	run_dump_test "macro-warn-1-n32"
	run_dump_test "macro-warn-2-n32"
    }

    run_dump_test "noat-1"
    run_list_test "noat-2" ""
    run_list_test "noat-3" ""
    run_list_test "noat-4" ""
    run_list_test "noat-5" ""
    run_list_test "noat-6" ""
    run_list_test "noat-7" ""

    run_dump_test "at-1"
    run_list_test "at-2" "-32 -mips1" "MIPS at-2"

    run_dump_test "loongson-2e"
    run_dump_test "loongson-2f"
    run_dump_test "loongson-2f-2"
    run_dump_test "loongson-2f-3"

    run_dump_test "loongson-3a"
    run_dump_test "loongson-3a-2"
    run_dump_test "loongson-3a-3"

    run_dump_test_arches "octeon"	[mips_arch_list_matching octeon]
    run_dump_test_arches "octeon-saa-saad" [mips_arch_list_matching octeonp]
    run_list_test_arches "octeon-ill"	[mips_arch_list_matching octeon]
    run_dump_test_arches "octeon-pref"	[mips_arch_list_matching octeon]
    run_dump_test_arches "octeon2"	[mips_arch_list_matching octeon2]

    run_dump_test "smartmips"
    run_dump_test_arches "mips32-dsp"	[mips_arch_list_matching mips32r2 \
					    !octeon]
    run_dump_test_arches "mips32-dspr2"	[mips_arch_list_matching mips32r2 \
					    !octeon]
    run_dump_test "mips64-dsp"
    run_dump_test "mips32-mt"

    run_dump_test "mips16-dwarf2"
    if $has_newabi {
	run_dump_test "mips16-dwarf2-n32"
    }
    run_dump_test "mips16-stabs"

    run_dump_test "mips16e-jrc"
    run_dump_test "mips16e-save"
    run_list_test "mips16e-save-err" "-march=mips32 -32"
    run_dump_test "mips16e-64"
    run_list_test "mips16e-64" "-march=mips32 -32"
    run_dump_test "mips16-intermix"

    run_dump_test "vxworks1"
    run_dump_test "vxworks1-xgot"
    run_dump_test "vxworks1-el"
    run_dump_test "vxworks1-xgot-el"

    run_dump_test "noreorder"
    run_dump_test "align"
    run_dump_test "align2"
    run_dump_test "align2-el"
    run_dump_test "align3"
    run_dump_test "odd-float"
    run_dump_test "ehword"

    run_list_test_arches "mips-macro-ill-sfp" "-32 -msingle-float" \
					[mips_arch_list_matching mips2]
    run_list_test_arches "mips-macro-ill-nofp" "-32 -msoft-float" \
					[mips_arch_list_matching mips2]

    run_list_test_arches "mips-hard-float-flag" \
	"-32 -msoft-float -mhard-float" \
	[mips_arch_list_matching mips1 !singlefloat]
    run_list_test_arches "mips-double-float-flag" \
	"-32 -msingle-float -mdouble-float" \
	[mips_arch_list_matching mips1 !singlefloat]

    run_dump_test "mips16-vis-1"
    run_dump_test "call-nonpic-1"
    run_dump_test "mips32-sync"
    run_dump_test_arches "mips32r2-sync" \
					[mips_arch_list_matching mips32r2]
    run_dump_test_arches "alnv_ps-swap" [mips_arch_list_matching fpisa5]
    run_dump_test_arches "cache" [lsort -dictionary -unique [concat \
					[mips_arch_list_matching mips3] \
					[mips_arch_list_matching mips32] ] ]
    run_dump_test_arches "daddi"	[mips_arch_list_matching mips3]
    run_dump_test_arches "pref" [lsort -dictionary -unique [concat \
					[mips_arch_list_matching mips4] \
					[mips_arch_list_matching mips32] ] ]

    if $has_newabi { run_dump_test "cfi-n64-1" }

    run_dump_test "pr12915"
    run_dump_test "reginfo-1a"
    run_dump_test "reginfo-1b"

    run_dump_test "micromips"
    run_dump_test "micromips-trap"
    run_dump_test "micromips-insn32"
    run_dump_test "micromips-noinsn32"
    run_list_test "micromips" "-mips32r2 -32 -mfp64 -minsn32" \
	"microMIPS for MIPS32r2 (instructions invalid in insn32 mode)"
    run_list_test "micromips-size-0" \
	"-32 -march=mips64 -mmicromips" "microMIPS instruction size 0"
    run_dump_test "micromips-size-1"
    run_dump_test "micromips-branch-relax"
    run_dump_test "micromips-branch-relax-pic"
    run_dump_test "micromips-branch-delay"
    run_dump_test "micromips-warn-branch-delay"
    run_dump_test "micromips-warn-branch-delay-1"
    run_dump_test "micromips-b16"
    run_list_test "micromips-ill"

    run_dump_test_arches "mcu"		[mips_arch_list_matching mips32r2 \
					    !octeon]
    run_dump_test_arches "hilo-diff-eb"	[mips_arch_list_all]
    run_dump_test_arches "hilo-diff-el"	[mips_arch_list_all]
    if $has_newabi {
	run_dump_test_arches "hilo-diff-eb-n32" [mips_arch_list_matching mips3]
	run_dump_test_arches "hilo-diff-el-n32" [mips_arch_list_matching mips3]
	run_dump_test_arches "hilo-diff-eb-n64" [mips_arch_list_matching mips3]
	run_dump_test_arches "hilo-diff-el-n64" [mips_arch_list_matching mips3]
    }
    run_dump_test_arches "lui"		[mips_arch_list_matching mips1]
    run_list_test_arches "lui-1" "-32"	[mips_arch_list_matching mips1]
    run_list_test_arches "lui-2" "-32"	[mips_arch_list_matching mips1]

    run_dump_test "r5900"
    run_dump_test "r5900-full"
    run_list_test "r5900-nollsc" "-mabi=o64 -march=r5900"
    run_dump_test "r5900-vu0"
    run_dump_test "r5900-full-vu0"
    run_dump_test "r5900-all-vu0"
    run_list_test "r5900-error-vu0" "-march=r5900"

    run_list_test_arches "ext-ill"	[mips_arch_list_matching mips64r2]

    run_list_test "ase-errors-1" "-mabi=32 -march=mips1" "ASE errors (1)"
    run_list_test "ase-errors-2" "-mabi=o64 -march=mips3" "ASE errors (2)"
    run_list_test "ase-errors-3" "-mabi=32 -march=mips1" "ASE errors (3)"
    run_list_test "ase-errors-4" "-mabi=o64 -march=mips3" "ASE errors (4)"

    run_dump_test_arches "la-reloc"	[mips_arch_list_matching mips1]
    if { $has_newabi } {
	run_dump_test_arches "dla-reloc" [mips_arch_list_matching mips3]
    }

    # Start with MIPS II to avoid load delay nops.
    run_dump_test_arches "ld-reloc"	[mips_arch_list_matching mips2]
    run_dump_test_arches "ulw-reloc"	[mips_arch_list_matching mips2]
    run_dump_test_arches "ulh-reloc"	[mips_arch_list_matching mips2]

    run_dump_test "l_d-reloc"
    run_list_test "bltzal"

    run_dump_test_arches "msa"		[mips_arch_list_matching mips32r2]
    run_dump_test_arches "msa64"	[mips_arch_list_matching mips64r2]
    run_dump_test_arches "msa-relax"	[mips_arch_list_matching mips32r2]
    run_dump_test_arches "msa-branch"	[mips_arch_list_matching mips32r2]
}
@


1.235
log
@2013-10-14  Chao-ying Fu  <Chao-ying.Fu@@imgtec.com>

	* gas/mips/micromips@@msa-relax.d, gas/mips/micromips@@msa.d,
	gas/mips/micromips@@msa64.d, gas/mips/msa-relax.d,
	gas/mips/msa-relax.l, gas/mips/msa-relax.s,
	gas/mips/msa.d, gas/mips/msa.s, gas/mips/msa64.d,
	gas/mips/msa64.s: New.
	* gas/mips/mips.exp: Run new tests.
@
text
@d1154 1
@


1.234
log
@2013-09-12  Chao-ying Fu  <Chao-ying.Fu@@imgtec.com>

	* gas/mips/bltzal.s: New file.
	* gas/mips/bltzal.l: New file.
	* gas/mips/mips.exp: Run the bltzal test.
@
text
@d1150 4
@


1.233
log
@gas/
	* config/tc-mips.c (mips_arg_info): Remove soft_match.
	(match_out_of_range, match_not_constant): New functions.
	(match_const_int): Remove fallback parameter and check for soft_match.
	Use match_not_constant.
	(match_mapped_int_operand, match_addiusp_operand)
	(match_perf_reg_operand, match_save_restore_list_operand)
	(match_mdmx_imm_reg_operand): Update accordingly.  Use
	match_out_of_range and set_insn_error* instead of as_bad.
	(match_int_operand): Likewise.  Use match_not_constant in the
	!allows_nonconst case.
	(match_float_constant): Report invalid float constants.
	(match_insn, match_mips16_insn): Remove soft_match code.  Rely on
	match_float_constant to check for invalid constants.  Fail the
	match if match_const_int or match_float_constant return false.
	(mips_ip): Update accordingly.
	(mips16_ip): Likewise.  Undo null termination of instruction name
	once lookup is complete.

gas/testsuite/
	* gas/mips/ext-ill.l, gas/mips/lui-1.l, gas/mips/mips16e-64.l,
	gas/mips/mips32r2-ill-fp64.l, gas/mips/mips32r2-ill-nofp.l,
	gas/mips/mips32r2-ill.l, gas/mips/mips64r2-ill.l,
	gas/mips/octeon-ill.l, gas/mips/r5900-error-vu0.l,
	gas/mips/vr5400-ill.l: Adjust expected errors.
	* gas/mips/micromips-size-0.l,
	gas/mips/micromips-size-0.s: Likewise.  Add new tests.
	* gas/mips/mips16e-save-err.s, gas/mips/mips16e-save-err.l: New test.
	* gas/mips/mips.exp: Run it.
@
text
@d1149 1
@


1.232
log
@include/opcode/
2013-08-04  Jürgen Urban  <JuergenUrban@@gmx.de>
	    Richard Sandiford  <rdsandiford@@googlemail.com>

	* mips.h: Document new VU0 operand characters.
	(OP_VU0_SUFFIX, OP_VU0_MATCH_SUFFIX): New mips_operand_types.
	(OP_REG_VF, OP_REG_VI, OP_REG_R5900_I, OP_REG_R5900_Q, OP_REG_R5900_R)
	(OP_REG_R5900_ACC): New mips_reg_operand_types.
	(INSN2_VU0_CHANNEL_SUFFIX): New macro.
	(mips_vu0_channel_mask): Declare.

opcodes/
2013-08-04  Jürgen Urban  <JuergenUrban@@gmx.de>
	    Richard Sandiford  <rdsandiford@@googlemail.com>

	* mips-dis.c (print_reg): Handle OP_REG_VI, OP_REG_VF, OP_REG_R5900_I,
	OP_REG_R5900_Q, OP_REG_R5900_R and OP_REG_R5900_ACC.
	(print_vu0_channel): New function.
	(print_insn_arg): Handle OP_VU0_SUFFIX and OP_VU0_MATCH_SUFFIX.
	(print_insn_args): Handle '#'.
	(print_insn_mips): Handle INSN2_VU0_CHANNEL_SUFFIX.
	* mips-opc.c (mips_vu0_channel_mask): New constant.
	(decode_mips_operand): Handle new VU0 operand types.
	(VU0, VU0CH): New macros.
	(mips_builtin_opcodes): Add VU0 opcodes.  Use "+7" rather than "E"
	for LQC2 and SQC2.  Use "+9" rather than "G" for EE CFC2 and CTC2.
	Use "+6" rather than "G" for QMFC2 and QMTC2.

gas/
2013-08-04  Jürgen Urban  <JuergenUrban@@gmx.de>
	    Richard Sandiford  <rdsandiford@@googlemail.com>

	* config/tc-mips.c (MAX_OPERANDS): Bump to 6.
	(RWARN): Bump to 0x8000000.
	(RTYPE_VI, RTYPE_VF, RTYPE_R5900_I, RTYPE_R5900_Q, RTYPE_R5900_R)
	(RTYPE_R5900_ACC): New register types.
	(RTYPE_MASK): Include them.
	(R5900_I_NAMES, R5900_Q_NAMES, R5900_R_NAMES, R5900_ACC_NAMES): New
	macros.
	(reg_names): Include them.
	(mips_parse_register_1): New function, split out from...
	(mips_parse_register): ...here.  Add a channels_ptr parameter.
	Look for VU0 channel suffixes when nonnull.
	(reg_lookup): Update the call to mips_parse_register.
	(mips_parse_vu0_channels): New function.
	(OT_CHANNELS, OT_DOUBLE_CHAR): New mips_operand_token_types.
	(mips_operand_token): Add a "channels" field to the union.
	Extend the comment above "ch" to OT_DOUBLE_CHAR.
	(mips_parse_base_start): Match -- and ++.  Handle channel suffixes.
	(mips_parse_argument_token): Handle channel suffixes here too.
	(validate_mips_insn): Handle INSN2_VU0_CHANNEL_SUFFIX.
	Ignore OP_VU0_MATCH_SUFFIX when calculating the used bits.
	Handle '#' formats.
	(md_begin): Register $vfN and $vfI registers.
	(operand_reg_mask): Handle OP_VU0_SUFFIX and OP_VU0_MATCH_SUFFIX.
	(convert_reg_type): Handle OP_REG_VI, OP_REG_VF, OP_REG_R5900_I,
	OP_REG_R5900_Q, OP_REG_R5900_R and OP_REG_R5900_ACC.
	(match_vu0_suffix_operand): New function.
	(match_operand): Handle OP_VU0_SUFFIX and OP_VU0_MATCH_SUFFIX.
	(macro): Use "+7" rather than "E" for LDQ2 and STQ2.
	(mips_lookup_insn): New function.
	(mips_ip): Use it.  Allow "+K" operands to be elided at the end
	of an instruction.  Handle '#' sequences.

gas/testsuite/
2013-08-04  Jürgen Urban  <JuergenUrban@@gmx.de>

	* gas/mips/r5900-vu0.d: Expect $vfN and $viN instead of numeric
	coprocessor registers.
	* gas/mips/r5900-all-vu0.s, gas/mips/r5900-all-vu0.d,
	gas/mips/r5900-full-vu0.s, gas/mips/r5900-full-vu0.d,
	gas/mips/r5900-error-vu0.s, gas/mips/r5900-error-vu0.l: New tests.
	* gas/mips/mips.exp: Run them.
@
text
@d1042 1
@


1.231
log
@gas/
	* config/tc-mips.c (mips16_macro): Don't use move_register.
	(mips16_ip): Allow macros to use 'p'.

gas/testsuite/
	* gas/mips/mips16-macro.s, gas/mips/mips16-macro.d: New test.
	* gas/mips/mips.exp: Run it.
@
text
@d1126 3
@


1.230
log
@gas/
	* config/tc-mips.c (mips_prefer_vec_regno, mips_parse_register):
	New functions, split out from...
	(reg_lookup): ...here.  Remove itbl support.
	(reglist_lookup): Delete.
	(mips_operand_token_type): New enum.
	(mips_operand_token): New structure.
	(mips_operand_tokens): New variable.
	(mips_add_token, mips_parse_base_start, mips_parse_argument_token)
	(mips_parse_arguments): New functions.
	(md_begin): Initialize mips_operand_tokens.
	(mips_arg_info): Add a token field.  Remove optional_reg field.
	(match_char, match_expression): New functions.
	(match_const_int): Use match_expression.  Remove "s" argument
	and return a boolean result.  Remove O_register handling.
	(match_regno, match_reg, match_reg_range): New functions.
	(match_int_operand, match_mapped_int_operand, match_msb_operand)
	(match_reg_operand, match_reg_pair_operand, match_perf_reg_operand)
	(match_addiusp_operand, match_clo_clz_dest_operand)
	(match_lwm_swm_list_operand, match_entry_exit_operand)
	(match_save_restore_list_operand, match_mdmx_imm_reg_operand)
	(match_tied_reg_operand): Remove "s" argument and return a boolean
	result.  Match tokens rather than text.  Update calls to
	match_const_int.  Rely on match_regno to call check_regno.
	(match_pcrel_operand, match_pc_operand): Replace "s" argument with
	"arg" argument.  Return a boolean result.
	(parse_float_constant): Replace with...
	(match_float_constant): ...this new function.
	(match_operand): Remove "s" argument and return a boolean result.
	Update calls to subfunctions.
	(mips_ip, mips16_ip): Call mips_parse_arguments.  Use match routines
	rather than string-parsing routines.  Update handling of optional
	registers for token scheme.

gas/testsuite/
	* gas/mips/vr5400-ill.s, gas/mips/vr5400-ill.l: Add some more cases.
	* gas/mips/micromips-ill.s, gas/mips/micromips-ill.l: New test.
	* gas/mips/mips.exp: Run it.
@
text
@d688 1
@


1.229
log
@	include/elf/
	* mips.h (EF_MIPS_NAN2008): New macro.

	bfd/
	* elfxx-mips.c (_bfd_mips_elf_merge_private_bfd_data): Handle
	EF_MIPS_NAN2008.
	(_bfd_mips_elf_print_private_bfd_data): Likewise.

	binutils/
	* readelf.c (get_machine_flags): Handle EF_MIPS_NAN2008.

	gas/
	* config/tc-mips.c (mips_flag_nan2008): New variable.
	(options): Add OPTION_NAN enum value.
	(md_longopts): Handle it.
	(md_parse_option): Likewise.
	(s_nan): New function.
	(mips_elf_final_processing): Handle EF_MIPS_NAN2008.
	(md_show_usage): Add -mnan.

	* doc/as.texinfo (Overview): Add -mnan.
	* doc/c-mips.texi (MIPS Opts): Document -mnan.
	(MIPS NaN Encodings): New node.  Document .nan directive.
	(MIPS-Dependent): List the new node.

	gas/testsuite/
	* gas/mips/nan-2008-1.d: New test.
	* gas/mips/nan-2008-2.d: New test.
	* gas/mips/nan-2008-3.d: New test.
	* gas/mips/nan-2008-4.d: New test.
	* gas/mips/nan-legacy-1.d: New test.
	* gas/mips/nan-legacy-2.d: New test.
	* gas/mips/nan-legacy-3.d: New test.
	* gas/mips/nan-legacy-4.d: New test.
	* gas/mips/nan-legacy-5.d: New test.
	* gas/mips/nan-error-1.l: New list test.
	* gas/mips/nan-error-2.l: New list test.
	* gas/mips/nan-2008-override.s: New test source.
	* gas/mips/nan-2008.s: New test source.
	* gas/mips/nan-legacy-override.s: New test source.
	* gas/mips/nan-legacy.s: New test source.
	* gas/mips/nan-error-1.s: New test source.
	* gas/mips/nan-error-2.s: New test source.
	* gas/mips/mips.exp: Run the new tests.

	ld/testsuite/
	* ld-mips-elf/nan-2008.d: New test.
	* ld-mips-elf/nan-legacy.d: New test.
	* ld-mips-elf/nan-mixed-1.d: New test.
	* ld-mips-elf/nan-mixed-2.d: New test.
	* ld-mips-elf/nan-2008.s: New test source.
	* ld-mips-elf/nan-legacy.s: New test source.
@
text
@d1105 1
@


1.228
log
@include/opcode/
	* mips.h (M_ACLR_OB, M_ASET_OB, M_CACHE_OB, M_CACHEE_OB, M_L_DOB)
	(M_LB_A, M_LBE_OB, M_LBU_A, M_LBUE_OB, M_LD_A, M_LD_OB, M_LDC2_OB)
	(M_LDL_OB, M_LDM_OB, M_LDP_OB, M_LDR_OB, M_LH_A, M_LHE_OB, M_LHU_A)
	(M_LHUE_OB, M_LL_OB, M_LLD_OB, M_LLE_OB, M_LS_A, M_LW_A, M_LWE_OB)
	(M_LWC0_A, M_LWC1_A, M_LWC2_A, M_LWC2_OB, M_LWC3_A, M_LWL_A, M_LWL_OB)
	(M_LWLE_OB, M_LWM_OB, M_LWP_OB, M_LWR_A, M_LWR_OB, M_LWRE_OB, M_LWU_OB)
	(M_PREF_OB, M_PREFE_OB, M_S_DOB, M_SAA_OB, M_SAAD_OB, M_SC_OB)
	(M_SCD_OB, M_SCE_OB, M_SD_A, M_SD_OB, M_SDC2_OB, M_SDL_OB, M_SDM_OB)
	(M_SDP_OB, M_SDR_OB, M_SB_A, M_SBE_OB, M_SH_A, M_SHE_OB, M_SW_A)
	(M_SWE_OB, M_SWC0_A, M_SWC1_A, M_SWC2_A, M_SWC2_OB, M_SWC3_A, M_SWL_A)
	(M_SWL_OB, M_SWLE_OB, M_SWM_OB, M_SWP_OB, M_SWR_A, M_SWR_OB, M_SWRE_OB)
	(M_ULD, M_ULH, M_ULHU, M_ULW, M_USH, M_USW, M_USD): Delete.
	(M_ULD_A, M_ULH_A, M_ULHU_A, M_ULW_A, M_USH_A, M_USW_A, M_USD_A):
	Rename to...
	(M_ULD_AB, M_ULH_AB, M_ULHU_AB, M_ULW_AB, M_USH_AB, M_USW_AB)
	(M_USD_AB): ...these.

opcodes/
	* mips-opc.c (mips_builtin_opcodes): Remove o(b) macros.  Move LD
	and SD A(B) macros up.
	* micromips-opc.c (micromips_opcodes): Likewise.

gas/
	* config/tc-mips.c (gprel16_reloc_p): New function.
	(macro_read_relocs): Assume BFD_RELOC_LO16 if all relocs are
	BFD_RELOC_UNUSED.
	(offset_high_part, small_offset_p): New functions.
	(nacro): Use them.  Remove *_OB and *_DOB cases.  For single-
	register load and store macros, handle the 16-bit offset case first.
	If a 16-bit offset is not suitable for the instruction we're
	generating, load it into the temporary register using
	ADDRESS_ADDI_INSN.  Make the M_LI_DD code fall through into the
	M_L_DAB code once the address has been constructed.  For double load
	and store macros, again handle the 16-bit offset case first.
	If the second register cannot be accessed from the same high
	part as the first, load it into AT using ADDRESS_ADDI_INSN.
	Fix the handling of LD in cases where the first register is the
	same as the base.  Also handle the case where the offset is
	not 16 bits and the second register cannot be accessed from the
	same high part as the first.  For unaligned loads and stores,
	fuse the offbits == 12 and old "ab" handling.  Apply this handling
	whenever the second offset needs a different high part from the first.
	Construct the offset using ADDRESS_ADDI_INSN where possible,
	for offbits == 16 as well as offbits == 12.  Use offset_reloc
	when constructing the individual loads and stores.
	(mips_ip): Set up imm_expr, imm2_expr, offset_expr, imm_reloc
	and offset_reloc before matching against a particular opcode.
	Handle elided 'A' constants.  Allow 'A' constants to use
	relocation operators.

gas/testsuite/
	* gas/mips/ldstla-32.d: Avoid "lui at,0x0" sequences for
	truncated constants.
	* gas/mips/ldstla-32-shared.d: Likewise.
	* gas/mips/mcu.d: Use ADDIU in preference to LI+ADDU when adding
	16-bit constants to the base.
	* gas/mips/micromips@@mcu.d: Likewise.
	* gas/mips/micromips@@cache.d: Likewise.
	* gas/mips/micromips@@pref.d: Likewise.
	* gas/mips/micromips.d, gas/mips/micromips-insn32.d,
	gas/mips/micromips-noinsn32.d, gas/mips/micromips-trap.d: Likewise.
	Allow the full 16-bit offset range to be used for SB, LB and LBU in
	USH and ULH sequences.  Fix the expected output for LD and SD when
	the two LW and SW offsets need different high parts.
	* gas/mips/eva.s: Test PREFE with relocation operators.
	* gas/mips/eva.d: Use ADDIU in preference to LI+ADDU for 16-bit
	constants.  Update after eva.s change.
	* gas/mips/micromips@@eva.d: Likewise.
	* gas/mips/ld-reloc.s, gas/mips/ld-reloc.d, gas/mips/l_d-reloc.s,
	gas/mips/l_d-reloc.d, gas/mips/ulw-reloc.s, gas/mips/ulw-reloc.d,
	gas/mips/micromips@@ulw-reloc.d, gas/mips/ulh-reloc.s,
	gas/mips/ulh-reloc.d: New tests.
	* gas/mips/mips.exp: Run them.
@
text
@d918 14
@


1.227
log
@include/opcode/
	* mips.h: Remove documentation of "[" and "]".  Update documentation
	of "k" and the MDMX formats.

opcodes/
	* mips-opc.c (mips_builtin_opcodes): Use "Q" for the INSN_5400
	MDMX-like instructions.
	* mips-dis.c (print_insn_arg): Use "$f" rather than "$v" when
	printing "Q" operands for INSN_5400 instructions.

gas/
	* config/tc-mips.c (validate_mips_insn): Remove "[" and "]" handling.
	(mips_ip): Likewise.  Do not set is_mdmx for INSN_5400 instructions.
	Check constraints on the VR5400 RZU.OB, SLL.OB and SRL.OB instructions.

gas/testsuite/
	* gas/mips/vr5400-ill.s, gas/mips/vr5400-ill.l: New test.
	* gas/mips/mips.exp: Run it.
@
text
@d1117 12
@


1.226
log
@	bfd/
	* elfxx-mips.h (_bfd_mips_elf_insn32): New prototype.
	* elfxx-mips.c (mips_elf_link_hash_table): Add insn32 member.
	(STUB_MOVE32_MICROMIPS, STUB_JALR32_MICROMIPS): New macros.
	(MICROMIPS_INSN32_FUNCTION_STUB_NORMAL_SIZE): Likewise.
	(MICROMIPS_INSN32_FUNCTION_STUB_BIG_SIZE): Likewise.
	(micromips_insn32_o32_exec_plt0_entry): New variable.
	(micromips_insn32_o32_exec_plt_entry): Likewise.
	(_bfd_mips_elf_adjust_dynamic_symbol): Handle insn32 mode.
	(mips_elf_estimate_stub_size): Likewise.
	(_bfd_mips_elf_size_dynamic_sections): Likewise.
	(_bfd_mips_elf_finish_dynamic_symbol): Likewise.
	(mips_finish_exec_plt): Likewise.
	(_bfd_mips_elf_relax_section): Likewise.
	(_bfd_mips_elf_insn32): New function.
	(_bfd_mips_elf_get_synthetic_symtab): Handle insn32 PLT.

	gas/
	* config/tc-mips.c (mips_set_options): Add insn32 member.
	(mips_opts): Initialize it.
	(NOP_INSN, NOP_INSN_SIZE): Handle insn32 mode.
	(options): Add OPTION_INSN32 and OPTION_NO_INSN32 enum values.
	(md_longopts): Add "minsn32" and "mno-insn32" options.
	(is_size_valid): Handle insn32 mode.
	(md_assemble): Pass instruction string down to macro.
	(brk_fmt): Add second dimension and insn32 mode initializers.
	(mfhl_fmt): Likewise.
	(BRK_FMT, MFHL_FMT): Handle insn32 mode.
	(macro_build) <'c'>: Handle microMIPS 32-bit BREAK encoding.
	(macro_build_jalr, move_register): Handle insn32 mode.
	(macro_build_branch_rs): Likewise.
	(macro): Handle insn32 mode.
	<M_JRADDIUSP>, <M_JRC>, <M_MOVEP>: New cases.
	(mips_ip): Handle insn32 mode.
	(md_parse_option): Handle OPTION_INSN32 and OPTION_NO_INSN32.
	(s_mipsset): Handle "insn32" and "noinsn32" pseudo-ops.
	(mips_handle_align): Handle insn32 mode.
	(md_show_usage): Add -minsn32 and -mno-insn32.

	* doc/as.texinfo (Target MIPS options): Add -minsn32 and
	-mno-insn32 options.
	(-minsn32, -mno-insn32): New options.
	* doc/c-mips.texi (MIPS Opts): Add -minsn32 and -mno-insn32
	options.
	(MIPS assembly options): New node.  Document .set insn32 and
	.set noinsn32.
	(MIPS-Dependent): List the new node.

	gas/testsuite/
	* gas/mips/micromips-insn32.d: New test.
	* gas/mips/micromips-noinsn32.d: Likewise.
	* gas/mips/micromips.l: Rename to...
	* gas/mips/micromips-warn.l: ... this.
	* gas/mips/micromips.d: Update accordingly.
	* gas/mips/micromips-trap.d: Likewise.
	* gas/mips/micromips.l: New list test.
	* gas/mips/micromips.s: Add conditionals.
	* gas/mips/mips.exp: Run the new tests.

	include/opcode/
	* mips.h: Add M_JRADDIUSP, M_JRC and M_MOVEP anonymous enum
	values.

	ld/
	* emultempl/mipself.em (insn32): New variable.
	(mips_create_output_section_statements): Handle insn32 mode.
	(PARSE_AND_LIST_PROLOGUE): New macro.
	(PARSE_AND_LIST_LONGOPTS): Likewise.
	(PARSE_AND_LIST_OPTIONS): Likewise.

	* gen-doc.texi: Set MIPS.
	* ld.texinfo: Likewise.
	(Options specific to MIPS targets): New section.
	(ld and MIPS family): New node.
	(Top, Machine Dependent): List the new node.

	opcodes/
	* micromips-opc.c (micromips_opcodes): Add "jraddiusp", "jrc"
	and "movep" macros.
@
text
@d710 1
@


1.225
log
@gas/testsuite/
	* gas/mips/mips.exp: Remove "LOSE" comments.
	(run_dump_test_arch): Remove format selector support.
	(run_dump_test_arches): Remove associated upvars.
	(elf, ecoff, aout, no_mips16, no_micromips): Remove variables.
	Remove all conditions based on them, on the assumption that $elf
	is true and the others are false.  Rename "elf-jal" to "jal".
	(tmips): Set to "t" for *bsd targets.
	* gas/mips/elf-jal.d: Rename to...
	* gas/mips/jal.d: ...this, replacing the old file.
	* gas/mips/micromips@@elf-jal.d: Rename to...
	* gas/mips/micromips@@jal.d: ...this.
	* gas/mips/at-1.d, gas/mips/ld.d, gas/mips/l_d.d, gas/mips/lui.d,
	gas/mips/mips1@@l_d.d, gas/mips/mips1@@ld-forward.d, gas/mips/mips1@@ld.d,
	gas/mips/mips1@@s_d.d, gas/mips/s_d.d, gas/mips/sd.d: Remove ECOFF
	relocation names.  Do not allow any offset on the symbol.
@
text
@d1077 4
@


1.224
log
@gas/
	* config/tc-mips.c (ISA_SUPPORTS_SMARTMIPS, ISA_SUPPORTS_DSP_ASE)
	(ISA_SUPPORTS_DSP64_ASE, ISA_SUPPORTS_DSPR2_ASE, ISA_SUPPORTS_EVA_ASE)
	(ISA_SUPPORTS_MT_ASE, ISA_SUPPORTS_MCU_ASE, ISA_SUPPORTS_VIRT_ASE)
	(ISA_SUPPORTS_VIRT64_ASE): Delete.
	(mips_ase): New structure.
	(mips_ases): New table.
	(FP64_ASES): New macro.
	(mips_ase_groups): New array.
	(mips_isa_rev, mips_ase_mask, mips_check_isa_supports_ase)
	(mips_check_isa_supports_ases, mips_set_ase, mips_lookup_ase): New
	functions.
	(is_opcode_valid): Use mips_ases to get the 64-bit ASE flags.
	(md_parse_option): Use mips_ases and mips_set_ase instead of
	separate case statements for each ASE option.
	(mips_after_parse_args): Use FP64_ASES.  Use
	mips_check_isa_supports_ases to check the ASEs against
	other options.
	(s_mipsset): Use mips_ases and mips_set_ase instead of
	separate if statements for each ASE option.  Use
	mips_check_isa_supports_ases, even when a non-ASE option
	is specified.

gas/testsuite/
	* gas/mips/ase-errors-1.s, gas/mips/ase-errors-1.l,
	gas/mips/ase-errors-2.s, gas/mips/ase-errors-2.l,
	gas/mips/ase-errors-3.s, gas/mips/ase-errors-3.l,
	gas/mips/ase-errors-4.s, gas/mips/ase-errors-4.l: New tests.
	* gas/mips/mips.exp: Run them.
@
text
@a43 7
# "LOSE" marks information about tests which fail at a particular point
# in time, but which are not XFAILed.  Either they used to pass
# and indicate either regressions or the need to tweak the tests to keep
# up the with code, or they are new tests and it is unknown whether or not
# they should pass as-is for the given object formats.


d311 2
a312 2
# You can override the expected output for particular architectures
# and file formats.  The possible test names are, in order of preference:
d314 2
a315 4
# 1. CARCH@@FORMAT@@NAME.d
# 2. CARCH@@NAME.d
# 3. FORMAT@@NAME.d
# 4. NAME.d
d318 1
a318 2
# in its associated property list, and where FORMAT is the target's
# file format (one of "elf", "ecoff" or "aout").
a319 1
    upvar elf elf ecoff ecoff aout aout
a321 1
    set format [expr { $elf ? "elf" : $ecoff ? "ecoff" : "aout" }]
d323 1
a323 1
    set prefixes [list ${proparch}@@${format}@@ ${proparch}@@ ]
d325 1
a325 2
      lappend prefixes octeon@@
      lappend prefixes octeon@@${format}@@
a326 1
    lappend prefixes ${format}@@
a349 1
    upvar elf elf ecoff ecoff aout aout
d468 1
a468 4
    set elf [expr [istarget *-*-elf*] || [istarget *-*-irix5*] || [istarget *-*-irix6* ] || [istarget *-*-linux*] || [istarget *-*-netbsd*] ]
    set ecoff [expr [istarget *-*-ecoff*] || [istarget *-*-ultrix*] || [istarget *-*-irix\[1-4\]*] ]
    set aout [expr [istarget *-*-bsd*] || [istarget *-*-openbsd*] ]
    set addr32 [expr [istarget mipstx39*-*-*] || [istarget mips-*-linux*] || [istarget mipsel-*-linux*] || [istarget mips*-*-ecoff]]
a469 2
    set no_mips16 [expr !$elf]
    set no_micromips [expr !$elf]
d471 3
a473 1
    if { [istarget "mips*-*-*linux*"] || [istarget "mips*-sde-elf*"] } then {
a482 6
    if { $no_mips16 } {
	mips_arch_destroy mips16
    }
    if { $no_micromips } {
	mips_arch_destroy micromips
    }
a493 4
    # LOSE: As of 2002-02-08, "beq" through "bltu" fail for target mips-ecoff.
    # See http://sources.redhat.com/ml/binutils/2001-10/msg00418.html for
    # more information.  Not sure if the fixes there are correct; should
    # branches to external labels be allowed for ECOFF?
d508 9
a516 11
    if $elf {
	# Sweep a range of branch offsets so that it hits a position where
	# it is at the beginning of a frag and then swapped with a 16-bit
	# instruction from the preceding frag.  The offset will be somewhere
	# close below 4096 as this is the default obstack size limit that
	# we use and some space will have been already consumed.  The exact
	# amount depends on the host's programming model.
	for { set count 960 } { $count <= 1024 } { incr count } {
	    run_list_test "branch-swap-2" "--defsym count=$count" \
		"MIPS branch swapping ($count)"
	}
d522 1
a522 6
	run_dump_test_arches "dli"		[mips_arch_list_matching mips3]
    }
    if $elf {
	run_dump_test_arches "elf-jal"	[mips_arch_list_matching mips1]
    } else {
	run_dump_test "jal"
d524 1
d556 1
a556 2
    if $elf {
	run_dump_test_arches "24k-triple-stores-11" \
a557 1
    }
d559 2
a560 2
    if $elf {
	run_dump_test_arches "jal-svr4pic" \
d562 1
a562 4
	run_dump_test_arches "jal-svr4pic-noreorder" \
					[mips_arch_list_matching mips1]
    }
    if $elf { run_dump_test "jal-xgot" }
d565 9
a573 12
    if !$aout { run_dump_test "la" }
    if $elf { run_dump_test "la-svr4pic" }
    if $elf { run_dump_test "la-xgot" }
    if $elf { run_dump_test "lca-svr4pic" }
    if $elf { run_dump_test "lca-xgot" }
    if !$aout {
	# XXX FIXME: Has mips2 and later insns with mips1 disassemblies.
	# (Should split and then use appropriate arch lists.)
	run_dump_test_arches "lb"	[mips_arch_list_matching mips1 !mips2]
    }
    if $elf {
	run_dump_test_arches "lb-svr4pic" \
d575 22
a596 35
	run_dump_test_arches "lb-svr4pic-ilocks" [mips_arch_list_matching gpr_ilocks]
    }
    if $elf {
	# Both versions specify the cpu, so we can run both regardless of
	# the interlocking in the configured default cpu.
	run_dump_test "lb-xgot"
	run_dump_test "lb-xgot-ilocks"
    }
    if !$aout {
	run_dump_test_arches "ld"	[mips_arch_list_matching mips1]
	run_dump_test_arches "ld-forward" \
					[mips_arch_list_matching mips1]
	run_dump_test_arches "sd"	[mips_arch_list_matching mips1]
	run_dump_test_arches "sd-forward" \
					[mips_arch_list_matching mips1]
	run_dump_test_arches "l_d"	[mips_arch_list_matching mips1 !singlefloat]
	if $elf {
	    run_dump_test_arches "l_d-single"	[mips_arch_list_matching mips1 singlefloat]
	}
	run_dump_test_arches "l_d-forward" \
					[mips_arch_list_matching mips1 !singlefloat]
	run_dump_test_arches "s_d"	[mips_arch_list_matching mips1 !singlefloat]
	if $elf {
	    run_dump_test_arches "s_d-single"	[mips_arch_list_matching mips1 singlefloat]
	}
	run_dump_test_arches "s_d-forward" \
					[mips_arch_list_matching mips1 !singlefloat]
	run_dump_test_arches "ldc1"	[mips_arch_list_matching mips2 !singlefloat]
	run_dump_test_arches "ldc1-forward" \
					[mips_arch_list_matching mips2 !singlefloat]
	run_dump_test_arches "sdc1"	[mips_arch_list_matching mips2 !singlefloat]
	run_dump_test_arches "sdc1-forward" \
					[mips_arch_list_matching mips2 !singlefloat]
	if $has_newabi {
	    run_dump_test_arches "ld-n32" \
d598 2
a599 1
	    run_dump_test_arches "ld-forward-n32" \
d601 2
a602 11
	    run_dump_test_arches "sd-n32" \
					[mips_arch_list_matching mips3]
	    run_dump_test_arches "sd-forward-n32" \
					[mips_arch_list_matching mips3]
	    run_dump_test_arches "l_d-n32" \
					[mips_arch_list_matching mips3 !singlefloat]
	    run_dump_test_arches "l_d-forward-n32" \
					[mips_arch_list_matching mips3 !singlefloat]
	    run_dump_test_arches "s_d-n32" \
					[mips_arch_list_matching mips3 !singlefloat]
	    run_dump_test_arches "s_d-forward-n32" \
d604 2
a605 1
	    run_dump_test_arches "ldc1-n32" \
d607 2
a608 1
	    run_dump_test_arches "ldc1-forward-n32" \
d610 2
a611 1
	    run_dump_test_arches "sdc1-n32" \
d613 2
a614 5
	    run_dump_test_arches "sdc1-forward-n32" \
					[mips_arch_list_matching mips3 !singlefloat]
	    run_dump_test_arches "ld-n64" \
					[mips_arch_list_matching mips3]
	    run_dump_test_arches "ld-forward-n64" \
d616 2
a617 1
	    run_dump_test_arches "sd-n64" \
d619 2
a620 5
	    run_dump_test_arches "sd-forward-n64" \
					[mips_arch_list_matching mips3]
	    run_dump_test_arches "l_d-n64" \
					[mips_arch_list_matching mips3 !singlefloat]
	    run_dump_test_arches "l_d-forward-n64" \
d622 2
a623 1
	    run_dump_test_arches "s_d-n64" \
d625 2
a626 1
	    run_dump_test_arches "s_d-forward-n64" \
d628 2
a629 1
	    run_dump_test_arches "ldc1-n64" \
a630 7
	    run_dump_test_arches "ldc1-forward-n64" \
					[mips_arch_list_matching mips3 !singlefloat]
	    run_dump_test_arches "sdc1-n64" \
					[mips_arch_list_matching mips3 !singlefloat]
	    run_dump_test_arches "sdc1-forward-n64" \
					[mips_arch_list_matching mips3 !singlefloat]
	}
d637 2
a638 2
    if $elf { run_dump_test "ld-svr4pic" }
    if $elf { run_dump_test "ld-xgot" }
d640 3
a642 3
    if !$aout { run_dump_test "lifloat" }
    if $elf { run_dump_test "lif-svr4pic" }
    if $elf { run_dump_test "lif-xgot" }
d666 1
a666 1
    if !$aout { run_dump_test "sb" }
d668 1
a668 1
    if !$aout { run_dump_test "ulh" }
d671 8
a678 11
    if $elf { run_dump_test "ulh-svr4pic" }
    if $elf { run_dump_test "ulh-xgot" }
    if !$aout {
	run_dump_test "ulw"
	run_dump_test "uld"
	run_dump_test "ush"
	run_dump_test "usw"
	run_dump_test "usd"
    }
    run_dump_test_arches "ulw2-eb" \
				[mips_arch_list_matching mips1 !gpr_ilocks]
d680 1
a680 2
    run_dump_test_arches "ulw2-el" \
				[mips_arch_list_matching mips1 !gpr_ilocks]
d686 12
a697 18
    # The mips16 test can only be run on ELF, because only ELF
    # supports the necessary mips16 reloc.
    if { $elf && !$no_mips16 } {
	run_dump_test "mips16"
	run_dump_test "mips16-64"
	# Check MIPS16e extensions
	run_dump_test_arches "mips16e" \
				[mips_arch_list_matching mips32 !micromips]
	# Check jalx handling
	run_dump_test "mips16-jalx"
	run_dump_test "mips-jalx"
	run_dump_test "mips-jalx-2"
	# Check MIPS16 HI16/LO16 relocations
	run_dump_test "mips16-hilo"
	if $has_newabi {
	    run_dump_test "mips16-hilo-n32"
	}
	run_dump_test "mips16-hilo-match"
d699 1
d716 1
a716 1
    run_dump_test_arches "virt"	[mips_arch_list_matching mips32r2]
a779 3
    # LOSE: As of 2002-02-08, the next 4 tests fail for target mips-ecoff.
    # It's unknown whether they _should_ pass as-is, or whether different
    # variants are needed for ELF and ECOFF.
d785 63
a847 32
    if $elf {
	# Make sure that -mcpu=FOO and -mFOO are equivalent.  Assemble a file
	# containing 4650-specific instructions with -m4650 and -mcpu=4650,
	# and verify that they're the same.  Specifically, we're checking
	# that the EF_MIPS_MACH field is set, and that the 4650 'mul'
	# instruction does get used.  In previous versions of GAS,
	# only -mcpu=4650 would set the EF_MIPS_MACH field; -m4650 wouldn't.
	run_dump_test "elf_e_flags1"
	run_dump_test "elf_e_flags2"
	run_dump_test "elf_e_flags3"
	run_dump_test "elf_e_flags4"

	# Check EF_MIPS_ARCH markings for each supported architecture.
	run_dump_test "elf_arch_mips1"
	run_dump_test "elf_arch_mips2"
	run_dump_test "elf_arch_mips3"
	run_dump_test "elf_arch_mips4"
	run_dump_test "elf_arch_mips5"
	run_dump_test "elf_arch_mips32"
	run_dump_test "elf_arch_mips32r2"
	run_dump_test "elf_arch_mips64"
	run_dump_test "elf_arch_mips64r2"

	# Verify that ASE markings are handled properly.
	if { !$no_mips16 } {
	    run_dump_test "elf_ase_mips16"
	    run_dump_test "elf_ase_mips16-2"
	}
	if { !$no_micromips } {
	    run_dump_test "elf_ase_micromips"
	    run_dump_test "elf_ase_micromips-2"
	}
d849 3
a851 58
 	run_dump_test "mips-gp32-fp32-pic"
 	run_dump_test "mips-gp32-fp64-pic"
 	run_dump_test "mips-gp64-fp32-pic"
 	run_dump_test "mips-gp64-fp64-pic"

  	run_dump_test "mips-abi32"
  	run_dump_test "mips-abi32-pic"
  	run_dump_test "mips-abi32-pic2"

	run_dump_test "elf${el}-rel"
	run_dump_test_arches "elf${el}-rel2" [mips_arch_list_matching gpr64 !singlefloat]
	run_dump_test "e32${el}-rel2"
	run_dump_test "elf${el}-rel3"
	run_dump_test_arches "elf-rel4" [mips_arch_list_matching gpr64]
	run_dump_test "e32-rel4"
	run_dump_test "elf-rel5"
	run_dump_test "elf-rel6"
	if $has_newabi {
	    run_dump_test "elf-rel6-n32"
	    run_dump_test "elf-rel6-n64"
	}
	run_dump_test "elf-rel7"
	run_dump_test "elf-rel8"
	run_dump_test "elf-rel8-mips16"
	run_dump_test "elf-rel9"
	run_dump_test "elf-rel9-mips16"
	if $has_newabi {
	    run_dump_test "elf-rel10"
	    run_dump_test "elf-rel11"
	}
	run_dump_test "elf-rel12"
	run_dump_test "elf-rel13"
	run_dump_test "elf-rel13-mips16"
	run_dump_test "elf-rel14"

	if $has_newabi {
	    run_dump_test "elf-rel15"
	    run_dump_test "elf-rel16"

	    run_dump_test "elf-rel-got-n32"
	    run_dump_test "elf-rel-xgot-n32"
	    run_dump_test "elf-rel-got-n64"
	    run_dump_test "elf-rel-xgot-n64"
	}
	run_dump_test "elf-rel17"
	if $has_newabi {
	    run_dump_test "elf-rel18"
	}
	run_dump_test "elf-rel19"
	run_dump_test "elf-rel20"
	if $has_newabi {
	    run_dump_test "elf-rel21"
	    run_dump_test "elf-rel22"
	    run_dump_test "elf-rel23"
	    run_dump_test "elf-rel23a"
	    run_dump_test "elf-rel23b"
	    run_dump_test "elf-rel24"
	}
d853 19
a871 12
	run_dump_test "elf-rel25"
	run_dump_test "elf-rel25a"
	run_dump_test "elf-rel26"

	run_dump_test_arches "elf-rel27" [mips_arch_list_all]

	if $has_newabi {
	    run_dump_test "elf-rel28-n32"
	    run_dump_test "elf-rel28-n64"
	    run_dump_test_arches "elf-rel29" [mips_arch_list_matching mips3]
	}
	run_list_test_arches "elf-rel30" "-32" [mips_arch_list_all]
d873 3
a875 6
	if { !$no_mips16 } {
	    run_dump_test "${tmips}mips${el}16-e"
	    run_dump_test "${tmips}mips${el}16-f"
	}
	run_dump_test "elf-consthilo"
	run_dump_test "expr1"
d877 1
a877 14
	run_list_test "tls-ill" "-32"
	run_dump_test "tls-o32"
	run_dump_test "tls-relw"
	run_dump_test "jalr2"
	run_dump_test_arches "jalr3"	[mips_arch_list_matching mips1 \
					    !micromips]
	if $has_newabi {
	    run_dump_test_arches "jalr3-n32" \
					[mips_arch_list_matching mips3 \
					    !micromips]
	    run_dump_test_arches "jalr3-n64" \
					[mips_arch_list_matching mips3 \
					    !micromips]
	}
d879 37
a915 13
	run_dump_test_arches "aent"	[mips_arch_list_matching mips1]

	run_dump_test_arches "branch-misc-4" \
					[mips_arch_list_matching mips1]
	run_dump_test_arches "branch-misc-4-64" \
					[mips_arch_list_matching mips3]

	run_dump_test_arches "loc-swap"	[mips_arch_list_all]
	run_dump_test_arches "loc-swap-dis" \
					[mips_arch_list_all]
	run_dump_test_arches "loc-swap-2" [mips_arch_list_all]
	run_dump_test_arches "loc-swap-3" [mips_arch_list_all]
    }
d1018 3
a1020 13
    if { $elf && !$no_mips16 } {
	run_dump_test "mips16-dwarf2"
	if $has_newabi {
	    run_dump_test "mips16-dwarf2-n32"
	}
	run_dump_test "mips16-stabs"
    }
    if { !$no_mips16 } { 
        run_dump_test "mips16e-jrc"
        run_dump_test "mips16e-save"
        run_dump_test "mips16e-64"
        run_list_test "mips16e-64" "-march=mips32 -32"
        run_dump_test "mips16-intermix"
d1022 8
d1050 1
a1050 1
					[mips_arch_list_matching mips1 !singlefloat]
d1053 1
a1053 1
					[mips_arch_list_matching mips1 !singlefloat]
d1075 11
a1085 13
    if { !$no_micromips } {
	run_dump_test "micromips"
	run_dump_test "micromips-trap"
	run_list_test "micromips-size-0" \
	    "-32 -march=mips64 -mmicromips" "microMIPS instruction size 0"
	run_dump_test "micromips-size-1"
	run_dump_test "micromips-branch-relax"
	run_dump_test "micromips-branch-relax-pic"
	run_dump_test "micromips-branch-delay"
	run_dump_test "micromips-warn-branch-delay"
	run_dump_test "micromips-warn-branch-delay-1"
	run_dump_test "micromips-b16"
    }
d1103 1
a1103 1
    if $elf { run_list_test "r5900-nollsc" "-mabi=o64 -march=r5900" }
@


1.223
log
@2013-06-17  Catherine Moore  <clm@@codesourcery.com>
	    Maciej W. Rozycki  <macro@@codesourcery.com>
	    Chao-Ying Fu  <fu@@mips.com>

	gas/testsuite/
	* gas/mips/mips.exp: Run new tests.
	* gas/mips/eva.d: New.
	* gas/mips/eva.s: New.
	* gas/mips/micromips@@eva.d: New.

	gas/
	* config/tc-mips.c (mips_set_options): Add ase_eva.
	(mips_set_options mips_opts): Add ase_eva.
	(file_ase_eva): Declare.
	(ISA_SUPPORTS_EVA_ASE): Define.
	(IS_SEXT_9BIT_NUM): Define.
	(MIPS_CPU_ASE_EVA): Define.
	(is_opcode_valid): Add support for ase_eva.
	(macro_build): Likewise.
	(macro): Likewise.
	(validate_mips_insn): Likewise.
	(validate_micromips_insn): Likewise.
	(mips_ip): Likewise.
	(options): Add OPTION_EVA and OPTION_NO_EVA.
	(md_longopts): Add -meva and -mno-eva.
	(md_parse_option): Process new options.
	(mips_after_parse_args): Check for valid EVA combinations.
	(s_mipsset): Likewise.

	include/
	* opcode/mips.h (OP_SH_EVAOFFSET): Define.
	(OP_MASK_EVAOFFSET): Define.
	(INSN_ASE_MASK): Delete.
	(ASE_EVA): Define.
	(M_CACHEE_AB, M_CACHEE_OB): New.
	(M_LBE_OB, M_LBE_AB): New.
	(M_LBUE_OB, M_LBUE_AB): New.
	(M_LHE_OB, M_LHE_AB): New.
	(M_LHUE_OB, M_LHUE_AB): New.
	(M_LLE_AB, M_LLE_OB): New.
	(M_LWE_OB, M_LWE_AB): New.
	(M_LWLE_AB, M_LWLE_OB): New.
	(M_LWRE_AB, M_LWRE_OB): New.
	(M_PREFE_AB, M_PREFE_OB): New.
	(M_SCE_AB, M_SCE_OB): New.
	(M_SBE_OB, M_SBE_AB): New.
	(M_SHE_OB, M_SHE_AB): New.
	(M_SWE_OB, M_SWE_AB): New.
	(M_SWLE_AB, M_SWLE_OB): New.
	(M_SWRE_AB, M_SWRE_OB): New.
	(MICROMIPSOP_SH_EVAOFFSET): Define.
	(MICROMIPSOP_MASK_EVAOFFSET): Define.

	opcodes/
	* micromips-opc.c (EVA): Define.
	(TLBINV): Define.
	(micromips_opcodes): Add EVA opcodes.
	* mips-dis.c (mips_arch_choices): Update for ASE_EVA.
	(print_insn_args): Handle EVA offsets.
	(print_insn_micromips): Likewise.
	* mips-opc.c (EVA): Define.
	(TLBINV): Define.
	(mips_builtin_opcodes): Add EVA opcodes.
@
text
@d1201 5
@


1.222
log
@gas/
	* dwarf2dbg.h (dwarf2_move_insn): Declare.
	* dwarf2dbg.c (line_subseg): Add pmove_tail.
	(get_line_subseg): Add create_p argument.  Initialize pmove_tail.
	(dwarf2_gen_line_info_1): Update call accordingly.
	(dwarf2_move_insn): New function.
	* config/tc-mips.c (append_insn): Use dwarf2_move_insn.

gas/testsuite/
	* gas/mips/loc-swap-3.d, gas/mips/loc-swap-3.s: New test.
	* gas/mips/mips.exp: Run it.
@
text
@d852 2
@


1.221
log
@2013-06-13  Chao-ying Fu  <Chao-ying.Fu@@imgtec.com>

	* gas/mips/micromips@@virt.d: New file.
	* gas/mips/micromips@@virt64.d: New file.
	* gas/mips/mips.exp: Enable virt and virt64 tests for micromips.
@
text
@d1002 1
@


1.220
log
@	gas/
	* config/tc-mips.c (append_insn): Don't do branch relaxation for
	MIPS-3D instructions either.
	(md_convert_frag): Update the COPx branch mask accordingly.

	* config/tc-mips.c (md_show_usage): Document --[no-]relax-branch
	option.
	* doc/as.texinfo (Overview): Add --relax-branch and
	--no-relax-branch.
	* doc/c-mips.texi (MIPS Opts): Document --relax-branch and
	--no-relax-branch.

	gas/testsuite/
	* gas/mips/relax-bc1any.l: New test.
	* gas/mips/relax-bc1any.s: New test source.
	* gas/mips/mips.exp: Run the new test.
@
text
@d794 2
a795 2
    run_dump_test_arches "virt" [mips_arch_list_matching mips32r2 !micromips]
    run_dump_test_arches "virt64" [mips_arch_list_matching mips64r2 !micromips]
@


1.219
log
@2013-05-31  Paul Brook  <paul@@codesourcery.com>

	gas/
	* config/tc-mips.c (s_ehword): New.


2013-05-31  Catherine Moore  <clm@@codesourcery.com>

	gas/testsuite/
	* gas/mips/ehword.d: New.
	* gas/mips/ehword.s: New.
	* gas/mips/mips.exp: Run ehword test.
@
text
@d845 3
@


1.218
log
@	gas/
	* write.c (resolve_reloc_expr_symbols): On REL targets don't
	convert relocs who have no relocatable field either.  Rephrase
	the conditional so that the PC-relative check is only applied
	for REL targets.

	gas/testsuite/
	* gas/mips/jalr3.d: New test.
	* gas/mips/jalr3-n32.d: New test.
	* gas/mips/jalr3-n64.d: New test.
	* gas/mips/jalr3.s: New test source.
	* gas/mips/mips.exp: Run the new tests.

	ld/testsuite/
	* ld-mips-elf/jalr3.dd: New test.
	* ld-mips-elf/jalr3.ld: New test linker script.
	* ld-mips-elf/mips-elf.exp: Run the new test.
@
text
@d1127 1
@


1.217
log
@	gas/
	* config/tc-mips.c (macro) <ld>: Don't use $zero for address
	calculation.

	gas/testsuite/
	* gas/mips/ld-zero.d: New test.
	* gas/mips/ld-zero-2.d: New test.
	* gas/mips/ld-zero-3.d: New test.
	* gas/mips/ld-zero-q.d: New test.
	* gas/mips/ld-zero-u.d: New test.
	* gas/mips/ecoff@@ld-zero-3.d: New test.
	* gas/mips/micromips@@ld-zero-2.d: New test.
	* gas/mips/micromips@@ld-zero-3.d: New test.
	* gas/mips/ld-zero.s: New test source.
	* gas/mips/ld-zero-2.s: New test source.
	* gas/mips/ld-zero-3.s: New test source.
	* gas/mips/ld-zero-q.s: New test source.
	* gas/mips/ld-zero-u.s: New test source.
	* gas/mips/mips.exp: Run the new tests.
@
text
@d977 10
@


1.216
log
@include/opcode/
2013-05-22  Jürgen Urban  <JuergenUrban@@gmx.de>

	* mips.h (M_LQC2_AB, M_SQC2_AB): New macros.

opcodes/
2013-05-22  Jürgen Urban  <JuergenUrban@@gmx.de>

	* mips-opc.c (mips_builtin_opcodes): Add R5900 VU0 instructions.

gas/
2013-05-22  Jürgen Urban  <JuergenUrban@@gmx.de>

	* config/tc-mips.c (macro): Handle M_LQC2_AB and M_SQC2_AB.

gas/testsuite/
2013-05-22  Jürgen Urban  <JuergenUrban@@gmx.de>

	* gas/mips/r5900-full.s, gas/mips/r5900-full.d: Add tests for LQ
	and SQ macros.
	* gas/mips/r5900-vu0.s, gas/mips/r5900-vu0.d: New test.
	* gas/mips/mips.exp: Run it.
@
text
@d701 5
@


1.215
log
@
binutils/ChangeLog:
* doc/binutils.texi: Document -Mvirt disassembler option.

gas/ChangeLog:
* config/tc-mips.c (struct mips_set_options): New ase_virt field.
(mips_opts): Update for the new field.
(file_ase_virt): New variable.
(ISA_SUPPORTS_VIRT_ASE): New macro.
(ISA_SUPPORTS_VIRT64_ASE): New macro.
(MIPS_CPU_ASE_VIRT): New define.
(is_opcode_valid): Handle ase_virt.
(macro_build): Handle "+J".
(validate_mips_insn): Likewise.
(mips_ip): Likewise.
(enum options): Add OPTION_VIRT and OPTION_NO_VIRT.
(md_longopts): Add mvirt and mnovirt
(md_parse_option): Handle OPTION_VIRT and OPTION_NO_VIRT.
(mips_after_parse_args): Handle ase_virt field.
(s_mipsset): Handle "virt" and "novirt".
(mips_elf_final_processing): Add a comment about virt ASE might need a new flag.
(md_show_usage): Print out the usage of -mvirt and mno-virt options.
* doc/c-mips.texi: Document -mvirt and -mno-virt.
Document ".set virt" and ".set novirt".

gas/testsuite/ChangeLog:
* gas/mips/mips.exp: Run virt and virt64 testcases.
* gas/mips/virt.d: New file.
* gas/mips/virt.s: New file.
* gas/mips/virt64.d: New file.
* gas/mips/virt64.s: New file.

include/opcode/ChangeLog:
* mips.h (OP_MASK_CODE10): Correct definition.
(OP_SH_CODE10): Likewise.
Add a comment that "+J" is used now for OP_*CODE10.
(INSN_ASE_MASK): Update.
(INSN_VIRT): New macro.
(INSN_VIRT64): New macro

opcodes/ChangeLog:
* mips-dis.c (mips_arch_choices): Add INSN_VIRT to mips32r2 .
Add INSN_VIRT and INSN_VIRT64 to mips64r2.
(parse_mips_dis_option): Handle the virt option.
(print_insn_args): Handle "+J".
(print_mips_disassembler_options): Print out message about virt64.
* mips-opc.c (IVIRT): New define.
(IVIRT64): New define.
(mips_builtin_opcodes): Add dmfgc0, dmtgc0, hypcall, mfgc0, mtgc0,
tlbgr, tlbgwi, tlbginv, tlbginvf, tlbgwr, tlbgp VIRT instructions.
Move rfe to the bottom as it conflicts with tlbgp.
@
text
@d1176 1
@


1.214
log
@gas/
	* config/tc-mips.c (mips_pseudo_table): Add stabd and stabs entries.
	(s_mips_stab): Do not restrict to stabn only.

gas/testsuite/
	* gas/mips/mips16-stabs.s, gas/mips/mips16-stabs.d: New test.
	* gas/mips/mips.exp: Run it.
@
text
@d789 3
@


1.213
log
@2013-04-30  Chao-ying Fu  <Chao-ying.Fu@@imgtec.com>

	* gas/mips/ext-ill.s: New file.
	* gas/mips/ext-ill.l: New file.
	* gas/mips/mips.exp: Run new tests.
@
text
@d1089 1
@


1.212
log
@gas/
2013-02-09  Jürgen Urban  <JuergenUrban@@gmx.de>

	* config/tc-mips.c (CPU_HAS_LDC1_SDC1): New macro.
	(macro): Use it.  Assert that trunc.w.s is not used for r5900.

opcodes/
2013-02-09  Jürgen Urban  <JuergenUrban@@gmx.de>

	* mips-opc.c (mips_builtin_opcodes): Enable l.d and s.d macros for
	single-float.  Disable ll, lld, sc and scd for EE.  Disable the
	trunc.w.s macro for EE.

gas/testsuite/
2013-02-09  Jürgen Urban  <JuergenUrban@@gmx.de>

	* gas/mips/24k-triple-stores-2.d, gas/mips/24k-triple-stores-2.s,
	gas/mips/micromips@@24k-triple-stores-2.d: Move "sc" tests to...
	* gas/mips/24k-triple-stores-2-llsc.d,
	gas/mips/24k-triple-stores-2-llsc.s,
	gas/mips/micromips@@24k-triple-stores-2-llsc.d: ...these new tests.
	* gas/mips/r5900-full.d, gas/mips/r5900-full.s: Verify that the
	MIPS ISA level can be upgraded to support ll, sc, lld and scd.
	* gas/mips/l_d-single.d, gas/mips/s_d-single.d,
	gas/mips/r5900-nollsc.l, gas/mips/r5900-nollsc.s: New tests.
	* gas/mips/mips.exp: Update accordingly.  Add "nollsc" to r5900
	properties.
@
text
@d1172 2
@


1.211
log
@	* archures.c: Add support for MIPS r5900
	* bfd-in2.h: Add support for MIPS r5900
	* config.bfd: Add support for Sony Playstation 2
	* cpu-mips.c: Add support for MIPS r5900
	* elfxx-mips.c: Add support for MIPS r5900 (extension of r4000)

	* config/tc-mips.c: Add support for MIPS r5900
	Add M_LQ_AB and M_SQ_AB to support large values for instructions lq and sq.
	* config/tc-mips.c (can_swap_branch_p, get_append_method): Detect some conditional short loops to fix a bug on the r5900 by NOP in the branch delay slot.
	* config/tc-mips.c (M_MUL): Support 3 operands in multu on r5900.
	* config/tc-mips.c (M_TRUNCWS): Support trunc.w.s on r5900 in MIPS ISA I.
	* config/tc-mips.c (s_mipsset): Force 32 bit floating point on r5900.
	* configure.in: Detect CPU type when target string contains r5900 (e.g. mips64r5900el-linux-gnu).

	* config/tc-mips.c (mips_ip): Check parameter range of instructions mfps and mtps on r5900.

	* elf/mips.h: Add MIPS machine variant number for r5900 which is compatible with old Playstation 2 software.
	* opcode/mips.h: Add support for r5900 instructions including lq and sq.

	* configure.tgt: Support ELF files for Sony Playstation 2 (for ps2dev and ps2sdk).
	* emulparams/elf32lr5900n32.sh: Create linker script for Sony Playstation 2 ELF files using MIPS ABI n32.
	* emulparams/elf32lr5900.sh: Create linker script for Sony Playstation 2 ELF files using MIPS ABI o32.
	* Makefile.am: Add linker scripts for Sony Playstation 2 ELF files.

	* opcodes/mips-dis.c: Add names for CP0 registers of r5900.
	* opcodes/mips-opc.c: Add M_SQ_AB and M_LQ_AB to support larger range for instructions sq and lq.

	* opcodes/mips-opc.c: Add support for MIPS r5900 CPU.
	Add support for 128 bit MMI (Multimedia Instructions).
	Add support for EE instructions (Emotion Engine).
	Disable unsupported floating point instructions (64 bit and undefined compare operations).
	Enable instructions of MIPS ISA IV which are supported by r5900.
	Disable 64 bit co processor instructions.
	Disable 64 bit multiplication and division instructions.
	Disable instructions for co-processor 2 and 3, because these are not supported (preparation for later VU0 support (Vector Unit)).
	Disable cvt.w.s because this behaves like trunc.w.s and the correct execution can't be ensured on r5900.
	Add trunc.w.s using the opcode encoding of cvt.w.s on r5900. This will confuse less developers and compilers.
@
text
@d94 3
d469 1
a469 1
mips_arch_create r5900 	64	mips3	{ gpr_ilocks singlefloat } \
d572 2
d633 3
d639 3
d1171 1
@


1.210
log
@Add copyright notices
@
text
@d1 1
a1 1
# Copyright 2012
d91 3
d466 3
d572 1
a572 1
					[mips_arch_list_matching mips2]
d576 1
a576 1
					[mips_arch_list_matching mips2]
d578 1
a578 1
					[mips_arch_list_matching mips2]
d627 1
a627 1
	run_dump_test_arches "l_d"	[mips_arch_list_matching mips1]
d629 2
a630 2
					[mips_arch_list_matching mips1]
	run_dump_test_arches "s_d"	[mips_arch_list_matching mips1]
d632 2
a633 2
					[mips_arch_list_matching mips1]
	run_dump_test_arches "ldc1"	[mips_arch_list_matching mips2]
d635 2
a636 2
					[mips_arch_list_matching mips2]
	run_dump_test_arches "sdc1"	[mips_arch_list_matching mips2]
d638 1
a638 1
					[mips_arch_list_matching mips2]
d649 1
a649 1
					[mips_arch_list_matching mips3]
d651 1
a651 1
					[mips_arch_list_matching mips3]
d653 1
a653 1
					[mips_arch_list_matching mips3]
d655 1
a655 1
					[mips_arch_list_matching mips3]
d657 1
a657 1
					[mips_arch_list_matching mips3]
d659 1
a659 1
					[mips_arch_list_matching mips3]
d661 1
a661 1
					[mips_arch_list_matching mips3]
d663 1
a663 1
					[mips_arch_list_matching mips3]
d673 1
a673 1
					[mips_arch_list_matching mips3]
d675 1
a675 1
					[mips_arch_list_matching mips3]
d677 1
a677 1
					[mips_arch_list_matching mips3]
d679 1
a679 1
					[mips_arch_list_matching mips3]
d681 1
a681 1
					[mips_arch_list_matching mips3]
d683 1
a683 1
					[mips_arch_list_matching mips3]
d685 1
a685 1
					[mips_arch_list_matching mips3]
d687 1
a687 1
					[mips_arch_list_matching mips3]
d885 1
a885 1
	run_dump_test_arches "elf${el}-rel2" [mips_arch_list_matching gpr64]
d1105 1
a1105 1
					[mips_arch_list_matching mips1]
d1108 1
a1108 1
					[mips_arch_list_matching mips1]
d1157 3
@


1.209
log
@	gas/
	* config/tc-mips.c (mips_ip) <'u'>: Default to BFD_RELOC_LO16.

	gas/testsuite/
	* gas/mips/lui.d: New test.
	* gas/mips/micromips@@lui.d: New test.
	* gas/mips/lui-1.l: New list test.
	* gas/mips/lui-2.l: New list test.
	* gas/mips/lui.s: New test source.
	* gas/mips/lui-1.s: New test source.
	* gas/mips/lui-2.s: New test source.
	* gas/mips/mips.exp: Run the new tests.
@
text
@d1 17
@


1.208
log
@	gas/
	* config/tc-mips.c (append_insn): Set fx_no_overflow for 16-bit
	microMIPS branch relocations.

	gas/testsuite/
	* gas/mips/micromips-b16.d: New test.
	* gas/mips/micromips-b16.s: New test source.
	* gas/mips/mips.exp: Run the new test.
@
text
@d1131 3
@


1.207
log
@	gas/
	* config/tc-mips.c (is_delay_slot_valid): Don't accept macros
	in 16-bit delay slots.
	(macro_build_jalr): Emit 32-bit JALR if placed in a 32-bit delay
	slot.
	(macro) <M_JAL_2>: Likewise

	gas/testsuite/
	* gas/mips/micromips-branch-delay.l: Update messages for 16-bit
	delay slot changes.
	* gas/mips/micromips-warn-branch-delay.d: New test.
	* gas/mips/micromips-warn-branch-delay.l: Stderr output for the
	new test.
	* gas/mips/micromips-warn-branch-delay-1.d: New test.
	* gas/mips/micromips-warn-branch-delay.s: New test source.
	* gas/mips/micromips-warn-branch-delay-1.s: New test source.
	* gas/mips/mips.exp: Run the new tests.
@
text
@d1118 1
@


1.206
log
@gas/testsuite/
2012-09-23  Maciej W. Rozycki  <macro@@codesourcery.com>

	* gas/mips/hilo-diff-eb.d: New test.
	* gas/mips/hilo-diff-eb-n32.d: New test.
	* gas/mips/hilo-diff-eb-n64.d: New test.
	* gas/mips/hilo-diff-el.d: New test.
	* gas/mips/hilo-diff-el-n32.d: New test.
	* gas/mips/hilo-diff-el-n64.d: New test.
	* gas/mips/mips16@@hilo-diff-eb.d: New test.
	* gas/mips/mips16@@hilo-diff-eb-n32.d: New test.
	* gas/mips/mips16@@hilo-diff-eb-n64.d: New test.
	* gas/mips/mips16@@hilo-diff-el.d: New test.
	* gas/mips/mips16@@hilo-diff-el-n32.d: New test.
	* gas/mips/mips16@@hilo-diff-el-n64.d: New test.
	* gas/mips/micromips@@hilo-diff-eb.d: New test.
	* gas/mips/micromips@@hilo-diff-eb-n32.d: New test.
	* gas/mips/micromips@@hilo-diff-eb-n64.d: New test.
	* gas/mips/micromips@@hilo-diff-el.d: New test.
	* gas/mips/micromips@@hilo-diff-el-n32.d: New test.
	* gas/mips/micromips@@hilo-diff-el-n64.d: New test.
	* gas/mips/hilo-diff.s: New test source.
	* gas/mips/mips.exp: Run the new tests.
@
text
@d1116 2
@


1.205
log
@gas/
	* config/tc-mips.h (TC_FORCE_RELOCATION): Remove comment.
	* config/tc-mips.c (calculate_reloc): New function.
	(append_insn): Use it.  Do not resolve compound relocations here.
	(mips16_macro_build, mips16_ip): Use calculate_reloc.
	(mips16_immed_extend): New function, split out from...
	(mips16_immed): ...here.
	(mips_frob_file): Handle null symbols.
	(mips_force_relocation): Remove NEWABI handling.
	(read_reloc_insn, write_reloc_insn): New functions.
	(md_apply_fix): Report TLS relocations against constants.
	Use read_reloc_insn, calculate_reloc and write_reloc_insn.
	Report relocations against constants that can't be resolved
	at assembly time.

gas/testsuite/
	* gas/mips/elf-rel22.s, gas/mips/elf-rel22.d: Add more tests.
	* gas/mips/elf-rel29.s, gas/mips/elf-rel29.d,
	gas/mips/micromips@@elf-rel29.d, gas/mips/elf-rel30.s,
	gas/mips/elf-rel30.l: New tests.
	* gas/mips/mips.exp: Run them.
@
text
@d1120 8
@


1.204
log
@gas/
2012-09-23  Richard Sandiford  <rdsandiford@@googlemail.com>
	    Maciej W. Rozycki  <macro@@codesourcery.com>

	* config/tc-mips.h (mips_record_label): Delete.
	(mips_add_dot_label): Declare.
	(tc_new_dot_label): Use it.
	* config/tc-mips.c (mips_assembling_insn): New variable.
	(md_assemble): Call mips_mark_labels.  Set mips_assembling_insn
	while the main part of the function is executing.
	(mips_compressed_mark_label): New function, split out from...
	(mips_compressed_mark_labels): ...here.
	(append_insn): Don't call mips_mark_labels here.
	(mips_record_label): Make local.
	(mips_add_dot_label): New function.

gas/testsuite/
	* gas/mips/dot-1.s, gas/mips/dot-1.d, gas/mips/micromips@@dot-1.d,
	gas/mips/mips16@@dot-1.d: New test.
	* gas/mips/mips.exp: Run it.
@
text
@d920 1
d922 1
@


1.203
log
@	gas/testsuite/
	* gas/mips/mips.exp: Set has_newabi for all Linux targets.
	* gas/mips/cfi-n64-1.d: Adjust for targets that do not infer the
	ISA from the ABI.
	* gas/mips/elf-rel-got-n32.d: Likewise.
	* gas/mips/elf-rel-got-n64.d: Likewise.
	* gas/mips/elf-rel-xgot-n32.d: Likewise.
	* gas/mips/elf-rel-xgot-n64.d: Likewise.
	* gas/mips/elf-rel18.d: Likewise.
	* gas/mips/elf-rel28-n32.d: Likewise.
	* gas/mips/elf-rel28-n64.d: Likewise.
	* gas/mips/jal-newabi.d: Likewise.
	* gas/mips/ldstla-n64-shared.d: Likewise.
	* gas/mips/ldstla-n64-sym32.d: Likewise.
	* gas/mips/ldstla-n64.d: Likewise.
	* gas/mips/macro-warn-1-n32.d: Likewise.
	* gas/mips/macro-warn-2-n32.d: Likewise.
	* gas/mips/n32-consec.d: Likewise.

	ld/testsuite/
	* ld-mips-elf/mips-elf.exp: Set has_newabi for all Linux targets.
	Adjust abi_asflags for targets that do not infer the ISA from the
	ABI.
	* ld-mips-elf/eh-frame1-n32.d: Adjust for targets that do not
	infer the ISA from the ABI.
	* ld-mips-elf/eh-frame1-n64.d: Likewise.
	* ld-mips-elf/eh-frame2-n32.d: Likewise.
	* ld-mips-elf/eh-frame2-n64.d: Likewise.
	* ld-mips-elf/elf-rel-got-n32-embed.d: Likewise.
	* ld-mips-elf/elf-rel-got-n32.d: Likewise.
	* ld-mips-elf/elf-rel-got-n64-embed.d: Likewise.
	* ld-mips-elf/elf-rel-got-n64-linux.d: Likewise.
	* ld-mips-elf/elf-rel-got-n64.d: Likewise.
	* ld-mips-elf/elf-rel-xgot-n32-embed.d: Likewise.
	* ld-mips-elf/elf-rel-xgot-n32.d: Likewise.
	* ld-mips-elf/elf-rel-xgot-n64-embed.d: Likewise.
	* ld-mips-elf/elf-rel-xgot-n64-linux.d: Likewise.
	* ld-mips-elf/elf-rel-xgot-n64.d: Likewise.
	* ld-mips-elf/emit-relocs-1.d: Likewise.
	* ld-mips-elf/got-page-2.d: Likewise.
	* ld-mips-elf/no-shared-1-n32.d: Likewise.
	* ld-mips-elf/no-shared-1-n64.d: Likewise.
	* ld-mips-elf/rel32-n32.d: Likewise.
	* ld-mips-elf/rel64.d: Likewise.
	* ld-mips-elf/relax-jalr-n32-shared.d: Likewise.
	* ld-mips-elf/relax-jalr-n32.d: Likewise.
	* ld-mips-elf/relax-jalr-n64-shared.d: Likewise.
	* ld-mips-elf/relax-jalr-n64.d: Likewise.
	* ld-mips-elf/reloc-1-n32.d: Likewise.
	* ld-mips-elf/reloc-1-n64.d: Likewise.
	* ld-mips-elf/textrel-1.d: Likewise.
@
text
@d481 2
a482 1
    
@


1.202
log
@	gas/testsuite/
	* gas/mips/mips.exp: Set has_newabi for mips*-sde-elf* too.
	* gas/mips/elf-rel-got-n32.s: Adjust padding.
	* gas/mips/elf-rel-got-n64.s: Likewise.
	* gas/mips/elf-rel23.s: Likewise.
	* gas/mips/elf-rel28.s: Likewise.
	* gas/mips/n32-consec.s: Likewise.
	* gas/mips/elf-rel-xgot-n32.d: Adjust output expected.
	* gas/mips/elf-rel-xgot-n64.d: Likewise.
	* gas/mips/elf-rel23.d: Likewise.
	* gas/mips/elf-rel23a.d: Likewise.
	* gas/mips/elf-rel23b.d: Likewise.
	* gas/mips/elf-rel28-n32.d: Likewise.

	ld/testsuite/
	* lib/ld-lib.exp (run_dump_test): Implement the EXTRA_OPTIONS
	argument and the "dump" keyword.
	* ld-mips-elf/emit-relocs-1a.s: Make section alignment uniform
	across targets.
	* ld-mips-elf/emit-relocs-1b.s: Likewise.
	* ld-mips-elf/jalbal.s: Adjust padding.
	* ld-mips-elf/elf-rel-got-n32-embed.d: New test.
	* ld-mips-elf/elf-rel-got-n64-embed.d: New test.
	* ld-mips-elf/elf-rel-xgot-n32-embed.d: New test.
	* ld-mips-elf/elf-rel-xgot-n64-embed.d: New test.
	* ld-mips-elf/elf-rel-got-n32.d: Remove -melf32btsmipn32.
	* ld-mips-elf/elf-rel-got-n64.d: Remove -melf64btsmip.  Adjust
	output.
	* ld-mips-elf/elf-rel-got-n64-linux.d: Remove -melf64btsmip.
	* ld-mips-elf/elf-rel-xgot-n32.d: Remove -melf32btsmipn32.
	Adjust output.
	* ld-mips-elf/elf-rel-xgot-n64.d: Remove -melf64btsmip.  Adjust
	output.
	* ld-mips-elf/elf-rel-xgot-n64-linux.d: Likewise.
	* ld-mips-elf/reloc-1-n64.d: Remove -melf64btsmip.
	* ld-mips-elf/mips-elf.exp: Set has_newabi for mips*-sde-elf*
	too.  Move tool flags from o32_as_flags and o32_ld_flags
	variables into abi_asflags and abi_ldflags arrays.  Adjust test
	cases run to use them.  Run the new tests.
@
text
@d461 1
a461 1
    set has_newabi [expr [istarget *-*-irix6*] || [istarget mips64*-*-linux*] || [istarget mips*-sde-elf*]]
@


1.201
log
@	gas/
	* config/tc-mips.c (append_insn): Also handle moving delay-slot
	instruction across frags for fixed branches.

	gas/testsuite/
	* gas/mips/branch-swap-2.l: New list test.
	* gas/mips/branch-swap-2.s: New test source.
	* gas/mips/mips.exp: Run the new test.
@
text
@d461 1
a461 1
    set has_newabi [expr [istarget *-*-irix6*] || [istarget mips64*-*-linux*]]
@


1.200
log
@	include/opcode/
	* mips.h: Document microMIPS DSP ASE usage.
	(MICROMIPSOP_MASK_DSPACC, MICROMIPSOP_SH_DSPACC): Update for
	microMIPS DSP ASE support.
	(MICROMIPSOP_MASK_DSPSFT, MICROMIPSOP_SH_DSPSFT): Likewise.
	(MICROMIPSOP_MASK_SA3, MICROMIPSOP_SH_SA3): Likewise.
	(MICROMIPSOP_MASK_SA4, MICROMIPSOP_SH_SA4): Likewise.
	(MICROMIPSOP_MASK_IMM8, MICROMIPSOP_SH_IMM8): Likewise.
	(MICROMIPSOP_MASK_IMM10, MICROMIPSOP_SH_IMM10): Likewise.
	(MICROMIPSOP_MASK_WRDSP, MICROMIPSOP_SH_WRDSP): Likewise.
	(MICROMIPSOP_MASK_BP, MICROMIPSOP_SH_BP): Likewise.

	gas/
	* config/tc-mips.c (macro_build) <'2'>: Handle microMIPS.
	(macro) <M_BALIGN>: Update error handling.
	(validate_micromips_insn) <'2', '3', '4', '5', '6'>: New cases.
	<'7', '8', '0', '@@', '^'>: Likewise.
	(mips_ip) <'2', '3', '4', '5', '6', '7', '8'>: Handle microMIPS.
	<'9'>: Fix formatting.
	<'0', '@@'>: Handle microMIPS.
	<'^'>: New case.

	gas/testsuite/
	* gas/mips/micromips@@mips32-dsp.d: New.
	* gas/mips/micromips@@mips32-dspr2.d: New.
	* gas/mips/mips32-dsp.d: Remove -mips32r2.
	* gas/mips/mips32-dspr2.d: Likewise.
	* gas/mips/mips.exp: (mips_create_arch): Use -mips64r2
	for micromips.  Use run_dump_test_arches to run dsp tests.

	opcodes/
	* micromips-opc.c (WR_a, RD_a, MOD_a): New macros.
	(DSP_VOLA): Likewise.
	(D32, D33): Likewise.
	(micromips_opcodes): Add DSP ASE instructions.
	* micromips-dis.c (print_insn_micromips) <'2', '3'>: New cases.
	<'4', '5', '6', '7', '8', '0', '^', '@@'>: Likewise.
@
text
@d508 14
@


1.199
log
@gas/
	* config/tc-mips.c (s_tls_rel_directive): Call mips_clear_insn_labels.

gas/testsuite/
	* gas/mips/tls-relw.s, gas/mips/tls-relw.d: New test.
	* gas/mips/mips.exp: Run it.
@
text
@d1026 4
a1029 2
    run_dump_test "mips32-dsp"
    run_dump_test "mips32-dspr2"
@


1.199.2.1
log
@gas/
	* config/tc-mips.c (ISA_SUPPORTS_DSP_ASE): Also set if microMIPS
	mode.
	(ISA_SUPPORTS_DSPR2_ASE): Likewise.
	(macro_build) <'2'>: Handle microMIPS.
2012-07-31  Maciej W. Rozycki  <macro@@codesourcery.com>
            Chao-Ying Fu  <fu@@mips.com>
            Catherine Moore  <clm@@codesourcery.com>

gas/
	* gas/mips/micromips@@mips32-dsp.d: New test.
	* gas/mips/micromips@@mips32-dspr2.d: New test.
	* gas/mips/mips32-dsp.s: Update padding.
	* gas/mips/mips32-dspr2.s: Likewise.
	* gas/mips/mips.exp: Use run_dump_test_arches to run MIPS32 DSP
	tests.
2012-07-31  Catherine Moore  <clm@@codesourcery.com>
            Maciej W. Rozycki  <macro@@codesourcery.com>

include/
2012-07-31  Chao-Ying Fu  <fu@@mips.com>
            Catherine Moore  <clm@@codesourcery.com>
            Maciej W. Rozycki  <macro@@codesourcery.com>

opcodes/
2012-08-01  Alan Modra  <amodra@@gmail.com>

	* h8300-dis.c: Fix printf arg warnings.
	* i960-dis.c: Likewise.
	* mips-dis.c: Likewise.
	* pdp11-dis.c: Likewise.
	* sh-dis.c: Likewise.
	* v850-dis.c: Likewise.
	* configure.in: Formatting.
	* configure: Regenerate.
	* rl78-decode.c: Regenerate.
	* po/POTFILES.in: Regenerate.
@
text
@d1026 2
a1027 4
    run_dump_test_arches "mips32-dsp"	[mips_arch_list_matching mips32r2 \
					    !octeon]
    run_dump_test_arches "mips32-dspr2"	[mips_arch_list_matching mips32r2 \
					    !octeon]
@


1.199.2.2
log
@bfd/
2012-08-09  Maciej W. Rozycki  <macro@@codesourcery.com>

	* elfxx-mips.c (LA25_LUI_MICROMIPS_1, LA25_LUI_MICROMIPS_2):
	Remove macros, folding them into...
	(LA25_LUI_MICROMIPS): ... this new macro.
	(LA25_J_MICROMIPS_1, LA25_J_MICROMIPS_2): Likewise into...
	(LA25_J_MICROMIPS): ... this new macro.
	(LA25_ADDIU_MICROMIPS_1, LA25_ADDIU_MICROMIPS_2): Likewise
	into...
	(LA25_ADDIU_MICROMIPS): ... this new macro.
	(bfd_put_micromips_32, bfd_get_micromips_32): New functions.
	(mips_elf_create_la25_stub): Use them.
	(check_br32_dslot, check_br32, check_relocated_bzc): Likewise.
	(_bfd_mips_elf_relax_section): Likewise.

gas/
	* config/tc-mips.c (NO_ISA_COP, COP_INSN): Remove macros.
	(is_opcode_valid): Remove coprocessor instruction exclusions.
	Replace OPCODE_IS_MEMBER with opcode_is_member.
	(is_opcode_valid_16): Replace OPCODE_IS_MEMBER with
	opcode_is_member.
	(macro): Remove coprocessor instruction exclusions.

gas/
	* gas/mips/mips.exp: Set has_newabi for all Linux targets.
	* gas/mips/cfi-n64-1.d: Adjust for targets that do not infer the
	ISA from the ABI.
	* gas/mips/elf-rel-got-n32.d: Likewise.
	* gas/mips/elf-rel-got-n64.d: Likewise.
	* gas/mips/elf-rel-xgot-n32.d: Likewise.
	* gas/mips/elf-rel-xgot-n64.d: Likewise.
	* gas/mips/elf-rel18.d: Likewise.
	* gas/mips/elf-rel28-n32.d: Likewise.
	* gas/mips/elf-rel28-n64.d: Likewise.
	* gas/mips/jal-newabi.d: Likewise.
	* gas/mips/ldstla-n64-shared.d: Likewise.
	* gas/mips/ldstla-n64-sym32.d: Likewise.
	* gas/mips/ldstla-n64.d: Likewise.
	* gas/mips/macro-warn-1-n32.d: Likewise.
	* gas/mips/macro-warn-2-n32.d: Likewise.
	* gas/mips/n32-consec.d: Likewise.

include/
2012-08-13  Richard Sandiford  <rdsandiford@@googlemail.com>
            Maciej W. Rozycki  <macro@@codesourcery.com>

	* mips.h (mips_opcode): Add the exclusions field.
	(OPCODE_IS_MEMBER): Remove macro.
	(cpu_is_member): New inline function.
	(opcode_is_member): Likewise.

ld/
	* emulparams/elf32bmip.sh: Make _gp hidden.
	* emulparams/elf32bmipn32-defs.sh: Likewise.
	* emulparams/elf32mipswindiss.sh: Likewise.
	* scripttempl/mips.sc: Likewise.

ld/
2012-08-28  Maciej W. Rozycki  <macro@@codesourcery.com>

	* ld-elf/export-class.sd: New test.
	* ld-elf/export-class.vd: New test.
	* ld-elf/export-class-def.s: New test source.
	* ld-elf/export-class-dep.s: New test source.
	* ld-elf/export-class-lib.s: New test source.
	* ld-elf/export-class-ref.s: New test source.
	* ld-elf/export-class-lib.ver: New test version script.
	* ld-elf/export-class.exp: New test script.
	* ld-arm/arm-export-class.rd: New test.
	* ld-arm/arm-export-class.xd: New test.
	* ld-arm/export-class.exp: New test script.
	* ld-i386/i386-export-class.rd: New test.
	* ld-i386/i386-export-class.xd: New test.
	* ld-i386/export-class.exp: New test script.
	* ld-mips-elf/mips-32-export-class.rd: New test.
	* ld-mips-elf/mips-32-export-class.xd: New test.
	* ld-mips-elf/mips-64-export-class.rd: New test.
	* ld-mips-elf/mips-64-export-class.xd: New test.
	* ld-mips-elf/export-class.exp: New test script.
	* ld-powerpc/powerpc-32-export-class.rd: New test.
	* ld-powerpc/powerpc-32-export-class.xd: New test.
	* ld-powerpc/powerpc-64-export-class.rd: New test.
	* ld-powerpc/powerpc-64-export-class.xd: New test.
	* ld-powerpc/export-class.exp: New test script.
	* ld-x86-64/x86-64-64-export-class.rd: New test.
	* ld-x86-64/x86-64-x32-export-class.rd: New test.
	* ld-x86-64/export-class.exp: New test script.

opcodes/
2012-08-14  Maciej W. Rozycki  <macro@@codesourcery.com>

	* mips-dis.c (print_insn_args): Add GET_OP and GET_OP_S local
	macros, use local variables for info struct member accesses,
	update the type of the variable used to hold the instruction
	word.
	(print_insn_mips, print_mips16_insn_arg): Likewise.
	(print_insn_mips16): Add GET_OP and GET_OP_S local macros, use
	local variables for info struct member accesses.
	(print_insn_micromips): Add GET_OP_S local macro.
	(_print_insn_mips): Update the type of the variable used to hold
	the instruction word.
@
text
@d461 1
a461 1
    set has_newabi [expr [istarget *-*-irix6*] || [istarget mips*-*-linux*] || [istarget mips*-sde-elf*]]
a507 14

    if $elf {
	# Sweep a range of branch offsets so that it hits a position where
	# it is at the beginning of a frag and then swapped with a 16-bit
	# instruction from the preceding frag.  The offset will be somewhere
	# close below 4096 as this is the default obstack size limit that
	# we use and some space will have been already consumed.  The exact
	# amount depends on the host's programming model.
	for { set count 960 } { $count <= 1024 } { incr count } {
	    run_list_test "branch-swap-2" "--defsym count=$count" \
		"MIPS branch swapping ($count)"
	}
    }

@


1.198
log
@gas/
2011-01-08  Andrew Pinski  <andrew.pinski@@caviumnetworks.com>
	    Richard Sandiford  <rdsandiford@@googlemail.com>

	* config/tc-mips.c (mips_move_labels): Take the list of labels and
	textness as parameters.
	(mips_move_text_labels): New function.
	(append_insn): Use it instead of mips_move_labels.
	(mips_emit_delays, start_noreorder): Likewise.
	(mips_align): Take the labels rather than just one label.
	Move all labels to after the .align.
	(s_align): Change the last argument to mips_align.
	(s_cons): Likewise.
	(s_float_cons): Likewise.
	(s_gpword): Likewise.
	(s_gpdword): Likewise.

gas/testsuite/
	* gas/mips/align3.s, gas/mips/align3.d: New testcase.
	* gas/mips/mips.exp: Run it.
@
text
@d916 1
@


1.197
log
@bfd:
2011-12-08  Andrew Pinski  <apinski@@cavium.com>
            Adam Nemet  <anemet@@caviumnetworks.com>

	* archures.c (bfd_mach_mips_octeon2): New macro
	* bfd-in2.h: Regenerate.
	* cpu-mips.c (I_mipsocteon2): New enum value.
	(arch_info_struct): Add bfd_mach_mips_octeon2.
	* elfxx-mips.c (_bfd_elf_mips_mach): Support E_MIPS_MACH_OCTEON2.
	(mips_set_isa_flags): Add bfd_mach_mips_octeon2.
	(mips_mach_extensions): Add bfd_mach_mips_octeon2.

gas:
2011-12-08  Andrew Pinski  <apinski@@cavium.com>
            Adam Nemet  <anemet@@caviumnetworks.com>

        * tc-mips.c (CPU_IS_OCTEON): Add Octeon2.
        (mips_cpu_info_table): Add Octeon2.
        * doc/c-mips.texi: Document octeon2 as an acceptable value for -march=.

gas/testsuite:
2011-12-08  Andrew Pinski  <apinski@@cavium.com>
            Adam Nemet  <anemet@@caviumnetworks.com>

        * gas/mips/mips.exp: Add Octeon2 for an architecture.
        Run octeon2 test.
        * gas/mips/octeon2.d: New file.
        * gas/mips/octeon2.s: New file.

include/opcode:
2011-12-08  Andrew Pinski  <apinski@@cavium.com>
            Adam Nemet  <anemet@@caviumnetworks.com>

        * mips.h (INSN_CHIP_MASK): Update according to INSN_OCTEON2.
        (INSN_OCTEON2): New macro.
        (CPU_OCTEON2): New macro.
        (OPCODE_IS_MEMBER): Add Octeon2.

opcodes:
2011-12-08  Andrew Pinski  <apinski@@cavium.com>
            Adam Nemet  <anemet@@caviumnetworks.com>

	* mips-dis.c (mips_arch_choices): Add Octeon2.
	For "octeon+", just include OcteonP for the insn.
	* mips-opc.c (IOCT): Include Octeon2.
	(IOCTP): Include Octeon2.
	(IOCT2): New macro.
	(mips_builtin_opcodes): Add "laa", "laad", "lac", "lacd", "lad",
	"ladd", "lai", "laid", "las", "lasd", "law", "lawd".
	Move "lbux", "ldx", "lhx", "lwx", and "lwux" up to where the standard
	loads are, and add IOCT2 to them.
	Add "lbx" and "lhux".
	Add "qmac.00", "qmac.01", "qmac.02", "qmac.03", "qmacs.00",
	"qmacs.01", "qmacs.01", "qmacs.02" and "qmacs.03".
	Add "zcb" and "zcbt".
@
text
@d1052 1
@


1.196
log
@gas/testsuite/
	* gas/mips/mips.exp (run_dump_test_arch): Add an opts parameter.
	(run_dump_test_arches): Allow additional options to be passed.
	(run_list_test_arch): Add opts to the name.
	(run_list_test_arches): Allow the options to be elided.
	(mips4-fp, mips5-fp): Run twice, one with -32 and once with -mabi=o64.
	(mips64r2-ill, octeon-ill): Remove empty options string.
@
text
@d441 3
d1022 1
@


1.195
log
@opcode/
2011-11-29  Andrew Pinski  <apinski@@cavium.com>

        * mips-dis.c (mips_arch_choices): Add Octeon+.
        * mips-opc.c (IOCT): Include Octeon+.
        (IOCTP): New macro.
        (mips_builtin_opcodes): Add "saa" and "saad".
bfd/
2011-11-29  Andrew Pinski  <apinski@@cavium.com>

        * archures.c (bfd_mach_mips_octeonp): New macro.
        * bfd-in2.h: Regenerate.
        * bfd/cpu-mips.c (I_mipsocteonp): New enum value.
        (arch_info_struct): Add bfd_mach_mips_octeonp.
        * elfxx-mips.c (mips_set_isa_flags): Add bfd_mach_mips_octeonp.
        (mips_mach_extensions): Add bfd_mach_mips_octeonp.
include/opcodes/
2011-11-29  Andrew Pinski  <apinski@@cavium.com>

        * mips.h (INSN_CHIP_MASK): Update according to INSN_OCTEONP.
        (INSN_OCTEONP): New macro.
        (CPU_OCTEONP): New macro.
        (OPCODE_IS_MEMBER): Add Octeon+.
        (M_SAA_AB, M_SAAD_AB, M_SAA_OB, M_SAAD_OB): New enum values.
gas/
2011-11-29  Andrew Pinski  <apinski@@cavium.com>

        * config/tc-mips.c (CPU_IS_OCTEON): New macro function.
        (CPU_HAS_SEQ): Change to use CPU_IS_OCTEON.
        (NO_ISA_COP): Likewise.
        (macro) <ld_st>: Add support when off0 is true.
        Add support for M_SAA_AB, M_SAA_OB, M_SAAD_OB and M_SAAD_AB.
        (mips_cpu_info_table): Add octeon+.
        * doc/c-mips.texi: Document octeon+ as an acceptable value for -march=.
gas/testsuite/
2011-11-29  Andrew Pinski  <apinski@@cavium.com>

        * gas/mips/mips.exp: Add octeon+ for an architecture.
        Run octeon-saa-saad test.
        (run_dump_test_arch): For Octeon architectures, also try octeon@@.
        * gas/mips/octeon-pref.d: Remove -march=octeon from command line.
        * gas/mips/octeon.d: Likewise.
        * gas/mips/octeon-saa-saad.d: New file.
        * gas/mips/octeon-saa-saad.s: New file
@
text
@d289 1
a289 1
# run_dump_test_arch NAME ARCH
d291 3
a293 2
# Invoke "run_dump_test" for test NAME, with extra assembler and
# disassembler flags to test architecture ARCH.
d306 1
a306 1
proc run_dump_test_arch { name arch } {
d327 3
a329 3
			     "{name    {([mips_arch_displayname $arch])}}
			      {objdump {[mips_arch_objdump_flags $arch]}}
			      {as      {[mips_arch_as_flags $arch]}}"} rv] {
d335 1
a335 1
# run_dump_test_arches NAME ARCH_LIST
d338 3
a340 2
# listed in ARCH_LIST.
proc run_dump_test_arches { name arch_list } {
d342 6
d349 1
a349 1
	run_dump_test_arch "$name" "$arch"
d355 2
a356 2
# Invoke "run_list_test" for test NAME with options OPTS, with extra
# assembler flags to test architecture ARCH.
d360 5
a364 3
    set testname "MIPS $name ([mips_arch_displayname $arch])"
    if [catch {run_list_test "$name" "$opts [mips_arch_as_flags $arch]" \
			     "$testname"} rv] {
d370 1
a370 1
# run_list_test_arches NAME OPTS ARCH_LIST
d372 10
a381 3
# Invoke "run_list_test_arch" for test NAME with options OPTS, for each
# architecture listed in ARCH_LIST.
proc run_list_test_arches { name opts arch_list } {
d656 4
a659 1
    run_dump_test_arches "mips4-fp"	[mips_arch_list_matching fpisa4]
d666 4
a669 1
    run_dump_test_arches "mips5-fp"	[mips_arch_list_matching fpisa5]
d765 1
a765 1
    run_list_test_arches "mips64r2-ill" "" [mips_arch_list_matching mips64r2]
d1017 1
a1017 2
    run_list_test_arches "octeon-ill" "" \
					[mips_arch_list_matching octeon]
@


1.194
log
@	* gas/mips/micromips@@24k-branch-delay-1.d: New test.
	* gas/mips/micromips@@24k-triple-stores-1.d: New test.
	* gas/mips/micromips@@24k-triple-stores-2.d: New test.
	* gas/mips/micromips@@24k-triple-stores-3.d: New test.
	* gas/mips/micromips@@24k-triple-stores-4.d: New test.
	* gas/mips/micromips@@24k-triple-stores-5.d: New test.
	* gas/mips/micromips@@24k-triple-stores-6.d: New test.
	* gas/mips/micromips@@24k-triple-stores-7.d: New test.
	* gas/mips/micromips@@24k-triple-stores-8.d: New test.
	* gas/mips/micromips@@24k-triple-stores-9.d: New test.
	* gas/mips/micromips@@24k-triple-stores-10.d: New test.
	* gas/mips/micromips@@24k-triple-stores-11.d: New test.
	* gas/mips/24k-triple-stores-1.s: Adjust for microMIPS
	disassembly.
	* gas/mips/24k-triple-stores-2.s: Likewise.
	* gas/mips/24k-triple-stores-3.s: Likewise.
	* gas/mips/24k-triple-stores-4.s: Likewise.
	* gas/mips/24k-triple-stores-5.s: Likewise.
	* gas/mips/24k-triple-stores-6.s: Likewise.
	* gas/mips/24k-triple-stores-7.s: Likewise.
	* gas/mips/24k-triple-stores-8.s: Likewise.
	* gas/mips/24k-triple-stores-9.s: Likewise.
	* gas/mips/24k-triple-stores-10.s: Likewise.
	* gas/mips/24k-triple-stores-11.s: Likewise.
	* gas/mips/mips.exp: Run the new tests.
@
text
@d311 7
a317 1
    foreach prefix [list ${proparch}@@${format}@@ ${proparch}@@ ${format}@@] {
d421 3
d993 1
@


1.193
log
@	gas/
	* config/tc-mips.c (can_swap_branch_p): Exclude microMIPS
	variant frags too.

	gas/testsuite/
	* gas/mips/relax-swap3.d: New test.
	* gas/mips/mips16@@relax-swap3.d: Likewise.
	* gas/mips/micromips@@relax-swap3.d: Likewise.
	* gas/mips/relax-swap3.s: New test source.
	* gas/mips/mips.exp: Run the new tests.
@
text
@d497 1
a497 1
	[mips_arch_list_matching mips1 !micromips]
d499 1
a499 1
	[mips_arch_list_matching fpisa5 !octeon !micromips]
d501 1
a501 1
	[mips_arch_list_matching mips2 !micromips]
d503 1
a503 1
	[mips_arch_list_matching mips2 !micromips]
d505 1
a505 1
	[mips_arch_list_matching mips2 !micromips]
d507 1
a507 1
	[mips_arch_list_matching mips1 !micromips]
d509 1
a509 1
	[mips_arch_list_matching mips2 !micromips]
d511 1
a511 1
	[mips_arch_list_matching mips2 !micromips]
d513 1
a513 1
	[mips_arch_list_matching mips1 !micromips]
d515 1
a515 1
	[mips_arch_list_matching mips1 !micromips]
d517 1
a517 1
	[mips_arch_list_matching mips1 !micromips]
d520 1
a520 1
	    [mips_arch_list_matching mips1 !micromips]
@


1.192
log
@gas/
	PR gas/13024
	* dwarf2dbg.c (pending_lines, pending_lines_tail): New variables.
	(dwarf2_gen_line_info_1): Delete.
	(dwarf2_push_line, dwarf2_flush_pending_lines): New functions.
	(dwarf2_gen_line_info, dwarf2_emit_label): Use them.
	(dwarf2_consume_line_info): Call dwarf2_flush_pending_lines.
	(dwarf2_directive_loc): Push previous .locs instead of generating
	them immediately.

gas/testsuite/
	* gas/mips/loc-swap-2.s, gas/mips/loc-swap-2.d,
	gas/mips/micromips@@loc-swap-2.d,
	gas/mips/mips16@@loc-swap-2.d: New test.
	* gas/mips/mips.exp: Run it.
@
text
@d752 1
@


1.192.2.1
log
@	gas/
	Apply mainline patches
	2011-11-14  Maciej W. Rozycki  <macro@@codesourcery.com>
	* config/tc-mips.c (can_swap_branch_p): Exclude microMIPS
	variant frags too.

	gas/testsuite/
	Apply mainline patches
	2011-11-14  Maciej W. Rozycki  <macro@@codesourcery.com>
	* gas/mips/relax-swap3.d: New test.
	* gas/mips/mips16@@relax-swap3.d: Likewise.
	* gas/mips/micromips@@relax-swap3.d: Likewise.
	* gas/mips/relax-swap3.s: New test source.
	* gas/mips/mips.exp: Run the new tests.
@
text
@a751 1
    run_dump_test_arches "relax-swap3"	[mips_arch_list_all]
@


1.192.2.2
log
@gas/
	* config/tc-mips.c (s_tls_rel_directive): Call mips_clear_insn_labels.

gas/testsuite/
	* gas/mips/tls-relw.s, gas/mips/tls-relw.d: New test.
	* gas/mips/mips.exp: Run it.
@
text
@a880 1
	run_dump_test "tls-relw"
@


1.191
log
@	* gas/mips/micromips@@mips5.d: Rename to...
	* gas/mips/micromips@@mips5-fp.d: ... this.
	* gas/mips/mips5.d: Rename to...
	* gas/mips/mips5-fp.d: ... this.
	* gas/mips/mips5.l: Rename to...
	* gas/mips/mips5-fp.l: ... this.
	* gas/mips/mips5.s: Rename to...
	* gas/mips/mips5-fp.s: ... this.
	* gas/mips/mips.exp: Update accordingly.
@
text
@d892 1
@


1.190
log
@	* gas/mips/mips.exp: Define new "fpisa3", "fpisa4" and "fpisa5"
	architecture properties adding them to "mips3", "mips4", "mips5"
	and "mips32r2" architectures.  Use the new properties for the
	"24k-triple-stores-1", "24k-triple-stores-3", "mips4-fp",
	"mips5" and "alnv_ps-swap" tests.
@
text
@d637 1
a637 1
    run_dump_test_arches "mips5"	[mips_arch_list_matching fpisa5]
@


1.189
log
@	gas/
	* config/tc-mips.c (mips_set_options): Add ase_mcu.
	(mips_opts): Initialise ase_mcu to -1.
	(ISA_SUPPORTS_MCU_ASE): New macro.
	(MIPS_CPU_ASE_MCU): Likewise.
	(is_opcode_valid): Handle MCU.
	(macro_build, macro): Likewise.
	(validate_mips_insn, validate_micromips_insn): Likewise.
	(mips_ip): Likewise.
	(options): Add OPTION_MCU and OPTION_NO_MCU.
	(md_longopts): Add mmcu and mno-mcu.
	(md_parse_option): Handle OPTION_MCU and OPTION_NO_MCU.
	(mips_after_parse_args): Handle MCU.
	(s_mipsset): Likewise.
	(md_show_usage): Handle MCU options.

	* doc/as.texinfo: Document -mmcu and -mno-mcu options.
	* doc/c-mips.texi: Likewise, and document ".set mcu" and
	".set nomcu" directives.

	gas/testsuite/
	* gas/mips/micromips@@mcu.d: New test.
	* gas/mips/mcu.d: Likewise.
	* gas/mips/mcu.s: New test source.
	* gas/mips/mips.exp: Run the new tests.

	include/opcode/
	* mips.h (OP_MASK_3BITPOS, OP_SH_3BITPOS): New macros.
	(OP_MASK_OFFSET12, OP_SH_OFFSET12): Redefine.
	(INSN_ASE_MASK): Add the MCU bit.
	(INSN_MCU): New macro.
	(M_ACLR_AB, M_ACLR_OB, M_ASET_AB, M_ASET_OB): New enum values.
	(MICROMIPSOP_MASK_3BITPOS, MICROMIPSOP_SH_3BITPOS): New macros.

	opcodes/
	* mips-dis.c (mips_arch_choices): Enable MCU for "mips32r2"
	and "mips64r2".
	(print_insn_args, print_insn_micromips): Handle MCU.
	* micromips-opc.c (MC): New macro.
	(micromips_opcodes): Add "aclr", "aset" and "iret".
	* mips-opc.c (MC): New macro.
	(mips_builtin_opcodes): Add "aclr", "aset" and "iret".
@
text
@d58 4
d376 1
a376 1
mips_arch_create mips3 	64	mips2	{} \
d378 1
a378 1
mips_arch_create mips4 	64	mips3	{} \
d380 1
a380 1
mips_arch_create mips5 	64	mips4	{} \
d385 1
a385 1
mips_arch_create mips32r2 32	mips32	{ ror } \
d499 1
a499 1
	[mips_arch_list_matching mips32r2 !octeon !micromips]
d503 1
a503 1
	[mips_arch_list_matching mips3 !micromips]
d630 1
a630 1
    run_dump_test_arches "mips4-fp"	[mips_arch_list_matching mips4]
d632 1
a632 1
					[mips_arch_list_matching mips4]
d637 1
a637 1
    run_dump_test_arches "mips5"	[mips_arch_list_matching mips5]
d1033 1
a1033 3
    run_dump_test_arches "alnv_ps-swap" [lsort -dictionary -unique [concat \
					[mips_arch_list_matching mips5] \
					[mips_arch_list_matching mips32r2] ] ]
@


1.188
log
@bfd/
2011-02-25  Chao-ying Fu  <fu@@mips.com>
            Ilie Garbacea  <ilie@@mips.com>
            Maciej W. Rozycki  <macro@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>
            Catherine Moore  <clm@@codesourcery.com>
	    Richard Sandiford  <rdsandiford@@googlemail.com>

	* archures.c (bfd_mach_mips_micromips): New macro.
	* cpu-mips.c (I_micromips): New enum value.
	(arch_info_struct): Add bfd_mach_mips_micromips.
	* elfxx-mips.h (_bfd_mips_elf_is_target_special_symbol): New
	prototype.
	(_bfd_mips_elf_relax_section): Likewise.
	(_bfd_mips16_elf_reloc_unshuffle): Rename to...
	(_bfd_mips_elf_reloc_unshuffle): ... this.  Handle microMIPS
	ASE.
	(_bfd_mips16_elf_reloc_shuffle): Rename to...
	(_bfd_mips_elf_reloc_shuffle): ... this.  Handle microMIPS ASE.
	(gprel16_reloc_p): Handle microMIPS ASE.
	(literal_reloc_p): New function.
	* elf32-mips.c (elf_micromips_howto_table_rel): New variable.
	(_bfd_mips_elf32_gprel16_reloc): Handle microMIPS ASE.
	(mips16_gprel_reloc): Update for _bfd_mips_elf_reloc_unshuffle
	and _bfd_mips_elf_reloc_shuffle changes.
	(mips_elf_gprel32_reloc): Update comment.
	(micromips_reloc_map): New variable.
	(bfd_elf32_bfd_reloc_type_lookup): Handle microMIPS ASE.
	(mips_elf32_rtype_to_howto): Likewise.
	(mips_info_to_howto_rel): Likewise.
	(bfd_elf32_bfd_is_target_special_symbol): Define.
	(bfd_elf32_bfd_relax_section): Likewise.
	* elf64-mips.c (micromips_elf64_howto_table_rel): New variable.
	(micromips_elf64_howto_table_rela): Likewise.
	(mips16_gprel_reloc): Update for _bfd_mips_elf_reloc_unshuffle
	and _bfd_mips_elf_reloc_shuffle changes.
	(micromips_reloc_map): Likewise.
	(bfd_elf64_bfd_reloc_type_lookup): Handle microMIPS ASE.
	(bfd_elf64_bfd_reloc_name_lookup): Likewise.
	(mips_elf64_rtype_to_howto): Likewise.
	(bfd_elf64_bfd_is_target_special_symbol): Define.
	* elfn32-mips.c (elf_micromips_howto_table_rel): New variable.
	(elf_micromips_howto_table_rela): Likewise.
	(mips16_gprel_reloc): Update for _bfd_mips_elf_reloc_unshuffle
	and _bfd_mips_elf_reloc_shuffle changes.
	(micromips_reloc_map): Likewise.
	(bfd_elf32_bfd_reloc_type_lookup): Handle microMIPS ASE.
	(bfd_elf32_bfd_reloc_name_lookup): Likewise.
	(mips_elf_n32_rtype_to_howto): Likewise.
	(bfd_elf32_bfd_is_target_special_symbol): Define.
	* elfxx-mips.c (LA25_LUI_MICROMIPS_1): New macro.
	(LA25_LUI_MICROMIPS_2): Likewise.
	(LA25_J_MICROMIPS_1, LA25_J_MICROMIPS_2): Likewise.
	(LA25_ADDIU_MICROMIPS_1, LA25_ADDIU_MICROMIPS_2): Likewise.
	(TLS_RELOC_P): Handle microMIPS ASE.
	(mips_elf_create_stub_symbol): Adjust value of stub symbol if
	target is a microMIPS function.
	(micromips_reloc_p): New function.
	(micromips_reloc_shuffle_p): Likewise.
	(got16_reloc_p, call16_reloc_p): Handle microMIPS ASE.
	(got_disp_reloc_p, got_page_reloc_p): New functions.
	(got_ofst_reloc_p): Likewise.
	(got_hi16_reloc_p, got_lo16_reloc_p): Likewise.
	(call_hi16_reloc_p, call_lo16_reloc_p): Likewise.
	(hi16_reloc_p, lo16_reloc_p, jal_reloc_p): Handle microMIPS ASE.
	(micromips_branch_reloc_p): New function.
	(tls_gd_reloc_p, tls_ldm_reloc_p): Likewise.
	(tls_gottprel_reloc_p): Likewise.
	(_bfd_mips16_elf_reloc_unshuffle): Rename to...
	(_bfd_mips_elf_reloc_unshuffle): ... this.  Handle microMIPS
	ASE.
	(_bfd_mips16_elf_reloc_shuffle): Rename to...
	(_bfd_mips_elf_reloc_shuffle): ... this.  Handle microMIPS ASE.
	(_bfd_mips_elf_lo16_reloc): Handle microMIPS ASE.
	(mips_tls_got_index, mips_elf_got_page): Likewise.
	(mips_elf_create_local_got_entry): Likewise.
	(mips_elf_relocation_needs_la25_stub): Likewise.
	(mips_elf_calculate_relocation): Likewise.
	(mips_elf_perform_relocation): Likewise.
	(_bfd_mips_elf_symbol_processing): Likewise.
	(_bfd_mips_elf_add_symbol_hook): Likewise.
	(_bfd_mips_elf_link_output_symbol_hook): Likewise.
	(mips_elf_add_lo16_rel_addend): Likewise.
	(_bfd_mips_elf_check_relocs): Likewise.
	(mips_elf_adjust_addend): Likewise.
	(_bfd_mips_elf_relocate_section): Likewise.
	(mips_elf_create_la25_stub): Likewise.
	(_bfd_mips_vxworks_finish_dynamic_symbol): Likewise.
	(_bfd_mips_elf_gc_sweep_hook): Likewise.
	(_bfd_mips_elf_is_target_special_symbol): New function.
	(mips_elf_relax_delete_bytes): Likewise.
	(opcode_descriptor): New structure.
	(RA): New macro.
	(OP32_SREG, OP32_TREG, OP16_VALID_REG): Likewise.
	(b_insns_32, bc_insn_32, bz_insn_32, bzal_insn_32): New variables.
	(beq_insn_32): Likewise.
	(b_insn_16, bz_insn_16): New variables.
	(BZC32_REG_FIELD): New macro.
	(bz_rs_insns_32, bz_rt_insns_32): New variables.
	(bzc_insns_32, bz_insns_16):Likewise.
	(BZ16_REG, BZ16_REG_FIELD): New macros.
	(jal_insn_32_bd16, jal_insn_32_bd32): New variables.
	(jal_x_insn_32_bd32): Likewise.
	(j_insn_32, jalr_insn_32): Likewise.
	(ds_insns_32_bd16, ds_insns_32_bd32): Likewise.
	(jalr_insn_16_bd16, jalr_insn_16_bd32, jr_insn_16): Likewise.
	(JR16_REG): New macro.
	(ds_insns_16_bd16): New variable.
	(lui_insn): Likewise.
	(addiu_insn, addiupc_insn): Likewise.
	(ADDIUPC_REG_FIELD): New macro.
	(MOVE32_RD, MOVE32_RS): Likewise.
	(MOVE16_RD_FIELD, MOVE16_RS_FIELD): Likewise.
	(move_insns_32, move_insns_16): New variables.
	(nop_insn_32, nop_insn_16): Likewise.
	(MATCH): New macro.
	(find_match): New function.
	(check_br16_dslot, check_br32_dslot): Likewise.
	(check_br16, check_br32): Likewise.
	(IS_BITSIZE): New macro.
	(check_4byte_branch): New function.
	(_bfd_mips_elf_relax_section): Likewise.
	(_bfd_mips_elf_merge_private_bfd_data): Disallow linking MIPS16
	and microMIPS modules together.
	(_bfd_mips_elf_print_private_bfd_data):	Handle microMIPS ASE.
	* reloc.c (BFD_RELOC_MICROMIPS_7_PCREL_S1): New relocation.
	(BFD_RELOC_MICROMIPS_10_PCREL_S1): Likewise.
	(BFD_RELOC_MICROMIPS_16_PCREL_S1): Likewise.
	(BFD_RELOC_MICROMIPS_GPREL16): Likewise.
	(BFD_RELOC_MICROMIPS_JMP, BFD_RELOC_MICROMIPS_HI16): Likewise.
	(BFD_RELOC_MICROMIPS_HI16_S): Likewise.
	(BFD_RELOC_MICROMIPS_LO16): Likewise.
	(BFD_RELOC_MICROMIPS_LITERAL): Likewise.
	(BFD_RELOC_MICROMIPS_GOT16): Likewise.
	(BFD_RELOC_MICROMIPS_CALL16): Likewise.
	(BFD_RELOC_MICROMIPS_GOT_HI16): Likewise.
	(BFD_RELOC_MICROMIPS_GOT_LO16): Likewise.
	(BFD_RELOC_MICROMIPS_CALL_HI16): Likewise.
	(BFD_RELOC_MICROMIPS_CALL_LO16): Likewise.
	(BFD_RELOC_MICROMIPS_SUB): Likewise.
	(BFD_RELOC_MICROMIPS_GOT_PAGE): Likewise.
	(BFD_RELOC_MICROMIPS_GOT_OFST): Likewise.
	(BFD_RELOC_MICROMIPS_GOT_DISP): Likewise.
	(BFD_RELOC_MICROMIPS_HIGHEST): Likewise.
	(BFD_RELOC_MICROMIPS_HIGHER): Likewise.
	(BFD_RELOC_MICROMIPS_SCN_DISP): Likewise.
	(BFD_RELOC_MICROMIPS_JALR): Likewise.
	(BFD_RELOC_MICROMIPS_TLS_GD): Likewise.
	(BFD_RELOC_MICROMIPS_TLS_LDM): Likewise.
	(BFD_RELOC_MICROMIPS_TLS_DTPREL_HI16): Likewise.
	(BFD_RELOC_MICROMIPS_TLS_DTPREL_LO16): Likewise.
	(BFD_RELOC_MICROMIPS_TLS_GOTTPREL): Likewise.
	(BFD_RELOC_MICROMIPS_TLS_TPREL_HI16): Likewise.
	(BFD_RELOC_MICROMIPS_TLS_TPREL_LO16): Likewise.
	* bfd-in2.h: Regenerate.
	* libbfd.h: Regenerate.

binutils/
2011-02-25  Chao-ying Fu  <fu@@mips.com>
            Maciej W. Rozycki  <macro@@codesourcery.com>

	* readelf.c (get_machine_flags): Handle microMIPS ASE.
	(get_mips_symbol_other): Likewise.

gas/
2011-02-25  Maciej W. Rozycki  <macro@@codesourcery.com>
            Chao-ying Fu  <fu@@mips.com>
	    Richard Sandiford  <rdsandiford@@googlemail.com>

	* config/tc-mips.h (mips_segment_info): Add one bit for
	microMIPS.
	(TC_LABEL_IS_LOCAL): New macro.
	(mips_label_is_local): New prototype.
	* config/tc-mips.c (S0, S7): New macros.
	(emit_branch_likely_macro): New variable.
	(mips_set_options): Add micromips.
	(mips_opts): Initialise micromips to -1.
	(file_ase_micromips): New variable.
	(CPU_HAS_MICROMIPS): New macro.
	(hilo_interlocks): Set for microMIPS too.
	(gpr_interlocks): Likewise.
	(cop_interlocks): Likewise.
	(cop_mem_interlocks): Likewise.
	(HAVE_CODE_COMPRESSION): New macro.
	(micromips_op_hash): New variable.
	(micromips_nop16_insn, micromips_nop32_insn): New variables.
	(NOP_INSN): Handle microMIPS ASE.
	(mips32_to_micromips_reg_b_map): New macro.
	(mips32_to_micromips_reg_c_map): Likewise.
	(mips32_to_micromips_reg_d_map): Likewise.
	(mips32_to_micromips_reg_e_map): Likewise.
	(mips32_to_micromips_reg_f_map): Likewise.
	(mips32_to_micromips_reg_g_map): Likewise.
	(mips32_to_micromips_reg_l_map): Likewise.
	(mips32_to_micromips_reg_n_map): Likewise.
	(mips32_to_micromips_reg_h_map): New variable.
	(mips32_to_micromips_reg_m_map): Likewise.
	(mips32_to_micromips_reg_q_map): Likewise.
	(micromips_to_32_reg_h_map): New variable.
	(micromips_to_32_reg_i_map): Likewise.
	(micromips_to_32_reg_m_map): Likewise.
	(micromips_to_32_reg_q_map): Likewise.
	(micromips_to_32_reg_b_map): New macro.
	(micromips_to_32_reg_c_map): Likewise.
	(micromips_to_32_reg_d_map): Likewise.
	(micromips_to_32_reg_e_map): Likewise.
	(micromips_to_32_reg_f_map): Likewise.
	(micromips_to_32_reg_g_map): Likewise.
	(micromips_to_32_reg_l_map): Likewise.
	(micromips_to_32_reg_n_map): Likewise.
	(micromips_imm_b_map, micromips_imm_c_map): New macros.
	(RELAX_DELAY_SLOT_16BIT): New macro.
	(RELAX_DELAY_SLOT_SIZE_FIRST): Likewise.
	(RELAX_DELAY_SLOT_SIZE_SECOND): Likewise.
	(RELAX_MICROMIPS_ENCODE, RELAX_MICROMIPS_P): New macros.
	(RELAX_MICROMIPS_TYPE, RELAX_MICROMIPS_AT): Likewise.
	(RELAX_MICROMIPS_U16BIT, RELAX_MICROMIPS_UNCOND): Likewise.
	(RELAX_MICROMIPS_COMPACT, RELAX_MICROMIPS_LINK): Likewise.
	(RELAX_MICROMIPS_RELAX32, RELAX_MICROMIPS_TOOFAR16): Likewise.
	(RELAX_MICROMIPS_MARK_TOOFAR16): Likewise.
	(RELAX_MICROMIPS_CLEAR_TOOFAR16): Likewise.
	(RELAX_MICROMIPS_TOOFAR32): Likewise.
	(RELAX_MICROMIPS_MARK_TOOFAR32): Likewise.
	(RELAX_MICROMIPS_CLEAR_TOOFAR32): Likewise.
	(INSERT_OPERAND, EXTRACT_OPERAND): Handle microMIPS ASE.
	(mips_macro_warning): Add delay_slot_16bit_p, delay_slot_32bit_p,
	fsize and insns.
	(mips_mark_labels): New function.
	(mips16_small, mips16_ext): Remove variables, replacing with...
	(forced_insn_size): ... this.
	(append_insn, mips16_ip): Update accordingly.
	(micromips_insn_length): New function.
	(insn_length): Return the length of microMIPS instructions.
	(mips_record_mips16_mode): Rename to...
	(mips_record_compressed_mode): ... this.  Handle microMIPS ASE.
	(install_insn): Handle microMIPS ASE.
	(reglist_lookup): New function.
	(is_size_valid, is_delay_slot_valid): Likewise.
	(md_begin): Handle microMIPS ASE.
	(md_assemble): Likewise.  Update for append_insn interface change.
	(micromips_reloc_p): New function.
	(got16_reloc_p): Handle microMIPS ASE.
	(hi16_reloc_p): Likewise.
	(lo16_reloc_p): Likewise.
	(jmp_reloc_p): New function.
	(jalr_reloc_p): Likewise.
	(matching_lo_reloc): Handle microMIPS ASE.
	(insn_uses_reg, reg_needs_delay): Likewise.
	(mips_move_labels): Likewise.
	(mips16_mark_labels): Rename to...
	(mips_compressed_mark_labels): ... this.  Handle microMIPS ASE.
	(gpr_mod_mask): New function.
	(gpr_read_mask, gpr_write_mask): Handle microMIPS ASE.
	(fpr_read_mask, fpr_write_mask): Likewise.
	(insns_between, nops_for_vr4130, nops_for_insn): Likewise.
	(fix_loongson2f_nop, fix_loongson2f_jump): Likewise.
	(MICROMIPS_LABEL_CHAR): New macro.
	(micromips_target_label, micromips_target_name): New variables.
	(micromips_label_name, micromips_label_expr): New functions.
	(micromips_label_inc, micromips_add_label): Likewise.
	(mips_label_is_local): Likewise.
	(micromips_map_reloc): Likewise.
	(can_swap_branch_p): Handle microMIPS ASE.
	(append_insn): Add expansionp argument.  Handle microMIPS ASE.
	(start_noreorder, end_noreorder): Handle microMIPS ASE.
	(macro_start, macro_warning, macro_end): Likewise.
	(brk_fmt, cop12_fmt, jalr_fmt, lui_fmt): New variables.
	(mem12_fmt, mfhl_fmt, shft_fmt, trap_fmt): Likewise.
	(BRK_FMT, COP12_FMT, JALR_FMT, LUI_FMT): New macros.
	(MEM12_FMT, MFHL_FMT, SHFT_FMT, TRAP_FMT): Likewise.
	(macro_build): Handle microMIPS ASE.  Update for append_insn
	interface change.
	(mips16_macro_build): Update for append_insn interface change.
	(macro_build_jalr): Handle microMIPS ASE.
	(macro_build_lui): Likewise.  Simplify.
	(load_register): Handle microMIPS ASE.
	(load_address): Likewise.
	(move_register): Likewise.
	(macro_build_branch_likely): New function.
	(macro_build_branch_ccl): Likewise.
	(macro_build_branch_rs): Likewise.
	(macro_build_branch_rsrt): Likewise.
	(macro): Handle microMIPS ASE.
	(validate_micromips_insn): New function.
	(expr_const_in_range): Likewise.
	(mips_ip): Handle microMIPS ASE.
	(options): Add OPTION_MICROMIPS and OPTION_NO_MICROMIPS.
	(md_longopts): Add mmicromips and mno-micromips.
	(md_parse_option): Handle OPTION_MICROMIPS and
	OPTION_NO_MICROMIPS.
	(mips_after_parse_args): Handle microMIPS ASE.
	(md_pcrel_from): Handle microMIPS relocations.
	(mips_force_relocation): Likewise.
	(md_apply_fix): Likewise.
	(mips_align): Handle microMIPS ASE.
	(s_mipsset): Likewise.
	(s_cpload, s_cpsetup, s_cpreturn): Use relocation wrappers.
	(s_dtprel_internal): Likewise.
	(s_gpword, s_gpdword): Likewise.
	(s_insn): Handle microMIPS ASE.
	(s_mips_stab): Likewise.
	(relaxed_micromips_32bit_branch_length): New function.
	(relaxed_micromips_16bit_branch_length): New function.
	(md_estimate_size_before_relax): Handle microMIPS ASE.
	(mips_fix_adjustable): Likewise.
	(tc_gen_reloc): Handle microMIPS relocations.
	(mips_relax_frag): Handle microMIPS ASE.
	(md_convert_frag): Likewise.
	(mips_frob_file_after_relocs): Likewise.
	(mips_elf_final_processing): Likewise.
	(mips_nop_opcode): Likewise.
	(mips_handle_align): Likewise.
	(md_show_usage): Handle microMIPS options.
	* symbols.c (TC_LABEL_IS_LOCAL): New macro.
	(S_IS_LOCAL): Add a TC_LABEL_IS_LOCAL check.

	* doc/as.texinfo (Target MIPS options): Add -mmicromips and
	-mno-micromips.
	(-mmicromips, -mno-micromips): New options.
	* doc/c-mips.texi (-mmicromips, -mno-micromips): New options.
	(MIPS ISA): Document .set micromips and .set nomicromips.
	(MIPS insn): Update for microMIPS support.

gas/testsuite/
2011-02-25  Maciej W. Rozycki  <macro@@codesourcery.com>
            Chao-ying Fu  <fu@@mips.com>
	    Richard Sandiford  <rdsandiford@@googlemail.com>

	* gas/mips/micromips.d: New test.
	* gas/mips/micromips-branch-delay.d: Likewise.
	* gas/mips/micromips-branch-relax.d: Likewise.
	* gas/mips/micromips-branch-relax-pic.d: Likewise.
	* gas/mips/micromips-size-1.d: Likewise.
	* gas/mips/micromips-trap.d: Likewise.
	* gas/mips/micromips.l: New stderr output.
	* gas/mips/micromips-branch-delay.l: Likewise.
	* gas/mips/micromips-branch-relax.l: Likewise.
	* gas/mips/micromips-branch-relax-pic.l: Likewise.
	* gas/mips/micromips-size-0.l: New list test.
	* gas/mips/micromips-size-1.l: New stderr output.
	* gas/mips/micromips.s: New test source.
	* gas/mips/micromips-branch-delay.s: Likewise.
	* gas/mips/micromips-branch-relax.s: Likewise.
	* gas/mips/micromips-size-0.s: Likewise.
	* gas/mips/micromips-size-1.s: Likewise.
	* gas/mips/mips.exp: Run the new tests.

	* gas/mips/dli.s: Use .p2align.
	* gas/mips/elf_ase_micromips.d: New test.
	* gas/mips/elf_ase_micromips-2.d: Likewise.
	* gas/mips/micromips@@abs.d: Likewise.
	* gas/mips/micromips@@add.d: Likewise.
	* gas/mips/micromips@@alnv_ps-swap.d: Likewise.
	* gas/mips/micromips@@and.d: Likewise.
	* gas/mips/micromips@@beq.d: Likewise.
	* gas/mips/micromips@@bge.d: Likewise.
	* gas/mips/micromips@@bgeu.d: Likewise.
	* gas/mips/micromips@@blt.d: Likewise.
	* gas/mips/micromips@@bltu.d: Likewise.
	* gas/mips/micromips@@branch-likely.d: Likewise.
	* gas/mips/micromips@@branch-misc-1.d: Likewise.
	* gas/mips/micromips@@branch-misc-2-64.d: Likewise.
	* gas/mips/micromips@@branch-misc-2.d: Likewise.
	* gas/mips/micromips@@branch-misc-2pic-64.d: Likewise.
	* gas/mips/micromips@@branch-misc-2pic.d: Likewise.
	* gas/mips/micromips@@branch-misc-4-64.d: Likewise.
	* gas/mips/micromips@@branch-misc-4.d: Likewise.
	* gas/mips/micromips@@branch-self.d: Likewise.
	* gas/mips/micromips@@cache.d: Likewise.
	* gas/mips/micromips@@daddi.d: Likewise.
	* gas/mips/micromips@@dli.d: Likewise.
	* gas/mips/micromips@@elf-jal.d: Likewise.
	* gas/mips/micromips@@elf-rel2.d: Likewise.
	* gas/mips/micromips@@elfel-rel2.d: Likewise.
	* gas/mips/micromips@@elf-rel4.d: Likewise.
	* gas/mips/micromips@@jal-svr4pic.d: Likewise.
	* gas/mips/micromips@@jal-svr4pic-noreorder.d: Likewise.
	* gas/mips/micromips@@lb-svr4pic-ilocks.d: Likewise.
	* gas/mips/micromips@@li.d: Likewise.
	* gas/mips/micromips@@loc-swap-dis.d: Likewise.
	* gas/mips/micromips@@loc-swap.d: Likewise.
	* gas/mips/micromips@@mips1-fp.d: Likewise.
	* gas/mips/micromips@@mips32-cp2.d: Likewise.
	* gas/mips/micromips@@mips32-imm.d: Likewise.
	* gas/mips/micromips@@mips32-sf32.d: Likewise.
	* gas/mips/micromips@@mips32.d: Likewise.
	* gas/mips/micromips@@mips32r2-cp2.d: Likewise.
	* gas/mips/micromips@@mips32r2-fp32.d: Likewise.
	* gas/mips/micromips@@mips32r2-sync.d: Likewise.
	* gas/mips/micromips@@mips32r2.d: Likewise.
	* gas/mips/micromips@@mips4-branch-likely.d: Likewise.
	* gas/mips/micromips@@mips4-fp.d: Likewise.
	* gas/mips/micromips@@mips4.d: Likewise.
	* gas/mips/micromips@@mips5.d: Likewise.
	* gas/mips/micromips@@mips64-cp2.d: Likewise.
	* gas/mips/micromips@@mips64.d: Likewise.
	* gas/mips/micromips@@mips64r2.d: Likewise.
	* gas/mips/micromips@@pref.d: Likewise.
	* gas/mips/micromips@@relax-at.d: Likewise.
	* gas/mips/micromips@@relax.d: Likewise.
	* gas/mips/micromips@@rol-hw.d: Likewise.
	* gas/mips/micromips@@uld2-eb.d: Likewise.
	* gas/mips/micromips@@uld2-el.d: Likewise.
	* gas/mips/micromips@@ulh2-eb.d: Likewise.
	* gas/mips/micromips@@ulh2-el.d: Likewise.
	* gas/mips/micromips@@ulw2-eb-ilocks.d: Likewise.
	* gas/mips/micromips@@ulw2-el-ilocks.d: Likewise.
	* gas/mips/cache.d: Likewise.
	* gas/mips/daddi.d: Likewise.
	* gas/mips/mips32-imm.d: Likewise.
	* gas/mips/pref.d: Likewise.
	* gas/mips/elf-rel27.d: Handle microMIPS ASE.
	* gas/mips/l_d.d: Likewise.
	* gas/mips/l_d-n32.d: Likewise.
	* gas/mips/l_d-n64.d: Likewise.
	* gas/mips/ld.d: Likewise.
	* gas/mips/ld-n32.d: Likewise.
	* gas/mips/ld-n64.d: Likewise.
	* gas/mips/s_d.d: Likewise.
	* gas/mips/s_d-n32.d: Likewise.
	* gas/mips/s_d-n64.d: Likewise.
	* gas/mips/sd.d: Likewise.
	* gas/mips/sd-n32.d: Likewise.
	* gas/mips/sd-n64.d: Likewise.
	* gas/mips/mips32.d: Update immediates.
	* gas/mips/micromips@@mips32-cp2.s: New test source.
	* gas/mips/micromips@@mips32-imm.s: Likewise.
	* gas/mips/micromips@@mips32r2-cp2.s: Likewise.
	* gas/mips/micromips@@mips64-cp2.s: Likewise.
	* gas/mips/cache.s: Likewise.
	* gas/mips/daddi.s: Likewise.
	* gas/mips/mips32-imm.s: Likewise.
	* gas/mips/elf-rel4.s: Handle microMIPS ASE.
	* gas/mips/lb-pic.s: Likewise.
	* gas/mips/ld.s: Likewise.
	* gas/mips/mips32.s: Likewise.
	* gas/mips/mips.exp: Add the micromips arch.  Exclude mips16e
	from micromips.  Run mips32-imm.

	* gas/mips/jal-mask-11.d: New test.
	* gas/mips/jal-mask-12.d: Likewise.
	* gas/mips/micromips@@jal-mask-11.d: Likewise.
	* gas/mips/jal-mask-1.s: Source for the new tests.
	* gas/mips/jal-mask-21.d: New test.
	* gas/mips/jal-mask-22.d: Likewise.
	* gas/mips/micromips@@jal-mask-12.d: Likewise.
	* gas/mips/jal-mask-2.s: Source for the new tests.
	* gas/mips/mips.exp: Run the new tests.

	* gas/mips/mips16-e.d: Add --special-syms to `objdump'.
	* gas/mips/tmips16-e.d: Likewise.
	* gas/mips/mipsel16-e.d: Likewise.
	* gas/mips/tmipsel16-e.d: Likewise.

	* gas/mips/and.s: Adjust padding.
	* gas/mips/beq.s: Likewise.
	* gas/mips/bge.s: Likewise.
	* gas/mips/bgeu.s: Likewise.
	* gas/mips/blt.s: Likewise.
	* gas/mips/bltu.s: Likewise.
	* gas/mips/branch-misc-2.s: Likewise.
	* gas/mips/jal.s: Likewise.
	* gas/mips/li.s: Likewise.
	* gas/mips/mips4.s: Likewise.
	* gas/mips/mips4-fp.s: Likewise.
	* gas/mips/relax.s: Likewise.
	* gas/mips/and.d: Update accordingly.
	* gas/mips/elf-jal.d: Likewise.
	* gas/mips/jal.d: Likewise.
	* gas/mips/li.d: Likewise.
	* gas/mips/relax-at.d: Likewise.
	* gas/mips/relax.d: Likewise.

include/elf/
2011-02-25  Chao-ying Fu  <fu@@mips.com>
            Maciej W. Rozycki  <macro@@codesourcery.com>

	* mips.h (R_MICROMIPS_min): New relocations.
	(R_MICROMIPS_26_S1): Likewise.
	(R_MICROMIPS_HI16, R_MICROMIPS_LO16): Likewise.
	(R_MICROMIPS_GPREL16, R_MICROMIPS_LITERAL): Likewise.
	(R_MICROMIPS_GOT16, R_MICROMIPS_PC7_S1): Likewise.
	(R_MICROMIPS_PC10_S1, R_MICROMIPS_PC16_S1): Likewise.
	(R_MICROMIPS_CALL16, R_MICROMIPS_GOT_DISP): Likewise.
	(R_MICROMIPS_GOT_PAGE, R_MICROMIPS_GOT_OFST): Likewise.
	(R_MICROMIPS_GOT_HI16, R_MICROMIPS_GOT_LO16): Likewise.
	(R_MICROMIPS_SUB, R_MICROMIPS_HIGHER): Likewise.
	(R_MICROMIPS_HIGHEST, R_MICROMIPS_CALL_HI16): Likewise.
	(R_MICROMIPS_CALL_LO16, R_MICROMIPS_SCN_DISP): Likewise.
	(R_MICROMIPS_JALR, R_MICROMIPS_HI0_LO16): Likewise.
	(R_MICROMIPS_TLS_GD, R_MICROMIPS_TLS_LDM): Likewise.
	(R_MICROMIPS_TLS_DTPREL_HI, R_MICROMIPS_TLS_DTPREL_LO): Likewise.
	(R_MICROMIPS_TLS_GOTTPREL): Likewise.
	(R_MICROMIPS_TLS_TPREL_HI16): Likewise.
	(R_MICROMIPS_TLS_TPREL_LO16): Likewise.
	(R_MICROMIPS_GPREL7_S2, R_MICROMIPS_PC23_S2): Likewise.
	(R_MICROMIPS_max): Likewise.
	(EF_MIPS_ARCH_ASE_MICROMIPS): New macro.
	(STO_MIPS_ISA, STO_MIPS_FLAGS): Likewise.
	(ELF_ST_IS_MIPS_PLT, ELF_ST_SET_MIPS_PLT): Likewise.
	(STO_MICROMIPS): Likewise.
	(ELF_ST_IS_MICROMIPS, ELF_ST_SET_MICROMIPS): Likewise.
	(ELF_ST_IS_COMPRESSED): Likewise.
	(STO_MIPS_PLT, STO_MIPS_PIC): Rework.
	(ELF_ST_IS_MIPS_PIC, ELF_ST_SET_MIPS_PIC): Likewise.
	(STO_MIPS16, ELF_ST_IS_MIPS16, ELF_ST_SET_MIPS16): Likewise.

include/opcode/
2011-02-25  Chao-ying Fu  <fu@@mips.com>
            Maciej W. Rozycki  <macro@@codesourcery.com>

	* mips.h (OP_MASK_EXTLSB, OP_SH_EXTLSB): New macros.
	(OP_MASK_STYPE, OP_SH_STYPE): Likewise.
	(OP_MASK_CODE10, OP_SH_CODE10): Likewise.
	(OP_MASK_TRAP, OP_SH_TRAP): Likewise.
	(OP_MASK_OFFSET12, OP_SH_OFFSET12): Likewise.
	(OP_MASK_OFFSET10, OP_SH_OFFSET10): Likewise.
	(OP_MASK_RS3, OP_SH_RS3): Likewise.
	(OP_MASK_MB, OP_SH_MB, OP_MASK_MC, OP_SH_MC): Likewise.
	(OP_MASK_MD, OP_SH_MD, OP_MASK_ME, OP_SH_ME): Likewise.
	(OP_MASK_MF, OP_SH_MF, OP_MASK_MG, OP_SH_MG): Likewise.
	(OP_MASK_MJ, OP_SH_MJ, OP_MASK_ML, OP_SH_ML): Likewise.
	(OP_MASK_MP, OP_SH_MP, OP_MASK_MQ, OP_SH_MQ): Likewise.
	(OP_MASK_IMMA, OP_SH_IMMA, OP_MASK_IMMB, OP_SH_IMMB): Likewise.
	(OP_MASK_IMMC, OP_SH_IMMC, OP_MASK_IMMF, OP_SH_IMMF): Likewise.
	(OP_MASK_IMMG, OP_SH_IMMG, OP_MASK_IMMH, OP_SH_IMMH): Likewise.
	(OP_MASK_IMMI, OP_SH_IMMI, OP_MASK_IMMJ, OP_SH_IMMJ): Likewise.
	(OP_MASK_IMML, OP_SH_IMML, OP_MASK_IMMM, OP_SH_IMMM): Likewise.
	(OP_MASK_IMMN, OP_SH_IMMN, OP_MASK_IMMO, OP_SH_IMMO): Likewise.
	(OP_MASK_IMMP, OP_SH_IMMP, OP_MASK_IMMQ, OP_SH_IMMQ): Likewise.
	(OP_MASK_IMMU, OP_SH_IMMU, OP_MASK_IMMW, OP_SH_IMMW): Likewise.
	(OP_MASK_IMMX, OP_SH_IMMX, OP_MASK_IMMY, OP_SH_IMMY): Likewise.
	(INSN_WRITE_GPR_S): New macro.
	(INSN2_BRANCH_DELAY_16BIT, INSN2_BRANCH_DELAY_32BIT): Likewise.
	(INSN2_READ_FPR_D): Likewise.
	(INSN2_MOD_GPR_MB, INSN2_MOD_GPR_MC): Likewise.
	(INSN2_MOD_GPR_MD, INSN2_MOD_GPR_ME): Likewise.
	(INSN2_MOD_GPR_MF, INSN2_MOD_GPR_MG): Likewise.
	(INSN2_MOD_GPR_MJ, INSN2_MOD_GPR_MP): Likewise.
	(INSN2_MOD_GPR_MQ, INSN2_MOD_SP): Likewise.
	(INSN2_READ_GPR_31, INSN2_READ_GP, INSN2_READ_PC): Likewise.
	(INSN2_UNCOND_BRANCH, INSN2_COND_BRANCH): Likewise.
	(INSN2_MOD_GPR_MHI, INSN2_MOD_GPR_MM, INSN2_MOD_GPR_MN): Likewise.
	(CPU_MICROMIPS): New macro.
	(M_BC1FL, M_BC1TL, M_BC2FL, M_BC2TL): New enum values.
	(M_BEQL, M_BGEZ, M_BGEZL, M_BGEZALL, M_BGTZ, M_BGTZL): Likewise.
	(M_BLEZ, M_BLEZL, M_BLTZ, M_BLTZL, M_BLTZALL, M_BNEL): Likewise.
	(M_CACHE_OB, M_JALS_1, M_JALS_2, M_JALS_A): Likewise.
	(M_LDC2_OB, M_LDL_OB, M_LDM_AB, M_LDM_OB): Likewise.
	(M_LDP_AB, M_LDP_OB, M_LDR_OB, M_LL_OB, M_LLD_OB): Likewise.
	(M_LWC2_OB, M_LWL_OB, M_LWM_AB, M_LWM_OB): Likewise.
	(M_LWP_AB, M_LWP_OB, M_LWR_OB): Likewise.
	(M_LWU_OB, M_PREF_OB, M_SC_OB, M_SCD_OB): Likewise.
	(M_SDC2_OB, M_SDL_OB, M_SDM_AB, M_SDM_OB): Likewise.
	(M_SDP_AB, M_SDP_OB, M_SDR_OB): Likewise.
	(M_SWC2_OB, M_SWL_OB, M_SWM_AB, M_SWM_OB): Likewise.
	(M_SWP_AB, M_SWP_OB, M_SWR_OB): Likewise.
	(MICROMIPSOP_MASK_MAJOR, MICROMIPSOP_SH_MAJOR): New macros.
	(MICROMIPSOP_MASK_IMMEDIATE, MICROMIPSOP_SH_IMMEDIATE): Likewise.
	(MICROMIPSOP_MASK_DELTA, MICROMIPSOP_SH_DELTA): Likewise.
	(MICROMIPSOP_MASK_CODE10, MICROMIPSOP_SH_CODE10): Likewise.
	(MICROMIPSOP_MASK_TRAP, MICROMIPSOP_SH_TRAP): Likewise.
	(MICROMIPSOP_MASK_SHAMT, MICROMIPSOP_SH_SHAMT): Likewise.
	(MICROMIPSOP_MASK_TARGET, MICROMIPSOP_SH_TARGET): Likewise.
	(MICROMIPSOP_MASK_EXTLSB, MICROMIPSOP_SH_EXTLSB): Likewise.
	(MICROMIPSOP_MASK_EXTMSBD, MICROMIPSOP_SH_EXTMSBD): Likewise.
	(MICROMIPSOP_MASK_INSMSB, MICROMIPSOP_SH_INSMSB): Likewise.
	(MICROMIPSOP_MASK_CODE, MICROMIPSOP_SH_CODE): Likewise.
	(MICROMIPSOP_MASK_CODE2, MICROMIPSOP_SH_CODE2): Likewise.
	(MICROMIPSOP_MASK_CACHE, MICROMIPSOP_SH_CACHE): Likewise.
	(MICROMIPSOP_MASK_SEL, MICROMIPSOP_SH_SEL): Likewise.
	(MICROMIPSOP_MASK_OFFSET12, MICROMIPSOP_SH_OFFSET12): Likewise.
	(MICROMIPSOP_MASK_3BITPOS, MICROMIPSOP_SH_3BITPOS): Likewise.
	(MICROMIPSOP_MASK_STYPE, MICROMIPSOP_SH_STYPE): Likewise.
	(MICROMIPSOP_MASK_OFFSET10, MICROMIPSOP_SH_OFFSET10): Likewise.
	(MICROMIPSOP_MASK_RS, MICROMIPSOP_SH_RS): Likewise.
	(MICROMIPSOP_MASK_RT, MICROMIPSOP_SH_RT): Likewise.
	(MICROMIPSOP_MASK_RD, MICROMIPSOP_SH_RD): Likewise.
	(MICROMIPSOP_MASK_FS, MICROMIPSOP_SH_FS): Likewise.
	(MICROMIPSOP_MASK_FT, MICROMIPSOP_SH_FT): Likewise.
	(MICROMIPSOP_MASK_FD, MICROMIPSOP_SH_FD): Likewise.
	(MICROMIPSOP_MASK_FR, MICROMIPSOP_SH_FR): Likewise.
	(MICROMIPSOP_MASK_RS3, MICROMIPSOP_SH_RS3): Likewise.
	(MICROMIPSOP_MASK_PREFX, MICROMIPSOP_SH_PREFX): Likewise.
	(MICROMIPSOP_MASK_BCC, MICROMIPSOP_SH_BCC): Likewise.
	(MICROMIPSOP_MASK_CCC, MICROMIPSOP_SH_CCC): Likewise.
	(MICROMIPSOP_MASK_COPZ, MICROMIPSOP_SH_COPZ): Likewise.
	(MICROMIPSOP_MASK_MB, MICROMIPSOP_SH_MB): Likewise.
	(MICROMIPSOP_MASK_MC, MICROMIPSOP_SH_MC): Likewise.
	(MICROMIPSOP_MASK_MD, MICROMIPSOP_SH_MD): Likewise.
	(MICROMIPSOP_MASK_ME, MICROMIPSOP_SH_ME): Likewise.
	(MICROMIPSOP_MASK_MF, MICROMIPSOP_SH_MF): Likewise.
	(MICROMIPSOP_MASK_MG, MICROMIPSOP_SH_MG): Likewise.
	(MICROMIPSOP_MASK_MH, MICROMIPSOP_SH_MH): Likewise.
	(MICROMIPSOP_MASK_MI, MICROMIPSOP_SH_MI): Likewise.
	(MICROMIPSOP_MASK_MJ, MICROMIPSOP_SH_MJ): Likewise.
	(MICROMIPSOP_MASK_ML, MICROMIPSOP_SH_ML): Likewise.
	(MICROMIPSOP_MASK_MM, MICROMIPSOP_SH_MM): Likewise.
	(MICROMIPSOP_MASK_MN, MICROMIPSOP_SH_MN): Likewise.
	(MICROMIPSOP_MASK_MP, MICROMIPSOP_SH_MP): Likewise.
	(MICROMIPSOP_MASK_MQ, MICROMIPSOP_SH_MQ): Likewise.
	(MICROMIPSOP_MASK_IMMA, MICROMIPSOP_SH_IMMA): Likewise.
	(MICROMIPSOP_MASK_IMMB, MICROMIPSOP_SH_IMMB): Likewise.
	(MICROMIPSOP_MASK_IMMC, MICROMIPSOP_SH_IMMC): Likewise.
	(MICROMIPSOP_MASK_IMMD, MICROMIPSOP_SH_IMMD): Likewise.
	(MICROMIPSOP_MASK_IMME, MICROMIPSOP_SH_IMME): Likewise.
	(MICROMIPSOP_MASK_IMMF, MICROMIPSOP_SH_IMMF): Likewise.
	(MICROMIPSOP_MASK_IMMG, MICROMIPSOP_SH_IMMG): Likewise.
	(MICROMIPSOP_MASK_IMMH, MICROMIPSOP_SH_IMMH): Likewise.
	(MICROMIPSOP_MASK_IMMI, MICROMIPSOP_SH_IMMI): Likewise.
	(MICROMIPSOP_MASK_IMMJ, MICROMIPSOP_SH_IMMJ): Likewise.
	(MICROMIPSOP_MASK_IMML, MICROMIPSOP_SH_IMML): Likewise.
	(MICROMIPSOP_MASK_IMMM, MICROMIPSOP_SH_IMMM): Likewise.
	(MICROMIPSOP_MASK_IMMN, MICROMIPSOP_SH_IMMN): Likewise.
	(MICROMIPSOP_MASK_IMMO, MICROMIPSOP_SH_IMMO): Likewise.
	(MICROMIPSOP_MASK_IMMP, MICROMIPSOP_SH_IMMP): Likewise.
	(MICROMIPSOP_MASK_IMMQ, MICROMIPSOP_SH_IMMQ): Likewise.
	(MICROMIPSOP_MASK_IMMU, MICROMIPSOP_SH_IMMU): Likewise.
	(MICROMIPSOP_MASK_IMMW, MICROMIPSOP_SH_IMMW): Likewise.
	(MICROMIPSOP_MASK_IMMX, MICROMIPSOP_SH_IMMX): Likewise.
	(MICROMIPSOP_MASK_IMMY, MICROMIPSOP_SH_IMMY): Likewise.
	(MICROMIPSOP_MASK_CODE, MICROMIPSOP_SH_CODE): Likewise.
	(MICROMIPSOP_MASK_CODE2, MICROMIPSOP_SH_CODE2): Likewise.
	(MICROMIPSOP_MASK_CACHE, MICROMIPSOP_SH_CACHE): Likewise.
	(MICROMIPSOP_MASK_CODE20, MICROMIPSOP_SH_CODE20): Likewise.
	(MICROMIPSOP_MASK_PERFREG, MICROMIPSOP_SH_PERFREG): Likewise.
	(MICROMIPSOP_MASK_CODE19, MICROMIPSOP_SH_CODE19): Likewise.
	(MICROMIPSOP_MASK_ALN, MICROMIPSOP_SH_ALN): Likewise.
	(MICROMIPSOP_MASK_VECBYTE, MICROMIPSOP_SH_VECBYTE): Likewise.
	(MICROMIPSOP_MASK_VECALIGN, MICROMIPSOP_SH_VECALIGN): Likewise.
	(MICROMIPSOP_MASK_DSPACC, MICROMIPSOP_SH_DSPACC): Likewise.
	(MICROMIPSOP_MASK_DSPACC_S, MICROMIPSOP_SH_DSPACC_S): Likewise.
	(MICROMIPSOP_MASK_DSPSFT, MICROMIPSOP_SH_DSPSFT): Likewise.
	(MICROMIPSOP_MASK_DSPSFT_7, MICROMIPSOP_SH_DSPSFT_7): Likewise.
	(MICROMIPSOP_MASK_SA3, MICROMIPSOP_SH_SA3): Likewise.
	(MICROMIPSOP_MASK_SA4, MICROMIPSOP_SH_SA4): Likewise.
	(MICROMIPSOP_MASK_IMM8, MICROMIPSOP_SH_IMM8): Likewise.
	(MICROMIPSOP_MASK_IMM10, MICROMIPSOP_SH_IMM10): Likewise.
	(MICROMIPSOP_MASK_WRDSP, MICROMIPSOP_SH_WRDSP): Likewise.
	(MICROMIPSOP_MASK_RDDSP, MICROMIPSOP_SH_RDDSP): Likewise.
	(MICROMIPSOP_MASK_BP, MICROMIPSOP_SH_BP): Likewise.
	(MICROMIPSOP_MASK_MT_U, MICROMIPSOP_SH_MT_U): Likewise.
	(MICROMIPSOP_MASK_MT_H, MICROMIPSOP_SH_MT_H): Likewise.
	(MICROMIPSOP_MASK_MTACC_T, MICROMIPSOP_SH_MTACC_T): Likewise.
	(MICROMIPSOP_MASK_MTACC_D, MICROMIPSOP_SH_MTACC_D): Likewise.
	(MICROMIPSOP_MASK_BBITIND, MICROMIPSOP_SH_BBITIND): Likewise.
	(MICROMIPSOP_MASK_CINSPOS, MICROMIPSOP_SH_CINSPOS): Likewise.
	(MICROMIPSOP_MASK_CINSLM1, MICROMIPSOP_SH_CINSLM1): Likewise.
	(MICROMIPSOP_MASK_SEQI, MICROMIPSOP_SH_SEQI): Likewise.
	(micromips_opcodes): New declaration.
	(bfd_micromips_num_opcodes): Likewise.

ld/testsuite/
2011-02-25  Catherine Moore  <clm@@codesourcery.com>
            Chao-ying Fu  <fu@@mips.com>
            Maciej W. Rozycki  <macro@@codesourcery.com>

	* lib/ld-lib.exp (run_dump_test): Support distinct assembler
	flags for the same source named multiple times.
	* ld-mips-elf/jalx-1.s: New test source.
	* ld-mips-elf/jalx-1.d: New test output.
	* ld-mips-elf/jalx-1.ld: New test linker script.
	* ld-mips-elf/jalx-2-main.s: New test source.
	* ld-mips-elf/jalx-2-ex.s: Likewise.
	* ld-mips-elf/jalx-2-printf.s: Likewise.
	* ld-mips-elf/jalx-2.dd: New test output.
	* ld-mips-elf/jalx-2.ld: New test linker script.
	* ld-mips-elf/mips16-and-micromips.d: New test.
	* ld-mips-elf/mips-elf.exp: Run the new tests

opcodes/
2011-02-25  Chao-ying Fu  <fu@@mips.com>
            Maciej W. Rozycki  <macro@@codesourcery.com>

	* micromips-opc.c: New file.
	* mips-dis.c (micromips_to_32_reg_b_map): New array.
	(micromips_to_32_reg_c_map, micromips_to_32_reg_d_map): Likewise.
	(micromips_to_32_reg_e_map, micromips_to_32_reg_f_map): Likewise.
	(micromips_to_32_reg_g_map, micromips_to_32_reg_l_map): Likewise.
	(micromips_to_32_reg_q_map): Likewise.
	(micromips_imm_b_map, micromips_imm_c_map): Likewise.
	(micromips_ase): New variable.
	(is_micromips): New function.
	(set_default_mips_dis_options): Handle microMIPS ASE.
	(print_insn_micromips): New function.
	(is_compressed_mode_p): Likewise.
	(_print_insn_mips): Handle microMIPS instructions.
	* Makefile.am (CFILES): Add micromips-opc.c.
	* configure.in (bfd_mips_arch): Add micromips-opc.lo.
	* Makefile.in: Regenerate.
	* configure: Regenerate.

	* mips-dis.c (micromips_to_32_reg_h_map): New variable.
	(micromips_to_32_reg_i_map): Likewise.
	(micromips_to_32_reg_m_map): Likewise.
	(micromips_to_32_reg_n_map): New macro.
@
text
@d1056 3
@


1.187
log
@	gas/
	* config/tc-mips.c (append_insn): Make sure DWARF-2 location
	information is properly adjusted for branches that get swapped.

	gas/testsuite/
	* gas/mips/loc-swap.d: New test case for DWARF-2 location with
	branch swapping.
	* gas/mips/loc-swap-dis.d: Likewise.
	* gas/mips/mips16@@loc-swap.d: Likewise, MIPS16 version.
	* gas/mips/mips16@@loc-swap-dis.d: Likewise.
	* gas/mips/loc-swap.s: Source for the new tests.
	* gas/mips/mips.exp: Run the new tests.
@
text
@d394 2
d430 1
d445 3
d485 4
d492 2
a493 1
    run_dump_test_arches "24k-branch-delay-1" [mips_arch_list_matching mips1]
d495 19
a513 10
				    [mips_arch_list_matching mips32r2 !octeon]
    run_dump_test_arches "24k-triple-stores-2" [mips_arch_list_matching mips2]
    run_dump_test_arches "24k-triple-stores-3" [mips_arch_list_matching mips3]
    run_dump_test_arches "24k-triple-stores-4" [mips_arch_list_matching mips2]
    run_dump_test_arches "24k-triple-stores-5" [mips_arch_list_matching mips1]
    run_dump_test_arches "24k-triple-stores-6" [mips_arch_list_matching mips2]
    run_dump_test_arches "24k-triple-stores-7" [mips_arch_list_matching mips2]
    run_dump_test_arches "24k-triple-stores-8" [mips_arch_list_matching mips1]
    run_dump_test_arches "24k-triple-stores-9" [mips_arch_list_matching mips1]
    run_dump_test_arches "24k-triple-stores-10" [mips_arch_list_matching mips1]
d516 1
a516 1
	    [mips_arch_list_matching mips1]
d672 2
a673 1
	run_dump_test_arches "mips16e" 	[mips_arch_list_matching mips32]
d702 1
d749 2
a750 1
					[mips_arch_list_matching mips64r2]
d792 4
d1032 7
d1045 11
@


1.186
log
@gas/
	* config/tc-mips.c (insn_uses_reg): Delete.
	(gpr_read_mask, gpr_write_mask): New functions.
	(fpr_read_mask, fpr_write_mask): Likewise.
	(insns_between, nops_for_vr4130, append_insn): Use them.

gas/testsuite/
	* gas/mips/mips16-e.d, gas/mips/mips16-f.d,
	gas/mips/mipsel16-e.d, gas/mips/mipsel16-f.d,
	gas/mips/tmips16-e.d, gas/mips/tmips16-f.d,
	gas/mips/tmipsel16-e.d, gas/mips/tmipsel16-f.d: Fix GPR mask.
	* gas/mips/reginfo-1.s, gas/mips/reginfo-1a.d,
	gas/mips/reginfo-1b.d: New tests.
	* gas/mips/mips.exp: Run them.
@
text
@d857 4
@


1.185
log
@gas/
	PR gas/12915
	* config/tc-mips.c (append_insn): Only consider hazards between the
	pre-noreorder block and ip.

gas/testsuite/
	* gas/mips/pr12915.s, gas/mips/pr12915.d: New test.
	* gas/mips/mips.exp: Run it.
@
text
@d1005 2
@


1.184
log
@gas/testsuite/
	* gas/mips/24k-branch-delay-1.d: Allow 64-bit addresses.  Stub out
	function names.
	* gas/mips/24k-triple-stores-1.d: Likewise.
	* gas/mips/24k-triple-stores-2.d: Likewise.
	* gas/mips/24k-triple-stores-3.d: Likewise.
	* gas/mips/24k-triple-stores-4.d: Likewise.
	* gas/mips/24k-triple-stores-5.d: Likewise.
	* gas/mips/24k-triple-stores-7.d: Likewise.
	* gas/mips/24k-triple-stores-8.d: Likewise.
	* gas/mips/24k-triple-stores-9.d: Likewise.
	* gas/mips/24k-triple-stores-10.d: Likewise.
	* gas/mips/24k-triple-stores-11.d: Likewise.
	* gas/mips/24k-triple-stores-6.d: Likewise.  Add -EB.
	* gas/mips/mips.exp: Only run 24k-triple-stores-11.d on ELF targets.
@
text
@d1003 2
@


1.183
log
@2011-04-20  Catherine Moore  <clm@@codesourcery.com>
            David Ung <davidu@@mips.com>

	* gas/mips/24k-branch-delay-1.d: New.
	* gas/mips/24k-branch-delay-1.s: New.
	* gas/mips/24k-triple-stores-1.d: New.
	* gas/mips/24k-triple-stores-1.s: New.
	* gas/mips/24k-triple-stores-2.d: New.
	* gas/mips/24k-triple-stores-2.s: New.
	* gas/mips/24k-triple-stores-3.d: New.
	* gas/mips/24k-triple-stores-3.s: New.
	* gas/mips/24k-triple-stores-4.s: New.
	* gas/mips/24k-triple-stores-4.d: New.
	* gas/mips/24k-triple-stores-5.d: New.
	* gas/mips/24k-triple-stores-5.s: New.
	* gas/mips/24k-triple-stores-6.d: New.
	* gas/mips/24k-triple-stores-6.s: New.
	* gas/mips/24k-triple-stores-7.d: New.
	* gas/mips/24k-triple-stores-7.s: New.
	* gas/mips/24k-triple-stores-8.d: New.
	* gas/mips/24k-triple-stores-8.s: New.
	* gas/mips/24k-triple-stores-9.d: New.
	* gas/mips/24k-triple-stores-9.s: New.
	* gas/mips/24k-triple-stores-10.d: New.
	* gas/mips/24k-triple-stores-10.s: New.
	* gas/mips/24k-triple-stores-11.d: New.
	* gas/mips/24k-triple-stores-11.s: New.
	* gas/mips/mips.exp: Invoke new tests.
@
text
@d494 4
a497 1
    run_dump_test_arches "24k-triple-stores-11" [mips_arch_list_matching mips1]
@


1.182
log
@	opcodes/
	* mips-opc.c (mips_builtin_opcodes): Correct register use
	annotation of "alnv.ps".

	gas/testsuite/
	* gas/mips/alnv_ps-swap.d: New test for ALNV.PS instruction
	branch swapping.
	* gas/mips/alnv_ps-swap.s: Source for the new test.
	* gas/mips/mips.exp: Run the new test.
@
text
@d482 13
@


1.181
log
@	gas/
	* config/tc-mips.c (append_insn): Disable branch relaxation for
	DSP instructions.

	gas/testsuite/
	* gas/mips/relax-bposge.l: New test for DSP branch relaxation.
	* gas/mips/relax-bposge.s: Source for the new test.
	* gas/mips/mips.exp: Run the new test.
@
text
@d982 3
@


1.180
log
@	gas/
	* config/tc-mips.c (RELAX_BRANCH_ENCODE): Encode the temporary
	register to use.
	(RELAX_BRANCH_UNCOND): Adjust accordingly.
	(RELAX_BRANCH_LIKELY): Likewise.
	(RELAX_BRANCH_LINK): Likewise.
	(RELAX_BRANCH_TOOFAR): Likewise.
	(RELAX_BRANCH_AT): New macro.
	(append_insn): Encode the temporary register to use in standard
	MIPS branch relaxation.
	(relaxed_branch_length): Update according to changes to
	RELAX_BRANCH_ENCODE.
	(md_convert_frag): Use the encoded register as the temporary.

	gas/testsuite/
	* gas/mips/relax-at.d: New test for branch relaxation with .set
	at.
	* gas/mips/relax.s: Update to support the new test.
	* gas/mips/relax.l: Update accordingly.
	* gas/mips/relax.d: Update for multi-arch invocation.
	* gas/mips/mips.exp: Run the new test.  Adjust to run "relax"
	across all applicable architectures.
@
text
@d710 2
@


1.179
log
@	gas/
	* config/tc-mips.c (mips_fix_adjustable): On REL targets also
	reject PC-relative relocations.

	gas/testsuite/
	* gas/mips/branch-misc-2.d: Adjust for relocation change.
	* gas/mips/branch-misc-2pic.d: Likewise.
	* gas/mips/branch-misc-4.d: New test for PC-relative relocation
	overflow.
	* gas/mips/branch-misc-4-64.d: Likewise.
	* gas/mips/branch-misc-4.s: Source for the new tests.
	* testsuite/gas/mips/mips.exp: Run the new tests.
@
text
@d705 2
a706 1
    run_dump_test "relax"
@


1.178
log
@include/opcode/
2010-12-14  Mingjie Xing  <mingjie.xing@@gmail.com>

	* mips.h (OP_*_OFFSET_A, OP_*_OFFSET_B, OP_*_OFFSET_C)
	(OP_*_RZ, OP_*_FZ, INSN2_M_FP_D, INSN2_WRITE_GPR_Z, INSN2_WRITE_FPR_Z)
	(INSN2_READ_GPR_Z, INSN2_READ_FPR_Z, INSN2_READ_GPR_D): Define.

opcodes/
2010-12-14  Mingjie Xing  <mingjie.xing@@gmail.com>

	* mips-opc.c (WR_z, WR_Z, RD_z, RD_Z, RD_d): Define.
	(mips_builtin_opcodes): Add loongson3a specific instructions.
	* mips-dis.c (print_insn_args): Handle the new arguments +a|b|c|z|Z.

gas/
2010-12-14  Mingjie Xing  <mingjie.xing@@gmail.com>

	* config/tc-mips.c (insn_uses_reg): Handle the new flags
	INSN2_READ_FPR_Z, INSN2_READ_GPR_D and INSN2_READ_GPR_Z.
	(append_insn): Handle delay-slot filling for the new flags.
	(validate_mips_insn): Handle the new arguments +a|b|c|z|Z.
	(mips_ip): Handle the new arguments +a|b|c|z|Z.

gas/testsuite/
2010-12-14  Mingjie Xing  <mingjie.xing@@gmail.com>

	* gas/mips/loongson-3a-2.s, gas/mips/loongson-3a-2.d,
	gas/mips/loongson-3a-3.s, gas/mips/loongson-3a-3.d: New tests.
	* gas/mips/mips.exp: Run them.
@
text
@d833 5
@


1.177
log
@opcodes/
2010-12-03 Mingming Sun <mingm.sun@@gmail.com>

	* mips-opc.c: (mips_builtin_opcodes): Add loongson3a mul/div and
	fixed point instructions.

gas/testsuite/
2010-12-03 Mingming Sun <mingm.sun@@gmail.com>

	* gas/mips/loongson-3a.s, gas/mips/loongson-3a.d: New test.
	* gas/mips/mips.exp: Run it.
@
text
@d919 2
@


1.176
log
@	gas/
	* config/tc-mips.c (file_ase_mips16): Adjust comment.
	(append_insn): Update file_ase_mips16.
	(mips_after_parse_args): Don't set file_ase_mips16 here.

	gas/testsuite/
	* gas/mips/elf_ase_mips16.d: Update test for new MIPS16 ASE flag
	semantics.
	* gas/mips/elf_ase_mips16-2.d: New test.
	* gas/mips/nop.s: Source for the new test.
	* gas/mips/mips.exp: Run the new test.

	binutils/testsuite/
	* lib/binutils-common.exp (regexp_diff): Implement inverse
	matching, requested by `!'.
@
text
@d918 2
@


1.175
log
@gas/
	* config/tc-mips.c (macro_build): Remove gas_assert from 'o' case.
	Use a restricted gas_assert for 'i' and 'j'.

gas/testsuite/
	* gas/mips/elf-rel28.s, gas/mips/elf-rel28-n32.d,
	gas/mips/elf-rel28-n64.d: New test.
	* gas/mips/mips.exp: Run it.
@
text
@d746 4
a749 1
	if { !$no_mips16 } { run_dump_test "elf_ase_mips16" }
@


1.174
log
@	* gas/mips/mips.exp: Simplify enabling of MIPS16 testing.
@
text
@d813 5
@


1.174.2.1
log
@gas/
	* config/tc-mips.c (macro_build): Remove gas_assert from 'o' case.
	Use a restricted gas_assert for 'i' and 'j'.

gas/testsuite/
	* gas/mips/elf-rel28.s, gas/mips/elf-rel28-n32.d,
	gas/mips/elf-rel28-n64.d: New test.
	* gas/mips/mips.exp: Run it.
@
text
@a812 5
	if $has_newabi {
	    run_dump_test "elf-rel28-n32"
	    run_dump_test "elf-rel28-n64"
	}

@


1.173
log
@	* gas/mips/at-1.d: Handle ECOFF relocations.
	* gas/mips/eret-1.d: Handle ECOFF.
	* gas/mips/eret-2.d: Likewise.
	* gas/mips/eret-3.d: Likewise.
	* gas/mips/mips.exp: Only run "aent" for ELF.
@
text
@a421 1
    set no_mips16 0
d427 1
a438 3
    if { $ecoff } {
	set no_mips16 1
    }
@


1.172
log
@	* gas/mips/ld.s: Adjust to let SD, L.D, S.D, LDC1 and SDC1
	macros to be tested, according to the "tsd", "tl_d", "ts_d",
	"tldc1" and "tsdc1" symbols.
	* gas/mips/sd.d: New test.
	* gas/mips/ecoff@@sd.d: Likewise, ECOFF version.
	* gas/mips/mips1@@ecoff@@sd.d: Likewise, MIPS I/ECOFF version.
	* gas/mips/r3000@@ecoff@@sd.d: Likewise, R3000/ECOFF version.
	* gas/mips/r3900@@ecoff@@sd.d: Likewise, R3900/ECOFF version.
	* gas/mips/mips2@@ecoff@@sd.d: Likewise, MIPS II/ECOFF version.
	* gas/mips/mips32@@ecoff@@sd.d: Likewise, MIPS32/ECOFF version.
	* gas/mips/mips32r2@@ecoff@@sd.d: Likewise, MIPS32r2/ECOFF
	version.
	* gas/mips/sd-forward.d: New test.
	* gas/mips/ecoff@@sd-forward.d: Likewise, ECOFF version.
	* gas/mips/mips1@@ecoff@@sd-forward.d: Likewise, MIPS I/ECOFF
	version.
	* gas/mips/r3000@@ecoff@@sd-forward.d: Likewise, R3000/ECOFF
	version.
	* gas/mips/r3900@@ecoff@@sd-forward.d: Likewise, R3900/ECOFF
	version.
	* gas/mips/mips2@@ecoff@@sd-forward.d: Likewise, MIPS II/ECOFF
	version.
	* gas/mips/mips32@@ecoff@@sd-forward.d: Likewise, MIPS32/ECOFF
	version.
	* gas/mips/mips32r2@@ecoff@@sd-forward.d: Likewise, MIPS32r2/ECOFF
	version.
	* gas/mips/l_d.d: New test.
	* gas/mips/mips1@@l_d.d: Likewise, MIPS I version.
	* gas/mips/r3000@@l_d.d: Likewise, R3000 version.
	* gas/mips/r3900@@l_d.d: Likewise, R3900 version.
	* gas/mips/l_d-forward.d: New test.
	* gas/mips/mips1@@l_d-forward.d: Likewise, MIPS I version.
	* gas/mips/r3000@@l_d-forward.d: Likewise, R3000 version.
	* gas/mips/r3900@@l_d-forward.d: Likewise, R3900 version.
	* gas/mips/s_d.d: New test.
	* gas/mips/mips1@@s_d.d: Likewise, MIPS I version.
	* gas/mips/r3000@@s_d.d: Likewise, R3000 version.
	* gas/mips/r3900@@s_d.d: Likewise, R3900 version.
	* gas/mips/s_d-forward.d: New test.
	* gas/mips/mips1@@s_d-forward.d: Likewise, MIPS I version.
	* gas/mips/r3000@@s_d-forward.d: Likewise, R3000 version.
	* gas/mips/r3900@@s_d-forward.d: Likewise, R3900 version.
	* gas/mips/ldc1.d: New test.
	* gas/mips/ldc1-forward.d: Likewise.
	* gas/mips/sdc1.d: Likewise.
	* gas/mips/sdc1-forward.d: Likewise.
	* gas/mips/sd-n32.d: Likewise.
	* gas/mips/sd-n64.d: Likewise.
	* gas/mips/sd-f-n32.d: Likewise.
	* gas/mips/sd-f-n64.d: Likewise.
	* gas/mips/l_d-n32.d: Likewise.
	* gas/mips/l_d-n64.d: Likewise.
	* gas/mips/l_d-f-n32.d: Likewise.
	* gas/mips/l_d-f-n64.d: Likewise.
	* gas/mips/s_d-n32.d: Likewise.
	* gas/mips/s_d-n64.d: Likewise.
	* gas/mips/s_d-f-n32.d: Likewise.
	* gas/mips/s_d-f-n64.d: Likewise.
	* gas/mips/ldc1-n32.d: Likewise.
	* gas/mips/ldc1-n64.d: Likewise.
	* gas/mips/ldc1-f-n32.d: Likewise.
	* gas/mips/ldc1-f-n64.d: Likewise.
	* gas/mips/sdc1-n32.d: Likewise.
	* gas/mips/sdc1-n64.d: Likewise.
	* gas/mips/sdc1-f-n32.d: Likewise.
	* gas/mips/sdc1-f-n64.d: Likewise.
	* gas/mips/mips.exp: Run the new tests.
@
text
@d826 2
a966 2

    run_dump_test_arches "aent"		[mips_arch_list_matching mips1]
@


1.171
log
@	* gas/mips/ld.s: Adjust to let data objects be only
	defined/declared (as appropriate) at the end of assembly, based
	on the presence or not of the "forward" symbol.
	* gas/mips/ld-forward.d: New test.
	* gas/mips/mips1@@ld-forward.d: Likewise. MIPS I version.
	* gas/mips/r3000@@ld-forward.d: Likewise, R3000 version.
	* gas/mips/ecoff@@ld-forward.d: Likewise, ECOFF version.
	* gas/mips/r3900@@ecoff@@ld-forward.d: Likewise, R3900/ECOFF
	version.
	* gas/mips/mips2@@ecoff@@ld-forward.d: Likewise, MIPS II/ECOFF
	version.
	* gas/mips/mips32@@ecoff@@ld-forward.d: Likewise, MIPS32/ECOFF
	version.
	* gas/mips/mips32r2@@ecoff@@ld-forward.d: Likewise, MIPS32r2/ECOFF
	version.
	* gas/mips/ld-n32-forward.d: New test.
	* gas/mips/ld-n64-forward.d: Likewise.
	* gas/mips/mips.exp: Run the new tests.
@
text
@d520 15
d540 20
d564 20
@


1.170
log
@	* gas/mips/ld-n32.d: New test.
	* gas/mips/ld-n64.d: Likewise.
	* gas/mips/mips.exp: Run the new tests.
@
text
@d518 2
d523 2
d527 2
@


1.169
log
@	* gas/mips/ld.d: Rename to...
	* gas/mips/mips1@@ld.d: ... this.
	* gas/mips/ld-ilocks.d: Rename to...
	* gas/mips/ld.d: ... this.
	* gas/mips/r3000@@ld.d: New test, R3000 version.
	* gas/mips/ecoff@@ld.d: Likewise, ECOFF version.
	* gas/mips/r3900@@ecoff@@ld.d: Likewise, R3900/ECOFF version.
	* gas/mips/mips2@@ecoff@@ld.d: Likewise, MIPS II/ECOFF version.
	* gas/mips/mips32@@ecoff@@ld.d: Likewise, MIPS32/ECOFF version.
	* gas/mips/mips32r2@@ecoff@@ld.d: Likewise, MIPS32r2/ECOFF version.
	* gas/mips/mips.exp: Remove "ld-ilocks" and run "ld" over all
	architectures matching "mips1".
@
text
@d518 6
@


1.168
log
@	* gas/mips/mips.exp (run_dump_test_arch): Check for the presence
	of a file-format-specific test too.
	(run_dump_test_arches): Pull elf, ecoff and aout variables for
	use by the above.
@
text
@d517 1
a517 4
	run_dump_test_arches "ld" \
				[mips_arch_list_matching mips1 !gpr_ilocks]
	run_dump_test_arches "ld-ilocks" \
				[mips_arch_list_matching gpr_ilocks !mips2]
@


1.167
log
@	* gas/mips/ld.s: Remove ".set mips1".
	* gas/mips/ld.d: Remove "-march=r4000" and "-mmips:4000" from
	gas/objdump options.
	* gas/mips/ld-ilocks.d: Add "-32" to gas options.
	* gas/mips/mips.exp: Run the two cases with run_dump_test_arches.
@
text
@d289 12
d302 1
d305 1
d307 6
a312 3
    set archname "${proparch}@@${name}"
    if { [file exists "$srcdir/$subdir/${archname}.d"] } {
	set name $archname
d329 1
@


1.166
log
@	* gas/mips/ld.s: Remove MIPS III bits.
	* gas/mips/ld.d: Adjust accordingly.
	* gas/mips/ld-ilocks.d: Likewise.
	* gas/mips/ld-ilocks-addr32.d: Remove file.
	* gas/mips/mips.exp: Adjust accordingly.
@
text
@a407 1
    set gpr_ilocks [expr [istarget mipstx39*-*-*]]
d499 4
a502 5
        if !$gpr_ilocks {
            run_dump_test "ld"
        } else { 
	    run_dump_test "ld-ilocks"
        }
@


1.165
log
@	* gas/mips/mips.exp (run_dump_test_arch): Get the name of the
	architecture to check against for an architecture-specific test
	from the properties instead of the name passed.
@
text
@d503 1
a503 5
            if !$addr32 {
                run_dump_test "ld-ilocks"
            } else {
                run_dump_test "ld-ilocks-addr32"
            }
@


1.164
log
@2010-10-04  David Daney  <ddaney@@caviumnetworks.com>

	* config/tc-mips.c (mips_fix_cn63xxp1): New variable.
	(mips_ip):  Add errata work around when mips_fix_cn63xxp1 set.
	(OPTION_FIX_CN63XXP1, OPTION_NO_FIX_CN63XXP1): New enum options
	enumerations.
	(md_longopts): Add options for -mfix-cn63xxp1 and -mno-fix-cn63xxp1.
	(md_parse_option): Handle OPTION_FIX_CN63XXP1 and
	OPTION_NO_FIX_CN63XXP1.
	(md_show_usage): Add documentation for -mfix-cn63xxp1.
	* doc/c-mips.texi (-mfix-cn63xxp1, -mno-fix-cn63xxp1): Document
	the new options.

2010-10-04  David Daney  <ddaney@@caviumnetworks.com>

	* gas/mips/mips.exp (octeon-pref): Run the new test.
	* gas/mips/octeon-pref.s: New test.
	* gas/mips/octeon-pref.d: New expected results for the new test.
@
text
@d197 6
a202 3
# architecture data array.  If INCLUDE_GPRSIZE is non-zero, an additional
# "gpr32" or "gpr64" property will be returned as part of the list based
# on the architecture's GPR size.
d292 2
a293 1
    set archname "${arch}@@${name}"
@


1.163
log
@	opcodes/
	* mips-opc.c (mips_builtin_opcodes): Add "sync_acquire",
	"sync_mb", "sync_release", "sync_rmb" and "sync_wmb".

	gas/testsuite/
	* gas/mips/mips32r2-sync.d: New test for MIPS32r2 "sync"
	instruction variants.
	* gas/mips/octeon@@mips32r2-sync.d: Likewise, Octeon version.
	* gas/mips/mips32r2-sync.s: Source for the new test.
	* gas/mips/mips.exp: Run the new test.
@
text
@d834 1
@


1.162
log
@	gas/
	* config/tc-mips.c (macro)[M_JAL_1, M_JAL_2]: Handle the JALR
	delay slot in the noreorder mode with the o32 ABI.

	gas/testsuite/
	* gas/mips/jal-svr4pic-noreorder.d: New test case.
	* gas/mips/mips1@@jal-svr4pic-noreorder.d: New test
	subarchitecture.
	* gas/mips/r3000@@jal-svr4pic-noreorder.d: Likewise.
	* gas/mips/jal-svr4pic-noreorder.s: Source for the new test
	case.
	* gas/mips/mips.exp: Run the new test case.
@
text
@d880 2
@


1.161
log
@	* gas/mips/jal-svr4pic.d: Rename to...
	* gas/mips/mips1@@jal-svr4pic.d: ... this.
	* gas/mips/r3000@@jal-svr4pic.d: New test subarchitecture.
	* gas/mips/jal-svr4pic.d: New default subarchitecture patterns.
	* gas/mips/mips.exp: Run jal-svr4pic with run_dump_test_arches
	rather than run_dump_test.
@
text
@d468 2
@


1.160
log
@	gas/
	* config/tc-mips.c (mips_frob_file): Use symbol_same_p to match
	symbols.

	gas/testsuite/
	* gas/mips/elf-rel27.d: New test for HI16/LO16 relocation
	pairing.
	* gas/mips/elf-rel27.s: Source for the new test.
	* gas/mips/mips.exp: Create "mips16" architecture.  Adjust
	conditions involving negated properties throughout to require
	"mips1" as appropriate.  Run the new test.
	(mips_arch_destroy): New procedure.
@
text
@d465 4
a468 1
    if $elf { run_dump_test "jal-svr4pic" }
@


1.159
log
@	* gas/mips/mips.exp (run_dump_test_arch): Check for the presence
	of an architecture-specific test first and use it if found,
	before falling back to the generic one.
@
text
@d149 13
d370 2
d421 3
d477 1
a477 1
	run_dump_test_arches "lb"	[mips_arch_list_matching !mips2]
d480 2
a481 1
	run_dump_test_arches "lb-svr4pic" [mips_arch_list_matching !gpr_ilocks]
d518 1
a518 1
    run_dump_test_arches "rol"		[mips_arch_list_matching !ror]
d538 2
a539 1
    run_dump_test_arches "ulw2-eb"	[mips_arch_list_matching !gpr_ilocks]
d541 2
a542 1
    run_dump_test_arches "ulw2-el"	[mips_arch_list_matching !gpr_ilocks]
d729 2
@


1.158
log
@	* gas/mips/mips4-fp.d, gas/mips/mips4-fp.s: Remove checks for
	branch-likely instructions and place them...
	* gas/mips/mips4-branch-likely.d, gas/mips/mips4-branch-likely.s:
	... in this new test.
	* gas/mips/mips4-fp.l: Update accordingly.
	* gas/mips/mips4-branch-likely.l: New stderr output for the new
	test.
	* gas/mips/mips.exp (mips4-branch-likely): Run a dump test and
	a list test with mips4-branch-likely similarly to mips4-fp.
@
text
@d274 6
a279 1
    global subdir
@


1.157
log
@	* gas/mips/beq.d, gas/mips/beq.s: Remove checks for
	branch-likely instructions.
	* gas/mips/bge.d, gas/mips/bge.s: Likewise.
	* gas/mips/bgeu.d, gas/mips/bgeu.s: Likewise.
	* gas/mips/blt.d, gas/mips/blt.s: Likewise.
	* gas/mips/bltu.d, gas/mips/bltu.s: Likewise.
	* gas/mips/branch-likely.d, gas/mips/branch-likely.s: New test,
	collecting checks for branch-likely instructions removed from
	the above.
	* gas/mips/mips.exp: Run the new test and update the
	constraints for the updated tests to include MIPS I.
@
text
@d487 4
@


1.156
log
@	gas/
	* config/tc-mips.c (is_opcode_valid): Remove expansionp.
	(macro_build): Change invocation of is_opcode_valid.
	(mips_ip): Likewise.

	gas/testsuite/
	* gas/mips/mips-no-jalx.l: Delete.
	* gas/mips/mips-no-jalx.s: Delete.
	* gas/mips/mips-jalx-2.d: New.
	* gas/mips/mips-jalx-2.s: New.
	* gas/mips/mips.exp (mips-jalx-2): Run new test.
	(mips-no-jalx): Remove deleted test.

	include/
	* opcode/mips.h (INSN_MIPS16): Remove.

	opcodes/
	* mips-dis.c (mips_arch): Remove INSN_MIPS16.
	* mips-opc.c (I16): Remove.
	(mips_builtin_op): Reclassify jalx.
@
text
@d415 6
a420 7
    # XXX FIXME: the following tests require -mips2 disasm for
    # branch-likely instructions.  They should be split.
    run_dump_test_arches "beq"		[mips_arch_list_matching mips2]
    run_dump_test_arches "bge"		[mips_arch_list_matching mips2]
    run_dump_test_arches "bgeu"		[mips_arch_list_matching mips2]
    run_dump_test_arches "blt"		[mips_arch_list_matching mips2]
    run_dump_test_arches "bltu"		[mips_arch_list_matching mips2]
@


1.155
log
@        * config/tc-mips.c (mips_fix_loongson2f, mips_fix_loongson2f_nop,
        mips_fix_loongson2f_jump): New variables.
        (md_longopts): Add New options -mfix-loongson2f-nop/jump,
        -mno-fix-loongson2f-nop/jump.
        (md_parse_option): Initialize variables via above options.
        (options): New enums for the above options.
        (md_begin): Initialize nop_insn from LOONGSON2F_NOP_INSN.
        (fix_loongson2f, fix_loongson2f_nop, fix_loongson2f_jump):
        New functions.
        (append_insn): call fix_loongson2f().
        (mips_handle_align): Replace the implicit nops.
        * config/tc-mips.h (MAX_MEM_FOR_RS_ALIGN_CODE): Modified
        for the new mips_handle_align().
        * doc/c-mips.texi: Document the new options.

        * gas/mips/loongson-2f-2.s: New test of -mfix-loongson2f-nop.
        * gas/mips/loongson-2f-2.d: Likewise.
        * gas/mips/loongson-2f-3.s: New test of -mfix-loongson2f-jump.
        * gas/mips/loongson-2f-3.d: Likewise.
        * gas/mips/mips.exp: Run the new tests.

        * opcode/mips.h (LOONGSON2F_NOP_INSN): New macro.
@
text
@d529 1
a536 1
    run_list_test "mips-no-jalx" "-32"
@


1.154
log
@	gas/
	* config/tc-mips.c (s_mips_ent): Also set BSF_FUNCTION for
	".aent".

	gas/testsuite/
	* gas/mips/aent.d: New test.
	* gas/mips/aent.s: Source for the new test.
	* gas/mips/mips.exp: Run it.
@
text
@d792 2
@


1.153
log
@	* gas/mips/mips.exp: Fix a typo.
@
text
@d844 2
@


1.152
log
@gas/
	* config/tc-mips.c (MIPS_JALR_HINT_P): Take an expr argument.
	Require the target to be a bare symbol on targets with
	in-place addends.
	(macro_build_jalr): Update accordingly.
	(mips_fix_adjustable): Don't reduce R_MIPS_JALRs on targets
	with in-place addends.

gas/testsuite/
	* gas/mips/jalr2.s, gas/mips/jalr2.d: New test.
	* gas/mips/jal-svr4pic.d: Don't expect R_MIPS_JALRs to be reduced.
	* gas/mips/jal-xgot.d: Likewise.
	* gas/mips/mips-abi32-pic2.d: Likewise.
	* gas/mips/mips.exp: Run it.
@
text
@d88 1
a88 1
    # Catch becuase the variable won't be set the first time through.
@


1.151
log
@2009-05-26  Catherine Moore  <clm@@codesourcery.com>

            gas/
            * config/tc-mips.c (check_for_24k_errata): Remove.
            (md_mips_end): Remove call to check_for_24k_errata.
            (start_noreorder): Likewise.
            (s_change_sec): Likewise.
            (s_change_section): Likewise.
            (insns_between): Add 24k errata checks.
            (append_insn): Remove declaration and references to nhdx_24k.
            Remove calls to check_for_24k_errata.

            gas/testsuite:
            * eret.s, eret.d eret.l: Remove.
            * eret-1.s, eret-1.d: New.
            * eret-2.s, eret-2.d: New.
            * eret-3.s, eret-3.d: New.
            * mips.exp: Run new tests.  Remove old tests.
@
text
@d709 1
@


1.151.4.1
log
@gas/
	* config/tc-mips.c (MIPS_JALR_HINT_P): Take an expr argument.
	Require the target to be a bare symbol on targets with
	in-place addends.
	(macro_build_jalr): Update accordingly.
	(mips_fix_adjustable): Don't reduce R_MIPS_JALRs on targets
	with in-place addends.

gas/testsuite/
	* gas/mips/jalr2.s, gas/mips/jalr2.d: New test.
	* gas/mips/jal-svr4pic.d: Don't expect R_MIPS_JALRs to be reduced.
	* gas/mips/jal-xgot.d: Likewise.
	* gas/mips/mips-abi32-pic2.d: Likewise.
	* gas/mips/mips.exp: Run it.
@
text
@a708 1
	run_dump_test "jalr2"
@


1.150
log
@2009-04-09  Catherine Moore  <clm@@codesourcery.com>

        * config/tc-mips.c (mips_fix_24k): Declare.
        (check_for_24k_errata): New.
        (mips_cleanup): Call check_for_24k_errata.
        (start_noreorder): Likewise.
        (md_mips_end): Likewise.
        (s_change_sec): Likewise.
        (s_change_section): Likewise.
        (append_insn): Call check_for_24k_errata.  Prevent
        ERET/DERET instructions from being moved into delay
        slots.
        (OPTION_FIX_24K): New.
        (OPTION_NO_FIX_24k) New.
        (md_longopts): Add "mfix-24k" and "mno-fix-24k".
        (md_parse_option): Handle fix-24k options.
        (md_show_usage): Display fix-24k options.
        * doc/c-mips.texi: Document.
        * testsuite/gas/mips/mips.exp: Run new tests.
        * testsuite/gas/mips/eret.s: New test.
        * testsuite/gas/mips/eret.d: New test output.
        * testsuite/gas/mips/eret.l: New test output.
@
text
@d439 3
a441 2
    run_dump_test "eret"
    run_list_test "eret" "-mfix-24k -march=24kc" "MIPS eret warnings"
@


1.149
log
@bfd:
2009-02-03  Sandip Matte  <sandip@@rmicorp.com>

	* aoutx.h (NAME (aout, machine_type)): Handle bfd_mach_mips_xlr.
	* archures.c (bfd_mach_mips_xlr): Define.
	* bfd-in2.h: Regenerate.
	* cpu-mips.c (I_xlr): Define.
	(arch_info_struct): Add XLR entry.
	* elfxx-mips.c (_bfd_elf_mips_mach): Handle E_MIPS_MACH_XLR.
	(mips_set_isa_flags): Handle bfd_mach_mips_xlr
	(mips_mach_extensions): Add XLR entry.

binutils:
2009-02-03  Sandip Matte  <sandip@@rmicorp.com>

	* readelf.c (get_machine_flags): Handle E_MIPS_MACH_XLR.

gas:
2009-02-03  Sandip Matte  <sandip@@rmicorp.com>

	* config/tc-mips.c (macro): Handle M_MSGSND, M_MSGLD, M_MSGLD_T,
	M_MSGWAIT and M_MSGWAIT_T.
	(mips_cpu_info_table): Add XLR entry.
	* doc/c-mips.texi (-march): Document xlr.

gas/testsuite:
2009-02-03  Sandip Matte  <sandip@@rmicorp.com>

	* gas/mips/mips.exp (xlr): New architecture.
	(xlr-ext): Run test.
	* gas/mips/xlr-ext.d, gas/mips/xlr-ext.s: New.

include/elf:
2009-02-03  Sandip Matte  <sandip@@rmicorp.com>

	* mips.h (E_MIPS_MACH_XLR): Define.

include/opcode:
2009-02-03  Sandip Matte  <sandip@@rmicorp.com>

	* mips.h (INSN_XLR): Define.
	(INSN_CHIP_MASK): Update.
	(CPU_XLR): Define.
	(OPCODE_IS_MEMBER): Update.
	(M_MSGSND, M_MSGLD, M_MSGLD_T, M_MSGWAIT, M_MSGWAIT_T): Define.

opcodes:
2009-02-03  Sandip Matte  <sandip@@rmicorp.com>

	* mips-dis.c (mips_cp0_names_xlr, mips_cp0sel_names_xlr): Define.
	(mips_arch_choices): Add XLR entry.
	* mips-opc.c (XLR): Define.
	(mips_builtin_opcodes): Add XLR instructions.
@
text
@d439 3
@


1.148
log
@        * config/tc-mips.c (append_insn): Cope with a complex reloc
        sequence containing an unsupported reloc type.
        (enum options): Replace computed #define's constants for option
        numbers with this enum.
        (struct md_longopts): Use the enum.  Allow OPTION_32 in a non-ELF
        environment.
        (md_parse_option): Allow -32 in a non-ELF environment.

        * gas/lib/gas-defs.exp: Update description of run_dump_test proc.

        * gas/mips/dli.d: Pass -64 to gas.
        * gas/mips/mips64-mips3d-incl.d: Likewise.
        * gas/mips/octeon.d: Likewise.
        * gas/mips/sb1-ext-mdmx.d: Likewise.
        * gas/mips/sb1-ext-ps.d: Likewise.
        * gas/mips/e32el-rel2.s: Pass -march=mips3 to gas.
        Update expected relocs.
        * gas/mips/ld-ilocks-addr32.d: Do not run for tx39 targets.
        * gas/mips/mips.exp: Remove 'ilocks' variable.
        Add ecoff targets to 'addr32' variable.
        Set 'no_mips16' for ecoff targets.
        Do not run div-ilocks or mul-ilocks test variants.
        * gas/mips/mips16-intermix.d: Use nm instead of objdump so that
        the symbol table output is sorted.  Update expecetd output.
@
text
@d367 2
d587 1
@


1.147
log
@	* config/tc-mips.c (COP_INSN): Change logic to always return false
	for FP instructions.

testsuite/
	* gas/mips/mips1-fp.s, testsuite/gas/mips/mips1-fp.d,
	testsuite/gas/mips/mips1-fp.l: New tests.
	* gas/mips/mips.exp: Run them.
@
text
@a381 1
    set ilocks [istarget mipstx39*-*-*]
d383 1
a383 1
    set addr32 [expr [istarget mipstx39*-*-*] || [istarget mips-*-linux*] || [istarget mipsel-*-linux*]]
d396 4
a399 1

d427 1
a428 5
    if $ilocks {
	run_dump_test "div-ilocks"
    } else {
	run_dump_test "div"
    }
d483 1
a483 5
    if $ilocks {
	run_dump_test "mul-ilocks"
    } else {
	run_dump_test "mul"
    }
@


1.146
log
@2008-11-06  Chao-ying Fu  <fu@@mips.com>

	* gas/mips/mips32-sync.d, gas/mip/mips32-sync.s: New tests.
	* gas/mips/mips.exp: Run them.
@
text
@d401 3
@


1.145
log
@gas/
	* config/tc-mips.h (DWARF2_FDE_RELOC_SIZE): Define.

gas/testsuite/
	* gas/mips/cfi-n64-1.s, gas/mips/cfi-n64-1.d: New test.
	* gas/mips/mips.exp: Run it.
@
text
@d836 2
@


1.145.2.1
log
@	* config/tc-mips.c (NO_ISA_COP): New macro.
	(COP_INSN): New macro.
	(is_opcode_valid): Use them.
	(macro) <ld_st>: Use them.  Don't accept coprocessor load store
	insns based on the ISA if CPU is NO_ISA_COP.
	<copz>: Likewise for coprocessor operations.

testsuite/
	* gas/mips/mips1-fp.s, gas/mips/mips1-fp.d, gas/mips/mips1-fp.l:
	New tests.
	* gas/mips/mips.exp: Run them.
@
text
@a400 3
    run_dump_test_arches "mips1-fp"	[mips_arch_list_matching mips1]
    run_list_test_arches "mips1-fp" "-32 -msoft-float" \
					[mips_arch_list_matching mips1]
@


1.144
log
@2008-08-08  Richard Sandiford  <rdsandiford@@googlemail.com>
	    Daniel Jacobowitz  <dan@@codesourcery.com>
	    Catherine Moore  <clm@@codesourcery.com>
	    Mark Shinwell  <shinwell@@codesourcery.com>
	    Maxim Kuvyrkov  <maxim@@codesourcery.com>

	* elf32-mips.c (mips_vxworks_copy_howto_rela): Replace with...
	(elf_mips_copy_howto): ...this howto.  Clear the size fields.
	(mips_vxworks_jump_slot_howto_rela): Replace with...
	(elf_mips_jump_slot_howto): ...this howto.
	(bfd_elf32_bfd_reloc_type_lookup): Handle BFD_RELOC_MIPS_COPY
	and BFD_RELOC_MIPS_JUMP_SLOT.
	(bfd_elf32_bfd_reloc_name_lookup): Handle "R_MIPS_COPY" and
	"R_MIPS_JUMP_SLOT".
	(mips_elf32_rtype_to_howto): Handle R_MIPS_COPY and R_MIPS_JUMP_SLOT.
	(elf_backend_plt_readonly): Define.
	(elf_backend_plt_sym_val): Define for non-VxWorks targets.
	(mips_vxworks_bfd_reloc_type_lookup): Delete.
	(mips_vxworks_bfd_reloc_name_lookup): Likewise.
	(mips_vxworks_rtype_to_howto): Likewise.
	(elf_backend_want_dynbss): Don't define for VxWorks.
	(elf_backend_plt_readonly): Likewise.
	(bfd_elf32_bfd_reloc_type_lookup): Likewise.
	(bfd_elf32_bfd_reloc_name_lookup): Likewise.
	(elf_backend_mips_rtype_to_howto): Likewise.
	(elf_backend_adjust_dynamic_symbol): Likewise.
	(elf_backend_got_symbol_offset): Don't define.
	* elfn32-mips.c (elf_mips_copy_howto, elf_mips_jump_slot_howto): New.
	(bfd_elf32_bfd_reloc_type_lookup): Handle BFD_RELOC_MIPS_COPY
	and BFD_RELOC_MIPS_JUMP_SLOT.
	(bfd_elf32_bfd_reloc_name_lookup): Handle "R_MIPS_COPY" and
	"R_MIPS_JUMP_SLOT".
	(mips_elf32_n32_rtype_to_howto): Handle R_MIPS_COPY and
	R_MIPS_JUMP_SLOT.
	(elf_backend_rela_plts_and_copies_p, elf_backend_plt_readonly)
	(elf_backend_plt_sym_val): Define.
	* elf64-mips.c (elf_mips_copy_howto, elf_mips_jump_slot_howto): New.
	(bfd_elf64_bfd_reloc_type_lookup): Handle BFD_RELOC_MIPS_COPY
	and BFD_RELOC_MIPS_JUMP_SLOT.
	(bfd_elf64_bfd_reloc_name_lookup): Handle "R_MIPS_COPY" and
	"R_MIPS_JUMP_SLOT".
	(mips_elf64_rtype_to_howto): Handle R_MIPS_COPY and R_MIPS_JUMP_SLOT.
	(elf_backend_rela_plts_and_copies_p, elf_backend_plt_readonly)
	(elf_backend_plt_sym_val): Define.
	* elfxx-mips.h (_bfd_mips_vxworks_adjust_dynamic_symbol): Delete.
	(_bfd_mips_elf_use_plts_and_copy_relocs, _bfd_mips_elf_init_stubs)
	(_bfd_mips_elf_plt_sym_val, _bfd_mips_post_process_headers): Declare.
	* elfxx-mips.c (mips_elf_la25_stub): New structure.
	(LA25_LUI, LA25_J, LA25_ADDIU): New macros.
	(mips_elf_link_hash_entry): Add "la25_stubs", "has_static_relocs"
	and "has_nonpic_branches" fields.  Remove "is_relocation_target" and
	"is_branch_target".
	(mips_elf_link_hash_table): Add blank lines.  Add
	"use_plts_and_copy_relocs", "reserved_gotno", "strampoline",
	"la25_stubs" and "add_stub_section" fields.
	(mips_htab_traverse_info): New structure.
	(PIC_OBJECT_P, MIPS_ELF_LOAD_WORD): New macros.
	(MIPS_RESERVED_GOTNO): Delete.
	(mips_o32_exec_plt0_entry, mips_n32_exec_plt0_entry)
	(mips_n64_exec_plt0_entry, mips_exec_plt_entry): New tables.
	(mips_elf_link_hash_newfunc): Update after the changes to
	mips_elf_link_hash_entry.
	(mips_elf_check_mips16_stubs): Replace the DATA parameter with
	an INFO parameter.  Don't look through warnings symbols here;
	do it in mips_elf_check_symbols instead.
	(mips_elf_create_stub_symbol): New function.
	(mips_elf_la25_stub_hash, mips_elf_la25_stub_eq): New functions.
	(_bfd_mips_elf_init_stubs, mips_elf_local_pic_function_p): Likewise.
	(mips_elf_add_la25_intro, mips_elf_add_la25_trampoline): Likewise.
	(mips_elf_add_la25_stub, mips_elf_check_symbols): New functions.
	(mips_elf_gotplt_index): Check for VxWorks.
	(mips_elf_output_dynamic_relocation): Take the relocation index
	as an extra parameter.  Do not increment reloc_count here.
	(mips_elf_initialize_tls_slots): Update the calls to
	mips_elf_output_dynamic_relocation accordingly.
	(mips_elf_multi_got): Use htab->reserved_gotno instead of
	MIPS_RESERVED_GOTNO.
	(mips_elf_create_got_section): Don't allocate reserved GOT
	entries here.  Unconditionally create .got.plt, but don't
	set its alignment here.
	(mips_elf_relocation_needs_la25_stub): New function.
	(mips_elf_calculate_relocation): Redirect branches and jumps to
	a non-PIC stub if one exists.  Check !h->has_static_relocs instead
	of !htab->is_vxworks when deciding whether to create dynamic
	relocations for R_MIPS_32, R_MIPS_REL32 and R_MIPS_64.
	(_bfd_mips_elf_create_dynamic_sections): Unconditionally call
	_bfd_elf_create_dynamic_sections.  Unconditionally set up
	htab->splt and htab->sdynbss.  Set htab->srelplt to ".rel.plt"
	if !htab->is_vxworks.  Add non-VxWorks values of
	htab->plt_header_size and htab->plt_entry_size.
	(_bfd_mips_elf_check_relocs): Set pointer_equality_needed for
	non-branch static relocations.  Set has_nonpic_branches when an la25
	stub might be required.  Set can_make_dynamic_p to TRUE if R_MIPS_32,
	R_MIPS_REL32 and R_MIPS_64 relocations can be made dynamic,
	rather than duplicating the condition.  Do not make them dynamic
	for read-only sections in non-PIC executable objects.
	Do not protect this code with dynobj == NULL || htab->sgot == NULL;
	handle each group of cases separately.  Add a default case that
	sets has_static_relocs for non-GOT relocations that cannot be
	made dynamic.  Don't set is_relocation_target and is_branch_target.
	Reject non-PIC static relocations in shared objects.
	(_bfd_mips_vxworks_adjust_dynamic_symbol): Fold into...
	(_bfd_mips_elf_adjust_dynamic_symbol): ...here, using
	htab->use_plts_and_copy_relocs instead of htab->is_vxworks
	to select PLT and copy-reloc handling.  Set the alignment of
	.plt and .got.plt when allocating the first entry.  Generalize
	code to handle REL as well as RELA sections and 64-bit as well as
	32-bit GOT entries.  Complain if we find a static-only reloc
	against an externally-defined symbol and if we cannot create
	dynamic relocations for it.  Allocate copy relocs using
	mips_elf_allocate_dynamic_relocations on non-VxWorks targets.
	Set possibly_dynamic_relocs to 0 when using PLTs or copy relocs.
	Skip reserved .got.plt entries.
	(_bfd_mips_elf_always_size_sections): Use mips_elf_check_symbols
	instead of mips_elf_check_mips16_stubs to process each symbol.
	Do the traversal for relocatable objects too.
	(mips_elf_lay_out_got): Use htab->reserved_gotno instead of
	MIPS_RESERVED_GOTNO.
	(_bfd_mips_elf_size_dynamic_sections): Exclude sdynbss if it
	is empty.  Extend the DT_PLTREL, DT_JMPREL and DT_PLTRELSZ handling
	to non-VxWorks targets.  Only add DT_REL{,A}, DT_REL{,A}SZ and
	DT_REL{,A}ENT if .rel.dyn is nonempty.  Create a symbol for the
	PLT.  Allocate a nop at the end of the PLT.  Allocate DT_MIPS_PLTGOT.
	(mips_elf_create_la25_stub_info): New function.
	(_bfd_mips_elf_finish_dynamic_symbol): Write out PLT entries
	and copy relocs where necessary.  Check pointer_equality_needed.
	(mips_finish_exec_plt): New function.
	(_bfd_mips_elf_finish_dynamic_sections): Always set DT_PLTGOT
	to the beginning of htab->sgot.  Use htab->reserved_gotno instead
	of MIPS_RESERVED_GOTNO.  Assert htab->use_plts_and_copy_relocs
	instead of htab->is_vxworks for DT_PLTREL, DT_PLTRELSZ and DT_JMPREL.
	Set DT_PLTREL to DT_REL instead of DT_RELA on non-VxWorks targets.
	Use mips_finish_exec_plt to create non-VxWorks PLT headers.  Set
	DT_MIPS_PLTGOT.
	(_bfd_mips_elf_copy_indirect_symbol): Copy has_static_relocs
	from the indirect symbol to the direct symbol.  Also copy
	has_nonpic_branches for indirect symbols.
	(_bfd_mips_elf_get_target_dtag): Handle DT_MIPS_PLTGOT and
	DT_MIPS_RWPLT.
	(_bfd_mips_elf_link_hash_table_create): Initialize the new
	mips_elf_link_hash_table fields.
	(_bfd_mips_vxworks_link_hash_table_create): Set
	use_plts_and_copy_relocs to TRUE.  Use TRUE rather than 1
	when setting is_vxworks.
	(_bfd_mips_elf_use_plts_and_copy_relocs): New function.
	(_bfd_mips_elf_final_link): Call mips_elf_create_la25_stub for
	each la25_stub.
	(_bfd_mips_elf_merge_private_bfd_data): Treat dynamic objects
	as PIC.  Generalize message about linking PIC and non-PIC.
	(_bfd_mips_elf_plt_sym_val, _bfd_mips_post_process_headers): New
	functions.
	* reloc.c: Update comment near BFD_RELOC_MIPS_JUMP_SLOT.
	* bfd-in2.h: Regenerated.

2008-08-08  Richard Sandiford  <rdsandiford@@googlemail.com>
	    Daniel Jacobowitz  <dan@@codesourcery.com>
	    Catherine Moore  <clm@@codesourcery.com>
	    Mark Shinwell  <shinwell@@codesourcery.com>

	* readelf.c (get_mips_symbol_other): Handle STO_MIPS_PLT and
	STO_MIPS_PIC.
	(slurp_rela_relocs, slurp_rel_relocs): Handle MIPS ELF64 here.
	(dump_relocations, debug_apply_relocations): Don't handle it here.
	(get_mips_dynamic_type): Handle DT_MIPS_PLTGOT and DT_MIPS_RWPLT.
	(print_mips_pltgot_entry): New function.
	(process_mips_specific): Dump the PLT GOT.

2008-08-08  Richard Sandiford  <rdsandiford@@googlemail.com>
	    Daniel Jacobowitz  <dan@@codesourcery.com>

	* config/tc-mips.c (OPTION_CALL_NONPIC): New macro.
	(OPTION_NON_SHARED, OPTION_XGOT, OPTION_MABI, OPTION_32)
	(OPTION_N32, OPTION_64, OPTION_MDEBUG, OPTION_NO_MDEBUG)
	(OPTION_PDR, OPTION_NO_PDR, OPTION_MVXWORKS_PIC): Bump by 1.
	(md_longopts): Add -call_nonpic.
	(md_parse_option): Handle OPTION_CALL_NONPIC.
	(md_show_usage): Add -call_nonpic.

2008-08-08  Richard Sandiford  <rdsandiford@@googlemail.com>

	* gas/mips/call-nonpic-1.s, gas/mips/call-nonpic-1.d: New test.
	* gas/mips/mips.exp: Run it.

2008-08-08  Richard Sandiford  <rdsandiford@@googlemail.com>
	    Daniel Jacobowitz  <dan@@codesourcery.com>
	    Catherine Moore  <clm@@codesourcery.com>
	    Mark Shinwell  <shinwell@@codesourcery.com>

	* mips.h (STO_MIPS_PLT, ELF_ST_IS_MIPS_PLT, ELF_ST_SET_MIPS_PLT)
	(STO_MIPS_PIC, DT_MIPS_PLTGOT, DT_MIPS_RWPLT): New macros.

2008-08-08  Richard Sandiford  <rdsandiford@@googlemail.com>
	    Daniel Jacobowitz  <dan@@codesourcery.com>

	* emulparams/elf32bmip.sh (GOT): Define, moving .got.plt to...
	(OTHER_RELRO_SECTIONS, OTHER_READWRITE_SECTIONS): ...one of these
	two variables.
	* emulparams/elf32bmipn32-defs.sh: Likewise.
	* emultempl/mipself.em: Include ldctor.h, elf/mips.h and elfxx-mips.h.
	(is_mips_elf): New macro.
	(stub_file, stub_bfd): New variables.
	(hook_stub_info): New structure.
	(hook_in_stub): New function.
	(mips_add_stub_section): Likewise.
	(mips_create_output_section_statements): Likewise.
	(mips_before_allocation): Likewise.
	(real_func): New variable.
	(mips_for_each_input_file_wrapper): New function.
	(mips_lang_for_each_input_file): Likewise.
	(lang_for_each_input_file): Define.
	(LDEMUL_BEFORE_ALLOCATION): Likewise.
	(LDEMUL_CREATE_OUTPUT_SECTION_STATEMENTS): Likewise.

2008-08-08  Richard Sandiford  <rdsandiford@@googlemail.com>
	    Daniel Jacobowitz  <dan@@codesourcery.com>

	* ld-mips-elf/mips16-pic-3a.s,
	ld-mips-elf/mips16-pic-3b.s,
	ld-mips-elf/mips16-pic-3.dd,
	ld-mips-elf/mips16-pic-3.gd,
	ld-mips-elf/mips16-pic-3.rd,
	ld-mips-elf/mips16-pic-3.inc,
	ld-mips-elf/pic-and-nonpic-1a.s,
	ld-mips-elf/pic-and-nonpic-1b.s,
	ld-mips-elf/pic-and-nonpic-1.ld,
	ld-mips-elf/pic-and-nonpic-1.dd,
	ld-mips-elf/pic-and-nonpic-1.nd,
	ld-mips-elf/pic-and-nonpic-1-rel.dd,
	ld-mips-elf/pic-and-nonpic-1-rel.nd,
	ld-mips-elf/pic-and-nonpic-2a.s,
	ld-mips-elf/pic-and-nonpic-2b.s,
	ld-mips-elf/pic-and-nonpic-2.d,
	ld-mips-elf/pic-and-nonpic-3a.s,
	ld-mips-elf/pic-and-nonpic-3a.ld,
	ld-mips-elf/pic-and-nonpic-3a.dd,
	ld-mips-elf/pic-and-nonpic-3a.gd,
	ld-mips-elf/pic-and-nonpic-3a.sd,
	ld-mips-elf/pic-and-nonpic-3b.s,
	ld-mips-elf/pic-and-nonpic-3b.ld,
	ld-mips-elf/pic-and-nonpic-3b.ad,
	ld-mips-elf/pic-and-nonpic-3b.dd,
	ld-mips-elf/pic-and-nonpic-3b.gd,
	ld-mips-elf/pic-and-nonpic-3b.nd,
	ld-mips-elf/pic-and-nonpic-3b.pd,
	ld-mips-elf/pic-and-nonpic-3b.rd,
	ld-mips-elf/pic-and-nonpic-3b.sd,
	ld-mips-elf/pic-and-nonpic-3-error.d,
	ld-mips-elf/pic-and-nonpic-4a.s,
	ld-mips-elf/pic-and-nonpic-4b.s,
	ld-mips-elf/pic-and-nonpic-4b.ld,
	ld-mips-elf/pic-and-nonpic-4b.ad,
	ld-mips-elf/pic-and-nonpic-4b.dd,
	ld-mips-elf/pic-and-nonpic-4b.gd,
	ld-mips-elf/pic-and-nonpic-4b.nd,
	ld-mips-elf/pic-and-nonpic-4b.rd,
	ld-mips-elf/pic-and-nonpic-4b.sd,
	ld-mips-elf/pic-and-nonpic-4-error.d,
	ld-mips-elf/pic-and-nonpic-5a.s,
	ld-mips-elf/pic-and-nonpic-5b.s,
	ld-mips-elf/pic-and-nonpic-5b.ld,
	ld-mips-elf/pic-and-nonpic-5b.ad,
	ld-mips-elf/pic-and-nonpic-5b.dd,
	ld-mips-elf/pic-and-nonpic-5b.gd,
	ld-mips-elf/pic-and-nonpic-5b.nd,
	ld-mips-elf/pic-and-nonpic-5b.rd,
	ld-mips-elf/pic-and-nonpic-5b.sd,
	ld-mips-elf/pic-and-nonpic-5b.pd,
	ld-mips-elf/pic-and-nonpic-6.ld,
	ld-mips-elf/pic-and-nonpic-6-o32a.s,
	ld-mips-elf/pic-and-nonpic-6-o32b.s,
	ld-mips-elf/pic-and-nonpic-6-o32c.s,
	ld-mips-elf/pic-and-nonpic-6-o32.ad,
	ld-mips-elf/pic-and-nonpic-6-o32.dd,
	ld-mips-elf/pic-and-nonpic-6-o32.gd,
	ld-mips-elf/pic-and-nonpic-6-o32.nd,
	ld-mips-elf/pic-and-nonpic-6-o32.pd,
	ld-mips-elf/pic-and-nonpic-6-o32.rd,
	ld-mips-elf/pic-and-nonpic-6-o32.sd,
	ld-mips-elf/pic-and-nonpic-6-n32a.s,
	ld-mips-elf/pic-and-nonpic-6-n32b.s,
	ld-mips-elf/pic-and-nonpic-6-n32c.s,
	ld-mips-elf/pic-and-nonpic-6-n32.ad,
	ld-mips-elf/pic-and-nonpic-6-n32.dd,
	ld-mips-elf/pic-and-nonpic-6-n32.gd,
	ld-mips-elf/pic-and-nonpic-6-n32.nd,
	ld-mips-elf/pic-and-nonpic-6-n32.pd,
	ld-mips-elf/pic-and-nonpic-6-n32.rd,
	ld-mips-elf/pic-and-nonpic-6-n32.sd,
	ld-mips-elf/pic-and-nonpic-6-n64a.s,
	ld-mips-elf/pic-and-nonpic-6-n64b.s,
	ld-mips-elf/pic-and-nonpic-6-n64c.s,
	ld-mips-elf/pic-and-nonpic-6-n64.ad,
	ld-mips-elf/pic-and-nonpic-6-n64.dd,
	ld-mips-elf/pic-and-nonpic-6-n64.gd,
	ld-mips-elf/pic-and-nonpic-6-n64.nd,
	ld-mips-elf/pic-and-nonpic-6-n64.pd,
	ld-mips-elf/pic-and-nonpic-6-n64.rd,
	ld-mips-elf/pic-and-nonpic-6-n64.sd: New tests.
	* ld-mips-elf/mips-elf.exp: Run them.
@
text
@d836 1
@


1.143
log
@bfd/
	* reloc.c (BFD_RELOC_MIPS16_GOT16, BFD_RELOC_MIPS16_CALL16): Declare.
	* libbfd.h, bfd-in2.h: Regenerate.
	* elf32-mips.c (elf_mips16_howto_table_rel): Fill in reserved
	R_MIPS16_GOT16 and R_MIPS16_CALL16 entries.
	(mips16_reloc_map): Add mappings.
	* elf64-mips.c (mips16_elf64_howto_table_rel): Fill in reserved
	R_MIPS16_GOT16 and R_MIPS16_CALL16 entries.
	(mips16_elf64_howto_table_rela): Likewise.
	(mips16_reloc_map): Add mappings.
	* elfn32-mips.c (elf_mips16_howto_table_rel): Fill in reserved
	R_MIPS16_GOT16 and R_MIPS16_CALL16 entries.
	(elf_mips16_howto_table_rela): Likewise.
	(mips16_reloc_map): Add mappings.
	* elfxx-mips.c (mips_elf_create_shadow_symbol): New function.
	(section_allows_mips16_refs_p): Likewise.
	(mips16_stub_symndx): Likewise.
	(mips_elf_check_mips16_stubs): Treat the data argument as a
	bfd_link_info.  Mark every dynamic symbol as needing MIPS16 stubs
	and create a "shadow" symbol for the original MIPS16 definition.
	(mips16_reloc_p, got16_reloc_p, call16_reloc_p, hi16_reloc_p)
	(lo16_reloc_p, mips16_call_reloc_p): New functions.
	(_bfd_mips16_elf_reloc_unshuffle): Use mips16_reloc_p to generalize
	relocation checks.
	(_bfd_mips16_elf_reloc_shuffle): Likewise.
	(_bfd_mips_elf_lo16_reloc): Handle R_MIPS16_GOT16.
	(mips_elf_got16_entry): Add comment.
	(mips_elf_calculate_relocation): Use hi16_reloc_p,
	lo16_reloc_p, mips16_call_reloc_p, call16_reloc_p and got16_reloc_p
	to generalize relocation checks.  Use section_allows_mips16_refs_p
	instead of mips16_stub_section_p.   Handle R_MIPS16_CALL16 and
	R_MIPS16_GOT16, allowing the former to refer directly to a
	MIPS16 function if its stub is not needed.
	(mips16_stub_section_p): Delete.
	(_bfd_mips_elf_symbol_processing): Convert odd-valued function
	symbols into even MIPS16 symbols.
	(mips_elf_add_lo16_rel_addend): Use mips16_reloc_p to generalize
	a relocation check.
	(_bfd_mips_elf_check_relocs): Calculate "bed" and "rel_end"
	earlier in the function.  Use mips16_stub_symndx to identify
	the target function.  Avoid out-of-bounds accesses when the
	stub has no relocations; report an error instead.  Use
	section_allows_mips16_refs_p instead of mips16_stub_section_p.
	Use mips16_call_reloc_p and got16_reloc_p to generalize relocation
	checks.  Handle R_MIPS16_CALL16 and R_MIPS16_GOT16.  Don't create
	dynamic relocations for absolute references to __gnu_local_gp.
	(_bfd_mips_elf_always_size_sections): Pass a bfd_link_info as
	the argument to mips_elf_check_mips16_stubs.  Generalize comment.
	(_bfd_mips_elf_relocate_section): Use hi16_reloc_p and got16_reloc_p
	to generalize relocation checks.
	(_bfd_mips_elf_finish_dynamic_symbol): If a dynamic MIPS16 function
	symbol has a non-MIPS16 stub, redirect the symbol to the stub.
	Fix an overly long line.  Don't give dynamic symbols type STO_MIPS16.
	(_bfd_mips_elf_gc_sweep_hook): Handle R_MIPS16_CALL16 and
	R_MIPS16_GOT16.

gas/
	* config/tc-mips.c (mips16_reloc_p, got16_reloc_p, hi16_reloc_p)
	(lo16_reloc_p): New functions.
	(reloc_needs_lo_p): Use hi16_reloc_p and got16_reloc_p to
	generalize relocation checks.
	(matching_lo_reloc): New function.
	(fixup_has_matching_lo_p): Use it.
	(mips16_mark_labels): Don't clobber a symbol's visibility.
	(append_insn): Use hi16_reloc_p and lo16_reloc_p.
	(mips16_ip): Handle BFD_RELOC_MIPS16_GOT16 and BFD_RELOC_MIPS16_CALL16.
	(md_apply_fix): Likewise.
	(mips16_percent_op): Add %got and %call16.
	(mips_frob_file): Use got16_reloc_p to generalize relocation checks.
	Use matching_lo_reloc.
	(mips_force_relocation): Use hi16_reloc_p and lo16_reloc_p to
	generalize relocation checks.
	(mips_fix_adjustable): Use lo16_reloc_p to generalize relocation
	checks.

gas/testsuite/
	* gas/mips/elf-rel8-mips16.d, gas/mips/elf-rel8-mips16.s,
	* gas/mips/elf-rel9-mips16.d, gas/mips/elf-rel9-mips16.s,
	* gas/mips/elf-rel13-mips16.d, gas/mips/elf-rel13-mips16.s: New tests.
	* gas/mips/mips.exp: Run them.

ld/testsuite/
	* ld-mips-elf/mips16-local-stubs-1.d: Remove stub_for_h3,
	which was only referenced by the .pdr section, and was not
	actually needed by code.
	* ld-mips-elf/mips16-intermix.d: Remove unused static function stubs.
	* ld-mips-elf/mips16-pic-1a.s,
	ld-mips-elf/mips16-pic-1b.s,
	ld-mips-elf/mips16-pic-1-dummy.s,
	ld-mips-elf/mips16-pic-1.dd,
	ld-mips-elf/mips16-pic-1.gd,
	ld-mips-elf/mips16-pic-1.inc,
	ld-mips-elf/mips16-pic-1.ld,
	ld-mips-elf/mips16-pic-2a.s,
	ld-mips-elf/mips16-pic-2b.s,
	ld-mips-elf/mips16-pic-2.ad,
	ld-mips-elf/mips16-pic-2.dd,
	ld-mips-elf/mips16-pic-2.gd,
	ld-mips-elf/mips16-pic-2.nd,
	ld-mips-elf/mips16-pic-2.rd: New tests.
	* ld-mips-elf/mips-elf.exp: Run them.
@
text
@d835 1
@


1.142
log
@include/elf/
	* mips.h (ELF_ST_IS_MIPS16, ELF_ST_SET_MIPS16): New macros.

bfd/
	* elfxx-mips.c (mips_elf_check_mips16_stubs): Use ELF_ST_IS_MIPS16.
	(mips_elf_calculate_relocation): Likewise.
	(_bfd_mips_elf_add_symbol_hook): Likewise.
	(_bfd_mips_elf_finish_dynamic_symbol): Likewise.
	(_bfd_mips_vxworks_finish_dynamic_symbol): Likewise.

opcodes/
	* mips-dis.c (_print_insn_mips): Use ELF_ST_IS_MIPS16.

gas/
	* config/tc-mips.c (mips16_mark_labels): Use ELF_ST_SET_MIPS16.
	(mips_fix_adjustable): Likewise.
	(mips_frob_file_after_relocs): Likewise.

gas/testsuite/
	* gas/mips/mips16-vis-1.d, gas/mips/mips16-vis-1.s: New tests.
	* gas/mips/mips.exp: Run them.
@
text
@d656 1
d658 1
d665 1
@


1.141
log
@	* gas/mips/mips32.s: Move out coprocessor2 insns from here ...
	* gas/mips/mips32-cp2.s: ... to here.
	* gas/mips/mips32.d: Update.
	* gas/mips/mips32-cp2.d: New file.
	* gas/mips/mips32r2.s: Move out coprocessor2 insns from here ...
	* gas/mips/mips32r2-cp2.s: ... to here.
	* gas/mips/mips32r2.d: Update.
	* gas/mips/mips32r2-cp2.d: New file.
	* gas/mips/mips64.s: Move out coprocessor2 insns from here ...
	* gas/mips/mips64-cp2.s: ... to here.
	* gas/mips/mips64.d: Update.
	* gas/mips/mips64-cp2.d: New file.
	* gas/mips/mips.exp: Run mips32-cp2, mips32r2-cp2 and mips64-cp
	except for Octeon.
	* gas/mips/octeon.s: Add supported coprocessor insns.  Move pop
	down to keep alphabetical order.
	* gas/mips/octeon.d: Update.
	* gas/mips/octeon-ill.s: Add unsupported coprocessor insns.
	* gas/mips/octeon-ill.l: Update.
@
text
@d830 2
@


1.140
log
@include/opcode/

        * mips.h: Document new field descriptors +x, +X, +p, +P, +s, +S.
        Update comment before MIPS16 field descriptors to mention MIPS16.
        (OP_SH_BBITIND, OP_MASK_BBITIND): New bit mask and shift count for
        BBIT.
        (OP_SH_CINSPOS, OP_MASK_CINSPOS, OP_SH_CINSLM1, OP_MASK_CINSLM1):
        New bit masks and shift counts for cins and exts.

gas/

        * config/tc-mips.c (validate_mips_insn): Handle field descriptors
        +x, +X, +p, +P, +s, +S.
        (mips_ip): Likewise.

opcodes/

        * mips-dis.c (print_insn_args): Handle field descriptors +x, +p,
        +s, +S.
        * mips-opc.c (mips_builtin_opcodes): Add Octeon instructions
        baddu, bbit*, cins*, dmul, pop, dpop, exts*, mtm*, mtp*, syncs,
        syncw, syncws, vm3mulu, vm0 and vmulu.

gas/testsuite/

        * gas/mips/octeon.s, gas/mips/octeon.d: Add tests for baddu,
        bbit*, cins*, dmul, pop, dpop, exts*, mtm*, mtp*, syncs, syncw,
        syncws, vm3mulu, vm0 and vmulu.
        * gas/mips/octeon-ill.s, gas/mips/octeon-ill.s: New test.
        * gas/mips/mips.exp: Run it.  Run octeon test with
        run_dump_test_arches.
@
text
@d555 2
d559 2
d573 2
@


1.139
log
@	gas/
        * config/tc-mips.c (mips_frob_file): Don't match MIPS16 relocs
        with non-MIPS16 relocs.


        gas/testsuite/
        * gas/mips/mips16-hilo-match.s: New test.
        * gas/mips/mip16-hilo-match.d: New test output.Index: config/tc-mips.c
@
text
@d779 3
a781 1
    run_dump_test "octeon"
@


1.138
log
@	* gas/mips/mips4.s: Split out fp instruction from here ...
	* gas/mips/mips4-fp.s: ... to here.
	* gas/mips/mips4.d: Update.
	* gas/mips/mips4-fp.l: New file. Check error messages with
	-msoft-float.
	* gas/mips/mips4-fp.d: New file. Check disassembly with
	hard-float.

	* gas/mips/mips32r2.s: Split out fp instructions from here ...
	* gas/mips/mips32r2-fp32.s: ... to here.
	* gas/mips/mips32r2.d: Update.
	* gas/mips/mips32r2-fp32.l: New file.  Check error messages with
	-msoft-float.
	* gas/mips/mips32r2-fp32.d: New file.  Check disassembly with
	hard-float.

	* gas/mips/mips32r2-ill-nofp.s, gas/mips/mips32r2-ill-nofp.l: New
	test derived from mips32r2-ill.

	* gas/mips/mips32-sf32.l: New list test for mips32-sf32.s to check
	error messages for soft-float targets.

	* gas/mips/mips-macro-ill-sfp.s, gas/mips/mips-macro-ill-sfp.l:
	New test for -msingle-float.
	* gas/mips/mips-macro-ill-nofp.s, gas/mips/mips-macro-ill-nofp.l:
	New test for -msoft-float.
	* gas/mips/mips-hard-float-flag.s,
	gas/mips/mips-hard-float-flag.l: New test for -mhard-float.
	* gas/mips/mips-double-float-flag.s,
	gas/mips/mips-double-float-flag.l: New test for -mdouble-float.

	* gas/mips/mips.exp: Run new mips4-fp and mips32r2-fp dump tests.
	Run mips4-fp and mips32r2-fp list tests with -msoft-float.  Run
	new mips32r2-ill-nofp with -msoft-float.  Run new mips32-sf32 list
	test with -msoft-float.  Run new mips-macro-ill-sfp test with
	-msingle-float.  Run new mips-macro-ill-nofp test with
	-msoft-float.  Run new mips-hard-float-flag and
	mips-double-float-flag tests.
@
text
@d531 1
@


1.137
log
@	* gas/mips/mips.exp: Invoke the tests smartmips, mips32-dsp,
	mips32-dspr2, mips64-dsp and mips32-mt with run_dump_test instead
	of run_dump_test_arches.
	* gas/mips/smartmips.d: Pass -mips32.
	* gas/mips/mips64-dsp.d: Pass -mips64r2.
	* gas/mips/mips32-dsp.d: Pass -mips32r2.
	* gas/mips/mips32-dspr2.d: Likewise.
	* gas/mips/mips32-mt.d: Likewise.
@
text
@d478 3
d552 2
d556 4
d561 1
a561 1
			 [mips_arch_list_matching mips32r2 gpr32]
d563 3
a565 1
			 [mips_arch_list_matching mips32r2 gpr64]
d809 12
@


1.136
log
@	* gas/mips/mips.exp: Call mips_arch_create for Octeon.  Invoke
	Octeon tests.
	* gas/mips/octeon.s, gas/mips/octeon.d: New test.
@
text
@d769 5
a773 5
    run_dump_test_arches "smartmips"	[mips_arch_list_matching mips32 !gpr64]
    run_dump_test_arches "mips32-dsp"	[mips_arch_list_matching mips32r2]
    run_dump_test_arches "mips32-dspr2"	[mips_arch_list_matching mips32r2]
    run_dump_test_arches "mips64-dsp"	[mips_arch_list_matching mips64r2]
    run_dump_test_arches "mips32-mt"	[mips_arch_list_matching mips32r2 !gpr64]
@


1.135
log
@    * gas/mips/jalr.s: New test.
    * gas/mips/jalr.l: New test output.
    * gas/mips/mips.exp: Run new test.
@
text
@d364 3
d767 2
@


1.134
log
@gas/
	* config/tc-mips.h (mips_nop_opcode): Declare.
	(NOP_OPCODE): Define.
	(mips_segment_info): New structure.
	(TC_SEGMENT_INFO_TYPE): Use it instead of insn_label_list.
	* config/tc-mips.c (label_list): Adjust for new TC_SEGMENT_INFO_TYPE.
	(mips_record_mips16_mode): New function.
	(install_insn): Call it.
	(mips_align): Likewise.  Turn the fill argument into an "int *".
	Use frag_align_code for code segments if no fill data is given.
	(s_align): Adjust call accordingly.
	(mips_nop_opcode): New function.
	(mips_handle_align): Use the first variable byte to decide which
	nop sequence is needed.  Use md_number_to_chars and mips16_nop_insn.

gas/testsuite/
	* gas/mips/align2.s, gas/mips/align2.d, gas/mips/align2-el.d: New
	tests.
	* gas/mips/mips.exp: Run them.
@
text
@d576 1
@


1.133
log
@	bfd/
	* archures.c (bfd_mach_mips_loongson_2e): New.
	(bfd_mach_mips_loongson_2f): New.
	* bfd-in2.h (bfd_mach_mips_loongson_2e): New.
	(bfd_mach_mips_loongson_2f): New.
	* cpu-mips.c: Add I_loongson_2e and I_loongson_2f to
	anonymous enum.
	(arch_info_struct): Add Loongson-2E and Loongson-2F entries.
	* elfxx-mips.c (_bfd_elf_mips_mach): Handle Loongson-2E
	and Loongson-2F flags.
	(mips_set_isa_flags): Likewise.
	(mips_mach_extensions): Add Loongson-2E and Loongson-2F
	entries.

	binutils/
	* readelf.c (get_machine_flags): Handle Loongson-2E and -2F
	flags.

	gas/
	* config/tc-mips.c (mips_cpu_info_table): Add loongson2e
	and loongson2f entries.
	* doc/c-mips.texi: Document -march=loongson{2e,2f} options.

	gas/testsuite/
	* gas/mips/mips.exp: Add loongson-2e and -2f tests.
	* gas/mips/loongson-2e.d: New.
	* gas/mips/loongson-2e.s: New.
	* gas/mips/loongson-2f.d: New.
	* gas/mips/loongson-2f.s: New.

	include/elf/
	* mips.h (E_MIPS_MACH_LS2E): New.
	(E_MIPS_MACH_LS2F): New.

	include/opcode/
	* mips.h (INSN_LOONGSON_2E): New.
	(INSN_LOONGSON_2F): New.
	(CPU_LOONGSON_2E): New.
	(CPU_LOONGSON_2F): New.
	(OPCODE_IS_MEMBER): Update for Loongson-2E and -2F flags.

	opcodes/
	* mips-dis.c (mips_arch_choices): Add Loongson-2E and -2F
	entries.
	* mips-opc.c (IL2E): New.
	(IL2F): New.
	(mips_builtin_opcodes): Add Loongson-2E and -2F instructions.
	Allow movz and movn for Loongson-2E and -2F.  Add movnz entry.
	Move coprocessor encodings to the end of the table.  Allow
	certain MIPS V .ps instructions on the Loongson-2E and -2F.
@
text
@d789 2
@


1.132
log
@opcodes/:
* opcodes/mips-dis.c (mips_cp0_names_r3000): New definition.
(mips_cp0_names_r4000): Likewise.
(mips_arch_choices): Link to the above as appropriate.

gas/testsuite/:
* gas/mips/cp0-names-r3000.d: New test for R3000 CP0 symbolic
disassembly.
* gas/mips/cp0-names-r4000.d: New test for R4000/R4400 symbolic
CP0 disassembly.
* mips/mips.exp: Run the new tests.
@
text
@d760 3
@


1.131
log
@gas/:
* config/tc-mips.c (AT): Rename to...
(ATREG): ... this.
(AT): New definition.
(mips_set_options): Rename "noat" to "at"; change the type.
(mips_opts): Update accordingly.
(append_insn): Likewise.
(macro_build_ldst_constoffset): Likewise.
(load_address): Likewise.
(macro, macro2): Likewise.
(s_mipsset): Handle ".set at=REG".  Update handling of ".set at"
and ".set noat".

gas/testsuite/:
* gas/mips/at-1.d, gas/mips/at-2.l: New tests to check the ".set
at=REG" directive.
* gas/mips/at-1.s, gas/mips/at-2.s: Sources for the new tests.
* gas/mips/mips.exp: Run the new tests.
@
text
@d699 5
@


1.130
log
@opcodes/
2007-10-04  David Daney  <ddaney@@avtrex.com>

	* mips-opc.c (mips_builtin_opcodes): Mark lwxc1 as working on FP_S
	registers.

gas/testsuite/
2007-10-04  David Daney  <ddaney@@avtrex.com>

	* gas/mips/odd-float.d, gas/mips/odd-float.s: New test.
	* gas/mips/mips.exp: Run it.
@
text
@d752 3
@


1.129
log
@gas/

2007-09-24  Carlos O'Donell  <carlos@@codesourcery.com>

	* config/tc-mips.c (s_align): Set max_alignment to 28.

gas/testsuite/

2007-09-24  Carlos O'Donell  <carlos@@codesourcery.com>

	* gas/mips/align.s, gas/mips/align.d: New test.
	* gas/mips/mips.exp: Run it.
@
text
@d778 1
@


1.128
log
@Patch for PR4587 + move proc run_list_test into gas-defs.exp
@
text
@d777 1
@


1.127
log
@	[ gas/ChangeLog ]
	* config/tc-mips.c (mips_set_options, mips_opts, file_ase_dspr2,
	ISA_SUPPORTS_DSPR2_ASE, MIPS_CPU_ASE_DSPR2): Add DSP R2 ASE support.
	(macro_build): Add case '2'.
	(macro): Expand M_BALIGN to nop, packrl.ph or balign.
	(validate_mips_insn): Add support for balign instruction.
	(mips_ip): Handle DSP R2 instructions. Support balign instruction.
	(OPTION_DSPR2, OPTION_NO_DSPR2, OPTION_COMPAT_ARCH_BASE,
	md_parse_option, mips_after_parse_args): Add -mdspr2 and -mno-dspr2
	command line options.
	(s_mipsset): Add support for .set dspr2 and .set nodspr2 directives.
	(md_show_usage): Add -mdspr2 and -mno-dspr2 help output.
	* doc/c-mips.texi, doc/as.texinfo: Document -mdspr2, -mno-dspr2,
	.set dspr2, .set nodspr2.

	[ gas/testsuite/ChangeLog ]
	* gas/mips/mips32-dspr2.s, gas/mips/mips32-dspr2.d: New test for
	DSP R2.
	* gas/mips/mips.exp: Run new test.

	[ include/opcode/Changelog ]
	* mips.h (OP_SH_BP, OP_MASK_BP): Add support for balign instruction.
	(INSN_DSPR2): Add flag for DSP R2 instructions.
	(M_BALIGN): New macro.

	[ opcodes/ChangeLog ]
	* mips-dis.c (mips_arch_choices): Add DSP R2 support.
	(print_insn_args): Add support for balign instruction.
	* mips-opc.c (D33): New shortcut for DSP R2 instructions.
	(mips_builtin_opcodes): Add DSP R2 instructions.

	[ sim/mips/ChangeLog ]
	* Makefile.in (IGEN_INCLUDE): Add dsp2.igen.
	* configure.ac (mips*-sde-elf*, mipsisa32r2*-*-*, mipsisa64r2*-*-*):
	Add dsp2 to sim_igen_machine.
	* configure: Regenerate.
	* dsp.igen (do_ph_op): Add MUL support when op = 2.
	(do_ph_mulq): New function to support mulq_rs.ph and mulq_s.ph.
	(mulq_rs.ph): Use do_ph_mulq.
	(MFHI, MFLO, MTHI, MTLO): Move these instructions to mips.igen.
	* mips.igen: Add dsp2 model and include dsp2.igen.
	(MFHI, MFLO, MTHI, MTLO): Extend these instructions for
	for *mips32r2, *mips64r2, *dsp.
	(MADD, MADDU, MSUB, MSUBU, MULT, MULTU): Extend these instructions
	for *mips32r2, *mips64r2, *dsp2.
	* dsp2.igen: New file for MIPS DSP REV 2 ASE.

	[ sim/testsuite/sim/mips/ChangeLog ]
	* basic.exp: Run the dsp2 test.
	* utils-dsp.inc (dspckacc_astio, dspck_tsimm): New macro.
	* mips32-dsp2.s: New test.
@
text
@a294 21
# run_list_test NAME OPTS (optional): TESTNAME
#
# Assemble the file "NAME.d" and compare the assembler standard error
# output against the regular expressions given in the file "NAME.l".
# The assembler is passed the flags given in OPTS.  If TESTNAME is
# provided, it will be used as the name of the test.
proc run_list_test { name opts {testname {}} } {
    global srcdir subdir
    if { [string length $testname] == 0 } then {
	    set testname "MIPS $name"
    }
    set file $srcdir/$subdir/$name
    gas_run ${name}.s $opts ">&dump.out"
    if { [regexp_diff "dump.out" "${file}.l"] } then {
	fail $testname
	verbose "output is [file_contents "dump.out"]" 2
	return
    }
    pass $testname
}

@


1.126
log
@gas:
	* config/tc-mips.c (pic_need_relax): Return true for section symbols.

gas/testsuite:
	* gas/mips/elf-rel26.s: New test.
	* gas/mips/elf-rel26.d: Ditto.
	* gas/mips/mips.exp: Run it.
@
text
@d775 1
@


1.125
log
@	[ bfd/ChangeLog ]
	* elf-bfd.h (local_call_stubs): New member.
	* elfxx-mips.c (FN_STUB_P, CALL_STUB_P, CALL_FP_STUB_P): New macros.
	(mips_elf_calculate_relocation): Handle local mips16 call stubs.
	(mips16_stub_section_p): Rename from mips_elf_stub_section_p, use
	the new stub macros.
	(_bfd_mips_elf_check_relocs): Handle call stubs for code which
	mixes mips16 and mips32 functions. Use mips16_stub_section_p. Mark
	used stubs with SEC_KEEP. Use the new stub macros.

	[ gas/testsuite/ChangeLog ]
	* gas/mips/mips16-intermix.d, gas/mips/mips16-intermix.s: New
	testcase.
	* gas/mips/mips.exp: Run new testcase.

	[ ld/testsuite/ChangeLog ]
	* ld-mips-elf/mips16-intermix-1.s, ld-mips-elf/mips16-intermix-2.s,
	ld-mips-elf/mips16-intermix.d: New testcase.
	* ld-mips-elf/mips-elf.exp (mips16_intermix_test): Run new testcases.
@
text
@d690 1
@


1.124
log
@	[ ChangeLog ]
	* config.sub: Add support for sde as alias of mipsisa32-sde-elf.

	[ bfd/ChangeLog ]
	* config.bfd: Add configurations for mips*el-sde-elf* and
	mips*-sde-elf*.

	[ binutils/testsuite/ChangeLog ]
	* binutils-all/readelf.exp (readelf_test): Handle mips*-sde-elf*.

	[ gas/ChangeLog ]
	* configure.tgt: Handle mips*-sde-elf*.

	[ gas/testsuite/ChangeLog ]
	* gas/mips/mips.exp: Handle mips*-sde-elf*.
@
text
@d788 1
@


1.123
log
@	* gas/mips/e32-rel2.d, gas/mips/e32-rel4.d: Use -mabi=32 for as.
	* gas/mips/mips.exp: Move mips16e testcase to ELF only tests.
	Run elf{el}-rel2 and elf-rel4 for all arches with gpr64. Run
	e32-rel2 and e32-rel4 also for 64 bit configurations.
@
text
@d405 1
a405 1
    if { [istarget "mips*-*-*linux*"] } then {
@


1.122
log
@	* gas/mips/mips.exp: Explicitly specify o32 ABI.
	* gas/mips/mips64-dsp.d: Dump o32 register names.
	* gas/mips/smartmips.d: Explicitly specify o32 ABI.
@
text
@d536 2
d642 2
a643 6
	if {[istarget mips64*-*-*] || [istarget mipsisa32*-*-*]
	    || [istarget mipsisa64*-*-*]} { 
	    run_dump_test "elf${el}-rel2"
	} else {
	    run_dump_test "e32${el}-rel2"
	}
d645 2
a646 5
	if {[istarget mips64*-*-*]} {
	    run_dump_test "elf-rel4"
	} else {
	    run_dump_test "e32-rel4"
	}
a783 2
        # Check MIPS16e extensions
        run_dump_test_arches "mips16e" 	[mips_arch_list_matching mips32]
@


1.121
log
@	* gas/mips/elf-rel6.d, gas/mips/elf-rel6.s: Extend testcase.
	* gas/mips/elf-rel6.d-n32.d, gas/mips/elf-rel6-n64.d: New files.
	* gas/mips/mips.exp: Run new testcases.
@
text
@d794 1
a794 1
        run_list_test "mips16e-64" "-march=mips32"
@


1.120
log
@	[ gas/ChangeLog ]
	* config/tc-mips.c (mips_ip): Maintain argument count.

	[ gas/testsuite/ChangeLog ]
	* gas/mips/mips32-sf32.s, gas/mips/mips32-sf32.d: New test for odd
	single precision FPRs on MIPS32.
	* gas/mips/mips.exp: Run them.
@
text
@d654 4
@


1.119
log
@	[ gas/ChangeLog ]
	* config/tc-mips.c (ISA_SUPPORTS_DSP64): New macro.
	(CPU_HAS_MIPS3D, CPU_HAS_MDMX, CPU_HAS_DSP, CPU_HAS_MT): Delete.
	(macro_build): Update comment.
	(mips_ip): Allow DSP64 instructions for MIPS64R2.
	(mips_after_parse_args): Remove uses of CPU_HAS_MIPS3D and
	CPU_HAS_MDMX.
	(mips_cpu_info): Fix formatting. Add MIPS_CPU_ASE_MIPS3D and
	MIPS_CPU_ASE_MDMX flags for sb1.

	[ gas/testsuite/ChangeLog ]
	* gas/mips/mips64-dsp.s, gas/mips/mips64-dsp.d: New DSP64 tests.
	* gas/mips/mips.exp: Run DSP64 tests.

	[ opcodes/ChangeLog ]
	* mips-dis.c: Disassemble DSP64 instructions for MIPS64R2.
	* mips-opc.c: Add DSP64 instructions.
@
text
@d564 2
@


1.118
log
@	* gas/mips/vxworks1-el.d, gas/mips/vxworks1-xgot-el.d: Add little
	endian testcases.
	* gas/mips/vxworks1.d, gas/mips/vxworks1-xgot.d: Build as big endian.
	* gas/mips/mips.exp: Run new testcases.
@
text
@d773 1
@


1.117
log
@	[ gas/ChangeLog ]
	* config/tc-mips.c (macro_build): Test for currently active
	mips16 option.
	(mips16_ip): Reject invalid opcodes.

	[ opcodes/ChangeLog ]
	* mips16-opc.c (I1, I32, I64): New shortcut defines.
	(mips16_opcodes): Change membership of instructions to their
	lowest baseline ISA.

	[ gas/testsuite/ChangeLog ]
	* gas/mips/mips.exp: Run new tests.
	* gas/mips/mips16e.s, gas/mips/mips16e.d, gas/mips/mips16e-64.s,
	gas/mips/mips16e-64.d, gas/mips/mips16e-64.l: New tests.
@
text
@d393 2
d791 2
@


1.116
log
@	[ gas/ChangeLog ]
	* config/tc-mips.c (mips_set_options): Add ase_smartmips flag.
	(mips_opts): Likewise.
	(file_ase_smartmips): New variable.
	(ISA_HAS_ROR): SmartMIPS implements rotate instructions.
	(macro_build): Handle SmartMIPS instructions.
	(mips_ip): Likewise.
	(md_longopts): Add argument handling for smartmips.
	(md_parse_options, mips_after_parse_args): Likewise.
	(s_mipsset): Add .set smartmips support.
	(md_show_usage): Document -msmartmips/-mno-smartmips.
	* doc/as.texinfo: Document -msmartmips/-mno-smartmips and
	.set smartmips.
	* doc/c-mips.texi: Likewise.

	[ gas/testsuite/ChangeLog ]
	* gas/mips/smartmips.s, gas/mips/smartmips.d: New smartmips test.
	* gas/mips/mips.exp: Run smartmips test.
@
text
@d780 2
d784 2
@


1.115
log
@	* gas/mips/noreorder.s, gas/mips/noreorder.d: New test for
	reorder/noreorder corner case.
	* gas/mips/mips.exp: Run new test.
-------------------------------------------------------------------
@
text
@d769 1
@


1.114
log
@[ gas/testsuite/ChangeLog ]
2006-05-04  Thiemo Seufer  <ths@@mips.com>
            Nigel Stephens  <nigel@@mips.com>

        * gas/mips/mips.exp: Run mips32-dsp tests only for mips32r2.
        * gas/mips/set-arch.d: Adjust according to opcode table changes.

[ include/opcode/ChangeLog ]
2006-05-04  Thiemo Seufer  <ths@@mips.com>
            Nigel Stephens  <nigel@@mips.com>
            David Ung  <davidu@@mips.com>

        * mips.h: Add INSN_SMARTMIPS define.

[ opcodes/ChangeLog ]
2006-05-04  Thiemo Seufer  <ths@@mips.com>
            Nigel Stephens  <nigel@@mips.com>
            David Ung  <davidu@@mips.com>

        * mips-dis.c (mips_arch_choices): Add smartmips instruction
        decoding to MIPS32 and MIPS32R2.  Limit DSP decoding to release
        2 ISAs.  Add MIPS3D decoding to MIPS32R2.  Add MT decoding to
        MIPS64R2.
        * mips-opc.c: fix random typos in comments.
        (INSN_SMARTMIPS): New defines.
        (mips_builtin_opcodes): Add paired single support for MIPS32R2.
        Move bc3f, bc3fl, bc3t, bc3tl downwards.  Move flushi, flushd,
        flushid, wb upwards.  Move cfc3, ctc3 downwards.  Rework the
        FP_S and FP_D flags to denote single and double register
        accesses separately.  Move dmfc3, dmtc3, mfc3, mtc3 downwards.
        Allow jr.hb and jalr.hb for release 1 ISAs.  Allow luxc1, suxc1
        for MIPS32R2.  Add SmartMIPS instructions.  Add two-argument
        variants of bc2f, bc2fl, bc2t, bc2tl.  Add mfhc2, mthc2 to
        release 2 ISAs.
        * mips16-opc.c (mips16_opcodes): Add sdbbp instruction.
@
text
@d784 2
@


1.113
log
@	Richard Sandiford  <richard@@codesourcery.com>
	Daniel Jacobowitz  <dan@@codesourcery.com>
	Phil Edwards  <phil@@codesourcery.com>
	Zack Weinberg  <zack@@codesourcery.com>
	Mark Mitchell  <mark@@codesourcery.com>
	Nathan Sidwell  <nathan@@codesourcery.com>

bfd/
	* bfd-in2.h: Regenerate.
	* config.bfd (mips*-*-vxworks*, mips*el-*-vxworks*): New stanzas.
	* configure.in (bfd_elf32_bigmips_vxworks_vec): New stanza.
	(bfd_elf32_littlemips_vxworks_vec): Likewise.
	(bfd_elf32_bigmips_vec): Add elf-vxworks.lo.
	(bfd_elf32_littlemips_vec): Likewise.
	(bfd_elf32_nbigmips_vec): Likewise.
	(bfd_elf32_nlittlemips_vec): Likewise.
	(bfd_elf32_ntradbigmips_vec): Likewise.
	(bfd_elf32_ntradlittlemips_vec): Likewise.
	(bfd_elf32_tradbigmips_vec): Likewise.
	(bfd_elf32_tradlittlemips_vec): Likewise.
	(bfd_elf64_bigmips_vec): Likewise.
	(bfd_elf64_littlemips_vec): Likewise.
	(bfd_elf64_tradbigmips_vec): Likewise.
	(bfd_elf64_tradlittlemips_vec): Likewise.
	* elf32-mips.c: Include elf-vxworks.h.
	(mips_info_to_howto_rel): Use elf_backend_mips_rtype_to_howto
	instead of calling mips_elf32_rtype_to_howto directly.
	(mips_vxworks_copy_howto_rela): New reloc howto.
	(mips_vxworks_jump_slot_howto_rela): Likewise.
	(mips_vxworks_bfd_reloc_type_lookup): New function.
	(mips_vxworks_rtype_to_howto): Likewise.
	(mips_vxworks_final_write_processing): Likewise.
	(TARGET_LITTLE_SYM, TARGET_LITTLE_NAME): Override for VxWorks.
	(TARGET_BIG_SYM, TARGET_BIG_NAME, elf_bed, ELF_MAXPAGESIZE): Likewise.
	(elf_backend_want_got_plt): Likewise.
	(elf_backend_want_plt_sym): Likewise.
	(elf_backend_got_symbol_offset): Likewise.
	(elf_backend_want_dynbss): Likewise.
	(elf_backend_may_use_rel_p): Likewise.
	(elf_backend_may_use_rela_p): Likewise.
	(elf_backend_default_use_rela_p): Likewise.
	(elf_backend_got_header_size: Likewise.
	(elf_backend_plt_readonly): Likewise.
	(bfd_elf32_bfd_reloc_type_lookup): Likewise.
	(elf_backend_mips_rtype_to_howto): Likewise.
	(elf_backend_adjust_dynamic_symbol): Likewise.
	(elf_backend_finish_dynamic_symbol): Likewise.
	(bfd_elf32_bfd_link_hash_table_create): Likewise.
	(elf_backend_add_symbol_hook): Likewise.
	(elf_backend_link_output_symbol_hook): Likewise.
	(elf_backend_emit_relocs): Likewise.
	(elf_backend_final_write_processing: Likewise.
	(elf_backend_additional_program_headers): Likewise.
	(elf_backend_modify_segment_map): Likewise.
	(elf_backend_symbol_processing): Likewise.
	* elfxx-mips.c: Include elf-vxworks.h.
	(mips_elf_link_hash_entry): Add is_relocation_target and
	is_branch_target fields.
	(mips_elf_link_hash_table): Add is_vxworks, srelbss, sdynbss, srelplt,
	srelplt2, sgotplt, splt, plt_header_size and plt_entry_size fields.
	(MIPS_ELF_RELA_SIZE, MIPS_ELF_REL_DYN_NAME): New macros.
	(MIPS_RESERVED_GOTNO): Take a mips_elf_link_hash_table argument.
	Return 3 for VxWorks.
	(ELF_MIPS_GP_OFFSET): Change the argument from a bfd to a
	mips_elf_link_hash_table.  Return 0 for VxWorks.
	(MIPS_ELF_GOT_MAX_SIZE): Change the argument from a bfd to a
	mips_elf_link_hash_table.  Update the call to ELF_MIPS_GP_OFFSET.
	(mips_vxworks_exec_plt0_entry): New variable.
	(mips_vxworks_exec_plt_entry): Likewise.
	(mips_vxworks_shared_plt0_entry): Likewise.
	(mips_vxworks_shared_plt_entry): Likewise.
	(mips_elf_link_hash_newfunc): Initialize the new hash_entry fields.
	(mips_elf_rel_dyn_section): Change the bfd argument to a
	mips_elf_link_hash_table.  Use MIPS_ELF_REL_DYN_NAME to get
	the name of the section.
	(mips_elf_initialize_tls_slots): Update the call to
	mips_elf_rel_dyn_section.
	(mips_elf_gotplt_index): New function.
	(mips_elf_local_got_index): Add an input_section argument.
	Update the call to mips_elf_create_local_got_entry.
	(mips_elf_got_page): Likewise.
	(mips_elf_got16_entry): Likewise.
	(mips_elf_create_local_got_entry): Add bfd_link_info and input_section
	arguments.  Create dynamic relocations for each entry on VxWorks.
	(mips_elf_merge_gots): Update the use of MIPS_ELF_GOT_MAX_SIZE.
	(mips_elf_multi_got): Update the uses of MIPS_ELF_GOT_MAX_SIZE
	and MIPS_RESERVED_GOTNO.
	(mips_elf_create_got_section): Update the uses of
	MIPS_ELF_GOT_MAX_SIZE.  Create .got.plt on VxWorks.
	(is_gott_symbol): New function.
	(mips_elf_calculate_relocation): Use a dynobj local variable.
	Update the calls to mips_elf_local_got_index, mips_elf_got16_entry and
	mips_elf_got_page_entry.  Set G to the .got.plt entry when calculating
	VxWorks R_MIPS_CALL* relocations.  Calculate and use G for all GOT
	relocations on VxWorks.  Add dynamic relocations for references
	to the VxWorks __GOTT_BASE__ and __GOTT_INDEX__ symbols.  Don't
	create dynamic relocations for R_MIPS_32, R_MIPS_REL32 or R_MIPS_64
	in VxWorks executables.
	(mips_elf_allocate_dynamic_relocations): Add a bfd_link_info argument.
	Use MIPS_ELF_RELA_SIZE to calculate the size of a VxWorks entry.
	Don't allocate a null entry on VxWorks.
	(mips_elf_create_dynamic_relocation): Update the call to
	mips_elf_rel_dyn_section.  Use absolute rather than relative
	relocations for VxWorks, and make them RELA rather than REL.
	(_bfd_mips_elf_create_dynamic_sections): Don't make .dynamic
	read-only on VxWorks.  Update the call to mips_elf_rel_dyn_section.
	Create the .plt, .rela.plt, .dynbss and .rela.bss sections on
	VxWorks.  Likewise create the _PROCEDURE_LINKAGE_TABLE symbol.
	Call elf_vxworks_create_dynamic_sections for VxWorks and
	initialize the plt_header_size and plt_entry_size fields.
	(_bfd_mips_elf_check_relocs): Don't allow GOT relocations to be
	used in VxWorks executables.  Don't allocate dynamic relocations
	for R_MIPS_32, R_MIPS_REL32 or R_MIPS_64 in VxWorks executables.
	Set is_relocation_target for each symbol referenced by a relocation.
	Allocate .rela.dyn entries for relocations against the special
	VxWorks __GOTT_BASE__ and __GOTT_INDEX__ symbols.  Create GOT
	entries for all VxWorks R_MIPS_GOT16 relocations.  Don't allocate
	a global GOT entry for symbols mentioned in VxWorks R_MIPS_CALL*,
	R_MIPS_32, R_MIPS_REL32 or R_MIPS_64 relocations.  Update the calls
	to mips_elf_rel_dyn_section and mips_elf_allocate_dynamic_relocations.
	Set is_branch_target for symbols mentioned in R_MIPS_PC16 or R_MIPS_26
	relocations.  Don't set no_fn_stub on VxWorks.
	(_bfd_mips_elf_adjust_dynamic_symbol): Update the call to
	mips_elf_allocate_dynamic_relocations.
	(_bfd_mips_vxworks_adjust_dynamic_symbol): New function.
	(_bfd_mips_elf_always_size_sections): Do not allocate GOT page
	entries for VxWorks, and do not create multiple GOTs.
	(_bfd_mips_elf_size_dynamic_sections): Use MIPS_ELF_REL_DYN_NAME.
	Handle .got specially for VxWorks.  Update the uses of
	MIPS_RESERVED_GOTNO and mips_elf_allocate_dynamic_relocations.
	Check for sgotplt and splt.  Allocate the .rel(a).dyn contents last,
	once its final size is known.  Set DF_TEXTREL for VxWorks.  Add
	DT_RELA, DT_RELASZ, DT_RELAENT, DT_PLTREL, DT_PLTRELSZ and DT_JMPREL
	tags on VxWorks.  Do not add the MIPS-specific tags for VxWorks.
	(_bfd_mips_vxworks_finish_dynamic_symbol): New function.
	(mips_vxworks_finish_exec_plt): Likewise.
	(mips_vxworks_finish_shared_plt): Likewise.
	(_bfd_mips_elf_finish_dynamic_sections): Remove an unncessary call
	to mips_elf_rel_dyn_section.  Use a VxWorks-specific value of
	DT_PLTGOT.  Handle DT_RELA, DT_RELASZ, DT_RELAENT, DT_PLTREL,
	DT_PLTRELSZ and DT_JMPREL.  Update the uses of MIPS_RESERVED_GOTNO
	and mips_elf_rel_dyn_section.  Use a different GOT header for
	VxWorks.  Don't sort .rela.dyn on VxWorks.  Finish the PLT on VxWorks.
	(_bfd_mips_elf_link_hash_table_create): Initialize the new
	mips_elf_link_hash_table fields.
	(_bfd_mips_vxworks_link_hash_table_create): New function.
	(_bfd_mips_elf_final_link): Set the GP value to _GLOBAL_OFFSET_TABLE_
	on VxWorks.  Update the call to ELF_MIPS_GP_OFFSET.
	* elfxx-mips.h (_bfd_mips_vxworks_adjust_dynamic_symbol): Declare.
	(_bfd_mips_vxworks_finish_dynamic_symbol): Likewise.
	(_bfd_mips_vxworks_link_hash_table_create): Likewise.
	* libbfd.h: Regenerate.
	* Makefile.am (elfxx-mips.lo): Depend on elf-vxworks.h.
	(elf32-mips.lo): Likewise.
	* Makefile.in: Regenerate.
	* reloc.c (BFD_RELOC_MIPS_COPY, BFD_RELOC_MIPS_JUMP_SLOT): Declare.
	* targets.c (bfd_elf32_bigmips_vxworks_vec): Declare.
	(bfd_elf32_littlemips_vxworks_vec): Likewise.
	(_bfd_target_vector): Add entries for them.

gas/
	* config/tc-mips.c (mips_target_format): Handle vxworks targets.
	(md_begin): Complain about -G being used for PIC.  Don't change
	the text, data and bss alignments on VxWorks.
	(reloc_needs_lo_p): Don't return true for R_MIPS_GOT16 when
	generating VxWorks PIC.
	(load_address): Extend SVR4_PIC handling to VXWORKS_PIC.
	(macro): Likewise, but do not treat la $25 specially for
	VxWorks PIC, and do not handle jal.
	(OPTION_MVXWORKS_PIC): New macro.
	(md_longopts): Add -mvxworks-pic.
	(md_parse_option): Don't complain about using PIC and -G together here.
	Handle OPTION_MVXWORKS_PIC.
	(md_estimate_size_before_relax): Always use the first relaxation
	sequence on VxWorks.
	* config/tc-mips.h (VXWORKS_PIC): New.

gas/testsuite/
	* gas/mips/vxworks1.s, gas/mips/vxworks1.d,
	* gas/mips/vxworks1-xgot.d: New tests.
	* gas/mips/mips.exp: Run them.  Do not run other tests on VxWorks.

include/elf/
	* mips.h (R_MIPS_COPY, R_MIPS_JUMP_SLOT): New relocs.

ld/
	* configure.tgt (mips*el-*-vxworks*, mips*-*-vxworks*): Use
	separate VxWorks emulations.
	* emulparams/elf32ebmipvxworks.sh: New file.
	* emulparams/elf32elmipvxworks.sh: New file.
	* Makefile.am (ALL_EMULATIONS): Add eelf32ebmipvxworks.o and
	eelf32elmipvxworks.o.
	(eelf32ebmipvxworks.c, eelf32elmipvxworks.c): New rules.
	* Makefile.in: Regenerate.

ld/testsuite/
	* ld-mips/vxworks1.dd, ld-mips/vxworks1.ld, ld-mips/vxworks1-lib.dd,
	* ld-mips/vxworks1-lib.nd, ld-mips/vxworks1-lib.rd,
	* ld-mips/vxworks1-lib.s, ld-mips/vxworks1.rd, ld-mips/vxworks1.s,
	* ld-mips/vxworks1-static.d, ld-mips/vxworks2.s, ld-mips/vxworks2.sd,
	* ld-mips/vxworks2-static.sd: New tests.
	* ld-mips/mips-elf.exp: Run them.
@
text
@d769 1
a769 1
    run_dump_test_arches "mips32-dsp"	[mips_arch_list_matching mips32 !sb1]
@


1.112
log
@bfd/
	* elf32-mips.c (elf_mips_howto_table_rel): Use rightshift 2 for
	R_MIPS_PC16.
	(mips_reloc_map): Map BFD_RELOC_16_PCREL_S2 to R_MIPS_PC16.
	(bfd_elf32_bfd_reloc_type_lookup): Don't handle
	BFD_RELOC_16_PCREL_S2.
	* elf64-mips.c (mips_elf64_howto_table_rel): Use rightshift 2 for
	R_MIPS_PC16.
	(mips_elf64_howto_table_rela): Likewise.
	(mips_reloc_map): Map BFD_RELOC_16_PCREL_S2 to R_MIPS_PC16.
	(bfd_elf64_bfd_reloc_type_lookup): Don't handle
	BFD_RELOC_16_PCREL_S2.
	* elfn32-mips.c (elf_mips_howto_table_rel): Use rightshift 2 for
	R_MIPS_PC16.
	(elf_mips_howto_table_rela): Likewise.
	(mips_reloc_map): Map BFD_RELOC_16_PCREL_S2 to R_MIPS_PC16.
	(bfd_elf32_bfd_reloc_type_lookup): Don't handle
	BFD_RELOC_16_PCREL_S2.
	* elfxx-mips.c: Formatting fixes.
	(mips_elf_calculate_relocation): Handle R_MIPS_GNU_REL16_S2
	and R_MIPS_PC16 identically.
gas/
	* config/tc-mips.c (append_insn): Handle BFD_RELOC_16_PCREL_S2.
	(macro_build): Complain for invalid branch displacements.
	(mips_validate_fix): Delete.
	(md_apply_fix): Re-add pcrel support for branches.  Use consistent
	text for misaligned branch targets.
	(tc_gen_reloc: Re-add pcrel support for branches.  Handle strange
	BFD pcrel processing.  Remove error for unresolved branches.
	* config/tc-mips.h (TC_VALIDATE_FIX, mips_validate_fix): Delete.
gas/testsuite/
	* gas/mips/bge.d, gas/mips/bge.s, gas/mips/bgeu.d, gas/mips/bgeu.s,
	gas/mips/blt.d, gas/mips/blt.s, gas/mips/bltu.d,
	gas/mips/bltu.s: Reactivate external branch tests.
	* gas/mips/branch-misc-2.d, gas/mips/branch-misc-2pic.d,
	gas/mips/branch-misc-2-64.d, gas/mips/branch-misc-2pic-64.d: New
	tests.
	* gas/mips/branch-misc-2.l, gas/mips/branch-misc-2pic.l,
	gas/testsuite/gas/mips/branch-misc-2pic.s: Remove.
	* gas/mips/mips.exp: Adjust branch-misc-2 tests.  Add 64-bit
	variants.
@
text
@a385 1

d387 2
a388 1
# And now begin the actual tests!
d390 4
a393 2

if { [istarget mips*-*-*] } then {
d782 2
@


1.112.2.1
log
@Merge changes between binutils-csl-2_17-branchpoint and
binutils-2_17, except for the addition of generated files to CVS.
@
text
@d386 1
d388 1
a388 2
# And now begin the actual tests!  VxWorks uses RELA rather than REL
# relocations, so most of the generic dump tests will not work there.
d390 2
a391 4
if { [istarget mips*-*-vxworks*] } {
    run_dump_test "vxworks1"
    run_dump_test "vxworks1-xgot"
} elseif { [istarget mips*-*-*] } {
a779 2
    run_dump_test "vxworks1"
    run_dump_test "vxworks1-xgot"
@


1.111
log
@        * mips.h: Assign 'm'/'M' codes to MIPS16e save/restore
        instructions.  Define MIPS16_ALL_ARGS and MIPS16_ALL_STATICS for
        save/restore encoding of the args field.

        * mips16-opc.c: Add MIPS16e save/restore opcodes.
        * mips-dis.c (print_mips16_insn_arg): Handle printing of 'm'/'M'
        codes for save/restore.

        * config/tc-mips.c (mips16_ip): Add handling of 'm' and 'M' codes
        for the MIPS16e save/restore instructions.

        * gas/mips/mips.exp: Run new save/restore tests.
        * gas/testsuite/gas/mips/mips16e-save.s: New test for generating
        different styles of save/restore instructions.
        * gas/testsuite/gas/mips/mips16e-save.d: New.
@
text
@d430 4
a433 2
    run_list_test_arches "branch-misc-2" "-32 -non_shared" [mips_arch_list_matching mips1]
    run_list_test_arches "branch-misc-2pic" "-32 -call_shared" [mips_arch_list_matching mips1]
@


1.110
log
@* config/tc-mips.c (append_insn): Convert MIPS16 jr/jalr jumps
into jrc/jalrc versions if ISA_MIPS32+ and not doing the swap,
hence avoiding to emit a nop.

* gas/mips/mips.exp: Run new test.
* gas/testsuite/gas/mips/mips16e-jrc.s: New test for converting
jalr/jr to the compact jalrc/jrc instructions.
* gas/testsuite/gas/mips/mips16e-jrc.d: New.
@
text
@d774 4
a777 1
    if { !$no_mips16 } { run_dump_test "mips16e-jrc" }
@


1.109
log
@* gas/mips/mips.exp: Run MT test for mips32r2 only.
* gas/mips/mips32-mt.[sdl]: New test.
@
text
@d774 1
@


1.108
log
@* gas/mips/mips.exp: Run DSP test.
* gas/mips/mips32-dsp.[sdl]: New test.
@
text
@d766 1
@


1.107
log
@gas/:
* config/tc-mips.c (IS_ZEXT_32BIT_NUM): New macro.
(normalize_address_expr): New function to sign-extend address
offsets that fit into 32 bits in 32-bit mode.
(macro_build_ldst_constoffset): Use normalize_address_expr()
instead of a handcoded sequence.
(load_register): Likewise.  Report oversized numbers in a useful
way.
(macro) [ld_st, ldd_std]: Reject all oversized offsets, not only
for constant addresses.  Report oversized numbers in a useful way.
(mips_ip): Use normalize_address_expr() for addresses.

gas/testsuite/:
* gas/mips/ldstla-32.s: Exclude offsets that are now meant to fail
and include more instructions/offsets that are meant to succeed.
Use $4 instead $3 to avoid register dependencies.
* gas/mips/ldstla-32.d: Update accordingly.
* gas/mips/ldstla-32-shared.d: Likewise.
* gas/mips/ldstla-32-mips3.d: New test based on the above, except
for mips3.
* gas/mips/ldstla-32-mips3-shared.d: Similarly, for PIC.
* gas/mips/ldstla-32-mips3.s: Source for the new tests.
* gas/mips/ldstla-32-1.s: New test for offsets that are meant to
fail.
* gas/mips/ldstla-32-mips3-1.s: Likewise, for mips3.
* gas/mips/ldstla-32-1.l: Stderr output for the new test.
* gas/mips/ldstla-32-mips3-1.l: Likewise.
* gas/mips/mips.exp: Run the new tests.
@
text
@d765 2
@


1.106
log
@	* config/tc-mips.c (MAX_VR4130_NOPS, MAX_DELAY_NOPS): New macros.
	(MAX_NOPS): Bump to 4.
	(mips_fix_vr4130): New variable.
	(nops_for_vr4130): New function.
	(nops_for_insn): Use MAX_DELAY_NOPS rather than MAX_NOPS.  Use
	nops_for_vr4130 if working around VR4130 errata.
	(OPTION_FIX_VR4130, OPTION_NO_FIX_VR4130): New macros.
	(md_longopts): Add -mfix-vr4130 and -mno-fix-vr4130.
	(md_parse_option): Handle them.
	(md_show_usage): Print them.
	* doc/c-mips.texi: Document -mfix-vr4130 and -mno-fix-vr4130.
@
text
@d730 1
d732 9
@


1.105
log
@	* config/tc-mips.c (append_insn): Remove cop_interlocks test from
	branch delay code.
@
text
@d548 1
@


1.104
log
@	* config/tc-mips.c (mips_set_options): Add sym32 field.
	(mips_opts): Initialize it.
	(HAVE_32BIT_ADDRESSES): Set to true if pointers are 32 bits wide.
	(HAVE_64BIT_ADDRESSES): Redefine as !HAVE_32BIT_ADDRESSES.
	(HAVE_32BIT_SYMBOLS, HAVE_64BIT_SYMBOLS): New macros.
	(load_address): Use HAVE_64BIT_SYMBOLS instead of HAVE_64BIT_ADDRESSES
	when deciding whether to use a symbolic %highest/%higher expansion.
	(macro): Likewise.  Remove o64/n32 linux hack.  Always use
	ADDRESS_ADD*_INSN for address addition in the expansion of "dla"
	and "la".  Handle constants separately from symbolic expressions in
	the "ld_st:" case, using 64-bit arithmetic if HAVE_64BIT_ADDRESSES
	and using load_register to load the high part of the address.
	(OPTION_MSYM32, OPTION_NO_MSYM32): New macros.
	(OPTION_ELF_BASE): Bump by 2.
	(md_longopts): Add entries for -msym32 and -mno-sym32.
	(md_parse_option): Handle them.
	(usage): Document them.
	(s_mipsset): Handle ".set sym32" and ".set nosym32".
	(s_cpload, s_cpsetup): Use HAVE_64BIT_SYMBOLS instead of
	HAVE_64BIT_ADDRESSES to detect 64-bit values of "_gp".
	* doc/c-mips.texi: Document ".set sym32", ".set nosym32",
	-msym32 and -mno-sym32.
@
text
@d432 1
@


1.104.2.1
log
@	* config/tc-mips.c (append_insn): Remove cop_interlocks test from
	branch delay code.
@
text
@a431 1
    run_dump_test "branch-misc-3"
@


1.104.2.2
log
@	* config/tc-mips.c (MAX_VR4130_NOPS, MAX_DELAY_NOPS): New macros.
	(MAX_NOPS): Bump to 4.
	(mips_fix_vr4130): New variable.
	(nops_for_vr4130): New function.
	(nops_for_insn): Use MAX_DELAY_NOPS rather than MAX_NOPS.  Use
	nops_for_vr4130 if working around VR4130 errata.
	(OPTION_FIX_VR4130, OPTION_NO_FIX_VR4130): New macros.
	(md_longopts): Add -mfix-vr4130 and -mno-fix-vr4130.
	(md_parse_option): Handle them.
	(md_show_usage): Print them.
	* doc/c-mips.texi: Document -mfix-vr4130 and -mno-fix-vr4130.
@
text
@a547 1
    run_dump_test "vr4130"
@


1.104.2.3
log
@gas/:
* config/tc-mips.c (IS_ZEXT_32BIT_NUM): New macro.
(normalize_address_expr): New function to sign-extend address
offsets that fit into 32 bits in 32-bit mode.
(macro_build_ldst_constoffset): Use normalize_address_expr()
instead of a handcoded sequence.
(load_register): Likewise.  Report oversized numbers in a useful
way.
(macro) [ld_st, ldd_std]: Reject all oversized offsets, not only
for constant addresses.  Report oversized numbers in a useful way.
(mips_ip): Use normalize_address_expr() for addresses.

gas/testsuite/:
* gas/mips/ldstla-32.s: Exclude offsets that are now meant to fail
and include more instructions/offsets that are meant to succeed.
Use $4 instead $3 to avoid register dependencies.
* gas/mips/ldstla-32.d: Update accordingly.
* gas/mips/ldstla-32-shared.d: Likewise.
* gas/mips/ldstla-32-mips3.d: New test based on the above, except
for mips3.
* gas/mips/ldstla-32-mips3-shared.d: Similarly, for PIC.
* gas/mips/ldstla-32-mips3.s: Source for the new tests.
* gas/mips/ldstla-32-1.s: New test for offsets that are meant to
fail.
* gas/mips/ldstla-32-mips3-1.s: Likewise, for mips3.
* gas/mips/ldstla-32-1.l: Stderr output for the new test.
* gas/mips/ldstla-32-mips3-1.l: Likewise.
* gas/mips/mips.exp: Run the new tests.
@
text
@a729 1
    run_dump_test "ldstla-32-mips3"
a730 9
    run_dump_test "ldstla-32-mips3-shared"
    run_list_test "ldstla-32-1" "-mabi=32" \
	"MIPS ld-st-la bad constants (ABI o32)"
    run_list_test "ldstla-32-mips3-1" "-mabi=32" \
	"MIPS ld-st-la bad constants (ABI o32, mips3)"
    run_list_test "ldstla-32-1" "-KPIC -mabi=32" \
	"MIPS ld-st-la bad constants (ABI o32, shared)"
    run_list_test "ldstla-32-mips3-1" "-KPIC -mabi=32" \
	"MIPS ld-st-la bad constants (ABI o32, mips3, shared)"
@


1.103
log
@	* gas/mips/mips.exp: Move tls tests to main $elf block.
@
text
@d729 1
a730 2
	run_dump_test "ldstla-n32"
	run_dump_test "ldstla-n32-shared"
d733 1
@


1.102
log
@	* gas/mips/tls-o32.d, gas/mips/tls-o32.s, gas/mips/tls-ill.l,
	gas/mips/tls-ill.s: New files.
	* gas/mips/mips.exp: Run TLS tests.
@
text
@a338 5

    if $elf {
	run_list_test "tls-ill" "-32"
	run_dump_test "tls-o32"
    }
d688 3
@


1.101
log
@* gas/mips/mips16-dwarf2.d: Pass -mabi=32.  Include relocation
information.
* gas/mips/mips16-dwarf2-n32.d: New test to check DWARF2 line
information for MIPS16 for the n32 ABI.
* gas/mips/mips.exp. Run the new test.
@
text
@d339 5
@


1.100
log
@gas/:
* config/tc-mips.c (append_insn): Call dwarf2_emit_insn() before
emitting insn.

gas/testsuite/:
* gas/mips/mips16-dwarf2.d: New test to check DWARF2 line
information for MIPS16.
* gas/mips/mips16-dwarf2.s: Source for the new test.
* gas/mips/mips.exp: Run the new test.
@
text
@d752 3
@


1.99
log
@	/gas/ChangeLog
	* config/tc-mips.c (macro_build_ldst_constoffset): Fail on $at
	uses after .set noat.
	(load_address): Likewise.
	(macro): Likewise. Don't try to avoid $at use by sacrificing
	the target register before it is stored, it won't work.

	/gas/testsuite/ChangeLog
	* gas/mips/noat-1.s, gas/mips/noat-1.d, gas/mips/noat-2.s,
	gas/mips/noat2.l, gas/mips/noat-3.s, gas/mips/noat-3.l,
	gas/mips/noat-4.s, gas/mips/noat-4.l, gas/mips/noat-5.s,
	gas/mips/noat-5.l, gas/mips/noat-6.s, gas/mips/noat-6.l,
	gas/mips/noat-7.s, gas/mips/noat-7.l: New files, testcases for
	.set noat in macro expansions.
	* gas/mips/mips.exp: Run new testcases.
	* gas/mips/rol-hw.d, gas/mips/rol-hw.l, gas/mips/rol.d,
	gas/mips/rol.l, gas/mips/rol.s, gas/mips/rol64-hw.d,
	gas/mips/rol64-hw.l, gas/mips/rol64.d, gas/mips/rol64.l,
	gas/mips/rol64.s, gas/mips/uld2-eb.d, gas/mips/uld2-el.d,
	gas/mips/uld2.l, gas/mips/uld2.s, gas/mips/ulh2-eb.d,
	gas/mips/ulh2-el.d, gas/mips/ulh2.l, gas/mips/ulh2.s,
	gas/mips/ulw2-eb-ilocks.d, gas/mips/ulw2-eb.d,
	gas/mips/ulw2-el-ilocks.d, gas/mips/ulw2-el.d, gas/mips/ulw2.l,
	gas/mips/ulw2.s: Don't try to test .set noat.
@
text
@d749 4
@


1.98
log
@bfd/:
2005-02-15  Nigel Stephens  <nigel@@mips.com>
            Maciej W. Rozycki  <macro@@mips.com>

	* elf32-mips.c (elf_mips16_howto_table_rel): New array for MIPS16
	reloc howtos.  Add R_MIPS16_HI16 and R_MIPS16_LO16 relocs and
	R_MIPS16_GOT16 and R_MIPS16_CALL16 placeholders.
	(elf_mips16_jump_howto): Move into elf_mips16_howto_table_rel.
	(elf_mips16_gprel_howto): Likewise.  Redefine src_mask and
	dst_mask.
	(mips16_gprel_reloc): Remove bit shuffling; call
	_bfd_mips16_elf_reloc_unshuffle(), _bfd_mips_elf_gprel16_with_gp()
	and _bfd_mips16_elf_reloc_shuffle() instead.
	(mips16_reloc_map): New reloc map for MIPS16 relocs.
	(bfd_elf32_bfd_reloc_type_lookup): Use mips16_reloc_map for MIPS16
	relocs.
	(mips_elf32_rtype_to_howto): Fetch MIPS16 howtos from
	elf_mips16_howto_table_rel.
	* elf64-mips.c (mips16_elf64_howto_table_rel): New array for
	MIPS16 REL reloc howtos.  Add R_MIPS16_HI16 and R_MIPS16_LO16
	relocs and R_MIPS16_GOT16 and R_MIPS16_CALL16 placeholders.
	(elf_mips16_jump_howto): Move into mips16_elf64_howto_table_rel.
	(elf_mips16_gprel_howto): Likewise.  Redefine src_mask and
	dst_mask.
	(mips16_elf64_howto_table_rela): New array for MIPS16 RELA
	reloc howtos.  Add R_MIPS16_26, R_MIPS16_GPREL, R_MIPS16_HI16 and
	R_MIPS16_LO16 relocs and R_MIPS16_GOT16 and R_MIPS16_CALL16
	placeholders.
	(mips16_gprel_reloc): Remove bit shuffling; call
	_bfd_mips16_elf_reloc_unshuffle(), _bfd_mips_elf_gprel16_with_gp()
	and _bfd_mips16_elf_reloc_shuffle() instead.
	(mips16_reloc_map): New reloc map for MIPS16 relocs.
	(bfd_elf64_bfd_reloc_type_lookup): Use mips16_reloc_map for MIPS16
	relocs.
	(mips_elf64_rtype_to_howto): Fetch MIPS16 howtos from
	mips16_elf64_howto_table_rela or mips16_elf64_howto_table_rel.
	* elfn32-mips.c (elf_mips16_howto_table_rel): New array for MIPS16
	REL reloc howtos.  Add R_MIPS16_HI16 and R_MIPS16_LO16 relocs and
	R_MIPS16_GOT16 and R_MIPS16_CALL16 placeholders.
	(elf_mips16_jump_howto): Move into elf_mips16_howto_table_rel.
	(elf_mips16_gprel_howto): Likewise.  Redefine src_mask and
	dst_mask.
	(mips16_gprel_reloc): Remove bit shuffling; call
	_bfd_mips16_elf_reloc_unshuffle(), _bfd_mips_elf_gprel16_with_gp()
	and _bfd_mips16_elf_reloc_shuffle() instead.
	(mips16_reloc_map): New reloc map for MIPS16 relocs.
	(bfd_elf32_bfd_reloc_type_lookup): Use mips16_reloc_map for MIPS16
	relocs.
	(mips_elf_n32_rtype_to_howto): Fetch MIPS16 howtos from
	elf_mips16_howto_table_rela or elf_mips16_howto_table_rel.
	* elfxx-mips.c (_bfd_mips16_elf_reloc_unshuffle): New function to
	handle bit shuffling for MIPS16 relocs.
	(_bfd_mips16_elf_reloc_shuffle): Likewise.
	(_bfd_mips_elf_lo16_reloc): Use _bfd_mips16_elf_reloc_unshuffle()
	and _bfd_mips16_elf_reloc_shuffle().
	(_bfd_mips_elf_generic_reloc): Likewise.
	(mips_elf_calculate_relocation): Likewise.  Handle R_MIPS16_HI16
	and R_MIPS16_LO16.
	(mips_elf_obtain_contents): Remove bit shuffling.
	(mips_elf_perform_relocation): Likewise; call
	_bfd_mips16_elf_reloc_unshuffle() and _bfd_mips16_elf_reloc_shuffle()
	instead.
	(_bfd_mips_elf_relocate_section): Likewise.  Handle R_MIPS16_HI16
	and R_MIPS16_LO16.
	* elfxx-mips.h (_bfd_mips16_elf_reloc_unshuffle): Declare.
	(_bfd_mips16_elf_reloc_shuffle): Likewise.
	* reloc.c (BFD_RELOC_MIPS16_HI16): New reloc.
	(BFD_RELOC_MIPS16_HI16_S): Likewise.
	(BFD_RELOC_MIPS16_LO16): Likewise.
	* bfd-in2.h: Regenerate.
	* libbfd.h: Regenerate.

gas/:
2005-02-15  Nigel Stephens  <nigel@@mips.com>
            Maciej W. Rozycki  <macro@@mips.com>

	* config/tc-mips.c (reloc_needs_lo_p): Handle
	BFD_RELOC_MIPS16_HI16_S.
	(fixup_has_matching_lo_p): Handle BFD_RELOC_MIPS16_LO16.
	(append_insn): Add BFD_RELOC_MIPS16_GPREL, BFD_RELOC_MIPS16_HI16_S
	and BFD_RELOC_MIPS16_LO16 to relocs to suppress overflow
	complaints on.
	(mips16_ip): Resolve BFD_RELOC_MIPS16_HI16_S,
	BFD_RELOC_MIPS16_HI16 and BFD_RELOC_MIPS16_LO16 for constants.
	Call my_getSmallExpression() to parse percent operators.
	(percent_op_match, mips_percent_op): Separate definitions.
	(mips16_percent_op): Define percent operators for the MIPS16 mode.
	(parse_relocation): Handle the MIPS16 mode using
	mips16_percent_op.
	(md_apply_fix3): Handle BFD_RELOC_MIPS16_HI16,
	BFD_RELOC_MIPS16_HI16_S and BFD_RELOC_MIPS16_LO16.

gas/testsuite/:
2005-02-15  Nigel Stephens  <nigel@@mips.com>
            Maciej W. Rozycki  <macro@@mips.com>

	* gas/mips/mips16-hilo.d: New test for the R_MIPS16_HI16 and
	R_MIPS16_LO16 relocs.
	* gas/mips/mips16-hilo-n32.d: Likewise, for the n32 ABI.
	* gas/mips/mips16-hilo.s: Source for the new tests.
	* gas/mips/mips.exp: Run the new tests.

include/:
2005-02-15  Nigel Stephens  <nigel@@mips.com>
            Maciej W. Rozycki  <macro@@mips.com>

	* elf/mips.h (R_MIPS16_GOT16): New reloc code.
	(R_MIPS16_CALL16): Likewise.
	(R_MIPS16_HI16): Likewise.
	(R_MIPS16_LO16): Likewise.
	(R_MIPS16_min): New fake reloc code.
	(R_MIPS16_max): Likewise.

ld/testsuite/:
2005-02-15  Nigel Stephens  <nigel@@mips.com>
            Maciej W. Rozycki  <macro@@mips.com>

	* ld-mips-elf/mips16-hilo.d: New test for the R_MIPS16_HI16 and
	R_MIPS16_LO16 relocs.
	* ld-mips-elf/mips16-hilo-n32.d: Likewise, for the n32 ABI.
	* ld-mips-elf/mips16-hilo.s: Auxiliary source for the new tests.
	* ld-mips-elf/mips-elf.exp: Run the new tests.
@
text
@d741 8
@


1.97
log
@	* gas/mips/elf-rel23a.d: New test.
	* gas/mips/elf-rel23b.d: New test.
	* gas/mips/elf-rel25.s: New test.
	* gas/mips/elf-rel25.d: New test.
	* gas/mips/elf-rel25a.d: New test.
	* gas/mips/mips.exp: Run new tests.
@
text
@d532 5
@


1.96
log
@	* config/tc-mips.c (append_insn): Use fix_new rather than fix_new_exp
	to build the second and third fixups for a composite relocation.
	(macro_read_relocs): New function.
	(macro_build): Use it.
	(s_cpsetup): Pass all three composite relocation codes to macro_build.
	Simplify fragging code accordingly.
	(s_gpdword): Use fix_new rather than fix_new_exp for the second part
	of the composite relocation.  Set fx_tcbit in both fixups.
@
text
@d669 2
d674 3
@


1.95
log
@	* elf64-mips.c (mips_elf64_write_rel): Use STN_UNDEF for relocs
	against the absolute section.
	(mips_elf64_write_rela): Likewise.
@
text
@d668 2
@


1.94
log
@	* config/tc-mips.c (append_insn): Set fx_tcbit for composite relocs.
	(md_apply_fix3): Don't treat composite relocs as done.
@
text
@d667 1
@


1.93
log
@* config/tc-mips.c (append_insn): Handle delay slots in branch likely
correctly.
@
text
@d665 3
@


1.92
log
@	* config/tc-mips.c (HAVE_IN_PLACE_ADDENDS): New macro.
	(reloc_needs_lo_p): Only return true if HAVE_IN_PLACE_ADDENDS.
	(mips_frob_file): Rework so that only a single pass through the
	relocs is needed.  Allow %lo()s to have higher offsets than their
	corresponding %hi()s or %got()s.

testsuite/
	* gas/mips/elf{,el}-rel.d: Adjust so that the earliest %hi() matches
	the earliest %lo().
	* gas/mips/elf-rel11.d: Don't expect the relocs to be reordered.
	* gas/mips/elf-rel20.[sd]: New test.
	* gas/mips/mips.exp: Run it.
@
text
@d432 1
@


1.91
log
@	* gas/h8300/t03_add.exp: Remove stray semicolons.
	* gas/h8300/t04_sub.exp: Likewise.
	* gas/h8300/t05_cmp.exp: Likewise.
	* gas/h8300/t08_or.exp: Likewise.
	* gas/h8300/t09_xor.exp: Likewise.
	* gas/h8300/t10_and.exp: Likewise.
	* gas/hppa/reloc/reloc.exp: Likewise.
	* gas/hppa/unsorted/unsorted.exp: Likewise.
	* gas/i386/i386.exp: Likewise.
	* gas/m68hc11/m68hc11.exp: Likewise.
	* gas/mips/mips.exp: Likewise.
	* gas/sparc/sparc.exp: Likewise.
	* lib/gas-defs.exp: Likewise.
@
text
@d663 1
@


1.90
log
@	* config/tc-mips.c (append_insn, mips_emit_delays): Extend -mfix-vr4120
	to cope with VR4181A errata MD(1) and MD(4).
@
text
@d257 1
a257 1
	    continue;
@


1.89
log
@* config/tc-mips.c (load_delay_nop): New function.
(load_address, macro): Use load_delay_nop() to build a nop
which can be omitted with gpr_interlocks.

* gas/mips/lb-xgot-ilocks.d: Remove nops in load delay slot.
* gas/mips/mips-abi32-pic.d: Likewise.
* gas/mips/mips-abi32-pic2.d: Likewise.
* gas/mips/mips-gp32-fp32-pic.d: Likewise.
* gas/mips/mips-gp32-fp64-pic.d: Likewise.
* gas/mips/mips-gp64-fp32-pic.d: Likewise.
* gas/mips/mips-gp64-fp64-pic.d: Likewise.
* gas/mips/relax-swap1-mips2.d: Likewise.
* gas/mips/lb-svr4pic-ilocks.d: New test.
* gas/mips/mips.exp: Run it.
@
text
@d540 1
a540 1
    run_dump_test "vr4122"
@


1.88
log
@2004-04-21  Chris Demetriou  <cgd@@broadcom.com>

	* gas/mips/elempic.d: File removed as part of -membedded-pic removal.
	* gas/mips/empic.d: Likewise.
	* gas/mips/empic.l: Likewise.
	* gas/mips/empic.s: Likewise.
	* gas/mips/empic2.d: Likewise.
	* gas/mips/empic2.s: Likewise.
	* gas/mips/empic3_e.d: Likewise.
	* gas/mips/empic3_e.s: Likewise.
	* gas/mips/empic3_g1.d: Likewise.
	* gas/mips/empic3_g1.s: Likewise.
	* gas/mips/empic3_g2.d: Likewise.
	* gas/mips/empic3_g2.s: Likewise.
	* gas/mips/jal-empic-elf-2.d: Likewise.
	* gas/mips/jal-empic-elf-2.s: Likewise.
	* gas/mips/jal-empic-elf-3.d: Likewise.
	* gas/mips/jal-empic-elf-3.s: Likewise.
	* gas/mips/jal-empic-elf.d: Likewise.
	* gas/mips/jal-empic.d: Likewise.
	* gas/mips/la-empic.d: Likewise.
	* gas/mips/la-empic.s: Likewise.
	* gas/mips/lb-empic.d: Likewise.
	* gas/mips/ld-empic.d: Likewise.
	* gas/mips/lif-empic.d: Likewise.
	* gas/mips/telempic.d: Likewise.
	* gas/mips/tempic.d: Likewise.
	* gas/mips/ulh-empic.d: Likewise.
	* gas/mips/ld-pic.s: Remove code conditional on EMPIC.
	* gas/mips/lifloat.s: Likewise.
	* gas/mips/mips.exp: Remove -membedded-pic tests and related comments.
@
text
@d461 2
a462 1
	run_dump_test_arches "lb-svr4pic" [mips_arch_list_matching mips1]
@


1.87
log
@	* gas/mips/macro-warn-[1234].[sdl]: New tests.
	* gas/mips/macro-warn-[12]-n32.[dl]: New tests.
	* gas/mips/mips.exp: Run them.
@
text
@a447 9
    # LOSE: As of 2002-02-08, the jal-empic test fails for target mips-ecoff.
    # It appears that it broke between 2000-03-11 00:00UTC and
    # 2000-03-12 00:00 UTC.
    if $ecoff { run_dump_test "jal-empic" }
    if $elf {
	run_dump_test_arches "jal-empic-elf" [mips_arch_list_matching mips1]
	run_dump_test_arches "jal-empic-elf-2" [mips_arch_list_matching mips1]
	run_dump_test_arches "jal-empic-elf-3" [mips_arch_list_matching mips1]
    }
a452 4
    # LOSE: As of 2002-02-08, the la-empic test fails for target mips-ecoff.
    # Not sure when it first cropped up, but may be related to addition of
    # "la" -> "addiu" pattern in MIPS opcode table long ago.
    if $ecoff { run_dump_test "la-empic" }
a468 1
    if $ecoff { run_dump_test "lb-empic" }
a481 1
    if $ecoff { run_dump_test "ld-empic" }
a485 4
    # LOSE: As of 2002-02-08, the lif-empic test fails for target mips-ecoff.
    # It appears that it broke between 2000-03-11 00:00UTC and
    # 2000-03-12 00:00 UTC.
    if $ecoff { run_dump_test "lif-empic" }
a506 1
    if $ecoff { run_dump_test "ulh-empic" }
a662 5
	run_dump_test "${tmips}${el}empic"
	run_dump_test "empic2"
	run_dump_test "empic3_e"
	run_dump_test "empic3_g1"
	run_dump_test "empic3_g2"
@


1.87.4.1
log
@	* config/tc-mips.c (append_insn): Handle delay slots in branch likely
	correctly.
	* gas/mips/branch-swap.s: New testcase.
	* gas/mips/branch-swap.d: New testcase.
	* gas/mips/mips.exp: Run the testcase.
@
text
@a431 1
    run_dump_test "branch-swap"
@


1.86
log
@	* config/tc-mips.h (tc_frag_data_type, TC_FRAG_TYPE): Remove.
	* config/tc-mips.c (RELAX_ENCODE): Take three arguments: the size of
	the first sequence, the size of the second sequence, and a flag
	that says whether we should warn.
	(RELAX_OLD, RELAX_NEW, RELAX_RELOC[123]): Delete.
	(RELAX_FIRST, RELAX_SECOND): New.
	(mips_relax): New variable.
	(relax_close_frag, relax_start, relax_switch, relax_end): New fns.
	(append_insn): Remove "place" argument.  Use mips_relax.sequence
	rather than "place" to check whether we're expanding the second
	alternative of a relaxable macro.  Remove redundant check for
	branch relaxation.  If generating a normal insn, and there
	is not enough room in the current frag, call relax_close_frag()
	to close it.  Update mips_relax.sizes[].  Emit fixups for the
	second version of a relaxable macro.  Record the first relaxable
	fixup in mips_relax.  Remove tc_gen_reloc workaround.
	(macro_build): Remove all uses of "place".  Use mips_relax.sequence
	in the same way as in append_insn.
	(mips16_macro_build): Remove "place" argument.
	(macro_build_lui): As for macro_build.  Don't drop the add_symbol
	when generating the second version of a relaxable macro.
	(load_got_offset, add_got_offset): New functions.
	(load_address, macro): Use new relaxation machinery.  Remove
	tc_gen_reloc workarounds.
	(md_estimate_size_before_relax): Set RELAX_USE_SECOND if the second
	version of a relaxable macro is needed.  Return -RELAX_SECOND if the
	first version is needed.
	(tc_gen_reloc): Remove relaxation handling.
	(md_convert_frag): Go through the fixups for a relaxable macro and
	mark those that belong to the unneeded alternative as done.  If the
	second alternative is needed, adjust the fixup addresses to account
	for the deleted first alternative.

testsuite/
	* gas/mips/elf-rel19.[sd]: New test.
	* gas/mips/mips.exp: Run it.
@
text
@d738 9
@


1.85
log
@gas/
* config/tc-mips.c (append_insn): Properly detect variant frags
that preclude swapping of relaxed branches.  Correctly swap
instructions between frags when dealing with relaxed branches.

gas/testsuite/
* gas/mips/relax-swap1-mips1.d: New test for branch relaxation
with swapping for MIPS1.
* gas/mips/relax-swap1-mips2.d: New test for branch relaxation
with swapping for MIPS2.
* gas/mips/relax-swap1.l: Stderr output for the new tests.
* gas/mips/relax-swap1.s: Source for the new tests.
* gas/mips/relax-swap2.d: New test for branch likely relaxation
with swapping.
* gas/mips/relax-swap2.l: Stderr output for the new test.
* gas/mips/relax-swap2.s: Source for the new test.
* gas/mips/mips.exp: Run the new tests.
@
text
@d681 1
@


1.84
log
@	* elf64-mips.c (mips_elf64_slurp_one_reloc_table): Call
	mips_elf64_rtype_to_howto instead of using howto_table.

	* gas/mips/mips16-64.d: New test.
	* gas/mips/mips.exp: Run it.
@
text
@d592 3
@


1.83
log
@gas/
	* config/tc-mips.c (macro_build_jalr): When adding an R_MIPS_JALR
	reloc, reserve space for the delay slot as well as the jalr itself.

gas/testsuite/
	* gas/mips/elf-rel18.[sd]: New test.
	* gas/mips/mips.exp: Run it.
@
text
@d546 1
@


1.82
log
@bfd/
	* elf32-mips.c (elf_mips_howto_table_rel): Replace all uses of
	mips_elf_generic_reloc with _bfd_mips_elf_generic_reloc.  Use
	_bfd_mips_elf_hi16_reloc for R_MIPS_HI16 and R_MIPS_GNU_REL_HI16,
	_bfd_mips_elf_lo16_reloc for R_MIPS_LO16 and R_MIPS_GNU_REL_LO16,
	and _bfd_mips_elf_got16_reloc for R_MIPS_GOT16.  Change rightshift
	to 16 for R_MIPS_HI16 and R_MIPS_GNU_REL_HI16.
	(mips_elf_generic_reloc, struct mips_hi16, mips_elf_hi16_reloc)
	(mips_elf_lo16_reloc, mips_elf_got16_reloc): Delete.
	(_bfd_mips_elf32_gprel16_reloc): Remove special case.
	(mips_elf_gprel32_reloc, mips32_64bit_reloc): Likewise.

	* elf64-mips.c (mips_elf64_howto_table_rel): Replace all uses of
	mips_elf_generic_reloc with _bfd_mips_elf_generic_reloc.  Use
	_bfd_mips_elf_hi16_reloc for R_MIPS_HI16, _bfd_mips_elf_lo16_reloc
	for R_MIPS_LO16 and _bfd_mips_elf_got16_reloc for R_MIPS_GOT16.
	Change R_MIPS_HI16's rightshift to 16.
	(mips_elf64_howto_table_rela): Replace all uses of
	mips_elf_generic_reloc with _bfd_mips_elf_generic_reloc.
	Use _bfd_mips_elf_generic_reloc for R_MIPS_GOT16 as well.
	(mips_elf64_hi16_reloc, mips_elf64_got16_reloc): Delete.
	(mips_elf64_shift6_reloc): Remove special case.  Use
	_bfd_mips_elf_generic_reloc instead of returning bfd_reloc_continue.

	* elfn32-mips.c (prev_reloc_section): Delete.
	(prev_reloc_address, prev_reloc_addend): Delete.
	(elf_mips_howto_table_rel, elf_mips_howto_table_rela): As for
	elf64-mips.c
	(GET_RELOC_ADDEND, SET_RELOC_ADDEND): Delete.
	(mips_elf_generic_reloc, struct mips_hi16, mips_elf_hi16_reloc)
	(mips_elf_lo16_reloc, mips_elf_got16_reloc): Delete.
	(mips_elf_gprel16_reloc): Delete use of GET_RELOC_ADDEND.
	(mips_elf_literal_reloc, mips_elf_gprel32_reloc): Likewise.
	(mips16_jump_reloc, mips16_gprel_reloc): Likewise.
	(mips_elf_shift6_reloc): Likewise.  Delete use of SET_RELOC_ADDEND.

	* elfxx-mips.c (_bfd_mips_elf_gprel16_with_gp): Use
	_bfd_relocate_contents to install an in-place addend.
	(mips_hi16): New structure.
	(mips_hi16_list): Moved from elf32-mips.c.
	(_bfd_mips_elf_hi16_reloc, _bfd_mips_elf_got16_reloc): New functions.
	(_bfd_mips_elf_lo16_reloc, _bfd_mips_elf_generic_reloc): New functions.
	(mips_elf_calculate_relocation): Assume addend is unshifted.
	(_bfd_mips_elf_relocate_section): Don't apply the howto rightshift
	on top of the usual high-part shift.  Don't shift the addend right
	before calling mips_elf_calculate_relocation.

	* elfxx-mips.h (_bfd_mips_elf_hi16_reloc): Declare.
	(_bfd_mips_elf_got16_reloc, _bfd_mips_elf_lo16_reloc): Declare.
	(_bfd_mips_elf_generic_reloc): Declare.

gas/
	* config/tc-mips.c (mips_need_elf_addend_fixup): Delete.
	(md_apply_fix3): Remove bfd_install_relocation workarounds.
	(tc_gen_reloc): Likewise. Factor handling of pc-relative relocations
	and treat fx_addnumber as relative to the relocation address.

gas/testsuite/
	* gas/mips/mips16-jalx.d: Use -mabi=o64.
	* gas/mips/mips16.d: Likewise.
	* gas/mips/elf-rel17.[sd]: New test.
	* gas/mips/mips.exp: Run it.
@
text
@d674 3
@


1.81
log
@gas/
	* config/tc-mips.c (macro): Switch misordered call to frag_grow()
	and setting of tc_fr_offset.

gas/testsuite/
	* gas/mips/elf-rel16.[sd]: New test.
	* gas/mips/mips.exp: Run it.
	* gas/mips/elf-rel-xgot-n32.d: Fix addends for "lw $5,dl1+34($5)".
	* gas/mips/elf-rel-xgot-n64.d: Likewise.
@
text
@d673 1
@


1.80
log
@* config/tc-mips.c (macro): Handle new macros: "lca" and "dlca"
for loading addresses using CALL relocations.
Don't emit CALL relocations when a base register is used.

* gas/mips/lca-svr4pic.d: New test for the "lca" macro.
* gas/mips/lca-xgot.d: Likewise.
* gas/mips/lca.s: Source for the new tests.
* gas/mips/mips.exp: Run the new tests.

* opcode/mips.h: Define new enum members, M_LCA_AB and M_DLCA_AB.

* mips-opc.c (mips_builtin_opcodes): Handle new macros: "lca" and
"dlca".
@
text
@d666 1
@


1.79
log
@	* config/tc-mips.c (macro_build_ldst_constoffset): Fix sign extension
	tests.
	(load_register): Likewise.
	(macro): Likewise.

	* gas/mips/ldstla-32-shared.d: New file.
	* gas/mips/ldstla-32.d: New file.
	* gas/mips/ldstla-32.s: New file.
	* gas/mips/ldstla-n32-shared.d: New file.
	* gas/mips/ldstla-n32.d: New file.
	* gas/mips/ldstla-n32.s: New file.
	* gas/mips/ldstla-n64-shared.d: New file.
	* gas/mips/ldstla-n64.d: New file.
	* gas/mips/ldstla-n64.s: New file.
	* gas/mips/mips.exp: Add ld-st-la tests.
@
text
@d466 2
@


1.78
log
@[ bfd/ChangeLog ]
2003-09-30  Chris Demetriou  <cgd@@broadcom.com>

	* archures.c (bfd_mach_mipsisa64r2): New define.
	* bfd-in2.h: Regenerate.
	* aoutx.h (NAME(aout,machine_type)): Handle bfd_mach_mipsisa64r2.
	* cpu-mips.c (I_mipsisa64r2): New enum value.
	(arch_info_struct): Add entry for I_mipsisa64r2.
	* elfxx-mips.c (_bfd_elf_mips_mach)
	(_bfd_mips_elf_print_private_bfd_data): Handle E_MIPS_ARCH_64R2.
	(mips_set_isa_flags): Add bfd_mach_mipsisa64r2 case.
	(mips_mach_extensions): Add entry for bfd_mach_mipsisa64r2.

[ binutils/ChangeLog ]
2003-09-30  Chris Demetriou  <cgd@@broadcom.com>

	* readelf.c (get_machine_flags): Handle E_MIPS_ARCH_64R2.

[ gas/Changelog ]
2003-09-30  Chris Demetriou  <cgd@@broadcom.com>

	* configure.in (mipsisa64r2, mipsisa64r2el, mipsisa64r2*): New CPUs.
	* configure: Regenerate.
	* config/tc-mips.c (imm2_expr): New variable.
	(md_assemble, mips16_ip): Initialize imm2_expr.
	(ISA_HAS_64BIT_REGS, ISA_HAS_DROR, ISA_HAS_ROR): Add ISA_MIPS64R2.
	(macro_build): Handle +A, +B, +C, +E, +F, +G, and +H format operands.
	(macro): Handle M_DEXT and M_DINS.
	(validate_mips_insn): Handle +E, +F, +G, +H, and +I format operands.
	(mips_ip): Likewise.
	(OPTION_MIPS64R2): New define.
	(md_longopts): New entry for -mips64r2 (OPTION_MIPS64R2).
	OPTION_ASE_BASE): Increase to compensate for OPTION_MIPS64R2.
	(md_parse_option): Handle OPTION_MIPS64R2.
	(s_mipsset): Handle setting "mips64r2" ISA.
	(mips_cpu_info_table): Add mips64r2.
	(md_show_usage): Document -mips64r2 option.
	* doc/as.texinfo: Docuemnt -mips64r2 option.
	* doc/c-mips.texi: Likewise.

[ gas/testsuite/ChangeLog ]
2003-09-30  Chris Demetriou  <cgd@@broadcom.com>

	* gas/mips/cp0-names-mips64r2.d: New file.
	* gas/mips/cp0sel-names-mips64r2.d: New file.
	* gas/mips/elf_arch_mips64r2.d: New file.
	* gas/mips/hwr-names-mips64r2.d: New file.
	* gas/mips/mips32r2-ill-fp64.l: New file.
	* gas/mips/mips32r2-ill-fp64.s: New file.
	* gas/mips/mips64r2-ill.l: New file.
	* gas/mips/mips64r2-ill.s: New file.
	* gas/mips/mips64r2.d: New file.
	* gas/mips/mips64r2.s: New file.
	* gas/mips/mips.exp: Define "mips64r2" arch, and run new tests.

[ include/elf/ChangeLog ]
2003-09-30  Chris Demetriou  <cgd@@broadcom.com>

	* mips.h (E_MIPS_ARCH_64R2): New define.

[ include/opcode/ChangeLog ]
2003-09-30  Chris Demetriou  <cgd@@broadcom.com>

	* mips.h: Document +E, +F, +G, +H, and +I operand types.
	Update documentation of I, +B and +C operand types.
	(INSN_ISA64R2, ISA_MIPS64R2, CPU_MIPS64R2): New defines.
	(M_DEXT, M_DINS): New enum values.

[ ld/ChangeLog ]
2003-09-30  Chris Demetriou  <cgd@@broadcom.com>

	* ldmain.c (get_emulation): Ignore "-mips64r2".

[ ld/testsuite/ChangeLog ]
2003-09-30  Chris Demetriou  <cgd@@broadcom.com>

	* ld-mips-elf/mips-elf-flags.exp: Add tests for combinations
	with MIPS64r2.

[ opcodes/ChangeLog ]
2003-09-30  Chris Demetriou  <cgd@@broadcom.com>

	* mips-dis.c (mips_arch_choices): Add entry for "mips64r2"
	(print_insn_args): Add handing for +E, +F, +G, and +H.
	* mips-opc.c (I65): New define for MIPS64r2.
	(mips_builtin_opcodes): Add "dext", "dextm", "dextu", "dins",
	"dinsm", "dinsu", "drotl", "drotr", "drotr32", "drotrv", "dsbh",
	and "dshd" for MIPS64r2.  Adjust "dror", "dror32", and "drorv" to
	be supported on MIPS64r2.
@
text
@d717 9
@


1.77
log
@include/opcode/
	* mips.h (CPU_RM7000): New macro.
	(OPCODE_IS_MEMBER): Match CPU_RM7000 against 4650 insns.

bfd/
	* archures.c (bfd_mach_mips7000): New.
	* bfd-in2.h: Regenerated.
	* cpu-mips.c (arch_info_struct): Add an entry for mips:7000.
	* elfxx-mips.c (mips_set_isa_flags): Handle bfd_mach_mips7000.
	(mips_mach_extensions): Add an entry for it.

opcodes/
	* mips-dis.c (mips_arch_choices): Add rm7000 and rm9000 entries.

gas/
	* config/tc-mips.c (hilo_interlocks): True for CPU_RM7000.
	(mips_cpu_info_table): Add rm7000 and rm9000 entries.

gas/testsuite/
	* gas/mips/rm7000.[sd]: New test.
	* gas/mips/mips.exp: Run it.
@
text
@d369 4
d567 4
a570 1
    run_list_test_arches "mips32r2-ill" "-32" [mips_arch_list_matching mips32r2]
d574 3
d622 1
d704 1
d711 1
d716 1
@


1.76
log
@[ gas/ChangeLog ]
2003-07-08  Chris Demetriou  <cgd@@broadcom.com>

        * config/tc-mips.c (mips_validate_fix): Do not warn about branch
        target being a global symbol if not compiling SVR4 PIC code.

[ gas/testsuite/ChangeLog ]
2003-07-08  Chris Demetriou  <cgd@@broadcom.com>

        * gas/testsuite/gas/mips/mips.exp: Make sure that branch-misc-2 is
        run to compile non-PIC code, and add branch-misc-2pic.
        * gas/mips/branch-misc-2.l: Adjust for change in non-PIC warnings.
        * gas/mips/branch-misc-2pic.l: New file.
        * gas/mips/branch-misc-2pic.s: New file.
@
text
@d555 1
@


1.75
log
@	* ld-mips-elf/elf-rel-got-n64-linux.d: New file.
	* ld-mips-elf/elf-rel-xgot-n64-linux.d: New file.
	* ld-mips-elf/mips-elf.exp: Use the new files for Linux.
@
text
@d426 2
a427 1
    run_list_test_arches "branch-misc-2" "-32" [mips_arch_list_matching mips1]
@


1.74
log
@	* config/tc-mips.c (append_insn): In a compound relocation, take the
	field width from the final (outermost) operator.
@
text
@d565 2
@


1.73
log
@	* gas/mips/mips.exp: Fix typo.
	* gas/mips/elempic.d: Force o64 ABI.
	* gas/mips/telempic.d: Likewise.
	* ld-mips-elf/rel32-n32.d: Force big endian assembly.
	* ld-mips-elf/rel32-o32.d: Likewise.
	* ld-mips-elf/rel64.d: Likewise.
@
text
@d648 2
@


1.72
log
@	* gas/mips/jal-newabi.s: New file, testcase for NewABI xgot jal macro.
	* gas/mips/jal-newabi.d: Likewise.
	* gas/mips/mips.exp: Add new testcase.
@
text
@d403 1
a403 1
	set el el
@


1.71
log
@	* gas/mips/mips.exp: mips-*-linux-*, mipsel-*-linux-* use only 32-bit
	register width by default. Add them to addr32 and exclude offending
	testcases.
	* gas/mips/delay.s: Avoid odd floating point registers.
	* gas/mips/delay.d: Likewise.
	* gas/mips/nodelay.d: Likewise.
	* gas/mips/mips4.s: Likewise.
	* gas/mips/mips4.d: Likewise.
	* gas/mips/mips5.s: Likewise.
	* gas/mips/mips5.d: Likewise.
	* gas/mips/vr5400.s: Likewise.
	* gas/mips/vr5400.d: Likewise.
	* gas/mips/vr5500.s: Likewise.
	* gas/mips/vr5500.d: Likewise.
	* gas/mips/elf_e_flags2.d: Allow different expansions of the move
	macro.
	* gas/mips/elf_e_flags3.d: Likewise.
	* gas/mips/elf_e_flags4.d: Likewise.
	* gas/mips/uld2-eb.d: Likewise.
	* gas/mips/uld2-el.d: Likewise.
@
text
@d453 1
@


1.70
log
@* gas/mips/abs.d, gas/mips/add.d, gas/mips/and.d,
gas/mips/beq.d, gas/mips/bge.d, gas/mips/bgeu.d,
gas/mips/blt.d, gas/mips/bltu.d, gas/mips/branch-misc-1.d,
gas/mips/break20.d, gas/mips/cp0sel-names-mips32.d,
gas/mips/cp0sel-names-mips32r2.d,
gas/mips/cp0sel-names-mips64.d,
gas/mips/cp0sel-names-numeric.d, gas/mips/cp0sel-names-sb1.d,
gas/mips/elf-jal.d, gas/mips/elf-rel.d, gas/mips/elf-rel2.d,
gas/mips/elf-rel3.d, gas/mips/elf-rel4.d, gas/mips/elf-rel5.d,
gas/mips/elf-rel6.d, gas/mips/elf-rel7.d,
gas/mips/elf_arch_mips1.d, gas/mips/elf_arch_mips2.d,
gas/mips/elf_arch_mips3.d, gas/mips/elf_arch_mips32.d,
gas/mips/elf_arch_mips32r2.d, gas/mips/elf_arch_mips4.d,
gas/mips/elf_arch_mips5.d, gas/mips/elf_arch_mips64.d,
gas/mips/elf_ase_mips16.d, gas/mips/empic.d,
gas/mips/empic2.d, gas/mips/empic3_e.d, gas/mips/empic3_g1.d,
gas/mips/empic3_g2.d, gas/mips/hwr-names-mips32r2.d,
gas/mips/hwr-names-numeric.d, gas/mips/jal-empic-elf-2.d,
gas/mips/jal-empic-elf-3.d, gas/mips/jal-empic-elf.d,
gas/mips/jal-svr4pic.d, gas/mips/jal-xgot.d, gas/mips/jal.d,
gas/mips/la-empic.d, gas/mips/la-svr4pic.d,
gas/mips/la-xgot.d, gas/mips/la.d, gas/mips/lb-empic.d,
gas/mips/lb-svr4pic.d, gas/mips/lb-xgot-ilocks.d,
gas/mips/lb-xgot.d, gas/mips/lb.d, gas/mips/ld-empic.d,
gas/mips/ld-svr4pic.d, gas/mips/ld-xgot.d, gas/mips/ld.d,
gas/mips/li.d, gas/mips/lif-empic.d, gas/mips/lif-svr4pic.d,
gas/mips/lif-xgot.d, gas/mips/lifloat.d,
gas/mips/mips-gp32-fp32-pic.d, gas/mips/mips-gp32-fp32.d,
gas/mips/mips-gp32-fp64-pic.d, gas/mips/mips-gp32-fp64.d,
gas/mips/mips-gp64-fp32-pic.d, gas/mips/mips-gp64-fp32.d,
gas/mips/mips-gp64-fp64-pic.d, gas/mips/mips-gp64-fp64.d,
gas/mips/mips.exp, gas/mips/mips16-e.d, gas/mips/mips16-f.d,
gas/mips/mips32.d, gas/mips/mips32r2.d, gas/mips/mips4010.d,
gas/mips/mips4650.d, gas/mips/mips64.d, gas/mips/mipsel16-e.d,
gas/mips/mipsel16-f.d, gas/mips/rol-hw.d, gas/mips/rol.d,
gas/mips/sb.d, gas/mips/sync.d, gas/mips/tempic.d,
gas/mips/tmips16-e.d, gas/mips/tmips16-f.d,
gas/mips/tmipsel16-e.d, gas/mips/tmipsel16-f.d,
gas/mips/trunc.d, gas/mips/uld.d, gas/mips/ulh-empic.d,
gas/mips/ulh-svr4pic.d, gas/mips/ulh-xgot.d, gas/mips/ulh.d,
gas/mips/ulh2-eb.d, gas/mips/ulh2-el.d, gas/mips/ulw.d,
gas/mips/ulw2-eb.d, gas/mips/ulw2-eb-ilocks.d, gas/mips/ulw2-el.d,
gas/mips/ulw2-el-ilocks.d, gas/mips/usd.d, gas/mips/ush.d,
gas/mips/usw.d, gas/mips/vr4122.d: Added ABI specification.
gas/vtable/vtable.exp: mips64*-*-linux* and mips*-*-irix6* are
RELA.
@
text
@d394 1
a394 1
    set addr32 [expr [istarget mipstx39*-*-*]]
d433 3
a435 1
    run_dump_test_arches "dli"		[mips_arch_list_matching mips3]
d564 8
a571 6
    run_dump_test "mips64-mips3d"
    run_dump_test_arches "mips64-mips3d-incl" [mips_arch_list_matching mips3d]

    run_dump_test "mips64-mdmx"
    run_dump_test "sb1-ext-mdmx"
    run_dump_test "sb1-ext-ps"
@


1.69
log
@2003-05-02  Chris Demetriou  <cgd@@broadcom.com>

        * gas/mips/mips.exp (mips_arch_init): Reimplement in
        a way that's safe with ancient versions of tcl/expect.
@
text
@d426 1
a426 1
    run_list_test_arches "branch-misc-2" "" [mips_arch_list_matching mips1]
d450 1
a450 1
    run_list_test_arches "jal-range" ""	[mips_arch_list_matching mips1]
d540 1
a540 1
    run_list_test "mips-no-jalx" ""
d558 1
a558 1
    run_list_test_arches "mips32r2-ill" "" [mips_arch_list_matching mips32r2]
d571 2
a572 2
    run_list_test "illegal" ""
    run_list_test "baddata1" ""
@


1.68
log
@2003-05-01  Chris Demetriou  <cgd@@broadcom.com>

        * gas/mips/mips.exp (mips_arch_init): New function.
        Call it before setting up architecture array entries.
@
text
@d87 3
a89 1
    array unset mips_arches
@


1.67
log
@* gas/mips/elf-rel-got-n32.d, gas/mips/elf-rel-got-n32.s,
gas/mips/elf-rel-got-n64.d, gas/mips/elf-rel-got-n64.s,
gas/mips/elf-rel-xgot-n32.d, gas/mips/elf-rel-xgot-n64.d: New.
* gas/mips/mips.exp: Test them.
@
text
@d81 9
d346 1
@


1.67.2.1
log
@2003-05-01  Chris Demetriou  <cgd@@broadcom.com>

        * gas/mips/mips.exp (mips_arch_init): New function.
        Call it before setting up architecture array entries.
@
text
@a80 9
# mips_arch_init
#
# This function initializes the architecture data array ("mips_arches")
# to be empty.
proc mips_arch_init {} {
    global mips_arches
    array unset mips_arches
}

a336 1
mips_arch_init
@


1.67.2.2
log
@2003-05-02  Chris Demetriou  <cgd@@broadcom.com>

        * gas/mips/mips.exp (mips_arch_init): Reimplement in
        a way that's safe with ancient versions of tcl/expect.
@
text
@d87 1
a87 3

    # Catch becuase the variable won't be set the first time through.
    catch {unset mips_arches}
@


1.67.2.3
log
@	Merge from mainline:

	2003-05-06  Alexandre Oliva  <aoliva@@redhat.com>
	* gas/mips/abs.d, gas/mips/add.d, gas/mips/and.d,
	gas/mips/beq.d, gas/mips/bge.d, gas/mips/bgeu.d,
	gas/mips/blt.d, gas/mips/bltu.d, gas/mips/branch-misc-1.d,
	gas/mips/break20.d, gas/mips/cp0sel-names-mips32.d,
	gas/mips/cp0sel-names-mips32r2.d,
	gas/mips/cp0sel-names-mips64.d,
	gas/mips/cp0sel-names-numeric.d, gas/mips/cp0sel-names-sb1.d,
	gas/mips/elf-jal.d, gas/mips/elf-rel.d, gas/mips/elf-rel2.d,
	gas/mips/elf-rel3.d, gas/mips/elf-rel4.d, gas/mips/elf-rel5.d,
	gas/mips/elf-rel6.d, gas/mips/elf-rel7.d,
	gas/mips/elf_arch_mips1.d, gas/mips/elf_arch_mips2.d,
	gas/mips/elf_arch_mips3.d, gas/mips/elf_arch_mips32.d,
	gas/mips/elf_arch_mips32r2.d, gas/mips/elf_arch_mips4.d,
	gas/mips/elf_arch_mips5.d, gas/mips/elf_arch_mips64.d,
	gas/mips/elf_ase_mips16.d, gas/mips/empic.d,
	gas/mips/empic2.d, gas/mips/empic3_e.d, gas/mips/empic3_g1.d,
	gas/mips/empic3_g2.d, gas/mips/hwr-names-mips32r2.d,
	gas/mips/hwr-names-numeric.d, gas/mips/jal-empic-elf-2.d,
	gas/mips/jal-empic-elf-3.d, gas/mips/jal-empic-elf.d,
	gas/mips/jal-svr4pic.d, gas/mips/jal-xgot.d, gas/mips/jal.d,
	gas/mips/la-empic.d, gas/mips/la-svr4pic.d,
	gas/mips/la-xgot.d, gas/mips/la.d, gas/mips/lb-empic.d,
	gas/mips/lb-svr4pic.d, gas/mips/lb-xgot-ilocks.d,
	gas/mips/lb-xgot.d, gas/mips/lb.d, gas/mips/ld-empic.d,
	gas/mips/ld-svr4pic.d, gas/mips/ld-xgot.d, gas/mips/ld.d,
	gas/mips/li.d, gas/mips/lif-empic.d, gas/mips/lif-svr4pic.d,
	gas/mips/lif-xgot.d, gas/mips/lifloat.d,
	gas/mips/mips-gp32-fp32-pic.d, gas/mips/mips-gp32-fp32.d,
	gas/mips/mips-gp32-fp64-pic.d, gas/mips/mips-gp32-fp64.d,
	gas/mips/mips-gp64-fp32-pic.d, gas/mips/mips-gp64-fp32.d,
	gas/mips/mips-gp64-fp64-pic.d, gas/mips/mips-gp64-fp64.d,
	gas/mips/mips.exp, gas/mips/mips16-e.d, gas/mips/mips16-f.d,
	gas/mips/mips32.d, gas/mips/mips32r2.d, gas/mips/mips4010.d,
	gas/mips/mips4650.d, gas/mips/mips64.d, gas/mips/mipsel16-e.d,
	gas/mips/mipsel16-f.d, gas/mips/rol-hw.d, gas/mips/rol.d,
	gas/mips/sb.d, gas/mips/sync.d, gas/mips/tempic.d,
	gas/mips/tmips16-e.d, gas/mips/tmips16-f.d,
	gas/mips/tmipsel16-e.d, gas/mips/tmipsel16-f.d,
	gas/mips/trunc.d, gas/mips/uld.d, gas/mips/ulh-empic.d,
	gas/mips/ulh-svr4pic.d, gas/mips/ulh-xgot.d, gas/mips/ulh.d,
	gas/mips/ulh2-eb.d, gas/mips/ulh2-el.d, gas/mips/ulw.d,
	gas/mips/ulw2-eb.d, gas/mips/ulw2-eb-ilocks.d, gas/mips/ulw2-el.d,
	gas/mips/ulw2-el-ilocks.d, gas/mips/usd.d, gas/mips/ush.d,
	gas/mips/usw.d, gas/mips/vr4122.d: Added ABI specification.
	gas/vtable/vtable.exp: mips64*-*-linux* and mips*-*-irix6* are
	RELA.
@
text
@d426 1
a426 1
    run_list_test_arches "branch-misc-2" "-32" [mips_arch_list_matching mips1]
d450 1
a450 1
    run_list_test_arches "jal-range" "-32" [mips_arch_list_matching mips1]
d540 1
a540 1
    run_list_test "mips-no-jalx" "-32"
d558 1
a558 1
    run_list_test_arches "mips32r2-ill" "-32" [mips_arch_list_matching mips32r2]
d571 2
a572 2
    run_list_test "illegal" "-32"
    run_list_test "baddata1" "-32"
@


1.67.2.4
log
@	* gas/mips/mips.exp: mips-*-linux-*, mipsel-*-linux-* use only 32-bit
	register width by default. Add them to addr32 and exclude offending
	testcases.
	* gas/mips/delay.s: Avoid odd floating point registers.
	* gas/mips/delay.d: Likewise.
	* gas/mips/nodelay.d: Likewise.
	* gas/mips/mips4.s: Likewise.
	* gas/mips/mips4.d: Likewise.
	* gas/mips/mips5.s: Likewise.
	* gas/mips/mips5.d: Likewise.
	* gas/mips/vr5400.s: Likewise.
	* gas/mips/vr5400.d: Likewise.
	* gas/mips/vr5500.s: Likewise.
	* gas/mips/vr5500.d: Likewise.
	* gas/mips/elf_e_flags2.d: Allow different expansions of the move
	macro.
	* gas/mips/elf_e_flags3.d: Likewise.
	* gas/mips/elf_e_flags4.d: Likewise.
	* gas/mips/uld2-eb.d: Likewise.
	* gas/mips/uld2-el.d: Likewise.
@
text
@d394 1
a394 1
    set addr32 [expr [istarget mipstx39*-*-*] || [istarget mips-*-linux*] || [istarget mipsel-*-linux*]]
d433 1
a433 3
    if { !$addr32 } {
	run_dump_test_arches "dli"		[mips_arch_list_matching mips3]
    }
d562 6
a567 8
    if { !$addr32 } {
	run_dump_test "mips64-mips3d"
	run_dump_test_arches "mips64-mips3d-incl" [mips_arch_list_matching mips3d]

	run_dump_test "mips64-mdmx"
	run_dump_test "sb1-ext-mdmx"
	run_dump_test "sb1-ext-ps"
    }
@


1.67.2.5
log
@	* gas/mips/jal-newabi.s: New file, testcase for NewABI xgot jal macro.
	* gas/mips/jal-newabi.d: Likewise.
	* gas/mips/mips.exp: Add new testcase.
@
text
@a452 1
    if $has_newabi { run_dump_test "jal-newabi" }
@


1.67.2.6
log
@	* gas/mips/mips.exp: Fix typo.
	* gas/mips/elempic.d: Force o64 ABI.
	* gas/mips/telempic.d: Likewise.
	* ld-mips-elf/rel32-n32.d: Force big endian assembly.
	* ld-mips-elf/rel32-o32.d: Likewise.
	* ld-mips-elf/rel64.d: Likewise.
@
text
@d403 1
a403 1
	set el "el"
@


1.67.2.7
log
@	* gas/mips/elf-rel15.[sd]: New test.
	* gas/mips/mips.exp: Run it.
@
text
@a647 2
	    run_dump_test "elf-rel15"

@


1.66
log
@2003-04-04  Chris Demetriou  <cgd@@broadcom.com>

        * gas/mips/mips5.d: New test.
        * gas/mips/mips5.l: New test stderr listing.
        * gas/mips/mips5.s: New test source file.
        * gas/mips/mips.exp: Run the mips5 test.
@
text
@d629 8
@


1.65
log
@[ gas/ChangeLog ]
2003-04-02  Chris Demetriou  <cgd@@broadcom.com>

        * config/tc-mips.c (macro2): Adjust implementation of
        M_ULH, M_ULHU, M_ULW, and M_ULD so that they work properly
        in the case where the source and destination registers
        are the same.

[ gas/testsuite/ChangeLog ]
2003-04-02  Chris Demetriou  <cgd@@broadcom.com>

        * gas/mips/ulh.d: Adjust for ulh and ulhu macro assembly changes.

        * gas/mips/mips.exp: Define new "gpr_ilocks" architecture
        property, and add it to mips2 (and later) chips and r3900.
        * gas/mips/uld2.s: New test source file.
        * gas/mips/ulh2.s: Likewise.
        * gas/mips/ulw2.s: Likewise.
        * gas/mips/uld2.l: New test stderr listing.
        * gas/mips/ulh2.l: Likewise.
        * gas/mips/ulw2.l: Likewise.
        * gas/mips/uld2-eb.d: New test.
        * gas/mips/uld2-el.d: Likewise.
        * gas/mips/ulh2-eb.d: Likewise.
        * gas/mips/ulh2-el.d: Likewise.
        * gas/mips/ulw2-eb-ilocks.d: Likewise.
        * gas/mips/ulw2-eb.d: Likewise.
        * gas/mips/ulw2-el-ilocks.d: Likewise.
        * gas/mips/ulw2-el.d: Likewise.
        * gas/mips/mips.exp: Run new tests for appropriate architectures.
@
text
@d484 1
@


1.64
log
@* Reverted previous patch.
@
text
@d58 4
d339 1
a339 1
mips_arch_create mips2 	32	mips1	{} \
d359 1
a359 1
mips_arch_create r3900 	32	mips1	{} \
d499 2
d511 8
@


1.63
log
@	* elf32-mips.c (elf_mips_howto_table_rel): Change definition of
	R_MIPS_PC16 to rightshift 2.
	(elf_reloc_map mips_reloc_map): Map to rightshifted BFD reloc.
	(bfd_elf32_bfd_reloc_type_lookup): Support
	BFD_RELOC_MIPSEMB_16_PCREL_S2.
	* elf64-mips.c (mips_elf64_howto_table_rel): Change definition of
	R_MIPS_PC16 to rightshift 2.
	(mips_elf64_howto_table_rela): Likewise.
	(mips_reloc_map): Map to rightshifted BFD reloc.
	* elfn32-mips.c: The same as in elf64-mips.c.
	* elfxx-mips.c (mips_elf_got_for_ibfd): Typo in comment.
	(mips_elf_calculate_relocation): Handle rightshifted addends for
	R_MIPS_PC16.
	* reloc.c (BFD_RELOC_MIPSEMB_16_PCREL_S2): New BFD relocation for
	MIPS Embedded PIC. Remove superfluous empty COMMENT.
	* libbfd.h: Regenerate.
	* bfd-in2.h: Regenerate.
	* config/tc-mips.c (append_insn): Add handling of
	BFD_RELOC_MIPSEMB_16_PCREL_S2. Avoid emitting unneeded
	BFD_RELOC_16_PCREL_S2 relocs and add earlier warnings about
	misaligned address and reange overflow.
	(macro_build): Add handling of BFD_RELOC_MIPSEMB_16_PCREL_S2. Add
	earlier warnings about misaligned address and reange overflow.
	(mips_ip): Add handling of BFD_RELOC_MIPSEMB_16_PCREL_S2.
	(md_apply_fix): Likewise. Fix warning output.
	(tc_gen_reloc): Add handling of BFD_RELOC_MIPSEMB_16_PCREL_S2.
	Allow BFD_RELOC_16_PCREL_S2 for all ABIs.
	(md_convert_frag): Add handling of BFD_RELOC_MIPSEMB_16_PCREL_S2.
	* gas/mips/bge.d: Reactivate external branch tests.
	* gas/mips/bge.s: Likewise.
	* gas/mips/bgeu.d: Likewise.
	* gas/mips/bgeu.s: Likewise.
	* gas/mips/blt.d: Likewise.
	* gas/mips/blt.s: Likewise.
	* gas/mips/bltu.d: Likewise.
	* gas/mips/bltu.s: Likewise.
	* gas/mips/branch-misc-2.d: New File.
	* gas/mips/branch-misc-2.l: Remove.
	* gas/mips/mips.exp: Adjust branch-misc-2 test.
@
text
@d410 1
a410 1
    run_dump_test_arches "branch-misc-2" [mips_arch_list_matching mips1]
@


1.62
log
@	* config/tc-mips.c (prev_reloc_op_frag): New variable.
	(macro): Check it to decide whether a new frag is needed.
	(my_getSmallExpression): Set it.
@
text
@d410 1
a410 1
    run_list_test_arches "branch-misc-2" "" [mips_arch_list_matching mips1]
@


1.61
log
@gas/
	* config/tc-mips.c (reloc_needs_lo_p): New function.
	(fixup_has_matching_lo_p): New function.
	(append_insn): Use reloc_needs_lo_p to check whether a relocation
	might need a matching %lo().  Reuse the head of mips_hi_fixup_list
	if that fixup already has a matching %lo().  Don't call frag_wane here.
	(macro): Call frag_wane here if the last unmatched hi was in the
	current frag.
	(pic_need_relax): New function, split out from...
	(md_estimate_size_before_relax): ...here.
	(mips_frob_file): Use reloc_needs_lo_p.  Use pic_need_relax to test
	whether BFD_RELOC_MIPS_GOT16 fixups refer to global symbols.

gas/testsuite/
	* gas/mips/rel12.[sd], gas/mips/rel13.[sd]: New tests.
	* gas/mips/mips.exp: Run them.
@
text
@d613 1
@


1.60
log
@	* config/tc-mips.c (my_getSmallExpression): Rework bracket handling.

testsuite/
	* gas/mips/expr1.[sd]: New test.
	* gas/mips/mips.exp: Run it.
@
text
@d611 2
@


1.59
log
@gas/
	* config/tc-mips.c (enum small_ex_type): Remove.
	(imm_unmatched_hi): Remove.
	(md_assemble): Remove use of imm_unmatched_hi.  Remove the last
	argument from calls to append_insn.
	(append_insn): Remove unmatched_hi parameter; check reloc_type[0]
	instead.
	(macro_build): Update append_insn calls.
	(mips16_macro_build, macro_build_lui): Likewise.
	(mips_ip): Rework handling of small expressions.  Move explicit
	relocation handling into my_getSmallExpression.  Assume that the
	value of 'o' operands is zero if there is only one bracketed
	expression left.
	(percent_op): Make constant.  Record the BFD relocation code
	associated with each operator.
	(my_getSmallParser, my_getPercentOp): Remove.
	(parse_relocation): New function.
	(my_getSamllExpression): Rework.  Fill in relocations here
	rather than in mips_ip.

gas/testsuite
	* gas/mips/elf-rel8.[sd], gas/mips/elf-rel9.[sd],
	gas/mips/elf-rel10.[sd], gas/mips/elf-rel11.[sd]: New tests.
	* gas/mips/mips.exp: Run elf-rel8 and elf-rel9 for all elf
	targets.  Run elf-rel10 and elf-rel11 for NewABI targets.
@
text
@d621 1
@


1.58
log
@* gas/mips/n32-consec.d: New.
* gas/mips/n32-consec.s: New.
* gas/mips/mips.exp (run_list_test_arches): Run it on irix6 and
mips64*-linux* systems.
@
text
@d379 1
a379 1
    set hasn32 [expr [istarget *-*-irix6*] || [istarget mips64*-*-linux*]]
d605 6
d623 1
a623 1
    if $hasn32 {
@


1.57
log
@[ gas/ChangeLog ]
2002-12-31  Chris Demetriou  <cgd@@broadcom.com>

	* config/tc-mips.c (validate_mips_insn, mips_ip): Recognize
	the "+D" operand, which will be used only by the disassembler.

[ gas/testsuite/ChangeLog ]
2002-12-31  Chris Demetriou  <cgd@@broadcom.com>

	* gas/mips/cp0sel-names-mips32.d: New test.
	* gas/mips/cp0sel-names-mips32r2.d: New test.
	* gas/mips/cp0sel-names-mips64.d: New test.
	* gas/mips/cp0sel-names-numeric.d: New test.
	* gas/mips/cp0sel-names-sb1.d: New test.
	* gas/mips/cp0sel-names.s: New test source file.
	* gas/mips/mips.exp: Run new tests.

[ include/opcode/ChangeLog ]
2002-12-31  Chris Demetriou  <cgd@@broadcom.com>

	* mips.h: Note that the "+D" operand type name is now used.

[ opcodes/ChangeLog ]
2002-12-31  Chris Demetriou  <cgd@@broadcom.com>

	* mips-dis.c (mips_cp0sel_name): New structure.
	(mips_cp0sel_names_mips3264, mips_cp0sel_names_mips3264r2)
	(mips_cp0sel_names_sb1): New arrays.
	(mips_arch_choice): New structure members "cp0sel_names" and
	"cp0sel_names_len".
	(mips_arch_choices): Add references to new cp0sel_names arrays
	as appropriate, and make all existing entries reference
	appropriate mips_XXX_names_numeric arrays rather than simply
	using NULL.
	(mips_cp0sel_names, mips_cp0sel_names_len): New variables.
	(lookup_mips_cp0sel_name): New function.
	(set_default_mips_dis_options): Set mips_cp0sel_names and
	mips_cp0sel_names_len as appropriate.  Remove now-unnecessary
	checks for NULL register name arrays.
	(parse_mips_dis_option): Likewise.
	(print_insn_arg): Handle "+D" operand type.
	* mips-opc.c (mips_builtin_opcodes): Add new "+D" variants
	of mfc0, mtc0, dmfc0, and dmtc0 to print CP0+sel register
	names symbolically.
@
text
@d379 1
d615 4
@


1.56
log
@[ gas/testsuite/ChangeLog ]
2002-12-30  Chris Demetriou  <cgd@@broadcom.com>

	* gas/mips/elf_arch_mips1.d: New test.
	* gas/mips/elf_arch_mips2.d: New test.
	* gas/mips/elf_arch_mips3.d: New test.
	* gas/mips/elf_arch_mips4.d: New test.
	* gas/mips/elf_arch_mips5.d: New test.
	* gas/mips/elf_arch_mips32.d: New test.
	* gas/mips/elf_arch_mips32r2.d: New test.
	* gas/mips/elf_arch_mips64.d: New test.
	* gas/mips/empty.s: New test source file.
	* gas/mips/mips.exp: Run new tests.

	* gas/mips/elf_ase_mips16.d: Change to use empty.s
	* gas/mips/elf_ase_mips16.s: Remove.
@
text
@d634 6
@


1.55
log
@[ bfd/ChangeLog ]
2002-12-30  Chris Demetriou  <cgd@@broadcom.com>

	* aoutx.h (NAME(aout,machine_type)): Add bfd_mach_mipsisa32r2 case.
	* archures.c (bfd_mach_mipsisa32r2): New define.
	* bfd-in2.h: Regenerate.
	* cpu-mips.c (I_mipsisa32r2): New enum value.
	(arch_info_struct): Add entry for I_mipsisa32r2.
	* elfxx-mips.c (elf_mips_isa, _bfd_elf_mips_mach)
	(_bfd_mips_elf_print_private_bfd_data): Handle E_MIPS_ARCH_32R2.
	(_bfd_mips_elf_final_write_processing): Add
	bfd_mach_mipsisa32r2 case.
	(_bfd_mips_elf_merge_private_bfd_data): Handle merging of
	binaries marked as using MIPS32 Release 2.

[ binutils/ChangeLog ]
2002-12-30  Chris Demetriou  <cgd@@broadcom.com>

	* doc/binutils.texi (objdump): Note MIPS HWR (Hardware Register)
	changes in MIPS -M options.

[ gas/ChangeLog ]
2002-12-30  Chris Demetriou  <cgd@@broadcom.com>

	* configure.in: Recognize mipsisa32r2, mipsisa32r2el, and
	CPU variants.
	* configure: Regenerate.
	* config/tc-mips.c (ISA_HAS_DROR, ISA_HAS_ROR): New defines.
	(macro_build): Handle "K" operand.
	(macro2): Use ISA_HAS_DROR and ISA_HAS_ROR in the places where
	CPU_HAS_DROR and CPU_HAS_ROR are currently used.
	(mips_ip): New variable "lastpos", and implement "+A", "+B",
	and "+C" operands for MIPS32 Release 2 ins/ext instructions.
	Implement "K" operand for MIPS32 Release 2 rdhwr instruction.
	(validate_mips_insn): Implement "+" as a way to extend the
	allowed operands, and implement "K", "+A", "+B", and "+C"
	operands.
	(OPTION_MIPS32R2): New define.
	(md_longopts): Add entry for OPTION_MIPS32R2.
	(OPTION_ELF_BASE): Adjust to accomodate OPTIONS_MIPS32R2.
	(md_parse_option): Handle OPTION_MIPS32R2.
	(s_mipsset): Reimplement handling of ".set mipsN" options
	and add support for ".set mips32r2".
	(mips_cpu_info_table): Add entry for "mips32r2" (MIPS32 Release 2).
	(md_show_usage): Document "-mips32r2" option.
	* doc/as.texinfo: Document "-mips32r2" option.
	* doc/c-mips.texi: Likewise.

[ gas/testsuite/ChangeLog ]
2002-12-30  Chris Demetriou  <cgd@@broadcom.com>

	* gas/mips/cp0-names-mips32r2.d: New test.
	* gas/mips/hwr-names-mips32r2.d: New test.
	* gas/mips/hwr-names-numeric.d: New test.
	* gas/mips/hwr-names.s: New test source file.
	* gas/mips/mips32r2.d: New test.
	* gas/mips/mips32r2.s: New test source file.
	* gas/mips/mips32r2-ill.l: New test.
	* gas/mips/mips32r2-ill.s: New test source file.
	* gas/mips/mips.exp: Add mips32r2 architecture data array
	entry.  Run new tests mentioned above.

[ include/elf/ChangeLog ]
2002-12-30  Chris Demetriou  <cgd@@broadcom.com>

	* mips.h (E_MIPS_ARCH_32R2): New define.

[ include/opcode/ChangeLog ]
2002-12-30  Chris Demetriou  <cgd@@broadcom.com>

	* mips.h: Document "+" as the start of two-character operand
	type names, and add new "K", "+A", "+B", and "+C" operand types.
	(OP_MASK_INSMSB, OP_SH_INSMSB, OP_MASK_EXTMSB)
	(OP_SH_EXTMSB, INSN_ISA32R2, ISA_MIPS32R2, CPU_MIPS32R2): New
	defines.

[ opcodes/ChangeLog ]
2002-12-30  Chris Demetriou  <cgd@@broadcom.com>

	* mips-dis.c (mips_cp0_names_mips3264r2, mips_hwr_names_numeric)
	(mips_hwr_names_mips3264r2): New arrays.
	(mips_arch_choice): New "hwr_names" member.
	(mips_arch_choices): Adjust for structure change, and add a new
	entry for "mips32r2" ISA.
	(mips_hwr_names): New variable.
	(set_default_mips_dis_options): Set mips_hwr_names.
	(parse_mips_dis_option): New "hwr-names" option which sets
	mips_hwr_names, and adjust "reg-names=ARCH" to set mips_hwr_names.
	(print_insn_arg): Change return type to "int"
	and use that to indicate number of characters consumed.
	Add support for "+" operand extension character, "+A", "+B",
	"+C", and "K" operands.
	(print_insn_mips): Adjust for changes to print_insn_arg.
	(print_mips_disassembler_options): Adjust for "hwr-names"
	addition and "reg-names" change.
	* mips-opc (I33): New define (shorthand for INSN_ISA32R2).
	(mips_builtin_opcodes): Note that "nop" and "ssnop" are special
	forms of "sll".  Add new MIPS32 Release 2 instructions: ehb,
	di, ei, ext, ins, jr.hb, jalr.hb, mfhc1, mfhc2, mthc1, mthc2,
	rdhwr, rdpgpr, seb, seh, synci, wrpgpr, wsbh.
	Note that hardware rotate instructions (ror, rorv) can be
	used on MIPS32 Release 2, and add the official mnemonics
	for them (rotr, rotrv) and the similar "rotl" mnemonic for
	left-rotate.
@
text
@d566 10
@


1.54
log
@2002-12-27  Chris Demetriou  <cgd@@broadcom.com>

        * gas/mips/mips.exp: Define the notion of an "architecture data
        array," add comments indicating how to add a new architecture and
        suggestions for adding new tests.  Populate the architecture data
        array with many known architectures and convert many tests to
        be run for multiple architectures.
        (mips_arches): New global array.
        (mips_arch_create, mips_arch_list_all, mips_arch_data)
        (mips_arch_displayname, mips_arch_properties)
        (mips_arch_as_flags, mips_arch_objdump_flags, mips_arch_matches)
        (mips_arch_list_matching): New functions to operate on mips_arches.
        (run_dump_test_arch, run_dump_test_arches, run_list_test_arch)
        (run_list_test_arches): New functions.
        (run_list_test): Document and add an optional "test name" argument.
        * gas/mips/abs.d: Remove CPU-specific assembler and objdump flags,
        and CPU names from test names.
        * gas/mips/add.d: Likewise.
        * gas/mips/and.d: Likewise.
        * gas/mips/dli.d: Likewise.
        * gas/mips/jal-empic-elf-2.d: Likewise.
        * gas/mips/jal-empic-elf-3.d: Likewise.
        * gas/mips/jal-empic-elf.d: Likewise.
        * gas/mips/lb-svr4pic.d: Likewise.
        * gas/mips/lb.d: Likewise.
        * gas/mips/mips32.d: Likewise.
        * gas/mips/mips4.d: Likewise.
        * gas/mips/mips64.d: Likewise.
        * gas/mips/rol-hw.d: Likewise.
        * gas/mips/rol.d: Likewise.
        * gas/mips/rol64-hw.d: Likewise.
        * gas/mips/rol64.d: Likewise.
        * gas/mips/elf-jal.d: Likewise.  Also, indicate ELF in test name.
        * gas/mips/mips64-mdmx.d: Tweak printed name to indicate that this
        test uses the -mdmx flag.
        * gas/mips/mips64-mips3d.d: Tweak printed name to indicate that
        this test uses the -mips3d flag.
        * gas/mips/mips64-mips3d-incl.d: New file.
@
text
@d346 4
d529 3
d620 1
d623 3
@


1.53
log
@[ binutils/ChangeLog ]
2002-12-27  Chris Demetriou  <cgd@@broadcom.com>

        * doc/binutils.texi (objdump): Document MIPS -M options.

[ gas/testsuite/ChangeLog ]
2002-12-27  Chris Demetriou  <cgd@@broadcom.com>

        * gas/mips/cp0-names-mips32.d: New file.
        * gas/mips/cp0-names-mips64.d: New file.
        * gas/mips/cp0-names-numeric.d: New file.
        * gas/mips/cp0-names-sb1.d: New file.
        * gas/mips/cp0-names.s: New file.
        * gas/mips/fpr-names-32.d: New file.
        * gas/mips/fpr-names-64.d: New file.
        * gas/mips/fpr-names-n32.d: New file.
        * gas/mips/fpr-names-numeric.d: New file.
        * gas/mips/fpr-names.s: New file.
        * gas/mips/gpr-names-32.d: New file.
        * gas/mips/gpr-names-64.d: New file.
        * gas/mips/gpr-names-n32.d: New file.
        * gas/mips/gpr-names-numeric.d: New file.
        * gas/mips/gpr-names.s: New file.
        * gas/mips/mips.exp: Run new tests.

[ include/ChangeLog ]
2002-12-27  Chris Demetriou  <cgd@@broadcom.com>

        * dis-asm.h (print_mips_disassembler_options): Prototype.

[ include/opcode/ChangeLog ]
2002-12-19  Chris Demetriou  <cgd@@broadcom.com>

        * mips.h (OP_OP_COP0, OP_OP_COP1, OP_OP_COP2, OP_OP_COP3)
        (OP_OP_LWC1, OP_OP_LWC2, OP_OP_LWC3, OP_OP_LDC1, OP_OP_LDC2)
        (OP_OP_LDC3, OP_OP_SWC1, OP_OP_SWC2, OP_OP_SWC3, OP_OP_SDC1)
        (OP_OP_SDC2, OP_OP_SDC3): Define.

[ opcodes/ChangeLog ]
2002-12-27  Chris Demetriou  <cgd@@broadcom.com>

        * disassemble.c (disassembler_usage): Add invocation of
        print_mips_disassembler_options.
        * mips-dis.c (print_mips_disassembler_options)
        (set_default_mips_dis_options, parse_mips_dis_option)
        (parse_mips_dis_options, choose_abi_by_name, choose_arch_by_name)
        (choose_arch_by_number): New functions.
        (mips_abi_choice, mips_arch_choice): New structures.
        (mips32_reg_names, mips64_reg_names, reg_names): Remove.
        (mips_gpr_names_numeric, mips_gpr_names_oldabi)
        (mips_gpr_names_newabi, mips_fpr_names_numeric)
        (mips_fpr_names_32, mips_fpr_names_n32, mips_fpr_names_64)
        (mips_cp0_names_numeric, mips_cp0_names_mips3264)
        (mips_cp0_names_sb1, mips_abi_choices, mips_arch_choices)
        (mips_processor, mips_isa, mips_gpr_names, mips_fpr_names)
        (mips_cp0_names): New variables.
        (print_insn_args): Use new variables to print GPR, FPR, and CP0
        register names.
        (mips_isa_type): Remove.
        (print_insn_mips): Remove ISA and CPU setup since it is now done...
        (_print_insn_mips): Here.  Remove register setup code, and
        call set_default_mips_dis_options and parse_mips_dis_options
        instead.
        (print_mips16_insn_arg): Use mips_gpr_names instead of mips32_names.
@
text
@d5 22
d33 254
a286 1
proc run_list_test { name opts } {
d288 3
a290 1
    set testname "MIPS $name"
d301 66
d387 3
a389 3
    run_dump_test "abs"
    run_dump_test "add"
    run_dump_test "and"
d397 9
a405 7
    run_dump_test "beq"
    run_dump_test "bge"
    run_dump_test "bgeu"
    run_dump_test "blt"
    run_dump_test "bltu"
    run_dump_test "branch-misc-1"
    run_list_test "branch-misc-2" ""
d412 1
a412 1
    run_dump_test "dli"
d414 1
a414 1
	run_dump_test "elf-jal"
d424 6
a429 4
    if $elf { run_dump_test "jal-empic-elf" }
    if $elf { run_dump_test "jal-empic-elf-2" }
    if $elf { run_dump_test "jal-empic-elf-3" }
    run_list_test "jal-range" ""
d437 8
a444 2
    if !$aout { run_dump_test "lb" }
    if $elf { run_dump_test "lb-svr4pic" }
d466 1
a466 1
    run_dump_test "li"
d474 1
a474 1
    run_dump_test "mips4"
d480 7
a486 4
    run_dump_test "rol"
    run_dump_test "rol-hw"
    run_dump_test "rol64"
    run_dump_test "rol64-hw"
d522 5
a526 2
    run_dump_test "mips32"
    run_dump_test "mips64"
d528 2
@


1.52
log
@[ opcodes/ChangeLog ]
2002-12-18  Chris Demetriou  <cgd@@broadcom.com>

	* mips-opc.c (mips_builtin_opcodes): Remove one "ror" and two
	"dror" entries, and reorder the remaining "dror" and "ror" entries.

[ gas/ChangeLog ]
2002-12-18  Chris Demetriou  <cgd@@broadcom.com>

	* config/tc-mips.c (macro): In M_DROL, M_DROR, M_ROL, and M_ROR,
	use hardware rotate ops as appropriate.  In M_DROL_I, M_DROR_I,
	M_ROL_I, and M_ROR_I, simplify code, clean up warnings, and
	arrange not to issue warnings about use of AT when AT is not
	actually used.

[ gas/testsuite/ChangeLog ]
2002-12-18  Chris Demetriou  <cgd@@broadcom.com>

	* gas/mips/rol.s: Add ".set noat" and some new instructions to test.
	* gas/mips/rol64.s: Likewise.
	* gas/mips/rol.l: New file.
	* gas/mips/rol.d: Adjust to use rol.l and for rol.s changes.
	* gas/mips/rol64.l: New file.
	* gas/mips/rol64.d: Adjust to use rol64.l and for rol64.s changes.
	* gas/mips/rol-hw.d: New file.
	* gas/mips/rol-hw.l: New file.
	* gas/mips/rol64-hw.d: New file.
	* gas/mips/rol64-hw.l: New file.
	* gas/mips/mips.exp: Run rol-hw and rol64-hw tests.
@
text
@d237 17
@


1.51
log
@* gas/mips/beq.d: Comment out branches to undefined symbols,
no longer supported.
* gas/mips/beq.s: Likewise.
* gas/mips/bge.d: Likewise.
* gas/mips/bge.s: Likewise.
* gas/mips/bgeu.d: Likewise.
* gas/mips/bgeu.s: Likewise.
* gas/mips/blt.d: Likewise.
* gas/mips/blt.s: Likewise.
* gas/mips/bltu.d: Likewise.
* gas/mips/bltu.s: Likewise.
* gas/mips/mips.exp: Change branch-misc-2 test to run_list_test.
* gas/mips/branch-misc-2.d: Removed.
* gas/mips/branch-misc-2.s: Added branches to undefined symbols.
* gas/mips/branch-misc-2.l: New.
@
text
@d128 1
d130 1
@


1.50
log
@	* config/tc-mips.c (mips_need_elf_addend_fixup): Return true
	for relocs against symbols in a merged section.

testsuite/
	* gas/mips/elf-rel7.[sd]: New test.
	* gas/mips/mips.exp: Run it.
@
text
@d60 1
a60 1
    run_dump_test "branch-misc-2"
@


1.49
log
@* gas/mips/mips.exp: Don't xfail relax.
* gas/mips/relax.s: Increase coverage.
* gas/mips/relax.d: Add expected output.  Use relax.l for as stderr.
* gas/mips/relax.l: New file.
@
text
@d223 1
@


1.48
log
@2002-09-30  H.J. Lu <hjl@@gnu.org>

	* gas/mips/mips.exp: Undo the last change.
@
text
@a170 2
    # It will always fail until someone fixes it.
    setup_xfail "mips*-*-*"
@


1.47
log
@2002-09-30  H.J. Lu <hjl@@gnu.org>

	* gas/mips/mips.exp: Set xfail on empic, empic2, empic3_g1 and
	empic3_g2 on Linux/mips.
@
text
@a224 1
	setup_xfail "mips*-*-*linux*"
a225 1
	setup_xfail "mips*-*-*linux*"
a227 1
	setup_xfail "mips*-*-*linux*"
a228 1
	setup_xfail "mips*-*-*linux*"
@


1.46
log
@[gas/]
	* doc/c-mips.texi: Add entries for -march=vr4120,vr4130,vr4181,
	vr5400 and vr5500.  Add entry for -mfix-vr4122-bugs.
	* config/tc-mips.c (CPU_HAS_DROR, CPU_HAS_ROR): New macros.
	(hilo_interlocks): True for CPU_VR5500.
	(gpr_interlocks, cop_interlocks): True for CPU_VR5400 and CPU_VR5500.
	(mips_fix_vr4122_bugs): New.
	(append_insn): Work around 4122 errors if mips_fix_vr4122_bugs.
	(mips_emit_delays): Likewise.
	(macro2) [M_DROLI]: Use dror or dror32 if CPU_HAS_DROR.
	[M_ROLI]: Likewise ror if CPU_HAS_ROR.
	(validate_mips_insn, mips_ip): Handle '[', ']', 'e' and '%'.
	(OPTION_FIX_VR4122, OPTION_NO_FIX_VR4122): New options.
	(md_longopts): Add -mfix-vr4122-bugs and -no-mfix-vr4122-bugs.
	(OPTION_ELF_BASE): Bump.
	(md_parse_option): Handle the new options.
	(mips_cpu_info_table): Add entries for vr4120, vr4130, vr4181,
	vr5400 and vr5500.

[gas/testsuite/]
	* gas/mips/mips4100.[sd]: Move dmadd16 and madd16 checks to...
	* gas/mips/vr4111.[sd]: ...this new test.
	* gas/mips/vr4120.[sd],
	* gas/mips/vr4122.[sd],
	* gas/mips/vr5400.[sd],
	* gas/mips/vr5500.[sd]: New tests.
	* mips.exp: Run them.
@
text
@d225 1
d227 1
d230 1
d232 1
@


1.45
log
@	/gas/ChangeLog
	* config/tc-mips.c (CPU_HAS_MIPS16): Add mips-lsi-elf as MIPS16
	capable configuration.
	(macro_build): Check for MIPS16 capability, not for actual MIPS16 code
	generation.
	(mips_ip): Likewise.

	/gas/testsuite/ChangeLog
	* gas/mips/mips-jalx.d: New file, check jalx assembly.
	* gas/mips/mips-jalx.s: Likewise.
	* gas/mips/mips-no-jalx.l: Likewise.
	* gas/mips/mips-no-jalx.s: Likewise.
	* gas/mips/mips16-jalx.d: Likewise.
	* gas/mips/mips16-jalx.s: Likewise.
	* gas/mips/mips.exp: Add new tests.

	/opcodes/ChangeLog:
	* mips-dis.c (print_insn_mips): Always allow disassembly of
	32-bit jalx opcode.
@
text
@d156 5
@


1.44
log
@[ gas/ChangeLog ]
2002-09-18  Chris Demetriou  <cgd@@broadcom.com>

        * config/tc-mips.c (md_apply_fix3): Just return for BFD_RELOC_8.

[ gas/testsuite/ChangeLog ]
2002-09-18  Chris Demetriou  <cgd@@broadcom.com>

        * gas/mips/baddata1.s: New file.
        * gas/mips/baddata1.l: New file.
        * gas/mips/mips.exp: Run new test.
@
text
@d144 7
a150 1
    if { $elf && !$no_mips16 } { run_dump_test "mips16" }
@


1.43
log
@[ gas/ChangeLog ]
2002-09-18  Chris Demetriou  <cgd@@broadcom.com>

        * config/tc-mips.c (IS_SEXT_32BIT_NUM): Move closer to top of file.
        (IS_SEXT_16BIT_NUM): New macro.
        (macro_build_ldst_constoffset): New function, to build a set of
        instructions to do a load or store from a constant offset relative
        to a given register.
        (macro, s_cprestore): Use macro_build_ldst_constoffset to implement
        .cprestore pseudo-op.

[ gas/testsuite/ChangeLog ]
2002-09-18  Chris Demetriou  <cgd@@broadcom.com>

        * gas/mips/mips-abi32-pic2.s: New file.
        * gas/mips/mips-abi32-pic2.d: New file.
        * gas/mips/mips.exp: Run new test.

[ plus, fixed date on prev. gas/testsuite/ChangeLog entry. ]
@
text
@d165 1
@


1.42
log
@[ gas/testsuite/ChangeLog ]
2002-09-18  Chris Demetriou  <cgd@@broadcom.com>

        * gas/mips/branch-misc-1.d: New file.
        * gas/mips/branch-misc-1.s: New file.
        * gas/mips/branch-misc-2.s: New file.
        * gas/mips/branch-misc-2.d: New file.
        * gas/mips/mips.exp: Run new tests.

[ ld/testsuite/ChangeLog ]
2002-09-18  Chris Demetriou  <cgd@@broadcom.com>

        * ld-mips-elf/branch-misc-1.d: New file.
        * ld-mips-elf/branch-misc-2.d: New file.
        * ld-mips-elf/mips-elf.exp: Run new tests.
@
text
@d196 1
@


1.41
log
@2002-09-17  Thiemo Seufer <seufer@@csv.ica.uni-stuttgart.de>

	* gas/mips/jal-range.s: Check for jal overflows.
	* gas/mips/jal-range.l: List file for it.
	* gas/mips/mips.exp: Use it.
@
text
@d59 2
@


1.40
log
@[gas/]
	* config/tc-mips.c (mips_ip): Don't work out the value of
	constant %hi()s here.

[gas/testsuite/]
	* gas/mips/elf-consthilo.[sd]: New test.
	* gas/mips/mips.exp: Run it.
@
text
@d80 1
@


1.39
log
@[gas/]
	* config/tc-mips.c (tc_gen_reloc): Extend GP-relative addend
	handling to BFD_RELOC_MIPS16_GPREL.

[gas/testsuite/]
	* gas/mips/elf-rel6.[sd]: New test.
	* gas/mips/mips.exp: Run it.
@
text
@d218 1
@


1.38
log
@[ gas/testsuite/ChangeLog ]
2002-07-26  Chris Demetriou  <cgd@@broadcom.com>

        * gas/mips/elf_ase_mips16.d: New file to test ELF MIPS16 ASE marking.
        * gas/mips/elf_ase_mips16.s: Likewise.
        * gas/mips/mips.exp: Run the new test.

[ ld/testsuite/ChangeLog ]
2002-07-26  Chris Demetriou  <cgd@@broadcom.com>

        * ld-mips-elf/mips16-1.d: Check that ASE flag is actually set.
@
text
@d208 1
@


1.37
log
@2002-06-14  H.J. Lu  <hjl@@gnu.org>
            Daniel Jacobowitz  <drow@@mvista.com>

        * dwarf2dbg.h (dwarf2_directive_file): Return char *.
        * dwarf2dbg.c (dwarf2_directive_file): Return filename.
        * config/tc-mips.c (s_mips_file): Call s_app_file_string
        and new_logical_line for the first .file directive.
        * read.c (s_app_file_string): New function.
        (s_app_file): Call it.
        * read.h (s_app_file_string): Add declaration.

2002-06-14  Daniel Jacobowitz  <drow@@mvista.com>

        * configure.in: Remove MIPS_STABS_ELF.
        * configure: Regenerated.
        * config.in: Regenerated.
        * config/obj-elf.h (ECOFF_DEBUGGING): Define to mips_flag_mdebug
        for MIPS targets.
        * config/tc-mips.c (mips_pseudo_table): Remove #ifdef around
        ".extern".
        (pdr_seg): Declare unconditionally.
        (md_begin): Always generate .pdr unless ECOFF_DEBUGGING or not ELF.
        (s_mips_end): Likewise.  Generate stabs function markers.
        (s_mips_ent): Generate stabs function markers.
        (s_mips_frame): Always generate .pdr unless ECOFF_DEBUGGING or not
        ELF.
        (s_mips_mask): Likewise.
        (mips_flag_mdebug): New.
        (md_longopts): Add "mdebug" and "no-mdebug".
        (md_parse_options): Add OPTION_MDEBUG and OPTION_NO_MDEBUG.
        (mips_after_parse_args): Set mips_flag_mdebug.
        * doc/as.texinfo: Add "-mdebug" and "-no-mdebug" for MIPS.

2002-06-14  Daniel Jacobowitz  <drow@@mvista.com>

        * gas/mips/lineno.d: Use --gstabs.
        * gas/mips/mips.exp (lineno.s): Remove XFAIL.
@
text
@d183 3
@


1.37.2.1
log
@        Merge from mainline:
        2002-07-29  Chris Demetriou  <cgd@@broadcom.com>
        * gas/mips/elf_ase_mips16.d: New file to test ELF MIPS16 ASE marking.
        * gas/mips/elf_ase_mips16.s: Likewise.
        * gas/mips/mips.exp: Run the new test.
@
text
@a182 3
	# Verify that ASE markings are handled properly.
	if { !$no_mips16 } { run_dump_test "elf_ase_mips16" }

@


1.37.2.2
log
@        Merge from mainline:
        2002-08-01  Richard Sandiford  <rsandifo@@redhat.com>
        * config/tc-mips.c (tc_gen_reloc): Extend GP-relative addend
        handling to BFD_RELOC_MIPS16_GPREL.

        Merge from mainline:
        2002-08-01  Richard Sandiford  <rsandifo@@redhat.com>
        * gas/mips/elf-rel6.[sd]: New test.
        * gas/mips/mips.exp: Run it.
@
text
@a207 1
	run_dump_test "elf-rel6"
@


1.37.2.3
log
@2002-09-23  Daniel Jacobowitz  <drow@@mvista.com>

	Merge from mainline:
	2002-09-19  Jakub Jelinek  <jakub@@redhat.com>
	* gas/i386/tlspic.s: Add tests.
	* gas/i386/tlspic.d: Regenerated.
	* gas/i386/tlsnopic.s: Add tests.
	* gas/i386/tlsnopic.d: Regenerated.

	2002-09-16  Chris Demetriou  <cgd@@broadcom.com>
	* gas/mips/mips-abi32-pic2.s: New file.
	* gas/mips/mips-abi32-pic2.d: New file.
	* gas/mips/mips.exp: Run new test.

	2002-08-20  Richard Sandiford  <rsandifo@@redhat.com>
	* gas/mips/rol.s: Add rotate by zero tests.
	* gas/mips/rol.d: Update accordingly.
	* gas/mips/rol64.d: Expect rotates by zero to use dsrl.

	2002-08-13  Stephen Clarke <stephen.clarke@@superh.com>
	* gas/sh/sh64/datal32-3.d: Formatting change to match the current
	output of objdump.

	2002-08-12  Richard Sandiford  <rsandifo@@redhat.com>
	* gas/mips/elf-consthilo.[sd]: New test.
	* gas/mips/mips.exp: Run it.

	2002-08-06  Alan Modra  <amodra@@bigpond.net.au>
	* gas/ppc/altivec_xcoff64.d: Adjust for aix5 target.
	* gas/ppc/booke_xcoff64.d: Likewise.  Also fix relocs.

	2002-08-03  Jakub Jelinek  <jakub@@redhat.com>
	* testsuite/gas/i386/gotpc.s: New.
	* testsuite/gas/i386/gotpc.d: New.
	* testsuite/gas/i386/i386.exp: Add gotpc test.
@
text
@a192 1
  	run_dump_test "mips-abi32-pic2"
a217 1
	run_dump_test "elf-consthilo"
@


1.37.2.4
log
@Merge from mainline.
@
text
@a209 1
	run_dump_test "elf-rel7"
@


1.36
log
@[ opcodes/ChangeLog ]
2002-05-31  Chris G. Demetriou  <cgd@@broadcom.com>
            Ed Satterthwaite  <ehs@@broadcom.com>

        * mips-opc.c: Add support for SB-1 MDMX subset and extensions.

[ gas/testsuite/ChangeLog ]
2002-05-31  Chris G. Demetriou  <cgd@@broadcom.com>

        * gas/mips/sb1-ext-mdmx.s: New file.
        * gas/mips/sb1-ext-mdmx.d: Likewise.
        * gas/mips/mips.exp: Run new "sb1-ext-mdmx" test.
@
text
@a147 2
    # Linux uses ELF stabs, which doesn't support line number.
    setup_xfail "mips*-*-*linux*"
@


1.35
log
@2002-05-31  Chris G. Demetriou  <cgd@@broadcom.com>

        * gas/mips/mips.exp: Use elf-rel2 and elfel-rel2 for
        mipsisa64*-*-* targets, rather than e32-rel2 and e32el-rel2.
@
text
@d156 1
@


1.34
log
@[ gas/ChangeLog ]
2002-05-30  Chris G. Demetriou  <cgd@@broadcom.com>
            Ed Satterthwaite  <ehs@@broadcom.com>

	* config/tc-mips.c (mips_set_options): New "ase_mdmx" member.
	(mips_opts): Initialize "ase_mdmx" member.
	(file_ase_mdmx): New variable.
	(CPU_HAS_MDMX): New macro.
	(md_begin): Initialize mips_opts.ase_mdmx and file_ase_mdmx
	based on command line options and configuration defaults.
	(macro_build): Note in comment that use of MDMX in macros is
	not currently allowed.
	(validate_mips_insn): Add support for the "O", "Q", "X", "Y", and
	"Z" MDMX operand types.
	(mips_ip): Accept MDMX instructions if mips_opts.ase_mdmx is set,
	and add support for the "O", "Q", "X", "Y", and "Z" MDMX operand
	types.
	(OPTION_MDMX, OPTION_NO_MDMX, md_longopts, md_parse_option):
	Add support for "-mdmx" and "-no-mdmx" options.
	(OPTION_ELF_BASE): Move to accomodate new options.
	(s_mipsset): Support ".set mdmx" and ".set nomdmx".
	(mips_elf_final_processing): Set MDMX ASE ELF header flag if
	file_ase_mdmx was set.
	* doc/as.texinfo: Document -mdmx and -no-mdmx options.
	* doc/c-mips.texi: Likewise, and document ".set mdmx" and ".set
	nomdmx" directives.

[ gas/testsuite/ChangeLog ]
2002-05-30  Chris G. Demetriou  <cgd@@broadcom.com>

	* gas/mips/mips64-mdmx.s: New file.
	* gas/mips/mips64-mdmx.d: Likewise.
	* gas/mips/mips.exp: Run new "mips64-mdmx" test.

[ include/opcode/ChangeLog ]
2002-05-30  Chris G. Demetriou  <cgd@@broadcom.com>

	* mips.h (OP_SH_ALN, OP_MASK_ALN, OP_SH_VSEL, OP_MASK_VSEL)
	(MDMX_FMTSEL_IMM_QH, MDMX_FMTSEL_IMM_OB, MDMX_FMTSEL_VEC_QH)
	(MDMX_FMTSEL_VEC_OB, INSN_READ_MDMX_ACC, INSN_WRITE_MDMX_ACC)
	(INSN_MDMX): New constants, for MDMX support.
	(opcode character list): Add "O", "Q", "X", "Y", and "Z" for MDMX.

[ opcodes/ChangeLog ]
2002-05-30  Chris G. Demetriou  <cgd@@broadcom.com>
            Ed Satterthwaite  <ehs@@broadcom.com>

	* mips-dis.c (print_insn_arg): Add support for 'O', 'Q', 'X', 'Y',
	and 'Z' formats, for MDMX.
        (mips_isa_type): Add MDMX instructions to the ISA
	bit mask for bfd_mach_mipsisa64.
	* mips-opc.c: Add support for MDMX instructions.
	(MX): New definition.

	* mips-dis.c: Update copyright years to include 2002.
@
text
@d193 2
a194 1
	if {[istarget mips64*-*-*] || [istarget mipsisa32*-*-*]} { 
@


1.33
log
@? gas/testsuite/gas/mips/rol64.d
? gas/testsuite/gas/mips/rol64.s
Index: gas/ChangeLog
===================================================================
RCS file: /cvs/src/src/gas/ChangeLog,v
retrieving revision 1.1334
diff -u -p -r1.1334 ChangeLog
--- gas/ChangeLog	21 May 2002 20:01:51 -0000	1.1334
+++ gas/ChangeLog	21 May 2002 23:32:51 -0000
@@@@ -1,3 +1,8 @@@@
+2002-05-22  Thiemo Seufer <seufer@@csv.ica.uni-stuttgart.de>
+
+	* config/tc-mips.c (macro2): Add 64 bit drol, dror macros.
+	Optimize the rotate by zero case.
+
 2002-05-21  Nick Clifton  <nickc@@cambridge.redhat.com>

 	* configure.in: Remove accidental enabling of bfd_gas=yes for
Index: gas/config/tc-mips.c
===================================================================
RCS file: /cvs/src/src/gas/config/tc-mips.c,v
retrieving revision 1.123
diff -u -p -r1.123 tc-mips.c
--- gas/config/tc-mips.c	14 May 2002 23:35:59 -0000	1.123
+++ gas/config/tc-mips.c	21 May 2002 23:32:52 -0000
@@@@ -6686,6 +6686,17 @@@@ macro2 (ip)
       --mips_opts.noreorder;
       break;

+    case M_DROL:
+      macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "dsubu",
+		   "d,v,t", AT, 0, treg);
+      macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "dsrlv",
+		   "d,t,s", AT, sreg, AT);
+      macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "dsllv",
+		   "d,t,s", dreg, sreg, treg);
+      macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "or",
+		   "d,v,t", dreg, dreg, AT);
+      break;
+
     case M_ROL:
       macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "subu",
 		   "d,v,t", AT, 0, treg);
@@@@ -6697,15 +6708,55 @@@@ macro2 (ip)
 		   "d,v,t", dreg, dreg, AT);
       break;

+    case M_DROL_I:
+      {
+	unsigned int rot;
+	char *l, *r;
+
+	if (imm_expr.X_op != O_constant)
+	  as_bad (_("rotate count too large"));
+	rot = imm_expr.X_add_number & 0x3f;
+	if (! rot)
+	  break;
+	l = (rot < 0x20) ? "dsll" : "dsll32";
+	r = ((0x40 - rot) < 0x20) ? "dsrl" : "dsrl32";
+	rot &= 0x1f;
+	macro_build ((char *) NULL, &icnt, (expressionS *) NULL, l,
+		     "d,w,<", AT, sreg, rot);
+	macro_build ((char *) NULL, &icnt, (expressionS *) NULL, r,
+		     "d,w,<", dreg, sreg, (0x20 - rot) & 0x1f);
+	macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "or",
+		     "d,v,t", dreg, dreg, AT);
+      }
+      break;
+
     case M_ROL_I:
-      if (imm_expr.X_op != O_constant)
-	as_bad (_("rotate count too large"));
-      macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "sll", "d,w,<",
-		   AT, sreg, (int) (imm_expr.X_add_number & 0x1f));
-      macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "srl", "d,w,<",
-		   dreg, sreg, (int) ((0 - imm_expr.X_add_number) & 0x1f));
-      macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "or", "d,v,t",
-		   dreg, dreg, AT);
+      {
+	unsigned int rot;
+
+	if (imm_expr.X_op != O_constant)
+	  as_bad (_("rotate count too large"));
+	rot = imm_expr.X_add_number & 0x1f;
+	if (! rot)
+	  break;
+	macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "sll",
+		     "d,w,<", AT, sreg, rot);
+	macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "srl",
+		     "d,w,<", dreg, sreg, (0x20 - rot) & 0x1f);
+	macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "or",
+		     "d,v,t", dreg, dreg, AT);
+      }
+      break;
+
+    case M_DROR:
+      macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "dsubu",
+		   "d,v,t", AT, 0, treg);
+      macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "dsllv",
+		   "d,t,s", AT, sreg, AT);
+      macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "dsrlv",
+		   "d,t,s", dreg, sreg, treg);
+      macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "or",
+		   "d,v,t", dreg, dreg, AT);
       break;

     case M_ROR:
@@@@ -6719,15 +6770,44 @@@@ macro2 (ip)
 		   "d,v,t", dreg, dreg, AT);
       break;

+    case M_DROR_I:
+      {
+	unsigned int rot;
+	char *l, *r;
+
+	if (imm_expr.X_op != O_constant)
+	  as_bad (_("rotate count too large"));
+	rot = imm_expr.X_add_number & 0x3f;
+	if (! rot)
+	  break;
+	r = (rot < 0x20) ? "dsrl" : "dsrl32";
+	l = ((0x40 - rot) < 0x20) ? "dsll" : "dsll32";
+	rot &= 0x1f;
+	macro_build ((char *) NULL, &icnt, (expressionS *) NULL, r,
+		     "d,w,<", AT, sreg, rot);
+	macro_build ((char *) NULL, &icnt, (expressionS *) NULL, l,
+		     "d,w,<", dreg, sreg, (0x20 - rot) & 0x1f);
+	macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "or",
+		     "d,v,t", dreg, dreg, AT);
+      }
+      break;
+
     case M_ROR_I:
-      if (imm_expr.X_op != O_constant)
-	as_bad (_("rotate count too large"));
-      macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "srl", "d,w,<",
-		   AT, sreg, (int) (imm_expr.X_add_number & 0x1f));
-      macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "sll", "d,w,<",
-		   dreg, sreg, (int) ((0 - imm_expr.X_add_number) & 0x1f));
-      macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "or", "d,v,t",
-		   dreg, dreg, AT);
+      {
+	unsigned int rot;
+
+	if (imm_expr.X_op != O_constant)
+	  as_bad (_("rotate count too large"));
+	rot = imm_expr.X_add_number & 0x1f;
+	if (! rot)
+	  break;
+	macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "srl",
+		     "d,w,<", AT, sreg, rot);
+	macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "sll",
+		     "d,w,<", dreg, sreg, (0x20 - rot) & 0x1f);
+	macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "or",
+		     "d,v,t", dreg, dreg, AT);
+      }
       break;

     case M_S_DOB:
Index: gas/testsuite/ChangeLog
===================================================================
RCS file: /cvs/src/src/gas/testsuite/ChangeLog,v
retrieving revision 1.315
diff -u -p -r1.315 ChangeLog
--- gas/testsuite/ChangeLog	20 May 2002 17:05:34 -0000	1.315
+++ gas/testsuite/ChangeLog	21 May 2002 23:32:54 -0000
@@@@ -1,3 +1,9 @@@@
+2002-05-22  Thiemo Seufer <seufer@@csv.ica.uni-stuttgart.de>
+
+	* gas/mips/rol64.s: New file, test of drol, dror macros.
+	* gas/mips/rol64.d: Likewise.
+	* gas/mips/mips.exp: Add new test.
+
 2002-05-20  Nick Clifton  <nickc@@cambridge.redhat.com>

 	* gas/arm/arm.exp: Replace deprecated command line switches
Index: gas/testsuite/gas/mips/mips.exp
===================================================================
RCS file: /cvs/src/src/gas/testsuite/gas/mips/mips.exp,v
retrieving revision 1.32
diff -u -p -r1.32 mips.exp
--- gas/testsuite/gas/mips/mips.exp	4 Apr 2002 08:23:30 -0000	1.32
+++ gas/testsuite/gas/mips/mips.exp	21 May 2002 23:32:54 -0000
@@@@ -122,6 +122,7 @@@@ if { [istarget mips*-*-*] } then {
 	run_dump_test "mul"
     }
     run_dump_test "rol"
+    run_dump_test "rol64"
     if !$aout { run_dump_test "sb" }
     run_dump_test "trunc"
     if !$aout { run_dump_test "ulh" }
Index: include/opcode/ChangeLog
===================================================================
RCS file: /cvs/src/src/include/opcode/ChangeLog,v
retrieving revision 1.167
diff -u -p -r1.167 ChangeLog
--- include/opcode/ChangeLog	17 May 2002 19:01:03 -0000	1.167
+++ include/opcode/ChangeLog	21 May 2002 23:32:57 -0000
@@@@ -1,3 +1,7 @@@@
+2002-05-22  Thiemo Seufer <seufer@@csv.ica.uni-stuttgart.de>
+
+	* mips.h: Add M_DROL, M_DROL_I, M_DROR, M_DROR_I macro cases.
+
 2002-05-17  Andrey Volkov  <avolkov@@sources.redhat.com>

         * h8300.h: Corrected defs of all control regs
Index: include/opcode/mips.h
===================================================================
RCS file: /cvs/src/src/include/opcode/mips.h,v
retrieving revision 1.24
diff -u -p -r1.24 mips.h
--- include/opcode/mips.h	16 Mar 2002 03:09:18 -0000	1.24
+++ include/opcode/mips.h	21 May 2002 23:32:57 -0000
@@@@ -526,9 +526,13 @@@@ enum
   M_REM_3I,
   M_REMU_3,
   M_REMU_3I,
+  M_DROL,
   M_ROL,
+  M_DROL_I,
   M_ROL_I,
+  M_DROR,
   M_ROR,
+  M_DROR_I,
   M_ROR_I,
   M_S_DA,
   M_S_DOB,
Index: opcodes/ChangeLog
===================================================================
RCS file: /cvs/src/src/opcodes/ChangeLog,v
retrieving revision 1.447
diff -u -p -r1.447 ChangeLog
--- opcodes/ChangeLog	17 May 2002 14:36:45 -0000	1.447
+++ opcodes/ChangeLog	21 May 2002 23:33:00 -0000
@@@@ -1,3 +1,7 @@@@
+2002-05-22  Thiemo Seufer <seufer@@csv.ica.uni-stuttgart.de>
+
+	* mips-opc.c (mips_builtin_opcodes): Add drol, dror macros.
+
 Fri May 17 14:26:44 2002  J"orn Rennecke <joern.rennecke@@superh.com>

 	* disassemble.c (disassembler): Just use print_insn_sh for bfd_arch_sh.
Index: opcodes/mips-opc.c
===================================================================
RCS file: /cvs/src/src/opcodes/mips-opc.c,v
retrieving revision 1.32
diff -u -p -r1.32 mips-opc.c
--- opcodes/mips-opc.c	17 Mar 2002 02:42:25 -0000	1.32
+++ opcodes/mips-opc.c	21 May 2002 23:33:00 -0000
@@@@ -492,6 +492,10 @@@@ const struct mips_opcode mips_builtin_op
 {"dremu",   "z,s,t",    0x0000001f, 0xfc00ffff, RD_s|RD_t|WR_HILO,      I3      },
 {"dremu",   "d,v,t",	3,    (int) M_DREMU_3,	INSN_MACRO,		I3	},
 {"dremu",   "d,v,I",	3,    (int) M_DREMU_3I,	INSN_MACRO,		I3	},
+{"drol",    "d,v,t",	0,    (int) M_DROL,	INSN_MACRO,		I3	},
+{"drol",    "d,v,I",	0,    (int) M_DROL_I,	INSN_MACRO,		I3	},
+{"dror",    "d,v,t",	0,    (int) M_DROR,	INSN_MACRO,		I3	},
+{"dror",    "d,v,I",	0,    (int) M_DROR_I,	INSN_MACRO,		I3	},
 {"dsllv",   "d,t,s",	0x00000014, 0xfc0007ff,	WR_d|RD_t|RD_s,		I3	},
 {"dsll32",  "d,w,<",	0x0000003c, 0xffe0003f, WR_d|RD_t,		I3	},
 {"dsll",    "d,w,s",	0x00000014, 0xfc0007ff,	WR_d|RD_t|RD_s,		I3	}, /* dsllv */
@
text
@d155 1
@


1.32
log
@Open out one-line if-then-else test clauses so that other clauses can be
inserted in the future.
@
text
@d125 1
@


1.31
log
@[ gas/ChangeLog ]
2002-03-15  Chris G. Demetriou  <cgd@@broadcom.com>

	* config/tc-mips.c (mips_set_options): New "ase_mips3d" member.
	(mips_opts): Initialize "ase_mips3d" member.
	(file_ase_mips3d): New variable.
	(CPU_HAS_MIPS3D): New macro.
	(md_begin): Initialize mips_opts.ase_mips3d and file_ase_mips3d
	based on command line options and configuration defaults.
	(macro_build, mips_ip): Accept MIPS-3D instructions if
	mips_opts.ase_mips3d is set.
	(OPTION_MIPS3D, OPTION_NO_MIPS3D, md_longopts, md_parse_option):
	Add support for "-mips3d" and "-no-mips3d" options.
	(OPTION_ELF_BASE): Move to accomodate new options.
	(s_mipsset): Support ".set mips3d" and ".set nomips3d".
	(mips_elf_final_processing): Add a comment indicating that a
	MIPS-3D ASE ELF header flag should be set, when one exists.
	* doc/as.texinfo: Document -mips3d and -no-mips3d options.
	* doc/c-mips.texi: Likewise, and document ".set mips3d" and ".set
	nomips3d" directives.

[ gas/testsuite/ChangeLog ]
2002-03-15  Chris G. Demetriou  <cgd@@broadcom.com>

	* gas/mips/mips64-mips3d.s: New file.
	* gas/mips/mips64-mips3d.d: Likewise.
	* gas/mips/mips.exp: Run new "mips64-mips3d" test.

[ include/opcode/ChangeLog ]
2002-03-15  Chris G. Demetriou  <cgd@@broadcom.com>

	* mips.h (INSN_MIPS3D): New definition used to mark MIPS-3D
	instructions.
	(OPCODE_IS_MEMBER): Adjust comments to indicate that ASE bit masks
	may be passed along with the ISA bitmask.

[ opcodes/ChangeLog ]
2002-03-15  Chris G. Demetriou  <cgd@@broadcom.com>

	* mips-dis.c (mips_isa_type): Add MIPS3D instructions to the ISA
	bit masks for bfd_mach_mips_sb1 and bfd_mach_mipsisa64.  Add
	comments for bfd_mach_mipsisa32 and bfd_mach_mipsisa64 that
	indicate that they should dissassemble all applicable
	MIPS-specified ASEs.
	* mips-opc.c: Add support for MIPS-3D instructions.
	(M3D): New definition.

	* mips-opc.c: Update copyright years.
@
text
@d60 5
a64 1
    if !$ilocks { run_dump_test "div" } else { run_dump_test "div-ilocks" }
d96 3
a98 3
    if !$aout { 
        if !$gpr_ilocks { 
            run_dump_test "ld" 
d119 5
a123 1
    if !$ilocks { run_dump_test "mul" } else { run_dump_test "mul-ilocks" }
d175 1
a175 1
	# instruction does get used.  In previous versions of GAS, 
d181 1
a181 1
    
d208 3
a210 3
	if { !$no_mips16 } { 
	    run_dump_test "${tmips}mips${el}16-e" 
	    run_dump_test "${tmips}mips${el}16-f" 
@


1.30
log
@2002-03-15  Chris G. Demetriou  <cgd@@broadcom.com>

        * gas/mips/mips.exp: Use elf-rel2 and elfel-rel2 for
        mipsisa32*-*-* targets, rather than e32-rel2 and e32el-rel2.
@
text
@d145 1
@


1.29
log
@2002-02-26  Chris Demetriou  <cgd@@broadcom.com>

        * gas/mips/empic2.d: Adjust for the fact that relocations on
        symbols local to this file are resolved at assembly time into
        section-relative relocations, even if the symbols are extern.
        * gas/mips/empic2.s: Add file offset information, so the next
        person to do the math mentioned above has an easier time.
        * gas/mips/jal-empic-elf.d: New test.
        * gas/mips/jal-empic-elf-2.d, gas/mips/jal-empic-elf-2.s: New test.
        * gas/mips/jal-empic-elf-3.d, gas/mips/jal-empic-elf-3.s: New test.
        * gas/mips/mips.exp: Run the new tests.
@
text
@d182 1
a182 1
	if [istarget mips64*-*-*] { 
d184 5
d190 1
a190 2
	} {
	    run_dump_test "e32${el}-rel2"
a192 1
	run_dump_test "elf${el}-rel3"
@


1.28
log
@2002-02-08  Chris Demetriou  <cgd@@broadcom.com>

        * gas/mips/mips.exp: Document (but do not XFAIL) currently-failing
        MIPS ECOFF tests, providing what information is known about
        the origins of the failures.
@
text
@d73 3
@


1.28.2.1
log
@2002-02-26  Chris Demetriou  <cgd@@broadcom.com>

        * gas/mips/empic2.d: Adjust for the fact that relocations on
        symbols local to this file are resolved at assembly time into
        section-relative relocations, even if the symbols are extern.
        * gas/mips/empic2.s: Add file offset information, so the next
        person to do the math mentioned above has an easier time.
        * gas/mips/jal-empic-elf.d: New test.
        * gas/mips/jal-empic-elf-2.d, gas/mips/jal-empic-elf-2.s: New test.
        * gas/mips/jal-empic-elf-3.d, gas/mips/jal-empic-elf-3.s: New test.
        * gas/mips/mips.exp: Run the new tests.
@
text
@a72 3
    if $elf { run_dump_test "jal-empic-elf" }
    if $elf { run_dump_test "jal-empic-elf-2" }
    if $elf { run_dump_test "jal-empic-elf-3" }
@


1.28.2.2
log
@2002-04-30  Chris Demetriou  <cgd@@broadcom.com>

        Merge from mainline:
        2002-03-15  Chris G. Demetriou  <cgd@@broadcom.com>
        * gas/mips/mips.exp: Use elf-rel2 and elfel-rel2 for
        mipsisa32*-*-* targets, rather than e32-rel2 and e32el-rel2.
@
text
@d182 1
a182 1
	if {[istarget mips64*-*-*] || [istarget mipsisa32*-*-*]} { 
d184 2
a185 1
	} else {
d187 1
a189 5
	if {[istarget mips64*-*-*]} {
	    run_dump_test "elf-rel4"
	} else {
	    run_dump_test "e32-rel4"
	}
@


1.27
log
@2002-01-02  Chris Demetriou  <cgd@@broadcom.com>

        * ld-mips-elf/empic1-ln.d: New file to test basic linking of
        R_MIPS_GNU_REL_HI16 and R_MIPS_GNU_REL_LO16 relocations.
        * ld-mips-elf/empic1-lp.d: Likewise.
        * ld-mips-elf/empic1-mn.d: Likewise.
        * ld-mips-elf/empic1-mp.d: Likewise.
        * ld-mips-elf/empic1-sn.d: Likewise.
        * ld-mips-elf/empic1-sp.d: Likewise.
        * ld-mips-elf/empic1-ref.s: Likewise.
        * ld-mips-elf/empic1-space.s: Likewise.
        * ld-mips-elf/empic1-tgt.s: Likewise.
        * ld-mips-elf/empic2-fwd-0.d: New file to test
        R_MIPS_GNU_REL_HI16 and R_MIPS_GNU_REL_LO16 relocation edge
        cases.
        * ld-mips-elf/empic2-fwd-1.d: Likewise.
        * ld-mips-elf/empic2-rev-0.d: Likewise.
        * ld-mips-elf/empic2-rev-1.d: Likewise.
        * ld-mips-elf/empic2-ref.s: Likewise.
        * ld-mips-elf/empic2-space.s: Likewise.
        * ld-mips-elf/empic2-fwd-tgt.s: Likewise.
        * ld-mips-elf/empic2-rev-tgt.s: Likewise.
        * ld-mips-elf/mips-elf.exp: New file to run MIPS 32-bit ELF
        tests (including those above).
@
text
@d5 6
d49 5
d59 1
d69 3
d76 3
d107 3
d150 3
@


1.26
log
@2001-11-16  Chris Demetriou  <cgd@@broadcom.cOm>

        * gas/mips/elf-rel5.s, gas/mips/elf-rel5.s: New test
        to test symbol plus offset relocations in various ways.
        * gas/mips/mips.exp: Run new test.
@
text
@d166 3
@


1.25
log
@	* config/tc-mips.c (support_64bit_objects): Define for OBJ_ELF only.
	(md_longopts): Allow OPTION_MABI for ELF compilation only. RE-allow
	OPTION_GP32, OPTION_GP64, OPTION_FP32 for non-ELF compilation.
	Sort options a bit more logical.
	(md_parse_option): Allow OPTION_32, OPTION_N32, OPTION_N64,
	OPTION_MABI only for elf targets.
	* gas/mips/mips.exp: Change naming of some conditionals to reflect
	the object format they actually mean. Don't try mips-abi32 and
	mips-abi32-pic tests for ecoff.
@
text
@d163 1
@


1.24
log
@[ gas/ChangeLog ]
2001-11-04  Chris Demetriou  <cgd@@broadcom.com>

	* configure.in (mips-*-netbsd*): Add support for target.
	* configure: Regenerate.

[ gas/testsuite/ChangeLog ]
2001-11-04  Chris Demetriou  <cgd@@broadcom.com>

	* gas/mips/mips.exp (svr4pic): Set if target is *-*-netbsd*.
	(aout): Don't set if *-*-netbsd*.

[ ld/ChangeLog ]
2001-11-04  Chris Demetriou  <cgd@@broadcom.com>

	* configure.tgt (mips*el-*-netbsd*, mips*-*-netbsd*):
	Add support for targets.
@
text
@d20 2
a21 2
    set svr4pic [expr [istarget *-*-elf*] || [istarget *-*-irix5*] || [istarget *-*-irix6* ] || [istarget *-*-linux*] || [istarget *-*-netbsd*] ]
    set empic [expr [istarget *-*-ecoff*] || [istarget *-*-ultrix*] || [istarget *-*-irix\[1-4\]*] ]
d50 1
a50 1
    if $svr4pic {
d55 3
a57 3
    if $svr4pic { run_dump_test "jal-svr4pic" }
    if $svr4pic { run_dump_test "jal-xgot" }
    if $empic { run_dump_test "jal-empic" }
d59 3
a61 3
    if $svr4pic { run_dump_test "la-svr4pic" }
    if $svr4pic { run_dump_test "la-xgot" }
    if $empic { run_dump_test "la-empic" }
d63 2
a64 2
    if $svr4pic { run_dump_test "lb-svr4pic" }
    if $svr4pic {
d70 1
a70 1
    if $empic { run_dump_test "lb-empic" }
d82 3
a84 3
    if $svr4pic { run_dump_test "ld-svr4pic" }
    if $svr4pic { run_dump_test "ld-xgot" }
    if $empic { run_dump_test "ld-empic" }
d87 3
a89 3
    if $svr4pic { run_dump_test "lif-svr4pic" }
    if $svr4pic { run_dump_test "lif-xgot" }
    if $empic { run_dump_test "lif-empic" }
d96 3
a98 3
    if $svr4pic { run_dump_test "ulh-svr4pic" }
    if $svr4pic { run_dump_test "ulh-xgot" }
    if $empic { run_dump_test "ulh-empic" }
d108 1
a108 1
    if { $svr4pic && !$no_mips16 } { run_dump_test "mips16" }
a132 1
    run_dump_test "mips-abi32"
d134 1
a134 1
    if $svr4pic {
d150 3
a152 1
	run_dump_test "mips-abi32-pic"
@


1.23
log
@[ bfd/ChangeLog ]
2001-10-31  Chris Demetriou  <cgd@@demetriou.com>

	* elf32-mips.c (_bfd_mips_elf_hi16_reloc): Handle PC-relative
	relocations properly.

[ gas/ChangeLog ]
2001-10-31  Chris Demetriou  <cgd@@broadcom.com>

	* config/tc-mips.c (HAVE_32BIT_ADDRESSES): If compiling embedded
	PIC code, assume pointers the same size as GPRs.
	(macro): In M_LA_AB handling for embedded PIC code, support
	"la $treg,foo-bar($breg)".  In load/store handling
	(label ld_st) support "<op> $treg,<sym>-<local_sym>($breg)"
	which is used by the compiler for switch statements.
	In load/store double multi-instruction macro handling
	(label ldd_std) add a comment that no special handling
	is currently done for embedded PIC.
	(mips_ip): In 'o' (16-bit offset) case, only accept 16
	bit offsets.

[ gas/testsuite/ChangeLog ]
2001-10-31  Chris Demetriou  <cgd@@broadcom.com>

	* gas/mips/empic.s: Undo damage inflicted on 2000-12-02.
	* gas/mips/empic.d: Likewise.
	* gas/mips/elempic.d: Likewise (it was copied into other files).
	* gas/mips/telempic.d: Likewise.
	* gas/mips/tempic.d: Likewise.

	* gas/mips/empic2.s: New test to check new 'la' and 'lw' (and
	related ops) syntax, test loads with large offsets.
	* gas/mips/emcic2.d: Likewise.
	* gas/mips/mips.exp: Run the new test on ELF platforms.
@
text
@d20 1
a20 1
    set svr4pic [expr [istarget *-*-elf*] || [istarget *-*-irix5*] || [istarget *-*-irix6* ] || [istarget *-*-linux*] ]
d22 1
a22 1
    set aout [expr [istarget *-*-bsd*] || [istarget *-*-netbsd*] || [istarget *-*-openbsd*] ]
@


1.22
log
@[gas/testsuite/ChangeLog]
2001-10-17  Chris Demetriou  <cgd@@broadcom.com>

        * gas/mips/mips.exp (sb1-ext-ps): New test to test
        SB-1 core's paired-single extensions to the MIPS64 ISA.
        * gas/mips/sb1-ext-ps.d: New file.
        * gas/mips/sb1-ext-ps.s: New file.

[include/opcode/ChangeLog]
2001-10-17  Chris Demetriou  <cgd@@broadcom.com>

        * mips.h (INSN_SB1): New cpu-specific instruction bit.
        (OPCODE_IS_MEMBER): Allow instructions matching INSN_SB1
        if cpu is CPU_SB1.

[opcodes/ChangeLog]
2001-10-17  Chris Demetriou  <cgd@@broadcom.com>

        * mips-dis.c (mips_isa_type): Make the ISA used to disassemble
        SB-1 binaries include instructions specific to the SB-1.
        * mips-opc.c (SB1): New definition.
        (mips_builtin_opcodes): Add SB-1 extension opcodes "div.ps",
        "recip.ps", "rsqrt.ps", and "sqrt.ps".
@
text
@d163 1
@


1.21
log
@	* binutils-all/readelf.exp: Don't regard mips*el-*-* as traditional
	mips.
	* gas/mips/mips.exp: Likewise. Use traditional testcases for
	mips${el}16-f if needed.
	* gas/mips/elempic.d: New file, testcase for little endian empic.
	* gas/mips/elfel-rel2.d: Don't test trailing zeroes in dump.
	* gas/mips/mips16-f.d: Use non-traditional symbol sorting.
	* gas/mips/mipsel16-f.d: Likewise.
	* gas/mips/mipsel16-e.d: New file, testcase for little endian MIPS16
	relocations.
	* gas/mips/tmipsel16-f.d: New file, testcase for little endian MIPS16
	relocations, traditional variant.
@
text
@d121 1
@


1.20
log
@
Add support for MIPS R1[02]000 performance counter opcodes.
@
text
@d27 1
a27 1
    if { [istarget mips*el-*-*] || [istarget "mips*-*-*linux*"] } then {
d164 1
a164 1
	    run_dump_test "mips${el}16-f" 
@


1.19
log
@2001-08-10  H.J. Lu  <hjl@@gnu.org>

	* gas/mips/e32-rel2.d: Updated for the objdump output change.
	* gas/mips/e32el-rel2.d: Likewise.
	* gas/mips/elf-rel.d: Likewise.
	* gas/mips/elf-rel2.d: Likewise.
	* gas/mips/elf-rel3.d: Likewise.
	* gas/mips/elf_e_flags1.d: Likewise.
	* gas/mips/elf_e_flags2.d: Likewise.
	* gas/mips/elf_e_flags3.d: Likewise.
	* gas/mips/elf_e_flags4.d: Likewise.
	* gas/mips/elfel-rel.d: Likewise.
	* gas/mips/elfel-rel2.d: Likewise.
	* gas/mips/elfel-rel3.d: Likewise.
	* gas/mips/empic.d: Likewise.
	* gas/mips/mips16-e.d: Likewise.
	* gas/mips/mips16-f.d: Likewise.
	* gas/mips/mipsel16-f.d: Likewise.
	* gas/mips/telempic.d: Likewise.
	* gas/mips/tempic.d: Likewise.
	* gas/mips/tmips16-e.d: Likewise.
	* gas/mips/tmipsel16-e.d: Likewise.

	* gas/mips/mips16-f.d: Fix the symbol table output.

	* gas/mips/mipsel16-f.d: Fix the endian.

	* gas/mips/mips.exp; Don't xfail mips16-f/mipsel16-f.
@
text
@d114 1
@


1.18
log
@2001-08-04  H.J. Lu  <hjl@@gnu.org>
	    Chris G. Demetriou <cgd@@broadcom.com>

	* gas/mips/e32-rel4.s: Removed.

	* gas/mips/e32-rel4.d: Use elf-rel4.s.

	* gas/mips/mips.exp: Use the same rel4 test for litte endian.

	* gas/mips/mips-abi32-pic.d: Add lines for objdump.
	* gas/mips/mips-abi32.d: Likewise.
	* gas/mips/mips-gp32-fp32-pic.d: Likewise.
	* gas/mips/mips-gp32-fp32.d: Likewise.
	* gas/mips/mips-gp32-fp64-pic.d: Likewise.
	* gas/mips/mips-gp32-fp64.d: Likewise.
	* gas/mips/mips-gp64-fp32-pic.d: Likewise.
	* gas/mips/mips-gp64-fp32.d: Likewise.
	* gas/mips/mips-gp64-fp64-pic.d: Likewise.
	* gas/mips/mips-gp64-fp64.d: Likewise.

	* gas/mips/mips-abi32-pic.s: Add space for objdump.
	* gas/mips/mips-abi32.s: Likewise.
	* gas/mips/mips-gp32-fp32-pic.s: Likewise.
	* gas/mips/mips-gp32-fp32.s: Likewise.
	* gas/mips/mips-gp32-fp64-pic.s: Likewise.
	* gas/mips/mips-gp32-fp64.s: Likewise.
	* gas/mips/mips-gp64-fp32-pic.s: Likewise.
	* gas/mips/mips-gp64-fp32.s: Likewise.
	* gas/mips/mips-gp64-fp64-pic.s: Likewise.
	* gas/mips/mips-gp64-fp64.s: Likewise.

	* gas/mips/mips-abi32-pic.s: Add the missing .end.
	* gas/mips/mips-gp32-fp32-pic.s: Likewise.
	* gas/mips/mips-gp32-fp64-pic.s: Likewise.
	* gas/mips/mips-gp64-fp32-pic.s: Likewise.
	* gas/mips/mips-gp64-fp64-pic.s: Likewise.
@
text
@a162 1
	    setup_xfail "mips*-*-*"
@


1.17
log
@	* gas/mips/elf-rel4.s, gas/mips/elf-rel4.d: New test.
	* gas/mips/e32-rel4.s, gas/mips/e32-rel4.s: New test.

	* gas/mips/mips.exp: Run new tests.
@
text
@d154 1
a154 1
	    run_dump_test "elf${el}-rel4"
d157 1
a157 1
	    run_dump_test "e32${el}-rel4"
@


1.16
log
@	* gas/mips/mips-gp32-fp32,
	* gas/mips/mips-gp32-fp64,
	* gas/mips/mips-gp64-fp32,
	* gas/mips/mips-gp64-fp64,
	* gas/mips/mips-abi32,
	* gas/mips/mips-gp32-fp32-pic,
	* gas/mips/mips-gp32-fp64-pic,
	* gas/mips/mips-gp64-fp32-pic,
	* gas/mips/mips-gp64-fp64-pic,
	* gas/mips/mips-abi32-pic: New testcases.

	* gas/mips/mips.exp: Run them.
@
text
@d153 2
a154 1
	    run_dump_test "elf${el}-rel2" 
d156 2
a157 1
	    run_dump_test "e32${el}-rel2" 
@


1.15
log
@	* gas/mips/mips.exp (el): New variable.
	Use it to pick ELF reloc tests.
@
text
@d127 6
d144 6
@


1.14
log
@2001-06-08  H.J. Lu  <hjl@@gnu.org>

	* gas/mips/elfel-rel3.s: Moved to ...
	* gas/mips/elf-rel3.s: Here.

	* gas/mips/elf-rel3.d: Updated.

	* gas/mips/elfel-rel3.d: Updated.

	* gas/mips/relax.d: New file.
	* gas/mips/relax.s: Likewise.

	* gas/mips/mips.exp: Run relax and set xfail.
@
text
@d32 5
a137 6
    
	if [istarget mips*el-*-*] { 
	    run_dump_test "elfel-rel"
	} {
	    run_dump_test "elf-rel"
	}
d139 1
d141 1
a141 15
	    if [istarget mips*el-*-*] { 
		run_dump_test "elfel-rel2" 
	    } {
		run_dump_test "elf-rel2" 
	    }
	} {
	    if [istarget mips*el-*-*] { 
		run_dump_test "e32el-rel2" 
	    } {
		run_dump_test "e32-rel2" 
	    }
	}

	if [istarget mips*el-*-*] { 
	    run_dump_test "elfel-rel3"
d143 1
a143 1
	    run_dump_test "elf-rel3"
d145 2
a146 7

	if [istarget mips*el-*-*] { 
	    run_dump_test "${tmips}elempic"
	} {
	    run_dump_test "${tmips}empic"
	}

d148 1
a148 5
	    if [istarget mips*el-*-*] { 
		run_dump_test "${tmips}mipsel16-e" 
	    } {
		run_dump_test "${tmips}mips16-e" 
	    }
d150 1
a150 5
	    if [istarget mips*el-*-*] { 
		run_dump_test "mipsel16-f" 
	    } {
		run_dump_test "mips16-f" 
	    }
@


1.13
log
@2001-06-08  H.J. Lu  <hjl@@gnu.org>

	* gas/mips/illegal.s: New file.
	* gas/mips/illegal.l: Likewise.

	* gas/elf/elf.exp (run_list_test): New.
	Run illegal with run_list_test.
@
text
@d116 4
@


1.12
log
@2001-06-08  H.J. Lu  <hjl@@gnu.org>

	* gas/mips/elf-jal.d: New file.

	* gas/mips/mips.exp: Run "elf-jal" instead of "jal" for ELF.
@
text
@d4 14
d115 2
@


1.11
log
@2001-06-07  H.J. Lu  <hjl@@gnu.org>

	* gas/mips/mips.exp: Set xfail for "lineno" on Linux/mips.
@
text
@d31 5
a35 1
    run_dump_test "jal"
@


1.10
log
@2001-06-06  H.J. Lu  <hjl@@gnu.org>

	* gas/mips/elf-rel3.s: New file.
	* gas/mips/elf-rel3.d: Likewise.
	* gas/mips/elfel-rel3.s: Likewise.
	* gas/mips/elfel-rel3.d: Likewise.

	* gas/mips/mips.exp: Run elf-rel3/elfel-rel3.
@
text
@d91 2
@


1.9
log
@2001-05-25  H.J. Lu  <hjl@@gnu.org>

	* gas/mips/e32el-rel2.d: New for little endian mips.
	* gas/mips/elfel-rel2.d: Likewise.
	* gas/mips/elfel-rel.d: Likewise.
	* gas/mips/mipsel16-f.d: Likewise.
	* gas/mips/telempic.d: Likewise.
	* gas/mips/tmipsel16-e.d: Likewise.

	* gas/mips/tempic.d: New for traditional mips.
	* gas/mips/tmips16-e.d: Likewise.

	* gas/mips/elf-rel.d: Handle alignment padding.
	* gas/mips/elf-rel2.d: Likewise.

	* gas/mips/mips.exp: Support little endian and traditional
	mips.
@
text
@d129 6
@


1.8
log
@Automate generate on man pages
@
text
@d13 5
a17 3



d108 6
a113 1
	run_dump_test "elf-rel"
d115 15
a129 1
	    run_dump_test "elf-rel2" 
d131 3
a133 3
	    run_dump_test "e32-rel2" 
	} 
	run_dump_test "empic"
d135 5
a139 1
	    run_dump_test "mips16-e" 
d141 5
a145 1
	    run_dump_test "mips16-f" 
@


1.7
log
@2001-02-17  Chris Demetriou  <cgd@@broadcom.com>

        * gas/mips/mips.exp: Don't attempt the elf_e_flags family of
        tests if not ELF; they test ELF-specific features.
@
text
@d4 1
a4 1
if [istarget mips*-*-*] then {
@


1.6
log
@Add MIPS64 instructions and tests
@
text
@d94 11
a104 10
    # Make sure that -mcpu=FOO and -mFOO are equivalent.  Assemble a file
    # containing 4650-specific instructions with -m4650 and -mcpu=4650,
    # and verify that they're the same.  Specifically, we're checking
    # that the EF_MIPS_MACH field is set, and that the 4650 'mul'
    # instruction does get used.  In previous versions of GAS, 
    # only -mcpu=4650 would set the EF_MIPS_MACH field; -m4650 wouldn't.
    run_dump_test "elf_e_flags1"
    run_dump_test "elf_e_flags2"
    run_dump_test "elf_e_flags3"
    run_dump_test "elf_e_flags4"
a105 1
    if $svr4pic {
@


1.6.2.1
log
@Merge from mainline.
@
text
@d4 1
a4 1
if { [istarget mips*-*-*] } then {
d13 3
a15 5
    if { [istarget mips*el-*-*] || [istarget "mips*-*-*linux*"] } then {
	set tmips "t"
    } else {
	set tmips ""
    }
a88 2
    # Linux uses ELF stabs, which doesn't support line number.
    setup_xfail "mips*-*-*linux*"
d94 11
d106 1
a106 17
	# Make sure that -mcpu=FOO and -mFOO are equivalent.  Assemble a file
	# containing 4650-specific instructions with -m4650 and -mcpu=4650,
	# and verify that they're the same.  Specifically, we're checking
	# that the EF_MIPS_MACH field is set, and that the 4650 'mul'
	# instruction does get used.  In previous versions of GAS, 
	# only -mcpu=4650 would set the EF_MIPS_MACH field; -m4650 wouldn't.
	run_dump_test "elf_e_flags1"
	run_dump_test "elf_e_flags2"
	run_dump_test "elf_e_flags3"
	run_dump_test "elf_e_flags4"
    
	if [istarget mips*el-*-*] { 
	    run_dump_test "elfel-rel"
	} {
	    run_dump_test "elf-rel"
	}

d108 1
a108 15
	    if [istarget mips*el-*-*] { 
		run_dump_test "elfel-rel2" 
	    } {
		run_dump_test "elf-rel2" 
	    }
	} {
	    if [istarget mips*el-*-*] { 
		run_dump_test "e32el-rel2" 
	    } {
		run_dump_test "e32-rel2" 
	    }
	}

	if [istarget mips*el-*-*] { 
	    run_dump_test "elfel-rel3"
d110 3
a112 9
	    run_dump_test "elf-rel3"
	}

	if [istarget mips*el-*-*] { 
	    run_dump_test "${tmips}elempic"
	} {
	    run_dump_test "${tmips}empic"
	}

d114 1
a114 5
	    if [istarget mips*el-*-*] { 
		run_dump_test "${tmips}mipsel16-e" 
	    } {
		run_dump_test "${tmips}mips16-e" 
	    }
d116 1
a116 5
	    if [istarget mips*el-*-*] { 
		run_dump_test "mipsel16-f" 
	    } {
		run_dump_test "mips16-f" 
	    }
@


1.5
log
@Add MIPS32 as a seperate MIPS architecture
@
text
@d92 1
@


1.4
log
@Ulf Carlsson's patches:
Include *-*-linux* in svr4pic tests
Test weak symbol handling.
@
text
@d91 1
@


1.3
log
@In bfd/:
	* elf32-mips.c (mips_elf_next_relocation): Rename from
	mips_elf_next_lo16_relocation, and generalize to look
	for any relocation type.
	(elf_mips_howto_table): Make R_MIPS_PC16 pcrel_offset.
	(elf_mips_gnu_rel_hi16): Howto for R_MIPS_GNU_REL_HI16.
	(elf_mips_gnu_rel_lo16): Howto for R_MIPS_GNU_REL_LO16.
	(elf_mips_gnu_rel16_s2): Howto for R_MIPS_GNU_REL16_S2.
	(elf_mips_gnu_pcrel64): Howto for R_MIPS_PC64.
	(elf_mips_gnu_pcrel32): Howto for R_MIPS_PC32.
	(bfd_elf32_bfd_reloc_type_lookup): Add new relocs.
	(mips_rtype_to_howto): Likewise.
	(mips_elf_calculate_relocation): Handle new relocs.
	(_bfd_mips_elf_relocate_section): REL_HI16/REL_LO16 relocs
	are paired.  The addend for R_MIPS_GNU_REL16_S2
	is shifted right two bits.
In gas/:
	* config/tc-mips.c (mips_ip): Don't put stuff in .rodata
	when embedded-pic.

	* config/tc-mips.c (SWITCH_TABLE): The ELF embedded-pic
 	implementation doesn't have special handling for switch
 	statements.
	(macro_build): Allow for code in sections other than .text.
	(macro): Likewise.
	(mips_ip): Likewise.
	(md_apply_fix): Do pc-relative relocation madness for MIPS ELF.
  	Don't perform relocs if we will be outputting them.
	(tc_gen_reloc): For ELF, just use fx_addnumber for pc-relative
 	relocations.  Allow BFD_RELOC_16_PCREL_S2 relocs when
 	embedded-pic.
In gas/testsuite/:
	* gas/mips/empic.d: New file.
	* gas/mips/empic.s: New file.
	* gas/mips/mips16-e.d: New file.
	* gas/mips/mips16-e.s: New file.
	* gas/mips/mips16-f.d: New file.
	* gas/mips/mips16-f.s: New file.
	* gas/mips/mips.exp: Add empic, mips16-e.  Add mips16-f as an
	expected failure.
In include/elf:
	* mips.h: Add R_MIPS_GNU_REL_HI16, R_MIPS_GNU_REL_LO16,
 	R_MIPS_GNU_REL16_S2, R_MIPS_PC64 and R_MIPS_PC32 relocation
 	numbers.
@
text
@d6 1
a6 1
    set svr4pic [expr [istarget *-*-elf*] || [istarget *-*-irix5*] || [istarget *-*-irix6* ] ]
d8 1
a8 1
    set aout [expr [istarget *-*-bsd*] || [istarget *-*-netbsd*] || [istarget *-*-openbsd*]]
@


1.2
log
@* gas/mips/elf-rel.s: New file.
* gas/mips/elf-rel.d: New file.
* gas/mips/elf-rel2.d: New file.
* gas/mips/e32-rel2.d: New file.
* gas/mips/elf-rel2.s: New file.
* gas/mips/mips.exp: Add elf-rel, elf-rel2.

* gas/mips/elf_e_flags1.d: Tweak a little so it passes
even if the CPU is set to something by default.
@
text
@d110 6
@


1.1
log
@Initial revision
@
text
@d102 9
@


1.1.1.1
log
@19990502 sourceware import
@
text
@@

