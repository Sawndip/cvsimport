head	1.3;
access;
symbols
	binutils-2_24-branch:1.3.0.2
	binutils-2_24-branchpoint:1.3
	binutils-2_21_1:1.1
	binutils-2_23_2:1.2.2.1
	binutils-2_23_1:1.2.2.1
	binutils-2_23:1.2.2.1
	binutils-2_23-branch:1.2.0.2
	binutils-2_23-branchpoint:1.2
	binutils-2_22_branch:1.1.0.28
	binutils-2_22:1.1
	binutils-2_22-branch:1.1.0.26
	binutils-2_22-branchpoint:1.1
	binutils-2_21:1.1
	binutils-2_21-branch:1.1.0.24
	binutils-2_21-branchpoint:1.1
	binutils-2_20_1:1.1
	binutils-2_20:1.1
	binutils-arc-20081103-branch:1.1.0.22
	binutils-arc-20081103-branchpoint:1.1
	binutils-2_20-branch:1.1.0.20
	binutils-2_20-branchpoint:1.1
	dje-cgen-play1-branch:1.1.0.18
	dje-cgen-play1-branchpoint:1.1
	arc-20081103-branch:1.1.0.16
	arc-20081103-branchpoint:1.1
	binutils-2_19_1:1.1
	binutils-2_19:1.1
	binutils-2_19-branch:1.1.0.14
	binutils-2_19-branchpoint:1.1
	binutils-2_18:1.1
	binutils-2_18-branch:1.1.0.12
	binutils-2_18-branchpoint:1.1
	binutils-csl-coldfire-4_1-32:1.1
	binutils-csl-sourcerygxx-4_1-32:1.1
	binutils-csl-innovasic-fido-3_4_4-33:1.1
	binutils-csl-sourcerygxx-3_4_4-32:1.1
	binutils-csl-coldfire-4_1-30:1.1
	binutils-csl-sourcerygxx-4_1-30:1.1
	binutils-csl-coldfire-4_1-28:1.1
	binutils-csl-sourcerygxx-4_1-29:1.1
	binutils-csl-sourcerygxx-4_1-28:1.1
	binutils-csl-arm-2006q3-27:1.1
	binutils-csl-sourcerygxx-4_1-27:1.1
	binutils-csl-arm-2006q3-26:1.1
	binutils-csl-sourcerygxx-4_1-26:1.1
	binutils-csl-sourcerygxx-4_1-25:1.1
	binutils-csl-sourcerygxx-4_1-24:1.1
	binutils-csl-sourcerygxx-4_1-23:1.1
	binutils-csl-sourcerygxx-4_1-21:1.1
	binutils-csl-arm-2006q3-21:1.1
	binutils-csl-sourcerygxx-4_1-22:1.1
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.1
	binutils-csl-sourcerygxx-4_1-20:1.1
	binutils-csl-arm-2006q3-19:1.1
	binutils-csl-sourcerygxx-4_1-19:1.1
	binutils-csl-sourcerygxx-4_1-18:1.1
	binutils-csl-renesas-4_1-9:1.1
	binutils-csl-sourcerygxx-3_4_4-25:1.1
	binutils-csl-renesas-4_1-8:1.1
	binutils-csl-renesas-4_1-7:1.1
	binutils-csl-renesas-4_1-6:1.1
	binutils-csl-sourcerygxx-4_1-17:1.1
	binutils-csl-sourcerygxx-4_1-14:1.1
	binutils-csl-sourcerygxx-4_1-15:1.1
	binutils-csl-sourcerygxx-4_1-13:1.1
	binutils-2_17:1.1
	binutils-csl-sourcerygxx-4_1-12:1.1
	binutils-csl-sourcerygxx-3_4_4-21:1.1
	binutils-csl-wrs-linux-3_4_4-24:1.1
	binutils-csl-wrs-linux-3_4_4-23:1.1
	binutils-csl-sourcerygxx-4_1-9:1.1
	binutils-csl-sourcerygxx-4_1-8:1.1
	binutils-csl-sourcerygxx-4_1-7:1.1
	binutils-csl-arm-2006q1-6:1.1
	binutils-csl-sourcerygxx-4_1-6:1.1
	binutils-csl-wrs-linux-3_4_4-22:1.1
	binutils-csl-coldfire-4_1-11:1.1
	binutils-csl-sourcerygxx-3_4_4-19:1.1
	binutils-csl-coldfire-4_1-10:1.1
	binutils-csl-sourcerygxx-4_1-5:1.1
	binutils-csl-sourcerygxx-4_1-4:1.1
	binutils-csl-wrs-linux-3_4_4-21:1.1
	binutils-csl-morpho-4_1-4:1.1
	binutils-csl-sourcerygxx-3_4_4-17:1.1
	binutils-csl-wrs-linux-3_4_4-20:1.1
	binutils-2_17-branch:1.1.0.10
	binutils-2_17-branchpoint:1.1
	binutils-csl-2_17-branch:1.1.0.8
	binutils-csl-2_17-branchpoint:1.1
	binutils-csl-gxxpro-3_4-branch:1.1.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.1
	binutils-2_16_1:1.1
	binutils-csl-arm-2005q1b:1.1
	binutils-2_16:1.1
	binutils-csl-arm-2005q1a:1.1
	binutils-csl-arm-2005q1-branch:1.1.0.4
	binutils-csl-arm-2005q1-branchpoint:1.1
	binutils-2_16-branch:1.1.0.2
	binutils-2_16-branchpoint:1.1
	binutils_latest_snapshot:1.3;
locks; strict;
comment	@# @;


1.3
date	2012.08.06.21.28.44;	author macro;	state Exp;
branches;
next	1.2;

1.2
date	2012.05.14.02.40.00;	author hjl;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2005.03.04.09.51.11;	author rsandifo;	state Exp;
branches;
next	;

1.2.2.1
date	2012.09.04.14.37.57;	author gingold;	state Exp;
branches;
next	;


desc
@@


1.3
log
@	gas/testsuite/
	* gas/mips/mips.exp: Set has_newabi for all Linux targets.
	* gas/mips/cfi-n64-1.d: Adjust for targets that do not infer the
	ISA from the ABI.
	* gas/mips/elf-rel-got-n32.d: Likewise.
	* gas/mips/elf-rel-got-n64.d: Likewise.
	* gas/mips/elf-rel-xgot-n32.d: Likewise.
	* gas/mips/elf-rel-xgot-n64.d: Likewise.
	* gas/mips/elf-rel18.d: Likewise.
	* gas/mips/elf-rel28-n32.d: Likewise.
	* gas/mips/elf-rel28-n64.d: Likewise.
	* gas/mips/jal-newabi.d: Likewise.
	* gas/mips/ldstla-n64-shared.d: Likewise.
	* gas/mips/ldstla-n64-sym32.d: Likewise.
	* gas/mips/ldstla-n64.d: Likewise.
	* gas/mips/macro-warn-1-n32.d: Likewise.
	* gas/mips/macro-warn-2-n32.d: Likewise.
	* gas/mips/n32-consec.d: Likewise.

	ld/testsuite/
	* ld-mips-elf/mips-elf.exp: Set has_newabi for all Linux targets.
	Adjust abi_asflags for targets that do not infer the ISA from the
	ABI.
	* ld-mips-elf/eh-frame1-n32.d: Adjust for targets that do not
	infer the ISA from the ABI.
	* ld-mips-elf/eh-frame1-n64.d: Likewise.
	* ld-mips-elf/eh-frame2-n32.d: Likewise.
	* ld-mips-elf/eh-frame2-n64.d: Likewise.
	* ld-mips-elf/elf-rel-got-n32-embed.d: Likewise.
	* ld-mips-elf/elf-rel-got-n32.d: Likewise.
	* ld-mips-elf/elf-rel-got-n64-embed.d: Likewise.
	* ld-mips-elf/elf-rel-got-n64-linux.d: Likewise.
	* ld-mips-elf/elf-rel-got-n64.d: Likewise.
	* ld-mips-elf/elf-rel-xgot-n32-embed.d: Likewise.
	* ld-mips-elf/elf-rel-xgot-n32.d: Likewise.
	* ld-mips-elf/elf-rel-xgot-n64-embed.d: Likewise.
	* ld-mips-elf/elf-rel-xgot-n64-linux.d: Likewise.
	* ld-mips-elf/elf-rel-xgot-n64.d: Likewise.
	* ld-mips-elf/emit-relocs-1.d: Likewise.
	* ld-mips-elf/got-page-2.d: Likewise.
	* ld-mips-elf/no-shared-1-n32.d: Likewise.
	* ld-mips-elf/no-shared-1-n64.d: Likewise.
	* ld-mips-elf/rel32-n32.d: Likewise.
	* ld-mips-elf/rel64.d: Likewise.
	* ld-mips-elf/relax-jalr-n32-shared.d: Likewise.
	* ld-mips-elf/relax-jalr-n32.d: Likewise.
	* ld-mips-elf/relax-jalr-n64-shared.d: Likewise.
	* ld-mips-elf/relax-jalr-n64.d: Likewise.
	* ld-mips-elf/reloc-1-n32.d: Likewise.
	* ld-mips-elf/reloc-1-n64.d: Likewise.
	* ld-mips-elf/textrel-1.d: Likewise.
@
text
@#objdump: -dr
#as: -march=from-abi -64 -msym32 -G8 -EB
#name: MIPS ld-st-la with sym32
#source: ldstla-sym32.s

.*file format .*

Disassembly .*:

0+00 <.*>:
#
# dla constants
#
.*	li	a0,0xa800
.*	dsll32	a0,a0,0x10
.*	li	a0,0xa800
.*	dsll32	a0,a0,0x10
.*	daddu	a0,a0,v1
.*	lui	a0,0x8000
.*	lui	a0,0x8000
.*	daddu	a0,a0,v1
.*	lui	a0,0x7fff
.*	ori	a0,a0,0x7ff8
.*	lui	a0,0x7fff
.*	ori	a0,a0,0x7ff8
.*	daddu	a0,a0,v1
.*	lui	a0,0x7fff
.*	ori	a0,a0,0xfff8
.*	lui	a0,0x7fff
.*	ori	a0,a0,0xfff8
.*	daddu	a0,a0,v1
.*	lui	a0,0x1234
.*	ori	a0,a0,0x5678
.*	dsll	a0,a0,0x10
.*	ori	a0,a0,0x9abc
.*	dsll	a0,a0,0x10
.*	ori	a0,a0,0xdef0
.*	lui	a0,0x1234
.*	ori	a0,a0,0x5678
.*	dsll	a0,a0,0x10
.*	ori	a0,a0,0x9abc
.*	dsll	a0,a0,0x10
.*	ori	a0,a0,0xdef0
.*	daddu	a0,a0,v1
#
# dla small_comm
#
.*	daddiu	a0,gp,0
.*: R_MIPS_GPREL16	small_comm
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddiu	a0,gp,0
.*: R_MIPS_GPREL16	small_comm
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	a0,a0,v1
.*	daddiu	a0,gp,0
.*: R_MIPS_GPREL16	small_comm\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddiu	a0,gp,0
.*: R_MIPS_GPREL16	small_comm\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	a0,a0,v1
#
# dla big_comm
#
.*	lui	a0,0x0
.*: R_MIPS_HI16	big_comm
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	d?addiu	a0,a0,0
.*: R_MIPS_LO16	big_comm
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lui	a0,0x0
.*: R_MIPS_HI16	big_comm
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	d?addiu	a0,a0,0
.*: R_MIPS_LO16	big_comm
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	a0,a0,v1
.*	lui	a0,0x0
.*: R_MIPS_HI16	big_comm\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	d?addiu	a0,a0,0
.*: R_MIPS_LO16	big_comm\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lui	a0,0x0
.*: R_MIPS_HI16	big_comm\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	d?addiu	a0,a0,0
.*: R_MIPS_LO16	big_comm\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	a0,a0,v1
#
# dla small_data
#
.*	daddiu	a0,gp,0
.*: R_MIPS_GPREL16	small_data
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddiu	a0,gp,0
.*: R_MIPS_GPREL16	small_data
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	a0,a0,v1
.*	daddiu	a0,gp,0
.*: R_MIPS_GPREL16	small_data\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddiu	a0,gp,0
.*: R_MIPS_GPREL16	small_data\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	a0,a0,v1
#
# dla big_data
#
.*	lui	a0,0x0
.*: R_MIPS_HI16	big_data
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	d?addiu	a0,a0,0
.*: R_MIPS_LO16	big_data
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lui	a0,0x0
.*: R_MIPS_HI16	big_data
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	d?addiu	a0,a0,0
.*: R_MIPS_LO16	big_data
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	a0,a0,v1
.*	lui	a0,0x0
.*: R_MIPS_HI16	big_data\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	d?addiu	a0,a0,0
.*: R_MIPS_LO16	big_data\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lui	a0,0x0
.*: R_MIPS_HI16	big_data\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	d?addiu	a0,a0,0
.*: R_MIPS_LO16	big_data\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	a0,a0,v1
#
# dla extern
#
.*	lui	a0,0x0
.*: R_MIPS_HI16	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	d?addiu	a0,a0,0
.*: R_MIPS_LO16	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lui	a0,0x0
.*: R_MIPS_HI16	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	d?addiu	a0,a0,0
.*: R_MIPS_LO16	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	a0,a0,v1
.*	lui	a0,0x0
.*: R_MIPS_HI16	extern\+0x34000
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	d?addiu	a0,a0,0
.*: R_MIPS_LO16	extern\+0x34000
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lui	a0,0x0
.*: R_MIPS_HI16	extern\+0x34000
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	d?addiu	a0,a0,0
.*: R_MIPS_LO16	extern\+0x34000
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	a0,a0,v1
.*	lui	a0,0x0
.*: R_MIPS_HI16	extern-0x34000
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	d?addiu	a0,a0,0
.*: R_MIPS_LO16	extern-0x34000
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lui	a0,0x0
.*: R_MIPS_HI16	extern-0x34000
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	d?addiu	a0,a0,0
.*: R_MIPS_LO16	extern-0x34000
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	a0,a0,v1
#
# lw constants
#
.*	li	a0,0xa800
.*	dsll32	a0,a0,0x10
.*	lw	a0,0\(a0\)
.*	li	a0,0xa800
.*	dsll32	a0,a0,0x10
.*	daddu	a0,a0,v1
.*	lw	a0,0\(a0\)
.*	lui	a0,0x8000
.*	lw	a0,0\(a0\)
.*	lui	a0,0x8000
.*	daddu	a0,a0,v1
.*	lw	a0,0\(a0\)
.*	lui	a0,0x7fff
.*	lw	a0,32760\(a0\)
.*	lui	a0,0x7fff
.*	daddu	a0,a0,v1
.*	lw	a0,32760\(a0\)
.*	li	a0,0x8000
.*	dsll	a0,a0,0x10
.*	lw	a0,-8\(a0\)
.*	li	a0,0x8000
.*	dsll	a0,a0,0x10
.*	daddu	a0,a0,v1
.*	lw	a0,-8\(a0\)
.*	lui	a0,0x1234
.*	ori	a0,a0,0x5678
.*	dsll	a0,a0,0x10
.*	ori	a0,a0,0x9abd
.*	dsll	a0,a0,0x10
.*	lw	a0,-8464\(a0\)
.*	lui	a0,0x1234
.*	ori	a0,a0,0x5678
.*	dsll	a0,a0,0x10
.*	ori	a0,a0,0x9abd
.*	dsll	a0,a0,0x10
.*	daddu	a0,a0,v1
.*	lw	a0,-8464\(a0\)
#
# lw small_comm
#
.*	lw	a0,0\(gp\)
.*: R_MIPS_GPREL16	small_comm
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	a0,v1,gp
.*	lw	a0,0\(a0\)
.*: R_MIPS_GPREL16	small_comm
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lw	a0,0\(gp\)
.*: R_MIPS_GPREL16	small_comm\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	a0,v1,gp
.*	lw	a0,0\(a0\)
.*: R_MIPS_GPREL16	small_comm\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
#
# lw big_comm
#
.*	lui	a0,0x0
.*: R_MIPS_HI16	big_comm
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lw	a0,0\(a0\)
.*: R_MIPS_LO16	big_comm
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lui	a0,0x0
.*: R_MIPS_HI16	big_comm
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	a0,a0,v1
.*	lw	a0,0\(a0\)
.*: R_MIPS_LO16	big_comm
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lui	a0,0x0
.*: R_MIPS_HI16	big_comm\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lw	a0,0\(a0\)
.*: R_MIPS_LO16	big_comm\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lui	a0,0x0
.*: R_MIPS_HI16	big_comm\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	a0,a0,v1
.*	lw	a0,0\(a0\)
.*: R_MIPS_LO16	big_comm\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
#
# lw small_data
#
.*	lw	a0,0\(gp\)
.*: R_MIPS_GPREL16	small_data
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	a0,v1,gp
.*	lw	a0,0\(a0\)
.*: R_MIPS_GPREL16	small_data
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lw	a0,0\(gp\)
.*: R_MIPS_GPREL16	small_data\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	a0,v1,gp
.*	lw	a0,0\(a0\)
.*: R_MIPS_GPREL16	small_data\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
#
# lw big_data
#
.*	lui	a0,0x0
.*: R_MIPS_HI16	big_data
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lw	a0,0\(a0\)
.*: R_MIPS_LO16	big_data
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lui	a0,0x0
.*: R_MIPS_HI16	big_data
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	a0,a0,v1
.*	lw	a0,0\(a0\)
.*: R_MIPS_LO16	big_data
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lui	a0,0x0
.*: R_MIPS_HI16	big_data\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lw	a0,0\(a0\)
.*: R_MIPS_LO16	big_data\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lui	a0,0x0
.*: R_MIPS_HI16	big_data\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	a0,a0,v1
.*	lw	a0,0\(a0\)
.*: R_MIPS_LO16	big_data\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
#
# lw extern
#
.*	lui	a0,0x0
.*: R_MIPS_HI16	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lw	a0,0\(a0\)
.*: R_MIPS_LO16	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lui	a0,0x0
.*: R_MIPS_HI16	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	a0,a0,v1
.*	lw	a0,0\(a0\)
.*: R_MIPS_LO16	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lui	a0,0x0
.*: R_MIPS_HI16	extern\+0x34000
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lw	a0,0\(a0\)
.*: R_MIPS_LO16	extern\+0x34000
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lui	a0,0x0
.*: R_MIPS_HI16	extern\+0x34000
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	a0,a0,v1
.*	lw	a0,0\(a0\)
.*: R_MIPS_LO16	extern\+0x34000
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lui	a0,0x0
.*: R_MIPS_HI16	extern-0x34000
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lw	a0,0\(a0\)
.*: R_MIPS_LO16	extern-0x34000
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lui	a0,0x0
.*: R_MIPS_HI16	extern-0x34000
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	a0,a0,v1
.*	lw	a0,0\(a0\)
.*: R_MIPS_LO16	extern-0x34000
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
#
# sw constants
#
.*	li	at,0xa800
.*	dsll32	at,at,0x10
.*	sw	a0,0\(at\)
.*	li	at,0xa800
.*	dsll32	at,at,0x10
.*	daddu	at,at,v1
.*	sw	a0,0\(at\)
.*	lui	at,0x8000
.*	sw	a0,0\(at\)
.*	lui	at,0x8000
.*	daddu	at,at,v1
.*	sw	a0,0\(at\)
.*	lui	at,0x7fff
.*	sw	a0,32760\(at\)
.*	lui	at,0x7fff
.*	daddu	at,at,v1
.*	sw	a0,32760\(at\)
.*	li	at,0x8000
.*	dsll	at,at,0x10
.*	sw	a0,-8\(at\)
.*	li	at,0x8000
.*	dsll	at,at,0x10
.*	daddu	at,at,v1
.*	sw	a0,-8\(at\)
.*	lui	at,0x1234
.*	ori	at,at,0x5678
.*	dsll	at,at,0x10
.*	ori	at,at,0x9abd
.*	dsll	at,at,0x10
.*	sw	a0,-8464\(at\)
.*	lui	at,0x1234
.*	ori	at,at,0x5678
.*	dsll	at,at,0x10
.*	ori	at,at,0x9abd
.*	dsll	at,at,0x10
.*	daddu	at,at,v1
.*	sw	a0,-8464\(at\)
#
# sw small_comm
#
.*	sw	a0,0\(gp\)
.*: R_MIPS_GPREL16	small_comm
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	at,v1,gp
.*	sw	a0,0\(at\)
.*: R_MIPS_GPREL16	small_comm
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	sw	a0,0\(gp\)
.*: R_MIPS_GPREL16	small_comm\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	at,v1,gp
.*	sw	a0,0\(at\)
.*: R_MIPS_GPREL16	small_comm\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
#
# sw big_comm
#
.*	lui	at,0x0
.*: R_MIPS_HI16	big_comm
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	sw	a0,0\(at\)
.*: R_MIPS_LO16	big_comm
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lui	at,0x0
.*: R_MIPS_HI16	big_comm
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	at,at,v1
.*	sw	a0,0\(at\)
.*: R_MIPS_LO16	big_comm
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lui	at,0x0
.*: R_MIPS_HI16	big_comm\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	sw	a0,0\(at\)
.*: R_MIPS_LO16	big_comm\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lui	at,0x0
.*: R_MIPS_HI16	big_comm\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	at,at,v1
.*	sw	a0,0\(at\)
.*: R_MIPS_LO16	big_comm\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
#
# sw small_data
#
.*	sw	a0,0\(gp\)
.*: R_MIPS_GPREL16	small_data
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	at,v1,gp
.*	sw	a0,0\(at\)
.*: R_MIPS_GPREL16	small_data
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	sw	a0,0\(gp\)
.*: R_MIPS_GPREL16	small_data\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	at,v1,gp
.*	sw	a0,0\(at\)
.*: R_MIPS_GPREL16	small_data\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
#
# sw big_data
#
.*	lui	at,0x0
.*: R_MIPS_HI16	big_data
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	sw	a0,0\(at\)
.*: R_MIPS_LO16	big_data
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lui	at,0x0
.*: R_MIPS_HI16	big_data
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	at,at,v1
.*	sw	a0,0\(at\)
.*: R_MIPS_LO16	big_data
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lui	at,0x0
.*: R_MIPS_HI16	big_data\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	sw	a0,0\(at\)
.*: R_MIPS_LO16	big_data\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lui	at,0x0
.*: R_MIPS_HI16	big_data\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	at,at,v1
.*	sw	a0,0\(at\)
.*: R_MIPS_LO16	big_data\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
#
# sw extern
#
.*	lui	at,0x0
.*: R_MIPS_HI16	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	sw	a0,0\(at\)
.*: R_MIPS_LO16	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lui	at,0x0
.*: R_MIPS_HI16	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	at,at,v1
.*	sw	a0,0\(at\)
.*: R_MIPS_LO16	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lui	at,0x0
.*: R_MIPS_HI16	extern\+0x34000
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	sw	a0,0\(at\)
.*: R_MIPS_LO16	extern\+0x34000
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lui	at,0x0
.*: R_MIPS_HI16	extern\+0x34000
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	at,at,v1
.*	sw	a0,0\(at\)
.*: R_MIPS_LO16	extern\+0x34000
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lui	at,0x0
.*: R_MIPS_HI16	extern-0x34000
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	sw	a0,0\(at\)
.*: R_MIPS_LO16	extern-0x34000
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lui	at,0x0
.*: R_MIPS_HI16	extern-0x34000
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	at,at,v1
.*	sw	a0,0\(at\)
.*: R_MIPS_LO16	extern-0x34000
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
#
# usw constants
#
.*	li	at,0xa800
.*	dsll32	at,at,0x10
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	li	at,0xa800
.*	dsll32	at,at,0x10
.*	daddu	at,at,v1
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	lui	at,0x8000
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	lui	at,0x8000
.*	daddu	at,at,v1
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	lui	at,0x7fff
.*	ori	at,at,0x7ff8
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	lui	at,0x7fff
.*	ori	at,at,0x7ff8
.*	daddu	at,at,v1
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	lui	at,0x7fff
.*	ori	at,at,0xfff8
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	lui	at,0x7fff
.*	ori	at,at,0xfff8
.*	daddu	at,at,v1
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	lui	at,0x1234
.*	ori	at,at,0x5678
.*	dsll	at,at,0x10
.*	ori	at,at,0x9abc
.*	dsll	at,at,0x10
.*	ori	at,at,0xdef0
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	lui	at,0x1234
.*	ori	at,at,0x5678
.*	dsll	at,at,0x10
.*	ori	at,at,0x9abc
.*	dsll	at,at,0x10
.*	ori	at,at,0xdef0
.*	daddu	at,at,v1
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
#
# usw small_comm
#
.*	daddiu	at,gp,0
.*: R_MIPS_GPREL16	small_comm
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	daddiu	at,gp,0
.*: R_MIPS_GPREL16	small_comm
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	at,at,v1
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	daddiu	at,gp,0
.*: R_MIPS_GPREL16	small_comm\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	daddiu	at,gp,0
.*: R_MIPS_GPREL16	small_comm\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	at,at,v1
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
#
# usw big_comm
#
.*	lui	at,0x0
.*: R_MIPS_HI16	big_comm
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	d?addiu	at,at,0
.*: R_MIPS_LO16	big_comm
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	lui	at,0x0
.*: R_MIPS_HI16	big_comm
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	d?addiu	at,at,0
.*: R_MIPS_LO16	big_comm
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	at,at,v1
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	lui	at,0x0
.*: R_MIPS_HI16	big_comm\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	d?addiu	at,at,0
.*: R_MIPS_LO16	big_comm\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	lui	at,0x0
.*: R_MIPS_HI16	big_comm\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	d?addiu	at,at,0
.*: R_MIPS_LO16	big_comm\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	at,at,v1
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
#
# usw small_data
#
.*	daddiu	at,gp,0
.*: R_MIPS_GPREL16	small_data
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	daddiu	at,gp,0
.*: R_MIPS_GPREL16	small_data
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	at,at,v1
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	daddiu	at,gp,0
.*: R_MIPS_GPREL16	small_data\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	daddiu	at,gp,0
.*: R_MIPS_GPREL16	small_data\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	at,at,v1
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
#
# usw big_data
#
.*	lui	at,0x0
.*: R_MIPS_HI16	big_data
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	d?addiu	at,at,0
.*: R_MIPS_LO16	big_data
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	lui	at,0x0
.*: R_MIPS_HI16	big_data
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	d?addiu	at,at,0
.*: R_MIPS_LO16	big_data
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	at,at,v1
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	lui	at,0x0
.*: R_MIPS_HI16	big_data\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	d?addiu	at,at,0
.*: R_MIPS_LO16	big_data\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	lui	at,0x0
.*: R_MIPS_HI16	big_data\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	d?addiu	at,at,0
.*: R_MIPS_LO16	big_data\+0x3
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	at,at,v1
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
#
# usw extern
#
.*	lui	at,0x0
.*: R_MIPS_HI16	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	d?addiu	at,at,0
.*: R_MIPS_LO16	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	lui	at,0x0
.*: R_MIPS_HI16	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	d?addiu	at,at,0
.*: R_MIPS_LO16	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	at,at,v1
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	lui	at,0x0
.*: R_MIPS_HI16	extern\+0x34000
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	d?addiu	at,at,0
.*: R_MIPS_LO16	extern\+0x34000
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	lui	at,0x0
.*: R_MIPS_HI16	extern\+0x34000
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	d?addiu	at,at,0
.*: R_MIPS_LO16	extern\+0x34000
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	at,at,v1
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	lui	at,0x0
.*: R_MIPS_HI16	extern-0x34000
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	d?addiu	at,at,0
.*: R_MIPS_LO16	extern-0x34000
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	lui	at,0x0
.*: R_MIPS_HI16	extern-0x34000
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	d?addiu	at,at,0
.*: R_MIPS_LO16	extern-0x34000
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddu	at,at,v1
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
#
# with sym32 off
#
.*	lui	a0,0x0
.*: R_MIPS_HIGHEST	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lui	at,0x0
.*: R_MIPS_HI16	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddiu	a0,a0,0
.*: R_MIPS_HIGHER	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddiu	at,at,0
.*: R_MIPS_LO16	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	dsll32	a0,a0,0x0
.*	daddu	a0,a0,at
.*	lui	a0,0x0
.*: R_MIPS_HIGHEST	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lui	at,0x0
.*: R_MIPS_HI16	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddiu	a0,a0,0
.*: R_MIPS_HIGHER	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	dsll32	a0,a0,0x0
.*	daddu	a0,a0,at
.*	lw	a0,0\(a0\)
.*: R_MIPS_LO16	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lui	at,0x0
.*: R_MIPS_HIGHEST	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddiu	at,at,0
.*: R_MIPS_HIGHER	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	dsll	at,at,0x10
.*	daddiu	at,at,0
.*: R_MIPS_HI16	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	dsll	at,at,0x10
.*	sw	a0,0\(at\)
.*: R_MIPS_LO16	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lui	at,0x0
.*: R_MIPS_HIGHEST	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddiu	at,at,0
.*: R_MIPS_HIGHER	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	dsll	at,at,0x10
.*	daddiu	at,at,0
.*: R_MIPS_HI16	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	dsll	at,at,0x10
.*	daddiu	at,at,0
.*: R_MIPS_LO16	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
#
# ...and back on again
#
.*	lui	a0,0x0
.*: R_MIPS_HI16	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddiu	a0,a0,0
.*: R_MIPS_LO16	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lui	a0,0x0
.*: R_MIPS_HI16	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lw	a0,0\(a0\)
.*: R_MIPS_LO16	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lui	at,0x0
.*: R_MIPS_HI16	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	sw	a0,0\(at\)
.*: R_MIPS_LO16	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	lui	at,0x0
.*: R_MIPS_HI16	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	daddiu	at,at,0
.*: R_MIPS_LO16	extern
.*: R_MIPS_NONE	.*
.*: R_MIPS_NONE	.*
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
#pass
@


1.2
log
@Print addend as signed in objdump

binutils/

	* objdump.c (disassemble_bytes): Print addend as signed.
	(dump_reloc_set): Likewise.

gas/testsuite/

	* gas/all/fwdexp.d: Expect addend as signed.
	* gas/alpha/elf-reloc-1.d: Likewise.
	* gas/i386/mixed-mode-reloc64.d: Likewise.
	* gas/i386/reloc64.d: Likewise.
	* gas/i386/ilp32/mixed-mode-reloc64.d: Expect addend as signed.
	* gas/i386/ilp32/reloc64.d: Likewise.
	* gas/ia64/pcrel.d: Likewise.
	* gas/mips/branch-misc-2-64.d: Likewise.
	* gas/mips/branch-misc-2pic-64.d: Likewise.
	* gas/mips/branch-misc-4-64.d: Likewise.
	* gas/mips/ldstla-n64-sym32.d: Likewise.
	* gas/mips/micromips@@branch-misc-2-64.d: Likewise.
	* gas/mips/micromips@@branch-misc-2pic-64.d: Likewise.
	* gas/mips/micromips@@branch-misc-4-64.d: Likewise.
	* gas/mips/mips16-hilo-n32.d: Likewise.
	* gas/ppc/astest.d: Likewise.
	* gas/ppc/astest2.d: Likewise.
	* gas/ppc/astest2_64.d: Likewise.
	* gas/ppc/astest64.d: Likewise.
	* gas/ppc/test1elf32.d: Likewise.
	* gas/ppc/test1elf64.d: Likewise.
	* gas/sparc/reloc64.d: Likewise.
@
text
@d2 1
a2 1
#as: -64 -msym32 -G8 -EB
@


1.2.2.1
log
@bfd/
2012-08-09  Maciej W. Rozycki  <macro@@codesourcery.com>

	* elfxx-mips.c (LA25_LUI_MICROMIPS_1, LA25_LUI_MICROMIPS_2):
	Remove macros, folding them into...
	(LA25_LUI_MICROMIPS): ... this new macro.
	(LA25_J_MICROMIPS_1, LA25_J_MICROMIPS_2): Likewise into...
	(LA25_J_MICROMIPS): ... this new macro.
	(LA25_ADDIU_MICROMIPS_1, LA25_ADDIU_MICROMIPS_2): Likewise
	into...
	(LA25_ADDIU_MICROMIPS): ... this new macro.
	(bfd_put_micromips_32, bfd_get_micromips_32): New functions.
	(mips_elf_create_la25_stub): Use them.
	(check_br32_dslot, check_br32, check_relocated_bzc): Likewise.
	(_bfd_mips_elf_relax_section): Likewise.

gas/
	* config/tc-mips.c (NO_ISA_COP, COP_INSN): Remove macros.
	(is_opcode_valid): Remove coprocessor instruction exclusions.
	Replace OPCODE_IS_MEMBER with opcode_is_member.
	(is_opcode_valid_16): Replace OPCODE_IS_MEMBER with
	opcode_is_member.
	(macro): Remove coprocessor instruction exclusions.

gas/
	* gas/mips/mips.exp: Set has_newabi for all Linux targets.
	* gas/mips/cfi-n64-1.d: Adjust for targets that do not infer the
	ISA from the ABI.
	* gas/mips/elf-rel-got-n32.d: Likewise.
	* gas/mips/elf-rel-got-n64.d: Likewise.
	* gas/mips/elf-rel-xgot-n32.d: Likewise.
	* gas/mips/elf-rel-xgot-n64.d: Likewise.
	* gas/mips/elf-rel18.d: Likewise.
	* gas/mips/elf-rel28-n32.d: Likewise.
	* gas/mips/elf-rel28-n64.d: Likewise.
	* gas/mips/jal-newabi.d: Likewise.
	* gas/mips/ldstla-n64-shared.d: Likewise.
	* gas/mips/ldstla-n64-sym32.d: Likewise.
	* gas/mips/ldstla-n64.d: Likewise.
	* gas/mips/macro-warn-1-n32.d: Likewise.
	* gas/mips/macro-warn-2-n32.d: Likewise.
	* gas/mips/n32-consec.d: Likewise.

include/
2012-08-13  Richard Sandiford  <rdsandiford@@googlemail.com>
            Maciej W. Rozycki  <macro@@codesourcery.com>

	* mips.h (mips_opcode): Add the exclusions field.
	(OPCODE_IS_MEMBER): Remove macro.
	(cpu_is_member): New inline function.
	(opcode_is_member): Likewise.

ld/
	* emulparams/elf32bmip.sh: Make _gp hidden.
	* emulparams/elf32bmipn32-defs.sh: Likewise.
	* emulparams/elf32mipswindiss.sh: Likewise.
	* scripttempl/mips.sc: Likewise.

ld/
2012-08-28  Maciej W. Rozycki  <macro@@codesourcery.com>

	* ld-elf/export-class.sd: New test.
	* ld-elf/export-class.vd: New test.
	* ld-elf/export-class-def.s: New test source.
	* ld-elf/export-class-dep.s: New test source.
	* ld-elf/export-class-lib.s: New test source.
	* ld-elf/export-class-ref.s: New test source.
	* ld-elf/export-class-lib.ver: New test version script.
	* ld-elf/export-class.exp: New test script.
	* ld-arm/arm-export-class.rd: New test.
	* ld-arm/arm-export-class.xd: New test.
	* ld-arm/export-class.exp: New test script.
	* ld-i386/i386-export-class.rd: New test.
	* ld-i386/i386-export-class.xd: New test.
	* ld-i386/export-class.exp: New test script.
	* ld-mips-elf/mips-32-export-class.rd: New test.
	* ld-mips-elf/mips-32-export-class.xd: New test.
	* ld-mips-elf/mips-64-export-class.rd: New test.
	* ld-mips-elf/mips-64-export-class.xd: New test.
	* ld-mips-elf/export-class.exp: New test script.
	* ld-powerpc/powerpc-32-export-class.rd: New test.
	* ld-powerpc/powerpc-32-export-class.xd: New test.
	* ld-powerpc/powerpc-64-export-class.rd: New test.
	* ld-powerpc/powerpc-64-export-class.xd: New test.
	* ld-powerpc/export-class.exp: New test script.
	* ld-x86-64/x86-64-64-export-class.rd: New test.
	* ld-x86-64/x86-64-x32-export-class.rd: New test.
	* ld-x86-64/export-class.exp: New test script.

opcodes/
2012-08-14  Maciej W. Rozycki  <macro@@codesourcery.com>

	* mips-dis.c (print_insn_args): Add GET_OP and GET_OP_S local
	macros, use local variables for info struct member accesses,
	update the type of the variable used to hold the instruction
	word.
	(print_insn_mips, print_mips16_insn_arg): Likewise.
	(print_insn_mips16): Add GET_OP and GET_OP_S local macros, use
	local variables for info struct member accesses.
	(print_insn_micromips): Add GET_OP_S local macro.
	(_print_insn_mips): Update the type of the variable used to hold
	the instruction word.
@
text
@d2 1
a2 1
#as: -march=from-abi -64 -msym32 -G8 -EB
@


1.1
log
@	* config/tc-mips.c (mips_set_options): Add sym32 field.
	(mips_opts): Initialize it.
	(HAVE_32BIT_ADDRESSES): Set to true if pointers are 32 bits wide.
	(HAVE_64BIT_ADDRESSES): Redefine as !HAVE_32BIT_ADDRESSES.
	(HAVE_32BIT_SYMBOLS, HAVE_64BIT_SYMBOLS): New macros.
	(load_address): Use HAVE_64BIT_SYMBOLS instead of HAVE_64BIT_ADDRESSES
	when deciding whether to use a symbolic %highest/%higher expansion.
	(macro): Likewise.  Remove o64/n32 linux hack.  Always use
	ADDRESS_ADD*_INSN for address addition in the expansion of "dla"
	and "la".  Handle constants separately from symbolic expressions in
	the "ld_st:" case, using 64-bit arithmetic if HAVE_64BIT_ADDRESSES
	and using load_register to load the high part of the address.
	(OPTION_MSYM32, OPTION_NO_MSYM32): New macros.
	(OPTION_ELF_BASE): Bump by 2.
	(md_longopts): Add entries for -msym32 and -mno-sym32.
	(md_parse_option): Handle them.
	(usage): Document them.
	(s_mipsset): Handle ".set sym32" and ".set nosym32".
	(s_cpload, s_cpsetup): Use HAVE_64BIT_SYMBOLS instead of
	HAVE_64BIT_ADDRESSES to detect 64-bit values of "_gp".
	* doc/c-mips.texi: Document ".set sym32", ".set nosym32",
	-msym32 and -mno-sym32.
@
text
@d199 1
a199 1
.*: R_MIPS_HI16	extern\+0xfffffffffffcc000
d203 1
a203 1
.*: R_MIPS_LO16	extern\+0xfffffffffffcc000
d207 1
a207 1
.*: R_MIPS_HI16	extern\+0xfffffffffffcc000
d211 1
a211 1
.*: R_MIPS_LO16	extern\+0xfffffffffffcc000
d409 1
a409 1
.*: R_MIPS_HI16	extern\+0xfffffffffffcc000
d413 1
a413 1
.*: R_MIPS_LO16	extern\+0xfffffffffffcc000
d417 1
a417 1
.*: R_MIPS_HI16	extern\+0xfffffffffffcc000
d422 1
a422 1
.*: R_MIPS_LO16	extern\+0xfffffffffffcc000
d619 1
a619 1
.*: R_MIPS_HI16	extern\+0xfffffffffffcc000
d623 1
a623 1
.*: R_MIPS_LO16	extern\+0xfffffffffffcc000
d627 1
a627 1
.*: R_MIPS_HI16	extern\+0xfffffffffffcc000
d632 1
a632 1
.*: R_MIPS_LO16	extern\+0xfffffffffffcc000
d883 1
a883 1
.*: R_MIPS_HI16	extern\+0xfffffffffffcc000
d887 1
a887 1
.*: R_MIPS_LO16	extern\+0xfffffffffffcc000
d893 1
a893 1
.*: R_MIPS_HI16	extern\+0xfffffffffffcc000
d897 1
a897 1
.*: R_MIPS_LO16	extern\+0xfffffffffffcc000
@

