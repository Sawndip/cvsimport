head	1.3;
access;
symbols
	binutils-2_24-branch:1.3.0.10
	binutils-2_24-branchpoint:1.3
	binutils-2_21_1:1.3
	binutils-2_23_2:1.3
	binutils-2_23_1:1.3
	binutils-2_23:1.3
	binutils-2_23-branch:1.3.0.8
	binutils-2_23-branchpoint:1.3
	binutils-2_22_branch:1.3.0.6
	binutils-2_22:1.3
	binutils-2_22-branch:1.3.0.4
	binutils-2_22-branchpoint:1.3
	binutils-2_21:1.3
	binutils-2_21-branch:1.3.0.2
	binutils-2_21-branchpoint:1.3
	binutils-2_20_1:1.1
	binutils-2_20:1.1
	binutils-arc-20081103-branch:1.1.0.10
	binutils-arc-20081103-branchpoint:1.1
	binutils-2_20-branch:1.1.0.8
	binutils-2_20-branchpoint:1.1
	dje-cgen-play1-branch:1.1.0.6
	dje-cgen-play1-branchpoint:1.1
	arc-20081103-branch:1.1.0.4
	arc-20081103-branchpoint:1.1
	binutils-2_19_1:1.1
	binutils-2_19:1.1
	binutils-2_19-branch:1.1.0.2
	binutils-2_19-branchpoint:1.1
	binutils_latest_snapshot:1.3;
locks; strict;
comment	@# @;


1.3
date	2010.07.05.23.55.24;	author macro;	state Exp;
branches;
next	1.2;

1.2
date	2010.07.05.23.38.01;	author macro;	state Exp;
branches;
next	1.1;

1.1
date	2008.04.28.17.10.18;	author nemet;	state Exp;
branches;
next	;


desc
@@


1.3
log
@	* gas/mips/mips4-fp.d, gas/mips/mips4-fp.s: Remove checks for
	branch-likely instructions and place them...
	* gas/mips/mips4-branch-likely.d, gas/mips/mips4-branch-likely.s:
	... in this new test.
	* gas/mips/mips4-fp.l: Update accordingly.
	* gas/mips/mips4-branch-likely.l: New stderr output for the new
	test.
	* gas/mips/mips.exp (mips4-branch-likely): Run a dump test and
	a list test with mips4-branch-likely similarly to mips4-fp.
@
text
@#objdump: -dr --prefix-addresses
#name: MIPS mips4 fp

# Test mips4 fp instructions.

.*: +file format .*mips.*

Disassembly of section \.text:
[0-9a-f]+ <[^>]*> bc1f	0+0000 <text_label>
[0-9a-f]+ <[^>]*> nop
[0-9a-f]+ <[^>]*> bc1f	\$fcc1,0+0000 <text_label>
[0-9a-f]+ <[^>]*> nop
[0-9a-f]+ <[^>]*> bc1t	\$fcc1,0+0000 <text_label>
[0-9a-f]+ <[^>]*> nop
[0-9a-f]+ <[^>]*> c.f.d	\$f4,\$f6
[0-9a-f]+ <[^>]*> c.f.d	\$fcc1,\$f4,\$f6
[0-9a-f]+ <[^>]*> ldxc1	\$f2,a0\(a1\)
[0-9a-f]+ <[^>]*> lwxc1	\$f2,a0\(a1\)
[0-9a-f]+ <[^>]*> madd.d	\$f0,\$f2,\$f4,\$f6
[0-9a-f]+ <[^>]*> madd.s	\$f10,\$f8,\$f2,\$f0
[0-9a-f]+ <[^>]*> movf	a0,a1,\$fcc4
[0-9a-f]+ <[^>]*> movf.d	\$f4,\$f6,\$fcc0
[0-9a-f]+ <[^>]*> movf.s	\$f4,\$f6,\$fcc0
[0-9a-f]+ <[^>]*> movn.d	\$f4,\$f6,a2
[0-9a-f]+ <[^>]*> movn.s	\$f4,\$f6,a2
[0-9a-f]+ <[^>]*> movt	a0,a1,\$fcc4
[0-9a-f]+ <[^>]*> movt.d	\$f4,\$f6,\$fcc0
[0-9a-f]+ <[^>]*> movt.s	\$f4,\$f6,\$fcc0
[0-9a-f]+ <[^>]*> movz.d	\$f4,\$f6,a2
[0-9a-f]+ <[^>]*> movz.s	\$f4,\$f6,a2
[0-9a-f]+ <[^>]*> msub.d	\$f0,\$f2,\$f4,\$f6
[0-9a-f]+ <[^>]*> msub.s	\$f0,\$f2,\$f4,\$f6
[0-9a-f]+ <[^>]*> nmadd.d	\$f0,\$f2,\$f4,\$f6
[0-9a-f]+ <[^>]*> nmadd.s	\$f0,\$f2,\$f4,\$f6
[0-9a-f]+ <[^>]*> nmsub.d	\$f0,\$f2,\$f4,\$f6
[0-9a-f]+ <[^>]*> nmsub.s	\$f0,\$f2,\$f4,\$f6
[0-9a-f]+ <[^>]*> prefx	0x4,a0\(a1\)
[0-9a-f]+ <[^>]*> recip.d	\$f4,\$f6
[0-9a-f]+ <[^>]*> recip.s	\$f4,\$f6
[0-9a-f]+ <[^>]*> rsqrt.d	\$f4,\$f6
[0-9a-f]+ <[^>]*> rsqrt.s	\$f4,\$f6
[0-9a-f]+ <[^>]*> sdxc1	\$f4,a0\(a1\)
[0-9a-f]+ <[^>]*> swxc1	\$f4,a0\(a1\)
	\.\.\.
@


1.2
log
@	* gas/mips/mips4-fp.d: Reformat.
@
text
@a12 2
[0-9a-f]+ <[^>]*> bc1fl	\$fcc1,0+0000 <text_label>
[0-9a-f]+ <[^>]*> nop
a14 2
[0-9a-f]+ <[^>]*> bc1tl	\$fcc2,0+0000 <text_label>
[0-9a-f]+ <[^>]*> nop
@


1.1
log
@	* gas/mips/mips4.s: Split out fp instruction from here ...
	* gas/mips/mips4-fp.s: ... to here.
	* gas/mips/mips4.d: Update.
	* gas/mips/mips4-fp.l: New file. Check error messages with
	-msoft-float.
	* gas/mips/mips4-fp.d: New file. Check disassembly with
	hard-float.

	* gas/mips/mips32r2.s: Split out fp instructions from here ...
	* gas/mips/mips32r2-fp32.s: ... to here.
	* gas/mips/mips32r2.d: Update.
	* gas/mips/mips32r2-fp32.l: New file.  Check error messages with
	-msoft-float.
	* gas/mips/mips32r2-fp32.d: New file.  Check disassembly with
	hard-float.

	* gas/mips/mips32r2-ill-nofp.s, gas/mips/mips32r2-ill-nofp.l: New
	test derived from mips32r2-ill.

	* gas/mips/mips32-sf32.l: New list test for mips32-sf32.s to check
	error messages for soft-float targets.

	* gas/mips/mips-macro-ill-sfp.s, gas/mips/mips-macro-ill-sfp.l:
	New test for -msingle-float.
	* gas/mips/mips-macro-ill-nofp.s, gas/mips/mips-macro-ill-nofp.l:
	New test for -msoft-float.
	* gas/mips/mips-hard-float-flag.s,
	gas/mips/mips-hard-float-flag.l: New test for -mhard-float.
	* gas/mips/mips-double-float-flag.s,
	gas/mips/mips-double-float-flag.l: New test for -mdouble-float.

	* gas/mips/mips.exp: Run new mips4-fp and mips32r2-fp dump tests.
	Run mips4-fp and mips32r2-fp list tests with -msoft-float.  Run
	new mips32r2-ill-nofp with -msoft-float.  Run new mips32-sf32 list
	test with -msoft-float.  Run new mips-macro-ill-sfp test with
	-msingle-float.  Run new mips-macro-ill-nofp test with
	-msoft-float.  Run new mips-hard-float-flag and
	mips-double-float-flag tests.
@
text
@d8 41
a48 41
Disassembly of section .text:
0+0000 <[^>]*> bc1f	00000000+ <text_label>
0+0004 <[^>]*> nop
0+0008 <[^>]*> bc1f	\$fcc1,00000000+ <text_label>
0+000c <[^>]*> nop
0+0010 <[^>]*> bc1fl	\$fcc1,00000000+ <text_label>
0+0014 <[^>]*> nop
0+0018 <[^>]*> bc1t	\$fcc1,00000000+ <text_label>
0+001c <[^>]*> nop
0+0020 <[^>]*> bc1tl	\$fcc2,00000000+ <text_label>
0+0024 <[^>]*> nop
0+0028 <[^>]*> c.f.d	\$f4,\$f6
0+002c <[^>]*> c.f.d	\$fcc1,\$f4,\$f6
0+0030 <[^>]*> ldxc1	\$f2,a0\(a1\)
0+0034 <[^>]*> lwxc1	\$f2,a0\(a1\)
0+0038 <[^>]*> madd.d	\$f0,\$f2,\$f4,\$f6
0+003c <[^>]*> madd.s	\$f10,\$f8,\$f2,\$f0
0+0040 <[^>]*> movf	a0,a1,\$fcc4
0+0044 <[^>]*> movf.d	\$f4,\$f6,\$fcc0
0+0048 <[^>]*> movf.s	\$f4,\$f6,\$fcc0
0+004c <[^>]*> movn.d	\$f4,\$f6,a2
0+0050 <[^>]*> movn.s	\$f4,\$f6,a2
0+0054 <[^>]*> movt	a0,a1,\$fcc4
0+0058 <[^>]*> movt.d	\$f4,\$f6,\$fcc0
0+005c <[^>]*> movt.s	\$f4,\$f6,\$fcc0
0+0060 <[^>]*> movz.d	\$f4,\$f6,a2
0+0064 <[^>]*> movz.s	\$f4,\$f6,a2
0+0068 <[^>]*> msub.d	\$f0,\$f2,\$f4,\$f6
0+006c <[^>]*> msub.s	\$f0,\$f2,\$f4,\$f6
0+0070 <[^>]*> nmadd.d	\$f0,\$f2,\$f4,\$f6
0+0074 <[^>]*> nmadd.s	\$f0,\$f2,\$f4,\$f6
0+0078 <[^>]*> nmsub.d	\$f0,\$f2,\$f4,\$f6
0+007c <[^>]*> nmsub.s	\$f0,\$f2,\$f4,\$f6
0+0080 <[^>]*> prefx	0x4,a0\(a1\)
0+0084 <[^>]*> recip.d	\$f4,\$f6
0+0088 <[^>]*> recip.s	\$f4,\$f6
0+008c <[^>]*> rsqrt.d	\$f4,\$f6
0+0090 <[^>]*> rsqrt.s	\$f4,\$f6
0+0094 <[^>]*> sdxc1	\$f4,a0\(a1\)
0+0098 <[^>]*> swxc1	\$f4,a0\(a1\)
	...
@

