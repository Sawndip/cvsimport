head	1.1;
access;
symbols
	binutils-2_24-branch:1.1.0.32
	binutils-2_24-branchpoint:1.1
	binutils-2_21_1:1.1
	binutils-2_23_2:1.1
	binutils-2_23_1:1.1
	binutils-2_23:1.1
	binutils-2_23-branch:1.1.0.30
	binutils-2_23-branchpoint:1.1
	binutils-2_22_branch:1.1.0.28
	binutils-2_22:1.1
	binutils-2_22-branch:1.1.0.26
	binutils-2_22-branchpoint:1.1
	binutils-2_21:1.1
	binutils-2_21-branch:1.1.0.24
	binutils-2_21-branchpoint:1.1
	binutils-2_20_1:1.1
	binutils-2_20:1.1
	binutils-arc-20081103-branch:1.1.0.22
	binutils-arc-20081103-branchpoint:1.1
	binutils-2_20-branch:1.1.0.20
	binutils-2_20-branchpoint:1.1
	dje-cgen-play1-branch:1.1.0.18
	dje-cgen-play1-branchpoint:1.1
	arc-20081103-branch:1.1.0.16
	arc-20081103-branchpoint:1.1
	binutils-2_19_1:1.1
	binutils-2_19:1.1
	binutils-2_19-branch:1.1.0.14
	binutils-2_19-branchpoint:1.1
	binutils-2_18:1.1
	binutils-2_18-branch:1.1.0.12
	binutils-2_18-branchpoint:1.1
	binutils-csl-coldfire-4_1-32:1.1
	binutils-csl-sourcerygxx-4_1-32:1.1
	binutils-csl-innovasic-fido-3_4_4-33:1.1
	binutils-csl-sourcerygxx-3_4_4-32:1.1
	binutils-csl-coldfire-4_1-30:1.1
	binutils-csl-sourcerygxx-4_1-30:1.1
	binutils-csl-coldfire-4_1-28:1.1
	binutils-csl-sourcerygxx-4_1-29:1.1
	binutils-csl-sourcerygxx-4_1-28:1.1
	binutils-csl-arm-2006q3-27:1.1
	binutils-csl-sourcerygxx-4_1-27:1.1
	binutils-csl-arm-2006q3-26:1.1
	binutils-csl-sourcerygxx-4_1-26:1.1
	binutils-csl-sourcerygxx-4_1-25:1.1
	binutils-csl-sourcerygxx-4_1-24:1.1
	binutils-csl-sourcerygxx-4_1-23:1.1
	binutils-csl-sourcerygxx-4_1-21:1.1
	binutils-csl-arm-2006q3-21:1.1
	binutils-csl-sourcerygxx-4_1-22:1.1
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.1
	binutils-csl-sourcerygxx-4_1-20:1.1
	binutils-csl-arm-2006q3-19:1.1
	binutils-csl-sourcerygxx-4_1-19:1.1
	binutils-csl-sourcerygxx-4_1-18:1.1
	binutils-csl-renesas-4_1-9:1.1
	binutils-csl-sourcerygxx-3_4_4-25:1.1
	binutils-csl-renesas-4_1-8:1.1
	binutils-csl-renesas-4_1-7:1.1
	binutils-csl-renesas-4_1-6:1.1
	binutils-csl-sourcerygxx-4_1-17:1.1
	binutils-csl-sourcerygxx-4_1-14:1.1
	binutils-csl-sourcerygxx-4_1-15:1.1
	binutils-csl-sourcerygxx-4_1-13:1.1
	binutils-2_17:1.1
	binutils-csl-sourcerygxx-4_1-12:1.1
	binutils-csl-sourcerygxx-3_4_4-21:1.1
	binutils-csl-wrs-linux-3_4_4-24:1.1
	binutils-csl-wrs-linux-3_4_4-23:1.1
	binutils-csl-sourcerygxx-4_1-9:1.1
	binutils-csl-sourcerygxx-4_1-8:1.1
	binutils-csl-sourcerygxx-4_1-7:1.1
	binutils-csl-arm-2006q1-6:1.1
	binutils-csl-sourcerygxx-4_1-6:1.1
	binutils-csl-wrs-linux-3_4_4-22:1.1
	binutils-csl-coldfire-4_1-11:1.1
	binutils-csl-sourcerygxx-3_4_4-19:1.1
	binutils-csl-coldfire-4_1-10:1.1
	binutils-csl-sourcerygxx-4_1-5:1.1
	binutils-csl-sourcerygxx-4_1-4:1.1
	binutils-csl-wrs-linux-3_4_4-21:1.1
	binutils-csl-morpho-4_1-4:1.1
	binutils-csl-sourcerygxx-3_4_4-17:1.1
	binutils-csl-wrs-linux-3_4_4-20:1.1
	binutils-2_17-branch:1.1.0.10
	binutils-2_17-branchpoint:1.1
	binutils-csl-2_17-branch:1.1.0.8
	binutils-csl-2_17-branchpoint:1.1
	binutils-csl-gxxpro-3_4-branch:1.1.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.1
	binutils-2_16_1:1.1
	binutils-csl-arm-2005q1b:1.1
	binutils-2_16:1.1
	binutils-csl-arm-2005q1a:1.1
	binutils-csl-arm-2005q1-branch:1.1.0.4
	binutils-csl-arm-2005q1-branchpoint:1.1
	binutils-2_16-branch:1.1.0.2
	binutils-2_16-branchpoint:1.1
	binutils_latest_snapshot:1.1;
locks; strict;
comment	@# @;


1.1
date	2005.03.04.09.51.11;	author rsandifo;	state Exp;
branches;
next	;


desc
@@


1.1
log
@	* config/tc-mips.c (mips_set_options): Add sym32 field.
	(mips_opts): Initialize it.
	(HAVE_32BIT_ADDRESSES): Set to true if pointers are 32 bits wide.
	(HAVE_64BIT_ADDRESSES): Redefine as !HAVE_32BIT_ADDRESSES.
	(HAVE_32BIT_SYMBOLS, HAVE_64BIT_SYMBOLS): New macros.
	(load_address): Use HAVE_64BIT_SYMBOLS instead of HAVE_64BIT_ADDRESSES
	when deciding whether to use a symbolic %highest/%higher expansion.
	(macro): Likewise.  Remove o64/n32 linux hack.  Always use
	ADDRESS_ADD*_INSN for address addition in the expansion of "dla"
	and "la".  Handle constants separately from symbolic expressions in
	the "ld_st:" case, using 64-bit arithmetic if HAVE_64BIT_ADDRESSES
	and using load_register to load the high part of the address.
	(OPTION_MSYM32, OPTION_NO_MSYM32): New macros.
	(OPTION_ELF_BASE): Bump by 2.
	(md_longopts): Add entries for -msym32 and -mno-sym32.
	(md_parse_option): Handle them.
	(usage): Document them.
	(s_mipsset): Handle ".set sym32" and ".set nosym32".
	(s_cpload, s_cpsetup): Use HAVE_64BIT_SYMBOLS instead of
	HAVE_64BIT_ADDRESSES to detect 64-bit values of "_gp".
	* doc/c-mips.texi: Document ".set sym32", ".set nosym32",
	-msym32 and -mno-sym32.
@
text
@#objdump: -dr
#as: -mabi=eabi -mips3 -G8 -EB
#name: MIPS ld-st-la (EABI64)
#source: ldstla-sym32.s

.*file format .*

Disassembly .*:

0+00 <.*>:
#
# dla constants
#
.*	li	a0,0xa800
.*	dsll32	a0,a0,0x10
.*	li	a0,0xa800
.*	dsll32	a0,a0,0x10
.*	daddu	a0,a0,v1
.*	lui	a0,0x8000
.*	lui	a0,0x8000
.*	daddu	a0,a0,v1
.*	lui	a0,0x7fff
.*	ori	a0,a0,0x7ff8
.*	lui	a0,0x7fff
.*	ori	a0,a0,0x7ff8
.*	daddu	a0,a0,v1
.*	lui	a0,0x7fff
.*	ori	a0,a0,0xfff8
.*	lui	a0,0x7fff
.*	ori	a0,a0,0xfff8
.*	daddu	a0,a0,v1
.*	lui	a0,0x1234
.*	ori	a0,a0,0x5678
.*	dsll	a0,a0,0x10
.*	ori	a0,a0,0x9abc
.*	dsll	a0,a0,0x10
.*	ori	a0,a0,0xdef0
.*	lui	a0,0x1234
.*	ori	a0,a0,0x5678
.*	dsll	a0,a0,0x10
.*	ori	a0,a0,0x9abc
.*	dsll	a0,a0,0x10
.*	ori	a0,a0,0xdef0
.*	daddu	a0,a0,v1
#
# dla small_comm
#
.*	daddiu	a0,gp,0
.*: R_MIPS_GPREL16	small_comm
.*	daddiu	a0,gp,0
.*: R_MIPS_GPREL16	small_comm
.*	daddu	a0,a0,v1
.*	daddiu	a0,gp,3
.*: R_MIPS_GPREL16	small_comm
.*	daddiu	a0,gp,3
.*: R_MIPS_GPREL16	small_comm
.*	daddu	a0,a0,v1
#
# dla big_comm
#
.*	lui	a0,0x0
.*: R_MIPS_HI16	big_comm
.*	d?addiu	a0,a0,0
.*: R_MIPS_LO16	big_comm
.*	lui	a0,0x0
.*: R_MIPS_HI16	big_comm
.*	d?addiu	a0,a0,0
.*: R_MIPS_LO16	big_comm
.*	daddu	a0,a0,v1
.*	lui	a0,0x0
.*: R_MIPS_HI16	big_comm
.*	d?addiu	a0,a0,3
.*: R_MIPS_LO16	big_comm
.*	lui	a0,0x0
.*: R_MIPS_HI16	big_comm
.*	d?addiu	a0,a0,3
.*: R_MIPS_LO16	big_comm
.*	daddu	a0,a0,v1
#
# dla small_data
#
.*	daddiu	a0,gp,0
.*: R_MIPS_GPREL16	small_data
.*	daddiu	a0,gp,0
.*: R_MIPS_GPREL16	small_data
.*	daddu	a0,a0,v1
.*	daddiu	a0,gp,3
.*: R_MIPS_GPREL16	small_data
.*	daddiu	a0,gp,3
.*: R_MIPS_GPREL16	small_data
.*	daddu	a0,a0,v1
#
# dla big_data
#
.*	lui	a0,0x0
.*: R_MIPS_HI16	big_data
.*	d?addiu	a0,a0,0
.*: R_MIPS_LO16	big_data
.*	lui	a0,0x0
.*: R_MIPS_HI16	big_data
.*	d?addiu	a0,a0,0
.*: R_MIPS_LO16	big_data
.*	daddu	a0,a0,v1
.*	lui	a0,0x0
.*: R_MIPS_HI16	big_data
.*	d?addiu	a0,a0,3
.*: R_MIPS_LO16	big_data
.*	lui	a0,0x0
.*: R_MIPS_HI16	big_data
.*	d?addiu	a0,a0,3
.*: R_MIPS_LO16	big_data
.*	daddu	a0,a0,v1
#
# dla extern
#
.*	lui	a0,0x0
.*: R_MIPS_HI16	extern
.*	d?addiu	a0,a0,0
.*: R_MIPS_LO16	extern
.*	lui	a0,0x0
.*: R_MIPS_HI16	extern
.*	d?addiu	a0,a0,0
.*: R_MIPS_LO16	extern
.*	daddu	a0,a0,v1
.*	lui	a0,0x3
.*: R_MIPS_HI16	extern
.*	d?addiu	a0,a0,16384
.*: R_MIPS_LO16	extern
.*	lui	a0,0x3
.*: R_MIPS_HI16	extern
.*	d?addiu	a0,a0,16384
.*: R_MIPS_LO16	extern
.*	daddu	a0,a0,v1
.*	lui	a0,0xfffd
.*: R_MIPS_HI16	extern
.*	d?addiu	a0,a0,-16384
.*: R_MIPS_LO16	extern
.*	lui	a0,0xfffd
.*: R_MIPS_HI16	extern
.*	d?addiu	a0,a0,-16384
.*: R_MIPS_LO16	extern
.*	daddu	a0,a0,v1
#
# lw constants
#
.*	li	a0,0xa800
.*	dsll32	a0,a0,0x10
.*	lw	a0,0\(a0\)
.*	li	a0,0xa800
.*	dsll32	a0,a0,0x10
.*	daddu	a0,a0,v1
.*	lw	a0,0\(a0\)
.*	lui	a0,0x8000
.*	lw	a0,0\(a0\)
.*	lui	a0,0x8000
.*	daddu	a0,a0,v1
.*	lw	a0,0\(a0\)
.*	lui	a0,0x7fff
.*	lw	a0,32760\(a0\)
.*	lui	a0,0x7fff
.*	daddu	a0,a0,v1
.*	lw	a0,32760\(a0\)
.*	li	a0,0x8000
.*	dsll	a0,a0,0x10
.*	lw	a0,-8\(a0\)
.*	li	a0,0x8000
.*	dsll	a0,a0,0x10
.*	daddu	a0,a0,v1
.*	lw	a0,-8\(a0\)
.*	lui	a0,0x1234
.*	ori	a0,a0,0x5678
.*	dsll	a0,a0,0x10
.*	ori	a0,a0,0x9abd
.*	dsll	a0,a0,0x10
.*	lw	a0,-8464\(a0\)
.*	lui	a0,0x1234
.*	ori	a0,a0,0x5678
.*	dsll	a0,a0,0x10
.*	ori	a0,a0,0x9abd
.*	dsll	a0,a0,0x10
.*	daddu	a0,a0,v1
.*	lw	a0,-8464\(a0\)
#
# lw small_comm
#
.*	lw	a0,0\(gp\)
.*: R_MIPS_GPREL16	small_comm
.*	daddu	a0,v1,gp
.*	lw	a0,0\(a0\)
.*: R_MIPS_GPREL16	small_comm
.*	lw	a0,3\(gp\)
.*: R_MIPS_GPREL16	small_comm
.*	daddu	a0,v1,gp
.*	lw	a0,3\(a0\)
.*: R_MIPS_GPREL16	small_comm
#
# lw big_comm
#
.*	lui	a0,0x0
.*: R_MIPS_HI16	big_comm
.*	lw	a0,0\(a0\)
.*: R_MIPS_LO16	big_comm
.*	lui	a0,0x0
.*: R_MIPS_HI16	big_comm
.*	daddu	a0,a0,v1
.*	lw	a0,0\(a0\)
.*: R_MIPS_LO16	big_comm
.*	lui	a0,0x0
.*: R_MIPS_HI16	big_comm
.*	lw	a0,3\(a0\)
.*: R_MIPS_LO16	big_comm
.*	lui	a0,0x0
.*: R_MIPS_HI16	big_comm
.*	daddu	a0,a0,v1
.*	lw	a0,3\(a0\)
.*: R_MIPS_LO16	big_comm
#
# lw small_data
#
.*	lw	a0,0\(gp\)
.*: R_MIPS_GPREL16	small_data
.*	daddu	a0,v1,gp
.*	lw	a0,0\(a0\)
.*: R_MIPS_GPREL16	small_data
.*	lw	a0,3\(gp\)
.*: R_MIPS_GPREL16	small_data
.*	daddu	a0,v1,gp
.*	lw	a0,3\(a0\)
.*: R_MIPS_GPREL16	small_data
#
# lw big_data
#
.*	lui	a0,0x0
.*: R_MIPS_HI16	big_data
.*	lw	a0,0\(a0\)
.*: R_MIPS_LO16	big_data
.*	lui	a0,0x0
.*: R_MIPS_HI16	big_data
.*	daddu	a0,a0,v1
.*	lw	a0,0\(a0\)
.*: R_MIPS_LO16	big_data
.*	lui	a0,0x0
.*: R_MIPS_HI16	big_data
.*	lw	a0,3\(a0\)
.*: R_MIPS_LO16	big_data
.*	lui	a0,0x0
.*: R_MIPS_HI16	big_data
.*	daddu	a0,a0,v1
.*	lw	a0,3\(a0\)
.*: R_MIPS_LO16	big_data
#
# lw extern
#
.*	lui	a0,0x0
.*: R_MIPS_HI16	extern
.*	lw	a0,0\(a0\)
.*: R_MIPS_LO16	extern
.*	lui	a0,0x0
.*: R_MIPS_HI16	extern
.*	daddu	a0,a0,v1
.*	lw	a0,0\(a0\)
.*: R_MIPS_LO16	extern
.*	lui	a0,0x3
.*: R_MIPS_HI16	extern
.*	lw	a0,16384\(a0\)
.*: R_MIPS_LO16	extern
.*	lui	a0,0x3
.*: R_MIPS_HI16	extern
.*	daddu	a0,a0,v1
.*	lw	a0,16384\(a0\)
.*: R_MIPS_LO16	extern
.*	lui	a0,0xfffd
.*: R_MIPS_HI16	extern
.*	lw	a0,-16384\(a0\)
.*: R_MIPS_LO16	extern
.*	lui	a0,0xfffd
.*: R_MIPS_HI16	extern
.*	daddu	a0,a0,v1
.*	lw	a0,-16384\(a0\)
.*: R_MIPS_LO16	extern
#
# sw constants
#
.*	li	at,0xa800
.*	dsll32	at,at,0x10
.*	sw	a0,0\(at\)
.*	li	at,0xa800
.*	dsll32	at,at,0x10
.*	daddu	at,at,v1
.*	sw	a0,0\(at\)
.*	lui	at,0x8000
.*	sw	a0,0\(at\)
.*	lui	at,0x8000
.*	daddu	at,at,v1
.*	sw	a0,0\(at\)
.*	lui	at,0x7fff
.*	sw	a0,32760\(at\)
.*	lui	at,0x7fff
.*	daddu	at,at,v1
.*	sw	a0,32760\(at\)
.*	li	at,0x8000
.*	dsll	at,at,0x10
.*	sw	a0,-8\(at\)
.*	li	at,0x8000
.*	dsll	at,at,0x10
.*	daddu	at,at,v1
.*	sw	a0,-8\(at\)
.*	lui	at,0x1234
.*	ori	at,at,0x5678
.*	dsll	at,at,0x10
.*	ori	at,at,0x9abd
.*	dsll	at,at,0x10
.*	sw	a0,-8464\(at\)
.*	lui	at,0x1234
.*	ori	at,at,0x5678
.*	dsll	at,at,0x10
.*	ori	at,at,0x9abd
.*	dsll	at,at,0x10
.*	daddu	at,at,v1
.*	sw	a0,-8464\(at\)
#
# sw small_comm
#
.*	sw	a0,0\(gp\)
.*: R_MIPS_GPREL16	small_comm
.*	daddu	at,v1,gp
.*	sw	a0,0\(at\)
.*: R_MIPS_GPREL16	small_comm
.*	sw	a0,3\(gp\)
.*: R_MIPS_GPREL16	small_comm
.*	daddu	at,v1,gp
.*	sw	a0,3\(at\)
.*: R_MIPS_GPREL16	small_comm
#
# sw big_comm
#
.*	lui	at,0x0
.*: R_MIPS_HI16	big_comm
.*	sw	a0,0\(at\)
.*: R_MIPS_LO16	big_comm
.*	lui	at,0x0
.*: R_MIPS_HI16	big_comm
.*	daddu	at,at,v1
.*	sw	a0,0\(at\)
.*: R_MIPS_LO16	big_comm
.*	lui	at,0x0
.*: R_MIPS_HI16	big_comm
.*	sw	a0,3\(at\)
.*: R_MIPS_LO16	big_comm
.*	lui	at,0x0
.*: R_MIPS_HI16	big_comm
.*	daddu	at,at,v1
.*	sw	a0,3\(at\)
.*: R_MIPS_LO16	big_comm
#
# sw small_data
#
.*	sw	a0,0\(gp\)
.*: R_MIPS_GPREL16	small_data
.*	daddu	at,v1,gp
.*	sw	a0,0\(at\)
.*: R_MIPS_GPREL16	small_data
.*	sw	a0,3\(gp\)
.*: R_MIPS_GPREL16	small_data
.*	daddu	at,v1,gp
.*	sw	a0,3\(at\)
.*: R_MIPS_GPREL16	small_data
#
# sw big_data
#
.*	lui	at,0x0
.*: R_MIPS_HI16	big_data
.*	sw	a0,0\(at\)
.*: R_MIPS_LO16	big_data
.*	lui	at,0x0
.*: R_MIPS_HI16	big_data
.*	daddu	at,at,v1
.*	sw	a0,0\(at\)
.*: R_MIPS_LO16	big_data
.*	lui	at,0x0
.*: R_MIPS_HI16	big_data
.*	sw	a0,3\(at\)
.*: R_MIPS_LO16	big_data
.*	lui	at,0x0
.*: R_MIPS_HI16	big_data
.*	daddu	at,at,v1
.*	sw	a0,3\(at\)
.*: R_MIPS_LO16	big_data
#
# sw extern
#
.*	lui	at,0x0
.*: R_MIPS_HI16	extern
.*	sw	a0,0\(at\)
.*: R_MIPS_LO16	extern
.*	lui	at,0x0
.*: R_MIPS_HI16	extern
.*	daddu	at,at,v1
.*	sw	a0,0\(at\)
.*: R_MIPS_LO16	extern
.*	lui	at,0x3
.*: R_MIPS_HI16	extern
.*	sw	a0,16384\(at\)
.*: R_MIPS_LO16	extern
.*	lui	at,0x3
.*: R_MIPS_HI16	extern
.*	daddu	at,at,v1
.*	sw	a0,16384\(at\)
.*: R_MIPS_LO16	extern
.*	lui	at,0xfffd
.*: R_MIPS_HI16	extern
.*	sw	a0,-16384\(at\)
.*: R_MIPS_LO16	extern
.*	lui	at,0xfffd
.*: R_MIPS_HI16	extern
.*	daddu	at,at,v1
.*	sw	a0,-16384\(at\)
.*: R_MIPS_LO16	extern
#
# usw constants
#
.*	li	at,0xa800
.*	dsll32	at,at,0x10
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	li	at,0xa800
.*	dsll32	at,at,0x10
.*	daddu	at,at,v1
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	lui	at,0x8000
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	lui	at,0x8000
.*	daddu	at,at,v1
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	lui	at,0x7fff
.*	ori	at,at,0x7ff8
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	lui	at,0x7fff
.*	ori	at,at,0x7ff8
.*	daddu	at,at,v1
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	lui	at,0x7fff
.*	ori	at,at,0xfff8
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	lui	at,0x7fff
.*	ori	at,at,0xfff8
.*	daddu	at,at,v1
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	lui	at,0x1234
.*	ori	at,at,0x5678
.*	dsll	at,at,0x10
.*	ori	at,at,0x9abc
.*	dsll	at,at,0x10
.*	ori	at,at,0xdef0
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	lui	at,0x1234
.*	ori	at,at,0x5678
.*	dsll	at,at,0x10
.*	ori	at,at,0x9abc
.*	dsll	at,at,0x10
.*	ori	at,at,0xdef0
.*	daddu	at,at,v1
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
#
# usw small_comm
#
.*	daddiu	at,gp,0
.*: R_MIPS_GPREL16	small_comm
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	daddiu	at,gp,0
.*: R_MIPS_GPREL16	small_comm
.*	daddu	at,at,v1
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	daddiu	at,gp,3
.*: R_MIPS_GPREL16	small_comm
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	daddiu	at,gp,3
.*: R_MIPS_GPREL16	small_comm
.*	daddu	at,at,v1
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
#
# usw big_comm
#
.*	lui	at,0x0
.*: R_MIPS_HI16	big_comm
.*	d?addiu	at,at,0
.*: R_MIPS_LO16	big_comm
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	lui	at,0x0
.*: R_MIPS_HI16	big_comm
.*	d?addiu	at,at,0
.*: R_MIPS_LO16	big_comm
.*	daddu	at,at,v1
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	lui	at,0x0
.*: R_MIPS_HI16	big_comm
.*	d?addiu	at,at,3
.*: R_MIPS_LO16	big_comm
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	lui	at,0x0
.*: R_MIPS_HI16	big_comm
.*	d?addiu	at,at,3
.*: R_MIPS_LO16	big_comm
.*	daddu	at,at,v1
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
#
# usw small_data
#
.*	daddiu	at,gp,0
.*: R_MIPS_GPREL16	small_data
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	daddiu	at,gp,0
.*: R_MIPS_GPREL16	small_data
.*	daddu	at,at,v1
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	daddiu	at,gp,3
.*: R_MIPS_GPREL16	small_data
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	daddiu	at,gp,3
.*: R_MIPS_GPREL16	small_data
.*	daddu	at,at,v1
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
#
# usw big_data
#
.*	lui	at,0x0
.*: R_MIPS_HI16	big_data
.*	d?addiu	at,at,0
.*: R_MIPS_LO16	big_data
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	lui	at,0x0
.*: R_MIPS_HI16	big_data
.*	d?addiu	at,at,0
.*: R_MIPS_LO16	big_data
.*	daddu	at,at,v1
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	lui	at,0x0
.*: R_MIPS_HI16	big_data
.*	d?addiu	at,at,3
.*: R_MIPS_LO16	big_data
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	lui	at,0x0
.*: R_MIPS_HI16	big_data
.*	d?addiu	at,at,3
.*: R_MIPS_LO16	big_data
.*	daddu	at,at,v1
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
#
# usw extern
#
.*	lui	at,0x0
.*: R_MIPS_HI16	extern
.*	d?addiu	at,at,0
.*: R_MIPS_LO16	extern
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	lui	at,0x0
.*: R_MIPS_HI16	extern
.*	d?addiu	at,at,0
.*: R_MIPS_LO16	extern
.*	daddu	at,at,v1
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	lui	at,0x3
.*: R_MIPS_HI16	extern
.*	d?addiu	at,at,16384
.*: R_MIPS_LO16	extern
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	lui	at,0x3
.*: R_MIPS_HI16	extern
.*	d?addiu	at,at,16384
.*: R_MIPS_LO16	extern
.*	daddu	at,at,v1
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	lui	at,0xfffd
.*: R_MIPS_HI16	extern
.*	d?addiu	at,at,-16384
.*: R_MIPS_LO16	extern
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
.*	lui	at,0xfffd
.*: R_MIPS_HI16	extern
.*	d?addiu	at,at,-16384
.*: R_MIPS_LO16	extern
.*	daddu	at,at,v1
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
#
# with sym32 off (has no effect for EABI64)
#
.*	lui	a0,0x0
.*: R_MIPS_HI16	extern
.*	daddiu	a0,a0,0
.*: R_MIPS_LO16	extern
.*	lui	a0,0x0
.*: R_MIPS_HI16	extern
.*	lw	a0,0\(a0\)
.*: R_MIPS_LO16	extern
.*	lui	at,0x0
.*: R_MIPS_HI16	extern
.*	sw	a0,0\(at\)
.*: R_MIPS_LO16	extern
.*	lui	at,0x0
.*: R_MIPS_HI16	extern
.*	daddiu	at,at,0
.*: R_MIPS_LO16	extern
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
#
# ...and back on again
#
.*	lui	a0,0x0
.*: R_MIPS_HI16	extern
.*	daddiu	a0,a0,0
.*: R_MIPS_LO16	extern
.*	lui	a0,0x0
.*: R_MIPS_HI16	extern
.*	lw	a0,0\(a0\)
.*: R_MIPS_LO16	extern
.*	lui	at,0x0
.*: R_MIPS_HI16	extern
.*	sw	a0,0\(at\)
.*: R_MIPS_LO16	extern
.*	lui	at,0x0
.*: R_MIPS_HI16	extern
.*	daddiu	at,at,0
.*: R_MIPS_LO16	extern
.*	swl	a0,0\(at\)
.*	swr	a0,3\(at\)
#pass
@
