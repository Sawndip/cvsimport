head	1.5;
access;
symbols
	binutils-2_24-branch:1.5.0.32
	binutils-2_24-branchpoint:1.5
	binutils-2_21_1:1.5
	binutils-2_23_2:1.5
	binutils-2_23_1:1.5
	binutils-2_23:1.5
	binutils-2_23-branch:1.5.0.30
	binutils-2_23-branchpoint:1.5
	binutils-2_22_branch:1.5.0.28
	binutils-2_22:1.5
	binutils-2_22-branch:1.5.0.26
	binutils-2_22-branchpoint:1.5
	binutils-2_21:1.5
	binutils-2_21-branch:1.5.0.24
	binutils-2_21-branchpoint:1.5
	binutils-2_20_1:1.5
	binutils-2_20:1.5
	binutils-arc-20081103-branch:1.5.0.22
	binutils-arc-20081103-branchpoint:1.5
	binutils-2_20-branch:1.5.0.20
	binutils-2_20-branchpoint:1.5
	dje-cgen-play1-branch:1.5.0.18
	dje-cgen-play1-branchpoint:1.5
	arc-20081103-branch:1.5.0.16
	arc-20081103-branchpoint:1.5
	binutils-2_19_1:1.5
	binutils-2_19:1.5
	binutils-2_19-branch:1.5.0.14
	binutils-2_19-branchpoint:1.5
	binutils-2_18:1.5
	binutils-2_18-branch:1.5.0.12
	binutils-2_18-branchpoint:1.5
	binutils-csl-coldfire-4_1-32:1.5
	binutils-csl-sourcerygxx-4_1-32:1.5
	binutils-csl-innovasic-fido-3_4_4-33:1.5
	binutils-csl-sourcerygxx-3_4_4-32:1.5
	binutils-csl-coldfire-4_1-30:1.5
	binutils-csl-sourcerygxx-4_1-30:1.5
	binutils-csl-coldfire-4_1-28:1.5
	binutils-csl-sourcerygxx-4_1-29:1.5
	binutils-csl-sourcerygxx-4_1-28:1.5
	binutils-csl-arm-2006q3-27:1.5
	binutils-csl-sourcerygxx-4_1-27:1.5
	binutils-csl-arm-2006q3-26:1.5
	binutils-csl-sourcerygxx-4_1-26:1.5
	binutils-csl-sourcerygxx-4_1-25:1.5
	binutils-csl-sourcerygxx-4_1-24:1.5
	binutils-csl-sourcerygxx-4_1-23:1.5
	binutils-csl-sourcerygxx-4_1-21:1.5
	binutils-csl-arm-2006q3-21:1.5
	binutils-csl-sourcerygxx-4_1-22:1.5
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.5
	binutils-csl-sourcerygxx-4_1-20:1.5
	binutils-csl-arm-2006q3-19:1.5
	binutils-csl-sourcerygxx-4_1-19:1.5
	binutils-csl-sourcerygxx-4_1-18:1.5
	binutils-csl-renesas-4_1-9:1.5
	binutils-csl-sourcerygxx-3_4_4-25:1.5
	binutils-csl-renesas-4_1-8:1.5
	binutils-csl-renesas-4_1-7:1.5
	binutils-csl-renesas-4_1-6:1.5
	binutils-csl-sourcerygxx-4_1-17:1.5
	binutils-csl-sourcerygxx-4_1-14:1.5
	binutils-csl-sourcerygxx-4_1-15:1.5
	binutils-csl-sourcerygxx-4_1-13:1.5
	binutils-2_17:1.5
	binutils-csl-sourcerygxx-4_1-12:1.5
	binutils-csl-sourcerygxx-3_4_4-21:1.5
	binutils-csl-wrs-linux-3_4_4-24:1.5
	binutils-csl-wrs-linux-3_4_4-23:1.5
	binutils-csl-sourcerygxx-4_1-9:1.5
	binutils-csl-sourcerygxx-4_1-8:1.5
	binutils-csl-sourcerygxx-4_1-7:1.5
	binutils-csl-arm-2006q1-6:1.5
	binutils-csl-sourcerygxx-4_1-6:1.5
	binutils-csl-wrs-linux-3_4_4-22:1.5
	binutils-csl-coldfire-4_1-11:1.5
	binutils-csl-sourcerygxx-3_4_4-19:1.5
	binutils-csl-coldfire-4_1-10:1.5
	binutils-csl-sourcerygxx-4_1-5:1.5
	binutils-csl-sourcerygxx-4_1-4:1.5
	binutils-csl-wrs-linux-3_4_4-21:1.5
	binutils-csl-morpho-4_1-4:1.5
	binutils-csl-sourcerygxx-3_4_4-17:1.5
	binutils-csl-wrs-linux-3_4_4-20:1.5
	binutils-2_17-branch:1.5.0.10
	binutils-2_17-branchpoint:1.5
	binutils-csl-2_17-branch:1.5.0.8
	binutils-csl-2_17-branchpoint:1.5
	binutils-csl-gxxpro-3_4-branch:1.5.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.5
	binutils-2_16_1:1.5
	binutils-csl-arm-2005q1b:1.5
	binutils-2_16:1.5
	binutils-csl-arm-2005q1a:1.5
	binutils-csl-arm-2005q1-branch:1.5.0.4
	binutils-csl-arm-2005q1-branchpoint:1.5
	binutils-2_16-branch:1.5.0.2
	binutils-2_16-branchpoint:1.5
	csl-arm-2004-q3d:1.4
	csl-arm-2004-q3:1.4
	binutils-2_15:1.4
	binutils-2_15-branchpoint:1.4
	csl-arm-2004-q1a:1.4
	csl-arm-2004-q1:1.4
	binutils-2_15-branch:1.4.0.8
	cagney_bfdfile-20040213-branch:1.4.0.6
	cagney_bfdfile-20040213-branchpoint:1.4
	cagney_bigcore-20040122-branch:1.4.0.4
	cagney_bigcore-20040122-branchpoint:1.4
	csl-arm-2003-q4:1.4
	binutils-2_14:1.4
	binutils-2_14-branch:1.4.0.2
	binutils-2_14-branchpoint:1.4
	binutils-2_13_2_1:1.1.2.1
	binutils-2_13_2:1.1.2.1
	binutils-2_13_1:1.1.2.1
	binutils-2_13:1.1
	binutils-2_13-branchpoint:1.1
	binutils-2_13-branch:1.1.0.2
	binutils_latest_snapshot:1.5;
locks; strict;
comment	@# @;


1.5
date	2005.02.18.22.12.53;	author ths;	state Exp;
branches;
next	1.4;

1.4
date	2002.12.27.23.51.49;	author cgd;	state Exp;
branches;
next	1.3;

1.3
date	2002.12.18.22.52.48;	author cgd;	state Exp;
branches;
next	1.2;

1.2
date	2002.08.20.08.28.35;	author rsandifo;	state Exp;
branches;
next	1.1;

1.1
date	2002.05.21.23.54.45;	author ths;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2002.09.23.22.13.39;	author drow;	state Exp;
branches;
next	;


desc
@@


1.5
log
@	/gas/ChangeLog
	* config/tc-mips.c (macro_build_ldst_constoffset): Fail on $at
	uses after .set noat.
	(load_address): Likewise.
	(macro): Likewise. Don't try to avoid $at use by sacrificing
	the target register before it is stored, it won't work.

	/gas/testsuite/ChangeLog
	* gas/mips/noat-1.s, gas/mips/noat-1.d, gas/mips/noat-2.s,
	gas/mips/noat2.l, gas/mips/noat-3.s, gas/mips/noat-3.l,
	gas/mips/noat-4.s, gas/mips/noat-4.l, gas/mips/noat-5.s,
	gas/mips/noat-5.l, gas/mips/noat-6.s, gas/mips/noat-6.l,
	gas/mips/noat-7.s, gas/mips/noat-7.l: New files, testcases for
	.set noat in macro expansions.
	* gas/mips/mips.exp: Run new testcases.
	* gas/mips/rol-hw.d, gas/mips/rol-hw.l, gas/mips/rol.d,
	gas/mips/rol.l, gas/mips/rol.s, gas/mips/rol64-hw.d,
	gas/mips/rol64-hw.l, gas/mips/rol64.d, gas/mips/rol64.l,
	gas/mips/rol64.s, gas/mips/uld2-eb.d, gas/mips/uld2-el.d,
	gas/mips/uld2.l, gas/mips/uld2.s, gas/mips/ulh2-eb.d,
	gas/mips/ulh2-el.d, gas/mips/ulh2.l, gas/mips/ulh2.s,
	gas/mips/ulw2-eb-ilocks.d, gas/mips/ulw2-eb.d,
	gas/mips/ulw2-el-ilocks.d, gas/mips/ulw2-el.d, gas/mips/ulw2.l,
	gas/mips/ulw2.s: Don't try to test .set noat.
@
text
@#objdump: -dr --prefix-addresses
#name: MIPS macro drol/dror

# Test the drol and dror macros.

.*: +file format .*mips.*

Disassembly of section .text:
0+0000 <[^>]*> dnegu	at,a1
0+0004 <[^>]*> dsrlv	at,a0,at
0+0008 <[^>]*> dsllv	a0,a0,a1
0+000c <[^>]*> or	a0,a0,at
0+0010 <[^>]*> dnegu	at,a2
0+0014 <[^>]*> dsrlv	at,a1,at
0+0018 <[^>]*> dsllv	a0,a1,a2
0+001c <[^>]*> or	a0,a0,at
0+0020 <[^>]*> dsll	at,a0,0x1
0+0024 <[^>]*> dsrl32	a0,a0,0x1f
0+0028 <[^>]*> or	a0,a0,at
0+002c <[^>]*> dsrl	a0,a1,0x0
0+0030 <[^>]*> dsll	at,a1,0x1
0+0034 <[^>]*> dsrl32	a0,a1,0x1f
0+0038 <[^>]*> or	a0,a0,at
0+003c <[^>]*> dsll	at,a1,0x1f
0+0040 <[^>]*> dsrl32	a0,a1,0x1
0+0044 <[^>]*> or	a0,a0,at
0+0048 <[^>]*> dsll32	at,a1,0x0
0+004c <[^>]*> dsrl32	a0,a1,0x0
0+0050 <[^>]*> or	a0,a0,at
0+0054 <[^>]*> dsll32	at,a1,0x1
0+0058 <[^>]*> dsrl	a0,a1,0x1f
0+005c <[^>]*> or	a0,a0,at
0+0060 <[^>]*> dsll32	at,a1,0x1f
0+0064 <[^>]*> dsrl	a0,a1,0x1
0+0068 <[^>]*> or	a0,a0,at
0+006c <[^>]*> dsrl	a0,a1,0x0
0+0070 <[^>]*> dnegu	at,a1
0+0074 <[^>]*> dsllv	at,a0,at
0+0078 <[^>]*> dsrlv	a0,a0,a1
0+007c <[^>]*> or	a0,a0,at
0+0080 <[^>]*> dnegu	at,a2
0+0084 <[^>]*> dsllv	at,a1,at
0+0088 <[^>]*> dsrlv	a0,a1,a2
0+008c <[^>]*> or	a0,a0,at
0+0090 <[^>]*> dsrl	at,a0,0x1
0+0094 <[^>]*> dsll32	a0,a0,0x1f
0+0098 <[^>]*> or	a0,a0,at
0+009c <[^>]*> dsrl	a0,a1,0x0
0+00a0 <[^>]*> dsrl	at,a1,0x1
0+00a4 <[^>]*> dsll32	a0,a1,0x1f
0+00a8 <[^>]*> or	a0,a0,at
0+00ac <[^>]*> dsrl	at,a1,0x1f
0+00b0 <[^>]*> dsll32	a0,a1,0x1
0+00b4 <[^>]*> or	a0,a0,at
0+00b8 <[^>]*> dsrl32	at,a1,0x0
0+00bc <[^>]*> dsll32	a0,a1,0x0
0+00c0 <[^>]*> or	a0,a0,at
0+00c4 <[^>]*> dsrl32	at,a1,0x1
0+00c8 <[^>]*> dsll	a0,a1,0x1f
0+00cc <[^>]*> or	a0,a0,at
0+00d0 <[^>]*> dsrl32	at,a1,0x1f
0+00d4 <[^>]*> dsll	a0,a1,0x1
0+00d8 <[^>]*> or	a0,a0,at
0+00dc <[^>]*> dsrl	a0,a1,0x0
0+00e0 <[^>]*> dsll	at,a1,0x1
0+00e4 <[^>]*> dsrl32	a0,a1,0x1f
0+00e8 <[^>]*> or	a0,a0,at
0+00ec <[^>]*> dsll	at,a1,0x1f
0+00f0 <[^>]*> dsrl32	a0,a1,0x1
0+00f4 <[^>]*> or	a0,a0,at
0+00f8 <[^>]*> dsll32	at,a1,0x0
0+00fc <[^>]*> dsrl32	a0,a1,0x0
0+0100 <[^>]*> or	a0,a0,at
0+0104 <[^>]*> dsll32	at,a1,0x1
0+0108 <[^>]*> dsrl	a0,a1,0x1f
0+010c <[^>]*> or	a0,a0,at
0+0110 <[^>]*> dsll32	at,a1,0x1f
0+0114 <[^>]*> dsrl	a0,a1,0x1
0+0118 <[^>]*> or	a0,a0,at
0+011c <[^>]*> dsrl	at,a1,0x1
0+0120 <[^>]*> dsll32	a0,a1,0x1f
0+0124 <[^>]*> or	a0,a0,at
0+0128 <[^>]*> dsrl	at,a1,0x1f
0+012c <[^>]*> dsll32	a0,a1,0x1
0+0130 <[^>]*> or	a0,a0,at
0+0134 <[^>]*> dsrl32	at,a1,0x0
0+0138 <[^>]*> dsll32	a0,a1,0x0
0+013c <[^>]*> or	a0,a0,at
0+0140 <[^>]*> dsrl32	at,a1,0x1
0+0144 <[^>]*> dsll	a0,a1,0x1f
0+0148 <[^>]*> or	a0,a0,at
0+014c <[^>]*> dsrl32	at,a1,0x1f
0+0150 <[^>]*> dsll	a0,a1,0x1
0+0154 <[^>]*> or	a0,a0,at
	...
@


1.4
log
@2002-12-27  Chris Demetriou  <cgd@@broadcom.com>

        * gas/mips/mips.exp: Define the notion of an "architecture data
        array," add comments indicating how to add a new architecture and
        suggestions for adding new tests.  Populate the architecture data
        array with many known architectures and convert many tests to
        be run for multiple architectures.
        (mips_arches): New global array.
        (mips_arch_create, mips_arch_list_all, mips_arch_data)
        (mips_arch_displayname, mips_arch_properties)
        (mips_arch_as_flags, mips_arch_objdump_flags, mips_arch_matches)
        (mips_arch_list_matching): New functions to operate on mips_arches.
        (run_dump_test_arch, run_dump_test_arches, run_list_test_arch)
        (run_list_test_arches): New functions.
        (run_list_test): Document and add an optional "test name" argument.
        * gas/mips/abs.d: Remove CPU-specific assembler and objdump flags,
        and CPU names from test names.
        * gas/mips/add.d: Likewise.
        * gas/mips/and.d: Likewise.
        * gas/mips/dli.d: Likewise.
        * gas/mips/jal-empic-elf-2.d: Likewise.
        * gas/mips/jal-empic-elf-3.d: Likewise.
        * gas/mips/jal-empic-elf.d: Likewise.
        * gas/mips/lb-svr4pic.d: Likewise.
        * gas/mips/lb.d: Likewise.
        * gas/mips/mips32.d: Likewise.
        * gas/mips/mips4.d: Likewise.
        * gas/mips/mips64.d: Likewise.
        * gas/mips/rol-hw.d: Likewise.
        * gas/mips/rol.d: Likewise.
        * gas/mips/rol64-hw.d: Likewise.
        * gas/mips/rol64.d: Likewise.
        * gas/mips/elf-jal.d: Likewise.  Also, indicate ELF in test name.
        * gas/mips/mips64-mdmx.d: Tweak printed name to indicate that this
        test uses the -mdmx flag.
        * gas/mips/mips64-mips3d.d: Tweak printed name to indicate that
        this test uses the -mips3d flag.
        * gas/mips/mips64-mips3d-incl.d: New file.
@
text
@a2 1
#stderr: rol64.l
@


1.3
log
@[ opcodes/ChangeLog ]
2002-12-18  Chris Demetriou  <cgd@@broadcom.com>

	* mips-opc.c (mips_builtin_opcodes): Remove one "ror" and two
	"dror" entries, and reorder the remaining "dror" and "ror" entries.

[ gas/ChangeLog ]
2002-12-18  Chris Demetriou  <cgd@@broadcom.com>

	* config/tc-mips.c (macro): In M_DROL, M_DROR, M_ROL, and M_ROR,
	use hardware rotate ops as appropriate.  In M_DROL_I, M_DROR_I,
	M_ROL_I, and M_ROR_I, simplify code, clean up warnings, and
	arrange not to issue warnings about use of AT when AT is not
	actually used.

[ gas/testsuite/ChangeLog ]
2002-12-18  Chris Demetriou  <cgd@@broadcom.com>

	* gas/mips/rol.s: Add ".set noat" and some new instructions to test.
	* gas/mips/rol64.s: Likewise.
	* gas/mips/rol.l: New file.
	* gas/mips/rol.d: Adjust to use rol.l and for rol.s changes.
	* gas/mips/rol64.l: New file.
	* gas/mips/rol64.d: Adjust to use rol64.l and for rol64.s changes.
	* gas/mips/rol-hw.d: New file.
	* gas/mips/rol-hw.l: New file.
	* gas/mips/rol64-hw.d: New file.
	* gas/mips/rol64-hw.l: New file.
	* gas/mips/mips.exp: Run rol-hw and rol64-hw tests.
@
text
@d1 2
a2 3
#objdump: -dr --prefix-addresses -mmips:4000
#as: -march=r4000 -mtune=r4000
#name: MIPS macro drol (r4000)
@


1.2
log
@[gas/]
	* config/tc-mips.c (macro2): Implement rotates by zero using shifts
        by zero.

[gas/testsuite]
	* gas/mips/rol.s: Add rotate by zero tests.
	* gas/mips/rol.d: Update accordingly.
	* gas/mips/rol64.d: Expect rotates by zero to use dsrl.
@
text
@d3 2
a4 1
#name: MIPS R4000 drol
d67 30
@


1.1
log
@? gas/testsuite/gas/mips/rol64.d
? gas/testsuite/gas/mips/rol64.s
Index: gas/ChangeLog
===================================================================
RCS file: /cvs/src/src/gas/ChangeLog,v
retrieving revision 1.1334
diff -u -p -r1.1334 ChangeLog
--- gas/ChangeLog	21 May 2002 20:01:51 -0000	1.1334
+++ gas/ChangeLog	21 May 2002 23:32:51 -0000
@@@@ -1,3 +1,8 @@@@
+2002-05-22  Thiemo Seufer <seufer@@csv.ica.uni-stuttgart.de>
+
+	* config/tc-mips.c (macro2): Add 64 bit drol, dror macros.
+	Optimize the rotate by zero case.
+
 2002-05-21  Nick Clifton  <nickc@@cambridge.redhat.com>

 	* configure.in: Remove accidental enabling of bfd_gas=yes for
Index: gas/config/tc-mips.c
===================================================================
RCS file: /cvs/src/src/gas/config/tc-mips.c,v
retrieving revision 1.123
diff -u -p -r1.123 tc-mips.c
--- gas/config/tc-mips.c	14 May 2002 23:35:59 -0000	1.123
+++ gas/config/tc-mips.c	21 May 2002 23:32:52 -0000
@@@@ -6686,6 +6686,17 @@@@ macro2 (ip)
       --mips_opts.noreorder;
       break;

+    case M_DROL:
+      macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "dsubu",
+		   "d,v,t", AT, 0, treg);
+      macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "dsrlv",
+		   "d,t,s", AT, sreg, AT);
+      macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "dsllv",
+		   "d,t,s", dreg, sreg, treg);
+      macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "or",
+		   "d,v,t", dreg, dreg, AT);
+      break;
+
     case M_ROL:
       macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "subu",
 		   "d,v,t", AT, 0, treg);
@@@@ -6697,15 +6708,55 @@@@ macro2 (ip)
 		   "d,v,t", dreg, dreg, AT);
       break;

+    case M_DROL_I:
+      {
+	unsigned int rot;
+	char *l, *r;
+
+	if (imm_expr.X_op != O_constant)
+	  as_bad (_("rotate count too large"));
+	rot = imm_expr.X_add_number & 0x3f;
+	if (! rot)
+	  break;
+	l = (rot < 0x20) ? "dsll" : "dsll32";
+	r = ((0x40 - rot) < 0x20) ? "dsrl" : "dsrl32";
+	rot &= 0x1f;
+	macro_build ((char *) NULL, &icnt, (expressionS *) NULL, l,
+		     "d,w,<", AT, sreg, rot);
+	macro_build ((char *) NULL, &icnt, (expressionS *) NULL, r,
+		     "d,w,<", dreg, sreg, (0x20 - rot) & 0x1f);
+	macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "or",
+		     "d,v,t", dreg, dreg, AT);
+      }
+      break;
+
     case M_ROL_I:
-      if (imm_expr.X_op != O_constant)
-	as_bad (_("rotate count too large"));
-      macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "sll", "d,w,<",
-		   AT, sreg, (int) (imm_expr.X_add_number & 0x1f));
-      macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "srl", "d,w,<",
-		   dreg, sreg, (int) ((0 - imm_expr.X_add_number) & 0x1f));
-      macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "or", "d,v,t",
-		   dreg, dreg, AT);
+      {
+	unsigned int rot;
+
+	if (imm_expr.X_op != O_constant)
+	  as_bad (_("rotate count too large"));
+	rot = imm_expr.X_add_number & 0x1f;
+	if (! rot)
+	  break;
+	macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "sll",
+		     "d,w,<", AT, sreg, rot);
+	macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "srl",
+		     "d,w,<", dreg, sreg, (0x20 - rot) & 0x1f);
+	macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "or",
+		     "d,v,t", dreg, dreg, AT);
+      }
+      break;
+
+    case M_DROR:
+      macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "dsubu",
+		   "d,v,t", AT, 0, treg);
+      macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "dsllv",
+		   "d,t,s", AT, sreg, AT);
+      macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "dsrlv",
+		   "d,t,s", dreg, sreg, treg);
+      macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "or",
+		   "d,v,t", dreg, dreg, AT);
       break;

     case M_ROR:
@@@@ -6719,15 +6770,44 @@@@ macro2 (ip)
 		   "d,v,t", dreg, dreg, AT);
       break;

+    case M_DROR_I:
+      {
+	unsigned int rot;
+	char *l, *r;
+
+	if (imm_expr.X_op != O_constant)
+	  as_bad (_("rotate count too large"));
+	rot = imm_expr.X_add_number & 0x3f;
+	if (! rot)
+	  break;
+	r = (rot < 0x20) ? "dsrl" : "dsrl32";
+	l = ((0x40 - rot) < 0x20) ? "dsll" : "dsll32";
+	rot &= 0x1f;
+	macro_build ((char *) NULL, &icnt, (expressionS *) NULL, r,
+		     "d,w,<", AT, sreg, rot);
+	macro_build ((char *) NULL, &icnt, (expressionS *) NULL, l,
+		     "d,w,<", dreg, sreg, (0x20 - rot) & 0x1f);
+	macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "or",
+		     "d,v,t", dreg, dreg, AT);
+      }
+      break;
+
     case M_ROR_I:
-      if (imm_expr.X_op != O_constant)
-	as_bad (_("rotate count too large"));
-      macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "srl", "d,w,<",
-		   AT, sreg, (int) (imm_expr.X_add_number & 0x1f));
-      macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "sll", "d,w,<",
-		   dreg, sreg, (int) ((0 - imm_expr.X_add_number) & 0x1f));
-      macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "or", "d,v,t",
-		   dreg, dreg, AT);
+      {
+	unsigned int rot;
+
+	if (imm_expr.X_op != O_constant)
+	  as_bad (_("rotate count too large"));
+	rot = imm_expr.X_add_number & 0x1f;
+	if (! rot)
+	  break;
+	macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "srl",
+		     "d,w,<", AT, sreg, rot);
+	macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "sll",
+		     "d,w,<", dreg, sreg, (0x20 - rot) & 0x1f);
+	macro_build ((char *) NULL, &icnt, (expressionS *) NULL, "or",
+		     "d,v,t", dreg, dreg, AT);
+      }
       break;

     case M_S_DOB:
Index: gas/testsuite/ChangeLog
===================================================================
RCS file: /cvs/src/src/gas/testsuite/ChangeLog,v
retrieving revision 1.315
diff -u -p -r1.315 ChangeLog
--- gas/testsuite/ChangeLog	20 May 2002 17:05:34 -0000	1.315
+++ gas/testsuite/ChangeLog	21 May 2002 23:32:54 -0000
@@@@ -1,3 +1,9 @@@@
+2002-05-22  Thiemo Seufer <seufer@@csv.ica.uni-stuttgart.de>
+
+	* gas/mips/rol64.s: New file, test of drol, dror macros.
+	* gas/mips/rol64.d: Likewise.
+	* gas/mips/mips.exp: Add new test.
+
 2002-05-20  Nick Clifton  <nickc@@cambridge.redhat.com>

 	* gas/arm/arm.exp: Replace deprecated command line switches
Index: gas/testsuite/gas/mips/mips.exp
===================================================================
RCS file: /cvs/src/src/gas/testsuite/gas/mips/mips.exp,v
retrieving revision 1.32
diff -u -p -r1.32 mips.exp
--- gas/testsuite/gas/mips/mips.exp	4 Apr 2002 08:23:30 -0000	1.32
+++ gas/testsuite/gas/mips/mips.exp	21 May 2002 23:32:54 -0000
@@@@ -122,6 +122,7 @@@@ if { [istarget mips*-*-*] } then {
 	run_dump_test "mul"
     }
     run_dump_test "rol"
+    run_dump_test "rol64"
     if !$aout { run_dump_test "sb" }
     run_dump_test "trunc"
     if !$aout { run_dump_test "ulh" }
Index: include/opcode/ChangeLog
===================================================================
RCS file: /cvs/src/src/include/opcode/ChangeLog,v
retrieving revision 1.167
diff -u -p -r1.167 ChangeLog
--- include/opcode/ChangeLog	17 May 2002 19:01:03 -0000	1.167
+++ include/opcode/ChangeLog	21 May 2002 23:32:57 -0000
@@@@ -1,3 +1,7 @@@@
+2002-05-22  Thiemo Seufer <seufer@@csv.ica.uni-stuttgart.de>
+
+	* mips.h: Add M_DROL, M_DROL_I, M_DROR, M_DROR_I macro cases.
+
 2002-05-17  Andrey Volkov  <avolkov@@sources.redhat.com>

         * h8300.h: Corrected defs of all control regs
Index: include/opcode/mips.h
===================================================================
RCS file: /cvs/src/src/include/opcode/mips.h,v
retrieving revision 1.24
diff -u -p -r1.24 mips.h
--- include/opcode/mips.h	16 Mar 2002 03:09:18 -0000	1.24
+++ include/opcode/mips.h	21 May 2002 23:32:57 -0000
@@@@ -526,9 +526,13 @@@@ enum
   M_REM_3I,
   M_REMU_3,
   M_REMU_3I,
+  M_DROL,
   M_ROL,
+  M_DROL_I,
   M_ROL_I,
+  M_DROR,
   M_ROR,
+  M_DROR_I,
   M_ROR_I,
   M_S_DA,
   M_S_DOB,
Index: opcodes/ChangeLog
===================================================================
RCS file: /cvs/src/src/opcodes/ChangeLog,v
retrieving revision 1.447
diff -u -p -r1.447 ChangeLog
--- opcodes/ChangeLog	17 May 2002 14:36:45 -0000	1.447
+++ opcodes/ChangeLog	21 May 2002 23:33:00 -0000
@@@@ -1,3 +1,7 @@@@
+2002-05-22  Thiemo Seufer <seufer@@csv.ica.uni-stuttgart.de>
+
+	* mips-opc.c (mips_builtin_opcodes): Add drol, dror macros.
+
 Fri May 17 14:26:44 2002  J"orn Rennecke <joern.rennecke@@superh.com>

 	* disassemble.c (disassembler): Just use print_insn_sh for bfd_arch_sh.
Index: opcodes/mips-opc.c
===================================================================
RCS file: /cvs/src/src/opcodes/mips-opc.c,v
retrieving revision 1.32
diff -u -p -r1.32 mips-opc.c
--- opcodes/mips-opc.c	17 Mar 2002 02:42:25 -0000	1.32
+++ opcodes/mips-opc.c	21 May 2002 23:33:00 -0000
@@@@ -492,6 +492,10 @@@@ const struct mips_opcode mips_builtin_op
 {"dremu",   "z,s,t",    0x0000001f, 0xfc00ffff, RD_s|RD_t|WR_HILO,      I3      },
 {"dremu",   "d,v,t",	3,    (int) M_DREMU_3,	INSN_MACRO,		I3	},
 {"dremu",   "d,v,I",	3,    (int) M_DREMU_3I,	INSN_MACRO,		I3	},
+{"drol",    "d,v,t",	0,    (int) M_DROL,	INSN_MACRO,		I3	},
+{"drol",    "d,v,I",	0,    (int) M_DROL_I,	INSN_MACRO,		I3	},
+{"dror",    "d,v,t",	0,    (int) M_DROR,	INSN_MACRO,		I3	},
+{"dror",    "d,v,I",	0,    (int) M_DROR_I,	INSN_MACRO,		I3	},
 {"dsllv",   "d,t,s",	0x00000014, 0xfc0007ff,	WR_d|RD_t|RD_s,		I3	},
 {"dsll32",  "d,w,<",	0x0000003c, 0xffe0003f, WR_d|RD_t,		I3	},
 {"dsll",    "d,w,s",	0x00000014, 0xfc0007ff,	WR_d|RD_t|RD_s,		I3	}, /* dsllv */
@
text
@d21 31
a51 31
0+002c <[^>]*> dsll	at,a1,0x1
0+0030 <[^>]*> dsrl32	a0,a1,0x1f
0+0034 <[^>]*> or	a0,a0,at
0+0038 <[^>]*> dsll	at,a1,0x1f
0+003c <[^>]*> dsrl32	a0,a1,0x1
0+0040 <[^>]*> or	a0,a0,at
0+0044 <[^>]*> dsll32	at,a1,0x0
0+0048 <[^>]*> dsrl32	a0,a1,0x0
0+004c <[^>]*> or	a0,a0,at
0+0050 <[^>]*> dsll32	at,a1,0x1
0+0054 <[^>]*> dsrl	a0,a1,0x1f
0+0058 <[^>]*> or	a0,a0,at
0+005c <[^>]*> dsll32	at,a1,0x1f
0+0060 <[^>]*> dsrl	a0,a1,0x1
0+0064 <[^>]*> or	a0,a0,at
0+0068 <[^>]*> dnegu	at,a1
0+006c <[^>]*> dsllv	at,a0,at
0+0070 <[^>]*> dsrlv	a0,a0,a1
0+0074 <[^>]*> or	a0,a0,at
0+0078 <[^>]*> dnegu	at,a2
0+007c <[^>]*> dsllv	at,a1,at
0+0080 <[^>]*> dsrlv	a0,a1,a2
0+0084 <[^>]*> or	a0,a0,at
0+0088 <[^>]*> dsrl	at,a0,0x1
0+008c <[^>]*> dsll32	a0,a0,0x1f
0+0090 <[^>]*> or	a0,a0,at
0+0094 <[^>]*> dsrl	at,a1,0x1
0+0098 <[^>]*> dsll32	a0,a1,0x1f
0+009c <[^>]*> or	a0,a0,at
0+00a0 <[^>]*> dsrl	at,a1,0x1f
0+00a4 <[^>]*> dsll32	a0,a1,0x1
d53 2
a54 2
0+00ac <[^>]*> dsrl32	at,a1,0x0
0+00b0 <[^>]*> dsll32	a0,a1,0x0
d56 2
a57 2
0+00b8 <[^>]*> dsrl32	at,a1,0x1
0+00bc <[^>]*> dsll	a0,a1,0x1f
d59 2
a60 2
0+00c4 <[^>]*> dsrl32	at,a1,0x1f
0+00c8 <[^>]*> dsll	a0,a1,0x1
d62 4
@


1.1.2.1
log
@2002-09-23  Daniel Jacobowitz  <drow@@mvista.com>

	Merge from mainline:
	2002-09-19  Jakub Jelinek  <jakub@@redhat.com>
	* gas/i386/tlspic.s: Add tests.
	* gas/i386/tlspic.d: Regenerated.
	* gas/i386/tlsnopic.s: Add tests.
	* gas/i386/tlsnopic.d: Regenerated.

	2002-09-16  Chris Demetriou  <cgd@@broadcom.com>
	* gas/mips/mips-abi32-pic2.s: New file.
	* gas/mips/mips-abi32-pic2.d: New file.
	* gas/mips/mips.exp: Run new test.

	2002-08-20  Richard Sandiford  <rsandifo@@redhat.com>
	* gas/mips/rol.s: Add rotate by zero tests.
	* gas/mips/rol.d: Update accordingly.
	* gas/mips/rol64.d: Expect rotates by zero to use dsrl.

	2002-08-13  Stephen Clarke <stephen.clarke@@superh.com>
	* gas/sh/sh64/datal32-3.d: Formatting change to match the current
	output of objdump.

	2002-08-12  Richard Sandiford  <rsandifo@@redhat.com>
	* gas/mips/elf-consthilo.[sd]: New test.
	* gas/mips/mips.exp: Run it.

	2002-08-06  Alan Modra  <amodra@@bigpond.net.au>
	* gas/ppc/altivec_xcoff64.d: Adjust for aix5 target.
	* gas/ppc/booke_xcoff64.d: Likewise.  Also fix relocs.

	2002-08-03  Jakub Jelinek  <jakub@@redhat.com>
	* testsuite/gas/i386/gotpc.s: New.
	* testsuite/gas/i386/gotpc.d: New.
	* testsuite/gas/i386/i386.exp: Add gotpc test.
@
text
@d21 31
a51 31
0+002c <[^>]*> dsrl	a0,a1,0x0
0+0030 <[^>]*> dsll	at,a1,0x1
0+0034 <[^>]*> dsrl32	a0,a1,0x1f
0+0038 <[^>]*> or	a0,a0,at
0+003c <[^>]*> dsll	at,a1,0x1f
0+0040 <[^>]*> dsrl32	a0,a1,0x1
0+0044 <[^>]*> or	a0,a0,at
0+0048 <[^>]*> dsll32	at,a1,0x0
0+004c <[^>]*> dsrl32	a0,a1,0x0
0+0050 <[^>]*> or	a0,a0,at
0+0054 <[^>]*> dsll32	at,a1,0x1
0+0058 <[^>]*> dsrl	a0,a1,0x1f
0+005c <[^>]*> or	a0,a0,at
0+0060 <[^>]*> dsll32	at,a1,0x1f
0+0064 <[^>]*> dsrl	a0,a1,0x1
0+0068 <[^>]*> or	a0,a0,at
0+006c <[^>]*> dsrl	a0,a1,0x0
0+0070 <[^>]*> dnegu	at,a1
0+0074 <[^>]*> dsllv	at,a0,at
0+0078 <[^>]*> dsrlv	a0,a0,a1
0+007c <[^>]*> or	a0,a0,at
0+0080 <[^>]*> dnegu	at,a2
0+0084 <[^>]*> dsllv	at,a1,at
0+0088 <[^>]*> dsrlv	a0,a1,a2
0+008c <[^>]*> or	a0,a0,at
0+0090 <[^>]*> dsrl	at,a0,0x1
0+0094 <[^>]*> dsll32	a0,a0,0x1f
0+0098 <[^>]*> or	a0,a0,at
0+009c <[^>]*> dsrl	a0,a1,0x0
0+00a0 <[^>]*> dsrl	at,a1,0x1
0+00a4 <[^>]*> dsll32	a0,a1,0x1f
d53 2
a54 2
0+00ac <[^>]*> dsrl	at,a1,0x1f
0+00b0 <[^>]*> dsll32	a0,a1,0x1
d56 2
a57 2
0+00b8 <[^>]*> dsrl32	at,a1,0x0
0+00bc <[^>]*> dsll32	a0,a1,0x0
d59 2
a60 2
0+00c4 <[^>]*> dsrl32	at,a1,0x1
0+00c8 <[^>]*> dsll	a0,a1,0x1f
a61 4
0+00d0 <[^>]*> dsrl32	at,a1,0x1f
0+00d4 <[^>]*> dsll	a0,a1,0x1
0+00d8 <[^>]*> or	a0,a0,at
0+00dc <[^>]*> dsrl	a0,a1,0x0
@


