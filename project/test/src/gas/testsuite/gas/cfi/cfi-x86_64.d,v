head	1.17;
access;
symbols
	binutils-2_24-branch:1.17.0.2
	binutils-2_24-branchpoint:1.17
	binutils-2_21_1:1.14
	binutils-2_23_2:1.15
	binutils-2_23_1:1.15
	binutils-2_23:1.15
	binutils-2_23-branch:1.15.0.6
	binutils-2_23-branchpoint:1.15
	binutils-2_22_branch:1.15.0.4
	binutils-2_22:1.15
	binutils-2_22-branch:1.15.0.2
	binutils-2_22-branchpoint:1.15
	binutils-2_21:1.14
	binutils-2_21-branch:1.14.0.2
	binutils-2_21-branchpoint:1.14
	binutils-2_20_1:1.13
	binutils-2_20:1.13
	binutils-arc-20081103-branch:1.13.0.8
	binutils-arc-20081103-branchpoint:1.13
	binutils-2_20-branch:1.13.0.6
	binutils-2_20-branchpoint:1.13
	dje-cgen-play1-branch:1.13.0.4
	dje-cgen-play1-branchpoint:1.13
	arc-20081103-branch:1.13.0.2
	arc-20081103-branchpoint:1.13
	binutils-2_19_1:1.12
	binutils-2_19:1.12
	binutils-2_19-branch:1.12.0.2
	binutils-2_19-branchpoint:1.12
	binutils-2_18:1.8
	binutils-2_18-branch:1.8.0.2
	binutils-2_18-branchpoint:1.8
	binutils-csl-coldfire-4_1-32:1.7
	binutils-csl-sourcerygxx-4_1-32:1.7
	binutils-csl-innovasic-fido-3_4_4-33:1.7
	binutils-csl-sourcerygxx-3_4_4-32:1.7
	binutils-csl-coldfire-4_1-30:1.7
	binutils-csl-sourcerygxx-4_1-30:1.7
	binutils-csl-coldfire-4_1-28:1.7
	binutils-csl-sourcerygxx-4_1-29:1.7
	binutils-csl-sourcerygxx-4_1-28:1.7
	binutils-csl-arm-2006q3-27:1.7
	binutils-csl-sourcerygxx-4_1-27:1.7
	binutils-csl-arm-2006q3-26:1.7
	binutils-csl-sourcerygxx-4_1-26:1.7
	binutils-csl-sourcerygxx-4_1-25:1.7
	binutils-csl-sourcerygxx-4_1-24:1.7
	binutils-csl-sourcerygxx-4_1-23:1.7
	binutils-csl-sourcerygxx-4_1-21:1.7
	binutils-csl-arm-2006q3-21:1.7
	binutils-csl-sourcerygxx-4_1-22:1.7
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.7
	binutils-csl-sourcerygxx-4_1-20:1.7
	binutils-csl-arm-2006q3-19:1.7
	binutils-csl-sourcerygxx-4_1-19:1.7
	binutils-csl-sourcerygxx-4_1-18:1.7
	binutils-csl-renesas-4_1-9:1.7
	binutils-csl-sourcerygxx-3_4_4-25:1.7
	binutils-csl-renesas-4_1-8:1.7
	binutils-csl-renesas-4_1-7:1.7
	binutils-csl-renesas-4_1-6:1.7
	binutils-csl-sourcerygxx-4_1-17:1.7
	binutils-csl-sourcerygxx-4_1-14:1.7
	binutils-csl-sourcerygxx-4_1-15:1.7
	binutils-csl-sourcerygxx-4_1-13:1.7
	binutils-2_17:1.7
	binutils-csl-sourcerygxx-4_1-12:1.7
	binutils-csl-sourcerygxx-3_4_4-21:1.7
	binutils-csl-wrs-linux-3_4_4-24:1.7
	binutils-csl-wrs-linux-3_4_4-23:1.7
	binutils-csl-sourcerygxx-4_1-9:1.7
	binutils-csl-sourcerygxx-4_1-8:1.7
	binutils-csl-sourcerygxx-4_1-7:1.7
	binutils-csl-arm-2006q1-6:1.7
	binutils-csl-sourcerygxx-4_1-6:1.7
	binutils-csl-wrs-linux-3_4_4-22:1.7
	binutils-csl-coldfire-4_1-11:1.7
	binutils-csl-sourcerygxx-3_4_4-19:1.7
	binutils-csl-coldfire-4_1-10:1.7
	binutils-csl-sourcerygxx-4_1-5:1.7
	binutils-csl-sourcerygxx-4_1-4:1.7
	binutils-csl-wrs-linux-3_4_4-21:1.7
	binutils-csl-morpho-4_1-4:1.7
	binutils-csl-sourcerygxx-3_4_4-17:1.7
	binutils-csl-wrs-linux-3_4_4-20:1.7
	binutils-2_17-branch:1.7.0.10
	binutils-2_17-branchpoint:1.7
	binutils-csl-2_17-branch:1.7.0.8
	binutils-csl-2_17-branchpoint:1.7
	binutils-csl-gxxpro-3_4-branch:1.7.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.7
	binutils-2_16_1:1.7
	binutils-csl-arm-2005q1b:1.7
	binutils-2_16:1.7
	binutils-csl-arm-2005q1a:1.7
	binutils-csl-arm-2005q1-branch:1.7.0.4
	binutils-csl-arm-2005q1-branchpoint:1.7
	binutils-2_16-branch:1.7.0.2
	binutils-2_16-branchpoint:1.7
	csl-arm-2004-q3d:1.7
	csl-arm-2004-q3:1.7
	binutils-2_15:1.4.6.1
	binutils-2_15-branchpoint:1.4
	csl-arm-2004-q1a:1.5
	csl-arm-2004-q1:1.5
	binutils-2_15-branch:1.4.0.6
	cagney_bfdfile-20040213-branch:1.4.0.4
	cagney_bfdfile-20040213-branchpoint:1.4
	cagney_bigcore-20040122-branch:1.4.0.2
	cagney_bigcore-20040122-branchpoint:1.4
	csl-arm-2003-q4:1.4
	binutils_latest_snapshot:1.17;
locks; strict;
comment	@# @;


1.17
date	2013.09.12.09.14.47;	author nickc;	state Exp;
branches;
next	1.16;

1.16
date	2013.07.26.17.20.21;	author hjl;	state Exp;
branches;
next	1.15;

1.15
date	2011.02.10.17.06.44;	author ktietz;	state Exp;
branches;
next	1.14;

1.14
date	2010.09.02.22.43.46;	author rth;	state Exp;
branches;
next	1.13;

1.13
date	2008.10.06.16.27.34;	author nickc;	state Exp;
branches;
next	1.12;

1.12
date	2008.08.01.14.21.29;	author hjl;	state Exp;
branches;
next	1.11;

1.11
date	2008.04.03.14.03.18;	author hjl;	state Exp;
branches;
next	1.10;

1.10
date	2008.02.13.10.14.39;	author jbeulich;	state Exp;
branches;
next	1.9;

1.9
date	2008.01.28.15.15.31;	author hjl;	state Exp;
branches;
next	1.8;

1.8
date	2007.05.17.17.27.26;	author hjl;	state Exp;
branches;
next	1.7;

1.7
date	2004.08.16.00.09.20;	author amodra;	state Exp;
branches;
next	1.6;

1.6
date	2004.07.21.18.18.03;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	2004.03.07.10.04.42;	author aj;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.18.17.58.48;	author jakub;	state Exp;
branches
	1.4.6.1;
next	1.3;

1.3
date	2003.05.27.16.52.49;	author rth;	state Exp;
branches;
next	1.2;

1.2
date	2003.05.20.14.31.44;	author mludvig;	state Exp;
branches;
next	1.1;

1.1
date	2003.05.20.08.01.19;	author amodra;	state Exp;
branches;
next	;

1.4.6.1
date	2004.04.09.18.28.14;	author drow;	state Exp;
branches;
next	;


desc
@@


1.17
log
@	* dwarf.c (dwarf_vmatoa): Rename to dwarf_vmatoa_1 and add a
	precision parameter.
	(dwarf_vmatoa): New wrapper for dwarf_vmatoa_1.
	(print_dwarf_vma): Use dwarf_vmatoa_1.
	(SAFE_BYTE_GET): Add check that VAL is big enough to contain
	AMOUNT bytes.
	(process_debug_info): Use an unsigned int for the offset size.
	(process_debug_pubnames): Likewise.
	(display_debug_aranges): Likewise.
	(struct Frame_Chunk): Use dwarf_vma type for pc_begin and pc_range
	fields.
	(frame_display_row): Use print_dwarf_vma to display dwarf_vma
	values.
	(display_debug_frames): Likewise.

	* binutils-all/x86-64/compressed-1a.d: Update expected output to
	allow for 64-bit addresses.

	* ld-elf/eh1.d: Update expected output to allow for
	64-bit addresses.
	* ld-elf/eh2.d: Likewise.
	* ld-elf/eh3.d: Likewise.
	* ld-elf/eh4.d: Likewise.
	* ld-elf/eh5.d: Likewise.
	* ld-elf/eh6.d: Likewise.
	* ld-mips-elf/eh-frame1-n64.d: Likewise.
	* ld-mips-elf/eh-frame2-n64.d: Likewise.
	* ld-mips-elf/eh-frame3.d: Likewise.

	* gas/cfi/cfi-alpha-1.d: Update expected output to allow for
	64-bit addresses.
	* gas/cfi/cfi-alpha-3.d: Likewise.
	* gas/cfi/cfi-arm-1.d: Likewise.
	* gas/cfi/cfi-common-1.d: Likewise.
	* gas/cfi/cfi-common-2.d: Likewise.
	* gas/cfi/cfi-common-3.d: Likewise.
	* gas/cfi/cfi-common-4.d: Likewise.
	* gas/cfi/cfi-common-5.d: Likewise.
	* gas/cfi/cfi-common-6.d: Likewise.
	* gas/cfi/cfi-common-7.d: Likewise.
	* gas/cfi/cfi-hppa-1.d: Likewise.
	* gas/cfi/cfi-i386-2.d: Likewise.
	* gas/cfi/cfi-i386.d: Likewise.
	* gas/cfi/cfi-m68k.d: Likewise.
	* gas/cfi/cfi-mips-1.d: Likewise.
	* gas/cfi/cfi-ppc-1.d: Likewise.
	* gas/cfi/cfi-s390-1.d: Likewise.
	* gas/cfi/cfi-s390x-1.d: Likewise.
	* gas/cfi/cfi-sh-1.d: Likewise.
	* gas/cfi/cfi-sparc-1.d: Likewise.
	* gas/cfi/cfi-sparc64-1.d: Likewise.
	* gas/cfi/cfi-x86_64.d: Likewise.
@
text
@#objdump: -Wf
#name: CFI on x86-64
#...
Contents of the .eh_frame section:

0+0000 0+0014 0+0000 CIE
  Version:               1
  Augmentation:          "zR"
  Code alignment factor: 1
  Data alignment factor: -8
  Return address column: (16|32)
  Augmentation data:     1b

  DW_CFA_def_cfa: r7 \(rsp\) ofs 8
  DW_CFA_offset: (r16 \(rip\)|r32 \(xmm15\)) at cfa-8
  DW_CFA_nop
  DW_CFA_nop

0+0018 0+0014 0+001c FDE cie=0+0000 pc=0+0000..0+0014
  DW_CFA_advance_loc: 7 to 0+0007
  DW_CFA_def_cfa_offset: 4668
  DW_CFA_advance_loc: 12 to 0+0013
  DW_CFA_def_cfa_offset: 8

0+0030 0+001c 0+0034 FDE cie=0+0000 pc=0+0014..0+0022
  DW_CFA_advance_loc: 1 to 0+0015
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r6 \(rbp\) at cfa-16
  DW_CFA_advance_loc: 3 to 0+0018
  DW_CFA_def_cfa_register: r6 \(rbp\)
  DW_CFA_advance_loc: 9 to 0+0021
  DW_CFA_def_cfa: r7 \(rsp\) ofs 8
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

0+0050 0+0014 0+0054 FDE cie=0+0000 pc=0+0022..0+0035
  DW_CFA_advance_loc: 3 to 0+0025
  DW_CFA_def_cfa_register: r8 \(r8\)
  DW_CFA_advance_loc: 15 to 0+0034
  DW_CFA_def_cfa_register: r7 \(rsp\)
  DW_CFA_nop

0+0068 0+0010 0+006c FDE cie=0+0000 pc=0+0035..0+003b
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

0+007c 0+0010 0+0080 FDE cie=0+0000 pc=0+003b..0+004d
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

0+0090 0+0010 0+0000 CIE
  Version:               1
  Augmentation:          "zR"
  Code alignment factor: 1
  Data alignment factor: -8
  Return address column: (16|32)
  Augmentation data:     1b

  DW_CFA_def_cfa: r7 \(rsp\) ofs 8

0+00a4 0+002c 0+0018 FDE cie=0+0090 pc=0+004d..0+0058
  DW_CFA_advance_loc: 1 to 0+004e
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 1 to 0+004f
  DW_CFA_def_cfa_register: r8 \(r8\)
  DW_CFA_advance_loc: 1 to 0+0050
  DW_CFA_def_cfa_offset: 4676
  DW_CFA_advance_loc: 1 to 0+0051
  DW_CFA_offset_extended_sf: r4 \(rsi\) at cfa\+16
  DW_CFA_advance_loc: 1 to 0+0052
  DW_CFA_register: r8 \(r8\) in r9 \(r9\)
  DW_CFA_advance_loc: 1 to 0+0053
  DW_CFA_remember_state
  DW_CFA_advance_loc: 1 to 0+0054
  DW_CFA_restore: r6 \(rbp\)
  DW_CFA_advance_loc: 1 to 0+0055
  DW_CFA_undefined: r16 \(rip\)
  DW_CFA_advance_loc: 1 to 0+0056
  DW_CFA_same_value: r3 \(rbx\)
  DW_CFA_advance_loc: 1 to 0+0057
  DW_CFA_restore_state
  DW_CFA_nop

0+00d4 0+0010 0+0000 CIE
  Version:               1
  Augmentation:          "zR"
  Code alignment factor: 1
  Data alignment factor: -8
  Return address column: (16|32)
  Augmentation data:     1b

  DW_CFA_undefined: r16 \(rip\)
  DW_CFA_nop

0+00e8 0+011[04] 0+0018 FDE cie=0+00d4 pc=0+0058..0+00af
  DW_CFA_advance_loc: 1 to 0+0059
  DW_CFA_undefined: r0 \(rax\)
  DW_CFA_advance_loc: 1 to 0+005a
  DW_CFA_undefined: r2 \(rcx\)
  DW_CFA_advance_loc: 1 to 0+005b
  DW_CFA_undefined: r1 \(rdx\)
  DW_CFA_advance_loc: 1 to 0+005c
  DW_CFA_undefined: r3 \(rbx\)
  DW_CFA_advance_loc: 1 to 0+005d
  DW_CFA_undefined: r7 \(rsp\)
  DW_CFA_advance_loc: 1 to 0+005e
  DW_CFA_undefined: r6 \(rbp\)
  DW_CFA_advance_loc: 1 to 0+005f
  DW_CFA_undefined: r4 \(rsi\)
  DW_CFA_advance_loc: 1 to 0+0060
  DW_CFA_undefined: r5 \(rdi\)
  DW_CFA_advance_loc: 1 to 0+0061
  DW_CFA_undefined: r8 \(r8\)
  DW_CFA_advance_loc: 1 to 0+0062
  DW_CFA_undefined: r9 \(r9\)
  DW_CFA_advance_loc: 1 to 0+0063
  DW_CFA_undefined: r10 \(r10\)
  DW_CFA_advance_loc: 1 to 0+0064
  DW_CFA_undefined: r11 \(r11\)
  DW_CFA_advance_loc: 1 to 0+0065
  DW_CFA_undefined: r12 \(r12\)
  DW_CFA_advance_loc: 1 to 0+0066
  DW_CFA_undefined: r13 \(r13\)
  DW_CFA_advance_loc: 1 to 0+0067
  DW_CFA_undefined: r14 \(r14\)
  DW_CFA_advance_loc: 1 to 0+0068
  DW_CFA_undefined: r15 \(r15\)
  DW_CFA_advance_loc: 1 to 0+0069
  DW_CFA_undefined: r49 \([er]flags\)
  DW_CFA_advance_loc: 1 to 0+006a
  DW_CFA_undefined: r50 \(es\)
  DW_CFA_advance_loc: 1 to 0+006b
  DW_CFA_undefined: r51 \(cs\)
  DW_CFA_advance_loc: 1 to 0+006c
  DW_CFA_undefined: r53 \(ds\)
  DW_CFA_advance_loc: 1 to 0+006d
  DW_CFA_undefined: r52 \(ss\)
  DW_CFA_advance_loc: 1 to 0+006e
  DW_CFA_undefined: r54 \(fs\)
  DW_CFA_advance_loc: 1 to 0+006f
  DW_CFA_undefined: r55 \(gs\)
  DW_CFA_advance_loc: 1 to 0+0070
  DW_CFA_undefined: r62 \(tr\)
  DW_CFA_advance_loc: 1 to 0+0071
  DW_CFA_undefined: r63 \(ldtr\)
  DW_CFA_advance_loc: 1 to 0+0072
  DW_CFA_undefined: r58 \(fs\.base\)
  DW_CFA_advance_loc: 1 to 0+0073
  DW_CFA_undefined: r59 \(gs\.base\)
  DW_CFA_advance_loc: 1 to 0+0074
  DW_CFA_undefined: r64 \(mxcsr\)
  DW_CFA_advance_loc: 1 to 0+0075
  DW_CFA_undefined: r17 \(xmm0\)
  DW_CFA_advance_loc: 1 to 0+0076
  DW_CFA_undefined: r18 \(xmm1\)
  DW_CFA_advance_loc: 1 to 0+0077
  DW_CFA_undefined: r19 \(xmm2\)
  DW_CFA_advance_loc: 1 to 0+0078
  DW_CFA_undefined: r20 \(xmm3\)
  DW_CFA_advance_loc: 1 to 0+0079
  DW_CFA_undefined: r21 \(xmm4\)
  DW_CFA_advance_loc: 1 to 0+007a
  DW_CFA_undefined: r22 \(xmm5\)
  DW_CFA_advance_loc: 1 to 0+007b
  DW_CFA_undefined: r23 \(xmm6\)
  DW_CFA_advance_loc: 1 to 0+007c
  DW_CFA_undefined: r24 \(xmm7\)
  DW_CFA_advance_loc: 1 to 0+007d
  DW_CFA_undefined: r25 \(xmm8\)
  DW_CFA_advance_loc: 1 to 0+007e
  DW_CFA_undefined: r26 \(xmm9\)
  DW_CFA_advance_loc: 1 to 0+007f
  DW_CFA_undefined: r27 \(xmm10\)
  DW_CFA_advance_loc: 1 to 0+0080
  DW_CFA_undefined: r28 \(xmm11\)
  DW_CFA_advance_loc: 1 to 0+0081
  DW_CFA_undefined: r29 \(xmm12\)
  DW_CFA_advance_loc: 1 to 0+0082
  DW_CFA_undefined: r30 \(xmm13\)
  DW_CFA_advance_loc: 1 to 0+0083
  DW_CFA_undefined: r31 \(xmm14\)
  DW_CFA_advance_loc: 1 to 0+0084
  DW_CFA_undefined: r32 \(xmm15\)
  DW_CFA_advance_loc: 1 to 0+0085
  DW_CFA_undefined: r65 \(fcw\)
  DW_CFA_advance_loc: 1 to 0+0086
  DW_CFA_undefined: r66 \(fsw\)
  DW_CFA_advance_loc: 1 to 0+0087
  DW_CFA_undefined: r33 \(st\(?0?\)?\)
  DW_CFA_advance_loc: 1 to 0+0088
  DW_CFA_undefined: r34 \(st\(?1\)?\)
  DW_CFA_advance_loc: 1 to 0+0089
  DW_CFA_undefined: r35 \(st\(?2\)?\)
  DW_CFA_advance_loc: 1 to 0+008a
  DW_CFA_undefined: r36 \(st\(?3\)?\)
  DW_CFA_advance_loc: 1 to 0+008b
  DW_CFA_undefined: r37 \(st\(?4\)?\)
  DW_CFA_advance_loc: 1 to 0+008c
  DW_CFA_undefined: r38 \(st\(?5\)?\)
  DW_CFA_advance_loc: 1 to 0+008d
  DW_CFA_undefined: r39 \(st\(?6\)?\)
  DW_CFA_advance_loc: 1 to 0+008e
  DW_CFA_undefined: r40 \(st\(?7\)?\)
  DW_CFA_advance_loc: 1 to 0+008f
  DW_CFA_undefined: r41 \(mm0\)
  DW_CFA_advance_loc: 1 to 0+0090
  DW_CFA_undefined: r42 \(mm1\)
  DW_CFA_advance_loc: 1 to 0+0091
  DW_CFA_undefined: r43 \(mm2\)
  DW_CFA_advance_loc: 1 to 0+0092
  DW_CFA_undefined: r44 \(mm3\)
  DW_CFA_advance_loc: 1 to 0+0093
  DW_CFA_undefined: r45 \(mm4\)
  DW_CFA_advance_loc: 1 to 0+0094
  DW_CFA_undefined: r46 \(mm5\)
  DW_CFA_advance_loc: 1 to 0+0095
  DW_CFA_undefined: r47 \(mm6\)
  DW_CFA_advance_loc: 1 to 0+0096
  DW_CFA_undefined: r48 \(mm7\)
  DW_CFA_advance_loc: 1 to 0+0097
  DW_CFA_undefined: r67 \(xmm16\)
  DW_CFA_advance_loc: 1 to 0+0098
  DW_CFA_undefined: r68 \(xmm17\)
  DW_CFA_advance_loc: 1 to 0+0099
  DW_CFA_undefined: r69 \(xmm18\)
  DW_CFA_advance_loc: 1 to 0+009a
  DW_CFA_undefined: r70 \(xmm19\)
  DW_CFA_advance_loc: 1 to 0+009b
  DW_CFA_undefined: r71 \(xmm20\)
  DW_CFA_advance_loc: 1 to 0+009c
  DW_CFA_undefined: r72 \(xmm21\)
  DW_CFA_advance_loc: 1 to 0+009d
  DW_CFA_undefined: r73 \(xmm22\)
  DW_CFA_advance_loc: 1 to 0+009e
  DW_CFA_undefined: r74 \(xmm23\)
  DW_CFA_advance_loc: 1 to 0+009f
  DW_CFA_undefined: r75 \(xmm24\)
  DW_CFA_advance_loc: 1 to 0+00a0
  DW_CFA_undefined: r76 \(xmm25\)
  DW_CFA_advance_loc: 1 to 0+00a1
  DW_CFA_undefined: r77 \(xmm26\)
  DW_CFA_advance_loc: 1 to 0+00a2
  DW_CFA_undefined: r78 \(xmm27\)
  DW_CFA_advance_loc: 1 to 0+00a3
  DW_CFA_undefined: r79 \(xmm28\)
  DW_CFA_advance_loc: 1 to 0+00a4
  DW_CFA_undefined: r80 \(xmm29\)
  DW_CFA_advance_loc: 1 to 0+00a5
  DW_CFA_undefined: r81 \(xmm30\)
  DW_CFA_advance_loc: 1 to 0+00a6
  DW_CFA_undefined: r82 \(xmm31\)
  DW_CFA_advance_loc: 1 to 0+00a7
  DW_CFA_undefined: r118 \(k0\)
  DW_CFA_advance_loc: 1 to 0+00a8
  DW_CFA_undefined: r119 \(k1\)
  DW_CFA_advance_loc: 1 to 0+00a9
  DW_CFA_undefined: r120 \(k2\)
  DW_CFA_advance_loc: 1 to 0+00aa
  DW_CFA_undefined: r121 \(k3\)
  DW_CFA_advance_loc: 1 to 0+00ab
  DW_CFA_undefined: r122 \(k4\)
  DW_CFA_advance_loc: 1 to 0+00ac
  DW_CFA_undefined: r123 \(k5\)
  DW_CFA_advance_loc: 1 to 0+00ad
  DW_CFA_undefined: r124 \(k6\)
  DW_CFA_advance_loc: 1 to 0+00ae
  DW_CFA_undefined: r125 \(k7\)
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
#pass
@


1.16
log
@Add Intel AVX-512 support

binutils/

2013-07-26  Sergey Guriev  <sergey.s.guriev@@intel.com>
	    Alexander Ivchenko  <alexander.ivchenko@@intel.com>
	    Maxim Kuznetsov  <maxim.kuznetsov@@intel.com>
	    Sergey Lega  <sergey.s.lega@@intel.com>
	    Anna Tikhonova  <anna.tikhonova@@intel.com>
	    Ilya Tocar  <ilya.tocar@@intel.com>
	    Andrey Turetskiy  <andrey.turetskiy@@intel.com>
	    Ilya Verbin  <ilya.verbin@@intel.com>
	    Kirill Yukhin  <kirill.yukhin@@intel.com>
	    Michael Zolotukhin  <michael.v.zolotukhin@@intel.com>

	* dwarf.c (dwarf_regnames_i386): Add k0-k7 registers and
	numeration in comments.
	(dwarf_regnames_x86_64): Add xmm16-31 and k0-k7 registers to
	dwarf table.

gas/

2013-07-26  Sergey Guriev  <sergey.s.guriev@@intel.com>
	    Alexander Ivchenko  <alexander.ivchenko@@intel.com>
	    Maxim Kuznetsov  <maxim.kuznetsov@@intel.com>
	    Sergey Lega  <sergey.s.lega@@intel.com>
	    Anna Tikhonova  <anna.tikhonova@@intel.com>
	    Ilya Tocar  <ilya.tocar@@intel.com>
	    Andrey Turetskiy  <andrey.turetskiy@@intel.com>
	    Ilya Verbin  <ilya.verbin@@intel.com>
	    Kirill Yukhin  <kirill.yukhin@@intel.com>
	    Michael Zolotukhin  <michael.v.zolotukhin@@intel.com>

	* config/tc-i386-intel.c (O_zmmword_ptr): New.
	(i386_types): Add zmmword.
	(i386_intel_simplify_register): Allow regzmm.
	(i386_intel_simplify): Handle zmmwords.
	(i386_intel_operand): Handle RC/SAE, vector operations and
	zmmwords.
	* config/tc-i386.c (ZMMWORD_MNEM_SUFFIX): New.
	(struct RC_Operation): New.
	(struct Mask_Operation): New.
	(struct Broadcast_Operation): New.
	(vex_prefix): Size of bytes increased to 4 to support EVEX
	encoding.
	(enum i386_error): Add new error codes: unsupported_broadcast,
	broadcast_not_on_src_operand, broadcast_needed,
	unsupported_masking, mask_not_on_destination, no_default_mask,
	unsupported_rc_sae, rc_sae_operand_not_last_imm,
	invalid_register_operand, try_vector_disp8.
	(struct _i386_insn): Add new fields vrex, need_vrex, mask,
	rounding, broadcast, memshift.
	(struct RC_name): New.
	(RC_NamesTable): New.
	(evexlig): New.
	(evexwig): New.
	(extra_symbol_chars): Add '{'.
	(cpu_arch): Add AVX512F, AVX512CD, AVX512ER and AVX512PF.
	(i386_operand_type): Add regzmm, regmask and vec_disp8.
	(match_mem_size): Handle zmmwords.
	(operand_type_match): Handle zmm-registers.
	(mode_from_disp_size): Handle vec_disp8.
	(fits_in_vec_disp8): New.
	(md_begin): Handle {} properly.
	(type_names): Add "rZMM", "Mask reg" and "Vector d8".
	(build_vex_prefix): Handle vrex.
	(build_evex_prefix): New.
	(process_immext): Adjust to properly handle EVEX.
	(md_assemble): Add EVEX encoding support.
	(swap_2_operands): Correctly handle operands with masking,
	broadcasting or RC/SAE.
	(check_VecOperands): Support EVEX features.
	(VEX_check_operands): Properly handle 16 upper [xyz]mm registers.
	(match_template): Support regzmm and handle new error codes.
	(process_suffix): Handle zmmwords and zmm-registers.
	(check_byte_reg): Extend to zmm-registers.
	(process_operands): Extend to zmm-registers.
	(build_modrm_byte): Handle EVEX.
	(output_insn): Adjust to properly handle EVEX case.
	(disp_size): Handle vec_disp8.
	(output_disp): Support compressed disp8*N evex feature.
	(output_imm): Handle RC/SAE immediates properly.
	(check_VecOperations): New.
	(i386_immediate): Handle EVEX features.
	(i386_index_check): Handle zmmwords and zmm-registers.
	(RC_SAE_immediate): New.
	(i386_att_operand): Handle EVEX features.
	(parse_real_register): Add a check for ZMM/Mask registers.
	(OPTION_MEVEXLIG): New.
	(OPTION_MEVEXWIG): New.
	(md_longopts): Add mevexlig and mevexwig.
	(md_parse_option): Handle mevexlig and mevexwig options.
	(md_show_usage): Add description for mevexlig and mevexwig.
	* doc/c-i386.texi: Document avx512f/.avx512f, avx512cd/.avx512cd,
	avx512er/.avx512er, avx512pf/.avx512pf, mevexlig and mevexwig.

gas/testsuite/

2013-07-26  Sergey Guriev  <sergey.s.guriev@@intel.com>
	    Alexander Ivchenko  <alexander.ivchenko@@intel.com>
	    Maxim Kuznetsov  <maxim.kuznetsov@@intel.com>
	    Sergey Lega  <sergey.s.lega@@intel.com>
	    Anna Tikhonova  <anna.tikhonova@@intel.com>
	    Ilya Tocar  <ilya.tocar@@intel.com>
	    Andrey Turetskiy  <andrey.turetskiy@@intel.com>
	    Ilya Verbin  <ilya.verbin@@intel.com>
	    Kirill Yukhin  <kirill.yukhin@@intel.com>
	    Michael Zolotukhin  <michael.v.zolotukhin@@intel.com>

	* gas/cfi/cfi-i386.s: Add tests for k0-k7.
	* gas/cfi/cfi-i386.d: Change to reflect above mentioned changes.
	* gas/cfi/cfi-x86_64.s: Add tests for xmm16-31, k0-7.
	* gas/cfi/cfi-x86_64.d: Change to reflect above mentioned changes.
	* gas/i386/ilp32/cfi/cfi-x86_64.d: Ditto.
	* gas/i386/intel-regs.s: Add tests for zmm0 and xmm16 registers.
	* gas/i386/intel-regs.d: Change correspondingly.
	* gas/i386/prefetch-intel.d: Reflect implementation of prefetchwt1.
	* gas/i386/prefetch.d: Ditto.
	* gas/i386/x86-64-prefetch-intel.d: Ditto.
	* gas/i386/x86-64-prefetch.d: Ditto.
	* gas/i386/avx512f-intel.d: New.
	* gas/i386/avx512f-nondef.d: New.
	* gas/i386/avx512f-nondef.s: New.
	* gas/i386/avx512f-opts-intel.d: New.
	* gas/i386/avx512f-opts.d: New.
	* gas/i386/avx512f-opts.s: New.
	* gas/i386/avx512f.d: New.
	* gas/i386/avx512f.s: New.
	* gas/i386/avx512cd-intel.d: New.
	* gas/i386/avx512cd.d: New.
	* gas/i386/avx512cd.s: New.
	* gas/i386/avx512er-intel.d: New.
	* gas/i386/avx512er.d: New.
	* gas/i386/avx512er.s: New.
	* gas/i386/avx512pf-intel.d: New.
	* gas/i386/avx512pf.d: New.
	* gas/i386/avx512pf.s: New.
	* gas/i386/evex-lig.s: New.
	* gas/i386/evex-lig256-intel.d: New.
	* gas/i386/evex-lig256.d: New.
	* gas/i386/evex-lig512-intel.d: New.
	* gas/i386/evex-lig512.d: New.
	* gas/i386/evex-wig.s: New.
	* gas/i386/evex-wig1-intel.d: New.
	* gas/i386/evex-wig1.d: New.
	* gas/i386/inval-avx512f.l: New.
	* gas/i386/inval-avx512f.s: New.
	* gas/i386/x86-64-avx512f-intel.d: New.
	* gas/i386/x86-64-avx512f-nondef.d: New.
	* gas/i386/x86-64-avx512f-nondef.s: New.
	* gas/i386/x86-64-avx512f-opts-intel.d: New.
	* gas/i386/x86-64-avx512f-opts.d: New.
	* gas/i386/x86-64-avx512f-opts.s: New.
	* gas/i386/x86-64-avx512f.d: New.
	* gas/i386/x86-64-avx512f.s: New.
	* gas/i386/x86-64-avx512cd-intel.d: New.
	* gas/i386/x86-64-avx512cd.d: New.
	* gas/i386/x86-64-avx512cd.s: New.
	* gas/i386/x86-64-avx512er-intel.d: New.
	* gas/i386/x86-64-avx512er.d: New.
	* gas/i386/x86-64-avx512er.s: New.
	* gas/i386/x86-64-avx512pf-intel.d: New.
	* gas/i386/x86-64-avx512pf.d: New.
	* gas/i386/x86-64-avx512pf.s: New.
	* gas/i386/x86-64-evex-lig.s: New.
	* gas/i386/x86-64-evex-lig256-intel.d: New.
	* gas/i386/x86-64-evex-lig256.d: New.
	* gas/i386/x86-64-evex-lig512-intel.d: New.
	* gas/i386/x86-64-evex-lig512.d: New.
	* gas/i386/x86-64-evex-wig.s: New.
	* gas/i386/x86-64-evex-wig1-intel.d: New.
	* gas/i386/x86-64-evex-wig1.d: New.
	* gas/i386/x86-64-inval-avx512f.l: New.
	* gas/i386/x86-64-inval-avx512f.s: New.
	* gas/i386/i386.exp: Run new AVX-512 tests.

opcodes/

2013-07-26  Sergey Guriev  <sergey.s.guriev@@intel.com>
	    Alexander Ivchenko  <alexander.ivchenko@@intel.com>
	    Maxim Kuznetsov  <maxim.kuznetsov@@intel.com>
	    Sergey Lega  <sergey.s.lega@@intel.com>
	    Anna Tikhonova  <anna.tikhonova@@intel.com>
	    Ilya Tocar  <ilya.tocar@@intel.com>
	    Andrey Turetskiy  <andrey.turetskiy@@intel.com>
	    Ilya Verbin  <ilya.verbin@@intel.com>
	    Kirill Yukhin  <kirill.yukhin@@intel.com>
	    Michael Zolotukhin  <michael.v.zolotukhin@@intel.com>

	* i386-dis-evex.h: New.
	* i386-dis.c (OP_Rounding): New.
	(VPCMP_Fixup): New.
	(OP_Mask): New.
	(Rdq): New.
	(XMxmmq): New.
	(EXdScalarS): New.
	(EXymm): New.
	(EXEvexHalfBcstXmmq): New.
	(EXxmm_mdq): New.
	(EXEvexXGscat): New.
	(EXEvexXNoBcst): New.
	(VPCMP): New.
	(EXxEVexR): New.
	(EXxEVexS): New.
	(XMask): New.
	(MaskG): New.
	(MaskE): New.
	(MaskR): New.
	(MaskVex): New.
	(modes enum): Add evex_x_gscat_mode, evex_x_nobcst_mode,
	evex_half_bcst_xmmq_mode, xmm_mdq_mode, ymm_mode,
	evex_rounding_mode, evex_sae_mode, mask_mode.
	(USE_EVEX_TABLE): New.
	(EVEX_TABLE): New.
	(EVEX enum): New.
	(REG enum): Add REG_EVEX_0F72, REG_EVEX_0F73, REG_EVEX_0F38C6,
	REG_EVEX_0F38C7.
	(MOD enum): Add MOD_EVEX_0F10_PREFIX_1, MOD_EVEX_0F10_PREFIX_3,
	MOD_EVEX_0F11_PREFIX_1, MOD_EVEX_0F11_PREFIX_3,
	MOD_EVEX_0F12_PREFIX_0, MOD_EVEX_0F16_PREFIX_0, MOD_EVEX_0F38C6_REG_1,
	MOD_EVEX_0F38C6_REG_2, MOD_EVEX_0F38C6_REG_5, MOD_EVEX_0F38C6_REG_6,
	MOD_EVEX_0F38C7_REG_1, MOD_EVEX_0F38C7_REG_2,  MOD_EVEX_0F38C7_REG_5,
	MOD_EVEX_0F38C7_REG_6.
	(PREFIX enum): Add PREFIX_VEX_0F41, PREFIX_VEX_0F42, PREFIX_VEX_0F44,
	PREFIX_VEX_0F45, PREFIX_VEX_0F46, PREFIX_VEX_0F47, PREFIX_VEX_0F4B,
	PREFIX_VEX_0F90, PREFIX_VEX_0F91, PREFIX_VEX_0F92, PREFIX_VEX_0F93,
	PREFIX_VEX_0F98, PREFIX_VEX_0F3A30, PREFIX_VEX_0F3A32,
	PREFIX_VEX_0F3AF0, PREFIX_EVEX_0F10, PREFIX_EVEX_0F11,
	PREFIX_EVEX_0F12, PREFIX_EVEX_0F13, PREFIX_EVEX_0F14,
	PREFIX_EVEX_0F15, PREFIX_EVEX_0F16, PREFIX_EVEX_0F17,
	PREFIX_EVEX_0F28, PREFIX_EVEX_0F29, PREFIX_EVEX_0F2A,
	PREFIX_EVEX_0F2B, PREFIX_EVEX_0F2C, PREFIX_EVEX_0F2D,
	PREFIX_EVEX_0F2E, PREFIX_EVEX_0F2F, PREFIX_EVEX_0F51,
	PREFIX_EVEX_0F58, PREFIX_EVEX_0F59, PREFIX_EVEX_0F5A,
	PREFIX_EVEX_0F5B, PREFIX_EVEX_0F5C, PREFIX_EVEX_0F5D,
	PREFIX_EVEX_0F5E, PREFIX_EVEX_0F5F, PREFIX_EVEX_0F62,
	PREFIX_EVEX_0F66, PREFIX_EVEX_0F6A, PREFIX_EVEX_0F6C,
	PREFIX_EVEX_0F6D, PREFIX_EVEX_0F6E, PREFIX_EVEX_0F6F,
	PREFIX_EVEX_0F70, PREFIX_EVEX_0F72_REG_0, PREFIX_EVEX_0F72_REG_1,
	PREFIX_EVEX_0F72_REG_2, PREFIX_EVEX_0F72_REG_4,
	PREFIX_EVEX_0F72_REG_6, PREFIX_EVEX_0F73_REG_2,
	PREFIX_EVEX_0F73_REG_6, PREFIX_EVEX_0F76, PREFIX_EVEX_0F78,
	PREFIX_EVEX_0F79, PREFIX_EVEX_0F7A, PREFIX_EVEX_0F7B,
	PREFIX_EVEX_0F7E, PREFIX_EVEX_0F7F, PREFIX_EVEX_0FC2,
	PREFIX_EVEX_0FC6, PREFIX_EVEX_0FD2, PREFIX_EVEX_0FD3,
	PREFIX_EVEX_0FD4, PREFIX_EVEX_0FD6, PREFIX_EVEX_0FDB,
	PREFIX_EVEX_0FDF, PREFIX_EVEX_0FE2, PREFIX_EVEX_0FE6 PREFIX_EVEX_0FE7,
	PREFIX_EVEX_0FEB, PREFIX_EVEX_0FEF, PREFIX_EVEX_0FF2,
	PREFIX_EVEX_0FF3, PREFIX_EVEX_0FF4, PREFIX_EVEX_0FFA, PREFIX_EVEX_0FFB,
	PREFIX_EVEX_0FFE, PREFIX_EVEX_0F380C, PREFIX_EVEX_0F380D,
	PREFIX_EVEX_0F3811, PREFIX_EVEX_0F3812, PREFIX_EVEX_0F3813,
	PREFIX_EVEX_0F3814, PREFIX_EVEX_0F3815, PREFIX_EVEX_0F3816,
	PREFIX_EVEX_0F3818, PREFIX_EVEX_0F3819, PREFIX_EVEX_0F381A,
	PREFIX_EVEX_0F381B, PREFIX_EVEX_0F381E, PREFIX_EVEX_0F381F,
	PREFIX_EVEX_0F3821, PREFIX_EVEX_0F3822, PREFIX_EVEX_0F3823,
	PREFIX_EVEX_0F3824, PREFIX_EVEX_0F3825, PREFIX_EVEX_0F3827,
	PREFIX_EVEX_0F3828, PREFIX_EVEX_0F3829, PREFIX_EVEX_0F382A,
	PREFIX_EVEX_0F382C, PREFIX_EVEX_0F382D, PREFIX_EVEX_0F3831,
	PREFIX_EVEX_0F3832, PREFIX_EVEX_0F3833, PREFIX_EVEX_0F3834,
	PREFIX_EVEX_0F3835, PREFIX_EVEX_0F3836, PREFIX_EVEX_0F3837,
	PREFIX_EVEX_0F3839, PREFIX_EVEX_0F383A, PREFIX_EVEX_0F383B,
	PREFIX_EVEX_0F383D, PREFIX_EVEX_0F383F, PREFIX_EVEX_0F3840,
	PREFIX_EVEX_0F3842, PREFIX_EVEX_0F3843, PREFIX_EVEX_0F3844,
	PREFIX_EVEX_0F3845, PREFIX_EVEX_0F3846, PREFIX_EVEX_0F3847,
	PREFIX_EVEX_0F384C, PREFIX_EVEX_0F384D, PREFIX_EVEX_0F384E,
	PREFIX_EVEX_0F384F, PREFIX_EVEX_0F3858, PREFIX_EVEX_0F3859,
	PREFIX_EVEX_0F385A, PREFIX_EVEX_0F385B, PREFIX_EVEX_0F3864,
	PREFIX_EVEX_0F3865, PREFIX_EVEX_0F3876, PREFIX_EVEX_0F3877,
	PREFIX_EVEX_0F387C, PREFIX_EVEX_0F387E, PREFIX_EVEX_0F387F,
	PREFIX_EVEX_0F3888, PREFIX_EVEX_0F3889, PREFIX_EVEX_0F388A,
	PREFIX_EVEX_0F388B, PREFIX_EVEX_0F3890, PREFIX_EVEX_0F3891,
	PREFIX_EVEX_0F3892, PREFIX_EVEX_0F3893, PREFIX_EVEX_0F3896,
	PREFIX_EVEX_0F3897, PREFIX_EVEX_0F3898, PREFIX_EVEX_0F3899,
	PREFIX_EVEX_0F389A, PREFIX_EVEX_0F389B, PREFIX_EVEX_0F389C,
	PREFIX_EVEX_0F389D, PREFIX_EVEX_0F389E, PREFIX_EVEX_0F389F,
	PREFIX_EVEX_0F38A0, PREFIX_EVEX_0F38A1, PREFIX_EVEX_0F38A2,
	PREFIX_EVEX_0F38A3, PREFIX_EVEX_0F38A6, PREFIX_EVEX_0F38A7,
	PREFIX_EVEX_0F38A8, PREFIX_EVEX_0F38A9, PREFIX_EVEX_0F38AA,
	PREFIX_EVEX_0F38AB, PREFIX_EVEX_0F38AC, PREFIX_EVEX_0F38AD,
	PREFIX_EVEX_0F38AE, PREFIX_EVEX_0F38AF, PREFIX_EVEX_0F38B6,
	PREFIX_EVEX_0F38B7, PREFIX_EVEX_0F38B8, PREFIX_EVEX_0F38B9,
	PREFIX_EVEX_0F38BA, PREFIX_EVEX_0F38BB, PREFIX_EVEX_0F38BC,
	PREFIX_EVEX_0F38BD, PREFIX_EVEX_0F38BE, PREFIX_EVEX_0F38BF,
	PREFIX_EVEX_0F38C4, PREFIX_EVEX_0F38C6_REG_1,
	PREFIX_EVEX_0F38C6_REG_2, PREFIX_EVEX_0F38C6_REG_5,
	PREFIX_EVEX_0F38C6_REG_6, PREFIX_EVEX_0F38C7_REG_1,
	PREFIX_EVEX_0F38C7_REG_2, PREFIX_EVEX_0F38C7_REG_5,
	PREFIX_EVEX_0F38C7_REG_6, PREFIX_EVEX_0F38C8, PREFIX_EVEX_0F38CA,
	PREFIX_EVEX_0F38CB, PREFIX_EVEX_0F38CC, PREFIX_EVEX_0F38CD,
	PREFIX_EVEX_0F3A00,  PREFIX_EVEX_0F3A01, PREFIX_EVEX_0F3A03,
	PREFIX_EVEX_0F3A04, PREFIX_EVEX_0F3A05, PREFIX_EVEX_0F3A08,
	PREFIX_EVEX_0F3A09, PREFIX_EVEX_0F3A0A, PREFIX_EVEX_0F3A0B,
	PREFIX_EVEX_0F3A17, PREFIX_EVEX_0F3A18, PREFIX_EVEX_0F3A19,
	PREFIX_EVEX_0F3A1A, PREFIX_EVEX_0F3A1B, PREFIX_EVEX_0F3A1D,
	PREFIX_EVEX_0F3A1E, PREFIX_EVEX_0F3A1F, PREFIX_EVEX_0F3A21,
	PREFIX_EVEX_0F3A23, PREFIX_EVEX_0F3A25, PREFIX_EVEX_0F3A26,
	PREFIX_EVEX_0F3A27, PREFIX_EVEX_0F3A38, PREFIX_EVEX_0F3A39,
	PREFIX_EVEX_0F3A3A, PREFIX_EVEX_0F3A3B, PREFIX_EVEX_0F3A3E,
	PREFIX_EVEX_0F3A3F, PREFIX_EVEX_0F3A43, PREFIX_EVEX_0F3A54,
	PREFIX_EVEX_0F3A55.
	(VEX_LEN enum): Add VEX_LEN_0F41_P_0, VEX_LEN_0F42_P_0, VEX_LEN_0F44_P_0,
	VEX_LEN_0F45_P_0, VEX_LEN_0F46_P_0, VEX_LEN_0F47_P_0,
	VEX_LEN_0F4B_P_2, VEX_LEN_0F90_P_0, VEX_LEN_0F91_P_0,
	VEX_LEN_0F92_P_0, VEX_LEN_0F93_P_0, VEX_LEN_0F98_P_0,
	VEX_LEN_0F3A30_P_2, VEX_LEN_0F3A32_P_2, VEX_W_0F41_P_0_LEN_1,
	VEX_W_0F42_P_0_LEN_1, VEX_W_0F44_P_0_LEN_0, VEX_W_0F45_P_0_LEN_1,
	VEX_W_0F46_P_0_LEN_1, VEX_W_0F47_P_0_LEN_1, VEX_W_0F4B_P_2_LEN_1,
	VEX_W_0F90_P_0_LEN_0, VEX_W_0F91_P_0_LEN_0, VEX_W_0F92_P_0_LEN_0,
	VEX_W_0F93_P_0_LEN_0, VEX_W_0F98_P_0_LEN_0, VEX_W_0F3A30_P_2_LEN_0,
	VEX_W_0F3A32_P_2_LEN_0.
	(VEX_W enum): Add EVEX_W_0F10_P_0, EVEX_W_0F10_P_1_M_0,
	EVEX_W_0F10_P_1_M_1, EVEX_W_0F10_P_2, EVEX_W_0F10_P_3_M_0,
	EVEX_W_0F10_P_3_M_1, EVEX_W_0F11_P_0, EVEX_W_0F11_P_1_M_0,
	EVEX_W_0F11_P_1_M_1, EVEX_W_0F11_P_2, EVEX_W_0F11_P_3_M_0,
	EVEX_W_0F11_P_3_M_1, EVEX_W_0F12_P_0_M_0, EVEX_W_0F12_P_0_M_1,
	EVEX_W_0F12_P_1, EVEX_W_0F12_P_2, EVEX_W_0F12_P_3, EVEX_W_0F13_P_0,
	EVEX_W_0F13_P_2, EVEX_W_0F14_P_0, EVEX_W_0F14_P_2, EVEX_W_0F15_P_0,
	EVEX_W_0F15_P_2, EVEX_W_0F16_P_0_M_0, EVEX_W_0F16_P_0_M_1,
	EVEX_W_0F16_P_1, EVEX_W_0F16_P_2, EVEX_W_0F17_P_0, EVEX_W_0F17_P_2,
	EVEX_W_0F28_P_0, EVEX_W_0F28_P_2, EVEX_W_0F29_P_0, EVEX_W_0F29_P_2,
	EVEX_W_0F2A_P_1, EVEX_W_0F2A_P_3, EVEX_W_0F2B_P_0, EVEX_W_0F2B_P_2,
	EVEX_W_0F2E_P_0, EVEX_W_0F2E_P_2, EVEX_W_0F2F_P_0, EVEX_W_0F2F_P_2,
	EVEX_W_0F51_P_0, EVEX_W_0F51_P_1, EVEX_W_0F51_P_2, EVEX_W_0F51_P_3,
	EVEX_W_0F58_P_0, EVEX_W_0F58_P_1, EVEX_W_0F58_P_2, EVEX_W_0F58_P_3,
	EVEX_W_0F59_P_0, EVEX_W_0F59_P_1, EVEX_W_0F59_P_2, EVEX_W_0F59_P_3,
	EVEX_W_0F5A_P_0, EVEX_W_0F5A_P_1, EVEX_W_0F5A_P_2, EVEX_W_0F5A_P_3,
	EVEX_W_0F5B_P_0, EVEX_W_0F5B_P_1, EVEX_W_0F5B_P_2, EVEX_W_0F5C_P_0,
	EVEX_W_0F5C_P_1, EVEX_W_0F5C_P_2, EVEX_W_0F5C_P_3, EVEX_W_0F5D_P_0,
	EVEX_W_0F5D_P_1, EVEX_W_0F5D_P_2, EVEX_W_0F5D_P_3, EVEX_W_0F5E_P_0,
	EVEX_W_0F5E_P_1, EVEX_W_0F5E_P_2, EVEX_W_0F5E_P_3, EVEX_W_0F5F_P_0,
	EVEX_W_0F5F_P_1, EVEX_W_0F5F_P_2, EVEX_W_0F5F_P_3, EVEX_W_0F62_P_2,
	EVEX_W_0F66_P_2, EVEX_W_0F6A_P_2, EVEX_W_0F6C_P_2, EVEX_W_0F6D_P_2,
	EVEX_W_0F6E_P_2, EVEX_W_0F6F_P_1, EVEX_W_0F6F_P_2, EVEX_W_0F70_P_2,
	EVEX_W_0F72_R_2_P_2, EVEX_W_0F72_R_6_P_2, EVEX_W_0F73_R_2_P_2,
	EVEX_W_0F73_R_6_P_2, EVEX_W_0F76_P_2, EVEX_W_0F78_P_0,
	EVEX_W_0F79_P_0, EVEX_W_0F7A_P_1, EVEX_W_0F7A_P_3, EVEX_W_0F7B_P_1,
	EVEX_W_0F7B_P_3, EVEX_W_0F7E_P_1, EVEX_W_0F7E_P_2, EVEX_W_0F7F_P_1,
	EVEX_W_0F7F_P_2, EVEX_W_0FC2_P_0, EVEX_W_0FC2_P_1, EVEX_W_0FC2_P_2,
	EVEX_W_0FC2_P_3, EVEX_W_0FC6_P_0, EVEX_W_0FC6_P_2, EVEX_W_0FD2_P_2,
	EVEX_W_0FD3_P_2, EVEX_W_0FD4_P_2, EVEX_W_0FD6_P_2, EVEX_W_0FE6_P_1,
	EVEX_W_0FE6_P_2, EVEX_W_0FE6_P_3, EVEX_W_0FE7_P_2, EVEX_W_0FF2_P_2,
	EVEX_W_0FF3_P_2, EVEX_W_0FF4_P_2, EVEX_W_0FFA_P_2, EVEX_W_0FFB_P_2,
	EVEX_W_0FFE_P_2, EVEX_W_0F380C_P_2, EVEX_W_0F380D_P_2,
	EVEX_W_0F3811_P_1, EVEX_W_0F3812_P_1, EVEX_W_0F3813_P_1,
	EVEX_W_0F3813_P_2, EVEX_W_0F3814_P_1, EVEX_W_0F3815_P_1,
	EVEX_W_0F3818_P_2, EVEX_W_0F3819_P_2, EVEX_W_0F381A_P_2,
	EVEX_W_0F381B_P_2, EVEX_W_0F381E_P_2, EVEX_W_0F381F_P_2,
	EVEX_W_0F3821_P_1, EVEX_W_0F3822_P_1, EVEX_W_0F3823_P_1,
	EVEX_W_0F3824_P_1, EVEX_W_0F3825_P_1, EVEX_W_0F3825_P_2,
	EVEX_W_0F3828_P_2, EVEX_W_0F3829_P_2, EVEX_W_0F382A_P_1,
	EVEX_W_0F382A_P_2, EVEX_W_0F3831_P_1, EVEX_W_0F3832_P_1,
	EVEX_W_0F3833_P_1, EVEX_W_0F3834_P_1, EVEX_W_0F3835_P_1,
	EVEX_W_0F3835_P_2, EVEX_W_0F3837_P_2, EVEX_W_0F383A_P_1,
	EVEX_W_0F3840_P_2, EVEX_W_0F3858_P_2, EVEX_W_0F3859_P_2,
	EVEX_W_0F385A_P_2, EVEX_W_0F385B_P_2, EVEX_W_0F3891_P_2,
	EVEX_W_0F3893_P_2, EVEX_W_0F38A1_P_2, EVEX_W_0F38A3_P_2,
	EVEX_W_0F38C7_R_1_P_2, EVEX_W_0F38C7_R_2_P_2, EVEX_W_0F38C7_R_5_P_2,
	EVEX_W_0F38C7_R_6_P_2, EVEX_W_0F3A00_P_2, EVEX_W_0F3A01_P_2,
	EVEX_W_0F3A04_P_2, EVEX_W_0F3A05_P_2, EVEX_W_0F3A08_P_2,
	EVEX_W_0F3A09_P_2, EVEX_W_0F3A0A_P_2, EVEX_W_0F3A0B_P_2,
	EVEX_W_0F3A18_P_2, EVEX_W_0F3A19_P_2, EVEX_W_0F3A1A_P_2,
	EVEX_W_0F3A1B_P_2, EVEX_W_0F3A1D_P_2, EVEX_W_0F3A21_P_2,
	EVEX_W_0F3A23_P_2, EVEX_W_0F3A38_P_2, EVEX_W_0F3A39_P_2,
	EVEX_W_0F3A3A_P_2, EVEX_W_0F3A3B_P_2, EVEX_W_0F3A43_P_2.
	(struct vex): Add fields evex, r, v, mask_register_specifier,
	zeroing, ll, b.
	(intel_names_xmm): Add upper 16 registers.
	(att_names_xmm): Ditto.
	(intel_names_ymm): Ditto.
	(att_names_ymm): Ditto.
	(names_zmm): New.
	(intel_names_zmm): Ditto.
	(att_names_zmm): Ditto.
	(names_mask): Ditto.
	(intel_names_mask): Ditto.
	(att_names_mask): Ditto.
	(names_rounding): Ditto.
	(names_broadcast): Ditto.
	(x86_64_table): Add escape to evex-table.
	(reg_table): Include reg_table evex-entries from
	i386-dis-evex.h.  Fix prefetchwt1 instruction.
	(prefix_table): Add entries for new instructions.
	(vex_table): Ditto.
	(vex_len_table): Ditto.
	(vex_w_table): Ditto.
	(mod_table): Ditto.
	(get_valid_dis386): Properly handle new instructions.
	(print_insn): Handle zmm and mask registers, print mask operand.
	(intel_operand_size): Support EVEX, new modes and sizes.
	(OP_E_register): Handle new modes.
	(OP_E_memory): Ditto.
	(OP_G): Ditto.
	(OP_XMM): Ditto.
	(OP_EX): Ditto.
	(OP_VEX): Ditto.
	* i386-gen.c (cpu_flag_init): Update CPU_ANY_SSE_FLAGS and
	CPU_ANY_AVX_FLAGS.  Add CPU_AVX512F_FLAGS, CPU_AVX512CD_FLAGS,
	CPU_AVX512ER_FLAGS and CPU_AVX512PF_FLAGS.
	(cpu_flags): Add CpuAVX512F, CpuAVX512CD, CpuAVX512ER,
	CpuAVX512PF and CpuVREX.
	(operand_type_init): Add OPERAND_TYPE_REGZMM,
	OPERAND_TYPE_REGMASK and OPERAND_TYPE_VEC_DISP8.
	(opcode_modifiers): Add EVex, Masking, VecESize, Broadcast,
	StaticRounding, SAE, Disp8MemShift, NoDefMask.
	(operand_types): Add RegZMM, RegMask, Vec_Disp8, Zmmword.
	* i386-init.h: Regenerate.
	* i386-opc.h (CpuAVX512F): New.
	(CpuAVX512CD): New.
	(CpuAVX512ER): New.
	(CpuAVX512PF): New.
	(CpuVREX): New.
	(i386_cpu_flags): Add cpuavx512f, cpuavx512cd, cpuavx512er,
	cpuavx512pf and cpuvrex fields.
	(VecSIB): Add VecSIB512.
	(EVex): New.
	(Masking): New.
	(VecESize): New.
	(Broadcast): New.
	(StaticRounding): New.
	(SAE): New.
	(Disp8MemShift): New.
	(NoDefMask): New.
	(i386_opcode_modifier): Add evex, masking, vecesize, broadcast,
	staticrounding, sae, disp8memshift and nodefmask.
	(RegZMM): New.
	(Zmmword): Ditto.
	(Vec_Disp8): Ditto.
	(i386_operand_type): Add regzmm, regmask, zmmword and vec_disp8
	fields.
	(RegVRex): New.
	* i386-opc.tbl: Add AVX512 instructions.
	* i386-reg.tbl: Add 16 upper XMM and YMM registers, 32 new ZMM
	registers, mask registers.
	* i386-tbl.h: Regenerate.
@
text
@d6 1
a6 1
00000000 00000014 00000000 CIE
d19 2
a20 2
00000018 00000014 0000001c FDE cie=00000000 pc=00000000..00000014
  DW_CFA_advance_loc: 7 to 00000007
d22 1
a22 1
  DW_CFA_advance_loc: 12 to 00000013
d25 2
a26 2
00000030 0000001c 00000034 FDE cie=00000000 pc=00000014..00000022
  DW_CFA_advance_loc: 1 to 00000015
d29 1
a29 1
  DW_CFA_advance_loc: 3 to 00000018
d31 1
a31 1
  DW_CFA_advance_loc: 9 to 00000021
d37 2
a38 2
00000050 00000014 00000054 FDE cie=00000000 pc=00000022..00000035
  DW_CFA_advance_loc: 3 to 00000025
d40 1
a40 1
  DW_CFA_advance_loc: 15 to 00000034
d44 1
a44 1
00000068 00000010 0000006c FDE cie=00000000 pc=00000035..0000003b
d49 1
a49 1
0000007c 00000010 00000080 FDE cie=00000000 pc=0000003b..0000004d
d54 1
a54 1
00000090 00000010 00000000 CIE
d64 2
a65 2
000000a4 0000002c 00000018 FDE cie=00000090 pc=0000004d..00000058
  DW_CFA_advance_loc: 1 to 0000004e
d67 1
a67 1
  DW_CFA_advance_loc: 1 to 0000004f
d69 1
a69 1
  DW_CFA_advance_loc: 1 to 00000050
d71 1
a71 1
  DW_CFA_advance_loc: 1 to 00000051
d73 1
a73 1
  DW_CFA_advance_loc: 1 to 00000052
d75 1
a75 1
  DW_CFA_advance_loc: 1 to 00000053
d77 1
a77 1
  DW_CFA_advance_loc: 1 to 00000054
d79 1
a79 1
  DW_CFA_advance_loc: 1 to 00000055
d81 1
a81 1
  DW_CFA_advance_loc: 1 to 00000056
d83 1
a83 1
  DW_CFA_advance_loc: 1 to 00000057
d87 1
a87 1
000000d4 00000010 00000000 CIE
d98 2
a99 2
000000e8 0000011[04] 00000018 FDE cie=000000d4 pc=00000058..000000af
  DW_CFA_advance_loc: 1 to 00000059
d101 1
a101 1
  DW_CFA_advance_loc: 1 to 0000005a
d103 1
a103 1
  DW_CFA_advance_loc: 1 to 0000005b
d105 1
a105 1
  DW_CFA_advance_loc: 1 to 0000005c
d107 1
a107 1
  DW_CFA_advance_loc: 1 to 0000005d
d109 1
a109 1
  DW_CFA_advance_loc: 1 to 0000005e
d111 1
a111 1
  DW_CFA_advance_loc: 1 to 0000005f
d113 1
a113 1
  DW_CFA_advance_loc: 1 to 00000060
d115 1
a115 1
  DW_CFA_advance_loc: 1 to 00000061
d117 1
a117 1
  DW_CFA_advance_loc: 1 to 00000062
d119 1
a119 1
  DW_CFA_advance_loc: 1 to 00000063
d121 1
a121 1
  DW_CFA_advance_loc: 1 to 00000064
d123 1
a123 1
  DW_CFA_advance_loc: 1 to 00000065
d125 1
a125 1
  DW_CFA_advance_loc: 1 to 00000066
d127 1
a127 1
  DW_CFA_advance_loc: 1 to 00000067
d129 1
a129 1
  DW_CFA_advance_loc: 1 to 00000068
d131 1
a131 1
  DW_CFA_advance_loc: 1 to 00000069
d133 1
a133 1
  DW_CFA_advance_loc: 1 to 0000006a
d135 1
a135 1
  DW_CFA_advance_loc: 1 to 0000006b
d137 1
a137 1
  DW_CFA_advance_loc: 1 to 0000006c
d139 1
a139 1
  DW_CFA_advance_loc: 1 to 0000006d
d141 1
a141 1
  DW_CFA_advance_loc: 1 to 0000006e
d143 1
a143 1
  DW_CFA_advance_loc: 1 to 0000006f
d145 1
a145 1
  DW_CFA_advance_loc: 1 to 00000070
d147 1
a147 1
  DW_CFA_advance_loc: 1 to 00000071
d149 1
a149 1
  DW_CFA_advance_loc: 1 to 00000072
d151 1
a151 1
  DW_CFA_advance_loc: 1 to 00000073
d153 1
a153 1
  DW_CFA_advance_loc: 1 to 00000074
d155 1
a155 1
  DW_CFA_advance_loc: 1 to 00000075
d157 1
a157 1
  DW_CFA_advance_loc: 1 to 00000076
d159 1
a159 1
  DW_CFA_advance_loc: 1 to 00000077
d161 1
a161 1
  DW_CFA_advance_loc: 1 to 00000078
d163 1
a163 1
  DW_CFA_advance_loc: 1 to 00000079
d165 1
a165 1
  DW_CFA_advance_loc: 1 to 0000007a
d167 1
a167 1
  DW_CFA_advance_loc: 1 to 0000007b
d169 1
a169 1
  DW_CFA_advance_loc: 1 to 0000007c
d171 1
a171 1
  DW_CFA_advance_loc: 1 to 0000007d
d173 1
a173 1
  DW_CFA_advance_loc: 1 to 0000007e
d175 1
a175 1
  DW_CFA_advance_loc: 1 to 0000007f
d177 1
a177 1
  DW_CFA_advance_loc: 1 to 00000080
d179 1
a179 1
  DW_CFA_advance_loc: 1 to 00000081
d181 1
a181 1
  DW_CFA_advance_loc: 1 to 00000082
d183 1
a183 1
  DW_CFA_advance_loc: 1 to 00000083
d185 1
a185 1
  DW_CFA_advance_loc: 1 to 00000084
d187 1
a187 1
  DW_CFA_advance_loc: 1 to 00000085
d189 1
a189 1
  DW_CFA_advance_loc: 1 to 00000086
d191 1
a191 1
  DW_CFA_advance_loc: 1 to 00000087
d193 1
a193 1
  DW_CFA_advance_loc: 1 to 00000088
d195 1
a195 1
  DW_CFA_advance_loc: 1 to 00000089
d197 1
a197 1
  DW_CFA_advance_loc: 1 to 0000008a
d199 1
a199 1
  DW_CFA_advance_loc: 1 to 0000008b
d201 1
a201 1
  DW_CFA_advance_loc: 1 to 0000008c
d203 1
a203 1
  DW_CFA_advance_loc: 1 to 0000008d
d205 1
a205 1
  DW_CFA_advance_loc: 1 to 0000008e
d207 1
a207 1
  DW_CFA_advance_loc: 1 to 0000008f
d209 1
a209 1
  DW_CFA_advance_loc: 1 to 00000090
d211 1
a211 1
  DW_CFA_advance_loc: 1 to 00000091
d213 1
a213 1
  DW_CFA_advance_loc: 1 to 00000092
d215 1
a215 1
  DW_CFA_advance_loc: 1 to 00000093
d217 1
a217 1
  DW_CFA_advance_loc: 1 to 00000094
d219 1
a219 1
  DW_CFA_advance_loc: 1 to 00000095
d221 1
a221 1
  DW_CFA_advance_loc: 1 to 00000096
d223 1
a223 1
  DW_CFA_advance_loc: 1 to 00000097
d225 1
a225 1
  DW_CFA_advance_loc: 1 to 00000098
d227 1
a227 1
  DW_CFA_advance_loc: 1 to 00000099
d229 1
a229 1
  DW_CFA_advance_loc: 1 to 0000009a
d231 1
a231 1
  DW_CFA_advance_loc: 1 to 0000009b
d233 1
a233 1
  DW_CFA_advance_loc: 1 to 0000009c
d235 1
a235 1
  DW_CFA_advance_loc: 1 to 0000009d
d237 1
a237 1
  DW_CFA_advance_loc: 1 to 0000009e
d239 1
a239 1
  DW_CFA_advance_loc: 1 to 0000009f
d241 1
a241 1
  DW_CFA_advance_loc: 1 to 000000a0
d243 1
a243 1
  DW_CFA_advance_loc: 1 to 000000a1
d245 1
a245 1
  DW_CFA_advance_loc: 1 to 000000a2
d247 1
a247 1
  DW_CFA_advance_loc: 1 to 000000a3
d249 1
a249 1
  DW_CFA_advance_loc: 1 to 000000a4
d251 1
a251 1
  DW_CFA_advance_loc: 1 to 000000a5
d253 1
a253 1
  DW_CFA_advance_loc: 1 to 000000a6
d255 1
a255 1
  DW_CFA_advance_loc: 1 to 000000a7
d257 1
a257 1
  DW_CFA_advance_loc: 1 to 000000a8
d259 1
a259 1
  DW_CFA_advance_loc: 1 to 000000a9
d261 1
a261 1
  DW_CFA_advance_loc: 1 to 000000aa
d263 1
a263 1
  DW_CFA_advance_loc: 1 to 000000ab
d265 1
a265 1
  DW_CFA_advance_loc: 1 to 000000ac
d267 1
a267 1
  DW_CFA_advance_loc: 1 to 000000ad
d269 1
a269 1
  DW_CFA_advance_loc: 1 to 000000ae
@


1.15
log
@2011-02-10  Kai Tietz  <kai.tietz@@onevision.com>

        * gas/cfi/cfi-x86_64.d: Adjust for x64 PE+.
@
text
@d98 1
a98 1
000000e8 000000c[8c] 00000018 FDE cie=000000d4 pc=00000058..00000097
d223 52
@


1.14
log
@	* dw2gencfi.c (TC_DWARF2_EMIT_OFFSET): Provide default.
	(output_fde): Use it.  Make sure to fully init exp before using it.
testsuite/
	* gas/cfi/cfi-common-1.d: Use objdump instead of readelf to dump.
	* gas/cfi/cfi-common-2.d, gas/cfi/cfi-common-3.d,
	gas/cfi/cfi-common-4.d, gas/cfi/cfi-common-6.d,
	gas/cfi/cfi-common-7.d, gas/cfi/cfi-x86_64.d: Likewise.
	* gas/cfi/cfi-x86_64.s: Remove .type directives.
	* gas/cfi/cfi.exp: Run for pecoff objects too.
	* gas/cfi/reloc-pe-i386.d, gas/cfi/reloc-pe-i386.s: New test.
@
text
@d11 1
a11 1
  Return address column: 16
d15 1
a15 1
  DW_CFA_offset: r16 \(rip\) at cfa-8
d59 1
a59 1
  Return address column: 16
d92 1
a92 1
  Return address column: 16
@


1.13
log
@            * dwarf.c (display_debug_frames): Change text for uniformity.
            (process_debug_info): Likewise.
            (display_debug_aranges): Likewise.  Indent address output.
            (display_debug_pubnames): Print offset in hex.

            * binutils-all/objdump.W: Update.

            * gas/cfi/cfi-alpha-1.d, gas/cfi/cfi-alpha-3.d,
            gas/cfi/cfi-arm-1.d, gas/cfi/cfi-common-1.d,
            gas/cfi/cfi-common-2.d, gas/cfi/cfi-common-3.d,
            gas/cfi/cfi-common-4.d, gas/cfi/cfi-common-5.d,
            gas/cfi/cfi-common-6.d, gas/cfi/cfi-hppa-1.d,
            gas/cfi/cfi-i386-2.d, gas/cfi/cfi-i386.d, gas/cfi/cfi-m68k.d,
            gas/cfi/cfi-mips-1.d, gas/cfi/cfi-ppc-1.d, gas/cfi/cfi-s390-1.d,
            gas/cfi/cfi-s390x-1.d, gas/cfi/cfi-sh-1.d, gas/cfi/cfi-sparc-1.d,
            gas/cfi/cfi-sparc64-1.d, gas/cfi/cfi-x86_64.d: Update for readelf
            change.

            * ld-elf/eh1.d, ld-elf/eh2.d, ld-elf/eh3.d, ld-elf/eh4.d,
            ld-elf/eh5.d, ld-elf/eh6.d, ld-mips-elf/eh-frame1-n32.d,
            ld-mips-elf/eh-frame1-n64.d, ld-mips-elf/eh-frame2-n32.d,
            ld-mips-elf/eh-frame2-n64.d, ld-mips-elf/eh-frame3.d,
            ld-mips-elf/eh-frame4.d: Update for readelf change.
@
text
@d1 1
a1 1
#readelf: -wf
d3 1
d98 1
a98 1
000000e8 000000cc 00000018 FDE cie=000000d4 pc=00000058..00000097
d224 1
a224 5
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

@


1.12
log
@binutils/

2008-08-01  H.J. Lu  <hongjiu.lu@@intel.com>

	* dwarf.c (dwarf_regnames_i386): Remove AVX registers.
	(dwarf_regnames_x86_64): Likewise.

gas/testsuite/

2008-08-01  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/cfi/cfi-i386.s: Remove tests for AVX register maps.
	* gas/cfi/cfi-x86_64.s: Likewise.

	* gas/cfi/cfi-i386.d: Updated.
	* gas/cfi/cfi-x86_64.d: Likewise.

opcodes/

2008-08-01  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386-reg.tbl: Use Dw2Inval on AVX registers.
	* i386-tbl.h: Regenerated.
@
text
@d3 1
a3 1
The section .eh_frame contains:
@


1.11
log
@binutils/

2008-04-03  H.J. Lu  <hongjiu.lu@@intel.com>

	* dwarf.c (dwarf_regnames_i386): Add AVX registers.
	(dwarf_regnames_x86_64): Likewise.

gas/

2008-04-03  H.J. Lu  <hongjiu.lu@@intel.com>

	* NEWS: Mention AES, CLMUL, AVX/FMA and -msse2avx.

	* doc/c-i386.texi: Add avx, aes, clmul and fma to -march=.
	Document -msse2avx, .avx, .aes, .clmul and .fma.

	* config/tc-i386.c (YMMWORD_MNEM_SUFFIX): New.
	(vex_prefix): Likewise.
	(sse2avx): Likewise.
	(CPU_FLAGS_ARCH_MATCH): Likewise.
	(CPU_FLAGS_64BIT_MATCH): Likewise.
	(CPU_FLAGS_32BIT_MATCH): Likewise.
	(CPU_FLAGS_PERFECT_MATCH): Likewise.
	(regymm): Likewise.
	(vex_imm4): Likewise.
	(fits_in_imm4): Likewise.
	(build_vex_prefix): Likewise.
	(VEX_check_operands): Likewise.
	(bad_implicit_operand): Likewise.
	(OPTION_MSSE2AVX): Likewise.
	(T_YMMWORD): Likewise.
	(_i386_insn): Add vex.
	(cpu_arch): Add .avx, .aes, .clmul and .fma.
	(cpu_flags_match): Changed to take a pointer to const template.
	Enable encoding SSE instructions with VEX prefix for -msse2avx.
	(match_mem_size): Also check ymmword.
	(operand_type_match): Clear ymmword.
	(md_begin): Allow '_' in mnemonic.
	(type_names): Add OPERAND_TYPE_VEX_IMM4.
	(process_immext): Update assert.
	(md_assemble): Don't call process_immext if sse2avx and immext
	are true.  Call build_vex_prefix if vex is true.
	(parse_insn): Updated for cpu_flags_match.
	(swap_operands): Handle 5 operands.
	(match_template): Handle 5 operands. Updated for cpu_flags_match.
	Check regymm.  Call VEX_check_operands. Handle YMMWORD_MNEM_SUFFIX.
	(process_suffix): Handle YMMWORD_MNEM_SUFFIX.
	(check_byte_reg): Check regymm.
	(process_operands): Duplicate the destination register for
	-msse2avx if needed.
	(build_modrm_byte): Updated for instructions with VEX encoding.
	(output_insn): Output VEX prefix if needed.
	(md_longopts): Add msse2avx.
	(md_parse_option): Handle OPTION_MSSE2AVX.
	(md_show_usage): Add avx, aes, clmul, fma and -msse2avx.
	(intel_e09): Support YMMWORD.
	(intel_e11): Likewise.
	(intel_get_token): Likewise.

gas/testsuite/

2008-04-03  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/i386/i386.exp: Run aes, aes-intel, x86-64-aes,
	x86-64-aes-intel, avx, avx-intel, inval-avx, x86-64-avx,
	x86-64-avx-intel and x86-64-inval-avx.

	* gas/cfi/cfi-i386.s: Add tests for AVX register maps.
	* gas/cfi/cfi-x86_64.s: Likewise.

	* gas/i386/aes.d: New.
	* gas/i386/aes.s: Likewise.
	* gas/i386/aes-intel.d: Likewise.
	* gas/i386/avx.d: Likewise.
	* gas/i386/avx.s: Likewise.
	* gas/i386/avx-intel.d: Likewise.
	* gas/i386/clmul.d: Likewise.
	* gas/i386/clmul-intel.d: Likewise.
	* gas/i386/clmul.s: Likewise.
	* gas/i386/i386.exp: Likewise.
	* gas/i386/inval-avx.l: Likewise.
	* gas/i386/inval-avx.s: Likewise.
	* gas/i386/sse2avx.d: Likewise.
	* gas/i386/sse2avx.s: Likewise.
	* gas/i386/x86-64-aes.d: Likewise.
	* gas/i386/x86-64-aes.s: Likewise.
	* gas/i386/x86-64-aes-intel.d: Likewise.
	* gas/i386/x86-64-avx.d: Likewise.
	* gas/i386/x86-64-avx.s: Likewise.
	* gas/i386/x86-64-avx-intel.d: Likewise.
	* gas/i386/x86-64-clmul.d: Likewise.
	* gas/i386/x86-64-clmul-intel.d: Likewise.
	* gas/i386/x86-64-clmul.s: Likewise.
	* gas/i386/x86-64-inval-avx.l: Likewise.
	* gas/i386/x86-64-inval-avx.s: Likewise.
	* gas/i386/x86-64-sse2avx.d: Likewise.
	* gas/i386/x86-64-sse2avx.s: Likewise.

	* gas/i386/arch-10.s: Add tests for AVX, AES, CLMUL and FMA.
	* gas/i386/x86-64-arch-2.s: Likewise.

	* gas/i386/rexw.s: Add AVX tests.

	* gas/i386/x86-64-opcode-inval.s: Remove lds/les test.

	* gas/cfi/cfi-i386.d: Updated.
	* gas/cfi/cfi-x86_64.d: Likewise.
	* gas/i386/arch-10.d:  Likewise.
	* gas/i386/arch-10-1.l: Likewise.
	* gas/i386/arch-10-2.l: Likewise.
	* gas/i386/arch-10-3.l: Likewise.
	* gas/i386/arch-10-4.l: Likewise.
	* gas/i386/rexw.d: Likewise.
	* gas/i386/x86-64-arch-2.d: Likewise.
	* gas/i386/x86-64-opcode-inval.d: Likewise.
	* gas/i386/x86-64-opcode-inval-intel.d: Likewise.

include/opcode/

2008-04-03  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386.h (MAX_OPERANDS): Set to 5.
	(MAX_MNEM_SIZE): Changed to 20.

opcodes/

2008-04-03  H.J. Lu  <hongjiu.lu@@intel.com>

	* i386-dis.c (OP_E_register): New.
	(OP_E_memory): Likewise.
	(OP_VEX): Likewise.
	(OP_EX_Vex): Likewise.
	(OP_EX_VexW): Likewise.
	(OP_XMM_Vex): Likewise.
	(OP_XMM_VexW): Likewise.
	(OP_REG_VexI4): Likewise.
	(PCLMUL_Fixup): Likewise.
	(VEXI4_Fixup): Likewise.
	(VZERO_Fixup): Likewise.
	(VCMP_Fixup): Likewise.
	(VPERMIL2_Fixup): Likewise.
	(rex_original): Likewise.
	(rex_ignored): Likewise.
	(Mxmm): Likewise.
	(XMM): Likewise.
	(EXxmm): Likewise.
	(EXxmmq): Likewise.
	(EXymmq): Likewise.
	(Vex): Likewise.
	(Vex128): Likewise.
	(Vex256): Likewise.
	(VexI4): Likewise.
	(EXdVex): Likewise.
	(EXqVex): Likewise.
	(EXVexW): Likewise.
	(EXdVexW): Likewise.
	(EXqVexW): Likewise.
	(XMVex): Likewise.
	(XMVexW): Likewise.
	(XMVexI4): Likewise.
	(PCLMUL): Likewise.
	(VZERO): Likewise.
	(VCMP): Likewise.
	(VPERMIL2): Likewise.
	(xmm_mode): Likewise.
	(xmmq_mode): Likewise.
	(ymmq_mode): Likewise.
	(vex_mode): Likewise.
	(vex128_mode): Likewise.
	(vex256_mode): Likewise.
	(USE_VEX_C4_TABLE): Likewise.
	(USE_VEX_C5_TABLE): Likewise.
	(USE_VEX_LEN_TABLE): Likewise.
	(VEX_C4_TABLE): Likewise.
	(VEX_C5_TABLE): Likewise.
	(VEX_LEN_TABLE): Likewise.
	(REG_VEX_XX): Likewise.
	(MOD_VEX_XXX): Likewise.
	(PREFIX_0F38DB..PREFIX_0F38DF): Likewise.
	(PREFIX_0F3A44): Likewise.
	(PREFIX_0F3ADF): Likewise.
	(PREFIX_VEX_XXX): Likewise.
	(VEX_OF): Likewise.
	(VEX_OF38): Likewise.
	(VEX_OF3A): Likewise.
	(VEX_LEN_XXX): Likewise.
	(vex): Likewise.
	(need_vex): Likewise.
	(need_vex_reg): Likewise.
	(vex_i4_done): Likewise.
	(vex_table): Likewise.
	(vex_len_table): Likewise.
	(OP_REG_VexI4): Likewise.
	(vex_cmp_op): Likewise.
	(pclmul_op): Likewise.
	(vpermil2_op): Likewise.
	(m_mode): Updated.
	(es_reg): Likewise.
	(PREFIX_0F38F0): Likewise.
	(PREFIX_0F3A60): Likewise.
	(reg_table): Add REG_VEX_71...REG_VEX_73 and REG_VEX_AE.
	(prefix_table): Add PREFIX_0F38DB..PREFIX_0F38DF, PREFIX_0F3ADF
	and PREFIX_VEX_XXX entries.
	(x86_64_table): Use VEX_C4_TABLE and VEX_C5_TABLE.
	(three_byte_table): Use PREFIX_0F38DB..PREFIX_0F38DF and
	PREFIX_0F3ADF.
	(mod_table): Use VEX_C4_TABLE, VEX_C5_TABLE and VEX_LEN_TABLE.
	Add MOD_VEX_XXX entries.
	(ckprefix): Initialize rex_original and rex_ignored.  Store the
	REX byte in rex_original.
	(get_valid_dis386): Handle the implicit prefix in VEX prefix
	bytes and USE_VEX_LEN_TABLE/USE_VEX_C4_TABLE/USE_VEX_C5_TABLE.
	(print_insn): Set need_vex/need_vex_reg/vex_i4_done to 0 before
	calling get_valid_dis386.  Use rex_original and rex_ignored when
	printing out REX.
	(putop): Handle "XY".
	(intel_operand_size): Handle VEX, xmm_mode, xmmq_mode and
	ymmq_mode.
	(OP_E_extended): Updated to use OP_E_register and
	OP_E_memory.
	(OP_XMM): Handle VEX.
	(OP_EX): Likewise.
	(XMM_Fixup): Likewise.
	(CMP_Fixup): Use ARRAY_SIZE.

	* i386-gen.c (cpu_flag_init): Add CpuAES, CPU_CLMUL_FLAGS,
	CPU_FMA_FLAGS and CPU_AVX_FLAGS.
	(operand_type_init): Add OPERAND_TYPE_REGYMM and
	OPERAND_TYPE_VEX_IMM4.
	(cpu_flags): Add CpuAVX, CpuAES, CpuCLMUL and CpuFMA.
	(opcode_modifiers): Add Implicit1stXmm0, Vex, Vex256, VexNDD,
	VexNDS, VexW0, VexW1, Vex0F, Vex0F38, Vex0F3A, Vex3Sources,
	VexImmExt and SSE2AVX.
	(operand_types): Add RegYMM, Ymmword and Vex_Imm4.

	* i386-opc.h (CpuAVX): New.
	(CpuAES): Likewise.
	(CpuCLMUL): Likewise.
	(CpuFMA): Likewise.
	(Vex): Likewise.
	(Vex256): Likewise.
	(VexNDS): Likewise.
	(VexNDD): Likewise.
	(VexW0): Likewise.
	(VexW1): Likewise.
	(Vex0F): Likewise.
	(Vex0F38): Likewise.
	(Vex0F3A): Likewise.
	(Vex3Sources): Likewise.
	(VexImmExt): Likewise.
	(SSE2AVX): Likewise.
	(RegYMM): Likewise.
	(Ymmword): Likewise.
	(Vex_Imm4): Likewise.
	(Implicit1stXmm0): Likewise.
	(CpuXsave): Updated.
	(CpuLM): Likewise.
	(ByteOkIntel): Likewise.
	(OldGcc): Likewise.
	(Control): Likewise.
	(Unspecified): Likewise.
	(OTMax): Likewise.
	(i386_cpu_flags): Add cpuavx, cpuaes, cpuclmul and cpufma.
	(i386_opcode_modifier): Add implicit1stxmm0, vex, vex256,
	vexnds, vexndd, vexw0, vexw1, vex0f, vex0f38, vex0f3a,
	vex3sources, veximmext and sse2avx.
	(i386_operand_type): Add regymm, ymmword and vex_imm4.

	* i386-opc.tbl: Add AES, CLMUL, AVX and FMA new instructions.

	* i386-reg.tbl: Add AVX registers, ymm0..ymm15.

	* i386-init.h: Regenerated.
	* i386-tbl.h: Likewise.
@
text
@d97 1
a97 1
000000e8 000000fc 00000018 FDE cie=000000d4 pc=00000058..000000a7
a221 32
  DW_CFA_advance_loc: 1 to 00000097
  DW_CFA_undefined: r70 \(ymm0\)
  DW_CFA_advance_loc: 1 to 00000098
  DW_CFA_undefined: r71 \(ymm1\)
  DW_CFA_advance_loc: 1 to 00000099
  DW_CFA_undefined: r72 \(ymm2\)
  DW_CFA_advance_loc: 1 to 0000009a
  DW_CFA_undefined: r73 \(ymm3\)
  DW_CFA_advance_loc: 1 to 0000009b
  DW_CFA_undefined: r74 \(ymm4\)
  DW_CFA_advance_loc: 1 to 0000009c
  DW_CFA_undefined: r75 \(ymm5\)
  DW_CFA_advance_loc: 1 to 0000009d
  DW_CFA_undefined: r76 \(ymm6\)
  DW_CFA_advance_loc: 1 to 0000009e
  DW_CFA_undefined: r77 \(ymm7\)
  DW_CFA_advance_loc: 1 to 0000009f
  DW_CFA_undefined: r78 \(ymm8\)
  DW_CFA_advance_loc: 1 to 000000a0
  DW_CFA_undefined: r79 \(ymm9\)
  DW_CFA_advance_loc: 1 to 000000a1
  DW_CFA_undefined: r80 \(ymm10\)
  DW_CFA_advance_loc: 1 to 000000a2
  DW_CFA_undefined: r81 \(ymm11\)
  DW_CFA_advance_loc: 1 to 000000a3
  DW_CFA_undefined: r82 \(ymm12\)
  DW_CFA_advance_loc: 1 to 000000a4
  DW_CFA_undefined: r83 \(ymm13\)
  DW_CFA_advance_loc: 1 to 000000a5
  DW_CFA_undefined: r84 \(ymm14\)
  DW_CFA_advance_loc: 1 to 000000a6
  DW_CFA_undefined: r85 \(ymm15\)
a227 1
#pass
@


1.10
log
@gas/
2008-02-13  Jan Beulich  <jbeulich@@novell.com>

	* config/tc-i386.c (allow_pseudo_reg): New.
	(parse_real_register): Check for NULL just once. Allow all
	register table entries when allow_pseudo_reg is non-zero.
	Don't allow any registers without type when allow_pseudo_reg
	is zero.
	(tc_x86_regname_to_dw2regnum): Replace with ...
	(tc_x86_parse_to_dw2regnum): ... this.
	(tc_x86_frame_initial_instructions): Adjust for above change.
	* config/tc-i386.h (tc_regname_to_dw2regnum): Remove.
	(tc_parse_to_dw2regnum): New.
	(tc_x86_regname_to_dw2regnum): Replace with ...
	(tc_x86_parse_to_dw2regnum): ... this.
	* dw2gencfi.c (tc_parse_to_dw2regnum): New, broken out of ...
	(cfi_parse_reg): ... this. Use tc_parse_to_dw2regnum. Adjust
	error handling.

gas/testsuite/
2008-02-13  Jan Beulich  <jbeulich@@novell.com>

	* gas/cfi/cfi-i386.s: Add code testing use of all registers.
	Fix a few comments.
	* gas/cfi/cfi-x86_64.s: Likewise.
	* gas/cfi/cfi-i386.d, gas/cfi/cfi-x86_64.d: Adjust.

opcodes/
2008-02-13  Jan Beulich  <jbeulich@@novell.com>

	* i386-gen.c (process_i386_registers): Process new fields.
	* i386-opc.h (reg_entry): Shrink reg_flags and reg_num to
	unsigned char. Add dw2_regnum and Dw2Inval.
	* i386-reg.tbl: Provide initializers for dw2_regnum. Add pseudo
	register names.
	* i386-tbl.h: Re-generate.
@
text
@d97 1
a97 1
000000e8 000000cc 00000018 FDE cie=000000d4 pc=00000058..00000097
d222 32
d260 1
@


1.9
log
@binutils/

2008-01-28  H.J. Lu  <hongjiu.lu@@intel.com>

	* dwarf.c: Include "elf/common.h".
	(eh_addr_size): Changed to int.
	(dwarf_regnames_i386): New.
	(dwarf_regnames_x86_64): Likewise.
	(dwarf_regnames): Likewise.
	(dwarf_regnames_count): Likewise.
	(init_dwarf_regnames): Likewise.
	(regname): Likewise.
	(frame_display_row): Properly support different address size.
	Call regname to get register name.
	(display_debug_frames): Call regname to get register name.
	Display DW_CFA_def_cfa_register as DW_CFA_def_cfa_register
	instead of DW_CFA_def_cfa_reg.

	* dwarf.h (init_dwarf_regnames): New.

	* objdump.c: Include "elf-bfd.h".
	(dump_dwarf): Call init_dwarf_regnames on ELF input.

	* readelf.c (guess_is_rela): Change argument to int.
	(parse_args): Remove the undocumented upper case options for
	-wX.
	(process_file_header): Call init_dwarf_regnames if
	do_dwarf_register is true.

gas/testsuite/

2008-01-28  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/cfi/cfi-alpha-1.d: Replace DW_CFA_def_cfa_reg with
	DW_CFA_def_cfa_register.
	* gas/cfi/cfi-alpha-3.d: Likewise.
	* gas/cfi/cfi-hppa-1.d: Likewise.
	* gas/cfi/cfi-i386.d: Likewise.
	* gas/cfi/cfi-m68k.d: Likewise.
	* gas/cfi/cfi-mips-1.d: Likewise.
	* gas/cfi/cfi-sh-1.d: Likewise.
	* gas/cfi/cfi-sparc-1.d: Likewise.
	* gas/cfi/cfi-sparc64-1.d: Likewise.
	* gas/cfi/cfi-x86_64.d: Likewise.

	* gas/cfi/cfi-common-1.d: Updated for i386/x86-64 register
	names.
	* gas/cfi/cfi-common-2.d: Likewise.
	* gas/cfi/cfi-common-5.d: Likewise.
	* gas/cfi/cfi-i386.d: Likewise.
	* gas/cfi/cfi-x86_64.d: Likewise.

ld/testsuite/

2008-01-28  H.J. Lu  <hongjiu.lu@@intel.com>

	* ld-elf/eh1.d: Replace DW_CFA_def_cfa_reg with
	DW_CFA_def_cfa_register. Updated for i386/x86-64 register
	names.
	* ld-elf/eh2.d: Likewise.
	* ld-elf/eh3.d: Likewise.
	* ld-elf/eh4.d: Likewise.
	* ld-elf/eh5.d: Likewise.
@
text
@d63 1
a63 1
000000a4 00000030 00000018 FDE cie=00000090 pc=0000004d..00000058
d85 138
@


1.8
log
@2007-05-17  H.J. Lu  <hongjiu.lu@@intel.com>

	PR gas/4517
	2003-06-05  Michal Ludvig  <mludvig@@suse.cz>
	* as.texinfo: Document new directives: .cfi_restore,
	.cfi_undefined, .cfi_same_value, .cfi_return_column,
	.cfi_remember_state and .cfi_restore_state.

2007-05-17  H.J. Lu  <hongjiu.lu@@intel.com>

	2003-06-05  Michal Ludvig  <mludvig@@suse.cz>
	* testsuite/gas/cfi/cfi-x86_64.s: Test new directives
	and different writings of registers and numbers.
	* testsuite/gas/cfi/cfi-x86_64.d: Updated pattern to
	match the above change.
@
text
@d13 2
a14 2
  DW_CFA_def_cfa: r7 ofs 8
  DW_CFA_offset: r16 at cfa-8
d27 1
a27 1
  DW_CFA_offset: r6 at cfa-16
d29 1
a29 1
  DW_CFA_def_cfa_reg: r6
d31 1
a31 1
  DW_CFA_def_cfa: r7 ofs 8
d38 1
a38 1
  DW_CFA_def_cfa_reg: r8
d40 1
a40 1
  DW_CFA_def_cfa_reg: r7
d61 1
a61 1
  DW_CFA_def_cfa: r7 ofs 8
d67 1
a67 1
  DW_CFA_def_cfa_reg: r8
d71 1
a71 1
  DW_CFA_offset_extended_sf: r4 at cfa\+16
d73 1
a73 1
  DW_CFA_register: r8 in r9
d77 1
a77 1
  DW_CFA_restore: r6
d79 1
a79 1
  DW_CFA_undefined: r16
d81 1
a81 1
  DW_CFA_same_value: r3
@


1.7
log
@binutils/
	* readelf.c (debug_apply_rela_addends): New function, extracted from..
	(display_debug_info): ..here.
	(display_debug_frames): Call debug_apply_rela_addends.  Don't do
	DW_EH_PE_pcrel adjustment for ET_REL.
gas/testsuite/
	* gas/cfi/cfi-alpha-1.d: Adjust for readelf fix.
	* gas/cfi/cfi-alpha-3.d: Likewise.
	* gas/cfi/cfi-i386.d: Likewise.
	* gas/cfi/cfi-m68k.d: Likewise.
	* gas/cfi/cfi-ppc-1.d: Likewise.
	* gas/cfi/cfi-s390-1.d: Likewise.
	* gas/cfi/cfi-s390x-1.d: Likewise.
	* gas/cfi/cfi-sh-1.d: Likewise.
	* gas/cfi/cfi-sparc-1.d: Likewise.
	* gas/cfi/cfi-sparc64-1.d: Likewise.
	* gas/cfi/cfi-x86_64.d: Likewise.
@
text
@d38 1
a38 1
  DW_CFA_def_cfa_reg: r12
d53 37
@


1.6
log
@For DefaultSize instructions, don't guess a 'q'	suffix if the instruction
doesn't support it.
@
text
@d18 2
a19 2
00000018 00000014 0000001c FDE cie=00000000 pc=00000020..00000034
  DW_CFA_advance_loc: 7 to 00000027
d21 1
a21 1
  DW_CFA_advance_loc: 12 to 00000033
d24 2
a25 2
00000030 0000001c 00000034 FDE cie=00000000 pc=00000038..00000046
  DW_CFA_advance_loc: 1 to 00000039
d28 1
a28 1
  DW_CFA_advance_loc: 3 to 0000003c
d30 1
a30 1
  DW_CFA_advance_loc: 9 to 00000045
d36 2
a37 2
00000050 00000014 00000054 FDE cie=00000000 pc=00000058..0000006b
  DW_CFA_advance_loc: 3 to 0000005b
d39 1
a39 1
  DW_CFA_advance_loc: 15 to 0000006a
d43 1
a43 1
00000068 00000010 0000006c FDE cie=00000000 pc=00000070..00000076
d48 1
a48 1
0000007c 00000010 00000080 FDE cie=00000000 pc=00000084..00000096
@


1.5
log
@	* gas/cfi/cfi-x86_64.d: Adjust offsets.
@
text
@d24 1
a24 1
00000030 0000001c 00000034 FDE cie=00000000 pc=00000038..00000047
d30 1
a30 1
  DW_CFA_advance_loc: 10 to 00000046
@


1.4
log
@	* dw2gencfi.c (EH_FRAME_ALIGNMENT): Define if not defined.
	(output_cie): Don't pad.
	(output_fde): Add align argument.  Pad to align if not 0.
	(cfi_finish): Set .eh_frame alignment to EH_FRAME_ALIGNMENT.
	Pad just last FDE to EH_FRAME_ALIGNMENT.

	* gas/cfi/cfi-i386.d: Regenerated.
	* gas/cfi/cfi-common-1.d: Regenerated.
	* gas/cfi/cfi-common-2.d: Regenerated.
	* gas/cfi/cfi-common-3.d: Regenerated.
	* gas/cfi/cfi-x86_64.d: Regenerated.
	* gas/cfi/cfi-alpha-1.d: Regenerated.
	* gas/cfi/cfi-alpha-2.d: Regenerated.
	* gas/cfi/cfi-alpha-3.d: Regenerated.
@
text
@d5 1
a5 1
00000000 00000012 00000000 CIE
d15 2
d18 2
a19 2
00000016 00000014 0000001a FDE cie=00000000 pc=0000001e..00000032
  DW_CFA_advance_loc: 7 to 00000025
d21 1
a21 1
  DW_CFA_advance_loc: 12 to 00000031
d24 2
a25 2
0000002e 00000019 00000032 FDE cie=00000000 pc=00000036..00000045
  DW_CFA_advance_loc: 1 to 00000037
d28 1
a28 1
  DW_CFA_advance_loc: 3 to 0000003a
d30 1
a30 1
  DW_CFA_advance_loc: 10 to 00000044
d32 3
d36 2
a37 2
0000004b 00000013 0000004f FDE cie=00000000 pc=00000053..00000066
  DW_CFA_advance_loc: 3 to 00000056
d39 1
a39 1
  DW_CFA_advance_loc: 15 to 00000065
d41 1
d43 4
a46 1
00000062 0000000d 00000066 FDE cie=00000000 pc=0000006a..00000070
d48 1
a48 2
00000073 00000011 00000077 FDE cie=00000000 pc=0000007b..0000008d
  DW_CFA_nop
@


1.4.6.1
log
@Merge to 2.15 branch.
@
text
@d5 1
a5 1
00000000 00000014 00000000 CIE
a14 2
  DW_CFA_nop
  DW_CFA_nop
d16 2
a17 2
00000018 00000014 0000001c FDE cie=00000000 pc=00000020..00000034
  DW_CFA_advance_loc: 7 to 00000027
d19 1
a19 1
  DW_CFA_advance_loc: 12 to 00000033
d22 2
a23 2
00000030 0000001c 00000034 FDE cie=00000000 pc=00000038..00000047
  DW_CFA_advance_loc: 1 to 00000039
d26 1
a26 1
  DW_CFA_advance_loc: 3 to 0000003c
d28 1
a28 1
  DW_CFA_advance_loc: 10 to 00000046
a29 3
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
d31 2
a32 2
00000050 00000014 00000054 FDE cie=00000000 pc=00000058..0000006b
  DW_CFA_advance_loc: 3 to 0000005b
d34 1
a34 1
  DW_CFA_advance_loc: 15 to 0000006a
a35 1
  DW_CFA_nop
d37 3
a39 2
00000068 00000010 0000006c FDE cie=00000000 pc=00000070..00000076
  DW_CFA_nop
a40 3
  DW_CFA_nop

0000007c 00000010 00000080 FDE cie=00000000 pc=00000084..00000096
@


1.3
log
@        * dw2gencfi.c, dw2gencfi.h: Rewrite from scratch.
        * as.c (main): Always call cfi_finish.
        * config/tc-i386.c (x86_dwarf2_return_column): New.
        (x86_cie_data_alignment): New.
        (md_begin): Set them.
        (tc_x86_cfi_init): Remove.
        (tc_x86_regname_to_dw2regnum): Fix 32-bit register numbers;
        return int, not unsigned long; don't as_bad here.
        (tc_x86_frame_initial_instructions): Streamline; use
        updated api.
        * config/tc-i386.h (tc_cfi_init): Remove.
        (DWARF2_DEFAULT_RETURN_COLUMN): New.
        (DWARF2_CIE_DATA_ALIGNMENT): New.

        * gas/cfi/cfi-i386.d: Update for dw2gencfi rewrite.
        * gas/cfi/cfi-x86_64.d: Likewise.
        * gas/cfi/cfi-i386-2.d: New.
        * gas/cfi/cfi-i386-2.s: New.
@
text
@d5 1
a5 1
00000000 00000014 00000000 CIE
a14 2
  DW_CFA_nop
  DW_CFA_nop
d16 2
a17 2
00000018 00000014 0000001c FDE cie=00000000 pc=00000020..00000034
  DW_CFA_advance_loc: 7 to 00000027
d19 1
a19 1
  DW_CFA_advance_loc: 12 to 00000033
d22 2
a23 2
00000030 0000001c 00000034 FDE cie=00000000 pc=00000038..00000047
  DW_CFA_advance_loc: 1 to 00000039
d26 1
a26 1
  DW_CFA_advance_loc: 3 to 0000003c
d28 1
a28 1
  DW_CFA_advance_loc: 10 to 00000046
a29 3
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
d31 2
a32 2
00000050 00000014 00000054 FDE cie=00000000 pc=00000058..0000006b
  DW_CFA_advance_loc: 3 to 0000005b
d34 1
a34 1
  DW_CFA_advance_loc: 15 to 0000006a
a35 1
  DW_CFA_nop
d37 3
a39 2
00000068 00000010 0000006c FDE cie=00000000 pc=00000070..00000076
  DW_CFA_nop
a40 3
  DW_CFA_nop

0000007c 00000010 00000080 FDE cie=00000000 pc=00000084..00000096
@


1.2
log
@2003-05-20  Michal Ludvig  <mludvig@@suse.cz>

	* as.c (main): Remove tc_cfi_init().
	* dw2gencfi.c (cfi_parse_arg): Allow regnames beginning
	with '%'.
	(cfi_pseudo_table): Add "cfi_register" entry.
	(cfi_make_insn): Handle CFA_register.
	(cfi_output_insn): Ditto.
	(dot_cfi): Ditto.
	(cfi_get_label): Add 'simple' modifier to .cfi_startproc.
	(dot_cfi_endproc): Reuse already emitted CIEs.
	* testsuite/gas/cfi/cfi-i386.d: New pattern.
	* testsuite/gas/cfi/cfi-x86-64.d: Ditto.
@
text
@a2 1

d7 1
a7 1
  Augmentation:          ""
d11 1
a16 4
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
d18 2
a19 2
00000018 0000001c 0000001c FDE cie=00000000 pc=00000000..00000014
  DW_CFA_advance_loc: 7 to 00000007
d21 1
a21 1
  DW_CFA_advance_loc: 12 to 00000013
a22 1
  DW_CFA_nop
d24 2
a25 2
00000038 00000024 0000003c FDE cie=00000000 pc=00000000..0000000f
  DW_CFA_advance_loc: 1 to 00000001
d28 1
a28 1
  DW_CFA_advance_loc: 3 to 00000004
d30 1
a30 1
  DW_CFA_advance_loc: 10 to 0000000e
a34 1
  DW_CFA_nop
d36 2
a37 2
00000060 0000001c 00000064 FDE cie=00000000 pc=00000000..00000013
  DW_CFA_advance_loc: 3 to 00000003
d39 1
a39 1
  DW_CFA_advance_loc: 15 to 00000012
a41 1
  DW_CFA_nop
d43 1
a43 6
00000080 0000001c 00000084 FDE cie=00000000 pc=00000000..00000006
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
d48 1
a48 6
000000a0 0000001c 000000a4 FDE cie=00000000 pc=00000000..00000012
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
@


1.1
log
@	* gas/cfi/cfi.exp: Testsuite for cfi machinery.
	* gas/cfi/cfi-x86_64.[sd]: Files for x86-64.
	* gas/cfi/cfi-i386.[sd]: Files for i386.
@
text
@d29 1
a29 17
00000038 00000014 00000000 CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 1
  Data alignment factor: -8
  Return address column: 16

  DW_CFA_def_cfa: r7 ofs 8
  DW_CFA_offset: r16 at cfa-8
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000050 00000024 0000001c FDE cie=00000038 pc=00000000..0000000f
d42 1
a42 17
00000078 00000014 00000000 CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 1
  Data alignment factor: -8
  Return address column: 16

  DW_CFA_def_cfa: r7 ofs 8
  DW_CFA_offset: r16 at cfa-8
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000090 0000001c 0000001c FDE cie=00000078 pc=00000000..00000013
d50 1
a50 17
000000b0 00000014 00000000 CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 1
  Data alignment factor: -8
  Return address column: 16

  DW_CFA_def_cfa: r7 ofs 8
  DW_CFA_offset: r16 at cfa-8
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

000000c8 0000001c 0000001c FDE cie=000000b0 pc=00000000..00000006
d60 1
a60 17
000000e8 00000014 00000000 CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 1
  Data alignment factor: -8
  Return address column: 16

  DW_CFA_def_cfa: r7 ofs 8
  DW_CFA_offset: r16 at cfa-8
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000100 0000001c 0000001c FDE cie=000000e8 pc=00000000..00000012
@

