head	1.29;
access;
symbols
	binutils-2_24-branch:1.29.0.2
	binutils-2_24-branchpoint:1.29
	binutils-2_21_1:1.25
	binutils-2_23_2:1.27.6.1
	binutils-2_23_1:1.27
	binutils-2_23:1.27
	binutils-2_23-branch:1.27.0.6
	binutils-2_23-branchpoint:1.27
	binutils-2_22_branch:1.27.0.4
	binutils-2_22:1.27
	binutils-2_22-branch:1.27.0.2
	binutils-2_22-branchpoint:1.27
	binutils-2_21:1.25
	binutils-2_21-branch:1.25.0.2
	binutils-2_21-branchpoint:1.25
	binutils-2_20_1:1.23
	binutils-2_20:1.23
	binutils-arc-20081103-branch:1.22.0.6
	binutils-arc-20081103-branchpoint:1.22
	binutils-2_20-branch:1.23.0.4
	binutils-2_20-branchpoint:1.23
	dje-cgen-play1-branch:1.23.0.2
	dje-cgen-play1-branchpoint:1.23
	arc-20081103-branch:1.22.0.4
	arc-20081103-branchpoint:1.22
	binutils-2_19_1:1.22
	binutils-2_19:1.22
	binutils-2_19-branch:1.22.0.2
	binutils-2_19-branchpoint:1.22
	binutils-2_18:1.19
	binutils-2_18-branch:1.19.0.2
	binutils-2_18-branchpoint:1.19
	binutils-csl-coldfire-4_1-32:1.14
	binutils-csl-sourcerygxx-4_1-32:1.14
	binutils-csl-innovasic-fido-3_4_4-33:1.14
	binutils-csl-sourcerygxx-3_4_4-32:1.13.2.1
	binutils-csl-coldfire-4_1-30:1.14
	binutils-csl-sourcerygxx-4_1-30:1.14
	binutils-csl-coldfire-4_1-28:1.14
	binutils-csl-sourcerygxx-4_1-29:1.14
	binutils-csl-sourcerygxx-4_1-28:1.14
	binutils-csl-arm-2006q3-27:1.14
	binutils-csl-sourcerygxx-4_1-27:1.14
	binutils-csl-arm-2006q3-26:1.14
	binutils-csl-sourcerygxx-4_1-26:1.14
	binutils-csl-sourcerygxx-4_1-25:1.14
	binutils-csl-sourcerygxx-4_1-24:1.14
	binutils-csl-sourcerygxx-4_1-23:1.14
	binutils-csl-sourcerygxx-4_1-21:1.14
	binutils-csl-arm-2006q3-21:1.14
	binutils-csl-sourcerygxx-4_1-22:1.14
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.14
	binutils-csl-sourcerygxx-4_1-20:1.14
	binutils-csl-arm-2006q3-19:1.14
	binutils-csl-sourcerygxx-4_1-19:1.14
	binutils-csl-sourcerygxx-4_1-18:1.14
	binutils-csl-renesas-4_1-9:1.14
	binutils-csl-sourcerygxx-3_4_4-25:1.13.2.1
	binutils-csl-renesas-4_1-8:1.14
	binutils-csl-renesas-4_1-7:1.14
	binutils-csl-renesas-4_1-6:1.14
	binutils-csl-sourcerygxx-4_1-17:1.14
	binutils-csl-sourcerygxx-4_1-14:1.14
	binutils-csl-sourcerygxx-4_1-15:1.14
	binutils-csl-sourcerygxx-4_1-13:1.14
	binutils-2_17:1.14
	binutils-csl-sourcerygxx-4_1-12:1.14
	binutils-csl-sourcerygxx-3_4_4-21:1.14
	binutils-csl-wrs-linux-3_4_4-24:1.13.2.1
	binutils-csl-wrs-linux-3_4_4-23:1.13.2.1
	binutils-csl-sourcerygxx-4_1-9:1.14
	binutils-csl-sourcerygxx-4_1-8:1.14
	binutils-csl-sourcerygxx-4_1-7:1.14
	binutils-csl-arm-2006q1-6:1.14
	binutils-csl-sourcerygxx-4_1-6:1.14
	binutils-csl-wrs-linux-3_4_4-22:1.13.2.1
	binutils-csl-coldfire-4_1-11:1.14
	binutils-csl-sourcerygxx-3_4_4-19:1.14
	binutils-csl-coldfire-4_1-10:1.14
	binutils-csl-sourcerygxx-4_1-5:1.14
	binutils-csl-sourcerygxx-4_1-4:1.14
	binutils-csl-wrs-linux-3_4_4-21:1.13.2.1
	binutils-csl-morpho-4_1-4:1.14
	binutils-csl-sourcerygxx-3_4_4-17:1.14
	binutils-csl-wrs-linux-3_4_4-20:1.13.2.1
	binutils-2_17-branch:1.14.0.4
	binutils-2_17-branchpoint:1.14
	binutils-csl-2_17-branch:1.14.0.2
	binutils-csl-2_17-branchpoint:1.14
	binutils-csl-gxxpro-3_4-branch:1.13.2.1.0.4
	binutils-csl-gxxpro-3_4-branchpoint:1.13.2.1
	binutils-2_16_1:1.13.2.1
	binutils-csl-arm-2005q1b:1.13.2.1
	binutils-2_16:1.13.2.1
	binutils-csl-arm-2005q1a:1.13.2.1
	binutils-csl-arm-2005q1-branch:1.13.2.1.0.2
	binutils-csl-arm-2005q1-branchpoint:1.13.2.1
	binutils-2_16-branch:1.13.0.2
	binutils-2_16-branchpoint:1.13
	csl-arm-2004-q3d:1.13
	csl-arm-2004-q3:1.11
	binutils-2_15:1.10.6.1
	binutils-2_15-branchpoint:1.10
	csl-arm-2004-q1a:1.11
	csl-arm-2004-q1:1.11
	binutils-2_15-branch:1.10.0.6
	cagney_bfdfile-20040213-branch:1.10.0.4
	cagney_bfdfile-20040213-branchpoint:1.10
	cagney_bigcore-20040122-branch:1.10.0.2
	cagney_bigcore-20040122-branchpoint:1.10
	csl-arm-2003-q4:1.10
	binutils_latest_snapshot:1.29;
locks; strict;
comment	@# @;


1.29
date	2012.12.17.16.55.50;	author nickc;	state Exp;
branches;
next	1.28;

1.28
date	2012.10.29.09.25.15;	author amodra;	state Exp;
branches;
next	1.27;

1.27
date	2011.04.06.17.09.52;	author jsm28;	state Exp;
branches
	1.27.6.1;
next	1.26;

1.26
date	2010.12.31.18.40.23;	author danglin;	state Exp;
branches;
next	1.25;

1.25
date	2010.10.22.08.13.59;	author nickc;	state Exp;
branches;
next	1.24;

1.24
date	2010.09.02.22.43.46;	author rth;	state Exp;
branches;
next	1.23;

1.23
date	2009.06.09.15.12.45;	author jakub;	state Exp;
branches;
next	1.22;

1.22
date	2008.08.21.19.49.02;	author rth;	state Exp;
branches;
next	1.21;

1.21
date	2008.02.18.21.05.07;	author hjl;	state Exp;
branches;
next	1.20;

1.20
date	2007.08.28.13.21.53;	author jsm28;	state Exp;
branches;
next	1.19;

1.19
date	2007.06.05.17.00.31;	author nickc;	state Exp;
branches;
next	1.18;

1.18
date	2006.11.10.14.15.52;	author ths;	state Exp;
branches;
next	1.17;

1.17
date	2006.11.03.07.29.37;	author jakub;	state Exp;
branches;
next	1.16;

1.16
date	2006.11.03.07.27.39;	author jakub;	state Exp;
branches;
next	1.15;

1.15
date	2006.10.30.01.10.46;	author tausq;	state Exp;
branches;
next	1.14;

1.14
date	2005.03.15.05.28.17;	author echristo;	state Exp;
branches;
next	1.13;

1.13
date	2004.10.25.12.26.04;	author nickc;	state Exp;
branches
	1.13.2.1;
next	1.12;

1.12
date	2004.10.07.15.18.11;	author nickc;	state Exp;
branches;
next	1.11;

1.11
date	2004.03.18.00.49.23;	author kkojima;	state Exp;
branches;
next	1.10;

1.10
date	2003.08.29.20.20.18;	author jakub;	state Exp;
branches
	1.10.6.1;
next	1.9;

1.9
date	2003.08.08.14.46.41;	author schwab;	state Exp;
branches;
next	1.8;

1.8
date	2003.07.10.16.46.38;	author jakub;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.11.23.16.58;	author rth;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.10.13.31.59;	author amodra;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.08.03.59.44;	author rth;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.05.03.27.03;	author rth;	state Exp;
branches;
next	1.3;

1.3
date	2003.05.31.19.36.45;	author rth;	state Exp;
branches;
next	1.2;

1.2
date	2003.05.30.03.01.12;	author rth;	state Exp;
branches;
next	1.1;

1.1
date	2003.05.20.08.01.19;	author amodra;	state Exp;
branches;
next	;

1.27.6.1
date	2013.01.21.13.48.45;	author amodra;	state Exp;
branches;
next	;

1.13.2.1
date	2005.03.15.05.37.50;	author echristo;	state Exp;
branches;
next	;

1.10.6.1
date	2004.03.18.01.17.33;	author kkojima;	state Exp;
branches;
next	;


desc
@@


1.29
log
@Add copyright notices
@
text
@# Copyright 2012
# Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.  

if { ![is_elf_format] && ![is_pecoff_format] } then {
    return
}

proc gas_x86_64_check { } {
    global NM
    global NMFLAGS

    set status [gas_host_run "$NM $NMFLAGS --help" ""]
    return [regexp "targets:.*x86-64" [lindex $status 1]];
}

proc gas_x86_32_check { } {
    global NM
    global NMFLAGS

    set status [gas_host_run "$NM $NMFLAGS --help" ""]
    return [regexp "targets:.*i386" [lindex $status 1]];
}

if  { [istarget "i*86-*-*"] || [istarget "x86_64-*-*"] } then {

    global ASFLAGS
    set old_ASFLAGS "$ASFLAGS"

    if { [gas_x86_64_check] } then {
	set ASFLAGS "$ASFLAGS --64"
	run_dump_test "cfi-x86_64"
	set ASFLAGS "$old_ASFLAGS"
    }

    if { [gas_x86_32_check] }  then {
	set ASFLAGS "$ASFLAGS --32"
	run_dump_test "cfi-i386"
	set ASFLAGS "$old_ASFLAGS"
    }

    if { [is_pecoff_format] } then {
	run_dump_test "reloc-pe-i386"
    }

} elseif { [istarget alpha*-*-*] } then {
    run_dump_test "cfi-alpha-1"
    run_dump_test "cfi-alpha-2"
    run_dump_test "cfi-alpha-3"

} elseif { [istarget powerpc*-*-*] } then {
    run_dump_test "cfi-ppc-1"

} elseif { [istarget s390*-*-*] } then {
    run_dump_test "cfi-s390-1"
    if { [istarget s390x*-*-*] } then {
	run_dump_test "cfi-s390x-1"
    }

} elseif { [istarget "m68*-*"] } then {
    run_dump_test "cfi-m68k"

} elseif { [istarget sparc*-*-*] } then {
    global NM
    global NMFLAGS

    set nm_status [gas_host_run "$NM $NMFLAGS --help" ""]
    run_dump_test "cfi-sparc-1"
    if { [regexp "elf64\[_-\]sparc" [lindex $nm_status 1]] } then {
	run_dump_test "cfi-sparc64-1"
    }

} elseif [istarget "sh*-*"] then {
    if { [istarget sh64*-*-*] || [istarget sh5*-*-*] } then {
    } else {
	run_dump_test "cfi-sh-1"
    }

} elseif { [istarget "arm*-*"] } then {
    # Only ELF based ARM targets support CFI.
    if { [is_pecoff_format] } then {
	return
    }
    run_dump_test "cfi-arm-1"

} elseif { [istarget "mips*-*"] } then {
    run_dump_test "cfi-mips-1"
} elseif { [istarget "hppa*-linux*"] } then {
    run_dump_test "cfi-hppa-1"
} else {
    return
}

run_list_test "cfi-diag-1" ""

# HPPA64 uses 64-bit relocations, which results in all of the dump
# offset numbers not matching up.
if { ![istarget "hppa64*-*"] } then {
  run_dump_test "cfi-common-1"
  run_dump_test "cfi-common-2"
  run_dump_test "cfi-common-3"
  run_dump_test "cfi-common-4"
  if { ![is_pecoff_format] } then {
    # This test uses .subsection/.previous which are elf-specific.
    run_dump_test "cfi-common-5"
  }
  # Some targets don't support PC relative cfi directives
  if { ![istarget "mips*-*"] &&
       !([istarget powerpc*-*-*] && [is_pecoff_format]) } then {
    run_dump_test "cfi-common-6"
  }
  run_dump_test "cfi-common-7"
}
@


1.28
log
@	* gas/cfi/cfi.exp: Remove redundant ppc test.  Exclude
	powerpc-pe targets from cfi-common-6 test.
	* gas/cfi/cfi-ppc-1.d: Use objdump to handle pe.
	* gas/cfi/cfi-ppc-1.s: Don't use .type and .size.
	* gas/ppc/ppc.exp: Exclude various tests for powerpc-pe.  Exclude
	vle tests for le targets.
	* gas/ppc/476.d, * gas/ppc/476.s: Update for le output.  Use .text
	rather than section directive with quotes.
	* gas/ppc/a2.d,	* gas/ppc/a2.s: Likewise.
	* gas/ppc/altivec.d, * gas/ppc/altivec.s: Likewise.
	* gas/ppc/altivec2.d: Likewise.
	* gas/ppc/altivec_and_spe.d: Likewise.
	* gas/ppc/astest.d: Likewise.
	* gas/ppc/astest2.d: Likewise.
	* gas/ppc/astest2_64.d: Likewise.
	* gas/ppc/astest64.d: Likewise.
	* gas/ppc/booke.d, * gas/ppc/booke.s: Likewise.
	* gas/ppc/cell.d, * gas/ppc/cell.s: Likewise.
	* gas/ppc/common.d, * gas/ppc/common.s: Likewise.
	* gas/ppc/e500.d, * gas/ppc/e500.s: Likewise.
	* gas/ppc/e500mc.d, * gas/ppc/e500mc.s: Likewise.
	* gas/ppc/e500mc64_nop.d, * gas/ppc/e500mc64_nop.s: Likewise.
	* gas/ppc/e5500_nop.d, * gas/ppc/e5500_nop.s: Likewise.
	* gas/ppc/e6500.d, * gas/ppc/e6500.s: Likewise.
	* gas/ppc/e6500_nop.d, * gas/ppc/e6500_nop.s: Likewise.
	* gas/ppc/machine.d: Likewise.
	* gas/ppc/power4.d, * gas/ppc/power4.s: Likewise.
	* gas/ppc/power4_32.d, * gas/ppc/power4_32.s: Likewise.
	* gas/ppc/power6.d, * gas/ppc/power6.s: Likewise.
	* gas/ppc/power7.d, * gas/ppc/power7.s: Likewise.
	* gas/ppc/ppc750ps.d, * gas/ppc/ppc750ps.s: Likewise.
	* gas/ppc/regnames.d: Likewise.
	* gas/ppc/simpshft.d: Likewise.
	* gas/ppc/test1elf32.d: Likewise.
	* gas/ppc/test1elf64.d: Likewise.
	* gas/ppc/titan.d, * gas/ppc/titan.s: Likewise.
	* gas/ppc/vle-reloc.s: Likewise.
	* gas/ppc/vle-simple-1.s: Likewise.
	* gas/ppc/vle-simple-2.s: Likewise.
	* gas/ppc/vle-simple-3.s: Likewise.
	* gas/ppc/vle-simple-4.s: Likewise.
	* gas/ppc/vle-simple-5.s: Likewise.
	* gas/ppc/vle-simple-6.s: Likewise.
	* gas/ppc/vle.s: Likewise.
	* gas/ppc/vsx.d, * gas/ppc/vsx.s: Likewise.
@
text
@d1 17
@


1.27
log
@bfd:
	* config.bfd (thumb-*-oabi): Don't handle in list of obsolete
	targets.
	(strongarm*, thumb*, xscale*): Remove architectures.
	(strongarm-*-kaos*, thumb-*-coff, thumb-*-elf, thumb-epoc-pe*,
	thumb-*-pe*, strongarm-*-elf, strongarm-*-coff, xscale-*-elf,
	xscale-*-coff): Remove targets.

binutils:
	* configure.in (thumb-*-pe*): Remove.
	* configure: Regenerate.

binutils/testsuite:
	* binutils-all/objcopy.exp (*arm*-*-coff): Change to arm*-*-coff.
	(xscale-*-coff, thumb*-*-coff, thumb*-*-pe): Don't handle.

gas:
	* configure.tgt (strongarm*be, strongarm*b, strongarm*,
	xscale*be|xscale*b, xscale*): Remove architectures.
	(thumb-*-coff, thumb-*-rtems*, thumb-*-elf, thumb-epoc-pe,
	thumb-*-pe, xscale-*-coff, xscale-*-elf): Remove targets.

gas/testsuite:
	* gas/all/gas.exp (*arm*-*-coff): Change to arm*-*-coff.
	(thumb*-*-coff, thumb*-*-pe*): Don;t handle.
	* gas/arm/arm.exp (*arm*-*-*): Change to arm*-*-*.
	(*xscale*-*-*): Don't handle.
	* gas/cfi/cfi.exp (xscale*-*): Don't handle.
	* gas/elf/elf.exp (*arm*-*-*): Change to arm*-*-*.
	(xscale*-*-*): Don't handle.

ld:
	* configure.tgt (thumb-*-linux-* | thumb-*-uclinux*,
	strongarm-*-coff, strongarm-*-elf, strongarm-*-kaos*,
	thumb-*-coff, thumb-*-elf, thumb-epoc-pe, thumb-*-pe,
	xscale-*-coff, xscale-*-elf): Remove targets.

ld/testsuite:
	* ld-selective/selective.exp (xscale-*-*): Don't handle.
	* ld-srec/srec.exp (strongarm*-*-*, xscale*-*-*, thumb-*-*): Don't
	handle.
	(*arm*-*-*): Change to arm*-*-*.
	(strongarm*-*-coff, xscale*-*-coff, thumb-*-coff*, thumb-*-pe*,
	thumb-*-elf*, strongarm*-*-*, thumb-*-*): Remove xfails.
	* ld-undefined/undefined.exp (thumb*-*-pe*, thumb*-*-pe*): Remove
	commented-out xfails.
	(thumb-elf): Remove reference in comment.
	* lib/ld-lib.exp (strongarm*-*-*, xscale*-*-*, thumb-*-*): Don't
	handle.
@
text
@d47 1
a47 1
} elseif { [istarget ppc*-*-*] || [istarget powerpc*-*-*] } then {
d103 3
a105 2
  # MIPS doesn't support PC relative cfi directives.
  if { ![istarget "mips*-*"] } then {
@


1.27.6.1
log
@	PR 12549
	PR 14493
	PR 14567
	PR 14662
	PR 14758
	PR 14813
	PR 14904
	PR 14915
	PR 14926
	PR 14950
	PR 14962
	Apply mainline patches
@
text
@d47 1
a47 1
} elseif { [istarget powerpc*-*-*] } then {
d103 2
a104 3
  # Some targets don't support PC relative cfi directives
  if { ![istarget "mips*-*"] &&
       !([istarget powerpc*-*-*] && [is_pecoff_format]) } then {
@


1.26
log
@	* gas/cfi/cfi.exp: Skip cfi-common-6 on hppa64*-*.
@
text
@d75 1
a75 1
} elseif { [istarget "arm*-*"] || [istarget "xscale*-*"] } then {
@


1.25
log
@        * gas/all/fwdexp.d: Also look for f8ffffff.
        * gas/arm/msr-reg-thumb.d: Skip for non-ELF based targets.
        * gas/arm/vldr.d: Likewise.
        * gas/arm/thumb2_ldmstm.d: Allow for extra NOPs at the end of the disassembly.
        * gas/cfi/cfi.exp (cfi-arm-1): Only run for ELF based ARM targets.
@
text
@d103 4
a108 5

# MIPS doesn't support PC relative cfi directives.
if { ![istarget "mips*-*"] } then {
    run_dump_test "cfi-common-6"
}
@


1.24
log
@	* dw2gencfi.c (TC_DWARF2_EMIT_OFFSET): Provide default.
	(output_fde): Use it.  Make sure to fully init exp before using it.
testsuite/
	* gas/cfi/cfi-common-1.d: Use objdump instead of readelf to dump.
	* gas/cfi/cfi-common-2.d, gas/cfi/cfi-common-3.d,
	gas/cfi/cfi-common-4.d, gas/cfi/cfi-common-6.d,
	gas/cfi/cfi-common-7.d, gas/cfi/cfi-x86_64.d: Likewise.
	* gas/cfi/cfi-x86_64.s: Remove .type directives.
	* gas/cfi/cfi.exp: Run for pecoff objects too.
	* gas/cfi/reloc-pe-i386.d, gas/cfi/reloc-pe-i386.s: New test.
@
text
@d76 4
@


1.23
log
@	* dw2gencfi.c (output_cfi_insn): Initialize fragment before rs_cfa
	to DW_CFA_advance_loc4.

	* gas/cfi/cfi-common-7.d: New test.
	* gas/cfi/cfi-common-7.s: New.
	* gas/cfi/cfi.exp: Add cfi-common-7 test.
@
text
@d1 1
a1 1
if ![is_elf_format] then {
d38 4
d95 4
a98 1
  run_dump_test "cfi-common-5"
@


1.22
log
@        * gas/cfi/cfi-common-1.d: Allow for differing offsets, and
        for DW_CFA_offset_extended_sf results.  Allow for differing nops.
        * gas/cfi/cfi-hppa-1.d: Invert data alignment sign.  Change
        offsets to match 64-bit offsets.
        * gas/cfi/cfi.exp: Don't run common tests on hppa64.
@
text
@d92 1
@


1.21
log
@2008-02-18  H.J. Lu  <hongjiu.lu@@intel.com>

	* cfi/cfi.exp (gas_x86_64_check): New.
	(gas_x86_32_check): Likewise.
	Run 32bit and 64bit tests for x86 targets if they are supportd.
@
text
@a82 5
run_dump_test "cfi-common-1"
run_dump_test "cfi-common-2"
run_dump_test "cfi-common-3"
run_dump_test "cfi-common-4"
run_dump_test "cfi-common-5"
d84 11
a94 1
# MIPS doesn't support PC relative cfi directives
@


1.20
log
@bfd:
2007-08-28  Mark Shinwell  <shinwell@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* elf32-arm.c (elf32_arm_compare_mapping): Compare first on vma,
	then on type.

binutils/testsuite:
2007-08-28  Mark Shinwell  <shinwell@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* binutils-all/ar.exp (long_filenames): Delete temporary files on
	the host.
	* binutils-all/arm/objdump.exp: Only check "which $OBJDUMP" if
	host is local.
	* binutils-all/objcopy.exp: Use ${srecfile} to get the name of the
	srec file to be passed to binutils_run.
	(objcopy_test_readelf): Use remote_exec.
	* binutils-all/readelf.exp (readelf_find_size): Use remote_exec.
	(readelf_test): Likewise.
	(readelf_wi_test): Likewise.
	* lib/utils-lib.exp (run_dump_test): Only check "which $binary" if
	host is local.  Use remote_exec.  Use $tempfile not
	tmpdir/bintest.o.

gas:
2007-08-28  Mark Shinwell  <shinwell@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* as.c (main): Flush stderr before printing listings to ensure
	consistent output order across platforms.

gas/testsuite:
2007-08-28  Mark Shinwell  <shinwell@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* lib/gas-defs.exp (gas_version): Use remote_* functions instead
	of exec.
	(gas_host_run): New.
	(gas_run): Use gas_host_run.
	(gas_start): Likewise.
	(run_dump_test): Likewise.
	(objdump): Use gas_host_run.
	(objdump_start_no_subdir): Likewise.
	* lib/gas-dg.exp (gas-dg-test): Use "remote_file host delete".
	* lib/run: Remove.
	* gas/macros/macros.exp: Download app4b.s to host.
	* gas/i386/i386.exp (gas_64_check): Use gas_host_run.
	(gas_32_check): Likewise.
	* gas/maxq10/maxq10.exp (gas_64_check): Likewise
	(gas_32_check): Likewise.
	* gas/maxq20/maxq20.exp (gas_64_check): Likewise
	(gas_32_check): Likewise.
	* gas/sparc/sparc.exp (gas_64_check): Likewise.
	* gas/cfi/cfi.exp: Likewise.
	* gas/elf/elf.exp (run_list_test): Likewise.  Use temporary file
	for readelf output in place of pipe.
	* gas/all/gas.exp: Download incbin.dat to host.
	(do_comment): Allow \r\r\n.

ld:
2007-08-28  Mark Shinwell  <shinwell@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* ldlang.c (sort_sections_by_lma): Sort by internal id after lma
	for stable sort.

ld/testsuite:
2007-08-28  Mark Shinwell  <shinwell@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* ld-elfcomm/elfcomm.exp: Use run_host_cmd.  Only check "which
	$CC" if host is local.
	* ld-checks/checks.exp: Use run_host_cmd.
	* ld-elf/exclude.exp: Likewise.
	* ld-elf/elf.exp: Download merge.ld if host is remote.
	* ld-elf/binutils.exp (binutils_test): Use remote_exec.
	* ld-elf/tls_common.exp: Use run_host_cmd.
	* lib/ld-lib.exp (ld_version): Only check "which $ld" if host is
	local.  Use remote_exec.
	(run_host_cmd): New.
	(run_host_cmd_yesno): New.
	(default_ld_relocate): Use run_host_cmd_yesno.
	(default_ld_link): Likewise.
	(default_ld_simple_link): Use run_host_cmd.
	(default_ld_compile): Only check "which $ccprog" if host is local.
	Use remote_file and remote_exec.
	(default_ld_assemble): Only check "which $as" if host is local.
	Use run_host_cmd.
	(default_ld_nm): Use remote_exec, remote_upload and remote_file.
	(run_dump_test): Use remote_exec, remote_upload and remote_file.
	Only check "which $binary" if host is local.
	(run_ld_link_tests): Use remote_exec, remote_upload and
	remote_file.
	* ld-selective/selective.exp: Only check "which $CXX" if host is
	local.  Use remote_exec.
	* ld-scripts/phdrs.exp: Only check "which $objdump" if host is
	local.  Use run_host_cmd.
	* ld-scripts/phdrs2.exp: Likewise.
	* ld-scripts/weak.exp: Likewise.
	* ld-undefined/weak-undef.exp: Likewise.
	* ld-scripts/crossref.exp: Only check "which $CC" if host is local.
	Use run_host_cmd.
	* ld-scripts/map-address.exp: Upload map_address.map if host is
	remote.
	* ld-srec/srec.exp (run_srec_tests): Use run_host_cmd.  Only check
	"which $CC" and "which $CXX" if host is local.
	* ld-undefined/undefined.exp: Only check "which $CC" if host is
	local.  Use remote_file and run_host_cmd.
	* config/default.exp: Use remote_exec to create tmpdir.
@
text
@d5 11
a15 2
if [istarget "x86_64-*"] then {
    run_dump_test "cfi-x86_64"
d17 20
a36 2
} elseif [istarget "i?86-*"] then {
    run_dump_test "cfi-i386"
@


1.19
log
@Patch for PR4587 + move proc run_list_test into gas-defs.exp
@
text
@a30 1
    global srcdir
d32 1
a32 1
    catch "exec $srcdir/lib/run $NM $NMFLAGS --help" nm_help
d34 1
a34 1
    if { [regexp "elf64\[_-\]sparc" $nm_help] } then {
@


1.18
log
@	* gas/cfi/cfi.exp: Don't run cfi-common-6 for mips*-*.
@
text
@a0 14
# ??? This probably shouldn't be replicated here...
proc run_list_test { name opts } {
    global srcdir subdir
    set testname "cfi $name"
    set file $srcdir/$subdir/$name
    gas_run ${name}.s $opts ">&dump.out"
    if { [regexp_diff "dump.out" "${file}.l"] } then {
        fail $testname
        verbose "output is [file_contents "dump.out"]" 2
        return
    }
    pass $testname
}

@


1.17
log
@	* dw2gencfi.c (struct fde_entry): Add per_encoding, lsda_encoding,
	personality and lsda.
	(struct cie_entry): Add per_encoding, lsda_encoding and personality.
	(alloc_fde_entry): Initialize per_encoding and lsda_encoding.
	(cfi_pseudo_table): Handle .cfi_personality and .cfi_lsda.
	(dot_cfi_personality, dot_cfi_lsda, encoding_size): New functions.
	(output_cie): Output personality including its encoding and LSDA encoding.
	(output_fde): Output LSDA.
	(select_cie_for_fde): Don't share CIE if personality, its encoding or
	LSDA encoding are different.  Copy the 3 fields from fde_entry to
	cie_entry.
	* doc/as.texinfo (.cfi_personality, .cfi_lsda): Document.

	* gas/cfi/cfi-common-6.d: New test.
	* gas/cfi/cfi-common-6.s: New.
	* gas/cfi/cfi.exp: Add cfi-common-6 test.
@
text
@d76 5
a80 1
run_dump_test "cfi-common-6"
@


1.16
log
@	* subsegs.h (struct frchain): Add frch_cfi_data field.
	* dw2gencfi.c: Include subsegs.h.
	(cur_fde_data, last_address, cur_cfa_offset, cfa_save_stack): Removed.
	(struct frch_cfi_data): New type.
	(unused_cfi_data): New variable.
	(alloc_fde_entry): Move cur_fde_data, last_address, cur_cfa_offset
	and cfa_save_stack static vars into a structure pointed from
	each frchain.
	(alloc_cfi_insn_data, cfi_new_fde, cfi_end_fde, cfi_set_return_column,
	cfi_add_advance_loc, cfi_add_CFA_def_cfa, cfi_add_CFA_def_cfa_offset,
	cfi_add_CFA_remember_state, cfi_add_CFA_restore_state, dot_cfi,
	dot_cfi_escape, dot_cfi_startproc, dot_cfi_endproc, cfi_finish):
	Likewise.

	* gas/cfi/cfi-common-5.d: New test.
	* gas/cfi/cfi-common-5.s: New.
	* gas/cfi/cfi.exp: Add cfi-common-5 test.
@
text
@d76 1
@


1.15
log
@2006-10-29  Randolph Chung  <tausq@@debian.org>

	* gas/cfi/cfi.exp [hppa*-linux*]: Run hppa CFI test.
	* gas/cfi/cfi-hppa-1.s: New file.
	* gas/cfi/cfi-hppa-1.h: New file.
@
text
@d75 1
@


1.14
log
@==> ChangeLog <==
2005-03-14  Eric Christopher  <echristo@@redhat.com>

        * config/tc-mips.c: Include dw2gencfi.h.
        (mips_cfi_frame_initial_instructions): New.
        * config/tc-mips.h (TARGET_USE_CFIPOP): Define.
        (tc_cfi_frame_initial_instructions): Ditto.
        (DWARF2_DEFAULT_RETURN_COLUMN): Ditto.
        (DWARF2_CIE_DATA_ALIGNMENT): Ditto.
        * Makefile.am: Update dependencies.
        * Makefile.in: Regenerate.

==> testsuite/ChangeLog <==
2005-03-14  Eric Christopher  <echristo@@redhat.com>

        * gas/cfi/cfi-mips-1.d, gas/cfi/cfi-mips-1.s: New dump test.
        * gas/cfi/cfi.exp: Run it.
        * gas/cfi/cfi-common-1.d: Update.
        * gas/cfi/cfi-common-2.d: Ditto.
        * gas/cfi/cfi-common-3.d: Ditto.
        * gas/cfi/cfi-common-4.d: Ditto.
@
text
@d64 2
@


1.13
log
@Add ARM CFI support
@
text
@d62 2
@


1.13.2.1
log
@==> ChangeLog <==
2005-03-14  Eric Christopher  <echristo@@redhat.com>

        * config/tc-mips.c: Include dw2gencfi.h.
        (mips_cfi_frame_initial_instructions): New.
        * config/tc-mips.h (TARGET_USE_CFIPOP): Define.
        (tc_cfi_frame_initial_instructions): Ditto.
        (DWARF2_DEFAULT_RETURN_COLUMN): Ditto.
        (DWARF2_CIE_DATA_ALIGNMENT): Ditto.
        * Makefile.am: Update dependencies.
        * Makefile.in: Regenerate.

==> testsuite/ChangeLog <==
2005-03-14  Eric Christopher  <echristo@@redhat.com>

        * gas/cfi/cfi-mips-1.d, gas/cfi/cfi-mips-1.s: New dump test.
        * gas/cfi/cfi.exp: Run it.
        * gas/cfi/cfi-common-1.d: Update.
        * gas/cfi/cfi-common-2.d: Ditto.
        * gas/cfi/cfi-common-3.d: Ditto.
        * gas/cfi/cfi-common-4.d: Ditto.
@
text
@a61 2
} elseif { [istarget "mips*-*"] } then {
    run_dump_test "cfi-mips-1"
@


1.12
log
@When separating CIE out from FDE, treat a DW_CFA_remember_state as we do a
DW_CFA_advance_loc.  Test to make sure that this feature continues to work.
@
text
@d59 3
@


1.11
log
@[gas]
	* config/tc-sh.c: Include dw2gencfi.h.
	(sh_cfi_frame_initial_instructions): New function.
	(sh_regname_to_dw2regnum): Likewise.
	* config/tc-sh.h (DWARF2_LINE_MIN_INSN_LENGTH): Move to the end of
	file.
	(TARGET_USE_CFIPOP): Define.
	(tc_cfi_frame_initial_instructions): Likewise.
	(tc_regname_to_dw2regnum): Likewise.
	(DWARF2_DEFAULT_RETURN_COLUMN, DWARF2_CIE_DATA_ALIGNMENT): Likewise.
	* Makefile.am: Update dependencies.
	* Makefile.in: Regenerate.

[gas/testsuite]
	* gas/cfi/cfi-sh-1.d: New file.
	* gas/cfi/cfi-sh-1.s: Likewise.
	* gas/cfi/cfi.exp: Add SH case.
@
text
@d67 1
@


1.10
log
@	* dw2gencfi.c (cfi_pseudo_table): Add cfi_gnu_window_save.
	(dot_cfi, output_cfi_insn): Handle DW_CFA_GNU_window_save.
	(output_cie): Don't use DW_EH_PE_pcrel if neither DIFF_EXPR_OK
	nor tc_cfi_emit_pcrel_expr are defined.
	(output_fde): Use tc_cfi_emit_pcrel_expr if available and
	DIFF_EXPR_OK is not defined.
	* config/tc-sparc.h (TARGET_USE_CFIPOP): Define.
	(tc_cfi_frame_initial_instructions, tc_regname_to_dw2regnum,
	tc_cfi_emit_pcrel_expr): Define.
	(sparc_cfi_frame_initial_instructions, sparc_regname_to_dw2regnum,
	sparc_cfi_emit_pcrel_expr): New prototypes.
	(sparc_cie_data_alignment): New decl.
	(DWARF2_DEFAULT_RETURN_COLUMN, DWARF2_CIE_DATA_ALIGNMENT): Define.
	* config/tc-sparc.c: Include dw2gencfi.h.
	(sparc_cie_data_alignment): New variable.
	(md_begin): Initialize it.
	(sparc_cfi_frame_initial_instructions): New function.
	(sparc_regname_to_dw2regnum): Likewise.
	(sparc_cfi_emit_pcrel_expr): Likewise.
	* doc/as.texinfo: Document .cfi_gnu_window_save.

	* config/tc-sparc.c (s_common): Cast last argument to long and
	change format string to shut up warning.
testsuite/
	* gas/cfi/cfi-sparc-1.s: New test.
	* gas/cfi/cfi-sparc-1.d: New test.
	* gas/cfi/cfi-sparc64-1.s: New test.
	* gas/cfi/cfi-sparc64-1.d: New test.
	* gas/cfi/cfi.exp: Run them.
@
text
@d52 7
@


1.10.6.1
log
@[gas]
	* config/tc-sh.c: Include dw2gencfi.h.
	(sh_cfi_frame_initial_instructions): New function.
	(sh_regname_to_dw2regnum): Likewise.
	* config/tc-sh.h (DWARF2_LINE_MIN_INSN_LENGTH): Move to the end of
	file.
	(TARGET_USE_CFIPOP): Define.
	(tc_cfi_frame_initial_instructions): Likewise.
	(tc_regname_to_dw2regnum): Likewise.
	(DWARF2_DEFAULT_RETURN_COLUMN, DWARF2_CIE_DATA_ALIGNMENT): Likewise.
	* Makefile.am: Update dependencies.
	* Makefile.in: Regenerate.

[gas/testsuite]
	* gas/cfi/cfi-sh-1.d: New file.
	* gas/cfi/cfi-sh-1.s: Likewise.
	* gas/cfi/cfi.exp: Add SH case.
@
text
@a51 7

} elseif [istarget "sh*-*"] then {
    if { [istarget sh64*-*-*] || [istarget sh5*-*-*] } then {
    } else {
	run_dump_test "cfi-sh-1"
    }

@


1.9
log
@gas/
	* config/tc-m68k.h (TARGET_USE_CFIPOP)
	(DWARF2_DEFAULT_RETURN_COLUMN, DWARF2_CIE_DATA_ALIGNMENT)
	(tc_regname_to_dw2regnum, tc_cfi_frame_initial_instructions):
	Define.
	* config/tc-m68k.c: Include "dw2gencfi.h".
	(tc_m68k_regname_to_dw2regnum)
	(tc_m68k_frame_initial_instructions): New functions.

gas/testsuite/
	* gas/cfi/cfi-m68k.s, gas/cfi/cfi-m68k.d: New test.
	* gas/cfi/cfi.exp (run_list_test): Run it.
@
text
@d42 10
@


1.8
log
@	* config/tc-ppc.h (DWARF2_LINE_MIN_INSN_LENGTH): Define always.
	(TARGET_USE_CFIPOP, tc_cfi_frame_initial_instructions,
	tc_regname_to_dw2regnum, DWARF2_DEFAULT_RETURN_COLUMN,
	DWARF2_CIE_DATA_ALIGNMENT): Define.
	(ppc_cfi_frame_initial_instructions, tc_ppc_regname_to_dw2regnum): New
	prototypes.
	(ppc_cie_data_alignment): Declare.
	* config/tc-ppc.c: Include dw2gencfi.h.
	(ppc_cie_data_alignment): Define.
	(md_begin): Initialize ppc_cie_data_alignment.
	(ppc_cfi_frame_initial_instructions, tc_ppc_regname_to_dw2regnum): New
	functions.
	* config/tc-s390.h (DWARF2_LINE_MIN_INSN_LENGTH): Define always.
	(TARGET_USE_CFIPOP, tc_cfi_frame_initial_instructions,
	tc_regname_to_dw2regnum, DWARF2_DEFAULT_RETURN_COLUMN,
	DWARF2_CIE_DATA_ALIGNMENT): Define.
	(s390_cfi_frame_initial_instructions, tc_s390_regname_to_dw2regnum):
	New prototypes.
	(s390_cie_data_alignment): Declare.
	* config/tc-s390.c: Include dw2gencfi.h.
	(s390_cie_data_alignment): Define.
	(md_begin): Initialize s390_cie_data_alignment.
	(s390_cfi_frame_initial_instructions, tc_s390_regname_to_dw2regnum):
	New functions.

	* gas/cfi/cfi-ppc-1.s: New test.
	* gas/cfi/cfi-ppc-1.d: New test.
	* gas/cfi/cfi-s390-1.s: New test.
	* gas/cfi/cfi-s390-1.s: New test.
	* gas/cfi/cfi-s390x-1.s: New test.
	* gas/cfi/cfi-s390x-1.s: New test.
	* gas/cfi/cfi.exp: Run them.
@
text
@d39 3
@


1.7
log
@        * dw2gencfi.c (struct cfi_escape_data): New.
        (cfi_add_CFA_nop): Remove.
        (CFI_escape, dot_cfi_escape): New.
        (dot_cfi): Remove nop.
        (cfi_pseudo_table): Remove nop; add escape.
        (output_cfi_insn): Likewise.
        (select_cie_for_fde): Stop on escape.
        * dw2gencfi.h (cfi_add_CFA_nop): Remove.
        * read.c, read.h (do_parse_cons_expression): New.
        * doc/as.texinfo (.cfi_escape): New.

        * gas/cfi/cfi-common-3.[ds]: New.
        * gas/cfi/cfi.exp: Run it.
@
text
@d30 9
@


1.6
log
@	* gas/cfi/cfi.exp: Use here.  Only run tests when ELF.
	* gas/macros/and.s: Avoid .set so we don't break mips.
@
text
@d37 1
@


1.5
log
@        * dw2gencfi.c (struct cfa_save_data, cfa_save_stack): New.
        (cfi_add_CFA_offset): Detect invalid offsets.
        (cfi_add_CFA_remember_state): Save cur_cfa_offset.
        (cfi_add_CFA_restore_state): Restore it.
        (CFI_rel_offset): New.
        (cfi_pseudo_table): Add it.
        (dot_cfi): Handle it.

        * gas/cfi/cfi-common-1.d, gas/cfi/cfi-common-1.s: New.
        * gas/cfi/cfi-common-2.d, gas/cfi/cfi-common-2.s: New.
        * gas/cfi/cfi-diag-1.d, gas/cfi/cfi-diag-1.s: New.
        * gas/cfi/cfi.exp: Run them.
@
text
@d15 3
a17 1
set any "0"
a20 2
    set any "1"
}
d22 1
a22 1
if [istarget "i?86-*"] then {
a23 2
    set any "1"
}
d25 4
a28 1
if { [istarget alpha*-*-*] } then {
d30 2
a31 11
    set elf [expr [istarget *-*-elf*] \
                  || [istarget *-*-linux*] \
                  || [istarget *-*-freebsd*] \
                  || [istarget *-*-netbsd*] ]

    if $elf {
	run_dump_test "cfi-alpha-1"
	run_dump_test "cfi-alpha-2"
	run_dump_test "cfi-alpha-3"
	set any "1"
    }
d34 3
a36 5
if $any {
    run_list_test "cfi-diag-1" ""
    run_dump_test "cfi-common-1"
    run_dump_test "cfi-common-2"
}
@


1.4
log
@        * config/tc-alpha.c (s_alpha_usepv): New.
        (md_pseudo_table): Add it.
        (alpha_cfi_frame_initial_instructions): New.
        * config/tc-alpha.h (TARGET_USE_CFIPOP): New.
        (tc_cfi_frame_initial_instructions): New.
        * doc/c-alpha.texi: Document .usepv.

        * gas/alpha/elf-usepv-1.[sd]: New.
        * gas/alpha/elf-usepv-2.[sd]: New.
        * gas/alpha/alpha.exp: Run them.
        * gas/cfi/cfi-alpha-3.[sd]: New.
        * gas/cfi/cfi.exp: Run it.
@
text
@d1 16
d19 1
d24 1
d38 1
d40 6
@


1.3
log
@        * dw2gencfi.c (output_fde): Use fix_new to emit pc-relative reloc.
        (cfi_finish): Set flag_traditional_format around .eh_frame data.

        * gas/alpha/elf-reloc-8.d: Correct .eh_frame relocs.
        * gas/cfi/cfi-alpha-2.d: New.
        * gas/cfi/cfi-alpha-2.s: New.
        * gas/cfi/cfi.exp: Run it.
@
text
@d19 1
@


1.2
log
@        * config/tc-alpha.c (alpha_cur_ent_sym): Remove.
        (all_frame_data, plast_frame_data, cur_frame_data): New.
        (s_alpha_ent): Record data for dwarf2 cfi.
        (s_alpha_end, s_alpha_mask, s_alpha_frame, s_alpha_prologue): Likewise.[
        (alpha_elf_md_end): Emit dwarf2 cfi for ecoff unwind directives.
        * config/tc-alpha.h (md_end): New.
        (DWARF2_DEFAULT_RETURN_COLUMN): New.
        (DWARF2_CIE_DATA_ALIGNMENT): New.

        * gas/alpha/elf-reloc-8.d: Add .eh_frame relocs.
        * gas/cfi/cfi-alpha-1.d: New.
        * gas/cfi/cfi-alpha-1.s: New.
        * gas/cfi/cfi.exp: Run it.
@
text
@d18 1
@


1.1
log
@	* gas/cfi/cfi.exp: Testsuite for cfi machinery.
	* gas/cfi/cfi-x86_64.[sd]: Files for x86-64.
	* gas/cfi/cfi-i386.[sd]: Files for i386.
@
text
@d8 12
@

