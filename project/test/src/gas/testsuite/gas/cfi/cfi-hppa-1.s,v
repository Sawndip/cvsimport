head	1.1;
access;
symbols
	binutils-2_24-branch:1.1.0.22
	binutils-2_24-branchpoint:1.1
	binutils-2_21_1:1.1
	binutils-2_23_2:1.1
	binutils-2_23_1:1.1
	binutils-2_23:1.1
	binutils-2_23-branch:1.1.0.20
	binutils-2_23-branchpoint:1.1
	binutils-2_22_branch:1.1.0.18
	binutils-2_22:1.1
	binutils-2_22-branch:1.1.0.16
	binutils-2_22-branchpoint:1.1
	binutils-2_21:1.1
	binutils-2_21-branch:1.1.0.14
	binutils-2_21-branchpoint:1.1
	binutils-2_20_1:1.1
	binutils-2_20:1.1
	binutils-arc-20081103-branch:1.1.0.12
	binutils-arc-20081103-branchpoint:1.1
	binutils-2_20-branch:1.1.0.10
	binutils-2_20-branchpoint:1.1
	dje-cgen-play1-branch:1.1.0.8
	dje-cgen-play1-branchpoint:1.1
	arc-20081103-branch:1.1.0.6
	arc-20081103-branchpoint:1.1
	binutils-2_19_1:1.1
	binutils-2_19:1.1
	binutils-2_19-branch:1.1.0.4
	binutils-2_19-branchpoint:1.1
	binutils-2_18:1.1
	binutils-2_18-branch:1.1.0.2
	binutils-2_18-branchpoint:1.1
	binutils_latest_snapshot:1.1;
locks; strict;
comment	@# @;


1.1
date	2006.10.30.01.10.46;	author tausq;	state Exp;
branches;
next	;


desc
@@


1.1
log
@2006-10-29  Randolph Chung  <tausq@@debian.org>

	* gas/cfi/cfi.exp [hppa*-linux*]: Run hppa CFI test.
	* gas/cfi/cfi-hppa-1.s: New file.
	* gas/cfi/cfi-hppa-1.h: New file.
@
text
@#; $ as -o test.o gas-cfi-test.s && gcc -nostdlib -o test test.o

	.text
	.align 4
	.level 1.1

.globl func_locvars
	.type	func_locvars, @@function
func_locvars:
	.PROC
	.CALLINFO FRAME=0x1234,NO_CALLS,SAVE_SP,ENTRY_GR=3
	.ENTRY
	.cfi_startproc
	copy %r3,%r1
	copy %r30,%r3
	.cfi_def_cfa_register r3
	stwm %r1,0x1234(%r30)
	.cfi_adjust_cfa_offset 0x1234
	ldo 64(%r3),%r30
	ldwm -64(%r30),%r3
	.cfi_def_cfa_register sp
	bv,n %r0(%r2)
	.cfi_endproc
	.EXIT
	.PROCEND

.globl func_prologue
	.type	func_prologue, @@function
func_prologue:
	.PROC
	.CALLINFO FRAME=64,CALLS,SAVE_RP,SAVE_SP,ENTRY_GR=3
	.ENTRY
	.cfi_startproc
#; This is not ABI-compliant but helps the test to run on both
#; 32-bit and 64-bit targets
	stw %r2,-24(%r30)
	copy %r3,%r1
	copy %r30,%r3
	.cfi_def_cfa_register r3
	.cfi_offset r2, -24
	stwm %r1,64(%r30)
	bl func_locvars,%r2
	nop
	ldw -20(%r3),%r2
	ldo 64(%r3),%r30
	ldwm -64(%r30),%r3
	.cfi_def_cfa_register sp
	bv,n %r0(%r2)
	.cfi_endproc
	.EXIT
	.PROCEND

	.align 4
.globl main
	.type	main, @@function
main:
	.PROC
	.CALLINFO CALLS
	.ENTRY
	#; tail call - simple function that doesn't touch the stack
	.cfi_startproc
	b func_prologue
	nop
	.cfi_endproc
	.EXIT
	.PROCEND
@
