head	1.5;
access;
symbols
	binutils-2_24-branch:1.5.0.2
	binutils-2_24-branchpoint:1.5
	binutils-2_21_1:1.4
	binutils-2_23_2:1.4
	binutils-2_23_1:1.4
	binutils-2_23:1.4
	binutils-2_23-branch:1.4.0.8
	binutils-2_23-branchpoint:1.4
	binutils-2_22_branch:1.4.0.6
	binutils-2_22:1.4
	binutils-2_22-branch:1.4.0.4
	binutils-2_22-branchpoint:1.4
	binutils-2_21:1.4
	binutils-2_21-branch:1.4.0.2
	binutils-2_21-branchpoint:1.4
	binutils-2_20_1:1.3
	binutils-2_20:1.3
	binutils-arc-20081103-branch:1.3.0.8
	binutils-arc-20081103-branchpoint:1.3
	binutils-2_20-branch:1.3.0.6
	binutils-2_20-branchpoint:1.3
	dje-cgen-play1-branch:1.3.0.4
	dje-cgen-play1-branchpoint:1.3
	arc-20081103-branch:1.3.0.2
	arc-20081103-branchpoint:1.3
	binutils-2_19_1:1.2
	binutils-2_19:1.2
	binutils-2_19-branch:1.2.0.2
	binutils-2_19-branchpoint:1.2
	binutils-2_18:1.1
	binutils-2_18-branch:1.1.0.2
	binutils-2_18-branchpoint:1.1
	binutils_latest_snapshot:1.5;
locks; strict;
comment	@# @;


1.5
date	2013.09.12.09.14.46;	author nickc;	state Exp;
branches;
next	1.4;

1.4
date	2010.09.02.22.43.46;	author rth;	state Exp;
branches;
next	1.3;

1.3
date	2008.10.06.16.27.34;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	2007.10.31.16.09.53;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.03.07.29.37;	author jakub;	state Exp;
branches;
next	;


desc
@@


1.5
log
@	* dwarf.c (dwarf_vmatoa): Rename to dwarf_vmatoa_1 and add a
	precision parameter.
	(dwarf_vmatoa): New wrapper for dwarf_vmatoa_1.
	(print_dwarf_vma): Use dwarf_vmatoa_1.
	(SAFE_BYTE_GET): Add check that VAL is big enough to contain
	AMOUNT bytes.
	(process_debug_info): Use an unsigned int for the offset size.
	(process_debug_pubnames): Likewise.
	(display_debug_aranges): Likewise.
	(struct Frame_Chunk): Use dwarf_vma type for pc_begin and pc_range
	fields.
	(frame_display_row): Use print_dwarf_vma to display dwarf_vma
	values.
	(display_debug_frames): Likewise.

	* binutils-all/x86-64/compressed-1a.d: Update expected output to
	allow for 64-bit addresses.

	* ld-elf/eh1.d: Update expected output to allow for
	64-bit addresses.
	* ld-elf/eh2.d: Likewise.
	* ld-elf/eh3.d: Likewise.
	* ld-elf/eh4.d: Likewise.
	* ld-elf/eh5.d: Likewise.
	* ld-elf/eh6.d: Likewise.
	* ld-mips-elf/eh-frame1-n64.d: Likewise.
	* ld-mips-elf/eh-frame2-n64.d: Likewise.
	* ld-mips-elf/eh-frame3.d: Likewise.

	* gas/cfi/cfi-alpha-1.d: Update expected output to allow for
	64-bit addresses.
	* gas/cfi/cfi-alpha-3.d: Likewise.
	* gas/cfi/cfi-arm-1.d: Likewise.
	* gas/cfi/cfi-common-1.d: Likewise.
	* gas/cfi/cfi-common-2.d: Likewise.
	* gas/cfi/cfi-common-3.d: Likewise.
	* gas/cfi/cfi-common-4.d: Likewise.
	* gas/cfi/cfi-common-5.d: Likewise.
	* gas/cfi/cfi-common-6.d: Likewise.
	* gas/cfi/cfi-common-7.d: Likewise.
	* gas/cfi/cfi-hppa-1.d: Likewise.
	* gas/cfi/cfi-i386-2.d: Likewise.
	* gas/cfi/cfi-i386.d: Likewise.
	* gas/cfi/cfi-m68k.d: Likewise.
	* gas/cfi/cfi-mips-1.d: Likewise.
	* gas/cfi/cfi-ppc-1.d: Likewise.
	* gas/cfi/cfi-s390-1.d: Likewise.
	* gas/cfi/cfi-s390x-1.d: Likewise.
	* gas/cfi/cfi-sh-1.d: Likewise.
	* gas/cfi/cfi-sparc-1.d: Likewise.
	* gas/cfi/cfi-sparc64-1.d: Likewise.
	* gas/cfi/cfi-x86_64.d: Likewise.
@
text
@#objdump: -Wf
#name: CFI common 6
#...
Contents of the .eh_frame section:

00000000 0+0018 0+0000 CIE
  Version:               1
  Augmentation:          "zPLR"
  Code alignment factor: .*
  Data alignment factor: .*
  Return address column: .*
  Augmentation data:     03 .. .. .. .. 0c 1b

  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

0000001c 0+0018 0+0020 FDE cie=0+0000 pc=0+00(00|24)..0+00(04|28)
  Augmentation data:     (00 00 00 00 de ad be ef|ef be ad de 00 00 00 00)

  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000038 0+0010 0+0000 CIE
  Version:               1
  Augmentation:          "zLR"
  Code alignment factor: .*
  Data alignment factor: .*
  Return address column: .*
  Augmentation data:     0c 1b

  DW_CFA_nop

0000004c 0+0018 0+0018 FDE cie=0+0038 pc=0+00(04|58)..0+00(08|5c)
  Augmentation data:     (00 00 00 00 de ad be ef|ef be ad de 00 00 00 00)

  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000068 0+0018 0+006c FDE cie=0+0000 pc=0+00(08|78)..0+00(0c|7c)
  Augmentation data:     (00 00 00 00 be ef de ad|ad de ef be 00 00 00 00)

  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000084 0+0018 0+0000 CIE
  Version:               1
  Augmentation:          "zPLR"
  Code alignment factor: .*
  Data alignment factor: .*
  Return address column: .*
  Augmentation data:     1b .. .. .. .. 1b 1b

  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

000000a0 0+0014 0+0020 FDE cie=0+0084 pc=0+00(0c|b4)..0+00(10|b8)
  Augmentation data:     .. .. .. ..

  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

000000b8 0+0014 0+0038 FDE cie=0+0084 pc=0+00(10|d0)..0+00(14|d4)
  Augmentation data:     .. .. .. ..

  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

@


1.4
log
@	* dw2gencfi.c (TC_DWARF2_EMIT_OFFSET): Provide default.
	(output_fde): Use it.  Make sure to fully init exp before using it.
testsuite/
	* gas/cfi/cfi-common-1.d: Use objdump instead of readelf to dump.
	* gas/cfi/cfi-common-2.d, gas/cfi/cfi-common-3.d,
	gas/cfi/cfi-common-4.d, gas/cfi/cfi-common-6.d,
	gas/cfi/cfi-common-7.d, gas/cfi/cfi-x86_64.d: Likewise.
	* gas/cfi/cfi-x86_64.s: Remove .type directives.
	* gas/cfi/cfi.exp: Run for pecoff objects too.
	* gas/cfi/reloc-pe-i386.d, gas/cfi/reloc-pe-i386.s: New test.
@
text
@d6 1
a6 1
00000000 00000018 00000000 CIE
d18 1
a18 1
0000001c 00000018 00000020 FDE cie=00000000 pc=000000(00|24)..000000(04|28)
d25 1
a25 1
00000038 00000010 00000000 CIE
d35 1
a35 1
0000004c 00000018 00000018 FDE cie=00000038 pc=000000(04|58)..000000(08|5c)
d42 1
a42 1
00000068 00000018 0000006c FDE cie=00000000 pc=000000(08|78)..000000(0c|7c)
d49 1
a49 1
00000084 00000018 00000000 CIE
d61 1
a61 1
000000a0 00000014 00000020 FDE cie=00000084 pc=000000(0c|b4)..000000(10|b8)
d68 1
a68 1
000000b8 00000014 00000038 FDE cie=00000084 pc=000000(10|d0)..000000(14|d4)
@


1.3
log
@            * dwarf.c (display_debug_frames): Change text for uniformity.
            (process_debug_info): Likewise.
            (display_debug_aranges): Likewise.  Indent address output.
            (display_debug_pubnames): Print offset in hex.

            * binutils-all/objdump.W: Update.

            * gas/cfi/cfi-alpha-1.d, gas/cfi/cfi-alpha-3.d,
            gas/cfi/cfi-arm-1.d, gas/cfi/cfi-common-1.d,
            gas/cfi/cfi-common-2.d, gas/cfi/cfi-common-3.d,
            gas/cfi/cfi-common-4.d, gas/cfi/cfi-common-5.d,
            gas/cfi/cfi-common-6.d, gas/cfi/cfi-hppa-1.d,
            gas/cfi/cfi-i386-2.d, gas/cfi/cfi-i386.d, gas/cfi/cfi-m68k.d,
            gas/cfi/cfi-mips-1.d, gas/cfi/cfi-ppc-1.d, gas/cfi/cfi-s390-1.d,
            gas/cfi/cfi-s390x-1.d, gas/cfi/cfi-sh-1.d, gas/cfi/cfi-sparc-1.d,
            gas/cfi/cfi-sparc64-1.d, gas/cfi/cfi-x86_64.d: Update for readelf
            change.

            * ld-elf/eh1.d, ld-elf/eh2.d, ld-elf/eh3.d, ld-elf/eh4.d,
            ld-elf/eh5.d, ld-elf/eh6.d, ld-mips-elf/eh-frame1-n32.d,
            ld-mips-elf/eh-frame1-n64.d, ld-mips-elf/eh-frame2-n32.d,
            ld-mips-elf/eh-frame2-n64.d, ld-mips-elf/eh-frame3.d,
            ld-mips-elf/eh-frame4.d: Update for readelf change.
@
text
@d1 1
a1 1
#readelf: -wf
d3 1
@


1.2
log
@* dwarf.c (is_relocatable): Remove definition.
  (display_debug_frames): Remove check in is_relocatable.
* dwarf.h (is_relocatable): Remove declaration.
* objdump.c (is_relocatable): New static definition.
* readelf.c (dump_relocations): Make the function void.
  (is_32bit_abs_reloc): Add support for x86, Arc, Arm, D10V, Dlx, OR32 and Score.
  (is_32bit_pcrel_reloc): Add support for x86 and Arm.
  (is_16bit_abs_reloc): Add support for D10V.
  (debug_apply_rela_addends): Rename to debug_apply_relocations.
  Add code to support rel relocations.
  (load_debug_section): Fix call to debug_apply_relocations.
  (get_file_header): Remove setting of is_relocatable.
* gas/cfi/cfi-common-6.d: Allow for possible relocation of the .debug.eh_frame section.
@
text
@d3 1
a3 1
The section .eh_frame contains:
@


1.1
log
@	* dw2gencfi.c (struct fde_entry): Add per_encoding, lsda_encoding,
	personality and lsda.
	(struct cie_entry): Add per_encoding, lsda_encoding and personality.
	(alloc_fde_entry): Initialize per_encoding and lsda_encoding.
	(cfi_pseudo_table): Handle .cfi_personality and .cfi_lsda.
	(dot_cfi_personality, dot_cfi_lsda, encoding_size): New functions.
	(output_cie): Output personality including its encoding and LSDA encoding.
	(output_fde): Output LSDA.
	(select_cie_for_fde): Don't share CIE if personality, its encoding or
	LSDA encoding are different.  Copy the 3 fields from fde_entry to
	cie_entry.
	* doc/as.texinfo (.cfi_personality, .cfi_lsda): Document.

	* gas/cfi/cfi-common-6.d: New test.
	* gas/cfi/cfi-common-6.s: New.
	* gas/cfi/cfi.exp: Add cfi-common-6 test.
@
text
@d17 1
a17 1
0000001c 00000018 00000020 FDE cie=00000000 pc=00000000..00000004
d34 1
a34 1
0000004c 00000018 00000018 FDE cie=00000038 pc=00000004..00000008
d41 1
a41 1
00000068 00000018 0000006c FDE cie=00000000 pc=00000008..0000000c
d60 1
a60 1
000000a0 00000014 00000020 FDE cie=00000084 pc=0000000c..00000010
d67 1
a67 1
000000b8 00000014 00000038 FDE cie=00000084 pc=00000010..00000014
@

