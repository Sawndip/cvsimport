head	1.4;
access;
symbols
	binutils-2_13_2_1:1.2.4.1
	binutils-2_13_2:1.2.4.1
	binutils-2_13_1:1.2.4.1
	binutils-2_13:1.2
	binutils-2_13-branchpoint:1.2
	binutils-2_13-branch:1.2.0.4
	binutils-2_12_1:1.2
	binutils-2_12:1.2
	binutils-2_12-branch:1.2.0.2
	binutils-2_12-branchpoint:1.2
	cygnus_cvs_20020108_pre:1.2
	binutils-2_11_2:1.1.1.1.4.1
	binutils-2_11_1:1.1.1.1.4.1
	binutils-2_11:1.1.1.1.4.1
	x86_64versiong3:1.1.1.1
	binutils-2_11-branch:1.1.1.1.0.4
	binutils-2_10_1:1.1.1.1
	binutils-2_10:1.1.1.1
	binutils-2_10-branch:1.1.1.1.0.2
	binutils-2_10-branchpoint:1.1.1.1
	binutils_latest_snapshot:1.3
	repo-unification-2000-02-06:1.1.1.1
	binu_ss_19990721:1.1.1.1
	binu_ss_19990602:1.1.1.1
	binu_ss_19990502:1.1.1.1
	cygnus:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2002.09.27.23.36.01;	author thorpej;	state dead;
branches;
next	1.3;

1.3
date	2002.08.26.11.06.32;	author amodra;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.19.12.20.10;	author amodra;	state Exp;
branches
	1.2.4.1;
next	1.1;

1.1
date	99.05.03.07.28.53;	author rth;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.05.03.07.28.53;	author rth;	state Exp;
branches
	1.1.1.1.4.1;
next	;

1.1.1.1.4.1
date	2001.03.19.12.20.39;	author amodra;	state Exp;
branches;
next	;

1.2.4.1
date	2002.08.26.11.08.23;	author amodra;	state Exp;
branches;
next	;


desc
@@


1.4
log
@* gas/vax/elf-rel.[ds]: New test.
* gas/vax/quad.exp: Move contents to...
* gas/vax/vax.exp: ...here.  New file.
@
text
@proc do_quad {} {
    set testname "quad.s: quadword immediate values"
    set x1 0
    set x2 0
    set x3 0
    set file "quad.s"
    if [istarget vax-*-*elf*] {
      set file "quad_elf.s"
    }
    gas_start $file "-al"
    while 1 {
	expect {
	    -re "^ +2\[ \t\]+0000+ 7D8F7856\[ \t\]+movq\[^\n\]*\n" { set x1 1 }
	    -re "^ +2\[ \t\]+3412DDCC\[^\n\]*\n"		   { set x2 1 }
	    -re "^ +2\[ \t\]+BBAA50\[ \t\]*\r\n"		   { set x3 1 }
	    -re "\[^\n\]*\n"				{ }
	    timeout				{ perror "timeout\n"; break }
	    eof					{ break }
	}
    }
    gas_finish
    if [all_ones $x1 $x2 $x3] then { pass $testname } else { fail $testname }
}

if [istarget vax-*-*] then {
    do_quad
}
@


1.3
log
@	* gas/vax/quad.exp: Use quad_elf.s for ELF targets.
	* gas/vax/quad.s: Align
	* gas/vax/quad_elf.s: New version of quad.s with %reg.
@
text
@@


1.2
log
@Don't try to read past end of info buffer, and correct test results.
@
text
@d6 5
a10 1
    gas_start "quad.s" "-al"
@


1.2.4.1
log
@	* gas/vax/quad.exp: Use quad_elf.s for ELF targets.
	* gas/vax/quad.s: Align
	* gas/vax/quad_elf.s: New version of quad.s with %reg.
@
text
@d6 1
a6 5
    set file "quad.s"
    if [istarget vax-*-*elf*] {
      set file "quad_elf.s"
    }
    gas_start $file "-al"
@


1.1
log
@Initial revision
@
text
@d11 1
a11 1
	    -re "^ +2\[ \t\]+BBAA5001\[ \t\]*\r\n"		   { set x3 1 }
@


1.1.1.1
log
@19990502 sourceware import
@
text
@@


1.1.1.1.4.1
log
@Don't try to read past end of info buffer, and correct test results.
@
text
@d11 1
a11 1
	    -re "^ +2\[ \t\]+BBAA50\[ \t\]*\r\n"		   { set x3 1 }
@


