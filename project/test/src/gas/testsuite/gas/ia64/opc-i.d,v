head	1.10;
access;
symbols
	binutils-2_24-branch:1.10.0.2
	binutils-2_24-branchpoint:1.10
	binutils-2_21_1:1.9
	binutils-2_23_2:1.9.24.1
	binutils-2_23_1:1.9.24.1
	binutils-2_23:1.9.24.1
	binutils-2_23-branch:1.9.0.24
	binutils-2_23-branchpoint:1.9
	binutils-2_22_branch:1.9.0.22
	binutils-2_22:1.9
	binutils-2_22-branch:1.9.0.20
	binutils-2_22-branchpoint:1.9
	binutils-2_21:1.9
	binutils-2_21-branch:1.9.0.18
	binutils-2_21-branchpoint:1.9
	binutils-2_20_1:1.9
	binutils-2_20:1.9
	binutils-arc-20081103-branch:1.9.0.16
	binutils-arc-20081103-branchpoint:1.9
	binutils-2_20-branch:1.9.0.14
	binutils-2_20-branchpoint:1.9
	dje-cgen-play1-branch:1.9.0.12
	dje-cgen-play1-branchpoint:1.9
	arc-20081103-branch:1.9.0.10
	arc-20081103-branchpoint:1.9
	binutils-2_19_1:1.9
	binutils-2_19:1.9
	binutils-2_19-branch:1.9.0.8
	binutils-2_19-branchpoint:1.9
	binutils-2_18:1.9
	binutils-2_18-branch:1.9.0.6
	binutils-2_18-branchpoint:1.9
	binutils-csl-coldfire-4_1-32:1.9
	binutils-csl-sourcerygxx-4_1-32:1.9
	binutils-csl-innovasic-fido-3_4_4-33:1.9
	binutils-csl-sourcerygxx-3_4_4-32:1.7
	binutils-csl-coldfire-4_1-30:1.9
	binutils-csl-sourcerygxx-4_1-30:1.9
	binutils-csl-coldfire-4_1-28:1.9
	binutils-csl-sourcerygxx-4_1-29:1.9
	binutils-csl-sourcerygxx-4_1-28:1.9
	binutils-csl-arm-2006q3-27:1.9
	binutils-csl-sourcerygxx-4_1-27:1.9
	binutils-csl-arm-2006q3-26:1.9
	binutils-csl-sourcerygxx-4_1-26:1.9
	binutils-csl-sourcerygxx-4_1-25:1.9
	binutils-csl-sourcerygxx-4_1-24:1.9
	binutils-csl-sourcerygxx-4_1-23:1.9
	binutils-csl-sourcerygxx-4_1-21:1.9
	binutils-csl-arm-2006q3-21:1.9
	binutils-csl-sourcerygxx-4_1-22:1.9
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.9
	binutils-csl-sourcerygxx-4_1-20:1.9
	binutils-csl-arm-2006q3-19:1.9
	binutils-csl-sourcerygxx-4_1-19:1.9
	binutils-csl-sourcerygxx-4_1-18:1.9
	binutils-csl-renesas-4_1-9:1.9
	binutils-csl-sourcerygxx-3_4_4-25:1.7
	binutils-csl-renesas-4_1-8:1.9
	binutils-csl-renesas-4_1-7:1.9
	binutils-csl-renesas-4_1-6:1.9
	binutils-csl-sourcerygxx-4_1-17:1.9
	binutils-csl-sourcerygxx-4_1-14:1.9
	binutils-csl-sourcerygxx-4_1-15:1.9
	binutils-csl-sourcerygxx-4_1-13:1.9
	binutils-2_17:1.9
	binutils-csl-sourcerygxx-4_1-12:1.9
	binutils-csl-sourcerygxx-3_4_4-21:1.9
	binutils-csl-wrs-linux-3_4_4-24:1.7
	binutils-csl-wrs-linux-3_4_4-23:1.7
	binutils-csl-sourcerygxx-4_1-9:1.9
	binutils-csl-sourcerygxx-4_1-8:1.9
	binutils-csl-sourcerygxx-4_1-7:1.9
	binutils-csl-arm-2006q1-6:1.9
	binutils-csl-sourcerygxx-4_1-6:1.9
	binutils-csl-wrs-linux-3_4_4-22:1.7
	binutils-csl-coldfire-4_1-11:1.9
	binutils-csl-sourcerygxx-3_4_4-19:1.9
	binutils-csl-coldfire-4_1-10:1.9
	binutils-csl-sourcerygxx-4_1-5:1.9
	binutils-csl-sourcerygxx-4_1-4:1.9
	binutils-csl-wrs-linux-3_4_4-21:1.7
	binutils-csl-morpho-4_1-4:1.9
	binutils-csl-sourcerygxx-3_4_4-17:1.9
	binutils-csl-wrs-linux-3_4_4-20:1.7
	binutils-2_17-branch:1.9.0.4
	binutils-2_17-branchpoint:1.9
	binutils-csl-2_17-branch:1.9.0.2
	binutils-csl-2_17-branchpoint:1.9
	binutils-csl-gxxpro-3_4-branch:1.7.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.7
	binutils-2_16_1:1.7
	binutils-csl-arm-2005q1b:1.7
	binutils-2_16:1.7
	binutils-csl-arm-2005q1a:1.7
	binutils-csl-arm-2005q1-branch:1.7.0.4
	binutils-csl-arm-2005q1-branchpoint:1.7
	binutils-2_16-branch:1.7.0.2
	binutils-2_16-branchpoint:1.7
	csl-arm-2004-q3d:1.6
	csl-arm-2004-q3:1.6
	binutils-2_15:1.6
	binutils-2_15-branchpoint:1.6
	csl-arm-2004-q1a:1.6
	csl-arm-2004-q1:1.6
	binutils-2_15-branch:1.6.0.6
	cagney_bfdfile-20040213-branch:1.6.0.4
	cagney_bfdfile-20040213-branchpoint:1.6
	cagney_bigcore-20040122-branch:1.6.0.2
	cagney_bigcore-20040122-branchpoint:1.6
	csl-arm-2003-q4:1.6
	binutils-2_14:1.5
	binutils-2_14-branch:1.5.0.2
	binutils-2_14-branchpoint:1.5
	binutils-2_13_2_1:1.3
	binutils-2_13_2:1.3
	binutils-2_13_1:1.3
	binutils-2_13:1.3
	binutils-2_13-branchpoint:1.3
	binutils-2_13-branch:1.3.0.6
	binutils-2_12_1:1.3
	binutils-2_12:1.3
	binutils-2_12-branch:1.3.0.4
	binutils-2_12-branchpoint:1.3
	cygnus_cvs_20020108_pre:1.3
	binutils-2_11_2:1.3
	binutils-2_11_1:1.3
	binutils-2_11:1.3
	x86_64versiong3:1.3
	binutils-2_11-branch:1.3.0.2
	binutils_latest_snapshot:1.10;
locks; strict;
comment	@# @;


1.10
date	2012.09.04.13.52.06;	author hjl;	state Exp;
branches;
next	1.9;

1.9
date	2006.02.23.21.36.17;	author hjl;	state Exp;
branches
	1.9.24.1;
next	1.8;

1.8
date	2005.03.28.22.34.19;	author hjl;	state Exp;
branches;
next	1.7;

1.7
date	2005.02.14.08.02.49;	author jbeulich;	state Exp;
branches;
next	1.6;

1.6
date	2003.09.26.03.54.09;	author hjl;	state Exp;
branches;
next	1.5;

1.5
date	2003.04.23.17.51.42;	author nickc;	state Exp;
branches;
next	1.4;

1.4
date	2002.12.05.02.08.01;	author wilson;	state Exp;
branches;
next	1.3;

1.3
date	2000.09.22.19.43.49;	author wilson;	state Exp;
branches;
next	1.2;

1.2
date	2000.04.25.01.52.27;	author wilson;	state Exp;
branches;
next	1.1;

1.1
date	2000.04.21.20.22.22;	author wilson;	state Exp;
branches;
next	;

1.9.24.1
date	2012.09.04.13.57.44;	author gingold;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Add Intel Itanium Series 9500 support

bfd/

2012-09-04  Sergey A. Guriev <sergey.a.guriev@@intel.com>

	* cpu-ia64-opc.c (ins_cnt6a): New function.
	(ext_cnt6a): Ditto.
	(ins_strd5b): Ditto.
	(ext_strd5b): Ditto.
	(elf64_ia64_operands): Add new operand types.

gas/

2012-09-04  Sergey A. Guriev  <sergey.a.guriev@@intel.com>

	* config/tc-ia64.c (reg_symbol): Add a new register.
	(indirect_reg): Ditto.
	(pseudo_func): Add new symbolic constants.
	(operand_match): Add new operand types recognition.
	(operand_insn): Add new register recognition.
	(md_begin): Add new register definition.
	(specify_resource): Add new register recognition.

gas/testsuite/

2012-09-04  Sergey A. Guriev  <sergey.a.guriev@@intel.com>

	* gas/testsuite/gas/ia64/psn.d: New file.
	* gas/testsuite/gas/ia64/psn.s: New file.
	* gas/testsuite/gas/ia64/ia64.exp: Add new testcase.
	* gas/testsuite/gas/ia64/opc-i.d: Fixed failing tests.
	* gas/testsuite/gas/ia64/opc-m.d: Ditto.

include/opcode/

2012-09-04  Sergey A. Guriev <sergey.a.guriev@@intel.com>

	* ia64.h (ia64_opnd): Add new operand types.

opcodes/

2012-09-04  Sergey A. Guriev <sergey.a.guriev@@intel.com>

	* ia64-asmtab.h (completer_index): Extend bitfield to full uint.
	* ia64-gen.c: Promote completer index type to longlong.
	(irf_operand): Add new register recognition.
	(in_iclass_mov_x): Add an entry for the new mov_* instruction type.
	(lookup_specifier): Add new resource recognition.
	(insert_bit_table_ent): Relax abort condition according to the
	changed completer index type.
	(print_dis_table): Fix printf format for completer index.
	* ia64-ic.tbl: Add a new instruction class.
	* ia64-opc-i.c (ia64_opcodes_i): Define new I-instructions.
	* ia64-opc-m.c (ia64_opcodes_m): Define new M-instructions.
	* ia64-opc.h: Define short names for new operand types.
	* ia64-raw.tbl: Add new RAW resource for DAHR register.
	* ia64-waw.tbl: Add new WAW resource for DAHR register.
	* ia64-asmtab.c: Regenerate.
@
text
@# as: -xnone -mtune=itanium1
# objdump: -d
# name: ia64 opc-i

.*: +file format .*

Disassembly of section \.text:

0+000 <_start>:
   0:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
   6:	40 28 18 8c 38 80 	            pmpyshr2 r4=r5,r6,0
   c:	50 30 68 71       	            pmpyshr2\.u r4=r5,r6,16
  10:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
  16:	40 28 18 b4 3a 80 	            pmpy2\.r r4=r5,r6
  1c:	50 30 78 75       	            pmpy2\.l r4=r5,r6
  20:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
  26:	40 28 18 20 3a 80 	            mix1\.r r4=r5,r6
  2c:	50 30 40 75       	            mix2\.r r4=r5,r6
  30:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
  36:	40 28 18 20 3e 80 	            mix4\.r r4=r5,r6
  3c:	50 30 50 74       	            mix1\.l r4=r5,r6
  40:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
  46:	40 28 18 a8 3a 80 	            mix2\.l r4=r5,r6
  4c:	50 30 50 7c       	            mix4\.l r4=r5,r6
  50:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
  56:	40 28 18 80 3a 80 	            pack2\.uss r4=r5,r6
  5c:	50 30 10 75       	            pack2\.sss r4=r5,r6
  60:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
  66:	40 28 18 08 3e 80 	            pack4\.sss r4=r5,r6
  6c:	50 30 20 74       	            unpack1\.h r4=r5,r6
  70:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
  76:	40 28 18 90 3a 80 	            unpack2\.h r4=r5,r6
  7c:	50 30 20 7c       	            unpack4\.h r4=r5,r6
  80:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
  86:	40 28 18 18 3a 80 	            unpack1\.l r4=r5,r6
  8c:	50 30 30 75       	            unpack2\.l r4=r5,r6
  90:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
  96:	40 28 18 18 3e 80 	            unpack4\.l r4=r5,r6
  9c:	50 30 08 74       	            pmin1\.u r4=r5,r6
  a0:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
  a6:	40 28 18 14 3a 80 	            pmax1\.u r4=r5,r6
  ac:	50 30 18 75       	            pmin2 r4=r5,r6
  b0:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
  b6:	40 28 18 9c 3a 80 	            pmax2 r4=r5,r6
  bc:	50 30 58 74       	            psad1 r4=r5,r6
  c0:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
  c6:	40 28 2c 28 3b 80 	            mux1 r4=r5,@@rev
  cc:	50 40 50 76       	            mux1 r4=r5,@@mix
  d0:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
  d6:	40 28 24 28 3b 80 	            mux1 r4=r5,@@shuf
  dc:	50 50 50 76       	            mux1 r4=r5,@@alt
  e0:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
  e6:	40 28 00 28 3b 80 	            mux1 r4=r5,@@brcst
  ec:	50 00 50 77       	            mux2 r4=r5,0x0
  f0:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
  f6:	40 28 fc ab 3b 80 	            mux2 r4=r5,0xff
  fc:	50 50 55 77       	            mux2 r4=r5,0xaa
 100:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 106:	40 30 14 88 38 80 	            pshr2 r4=r5,r6
 10c:	00 28 18 73       	            pshr2 r4=r5,0
 110:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 116:	40 80 14 8c 39 80 	            pshr2 r4=r5,8
 11c:	e0 2b 18 73       	            pshr2 r4=r5,31
 120:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 126:	40 30 14 08 3c 80 	            pshr4 r4=r5,r6
 12c:	00 28 18 7a       	            pshr4 r4=r5,0
 130:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 136:	40 80 14 0c 3d 80 	            pshr4 r4=r5,8
 13c:	e0 2b 18 7a       	            pshr4 r4=r5,31
 140:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 146:	40 30 14 80 38 80 	            pshr2\.u r4=r5,r6
 14c:	00 28 08 73       	            pshr2\.u r4=r5,0
 150:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 156:	40 80 14 84 39 80 	            pshr2\.u r4=r5,8
 15c:	e0 2b 08 73       	            pshr2\.u r4=r5,31
 160:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 166:	40 30 14 00 3c 80 	            pshr4\.u r4=r5,r6
 16c:	00 28 08 7a       	            pshr4\.u r4=r5,0
 170:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 176:	40 80 14 04 3d 80 	            pshr4\.u r4=r5,8
 17c:	e0 2b 08 7a       	            pshr4\.u r4=r5,31
 180:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 186:	40 30 14 88 3c 80 	            shr r4=r5,r6
 18c:	60 28 00 79       	            shr\.u r4=r5,r6
 190:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 196:	40 28 18 90 38 80 	            pshl2 r4=r5,r6
 19c:	50 f8 28 77       	            pshl2 r4=r5,0
 1a0:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 1a6:	40 28 5c 94 3b 80 	            pshl2 r4=r5,8
 1ac:	50 00 28 77       	            pshl2 r4=r5,31
 1b0:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 1b6:	40 28 18 10 3c 80 	            pshl4 r4=r5,r6
 1bc:	50 f8 28 7e       	            pshl4 r4=r5,0
 1c0:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 1c6:	40 28 5c 14 3f 80 	            pshl4 r4=r5,8
 1cc:	50 00 28 7e       	            pshl4 r4=r5,31
 1d0:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 1d6:	40 28 18 90 3c 80 	            shl r4=r5,r6
 1dc:	00 28 48 73       	            popcnt r4=r5
 1e0:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 1e6:	40 28 18 00 2b 80 	            shrp r4=r5,r6,0
 1ec:	50 30 30 56       	            shrp r4=r5,r6,12
 1f0:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 1f6:	40 28 18 7e 2b 80 	            shrp r4=r5,r6,63
 1fc:	10 28 3c 52       	            extr r4=r5,0,16
 200:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 206:	40 08 14 7c 29 80 	            extr r4=r5,0,63
 20c:	50 29 9c 52       	            extr r4=r5,10,40
 210:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 216:	40 00 14 1e 29 80 	            extr\.u r4=r5,0,16
 21c:	00 28 f8 52       	            extr\.u r4=r5,0,63
 220:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 226:	40 a0 14 4e 29 80 	            extr\.u r4=r5,10,40
 22c:	50 f8 3d 53       	            dep\.z r4=r5,0,16
 230:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 236:	40 28 fc fc 29 80 	            dep\.z r4=r5,0,63
 23c:	50 a8 9d 53       	            dep\.z r4=r5,10,40
 240:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 246:	40 00 fc 9f 29 80 	            dep\.z r4=0,0,16
 24c:	f0 ff fb 53       	            dep\.z r4=127,0,63
 250:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 256:	40 00 e8 e3 2d 80 	            dep\.z r4=-128,5,50
 25c:	50 ad 9f 53       	            dep\.z r4=85,10,40
 260:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 266:	40 f0 17 9e 2b 80 	            dep r4=0,r5,0,16
 26c:	e0 2f f8 5f       	            dep r4=-1,r5,0,63
 270:	0c 00 00 00 01 00 	\[MFI\]       nop\.m 0x0
 276:	00 00 00 02 00 80 	            nop\.f 0x0
 27c:	50 30 58 4d       	            dep r4=r5,r6,10,7
 280:	04 00 00 00 01 00 	\[MLX\]       nop\.m 0x0
 286:	00 00 00 00 00 80 	            movl r4=0x0
 28c:	00 00 00 60 
 290:	04 00 00 00 01 c0 	\[MLX\]       nop\.m 0x0
 296:	ff ff ff ff 7f 80 	            movl r4=0xffffffffffffffff
 29c:	f0 f7 ff 6f 
 2a0:	04 00 00 00 01 80 	\[MLX\]       nop\.m 0x0
 2a6:	90 78 56 34 12 80 	            movl r4=0x1234567890abcdef
 2ac:	f0 76 6d 66 
 2b0:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 2b6:	00 00 00 00 00 e0 	            break\.i 0x0
 2bc:	ff ff 01 08       	            break\.i 0x1fffff
 2c0:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 2c6:	00 00 00 02 00 e0 	            nop\.i 0x0
 2cc:	ff ff 05 08       	            nop\.i 0x1fffff
 2d0:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 2d6:	30 25 fc ff 04 80 	            chk\.s\.i r4,0 <_start>
 2dc:	00 00 c4 00       	            mov r4=b0
 2e0:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 2e6:	00 20 04 80 03 00 	            mov b0=r4
 2ec:	40 00 00 03       	            mov pr=r4,0x0
 2f0:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 2f6:	a0 21 80 84 01 e0 	            mov pr=r4,0x1234
 2fc:	4f 80 7f 0b       	            mov pr=r4,0xfffffffffffffffe
 300:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 306:	00 00 00 00 01 e0 	            mov pr\.rot=0x0
 30c:	7f 00 00 02       	            mov pr\.rot=0x3ff0000
 310:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 316:	00 c0 ff 7f 05 80 	            mov pr\.rot=0xfffffffffc000000
 31c:	00 28 40 00       	            zxt1 r4=r5
 320:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 326:	40 00 14 22 00 80 	            zxt2 r4=r5
 32c:	00 28 48 00       	            zxt4 r4=r5
 330:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 336:	40 00 14 28 00 80 	            sxt1 r4=r5
 33c:	00 28 54 00       	            sxt2 r4=r5
 340:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 346:	40 00 14 2c 00 80 	            sxt4 r4=r5
 34c:	00 28 60 00       	            czx1\.l r4=r5
 350:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 356:	40 00 14 32 00 80 	            czx2\.l r4=r5
 35c:	00 28 70 00       	            czx1\.r r4=r5
 360:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 366:	40 00 14 3a 00 40 	            czx2\.r r4=r5
 36c:	00 20 0c 50       	            tbit\.z p2,p3=r4,0
 370:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 376:	20 14 10 06 28 40 	            tbit\.z\.unc p2,p3=r4,1
 37c:	40 20 0c 58       	            tbit\.z\.and p2,p3=r4,2
 380:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 386:	20 30 10 86 28 40 	            tbit\.z\.or p2,p3=r4,3
 38c:	80 20 0c 59       	            tbit\.z\.or\.andcm p2,p3=r4,4
 390:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 396:	30 54 10 84 28 60 	            tbit\.nz\.or p3,p2=r4,5
 39c:	c8 20 08 58       	            tbit\.nz\.and p3,p2=r4,6
 3a0:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 3a6:	30 74 10 84 2c 60 	            tbit\.nz\.or\.andcm p3,p2=r4,7
 3ac:	00 21 08 50       	            tbit\.z p3,p2=r4,8
 3b0:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 3b6:	30 94 10 04 28 40 	            tbit\.z\.unc p3,p2=r4,9
 3bc:	48 21 0c 58       	            tbit\.nz\.and p2,p3=r4,10
 3c0:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 3c6:	20 b4 10 86 28 40 	            tbit\.nz\.or p2,p3=r4,11
 3cc:	88 21 0c 59       	            tbit\.nz\.or\.andcm p2,p3=r4,12
 3d0:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 3d6:	30 d0 10 84 28 60 	            tbit\.z\.or p3,p2=r4,13
 3dc:	c0 21 08 58       	            tbit\.z\.and p3,p2=r4,14
 3e0:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 3e6:	30 f0 10 84 2c 40 	            tbit\.z\.or\.andcm p3,p2=r4,15
 3ec:	10 20 0c 50       	            tnat\.z p2,p3=r4
 3f0:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 3f6:	20 0c 10 06 28 40 	            tnat\.z\.unc p2,p3=r4
 3fc:	10 20 0c 58       	            tnat\.z\.and p2,p3=r4
 400:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 406:	20 08 10 86 28 40 	            tnat\.z\.or p2,p3=r4
 40c:	10 20 0c 59       	            tnat\.z\.or\.andcm p2,p3=r4
 410:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 416:	30 0c 10 84 28 60 	            tnat\.nz\.or p3,p2=r4
 41c:	18 20 08 58       	            tnat\.nz\.and p3,p2=r4
 420:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 426:	30 0c 10 84 2c 60 	            tnat\.nz\.or\.andcm p3,p2=r4
 42c:	10 20 08 50       	            tnat\.z p3,p2=r4
 430:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 436:	30 0c 10 04 28 40 	            tnat\.z\.unc p3,p2=r4
 43c:	18 20 0c 58       	            tnat\.nz\.and p2,p3=r4
 440:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 446:	20 0c 10 86 28 40 	            tnat\.nz\.or p2,p3=r4
 44c:	18 20 0c 59       	            tnat\.nz\.or\.andcm p2,p3=r4
 450:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 456:	30 08 10 84 28 60 	            tnat\.z\.or p3,p2=r4
 45c:	10 20 08 58       	            tnat\.z\.and p3,p2=r4
 460:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 466:	30 08 10 84 2c 60 	            tnat\.z\.or\.andcm p3,p2=r4
 46c:	40 88 08 07       	            mov b3=r4
 470:	0d 00 00 00 01 00 	\[MFI\]       nop\.m 0x0
 476:	00 00 00 02 00 60 	            nop\.f 0x0
 47c:	40 48 08 07       	            mov\.imp b3=r4,570 <_start\+0x570>;;
	\.\.\.
 570:	01 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 576:	30 20 00 84 03 60 	            mov\.sptk b3=r4,670 <_start\+0x670>
 57c:	40 40 08 07       	            mov\.sptk\.imp b3=r4,670 <_start\+0x670>;;
	\.\.\.
 670:	01 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 676:	30 20 08 84 03 60 	            mov\.dptk b3=r4,770 <_start\+0x770>
 67c:	40 50 08 07       	            mov\.dptk\.imp b3=r4,770 <_start\+0x770>;;
	\.\.\.
 770:	01 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 776:	30 20 14 84 03 60 	            mov\.ret b3=r4,870 <_start\+0x870>
 77c:	40 68 08 07       	            mov\.ret\.imp b3=r4,870 <_start\+0x870>;;
	\.\.\.
 870:	01 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 876:	30 20 10 84 03 60 	            mov\.ret\.sptk b3=r4,970 <_start\+0x970>
 87c:	40 60 08 07       	            mov\.ret\.sptk\.imp b3=r4,970 <_start\+0x970>;;
	\.\.\.
 970:	01 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 976:	30 20 18 84 03 60 	            mov\.ret\.dptk b3=r4,a70 <_start\+0xa70>
 97c:	40 70 08 07       	            mov\.ret\.dptk\.imp b3=r4,a70 <_start\+0xa70>;;
	\.\.\.
 a70:	00 00 00 80 01 00 	\[MII\]       hint\.m 0
 a76:	00 00 00 03 00 00 	            hint\.i 0x0
 a7c:	00 00 06 00       	            hint\.i 0x0
 a80:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 a86:	f0 ff ff 03 84 03 	            hint\.i 0x1fffff
 a8c:	00 00 06 00       	      \(p07\) hint\.i 0x0
 a90:	00 00 00 00 01 c0 	\[MII\]       nop\.m 0x0
 a96:	01 00 00 03 80 03 	      \(p07\) hint\.i 0x0
 a9c:	00 00 06 00       	      \(p07\) hint\.i 0x0
 aa0:	00 00 00 00 01 c0 	\[MII\]       nop\.m 0x0
 aa6:	f1 ff ff 03 84 03 	      \(p07\) hint\.i 0x1fffff
 aac:	00 00 06 00       	      \(p07\) hint\.i 0x0
 ab0:	00 00 00 00 01 c0 	\[MII\]       nop\.m 0x0
 ab6:	01 00 00 03 80 03 	      \(p07\) hint\.i 0x0
 abc:	00 00 06 00       	      \(p07\) hint\.i 0x0
 ac0:	00 00 00 00 01 c0 	\[MII\]       nop\.m 0x0
 ac6:	f1 ff ff 03 04 40 	      \(p07\) hint\.i 0x1fffff
 acc:	f0 04 0c 50       	            tf\.z p2,p3=39
 ad0:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 ad6:	20 7c 02 06 28 40 	            tf\.z\.unc p2,p3=39
 adc:	f0 04 0c 58       	            tf\.z\.and p2,p3=39
 ae0:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 ae6:	20 78 02 86 28 40 	            tf\.z\.or p2,p3=39
 aec:	f0 04 0c 59       	            tf\.z\.or\.andcm p2,p3=39
 af0:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 af6:	30 7c 02 84 28 60 	            tf\.nz\.or p3,p2=39
 afc:	f8 04 08 58       	            tf\.nz\.and p3,p2=39
 b00:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 b06:	30 7c 02 84 2c 60 	            tf\.nz\.or\.andcm p3,p2=39
 b0c:	f0 04 08 50       	            tf\.z p3,p2=39
 b10:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 b16:	30 7c 02 04 28 40 	            tf\.z\.unc p3,p2=39
 b1c:	f8 04 0c 58       	            tf\.nz\.and p2,p3=39
 b20:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 b26:	20 7c 02 86 28 40 	            tf\.nz\.or p2,p3=39
 b2c:	f8 04 0c 59       	            tf\.nz\.or\.andcm p2,p3=39
 b30:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 b36:	30 78 02 84 28 60 	            tf\.z\.or p3,p2=39
 b3c:	f0 04 08 58       	            tf\.z\.and p3,p2=39
 b40:	00 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 b46:	30 78 02 84 ac 43 	            tf\.z\.or\.andcm p3,p2=39
 b4c:	f0 04 0c 50       	      \(p07\) tf\.z p2,p3=39
 b50:	00 00 00 00 01 c0 	\[MII\]       nop\.m 0x0
 b56:	21 7c 02 06 a8 43 	      \(p07\) tf\.z\.unc p2,p3=39
 b5c:	f0 04 0c 58       	      \(p07\) tf\.z\.and p2,p3=39
 b60:	00 00 00 00 01 c0 	\[MII\]       nop\.m 0x0
 b66:	21 78 02 86 a8 43 	      \(p07\) tf\.z\.or p2,p3=39
 b6c:	f0 04 0c 59       	      \(p07\) tf\.z\.or\.andcm p2,p3=39
 b70:	00 00 00 00 01 c0 	\[MII\]       nop\.m 0x0
 b76:	31 7c 02 84 a8 63 	      \(p07\) tf\.nz\.or p3,p2=39
 b7c:	f8 04 08 58       	      \(p07\) tf\.nz\.and p3,p2=39
 b80:	00 00 00 00 01 c0 	\[MII\]       nop\.m 0x0
 b86:	31 7c 02 84 ac 63 	      \(p07\) tf\.nz\.or\.andcm p3,p2=39
 b8c:	f0 04 08 50       	      \(p07\) tf\.z p3,p2=39
 b90:	00 00 00 00 01 c0 	\[MII\]       nop\.m 0x0
 b96:	31 7c 02 04 a8 43 	      \(p07\) tf\.z\.unc p3,p2=39
 b9c:	f8 04 0c 58       	      \(p07\) tf\.nz\.and p2,p3=39
 ba0:	00 00 00 00 01 c0 	\[MII\]       nop\.m 0x0
 ba6:	21 7c 02 86 a8 43 	      \(p07\) tf\.nz\.or p2,p3=39
 bac:	f8 04 0c 59       	      \(p07\) tf\.nz\.or\.andcm p2,p3=39
 bb0:	00 00 00 00 01 c0 	\[MII\]       nop\.m 0x0
 bb6:	31 78 02 84 a8 63 	      \(p07\) tf\.z\.or p3,p2=39
 bbc:	f0 04 08 58       	      \(p07\) tf\.z\.and p3,p2=39
 bc0:	0d 00 00 00 01 00 	\[MFI\]       nop\.m 0x0
 bc6:	00 00 00 02 80 63 	            nop\.f 0x0
 bcc:	f0 04 08 59       	      \(p07\) tf\.z\.or\.andcm p3,p2=39;;
@


1.9
log
@bfd/

2006-02-23  H.J. Lu  <hongjiu.lu@@intel.com>

	* cpu-ia64-opc.c (ins_immu5b): New.
	(ext_immu5b): Likewise.
	(elf64_ia64_operands): Add IMMU5b.

gas/

2006-02-23  H.J. Lu  <hongjiu.lu@@intel.com>

	* config/tc-ia64.c (operand_match): Handle IA64_OPND_IMMU5b.

gas/testsuite/

2006-02-23  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/ia64/opc-i.s: Add tests for tf.
	* gas/ia64/pseudo.s: Likewise.
	* gas/ia64/opc-i.d: Updated.
	* gas/ia64/pseudo.d: Likewise.

include/opcode/

2006-02-23  H.J. Lu  <hongjiu.lu@@intel.com>

	* ia64.h (ia64_opnd): Add IA64_OPND_IMMU5b.

opcodes/

2006-02-23  H.J. Lu  <hongjiu.lu@@intel.com>

	* ia64-opc-i.c (bXc): New.
	(mXc): Likewise.
	(OpX2TaTbYaXcC): Likewise.
	(TF). Likewise.
	(TFCM). Likewise.
	(ia64_opcodes_i): Add instructions for tf.

	* ia64-opc.h (IMMU5b): New.

	* ia64-asmtab.c: Regenerated.
@
text
@d247 1
a247 1
 a70:	00 00 00 80 01 00 	\[MII\]       hint\.m 0x0
@


1.9.24.1
log
@bfd/
2012-09-04  Sergey A. Guriev <sergey.a.guriev@@intel.com>

	* cpu-ia64-opc.c (ins_cnt6a): New function.
	(ext_cnt6a): Ditto.
	(ins_strd5b): Ditto.
	(ext_strd5b): Ditto.
	(elf64_ia64_operands): Add new operand types.

gas/
2012-09-04  Sergey A. Guriev  <sergey.a.guriev@@intel.com>

	* config/tc-ia64.c (reg_symbol): Add a new register.
	(indirect_reg): Ditto.
	(pseudo_func): Add new symbolic constants.
	(operand_match): Add new operand types recognition.
	(operand_insn): Add new register recognition.
	(md_begin): Add new register definition.
	(specify_resource): Add new register recognition.

gas/
2012-09-04  Sergey A. Guriev  <sergey.a.guriev@@intel.com>

	* gas/testsuite/gas/ia64/psn.d: New file.
	* gas/testsuite/gas/ia64/psn.s: New file.
	* gas/testsuite/gas/ia64/ia64.exp: Add new testcase.
	* gas/testsuite/gas/ia64/opc-i.d: Fixed failing tests.
	* gas/testsuite/gas/ia64/opc-m.d: Ditto.

include/
2012-09-04  Sergey A. Guriev <sergey.a.guriev@@intel.com>

	* ia64.h (ia64_opnd): Add new operand types.

opcodes/
2012-09-04  Sergey A. Guriev <sergey.a.guriev@@intel.com>

	* ia64-asmtab.h (completer_index): Extend bitfield to full uint.
	* ia64-gen.c: Promote completer index type to longlong.
	(irf_operand): Add new register recognition.
	(in_iclass_mov_x): Add an entry for the new mov_* instruction type.
	(lookup_specifier): Add new resource recognition.
	(insert_bit_table_ent): Relax abort condition according to the
	changed completer index type.
	(print_dis_table): Fix printf format for completer index.
	* ia64-ic.tbl: Add a new instruction class.
	* ia64-opc-i.c (ia64_opcodes_i): Define new I-instructions.
	* ia64-opc-m.c (ia64_opcodes_m): Define new M-instructions.
	* ia64-opc.h: Define short names for new operand types.
	* ia64-raw.tbl: Add new RAW resource for DAHR register.
	* ia64-waw.tbl: Add new WAW resource for DAHR register.
	* ia64-asmtab.c: Regenerate.
@
text
@d247 1
a247 1
 a70:	00 00 00 80 01 00 	\[MII\]       hint\.m 0
@


1.8
log
@gas/

2005-03-28  David Mosberger  <davidm@@hpl.hp.com>
	    H.J. Lu  <hongjiu.lu@@intel.com>

	PR 803
	NEWS: Mention "-mtune=[itanium1|itanium2]".

	* config/tc-ia64.c (md): Add tune.
	(md_parse_option): Accepted "-mtune=[itanium1|itanium2]".
	(md_show_usage): Add "-mtune=[itanium1|itanium2]".
	(extra_goodness): Prefer M- and I-unit NOPs for itanium2. F and
	B unit NOPs are discouraged for McKinley-derived cores.
	(md_begin): Don't hardcode the "extra_goodness()" function in
	the comment...
	(ia64_init): Set md.tune to itanium2.

	* doc/as.texinfo: Add -mtune=[itanium1|itanium2]".
	* doc/c-ia64.texi: Likewise.

gas/testsuite/

2005-03-28  H.J. Lu  <hongjiu.lu@@intel.com>

	PR 803
	* gas/ia64/dv-imply.d: Pass -mtune=itanium1 to as.
	* gas/ia64/dv-mutex.d : Likewise.
	* gas/ia64/dv-safe.d: Likewise.
	* gas/ia64/dv-srlz.d.nop: Likewise.
	* gas/ia64/ldxmov-1.d: Likewise.
	* gas/ia64/opc-b.d: Likewise.
	* gas/ia64/opc-f.d: Likewise.
	* gas/ia64/opc-i.d: Likewise.
	* gas/ia64/opc-m.d: Likewise.
	* gas/ia64/operand-or.d: Likewise.
	* gas/ia64/pcrel.d: Likewise.
	* gas/ia64/pseudo.d: Likewise.
	* gas/ia64/tls.d: Likewise.

ld/testsuite/

2005-03-28  H.J. Lu  <hongjiu.lu@@intel.com>

	PR 803
	* ld-ia64/ia64.exp: Pass -mtune=itanium1 to as.
@
text
@d262 51
a312 3
 ac0:	0d 00 00 00 01 00 	\[MFI\]       nop\.m 0x0
 ac6:	00 00 00 02 80 e3 	            nop\.f 0x0
 acc:	ff ff 07 08       	      \(p07\) hint\.i 0x1fffff;;
@


1.7
log
@gas/
2005-02-13  Jan Beulich  <jbeulich@@novell.com>

	* config/tc-ia64.c (md_parse_option): Handle -xnone and -xdebugn.
	(md_show_usage): Add -xnone, -xdebugn, and -xdebugx. Relocate default
	indicator.
	(ia64_init): Set md.detect_dv.
	(ia64_start_line): New static variable warned. Warn only once when
	encountering explicit stops in automatic mode.
	* doc/c-ia64.texi: Describe -xnone, -xdebugn, and -xdebugx.
	* NEWS: Mention new default mode.

gas/testsuite/
2005-02-13  Jan Beulich  <jbeulich@@novell.com>

	* gas/ia64/label.l: Adjust line numbers.
	* gas/ia64/label.s: Add .explicit.
	* gas/ia64/nop_x.s: Likewise.
	* gas/ia64/opc-a.d: Add assembler option -xnone.
	* gas/ia64/opc-b.d: Likewise.
	* gas/ia64/opc-f.d: Likewise.
	* gas/ia64/opc-i.d: Likewise.
	* gas/ia64/opc-m.d: Likewise.
	* gas/ia64/opc-x.d: Likewise.
	* gas/ia64/pseudo.d: Likewise.
	* gas/ia64/regs.d: Likewise.
	* gas/ia64/tls.d: Likewise.
	* gas/ia64/unwind-err.l: Adjust line numbers.
	* gas/ia64/unwind-err.s: Remove explicit stops.

ld/testsuite/
2005-02-13  Jan Beulich  <jbeulich@@novell.com>

	* ld-elfvers/vers.exp (as_options): New. Set to -x for ia64.
	(build_binary): Pass as_options to ld_assemble.
	(test_ldfail): Likewise.
	(build_exec): Likewise.
	Pass as_options to run_ld_link_tests.
	* ld-ia64/tlsbin.s: Add .explicit.
	* ld-ia64/tlsbinpic.s: Likewise.
	* ld-ia64/tlspic1.s: Likewise.
@
text
@d1 1
a1 1
# as: -xnone
@


1.6
log
@2003-09-25  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/ia64/alias-ilp32.d: New file.
	* gas/ia64/secname-ilp32.d: Likewise.
	* gas/ia64/unwind-ilp32.d: Likewise.

	* gas/ia64/dependency-1.d: Support ILP32.
	* gas/ia64/dv-branch.d: Likewise.
	* gas/ia64/dv-imply.d: Likewise.
	* gas/ia64/dv-mutex.d: Likewise.
	* gas/ia64/dv-safe.d: Likewise.
	* gas/ia64/dv-srlz.d: Likewise.
	* gas/ia64/global.d: Likewise.
	* gas/ia64/ldxmov-1.d: Likewise.
	* gas/ia64/ltoff22x-1.d:Likewise.
	* gas/ia64/opc-a.d: Likewise.
	* gas/ia64/opc-b.d: Likewise.
	* gas/ia64/opc-f.d: Likewise.
	* gas/ia64/opc-i.d: Likewise.
	* gas/ia64/opc-m.d: Likewise.
	* gas/ia64/opc-x.d: Likewise.
	* gas/ia64/order.d: Likewise.
	* gas/ia64/regs.d: Likewise.
	* gas/ia64/tls.d: Likewise.

	* gas/ia64/ia64.exp: Run "secname-ilp32", "unwind-ilp32" and
	"alias-ilp32" for ia64-*-hpux*.
@
text
@d1 1
@


1.5
log
@More checks for valid labels
@
text
@d8 1
a8 1
0000000000000000 <_start>:
@


1.4
log
@Patch to update IA-64 port to SDM 2.1.
bfd/ChangeLog
	* cpu-ia64-opc.c: Add operand constant "ar.csd".
gas/ChangeLog
	* config/tc-ia64.c (pseudo_func): Add "@@pause" constant for "hint"
	instruction.
	(emit_one_bundle): Handle "hint" instruction.
	(operand_match): Match IA64_OPND_AR_CSD.
gas/testsuite/ChangeLog
	* gas/ia64/opc-b.d: Update for instructions added by SDM2.1.
	* gas/ia64/opc-b.s: Ditto.
	* gas/ia64/opc-f.d: Ditto.
	* gas/ia64/opc-f.s: Ditto.
	* gas/ia64/opc-i.d: Ditto.
	* gas/ia64/opc-i.s: Ditto.
	* gas/ia64/opc-m.d: Ditto.
	* gas/ia64/opc-m.s: Ditto.
	* gas/ia64/opc-x.d: Ditto.
	* gas/ia64/opc-x.s: Ditto.
include/opcode/ChangeLog
	* ia64.h: Fix copyright message.
	(IA64_OPND_AR_CSD): New operand kind.
opcodes/ChangeLog
	* ia64-opc-d.c (ia64_opcodes_d): Add "hint" instruction.
	* ia64-opc-b.c: Add "hint.b" instruction.
	* ia64-opc-f.c: Add "hint.f" instruction.
	* ia64-opc-i.c: Add "hint.i" instruction.
	* ia64-opc-m.c: Add "hint.m", "fc.i", "ld16", "st16", and
	"cmp8xchg16" instructions.
	* ia64-opc-x.c: Add "hint.x" instruction.
	* ia64-opc.h (AR_CSD): New macro.
	* ia64-ic.tbl: Update according to SDM2.1.
	* ia64-raw.tbl: Ditto.
	* ia64-waw.tbl: Ditto.
	* ia64-gen.c (in_iclass): Handle "hint" like "nop".
	(lookup_regindex): Recognize AR[FCR], AR[EFLAG], AR[CSD],
	AR[SSD], AR[CFLG], AR[FSR], AR[FIR], and AR[FDR].
	* ia64-asmtab.c: Regenerate.
@
text
@d249 15
a263 3
 a80:	0d 00 00 00 01 00 	\[MFI\]       nop\.m 0x0
 a86:	00 00 00 02 00 e0 	            nop\.f 0x0
 a8c:	ff ff 07 08       	            hint\.i 0x1fffff;;
@


1.3
log
@Fix ia64 gas testsuite.  Update ia64 DV tables.  Fix ia64 gas testsuite again.
gas/ChangeLog
	* config/tc-ia64.c (dv_sem): Add "stop".
	(specify_resource, case IA64_RS_PR): Only handles regs 1 to 15 now.
	(specify_resource, case IA64_RS_PRr): New for regs 16 to 62.
	(specify_resource, case IA64_RS_PR63): Reorder (note == 7) test to
	match above.
	(mark_resources): Check IA64_RS_PRr.
gas/testsuite/ChangeLog
	* gas/ia64/dv-raw-err.s: Add new testcases for PR%, 16 - 62.
	* gas/ia64/dv-waw-err.s: Likewise.
	* gas/ia64/dv-imply.d: Regenerate.
	* gas/ia64/dv-mutex.d, gas/ia64/dv-raw-err.l, gas/ia64/dv-safe.d,
	gas/ia64/dv-srlz.d, gas/ia64/dv-war-err.l, gas/ia64/dv-waw-err.l,
	gas/ia64/opc-f.d, gas/ia64/opc-i.d, gas/ia64/opc-m.d: Likewise.
include/opcode/ChangeLog
	* ia64.h (enum ia64_dependency_semantics): Add IA64_DVS_STOP.
opcodes/ChangeLog
	* ia64-dis.c (print_insn_ia64): Revert Aug 7 byte skip count change.
	* ia64-gen.c (parse_semantics): Handle IA64_DVS_STOP.
	(lookup_specifier): Handle "PR%, 1 to 15" and "PR%, 16 to 62".
	* ia64-ic.tbl, ia64-raw.tbl, ia64-war.tbl, ia64-waw.tbl: Update.
	* ia64-asmtab.c: Regnerate.
@
text
@d246 6
@


1.2
log
@Really fix last IA-64 gas testsuite failure.
	* gas/ia64/opc-i.d: Change pmin2.u to pmin2.  Change pmax2.u to pmax2.
	Change MLI to MLX.  Switch operands for output matching tbit.z.orcm,
	tbit.z.andcm, tbit.nz.orcm, tbit.nz.andcm, tnat.z.orcm, tnat.z.andcm,
	tnat.nz.orcm, tnat.nz.andcm inputs.
	* gas/ia64/opc-i.pl: Insert padding nops before last dep.
	* gas/ia64/opc-i.s: Regenerate.
@
text
@d222 3
a224 3
 470:	01 00 00 00 01 00 	\[MII\]       nop\.m 0x0
 476:	30 20 24 84 03 00 	            mov\.imp b3=r4,570 <_start\+0x570>
 47c:	00 00 04 00       	            nop\.i 0x0;;
@


1.1
log
@IA-64 ELF support.
@
text
@d41 1
a41 1
  ac:	50 30 18 75       	            pmin2\.u r4=r5,r6
d43 1
a43 1
  b6:	40 28 18 9c 3a 80 	            pmax2\.u r4=r5,r6
d129 1
a129 1
 280:	04 00 00 00 01 00 	\[MLI\]       nop\.m 0x0
d132 1
a132 1
 290:	04 00 00 00 01 c0 	\[MLI\]       nop\.m 0x0
d135 1
a135 1
 2a0:	04 00 00 00 01 80 	\[MLI\]       nop\.m 0x0
d181 2
a182 2
 396:	20 54 10 86 28 40 	            tbit\.nz\.or p2,p3=r4,5
 39c:	c8 20 0c 58       	            tbit\.nz\.and p2,p3=r4,6
d193 2
a194 2
 3d6:	20 d0 10 86 28 40 	            tbit\.z\.or p2,p3=r4,13
 3dc:	c0 21 0c 58       	            tbit\.z\.and p2,p3=r4,14
d205 2
a206 2
 416:	20 0c 10 86 28 40 	            tnat\.nz\.or p2,p3=r4
 41c:	18 20 0c 58       	            tnat\.nz\.and p2,p3=r4
d217 2
a218 2
 456:	20 08 10 86 28 40 	            tnat\.z\.or p2,p3=r4
 45c:	10 20 0c 58       	            tnat\.z\.and p2,p3=r4
d221 1
a221 1
 46c:	40 88 04 07       	            mov b3=r4
@

