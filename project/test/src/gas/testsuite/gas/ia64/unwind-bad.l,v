head	1.2;
access;
symbols
	binutils-2_24-branch:1.2.0.26
	binutils-2_24-branchpoint:1.2
	binutils-2_21_1:1.2
	binutils-2_23_2:1.2
	binutils-2_23_1:1.2
	binutils-2_23:1.2
	binutils-2_23-branch:1.2.0.24
	binutils-2_23-branchpoint:1.2
	binutils-2_22_branch:1.2.0.22
	binutils-2_22:1.2
	binutils-2_22-branch:1.2.0.20
	binutils-2_22-branchpoint:1.2
	binutils-2_21:1.2
	binutils-2_21-branch:1.2.0.18
	binutils-2_21-branchpoint:1.2
	binutils-2_20_1:1.2
	binutils-2_20:1.2
	binutils-arc-20081103-branch:1.2.0.16
	binutils-arc-20081103-branchpoint:1.2
	binutils-2_20-branch:1.2.0.14
	binutils-2_20-branchpoint:1.2
	dje-cgen-play1-branch:1.2.0.12
	dje-cgen-play1-branchpoint:1.2
	arc-20081103-branch:1.2.0.10
	arc-20081103-branchpoint:1.2
	binutils-2_19_1:1.2
	binutils-2_19:1.2
	binutils-2_19-branch:1.2.0.8
	binutils-2_19-branchpoint:1.2
	binutils-2_18:1.2
	binutils-2_18-branch:1.2.0.6
	binutils-2_18-branchpoint:1.2
	binutils-csl-coldfire-4_1-32:1.2
	binutils-csl-sourcerygxx-4_1-32:1.2
	binutils-csl-innovasic-fido-3_4_4-33:1.2
	binutils-csl-coldfire-4_1-30:1.2
	binutils-csl-sourcerygxx-4_1-30:1.2
	binutils-csl-coldfire-4_1-28:1.2
	binutils-csl-sourcerygxx-4_1-29:1.2
	binutils-csl-sourcerygxx-4_1-28:1.2
	binutils-csl-arm-2006q3-27:1.2
	binutils-csl-sourcerygxx-4_1-27:1.2
	binutils-csl-arm-2006q3-26:1.2
	binutils-csl-sourcerygxx-4_1-26:1.2
	binutils-csl-sourcerygxx-4_1-25:1.2
	binutils-csl-sourcerygxx-4_1-24:1.2
	binutils-csl-sourcerygxx-4_1-23:1.2
	binutils-csl-sourcerygxx-4_1-21:1.2
	binutils-csl-arm-2006q3-21:1.2
	binutils-csl-sourcerygxx-4_1-22:1.2
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.2
	binutils-csl-sourcerygxx-4_1-20:1.2
	binutils-csl-arm-2006q3-19:1.2
	binutils-csl-sourcerygxx-4_1-19:1.2
	binutils-csl-sourcerygxx-4_1-18:1.2
	binutils-csl-renesas-4_1-9:1.2
	binutils-csl-renesas-4_1-8:1.2
	binutils-csl-renesas-4_1-7:1.2
	binutils-csl-renesas-4_1-6:1.2
	binutils-csl-sourcerygxx-4_1-17:1.2
	binutils-csl-sourcerygxx-4_1-14:1.2
	binutils-csl-sourcerygxx-4_1-15:1.2
	binutils-csl-sourcerygxx-4_1-13:1.2
	binutils-2_17:1.2
	binutils-csl-sourcerygxx-4_1-12:1.2
	binutils-csl-sourcerygxx-3_4_4-21:1.2
	binutils-csl-sourcerygxx-4_1-9:1.2
	binutils-csl-sourcerygxx-4_1-8:1.2
	binutils-csl-sourcerygxx-4_1-7:1.2
	binutils-csl-arm-2006q1-6:1.2
	binutils-csl-sourcerygxx-4_1-6:1.2
	binutils-csl-coldfire-4_1-11:1.2
	binutils-csl-sourcerygxx-3_4_4-19:1.2
	binutils-csl-coldfire-4_1-10:1.2
	binutils-csl-sourcerygxx-4_1-5:1.2
	binutils-csl-sourcerygxx-4_1-4:1.2
	binutils-csl-morpho-4_1-4:1.2
	binutils-csl-sourcerygxx-3_4_4-17:1.2
	binutils-2_17-branch:1.2.0.4
	binutils-2_17-branchpoint:1.2
	binutils-csl-2_17-branch:1.2.0.2
	binutils-csl-2_17-branchpoint:1.2
	binutils_latest_snapshot:1.2;
locks; strict;
comment	@ * @;


1.2
date	2005.07.27.06.32.46;	author jbeulich;	state Exp;
branches;
next	1.1;

1.1
date	2005.07.01.06.51.39;	author jbeulich;	state Exp;
branches;
next	;


desc
@@


1.2
log
@gas/
2005-07-27  Jan Beulich  <jbeulich@@novell.com>

	* config/tc-ia64.h (unw_r_record): Change type of fr_mem to unsigned
	int.
	(unw_p_record): Remove unused/redundant fields imask and rmask.
	Combine spoff and pspoff into a union. Combine gr and br into a
	union. Change type of grmask and brmask to unsigned char. Change type
	of frmask to unsigned int.
	(unw_x_record): Combine spoff, pspoff, and treg into a union.
	* config/tc-ia64.c (unwind): New field 'pending_saves'.
	(check_pending_save): New.
	(alloc_record): Clear out entire record.
	(output_psp_gr): Use renamed structure fields.
	(output_psp_sprel): Likewise.
	(output_rp_gr): Likewise.
	(output_rp_br): Likewise.
	(output_rp_psprel): Likewise.
	(output_rp_sprel): Likewise.
	(output_pfs_gr): Likewise.
	(output_pfs_psprel): Likewise.
	(output_pfs_sprel): Likewise.
	(output_preds_gr): Likewise.
	(output_preds_psprel): Likewise.
	(output_preds_sprel): Likewise.
	(output_spill_base): Likewise.
	(output_unat_gr): Likewise.
	(output_unat_psprel): Likewise.
	(output_unat_sprel): Likewise.
	(output_lc_gr): Likewise.
	(output_lc_psprel): Likewise.
	(output_lc_sprel): Likewise.
	(output_fpsr_gr): Likewise.
	(output_fpsr_psprel): Likewise.
	(output_fpsr_sprel): Likewise.
	(output_priunat_gr): Likewise.
	(output_priunat_psprel): Likewise.
	(output_priunat_sprel): Likewise.
	(output_bsp_gr): Likewise.
	(output_bsp_psprel): Likewise.
	(output_bsp_sprel): Likewise.
	(output_bspstore_gr): Likewise.
	(output_bspstore_psprel): Likewise.
	(output_bspstore_sprel): Likewise.
	(output_rnat_gr): Likewise.
	(output_rnat_psprel): Likewise.
	(output_rnat_sprel): Likewise.
	(output_spill_psprel): Likewise.
	(output_spill_sprel): Likewise.
	(output_spill_reg): Likewise.
	(output_fr_mem): Likewise. Allocate one unwind record per set mask
	bit.
	(output_frgr_mem): Likewise.
	(output_gr_mem): Likewise.
	(output_br_mem): Likewise.
	(output_gr_gr): Likewise.
	(output_br_gr): Likewise.
	(fixup_unw_records): Likewise.
	(process_one_record): Use renamed structure fields. For gr_gr and
	br_gr, collect mask from chain of records before output.
	(in_prologue): Simplify and eliminate early returns. Call
	check_pending_save.
	(in_body): Simplify and eliminate early returns.
	(dot_body): Call check_pending_save.
	(md_assemble): Update comment. Deal with pending saves.

gas/testsuite/
2005-07-27  Jan Beulich  <jbeulich@@novell.com>

	* gas/ia64/unwind-bad.l: Uncomment patterns matching new warnings.
	* gas/ia64/unwind-ok.d: Correct expectations.
@
text
@.*: Assembler messages:
.*:8: Error: First operand to \.save\.g must be a positive 4-bit constant
.*:10: Error: First operand to \.save\.g must be a positive 4-bit constant
.*:12: Error: First operand to \.save\.g must be a positive 4-bit constant
.*:16: Warning: Previous .save incomplete
#FIXME .*:18: Error: Register r4 was already saved
.*:20: Error: Operand to \.save\.f must be a positive 20-bit constant
.*:22: Error: Operand to \.save\.f must be a positive 20-bit constant
.*:24: Error: Operand to \.save\.f must be a positive 20-bit constant
.*:28: Warning: Previous .save incomplete
#FIXME .*:30: Error: Register f2 was already saved
.*:32: Error: First operand to \.save\.b must be a positive 5-bit constant
.*:34: Error: First operand to \.save\.b must be a positive 5-bit constant
.*:36: Error: First operand to \.save\.b must be a positive 5-bit constant
.*:40: Warning: Previous .save incomplete
#FIXME .*:42: Error: Register b1 was already saved
.*:44: Error: Operand 2 to \.spillreg must be a writable register
.*:46: Error: Operand 1 to \.spillreg must be a preserved register
.*:48: Error: Operand 1 to \.spillreg must be a preserved register
.*:50: Error: Operand 1 to \.spillreg must be a preserved register
.*:52: Error: Operand 2 to \.spillreg must be a writable register
.*:54: Error: Operand 2 to \.spillreg must be a writable register
.*:56: Error: Operand 1 to \.spillreg must be a preserved register
#FIXME .*:58: Error: Floating point register cannot be spilled to general register
#FIXME .*:60: Error: Floating point register cannot be spilled to branch register
.*:62: Warning: Pointless use of p0 as first operand to \.spillreg\.p
.*:64: Error: Operand 3 to \.spillreg.p must be a writable register
.*:66: Error: Operand 3 to \.spillreg.p must be a writable register
.*:68: Warning: Pointless use of p0 as first operand to \.restorereg\.p
.*:78: Error: Operands to \.save\.gf may not be both zero
.*:80: Error: First operand to \.save\.gf must be a non-negative 4-bit constant
.*:82: Error: Second operand to \.save\.gf must be a non-negative 20-bit constant
.*:84: Error: First operand to \.save\.gf must be a non-negative 4-bit constant
.*:86: Error: Second operand to \.save\.gf must be a non-negative 20-bit constant
.*:90: Warning: Previous .save incomplete
#FIXME .*:92: Error: Register r4 was already saved
#FIXME .*:94: Error: Register f2 was already saved
.*:98: Error: Epilogue count of 2 exceeds number of nested prologues \(1\)
.*:100: Error: Missing \.label_state 2
.*:108: Error: First operand to \.save\.g must be a positive 4-bit constant
#FIXME .*:110: Error: Second operand to \.save\.g must be a writable general registers
.*:112: Error: Second operand to \.save\.g must be the first of 2 general registers
.*:115: Error: First operand to \.save\.b must be a positive 5-bit constant
#FIXME .*:117: Error: Second operand to \.save\.b must be a writable general registers
.*:119: Error: Second operand to \.save\.b must be the first of 2 general registers
.*:128: Error: First operand to \.prologue must be a positive 4-bit constant
.*:134: Warning: Pointless use of zero first operand to \.prologue
.*:140: Error: First operand to \.prologue must be a positive 4-bit constant
#FIXME .*:141: Error: Operand to \.vframe must be a writable general registers
#FIXME .*:147: Error: Second operand to \.prologue must be a writable general registers
.*:153: Error: Second operand to \.prologue must be the first of 2 general registers
@


1.1
log
@gas/
2005-07-01  Jan Beulich  <jbeulich@@novell.com>

	* config/tc-ia64.c (line_separator_chars): Add '{' and '}'.
	(output_spill_psprel, output_spill_psprel_p): Combine.
	(output_spill_sprel, output_spill_sprel_p): Combine.
	(output_spill_reg, output_spill_regp_p): Combine.
	(process_one_record): Handle psp_psprel.
	(parse_predicate_and_operand): New.
	(convert_expr_to_ab_reg): Two new parameters. Return void. Always
	initialize output values. Emit diagnostic case here.
	(convert_expr_to_xy_reg): Likewise. Don't allow r0, f0, and f1.
	(add_unwind_entry): New second parameter. Allow first parameter to
	be NULL. Parse optional tag, emit warning about further support for
	it otherwise being missing. Check end-of-line when requested.
	(dot_fframe): Clear operand when wrong. Allow tag.
	(dot_vframe): Likewise.
	(dot_vframesp): Likewise. Rename parameter, issue warning when psp
	relative.
	(dot_vframepsp): Remove.
	(dot_altrp): Clear operand when wrong. Allow tag.
	(dot_save): Likewise. Let default case also go through
	add_unwind_entry.
	(dot_savemem): Likewise.
	(dot_restore): Don't return when wrong operand. Allow tag.
	(dot_spillreg, dot_spillreg_p): Combine. Simplify by using
	parse_predicate_and_operand and the new arguments to
	convert_expr_to_ab_reg and convert_expr_to_xy_reg. Don't return
	when wrong operand. Allow tag.
	(dot_restorereg, dot_restorereg_p): Likewise.
	(dot_spillmem, dot_spillmem_p): Likewise.
	(dot_saveg): Clear operand when wrong. Perform tighter operand
	checks. Allow tag.
	(dot_savef): Likewise.
	(dot_saveb): Likewise.
	(dot_savegf): Likewise.
	(dot_spill): Remove end-of-line check. 	Combine. Simplify by using
	parse_predicate_and_operand and the new arguments to
	convert_expr_to_ab_reg and convert_expr_to_xy_reg. Don't return
	when wrong operand. Allow tag.
	(popcount): New.
	(dot_label_state): Don't return when wrong operand.
	(dot_copy_state): Likewise.
	(dot_unwabi): Likewise. Check if in prologue.
	(dot_body): Don't call demand_empty_rest_of_line.
	(dot_prologue): Type of mask and grsave is unsigned. Perform tighter
	operand checks.
	(md_pseudo_table): Also use dot_restorereg for .restorereg.p. Also
	use dot_spillreg for .spillreg.p. Also use dot_spillmem for
	.spillpsp.p and .spillsp.p. Also use dot_vframesp for .vframepsp.
	(parse_operand): New second parameter. Don't deal with '}' here
	anymore. Don't advance past end-of-line.
	(parse_operands): Pass second argument to parse_operand.
	(ia64_start_line): Prevent out-of-bounds access through
	input_line_pointer. Deal with '}' here.
	(ia64_unrecognized_line): Don't deal with '}' here.
	(dot_alias): Use ignore_rest_of_line not its deprecated alias
	discard_rest_of_line.

gas/testsuite/
2005-07-01  Jan Beulich  <jbeulich@@novell.com>

	* gas/ia64/group-2.s: Use register as second operand of .prologue.
	* gas/ia64/unwind-err.s: Add check for .vframesp.
	* gas/ia64/unwind-err.l: Adjust.
	* gas/ia64/strange.[sd]: New.
	* gas/ia64/unwind-bad.[sl]: New.
	* gas/ia64/unwind-ok.[sd]: New.
	* gas/ia64/ia64.exp: Run new tests.
@
text
@d5 1
a5 1
#FIXME .*:16: Error: Previous spill incomplete
d10 1
a10 1
#FIXME .*:28: Error: Previous spill incomplete
d15 1
a15 1
#FIXME .*:40: Error: Previous spill incomplete
d35 1
a35 1
#FIXME .*:90: Error: Previous spill incomplete
@

