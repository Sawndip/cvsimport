head	1.1;
access;
symbols
	binutils-2_24-branch:1.1.0.26
	binutils-2_24-branchpoint:1.1
	binutils-2_21_1:1.1
	binutils-2_23_2:1.1
	binutils-2_23_1:1.1
	binutils-2_23:1.1
	binutils-2_23-branch:1.1.0.24
	binutils-2_23-branchpoint:1.1
	binutils-2_22_branch:1.1.0.22
	binutils-2_22:1.1
	binutils-2_22-branch:1.1.0.20
	binutils-2_22-branchpoint:1.1
	binutils-2_21:1.1
	binutils-2_21-branch:1.1.0.18
	binutils-2_21-branchpoint:1.1
	binutils-2_20_1:1.1
	binutils-2_20:1.1
	binutils-arc-20081103-branch:1.1.0.16
	binutils-arc-20081103-branchpoint:1.1
	binutils-2_20-branch:1.1.0.14
	binutils-2_20-branchpoint:1.1
	dje-cgen-play1-branch:1.1.0.12
	dje-cgen-play1-branchpoint:1.1
	arc-20081103-branch:1.1.0.10
	arc-20081103-branchpoint:1.1
	binutils-2_19_1:1.1
	binutils-2_19:1.1
	binutils-2_19-branch:1.1.0.8
	binutils-2_19-branchpoint:1.1
	binutils-2_18:1.1
	binutils-2_18-branch:1.1.0.6
	binutils-2_18-branchpoint:1.1
	binutils-csl-coldfire-4_1-32:1.1
	binutils-csl-sourcerygxx-4_1-32:1.1
	binutils-csl-innovasic-fido-3_4_4-33:1.1
	binutils-csl-coldfire-4_1-30:1.1
	binutils-csl-sourcerygxx-4_1-30:1.1
	binutils-csl-coldfire-4_1-28:1.1
	binutils-csl-sourcerygxx-4_1-29:1.1
	binutils-csl-sourcerygxx-4_1-28:1.1
	binutils-csl-arm-2006q3-27:1.1
	binutils-csl-sourcerygxx-4_1-27:1.1
	binutils-csl-arm-2006q3-26:1.1
	binutils-csl-sourcerygxx-4_1-26:1.1
	binutils-csl-sourcerygxx-4_1-25:1.1
	binutils-csl-sourcerygxx-4_1-24:1.1
	binutils-csl-sourcerygxx-4_1-23:1.1
	binutils-csl-sourcerygxx-4_1-21:1.1
	binutils-csl-arm-2006q3-21:1.1
	binutils-csl-sourcerygxx-4_1-22:1.1
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.1
	binutils-csl-sourcerygxx-4_1-20:1.1
	binutils-csl-arm-2006q3-19:1.1
	binutils-csl-sourcerygxx-4_1-19:1.1
	binutils-csl-sourcerygxx-4_1-18:1.1
	binutils-csl-renesas-4_1-9:1.1
	binutils-csl-renesas-4_1-8:1.1
	binutils-csl-renesas-4_1-7:1.1
	binutils-csl-renesas-4_1-6:1.1
	binutils-csl-sourcerygxx-4_1-17:1.1
	binutils-csl-sourcerygxx-4_1-14:1.1
	binutils-csl-sourcerygxx-4_1-15:1.1
	binutils-csl-sourcerygxx-4_1-13:1.1
	binutils-2_17:1.1
	binutils-csl-sourcerygxx-4_1-12:1.1
	binutils-csl-sourcerygxx-3_4_4-21:1.1
	binutils-csl-sourcerygxx-4_1-9:1.1
	binutils-csl-sourcerygxx-4_1-8:1.1
	binutils-csl-sourcerygxx-4_1-7:1.1
	binutils-csl-arm-2006q1-6:1.1
	binutils-csl-sourcerygxx-4_1-6:1.1
	binutils-csl-coldfire-4_1-11:1.1
	binutils-csl-sourcerygxx-3_4_4-19:1.1
	binutils-csl-coldfire-4_1-10:1.1
	binutils-csl-sourcerygxx-4_1-5:1.1
	binutils-csl-sourcerygxx-4_1-4:1.1
	binutils-csl-morpho-4_1-4:1.1
	binutils-csl-sourcerygxx-3_4_4-17:1.1
	binutils-2_17-branch:1.1.0.4
	binutils-2_17-branchpoint:1.1
	binutils-csl-2_17-branch:1.1.0.2
	binutils-csl-2_17-branchpoint:1.1
	binutils_latest_snapshot:1.1;
locks; strict;
comment	@# @;


1.1
date	2005.07.01.06.51.39;	author jbeulich;	state Exp;
branches;
next	;


desc
@@


1.1
log
@gas/
2005-07-01  Jan Beulich  <jbeulich@@novell.com>

	* config/tc-ia64.c (line_separator_chars): Add '{' and '}'.
	(output_spill_psprel, output_spill_psprel_p): Combine.
	(output_spill_sprel, output_spill_sprel_p): Combine.
	(output_spill_reg, output_spill_regp_p): Combine.
	(process_one_record): Handle psp_psprel.
	(parse_predicate_and_operand): New.
	(convert_expr_to_ab_reg): Two new parameters. Return void. Always
	initialize output values. Emit diagnostic case here.
	(convert_expr_to_xy_reg): Likewise. Don't allow r0, f0, and f1.
	(add_unwind_entry): New second parameter. Allow first parameter to
	be NULL. Parse optional tag, emit warning about further support for
	it otherwise being missing. Check end-of-line when requested.
	(dot_fframe): Clear operand when wrong. Allow tag.
	(dot_vframe): Likewise.
	(dot_vframesp): Likewise. Rename parameter, issue warning when psp
	relative.
	(dot_vframepsp): Remove.
	(dot_altrp): Clear operand when wrong. Allow tag.
	(dot_save): Likewise. Let default case also go through
	add_unwind_entry.
	(dot_savemem): Likewise.
	(dot_restore): Don't return when wrong operand. Allow tag.
	(dot_spillreg, dot_spillreg_p): Combine. Simplify by using
	parse_predicate_and_operand and the new arguments to
	convert_expr_to_ab_reg and convert_expr_to_xy_reg. Don't return
	when wrong operand. Allow tag.
	(dot_restorereg, dot_restorereg_p): Likewise.
	(dot_spillmem, dot_spillmem_p): Likewise.
	(dot_saveg): Clear operand when wrong. Perform tighter operand
	checks. Allow tag.
	(dot_savef): Likewise.
	(dot_saveb): Likewise.
	(dot_savegf): Likewise.
	(dot_spill): Remove end-of-line check. 	Combine. Simplify by using
	parse_predicate_and_operand and the new arguments to
	convert_expr_to_ab_reg and convert_expr_to_xy_reg. Don't return
	when wrong operand. Allow tag.
	(popcount): New.
	(dot_label_state): Don't return when wrong operand.
	(dot_copy_state): Likewise.
	(dot_unwabi): Likewise. Check if in prologue.
	(dot_body): Don't call demand_empty_rest_of_line.
	(dot_prologue): Type of mask and grsave is unsigned. Perform tighter
	operand checks.
	(md_pseudo_table): Also use dot_restorereg for .restorereg.p. Also
	use dot_spillreg for .spillreg.p. Also use dot_spillmem for
	.spillpsp.p and .spillsp.p. Also use dot_vframesp for .vframepsp.
	(parse_operand): New second parameter. Don't deal with '}' here
	anymore. Don't advance past end-of-line.
	(parse_operands): Pass second argument to parse_operand.
	(ia64_start_line): Prevent out-of-bounds access through
	input_line_pointer. Deal with '}' here.
	(ia64_unrecognized_line): Don't deal with '}' here.
	(dot_alias): Use ignore_rest_of_line not its deprecated alias
	discard_rest_of_line.

gas/testsuite/
2005-07-01  Jan Beulich  <jbeulich@@novell.com>

	* gas/ia64/group-2.s: Use register as second operand of .prologue.
	* gas/ia64/unwind-err.s: Add check for .vframesp.
	* gas/ia64/unwind-err.l: Adjust.
	* gas/ia64/strange.[sd]: New.
	* gas/ia64/unwind-bad.[sl]: New.
	* gas/ia64/unwind-ok.[sd]: New.
	* gas/ia64/ia64.exp: Run new tests.
@
text
@.text
.proc personality
personality:
	br.ret.sptk	rp
.endp personality

.proc full1
full1:

.prologue
.spill 0
.save.g 0x1
	nop		0
.save.f 0x1
	nop		0
.save.b 0x01
	nop		0
.save.g 0x8
	nop		0
.save.f 0x8
	nop		0
.save.b 0x10
	nop		0
.altrp b7
	nop		0
.unwabi @@svr4, 0
	nop		0

.body
.spillreg r4, r2
	nop		0
.spillreg.p p1, r7, r127
	nop		0
.spillsp b1, 0x08
	nop		0
.spillsp.p p2, b5, 0x10
	nop		0
.spillpsp f2, 0x18
	nop		0
.spillpsp.p p4, f5, 0x20
	nop		0
.restorereg f16
	nop		0
.restorereg.p p8, f31
	nop		0

.spillreg ar.bsp, r16
	nop		0
.spillreg ar.bspstore, r17
	nop		0
.spillreg ar.fpsr, r18
	nop		0
.spillreg ar.lc, r19
	nop		0
.spillreg ar.pfs, r20
	nop		0
.spillreg ar.rnat, r21
	nop		0
.spillreg ar.unat, r22
	nop		0
.spillreg psp, r23
	nop		0
.spillreg pr, r24
	nop		0
.spillreg rp, r25
	nop		0
.spillreg @@priunat, r26
	nop		0

.label_state 1
	nop		0
.restore sp
	nop.x		0
.copy_state 1
	br.ret.sptk	rp

.personality personality
.handlerdata
	data4		-1
	data4		0

.endp full1

.proc full2
full2:

.prologue 0xb, r8
.spill 0
.save.gf 0x1, 0x00001
	nop		0
	nop		0
.save.b 0x11, r32
	nop		0
	nop		0
.save.gf 0x8, 0x80000
	nop		0
	nop		0
.spillreg f31, f127
	nop		0
.spillreg.p p63, f16, f32
	nop		0
.spillsp f5, 0x20
	nop		0
.spillsp.p p31, f2, 0x18
	nop		0
.spillpsp b5, 0x10
	nop		0
.spillpsp.p p15, b1, 0x08
	nop		0
.restorereg r7
	nop		0
.restorereg.p p7, r4
	nop		0

.body; .prologue; .body; .prologue; .body; .prologue; .body; .prologue
.body; .prologue; .body; .prologue; .body; .prologue; .body; .prologue
.body; .prologue; .body; .prologue; .body; .prologue; .body; .prologue
.body; .prologue; .body; .prologue; .body; .prologue; .body; .prologue
.body; .prologue; .body; .prologue; .body; .prologue; .body; .prologue
.body; .prologue; .body; .prologue; .body; .prologue; .body; .prologue
.body; .prologue; .body; .prologue; .body; .prologue; .body; .prologue
.body; .prologue; .body; .prologue; .body; .prologue; .body; .prologue

.body
.label_state 32
	nop		0
.restore sp, 32
	nop.x		0
.copy_state 32
	br.ret.sptk	rp
.endp full2

.proc full3
full3:

.prologue
.spill 0
.save.g 0x3, r32
	nop		0
	nop		0
.save.b 0x03, r34
	nop		0
	nop		0
.save.g 0xc, r124
	nop		0
	nop		0
.save.b 0x18, r126
	nop		0
	nop		0
	nop.x		0
	nop.x		0
	nop.x		0
	nop.x		0
	nop.x		0
	nop.x		0
	nop.x		0
	nop.x		0
.body
	nop.x		0
	nop.x		0
	nop.x		0
	nop.x		0
	nop.x		0
	nop.x		0
	nop.x		0
	nop.x		0
	nop.x		0
	nop.x		0
	br.ret.sptk	rp
.endp full3

.proc fframe
fframe:
.prologue
.fframe 0
	nop		0
.body
	br.ret.sptk	rp
.endp fframe

.proc vframe
vframe:
.prologue
.vframe r16
	nop		0
.save ar.bsp, r17
	nop		0
.save ar.bspstore, r18
	nop		0
.save ar.fpsr, r19
	nop		0
.save ar.lc, r20
	nop		0
.save ar.pfs, r21
	nop		0
.save ar.rnat, r22
	nop		0
.save ar.unat, r23
	nop		0
.save pr, r24
	nop		0
.save @@priunat, r25
	nop		0
.save rp, r26
	nop		0
.body
	br.ret.sptk	rp
.endp vframe

.proc vframesp
vframesp:
.prologue
.vframesp 0
	nop		0
.savesp ar.bsp, 0x08
	nop		0
.savesp ar.bspstore, 0x10
	nop		0
.savesp ar.fpsr, 0x18
	nop		0
.savesp ar.lc, 0x20
	nop		0
.savesp ar.pfs, 0x28
	nop		0
.savesp ar.rnat, 0x30
	nop		0
.savesp ar.unat, 0x38
	nop		0
.savesp pr, 0x40
	nop		0
.savesp @@priunat, 0x48
	nop		0
.savesp rp, 0x50
	nop		0
.body
	br.ret.sptk	rp
.endp vframesp

.proc psp
psp:
.prologue
.vframesp 0
	nop		0
.savepsp ar.bsp, 0x08
	nop		0
.savepsp ar.bspstore, 0x10
	nop		0
.savepsp ar.fpsr, 0x18
	nop		0
.savepsp ar.lc, 0x20
	nop		0
.savepsp ar.pfs, 0x28
	nop		0
.savepsp ar.rnat, 0x30
	nop		0
.savepsp ar.unat, 0x38
	nop		0
.savepsp pr, 0x40
	nop		0
.savepsp @@priunat, 0x48
	nop		0
.savepsp rp, 0x50
	nop		0
.body
	br.ret.sptk	rp
.endp psp

.proc simple
simple:
.unwentry
	br.ret.sptk	rp
.endp simple
@
