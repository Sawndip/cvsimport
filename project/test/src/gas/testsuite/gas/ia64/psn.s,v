head	1.1;
access;
symbols
	binutils-2_24-branch:1.1.0.4
	binutils-2_24-branchpoint:1.1
	binutils-2_23_2:1.1.2.1
	binutils-2_23_1:1.1.2.1
	binutils-2_23:1.1.2.1
	binutils_latest_snapshot:1.1
	binutils-2_23-branch:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2012.09.04.13.52.06;	author hjl;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2012.09.04.14.37.57;	author gingold;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Add Intel Itanium Series 9500 support

bfd/

2012-09-04  Sergey A. Guriev <sergey.a.guriev@@intel.com>

	* cpu-ia64-opc.c (ins_cnt6a): New function.
	(ext_cnt6a): Ditto.
	(ins_strd5b): Ditto.
	(ext_strd5b): Ditto.
	(elf64_ia64_operands): Add new operand types.

gas/

2012-09-04  Sergey A. Guriev  <sergey.a.guriev@@intel.com>

	* config/tc-ia64.c (reg_symbol): Add a new register.
	(indirect_reg): Ditto.
	(pseudo_func): Add new symbolic constants.
	(operand_match): Add new operand types recognition.
	(operand_insn): Add new register recognition.
	(md_begin): Add new register definition.
	(specify_resource): Add new register recognition.

gas/testsuite/

2012-09-04  Sergey A. Guriev  <sergey.a.guriev@@intel.com>

	* gas/testsuite/gas/ia64/psn.d: New file.
	* gas/testsuite/gas/ia64/psn.s: New file.
	* gas/testsuite/gas/ia64/ia64.exp: Add new testcase.
	* gas/testsuite/gas/ia64/opc-i.d: Fixed failing tests.
	* gas/testsuite/gas/ia64/opc-m.d: Ditto.

include/opcode/

2012-09-04  Sergey A. Guriev <sergey.a.guriev@@intel.com>

	* ia64.h (ia64_opnd): Add new operand types.

opcodes/

2012-09-04  Sergey A. Guriev <sergey.a.guriev@@intel.com>

	* ia64-asmtab.h (completer_index): Extend bitfield to full uint.
	* ia64-gen.c: Promote completer index type to longlong.
	(irf_operand): Add new register recognition.
	(in_iclass_mov_x): Add an entry for the new mov_* instruction type.
	(lookup_specifier): Add new resource recognition.
	(insert_bit_table_ent): Relax abort condition according to the
	changed completer index type.
	(print_dis_table): Fix printf format for completer index.
	* ia64-ic.tbl: Add a new instruction class.
	* ia64-opc-i.c (ia64_opcodes_i): Define new I-instructions.
	* ia64-opc-m.c (ia64_opcodes_m): Define new M-instructions.
	* ia64-opc.h: Define short names for new operand types.
	* ia64-raw.tbl: Add new RAW resource for DAHR register.
	* ia64-waw.tbl: Add new WAW resource for DAHR register.
	* ia64-asmtab.c: Regenerate.
@
text
@
    lfetch.count 	[r2],    1,   64
    lfetch.count.d0 	[r22],   5,   -64
    lfetch.count.nt1 	[r23],   9,   1024-64
    lfetch.count.d1 	[r122], 12,  -1024
    lfetch.count.nt2 	[r5],   16,  0x80
    lfetch.count.d2 	[r15],  20,  -0x100
    lfetch.count.nta 	[r125], 24,  512
    lfetch.count.d3 	[r8],   29,  960
    lfetch.count.d4 	[r18], 	34,  -0x400
    lfetch.count.d5 	[r127], 62,  0x3bf
    lfetch.count.d6 	[r10],  63,  -0x3ff
    lfetch.count.d7 	[r96],  64,      0



	tf.z		p1,p2 = 32;;
	tf.nz		p7,p2 = @@clz;;
	tf.z.unc	p3,p2 = @@clz
	tf.nz		p3,p4 = @@mpy
	tf.z.and	p5,p4 = @@datahints
	tf.nz.and	p5,p6 = 35
	tf.nz.andcm	p5,p6 = 35
	tf.z.or		p7,p6 = 63
	tf.nz.or	p5,p6 = 35
	tf.z.or.andcm	p7,p6 = @@mpy
	tf.nz.or.andcm	p7,p6 = @@datahints
	tf.z.and.orcm	p7,p6 = @@clz
	tf.nz.and.orcm	p7,p6 = @@mpy


 {   .mib
	tf.nz.unc	p6,p0=33			
	nop.b	0 ;;
 }
	lfetch.d4	[r18] 			
 {   .mmi
	lfetch.fault.excl.d7	[r19] ;;		
	lfetch.count	[r14], 2, 128			
	sxt4	r8=r10					
 }
 {   .mmi
	lfetch.count.d4	[r11], 64, 256;;			
	lfetch.excl.d5	[r17]				
	nop.i	0
 }
 {   .mmi
	lfetch.fault.d6	[r16] ;;			
	mov	dahr7=7					
	clz	r3=r9 ;;				
 }
 
	mov	dahr6=6					
	mpy4	r2=r9,r8				
	mpyshl4	r2=r9,r8

 {   .mmi
	mov	dahr5=5 ;;				
	mov	dahr4=4					
	nop.i	0 ;;
 }
 {   .mib
	mov	dahr3=3					
	add	r8=r2,r3				
	nop.b	0 ;;
 }
 {   .mmi
	mov	dahr2=2 ;;				
	mov	dahr1=1					
	nop.i	0 ;;
 }
 {   .mib
	mov	dahr0=0					
	nop.i	0
 }
    mov 	r12 =  dahr[r5]
    mov 	r122 = dahr[r55]

    st1			[ r65 ] = r93
    st1.d1		[ r65 ] = r93
    st1.nt1		[ r65 ] = r93
    st1.d2		[ r65 ] = r93
    st1.nt2		[ r65 ] = r93
    st1.nta		[ r65 ] = r93
    st1.d3		[ r65 ] = r93
    st1.d4		[ r65 ] = r93
    st1.d5		[ r65 ] = r93
    st1.d6		[ r65 ] = r93
    st1.d7		[ r65 ] = r93
    st2		[ r65 ] = r93
    st2.d1		[ r65 ] = r93
    st2.nt1		[ r65 ] = r93
    st2.d2		[ r65 ] = r93
    st2.nt2		[ r65 ] = r93
    st2.nta		[ r65 ] = r93
    st2.d3		[ r65 ] = r93
    st2.d4		[ r65 ] = r93
    st2.d5		[ r65 ] = r93
    st2.d6		[ r65 ] = r93
    st2.d7		[ r65 ] = r93
    st4		[ r65 ] = r93
    st4.d1		[ r65 ] = r93
    st4.nt1		[ r65 ] = r93
    st4.d2		[ r65 ] = r93
    st4.nt2		[ r65 ] = r93
    st4.nta		[ r65 ] = r93
    st4.d3		[ r65 ] = r93
    st4.d4		[ r65 ] = r93
    st4.d5		[ r65 ] = r93
    st4.d6		[ r65 ] = r93
    st4.d7		[ r65 ] = r93
    st8		[ r65 ] = r93
    st8.d1		[ r65 ] = r93
    st8.nt1		[ r65 ] = r93
    st8.d2		[ r65 ] = r93
    st8.nt2		[ r65 ] = r93
    st8.nta		[ r65 ] = r93
    st8.d3		[ r65 ] = r93
    st8.d4		[ r65 ] = r93
    st8.d5		[ r65 ] = r93
    st8.d6		[ r65 ] = r93
    st8.d7		[ r65 ] = r93
    st16		[ r65 ] = r93
    st16		[ r65 ] = r93
    st16.d1		[ r65 ] = r93
    st16.nt1		[ r65 ] = r93
    st16.d2		[ r65 ] = r93
    st16.nt2		[ r65 ] = r93
    st16.nta		[ r65 ] = r93
    st16.d3		[ r65 ] = r93
    st16.d4		[ r65 ] = r93
    st16.d5		[ r65 ] = r93
    st16.d6		[ r65 ] = r93
    st16.d7		[ r65 ] = r93
    st16.nta		[ r65 ] = r93
    st16.d3		[ r65 ] = r93
    st16.d4		[ r65 ] = r93
    st16.d5		[ r65 ] = r93
    st16.d6		[ r65 ] = r93
    st16.d7		[ r65 ] = r93
    st1.rel		[ r65 ] = r93
    st1.rel.d1		[ r65 ] = r93
    st1.rel.nt1		[ r65 ] = r93
    st1.rel.d2		[ r65 ] = r93
    st1.rel.nt2		[ r65 ] = r93
    st1.rel.nta		[ r65 ] = r93
    st1.rel.d3		[ r65 ] = r93
    st1.rel.d4		[ r65 ] = r93
    st1.rel.d5		[ r65 ] = r93
    st1.rel.d6		[ r65 ] = r93
    st1.rel.d7		[ r65 ] = r93
    st2.rel		[ r65 ] = r93
    st2.rel.d1		[ r65 ] = r93
    st2.rel.nt1		[ r65 ] = r93
    st2.rel.d2		[ r65 ] = r93
    st2.rel.nt2		[ r65 ] = r93
    st2.rel.nta		[ r65 ] = r93
    st2.rel.d3		[ r65 ] = r93
    st2.rel.d4		[ r65 ] = r93
    st2.rel.d5		[ r65 ] = r93
    st2.rel.d6		[ r65 ] = r93
    st2.rel.d7		[ r65 ] = r93
    st4.rel		[ r65 ] = r93
    st4.rel.d1		[ r65 ] = r93
    st4.rel.nt1		[ r65 ] = r93
    st4.rel.d2		[ r65 ] = r93
    st4.rel.nt2		[ r65 ] = r93
    st4.rel.nta		[ r65 ] = r93
    st4.rel.d3		[ r65 ] = r93
    st4.rel.d4		[ r65 ] = r93
    st4.rel.d5		[ r65 ] = r93
    st4.rel.d6		[ r65 ] = r93
    st4.rel.d7		[ r65 ] = r93
    st8.rel		[ r65 ] = r93
    st8.rel.d1		[ r65 ] = r93
    st8.rel.nt1		[ r65 ] = r93
    st8.rel.d2		[ r65 ] = r93
    st8.rel.nt2		[ r65 ] = r93
    st8.rel.nta		[ r65 ] = r93
    st8.rel.d3		[ r65 ] = r93
    st8.rel.d4		[ r65 ] = r93
    st8.rel.d5		[ r65 ] = r93
    st8.rel.d6		[ r65 ] = r93
    st8.rel.d7		[ r65 ] = r93
    st16.rel		[ r65 ] = r93
    st16.rel		[ r65 ] = r93, ar.csd
    st16.rel.d1		[ r65 ] = r93
    st16.rel.d1		[ r65 ] = r93, ar.csd
    st16.rel.nt1	[ r65 ] = r93
    st16.rel.nt1	[ r65 ] = r93, ar.csd
    st16.rel.d2		[ r65 ] = r93
    st16.rel.d2		[ r65 ] = r93, ar.csd
    st16.rel.nt2	[ r65 ] = r93
    st16.rel.nt2	[ r65 ] = r93, ar.csd
    st16.rel.nta	[ r65 ] = r93
    st16.rel.d3		[ r65 ] = r93
    st16.rel.d4		[ r65 ] = r93
    st16.rel.d5		[ r65 ] = r93
    st16.rel.d6		[ r65 ] = r93
    st16.rel.d7		[ r65 ] = r93
    st16.rel.nta	[ r65 ] = r93, ar.csd
    st16.rel.d3		[ r65 ] = r93, ar.csd
    st16.rel.d4		[ r65 ] = r93, ar.csd
    st16.rel.d5		[ r65 ] = r93, ar.csd
    st16.rel.d6		[ r65 ] = r93, ar.csd
    st16.rel.d7		[ r65 ] = r93, ar.csd
    st8.spill		[ r65 ] = r93
    st8.spill.d1	[ r65 ] = r93
    st8.spill.nt1	[ r65 ] = r93
    st8.spill.d2	[ r65 ] = r93
    st8.spill.nt2	[ r65 ] = r93
    st8.spill.nta	[ r65 ] = r93
    st8.spill.d3	[ r65 ] = r93
    st8.spill.d4	[ r65 ] = r93
    st8.spill.d5	[ r65 ] = r93
    st8.spill.d6	[ r65 ] = r93
    st8.spill.d7	[ r65 ] = r93

    lfetch	[ r60 ] 
    lfetch.d1	[ r60 ] 
    lfetch.nt1	[ r60 ] 
    lfetch.d2	[ r60 ] 
    lfetch.nt2	[ r60 ] 
    lfetch.nta	[ r60 ] 
    lfetch.d3	[ r60 ] 
    lfetch.d4	[ r60 ] 
    lfetch.d5	[ r60 ] 
    lfetch.d6	[ r60 ] 
    lfetch.d7	[ r60 ] 


    stfs	[ r60 ] = f90
    stfs.d1	[ r60 ] = f90
    stfs.nt1	[ r60 ] = f90
    stfs.d2	[ r60 ] = f90
    stfs.nt2	[ r60 ] = f90
    stfs.nta	[ r60 ] = f90
    stfs.d3	[ r60 ] = f90
    stfs.d4	[ r60 ] = f90
    stfs.d5	[ r60 ] = f90
    stfs.d6	[ r60 ] = f90
    stfs.d7	[ r60 ] = f90
    stfd	[ r60 ] = f90
    stfd.d1	[ r60 ] = f90
    stfd.nt1	[ r60 ] = f90
    stfd.d2	[ r60 ] = f90
    stfd.nt2	[ r60 ] = f90
    stfd.nta	[ r60 ] = f90
    stfd.d3	[ r60 ] = f90
    stfd.d4	[ r60 ] = f90
    stfd.d5	[ r60 ] = f90
    stfd.d6	[ r60 ] = f90
    stfd.d7	[ r60 ] = f90
    stf8	[ r60 ] = f90
    stf8.d1	[ r60 ] = f90
    stf8.nt1	[ r60 ] = f90
    stf8.d2	[ r60 ] = f90
    stf8.nt2	[ r60 ] = f90
    stf8.nta	[ r60 ] = f90
    stf8.d3	[ r60 ] = f90
    stf8.d4	[ r60 ] = f90
    stf8.d5	[ r60 ] = f90
    stf8.d6	[ r60 ] = f90
    stf8.d7	[ r60 ] = f90
    stfe	[ r60 ] = f90
    stfe.d1	[ r60 ] = f90
    stfe.nt1	[ r60 ] = f90
    stfe.d2	[ r60 ] = f90
    stfe.nt2	[ r60 ] = f90
    stfe.nta	[ r60 ] = f90
    stfe.d3	[ r60 ] = f90
    stfe.d4	[ r60 ] = f90
    stfe.d5	[ r60 ] = f90
    stfe.d6	[ r60 ] = f90
    stfe.d7	[ r60 ] = f90
    stf.spill	[ r60 ] = f90
    stf.spill.d1	[ r60 ] = f90
    stf.spill.nt1	[ r60 ] = f90
    stf.spill.d2	[ r60 ] = f90
    stf.spill.nt2	[ r60 ] = f90
    stf.spill.nta	[ r60 ] = f90
    stf.spill.d3	[ r60 ] = f90
    stf.spill.d4	[ r60 ] = f90
    stf.spill.d5	[ r60 ] = f90
    stf.spill.d6	[ r60 ] = f90
    stf.spill.d7	[ r60 ] = f90


    /* Floating-point load.  */
    ldfs	f121 = [ r125 ]
    ldfs.nt1	f121 = [ r125 ]
    ldfs.d1	f121 = [ r125 ]
    ldfs.d2	f121 = [ r125 ]
    ldfs.nt2	f121 = [ r125 ]
    ldfs.nta	f121 = [ r125 ]
    ldfs.d3	f121 = [ r125 ]
    ldfs.d4	f121 = [ r125 ]
    ldfs.d5	f121 = [ r125 ]
    ldfs.d6	f121 = [ r125 ]
    ldfs.d7	f121 = [ r125 ]
    ldfd	f121 = [ r125 ]
    ldfd.nt1	f121 = [ r125 ]
    ldfd.d1	f121 = [ r125 ]
    ldfd.d2	f121 = [ r125 ]
    ldfd.nt2	f121 = [ r125 ]
    ldfd.nta	f121 = [ r125 ]
    ldfd.d3	f121 = [ r125 ]
    ldfd.d4	f121 = [ r125 ]
    ldfd.d5	f121 = [ r125 ]
    ldfd.d6	f121 = [ r125 ]
    ldfd.d7	f121 = [ r125 ]
    ldf8	f121 = [ r125 ]
    ldf8.nt1	f121 = [ r125 ]
    ldf8.d1	f121 = [ r125 ]
    ldf8.d2	f121 = [ r125 ]
    ldf8.nt2	f121 = [ r125 ]
    ldf8.nta	f121 = [ r125 ]
    ldf8.d3	f121 = [ r125 ]
    ldf8.d4	f121 = [ r125 ]
    ldf8.d5	f121 = [ r125 ]
    ldf8.d6	f121 = [ r125 ]
    ldf8.d7	f121 = [ r125 ]
    ldfe	f121 = [ r125 ]
    ldfe.nt1	f121 = [ r125 ]
    ldfe.d1	f121 = [ r125 ]
    ldfe.d2	f121 = [ r125 ]
    ldfe.nt2	f121 = [ r125 ]
    ldfe.nta	f121 = [ r125 ]
    ldfe.d3	f121 = [ r125 ]
    ldfe.d4	f121 = [ r125 ]
    ldfe.d5	f121 = [ r125 ]
    ldfe.d6	f121 = [ r125 ]
    ldfe.d7	f121 = [ r125 ]
    ldfs.s	f121 = [ r125 ]
    ldfs.s.nt1	f121 = [ r125 ]
    ldfs.s.d1	f121 = [ r125 ]
    ldfs.s.d2	f121 = [ r125 ]
    ldfs.s.nt2	f121 = [ r125 ]
    ldfs.s.nta	f121 = [ r125 ]
    ldfs.s.d3	f121 = [ r125 ]
    ldfs.s.d4	f121 = [ r125 ]
    ldfs.s.d5	f121 = [ r125 ]
    ldfs.s.d6	f121 = [ r125 ]
    ldfs.s.d7	f121 = [ r125 ]
    ldfd.s	f121 = [ r125 ]
    ldfd.s.nt1	f121 = [ r125 ]
    ldfd.s.d1	f121 = [ r125 ]
    ldfd.s.d2	f121 = [ r125 ]
    ldfd.s.nt2	f121 = [ r125 ]
    ldfd.s.nta	f121 = [ r125 ]
    ldfd.s.d3	f121 = [ r125 ]
    ldfd.s.d4	f121 = [ r125 ]
    ldfd.s.d5	f121 = [ r125 ]
    ldfd.s.d6	f121 = [ r125 ]
    ldfd.s.d7	f121 = [ r125 ]
    ldf8.s	f121 = [ r125 ]
    ldf8.s.nt1	f121 = [ r125 ]
    ldf8.s.d1	f121 = [ r125 ]
    ldf8.s.d2	f121 = [ r125 ]
    ldf8.s.nt2	f121 = [ r125 ]
    ldf8.s.nta	f121 = [ r125 ]
    ldf8.s.d3	f121 = [ r125 ]
    ldf8.s.d4	f121 = [ r125 ]
    ldf8.s.d5	f121 = [ r125 ]
    ldf8.s.d6	f121 = [ r125 ]
    ldf8.s.d7	f121 = [ r125 ]
    ldfe.s	f121 = [ r125 ]
    ldfe.s.nt1	f121 = [ r125 ]
    ldfe.s.d1	f121 = [ r125 ]
    ldfe.s.d2	f121 = [ r125 ]
    ldfe.s.nt2	f121 = [ r125 ]
    ldfe.s.nta	f121 = [ r125 ]
    ldfe.s.d3	f121 = [ r125 ]
    ldfe.s.d4	f121 = [ r125 ]
    ldfe.s.d5	f121 = [ r125 ]
    ldfe.s.d6	f121 = [ r125 ]
    ldfe.s.d7	f121 = [ r125 ]
    ldfs.a	f121 = [ r125 ]
    ldfs.a.nt1	f121 = [ r125 ]
    ldfs.a.d1	f121 = [ r125 ]
    ldfs.a.d2	f121 = [ r125 ]
    ldfs.a.nt2	f121 = [ r125 ]
    ldfs.a.nta	f121 = [ r125 ]
    ldfs.a.d3	f121 = [ r125 ]
    ldfs.a.d4	f121 = [ r125 ]
    ldfs.a.d5	f121 = [ r125 ]
    ldfs.a.d6	f121 = [ r125 ]
    ldfs.a.d7	f121 = [ r125 ]
    ldfd.a	f121 = [ r125 ]
    ldfd.a.nt1	f121 = [ r125 ]
    ldfd.a.d1	f121 = [ r125 ]
    ldfd.a.d2	f121 = [ r125 ]
    ldfd.a.nt2	f121 = [ r125 ]
    ldfd.a.nta	f121 = [ r125 ]
    ldfd.a.d3	f121 = [ r125 ]
    ldfd.a.d4	f121 = [ r125 ]
    ldfd.a.d5	f121 = [ r125 ]
    ldfd.a.d6	f121 = [ r125 ]
    ldfd.a.d7	f121 = [ r125 ]
    ldf8.a	f121 = [ r125 ]
    ldf8.a.nt1	f121 = [ r125 ]
    ldf8.a.d1	f121 = [ r125 ]
    ldf8.a.d2	f121 = [ r125 ]
    ldf8.a.nt2	f121 = [ r125 ]
    ldf8.a.nta	f121 = [ r125 ]
    ldf8.a.d3	f121 = [ r125 ]
    ldf8.a.d4	f121 = [ r125 ]
    ldf8.a.d5	f121 = [ r125 ]
    ldf8.a.d6	f121 = [ r125 ]
    ldf8.a.d7	f121 = [ r125 ]
    ldfe.a	f121 = [ r125 ]
    ldfe.a.nt1	f121 = [ r125 ]
    ldfe.a.d1	f121 = [ r125 ]
    ldfe.a.d2	f121 = [ r125 ]
    ldfe.a.nt2	f121 = [ r125 ]
    ldfe.a.nta	f121 = [ r125 ]
    ldfe.a.d3	f121 = [ r125 ]
    ldfe.a.d4	f121 = [ r125 ]
    ldfe.a.d5	f121 = [ r125 ]
    ldfe.a.d6	f121 = [ r125 ]
    ldfe.a.d7	f121 = [ r125 ]
    ldfs.sa	f121 = [ r125 ]
    ldfs.sa.nt1	f121 = [ r125 ]
    ldfs.sa.d1	f121 = [ r125 ]
    ldfs.sa.d2	f121 = [ r125 ]
    ldfs.sa.nt2	f121 = [ r125 ]
    ldfs.sa.nta	f121 = [ r125 ]
    ldfs.sa.d3	f121 = [ r125 ]
    ldfs.sa.d4	f121 = [ r125 ]
    ldfs.sa.d5	f121 = [ r125 ]
    ldfs.sa.d6	f121 = [ r125 ]
    ldfs.sa.d7	f121 = [ r125 ]
    ldfd.sa	f121 = [ r125 ]
    ldfd.sa.nt1	f121 = [ r125 ]
    ldfd.sa.d1	f121 = [ r125 ]
    ldfd.sa.d2	f121 = [ r125 ]
    ldfd.sa.nt2	f121 = [ r125 ]
    ldfd.sa.nta	f121 = [ r125 ]
    ldfd.sa.d3	f121 = [ r125 ]
    ldfd.sa.d4	f121 = [ r125 ]
    ldfd.sa.d5	f121 = [ r125 ]
    ldfd.sa.d6	f121 = [ r125 ]
    ldfd.sa.d7	f121 = [ r125 ]
    ldf8.sa	f121 = [ r125 ]
    ldf8.sa.nt1	f121 = [ r125 ]
    ldf8.sa.d1	f121 = [ r125 ]
    ldf8.sa.d2	f121 = [ r125 ]
    ldf8.sa.nt2	f121 = [ r125 ]
    ldf8.sa.nta	f121 = [ r125 ]
    ldf8.sa.d3	f121 = [ r125 ]
    ldf8.sa.d4	f121 = [ r125 ]
    ldf8.sa.d5	f121 = [ r125 ]
    ldf8.sa.d6	f121 = [ r125 ]
    ldf8.sa.d7	f121 = [ r125 ]
    ldfe.sa	f121 = [ r125 ]
    ldfe.sa.nt1	f121 = [ r125 ]
    ldfe.sa.d1	f121 = [ r125 ]
    ldfe.sa.d2	f121 = [ r125 ]
    ldfe.sa.nt2	f121 = [ r125 ]
    ldfe.sa.nta	f121 = [ r125 ]
    ldfe.sa.d3	f121 = [ r125 ]
    ldfe.sa.d4	f121 = [ r125 ]
    ldfe.sa.d5	f121 = [ r125 ]
    ldfe.sa.d6	f121 = [ r125 ]
    ldfe.sa.d7	f121 = [ r125 ]
    ldf.fill	f121 = [ r125 ]
    ldf.fill.nt1	f121 = [ r125 ]
    ldf.fill.d1	f121 = [ r125 ]
    ldf.fill.d2	f121 = [ r125 ]
    ldf.fill.nt2	f121 = [ r125 ]
    ldf.fill.nta	f121 = [ r125 ]
    ldf.fill.d3	f121 = [ r125 ]
    ldf.fill.d4	f121 = [ r125 ]
    ldf.fill.d5	f121 = [ r125 ]
    ldf.fill.d6	f121 = [ r125 ]
    ldf.fill.d7	f121 = [ r125 ]
    ldfs.c.clr	f121 = [ r125 ]
    ldfs.c.clr.nt1	f121 = [ r125 ]
    ldfs.c.clr.d1	f121 = [ r125 ]
    ldfs.c.clr.d2	f121 = [ r125 ]
    ldfs.c.clr.nt2	f121 = [ r125 ]
    ldfs.c.clr.nta	f121 = [ r125 ]
    ldfs.c.clr.d3	f121 = [ r125 ]
    ldfs.c.clr.d4	f121 = [ r125 ]
    ldfs.c.clr.d5	f121 = [ r125 ]
    ldfs.c.clr.d6	f121 = [ r125 ]
    ldfs.c.clr.d7	f121 = [ r125 ]
    ldfd.c.clr	f121 = [ r125 ]
    ldfd.c.clr.nt1	f121 = [ r125 ]
    ldfd.c.clr.d1	f121 = [ r125 ]
    ldfd.c.clr.d2	f121 = [ r125 ]
    ldfd.c.clr.nt2	f121 = [ r125 ]
    ldfd.c.clr.nta	f121 = [ r125 ]
    ldfd.c.clr.d3	f121 = [ r125 ]
    ldfd.c.clr.d4	f121 = [ r125 ]
    ldfd.c.clr.d5	f121 = [ r125 ]
    ldfd.c.clr.d6	f121 = [ r125 ]
    ldfd.c.clr.d7	f121 = [ r125 ]
    ldf8.c.clr	f121 = [ r125 ]
    ldf8.c.clr.nt1	f121 = [ r125 ]
    ldf8.c.clr.d1	f121 = [ r125 ]
    ldf8.c.clr.d2	f121 = [ r125 ]
    ldf8.c.clr.nt2	f121 = [ r125 ]
    ldf8.c.clr.nta	f121 = [ r125 ]
    ldf8.c.clr.d3	f121 = [ r125 ]
    ldf8.c.clr.d4	f121 = [ r125 ]
    ldf8.c.clr.d5	f121 = [ r125 ]
    ldf8.c.clr.d6	f121 = [ r125 ]
    ldf8.c.clr.d7	f121 = [ r125 ]
    ldfe.c.clr	f121 = [ r125 ]
    ldfe.c.clr.nt1	f121 = [ r125 ]
    ldfe.c.clr.d1	f121 = [ r125 ]
    ldfe.c.clr.d2	f121 = [ r125 ]
    ldfe.c.clr.nt2	f121 = [ r125 ]
    ldfe.c.clr.nta	f121 = [ r125 ]
    ldfe.c.clr.d3	f121 = [ r125 ]
    ldfe.c.clr.d4	f121 = [ r125 ]
    ldfe.c.clr.d5	f121 = [ r125 ]
    ldfe.c.clr.d6	f121 = [ r125 ]
    ldfe.c.clr.d7	f121 = [ r125 ]
    ldfs.c.nc	f121 = [ r125 ]
    ldfs.c.nc.nt1	f121 = [ r125 ]
    ldfs.c.nc.d1	f121 = [ r125 ]
    ldfs.c.nc.d2	f121 = [ r125 ]
    ldfs.c.nc.nt2	f121 = [ r125 ]
    ldfs.c.nc.nta	f121 = [ r125 ]
    ldfs.c.nc.d3	f121 = [ r125 ]
    ldfs.c.nc.d4	f121 = [ r125 ]
    ldfs.c.nc.d5	f121 = [ r125 ]
    ldfs.c.nc.d6	f121 = [ r125 ]
    ldfs.c.nc.d7	f121 = [ r125 ]
    ldfd.c.nc	f121 = [ r125 ]
    ldfd.c.nc.nt1	f121 = [ r125 ]
    ldfd.c.nc.d1	f121 = [ r125 ]
    ldfd.c.nc.d2	f121 = [ r125 ]
    ldfd.c.nc.nt2	f121 = [ r125 ]
    ldfd.c.nc.nta	f121 = [ r125 ]
    ldfd.c.nc.d3	f121 = [ r125 ]
    ldfd.c.nc.d4	f121 = [ r125 ]
    ldfd.c.nc.d5	f121 = [ r125 ]
    ldfd.c.nc.d6	f121 = [ r125 ]
    ldfd.c.nc.d7	f121 = [ r125 ]
    ldf8.c.nc	f121 = [ r125 ]
    ldf8.c.nc.nt1	f121 = [ r125 ]
    ldf8.c.nc.d1	f121 = [ r125 ]
    ldf8.c.nc.d2	f121 = [ r125 ]
    ldf8.c.nc.nt2	f121 = [ r125 ]
    ldf8.c.nc.nta	f121 = [ r125 ]
    ldf8.c.nc.d3	f121 = [ r125 ]
    ldf8.c.nc.d4	f121 = [ r125 ]
    ldf8.c.nc.d5	f121 = [ r125 ]
    ldf8.c.nc.d6	f121 = [ r125 ]
    ldf8.c.nc.d7	f121 = [ r125 ]
    ldfe.c.nc	f121 = [ r125 ]
    ldfe.c.nc.nt1	f121 = [ r125 ]
    ldfe.c.nc.d1	f121 = [ r125 ]
    ldfe.c.nc.d2	f121 = [ r125 ]
    ldfe.c.nc.nt2	f121 = [ r125 ]
    ldfe.c.nc.nta	f121 = [ r125 ]
    ldfe.c.nc.d3	f121 = [ r125 ]
    ldfe.c.nc.d4	f121 = [ r125 ]
    ldfe.c.nc.d5	f121 = [ r125 ]
    ldfe.c.nc.d6	f121 = [ r125 ]
    ldfe.c.nc.d7	f121 = [ r125 ]




    ld1	r120 = [ r20 ]
    ld1.nt1	r120 = [ r20 ]
    ld1.d1	r120 = [ r20 ]
    ld1.d2	r120 = [ r20 ]
    ld1.nt2	r120 = [ r20 ]
    ld1.nta	r120 = [ r20 ]
    ld1.d3	r120 = [ r20 ]
    ld1.d4	r120 = [ r20 ]
    ld1.d5	r120 = [ r20 ]
    ld1.d6	r120 = [ r20 ]
    ld1.d7	r120 = [ r20 ]
    ld2	r120 = [ r20 ]
    ld2.nt1	r120 = [ r20 ]
    ld2.d1	r120 = [ r20 ]
    ld2.d2	r120 = [ r20 ]
    ld2.nt2	r120 = [ r20 ]
    ld2.nta	r120 = [ r20 ]
    ld2.d3	r120 = [ r20 ]
    ld2.d4	r120 = [ r20 ]
    ld2.d5	r120 = [ r20 ]
    ld2.d6	r120 = [ r20 ]
    ld2.d7	r120 = [ r20 ]
    ld4	r120 = [ r20 ]
    ld4.nt1	r120 = [ r20 ]
    ld4.d1	r120 = [ r20 ]
    ld4.d2	r120 = [ r20 ]
    ld4.nt2	r120 = [ r20 ]
    ld4.nta	r120 = [ r20 ]
    ld4.d3	r120 = [ r20 ]
    ld4.d4	r120 = [ r20 ]
    ld4.d5	r120 = [ r20 ]
    ld4.d6	r120 = [ r20 ]
    ld4.d7	r120 = [ r20 ]
    ld8	r120 = [ r20 ]
    ld8.nt1	r120 = [ r20 ]
    ld8.d1	r120 = [ r20 ]
    ld8.d2	r120 = [ r20 ]
    ld8.nt2	r120 = [ r20 ]
    ld8.nta	r120 = [ r20 ]
    ld8.d3	r120 = [ r20 ]
    ld8.d4	r120 = [ r20 ]
    ld8.d5	r120 = [ r20 ]
    ld8.d6	r120 = [ r20 ]
    ld8.d7	r120 = [ r20 ]
    ld1.s	r120 = [ r20 ]
    ld1.s.nt1	r120 = [ r20 ]
    ld1.s.d1	r120 = [ r20 ]
    ld1.s.d2	r120 = [ r20 ]
    ld1.s.nt2	r120 = [ r20 ]
    ld1.s.nta	r120 = [ r20 ]
    ld1.s.d3	r120 = [ r20 ]
    ld1.s.d4	r120 = [ r20 ]
    ld1.s.d5	r120 = [ r20 ]
    ld1.s.d6	r120 = [ r20 ]
    ld1.s.d7	r120 = [ r20 ]
    ld2.s	r120 = [ r20 ]
    ld2.s.nt1	r120 = [ r20 ]
    ld2.s.d1	r120 = [ r20 ]
    ld2.s.d2	r120 = [ r20 ]
    ld2.s.nt2	r120 = [ r20 ]
    ld2.s.nta	r120 = [ r20 ]
    ld2.s.d3	r120 = [ r20 ]
    ld2.s.d4	r120 = [ r20 ]
    ld2.s.d5	r120 = [ r20 ]
    ld2.s.d6	r120 = [ r20 ]
    ld2.s.d7	r120 = [ r20 ]
    ld4.s	r120 = [ r20 ]
    ld4.s.nt1	r120 = [ r20 ]
    ld4.s.d1	r120 = [ r20 ]
    ld4.s.d2	r120 = [ r20 ]
    ld4.s.nt2	r120 = [ r20 ]
    ld4.s.nta	r120 = [ r20 ]
    ld4.s.d3	r120 = [ r20 ]
    ld4.s.d4	r120 = [ r20 ]
    ld4.s.d5	r120 = [ r20 ]
    ld4.s.d6	r120 = [ r20 ]
    ld4.s.d7	r120 = [ r20 ]
    ld8.s	r120 = [ r20 ]
    ld8.s.nt1	r120 = [ r20 ]
    ld8.s.d1	r120 = [ r20 ]
    ld8.s.d2	r120 = [ r20 ]
    ld8.s.nt2	r120 = [ r20 ]
    ld8.s.nta	r120 = [ r20 ]
    ld8.s.d3	r120 = [ r20 ]
    ld8.s.d4	r120 = [ r20 ]
    ld8.s.d5	r120 = [ r20 ]
    ld8.s.d6	r120 = [ r20 ]
    ld8.s.d7	r120 = [ r20 ]
    ld1.a	r120 = [ r20 ]
    ld1.a.nt1	r120 = [ r20 ]
    ld1.a.d1	r120 = [ r20 ]
    ld1.a.d2	r120 = [ r20 ]
    ld1.a.nt2	r120 = [ r20 ]
    ld1.a.nta	r120 = [ r20 ]
    ld1.a.d3	r120 = [ r20 ]
    ld1.a.d4	r120 = [ r20 ]
    ld1.a.d5	r120 = [ r20 ]
    ld1.a.d6	r120 = [ r20 ]
    ld1.a.d7	r120 = [ r20 ]
    ld2.a	r120 = [ r20 ]
    ld2.a.nt1	r120 = [ r20 ]
    ld2.a.d1	r120 = [ r20 ]
    ld2.a.nt2	r120 = [ r20 ]
    ld2.a.nta	r120 = [ r20 ]
    ld2.a.d3	r120 = [ r20 ]
    ld2.a.d4	r120 = [ r20 ]
    ld2.a.d5	r120 = [ r20 ]
    ld2.a.d6	r120 = [ r20 ]
    ld2.a.d7	r120 = [ r20 ]
    ld4.a	r120 = [ r20 ]
    ld4.a.nt1	r120 = [ r20 ]
    ld4.a.d1	r120 = [ r20 ]
    ld4.a.d2	r120 = [ r20 ]
    ld4.a.nt2	r120 = [ r20 ]
    ld4.a.nta	r120 = [ r20 ]
    ld4.a.d3	r120 = [ r20 ]
    ld4.a.d4	r120 = [ r20 ]
    ld4.a.d5	r120 = [ r20 ]
    ld4.a.d6	r120 = [ r20 ]
    ld4.a.d7	r120 = [ r20 ]
    ld8.a	r120 = [ r20 ]
    ld8.a.nt1	r120 = [ r20 ]
    ld8.a.d1	r120 = [ r20 ]
    ld8.a.d2	r120 = [ r20 ]
    ld8.a.nt2	r120 = [ r20 ]
    ld8.a.nta	r120 = [ r20 ]
    ld8.a.d3	r120 = [ r20 ]
    ld8.a.d5	r120 = [ r20 ]
    ld8.a.d6	r120 = [ r20 ]
    ld8.a.d7	r120 = [ r20 ]
    ld1.sa	r120 = [ r20 ]
    ld1.sa.nt1	r120 = [ r20 ]
    ld1.sa.d1	r120 = [ r20 ]
    ld1.sa.d2	r120 = [ r20 ]
    ld1.sa.nt2	r120 = [ r20 ]
    ld1.sa.nta	r120 = [ r20 ]
    ld1.sa.d3	r120 = [ r20 ]
    ld1.sa.d4	r120 = [ r20 ]
    ld1.sa.d5	r120 = [ r20 ]
    ld1.sa.d6	r120 = [ r20 ]
    ld1.sa.d7	r120 = [ r20 ]
    ld2.sa	r120 = [ r20 ]
    ld2.sa.nt1	r120 = [ r20 ]
    ld2.sa.d1	r120 = [ r20 ]
    ld2.sa.d2	r120 = [ r20 ]
    ld2.sa.nt2	r120 = [ r20 ]
    ld2.sa.nta	r120 = [ r20 ]
    ld2.sa.d3	r120 = [ r20 ]
    ld2.sa.d4	r120 = [ r20 ]
    ld2.sa.d5	r120 = [ r20 ]
    ld2.sa.d6	r120 = [ r20 ]
    ld2.sa.d7	r120 = [ r20 ]
    ld4.sa.nt1	r120 = [ r20 ]
    ld4.sa.d1	r120 = [ r20 ]
    ld4.sa.d2	r120 = [ r20 ]
    ld4.sa.nt2	r120 = [ r20 ]
    ld4.sa.nta	r120 = [ r20 ]
    ld4.sa.d3	r120 = [ r20 ]
    ld4.sa.d4	r120 = [ r20 ]
    ld4.sa.d5	r120 = [ r20 ]
    ld4.sa.d6	r120 = [ r20 ]
    ld4.sa.d7	r120 = [ r20 ]
    ld8.sa	r120 = [ r20 ]
    ld8.sa.nt1	r120 = [ r20 ]
    ld8.sa.d1	r120 = [ r20 ]
    ld8.sa.d2	r120 = [ r20 ]
    ld8.sa.nt2	r120 = [ r20 ]
    ld8.sa.nta	r120 = [ r20 ]
    ld8.sa.d3	r120 = [ r20 ]
    ld8.sa.d4	r120 = [ r20 ]
    ld8.sa.d5	r120 = [ r20 ]
    ld8.sa.d6	r120 = [ r20 ]
    ld8.sa.d7	r120 = [ r20 ]
    ld1.bias	r120 = [ r20 ]
    ld1.bias.nt1	r120 = [ r20 ]
    ld1.bias.d1	r120 = [ r20 ]
    ld1.bias.d2	r120 = [ r20 ]
    ld1.bias.nt2	r120 = [ r20 ]
    ld1.bias.nta	r120 = [ r20 ]
    ld1.bias.d3	r120 = [ r20 ]
    ld1.bias.d4	r120 = [ r20 ]
    ld1.bias.d5	r120 = [ r20 ]
    ld1.bias.d6	r120 = [ r20 ]
    ld1.bias.d7	r120 = [ r20 ]
    ld2.bias	r120 = [ r20 ]
    ld2.bias.nt1	r120 = [ r20 ]
    ld2.bias.d1	r120 = [ r20 ]
    ld2.bias.d2	r120 = [ r20 ]
    ld2.bias.nt2	r120 = [ r20 ]
    ld2.bias.nta	r120 = [ r20 ]
    ld2.bias.d3	r120 = [ r20 ]
    ld2.bias.d4	r120 = [ r20 ]
    ld2.bias.d5	r120 = [ r20 ]
    ld2.bias.d6	r120 = [ r20 ]
    ld2.bias.d7	r120 = [ r20 ]
    ld4.bias	r120 = [ r20 ]
    ld4.bias.nt1	r120 = [ r20 ]
    ld4.bias.d1	r120 = [ r20 ]
    ld4.bias.d2	r120 = [ r20 ]
    ld4.bias.nt2	r120 = [ r20 ]
    ld4.bias.nta	r120 = [ r20 ]
    ld4.bias.d3	r120 = [ r20 ]
    ld4.bias.d4	r120 = [ r20 ]
    ld4.bias.d5	r120 = [ r20 ]
    ld4.bias.d6	r120 = [ r20 ]
    ld4.bias.d7	r120 = [ r20 ]
    ld8.bias	r120 = [ r20 ]
    ld8.bias.nt1	r120 = [ r20 ]
    ld8.bias.d1	r120 = [ r20 ]
    ld8.bias.d2	r120 = [ r20 ]
    ld8.bias.nt2	r120 = [ r20 ]
    ld8.bias.nta	r120 = [ r20 ]
    ld8.bias.d3	r120 = [ r20 ]
    ld8.bias.d4	r120 = [ r20 ]
    ld8.bias.d5	r120 = [ r20 ]
    ld8.bias.d6	r120 = [ r20 ]
    ld8.bias.d7	r120 = [ r20 ]
    ld1.acq	r120 = [ r20 ]
    ld1.acq.nt1	r120 = [ r20 ]
    ld1.acq.d1	r120 = [ r20 ]
    ld1.acq.d2	r120 = [ r20 ]
    ld1.acq.nt2	r120 = [ r20 ]
    ld1.acq.nta	r120 = [ r20 ]
    ld1.acq.d3	r120 = [ r20 ]
    ld1.acq.d4	r120 = [ r20 ]
    ld1.acq.d5	r120 = [ r20 ]
    ld1.acq.d6	r120 = [ r20 ]
    ld2.acq	r120 = [ r20 ]
    ld2.acq.nt1	r120 = [ r20 ]
    ld2.acq.d1	r120 = [ r20 ]
    ld2.acq.d2	r120 = [ r20 ]
    ld2.acq.nt2	r120 = [ r20 ]
    ld2.acq.nta	r120 = [ r20 ]
    ld2.acq.d3	r120 = [ r20 ]
    ld2.acq.d4	r120 = [ r20 ]
    ld2.acq.d5	r120 = [ r20 ]
    ld2.acq.d6	r120 = [ r20 ]
    ld2.acq.d7	r120 = [ r20 ]
    ld4.acq	r120 = [ r20 ]
    ld4.acq.nt1	r120 = [ r20 ]
    ld4.acq.d1	r120 = [ r20 ]
    ld4.acq.d2	r120 = [ r20 ]
    ld4.acq.nt2	r120 = [ r20 ]
    ld4.acq.nta	r120 = [ r20 ]
    ld4.acq.d3	r120 = [ r20 ]
    ld4.acq.d4	r120 = [ r20 ]
    ld4.acq.d5	r120 = [ r20 ]
    ld4.acq.d6	r120 = [ r20 ]
    ld4.acq.d7	r120 = [ r20 ]
    ld8.acq	r120 = [ r20 ]
    ld8.acq.nt1	r120 = [ r20 ]
    ld8.acq.d1	r120 = [ r20 ]
    ld8.acq.d2	r120 = [ r20 ]
    ld8.acq.nt2	r120 = [ r20 ]
    ld8.acq.nta	r120 = [ r20 ]
    ld8.acq.d3	r120 = [ r20 ]
    ld8.acq.d4	r120 = [ r20 ]
    ld8.acq.d5	r120 = [ r20 ]
    ld8.acq.d6	r120 = [ r20 ]
    ld8.acq.d7	r120 = [ r20 ]
    ld8.fill	r120 = [ r20 ]
    ld8.fill.nt1	r120 = [ r20 ]
    ld8.fill.d1	r120 = [ r20 ]
    ld8.fill.d2	r120 = [ r20 ]
    ld8.fill.nt2	r120 = [ r20 ]
    ld8.fill.nta	r120 = [ r20 ]
    ld8.fill.d3	r120 = [ r20 ]
    ld8.fill.d4	r120 = [ r20 ]
    ld8.fill.d5	r120 = [ r20 ]
    ld8.fill.d6	r120 = [ r20 ]
    ld8.fill.d7	r120 = [ r20 ]
    ld1.c.clr	r120 = [ r20 ]
    ld1.c.clr.nt1	r120 = [ r20 ]
    ld1.c.clr.d1	r120 = [ r20 ]
    ld1.c.clr.d2	r120 = [ r20 ]
    ld1.c.clr.nt2	r120 = [ r20 ]
    ld1.c.clr.nta	r120 = [ r20 ]
    ld1.c.clr.d3	r120 = [ r20 ]
    ld1.c.clr.d4	r120 = [ r20 ]
    ld1.c.clr.d5	r120 = [ r20 ]
    ld1.c.clr.d6	r120 = [ r20 ]
    ld1.c.clr.d7	r120 = [ r20 ]
    ld2.c.clr	r120 = [ r20 ]
    ld2.c.clr.nt1	r120 = [ r20 ]
    ld2.c.clr.d1	r120 = [ r20 ]
    ld2.c.clr.d2	r120 = [ r20 ]
    ld2.c.clr.nt2	r120 = [ r20 ]
    ld2.c.clr.nta	r120 = [ r20 ]
    ld2.c.clr.d3	r120 = [ r20 ]
    ld2.c.clr.d4	r120 = [ r20 ]
    ld2.c.clr.d5	r120 = [ r20 ]
    ld2.c.clr.d6	r120 = [ r20 ]
    ld2.c.clr.d7	r120 = [ r20 ]
    ld4.c.clr	r120 = [ r20 ]
    ld4.c.clr.nt1	r120 = [ r20 ]
    ld4.c.clr.d1	r120 = [ r20 ]
    ld4.c.clr.d2	r120 = [ r20 ]
    ld4.c.clr.nt2	r120 = [ r20 ]
    ld4.c.clr.nta	r120 = [ r20 ]
    ld4.c.clr.d3	r120 = [ r20 ]
    ld4.c.clr.d4	r120 = [ r20 ]
    ld4.c.clr.d5	r120 = [ r20 ]
    ld4.c.clr.d6	r120 = [ r20 ]
    ld4.c.clr.d7	r120 = [ r20 ]
    ld8.c.clr	r120 = [ r20 ]
    ld8.c.clr.nt1	r120 = [ r20 ]
    ld8.c.clr.d1	r120 = [ r20 ]
    ld8.c.clr.d2	r120 = [ r20 ]
    ld8.c.clr.nt2	r120 = [ r20 ]
    ld8.c.clr.nta	r120 = [ r20 ]
    ld8.c.clr.d3	r120 = [ r20 ]
    ld8.c.clr.d4	r120 = [ r20 ]
    ld8.c.clr.d5	r120 = [ r20 ]
    ld8.c.clr.d6	r120 = [ r20 ]
    ld8.c.clr.d7	r120 = [ r20 ]
    ld1.c.nc	r120 = [ r20 ]
    ld1.c.nc.nt1	r120 = [ r20 ]
    ld1.c.nc.d1	r120 = [ r20 ]
    ld1.c.nc.d2	r120 = [ r20 ]
    ld1.c.nc.nt2	r120 = [ r20 ]
    ld1.c.nc.nta	r120 = [ r20 ]
    ld1.c.nc.d3	r120 = [ r20 ]
    ld1.c.nc.d4	r120 = [ r20 ]
    ld1.c.nc.d5	r120 = [ r20 ]
    ld1.c.nc.d7	r120 = [ r20 ]
    ld2.c.nc	r120 = [ r20 ]
    ld2.c.nc.nt1	r120 = [ r20 ]
    ld2.c.nc.d1	r120 = [ r20 ]
    ld2.c.nc.d2	r120 = [ r20 ]
    ld2.c.nc.nt2	r120 = [ r20 ]
    ld2.c.nc.nta	r120 = [ r20 ]
    ld2.c.nc.d3	r120 = [ r20 ]
    ld2.c.nc.d4	r120 = [ r20 ]
    ld2.c.nc.d5	r120 = [ r20 ]
    ld2.c.nc.d6	r120 = [ r20 ]
    ld2.c.nc.d7	r120 = [ r20 ]
    ld4.c.nc	r120 = [ r20 ]
    ld4.c.nc.nt1	r120 = [ r20 ]
    ld4.c.nc.d1	r120 = [ r20 ]
    ld4.c.nc.d2	r120 = [ r20 ]
    ld4.c.nc.nt2	r120 = [ r20 ]
    ld4.c.nc.nta	r120 = [ r20 ]
    ld4.c.nc.d3	r120 = [ r20 ]
    ld4.c.nc.d4	r120 = [ r20 ]
    ld4.c.nc.d5	r120 = [ r20 ]
    ld4.c.nc.d6	r120 = [ r20 ]
    ld4.c.nc.d7	r120 = [ r20 ]
    ld8.c.nc	r120 = [ r20 ]
    ld8.c.nc.nt1	r120 = [ r20 ]
    ld8.c.nc.d1	r120 = [ r20 ]
    ld8.c.nc.d2	r120 = [ r20 ]
    ld8.c.nc.nt2	r120 = [ r20 ]
    ld8.c.nc.nta	r120 = [ r20 ]
    ld8.c.nc.d3	r120 = [ r20 ]
    ld8.c.nc.d4	r120 = [ r20 ]
    ld8.c.nc.d5	r120 = [ r20 ]
    ld8.c.nc.d6	r120 = [ r20 ]
    ld8.c.nc.d7	r120 = [ r20 ]
    ld1.c.clr.acq	r120 = [ r20 ]
    ld1.c.clr.acq.nt1	r120 = [ r20 ]
    ld1.c.clr.acq.d1	r120 = [ r20 ]
    ld1.c.clr.acq.d2	r120 = [ r20 ]
    ld1.c.clr.acq.nt2	r120 = [ r20 ]
    ld1.c.clr.acq.nta	r120 = [ r20 ]
    ld1.c.clr.acq.d3	r120 = [ r20 ]
    ld1.c.clr.acq.d4	r120 = [ r20 ]
    ld1.c.clr.acq.d5	r120 = [ r20 ]
    ld1.c.clr.acq.d6	r120 = [ r20 ]
    ld1.c.clr.acq.d7	r120 = [ r20 ]
    ld2.c.clr.acq	r120 = [ r20 ]
    ld2.c.clr.acq.nt1	r120 = [ r20 ]
    ld2.c.clr.acq.d1	r120 = [ r20 ]
    ld2.c.clr.acq.d2	r120 = [ r20 ]
    ld2.c.clr.acq.nt2	r120 = [ r20 ]
    ld2.c.clr.acq.d3	r120 = [ r20 ]
    ld2.c.clr.acq.d4	r120 = [ r20 ]
    ld2.c.clr.acq.d5	r120 = [ r20 ]
    ld2.c.clr.acq.d6	r120 = [ r20 ]
    ld2.c.clr.acq.d7	r120 = [ r20 ]
    ld4.c.clr.acq	r120 = [ r20 ]
    ld4.c.clr.acq.nt1	r120 = [ r20 ]
    ld4.c.clr.acq.d1	r120 = [ r20 ]
    ld4.c.clr.acq.d2	r120 = [ r20 ]
    ld4.c.clr.acq.nt2	r120 = [ r20 ]
    ld4.c.clr.acq.nta	r120 = [ r20 ]
    ld4.c.clr.acq.d3	r120 = [ r20 ]
    ld4.c.clr.acq.d4	r120 = [ r20 ]
    ld4.c.clr.acq.d5	r120 = [ r20 ]
    ld4.c.clr.acq.d6	r120 = [ r20 ]
    ld4.c.clr.acq.d7	r120 = [ r20 ]
    ld8.c.clr.acq	r120 = [ r20 ]
    ld8.c.clr.acq.nt1	r120 = [ r20 ]
    ld8.c.clr.acq.d1	r120 = [ r20 ]
    ld8.c.clr.acq.d2	r120 = [ r20 ]
    ld8.c.clr.acq.nt2	r120 = [ r20 ]
    ld8.c.clr.acq.nta	r120 = [ r20 ]
    ld8.c.clr.acq.d3	r120 = [ r20 ]
    ld8.c.clr.acq.d4	r120 = [ r20 ]
    ld8.c.clr.acq.d5	r120 = [ r20 ]
    ld8.c.clr.acq.d6	r120 = [ r20 ]
    ld8.c.clr.acq.d7	r120 = [ r20 ]
    ld16	r120 = [ r20 ]
    ld16	r120 = [ r20 ]
    ld16.nt1	r120 = [ r20 ]
    ld16.d1	r120 = [ r20 ]
    ld16.d2	r120 = [ r20 ]
    ld16.nt2	r120 = [ r20 ]
    ld16.nt1	r120 = [ r20 ]
    ld16.d1	r120 = [ r20 ]
    ld16.d2	r120 = [ r20 ]
    ld16.nt2	r120 = [ r20 ]
    ld16.nta	r120 = [ r20 ]
    ld16.d3	r120 = [ r20 ]
    ld16.d4	r120 = [ r20 ]
    ld16.d5	r120 = [ r20 ]
    ld16.d6	r120 = [ r20 ]
    ld16.d7	r120 = [ r20 ]
    ld16.nta	r120 = [ r20 ]
    ld16.d3	r120 = [ r20 ]
    ld16.d4	r120 = [ r20 ]
    ld16.d5	r120 = [ r20 ]
    ld16.d6	r120 = [ r20 ]
    ld16.d7	r120 = [ r20 ]
    ld16.acq	r120 = [ r20 ]
    ld16.acq	r120, ar.csd = [ r20 ]
    ld16.acq.nt1	r120 = [ r20 ]
    ld16.acq.d1	r120 = [ r20 ]
    ld16.acq.d2	r120, ar.csd = [ r20 ]
    ld16.acq.nt2	r120 = [ r20 ]
    ld16.acq.nt1	r120 = [ r20 ]
    ld16.acq.d1	r120 = [ r20 ]
    ld16.acq.d2	r120 = [ r20 ]
    ld16.acq.nt2	r120 = [ r20 ]
    ld16.acq.nta	r120 = [ r20 ]
    ld16.acq.d3	r120 = [ r20 ]
    ld16.acq.d4	r120 = [ r20 ]
    ld16.acq.d5	r120 = [ r20 ]
    ld16.acq.d6	r120 = [ r20 ]
    ld16.acq.d7	r120 = [ r20 ]
    ld16.acq.nta	r120, ar.csd = [ r20 ]
    ld16.acq.d3	r120 = [ r20 ]
    ld16.acq.d4	r120 = [ r20 ]
    ld16.acq.d5	r120 = [ r20 ]
    ld16.acq.d6	r120 = [ r20 ]
    ld16.acq.d7	r120 = [ r20 ]

    /* Pseudo-op that generates ldxmov relocation.  */
    ld8.mov	r120 = [ r20 ], AAAAA
AAAAA:

@


1.1.2.1
log
@bfd/
2012-08-09  Maciej W. Rozycki  <macro@@codesourcery.com>

	* elfxx-mips.c (LA25_LUI_MICROMIPS_1, LA25_LUI_MICROMIPS_2):
	Remove macros, folding them into...
	(LA25_LUI_MICROMIPS): ... this new macro.
	(LA25_J_MICROMIPS_1, LA25_J_MICROMIPS_2): Likewise into...
	(LA25_J_MICROMIPS): ... this new macro.
	(LA25_ADDIU_MICROMIPS_1, LA25_ADDIU_MICROMIPS_2): Likewise
	into...
	(LA25_ADDIU_MICROMIPS): ... this new macro.
	(bfd_put_micromips_32, bfd_get_micromips_32): New functions.
	(mips_elf_create_la25_stub): Use them.
	(check_br32_dslot, check_br32, check_relocated_bzc): Likewise.
	(_bfd_mips_elf_relax_section): Likewise.

gas/
	* config/tc-mips.c (NO_ISA_COP, COP_INSN): Remove macros.
	(is_opcode_valid): Remove coprocessor instruction exclusions.
	Replace OPCODE_IS_MEMBER with opcode_is_member.
	(is_opcode_valid_16): Replace OPCODE_IS_MEMBER with
	opcode_is_member.
	(macro): Remove coprocessor instruction exclusions.

gas/
	* gas/mips/mips.exp: Set has_newabi for all Linux targets.
	* gas/mips/cfi-n64-1.d: Adjust for targets that do not infer the
	ISA from the ABI.
	* gas/mips/elf-rel-got-n32.d: Likewise.
	* gas/mips/elf-rel-got-n64.d: Likewise.
	* gas/mips/elf-rel-xgot-n32.d: Likewise.
	* gas/mips/elf-rel-xgot-n64.d: Likewise.
	* gas/mips/elf-rel18.d: Likewise.
	* gas/mips/elf-rel28-n32.d: Likewise.
	* gas/mips/elf-rel28-n64.d: Likewise.
	* gas/mips/jal-newabi.d: Likewise.
	* gas/mips/ldstla-n64-shared.d: Likewise.
	* gas/mips/ldstla-n64-sym32.d: Likewise.
	* gas/mips/ldstla-n64.d: Likewise.
	* gas/mips/macro-warn-1-n32.d: Likewise.
	* gas/mips/macro-warn-2-n32.d: Likewise.
	* gas/mips/n32-consec.d: Likewise.

include/
2012-08-13  Richard Sandiford  <rdsandiford@@googlemail.com>
            Maciej W. Rozycki  <macro@@codesourcery.com>

	* mips.h (mips_opcode): Add the exclusions field.
	(OPCODE_IS_MEMBER): Remove macro.
	(cpu_is_member): New inline function.
	(opcode_is_member): Likewise.

ld/
	* emulparams/elf32bmip.sh: Make _gp hidden.
	* emulparams/elf32bmipn32-defs.sh: Likewise.
	* emulparams/elf32mipswindiss.sh: Likewise.
	* scripttempl/mips.sc: Likewise.

ld/
2012-08-28  Maciej W. Rozycki  <macro@@codesourcery.com>

	* ld-elf/export-class.sd: New test.
	* ld-elf/export-class.vd: New test.
	* ld-elf/export-class-def.s: New test source.
	* ld-elf/export-class-dep.s: New test source.
	* ld-elf/export-class-lib.s: New test source.
	* ld-elf/export-class-ref.s: New test source.
	* ld-elf/export-class-lib.ver: New test version script.
	* ld-elf/export-class.exp: New test script.
	* ld-arm/arm-export-class.rd: New test.
	* ld-arm/arm-export-class.xd: New test.
	* ld-arm/export-class.exp: New test script.
	* ld-i386/i386-export-class.rd: New test.
	* ld-i386/i386-export-class.xd: New test.
	* ld-i386/export-class.exp: New test script.
	* ld-mips-elf/mips-32-export-class.rd: New test.
	* ld-mips-elf/mips-32-export-class.xd: New test.
	* ld-mips-elf/mips-64-export-class.rd: New test.
	* ld-mips-elf/mips-64-export-class.xd: New test.
	* ld-mips-elf/export-class.exp: New test script.
	* ld-powerpc/powerpc-32-export-class.rd: New test.
	* ld-powerpc/powerpc-32-export-class.xd: New test.
	* ld-powerpc/powerpc-64-export-class.rd: New test.
	* ld-powerpc/powerpc-64-export-class.xd: New test.
	* ld-powerpc/export-class.exp: New test script.
	* ld-x86-64/x86-64-64-export-class.rd: New test.
	* ld-x86-64/x86-64-x32-export-class.rd: New test.
	* ld-x86-64/export-class.exp: New test script.

opcodes/
2012-08-14  Maciej W. Rozycki  <macro@@codesourcery.com>

	* mips-dis.c (print_insn_args): Add GET_OP and GET_OP_S local
	macros, use local variables for info struct member accesses,
	update the type of the variable used to hold the instruction
	word.
	(print_insn_mips, print_mips16_insn_arg): Likewise.
	(print_insn_mips16): Add GET_OP and GET_OP_S local macros, use
	local variables for info struct member accesses.
	(print_insn_micromips): Add GET_OP_S local macro.
	(_print_insn_mips): Update the type of the variable used to hold
	the instruction word.
@
text
@@

