head	1.47;
access;
symbols
	binutils-2_24-branch:1.47.0.2
	binutils-2_24-branchpoint:1.47
	binutils-2_21_1:1.43
	binutils-2_23_2:1.44.6.1
	binutils-2_23_1:1.44.6.1
	binutils-2_23:1.44.6.1
	binutils-2_23-branch:1.44.0.6
	binutils-2_23-branchpoint:1.44
	binutils-2_22_branch:1.44.0.4
	binutils-2_22:1.44
	binutils-2_22-branch:1.44.0.2
	binutils-2_22-branchpoint:1.44
	binutils-2_21:1.43
	binutils-2_21-branch:1.43.0.2
	binutils-2_21-branchpoint:1.43
	binutils-2_20_1:1.42
	binutils-2_20:1.42
	binutils-arc-20081103-branch:1.42.0.12
	binutils-arc-20081103-branchpoint:1.42
	binutils-2_20-branch:1.42.0.10
	binutils-2_20-branchpoint:1.42
	dje-cgen-play1-branch:1.42.0.8
	dje-cgen-play1-branchpoint:1.42
	arc-20081103-branch:1.42.0.6
	arc-20081103-branchpoint:1.42
	binutils-2_19_1:1.42
	binutils-2_19:1.42
	binutils-2_19-branch:1.42.0.4
	binutils-2_19-branchpoint:1.42
	binutils-2_18:1.42
	binutils-2_18-branch:1.42.0.2
	binutils-2_18-branchpoint:1.42
	binutils-csl-coldfire-4_1-32:1.41
	binutils-csl-sourcerygxx-4_1-32:1.41
	binutils-csl-innovasic-fido-3_4_4-33:1.41
	binutils-csl-sourcerygxx-3_4_4-32:1.33.2.1
	binutils-csl-coldfire-4_1-30:1.41
	binutils-csl-sourcerygxx-4_1-30:1.41
	binutils-csl-coldfire-4_1-28:1.41
	binutils-csl-sourcerygxx-4_1-29:1.41
	binutils-csl-sourcerygxx-4_1-28:1.41
	binutils-csl-arm-2006q3-27:1.41
	binutils-csl-sourcerygxx-4_1-27:1.41
	binutils-csl-arm-2006q3-26:1.41
	binutils-csl-sourcerygxx-4_1-26:1.41
	binutils-csl-sourcerygxx-4_1-25:1.41
	binutils-csl-sourcerygxx-4_1-24:1.41
	binutils-csl-sourcerygxx-4_1-23:1.41
	binutils-csl-sourcerygxx-4_1-21:1.41
	binutils-csl-arm-2006q3-21:1.41
	binutils-csl-sourcerygxx-4_1-22:1.41
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.41
	binutils-csl-sourcerygxx-4_1-20:1.41
	binutils-csl-arm-2006q3-19:1.41
	binutils-csl-sourcerygxx-4_1-19:1.41
	binutils-csl-sourcerygxx-4_1-18:1.41
	binutils-csl-renesas-4_1-9:1.41
	binutils-csl-sourcerygxx-3_4_4-25:1.33.2.1
	binutils-csl-renesas-4_1-8:1.41
	binutils-csl-renesas-4_1-7:1.41
	binutils-csl-renesas-4_1-6:1.41
	binutils-csl-sourcerygxx-4_1-17:1.41
	binutils-csl-sourcerygxx-4_1-14:1.41
	binutils-csl-sourcerygxx-4_1-15:1.41
	binutils-csl-sourcerygxx-4_1-13:1.41
	binutils-2_17:1.41
	binutils-csl-sourcerygxx-4_1-12:1.41
	binutils-csl-sourcerygxx-3_4_4-21:1.41
	binutils-csl-wrs-linux-3_4_4-24:1.33
	binutils-csl-wrs-linux-3_4_4-23:1.33
	binutils-csl-sourcerygxx-4_1-9:1.41
	binutils-csl-sourcerygxx-4_1-8:1.41
	binutils-csl-sourcerygxx-4_1-7:1.41
	binutils-csl-arm-2006q1-6:1.41
	binutils-csl-sourcerygxx-4_1-6:1.41
	binutils-csl-wrs-linux-3_4_4-22:1.33
	binutils-csl-coldfire-4_1-11:1.41
	binutils-csl-sourcerygxx-3_4_4-19:1.41
	binutils-csl-coldfire-4_1-10:1.41
	binutils-csl-sourcerygxx-4_1-5:1.41
	binutils-csl-sourcerygxx-4_1-4:1.41
	binutils-csl-wrs-linux-3_4_4-21:1.33
	binutils-csl-morpho-4_1-4:1.41
	binutils-csl-sourcerygxx-3_4_4-17:1.41
	binutils-csl-wrs-linux-3_4_4-20:1.33
	binutils-2_17-branch:1.41.0.4
	binutils-2_17-branchpoint:1.41
	binutils-csl-2_17-branch:1.41.0.2
	binutils-csl-2_17-branchpoint:1.41
	binutils-csl-gxxpro-3_4-branch:1.33.2.1.0.2
	binutils-csl-gxxpro-3_4-branchpoint:1.33.2.1
	binutils-2_16_1:1.33.2.1
	binutils-csl-arm-2005q1b:1.33
	binutils-2_16:1.33
	binutils-csl-arm-2005q1a:1.33
	binutils-csl-arm-2005q1-branch:1.33.0.4
	binutils-csl-arm-2005q1-branchpoint:1.33
	binutils-2_16-branch:1.33.0.2
	binutils-2_16-branchpoint:1.33
	csl-arm-2004-q3d:1.15
	csl-arm-2004-q3:1.15
	binutils-2_15:1.13
	binutils-2_15-branchpoint:1.13
	csl-arm-2004-q1a:1.13
	csl-arm-2004-q1:1.13
	binutils-2_15-branch:1.13.0.6
	cagney_bfdfile-20040213-branch:1.13.0.4
	cagney_bfdfile-20040213-branchpoint:1.13
	cagney_bigcore-20040122-branch:1.13.0.2
	cagney_bigcore-20040122-branchpoint:1.13
	csl-arm-2003-q4:1.13
	binutils-2_14:1.5
	binutils-2_14-branch:1.5.0.2
	binutils-2_14-branchpoint:1.5
	binutils-2_13_2_1:1.2
	binutils-2_13_2:1.2
	binutils-2_13_1:1.2
	binutils-2_13:1.2
	binutils-2_13-branchpoint:1.2
	binutils-2_13-branch:1.2.0.2
	binutils-2_12_1:1.1
	binutils-2_12:1.1
	binutils-2_12-branch:1.1.0.4
	binutils-2_12-branchpoint:1.1
	cygnus_cvs_20020108_pre:1.1
	binutils-2_11_2:1.1
	binutils-2_11_1:1.1
	binutils-2_11:1.1
	x86_64versiong3:1.1
	binutils-2_11-branch:1.1.0.2
	binutils_latest_snapshot:1.47;
locks; strict;
comment	@# @;


1.47
date	2013.03.26.09.13.17;	author gingold;	state Exp;
branches;
next	1.46;

1.46
date	2012.12.17.16.55.53;	author nickc;	state Exp;
branches;
next	1.45;

1.45
date	2012.09.04.13.52.06;	author hjl;	state Exp;
branches;
next	1.44;

1.44
date	2011.09.08.12.18.28;	author rsandifo;	state Exp;
branches
	1.44.6.1;
next	1.43;

1.43
date	2010.02.12.14.34.45;	author gingold;	state Exp;
branches;
next	1.42;

1.42
date	2007.06.05.17.00.32;	author nickc;	state Exp;
branches;
next	1.41;

1.41
date	2006.01.09.17.14.40;	author hjl;	state Exp;
branches;
next	1.40;

1.40
date	2005.10.24.07.42.49;	author jbeulich;	state Exp;
branches;
next	1.39;

1.39
date	2005.10.12.07.51.08;	author jbeulich;	state Exp;
branches;
next	1.38;

1.38
date	2005.09.29.07.00.54;	author jbeulich;	state Exp;
branches;
next	1.37;

1.37
date	2005.07.01.06.51.39;	author jbeulich;	state Exp;
branches;
next	1.36;

1.36
date	2005.05.25.06.59.36;	author jbeulich;	state Exp;
branches;
next	1.35;

1.35
date	2005.05.19.06.32.01;	author jbeulich;	state Exp;
branches;
next	1.34;

1.34
date	2005.05.07.22.19.37;	author hjl;	state Exp;
branches;
next	1.33;

1.33
date	2005.03.08.08.27.02;	author jbeulich;	state Exp;
branches
	1.33.2.1;
next	1.32;

1.32
date	2005.03.08.08.23.32;	author jbeulich;	state Exp;
branches;
next	1.31;

1.31
date	2005.02.17.23.22.05;	author hjl;	state Exp;
branches;
next	1.30;

1.30
date	2005.02.17.07.43.12;	author jbeulich;	state Exp;
branches;
next	1.29;

1.29
date	2005.02.15.08.11.14;	author jbeulich;	state Exp;
branches;
next	1.28;

1.28
date	2005.02.15.07.54.03;	author jbeulich;	state Exp;
branches;
next	1.27;

1.27
date	2005.02.15.07.50.23;	author jbeulich;	state Exp;
branches;
next	1.26;

1.26
date	2005.02.15.07.37.11;	author jbeulich;	state Exp;
branches;
next	1.25;

1.25
date	2005.02.14.07.47.51;	author jbeulich;	state Exp;
branches;
next	1.24;

1.24
date	2005.02.13.19.25.26;	author hjl;	state Exp;
branches;
next	1.23;

1.23
date	2005.02.11.21.01.19;	author hjl;	state Exp;
branches;
next	1.22;

1.22
date	2005.02.02.07.37.36;	author jbeulich;	state Exp;
branches;
next	1.21;

1.21
date	2005.01.31.10.01.02;	author jbeulich;	state Exp;
branches;
next	1.20;

1.20
date	2005.01.31.09.46.14;	author jbeulich;	state Exp;
branches;
next	1.19;

1.19
date	2005.01.31.09.17.14;	author jbeulich;	state Exp;
branches;
next	1.18;

1.18
date	2005.01.31.08.48.22;	author jbeulich;	state Exp;
branches;
next	1.17;

1.17
date	2005.01.27.09.12.51;	author jbeulich;	state Exp;
branches;
next	1.16;

1.16
date	2005.01.27.08.41.25;	author jbeulich;	state Exp;
branches;
next	1.15;

1.15
date	2004.07.02.02.01.23;	author hjl;	state Exp;
branches;
next	1.14;

1.14
date	2004.05.26.17.48.59;	author hjl;	state Exp;
branches;
next	1.13;

1.13
date	2003.09.26.03.54.09;	author hjl;	state Exp;
branches;
next	1.12;

1.12
date	2003.05.07.19.31.10;	author hjl;	state Exp;
branches;
next	1.11;

1.11
date	2003.05.03.16.04.12;	author hjl;	state Exp;
branches;
next	1.10;

1.10
date	2003.05.02.02.46.36;	author hjl;	state Exp;
branches;
next	1.9;

1.9
date	2003.05.02.02.43.28;	author hjl;	state Exp;
branches;
next	1.8;

1.8
date	2003.05.01.01.00.30;	author hjl;	state Exp;
branches;
next	1.7;

1.7
date	2003.05.01.00.53.38;	author hjl;	state Exp;
branches;
next	1.6;

1.6
date	2003.04.30.21.38.55;	author hjl;	state Exp;
branches;
next	1.5;

1.5
date	2003.04.08.09.50.07;	author nickc;	state Exp;
branches;
next	1.4;

1.4
date	2002.12.05.23.20.40;	author rth;	state Exp;
branches;
next	1.3;

1.3
date	2002.12.03.18.15.46;	author rth;	state Exp;
branches;
next	1.2;

1.2
date	2002.05.23.13.12.51;	author jakub;	state Exp;
branches;
next	1.1;

1.1
date	2000.04.21.20.22.22;	author wilson;	state Exp;
branches;
next	;

1.44.6.1
date	2012.09.04.13.57.44;	author gingold;	state Exp;
branches;
next	;

1.33.2.1
date	2005.05.19.15.43.05;	author jbeulich;	state Exp;
branches;
next	;


desc
@@


1.47
log
@gas/
2013-03-26  Douglas B Rupp  <rupp@@gnat.com>

	* config/tc-ia64.c (emit_one_bundle): Move last_slot adjustment
	after fixup.

gas/testsuite/
2013-03-26  Douglas B Rupp  <rupp@@adacore.com

	* gas/ia64/ia64.exp: Add new test reloc-mlx
	* gas/ia64/reloc-mlx.[sd]: New test for X-unit reloc.
	* gas/ia64/pcrel.d: Fix output for X-unit reloc.
@
text
@# Copyright 2012
# Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.  

#
# ia64 tests
#
if [istarget "ia64-*"] then {

    run_dump_test "regs"
    run_dump_test "opc-a"
    run_list_test "opc-a-err" ""
    run_dump_test "opc-b"
    run_dump_test "opc-f"
    run_dump_test "opc-i"
    run_dump_test "opc-m"
    run_dump_test "opc-x"
    run_dump_test "psn"
    run_dump_test "pseudo"
    run_dump_test "nop_x"
    run_dump_test "mov-ar"
    run_list_test "operands" ""
    run_list_test "reg-err" ""

    run_list_test "dv-raw-err" ""
    run_list_test "dv-waw-err" ""
    run_list_test "dv-war-err" ""
    run_list_test "dv-entry-err" ""
    run_list_test "dv-mutex-err" ""
    run_dump_test "dv-branch"
    run_dump_test "dv-imply"
    run_dump_test "dv-mutex"
    gas_test "pred-rel.s" "" "" ".pred.rel alternative forms"
    run_dump_test "dv-safe"
    run_dump_test "dv-srlz"
    run_list_test "regval" ""
    run_dump_test "tls"
    run_dump_test "ldxmov-1"
    run_list_test "ldxmov-2" ""
    run_dump_test "ltoff22x-1"
    run_dump_test "ltoff22x-2"
    run_dump_test "ltoff22x-3"
    run_dump_test "ltoff22x-4"
    run_dump_test "ltoff22x-5"

    run_dump_test "nostkreg"
    run_list_test "invalid-ar" ""

    run_dump_test "nostkreg"
    run_list_test "invalid-ar" ""

    run_dump_test "dependency-1"

    run_dump_test "reloc"
    run_dump_test "reloc-mlx"
    run_list_test "reloc-bad" ""
    run_dump_test "pcrel"

    run_dump_test "real"
    run_dump_test "align"
    run_dump_test "order"
    run_dump_test "global"
    if [istarget "ia64-*-hpux*"] then {
	run_dump_test "secname-ilp32"
	run_dump_test "unwind-ilp32"
	run_dump_test "alias-ilp32"
	run_dump_test "xdata-ilp32"
	run_dump_test "reloc-uw-ilp32"
    } else {
	run_dump_test "secname"
	run_dump_test "unwind"
	run_dump_test "alias"
	run_dump_test "xdata"
	run_dump_test "reloc-uw"
	run_dump_test "group-1"
	run_dump_test "group-2"
    }

    run_list_test "alloc" ""
    run_dump_test "bundling"
    run_dump_test "forward"
    run_list_test "index" ""
    run_list_test "label" ""
    run_list_test "last" ""
    run_list_test "no-fit" ""
    run_list_test "pound" "-al"
    run_list_test "proc" "-munwind-check=error"
    run_list_test "radix" ""
    run_list_test "rotX" ""
    run_list_test "slot2" ""
    run_dump_test "strange"
    run_list_test "unwind-bad" ""
    run_list_test "unwind-err" "-munwind-check=error"
    run_dump_test "unwind-ok"
    run_dump_test "operand-or"
    run_list_test "hint.b-err" ""
    run_list_test "hint.b-warn" "-mhint.b=warning"

    if [istarget "ia64-*-*vms*"] then {
	run_dump_test "slotcount"
    }

    if { [istarget "ia64-*-elf*"] || [istarget "ia64-*-linux*"] } {
	run_dump_test "pr13167"
    }
}
@


1.46
log
@Add copyright notices
@
text
@d68 1
@


1.45
log
@Add Intel Itanium Series 9500 support

bfd/

2012-09-04  Sergey A. Guriev <sergey.a.guriev@@intel.com>

	* cpu-ia64-opc.c (ins_cnt6a): New function.
	(ext_cnt6a): Ditto.
	(ins_strd5b): Ditto.
	(ext_strd5b): Ditto.
	(elf64_ia64_operands): Add new operand types.

gas/

2012-09-04  Sergey A. Guriev  <sergey.a.guriev@@intel.com>

	* config/tc-ia64.c (reg_symbol): Add a new register.
	(indirect_reg): Ditto.
	(pseudo_func): Add new symbolic constants.
	(operand_match): Add new operand types recognition.
	(operand_insn): Add new register recognition.
	(md_begin): Add new register definition.
	(specify_resource): Add new register recognition.

gas/testsuite/

2012-09-04  Sergey A. Guriev  <sergey.a.guriev@@intel.com>

	* gas/testsuite/gas/ia64/psn.d: New file.
	* gas/testsuite/gas/ia64/psn.s: New file.
	* gas/testsuite/gas/ia64/ia64.exp: Add new testcase.
	* gas/testsuite/gas/ia64/opc-i.d: Fixed failing tests.
	* gas/testsuite/gas/ia64/opc-m.d: Ditto.

include/opcode/

2012-09-04  Sergey A. Guriev <sergey.a.guriev@@intel.com>

	* ia64.h (ia64_opnd): Add new operand types.

opcodes/

2012-09-04  Sergey A. Guriev <sergey.a.guriev@@intel.com>

	* ia64-asmtab.h (completer_index): Extend bitfield to full uint.
	* ia64-gen.c: Promote completer index type to longlong.
	(irf_operand): Add new register recognition.
	(in_iclass_mov_x): Add an entry for the new mov_* instruction type.
	(lookup_specifier): Add new resource recognition.
	(insert_bit_table_ent): Relax abort condition according to the
	changed completer index type.
	(print_dis_table): Fix printf format for completer index.
	* ia64-ic.tbl: Add a new instruction class.
	* ia64-opc-i.c (ia64_opcodes_i): Define new I-instructions.
	* ia64-opc-m.c (ia64_opcodes_m): Define new M-instructions.
	* ia64-opc.h: Define short names for new operand types.
	* ia64-raw.tbl: Add new RAW resource for DAHR register.
	* ia64-waw.tbl: Add new WAW resource for DAHR register.
	* ia64-asmtab.c: Regenerate.
@
text
@d1 17
@


1.44
log
@gas/
	PR gas/13167
	* dwarf2dbg.c (dwarf2_flush_pending_lines): Use symbol_temp_new_now.

gas/testsuite/
	PR gas/13167
	* gas/ia64/pr13167.d, gas/ia64/pr13167.s: New test.
	* gas/ia64/ia64.exp: Run it.
@
text
@d14 1
@


1.44.6.1
log
@bfd/
2012-09-04  Sergey A. Guriev <sergey.a.guriev@@intel.com>

	* cpu-ia64-opc.c (ins_cnt6a): New function.
	(ext_cnt6a): Ditto.
	(ins_strd5b): Ditto.
	(ext_strd5b): Ditto.
	(elf64_ia64_operands): Add new operand types.

gas/
2012-09-04  Sergey A. Guriev  <sergey.a.guriev@@intel.com>

	* config/tc-ia64.c (reg_symbol): Add a new register.
	(indirect_reg): Ditto.
	(pseudo_func): Add new symbolic constants.
	(operand_match): Add new operand types recognition.
	(operand_insn): Add new register recognition.
	(md_begin): Add new register definition.
	(specify_resource): Add new register recognition.

gas/
2012-09-04  Sergey A. Guriev  <sergey.a.guriev@@intel.com>

	* gas/testsuite/gas/ia64/psn.d: New file.
	* gas/testsuite/gas/ia64/psn.s: New file.
	* gas/testsuite/gas/ia64/ia64.exp: Add new testcase.
	* gas/testsuite/gas/ia64/opc-i.d: Fixed failing tests.
	* gas/testsuite/gas/ia64/opc-m.d: Ditto.

include/
2012-09-04  Sergey A. Guriev <sergey.a.guriev@@intel.com>

	* ia64.h (ia64_opnd): Add new operand types.

opcodes/
2012-09-04  Sergey A. Guriev <sergey.a.guriev@@intel.com>

	* ia64-asmtab.h (completer_index): Extend bitfield to full uint.
	* ia64-gen.c: Promote completer index type to longlong.
	(irf_operand): Add new register recognition.
	(in_iclass_mov_x): Add an entry for the new mov_* instruction type.
	(lookup_specifier): Add new resource recognition.
	(insert_bit_table_ent): Relax abort condition according to the
	changed completer index type.
	(print_dis_table): Fix printf format for completer index.
	* ia64-ic.tbl: Add a new instruction class.
	* ia64-opc-i.c (ia64_opcodes_i): Define new I-instructions.
	* ia64-opc-m.c (ia64_opcodes_m): Define new M-instructions.
	* ia64-opc.h: Define short names for new operand types.
	* ia64-raw.tbl: Add new RAW resource for DAHR register.
	* ia64-waw.tbl: Add new WAW resource for DAHR register.
	* ia64-asmtab.c: Regenerate.
@
text
@a13 1
    run_dump_test "psn"
@


1.43
log
@gas/
2010-02-12  Tristan Gingold  <gingold@@adacore.com>
	    Douglas B Rupp  <rupp@@gnat.com>

	* config/tc-ia64.c (enum reloc_func): Add FUNC_SLOTCOUNT_RELOC.
	(DUMMY_RELOC_IA64_SLOTCOUNT): Added.
	(pseudo_func): Add an entry for slotcount.
	(md_begin): Initialize slotcount pseudo symbol.
	(ia64_parse_name): Handle @@slotcount parameter.
	(ia64_gen_real_reloc_type): Handle slotcount.
	(md_apply_fix): Ditto.
	* doc/c-ia64.texi (IA-64-Relocs): Document @@slotcount.

gas/testsuite/
2010-02-12  Tristan Gingold  <gingold@@adacore.com>

	* gas/ia64/slotcount.s, gas/ia64/slotcount.s: New test.
	* gas/ia64/ia64.exp: Add slotcount test (vms only).
@
text
@d97 3
@


1.42
log
@Patch for PR4587 + move proc run_list_test into gas-defs.exp
@
text
@d92 5
@


1.41
log
@gas/

2006-01-09  H.J. Lu  <hongjiu.lu@@intel.com>

	PR gas/2117
	* symbols.c (snapshot_symbol): Don't change a defined symbol.

gas/testsuite/

2006-01-09  H.J. Lu  <hongjiu.lu@@intel.com>

	PR gas/2117
	* gas/ia64/ia64.exp: Add ltoff22x-2, ltoff22x-3, ltoff22x-4 and
	ltoff22x-5.

	* gas/ia64/ltoff22x-2.d: New file.
	* gas/ia64/ltoff22x-2.s: Likewise.
	* gas/ia64/ltoff22x-3.d: Likewise.
	* gas/ia64/ltoff22x-3.s: Likewise.
	* gas/ia64/ltoff22x-4.d: Likewise.
	* gas/ia64/ltoff22x-4.s: Likewise.
	* gas/ia64/ltoff22x-5.d: Likewise.
	* gas/ia64/ltoff22x-5.s: Likewise.
@
text
@a3 13
proc run_list_test { name opts } {
    global srcdir subdir
    set testname "ia64 $name"
    set file $srcdir/$subdir/$name
    gas_run ${name}.s $opts ">&dump.out"
    if { [regexp_diff "dump.out" "${file}.l"] } then {
	fail $testname
	verbose "output is [file_contents "dump.out"]" 2
	return
    }
    pass $testname
}

@


1.40
log
@include/opcode/
2005-10-24  Jan Beulich  <jbeulich@@novell.com>

	* ia64.h (enum ia64_opnd): Move memory operand out of set of
	indirect operands.

bfd/
2005-10-24  Jan Beulich  <jbeulich@@novell.com>

	* cpu-ia64-opc.c (elf64_ia64_operands): Move memory operand out of
	set of indirect operands.

gas/
2005-10-24  Jan Beulich  <jbeulich@@novell.com>

	* config/tc-ia64.c (enum reg_symbol): Delete IND_MEM.
	(dot_rot): Change type of num_* variables. Check for positive count.
	(ia64_optimize_expr): Re-structure.
	(md_operand): Check for general register.

gas/testsuite/
2005-10-24  Jan Beulich  <jbeulich@@novell.com>

	* gas/ia64/index.[sl]: New.
	* gas/ia64/rotX.[sl]: New.
	* gas/ia64/ia64.exp: Run new tests.

opcodes/
2005-10-24  Jan Beulich  <jbeulich@@novell.com>

	* ia64-asmtab.c: Regenerate.
@
text
@d49 7
@


1.39
log
@gas/
2005-10-12  Jan Beulich  <jbeulich@@novell.com>

	* config/tc-ia64.c (dot_reg_val): Use expression_and_evaluate.
	(dot_pred_rel): Likewise.
	(parse_operand): Likewise.
	(ia64_unrecognized_line): Likewise.
	(md_operand): Likewise.

gas/testsuite/
2005-10-12  Jan Beulich  <jbeulich@@novell.com>

	* gas/ia64/forward.[sd]: New.
	* gas/ia64/ia64.exp: Run new test.
@
text
@d82 1
d89 1
@


1.38
log
@gas/
2005-09-29  Jan Beulich  <jbeulich@@novell.com>

	* config/tc-ia64.c (parse_operands): Always parse first operand of
	alloc.

gas/testsuite/
2005-09-29  Jan Beulich  <jbeulich@@novell.com>

	* gas/ia64/alloc.[sl]: New.
	* gas/ia64/ia64.exp: Run new test.
@
text
@d81 1
@


1.37
log
@gas/
2005-07-01  Jan Beulich  <jbeulich@@novell.com>

	* config/tc-ia64.c (line_separator_chars): Add '{' and '}'.
	(output_spill_psprel, output_spill_psprel_p): Combine.
	(output_spill_sprel, output_spill_sprel_p): Combine.
	(output_spill_reg, output_spill_regp_p): Combine.
	(process_one_record): Handle psp_psprel.
	(parse_predicate_and_operand): New.
	(convert_expr_to_ab_reg): Two new parameters. Return void. Always
	initialize output values. Emit diagnostic case here.
	(convert_expr_to_xy_reg): Likewise. Don't allow r0, f0, and f1.
	(add_unwind_entry): New second parameter. Allow first parameter to
	be NULL. Parse optional tag, emit warning about further support for
	it otherwise being missing. Check end-of-line when requested.
	(dot_fframe): Clear operand when wrong. Allow tag.
	(dot_vframe): Likewise.
	(dot_vframesp): Likewise. Rename parameter, issue warning when psp
	relative.
	(dot_vframepsp): Remove.
	(dot_altrp): Clear operand when wrong. Allow tag.
	(dot_save): Likewise. Let default case also go through
	add_unwind_entry.
	(dot_savemem): Likewise.
	(dot_restore): Don't return when wrong operand. Allow tag.
	(dot_spillreg, dot_spillreg_p): Combine. Simplify by using
	parse_predicate_and_operand and the new arguments to
	convert_expr_to_ab_reg and convert_expr_to_xy_reg. Don't return
	when wrong operand. Allow tag.
	(dot_restorereg, dot_restorereg_p): Likewise.
	(dot_spillmem, dot_spillmem_p): Likewise.
	(dot_saveg): Clear operand when wrong. Perform tighter operand
	checks. Allow tag.
	(dot_savef): Likewise.
	(dot_saveb): Likewise.
	(dot_savegf): Likewise.
	(dot_spill): Remove end-of-line check. 	Combine. Simplify by using
	parse_predicate_and_operand and the new arguments to
	convert_expr_to_ab_reg and convert_expr_to_xy_reg. Don't return
	when wrong operand. Allow tag.
	(popcount): New.
	(dot_label_state): Don't return when wrong operand.
	(dot_copy_state): Likewise.
	(dot_unwabi): Likewise. Check if in prologue.
	(dot_body): Don't call demand_empty_rest_of_line.
	(dot_prologue): Type of mask and grsave is unsigned. Perform tighter
	operand checks.
	(md_pseudo_table): Also use dot_restorereg for .restorereg.p. Also
	use dot_spillreg for .spillreg.p. Also use dot_spillmem for
	.spillpsp.p and .spillsp.p. Also use dot_vframesp for .vframepsp.
	(parse_operand): New second parameter. Don't deal with '}' here
	anymore. Don't advance past end-of-line.
	(parse_operands): Pass second argument to parse_operand.
	(ia64_start_line): Prevent out-of-bounds access through
	input_line_pointer. Deal with '}' here.
	(ia64_unrecognized_line): Don't deal with '}' here.
	(dot_alias): Use ignore_rest_of_line not its deprecated alias
	discard_rest_of_line.

gas/testsuite/
2005-07-01  Jan Beulich  <jbeulich@@novell.com>

	* gas/ia64/group-2.s: Use register as second operand of .prologue.
	* gas/ia64/unwind-err.s: Add check for .vframesp.
	* gas/ia64/unwind-err.l: Adjust.
	* gas/ia64/strange.[sd]: New.
	* gas/ia64/unwind-bad.[sl]: New.
	* gas/ia64/unwind-ok.[sd]: New.
	* gas/ia64/ia64.exp: Run new tests.
@
text
@d79 1
@


1.36
log
@gas/
2005-05-25  Jan Beulich  <jbeulich@@novell.com>

	* config/tc-ia64.c (dot_radix): Rewrite.

gas/testsuite/
2005-05-25  Jan Beulich  <jbeulich@@novell.com>

	* gas/ia64/radix.s: New.
	* gas/ia64/radix.l: New.
	* gas/ia64/ia64.exp: Run new test.
@
text
@d87 2
d90 1
@


1.35
log
@gas/
2005-05-19  Jan Beulich  <jbeulich@@novell.com>

	* config/tc-ia64.c (dot_endp): Don't use global symbol for unwind
	relocations in unwind section.

gas/testsuite/
2005-05-19  Jan Beulich  <jbeulich@@novell.com>

	* gas/ia64/reloc-uw.s: New.
	* gas/ia64/reloc-uw.d: New.
	* gas/ia64/reloc-uw-ilp32.d: New.
	* gas/ia64/ia64.exp: Run new test.
@
text
@d85 1
@


1.34
log
@gas/

2005-05-07  H.J. Lu  <hongjiu.lu@@intel.com>

	PR 940
	* config/tc-ia64.c (start_unwind_section): Properly check
	comdat group with SHF_GROUP.

gas/testsuite/

2005-05-07  H.J. Lu  <hongjiu.lu@@intel.com>

	PR 940
	* gas/ia64/group-2.d: New.
	* gas/ia64/group-2.s: New.

	* gas/ia64/ia64.exp: Add "group-2".
@
text
@d68 1
d74 1
@


1.33
log
@gas/
2005-03-08  Jan Beulich  <jbeulich@@novell.com>

	* config/tc-ia64.c (emit_one_bundle): Track last slot user insn was
	emitted to. Add more precise diagnostics for non-fitting insns based
	on that. Eliminate now superfluous special casing of MLX. Clear out
	slot information when dropping an insn.

gas/testsuite/
2005-03-08  Jan Beulich  <jbeulich@@novell.com>

	* gas/ia64/no-fit.[ls]: New.
	* gas/ia64/ia64.exp: Run new test.
@
text
@d74 1
@


1.33.2.1
log
@gas/
2005-05-18  Jan Beulich  <jbeulich@@novell.com>

	* config/tc-ia64.c (dot_endp): Don't use global symbol for unwind
	relocations in unwind section.

gas/testsuite/
2005-05-18  Jan Beulich  <jbeulich@@novell.com>

	* gas/ia64/reloc-uw.s: New.
	* gas/ia64/reloc-uw.d: New.
	* gas/ia64/reloc-uw-ilp32.d: New.
	* gas/ia64/ia64.exp: Run new test.
@
text
@a67 1
	run_dump_test "reloc-uw-ilp32"
a72 1
	run_dump_test "reloc-uw"
@


1.32
log
@gas/
2005-03-08  Jan Beulich  <jbeulich@@novell.com>

	* config/tc-ia64.c (parse_section_name): Rename to...
	(cross_section): In addition to separating the name from the rest of
	the arguments, also carry out the operation.
	(dot_xdata): Use cross_section.
	(dot_float_cons): Likewise.
	(dot_xstringer): Likewise.
	(dot_xdata_ua): Likewise.
	(dot_float_cons_ua): Likewise. Pass float_cons, not stmt_float_cons.

gas/testsuite/
2005-03-08  Jan Beulich  <jbeulich@@novell.com>

	* gas/ia64/xdata.[sd], gas/ia64/xdata-ilp32.d: New.
	* gas/ia64/ia64.exp: Run new tests.
@
text
@d79 1
@


1.31
log
@gas/

2005-02-17  H.J. Lu  <hongjiu.lu@@intel.com>

	* NEWS: Mention "-mhint.b=[ok|warning|error]".

	* config/tc-ia64.c (md): Add hint_b.
	(emit_one_bundle): Handle md.hint_b for "hint".
	(md_parse_option): Accepted "-mhint.b=[ok|warning|error]".
	(md_show_usage): Add "-mhint.b=[ok|warning|error]".
	(ia64_init): Set md.hint_b to error.
	(md_assemble): Handle md.hint_b for "hint.b".

	* doc/as.texinfo: Add "-mhint.b=[ok|warning|error]".
	* doc/c-ia64.texi: Likewise.

gas/testsuite/

2005-02-17  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/ia64/hint.b-err.l: New file.
	* gas/ia64/hint.b-err.s: Likewise.
	* gas/ia64/hint.b-warn.l: Likewise.
	* gas/ia64/hint.b-warn.s: Likewise.

	* gas/ia64/ia64.exp: Run hint.b-err and hint.b-warn.

	* gas/ia64/opc-b.d: Pass -mhint.b=ok to as.
@
text
@d67 1
d72 1
@


1.30
log
@gas/
2005-02-17  Jan Beulich  <jbeulich@@novell.com>

	* config/tc-ia64.c (ia64_parse_name): Don't advance 'name' when
	parsing inN, locN, outN. Set 'idx' to offset register number starts
	at. Don't handle numbers with leading zeroes or beyond 95. Remove
	pointless cast.

gas/testsuite/
2005-02-17  Jan Beulich  <jbeulich@@novell.com>

	* gas/ia64/nostkreg.[ds]: New.
	* gas/ia64/ia64.exp: Run new test.
@
text
@d82 2
@


1.29
log
@gas/
2005-02-15  Jan Beulich  <jbeulich@@novell.com>

	* config/tc-ia64.c (md_apply_fix3): Call ia64_gen_real_reloc_type
	instead of explicitly dealing with the translation; exclude
	relocations that are already pcrel, however.

gas/testsuite/
2005-02-15  Jan Beulich  <jbeulich@@novell.com>

	* gas/ia64/pcrel.[ds]: New.
	* gas/ia64/ia64.exp: Run new test.
@
text
@d49 2
a50 1
    
@


1.28
log
@gas/
2005-02-15  Jan Beulich  <jbeulich@@novell.com>

	* config/tc-ia64.c: Include limits.h (if available).
	(gr_values[0]): Set path to INT_MAX.
	(dot_reg_val): Don't allow changing value of r0. Limit range of
	general registers at r127.
	(specify_resource): Default resource index is -1. Don't set resource
	index (in case IA64_RS_RSE) without setting the specific flag.
	(note_register_values): Check operand is O_constant before tracking
	input value of moves. Add tracking for dep.z with constant inputs.
	(print_dependency): Resource index of specific resource may be zero.
	(check_dependencies): Likewise.

gas/testsuite/
2005-02-15  Jan Beulich  <jbeulich@@novell.com>

	* gas/ia64/dv-raw-err.l: Expect specific resource for RAW violation on b0.
	* gas/ia64/regval.[ls]: New.
	* gas/ia64/ia64.exp: Run new test.
@
text
@d56 1
@


1.27
log
@gas/
2005-02-15  Jan Beulich  <jbeulich@@novell.com>

	* config/tc-ia64.c (parse_operands): New local variables reg1, reg2,
	reg_class. Check operands and emit diagnostics for illegal use of
	registers.

gas/testsuite/
2005-02-15  Jan Beulich  <jbeulich@@novell.com>

	* gas/ia64/dv-raw-err.s: Don't use r0 or f0 as output operand.
	* gas/ia64/dv-waw-err.s: Likewise.
	* gas/ia64/reg-err.[ls]: New.
	* gas/ia64/ia64.exp: Run new test.
@
text
@d44 1
@


1.26
log
@bfd/
2005-02-15  Jan Beulich  <jbeulich@@novell.com>

	* elfxx-ia64.c (ia64_howto_table): Correct strings for
	R_IA64_DTPMOD64[LM]SB.

gas/
2005-02-15  Jan Beulich  <jbeulich@@novell.com>

	* config/tc-ia64.c (ia64_gen_real_reloc_type): Define and initialize
	new variables type, suffix, and width. Handle
	BFD_RELOC_IA64_DIR(32|64)[LM]SB in FUNC_LT_FPTR_RELATIVE case.
	Handle BFD_RELOC_IA64_DIR64[LM]SB in FUNC_TP_RELATIVE case. Add
	FUNC_DTP_MODULE case. Handle BFD_RELOC_IA64_DIR32[LM]SB in
	FUNC_DTP_RELATIVE case. Return incoming relocation type if
	BFD_RELOC_IA64_IPLT[LM]SB in FUNC_IPLT_RELOC case. Generate warning
	if unable to translate relocation type, using the new variables.

gas/testsuite/
2005-02-15  Jan Beulich  <jbeulich@@novell.com>

	* gas/ia64/reloc.[ds]: New.
	* gas/ia64/reloc-bad.[ls]: New.
	* gas/ia64/ia64.exp: Run new tests.
@
text
@d31 1
@


1.25
log
@gas/
2005-02-13  Jan Beulich  <jbeulich@@novell.com>

	* config/tc-ia64.c (dot_rot): Add comment that name strings should
	be freed when wiping out previous state. Canonicalize names before
	use. Free name string when detecting redefinition.
	(dot_pred_rel): Call generic expression parser to process arguments.
	Handle O_register case for individual predicates and O_subtract for
	ranges.
	(ia64_parse_name): Canonicalize name before looking it up in dynamic
	register hash.
	(ia64_canonicalize_symbol_name): Strip off all trailing # characters.
	Warn if multiple found, issue error if resulting symbol name has zero
	length.
	(dot_alias): Canonicalize name before use.

gas/testsuite/
2005-02-13  Jan Beulich  <jbeulich@@novell.com>

	* gas/ia64/pound.[ls]: New.
	* gas/ia64/ia64.exp: Run new test.
@
text
@d52 3
@


1.24
log
@2005-02-13  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/ia64/ia64.exp: Add "operand-or".

	* gas/ia64/operand-or.d: New file.
	* gas/ia64/operand-or.s: Likewise.
@
text
@d70 1
@


1.23
log
@gas/

2005-02-11  H.J. Lu  <hongjiu.lu@@intel.com>

	* NEWS: Mention "-munwind-check=[warning|error]".

	* config/tc-ia64.c (md): Add unwind_check.
	(unwind_diagnostic): New.
	(in_procedure): Call unwind_diagnostic when a directive isn't
	in procedure.
	(in_prologue): Call unwind_diagnostic when a directive isn't in
	prologue.
	(in_body): Call unwind_diagnostic when a directive isn't in
	body region.
	(dot_endp): Set md.unwind_check to error before calling
	in_procedure and restore it after. When the name is missing or
	couldn't be found, use the one from the last .proc if
	md.unwind_check isn't error. Warn if md.unwind_check is
	warning.
	(md_parse_option): Handle "-munwind-check=[warning|error]".
	(md_show_usage): Add "-munwind-check=[warning|error]".
	(ia64_init): Set md.unwind_check to warning.

	* doc/as.texinfo: Add "-munwind-check=[none|warning|error]".
	* doc/c-ia64.texi: Likewise.

gas/testcase

2005-02-11  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/ia64/ia64.exp: Pass -munwind-check=error for unwind-err
	and proc.
@
text
@d73 1
@


1.22
log
@gas/
2005-02-02  Jan Beulich  <jbeulich@@novell.com>

	* config/tc-ia64.c (dot_pred_rel): Update comment. Handle @@-prefixed
	designators along with quoted ones. Free copy of quoted designator
	when done.

gas/testsuite/
2005-02-02  Jan Beulich  <jbeulich@@novell.com>

	* gas/ia64/pred-rel.s: New.
	* gas/ia64/ia64.exp: Run new test.
@
text
@d70 1
a70 1
    run_list_test "proc" ""
d72 1
a72 1
    run_list_test "unwind-err" ""
@


1.21
log
@gas/
2005-01-31  Jan Beulich  <jbeulich@@novell.com>

	* config/tc-ia64.c (parse_operands): Parse all specified operands,
	immediately discarding (but counting) those exceeding the maximum
	possible amount. Track whether output and input operand counts ever
	matched, and use this to better indicate which of the operands/
	operand types was wrong; specifically don't default to pointing to
	the first operand.

gas/testsuite/
2005-01-31  Jan Beulich  <jbeulich@@novell.com>

	* gas/ia64/operands.[ls]: New.
	* gas/ia64/ia64.exp: Run new test.
@
text
@d40 1
@


1.20
log
@gas/
2005-01-31  Jan Beulich  <jbeulich@@novell.com>

	* config/tc-ia64.c (unwind): Remove proc_end (now an automatic
	variable in dot_endp). Add body and insn. Make prologue,
	prologue_mask, body, and insn bitfields.
	(fixup_unw_records): Remove spurious new-lines from end of diagnostic
	messages.
	(in_procedure, in_prologue, in_body): New.
	(dot_fframe, dot_vframe, dot_vframesp, dot_vframepsp, dot_save,
	dot_restore, dot_restorereg, dot_restorereg_p, dot_handlerdata,
	dot_unwentry, dot_altrp, dot_savemem, dot_saveg, dot_savef, dot_saveb,
	dot_savegf, dot_spill, dot_spillreg, dot_spillmem, dot_spillreg_p,
	dot_spillmem_p, dot_label_state, dot_copy_state, dot_unwabi,
	dot_personality): Use the appropriate one of the above.
	(dot_proc): Clear unwind.proc_start; set to current location only if
	none of the entry points were valid. Check for non-zero-length entry
	point names. Check that entry points aren't defined, yet. Clear
	unwind.prologue, unwind.body, and unwind.insn.
	(dot_body): Call in_procedure. Check that first directive in procedure
	had no insns emitted before. Set unwind.body.
	(dot_prologue): Call in_procedure. Check that not already in prologue.
	Check that first directive in procedure had no insns emitted before.
	Clear unwind.body.
	(dot_endp): Call in_procedure. Declare proc_end. Check for non-zero-
	length entry point names. Check that entry points became defined.
	(md_assemble): Set unwind.insn once unwind.proc_start is defined.

gas/testsuite/
2005-01-31  Jan Beulich  <jbeulich@@novell.com>

	* gas/ia64/proc.[ls]: New.
	* gas/ia64/unwind-err.[ls]: New.
	* gas/ia64/ia64.exp: Run new tests.
@
text
@d30 1
@


1.19
log
@gas/
2005-01-31  Jan Beulich  <jbeulich@@novell.com>

	* config/tc-ia64.c (emit_one_bundle): Snapshot manual bundling state
	before actually using it. Don't generate an error in manual bundling
	mode when looking at an insn requiring slot 2 but not yet at slot 2.
	Don't generate an error in manual bundling mode when looking at an
	insn required to be last in its group but the required slot hasn't
	been reached, yet. Allow conversion from MII to MI;I for bundle
	consisting of only 2 insns with the stop between them. Suppress
	various meaningless errors resulting from detecting earlier ones.

gas/testsuite/
2005-01-31  Jan Beulich  <jbeulich@@novell.com>

	* gas/ia64/bundling.[ds]: New.
	* gas/ia64/label.[ls]: New.
	* gas/ia64/last.[ls]: New.
	* gas/ia64/slot2.[ls]: New.
	* gas/ia64/ia64.exp: Run new tests.
@
text
@d68 1
d70 1
@


1.18
log
@gas/
2005-01-31  Jan Beulich  <jbeulich@@novell.com>

	* config/tc-ia64.c (parse_operands): Also handle alloc without first
	input being ar.pfs.

gas/testsuite/
2005-01-31  Jan Beulich  <jbeulich@@novell.com>

	* gas/ia64/pseudo.[ds]: New.
	* gas/ia64/ia64.exp: Run new test.

opcodes/
2005-01-31  Jan Beulich  <jbeulich@@novell.com>

	* ia64-gen.c (NELEMS): Define.
	(shrink): Generate alias with missing second predicate register when
	opcode has two outputs and these are both predicates.
	* ia64-opc-i.c (FULL17): Define.
	(ia64_opcodes_i): Add mov-to-pr alias without second input. Use FULL17
	here to generate output template.
	(TBITCM, TNATCM): Undefine after use.
	* ia64-opc-m.c (ia64_opcodes_i): Add alloc alias without ar.pfs as
	first input. Add ld16 aliases without ar.csd as second output. Add
	st16 aliases without ar.csd as second input. Add cmpxchg aliases
	without ar.ccv as third input. Add cmp8xchg16 aliases without ar.csd/
	ar.ccv as third/fourth inputs. Consolidate through...
	(CMPXCHG_acq, CMPXCHG_rel, CMPXCHG_1, CMPXCHG_2, CMPXCHG_4, CMPXCHG_8,
	CMPXCHGn, CMP8XCHG16, CMPXCHG_ALL): Define.
	* ia64-asmtab.c: Regenerate.
@
text
@d64 5
@


1.17
log
@gas/
2005-01-27  Jan Beulich  <jbeulich@@novell.com>

	* config/tc-ia64.c (emit_one_bundle): Change "?imbf??" to "?ibmfxx".

gas/testsuite/
2005-01-27  Jan Beulich  <jbeulich@@novell.com>

	* gas/ia64/nop_x.[ds]: New.
	* gas/ia64/ia64.exp: Run new test.
@
text
@d27 1
@


1.16
log
@gas/
2005-01-25  Jan Beulich  <jbeulich@@novell.com>

	* config/tc-ia64.c (emit_one_bundle): Add late resolution of move
	to/from application registers dynamic insns.
	(md_assemble): Defer resolution of move to/from application registers
	dynamic insns when they can be issued on either the I- or M-units.

gas/testsuite/
2005-01-25  Jan Beulich  <jbeulich@@novell.com>

	* gas/ia64/dv-waw-err.l: Don't expect ar112 move warning to refer to
	M-unit.
	* gas/ia64/mov-ar.[ds]: New.
	* gas/ia64/ia64.exp: Run new test.
@
text
@d27 1
@


1.15
log
@2004-07-01  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/ia64/group-1.d: New.
	* gas/ia64/group-1.s: Likewise.

	* gas/ia64/ia64.exp: Add group-1 to test comdat group.
@
text
@d27 1
@


1.14
log
@2004-05-26  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/ia64/ia64.exp: Run invalid-ar.

	* gas/ia64/invalid-ar.l: New file. Test invalid AR access.
	* gas/ia64/invalid-ar.s: Likewise.
@
text
@d59 1
@


1.13
log
@2003-09-25  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/ia64/alias-ilp32.d: New file.
	* gas/ia64/secname-ilp32.d: Likewise.
	* gas/ia64/unwind-ilp32.d: Likewise.

	* gas/ia64/dependency-1.d: Support ILP32.
	* gas/ia64/dv-branch.d: Likewise.
	* gas/ia64/dv-imply.d: Likewise.
	* gas/ia64/dv-mutex.d: Likewise.
	* gas/ia64/dv-safe.d: Likewise.
	* gas/ia64/dv-srlz.d: Likewise.
	* gas/ia64/global.d: Likewise.
	* gas/ia64/ldxmov-1.d: Likewise.
	* gas/ia64/ltoff22x-1.d:Likewise.
	* gas/ia64/opc-a.d: Likewise.
	* gas/ia64/opc-b.d: Likewise.
	* gas/ia64/opc-f.d: Likewise.
	* gas/ia64/opc-i.d: Likewise.
	* gas/ia64/opc-m.d: Likewise.
	* gas/ia64/opc-x.d: Likewise.
	* gas/ia64/order.d: Likewise.
	* gas/ia64/regs.d: Likewise.
	* gas/ia64/tls.d: Likewise.

	* gas/ia64/ia64.exp: Run "secname-ilp32", "unwind-ilp32" and
	"alias-ilp32" for ia64-*-hpux*.
@
text
@d43 2
@


1.12
log
@gas/

2003-05-07  H.J. Lu <hongjiu.lu@@intel.com>

	* config/tc-ia64.c (alias_hash): New.
	(alias_name_hash): New.
	(secalias_hash): New.
	(secalias_name_hash): New.
	(md_pseudo_table): Add "secalias".
	(md_begin): Initialize alias_hash, alias_name_hash,
	secalias_hash and secalias_name_hash.
	(struct alias): New.
	(dot_alias): Implement .alias and .secalias directives.
	(do_alias): New.
	(ia64_adjust_symtab): New.
	(do_secalias): New.
	(ia64_frob_file): New.

	* config/tc-ia64.h (ia64_adjust_symtab): New.
	(tc_adjust_symtab): Defined.
	(ia64_frob_file): New.
	(tc_frob_file): Defined.

gas/testsuite/

2003-05-07  H.J. Lu <hongjiu.lu@@intel.com>

	* gas/ia64/ia64.exp: Add alias.

	* gas/ia64/alias.s: New.
	* gas/ia64/alias.d: Likewise.
@
text
@d49 9
a57 3
    run_dump_test "secname"
    run_dump_test "unwind"
    run_dump_test "alias"
@


1.11
log
@gas/

2003-05-03  H.J. Lu <hjl@@gnu.org>

	* config/obj-elf.c (obj_elf_parse_section_letters): Make it a
	fatal error for unknown section attribute.

	* config/tc-alpha.c (alpha_elf_section_letter): Return -1 for
	unknown section attribute.
	* config/tc-ia64.c (ia64_elf_section_letter): Likewise.
	* config/tc-ppc.c (ppc_section_letter): Likewise.

	* config/tc-ia64.c (ia64_elf_section_letter): Handle 'o'.
	(ia64_elf_section_type): Accept "unwind".

gas/testsuite/

2003-05-03  H.J. Lu <hjl@@gnu.org>

	* gas/ia64/ia64.exp: Add unwind.

	* gas/ia64/unwind.s: New. Test the new section attribute 'o'
	and the new section type "unwind".
	* gas/ia64/unwind.d: Likewise.
@
text
@d51 1
@


1.10
log
@gas/

2003-05-01  H.J. Lu <hjl@@gnu.org>

	* config/tc-ia64.h (tc_canonicalize_section_name): New.

	* config/obj-elf.c (obj_elf_section_name): Call
	tc_canonicalize_section_name if it is defined.

gas/testsuite/

2003-05-01  H.J. Lu <hjl@@gnu.org>

	* gas/ia64/ia64.exp: Add secname.

	* gas/ia64/secname.s: New. Test the trailing '#' in section
	name.
	* gas/ia64/secname.d: Likewise.
@
text
@d50 1
@


1.9
log
@2003-05-01  H.J. Lu <hjl@@gnu.org>

	* gas/ia64/ia64.exp: Add "global".

	* gas/ia64/global.d: New file.
	* gas/ia64/global.s: Likewise.
@
text
@d49 1
@


1.8
log
@gas/

2003-04-30  H.J. Lu <hjl@@gnu.org>

	* config/tc-ia64.c (ia64_number_to_chars): New function pointer.
	(ia64_float_to_chars): Likewise.
	(dot_byteorder): Set target_big_endian, ia64_number_to_chars
	and ia64_float_to_chars by tc_segment_info_data.endian from
	the current segment if byteorder == -1.
	(md_begin): Call dot_byteorder to set target_big_endian.
	(md_atof): Call ia64_float_to_chars to convert floating point.
	(ia64_float_to_chars_bigendian): New function.
	(ia64_float_to_chars_littleendian): Likewise.
	(ia64_elf_section_change_hook): Likewise.

	* config/tc-ia64.h (ia64_number_to_chars): New.
	(md_number_to_chars): Changed to (*ia64_number_to_chars)
	(ia64_elf_section_change_hook): New.
	(md_elf_section_change_hook): Defined.
	(ia64_segment_info_type): New struct.
	(TC_SEGMENT_INFO_TYPE): Defined.

gas/testsuite/

2003-04-30  H.J. Lu <hjl@@gnu.org>

	* gas/ia64/ia64.exp: Add order.

	* gas/ia64/order.s: New file.
	* gas/ia64/order.d: Likewise.
@
text
@d48 1
@


1.7
log
@gas/

2003-04-30  H.J. Lu <hjl@@gnu.org>

	* config/tc-ia64.c (md_section_align): Deleted.

	* config/tc-ia64.h (SUB_SEGMENT_ALIGN): New.
	(md_section_align): New.

gas/testsuite/

2003-04-29  H.J. Lu <hjl@@gnu.org>

	* gas/ia64/ia64.exp: Add align.

	* gas/ia64/align.d: New file.
	* gas/ia64/align.s: Likewise.

	* ia64/dependency-1.d: Remove the padding.

ld/testsuite/

2003-04-29  H.J. Lu <hjl@@gnu.org>

	* ld-ia64/tlsbin.dd: Updated.
	* ld-ia64/tlsbin.rd: Likewise.
	* ld-ia64/tlsbin.sd: Likewise.
	* ld-ia64/tlsbin.td: Likewise.
	* ld-ia64/tlspic.rd: Likewise.
	* ld-ia64/tlspic.sd: Likewise.
	* ld-ia64/tlspic.td: Likewise.
@
text
@d47 1
@


1.6
log
@gas/

2003-04-30  H.J. Lu <hjl@@gnu.org>

	* config/tc-ia64.c (stmt_float_cons): Fix alignment for real10
	and add real16.
	(md_pseudo_table): Add "xreal16", "xreal16.ua", "real16" and
	"real16.ua".
	(md_atof): Add 6 byte padding of zero for real16.

gas/testsuite/

2003-04-29  H.J. Lu <hjl@@gnu.org>

	* gas/ia64/ia64.exp: Add real.

	* gas/ia64/real.s: New file.
	* gas/ia64/real.d: Likewise.
@
text
@d46 1
@


1.5
log
@* ia64-ic.tbl (fr-readers): Add mem-writers-fp.
* ia64-asmtab.c: Regenerate.
* gas/ia64/dependency-1.s: New file: Test read before write dependency.
* gas/ia64/dependency-1.d: New file: Expected assembly results.
* gas/ia64/ia64.exp: Run the new test.
@
text
@d44 2
@


1.4
log
@        * config/ia64.c (enum reloc_func): Add FUNC_LT_RELATIVE_X.
        (ia64_gen_real_reloc_type): Handle it.
        (pseudo_func): Add @@ltoffx.
        (md_begin): Build .<ltoffx>.
        (ia64_force_relocation): True for LTOFF22X and LDXMOV.

        * gas/ia64/ltoff22x-1.[ds]: New.
        * gas/ia64/ia64.exp: Run it.
@
text
@d42 2
@


1.3
log
@include/opcode/
        * ia64.h (enum ia64_opnd): Add IA64_OPND_LDXMOV.
bfd/
        * cpu-ia64-opc.c (elf64_ia64_operands): Add ldxmov entry.
opcodes/
        * ia64-opc-m.c: Add ld8.mov.
        * ia64-asmtab.c: Regenerate.
gas/
        * config/tc-ia64.c (operand_match): Add IA64_OPND_LDXMOV case.
gas/testsuite/
        * gas/ia64/ldxmov-1.[ds]: New.
        * gas/ia64/ldxmov-2.[ls]: New.
        * gas/ia64/ia64.exp: Run them.
@
text
@d41 1
@


1.2
log
@	* elf.c (_bfd_elf_make_section_from_shdr): Set SEC_THREAD_LOCAL
	for symbols from SHF_TLS section.
	(_bfd_elf_print_private_bfd_data): Add PT_TLS.
	(elf_fake_sections): Set SHF_TLS for SEC_THREAD_LOCAL sections.
	(map_sections_to_segments): Build PT_TLS segment if necessary.
	(assign_file_positions_for_segments): Likewise.
	(get_program_header_size): Account for PT_TLS segment.
	(swap_out_syms): Set type of BSF_THREAD_LOCAL symbols and symbols from
	SEC_THREAD_LOCAL sections to STT_TLS.
	* reloc.c: Add 386 and IA-64 TLS relocs.
	* section.c (SEC_THREAD_LOCAL): Define.
	(SEC_CONSTRUCTOR_TEXT, SEC_CONSTRUCTOR_DATA, SEC_CONSTRUCTOR_BSS):
	Remove.
	* elflink.h (elf_link_add_object_symbols): Support .tcommon.
	(size_dynamic_sections): If DF_STATIC_TLS, set DF_FLAGS
	unconditionally.
	(struct elf_final_link_info): Add first_tls_sec.
	(elf_bfd_final_link): Set first_tls_sec.
	Compute elf_hash_table (info)->tls_segment.
	(elf_link_output_extsym): Handle STT_TLS symbols.
	(elf_link_input_bfd): Likewise.
	* syms.c (BSF_THREAD_LOCAL): Define.
	* bfd-in2.h: Rebuilt.
	* libbfd.h: Rebuilt.
	* elf32-i386.c (elf_i386_tls_transition, dtpoff_base, tpoff,
	elf_i386_mkobject, elf_i386_object_p): New functions.
	(elf_howto_table): Add TLS relocs.
	(elf_i386_reloc_type_lookup): Support TLS relocs.
	(elf_i386_info_to_howto_rel): Likewise.
	(struct elf_i386_link_hash_entry): Add tls_type.
	(struct elf_i386_obj_tdata): New.
	(elf_i386_hash_entry, elf_i386_tdata, elf_i386_local_got_tls_type):
	New macros.
	(struct elf_i386_link_hash_table): Add tls_ldm_got.
	(link_hash_newfunc): Clear tls_type.
	(elf_i386_check_relocs): Support TLS relocs.
	(elf_i386_gc_sweep_hook): Likewise.
	(allocate_dynrelocs): Likewise.
	(elf_i386_size_dynamic_sections): Likewise.
	(elf_i386_relocate_section): Likewise.
	(elf_i386_finish_dynamic_symbol): Likewise.
	(bfd_elf32_mkobject, elf_backend_object_p): Define.
	* elfxx-ia64.c (struct elfNN_ia64_dyn_sym_info): Add tprel_offset,
	dtpmod_offset, dtprel_offset, tprel_done, dtpmod_done, dtprel_done,
	want_tprel, want_dtpmod, want_dtprel.
	(elfNN_ia64_tprel_base, elfNN_ia64_dtprel_base): New functions.
	(ia64_howto_table): Add TLS relocs, rename R_IA64_LTOFF_TP22 to
	R_IA64_LTOFF_TPREL22.
	(elf_code_to_howto_index): Add TLS relocs.
	(elfNN_ia64_check_relocs): Support TLS relocs.
	(allocate_global_data_got): Account for TLS .got data.
	(allocate_dynrel_entries): Account for TLS dynamic relocations.
	(elfNN_ia64_install_value): Supprt TLS relocs.
	(set_got_entry): Support TLS relocs.
	(elfNN_ia64_relocate_section): Likewise.

	* config/obj-elf.c (elf_common): Renamed from obj_elf_common.
	(obj_elf_common): Call elf_common.
	(obj_elf_tls_common): New function.
	(elf_pseudo_tab): Support .tls_common.
	(special_sections): Add .tdata and .tbss.
	(obj_elf_change_section): Set SEC_THREAD_LOCAL for SHF_TLS
	sections.
	(obj_elf_parse_section_letters): Support T in section flags (SHF_TLS).
	(obj_elf_parse_section_letters): Include T in error message.
	* config/tc-ppc.c (ppc_section_letter): Likewise.
	* config/tc-alpha.c (alpha_elf_section_letter): Likewise.
	(tc_gen_reloc): Handle SEC_THREAD_LOCAL the same way as
	SEC_MERGE.
	* config/tc-sparc.c (md_apply_fix3): Likewise.
	* config/tc-i386.c (tc_i386_fix_adjustable): Add TLS relocs.
	Define them if not BFD_ASSEMBLER.
	(lex_got): Support @@TLSGD, @@TLSLDM, @@GOTTPOFF, @@TPOFF, @@DTPOFF
	and @@NTPOFF.
	(md_apply_fix3): Add TLS relocs.
	* config/tc-ia64.c (enum reloc_func): Add FUNC_DTP_MODULE,
	FUNC_DTP_RELATIVE, FUNC_TP_RELATIVE, FUNC_LT_DTP_MODULE,
	FUNC_LT_DTP_RELATIVE, FUNC_LT_TP_RELATIVE.
	(pseudo_func): Support @@dtpmod(), @@dtprel() and @@tprel().
	(ia64_elf_section_letter): Include T in error message.
	(md_begin): Support TLS operators.
	(md_operand): Likewise.
	(ia64_gen_real_reloc_type): Support TLS relocs.
	* testsuite/gas/i386/tlspic.s: New file.
	* testsuite/gas/i386/tlsd.s: New file.
	* testsuite/gas/i386/tlsnopic.s: New file.
	* testsuite/gas/i386/tlsd.d: New file.
	* testsuite/gas/i386/tlsnopic.d: New file.
	* testsuite/gas/i386/tlspic.d: New file.
	* testsuite/gas/i386/i386.exp: Add tlsd, tlsnopic and tlspic tests.
	* testsuite/gas/ia64/tls.s: New file.
	* testsuite/gas/ia64/tls.d: New file.
	* testsuite/gas/ia64/ia64.exp: Add tls test.
	* write.c (adjust_reloc_syms): Don't change symbols in
	SEC_THREAD_LOCAL sections to STT_SECTION + addend.

	* elf/common.h (PT_TLS, SHF_TLS, STT_TLS, DF_STATIC_TLS): Define.
	* elf/ia64.h (R_IA64_LTOFF_TPREL22): Renamed from R_IA64_LTOFF_TP22.
	* elf/i386.h: Add TLS relocs.

	* scripttempl/elf.sc: Add .rel{,a}.t{bss,data}, .tdata and .tbss.
	* ldlang.c (lang_add_section): Set SEC_THREAD_LOCAL for
	output section if necessary.  Handle .tbss.
	(lang_size_sections): Clear _raw_size for .tbss section
	(it allocates space in PT_TLS segment only).
	* ldwrite.c (build_link_order): Build link order for .tbss too.

	* readelf.c (get_segment_type): Add PT_TLS.
	(get_elf_section_flags): Add SHF_TLS.
	(get_dynamic_flags): Optimize.  Add DF_STATIC_TLS.
	(process_dynamic_segment): Use puts instead of printf.
	(get_symbol_type): Support STT_TLS.
	* objdump.c (dump_section_header): Remove SEC_CONSTRUCTOR_TEXT,
	SEC_CONSTRUCTOR_DATA, SEC_CONSTRUCTOR_BSS.
	Add SEC_THREAD_LOCAL.
@
text
@d39 2
@


1.1
log
@IA-64 ELF support.
@
text
@d38 1
@

