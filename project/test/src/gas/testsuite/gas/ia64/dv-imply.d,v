head	1.6;
access;
symbols
	binutils-2_24-branch:1.6.0.26
	binutils-2_24-branchpoint:1.6
	binutils-2_21_1:1.6
	binutils-2_23_2:1.6
	binutils-2_23_1:1.6
	binutils-2_23:1.6
	binutils-2_23-branch:1.6.0.24
	binutils-2_23-branchpoint:1.6
	binutils-2_22_branch:1.6.0.22
	binutils-2_22:1.6
	binutils-2_22-branch:1.6.0.20
	binutils-2_22-branchpoint:1.6
	binutils-2_21:1.6
	binutils-2_21-branch:1.6.0.18
	binutils-2_21-branchpoint:1.6
	binutils-2_20_1:1.6
	binutils-2_20:1.6
	binutils-arc-20081103-branch:1.6.0.16
	binutils-arc-20081103-branchpoint:1.6
	binutils-2_20-branch:1.6.0.14
	binutils-2_20-branchpoint:1.6
	dje-cgen-play1-branch:1.6.0.12
	dje-cgen-play1-branchpoint:1.6
	arc-20081103-branch:1.6.0.10
	arc-20081103-branchpoint:1.6
	binutils-2_19_1:1.6
	binutils-2_19:1.6
	binutils-2_19-branch:1.6.0.8
	binutils-2_19-branchpoint:1.6
	binutils-2_18:1.6
	binutils-2_18-branch:1.6.0.6
	binutils-2_18-branchpoint:1.6
	binutils-csl-coldfire-4_1-32:1.6
	binutils-csl-sourcerygxx-4_1-32:1.6
	binutils-csl-innovasic-fido-3_4_4-33:1.6
	binutils-csl-sourcerygxx-3_4_4-32:1.5
	binutils-csl-coldfire-4_1-30:1.6
	binutils-csl-sourcerygxx-4_1-30:1.6
	binutils-csl-coldfire-4_1-28:1.6
	binutils-csl-sourcerygxx-4_1-29:1.6
	binutils-csl-sourcerygxx-4_1-28:1.6
	binutils-csl-arm-2006q3-27:1.6
	binutils-csl-sourcerygxx-4_1-27:1.6
	binutils-csl-arm-2006q3-26:1.6
	binutils-csl-sourcerygxx-4_1-26:1.6
	binutils-csl-sourcerygxx-4_1-25:1.6
	binutils-csl-sourcerygxx-4_1-24:1.6
	binutils-csl-sourcerygxx-4_1-23:1.6
	binutils-csl-sourcerygxx-4_1-21:1.6
	binutils-csl-arm-2006q3-21:1.6
	binutils-csl-sourcerygxx-4_1-22:1.6
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.6
	binutils-csl-sourcerygxx-4_1-20:1.6
	binutils-csl-arm-2006q3-19:1.6
	binutils-csl-sourcerygxx-4_1-19:1.6
	binutils-csl-sourcerygxx-4_1-18:1.6
	binutils-csl-renesas-4_1-9:1.6
	binutils-csl-sourcerygxx-3_4_4-25:1.5
	binutils-csl-renesas-4_1-8:1.6
	binutils-csl-renesas-4_1-7:1.6
	binutils-csl-renesas-4_1-6:1.6
	binutils-csl-sourcerygxx-4_1-17:1.6
	binutils-csl-sourcerygxx-4_1-14:1.6
	binutils-csl-sourcerygxx-4_1-15:1.6
	binutils-csl-sourcerygxx-4_1-13:1.6
	binutils-2_17:1.6
	binutils-csl-sourcerygxx-4_1-12:1.6
	binutils-csl-sourcerygxx-3_4_4-21:1.6
	binutils-csl-wrs-linux-3_4_4-24:1.5
	binutils-csl-wrs-linux-3_4_4-23:1.5
	binutils-csl-sourcerygxx-4_1-9:1.6
	binutils-csl-sourcerygxx-4_1-8:1.6
	binutils-csl-sourcerygxx-4_1-7:1.6
	binutils-csl-arm-2006q1-6:1.6
	binutils-csl-sourcerygxx-4_1-6:1.6
	binutils-csl-wrs-linux-3_4_4-22:1.5
	binutils-csl-coldfire-4_1-11:1.6
	binutils-csl-sourcerygxx-3_4_4-19:1.6
	binutils-csl-coldfire-4_1-10:1.6
	binutils-csl-sourcerygxx-4_1-5:1.6
	binutils-csl-sourcerygxx-4_1-4:1.6
	binutils-csl-wrs-linux-3_4_4-21:1.5
	binutils-csl-morpho-4_1-4:1.6
	binutils-csl-sourcerygxx-3_4_4-17:1.6
	binutils-csl-wrs-linux-3_4_4-20:1.5
	binutils-2_17-branch:1.6.0.4
	binutils-2_17-branchpoint:1.6
	binutils-csl-2_17-branch:1.6.0.2
	binutils-csl-2_17-branchpoint:1.6
	binutils-csl-gxxpro-3_4-branch:1.5.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.5
	binutils-2_16_1:1.5
	binutils-csl-arm-2005q1b:1.5
	binutils-2_16:1.5
	binutils-csl-arm-2005q1a:1.5
	binutils-csl-arm-2005q1-branch:1.5.0.4
	binutils-csl-arm-2005q1-branchpoint:1.5
	binutils-2_16-branch:1.5.0.2
	binutils-2_16-branchpoint:1.5
	csl-arm-2004-q3d:1.5
	csl-arm-2004-q3:1.5
	binutils-2_15:1.4
	binutils-2_15-branchpoint:1.4
	csl-arm-2004-q1a:1.4
	csl-arm-2004-q1:1.4
	binutils-2_15-branch:1.4.0.6
	cagney_bfdfile-20040213-branch:1.4.0.4
	cagney_bfdfile-20040213-branchpoint:1.4
	cagney_bigcore-20040122-branch:1.4.0.2
	cagney_bigcore-20040122-branchpoint:1.4
	csl-arm-2003-q4:1.4
	binutils-2_14:1.3
	binutils-2_14-branch:1.3.0.8
	binutils-2_14-branchpoint:1.3
	binutils-2_13_2_1:1.3
	binutils-2_13_2:1.3
	binutils-2_13_1:1.3
	binutils-2_13:1.3
	binutils-2_13-branchpoint:1.3
	binutils-2_13-branch:1.3.0.6
	binutils-2_12_1:1.3
	binutils-2_12:1.3
	binutils-2_12-branch:1.3.0.4
	binutils-2_12-branchpoint:1.3
	cygnus_cvs_20020108_pre:1.3
	binutils-2_11_2:1.3
	binutils-2_11_1:1.3
	binutils-2_11:1.3
	x86_64versiong3:1.3
	binutils-2_11-branch:1.3.0.2
	binutils_latest_snapshot:1.6;
locks; strict;
comment	@# @;


1.6
date	2005.03.28.22.34.19;	author hjl;	state Exp;
branches;
next	1.5;

1.5
date	2004.06.30.18.14.38;	author wilson;	state Exp;
branches;
next	1.4;

1.4
date	2003.09.26.03.54.09;	author hjl;	state Exp;
branches;
next	1.3;

1.3
date	2000.12.12.22.56.36;	author wilson;	state Exp;
branches;
next	1.2;

1.2
date	2000.09.22.19.43.48;	author wilson;	state Exp;
branches;
next	1.1;

1.1
date	2000.04.21.20.22.22;	author wilson;	state Exp;
branches;
next	;


desc
@@


1.6
log
@gas/

2005-03-28  David Mosberger  <davidm@@hpl.hp.com>
	    H.J. Lu  <hongjiu.lu@@intel.com>

	PR 803
	NEWS: Mention "-mtune=[itanium1|itanium2]".

	* config/tc-ia64.c (md): Add tune.
	(md_parse_option): Accepted "-mtune=[itanium1|itanium2]".
	(md_show_usage): Add "-mtune=[itanium1|itanium2]".
	(extra_goodness): Prefer M- and I-unit NOPs for itanium2. F and
	B unit NOPs are discouraged for McKinley-derived cores.
	(md_begin): Don't hardcode the "extra_goodness()" function in
	the comment...
	(ia64_init): Set md.tune to itanium2.

	* doc/as.texinfo: Add -mtune=[itanium1|itanium2]".
	* doc/c-ia64.texi: Likewise.

gas/testsuite/

2005-03-28  H.J. Lu  <hongjiu.lu@@intel.com>

	PR 803
	* gas/ia64/dv-imply.d: Pass -mtune=itanium1 to as.
	* gas/ia64/dv-mutex.d : Likewise.
	* gas/ia64/dv-safe.d: Likewise.
	* gas/ia64/dv-srlz.d.nop: Likewise.
	* gas/ia64/ldxmov-1.d: Likewise.
	* gas/ia64/opc-b.d: Likewise.
	* gas/ia64/opc-f.d: Likewise.
	* gas/ia64/opc-i.d: Likewise.
	* gas/ia64/opc-m.d: Likewise.
	* gas/ia64/operand-or.d: Likewise.
	* gas/ia64/pcrel.d: Likewise.
	* gas/ia64/pseudo.d: Likewise.
	* gas/ia64/tls.d: Likewise.

ld/testsuite/

2005-03-28  H.J. Lu  <hongjiu.lu@@intel.com>

	PR 803
	* ld-ia64/ia64.exp: Pass -mtune=itanium1 to as.
@
text
@# as: -xexplicit -mtune=itanium1
# objdump: -d
# name ia64 dv-mutex

.*: +file format .*

Disassembly of section \.text:

0+000 <L-0xc0>:
   0:	3c 20 08 00 00 24 	\[MFB\] \(p01\) mov r4=2
   6:	00 00 00 02 00 01 	            nop\.f 0x0
   c:	c0 00 00 40       	      \(p02\) br\.cond\.sptk\.few c0 <L>
  10:	1d 20 1c 00 00 24 	\[MFB\]       mov r4=7
  16:	00 00 00 02 00 00 	            nop\.f 0x0
  1c:	00 00 20 00       	            rfi;;
  20:	1c 20 08 00 00 24 	\[MFB\]       mov r4=2
  26:	00 00 00 02 00 01 	            nop\.f 0x0
  2c:	a0 00 00 40       	      \(p02\) br\.cond\.sptk\.few c0 <L>
  30:	3d 20 1c 00 00 24 	\[MFB\] \(p01\) mov r4=7
  36:	00 00 00 02 00 00 	            nop\.f 0x0
  3c:	00 00 20 00       	            rfi;;
  40:	6a 08 06 04 02 78 	\[MMI\] \(p03\) cmp\.eq\.unc p1,p2=r1,r2;;
  46:	40 10 00 00 48 00 	      \(p01\) mov r4=2
  4c:	00 00 04 00       	            nop\.i 0x0
  50:	1c 00 00 00 01 00 	\[MFB\]       nop\.m 0x0
  56:	00 00 00 02 80 01 	            nop\.f 0x0
  5c:	70 00 00 40       	      \(p03\) br\.cond\.sptk\.few c0 <L>
  60:	1d 20 1c 00 00 24 	\[MFB\]       mov r4=7
  66:	00 00 00 02 00 00 	            nop\.f 0x0
  6c:	00 00 20 00       	            rfi;;
  70:	62 08 06 04 02 38 	\[MII\] \(p03\) cmp\.eq\.unc p1,p2=r1,r2
  76:	30 28 18 88 e8 80 	            cmp\.eq\.or p3,p4=r5,r6;;
  7c:	20 00 00 90       	      \(p01\) mov r4=2
  80:	1c 00 00 00 01 00 	\[MFB\]       nop\.m 0x0
  86:	00 00 00 02 80 01 	            nop\.f 0x0
  8c:	40 00 00 40       	      \(p03\) br\.cond\.sptk\.few c0 <L>
  90:	1d 20 1c 00 00 24 	\[MFB\]       mov r4=7
  96:	00 00 00 02 00 00 	            nop\.f 0x0
  9c:	00 00 20 00       	            rfi;;
  a0:	10 08 16 0c 42 70 	\[MIB\]       cmp\.ne\.and p1,p2=r5,r6
  a6:	40 10 00 00 c8 01 	      \(p01\) mov r4=2
  ac:	20 00 00 40       	      \(p03\) br\.cond\.sptk\.few c0 <L>
  b0:	1d 20 1c 00 00 24 	\[MFB\]       mov r4=7
  b6:	00 00 00 02 00 00 	            nop\.f 0x0
  bc:	00 00 20 00       	            rfi;;
@


1.5
log
@Adjust for "mov rX=imm" changes.
* gas/ia64/dv-imply.d: Update.
* gas/ia64/dv-mutex.d: Likewise.
* gas/ia64/dv-safe.d: Likewise.
@
text
@d1 1
a1 1
# as: -xexplicit
@


1.4
log
@2003-09-25  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/ia64/alias-ilp32.d: New file.
	* gas/ia64/secname-ilp32.d: Likewise.
	* gas/ia64/unwind-ilp32.d: Likewise.

	* gas/ia64/dependency-1.d: Support ILP32.
	* gas/ia64/dv-branch.d: Likewise.
	* gas/ia64/dv-imply.d: Likewise.
	* gas/ia64/dv-mutex.d: Likewise.
	* gas/ia64/dv-safe.d: Likewise.
	* gas/ia64/dv-srlz.d: Likewise.
	* gas/ia64/global.d: Likewise.
	* gas/ia64/ldxmov-1.d: Likewise.
	* gas/ia64/ltoff22x-1.d:Likewise.
	* gas/ia64/opc-a.d: Likewise.
	* gas/ia64/opc-b.d: Likewise.
	* gas/ia64/opc-f.d: Likewise.
	* gas/ia64/opc-i.d: Likewise.
	* gas/ia64/opc-m.d: Likewise.
	* gas/ia64/opc-x.d: Likewise.
	* gas/ia64/order.d: Likewise.
	* gas/ia64/regs.d: Likewise.
	* gas/ia64/tls.d: Likewise.

	* gas/ia64/ia64.exp: Run "secname-ilp32", "unwind-ilp32" and
	"alias-ilp32" for ia64-*-hpux*.
@
text
@d10 1
a10 1
   0:	3c 20 08 00 00 21 	\[MFB\] \(p01\) mov r4=2
d13 1
a13 1
  10:	1d 20 1c 00 00 21 	\[MFB\]       mov r4=7
d16 1
a16 1
  20:	1c 20 08 00 00 21 	\[MFB\]       mov r4=2
d19 1
a19 1
  30:	3d 20 1c 00 00 21 	\[MFB\] \(p01\) mov r4=7
d23 1
a23 1
  46:	40 10 00 00 42 00 	      \(p01\) mov r4=2
d28 1
a28 1
  60:	1d 20 1c 00 00 21 	\[MFB\]       mov r4=7
d33 1
a33 1
  7c:	20 00 00 84       	      \(p01\) mov r4=2
d37 1
a37 1
  90:	1d 20 1c 00 00 21 	\[MFB\]       mov r4=7
d41 1
a41 1
  a6:	40 10 00 00 c2 01 	      \(p01\) mov r4=2
d43 1
a43 1
  b0:	1d 20 1c 00 00 21 	\[MFB\]       mov r4=7
@


1.3
log
@Eliminate ia64 compiler warnings.  Fix ia64 gas testsuite again.
	*  elfxx-ia64.c (get_dyn_sym_info): Cast %p argument to void *.
	* config/tc-ia64.h (ia64_init): Add prototype.
	* gas/ia64/dv-imply.d, gas/ia64/dv-mutex.d, gas/ia64/dv-safe.d,
	gas/ia64/dv-srlz.d, gas/ia64/opc-m.d: Update.
	* ia64-dis.c (print_insn_ia64): Cast away const on ia64_free_opcode
	argument.
	* ia64_gen.c (insert_deplist): Cast sizeof result to int.
	(print_dependency_table): Print NULL if semantics field not set.
	(insert_opcode_dependencies): Mark cmp parameter as unused.
	(print_main_table): Use fprintf_vma to print long long fields.
	(main): Mark argv paramter as unused.  Convert to old style definition.
	* ia64-opc.c (ia64_find_dependency): Cast sizeof result to int.
	* ia64-asmtab.c: Regnerate.
@
text
@d9 1
a9 1
0000000000000000 <L-0xc0>:
@


1.2
log
@Fix ia64 gas testsuite.  Update ia64 DV tables.  Fix ia64 gas testsuite again.
gas/ChangeLog
	* config/tc-ia64.c (dv_sem): Add "stop".
	(specify_resource, case IA64_RS_PR): Only handles regs 1 to 15 now.
	(specify_resource, case IA64_RS_PRr): New for regs 16 to 62.
	(specify_resource, case IA64_RS_PR63): Reorder (note == 7) test to
	match above.
	(mark_resources): Check IA64_RS_PRr.
gas/testsuite/ChangeLog
	* gas/ia64/dv-raw-err.s: Add new testcases for PR%, 16 - 62.
	* gas/ia64/dv-waw-err.s: Likewise.
	* gas/ia64/dv-imply.d: Regenerate.
	* gas/ia64/dv-mutex.d, gas/ia64/dv-raw-err.l, gas/ia64/dv-safe.d,
	gas/ia64/dv-srlz.d, gas/ia64/dv-war-err.l, gas/ia64/dv-waw-err.l,
	gas/ia64/opc-f.d, gas/ia64/opc-i.d, gas/ia64/opc-m.d: Likewise.
include/opcode/ChangeLog
	* ia64.h (enum ia64_dependency_semantics): Add IA64_DVS_STOP.
opcodes/ChangeLog
	* ia64-dis.c (print_insn_ia64): Revert Aug 7 byte skip count change.
	* ia64-gen.c (parse_semantics): Handle IA64_DVS_STOP.
	(lookup_specifier): Handle "PR%, 1 to 15" and "PR%, 16 to 62".
	* ia64-ic.tbl, ia64-raw.tbl, ia64-war.tbl, ia64-waw.tbl: Update.
	* ia64-asmtab.c: Regnerate.
@
text
@d25 3
a27 3
  50:	76 00 1c 00 00 10 	\[BBB\] \(p03\) br\.cond\.sptk\.few c0 <L>
  56:	00 00 00 00 10 00 	            nop\.b 0x0
  5c:	00 00 00 20       	            nop\.b 0x0
d34 3
a36 3
  80:	76 00 10 00 00 10 	\[BBB\] \(p03\) br\.cond\.sptk\.few c0 <L>
  86:	00 00 00 00 10 00 	            nop\.b 0x0
  8c:	00 00 00 20       	            nop\.b 0x0
@


1.1
log
@IA-64 ELF support.
@
text
@d9 6
a14 6
0000000000000000 <L-0xb0>:
   0:	30 20 08 00 00 21 	\[MIB\] \(p01\) mov r4=2
   6:	00 00 00 02 00 01 	            nop\.i 0x0
   c:	b0 00 00 40       	      \(p02\) br\.cond\.sptk\.few b0 <L>
  10:	11 20 1c 00 00 21 	\[MIB\]       mov r4=7
  16:	00 00 00 02 00 00 	            nop\.i 0x0
d16 5
a20 5
  20:	10 20 08 00 00 21 	\[MIB\]       mov r4=2
  26:	00 00 00 02 00 01 	            nop\.i 0x0
  2c:	90 00 00 40       	      \(p02\) br\.cond\.sptk\.few b0 <L>
  30:	31 20 1c 00 00 21 	\[MIB\] \(p01\) mov r4=7
  36:	00 00 00 02 00 00 	            nop\.i 0x0
d22 24
a45 21
  40:	70 08 06 04 02 78 	\[MIB\] \(p03\) cmp\.eq\.unc p1,p2=r1,r2
  46:	40 10 00 00 c2 01 	      \(p01\) mov r4=2
  4c:	70 00 00 40       	      \(p03\) br\.cond\.sptk\.few b0 <L>
  50:	11 20 1c 00 00 21 	\[MIB\]       mov r4=7
  56:	00 00 00 02 00 00 	            nop\.i 0x0
  5c:	00 00 20 00       	            rfi;;
  60:	60 08 06 04 02 38 	\[MII\] \(p03\) cmp\.eq\.unc p1,p2=r1,r2
  66:	30 28 18 88 e8 80 	            cmp\.eq\.or p3,p4=r5,r6
  6c:	20 00 00 84       	      \(p01\) mov r4=2
  70:	10 00 00 00 01 00 	\[MIB\]       nop\.m 0x0
  76:	00 00 00 02 80 01 	            nop\.i 0x0
  7c:	40 00 00 40       	      \(p03\) br\.cond\.sptk\.few b0 <L>
  80:	11 20 1c 00 00 21 	\[MIB\]       mov r4=7
  86:	00 00 00 02 00 00 	            nop\.i 0x0
  8c:	00 00 20 00       	            rfi;;
  90:	10 08 16 0c 42 70 	\[MIB\]       cmp\.ne\.and p1,p2=r5,r6
  96:	40 10 00 00 c2 01 	      \(p01\) mov r4=2
  9c:	20 00 00 40       	      \(p03\) br\.cond\.sptk\.few b0 <L>
  a0:	11 20 1c 00 00 21 	\[MIB\]       mov r4=7
  a6:	00 00 00 02 00 00 	            nop\.i 0x0
  ac:	00 00 20 00       	            rfi;;
@

