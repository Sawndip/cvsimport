head	1.1;
access;
symbols
	binutils-2_24-branch:1.1.0.10
	binutils-2_24-branchpoint:1.1
	binutils-2_21_1:1.1
	binutils-2_23_2:1.1
	binutils-2_23_1:1.1
	binutils-2_23:1.1
	binutils-2_23-branch:1.1.0.8
	binutils-2_23-branchpoint:1.1
	binutils-2_22_branch:1.1.0.6
	binutils-2_22:1.1
	binutils-2_22-branch:1.1.0.4
	binutils-2_22-branchpoint:1.1
	binutils-2_21:1.1
	binutils-2_21-branch:1.1.0.2
	binutils-2_21-branchpoint:1.1
	binutils_latest_snapshot:1.1;
locks; strict;
comment	@# @;


1.1
date	2010.03.25.21.12.29;	author jsm28;	state Exp;
branches;
next	;


desc
@@


1.1
log
@bfd:
	* Makefile.am (ALL_MACHINES): Add cpu-tic6x.lo.
	(ALL_MACHINES_CFILES): Add cpu-tic6x.c.
	(BFD32_BACKENDS): Add elf32-tic6x.lo.
	(BFD32_BACKENDS_CFILES): Add elf32-tic6x.c.
	* Makefile.in: Regenerate.
	* archures.c (bfd_arch_tic6x, bfd_tic6x_arch): New.
	(bfd_archures_list): Update.
	* config.bfd (tic6x-*-elf): New.
	* configure.in (bfd_elf32_tic6x_be_vec, bfd_elf32_tic6x_le_vec):
	New.
	* configure: Regenerate.
	* cpu-tic6x.c, elf32-tic6x.c: New.
	* reloc.c (BFD_RELOC_C6000_PCR_S21, BFD_RELOC_C6000_PCR_S12,
	BFD_RELOC_C6000_PCR_S10, BFD_RELOC_C6000_PCR_S7,
	BFD_RELOC_C6000_ABS_S16, BFD_RELOC_C6000_ABS_L16,
	BFD_RELOC_C6000_ABS_H16, BFD_RELOC_C6000_SBR_U15_B,
	BFD_RELOC_C6000_SBR_U15_H, BFD_RELOC_C6000_SBR_U15_W,
	BFD_RELOC_C6000_SBR_S16, BFD_RELOC_C6000_SBR_L16_B,
	BFD_RELOC_C6000_SBR_L16_H, BFD_RELOC_C6000_SBR_L16_W,
	BFD_RELOC_C6000_SBR_H16_B, BFD_RELOC_C6000_SBR_H16_H,
	BFD_RELOC_C6000_SBR_H16_W, BFD_RELOC_C6000_SBR_GOT_U15_W,
	BFD_RELOC_C6000_SBR_GOT_L16_W, BFD_RELOC_C6000_SBR_GOT_H16_W,
	BFD_RELOC_C6000_DSBT_INDEX, BFD_RELOC_C6000_PREL31,
	BFD_RELOC_C6000_COPY, BFD_RELOC_C6000_ALIGN,
	BFD_RELOC_C6000_FPHEAD, BFD_RELOC_C6000_NOCMP): New.
	* targets.c (bfd_elf32_tic6x_be_vec, bfd_elf32_tic6x_le_vec): New.
	(_bfd_target_vector): Update.
	* bfd-in2.h, libbfd.h: Regenerate.

binutils:
	* MAINTAINERS: Add self as TI C6X maintainer.
	* NEWS: Add news entry for TI C6X support.
	* readelf.c: Include elf/tic6x.h.
	(guess_is_rela): Handle EM_TI_C6000.
	(dump_relocations): Likewise.
	(get_tic6x_dynamic_type): New.
	(get_dynamic_type): Call it.
	(get_machine_flags): Handle EF_C6000_REL.
	(get_osabi_name): Handle machine-specific values only for relevant
	machines.  Handle C6X values.
	(get_tic6x_segment_type): New.
	(get_segment_type): Call it.
	(get_tic6x_section_type_name): New.
	(get_section_type_name): Call it.
	(is_32bit_abs_reloc, is_16bit_abs_reloc, is_none_reloc): Handle
	EM_TI_C6000.

gas:
	* Makefile.am (TARGET_CPU_CFILES): Add config/tc-tic6x.c.
	(TARGET_CPU_HFILES): Add config/tc-tic6x.h.
	* Makefile.in: Regenerate.
	* NEWS: Add news entry for TI C6X support.
	* app.c (do_scrub_chars): Handle "||^" for TI C6X.  Handle
	TC_PREDICATE_START_CHAR and TC_PREDICATE_END_CHAR.  Keep spaces in
	operands if TC_KEEP_OPERAND_SPACES.
	* configure.tgt (tic6x-*-*): New.
	* config/tc-ia64.h (TC_PREDICATE_START_CHAR,
	TC_PREDICATE_END_CHAR): Define.
	* config/tc-tic6x.c, config/tc-tic6x.h: New.
	* doc/Makefile.am (CPU_DOCS): Add c-tic6x.texi.
	* doc/Makefile.in: Regenerate.
	* doc/all.texi (TIC6X): Define.
	* doc/as.texinfo: Add TI C6X documentation.  Include c-tic6x.texi.
	* doc/c-tic6x.texi: New.

gas/testsuite:
	* gas/tic6x: New directory and testcases.

include:
	* dis-asm.h (print_insn_tic6x): Declare.

include/elf:
	* common.h (ELFOSABI_C6000_ELFABI, ELFOSABI_C6000_LINUX): Define.
	* tic6x.h: New.

include/opcode:
	* tic6x-control-registers.h, tic6x-insn-formats.h,
	tic6x-opcode-table.h, tic6x.h: New.

ld:
	* Makefile.am (ALL_EMULATIONS): Add eelf32_tic6x_be.o and
	eelf32_tic6x_le.o.
	(eelf32_tic6x_be.c, eelf32_tic6x_le.c): New.
	* NEWS: Add news entry for TI C6X support.
	* configure.tgt (tic6x-*-*): New.
	* emulparams/elf32_tic6x_be.sh, emulparams/elf32_tic6x_le.sh: New.

ld/testsuite:
	* ld-elf/flags1.d, ld-elf/merge.d: XFAIL for tic6x-*-*.
	* ld-elf/sec-to-seg.exp: Set B_test_same_seg to 0 for tic6x-*-*.
	* ld-tic6x: New directory and testcases.

opcodes:
	* Makefile.am (TARGET_LIBOPCODES_CFILES): Add tic6x-dis.c.
	* Makefile.in: Regenerate.
	* configure.in (bfd_tic6x_arch): New.
	* configure: Regenerate.
	* disassemble.c (ARCH_tic6x): Define if ARCH_all.
	(disassembler): Handle TI C6X.
	* tic6x-dis.c: New.
@
text
@# Test relocation overflow and insufficiently divisible values for
# PC-relative operands.
.text
.nocmp
f7_0:
	nop
	nop
	nop
	nop
	nop
	nop
	nop
f7_28:
	nop
f7_32:
	.space 256
f7_288:
	addkpc .S2 f7_32,b1,0
	addkpc .S2 f7_28,b1,0
	addkpc .S2 f7_32,b1,0
	addkpc .S2 f7_0,b1,0
	addkpc .S2 f7_544,b1,0
	addkpc .S2 f7_540,b1,0
	addkpc .S2 f7_288+1,b1,0
	nop
f7_320:
	.space 220
f7_540:
	nop
f7_544:
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
f10_0:
	nop
	nop
	nop
	nop
	nop
	nop
	nop
f10_28:
	nop
f10_32:
	.space 2048
f10_2080:
	bdec .S1 f10_32,a1
	bdec .S1 f10_28,a1
	bdec .S1 f10_32,a1
	bdec .S1 f10_0,a1
	bdec .S1 f10_4128,a1
	bdec .S1 f10_4124,a1
	bdec .S1 f10_2080+1,a1
	nop
f10_2112:
	.space 2012
f10_4124:
	nop
f10_4128:
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
g10_0:
	nop
	nop
	nop
	nop
	nop
	nop
	nop
g10_28:
	nop
g10_32:
	.space 2048
g10_2080:
	bpos .S1 g10_32,a1
	bpos .S1 g10_28,a1
	bpos .S1 g10_32,a1
	bpos .S1 g10_0,a1
	bpos .S1 g10_4128,a1
	bpos .S1 g10_4124,a1
	bpos .S1 g10_2080+1,a1
	nop
g10_2112:
	.space 2012
g10_4124:
	nop
g10_4128:
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
f12_0:
	nop
	nop
	nop
	nop
	nop
	nop
	nop
f12_28:
	nop
f12_32:
	.space 8192
f12_8224:
	bnop f12_32,2
	bnop f12_28,2
	bnop f12_32,2
	bnop f12_0,2
	bnop f12_16416,2
	bnop f12_16412,2
	bnop f12_8224+1,2
	nop
f12_8256:
	.space 8156
f12_16412:
	nop
f12_16416:
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
g12_0:
	nop
	nop
	nop
	nop
	nop
	nop
	nop
g12_28:
	nop
g12_32:
	.space 8192
g12_8224:
	callnop g12_32,2
	callnop g12_28,2
	callnop g12_32,2
	callnop g12_0,2
	callnop g12_16416,2
	callnop g12_16412,2
	callnop g12_8224+1,2
	nop
g12_8256:
	.space 8156
g12_16412:
	nop
g12_16416:
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
f21_0:
	nop
	nop
	nop
	nop
	nop
	nop
	nop
f21_28:
	nop
f21_32:
	.space 4194304
f21_4194336:
	b .S1 f21_32
	b .S1 f21_28
	b .S1 f21_32
	b .S1 f21_0
	b .S1 f21_8388640
	b .S1 f21_8388636
	b .S1 f21_4194336+1
	nop
f21_4194368:
	.space 4194268
f21_8388636:
	nop
f21_8388640:
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
g21_0:
	nop
	nop
	nop
	nop
	nop
	nop
	nop
g21_28:
	nop
g21_32:
	.space 4194304
g21_4194336:
	call .S1 g21_32
	call .S1 g21_28
	call .S1 g21_32
	call .S1 g21_0
	call .S1 g21_8388640
	call .S1 g21_8388636
	call .S1 g21_4194336+1
	nop
g21_4194368:
	.space 4194268
g21_8388636:
	nop
g21_8388640:
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
h21_0:
	nop
	nop
	nop
	nop
	nop
	nop
	nop
h21_28:
	nop
h21_32:
	.space 4194304
h21_4194336:
	callp .S2 h21_32,b3
	callp .S2 h21_28,b3
	callp .S2 h21_32,b3
	callp .S2 h21_0,b3
	callp .S2 h21_8388640,b3
	callp .S2 h21_8388636,b3
	callp .S2 h21_4194336+1,b3
	nop
h21_4194368:
	.space 4194268
h21_8388636:
	nop
h21_8388640:
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
i21_0:
	nop
	nop
	nop
	nop
	nop
	nop
	nop
i21_28:
	nop
i21_32:
	.space 4194304
i21_4194336:
	callret .S1 i21_32
	callret .S1 i21_28
	callret .S1 i21_32
	callret .S1 i21_0
	callret .S1 i21_8388640
	callret .S1 i21_8388636
	callret .S1 i21_4194336+1
	nop
i21_4194368:
	.space 4194268
i21_8388636:
	nop
i21_8388640:
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
j21_0:
	nop
	nop
	nop
	nop
	nop
	nop
	nop
j21_28:
	nop
j21_32:
	.space 4194304
j21_4194336:
	ret .S1 j21_32
	ret .S1 j21_28
	ret .S1 j21_32
	ret .S1 j21_0
	ret .S1 j21_8388640
	ret .S1 j21_8388636
	ret .S1 j21_4194336+1
	nop
j21_4194368:
	.space 4194268
j21_8388636:
	nop
j21_8388640:
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
k21_0:
	nop
	nop
	nop
	nop
	nop
	nop
	nop
k21_28:
	nop
k21_32:
	.space 4194304
k21_4194336:
	retp .S1 k21_32,a3
	retp .S1 k21_28,a3
	retp .S1 k21_32,a3
	retp .S1 k21_0,a3
	retp .S1 k21_8388640,a3
	retp .S1 k21_8388636,a3
	retp .S1 k21_4194336+1,a3
	nop
k21_4194368:
	.space 4194268
k21_8388636:
	nop
k21_8388640:
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
@
