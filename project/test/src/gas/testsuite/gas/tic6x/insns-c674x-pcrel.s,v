head	1.2;
access;
symbols
	binutils-2_24-branch:1.2.0.2
	binutils-2_24-branchpoint:1.2
	binutils-2_21_1:1.1
	binutils-2_23_2:1.1
	binutils-2_23_1:1.1
	binutils-2_23:1.1
	binutils-2_23-branch:1.1.0.8
	binutils-2_23-branchpoint:1.1
	binutils-2_22_branch:1.1.0.6
	binutils-2_22:1.1
	binutils-2_22-branch:1.1.0.4
	binutils-2_22-branchpoint:1.1
	binutils-2_21:1.1
	binutils-2_21-branch:1.1.0.2
	binutils-2_21-branchpoint:1.1
	binutils_latest_snapshot:1.2;
locks; strict;
comment	@# @;


1.2
date	2013.01.28.15.28.40;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	2010.03.25.21.12.29;	author jsm28;	state Exp;
branches;
next	;


desc
@@


1.2
log
@	PR gas/15069
	* tic6x-opcode-table.h: Fix encoding of BNOP instruction.

	* gas/tic6x/insns-c674x-pcrel.s: Add test of BNOP instruction
	within header based fetch packet.
	* gas/tic6x/insns-c674x-pcrel.d: Update expected disassembly.
@
text
@# Test C674x instructions generating PC-relative relocations.
.text
.nocmp
.globl ext1
.globl ext2
.globl ext3
.globl a1
.globl b1
.globl irp
.globl nrp
f:
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	addkpc .S2 f,b1,3
	[a2] addkpc .S2 f+4,b3,7
	addkpc .S2 g,b4,0
	addkpc .S2 ext1+8,b5,4
g:
	nop
	nop
	nop
	nop
	nop
f2:
	nop
	nop
	b .S2 ext3+4
	b .S1 ext2
	b .S2 (nrp)
	b .S2 (irp)
	b .S1 (a1)
	b .S2 f2
	[b2] b .S2 f2+4
	b .S2 g2
	b .S2 (b1)
g2:
	nop
	nop
	nop
	nop
	nop
f3:
	nop
	nop
	call .S2 ext3+4
	call .S1 ext2
	call .S2 (nrp)
	call .S2 (irp)
	call .S1 (a1)
	call .S2 f3
	[b2] call .S2 f3+4
	call .S2 g3
	call .S2 (b1)
g3:
	nop
	nop
	nop
	nop
	nop
f4:
	nop
	nop
	bdec .S2 ext3+4,b2
	bdec .S1 ext2,a2
	bdec .S2 (nrp),b2
	bdec .S2 (irp),b2
	bdec .S1 (a1),a2
	bdec .S2 f4,b2
	[!a1] bdec .S2 f4+4,b2
	bdec .S2 g4,b2
	bdec .S2 (b1),b2
g4:
	nop
	nop
	nop
	nop
	nop
f5:
	nop
	nop
	bpos .S2 ext3+4,b2
	bpos .S1 ext2,a2
	bpos .S2 (nrp),b2
	bpos .S2 (irp),b2
	bpos .S1 (a1),a2
	bpos .S2 f5,b2
	[!b1] bpos .S2 f5+4,b2
	bpos .S2 g5,b2
	bpos .S2 (b1),b2
g5:
	nop
	nop
	nop
	nop
	nop
f6:
	nop
	nop
	bnop .S2 ext3+4,0
	bnop .S1 ext2,1
	bnop (nrp),2
	bnop .S2 (irp),3
	bnop .S1 (a1),4
	bnop .S2 f6,5
	[!b1] bnop .S2 f6+4,6
	bnop g6,7
	bnop .S2 (b1),0
g6:
	nop
	nop
	nop
	nop
	nop
f7:
	nop
	nop
	callnop .S2 ext3+4,0
	callnop .S1 ext2,1
	callnop (nrp),2
	callnop .S2 (irp),3
	callnop .S1 (a1),4
	callnop .S2 f7,5
	[a0] callnop .S2 f7+4,6
	callnop g7,7
	callnop .S2 (b1),0
g7:
	nop
	nop
	nop
	nop
	nop
f8:
	nop
	nop
	callp .S2 ext3+4,b3
	callp .S1 ext2,a3
	callp .S1 (nrp),a3
	callp .S2 (irp),b3
	callp .S1 (a1),a3
	callp .S2 f8,b3
	callp .S2 f8+4,b3
	callp .S1 g8,a3
	callp .S2 (b1),b3
g8:
	nop
	nop
	nop
	nop
	nop
f9:
	nop
	nop
	callret .S2 ext3+4
	callret .S1 ext2
	callret .S2 (nrp)
	callret .S2 (irp)
	callret .S1 (a1)
	callret .S2 f9
	[b2] callret .S2 f9+4
	callret .S2 g9
	callret .S2 (b1)
g9:
	nop
	nop
	nop
	nop
	nop
f10:
	nop
	nop
	ret .S2 ext3+4
	ret .S1 ext2
	ret .S2 (nrp)
	ret .S2 (irp)
	ret .S1 (a1)
	ret .S2 f10
	[b2] ret .S2 f10+4
	ret .S2 g10
	ret .S2 (b1)
g10:
	nop
	nop
	nop
	nop
	nop
f11:
	nop
	nop
	retp .S2 ext3+4,b3
	retp .S1 ext2,a3
	retp .S1 (nrp),a3
	retp .S2 (irp),b3
	retp .S1 (a1),a3
	retp .S2 f11,b3
	retp .S2 f11+4,b3
	retp .S1 g11,a3
	retp .S2 (b1),b3
g11:
	nop
	nop
	nop
	nop
	nop
g12:
	.word 0x3014a120
	.word 0x2010a120
	.word 0x00000410
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	.word 0x80801021
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
	nop
g13:
	.word 0x3014a120
	.word 0x2010a120
	.word 0x00000410	
	nop
	nop
	nop
	nop
	.word 0xe0000000
	nop
	nop
	nop
	nop
	nop
	nop
	.word 0x80801021
	.word 0xe0000000
@


1.1
log
@bfd:
	* Makefile.am (ALL_MACHINES): Add cpu-tic6x.lo.
	(ALL_MACHINES_CFILES): Add cpu-tic6x.c.
	(BFD32_BACKENDS): Add elf32-tic6x.lo.
	(BFD32_BACKENDS_CFILES): Add elf32-tic6x.c.
	* Makefile.in: Regenerate.
	* archures.c (bfd_arch_tic6x, bfd_tic6x_arch): New.
	(bfd_archures_list): Update.
	* config.bfd (tic6x-*-elf): New.
	* configure.in (bfd_elf32_tic6x_be_vec, bfd_elf32_tic6x_le_vec):
	New.
	* configure: Regenerate.
	* cpu-tic6x.c, elf32-tic6x.c: New.
	* reloc.c (BFD_RELOC_C6000_PCR_S21, BFD_RELOC_C6000_PCR_S12,
	BFD_RELOC_C6000_PCR_S10, BFD_RELOC_C6000_PCR_S7,
	BFD_RELOC_C6000_ABS_S16, BFD_RELOC_C6000_ABS_L16,
	BFD_RELOC_C6000_ABS_H16, BFD_RELOC_C6000_SBR_U15_B,
	BFD_RELOC_C6000_SBR_U15_H, BFD_RELOC_C6000_SBR_U15_W,
	BFD_RELOC_C6000_SBR_S16, BFD_RELOC_C6000_SBR_L16_B,
	BFD_RELOC_C6000_SBR_L16_H, BFD_RELOC_C6000_SBR_L16_W,
	BFD_RELOC_C6000_SBR_H16_B, BFD_RELOC_C6000_SBR_H16_H,
	BFD_RELOC_C6000_SBR_H16_W, BFD_RELOC_C6000_SBR_GOT_U15_W,
	BFD_RELOC_C6000_SBR_GOT_L16_W, BFD_RELOC_C6000_SBR_GOT_H16_W,
	BFD_RELOC_C6000_DSBT_INDEX, BFD_RELOC_C6000_PREL31,
	BFD_RELOC_C6000_COPY, BFD_RELOC_C6000_ALIGN,
	BFD_RELOC_C6000_FPHEAD, BFD_RELOC_C6000_NOCMP): New.
	* targets.c (bfd_elf32_tic6x_be_vec, bfd_elf32_tic6x_le_vec): New.
	(_bfd_target_vector): Update.
	* bfd-in2.h, libbfd.h: Regenerate.

binutils:
	* MAINTAINERS: Add self as TI C6X maintainer.
	* NEWS: Add news entry for TI C6X support.
	* readelf.c: Include elf/tic6x.h.
	(guess_is_rela): Handle EM_TI_C6000.
	(dump_relocations): Likewise.
	(get_tic6x_dynamic_type): New.
	(get_dynamic_type): Call it.
	(get_machine_flags): Handle EF_C6000_REL.
	(get_osabi_name): Handle machine-specific values only for relevant
	machines.  Handle C6X values.
	(get_tic6x_segment_type): New.
	(get_segment_type): Call it.
	(get_tic6x_section_type_name): New.
	(get_section_type_name): Call it.
	(is_32bit_abs_reloc, is_16bit_abs_reloc, is_none_reloc): Handle
	EM_TI_C6000.

gas:
	* Makefile.am (TARGET_CPU_CFILES): Add config/tc-tic6x.c.
	(TARGET_CPU_HFILES): Add config/tc-tic6x.h.
	* Makefile.in: Regenerate.
	* NEWS: Add news entry for TI C6X support.
	* app.c (do_scrub_chars): Handle "||^" for TI C6X.  Handle
	TC_PREDICATE_START_CHAR and TC_PREDICATE_END_CHAR.  Keep spaces in
	operands if TC_KEEP_OPERAND_SPACES.
	* configure.tgt (tic6x-*-*): New.
	* config/tc-ia64.h (TC_PREDICATE_START_CHAR,
	TC_PREDICATE_END_CHAR): Define.
	* config/tc-tic6x.c, config/tc-tic6x.h: New.
	* doc/Makefile.am (CPU_DOCS): Add c-tic6x.texi.
	* doc/Makefile.in: Regenerate.
	* doc/all.texi (TIC6X): Define.
	* doc/as.texinfo: Add TI C6X documentation.  Include c-tic6x.texi.
	* doc/c-tic6x.texi: New.

gas/testsuite:
	* gas/tic6x: New directory and testcases.

include:
	* dis-asm.h (print_insn_tic6x): Declare.

include/elf:
	* common.h (ELFOSABI_C6000_ELFABI, ELFOSABI_C6000_LINUX): Define.
	* tic6x.h: New.

include/opcode:
	* tic6x-control-registers.h, tic6x-insn-formats.h,
	tic6x-opcode-table.h, tic6x.h: New.

ld:
	* Makefile.am (ALL_EMULATIONS): Add eelf32_tic6x_be.o and
	eelf32_tic6x_le.o.
	(eelf32_tic6x_be.c, eelf32_tic6x_le.c): New.
	* NEWS: Add news entry for TI C6X support.
	* configure.tgt (tic6x-*-*): New.
	* emulparams/elf32_tic6x_be.sh, emulparams/elf32_tic6x_le.sh: New.

ld/testsuite:
	* ld-elf/flags1.d, ld-elf/merge.d: XFAIL for tic6x-*-*.
	* ld-elf/sec-to-seg.exp: Set B_test_same_seg to 0 for tic6x-*-*.
	* ld-tic6x: New directory and testcases.

opcodes:
	* Makefile.am (TARGET_LIBOPCODES_CFILES): Add tic6x-dis.c.
	* Makefile.in: Regenerate.
	* configure.in (bfd_tic6x_arch): New.
	* configure: Regenerate.
	* disassemble.c (ARCH_tic6x): Define if ARCH_all.
	(disassembler): Handle TI C6X.
	* tic6x-dis.c: New.
@
text
@d209 42
@

