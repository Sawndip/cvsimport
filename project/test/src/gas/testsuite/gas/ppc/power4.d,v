head	1.10;
access;
symbols
	binutils-2_24-branch:1.10.0.2
	binutils-2_24-branchpoint:1.10
	binutils-2_21_1:1.7
	binutils-2_23_2:1.7.8.2
	binutils-2_23_1:1.7.8.1
	binutils-2_23:1.7.8.1
	binutils-2_23-branch:1.7.0.8
	binutils-2_23-branchpoint:1.7
	binutils-2_22_branch:1.7.0.6
	binutils-2_22:1.7
	binutils-2_22-branch:1.7.0.4
	binutils-2_22-branchpoint:1.7
	binutils-2_21:1.7
	binutils-2_21-branch:1.7.0.2
	binutils-2_21-branchpoint:1.7
	binutils-2_20_1:1.6
	binutils-2_20:1.6
	binutils-arc-20081103-branch:1.6.0.22
	binutils-arc-20081103-branchpoint:1.6
	binutils-2_20-branch:1.6.0.20
	binutils-2_20-branchpoint:1.6
	dje-cgen-play1-branch:1.6.0.18
	dje-cgen-play1-branchpoint:1.6
	arc-20081103-branch:1.6.0.16
	arc-20081103-branchpoint:1.6
	binutils-2_19_1:1.6
	binutils-2_19:1.6
	binutils-2_19-branch:1.6.0.14
	binutils-2_19-branchpoint:1.6
	binutils-2_18:1.6
	binutils-2_18-branch:1.6.0.12
	binutils-2_18-branchpoint:1.6
	binutils-csl-coldfire-4_1-32:1.6
	binutils-csl-sourcerygxx-4_1-32:1.6
	binutils-csl-innovasic-fido-3_4_4-33:1.6
	binutils-csl-sourcerygxx-3_4_4-32:1.6
	binutils-csl-coldfire-4_1-30:1.6
	binutils-csl-sourcerygxx-4_1-30:1.6
	binutils-csl-coldfire-4_1-28:1.6
	binutils-csl-sourcerygxx-4_1-29:1.6
	binutils-csl-sourcerygxx-4_1-28:1.6
	binutils-csl-arm-2006q3-27:1.6
	binutils-csl-sourcerygxx-4_1-27:1.6
	binutils-csl-arm-2006q3-26:1.6
	binutils-csl-sourcerygxx-4_1-26:1.6
	binutils-csl-sourcerygxx-4_1-25:1.6
	binutils-csl-sourcerygxx-4_1-24:1.6
	binutils-csl-sourcerygxx-4_1-23:1.6
	binutils-csl-sourcerygxx-4_1-21:1.6
	binutils-csl-arm-2006q3-21:1.6
	binutils-csl-sourcerygxx-4_1-22:1.6
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.6
	binutils-csl-sourcerygxx-4_1-20:1.6
	binutils-csl-arm-2006q3-19:1.6
	binutils-csl-sourcerygxx-4_1-19:1.6
	binutils-csl-sourcerygxx-4_1-18:1.6
	binutils-csl-renesas-4_1-9:1.6
	binutils-csl-sourcerygxx-3_4_4-25:1.6
	binutils-csl-renesas-4_1-8:1.6
	binutils-csl-renesas-4_1-7:1.6
	binutils-csl-renesas-4_1-6:1.6
	binutils-csl-sourcerygxx-4_1-17:1.6
	binutils-csl-sourcerygxx-4_1-14:1.6
	binutils-csl-sourcerygxx-4_1-15:1.6
	binutils-csl-sourcerygxx-4_1-13:1.6
	binutils-2_17:1.6
	binutils-csl-sourcerygxx-4_1-12:1.6
	binutils-csl-sourcerygxx-3_4_4-21:1.6
	binutils-csl-wrs-linux-3_4_4-24:1.6
	binutils-csl-wrs-linux-3_4_4-23:1.6
	binutils-csl-sourcerygxx-4_1-9:1.6
	binutils-csl-sourcerygxx-4_1-8:1.6
	binutils-csl-sourcerygxx-4_1-7:1.6
	binutils-csl-arm-2006q1-6:1.6
	binutils-csl-sourcerygxx-4_1-6:1.6
	binutils-csl-wrs-linux-3_4_4-22:1.6
	binutils-csl-coldfire-4_1-11:1.6
	binutils-csl-sourcerygxx-3_4_4-19:1.6
	binutils-csl-coldfire-4_1-10:1.6
	binutils-csl-sourcerygxx-4_1-5:1.6
	binutils-csl-sourcerygxx-4_1-4:1.6
	binutils-csl-wrs-linux-3_4_4-21:1.6
	binutils-csl-morpho-4_1-4:1.6
	binutils-csl-sourcerygxx-3_4_4-17:1.6
	binutils-csl-wrs-linux-3_4_4-20:1.6
	binutils-2_17-branch:1.6.0.10
	binutils-2_17-branchpoint:1.6
	binutils-csl-2_17-branch:1.6.0.8
	binutils-csl-2_17-branchpoint:1.6
	binutils-csl-gxxpro-3_4-branch:1.6.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.6
	binutils-2_16_1:1.6
	binutils-csl-arm-2005q1b:1.6
	binutils-2_16:1.6
	binutils-csl-arm-2005q1a:1.6
	binutils-csl-arm-2005q1-branch:1.6.0.4
	binutils-csl-arm-2005q1-branchpoint:1.6
	binutils-2_16-branch:1.6.0.2
	binutils-2_16-branchpoint:1.6
	csl-arm-2004-q3d:1.4
	csl-arm-2004-q3:1.4
	binutils-2_15:1.1.6.1
	binutils-2_15-branchpoint:1.1
	csl-arm-2004-q1a:1.3
	csl-arm-2004-q1:1.2
	binutils-2_15-branch:1.1.0.6
	cagney_bfdfile-20040213-branch:1.1.0.4
	cagney_bfdfile-20040213-branchpoint:1.1
	cagney_bigcore-20040122-branch:1.1.0.2
	cagney_bigcore-20040122-branchpoint:1.1
	csl-arm-2003-q4:1.1
	binutils_latest_snapshot:1.10;
locks; strict;
comment	@# @;


1.10
date	2012.10.29.09.25.15;	author amodra;	state Exp;
branches;
next	1.9;

1.9
date	2012.10.26.03.39.32;	author amodra;	state Exp;
branches;
next	1.8;

1.8
date	2012.08.15.21.25.21;	author bergner;	state Exp;
branches;
next	1.7;

1.7
date	2010.08.02.08.22.53;	author amodra;	state Exp;
branches
	1.7.8.1;
next	1.6;

1.6
date	2005.03.02.13.25.01;	author amodra;	state Exp;
branches;
next	1.5;

1.5
date	2004.12.11.04.32.36;	author amodra;	state Exp;
branches;
next	1.4;

1.4
date	2004.06.28.14.08.08;	author amodra;	state Exp;
branches;
next	1.3;

1.3
date	2004.04.30.06.46.53;	author bje;	state Exp;
branches;
next	1.2;

1.2
date	2004.03.16.00.58.42;	author amodra;	state Exp;
branches;
next	1.1;

1.1
date	2003.07.04.13.35.35;	author amodra;	state Exp;
branches
	1.1.6.1;
next	;

1.7.8.1
date	2012.08.29.02.59.04;	author bergner;	state Exp;
branches;
next	1.7.8.2;

1.7.8.2
date	2013.01.21.13.48.46;	author amodra;	state Exp;
branches;
next	;

1.1.6.1
date	2004.03.16.00.59.35;	author amodra;	state Exp;
branches;
next	;


desc
@@


1.10
log
@	* gas/cfi/cfi.exp: Remove redundant ppc test.  Exclude
	powerpc-pe targets from cfi-common-6 test.
	* gas/cfi/cfi-ppc-1.d: Use objdump to handle pe.
	* gas/cfi/cfi-ppc-1.s: Don't use .type and .size.
	* gas/ppc/ppc.exp: Exclude various tests for powerpc-pe.  Exclude
	vle tests for le targets.
	* gas/ppc/476.d, * gas/ppc/476.s: Update for le output.  Use .text
	rather than section directive with quotes.
	* gas/ppc/a2.d,	* gas/ppc/a2.s: Likewise.
	* gas/ppc/altivec.d, * gas/ppc/altivec.s: Likewise.
	* gas/ppc/altivec2.d: Likewise.
	* gas/ppc/altivec_and_spe.d: Likewise.
	* gas/ppc/astest.d: Likewise.
	* gas/ppc/astest2.d: Likewise.
	* gas/ppc/astest2_64.d: Likewise.
	* gas/ppc/astest64.d: Likewise.
	* gas/ppc/booke.d, * gas/ppc/booke.s: Likewise.
	* gas/ppc/cell.d, * gas/ppc/cell.s: Likewise.
	* gas/ppc/common.d, * gas/ppc/common.s: Likewise.
	* gas/ppc/e500.d, * gas/ppc/e500.s: Likewise.
	* gas/ppc/e500mc.d, * gas/ppc/e500mc.s: Likewise.
	* gas/ppc/e500mc64_nop.d, * gas/ppc/e500mc64_nop.s: Likewise.
	* gas/ppc/e5500_nop.d, * gas/ppc/e5500_nop.s: Likewise.
	* gas/ppc/e6500.d, * gas/ppc/e6500.s: Likewise.
	* gas/ppc/e6500_nop.d, * gas/ppc/e6500_nop.s: Likewise.
	* gas/ppc/machine.d: Likewise.
	* gas/ppc/power4.d, * gas/ppc/power4.s: Likewise.
	* gas/ppc/power4_32.d, * gas/ppc/power4_32.s: Likewise.
	* gas/ppc/power6.d, * gas/ppc/power6.s: Likewise.
	* gas/ppc/power7.d, * gas/ppc/power7.s: Likewise.
	* gas/ppc/ppc750ps.d, * gas/ppc/ppc750ps.s: Likewise.
	* gas/ppc/regnames.d: Likewise.
	* gas/ppc/simpshft.d: Likewise.
	* gas/ppc/test1elf32.d: Likewise.
	* gas/ppc/test1elf64.d: Likewise.
	* gas/ppc/titan.d, * gas/ppc/titan.s: Likewise.
	* gas/ppc/vle-reloc.s: Likewise.
	* gas/ppc/vle-simple-1.s: Likewise.
	* gas/ppc/vle-simple-2.s: Likewise.
	* gas/ppc/vle-simple-3.s: Likewise.
	* gas/ppc/vle-simple-4.s: Likewise.
	* gas/ppc/vle-simple-5.s: Likewise.
	* gas/ppc/vle-simple-6.s: Likewise.
	* gas/ppc/vle.s: Likewise.
	* gas/ppc/vsx.d, * gas/ppc/vsx.s: Likewise.
@
text
@#objdump: -drx -Mpower4
#as: -mpower4
#name: Power4 instructions

.*
.*
architecture: powerpc:common64, flags 0x0+11:
HAS_RELOC, HAS_SYMS
start address 0x0+

Sections:
Idx Name +Size +VMA +LMA +File off +Algn
 +0 \.text +0+c8 +0+ +0+ +.*
 +CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 +1 \.data +0+20 +0+ +0+ +.*
 +CONTENTS, ALLOC, LOAD, DATA
 +2 \.bss +0+ +0+ +0+ +.*
 +ALLOC
 +3 \.toc +0+20 +0+ +0+ +.*
 +CONTENTS, ALLOC, LOAD, RELOC, DATA
SYMBOL TABLE:
0+ l +d +\.text	0+ (|\.text)
0+ l +d +\.data	0+ (|\.data)
0+ l +d +\.bss	0+ (|\.bss)
0+ l +\.data	0+ dsym0
0+10 l +\.data	0+ dsym1
0+ l +d +\.toc	0+ (|\.toc)
0+10 l +\.data	0+ usym0
0+20 l +\.data	0+ usym1
0+ +\*UND\*	0+ esym0
0+ +\*UND\*	0+ esym1


Disassembly of section \.text:

0+ <\.text>:
.*:	(e0 83 00 00|00 00 83 e0) 	lq      r4,0\(r3\)
.*: R_PPC64_ADDR16_LO_DS	\.data
.*:	(e0 83 00 .0|.0 00 83 e0) 	lq      r4,.*\(r3\)
.*: R_PPC64_ADDR16_LO_DS	\.data\+0x10
.*:	(e0 83 00 .0|.0 00 83 e0) 	lq      r4,.*\(r3\)
.*: R_PPC64_ADDR16_LO_DS	\.data\+0x10
.*:	(e0 83 00 .0|.0 00 83 e0) 	lq      r4,.*\(r3\)
.*: R_PPC64_ADDR16_LO_DS	\.data\+0x20
.*:	(e0 83 00 00|00 00 83 e0) 	lq      r4,0\(r3\)
.*: R_PPC64_ADDR16_LO_DS	esym0
.*:	(e0 83 00 00|00 00 83 e0) 	lq      r4,0\(r3\)
.*: R_PPC64_ADDR16_LO_DS	esym1
.*:	(e0 82 00 00|00 00 82 e0) 	lq      r4,0\(r2\)
.*: R_PPC64_TOC16_DS	\.toc
.*:	(e0 82 00 .0|.0 00 82 e0) 	lq      r4,.*\(r2\)
.*: R_PPC64_TOC16_DS	\.toc\+0x10
.*:	(e0 80 00 00|00 00 80 e0) 	lq      r4,0\(0\)
.*: R_PPC64_ADDR16_LO_DS	\.text
.*:	(e0 c3 00 00|00 00 c3 e0) 	lq      r6,0\(r3\)
.*: R_PPC64_GOT16_DS	dsym0
.*:	(e0 c3 00 00|00 00 c3 e0) 	lq      r6,0\(r3\)
.*: R_PPC64_GOT16_LO_DS	dsym0
.*:	(e0 c3 00 00|00 00 c3 e0) 	lq      r6,0\(r3\)
.*: R_PPC64_PLT16_LO_DS	\.data
.*:	(e0 c3 00 .0|.0 00 c3 e0) 	lq      r6,.*\(r3\)
.*: R_PPC64_SECTOFF_DS	\.data\+0x10
.*:	(e0 c3 00 .0|.0 00 c3 e0) 	lq      r6,.*\(r3\)
.*: R_PPC64_SECTOFF_LO_DS	\.data\+0x10
.*:	(e0 c4 00 20|20 00 c4 e0) 	lq      r6,32\(r4\)
.*:	(f8 c7 00 02|02 00 c7 f8) 	stq     r6,0\(r7\)
.*:	(f8 c7 00 12|12 00 c7 f8) 	stq     r6,16\(r7\)
.*:	(f8 c7 ff f2|f2 ff c7 f8) 	stq     r6,-16\(r7\)
.*:	(f8 c7 80 02|02 80 c7 f8) 	stq     r6,-32768\(r7\)
.*:	(f8 c7 7f f2|f2 7f c7 f8) 	stq     r6,32752\(r7\)
.*:	(00 00 02 00|00 02 00 00) 	attn
.*:	(7c 6f f1 20|20 f1 6f 7c) 	mtcr    r3
.*:	(7c 6f f1 20|20 f1 6f 7c) 	mtcr    r3
.*:	(7c 68 11 20|20 11 68 7c) 	mtcrf   129,r3
.*:	(7c 70 11 20|20 11 70 7c) 	mtocrf  1,r3
.*:	(7c 70 21 20|20 21 70 7c) 	mtocrf  2,r3
.*:	(7c 70 41 20|20 41 70 7c) 	mtocrf  4,r3
.*:	(7c 70 81 20|20 81 70 7c) 	mtocrf  8,r3
.*:	(7c 71 01 20|20 01 71 7c) 	mtocrf  16,r3
.*:	(7c 72 01 20|20 01 72 7c) 	mtocrf  32,r3
.*:	(7c 74 01 20|20 01 74 7c) 	mtocrf  64,r3
.*:	(7c 78 01 20|20 01 78 7c) 	mtocrf  128,r3
.*:	(7c 60 00 26|26 00 60 7c) 	mfcr    r3
.*:	(7c 70 10 26|26 10 70 7c) 	mfocrf  r3,1
.*:	(7c 70 20 26|26 20 70 7c) 	mfocrf  r3,2
.*:	(7c 70 40 26|26 40 70 7c) 	mfocrf  r3,4
.*:	(7c 70 80 26|26 80 70 7c) 	mfocrf  r3,8
.*:	(7c 71 00 26|26 00 71 7c) 	mfocrf  r3,16
.*:	(7c 72 00 26|26 00 72 7c) 	mfocrf  r3,32
.*:	(7c 74 00 26|26 00 74 7c) 	mfocrf  r3,64
.*:	(7c 78 00 26|26 00 78 7c) 	mfocrf  r3,128
.*:	(7c 01 17 ec|ec 17 01 7c) 	dcbz    r1,r2
.*:	(7c 23 27 ec|ec 27 23 7c) 	dcbzl   r3,r4
.*:	(7c 05 37 ec|ec 37 05 7c) 	dcbz    r5,r6
.*:	(e0 40 00 10|10 00 40 e0) 	lq      r2,16\(0\)
.*:	(e0 05 00 10|10 00 05 e0) 	lq      r0,16\(r5\)
.*:	(e0 45 00 10|10 00 45 e0) 	lq      r2,16\(r5\)
.*:	(f8 40 00 12|12 00 40 f8) 	stq     r2,16\(0\)
.*:	(f8 05 00 12|12 00 05 f8) 	stq     r0,16\(r5\)
.*:	(f8 45 00 12|12 00 45 f8) 	stq     r2,16\(r5\)
@


1.9
log
@	* gas/ppc/power4.s: Fix invalid lq offsets.
	* gas/ppc/power4.d: Update.
@
text
@d5 1
a5 1
.*: +file format elf64-powerpc
d37 1
a37 1
.*:	e0 83 00 00 	lq      r4,0\(r3\)
d39 1
a39 1
.*:	e0 83 00 10 	lq      r4,16\(r3\)
d41 1
a41 1
.*:	e0 83 00 10 	lq      r4,16\(r3\)
d43 1
a43 1
.*:	e0 83 00 20 	lq      r4,32\(r3\)
d45 1
a45 1
.*:	e0 83 00 00 	lq      r4,0\(r3\)
d47 1
a47 1
.*:	e0 83 00 00 	lq      r4,0\(r3\)
d49 1
a49 1
.*:	e0 82 00 00 	lq      r4,0\(r2\)
d51 1
a51 1
.*:	e0 82 00 10 	lq      r4,16\(r2\)
d53 1
a53 1
.*:	e0 80 00 00 	lq      r4,0\(0\)
d55 1
a55 1
.*:	e0 c3 00 00 	lq      r6,0\(r3\)
d57 1
a57 1
.*:	e0 c3 00 00 	lq      r6,0\(r3\)
d59 1
a59 1
.*:	e0 c3 00 00 	lq      r6,0\(r3\)
d61 1
a61 1
.*:	e0 c3 00 10 	lq      r6,16\(r3\)
d63 1
a63 1
.*:	e0 c3 00 10 	lq      r6,16\(r3\)
d65 36
a100 36
.*:	e0 c4 00 20 	lq      r6,32\(r4\)
.*:	f8 c7 00 02 	stq     r6,0\(r7\)
.*:	f8 c7 00 12 	stq     r6,16\(r7\)
.*:	f8 c7 ff f2 	stq     r6,-16\(r7\)
.*:	f8 c7 80 02 	stq     r6,-32768\(r7\)
.*:	f8 c7 7f f2 	stq     r6,32752\(r7\)
.*:	00 00 02 00 	attn
.*:	7c 6f f1 20 	mtcr    r3
.*:	7c 6f f1 20 	mtcr    r3
.*:	7c 68 11 20 	mtcrf   129,r3
.*:	7c 70 11 20 	mtocrf  1,r3
.*:	7c 70 21 20 	mtocrf  2,r3
.*:	7c 70 41 20 	mtocrf  4,r3
.*:	7c 70 81 20 	mtocrf  8,r3
.*:	7c 71 01 20 	mtocrf  16,r3
.*:	7c 72 01 20 	mtocrf  32,r3
.*:	7c 74 01 20 	mtocrf  64,r3
.*:	7c 78 01 20 	mtocrf  128,r3
.*:	7c 60 00 26 	mfcr    r3
.*:	7c 70 10 26 	mfocrf  r3,1
.*:	7c 70 20 26 	mfocrf  r3,2
.*:	7c 70 40 26 	mfocrf  r3,4
.*:	7c 70 80 26 	mfocrf  r3,8
.*:	7c 71 00 26 	mfocrf  r3,16
.*:	7c 72 00 26 	mfocrf  r3,32
.*:	7c 74 00 26 	mfocrf  r3,64
.*:	7c 78 00 26 	mfocrf  r3,128
.*:	7c 01 17 ec 	dcbz    r1,r2
.*:	7c 23 27 ec 	dcbzl   r3,r4
.*:	7c 05 37 ec 	dcbz    r5,r6
.*:	e0 40 00 10 	lq      r2,16\(0\)
.*:	e0 05 00 10 	lq      r0,16\(r5\)
.*:	e0 45 00 10 	lq      r2,16\(r5\)
.*:	f8 40 00 12 	stq     r2,16\(0\)
.*:	f8 05 00 12 	stq     r0,16\(r5\)
.*:	f8 45 00 12 	stq     r2,16\(r5\)
@


1.8
log
@opcodes/
	* ppc-opc.c <RSQ, RTQ>: Use PPC_OPERAND_GPR.

gas/testsuite/
	* gas/ppc/power4.s <lq, stq>: Add more tests.
	* gas/ppc/power4.d: Likewise.
@
text
@d13 1
a13 1
 +0 \.text +0+dc +0+ +0+ +.*
d15 1
a15 1
 +1 \.data +0+10 +0+ +0+ +.*
d19 1
a19 1
 +3 \.toc +0+30 +0+ +0+ +.*
d26 1
a26 1
0+8 l +\.data	0+ dsym1
d28 2
a29 2
0+8 l +\.data	0+ usym0
0+10 l +\.data	0+ usym1
d37 64
a100 74
 +0:	e0 83 00 00 	lq      r4,0\(r3\)
			2: R_PPC64_ADDR16_LO_DS	\.data
 +4:	e0 83 00 00 	lq      r4,0\(r3\)
			6: R_PPC64_ADDR16_LO_DS	\.data\+0x8
 +8:	e0 83 00 00 	lq      r4,0\(r3\)
			a: R_PPC64_ADDR16_LO_DS	\.data\+0x8
 +c:	e0 83 00 10 	lq      r4,16\(r3\)
			e: R_PPC64_ADDR16_LO_DS	\.data\+0x10
 +10:	e0 83 00 00 	lq      r4,0\(r3\)
			12: R_PPC64_ADDR16_LO_DS	esym0
 +14:	e0 83 00 00 	lq      r4,0\(r3\)
			16: R_PPC64_ADDR16_LO_DS	esym1
 +18:	e0 82 00 00 	lq      r4,0\(r2\)
			1a: R_PPC64_TOC16_DS	\.toc
 +1c:	e0 82 00 00 	lq      r4,0\(r2\)
			1e: R_PPC64_TOC16_DS	\.toc\+0x8
 +20:	e0 82 00 10 	lq      r4,16\(r2\)
			22: R_PPC64_TOC16_DS	\.toc\+0x10
 +24:	e0 82 00 10 	lq      r4,16\(r2\)
			26: R_PPC64_TOC16_DS	\.toc\+0x18
 +28:	e0 82 00 20 	lq      r4,32\(r2\)
			2a: R_PPC64_TOC16_DS	\.toc\+0x20
 +2c:	e0 82 00 20 	lq      r4,32\(r2\)
			2e: R_PPC64_TOC16_DS	\.toc\+0x28
 +30:	e0 c2 00 20 	lq      r6,32\(r2\)
			32: R_PPC64_TOC16_LO_DS	\.toc\+0x28
 +34:	e0 80 00 00 	lq      r4,0\(0\)
			36: R_PPC64_ADDR16_LO_DS	\.text
 +38:	e0 c3 00 00 	lq      r6,0\(r3\)
			3a: R_PPC64_GOT16_DS	dsym0
 +3c:	e0 c3 00 00 	lq      r6,0\(r3\)
			3e: R_PPC64_GOT16_LO_DS	dsym0
 +40:	e0 c3 00 00 	lq      r6,0\(r3\)
			42: R_PPC64_PLT16_LO_DS	\.data
 +44:	e0 c3 00 00 	lq      r6,0\(r3\)
			46: R_PPC64_SECTOFF_DS	\.data\+0x8
 +48:	e0 c3 00 00 	lq      r6,0\(r3\)
			4a: R_PPC64_SECTOFF_LO_DS	\.data\+0x8
 +4c:	e0 c4 00 10 	lq      r6,16\(r4\)
 +50:	f8 c7 00 02 	stq     r6,0\(r7\)
 +54:	f8 c7 00 12 	stq     r6,16\(r7\)
 +58:	f8 c7 ff f2 	stq     r6,-16\(r7\)
 +5c:	f8 c7 80 02 	stq     r6,-32768\(r7\)
 +60:	f8 c7 7f f2 	stq     r6,32752\(r7\)
 +64:	00 00 02 00 	attn
 +68:	7c 6f f1 20 	mtcr    r3
 +6c:	7c 6f f1 20 	mtcr    r3
 +70:	7c 68 11 20 	mtcrf   129,r3
 +74:	7c 70 11 20 	mtocrf  1,r3
 +78:	7c 70 21 20 	mtocrf  2,r3
 +7c:	7c 70 41 20 	mtocrf  4,r3
 +80:	7c 70 81 20 	mtocrf  8,r3
 +84:	7c 71 01 20 	mtocrf  16,r3
 +88:	7c 72 01 20 	mtocrf  32,r3
 +8c:	7c 74 01 20 	mtocrf  64,r3
 +90:	7c 78 01 20 	mtocrf  128,r3
 +94:	7c 60 00 26 	mfcr    r3
 +98:	7c 70 10 26 	mfocrf  r3,1
 +9c:	7c 70 20 26 	mfocrf  r3,2
 +a0:	7c 70 40 26 	mfocrf  r3,4
 +a4:	7c 70 80 26 	mfocrf  r3,8
 +a8:	7c 71 00 26 	mfocrf  r3,16
 +ac:	7c 72 00 26 	mfocrf  r3,32
 +b0:	7c 74 00 26 	mfocrf  r3,64
 +b4:	7c 78 00 26 	mfocrf  r3,128
 +b8:	7c 01 17 ec 	dcbz    r1,r2
 +bc:	7c 23 27 ec 	dcbzl   r3,r4
 +c0:	7c 05 37 ec 	dcbz    r5,r6
 +c4:	e0 40 00 10 	lq      r2,16\(0\)
 +c8:	e0 05 00 10 	lq      r0,16\(r5\)
 +cc:	e0 45 00 10 	lq      r2,16\(r5\)
 +d0:	f8 40 00 12 	stq     r2,16\(0\)
 +d4:	f8 05 00 12 	stq     r0,16\(r5\)
 +d8:	f8 45 00 12 	stq     r2,16\(r5\)
@


1.7
log
@Update for ppc_fix_adjustable change.
@
text
@d13 1
a13 1
 +0 \.text +0+c4 +0+ +0+ +.*
d105 6
@


1.7.8.1
log
@opcodes/
	Backport from mainline
	2012-08-15  Peter Bergner  <bergner@@vnet.ibm.com>
	* ppc-opc.c <xnop, yield, mdoio, mdoom>: New extended mnemonics.

	2012-08-15  Peter Bergner  <bergner@@vnet.ibm.com>
	* ppc-opc.c <RSQ, RTQ>: Use PPC_OPERAND_GPR.

	2012-08-16  Peter Bergner  <bergner@@vnet.ibm.com>
	* ppc-opc.c (powerpc_opcodes) <"lswx">: Use RAX for the second and
	RBX for the third operand.
	<"lswi">: Use RAX for second and NBI for the third operand.

	2012-08-20  Edmar Wienskoski  <edmar@@freescale.com>
	* ppc-opc.c (powerpc_opcodes): Changed opcode for vabsdub,
	vabsduh, vabsduw, mviwsplt.

	2012-08-28  Peter Bergner  <bergner@@vnet.ibm.com>
	* ppc-opc.c (UIMM4, UIMM3, UIMM2, VXVA_MASK, VXVB_MASK, VXVAVB_MASK,
	VXVDVA_MASK, VXUIMM4_MASK, VXUIMM3_MASK, VXUIMM2_MASK): New defines.
	(powerpc_opcodes) <vexptefp, vlogefp, vrefp, vrfim, vrfin, vrfip,
	vrfiz, vrsqrtefp, vupkhpx, vupkhsb, vupkhsh, vupklpx, vupklsb,
	vupklsh>: Use VXVA_MASK.
	<vspltisb, vspltish, vspltisw>: Use VXVB_MASK.
	<mfvscr>: Use VXVAVB_MASK.
	<mtvscr>: Use VXVDVA_MASK.
	<vspltb>: Use VXUIMM4_MASK.
	<vsplth>: Use VXUIMM3_MASK.
	<vspltw>: Use VXUIMM2_MASK.

gas/testsuite/
	Backport from mainline
	2012-08-15  Peter Bergner  <bergner@@vnet.ibm.com>

	* gas/ppc/common.d ("nop", "xnop"): Add tests.
	* gas/ppc/common.s: Likewise.
	* gas/ppc/power7.d ("yield", "mdoio", "mdoom"): Add tests.
	* gas/ppc/power7.s: Likewise.

	2012-08-15  Peter Bergner  <bergner@@vnet.ibm.com>

	* gas/ppc/power4.s <lq, stq>: Add more tests.
	* gas/ppc/power4.d: Likewise.

	2012-08-20  Edmar Wienskoski  <edmar@@freescale.com>
	* gas/ppc/e6500.d: Changed opcode for vabsdub, vabsduh, vabsduw,
	mviwsplt.
@
text
@d13 1
a13 1
 +0 \.text +0+dc +0+ +0+ +.*
a104 6
 +c4:	e0 40 00 10 	lq      r2,16\(0\)
 +c8:	e0 05 00 10 	lq      r0,16\(r5\)
 +cc:	e0 45 00 10 	lq      r2,16\(r5\)
 +d0:	f8 40 00 12 	stq     r2,16\(0\)
 +d4:	f8 05 00 12 	stq     r0,16\(r5\)
 +d8:	f8 45 00 12 	stq     r2,16\(r5\)
@


1.7.8.2
log
@	PR 12549
	PR 14493
	PR 14567
	PR 14662
	PR 14758
	PR 14813
	PR 14904
	PR 14915
	PR 14926
	PR 14950
	PR 14962
	Apply mainline patches
@
text
@d5 1
a5 1
.*
d13 1
a13 1
 +0 \.text +0+c8 +0+ +0+ +.*
d15 1
a15 1
 +1 \.data +0+20 +0+ +0+ +.*
d19 1
a19 1
 +3 \.toc +0+20 +0+ +0+ +.*
d26 1
a26 1
0+10 l +\.data	0+ dsym1
d28 2
a29 2
0+10 l +\.data	0+ usym0
0+20 l +\.data	0+ usym1
d37 74
a110 64
.*:	(e0 83 00 00|00 00 83 e0) 	lq      r4,0\(r3\)
.*: R_PPC64_ADDR16_LO_DS	\.data
.*:	(e0 83 00 .0|.0 00 83 e0) 	lq      r4,.*\(r3\)
.*: R_PPC64_ADDR16_LO_DS	\.data\+0x10
.*:	(e0 83 00 .0|.0 00 83 e0) 	lq      r4,.*\(r3\)
.*: R_PPC64_ADDR16_LO_DS	\.data\+0x10
.*:	(e0 83 00 .0|.0 00 83 e0) 	lq      r4,.*\(r3\)
.*: R_PPC64_ADDR16_LO_DS	\.data\+0x20
.*:	(e0 83 00 00|00 00 83 e0) 	lq      r4,0\(r3\)
.*: R_PPC64_ADDR16_LO_DS	esym0
.*:	(e0 83 00 00|00 00 83 e0) 	lq      r4,0\(r3\)
.*: R_PPC64_ADDR16_LO_DS	esym1
.*:	(e0 82 00 00|00 00 82 e0) 	lq      r4,0\(r2\)
.*: R_PPC64_TOC16_DS	\.toc
.*:	(e0 82 00 .0|.0 00 82 e0) 	lq      r4,.*\(r2\)
.*: R_PPC64_TOC16_DS	\.toc\+0x10
.*:	(e0 80 00 00|00 00 80 e0) 	lq      r4,0\(0\)
.*: R_PPC64_ADDR16_LO_DS	\.text
.*:	(e0 c3 00 00|00 00 c3 e0) 	lq      r6,0\(r3\)
.*: R_PPC64_GOT16_DS	dsym0
.*:	(e0 c3 00 00|00 00 c3 e0) 	lq      r6,0\(r3\)
.*: R_PPC64_GOT16_LO_DS	dsym0
.*:	(e0 c3 00 00|00 00 c3 e0) 	lq      r6,0\(r3\)
.*: R_PPC64_PLT16_LO_DS	\.data
.*:	(e0 c3 00 .0|.0 00 c3 e0) 	lq      r6,.*\(r3\)
.*: R_PPC64_SECTOFF_DS	\.data\+0x10
.*:	(e0 c3 00 .0|.0 00 c3 e0) 	lq      r6,.*\(r3\)
.*: R_PPC64_SECTOFF_LO_DS	\.data\+0x10
.*:	(e0 c4 00 20|20 00 c4 e0) 	lq      r6,32\(r4\)
.*:	(f8 c7 00 02|02 00 c7 f8) 	stq     r6,0\(r7\)
.*:	(f8 c7 00 12|12 00 c7 f8) 	stq     r6,16\(r7\)
.*:	(f8 c7 ff f2|f2 ff c7 f8) 	stq     r6,-16\(r7\)
.*:	(f8 c7 80 02|02 80 c7 f8) 	stq     r6,-32768\(r7\)
.*:	(f8 c7 7f f2|f2 7f c7 f8) 	stq     r6,32752\(r7\)
.*:	(00 00 02 00|00 02 00 00) 	attn
.*:	(7c 6f f1 20|20 f1 6f 7c) 	mtcr    r3
.*:	(7c 6f f1 20|20 f1 6f 7c) 	mtcr    r3
.*:	(7c 68 11 20|20 11 68 7c) 	mtcrf   129,r3
.*:	(7c 70 11 20|20 11 70 7c) 	mtocrf  1,r3
.*:	(7c 70 21 20|20 21 70 7c) 	mtocrf  2,r3
.*:	(7c 70 41 20|20 41 70 7c) 	mtocrf  4,r3
.*:	(7c 70 81 20|20 81 70 7c) 	mtocrf  8,r3
.*:	(7c 71 01 20|20 01 71 7c) 	mtocrf  16,r3
.*:	(7c 72 01 20|20 01 72 7c) 	mtocrf  32,r3
.*:	(7c 74 01 20|20 01 74 7c) 	mtocrf  64,r3
.*:	(7c 78 01 20|20 01 78 7c) 	mtocrf  128,r3
.*:	(7c 60 00 26|26 00 60 7c) 	mfcr    r3
.*:	(7c 70 10 26|26 10 70 7c) 	mfocrf  r3,1
.*:	(7c 70 20 26|26 20 70 7c) 	mfocrf  r3,2
.*:	(7c 70 40 26|26 40 70 7c) 	mfocrf  r3,4
.*:	(7c 70 80 26|26 80 70 7c) 	mfocrf  r3,8
.*:	(7c 71 00 26|26 00 71 7c) 	mfocrf  r3,16
.*:	(7c 72 00 26|26 00 72 7c) 	mfocrf  r3,32
.*:	(7c 74 00 26|26 00 74 7c) 	mfocrf  r3,64
.*:	(7c 78 00 26|26 00 78 7c) 	mfocrf  r3,128
.*:	(7c 01 17 ec|ec 17 01 7c) 	dcbz    r1,r2
.*:	(7c 23 27 ec|ec 27 23 7c) 	dcbzl   r3,r4
.*:	(7c 05 37 ec|ec 37 05 7c) 	dcbz    r5,r6
.*:	(e0 40 00 10|10 00 40 e0) 	lq      r2,16\(0\)
.*:	(e0 05 00 10|10 00 05 e0) 	lq      r0,16\(r5\)
.*:	(e0 45 00 10|10 00 45 e0) 	lq      r2,16\(r5\)
.*:	(f8 40 00 12|12 00 40 f8) 	stq     r2,16\(0\)
.*:	(f8 05 00 12|12 00 05 f8) 	stq     r0,16\(r5\)
.*:	(f8 45 00 12|12 00 45 f8) 	stq     r2,16\(r5\)
@


1.6
log
@	* gas/ppc/astest.d: Adjust for relocs reduced to section sym.
	* gas/ppc/astest2.d: Likewise.
	* gas/ppc/astest2_64.d: Likewise.
	* ppc/astest64.d: Likewise.
	* ppc/booke.d: Likewise.
	* ppc/power4.d: Likewise.
	* ppc/test1elf32.d: Likewise.
	* ppc/test1elf64.d: Likewise.
@
text
@d66 1
a66 1
			3a: R_PPC64_GOT16_DS	\.data
d68 1
a68 1
			3e: R_PPC64_GOT16_LO_DS	\.data
@


1.5
log
@bfd/
	* elfcode.h (elf_slurp_symbol_table): Use bfd_elf_sym_name so that
	canonical sections syms have a name.

gas/testsuite/
	Update for changed section syms.

ld/testsuite/
	Update for changed section syms.
@
text
@d38 1
a38 1
			2: R_PPC64_ADDR16_LO_DS	dsym0
d40 1
a40 1
			6: R_PPC64_ADDR16_LO_DS	dsym1
d42 3
a44 3
			a: R_PPC64_ADDR16_LO_DS	usym0
 +c:	e0 83 00 00 	lq      r4,0\(r3\)
			e: R_PPC64_ADDR16_LO_DS	usym1
d66 1
a66 1
			3a: R_PPC64_GOT16_DS	dsym0
d68 1
a68 1
			3e: R_PPC64_GOT16_LO_DS	dsym0
d70 1
a70 1
			42: R_PPC64_PLT16_LO_DS	dsym0
d72 1
a72 1
			46: R_PPC64_SECTOFF_DS	dsym1
d74 1
a74 1
			4a: R_PPC64_SECTOFF_LO_DS	dsym1
@


1.4
log
@opcodes/
	* ppc-opc.c (insert_fxm): Handle mfocrf and mtocrf.
	(extract_fxm): Don't test dialect.
	(XFXFXM_MASK): Include the power4 bit.
	(XFXM): Add p4 param.
	(powerpc_opcodes): Add mfocrf and mtocrf.  Adjust mtcr.

gas/testsuite/
	* gas/ppc/power4.d: Update.
@
text
@d22 3
a24 3
0+ l +d +\.text	0+ 
0+ l +d +\.data	0+ 
0+ l +d +\.bss	0+ 
d27 1
a27 1
0+ l +d +\.toc	0+ 
@


1.3
log
@	* ppc-opc.c (powerpc_opcodes): Add "dbczl" instruction for PPC970.
[testsuite]
	* gas/ppc/power4.s: Add dcbz and dcbzl test cases.
	* gas/ppc/power4.d: Update accordingly.
@
text
@d85 8
a92 8
 +74:	7c 70 11 20 	mtcrf   1,r3
 +78:	7c 70 21 20 	mtcrf   2,r3
 +7c:	7c 70 41 20 	mtcrf   4,r3
 +80:	7c 70 81 20 	mtcrf   8,r3
 +84:	7c 71 01 20 	mtcrf   16,r3
 +88:	7c 72 01 20 	mtcrf   32,r3
 +8c:	7c 74 01 20 	mtcrf   64,r3
 +90:	7c 78 01 20 	mtcrf   128,r3
d94 8
a101 8
 +98:	7c 70 10 26 	mfcr    r3,1
 +9c:	7c 70 20 26 	mfcr    r3,2
 +a0:	7c 70 40 26 	mfcr    r3,4
 +a4:	7c 70 80 26 	mfcr    r3,8
 +a8:	7c 71 00 26 	mfcr    r3,16
 +ac:	7c 72 00 26 	mfcr    r3,32
 +b0:	7c 74 00 26 	mfcr    r3,64
 +b4:	7c 78 00 26 	mfcr    r3,128
@


1.2
log
@opcodes/
	* ppc-dis.c (print_insn_powerpc): Don't print tabs.  Handle
	PPC_OPERANDS_GPR_0.
	* ppc-opc.c (RA0): Define.
	(RAQ, RAL, RAM, RAS, RSQ, RTQ, RSO): Use PPC_OPERAND_GPR_0.
	(RAOPT): Rename from RAO.  Update all uses.
	(powerpc_opcodes): Use RA0 as appropriate.  Add "lsdx", "lsdi",
	"stsdx", "stsdi", "lmd" and "stmd" insns.

include/opcode/
	* ppc.h (PPC_OPERAND_GPR_0): Define.  Bump other operand defines.

gas/testsuite/
	Update gas/ppc/.

ld/testsuite/
	Update ld-powerpc/.
@
text
@d13 1
a13 1
 +0 \.text +0+b8 +0+ +0+ +.*
d102 3
@


1.1
log
@	* gas/ppc/test2elf64.s: Rename to..
	* gas/ppc/power4.s: ..this.  Add mtcr and mfcr testcases.
	* gas/ppc/test2elf64.d: Rename to..
	* gas/ppc/power4.d: ..this.  Update.
	* gas/ppc/ppc.exp: Update.
@
text
@d37 1
a37 1
 +0:	e0 83 00 00 	lq	r4,0\(r3\)
d39 1
a39 1
 +4:	e0 83 00 00 	lq	r4,0\(r3\)
d41 1
a41 1
 +8:	e0 83 00 00 	lq	r4,0\(r3\)
d43 1
a43 1
 +c:	e0 83 00 00 	lq	r4,0\(r3\)
d45 1
a45 1
 +10:	e0 83 00 00 	lq	r4,0\(r3\)
d47 1
a47 1
 +14:	e0 83 00 00 	lq	r4,0\(r3\)
d49 1
a49 1
 +18:	e0 82 00 00 	lq	r4,0\(r2\)
d51 1
a51 1
 +1c:	e0 82 00 00 	lq	r4,0\(r2\)
d53 1
a53 1
 +20:	e0 82 00 10 	lq	r4,16\(r2\)
d55 1
a55 1
 +24:	e0 82 00 10 	lq	r4,16\(r2\)
d57 1
a57 1
 +28:	e0 82 00 20 	lq	r4,32\(r2\)
d59 1
a59 1
 +2c:	e0 82 00 20 	lq	r4,32\(r2\)
d61 1
a61 1
 +30:	e0 c2 00 20 	lq	r6,32\(r2\)
d63 1
a63 1
 +34:	e0 80 00 00 	lq	r4,0\(r0\)
d65 1
a65 1
 +38:	e0 c3 00 00 	lq	r6,0\(r3\)
d67 1
a67 1
 +3c:	e0 c3 00 00 	lq	r6,0\(r3\)
d69 1
a69 1
 +40:	e0 c3 00 00 	lq	r6,0\(r3\)
d71 1
a71 1
 +44:	e0 c3 00 00 	lq	r6,0\(r3\)
d73 1
a73 1
 +48:	e0 c3 00 00 	lq	r6,0\(r3\)
d75 6
a80 6
 +4c:	e0 c4 00 10 	lq	r6,16\(r4\)
 +50:	f8 c7 00 02 	stq	r6,0\(r7\)
 +54:	f8 c7 00 12 	stq	r6,16\(r7\)
 +58:	f8 c7 ff f2 	stq	r6,-16\(r7\)
 +5c:	f8 c7 80 02 	stq	r6,-32768\(r7\)
 +60:	f8 c7 7f f2 	stq	r6,32752\(r7\)
d82 20
a101 20
 +68:	7c 6f f1 20 	mtcr	r3
 +6c:	7c 6f f1 20 	mtcr	r3
 +70:	7c 68 11 20 	mtcrf	129,r3
 +74:	7c 70 11 20 	mtcrf	1,r3
 +78:	7c 70 21 20 	mtcrf	2,r3
 +7c:	7c 70 41 20 	mtcrf	4,r3
 +80:	7c 70 81 20 	mtcrf	8,r3
 +84:	7c 71 01 20 	mtcrf	16,r3
 +88:	7c 72 01 20 	mtcrf	32,r3
 +8c:	7c 74 01 20 	mtcrf	64,r3
 +90:	7c 78 01 20 	mtcrf	128,r3
 +94:	7c 60 00 26 	mfcr	r3
 +98:	7c 70 10 26 	mfcr	r3,1
 +9c:	7c 70 20 26 	mfcr	r3,2
 +a0:	7c 70 40 26 	mfcr	r3,4
 +a4:	7c 70 80 26 	mfcr	r3,8
 +a8:	7c 71 00 26 	mfcr	r3,16
 +ac:	7c 72 00 26 	mfcr	r3,32
 +b0:	7c 74 00 26 	mfcr	r3,64
 +b4:	7c 78 00 26 	mfcr	r3,128
@


1.1.6.1
log
@opcodes/
	* ppc-dis.c (print_insn_powerpc): Don't print tabs.  Handle
	PPC_OPERANDS_GPR_0.
	* ppc-opc.c (RA0): Define.
	(RAQ, RAL, RAM, RAS, RSQ, RTQ, RSO): Use PPC_OPERAND_GPR_0.
	(RAOPT): Rename from RAO.  Update all uses.
	(powerpc_opcodes): Use RA0 as appropriate.  Add "lsdx", "lsdi",
	"stsdx", "stsdi", "lmd" and "stmd" insns.

include/opcode/
	* ppc.h (PPC_OPERAND_GPR_0): Define.  Bump other operand defines.

gas/testsuite/
	Update gas/ppc/.

ld/testsuite/
	Update ld-powerpc/.
@
text
@d37 1
a37 1
 +0:	e0 83 00 00 	lq      r4,0\(r3\)
d39 1
a39 1
 +4:	e0 83 00 00 	lq      r4,0\(r3\)
d41 1
a41 1
 +8:	e0 83 00 00 	lq      r4,0\(r3\)
d43 1
a43 1
 +c:	e0 83 00 00 	lq      r4,0\(r3\)
d45 1
a45 1
 +10:	e0 83 00 00 	lq      r4,0\(r3\)
d47 1
a47 1
 +14:	e0 83 00 00 	lq      r4,0\(r3\)
d49 1
a49 1
 +18:	e0 82 00 00 	lq      r4,0\(r2\)
d51 1
a51 1
 +1c:	e0 82 00 00 	lq      r4,0\(r2\)
d53 1
a53 1
 +20:	e0 82 00 10 	lq      r4,16\(r2\)
d55 1
a55 1
 +24:	e0 82 00 10 	lq      r4,16\(r2\)
d57 1
a57 1
 +28:	e0 82 00 20 	lq      r4,32\(r2\)
d59 1
a59 1
 +2c:	e0 82 00 20 	lq      r4,32\(r2\)
d61 1
a61 1
 +30:	e0 c2 00 20 	lq      r6,32\(r2\)
d63 1
a63 1
 +34:	e0 80 00 00 	lq      r4,0\(0\)
d65 1
a65 1
 +38:	e0 c3 00 00 	lq      r6,0\(r3\)
d67 1
a67 1
 +3c:	e0 c3 00 00 	lq      r6,0\(r3\)
d69 1
a69 1
 +40:	e0 c3 00 00 	lq      r6,0\(r3\)
d71 1
a71 1
 +44:	e0 c3 00 00 	lq      r6,0\(r3\)
d73 1
a73 1
 +48:	e0 c3 00 00 	lq      r6,0\(r3\)
d75 6
a80 6
 +4c:	e0 c4 00 10 	lq      r6,16\(r4\)
 +50:	f8 c7 00 02 	stq     r6,0\(r7\)
 +54:	f8 c7 00 12 	stq     r6,16\(r7\)
 +58:	f8 c7 ff f2 	stq     r6,-16\(r7\)
 +5c:	f8 c7 80 02 	stq     r6,-32768\(r7\)
 +60:	f8 c7 7f f2 	stq     r6,32752\(r7\)
d82 20
a101 20
 +68:	7c 6f f1 20 	mtcr    r3
 +6c:	7c 6f f1 20 	mtcr    r3
 +70:	7c 68 11 20 	mtcrf   129,r3
 +74:	7c 70 11 20 	mtcrf   1,r3
 +78:	7c 70 21 20 	mtcrf   2,r3
 +7c:	7c 70 41 20 	mtcrf   4,r3
 +80:	7c 70 81 20 	mtcrf   8,r3
 +84:	7c 71 01 20 	mtcrf   16,r3
 +88:	7c 72 01 20 	mtcrf   32,r3
 +8c:	7c 74 01 20 	mtcrf   64,r3
 +90:	7c 78 01 20 	mtcrf   128,r3
 +94:	7c 60 00 26 	mfcr    r3
 +98:	7c 70 10 26 	mfcr    r3,1
 +9c:	7c 70 20 26 	mfcr    r3,2
 +a0:	7c 70 40 26 	mfcr    r3,4
 +a4:	7c 70 80 26 	mfcr    r3,8
 +a8:	7c 71 00 26 	mfcr    r3,16
 +ac:	7c 72 00 26 	mfcr    r3,32
 +b0:	7c 74 00 26 	mfcr    r3,64
 +b4:	7c 78 00 26 	mfcr    r3,128
@


