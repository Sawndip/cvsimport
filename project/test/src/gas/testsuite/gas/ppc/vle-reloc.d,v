head	1.2;
access;
symbols
	binutils-2_24-branch:1.2.0.4
	binutils-2_24-branchpoint:1.2
	binutils-2_23_2:1.2
	binutils-2_23_1:1.2
	binutils-2_23:1.2
	binutils-2_23-branch:1.2.0.2
	binutils-2_23-branchpoint:1.2
	binutils_latest_snapshot:1.2;
locks; strict;
comment	@# @;


1.2
date	2012.05.17.07.03.20;	author amodra;	state Exp;
branches;
next	1.1;

1.1
date	2012.05.14.19.45.26;	author jwlemke;	state Exp;
branches;
next	;


desc
@@


1.2
log
@	* gas/ppc/vle.d: Pass -a32 to assembler.
	* gas/ppc/vle-reloc.d: Likewise.
	* gas/ppc/vle-simple-1.d: Likewise, also match wider addresses.
	* gas/ppc/vle-simple-2.d: Likewise.
	* gas/ppc/vle-simple-3.d: Likewise.
	* gas/ppc/vle-simple-4.d: Likewise.
	* gas/ppc/vle-simple-5.d: Likewise.
	* gas/ppc/vle-simple-6.d: Likewise.
@
text
@#as: -a32 -mvle
#objdump: -dr -Mvle
#name: VLE relocations

.*: +file format elf.*-powerpc.*

Disassembly of section \.text:

00000000 <.text>:
   0:	e8 00       	se_b    0x0
			0: R_PPC_VLE_REL8	sub1
   2:	e9 00       	se_bl   0x2
			2: R_PPC_VLE_REL8	sub1
   4:	e1 00       	se_ble  0x4
			4: R_PPC_VLE_REL8	sub2
   6:	e6 00       	se_beq  0x6
			6: R_PPC_VLE_REL8	sub2
   8:	78 00 00 00 	e_b     0x8
			8: R_PPC_VLE_REL24	sub3
   c:	78 00 00 01 	e_bl    0xc
			c: R_PPC_VLE_REL24	sub4
  10:	7a 05 00 00 	e_ble   cr1,0x10
			10: R_PPC_VLE_REL15	sub5
  14:	7a 1a 00 01 	e_beql  cr2,0x14
			14: R_PPC_VLE_REL15	sub5

  18:	70 20 c0 00 	e_or2i  r1,0
			18: R_PPC_VLE_LO16D	low
  1c:	70 40 c0 00 	e_or2i  r2,0
			1c: R_PPC_VLE_HI16D	high
  20:	70 60 c0 00 	e_or2i  r3,0
			20: R_PPC_VLE_HA16D	high_adjust
  24:	70 80 c0 00 	e_or2i  r4,0
			24: R_PPC_VLE_SDAREL_LO16D	low_sdarel
  28:	70 a0 c0 00 	e_or2i  r5,0
			28: R_PPC_VLE_SDAREL_HI16D	high_sdarel
  2c:	70 40 c0 00 	e_or2i  r2,0
			2c: R_PPC_VLE_SDAREL_HA16D	high_adjust_sdarel
  30:	70 20 c8 00 	e_and2i. r1,0
			30: R_PPC_VLE_LO16D	low
  34:	70 40 c8 00 	e_and2i. r2,0
			34: R_PPC_VLE_HI16D	high
  38:	70 60 c8 00 	e_and2i. r3,0
			38: R_PPC_VLE_HA16D	high_adjust
  3c:	70 80 c8 00 	e_and2i. r4,0
			3c: R_PPC_VLE_SDAREL_LO16D	low_sdarel
  40:	70 a0 c8 00 	e_and2i. r5,0
			40: R_PPC_VLE_SDAREL_HI16D	high_sdarel
  44:	70 40 c8 00 	e_and2i. r2,0
			44: R_PPC_VLE_SDAREL_HA16D	high_adjust_sdarel
  48:	70 40 c8 00 	e_and2i. r2,0
			48: R_PPC_VLE_SDAREL_HA16D	high_adjust_sdarel
  4c:	70 20 d0 00 	e_or2is r1,0
			4c: R_PPC_VLE_LO16D	low
  50:	70 40 d0 00 	e_or2is r2,0
			50: R_PPC_VLE_HI16D	high
  54:	70 60 d0 00 	e_or2is r3,0
			54: R_PPC_VLE_HA16D	high_adjust
  58:	70 80 d0 00 	e_or2is r4,0
			58: R_PPC_VLE_SDAREL_LO16D	low_sdarel
  5c:	70 a0 d0 00 	e_or2is r5,0
			5c: R_PPC_VLE_SDAREL_HI16D	high_sdarel
  60:	70 40 d0 00 	e_or2is r2,0
			60: R_PPC_VLE_SDAREL_HA16D	high_adjust_sdarel
  64:	70 20 e0 00 	e_lis   r1,0
			64: R_PPC_VLE_LO16D	low
  68:	70 40 e0 00 	e_lis   r2,0
			68: R_PPC_VLE_HI16D	high
  6c:	70 60 e0 00 	e_lis   r3,0
			6c: R_PPC_VLE_HA16D	high_adjust
  70:	70 80 e0 00 	e_lis   r4,0
			70: R_PPC_VLE_SDAREL_LO16D	low_sdarel
  74:	70 a0 e0 00 	e_lis   r5,0
			74: R_PPC_VLE_SDAREL_HI16D	high_sdarel
  78:	70 40 e0 00 	e_lis   r2,0
			78: R_PPC_VLE_SDAREL_HA16D	high_adjust_sdarel
  7c:	70 20 e8 00 	e_and2is. r1,0
			7c: R_PPC_VLE_LO16D	low
  80:	70 40 e8 00 	e_and2is. r2,0
			80: R_PPC_VLE_HI16D	high
  84:	70 60 e8 00 	e_and2is. r3,0
			84: R_PPC_VLE_HA16D	high_adjust
  88:	70 80 e8 00 	e_and2is. r4,0
			88: R_PPC_VLE_SDAREL_LO16D	low_sdarel
  8c:	70 a0 e8 00 	e_and2is. r5,0
			8c: R_PPC_VLE_SDAREL_HI16D	high_sdarel
  90:	70 40 e8 00 	e_and2is. r2,0
			90: R_PPC_VLE_SDAREL_HA16D	high_adjust_sdarel
  94:	70 01 98 00 	e_cmp16i r1,0
			94: R_PPC_VLE_LO16A	low
  98:	70 02 98 00 	e_cmp16i r2,0
			98: R_PPC_VLE_HI16A	high
  9c:	70 03 98 00 	e_cmp16i r3,0
			9c: R_PPC_VLE_HA16A	high_adjust
  a0:	70 04 98 00 	e_cmp16i r4,0
			a0: R_PPC_VLE_SDAREL_LO16A	low_sdarel
  a4:	70 05 98 00 	e_cmp16i r5,0
			a4: R_PPC_VLE_SDAREL_HI16A	high_sdarel
  a8:	70 02 98 00 	e_cmp16i r2,0
			a8: R_PPC_VLE_SDAREL_HA16A	high_adjust_sdarel
  ac:	70 01 a8 00 	e_cmpl16i r1,0
			ac: R_PPC_VLE_LO16A	low
  b0:	70 02 a8 00 	e_cmpl16i r2,0
			b0: R_PPC_VLE_HI16A	high
  b4:	70 03 a8 00 	e_cmpl16i r3,0
			b4: R_PPC_VLE_HA16A	high_adjust
  b8:	70 04 a8 00 	e_cmpl16i r4,0
			b8: R_PPC_VLE_SDAREL_LO16A	low_sdarel
  bc:	70 05 a8 00 	e_cmpl16i r5,0
			bc: R_PPC_VLE_SDAREL_HI16A	high_sdarel
  c0:	70 02 a8 00 	e_cmpl16i r2,0
			c0: R_PPC_VLE_SDAREL_HA16A	high_adjust_sdarel
  c4:	70 01 b0 00 	e_cmph16i r1,0
			c4: R_PPC_VLE_LO16A	low
  c8:	70 02 b0 00 	e_cmph16i r2,0
			c8: R_PPC_VLE_HI16A	high
  cc:	70 03 b0 00 	e_cmph16i r3,0
			cc: R_PPC_VLE_HA16A	high_adjust
  d0:	70 04 b0 00 	e_cmph16i r4,0
			d0: R_PPC_VLE_SDAREL_LO16A	low_sdarel
  d4:	70 05 b0 00 	e_cmph16i r5,0
			d4: R_PPC_VLE_SDAREL_HI16A	high_sdarel
  d8:	70 02 b0 00 	e_cmph16i r2,0
			d8: R_PPC_VLE_SDAREL_HA16A	high_adjust_sdarel
  dc:	70 01 b8 00 	e_cmphl16i r1,0
			dc: R_PPC_VLE_LO16A	low
  e0:	70 02 b8 00 	e_cmphl16i r2,0
			e0: R_PPC_VLE_HI16A	high
  e4:	70 03 b8 00 	e_cmphl16i r3,0
			e4: R_PPC_VLE_HA16A	high_adjust
  e8:	70 04 b8 00 	e_cmphl16i r4,0
			e8: R_PPC_VLE_SDAREL_LO16A	low_sdarel
  ec:	70 05 b8 00 	e_cmphl16i r5,0
			ec: R_PPC_VLE_SDAREL_HI16A	high_sdarel
  f0:	70 02 b8 00 	e_cmphl16i r2,0
			f0: R_PPC_VLE_SDAREL_HA16A	high_adjust_sdarel
  f4:	70 01 88 00 	e_add2i. r1,0
			f4: R_PPC_VLE_LO16A	low
  f8:	70 02 88 00 	e_add2i. r2,0
			f8: R_PPC_VLE_HI16A	high
  fc:	70 03 88 00 	e_add2i. r3,0
			fc: R_PPC_VLE_HA16A	high_adjust
 100:	70 04 88 00 	e_add2i. r4,0
			100: R_PPC_VLE_SDAREL_LO16A	low_sdarel
 104:	70 05 88 00 	e_add2i. r5,0
			104: R_PPC_VLE_SDAREL_HI16A	high_sdarel
 108:	70 02 88 00 	e_add2i. r2,0
			108: R_PPC_VLE_SDAREL_HA16A	high_adjust_sdarel
 10c:	70 01 90 00 	e_add2is r1,0
			10c: R_PPC_VLE_LO16A	low
 110:	70 02 90 00 	e_add2is r2,0
			110: R_PPC_VLE_HI16A	high
 114:	70 03 90 00 	e_add2is r3,0
			114: R_PPC_VLE_HA16A	high_adjust
 118:	70 04 90 00 	e_add2is r4,0
			118: R_PPC_VLE_SDAREL_LO16A	low_sdarel
 11c:	70 05 90 00 	e_add2is r5,0
			11c: R_PPC_VLE_SDAREL_HI16A	high_sdarel
 120:	70 02 90 00 	e_add2is r2,0
			120: R_PPC_VLE_SDAREL_HA16A	high_adjust_sdarel
 124:	70 01 a0 00 	e_mull2i r1,0
			124: R_PPC_VLE_LO16A	low
 128:	70 02 a0 00 	e_mull2i r2,0
			128: R_PPC_VLE_HI16A	high
 12c:	70 03 a0 00 	e_mull2i r3,0
			12c: R_PPC_VLE_HA16A	high_adjust
 130:	70 04 a0 00 	e_mull2i r4,0
			130: R_PPC_VLE_SDAREL_LO16A	low_sdarel
 134:	70 05 a0 00 	e_mull2i r5,0
			134: R_PPC_VLE_SDAREL_HI16A	high_sdarel
 138:	70 02 a0 00 	e_mull2i r2,0
			138: R_PPC_VLE_SDAREL_HA16A	high_adjust_sdarel
@


1.1
log
@
Add support for PowerPC VLE.

2012-05-14  Catherine Moore  <clm@@codesourcery.com>

	* NEWS:  Mention PowerPC VLE port.

2012-05-14  James Lemke <jwlemke@@codesourcery.com>
	    Catherine Moore  <clm@@codesourcery.com>

	bfd/
	* bfd.c (bfd_lookup_section_flags): Add section parm.
	* ecoff.c (bfd_debug_section): Remove flag_info initializer.
	* elf-bfd.h (bfd_elf_section_data): Move in section_flag_info.
	(bfd_elf_lookup_section_flags): Add section parm.
	* elf32-ppc.c (is_ppc_vle): New function.
	(ppc_elf_modify_segment_map): New function.
	(elf_backend_modify_segment_map): Define.
	(has_vle_insns): New define.
	* elf32-ppc.h (ppc_elf_modify_segment_map): Declare.
	* elflink.c (bfd_elf_lookup_section_flags): Add return value & parm.
	Move in logic to omit / include a section.
	* libbfd-in.h (bfd_link_info): Add section parm.
	(bfd_generic_lookup_section_flags): Likewise.
	* reloc.c (bfd_generic_lookup_section_flags): Likewise.
	* section.c (bfd_section): Move out section_flag_info.
	(BFD_FAKE_SECTION): Remove flag_info initializer.
	* targets.c (_bfd_lookup_section_flags): Add section parm.

2012-05-14  Catherine Moore  <clm@@codesourcery.com>

	bfd/
	* archures.c (bfd_mach_ppc_vle): New.
	* bfd-in2.h: Regenerated.
	* cpu-powerpc.c (bfd_powerpc_archs): New entry for vle.
	* elf32-ppc.c (split16_format_type): New enumeration.
	(ppc_elf_vle_split16): New function.
	(HOWTO): Add entries for R_PPC_VLE relocations.
	(ppc_elf_reloc_type_lookup): Handle PPC_VLE relocations.
	(ppc_elf_section_flags): New function.
	(ppc_elf_lookup_section_flags): New function.
	(ppc_elf_section_processing): New function.
	(ppc_elf_check_relocs): Handle PPC_VLE relocations.
	(ppc_elf_relocation_section): Likewise.
	(elf_backend_lookup_section_flags_hook): Define.
	(elf_backend_section_flags): Define.
	(elf_backend_section_processing): Define.
	* elf32-ppc.h (ppc_elf_section_processing): Declare.
	* libbfd.h: Regenerated.
	* reloc.c (BFD_RELOC_PPC_VLE_REL8, BFD_RELOC_PPC_VLE_REL15,
	BFD_RELOC_PPC_VLE_REL24, BFD_RELOC_PPC_VLE_LO16A,
	BFD_RELOC_PPC_VLE_LO16D, BFD_RELOC_PPC_VLE_HI16A,
	BFD_RELOC_PPC_VLE_HI16D, BFD_RELOC_PPC_VLE_HA16A,
	BFD_RELOC_PPC_VLE_HA16D, BFD_RELOC_PPC_VLE_SDA21,
	BFD_RELOC_PPC_VLE_SDA21_LO, BFD_RELOC_PPC_VLE_SDAREL_LO16A,
	BFD_RELOC_PPC_VLE_SDAREL_LO16D, BFD_RELOC_PPC_VLE_SDAREL_HI16A,
	BFD_RELOC_PPC_VLE_SDAREL_HI16D, BFD_RELOC_PPC_VLE_SDAREL_HA16A,
	BFD_RELOC_PPC_VLE_SDAREL_HA16D): New bfd relocations.

2012-05-14  James Lemke  <jwlemke@@codesourcery.com>

	gas/
	* config/tc-ppc.c (insn_validate): New func of existing code to call..
	(ppc_setup_opcodes): ..from 2 places here.
	Revise for second (VLE) opcode table.
	Add #ifdef'd code to print opcode tables.

2012-05-14  James Lemke  <jwlemke@@codesourcery.com>

	gas/
	* config/tc-ppc.c (ppc_setup_opcodes): Allow out-of-order
	for the VLE conditional branches.

2012-05-14  Catherine Moore  <clm@@codesourcery.com>
            Maciej W. Rozycki  <macro@@codesourcery.com>
	    Rhonda Wittels  <rhonda@@codesourcery.com>

	gas/
	* config/tc-ppc.c (PPC_VLE_SPLIT16A): New macro.
	(PPC_VLE_SPLIT16D): New macro.
	(PPC_VLE_LO16A): New macro.
	(PPC_VLE_LO16D): New macro.
	(PPC_VLE_HI16A): New macro.
	(PPC_VLE_HI16D): New macro.
	(PPC_VLE_HA16A): New macro.
	(PPC_VLE_HA16D): New macro.
	(PPC_APUINFO_VLE): New definition.
	(md_chars_to_number): New function.
	(md_parse_option): Check for combinations of little
	endian and -mvle.
	(md_show_usage): Document -mvle.
	(ppc_arch): Recognize VLE.
	(ppc_mach): Recognize bfd_mach_ppc_vle.
	(ppc_setup_opcodes): Print the opcode table if
	* config/tc-ppc.h (ppc_frag_check): Declare.
	* doc/c-ppc.texi: Document -mvle.
	* NEWS:  Mention PowerPC VLE port.

2012-05-14  Catherine Moore  <clm@@codesourcery.com>

	gas/
	* config/tc-ppc.h (ppc_dw2_line_min_insn_length): Declare.
	(DWARF2_LINE_MIN_INSN_LENGTH): Redefine.
	* config/tc-ppc.c (ppc_dw2_line_min_insn_length): New.
	* dwarf2dbg.c (scale_addr_delta): Handle values of 1
	for DWARF2_LINE_MIN_INSN_LENGTH.

2012-05-14  Catherine Moore  <clm@@codesourcery.com>
            Maciej W. Rozycki  <macro@@codesourcery.com>
	    Rhonda Wittels  <rhonda@@codesourcery.com>

	gas/testsuite/
	* gas/ppc/ppc.exp: Run new tests.
	* gas/ppc/vle-reloc.d: New test.
	* gas/ppc/vle-reloc.s: New test.
	* gas/ppc/vle-simple-1.d: New test.
	* gas/ppc/vle-simple-1.s: New test.
	* gas/ppc/vle-simple-2.d: New test.
	* gas/ppc/vle-simple-2.s: New test.
	* gas/ppc/vle-simple-3.d: New test.
	* gas/ppc/vle-simple-3.s: New test.
	* gas/ppc/vle-simple-4.d: New test.
	* gas/ppc/vle-simple-4.s: New test.
	* gas/ppc/vle-simple-5.d: New test.
	* gas/ppc/vle-simple-5.s: New test.
	* gas/ppc/vle-simple-6.d: New test.
	* gas/ppc/vle-simple-6.s: New test.
	* gas/ppc/vle.d: New test.
	* gas/ppc/vle.s: New test.

2012-05-14  James Lemke  <jwlemke@@codesourcery.com>
	include/elf/
	* ppc.h (SEC_PPC_VLE): Remove.

2012-05-14  Catherine Moore  <clm@@codesourcery.com>
	    James Lemke  <jwlemke@@codesourcery.com>

	include/elf/
	* ppc.h (R_PPC_VLE_REL8): New reloction.
	(R_PPC_VLE_REL15): Likewise.
	(R_PPC_VLE_REL24): Likewise.
	(R_PPC_VLE_LO16A): Likewise.
	(R_PPC_VLE_LO16D): Likewise.
	(R_PPC_VLE_HI16A): Likewise.
	(R_PPC_VLE_HI16D): Likewise.
	(R_PPC_VLE_HA16A): Likewise.
	(R_PPC_VLE_HA16D): Likewise.
	(R_PPC_VLE_SDA21): Likewise.
	(R_PPC_VLE_SDA21_LO): Likewise.
	(R_PPC_VLE_SDAREL_LO16A): Likewise.
	(R_PPC_VLE_SDAREL_LO16D): Likewise.
	(R_PPC_VLE_SDAREL_HI16A): Likewise.
	(R_PPC_VLE_SDAREL_HI16D): Likewise.
	(R_PPC_VLE_SDAREL_HA16A): Likewise.
	(R_PPC_VLE_SDAREL_HA16D): Likewise.
	(SEC_PPC_VLE): Remove.
	(PF_PPC_VLE): New program header flag.
	(SHF_PPC_VLE): New section header flag.
	(vle_opcodes, vle_num_opcodes): New.
	(VLE_OP): New macro.
	(VLE_OP_TO_SEG): New macro.

2012-05-14  Catherine Moore  <clm@@codesourcery.com>
            Maciej W. Rozycki  <macro@@codesourcery.com>
	    Rhonda Wittels  <rhonda@@codesourcery.com>

	include/opcode/
	* ppc.h (PPC_OPCODE_VLE): New definition.
	(PPC_OP_SA): New macro.
	(PPC_OP_SE_VLE): New macro.
	(PPC_OP): Use a variable shift amount.
	(powerpc_operand): Update comments.
	(PPC_OPSHIFT_INV): New macro.
	(PPC_OPERAND_CR): Replace with...
	(PPC_OPERAND_CR_BIT): ...this and
	(PPC_OPERAND_CR_REG): ...this.

2012-05-14  James Lemke  <jwlemke@@codesourcery.com>

	ld/
	* ldlang.c (walk_wild_consider_section): Don't copy section_flag_list.
	Pass it to callback.
	(walk_wild_section_general): Pass section_flag_list to callback.
	(lang_add_section): Add sflag_list parm.
	Move out logic to keep / omit a section & call bfd_lookup_section_flags.
	(output_section_callback_fast): Add sflag_list parm.
	Add new parm to lang_add_section calls.
	(output_section_callback): Likewise.
	(check_section_callback): Add sflag_list parm.
	(lang_place_orphans): Add new parm to lang_add_section calls.
	(gc_section_callback): Add sflag_list parm.
	(find_relro_section_callback): Likewise.
	* ldlang.h (callback_t): Add flag_info parm.
	(lang_add_section): Add sflag_list parm.
	* emultempl/armelf.em (elf32_arm_add_stub_section):
	Add lang_add_section parm.
	* emultempl/beos.em (gld*_place_orphan): Likewise.
	* emultempl/elf32.em (gld*_place_orphan): Likewise.
	* emultempl/hppaelf.em (hppaelf_add_stub_section): Likewise.
	* emultempl/m68hc1xelf.em (m68hc11elf_add_stub_section): Likewise.
	* emultempl/mipself.em (mips_add_stub_section): Likewise.
	* emultempl/mmo.em (mmo_place_orphan): Likewise.
	* emultempl/pe.em (gld_*_place_orphan): Likewise.
	* emultempl/pep.em (gld_*_place_orphan): Likewise.
	* emultempl/ppc64elf.em (ppc_add_stub_section): Likewise.
	* emultempl/spuelf.em (spu_place_special_section): Likewise.
	* emultempl/vms.em (vms_place_orphan): Likewise.

2012-05-14  James Lemke  <jwlemke@@codesourcery.com>

	ld/testsuite/
	* ld-powerpc/powerpc.exp: Create ppceabitests.
	* ld-powerpc/vle-multiseg.s: New.
	* ld-powerpc/vle-multiseg-1.d: New.
	* ld-powerpc/vle-multiseg-1.ld: New.
	* ld-powerpc/vle-multiseg-2.d: New.
	* ld-powerpc/vle-multiseg-2.ld: New.
	* ld-powerpc/vle-multiseg-3.d: New.
	* ld-powerpc/vle-multiseg-3.ld: New.
	* ld-powerpc/vle-multiseg-4.d: New.
	* ld-powerpc/vle-multiseg-4.ld: New.
	* ld-powerpc/vle-multiseg-5.d: New.
	* ld-powerpc/vle-multiseg-5.ld: New.
	* ld-powerpc/vle-multiseg-6.d: New.
	* ld-powerpc/vle-multiseg-6.ld: New.
	* ld-powerpc/vle-multiseg-6a.s: New.
	* ld-powerpc/vle-multiseg-6b.s: New.
	* ld-powerpc/vle-multiseg-6c.s: New.
	* ld-powerpc/vle-multiseg-6d.s: New.
	* ld-powerpc/powerpc.exp: Run new tests.

2012-05-14  Catherine Moore  <clm@@codesourcery.com>

	ld/
	* NEWS:  Mention PowerPC VLE port.

2012-05-14  Catherine Moore  <clm@@codesourcery.com>

	ld/testsuite/
	* ld-powerpc/apuinfo.rd: Update for VLE.
	* ld-powerpc/vle-reloc-1.d: New.
	* ld-powerpc/vle-reloc-1.s: New.
	* ld-powerpc/vle-reloc-2.d: New.
	* ld-powerpc/vle-reloc-2.s: New.
	* ld-powerpc/vle-reloc-3.d: New.
	* ld-powerpc/vle-reloc-3.s: New.
	* ld-powerpc/vle-reloc-def-1.s: New.
	* ld-powerpc/vle-reloc-def-2.s: New.
	* ld-powerpc/vle-reloc-def-3.s: New.

2012-05-14  James Lemke  <jwlemke@@codesourcery.com>

	opcodes/
	* ppc-dis.c (get_powerpc_dialect): Use is_ppc_vle.
	(PPC_OPCD_SEGS, VLE_OPCD_SEGS): New defines.
	(vle_opcd_indices): New array.
	(lookup_vle): New function.
	(disassemble_init_powerpc): Revise for second (VLE) opcode table.
	(print_insn_powerpc): Likewise.
	* ppc-opc.c: Likewise.

2012-05-14  Catherine Moore  <clm@@codesourcery.com>
            Maciej W. Rozycki  <macro@@codesourcery.com>
	    Rhonda Wittels  <rhonda@@codesourcery.com>
	    Nathan Froyd <froydnj@@codesourcery.com>

	opcodes/
	* ppc-opc.c (insert_arx, extract_arx): New functions.
	(insert_ary, extract_ary): New functions.
	(insert_li20, extract_li20): New functions.
	(insert_rx, extract_rx): New functions.
	(insert_ry, extract_ry): New functions.
	(insert_sci8, extract_sci8): New functions.
	(insert_sci8n, extract_sci8n): New functions.
	(insert_sd4h, extract_sd4h): New functions.
	(insert_sd4w, extract_sd4w): New functions.
	(insert_vlesi, extract_vlesi): New functions.
	(insert_vlensi, extract_vlensi): New functions.
	(insert_vleui, extract_vleui): New functions.
	(insert_vleil, extract_vleil): New functions.
 	(BI_MASK, BB_MASK, BT): Use PPC_OPERAND_CR_BIT.
 	(BI16, BI32, BO32, B8): New.
	(B15, B24, CRD32, CRS): New.
 	(CRD, OBF, BFA, CR, CRFS): Use PPC_OPERAND_CR_REG.
	(DB, IMM20, RD, Rx, ARX, RY, RZ): New.
	(ARY, SCLSCI8, SCLSCI8N, SE_SD, SE_SDH): New.
	(SH6_MASK): Use PPC_OPSHIFT_INV.
	(SI8, UI5, OIMM5, UI7, BO16): New.
	(VLESIMM, VLENSIMM, VLEUIMM, VLEUIMML): New.
	(XT6, XA6, XB6, XB6S, XC6): Use PPC_OPSHIFT_INV.
	(ALLOW8_SPRG): New.
	(insert_sprg, extract_sprg): Check ALLOW8_SPRG.
	(OPVUP, OPVUP_MASK OPVUP): New
	(BD8, BD8_MASK, BD8IO, BD8IO_MASK): New.
	(EBD8IO, EBD8IO1_MASK, EBD8IO2_MASK, EBD8IO3_MASK): New.
	(BD15, BD15_MASK, EBD15, EBD15_MASK, EBD15BI, EBD15BI_MASK): New.
	(BD24,BD24_MASK, C_LK, C_LK_MASK, C, C_MASK): New.
 	(IA16, IA16_MASK, I16A, I16A_MASK, I16L, I16L_MASK): New.
	(IM7, IM7_MASK, LI20, LI20_MASK, SCI8, SCI8_MASK): New.
	(SCI8BF, SCI8BF_MASK, SD4, SD4_MASK): New.
	(SE_IM5, SE_IM5_MASK): New.
	(SE_R, SE_R_MASK, SE_RR, SE_RR_MASK): New.
	(EX, EX_MASK, BO16F, BO16T, BO32F, BO32T): New.
	(BO32DNZ, BO32DZ): New.
	(NO371, PPCSPE, PPCISEL, PPCEFS, MULHW): Include PPC_OPCODE_VLE.
	(PPCVLE): New.
	(powerpc_opcodes): Add new VLE instructions.  Update existing
	instruction to include PPCVLE if supported.
	* ppc-dis.c (ppc_opts): Add vle entry.
	(get_powerpc_dialect): New function.
	(powerpc_init_dialect): VLE support.
	(print_insn_big_powerpc): Call get_powerpc_dialect.
	(print_insn_little_powerpc): Likewise.
	(operand_value_powerpc): Handle negative shift counts.
	(print_insn_powerpc): Handle 2-byte instruction lengths.
@
text
@d1 1
a1 1
#as: -mvle
@

