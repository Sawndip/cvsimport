head	1.2;
access;
symbols
	binutils-2_24-branch:1.2.0.4
	binutils-2_24-branchpoint:1.2
	binutils-2_23_2:1.2
	binutils-2_23_1:1.2
	binutils-2_23:1.2
	binutils-2_23-branch:1.2.0.2
	binutils-2_23-branchpoint:1.2
	binutils_latest_snapshot:1.2;
locks; strict;
comment	@# @;


1.2
date	2012.05.17.07.03.20;	author amodra;	state Exp;
branches;
next	1.1;

1.1
date	2012.05.14.19.45.26;	author jwlemke;	state Exp;
branches;
next	;


desc
@@


1.2
log
@	* gas/ppc/vle.d: Pass -a32 to assembler.
	* gas/ppc/vle-reloc.d: Likewise.
	* gas/ppc/vle-simple-1.d: Likewise, also match wider addresses.
	* gas/ppc/vle-simple-2.d: Likewise.
	* gas/ppc/vle-simple-3.d: Likewise.
	* gas/ppc/vle-simple-4.d: Likewise.
	* gas/ppc/vle-simple-5.d: Likewise.
	* gas/ppc/vle-simple-6.d: Likewise.
@
text
@#as: -a32 -mvle
#objdump: -dr -Mvle
#name: Validate VLE instructions

.*: +file format elf.*-powerpc.*

Disassembly of section \.text:

0+00 <.*>:
   0:	1c 83 00 1b 	e_add16i r4,r3,27
   4:	70 c0 8c 56 	e_add2i\. r0,13398
   8:	71 01 93 21 	e_add2is r1,17185
   c:	18 46 88 37 	e_addi\. r2,r6,55
  10:	18 65 81 37 	e_addi  r3,r5,14080
  14:	18 84 9a 37 	e_addic\. r4,r4,3604480
  18:	18 e8 93 37 	e_addic r7,r8,922746880
  1c:	71 3f ce ed 	e_and2i\. r9,65261
  20:	71 40 e8 05 	e_and2is\. r10,5
  24:	19 ab c8 39 	e_andi\. r11,r13,57
  28:	19 ec c2 37 	e_andi  r12,r15,3604480
  2c:	78 00 00 ec 	e_b     118 <middle_label>
  30:	78 00 00 01 	e_bl    30 <start_label\+0x30>
			30: R_PPC_VLE_REL24	extern_subr
  34:	7a 03 ff cc 	e_bns   0 <start_label>
  38:	7a 1f 00 01 	e_bsol  cr3,38 <start_label\+0x38>
			38: R_PPC_VLE_REL15	extern_subr
  3c:	70 c2 9b 33 	e_cmp16i r2,13107
  40:	18 46 a9 37 	e_cmpi  cr2,r6,14080
  44:	7c 87 58 1c 	e_cmph  cr1,r7,r11
  48:	73 ec b5 ef 	e_cmph16i r12,-529
  4c:	7c 06 40 5c 	e_cmphl cr0,r6,r8
  50:	70 4d ba 34 	e_cmphl16i r13,4660
  54:	73 e1 ae e0 	e_cmpl16i r1,65248
  58:	18 a3 ab 37 	e_cmpli cr1,r3,922746880
  5c:	7f a3 02 02 	e_crand 4\*cr7\+gt,so,lt
  60:	7c 02 e9 02 	e_crandc lt,eq,4\*cr7\+gt
  64:	7d f0 8a 42 	e_creqv 4\*cr3\+so,4\*cr4\+lt,4\*cr4\+gt
  68:	7d e0 19 c2 	e_crnand 4\*cr3\+so,lt,so
  6c:	7d e0 18 42 	e_crnor 4\*cr3\+so,lt,so
  70:	7d 8d 73 82 	e_cror  4\*cr3\+lt,4\*cr3\+gt,4\*cr3\+eq
  74:	7e 72 8b 42 	e_crorc 4\*cr4\+so,4\*cr4\+eq,4\*cr4\+gt
  78:	7c 00 01 82 	e_crclr lt
  7c:	30 e3 cc 0d 	e_lbz   r7,-13299\(r3\)
  80:	18 e5 00 cc 	e_lbzu  r7,-52\(r5\)
  84:	39 0a 01 ff 	e_lha   r8,511\(r10\)
  88:	19 01 03 ff 	e_lhau  r8,-1\(r1\)
  8c:	58 e0 18 38 	e_lhz   r7,6200\(0\)
  90:	18 e0 01 3e 	e_lhzu  r7,62\(0\)
  94:	70 06 1b 33 	e_li    r0,209715
  98:	70 26 e3 33 	e_lis   r1,13107
  9c:	18 a3 08 18 	e_lmw   r5,24\(r3\)
  a0:	50 a3 27 28 	e_lwz   r5,10024\(r3\)
  a4:	18 c2 02 72 	e_lwzu  r6,114\(r2\)
  a8:	7c 98 00 20 	e_mcrf  cr1,cr6
  ac:	19 2a a0 37 	e_mulli r9,r10,55
  b0:	70 01 a6 68 	e_mull2i r1,1640
  b4:	70 a4 c3 45 	e_or2i  r5,9029
  b8:	70 b4 d3 45 	e_or2is r5,41797
  bc:	19 27 d8 37 	e_ori\.  r7,r9,55
  c0:	19 07 d1 37 	e_ori   r7,r8,14080
  c4:	7e d2 02 30 	e_rlw   r18,r22,r0
  c8:	7c 48 02 31 	e_rlw\.  r8,r2,r0
  cc:	7c 74 aa 70 	e_rlwi  r20,r3,21
  d0:	7c 62 aa 71 	e_rlwi\. r2,r3,21
  d4:	76 64 6a 1e 	e_rlwimi r4,r19,13,8,15
  d8:	74 24 68 63 	e_rlwinm r4,r1,13,1,17
  dc:	7e 6c 30 70 	e_slwi  r12,r19,6
  e0:	7d 4c a0 71 	e_slwi\. r12,r10,20
  e4:	7c 20 84 70 	e_srwi  r0,r1,16
  e8:	7c 20 5c 71 	e_srwi\. r0,r1,11
  ec:	34 61 55 f0 	e_stb   r3,22000\(r1\)
  f0:	1a 76 04 fc 	e_stbu  r19,-4\(r22\)
  f4:	5c 15 02 9a 	e_sth   r0,666\(r21\)
  f8:	18 37 05 ff 	e_sthu  r1,-1\(r23\)
  fc:	18 03 09 04 	e_stmw  r0,4\(r3\)
 100:	54 60 3f 21 	e_stw   r3,16161\(0\)
 104:	1a c4 06 ee 	e_stwu  r22,-18\(r4\)
 108:	18 15 b2 37 	e_subfic r0,r21,3604480
 10c:	1a c0 bb 37 	e_subfic\. r22,r0,922746880
 110:	18 75 e1 37 	e_xori  r21,r3,14080
 114:	1a 80 e8 37 	e_xori\. r0,r20,55
0+0000118 <middle_label>:
 118:	04 7f       	se_add  r31,r7
 11a:	21 ec       	se_addi r28,31
 11c:	46 10       	se_and  r0,r1
 11e:	47 01       	se_and\. r1,r0
 120:	45 32       	se_andc r2,r3
 122:	2f 14       	se_andi r4,17
 124:	e8 fa       	se_b    118 <middle_label>
 126:	e9 00       	se_bl   126 <middle_label\+0xe>
			126: R_PPC_VLE_REL8	extern_subr
 128:	e7 14       	se_bso  150 <not_end_label>
 12a:	61 2b       	se_bclri r27,18
 12c:	00 06       	se_bctr
 12e:	00 07       	se_bctrl
 130:	63 17       	se_bgeni r7,17
 132:	00 04       	se_blr
 134:	00 05       	se_blrl
 136:	2c 06       	se_bmaski r6,0
 138:	64 10       	se_bseti r0,1
 13a:	66 74       	se_btsti r4,7
 13c:	0c 10       	se_cmp  r0,r1
 13e:	0e cf       	se_cmph r31,r28
 140:	0f 91       	se_cmphl r1,r25
 142:	2b 63       	se_cmpi r3,22
 144:	0d 76       	se_cmpl r6,r7
 146:	22 bc       	se_cmpli r28,12
 148:	00 d1       	se_extsb r1
 14a:	00 f2       	se_extsh r2
 14c:	00 ce       	se_extzb r30
 14e:	00 e8       	se_extzh r24
0+0000150 <not_end_label>:
 150:	00 00       	se_illegal
 152:	00 01       	se_isync
 154:	88 18       	se_lbz  r1,8\(r24\)
 156:	a9 84       	se_lhz  r24,18\(r4\)
 158:	4c f4       	se_li   r4,79
 15a:	cf 60       	se_lwz  r6,60\(r0\)
 15c:	03 07       	se_mfar r7,r8
 15e:	00 a3       	se_mfctr r3
 160:	00 84       	se_mflr r4
 162:	01 0f       	se_mr   r31,r0
 164:	02 2f       	se_mtar r23,r2
 166:	00 b6       	se_mtctr r6
 168:	00 9f       	se_mtlr r31
 16a:	05 43       	se_mullw r3,r4
 16c:	00 38       	se_neg  r24
 16e:	00 29       	se_not  r25
 170:	44 10       	se_or   r0,r1
 172:	00 09       	se_rfci
 174:	00 0a       	se_rfdi
 176:	00 08       	se_rfi
 178:	00 02       	se_sc
 17a:	42 65       	se_slw  r5,r6
 17c:	6c 77       	se_slwi r7,7
 17e:	41 e6       	se_sraw r6,r30
 180:	6a 89       	se_srawi r25,8
 182:	40 0e       	se_srw  r30,r0
 184:	69 9d       	se_srwi r29,25
 186:	9a 02       	se_stb  r0,10\(r2\)
 188:	b6 1e       	se_sth  r1,12\(r30\)
 18a:	d0 7d       	se_stw  r7,0\(r29\)
 18c:	06 21       	se_sub  r1,r2
 18e:	07 ad       	se_subf r29,r26
 190:	25 77       	se_subi r7,24
0+0000192 <end_label>:
 192:	27 29       	se_subi\. r25,19
 194:	e9 c2       	se_bl   118 <middle_label>
 196:	79 ff ff 82 	e_b     118 <middle_label>
 19a:	79 ff fe 67 	e_bl    0 <start_label>
@


1.1
log
@
Add support for PowerPC VLE.

2012-05-14  Catherine Moore  <clm@@codesourcery.com>

	* NEWS:  Mention PowerPC VLE port.

2012-05-14  James Lemke <jwlemke@@codesourcery.com>
	    Catherine Moore  <clm@@codesourcery.com>

	bfd/
	* bfd.c (bfd_lookup_section_flags): Add section parm.
	* ecoff.c (bfd_debug_section): Remove flag_info initializer.
	* elf-bfd.h (bfd_elf_section_data): Move in section_flag_info.
	(bfd_elf_lookup_section_flags): Add section parm.
	* elf32-ppc.c (is_ppc_vle): New function.
	(ppc_elf_modify_segment_map): New function.
	(elf_backend_modify_segment_map): Define.
	(has_vle_insns): New define.
	* elf32-ppc.h (ppc_elf_modify_segment_map): Declare.
	* elflink.c (bfd_elf_lookup_section_flags): Add return value & parm.
	Move in logic to omit / include a section.
	* libbfd-in.h (bfd_link_info): Add section parm.
	(bfd_generic_lookup_section_flags): Likewise.
	* reloc.c (bfd_generic_lookup_section_flags): Likewise.
	* section.c (bfd_section): Move out section_flag_info.
	(BFD_FAKE_SECTION): Remove flag_info initializer.
	* targets.c (_bfd_lookup_section_flags): Add section parm.

2012-05-14  Catherine Moore  <clm@@codesourcery.com>

	bfd/
	* archures.c (bfd_mach_ppc_vle): New.
	* bfd-in2.h: Regenerated.
	* cpu-powerpc.c (bfd_powerpc_archs): New entry for vle.
	* elf32-ppc.c (split16_format_type): New enumeration.
	(ppc_elf_vle_split16): New function.
	(HOWTO): Add entries for R_PPC_VLE relocations.
	(ppc_elf_reloc_type_lookup): Handle PPC_VLE relocations.
	(ppc_elf_section_flags): New function.
	(ppc_elf_lookup_section_flags): New function.
	(ppc_elf_section_processing): New function.
	(ppc_elf_check_relocs): Handle PPC_VLE relocations.
	(ppc_elf_relocation_section): Likewise.
	(elf_backend_lookup_section_flags_hook): Define.
	(elf_backend_section_flags): Define.
	(elf_backend_section_processing): Define.
	* elf32-ppc.h (ppc_elf_section_processing): Declare.
	* libbfd.h: Regenerated.
	* reloc.c (BFD_RELOC_PPC_VLE_REL8, BFD_RELOC_PPC_VLE_REL15,
	BFD_RELOC_PPC_VLE_REL24, BFD_RELOC_PPC_VLE_LO16A,
	BFD_RELOC_PPC_VLE_LO16D, BFD_RELOC_PPC_VLE_HI16A,
	BFD_RELOC_PPC_VLE_HI16D, BFD_RELOC_PPC_VLE_HA16A,
	BFD_RELOC_PPC_VLE_HA16D, BFD_RELOC_PPC_VLE_SDA21,
	BFD_RELOC_PPC_VLE_SDA21_LO, BFD_RELOC_PPC_VLE_SDAREL_LO16A,
	BFD_RELOC_PPC_VLE_SDAREL_LO16D, BFD_RELOC_PPC_VLE_SDAREL_HI16A,
	BFD_RELOC_PPC_VLE_SDAREL_HI16D, BFD_RELOC_PPC_VLE_SDAREL_HA16A,
	BFD_RELOC_PPC_VLE_SDAREL_HA16D): New bfd relocations.

2012-05-14  James Lemke  <jwlemke@@codesourcery.com>

	gas/
	* config/tc-ppc.c (insn_validate): New func of existing code to call..
	(ppc_setup_opcodes): ..from 2 places here.
	Revise for second (VLE) opcode table.
	Add #ifdef'd code to print opcode tables.

2012-05-14  James Lemke  <jwlemke@@codesourcery.com>

	gas/
	* config/tc-ppc.c (ppc_setup_opcodes): Allow out-of-order
	for the VLE conditional branches.

2012-05-14  Catherine Moore  <clm@@codesourcery.com>
            Maciej W. Rozycki  <macro@@codesourcery.com>
	    Rhonda Wittels  <rhonda@@codesourcery.com>

	gas/
	* config/tc-ppc.c (PPC_VLE_SPLIT16A): New macro.
	(PPC_VLE_SPLIT16D): New macro.
	(PPC_VLE_LO16A): New macro.
	(PPC_VLE_LO16D): New macro.
	(PPC_VLE_HI16A): New macro.
	(PPC_VLE_HI16D): New macro.
	(PPC_VLE_HA16A): New macro.
	(PPC_VLE_HA16D): New macro.
	(PPC_APUINFO_VLE): New definition.
	(md_chars_to_number): New function.
	(md_parse_option): Check for combinations of little
	endian and -mvle.
	(md_show_usage): Document -mvle.
	(ppc_arch): Recognize VLE.
	(ppc_mach): Recognize bfd_mach_ppc_vle.
	(ppc_setup_opcodes): Print the opcode table if
	* config/tc-ppc.h (ppc_frag_check): Declare.
	* doc/c-ppc.texi: Document -mvle.
	* NEWS:  Mention PowerPC VLE port.

2012-05-14  Catherine Moore  <clm@@codesourcery.com>

	gas/
	* config/tc-ppc.h (ppc_dw2_line_min_insn_length): Declare.
	(DWARF2_LINE_MIN_INSN_LENGTH): Redefine.
	* config/tc-ppc.c (ppc_dw2_line_min_insn_length): New.
	* dwarf2dbg.c (scale_addr_delta): Handle values of 1
	for DWARF2_LINE_MIN_INSN_LENGTH.

2012-05-14  Catherine Moore  <clm@@codesourcery.com>
            Maciej W. Rozycki  <macro@@codesourcery.com>
	    Rhonda Wittels  <rhonda@@codesourcery.com>

	gas/testsuite/
	* gas/ppc/ppc.exp: Run new tests.
	* gas/ppc/vle-reloc.d: New test.
	* gas/ppc/vle-reloc.s: New test.
	* gas/ppc/vle-simple-1.d: New test.
	* gas/ppc/vle-simple-1.s: New test.
	* gas/ppc/vle-simple-2.d: New test.
	* gas/ppc/vle-simple-2.s: New test.
	* gas/ppc/vle-simple-3.d: New test.
	* gas/ppc/vle-simple-3.s: New test.
	* gas/ppc/vle-simple-4.d: New test.
	* gas/ppc/vle-simple-4.s: New test.
	* gas/ppc/vle-simple-5.d: New test.
	* gas/ppc/vle-simple-5.s: New test.
	* gas/ppc/vle-simple-6.d: New test.
	* gas/ppc/vle-simple-6.s: New test.
	* gas/ppc/vle.d: New test.
	* gas/ppc/vle.s: New test.

2012-05-14  James Lemke  <jwlemke@@codesourcery.com>
	include/elf/
	* ppc.h (SEC_PPC_VLE): Remove.

2012-05-14  Catherine Moore  <clm@@codesourcery.com>
	    James Lemke  <jwlemke@@codesourcery.com>

	include/elf/
	* ppc.h (R_PPC_VLE_REL8): New reloction.
	(R_PPC_VLE_REL15): Likewise.
	(R_PPC_VLE_REL24): Likewise.
	(R_PPC_VLE_LO16A): Likewise.
	(R_PPC_VLE_LO16D): Likewise.
	(R_PPC_VLE_HI16A): Likewise.
	(R_PPC_VLE_HI16D): Likewise.
	(R_PPC_VLE_HA16A): Likewise.
	(R_PPC_VLE_HA16D): Likewise.
	(R_PPC_VLE_SDA21): Likewise.
	(R_PPC_VLE_SDA21_LO): Likewise.
	(R_PPC_VLE_SDAREL_LO16A): Likewise.
	(R_PPC_VLE_SDAREL_LO16D): Likewise.
	(R_PPC_VLE_SDAREL_HI16A): Likewise.
	(R_PPC_VLE_SDAREL_HI16D): Likewise.
	(R_PPC_VLE_SDAREL_HA16A): Likewise.
	(R_PPC_VLE_SDAREL_HA16D): Likewise.
	(SEC_PPC_VLE): Remove.
	(PF_PPC_VLE): New program header flag.
	(SHF_PPC_VLE): New section header flag.
	(vle_opcodes, vle_num_opcodes): New.
	(VLE_OP): New macro.
	(VLE_OP_TO_SEG): New macro.

2012-05-14  Catherine Moore  <clm@@codesourcery.com>
            Maciej W. Rozycki  <macro@@codesourcery.com>
	    Rhonda Wittels  <rhonda@@codesourcery.com>

	include/opcode/
	* ppc.h (PPC_OPCODE_VLE): New definition.
	(PPC_OP_SA): New macro.
	(PPC_OP_SE_VLE): New macro.
	(PPC_OP): Use a variable shift amount.
	(powerpc_operand): Update comments.
	(PPC_OPSHIFT_INV): New macro.
	(PPC_OPERAND_CR): Replace with...
	(PPC_OPERAND_CR_BIT): ...this and
	(PPC_OPERAND_CR_REG): ...this.

2012-05-14  James Lemke  <jwlemke@@codesourcery.com>

	ld/
	* ldlang.c (walk_wild_consider_section): Don't copy section_flag_list.
	Pass it to callback.
	(walk_wild_section_general): Pass section_flag_list to callback.
	(lang_add_section): Add sflag_list parm.
	Move out logic to keep / omit a section & call bfd_lookup_section_flags.
	(output_section_callback_fast): Add sflag_list parm.
	Add new parm to lang_add_section calls.
	(output_section_callback): Likewise.
	(check_section_callback): Add sflag_list parm.
	(lang_place_orphans): Add new parm to lang_add_section calls.
	(gc_section_callback): Add sflag_list parm.
	(find_relro_section_callback): Likewise.
	* ldlang.h (callback_t): Add flag_info parm.
	(lang_add_section): Add sflag_list parm.
	* emultempl/armelf.em (elf32_arm_add_stub_section):
	Add lang_add_section parm.
	* emultempl/beos.em (gld*_place_orphan): Likewise.
	* emultempl/elf32.em (gld*_place_orphan): Likewise.
	* emultempl/hppaelf.em (hppaelf_add_stub_section): Likewise.
	* emultempl/m68hc1xelf.em (m68hc11elf_add_stub_section): Likewise.
	* emultempl/mipself.em (mips_add_stub_section): Likewise.
	* emultempl/mmo.em (mmo_place_orphan): Likewise.
	* emultempl/pe.em (gld_*_place_orphan): Likewise.
	* emultempl/pep.em (gld_*_place_orphan): Likewise.
	* emultempl/ppc64elf.em (ppc_add_stub_section): Likewise.
	* emultempl/spuelf.em (spu_place_special_section): Likewise.
	* emultempl/vms.em (vms_place_orphan): Likewise.

2012-05-14  James Lemke  <jwlemke@@codesourcery.com>

	ld/testsuite/
	* ld-powerpc/powerpc.exp: Create ppceabitests.
	* ld-powerpc/vle-multiseg.s: New.
	* ld-powerpc/vle-multiseg-1.d: New.
	* ld-powerpc/vle-multiseg-1.ld: New.
	* ld-powerpc/vle-multiseg-2.d: New.
	* ld-powerpc/vle-multiseg-2.ld: New.
	* ld-powerpc/vle-multiseg-3.d: New.
	* ld-powerpc/vle-multiseg-3.ld: New.
	* ld-powerpc/vle-multiseg-4.d: New.
	* ld-powerpc/vle-multiseg-4.ld: New.
	* ld-powerpc/vle-multiseg-5.d: New.
	* ld-powerpc/vle-multiseg-5.ld: New.
	* ld-powerpc/vle-multiseg-6.d: New.
	* ld-powerpc/vle-multiseg-6.ld: New.
	* ld-powerpc/vle-multiseg-6a.s: New.
	* ld-powerpc/vle-multiseg-6b.s: New.
	* ld-powerpc/vle-multiseg-6c.s: New.
	* ld-powerpc/vle-multiseg-6d.s: New.
	* ld-powerpc/powerpc.exp: Run new tests.

2012-05-14  Catherine Moore  <clm@@codesourcery.com>

	ld/
	* NEWS:  Mention PowerPC VLE port.

2012-05-14  Catherine Moore  <clm@@codesourcery.com>

	ld/testsuite/
	* ld-powerpc/apuinfo.rd: Update for VLE.
	* ld-powerpc/vle-reloc-1.d: New.
	* ld-powerpc/vle-reloc-1.s: New.
	* ld-powerpc/vle-reloc-2.d: New.
	* ld-powerpc/vle-reloc-2.s: New.
	* ld-powerpc/vle-reloc-3.d: New.
	* ld-powerpc/vle-reloc-3.s: New.
	* ld-powerpc/vle-reloc-def-1.s: New.
	* ld-powerpc/vle-reloc-def-2.s: New.
	* ld-powerpc/vle-reloc-def-3.s: New.

2012-05-14  James Lemke  <jwlemke@@codesourcery.com>

	opcodes/
	* ppc-dis.c (get_powerpc_dialect): Use is_ppc_vle.
	(PPC_OPCD_SEGS, VLE_OPCD_SEGS): New defines.
	(vle_opcd_indices): New array.
	(lookup_vle): New function.
	(disassemble_init_powerpc): Revise for second (VLE) opcode table.
	(print_insn_powerpc): Likewise.
	* ppc-opc.c: Likewise.

2012-05-14  Catherine Moore  <clm@@codesourcery.com>
            Maciej W. Rozycki  <macro@@codesourcery.com>
	    Rhonda Wittels  <rhonda@@codesourcery.com>
	    Nathan Froyd <froydnj@@codesourcery.com>

	opcodes/
	* ppc-opc.c (insert_arx, extract_arx): New functions.
	(insert_ary, extract_ary): New functions.
	(insert_li20, extract_li20): New functions.
	(insert_rx, extract_rx): New functions.
	(insert_ry, extract_ry): New functions.
	(insert_sci8, extract_sci8): New functions.
	(insert_sci8n, extract_sci8n): New functions.
	(insert_sd4h, extract_sd4h): New functions.
	(insert_sd4w, extract_sd4w): New functions.
	(insert_vlesi, extract_vlesi): New functions.
	(insert_vlensi, extract_vlensi): New functions.
	(insert_vleui, extract_vleui): New functions.
	(insert_vleil, extract_vleil): New functions.
 	(BI_MASK, BB_MASK, BT): Use PPC_OPERAND_CR_BIT.
 	(BI16, BI32, BO32, B8): New.
	(B15, B24, CRD32, CRS): New.
 	(CRD, OBF, BFA, CR, CRFS): Use PPC_OPERAND_CR_REG.
	(DB, IMM20, RD, Rx, ARX, RY, RZ): New.
	(ARY, SCLSCI8, SCLSCI8N, SE_SD, SE_SDH): New.
	(SH6_MASK): Use PPC_OPSHIFT_INV.
	(SI8, UI5, OIMM5, UI7, BO16): New.
	(VLESIMM, VLENSIMM, VLEUIMM, VLEUIMML): New.
	(XT6, XA6, XB6, XB6S, XC6): Use PPC_OPSHIFT_INV.
	(ALLOW8_SPRG): New.
	(insert_sprg, extract_sprg): Check ALLOW8_SPRG.
	(OPVUP, OPVUP_MASK OPVUP): New
	(BD8, BD8_MASK, BD8IO, BD8IO_MASK): New.
	(EBD8IO, EBD8IO1_MASK, EBD8IO2_MASK, EBD8IO3_MASK): New.
	(BD15, BD15_MASK, EBD15, EBD15_MASK, EBD15BI, EBD15BI_MASK): New.
	(BD24,BD24_MASK, C_LK, C_LK_MASK, C, C_MASK): New.
 	(IA16, IA16_MASK, I16A, I16A_MASK, I16L, I16L_MASK): New.
	(IM7, IM7_MASK, LI20, LI20_MASK, SCI8, SCI8_MASK): New.
	(SCI8BF, SCI8BF_MASK, SD4, SD4_MASK): New.
	(SE_IM5, SE_IM5_MASK): New.
	(SE_R, SE_R_MASK, SE_RR, SE_RR_MASK): New.
	(EX, EX_MASK, BO16F, BO16T, BO32F, BO32T): New.
	(BO32DNZ, BO32DZ): New.
	(NO371, PPCSPE, PPCISEL, PPCEFS, MULHW): Include PPC_OPCODE_VLE.
	(PPCVLE): New.
	(powerpc_opcodes): Add new VLE instructions.  Update existing
	instruction to include PPCVLE if supported.
	* ppc-dis.c (ppc_opts): Add vle entry.
	(get_powerpc_dialect): New function.
	(powerpc_init_dialect): VLE support.
	(print_insn_big_powerpc): Call get_powerpc_dialect.
	(print_insn_little_powerpc): Likewise.
	(operand_value_powerpc): Handle negative shift counts.
	(print_insn_powerpc): Handle 2-byte instruction lengths.
@
text
@d1 1
a1 1
#as: -mvle
@

