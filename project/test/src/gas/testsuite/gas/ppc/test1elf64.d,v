head	1.8;
access;
symbols
	binutils-2_24-branch:1.8.0.2
	binutils-2_24-branchpoint:1.8
	binutils-2_21_1:1.5
	binutils-2_23_2:1.6.2.1
	binutils-2_23_1:1.6
	binutils-2_23:1.6
	binutils-2_23-branch:1.6.0.2
	binutils-2_23-branchpoint:1.6
	binutils-2_22_branch:1.5.0.28
	binutils-2_22:1.5
	binutils-2_22-branch:1.5.0.26
	binutils-2_22-branchpoint:1.5
	binutils-2_21:1.5
	binutils-2_21-branch:1.5.0.24
	binutils-2_21-branchpoint:1.5
	binutils-2_20_1:1.5
	binutils-2_20:1.5
	binutils-arc-20081103-branch:1.5.0.22
	binutils-arc-20081103-branchpoint:1.5
	binutils-2_20-branch:1.5.0.20
	binutils-2_20-branchpoint:1.5
	dje-cgen-play1-branch:1.5.0.18
	dje-cgen-play1-branchpoint:1.5
	arc-20081103-branch:1.5.0.16
	arc-20081103-branchpoint:1.5
	binutils-2_19_1:1.5
	binutils-2_19:1.5
	binutils-2_19-branch:1.5.0.14
	binutils-2_19-branchpoint:1.5
	binutils-2_18:1.5
	binutils-2_18-branch:1.5.0.12
	binutils-2_18-branchpoint:1.5
	binutils-csl-coldfire-4_1-32:1.5
	binutils-csl-sourcerygxx-4_1-32:1.5
	binutils-csl-innovasic-fido-3_4_4-33:1.5
	binutils-csl-sourcerygxx-3_4_4-32:1.5
	binutils-csl-coldfire-4_1-30:1.5
	binutils-csl-sourcerygxx-4_1-30:1.5
	binutils-csl-coldfire-4_1-28:1.5
	binutils-csl-sourcerygxx-4_1-29:1.5
	binutils-csl-sourcerygxx-4_1-28:1.5
	binutils-csl-arm-2006q3-27:1.5
	binutils-csl-sourcerygxx-4_1-27:1.5
	binutils-csl-arm-2006q3-26:1.5
	binutils-csl-sourcerygxx-4_1-26:1.5
	binutils-csl-sourcerygxx-4_1-25:1.5
	binutils-csl-sourcerygxx-4_1-24:1.5
	binutils-csl-sourcerygxx-4_1-23:1.5
	binutils-csl-sourcerygxx-4_1-21:1.5
	binutils-csl-arm-2006q3-21:1.5
	binutils-csl-sourcerygxx-4_1-22:1.5
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.5
	binutils-csl-sourcerygxx-4_1-20:1.5
	binutils-csl-arm-2006q3-19:1.5
	binutils-csl-sourcerygxx-4_1-19:1.5
	binutils-csl-sourcerygxx-4_1-18:1.5
	binutils-csl-renesas-4_1-9:1.5
	binutils-csl-sourcerygxx-3_4_4-25:1.5
	binutils-csl-renesas-4_1-8:1.5
	binutils-csl-renesas-4_1-7:1.5
	binutils-csl-renesas-4_1-6:1.5
	binutils-csl-sourcerygxx-4_1-17:1.5
	binutils-csl-sourcerygxx-4_1-14:1.5
	binutils-csl-sourcerygxx-4_1-15:1.5
	binutils-csl-sourcerygxx-4_1-13:1.5
	binutils-2_17:1.5
	binutils-csl-sourcerygxx-4_1-12:1.5
	binutils-csl-sourcerygxx-3_4_4-21:1.5
	binutils-csl-wrs-linux-3_4_4-24:1.5
	binutils-csl-wrs-linux-3_4_4-23:1.5
	binutils-csl-sourcerygxx-4_1-9:1.5
	binutils-csl-sourcerygxx-4_1-8:1.5
	binutils-csl-sourcerygxx-4_1-7:1.5
	binutils-csl-arm-2006q1-6:1.5
	binutils-csl-sourcerygxx-4_1-6:1.5
	binutils-csl-wrs-linux-3_4_4-22:1.5
	binutils-csl-coldfire-4_1-11:1.5
	binutils-csl-sourcerygxx-3_4_4-19:1.5
	binutils-csl-coldfire-4_1-10:1.5
	binutils-csl-sourcerygxx-4_1-5:1.5
	binutils-csl-sourcerygxx-4_1-4:1.5
	binutils-csl-wrs-linux-3_4_4-21:1.5
	binutils-csl-morpho-4_1-4:1.5
	binutils-csl-sourcerygxx-3_4_4-17:1.5
	binutils-csl-wrs-linux-3_4_4-20:1.5
	binutils-2_17-branch:1.5.0.10
	binutils-2_17-branchpoint:1.5
	binutils-csl-2_17-branch:1.5.0.8
	binutils-csl-2_17-branchpoint:1.5
	binutils-csl-gxxpro-3_4-branch:1.5.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.5
	binutils-2_16_1:1.5
	binutils-csl-arm-2005q1b:1.5
	binutils-2_16:1.5
	binutils-csl-arm-2005q1a:1.5
	binutils-csl-arm-2005q1-branch:1.5.0.4
	binutils-csl-arm-2005q1-branchpoint:1.5
	binutils-2_16-branch:1.5.0.2
	binutils-2_16-branchpoint:1.5
	csl-arm-2004-q3d:1.3
	csl-arm-2004-q3:1.3
	binutils-2_15:1.2.12.1
	binutils-2_15-branchpoint:1.2
	csl-arm-2004-q1a:1.3
	csl-arm-2004-q1:1.3
	binutils-2_15-branch:1.2.0.12
	cagney_bfdfile-20040213-branch:1.2.0.10
	cagney_bfdfile-20040213-branchpoint:1.2
	cagney_bigcore-20040122-branch:1.2.0.8
	cagney_bigcore-20040122-branchpoint:1.2
	csl-arm-2003-q4:1.2
	binutils-2_14:1.2
	binutils-2_14-branch:1.2.0.6
	binutils-2_14-branchpoint:1.2
	binutils-2_13_2_1:1.2
	binutils-2_13_2:1.2
	binutils-2_13_1:1.2
	binutils-2_13:1.2
	binutils-2_13-branchpoint:1.2
	binutils-2_13-branch:1.2.0.4
	binutils-2_12_1:1.2
	binutils-2_12:1.2
	binutils-2_12-branch:1.2.0.2
	binutils-2_12-branchpoint:1.2
	cygnus_cvs_20020108_pre:1.1
	binutils_latest_snapshot:1.8;
locks; strict;
comment	@# @;


1.8
date	2012.11.14.13.44.45;	author uweigand;	state Exp;
branches;
next	1.7;

1.7
date	2012.10.29.09.25.15;	author amodra;	state Exp;
branches;
next	1.6;

1.6
date	2012.05.14.02.40.00;	author hjl;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	2005.03.02.13.25.01;	author amodra;	state Exp;
branches;
next	1.4;

1.4
date	2004.12.11.04.32.36;	author amodra;	state Exp;
branches;
next	1.3;

1.3
date	2004.03.16.00.58.42;	author amodra;	state Exp;
branches;
next	1.2;

1.2
date	2002.02.05.03.35.19;	author amodra;	state Exp;
branches
	1.2.12.1;
next	1.1;

1.1
date	2001.08.27.10.51.20;	author amodra;	state Exp;
branches;
next	;

1.6.2.1
date	2013.01.21.13.48.46;	author amodra;	state Exp;
branches;
next	;

1.2.12.1
date	2004.03.16.00.59.35;	author amodra;	state Exp;
branches;
next	;


desc
@@


1.8
log
@gas/ChangeLog:

	* config/tc-ppc.c (md_apply_fix): Leave field zero when emitting
	an ELF reloc on data as well.

gas/testsuite/ChangeLog:

	* gas/ppc/astest.d: Update for fixup changes.
	* gas/ppc/astest64.d: Likewise.
	* gas/ppc/astest2.d: Likewise.
	* gas/ppc/astest2_64.d: Likewise.
	* gas/ppc/test1elf32.d: Likewise.
	* gas/ppc/test1elf64.d: Likewise.
@
text
@#objdump: -Drx
#name: PowerPC Test 1, 64 bit elf

.*
.*
architecture: powerpc:common64, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x0000000000000000

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 \.text         00000090  0000000000000000  0000000000000000  .*
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 \.data         00000030  0000000000000000  0000000000000000  .*
                  CONTENTS, ALLOC, LOAD, RELOC, DATA
  2 \.bss          00000000  0000000000000000  0000000000000000  .*
                  ALLOC
  3 \.toc          00000030  0000000000000000  0000000000000000  .*
                  CONTENTS, ALLOC, LOAD, RELOC, DATA
SYMBOL TABLE:
0000000000000000 l    d  \.text	0000000000000000 (|\.text)
0000000000000000 l    d  \.data	0000000000000000 (|\.data)
0000000000000000 l    d  \.bss	0000000000000000 (|\.bss)
0000000000000000 l       \.data	0000000000000000 dsym0
0000000000000008 l       \.data	0000000000000000 dsym1
0000000000000000 l    d  \.toc	0000000000000000 (|\.toc)
0000000000000008 l       \.data	0000000000000000 usym0
0000000000000010 l       \.data	0000000000000000 usym1
0000000000000010 l       \.data	0000000000000000 datpt
0000000000000014 l       \.data	0000000000000000 dat0
0000000000000018 l       \.data	0000000000000000 dat1
000000000000001c l       \.data	0000000000000000 dat2
0000000000000020 l       \.data	0000000000000000 dat3
0000000000000028 l       \.data	0000000000000000 dat4
0000000000000000         \*UND\*	0000000000000000 esym0
0000000000000000         \*UND\*	0000000000000000 esym1
0000000000000000         \*UND\*	0000000000000000 jk


Disassembly of section \.text:

0000000000000000 <\.text>:
   0:	(e8 63 00 00|00 00 63 e8) 	ld      r3,0\(r3\)
			(2|0): R_PPC64_ADDR16_LO_DS	\.data
   4:	(e8 63 00 0.|0. 00 63 e8) 	ld      r3,.\(r3\)
			(6|4): R_PPC64_ADDR16_LO_DS	\.data\+0x8
   8:	(e8 63 00 0.|0. 00 63 e8) 	ld      r3,.\(r3\)
			(a|8): R_PPC64_ADDR16_LO_DS	\.data\+0x8
   c:	(e8 63 00 .0|.0 00 63 e8) 	ld      r3,.*\(r3\)
			(e|c): R_PPC64_ADDR16_LO_DS	\.data\+0x10
  10:	(e8 63 00 00|00 00 63 e8) 	ld      r3,0\(r3\)
			1(0|2): R_PPC64_ADDR16_LO_DS	esym0
  14:	(e8 63 00 00|00 00 63 e8) 	ld      r3,0\(r3\)
			1(6|4): R_PPC64_ADDR16_LO_DS	esym1
  18:	(e8 62 00 00|00 00 62 e8) 	ld      r3,0\(r2\)
			1(a|8): R_PPC64_TOC16_DS	\.toc
  1c:	(e8 62 00 0.|0. 00 62 e8) 	ld      r3,.\(r2\)
			1(e|c): R_PPC64_TOC16_DS	\.toc\+0x8
  20:	(e8 62 00 .0|.0 00 62 e8) 	ld      r3,.*\(r2\)
			2(2|0): R_PPC64_TOC16_DS	\.toc\+0x10
  24:	(e8 62 00 ..|.. 00 62 e8) 	ld      r3,.*\(r2\)
			2(6|4): R_PPC64_TOC16_DS	\.toc\+0x18
  28:	(e8 62 00 .0|.0 00 62 e8) 	ld      r3,.*\(r2\)
			2(a|8): R_PPC64_TOC16_DS	\.toc\+0x20
  2c:	(e8 62 00 ..|.. 00 62 e8) 	ld      r3,.*\(r2\)
			2(e|c): R_PPC64_TOC16_DS	\.toc\+0x28
  30:	(3c 80 00 ..|.. 00 80 3c) 	lis     r4,.*
			3(2|0): R_PPC64_TOC16_HA	\.toc\+0x28
  34:	(e8 62 00 ..|.. 00 62 e8) 	ld      r3,.*\(r2\)
			3(6|4): R_PPC64_TOC16_LO_DS	\.toc\+0x28
  38:	(38 60 00 08|08 00 60 38) 	li      r3,8
  3c:	(38 60 ff f8|f8 ff 60 38) 	li      r3,-8
  40:	(38 60 00 08|08 00 60 38) 	li      r3,8
  44:	(38 60 ff f8|f8 ff 60 38) 	li      r3,-8
  48:	(38 60 ff f8|f8 ff 60 38) 	li      r3,-8
  4c:	(38 60 00 08|08 00 60 38) 	li      r3,8
  50:	(38 60 00 00|00 00 60 38) 	li      r3,0
			5(2|0): R_PPC64_ADDR16_LO	\.data
  54:	(38 60 00 00|00 00 60 38) 	li      r3,0
			5(6|4): R_PPC64_ADDR16_HI	\.data
  58:	(38 60 00 00|00 00 60 38) 	li      r3,0
			5(a|8): R_PPC64_ADDR16_HA	\.data
  5c:	(38 60 00 00|00 00 60 38) 	li      r3,0
			5(e|c): R_PPC64_ADDR16_HIGHER	\.data
  60:	(38 60 00 00|00 00 60 38) 	li      r3,0
			6(2|0): R_PPC64_ADDR16_HIGHERA	\.data
  64:	(38 60 00 00|00 00 60 38) 	li      r3,0
			6(6|4): R_PPC64_ADDR16_HIGHEST	\.data
  68:	(38 60 00 00|00 00 60 38) 	li      r3,0
			6(a|8): R_PPC64_ADDR16_HIGHESTA	\.data
  6c:	(38 60 ff f8|f8 ff 60 38) 	li      r3,-8
  70:	(38 60 ff ff|ff ff 60 38) 	li      r3,-1
  74:	(38 60 00 00|00 00 60 38) 	li      r3,0
  78:	(38 60 ff ff|ff ff 60 38) 	li      r3,-1
  7c:	(38 60 00 00|00 00 60 38) 	li      r3,0
  80:	(38 60 ff ff|ff ff 60 38) 	li      r3,-1
  84:	(38 60 00 00|00 00 60 38) 	li      r3,0
  88:	(e8 64 00 08|08 00 64 e8) 	ld      r3,8\(r4\)
  8c:	(e8 60 00 00|00 00 60 e8) 	ld      r3,0\(0\)
			8(e|c): R_PPC64_ADDR16_LO_DS	\.text
Disassembly of section \.data:

0000000000000000 <dsym0>:
   0:	(00 00 00 00|ef be ad de) .*
   4:	(de ad be ef|00 00 00 00) .*

0000000000000008 <dsym1>:
   8:	(00 00 00 00|be ba fe ca) .*
   c:	(ca fe ba be|00 00 00 00) .*

0000000000000010 <datpt>:
  10:	00 00 00 00 .*
			10: R_PPC64_REL32	jk\+0x989680

0000000000000014 <dat0>:
  14:	00 00 00 00 .*
			14: R_PPC64_REL32	jk-0x4

0000000000000018 <dat1>:
  18:	00 00 00 00 .*
			18: R_PPC64_REL32	jk

000000000000001c <dat2>:
  1c:	00 00 00 00 .*
			1c: R_PPC64_REL32	jk\+0x4

0000000000000020 <dat3>:
	\.\.\.
			20: R_PPC64_REL64	jk\+0x8

0000000000000028 <dat4>:
	\.\.\.
			28: R_PPC64_REL64	jk\+0x10
Disassembly of section \.toc:

0000000000000000 <\.toc>:
#...
			0: R_PPC64_ADDR64	\.data
#...
			8: R_PPC64_ADDR64	\.data\+0x8
#...
			10: R_PPC64_ADDR64	\.data\+0x8
#...
			18: R_PPC64_ADDR64	\.data\+0x10
#...
			20: R_PPC64_ADDR64	esym0
			28: R_PPC64_ADDR64	esym1
@


1.7
log
@	* gas/cfi/cfi.exp: Remove redundant ppc test.  Exclude
	powerpc-pe targets from cfi-common-6 test.
	* gas/cfi/cfi-ppc-1.d: Use objdump to handle pe.
	* gas/cfi/cfi-ppc-1.s: Don't use .type and .size.
	* gas/ppc/ppc.exp: Exclude various tests for powerpc-pe.  Exclude
	vle tests for le targets.
	* gas/ppc/476.d, * gas/ppc/476.s: Update for le output.  Use .text
	rather than section directive with quotes.
	* gas/ppc/a2.d,	* gas/ppc/a2.s: Likewise.
	* gas/ppc/altivec.d, * gas/ppc/altivec.s: Likewise.
	* gas/ppc/altivec2.d: Likewise.
	* gas/ppc/altivec_and_spe.d: Likewise.
	* gas/ppc/astest.d: Likewise.
	* gas/ppc/astest2.d: Likewise.
	* gas/ppc/astest2_64.d: Likewise.
	* gas/ppc/astest64.d: Likewise.
	* gas/ppc/booke.d, * gas/ppc/booke.s: Likewise.
	* gas/ppc/cell.d, * gas/ppc/cell.s: Likewise.
	* gas/ppc/common.d, * gas/ppc/common.s: Likewise.
	* gas/ppc/e500.d, * gas/ppc/e500.s: Likewise.
	* gas/ppc/e500mc.d, * gas/ppc/e500mc.s: Likewise.
	* gas/ppc/e500mc64_nop.d, * gas/ppc/e500mc64_nop.s: Likewise.
	* gas/ppc/e5500_nop.d, * gas/ppc/e5500_nop.s: Likewise.
	* gas/ppc/e6500.d, * gas/ppc/e6500.s: Likewise.
	* gas/ppc/e6500_nop.d, * gas/ppc/e6500_nop.s: Likewise.
	* gas/ppc/machine.d: Likewise.
	* gas/ppc/power4.d, * gas/ppc/power4.s: Likewise.
	* gas/ppc/power4_32.d, * gas/ppc/power4_32.s: Likewise.
	* gas/ppc/power6.d, * gas/ppc/power6.s: Likewise.
	* gas/ppc/power7.d, * gas/ppc/power7.s: Likewise.
	* gas/ppc/ppc750ps.d, * gas/ppc/ppc750ps.s: Likewise.
	* gas/ppc/regnames.d: Likewise.
	* gas/ppc/simpshft.d: Likewise.
	* gas/ppc/test1elf32.d: Likewise.
	* gas/ppc/test1elf64.d: Likewise.
	* gas/ppc/titan.d, * gas/ppc/titan.s: Likewise.
	* gas/ppc/vle-reloc.s: Likewise.
	* gas/ppc/vle-simple-1.s: Likewise.
	* gas/ppc/vle-simple-2.s: Likewise.
	* gas/ppc/vle-simple-3.s: Likewise.
	* gas/ppc/vle-simple-4.s: Likewise.
	* gas/ppc/vle-simple-5.s: Likewise.
	* gas/ppc/vle-simple-6.s: Likewise.
	* gas/ppc/vle.s: Likewise.
	* gas/ppc/vsx.d, * gas/ppc/vsx.s: Likewise.
@
text
@d112 1
a112 1
  10:	(00 98 96 80|80 96 98 00) .*
d116 1
a116 1
  14:	(ff ff ff fc|fc ff ff ff) .*
d124 1
a124 1
  1c:	(00 00 00 04|04 00 00 00) .*
d128 1
a128 1
  20:	(00 00 00 00|08 00 00 00) .*
a129 1
  24:	(00 00 00 08|00 00 00 00) .*
d132 1
a132 1
  28:	(00 00 00 00|10 00 00 00) .*
a133 1
  2c:	(00 00 00 10|00 00 00 00) .*
@


1.6
log
@Print addend as signed in objdump

binutils/

	* objdump.c (disassemble_bytes): Print addend as signed.
	(dump_reloc_set): Likewise.

gas/testsuite/

	* gas/all/fwdexp.d: Expect addend as signed.
	* gas/alpha/elf-reloc-1.d: Likewise.
	* gas/i386/mixed-mode-reloc64.d: Likewise.
	* gas/i386/reloc64.d: Likewise.
	* gas/i386/ilp32/mixed-mode-reloc64.d: Expect addend as signed.
	* gas/i386/ilp32/reloc64.d: Likewise.
	* gas/ia64/pcrel.d: Likewise.
	* gas/mips/branch-misc-2-64.d: Likewise.
	* gas/mips/branch-misc-2pic-64.d: Likewise.
	* gas/mips/branch-misc-4-64.d: Likewise.
	* gas/mips/ldstla-n64-sym32.d: Likewise.
	* gas/mips/micromips@@branch-misc-2-64.d: Likewise.
	* gas/mips/micromips@@branch-misc-2pic-64.d: Likewise.
	* gas/mips/micromips@@branch-misc-4-64.d: Likewise.
	* gas/mips/mips16-hilo-n32.d: Likewise.
	* gas/ppc/astest.d: Likewise.
	* gas/ppc/astest2.d: Likewise.
	* gas/ppc/astest2_64.d: Likewise.
	* gas/ppc/astest64.d: Likewise.
	* gas/ppc/test1elf32.d: Likewise.
	* gas/ppc/test1elf64.d: Likewise.
	* gas/sparc/reloc64.d: Likewise.
@
text
@d4 1
a4 1
.*: +file format elf64-powerpc
d43 58
a100 58
   0:	e8 63 00 00 	ld      r3,0\(r3\)
			2: R_PPC64_ADDR16_LO_DS	\.data
   4:	e8 63 00 08 	ld      r3,8\(r3\)
			6: R_PPC64_ADDR16_LO_DS	\.data\+0x8
   8:	e8 63 00 08 	ld      r3,8\(r3\)
			a: R_PPC64_ADDR16_LO_DS	\.data\+0x8
   c:	e8 63 00 10 	ld      r3,16\(r3\)
			e: R_PPC64_ADDR16_LO_DS	\.data\+0x10
  10:	e8 63 00 00 	ld      r3,0\(r3\)
			12: R_PPC64_ADDR16_LO_DS	esym0
  14:	e8 63 00 00 	ld      r3,0\(r3\)
			16: R_PPC64_ADDR16_LO_DS	esym1
  18:	e8 62 00 00 	ld      r3,0\(r2\)
			1a: R_PPC64_TOC16_DS	\.toc
  1c:	e8 62 00 08 	ld      r3,8\(r2\)
			1e: R_PPC64_TOC16_DS	\.toc\+0x8
  20:	e8 62 00 10 	ld      r3,16\(r2\)
			22: R_PPC64_TOC16_DS	\.toc\+0x10
  24:	e8 62 00 18 	ld      r3,24\(r2\)
			26: R_PPC64_TOC16_DS	\.toc\+0x18
  28:	e8 62 00 20 	ld      r3,32\(r2\)
			2a: R_PPC64_TOC16_DS	\.toc\+0x20
  2c:	e8 62 00 28 	ld      r3,40\(r2\)
			2e: R_PPC64_TOC16_DS	\.toc\+0x28
  30:	3c 80 00 28 	lis     r4,40
			32: R_PPC64_TOC16_HA	\.toc\+0x28
  34:	e8 62 00 28 	ld      r3,40\(r2\)
			36: R_PPC64_TOC16_LO_DS	\.toc\+0x28
  38:	38 60 00 08 	li      r3,8
  3c:	38 60 ff f8 	li      r3,-8
  40:	38 60 00 08 	li      r3,8
  44:	38 60 ff f8 	li      r3,-8
  48:	38 60 ff f8 	li      r3,-8
  4c:	38 60 00 08 	li      r3,8
  50:	38 60 00 00 	li      r3,0
			52: R_PPC64_ADDR16_LO	\.data
  54:	38 60 00 00 	li      r3,0
			56: R_PPC64_ADDR16_HI	\.data
  58:	38 60 00 00 	li      r3,0
			5a: R_PPC64_ADDR16_HA	\.data
  5c:	38 60 00 00 	li      r3,0
			5e: R_PPC64_ADDR16_HIGHER	\.data
  60:	38 60 00 00 	li      r3,0
			62: R_PPC64_ADDR16_HIGHERA	\.data
  64:	38 60 00 00 	li      r3,0
			66: R_PPC64_ADDR16_HIGHEST	\.data
  68:	38 60 00 00 	li      r3,0
			6a: R_PPC64_ADDR16_HIGHESTA	\.data
  6c:	38 60 ff f8 	li      r3,-8
  70:	38 60 ff ff 	li      r3,-1
  74:	38 60 00 00 	li      r3,0
  78:	38 60 ff ff 	li      r3,-1
  7c:	38 60 00 00 	li      r3,0
  80:	38 60 ff ff 	li      r3,-1
  84:	38 60 00 00 	li      r3,0
  88:	e8 64 00 08 	ld      r3,8\(r4\)
  8c:	e8 60 00 00 	ld      r3,0\(0\)
			8e: R_PPC64_ADDR16_LO_DS	\.text
d104 2
a105 2
   0:	00 00 00 00 	\.long 0x0
   4:	de ad be ef 	stfdu   f21,-16657\(r13\)
d108 2
a109 2
   8:	00 00 00 00 	\.long 0x0
   c:	ca fe ba be 	lfd     f23,-17730\(r30\)
d112 1
a112 1
  10:	00 98 96 80 	\.long 0x989680
d116 1
a116 1
  14:	ff ff ff fc 	fnmsub  f31,f31,f31,f31
d120 1
a120 1
  18:	00 00 00 00 	\.long 0x0
d124 1
a124 1
  1c:	00 00 00 04 	\.long 0x4
d128 1
a128 1
  20:	00 00 00 00 	\.long 0x0
d130 1
a130 1
  24:	00 00 00 08 	\.long 0x8
d133 1
a133 1
  28:	00 00 00 00 	\.long 0x0
d135 1
a135 1
  2c:	00 00 00 10 	\.long 0x10
d139 1
a139 1
	\.\.\.
d141 1
d143 1
a143 2
   c:	00 00 00 08 	\.long 0x8
  10:	00 00 00 00 	\.long 0x0
d145 1
a145 2
  14:	00 00 00 08 	\.long 0x8
  18:	00 00 00 00 	\.long 0x0
d147 1
a147 2
  1c:	00 00 00 10 	\.long 0x10
	\.\.\.
@


1.6.2.1
log
@	PR 12549
	PR 14493
	PR 14567
	PR 14662
	PR 14758
	PR 14813
	PR 14904
	PR 14915
	PR 14926
	PR 14950
	PR 14962
	Apply mainline patches
@
text
@d4 1
a4 1
.*
d43 58
a100 58
   0:	(e8 63 00 00|00 00 63 e8) 	ld      r3,0\(r3\)
			(2|0): R_PPC64_ADDR16_LO_DS	\.data
   4:	(e8 63 00 0.|0. 00 63 e8) 	ld      r3,.\(r3\)
			(6|4): R_PPC64_ADDR16_LO_DS	\.data\+0x8
   8:	(e8 63 00 0.|0. 00 63 e8) 	ld      r3,.\(r3\)
			(a|8): R_PPC64_ADDR16_LO_DS	\.data\+0x8
   c:	(e8 63 00 .0|.0 00 63 e8) 	ld      r3,.*\(r3\)
			(e|c): R_PPC64_ADDR16_LO_DS	\.data\+0x10
  10:	(e8 63 00 00|00 00 63 e8) 	ld      r3,0\(r3\)
			1(0|2): R_PPC64_ADDR16_LO_DS	esym0
  14:	(e8 63 00 00|00 00 63 e8) 	ld      r3,0\(r3\)
			1(6|4): R_PPC64_ADDR16_LO_DS	esym1
  18:	(e8 62 00 00|00 00 62 e8) 	ld      r3,0\(r2\)
			1(a|8): R_PPC64_TOC16_DS	\.toc
  1c:	(e8 62 00 0.|0. 00 62 e8) 	ld      r3,.\(r2\)
			1(e|c): R_PPC64_TOC16_DS	\.toc\+0x8
  20:	(e8 62 00 .0|.0 00 62 e8) 	ld      r3,.*\(r2\)
			2(2|0): R_PPC64_TOC16_DS	\.toc\+0x10
  24:	(e8 62 00 ..|.. 00 62 e8) 	ld      r3,.*\(r2\)
			2(6|4): R_PPC64_TOC16_DS	\.toc\+0x18
  28:	(e8 62 00 .0|.0 00 62 e8) 	ld      r3,.*\(r2\)
			2(a|8): R_PPC64_TOC16_DS	\.toc\+0x20
  2c:	(e8 62 00 ..|.. 00 62 e8) 	ld      r3,.*\(r2\)
			2(e|c): R_PPC64_TOC16_DS	\.toc\+0x28
  30:	(3c 80 00 ..|.. 00 80 3c) 	lis     r4,.*
			3(2|0): R_PPC64_TOC16_HA	\.toc\+0x28
  34:	(e8 62 00 ..|.. 00 62 e8) 	ld      r3,.*\(r2\)
			3(6|4): R_PPC64_TOC16_LO_DS	\.toc\+0x28
  38:	(38 60 00 08|08 00 60 38) 	li      r3,8
  3c:	(38 60 ff f8|f8 ff 60 38) 	li      r3,-8
  40:	(38 60 00 08|08 00 60 38) 	li      r3,8
  44:	(38 60 ff f8|f8 ff 60 38) 	li      r3,-8
  48:	(38 60 ff f8|f8 ff 60 38) 	li      r3,-8
  4c:	(38 60 00 08|08 00 60 38) 	li      r3,8
  50:	(38 60 00 00|00 00 60 38) 	li      r3,0
			5(2|0): R_PPC64_ADDR16_LO	\.data
  54:	(38 60 00 00|00 00 60 38) 	li      r3,0
			5(6|4): R_PPC64_ADDR16_HI	\.data
  58:	(38 60 00 00|00 00 60 38) 	li      r3,0
			5(a|8): R_PPC64_ADDR16_HA	\.data
  5c:	(38 60 00 00|00 00 60 38) 	li      r3,0
			5(e|c): R_PPC64_ADDR16_HIGHER	\.data
  60:	(38 60 00 00|00 00 60 38) 	li      r3,0
			6(2|0): R_PPC64_ADDR16_HIGHERA	\.data
  64:	(38 60 00 00|00 00 60 38) 	li      r3,0
			6(6|4): R_PPC64_ADDR16_HIGHEST	\.data
  68:	(38 60 00 00|00 00 60 38) 	li      r3,0
			6(a|8): R_PPC64_ADDR16_HIGHESTA	\.data
  6c:	(38 60 ff f8|f8 ff 60 38) 	li      r3,-8
  70:	(38 60 ff ff|ff ff 60 38) 	li      r3,-1
  74:	(38 60 00 00|00 00 60 38) 	li      r3,0
  78:	(38 60 ff ff|ff ff 60 38) 	li      r3,-1
  7c:	(38 60 00 00|00 00 60 38) 	li      r3,0
  80:	(38 60 ff ff|ff ff 60 38) 	li      r3,-1
  84:	(38 60 00 00|00 00 60 38) 	li      r3,0
  88:	(e8 64 00 08|08 00 64 e8) 	ld      r3,8\(r4\)
  8c:	(e8 60 00 00|00 00 60 e8) 	ld      r3,0\(0\)
			8(e|c): R_PPC64_ADDR16_LO_DS	\.text
d104 2
a105 2
   0:	(00 00 00 00|ef be ad de) .*
   4:	(de ad be ef|00 00 00 00) .*
d108 2
a109 2
   8:	(00 00 00 00|be ba fe ca) .*
   c:	(ca fe ba be|00 00 00 00) .*
d112 1
a112 1
  10:	00 00 00 00 .*
d116 1
a116 1
  14:	00 00 00 00 .*
d120 1
a120 1
  18:	00 00 00 00 .*
d124 1
a124 1
  1c:	00 00 00 00 .*
d128 1
a128 1
	\.\.\.
d130 1
d133 1
a133 1
	\.\.\.
d135 1
d139 1
a139 1
#...
a140 1
#...
d142 2
a143 1
#...
d145 2
a146 1
#...
d148 2
a149 1
#...
@


1.5
log
@	* gas/ppc/astest.d: Adjust for relocs reduced to section sym.
	* gas/ppc/astest2.d: Likewise.
	* gas/ppc/astest2_64.d: Likewise.
	* ppc/astest64.d: Likewise.
	* ppc/booke.d: Likewise.
	* ppc/power4.d: Likewise.
	* ppc/test1elf32.d: Likewise.
	* ppc/test1elf64.d: Likewise.
@
text
@d117 1
a117 1
			14: R_PPC64_REL32	jk\+0xfffffffffffffffc
@


1.4
log
@bfd/
	* elfcode.h (elf_slurp_symbol_table): Use bfd_elf_sym_name so that
	canonical sections syms have a name.

gas/testsuite/
	Update for changed section syms.

ld/testsuite/
	Update for changed section syms.
@
text
@d44 7
a50 7
			2: R_PPC64_ADDR16_LO_DS	dsym0
   4:	e8 63 00 00 	ld      r3,0\(r3\)
			6: R_PPC64_ADDR16_LO_DS	dsym1
   8:	e8 63 00 00 	ld      r3,0\(r3\)
			a: R_PPC64_ADDR16_LO_DS	usym0
   c:	e8 63 00 00 	ld      r3,0\(r3\)
			e: R_PPC64_ADDR16_LO_DS	usym1
d78 1
a78 1
			52: R_PPC64_ADDR16_LO	dsym0
d80 1
a80 1
			56: R_PPC64_ADDR16_HI	dsym0
d82 1
a82 1
			5a: R_PPC64_ADDR16_HA	dsym0
d84 1
a84 1
			5e: R_PPC64_ADDR16_HIGHER	dsym0
d86 1
a86 1
			62: R_PPC64_ADDR16_HIGHERA	dsym0
d88 1
a88 1
			66: R_PPC64_ADDR16_HIGHEST	dsym0
d90 1
a90 1
			6a: R_PPC64_ADDR16_HIGHESTA	dsym0
d140 10
a149 4
			0: R_PPC64_ADDR64	dsym0
			8: R_PPC64_ADDR64	dsym1
			10: R_PPC64_ADDR64	usym0
			18: R_PPC64_ADDR64	usym1
@


1.3
log
@opcodes/
	* ppc-dis.c (print_insn_powerpc): Don't print tabs.  Handle
	PPC_OPERANDS_GPR_0.
	* ppc-opc.c (RA0): Define.
	(RAQ, RAL, RAM, RAS, RSQ, RTQ, RSO): Use PPC_OPERAND_GPR_0.
	(RAOPT): Rename from RAO.  Update all uses.
	(powerpc_opcodes): Use RA0 as appropriate.  Add "lsdx", "lsdi",
	"stsdx", "stsdi", "lmd" and "stmd" insns.

include/opcode/
	* ppc.h (PPC_OPERAND_GPR_0): Define.  Bump other operand defines.

gas/testsuite/
	Update gas/ppc/.

ld/testsuite/
	Update ld-powerpc/.
@
text
@d21 3
a23 3
0000000000000000 l    d  \.text	0000000000000000 
0000000000000000 l    d  \.data	0000000000000000 
0000000000000000 l    d  \.bss	0000000000000000 
d26 1
a26 1
0000000000000000 l    d  \.toc	0000000000000000 
@


1.2
log
@	* archures (bfd_mach_ppc64): Define.
	(bfd_powerpc_arch): Rename to bfd_powerpc_archs.
	(bfd_powerpc_arch): Define.
	* bfd-in2.h: Regenerate.
	* cpu-powerpc.c (arch_info_struct): Rename to bfd_powerpc_archs.
	(bfd_powerpc_arch): Move to tail of bfd_powerpc_archs.
	(bfd_powerpc_archs): Add default powerpc64 arch.

	* gas/ppc/test1elf64.d: Tweak arch name.
@
text
@d43 1
a43 1
   0:	e8 63 00 00 	ld	r3,0\(r3\)
d45 1
a45 1
   4:	e8 63 00 00 	ld	r3,0\(r3\)
d47 1
a47 1
   8:	e8 63 00 00 	ld	r3,0\(r3\)
d49 1
a49 1
   c:	e8 63 00 00 	ld	r3,0\(r3\)
d51 1
a51 1
  10:	e8 63 00 00 	ld	r3,0\(r3\)
d53 1
a53 1
  14:	e8 63 00 00 	ld	r3,0\(r3\)
d55 1
a55 1
  18:	e8 62 00 00 	ld	r3,0\(r2\)
d57 1
a57 1
  1c:	e8 62 00 08 	ld	r3,8\(r2\)
d59 1
a59 1
  20:	e8 62 00 10 	ld	r3,16\(r2\)
d61 1
a61 1
  24:	e8 62 00 18 	ld	r3,24\(r2\)
d63 1
a63 1
  28:	e8 62 00 20 	ld	r3,32\(r2\)
d65 1
a65 1
  2c:	e8 62 00 28 	ld	r3,40\(r2\)
d67 1
a67 1
  30:	3c 80 00 28 	lis	r4,40
d69 1
a69 1
  34:	e8 62 00 28 	ld	r3,40\(r2\)
d71 7
a77 7
  38:	38 60 00 08 	li	r3,8
  3c:	38 60 ff f8 	li	r3,-8
  40:	38 60 00 08 	li	r3,8
  44:	38 60 ff f8 	li	r3,-8
  48:	38 60 ff f8 	li	r3,-8
  4c:	38 60 00 08 	li	r3,8
  50:	38 60 00 00 	li	r3,0
d79 1
a79 1
  54:	38 60 00 00 	li	r3,0
d81 1
a81 1
  58:	38 60 00 00 	li	r3,0
d83 1
a83 1
  5c:	38 60 00 00 	li	r3,0
d85 1
a85 1
  60:	38 60 00 00 	li	r3,0
d87 1
a87 1
  64:	38 60 00 00 	li	r3,0
d89 1
a89 1
  68:	38 60 00 00 	li	r3,0
d91 9
a99 9
  6c:	38 60 ff f8 	li	r3,-8
  70:	38 60 ff ff 	li	r3,-1
  74:	38 60 00 00 	li	r3,0
  78:	38 60 ff ff 	li	r3,-1
  7c:	38 60 00 00 	li	r3,0
  80:	38 60 ff ff 	li	r3,-1
  84:	38 60 00 00 	li	r3,0
  88:	e8 64 00 08 	ld	r3,8\(r4\)
  8c:	e8 60 00 00 	ld	r3,0\(r0\)
d105 1
a105 1
   4:	de ad be ef 	stfdu	f21,-16657\(r13\)
d109 1
a109 1
   c:	ca fe ba be 	lfd	f23,-17730\(r30\)
d116 1
a116 1
  14:	ff ff ff fc 	fnmsub	f31,f31,f31,f31
@


1.2.12.1
log
@opcodes/
	* ppc-dis.c (print_insn_powerpc): Don't print tabs.  Handle
	PPC_OPERANDS_GPR_0.
	* ppc-opc.c (RA0): Define.
	(RAQ, RAL, RAM, RAS, RSQ, RTQ, RSO): Use PPC_OPERAND_GPR_0.
	(RAOPT): Rename from RAO.  Update all uses.
	(powerpc_opcodes): Use RA0 as appropriate.  Add "lsdx", "lsdi",
	"stsdx", "stsdi", "lmd" and "stmd" insns.

include/opcode/
	* ppc.h (PPC_OPERAND_GPR_0): Define.  Bump other operand defines.

gas/testsuite/
	Update gas/ppc/.

ld/testsuite/
	Update ld-powerpc/.
@
text
@d43 1
a43 1
   0:	e8 63 00 00 	ld      r3,0\(r3\)
d45 1
a45 1
   4:	e8 63 00 00 	ld      r3,0\(r3\)
d47 1
a47 1
   8:	e8 63 00 00 	ld      r3,0\(r3\)
d49 1
a49 1
   c:	e8 63 00 00 	ld      r3,0\(r3\)
d51 1
a51 1
  10:	e8 63 00 00 	ld      r3,0\(r3\)
d53 1
a53 1
  14:	e8 63 00 00 	ld      r3,0\(r3\)
d55 1
a55 1
  18:	e8 62 00 00 	ld      r3,0\(r2\)
d57 1
a57 1
  1c:	e8 62 00 08 	ld      r3,8\(r2\)
d59 1
a59 1
  20:	e8 62 00 10 	ld      r3,16\(r2\)
d61 1
a61 1
  24:	e8 62 00 18 	ld      r3,24\(r2\)
d63 1
a63 1
  28:	e8 62 00 20 	ld      r3,32\(r2\)
d65 1
a65 1
  2c:	e8 62 00 28 	ld      r3,40\(r2\)
d67 1
a67 1
  30:	3c 80 00 28 	lis     r4,40
d69 1
a69 1
  34:	e8 62 00 28 	ld      r3,40\(r2\)
d71 7
a77 7
  38:	38 60 00 08 	li      r3,8
  3c:	38 60 ff f8 	li      r3,-8
  40:	38 60 00 08 	li      r3,8
  44:	38 60 ff f8 	li      r3,-8
  48:	38 60 ff f8 	li      r3,-8
  4c:	38 60 00 08 	li      r3,8
  50:	38 60 00 00 	li      r3,0
d79 1
a79 1
  54:	38 60 00 00 	li      r3,0
d81 1
a81 1
  58:	38 60 00 00 	li      r3,0
d83 1
a83 1
  5c:	38 60 00 00 	li      r3,0
d85 1
a85 1
  60:	38 60 00 00 	li      r3,0
d87 1
a87 1
  64:	38 60 00 00 	li      r3,0
d89 1
a89 1
  68:	38 60 00 00 	li      r3,0
d91 9
a99 9
  6c:	38 60 ff f8 	li      r3,-8
  70:	38 60 ff ff 	li      r3,-1
  74:	38 60 00 00 	li      r3,0
  78:	38 60 ff ff 	li      r3,-1
  7c:	38 60 00 00 	li      r3,0
  80:	38 60 ff ff 	li      r3,-1
  84:	38 60 00 00 	li      r3,0
  88:	e8 64 00 08 	ld      r3,8\(r4\)
  8c:	e8 60 00 00 	ld      r3,0\(0\)
d105 1
a105 1
   4:	de ad be ef 	stfdu   f21,-16657\(r13\)
d109 1
a109 1
   c:	ca fe ba be 	lfd     f23,-17730\(r30\)
d116 1
a116 1
  14:	ff ff ff fc 	fnmsub  f31,f31,f31,f31
@


1.1
log
@	* gas/macros/macros.exp: xfail powerpc-*-aix.
	* gas/ppc/astest64.s: New.
	* gas/ppc/astest64.d: New.
	* gas/ppc/astest2_64.s: New.
	* gas/ppc/astest2_64.d: New.
	* gas/ppc/test1elf.asm: New.
	* gas/ppc/test1xcoff.asm: New.
	* gas/ppc/generate.sh: New. Generate new files below from above .asm
	* gas/ppc/test1elf32.s: New.
	* gas/ppc/test1elf32.d: New.
	* gas/ppc/test1elf64.s: New.
	* gas/ppc/test1elf64.d: New.
	* gas/ppc/test1xcoff32.s: New.
	* gas/ppc/test1xcoff32.d: New.
	* gas/ppc/ppc.exp: Run new tests.
	* gas/ppc/simpshft.s: Tweak align now that we get nops.
@
text
@d6 1
a6 1
architecture: powerpc:common, flags 0x00000011:
@

