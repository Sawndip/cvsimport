head	1.9;
access;
symbols
	binutils-2_24-branch:1.9.0.2
	binutils-2_24-branchpoint:1.9
	binutils-2_21_1:1.5
	binutils-2_23_2:1.6.2.1
	binutils-2_23_1:1.6
	binutils-2_23:1.6
	binutils-2_23-branch:1.6.0.2
	binutils-2_23-branchpoint:1.6
	binutils-2_22_branch:1.5.0.28
	binutils-2_22:1.5
	binutils-2_22-branch:1.5.0.26
	binutils-2_22-branchpoint:1.5
	binutils-2_21:1.5
	binutils-2_21-branch:1.5.0.24
	binutils-2_21-branchpoint:1.5
	binutils-2_20_1:1.5
	binutils-2_20:1.5
	binutils-arc-20081103-branch:1.5.0.22
	binutils-arc-20081103-branchpoint:1.5
	binutils-2_20-branch:1.5.0.20
	binutils-2_20-branchpoint:1.5
	dje-cgen-play1-branch:1.5.0.18
	dje-cgen-play1-branchpoint:1.5
	arc-20081103-branch:1.5.0.16
	arc-20081103-branchpoint:1.5
	binutils-2_19_1:1.5
	binutils-2_19:1.5
	binutils-2_19-branch:1.5.0.14
	binutils-2_19-branchpoint:1.5
	binutils-2_18:1.5
	binutils-2_18-branch:1.5.0.12
	binutils-2_18-branchpoint:1.5
	binutils-csl-coldfire-4_1-32:1.5
	binutils-csl-sourcerygxx-4_1-32:1.5
	binutils-csl-innovasic-fido-3_4_4-33:1.5
	binutils-csl-sourcerygxx-3_4_4-32:1.5
	binutils-csl-coldfire-4_1-30:1.5
	binutils-csl-sourcerygxx-4_1-30:1.5
	binutils-csl-coldfire-4_1-28:1.5
	binutils-csl-sourcerygxx-4_1-29:1.5
	binutils-csl-sourcerygxx-4_1-28:1.5
	binutils-csl-arm-2006q3-27:1.5
	binutils-csl-sourcerygxx-4_1-27:1.5
	binutils-csl-arm-2006q3-26:1.5
	binutils-csl-sourcerygxx-4_1-26:1.5
	binutils-csl-sourcerygxx-4_1-25:1.5
	binutils-csl-sourcerygxx-4_1-24:1.5
	binutils-csl-sourcerygxx-4_1-23:1.5
	binutils-csl-sourcerygxx-4_1-21:1.5
	binutils-csl-arm-2006q3-21:1.5
	binutils-csl-sourcerygxx-4_1-22:1.5
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.5
	binutils-csl-sourcerygxx-4_1-20:1.5
	binutils-csl-arm-2006q3-19:1.5
	binutils-csl-sourcerygxx-4_1-19:1.5
	binutils-csl-sourcerygxx-4_1-18:1.5
	binutils-csl-renesas-4_1-9:1.5
	binutils-csl-sourcerygxx-3_4_4-25:1.5
	binutils-csl-renesas-4_1-8:1.5
	binutils-csl-renesas-4_1-7:1.5
	binutils-csl-renesas-4_1-6:1.5
	binutils-csl-sourcerygxx-4_1-17:1.5
	binutils-csl-sourcerygxx-4_1-14:1.5
	binutils-csl-sourcerygxx-4_1-15:1.5
	binutils-csl-sourcerygxx-4_1-13:1.5
	binutils-2_17:1.5
	binutils-csl-sourcerygxx-4_1-12:1.5
	binutils-csl-sourcerygxx-3_4_4-21:1.5
	binutils-csl-wrs-linux-3_4_4-24:1.5
	binutils-csl-wrs-linux-3_4_4-23:1.5
	binutils-csl-sourcerygxx-4_1-9:1.5
	binutils-csl-sourcerygxx-4_1-8:1.5
	binutils-csl-sourcerygxx-4_1-7:1.5
	binutils-csl-arm-2006q1-6:1.5
	binutils-csl-sourcerygxx-4_1-6:1.5
	binutils-csl-wrs-linux-3_4_4-22:1.5
	binutils-csl-coldfire-4_1-11:1.5
	binutils-csl-sourcerygxx-3_4_4-19:1.5
	binutils-csl-coldfire-4_1-10:1.5
	binutils-csl-sourcerygxx-4_1-5:1.5
	binutils-csl-sourcerygxx-4_1-4:1.5
	binutils-csl-wrs-linux-3_4_4-21:1.5
	binutils-csl-morpho-4_1-4:1.5
	binutils-csl-sourcerygxx-3_4_4-17:1.5
	binutils-csl-wrs-linux-3_4_4-20:1.5
	binutils-2_17-branch:1.5.0.10
	binutils-2_17-branchpoint:1.5
	binutils-csl-2_17-branch:1.5.0.8
	binutils-csl-2_17-branchpoint:1.5
	binutils-csl-gxxpro-3_4-branch:1.5.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.5
	binutils-2_16_1:1.5
	binutils-csl-arm-2005q1b:1.5
	binutils-2_16:1.5
	binutils-csl-arm-2005q1a:1.5
	binutils-csl-arm-2005q1-branch:1.5.0.4
	binutils-csl-arm-2005q1-branchpoint:1.5
	binutils-2_16-branch:1.5.0.2
	binutils-2_16-branchpoint:1.5
	csl-arm-2004-q3d:1.4
	csl-arm-2004-q3:1.4
	binutils-2_15:1.3.8.1
	binutils-2_15-branchpoint:1.3
	csl-arm-2004-q1a:1.4
	csl-arm-2004-q1:1.4
	binutils-2_15-branch:1.3.0.8
	cagney_bfdfile-20040213-branch:1.3.0.6
	cagney_bfdfile-20040213-branchpoint:1.3
	cagney_bigcore-20040122-branch:1.3.0.4
	cagney_bigcore-20040122-branchpoint:1.3
	csl-arm-2003-q4:1.3
	binutils-2_14:1.3
	binutils-2_14-branch:1.3.0.2
	binutils-2_14-branchpoint:1.3
	binutils-2_13_2_1:1.1.1.1
	binutils-2_13_2:1.1.1.1
	binutils-2_13_1:1.1.1.1
	binutils-2_13:1.1.1.1
	binutils-2_13-branchpoint:1.1.1.1
	binutils-2_13-branch:1.1.1.1.0.8
	binutils-2_12_1:1.1.1.1
	binutils-2_12:1.1.1.1
	binutils-2_12-branch:1.1.1.1.0.6
	binutils-2_12-branchpoint:1.1.1.1
	cygnus_cvs_20020108_pre:1.1.1.1
	binutils-2_11_2:1.1.1.1
	binutils-2_11_1:1.1.1.1
	binutils-2_11:1.1.1.1
	x86_64versiong3:1.1.1.1
	binutils-2_11-branch:1.1.1.1.0.4
	binutils-2_10_1:1.1.1.1
	binutils-2_10:1.1.1.1
	binutils-2_10-branch:1.1.1.1.0.2
	binutils-2_10-branchpoint:1.1.1.1
	binutils_latest_snapshot:1.9
	repo-unification-2000-02-06:1.1.1.1
	binu_ss_19990721:1.1.1.1
	binu_ss_19990602:1.1.1.1
	binu_ss_19990502:1.1.1.1
	cygnus:1.1.1;
locks; strict;
comment	@# @;


1.9
date	2012.11.23.03.28.12;	author amodra;	state Exp;
branches;
next	1.8;

1.8
date	2012.11.14.13.44.45;	author uweigand;	state Exp;
branches;
next	1.7;

1.7
date	2012.10.29.09.25.15;	author amodra;	state Exp;
branches;
next	1.6;

1.6
date	2012.05.14.02.40.00;	author hjl;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	2005.03.02.13.25.01;	author amodra;	state Exp;
branches;
next	1.4;

1.4
date	2004.03.16.00.58.42;	author amodra;	state Exp;
branches;
next	1.3;

1.3
date	2003.04.24.17.04.22;	author nickc;	state Exp;
branches
	1.3.8.1;
next	1.2;

1.2
date	2002.08.22.05.23.43;	author amodra;	state Exp;
branches;
next	1.1;

1.1
date	99.05.03.07.28.52;	author rth;	state Exp;
branches
	1.1.1.1;
next	;

1.6.2.1
date	2013.01.21.13.48.46;	author amodra;	state Exp;
branches;
next	;

1.3.8.1
date	2004.03.16.00.59.35;	author amodra;	state Exp;
branches;
next	;

1.1.1.1
date	99.05.03.07.28.52;	author rth;	state Exp;
branches;
next	;


desc
@@


1.9
log
@include/opcode/
	* ppc.h (ppc_parse_cpu): Update prototype.
opcodes/
	* ppc-dis.c (ppc_parse_cpu): Add "sticky" param.  Track bits
	set from ppc_opts.sticky in it.  Delete "retain_mask".
	(powerpc_init_dialect): Choose default dialect from info->mach
	before parsing -M options.  Handle more bfd_mach_ppc variants.
	Update common default to power7.
gas/
	* config/tc-ppc.c (sticky): New var.
	(md_parse_option, ppc_machine): Update ppc_parse_cpu calls.
gas/testsuite/
	* gas/ppc/astest2.d: Pass -Mppc to objdump.
ld/testsuite/
	* ld-powerpc/plt1.d: Update for default "at" branch hints.
	* ld-powerpc/tlsexe.d: Likewise.
	* ld-powerpc/tlsexetoc.d: Likewise.
	* ld-powerpc/tlsopt1.d: Likewise.
	* ld-powerpc/tlsopt1_32.d: Likewise.
	* ld-powerpc/tlsopt2.d: Likewise.
	* ld-powerpc/tlsopt2_32.d: Likewise.
	* ld-powerpc/tlsopt4.d: Likewise.
	* ld-powerpc/tlsopt4_32.d: Likewise.
	* ld-powerpc/tlsso.d: Likewise.
	* ld-powerpc/tlstocso.d: Likewise.
@
text
@#objdump: -Dr -Mppc
#name: PowerPC test 2

.*

Disassembly of section \.text:

0+0000000 <foo>:
   0:	(60 00 00 00|00 00 00 60) 	nop
   4:	(60 00 00 00|00 00 00 60) 	nop
   8:	(60 00 00 00|00 00 00 60) 	nop
   c:	(48 00 00 04|04 00 00 48) 	b       10 <foo\+0x10>
  10:	(48 00 00 08|08 00 00 48) 	b       18 <foo\+0x18>
  14:	(48 00 00 00|00 00 00 48) 	b       .*
			14: R_PPC_REL24	x
  18:	(48 00 00 0.|0. 00 00 48) 	b       .*
			18: R_PPC_REL24	\.data\+0x4
  1c:	(48 00 00 00|00 00 00 48) 	b       .*
			1c: R_PPC_REL24	z
  20:	(48 00 00 ..|.. 00 00 48) 	b       .*
			20: R_PPC_REL24	z\+0x14
  24:	(48 00 00 04|04 00 00 48) 	b       28 <foo\+0x28>
  28:	(48 00 00 00|00 00 00 48) 	b       .*
			28: R_PPC_REL24	a
  2c:	(48 00 00 50|50 00 00 48) 	b       7c <apfour>
  30:	(48 00 00 0.|0. 00 00 48) 	b       .*
			30: R_PPC_REL24	a\+0x4
  34:	(48 00 00 4c|4c 00 00 48) 	b       80 <apfour\+0x4>
  38:	(48 00 00 00|00 00 00 48) 	b       .*
			38: R_PPC_LOCAL24PC	a
  3c:	(48 00 00 40|40 00 00 48) 	b       7c <apfour>
	\.\.\.
			40: R_PPC_ADDR32	\.text\+0x40
			44: R_PPC_ADDR32	\.text\+0x4c
			48: R_PPC_REL32	x
			4c: R_PPC_REL32	x\+0x4
			50: R_PPC_REL32	z
			54: R_PPC_REL32	\.data\+0x4
			58: R_PPC_ADDR32	x
			5c: R_PPC_ADDR32	\.data\+0x4
			60: R_PPC_ADDR32	z
			64: R_PPC_ADDR32	x-0x4
			68: R_PPC_ADDR32	\.data
			6c: R_PPC_ADDR32	z-0x4
  70:	(00 00 00 08|08 00 00 00) 	\.long 0x8
  74:	(00 00 00 08|08 00 00 00) 	\.long 0x8

0+0000078 <a>:
  78:	(00 00 00 00|00 00 00 00) 	\.long 0x0
			78: R_PPC_ADDR32	a

0+000007c <apfour>:
	\.\.\.
			7c: R_PPC_ADDR32	\.text\+0x7c
			80: R_PPC_ADDR32	\.text\+0x7c
  84:	(ff ff ff fc|fc ff ff ff) 	fnmsub  f31,f31,f31,f31
	\.\.\.
			88: R_PPC_ADDR32	\.text\+0x7e
  90:	(60 00 00 00|00 00 00 60) 	nop
  94:	(40 a5 ff fc|fc ff a5 40) 	ble-    cr1,90 <apfour\+0x14>
  98:	(41 a9 ff f8|f8 ff a9 41) 	bgt-    cr2,90 <apfour\+0x14>
  9c:	(40 8d ff f4|f4 ff 8d 40) 	ble\+    cr3,90 <apfour\+0x14>
  a0:	(41 91 ff f0|f0 ff 91 41) 	bgt\+    cr4,90 <apfour\+0x14>
  a4:	(40 95 00 10|10 00 95 40) 	ble-    cr5,b4 <nop>
  a8:	(41 99 00 0c|0c 00 99 41) 	bgt-    cr6,b4 <nop>
  ac:	(40 bd 00 08|08 00 bd 40) 	ble\+    cr7,b4 <nop>
  b0:	(41 a1 00 04|04 00 a1 41) 	bgt\+    b4 <nop>
Disassembly of section \.data:

0+0000000 <x>:
   0:	00 00 00 00 	\.long 0x0

0+0000004 <y>:
   4:	00 00 00 00 	\.long 0x0
@


1.8
log
@gas/ChangeLog:

	* config/tc-ppc.c (md_apply_fix): Leave field zero when emitting
	an ELF reloc on data as well.

gas/testsuite/ChangeLog:

	* gas/ppc/astest.d: Update for fixup changes.
	* gas/ppc/astest64.d: Likewise.
	* gas/ppc/astest2.d: Likewise.
	* gas/ppc/astest2_64.d: Likewise.
	* gas/ppc/test1elf32.d: Likewise.
	* gas/ppc/test1elf64.d: Likewise.
@
text
@d1 1
a1 1
#objdump: -Dr
@


1.7
log
@	* gas/cfi/cfi.exp: Remove redundant ppc test.  Exclude
	powerpc-pe targets from cfi-common-6 test.
	* gas/cfi/cfi-ppc-1.d: Use objdump to handle pe.
	* gas/cfi/cfi-ppc-1.s: Don't use .type and .size.
	* gas/ppc/ppc.exp: Exclude various tests for powerpc-pe.  Exclude
	vle tests for le targets.
	* gas/ppc/476.d, * gas/ppc/476.s: Update for le output.  Use .text
	rather than section directive with quotes.
	* gas/ppc/a2.d,	* gas/ppc/a2.s: Likewise.
	* gas/ppc/altivec.d, * gas/ppc/altivec.s: Likewise.
	* gas/ppc/altivec2.d: Likewise.
	* gas/ppc/altivec_and_spe.d: Likewise.
	* gas/ppc/astest.d: Likewise.
	* gas/ppc/astest2.d: Likewise.
	* gas/ppc/astest2_64.d: Likewise.
	* gas/ppc/astest64.d: Likewise.
	* gas/ppc/booke.d, * gas/ppc/booke.s: Likewise.
	* gas/ppc/cell.d, * gas/ppc/cell.s: Likewise.
	* gas/ppc/common.d, * gas/ppc/common.s: Likewise.
	* gas/ppc/e500.d, * gas/ppc/e500.s: Likewise.
	* gas/ppc/e500mc.d, * gas/ppc/e500mc.s: Likewise.
	* gas/ppc/e500mc64_nop.d, * gas/ppc/e500mc64_nop.s: Likewise.
	* gas/ppc/e5500_nop.d, * gas/ppc/e5500_nop.s: Likewise.
	* gas/ppc/e6500.d, * gas/ppc/e6500.s: Likewise.
	* gas/ppc/e6500_nop.d, * gas/ppc/e6500_nop.s: Likewise.
	* gas/ppc/machine.d: Likewise.
	* gas/ppc/power4.d, * gas/ppc/power4.s: Likewise.
	* gas/ppc/power4_32.d, * gas/ppc/power4_32.s: Likewise.
	* gas/ppc/power6.d, * gas/ppc/power6.s: Likewise.
	* gas/ppc/power7.d, * gas/ppc/power7.s: Likewise.
	* gas/ppc/ppc750ps.d, * gas/ppc/ppc750ps.s: Likewise.
	* gas/ppc/regnames.d: Likewise.
	* gas/ppc/simpshft.d: Likewise.
	* gas/ppc/test1elf32.d: Likewise.
	* gas/ppc/test1elf64.d: Likewise.
	* gas/ppc/titan.d, * gas/ppc/titan.s: Likewise.
	* gas/ppc/vle-reloc.s: Likewise.
	* gas/ppc/vle-simple-1.s: Likewise.
	* gas/ppc/vle-simple-2.s: Likewise.
	* gas/ppc/vle-simple-3.s: Likewise.
	* gas/ppc/vle-simple-4.s: Likewise.
	* gas/ppc/vle-simple-5.s: Likewise.
	* gas/ppc/vle-simple-6.s: Likewise.
	* gas/ppc/vle.s: Likewise.
	* gas/ppc/vsx.d, * gas/ppc/vsx.s: Likewise.
@
text
@d32 1
a32 1
  40:	(00 00 00 40|40 00 00 00) 	\.long 0x40
a33 1
  44:	(00 00 00 4c|4c 00 00 00) 	\.long 0x4c
a34 1
  48:	(00 00 00 00|00 00 00 00) 	\.long 0x0
a35 1
  4c:	(00 00 00 04|04 00 00 00) 	\.long 0x4
a36 1
  50:	(00 00 00 00|00 00 00 00) 	\.long 0x0
a37 1
  54:	(00 00 00 04|04 00 00 00) 	\.long 0x4
a38 1
  58:	(00 00 00 00|00 00 00 00) 	\.long 0x0
a39 1
  5c:	(00 00 00 04|04 00 00 00) 	\.long 0x4
a40 1
  60:	(00 00 00 00|00 00 00 00) 	\.long 0x0
a41 1
  64:	(ff ff ff fc|fc ff ff ff) 	fnmsub  f31,f31,f31,f31
a42 1
  68:	(00 00 00 00|00 00 00 00) 	\.long 0x0
a43 1
  6c:	(ff ff ff fc|fc ff ff ff) 	fnmsub  f31,f31,f31,f31
d53 1
a53 1
  7c:	(00 00 00 7c|7c 00 00 00) 	\.long 0x7c
a54 1
  80:	(00 00 00 7c|7c 00 00 00) 	\.long 0x7c
d57 1
a57 1
  88:	(00 00 00 7e|7e 00 00 00) 	\.long 0x7e
a58 1
  8c:	(00 00 00 00|00 00 00 00) 	\.long 0x0
@


1.6
log
@Print addend as signed in objdump

binutils/

	* objdump.c (disassemble_bytes): Print addend as signed.
	(dump_reloc_set): Likewise.

gas/testsuite/

	* gas/all/fwdexp.d: Expect addend as signed.
	* gas/alpha/elf-reloc-1.d: Likewise.
	* gas/i386/mixed-mode-reloc64.d: Likewise.
	* gas/i386/reloc64.d: Likewise.
	* gas/i386/ilp32/mixed-mode-reloc64.d: Expect addend as signed.
	* gas/i386/ilp32/reloc64.d: Likewise.
	* gas/ia64/pcrel.d: Likewise.
	* gas/mips/branch-misc-2-64.d: Likewise.
	* gas/mips/branch-misc-2pic-64.d: Likewise.
	* gas/mips/branch-misc-4-64.d: Likewise.
	* gas/mips/ldstla-n64-sym32.d: Likewise.
	* gas/mips/micromips@@branch-misc-2-64.d: Likewise.
	* gas/mips/micromips@@branch-misc-2pic-64.d: Likewise.
	* gas/mips/micromips@@branch-misc-4-64.d: Likewise.
	* gas/mips/mips16-hilo-n32.d: Likewise.
	* gas/ppc/astest.d: Likewise.
	* gas/ppc/astest2.d: Likewise.
	* gas/ppc/astest2_64.d: Likewise.
	* gas/ppc/astest64.d: Likewise.
	* gas/ppc/test1elf32.d: Likewise.
	* gas/ppc/test1elf64.d: Likewise.
	* gas/sparc/reloc64.d: Likewise.
@
text
@d4 1
a4 1
.*: +file format elf32-powerpc
d9 6
a14 6
   0:	60 00 00 00 	nop
   4:	60 00 00 00 	nop
   8:	60 00 00 00 	nop
   c:	48 00 00 04 	b       10 <foo\+0x10>
  10:	48 00 00 08 	b       18 <foo\+0x18>
  14:	48 00 00 00 	b       14 <foo\+0x14>
d16 1
a16 1
  18:	48 00 00 04 	b       1c <foo\+0x1c>
d18 1
a18 1
  1c:	48 00 00 00 	b       1c <foo\+0x1c>
d20 1
a20 1
  20:	48 00 00 14 	b       34 <foo\+0x34>
d22 2
a23 2
  24:	48 00 00 04 	b       28 <foo\+0x28>
  28:	48 00 00 00 	b       28 <foo\+0x28>
d25 2
a26 2
  2c:	48 00 00 50 	b       7c <apfour>
  30:	48 00 00 04 	b       34 <foo\+0x34>
d28 2
a29 2
  34:	48 00 00 4c 	b       80 <apfour\+0x4>
  38:	48 00 00 00 	b       38 <foo\+0x38>
d31 2
a32 2
  3c:	48 00 00 40 	b       7c <apfour>
  40:	00 00 00 40 	\.long 0x40
d34 1
a34 1
  44:	00 00 00 4c 	\.long 0x4c
d36 1
a36 1
  48:	00 00 00 00 	\.long 0x0
d38 1
a38 1
  4c:	00 00 00 04 	\.long 0x4
d40 1
a40 1
  50:	00 00 00 00 	\.long 0x0
d42 1
a42 1
  54:	00 00 00 04 	\.long 0x4
d44 1
a44 1
  58:	00 00 00 00 	\.long 0x0
d46 1
a46 1
  5c:	00 00 00 04 	\.long 0x4
d48 1
a48 1
  60:	00 00 00 00 	\.long 0x0
d50 1
a50 1
  64:	ff ff ff fc 	fnmsub  f31,f31,f31,f31
d52 1
a52 1
  68:	00 00 00 00 	\.long 0x0
d54 1
a54 1
  6c:	ff ff ff fc 	fnmsub  f31,f31,f31,f31
d56 2
a57 2
  70:	00 00 00 08 	\.long 0x8
  74:	00 00 00 08 	\.long 0x8
d60 1
a60 1
  78:	00 00 00 00 	\.long 0x0
d64 1
a64 1
  7c:	00 00 00 7c 	\.long 0x7c
d66 1
a66 1
  80:	00 00 00 7c 	\.long 0x7c
d68 2
a69 2
  84:	ff ff ff fc 	fnmsub  f31,f31,f31,f31
  88:	00 00 00 7e 	\.long 0x7e
d71 10
a80 10
  8c:	00 00 00 00 	\.long 0x0
  90:	60 00 00 00 	nop
  94:	40 a5 ff fc 	ble-    cr1,90 <apfour\+0x14>
  98:	41 a9 ff f8 	bgt-    cr2,90 <apfour\+0x14>
  9c:	40 8d ff f4 	ble\+    cr3,90 <apfour\+0x14>
  a0:	41 91 ff f0 	bgt\+    cr4,90 <apfour\+0x14>
  a4:	40 95 00 10 	ble-    cr5,b4 <nop>
  a8:	41 99 00 0c 	bgt-    cr6,b4 <nop>
  ac:	40 bd 00 08 	ble\+    cr7,b4 <nop>
  b0:	41 a1 00 04 	bgt\+    b4 <nop>
@


1.6.2.1
log
@	PR 12549
	PR 14493
	PR 14567
	PR 14662
	PR 14758
	PR 14813
	PR 14904
	PR 14915
	PR 14926
	PR 14950
	PR 14962
	Apply mainline patches
@
text
@d1 1
a1 1
#objdump: -Dr -Mppc
d4 1
a4 1
.*
d9 6
a14 6
   0:	(60 00 00 00|00 00 00 60) 	nop
   4:	(60 00 00 00|00 00 00 60) 	nop
   8:	(60 00 00 00|00 00 00 60) 	nop
   c:	(48 00 00 04|04 00 00 48) 	b       10 <foo\+0x10>
  10:	(48 00 00 08|08 00 00 48) 	b       18 <foo\+0x18>
  14:	(48 00 00 00|00 00 00 48) 	b       .*
d16 1
a16 1
  18:	(48 00 00 0.|0. 00 00 48) 	b       .*
d18 1
a18 1
  1c:	(48 00 00 00|00 00 00 48) 	b       .*
d20 1
a20 1
  20:	(48 00 00 ..|.. 00 00 48) 	b       .*
d22 2
a23 2
  24:	(48 00 00 04|04 00 00 48) 	b       28 <foo\+0x28>
  28:	(48 00 00 00|00 00 00 48) 	b       .*
d25 2
a26 2
  2c:	(48 00 00 50|50 00 00 48) 	b       7c <apfour>
  30:	(48 00 00 0.|0. 00 00 48) 	b       .*
d28 2
a29 2
  34:	(48 00 00 4c|4c 00 00 48) 	b       80 <apfour\+0x4>
  38:	(48 00 00 00|00 00 00 48) 	b       .*
d31 2
a32 2
  3c:	(48 00 00 40|40 00 00 48) 	b       7c <apfour>
	\.\.\.
d34 1
d36 1
d38 1
d40 1
d42 1
d44 1
d46 1
d48 1
d50 1
d52 1
d54 1
d56 2
a57 2
  70:	(00 00 00 08|08 00 00 00) 	\.long 0x8
  74:	(00 00 00 08|08 00 00 00) 	\.long 0x8
d60 1
a60 1
  78:	(00 00 00 00|00 00 00 00) 	\.long 0x0
d64 1
a64 1
	\.\.\.
d66 1
d68 2
a69 2
  84:	(ff ff ff fc|fc ff ff ff) 	fnmsub  f31,f31,f31,f31
	\.\.\.
d71 10
a80 9
  90:	(60 00 00 00|00 00 00 60) 	nop
  94:	(40 a5 ff fc|fc ff a5 40) 	ble-    cr1,90 <apfour\+0x14>
  98:	(41 a9 ff f8|f8 ff a9 41) 	bgt-    cr2,90 <apfour\+0x14>
  9c:	(40 8d ff f4|f4 ff 8d 40) 	ble\+    cr3,90 <apfour\+0x14>
  a0:	(41 91 ff f0|f0 ff 91 41) 	bgt\+    cr4,90 <apfour\+0x14>
  a4:	(40 95 00 10|10 00 95 40) 	ble-    cr5,b4 <nop>
  a8:	(41 99 00 0c|0c 00 99 41) 	bgt-    cr6,b4 <nop>
  ac:	(40 bd 00 08|08 00 bd 40) 	ble\+    cr7,b4 <nop>
  b0:	(41 a1 00 04|04 00 a1 41) 	bgt\+    b4 <nop>
@


1.5
log
@	* gas/ppc/astest.d: Adjust for relocs reduced to section sym.
	* gas/ppc/astest2.d: Likewise.
	* gas/ppc/astest2_64.d: Likewise.
	* ppc/astest64.d: Likewise.
	* ppc/booke.d: Likewise.
	* ppc/power4.d: Likewise.
	* ppc/test1elf32.d: Likewise.
	* ppc/test1elf64.d: Likewise.
@
text
@d51 1
a51 1
			64: R_PPC_ADDR32	x\+0xf+ffffffc
d55 1
a55 1
			6c: R_PPC_ADDR32	z\+0xf+ffffffc
@


1.4
log
@opcodes/
	* ppc-dis.c (print_insn_powerpc): Don't print tabs.  Handle
	PPC_OPERANDS_GPR_0.
	* ppc-opc.c (RA0): Define.
	(RAQ, RAL, RAM, RAS, RSQ, RTQ, RSO): Use PPC_OPERAND_GPR_0.
	(RAOPT): Rename from RAO.  Update all uses.
	(powerpc_opcodes): Use RA0 as appropriate.  Add "lsdx", "lsdi",
	"stsdx", "stsdi", "lmd" and "stmd" insns.

include/opcode/
	* ppc.h (PPC_OPERAND_GPR_0): Define.  Bump other operand defines.

gas/testsuite/
	Update gas/ppc/.

ld/testsuite/
	Update ld-powerpc/.
@
text
@a31 1

a33 1

d40 1
a40 1
	\.\.\.
d42 3
a44 1
			54: R_PPC_REL32	y
d46 3
a48 1
			5c: R_PPC_ADDR32	y
d52 2
a53 2
  68:	ff ff ff fc 	fnmsub  f31,f31,f31,f31
			68: R_PPC_ADDR32	y\+0xf+ffffffc
d64 4
a67 3
	\.\.\.
			7c: R_PPC_ADDR32	b
			80: R_PPC_ADDR32	apfour
d69 2
a70 2
  88:	00 00 00 02 	\.long 0x2
			88: R_PPC_ADDR32	apfour\+0x2
@


1.3
log
@Add tests of conditional branch instructions with probability postfixes
@
text
@d12 3
a14 3
   c:	48 00 00 04 	b	10 <foo\+0x10>
  10:	48 00 00 08 	b	18 <foo\+0x18>
  14:	48 00 00 00 	b	14 <foo\+0x14>
d16 1
a16 1
  18:	48 00 00 04 	b	1c <foo\+0x1c>
d18 1
a18 1
  1c:	48 00 00 00 	b	1c <foo\+0x1c>
d20 1
a20 1
  20:	48 00 00 14 	b	34 <foo\+0x34>
d22 2
a23 2
  24:	48 00 00 04 	b	28 <foo\+0x28>
  28:	48 00 00 00 	b	28 <foo\+0x28>
d25 2
a26 2
  2c:	48 00 00 50 	b	7c <apfour>
  30:	48 00 00 04 	b	34 <foo\+0x34>
d28 2
a29 2
  34:	48 00 00 4c 	b	80 <apfour\+0x4>
  38:	48 00 00 00 	b	38 <foo\+0x38>
d31 1
a31 1
  3c:	48 00 00 40 	b	7c <apfour>
d48 1
a48 1
  64:	ff ff ff fc 	fnmsub	f31,f31,f31,f31
d50 1
a50 1
  68:	ff ff ff fc 	fnmsub	f31,f31,f31,f31
d52 1
a52 1
  6c:	ff ff ff fc 	fnmsub	f31,f31,f31,f31
d65 1
a65 1
  84:	ff ff ff fc 	fnmsub	f31,f31,f31,f31
d70 8
a77 8
  94:	40 a5 ff fc 	ble-	cr1,90 <apfour\+0x14>
  98:	41 a9 ff f8 	bgt-	cr2,90 <apfour\+0x14>
  9c:	40 8d ff f4 	ble\+	cr3,90 <apfour\+0x14>
  a0:	41 91 ff f0 	bgt\+	cr4,90 <apfour\+0x14>
  a4:	40 95 00 10 	ble-	cr5,b4 <nop>
  a8:	41 99 00 0c 	bgt-	cr6,b4 <nop>
  ac:	40 bd 00 08 	ble\+	cr7,b4 <nop>
  b0:	41 a1 00 04 	bgt\+	b4 <nop>
@


1.3.8.1
log
@opcodes/
	* ppc-dis.c (print_insn_powerpc): Don't print tabs.  Handle
	PPC_OPERANDS_GPR_0.
	* ppc-opc.c (RA0): Define.
	(RAQ, RAL, RAM, RAS, RSQ, RTQ, RSO): Use PPC_OPERAND_GPR_0.
	(RAOPT): Rename from RAO.  Update all uses.
	(powerpc_opcodes): Use RA0 as appropriate.  Add "lsdx", "lsdi",
	"stsdx", "stsdi", "lmd" and "stmd" insns.

include/opcode/
	* ppc.h (PPC_OPERAND_GPR_0): Define.  Bump other operand defines.

gas/testsuite/
	Update gas/ppc/.

ld/testsuite/
	Update ld-powerpc/.
@
text
@d12 3
a14 3
   c:	48 00 00 04 	b       10 <foo\+0x10>
  10:	48 00 00 08 	b       18 <foo\+0x18>
  14:	48 00 00 00 	b       14 <foo\+0x14>
d16 1
a16 1
  18:	48 00 00 04 	b       1c <foo\+0x1c>
d18 1
a18 1
  1c:	48 00 00 00 	b       1c <foo\+0x1c>
d20 1
a20 1
  20:	48 00 00 14 	b       34 <foo\+0x34>
d22 2
a23 2
  24:	48 00 00 04 	b       28 <foo\+0x28>
  28:	48 00 00 00 	b       28 <foo\+0x28>
d25 2
a26 2
  2c:	48 00 00 50 	b       7c <apfour>
  30:	48 00 00 04 	b       34 <foo\+0x34>
d28 2
a29 2
  34:	48 00 00 4c 	b       80 <apfour\+0x4>
  38:	48 00 00 00 	b       38 <foo\+0x38>
d31 1
a31 1
  3c:	48 00 00 40 	b       7c <apfour>
d48 1
a48 1
  64:	ff ff ff fc 	fnmsub  f31,f31,f31,f31
d50 1
a50 1
  68:	ff ff ff fc 	fnmsub  f31,f31,f31,f31
d52 1
a52 1
  6c:	ff ff ff fc 	fnmsub  f31,f31,f31,f31
d65 1
a65 1
  84:	ff ff ff fc 	fnmsub  f31,f31,f31,f31
d70 8
a77 8
  94:	40 a5 ff fc 	ble-    cr1,90 <apfour\+0x14>
  98:	41 a9 ff f8 	bgt-    cr2,90 <apfour\+0x14>
  9c:	40 8d ff f4 	ble\+    cr3,90 <apfour\+0x14>
  a0:	41 91 ff f0 	bgt\+    cr4,90 <apfour\+0x14>
  a4:	40 95 00 10 	ble-    cr5,b4 <nop>
  a8:	41 99 00 0c 	bgt-    cr6,b4 <nop>
  ac:	40 bd 00 08 	ble\+    cr7,b4 <nop>
  b0:	41 a1 00 04 	bgt\+    b4 <nop>
@


1.2
log
@	* gas/ppc/ppc.exp: Don't run e500 test on xcoff targets.
	* gas/ppc/astest2.d: Escape dots.
@
text
@d69 9
@


1.1
log
@Initial revision
@
text
@d6 1
a6 1
Disassembly of section .text:
d17 1
a17 1
			18: R_PPC_REL24	.data\+0x4
d33 2
a34 2
  40:	00 00 00 40 	.long 0x40
			40: R_PPC_ADDR32	.text\+0x40
d36 3
a38 3
  44:	00 00 00 4c 	.long 0x4c
			44: R_PPC_ADDR32	.text\+0x4c
  48:	00 00 00 00 	.long 0x0
d40 1
a40 1
  4c:	00 00 00 04 	.long 0x4
d42 1
a42 1
	...
d54 2
a55 2
  70:	00 00 00 08 	.long 0x8
  74:	00 00 00 08 	.long 0x8
d58 1
a58 1
  78:	00 00 00 00 	.long 0x0
d62 1
a62 1
	...
d66 1
a66 1
  88:	00 00 00 02 	.long 0x2
d68 2
a69 2
  8c:	00 00 00 00 	.long 0x0
Disassembly of section .data:
d72 1
a72 1
   0:	00 00 00 00 	.long 0x0
d75 1
a75 1
   4:	00 00 00 00 	.long 0x0
@


1.1.1.1
log
@19990502 sourceware import
@
text
@@

