head	1.7;
access;
symbols
	binutils-2_24-branch:1.7.0.2
	binutils-2_24-branchpoint:1.7
	binutils-2_21_1:1.4
	binutils-2_23_2:1.5.2.1
	binutils-2_23_1:1.5
	binutils-2_23:1.5
	binutils-2_23-branch:1.5.0.2
	binutils-2_23-branchpoint:1.5
	binutils-2_22_branch:1.4.0.28
	binutils-2_22:1.4
	binutils-2_22-branch:1.4.0.26
	binutils-2_22-branchpoint:1.4
	binutils-2_21:1.4
	binutils-2_21-branch:1.4.0.24
	binutils-2_21-branchpoint:1.4
	binutils-2_20_1:1.4
	binutils-2_20:1.4
	binutils-arc-20081103-branch:1.4.0.22
	binutils-arc-20081103-branchpoint:1.4
	binutils-2_20-branch:1.4.0.20
	binutils-2_20-branchpoint:1.4
	dje-cgen-play1-branch:1.4.0.18
	dje-cgen-play1-branchpoint:1.4
	arc-20081103-branch:1.4.0.16
	arc-20081103-branchpoint:1.4
	binutils-2_19_1:1.4
	binutils-2_19:1.4
	binutils-2_19-branch:1.4.0.14
	binutils-2_19-branchpoint:1.4
	binutils-2_18:1.4
	binutils-2_18-branch:1.4.0.12
	binutils-2_18-branchpoint:1.4
	binutils-csl-coldfire-4_1-32:1.4
	binutils-csl-sourcerygxx-4_1-32:1.4
	binutils-csl-innovasic-fido-3_4_4-33:1.4
	binutils-csl-sourcerygxx-3_4_4-32:1.4
	binutils-csl-coldfire-4_1-30:1.4
	binutils-csl-sourcerygxx-4_1-30:1.4
	binutils-csl-coldfire-4_1-28:1.4
	binutils-csl-sourcerygxx-4_1-29:1.4
	binutils-csl-sourcerygxx-4_1-28:1.4
	binutils-csl-arm-2006q3-27:1.4
	binutils-csl-sourcerygxx-4_1-27:1.4
	binutils-csl-arm-2006q3-26:1.4
	binutils-csl-sourcerygxx-4_1-26:1.4
	binutils-csl-sourcerygxx-4_1-25:1.4
	binutils-csl-sourcerygxx-4_1-24:1.4
	binutils-csl-sourcerygxx-4_1-23:1.4
	binutils-csl-sourcerygxx-4_1-21:1.4
	binutils-csl-arm-2006q3-21:1.4
	binutils-csl-sourcerygxx-4_1-22:1.4
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.4
	binutils-csl-sourcerygxx-4_1-20:1.4
	binutils-csl-arm-2006q3-19:1.4
	binutils-csl-sourcerygxx-4_1-19:1.4
	binutils-csl-sourcerygxx-4_1-18:1.4
	binutils-csl-renesas-4_1-9:1.4
	binutils-csl-sourcerygxx-3_4_4-25:1.4
	binutils-csl-renesas-4_1-8:1.4
	binutils-csl-renesas-4_1-7:1.4
	binutils-csl-renesas-4_1-6:1.4
	binutils-csl-sourcerygxx-4_1-17:1.4
	binutils-csl-sourcerygxx-4_1-14:1.4
	binutils-csl-sourcerygxx-4_1-15:1.4
	binutils-csl-sourcerygxx-4_1-13:1.4
	binutils-2_17:1.4
	binutils-csl-sourcerygxx-4_1-12:1.4
	binutils-csl-sourcerygxx-3_4_4-21:1.4
	binutils-csl-wrs-linux-3_4_4-24:1.4
	binutils-csl-wrs-linux-3_4_4-23:1.4
	binutils-csl-sourcerygxx-4_1-9:1.4
	binutils-csl-sourcerygxx-4_1-8:1.4
	binutils-csl-sourcerygxx-4_1-7:1.4
	binutils-csl-arm-2006q1-6:1.4
	binutils-csl-sourcerygxx-4_1-6:1.4
	binutils-csl-wrs-linux-3_4_4-22:1.4
	binutils-csl-coldfire-4_1-11:1.4
	binutils-csl-sourcerygxx-3_4_4-19:1.4
	binutils-csl-coldfire-4_1-10:1.4
	binutils-csl-sourcerygxx-4_1-5:1.4
	binutils-csl-sourcerygxx-4_1-4:1.4
	binutils-csl-wrs-linux-3_4_4-21:1.4
	binutils-csl-morpho-4_1-4:1.4
	binutils-csl-sourcerygxx-3_4_4-17:1.4
	binutils-csl-wrs-linux-3_4_4-20:1.4
	binutils-2_17-branch:1.4.0.10
	binutils-2_17-branchpoint:1.4
	binutils-csl-2_17-branch:1.4.0.8
	binutils-csl-2_17-branchpoint:1.4
	binutils-csl-gxxpro-3_4-branch:1.4.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.4
	binutils-2_16_1:1.4
	binutils-csl-arm-2005q1b:1.4
	binutils-2_16:1.4
	binutils-csl-arm-2005q1a:1.4
	binutils-csl-arm-2005q1-branch:1.4.0.4
	binutils-csl-arm-2005q1-branchpoint:1.4
	binutils-2_16-branch:1.4.0.2
	binutils-2_16-branchpoint:1.4
	csl-arm-2004-q3d:1.2
	csl-arm-2004-q3:1.2
	binutils-2_15:1.1.12.1
	binutils-2_15-branchpoint:1.1
	csl-arm-2004-q1a:1.2
	csl-arm-2004-q1:1.2
	binutils-2_15-branch:1.1.0.12
	cagney_bfdfile-20040213-branch:1.1.0.10
	cagney_bfdfile-20040213-branchpoint:1.1
	cagney_bigcore-20040122-branch:1.1.0.8
	cagney_bigcore-20040122-branchpoint:1.1
	csl-arm-2003-q4:1.1
	binutils-2_14:1.1
	binutils-2_14-branch:1.1.0.6
	binutils-2_14-branchpoint:1.1
	binutils-2_13_2_1:1.1
	binutils-2_13_2:1.1
	binutils-2_13_1:1.1
	binutils-2_13:1.1
	binutils-2_13-branchpoint:1.1
	binutils-2_13-branch:1.1.0.4
	binutils-2_12_1:1.1
	binutils-2_12:1.1
	binutils-2_12-branch:1.1.0.2
	binutils-2_12-branchpoint:1.1
	cygnus_cvs_20020108_pre:1.1
	binutils_latest_snapshot:1.7;
locks; strict;
comment	@# @;


1.7
date	2012.11.14.13.44.45;	author uweigand;	state Exp;
branches;
next	1.6;

1.6
date	2012.10.29.09.25.15;	author amodra;	state Exp;
branches;
next	1.5;

1.5
date	2012.05.14.02.40.00;	author hjl;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	2005.03.02.13.25.01;	author amodra;	state Exp;
branches;
next	1.3;

1.3
date	2004.12.11.04.32.36;	author amodra;	state Exp;
branches;
next	1.2;

1.2
date	2004.03.16.00.58.42;	author amodra;	state Exp;
branches;
next	1.1;

1.1
date	2001.08.27.10.51.20;	author amodra;	state Exp;
branches
	1.1.12.1;
next	;

1.5.2.1
date	2013.01.21.13.48.46;	author amodra;	state Exp;
branches;
next	;

1.1.12.1
date	2004.03.16.00.59.35;	author amodra;	state Exp;
branches;
next	;


desc
@@


1.7
log
@gas/ChangeLog:

	* config/tc-ppc.c (md_apply_fix): Leave field zero when emitting
	an ELF reloc on data as well.

gas/testsuite/ChangeLog:

	* gas/ppc/astest.d: Update for fixup changes.
	* gas/ppc/astest64.d: Likewise.
	* gas/ppc/astest2.d: Likewise.
	* gas/ppc/astest2_64.d: Likewise.
	* gas/ppc/test1elf32.d: Likewise.
	* gas/ppc/test1elf64.d: Likewise.
@
text
@#objdump: -Drx
#name: PowerPC Test 1, 32 bit elf

.*
.*
architecture: powerpc:common, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x00000000

Sections:
Idx Name +Size +VMA +LMA +File off +Algn
  0 \.text +00000050  0+0000  0+0000  .*
 +CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 \.data +00000018  0+0000  0+0000  .*
 +CONTENTS, ALLOC, LOAD, RELOC, DATA
  2 \.bss  +00000000  0+0000  0+0000  .*
 +ALLOC
SYMBOL TABLE:
0+0000 l    d  \.text	0+0000 (|\.text)
0+0000 l    d  \.data	0+0000 (|\.data)
0+0000 l    d  \.bss	0+0000 (|\.bss)
0+0000 l       \.data	0+0000 dsym0
0+0004 l       \.data	0+0000 dsym1
0+0004 l       \.data	0+0000 usym0
0+0008 l       \.data	0+0000 usym1
0+0008 l       \.data	0+0000 datpt
0+000c l       \.data	0+0000 dat0
0+0010 l       \.data	0+0000 dat1
0+0014 l       \.data	0+0000 dat2
0+0000         \*UND\*	0+0000 esym0
0+0000         \*UND\*	0+0000 esym1
0+0000         \*UND\*	0+0000 jk


Disassembly of section \.text:

0+0000 <\.text>:
   0:	(80 63 00 00|00 00 63 80) 	lwz     r3,0\(r3\)
			(2|0): R_PPC_ADDR16_LO	\.data
   4:	(80 63 00 0.|0. 00 63 80) 	lwz     r3,.\(r3\)
			(6|4): R_PPC_ADDR16_LO	\.data\+0x4
   8:	(80 63 00 0.|0. 00 63 80) 	lwz     r3,.\(r3\)
			(a|8): R_PPC_ADDR16_LO	\.data\+0x4
   c:	(80 63 00 0.|0. 00 63 80) 	lwz     r3,.\(r3\)
			(e|c): R_PPC_ADDR16_LO	\.data\+0x8
  10:	(80 63 00 00|00 00 63 80) 	lwz     r3,0\(r3\)
			(12|10): R_PPC_ADDR16_LO	esym0
  14:	(80 63 00 00|00 00 63 80) 	lwz     r3,0\(r3\)
			(16|14): R_PPC_ADDR16_LO	esym1
  18:	(38 60 00 04|04 00 60 38) 	li      r3,4
  1c:	(38 60 ff fc|fc ff 60 38) 	li      r3,-4
  20:	(38 60 00 04|04 00 60 38) 	li      r3,4
  24:	(38 60 ff fc|fc ff 60 38) 	li      r3,-4
  28:	(38 60 ff fc|fc ff 60 38) 	li      r3,-4
  2c:	(38 60 00 04|04 00 60 38) 	li      r3,4
  30:	(38 60 00 00|00 00 60 38) 	li      r3,0
			(32|30): R_PPC_ADDR16_LO	\.data
  34:	(38 60 00 00|00 00 60 38) 	li      r3,0
			(36|34): R_PPC_ADDR16_HI	\.data
  38:	(38 60 00 00|00 00 60 38) 	li      r3,0
			(3a|38): R_PPC_ADDR16_HA	\.data
  3c:	(38 60 ff fc|fc ff 60 38) 	li      r3,-4
  40:	(38 60 ff ff|ff ff 60 38) 	li      r3,-1
  44:	(38 60 00 00|00 00 60 38) 	li      r3,0
  48:	(80 64 00 04|04 00 64 80) 	lwz     r3,4\(r4\)
  4c:	(80 60 00 00|00 00 60 80) 	lwz     r3,0\(0\)
			(4e|4c): R_PPC_ADDR16_LO	\.text
Disassembly of section \.data:

0+0000 <dsym0>:
   0:	(de ad be ef|ef be ad de) 	stfdu   f21,-16657\(r13\)

0+0004 <dsym1>:
   4:	(ca fe ba be|be ba fe ca) 	lfd     f23,-17730\(r30\)

0+0008 <datpt>:
   8:	00 00 00 00 	\.long 0x0
			8: R_PPC_REL32	jk\+0x989680

0+000c <dat0>:
   c:	00 00 00 00 	\.long 0x0
			c: R_PPC_REL32	jk-0x4

0+0010 <dat1>:
  10:	00 00 00 00 	\.long 0x0
			10: R_PPC_REL32	jk

0+0014 <dat2>:
  14:	00 00 00 00 	\.long 0x0
			14: R_PPC_REL32	jk\+0x4
@


1.6
log
@	* gas/cfi/cfi.exp: Remove redundant ppc test.  Exclude
	powerpc-pe targets from cfi-common-6 test.
	* gas/cfi/cfi-ppc-1.d: Use objdump to handle pe.
	* gas/cfi/cfi-ppc-1.s: Don't use .type and .size.
	* gas/ppc/ppc.exp: Exclude various tests for powerpc-pe.  Exclude
	vle tests for le targets.
	* gas/ppc/476.d, * gas/ppc/476.s: Update for le output.  Use .text
	rather than section directive with quotes.
	* gas/ppc/a2.d,	* gas/ppc/a2.s: Likewise.
	* gas/ppc/altivec.d, * gas/ppc/altivec.s: Likewise.
	* gas/ppc/altivec2.d: Likewise.
	* gas/ppc/altivec_and_spe.d: Likewise.
	* gas/ppc/astest.d: Likewise.
	* gas/ppc/astest2.d: Likewise.
	* gas/ppc/astest2_64.d: Likewise.
	* gas/ppc/astest64.d: Likewise.
	* gas/ppc/booke.d, * gas/ppc/booke.s: Likewise.
	* gas/ppc/cell.d, * gas/ppc/cell.s: Likewise.
	* gas/ppc/common.d, * gas/ppc/common.s: Likewise.
	* gas/ppc/e500.d, * gas/ppc/e500.s: Likewise.
	* gas/ppc/e500mc.d, * gas/ppc/e500mc.s: Likewise.
	* gas/ppc/e500mc64_nop.d, * gas/ppc/e500mc64_nop.s: Likewise.
	* gas/ppc/e5500_nop.d, * gas/ppc/e5500_nop.s: Likewise.
	* gas/ppc/e6500.d, * gas/ppc/e6500.s: Likewise.
	* gas/ppc/e6500_nop.d, * gas/ppc/e6500_nop.s: Likewise.
	* gas/ppc/machine.d: Likewise.
	* gas/ppc/power4.d, * gas/ppc/power4.s: Likewise.
	* gas/ppc/power4_32.d, * gas/ppc/power4_32.s: Likewise.
	* gas/ppc/power6.d, * gas/ppc/power6.s: Likewise.
	* gas/ppc/power7.d, * gas/ppc/power7.s: Likewise.
	* gas/ppc/ppc750ps.d, * gas/ppc/ppc750ps.s: Likewise.
	* gas/ppc/regnames.d: Likewise.
	* gas/ppc/simpshft.d: Likewise.
	* gas/ppc/test1elf32.d: Likewise.
	* gas/ppc/test1elf64.d: Likewise.
	* gas/ppc/titan.d, * gas/ppc/titan.s: Likewise.
	* gas/ppc/vle-reloc.s: Likewise.
	* gas/ppc/vle-simple-1.s: Likewise.
	* gas/ppc/vle-simple-2.s: Likewise.
	* gas/ppc/vle-simple-3.s: Likewise.
	* gas/ppc/vle-simple-4.s: Likewise.
	* gas/ppc/vle-simple-5.s: Likewise.
	* gas/ppc/vle-simple-6.s: Likewise.
	* gas/ppc/vle.s: Likewise.
	* gas/ppc/vsx.d, * gas/ppc/vsx.s: Likewise.
@
text
@d77 1
a77 1
   8:	(00 98 96 80|80 96 98 00) 	\.long 0x989680
d81 1
a81 1
   c:	(ff ff ff fc|fc ff ff ff) 	fnmsub  f31,f31,f31,f31
d85 1
a85 1
  10:	(00 00 00 00|00 00 00 00) 	\.long 0x0
d89 1
a89 1
  14:	(00 00 00 04|04 00 00 00) 	\.long 0x4
@


1.5
log
@Print addend as signed in objdump

binutils/

	* objdump.c (disassemble_bytes): Print addend as signed.
	(dump_reloc_set): Likewise.

gas/testsuite/

	* gas/all/fwdexp.d: Expect addend as signed.
	* gas/alpha/elf-reloc-1.d: Likewise.
	* gas/i386/mixed-mode-reloc64.d: Likewise.
	* gas/i386/reloc64.d: Likewise.
	* gas/i386/ilp32/mixed-mode-reloc64.d: Expect addend as signed.
	* gas/i386/ilp32/reloc64.d: Likewise.
	* gas/ia64/pcrel.d: Likewise.
	* gas/mips/branch-misc-2-64.d: Likewise.
	* gas/mips/branch-misc-2pic-64.d: Likewise.
	* gas/mips/branch-misc-4-64.d: Likewise.
	* gas/mips/ldstla-n64-sym32.d: Likewise.
	* gas/mips/micromips@@branch-misc-2-64.d: Likewise.
	* gas/mips/micromips@@branch-misc-2pic-64.d: Likewise.
	* gas/mips/micromips@@branch-misc-4-64.d: Likewise.
	* gas/mips/mips16-hilo-n32.d: Likewise.
	* gas/ppc/astest.d: Likewise.
	* gas/ppc/astest2.d: Likewise.
	* gas/ppc/astest2_64.d: Likewise.
	* gas/ppc/astest64.d: Likewise.
	* gas/ppc/test1elf32.d: Likewise.
	* gas/ppc/test1elf64.d: Likewise.
	* gas/sparc/reloc64.d: Likewise.
@
text
@d4 1
a4 1
.*: +file format elf32-powerpc
d38 30
a67 30
   0:	80 63 00 00 	lwz     r3,0\(r3\)
			2: R_PPC_ADDR16_LO	\.data
   4:	80 63 00 04 	lwz     r3,4\(r3\)
			6: R_PPC_ADDR16_LO	\.data\+0x4
   8:	80 63 00 04 	lwz     r3,4\(r3\)
			a: R_PPC_ADDR16_LO	\.data\+0x4
   c:	80 63 00 08 	lwz     r3,8\(r3\)
			e: R_PPC_ADDR16_LO	\.data\+0x8
  10:	80 63 00 00 	lwz     r3,0\(r3\)
			12: R_PPC_ADDR16_LO	esym0
  14:	80 63 00 00 	lwz     r3,0\(r3\)
			16: R_PPC_ADDR16_LO	esym1
  18:	38 60 00 04 	li      r3,4
  1c:	38 60 ff fc 	li      r3,-4
  20:	38 60 00 04 	li      r3,4
  24:	38 60 ff fc 	li      r3,-4
  28:	38 60 ff fc 	li      r3,-4
  2c:	38 60 00 04 	li      r3,4
  30:	38 60 00 00 	li      r3,0
			32: R_PPC_ADDR16_LO	\.data
  34:	38 60 00 00 	li      r3,0
			36: R_PPC_ADDR16_HI	\.data
  38:	38 60 00 00 	li      r3,0
			3a: R_PPC_ADDR16_HA	\.data
  3c:	38 60 ff fc 	li      r3,-4
  40:	38 60 ff ff 	li      r3,-1
  44:	38 60 00 00 	li      r3,0
  48:	80 64 00 04 	lwz     r3,4\(r4\)
  4c:	80 60 00 00 	lwz     r3,0\(0\)
			4e: R_PPC_ADDR16_LO	\.text
d71 1
a71 1
   0:	de ad be ef 	stfdu   f21,-16657\(r13\)
d74 1
a74 1
   4:	ca fe ba be 	lfd     f23,-17730\(r30\)
d77 1
a77 1
   8:	00 98 96 80 	\.long 0x989680
d81 1
a81 1
   c:	ff ff ff fc 	fnmsub  f31,f31,f31,f31
d85 1
a85 1
  10:	00 00 00 00 	\.long 0x0
d89 1
a89 1
  14:	00 00 00 04 	\.long 0x4
@


1.5.2.1
log
@	PR 12549
	PR 14493
	PR 14567
	PR 14662
	PR 14758
	PR 14813
	PR 14904
	PR 14915
	PR 14926
	PR 14950
	PR 14962
	Apply mainline patches
@
text
@d4 1
a4 1
.*
d38 30
a67 30
   0:	(80 63 00 00|00 00 63 80) 	lwz     r3,0\(r3\)
			(2|0): R_PPC_ADDR16_LO	\.data
   4:	(80 63 00 0.|0. 00 63 80) 	lwz     r3,.\(r3\)
			(6|4): R_PPC_ADDR16_LO	\.data\+0x4
   8:	(80 63 00 0.|0. 00 63 80) 	lwz     r3,.\(r3\)
			(a|8): R_PPC_ADDR16_LO	\.data\+0x4
   c:	(80 63 00 0.|0. 00 63 80) 	lwz     r3,.\(r3\)
			(e|c): R_PPC_ADDR16_LO	\.data\+0x8
  10:	(80 63 00 00|00 00 63 80) 	lwz     r3,0\(r3\)
			(12|10): R_PPC_ADDR16_LO	esym0
  14:	(80 63 00 00|00 00 63 80) 	lwz     r3,0\(r3\)
			(16|14): R_PPC_ADDR16_LO	esym1
  18:	(38 60 00 04|04 00 60 38) 	li      r3,4
  1c:	(38 60 ff fc|fc ff 60 38) 	li      r3,-4
  20:	(38 60 00 04|04 00 60 38) 	li      r3,4
  24:	(38 60 ff fc|fc ff 60 38) 	li      r3,-4
  28:	(38 60 ff fc|fc ff 60 38) 	li      r3,-4
  2c:	(38 60 00 04|04 00 60 38) 	li      r3,4
  30:	(38 60 00 00|00 00 60 38) 	li      r3,0
			(32|30): R_PPC_ADDR16_LO	\.data
  34:	(38 60 00 00|00 00 60 38) 	li      r3,0
			(36|34): R_PPC_ADDR16_HI	\.data
  38:	(38 60 00 00|00 00 60 38) 	li      r3,0
			(3a|38): R_PPC_ADDR16_HA	\.data
  3c:	(38 60 ff fc|fc ff 60 38) 	li      r3,-4
  40:	(38 60 ff ff|ff ff 60 38) 	li      r3,-1
  44:	(38 60 00 00|00 00 60 38) 	li      r3,0
  48:	(80 64 00 04|04 00 64 80) 	lwz     r3,4\(r4\)
  4c:	(80 60 00 00|00 00 60 80) 	lwz     r3,0\(0\)
			(4e|4c): R_PPC_ADDR16_LO	\.text
d71 1
a71 1
   0:	(de ad be ef|ef be ad de) 	stfdu   f21,-16657\(r13\)
d74 1
a74 1
   4:	(ca fe ba be|be ba fe ca) 	lfd     f23,-17730\(r30\)
d77 1
a77 1
   8:	00 00 00 00 	\.long 0x0
d81 1
a81 1
   c:	00 00 00 00 	\.long 0x0
d89 1
a89 1
  14:	00 00 00 00 	\.long 0x0
@


1.4
log
@	* gas/ppc/astest.d: Adjust for relocs reduced to section sym.
	* gas/ppc/astest2.d: Likewise.
	* gas/ppc/astest2_64.d: Likewise.
	* ppc/astest64.d: Likewise.
	* ppc/booke.d: Likewise.
	* ppc/power4.d: Likewise.
	* ppc/test1elf32.d: Likewise.
	* ppc/test1elf64.d: Likewise.
@
text
@d82 1
a82 1
			c: R_PPC_REL32	jk\+0xf+fffc
@


1.3
log
@bfd/
	* elfcode.h (elf_slurp_symbol_table): Use bfd_elf_sym_name so that
	canonical sections syms have a name.

gas/testsuite/
	Update for changed section syms.

ld/testsuite/
	Update for changed section syms.
@
text
@d39 7
a45 7
			2: R_PPC_ADDR16_LO	dsym0
   4:	80 63 00 00 	lwz     r3,0\(r3\)
			6: R_PPC_ADDR16_LO	dsym1
   8:	80 63 00 00 	lwz     r3,0\(r3\)
			a: R_PPC_ADDR16_LO	usym0
   c:	80 63 00 00 	lwz     r3,0\(r3\)
			e: R_PPC_ADDR16_LO	usym1
d57 1
a57 1
			32: R_PPC_ADDR16_LO	dsym0
d59 1
a59 1
			36: R_PPC_ADDR16_HI	dsym0
d61 1
a61 1
			3a: R_PPC_ADDR16_HA	dsym0
@


1.2
log
@opcodes/
	* ppc-dis.c (print_insn_powerpc): Don't print tabs.  Handle
	PPC_OPERANDS_GPR_0.
	* ppc-opc.c (RA0): Define.
	(RAQ, RAL, RAM, RAS, RSQ, RTQ, RSO): Use PPC_OPERAND_GPR_0.
	(RAOPT): Rename from RAO.  Update all uses.
	(powerpc_opcodes): Use RA0 as appropriate.  Add "lsdx", "lsdi",
	"stsdx", "stsdi", "lmd" and "stmd" insns.

include/opcode/
	* ppc.h (PPC_OPERAND_GPR_0): Define.  Bump other operand defines.

gas/testsuite/
	Update gas/ppc/.

ld/testsuite/
	Update ld-powerpc/.
@
text
@d19 3
a21 3
0+0000 l    d  \.text	0+0000 
0+0000 l    d  \.data	0+0000 
0+0000 l    d  \.bss	0+0000 
@


1.1
log
@	* gas/macros/macros.exp: xfail powerpc-*-aix.
	* gas/ppc/astest64.s: New.
	* gas/ppc/astest64.d: New.
	* gas/ppc/astest2_64.s: New.
	* gas/ppc/astest2_64.d: New.
	* gas/ppc/test1elf.asm: New.
	* gas/ppc/test1xcoff.asm: New.
	* gas/ppc/generate.sh: New. Generate new files below from above .asm
	* gas/ppc/test1elf32.s: New.
	* gas/ppc/test1elf32.d: New.
	* gas/ppc/test1elf64.s: New.
	* gas/ppc/test1elf64.d: New.
	* gas/ppc/test1xcoff32.s: New.
	* gas/ppc/test1xcoff32.d: New.
	* gas/ppc/ppc.exp: Run new tests.
	* gas/ppc/simpshft.s: Tweak align now that we get nops.
@
text
@d38 1
a38 1
   0:	80 63 00 00 	lwz	r3,0\(r3\)
d40 1
a40 1
   4:	80 63 00 00 	lwz	r3,0\(r3\)
d42 1
a42 1
   8:	80 63 00 00 	lwz	r3,0\(r3\)
d44 1
a44 1
   c:	80 63 00 00 	lwz	r3,0\(r3\)
d46 1
a46 1
  10:	80 63 00 00 	lwz	r3,0\(r3\)
d48 1
a48 1
  14:	80 63 00 00 	lwz	r3,0\(r3\)
d50 7
a56 7
  18:	38 60 00 04 	li	r3,4
  1c:	38 60 ff fc 	li	r3,-4
  20:	38 60 00 04 	li	r3,4
  24:	38 60 ff fc 	li	r3,-4
  28:	38 60 ff fc 	li	r3,-4
  2c:	38 60 00 04 	li	r3,4
  30:	38 60 00 00 	li	r3,0
d58 1
a58 1
  34:	38 60 00 00 	li	r3,0
d60 1
a60 1
  38:	38 60 00 00 	li	r3,0
d62 5
a66 5
  3c:	38 60 ff fc 	li	r3,-4
  40:	38 60 ff ff 	li	r3,-1
  44:	38 60 00 00 	li	r3,0
  48:	80 64 00 04 	lwz	r3,4\(r4\)
  4c:	80 60 00 00 	lwz	r3,0\(r0\)
d71 1
a71 1
   0:	de ad be ef 	stfdu	f21,-16657\(r13\)
d74 1
a74 1
   4:	ca fe ba be 	lfd	f23,-17730\(r30\)
d81 1
a81 1
   c:	ff ff ff fc 	fnmsub	f31,f31,f31,f31
@


1.1.12.1
log
@opcodes/
	* ppc-dis.c (print_insn_powerpc): Don't print tabs.  Handle
	PPC_OPERANDS_GPR_0.
	* ppc-opc.c (RA0): Define.
	(RAQ, RAL, RAM, RAS, RSQ, RTQ, RSO): Use PPC_OPERAND_GPR_0.
	(RAOPT): Rename from RAO.  Update all uses.
	(powerpc_opcodes): Use RA0 as appropriate.  Add "lsdx", "lsdi",
	"stsdx", "stsdi", "lmd" and "stmd" insns.

include/opcode/
	* ppc.h (PPC_OPERAND_GPR_0): Define.  Bump other operand defines.

gas/testsuite/
	Update gas/ppc/.

ld/testsuite/
	Update ld-powerpc/.
@
text
@d38 1
a38 1
   0:	80 63 00 00 	lwz     r3,0\(r3\)
d40 1
a40 1
   4:	80 63 00 00 	lwz     r3,0\(r3\)
d42 1
a42 1
   8:	80 63 00 00 	lwz     r3,0\(r3\)
d44 1
a44 1
   c:	80 63 00 00 	lwz     r3,0\(r3\)
d46 1
a46 1
  10:	80 63 00 00 	lwz     r3,0\(r3\)
d48 1
a48 1
  14:	80 63 00 00 	lwz     r3,0\(r3\)
d50 7
a56 7
  18:	38 60 00 04 	li      r3,4
  1c:	38 60 ff fc 	li      r3,-4
  20:	38 60 00 04 	li      r3,4
  24:	38 60 ff fc 	li      r3,-4
  28:	38 60 ff fc 	li      r3,-4
  2c:	38 60 00 04 	li      r3,4
  30:	38 60 00 00 	li      r3,0
d58 1
a58 1
  34:	38 60 00 00 	li      r3,0
d60 1
a60 1
  38:	38 60 00 00 	li      r3,0
d62 5
a66 5
  3c:	38 60 ff fc 	li      r3,-4
  40:	38 60 ff ff 	li      r3,-1
  44:	38 60 00 00 	li      r3,0
  48:	80 64 00 04 	lwz     r3,4\(r4\)
  4c:	80 60 00 00 	lwz     r3,0\(0\)
d71 1
a71 1
   0:	de ad be ef 	stfdu   f21,-16657\(r13\)
d74 1
a74 1
   4:	ca fe ba be 	lfd     f23,-17730\(r30\)
d81 1
a81 1
   c:	ff ff ff fc 	fnmsub  f31,f31,f31,f31
@


