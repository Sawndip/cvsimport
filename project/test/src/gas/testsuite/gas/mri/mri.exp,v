head	1.5;
access;
symbols
	binutils-2_24-branch:1.5.0.2
	binutils-2_24-branchpoint:1.5
	binutils-2_21_1:1.4
	binutils-2_23_2:1.4
	binutils-2_23_1:1.4
	binutils-2_23:1.4
	binutils-2_23-branch:1.4.0.38
	binutils-2_23-branchpoint:1.4
	binutils-2_22_branch:1.4.0.36
	binutils-2_22:1.4
	binutils-2_22-branch:1.4.0.34
	binutils-2_22-branchpoint:1.4
	binutils-2_21:1.4
	binutils-2_21-branch:1.4.0.32
	binutils-2_21-branchpoint:1.4
	binutils-2_20_1:1.4
	binutils-2_20:1.4
	binutils-arc-20081103-branch:1.4.0.30
	binutils-arc-20081103-branchpoint:1.4
	binutils-2_20-branch:1.4.0.28
	binutils-2_20-branchpoint:1.4
	dje-cgen-play1-branch:1.4.0.26
	dje-cgen-play1-branchpoint:1.4
	arc-20081103-branch:1.4.0.24
	arc-20081103-branchpoint:1.4
	binutils-2_19_1:1.4
	binutils-2_19:1.4
	binutils-2_19-branch:1.4.0.22
	binutils-2_19-branchpoint:1.4
	binutils-2_18:1.4
	binutils-2_18-branch:1.4.0.20
	binutils-2_18-branchpoint:1.4
	binutils-csl-coldfire-4_1-32:1.4
	binutils-csl-sourcerygxx-4_1-32:1.4
	binutils-csl-innovasic-fido-3_4_4-33:1.4
	binutils-csl-sourcerygxx-3_4_4-32:1.4
	binutils-csl-coldfire-4_1-30:1.4
	binutils-csl-sourcerygxx-4_1-30:1.4
	binutils-csl-coldfire-4_1-28:1.4
	binutils-csl-sourcerygxx-4_1-29:1.4
	binutils-csl-sourcerygxx-4_1-28:1.4
	binutils-csl-arm-2006q3-27:1.4
	binutils-csl-sourcerygxx-4_1-27:1.4
	binutils-csl-arm-2006q3-26:1.4
	binutils-csl-sourcerygxx-4_1-26:1.4
	binutils-csl-sourcerygxx-4_1-25:1.4
	binutils-csl-sourcerygxx-4_1-24:1.4
	binutils-csl-sourcerygxx-4_1-23:1.4
	binutils-csl-sourcerygxx-4_1-21:1.4
	binutils-csl-arm-2006q3-21:1.4
	binutils-csl-sourcerygxx-4_1-22:1.4
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.4
	binutils-csl-sourcerygxx-4_1-20:1.4
	binutils-csl-arm-2006q3-19:1.4
	binutils-csl-sourcerygxx-4_1-19:1.4
	binutils-csl-sourcerygxx-4_1-18:1.4
	binutils-csl-renesas-4_1-9:1.4
	binutils-csl-sourcerygxx-3_4_4-25:1.4
	binutils-csl-renesas-4_1-8:1.4
	binutils-csl-renesas-4_1-7:1.4
	binutils-csl-renesas-4_1-6:1.4
	binutils-csl-sourcerygxx-4_1-17:1.4
	binutils-csl-sourcerygxx-4_1-14:1.4
	binutils-csl-sourcerygxx-4_1-15:1.4
	binutils-csl-sourcerygxx-4_1-13:1.4
	binutils-2_17:1.4
	binutils-csl-sourcerygxx-4_1-12:1.4
	binutils-csl-sourcerygxx-3_4_4-21:1.4
	binutils-csl-wrs-linux-3_4_4-24:1.4
	binutils-csl-wrs-linux-3_4_4-23:1.4
	binutils-csl-sourcerygxx-4_1-9:1.4
	binutils-csl-sourcerygxx-4_1-8:1.4
	binutils-csl-sourcerygxx-4_1-7:1.4
	binutils-csl-arm-2006q1-6:1.4
	binutils-csl-sourcerygxx-4_1-6:1.4
	binutils-csl-wrs-linux-3_4_4-22:1.4
	binutils-csl-coldfire-4_1-11:1.4
	binutils-csl-sourcerygxx-3_4_4-19:1.4
	binutils-csl-coldfire-4_1-10:1.4
	binutils-csl-sourcerygxx-4_1-5:1.4
	binutils-csl-sourcerygxx-4_1-4:1.4
	binutils-csl-wrs-linux-3_4_4-21:1.4
	binutils-csl-morpho-4_1-4:1.4
	binutils-csl-sourcerygxx-3_4_4-17:1.4
	binutils-csl-wrs-linux-3_4_4-20:1.4
	binutils-2_17-branch:1.4.0.18
	binutils-2_17-branchpoint:1.4
	binutils-csl-2_17-branch:1.4.0.16
	binutils-csl-2_17-branchpoint:1.4
	binutils-csl-gxxpro-3_4-branch:1.4.0.14
	binutils-csl-gxxpro-3_4-branchpoint:1.4
	binutils-2_16_1:1.4
	binutils-csl-arm-2005q1b:1.4
	binutils-2_16:1.4
	binutils-csl-arm-2005q1a:1.4
	binutils-csl-arm-2005q1-branch:1.4.0.12
	binutils-csl-arm-2005q1-branchpoint:1.4
	binutils-2_16-branch:1.4.0.10
	binutils-2_16-branchpoint:1.4
	csl-arm-2004-q3d:1.4
	csl-arm-2004-q3:1.4
	binutils-2_15:1.4
	binutils-2_15-branchpoint:1.4
	csl-arm-2004-q1a:1.4
	csl-arm-2004-q1:1.4
	binutils-2_15-branch:1.4.0.8
	cagney_bfdfile-20040213-branch:1.4.0.6
	cagney_bfdfile-20040213-branchpoint:1.4
	cagney_bigcore-20040122-branch:1.4.0.4
	cagney_bigcore-20040122-branchpoint:1.4
	csl-arm-2003-q4:1.4
	binutils-2_14:1.4
	binutils-2_14-branch:1.4.0.2
	binutils-2_14-branchpoint:1.4
	binutils-2_13_2_1:1.3
	binutils-2_13_2:1.3
	binutils-2_13_1:1.3
	binutils-2_13:1.3
	binutils-2_13-branchpoint:1.3
	binutils-2_13-branch:1.3.0.4
	binutils-2_12_1:1.3
	binutils-2_12:1.3
	binutils-2_12-branch:1.3.0.2
	binutils-2_12-branchpoint:1.3
	cygnus_cvs_20020108_pre:1.3
	binutils-2_11_2:1.1.1.1.4.2
	binutils-2_11_1:1.1.1.1.4.2
	binutils-2_11:1.1.1.1.4.2
	x86_64versiong3:1.2
	binutils-2_11-branch:1.1.1.1.0.4
	binutils-2_10_1:1.1.1.1
	binutils-2_10:1.1.1.1
	binutils-2_10-branch:1.1.1.1.0.2
	binutils-2_10-branchpoint:1.1.1.1
	binutils_latest_snapshot:1.5
	repo-unification-2000-02-06:1.1.1.1
	binu_ss_19990721:1.1.1.1
	binu_ss_19990602:1.1.1.1
	binu_ss_19990502:1.1.1.1
	cygnus:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2012.12.17.16.55.57;	author nickc;	state Exp;
branches;
next	1.4;

1.4
date	2002.08.16.00.06.05;	author amodra;	state Exp;
branches;
next	1.3;

1.3
date	2001.03.18.10.18.24;	author ciceron;	state Exp;
branches;
next	1.2;

1.2
date	2001.02.08.18.55.29;	author ciceron;	state Exp;
branches;
next	1.1;

1.1
date	99.05.03.07.28.52;	author rth;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.05.03.07.28.52;	author rth;	state Exp;
branches
	1.1.1.1.4.1;
next	;

1.1.1.1.4.1
date	2001.02.08.18.53.09;	author ciceron;	state Exp;
branches;
next	1.1.1.1.4.2;

1.1.1.1.4.2
date	2001.03.18.10.17.03;	author ciceron;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Add copyright notices
@
text
@# Copyright 2012
# Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.  

#
# Test the m68k MRI compatibility mode.
#
# I originally thought that most of tests applied to any MRI
# assembler, but it turns out that different MRI assemblers use
# different syntaxes.
#

if ![istarget "m68*-*-*"] {
    return
}

# These tests are generic MRI tests: they don't rely on M68K opcodes.
run_dump_test label
run_dump_test equ
run_dump_test float
run_dump_test char
run_dump_test expr
run_dump_test common
run_dump_test comment
gas_test "empty.s" "-M" "" "MRI empty macro"
run_dump_test semi

if {[istarget "m6811-*"] || [istarget "m6812-*"] || [istarget "m68hc*-*"]} {
    return
}

# Next tests contain 68K opcodes
run_dump_test constants
run_dump_test immconst
run_dump_test for
run_dump_test if
run_dump_test repeat
run_dump_test while
run_dump_test moveml
@


1.4
log
@	* gas/all/gas.exp (forward references): Don't test c30.
	* gas/d30v/guard-debug.d: Use -gstabs rather than -g.
	* gas/elf/ehopt0.s: Don't use "$" in labels.
	* gas/ieee-fp/x930509a.exp: Don't test c30.
	* gas/m68hc11/malis.d: Adjust -I so that test runs when not building
	in source dir.
	* gas/mri/mri.exp: Don't run on "m68hc*".
	* gas/sh/basic.exp (do_fp): Match LE too.
	(pcrel-coff): Run this version for "sh*-pe*" and rename "sh*-hms" to
	"sh*-rtems".
	* gas/sh/pcrel-coff.d: Add -EB to objdump flags.
	* gas/vtable/vtable.exp: Don't run on linuxecoff.  setup_xfail in
	preference to not running on ELF targets that might one day pass.
	Add more xfails.  Add more targets to the REL list.
@
text
@d1 17
@


1.3
log
@	* gas/mri/mri.exp: Fix test of m6811/m6812 targets.
@
text
@d24 1
a24 1
if {[istarget "m6811-*-*"] || [istarget "m6812-*-*"]} {
@


1.2
log
@	* gas/mri/mri.exp: Don't execute the M68K specific tests
	on m6811-elf and m6812-elf targets, still run the generic MRI tests.
@
text
@d24 1
a24 1
if [istarget "m6811-*-*" || istarget "m6812-*-*"] {
@


1.1
log
@Initial revision
@
text
@d13 1
a15 2
run_dump_test constants
run_dump_test immconst
d22 9
a34 1
run_dump_test semi
@


1.1.1.1
log
@19990502 sourceware import
@
text
@@


1.1.1.1.4.1
log
@	* gas/mri/mri.exp: Don't execute the M68K specific tests
	on m6811-elf and m6812-elf targets, still run the generic MRI tests.
@
text
@a12 1
# These tests are generic MRI tests: they don't rely on M68K opcodes.
d15 2
a22 9
run_dump_test semi

if [istarget "m6811-*-*" || istarget "m6812-*-*"] {
    return
}

# Next tests contain 68K opcodes
run_dump_test constants
run_dump_test immconst
d27 1
@


1.1.1.1.4.2
log
@	* gas/mri/mri.exp: Fix test of m6811/m6812 targets.
@
text
@d24 1
a24 1
if {[istarget "m6811-*-*"] || [istarget "m6812-*-*"]} {
@


