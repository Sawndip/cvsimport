head	1.4;
access;
symbols
	binutils-2_24-branch:1.4.0.4
	binutils-2_24-branchpoint:1.4
	binutils-2_21_1:1.3
	binutils-2_23_2:1.4
	binutils-2_23_1:1.4
	binutils-2_23:1.4
	binutils-2_23-branch:1.4.0.2
	binutils-2_23-branchpoint:1.4
	binutils-2_22_branch:1.3.0.8
	binutils-2_22:1.3
	binutils-2_22-branch:1.3.0.6
	binutils-2_22-branchpoint:1.3
	binutils-2_21:1.3
	binutils-2_21-branch:1.3.0.4
	binutils-2_21-branchpoint:1.3
	binutils-2_20_1:1.3
	binutils-2_20:1.3
	binutils-arc-20081103-branch:1.2.0.8
	binutils-arc-20081103-branchpoint:1.2
	binutils-2_20-branch:1.3.0.2
	binutils-2_20-branchpoint:1.3
	dje-cgen-play1-branch:1.2.0.6
	dje-cgen-play1-branchpoint:1.2
	arc-20081103-branch:1.2.0.4
	arc-20081103-branchpoint:1.2
	binutils-2_19_1:1.2
	binutils-2_19:1.2
	binutils-2_19-branch:1.2.0.2
	binutils-2_19-branchpoint:1.2
	binutils-2_18:1.1
	binutils-2_18-branch:1.1.0.6
	binutils-2_18-branchpoint:1.1
	binutils-csl-coldfire-4_1-32:1.1
	binutils-csl-sourcerygxx-4_1-32:1.1
	binutils-csl-innovasic-fido-3_4_4-33:1.1
	binutils-csl-coldfire-4_1-30:1.1
	binutils-csl-sourcerygxx-4_1-30:1.1
	binutils-csl-coldfire-4_1-28:1.1
	binutils-csl-sourcerygxx-4_1-29:1.1
	binutils-csl-sourcerygxx-4_1-28:1.1
	binutils-csl-arm-2006q3-27:1.1
	binutils-csl-sourcerygxx-4_1-27:1.1
	binutils-csl-arm-2006q3-26:1.1
	binutils-csl-sourcerygxx-4_1-26:1.1
	binutils-csl-sourcerygxx-4_1-25:1.1
	binutils-csl-sourcerygxx-4_1-24:1.1
	binutils-csl-sourcerygxx-4_1-23:1.1
	binutils-csl-sourcerygxx-4_1-21:1.1
	binutils-csl-arm-2006q3-21:1.1
	binutils-csl-sourcerygxx-4_1-22:1.1
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.1
	binutils-csl-sourcerygxx-4_1-20:1.1
	binutils-csl-arm-2006q3-19:1.1
	binutils-csl-sourcerygxx-4_1-19:1.1
	binutils-csl-sourcerygxx-4_1-18:1.1
	binutils-csl-renesas-4_1-9:1.1
	binutils-csl-renesas-4_1-8:1.1
	binutils-csl-renesas-4_1-7:1.1
	binutils-csl-renesas-4_1-6:1.1
	binutils-csl-sourcerygxx-4_1-17:1.1
	binutils-csl-sourcerygxx-4_1-14:1.1
	binutils-csl-sourcerygxx-4_1-15:1.1
	binutils-csl-sourcerygxx-4_1-13:1.1
	binutils-2_17:1.1
	binutils-csl-sourcerygxx-4_1-12:1.1
	binutils-csl-sourcerygxx-3_4_4-21:1.1
	binutils-csl-sourcerygxx-4_1-9:1.1
	binutils-csl-sourcerygxx-4_1-8:1.1
	binutils-csl-sourcerygxx-4_1-7:1.1
	binutils-csl-arm-2006q1-6:1.1
	binutils-csl-sourcerygxx-4_1-6:1.1
	binutils-csl-coldfire-4_1-11:1.1
	binutils-csl-sourcerygxx-3_4_4-19:1.1
	binutils-csl-coldfire-4_1-10:1.1
	binutils-csl-sourcerygxx-4_1-5:1.1
	binutils-csl-sourcerygxx-4_1-4:1.1
	binutils-csl-morpho-4_1-4:1.1
	binutils-csl-sourcerygxx-3_4_4-17:1.1
	binutils-2_17-branch:1.1.0.4
	binutils-2_17-branchpoint:1.1
	binutils-csl-2_17-branch:1.1.0.2
	binutils-csl-2_17-branchpoint:1.1
	binutils_latest_snapshot:1.4;
locks; strict;
comment	@# @;


1.4
date	2011.12.15.04.25.10;	author jiez;	state Exp;
branches;
next	1.3;

1.3
date	2009.09.03.16.17.36;	author jiez;	state Exp;
branches;
next	1.2;

1.2
date	2008.03.26.16.48.32;	author bernds;	state Exp;
branches;
next	1.1;

1.1
date	2005.09.30.15.10.16;	author clm;	state Exp;
branches;
next	;


desc
@@


1.4
log
@gas/
2011-12-14  Stuart Henderson  <shenders@@gcc.gnu.org>

	* config/bfin-parse.y (asm_1): set SRCx fields to all 1s for
	dspalu32 instrs that don't use them.

gas/testsuite/
2011-12-14  Stuart Henderson  <shenders@@gcc.gnu.org>

	* gas/bfin/move.d: Update SRCx field expectations.
	* gas/bfin/move2.d: Likewise.
	* gas/bfin/parallel.d: Likewise.
	* gas/bfin/parallel2.d: Likewise.
	* gas/bfin/parallel3.d: Likewise.
	* gas/bfin/parallel4.d: Likewise.
	* gas/bfin/video.d: Likewise.
	* gas/bfin/video2.d: Likewise.
@
text
@#objdump: -dr
#name: move
.*: +file format .*

Disassembly of section .text:

00000000 <move_register>:
   0:	38 31       	R7 = A0.X;
   2:	fb 32       	FP = B3;
   4:	35 36       	L2 = R5;
   6:	b2 34       	M2 = I2;
   8:	d8 39       	A1.W = USP;
   a:	06 31       	R0 = ASTAT;
   c:	c9 31       	R1 = SEQSTAT;
   e:	d2 31       	R2 = SYSCFG;
  10:	db 31       	R3 = RETI;
  12:	e4 31       	R4 = RETX;
  14:	ed 31       	R5 = RETN;
  16:	f6 31       	R6 = RETE;
  18:	3f 31       	R7 = RETS;
  1a:	a8 31       	R5 = LC0;
  1c:	a3 31       	R4 = LC1;
  1e:	99 31       	R3 = LT0;
  20:	94 31       	R2 = LT1;
  22:	8a 31       	R1 = LB0;
  24:	85 31       	R0 = LB1;
  26:	96 31       	R2 = CYCLES;
  28:	9f 31       	R3 = CYCLES2;
  2a:	cf 31       	R1 = EMUDAT;
  2c:	7f 38       	RETS = FP;
  2e:	e0 3d       	LT1 = USP;
  30:	72 38       	ASTAT = P2;
  32:	08 c4 [0|3][0|f] c0 	A0 = A1;
  36:	08 c4 [0|3][0|f] e0 	A1 = A0;
  3a:	09 c4 00 20 	A0 = R0;
  3e:	09 c4 08 a0 	A1 = R1;
  42:	8b c0 00 39 	R4 = A0 \(FU\);
  46:	2f c1 00 19 	R5 = A1 \(ISS2\);
  4a:	0b c0 80 39 	R6 = A0;
  4e:	0f c0 80 19 	R7 = A1;
  52:	0f c0 80 39 	R7 = A1, R6 = A0;
  56:	8f c0 00 38 	R1 = A1, R0 = A0 \(FU\);

0000005a <move_conditional>:
  5a:	6a 07       	IF CC R5 = P2;
  5c:	b0 06       	IF !CC SP = R0;

0000005e <move_half_to_full_zero_extend>:
  5e:	fa 42       	R2 = R7.L \(Z\);
  60:	c8 42       	R0 = R1.L \(Z\);

00000062 <move_half_to_full_sign_extend>:
  62:	8d 42       	R5 = R1.L \(X\);
  64:	93 42       	R3 = R2.L \(X\);

00000066 <move_register_half>:
  66:	09 c4 28 40 	A0.X = R5.L;
  6a:	09 c4 10 c0 	A1.X = R2.L;
  6e:	0a c4 3f 00 	R0.L = A0.X;
  72:	0a c4 3f 4e 	R7.L = A1.X;
  76:	09 c4 18 00 	A0.L = R3.L;
  7a:	09 c4 20 80 	A1.L = R4.L;
  7e:	29 c4 30 00 	A0.H = R6.H;
  82:	29 c4 28 80 	A1.H = R5.H;
  86:	83 c1 00 38 	R0.L = A0 \(IU\);
  8a:	27 c0 40 18 	R1.H = A1 \(S2RND\);
  8e:	07 c0 40 18 	R1.H = A1;
  92:	67 c1 80 38 	R2.H = A1, R2.L = A0 \(IH\);
  96:	07 c0 80 38 	R2.H = A1, R2.L = A0;
  9a:	47 c0 00 38 	R0.H = A1, R0.L = A0 \(T\);
  9e:	87 c0 00 38 	R0.H = A1, R0.L = A0 \(FU\);
  a2:	07 c1 00 38 	R0.H = A1, R0.L = A0 \(IS\);
  a6:	07 c0 00 38 	R0.H = A1, R0.L = A0;

000000aa <move_byte_zero_extend>:
  aa:	57 43       	R7 = R2.B \(Z\);
  ac:	48 43       	R0 = R1.B \(Z\);

000000ae <move_byte_sign_extend>:
  ae:	4e 43       	R6 = R1.B \(Z\);
  b0:	65 43       	R5 = R4.B \(Z\);
	...
@


1.3
log
@	gas/
	* config/bfin-defs.h (IS_GENREG): Define.
	(IS_DAGREG): Define.
	(IS_SYSREG): Define.
	* config/bfin-parse.y (asm_1): Check illegal register move
	instructions.

	gas/testsuite/
	* gas/bfin/expected_move_errors.s,
	gas/bfin/expected_move_errors.l: Add "LC1 = I0;".
	* gas/bfin/move.s, gas/bfin/move.d: Remove "CYCLES = A0.W".

	opcodes/
	* bfin-dis.c (IS_DREG): Define.
	(IS_PREG): Define.
	(IS_AREG): Define.
	(IS_GENREG): Define.
	(IS_DAGREG): Define.
	(IS_SYSREG): Define.
	(decode_REGMV_0): Check illegal register move instructions.
@
text
@d59 2
a60 2
  6e:	0a c4 [0|3][0|6] 00 	R0.L = A0.X;
  72:	0a c4 [0|3][0|6] 4e 	R7.L = A1.X;
@


1.2
log
@gas/testsuite/:
	From Robin Getz  <rgetz@@blackfin.uclinux.org>
	* gas/bfin/arithmetic.d: Update to reflect spaces/capitalization in
	recent changes in opcodes/bfin-dis.c.
	gas/bfin/arithmetic.s: Likewise.
	gas/bfin/bit.d: Likewise.
	gas/bfin/bit2.d: Likewise.
	gas/bfin/control_code.d: Likewise.
	gas/bfin/control_code2.d: Likewise.
	gas/bfin/event.d: Likewise.
	gas/bfin/event2.d: Likewise.
	gas/bfin/flow.d: Likewise.
	gas/bfin/flow2.d: Likewise.
	gas/bfin/load.d: Likewise.
	gas/bfin/logical.d: Likewise.
	gas/bfin/logical2.d: Likewise.
	gas/bfin/move.d: Likewise.
	gas/bfin/move2.d: Likewise.
	gas/bfin/parallel.d: Likewise.
	gas/bfin/parallel2.d: Likewise.
	gas/bfin/parallel3.d: Likewise.
	gas/bfin/parallel4.d: Likewise.
	gas/bfin/shift.d: Likewise.
	gas/bfin/shift2.d: Likewise.
	gas/bfin/stack.d: Likewise.
	gas/bfin/stack2.d: Likewise.
	gas/bfin/store.d: Likewise.
	gas/bfin/vector.d: Likewise.
	gas/bfin/vector2.d: Likewise.
	gas/bfin/video.d: Likewise.
	gas/bfin/video2.d: Likewise.

opcodes/:
	* bfin-dis.c: (c_uimm4s4d, c_imm5d, c_imm7d, c_imm16d, c_uimm16s4d,
	c_imm32, c_huimm32e): Define.
	(constant_formats): Add flags for printing decimal, leading spaces, and
	exact symbols.
	(comment, parallel): Add global flags in all disassembly.
	(fmtconst): Take advantage of new flags, and print default in hex.
	(fmtconst_val): Likewise.
	(decode_macfunc): Be consistant with spaces, tabs, comments,
	capitalization in disassembly, fix minor coding style issues.
	(reg_names, amod0, amod1, amod0amod2, aligndir, get_allreg): Likewise.
	(decode_ProgCtrl_0, decode_PushPopMultiple_0, decode_CCflag_0,
	decode_CC2dreg_0, decode_CC2stat_0, decode_BRCC_0, decode_UJUMP_0,
	decode_REGMV_0, decode_ALU2op_0, decode_PTR2op_0, decode_LOGI2op_0,
	decode_COMP3op_0, decode_COMPI2opD_0, decode_COMPI2opP_0,
	decode_LDSTpmod_0, decode_dagMODim_0, decode_dagMODik_0,
	decode_dspLDST_0, decode_LDST_0, decode_LDSTiiFP_0, decode_LDSTii_0,
	decode_LoopSetup_0, decode_LDIMMhalf_0, decode_CALLa_0,
	decode_LDSTidxI_0, decode_linkage_0, decode_dsp32alu_0,
	decode_dsp32shift_0, decode_dsp32shiftimm_0, decode_pseudodbg_assert_0,
	_print_insn_bfin, print_insn_bfin): Likewise.
@
text
@d30 53
a82 53
  2c:	31 3d       	CYCLES = A0.W;
  2e:	7f 38       	RETS = FP;
  30:	e0 3d       	LT1 = USP;
  32:	72 38       	ASTAT = P2;
  34:	08 c4 [0|3][0|f] c0 	A0 = A1;
  38:	08 c4 [0|3][0|f] e0 	A1 = A0;
  3c:	09 c4 00 20 	A0 = R0;
  40:	09 c4 08 a0 	A1 = R1;
  44:	8b c0 00 39 	R4 = A0 \(FU\);
  48:	2f c1 00 19 	R5 = A1 \(ISS2\);
  4c:	0b c0 80 39 	R6 = A0;
  50:	0f c0 80 19 	R7 = A1;
  54:	0f c0 80 39 	R7 = A1, R6 = A0;
  58:	8f c0 00 38 	R1 = A1, R0 = A0 \(FU\);

0000005c <move_conditional>:
  5c:	6a 07       	IF CC R5 = P2;
  5e:	b0 06       	IF !CC SP = R0;

00000060 <move_half_to_full_zero_extend>:
  60:	fa 42       	R2 = R7.L \(Z\);
  62:	c8 42       	R0 = R1.L \(Z\);

00000064 <move_half_to_full_sign_extend>:
  64:	8d 42       	R5 = R1.L \(X\);
  66:	93 42       	R3 = R2.L \(X\);

00000068 <move_register_half>:
  68:	09 c4 28 40 	A0.X = R5.L;
  6c:	09 c4 10 c0 	A1.X = R2.L;
  70:	0a c4 [0|3][0|6] 00 	R0.L = A0.X;
  74:	0a c4 [0|3][0|6] 4e 	R7.L = A1.X;
  78:	09 c4 18 00 	A0.L = R3.L;
  7c:	09 c4 20 80 	A1.L = R4.L;
  80:	29 c4 30 00 	A0.H = R6.H;
  84:	29 c4 28 80 	A1.H = R5.H;
  88:	83 c1 00 38 	R0.L = A0 \(IU\);
  8c:	27 c0 40 18 	R1.H = A1 \(S2RND\);
  90:	07 c0 40 18 	R1.H = A1;
  94:	67 c1 80 38 	R2.H = A1, R2.L = A0 \(IH\);
  98:	07 c0 80 38 	R2.H = A1, R2.L = A0;
  9c:	47 c0 00 38 	R0.H = A1, R0.L = A0 \(T\);
  a0:	87 c0 00 38 	R0.H = A1, R0.L = A0 \(FU\);
  a4:	07 c1 00 38 	R0.H = A1, R0.L = A0 \(IS\);
  a8:	07 c0 00 38 	R0.H = A1, R0.L = A0;

000000ac <move_byte_zero_extend>:
  ac:	57 43       	R7 = R2.B \(Z\);
  ae:	48 43       	R0 = R1.B \(Z\);

000000b0 <move_byte_sign_extend>:
  b0:	4e 43       	R6 = R1.B \(Z\);
  b2:	65 43       	R5 = R4.B \(Z\);
@


1.1
log
@	* gas/bfin: New testsuite for bfin.
	* gas/all/gas.exp (bfin-*-*): Expected failure for alternate
	macro syntax.
@
text
@d8 30
a37 30
   0:	38 31       	R7=A0.x;
   2:	fb 32       	FP=B3;
   4:	35 36       	L2=R5;
   6:	b2 34       	M2=I2;
   8:	d8 39       	A1.w=USP;
   a:	06 31       	R0=ASTAT;
   c:	c9 31       	R1=SEQSTAT;
   e:	d2 31       	R2=SYSCFG;
  10:	db 31       	R3=RETI;
  12:	e4 31       	R4=RETX;
  14:	ed 31       	R5=RETN;
  16:	f6 31       	R6=RETE;
  18:	3f 31       	R7=RETS;
  1a:	a8 31       	R5=LC0;
  1c:	a3 31       	R4=LC1;
  1e:	99 31       	R3=LT0;
  20:	94 31       	R2=LT1;
  22:	8a 31       	R1=LB0;
  24:	85 31       	R0=LB1;
  26:	96 31       	R2=CYCLES;
  28:	9f 31       	R3=CYCLES2;
  2a:	cf 31       	R1=EMUDAT;
  2c:	31 3d       	CYCLES=A0.w;
  2e:	7f 38       	RETS=FP;
  30:	e0 3d       	LT1=USP;
  32:	72 38       	ASTAT=P2;
  34:	08 c4 [0|3][0|f] c0 	A0=A1;
  38:	08 c4 [0|3][0|f] e0 	A1=A0;
  3c:	09 c4 00 20 	A0=R0;
  40:	09 c4 08 a0 	A1=R1;
d47 1
a47 1
  5e:	b0 06       	IF ! CC SP = R0;
d50 2
a51 2
  60:	fa 42       	R2=R7.L\(Z\);
  62:	c8 42       	R0=R1.L\(Z\);
d54 2
a55 2
  64:	8d 42       	R5=R1.L\(X\);
  66:	93 42       	R3=R2.L\(X\);
d58 8
a65 8
  68:	09 c4 28 40 	A0.x=R5.L;
  6c:	09 c4 10 c0 	A1.x=R2.L;
  70:	0a c4 [0|3][0|6] 00 	R0.L=A0.x;
  74:	0a c4 [0|3][0|6] 4e 	R7.L=A1.x;
  78:	09 c4 18 00 	A0.L=R3.L;
  7c:	09 c4 20 80 	A1.L=R4.L;
  80:	29 c4 30 00 	A0.H=R6.H;
  84:	29 c4 28 80 	A1.H=R5.H;
d77 2
a78 2
  ac:	57 43       	R7=R2.B\(Z\);
  ae:	48 43       	R0=R1.B\(Z\);
d81 2
a82 2
  b0:	4e 43       	R6=R1.B\(Z\);
  b2:	65 43       	R5=R4.B\(Z\);
@

