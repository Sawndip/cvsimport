head	1.4;
access;
symbols
	binutils-2_24-branch:1.4.0.20
	binutils-2_24-branchpoint:1.4
	binutils-2_21_1:1.4
	binutils-2_23_2:1.4
	binutils-2_23_1:1.4
	binutils-2_23:1.4
	binutils-2_23-branch:1.4.0.18
	binutils-2_23-branchpoint:1.4
	binutils-2_22_branch:1.4.0.16
	binutils-2_22:1.4
	binutils-2_22-branch:1.4.0.14
	binutils-2_22-branchpoint:1.4
	binutils-2_21:1.4
	binutils-2_21-branch:1.4.0.12
	binutils-2_21-branchpoint:1.4
	binutils-2_20_1:1.4
	binutils-2_20:1.4
	binutils-arc-20081103-branch:1.4.0.10
	binutils-arc-20081103-branchpoint:1.4
	binutils-2_20-branch:1.4.0.8
	binutils-2_20-branchpoint:1.4
	dje-cgen-play1-branch:1.4.0.6
	dje-cgen-play1-branchpoint:1.4
	arc-20081103-branch:1.4.0.4
	arc-20081103-branchpoint:1.4
	binutils-2_19_1:1.4
	binutils-2_19:1.4
	binutils-2_19-branch:1.4.0.2
	binutils-2_19-branchpoint:1.4
	binutils-2_18:1.2
	binutils-2_18-branch:1.2.0.2
	binutils-2_18-branchpoint:1.2
	binutils-csl-coldfire-4_1-32:1.1
	binutils-csl-sourcerygxx-4_1-32:1.1
	binutils-csl-innovasic-fido-3_4_4-33:1.1
	binutils-csl-coldfire-4_1-30:1.1
	binutils-csl-sourcerygxx-4_1-30:1.1
	binutils-csl-coldfire-4_1-28:1.1
	binutils-csl-sourcerygxx-4_1-29:1.1
	binutils-csl-sourcerygxx-4_1-28:1.1
	binutils-csl-arm-2006q3-27:1.1
	binutils-csl-sourcerygxx-4_1-27:1.1
	binutils-csl-arm-2006q3-26:1.1
	binutils-csl-sourcerygxx-4_1-26:1.1
	binutils-csl-sourcerygxx-4_1-25:1.1
	binutils-csl-sourcerygxx-4_1-24:1.1
	binutils-csl-sourcerygxx-4_1-23:1.1
	binutils-csl-sourcerygxx-4_1-21:1.1
	binutils-csl-arm-2006q3-21:1.1
	binutils-csl-sourcerygxx-4_1-22:1.1
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.1
	binutils-csl-sourcerygxx-4_1-20:1.1
	binutils-csl-arm-2006q3-19:1.1
	binutils-csl-sourcerygxx-4_1-19:1.1
	binutils-csl-sourcerygxx-4_1-18:1.1
	binutils-csl-renesas-4_1-9:1.1
	binutils-csl-renesas-4_1-8:1.1
	binutils-csl-renesas-4_1-7:1.1
	binutils-csl-renesas-4_1-6:1.1
	binutils-csl-sourcerygxx-4_1-17:1.1
	binutils-csl-sourcerygxx-4_1-14:1.1
	binutils-csl-sourcerygxx-4_1-15:1.1
	binutils-csl-sourcerygxx-4_1-13:1.1
	binutils-2_17:1.1
	binutils-csl-sourcerygxx-4_1-12:1.1
	binutils-csl-sourcerygxx-3_4_4-21:1.1
	binutils-csl-sourcerygxx-4_1-9:1.1
	binutils-csl-sourcerygxx-4_1-8:1.1
	binutils-csl-sourcerygxx-4_1-7:1.1
	binutils-csl-arm-2006q1-6:1.1
	binutils-csl-sourcerygxx-4_1-6:1.1
	binutils-csl-coldfire-4_1-11:1.1
	binutils-csl-sourcerygxx-3_4_4-19:1.1
	binutils-csl-coldfire-4_1-10:1.1
	binutils-csl-sourcerygxx-4_1-5:1.1
	binutils-csl-sourcerygxx-4_1-4:1.1
	binutils-csl-morpho-4_1-4:1.1
	binutils-csl-sourcerygxx-3_4_4-17:1.1
	binutils-2_17-branch:1.1.0.4
	binutils-2_17-branchpoint:1.1
	binutils-csl-2_17-branch:1.1.0.2
	binutils-csl-2_17-branchpoint:1.1
	binutils_latest_snapshot:1.4;
locks; strict;
comment	@# @;


1.4
date	2008.03.26.16.48.32;	author bernds;	state Exp;
branches;
next	1.3;

1.3
date	2008.03.26.14.50.52;	author bernds;	state Exp;
branches;
next	1.2;

1.2
date	2006.09.19.09.27.31;	author bernds;	state Exp;
branches;
next	1.1;

1.1
date	2005.09.30.15.10.16;	author clm;	state Exp;
branches;
next	;


desc
@@


1.4
log
@gas/testsuite/:
	From Robin Getz  <rgetz@@blackfin.uclinux.org>
	* gas/bfin/arithmetic.d: Update to reflect spaces/capitalization in
	recent changes in opcodes/bfin-dis.c.
	gas/bfin/arithmetic.s: Likewise.
	gas/bfin/bit.d: Likewise.
	gas/bfin/bit2.d: Likewise.
	gas/bfin/control_code.d: Likewise.
	gas/bfin/control_code2.d: Likewise.
	gas/bfin/event.d: Likewise.
	gas/bfin/event2.d: Likewise.
	gas/bfin/flow.d: Likewise.
	gas/bfin/flow2.d: Likewise.
	gas/bfin/load.d: Likewise.
	gas/bfin/logical.d: Likewise.
	gas/bfin/logical2.d: Likewise.
	gas/bfin/move.d: Likewise.
	gas/bfin/move2.d: Likewise.
	gas/bfin/parallel.d: Likewise.
	gas/bfin/parallel2.d: Likewise.
	gas/bfin/parallel3.d: Likewise.
	gas/bfin/parallel4.d: Likewise.
	gas/bfin/shift.d: Likewise.
	gas/bfin/shift2.d: Likewise.
	gas/bfin/stack.d: Likewise.
	gas/bfin/stack2.d: Likewise.
	gas/bfin/store.d: Likewise.
	gas/bfin/vector.d: Likewise.
	gas/bfin/vector2.d: Likewise.
	gas/bfin/video.d: Likewise.
	gas/bfin/video2.d: Likewise.

opcodes/:
	* bfin-dis.c: (c_uimm4s4d, c_imm5d, c_imm7d, c_imm16d, c_uimm16s4d,
	c_imm32, c_huimm32e): Define.
	(constant_formats): Add flags for printing decimal, leading spaces, and
	exact symbols.
	(comment, parallel): Add global flags in all disassembly.
	(fmtconst): Take advantage of new flags, and print default in hex.
	(fmtconst_val): Likewise.
	(decode_macfunc): Be consistant with spaces, tabs, comments,
	capitalization in disassembly, fix minor coding style issues.
	(reg_names, amod0, amod1, amod0amod2, aligndir, get_allreg): Likewise.
	(decode_ProgCtrl_0, decode_PushPopMultiple_0, decode_CCflag_0,
	decode_CC2dreg_0, decode_CC2stat_0, decode_BRCC_0, decode_UJUMP_0,
	decode_REGMV_0, decode_ALU2op_0, decode_PTR2op_0, decode_LOGI2op_0,
	decode_COMP3op_0, decode_COMPI2opD_0, decode_COMPI2opP_0,
	decode_LDSTpmod_0, decode_dagMODim_0, decode_dagMODik_0,
	decode_dspLDST_0, decode_LDST_0, decode_LDSTiiFP_0, decode_LDSTii_0,
	decode_LoopSetup_0, decode_LDIMMhalf_0, decode_CALLa_0,
	decode_LDSTidxI_0, decode_linkage_0, decode_dsp32alu_0,
	decode_dsp32shift_0, decode_dsp32shiftimm_0, decode_pseudodbg_assert_0,
	_print_insn_bfin, print_insn_bfin): Likewise.
@
text
@#objdump: -d
#name: load
.*: +file format .*

Disassembly of section .text:

00000000 <load_immediate>:
   0:	17 e1 ff ff 	M3.L = 0xffff;.*
   4:	1a e1 fe ff 	B2.L = 0xfffe;.*
   8:	0e e1 00 00 	SP.L = 0x0;.*
   c:	0f e1 dc fe 	FP.L = 0xfedc;.*
  10:	40 e1 02 00 	R0.H = 0x2;.*
  14:	4d e1 20 00 	P5.H = 0x20;.*
  18:	52 e1 04 f2 	I2.H = 0xf204;.*
  1c:	59 e1 40 00 	B1.H = 0x40;.*
  20:	5c e1 ff ff 	L0.H = 0xffff;.*
  24:	45 e1 00 00 	R5.H = 0x0;.*
  28:	5a e1 00 00 	B2.H = 0x0;.*
  2c:	8f e1 20 ff 	FP = 0xff20 \(Z\);.*
  30:	9e e1 20 00 	L2 = 0x20 \(Z\);.*
  34:	85 e1 00 00 	R5 = 0x0 \(Z\);.*
  38:	08 c4 [0-3][[:xdigit:]] 00 	A0 = 0;
  3c:	08 c4 [0-3][[:xdigit:]] 40 	A1 = 0;
  40:	08 c4 [0-3][[:xdigit:]] 80 	A1 = A0 = 0;
  44:	02 62       	R2 = -0x40 \(X\);.*
  46:	20 e1 7f 00 	R0 = 0x7f \(X\);.*
  4a:	02 68       	P2 = 0x0 \(X\);.*
  4c:	06 6b       	SP = -0x20 \(X\);.*
  4e:	67 69       	FP = 0x2c \(X\);.*
  50:	3f e1 00 08 	L3 = 0x800 \(X\);.*
  54:	36 e1 ff 7f 	M2 = 0x7fff \(X\);.*
  58:	81 60       	R1 = 0x10 \(X\);.*
  5a:	3c e1 00 00 	L0 = 0x0 \(X\);.*
  5e:	27 e1 f3 00 	R7 = 0xf3 \(X\);.*
  62:	00 e1 03 00 	R0.L = 0x3;.*
  66:	01 e1 0f 00 	R1.L = 0xf;.*

0000006a <load_pointer_register>:
  6a:	7e 91       	SP = \[FP\];
  6c:	47 90       	FP = \[P0\+\+\];
  6e:	f1 90       	P1 = \[SP--\];
  70:	96 af       	SP = \[P2 \+ 0x38\];
  72:	3b ac       	P3 = \[FP \+ 0x0\];
  74:	3c e5 ff 7f 	P4 = \[FP \+ 0x1fffc\];
  78:	3e e5 01 80 	SP = \[FP \+ -0x1fffc\];
  7c:	26 ac       	SP = \[P4 \+ 0x0\];
  7e:	0d b8       	P5 = \[FP -0x80\];

00000080 <load_data_register>:
  80:	07 91       	R7 = \[P0\];
  82:	2e 90       	R6 = \[P5\+\+\];
  84:	a5 90       	R5 = \[P4--\];
  86:	bc a2       	R4 = \[FP \+ 0x28\];
  88:	33 e4 ff 7f 	R3 = \[SP \+ 0x1fffc\];
  8c:	32 a0       	R2 = \[SP \+ 0x0\];
  8e:	39 e4 01 80 	R1 = \[FP \+ -0x1fffc\];
  92:	06 80       	R0 = \[SP \+\+ P0\];
  94:	05 b8       	R5 = \[FP -0x80\];
  96:	02 9d       	R2 = \[I0\];
  98:	09 9c       	R1 = \[I1\+\+\];
  9a:	93 9c       	R3 = \[I2--\];
  9c:	9c 9d       	R4 = \[I3 \+\+ M0\];

0000009e <load_half_word_zero_extend>:
  9e:	37 95       	R7 = W\[SP\] \(Z\);
  a0:	3e 94       	R6 = W\[FP\+\+\] \(Z\);
  a2:	85 94       	R5 = W\[P0--\] \(Z\);
  a4:	cc a7       	R4 = W\[P1 \+ 0x1e\] \(Z\);
  a6:	73 e4 fe 7f 	R3 = W\[SP \+ 0xfffc\] \(Z\);
  aa:	7a e4 02 80 	R2 = W\[FP \+ -0xfffc\] \(Z\);
  ae:	28 86       	R0 = W\[P0 \+\+ P5\] \(Z\);

000000b0 <load_half_word_sign_extend>:
  b0:	77 95       	R7 = W\[SP\] \(X\);
  b2:	7e 94       	R6 = W\[FP\+\+\] \(X\);
  b4:	c5 94       	R5 = W\[P0--\] \(X\);
  b6:	0d ab       	R5 = W\[P1 \+ 0x18\] \(X\);
  b8:	73 e5 fe 7f 	R3 = W\[SP \+ 0xfffc\] \(X\);
  bc:	7f e5 02 80 	R7 = W\[FP \+ -0xfffc\] \(X\);
  c0:	51 8e       	R1 = W\[P1 \+\+ P2\] \(X\);

000000c2 <load_high_data_register_half>:
  c2:	40 9d       	R0.H = W\[I0\];
  c4:	49 9c       	R1.H = W\[I1\+\+\];
  c6:	d2 9c       	R2.H = W\[I2--\];
  c8:	f6 84       	R3.H = W\[SP\];
  ca:	07 85       	R4.H = W\[FP \+\+ P0\];

000000cc <load_low_data_register_half>:
  cc:	3f 9d       	R7.L = W\[I3\];
  ce:	36 9c       	R6.L = W\[I2\+\+\];
  d0:	ad 9c       	R5.L = W\[I1--\];
  d2:	00 83       	R4.L = W\[P0\];
  d4:	da 82       	R3.L = W\[P2 \+\+ P3\];

000000d6 <load_byte_zero_extend>:
  d6:	05 99       	R5 = B\[P0\] \(Z\);
  d8:	0c 98       	R4 = B\[P1\+\+\] \(Z\);
  da:	90 98       	R0 = B\[P2--\] \(Z\);
  dc:	b3 e4 ff 7f 	R3 = B\[SP \+ 0x7fff\] \(Z\);
  e0:	b7 e4 01 80 	R7 = B\[SP \+ -0x7fff\] \(Z\);

000000e4 <load_byte_sign_extend>:
  e4:	45 99       	R5 = B\[P0\] \(X\);
  e6:	4a 98       	R2 = B\[P1\+\+\] \(X\);
  e8:	fb 98       	R3 = B\[FP--\] \(X\);
  ea:	b7 e5 00 00 	R7 = B\[SP \+ 0x0\] \(X\);
  ee:	be e5 01 80 	R6 = B\[FP \+ -0x7fff\] \(X\);

000000f2 <load_data1>:
	...

000000f3 <load_data2>:
  f3:	10 00       	IF !CC JUMP 0xf3 <load_data2>;
  f5:	00 00       	NOP;
	...
@


1.3
log
@opcodes:
	From  Robin Getz  <robin.getz@@analog.com>
	* bfin-dis.c (bu32): Typedef.
	(enum const_forms_t): Add c_uimm32 and c_huimm32.
	(constant_formats[]): Add uimm32 and huimm16.
	(fmtconst_val): New.
	(uimm32): Define.
	(huimm32): Define.
	(imm16_val): Define.
	(luimm16_val): Define.
	(struct saved_state): Define.
	(GREG, DPREG, DREG, PREG, SPREG, FPREG, IREG, MREG, BREG, LREG,
	A0XREG, A0WREG, A1XREG, A1WREG,CCREG, LC0REG, LT0REG, LB0REG,
	LC1REG, LT1REG, LB1REG, RETSREG, PCREG): Define.
	(get_allreg): New.
	(decode_LDIMMhalf_0): Print out the whole register value.

gas/testsuite:
	From Jie Zhang  <jie.zhang@@analog.com>
	* gas/bfin/load.d: Update.
@
text
@d8 29
a36 29
   0:	17 e1 ff ff 	M3.L=0xffff.*
   4:	1a e1 fe ff 	B2.L=0xfffe.*
   8:	0e e1 00 00 	SP.L=0.*
   c:	0f e1 dc fe 	FP.L=0xfedc.*
  10:	40 e1 02 00 	R0.H=0x2.*
  14:	4d e1 20 00 	P5.H=0x20.*
  18:	52 e1 04 f2 	I2.H=0xf204.*
  1c:	59 e1 40 00 	B1.H=0x40.*
  20:	5c e1 ff ff 	L0.H=0xffff.*
  24:	45 e1 00 00 	R5.H=0x0.*
  28:	5a e1 00 00 	B2.H=0x0.*
  2c:	8f e1 20 ff 	FP=ff20.*
  30:	9e e1 20 00 	L2=20.*
  34:	85 e1 00 00 	R5=0 <load_immediate>\(Z\);
  38:	08 c4 [0-3][[:xdigit:]] 00 	A0=0;
  3c:	08 c4 [0-3][[:xdigit:]] 40 	A1=0;
  40:	08 c4 [0-3][[:xdigit:]] 80 	A1=A0=0;
  44:	02 62       	R2=-64\(x\);
  46:	20 e1 7f 00 	R0=0x7f \(X\);
  4a:	02 68       	P2=0x0;
  4c:	06 6b       	SP=-32;
  4e:	67 69       	FP=0x2c;
  50:	3f e1 00 08 	L3=0x800 \(X\);
  54:	36 e1 ff 7f 	M2=0x7fff \(X\);
  58:	81 60       	R1=0x10\(x\);
  5a:	3c e1 00 00 	L0=0x0 \(X\);
  5e:	27 e1 f3 00 	R7=0xf3 \(X\);
  62:	00 e1 03 00 	R0.L=0x3;
  66:	01 e1 0f 00 	R1.L=0xf;
d39 9
a47 9
  6a:	7e 91       	SP=\[FP\];
  6c:	47 90       	FP=\[P0\+\+\];
  6e:	f1 90       	P1=\[SP--\];
  70:	96 af       	SP=\[P2\+0x38\];
  72:	3b ac       	P3=\[FP\+0x0\];
  74:	3c e5 ff 7f 	P4=\[FP\+0x1fffc\];
  78:	3e e5 01 80 	SP=\[FP\+-131068\];
  7c:	26 ac       	SP=\[P4\+0x0\];
  7e:	0d b8       	P5=\[FP-128\];
d50 13
a62 13
  80:	07 91       	R7=\[P0\];
  82:	2e 90       	R6=\[P5\+\+\];
  84:	a5 90       	R5=\[P4--\];
  86:	bc a2       	R4=\[FP\+0x28\];
  88:	33 e4 ff 7f 	R3=\[SP\+0x1fffc\];
  8c:	32 a0       	R2=\[SP\+0x0\];
  8e:	39 e4 01 80 	R1=\[FP\+-131068\];
  92:	06 80       	R0=\[SP\+\+P0\];
  94:	05 b8       	R5=\[FP-128\];
  96:	02 9d       	R2=\[I0\];
  98:	09 9c       	R1=\[I1\+\+\];
  9a:	93 9c       	R3=\[I2--\];
  9c:	9c 9d       	R4=\[I3\+\+M0\];
d65 7
a71 7
  9e:	37 95       	R7=W\[SP\] \(Z\);
  a0:	3e 94       	R6=W\[FP\+\+\] \(Z\);
  a2:	85 94       	R5=W\[P0--\] \(Z\);
  a4:	cc a7       	R4=W\[P1\+0x1e\] \(Z\);
  a6:	73 e4 fe 7f 	R3=W\[SP\+0xfffc\] \(Z\);
  aa:	7a e4 02 80 	R2=W\[FP\+-65532\] \(Z\);
  ae:	28 86       	R0=W\[P0\+\+P5\] \(Z\);
d74 7
a80 7
  b0:	77 95       	R7=W\[SP\]\(X\);
  b2:	7e 94       	R6=W\[FP\+\+\]\(X\);
  b4:	c5 94       	R5=W\[P0--\]\(X\);
  b6:	0d ab       	R5=W\[P1\+0x18\]\(X\);
  b8:	73 e5 fe 7f 	R3=W\[SP\+0xfffc\]\(X\);
  bc:	7f e5 02 80 	R7=W\[FP\+-65532\]\(X\);
  c0:	51 8e       	R1=W\[P1\+\+P2\]\(X\);
d83 5
a87 5
  c2:	40 9d       	R0.H=W\[I0\];
  c4:	49 9c       	R1.H=W\[I1\+\+\];
  c6:	d2 9c       	R2.H=W\[I2--\];
  c8:	f6 84       	R3.H=W\[SP\];
  ca:	07 85       	R4.H=W\[FP\+\+P0\];
d90 5
a94 5
  cc:	3f 9d       	R7.L=W\[I3\];
  ce:	36 9c       	R6.L=W\[I2\+\+\];
  d0:	ad 9c       	R5.L=W\[I1--\];
  d2:	00 83       	R4.L=W\[P0\];
  d4:	da 82       	R3.L=W\[P2\+\+P3\];
d97 5
a101 5
  d6:	05 99       	R5=B\[P0\] \(Z\);
  d8:	0c 98       	R4=B\[P1\+\+\] \(Z\);
  da:	90 98       	R0=B\[P2--\] \(Z\);
  dc:	b3 e4 ff 7f 	R3=B\[SP\+0x7fff\] \(Z\);
  e0:	b7 e4 01 80 	R7=B\[SP\+-32767\] \(Z\);
d104 5
a108 5
  e4:	45 99       	R5=B\[P0\]\(X\);
  e6:	4a 98       	R2=B\[P1\+\+\]\(X\);
  e8:	fb 98       	R3=B\[FP--\]\(X\);
  ea:	b7 e5 00 00 	R7=B\[SP\+0x0\]\(X\);
  ee:	be e5 01 80 	R6=B\[FP\+-32767\]\(X\);
d114 1
a114 1
  f3:	10 00       	IF ! CC JUMP f3 <load_data2>;
@


1.2
log
@	* gas/bfin/load.s, gas/bfin/load.d: Add constant folding tests.
@
text
@d8 2
a9 2
   0:	17 e1 ff ff 	M3.L=ffff.*
   4:	1a e1 fe ff 	B2.L=fffe.*
d11 8
a18 8
   c:	0f e1 dc fe 	FP.L=fedc.*
  10:	40 e1 02 00 	R0.H=0x2;
  14:	4d e1 20 00 	P5.H=20.*
  18:	52 e1 04 f2 	I2.H=f204.*
  1c:	59 e1 40 00 	B1.H=40.*
  20:	5c e1 ff ff 	L0.H=ffff.*
  24:	45 e1 00 00 	R5.H=0x0;
  28:	5a e1 00 00 	B2.H=0 <load_immediate>;
@


1.1
log
@	* gas/bfin: New testsuite for bfin.
	* gas/all/gas.exp (bfin-*-*): Expected failure for alternate
	macro syntax.
@
text
@d34 75
a108 1
  5e:	27 e1 eb 00 	R7=0xeb \(X\);
d110 1
a110 73
00000062 <load_pointer_register>:
  62:	7e 91       	SP=\[FP\];
  64:	47 90       	FP=\[P0\+\+\];
  66:	f1 90       	P1=\[SP--\];
  68:	96 af       	SP=\[P2\+0x38\];
  6a:	3b ac       	P3=\[FP\+0x0];
  6c:	3c e5 ff 7f 	P4=\[FP\+0x1fffc\];
  70:	3e e5 01 80 	SP=\[FP\+-131068\];
  74:	26 ac       	SP=\[P4\+0x0\];
  76:	0d b8       	P5=\[FP-128\];

00000078 <load_data_register>:
  78:	07 91       	R7=\[P0\];
  7a:	2e 90       	R6=\[P5\+\+\];
  7c:	a5 90       	R5=\[P4--\];
  7e:	bc a2       	R4=\[FP\+0x28\];
  80:	33 e4 ff 7f 	R3=\[SP\+0x1fffc\];
  84:	32 a0       	R2=\[SP\+0x0\];
  86:	39 e4 01 80 	R1=\[FP\+-131068\];
  8a:	06 80       	R0=\[SP\+\+P0\];
  8c:	05 b8       	R5=\[FP-128\];
  8e:	02 9d       	R2=\[I0\];
  90:	09 9c       	R1=\[I1\+\+\];
  92:	93 9c       	R3=\[I2--\];
  94:	9c 9d       	R4=\[I3\+\+M0\];

00000096 <load_half_word_zero_extend>:
  96:	37 95       	R7=W\[SP\] \(Z\);
  98:	3e 94       	R6=W\[FP\+\+\] \(Z\);
  9a:	85 94       	R5=W\[P0--\] \(Z\);
  9c:	cc a7       	R4=W\[P1\+0x1e\] \(Z\);
  9e:	73 e4 fe 7f 	R3=W\[SP\+0xfffc\] \(Z\);
  a2:	7a e4 02 80 	R2=W\[FP\+-65532\] \(Z\);
  a6:	28 86       	R0=W\[P0\+\+P5\] \(Z\);

000000a8 <load_half_word_sign_extend>:
  a8:	77 95       	R7=W\[SP\]\(X\);
  aa:	7e 94       	R6=W\[FP\+\+\]\(X\);
  ac:	c5 94       	R5=W\[P0--\]\(X\);
  ae:	0d ab       	R5=W\[P1\+0x18\]\(X\);
  b0:	73 e5 fe 7f 	R3=W\[SP\+0xfffc\]\(X\);
  b4:	7f e5 02 80 	R7=W\[FP\+-65532\]\(X\);
  b8:	51 8e       	R1=W\[P1\+\+P2\]\(X\);

000000ba <load_high_data_register_half>:
  ba:	40 9d       	R0.H=W\[I0\];
  bc:	49 9c       	R1.H=W\[I1\+\+\];
  be:	d2 9c       	R2.H=W\[I2--\];
  c0:	f6 84       	R3.H=W\[SP\];
  c2:	07 85       	R4.H=W\[FP\+\+P0\];

000000c4 <load_low_data_register_half>:
  c4:	3f 9d       	R7.L=W\[I3\];
  c6:	36 9c       	R6.L=W\[I2\+\+\];
  c8:	ad 9c       	R5.L=W\[I1--\];
  ca:	00 83       	R4.L=W\[P0\];
  cc:	da 82       	R3.L=W\[P2\+\+P3\];

000000ce <load_byte_zero_extend>:
  ce:	05 99       	R5=B\[P0\] \(Z\);
  d0:	0c 98       	R4=B\[P1\+\+\] \(Z\);
  d2:	90 98       	R0=B\[P2--\] \(Z\);
  d4:	b3 e4 ff 7f 	R3=B\[SP\+0x7fff\] \(Z\);
  d8:	b7 e4 01 80 	R7=B\[SP\+-32767\] \(Z\);

000000dc <load_byte_sign_extend>:
  dc:	45 99       	R5=B\[P0\]\(X\);
  de:	4a 98       	R2=B\[P1\+\+\]\(X\);
  e0:	fb 98       	R3=B\[FP--\]\(X\);
  e2:	b7 e5 00 00 	R7=B\[SP\+0x0\]\(X\);
  e6:	be e5 01 80 	R6=B\[FP\+-32767\]\(X\);

000000ea <load_data1>:
d113 3
a115 3
000000eb <load_data2>:
  eb:	10 00       	IF ! CC JUMP eb <load_data2>;
  ed:	00 00       	NOP;
@

