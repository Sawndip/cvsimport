head	1.13;
access;
symbols
	binutils-2_24-branch:1.13.0.2
	binutils-2_24-branchpoint:1.13
	binutils-2_21_1:1.11
	binutils-2_23_2:1.12
	binutils-2_23_1:1.12
	binutils-2_23:1.12
	binutils-2_23-branch:1.12.0.6
	binutils-2_23-branchpoint:1.12
	binutils-2_22_branch:1.12.0.4
	binutils-2_22:1.12
	binutils-2_22-branch:1.12.0.2
	binutils-2_22-branchpoint:1.12
	binutils-2_21:1.11
	binutils-2_21-branch:1.11.0.2
	binutils-2_21-branchpoint:1.11
	binutils-2_20_1:1.8
	binutils-2_20:1.8
	binutils-arc-20081103-branch:1.5.0.8
	binutils-arc-20081103-branchpoint:1.5
	binutils-2_20-branch:1.8.0.2
	binutils-2_20-branchpoint:1.8
	dje-cgen-play1-branch:1.5.0.6
	dje-cgen-play1-branchpoint:1.5
	arc-20081103-branch:1.5.0.4
	arc-20081103-branchpoint:1.5
	binutils-2_19_1:1.5
	binutils-2_19:1.5
	binutils-2_19-branch:1.5.0.2
	binutils-2_19-branchpoint:1.5
	binutils-2_18:1.2
	binutils-2_18-branch:1.2.0.2
	binutils-2_18-branchpoint:1.2
	binutils-csl-coldfire-4_1-32:1.1
	binutils-csl-sourcerygxx-4_1-32:1.1
	binutils-csl-innovasic-fido-3_4_4-33:1.1
	binutils-csl-coldfire-4_1-30:1.1
	binutils-csl-sourcerygxx-4_1-30:1.1
	binutils-csl-coldfire-4_1-28:1.1
	binutils-csl-sourcerygxx-4_1-29:1.1
	binutils-csl-sourcerygxx-4_1-28:1.1
	binutils-csl-arm-2006q3-27:1.1
	binutils-csl-sourcerygxx-4_1-27:1.1
	binutils-csl-arm-2006q3-26:1.1
	binutils-csl-sourcerygxx-4_1-26:1.1
	binutils-csl-sourcerygxx-4_1-25:1.1
	binutils-csl-sourcerygxx-4_1-24:1.1
	binutils-csl-sourcerygxx-4_1-23:1.1
	binutils-csl-sourcerygxx-4_1-21:1.1
	binutils-csl-arm-2006q3-21:1.1
	binutils-csl-sourcerygxx-4_1-22:1.1
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.1
	binutils-csl-sourcerygxx-4_1-20:1.1
	binutils-csl-arm-2006q3-19:1.1
	binutils-csl-sourcerygxx-4_1-19:1.1
	binutils-csl-sourcerygxx-4_1-18:1.1
	binutils-csl-renesas-4_1-9:1.1
	binutils-csl-renesas-4_1-8:1.1
	binutils-csl-renesas-4_1-7:1.1
	binutils-csl-renesas-4_1-6:1.1
	binutils-csl-sourcerygxx-4_1-17:1.1
	binutils-csl-sourcerygxx-4_1-14:1.1
	binutils-csl-sourcerygxx-4_1-15:1.1
	binutils-csl-sourcerygxx-4_1-13:1.1
	binutils-2_17:1.1
	binutils-csl-sourcerygxx-4_1-12:1.1
	binutils-csl-sourcerygxx-3_4_4-21:1.1
	binutils-csl-sourcerygxx-4_1-9:1.1
	binutils-csl-sourcerygxx-4_1-8:1.1
	binutils-csl-sourcerygxx-4_1-7:1.1
	binutils-csl-arm-2006q1-6:1.1
	binutils-csl-sourcerygxx-4_1-6:1.1
	binutils-csl-coldfire-4_1-11:1.1
	binutils-csl-sourcerygxx-3_4_4-19:1.1
	binutils-csl-coldfire-4_1-10:1.1
	binutils-csl-sourcerygxx-4_1-5:1.1
	binutils-csl-sourcerygxx-4_1-4:1.1
	binutils-csl-morpho-4_1-4:1.1
	binutils-csl-sourcerygxx-3_4_4-17:1.1
	binutils-2_17-branch:1.1.0.4
	binutils-2_17-branchpoint:1.1
	binutils-csl-2_17-branch:1.1.0.2
	binutils-csl-2_17-branchpoint:1.1
	binutils_latest_snapshot:1.13;
locks; strict;
comment	@# @;


1.13
date	2012.12.17.16.55.49;	author nickc;	state Exp;
branches;
next	1.12;

1.12
date	2011.03.24.04.34.33;	author vapier;	state Exp;
branches;
next	1.11;

1.11
date	2010.10.15.20.53.28;	author vapier;	state Exp;
branches;
next	1.10;

1.10
date	2010.10.15.20.52.36;	author vapier;	state Exp;
branches;
next	1.9;

1.9
date	2010.09.22.21.26.13;	author vapier;	state Exp;
branches;
next	1.8;

1.8
date	2009.09.03.16.32.42;	author jiez;	state Exp;
branches;
next	1.7;

1.7
date	2009.09.03.15.36.02;	author jiez;	state Exp;
branches;
next	1.6;

1.6
date	2009.08.11.18.28.30;	author bernds;	state Exp;
branches;
next	1.5;

1.5
date	2008.08.26.10.03.24;	author jiez;	state Exp;
branches;
next	1.4;

1.4
date	2008.08.22.07.21.49;	author jiez;	state Exp;
branches;
next	1.3;

1.3
date	2008.03.26.15.18.42;	author bernds;	state Exp;
branches;
next	1.2;

1.2
date	2007.06.05.17.00.31;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	2005.09.30.15.10.16;	author clm;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Add copyright notices
@
text
@# Copyright 2012
# Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.  

# Blackfin assembler testsuite

if [istarget bfin*-*-*] {
	run_dump_test "allinsn16"
	run_dump_test "arithmetic"
	run_dump_test "arith_mode"
	run_dump_test "bit"
	run_dump_test "bit2"
	run_dump_test "cache"
	run_dump_test "cache2"
	run_dump_test "control_code"
	run_dump_test "control_code2"
	run_dump_test "event"
	run_dump_test "event2"
	run_list_test "expected_errors" ""
	run_list_test "expected_move_errors" ""
	run_list_test "expected_comparison_errors" ""
	run_dump_test "flow"
	run_dump_test "flow2"
	run_list_test "invalid_arith_mode" ""
	run_list_test "line_number" ""
	run_dump_test "load"
	run_dump_test "logical"
	run_dump_test "logical2"
	run_dump_test "loop"
	run_dump_test "loop2"
	run_dump_test "loop3"
	run_dump_test "loop_label"
	run_dump_test "loop_label2"
	run_dump_test "loop_temps"
	run_dump_test "misc"
	run_dump_test "move"
	run_dump_test "move2"
	run_dump_test "parallel"
	run_dump_test "parallel2"
	run_dump_test "parallel3"
	run_dump_test "parallel4"
	run_dump_test "parallel_illegal"
	run_dump_test "pseudo"
	run_dump_test "reloc"
	run_list_test "resource_conflict" ""
	run_dump_test "shift"
	run_dump_test "shift2"
	run_dump_test "stack"
	run_dump_test "stack2"
	run_dump_test "store"
	run_dump_test "vector"
	run_dump_test "vector2"
	run_dump_test "video"
	run_dump_test "video2"
}
@


1.12
log
@gas: blackfin: test all 16bit insns

The current 16bit insn test doesn't actually cover all illegal insns
since it stops at 0xa000 instead of 0xc000.  But rather than address
that, replace it with a test that covers all 16bit insns.

Signed-off-by: Mike Frysinger <vapier@@gentoo.org>
@
text
@d1 17
@


1.11
log
@gas: blackfin: add tests for recent loop label fixes

Signed-off-by: David Gibson <david.gibson@@analog.com>
Signed-off-by: Mike Frysinger <vapier@@gentoo.org>
@
text
@d4 1
a4 1
	run_dump_test "16bit_illegals"
@


1.10
log
@gas: blackfin: add illegal insn tests

Make sure all illegal insns get assembled & decoded correctly.

Signed-off-by: Robin Getz <robin.getz@@analog.com>
Signed-off-by: Mike Frysinger <vapier@@gentoo.org>
@
text
@d28 3
@


1.9
log
@gas: blackfin: fix DBG/DBGCMPLX insn encoding

Some extended registers when given to the DBG/DBGCMPLX pseudo insns are
not encoded properly.  So fix them, fix the display of them when being
disassembled, and add testcases.

Signed-off-by: Robin Getz <robin.getz@@analog.com>
Signed-off-by: Mike Frysinger <vapier@@gentoo.org>
@
text
@d4 1
d35 1
@


1.8
log
@	* config/tc-bfin.c (md_assemble): Bump line counters if there is
	EOL in the instruction.

	testsuite/
	* gas/bfin/line_number.l, gas/bfin/line_number.s: New test.
	* gas/bfin/bfin.exp: Add the new test.
@
text
@d34 1
@


1.7
log
@	* config/bfin-parse.y (asm_1): Add LOOP_BEGIN and LOOP_END.
	* config/tc-bfin.c (bfin_start_line_hook): Remove.
	(bfin_loop_beginend): New.
	* config/tc-bfin.h (bfin_start_line_hook): Don't declare.
	(md_start_line_hook): Don't define.
	* config/bfin-aux.h (bfin_loop_beginend): Declare.

	testsuite/
	* gas/bfin/loop.s, gas/bfin/loop.d: New test.
	* gas/bfin/loop2.s, gas/bfin/loop2.d: New test.
	* gas/bfin/loop3.s, gas/bfin/loop3.d: New test.
	* gas/bfin/bfin.exp: Add the new tests.
@
text
@d20 1
@


1.6
log
@gas/
	* config/bfin-parse.y (gen_multi_instr_1): New function.
	(asm): Use it instead of bfin_gen_multi_instr.
	(error): Add a format string when calling as_bad.
	* config/bfin-defs.h (insn_regmask): Declare.
	* config/tc-bfin.c (DREG_MASK, DREGH_MASK, DREGL_MASK, IREG_MASK): New
	macros.
	(decode_ProgCtrl_0, decode_LDSTpmod_0, decode_dagMODim_0,
	decode_dagMODik_0, decode_dspLDST_0, decode_LDST_0, decode_LDSTiiFP_0,
	decode_LDSTii_0, decode_dsp32mac_0, decode_dsp32mult_0,
	decode_dsp32alu_0, decode_dsp32shift_0, decode_dsp32shitimm_0,
	insn_regmask): New functions.
gas/testsuite/
	* gas/bfin/parallel.s: Add more test cases.
	* gas/bfin/parallel.d: Update accordingly.
	* gas/bfin/resource_conflict.l: New test.
	* gas/bfin/resource_conflict.s: New test.
	* gas/bfin/bfin.exp: Add resource_conflict.
@
text
@d23 3
@


1.5
log
@	* config/bfin-parse.y (check_macfunc_option): Fix instruction
	mode checking.
	(asm_1): Check mode for 16-bit multiply instructions.

	testsuite/
	* gas/bfin/arith_mode.d: New test.
	* gas/bfin/arith_mode.s: New test.
	* gas/bfin/invalid_arith_mode.l: New test.
	* gas/bfin/invalid_arith_mode.s: New test.
	* gas/bfin/bfin.exp: Add arith_mode and invalid_arith_mode.
@
text
@d31 1
@


1.4
log
@	* config/bfin-lex.l (NUMBER): Protect special `.'.

	testsuite/
	* gas/bfin/misc.s: New test.
	* gas/bfin/misc.d: New test.
	* gas/bfin/bfin.exp: Add misc test.
@
text
@d5 1
d19 1
@


1.3
log
@gas/
	From Jie Zhang  <jie.zhang@@analog.com>
	* config/bfin-parse.y (asm_1): Check AREGS in comparison
	instructions. And call yyerror () when comparing PREG with
	DREG.

gas/testsuite/:
	* gas/bfin/expected_comparison_errors.l: New test.
	* gas/bfin/expected_comparison_errors.s: New test.
	* gas/bfin/bfin.exp: Add expected_comparison_errors.
@
text
@d21 1
@


1.2
log
@Patch for PR4587 + move proc run_list_test into gas-defs.exp
@
text
@d15 1
@


1.1
log
@	* gas/bfin: New testsuite for bfin.
	* gas/all/gas.exp (bfin-*-*): Expected failure for alternate
	macro syntax.
@
text
@a2 12
proc run_list_test { name opts } {
    global srcdir subdir
    set testname "bfin $name"
    set file $srcdir/$subdir/$name
    gas_run ${name}.s $opts ">&dump.out"
    if { [regexp_diff "dump.out" "${file}.l"] } then {
	fail $testname
	verbose "output is [file_contents "dump.out"]" 2
	return
    }
    pass $testname
}
@

