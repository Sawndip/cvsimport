head	1.2;
access;
symbols
	binutils-2_24-branch:1.2.0.20
	binutils-2_24-branchpoint:1.2
	binutils-2_21_1:1.2
	binutils-2_23_2:1.2
	binutils-2_23_1:1.2
	binutils-2_23:1.2
	binutils-2_23-branch:1.2.0.18
	binutils-2_23-branchpoint:1.2
	binutils-2_22_branch:1.2.0.16
	binutils-2_22:1.2
	binutils-2_22-branch:1.2.0.14
	binutils-2_22-branchpoint:1.2
	binutils-2_21:1.2
	binutils-2_21-branch:1.2.0.12
	binutils-2_21-branchpoint:1.2
	binutils-2_20_1:1.2
	binutils-2_20:1.2
	binutils-arc-20081103-branch:1.2.0.10
	binutils-arc-20081103-branchpoint:1.2
	binutils-2_20-branch:1.2.0.8
	binutils-2_20-branchpoint:1.2
	dje-cgen-play1-branch:1.2.0.6
	dje-cgen-play1-branchpoint:1.2
	arc-20081103-branch:1.2.0.4
	arc-20081103-branchpoint:1.2
	binutils-2_19_1:1.2
	binutils-2_19:1.2
	binutils-2_19-branch:1.2.0.2
	binutils-2_19-branchpoint:1.2
	binutils-2_18:1.1
	binutils-2_18-branch:1.1.0.6
	binutils-2_18-branchpoint:1.1
	binutils-csl-coldfire-4_1-32:1.1
	binutils-csl-sourcerygxx-4_1-32:1.1
	binutils-csl-innovasic-fido-3_4_4-33:1.1
	binutils-csl-coldfire-4_1-30:1.1
	binutils-csl-sourcerygxx-4_1-30:1.1
	binutils-csl-coldfire-4_1-28:1.1
	binutils-csl-sourcerygxx-4_1-29:1.1
	binutils-csl-sourcerygxx-4_1-28:1.1
	binutils-csl-arm-2006q3-27:1.1
	binutils-csl-sourcerygxx-4_1-27:1.1
	binutils-csl-arm-2006q3-26:1.1
	binutils-csl-sourcerygxx-4_1-26:1.1
	binutils-csl-sourcerygxx-4_1-25:1.1
	binutils-csl-sourcerygxx-4_1-24:1.1
	binutils-csl-sourcerygxx-4_1-23:1.1
	binutils-csl-sourcerygxx-4_1-21:1.1
	binutils-csl-arm-2006q3-21:1.1
	binutils-csl-sourcerygxx-4_1-22:1.1
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.1
	binutils-csl-sourcerygxx-4_1-20:1.1
	binutils-csl-arm-2006q3-19:1.1
	binutils-csl-sourcerygxx-4_1-19:1.1
	binutils-csl-sourcerygxx-4_1-18:1.1
	binutils-csl-renesas-4_1-9:1.1
	binutils-csl-renesas-4_1-8:1.1
	binutils-csl-renesas-4_1-7:1.1
	binutils-csl-renesas-4_1-6:1.1
	binutils-csl-sourcerygxx-4_1-17:1.1
	binutils-csl-sourcerygxx-4_1-14:1.1
	binutils-csl-sourcerygxx-4_1-15:1.1
	binutils-csl-sourcerygxx-4_1-13:1.1
	binutils-2_17:1.1
	binutils-csl-sourcerygxx-4_1-12:1.1
	binutils-csl-sourcerygxx-3_4_4-21:1.1
	binutils-csl-sourcerygxx-4_1-9:1.1
	binutils-csl-sourcerygxx-4_1-8:1.1
	binutils-csl-sourcerygxx-4_1-7:1.1
	binutils-csl-arm-2006q1-6:1.1
	binutils-csl-sourcerygxx-4_1-6:1.1
	binutils-csl-coldfire-4_1-11:1.1
	binutils-csl-sourcerygxx-3_4_4-19:1.1
	binutils-csl-coldfire-4_1-10:1.1
	binutils-csl-sourcerygxx-4_1-5:1.1
	binutils-csl-sourcerygxx-4_1-4:1.1
	binutils-csl-morpho-4_1-4:1.1
	binutils-csl-sourcerygxx-3_4_4-17:1.1
	binutils-2_17-branch:1.1.0.4
	binutils-2_17-branchpoint:1.1
	binutils-csl-2_17-branch:1.1.0.2
	binutils-csl-2_17-branchpoint:1.1
	binutils_latest_snapshot:1.2;
locks; strict;
comment	@# @;


1.2
date	2008.03.26.16.48.32;	author bernds;	state Exp;
branches;
next	1.1;

1.1
date	2005.09.30.15.10.16;	author clm;	state Exp;
branches;
next	;


desc
@@


1.2
log
@gas/testsuite/:
	From Robin Getz  <rgetz@@blackfin.uclinux.org>
	* gas/bfin/arithmetic.d: Update to reflect spaces/capitalization in
	recent changes in opcodes/bfin-dis.c.
	gas/bfin/arithmetic.s: Likewise.
	gas/bfin/bit.d: Likewise.
	gas/bfin/bit2.d: Likewise.
	gas/bfin/control_code.d: Likewise.
	gas/bfin/control_code2.d: Likewise.
	gas/bfin/event.d: Likewise.
	gas/bfin/event2.d: Likewise.
	gas/bfin/flow.d: Likewise.
	gas/bfin/flow2.d: Likewise.
	gas/bfin/load.d: Likewise.
	gas/bfin/logical.d: Likewise.
	gas/bfin/logical2.d: Likewise.
	gas/bfin/move.d: Likewise.
	gas/bfin/move2.d: Likewise.
	gas/bfin/parallel.d: Likewise.
	gas/bfin/parallel2.d: Likewise.
	gas/bfin/parallel3.d: Likewise.
	gas/bfin/parallel4.d: Likewise.
	gas/bfin/shift.d: Likewise.
	gas/bfin/shift2.d: Likewise.
	gas/bfin/stack.d: Likewise.
	gas/bfin/stack2.d: Likewise.
	gas/bfin/store.d: Likewise.
	gas/bfin/vector.d: Likewise.
	gas/bfin/vector2.d: Likewise.
	gas/bfin/video.d: Likewise.
	gas/bfin/video2.d: Likewise.

opcodes/:
	* bfin-dis.c: (c_uimm4s4d, c_imm5d, c_imm7d, c_imm16d, c_uimm16s4d,
	c_imm32, c_huimm32e): Define.
	(constant_formats): Add flags for printing decimal, leading spaces, and
	exact symbols.
	(comment, parallel): Add global flags in all disassembly.
	(fmtconst): Take advantage of new flags, and print default in hex.
	(fmtconst_val): Likewise.
	(decode_macfunc): Be consistant with spaces, tabs, comments,
	capitalization in disassembly, fix minor coding style issues.
	(reg_names, amod0, amod1, amod0amod2, aligndir, get_allreg): Likewise.
	(decode_ProgCtrl_0, decode_PushPopMultiple_0, decode_CCflag_0,
	decode_CC2dreg_0, decode_CC2stat_0, decode_BRCC_0, decode_UJUMP_0,
	decode_REGMV_0, decode_ALU2op_0, decode_PTR2op_0, decode_LOGI2op_0,
	decode_COMP3op_0, decode_COMPI2opD_0, decode_COMPI2opP_0,
	decode_LDSTpmod_0, decode_dagMODim_0, decode_dagMODik_0,
	decode_dspLDST_0, decode_LDST_0, decode_LDSTiiFP_0, decode_LDSTii_0,
	decode_LoopSetup_0, decode_LDIMMhalf_0, decode_CALLa_0,
	decode_LDSTidxI_0, decode_linkage_0, decode_dsp32alu_0,
	decode_dsp32shift_0, decode_dsp32shiftimm_0, decode_pseudodbg_assert_0,
	_print_insn_bfin, print_insn_bfin): Likewise.
@
text
@#objdump: -dr
#name: bit
.*: +file format .*
Disassembly of section .text:

00000000 <bitclr>:
   0:	fc 4c       	BITCLR \(R4, 0x1f\);.*
   2:	00 4c       	BITCLR \(R0, 0x0\);.*

00000004 <bitset>:
   4:	f2 4a       	BITSET \(R2, 0x1e\);.*
   6:	eb 4a       	BITSET \(R3, 0x1d\);.*

00000008 <bittgl>:
   8:	b7 4b       	BITTGL \(R7, 0x16\);.*
   a:	86 4b       	BITTGL \(R6, 0x10\);.*

0000000c <bittst>:
   c:	f8 49       	CC = BITTST \(R0, 0x1f\);.*
   e:	01 49       	CC = BITTST \(R1, 0x0\);.*
  10:	7f 49       	CC = BITTST \(R7, 0xf\);.*

00000012 <deposit>:
  12:	0a c6 13 8a 	R5 = DEPOSIT \(R3, R2\);
  16:	0a c6 37 c0 	R0 = DEPOSIT \(R7, R6\) \(X\);

0000001a <extract>:
  1a:	0a c6 0a 08 	R4 = EXTRACT \(R2, R1.L\) \(Z\);
  1e:	0a c6 10 04 	R2 = EXTRACT \(R0, R2.L\) \(Z\);
  22:	0a c6 23 4e 	R7 = EXTRACT \(R3, R4.L\) \(X\);
  26:	0a c6 0e 4a 	R5 = EXTRACT \(R6, R1.L\) \(X\);

0000002a <bitmux>:
  2a:	08 c6 08 00 	BITMUX \(R1, R0, A0\) \(ASR\);
  2e:	08 c6 13 00 	BITMUX \(R2, R3, A0\) \(ASR\);
  32:	08 c6 25 40 	BITMUX \(R4, R5, A0\) \(ASL\);
  36:	08 c6 3e 40 	BITMUX \(R7, R6, A0\) \(ASL\);

0000003a <ones>:
  3a:	06 c6 00 ca 	R5.L = ONES R0;
  3e:	06 c6 02 ce 	R7.L = ONES R2;
	...
@


1.1
log
@	* gas/bfin: New testsuite for bfin.
	* gas/all/gas.exp (bfin-*-*): Expected failure for alternate
	macro syntax.
@
text
@d7 2
a8 2
   0:	fc 4c       	BITCLR \(R4,0x1f\);
   2:	00 4c       	BITCLR \(R0,0x0\);
d11 2
a12 2
   4:	f2 4a       	BITSET \(R2,0x1e\);
   6:	eb 4a       	BITSET \(R3,0x1d\);
d15 2
a16 2
   8:	b7 4b       	BITTGL \(R7,0x16\);
   a:	86 4b       	BITTGL \(R6,0x10\);
d19 3
a21 3
   c:	f8 49       	CC = BITTST \(R0,0x1f\);
   e:	01 49       	CC = BITTST \(R1,0x0\);
  10:	7f 49       	CC = BITTST \(R7,0xf\);
d24 2
a25 2
  12:	0a c6 13 8a 	R5=DEPOSIT\(R3,R2\);
  16:	0a c6 37 c0 	R0=DEPOSIT\(R7,R6\)\(X\);
d28 4
a31 4
  1a:	0a c6 0a 08 	R4=EXTRACT\(R2,R1.L\) \(Z\);
  1e:	0a c6 10 04 	R2=EXTRACT\(R0,R2.L\) \(Z\);
  22:	0a c6 23 4e 	R7=EXTRACT\(R3,R4.L\)\(X\);
  26:	0a c6 0e 4a 	R5=EXTRACT\(R6,R1.L\)\(X\);
d34 4
a37 4
  2a:	08 c6 08 00 	BITMUX \(R1,R0,A0 \)\(ASR\);
  2e:	08 c6 13 00 	BITMUX \(R2,R3,A0 \)\(ASR\);
  32:	08 c6 25 40 	BITMUX \(R4,R5,A0 \)\(ASL\);
  36:	08 c6 3e 40 	BITMUX \(R7,R6,A0 \)\(ASL\);
d40 2
a41 2
  3a:	06 c6 00 ca 	R5.L=ONES R0;
  3e:	06 c6 02 ce 	R7.L=ONES R2;
@

