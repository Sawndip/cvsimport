head	1.3;
access;
symbols
	binutils-2_24-branch:1.3.0.12
	binutils-2_24-branchpoint:1.3
	binutils-2_21_1:1.3
	binutils-2_23_2:1.3
	binutils-2_23_1:1.3
	binutils-2_23:1.3
	binutils-2_23-branch:1.3.0.10
	binutils-2_23-branchpoint:1.3
	binutils-2_22_branch:1.3.0.8
	binutils-2_22:1.3
	binutils-2_22-branch:1.3.0.6
	binutils-2_22-branchpoint:1.3
	binutils-2_21:1.3
	binutils-2_21-branch:1.3.0.4
	binutils-2_21-branchpoint:1.3
	binutils-2_20_1:1.3
	binutils-2_20:1.3
	binutils-arc-20081103-branch:1.2.0.8
	binutils-arc-20081103-branchpoint:1.2
	binutils-2_20-branch:1.3.0.2
	binutils-2_20-branchpoint:1.3
	dje-cgen-play1-branch:1.2.0.6
	dje-cgen-play1-branchpoint:1.2
	arc-20081103-branch:1.2.0.4
	arc-20081103-branchpoint:1.2
	binutils-2_19_1:1.2
	binutils-2_19:1.2
	binutils-2_19-branch:1.2.0.2
	binutils-2_19-branchpoint:1.2
	binutils-2_18:1.1
	binutils-2_18-branch:1.1.0.6
	binutils-2_18-branchpoint:1.1
	binutils-csl-coldfire-4_1-32:1.1
	binutils-csl-sourcerygxx-4_1-32:1.1
	binutils-csl-innovasic-fido-3_4_4-33:1.1
	binutils-csl-coldfire-4_1-30:1.1
	binutils-csl-sourcerygxx-4_1-30:1.1
	binutils-csl-coldfire-4_1-28:1.1
	binutils-csl-sourcerygxx-4_1-29:1.1
	binutils-csl-sourcerygxx-4_1-28:1.1
	binutils-csl-arm-2006q3-27:1.1
	binutils-csl-sourcerygxx-4_1-27:1.1
	binutils-csl-arm-2006q3-26:1.1
	binutils-csl-sourcerygxx-4_1-26:1.1
	binutils-csl-sourcerygxx-4_1-25:1.1
	binutils-csl-sourcerygxx-4_1-24:1.1
	binutils-csl-sourcerygxx-4_1-23:1.1
	binutils-csl-sourcerygxx-4_1-21:1.1
	binutils-csl-arm-2006q3-21:1.1
	binutils-csl-sourcerygxx-4_1-22:1.1
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.1
	binutils-csl-sourcerygxx-4_1-20:1.1
	binutils-csl-arm-2006q3-19:1.1
	binutils-csl-sourcerygxx-4_1-19:1.1
	binutils-csl-sourcerygxx-4_1-18:1.1
	binutils-csl-renesas-4_1-9:1.1
	binutils-csl-renesas-4_1-8:1.1
	binutils-csl-renesas-4_1-7:1.1
	binutils-csl-renesas-4_1-6:1.1
	binutils-csl-sourcerygxx-4_1-17:1.1
	binutils-csl-sourcerygxx-4_1-14:1.1
	binutils-csl-sourcerygxx-4_1-15:1.1
	binutils-csl-sourcerygxx-4_1-13:1.1
	binutils-2_17:1.1
	binutils-csl-sourcerygxx-4_1-12:1.1
	binutils-csl-sourcerygxx-3_4_4-21:1.1
	binutils-csl-sourcerygxx-4_1-9:1.1
	binutils-csl-sourcerygxx-4_1-8:1.1
	binutils-csl-sourcerygxx-4_1-7:1.1
	binutils-csl-arm-2006q1-6:1.1
	binutils-csl-sourcerygxx-4_1-6:1.1
	binutils-csl-coldfire-4_1-11:1.1
	binutils-csl-sourcerygxx-3_4_4-19:1.1
	binutils-csl-coldfire-4_1-10:1.1
	binutils-csl-sourcerygxx-4_1-5:1.1
	binutils-csl-sourcerygxx-4_1-4:1.1
	binutils-csl-morpho-4_1-4:1.1
	binutils-csl-sourcerygxx-3_4_4-17:1.1
	binutils-2_17-branch:1.1.0.4
	binutils-2_17-branchpoint:1.1
	binutils-csl-2_17-branch:1.1.0.2
	binutils-csl-2_17-branchpoint:1.1
	binutils_latest_snapshot:1.3;
locks; strict;
comment	@# @;


1.3
date	2009.09.01.00.24.01;	author jiez;	state Exp;
branches;
next	1.2;

1.2
date	2008.03.26.16.48.32;	author bernds;	state Exp;
branches;
next	1.1;

1.1
date	2005.09.30.15.10.16;	author clm;	state Exp;
branches;
next	;


desc
@@


1.3
log
@	* read.c (TC_START_LABEL): Add a new argument.
	(read_a_source_file): Pass the beginning of the symbol through
	the new argument of TC_START_LABEL.
	* config/tc-arm.h (TC_START_LABEL): Add a new argument.
	* config/tc-bfin.c (bfin_start_label): Only search '(' and '['
	from the beginning of the symbol.
	* config/tc-bfin.h (TC_START_LABEL): Add the new argument.
	* config/tc-d30v.h (TC_START_LABEL): Likewise.
	* config/tc-fr30.h (TC_START_LABEL): Likewise.
	* config/tc-m32c.h (TC_START_LABEL): Likewise.
	* config/tc-m32r.h (TC_START_LABEL): Likewise.
	* config/tc-mep.h (TC_START_LABEL): Likewise.

	testsuite/
	* gas/bfin/stack2.s: Add pop multiple instruction with a label
	on the same line.
	* gas/bfin/stack2.d: Adjust accordingly.
@
text
@#objdump: -dr
#name: stack2
.*: +file format .*

Disassembly of section .text:

00000000 <.text>:
   0:	40 01       	\[--SP\] = R0;
   2:	46 01       	\[--SP\] = R6;
   4:	48 01       	\[--SP\] = P0;
   6:	4c 01       	\[--SP\] = P4;
   8:	50 01       	\[--SP\] = I0;
   a:	51 01       	\[--SP\] = I1;
   c:	54 01       	\[--SP\] = M0;
   e:	55 01       	\[--SP\] = M1;
  10:	5c 01       	\[--SP\] = L0;
  12:	5d 01       	\[--SP\] = L1;
  14:	58 01       	\[--SP\] = B0;
  16:	59 01       	\[--SP\] = B1;
  18:	60 01       	\[--SP\] = A0.X;
  1a:	62 01       	\[--SP\] = A1.X;
  1c:	61 01       	\[--SP\] = A0.W;
  1e:	63 01       	\[--SP\] = A1.W;
  20:	66 01       	\[--SP\] = ASTAT;
  22:	67 01       	\[--SP\] = RETS;
  24:	7b 01       	\[--SP\] = RETI;
  26:	7c 01       	\[--SP\] = RETX;
  28:	7d 01       	\[--SP\] = RETN;
  2a:	7e 01       	\[--SP\] = RETE;
  2c:	70 01       	\[--SP\] = LC0;
  2e:	73 01       	\[--SP\] = LC1;
  30:	71 01       	\[--SP\] = LT0;
  32:	74 01       	\[--SP\] = LT1;
  34:	72 01       	\[--SP\] = LB0;
  36:	75 01       	\[--SP\] = LB1;
  38:	76 01       	\[--SP\] = CYCLES;
  3a:	77 01       	\[--SP\] = CYCLES2;
  3c:	78 01       	\[--SP\] = USP;
  3e:	79 01       	\[--SP\] = SEQSTAT;
  40:	7a 01       	\[--SP\] = SYSCFG;
  42:	c0 05       	\[--SP\] = \(R7:0, P5:0\);
  44:	40 05       	\[--SP\] = \(R7:0\);
  46:	c0 04       	\[--SP\] = \(P5:0\);
  48:	30 90       	R0 = \[SP\+\+\];
  4a:	36 90       	R6 = \[SP\+\+\];
  4c:	70 90       	P0 = \[SP\+\+\];
  4e:	74 90       	P4 = \[SP\+\+\];
  50:	10 01       	I0 = \[SP\+\+\];
  52:	11 01       	I1 = \[SP\+\+\];
  54:	14 01       	M0 = \[SP\+\+\];
  56:	15 01       	M1 = \[SP\+\+\];
  58:	1c 01       	L0 = \[SP\+\+\];
  5a:	1d 01       	L1 = \[SP\+\+\];
  5c:	18 01       	B0 = \[SP\+\+\];
  5e:	19 01       	B1 = \[SP\+\+\];
  60:	20 01       	A0.X = \[SP\+\+\];
  62:	22 01       	A1.X = \[SP\+\+\];
  64:	21 01       	A0.W = \[SP\+\+\];
  66:	23 01       	A1.W = \[SP\+\+\];
  68:	26 01       	ASTAT = \[SP\+\+\];
  6a:	27 01       	RETS = \[SP\+\+\];
  6c:	3b 01       	RETI = \[SP\+\+\];
  6e:	3c 01       	RETX = \[SP\+\+\];
  70:	3d 01       	RETN = \[SP\+\+\];
  72:	3e 01       	RETE = \[SP\+\+\];
  74:	30 01       	LC0 = \[SP\+\+\];
  76:	33 01       	LC1 = \[SP\+\+\];
  78:	31 01       	LT0 = \[SP\+\+\];
  7a:	34 01       	LT1 = \[SP\+\+\];
  7c:	32 01       	LB0 = \[SP\+\+\];
  7e:	35 01       	LB1 = \[SP\+\+\];
  80:	36 01       	CYCLES = \[SP\+\+\];
  82:	37 01       	CYCLES2 = \[SP\+\+\];
  84:	38 01       	USP = \[SP\+\+\];
  86:	39 01       	SEQSTAT = \[SP\+\+\];
  88:	3a 01       	SYSCFG = \[SP\+\+\];
  8a:	80 05       	\(R7:0, P5:0\) = \[SP\+\+\];
  8c:	00 05       	\(R7:0\) = \[SP\+\+\];
  8e:	80 04       	\(P5:0\) = \[SP\+\+\];
  90:	00 e8 00 00 	LINK 0x0;.*
  94:	00 e8 02 00 	LINK 0x8;.*
  98:	00 e8 ff ff 	LINK 0x3fffc;.*
  9c:	01 e8 00 00 	UNLINK;
  a0:	b3 05       	\(R7:6, P5:3\) = \[SP\+\+\];
	\.\.\.
@


1.2
log
@gas/testsuite/:
	From Robin Getz  <rgetz@@blackfin.uclinux.org>
	* gas/bfin/arithmetic.d: Update to reflect spaces/capitalization in
	recent changes in opcodes/bfin-dis.c.
	gas/bfin/arithmetic.s: Likewise.
	gas/bfin/bit.d: Likewise.
	gas/bfin/bit2.d: Likewise.
	gas/bfin/control_code.d: Likewise.
	gas/bfin/control_code2.d: Likewise.
	gas/bfin/event.d: Likewise.
	gas/bfin/event2.d: Likewise.
	gas/bfin/flow.d: Likewise.
	gas/bfin/flow2.d: Likewise.
	gas/bfin/load.d: Likewise.
	gas/bfin/logical.d: Likewise.
	gas/bfin/logical2.d: Likewise.
	gas/bfin/move.d: Likewise.
	gas/bfin/move2.d: Likewise.
	gas/bfin/parallel.d: Likewise.
	gas/bfin/parallel2.d: Likewise.
	gas/bfin/parallel3.d: Likewise.
	gas/bfin/parallel4.d: Likewise.
	gas/bfin/shift.d: Likewise.
	gas/bfin/shift2.d: Likewise.
	gas/bfin/stack.d: Likewise.
	gas/bfin/stack2.d: Likewise.
	gas/bfin/store.d: Likewise.
	gas/bfin/vector.d: Likewise.
	gas/bfin/vector2.d: Likewise.
	gas/bfin/video.d: Likewise.
	gas/bfin/video2.d: Likewise.

opcodes/:
	* bfin-dis.c: (c_uimm4s4d, c_imm5d, c_imm7d, c_imm16d, c_uimm16s4d,
	c_imm32, c_huimm32e): Define.
	(constant_formats): Add flags for printing decimal, leading spaces, and
	exact symbols.
	(comment, parallel): Add global flags in all disassembly.
	(fmtconst): Take advantage of new flags, and print default in hex.
	(fmtconst_val): Likewise.
	(decode_macfunc): Be consistant with spaces, tabs, comments,
	capitalization in disassembly, fix minor coding style issues.
	(reg_names, amod0, amod1, amod0amod2, aligndir, get_allreg): Likewise.
	(decode_ProgCtrl_0, decode_PushPopMultiple_0, decode_CCflag_0,
	decode_CC2dreg_0, decode_CC2stat_0, decode_BRCC_0, decode_UJUMP_0,
	decode_REGMV_0, decode_ALU2op_0, decode_PTR2op_0, decode_LOGI2op_0,
	decode_COMP3op_0, decode_COMPI2opD_0, decode_COMPI2opP_0,
	decode_LDSTpmod_0, decode_dagMODim_0, decode_dagMODik_0,
	decode_dspLDST_0, decode_LDST_0, decode_LDSTiiFP_0, decode_LDSTii_0,
	decode_LoopSetup_0, decode_LDIMMhalf_0, decode_CALLa_0,
	decode_LDSTidxI_0, decode_linkage_0, decode_dsp32alu_0,
	decode_dsp32shift_0, decode_dsp32shiftimm_0, decode_pseudodbg_assert_0,
	_print_insn_bfin, print_insn_bfin): Likewise.
@
text
@d84 2
@


1.1
log
@	* gas/bfin: New testsuite for bfin.
	* gas/all/gas.exp (bfin-*-*): Expected failure for alternate
	macro syntax.
@
text
@d20 4
a23 4
  18:	60 01       	\[--SP\] = A0.x;
  1a:	62 01       	\[--SP\] = A1.x;
  1c:	61 01       	\[--SP\] = A0.w;
  1e:	63 01       	\[--SP\] = A1.w;
d44 4
a47 4
  48:	30 90       	R0=\[SP\+\+\];
  4a:	36 90       	R6=\[SP\+\+\];
  4c:	70 90       	P0=\[SP\+\+\];
  4e:	74 90       	P4=\[SP\+\+\];
d56 4
a59 4
  60:	20 01       	A0.x = \[SP\+\+\];
  62:	22 01       	A1.x = \[SP\+\+\];
  64:	21 01       	A0.w = \[SP\+\+\];
  66:	23 01       	A1.w = \[SP\+\+\];
d80 3
a82 3
  90:	00 e8 00 00 	LINK 0x0;
  94:	00 e8 02 00 	LINK 0x8;
  98:	00 e8 ff ff 	LINK 0x3fffc;
@

