head	1.11;
access;
symbols
	binutils-2_24-branch:1.11.0.8
	binutils-2_24-branchpoint:1.11
	binutils-2_21_1:1.4
	binutils-2_23_2:1.11
	binutils-2_23_1:1.11
	binutils-2_23:1.11
	binutils-2_23-branch:1.11.0.6
	binutils-2_23-branchpoint:1.11
	binutils-2_22_branch:1.11.0.4
	binutils-2_22:1.11
	binutils-2_22-branch:1.11.0.2
	binutils-2_22-branchpoint:1.11
	binutils-2_21:1.4
	binutils-2_21-branch:1.4.0.4
	binutils-2_21-branchpoint:1.4
	binutils-2_20_1:1.4
	binutils-2_20:1.4
	binutils-arc-20081103-branch:1.3.0.8
	binutils-arc-20081103-branchpoint:1.3
	binutils-2_20-branch:1.4.0.2
	binutils-2_20-branchpoint:1.4
	dje-cgen-play1-branch:1.3.0.6
	dje-cgen-play1-branchpoint:1.3
	arc-20081103-branch:1.3.0.4
	arc-20081103-branchpoint:1.3
	binutils-2_19_1:1.3
	binutils-2_19:1.3
	binutils-2_19-branch:1.3.0.2
	binutils-2_19-branchpoint:1.3
	binutils-2_18:1.1
	binutils-2_18-branch:1.1.0.6
	binutils-2_18-branchpoint:1.1
	binutils-csl-coldfire-4_1-32:1.1
	binutils-csl-sourcerygxx-4_1-32:1.1
	binutils-csl-innovasic-fido-3_4_4-33:1.1
	binutils-csl-coldfire-4_1-30:1.1
	binutils-csl-sourcerygxx-4_1-30:1.1
	binutils-csl-coldfire-4_1-28:1.1
	binutils-csl-sourcerygxx-4_1-29:1.1
	binutils-csl-sourcerygxx-4_1-28:1.1
	binutils-csl-arm-2006q3-27:1.1
	binutils-csl-sourcerygxx-4_1-27:1.1
	binutils-csl-arm-2006q3-26:1.1
	binutils-csl-sourcerygxx-4_1-26:1.1
	binutils-csl-sourcerygxx-4_1-25:1.1
	binutils-csl-sourcerygxx-4_1-24:1.1
	binutils-csl-sourcerygxx-4_1-23:1.1
	binutils-csl-sourcerygxx-4_1-21:1.1
	binutils-csl-arm-2006q3-21:1.1
	binutils-csl-sourcerygxx-4_1-22:1.1
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.1
	binutils-csl-sourcerygxx-4_1-20:1.1
	binutils-csl-arm-2006q3-19:1.1
	binutils-csl-sourcerygxx-4_1-19:1.1
	binutils-csl-sourcerygxx-4_1-18:1.1
	binutils-csl-renesas-4_1-9:1.1
	binutils-csl-renesas-4_1-8:1.1
	binutils-csl-renesas-4_1-7:1.1
	binutils-csl-renesas-4_1-6:1.1
	binutils-csl-sourcerygxx-4_1-17:1.1
	binutils-csl-sourcerygxx-4_1-14:1.1
	binutils-csl-sourcerygxx-4_1-15:1.1
	binutils-csl-sourcerygxx-4_1-13:1.1
	binutils-2_17:1.1
	binutils-csl-sourcerygxx-4_1-12:1.1
	binutils-csl-sourcerygxx-3_4_4-21:1.1
	binutils-csl-sourcerygxx-4_1-9:1.1
	binutils-csl-sourcerygxx-4_1-8:1.1
	binutils-csl-sourcerygxx-4_1-7:1.1
	binutils-csl-arm-2006q1-6:1.1
	binutils-csl-sourcerygxx-4_1-6:1.1
	binutils-csl-coldfire-4_1-11:1.1
	binutils-csl-sourcerygxx-3_4_4-19:1.1
	binutils-csl-coldfire-4_1-10:1.1
	binutils-csl-sourcerygxx-4_1-5:1.1
	binutils-csl-sourcerygxx-4_1-4:1.1
	binutils-csl-morpho-4_1-4:1.1
	binutils-csl-sourcerygxx-3_4_4-17:1.1
	binutils-2_17-branch:1.1.0.4
	binutils-2_17-branchpoint:1.1
	binutils-csl-2_17-branch:1.1.0.2
	binutils-csl-2_17-branchpoint:1.1
	binutils_latest_snapshot:1.11;
locks; strict;
comment	@ * @;


1.11
date	2011.03.29.05.54.41;	author vapier;	state Exp;
branches;
next	1.10;

1.10
date	2011.03.29.05.51.22;	author vapier;	state Exp;
branches;
next	1.9;

1.9
date	2011.03.29.05.44.56;	author vapier;	state Exp;
branches;
next	1.8;

1.8
date	2011.03.29.01.25.13;	author vapier;	state Exp;
branches;
next	1.7;

1.7
date	2011.03.24.06.17.47;	author vapier;	state Exp;
branches;
next	1.6;

1.6
date	2011.03.24.04.25.25;	author vapier;	state Exp;
branches;
next	1.5;

1.5
date	2011.03.24.04.20.09;	author vapier;	state Exp;
branches;
next	1.4;

1.4
date	2009.09.02.07.30.34;	author jiez;	state Exp;
branches;
next	1.3;

1.3
date	2008.03.26.16.21.10;	author bernds;	state Exp;
branches;
next	1.2;

1.2
date	2008.03.26.15.58.27;	author bernds;	state Exp;
branches;
next	1.1;

1.1
date	2005.09.30.15.10.16;	author clm;	state Exp;
branches;
next	;


desc
@@


1.11
log
@gas: blackfin: gas: blackfin: reject invalid BYTEUNPACK insns

The destination registers must be different with BYTEUNPACK insns,
otherwise the hardware throws up an exception.  So reject them.

Signed-off-by: Mike Frysinger <vapier@@gentoo.org>
@
text
@.*: Assembler messages:
.*:3: Error: Constant out of range.
.*:4: Error: Constant out of range.
.*:6: Error: Bad constant value.
.*:7: Error: Bad constant value.
.*:8: Error: Bad constant value.
.*:9: Error: Bad constant value.
.*:10: Error: Bad constant value.
.*:11: Error: Bad constant value.
.*:13: Error: Dregs expected. Input text was R3.L.
.*:15: Error: Source multiplication register mismatch. Input text was \).
.*:17: Error: bad option.
.*:18: Error: bad option.
.*:19: Error: bad option.
.*:20: Error: bad option.
.*:21: Error: bad option.
.*:22: Error: bad option.
.*:23: Error: Bad opt mode.
.*:24: Error: Bad opt mode.
.*:26: Error: Cannot move A1 to even register. Input text was \).
.*:27: Error: Cannot move A1 to low half of register. Input text was \).
.*:28: Error: Cannot move A0 to odd register. Input text was \).
.*:29: Error: Cannot move A0 to high half of register. Input text was \).
.*:31: Error: Displacement out of range. Input text was r0.
.*:32: Error: Displacement out of range. Input text was r0.
.*:33: Error: Displacement out of range. Input text was r0.
.*:34: Error: Displacement out of range. Input text was r0.
.*:36: Error: Displacement out of range. Input text was r0.
.*:37: Error: Displacement out of range. Input text was r0.
.*:38: Error: Displacement out of range. Input text was r0.
.*:40: Error: Displacement out of range. Input text was r0.
.*:41: Error: Displacement out of range. Input text was r0.
.*:42: Error: Displacement out of range. Input text was r0.
.*:44: Error: Displacement out of range. Input text was \).
.*:45: Error: Displacement out of range. Input text was ].
.*:46: Error: Displacement out of range. Input text was ].
.*:47: Error: Displacement out of range. Input text was ].
.*:49: Error: Plain symbol used as offset. Input text was ].
.*:50: Error: Plain symbol used as offset.
.*:51: Error: Plain symbol used as offset.
.*:53: Error: Displacement out of range. Input text was ].
.*:54: Error: Displacement out of range.
.*:55: Error: Displacement out of range.
.*:57: Error: Preg \+\+ Preg or Ireg \+\+ Mreg expected in address. Input text was R2.
.*:58: Error: Preg \+\+ Preg or Ireg \+\+ Mreg expected in address. Input text was R2.
.*:59: Error: Preg \+\+ Preg or Ireg \+\+ Mreg expected in address. Input text was R2.
.*:60: Error: Preg \+\+ Preg or Ireg \+\+ Mreg expected in address. Input text was R2.
.*:61: Error: Preg \+\+ Preg or Ireg \+\+ Mreg expected in address. Input text was R2.
.*:62: Error: Preg \+\+ Preg or Ireg \+\+ Mreg expected in address. Input text was R2.
.*:64: Error: Preg \+\+ Preg expected in address. Input text was R2.h.
.*:65: Error: Preg \+\+ Preg expected in address. Input text was R2.h.
.*:66: Error: Preg \+\+ Preg expected in address. Input text was R2.h.
.*:67: Error: Preg \+\+ Preg expected in address. Input text was R2.h.
.*:68: Error: Preg \+\+ Preg expected in address. Input text was R2.h.
.*:69: Error: Preg \+\+ Preg expected in address. Input text was R2.h.
.*:71: Error: Ireg or Preg expected in address. Input text was R2.
.*:72: Error: Dreg expected for source operand. Input text was P2.
.*:74: Error: Ireg expected in address. Input text was R2.h.
.*:75: Error: Dreg expected for source operand. Input text was P2.h.
.*:77: Error: Preg expected in address. Input text was R2.
.*:78: Error: Preg expected in address. Input text was R2.
.*:79: Error: Dreg expected for source operand. Input text was P2.
.*:81: Error: Preg expected in address. Input text was R2.
.*:82: Error: Preg expected in address. Input text was R2.
.*:83: Error: Dreg expected for source operand. Input text was P2.
.*:85: Error: Preg \+\+ Preg or Ireg \+\+ Mreg expected in address. Input text was ].
.*:86: Error: Preg \+\+ Preg or Ireg \+\+ Mreg expected in address. Input text was ].
.*:87: Error: Preg \+\+ Preg or Ireg \+\+ Mreg expected in address. Input text was ].
.*:88: Error: Preg \+\+ Preg or Ireg \+\+ Mreg expected in address. Input text was ].
.*:89: Error: Preg \+\+ Preg or Ireg \+\+ Mreg expected in address. Input text was ].
.*:90: Error: Preg \+\+ Preg or Ireg \+\+ Mreg expected in address. Input text was ].
.*:92: Error: Preg expected in address. Input text was ].
.*:93: Error: Preg expected in address. Input text was ].
.*:94: Error: Preg expected in address. Input text was ].
.*:95: Error: Preg expected in address. Input text was ].
.*:96: Error: Preg expected in address. Input text was ].
.*:97: Error: Preg expected in address. Input text was ].
.*:99: Error: Ireg or Preg expected in address. Input text was ].
.*:100: Error: Dreg expected in destination operand. Input text was ].
.*:102: Error: syntax error. Input text was B.
.*:102: Error: 
.*:103: Error: syntax error. Input text was B.
.*:103: Error: 
.*:105: Error: Ireg expected in address. Input text was ].
.*:106: Error: Ireg expected in address. Input text was ].
.*:107: Error: Dreg expected for source operand. Input text was ].
.*:109: Error: Preg expected in address. Input text was \).
.*:110: Error: Preg expected in address. Input text was \).
.*:111: Error: Dreg expected for destination operand. Input text was \).
.*:113: Error: Preg expected in address. Input text was \).
.*:114: Error: Preg expected in address. Input text was \).
.*:115: Error: Dreg expected for destination operand. Input text was \).
.*:117: Error: Illegal dest register combination. Input text was \).
.*:118: Error: Illegal source register combination. Input text was \).
.*:120: Error: Destination Dregs \(full\) must differ by one.
.*:121: Error: Destination Dregs \(half\) must match.
.*:122: Error: Destination Dreg sizes \(full or half\) must match.
.*:124: Error: Resource conflict in dest reg.
.*:125: Error: Differing source registers.
.*:126: Error: Resource conflict in dest reg.
.*:127: Error: Differing source registers.
.*:129: Error: Register mismatch.
.*:131: Error: Illegal dest register combination. Input text was A0.H.
.*:133: Error: Illegal dest register combination.
.*:134: Error: Illegal dest register combination.
.*:135: Error: Illegal dest register combination.
.*:136: Error: Illegal dest register combination.
.*:137: Error: Illegal dest register combination.
@


1.10
log
@gas: blackfin: gas: blackfin: reject invalid BYTEOP16M insns

The destination registers must be different with BYTEOP16M insns,
otherwise the hardware throws up an exception.  So reject them.

Signed-off-by: Mike Frysinger <vapier@@gentoo.org>
@
text
@d108 1
@


1.9
log
@gas: blackfin: gas: blackfin: reject invalid BYTEOP16P insns

The destination registers must be different with BYTEOP16P insns,
otherwise the hardware throws up an exception.  So reject them.

Signed-off-by: Mike Frysinger <vapier@@gentoo.org>
@
text
@d106 2
@


1.8
log
@gas: blackfin: reject invalid 16bit acc add insns

The 16bit acc add insn cannot assign the two results to the same dreg,
so make sure gas rejects attempts to use this insn variant.

Signed-off-by: Mike Frysinger <vapier@@gentoo.org>
@
text
@d104 2
@


1.7
log
@gas: blackfin: reject invalid register destinations for vector add/sub

The destination registers with vector add/sub insns must be different,
so make sure gas rejects attempt to write these.

Signed-off-by: Mike Frysinger <vapier@@gentoo.org>
@
text
@d103 1
@


1.6
log
@gas: blackfin: catch invalid dest dregs in dsp mult insns

While we were catching a few mismatches in vectorized dsp mult insns,
the error we displayed was misleading.  Once we fix that up, we can
convert previously dead code into proper checking for destination
dreg matching.

Signed-off-by: Mike Frysinger <vapier@@gentoo.org>
@
text
@d98 5
@


1.5
log
@gas: blackfin: catch invalid register combinations with SEARCH/BITMUX

The destination registers for SEARCH cannot be the same.  Same rule
for the source registers for BITMUX.

Signed-off-by: Mike Frsyinger <vapier@@gentoo.org>
@
text
@d95 3
@


1.4
log
@	From  Bernd Schmidt  <bernd.schmidt@@analog.com>
	* config/gas/bfin-parse.y (asm_1): Clean up and unify error handling
	for load and store insns.
	(neg_value): Delete function.

	testsuite/
	From  Bernd Schmidt  <bernd.schmidt@@analog.com>
	* gas/bfin/expected_errors.l, gas/bfin/expected_errors.s:
	Check error messages for invalid load/store insns.
@
text
@d93 2
@


1.3
log
@gas/
	* config/bfin-parse.y (check_macfunc_option): Allow (IU)
	option for multiply and multiply-accumulate to data register
	instruction.
	(check_macfuncs): Don't check if accumulator matches the data register
	here.
	(assign_macfunc): Check if accumulator matches the
	data register in each rule that moves to the data
	register.

gas/testsuite/
	* gas/bfin/arithmetic.s, gas/bfin/arithmetic.d: Add check
	for IU option.
	* gas/bfin/expected_errors.l, gas/bfin/expected_errors.s:
	Add check for mismatch of accumulator and data register.

opcodes/
	* bfin-dis.c (decode_dsp32mac_0): Decode (IU) option for
	multiply and multiply-accumulate to data register instruction.
@
text
@d24 69
@


1.2
log
@gas/:
	* config/bfin-parse.y (check_macfunc_option): New.
 	(check_macfuncs): Check option by calling check_macfunc_option.
	Fix comparison always true warnings.  Both scalar instructions
	of vector instruction must share the same mode option.  Only allow
	option mode at the end of the second instruction of the vector.
 	(asm_1): Check option by calling check_macfunc_option.

gas/testsuite/:
	* gas/bfin/expected_errors.l, gas/bfin/expected_errors.s: Add
	tests for bad options of "multiply and multipy-accumulate to
	accumulator" instructions.  Add new vector instruction option
	mode tests.
	* gas/bfin/vector2.s: Add new vector instruction option mode test.
	* gas/bfin/vector2.d: Adjust accordingly.

	* gas/bfin/expected_errors.s, gas/bfin/expected_errors.l: Add test
	for mismatched half registers in vector multipy-accumulate
	instructions.
@
text
@d20 4
@


1.1
log
@	* gas/bfin: New testsuite for bfin.
	* gas/all/gas.exp (bfin-*-*): Expected failure for alternate
	macro syntax.
@
text
@d11 9
@

