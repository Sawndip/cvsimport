head	1.3;
access;
symbols
	binutils-2_24-branch:1.3.0.8
	binutils-2_24-branchpoint:1.3
	binutils-2_21_1:1.2
	binutils-2_23_2:1.3
	binutils-2_23_1:1.3
	binutils-2_23:1.3
	binutils-2_23-branch:1.3.0.6
	binutils-2_23-branchpoint:1.3
	binutils-2_22_branch:1.3.0.4
	binutils-2_22:1.3
	binutils-2_22-branch:1.3.0.2
	binutils-2_22-branchpoint:1.3
	binutils-2_21:1.2
	binutils-2_21-branch:1.2.0.2
	binutils-2_21-branchpoint:1.2
	binutils-2_20_1:1.1
	binutils-2_20:1.1
	binutils-arc-20081103-branch:1.1.0.16
	binutils-arc-20081103-branchpoint:1.1
	binutils-2_20-branch:1.1.0.14
	binutils-2_20-branchpoint:1.1
	dje-cgen-play1-branch:1.1.0.12
	dje-cgen-play1-branchpoint:1.1
	arc-20081103-branch:1.1.0.10
	arc-20081103-branchpoint:1.1
	binutils-2_19_1:1.1
	binutils-2_19:1.1
	binutils-2_19-branch:1.1.0.8
	binutils-2_19-branchpoint:1.1
	binutils-2_18:1.1
	binutils-2_18-branch:1.1.0.6
	binutils-2_18-branchpoint:1.1
	binutils-csl-coldfire-4_1-32:1.1
	binutils-csl-sourcerygxx-4_1-32:1.1
	binutils-csl-innovasic-fido-3_4_4-33:1.1
	binutils-csl-coldfire-4_1-30:1.1
	binutils-csl-sourcerygxx-4_1-30:1.1
	binutils-csl-coldfire-4_1-28:1.1
	binutils-csl-sourcerygxx-4_1-29:1.1
	binutils-csl-sourcerygxx-4_1-28:1.1
	binutils-csl-arm-2006q3-27:1.1
	binutils-csl-sourcerygxx-4_1-27:1.1
	binutils-csl-arm-2006q3-26:1.1
	binutils-csl-sourcerygxx-4_1-26:1.1
	binutils-csl-sourcerygxx-4_1-25:1.1
	binutils-csl-sourcerygxx-4_1-24:1.1
	binutils-csl-sourcerygxx-4_1-23:1.1
	binutils-csl-sourcerygxx-4_1-21:1.1
	binutils-csl-arm-2006q3-21:1.1
	binutils-csl-sourcerygxx-4_1-22:1.1
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.1
	binutils-csl-sourcerygxx-4_1-20:1.1
	binutils-csl-arm-2006q3-19:1.1
	binutils-csl-sourcerygxx-4_1-19:1.1
	binutils-csl-sourcerygxx-4_1-18:1.1
	binutils-csl-renesas-4_1-9:1.1
	binutils-csl-renesas-4_1-8:1.1
	binutils-csl-renesas-4_1-7:1.1
	binutils-csl-renesas-4_1-6:1.1
	binutils-csl-sourcerygxx-4_1-17:1.1
	binutils-csl-sourcerygxx-4_1-14:1.1
	binutils-csl-sourcerygxx-4_1-15:1.1
	binutils-csl-sourcerygxx-4_1-13:1.1
	binutils-2_17:1.1
	binutils-csl-sourcerygxx-4_1-12:1.1
	binutils-csl-sourcerygxx-3_4_4-21:1.1
	binutils-csl-sourcerygxx-4_1-9:1.1
	binutils-csl-sourcerygxx-4_1-8:1.1
	binutils-csl-sourcerygxx-4_1-7:1.1
	binutils-csl-arm-2006q1-6:1.1
	binutils-csl-sourcerygxx-4_1-6:1.1
	binutils-csl-coldfire-4_1-11:1.1
	binutils-csl-sourcerygxx-3_4_4-19:1.1
	binutils-csl-coldfire-4_1-10:1.1
	binutils-csl-sourcerygxx-4_1-5:1.1
	binutils-csl-sourcerygxx-4_1-4:1.1
	binutils-csl-morpho-4_1-4:1.1
	binutils-csl-sourcerygxx-3_4_4-17:1.1
	binutils-2_17-branch:1.1.0.4
	binutils-2_17-branchpoint:1.1
	binutils-csl-2_17-branch:1.1.0.2
	binutils-csl-2_17-branchpoint:1.1
	binutils_latest_snapshot:1.3;
locks; strict;
comment	@# @;


1.3
date	2011.02.13.18.53.16;	author vapier;	state Exp;
branches;
next	1.2;

1.2
date	2010.10.15.20.44.46;	author vapier;	state Exp;
branches;
next	1.1;

1.1
date	2005.09.30.15.10.16;	author clm;	state Exp;
branches;
next	;


desc
@@


1.3
log
@gas/opcodes: blackfin: punt BYTEOP2M insn support

The BYTEOP2M insn was part of the initial Blackfin designs, but never made
it into any actual silicon.  So punt support for it.

Signed-off-by: Mike Frysinger <vapier@@gentoo.org>
@
text
@	.text
	.global align
align:
	R7 = Align8 (r5, r2);
	R5 = ALIGN16 (R0, R1);
	r2 = ALIGN24 (r5, r0);

	.global disalgnexcpt
disalgnexcpt:
	DISAlgnExcpt;

	.text
	.global byteop3p
byteop3p:
	R5 = Byteop3p (r1:0, r3:2) (lO);
	R0 = BYTEOP3P (R1:0, R3:2) (HI);
	R1 = byteop3p (r1:0, r3:2) (LO, r);
	r2 = ByteOp3P (r1:0, R3:2) (hi, R);

	.text
	.global dual16
dual16:
	R5 = A1.l + A1.h, R2 = a0.l + a0.h;

	.text
	.global byteop16p
byteop16p:
	(r2, r3) = BYTEOP16P (R1:0, R3:2);
	(R6, R0) = byteop16p (r1:0, r3:2) (r);

	.text
	.global byteop1p
byteop1p:
	R7 = BYTEOP1P (R1:0, R3:2);
	r2 = byteop1p (r1:0, r3:2) (t);
	R3 = ByteOp1P (r1:0, R3:2) (R);
	r7 = byteOP1P (R1:0, r3:2) (T, r);

	.text
	.global byteop2p
byteop2p:
	R0 = BYTEOP2P (R1:0, R3:2) (RNDL);
	r1 = byteop2p (r1:0, r3:2) (rndh);
	R2 = Byteop2p (R1:0, R3:2) (tL);
	R3 = Byteop2p (r1:0, r3:2) (TH);
	r4 = ByTEOP2P (r1:0, R3:2) (Rndl, R);
	R5 = byTeOp2p (R1:0, r3:2) (rndH, r);
	r6 = BYTEop2p (r1:0, r3:2) (tl, R);
	R7 = byteop2p (r1:0, R3:2) (TH, r);

	.text
	.global bytepack
bytepack:
	R5 = BytePack (R0, R3);

	.text
	.global byteop16m
byteop16m:
	(R6, R2) = ByteOp16M (r1:0, r3:2);
	(r0, r5) = byteop16m (R1:0, R3:2) (r);

	.text
	.global saa
saa:
	saa(r1:0, r3:2);
	SAA (R1:0, R3:2) (r);

	.text
	.global byteunpack
byteunpack:
	(R7, R2) = byteunpack R1:0;
	(R6, R4) = BYTEUNPACK r3:2 (R);


@


1.2
log
@gas: blackfin: fix encoding of BYTEOP2M insn

The BYTEOP2M parser incorrectly calls BYTEOP2P to generate the opcode.
Once we've fixed that, it's easy to see that the disassembler also likes
to decode this insn incorrectly.  So fix that and then add some tests.

Signed-off-by: Mike Frysinger <vapier@@gentoo.org>
@
text
@a51 12
	.global byteop2m
byteop2m:
	R0 = BYTEOP2M (R1:0, R3:2) (RNDL);
	r1 = byteop2m (r1:0, r3:2) (rndh);
	R2 = Byteop2m (R1:0, R3:2) (tL);
	R3 = Byteop2m (r1:0, r3:2) (TH);
	r4 = ByTEOP2M (r1:0, R3:2) (Rndl, R);
	R5 = byTeOp2m (R1:0, r3:2) (rndH, r);
	r6 = BYTEop2m (r1:0, r3:2) (tl, R);
	R7 = byteop2m (r1:0, R3:2) (TH, r);

	.text
@


1.1
log
@	* gas/bfin: New testsuite for bfin.
	* gas/all/gas.exp (bfin-*-*): Expected failure for alternate
	macro syntax.
@
text
@d52 12
@

