head	1.7;
access;
symbols
	binutils-2_24-branch:1.7.0.4
	binutils-2_24-branchpoint:1.7
	binutils-2_21_1:1.4
	binutils-2_23_2:1.7
	binutils-2_23_1:1.7
	binutils-2_23:1.7
	binutils-2_23-branch:1.7.0.2
	binutils-2_23-branchpoint:1.7
	binutils-2_22_branch:1.6.0.4
	binutils-2_22:1.6
	binutils-2_22-branch:1.6.0.2
	binutils-2_22-branchpoint:1.6
	binutils-2_21:1.4
	binutils-2_21-branch:1.4.0.2
	binutils-2_21-branchpoint:1.4
	binutils-2_20_1:1.2
	binutils-2_20:1.2
	binutils-arc-20081103-branch:1.2.0.10
	binutils-arc-20081103-branchpoint:1.2
	binutils-2_20-branch:1.2.0.8
	binutils-2_20-branchpoint:1.2
	dje-cgen-play1-branch:1.2.0.6
	dje-cgen-play1-branchpoint:1.2
	arc-20081103-branch:1.2.0.4
	arc-20081103-branchpoint:1.2
	binutils-2_19_1:1.2
	binutils-2_19:1.2
	binutils-2_19-branch:1.2.0.2
	binutils-2_19-branchpoint:1.2
	binutils-2_18:1.1
	binutils-2_18-branch:1.1.0.6
	binutils-2_18-branchpoint:1.1
	binutils-csl-coldfire-4_1-32:1.1
	binutils-csl-sourcerygxx-4_1-32:1.1
	binutils-csl-innovasic-fido-3_4_4-33:1.1
	binutils-csl-coldfire-4_1-30:1.1
	binutils-csl-sourcerygxx-4_1-30:1.1
	binutils-csl-coldfire-4_1-28:1.1
	binutils-csl-sourcerygxx-4_1-29:1.1
	binutils-csl-sourcerygxx-4_1-28:1.1
	binutils-csl-arm-2006q3-27:1.1
	binutils-csl-sourcerygxx-4_1-27:1.1
	binutils-csl-arm-2006q3-26:1.1
	binutils-csl-sourcerygxx-4_1-26:1.1
	binutils-csl-sourcerygxx-4_1-25:1.1
	binutils-csl-sourcerygxx-4_1-24:1.1
	binutils-csl-sourcerygxx-4_1-23:1.1
	binutils-csl-sourcerygxx-4_1-21:1.1
	binutils-csl-arm-2006q3-21:1.1
	binutils-csl-sourcerygxx-4_1-22:1.1
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.1
	binutils-csl-sourcerygxx-4_1-20:1.1
	binutils-csl-arm-2006q3-19:1.1
	binutils-csl-sourcerygxx-4_1-19:1.1
	binutils-csl-sourcerygxx-4_1-18:1.1
	binutils-csl-renesas-4_1-9:1.1
	binutils-csl-renesas-4_1-8:1.1
	binutils-csl-renesas-4_1-7:1.1
	binutils-csl-renesas-4_1-6:1.1
	binutils-csl-sourcerygxx-4_1-17:1.1
	binutils-csl-sourcerygxx-4_1-14:1.1
	binutils-csl-sourcerygxx-4_1-15:1.1
	binutils-csl-sourcerygxx-4_1-13:1.1
	binutils-2_17:1.1
	binutils-csl-sourcerygxx-4_1-12:1.1
	binutils-csl-sourcerygxx-3_4_4-21:1.1
	binutils-csl-sourcerygxx-4_1-9:1.1
	binutils-csl-sourcerygxx-4_1-8:1.1
	binutils-csl-sourcerygxx-4_1-7:1.1
	binutils-csl-arm-2006q1-6:1.1
	binutils-csl-sourcerygxx-4_1-6:1.1
	binutils-csl-coldfire-4_1-11:1.1
	binutils-csl-sourcerygxx-3_4_4-19:1.1
	binutils-csl-coldfire-4_1-10:1.1
	binutils-csl-sourcerygxx-4_1-5:1.1
	binutils-csl-sourcerygxx-4_1-4:1.1
	binutils-csl-morpho-4_1-4:1.1
	binutils-csl-sourcerygxx-3_4_4-17:1.1
	binutils-2_17-branch:1.1.0.4
	binutils-2_17-branchpoint:1.1
	binutils-csl-2_17-branch:1.1.0.2
	binutils-csl-2_17-branchpoint:1.1
	binutils_latest_snapshot:1.7;
locks; strict;
comment	@# @;


1.7
date	2011.12.15.04.25.10;	author jiez;	state Exp;
branches;
next	1.6;

1.6
date	2011.03.29.01.25.13;	author vapier;	state Exp;
branches;
next	1.5;

1.5
date	2011.02.13.18.53.16;	author vapier;	state Exp;
branches;
next	1.4;

1.4
date	2010.10.15.20.44.46;	author vapier;	state Exp;
branches;
next	1.3;

1.3
date	2010.10.15.20.43.16;	author vapier;	state Exp;
branches;
next	1.2;

1.2
date	2008.03.26.16.48.32;	author bernds;	state Exp;
branches;
next	1.1;

1.1
date	2005.09.30.15.10.16;	author clm;	state Exp;
branches;
next	;


desc
@@


1.7
log
@gas/
2011-12-14  Stuart Henderson  <shenders@@gcc.gnu.org>

	* config/bfin-parse.y (asm_1): set SRCx fields to all 1s for
	dspalu32 instrs that don't use them.

gas/testsuite/
2011-12-14  Stuart Henderson  <shenders@@gcc.gnu.org>

	* gas/bfin/move.d: Update SRCx field expectations.
	* gas/bfin/move2.d: Likewise.
	* gas/bfin/parallel.d: Likewise.
	* gas/bfin/parallel2.d: Likewise.
	* gas/bfin/parallel3.d: Likewise.
	* gas/bfin/parallel4.d: Likewise.
	* gas/bfin/video.d: Likewise.
	* gas/bfin/video2.d: Likewise.
@
text
@#objdump: -dr
#name: video2
.*: +file format .*

Disassembly of section .text:

00000000 <.text>:
[ 0-9a-f]+:	0d c6 00 00 	R0 = ALIGN8 \(R0, R0\);
[ 0-9a-f]+:	0d c6 08 00 	R0 = ALIGN8 \(R0, R1\);
[ 0-9a-f]+:	0d c6 01 00 	R0 = ALIGN8 \(R1, R0\);
[ 0-9a-f]+:	0d c6 09 00 	R0 = ALIGN8 \(R1, R1\);
[ 0-9a-f]+:	0d c6 11 00 	R0 = ALIGN8 \(R1, R2\);
[ 0-9a-f]+:	0d c6 2c 06 	R3 = ALIGN8 \(R4, R5\);
[ 0-9a-f]+:	0d c6 07 0c 	R6 = ALIGN8 \(R7, R0\);
[ 0-9a-f]+:	0d c6 1a 02 	R1 = ALIGN8 \(R2, R3\);
[ 0-9a-f]+:	0d c6 35 08 	R4 = ALIGN8 \(R5, R6\);
[ 0-9a-f]+:	0d c6 08 0e 	R7 = ALIGN8 \(R0, R1\);
[ 0-9a-f]+:	0d c6 23 04 	R2 = ALIGN8 \(R3, R4\);
[ 0-9a-f]+:	0d c6 3e 0a 	R5 = ALIGN8 \(R6, R7\);
[ 0-9a-f]+:	0d c6 00 40 	R0 = ALIGN16 \(R0, R0\);
[ 0-9a-f]+:	0d c6 08 40 	R0 = ALIGN16 \(R0, R1\);
[ 0-9a-f]+:	0d c6 01 40 	R0 = ALIGN16 \(R1, R0\);
[ 0-9a-f]+:	0d c6 09 40 	R0 = ALIGN16 \(R1, R1\);
[ 0-9a-f]+:	0d c6 11 40 	R0 = ALIGN16 \(R1, R2\);
[ 0-9a-f]+:	0d c6 2c 46 	R3 = ALIGN16 \(R4, R5\);
[ 0-9a-f]+:	0d c6 07 4c 	R6 = ALIGN16 \(R7, R0\);
[ 0-9a-f]+:	0d c6 1a 42 	R1 = ALIGN16 \(R2, R3\);
[ 0-9a-f]+:	0d c6 35 48 	R4 = ALIGN16 \(R5, R6\);
[ 0-9a-f]+:	0d c6 08 4e 	R7 = ALIGN16 \(R0, R1\);
[ 0-9a-f]+:	0d c6 23 44 	R2 = ALIGN16 \(R3, R4\);
[ 0-9a-f]+:	0d c6 3e 4a 	R5 = ALIGN16 \(R6, R7\);
[ 0-9a-f]+:	0d c6 00 80 	R0 = ALIGN24 \(R0, R0\);
[ 0-9a-f]+:	0d c6 08 80 	R0 = ALIGN24 \(R0, R1\);
[ 0-9a-f]+:	0d c6 01 80 	R0 = ALIGN24 \(R1, R0\);
[ 0-9a-f]+:	0d c6 09 80 	R0 = ALIGN24 \(R1, R1\);
[ 0-9a-f]+:	0d c6 11 80 	R0 = ALIGN24 \(R1, R2\);
[ 0-9a-f]+:	0d c6 2c 86 	R3 = ALIGN24 \(R4, R5\);
[ 0-9a-f]+:	0d c6 07 8c 	R6 = ALIGN24 \(R7, R0\);
[ 0-9a-f]+:	0d c6 1a 82 	R1 = ALIGN24 \(R2, R3\);
[ 0-9a-f]+:	0d c6 35 88 	R4 = ALIGN24 \(R5, R6\);
[ 0-9a-f]+:	0d c6 08 8e 	R7 = ALIGN24 \(R0, R1\);
[ 0-9a-f]+:	0d c6 23 84 	R2 = ALIGN24 \(R3, R4\);
[ 0-9a-f]+:	0d c6 3e 8a 	R5 = ALIGN24 \(R6, R7\);
[ 0-9a-f]+:	12 c4 00 c0 	DISALGNEXCPT;
[ 0-9a-f]+:	17 c4 02 00 	R0 = BYTEOP3P \(R1:0, R3:2\) \(LO\);
[ 0-9a-f]+:	37 c4 02 02 	R1 = BYTEOP3P \(R1:0, R3:2\) \(HI\);
[ 0-9a-f]+:	17 c4 02 24 	R2 = BYTEOP3P \(R1:0, R3:2\) \(LO, R\);
[ 0-9a-f]+:	37 c4 02 26 	R3 = BYTEOP3P \(R1:0, R3:2\) \(HI, R\);
[ 0-9a-f]+:	17 c4 10 08 	R4 = BYTEOP3P \(R3:2, R1:0\) \(LO\);
[ 0-9a-f]+:	37 c4 10 0a 	R5 = BYTEOP3P \(R3:2, R1:0\) \(HI\);
[ 0-9a-f]+:	17 c4 10 2c 	R6 = BYTEOP3P \(R3:2, R1:0\) \(LO, R\);
[ 0-9a-f]+:	37 c4 10 2e 	R7 = BYTEOP3P \(R3:2, R1:0\) \(HI, R\);
[ 0-9a-f]+:	0c c4 3f 42 	R0 = A1.L \+ A1.H, R1 = A0.L \+ A0.H;
[ 0-9a-f]+:	0c c4 bf 46 	R2 = A1.L \+ A1.H, R3 = A0.L \+ A0.H;
[ 0-9a-f]+:	0c c4 3f 4b 	R4 = A1.L \+ A1.H, R5 = A0.L \+ A0.H;
[ 0-9a-f]+:	0c c4 bf 4f 	R6 = A1.L \+ A1.H, R7 = A0.L \+ A0.H;
[ 0-9a-f]+:	15 c4 d0 01 	\(R7, R0\) = BYTEOP16P \(R3:2, R1:0\);
[ 0-9a-f]+:	15 c4 50 04 	\(R1, R2\) = BYTEOP16P \(R3:2, R1:0\);
[ 0-9a-f]+:	15 c4 10 02 	\(R0, R1\) = BYTEOP16P \(R3:2, R1:0\);
[ 0-9a-f]+:	15 c4 90 06 	\(R2, R3\) = BYTEOP16P \(R3:2, R1:0\);
[ 0-9a-f]+:	15 c4 c2 01 	\(R7, R0\) = BYTEOP16P \(R1:0, R3:2\);
[ 0-9a-f]+:	15 c4 42 04 	\(R1, R2\) = BYTEOP16P \(R1:0, R3:2\);
[ 0-9a-f]+:	15 c4 02 02 	\(R0, R1\) = BYTEOP16P \(R1:0, R3:2\);
[ 0-9a-f]+:	15 c4 82 06 	\(R2, R3\) = BYTEOP16P \(R1:0, R3:2\);
[ 0-9a-f]+:	15 c4 d0 21 	\(R7, R0\) = BYTEOP16P \(R3:2, R1:0\) \(R\);
[ 0-9a-f]+:	15 c4 50 24 	\(R1, R2\) = BYTEOP16P \(R3:2, R1:0\) \(R\);
[ 0-9a-f]+:	15 c4 10 22 	\(R0, R1\) = BYTEOP16P \(R3:2, R1:0\) \(R\);
[ 0-9a-f]+:	15 c4 90 26 	\(R2, R3\) = BYTEOP16P \(R3:2, R1:0\) \(R\);
[ 0-9a-f]+:	15 c4 c2 21 	\(R7, R0\) = BYTEOP16P \(R1:0, R3:2\) \(R\);
[ 0-9a-f]+:	15 c4 42 24 	\(R1, R2\) = BYTEOP16P \(R1:0, R3:2\) \(R\);
[ 0-9a-f]+:	15 c4 02 22 	\(R0, R1\) = BYTEOP16P \(R1:0, R3:2\) \(R\);
[ 0-9a-f]+:	15 c4 82 26 	\(R2, R3\) = BYTEOP16P \(R1:0, R3:2\) \(R\);
[ 0-9a-f]+:	14 c4 02 06 	R3 = BYTEOP1P \(R1:0, R3:2\);
[ 0-9a-f]+:	14 c4 02 26 	R3 = BYTEOP1P \(R1:0, R3:2\) \(R\);
[ 0-9a-f]+:	14 c4 02 46 	R3 = BYTEOP1P \(R1:0, R3:2\) \(T\);
[ 0-9a-f]+:	14 c4 02 66 	R3 = BYTEOP1P \(R1:0, R3:2\) \(T, R\);
[ 0-9a-f]+:	14 c4 10 00 	R0 = BYTEOP1P \(R3:2, R1:0\);
[ 0-9a-f]+:	14 c4 10 22 	R1 = BYTEOP1P \(R3:2, R1:0\) \(R\);
[ 0-9a-f]+:	14 c4 10 44 	R2 = BYTEOP1P \(R3:2, R1:0\) \(T\);
[ 0-9a-f]+:	14 c4 10 66 	R3 = BYTEOP1P \(R3:2, R1:0\) \(T, R\);
[ 0-9a-f]+:	16 c4 02 06 	R3 = BYTEOP2P \(R1:0, R3:2\) \(RNDL\);
[ 0-9a-f]+:	36 c4 02 06 	R3 = BYTEOP2P \(R1:0, R3:2\) \(RNDH\);
[ 0-9a-f]+:	16 c4 02 46 	R3 = BYTEOP2P \(R1:0, R3:2\) \(TL\);
[ 0-9a-f]+:	36 c4 02 46 	R3 = BYTEOP2P \(R1:0, R3:2\) \(TH\);
[ 0-9a-f]+:	16 c4 02 26 	R3 = BYTEOP2P \(R1:0, R3:2\) \(RNDL, R\);
[ 0-9a-f]+:	36 c4 02 26 	R3 = BYTEOP2P \(R1:0, R3:2\) \(RNDH, R\);
[ 0-9a-f]+:	16 c4 02 66 	R3 = BYTEOP2P \(R1:0, R3:2\) \(TL, R\);
[ 0-9a-f]+:	36 c4 02 66 	R3 = BYTEOP2P \(R1:0, R3:2\) \(TH, R\);
[ 0-9a-f]+:	16 c4 02 00 	R0 = BYTEOP2P \(R1:0, R3:2\) \(RNDL\);
[ 0-9a-f]+:	36 c4 02 02 	R1 = BYTEOP2P \(R1:0, R3:2\) \(RNDH\);
[ 0-9a-f]+:	16 c4 02 44 	R2 = BYTEOP2P \(R1:0, R3:2\) \(TL\);
[ 0-9a-f]+:	36 c4 02 46 	R3 = BYTEOP2P \(R1:0, R3:2\) \(TH\);
[ 0-9a-f]+:	16 c4 02 28 	R4 = BYTEOP2P \(R1:0, R3:2\) \(RNDL, R\);
[ 0-9a-f]+:	36 c4 02 2a 	R5 = BYTEOP2P \(R1:0, R3:2\) \(RNDH, R\);
[ 0-9a-f]+:	16 c4 02 6c 	R6 = BYTEOP2P \(R1:0, R3:2\) \(TL, R\);
[ 0-9a-f]+:	36 c4 02 6e 	R7 = BYTEOP2P \(R1:0, R3:2\) \(TH, R\);
[ 0-9a-f]+:	16 c4 12 00 	R0 = BYTEOP2P \(R3:2, R3:2\) \(RNDL\);
[ 0-9a-f]+:	36 c4 12 02 	R1 = BYTEOP2P \(R3:2, R3:2\) \(RNDH\);
[ 0-9a-f]+:	16 c4 12 44 	R2 = BYTEOP2P \(R3:2, R3:2\) \(TL\);
[ 0-9a-f]+:	36 c4 12 46 	R3 = BYTEOP2P \(R3:2, R3:2\) \(TH\);
[ 0-9a-f]+:	16 c4 12 28 	R4 = BYTEOP2P \(R3:2, R3:2\) \(RNDL, R\);
[ 0-9a-f]+:	36 c4 12 2a 	R5 = BYTEOP2P \(R3:2, R3:2\) \(RNDH, R\);
[ 0-9a-f]+:	16 c4 12 6c 	R6 = BYTEOP2P \(R3:2, R3:2\) \(TL, R\);
[ 0-9a-f]+:	36 c4 12 6e 	R7 = BYTEOP2P \(R3:2, R3:2\) \(TH, R\);
[ 0-9a-f]+:	18 c4 00 00 	R0 = BYTEPACK \(R0, R0\);
[ 0-9a-f]+:	18 c4 13 02 	R1 = BYTEPACK \(R2, R3\);
[ 0-9a-f]+:	18 c4 2e 08 	R4 = BYTEPACK \(R5, R6\);
[ 0-9a-f]+:	18 c4 01 0e 	R7 = BYTEPACK \(R0, R1\);
[ 0-9a-f]+:	18 c4 1c 04 	R2 = BYTEPACK \(R3, R4\);
[ 0-9a-f]+:	18 c4 37 0a 	R5 = BYTEPACK \(R6, R7\);
[ 0-9a-f]+:	15 c4 50 44 	\(R1, R2\) = BYTEOP16M \(R3:2, R1:0\);
[ 0-9a-f]+:	15 c4 50 64 	\(R1, R2\) = BYTEOP16M \(R3:2, R1:0\) \(R\);
[ 0-9a-f]+:	15 c4 10 42 	\(R0, R1\) = BYTEOP16M \(R3:2, R1:0\);
[ 0-9a-f]+:	15 c4 90 66 	\(R2, R3\) = BYTEOP16M \(R3:2, R1:0\) \(R\);
[ 0-9a-f]+:	15 c4 d0 4a 	\(R3, R5\) = BYTEOP16M \(R3:2, R1:0\);
[ 0-9a-f]+:	15 c4 90 6f 	\(R6, R7\) = BYTEOP16M \(R3:2, R1:0\) \(R\);
[ 0-9a-f]+:	15 c4 40 44 	\(R1, R2\) = BYTEOP16M \(R1:0, R1:0\);
[ 0-9a-f]+:	15 c4 40 64 	\(R1, R2\) = BYTEOP16M \(R1:0, R1:0\) \(R\);
[ 0-9a-f]+:	15 c4 00 42 	\(R0, R1\) = BYTEOP16M \(R1:0, R1:0\);
[ 0-9a-f]+:	15 c4 80 66 	\(R2, R3\) = BYTEOP16M \(R1:0, R1:0\) \(R\);
[ 0-9a-f]+:	15 c4 c0 4a 	\(R3, R5\) = BYTEOP16M \(R1:0, R1:0\);
[ 0-9a-f]+:	15 c4 80 6f 	\(R6, R7\) = BYTEOP16M \(R1:0, R1:0\) \(R\);
[ 0-9a-f]+:	15 c4 42 44 	\(R1, R2\) = BYTEOP16M \(R1:0, R3:2\);
[ 0-9a-f]+:	15 c4 42 64 	\(R1, R2\) = BYTEOP16M \(R1:0, R3:2\) \(R\);
[ 0-9a-f]+:	15 c4 02 42 	\(R0, R1\) = BYTEOP16M \(R1:0, R3:2\);
[ 0-9a-f]+:	15 c4 82 66 	\(R2, R3\) = BYTEOP16M \(R1:0, R3:2\) \(R\);
[ 0-9a-f]+:	15 c4 c2 4a 	\(R3, R5\) = BYTEOP16M \(R1:0, R3:2\);
[ 0-9a-f]+:	15 c4 82 6f 	\(R6, R7\) = BYTEOP16M \(R1:0, R3:2\) \(R\);
[ 0-9a-f]+:	15 c4 52 44 	\(R1, R2\) = BYTEOP16M \(R3:2, R3:2\);
[ 0-9a-f]+:	15 c4 52 64 	\(R1, R2\) = BYTEOP16M \(R3:2, R3:2\) \(R\);
[ 0-9a-f]+:	15 c4 12 42 	\(R0, R1\) = BYTEOP16M \(R3:2, R3:2\);
[ 0-9a-f]+:	15 c4 92 66 	\(R2, R3\) = BYTEOP16M \(R3:2, R3:2\) \(R\);
[ 0-9a-f]+:	15 c4 d2 4a 	\(R3, R5\) = BYTEOP16M \(R3:2, R3:2\);
[ 0-9a-f]+:	15 c4 92 6f 	\(R6, R7\) = BYTEOP16M \(R3:2, R3:2\) \(R\);
[ 0-9a-f]+:	12 cc 02 00 	SAA \(R1:0, R3:2\) \|\| R0 = \[I0\+\+\] \|\| R2 = \[I1\+\+\];
[ 0-9a-f]+:	00 9c 0a 9c 
[ 0-9a-f]+:	12 cc 02 20 	SAA \(R1:0, R3:2\) \(R\) \|\| R1 = \[I0\+\+\] \|\| R3 = \[I1\+\+\];
[ 0-9a-f]+:	01 9c 0b 9c 
[ 0-9a-f]+:	12 c4 02 00 	SAA \(R1:0, R3:2\);
[ 0-9a-f]+:	18 c4 80 4b 	\(R6, R5\) = BYTEUNPACK R1:0;
[ 0-9a-f]+:	18 c4 80 6b 	\(R6, R5\) = BYTEUNPACK R1:0 \(R\);
[ 0-9a-f]+:	18 c4 90 4b 	\(R6, R5\) = BYTEUNPACK R3:2;
[ 0-9a-f]+:	18 c4 90 6b 	\(R6, R5\) = BYTEUNPACK R3:2 \(R\);
[ 0-9a-f]+:	18 c4 00 42 	\(R0, R1\) = BYTEUNPACK R1:0;
[ 0-9a-f]+:	18 c4 80 66 	\(R2, R3\) = BYTEUNPACK R1:0 \(R\);
[ 0-9a-f]+:	18 c4 10 4b 	\(R4, R5\) = BYTEUNPACK R3:2;
[ 0-9a-f]+:	18 c4 90 6f 	\(R6, R7\) = BYTEUNPACK R3:2 \(R\);
@


1.6
log
@gas: blackfin: reject invalid 16bit acc add insns

The 16bit acc add insn cannot assign the two results to the same dreg,
so make sure gas rejects attempts to use this insn variant.

Signed-off-by: Mike Frysinger <vapier@@gentoo.org>
@
text
@d53 4
a56 4
[ 0-9a-f]+:	0c c4 00 42 	R0 = A1.L \+ A1.H, R1 = A0.L \+ A0.H;
[ 0-9a-f]+:	0c c4 80 46 	R2 = A1.L \+ A1.H, R3 = A0.L \+ A0.H;
[ 0-9a-f]+:	0c c4 00 4b 	R4 = A1.L \+ A1.H, R5 = A0.L \+ A0.H;
[ 0-9a-f]+:	0c c4 80 4f 	R6 = A1.L \+ A1.H, R7 = A0.L \+ A0.H;
@


1.5
log
@gas/opcodes: blackfin: punt BYTEOP2M insn support

The BYTEOP2M insn was part of the initial Blackfin designs, but never made
it into any actual silicon.  So punt support for it.

Signed-off-by: Mike Frysinger <vapier@@gentoo.org>
@
text
@a52 1
[ 0-9a-f]+:	0c c4 00 40 	R0 = A1.L \+ A1.H, R0 = A0.L \+ A0.H;
@


1.4
log
@gas: blackfin: fix encoding of BYTEOP2M insn

The BYTEOP2M parser incorrectly calls BYTEOP2P to generate the opcode.
Once we've fixed that, it's easy to see that the disassembler also likes
to decode this insn incorrectly.  So fix that and then add some tests.

Signed-off-by: Mike Frysinger <vapier@@gentoo.org>
@
text
@a105 24
[ 0-9a-f]+:	16 c4 02 86 	R3 = BYTEOP2M \(R1:0, R3:2\) \(RNDL\);
[ 0-9a-f]+:	36 c4 02 86 	R3 = BYTEOP2M \(R1:0, R3:2\) \(RNDH\);
[ 0-9a-f]+:	16 c4 02 c6 	R3 = BYTEOP2M \(R1:0, R3:2\) \(TL\);
[ 0-9a-f]+:	36 c4 02 c6 	R3 = BYTEOP2M \(R1:0, R3:2\) \(TH\);
[ 0-9a-f]+:	16 c4 02 a6 	R3 = BYTEOP2M \(R1:0, R3:2\) \(RNDL, R\);
[ 0-9a-f]+:	36 c4 02 a6 	R3 = BYTEOP2M \(R1:0, R3:2\) \(RNDH, R\);
[ 0-9a-f]+:	16 c4 02 e6 	R3 = BYTEOP2M \(R1:0, R3:2\) \(TL, R\);
[ 0-9a-f]+:	36 c4 02 e6 	R3 = BYTEOP2M \(R1:0, R3:2\) \(TH, R\);
[ 0-9a-f]+:	16 c4 02 80 	R0 = BYTEOP2M \(R1:0, R3:2\) \(RNDL\);
[ 0-9a-f]+:	36 c4 02 82 	R1 = BYTEOP2M \(R1:0, R3:2\) \(RNDH\);
[ 0-9a-f]+:	16 c4 02 c4 	R2 = BYTEOP2M \(R1:0, R3:2\) \(TL\);
[ 0-9a-f]+:	36 c4 02 c6 	R3 = BYTEOP2M \(R1:0, R3:2\) \(TH\);
[ 0-9a-f]+:	16 c4 02 a8 	R4 = BYTEOP2M \(R1:0, R3:2\) \(RNDL, R\);
[ 0-9a-f]+:	36 c4 02 aa 	R5 = BYTEOP2M \(R1:0, R3:2\) \(RNDH, R\);
[ 0-9a-f]+:	16 c4 02 ec 	R6 = BYTEOP2M \(R1:0, R3:2\) \(TL, R\);
[ 0-9a-f]+:	36 c4 02 ee 	R7 = BYTEOP2M \(R1:0, R3:2\) \(TH, R\);
[ 0-9a-f]+:	16 c4 12 80 	R0 = BYTEOP2M \(R3:2, R3:2\) \(RNDL\);
[ 0-9a-f]+:	36 c4 12 82 	R1 = BYTEOP2M \(R3:2, R3:2\) \(RNDH\);
[ 0-9a-f]+:	16 c4 12 c4 	R2 = BYTEOP2M \(R3:2, R3:2\) \(TL\);
[ 0-9a-f]+:	36 c4 12 c6 	R3 = BYTEOP2M \(R3:2, R3:2\) \(TH\);
[ 0-9a-f]+:	16 c4 12 a8 	R4 = BYTEOP2M \(R3:2, R3:2\) \(RNDL, R\);
[ 0-9a-f]+:	36 c4 12 aa 	R5 = BYTEOP2M \(R3:2, R3:2\) \(RNDH, R\);
[ 0-9a-f]+:	16 c4 12 ec 	R6 = BYTEOP2M \(R3:2, R3:2\) \(TL, R\);
[ 0-9a-f]+:	36 c4 12 ee 	R7 = BYTEOP2M \(R3:2, R3:2\) \(TH, R\);
@


1.3
log
@gas: blackfin: generalize matching in the video tests

The exact symbol addresses are not important to these tests.  We only
care about the opcodes and the disassembly output.  This makes adding
more insns to these tests easier.

Signed-off-by: Mike Frysinger <vapier@@gentoo.org>
@
text
@d106 24
@


1.2
log
@gas/testsuite/:
	From Robin Getz  <rgetz@@blackfin.uclinux.org>
	* gas/bfin/arithmetic.d: Update to reflect spaces/capitalization in
	recent changes in opcodes/bfin-dis.c.
	gas/bfin/arithmetic.s: Likewise.
	gas/bfin/bit.d: Likewise.
	gas/bfin/bit2.d: Likewise.
	gas/bfin/control_code.d: Likewise.
	gas/bfin/control_code2.d: Likewise.
	gas/bfin/event.d: Likewise.
	gas/bfin/event2.d: Likewise.
	gas/bfin/flow.d: Likewise.
	gas/bfin/flow2.d: Likewise.
	gas/bfin/load.d: Likewise.
	gas/bfin/logical.d: Likewise.
	gas/bfin/logical2.d: Likewise.
	gas/bfin/move.d: Likewise.
	gas/bfin/move2.d: Likewise.
	gas/bfin/parallel.d: Likewise.
	gas/bfin/parallel2.d: Likewise.
	gas/bfin/parallel3.d: Likewise.
	gas/bfin/parallel4.d: Likewise.
	gas/bfin/shift.d: Likewise.
	gas/bfin/shift2.d: Likewise.
	gas/bfin/stack.d: Likewise.
	gas/bfin/stack2.d: Likewise.
	gas/bfin/store.d: Likewise.
	gas/bfin/vector.d: Likewise.
	gas/bfin/vector2.d: Likewise.
	gas/bfin/video.d: Likewise.
	gas/bfin/video2.d: Likewise.

opcodes/:
	* bfin-dis.c: (c_uimm4s4d, c_imm5d, c_imm7d, c_imm16d, c_uimm16s4d,
	c_imm32, c_huimm32e): Define.
	(constant_formats): Add flags for printing decimal, leading spaces, and
	exact symbols.
	(comment, parallel): Add global flags in all disassembly.
	(fmtconst): Take advantage of new flags, and print default in hex.
	(fmtconst_val): Likewise.
	(decode_macfunc): Be consistant with spaces, tabs, comments,
	capitalization in disassembly, fix minor coding style issues.
	(reg_names, amod0, amod1, amod0amod2, aligndir, get_allreg): Likewise.
	(decode_ProgCtrl_0, decode_PushPopMultiple_0, decode_CCflag_0,
	decode_CC2dreg_0, decode_CC2stat_0, decode_BRCC_0, decode_UJUMP_0,
	decode_REGMV_0, decode_ALU2op_0, decode_PTR2op_0, decode_LOGI2op_0,
	decode_COMP3op_0, decode_COMPI2opD_0, decode_COMPI2opP_0,
	decode_LDSTpmod_0, decode_dagMODim_0, decode_dagMODik_0,
	decode_dspLDST_0, decode_LDST_0, decode_LDSTiiFP_0, decode_LDSTii_0,
	decode_LoopSetup_0, decode_LDIMMhalf_0, decode_CALLa_0,
	decode_LDSTidxI_0, decode_linkage_0, decode_dsp32alu_0,
	decode_dsp32shift_0, decode_dsp32shiftimm_0, decode_pseudodbg_assert_0,
	_print_insn_bfin, print_insn_bfin): Likewise.
@
text
@d8 141
a148 141
   0:	0d c6 00 00 	R0 = ALIGN8 \(R0, R0\);
   4:	0d c6 08 00 	R0 = ALIGN8 \(R0, R1\);
   8:	0d c6 01 00 	R0 = ALIGN8 \(R1, R0\);
   c:	0d c6 09 00 	R0 = ALIGN8 \(R1, R1\);
  10:	0d c6 11 00 	R0 = ALIGN8 \(R1, R2\);
  14:	0d c6 2c 06 	R3 = ALIGN8 \(R4, R5\);
  18:	0d c6 07 0c 	R6 = ALIGN8 \(R7, R0\);
  1c:	0d c6 1a 02 	R1 = ALIGN8 \(R2, R3\);
  20:	0d c6 35 08 	R4 = ALIGN8 \(R5, R6\);
  24:	0d c6 08 0e 	R7 = ALIGN8 \(R0, R1\);
  28:	0d c6 23 04 	R2 = ALIGN8 \(R3, R4\);
  2c:	0d c6 3e 0a 	R5 = ALIGN8 \(R6, R7\);
  30:	0d c6 00 40 	R0 = ALIGN16 \(R0, R0\);
  34:	0d c6 08 40 	R0 = ALIGN16 \(R0, R1\);
  38:	0d c6 01 40 	R0 = ALIGN16 \(R1, R0\);
  3c:	0d c6 09 40 	R0 = ALIGN16 \(R1, R1\);
  40:	0d c6 11 40 	R0 = ALIGN16 \(R1, R2\);
  44:	0d c6 2c 46 	R3 = ALIGN16 \(R4, R5\);
  48:	0d c6 07 4c 	R6 = ALIGN16 \(R7, R0\);
  4c:	0d c6 1a 42 	R1 = ALIGN16 \(R2, R3\);
  50:	0d c6 35 48 	R4 = ALIGN16 \(R5, R6\);
  54:	0d c6 08 4e 	R7 = ALIGN16 \(R0, R1\);
  58:	0d c6 23 44 	R2 = ALIGN16 \(R3, R4\);
  5c:	0d c6 3e 4a 	R5 = ALIGN16 \(R6, R7\);
  60:	0d c6 00 80 	R0 = ALIGN24 \(R0, R0\);
  64:	0d c6 08 80 	R0 = ALIGN24 \(R0, R1\);
  68:	0d c6 01 80 	R0 = ALIGN24 \(R1, R0\);
  6c:	0d c6 09 80 	R0 = ALIGN24 \(R1, R1\);
  70:	0d c6 11 80 	R0 = ALIGN24 \(R1, R2\);
  74:	0d c6 2c 86 	R3 = ALIGN24 \(R4, R5\);
  78:	0d c6 07 8c 	R6 = ALIGN24 \(R7, R0\);
  7c:	0d c6 1a 82 	R1 = ALIGN24 \(R2, R3\);
  80:	0d c6 35 88 	R4 = ALIGN24 \(R5, R6\);
  84:	0d c6 08 8e 	R7 = ALIGN24 \(R0, R1\);
  88:	0d c6 23 84 	R2 = ALIGN24 \(R3, R4\);
  8c:	0d c6 3e 8a 	R5 = ALIGN24 \(R6, R7\);
  90:	12 c4 00 c0 	DISALGNEXCPT;
  94:	17 c4 02 00 	R0 = BYTEOP3P \(R1:0, R3:2\) \(LO\);
  98:	37 c4 02 02 	R1 = BYTEOP3P \(R1:0, R3:2\) \(HI\);
  9c:	17 c4 02 24 	R2 = BYTEOP3P \(R1:0, R3:2\) \(LO, R\);
  a0:	37 c4 02 26 	R3 = BYTEOP3P \(R1:0, R3:2\) \(HI, R\);
  a4:	17 c4 10 08 	R4 = BYTEOP3P \(R3:2, R1:0\) \(LO\);
  a8:	37 c4 10 0a 	R5 = BYTEOP3P \(R3:2, R1:0\) \(HI\);
  ac:	17 c4 10 2c 	R6 = BYTEOP3P \(R3:2, R1:0\) \(LO, R\);
  b0:	37 c4 10 2e 	R7 = BYTEOP3P \(R3:2, R1:0\) \(HI, R\);
  b4:	0c c4 [0-3][[:xdigit:]] 40 	R0 = A1.L \+ A1.H, R0 = A0.L \+ A0.H;
  b8:	0c c4 [0-3][[:xdigit:]] 42 	R0 = A1.L \+ A1.H, R1 = A0.L \+ A0.H;
  bc:	0c c4 [8|9|a|b][[:xdigit:]] 46 	R2 = A1.L \+ A1.H, R3 = A0.L \+ A0.H;
  c0:	0c c4 [0-3][[:xdigit:]] 4b 	R4 = A1.L \+ A1.H, R5 = A0.L \+ A0.H;
  c4:	0c c4 [8|9|a|b][[:xdigit:]] 4f 	R6 = A1.L \+ A1.H, R7 = A0.L \+ A0.H;
  c8:	15 c4 d0 01 	\(R7, R0\) = BYTEOP16P \(R3:2, R1:0\);
  cc:	15 c4 50 04 	\(R1, R2\) = BYTEOP16P \(R3:2, R1:0\);
  d0:	15 c4 10 02 	\(R0, R1\) = BYTEOP16P \(R3:2, R1:0\);
  d4:	15 c4 90 06 	\(R2, R3\) = BYTEOP16P \(R3:2, R1:0\);
  d8:	15 c4 c2 01 	\(R7, R0\) = BYTEOP16P \(R1:0, R3:2\);
  dc:	15 c4 42 04 	\(R1, R2\) = BYTEOP16P \(R1:0, R3:2\);
  e0:	15 c4 02 02 	\(R0, R1\) = BYTEOP16P \(R1:0, R3:2\);
  e4:	15 c4 82 06 	\(R2, R3\) = BYTEOP16P \(R1:0, R3:2\);
  e8:	15 c4 d0 21 	\(R7, R0\) = BYTEOP16P \(R3:2, R1:0\) \(R\);
  ec:	15 c4 50 24 	\(R1, R2\) = BYTEOP16P \(R3:2, R1:0\) \(R\);
  f0:	15 c4 10 22 	\(R0, R1\) = BYTEOP16P \(R3:2, R1:0\) \(R\);
  f4:	15 c4 90 26 	\(R2, R3\) = BYTEOP16P \(R3:2, R1:0\) \(R\);
  f8:	15 c4 c2 21 	\(R7, R0\) = BYTEOP16P \(R1:0, R3:2\) \(R\);
  fc:	15 c4 42 24 	\(R1, R2\) = BYTEOP16P \(R1:0, R3:2\) \(R\);
 100:	15 c4 02 22 	\(R0, R1\) = BYTEOP16P \(R1:0, R3:2\) \(R\);
 104:	15 c4 82 26 	\(R2, R3\) = BYTEOP16P \(R1:0, R3:2\) \(R\);
 108:	14 c4 02 06 	R3 = BYTEOP1P \(R1:0, R3:2\);
 10c:	14 c4 02 26 	R3 = BYTEOP1P \(R1:0, R3:2\) \(R\);
 110:	14 c4 02 46 	R3 = BYTEOP1P \(R1:0, R3:2\) \(T\);
 114:	14 c4 02 66 	R3 = BYTEOP1P \(R1:0, R3:2\) \(T, R\);
 118:	14 c4 10 00 	R0 = BYTEOP1P \(R3:2, R1:0\);
 11c:	14 c4 10 22 	R1 = BYTEOP1P \(R3:2, R1:0\) \(R\);
 120:	14 c4 10 44 	R2 = BYTEOP1P \(R3:2, R1:0\) \(T\);
 124:	14 c4 10 66 	R3 = BYTEOP1P \(R3:2, R1:0\) \(T, R\);
 128:	16 c4 02 06 	R3 = BYTEOP2P \(R1:0, R3:2\) \(RNDL\);
 12c:	36 c4 02 06 	R3 = BYTEOP2P \(R1:0, R3:2\) \(RNDH\);
 130:	16 c4 02 46 	R3 = BYTEOP2P \(R1:0, R3:2\) \(TL\);
 134:	36 c4 02 46 	R3 = BYTEOP2P \(R1:0, R3:2\) \(TH\);
 138:	16 c4 02 26 	R3 = BYTEOP2P \(R1:0, R3:2\) \(RNDL, R\);
 13c:	36 c4 02 26 	R3 = BYTEOP2P \(R1:0, R3:2\) \(RNDH, R\);
 140:	16 c4 02 66 	R3 = BYTEOP2P \(R1:0, R3:2\) \(TL, R\);
 144:	36 c4 02 66 	R3 = BYTEOP2P \(R1:0, R3:2\) \(TH, R\);
 148:	16 c4 02 00 	R0 = BYTEOP2P \(R1:0, R3:2\) \(RNDL\);
 14c:	36 c4 02 02 	R1 = BYTEOP2P \(R1:0, R3:2\) \(RNDH\);
 150:	16 c4 02 44 	R2 = BYTEOP2P \(R1:0, R3:2\) \(TL\);
 154:	36 c4 02 46 	R3 = BYTEOP2P \(R1:0, R3:2\) \(TH\);
 158:	16 c4 02 28 	R4 = BYTEOP2P \(R1:0, R3:2\) \(RNDL, R\);
 15c:	36 c4 02 2a 	R5 = BYTEOP2P \(R1:0, R3:2\) \(RNDH, R\);
 160:	16 c4 02 6c 	R6 = BYTEOP2P \(R1:0, R3:2\) \(TL, R\);
 164:	36 c4 02 6e 	R7 = BYTEOP2P \(R1:0, R3:2\) \(TH, R\);
 168:	16 c4 12 00 	R0 = BYTEOP2P \(R3:2, R3:2\) \(RNDL\);
 16c:	36 c4 12 02 	R1 = BYTEOP2P \(R3:2, R3:2\) \(RNDH\);
 170:	16 c4 12 44 	R2 = BYTEOP2P \(R3:2, R3:2\) \(TL\);
 174:	36 c4 12 46 	R3 = BYTEOP2P \(R3:2, R3:2\) \(TH\);
 178:	16 c4 12 28 	R4 = BYTEOP2P \(R3:2, R3:2\) \(RNDL, R\);
 17c:	36 c4 12 2a 	R5 = BYTEOP2P \(R3:2, R3:2\) \(RNDH, R\);
 180:	16 c4 12 6c 	R6 = BYTEOP2P \(R3:2, R3:2\) \(TL, R\);
 184:	36 c4 12 6e 	R7 = BYTEOP2P \(R3:2, R3:2\) \(TH, R\);
 188:	18 c4 00 00 	R0 = BYTEPACK \(R0, R0\);
 18c:	18 c4 13 02 	R1 = BYTEPACK \(R2, R3\);
 190:	18 c4 2e 08 	R4 = BYTEPACK \(R5, R6\);
 194:	18 c4 01 0e 	R7 = BYTEPACK \(R0, R1\);
 198:	18 c4 1c 04 	R2 = BYTEPACK \(R3, R4\);
 19c:	18 c4 37 0a 	R5 = BYTEPACK \(R6, R7\);
 1a0:	15 c4 50 44 	\(R1, R2\) = BYTEOP16M \(R3:2, R1:0\);
 1a4:	15 c4 50 64 	\(R1, R2\) = BYTEOP16M \(R3:2, R1:0\) \(R\);
 1a8:	15 c4 10 42 	\(R0, R1\) = BYTEOP16M \(R3:2, R1:0\);
 1ac:	15 c4 90 66 	\(R2, R3\) = BYTEOP16M \(R3:2, R1:0\) \(R\);
 1b0:	15 c4 d0 4a 	\(R3, R5\) = BYTEOP16M \(R3:2, R1:0\);
 1b4:	15 c4 90 6f 	\(R6, R7\) = BYTEOP16M \(R3:2, R1:0\) \(R\);
 1b8:	15 c4 40 44 	\(R1, R2\) = BYTEOP16M \(R1:0, R1:0\);
 1bc:	15 c4 40 64 	\(R1, R2\) = BYTEOP16M \(R1:0, R1:0\) \(R\);
 1c0:	15 c4 00 42 	\(R0, R1\) = BYTEOP16M \(R1:0, R1:0\);
 1c4:	15 c4 80 66 	\(R2, R3\) = BYTEOP16M \(R1:0, R1:0\) \(R\);
 1c8:	15 c4 c0 4a 	\(R3, R5\) = BYTEOP16M \(R1:0, R1:0\);
 1cc:	15 c4 80 6f 	\(R6, R7\) = BYTEOP16M \(R1:0, R1:0\) \(R\);
 1d0:	15 c4 42 44 	\(R1, R2\) = BYTEOP16M \(R1:0, R3:2\);
 1d4:	15 c4 42 64 	\(R1, R2\) = BYTEOP16M \(R1:0, R3:2\) \(R\);
 1d8:	15 c4 02 42 	\(R0, R1\) = BYTEOP16M \(R1:0, R3:2\);
 1dc:	15 c4 82 66 	\(R2, R3\) = BYTEOP16M \(R1:0, R3:2\) \(R\);
 1e0:	15 c4 c2 4a 	\(R3, R5\) = BYTEOP16M \(R1:0, R3:2\);
 1e4:	15 c4 82 6f 	\(R6, R7\) = BYTEOP16M \(R1:0, R3:2\) \(R\);
 1e8:	15 c4 52 44 	\(R1, R2\) = BYTEOP16M \(R3:2, R3:2\);
 1ec:	15 c4 52 64 	\(R1, R2\) = BYTEOP16M \(R3:2, R3:2\) \(R\);
 1f0:	15 c4 12 42 	\(R0, R1\) = BYTEOP16M \(R3:2, R3:2\);
 1f4:	15 c4 92 66 	\(R2, R3\) = BYTEOP16M \(R3:2, R3:2\) \(R\);
 1f8:	15 c4 d2 4a 	\(R3, R5\) = BYTEOP16M \(R3:2, R3:2\);
 1fc:	15 c4 92 6f 	\(R6, R7\) = BYTEOP16M \(R3:2, R3:2\) \(R\);
 200:	12 cc 02 00 	SAA \(R1:0, R3:2\) \|\| R0 = \[I0\+\+\] \|\| R2 = \[I1\+\+\];
 204:	00 9c 0a 9c 
 208:	12 cc 02 20 	SAA \(R1:0, R3:2\) \(R\) \|\| R1 = \[I0\+\+\] \|\| R3 = \[I1\+\+\];
 20c:	01 9c 0b 9c 
 210:	12 c4 02 00 	SAA \(R1:0, R3:2\);
 214:	18 c4 80 4b 	\(R6, R5\) = BYTEUNPACK R1:0;
 218:	18 c4 80 6b 	\(R6, R5\) = BYTEUNPACK R1:0 \(R\);
 21c:	18 c4 90 4b 	\(R6, R5\) = BYTEUNPACK R3:2;
 220:	18 c4 90 6b 	\(R6, R5\) = BYTEUNPACK R3:2 \(R\);
 224:	18 c4 00 42 	\(R0, R1\) = BYTEUNPACK R1:0;
 228:	18 c4 80 66 	\(R2, R3\) = BYTEUNPACK R1:0 \(R\);
 22c:	18 c4 10 4b 	\(R4, R5\) = BYTEUNPACK R3:2;
 230:	18 c4 90 6f 	\(R6, R7\) = BYTEUNPACK R3:2 \(R\);
@


1.1
log
@	* gas/bfin: New testsuite for bfin.
	* gas/all/gas.exp (bfin-*-*): Expected failure for alternate
	macro syntax.
@
text
@d8 36
a43 36
   0:	0d c6 00 00 	R0=ALIGN8\(R0,R0\);
   4:	0d c6 08 00 	R0=ALIGN8\(R0,R1\);
   8:	0d c6 01 00 	R0=ALIGN8\(R1,R0\);
   c:	0d c6 09 00 	R0=ALIGN8\(R1,R1\);
  10:	0d c6 11 00 	R0=ALIGN8\(R1,R2\);
  14:	0d c6 2c 06 	R3=ALIGN8\(R4,R5\);
  18:	0d c6 07 0c 	R6=ALIGN8\(R7,R0\);
  1c:	0d c6 1a 02 	R1=ALIGN8\(R2,R3\);
  20:	0d c6 35 08 	R4=ALIGN8\(R5,R6\);
  24:	0d c6 08 0e 	R7=ALIGN8\(R0,R1\);
  28:	0d c6 23 04 	R2=ALIGN8\(R3,R4\);
  2c:	0d c6 3e 0a 	R5=ALIGN8\(R6,R7\);
  30:	0d c6 00 40 	R0=ALIGN16\(R0,R0\);
  34:	0d c6 08 40 	R0=ALIGN16\(R0,R1\);
  38:	0d c6 01 40 	R0=ALIGN16\(R1,R0\);
  3c:	0d c6 09 40 	R0=ALIGN16\(R1,R1\);
  40:	0d c6 11 40 	R0=ALIGN16\(R1,R2\);
  44:	0d c6 2c 46 	R3=ALIGN16\(R4,R5\);
  48:	0d c6 07 4c 	R6=ALIGN16\(R7,R0\);
  4c:	0d c6 1a 42 	R1=ALIGN16\(R2,R3\);
  50:	0d c6 35 48 	R4=ALIGN16\(R5,R6\);
  54:	0d c6 08 4e 	R7=ALIGN16\(R0,R1\);
  58:	0d c6 23 44 	R2=ALIGN16\(R3,R4\);
  5c:	0d c6 3e 4a 	R5=ALIGN16\(R6,R7\);
  60:	0d c6 00 80 	R0=ALIGN24\(R0,R0\);
  64:	0d c6 08 80 	R0=ALIGN24\(R0,R1\);
  68:	0d c6 01 80 	R0=ALIGN24\(R1,R0\);
  6c:	0d c6 09 80 	R0=ALIGN24\(R1,R1\);
  70:	0d c6 11 80 	R0=ALIGN24\(R1,R2\);
  74:	0d c6 2c 86 	R3=ALIGN24\(R4,R5\);
  78:	0d c6 07 8c 	R6=ALIGN24\(R7,R0\);
  7c:	0d c6 1a 82 	R1=ALIGN24\(R2,R3\);
  80:	0d c6 35 88 	R4=ALIGN24\(R5,R6\);
  84:	0d c6 08 8e 	R7=ALIGN24\(R0,R1\);
  88:	0d c6 23 84 	R2=ALIGN24\(R3,R4\);
  8c:	0d c6 3e 8a 	R5=ALIGN24\(R6,R7\);
d45 92
a136 92
  94:	17 c4 02 00 	R0=BYTEOP3P\(R1:0x0,R3:0x2\)\(LO\);
  98:	37 c4 02 02 	R1=BYTEOP3P\(R1:0x0,R3:0x2\)\(HI\);
  9c:	17 c4 02 24 	R2=BYTEOP3P\(R1:0x0,R3:0x2\)\(LO, R\);
  a0:	37 c4 02 26 	R3=BYTEOP3P\(R1:0x0,R3:0x2\)\(HI, R\);
  a4:	17 c4 10 08 	R4=BYTEOP3P\(R3:0x2,R1:0x0\)\(LO\);
  a8:	37 c4 10 0a 	R5=BYTEOP3P\(R3:0x2,R1:0x0\)\(HI\);
  ac:	17 c4 10 2c 	R6=BYTEOP3P\(R3:0x2,R1:0x0\)\(LO, R\);
  b0:	37 c4 10 2e 	R7=BYTEOP3P\(R3:0x2,R1:0x0\)\(HI, R\);
  b4:	0c c4 [0-3][[:xdigit:]] 40 	R0=A1.L\+A1.H,R0=A0.L\+A0.H;
  b8:	0c c4 [0-3][[:xdigit:]] 42 	R0=A1.L\+A1.H,R1=A0.L\+A0.H;
  bc:	0c c4 [8|9|a|b][[:xdigit:]] 46 	R2=A1.L\+A1.H,R3=A0.L\+A0.H;
  c0:	0c c4 [0-3][[:xdigit:]] 4b 	R4=A1.L\+A1.H,R5=A0.L\+A0.H;
  c4:	0c c4 [8|9|a|b][[:xdigit:]] 4f 	R6=A1.L\+A1.H,R7=A0.L\+A0.H;
  c8:	15 c4 d0 01 	\(R7,R0\)=BYTEOP16P\(R3:0x2,R1:0x0\) ;
  cc:	15 c4 50 04 	\(R1,R2\)=BYTEOP16P\(R3:0x2,R1:0x0\) ;
  d0:	15 c4 10 02 	\(R0,R1\)=BYTEOP16P\(R3:0x2,R1:0x0\) ;
  d4:	15 c4 90 06 	\(R2,R3\)=BYTEOP16P\(R3:0x2,R1:0x0\) ;
  d8:	15 c4 c2 01 	\(R7,R0\)=BYTEOP16P\(R1:0x0,R3:0x2\) ;
  dc:	15 c4 42 04 	\(R1,R2\)=BYTEOP16P\(R1:0x0,R3:0x2\) ;
  e0:	15 c4 02 02 	\(R0,R1\)=BYTEOP16P\(R1:0x0,R3:0x2\) ;
  e4:	15 c4 82 06 	\(R2,R3\)=BYTEOP16P\(R1:0x0,R3:0x2\) ;
  e8:	15 c4 d0 21 	\(R7,R0\)=BYTEOP16P\(R3:0x2,R1:0x0\) \(R\);
  ec:	15 c4 50 24 	\(R1,R2\)=BYTEOP16P\(R3:0x2,R1:0x0\) \(R\);
  f0:	15 c4 10 22 	\(R0,R1\)=BYTEOP16P\(R3:0x2,R1:0x0\) \(R\);
  f4:	15 c4 90 26 	\(R2,R3\)=BYTEOP16P\(R3:0x2,R1:0x0\) \(R\);
  f8:	15 c4 c2 21 	\(R7,R0\)=BYTEOP16P\(R1:0x0,R3:0x2\) \(R\);
  fc:	15 c4 42 24 	\(R1,R2\)=BYTEOP16P\(R1:0x0,R3:0x2\) \(R\);
 100:	15 c4 02 22 	\(R0,R1\)=BYTEOP16P\(R1:0x0,R3:0x2\) \(R\);
 104:	15 c4 82 26 	\(R2,R3\)=BYTEOP16P\(R1:0x0,R3:0x2\) \(R\);
 108:	14 c4 02 06 	R3=BYTEOP1P\(R1:0x0,R3:0x2\);
 10c:	14 c4 02 26 	R3=BYTEOP1P\(R1:0x0,R3:0x2\)\(R\);
 110:	14 c4 02 46 	R3=BYTEOP1P\(R1:0x0,R3:0x2\)\(T\);
 114:	14 c4 02 66 	R3=BYTEOP1P\(R1:0x0,R3:0x2\)\(T, R\);
 118:	14 c4 10 00 	R0=BYTEOP1P\(R3:0x2,R1:0x0\);
 11c:	14 c4 10 22 	R1=BYTEOP1P\(R3:0x2,R1:0x0\)\(R\);
 120:	14 c4 10 44 	R2=BYTEOP1P\(R3:0x2,R1:0x0\)\(T\);
 124:	14 c4 10 66 	R3=BYTEOP1P\(R3:0x2,R1:0x0\)\(T, R\);
 128:	16 c4 02 06 	R3=BYTEOP2P\(R1:0x0,R3:0x2\)\(RNDL\);
 12c:	36 c4 02 06 	R3=BYTEOP2P\(R1:0x0,R3:0x2\)\(RNDH\);
 130:	16 c4 02 46 	R3=BYTEOP2P\(R1:0x0,R3:0x2\)\(TL\);
 134:	36 c4 02 46 	R3=BYTEOP2P\(R1:0x0,R3:0x2\)\(TH\);
 138:	16 c4 02 26 	R3=BYTEOP2P\(R1:0x0,R3:0x2\)\(RNDL, R\);
 13c:	36 c4 02 26 	R3=BYTEOP2P\(R1:0x0,R3:0x2\)\(RNDH, R\);
 140:	16 c4 02 66 	R3=BYTEOP2P\(R1:0x0,R3:0x2\)\(TL, R\);
 144:	36 c4 02 66 	R3=BYTEOP2P\(R1:0x0,R3:0x2\)\(TH, R\);
 148:	16 c4 02 00 	R0=BYTEOP2P\(R1:0x0,R3:0x2\)\(RNDL\);
 14c:	36 c4 02 02 	R1=BYTEOP2P\(R1:0x0,R3:0x2\)\(RNDH\);
 150:	16 c4 02 44 	R2=BYTEOP2P\(R1:0x0,R3:0x2\)\(TL\);
 154:	36 c4 02 46 	R3=BYTEOP2P\(R1:0x0,R3:0x2\)\(TH\);
 158:	16 c4 02 28 	R4=BYTEOP2P\(R1:0x0,R3:0x2\)\(RNDL, R\);
 15c:	36 c4 02 2a 	R5=BYTEOP2P\(R1:0x0,R3:0x2\)\(RNDH, R\);
 160:	16 c4 02 6c 	R6=BYTEOP2P\(R1:0x0,R3:0x2\)\(TL, R\);
 164:	36 c4 02 6e 	R7=BYTEOP2P\(R1:0x0,R3:0x2\)\(TH, R\);
 168:	16 c4 12 00 	R0=BYTEOP2P\(R3:0x2,R3:0x2\)\(RNDL\);
 16c:	36 c4 12 02 	R1=BYTEOP2P\(R3:0x2,R3:0x2\)\(RNDH\);
 170:	16 c4 12 44 	R2=BYTEOP2P\(R3:0x2,R3:0x2\)\(TL\);
 174:	36 c4 12 46 	R3=BYTEOP2P\(R3:0x2,R3:0x2\)\(TH\);
 178:	16 c4 12 28 	R4=BYTEOP2P\(R3:0x2,R3:0x2\)\(RNDL, R\);
 17c:	36 c4 12 2a 	R5=BYTEOP2P\(R3:0x2,R3:0x2\)\(RNDH, R\);
 180:	16 c4 12 6c 	R6=BYTEOP2P\(R3:0x2,R3:0x2\)\(TL, R\);
 184:	36 c4 12 6e 	R7=BYTEOP2P\(R3:0x2,R3:0x2\)\(TH, R\);
 188:	18 c4 00 00 	R0=BYTEPACK\(R0,R0\);
 18c:	18 c4 13 02 	R1=BYTEPACK\(R2,R3\);
 190:	18 c4 2e 08 	R4=BYTEPACK\(R5,R6\);
 194:	18 c4 01 0e 	R7=BYTEPACK\(R0,R1\);
 198:	18 c4 1c 04 	R2=BYTEPACK\(R3,R4\);
 19c:	18 c4 37 0a 	R5=BYTEPACK\(R6,R7\);
 1a0:	15 c4 50 44 	\(R1,R2\)=BYTEOP16M\(R3:0x2,R1:0x0\) ;
 1a4:	15 c4 50 64 	\(R1,R2\)=BYTEOP16M\(R3:0x2,R1:0x0\) \(R\);
 1a8:	15 c4 10 42 	\(R0,R1\)=BYTEOP16M\(R3:0x2,R1:0x0\) ;
 1ac:	15 c4 90 66 	\(R2,R3\)=BYTEOP16M\(R3:0x2,R1:0x0\) \(R\);
 1b0:	15 c4 d0 4a 	\(R3,R5\)=BYTEOP16M\(R3:0x2,R1:0x0\) ;
 1b4:	15 c4 90 6f 	\(R6,R7\)=BYTEOP16M\(R3:0x2,R1:0x0\) \(R\);
 1b8:	15 c4 40 44 	\(R1,R2\)=BYTEOP16M\(R1:0x0,R1:0x0\) ;
 1bc:	15 c4 40 64 	\(R1,R2\)=BYTEOP16M\(R1:0x0,R1:0x0\) \(R\);
 1c0:	15 c4 00 42 	\(R0,R1\)=BYTEOP16M\(R1:0x0,R1:0x0\) ;
 1c4:	15 c4 80 66 	\(R2,R3\)=BYTEOP16M\(R1:0x0,R1:0x0\) \(R\);
 1c8:	15 c4 c0 4a 	\(R3,R5\)=BYTEOP16M\(R1:0x0,R1:0x0\) ;
 1cc:	15 c4 80 6f 	\(R6,R7\)=BYTEOP16M\(R1:0x0,R1:0x0\) \(R\);
 1d0:	15 c4 42 44 	\(R1,R2\)=BYTEOP16M\(R1:0x0,R3:0x2\) ;
 1d4:	15 c4 42 64 	\(R1,R2\)=BYTEOP16M\(R1:0x0,R3:0x2\) \(R\);
 1d8:	15 c4 02 42 	\(R0,R1\)=BYTEOP16M\(R1:0x0,R3:0x2\) ;
 1dc:	15 c4 82 66 	\(R2,R3\)=BYTEOP16M\(R1:0x0,R3:0x2\) \(R\);
 1e0:	15 c4 c2 4a 	\(R3,R5\)=BYTEOP16M\(R1:0x0,R3:0x2\) ;
 1e4:	15 c4 82 6f 	\(R6,R7\)=BYTEOP16M\(R1:0x0,R3:0x2\) \(R\);
 1e8:	15 c4 52 44 	\(R1,R2\)=BYTEOP16M\(R3:0x2,R3:0x2\) ;
 1ec:	15 c4 52 64 	\(R1,R2\)=BYTEOP16M\(R3:0x2,R3:0x2\) \(R\);
 1f0:	15 c4 12 42 	\(R0,R1\)=BYTEOP16M\(R3:0x2,R3:0x2\) ;
 1f4:	15 c4 92 66 	\(R2,R3\)=BYTEOP16M\(R3:0x2,R3:0x2\) \(R\);
 1f8:	15 c4 d2 4a 	\(R3,R5\)=BYTEOP16M\(R3:0x2,R3:0x2\) ;
 1fc:	15 c4 92 6f 	\(R6,R7\)=BYTEOP16M\(R3:0x2,R3:0x2\) \(R\);
 200:	12 cc 02 00 	SAA\(R1:0x0,R3:0x2\)  \|\| R0=\[I0\+\+\] \|\| R2=\[I1\+\+\];
d138 1
a138 1
 208:	12 cc 02 20 	SAA\(R1:0x0,R3:0x2\) \(R\) \|\| R1=\[I0\+\+\] \|\| R3=\[I1\+\+\];
d140 9
a148 9
 210:	12 c4 02 00 	SAA\(R1:0x0,R3:0x2\) ;
 214:	18 c4 80 4b 	\(R6,R5\) = BYTEUNPACK R1:0x0 ;
 218:	18 c4 80 6b 	\(R6,R5\) = BYTEUNPACK R1:0x0 \(R\);
 21c:	18 c4 90 4b 	\(R6,R5\) = BYTEUNPACK R3:0x2 ;
 220:	18 c4 90 6b 	\(R6,R5\) = BYTEUNPACK R3:0x2 \(R\);
 224:	18 c4 00 42 	\(R0,R1\) = BYTEUNPACK R1:0x0 ;
 228:	18 c4 80 66 	\(R2,R3\) = BYTEUNPACK R1:0x0 \(R\);
 22c:	18 c4 10 4b 	\(R4,R5\) = BYTEUNPACK R3:0x2 ;
 230:	18 c4 90 6f 	\(R6,R7\) = BYTEUNPACK R3:0x2 \(R\);
@

