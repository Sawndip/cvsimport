head	1.4;
access;
symbols
	binutils-2_24-branch:1.4.0.10
	binutils-2_24-branchpoint:1.4
	binutils-2_21_1:1.4
	binutils-2_23_2:1.4
	binutils-2_23_1:1.4
	binutils-2_23:1.4
	binutils-2_23-branch:1.4.0.8
	binutils-2_23-branchpoint:1.4
	binutils-2_22_branch:1.4.0.6
	binutils-2_22:1.4
	binutils-2_22-branch:1.4.0.4
	binutils-2_22-branchpoint:1.4
	binutils-2_21:1.4
	binutils-2_21-branch:1.4.0.2
	binutils-2_21-branchpoint:1.4
	binutils-2_20_1:1.3
	binutils-2_20:1.3
	binutils-arc-20081103-branch:1.3.0.10
	binutils-arc-20081103-branchpoint:1.3
	binutils-2_20-branch:1.3.0.8
	binutils-2_20-branchpoint:1.3
	dje-cgen-play1-branch:1.3.0.6
	dje-cgen-play1-branchpoint:1.3
	arc-20081103-branch:1.3.0.4
	arc-20081103-branchpoint:1.3
	binutils-2_19_1:1.3
	binutils-2_19:1.3
	binutils-2_19-branch:1.3.0.2
	binutils-2_19-branchpoint:1.3
	binutils-2_18:1.2
	binutils-2_18-branch:1.2.0.6
	binutils-2_18-branchpoint:1.2
	binutils-csl-coldfire-4_1-32:1.2
	binutils-csl-sourcerygxx-4_1-32:1.2
	binutils-csl-innovasic-fido-3_4_4-33:1.2
	binutils-csl-coldfire-4_1-30:1.2
	binutils-csl-sourcerygxx-4_1-30:1.2
	binutils-csl-coldfire-4_1-28:1.2
	binutils-csl-sourcerygxx-4_1-29:1.2
	binutils-csl-sourcerygxx-4_1-28:1.2
	binutils-csl-arm-2006q3-27:1.2
	binutils-csl-sourcerygxx-4_1-27:1.2
	binutils-csl-arm-2006q3-26:1.2
	binutils-csl-sourcerygxx-4_1-26:1.2
	binutils-csl-sourcerygxx-4_1-25:1.2
	binutils-csl-sourcerygxx-4_1-24:1.2
	binutils-csl-sourcerygxx-4_1-23:1.2
	binutils-csl-sourcerygxx-4_1-21:1.2
	binutils-csl-arm-2006q3-21:1.2
	binutils-csl-sourcerygxx-4_1-22:1.2
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.2
	binutils-csl-sourcerygxx-4_1-20:1.2
	binutils-csl-arm-2006q3-19:1.2
	binutils-csl-sourcerygxx-4_1-19:1.2
	binutils-csl-sourcerygxx-4_1-18:1.2
	binutils-csl-renesas-4_1-9:1.2
	binutils-csl-renesas-4_1-8:1.2
	binutils-csl-renesas-4_1-7:1.2
	binutils-csl-renesas-4_1-6:1.2
	binutils-csl-sourcerygxx-4_1-17:1.2
	binutils-csl-sourcerygxx-4_1-14:1.2
	binutils-csl-sourcerygxx-4_1-15:1.2
	binutils-csl-sourcerygxx-4_1-13:1.2
	binutils-2_17:1.2
	binutils-csl-sourcerygxx-4_1-12:1.2
	binutils-csl-sourcerygxx-3_4_4-21:1.2
	binutils-csl-sourcerygxx-4_1-9:1.2
	binutils-csl-sourcerygxx-4_1-8:1.2
	binutils-csl-sourcerygxx-4_1-7:1.2
	binutils-csl-arm-2006q1-6:1.2
	binutils-csl-sourcerygxx-4_1-6:1.2
	binutils-csl-coldfire-4_1-11:1.2
	binutils-csl-sourcerygxx-3_4_4-19:1.2
	binutils-csl-coldfire-4_1-10:1.2
	binutils-csl-sourcerygxx-4_1-5:1.2
	binutils-csl-sourcerygxx-4_1-4:1.2
	binutils-csl-morpho-4_1-4:1.2
	binutils-csl-sourcerygxx-3_4_4-17:1.2
	binutils-2_17-branch:1.2.0.4
	binutils-2_17-branchpoint:1.2
	binutils-csl-2_17-branch:1.2.0.2
	binutils-csl-2_17-branchpoint:1.2
	binutils_latest_snapshot:1.4;
locks; strict;
comment	@# @;


1.4
date	2010.09.22.20.37.25;	author vapier;	state Exp;
branches;
next	1.3;

1.3
date	2008.03.26.16.48.32;	author bernds;	state Exp;
branches;
next	1.2;

1.2
date	2006.03.16.19.09.25;	author bernds;	state Exp;
branches;
next	1.1;

1.1
date	2005.09.30.15.10.16;	author clm;	state Exp;
branches;
next	;


desc
@@


1.4
log
@opcodes: blackfin: fix decoding of LSHIFT insns

The Blackfin ISA does not have a "SHIFT" insn, it has either LSHIFT,
ASHIFT, or BXORSHIFT.  So be specific when disassembling.

As fall out of this change, we need to update some assembler tests.

Signed-off-by: Robin Getz <robin.getz@@analog.com>
Signed-off-by: Mike Frysinger <vapier@@gentoo.org>
@
text
@#objdump: -dr
#name: shift
.*: +file format .*

Disassembly of section .text:

00000000 <add_with_shift>:
   0:	88 45       	P0 = \(P0 \+ P1\) << 0x1;
   2:	ea 45       	P2 = \(P2 \+ P5\) << 0x2;
   4:	4f 41       	R7 = \(R7 \+ R1\) << 0x2;
   6:	03 41       	R3 = \(R3 \+ R0\) << 0x1;

00000008 <shift_with_add>:
   8:	44 5f       	P5 = P4 \+ \(P0 << 0x2\);
   a:	0a 5c       	P0 = P2 \+ \(P1 << 0x1\);

0000000c <arithmetic_shift>:
   c:	83 c6 08 41 	A0 = A0 >> 0x1f;
  10:	83 c6 f8 00 	A0 = A0 << 0x1f;
  14:	83 c6 00 50 	A1 = A1 >> 0x0;
  18:	83 c6 00 10 	A1 = A1 << 0x0;
  1c:	82 c6 fd 4e 	R7 = R5 << 0x1f \(S\);
  20:	82 c6 52 07 	R3 = R2 >>> 0x16;
  24:	80 c6 7a 52 	R1.L = R2.H << 0xf \(S\);
  28:	80 c6 f2 2b 	R5.H = R2.L >>> 0x2;
  2c:	00 4f       	R0 <<= 0x0;
  2e:	f9 4d       	R1 >>>= 0x1f;
  30:	08 40       	R0 >>>= R1;
  32:	8a 40       	R2 <<= R1;
  34:	00 c6 14 16 	R3.L = ASHIFT R4.H BY R2.L;
  38:	00 c6 07 6e 	R7.H = ASHIFT R7.L BY R0.L \(S\);
  3c:	00 c6 07 6e 	R7.H = ASHIFT R7.L BY R0.L \(S\);
  40:	02 c6 15 0c 	R6 = ASHIFT R5 BY R2.L;
  44:	02 c6 0c 40 	R0 = ASHIFT R4 BY R1.L \(S\);
  48:	02 c6 1e 44 	R2 = ASHIFT R6 BY R3.L \(S\);
  4c:	03 c6 08 00 	A0 = ASHIFT A0 BY R1.L;
  50:	03 c6 00 10 	A1 = ASHIFT A1 BY R0.L;

00000054 <logical_shift>:
  54:	00 45       	P0 = P0 >> 0x1;
  56:	d1 44       	P1 = P2 >> 0x2;
  58:	c9 5a       	P3 = P1 << 0x1;
  5a:	6c 44       	P4 = P5 << 0x2;
  5c:	f8 4e       	R0 >>= 0x1f;
  5e:	ff 4f       	R7 <<= 0x1f;
  60:	80 c6 8a a3 	R1.H = R2.L >> 0xf;
  64:	80 c6 00 8e 	R7.L = R0.L << 0x0;
  68:	82 c6 0d 8b 	R5 = R5 >> 0x1f;
  6c:	82 c6 60 80 	R0 = R0 << 0xc;
  70:	83 c6 f8 41 	A0 = A0 >> 0x1;
  74:	83 c6 00 00 	A0 = A0 << 0x0;
  78:	83 c6 f8 10 	A1 = A1 << 0x1f;
  7c:	83 c6 80 51 	A1 = A1 >> 0x10;
  80:	7d 40       	R5 >>= R7;
  82:	86 40       	R6 <<= R0;
  84:	00 c6 02 b2 	R1.H = LSHIFT R2.H BY R0.L;
  88:	00 c6 08 90 	R0.L = LSHIFT R0.H BY R1.L;
  8c:	00 c6 16 8e 	R7.L = LSHIFT R6.L BY R2.L;
  90:	02 c6 1c 8a 	R5 = LSHIFT R4 BY R3.L;
  94:	03 c6 30 40 	A0 = LSHIFT A0 BY R6.L;
  98:	03 c6 28 50 	A1 = LSHIFT A1 BY R5.L;

0000009c <rotate>:
  9c:	82 c6 07 cf 	R7 = ROT R7 BY -0x20;
  a0:	82 c6 0f cd 	R6 = ROT R7 BY -0x1f;
  a4:	82 c6 ff ca 	R5 = ROT R7 BY 0x1f;
  a8:	82 c6 f7 c8 	R4 = ROT R7 BY 0x1e;
  ac:	83 c6 00 80 	A0 = ROT A0 BY 0x0;
  b0:	83 c6 50 80 	A0 = ROT A0 BY 0xa;
  b4:	83 c6 60 91 	A1 = ROT A1 BY -0x14;
  b8:	83 c6 00 91 	A1 = ROT A1 BY -0x20;
  bc:	02 c6 11 c0 	R0 = ROT R1 BY R2.L;
  c0:	02 c6 1c c0 	R0 = ROT R4 BY R3.L;
  c4:	03 c6 38 80 	A0 = ROT A0 BY R7.L;
  c8:	03 c6 30 90 	A1 = ROT A1 BY R6.L;
@


1.3
log
@gas/testsuite/:
	From Robin Getz  <rgetz@@blackfin.uclinux.org>
	* gas/bfin/arithmetic.d: Update to reflect spaces/capitalization in
	recent changes in opcodes/bfin-dis.c.
	gas/bfin/arithmetic.s: Likewise.
	gas/bfin/bit.d: Likewise.
	gas/bfin/bit2.d: Likewise.
	gas/bfin/control_code.d: Likewise.
	gas/bfin/control_code2.d: Likewise.
	gas/bfin/event.d: Likewise.
	gas/bfin/event2.d: Likewise.
	gas/bfin/flow.d: Likewise.
	gas/bfin/flow2.d: Likewise.
	gas/bfin/load.d: Likewise.
	gas/bfin/logical.d: Likewise.
	gas/bfin/logical2.d: Likewise.
	gas/bfin/move.d: Likewise.
	gas/bfin/move2.d: Likewise.
	gas/bfin/parallel.d: Likewise.
	gas/bfin/parallel2.d: Likewise.
	gas/bfin/parallel3.d: Likewise.
	gas/bfin/parallel4.d: Likewise.
	gas/bfin/shift.d: Likewise.
	gas/bfin/shift2.d: Likewise.
	gas/bfin/stack.d: Likewise.
	gas/bfin/stack2.d: Likewise.
	gas/bfin/store.d: Likewise.
	gas/bfin/vector.d: Likewise.
	gas/bfin/vector2.d: Likewise.
	gas/bfin/video.d: Likewise.
	gas/bfin/video2.d: Likewise.

opcodes/:
	* bfin-dis.c: (c_uimm4s4d, c_imm5d, c_imm7d, c_imm16d, c_uimm16s4d,
	c_imm32, c_huimm32e): Define.
	(constant_formats): Add flags for printing decimal, leading spaces, and
	exact symbols.
	(comment, parallel): Add global flags in all disassembly.
	(fmtconst): Take advantage of new flags, and print default in hex.
	(fmtconst_val): Likewise.
	(decode_macfunc): Be consistant with spaces, tabs, comments,
	capitalization in disassembly, fix minor coding style issues.
	(reg_names, amod0, amod1, amod0amod2, aligndir, get_allreg): Likewise.
	(decode_ProgCtrl_0, decode_PushPopMultiple_0, decode_CCflag_0,
	decode_CC2dreg_0, decode_CC2stat_0, decode_BRCC_0, decode_UJUMP_0,
	decode_REGMV_0, decode_ALU2op_0, decode_PTR2op_0, decode_LOGI2op_0,
	decode_COMP3op_0, decode_COMPI2opD_0, decode_COMPI2opP_0,
	decode_LDSTpmod_0, decode_dagMODim_0, decode_dagMODik_0,
	decode_dspLDST_0, decode_LDST_0, decode_LDSTiiFP_0, decode_LDSTii_0,
	decode_LoopSetup_0, decode_LDIMMhalf_0, decode_CALLa_0,
	decode_LDSTidxI_0, decode_linkage_0, decode_dsp32alu_0,
	decode_dsp32shift_0, decode_dsp32shiftimm_0, decode_pseudodbg_assert_0,
	_print_insn_bfin, print_insn_bfin): Likewise.
@
text
@d59 1
a59 1
  90:	02 c6 1c 8a 	R5 = SHIFT R4 BY R3.L;
@


1.2
log
@	* gas/bfin/shift2.s: Add new tests.
	* gas/bfin/shift.d: Match changed disassembler behaviour.
	* gas/bfin/parallel2.d: Likewise.
	* gas/bfin/shift2.d: Likewise; also match new tests.
@
text
@d8 4
a11 4
   0:	88 45       	P0=\(P0\+P1\)<<1;
   2:	ea 45       	P2=\(P2\+P5\)<<2;
   4:	4f 41       	R7=\(R7\+R1\)<<2;
   6:	03 41       	R3=\(R3\+R0\)<<1;
d14 2
a15 2
   8:	44 5f       	P5=P4\+\(P0<<2\);
   a:	0a 5c       	P0=P2\+\(P1<<1\);
d18 6
a23 6
   c:	83 c6 08 41 	A0=A0>>0x1f;
  10:	83 c6 f8 00 	A0=A0<<0x1f;
  14:	83 c6 00 50 	A1=A1>>0x0;
  18:	83 c6 00 10 	A1=A1<<0x0;
  1c:	82 c6 fd 4e 	R7=R5<<0x1f\(S\);
  20:	82 c6 52 07 	R3=R2>>>0x16;
d26 12
a37 12
  2c:	00 4f       	R0<<=0x0;
  2e:	f9 4d       	R1>>>=0x1f;
  30:	08 40       	R0>>>=R1;
  32:	8a 40       	R2<<=R1;
  34:	00 c6 14 16 	R3.L= ASHIFT R4.H BY R2.L;
  38:	00 c6 07 6e 	R7.H= ASHIFT R7.L BY R0.L\(S\);
  3c:	00 c6 07 6e 	R7.H= ASHIFT R7.L BY R0.L\(S\);
  40:	02 c6 15 0c 	R6= ASHIFT R5 BY R2.L;
  44:	02 c6 0c 40 	R0= ASHIFT R4 BY R1.L\(S\);
  48:	02 c6 1e 44 	R2= ASHIFT R6 BY R3.L\(S\);
  4c:	03 c6 08 00 	A0= ASHIFT A0 BY R1.L;
  50:	03 c6 00 10 	A1= ASHIFT A1 BY R0.L;
d40 6
a45 6
  54:	00 45       	P0=P0>>1;
  56:	d1 44       	P1=P2>>2;
  58:	c9 5a       	P3=P1<<1;
  5a:	6c 44       	P4=P5<<2;
  5c:	f8 4e       	R0>>=0x1f;
  5e:	ff 4f       	R7<<=0x1f;
d48 14
a61 14
  68:	82 c6 0d 8b 	R5=R5>>0x1f;
  6c:	82 c6 60 80 	R0=R0<<0xc;
  70:	83 c6 f8 41 	A0=A0>>0x1;
  74:	83 c6 00 00 	A0=A0<<0x0;
  78:	83 c6 f8 10 	A1=A1<<0x1f;
  7c:	83 c6 80 51 	A1=A1>>0x10;
  80:	7d 40       	R5>>=R7;
  82:	86 40       	R6<<=R0;
  84:	00 c6 02 b2 	R1.H= LSHIFT R2.H BY R0.L;
  88:	00 c6 08 90 	R0.L= LSHIFT R0.H BY R1.L;
  8c:	00 c6 16 8e 	R7.L= LSHIFT R6.L BY R2.L;
  90:	02 c6 1c 8a 	R5=SHIFT R4 BY R3.L;
  94:	03 c6 30 40 	A0= LSHIFT A0 BY R6.L;
  98:	03 c6 28 50 	A1= LSHIFT A1 BY R5.L;
d64 12
a75 12
  9c:	82 c6 07 cf 	R7= ROT R7 BY -32;
  a0:	82 c6 0f cd 	R6= ROT R7 BY -31;
  a4:	82 c6 ff ca 	R5= ROT R7 BY 0x1f;
  a8:	82 c6 f7 c8 	R4= ROT R7 BY 0x1e;
  ac:	83 c6 00 80 	A0= ROT A0 BY 0x0;
  b0:	83 c6 50 80 	A0= ROT A0 BY 0xa;
  b4:	83 c6 60 91 	A1= ROT A1 BY -20;
  b8:	83 c6 00 91 	A1= ROT A1 BY -32;
  bc:	02 c6 11 c0 	R0= ROT R1 BY R2.L;
  c0:	02 c6 1c c0 	R0= ROT R4 BY R3.L;
  c4:	03 c6 38 80 	A0= ROT A0 BY R7.L;
  c8:	03 c6 30 90 	A1= ROT A1 BY R6.L;
@


1.1
log
@	* gas/bfin: New testsuite for bfin.
	* gas/all/gas.exp (bfin-*-*): Expected failure for alternate
	macro syntax.
@
text
@d24 2
a25 2
  24:	80 c6 7a 52 	R1.L=R2.H<<0xf\(S\);
  28:	80 c6 f2 2b 	R5.H=R2.L>>>0x2;
d46 2
a47 2
  60:	80 c6 8a a3 	R1.H=R2.L>>0xf;
  64:	80 c6 00 8e 	R7.L=R0.L<<0x0;
@

