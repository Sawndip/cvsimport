head	1.2;
access;
symbols
	binutils-2_24-branch:1.2.0.20
	binutils-2_24-branchpoint:1.2
	binutils-2_21_1:1.2
	binutils-2_23_2:1.2
	binutils-2_23_1:1.2
	binutils-2_23:1.2
	binutils-2_23-branch:1.2.0.18
	binutils-2_23-branchpoint:1.2
	binutils-2_22_branch:1.2.0.16
	binutils-2_22:1.2
	binutils-2_22-branch:1.2.0.14
	binutils-2_22-branchpoint:1.2
	binutils-2_21:1.2
	binutils-2_21-branch:1.2.0.12
	binutils-2_21-branchpoint:1.2
	binutils-2_20_1:1.2
	binutils-2_20:1.2
	binutils-arc-20081103-branch:1.2.0.10
	binutils-arc-20081103-branchpoint:1.2
	binutils-2_20-branch:1.2.0.8
	binutils-2_20-branchpoint:1.2
	dje-cgen-play1-branch:1.2.0.6
	dje-cgen-play1-branchpoint:1.2
	arc-20081103-branch:1.2.0.4
	arc-20081103-branchpoint:1.2
	binutils-2_19_1:1.2
	binutils-2_19:1.2
	binutils-2_19-branch:1.2.0.2
	binutils-2_19-branchpoint:1.2
	binutils-2_18:1.1
	binutils-2_18-branch:1.1.0.6
	binutils-2_18-branchpoint:1.1
	binutils-csl-coldfire-4_1-32:1.1
	binutils-csl-sourcerygxx-4_1-32:1.1
	binutils-csl-innovasic-fido-3_4_4-33:1.1
	binutils-csl-coldfire-4_1-30:1.1
	binutils-csl-sourcerygxx-4_1-30:1.1
	binutils-csl-coldfire-4_1-28:1.1
	binutils-csl-sourcerygxx-4_1-29:1.1
	binutils-csl-sourcerygxx-4_1-28:1.1
	binutils-csl-arm-2006q3-27:1.1
	binutils-csl-sourcerygxx-4_1-27:1.1
	binutils-csl-arm-2006q3-26:1.1
	binutils-csl-sourcerygxx-4_1-26:1.1
	binutils-csl-sourcerygxx-4_1-25:1.1
	binutils-csl-sourcerygxx-4_1-24:1.1
	binutils-csl-sourcerygxx-4_1-23:1.1
	binutils-csl-sourcerygxx-4_1-21:1.1
	binutils-csl-arm-2006q3-21:1.1
	binutils-csl-sourcerygxx-4_1-22:1.1
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.1
	binutils-csl-sourcerygxx-4_1-20:1.1
	binutils-csl-arm-2006q3-19:1.1
	binutils-csl-sourcerygxx-4_1-19:1.1
	binutils-csl-sourcerygxx-4_1-18:1.1
	binutils-csl-renesas-4_1-9:1.1
	binutils-csl-renesas-4_1-8:1.1
	binutils-csl-renesas-4_1-7:1.1
	binutils-csl-renesas-4_1-6:1.1
	binutils-csl-sourcerygxx-4_1-17:1.1
	binutils-csl-sourcerygxx-4_1-14:1.1
	binutils-csl-sourcerygxx-4_1-15:1.1
	binutils-csl-sourcerygxx-4_1-13:1.1
	binutils-2_17:1.1
	binutils-csl-sourcerygxx-4_1-12:1.1
	binutils-csl-sourcerygxx-3_4_4-21:1.1
	binutils-csl-sourcerygxx-4_1-9:1.1
	binutils-csl-sourcerygxx-4_1-8:1.1
	binutils-csl-sourcerygxx-4_1-7:1.1
	binutils-csl-arm-2006q1-6:1.1
	binutils-csl-sourcerygxx-4_1-6:1.1
	binutils-csl-coldfire-4_1-11:1.1
	binutils-csl-sourcerygxx-3_4_4-19:1.1
	binutils-csl-coldfire-4_1-10:1.1
	binutils-csl-sourcerygxx-4_1-5:1.1
	binutils-csl-sourcerygxx-4_1-4:1.1
	binutils-csl-morpho-4_1-4:1.1
	binutils-csl-sourcerygxx-3_4_4-17:1.1
	binutils-2_17-branch:1.1.0.4
	binutils-2_17-branchpoint:1.1
	binutils-csl-2_17-branch:1.1.0.2
	binutils-csl-2_17-branchpoint:1.1
	binutils_latest_snapshot:1.2;
locks; strict;
comment	@# @;


1.2
date	2008.03.26.16.48.32;	author bernds;	state Exp;
branches;
next	1.1;

1.1
date	2005.09.30.15.10.16;	author clm;	state Exp;
branches;
next	;


desc
@@


1.2
log
@gas/testsuite/:
	From Robin Getz  <rgetz@@blackfin.uclinux.org>
	* gas/bfin/arithmetic.d: Update to reflect spaces/capitalization in
	recent changes in opcodes/bfin-dis.c.
	gas/bfin/arithmetic.s: Likewise.
	gas/bfin/bit.d: Likewise.
	gas/bfin/bit2.d: Likewise.
	gas/bfin/control_code.d: Likewise.
	gas/bfin/control_code2.d: Likewise.
	gas/bfin/event.d: Likewise.
	gas/bfin/event2.d: Likewise.
	gas/bfin/flow.d: Likewise.
	gas/bfin/flow2.d: Likewise.
	gas/bfin/load.d: Likewise.
	gas/bfin/logical.d: Likewise.
	gas/bfin/logical2.d: Likewise.
	gas/bfin/move.d: Likewise.
	gas/bfin/move2.d: Likewise.
	gas/bfin/parallel.d: Likewise.
	gas/bfin/parallel2.d: Likewise.
	gas/bfin/parallel3.d: Likewise.
	gas/bfin/parallel4.d: Likewise.
	gas/bfin/shift.d: Likewise.
	gas/bfin/shift2.d: Likewise.
	gas/bfin/stack.d: Likewise.
	gas/bfin/stack2.d: Likewise.
	gas/bfin/store.d: Likewise.
	gas/bfin/vector.d: Likewise.
	gas/bfin/vector2.d: Likewise.
	gas/bfin/video.d: Likewise.
	gas/bfin/video2.d: Likewise.

opcodes/:
	* bfin-dis.c: (c_uimm4s4d, c_imm5d, c_imm7d, c_imm16d, c_uimm16s4d,
	c_imm32, c_huimm32e): Define.
	(constant_formats): Add flags for printing decimal, leading spaces, and
	exact symbols.
	(comment, parallel): Add global flags in all disassembly.
	(fmtconst): Take advantage of new flags, and print default in hex.
	(fmtconst_val): Likewise.
	(decode_macfunc): Be consistant with spaces, tabs, comments,
	capitalization in disassembly, fix minor coding style issues.
	(reg_names, amod0, amod1, amod0amod2, aligndir, get_allreg): Likewise.
	(decode_ProgCtrl_0, decode_PushPopMultiple_0, decode_CCflag_0,
	decode_CC2dreg_0, decode_CC2stat_0, decode_BRCC_0, decode_UJUMP_0,
	decode_REGMV_0, decode_ALU2op_0, decode_PTR2op_0, decode_LOGI2op_0,
	decode_COMP3op_0, decode_COMPI2opD_0, decode_COMPI2opP_0,
	decode_LDSTpmod_0, decode_dagMODim_0, decode_dagMODik_0,
	decode_dspLDST_0, decode_LDST_0, decode_LDSTiiFP_0, decode_LDSTii_0,
	decode_LoopSetup_0, decode_LDIMMhalf_0, decode_CALLa_0,
	decode_LDSTidxI_0, decode_linkage_0, decode_dsp32alu_0,
	decode_dsp32shift_0, decode_dsp32shiftimm_0, decode_pseudodbg_assert_0,
	_print_insn_bfin, print_insn_bfin): Likewise.
@
text
@#objdump: -dr
#name: logical2
.*: +file format .*


Disassembly of section .text:

00000000 <.text>:
   0:	ff 55       	R7 = R7 & R7;
   2:	c7 55       	R7 = R7 & R0;
   4:	cf 55       	R7 = R7 & R1;
   6:	7f 54       	R1 = R7 & R7;
   8:	87 54       	R2 = R7 & R0;
   a:	cf 54       	R3 = R7 & R1;
   c:	ff 43       	R7 =~ R7;
   e:	c7 43       	R7 =~ R0;
  10:	f8 43       	R0 =~ R7;
  12:	d0 43       	R0 =~ R2;
  14:	ff 57       	R7 = R7 \| R7;
  16:	cf 57       	R7 = R7 \| R1;
  18:	c7 57       	R7 = R7 \| R0;
  1a:	7f 56       	R1 = R7 \| R7;
  1c:	8f 56       	R2 = R7 \| R1;
  1e:	c7 56       	R3 = R7 \| R0;
  20:	ff 59       	R7 = R7 \^ R7;
  22:	cf 59       	R7 = R7 \^ R1;
  24:	c7 59       	R7 = R7 \^ R0;
  26:	7f 58       	R1 = R7 \^ R7;
  28:	8f 58       	R2 = R7 \^ R1;
  2a:	c7 58       	R3 = R7 \^ R0;
  2c:	0b c6 00 00 	R0.L = CC = BXORSHIFT \(A0, R0\);
  30:	0b c6 08 00 	R0.L = CC = BXORSHIFT \(A0, R1\);
  34:	0b c6 00 06 	R3.L = CC = BXORSHIFT \(A0, R0\);
  38:	0b c6 08 06 	R3.L = CC = BXORSHIFT \(A0, R1\);
  3c:	0b c6 00 40 	R0.L = CC = BXOR \(A0, R0\);
  40:	0b c6 08 40 	R0.L = CC = BXOR \(A0, R1\);
  44:	0b c6 00 46 	R3.L = CC = BXOR \(A0, R0\);
  48:	0b c6 08 46 	R3.L = CC = BXOR \(A0, R1\);
  4c:	0c c6 00 40 	R0.L = CC = BXOR \(A0, A1, CC\);
  50:	0c c6 00 40 	R0.L = CC = BXOR \(A0, A1, CC\);
  54:	0c c6 00 46 	R3.L = CC = BXOR \(A0, A1, CC\);
  58:	0c c6 00 46 	R3.L = CC = BXOR \(A0, A1, CC\);
  5c:	0c c6 00 00 	A0 = BXORSHIFT \(A0, A1, CC\);
@


1.1
log
@	* gas/bfin: New testsuite for bfin.
	* gas/all/gas.exp (bfin-*-*): Expected failure for alternate
	macro syntax.
@
text
@d9 35
a43 35
   0:	ff 55       	R7=R7&R7;
   2:	c7 55       	R7=R7&R0;
   4:	cf 55       	R7=R7&R1;
   6:	7f 54       	R1=R7&R7;
   8:	87 54       	R2=R7&R0;
   a:	cf 54       	R3=R7&R1;
   c:	ff 43       	R7=~R7;
   e:	c7 43       	R7=~R0;
  10:	f8 43       	R0=~R7;
  12:	d0 43       	R0=~R2;
  14:	ff 57       	R7=R7\|R7;
  16:	cf 57       	R7=R7\|R1;
  18:	c7 57       	R7=R7\|R0;
  1a:	7f 56       	R1=R7\|R7;
  1c:	8f 56       	R2=R7\|R1;
  1e:	c7 56       	R3=R7\|R0;
  20:	ff 59       	R7=R7\^R7;
  22:	cf 59       	R7=R7\^R1;
  24:	c7 59       	R7=R7\^R0;
  26:	7f 58       	R1=R7\^R7;
  28:	8f 58       	R2=R7\^R1;
  2a:	c7 58       	R3=R7\^R0;
  2c:	0b c6 00 00 	R0.L=CC=BXORSHIFT\(A0,R0\);
  30:	0b c6 08 00 	R0.L=CC=BXORSHIFT\(A0,R1\);
  34:	0b c6 00 06 	R3.L=CC=BXORSHIFT\(A0,R0\);
  38:	0b c6 08 06 	R3.L=CC=BXORSHIFT\(A0,R1\);
  3c:	0b c6 00 40 	R0.L=CC=BXOR\(A0,R0\);
  40:	0b c6 08 40 	R0.L=CC=BXOR\(A0,R1\);
  44:	0b c6 00 46 	R3.L=CC=BXOR\(A0,R0\);
  48:	0b c6 08 46 	R3.L=CC=BXOR\(A0,R1\);
  4c:	0c c6 00 40 	R0.L=CC=BXOR\( A0,A1 ,CC \);
  50:	0c c6 00 40 	R0.L=CC=BXOR\( A0,A1 ,CC \);
  54:	0c c6 00 46 	R3.L=CC=BXOR\( A0,A1 ,CC \);
  58:	0c c6 00 46 	R3.L=CC=BXOR\( A0,A1 ,CC \);
  5c:	0c c6 00 00 	A0=BXORSHIFT\(A0,A1 ,CC\);
@

