head	1.4;
access;
symbols
	binutils-2_24-branch:1.4.0.20
	binutils-2_24-branchpoint:1.4
	binutils-2_21_1:1.4
	binutils-2_23_2:1.4
	binutils-2_23_1:1.4
	binutils-2_23:1.4
	binutils-2_23-branch:1.4.0.18
	binutils-2_23-branchpoint:1.4
	binutils-2_22_branch:1.4.0.16
	binutils-2_22:1.4
	binutils-2_22-branch:1.4.0.14
	binutils-2_22-branchpoint:1.4
	binutils-2_21:1.4
	binutils-2_21-branch:1.4.0.12
	binutils-2_21-branchpoint:1.4
	binutils-2_20_1:1.4
	binutils-2_20:1.4
	binutils-arc-20081103-branch:1.4.0.10
	binutils-arc-20081103-branchpoint:1.4
	binutils-2_20-branch:1.4.0.8
	binutils-2_20-branchpoint:1.4
	dje-cgen-play1-branch:1.4.0.6
	dje-cgen-play1-branchpoint:1.4
	arc-20081103-branch:1.4.0.4
	arc-20081103-branchpoint:1.4
	binutils-2_19_1:1.4
	binutils-2_19:1.4
	binutils-2_19-branch:1.4.0.2
	binutils-2_19-branchpoint:1.4
	binutils-2_18:1.2
	binutils-2_18-branch:1.2.0.6
	binutils-2_18-branchpoint:1.2
	binutils-csl-coldfire-4_1-32:1.2
	binutils-csl-sourcerygxx-4_1-32:1.2
	binutils-csl-innovasic-fido-3_4_4-33:1.2
	binutils-csl-coldfire-4_1-30:1.2
	binutils-csl-sourcerygxx-4_1-30:1.2
	binutils-csl-coldfire-4_1-28:1.2
	binutils-csl-sourcerygxx-4_1-29:1.2
	binutils-csl-sourcerygxx-4_1-28:1.2
	binutils-csl-arm-2006q3-27:1.2
	binutils-csl-sourcerygxx-4_1-27:1.2
	binutils-csl-arm-2006q3-26:1.2
	binutils-csl-sourcerygxx-4_1-26:1.2
	binutils-csl-sourcerygxx-4_1-25:1.2
	binutils-csl-sourcerygxx-4_1-24:1.2
	binutils-csl-sourcerygxx-4_1-23:1.2
	binutils-csl-sourcerygxx-4_1-21:1.2
	binutils-csl-arm-2006q3-21:1.2
	binutils-csl-sourcerygxx-4_1-22:1.2
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.2
	binutils-csl-sourcerygxx-4_1-20:1.2
	binutils-csl-arm-2006q3-19:1.2
	binutils-csl-sourcerygxx-4_1-19:1.2
	binutils-csl-sourcerygxx-4_1-18:1.2
	binutils-csl-renesas-4_1-9:1.2
	binutils-csl-renesas-4_1-8:1.2
	binutils-csl-renesas-4_1-7:1.2
	binutils-csl-renesas-4_1-6:1.2
	binutils-csl-sourcerygxx-4_1-17:1.2
	binutils-csl-sourcerygxx-4_1-14:1.2
	binutils-csl-sourcerygxx-4_1-15:1.2
	binutils-csl-sourcerygxx-4_1-13:1.2
	binutils-2_17:1.2
	binutils-csl-sourcerygxx-4_1-12:1.2
	binutils-csl-sourcerygxx-3_4_4-21:1.2
	binutils-csl-sourcerygxx-4_1-9:1.2
	binutils-csl-sourcerygxx-4_1-8:1.2
	binutils-csl-sourcerygxx-4_1-7:1.2
	binutils-csl-arm-2006q1-6:1.2
	binutils-csl-sourcerygxx-4_1-6:1.2
	binutils-csl-coldfire-4_1-11:1.2
	binutils-csl-sourcerygxx-3_4_4-19:1.2
	binutils-csl-coldfire-4_1-10:1.2
	binutils-csl-sourcerygxx-4_1-5:1.2
	binutils-csl-sourcerygxx-4_1-4:1.2
	binutils-csl-morpho-4_1-4:1.2
	binutils-csl-sourcerygxx-3_4_4-17:1.2
	binutils-2_17-branch:1.2.0.4
	binutils-2_17-branchpoint:1.2
	binutils-csl-2_17-branch:1.2.0.2
	binutils-csl-2_17-branchpoint:1.2
	binutils_latest_snapshot:1.4;
locks; strict;
comment	@# @;


1.4
date	2008.03.26.16.48.32;	author bernds;	state Exp;
branches;
next	1.3;

1.3
date	2008.03.26.16.33.33;	author bernds;	state Exp;
branches;
next	1.2;

1.2
date	2005.10.24.18.42.37;	author bernds;	state Exp;
branches;
next	1.1;

1.1
date	2005.09.30.15.10.16;	author clm;	state Exp;
branches;
next	;


desc
@@


1.4
log
@gas/testsuite/:
	From Robin Getz  <rgetz@@blackfin.uclinux.org>
	* gas/bfin/arithmetic.d: Update to reflect spaces/capitalization in
	recent changes in opcodes/bfin-dis.c.
	gas/bfin/arithmetic.s: Likewise.
	gas/bfin/bit.d: Likewise.
	gas/bfin/bit2.d: Likewise.
	gas/bfin/control_code.d: Likewise.
	gas/bfin/control_code2.d: Likewise.
	gas/bfin/event.d: Likewise.
	gas/bfin/event2.d: Likewise.
	gas/bfin/flow.d: Likewise.
	gas/bfin/flow2.d: Likewise.
	gas/bfin/load.d: Likewise.
	gas/bfin/logical.d: Likewise.
	gas/bfin/logical2.d: Likewise.
	gas/bfin/move.d: Likewise.
	gas/bfin/move2.d: Likewise.
	gas/bfin/parallel.d: Likewise.
	gas/bfin/parallel2.d: Likewise.
	gas/bfin/parallel3.d: Likewise.
	gas/bfin/parallel4.d: Likewise.
	gas/bfin/shift.d: Likewise.
	gas/bfin/shift2.d: Likewise.
	gas/bfin/stack.d: Likewise.
	gas/bfin/stack2.d: Likewise.
	gas/bfin/store.d: Likewise.
	gas/bfin/vector.d: Likewise.
	gas/bfin/vector2.d: Likewise.
	gas/bfin/video.d: Likewise.
	gas/bfin/video2.d: Likewise.

opcodes/:
	* bfin-dis.c: (c_uimm4s4d, c_imm5d, c_imm7d, c_imm16d, c_uimm16s4d,
	c_imm32, c_huimm32e): Define.
	(constant_formats): Add flags for printing decimal, leading spaces, and
	exact symbols.
	(comment, parallel): Add global flags in all disassembly.
	(fmtconst): Take advantage of new flags, and print default in hex.
	(fmtconst_val): Likewise.
	(decode_macfunc): Be consistant with spaces, tabs, comments,
	capitalization in disassembly, fix minor coding style issues.
	(reg_names, amod0, amod1, amod0amod2, aligndir, get_allreg): Likewise.
	(decode_ProgCtrl_0, decode_PushPopMultiple_0, decode_CCflag_0,
	decode_CC2dreg_0, decode_CC2stat_0, decode_BRCC_0, decode_UJUMP_0,
	decode_REGMV_0, decode_ALU2op_0, decode_PTR2op_0, decode_LOGI2op_0,
	decode_COMP3op_0, decode_COMPI2opD_0, decode_COMPI2opP_0,
	decode_LDSTpmod_0, decode_dagMODim_0, decode_dagMODik_0,
	decode_dspLDST_0, decode_LDST_0, decode_LDSTiiFP_0, decode_LDSTii_0,
	decode_LoopSetup_0, decode_LDIMMhalf_0, decode_CALLa_0,
	decode_LDSTidxI_0, decode_linkage_0, decode_dsp32alu_0,
	decode_dsp32shift_0, decode_dsp32shiftimm_0, decode_pseudodbg_assert_0,
	_print_insn_bfin, print_insn_bfin): Likewise.
@
text
@#objdump: -d
#name: flow2
.*: +file format .*

Disassembly of section .text:

00000000 <MY_LABEL1-0x2a>:
   0:	50 00       	JUMP \(P0\);
   2:	51 00       	JUMP \(P1\);
   4:	52 00       	JUMP \(P2\);
   6:	53 00       	JUMP \(P3\);
   8:	54 00       	JUMP \(P4\);
   a:	55 00       	JUMP \(P5\);
   c:	56 00       	JUMP \(SP\);
   e:	57 00       	JUMP \(FP\);
  10:	80 00       	JUMP \(PC \+ P0\);
  12:	81 00       	JUMP \(PC \+ P1\);
  14:	82 00       	JUMP \(PC \+ P2\);
  16:	83 00       	JUMP \(PC \+ P3\);
  18:	84 00       	JUMP \(PC \+ P4\);
  1a:	85 00       	JUMP \(PC \+ P5\);
  1c:	86 00       	JUMP \(PC \+ SP\);
  1e:	87 00       	JUMP \(PC \+ FP\);
  20:	00 20       	JUMP.S 0x20 <MY_LABEL1-0xa>;
  22:	69 22       	JUMP.S 0x4f4 .*
  24:	97 2d       	JUMP.S 0xfffffb52 .*
  26:	01 20       	JUMP.S 0x28 <MY_LABEL1-0x2>;
  28:	ff 2f       	JUMP.S 0x26 <MY_LABEL1-0x4>;

0000002a <MY_LABEL1>:
  2a:	00 20       	JUMP.S 0x2a <MY_LABEL1>;
  2c:	69 22       	JUMP.S 0x4fe .*
  2e:	97 2d       	JUMP.S 0xfffffb5c .*
  30:	01 20       	JUMP.S 0x32 <MY_LABEL1\+0x8>;
  32:	ff 2f       	JUMP.S 0x30 <MY_LABEL1\+0x6>;
  34:	c0 e2 00 00 	JUMP.L 0xff800034 .*
  38:	3f e2 ff ff 	JUMP.L 0x800036 .*
  3c:	00 e2 00 00 	JUMP.L 0x3c <MY_LABEL1\+0x12>;
  40:	00 e2 69 02 	JUMP.L 0x512 .*
  44:	ff e2 97 fd 	JUMP.L 0xfffffb72 .*
  48:	00 e2 01 00 	JUMP.L 0x4a <MY_LABEL1\+0x20>;
  4c:	ff e2 ff ff 	JUMP.L 0x4a <MY_LABEL1\+0x20>;
  50:	ed 2f       	JUMP.S 0x2a <MY_LABEL1>;
  52:	d7 2f       	JUMP.S 0x0 .*
  54:	d6 2f       	JUMP.S 0x0 .*
  56:	d5 2f       	JUMP.S 0x0 .*
  58:	04 1b       	IF CC JUMP 0xfffffe60 .*
  5a:	5a 18       	IF CC JUMP 0x10e .*
  5c:	00 18       	IF CC JUMP 0x5c <MY_LABEL1\+0x32>;
  5e:	04 1f       	IF CC JUMP 0xfffffe66 .*\(BP\);
  60:	5a 1c       	IF CC JUMP 0x114 .*\(BP\);
  62:	91 13       	IF !CC JUMP 0xffffff84 .*;
  64:	90 10       	IF !CC JUMP 0x184 .*;
  66:	91 17       	IF !CC JUMP 0xffffff88 .*\(BP\);
  68:	90 14       	IF !CC JUMP 0x188 .*\(BP\);
  6a:	e0 1b       	IF CC JUMP 0x2a <MY_LABEL1>;
  6c:	ca 1b       	IF CC JUMP 0x0 <MY_LABEL1-0x2a>;
  6e:	de 1f       	IF CC JUMP 0x2a <MY_LABEL1> \(BP\);
  70:	c8 1f       	IF CC JUMP 0x0 <MY_LABEL1-0x2a> \(BP\);
  72:	dc 13       	IF !CC JUMP 0x2a <MY_LABEL1>;
  74:	c6 13       	IF !CC JUMP 0x0 <MY_LABEL1-0x2a>;
  76:	da 17       	IF !CC JUMP 0x2a <MY_LABEL1> \(BP\);
  78:	c4 17       	IF !CC JUMP 0x0 <MY_LABEL1-0x2a> \(BP\);
  7a:	60 00       	CALL \(P0\);
  7c:	61 00       	CALL \(P1\);
  7e:	62 00       	CALL \(P2\);
  80:	63 00       	CALL \(P3\);
  82:	64 00       	CALL \(P4\);
  84:	65 00       	CALL \(P5\);
  86:	70 00       	CALL \(PC \+ P0\);
  88:	71 00       	CALL \(PC \+ P1\);
  8a:	72 00       	CALL \(PC \+ P2\);
  8c:	73 00       	CALL \(PC \+ P3\);
  8e:	74 00       	CALL \(PC \+ P4\);
  90:	75 00       	CALL \(PC \+ P5\);
  92:	09 e3 2b 1a 	CALL 0x1234e8 .*;
  96:	ff e3 97 fd 	CALL 0xfffffbc4 .*;
  9a:	ff e3 c8 ff 	CALL 0x2a <MY_LABEL1>;
  9e:	ff e3 b1 ff 	CALL 0x0 <MY_LABEL1-0x2a>;
  a2:	10 00       	RTS;
  a4:	11 00       	RTI;
  a6:	12 00       	RTX;
  a8:	13 00       	RTN;
  aa:	14 00       	RTE;
  ac:	82 e0 02 00 	LSETUP\(0xb0 <MY_LABEL1\+0x86>, 0xb0 <MY_LABEL1\+0x86>\) LC0;
  b0:	84 e0 06 00 	LSETUP\(0xb8 <beg_poll_bit>, 0xbc <end_poll_bit>\) LC0;
  b4:	00 00       	NOP;
	...

000000b8 <beg_poll_bit>:
  b8:	80 e1 01 00 	R0 = 0x1 \(Z\);.*

000000bc <end_poll_bit>:
  bc:	81 e1 02 00 	R1 = 0x2 \(Z\);.*
  c0:	92 e0 03 00 	LSETUP\(0xc4 <end_poll_bit\+0x8>, 0xc6 <end_poll_bit\+0xa>\) LC1;
  c4:	93 e0 05 00 	LSETUP\(0xca <FIR_filter>, 0xce <bottom_of_FIR_filter>\) LC1;
	...

000000ca <FIR_filter>:
  ca:	80 e1 01 00 	R0 = 0x1 \(Z\);.*

000000ce <bottom_of_FIR_filter>:
  ce:	81 e1 02 00 	R1 = 0x2 \(Z\);.*
  d2:	a2 e0 04 10 	LSETUP\(0xd6 <bottom_of_FIR_filter\+0x8>, 0xda <bottom_of_FIR_filter\+0xc>\) LC0 = P1;
  d6:	e2 e0 04 10 	LSETUP\(0xda <bottom_of_FIR_filter\+0xc>, 0xde <bottom_of_FIR_filter\+0x10>\) LC0 = P1 >> 0x1;
  da:	82 e0 03 00 	LSETUP\(0xde <bottom_of_FIR_filter\+0x10>, 0xe0 <bottom_of_FIR_filter\+0x12>\) LC0;
  de:	08 60       	R0 = 0x1 \(X\);.*
  e0:	11 60       	R1 = 0x2 \(X\);.*
  e2:	90 e0 00 00 	LSETUP\(0xe2 <bottom_of_FIR_filter\+0x14>, 0xe2 <bottom_of_FIR_filter\+0x14>\) LC1;
	...
@


1.3
log
@gas/:
	* config/tc-bfin.c (bfin_start_line_hook): Localize the labels
	generated for LOOP_BEGIN and LOOP_END instructions.
	(bfin_gen_loop): Likewise.

gas/testsuite/:
	* gas/bfin/flow.d: Adjust since the generated labels for LOOP_BEGIN
	and LOOP_END instruction are local now.
	* gas/bfin/flow2.d: Likewise.
@
text
@d8 21
a28 21
   0:	50 00       	JUMP  \(P0\);
   2:	51 00       	JUMP  \(P1\);
   4:	52 00       	JUMP  \(P2\);
   6:	53 00       	JUMP  \(P3\);
   8:	54 00       	JUMP  \(P4\);
   a:	55 00       	JUMP  \(P5\);
   c:	56 00       	JUMP  \(SP\);
   e:	57 00       	JUMP  \(FP\);
  10:	80 00       	JUMP  \(PC\+P0\);
  12:	81 00       	JUMP  \(PC\+P1\);
  14:	82 00       	JUMP  \(PC\+P2\);
  16:	83 00       	JUMP  \(PC\+P3\);
  18:	84 00       	JUMP  \(PC\+P4\);
  1a:	85 00       	JUMP  \(PC\+P5\);
  1c:	86 00       	JUMP  \(PC\+SP\);
  1e:	87 00       	JUMP  \(PC\+FP\);
  20:	00 20       	JUMP.S  20 <MY_LABEL1-0xa>;
  22:	69 22       	JUMP.S  4f4.*
  24:	97 2d       	JUMP.S  fffffb52.*
  26:	01 20       	JUMP.S  28 <MY_LABEL1-0x2>;
  28:	ff 2f       	JUMP.S  26 <MY_LABEL1-0x4>;
d31 49
a79 49
  2a:	00 20       	JUMP.S  2a <MY_LABEL1>;
  2c:	69 22       	JUMP.S  4fe.*
  2e:	97 2d       	JUMP.S  fffffb5c.*
  30:	01 20       	JUMP.S  32 <MY_LABEL1\+0x8>;
  32:	ff 2f       	JUMP.S  30 <MY_LABEL1\+0x6>;
  34:	c0 e2 00 00 	JUMP.L  ff800034.*
  38:	3f e2 ff ff 	JUMP.L  800036.*
  3c:	00 e2 00 00 	JUMP.L  3c <MY_LABEL1\+0x12>;
  40:	00 e2 69 02 	JUMP.L  512.*
  44:	ff e2 97 fd 	JUMP.L  fffffb72.*
  48:	00 e2 01 00 	JUMP.L  4a <MY_LABEL1\+0x20>;
  4c:	ff e2 ff ff 	JUMP.L  4a <MY_LABEL1\+0x20>;
  50:	ed 2f       	JUMP.S  2a <MY_LABEL1>;
  52:	d7 2f       	JUMP.S  0 .*
  54:	d6 2f       	JUMP.S  0 .*
  56:	d5 2f       	JUMP.S  0 .*
  58:	04 1b       	IF CC JUMP fffffe60.*
  5a:	5a 18       	IF CC JUMP 10e.*
  5c:	00 18       	IF CC JUMP 5c <MY_LABEL1\+0x32>;
  5e:	04 1f       	IF CC JUMP fffffe66.*\(BP\);
  60:	5a 1c       	IF CC JUMP 114.*\(BP\);
  62:	91 13       	IF ! CC JUMP ffffff84.*;
  64:	90 10       	IF ! CC JUMP 184.*;
  66:	91 17       	IF ! CC JUMP ffffff88.*\(BP\);
  68:	90 14       	IF ! CC JUMP 188.*\(BP\);
  6a:	e0 1b       	IF CC JUMP 2a <MY_LABEL1>;
  6c:	ca 1b       	IF CC JUMP 0 <MY_LABEL1-0x2a>;
  6e:	de 1f       	IF CC JUMP 2a <MY_LABEL1>\(BP\);
  70:	c8 1f       	IF CC JUMP 0 <MY_LABEL1-0x2a>\(BP\);
  72:	dc 13       	IF ! CC JUMP 2a <MY_LABEL1>;
  74:	c6 13       	IF ! CC JUMP 0 <MY_LABEL1-0x2a>;
  76:	da 17       	IF ! CC JUMP 2a <MY_LABEL1>\(BP\);
  78:	c4 17       	IF ! CC JUMP 0 <MY_LABEL1-0x2a>\(BP\);
  7a:	60 00       	CALL  \(P0\);
  7c:	61 00       	CALL  \(P1\);
  7e:	62 00       	CALL  \(P2\);
  80:	63 00       	CALL  \(P3\);
  82:	64 00       	CALL  \(P4\);
  84:	65 00       	CALL  \(P5\);
  86:	70 00       	CALL  \(PC\+P0\);
  88:	71 00       	CALL  \(PC\+P1\);
  8a:	72 00       	CALL  \(PC\+P2\);
  8c:	73 00       	CALL  \(PC\+P3\);
  8e:	74 00       	CALL  \(PC\+P4\);
  90:	75 00       	CALL  \(PC\+P5\);
  92:	09 e3 2b 1a 	CALL  1234e8.*;
  96:	ff e3 97 fd 	CALL  fffffbc4.*;
  9a:	ff e3 c8 ff 	CALL  2a <MY_LABEL1>;
  9e:	ff e3 b1 ff 	CALL  0 <MY_LABEL1-0x2a>;
d85 2
a86 2
  ac:	82 e0 02 00 	LSETUP\(b0 <MY_LABEL1\+0x86>,b0 <MY_LABEL1\+0x86>\)LC0;
  b0:	84 e0 06 00 	LSETUP\(b8 <beg_poll_bit>,bc <end_poll_bit>\)LC0;
d91 1
a91 1
  b8:	80 e1 01 00 	R0=1 <MY_LABEL1-0x29>\(Z\);
d94 3
a96 3
  bc:	81 e1 02 00 	R1=2 <MY_LABEL1-0x28>\(Z\);
  c0:	92 e0 03 00 	LSETUP\(c4 <end_poll_bit\+0x8>,c6 <end_poll_bit\+0xa>\)LC1;
  c4:	93 e0 05 00 	LSETUP\(ca <FIR_filter>,ce <bottom_of_FIR_filter>\)LC1;
d100 1
a100 1
  ca:	80 e1 01 00 	R0=1 <MY_LABEL1-0x29>\(Z\);
d103 7
a109 7
  ce:	81 e1 02 00 	R1=2 <MY_LABEL1-0x28>\(Z\);
  d2:	a2 e0 04 10 	LSETUP\(d6 <bottom_of_FIR_filter\+0x8>,da <bottom_of_FIR_filter\+0xc>\)LC0=P1;
  d6:	e2 e0 04 10 	LSETUP\(da <bottom_of_FIR_filter\+0xc>,de <bottom_of_FIR_filter\+0x10>\)LC0=P1>>1;
  da:	82 e0 03 00 	LSETUP\(de <bottom_of_FIR_filter\+0x10>,e0 <bottom_of_FIR_filter\+0x12>\)LC0;
  de:	08 60       	R0=0x1\(x\);
  e0:	11 60       	R1=0x2\(x\);
  e2:	90 e0 00 00 	LSETUP\(e2 <bottom_of_FIR_filter\+0x14>,e2 <bottom_of_FIR_filter\+0x14>\)LC1;
@


1.2
log
@	* gas/bfin/flow2.d: Match changed assembler behaviour.
	* gas/bfin/reloc.d: Likewise.
@
text
@d105 2
a106 4
  d6:	e2 e0 04 10 	LSETUP\(da <bottom_of_FIR_filter\+0xc>,de <DoItSome__BEGIN>\)LC0=P1>>1;
  da:	82 e0 03 00 	LSETUP\(de <DoItSome__BEGIN>,e0 <DoItSome__END>\)LC0;

000000de <DoItSome__BEGIN>:
a107 2

000000e0 <DoItSome__END>:
d109 1
a109 1
  e2:	90 e0 00 00 	LSETUP\(e2 <DoItSome__END\+0x2>,e2 <DoItSome__END\+0x2>\)LC1;
@


1.1
log
@	* gas/bfin: New testsuite for bfin.
	* gas/all/gas.exp (bfin-*-*): Expected failure for alternate
	macro syntax.
@
text
@d44 3
a46 3
  52:	d7 2f       	JUMP.S  0 <MY_LABEL1-0x2a>;
  54:	ea 2f       	JUMP.S  28 <MY_LABEL1-0x2>;
  56:	d4 2f       	JUMP.S  fffffffe.*
@

