head	1.7;
access;
symbols
	binutils-2_24-branch:1.7.0.12
	binutils-2_24-branchpoint:1.7
	binutils-2_21_1:1.7
	binutils-2_23_2:1.7
	binutils-2_23_1:1.7
	binutils-2_23:1.7
	binutils-2_23-branch:1.7.0.10
	binutils-2_23-branchpoint:1.7
	binutils-2_22_branch:1.7.0.8
	binutils-2_22:1.7
	binutils-2_22-branch:1.7.0.6
	binutils-2_22-branchpoint:1.7
	binutils-2_21:1.7
	binutils-2_21-branch:1.7.0.4
	binutils-2_21-branchpoint:1.7
	binutils-2_20_1:1.7
	binutils-2_20:1.7
	binutils-arc-20081103-branch:1.4.0.12
	binutils-arc-20081103-branchpoint:1.4
	binutils-2_20-branch:1.7.0.2
	binutils-2_20-branchpoint:1.7
	dje-cgen-play1-branch:1.5.0.2
	dje-cgen-play1-branchpoint:1.5
	arc-20081103-branch:1.4.0.10
	arc-20081103-branchpoint:1.4
	binutils-2_19_1:1.4
	binutils-2_19:1.4
	binutils-2_19-branch:1.4.0.8
	binutils-2_19-branchpoint:1.4
	binutils-2_18:1.4
	binutils-2_18-branch:1.4.0.6
	binutils-2_18-branchpoint:1.4
	binutils-csl-coldfire-4_1-32:1.4
	binutils-csl-sourcerygxx-4_1-32:1.4
	binutils-csl-innovasic-fido-3_4_4-33:1.4
	binutils-csl-sourcerygxx-3_4_4-32:1.2
	binutils-csl-coldfire-4_1-30:1.4
	binutils-csl-sourcerygxx-4_1-30:1.4
	binutils-csl-coldfire-4_1-28:1.4
	binutils-csl-sourcerygxx-4_1-29:1.4
	binutils-csl-sourcerygxx-4_1-28:1.4
	binutils-csl-arm-2006q3-27:1.4
	binutils-csl-sourcerygxx-4_1-27:1.4
	binutils-csl-arm-2006q3-26:1.4
	binutils-csl-sourcerygxx-4_1-26:1.4
	binutils-csl-sourcerygxx-4_1-25:1.4
	binutils-csl-sourcerygxx-4_1-24:1.4
	binutils-csl-sourcerygxx-4_1-23:1.4
	binutils-csl-sourcerygxx-4_1-21:1.4
	binutils-csl-arm-2006q3-21:1.4
	binutils-csl-sourcerygxx-4_1-22:1.4
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.4
	binutils-csl-sourcerygxx-4_1-20:1.4
	binutils-csl-arm-2006q3-19:1.4
	binutils-csl-sourcerygxx-4_1-19:1.4
	binutils-csl-sourcerygxx-4_1-18:1.4
	binutils-csl-renesas-4_1-9:1.4
	binutils-csl-sourcerygxx-3_4_4-25:1.2
	binutils-csl-renesas-4_1-8:1.4
	binutils-csl-renesas-4_1-7:1.4
	binutils-csl-renesas-4_1-6:1.4
	binutils-csl-sourcerygxx-4_1-17:1.4
	binutils-csl-sourcerygxx-4_1-14:1.4
	binutils-csl-sourcerygxx-4_1-15:1.4
	binutils-csl-sourcerygxx-4_1-13:1.4
	binutils-2_17:1.4
	binutils-csl-sourcerygxx-4_1-12:1.4
	binutils-csl-sourcerygxx-3_4_4-21:1.4
	binutils-csl-wrs-linux-3_4_4-24:1.2.4.1
	binutils-csl-wrs-linux-3_4_4-23:1.2.4.1
	binutils-csl-sourcerygxx-4_1-9:1.4
	binutils-csl-sourcerygxx-4_1-8:1.4
	binutils-csl-sourcerygxx-4_1-7:1.4
	binutils-csl-arm-2006q1-6:1.4
	binutils-csl-sourcerygxx-4_1-6:1.4
	binutils-csl-wrs-linux-3_4_4-22:1.2.4.1
	binutils-csl-coldfire-4_1-11:1.4
	binutils-csl-sourcerygxx-3_4_4-19:1.4
	binutils-csl-coldfire-4_1-10:1.4
	binutils-csl-sourcerygxx-4_1-5:1.4
	binutils-csl-sourcerygxx-4_1-4:1.4
	binutils-csl-wrs-linux-3_4_4-21:1.2.4.1
	binutils-csl-morpho-4_1-4:1.4
	binutils-csl-sourcerygxx-3_4_4-17:1.4
	binutils-csl-wrs-linux-3_4_4-20:1.2.4.1
	binutils-2_17-branch:1.4.0.4
	binutils-2_17-branchpoint:1.4
	binutils-csl-2_17-branch:1.4.0.2
	binutils-csl-2_17-branchpoint:1.4
	binutils-csl-gxxpro-3_4-branch:1.2.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.2
	binutils-2_16_1:1.2
	binutils-csl-arm-2005q1b:1.2.4.1
	binutils-2_16:1.2
	binutils-csl-arm-2005q1a:1.2
	binutils-csl-arm-2005q1-branch:1.2.0.4
	binutils-csl-arm-2005q1-branchpoint:1.2
	binutils-2_16-branch:1.2.0.2
	binutils-2_16-branchpoint:1.2
	csl-arm-2004-q3d:1.1
	binutils_latest_snapshot:1.7
	csl-arm-2004-q3:1.1;
locks; strict;
comment	@# @;


1.7
date	2009.06.30.11.57.05;	author nickc;	state Exp;
branches;
next	1.6;

1.6
date	2009.06.29.08.08.15;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	2009.04.01.14.02.57;	author nathan;	state Exp;
branches;
next	1.4;

1.4
date	2005.09.08.12.49.25;	author pbrook;	state Exp;
branches;
next	1.3;

1.3
date	2005.05.18.05.40.09;	author zack;	state Exp;
branches;
next	1.2;

1.2
date	2005.03.03.14.41.35;	author nickc;	state Exp;
branches
	1.2.4.1;
next	1.1;

1.1
date	2004.09.30.16.21.46;	author nickc;	state Exp;
branches;
next	;

1.2.4.1
date	2005.04.26.05.31.42;	author zack;	state Exp;
branches;
next	;


desc
@@


1.7
log
@        PR 10288
        * arm-dis.c (coprocessor): Print the LDC and STC versions of the
        LFM and SFM instructions as comments,.
        Improve consistency of formatting for instructions displayed as
        comments and decimal values displayed with their hexadecimal
        equivalents.
        Formatting tidy ups.

        Updated expected disassembler regexps.
@
text
@#name: ARM V6 instructions
#as: -march=armv6zk
#objdump: -dr --prefix-addresses --show-raw-insn

.*: +file format .*arm.*

Disassembly of section .text:
0+000 <[^>]*> f57ff01f ?	clrex
0+004 <[^>]*> e1dc4f9f ?	ldrexb	r4, \[ip\]
0+008 <[^>]*> 11d4cf9f ?	ldrexbne	ip, \[r4\]
0+00c <[^>]*> e1bc4f9f ?	ldrexd	r4, \[ip\]
0+010 <[^>]*> 11b4cf9f ?	ldrexdne	ip, \[r4\]
0+014 <[^>]*> e1fc4f9f ?	ldrexh	r4, \[ip\]
0+018 <[^>]*> 11f4cf9f ?	ldrexhne	ip, \[r4\]
0+01c <[^>]*> e320f080 ?	nop	\{128\}.*
0+020 <[^>]*> 1320f07f ?	nopne	\{127\}.*
0+024 <[^>]*> e320f004 ?	sev
0+028 <[^>]*> e1c74f9c ?	strexb	r4, ip, \[r7\]
0+02c <[^>]*> 11c8cf94 ?	strexbne	ip, r4, \[r8\]
0+030 <[^>]*> e1a74f9c ?	strexd	r4, ip, \[r7\]
0+034 <[^>]*> 11a8cf94 ?	strexdne	ip, r4, \[r8\]
0+038 <[^>]*> e1e74f9c ?	strexh	r4, ip, \[r7\]
0+03c <[^>]*> 11e8cf94 ?	strexhne	ip, r4, \[r8\]
0+040 <[^>]*> e320f002 ?	wfe
0+044 <[^>]*> e320f003 ?	wfi
0+048 <[^>]*> e320f001 ?	yield
0+04c <[^>]*> e16ec371 ?	smc	60465.*
0+050 <[^>]*> 11613c7e ?	smcne	5070.*
#...
@


1.6
log
@        PR 10288
        * arm-dis.c (enum opcode_sentinels): New:  Used to mark the
        boundary between variaant and generic coprocessor instuctions.
        (coprocessor): Use it.
        Fix architecture version of MCRR and MRRC instructions.
        (arm_opcdes): Fix patterns for STRB and STRH instructions.
        (print_insn_coprocessor): Check architecture and extension masks.
        Print a hexadecimal version of any decimal constant that is
        outside of the range of -16 to +32.
        (print_arm_address): Add a return value of the offset used in the
        adress, if it is worth printing a hexadecimal version of it.
        (print_insn_neon): Print a hexadecimal version of any decimal
        constant that is outside of the range of -16 to +32.
        (print_insn_arm): Likewise.
        (print_insn_thumb16): Likewise.
        (print_insn_thumb32): Likewise.

        PR 10297
        * arm-dis.c (UNDEFINED_INSTRUCTION): New macro for a description
        of an undefined instruction.
        (arm_opcodes): Use it.
        (thumb_opcod): Use it.
        (thumb32_opc): Use it.

        Update expected disassembly regrexps in GAS and LD testsuites.
@
text
@d27 2
a28 2
0+04c <[^>]*> e16ec371 ?	smc	60465
0+050 <[^>]*> 11613c7e ?	smcne	5070
@


1.5
log
@	* config/tc-arm.c (do_nop): Generate v6k nops whenever possible.
	(arm_handle_align): Generate v6k ARM, thumb2 wide & narrow nops
	whenever possible.

	testsuite/
	* gas/arm/align.s, gas/arm/align.d: New.
	* gas/arm/thumb32.d, gas/arm/arch6zk.d, gas/arm/arch6zk.s,
	arm/thumb2_relax.d: Adjust for align changes.
@
text
@d15 2
a16 2
0+01c <[^>]*> e320f080 ?	nop	\{128\}
0+020 <[^>]*> 1320f07f ?	nopne	\{127\}
@


1.4
log
@2005-09-08  Paul Brook  <paul@@codesourcery.com>

bfd/
	* reloc.c: Rename BFD_RELOC_ARM_SMI to BFD_RELOC_ARM_SMC.
	* bfd-in2.h: Regenerate.
	* libbfd.h: Regenerate.
opcodes/
	* arm-dis.c (arm_opcodes, thumb32_opcodes): Rename smi to smc.
gas/
	* config/tc-arm.c (do_smi, do_t_smi): Rename ...
	(do_smc, do_t_smc): ... to this.
	(insns): Remane smi to smc.
	(md_apply_fix, tc_gen_reloc): Rename BFD_RELOC_ARM_SMI to
	BFD_RELOC_ARM_SMC.
gas/testsuite/
	* gas/arm/arch6zk.d: Rename smi to smc.
	* gas/arm/arch6zk.s: Ditto.
	* gas/arm/thumb32.d: Ditto.
	* gas/arm/thumb32.s: Ditto.
@
text
@d29 1
a29 4
0+054 <[^>]*> e1a00000 ?	nop[ 	]+\(mov r0,r0\)
0+058 <[^>]*> e1a00000 ?	nop[ 	]+\(mov r0,r0\)
0+05c <[^>]*> e1a00000 ?	nop[ 	]+\(mov r0,r0\)

@


1.3
log
@include/elf:
	* arm.h: Import complete list of official relocation names
	and numbers from AAELF.  Define FAKE_RELOCs for old names.
	Remove a few old names no longer used anywhere.

bfd:
	* elf32-arm.c: Wherever possible, use official reloc names
	from AAELF.
	(elf32_arm_howto_table, elf32_arm_tls_gd32_howto)
	(elf32_arm_tls_ldo32_howto, elf32_arm_tls_ldm32_howto)
	(elf32_arm_tls_le32_howto, elf32_arm_tls_ie32_howto)
	(elf32_arm_vtinherit_howto, elf32_arm_vtentry_howto)
	(elf32_arm_pc11_howto, elf32_arm_thm_pc9_howto, elf32_arm_got_prel)
	(elf32_arm_r_howto): Replace with elf32_arm_howto_table_1,
	elf32_arm_howto_table_2, and elf32_arm_howto_table_3.
	Add many new relocations from AAELF.
	(elf32_arm_howto_from_type): Update to match.
	(elf32_arm_reloc_map): Add entries for R_ARM_THM_JUMP24,
	R_ARM_THM_JUMP11, R_ARM_THM_JUMP19, R_ARM_THM_JUMP8,
	R_ARM_THM_JUMP6, R_ARM_GNU_VTINHERIT, and R_ARM_GNU_VTENTRY.
	(elf32_arm_reloc_type_lookup): Use elf32_arm_howto_from_type.
	(elf32_arm_final_link_relocate): Add support for
	R_ARM_THM_JUMP24, R_ARM_THM_JUMP19, R_ARM_THM_JUMP6.  Remove
	case entries redundant with default.

	* reloc.c: Reorganize ARM relocations.  Add Thumb
	assembler-internal relocations BFD_RELOC_ARM_T32_OFFSET_U8,
	BFD_RELOC_ARM_T32_OFFSET_IMM, BFD_RELOC_ARM_T32_IMMEDIATE.
	Add visible relocations BFD_RELOC_THUMB_PCREL_BRANCH7,
	BFD_RELOC_THUMB_BRANCH20, BFD_RELOC_THUMB_BRANCH25.
	Delete unused relocations BFD_RELOC_ARM_GOT12, BFD_RELOC_ARM_COPY.
	* bfd-in2.h, libbfd.h: Regenerate.

opcodes:
	* arm-dis.c (thumb_opcodes): Add disassembly for V6T2 16-bit
	instructions.  Adjust disassembly of some opcodes to match
	unified syntax.
	(thumb32_opcodes): New table.
	(print_insn_thumb): Rename print_insn_thumb16; don't handle
	two-halfword branches here.
	(print_insn_thumb32): New function.
	(print_insn): Choose among print_insn_arm, print_insn_thumb16,
	and print_insn_thumb32.  Be consistent about order of
	halfwords when printing 32-bit instructions.

gas:
	* hash.c (hash_lookup): Add len parameter.  All callers changed.
	(hash_find_n): New interface.
	* hash.h: Prototype hash_find_n.
	* sb.c: Include as.h.
	(scrub_from_sb, sb_to_scrub, scrub_position): New statics.
	(sb_scrub_and_add_sb): New interface.
	* sb.h: Prototype sb_scrub_and_add_sb.
	* input-scrub.c (input_scrub_include_sb): Use sb_scrub_and_add_sb.

	* config/tc-arm.h (TC_FORCE_RELOCATION_LOCAL): Remove
	reference to BFD_RELOC_ARM_GOT12 which is never generated.
	* config/tc-arm.c: Rewrite, adding Thumb-2 support.

gas/testsuite:
	* gas/arm/arm.exp: Convert all existing "gas_test" tests to
	"run_dump_test" tests.  Run more tests unconditionally.  Run new tests.
	* gas/arm/arch4t.s, gas/arm/arch6zk.s, gas/arm/arm3.s, gas/arm/arm6.s
	* gas/arm/arm7dm.s, gas/arm/bignum1.s, gas/arm/float.s
	* gas/arm/immed.s, gas/arm/iwmmxt.s, gas/arm/offset.s, gas/arm/thumb.s:
	Adjust to work as a dump test.
	* gas/arm/arch4t.d, gas/arm/arch6zk.d, gas/arm/arm3.d, gas/arm/arm6.d
	* gas/arm/arm7dm.d, gas/arm/bignum1.d, gas/arm/float.d
	* gas/arm/immed.d, gas/arm/iwmmxt.d, gas/arm/offset.d, gas/arm/thumb.d:
	New files.

	* gas/arm/armv1-bad.l, gas/arm/armv1-bad.s: Remove tests for
	diagnostics that don't happen in the first pass anymore.

	* gas/arm/iwmmxt-bad.l, gas/arm/r15-bad.l, gas/arm/req.l
	* gas/arm/vfp-bad.l:
	Update expected diagnostics.
	* gas/arm/pic.d: Update expected reloc name.
	* gas/arm/thumbv6.d: CPY no longer appears in disassembly.
	* gas/arm/r15-bad.s: Avoid two-argument mul.
	* gas/arm/req.s: Adjust comments.
	* gas/arm/maverick.d, gas/arm/maverick.s: Avoid inappropriate
	use of PC.

	* gas/arm/macro-1.d, gas/arm/macro1.s
	* gas/arm/t16-bad.l, gas/arm/t16-bad.s
	* gas/arm/tcompat.d, gas/arm/tcompat.s
	* gas/arm/tcompat2.d, gas/arm/tcompat2.s
	* gas/arm/thumb32.d, gas/arm/thumb32.s
	New test pair.

ld/testsuite:
	* ld-arm/mixed-app.d: Adjust expected disassembly a little.
@
text
@d27 2
a28 2
0+04c <[^>]*> e16ec371 ?	smi	60465
0+050 <[^>]*> 11613c7e ?	smine	5070
@


1.2
log
@* gas/arm/arch6zk.s: Add three nop instructions in order to pad	the .text
   section out to a 32-byte boundary as will automatically be done by the
   arm-aout target.
* gas/arm/arch6zk.d: Add expected nop disassemblies.
@
text
@d9 6
a14 6
0+004 <[^>]*> e1dc3f9f ?	ldrexb	r3, \[ip\]
0+008 <[^>]*> 11d3cf9f ?	ldrexbne	ip, \[r3\]
0+00c <[^>]*> e1bc3f9f ?	ldrexd	r3, \[ip\]
0+010 <[^>]*> 11b3cf9f ?	ldrexdne	ip, \[r3\]
0+014 <[^>]*> e1fc3f9f ?	ldrexh	r3, \[ip\]
0+018 <[^>]*> 11f3cf9f ?	ldrexhne	ip, \[r3\]
d18 6
a23 6
0+028 <[^>]*> e1c73f9c ?	strexb	r3, ip, \[r7\]
0+02c <[^>]*> 11c8cf93 ?	strexbne	ip, r3, \[r8\]
0+030 <[^>]*> e1a73f9c ?	strexd	r3, ip, \[r7\]
0+034 <[^>]*> 11a8cf93 ?	strexdne	ip, r3, \[r8\]
0+038 <[^>]*> e1e73f9c ?	strexh	r3, ip, \[r7\]
0+03c <[^>]*> 11e8cf93 ?	strexhne	ip, r3, \[r8\]
@


1.2.4.1
log
@	Thumb32 assembler.

	* include/elf/arm.h: Import full set of relocation names from
	latest AAELF.  Make the primary name of all relocations be the one
	AAELF specifies.  Provide aliases under the traditional names.
	Kill FIRST_INVALID_RELOC_* and LAST_INVALID_RELOC_*.
	* bfd/reloc.c: Reorganize ARM relocations.  Remove ARM relocations
	that are never generated.  Document more of the relocations.  Add
	relocations for Thumb32.
	* bfd/libbfd.h, bfd/bfd-in2.h: Regenerate.
	* bfd/elf32-arm.c: Reorganize howto tables.  Implement Thumb32
	relocations.
	* ld/testsuite/ld-arm/mixed-app.d: Adjust expectations for
	renamed relocations.

	* gas/hash.c (hash_find_n): New interface.
	* gas/hash.h: Prototype it.

	* gas/config/tc-arm.c: Rewrite and reorganize.  Implement 32-bit
	Thumb instructions.
	* gas/testsuite/gas/arm: Convert all "gas_test" style tests to
	"run_dump_test" style tests, for more thorough testing.  Make
	adjustments to expectations where necessary.
	* gas/testsuite/gas/arm/t16-bad.s, gas/testsuite/gas/arm/tcompat.s
	* gas/testsuite/gas/arm/tcompat2.s, gas/testsuite/gas/arm/thumb32.s:
	New test cases.

	* opcodes/arm-dis.c: Add support for Thumb32 instructions and
	16-bit V6T2 instructions.
@
text
@d9 6
a14 6
0+004 <[^>]*> e1dc4f9f ?	ldrexb	r4, \[ip\]
0+008 <[^>]*> 11d4cf9f ?	ldrexbne	ip, \[r4\]
0+00c <[^>]*> e1bc4f9f ?	ldrexd	r4, \[ip\]
0+010 <[^>]*> 11b4cf9f ?	ldrexdne	ip, \[r4\]
0+014 <[^>]*> e1fc4f9f ?	ldrexh	r4, \[ip\]
0+018 <[^>]*> 11f4cf9f ?	ldrexhne	ip, \[r4\]
d18 6
a23 6
0+028 <[^>]*> e1c74f9c ?	strexb	r4, ip, \[r7\]
0+02c <[^>]*> 11c8cf94 ?	strexbne	ip, r4, \[r8\]
0+030 <[^>]*> e1a74f9c ?	strexd	r4, ip, \[r7\]
0+034 <[^>]*> 11a8cf94 ?	strexdne	ip, r4, \[r8\]
0+038 <[^>]*> e1e74f9c ?	strexh	r4, ip, \[r7\]
0+03c <[^>]*> 11e8cf94 ?	strexhne	ip, r4, \[r8\]
@


1.1
log
@Apply Paul Brook's patch to implement armv6k instructions
@
text
@d29 4
@

