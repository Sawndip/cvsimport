head	1.4;
access;
symbols
	binutils-2_24-branch:1.4.0.4
	binutils-2_24-branchpoint:1.4
	binutils-2_21_1:1.3
	binutils-2_23_2:1.4
	binutils-2_23_1:1.4
	binutils-2_23:1.4
	binutils-2_23-branch:1.4.0.2
	binutils-2_23-branchpoint:1.4
	binutils-2_22_branch:1.3.0.6
	binutils-2_22:1.3
	binutils-2_22-branch:1.3.0.4
	binutils-2_22-branchpoint:1.3
	binutils-2_21:1.3
	binutils-2_21-branch:1.3.0.2
	binutils-2_21-branchpoint:1.3
	binutils-2_20_1:1.2
	binutils-2_20:1.2
	binutils-arc-20081103-branch:1.1.0.10
	binutils-arc-20081103-branchpoint:1.1
	binutils-2_20-branch:1.2.0.2
	binutils-2_20-branchpoint:1.2
	dje-cgen-play1-branch:1.1.0.8
	dje-cgen-play1-branchpoint:1.1
	arc-20081103-branch:1.1.0.6
	arc-20081103-branchpoint:1.1
	binutils-2_19_1:1.1
	binutils-2_19:1.1
	binutils-2_19-branch:1.1.0.4
	binutils-2_19-branchpoint:1.1
	binutils-2_18:1.1
	binutils-2_18-branch:1.1.0.2
	binutils-2_18-branchpoint:1.1
	binutils_latest_snapshot:1.4;
locks; strict;
comment	@# @;


1.4
date	2012.05.17.16.36.19;	author hjl;	state Exp;
branches;
next	1.3;

1.3
date	2010.02.08.14.33.22;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	2009.06.30.11.57.05;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	2006.08.06.15.11.08;	author nickc;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Expect addend as signed

binutils/testsuite/

	* binutils-all/hppa/objdump.exp: Expect addend as signed.

gas/testsuite/

	* gas/all/weakref1.d: Expect addend as signed.
	* gas/arm/pic_vxworks.d: Likewise.
	* gas/arm/wince.d: Likewise.
	* gas/h8300/h8300.exp: Likewise.
	* gas/i386/sub.d: Likewise.
	* gas/mips/ecoff@@ld.d: Likewise.
	* gas/mips/ecoff@@sd.d: Likewise.
	* gas/mips/l_d-n32.d: Likewise.
	* gas/mips/l_d-n64.d: Likewise.
	* gas/mips/l_d.d: Likewise.
	* gas/mips/ld-n32.d: Likewise.
	* gas/mips/ld-n64.d: Likewise.
	* gas/mips/ld.d: Likewise.
	* gas/mips/mips1@@l_d.d: Likewise.
	* gas/mips/mips1@@ld-forward.d: Likewise.
	* gas/mips/mips1@@ld.d: Likewise.
	* gas/mips/mips1@@s_d.d: Likewise.
	* gas/mips/s_d-n32.d: Likewise.
	* gas/mips/s_d-n64.d: Likewise.
	* gas/mips/s_d.d: Likewise.
	* gas/mips/sd-n32.d: Likewise.
	* gas/mips/sd-n64.d: Likewise.
	* gas/mips/sd.d: Likewise.
	* gas/mmix/bz-c.d: Likewise.
	* gas/mmix/geta-c.d: Likewise.
	* gas/mmix/jump-c.d: Likewise.
	* gas/mmix/pushj-c.d: Likewise.
	* gas/mmix/pushj-cs.d: Likewise.
	* gas/mmix/reloc16-n.d: Likewise.
	* gas/mmix/reloc16-r.d: Likewise.
	* gas/mmix/reloc16.d: Likewise.
	* gas/mmix/reloc8-r.d: Likewise.
	* gas/mmix/reloc8.d: Likewise.
	* gas/mmix/relocxrn.d: Likewise.
	* gas/sh/sh64/case-1.d: Likewise.
	* gas/sh/sh64/mix-1.d: Likewise.
	* gas/sh/sh64/pt32-1.d: Likewise.
	* gas/sh/sh64/pt64-1.d: Likewise.
	* gas/sh/sh64/pt64-32-2.d: Likewise.
	* gas/sh/sh64/rel32-2.d: Likewise.
	* gas/sh/sh64/rel32-4.d: Likewise.
	* gas/sh/sh64/rel64-2.d: Likewise.
	* gas/sh/sh64/rel64-4.d: Likewise.
	* gas/tic6x/data-reloc.d: Likewise.
	* gas/tic6x/pcr-relocs.d: Likewise.
	* gas/xstormy16/allinsn.d: Likewise.
	* gas/xstormy16/reloc-1.d: Likewise.
	* gas/xstormy16/reloc-2.d: Likewise.

ld/testsuite/

	* ld-arm/emit-relocs1-vxworks.d: Expect addend as signed.
	* ld-spu/pic.d: Likewise.
@
text
@#objdump: -dr --prefix-addresses --show-raw-insn
#name: ARM WinCE basic tests
#as: -mcpu=arm7m -EL
#source: wince.s
#not-skip: *-wince-*

# Some WinCE specific tests.

.*: +file format .*arm.*

Disassembly of section .text:
0+000 <global_data> 00000007 	andeq	r0, r0, r7
			0: ARM_32	global_data
0+004 <global_sym> e1a00000 	nop			; \(mov r0, r0\)
0+008 <global_sym\+0x4> e1a00000 	nop			; \(mov r0, r0\)
0+00c <global_sym\+0x8> e1a00000 	nop			; \(mov r0, r0\)
0+010 <global_sym\+0xc> eafffffb 	b	f+ff8 <global_sym\+0xf+ff4>
			10: ARM_26D	global_sym-0x4
0+014 <global_sym\+0x10> ebfffffa 	bl	f+ff4 <global_sym\+0xf+ff0>
			14: ARM_26D	global_sym-0x4
0+018 <global_sym\+0x14> 0afffff9 	beq	f+ff0 <global_sym\+0xf+fec>
			18: ARM_26D	global_sym-0x4
0+01c <global_sym\+0x18> eafffff8 	b	0+004 <global_sym>
0+020 <global_sym\+0x1c> ebfffff7 	bl	0+004 <global_sym>
0+024 <global_sym\+0x20> 0afffff6 	beq	0+004 <global_sym>
0+028 <global_sym\+0x24> eafffff5 	b	0+004 <global_sym>
0+02c <global_sym\+0x28> ebfffff4 	bl	0+004 <global_sym>
0+030 <global_sym\+0x2c> e51f0034 	ldr	r0, \[pc, #-52\]	; 0+004 <global_sym>
0+034 <global_sym\+0x30> e51f0038 	ldr	r0, \[pc, #-56\]	; 0+004 <global_sym>
0+038 <global_sym\+0x34> e51f003c 	ldr	r0, \[pc, #-60\]	; 0+004 <global_sym>
@


1.3
log
@        * objdump.c (disassemble_bytes): Clear aux->reloc before printing
        a new address, so as not to reuse a previous, non-related reloc.

        * gas/arm/arm-it-auto.d, gas/arm/bl-local-v4t.d,
        gas/arm/blx-local.d, gas/arm/thumb-w-good.d: Update expected
        results.
@
text
@d18 1
a18 1
			10: ARM_26D	global_sym\+0xf+ffc
d20 1
a20 1
			14: ARM_26D	global_sym\+0xf+ffc
d22 1
a22 1
			18: ARM_26D	global_sym\+0xf+ffc
@


1.2
log
@        PR 10288
        * arm-dis.c (coprocessor): Print the LDC and STC versions of the
        LFM and SFM instructions as comments,.
        Improve consistency of formatting for instructions displayed as
        comments and decimal values displayed with their hexadecimal
        equivalents.
        Formatting tidy ups.

        Updated expected disassembler regexps.
@
text
@d16 1
a16 1
0+000c <global_sym\+0x8> e1a00000 	nop			; \(mov r0, r0\)
d19 1
a19 1
0+018 <global_sym\+0x14> ebfffffa 	bl	f+ff4 <global_sym\+0xf+ff0>
d21 1
a21 1
0+01c <global_sym\+0x18> 0afffff9 	beq	f+ff0 <global_sym\+0xf+fec>
d23 8
a30 8
0+020 <global_sym\+0x1c> eafffff8 	b	0+008 <global_sym\+0x4>
0+024 <global_sym\+0x20> ebfffff7 	bl	0+008 <global_sym\+0x4>
0+028 <global_sym\+0x24> 0afffff6 	beq	0+008 <global_sym\+0x4>
0+02c <global_sym\+0x28> eafffff5 	b	0+008 <global_sym\+0x4>
0+030 <global_sym\+0x2c> ebfffff4 	bl	0+008 <global_sym\+0x4>
0+034 <global_sym\+0x30> e51f0034 	ldr	r0, \[pc, #-52\]	; 0+008 <global_sym\+0x4>
0+038 <global_sym\+0x34> e51f0038 	ldr	r0, \[pc, #-56\]	; 0+008 <global_sym\+0x4>
0+03c <global_sym\+0x38> e51f003c 	ldr	r0, \[pc, #-60\]	; 0+008 <global_sym\+0x4>
@


1.1
log
@* gas/arm/wince.s: New test.
* gas/arm/wince.d: New test.
@
text
@d14 3
a16 3
0+004 <global_sym> e1a00000 	nop			\(mov r0,r0\)
0+008 <global_sym\+0x4> e1a00000 	nop			\(mov r0,r0\)
0+000c <global_sym\+0x8> e1a00000 	nop			\(mov r0,r0\)
@

