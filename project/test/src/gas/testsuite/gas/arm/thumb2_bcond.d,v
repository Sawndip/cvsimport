head	1.8;
access;
symbols
	binutils-2_24-branch:1.8.0.8
	binutils-2_24-branchpoint:1.8
	binutils-2_21_1:1.6
	binutils-2_23_2:1.8
	binutils-2_23_1:1.8
	binutils-2_23:1.8
	binutils-2_23-branch:1.8.0.6
	binutils-2_23-branchpoint:1.8
	binutils-2_22_branch:1.8.0.4
	binutils-2_22:1.8
	binutils-2_22-branch:1.8.0.2
	binutils-2_22-branchpoint:1.8
	binutils-2_21:1.6
	binutils-2_21-branch:1.6.0.2
	binutils-2_21-branchpoint:1.6
	binutils-2_20_1:1.4
	binutils-2_20:1.4
	binutils-arc-20081103-branch:1.4.0.12
	binutils-arc-20081103-branchpoint:1.4
	binutils-2_20-branch:1.4.0.10
	binutils-2_20-branchpoint:1.4
	dje-cgen-play1-branch:1.4.0.8
	dje-cgen-play1-branchpoint:1.4
	arc-20081103-branch:1.4.0.6
	arc-20081103-branchpoint:1.4
	binutils-2_19_1:1.4
	binutils-2_19:1.4
	binutils-2_19-branch:1.4.0.4
	binutils-2_19-branchpoint:1.4
	binutils-2_18:1.4
	binutils-2_18-branch:1.4.0.2
	binutils-2_18-branchpoint:1.4
	binutils-csl-coldfire-4_1-32:1.1.2.2
	binutils-csl-sourcerygxx-4_1-32:1.1.2.2
	binutils-csl-innovasic-fido-3_4_4-33:1.1.2.2
	binutils-csl-coldfire-4_1-30:1.1.2.2
	binutils-csl-sourcerygxx-4_1-30:1.1.2.2
	binutils-csl-coldfire-4_1-28:1.1.2.2
	binutils-csl-sourcerygxx-4_1-29:1.1.2.2
	binutils-csl-sourcerygxx-4_1-28:1.1.2.2
	binutils-csl-arm-2006q3-27:1.1.2.2
	binutils-csl-sourcerygxx-4_1-27:1.1.2.2
	binutils-csl-arm-2006q3-26:1.1.2.2
	binutils-csl-sourcerygxx-4_1-26:1.1.2.2
	binutils-csl-sourcerygxx-4_1-25:1.1.2.2
	binutils-csl-sourcerygxx-4_1-24:1.1.2.2
	binutils-csl-sourcerygxx-4_1-23:1.1.2.2
	binutils-csl-sourcerygxx-4_1-21:1.1.2.2
	binutils-csl-arm-2006q3-21:1.1.2.2
	binutils-csl-sourcerygxx-4_1-22:1.1.2.2
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.1.2.2
	binutils-csl-sourcerygxx-4_1-20:1.1.2.2
	binutils-csl-arm-2006q3-19:1.1.2.2
	binutils-csl-sourcerygxx-4_1-19:1.1.2.2
	binutils-csl-sourcerygxx-4_1-18:1.1.2.2
	binutils-csl-renesas-4_1-9:1.1.2.2
	binutils-csl-renesas-4_1-8:1.1.2.1
	binutils-csl-renesas-4_1-7:1.1.2.1
	binutils-csl-renesas-4_1-6:1.1.2.1
	binutils-csl-sourcerygxx-4_1-17:1.1.2.1
	binutils-csl-sourcerygxx-4_1-14:1.1.2.1
	binutils-csl-sourcerygxx-4_1-15:1.1.2.1
	binutils-csl-sourcerygxx-4_1-13:1.1.2.1
	binutils-2_17:1.2
	binutils-csl-sourcerygxx-4_1-12:1.1.2.1
	binutils-csl-sourcerygxx-3_4_4-21:1.1.2.1
	binutils-csl-sourcerygxx-4_1-9:1.1.2.1
	binutils-csl-sourcerygxx-4_1-8:1.1.2.1
	binutils-csl-sourcerygxx-4_1-7:1.1.2.1
	binutils-csl-arm-2006q1-6:1.1.2.1
	binutils-csl-sourcerygxx-4_1-6:1.1.2.1
	binutils-csl-coldfire-4_1-11:1.1.2.1
	binutils-csl-sourcerygxx-3_4_4-19:1.1.2.1
	binutils-csl-coldfire-4_1-10:1.1.2.1
	binutils-csl-sourcerygxx-4_1-5:1.1.2.1
	binutils-csl-sourcerygxx-4_1-4:1.1.2.1
	binutils-csl-morpho-4_1-4:1.1
	binutils-csl-sourcerygxx-3_4_4-17:1.1
	binutils-2_17-branch:1.2.0.2
	binutils-2_17-branchpoint:1.2
	binutils_latest_snapshot:1.8
	binutils-csl-2_17-branch:1.1.0.2
	binutils-csl-2_17-branchpoint:1.1;
locks; strict;
comment	@# @;


1.8
date	2011.04.19.07.27.30;	author nickc;	state Exp;
branches;
next	1.7;

1.7
date	2011.04.12.15.44.36;	author nickc;	state Exp;
branches;
next	1.6;

1.6
date	2010.02.23.16.46.44;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	2010.02.12.20.15.13;	author dgutson;	state Exp;
branches;
next	1.4;

1.4
date	2006.06.07.14.08.18;	author pbrook;	state Exp;
branches;
next	1.3;

1.3
date	2006.04.20.12.39.51;	author pbrook;	state Exp;
branches;
next	1.2;

1.2
date	2006.04.16.11.53.00;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	2006.03.20.15.38.02;	author pbrook;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2006.04.29.17.54.31;	author pbrook;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2006.08.22.15.08.38;	author jsm28;	state Exp;
branches;
next	;


desc
@@


1.8
log
@	* gas/arm/arch7.s: Fix typo basepri_max should be basepri_mask.
	* gas/arm/mrs-msr-thumb-v7e-m.s: Likewise.
	* gas/arm/arch7.d: Update expected disassembly.
	* gas/arm/attr-march-armv7.d: Remove Microcontroller tag.
	* gas/arm/blx-bad.d: Only run for ELF based targets.
	* gas/arm/mrs-msr-thumb-v6t2.d: Likewise.
	* gas/arm/vldm-arm.d: Likewise.
	* gas/arm/mrs-msr-thumb-v7-m.d: Likewise.
	Remove qualifiers from PSR and IAPSR regsiter names.
	* gas/arm/mrs-msr-thumb-v7e-m.d: Likewise.
	* gas/arm/thumb2_bcond.d: Update expected disassembly to allow for
	relaxing of branch insns.
	* gas/arm/thumb32.d: Fix whitespace problems in disassembly.

	* config/tc-arm.c (parse_psr): Use selected_cpu not cpu_variant to
	detect M-profile targets.
	(do_t_swi): Exclude v7 and higher variants from arm_ext_os test.
	(v7m_psrs): Fix typo: basepri_max should be basepri_mask.

	* arm-dis.c (psr_name): Revert previous delta.

	* arm.h (ARM_AEXT_V7_ARM): Remove ARM_EXT_OS from bitmask.
@
text
@# as:
# objdump: -dr --prefix-addresses --show-raw-insn

.*: +file format .*arm.*

Disassembly of section .text:
0+000 <[^>]+> bf18[ 	]+it	ne
0+002 <[^>]+> [0-9a-f ]+[ 	]+bne.[nw]	0+0 <[^>]+>
0+00. <[^>]+> bf38[ 	]+it	cc
0+00. <[^>]+> f7ff bff[ab][ 	]+bcc.w	0+0 <[^>]+>
0+00. <[^>]+> bf28[ 	]+it	cs
0+0.. <[^>]+> f7ff fff[78][ 	]+blcs	0+0 <[^>]+>
0+0.. <[^>]+> bfb8[ 	]+it	lt
0+0.. <[^>]+> 47a8[ 	]+blxlt	r5
0+0.. <[^>]+> bf08[ 	]+it	eq
0+0.. <[^>]+> 4740[ 	]+bxeq	r8
0+0.. <[^>]+> bfc8[ 	]+it	gt
0+0.. <[^>]+> e8d4 f001[ 	]+tbbgt	\[r4, r1\]
0+0.. <[^>]+> bfb8[ 	]+it	lt
0+0.. <[^>]+> df00[ 	]+svclt	0
0+0.. <[^>]+> bf08[ 	]+it	eq
0+0.. <[^>]+> f8d0 f000[ 	]+ldreq.w	pc, \[r0\]
0+0.. <[^>]+> bfdc[ 	]+itt	le
0+0.. <[^>]+> be00[ 	]+bkpt	0x0000
0+0.. <[^>]+> bf00[ 	]+nople
0+0.. <[^>]+> bf00[ 	]+nop
#...
@


1.7
log
@	PR gas/12532
	* gas/arm/plt-1.d: Update expected disassembly.
	* gas/arm/thumb2_bcond.d: Likewise.
	* gas/arm/weakdef-1.d: Likewise.
@
text
@d7 20
a26 20
0+000 <[^>]+> bf18      	it	ne
0+002 <[^>]+> f7ff bffd 	bne.w	0+0 <[^>]+>
0+006 <[^>]+> bf38      	it	cc
0+008 <[^>]+> f7ff bffa 	bcc.w	0+0 <[^>]+>
0+00c <[^>]+> bf28      	it	cs
0+00e <[^>]+> f7ff fff7 	blcs	0+0 <[^>]+>
0+012 <[^>]+> bfb8      	it	lt
0+014 <[^>]+> 47a8      	blxlt	r5
0+016 <[^>]+> bf08      	it	eq
0+018 <[^>]+> 4740      	bxeq	r8
0+01a <[^>]+> bfc8      	it	gt
0+01c <[^>]+> e8d4 f001 	tbbgt	\[r4, r1\]
0+020 <[^>]+> bfb8      	it	lt
0+022 <[^>]+> df00      	svclt	0
0+024 <[^>]+> bf08      	it	eq
0+026 <[^>]+> f8d0 f000 	ldreq.w	pc, \[r0\]
0+02a <[^>]+> bfdc      	itt	le
0+02c <[^>]+> be00      	bkpt	0x0000
0+02e <[^>]+> bf00      	nople
0+030 <[^>]+> bf00      	nop
@


1.6
log
@        * gas/arm/thumb2_bcond.d: Allow for varying number of nops at the
        end of the section depending upon the target of the arm assembler
        being tested.
@
text
@d8 19
a26 19
0+002 <[^>]+> e7fd      	bne.n	0+0 <[^>]+>
0+004 <[^>]+> bf38      	it	cc
0+006 <[^>]+> f7ff bffb 	bcc.w	0+0 <[^>]+>
0+00a <[^>]+> bf28      	it	cs
0+00c <[^>]+> f7ff fff8 	blcs	0+0 <[^>]+>
0+010 <[^>]+> bfb8      	it	lt
0+012 <[^>]+> 47a8      	blxlt	r5
0+014 <[^>]+> bf08      	it	eq
0+016 <[^>]+> 4740      	bxeq	r8
0+018 <[^>]+> bfc8      	it	gt
0+01a <[^>]+> e8d4 f001 	tbbgt	\[r4, r1\]
0+01e <[^>]+> bfb8      	it	lt
0+020 <[^>]+> df00      	svclt	0
0+022 <[^>]+> bf08      	it	eq
0+024 <[^>]+> f8d0 f000 	ldreq.w	pc, \[r0\]
0+028 <[^>]+> bfdc      	itt	le
0+02a <[^>]+> be00      	bkpt	0x0000
0+02c <[^>]+> bf00      	nople
0+02e <[^>]+> bf00      	nop
@


1.5
log
@	gas/
	* config/tc-arm.c (asm_opcode): operands type
	change.
	(BAD_PC_ADDRESSING): New macro message.
	(BAD_PC_WRITEBACK): Likewise.
	(MIX_ARM_THUMB_OPERANDS): New macro.
	(operand_parse_code): Added enum values.
	(parse_operands): Added thumb/arm distinction,
	plus new enum values handling.
	(encode_arm_addr_mode_2): Validations enhanced.
	(encode_arm_addr_mode_3): Likewise.
	(do_rm_rd_rn): Likewise.
	(encode_thumb32_addr_mode): Likewise.
	(do_t_ldrex): Likewise.
	(do_t_ldst): Likewise.
	(do_t_strex): Likewise.
	(md_assemble): Call parse_operands with
	a new parameter.
	(OPS_1): New macro.
	(OPS_2): Likewise.
	(OPS_3): Likewise.
	(OPS_4): Likewise.
	(OPS_5): Likewise.
	(OPS_6): Likewise.
	(insns): Updated insns operands.

	gas/testsuite/
	* gas/arm/sp-pc-validations-bad.d: New testcase.
	* gas/arm/sp-pc-validations-bad.l: New file.
	* gas/arm/sp-pc-validations-bad.s: New file.
	* gas/arm/sp-pc-validations-bad-t.d: New testcase.
	* gas/arm/sp-pc-validations-bad-t.l: New file.
	* gas/arm/sp-pc-validations-bad-t.s: New file.
	* gas/arm/sp-pc-usage-t.d: Removed invalid insns.
	* gas/arm/sp-pc-usage-t.s: Likewise.
	* gas/arm/unpredictable.d: Likewise.
	* gas/arm/unpredictable.s: Likewise.
	* gas/arm/thumb2_bcond.d: Added test.
	* gas/arm/thumb2_bcond.s: Likewise.
@
text
@d27 1
a27 1
0+030 <[^>]+> bf00      	nop
@


1.4
log
@2006-06-06  Paul Brook  <paul@@codesourcery.com>

opcodes/
	* arm-dis.c (coprocessor_opcodes): Add %c to unconditional arm
	instructions.
	(neon_opcodes): Add conditional execution specifiers.
	(thumb_opcodes): Ditto.
	(thumb32_opcodes): Ditto.
	(arm_conditional): Change 0xe to "al" and add "" to end.
	(ifthen_state, ifthen_next_state, ifthen_address): New.
	(IFTHEN_COND): Define.
	(print_insn_coprocessor, print_insn_neon): Print thumb conditions.
	(print_insn_arm): Change %c to use new values of arm_conditional.
	(print_insn_thumb16): Print thumb conditions.  Add %I.
	(print_insn_thumb32): Print thumb conditions.
	(find_ifthen_state): New function.
	(print_insn): Track IT block state.
gas/testsuite/
	* gas/arm/thumb2_bcond.d: Update expected output.
	* gas/arm/thumb32.d: Ditto.
	* gas/arm/vfp1_t2.d: Ditto.
	* gas/arm/vfp1xD_t2.d: Ditto.
binutils/testsuite/
	* binutils-all/arm/objdump.exp: New file.
	* binutils-all/arm/thumb2-cond.s: New test.
@
text
@d21 7
a27 5
0+022 <[^>]+> bfdc      	itt	le
0+024 <[^>]+> be00      	bkpt	0x0000
0+026 <[^>]+> bf00      	nople
0+028 <[^>]+> bf00      	nop
0+02a <[^>]+> bf00      	nop
@


1.3
log
@2005-04-20  Paul Brook  <paul@@codesourcery.com>

gas/
	* config/tc-arm.c (s_arm_arch, s_arm_cpu, s_arm_fpu): Enable for
	all targets.
	(md_pseudo_table): Enable .arch, .cpu and .fpu for all targets.
gas/testsuite/
	* gas/arm/arch7.d: Remove skip.
	* gas/arm/svc.d: Ditto.
	* gas/arm/thumb2_bcond.d: Ditto.
	* gas/arm/thumb2_it_bad.d: Ditto.
@
text
@d8 1
a8 1
0+002 <[^>]+> e7fd      	b(|ne).n	0+0 <[^>]+>
d10 1
a10 1
0+006 <[^>]+> f7ff bffb 	b(|cc).w	0+0 <[^>]+>
d12 1
a12 1
0+00c <[^>]+> f7ff fff8 	bl(|cs)	0+0 <[^>]+>
d14 1
a14 1
0+012 <[^>]+> 47a8      	blx(|lr)	r5
d16 1
a16 1
0+016 <[^>]+> 4740      	bx(|eq)	r8
d18 1
a18 1
0+01a <[^>]+> e8d4 f001 	tbb(|gt)	\[r4, r1\]
d20 1
a20 1
0+020 <[^>]+> df00      	svc(|lt)	0
d23 1
a23 1
0+026 <[^>]+> bf00      	nop
@


1.2
log
@Skip ELF specific tests on non-ELF ARM targets
@
text
@a2 1
# skip: *-*-*coff *-*-pe *-*-wince *-*-*aout* *-*-netbsd *-*-riscix*
@


1.1
log
@2006-03-20  Paul Brook  <paul@@codesourcery.com>

gas/
	* config/tc-arm.c (BAD_BRANCH, BAD_NOT_IT): Define.
	(do_t_branch): Encode branches inside IT blocks as unconditional.
	(do_t_cps): New function.
	(do_t_blx, do_t_bkpt, do_t_branch23, do_t_bx, do_t_bxj, do_t_cpsi,
	do_t_czb, do_t_it, do_t_setend, do_t_tb): Add IT constaints.
	(opcode_lookup): Allow conditional suffixes on all instructions in
	Thumb mode.
	(md_assemble): Advance condexec state before checking for errors.
	(insns): Use do_t_cps.
gas/testsuite/
	* gas/arm/thumb2_bcond.d: New test.
	* gas/arm/thumb2_bcond.s: New test.
	* gas/arm/thumb2_it_bad.d: New test.
	* gas/arm/thumb2_it_bad.l: New test.
	* gas/arm/thumb2_it_bad.s: New test.
@
text
@d3 1
@


1.1.2.1
log
@2006-04-29  Paul Brook  <paul@@codesourcery.com>

	* opcodes/arm-dis.c (coprocessor_opcodes): Add %c to unconditional
	arm instructions.
	(neon_opcodes): Add conditional execution specifiers.
	(thumb_opcodes): Ditto.
	(thumb32_opcodes): Ditto.
	(arm_conditional): Change 0xe to "al" and add "" to end.
	(ifthen_state, ifthen_next_state, ifthen_address): New.
	(IFTHEN_COND): Define.
	(print_insn_coprocessor, print_insn_neon): Print thumb conditions.
	(print_insn_arm): Change %c to use new values of arm_conditional.
	(print_insn_thumb16): Print thumb conditions.  Add %I.
	(print_insn_thumb32): Print thumb conditions.
	(find_ifthen_state): New function.
	(print_insn): Track IT block state.
	* gas/testsuite/gas/arm/thumb2_bcond.d: Update expected output.
	* gas/testsuite/gas/arm/thumb32.d: Ditto.
	* gas/testsuite/gas/arm/vfp1_t2.d: Ditto.
	* gas/testsuite/gas/arm/vfp1xD_t2.d: Ditto.
	* binutils/testsuite/binutils-all/arm/objdump.exp: New file.
	* binutils/testsuite/binutils-all/arm/thumb2-cond.s: New test.
@
text
@d8 1
a8 1
0+002 <[^>]+> e7fd      	bne.n	0+0 <[^>]+>
d10 1
a10 1
0+006 <[^>]+> f7ff bffb 	bcc.w	0+0 <[^>]+>
d12 1
a12 1
0+00c <[^>]+> f7ff fff8 	blcs	0+0 <[^>]+>
d14 1
a14 1
0+012 <[^>]+> 47a8      	blxlt	r5
d16 1
a16 1
0+016 <[^>]+> 4740      	bxeq	r8
d18 1
a18 1
0+01a <[^>]+> e8d4 f001 	tbbgt	\[r4, r1\]
d20 1
a20 1
0+020 <[^>]+> df00      	svclt	0
d23 1
a23 1
0+026 <[^>]+> bf00      	nople
@


1.1.2.2
log
@Merge changes between binutils-csl-2_17-branchpoint and
binutils-2_17, except for the addition of generated files to CVS.
@
text
@a2 1
# skip: *-*-*coff *-*-pe *-*-wince *-*-*aout* *-*-netbsd *-*-riscix*
@


