head	1.2;
access;
symbols
	binutils-2_24-branch:1.2.0.22
	binutils-2_24-branchpoint:1.2
	binutils-2_21_1:1.2
	binutils-2_23_2:1.2
	binutils-2_23_1:1.2
	binutils-2_23:1.2
	binutils-2_23-branch:1.2.0.20
	binutils-2_23-branchpoint:1.2
	binutils-2_22_branch:1.2.0.18
	binutils-2_22:1.2
	binutils-2_22-branch:1.2.0.16
	binutils-2_22-branchpoint:1.2
	binutils-2_21:1.2
	binutils-2_21-branch:1.2.0.14
	binutils-2_21-branchpoint:1.2
	binutils-2_20_1:1.2
	binutils-2_20:1.2
	binutils-arc-20081103-branch:1.2.0.12
	binutils-arc-20081103-branchpoint:1.2
	binutils-2_20-branch:1.2.0.10
	binutils-2_20-branchpoint:1.2
	dje-cgen-play1-branch:1.2.0.8
	dje-cgen-play1-branchpoint:1.2
	arc-20081103-branch:1.2.0.6
	arc-20081103-branchpoint:1.2
	binutils-2_19_1:1.2
	binutils-2_19:1.2
	binutils-2_19-branch:1.2.0.4
	binutils-2_19-branchpoint:1.2
	binutils-2_18:1.2
	binutils-2_18-branch:1.2.0.2
	binutils-2_18-branchpoint:1.2
	binutils-csl-coldfire-4_1-32:1.1.2.1
	binutils-csl-sourcerygxx-4_1-32:1.1.2.1
	binutils-csl-innovasic-fido-3_4_4-33:1.1.2.1
	binutils-csl-coldfire-4_1-30:1.1.2.1
	binutils-csl-sourcerygxx-4_1-30:1.1.2.1
	binutils-csl-coldfire-4_1-28:1.1.2.1
	binutils-csl-sourcerygxx-4_1-29:1.1.2.1
	binutils-csl-sourcerygxx-4_1-28:1.1.2.1
	binutils-csl-arm-2006q3-27:1.1.2.1
	binutils-csl-sourcerygxx-4_1-27:1.1.2.1
	binutils-csl-arm-2006q3-26:1.1.2.1
	binutils-csl-sourcerygxx-4_1-26:1.1.2.1
	binutils-csl-sourcerygxx-4_1-25:1.1.2.1
	binutils-csl-sourcerygxx-4_1-24:1.1.2.1
	binutils-csl-sourcerygxx-4_1-23:1.1.2.1
	binutils-csl-sourcerygxx-4_1-21:1.1.2.1
	binutils-csl-arm-2006q3-21:1.1.2.1
	binutils-csl-sourcerygxx-4_1-22:1.1.2.1
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.1.2.1
	binutils-csl-sourcerygxx-4_1-20:1.1.2.1
	binutils-csl-arm-2006q3-19:1.1.2.1
	binutils-csl-sourcerygxx-4_1-19:1.1.2.1
	binutils-csl-sourcerygxx-4_1-18:1.1.2.1
	binutils-csl-renesas-4_1-9:1.1.2.1
	binutils-csl-renesas-4_1-8:1.1.2.1
	binutils-csl-renesas-4_1-7:1.1.2.1
	binutils-csl-renesas-4_1-6:1.1.2.1
	binutils-csl-sourcerygxx-4_1-17:1.1.2.1
	binutils-csl-sourcerygxx-4_1-14:1.1.2.1
	binutils-csl-sourcerygxx-4_1-15:1.1.2.1
	binutils-csl-sourcerygxx-4_1-13:1.1.2.1
	binutils-csl-sourcerygxx-4_1-12:1.1.2.1
	binutils-csl-sourcerygxx-3_4_4-21:1.1.2.1
	binutils-csl-sourcerygxx-4_1-9:1.1.2.1
	binutils-csl-sourcerygxx-4_1-8:1.1.2.1
	binutils-csl-sourcerygxx-4_1-7:1.1.2.1
	binutils-csl-arm-2006q1-6:1.1.2.1
	binutils-csl-sourcerygxx-4_1-6:1.1.2.1
	binutils-csl-coldfire-4_1-11:1.1.2.1
	binutils-csl-sourcerygxx-3_4_4-19:1.1.2.1
	binutils-csl-coldfire-4_1-10:1.1.2.1
	binutils-csl-sourcerygxx-4_1-5:1.1.2.1
	binutils-csl-sourcerygxx-4_1-4:1.1.2.1
	binutils-csl-morpho-4_1-4:1.1.2.1
	binutils-csl-sourcerygxx-3_4_4-17:1.1.2.1
	binutils_latest_snapshot:1.2
	binutils-csl-2_17-branch:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2006.04.26.15.55.17;	author jules;	state Exp;
branches;
next	1.1;

1.1
date	2006.04.07.15.46.21;	author jules;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2006.04.07.15.46.21;	author jules;	state Exp;
branches;
next	;


desc
@@


1.2
log
@	* gas/arm/neon-psyn.s: Basic test of programmers syntax.
	* gas/arm/neon-psyn.d: Expected output of above.
@
text
@# name: Neon programmers syntax
# as: -mfpu=neon
# objdump: -dr --prefix-addresses --show-raw-insn

.*: +file format .*arm.*

Disassembly of section .text:
0[0-9a-f]+ <[^>]+> f2144954 	vmul\.i16	q2, q2, q2
0[0-9a-f]+ <[^>]+> f2a33862 	vmul\.i32	d3, d3, d2\[1\]
0[0-9a-f]+ <[^>]+> f2233912 	vmul\.i32	d3, d3, d2
0[0-9a-f]+ <[^>]+> f2222803 	vadd\.i32	d2, d2, d3
0[0-9a-f]+ <[^>]+> f3924a4a 	vmull\.u16	q2, d2, d2\[1\]
0[0-9a-f]+ <[^>]+> f2910061 	vmla\.i16	d0, d1, d1\[2\]
0[0-9a-f]+ <[^>]+> f2910061 	vmla\.i16	d0, d1, d1\[2\]
0[0-9a-f]+ <[^>]+> f2255805 	vadd\.i32	d5, d5, d5
0[0-9a-f]+ <[^>]+> f2275117 	vorr	d5, d7, d7
0[0-9a-f]+ <[^>]+> ee021b70 	vmov\.16	d2\[1\], r1
0[0-9a-f]+ <[^>]+> ee251b10 	vmov\.32	d5\[1\], r1
0[0-9a-f]+ <[^>]+> ec432b15 	vmov	d5, r2, r3
0[0-9a-f]+ <[^>]+> ee554b30 	vmov\.s8	r4, d5\[1\]
0[0-9a-f]+ <[^>]+> ec565b15 	vmov	r5, r6, d5
0[0-9a-f]+ <[^>]+> f396a507 	vabal\.u16	q5, d6, d7
0[0-9a-f]+ <[^>]+> f3bb2744 	vcvt\.s32\.f32	q1, q2
0[0-9a-f]+ <[^>]+> f3bb4e15 	vcvt\.f32\.u32	d4, d5, #5
0[0-9a-f]+ <[^>]+> f3bc7c05 	vdup\.32	d7, d5\[1\]
0[0-9a-f]+ <[^>]+> f3ba1904 	vtbl\.8	d1, {d10-d11}, d4
0[0-9a-f]+ <[^>]+> f4aa698f 	vld2\.32	{d6\[1\],d7\[1\]}, \[sl\]
0[0-9a-f]+ <[^>]+> f4aa476f 	vld4\.16	{d4\[1\],d6\[1\],d8\[1\],d10\[1\]}, \[sl\]
0[0-9a-f]+ <[^>]+> f4aa6e4f 	vld3\.16	{d6\[\]-d8\[\]}, \[sl\]
0[0-9a-f]+ <[^>]+> ee100b30 	vmov\.s16	r0, d0\[0\]
0[0-9a-f]+ <[^>]+> f42a604f 	vld4\.16	{d6-d9}, \[sl\]
0[0-9a-f]+ <[^>]+> f4aa266f 	vld3\.16	{d2\[1\],d4\[1\],d6\[1\]}, \[sl\]
0[0-9a-f]+ <[^>]+> f3b47908 	vtbl\.8	d7, {d4-d5}, d8
0[0-9a-f]+ <[^>]+> f3142156 	vbsl	q1, q2, q3
0[0-9a-f]+ <[^>]+> f3032e04 	vcge\.f32	d2, d3, d4
0[0-9a-f]+ <[^>]+> f3b52083 	vcge\.s16	d2, d3, #0
0[0-9a-f]+ <[^>]+> ee823b30 	vdup\.16	d2, r3
@


1.1
log
@file neon-psyn.d was initially added on branch binutils-csl-2_17-branch.
@
text
@d1 37
@


1.1.2.1
log
@
	* gas/config/tc-arm.c (neon_el_type): Make NT_invtype be the zero (so
	zero-initialising structures containing it will lead to invalid
	types).
	(arm_it): Add vectype to each operand.
	(NTA_HASTYPE, NTA_HASINDEX): Constants used in neon_typed_alias
	defined field.
	(neon_typed_alias): New structure. Extra information for typed
	register aliases.
	(reg_entry): Add neon type info field.
	(arm_reg_parse): Remove RTYPE argument (revert to previous arguments).
	Break out alternative syntax for coprocessor registers, etc. into...
	(arm_reg_alt_syntax): New function. Alternate syntax handling broken
	out from arm_reg_parse.
	(parse_neon_type): Move. Return SUCCESS/FAIL.
	(first_error): New function. Call to ensure first error which occurs
	is reported.
	(parse_neon_operand_type): Parse exactly one type.
	(NEON_ALL_LANES, NEON_INTERLEAVE_LANES): Move.
	(parse_typed_reg_or_scalar): New function. Handle core of both
	arm_typed_reg_parse and parse_scalar.
	(arm_typed_reg_parse): Parse a register with an optional type.
	(NEON_SCALAR_REG, NEON_SCALAR_INDEX): Extract parts of parse_scalar
	result.
	(parse_scalar): Parse a Neon scalar with optional type.
	(parse_reg_list): Use first_error.
	(parse_vfp_reg_list): Use arm_typed_reg_parse instead of arm_reg_parse.
	(neon_alias_types_same): New function. Return true if two (alias) types
	are the same.
	(parse_neon_el_struct_list): Use parse_typed_reg_or_scalar. Return type
	of elements.
	(insert_reg_alias): Return new reg_entry not void.
	(insert_neon_reg_alias): New function. Insert type/index information as
	well as register for alias.
	(create_neon_reg_alias): New function. Parse .dn/.qn directives and
	make typed register aliases accordingly.
	(s_dn, s_qn): New functions. Handle incorrectly used .dn/.qn at start
	of line.
	(s_unreq): Delete type information if present.
	(s_arm_unwind_save_mmxwr): Remove arg 3 from arm_reg_parse calls.
	(s_arm_unwind_save_mmxwcg): Likewise.
	(s_arm_unwind_movsp): Likewise.
	(s_arm_unwind_setfp): Likewise.
	(parse_shift): Likewise.
	(parse_shifter_operand): Likewise.
	(parse_address): Likewise.
	(parse_tb): Likewise.
	(tc_arm_regname_to_dw2regnum): Likewise.
	(md_pseudo_table): Add dn, qn.
	(parse_neon_mov): Handle typed operands.
	(parse_operands): Likewise.
	(neon_type_mask): Add N_SIZ.
	(N_ALLMODS): New macro.
	(neon_check_shape): Fix typo in NS_DDD_QQQ case. Use first_error.
	(el_type_of_type_chk): Add some safeguards.
	(modify_types_allowed): Fix logic bug.
	(neon_check_type): Handle operands with types.
	(neon_three_same): Remove redundant optional arg handling.
	(do_neon_dyadic_i64_su, do_neon_shl_imm, do_neon_qshl_imm)
	(do_neon_logic, do_neon_qdmulh, do_neon_fcmp_absolute)
	(do_neon_step): Adjust accordingly.
	(neon_cmode_for_logic_imm): Use first_error.
	(do_neon_bitfield): Call neon_check_type.
	(neon_dyadic): Rename to...
	(neon_dyadic_misc): ...this. New name for neon_dyadic. Add bitfield to
	allow modification of type of the destination.
	(do_neon_dyadic_if_su, do_neon_dyadic_if_i, do_neon_dyadic_if_i_d)
	(do_neon_addsub_if_i, do_neon_mul): Adjust accordingly.
	(do_neon_compare): Make destination be an untyped bitfield.
	(neon_scalar_for_mul): Use NEON_SCALAR_REG, NEON_SCALAR_INDEX.
	(neon_mul_mac): Return early in case of errors.
	(neon_move_immediate): Use first_error.
	(neon_mac_reg_scalar_long): Fix type to include scalar.
	(do_neon_dup): Likewise.
	(do_neon_mov): Likewise (in several places).
	(do_neon_tbl_tbx): Fix type.
	(do_neon_ld_st_interleave, neon_alignment_bit, do_neon_ld_st_lane)
	(do_neon_ld_dup): Exit early in case of errors and/or use first_error.
	(opcode_lookup): Update for parse_neon_type returning SUCCESS/FAIL.
	Handle .dn/.qn directives.
	(REGDEF): Add zero for reg_entry neon field.

	* gas/testsuite/gas/arm/neon-psyn.s: Basic test of programmers syntax.
	* gas/testsuite/gas/arm/neon-psyn.d: Expected output of above.
@
text
@a0 37
# name: Neon programmers syntax
# as: -mfpu=neon
# objdump: -dr --prefix-addresses --show-raw-insn

.*: +file format .*arm.*

Disassembly of section .text:
0[0-9a-f]+ <[^>]+> f2144954 	vmul\.i16	q2, q2, q2
0[0-9a-f]+ <[^>]+> f2a33862 	vmul\.i32	d3, d3, d2\[1\]
0[0-9a-f]+ <[^>]+> f2233912 	vmul\.i32	d3, d3, d2
0[0-9a-f]+ <[^>]+> f2222803 	vadd\.i32	d2, d2, d3
0[0-9a-f]+ <[^>]+> f3924a4a 	vmull\.u16	q2, d2, d2\[1\]
0[0-9a-f]+ <[^>]+> f2910061 	vmla\.i16	d0, d1, d1\[2\]
0[0-9a-f]+ <[^>]+> f2910061 	vmla\.i16	d0, d1, d1\[2\]
0[0-9a-f]+ <[^>]+> f2255805 	vadd\.i32	d5, d5, d5
0[0-9a-f]+ <[^>]+> f2275117 	vorr	d5, d7, d7
0[0-9a-f]+ <[^>]+> ee021b70 	vmov\.16	d2\[1\], r1
0[0-9a-f]+ <[^>]+> ee251b10 	vmov\.32	d5\[1\], r1
0[0-9a-f]+ <[^>]+> ec432b15 	vmov	d5, r2, r3
0[0-9a-f]+ <[^>]+> ee554b30 	vmov\.s8	r4, d5\[1\]
0[0-9a-f]+ <[^>]+> ec565b15 	vmov	r5, r6, d5
0[0-9a-f]+ <[^>]+> f396a507 	vabal\.u16	q5, d6, d7
0[0-9a-f]+ <[^>]+> f3bb2744 	vcvt\.s32\.f32	q1, q2
0[0-9a-f]+ <[^>]+> f3bb4e15 	vcvt\.f32\.u32	d4, d5, #5
0[0-9a-f]+ <[^>]+> f3bc7c05 	vdup\.32	d7, d5\[1\]
0[0-9a-f]+ <[^>]+> f3ba1904 	vtbl\.8	d1, {d10-d11}, d4
0[0-9a-f]+ <[^>]+> f4aa698f 	vld2\.32	{d6\[1\],d7\[1\]}, \[sl\]
0[0-9a-f]+ <[^>]+> f4aa476f 	vld4\.16	{d4\[1\],d6\[1\],d8\[1\],d10\[1\]}, \[sl\]
0[0-9a-f]+ <[^>]+> f4aa6e4f 	vld3\.16	{d6\[\]-d8\[\]}, \[sl\]
0[0-9a-f]+ <[^>]+> ee100b30 	vmov\.s16	r0, d0\[0\]
0[0-9a-f]+ <[^>]+> f42a604f 	vld4\.16	{d6-d9}, \[sl\]
0[0-9a-f]+ <[^>]+> f4aa266f 	vld3\.16	{d2\[1\],d4\[1\],d6\[1\]}, \[sl\]
0[0-9a-f]+ <[^>]+> f3b47908 	vtbl\.8	d7, {d4-d5}, d8
0[0-9a-f]+ <[^>]+> f3142156 	vbsl	q1, q2, q3
0[0-9a-f]+ <[^>]+> f3032e04 	vcge\.f32	d2, d3, d4
0[0-9a-f]+ <[^>]+> f3b52083 	vcge\.s16	d2, d3, #0
0[0-9a-f]+ <[^>]+> ee823b30 	vdup\.16	d2, r3
@

