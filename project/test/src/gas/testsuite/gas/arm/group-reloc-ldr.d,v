head	1.5;
access;
symbols
	binutils-2_24-branch:1.5.0.12
	binutils-2_24-branchpoint:1.5
	binutils-2_21_1:1.5
	binutils-2_23_2:1.5
	binutils-2_23_1:1.5
	binutils-2_23:1.5
	binutils-2_23-branch:1.5.0.10
	binutils-2_23-branchpoint:1.5
	binutils-2_22_branch:1.5.0.8
	binutils-2_22:1.5
	binutils-2_22-branch:1.5.0.6
	binutils-2_22-branchpoint:1.5
	binutils-2_21:1.5
	binutils-2_21-branch:1.5.0.4
	binutils-2_21-branchpoint:1.5
	binutils-2_20_1:1.5
	binutils-2_20:1.5
	binutils-arc-20081103-branch:1.3.0.8
	binutils-arc-20081103-branchpoint:1.3
	binutils-2_20-branch:1.5.0.2
	binutils-2_20-branchpoint:1.5
	dje-cgen-play1-branch:1.3.0.6
	dje-cgen-play1-branchpoint:1.3
	arc-20081103-branch:1.3.0.4
	arc-20081103-branchpoint:1.3
	binutils-2_19_1:1.3
	binutils-2_19:1.3
	binutils-2_19-branch:1.3.0.2
	binutils-2_19-branchpoint:1.3
	binutils-2_18:1.2
	binutils-2_18-branch:1.2.0.2
	binutils-2_18-branchpoint:1.2
	binutils-csl-coldfire-4_1-32:1.1.2.1
	binutils-csl-sourcerygxx-4_1-32:1.1.2.1
	binutils-csl-innovasic-fido-3_4_4-33:1.1.2.1
	binutils-csl-coldfire-4_1-30:1.1.2.1
	binutils-csl-sourcerygxx-4_1-30:1.1.2.1
	binutils-csl-coldfire-4_1-28:1.1.2.1
	binutils-csl-sourcerygxx-4_1-29:1.1.2.1
	binutils-csl-sourcerygxx-4_1-28:1.1.2.1
	binutils-csl-arm-2006q3-27:1.1.2.1
	binutils-csl-sourcerygxx-4_1-27:1.1.2.1
	binutils-csl-arm-2006q3-26:1.1.2.1
	binutils-csl-sourcerygxx-4_1-26:1.1.2.1
	binutils-csl-sourcerygxx-4_1-25:1.1.2.1
	binutils-csl-sourcerygxx-4_1-24:1.1.2.1
	binutils-csl-sourcerygxx-4_1-23:1.1.2.1
	binutils-csl-sourcerygxx-4_1-21:1.1.2.1
	binutils-csl-arm-2006q3-21:1.1.2.1
	binutils-csl-sourcerygxx-4_1-22:1.1.2.1
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.1.2.1
	binutils-csl-sourcerygxx-4_1-20:1.1.2.1
	binutils-csl-arm-2006q3-19:1.1.2.1
	binutils-csl-sourcerygxx-4_1-19:1.1.2.1
	binutils-csl-sourcerygxx-4_1-18:1.1.2.1
	binutils-csl-renesas-4_1-9:1.1.2.1
	binutils-csl-renesas-4_1-8:1.1.2.1
	binutils-csl-renesas-4_1-7:1.1.2.1
	binutils-csl-renesas-4_1-6:1.1.2.1
	binutils-csl-sourcerygxx-4_1-17:1.1.2.1
	binutils-csl-sourcerygxx-4_1-14:1.1.2.1
	binutils-csl-sourcerygxx-4_1-15:1.1.2.1
	binutils-csl-sourcerygxx-4_1-13:1.1.2.1
	binutils-csl-sourcerygxx-4_1-12:1.1.2.1
	binutils-csl-sourcerygxx-3_4_4-21:1.1.2.1
	binutils_latest_snapshot:1.5
	binutils-csl-2_17-branch:1.1.0.2;
locks; strict;
comment	@# @;


1.5
date	2009.06.30.11.57.05;	author nickc;	state Exp;
branches;
next	1.4;

1.4
date	2009.06.29.08.08.15;	author nickc;	state Exp;
branches;
next	1.3;

1.3
date	2008.09.05.11.24.30;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	2006.06.18.10.05.27;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	2006.06.15.11.03.01;	author shinwell;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2006.06.15.15.53.11;	author shinwell;	state Exp;
branches;
next	;


desc
@@


1.5
log
@        PR 10288
        * arm-dis.c (coprocessor): Print the LDC and STC versions of the
        LFM and SFM instructions as comments,.
        Improve consistency of formatting for instructions displayed as
        comments and decimal values displayed with their hexadecimal
        equivalents.
        Formatting tidy ups.

        Updated expected disassembler regexps.
@
text
@#objdump: -dr --prefix-addresses --show-raw-insn
#skip: *-*-*coff *-*-pe *-*-wince *-*-*aout* *-*-netbsd *-*-riscix* *-*-vxworks
#name: Group relocation tests (ldr)

.*: +file format .*arm.*

Disassembly of section .text:
0[0-9a-f]+ <[^>]+> e5900fff 	ldr	r0, \[r0, #4095\].*
			0: R_ARM_LDR_PC_G0	f
0[0-9a-f]+ <[^>]+> e5900fff 	ldr	r0, \[r0, #4095\].*
			4: R_ARM_LDR_PC_G1	f
0[0-9a-f]+ <[^>]+> e5900fff 	ldr	r0, \[r0, #4095\].*
			8: R_ARM_LDR_PC_G2	f
0[0-9a-f]+ <[^>]+> e5900fff 	ldr	r0, \[r0, #4095\].*
			c: R_ARM_LDR_SB_G0	f
0[0-9a-f]+ <[^>]+> e5900fff 	ldr	r0, \[r0, #4095\].*
			10: R_ARM_LDR_SB_G1	f
0[0-9a-f]+ <[^>]+> e5900fff 	ldr	r0, \[r0, #4095\].*
			14: R_ARM_LDR_SB_G2	f
0[0-9a-f]+ <[^>]+> e5800fff 	str	r0, \[r0, #4095\].*
			18: R_ARM_LDR_PC_G0	f
0[0-9a-f]+ <[^>]+> e5800fff 	str	r0, \[r0, #4095\].*
			1c: R_ARM_LDR_PC_G1	f
0[0-9a-f]+ <[^>]+> e5800fff 	str	r0, \[r0, #4095\].*
			20: R_ARM_LDR_PC_G2	f
0[0-9a-f]+ <[^>]+> e5800fff 	str	r0, \[r0, #4095\].*
			24: R_ARM_LDR_SB_G0	f
0[0-9a-f]+ <[^>]+> e5800fff 	str	r0, \[r0, #4095\].*
			28: R_ARM_LDR_SB_G1	f
0[0-9a-f]+ <[^>]+> e5800fff 	str	r0, \[r0, #4095\].*
			2c: R_ARM_LDR_SB_G2	f
0[0-9a-f]+ <[^>]+> e5d00fff 	ldrb	r0, \[r0, #4095\].*
			30: R_ARM_LDR_PC_G0	f
0[0-9a-f]+ <[^>]+> e5d00fff 	ldrb	r0, \[r0, #4095\].*
			34: R_ARM_LDR_PC_G1	f
0[0-9a-f]+ <[^>]+> e5d00fff 	ldrb	r0, \[r0, #4095\].*
			38: R_ARM_LDR_PC_G2	f
0[0-9a-f]+ <[^>]+> e5d00fff 	ldrb	r0, \[r0, #4095\].*
			3c: R_ARM_LDR_SB_G0	f
0[0-9a-f]+ <[^>]+> e5d00fff 	ldrb	r0, \[r0, #4095\].*
			40: R_ARM_LDR_SB_G1	f
0[0-9a-f]+ <[^>]+> e5d00fff 	ldrb	r0, \[r0, #4095\].*
			44: R_ARM_LDR_SB_G2	f
0[0-9a-f]+ <[^>]+> e5c00fff 	strb	r0, \[r0, #4095\].*
			48: R_ARM_LDR_PC_G0	f
0[0-9a-f]+ <[^>]+> e5c00fff 	strb	r0, \[r0, #4095\].*
			4c: R_ARM_LDR_PC_G1	f
0[0-9a-f]+ <[^>]+> e5c00fff 	strb	r0, \[r0, #4095\].*
			50: R_ARM_LDR_PC_G2	f
0[0-9a-f]+ <[^>]+> e5c00fff 	strb	r0, \[r0, #4095\].*
			54: R_ARM_LDR_SB_G0	f
0[0-9a-f]+ <[^>]+> e5c00fff 	strb	r0, \[r0, #4095\].*
			58: R_ARM_LDR_SB_G1	f
0[0-9a-f]+ <[^>]+> e5c00fff 	strb	r0, \[r0, #4095\].*
			5c: R_ARM_LDR_SB_G2	f
0[0-9a-f]+ <[^>]+> e5100fff 	ldr	r0, \[r0, #-4095\].*
			60: R_ARM_LDR_PC_G0	f
0[0-9a-f]+ <[^>]+> e5100fff 	ldr	r0, \[r0, #-4095\].*
			64: R_ARM_LDR_PC_G1	f
0[0-9a-f]+ <[^>]+> e5100fff 	ldr	r0, \[r0, #-4095\].*
			68: R_ARM_LDR_PC_G2	f
0[0-9a-f]+ <[^>]+> e5100fff 	ldr	r0, \[r0, #-4095\].*
			6c: R_ARM_LDR_SB_G0	f
0[0-9a-f]+ <[^>]+> e5100fff 	ldr	r0, \[r0, #-4095\].*
			70: R_ARM_LDR_SB_G1	f
0[0-9a-f]+ <[^>]+> e5100fff 	ldr	r0, \[r0, #-4095\].*
			74: R_ARM_LDR_SB_G2	f
0[0-9a-f]+ <[^>]+> e5000fff 	str	r0, \[r0, #-4095\].*
			78: R_ARM_LDR_PC_G0	f
0[0-9a-f]+ <[^>]+> e5000fff 	str	r0, \[r0, #-4095\].*
			7c: R_ARM_LDR_PC_G1	f
0[0-9a-f]+ <[^>]+> e5000fff 	str	r0, \[r0, #-4095\].*
			80: R_ARM_LDR_PC_G2	f
0[0-9a-f]+ <[^>]+> e5000fff 	str	r0, \[r0, #-4095\].*
			84: R_ARM_LDR_SB_G0	f
0[0-9a-f]+ <[^>]+> e5000fff 	str	r0, \[r0, #-4095\].*
			88: R_ARM_LDR_SB_G1	f
0[0-9a-f]+ <[^>]+> e5000fff 	str	r0, \[r0, #-4095\].*
			8c: R_ARM_LDR_SB_G2	f
0[0-9a-f]+ <[^>]+> e5500fff 	ldrb	r0, \[r0, #-4095\].*
			90: R_ARM_LDR_PC_G0	f
0[0-9a-f]+ <[^>]+> e5500fff 	ldrb	r0, \[r0, #-4095\].*
			94: R_ARM_LDR_PC_G1	f
0[0-9a-f]+ <[^>]+> e5500fff 	ldrb	r0, \[r0, #-4095\].*
			98: R_ARM_LDR_PC_G2	f
0[0-9a-f]+ <[^>]+> e5500fff 	ldrb	r0, \[r0, #-4095\].*
			9c: R_ARM_LDR_SB_G0	f
0[0-9a-f]+ <[^>]+> e5500fff 	ldrb	r0, \[r0, #-4095\].*
			a0: R_ARM_LDR_SB_G1	f
0[0-9a-f]+ <[^>]+> e5500fff 	ldrb	r0, \[r0, #-4095\].*
			a4: R_ARM_LDR_SB_G2	f
0[0-9a-f]+ <[^>]+> e5400fff 	strb	r0, \[r0, #-4095\].*
			a8: R_ARM_LDR_PC_G0	f
0[0-9a-f]+ <[^>]+> e5400fff 	strb	r0, \[r0, #-4095\].*
			ac: R_ARM_LDR_PC_G1	f
0[0-9a-f]+ <[^>]+> e5400fff 	strb	r0, \[r0, #-4095\].*
			b0: R_ARM_LDR_PC_G2	f
0[0-9a-f]+ <[^>]+> e5400fff 	strb	r0, \[r0, #-4095\].*
			b4: R_ARM_LDR_SB_G0	f
0[0-9a-f]+ <[^>]+> e5400fff 	strb	r0, \[r0, #-4095\].*
			b8: R_ARM_LDR_SB_G1	f
0[0-9a-f]+ <[^>]+> e5400fff 	strb	r0, \[r0, #-4095\].*
			bc: R_ARM_LDR_SB_G2	f
0[0-9a-f]+ <[^>]+> e5900fff 	ldr	r0, \[r0, #4095\].*
			c0: R_ARM_LDR_PC_G0	localsym
0[0-9a-f]+ <[^>]+> e5900fff 	ldr	r0, \[r0, #4095\].*
			c4: R_ARM_LDR_PC_G1	localsym
0[0-9a-f]+ <[^>]+> e5900fff 	ldr	r0, \[r0, #4095\].*
			c8: R_ARM_LDR_PC_G2	localsym
0[0-9a-f]+ <[^>]+> e5900fff 	ldr	r0, \[r0, #4095\].*
			cc: R_ARM_LDR_SB_G0	localsym
0[0-9a-f]+ <[^>]+> e5900fff 	ldr	r0, \[r0, #4095\].*
			d0: R_ARM_LDR_SB_G1	localsym
0[0-9a-f]+ <[^>]+> e5900fff 	ldr	r0, \[r0, #4095\].*
			d4: R_ARM_LDR_SB_G2	localsym
0[0-9a-f]+ <[^>]+> e5800fff 	str	r0, \[r0, #4095\].*
			d8: R_ARM_LDR_PC_G0	localsym
0[0-9a-f]+ <[^>]+> e5800fff 	str	r0, \[r0, #4095\].*
			dc: R_ARM_LDR_PC_G1	localsym
0[0-9a-f]+ <[^>]+> e5800fff 	str	r0, \[r0, #4095\].*
			e0: R_ARM_LDR_PC_G2	localsym
0[0-9a-f]+ <[^>]+> e5800fff 	str	r0, \[r0, #4095\].*
			e4: R_ARM_LDR_SB_G0	localsym
0[0-9a-f]+ <[^>]+> e5800fff 	str	r0, \[r0, #4095\].*
			e8: R_ARM_LDR_SB_G1	localsym
0[0-9a-f]+ <[^>]+> e5800fff 	str	r0, \[r0, #4095\].*
			ec: R_ARM_LDR_SB_G2	localsym
0[0-9a-f]+ <[^>]+> e5d00fff 	ldrb	r0, \[r0, #4095\].*
			f0: R_ARM_LDR_PC_G0	localsym
0[0-9a-f]+ <[^>]+> e5d00fff 	ldrb	r0, \[r0, #4095\].*
			f4: R_ARM_LDR_PC_G1	localsym
0[0-9a-f]+ <[^>]+> e5d00fff 	ldrb	r0, \[r0, #4095\].*
			f8: R_ARM_LDR_PC_G2	localsym
0[0-9a-f]+ <[^>]+> e5d00fff 	ldrb	r0, \[r0, #4095\].*
			fc: R_ARM_LDR_SB_G0	localsym
0[0-9a-f]+ <[^>]+> e5d00fff 	ldrb	r0, \[r0, #4095\].*
			100: R_ARM_LDR_SB_G1	localsym
0[0-9a-f]+ <[^>]+> e5d00fff 	ldrb	r0, \[r0, #4095\].*
			104: R_ARM_LDR_SB_G2	localsym
0[0-9a-f]+ <[^>]+> e5c00fff 	strb	r0, \[r0, #4095\].*
			108: R_ARM_LDR_PC_G0	localsym
0[0-9a-f]+ <[^>]+> e5c00fff 	strb	r0, \[r0, #4095\].*
			10c: R_ARM_LDR_PC_G1	localsym
0[0-9a-f]+ <[^>]+> e5c00fff 	strb	r0, \[r0, #4095\].*
			110: R_ARM_LDR_PC_G2	localsym
0[0-9a-f]+ <[^>]+> e5c00fff 	strb	r0, \[r0, #4095\].*
			114: R_ARM_LDR_SB_G0	localsym
0[0-9a-f]+ <[^>]+> e5c00fff 	strb	r0, \[r0, #4095\].*
			118: R_ARM_LDR_SB_G1	localsym
0[0-9a-f]+ <[^>]+> e5c00fff 	strb	r0, \[r0, #4095\].*
			11c: R_ARM_LDR_SB_G2	localsym
0[0-9a-f]+ <[^>]+> e5100fff 	ldr	r0, \[r0, #-4095\].*
			120: R_ARM_LDR_PC_G0	localsym
0[0-9a-f]+ <[^>]+> e5100fff 	ldr	r0, \[r0, #-4095\].*
			124: R_ARM_LDR_PC_G1	localsym
0[0-9a-f]+ <[^>]+> e5100fff 	ldr	r0, \[r0, #-4095\].*
			128: R_ARM_LDR_PC_G2	localsym
0[0-9a-f]+ <[^>]+> e5100fff 	ldr	r0, \[r0, #-4095\].*
			12c: R_ARM_LDR_SB_G0	localsym
0[0-9a-f]+ <[^>]+> e5100fff 	ldr	r0, \[r0, #-4095\].*
			130: R_ARM_LDR_SB_G1	localsym
0[0-9a-f]+ <[^>]+> e5100fff 	ldr	r0, \[r0, #-4095\].*
			134: R_ARM_LDR_SB_G2	localsym
0[0-9a-f]+ <[^>]+> e5000fff 	str	r0, \[r0, #-4095\].*
			138: R_ARM_LDR_PC_G0	localsym
0[0-9a-f]+ <[^>]+> e5000fff 	str	r0, \[r0, #-4095\].*
			13c: R_ARM_LDR_PC_G1	localsym
0[0-9a-f]+ <[^>]+> e5000fff 	str	r0, \[r0, #-4095\].*
			140: R_ARM_LDR_PC_G2	localsym
0[0-9a-f]+ <[^>]+> e5000fff 	str	r0, \[r0, #-4095\].*
			144: R_ARM_LDR_SB_G0	localsym
0[0-9a-f]+ <[^>]+> e5000fff 	str	r0, \[r0, #-4095\].*
			148: R_ARM_LDR_SB_G1	localsym
0[0-9a-f]+ <[^>]+> e5000fff 	str	r0, \[r0, #-4095\].*
			14c: R_ARM_LDR_SB_G2	localsym
0[0-9a-f]+ <[^>]+> e5500fff 	ldrb	r0, \[r0, #-4095\].*
			150: R_ARM_LDR_PC_G0	localsym
0[0-9a-f]+ <[^>]+> e5500fff 	ldrb	r0, \[r0, #-4095\].*
			154: R_ARM_LDR_PC_G1	localsym
0[0-9a-f]+ <[^>]+> e5500fff 	ldrb	r0, \[r0, #-4095\].*
			158: R_ARM_LDR_PC_G2	localsym
0[0-9a-f]+ <[^>]+> e5500fff 	ldrb	r0, \[r0, #-4095\].*
			15c: R_ARM_LDR_SB_G0	localsym
0[0-9a-f]+ <[^>]+> e5500fff 	ldrb	r0, \[r0, #-4095\].*
			160: R_ARM_LDR_SB_G1	localsym
0[0-9a-f]+ <[^>]+> e5500fff 	ldrb	r0, \[r0, #-4095\].*
			164: R_ARM_LDR_SB_G2	localsym
0[0-9a-f]+ <[^>]+> e5400fff 	strb	r0, \[r0, #-4095\].*
			168: R_ARM_LDR_PC_G0	localsym
0[0-9a-f]+ <[^>]+> e5400fff 	strb	r0, \[r0, #-4095\].*
			16c: R_ARM_LDR_PC_G1	localsym
0[0-9a-f]+ <[^>]+> e5400fff 	strb	r0, \[r0, #-4095\].*
			170: R_ARM_LDR_PC_G2	localsym
0[0-9a-f]+ <[^>]+> e5400fff 	strb	r0, \[r0, #-4095\].*
			174: R_ARM_LDR_SB_G0	localsym
0[0-9a-f]+ <[^>]+> e5400fff 	strb	r0, \[r0, #-4095\].*
			178: R_ARM_LDR_SB_G1	localsym
0[0-9a-f]+ <[^>]+> e5400fff 	strb	r0, \[r0, #-4095\].*
			17c: R_ARM_LDR_SB_G2	localsym
0[0-9a-f]+ <[^>]+> e3a00000 	mov	r0, #0
@


1.4
log
@        PR 10288
        * arm-dis.c (enum opcode_sentinels): New:  Used to mark the
        boundary between variaant and generic coprocessor instuctions.
        (coprocessor): Use it.
        Fix architecture version of MCRR and MRRC instructions.
        (arm_opcdes): Fix patterns for STRB and STRH instructions.
        (print_insn_coprocessor): Check architecture and extension masks.
        Print a hexadecimal version of any decimal constant that is
        outside of the range of -16 to +32.
        (print_arm_address): Add a return value of the offset used in the
        adress, if it is worth printing a hexadecimal version of it.
        (print_insn_neon): Print a hexadecimal version of any decimal
        constant that is outside of the range of -16 to +32.
        (print_insn_arm): Likewise.
        (print_insn_thumb16): Likewise.
        (print_insn_thumb32): Likewise.

        PR 10297
        * arm-dis.c (UNDEFINED_INSTRUCTION): New macro for a description
        of an undefined instruction.
        (arm_opcodes): Use it.
        (thumb_opcod): Use it.
        (thumb32_opc): Use it.

        Update expected disassembly regrexps in GAS and LD testsuites.
@
text
@d200 1
a200 1
0[0-9a-f]+ <[^>]+> e3a00000 	mov	r0, #0	; 0x0
@


1.3
log
@        * gas/arm/abs12.d: Update expected disassembly.
        * gas/arm/tls_vxworks.d: Likewise.
        * gas/arm/unwind_vxworks.d: Likewise.
        * gas/arm/group-reloc-alu-encoding-bad.d: Skip for vxworks
        targets.
        * gas/arm/group-reloc-alu.d: Likewise.
        * gas/arm/group-reloc-ldc-encoding-bad.d: Likewise.
        * gas/arm/group-reloc-ldc.d: Likewise.
        * gas/arm/group-reloc-ldr-encoding-bad.d: Likewise.
        * gas/arm/group-reloc-ldr.d: Likewise.
        * gas/arm/group-reloc-ldrs-encoding-bad.d: Likewise.
        * gas/arm/group-reloc-ldrs.d: Likewise.
        * gas/arm/local_function.d: Likewise.
        * gas/arm/mapshort-elf.d: Likewise.
        * gas/arm/undefined.d: Likewise.
@
text
@d8 1
a8 1
0[0-9a-f]+ <[^>]+> e5900fff 	ldr	r0, \[r0, #4095\]
d10 1
a10 1
0[0-9a-f]+ <[^>]+> e5900fff 	ldr	r0, \[r0, #4095\]
d12 1
a12 1
0[0-9a-f]+ <[^>]+> e5900fff 	ldr	r0, \[r0, #4095\]
d14 1
a14 1
0[0-9a-f]+ <[^>]+> e5900fff 	ldr	r0, \[r0, #4095\]
d16 1
a16 1
0[0-9a-f]+ <[^>]+> e5900fff 	ldr	r0, \[r0, #4095\]
d18 1
a18 1
0[0-9a-f]+ <[^>]+> e5900fff 	ldr	r0, \[r0, #4095\]
d20 1
a20 1
0[0-9a-f]+ <[^>]+> e5800fff 	str	r0, \[r0, #4095\]
d22 1
a22 1
0[0-9a-f]+ <[^>]+> e5800fff 	str	r0, \[r0, #4095\]
d24 1
a24 1
0[0-9a-f]+ <[^>]+> e5800fff 	str	r0, \[r0, #4095\]
d26 1
a26 1
0[0-9a-f]+ <[^>]+> e5800fff 	str	r0, \[r0, #4095\]
d28 1
a28 1
0[0-9a-f]+ <[^>]+> e5800fff 	str	r0, \[r0, #4095\]
d30 1
a30 1
0[0-9a-f]+ <[^>]+> e5800fff 	str	r0, \[r0, #4095\]
d32 1
a32 1
0[0-9a-f]+ <[^>]+> e5d00fff 	ldrb	r0, \[r0, #4095\]
d34 1
a34 1
0[0-9a-f]+ <[^>]+> e5d00fff 	ldrb	r0, \[r0, #4095\]
d36 1
a36 1
0[0-9a-f]+ <[^>]+> e5d00fff 	ldrb	r0, \[r0, #4095\]
d38 1
a38 1
0[0-9a-f]+ <[^>]+> e5d00fff 	ldrb	r0, \[r0, #4095\]
d40 1
a40 1
0[0-9a-f]+ <[^>]+> e5d00fff 	ldrb	r0, \[r0, #4095\]
d42 1
a42 1
0[0-9a-f]+ <[^>]+> e5d00fff 	ldrb	r0, \[r0, #4095\]
d44 1
a44 1
0[0-9a-f]+ <[^>]+> e5c00fff 	strb	r0, \[r0, #4095\]
d46 1
a46 1
0[0-9a-f]+ <[^>]+> e5c00fff 	strb	r0, \[r0, #4095\]
d48 1
a48 1
0[0-9a-f]+ <[^>]+> e5c00fff 	strb	r0, \[r0, #4095\]
d50 1
a50 1
0[0-9a-f]+ <[^>]+> e5c00fff 	strb	r0, \[r0, #4095\]
d52 1
a52 1
0[0-9a-f]+ <[^>]+> e5c00fff 	strb	r0, \[r0, #4095\]
d54 1
a54 1
0[0-9a-f]+ <[^>]+> e5c00fff 	strb	r0, \[r0, #4095\]
d56 1
a56 1
0[0-9a-f]+ <[^>]+> e5100fff 	ldr	r0, \[r0, #-4095\]
d58 1
a58 1
0[0-9a-f]+ <[^>]+> e5100fff 	ldr	r0, \[r0, #-4095\]
d60 1
a60 1
0[0-9a-f]+ <[^>]+> e5100fff 	ldr	r0, \[r0, #-4095\]
d62 1
a62 1
0[0-9a-f]+ <[^>]+> e5100fff 	ldr	r0, \[r0, #-4095\]
d64 1
a64 1
0[0-9a-f]+ <[^>]+> e5100fff 	ldr	r0, \[r0, #-4095\]
d66 1
a66 1
0[0-9a-f]+ <[^>]+> e5100fff 	ldr	r0, \[r0, #-4095\]
d68 1
a68 1
0[0-9a-f]+ <[^>]+> e5000fff 	str	r0, \[r0, #-4095\]
d70 1
a70 1
0[0-9a-f]+ <[^>]+> e5000fff 	str	r0, \[r0, #-4095\]
d72 1
a72 1
0[0-9a-f]+ <[^>]+> e5000fff 	str	r0, \[r0, #-4095\]
d74 1
a74 1
0[0-9a-f]+ <[^>]+> e5000fff 	str	r0, \[r0, #-4095\]
d76 1
a76 1
0[0-9a-f]+ <[^>]+> e5000fff 	str	r0, \[r0, #-4095\]
d78 1
a78 1
0[0-9a-f]+ <[^>]+> e5000fff 	str	r0, \[r0, #-4095\]
d80 1
a80 1
0[0-9a-f]+ <[^>]+> e5500fff 	ldrb	r0, \[r0, #-4095\]
d82 1
a82 1
0[0-9a-f]+ <[^>]+> e5500fff 	ldrb	r0, \[r0, #-4095\]
d84 1
a84 1
0[0-9a-f]+ <[^>]+> e5500fff 	ldrb	r0, \[r0, #-4095\]
d86 1
a86 1
0[0-9a-f]+ <[^>]+> e5500fff 	ldrb	r0, \[r0, #-4095\]
d88 1
a88 1
0[0-9a-f]+ <[^>]+> e5500fff 	ldrb	r0, \[r0, #-4095\]
d90 1
a90 1
0[0-9a-f]+ <[^>]+> e5500fff 	ldrb	r0, \[r0, #-4095\]
d92 1
a92 1
0[0-9a-f]+ <[^>]+> e5400fff 	strb	r0, \[r0, #-4095\]
d94 1
a94 1
0[0-9a-f]+ <[^>]+> e5400fff 	strb	r0, \[r0, #-4095\]
d96 1
a96 1
0[0-9a-f]+ <[^>]+> e5400fff 	strb	r0, \[r0, #-4095\]
d98 1
a98 1
0[0-9a-f]+ <[^>]+> e5400fff 	strb	r0, \[r0, #-4095\]
d100 1
a100 1
0[0-9a-f]+ <[^>]+> e5400fff 	strb	r0, \[r0, #-4095\]
d102 1
a102 1
0[0-9a-f]+ <[^>]+> e5400fff 	strb	r0, \[r0, #-4095\]
d104 1
a104 1
0[0-9a-f]+ <[^>]+> e5900fff 	ldr	r0, \[r0, #4095\]
d106 1
a106 1
0[0-9a-f]+ <[^>]+> e5900fff 	ldr	r0, \[r0, #4095\]
d108 1
a108 1
0[0-9a-f]+ <[^>]+> e5900fff 	ldr	r0, \[r0, #4095\]
d110 1
a110 1
0[0-9a-f]+ <[^>]+> e5900fff 	ldr	r0, \[r0, #4095\]
d112 1
a112 1
0[0-9a-f]+ <[^>]+> e5900fff 	ldr	r0, \[r0, #4095\]
d114 1
a114 1
0[0-9a-f]+ <[^>]+> e5900fff 	ldr	r0, \[r0, #4095\]
d116 1
a116 1
0[0-9a-f]+ <[^>]+> e5800fff 	str	r0, \[r0, #4095\]
d118 1
a118 1
0[0-9a-f]+ <[^>]+> e5800fff 	str	r0, \[r0, #4095\]
d120 1
a120 1
0[0-9a-f]+ <[^>]+> e5800fff 	str	r0, \[r0, #4095\]
d122 1
a122 1
0[0-9a-f]+ <[^>]+> e5800fff 	str	r0, \[r0, #4095\]
d124 1
a124 1
0[0-9a-f]+ <[^>]+> e5800fff 	str	r0, \[r0, #4095\]
d126 1
a126 1
0[0-9a-f]+ <[^>]+> e5800fff 	str	r0, \[r0, #4095\]
d128 1
a128 1
0[0-9a-f]+ <[^>]+> e5d00fff 	ldrb	r0, \[r0, #4095\]
d130 1
a130 1
0[0-9a-f]+ <[^>]+> e5d00fff 	ldrb	r0, \[r0, #4095\]
d132 1
a132 1
0[0-9a-f]+ <[^>]+> e5d00fff 	ldrb	r0, \[r0, #4095\]
d134 1
a134 1
0[0-9a-f]+ <[^>]+> e5d00fff 	ldrb	r0, \[r0, #4095\]
d136 1
a136 1
0[0-9a-f]+ <[^>]+> e5d00fff 	ldrb	r0, \[r0, #4095\]
d138 1
a138 1
0[0-9a-f]+ <[^>]+> e5d00fff 	ldrb	r0, \[r0, #4095\]
d140 1
a140 1
0[0-9a-f]+ <[^>]+> e5c00fff 	strb	r0, \[r0, #4095\]
d142 1
a142 1
0[0-9a-f]+ <[^>]+> e5c00fff 	strb	r0, \[r0, #4095\]
d144 1
a144 1
0[0-9a-f]+ <[^>]+> e5c00fff 	strb	r0, \[r0, #4095\]
d146 1
a146 1
0[0-9a-f]+ <[^>]+> e5c00fff 	strb	r0, \[r0, #4095\]
d148 1
a148 1
0[0-9a-f]+ <[^>]+> e5c00fff 	strb	r0, \[r0, #4095\]
d150 1
a150 1
0[0-9a-f]+ <[^>]+> e5c00fff 	strb	r0, \[r0, #4095\]
d152 1
a152 1
0[0-9a-f]+ <[^>]+> e5100fff 	ldr	r0, \[r0, #-4095\]
d154 1
a154 1
0[0-9a-f]+ <[^>]+> e5100fff 	ldr	r0, \[r0, #-4095\]
d156 1
a156 1
0[0-9a-f]+ <[^>]+> e5100fff 	ldr	r0, \[r0, #-4095\]
d158 1
a158 1
0[0-9a-f]+ <[^>]+> e5100fff 	ldr	r0, \[r0, #-4095\]
d160 1
a160 1
0[0-9a-f]+ <[^>]+> e5100fff 	ldr	r0, \[r0, #-4095\]
d162 1
a162 1
0[0-9a-f]+ <[^>]+> e5100fff 	ldr	r0, \[r0, #-4095\]
d164 1
a164 1
0[0-9a-f]+ <[^>]+> e5000fff 	str	r0, \[r0, #-4095\]
d166 1
a166 1
0[0-9a-f]+ <[^>]+> e5000fff 	str	r0, \[r0, #-4095\]
d168 1
a168 1
0[0-9a-f]+ <[^>]+> e5000fff 	str	r0, \[r0, #-4095\]
d170 1
a170 1
0[0-9a-f]+ <[^>]+> e5000fff 	str	r0, \[r0, #-4095\]
d172 1
a172 1
0[0-9a-f]+ <[^>]+> e5000fff 	str	r0, \[r0, #-4095\]
d174 1
a174 1
0[0-9a-f]+ <[^>]+> e5000fff 	str	r0, \[r0, #-4095\]
d176 1
a176 1
0[0-9a-f]+ <[^>]+> e5500fff 	ldrb	r0, \[r0, #-4095\]
d178 1
a178 1
0[0-9a-f]+ <[^>]+> e5500fff 	ldrb	r0, \[r0, #-4095\]
d180 1
a180 1
0[0-9a-f]+ <[^>]+> e5500fff 	ldrb	r0, \[r0, #-4095\]
d182 1
a182 1
0[0-9a-f]+ <[^>]+> e5500fff 	ldrb	r0, \[r0, #-4095\]
d184 1
a184 1
0[0-9a-f]+ <[^>]+> e5500fff 	ldrb	r0, \[r0, #-4095\]
d186 1
a186 1
0[0-9a-f]+ <[^>]+> e5500fff 	ldrb	r0, \[r0, #-4095\]
d188 1
a188 1
0[0-9a-f]+ <[^>]+> e5400fff 	strb	r0, \[r0, #-4095\]
d190 1
a190 1
0[0-9a-f]+ <[^>]+> e5400fff 	strb	r0, \[r0, #-4095\]
d192 1
a192 1
0[0-9a-f]+ <[^>]+> e5400fff 	strb	r0, \[r0, #-4095\]
d194 1
a194 1
0[0-9a-f]+ <[^>]+> e5400fff 	strb	r0, \[r0, #-4095\]
d196 1
a196 1
0[0-9a-f]+ <[^>]+> e5400fff 	strb	r0, \[r0, #-4095\]
d198 1
a198 1
0[0-9a-f]+ <[^>]+> e5400fff 	strb	r0, \[r0, #-4095\]
@


1.2
log
@Skip for non-ELF targets.
@
text
@d2 1
a2 1
#skip: *-*-*coff *-*-pe *-*-wince *-*-*aout* *-*-netbsd *-*-riscix*
@


1.1
log
@	* include/elf/arm.h: Correct names of R_ARM_LDC_G{0,1,2}
	to R_ARM_LDC_SB_G{0,1,2} respectively.

bfd/
	* bfd-in2.h: Regenerate.
	* elf32-arm.c (R_ARM_ALU_PC_G0_NC, R_ARM_ALU_PC_G0,
	R_ARM_ALU_PC_G1_NC, R_ARM_ALU_PC_G1, R_ARM_ALU_PC_G2,
	R_ARM_LDR_PC_G1, R_ARM_LDR_PC_G2, R_ARM_LDRS_PC_G0,
	R_ARM_LDRS_PC_G1, R_ARM_LDRS_PC_G2, R_ARM_LDC_PC_G0,
	R_ARM_LDC_PC_G1, R_ARM_LDC_PC_G2, R_ARM_ALU_SB_G0_NC,
	R_ARM_ALU_SB_G0, R_ARM_ALU_SB_G1_NC, R_ARM_ALU_SB_G1,
	R_ARM_ALU_SB_G2, R_ARM_LDR_SB_G0, R_ARM_LDR_SB_G1,
	R_ARM_LDR_SB_G2, R_ARM_LDRS_SB_G0, R_ARM_LDRS_SB_G1,
	R_ARM_LDRS_SB_G2, R_ARM_LDC_SB_G0, R_ARM_LDC_SB_G1,
	R_ARM_LDC_SB_G2): New relocation types.
	(R_ARM_PC13): Rename to AAELF name R_ARM_LDR_PC_G0 and
	adjust HOWTO entry to be consistent with R_ARM_LDR_PC_G1
	and friends.
	(elf32_arm_howto_table_3): Delete; contents merged into
	elf32_arm_howto_table_2.
	(elf32_arm_howto_from_type): Adjust correspondingly.
	(elf32_arm_reloc_map): Extend with the above relocations.
	(calculate_group_reloc_mask): New function.
	(identify_add_or_sub): New function.
	(elf32_arm_final_link_relocate): Support for the above
	relocations.
	* reloc.c: Add enumeration entries for BFD_RELOC_ARM_...
	codes to correspond to the above relocations.

gas/
	* config/tc-arm.c (enum parse_operand_result): New.
	(struct group_reloc_table_entry): New.
	(enum group_reloc_type): New.
	(group_reloc_table): New array.
	(find_group_reloc_table_entry): New function.
	(parse_shifter_operand_group_reloc): New function.
	(parse_address_main): New function, incorporating code
	from the old parse_address function.  To be used via...
	(parse_address): wrapper for parse_address_main; and
	(parse_address_group_reloc): new function, likewise.
	(enum operand_parse_code): New codes OP_SHG, OP_ADDRGLDR,
	OP_ADDRGLDRS, OP_ADDRGLDC.
	(parse_operands): Support for these new operand codes.
	New macro po_misc_or_fail_no_backtrack.
	(encode_arm_cp_address): Preserve group relocations.
	(insns): Modify to use the above operand codes where group
	relocations are permitted.
	(md_apply_fix): Handle the group relocations
	ALU_PC_G0_NC through LDC_SB_G2.
	(tc_gen_reloc): Likewise.
	(arm_force_relocation): Leave group relocations for the linker.
	(arm_fix_adjustable): Likewise.

gas/testsuite/
	* gas/arm/group-reloc-alu.d: New test.
	* gas/arm/group-reloc-alu-encoding-bad.d: New test.
	* gas/arm/group-reloc-alu-encoding-bad.l: New test.
	* gas/arm/group-reloc-alu-encoding-bad.s: New test.
	* gas/arm/group-reloc-alu-parsing-bad.d: New test.
	* gas/arm/group-reloc-alu-parsing-bad.l: New test.
	* gas/arm/group-reloc-alu-parsing-bad.s: New test.
	* gas/arm/group-reloc-alu.s: New test.
	* gas/arm/group-reloc-ldc.d: New test.
	* gas/arm/group-reloc-ldc-encoding-bad.d: New test.
	* gas/arm/group-reloc-ldc-encoding-bad.l: New test.
	* gas/arm/group-reloc-ldc-encoding-bad.s: New test.
	* gas/arm/group-reloc-ldc-parsing-bad.d: New test.
	* gas/arm/group-reloc-ldc-parsing-bad.l: New test.
	* gas/arm/group-reloc-ldc-parsing-bad.s: New test.
	* gas/arm/group-reloc-ldc.s: New test.
	* gas/arm/group-reloc-ldr.d: New test.
	* gas/arm/group-reloc-ldr-encoding-bad.d: New test.
	* gas/arm/group-reloc-ldr-encoding-bad.l: New test.
	* gas/arm/group-reloc-ldr-encoding-bad.s: New test.
	* gas/arm/group-reloc-ldr-parsing-bad.d: New test.
	* gas/arm/group-reloc-ldr-parsing-bad.l: New test.
	* gas/arm/group-reloc-ldr-parsing-bad.s: New test.
	* gas/arm/group-reloc-ldr.s: New test.
	* gas/arm/group-reloc-ldrs.d: New test.
	* gas/arm/group-reloc-ldrs-encoding-bad.d: New test.
	* gas/arm/group-reloc-ldrs-encoding-bad.l: New test.
	* gas/arm/group-reloc-ldrs-encoding-bad.s: New test.
	* gas/arm/group-reloc-ldrs-parsing-bad.d: New test.
	* gas/arm/group-reloc-ldrs-parsing-bad.l: New test.
	* gas/arm/group-reloc-ldrs-parsing-bad.s: New test.
	* gas/arm/group-reloc-ldrs.s: New test.

ld/testsuite/
	* ld-arm/group-relocs-alu-bad.d: New test.
	* ld-arm/group-relocs-alu-bad.s: New test.
	* ld-arm/group-relocs.d: New test.
	* ld-arm/group-relocs-ldc-bad.d: New test.
	* ld-arm/group-relocs-ldc-bad.s: New test.
	* ld-arm/group-relocs-ldr-bad.d: New test.
	* ld-arm/group-relocs-ldr-bad.s: New test.
	* ld-arm/group-relocs-ldrs-bad.d: New test.
	* ld-arm/group-relocs-ldrs-bad.s: New test.
	* ld-arm/group-relocs.s: New test.
	* ld-arm/arm-elf.exp: Wire in new tests.
@
text
@d2 1
@


1.1.2.1
log
@Support for ARM "group relocations" numbers 4, and 57 through 83.

	* include/elf/arm.h: Correct names of R_ARM_LDC_G{0,1,2}
	to R_ARM_LDC_SB_G{0,1,2} respectively.

	bfd/
	* bfd-in2.h: Regenerate.
	* elf32-arm.c (R_ARM_ALU_PC_G0_NC, R_ARM_ALU_PC_G0,
	R_ARM_ALU_PC_G1_NC, R_ARM_ALU_PC_G1, R_ARM_ALU_PC_G2,
	R_ARM_LDR_PC_G1, R_ARM_LDR_PC_G2, R_ARM_LDRS_PC_G0,
	R_ARM_LDRS_PC_G1, R_ARM_LDRS_PC_G2, R_ARM_LDC_PC_G0,
	R_ARM_LDC_PC_G1, R_ARM_LDC_PC_G2, R_ARM_ALU_SB_G0_NC,
	R_ARM_ALU_SB_G0, R_ARM_ALU_SB_G1_NC, R_ARM_ALU_SB_G1,
	R_ARM_ALU_SB_G2, R_ARM_LDR_SB_G0, R_ARM_LDR_SB_G1,
	R_ARM_LDR_SB_G2, R_ARM_LDRS_SB_G0, R_ARM_LDRS_SB_G1,
	R_ARM_LDRS_SB_G2, R_ARM_LDC_SB_G0, R_ARM_LDC_SB_G1,
	R_ARM_LDC_SB_G2): New relocation types.
	(R_ARM_PC13): Rename to AAELF name R_ARM_LDR_PC_G0 and
	adjust HOWTO entry to be consistent with R_ARM_LDR_PC_G1
	and friends.
	(elf32_arm_howto_table_3): Delete; contents merged into
	elf32_arm_howto_table_2.
	(elf32_arm_howto_from_type): Adjust correspondingly.
	(elf32_arm_reloc_map): Extend with the above relocations.
	(calculate_group_reloc_mask): New function.
	(identify_add_or_sub): New function.
	(elf32_arm_final_link_relocate): Support for the above
	relocations.
	* reloc.c: Add enumeration entries for BFD_RELOC_ARM_...
	codes to correspond to the above relocations.

	gas/
	* config/tc-arm.c (enum parse_operand_result): New.
	(struct group_reloc_table_entry): New.
	(enum group_reloc_type): New.
	(group_reloc_table): New array.
	(find_group_reloc_table_entry): New function.
	(parse_shifter_operand_group_reloc): New function.
	(parse_address_main): New function, incorporating code
	from the old parse_address function.  To be used via...
	(parse_address): wrapper for parse_address_main; and
	(parse_address_group_reloc): new function, likewise.
	(enum operand_parse_code): New codes OP_SHG, OP_ADDRGLDR,
	OP_ADDRGLDRS, OP_ADDRGLDC.
	(parse_operands): Support for these new operand codes.
	New macro po_misc_or_fail_no_backtrack.
	(encode_arm_cp_address): Preserve group relocations.
	(insns): Modify to use the above operand codes where group
	relocations are permitted.
	(md_apply_fix): Handle the group relocations
	ALU_PC_G0_NC through LDC_SB_G2.
	(tc_gen_reloc): Likewise.
	(arm_force_relocation): Leave group relocations for the linker.
	(arm_fix_adjustable): Likewise.

	gas/testsuite/
	* gas/arm/group-reloc-alu.d: New test.
	* gas/arm/group-reloc-alu-encoding-bad.d: New test.
	* gas/arm/group-reloc-alu-encoding-bad.l: New test.
	* gas/arm/group-reloc-alu-encoding-bad.s: New test.
	* gas/arm/group-reloc-alu-parsing-bad.d: New test.
	* gas/arm/group-reloc-alu-parsing-bad.l: New test.
	* gas/arm/group-reloc-alu-parsing-bad.s: New test.
	* gas/arm/group-reloc-alu.s: New test.
	* gas/arm/group-reloc-ldc.d: New test.
	* gas/arm/group-reloc-ldc-encoding-bad.d: New test.
	* gas/arm/group-reloc-ldc-encoding-bad.l: New test.
	* gas/arm/group-reloc-ldc-encoding-bad.s: New test.
	* gas/arm/group-reloc-ldc-parsing-bad.d: New test.
	* gas/arm/group-reloc-ldc-parsing-bad.l: New test.
	* gas/arm/group-reloc-ldc-parsing-bad.s: New test.
	* gas/arm/group-reloc-ldc.s: New test.
	* gas/arm/group-reloc-ldr.d: New test.
	* gas/arm/group-reloc-ldr-encoding-bad.d: New test.
	* gas/arm/group-reloc-ldr-encoding-bad.l: New test.
	* gas/arm/group-reloc-ldr-encoding-bad.s: New test.
	* gas/arm/group-reloc-ldr-parsing-bad.d: New test.
	* gas/arm/group-reloc-ldr-parsing-bad.l: New test.
	* gas/arm/group-reloc-ldr-parsing-bad.s: New test.
	* gas/arm/group-reloc-ldr.s: New test.
	* gas/arm/group-reloc-ldrs.d: New test.
	* gas/arm/group-reloc-ldrs-encoding-bad.d: New test.
	* gas/arm/group-reloc-ldrs-encoding-bad.l: New test.
	* gas/arm/group-reloc-ldrs-encoding-bad.s: New test.
	* gas/arm/group-reloc-ldrs-parsing-bad.d: New test.
	* gas/arm/group-reloc-ldrs-parsing-bad.l: New test.
	* gas/arm/group-reloc-ldrs-parsing-bad.s: New test.
	* gas/arm/group-reloc-ldrs.s: New test.

	ld/testsuite/
	* ld-arm/group-relocs-alu-bad.d: New test.
	* ld-arm/group-relocs-alu-bad.s: New test.
	* ld-arm/group-relocs.d: New test.
	* ld-arm/group-relocs-ldc-bad.d: New test.
	* ld-arm/group-relocs-ldc-bad.s: New test.
	* ld-arm/group-relocs-ldr-bad.d: New test.
	* ld-arm/group-relocs-ldr-bad.s: New test.
	* ld-arm/group-relocs-ldrs-bad.d: New test.
	* ld-arm/group-relocs-ldrs-bad.s: New test.
	* ld-arm/group-relocs.s: New test.
	* ld-arm/arm-elf.exp: Wire in new tests.
@
text
@@

