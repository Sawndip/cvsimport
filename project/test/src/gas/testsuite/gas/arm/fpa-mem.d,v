head	1.9;
access;
symbols
	binutils-2_24-branch:1.9.0.10
	binutils-2_24-branchpoint:1.9
	binutils-2_21_1:1.9
	binutils-2_23_2:1.9
	binutils-2_23_1:1.9
	binutils-2_23:1.9
	binutils-2_23-branch:1.9.0.8
	binutils-2_23-branchpoint:1.9
	binutils-2_22_branch:1.9.0.6
	binutils-2_22:1.9
	binutils-2_22-branch:1.9.0.4
	binutils-2_22-branchpoint:1.9
	binutils-2_21:1.9
	binutils-2_21-branch:1.9.0.2
	binutils-2_21-branchpoint:1.9
	binutils-2_20_1:1.8
	binutils-2_20:1.8
	binutils-arc-20081103-branch:1.6.0.14
	binutils-arc-20081103-branchpoint:1.6
	binutils-2_20-branch:1.8.0.2
	binutils-2_20-branchpoint:1.8
	dje-cgen-play1-branch:1.6.0.12
	dje-cgen-play1-branchpoint:1.6
	arc-20081103-branch:1.6.0.10
	arc-20081103-branchpoint:1.6
	binutils-2_19_1:1.6
	binutils-2_19:1.6
	binutils-2_19-branch:1.6.0.8
	binutils-2_19-branchpoint:1.6
	binutils-2_18:1.6
	binutils-2_18-branch:1.6.0.6
	binutils-2_18-branchpoint:1.6
	binutils-csl-coldfire-4_1-32:1.6
	binutils-csl-sourcerygxx-4_1-32:1.6
	binutils-csl-innovasic-fido-3_4_4-33:1.6
	binutils-csl-sourcerygxx-3_4_4-32:1.4
	binutils-csl-coldfire-4_1-30:1.6
	binutils-csl-sourcerygxx-4_1-30:1.6
	binutils-csl-coldfire-4_1-28:1.6
	binutils-csl-sourcerygxx-4_1-29:1.6
	binutils-csl-sourcerygxx-4_1-28:1.6
	binutils-csl-arm-2006q3-27:1.6
	binutils-csl-sourcerygxx-4_1-27:1.6
	binutils-csl-arm-2006q3-26:1.6
	binutils-csl-sourcerygxx-4_1-26:1.6
	binutils-csl-sourcerygxx-4_1-25:1.6
	binutils-csl-sourcerygxx-4_1-24:1.6
	binutils-csl-sourcerygxx-4_1-23:1.6
	binutils-csl-sourcerygxx-4_1-21:1.6
	binutils-csl-arm-2006q3-21:1.6
	binutils-csl-sourcerygxx-4_1-22:1.6
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.6
	binutils-csl-sourcerygxx-4_1-20:1.6
	binutils-csl-arm-2006q3-19:1.6
	binutils-csl-sourcerygxx-4_1-19:1.6
	binutils-csl-sourcerygxx-4_1-18:1.6
	binutils-csl-renesas-4_1-9:1.6
	binutils-csl-sourcerygxx-3_4_4-25:1.4
	binutils-csl-renesas-4_1-8:1.6
	binutils-csl-renesas-4_1-7:1.6
	binutils-csl-renesas-4_1-6:1.6
	binutils-csl-sourcerygxx-4_1-17:1.6
	binutils-csl-sourcerygxx-4_1-14:1.6
	binutils-csl-sourcerygxx-4_1-15:1.6
	binutils-csl-sourcerygxx-4_1-13:1.6
	binutils-2_17:1.6
	binutils-csl-sourcerygxx-4_1-12:1.6
	binutils-csl-sourcerygxx-3_4_4-21:1.6
	binutils-csl-wrs-linux-3_4_4-24:1.4
	binutils-csl-wrs-linux-3_4_4-23:1.4
	binutils-csl-sourcerygxx-4_1-9:1.6
	binutils-csl-sourcerygxx-4_1-8:1.6
	binutils-csl-sourcerygxx-4_1-7:1.6
	binutils-csl-arm-2006q1-6:1.6
	binutils-csl-sourcerygxx-4_1-6:1.6
	binutils-csl-wrs-linux-3_4_4-22:1.4
	binutils-csl-coldfire-4_1-11:1.6
	binutils-csl-sourcerygxx-3_4_4-19:1.6
	binutils-csl-coldfire-4_1-10:1.6
	binutils-csl-sourcerygxx-4_1-5:1.6
	binutils-csl-sourcerygxx-4_1-4:1.6
	binutils-csl-wrs-linux-3_4_4-21:1.4
	binutils-csl-morpho-4_1-4:1.6
	binutils-csl-sourcerygxx-3_4_4-17:1.6
	binutils-csl-wrs-linux-3_4_4-20:1.4
	binutils-2_17-branch:1.6.0.4
	binutils-2_17-branchpoint:1.6
	binutils-csl-2_17-branch:1.6.0.2
	binutils-csl-2_17-branchpoint:1.6
	binutils-csl-gxxpro-3_4-branch:1.4.0.12
	binutils-csl-gxxpro-3_4-branchpoint:1.4
	binutils-2_16_1:1.4
	binutils-csl-arm-2005q1b:1.4
	binutils-2_16:1.4
	binutils-csl-arm-2005q1a:1.4
	binutils-csl-arm-2005q1-branch:1.4.0.10
	binutils-csl-arm-2005q1-branchpoint:1.4
	binutils-2_16-branch:1.4.0.8
	binutils-2_16-branchpoint:1.4
	csl-arm-2004-q3d:1.4
	csl-arm-2004-q3:1.4
	binutils-2_15:1.4
	binutils-2_15-branchpoint:1.4
	csl-arm-2004-q1a:1.4
	csl-arm-2004-q1:1.4
	binutils-2_15-branch:1.4.0.6
	cagney_bfdfile-20040213-branch:1.4.0.4
	cagney_bfdfile-20040213-branchpoint:1.4
	cagney_bigcore-20040122-branch:1.4.0.2
	cagney_bigcore-20040122-branchpoint:1.4
	csl-arm-2003-q4:1.4
	binutils-2_14:1.3
	binutils-2_14-branch:1.3.0.2
	binutils-2_14-branchpoint:1.3
	binutils-2_13_2_1:1.2
	binutils-2_13_2:1.2
	binutils-2_13_1:1.2
	binutils-2_13:1.2
	binutils-2_13-branchpoint:1.2
	binutils-2_13-branch:1.2.0.2
	binutils-2_12_1:1.1
	binutils-2_12:1.1
	binutils-2_12-branch:1.1.0.2
	binutils-2_12-branchpoint:1.1
	binutils_latest_snapshot:1.9;
locks; strict;
comment	@# @;


1.9
date	2009.11.12.14.49.44;	author drow;	state Exp;
branches;
next	1.8;

1.8
date	2009.06.30.11.57.05;	author nickc;	state Exp;
branches;
next	1.7;

1.7
date	2009.06.29.08.08.15;	author nickc;	state Exp;
branches;
next	1.6;

1.6
date	2005.09.30.13.34.16;	author pbrook;	state Exp;
branches;
next	1.5;

1.5
date	2005.09.02.12.50.44;	author pbrook;	state Exp;
branches;
next	1.4;

1.4
date	2003.11.03.14.47.37;	author drow;	state Exp;
branches;
next	1.3;

1.3
date	2002.08.22.16.10.04;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	2002.05.20.17.05.35;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	2002.01.14.17.39.02;	author rearnsha;	state Exp;
branches;
next	;


desc
@@


1.9
log
@	gas/testsuite/
	* gas/arm/copro.d, gas/arm/fp-save.d, gas/arm/float.d,
	gas/arm/fpa-mem.d: Update for removed generic coprocessor instructions
	and expanded PC-relative offsets.

	opcodes/
	* arm-dis.c (coprocessor_opcodes): Use %A instead of %C.  Remove
	generic coprocessor instructions for FPA loads and stores.
	(print_insn_coprocessor): Remove %C support.  Display address for
	PC-relative offsets in %A.
@
text
@#objdump: -dr --prefix-addresses --show-raw-insn
#name: FPA memory insructions
#as: -mfpu=fpa10 -mcpu=arm7m

# Test FPA memory instructions
# This test should work for both big and little-endian assembly.

.*: *file format .*arm.*

Disassembly of section .text:
0+00 <[^>]*> ed900100 ?	ldfs	f0, \[r0\]
0+04 <[^>]*> ec300101 ?	ldfs	f0, \[r0\], #-4
0+08 <[^>]*> ed908100 ?	ldfd	f0, \[r0\]
0+0c <[^>]*> ec308101 ?	ldfd	f0, \[r0\], #-4
0+10 <[^>]*> edd00100 ?	ldfe	f0, \[r0\]
0+14 <[^>]*> ec700101 ?	ldfe	f0, \[r0\], #-4
0+18 <[^>]*> edd08100 ?	ldfp	f0, \[r0\]
0+1c <[^>]*> ec708101 ?	ldfp	f0, \[r0\], #-4
0+20 <[^>]*> ed800100 ?	stfs	f0, \[r0\]
0+24 <[^>]*> ec200101 ?	stfs	f0, \[r0\], #-4
0+28 <[^>]*> ed808100 ?	stfd	f0, \[r0\]
0+2c <[^>]*> ec208101 ?	stfd	f0, \[r0\], #-4
0+30 <[^>]*> edc00100 ?	stfe	f0, \[r0\]
0+34 <[^>]*> ec600101 ?	stfe	f0, \[r0\], #-4
0+38 <[^>]*> edc08100 ?	stfp	f0, \[r0\]
0+3c <[^>]*> ec608101 ?	stfp	f0, \[r0\], #-4
0+40 <[^>]*> ed900200 ?	lfm	f0, 4, \[r0\]
0+44 <[^>]*> ed900200 ?	lfm	f0, 4, \[r0\]
0+48 <[^>]*> ed10020c ?	lfm	f0, 4, \[r0, #-48\].*
0+4c <[^>]*> ed800200 ?	sfm	f0, 4, \[r0\]
0+50 <[^>]*> ed00020c ?	sfm	f0, 4, \[r0, #-48\].*
0+54 <[^>]*> ed800200 ?	sfm	f0, 4, \[r0\]
0+58 <[^>]*> 5d800100 ?	stfpls	f0, \[r0\]
0+5c <[^>]*> 5d800100 ?	stfpls	f0, \[r0\]
@


1.8
log
@        PR 10288
        * arm-dis.c (coprocessor): Print the LDC and STC versions of the
        LFM and SFM instructions as comments,.
        Improve consistency of formatting for instructions displayed as
        comments and decimal values displayed with their hexadecimal
        equivalents.
        Formatting tidy ups.

        Updated expected disassembler regexps.
@
text
@d27 2
a28 2
0+40 <[^>]*> ed900200 ?	lfm	f0, 4, \[r0\]	; \(ldc 2, cr0, \[r0\]\)
0+44 <[^>]*> ed900200 ?	lfm	f0, 4, \[r0\]	; \(ldc 2, cr0, \[r0\]\)
d30 1
a30 1
0+4c <[^>]*> ed800200 ?	sfm	f0, 4, \[r0\]	; \(stc 2, cr0, \[r0\]\)
d32 1
a32 1
0+54 <[^>]*> ed800200 ?	sfm	f0, 4, \[r0\]	; \(stc 2, cr0, \[r0\]\)
@


1.7
log
@        PR 10288
        * arm-dis.c (enum opcode_sentinels): New:  Used to mark the
        boundary between variaant and generic coprocessor instuctions.
        (coprocessor): Use it.
        Fix architecture version of MCRR and MRRC instructions.
        (arm_opcdes): Fix patterns for STRB and STRH instructions.
        (print_insn_coprocessor): Check architecture and extension masks.
        Print a hexadecimal version of any decimal constant that is
        outside of the range of -16 to +32.
        (print_arm_address): Add a return value of the offset used in the
        adress, if it is worth printing a hexadecimal version of it.
        (print_insn_neon): Print a hexadecimal version of any decimal
        constant that is outside of the range of -16 to +32.
        (print_insn_arm): Likewise.
        (print_insn_thumb16): Likewise.
        (print_insn_thumb32): Likewise.

        PR 10297
        * arm-dis.c (UNDEFINED_INSTRUCTION): New macro for a description
        of an undefined instruction.
        (arm_opcodes): Use it.
        (thumb_opcod): Use it.
        (thumb32_opc): Use it.

        Update expected disassembly regrexps in GAS and LD testsuites.
@
text
@d27 2
a28 2
0+40 <[^>]*> ed900200 ?	lfm	f0, 4, \[r0\]
0+44 <[^>]*> ed900200 ?	lfm	f0, 4, \[r0\]
d30 1
a30 1
0+4c <[^>]*> ed800200 ?	sfm	f0, 4, \[r0\]
d32 1
a32 1
0+54 <[^>]*> ed800200 ?	sfm	f0, 4, \[r0\]
@


1.6
log
@2005-09-30  Paul Brook  <paul@@codesourcery.com>

gas/
	* config/tc-arm.c (opcode_tag): Add OT_cinfix3_legacy.
	(opcode_lookup): Handle OT_cinfix3_legacy.  Revert earlier change for
	normal infix conditions.
	(C3E): Include Thumb-2 definition.
	(CL, cCL): Define.
	(insns): Use them for legacy mnemonics.
gas/testsuite/
	* gas/arm/fpa-mem.s: Remove incorrect comments.
	* gas/arm/fpa-mem.d: Update expected results.
@
text
@d29 1
a29 1
0+48 <[^>]*> ed10020c ?	lfm	f0, 4, \[r0, #-48\]
d31 1
a31 1
0+50 <[^>]*> ed00020c ?	sfm	f0, 4, \[r0, #-48\]
@


1.5
log
@2005-09-02  Paul Brook  <paul@@codesourcery.com>

gas/
	* config/tc-arm.c (opcode_lookup): Look for infix opcode when
	incorrect suffix matches.
gas/testsuite/
	* gas/arm/fpa-mem.d: Test "stfpls".
	* gas/arm/fpa-mem.s: Ditto.
@
text
@d34 1
a34 1
0+5c <[^>]*> 9dc08100 ?	stflsp	f0, \[r0\]
@


1.4
log
@	* gas/arm/arm7t.d: Replace '-#' with '#-'.
	* gas/arm/copro.d: Likewise.
	* gas/arm/fpa-mem.d: Likewise.
	* gas/arm/maverick.c: Likewise.
	* gas/arm/maverick.d: Likewise.
	* gas/arm/vfp1.d: Likewise.
	* gas/arm/vfp1xD.d: Likewise.
	* gas/arm/xscale.d: Likewise.
@
text
@d33 2
a34 2
0+58 <[^>]*> e1a00000 ?	nop[ 	]+\(mov r0,r0\)
0+5c <[^>]*> e1a00000 ?	nop[ 	]+\(mov r0,r0\)
@


1.3
log
@Fix arm-aout failures
@
text
@d12 1
a12 1
0+04 <[^>]*> ec300101 ?	ldfs	f0, \[r0\], -#4
d14 1
a14 1
0+0c <[^>]*> ec308101 ?	ldfd	f0, \[r0\], -#4
d16 1
a16 1
0+14 <[^>]*> ec700101 ?	ldfe	f0, \[r0\], -#4
d18 1
a18 1
0+1c <[^>]*> ec708101 ?	ldfp	f0, \[r0\], -#4
d20 1
a20 1
0+24 <[^>]*> ec200101 ?	stfs	f0, \[r0\], -#4
d22 1
a22 1
0+2c <[^>]*> ec208101 ?	stfd	f0, \[r0\], -#4
d24 1
a24 1
0+34 <[^>]*> ec600101 ?	stfe	f0, \[r0\], -#4
d26 1
a26 1
0+3c <[^>]*> ec608101 ?	stfp	f0, \[r0\], -#4
d29 1
a29 1
0+48 <[^>]*> ed10020c ?	lfm	f0, 4, \[r0, -#48\]
d31 1
a31 1
0+50 <[^>]*> ed00020c ?	sfm	f0, 4, \[r0, -#48\]
@


1.2
log
@Replace deprecated command line switches with their modern equivalents.
@
text
@d33 2
@


1.1
log
@* gas/arm/armv1.s, arm/armv1.d, arm/fpa-mem.s, arm/fpa-mem.d
arm/fpa-monadic.s, arm/fpa-monadic.d, arm/fpa-dyadic.s,
arm/fpa-dyadic.d: New tests.
* gas/arm/le-fpconst.d (objdump): pass --section=.text
* gas/arm/arm.exp: Add new tests.  Run le-fpconst test on elf targets.
@
text
@d3 1
a3 1
#as: -mfpa10
@

