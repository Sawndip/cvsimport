head	1.16;
access;
symbols
	binutils-2_24-branch:1.16.0.2
	binutils-2_24-branchpoint:1.16
	binutils-2_21_1:1.14
	binutils-2_23_2:1.15
	binutils-2_23_1:1.15
	binutils-2_23:1.15
	binutils-2_23-branch:1.15.0.2
	binutils-2_23-branchpoint:1.15
	binutils-2_22_branch:1.14.0.6
	binutils-2_22:1.14
	binutils-2_22-branch:1.14.0.4
	binutils-2_22-branchpoint:1.14
	binutils-2_21:1.14
	binutils-2_21-branch:1.14.0.2
	binutils-2_21-branchpoint:1.14
	binutils-2_20_1:1.13
	binutils-2_20:1.13
	binutils-arc-20081103-branch:1.11.0.8
	binutils-arc-20081103-branchpoint:1.11
	binutils-2_20-branch:1.13.0.2
	binutils-2_20-branchpoint:1.13
	dje-cgen-play1-branch:1.11.0.6
	dje-cgen-play1-branchpoint:1.11
	arc-20081103-branch:1.11.0.4
	arc-20081103-branchpoint:1.11
	binutils-2_19_1:1.11
	binutils-2_19:1.11
	binutils-2_19-branch:1.11.0.2
	binutils-2_19-branchpoint:1.11
	binutils-2_18:1.10
	binutils-2_18-branch:1.10.0.2
	binutils-2_18-branchpoint:1.10
	binutils-csl-coldfire-4_1-32:1.8
	binutils-csl-sourcerygxx-4_1-32:1.8
	binutils-csl-innovasic-fido-3_4_4-33:1.8
	binutils-csl-coldfire-4_1-30:1.8
	binutils-csl-sourcerygxx-4_1-30:1.8
	binutils-csl-coldfire-4_1-28:1.8
	binutils-csl-sourcerygxx-4_1-29:1.8
	binutils-csl-sourcerygxx-4_1-28:1.8
	binutils-csl-arm-2006q3-27:1.8
	binutils-csl-sourcerygxx-4_1-27:1.8
	binutils-csl-arm-2006q3-26:1.8
	binutils-csl-sourcerygxx-4_1-26:1.8
	binutils-csl-sourcerygxx-4_1-25:1.8
	binutils-csl-sourcerygxx-4_1-24:1.8
	binutils-csl-sourcerygxx-4_1-23:1.8
	binutils-csl-sourcerygxx-4_1-21:1.8
	binutils-csl-arm-2006q3-21:1.8
	binutils-csl-sourcerygxx-4_1-22:1.8
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.8
	binutils-csl-sourcerygxx-4_1-20:1.8
	binutils-csl-arm-2006q3-19:1.8
	binutils-csl-sourcerygxx-4_1-19:1.8
	binutils-csl-sourcerygxx-4_1-18:1.8
	binutils-csl-renesas-4_1-9:1.8
	binutils-csl-renesas-4_1-8:1.8
	binutils-csl-renesas-4_1-7:1.8
	binutils-csl-renesas-4_1-6:1.8
	binutils-csl-sourcerygxx-4_1-17:1.8
	binutils-csl-sourcerygxx-4_1-14:1.8
	binutils-csl-sourcerygxx-4_1-15:1.8
	binutils-csl-sourcerygxx-4_1-13:1.8
	binutils-2_17:1.8
	binutils-csl-sourcerygxx-4_1-12:1.8
	binutils-csl-sourcerygxx-3_4_4-21:1.8
	binutils-csl-wrs-linux-3_4_4-24:1.1.2.3
	binutils-csl-wrs-linux-3_4_4-23:1.1.2.3
	binutils-csl-sourcerygxx-4_1-9:1.8
	binutils-csl-sourcerygxx-4_1-8:1.8
	binutils-csl-sourcerygxx-4_1-7:1.8
	binutils-csl-arm-2006q1-6:1.8
	binutils-csl-sourcerygxx-4_1-6:1.8
	binutils-csl-wrs-linux-3_4_4-22:1.1.2.3
	binutils-csl-coldfire-4_1-11:1.8
	binutils-csl-sourcerygxx-3_4_4-19:1.8
	binutils-csl-coldfire-4_1-10:1.8
	binutils-csl-sourcerygxx-4_1-5:1.8
	binutils-csl-sourcerygxx-4_1-4:1.8
	binutils-csl-wrs-linux-3_4_4-21:1.1.2.3
	binutils-csl-morpho-4_1-4:1.8
	binutils-csl-sourcerygxx-3_4_4-17:1.8
	binutils-csl-wrs-linux-3_4_4-20:1.1.2.3
	binutils-2_17-branch:1.8.0.4
	binutils-2_17-branchpoint:1.8
	binutils-csl-2_17-branch:1.8.0.2
	binutils-csl-2_17-branchpoint:1.8
	binutils_latest_snapshot:1.16
	binutils-csl-arm-2005q1b:1.1.2.3
	binutils-csl-arm-2005q1-branch:1.1.0.2;
locks; strict;
comment	@# @;


1.16
date	2013.03.15.17.55.01;	author willnewton;	state Exp;
branches;
next	1.15;

1.15
date	2012.04.12.13.01.15;	author nickc;	state Exp;
branches;
next	1.14;

1.14
date	2010.06.07.10.43.51;	author mgretton;	state Exp;
branches;
next	1.13;

1.13
date	2009.06.30.11.57.05;	author nickc;	state Exp;
branches;
next	1.12;

1.12
date	2009.06.29.08.08.15;	author nickc;	state Exp;
branches;
next	1.11;

1.11
date	2008.02.20.15.17.56;	author pbrook;	state Exp;
branches;
next	1.10;

1.10
date	2007.06.06.17.36.54;	author pbrook;	state Exp;
branches;
next	1.9;

1.9
date	2007.04.21.19.45.05;	author rearnsha;	state Exp;
branches;
next	1.8;

1.8
date	2006.03.16.15.08.47;	author pbrook;	state Exp;
branches;
next	1.7;

1.7
date	2005.08.30.11.21.57;	author pbrook;	state Exp;
branches;
next	1.6;

1.6
date	2005.07.04.14.55.52;	author pbrook;	state Exp;
branches;
next	1.5;

1.5
date	2005.06.13.15.34.38;	author zack;	state Exp;
branches;
next	1.4;

1.4
date	2005.06.07.18.03.17;	author zack;	state Exp;
branches;
next	1.3;

1.3
date	2005.06.07.17.54.22;	author zack;	state Exp;
branches;
next	1.2;

1.2
date	2005.05.18.05.40.10;	author zack;	state Exp;
branches;
next	1.1;

1.1
date	2005.04.26.05.31.42;	author zack;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2005.04.26.05.31.42;	author zack;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2005.04.30.23.36.15;	author pbrook;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2005.04.30.23.50.32;	author pbrook;	state Exp;
branches;
next	;


desc
@@


1.16
log
@gas/testsuite/ChangeLog:

2013-03-15  Will Newton  <will.newton@@linaro.org>

	* gas/arm/any-idiv.d: Expand *-*eabi test to cover *-*eabi*.
	* gas/arm/arch4t-eabi.d: Likewise.
	* gas/arm/arch4t.d: Likewise.
	* gas/arm/attr-any-armv4t.d: Likewise.
	* gas/arm/attr-any-thumbv6.d: Likewise.
	* gas/arm/attr-cpu-directive.d: Likewise.
	* gas/arm/attr-default.d: Likewise.
	* gas/arm/attr-march-all.d: Likewise.
	* gas/arm/attr-march-armv1.d: Likewise.
	* gas/arm/attr-march-armv2.d: Likewise.
	* gas/arm/attr-march-armv2a.d: Likewise.
	* gas/arm/attr-march-armv2s.d: Likewise.
	* gas/arm/attr-march-armv3.d: Likewise.
	* gas/arm/attr-march-armv3m.d: Likewise.
	* gas/arm/attr-march-armv4.d: Likewise.
	* gas/arm/attr-march-armv4t.d: Likewise.
	* gas/arm/attr-march-armv4txm.d: Likewise.
	* gas/arm/attr-march-armv4xm.d: Likewise.
	* gas/arm/attr-march-armv5.d: Likewise.
	* gas/arm/attr-march-armv5t.d: Likewise.
	* gas/arm/attr-march-armv5te.d: Likewise.
	* gas/arm/attr-march-armv5tej.d: Likewise.
	* gas/arm/attr-march-armv5texp.d: Likewise.
	* gas/arm/attr-march-armv5txm.d: Likewise.
	* gas/arm/attr-march-armv6-m+os.d: Likewise.
	* gas/arm/attr-march-armv6-m.d: Likewise.
	* gas/arm/attr-march-armv6.d: Likewise.
	* gas/arm/attr-march-armv6j.d: Likewise.
	* gas/arm/attr-march-armv6k+sec.d: Likewise.
	* gas/arm/attr-march-armv6k.d: Likewise.
	* gas/arm/attr-march-armv6kt2.d: Likewise.
	* gas/arm/attr-march-armv6s-m.d: Likewise.
	* gas/arm/attr-march-armv6t2.d: Likewise.
	* gas/arm/attr-march-armv6z.d: Likewise.
	* gas/arm/attr-march-armv6zk.d: Likewise.
	* gas/arm/attr-march-armv6zkt2.d: Likewise.
	* gas/arm/attr-march-armv6zt2.d: Likewise.
	* gas/arm/attr-march-armv7-a+idiv.d: Likewise.
	* gas/arm/attr-march-armv7-a+mp.d: Likewise.
	* gas/arm/attr-march-armv7-a+sec+virt.d: Likewise.
	* gas/arm/attr-march-armv7-a+sec.d: Likewise.
	* gas/arm/attr-march-armv7-a+virt.d: Likewise.
	* gas/arm/attr-march-armv7-a.d: Likewise.
	* gas/arm/attr-march-armv7-m.d: Likewise.
	* gas/arm/attr-march-armv7-r+mp.d: Likewise.
	* gas/arm/attr-march-armv7-r.d: Likewise.
	* gas/arm/attr-march-armv7.d: Likewise.
	* gas/arm/attr-march-armv7a.d: Likewise.
	* gas/arm/attr-march-armv7em.d: Likewise.
	* gas/arm/attr-march-armv7m.d: Likewise.
	* gas/arm/attr-march-armv7r.d: Likewise.
	* gas/arm/attr-march-armv8-a+crypto.d: Likewise.
	* gas/arm/attr-march-armv8-a+fp.d: Likewise.
	* gas/arm/attr-march-armv8-a+simd.d: Likewise.
	* gas/arm/attr-march-armv8-a.d: Likewise.
	* gas/arm/attr-march-iwmmxt.d: Likewise.
	* gas/arm/attr-march-iwmmxt2.d: Likewise.
	* gas/arm/attr-march-xscale.d: Likewise.
	* gas/arm/attr-mcpu.d: Likewise.
	* gas/arm/attr-mfpu-arm1020e.d: Likewise.
	* gas/arm/attr-mfpu-arm1020t.d: Likewise.
	* gas/arm/attr-mfpu-arm1136jf-s.d: Likewise.
	* gas/arm/attr-mfpu-arm1136jfs.d: Likewise.
	* gas/arm/attr-mfpu-arm7500fe.d: Likewise.
	* gas/arm/attr-mfpu-fpa.d: Likewise.
	* gas/arm/attr-mfpu-fpa10.d: Likewise.
	* gas/arm/attr-mfpu-fpa11.d: Likewise.
	* gas/arm/attr-mfpu-fpe.d: Likewise.
	* gas/arm/attr-mfpu-fpe2.d: Likewise.
	* gas/arm/attr-mfpu-fpe3.d: Likewise.
	* gas/arm/attr-mfpu-maverick.d: Likewise.
	* gas/arm/attr-mfpu-neon-fp16.d: Likewise.
	* gas/arm/attr-mfpu-neon.d: Likewise.
	* gas/arm/attr-mfpu-softfpa.d: Likewise.
	* gas/arm/attr-mfpu-softvfp+vfp.d: Likewise.
	* gas/arm/attr-mfpu-softvfp.d: Likewise.
	* gas/arm/attr-mfpu-vfp.d: Likewise.
	* gas/arm/attr-mfpu-vfp10-r0.d: Likewise.
	* gas/arm/attr-mfpu-vfp10.d: Likewise.
	* gas/arm/attr-mfpu-vfp3.d: Likewise.
	* gas/arm/attr-mfpu-vfp9.d: Likewise.
	* gas/arm/attr-mfpu-vfpv2.d: Likewise.
	* gas/arm/attr-mfpu-vfpv3-d16.d: Likewise.
	* gas/arm/attr-mfpu-vfpv3.d: Likewise.
	* gas/arm/attr-mfpu-vfpv4-d16.d: Likewise.
	* gas/arm/attr-mfpu-vfpv4.d: Likewise.
	* gas/arm/attr-mfpu-vfpxd.d: Likewise.
	* gas/arm/attr-names.d: Likewise.
	* gas/arm/attr-order.d: Likewise.
	* gas/arm/attr-override-cpu-directive.d: Likewise.
	* gas/arm/attr-override-mcpu.d: Likewise.
	* gas/arm/got_prel.d: Likewise.
	* gas/arm/mapdir.d: Likewise.
	* gas/arm/mapmisc.d: Likewise.
	* gas/arm/mapsecs.d: Likewise.
	* gas/arm/mapshort-eabi.d: Likewise.
	* gas/arm/mapshort-elf.d: Likewise.
	* gas/arm/mov-highregs-any.d: Likewise.
	* gas/arm/mov-lowregs-any.d: Likewise.
	* gas/arm/pr12198-1.d: Likewise.
	* gas/arm/pr12198-2.d: Likewise.
	* gas/arm/thumb-eabi.d: Likewise.
	* gas/arm/thumb.d: Likewise.
	* gas/arm/thumbrel.d: Likewise.

ld/testsuite/ChangeLog:

2013-03-15  Will Newton  <will.newton@@linaro.org>

	* ld-arm/arm-elf.exp: Expand *-*eabi test to cover *-*eabi*.
	* ld-arm/gc-hidden-1.d: Likewise.
	* ld-elfvsb/elfvsb.exp: Likewise.
	* ld-shared/shared.exp: Likewise.
@
text
@# name: Thumb instructions
# as: -mcpu=arm7t
# objdump: -dr --prefix-addresses --show-raw-insn
# The arm-aout and arm-pe ports do not support Thumb branch relocations.
# EABI targets have their own variant.
# not-target: *-*-*aout* *-*-pe *-*-*eabi* *-*-symbianelf *-*-nacl*

.*: +file format .*arm.*

Disassembly of section \.text:
0+000 <[^>]+> 00ca      	lsls	r2, r1, #3
0+002 <[^>]+> 0fe3      	lsrs	r3, r4, #31
0+004 <[^>]+> 1147      	asrs	r7, r0, #5
0+006 <[^>]+> 0011      	movs	r1, r2
0+008 <[^>]+> 0023      	movs	r3, r4
0+00a <[^>]+> 002c      	movs	r4, r5
0+00c <[^>]+> 083e      	lsrs	r6, r7, #32
0+00e <[^>]+> 1008      	asrs	r0, r1, #32
0+010 <[^>]+> 18d1      	adds	r1, r2, r3
0+012 <[^>]+> 1ca2      	adds	r2, r4, #2
0+014 <[^>]+> 1beb      	subs	r3, r5, r7
0+016 <[^>]+> 1fe2      	subs	r2, r4, #7
0+018 <[^>]+> 24ff      	movs	r4, #255.*
0+01a <[^>]+> 2bfa      	cmp	r3, #250.*
0+01c <[^>]+> 367b      	adds	r6, #123.*
0+01e <[^>]+> 3d80      	subs	r5, #128.*
0+020 <[^>]+> 402b      	ands	r3, r5
0+022 <[^>]+> 4074      	eors	r4, r6
0+024 <[^>]+> 4081      	lsls	r1, r0
0+026 <[^>]+> 40da      	lsrs	r2, r3
0+028 <[^>]+> 4134      	asrs	r4, r6
0+02a <[^>]+> 417d      	adcs	r5, r7
0+02c <[^>]+> 41a0      	sbcs	r0, r4
0+02e <[^>]+> 41e1      	rors	r1, r4
0+030 <[^>]+> 422a      	tst	r2, r5
0+032 <[^>]+> 4249      	negs	r1, r1
0+034 <[^>]+> 429a      	cmp	r2, r3
0+036 <[^>]+> 42e1      	cmn	r1, r4
0+038 <[^>]+> 4318      	orrs	r0, r3
0+03a <[^>]+> 436c      	muls	r4, r5
0+03c <[^>]+> 43bd      	bics	r5, r7
0+03e <[^>]+> 43ed      	mvns	r5, r5
0+040 <[^>]+> 4469      	add	r1, sp
0+042 <[^>]+> 4494      	add	ip, r2
0+044 <[^>]+> 44c9      	add	r9, r9
0+046 <[^>]+> 4571      	cmp	r1, lr
0+048 <[^>]+> 4580      	cmp	r8, r0
0+04a <[^>]+> 45f4      	cmp	ip, lr
0+04c <[^>]+> 4648      	mov	r0, r9
0+04e <[^>]+> 46a1      	mov	r9, r4
0+050 <[^>]+> 46c0      	nop			; \(mov r8, r8\)
0+052 <[^>]+> 4738      	bx	r7
0+054 <[^>]+> 4740      	bx	r8
0+056 <[^>]+> 46c0      	nop			; \(mov r8, r8\)
0+058 <[^>]+> 4778      	bx	pc
0+05a <[^>]+> 4b20      	ldr	r3, \[pc, #128\]	; \(0+0dc <[^>]+>\)
0+05c <[^>]+> 4c02      	ldr	r4, \[pc, #8\]	; \(0+068 <[^>]+>\)
0+05e <[^>]+> 5088      	str	r0, \[r1, r2\]
0+060 <[^>]+> 5511      	strb	r1, \[r2, r4\]
0+062 <[^>]+> 59f5      	ldr	r5, \[r6, r7\]
0+064 <[^>]+> 5d62      	ldrb	r2, \[r4, r5\]
0+066 <[^>]+> 46c0      	nop			; \(mov r8, r8\)
0+068 <[^>]+> 52d1      	strh	r1, \[r2, r3\]
0+06a <[^>]+> 5a23      	ldrh	r3, \[r4, r0\]
0+06c <[^>]+> 57f1      	ldrsb	r1, \[r6, r7\]
0+06e <[^>]+> 5f42      	ldrsh	r2, \[r0, r5\]
0+070 <[^>]+> 67db      	str	r3, \[r3, #124\].*
0+072 <[^>]+> 6fe1      	ldr	r1, \[r4, #124\].*
0+074 <[^>]+> 682d      	ldr	r5, \[r5, #0\]
0+076 <[^>]+> 77e9      	strb	r1, \[r5, #31\]
0+078 <[^>]+> 7161      	strb	r1, \[r4, #5\]
0+07a <[^>]+> 7032      	strb	r2, \[r6, #0\]
0+07c <[^>]+> 87ec      	strh	r4, \[r5, #62\].*
0+07e <[^>]+> 8885      	ldrh	r5, \[r0, #4\]
0+080 <[^>]+> 8813      	ldrh	r3, \[r2, #0\]
0+082 <[^>]+> 93ff      	str	r3, \[sp, #1020\].*
0+084 <[^>]+> 990b      	ldr	r1, \[sp, #44\].*
0+086 <[^>]+> 9a00      	ldr	r2, \[sp, #0\]
0+088 <[^>]+> a7ff      	add	r7, pc, #1020	; \(adr r7, 0+488 <[^>]+>\)
0+08a <[^>]+> ac80      	add	r4, sp, #512.*
0+08c <[^>]+> b043      	add	sp, #268.*
0+08e <[^>]+> b09a      	sub	sp, #104.*
0+090 <[^>]+> b0c3      	sub	sp, #268.*
0+092 <[^>]+> b01b      	add	sp, #108.*
0+094 <[^>]+> b417      	push	{r0, r1, r2, r4}
0+096 <[^>]+> b5f9      	push	{r0, r3, r4, r5, r6, r7, lr}
0+098 <[^>]+> bc98      	pop	{r3, r4, r7}
0+09a <[^>]+> bdff      	pop	{r0, r1, r2, r3, r4, r5, r6, r7, pc}
0+09c <[^>]+> c3f3      	stmia	r3!, {r0, r1, r4, r5, r6, r7}
0+09e <[^>]+> c8fe      	ldmia	r0!, {r1, r2, r3, r4, r5, r6, r7}
0+0a0 <[^>]+> d0e2      	beq.n	0+068 <[^>]+>
0+0a2 <[^>]+> d1e1      	bne.n	0+068 <[^>]+>
0+0a4 <[^>]+> d2e0      	bcs.n	0+068 <[^>]+>
0+0a6 <[^>]+> d3df      	bcc.n	0+068 <[^>]+>
0+0a8 <[^>]+> d4de      	bmi.n	0+068 <[^>]+>
0+0aa <[^>]+> d5dd      	bpl.n	0+068 <[^>]+>
0+0ac <[^>]+> d6dc      	bvs.n	0+068 <[^>]+>
0+0ae <[^>]+> d7db      	bvc.n	0+068 <[^>]+>
0+0b0 <[^>]+> d8da      	bhi.n	0+068 <[^>]+>
0+0b2 <[^>]+> d9d9      	bls.n	0+068 <[^>]+>
0+0b4 <[^>]+> dad8      	bge.n	0+068 <[^>]+>
0+0b6 <[^>]+> dcd7      	bgt.n	0+068 <[^>]+>
0+0b8 <[^>]+> dbd6      	blt.n	0+068 <[^>]+>
0+0ba <[^>]+> dcd5      	bgt.n	0+068 <[^>]+>
0+0bc <[^>]+> ddd4      	ble.n	0+068 <[^>]+>
0+0be <[^>]+> d8d3      	bhi.n	0+068 <[^>]+>
0+0c0 <[^>]+> d3d2      	bcc.n	0+068 <[^>]+>
0+0c2 <[^>]+> d3d1      	bcc.n	0+068 <[^>]+>
0+0c4 <[^>]+> e7d0      	b.n	0+068 <[^>]+>
0+0c6 <[^>]+> 00ac      	lsls	r4, r5, #2
0+0c8 <[^>]+> 1c9a      	adds	r2, r3, #2
0+0ca <[^>]+> b07f      	add	sp, #508.*
0+0cc <[^>]+> b0ff      	sub	sp, #508.*
0+0ce <[^>]+> a8ff      	add	r0, sp, #1020.*
0+0d0 <[^>]+> a0ff      	add	r0, pc, #1020	; \(adr r0, 0+4d0 <[^>]+>\)
0+0d2 <[^>]+> b01a      	add	sp, #104.*
0+0d4 <[^>]+> b09a      	sub	sp, #104.*
0+0d6 <[^>]+> a81a      	add	r0, sp, #104.*
0+0d8 <[^>]+> a01a      	add	r0, pc, #104	; \(adr r0, 0+144 <[^>]+>\)
0+0da <[^>]+> 3168      	adds	r1, #104.*
0+0dc <[^>]+> 2668      	movs	r6, #104.*
0+0de <[^>]+> 2f68      	cmp	r7, #104.*
0+0e0 <[^>]+> 46c0      	nop			; \(mov r8, r8\)
0+0e2 <[^>]+> 46c0      	nop			; \(mov r8, r8\)
0+0e4 <[^>]+> eafffffe 	b	0+0e4 <[^>]+>
0+0e8 <[^>]+> ea000011 	b	0+134 <[^>]+>
0+0ec <[^>]+> ebfffffc 	bl	0+0e4 <[^>]+>
0+0f0 <[^>]+> eb00000f 	bl	0+134 <[^>]+>
0+0f4 <[^>]+> e12fff10 	bx	r0
0+0f8 <[^>]+> ef123456 	(swi|svc)	0x00123456
0+0fc <[^>]+> a004      	add	r0, pc, #16	; \(adr r0, 0+110 <[^>]+>\)
0+0fe <[^>]+> e77f      	b.n	0+000 <[^>]+>
0+100 <[^>]+> e018      	b.n	0+134 <[^>]+>
0+102 <[^>]+> f7ff ff7d 	bl	0+000 <[^>]+>
0+106 <[^>]+> f000 f815 	bl	0+134 <[^>]+>
0+10a <[^>]+> 4700      	bx	r0
0+10c <[^>]+> dfff      	(swi|svc)	255.*
0+10e <[^>]+> 46c0      	nop			; \(mov r8, r8\)
0+110 <[^>]+> d010      	beq.n	0+134 <[^>]+>
0+112 <[^>]+> d10f      	bne.n	0+134 <[^>]+>
0+114 <[^>]+> d20e      	bcs.n	0+134 <[^>]+>
0+116 <[^>]+> d30d      	bcc.n	0+134 <[^>]+>
0+118 <[^>]+> d40c      	bmi.n	0+134 <[^>]+>
0+11a <[^>]+> d50b      	bpl.n	0+134 <[^>]+>
0+11c <[^>]+> d60a      	bvs.n	0+134 <[^>]+>
0+11e <[^>]+> d709      	bvc.n	0+134 <[^>]+>
0+120 <[^>]+> d808      	bhi.n	0+134 <[^>]+>
0+122 <[^>]+> d907      	bls.n	0+134 <[^>]+>
0+124 <[^>]+> da06      	bge.n	0+134 <[^>]+>
0+126 <[^>]+> dc05      	bgt.n	0+134 <[^>]+>
0+128 <[^>]+> db04      	blt.n	0+134 <[^>]+>
0+12a <[^>]+> dc03      	bgt.n	0+134 <[^>]+>
0+12c <[^>]+> dd02      	ble.n	0+134 <[^>]+>
0+12e <[^>]+> d801      	bhi.n	0+134 <[^>]+>
0+130 <[^>]+> d300      	bcc.n	0+134 <[^>]+>
0+132 <[^>]+> d3ff      	bcc.n	0+134 <[^>]+>
0+134 <[^>]+> f000 fc00 	bl	0+938 <[^>]+>
	\.\.\.
0+938 <[^>]+> f7ff fbfc 	bl	0+134 <[^>]+>
0+93c <[^>]+> 4801      	ldr	r0, \[pc, #4\]	; \(0+944 <[^>]+>\)
0+93e <[^>]+> 4801      	ldr	r0, \[pc, #4\]	; \(0+944 <[^>]+>\)
0+940 <[^>]+> 4801      	ldr	r0, \[pc, #4\]	; \(0+948 <[^>]+>\)
0+942 <[^>]+> 4801      	ldr	r0, \[pc, #4\]	; \(0+948 <[^>]+>\)
0+944 <[^>]+> 1c08      	adds	r0, r1, #0
0+946 <[^>]+> 46c0      	nop			; \(mov r8, r8\)
@


1.15
log
@	* elf32-arm.c (elf32_arm_nacl_plt0_entry, elf32_arm_nacl_plt_entry):
	New variables.
	(struct elf32_arm_link_hash_table): New member `nacl_p'.
	(elf32_arm_link_hash_table_create): Initialize it.
	(elf32_arm_nacl_link_hash_table_create): New function.
	(arm_movw_immediate, arm_movt_immediate): New functions.
	(elf32_arm_populate_plt_entry): Test HTAB->nacl_p.
	(elf32_arm_finish_dynamic_sections): Likewise.
	(elf32_arm_output_plt_map_1): Likewise.
	(bfd_elf32_littlearm_nacl_vec, bfd_elf32_bigarm_nacl_vec):
	New backend vector stanza.
	(elf32_arm_nacl_modify_segment_map): New function.
	* config.bfd: Handle arm-*-nacl*, armeb-*-nacl*.
	* targets.c: Support bfd_elf32_{big,little}_nacl_vec.
	* configure.in: Likewise.
	(bfd_elf32_bigarm_nacl_vec): Add elf-nacl.lo here.
	(bfd_elf32_littlearm_nacl_vec): Likewise.
	(bfd_elf32_bigarm_vec, bfd_elf32_littlearm_vec): Likewise.
	(bfd_elf32_bigarm_symbian_vec): Likewise.
	(bfd_elf32_littlearm_symbian_vec): Likewise.
	(bfd_elf32_bigarm_vxworks_vec): Likewise.
	(bfd_elf32_littlearm_vxworks_vec): Likewise.
	* configure: Regenerated.

	* configure.tgt (arm-*-nacl*): Match it.
	* config/te-nacl.h (FPU_DEFAULT, EABI_DEFAULT): Define.
	(LOCAL_LABELS_DOLLAR): Define.
	* config/tc-arm.c (elf32_arm_target_format) [TE_NACL]:
	Use nacl format variants.

	* gas/elf/elf.exp (run_elf_list_test): Treat arm-*-nacl* targets
	as -armeabi.

	* gas/arm/any-idiv.d: Match *-*-nacl* targets too.
	* gas/arm/arch4t.d: Likewise.
	* gas/arm/arch4t-eabi.d: Likewise.
	* gas/arm/attr-any-armv4t.d: Likewise.
	* gas/arm/attr-any-thumbv6.d: Likewise.
	* gas/arm/attr-cpu-directive.d: Likewise.
	* gas/arm/attr-default.d: Likewise.
	* gas/arm/attr-march-all.d: Likewise.
	* gas/arm/attr-march-armv1.d: Likewise.
	* gas/arm/attr-march-armv2a.d: Likewise.
	* gas/arm/attr-march-armv2.d: Likewise.
	* gas/arm/attr-march-armv2s.d: Likewise.
	* gas/arm/attr-march-armv3.d: Likewise.
	* gas/arm/attr-march-armv3m.d: Likewise.
	* gas/arm/attr-march-armv4.d: Likewise.
	* gas/arm/attr-march-armv4t.d: Likewise.
	* gas/arm/attr-march-armv4txm.d: Likewise.
	* gas/arm/attr-march-armv4xm.d: Likewise.
	* gas/arm/attr-march-armv5.d: Likewise.
	* gas/arm/attr-march-armv5t.d: Likewise.
	* gas/arm/attr-march-armv5te.d: Likewise.
	* gas/arm/attr-march-armv5tej.d: Likewise.
	* gas/arm/attr-march-armv5texp.d: Likewise.
	* gas/arm/attr-march-armv5txm.d: Likewise.
	* gas/arm/attr-march-armv6.d: Likewise.
	* gas/arm/attr-march-armv6j.d: Likewise.
	* gas/arm/attr-march-armv6k.d: Likewise.
	* gas/arm/attr-march-armv6k+sec.d: Likewise.
	* gas/arm/attr-march-armv6kt2.d: Likewise.
	* gas/arm/attr-march-armv6-m.d: Likewise.
	* gas/arm/attr-march-armv6-m+os.d: Likewise.
	* gas/arm/attr-march-armv6s-m.d: Likewise.
	* gas/arm/attr-march-armv6t2.d: Likewise.
	* gas/arm/attr-march-armv6z.d: Likewise.
	* gas/arm/attr-march-armv6zk.d: Likewise.
	* gas/arm/attr-march-armv6zkt2.d: Likewise.
	* gas/arm/attr-march-armv6zt2.d: Likewise.
	* gas/arm/attr-march-armv7-a.d: Likewise.
	* gas/arm/attr-march-armv7a.d: Likewise.
	* gas/arm/attr-march-armv7-a+idiv.d: Likewise.
	* gas/arm/attr-march-armv7-a+mp.d: Likewise.
	* gas/arm/attr-march-armv7-a+sec.d: Likewise.
	* gas/arm/attr-march-armv7-a+sec+virt.d: Likewise.
	* gas/arm/attr-march-armv7-a+virt.d: Likewise.
	* gas/arm/attr-march-armv7.d: Likewise.
	* gas/arm/attr-march-armv7em.d: Likewise.
	* gas/arm/attr-march-armv7-m.d: Likewise.
	* gas/arm/attr-march-armv7m.d: Likewise.
	* gas/arm/attr-march-armv7-r.d: Likewise.
	* gas/arm/attr-march-armv7r.d: Likewise.
	* gas/arm/attr-march-armv7-r+mp.d: Likewise.
	* gas/arm/attr-march-iwmmxt2.d: Likewise.
	* gas/arm/attr-march-iwmmxt.d: Likewise.
	* gas/arm/attr-march-xscale.d: Likewise.
	* gas/arm/attr-mcpu.d: Likewise.
	* gas/arm/attr-mfpu-arm1020e.d: Likewise.
	* gas/arm/attr-mfpu-arm1020t.d: Likewise.
	* gas/arm/attr-mfpu-arm1136jf-s.d: Likewise.
	* gas/arm/attr-mfpu-arm1136jfs.d: Likewise.
	* gas/arm/attr-mfpu-arm7500fe.d: Likewise.
	* gas/arm/attr-mfpu-fpa10.d: Likewise.
	* gas/arm/attr-mfpu-fpa11.d: Likewise.
	* gas/arm/attr-mfpu-fpa.d: Likewise.
	* gas/arm/attr-mfpu-fpe2.d: Likewise.
	* gas/arm/attr-mfpu-fpe3.d: Likewise.
	* gas/arm/attr-mfpu-fpe.d: Likewise.
	* gas/arm/attr-mfpu-maverick.d: Likewise.
	* gas/arm/attr-mfpu-neon.d: Likewise.
	* gas/arm/attr-mfpu-neon-fp16.d: Likewise.
	* gas/arm/attr-mfpu-softfpa.d: Likewise.
	* gas/arm/attr-mfpu-softvfp.d: Likewise.
	* gas/arm/attr-mfpu-softvfp+vfp.d: Likewise.
	* gas/arm/attr-mfpu-vfp10.d: Likewise.
	* gas/arm/attr-mfpu-vfp10-r0.d: Likewise.
	* gas/arm/attr-mfpu-vfp3.d: Likewise.
	* gas/arm/attr-mfpu-vfp9.d: Likewise.
	* gas/arm/attr-mfpu-vfp.d: Likewise.
	* gas/arm/attr-mfpu-vfpv2.d: Likewise.
	* gas/arm/attr-mfpu-vfpv3-d16.d: Likewise.
	* gas/arm/attr-mfpu-vfpv3.d: Likewise.
	* gas/arm/attr-mfpu-vfpv4-d16.d: Likewise.
	* gas/arm/attr-mfpu-vfpv4.d: Likewise.
	* gas/arm/attr-mfpu-vfpxd.d: Likewise.
	* gas/arm/attr-names.d: Likewise.
	* gas/arm/attr-order.d: Likewise.
	* gas/arm/attr-override-cpu-directive.d: Likewise.
	* gas/arm/attr-override-mcpu.d: Likewise.
	* gas/arm/got_prel.d: Likewise.
	* gas/arm/mapdir.d: Likewise.
	* gas/arm/mapmisc.d: Likewise.
	* gas/arm/mapsecs.d: Likewise.
	* gas/arm/mapshort-eabi.d: Likewise.
	* gas/arm/mapshort-elf.d: Likewise.
	* gas/arm/mov-highregs-any.d: Likewise.
	* gas/arm/mov-lowregs-any.d: Likewise.
	* gas/arm/pr12198-1.d: Likewise.
	* gas/arm/pr12198-2.d: Likewise.
	* gas/arm/thumb.d: Likewise.
	* gas/arm/thumb-eabi.d: Likewise.
	* gas/arm/thumbrel.d: Likewise.

	* configure.tgt (arm*-*-nacl*, arm*b-*-nacl*): Handle them.
	* emulparams/armelf_nacl.sh: New file.
	* emulparams/armelfb_nacl.sh: New file.
	* Makefile.am (ALL_EMULATION_SOURCES): Add earmelf_nacl.c
	and earmelfb_nacl.c here.
	(earmelf_nacl.c, earmelfb_nacl.c): New targets.
	* Makefile.in: Regenerated.

	* ld-arm/arm-elf.exp (armelftests): Split out into ...
	(armelftests_common, armelftests_nonacl): ... these two.
	(armeabitests): Split out into ...
	(armeabitests_common, armeabitests_nonacl): ... these two.
	Omit _nonacl sets for arm*-*-nacl* targets.

	* ld-arm/farcall-mix.d: Don't match exact addresses, only symbolic ones.
	* ld-arm/farcall-mix2.d: Likewise.
	* ld-arm/farcall-group.d: Likewise.

	* ld-arm/tls-gdesc-got.d: Match variant file formats too.
	Accept some variation in exact addresses.

	* ld-arm/thumb2-b-interwork.d: Match variant file formats too.
	Fix regexps not to care about exact addresses where not relevant.

	* ld-arm/thumb2-bl-undefweak.d: Match any hex strings, not any
	strings of particular exact lengths.
	* ld-arm/thumb2-bl-undefweak1.d: Likewise.

	* ld-arm/arm-app.r: Match variant file formats too.
	* ld-arm/arm-app-abs32.r: Likewise.
	* ld-arm/arm-lib.d: Likewise.
	* ld-arm/arm-lib.r: Likewise.
	* ld-arm/arm-static-app.r: Likewise.
	* ld-arm/armv4-bx.d: Likewise.
	* ld-arm/data-only-map.d: Likewise.
	* ld-arm/group-relocs.d: Likewise.
	* ld-arm/jump19.d: Likewise.
	* ld-arm/reloc-boundaries.d: Likewise.
	* ld-arm/thumb1-bl.d: Likewise.
	* ld-arm/thumb2-bl.d: Likewise.
	* ld-arm/tls-app.d: Likewise.
	* ld-arm/tls-app.r: Likewise.
	* ld-arm/tls-gdierelax.d: Likewise.
	* ld-arm/tls-gdierelax2.d: Likewise.
	* ld-arm/tls-gdlerelax.d: Likewise.
	* ld-arm/tls-lib.d: Likewise.
	* ld-arm/tls-lib.r: Likewise.
	* ld-arm/tls-mixed.r: Likewise.
	* ld-arm/vfp11-fix-none.d: Likewise.
	* ld-arm/vfp11-fix-scalar.d: Likewise.
	* ld-arm/vfp11-fix-vector.d: Likewise.
	* ld-arm/arm-static-app.d: Likewise.
	Fix regexps not to care about exact number of leading spaces.
	* ld-arm/arm-app-abs32.d: Likewise.
	* ld-arm/fix-arm1176-off.d: Likewise.
	* ld-arm/fix-arm1176-on.d: Likewise.

	* ld-arm/arm-elf.exp: Treat nacl targets like eabi targets.
@
text
@d6 1
a6 1
# not-target: *-*-*aout* *-*-pe *-*-*eabi *-*-symbianelf *-*-nacl*
@


1.14
log
@	* gas/testsuite/gas/arm/thumb-eabi.d: Add case for divided syntax encoding of movs.
	* gas/testsuite/gas/arm/thumb.d: Likewise.
	* gas/testsuite/gas/arm/thumb.s: Likewise.
	* gas/testsuite/gas/arm/thumb2_it.d: Update for change in lsls/movs disassembly.
	* gas/testsuite/gas/arm/thumb2_it_auto.d: Liekwise.
	* gas/testsuite/gas/arm/thumb32.d: Likewise.
	* ld/testsuite/ld-arm/arm-call.d: Handle change in lsls/movs disassembly.
	* ld/testsuite/ld-arm/farcall-thumb-arm-short.d: Likewise.
	* ld/testsuite/ld-arm/farcall-thumb-thumb-blx-pic-veneer.d: Likewise.
	* ld/testsuite/ld-arm/farcall-thumb-thumb-blx.d: Likewise.
	* ld/testsuite/ld-arm/farcall-thumb-thumb-m-pic-veneer.d: Likewise.
	* ld/testsuite/ld-arm/farcall-thumb-thumb-m.d: Likewise.
	* ld/testsuite/ld-arm/farcall-thumb-thumb-pic-veneer.d: Likewise.
	* ld/testsuite/ld-arm/farcall-thumb-thumb.d: Likewise.
	* ld/testsuite/ld-arm/thumb2-bl-as-thumb1-bad-noeabi.d: Likewise.
	* ld/testsuite/ld-arm/thumb2-bl-as-thumb1-bad.d: Likewise.
	* ld/testsuite/ld-arm/thumb2-bl-bad-noeabi.d: Likewise.
	* ld/testsuite/ld-arm/thumb2-bl-bad.d: Likewise.
	* opcodes/arm-dis.c (thumb-opcodes): Add disassembly for movs.
@
text
@d6 1
a6 1
# not-target: *-*-*aout* *-*-pe *-*-*eabi *-*-symbianelf
@


1.13
log
@        PR 10288
        * arm-dis.c (coprocessor): Print the LDC and STC versions of the
        LFM and SFM instructions as comments,.
        Improve consistency of formatting for instructions displayed as
        comments and decimal values displayed with their hexadecimal
        equivalents.
        Formatting tidy ups.

        Updated expected disassembler regexps.
@
text
@d14 3
a16 3
0+006 <[^>]+> 0011      	lsls	r1, r2, #0
0+008 <[^>]+> 0023      	lsls	r3, r4, #0
0+00a <[^>]+> 002c      	lsls	r4, r5, #0
d164 1
a164 1
0+944 <[^>]+> 46c0      	nop			; \(mov r8, r8\)
@


1.12
log
@        PR 10288
        * arm-dis.c (enum opcode_sentinels): New:  Used to mark the
        boundary between variaant and generic coprocessor instuctions.
        (coprocessor): Use it.
        Fix architecture version of MCRR and MRRC instructions.
        (arm_opcdes): Fix patterns for STRB and STRH instructions.
        (print_insn_coprocessor): Check architecture and extension masks.
        Print a hexadecimal version of any decimal constant that is
        outside of the range of -16 to +32.
        (print_arm_address): Add a return value of the offset used in the
        adress, if it is worth printing a hexadecimal version of it.
        (print_insn_neon): Print a hexadecimal version of any decimal
        constant that is outside of the range of -16 to +32.
        (print_insn_arm): Likewise.
        (print_insn_thumb16): Likewise.
        (print_insn_thumb32): Likewise.

        PR 10297
        * arm-dis.c (UNDEFINED_INSTRUCTION): New macro for a description
        of an undefined instruction.
        (arm_opcodes): Use it.
        (thumb_opcod): Use it.
        (thumb32_opc): Use it.

        Update expected disassembly regrexps in GAS and LD testsuites.
@
text
@d51 1
a51 1
0+050 <[^>]+> 46c0      	nop			\(mov r8, r8\)
d54 1
a54 1
0+056 <[^>]+> 46c0      	nop			\(mov r8, r8\)
d56 2
a57 2
0+05a <[^>]+> 4b20      	ldr	r3, \[pc, #128\]	\(0+0dc <[^>]+>\)
0+05c <[^>]+> 4c02      	ldr	r4, \[pc, #8\]	\(0+068 <[^>]+>\)
d62 1
a62 1
0+066 <[^>]+> 46c0      	nop			\(mov r8, r8\)
d79 1
a79 1
0+088 <[^>]+> a7ff      	add	r7, pc, #1020	\(adr r7, 0+488 <[^>]+>\)
d115 1
a115 1
0+0d0 <[^>]+> a0ff      	add	r0, pc, #1020	\(adr r0, 0+4d0 <[^>]+>\)
d119 1
a119 1
0+0d8 <[^>]+> a01a      	add	r0, pc, #104	\(adr r0, 0+144 <[^>]+>\)
d123 2
a124 2
0+0e0 <[^>]+> 46c0      	nop			\(mov r8, r8\)
0+0e2 <[^>]+> 46c0      	nop			\(mov r8, r8\)
d131 1
a131 1
0+0fc <[^>]+> a004      	add	r0, pc, #16	\(adr r0, 0+110 <[^>]+>\)
d138 1
a138 1
0+10e <[^>]+> 46c0      	nop			\(mov r8, r8\)
d160 6
a165 6
0+93c <[^>]+> 4801      	ldr	r0, \[pc, #4\]	\(0+944 <[^>]+>\)
0+93e <[^>]+> 4801      	ldr	r0, \[pc, #4\]	\(0+944 <[^>]+>\)
0+940 <[^>]+> 4801      	ldr	r0, \[pc, #4\]	\(0+948 <[^>]+>\)
0+942 <[^>]+> 4801      	ldr	r0, \[pc, #4\]	\(0+948 <[^>]+>\)
0+944 <[^>]+> 46c0      	nop			\(mov r8, r8\)
0+946 <[^>]+> 46c0      	nop			\(mov r8, r8\)
@


1.11
log
@2008-02-20  Paul Brook  <paul@@codesourcery.com>

	ld/
	* emultempl/armelf.em (OPTION_FIX_V4BX_INTERWORKING): Define.
	(PARSE_AND_LIST_LONGOPTS): Add fix-v4bx-interworking.
	(PARSE_AND_LIST_OPTIONS): Ditto.
	(PARSE_AND_LIST_ARGS_CASES): Handle OPTION_FIX_V4BX_INTERWORKING.
	* emulparams/armelf.sh (OTHER_TEXT_SECTIONS): Add .v4_bx.
	* emulparams/armelf_linux.sh (OTHER_TEXT_SECTIONS): Ditto.
	* emulparams/armnto.sh (OTHER_TEXT_SECTIONS): Ditto.
	* ld.texinfo: Document --fix-v4bx-interworking.

	ld/testsuite/
	* ld-arm/armv4-bx.d: New test.
	* ld-arm/armv4-bx.s: New test.
	* ld-arm/arm.ld: Add .v4bx.
	* ld-arm/arm-elf.exp: Add armv4-bx.

	gas/testsuite/
	* gas/arm/thumb.d: Exclude EABI targets.
	* gas/arm/arch4t.d: Exclude EABI targts.
	* gas/arm/v4bx.d: New test.
	* gas/arm/v4bx.s: New test.
	* gas/arm/thumb-eabi.d: New test.
	* gas/arm/arch4t-eabi.d: New test.

	gas/
	* config/tc-arm.c (fix_v4bx): New variable.
	(do_bx): Generate V4BX relocations.
	(md_assemble): Allow bx on v4 codes when fix_v4bx.
	(md_apply_fix): Handle BFD_RELOC_ARM_V4BX.
	(tc_gen_reloc): Ditto.
	(OPTION_FIX_V4BX): Define.
	(md_longopts): Add fix-v4bx.
	(md_parse_option): Handle OPTION_FIX_V4BX.
	(md_show_usage): Document --fix-v4bx.
	* doc/c-arm.texi: Document --fix-v4bx.

	bfd/
	* reloc.c: Add BFD_RELOC_ARM_V4BX.
	* elf32-arm.c (elf32_arm_reloc_map): Add BFD_RELOC_ARM_V4BX.
	(ARM_BX_GLUE_SECTION_NAME, ARM_BX_GLUE_SECTION_NAME): Define.
	(elf32_arm_link_hash_table): Add bx_glue_size and bx_glue_offset.
	Update comment for fix_v4bx.
	(elf32_arm_link_hash_table_create): Zero bx_glue_size and
	bx_glue_offset.
	(ARM_BX_VENEER_SIZE, armbx1_tst_insn, armbx2_moveq_insn,
	armbx3_bx_insn): New.
	(bfd_elf32_arm_allocate_interworking_sections): Allocate BX veneer
	section.
	(bfd_elf32_arm_add_glue_sections_to_bfd): Ditto.
	(bfd_elf32_arm_process_before_allocation): Record BX veneers.
	(record_arm_bx_glue, elf32_arm_bx_glue): New functions.
	(elf32_arm_final_link_relocate): Handle BX veneers.
	(elf32_arm_output_arch_local_syms): Output mapping symbol for .v4_bx.
	* bfd-in2.h: Regenerate.
	* libbfd.h: Regenerate.
@
text
@d23 4
a26 4
0+018 <[^>]+> 24ff      	movs	r4, #255
0+01a <[^>]+> 2bfa      	cmp	r3, #250
0+01c <[^>]+> 367b      	adds	r6, #123
0+01e <[^>]+> 3d80      	subs	r5, #128
d67 2
a68 2
0+070 <[^>]+> 67db      	str	r3, \[r3, #124\]
0+072 <[^>]+> 6fe1      	ldr	r1, \[r4, #124\]
d73 1
a73 1
0+07c <[^>]+> 87ec      	strh	r4, \[r5, #62\]
d76 2
a77 2
0+082 <[^>]+> 93ff      	str	r3, \[sp, #1020\]
0+084 <[^>]+> 990b      	ldr	r1, \[sp, #44\]
d80 5
a84 5
0+08a <[^>]+> ac80      	add	r4, sp, #512
0+08c <[^>]+> b043      	add	sp, #268
0+08e <[^>]+> b09a      	sub	sp, #104
0+090 <[^>]+> b0c3      	sub	sp, #268
0+092 <[^>]+> b01b      	add	sp, #108
d112 3
a114 3
0+0ca <[^>]+> b07f      	add	sp, #508
0+0cc <[^>]+> b0ff      	sub	sp, #508
0+0ce <[^>]+> a8ff      	add	r0, sp, #1020
d116 3
a118 3
0+0d2 <[^>]+> b01a      	add	sp, #104
0+0d4 <[^>]+> b09a      	sub	sp, #104
0+0d6 <[^>]+> a81a      	add	r0, sp, #104
d120 3
a122 3
0+0da <[^>]+> 3168      	adds	r1, #104
0+0dc <[^>]+> 2668      	movs	r6, #104
0+0de <[^>]+> 2f68      	cmp	r7, #104
d137 1
a137 1
0+10c <[^>]+> dfff      	(swi|svc)	255
@


1.10
log
@2007-06-06  Paul Brook  <paul@@codesourcery.com>

	gas/
	* config/tc-arm.c (s_align): Pad code sections appropriately.

	gas/testsuite/
	* gas/arm/thumb.d: Update expected output.
	* gas/arm/thumb2_relax.d: Ditto.
@
text
@d5 2
a6 1
# not-target: *-*-*aout* *-*-pe
@


1.9
log
@	* gas/arm/arch4t.d: Convert to unified syntax.
	* gas/arm/archv6.d: Likewise.
	* gas/arm/archv6t2.d: Likewise.
	* gas/arm/arch3.d: Likewise.
	* gas/arm/arch7dm.d: Likewise.
	* gas/arm/arch7t.d: Likewise.
	* gas/arm/archv1.d: Likewise.
	* gas/arm/copro.d: Likewise.
	* gas/arm/inst.d: Likewise.
	* gas/arm/macro1.d: Likewise.
	* gas/arm/tcompat.d: Likewise.
	* gas/arm/wince_inst.d: Likewise.
	* gas/arm/xscale.d: Likewise.

	* gas/arm/thumb.d: White space cleanup.
	* gas/arm/thumb2_relax.d: Likewise.
	* gas/arm/thumb32.d: Likewise.
@
text
@d53 1
a53 1
0+056 <[^>]+> 0000      	lsls	r0, r0, #0
d61 1
a61 1
	\.\.\.
d137 1
a137 1
	\.\.\.
@


1.8
log
@2006-03-16  Paul Brook  <paul@@codesourcery.com>

gas/
	* config/tc-arm.c (insns): Add "svc".
gas/testsuite/
	* gas/arm/svc.d: New test.
	* gas/arm/svc.s: New test.
	* gas/arm/inst.d: Accept svc mnemonic.
	* gas/arm/thumb.d: Ditto.
	* gas/arm/wince_inst.d: Ditto.
opcodes/
	* arm-dis.c (arm_opcodes): Rename swi to svc.
	(thumb_opcodes): Ditto.
@
text
@d78 1
a78 1
0+088 <[^>]+> a7ff      	add	r7, pc, #1020	\(adr r7,0+488 <[^>]+>\)
d114 1
a114 1
0+0d0 <[^>]+> a0ff      	add	r0, pc, #1020	\(adr r0,0+4d0 <[^>]+>\)
d118 1
a118 1
0+0d8 <[^>]+> a01a      	add	r0, pc, #104	\(adr r0,0+144 <[^>]+>\)
d130 1
a130 1
0+0fc <[^>]+> a004      	add	r0, pc, #16	\(adr r0,0+110 <[^>]+>\)
@


1.7
log
@2005-08-30  Paul Brook  <paul@@codesourcery.com>

opcodes/
	* arm-dis.c (thumb_opcodes): Disassemble sub(3) as subs.
gas/testsuite/
	* gas/arm/thumb.d: Change "sub rn, rn, rn" to "subs rn, rn, rn".
	* gas/arm/thumb32.d: Ditto.
@
text
@d129 1
a129 1
0+0f8 <[^>]+> ef123456 	swi	0x00123456
d136 1
a136 1
0+10c <[^>]+> dfff      	swi	255
@


1.6
log
@2005-07-04  Zack Weinberg  <zack@@codesourcery.com>

	* lib/gas-defs.exp (run_dump_tests): New proc.
	(run_dump_test): Add support for new options: target, not-target,
	skip, not-skip, error-output.  Document stderr.  Tidy a
	little.
	(slurp_options): If a line doesn't match the option regexp, but
	does begin with #, ignore it; don't stop parsing options.
	* gas/arm/arm.exp: Remove most code.  Use run_dump_tests.

	* gas/arm/archv6t2-bad.d, gas/arm/armv1.d, gas/arm/iwmmxt-bad.d
	* gas/arm/r15-bad.d, gas/arm/req.d, gas/arm/t16-bad.d
	* gas/arm/undefined.d, gas/arm/undefined_coff.d, gas/arm/vfp-bad.d:
	New files.
	* gas/arm/bignum1.d, gas/arm/mapping.d, gas/arm/pic.d:
	Only run on ELF targets.
	* gas/arm/tls.d, gas/arm/unwind.d: Only run on ELF targets.
	Skip on VxWorks.
	* gas/arm/tls_vxworks.d, gas/arm/unwind_vxworks.d: New files.
	* gas/arm/thumb.d, gas/arm/thumb32.d: Don't run on aout or pe.
	* gas/arm/le-fpconst.d: Only run on *-*-pe.
	* gas/arm/inst.d: Skip on WinCE.
	* gas/arm/wince_inst.d: Skip unless WinCE.
	* gas/arm/el_segundo.d: Mark up for actual use; adjust
	expectations.
	* gas/arm/el_segundo.s: Remove irrelevant junk.  Add padding
	for a.out's sake.
@
text
@d20 2
a21 2
0+014 <[^>]+> 1beb      	sub	r3, r5, r7
0+016 <[^>]+> 1fe2      	sub	r2, r4, #7
@


1.5
log
@gas:
	* config/tc-arm.c (find_real_start): Check S_IS_LOCAL on
	symbolP as well as for names with a leading dot.  Use ACONCAT.
	(md_apply_fix): For branch relocations, only replace value
	with fixP->fx_offset (under #ifdef OBJ_ELF) when !fixP->fx_done.
	(arm_force_relocation): Remove #ifdef OBJ_ELF case.
	* config/tc-arm.h (LOCAL_LABEL): Remove unnecessary parentheses.
	(LOCAL_LABEL_PREFIX): Don't define.
gas/testsuite:
	* gas/arm/thumb.s: Only branch to labels defined in this file.
	* gas/arm/thumb.d, gas/arm/thumb32.d: Adjust expected output.
@
text
@d4 2
@


1.4
log
@Revert accidental commit
@
text
@d122 4
a125 8
0+0e4 <[^>]+> ea000037 	b	0+0e4 <[^>]+>
			e4: R_ARM_PC24	\.text
0+0e8 <[^>]+> eafffffe 	b	0+000 <[^>]+>
			e8: R_ARM_PC24	\.wombat
0+0ec <[^>]+> eb000037 	bl	0+0e4 <[^>]+>
			ec: R_ARM_PC24	\.text
0+0f0 <[^>]+> ebfffffe 	bl	0+000 <[^>]+>
			f0: R_ARM_PC24	\.wombat
d130 3
a132 6
0+100 <[^>]+> e7fe      	b.n	0+000 <[^>]+>
			100: R_ARM_THM_JUMP11	\.wombat
0+102 <[^>]+> f7ff fffe 	bl	0+000 <[^>]+>
			102: R_ARM_THM_CALL	\.text
0+106 <[^>]+> f7ff fffe 	bl	0+000 <[^>]+>
			106: R_ARM_THM_CALL	\.wombat
d136 19
a154 38
0+110 <[^>]+> d0fe      	beq.n	0+000 <[^>]+>
			110: R_ARM_THM_JUMP8	\.wombat
0+112 <[^>]+> d1fe      	bne.n	0+000 <[^>]+>
			112: R_ARM_THM_JUMP8	\.wombat
0+114 <[^>]+> d2fe      	bcs.n	0+000 <[^>]+>
			114: R_ARM_THM_JUMP8	\.wombat
0+116 <[^>]+> d3fe      	bcc.n	0+000 <[^>]+>
			116: R_ARM_THM_JUMP8	\.wombat
0+118 <[^>]+> d4fe      	bmi.n	0+000 <[^>]+>
			118: R_ARM_THM_JUMP8	\.wombat
0+11a <[^>]+> d5fe      	bpl.n	0+000 <[^>]+>
			11a: R_ARM_THM_JUMP8	\.wombat
0+11c <[^>]+> d6fe      	bvs.n	0+000 <[^>]+>
			11c: R_ARM_THM_JUMP8	\.wombat
0+11e <[^>]+> d7fe      	bvc.n	0+000 <[^>]+>
			11e: R_ARM_THM_JUMP8	\.wombat
0+120 <[^>]+> d8fe      	bhi.n	0+000 <[^>]+>
			120: R_ARM_THM_JUMP8	\.wombat
0+122 <[^>]+> d9fe      	bls.n	0+000 <[^>]+>
			122: R_ARM_THM_JUMP8	\.wombat
0+124 <[^>]+> dafe      	bge.n	0+000 <[^>]+>
			124: R_ARM_THM_JUMP8	\.wombat
0+126 <[^>]+> dcfe      	bgt.n	0+000 <[^>]+>
			126: R_ARM_THM_JUMP8	\.wombat
0+128 <[^>]+> dbfe      	blt.n	0+000 <[^>]+>
			128: R_ARM_THM_JUMP8	\.wombat
0+12a <[^>]+> dcfe      	bgt.n	0+000 <[^>]+>
			12a: R_ARM_THM_JUMP8	\.wombat
0+12c <[^>]+> ddfe      	ble.n	0+000 <[^>]+>
			12c: R_ARM_THM_JUMP8	\.wombat
0+12e <[^>]+> d8fe      	bhi.n	0+000 <[^>]+>
			12e: R_ARM_THM_JUMP8	\.wombat
0+130 <[^>]+> d3fe      	bcc.n	0+000 <[^>]+>
			130: R_ARM_THM_JUMP8	\.wombat
0+132 <[^>]+> d3fe      	bcc.n	0+000 <[^>]+>
			132: R_ARM_THM_JUMP8	\.wombat
0+134 <[^>]+> f000 fc9a 	bl	0+938 <[^>]+>
			134: R_ARM_THM_CALL	\.text
d156 1
a156 2
0+938 <[^>]+> f000 f898 	bl	0+134 <[^>]+>
			938: R_ARM_THM_CALL	\.text
@


1.3
log
@gas:
	* cgen.c, cgen.h, tc.h, write.c, config/obj-coff.c
	* config/tc-a29k.c, config/tc-alpha.c, config/tc-alpha.h
	* config/tc-arc.c, config/tc-arc.h, config/tc-arm.c
	* config/tc-arm.h, config/tc-avr.c, config/tc-avr.h
	* config/tc-cris.c, config/tc-crx.c, config/tc-d10v.c
	* config/tc-d10v.h, config/tc-d30v.c, config/tc-d30v.h
	* config/tc-dlx.c, config/tc-dlx.h, config/tc-fr30.h
	* config/tc-frv.c, config/tc-frv.h, config/tc-h8300.c
	* config/tc-h8500.c, config/tc-hppa.c, config/tc-hppa.h
	* config/tc-i370.c, config/tc-i370.h, config/tc-i386.c
	* config/tc-i386.h, config/tc-i860.c, config/tc-i860.h
	* config/tc-i960.c, config/tc-i960.h, config/tc-ia64.c
	* config/tc-ip2k.c, config/tc-ip2k.h, config/tc-iq2000.c
	* config/tc-iq2000.h, config/tc-m32r.c, config/tc-m32r.h
	* config/tc-m68hc11.c, config/tc-m68hc11.h, config/tc-m68k.c
	* config/tc-m68k.h, config/tc-m88k.c, config/tc-maxq.c
	* config/tc-mcore.c, config/tc-mcore.h, config/tc-mips.c
	* config/tc-mips.h, config/tc-mmix.c, config/tc-mn10200.c
	* config/tc-mn10300.c, config/tc-msp430.c, config/tc-ns32k.c
	* config/tc-openrisc.h, config/tc-or32.c, config/tc-or32.h
	* config/tc-pdp11.c, config/tc-pj.c, config/tc-pj.h
	* config/tc-ppc.c, config/tc-ppc.h, config/tc-s390.c
	* config/tc-s390.h, config/tc-sh64.c, config/tc-sh.c
	* config/tc-sh.h, config/tc-sparc.c, config/tc-sparc.h
	* config/tc-tahoe.c, config/tc-tic30.c, config/tc-tic4x.c
	* config/tc-tic54x.c, config/tc-tic80.c, config/tc-v850.c
	* config/tc-v850.h, config/tc-vax.c, config/tc-vax.h
	* config/tc-w65.c, config/tc-xstormy16.c, config/tc-xstormy16.h
	* config/tc-xtensa.c, config/tc-z8k.c:
	Replace all instances of the string "_apply_fix3" with
	"_apply_fix".
	* po/POTFILES.in, po/gas.pot: Regenerate.
bfd:
	* coff-i386.c: Change md_apply_fix3 to md_apply_fix in comment.
cgen:
	* doc/porting.texi: Change all mention of md_apply_fix3 and
	gas_cgen_md_apply_fix3 to md_apply_fix and gas_cgen_md_apply_fix
	respectively.
@
text
@d122 8
a129 4
0+0e4 <[^>]+> eafffffe 	b	0+0e4 <[^>]+>
0+0e8 <[^>]+> ea000011 	b	0+134 <[^>]+>
0+0ec <[^>]+> ebfffffc 	bl	0+0e4 <[^>]+>
0+0f0 <[^>]+> eb00000f 	bl	0+134 <[^>]+>
d134 6
a139 3
0+100 <[^>]+> e018      	b.n	0+134 <[^>]+>
0+102 <[^>]+> f7ff ff7d 	bl	0+000 <[^>]+>
0+106 <[^>]+> f000 f815 	bl	0+134 <[^>]+>
d143 38
a180 19
0+110 <[^>]+> d010      	beq.n	0+134 <[^>]+>
0+112 <[^>]+> d10f      	bne.n	0+134 <[^>]+>
0+114 <[^>]+> d20e      	bcs.n	0+134 <[^>]+>
0+116 <[^>]+> d30d      	bcc.n	0+134 <[^>]+>
0+118 <[^>]+> d40c      	bmi.n	0+134 <[^>]+>
0+11a <[^>]+> d50b      	bpl.n	0+134 <[^>]+>
0+11c <[^>]+> d60a      	bvs.n	0+134 <[^>]+>
0+11e <[^>]+> d709      	bvc.n	0+134 <[^>]+>
0+120 <[^>]+> d808      	bhi.n	0+134 <[^>]+>
0+122 <[^>]+> d907      	bls.n	0+134 <[^>]+>
0+124 <[^>]+> da06      	bge.n	0+134 <[^>]+>
0+126 <[^>]+> dc05      	bgt.n	0+134 <[^>]+>
0+128 <[^>]+> db04      	blt.n	0+134 <[^>]+>
0+12a <[^>]+> dc03      	bgt.n	0+134 <[^>]+>
0+12c <[^>]+> dd02      	ble.n	0+134 <[^>]+>
0+12e <[^>]+> d801      	bhi.n	0+134 <[^>]+>
0+130 <[^>]+> d300      	bcc.n	0+134 <[^>]+>
0+132 <[^>]+> d3ff      	bcc.n	0+134 <[^>]+>
0+134 <[^>]+> f000 fc00 	bl	0+938 <[^>]+>
d182 2
a183 1
0+938 <[^>]+> f7ff fbfc 	bl	0+134 <[^>]+>
@


1.2
log
@include/elf:
	* arm.h: Import complete list of official relocation names
	and numbers from AAELF.  Define FAKE_RELOCs for old names.
	Remove a few old names no longer used anywhere.

bfd:
	* elf32-arm.c: Wherever possible, use official reloc names
	from AAELF.
	(elf32_arm_howto_table, elf32_arm_tls_gd32_howto)
	(elf32_arm_tls_ldo32_howto, elf32_arm_tls_ldm32_howto)
	(elf32_arm_tls_le32_howto, elf32_arm_tls_ie32_howto)
	(elf32_arm_vtinherit_howto, elf32_arm_vtentry_howto)
	(elf32_arm_pc11_howto, elf32_arm_thm_pc9_howto, elf32_arm_got_prel)
	(elf32_arm_r_howto): Replace with elf32_arm_howto_table_1,
	elf32_arm_howto_table_2, and elf32_arm_howto_table_3.
	Add many new relocations from AAELF.
	(elf32_arm_howto_from_type): Update to match.
	(elf32_arm_reloc_map): Add entries for R_ARM_THM_JUMP24,
	R_ARM_THM_JUMP11, R_ARM_THM_JUMP19, R_ARM_THM_JUMP8,
	R_ARM_THM_JUMP6, R_ARM_GNU_VTINHERIT, and R_ARM_GNU_VTENTRY.
	(elf32_arm_reloc_type_lookup): Use elf32_arm_howto_from_type.
	(elf32_arm_final_link_relocate): Add support for
	R_ARM_THM_JUMP24, R_ARM_THM_JUMP19, R_ARM_THM_JUMP6.  Remove
	case entries redundant with default.

	* reloc.c: Reorganize ARM relocations.  Add Thumb
	assembler-internal relocations BFD_RELOC_ARM_T32_OFFSET_U8,
	BFD_RELOC_ARM_T32_OFFSET_IMM, BFD_RELOC_ARM_T32_IMMEDIATE.
	Add visible relocations BFD_RELOC_THUMB_PCREL_BRANCH7,
	BFD_RELOC_THUMB_BRANCH20, BFD_RELOC_THUMB_BRANCH25.
	Delete unused relocations BFD_RELOC_ARM_GOT12, BFD_RELOC_ARM_COPY.
	* bfd-in2.h, libbfd.h: Regenerate.

opcodes:
	* arm-dis.c (thumb_opcodes): Add disassembly for V6T2 16-bit
	instructions.  Adjust disassembly of some opcodes to match
	unified syntax.
	(thumb32_opcodes): New table.
	(print_insn_thumb): Rename print_insn_thumb16; don't handle
	two-halfword branches here.
	(print_insn_thumb32): New function.
	(print_insn): Choose among print_insn_arm, print_insn_thumb16,
	and print_insn_thumb32.  Be consistent about order of
	halfwords when printing 32-bit instructions.

gas:
	* hash.c (hash_lookup): Add len parameter.  All callers changed.
	(hash_find_n): New interface.
	* hash.h: Prototype hash_find_n.
	* sb.c: Include as.h.
	(scrub_from_sb, sb_to_scrub, scrub_position): New statics.
	(sb_scrub_and_add_sb): New interface.
	* sb.h: Prototype sb_scrub_and_add_sb.
	* input-scrub.c (input_scrub_include_sb): Use sb_scrub_and_add_sb.

	* config/tc-arm.h (TC_FORCE_RELOCATION_LOCAL): Remove
	reference to BFD_RELOC_ARM_GOT12 which is never generated.
	* config/tc-arm.c: Rewrite, adding Thumb-2 support.

gas/testsuite:
	* gas/arm/arm.exp: Convert all existing "gas_test" tests to
	"run_dump_test" tests.  Run more tests unconditionally.  Run new tests.
	* gas/arm/arch4t.s, gas/arm/arch6zk.s, gas/arm/arm3.s, gas/arm/arm6.s
	* gas/arm/arm7dm.s, gas/arm/bignum1.s, gas/arm/float.s
	* gas/arm/immed.s, gas/arm/iwmmxt.s, gas/arm/offset.s, gas/arm/thumb.s:
	Adjust to work as a dump test.
	* gas/arm/arch4t.d, gas/arm/arch6zk.d, gas/arm/arm3.d, gas/arm/arm6.d
	* gas/arm/arm7dm.d, gas/arm/bignum1.d, gas/arm/float.d
	* gas/arm/immed.d, gas/arm/iwmmxt.d, gas/arm/offset.d, gas/arm/thumb.d:
	New files.

	* gas/arm/armv1-bad.l, gas/arm/armv1-bad.s: Remove tests for
	diagnostics that don't happen in the first pass anymore.

	* gas/arm/iwmmxt-bad.l, gas/arm/r15-bad.l, gas/arm/req.l
	* gas/arm/vfp-bad.l:
	Update expected diagnostics.
	* gas/arm/pic.d: Update expected reloc name.
	* gas/arm/thumbv6.d: CPY no longer appears in disassembly.
	* gas/arm/r15-bad.s: Avoid two-argument mul.
	* gas/arm/req.s: Adjust comments.
	* gas/arm/maverick.d, gas/arm/maverick.s: Avoid inappropriate
	use of PC.

	* gas/arm/macro-1.d, gas/arm/macro1.s
	* gas/arm/t16-bad.l, gas/arm/t16-bad.s
	* gas/arm/tcompat.d, gas/arm/tcompat.s
	* gas/arm/tcompat2.d, gas/arm/tcompat2.s
	* gas/arm/thumb32.d, gas/arm/thumb32.s
	New test pair.

ld/testsuite:
	* ld-arm/mixed-app.d: Adjust expected disassembly a little.
@
text
@d122 4
a125 8
0+0e4 <[^>]+> ea000037 	b	0+0e4 <[^>]+>
			e4: R_ARM_PC24	\.text
0+0e8 <[^>]+> eafffffe 	b	0+000 <[^>]+>
			e8: R_ARM_PC24	\.wombat
0+0ec <[^>]+> eb000037 	bl	0+0e4 <[^>]+>
			ec: R_ARM_PC24	\.text
0+0f0 <[^>]+> ebfffffe 	bl	0+000 <[^>]+>
			f0: R_ARM_PC24	\.wombat
d130 3
a132 6
0+100 <[^>]+> e7fe      	b.n	0+000 <[^>]+>
			100: R_ARM_THM_JUMP11	\.wombat
0+102 <[^>]+> f7ff fffe 	bl	0+000 <[^>]+>
			102: R_ARM_THM_CALL	\.text
0+106 <[^>]+> f7ff fffe 	bl	0+000 <[^>]+>
			106: R_ARM_THM_CALL	\.wombat
d136 19
a154 38
0+110 <[^>]+> d0fe      	beq.n	0+000 <[^>]+>
			110: R_ARM_THM_JUMP8	\.wombat
0+112 <[^>]+> d1fe      	bne.n	0+000 <[^>]+>
			112: R_ARM_THM_JUMP8	\.wombat
0+114 <[^>]+> d2fe      	bcs.n	0+000 <[^>]+>
			114: R_ARM_THM_JUMP8	\.wombat
0+116 <[^>]+> d3fe      	bcc.n	0+000 <[^>]+>
			116: R_ARM_THM_JUMP8	\.wombat
0+118 <[^>]+> d4fe      	bmi.n	0+000 <[^>]+>
			118: R_ARM_THM_JUMP8	\.wombat
0+11a <[^>]+> d5fe      	bpl.n	0+000 <[^>]+>
			11a: R_ARM_THM_JUMP8	\.wombat
0+11c <[^>]+> d6fe      	bvs.n	0+000 <[^>]+>
			11c: R_ARM_THM_JUMP8	\.wombat
0+11e <[^>]+> d7fe      	bvc.n	0+000 <[^>]+>
			11e: R_ARM_THM_JUMP8	\.wombat
0+120 <[^>]+> d8fe      	bhi.n	0+000 <[^>]+>
			120: R_ARM_THM_JUMP8	\.wombat
0+122 <[^>]+> d9fe      	bls.n	0+000 <[^>]+>
			122: R_ARM_THM_JUMP8	\.wombat
0+124 <[^>]+> dafe      	bge.n	0+000 <[^>]+>
			124: R_ARM_THM_JUMP8	\.wombat
0+126 <[^>]+> dcfe      	bgt.n	0+000 <[^>]+>
			126: R_ARM_THM_JUMP8	\.wombat
0+128 <[^>]+> dbfe      	blt.n	0+000 <[^>]+>
			128: R_ARM_THM_JUMP8	\.wombat
0+12a <[^>]+> dcfe      	bgt.n	0+000 <[^>]+>
			12a: R_ARM_THM_JUMP8	\.wombat
0+12c <[^>]+> ddfe      	ble.n	0+000 <[^>]+>
			12c: R_ARM_THM_JUMP8	\.wombat
0+12e <[^>]+> d8fe      	bhi.n	0+000 <[^>]+>
			12e: R_ARM_THM_JUMP8	\.wombat
0+130 <[^>]+> d3fe      	bcc.n	0+000 <[^>]+>
			130: R_ARM_THM_JUMP8	\.wombat
0+132 <[^>]+> d3fe      	bcc.n	0+000 <[^>]+>
			132: R_ARM_THM_JUMP8	\.wombat
0+134 <[^>]+> f000 fc9a 	bl	0+938 <[^>]+>
			134: R_ARM_THM_CALL	\.text
d156 1
a156 2
0+938 <[^>]+> f000 f898 	bl	0+134 <[^>]+>
			938: R_ARM_THM_CALL	\.text
@


1.1
log
@file thumb.d was initially added on branch binutils-csl-arm-2005q1-branch.
@
text
@d1 189
@


1.1.2.1
log
@	Thumb32 assembler.

	* include/elf/arm.h: Import full set of relocation names from
	latest AAELF.  Make the primary name of all relocations be the one
	AAELF specifies.  Provide aliases under the traditional names.
	Kill FIRST_INVALID_RELOC_* and LAST_INVALID_RELOC_*.
	* bfd/reloc.c: Reorganize ARM relocations.  Remove ARM relocations
	that are never generated.  Document more of the relocations.  Add
	relocations for Thumb32.
	* bfd/libbfd.h, bfd/bfd-in2.h: Regenerate.
	* bfd/elf32-arm.c: Reorganize howto tables.  Implement Thumb32
	relocations.
	* ld/testsuite/ld-arm/mixed-app.d: Adjust expectations for
	renamed relocations.

	* gas/hash.c (hash_find_n): New interface.
	* gas/hash.h: Prototype it.

	* gas/config/tc-arm.c: Rewrite and reorganize.  Implement 32-bit
	Thumb instructions.
	* gas/testsuite/gas/arm: Convert all "gas_test" style tests to
	"run_dump_test" style tests, for more thorough testing.  Make
	adjustments to expectations where necessary.
	* gas/testsuite/gas/arm/t16-bad.s, gas/testsuite/gas/arm/tcompat.s
	* gas/testsuite/gas/arm/tcompat2.s, gas/testsuite/gas/arm/thumb32.s:
	New test cases.

	* opcodes/arm-dis.c: Add support for Thumb32 instructions and
	16-bit V6T2 instructions.
@
text
@a0 183
# name: Thumb instructions
# as: -mcpu=arm7t
# objdump: -dr --prefix-addresses --show-raw-insn

.*: +file format .*arm.*

Disassembly of section \.text:
0+000 <[^>]+> 00ca      	lsls	r2, r1, #3
0+002 <[^>]+> 0fe3      	lsrs	r3, r4, #31
0+004 <[^>]+> 1147      	asrs	r7, r0, #5
0+006 <[^>]+> 0011      	lsls	r1, r2, #0
0+008 <[^>]+> 0023      	lsls	r3, r4, #0
0+00a <[^>]+> 002c      	lsls	r4, r5, #0
0+00c <[^>]+> 083e      	lsrs	r6, r7, #32
0+00e <[^>]+> 1008      	asrs	r0, r1, #32
0+010 <[^>]+> 18d1      	adds	r1, r2, r3
0+012 <[^>]+> 1ca2      	adds	r2, r4, #2
0+014 <[^>]+> 1beb      	sub	r3, r5, r7
0+016 <[^>]+> 1fe2      	sub	r2, r4, #7
0+018 <[^>]+> 24ff      	movs	r4, #255
0+01a <[^>]+> 2bfa      	cmp	r3, #250
0+01c <[^>]+> 367b      	adds	r6, #123
0+01e <[^>]+> 3d80      	subs	r5, #128
0+020 <[^>]+> 402b      	ands	r3, r5
0+022 <[^>]+> 4074      	eors	r4, r6
0+024 <[^>]+> 4081      	lsls	r1, r0
0+026 <[^>]+> 40da      	lsrs	r2, r3
0+028 <[^>]+> 4134      	asrs	r4, r6
0+02a <[^>]+> 417d      	adcs	r5, r7
0+02c <[^>]+> 41a0      	sbcs	r0, r4
0+02e <[^>]+> 41e1      	rors	r1, r4
0+030 <[^>]+> 422a      	tst	r2, r5
0+032 <[^>]+> 4249      	negs	r1, r1
0+034 <[^>]+> 429a      	cmp	r2, r3
0+036 <[^>]+> 42e1      	cmn	r1, r4
0+038 <[^>]+> 4318      	orrs	r0, r3
0+03a <[^>]+> 436c      	muls	r4, r5
0+03c <[^>]+> 43bd      	bics	r5, r7
0+03e <[^>]+> 43ed      	mvns	r5, r5
0+040 <[^>]+> 4469      	add	r1, sp
0+042 <[^>]+> 4494      	add	ip, r2
0+044 <[^>]+> 44c9      	add	r9, r9
0+046 <[^>]+> 4571      	cmp	r1, lr
0+048 <[^>]+> 4580      	cmp	r8, r0
0+04a <[^>]+> 45f4      	cmp	ip, lr
0+04c <[^>]+> 4648      	mov	r0, r9
0+04e <[^>]+> 46a1      	mov	r9, r4
0+050 <[^>]+> 46c0      	nop			\(mov r8, r8\)
0+052 <[^>]+> 4738      	bx	r7
0+054 <[^>]+> 4740      	bx	r8
0+056 <[^>]+> 0000      	lsls	r0, r0, #0
0+058 <[^>]+> 4778      	bx	pc
0+05a <[^>]+> 4b20      	ldr	r3, \[pc, #128\]	\(0+0dc <[^>]+>\)
0+05c <[^>]+> 4c02      	ldr	r4, \[pc, #8\]	\(0+068 <[^>]+>\)
0+05e <[^>]+> 5088      	str	r0, \[r1, r2\]
0+060 <[^>]+> 5511      	strb	r1, \[r2, r4\]
0+062 <[^>]+> 59f5      	ldr	r5, \[r6, r7\]
0+064 <[^>]+> 5d62      	ldrb	r2, \[r4, r5\]
	\.\.\.
0+068 <[^>]+> 52d1      	strh	r1, \[r2, r3\]
0+06a <[^>]+> 5a23      	ldrh	r3, \[r4, r0\]
0+06c <[^>]+> 57f1      	ldrsb	r1, \[r6, r7\]
0+06e <[^>]+> 5f42      	ldrsh	r2, \[r0, r5\]
0+070 <[^>]+> 67db      	str	r3, \[r3, #124\]
0+072 <[^>]+> 6fe1      	ldr	r1, \[r4, #124\]
0+074 <[^>]+> 682d      	ldr	r5, \[r5, #0\]
0+076 <[^>]+> 77e9      	strb	r1, \[r5, #31\]
0+078 <[^>]+> 7161      	strb	r1, \[r4, #5\]
0+07a <[^>]+> 7032      	strb	r2, \[r6, #0\]
0+07c <[^>]+> 87ec      	strh	r4, \[r5, #62\]
0+07e <[^>]+> 8885      	ldrh	r5, \[r0, #4\]
0+080 <[^>]+> 8813      	ldrh	r3, \[r2, #0\]
0+082 <[^>]+> 93ff      	str	r3, \[sp, #1020\]
0+084 <[^>]+> 990b      	ldr	r1, \[sp, #44\]
0+086 <[^>]+> 9a00      	ldr	r2, \[sp, #0\]
0+088 <[^>]+> a7ff      	add	r7, pc, #1020	\(adr r7,0+488 <[^>]+>\)
0+08a <[^>]+> ac80      	add	r4, sp, #512
0+08c <[^>]+> b043      	add	sp, #268
0+08e <[^>]+> b09a      	sub	sp, #104
0+090 <[^>]+> b0c3      	sub	sp, #268
0+092 <[^>]+> b01b      	add	sp, #108
0+094 <[^>]+> b417      	push	{r0, r1, r2, r4}
0+096 <[^>]+> b5f9      	push	{r0, r3, r4, r5, r6, r7, lr}
0+098 <[^>]+> bc98      	pop	{r3, r4, r7}
0+09a <[^>]+> bdff      	pop	{r0, r1, r2, r3, r4, r5, r6, r7, pc}
0+09c <[^>]+> c3f3      	stmia	r3!, {r0, r1, r4, r5, r6, r7}
0+09e <[^>]+> c8fe      	ldmia	r0!, {r1, r2, r3, r4, r5, r6, r7}
0+0a0 <[^>]+> d0e2      	beq.n	0+068 <[^>]+>
0+0a2 <[^>]+> d1e1      	bne.n	0+068 <[^>]+>
0+0a4 <[^>]+> d2e0      	bcs.n	0+068 <[^>]+>
0+0a6 <[^>]+> d3df      	bcc.n	0+068 <[^>]+>
0+0a8 <[^>]+> d4de      	bmi.n	0+068 <[^>]+>
0+0aa <[^>]+> d5dd      	bpl.n	0+068 <[^>]+>
0+0ac <[^>]+> d6dc      	bvs.n	0+068 <[^>]+>
0+0ae <[^>]+> d7db      	bvc.n	0+068 <[^>]+>
0+0b0 <[^>]+> d8da      	bhi.n	0+068 <[^>]+>
0+0b2 <[^>]+> d9d9      	bls.n	0+068 <[^>]+>
0+0b4 <[^>]+> dad8      	bge.n	0+068 <[^>]+>
0+0b6 <[^>]+> dcd7      	bgt.n	0+068 <[^>]+>
0+0b8 <[^>]+> dbd6      	blt.n	0+068 <[^>]+>
0+0ba <[^>]+> dcd5      	bgt.n	0+068 <[^>]+>
0+0bc <[^>]+> ddd4      	ble.n	0+068 <[^>]+>
0+0be <[^>]+> d8d3      	bhi.n	0+068 <[^>]+>
0+0c0 <[^>]+> d3d2      	bcc.n	0+068 <[^>]+>
0+0c2 <[^>]+> d3d1      	bcc.n	0+068 <[^>]+>
0+0c4 <[^>]+> ded0      	bal.n	0+068 <[^>]+>
0+0c6 <[^>]+> 00ac      	lsls	r4, r5, #2
0+0c8 <[^>]+> 1c9a      	adds	r2, r3, #2
0+0ca <[^>]+> b07f      	add	sp, #508
0+0cc <[^>]+> b0ff      	sub	sp, #508
0+0ce <[^>]+> a8ff      	add	r0, sp, #1020
0+0d0 <[^>]+> a0ff      	add	r0, pc, #1020	\(adr r0,0+4d0 <[^>]+>\)
0+0d2 <[^>]+> b01a      	add	sp, #104
0+0d4 <[^>]+> b09a      	sub	sp, #104
0+0d6 <[^>]+> a81a      	add	r0, sp, #104
0+0d8 <[^>]+> a01a      	add	r0, pc, #104	\(adr r0,0+144 <[^>]+>\)
0+0da <[^>]+> 3168      	adds	r1, #104
0+0dc <[^>]+> 2668      	movs	r6, #104
0+0de <[^>]+> 2f68      	cmp	r7, #104
0+0e0 <[^>]+> 46c0      	nop			\(mov r8, r8\)
0+0e2 <[^>]+> 46c0      	nop			\(mov r8, r8\)
0+0e4 <[^>]+> ea000037 	b	0+0e4 <[^>]+>
			e4: R_ARM_PC24	\.text
0+0e8 <[^>]+> eafffffe 	b	0+000 <[^>]+>
			e8: R_ARM_PC24	\.wombat
0+0ec <[^>]+> eb000037 	bl	0+0e4 <[^>]+>
			ec: R_ARM_PC24	\.text
0+0f0 <[^>]+> ebfffffe 	bl	0+000 <[^>]+>
			f0: R_ARM_PC24	\.wombat
0+0f4 <[^>]+> e12fff10 	bx	r0
0+0f8 <[^>]+> ef123456 	swi	0x00123456
0+0fc <[^>]+> a004      	add	r0, pc, #16	\(adr r0,0+110 <[^>]+>\)
0+0fe <[^>]+> e77f      	b.n	0+000 <[^>]+>
0+100 <[^>]+> e7fe      	b.n	0+000 <[^>]+>
			100: R_ARM_THM_JUMP11	\.wombat
0+102 <[^>]+> f7ff fffe 	bl	0+000 <[^>]+>
			102: R_ARM_THM_CALL	\.text
0+106 <[^>]+> f7ff fffe 	bl	0+000 <[^>]+>
			106: R_ARM_THM_CALL	\.wombat
0+10a <[^>]+> 4700      	bx	r0
0+10c <[^>]+> dfff      	swi	255
	\.\.\.
0+110 <[^>]+> d0fe      	beq.n	0+000 <[^>]+>
			110: R_ARM_THM_JUMP8	\.wombat
0+112 <[^>]+> d1fe      	bne.n	0+000 <[^>]+>
			112: R_ARM_THM_JUMP8	\.wombat
0+114 <[^>]+> d2fe      	bcs.n	0+000 <[^>]+>
			114: R_ARM_THM_JUMP8	\.wombat
0+116 <[^>]+> d3fe      	bcc.n	0+000 <[^>]+>
			116: R_ARM_THM_JUMP8	\.wombat
0+118 <[^>]+> d4fe      	bmi.n	0+000 <[^>]+>
			118: R_ARM_THM_JUMP8	\.wombat
0+11a <[^>]+> d5fe      	bpl.n	0+000 <[^>]+>
			11a: R_ARM_THM_JUMP8	\.wombat
0+11c <[^>]+> d6fe      	bvs.n	0+000 <[^>]+>
			11c: R_ARM_THM_JUMP8	\.wombat
0+11e <[^>]+> d7fe      	bvc.n	0+000 <[^>]+>
			11e: R_ARM_THM_JUMP8	\.wombat
0+120 <[^>]+> d8fe      	bhi.n	0+000 <[^>]+>
			120: R_ARM_THM_JUMP8	\.wombat
0+122 <[^>]+> d9fe      	bls.n	0+000 <[^>]+>
			122: R_ARM_THM_JUMP8	\.wombat
0+124 <[^>]+> dafe      	bge.n	0+000 <[^>]+>
			124: R_ARM_THM_JUMP8	\.wombat
0+126 <[^>]+> dcfe      	bgt.n	0+000 <[^>]+>
			126: R_ARM_THM_JUMP8	\.wombat
0+128 <[^>]+> dbfe      	blt.n	0+000 <[^>]+>
			128: R_ARM_THM_JUMP8	\.wombat
0+12a <[^>]+> dcfe      	bgt.n	0+000 <[^>]+>
			12a: R_ARM_THM_JUMP8	\.wombat
0+12c <[^>]+> ddfe      	ble.n	0+000 <[^>]+>
			12c: R_ARM_THM_JUMP8	\.wombat
0+12e <[^>]+> d8fe      	bhi.n	0+000 <[^>]+>
			12e: R_ARM_THM_JUMP8	\.wombat
0+130 <[^>]+> d3fe      	bcc.n	0+000 <[^>]+>
			130: R_ARM_THM_JUMP8	\.wombat
0+132 <[^>]+> d3fe      	bcc.n	0+000 <[^>]+>
			132: R_ARM_THM_JUMP8	\.wombat
0+134 <[^>]+> f000 fc9a 	bl	0+938 <[^>]+>
			134: R_ARM_THM_CALL	\.text
	\.\.\.
0+938 <[^>]+> f000 f898 	bl	0+134 <[^>]+>
			938: R_ARM_THM_CALL	\.text
@


1.1.2.2
log
@2005-05-01  Zack Weinberg  <zack@@codesourcery.com>

	* gas/config/tc-arm.c (encode_thumb32_addr_mode): Set inst.reloc.pc_rel
	if is_pc.
	(T16_32_TAB): Delete unused entry for BLX.
	(do_t_ldst): Don't offset inst.reloc.exp.X_add_number for PC-relative
	addressing.
	(md_pcrel_from): Report the adjusted PC for
	BFD_RELOC_ARM_THUMB_OFFSET and BFD_RELOC_ARM_T32_OFFSET_IMM.
	(md_apply_fix3): Correct bitmasks for BFD_RELOC_ARM_T32_OFFSET_IMM.
	Do not round up value for PC-relative BFD_RELOC_ARM_THUMB_OFFSET.

	* gas/testsuite/gas/arm/thumb.s: Test PC-relative ldr more thoroughly.
	* gas/testsuite/gas/arm/thumb.d: Update to match.

	* gas/testsuite/gas/arm/thumb32.s: Properly align labels that
	will be targeted by blx instructions.
	* gas/testsuite/gas/arm/thumb32.d: Update to match.  Correct
	expected dissassembly of PC-relative ldr.

	* gas/testsuite/gas/arm/macro1.s: Add leading label and
	trailing padding for a.out compatibility.
	* gas/testsuite/gas/arm/macro1.d: Update to match.
	* gas/testsuite/gas/arm/tcompat2.s: Add trailing padding for a.out
	compatibility.
	* gas/testsuite/gas/arm/tcompat2.d: Update to match.

	* opcodes/arm-dis.c (print_insn_thumb32): Reorganize %a and %A
	handling.  Call info->print_address_func when %a/%A are applied
	to a PC-relative instruction.
@
text
@a183 6
0+93c <[^>]+> 4801      	ldr	r0, \[pc, #4\]	\(0+944 <[^>]+>\)
0+93e <[^>]+> 4801      	ldr	r0, \[pc, #4\]	\(0+944 <[^>]+>\)
0+940 <[^>]+> 4801      	ldr	r0, \[pc, #4\]	\(0+948 <[^>]+>\)
0+942 <[^>]+> 4801      	ldr	r0, \[pc, #4\]	\(0+948 <[^>]+>\)
0+944 <[^>]+> 46c0      	nop			\(mov r8, r8\)
0+946 <[^>]+> 46c0      	nop			\(mov r8, r8\)
@


1.1.2.3
log
@2005-05-01  Zack Weinberg  <zack@@codesourcery.com>

	* gas/config/tc-arm.c (thumb32_mode): Rename unified_syntax.
	All uses changed to match.
	(COND_ALWAYS): Don't offset.
	(COND_MASK): Delete.
	(struct arm_it): Add cond field.
	(struct asm_opcode): Add tag field.  Change some fields to
	unsigned int and/or to bitfields.
	(my_get_expression): If unified_syntax, always treat the
	prefix as optional.
	(s_thumb32, s_thumb32_func): Delete.
	(opcode_select, s_force_thumb): Don't set thumb32_mode.
	(s_syntax): New function.
	(md_pseudo_table): Update to match.
	(do_blx, do_iwmmxt_wldstw): Look at inst.cond, not
	inst.instruction, for the condition.
	(do_it): New function.
	(do_t_branch): Get the condition from inst.cond and patch it
	into the appropriate place.
	(output_inst): If inst.size == 0, output nothing, but do issue
	a diagnostic if any.
	(enum opcode_tag): New set of constants.
	(opcode_lookup): New function.
	(md_assemble): Use opcode_lookup.  Restructure a little.
	(conds, OPS0): Adjust comment.
	(TxCE, TxCM, TUE, TUF): Rewrite.
	(TCC): Delete.
	(TxC3, TC3, tC3, TxCM_, C3, C3E): New notational macros.

	(insns): Use TC3, tC3, or C3, as appropriate, for all
	instructions where the conditional infix appears after the
	third letter of the mnemonic.  Use TCE for 'b'.  Use C3E for
	'cmfe' and 'cnfe'.  Change 'czbne' to 'cbnz', 'czbeq' to 'cbz'.
	Use TUE, with a dummy ARM opcode, for all variants of 'it'.

	* opcodes/arm-dis.c: Change 'czbne' to 'cbnz', 'czbeq' to 'cbz'.

	* gas/testsuite/gas/arm/thumb.d: bal.n is no longer
	distinguishable from b.n.
	* gas/testsuite/gas/arm/thumb32.d: Likewise.  Change 'czbne'
	to 'cbnz', 'czbeq' to 'cbz'.
	* gas/testsuite/gas/arm/thumb32.s: Use .syntax unified.
	Change 'czbne' to 'cbnz', 'czbeq' to 'cbz'.
@
text
@d106 1
a106 1
0+0c4 <[^>]+> e7d0      	b.n	0+068 <[^>]+>
@


