head	1.6;
access;
symbols
	binutils-2_24-branch:1.6.0.22
	binutils-2_24-branchpoint:1.6
	binutils-2_21_1:1.6
	binutils-2_23_2:1.6
	binutils-2_23_1:1.6
	binutils-2_23:1.6
	binutils-2_23-branch:1.6.0.20
	binutils-2_23-branchpoint:1.6
	binutils-2_22_branch:1.6.0.18
	binutils-2_22:1.6
	binutils-2_22-branch:1.6.0.16
	binutils-2_22-branchpoint:1.6
	binutils-2_21:1.6
	binutils-2_21-branch:1.6.0.14
	binutils-2_21-branchpoint:1.6
	binutils-2_20_1:1.6
	binutils-2_20:1.6
	binutils-arc-20081103-branch:1.6.0.12
	binutils-arc-20081103-branchpoint:1.6
	binutils-2_20-branch:1.6.0.10
	binutils-2_20-branchpoint:1.6
	dje-cgen-play1-branch:1.6.0.8
	dje-cgen-play1-branchpoint:1.6
	arc-20081103-branch:1.6.0.6
	arc-20081103-branchpoint:1.6
	binutils-2_19_1:1.6
	binutils-2_19:1.6
	binutils-2_19-branch:1.6.0.4
	binutils-2_19-branchpoint:1.6
	binutils-2_18:1.6
	binutils-2_18-branch:1.6.0.2
	binutils-2_18-branchpoint:1.6
	binutils-csl-coldfire-4_1-32:1.4.2.2
	binutils-csl-sourcerygxx-4_1-32:1.4.2.2
	binutils-csl-innovasic-fido-3_4_4-33:1.4.2.2
	binutils-csl-sourcerygxx-3_4_4-32:1.1
	binutils-csl-coldfire-4_1-30:1.4.2.2
	binutils-csl-sourcerygxx-4_1-30:1.4.2.2
	binutils-csl-coldfire-4_1-28:1.4.2.2
	binutils-csl-sourcerygxx-4_1-29:1.4.2.2
	binutils-csl-sourcerygxx-4_1-28:1.4.2.2
	binutils-csl-arm-2006q3-27:1.4.2.2
	binutils-csl-sourcerygxx-4_1-27:1.4.2.2
	binutils-csl-arm-2006q3-26:1.4.2.2
	binutils-csl-sourcerygxx-4_1-26:1.4.2.2
	binutils-csl-sourcerygxx-4_1-25:1.4.2.2
	binutils-csl-sourcerygxx-4_1-24:1.4.2.2
	binutils-csl-sourcerygxx-4_1-23:1.4.2.2
	binutils-csl-sourcerygxx-4_1-21:1.4.2.2
	binutils-csl-arm-2006q3-21:1.4.2.2
	binutils-csl-sourcerygxx-4_1-22:1.4.2.2
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.4.2.2
	binutils-csl-sourcerygxx-4_1-20:1.4.2.2
	binutils-csl-arm-2006q3-19:1.4.2.2
	binutils-csl-sourcerygxx-4_1-19:1.4.2.2
	binutils-csl-sourcerygxx-4_1-18:1.4.2.2
	binutils-csl-renesas-4_1-9:1.4.2.2
	binutils-csl-sourcerygxx-3_4_4-25:1.1
	binutils-csl-renesas-4_1-8:1.4.2.2
	binutils-csl-renesas-4_1-7:1.4.2.2
	binutils-csl-renesas-4_1-6:1.4.2.2
	binutils-csl-sourcerygxx-4_1-17:1.4.2.1
	binutils-csl-sourcerygxx-4_1-14:1.4.2.1
	binutils-csl-sourcerygxx-4_1-15:1.4.2.1
	binutils-csl-sourcerygxx-4_1-13:1.4.2.1
	binutils-2_17:1.4.4.1
	binutils-csl-sourcerygxx-4_1-12:1.4.2.1
	binutils-csl-sourcerygxx-3_4_4-21:1.4.2.1
	binutils-csl-wrs-linux-3_4_4-24:1.1.12.4
	binutils-csl-wrs-linux-3_4_4-23:1.1.12.4
	binutils-csl-sourcerygxx-4_1-9:1.4.2.1
	binutils-csl-sourcerygxx-4_1-8:1.4.2.1
	binutils-csl-sourcerygxx-4_1-7:1.4.2.1
	binutils-csl-arm-2006q1-6:1.4.2.1
	binutils-csl-sourcerygxx-4_1-6:1.4.2.1
	binutils-csl-wrs-linux-3_4_4-22:1.1.12.4
	binutils-csl-coldfire-4_1-11:1.4.2.1
	binutils-csl-sourcerygxx-3_4_4-19:1.4.2.1
	binutils-csl-coldfire-4_1-10:1.4.2.1
	binutils-csl-sourcerygxx-4_1-5:1.4.2.1
	binutils-csl-sourcerygxx-4_1-4:1.4.2.1
	binutils-csl-wrs-linux-3_4_4-21:1.1.12.4
	binutils-csl-morpho-4_1-4:1.4
	binutils-csl-sourcerygxx-3_4_4-17:1.4
	binutils-csl-wrs-linux-3_4_4-20:1.1.12.3
	binutils-2_17-branch:1.4.0.4
	binutils-2_17-branchpoint:1.4
	binutils-csl-2_17-branch:1.4.0.2
	binutils-csl-2_17-branchpoint:1.4
	binutils-csl-gxxpro-3_4-branch:1.1.0.14
	binutils-csl-gxxpro-3_4-branchpoint:1.1
	binutils-2_16_1:1.1
	binutils-csl-arm-2005q1b:1.1.12.2
	binutils-2_16:1.1
	binutils-csl-arm-2005q1a:1.1.12.1
	binutils-csl-arm-2005q1-branch:1.1.0.12
	binutils-csl-arm-2005q1-branchpoint:1.1
	binutils-2_16-branch:1.1.0.10
	binutils-2_16-branchpoint:1.1
	csl-arm-2004-q3d:1.1
	csl-arm-2004-q3:1.1
	binutils-2_15:1.1
	binutils-2_15-branchpoint:1.1
	csl-arm-2004-q1a:1.1
	csl-arm-2004-q1:1.1
	binutils-2_15-branch:1.1.0.8
	cagney_bfdfile-20040213-branch:1.1.0.6
	cagney_bfdfile-20040213-branchpoint:1.1
	cagney_bigcore-20040122-branch:1.1.0.4
	cagney_bigcore-20040122-branchpoint:1.1
	csl-arm-2003-q4:1.1
	binutils-2_14:1.1
	binutils-2_14-branch:1.1.0.2
	binutils-2_14-branchpoint:1.1
	binutils_latest_snapshot:1.6;
locks; strict;
comment	@# @;


1.6
date	2006.08.03.15.57.04;	author jsm28;	state Exp;
branches;
next	1.5;

1.5
date	2006.05.02.14.42.30;	author jsm28;	state Exp;
branches;
next	1.4;

1.4
date	2005.08.03.09.50.43;	author nickc;	state Exp;
branches
	1.4.2.1
	1.4.4.1;
next	1.3;

1.3
date	2005.05.18.05.40.09;	author zack;	state Exp;
branches;
next	1.2;

1.2
date	2005.03.21.15.19.56;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.25.20.55.59;	author nickc;	state Exp;
branches
	1.1.12.1;
next	;

1.4.2.1
date	2006.05.02.14.51.29;	author jsm28;	state Exp;
branches;
next	1.4.2.2;

1.4.2.2
date	2006.08.03.16.23.01;	author jsm28;	state Exp;
branches;
next	;

1.4.4.1
date	2006.05.02.14.45.00;	author jsm28;	state Exp;
branches;
next	;

1.1.12.1
date	2005.03.28.15.30.08;	author drow;	state Exp;
branches;
next	1.1.12.2;

1.1.12.2
date	2005.04.26.05.31.42;	author zack;	state Exp;
branches;
next	1.1.12.3;

1.1.12.3
date	2006.01.17.16.40.17;	author jsm28;	state Exp;
branches;
next	1.1.12.4;

1.1.12.4
date	2006.04.28.19.10.41;	author jsm28;	state Exp;
branches;
next	;


desc
@@


1.6
log
@gas:
	* config/tc-arm.c (enum operand_parse_code): Add OP_RIWC_RIWG.
	(parse_operands): Handle it.
	(insns): Use it for tmcr and tmrc.

gas/testsuite:
	* gas/arm/iwmmxt.s: Test tmcr and tmrc with wcgr registers.
	* gas/arm/iwmmxt.d: Update.
@
text
@	.text
	.global iwmmxt
iwmmxt:
	
	tandcb		r15
	TANDCHLE	r15
	TANDCWge	r15

	TBCSTBlt	wr0, r1
	tbcsth		wr1, r2
	TBCSTWGT	wr2, r3

	textrcb		r15, #7
	textrcheq	r15, #2
	TEXTRCW		r15, #0

	TEXTRMUB	r14, wr3, #6
	textrmsbne	r13, wr4, #5
	textrmUH	r12, wr5, #2
	textrmSh	r11, wr6, #0
	TEXTRMUWcs	r10, wr7, #1
	textrmswhs	r9,  wr8, #0

	TINSRB		wr9,  r8, #4
	tinsrhcc	wr10, r7, #0
	tinsrw		wr11, r6, #1

	tmcrul		wcid, r5
	TMCRR		wr12, r6, r7
	tmialo		wr13, r5, r4
	tmiaphMI	wr14, r3, r2
	
	TMIAbb		wr15, r0, r1
	TMIAbTpl	wr13, r2, r3
	tmiaBtvs	wr1, r4, r5
	tmiaTTvc	wr2, r6, r7

	tmovmskB	r8, wr3
	TMOVMSKHhi	r9, wr4
	tmovmskwls	r10, wr5

	tmrc		r11, wcon
	TMRRCge		r12, r13, wr6
	
	torcb		r15
	torchlt		r15
	TORCW		r15

	waccb		wr7,  wr8
	WACCHlt		wr9,  wr10
	WACCWGT		wr11, wr12

	waddble		wr13, wr14, wr15
	waddBUS		wr0,  wr2,  wr4
	waddbssal	wr6,  wr8,  wr10
	waddH		wr12, wr14, wr15
	WADDHUSLE	wr13, wr12, wr11
	WADDHSSeq	wr10, wr9,  wr8
	WADDWne		wr7,  wr6, wr5
	waddwus		wr4,  wr3, wr2
	waddwsscs	wr1,  wr0, wr15

	waligni		wr3,  wr5, wr7, #5
	WALIGNR0hs	wr9,  wr11, wr13
	walignr1	wr7,  wr6, wr5
	walignr2cc	wr2,  wr4, wr8
	WALIGNR3ul	wr5,  wr9, wr1

	wand		wr3, wr8, wr1
	wandn		wr3, wr2, wr6

	wavg2b		wr7, wr8, wr9
	wavg2hle	wr10, wr11, wr12
	wavg2brge	wr13, wr14, wr15
	wavg2hr		wr0, wr1, wr12

	wcmpeqb		wr13, wr4, wr5
	wcmpeqheq	wr4, wr7, wr0
	wcmpeqWlt	wr6, wr9, wr8

	wcmpgtUbul	wr1, wr2, wr3
	wcmpgtsb	wr4, wr5, wr6
	wcmpgtuhcc	wr7, wr8, wr9
	wcmpgtsh	wr10, wr11, wr13
	wcmpgtuw	wr2, wr4, wr3
	wcmpgtswhi	wr5, wr6, wr3

	wldrb		wr1, [r0, #36]
	wldrheq		wr2, [r1, #24]!
	wldrwne		wr3, [r2], #16
	wldrdvs		wr4, [r3, #-332]
	wldrw		wcssf, [r1, #20]!
	
	wmacu		wr4, wr7, wr9
	wmacscs		wr8, wr10, wr14
	wmacuzal	wr15, wr12, wr11
	wmacsz		wr3, wr8, wr10

	wmaddu		wr12, wr11, wr7
	wmaddsgt	wr5, wr3, wr15

	wmaxubhs	wr3, wr4, wr5
	wmaxsb		wr3, wr4, wr5
	wmaxuhpl	wr3, wr4, wr5
	wmaxshmi	wr3, wr4, wr5
	wmaxuwge	wr3, wr4, wr5
	wmaxswle	wr3, wr4, wr5

	wminubul	wr4, wr12, wr10
	wminsb		wr4, wr12, wr10
	wminuhvc	wr4, wr12, wr10
	wminsh		wr4, wr12, wr10
	wminuw		wr4, wr12, wr10
	wminswcc	wr4, wr12, wr10

	wmoveq		wr3, wr4

	wmulum		wr2, wr1, wr8
	wmulsm		wr2, wr1, wr8
	wmulul		wr2, wr1, wr8
	wmulslle	wr2, wr1, wr8

	woreq		wr11, wr8, wr14

	wpackhuseq	wr0, wr1, wr3
	wpackwus	wr0, wr1, wr3
	wpackdusal	wr0, wr1, wr3
	wpackhsshi	wr0, wr1, wr3
	wpackwss	wr0, wr1, wr3
	wpackdsseq	wr0, wr1, wr3

	wrorh		wr4, wr5, wr6
	wrorwmi		wr4, wr5, wr6
	wrord		wr4, wr5, wr6
	wrorhg		wr9, wr10, wcgr0
	wrorwgge	wr9, wr10, wcgr1
	wrordg		wr9, wr10, wcgr2

	wsadb		wr2, wr0, wr10
	wsadhal		wr2, wr0, wr10
	wsadbz		wr2, wr0, wr10
	wsadhzle	wr2, wr0, wr10

	wshufheq	wr4, wr9, #251

	wsllh		wr2, wr9, wr4
	wsllw		wr2, wr9, wr4
	wslldeq		wr2, wr9, wr4
	wsllhgeq	wr2, wr9, wcgr3
	wsllwgvc	wr2, wr9, wcgr2
	wslldg		wr2, wr9, wcgr1

	wsrah		wr1, wr5, wr7
	wsraw		wr1, wr5, wr7
	wsradeq		wr1, wr5, wr7
	wsrahg		wr1, wr5, wcgr3
	wsrawgmi	wr1, wr5, wcgr0
	wsradg		wr1, wr5, wcgr1

	wsrlh		wr1, wr5, wr7
	wsrlw		wr1, wr5, wr7
	wsrldeq		wr1, wr5, wr7
	wsrlhg		wr1, wr5, wcgr3
	wsrlwgmi	wr1, wr5, wcgr0
	wsrldg		wr1, wr5, wcgr1

	wstrb		wr1, [r1, #0xFF]
	wstrh		wr1, [r1, #-0xFF]!
	wstrw		wr1, [r1], #4
	wstrd		wr1, [r1, #0x3FC]
	wstrw		wcasf, [r1], #300

	wsubbusul	wr1, wr3, wr14
	wsubhus		wr1, wr3, wr14
	wsubwusul	wr1, wr3, wr14
	wsubbssul	wr1, wr3, wr14
	wsubhssul	wr1, wr3, wr14
	wsubwss		wr1, wr3, wr14

	wunpckehub	wr3, wr6
	wunpckehuhmi	wr3, wr6
	wunpckehuw	wr3, wr6
	wunpckehsb	wr3, wr6
	wunpckehsh	wr3, wr6
	wunpckehsweq	wr3, wr6

	wunpckihb	wr5, wr12, wr10
	wunpckihhhi	wr5, wr12, wr10
	wunpckihw	wr5, wr12, wr10

	wunpckelub	wr3, wr5
	wunpckeluhne	wr3, wr5
	wunpckeluw	wr3, wr5
	wunpckelsbgt	wr3, wr5
	wunpckelsh	wr3, wr5
	wunpckelsw	wr3, wr5

	wunpckilb	wr4, wr5, wr10
	wunpckilh	wr4, wr5, wr10
	wunpckilweq	wr4, wr5, wr10

	wxorne		wr3, wr4, wr5

	wzeroge		wr7

	tmcr		wcgr0, r0
	tmrc		r1, wcgr2

	@@ a.out-required section size padding
	nop
@


1.5
log
@	* config/tc-arm.c (do_iwmmxt_wldstbh): Don't multiply offset by 4
	here.
	(md_apply_fix3): Multiply offset by 4 here for
	BFD_RELOC_ARM_CP_OFF_IMM_S2 and BFD_RELOC_ARM_T32_CP_OFF_IMM_S2.

testsuite:
	* gas/arm/iwmmxt.s: Increase offsets for wstrb and wstrh.
	* gas/arm/iwmmxt.d: Update expected results.
	* gas/arm/iwmmxt-bad2.s: Test wstrb, wstrh, wldrb and wldrh.
	* gas/arm/iwmmxt-bad2.l: Update expected error messages.
@
text
@d206 3
a210 2
	nop
	nop
@


1.4
log
@config/tc-arm.c (do_iwmmxt_wldstd): Correct the offset range for WLDRD/WSTRD
  instruction.
gas/arm/iwmmxt-bad2.s: New file: Check for error messages about erroneous
  offsets in iwmmxt instructions.  Cannot be part of iwmmxt-bad.s because
  the errors there stop the assembler before it gets to check the offsets
  in instructions.
gas/arm/iwmmxt-bad2.d: New file.
gas/arm/iwmmxt-bad2.l: New file: Expected error messages.
gas/arm/iwmmxt.s: Change the offset values of the WLDRD, WSTRD and WSTRW
  instructions to be larger than +/-255.
gas/arm/iwmmxt.d: Fix the expected results for these instructions.
@
text
@d167 2
a168 2
	wstrb		wr1, [r1, #4]
	wstrh		wr1, [r1, #4]!
@


1.4.2.1
log
@	* gas/config/tc-arm.c (do_iwmmxt_wldstbh): Don't multiply offset
	by 4 here.
	(md_apply_fix3): Multiply offset by 4 here for
	BFD_RELOC_ARM_CP_OFF_IMM_S2 and BFD_RELOC_ARM_T32_CP_OFF_IMM_S2.
	* gas/testsuite/gas/arm/iwmmxt.s: Increase offsets for wstrb and
	wstrh.
	* gas/testsuite/gas/arm/iwmmxt.d: Update expected results.
	* gas/testsuite/gas/arm/iwmmxt-bad2.s: Test wstrb, wstrh, wldrb
	and wldrh.
	* gas/testsuite/gas/arm/iwmmxt-bad2.l: Update expected error
	messages.
@
text
@d167 2
a168 2
	wstrb		wr1, [r1, #0xFF]
	wstrh		wr1, [r1, #-0xFF]!
@


1.4.2.2
log
@	Backport from mainline.

	gas/
	* config/tc-arm.c (parse_operands): Handle invalid register name
	for OP_RIWR_RIWC.

	gas/testsuite/
	* gas/arm/iwmmxt-bad.s: Test invalid register names for wldrw and
	wstrw.
	* gas/arm/iwmmxt-bad.l: Update.

	gas/
	* config/tc-arm.c (enum operand_parse_code): Add OP_RIWC_RIWG.
	(parse_operands): Handle it.
	(insns): Use it for tmcr and tmrc.

	gas/testsuite/
	* gas/arm/iwmmxt.s: Test tmcr and tmrc with wcgr registers.
	* gas/arm/iwmmxt.d: Update.
@
text
@a205 3
	tmcr		wcgr0, r0
	tmrc		r1, wcgr2

d208 2
@


1.4.4.1
log
@	* config/tc-arm.c (do_iwmmxt_wldstbh): Don't multiply offset by 4
	here.
	(md_apply_fix3): Multiply offset by 4 here for
	BFD_RELOC_ARM_CP_OFF_IMM_S2 and BFD_RELOC_ARM_T32_CP_OFF_IMM_S2.

testsuite:
	* gas/arm/iwmmxt.s: Increase offsets for wstrb and wstrh.
	* gas/arm/iwmmxt.d: Update expected results.
	* gas/arm/iwmmxt-bad2.s: Test wstrb, wstrh, wldrb and wldrh.
	* gas/arm/iwmmxt-bad2.l: Update expected error messages.
@
text
@d167 2
a168 2
	wstrb		wr1, [r1, #0xFF]
	wstrh		wr1, [r1, #-0xFF]!
@


1.3
log
@include/elf:
	* arm.h: Import complete list of official relocation names
	and numbers from AAELF.  Define FAKE_RELOCs for old names.
	Remove a few old names no longer used anywhere.

bfd:
	* elf32-arm.c: Wherever possible, use official reloc names
	from AAELF.
	(elf32_arm_howto_table, elf32_arm_tls_gd32_howto)
	(elf32_arm_tls_ldo32_howto, elf32_arm_tls_ldm32_howto)
	(elf32_arm_tls_le32_howto, elf32_arm_tls_ie32_howto)
	(elf32_arm_vtinherit_howto, elf32_arm_vtentry_howto)
	(elf32_arm_pc11_howto, elf32_arm_thm_pc9_howto, elf32_arm_got_prel)
	(elf32_arm_r_howto): Replace with elf32_arm_howto_table_1,
	elf32_arm_howto_table_2, and elf32_arm_howto_table_3.
	Add many new relocations from AAELF.
	(elf32_arm_howto_from_type): Update to match.
	(elf32_arm_reloc_map): Add entries for R_ARM_THM_JUMP24,
	R_ARM_THM_JUMP11, R_ARM_THM_JUMP19, R_ARM_THM_JUMP8,
	R_ARM_THM_JUMP6, R_ARM_GNU_VTINHERIT, and R_ARM_GNU_VTENTRY.
	(elf32_arm_reloc_type_lookup): Use elf32_arm_howto_from_type.
	(elf32_arm_final_link_relocate): Add support for
	R_ARM_THM_JUMP24, R_ARM_THM_JUMP19, R_ARM_THM_JUMP6.  Remove
	case entries redundant with default.

	* reloc.c: Reorganize ARM relocations.  Add Thumb
	assembler-internal relocations BFD_RELOC_ARM_T32_OFFSET_U8,
	BFD_RELOC_ARM_T32_OFFSET_IMM, BFD_RELOC_ARM_T32_IMMEDIATE.
	Add visible relocations BFD_RELOC_THUMB_PCREL_BRANCH7,
	BFD_RELOC_THUMB_BRANCH20, BFD_RELOC_THUMB_BRANCH25.
	Delete unused relocations BFD_RELOC_ARM_GOT12, BFD_RELOC_ARM_COPY.
	* bfd-in2.h, libbfd.h: Regenerate.

opcodes:
	* arm-dis.c (thumb_opcodes): Add disassembly for V6T2 16-bit
	instructions.  Adjust disassembly of some opcodes to match
	unified syntax.
	(thumb32_opcodes): New table.
	(print_insn_thumb): Rename print_insn_thumb16; don't handle
	two-halfword branches here.
	(print_insn_thumb32): New function.
	(print_insn): Choose among print_insn_arm, print_insn_thumb16,
	and print_insn_thumb32.  Be consistent about order of
	halfwords when printing 32-bit instructions.

gas:
	* hash.c (hash_lookup): Add len parameter.  All callers changed.
	(hash_find_n): New interface.
	* hash.h: Prototype hash_find_n.
	* sb.c: Include as.h.
	(scrub_from_sb, sb_to_scrub, scrub_position): New statics.
	(sb_scrub_and_add_sb): New interface.
	* sb.h: Prototype sb_scrub_and_add_sb.
	* input-scrub.c (input_scrub_include_sb): Use sb_scrub_and_add_sb.

	* config/tc-arm.h (TC_FORCE_RELOCATION_LOCAL): Remove
	reference to BFD_RELOC_ARM_GOT12 which is never generated.
	* config/tc-arm.c: Rewrite, adding Thumb-2 support.

gas/testsuite:
	* gas/arm/arm.exp: Convert all existing "gas_test" tests to
	"run_dump_test" tests.  Run more tests unconditionally.  Run new tests.
	* gas/arm/arch4t.s, gas/arm/arch6zk.s, gas/arm/arm3.s, gas/arm/arm6.s
	* gas/arm/arm7dm.s, gas/arm/bignum1.s, gas/arm/float.s
	* gas/arm/immed.s, gas/arm/iwmmxt.s, gas/arm/offset.s, gas/arm/thumb.s:
	Adjust to work as a dump test.
	* gas/arm/arch4t.d, gas/arm/arch6zk.d, gas/arm/arm3.d, gas/arm/arm6.d
	* gas/arm/arm7dm.d, gas/arm/bignum1.d, gas/arm/float.d
	* gas/arm/immed.d, gas/arm/iwmmxt.d, gas/arm/offset.d, gas/arm/thumb.d:
	New files.

	* gas/arm/armv1-bad.l, gas/arm/armv1-bad.s: Remove tests for
	diagnostics that don't happen in the first pass anymore.

	* gas/arm/iwmmxt-bad.l, gas/arm/r15-bad.l, gas/arm/req.l
	* gas/arm/vfp-bad.l:
	Update expected diagnostics.
	* gas/arm/pic.d: Update expected reloc name.
	* gas/arm/thumbv6.d: CPY no longer appears in disassembly.
	* gas/arm/r15-bad.s: Avoid two-argument mul.
	* gas/arm/req.s: Adjust comments.
	* gas/arm/maverick.d, gas/arm/maverick.s: Avoid inappropriate
	use of PC.

	* gas/arm/macro-1.d, gas/arm/macro1.s
	* gas/arm/t16-bad.l, gas/arm/t16-bad.s
	* gas/arm/tcompat.d, gas/arm/tcompat.s
	* gas/arm/tcompat2.d, gas/arm/tcompat2.s
	* gas/arm/thumb32.d, gas/arm/thumb32.s
	New test pair.

ld/testsuite:
	* ld-arm/mixed-app.d: Adjust expected disassembly a little.
@
text
@d91 1
a91 1
	wldrdvs		wr4, [r3, #8]
d170 2
a171 2
	wstrd		wr1, [r1, #4]
	wstrw		wcasf, [r1], #4
@


1.2
log
@Update instructions that use the "never" value in the conditional field to use
"le" instead.  This is so that the disassembler will disassemble them.
@
text
@d205 5
@


1.1
log
@Add iWMMXt support
@
text
@d57 1
a57 1
	WADDHUSNV	wr13, wr12, wr11
d107 1
a107 1
	wmaxswnv	wr3, wr4, wr5
d142 1
a142 1
	wsadhznv	wr2, wr0, wr10
@


1.1.12.1
log
@Backport ARM patches from HEAD to binutils-csl-arm-2005q1-branch.
@
text
@d57 1
a57 1
	WADDHUSLE	wr13, wr12, wr11
d107 1
a107 1
	wmaxswle	wr3, wr4, wr5
d142 1
a142 1
	wsadhzle	wr2, wr0, wr10
@


1.1.12.2
log
@	Thumb32 assembler.

	* include/elf/arm.h: Import full set of relocation names from
	latest AAELF.  Make the primary name of all relocations be the one
	AAELF specifies.  Provide aliases under the traditional names.
	Kill FIRST_INVALID_RELOC_* and LAST_INVALID_RELOC_*.
	* bfd/reloc.c: Reorganize ARM relocations.  Remove ARM relocations
	that are never generated.  Document more of the relocations.  Add
	relocations for Thumb32.
	* bfd/libbfd.h, bfd/bfd-in2.h: Regenerate.
	* bfd/elf32-arm.c: Reorganize howto tables.  Implement Thumb32
	relocations.
	* ld/testsuite/ld-arm/mixed-app.d: Adjust expectations for
	renamed relocations.

	* gas/hash.c (hash_find_n): New interface.
	* gas/hash.h: Prototype it.

	* gas/config/tc-arm.c: Rewrite and reorganize.  Implement 32-bit
	Thumb instructions.
	* gas/testsuite/gas/arm: Convert all "gas_test" style tests to
	"run_dump_test" style tests, for more thorough testing.  Make
	adjustments to expectations where necessary.
	* gas/testsuite/gas/arm/t16-bad.s, gas/testsuite/gas/arm/tcompat.s
	* gas/testsuite/gas/arm/tcompat2.s, gas/testsuite/gas/arm/thumb32.s:
	New test cases.

	* opcodes/arm-dis.c: Add support for Thumb32 instructions and
	16-bit V6T2 instructions.
@
text
@a204 5

	@@ a.out-required section size padding
	nop
	nop
	nop
@


1.1.12.3
log
@	Backport:
	2005-08-02  Khem Raj  <kraj@@mvista.com>

	* config/tc-arm.c (do_iwmmxt_wldstd): Correct the offset range for
	WLDRD/WSTRD instruction.

	2005-08-03  Nick Clifton  <nickc@@redhat.com>

	* gas/arm/iwmmxt-bad2.s: New file: Check for error messages about
	erroneous offsets in iwmmxt instructions.  Cannot be part of
	iwmmxt-bad.s because the errors there stop the assembler before it
	gets to check the offsets in instructions.
	* gas/arm/iwmmxt-bad2.d: New file.
	* gas/arm/iwmmxt-bad2.l: New file: Expected error messages.

	2005-08-02  Khem Raj  <kraj@@mvista.com>

	* gas/arm/iwmmxt.s: Change the offset values of the WLDRD, WSTRD
	and WSTRW instructions to be larger than +/-255.
	* gas/arm/iwmmxt.d: Fix the expected results for these
	instructions.
@
text
@d91 1
a91 1
	wldrdvs		wr4, [r3, #-332]
d170 2
a171 2
	wstrd		wr1, [r1, #0x3FC]
	wstrw		wcasf, [r1], #300
@


1.1.12.4
log
@	* gas/config/tc-arm.c (do_iwmmxt_wldstbh): Don't multiply offset
	by 4 here.
	(md_apply_fix3): Multiply offset by 4 here for
	BFD_RELOC_ARM_CP_OFF_IMM_S2.
	* gas/testsuite/gas/arm/arm.exp: Run iwmmxt-bad2.
	* gas/testsuite/gas/arm/iwmmxt.s: Increase offsets for wstrb and
	wstrh.
	* gas/testsuite/gas/arm/iwmmxt.d: Update expected results.
	* gas/testsuite/gas/arm/iwmmxt-bad2.s: Test wstrb, wstrh, wldrb
	and wldrh.
	* gas/testsuite/gas/arm/iwmmxt-bad2.l: Update expected error
	messages.
@
text
@d167 2
a168 2
	wstrb		wr1, [r1, #0xFF]
	wstrh		wr1, [r1, #-0xFF]!
@


