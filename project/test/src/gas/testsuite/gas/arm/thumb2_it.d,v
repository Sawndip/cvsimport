head	1.7;
access;
symbols
	binutils-2_24-branch:1.6.0.10
	binutils-2_24-branchpoint:1.6
	binutils-2_21_1:1.6
	binutils-2_23_2:1.6
	binutils-2_23_1:1.6
	binutils-2_23:1.6
	binutils-2_23-branch:1.6.0.8
	binutils-2_23-branchpoint:1.6
	binutils-2_22_branch:1.6.0.6
	binutils-2_22:1.6
	binutils-2_22-branch:1.6.0.4
	binutils-2_22-branchpoint:1.6
	binutils-2_21:1.6
	binutils-2_21-branch:1.6.0.2
	binutils-2_21-branchpoint:1.6
	binutils-2_20_1:1.4
	binutils-2_20:1.4
	binutils-arc-20081103-branch:1.2.0.12
	binutils-arc-20081103-branchpoint:1.2
	binutils-2_20-branch:1.4.0.2
	binutils-2_20-branchpoint:1.4
	dje-cgen-play1-branch:1.3.0.2
	dje-cgen-play1-branchpoint:1.3
	arc-20081103-branch:1.2.0.10
	arc-20081103-branchpoint:1.2
	binutils-2_19_1:1.2
	binutils-2_19:1.2
	binutils-2_19-branch:1.2.0.8
	binutils-2_19-branchpoint:1.2
	binutils-2_18:1.2
	binutils-2_18-branch:1.2.0.6
	binutils-2_18-branchpoint:1.2
	binutils-csl-coldfire-4_1-32:1.2
	binutils-csl-sourcerygxx-4_1-32:1.2
	binutils-csl-innovasic-fido-3_4_4-33:1.2
	binutils-csl-coldfire-4_1-30:1.2
	binutils-csl-sourcerygxx-4_1-30:1.2
	binutils-csl-coldfire-4_1-28:1.2
	binutils-csl-sourcerygxx-4_1-29:1.2
	binutils-csl-sourcerygxx-4_1-28:1.2
	binutils-csl-arm-2006q3-27:1.2
	binutils-csl-sourcerygxx-4_1-27:1.2
	binutils-csl-arm-2006q3-26:1.2
	binutils-csl-sourcerygxx-4_1-26:1.2
	binutils-csl-sourcerygxx-4_1-25:1.2
	binutils-csl-sourcerygxx-4_1-24:1.2
	binutils-csl-sourcerygxx-4_1-23:1.2
	binutils-csl-sourcerygxx-4_1-21:1.2
	binutils-csl-arm-2006q3-21:1.2
	binutils-csl-sourcerygxx-4_1-22:1.2
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.2
	binutils-csl-sourcerygxx-4_1-20:1.2
	binutils-csl-arm-2006q3-19:1.2
	binutils-csl-sourcerygxx-4_1-19:1.2
	binutils-csl-sourcerygxx-4_1-18:1.2
	binutils-csl-renesas-4_1-9:1.2
	binutils-csl-renesas-4_1-8:1.2
	binutils-csl-renesas-4_1-7:1.2
	binutils-csl-renesas-4_1-6:1.2
	binutils-csl-sourcerygxx-4_1-17:1.2
	binutils-csl-sourcerygxx-4_1-14:1.2
	binutils-csl-sourcerygxx-4_1-15:1.2
	binutils-csl-sourcerygxx-4_1-13:1.2
	binutils-2_17:1.2
	binutils-csl-sourcerygxx-4_1-12:1.2
	binutils-csl-sourcerygxx-3_4_4-21:1.2
	binutils-csl-sourcerygxx-4_1-9:1.2
	binutils-csl-sourcerygxx-4_1-8:1.2
	binutils-csl-sourcerygxx-4_1-7:1.2
	binutils-csl-arm-2006q1-6:1.2
	binutils-csl-sourcerygxx-4_1-6:1.2
	binutils-csl-coldfire-4_1-11:1.2
	binutils-csl-sourcerygxx-3_4_4-19:1.2
	binutils-csl-coldfire-4_1-10:1.2
	binutils-csl-sourcerygxx-4_1-5:1.2
	binutils-csl-sourcerygxx-4_1-4:1.2
	binutils-csl-morpho-4_1-4:1.2
	binutils-csl-sourcerygxx-3_4_4-17:1.2
	binutils-2_17-branch:1.2.0.4
	binutils-2_17-branchpoint:1.2
	binutils-csl-2_17-branch:1.2.0.2
	binutils-csl-2_17-branchpoint:1.2
	binutils_latest_snapshot:1.7;
locks; strict;
comment	@# @;


1.7
date	2013.10.04.15.26.18;	author ktkachov;	state Exp;
branches;
next	1.6;

1.6
date	2010.06.07.10.43.51;	author mgretton;	state Exp;
branches;
next	1.5;

1.5
date	2010.05.28.16.02.18;	author mgretton;	state Exp;
branches;
next	1.4;

1.4
date	2009.06.30.11.57.05;	author nickc;	state Exp;
branches;
next	1.3;

1.3
date	2009.06.22.14.40.28;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.15.19.19.55;	author pbrook;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.05.14.29.38;	author pbrook;	state Exp;
branches;
next	;


desc
@@


1.7
log
@[gas/]
2013-10-04  Kyrylo Tkachov  <kyrylo.tkachov@@arm.com>

	* config/tc-arm.c (do_t_mvn_tst): Use narrow form for tst when
	possible.


[gas/testsuite/]
2013-10-04  Kyrylo Tkachov  <kyrylo.tkachov@@arm.com>

	* gas/arm/thumb2_it.s: Add test for narrow tst.
	* gas/arm/thumb2_it.d: Update expected output.
	* gas/arm/thumb2_it_auto.d: Likewise.
@
text
@# name: Mixed 16 and 32-bit Thumb conditional instructions
# as: -march=armv6kt2
#skip: *-*-*aout*
# objdump: -dr --prefix-addresses --show-raw-insn
# Modifications to this file shall be mirrored to thumb2_it_auto.d

.*: +file format .*arm.*

Disassembly of section .text:
0+000 <[^>]+> bf05      	ittet	eq
0+002 <[^>]+> 1880      	addeq	r0, r0, r2
0+004 <[^>]+> 4440      	addeq	r0, r8
0+006 <[^>]+> 1888      	addne	r0, r1, r2
0+008 <[^>]+> eb11 0002 	addseq.w	r0, r1, r2
0+00c <[^>]+> 4410      	add	r0, r2
0+00e <[^>]+> 4440      	add	r0, r8
0+010 <[^>]+> 1880      	adds	r0, r0, r2
0+012 <[^>]+> eb10 0008 	adds.w	r0, r0, r8
0+016 <[^>]+> 1888      	adds	r0, r1, r2
0+018 <[^>]+> bf0a      	itet	eq
0+01a <[^>]+> 4310      	orreq	r0, r2
0+01c <[^>]+> ea40 0008 	orrne.w	r0, r0, r8
0+020 <[^>]+> ea50 0002 	orrseq.w	r0, r0, r2
0+024 <[^>]+> ea40 0002 	orr.w	r0, r0, r2
0+028 <[^>]+> ea40 0008 	orr.w	r0, r0, r8
0+02c <[^>]+> 4310      	orrs	r0, r2
0+02e <[^>]+> bf01      	itttt	eq
0+030 <[^>]+> 4090      	lsleq	r0, r2
0+032 <[^>]+> fa00 f008 	lsleq.w	r0, r0, r8
0+036 <[^>]+> fa01 f002 	lsleq.w	r0, r1, r2
0+03a <[^>]+> fa10 f002 	lslseq.w	r0, r0, r2
0+03e <[^>]+> bf02      	ittt	eq
0+040 <[^>]+> 0048      	lsleq	r0, r1, #1
0+042 <[^>]+> ea4f 0048 	moveq.w	r0, r8, lsl #1
0+046 <[^>]+> ea5f 0040 	movseq.w	r0, r0, lsl #1
0+04a <[^>]+> fa00 f002 	lsl.w	r0, r0, r2
0+04e <[^>]+> 4090      	lsls	r0, r2
0+050 <[^>]+> ea4f 0041 	mov.w	r0, r1, lsl #1
0+054 <[^>]+> 0048      	lsls	r0, r1, #1
0+056 <[^>]+> bf01      	itttt	eq
0+058 <[^>]+> 4288      	cmpeq	r0, r1
0+05a <[^>]+> 4540      	cmpeq	r0, r8
0+05c <[^>]+> 4608      	moveq	r0, r1
0+05e <[^>]+> ea5f 0001 	movseq.w	r0, r1
0+062 <[^>]+> bf08      	it	eq
0+064 <[^>]+> 4640      	moveq	r0, r8
0+066 <[^>]+> 4608      	mov	r0, r1
0+068 <[^>]+> 0008      	movs	r0, r1
0+06a <[^>]+> ea5f 0008 	movs.w	r0, r8
0+06e <[^>]+> bf01      	itttt	eq
0+070 <[^>]+> 43c8      	mvneq	r0, r1
0+072 <[^>]+> ea6f 0008 	mvneq.w	r0, r8
0+076 <[^>]+> ea7f 0001 	mvnseq.w	r0, r1
0+07a <[^>]+> 42c8      	cmneq	r0, r1
0+07c <[^>]+> ea6f 0001 	mvn.w	r0, r1
0+080 <[^>]+> 43c8      	mvns	r0, r1
0+082 <[^>]+> bf02      	ittt	eq
0+084 <[^>]+> 4248      	negeq	r0, r1
0+086 <[^>]+> f1c8 0000 	rsbeq	r0, r8, #0
0+08a <[^>]+> f1d1 0000 	rsbseq	r0, r1, #0
0+08e <[^>]+> f1c1 0000 	rsb	r0, r1, #0
0+092 <[^>]+> 4248      	negs	r0, r1
0+094 <[^>]+> bfc8      	it	gt
0+096 <[^>]+> 4220      	tstgt	r0, r4
@


1.6
log
@	* gas/testsuite/gas/arm/thumb-eabi.d: Add case for divided syntax encoding of movs.
	* gas/testsuite/gas/arm/thumb.d: Likewise.
	* gas/testsuite/gas/arm/thumb.s: Likewise.
	* gas/testsuite/gas/arm/thumb2_it.d: Update for change in lsls/movs disassembly.
	* gas/testsuite/gas/arm/thumb2_it_auto.d: Liekwise.
	* gas/testsuite/gas/arm/thumb32.d: Likewise.
	* ld/testsuite/ld-arm/arm-call.d: Handle change in lsls/movs disassembly.
	* ld/testsuite/ld-arm/farcall-thumb-arm-short.d: Likewise.
	* ld/testsuite/ld-arm/farcall-thumb-thumb-blx-pic-veneer.d: Likewise.
	* ld/testsuite/ld-arm/farcall-thumb-thumb-blx.d: Likewise.
	* ld/testsuite/ld-arm/farcall-thumb-thumb-m-pic-veneer.d: Likewise.
	* ld/testsuite/ld-arm/farcall-thumb-thumb-m.d: Likewise.
	* ld/testsuite/ld-arm/farcall-thumb-thumb-pic-veneer.d: Likewise.
	* ld/testsuite/ld-arm/farcall-thumb-thumb.d: Likewise.
	* ld/testsuite/ld-arm/thumb2-bl-as-thumb1-bad-noeabi.d: Likewise.
	* ld/testsuite/ld-arm/thumb2-bl-as-thumb1-bad.d: Likewise.
	* ld/testsuite/ld-arm/thumb2-bl-bad-noeabi.d: Likewise.
	* ld/testsuite/ld-arm/thumb2-bl-bad.d: Likewise.
	* opcodes/arm-dis.c (thumb-opcodes): Add disassembly for movs.
@
text
@d63 2
@


1.5
log
@	* gas/config/tc-arm.c (do_t_mov_cmp): In unified syntax encode movs as
	lsls and not adds.
	* gas/testsuite/gas/arm/thumb2_it_auto.d: Update for change in movs encoding.
	gas/arm/thumb2_it.d: Likewise.
	gas/arm/thumb32.d: Likewise.
@
text
@d48 1
a48 1
0+068 <[^>]+> 0008      	lsls	r0, r1, #0
@


1.4
log
@        PR 10288
        * arm-dis.c (coprocessor): Print the LDC and STC versions of the
        LFM and SFM instructions as comments,.
        Improve consistency of formatting for instructions displayed as
        comments and decimal values displayed with their hexadecimal
        equivalents.
        Formatting tidy ups.

        Updated expected disassembler regexps.
@
text
@d48 1
a48 1
0+068 <[^>]+> 1c08      	adds	r0, r1, #0
@


1.3
log
@        * config/tc-arm.c (implicit_it_mode): New enum.
        (implicit_it_mode): New global.
        (it_instruction_type): New enum.
        (arm_parse_it_mode): New function.
        (arm_long_opts): New option added.
        (arm_it): New field.
        (it_state): New enum.
        (now_it): New macro.
        (check_it_blocks_finished): New function.
        (insns[]): Use the IT Thumb opcodes for ARM too.
        (arm_cleanup): Call check_it_blocks_finished.
        (now_it_compatible): New function.
        (conditional_insn): New function.
        (set_it_insn_type): New macro.
        (set_it_insn_type_last): New macro.
        (do_it): Call automatic IT machinery functions.
        (do_t_add_sub): Likewise
        (do_t_arit3): Likewise.
        (do_t_arit3c): Likewise.
        (do_t_blx): Likewise.
        (do_t_branch): Likewise.
        (do_t_bkpt): Likewise.
        (do_t_branch23): Likewise.
        (do_t_bx): Likewise.
        (do_t_bxj): Likewise.
        (do_t_cps): Likewise.
        (do_t_cpsi): Likewise.
        (do_t_cbz): Likewise.
        (do_t_it): Likewise.
        (encode_thumb2_ldmstm): Likewise.
        (do_t_ldst): Likewise.
        (do_t_mov_cmp): Likewise.
        (do_t_mvn_tst): Likewise.
        (do_t_mul): Likewise.
        (do_t_neg): Likewise.
        (do_t_setend): Likewise.
        (do_t_shift): Likewise.
        (do_t_tb): Likewise.
        (output_it_inst): New function.
        (new_automatic_it_block): New function.
        (close_automatic_it_block): New function.
        (now_it_add_mask): New function.
        (it_fsm_pre_encode): New function.
        (handle_it_state): New function.
        (it_fsm_post_encode): New function.
        (force_automatic_it_block_close): New function.
        (in_it_block): New function.
        (md_assemble): Call automatic IT block machinery functions.
        (arm_frob_label): Likewise.
        (arm_opts): New element.
        * config/tc-arm.h (it_state): New enum.
        (current_it): New struct.
        (arm_segment_info_type): New member added.
        * doc/c-arm.texi: New option -mimplicit-it documented.

        * gas/arm/arm-it-auto.d: New test.
        * gas/arm/arm-it-auto.s: New file.
        * gas/arm/arm-it-auto-2.d: New test case.
        * gas/arm/arm-it-auto-2.s: New file.
        * gas/arm/arm-it-auto-3.d: New test case.
        * gas/arm/arm-it-auto-3.s: New file.
        * gas/arm/arm-it-bad.d: New test case.
        * gas/arm/arm-it-bad.l: New file.
        * gas/arm/arm-it-bad.s: New file.
        * gas/arm/arm-it-bad-2.d: New test case.
        * gas/arm/arm-it-bad-2.l: New file.
        * gas/arm/arm-it-bad-2.s: New file.
        * gas/arm/arm-it-bad-3.d: New test case.
        * gas/arm/arm-it-bad-3.l: New file.
        * gas/arm/arm-it-bad-3.s: New file.
        * gas/arm/thumb2_it_auto.d: New test.
        * gas/arm/thumb2_it_bad.l: Error message updated.
        * gas/arm/thumb2_it_bad_auto.d: New test.
        * gas/arm/thumb2_it.d: Comment added.
        * gas/arm/thumb2_it_bad.d: Comment added.
@
text
@d59 3
a61 3
0+086 <[^>]+> f1c8 0000 	rsbeq	r0, r8, #0	; 0x0
0+08a <[^>]+> f1d1 0000 	rsbseq	r0, r1, #0	; 0x0
0+08e <[^>]+> f1c1 0000 	rsb	r0, r1, #0	; 0x0
@


1.2
log
@2005-08-15  Paul Brook  <paul@@codesourcery.com>

gas/
	* config/tc-arm.c (do_t_mov_cmp): Fix encoding of i16-bit conditional
	instructions.
	(do_t_mvn_tst, do_t_neg, do_t_shift): Ditto.
gas/testsuite/
	* gas/arm/thumb2_it.s: Add more instruction variants.
	* gas/arm/thumb2_it.d: Ditto.
@
text
@d3 1
d5 1
a5 2
# Many of these patterns use "(eq|s)". These should be changed to just "eq"
# once the disassembler is fixed. Likewise for "(eq)?"
d11 4
a14 4
0+002 <[^>]+> 1880      	add(eq|s)	r0, r0, r2
0+004 <[^>]+> 4440      	add(eq)?	r0, r8
0+006 <[^>]+> 1888      	add(ne|s)	r0, r1, r2
0+008 <[^>]+> eb11 0002 	adds(eq)?.w	r0, r1, r2
d21 3
a23 3
0+01a <[^>]+> 4310      	orr(eq|s)	r0, r2
0+01c <[^>]+> ea40 0008 	orr(ne)?.w	r0, r0, r8
0+020 <[^>]+> ea50 0002 	orrs(eq)?.w	r0, r0, r2
d28 4
a31 4
0+030 <[^>]+> 4090      	lsl(eq|s)	r0, r2
0+032 <[^>]+> fa00 f008 	lsl(eq)?.w	r0, r0, r8
0+036 <[^>]+> fa01 f002 	lsl(eq)?.w	r0, r1, r2
0+03a <[^>]+> fa10 f002 	lsls(eq)?.w	r0, r0, r2
d33 3
a35 3
0+040 <[^>]+> 0048      	lsl(eq|s)	r0, r1, #1
0+042 <[^>]+> ea4f 0048 	mov(eq)?.w	r0, r8, lsl #1
0+046 <[^>]+> ea5f 0040 	movs(eq)?.w	r0, r0, lsl #1
d41 4
a44 4
0+058 <[^>]+> 4288      	cmp(eq)?	r0, r1
0+05a <[^>]+> 4540      	cmp(eq)?	r0, r8
0+05c <[^>]+> 4608      	mov(eq)?	r0, r1
0+05e <[^>]+> ea5f 0001 	movs(eq)?.w	r0, r1
d46 2
a47 2
0+064 <[^>]+> 4640      	mov(eq)?	r0, r8
0+066 <[^>]+> 4608      	mov(eq)?	r0, r1
d51 4
a54 4
0+070 <[^>]+> 43c8      	mvn(eq|s)	r0, r1
0+072 <[^>]+> ea6f 0008 	mvn(eq)?.w	r0, r8
0+076 <[^>]+> ea7f 0001 	mvns(eq)?.w	r0, r1
0+07a <[^>]+> 42c8      	cmn(eq)?	r0, r1
d58 3
a60 3
0+084 <[^>]+> 4248      	neg(eq|s)	r0, r1
0+086 <[^>]+> f1c8 0000 	rsb(eq)?	r0, r8, #0	; 0x0
0+08a <[^>]+> f1d1 0000 	rsbs(eq)?	r0, r1, #0	; 0x0
@


1.1
log
@2005-08-05  Paul Brook  <paul@@codesourcery.com>

	* gas/arm/thumb32.s: Use correct conditional suffixes inside IT
	blocks.
	* gas/arm/thumb2_it.d, gas/arm/thumb2_it.s: New test.
@
text
@d4 2
d11 9
a19 9
0+002 <[^>]+> 1880      	add.*	r0, r0, r2
0+004 <[^>]+> 4440      	add.*	r0, r8
0+006 <[^>]+> 1888      	add.*	r0, r1, r2
0+008 <[^>]+> eb11 0002 	adds.*	r0, r1, r2
0+00c <[^>]+> 4410      	add.*	r0, r2
0+00e <[^>]+> 4440      	add.*	r0, r8
0+010 <[^>]+> 1880      	adds.*	r0, r0, r2
0+012 <[^>]+> eb10 0008 	adds.*	r0, r0, r8
0+016 <[^>]+> 1888      	adds.*	r0, r1, r2
d21 42
a62 6
0+01a <[^>]+> 4310      	orr.*	r0, r2
0+01c <[^>]+> ea40 0008 	orr.*	r0, r0, r8
0+020 <[^>]+> ea50 0002 	orrs.*	r0, r0, r2
0+024 <[^>]+> ea40 0002 	orr.*	r0, r0, r2
0+028 <[^>]+> ea40 0008 	orr.*	r0, r0, r8
0+02c <[^>]+> 4310      	orrs.*	r0, r2
@

