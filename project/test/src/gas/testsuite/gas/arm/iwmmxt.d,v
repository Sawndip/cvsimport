head	1.9;
access;
symbols
	binutils-2_24-branch:1.9.0.12
	binutils-2_24-branchpoint:1.9
	binutils-2_21_1:1.9
	binutils-2_23_2:1.9
	binutils-2_23_1:1.9
	binutils-2_23:1.9
	binutils-2_23-branch:1.9.0.10
	binutils-2_23-branchpoint:1.9
	binutils-2_22_branch:1.9.0.8
	binutils-2_22:1.9
	binutils-2_22-branch:1.9.0.6
	binutils-2_22-branchpoint:1.9
	binutils-2_21:1.9
	binutils-2_21-branch:1.9.0.4
	binutils-2_21-branchpoint:1.9
	binutils-2_20_1:1.9
	binutils-2_20:1.9
	binutils-arc-20081103-branch:1.7.0.10
	binutils-arc-20081103-branchpoint:1.7
	binutils-2_20-branch:1.9.0.2
	binutils-2_20-branchpoint:1.9
	dje-cgen-play1-branch:1.7.0.8
	dje-cgen-play1-branchpoint:1.7
	arc-20081103-branch:1.7.0.6
	arc-20081103-branchpoint:1.7
	binutils-2_19_1:1.7
	binutils-2_19:1.7
	binutils-2_19-branch:1.7.0.4
	binutils-2_19-branchpoint:1.7
	binutils-2_18:1.7
	binutils-2_18-branch:1.7.0.2
	binutils-2_18-branchpoint:1.7
	binutils-csl-coldfire-4_1-32:1.5.2.2
	binutils-csl-sourcerygxx-4_1-32:1.5.2.2
	binutils-csl-innovasic-fido-3_4_4-33:1.5.2.2
	binutils-csl-sourcerygxx-3_4_4-32:1.2
	binutils-csl-coldfire-4_1-30:1.5.2.2
	binutils-csl-sourcerygxx-4_1-30:1.5.2.2
	binutils-csl-coldfire-4_1-28:1.5.2.2
	binutils-csl-sourcerygxx-4_1-29:1.5.2.2
	binutils-csl-sourcerygxx-4_1-28:1.5.2.2
	binutils-csl-arm-2006q3-27:1.5.2.2
	binutils-csl-sourcerygxx-4_1-27:1.5.2.2
	binutils-csl-arm-2006q3-26:1.5.2.2
	binutils-csl-sourcerygxx-4_1-26:1.5.2.2
	binutils-csl-sourcerygxx-4_1-25:1.5.2.2
	binutils-csl-sourcerygxx-4_1-24:1.5.2.2
	binutils-csl-sourcerygxx-4_1-23:1.5.2.2
	binutils-csl-sourcerygxx-4_1-21:1.5.2.2
	binutils-csl-arm-2006q3-21:1.5.2.2
	binutils-csl-sourcerygxx-4_1-22:1.5.2.2
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.5.2.2
	binutils-csl-sourcerygxx-4_1-20:1.5.2.2
	binutils-csl-arm-2006q3-19:1.5.2.2
	binutils-csl-sourcerygxx-4_1-19:1.5.2.2
	binutils-csl-sourcerygxx-4_1-18:1.5.2.2
	binutils-csl-renesas-4_1-9:1.5.2.2
	binutils-csl-sourcerygxx-3_4_4-25:1.2
	binutils-csl-renesas-4_1-8:1.5.2.2
	binutils-csl-renesas-4_1-7:1.5.2.2
	binutils-csl-renesas-4_1-6:1.5.2.2
	binutils-csl-sourcerygxx-4_1-17:1.5.2.1
	binutils-csl-sourcerygxx-4_1-14:1.5.2.1
	binutils-csl-sourcerygxx-4_1-15:1.5.2.1
	binutils-csl-sourcerygxx-4_1-13:1.5.2.1
	binutils-2_17:1.5.4.1
	binutils-csl-sourcerygxx-4_1-12:1.5.2.1
	binutils-csl-sourcerygxx-3_4_4-21:1.5.2.1
	binutils-csl-wrs-linux-3_4_4-24:1.2.10.4
	binutils-csl-wrs-linux-3_4_4-23:1.2.10.4
	binutils-csl-sourcerygxx-4_1-9:1.5.2.1
	binutils-csl-sourcerygxx-4_1-8:1.5.2.1
	binutils-csl-sourcerygxx-4_1-7:1.5.2.1
	binutils-csl-arm-2006q1-6:1.5.2.1
	binutils-csl-sourcerygxx-4_1-6:1.5.2.1
	binutils-csl-wrs-linux-3_4_4-22:1.2.10.4
	binutils-csl-coldfire-4_1-11:1.5.2.1
	binutils-csl-sourcerygxx-3_4_4-19:1.5.2.1
	binutils-csl-coldfire-4_1-10:1.5.2.1
	binutils-csl-sourcerygxx-4_1-5:1.5.2.1
	binutils-csl-sourcerygxx-4_1-4:1.5.2.1
	binutils-csl-wrs-linux-3_4_4-21:1.2.10.4
	binutils-csl-morpho-4_1-4:1.5
	binutils-csl-sourcerygxx-3_4_4-17:1.5
	binutils-csl-wrs-linux-3_4_4-20:1.2.10.3
	binutils-2_17-branch:1.5.0.4
	binutils-2_17-branchpoint:1.5
	binutils-csl-2_17-branch:1.5.0.2
	binutils-csl-2_17-branchpoint:1.5
	binutils-csl-gxxpro-3_4-branch:1.2.0.12
	binutils-csl-gxxpro-3_4-branchpoint:1.2
	binutils-2_16_1:1.2
	binutils-csl-arm-2005q1b:1.2.10.2
	binutils-2_16:1.2
	binutils-csl-arm-2005q1a:1.2.10.1
	binutils-csl-arm-2005q1-branch:1.2.0.10
	binutils-csl-arm-2005q1-branchpoint:1.2
	binutils-2_16-branch:1.2.0.8
	binutils-2_16-branchpoint:1.2
	csl-arm-2004-q3d:1.2
	csl-arm-2004-q3:1.2
	binutils-2_15:1.2
	binutils-2_15-branchpoint:1.2
	csl-arm-2004-q1a:1.2
	csl-arm-2004-q1:1.2
	binutils-2_15-branch:1.2.0.6
	cagney_bfdfile-20040213-branch:1.2.0.4
	cagney_bfdfile-20040213-branchpoint:1.2
	cagney_bigcore-20040122-branch:1.2.0.2
	cagney_bigcore-20040122-branchpoint:1.2
	csl-arm-2003-q4:1.2
	binutils-2_14:1.1
	binutils-2_14-branch:1.1.0.2
	binutils-2_14-branchpoint:1.1
	binutils_latest_snapshot:1.9;
locks; strict;
comment	@# @;


1.9
date	2009.06.30.11.57.05;	author nickc;	state Exp;
branches;
next	1.8;

1.8
date	2009.06.29.08.08.15;	author nickc;	state Exp;
branches;
next	1.7;

1.7
date	2006.08.03.15.57.04;	author jsm28;	state Exp;
branches;
next	1.6;

1.6
date	2006.05.02.14.42.30;	author jsm28;	state Exp;
branches;
next	1.5;

1.5
date	2005.08.03.09.50.43;	author nickc;	state Exp;
branches
	1.5.2.1
	1.5.4.1;
next	1.4;

1.4
date	2005.05.18.05.40.09;	author zack;	state Exp;
branches;
next	1.3;

1.3
date	2005.03.21.15.19.54;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	2003.10.17.06.57.18;	author ian;	state Exp;
branches
	1.2.10.1;
next	1.1;

1.1
date	2003.03.25.20.55.59;	author nickc;	state Exp;
branches;
next	;

1.5.2.1
date	2006.05.02.14.51.29;	author jsm28;	state Exp;
branches;
next	1.5.2.2;

1.5.2.2
date	2006.08.03.16.23.01;	author jsm28;	state Exp;
branches;
next	;

1.5.4.1
date	2006.05.02.14.45.00;	author jsm28;	state Exp;
branches;
next	;

1.2.10.1
date	2005.03.28.15.30.08;	author drow;	state Exp;
branches;
next	1.2.10.2;

1.2.10.2
date	2005.04.26.05.31.42;	author zack;	state Exp;
branches;
next	1.2.10.3;

1.2.10.3
date	2006.01.17.16.40.17;	author jsm28;	state Exp;
branches;
next	1.2.10.4;

1.2.10.4
date	2006.04.28.19.10.41;	author jsm28;	state Exp;
branches;
next	;


desc
@@


1.9
log
@        PR 10288
        * arm-dis.c (coprocessor): Print the LDC and STC versions of the
        LFM and SFM instructions as comments,.
        Improve consistency of formatting for instructions displayed as
        comments and decimal values displayed with their hexadecimal
        equivalents.
        Formatting tidy ups.

        Updated expected disassembler regexps.
@
text
@#objdump: -dr --prefix-addresses --show-raw-insn -miwmmxt
#name: Intel(r) Wireless MMX(tm) technology instructions
#as: -mcpu=xscale+iwmmxt -EL

.*: +file format .*arm.*

Disassembly of section .text:
0+00 <iwmmxt> ee13f130[ 	]+tandcb[ 	]+pc
0+04 <[^>]*> de53f130[ 	]+tandchle[ 	]+pc
0+08 <[^>]*> ae93f130[ 	]+tandcwge[ 	]+pc
0+0c <[^>]*> be401010[ 	]+tbcstblt[ 	]+wr0, r1
0+10 <[^>]*> ee412050[ 	]+tbcsth[ 	]+wr1, r2
0+14 <[^>]*> ce423090[ 	]+tbcstwgt[ 	]+wr2, r3
0+18 <[^>]*> ee13f177[ 	]+textrcb[ 	]+pc, #7
0+1c <[^>]*> 0e53f172[ 	]+textrcheq[ 	]+pc, #2
0+20 <[^>]*> ee93f170[ 	]+textrcw[ 	]+pc, #0
0+24 <[^>]*> ee13e076[ 	]+textrmub[ 	]+lr, wr3, #6
0+28 <[^>]*> 1e14d07d[ 	]+textrmsbne[ 	]+sp, wr4, #5
0+2c <[^>]*> ee55c072[ 	]+textrmuh[ 	]+ip, wr5, #2
0+30 <[^>]*> ee56b078[ 	]+textrmsh[ 	]+fp, wr6, #0
0+34 <[^>]*> 2e97a071[ 	]+textrmuwcs[ 	]+sl, wr7, #1
0+38 <[^>]*> 2e989078[ 	]+textrmswcs[ 	]+r9, wr8, #0
0+3c <[^>]*> ee698014[ 	]+tinsrb[ 	]+wr9, r8, #4
0+40 <[^>]*> 3e6a7050[ 	]+tinsrhcc[ 	]+wr10, r7, #0
0+44 <[^>]*> ee6b6091[ 	]+tinsrw[ 	]+wr11, r6, #1
0+48 <[^>]*> 3e005110[ 	]+tmcrcc[ 	]+wcid, r5
0+4c <[^>]*> ec47600c[ 	]+tmcrr[ 	]+wr12, r6, r7
0+50 <[^>]*> 3e2041b5[ 	]+tmiacc[ 	]+wr13, r5, r4
0+54 <[^>]*> 4e2821d3[ 	]+tmiaphmi[ 	]+wr14, r3, r2
0+58 <[^>]*> ee2c11f0[ 	]+tmiabb[ 	]+wr15, r0, r1
0+5c <[^>]*> 5e2d31b2[ 	]+tmiabtpl[ 	]+wr13, r2, r3
0+60 <[^>]*> 6e2d5034[ 	]+tmiabtvs[ 	]+wr1, r4, r5
0+64 <[^>]*> 7e2f7056[ 	]+tmiattvc[ 	]+wr2, r6, r7
0+68 <[^>]*> ee138030[ 	]+tmovmskb[ 	]+r8, wr3
0+6c <[^>]*> 8e549030[ 	]+tmovmskhhi[ 	]+r9, wr4
0+70 <[^>]*> 9e95a030[ 	]+tmovmskwls[ 	]+sl, wr5
0+74 <[^>]*> ee11b110[ 	]+tmrc[ 	]+fp, wcon
0+78 <[^>]*> ac5dc006[ 	]+tmrrcge[ 	]+ip, sp, wr6
0+7c <[^>]*> ee13f150[ 	]+torcb[ 	]+pc
0+80 <[^>]*> be53f150[ 	]+torchlt[ 	]+pc
0+84 <[^>]*> ee93f150[ 	]+torcw[ 	]+pc
0+88 <[^>]*> ee0871c0[ 	]+waccb[ 	]+wr7, wr8
0+8c <[^>]*> be4a91c0[ 	]+wacchlt[ 	]+wr9, wr10
0+90 <[^>]*> ce8cb1c0[ 	]+waccwgt[ 	]+wr11, wr12
0+94 <[^>]*> de0ed18f[ 	]+waddble[ 	]+wr13, wr14, wr15
0+98 <[^>]*> ee120184[ 	]+waddbus[ 	]+wr0, wr2, wr4
0+9c <[^>]*> ee38618a[ 	]+waddbss[ 	]+wr6, wr8, wr10
0+a0 <[^>]*> ee4ec18f[ 	]+waddh[ 	]+wr12, wr14, wr15
0+a4 <[^>]*> de5cd18b[ 	]+waddhusle[ 	]+wr13, wr12, wr11
0+a8 <[^>]*> 0e79a188[ 	]+waddhsseq[ 	]+wr10, wr9, wr8
0+ac <[^>]*> 1e867185[ 	]+waddwne[ 	]+wr7, wr6, wr5
0+b0 <[^>]*> ee934182[ 	]+waddwus[ 	]+wr4, wr3, wr2
0+b4 <[^>]*> 2eb0118f[ 	]+waddwsscs[ 	]+wr1, wr0, wr15
0+b8 <[^>]*> ee553027[ 	]+waligni[ 	]+wr3, wr5, wr7, #5
0+bc <[^>]*> 2e8b902d[ 	]+walignr0cs[ 	]+wr9, wr11, wr13
0+c0 <[^>]*> ee967025[ 	]+walignr1[ 	]+wr7, wr6, wr5
0+c4 <[^>]*> 3ea42028[ 	]+walignr2cc[ 	]+wr2, wr4, wr8
0+c8 <[^>]*> 3eb95021[ 	]+walignr3cc[ 	]+wr5, wr9, wr1
0+cc <[^>]*> ee283001[ 	]+wand[ 	]+wr3, wr8, wr1
0+d0 <[^>]*> ee323006[ 	]+wandn[ 	]+wr3, wr2, wr6
0+d4 <[^>]*> ee887009[ 	]+wavg2b[ 	]+wr7, wr8, wr9
0+d8 <[^>]*> decba00c[ 	]+wavg2hle[ 	]+wr10, wr11, wr12
0+dc <[^>]*> ae9ed00f[ 	]+wavg2brge[ 	]+wr13, wr14, wr15
0+e0 <[^>]*> eed1000c[ 	]+wavg2hr[ 	]+wr0, wr1, wr12
0+e4 <[^>]*> ee04d065[ 	]+wcmpeqb[ 	]+wr13, wr4, wr5
0+e8 <[^>]*> 0e474060[ 	]+wcmpeqheq[ 	]+wr4, wr7, wr0
0+ec <[^>]*> be896068[ 	]+wcmpeqwlt[ 	]+wr6, wr9, wr8
0+f0 <[^>]*> 3e121063[ 	]+wcmpgtubcc[ 	]+wr1, wr2, wr3
0+f4 <[^>]*> ee354066[ 	]+wcmpgtsb[ 	]+wr4, wr5, wr6
0+f8 <[^>]*> 3e587069[ 	]+wcmpgtuhcc[ 	]+wr7, wr8, wr9
0+fc <[^>]*> ee7ba06d[ 	]+wcmpgtsh[ 	]+wr10, wr11, wr13
0+100 <[^>]*> ee942063[ 	]+wcmpgtuw[ 	]+wr2, wr4, wr3
0+104 <[^>]*> 8eb65063[ 	]+wcmpgtswhi[ 	]+wr5, wr6, wr3
0+108 <[^>]*> ed901024[ 	]+wldrb[ 	]+wr1, \[r0, #36\]
0+10c <[^>]*> 0df12018[ 	]+wldrheq[ 	]+wr2, \[r1, #24\]!
0+110 <[^>]*> 1cb23104[ 	]+wldrwne[ 	]+wr3, \[r2\], #16
0+114 <[^>]*> 6d534153[ 	]+wldrdvs[ 	]+wr4, \[r3, #-332\].*
0+118 <[^>]*> fdb12105[ 	]+wldrw[ 	]+wcssf, \[r1, #20\]!
0+11c <[^>]*> ee474109[ 	]+wmacu[ 	]+wr4, wr7, wr9
0+120 <[^>]*> 2e6a810e[ 	]+wmacscs[ 	]+wr8, wr10, wr14
0+124 <[^>]*> ee5cf10b[ 	]+wmacuz[ 	]+wr15, wr12, wr11
0+128 <[^>]*> ee78310a[ 	]+wmacsz[ 	]+wr3, wr8, wr10
0+12c <[^>]*> ee8bc107[ 	]+wmaddu[ 	]+wr12, wr11, wr7
0+130 <[^>]*> cea3510f[ 	]+wmaddsgt[ 	]+wr5, wr3, wr15
0+134 <[^>]*> 2e043165[ 	]+wmaxubcs[ 	]+wr3, wr4, wr5
0+138 <[^>]*> ee243165[ 	]+wmaxsb[ 	]+wr3, wr4, wr5
0+13c <[^>]*> 5e443165[ 	]+wmaxuhpl[ 	]+wr3, wr4, wr5
0+140 <[^>]*> 4e643165[ 	]+wmaxshmi[ 	]+wr3, wr4, wr5
0+144 <[^>]*> ae843165[ 	]+wmaxuwge[ 	]+wr3, wr4, wr5
0+148 <[^>]*> dea43165[ 	]+wmaxswle[ 	]+wr3, wr4, wr5
0+14c <[^>]*> 3e1c416a[ 	]+wminubcc[ 	]+wr4, wr12, wr10
0+150 <[^>]*> ee3c416a[ 	]+wminsb[ 	]+wr4, wr12, wr10
0+154 <[^>]*> 7e5c416a[ 	]+wminuhvc[ 	]+wr4, wr12, wr10
0+158 <[^>]*> ee7c416a[ 	]+wminsh[ 	]+wr4, wr12, wr10
0+15c <[^>]*> ee9c416a[ 	]+wminuw[ 	]+wr4, wr12, wr10
0+160 <[^>]*> 3ebc416a[ 	]+wminswcc[ 	]+wr4, wr12, wr10
0+164 <[^>]*> 0e043004[ 	]+woreq[ 	]+wr3, wr4, wr4
0+168 <[^>]*> ee112108[ 	]+wmulum[ 	]+wr2, wr1, wr8
0+16c <[^>]*> ee312108[ 	]+wmulsm[ 	]+wr2, wr1, wr8
0+170 <[^>]*> ee012108[ 	]+wmulul[ 	]+wr2, wr1, wr8
0+174 <[^>]*> de212108[ 	]+wmulslle[ 	]+wr2, wr1, wr8
0+178 <[^>]*> 0e08b00e[ 	]+woreq[ 	]+wr11, wr8, wr14
0+17c <[^>]*> 0e510083[ 	]+wpackhuseq[ 	]+wr0, wr1, wr3
0+180 <[^>]*> ee910083[ 	]+wpackwus[ 	]+wr0, wr1, wr3
0+184 <[^>]*> eed10083[ 	]+wpackdus[ 	]+wr0, wr1, wr3
0+188 <[^>]*> 8e710083[ 	]+wpackhsshi[ 	]+wr0, wr1, wr3
0+18c <[^>]*> eeb10083[ 	]+wpackwss[ 	]+wr0, wr1, wr3
0+190 <[^>]*> 0ef10083[ 	]+wpackdsseq[ 	]+wr0, wr1, wr3
0+194 <[^>]*> ee754046[ 	]+wrorh[ 	]+wr4, wr5, wr6
0+198 <[^>]*> 4eb54046[ 	]+wrorwmi[ 	]+wr4, wr5, wr6
0+19c <[^>]*> eef54046[ 	]+wrord[ 	]+wr4, wr5, wr6
0+1a0 <[^>]*> ee7a9148[ 	]+wrorhg[ 	]+wr9, wr10, wcgr0
0+1a4 <[^>]*> aeba9149[ 	]+wrorwgge[ 	]+wr9, wr10, wcgr1
0+1a8 <[^>]*> eefa914a[ 	]+wrordg[ 	]+wr9, wr10, wcgr2
0+1ac <[^>]*> ee00212a[ 	]+wsadb[ 	]+wr2, wr0, wr10
0+1b0 <[^>]*> ee40212a[ 	]+wsadh[ 	]+wr2, wr0, wr10
0+1b4 <[^>]*> ee10212a[ 	]+wsadbz[ 	]+wr2, wr0, wr10
0+1b8 <[^>]*> de50212a[ 	]+wsadhzle[ 	]+wr2, wr0, wr10
0+1bc <[^>]*> 0ef941eb[ 	]+wshufheq[ 	]+wr4, wr9, #251
0+1c0 <[^>]*> ee592044[ 	]+wsllh[ 	]+wr2, wr9, wr4
0+1c4 <[^>]*> ee992044[ 	]+wsllw[ 	]+wr2, wr9, wr4
0+1c8 <[^>]*> 0ed92044[ 	]+wslldeq[ 	]+wr2, wr9, wr4
0+1cc <[^>]*> 0e59214b[ 	]+wsllhgeq[ 	]+wr2, wr9, wcgr3
0+1d0 <[^>]*> 7e99214a[ 	]+wsllwgvc[ 	]+wr2, wr9, wcgr2
0+1d4 <[^>]*> eed92149[ 	]+wslldg[ 	]+wr2, wr9, wcgr1
0+1d8 <[^>]*> ee451047[ 	]+wsrah[ 	]+wr1, wr5, wr7
0+1dc <[^>]*> ee851047[ 	]+wsraw[ 	]+wr1, wr5, wr7
0+1e0 <[^>]*> 0ec51047[ 	]+wsradeq[ 	]+wr1, wr5, wr7
0+1e4 <[^>]*> ee45114b[ 	]+wsrahg[ 	]+wr1, wr5, wcgr3
0+1e8 <[^>]*> 4e851148[ 	]+wsrawgmi[ 	]+wr1, wr5, wcgr0
0+1ec <[^>]*> eec51149[ 	]+wsradg[ 	]+wr1, wr5, wcgr1
0+1f0 <[^>]*> ee651047[ 	]+wsrlh[ 	]+wr1, wr5, wr7
0+1f4 <[^>]*> eea51047[ 	]+wsrlw[ 	]+wr1, wr5, wr7
0+1f8 <[^>]*> 0ee51047[ 	]+wsrldeq[ 	]+wr1, wr5, wr7
0+1fc <[^>]*> ee65114b[ 	]+wsrlhg[ 	]+wr1, wr5, wcgr3
0+200 <[^>]*> 4ea51148[ 	]+wsrlwgmi[ 	]+wr1, wr5, wcgr0
0+204 <[^>]*> eee51149[ 	]+wsrldg[ 	]+wr1, wr5, wcgr1
0+208 <[^>]*> ed8110ff[ 	]+wstrb[ 	]+wr1, \[r1, #255\]
0+20c <[^>]*> ed6110ff[ 	]+wstrh[ 	]+wr1, \[r1, #-255\]!
0+210 <[^>]*> eca11101[ 	]+wstrw[ 	]+wr1, \[r1\], #4
0+214 <[^>]*> edc111ff[ 	]+wstrd[ 	]+wr1, \[r1, #1020\].*
0+218 <[^>]*> fca1314b[ 	]+wstrw[ 	]+wcasf, \[r1\], #300.*
0+21c <[^>]*> 3e1311ae[ 	]+wsubbuscc[ 	]+wr1, wr3, wr14
0+220 <[^>]*> ee5311ae[ 	]+wsubhus[ 	]+wr1, wr3, wr14
0+224 <[^>]*> 3e9311ae[ 	]+wsubwuscc[ 	]+wr1, wr3, wr14
0+228 <[^>]*> 3e3311ae[ 	]+wsubbsscc[ 	]+wr1, wr3, wr14
0+22c <[^>]*> 3e7311ae[ 	]+wsubhsscc[ 	]+wr1, wr3, wr14
0+230 <[^>]*> eeb311ae[ 	]+wsubwss[ 	]+wr1, wr3, wr14
0+234 <[^>]*> ee0630c0[ 	]+wunpckehub[ 	]+wr3, wr6
0+238 <[^>]*> 4e4630c0[ 	]+wunpckehuhmi[ 	]+wr3, wr6
0+23c <[^>]*> ee8630c0[ 	]+wunpckehuw[ 	]+wr3, wr6
0+240 <[^>]*> ee2630c0[ 	]+wunpckehsb[ 	]+wr3, wr6
0+244 <[^>]*> ee6630c0[ 	]+wunpckehsh[ 	]+wr3, wr6
0+248 <[^>]*> 0ea630c0[ 	]+wunpckehsweq[ 	]+wr3, wr6
0+24c <[^>]*> ee1c50ca[ 	]+wunpckihb[ 	]+wr5, wr12, wr10
0+250 <[^>]*> 8e5c50ca[ 	]+wunpckihhhi[ 	]+wr5, wr12, wr10
0+254 <[^>]*> ee9c50ca[ 	]+wunpckihw[ 	]+wr5, wr12, wr10
0+258 <[^>]*> ee0530e0[ 	]+wunpckelub[ 	]+wr3, wr5
0+25c <[^>]*> 1e4530e0[ 	]+wunpckeluhne[ 	]+wr3, wr5
0+260 <[^>]*> ee8530e0[ 	]+wunpckeluw[ 	]+wr3, wr5
0+264 <[^>]*> ce2530e0[ 	]+wunpckelsbgt[ 	]+wr3, wr5
0+268 <[^>]*> ee6530e0[ 	]+wunpckelsh[ 	]+wr3, wr5
0+26c <[^>]*> eea530e0[ 	]+wunpckelsw[ 	]+wr3, wr5
0+270 <[^>]*> ee1540ea[ 	]+wunpckilb[ 	]+wr4, wr5, wr10
0+274 <[^>]*> ee5540ea[ 	]+wunpckilh[ 	]+wr4, wr5, wr10
0+278 <[^>]*> 0e9540ea[ 	]+wunpckilweq[ 	]+wr4, wr5, wr10
0+27c <[^>]*> 1e143005[ 	]+wxorne[ 	]+wr3, wr4, wr5
0+280 <[^>]*> ae377007[ 	]+wandnge[ 	]+wr7, wr7, wr7
0+284 <[^>]*> ee080110[ 	]+tmcr[ 	]+wcgr0, r0
0+288 <[^>]*> ee1a1110[ 	]+tmrc[ 	]+r1, wcgr2
0+28c <[^>]*> e1a00000[ 	]+nop[ 	]+; \(mov r0, r0\)
@


1.8
log
@        PR 10288
        * arm-dis.c (enum opcode_sentinels): New:  Used to mark the
        boundary between variaant and generic coprocessor instuctions.
        (coprocessor): Use it.
        Fix architecture version of MCRR and MRRC instructions.
        (arm_opcdes): Fix patterns for STRB and STRH instructions.
        (print_insn_coprocessor): Check architecture and extension masks.
        Print a hexadecimal version of any decimal constant that is
        outside of the range of -16 to +32.
        (print_arm_address): Add a return value of the offset used in the
        adress, if it is worth printing a hexadecimal version of it.
        (print_insn_neon): Print a hexadecimal version of any decimal
        constant that is outside of the range of -16 to +32.
        (print_insn_arm): Likewise.
        (print_insn_thumb16): Likewise.
        (print_insn_thumb32): Likewise.

        PR 10297
        * arm-dis.c (UNDEFINED_INSTRUCTION): New macro for a description
        of an undefined instruction.
        (arm_opcodes): Use it.
        (thumb_opcod): Use it.
        (thumb32_opc): Use it.

        Update expected disassembly regrexps in GAS and LD testsuites.
@
text
@d171 1
a171 1
0+28c <[^>]*> e1a00000[ 	]+nop[ 	]+\(mov r0,r0\)
@


1.7
log
@gas:
	* config/tc-arm.c (enum operand_parse_code): Add OP_RIWC_RIWG.
	(parse_operands): Handle it.
	(insns): Use it for tmcr and tmrc.

gas/testsuite:
	* gas/arm/iwmmxt.s: Test tmcr and tmrc with wcgr registers.
	* gas/arm/iwmmxt.d: Update.
@
text
@d77 1
a77 1
0+114 <[^>]*> 6d534153[ 	]+wldrdvs[ 	]+wr4, \[r3, #-332\]
d141 2
a142 2
0+214 <[^>]*> edc111ff[ 	]+wstrd[ 	]+wr1, \[r1, #1020\]
0+218 <[^>]*> fca1314b[ 	]+wstrw[ 	]+wcasf, \[r1\], #300
@


1.6
log
@	* config/tc-arm.c (do_iwmmxt_wldstbh): Don't multiply offset by 4
	here.
	(md_apply_fix3): Multiply offset by 4 here for
	BFD_RELOC_ARM_CP_OFF_IMM_S2 and BFD_RELOC_ARM_T32_CP_OFF_IMM_S2.

testsuite:
	* gas/arm/iwmmxt.s: Increase offsets for wstrb and wstrh.
	* gas/arm/iwmmxt.d: Update expected results.
	* gas/arm/iwmmxt-bad2.s: Test wstrb, wstrh, wldrb and wldrh.
	* gas/arm/iwmmxt-bad2.l: Update expected error messages.
@
text
@d169 2
a170 2
0+284 <[^>]*> e1a00000[ 	]+nop[ 	]+\(mov r0,r0\)
0+288 <[^>]*> e1a00000[ 	]+nop[ 	]+\(mov r0,r0\)
@


1.5
log
@config/tc-arm.c (do_iwmmxt_wldstd): Correct the offset range for WLDRD/WSTRD
  instruction.
gas/arm/iwmmxt-bad2.s: New file: Check for error messages about erroneous
  offsets in iwmmxt instructions.  Cannot be part of iwmmxt-bad.s because
  the errors there stop the assembler before it gets to check the offsets
  in instructions.
gas/arm/iwmmxt-bad2.d: New file.
gas/arm/iwmmxt-bad2.l: New file: Expected error messages.
gas/arm/iwmmxt.s: Change the offset values of the WLDRD, WSTRD and WSTRW
  instructions to be larger than +/-255.
gas/arm/iwmmxt.d: Fix the expected results for these instructions.
@
text
@d138 2
a139 2
0+208 <[^>]*> ed811004[ 	]+wstrb[ 	]+wr1, \[r1, #4\]
0+20c <[^>]*> ede11004[ 	]+wstrh[ 	]+wr1, \[r1, #4\]!
@


1.5.2.1
log
@	* gas/config/tc-arm.c (do_iwmmxt_wldstbh): Don't multiply offset
	by 4 here.
	(md_apply_fix3): Multiply offset by 4 here for
	BFD_RELOC_ARM_CP_OFF_IMM_S2 and BFD_RELOC_ARM_T32_CP_OFF_IMM_S2.
	* gas/testsuite/gas/arm/iwmmxt.s: Increase offsets for wstrb and
	wstrh.
	* gas/testsuite/gas/arm/iwmmxt.d: Update expected results.
	* gas/testsuite/gas/arm/iwmmxt-bad2.s: Test wstrb, wstrh, wldrb
	and wldrh.
	* gas/testsuite/gas/arm/iwmmxt-bad2.l: Update expected error
	messages.
@
text
@d138 2
a139 2
0+208 <[^>]*> ed8110ff[ 	]+wstrb[ 	]+wr1, \[r1, #255\]
0+20c <[^>]*> ed6110ff[ 	]+wstrh[ 	]+wr1, \[r1, #-255\]!
@


1.5.2.2
log
@	Backport from mainline.

	gas/
	* config/tc-arm.c (parse_operands): Handle invalid register name
	for OP_RIWR_RIWC.

	gas/testsuite/
	* gas/arm/iwmmxt-bad.s: Test invalid register names for wldrw and
	wstrw.
	* gas/arm/iwmmxt-bad.l: Update.

	gas/
	* config/tc-arm.c (enum operand_parse_code): Add OP_RIWC_RIWG.
	(parse_operands): Handle it.
	(insns): Use it for tmcr and tmrc.

	gas/testsuite/
	* gas/arm/iwmmxt.s: Test tmcr and tmrc with wcgr registers.
	* gas/arm/iwmmxt.d: Update.
@
text
@d169 2
a170 2
0+284 <[^>]*> ee080110[ 	]+tmcr[ 	]+wcgr0, r0
0+288 <[^>]*> ee1a1110[ 	]+tmrc[ 	]+r1, wcgr2
@


1.5.4.1
log
@	* config/tc-arm.c (do_iwmmxt_wldstbh): Don't multiply offset by 4
	here.
	(md_apply_fix3): Multiply offset by 4 here for
	BFD_RELOC_ARM_CP_OFF_IMM_S2 and BFD_RELOC_ARM_T32_CP_OFF_IMM_S2.

testsuite:
	* gas/arm/iwmmxt.s: Increase offsets for wstrb and wstrh.
	* gas/arm/iwmmxt.d: Update expected results.
	* gas/arm/iwmmxt-bad2.s: Test wstrb, wstrh, wldrb and wldrh.
	* gas/arm/iwmmxt-bad2.l: Update expected error messages.
@
text
@d138 2
a139 2
0+208 <[^>]*> ed8110ff[ 	]+wstrb[ 	]+wr1, \[r1, #255\]
0+20c <[^>]*> ed6110ff[ 	]+wstrh[ 	]+wr1, \[r1, #-255\]!
@


1.4
log
@include/elf:
	* arm.h: Import complete list of official relocation names
	and numbers from AAELF.  Define FAKE_RELOCs for old names.
	Remove a few old names no longer used anywhere.

bfd:
	* elf32-arm.c: Wherever possible, use official reloc names
	from AAELF.
	(elf32_arm_howto_table, elf32_arm_tls_gd32_howto)
	(elf32_arm_tls_ldo32_howto, elf32_arm_tls_ldm32_howto)
	(elf32_arm_tls_le32_howto, elf32_arm_tls_ie32_howto)
	(elf32_arm_vtinherit_howto, elf32_arm_vtentry_howto)
	(elf32_arm_pc11_howto, elf32_arm_thm_pc9_howto, elf32_arm_got_prel)
	(elf32_arm_r_howto): Replace with elf32_arm_howto_table_1,
	elf32_arm_howto_table_2, and elf32_arm_howto_table_3.
	Add many new relocations from AAELF.
	(elf32_arm_howto_from_type): Update to match.
	(elf32_arm_reloc_map): Add entries for R_ARM_THM_JUMP24,
	R_ARM_THM_JUMP11, R_ARM_THM_JUMP19, R_ARM_THM_JUMP8,
	R_ARM_THM_JUMP6, R_ARM_GNU_VTINHERIT, and R_ARM_GNU_VTENTRY.
	(elf32_arm_reloc_type_lookup): Use elf32_arm_howto_from_type.
	(elf32_arm_final_link_relocate): Add support for
	R_ARM_THM_JUMP24, R_ARM_THM_JUMP19, R_ARM_THM_JUMP6.  Remove
	case entries redundant with default.

	* reloc.c: Reorganize ARM relocations.  Add Thumb
	assembler-internal relocations BFD_RELOC_ARM_T32_OFFSET_U8,
	BFD_RELOC_ARM_T32_OFFSET_IMM, BFD_RELOC_ARM_T32_IMMEDIATE.
	Add visible relocations BFD_RELOC_THUMB_PCREL_BRANCH7,
	BFD_RELOC_THUMB_BRANCH20, BFD_RELOC_THUMB_BRANCH25.
	Delete unused relocations BFD_RELOC_ARM_GOT12, BFD_RELOC_ARM_COPY.
	* bfd-in2.h, libbfd.h: Regenerate.

opcodes:
	* arm-dis.c (thumb_opcodes): Add disassembly for V6T2 16-bit
	instructions.  Adjust disassembly of some opcodes to match
	unified syntax.
	(thumb32_opcodes): New table.
	(print_insn_thumb): Rename print_insn_thumb16; don't handle
	two-halfword branches here.
	(print_insn_thumb32): New function.
	(print_insn): Choose among print_insn_arm, print_insn_thumb16,
	and print_insn_thumb32.  Be consistent about order of
	halfwords when printing 32-bit instructions.

gas:
	* hash.c (hash_lookup): Add len parameter.  All callers changed.
	(hash_find_n): New interface.
	* hash.h: Prototype hash_find_n.
	* sb.c: Include as.h.
	(scrub_from_sb, sb_to_scrub, scrub_position): New statics.
	(sb_scrub_and_add_sb): New interface.
	* sb.h: Prototype sb_scrub_and_add_sb.
	* input-scrub.c (input_scrub_include_sb): Use sb_scrub_and_add_sb.

	* config/tc-arm.h (TC_FORCE_RELOCATION_LOCAL): Remove
	reference to BFD_RELOC_ARM_GOT12 which is never generated.
	* config/tc-arm.c: Rewrite, adding Thumb-2 support.

gas/testsuite:
	* gas/arm/arm.exp: Convert all existing "gas_test" tests to
	"run_dump_test" tests.  Run more tests unconditionally.  Run new tests.
	* gas/arm/arch4t.s, gas/arm/arch6zk.s, gas/arm/arm3.s, gas/arm/arm6.s
	* gas/arm/arm7dm.s, gas/arm/bignum1.s, gas/arm/float.s
	* gas/arm/immed.s, gas/arm/iwmmxt.s, gas/arm/offset.s, gas/arm/thumb.s:
	Adjust to work as a dump test.
	* gas/arm/arch4t.d, gas/arm/arch6zk.d, gas/arm/arm3.d, gas/arm/arm6.d
	* gas/arm/arm7dm.d, gas/arm/bignum1.d, gas/arm/float.d
	* gas/arm/immed.d, gas/arm/iwmmxt.d, gas/arm/offset.d, gas/arm/thumb.d:
	New files.

	* gas/arm/armv1-bad.l, gas/arm/armv1-bad.s: Remove tests for
	diagnostics that don't happen in the first pass anymore.

	* gas/arm/iwmmxt-bad.l, gas/arm/r15-bad.l, gas/arm/req.l
	* gas/arm/vfp-bad.l:
	Update expected diagnostics.
	* gas/arm/pic.d: Update expected reloc name.
	* gas/arm/thumbv6.d: CPY no longer appears in disassembly.
	* gas/arm/r15-bad.s: Avoid two-argument mul.
	* gas/arm/req.s: Adjust comments.
	* gas/arm/maverick.d, gas/arm/maverick.s: Avoid inappropriate
	use of PC.

	* gas/arm/macro-1.d, gas/arm/macro1.s
	* gas/arm/t16-bad.l, gas/arm/t16-bad.s
	* gas/arm/tcompat.d, gas/arm/tcompat.s
	* gas/arm/tcompat2.d, gas/arm/tcompat2.s
	* gas/arm/thumb32.d, gas/arm/thumb32.s
	New test pair.

ld/testsuite:
	* ld-arm/mixed-app.d: Adjust expected disassembly a little.
@
text
@d77 1
a77 1
0+114 <[^>]*> 6dd34102[ 	]+wldrdvs[ 	]+wr4, \[r3, #8\]
d141 2
a142 2
0+214 <[^>]*> edc11101[ 	]+wstrd[ 	]+wr1, \[r1, #4\]
0+218 <[^>]*> fca13101[ 	]+wstrw[ 	]+wcasf, \[r1\], #4
@


1.3
log
@Update instructions that use the "never" value in the conditional field to use
"le" instead.  This is so that the disassembler will disassemble them.
@
text
@d169 3
@


1.2
log
@	* gas/arm/iwmmxt.d: Add -miwmmxt to #objdump line, to get the
	right disassembly.
@
text
@d49 1
a49 1
0+a4 <[^>]*> fe5cd18b[ 	]+waddhusnv[ 	]+wr13, wr12, wr11
d90 1
a90 1
0+148 <[^>]*> fea43165[ 	]+wmaxswnv[ 	]+wr3, wr4, wr5
d118 1
a118 1
0+1b8 <[^>]*> fe50212a[ 	]+wsadhznv[ 	]+wr2, wr0, wr10
@


1.2.10.1
log
@Backport ARM patches from HEAD to binutils-csl-arm-2005q1-branch.
@
text
@d49 1
a49 1
0+a4 <[^>]*> de5cd18b[ 	]+waddhusle[ 	]+wr13, wr12, wr11
d90 1
a90 1
0+148 <[^>]*> dea43165[ 	]+wmaxswle[ 	]+wr3, wr4, wr5
d118 1
a118 1
0+1b8 <[^>]*> de50212a[ 	]+wsadhzle[ 	]+wr2, wr0, wr10
@


1.2.10.2
log
@	Thumb32 assembler.

	* include/elf/arm.h: Import full set of relocation names from
	latest AAELF.  Make the primary name of all relocations be the one
	AAELF specifies.  Provide aliases under the traditional names.
	Kill FIRST_INVALID_RELOC_* and LAST_INVALID_RELOC_*.
	* bfd/reloc.c: Reorganize ARM relocations.  Remove ARM relocations
	that are never generated.  Document more of the relocations.  Add
	relocations for Thumb32.
	* bfd/libbfd.h, bfd/bfd-in2.h: Regenerate.
	* bfd/elf32-arm.c: Reorganize howto tables.  Implement Thumb32
	relocations.
	* ld/testsuite/ld-arm/mixed-app.d: Adjust expectations for
	renamed relocations.

	* gas/hash.c (hash_find_n): New interface.
	* gas/hash.h: Prototype it.

	* gas/config/tc-arm.c: Rewrite and reorganize.  Implement 32-bit
	Thumb instructions.
	* gas/testsuite/gas/arm: Convert all "gas_test" style tests to
	"run_dump_test" style tests, for more thorough testing.  Make
	adjustments to expectations where necessary.
	* gas/testsuite/gas/arm/t16-bad.s, gas/testsuite/gas/arm/tcompat.s
	* gas/testsuite/gas/arm/tcompat2.s, gas/testsuite/gas/arm/thumb32.s:
	New test cases.

	* opcodes/arm-dis.c: Add support for Thumb32 instructions and
	16-bit V6T2 instructions.
@
text
@a168 3
0+284 <[^>]*> e1a00000[ 	]+nop[ 	]+\(mov r0,r0\)
0+288 <[^>]*> e1a00000[ 	]+nop[ 	]+\(mov r0,r0\)
0+28c <[^>]*> e1a00000[ 	]+nop[ 	]+\(mov r0,r0\)
@


1.2.10.3
log
@	Backport:
	2005-08-02  Khem Raj  <kraj@@mvista.com>

	* config/tc-arm.c (do_iwmmxt_wldstd): Correct the offset range for
	WLDRD/WSTRD instruction.

	2005-08-03  Nick Clifton  <nickc@@redhat.com>

	* gas/arm/iwmmxt-bad2.s: New file: Check for error messages about
	erroneous offsets in iwmmxt instructions.  Cannot be part of
	iwmmxt-bad.s because the errors there stop the assembler before it
	gets to check the offsets in instructions.
	* gas/arm/iwmmxt-bad2.d: New file.
	* gas/arm/iwmmxt-bad2.l: New file: Expected error messages.

	2005-08-02  Khem Raj  <kraj@@mvista.com>

	* gas/arm/iwmmxt.s: Change the offset values of the WLDRD, WSTRD
	and WSTRW instructions to be larger than +/-255.
	* gas/arm/iwmmxt.d: Fix the expected results for these
	instructions.
@
text
@d77 1
a77 1
0+114 <[^>]*> 6d534153[ 	]+wldrdvs[ 	]+wr4, \[r3, #-332\]
d141 2
a142 2
0+214 <[^>]*> edc111ff[ 	]+wstrd[ 	]+wr1, \[r1, #1020\]
0+218 <[^>]*> fca1314b[ 	]+wstrw[ 	]+wcasf, \[r1\], #300
@


1.2.10.4
log
@	* gas/config/tc-arm.c (do_iwmmxt_wldstbh): Don't multiply offset
	by 4 here.
	(md_apply_fix3): Multiply offset by 4 here for
	BFD_RELOC_ARM_CP_OFF_IMM_S2.
	* gas/testsuite/gas/arm/arm.exp: Run iwmmxt-bad2.
	* gas/testsuite/gas/arm/iwmmxt.s: Increase offsets for wstrb and
	wstrh.
	* gas/testsuite/gas/arm/iwmmxt.d: Update expected results.
	* gas/testsuite/gas/arm/iwmmxt-bad2.s: Test wstrb, wstrh, wldrb
	and wldrh.
	* gas/testsuite/gas/arm/iwmmxt-bad2.l: Update expected error
	messages.
@
text
@d138 2
a139 2
0+208 <[^>]*> ed8110ff[ 	]+wstrb[ 	]+wr1, \[r1, #255\]
0+20c <[^>]*> ed6110ff[ 	]+wstrh[ 	]+wr1, \[r1, #-255\]!
@


1.1
log
@Add iWMMXt support
@
text
@d1 1
a1 1
#objdump: -dr --prefix-addresses --show-raw-insn
@

