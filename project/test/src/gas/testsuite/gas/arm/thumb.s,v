head	1.7;
access;
symbols
	binutils-2_24-branch:1.7.0.10
	binutils-2_24-branchpoint:1.7
	binutils-2_21_1:1.7
	binutils-2_23_2:1.7
	binutils-2_23_1:1.7
	binutils-2_23:1.7
	binutils-2_23-branch:1.7.0.8
	binutils-2_23-branchpoint:1.7
	binutils-2_22_branch:1.7.0.6
	binutils-2_22:1.7
	binutils-2_22-branch:1.7.0.4
	binutils-2_22-branchpoint:1.7
	binutils-2_21:1.7
	binutils-2_21-branch:1.7.0.2
	binutils-2_21-branchpoint:1.7
	binutils-2_20_1:1.6
	binutils-2_20:1.6
	binutils-arc-20081103-branch:1.6.0.16
	binutils-arc-20081103-branchpoint:1.6
	binutils-2_20-branch:1.6.0.14
	binutils-2_20-branchpoint:1.6
	dje-cgen-play1-branch:1.6.0.12
	dje-cgen-play1-branchpoint:1.6
	arc-20081103-branch:1.6.0.10
	arc-20081103-branchpoint:1.6
	binutils-2_19_1:1.6
	binutils-2_19:1.6
	binutils-2_19-branch:1.6.0.8
	binutils-2_19-branchpoint:1.6
	binutils-2_18:1.6
	binutils-2_18-branch:1.6.0.6
	binutils-2_18-branchpoint:1.6
	binutils-csl-coldfire-4_1-32:1.6
	binutils-csl-sourcerygxx-4_1-32:1.6
	binutils-csl-innovasic-fido-3_4_4-33:1.6
	binutils-csl-sourcerygxx-3_4_4-32:1.2
	binutils-csl-coldfire-4_1-30:1.6
	binutils-csl-sourcerygxx-4_1-30:1.6
	binutils-csl-coldfire-4_1-28:1.6
	binutils-csl-sourcerygxx-4_1-29:1.6
	binutils-csl-sourcerygxx-4_1-28:1.6
	binutils-csl-arm-2006q3-27:1.6
	binutils-csl-sourcerygxx-4_1-27:1.6
	binutils-csl-arm-2006q3-26:1.6
	binutils-csl-sourcerygxx-4_1-26:1.6
	binutils-csl-sourcerygxx-4_1-25:1.6
	binutils-csl-sourcerygxx-4_1-24:1.6
	binutils-csl-sourcerygxx-4_1-23:1.6
	binutils-csl-sourcerygxx-4_1-21:1.6
	binutils-csl-arm-2006q3-21:1.6
	binutils-csl-sourcerygxx-4_1-22:1.6
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.6
	binutils-csl-sourcerygxx-4_1-20:1.6
	binutils-csl-arm-2006q3-19:1.6
	binutils-csl-sourcerygxx-4_1-19:1.6
	binutils-csl-sourcerygxx-4_1-18:1.6
	binutils-csl-renesas-4_1-9:1.6
	binutils-csl-sourcerygxx-3_4_4-25:1.2
	binutils-csl-renesas-4_1-8:1.6
	binutils-csl-renesas-4_1-7:1.6
	binutils-csl-renesas-4_1-6:1.6
	binutils-csl-sourcerygxx-4_1-17:1.6
	binutils-csl-sourcerygxx-4_1-14:1.6
	binutils-csl-sourcerygxx-4_1-15:1.6
	binutils-csl-sourcerygxx-4_1-13:1.6
	binutils-2_17:1.6
	binutils-csl-sourcerygxx-4_1-12:1.6
	binutils-csl-sourcerygxx-3_4_4-21:1.6
	binutils-csl-wrs-linux-3_4_4-24:1.2.20.1
	binutils-csl-wrs-linux-3_4_4-23:1.2.20.1
	binutils-csl-sourcerygxx-4_1-9:1.6
	binutils-csl-sourcerygxx-4_1-8:1.6
	binutils-csl-sourcerygxx-4_1-7:1.6
	binutils-csl-arm-2006q1-6:1.6
	binutils-csl-sourcerygxx-4_1-6:1.6
	binutils-csl-wrs-linux-3_4_4-22:1.2.20.1
	binutils-csl-coldfire-4_1-11:1.6
	binutils-csl-sourcerygxx-3_4_4-19:1.6
	binutils-csl-coldfire-4_1-10:1.6
	binutils-csl-sourcerygxx-4_1-5:1.6
	binutils-csl-sourcerygxx-4_1-4:1.6
	binutils-csl-wrs-linux-3_4_4-21:1.2.20.1
	binutils-csl-morpho-4_1-4:1.6
	binutils-csl-sourcerygxx-3_4_4-17:1.6
	binutils-csl-wrs-linux-3_4_4-20:1.2.20.1
	binutils-2_17-branch:1.6.0.4
	binutils-2_17-branchpoint:1.6
	binutils-csl-2_17-branch:1.6.0.2
	binutils-csl-2_17-branchpoint:1.6
	binutils-csl-gxxpro-3_4-branch:1.2.0.22
	binutils-csl-gxxpro-3_4-branchpoint:1.2
	binutils-2_16_1:1.2
	binutils-csl-arm-2005q1b:1.2.20.1
	binutils-2_16:1.2
	binutils-csl-arm-2005q1a:1.2
	binutils-csl-arm-2005q1-branch:1.2.0.20
	binutils-csl-arm-2005q1-branchpoint:1.2
	binutils-2_16-branch:1.2.0.18
	binutils-2_16-branchpoint:1.2
	csl-arm-2004-q3d:1.2
	csl-arm-2004-q3:1.2
	binutils-2_15:1.2
	binutils-2_15-branchpoint:1.2
	csl-arm-2004-q1a:1.2
	csl-arm-2004-q1:1.2
	binutils-2_15-branch:1.2.0.16
	cagney_bfdfile-20040213-branch:1.2.0.14
	cagney_bfdfile-20040213-branchpoint:1.2
	cagney_bigcore-20040122-branch:1.2.0.12
	cagney_bigcore-20040122-branchpoint:1.2
	csl-arm-2003-q4:1.2
	binutils-2_14:1.2
	binutils-2_14-branch:1.2.0.10
	binutils-2_14-branchpoint:1.2
	binutils-2_13_2_1:1.2
	binutils-2_13_2:1.2
	binutils-2_13_1:1.2
	binutils-2_13:1.2
	binutils-2_13-branchpoint:1.2
	binutils-2_13-branch:1.2.0.8
	binutils-2_12_1:1.2
	binutils-2_12:1.2
	binutils-2_12-branch:1.2.0.6
	binutils-2_12-branchpoint:1.2
	cygnus_cvs_20020108_pre:1.2
	binutils-2_11_2:1.2
	binutils-2_11_1:1.2
	binutils-2_11:1.2
	x86_64versiong3:1.2
	binutils-2_11-branch:1.2.0.4
	binutils-2_10_1:1.2
	binutils-2_10:1.2
	binutils-2_10-branch:1.2.0.2
	binutils-2_10-branchpoint:1.2
	binutils_latest_snapshot:1.7
	repo-unification-2000-02-06:1.1.1.1
	binu_ss_19990721:1.1.1.1
	binu_ss_19990602:1.1.1.1
	binu_ss_19990502:1.1.1.1
	cygnus:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2010.06.07.10.43.51;	author mgretton;	state Exp;
branches;
next	1.6;

1.6
date	2005.06.13.15.34.39;	author zack;	state Exp;
branches;
next	1.5;

1.5
date	2005.06.07.18.03.17;	author zack;	state Exp;
branches;
next	1.4;

1.4
date	2005.06.07.17.54.22;	author zack;	state Exp;
branches;
next	1.3;

1.3
date	2005.05.18.05.40.10;	author zack;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.29.18.25.37;	author nickc;	state Exp;
branches
	1.2.20.1;
next	1.1;

1.1
date	99.05.03.07.28.48;	author rth;	state Exp;
branches
	1.1.1.1;
next	;

1.2.20.1
date	2005.04.30.23.36.15;	author pbrook;	state Exp;
branches;
next	;

1.1.1.1
date	99.05.03.07.28.48;	author rth;	state Exp;
branches;
next	;


desc
@@


1.7
log
@	* gas/testsuite/gas/arm/thumb-eabi.d: Add case for divided syntax encoding of movs.
	* gas/testsuite/gas/arm/thumb.d: Likewise.
	* gas/testsuite/gas/arm/thumb.s: Likewise.
	* gas/testsuite/gas/arm/thumb2_it.d: Update for change in lsls/movs disassembly.
	* gas/testsuite/gas/arm/thumb2_it_auto.d: Liekwise.
	* gas/testsuite/gas/arm/thumb32.d: Likewise.
	* ld/testsuite/ld-arm/arm-call.d: Handle change in lsls/movs disassembly.
	* ld/testsuite/ld-arm/farcall-thumb-arm-short.d: Likewise.
	* ld/testsuite/ld-arm/farcall-thumb-thumb-blx-pic-veneer.d: Likewise.
	* ld/testsuite/ld-arm/farcall-thumb-thumb-blx.d: Likewise.
	* ld/testsuite/ld-arm/farcall-thumb-thumb-m-pic-veneer.d: Likewise.
	* ld/testsuite/ld-arm/farcall-thumb-thumb-m.d: Likewise.
	* ld/testsuite/ld-arm/farcall-thumb-thumb-pic-veneer.d: Likewise.
	* ld/testsuite/ld-arm/farcall-thumb-thumb.d: Likewise.
	* ld/testsuite/ld-arm/thumb2-bl-as-thumb1-bad-noeabi.d: Likewise.
	* ld/testsuite/ld-arm/thumb2-bl-as-thumb1-bad.d: Likewise.
	* ld/testsuite/ld-arm/thumb2-bl-bad-noeabi.d: Likewise.
	* ld/testsuite/ld-arm/thumb2-bl-bad.d: Likewise.
	* opcodes/arm-dis.c (thumb-opcodes): Add disassembly for movs.
@
text
@	.text
	.code 16
.foo:	
	lsl	r2, r1, #3
	lsr	r3, r4, #31
wibble/data:	
	asr	r7, r0, #5

	lsl	r1, r2, #0
	lsr	r3, r4, #0
	asr	r4, r5, #0

	lsr	r6, r7, #32
	asr	r0, r1, #32

	add	r1, r2, r3
	add	r2, r4, #2
	sub	r3, r5, r7
	sub	r2, r4, #7

	mov	r4, #255
	cmp	r3, #250
	add	r6, #123
	sub	r5, #128

	and	r3, r5
	eor	r4, r6
	lsl	r1, r0
	lsr	r2, r3
	asr	r4, r6
	adc	r5, r7
	sbc	r0, r4
	ror	r1, r4
	tst	r2, r5
	neg	r1, r1
	cmp	r2, r3
	cmn	r1, r4
	orr	r0, r3
	mul	r4, r5
	bic	r5, r7
	mvn	r5, r5

	add	r1, r13
	add	r12, r2
	add	r9, r9
	cmp	r1, r14
	cmp	r8, r0
	cmp	r12, r14
	mov	r0, r9
	mov	r9, r4
	mov	r8, r8
	bx	r7
	bx	r8
	.align 0
	bx	pc

	ldr	r3, [pc, #128]
	ldr	r4, bar

	str	r0, [r1, r2]
	strb	r1, [r2, r4]
	ldr	r5, [r6, r7]
	ldrb	r2, [r4, r5]
	
	.align 0
bar:	
	strh	r1, [r2, r3]
	ldrh	r3, [r4, r0]
	ldsb	r1, [r6, r7]
	ldsh	r2, [r0, r5]

	str	r3, [r3, #124]
	ldr	r1, [r4, #124]
	ldr	r5, [r5]
	strb	r1, [r5, #31]
	strb	r1, [r4, #5]
	strb	r2, [r6]

	strh	r4, [r5, #62]
	ldrh	r5, [r0, #4]
	ldrh	r3, [r2]

	str	r3, [r13, #1020]
	ldr	r1, [r13, #44]
	ldr	r2, [r13]

	add	r7, r15, #1020
	add	r4, r13, #512

	add	r13, #268
	add	r13, #-104
	sub	r13, #268
	sub	r13, #-108

	push	{r0, r1, r2, r4}
	push	{r0, r3-r7, lr}
	pop	{r3, r4, r7}
	pop	{r0-r7, r15}

	stmia	r3!, {r0, r1, r4-r7}
	ldmia	r0!, {r1-r7}

	beq	bar
	bne	bar
	bcs	bar
	bcc	bar
	bmi	bar
	bpl	bar
	bvs	bar
	bvc	bar
	bhi	bar
	bls	bar
	bge	bar
	bgt	bar
	blt	bar
	bgt	bar
	ble	bar
	bhi	bar
	blo	bar
	bul	bar
	bal	bar

close:
	lsl	r4, r5, #near - close
near:
	add	r2, r3, #near - close

	add	sp, sp, #127 << 2
	sub	sp, sp, #127 << 2
	add	r0, sp, #255 << 2
	add	r0, pc, #255 << 2

	add	sp, sp, #bar - .foo
	sub	sp, sp, #bar - .foo
	add	r0, sp, #bar - .foo
	add	r0, pc, #bar - .foo

	add	r1, #bar - .foo
	mov	r6, #bar - .foo
	cmp	r7, #bar - .foo

	nop
	nop

	.arm
.localbar:
	b	.localbar
	b	.back
	bl	.localbar
	bl	.back

	bx	r0
	swi	0x123456

	.thumb
	@@ The following will be disassembled incorrectly if we do not
	@@ have a Thumb symbol defined before the first Thumb instruction:
morethumb:
	adr	r0, forwardonly

	b	.foo
	b	.back
	bl	.foo
	bl	.back

	bx	r0

	swi	0xff
	.align	0
forwardonly:
	beq	.back
	bne	.back
	bcs	.back
	bcc	.back
	bmi	.back
	bpl	.back
	bvs	.back
	bvc	.back
	bhi	.back
	bls	.back
	bge	.back
	bgt	.back
	blt	.back
	bgt	.back
	ble	.back
	bhi	.back
	blo	.back
	bul	.back

.back:
	bl	.local
	.space	(1 << 11)	@@ leave space to force long offsets
.local:
	bl	.back

	ldr	r0, .target
	ldr	r0, .target
	ldr	r0, [pc, #4]
	ldr	r0, [pc, #4]
.target:
baz:
	mov	r0, r1
	nop
@


1.6
log
@gas:
	* config/tc-arm.c (find_real_start): Check S_IS_LOCAL on
	symbolP as well as for names with a leading dot.  Use ACONCAT.
	(md_apply_fix): For branch relocations, only replace value
	with fixP->fx_offset (under #ifdef OBJ_ELF) when !fixP->fx_done.
	(arm_force_relocation): Remove #ifdef OBJ_ELF case.
	* config/tc-arm.h (LOCAL_LABEL): Remove unnecessary parentheses.
	(LOCAL_LABEL_PREFIX): Don't define.
gas/testsuite:
	* gas/arm/thumb.s: Only branch to labels defined in this file.
	* gas/arm/thumb.d, gas/arm/thumb32.d: Adjust expected output.
@
text
@d201 2
a202 1
	nop	@@ pad for a.out
@


1.5
log
@Revert accidental commit
@
text
@d148 1
a148 1
	b	.wombat
d150 1
a150 1
	bl	.wombat
d162 1
a162 1
	b	.wombat
d164 1
a164 1
	bl	.wombat
d171 18
a188 18
	beq	.wombat
	bne	.wombat
	bcs	.wombat
	bcc	.wombat
	bmi	.wombat
	bpl	.wombat
	bvs	.wombat
	bvc	.wombat
	bhi	.wombat
	bls	.wombat
	bge	.wombat
	bgt	.wombat
	blt	.wombat
	bgt	.wombat
	ble	.wombat
	bhi	.wombat
	blo	.wombat
	bul	.wombat
@


1.4
log
@gas:
	* cgen.c, cgen.h, tc.h, write.c, config/obj-coff.c
	* config/tc-a29k.c, config/tc-alpha.c, config/tc-alpha.h
	* config/tc-arc.c, config/tc-arc.h, config/tc-arm.c
	* config/tc-arm.h, config/tc-avr.c, config/tc-avr.h
	* config/tc-cris.c, config/tc-crx.c, config/tc-d10v.c
	* config/tc-d10v.h, config/tc-d30v.c, config/tc-d30v.h
	* config/tc-dlx.c, config/tc-dlx.h, config/tc-fr30.h
	* config/tc-frv.c, config/tc-frv.h, config/tc-h8300.c
	* config/tc-h8500.c, config/tc-hppa.c, config/tc-hppa.h
	* config/tc-i370.c, config/tc-i370.h, config/tc-i386.c
	* config/tc-i386.h, config/tc-i860.c, config/tc-i860.h
	* config/tc-i960.c, config/tc-i960.h, config/tc-ia64.c
	* config/tc-ip2k.c, config/tc-ip2k.h, config/tc-iq2000.c
	* config/tc-iq2000.h, config/tc-m32r.c, config/tc-m32r.h
	* config/tc-m68hc11.c, config/tc-m68hc11.h, config/tc-m68k.c
	* config/tc-m68k.h, config/tc-m88k.c, config/tc-maxq.c
	* config/tc-mcore.c, config/tc-mcore.h, config/tc-mips.c
	* config/tc-mips.h, config/tc-mmix.c, config/tc-mn10200.c
	* config/tc-mn10300.c, config/tc-msp430.c, config/tc-ns32k.c
	* config/tc-openrisc.h, config/tc-or32.c, config/tc-or32.h
	* config/tc-pdp11.c, config/tc-pj.c, config/tc-pj.h
	* config/tc-ppc.c, config/tc-ppc.h, config/tc-s390.c
	* config/tc-s390.h, config/tc-sh64.c, config/tc-sh.c
	* config/tc-sh.h, config/tc-sparc.c, config/tc-sparc.h
	* config/tc-tahoe.c, config/tc-tic30.c, config/tc-tic4x.c
	* config/tc-tic54x.c, config/tc-tic80.c, config/tc-v850.c
	* config/tc-v850.h, config/tc-vax.c, config/tc-vax.h
	* config/tc-w65.c, config/tc-xstormy16.c, config/tc-xstormy16.h
	* config/tc-xtensa.c, config/tc-z8k.c:
	Replace all instances of the string "_apply_fix3" with
	"_apply_fix".
	* po/POTFILES.in, po/gas.pot: Regenerate.
bfd:
	* coff-i386.c: Change md_apply_fix3 to md_apply_fix in comment.
cgen:
	* doc/porting.texi: Change all mention of md_apply_fix3 and
	gas_cgen_md_apply_fix3 to md_apply_fix and gas_cgen_md_apply_fix
	respectively.
@
text
@d148 1
a148 1
	b	.back
d150 1
a150 1
	bl	.back
d162 1
a162 1
	b	.back
d164 1
a164 1
	bl	.back
d171 18
a188 18
	beq	.back
	bne	.back
	bcs	.back
	bcc	.back
	bmi	.back
	bpl	.back
	bvs	.back
	bvc	.back
	bhi	.back
	bls	.back
	bge	.back
	bgt	.back
	blt	.back
	bgt	.back
	ble	.back
	bhi	.back
	blo	.back
	bul	.back
@


1.3
log
@include/elf:
	* arm.h: Import complete list of official relocation names
	and numbers from AAELF.  Define FAKE_RELOCs for old names.
	Remove a few old names no longer used anywhere.

bfd:
	* elf32-arm.c: Wherever possible, use official reloc names
	from AAELF.
	(elf32_arm_howto_table, elf32_arm_tls_gd32_howto)
	(elf32_arm_tls_ldo32_howto, elf32_arm_tls_ldm32_howto)
	(elf32_arm_tls_le32_howto, elf32_arm_tls_ie32_howto)
	(elf32_arm_vtinherit_howto, elf32_arm_vtentry_howto)
	(elf32_arm_pc11_howto, elf32_arm_thm_pc9_howto, elf32_arm_got_prel)
	(elf32_arm_r_howto): Replace with elf32_arm_howto_table_1,
	elf32_arm_howto_table_2, and elf32_arm_howto_table_3.
	Add many new relocations from AAELF.
	(elf32_arm_howto_from_type): Update to match.
	(elf32_arm_reloc_map): Add entries for R_ARM_THM_JUMP24,
	R_ARM_THM_JUMP11, R_ARM_THM_JUMP19, R_ARM_THM_JUMP8,
	R_ARM_THM_JUMP6, R_ARM_GNU_VTINHERIT, and R_ARM_GNU_VTENTRY.
	(elf32_arm_reloc_type_lookup): Use elf32_arm_howto_from_type.
	(elf32_arm_final_link_relocate): Add support for
	R_ARM_THM_JUMP24, R_ARM_THM_JUMP19, R_ARM_THM_JUMP6.  Remove
	case entries redundant with default.

	* reloc.c: Reorganize ARM relocations.  Add Thumb
	assembler-internal relocations BFD_RELOC_ARM_T32_OFFSET_U8,
	BFD_RELOC_ARM_T32_OFFSET_IMM, BFD_RELOC_ARM_T32_IMMEDIATE.
	Add visible relocations BFD_RELOC_THUMB_PCREL_BRANCH7,
	BFD_RELOC_THUMB_BRANCH20, BFD_RELOC_THUMB_BRANCH25.
	Delete unused relocations BFD_RELOC_ARM_GOT12, BFD_RELOC_ARM_COPY.
	* bfd-in2.h, libbfd.h: Regenerate.

opcodes:
	* arm-dis.c (thumb_opcodes): Add disassembly for V6T2 16-bit
	instructions.  Adjust disassembly of some opcodes to match
	unified syntax.
	(thumb32_opcodes): New table.
	(print_insn_thumb): Rename print_insn_thumb16; don't handle
	two-halfword branches here.
	(print_insn_thumb32): New function.
	(print_insn): Choose among print_insn_arm, print_insn_thumb16,
	and print_insn_thumb32.  Be consistent about order of
	halfwords when printing 32-bit instructions.

gas:
	* hash.c (hash_lookup): Add len parameter.  All callers changed.
	(hash_find_n): New interface.
	* hash.h: Prototype hash_find_n.
	* sb.c: Include as.h.
	(scrub_from_sb, sb_to_scrub, scrub_position): New statics.
	(sb_scrub_and_add_sb): New interface.
	* sb.h: Prototype sb_scrub_and_add_sb.
	* input-scrub.c (input_scrub_include_sb): Use sb_scrub_and_add_sb.

	* config/tc-arm.h (TC_FORCE_RELOCATION_LOCAL): Remove
	reference to BFD_RELOC_ARM_GOT12 which is never generated.
	* config/tc-arm.c: Rewrite, adding Thumb-2 support.

gas/testsuite:
	* gas/arm/arm.exp: Convert all existing "gas_test" tests to
	"run_dump_test" tests.  Run more tests unconditionally.  Run new tests.
	* gas/arm/arch4t.s, gas/arm/arch6zk.s, gas/arm/arm3.s, gas/arm/arm6.s
	* gas/arm/arm7dm.s, gas/arm/bignum1.s, gas/arm/float.s
	* gas/arm/immed.s, gas/arm/iwmmxt.s, gas/arm/offset.s, gas/arm/thumb.s:
	Adjust to work as a dump test.
	* gas/arm/arch4t.d, gas/arm/arch6zk.d, gas/arm/arm3.d, gas/arm/arm6.d
	* gas/arm/arm7dm.d, gas/arm/bignum1.d, gas/arm/float.d
	* gas/arm/immed.d, gas/arm/iwmmxt.d, gas/arm/offset.d, gas/arm/thumb.d:
	New files.

	* gas/arm/armv1-bad.l, gas/arm/armv1-bad.s: Remove tests for
	diagnostics that don't happen in the first pass anymore.

	* gas/arm/iwmmxt-bad.l, gas/arm/r15-bad.l, gas/arm/req.l
	* gas/arm/vfp-bad.l:
	Update expected diagnostics.
	* gas/arm/pic.d: Update expected reloc name.
	* gas/arm/thumbv6.d: CPY no longer appears in disassembly.
	* gas/arm/r15-bad.s: Avoid two-argument mul.
	* gas/arm/req.s: Adjust comments.
	* gas/arm/maverick.d, gas/arm/maverick.s: Avoid inappropriate
	use of PC.

	* gas/arm/macro-1.d, gas/arm/macro1.s
	* gas/arm/t16-bad.l, gas/arm/t16-bad.s
	* gas/arm/tcompat.d, gas/arm/tcompat.s
	* gas/arm/tcompat2.d, gas/arm/tcompat2.s
	* gas/arm/thumb32.d, gas/arm/thumb32.s
	New test pair.

ld/testsuite:
	* ld-arm/mixed-app.d: Adjust expected disassembly a little.
@
text
@d148 1
a148 1
	b	.wombat
d150 1
a150 1
	bl	.wombat
d162 1
a162 1
	b	.wombat
d164 1
a164 1
	bl	.wombat
d171 18
a188 18
	beq	.wombat
	bne	.wombat
	bcs	.wombat
	bcc	.wombat
	bmi	.wombat
	bpl	.wombat
	bvs	.wombat
	bvc	.wombat
	bhi	.wombat
	bls	.wombat
	bge	.wombat
	bgt	.wombat
	blt	.wombat
	bgt	.wombat
	ble	.wombat
	bhi	.wombat
	blo	.wombat
	bul	.wombat
@


1.2
log
@Add "bal" instruction pattern.
Add test of assembling "bal" instruction
@
text
@d195 8
@


1.2.20.1
log
@2005-05-01  Zack Weinberg  <zack@@codesourcery.com>

	* gas/config/tc-arm.c (encode_thumb32_addr_mode): Set inst.reloc.pc_rel
	if is_pc.
	(T16_32_TAB): Delete unused entry for BLX.
	(do_t_ldst): Don't offset inst.reloc.exp.X_add_number for PC-relative
	addressing.
	(md_pcrel_from): Report the adjusted PC for
	BFD_RELOC_ARM_THUMB_OFFSET and BFD_RELOC_ARM_T32_OFFSET_IMM.
	(md_apply_fix3): Correct bitmasks for BFD_RELOC_ARM_T32_OFFSET_IMM.
	Do not round up value for PC-relative BFD_RELOC_ARM_THUMB_OFFSET.

	* gas/testsuite/gas/arm/thumb.s: Test PC-relative ldr more thoroughly.
	* gas/testsuite/gas/arm/thumb.d: Update to match.

	* gas/testsuite/gas/arm/thumb32.s: Properly align labels that
	will be targeted by blx instructions.
	* gas/testsuite/gas/arm/thumb32.d: Update to match.  Correct
	expected dissassembly of PC-relative ldr.

	* gas/testsuite/gas/arm/macro1.s: Add leading label and
	trailing padding for a.out compatibility.
	* gas/testsuite/gas/arm/macro1.d: Update to match.
	* gas/testsuite/gas/arm/tcompat2.s: Add trailing padding for a.out
	compatibility.
	* gas/testsuite/gas/arm/tcompat2.d: Update to match.

	* opcodes/arm-dis.c (print_insn_thumb32): Reorganize %a and %A
	handling.  Call info->print_address_func when %a/%A are applied
	to a PC-relative instruction.
@
text
@a194 8

	ldr	r0, .target
	ldr	r0, .target
	ldr	r0, [pc, #4]
	ldr	r0, [pc, #4]
.target:
	nop	@@ pad for a.out
	nop
@


1.1
log
@Initial revision
@
text
@d121 1
@


1.1.1.1
log
@19990502 sourceware import
@
text
@@

