head	1.6;
access;
symbols
	binutils-2_24-branch:1.6.0.12
	binutils-2_24-branchpoint:1.6
	binutils-2_21_1:1.6
	binutils-2_23_2:1.6
	binutils-2_23_1:1.6
	binutils-2_23:1.6
	binutils-2_23-branch:1.6.0.10
	binutils-2_23-branchpoint:1.6
	binutils-2_22_branch:1.6.0.8
	binutils-2_22:1.6
	binutils-2_22-branch:1.6.0.6
	binutils-2_22-branchpoint:1.6
	binutils-2_21:1.6
	binutils-2_21-branch:1.6.0.4
	binutils-2_21-branchpoint:1.6
	binutils-2_20_1:1.6
	binutils-2_20:1.6
	binutils-arc-20081103-branch:1.4.0.10
	binutils-arc-20081103-branchpoint:1.4
	binutils-2_20-branch:1.6.0.2
	binutils-2_20-branchpoint:1.6
	dje-cgen-play1-branch:1.4.0.8
	dje-cgen-play1-branchpoint:1.4
	arc-20081103-branch:1.4.0.6
	arc-20081103-branchpoint:1.4
	binutils-2_19_1:1.4
	binutils-2_19:1.4
	binutils-2_19-branch:1.4.0.4
	binutils-2_19-branchpoint:1.4
	binutils-2_18:1.4
	binutils-2_18-branch:1.4.0.2
	binutils-2_18-branchpoint:1.4
	binutils-csl-coldfire-4_1-32:1.1.2.1
	binutils-csl-sourcerygxx-4_1-32:1.1.2.1
	binutils-csl-innovasic-fido-3_4_4-33:1.1.2.1
	binutils-csl-coldfire-4_1-30:1.1.2.1
	binutils-csl-sourcerygxx-4_1-30:1.1.2.1
	binutils-csl-coldfire-4_1-28:1.1.2.1
	binutils-csl-sourcerygxx-4_1-29:1.1.2.1
	binutils-csl-sourcerygxx-4_1-28:1.1.2.1
	binutils-csl-arm-2006q3-27:1.1.2.1
	binutils-csl-sourcerygxx-4_1-27:1.1.2.1
	binutils-csl-arm-2006q3-26:1.1.2.1
	binutils-csl-sourcerygxx-4_1-26:1.1.2.1
	binutils-csl-sourcerygxx-4_1-25:1.1.2.1
	binutils-csl-sourcerygxx-4_1-24:1.1.2.1
	binutils-csl-sourcerygxx-4_1-23:1.1.2.1
	binutils-csl-sourcerygxx-4_1-21:1.1.2.1
	binutils-csl-arm-2006q3-21:1.1.2.1
	binutils-csl-sourcerygxx-4_1-22:1.1.2.1
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.1.2.1
	binutils-csl-sourcerygxx-4_1-20:1.1.2.1
	binutils-csl-arm-2006q3-19:1.1.2.1
	binutils-csl-sourcerygxx-4_1-19:1.1.2.1
	binutils-csl-sourcerygxx-4_1-18:1.1.2.1
	binutils-csl-renesas-4_1-9:1.1.2.1
	binutils-csl-renesas-4_1-8:1.1.2.1
	binutils-csl-renesas-4_1-7:1.1.2.1
	binutils-csl-renesas-4_1-6:1.1.2.1
	binutils-csl-sourcerygxx-4_1-17:1.1.2.1
	binutils_latest_snapshot:1.6
	binutils-csl-2_17-branch:1.1.0.2;
locks; strict;
comment	@# @;


1.6
date	2009.06.30.11.57.05;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	2009.06.29.08.08.15;	author nickc;	state Exp;
branches;
next	1.4;

1.4
date	2007.04.18.13.49.34;	author pbrook;	state Exp;
branches;
next	1.3;

1.3
date	2007.03.14.21.12.13;	author pbrook;	state Exp;
branches;
next	1.2;

1.2
date	2007.01.11.15.39.08;	author pbrook;	state Exp;
branches;
next	1.1;

1.1
date	2006.07.18.16.44.47;	author pbrook;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2006.07.18.16.45.51;	author pbrook;	state Exp;
branches;
next	;


desc
@@


1.6
log
@        PR 10288
        * arm-dis.c (coprocessor): Print the LDC and STC versions of the
        LFM and SFM instructions as comments,.
        Improve consistency of formatting for instructions displayed as
        comments and decimal values displayed with their hexadecimal
        equivalents.
        Formatting tidy ups.

        Updated expected disassembler regexps.
@
text
@# as: -march=armv6kt2
# objdump: -dr --prefix-addresses --show-raw-insn

.*: +file format .*arm.*

Disassembly of section .text:
0+000 <[^>]+> f60f 0000 	addw	r0, pc, #2048	; 0x800
0+004 <[^>]+> f20f 0900 	addw	r9, pc, #0
0+008 <[^>]+> f20f 4900 	addw	r9, pc, #1024	; 0x400
0+00c <[^>]+> f509 6880 	add.w	r8, r9, #1024	; 0x400
0+010 <[^>]+> f209 1801 	addw	r8, r9, #257	; 0x101
0+014 <[^>]+> f201 1301 	addw	r3, r1, #257	; 0x101
0+018 <[^>]+> f6af 0000 	subw	r0, pc, #2048	; 0x800
0+01c <[^>]+> f2af 0900 	subw	r9, pc, #0
0+020 <[^>]+> f2af 4900 	subw	r9, pc, #1024	; 0x400
0+024 <[^>]+> f5a9 6880 	sub.w	r8, r9, #1024	; 0x400
0+028 <[^>]+> f2a9 1801 	subw	r8, r9, #257	; 0x101
0+02c <[^>]+> f2a1 1301 	subw	r3, r1, #257	; 0x101
0+030 <[^>]+> f103 0301 	add.w	r3, r3, #1
0+034 <[^>]+> f1a3 0301 	sub.w	r3, r3, #1
0+038 <[^>]+> b0c0      	sub	sp, #256	; 0x100
0+03a <[^>]+> f5ad 7d00 	sub.w	sp, sp, #512	; 0x200
0+03e <[^>]+> f2ad 1d01 	subw	sp, sp, #257	; 0x101
0+042 <[^>]+> b040      	add	sp, #256	; 0x100
0+044 <[^>]+> f50d 7d00 	add.w	sp, sp, #512	; 0x200
0+048 <[^>]+> f20d 1d01 	addw	sp, sp, #257	; 0x101
0+04c <[^>]+> a840      	add	r0, sp, #256	; 0x100
0+04e <[^>]+> f50d 6580 	add.w	r5, sp, #1024	; 0x400
0+052 <[^>]+> f20d 1901 	addw	r9, sp, #257	; 0x101
0+056 <[^>]+> 4271      	negs	r1, r6
@


1.5
log
@        PR 10288
        * arm-dis.c (enum opcode_sentinels): New:  Used to mark the
        boundary between variaant and generic coprocessor instuctions.
        (coprocessor): Use it.
        Fix architecture version of MCRR and MRRC instructions.
        (arm_opcdes): Fix patterns for STRB and STRH instructions.
        (print_insn_coprocessor): Check architecture and extension masks.
        Print a hexadecimal version of any decimal constant that is
        outside of the range of -16 to +32.
        (print_arm_address): Add a return value of the offset used in the
        adress, if it is worth printing a hexadecimal version of it.
        (print_insn_neon): Print a hexadecimal version of any decimal
        constant that is outside of the range of -16 to +32.
        (print_insn_arm): Likewise.
        (print_insn_thumb16): Likewise.
        (print_insn_thumb32): Likewise.

        PR 10297
        * arm-dis.c (UNDEFINED_INSTRUCTION): New macro for a description
        of an undefined instruction.
        (arm_opcodes): Use it.
        (thumb_opcod): Use it.
        (thumb32_opc): Use it.

        Update expected disassembly regrexps in GAS and LD testsuites.
@
text
@d8 1
a8 1
0+004 <[^>]+> f20f 0900 	addw	r9, pc, #0	; 0x0
d14 1
a14 1
0+01c <[^>]+> f2af 0900 	subw	r9, pc, #0	; 0x0
d19 3
a21 3
0+030 <[^>]+> f103 0301 	add.w	r3, r3, #1	; 0x1
0+034 <[^>]+> f1a3 0301 	sub.w	r3, r3, #1	; 0x1
0+038 <[^>]+> b0c0      	sub	sp, #256.*
d24 1
a24 1
0+042 <[^>]+> b040      	add	sp, #256.*
d27 1
a27 1
0+04c <[^>]+> a840      	add	r0, sp, #256.*
@


1.4
log
@2007-04-18  Paul Brook  <paul@@codesourcery.com>

	gas/testsuite/
	* gas/arm/thumb2_add.s: Add rsb #0 test.
	* gas/arm/thumb2_add.d: Update expected output.

	gas/
	* config/tc-arm.c (do_t_rsb): Use 16-bit encoding when possible.
@
text
@d21 1
a21 1
0+038 <[^>]+> b0c0      	sub	sp, #256
d24 1
a24 1
0+042 <[^>]+> b040      	add	sp, #256
d27 1
a27 1
0+04c <[^>]+> a840      	add	r0, sp, #256
@


1.3
log
@2007-03-14  Paul Brook  <paul@@codesourcery.com>

	gas/
	* config/tc-arm.c (T16_32_TAB): Fix dec_sp encoding.

	gas/testsuite/
	* gas/arm/thumb2_add.d: Add tests using sp.
	* gas/arm/thumb2_add.s: Ditto.
@
text
@d30 1
a30 1
0+056 <[^>]+> bf00      	nop
@


1.2
log
@2007-01-11  Paul Brook  <paul@@codesourcery.com>

	gas/
	* config/tc-arm.c (do_t_add_sub): Use Rd and Rs.

	gas/testsuite/
	* gas/arm/thumb2_add.d: Add test for missing operand.
	* gas/arm/thumb2_add.s: Ditto.
@
text
@d21 10
@


1.1
log
@2006-07-18  Paul Brook  <paul@@codesourcery.com>

	bfd/
	* bfd-in2.h: Regenerate.
	* libbfd.h: Regenerate.
	* reloc.c: Add BFD_RELOC_ARM_T32_ADD_IMM.

	gas/
	* tc-arm.c (do_t_add_sub): Use addw/subw when source is PC.
	(md_convert_frag): Use correct reloc for add_pc.  Use
	BFD_RELOC_ARM_T32_ADD_IMM for normal add/sum.
	(md_apply_fix): Handle BFD_RELOC_ARM_T32_ADD_IMM.
	(arm_force_relocation): Handle BFD_RELOC_ARM_T32_ADD_IMM.

	gas/testsuite/
	* gas/arm/thumb2_add.d: New test.
	* gas/arm/thumb2_add.s: New test.
@
text
@d19 2
@


1.1.2.1
log
@2006-07-18  Paul Brook  <paul@@codesourcery.com>

	Merge from mainline.
	bfd/
	* bfd-in2.h: Regenerate.
	* libbfd.h: Regenerate.
	* reloc.c: Add BFD_RELOC_ARM_T32_ADD_IMM.

	gas/
	* tc-arm.c (do_t_add_sub): Use addw/subw when source is PC.
	(md_convert_frag): Use correct reloc for add_pc.  Use
	BFD_RELOC_ARM_T32_ADD_IMM for normal add/sum.
	(md_apply_fix): Handle BFD_RELOC_ARM_T32_ADD_IMM.
	(arm_force_relocation): Handle BFD_RELOC_ARM_T32_ADD_IMM.

	gas/testsuite/
	* gas/arm/thumb2_add.d: New test.
	* gas/arm/thumb2_add.s: New test.
@
text
@@

