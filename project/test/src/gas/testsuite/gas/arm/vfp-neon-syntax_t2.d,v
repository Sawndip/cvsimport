head	1.9;
access;
symbols
	binutils-2_24-branch:1.9.0.10
	binutils-2_24-branchpoint:1.9
	binutils-2_21_1:1.9
	binutils-2_23_2:1.9
	binutils-2_23_1:1.9
	binutils-2_23:1.9
	binutils-2_23-branch:1.9.0.8
	binutils-2_23-branchpoint:1.9
	binutils-2_22_branch:1.9.0.6
	binutils-2_22:1.9
	binutils-2_22-branch:1.9.0.4
	binutils-2_22-branchpoint:1.9
	binutils-2_21:1.9
	binutils-2_21-branch:1.9.0.2
	binutils-2_21-branchpoint:1.9
	binutils-2_20_1:1.6
	binutils-2_20:1.6
	binutils-arc-20081103-branch:1.4.0.8
	binutils-arc-20081103-branchpoint:1.4
	binutils-2_20-branch:1.6.0.2
	binutils-2_20-branchpoint:1.6
	dje-cgen-play1-branch:1.5.0.2
	dje-cgen-play1-branchpoint:1.5
	arc-20081103-branch:1.4.0.6
	arc-20081103-branchpoint:1.4
	binutils-2_19_1:1.4
	binutils-2_19:1.4
	binutils-2_19-branch:1.4.0.4
	binutils-2_19-branchpoint:1.4
	binutils-2_18:1.4
	binutils-2_18-branch:1.4.0.2
	binutils-2_18-branchpoint:1.4
	binutils-csl-coldfire-4_1-32:1.1.2.3
	binutils-csl-sourcerygxx-4_1-32:1.1.2.3
	binutils-csl-innovasic-fido-3_4_4-33:1.1.2.3
	binutils-csl-coldfire-4_1-30:1.1.2.3
	binutils-csl-sourcerygxx-4_1-30:1.1.2.3
	binutils-csl-coldfire-4_1-28:1.1.2.3
	binutils-csl-sourcerygxx-4_1-29:1.1.2.3
	binutils-csl-sourcerygxx-4_1-28:1.1.2.3
	binutils-csl-arm-2006q3-27:1.1.2.3
	binutils-csl-sourcerygxx-4_1-27:1.1.2.3
	binutils-csl-arm-2006q3-26:1.1.2.3
	binutils-csl-sourcerygxx-4_1-26:1.1.2.3
	binutils-csl-sourcerygxx-4_1-25:1.1.2.3
	binutils-csl-sourcerygxx-4_1-24:1.1.2.2
	binutils-csl-sourcerygxx-4_1-23:1.1.2.2
	binutils-csl-sourcerygxx-4_1-21:1.1.2.2
	binutils-csl-arm-2006q3-21:1.1.2.2
	binutils-csl-sourcerygxx-4_1-22:1.1.2.2
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.1.2.2
	binutils-csl-sourcerygxx-4_1-20:1.1.2.2
	binutils-csl-arm-2006q3-19:1.1.2.2
	binutils-csl-sourcerygxx-4_1-19:1.1.2.2
	binutils-csl-sourcerygxx-4_1-18:1.1.2.2
	binutils-csl-renesas-4_1-9:1.1.2.2
	binutils-csl-renesas-4_1-8:1.1.2.2
	binutils-csl-renesas-4_1-7:1.1.2.2
	binutils-csl-renesas-4_1-6:1.1.2.2
	binutils-csl-sourcerygxx-4_1-17:1.1.2.2
	binutils-csl-sourcerygxx-4_1-14:1.1.2.1
	binutils-csl-sourcerygxx-4_1-15:1.1.2.1
	binutils-csl-sourcerygxx-4_1-13:1.1.2.1
	binutils-csl-sourcerygxx-4_1-12:1.1.2.1
	binutils-csl-sourcerygxx-3_4_4-21:1.1.2.1
	binutils-csl-sourcerygxx-4_1-9:1.1.2.1
	binutils-csl-sourcerygxx-4_1-8:1.1.2.1
	binutils-csl-sourcerygxx-4_1-7:1.1.2.1
	binutils_latest_snapshot:1.9
	binutils-csl-arm-2006q1-6:1.1.2.1
	binutils-csl-sourcerygxx-4_1-6:1.1.2.1
	binutils-csl-coldfire-4_1-11:1.1.2.1
	binutils-csl-sourcerygxx-3_4_4-19:1.1.2.1
	binutils-csl-coldfire-4_1-10:1.1.2.1
	binutils-csl-sourcerygxx-4_1-5:1.1.2.1
	binutils-csl-2_17-branch:1.1.0.2;
locks; strict;
comment	@# @;


1.9
date	2010.01.06.15.02.45;	author nickc;	state Exp;
branches;
next	1.8;

1.8
date	2009.11.03.12.37.45;	author pbrook;	state Exp;
branches;
next	1.7;

1.7
date	2009.10.29.18.01.13;	author pbrook;	state Exp;
branches;
next	1.6;

1.6
date	2009.06.29.08.08.15;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	2008.12.15.17.24.12;	author rearnsha;	state Exp;
branches;
next	1.4;

1.4
date	2006.11.29.16.26.56;	author pbrook;	state Exp;
branches;
next	1.3;

1.3
date	2006.07.05.17.08.09;	author jules;	state Exp;
branches;
next	1.2;

1.2
date	2006.06.07.14.31.51;	author jules;	state Exp;
branches;
next	1.1;

1.1
date	2006.05.05.18.31.29;	author jules;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2006.05.05.18.31.29;	author jules;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2006.07.20.14.16.42;	author jules;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2006.10.25.23.28.52;	author pbrook;	state Exp;
branches;
next	;


desc
@@


1.9
log
@    * arm-dis.c (print_insn): Fixed search for next
    symbol and data dumping condition, and the
    initial mapping symbol state.

    * gas/arm/dis-data.d: New test case.
    * gas/arm/dis-data.s: New file.
@
text
@# name: VFP Neon-style syntax, Thumb mode
# as: -mfpu=vfp3 -I$srcdir/$subdir
# objdump: -dr --prefix-addresses --show-raw-insn

.*: +file format .*arm.*

Disassembly of section \.text:
0[0-9a-f]+ <[^>]+> eeb0 0a60 	(vmov\.f32|fcpys)	s0, s1
0[0-9a-f]+ <[^>]+> eeb0 0b41 	(vmov\.f64|fcpyd)	d0, d1
0[0-9a-f]+ <[^>]+> eeb5 0a00 	(vmov\.f32|fconsts)	s0, #80.*
0[0-9a-f]+ <[^>]+> eeb7 0b00 	(vmov\.f64|fconstd)	d0, #112.*
0[0-9a-f]+ <[^>]+> ee10 0a90 	(vmov|fmrs)	r0, s1
0[0-9a-f]+ <[^>]+> ee00 1a10 	(vmov|fmsr)	s0, r1
0[0-9a-f]+ <[^>]+> ec51 0a11 	(vmov	r0, r1, s2, s3|fmrrs	r0, r1, {s2, s3})
0[0-9a-f]+ <[^>]+> ec44 2a10 	(vmov	s0, s1, r2, r4|fmsrr	{s0, s1}, r2, r4)
0[0-9a-f]+ <[^>]+> bf01      	itttt	eq
0[0-9a-f]+ <[^>]+> eeb0 0a60 	(vmoveq\.f32|fcpyseq)	s0, s1
0[0-9a-f]+ <[^>]+> eeb0 0b41 	(vmoveq\.f64|fcpydeq)	d0, d1
0[0-9a-f]+ <[^>]+> eeb5 0a00 	(vmoveq\.f32|fconstseq)	s0, #80.*
0[0-9a-f]+ <[^>]+> eeb7 0b00 	(vmoveq\.f64|fconstdeq)	d0, #112.*
0[0-9a-f]+ <[^>]+> bf01      	itttt	eq
0[0-9a-f]+ <[^>]+> ee10 0a90 	(vmoveq|fmrseq)	r0, s1
0[0-9a-f]+ <[^>]+> ee00 1a10 	(vmoveq|fmsreq)	s0, r1
0[0-9a-f]+ <[^>]+> ec51 0a11 	(vmoveq	r0, r1, s2, s3|fmrrseq	r0, r1, {s2, s3})
0[0-9a-f]+ <[^>]+> ec44 2a10 	(vmoveq	s0, s1, r2, r4|fmsrreq	{s0, s1}, r2, r4)
0[0-9a-f]+ <[^>]+> eeb1 0ae0 	(vsqrt\.f32|fsqrts)	s0, s1
0[0-9a-f]+ <[^>]+> eeb1 0bc1 	(vsqrt\.f64|fsqrtd)	d0, d1
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> eeb1 0ae0 	(vsqrteq\.f32|fsqrtseq)	s0, s1
0[0-9a-f]+ <[^>]+> eeb1 0bc1 	(vsqrteq\.f64|fsqrtdeq)	d0, d1
0[0-9a-f]+ <[^>]+> eeb0 0ae0 	(vabs\.f32|fabss)	s0, s1
0[0-9a-f]+ <[^>]+> eeb0 0bc1 	(vabs\.f64|fabsd)	d0, d1
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> eeb0 0ae0 	(vabseq\.f32|fabsseq)	s0, s1
0[0-9a-f]+ <[^>]+> eeb0 0bc1 	(vabseq\.f64|fabsdeq)	d0, d1
0[0-9a-f]+ <[^>]+> eeb1 0a60 	(vneg\.f32|fnegs)	s0, s1
0[0-9a-f]+ <[^>]+> eeb1 0b41 	(vneg\.f64|fnegd)	d0, d1
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> eeb1 0a60 	(vnegeq\.f32|fnegseq)	s0, s1
0[0-9a-f]+ <[^>]+> eeb1 0b41 	(vnegeq\.f64|fnegdeq)	d0, d1
0[0-9a-f]+ <[^>]+> eeb4 0a60 	(vcmp\.f32|fcmps)	s0, s1
0[0-9a-f]+ <[^>]+> eeb4 0b41 	(vcmp\.f64|fcmpd)	d0, d1
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> eeb4 0a60 	(vcmpeq\.f32|fcmpseq)	s0, s1
0[0-9a-f]+ <[^>]+> eeb4 0b41 	(vcmpeq\.f64|fcmpdeq)	d0, d1
0[0-9a-f]+ <[^>]+> eeb4 0ae0 	(vcmpe\.f32|fcmpes)	s0, s1
0[0-9a-f]+ <[^>]+> eeb4 0bc1 	(vcmpe\.f64|fcmped)	d0, d1
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> eeb4 0ae0 	(vcmpeeq\.f32|fcmpeseq)	s0, s1
0[0-9a-f]+ <[^>]+> eeb4 0bc1 	(vcmpeeq\.f64|fcmpedeq)	d0, d1
0[0-9a-f]+ <[^>]+> ee20 0ac1 	(vnmul\.f32|fnmuls)	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee21 0b42 	(vnmul\.f64|fnmuld)	d0, d1, d2
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> ee20 0ac1 	(vnmuleq\.f32|fnmulseq)	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee21 0b42 	(vnmuleq\.f64|fnmuldeq)	d0, d1, d2
0[0-9a-f]+ <[^>]+> ee10 0ac1 	(vnmla\.f32|fnmacs)	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee11 0b42 	(vnmla\.f64|fnmacd)	d0, d1, d2
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> ee10 0ac1 	(vnmlaeq\.f32|fnmacseq)	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee11 0b42 	(vnmlaeq\.f64|fnmacdeq)	d0, d1, d2
0[0-9a-f]+ <[^>]+> ee10 0a81 	(vnmls\.f32|fnmscs)	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee11 0b02 	(vnmls\.f64|fnmscd)	d0, d1, d2
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> ee10 0a81 	(vnmlseq\.f32|fnmscseq)	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee11 0b02 	(vnmlseq\.f64|fnmscdeq)	d0, d1, d2
0[0-9a-f]+ <[^>]+> ee20 0a81 	(vmul\.f32|fmuls)	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee21 0b02 	(vmul\.f64|fmuld)	d0, d1, d2
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> ee20 0a81 	(vmuleq\.f32|fmulseq)	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee21 0b02 	(vmuleq\.f64|fmuldeq)	d0, d1, d2
0[0-9a-f]+ <[^>]+> ee00 0a81 	(vmla\.f32|fmacs)	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee01 0b02 	(vmla\.f64|fmacd)	d0, d1, d2
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> ee00 0a81 	(vmlaeq\.f32|fmacseq)	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee01 0b02 	(vmlaeq\.f64|fmacdeq)	d0, d1, d2
0[0-9a-f]+ <[^>]+> ee00 0ac1 	(vmls\.f32|fmscs)	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee01 0b42 	(vmls\.f64|fmscd)	d0, d1, d2
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> ee00 0ac1 	(vmlseq\.f32|fmscseq)	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee01 0b42 	(vmlseq\.f64|fmscdeq)	d0, d1, d2
0[0-9a-f]+ <[^>]+> ee30 0a81 	(vadd\.f32|fadds)	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee31 0b02 	(vadd\.f64|faddd)	d0, d1, d2
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> ee30 0a81 	(vaddeq\.f32|faddseq)	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee31 0b02 	(vaddeq\.f64|fadddeq)	d0, d1, d2
0[0-9a-f]+ <[^>]+> ee30 0ac1 	(vsub\.f32|fsubs)	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee31 0b42 	(vsub\.f64|fsubd)	d0, d1, d2
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> ee30 0ac1 	(vsubeq\.f32|fsubseq)	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee31 0b42 	(vsubeq\.f64|fsubdeq)	d0, d1, d2
0[0-9a-f]+ <[^>]+> ee80 0a81 	(vdiv\.f32|fdivs)	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee81 0b02 	(vdiv\.f64|fdivd)	d0, d1, d2
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> ee80 0a81 	(vdiveq\.f32|fdivseq)	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee81 0b02 	(vdiveq\.f64|fdivdeq)	d0, d1, d2
0[0-9a-f]+ <[^>]+> eeb5 0a40 	(vcmp\.f32	s0, #0.0|fcmpzs	s0)
0[0-9a-f]+ <[^>]+> eeb5 0b40 	(vcmp\.f64	d0, #0.0|fcmpzd	d0)
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> eeb5 0a40 	(vcmpeq\.f32	s0, #0.0|fcmpzseq	s0)
0[0-9a-f]+ <[^>]+> eeb5 0b40 	(vcmpeq\.f64	d0, #0.0|fcmpzdeq	d0)
0[0-9a-f]+ <[^>]+> eeb5 0ac0 	(vcmpe\.f32	s0, #0.0|fcmpezs	s0)
0[0-9a-f]+ <[^>]+> eeb5 0bc0 	(vcmpe\.f64	d0, #0.0|fcmpezd	d0)
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> eeb5 0ac0 	(vcmpeeq\.f32	s0, #0.0|fcmpezseq	s0)
0[0-9a-f]+ <[^>]+> eeb5 0bc0 	(vcmpeeq\.f64	d0, #0.0|fcmpezdeq	d0)
0[0-9a-f]+ <[^>]+> eebd 0ae0 	(vcvt\.s32\.f32|ftosizs)	s0, s1
0[0-9a-f]+ <[^>]+> eebc 0ae0 	(vcvt\.u32\.f32|ftouizs)	s0, s1
0[0-9a-f]+ <[^>]+> eebd 0bc1 	(vcvt\.s32\.f64|ftosizd)	s0, d1
0[0-9a-f]+ <[^>]+> eebc 0bc1 	(vcvt\.u32\.f64|ftouizd)	s0, d1
0[0-9a-f]+ <[^>]+> bf01      	itttt	eq
0[0-9a-f]+ <[^>]+> eebd 0ae0 	(vcvteq\.s32\.f32|ftosizseq)	s0, s1
0[0-9a-f]+ <[^>]+> eebc 0ae0 	(vcvteq\.u32\.f32|ftouizseq)	s0, s1
0[0-9a-f]+ <[^>]+> eebd 0bc1 	(vcvteq\.s32\.f64|ftosizdeq)	s0, d1
0[0-9a-f]+ <[^>]+> eebc 0bc1 	(vcvteq\.u32\.f64|ftouizdeq)	s0, d1
0[0-9a-f]+ <[^>]+> eebd 0ae0 	(vcvt\.s32\.f32|ftosis)	s0, s1
0[0-9a-f]+ <[^>]+> eebc 0ae0 	(vcvt\.u32\.f32|ftouis)	s0, s1
0[0-9a-f]+ <[^>]+> eeb8 0ae0 	(vcvt\.f32\.s32|fsitos)	s0, s1
0[0-9a-f]+ <[^>]+> eeb8 0a60 	(vcvt\.f32\.u32|fuitos)	s0, s1
0[0-9a-f]+ <[^>]+> eeb7 0bc1 	(vcvt\.f32\.f64|fcvtsd)	s0, d1
0[0-9a-f]+ <[^>]+> eeb7 0ae0 	(vcvt\.f64\.f32|fcvtds)	d0, s1
0[0-9a-f]+ <[^>]+> eebd 0bc1 	(vcvt\.s32\.f64|ftosid)	s0, d1
0[0-9a-f]+ <[^>]+> eebc 0bc1 	(vcvt\.u32\.f64|ftouid)	s0, d1
0[0-9a-f]+ <[^>]+> eeb8 0be0 	(vcvt\.f64\.s32|fsitod)	d0, s1
0[0-9a-f]+ <[^>]+> eeb8 0b60 	(vcvt\.f64\.u32|fuitod)	d0, s1
0[0-9a-f]+ <[^>]+> bf01      	itttt	eq
0[0-9a-f]+ <[^>]+> eebd 0ae0 	(vcvteq\.s32\.f32|ftosiseq)	s0, s1
0[0-9a-f]+ <[^>]+> eebc 0ae0 	(vcvteq\.u32\.f32|ftouiseq)	s0, s1
0[0-9a-f]+ <[^>]+> eeb8 0ae0 	(vcvteq\.f32\.s32|fsitoseq)	s0, s1
0[0-9a-f]+ <[^>]+> eeb8 0a60 	(vcvteq\.f32\.u32|fuitoseq)	s0, s1
0[0-9a-f]+ <[^>]+> bf01      	itttt	eq
0[0-9a-f]+ <[^>]+> eeb7 0bc1 	(vcvteq\.f32\.f64|fcvtsdeq)	s0, d1
0[0-9a-f]+ <[^>]+> eeb7 0ae0 	(vcvteq\.f64\.f32|fcvtdseq)	d0, s1
0[0-9a-f]+ <[^>]+> eebd 0bc1 	(vcvteq\.s32\.f64|ftosideq)	s0, d1
0[0-9a-f]+ <[^>]+> eebc 0bc1 	(vcvteq\.u32\.f64|ftouideq)	s0, d1
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> eeb8 0be0 	(vcvteq\.f64\.s32|fsitodeq)	d0, s1
0[0-9a-f]+ <[^>]+> eeb8 0b60 	(vcvteq\.f64\.u32|fuitodeq)	d0, s1
0[0-9a-f]+ <[^>]+> eebe 0aef 	(vcvt\.s32\.f32	s0, s0, #1|ftosls	s0, #1)
0[0-9a-f]+ <[^>]+> eebf 0aef 	(vcvt\.u32\.f32	s0, s0, #1|ftouls	s0, #1)
0[0-9a-f]+ <[^>]+> eeba 0aef 	(vcvt\.f32\.s32	s0, s0, #1|fsltos	s0, #1)
0[0-9a-f]+ <[^>]+> eebb 0aef 	(vcvt\.f32\.u32	s0, s0, #1|fultos	s0, #1)
0[0-9a-f]+ <[^>]+> eebe 0bef 	(vcvt\.s32\.f64	d0, d0, #1|ftosld	d0, #1)
0[0-9a-f]+ <[^>]+> eebf 0bef 	(vcvt\.u32\.f64	d0, d0, #1|ftould	d0, #1)
0[0-9a-f]+ <[^>]+> eeba 0bef 	(vcvt\.f64\.s32	d0, d0, #1|fsltod	d0, #1)
0[0-9a-f]+ <[^>]+> eebb 0bef 	(vcvt\.f64\.u32	d0, d0, #1|fultod	d0, #1)
0[0-9a-f]+ <[^>]+> eeba 0a67 	(vcvt\.f32\.s16	s0, s0, #1|fshtos	s0, #1)
0[0-9a-f]+ <[^>]+> eebb 0a67 	(vcvt\.f32\.u16	s0, s0, #1|fuhtos	s0, #1)
0[0-9a-f]+ <[^>]+> eeba 0b67 	(vcvt\.f64\.s16	d0, d0, #1|fshtod	d0, #1)
0[0-9a-f]+ <[^>]+> eebb 0b67 	(vcvt\.f64\.u16	d0, d0, #1|fuhtod	d0, #1)
0[0-9a-f]+ <[^>]+> eebe 0a67 	(vcvt\.s16\.f32	s0, s0, #1|ftoshs	s0, #1)
0[0-9a-f]+ <[^>]+> eebf 0a67 	(vcvt\.u16\.f32	s0, s0, #1|ftouhs	s0, #1)
0[0-9a-f]+ <[^>]+> eebe 0b67 	(vcvt\.s16\.f64	d0, d0, #1|ftoshd	d0, #1)
0[0-9a-f]+ <[^>]+> eebf 0b67 	(vcvt\.u16\.f64	d0, d0, #1|ftouhd	d0, #1)
0[0-9a-f]+ <[^>]+> bf01      	itttt	eq
0[0-9a-f]+ <[^>]+> eebe 0aef 	(vcvteq\.s32\.f32	s0, s0, #1|ftoslseq	s0, #1)
0[0-9a-f]+ <[^>]+> eebf 0aef 	(vcvteq\.u32\.f32	s0, s0, #1|ftoulseq	s0, #1)
0[0-9a-f]+ <[^>]+> eeba 0aef 	(vcvteq\.f32\.s32	s0, s0, #1|fsltoseq	s0, #1)
0[0-9a-f]+ <[^>]+> eebb 0aef 	(vcvteq\.f32\.u32	s0, s0, #1|fultoseq	s0, #1)
0[0-9a-f]+ <[^>]+> bf01      	itttt	eq
0[0-9a-f]+ <[^>]+> eebe 0bef 	(vcvteq\.s32\.f64	d0, d0, #1|ftosldeq	d0, #1)
0[0-9a-f]+ <[^>]+> eebf 0bef 	(vcvteq\.u32\.f64	d0, d0, #1|ftouldeq	d0, #1)
0[0-9a-f]+ <[^>]+> eeba 0bef 	(vcvteq\.f64\.s32	d0, d0, #1|fsltodeq	d0, #1)
0[0-9a-f]+ <[^>]+> eebb 0bef 	(vcvteq\.f64\.u32	d0, d0, #1|fultodeq	d0, #1)
0[0-9a-f]+ <[^>]+> bf01      	itttt	eq
0[0-9a-f]+ <[^>]+> eeba 0a67 	(vcvteq\.f32\.s16	s0, s0, #1|fshtoseq	s0, #1)
0[0-9a-f]+ <[^>]+> eebb 0a67 	(vcvteq\.f32\.u16	s0, s0, #1|fuhtoseq	s0, #1)
0[0-9a-f]+ <[^>]+> eeba 0b67 	(vcvteq\.f64\.s16	d0, d0, #1|fshtodeq	d0, #1)
0[0-9a-f]+ <[^>]+> eebb 0b67 	(vcvteq\.f64\.u16	d0, d0, #1|fuhtodeq	d0, #1)
0[0-9a-f]+ <[^>]+> bf01      	itttt	eq
0[0-9a-f]+ <[^>]+> eebe 0a67 	(vcvteq\.s16\.f32	s0, s0, #1|ftoshseq	s0, #1)
0[0-9a-f]+ <[^>]+> eebf 0a67 	(vcvteq\.u16\.f32	s0, s0, #1|ftouhseq	s0, #1)
0[0-9a-f]+ <[^>]+> eebe 0b67 	(vcvteq\.s16\.f64	d0, d0, #1|ftoshdeq	d0, #1)
0[0-9a-f]+ <[^>]+> eebf 0b67 	(vcvteq\.u16\.f64	d0, d0, #1|ftouhdeq	d0, #1)
0[0-9a-f]+ <[^>]+> ecd0 1a04 	(vldmia|fldmias)	r0, {s3-s6}
0[0-9a-f]+ <[^>]+> ecd0 1a04 	(vldmia|fldmias)	r0, {s3-s6}
0[0-9a-f]+ <[^>]+> ecf0 1a04 	(vldmia|fldmias)	r0!, {s3-s6}
0[0-9a-f]+ <[^>]+> ed70 1a04 	(vldmdb|fldmdbs)	r0!, {s3-s6}
0[0-9a-f]+ <[^>]+> ec90 3b08 	vldmia	r0, {d3-d6}
0[0-9a-f]+ <[^>]+> ec90 3b08 	vldmia	r0, {d3-d6}
0[0-9a-f]+ <[^>]+> ecb0 3b08 	vldmia	r0!, {d3-d6}
0[0-9a-f]+ <[^>]+> ed30 3b08 	vldmdb	r0!, {d3-d6}
0[0-9a-f]+ <[^>]+> bf01      	itttt	eq
0[0-9a-f]+ <[^>]+> ecd0 1a04 	(vldmiaeq|fldmiaseq)	r0, {s3-s6}
0[0-9a-f]+ <[^>]+> ecd0 1a04 	(vldmiaeq|fldmiaseq)	r0, {s3-s6}
0[0-9a-f]+ <[^>]+> ecf0 1a04 	(vldmiaeq|fldmiaseq)	r0!, {s3-s6}
0[0-9a-f]+ <[^>]+> ed70 1a04 	(vldmdbeq|fldmdbseq)	r0!, {s3-s6}
0[0-9a-f]+ <[^>]+> bf01      	itttt	eq
0[0-9a-f]+ <[^>]+> ec90 3b08 	vldmiaeq	r0, {d3-d6}
0[0-9a-f]+ <[^>]+> ec90 3b08 	vldmiaeq	r0, {d3-d6}
0[0-9a-f]+ <[^>]+> ecb0 3b08 	vldmiaeq	r0!, {d3-d6}
0[0-9a-f]+ <[^>]+> ed30 3b08 	vldmdbeq	r0!, {d3-d6}
0[0-9a-f]+ <[^>]+> ecc0 1a04 	(vstmia|fstmias)	r0, {s3-s6}
0[0-9a-f]+ <[^>]+> ecc0 1a04 	(vstmia|fstmias)	r0, {s3-s6}
0[0-9a-f]+ <[^>]+> ece0 1a04 	(vstmia|fstmias)	r0!, {s3-s6}
0[0-9a-f]+ <[^>]+> ed60 1a04 	(vstmdb|fstmdbs)	r0!, {s3-s6}
0[0-9a-f]+ <[^>]+> ec80 3b08 	vstmia	r0, {d3-d6}
0[0-9a-f]+ <[^>]+> ec80 3b08 	vstmia	r0, {d3-d6}
0[0-9a-f]+ <[^>]+> eca0 3b08 	vstmia	r0!, {d3-d6}
0[0-9a-f]+ <[^>]+> ed20 3b08 	vstmdb	r0!, {d3-d6}
0[0-9a-f]+ <[^>]+> bf01      	itttt	eq
0[0-9a-f]+ <[^>]+> ecc0 1a04 	(vstmiaeq|fstmiaseq)	r0, {s3-s6}
0[0-9a-f]+ <[^>]+> ecc0 1a04 	(vstmiaeq|fstmiaseq)	r0, {s3-s6}
0[0-9a-f]+ <[^>]+> ece0 1a04 	(vstmiaeq|fstmiaseq)	r0!, {s3-s6}
0[0-9a-f]+ <[^>]+> ed60 1a04 	(vstmdbeq|fstmdbseq)	r0!, {s3-s6}
0[0-9a-f]+ <[^>]+> bf01      	itttt	eq
0[0-9a-f]+ <[^>]+> ec80 3b08 	vstmiaeq	r0, {d3-d6}
0[0-9a-f]+ <[^>]+> ec80 3b08 	vstmiaeq	r0, {d3-d6}
0[0-9a-f]+ <[^>]+> eca0 3b08 	vstmiaeq	r0!, {d3-d6}
0[0-9a-f]+ <[^>]+> ed20 3b08 	vstmdbeq	r0!, {d3-d6}
0[0-9a-f]+ <[^>]+> ed90 0a01 	(vldr|flds)	s0, \[r0, #4\]
0[0-9a-f]+ <[^>]+> ed90 0b01 	vldr	d0, \[r0, #4\]
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> ed90 0a01 	(vldreq|fldseq)	s0, \[r0, #4\]
0[0-9a-f]+ <[^>]+> ed90 0b01 	vldreq	d0, \[r0, #4\]
0[0-9a-f]+ <[^>]+> ed80 0a01 	(vstr|fsts)	s0, \[r0, #4\]
0[0-9a-f]+ <[^>]+> ed80 0b01 	vstr	d0, \[r0, #4\]
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> ed80 0a01 	(vstreq|fstseq)	s0, \[r0, #4\]
0[0-9a-f]+ <[^>]+> ed80 0b01 	vstreq	d0, \[r0, #4\]
@


1.8
log
@2009-11-03  Paul Brook  <paul@@codesourcery.com>

	gas/
	* config/tc-arm.c (do_vfp_nsyn_mla_mls): Fix vmls excoding.

	gas/testsuite/
	* gas/arm/vfp-neon-syntax.d: Update expected results.
	* gas/arm/vfp-neon-syntax_t2.d: Update expected results.
@
text
@d115 2
a116 2
0[0-9a-f]+ <[^>]+> eebd 0a60 	(vcvtr\.s32\.f32|ftosis)	s0, s1
0[0-9a-f]+ <[^>]+> eebc 0a60 	(vcvtr\.u32\.f32|ftouis)	s0, s1
d121 2
a122 2
0[0-9a-f]+ <[^>]+> eebd 0b41 	(vcvtr\.s32\.f64|ftosid)	s0, d1
0[0-9a-f]+ <[^>]+> eebc 0b41 	(vcvtr\.u32\.f64|ftouid)	s0, d1
d126 2
a127 2
0[0-9a-f]+ <[^>]+> eebd 0a60 	(vcvtreq\.s32\.f32|ftosiseq)	s0, s1
0[0-9a-f]+ <[^>]+> eebc 0a60 	(vcvtreq\.u32\.f32|ftouiseq)	s0, s1
d133 2
a134 2
0[0-9a-f]+ <[^>]+> eebd 0b41 	(vcvtreq\.s32\.f64|ftosideq)	s0, d1
0[0-9a-f]+ <[^>]+> eebc 0b41 	(vcvtreq\.u32\.f64|ftouideq)	s0, d1
@


1.7
log
@2009-10-29  Paul Brook  <paul@@codesourcery.com>

	gas/
	* config/tc-arm.c (neon_tab_entry): Fix VNMLA/VNMLS opcodes.

	gas/testsuite/
	* gas/arm/vfp-neon-syntax.d: Update expected results.
	* gas/arm/vfp-neon-syntax_t2.d: Update expected results.
@
text
@d76 2
a77 2
0[0-9a-f]+ <[^>]+> ee10 0a81 	(vnmls\.f32|fmscs)	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee11 0b02 	(vnmls\.f64|fmscd)	d0, d1, d2
d79 2
a80 2
0[0-9a-f]+ <[^>]+> ee10 0a81 	(vnmlseq\.f32|fmscseq)	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee11 0b02 	(vnmlseq\.f64|fmscdeq)	d0, d1, d2
@


1.6
log
@        PR 10288
        * arm-dis.c (enum opcode_sentinels): New:  Used to mark the
        boundary between variaant and generic coprocessor instuctions.
        (coprocessor): Use it.
        Fix architecture version of MCRR and MRRC instructions.
        (arm_opcdes): Fix patterns for STRB and STRH instructions.
        (print_insn_coprocessor): Check architecture and extension masks.
        Print a hexadecimal version of any decimal constant that is
        outside of the range of -16 to +32.
        (print_arm_address): Add a return value of the offset used in the
        adress, if it is worth printing a hexadecimal version of it.
        (print_insn_neon): Print a hexadecimal version of any decimal
        constant that is outside of the range of -16 to +32.
        (print_insn_arm): Likewise.
        (print_insn_thumb16): Likewise.
        (print_insn_thumb32): Likewise.

        PR 10297
        * arm-dis.c (UNDEFINED_INSTRUCTION): New macro for a description
        of an undefined instruction.
        (arm_opcodes): Use it.
        (thumb_opcod): Use it.
        (thumb32_opc): Use it.

        Update expected disassembly regrexps in GAS and LD testsuites.
@
text
@d56 2
a57 2
0[0-9a-f]+ <[^>]+> ee00 0ac1 	(vmls\.f32|fnmacs)	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee01 0b42 	(vmls\.f64|fnmacd)	d0, d1, d2
d59 4
a62 4
0[0-9a-f]+ <[^>]+> ee00 0ac1 	(vmlseq\.f32|fnmacseq)	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee01 0b42 	(vmlseq\.f64|fnmacdeq)	d0, d1, d2
0[0-9a-f]+ <[^>]+> ee10 0ac1 	(vnmla\.f32|fnmscs)	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee11 0b42 	(vnmla\.f64|fnmscd)	d0, d1, d2
d64 2
a65 2
0[0-9a-f]+ <[^>]+> ee10 0ac1 	(vnmlaeq\.f32|fnmscseq)	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee11 0b42 	(vnmlaeq\.f64|fnmscdeq)	d0, d1, d2
@


1.5
log
@opcodes:
	* arm-dis.c (coprocessor_opcodes): Disassemble VFP instructions using
	unified syntax.
gas/testsuite:
	* gas/arm/group-reloc-ldc.d: Disassembly of VFP instructions now uses
	unified syntax.
	* gas/arm/vfp-non-overlap.d: Likewise.
	* gas/arm/vfp-neon-syntax.d: Likewise.
	* gas/arm/vfp-neon-syntax_t2.d: Likewise.
	* gas/arm/vfp1.d: Likewise.
	* gas/arm/vfp1_t2.d: Likewise.
	* gas/arm/vfp1xD.d: Likewise.
	* gas/arm/vfp1xD_t2.d: Likewise.
	* gas/arm/vfp2.d: Likewise.
	* gas/arm/vfp2_t2.d: Likewise.
	* gas/arm/vfpv3-32drs.d: Likewise.
	* gas/arm/vfpv3-const-conv.d: Likewise.
ld/testsuite:
	* ld-arm/vfp11-fix-scalar.d: Disassembly of VFP instructions now uses
	unified syntax.
	* ld-arm/vfp11-fix-vector.d: Likewise.
@
text
@d10 2
a11 2
0[0-9a-f]+ <[^>]+> eeb5 0a00 	(vmov\.f32|fconsts)	s0, #80
0[0-9a-f]+ <[^>]+> eeb7 0b00 	(vmov\.f64|fconstd)	d0, #112
d19 2
a20 2
0[0-9a-f]+ <[^>]+> eeb5 0a00 	(vmoveq\.f32|fconstseq)	s0, #80
0[0-9a-f]+ <[^>]+> eeb7 0b00 	(vmoveq\.f64|fconstdeq)	d0, #112
@


1.4
log
@2006-11-29  Paul Brook  <paul@@codesourcery.com>

	gas/
	* config/tc-arm.c (do_vfp_sp_const, do_vfp_dp_const): Fix operans
	encoding.

	gas/testsuite/
	* gas/arm/vfpv3-const-conv.s: Improve test coverage.
	* gas/arm/vfpv3-const-conv.d: Adjust expected output.
	* gas/arm/vfp-neon-syntax_t2.d: Ditto.
	* gas/arm/vfp-neon-syntax.d: Ditto.

	opcodes/
	* arm-dis.c (coprocessor_opcodes): Fix bitfields for fconstd/fconstd.
@
text
@d8 170
a177 170
0[0-9a-f]+ <[^>]+> eeb0 0a60 	fcpys	s0, s1
0[0-9a-f]+ <[^>]+> eeb0 0b41 	fcpyd	d0, d1
0[0-9a-f]+ <[^>]+> eeb5 0a00 	fconsts	s0, #80
0[0-9a-f]+ <[^>]+> eeb7 0b00 	fconstd	d0, #112
0[0-9a-f]+ <[^>]+> ee10 0a90 	fmrs	r0, s1
0[0-9a-f]+ <[^>]+> ee00 1a10 	fmsr	s0, r1
0[0-9a-f]+ <[^>]+> ec51 0a11 	fmrrs	r0, r1, {s2, s3}
0[0-9a-f]+ <[^>]+> ec44 2a10 	fmsrr	{s0, s1}, r2, r4
0[0-9a-f]+ <[^>]+> bf01      	itttt	eq
0[0-9a-f]+ <[^>]+> eeb0 0a60 	fcpyseq	s0, s1
0[0-9a-f]+ <[^>]+> eeb0 0b41 	fcpydeq	d0, d1
0[0-9a-f]+ <[^>]+> eeb5 0a00 	fconstseq	s0, #80
0[0-9a-f]+ <[^>]+> eeb7 0b00 	fconstdeq	d0, #112
0[0-9a-f]+ <[^>]+> bf01      	itttt	eq
0[0-9a-f]+ <[^>]+> ee10 0a90 	fmrseq	r0, s1
0[0-9a-f]+ <[^>]+> ee00 1a10 	fmsreq	s0, r1
0[0-9a-f]+ <[^>]+> ec51 0a11 	fmrrseq	r0, r1, {s2, s3}
0[0-9a-f]+ <[^>]+> ec44 2a10 	fmsrreq	{s0, s1}, r2, r4
0[0-9a-f]+ <[^>]+> eeb1 0ae0 	fsqrts	s0, s1
0[0-9a-f]+ <[^>]+> eeb1 0bc1 	fsqrtd	d0, d1
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> eeb1 0ae0 	fsqrtseq	s0, s1
0[0-9a-f]+ <[^>]+> eeb1 0bc1 	fsqrtdeq	d0, d1
0[0-9a-f]+ <[^>]+> eeb0 0ae0 	fabss	s0, s1
0[0-9a-f]+ <[^>]+> eeb0 0bc1 	fabsd	d0, d1
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> eeb0 0ae0 	fabsseq	s0, s1
0[0-9a-f]+ <[^>]+> eeb0 0bc1 	fabsdeq	d0, d1
0[0-9a-f]+ <[^>]+> eeb1 0a60 	fnegs	s0, s1
0[0-9a-f]+ <[^>]+> eeb1 0b41 	fnegd	d0, d1
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> eeb1 0a60 	fnegseq	s0, s1
0[0-9a-f]+ <[^>]+> eeb1 0b41 	fnegdeq	d0, d1
0[0-9a-f]+ <[^>]+> eeb4 0a60 	fcmps	s0, s1
0[0-9a-f]+ <[^>]+> eeb4 0b41 	fcmpd	d0, d1
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> eeb4 0a60 	fcmpseq	s0, s1
0[0-9a-f]+ <[^>]+> eeb4 0b41 	fcmpdeq	d0, d1
0[0-9a-f]+ <[^>]+> eeb4 0ae0 	fcmpes	s0, s1
0[0-9a-f]+ <[^>]+> eeb4 0bc1 	fcmped	d0, d1
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> eeb4 0ae0 	fcmpeseq	s0, s1
0[0-9a-f]+ <[^>]+> eeb4 0bc1 	fcmpedeq	d0, d1
0[0-9a-f]+ <[^>]+> ee20 0ac1 	fnmuls	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee21 0b42 	fnmuld	d0, d1, d2
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> ee20 0ac1 	fnmulseq	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee21 0b42 	fnmuldeq	d0, d1, d2
0[0-9a-f]+ <[^>]+> ee00 0ac1 	fnmacs	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee01 0b42 	fnmacd	d0, d1, d2
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> ee00 0ac1 	fnmacseq	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee01 0b42 	fnmacdeq	d0, d1, d2
0[0-9a-f]+ <[^>]+> ee10 0ac1 	fnmscs	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee11 0b42 	fnmscd	d0, d1, d2
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> ee10 0ac1 	fnmscseq	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee11 0b42 	fnmscdeq	d0, d1, d2
0[0-9a-f]+ <[^>]+> ee20 0a81 	fmuls	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee21 0b02 	fmuld	d0, d1, d2
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> ee20 0a81 	fmulseq	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee21 0b02 	fmuldeq	d0, d1, d2
0[0-9a-f]+ <[^>]+> ee00 0a81 	fmacs	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee01 0b02 	fmacd	d0, d1, d2
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> ee00 0a81 	fmacseq	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee01 0b02 	fmacdeq	d0, d1, d2
0[0-9a-f]+ <[^>]+> ee10 0a81 	fmscs	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee11 0b02 	fmscd	d0, d1, d2
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> ee10 0a81 	fmscseq	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee11 0b02 	fmscdeq	d0, d1, d2
0[0-9a-f]+ <[^>]+> ee30 0a81 	fadds	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee31 0b02 	faddd	d0, d1, d2
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> ee30 0a81 	faddseq	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee31 0b02 	fadddeq	d0, d1, d2
0[0-9a-f]+ <[^>]+> ee30 0ac1 	fsubs	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee31 0b42 	fsubd	d0, d1, d2
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> ee30 0ac1 	fsubseq	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee31 0b42 	fsubdeq	d0, d1, d2
0[0-9a-f]+ <[^>]+> ee80 0a81 	fdivs	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee81 0b02 	fdivd	d0, d1, d2
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> ee80 0a81 	fdivseq	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee81 0b02 	fdivdeq	d0, d1, d2
0[0-9a-f]+ <[^>]+> eeb5 0a40 	fcmpzs	s0
0[0-9a-f]+ <[^>]+> eeb5 0b40 	fcmpzd	d0
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> eeb5 0a40 	fcmpzseq	s0
0[0-9a-f]+ <[^>]+> eeb5 0b40 	fcmpzdeq	d0
0[0-9a-f]+ <[^>]+> eeb5 0ac0 	fcmpezs	s0
0[0-9a-f]+ <[^>]+> eeb5 0bc0 	fcmpezd	d0
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> eeb5 0ac0 	fcmpezseq	s0
0[0-9a-f]+ <[^>]+> eeb5 0bc0 	fcmpezdeq	d0
0[0-9a-f]+ <[^>]+> eebd 0ae0 	ftosizs	s0, s1
0[0-9a-f]+ <[^>]+> eebc 0ae0 	ftouizs	s0, s1
0[0-9a-f]+ <[^>]+> eebd 0bc1 	ftosizd	s0, d1
0[0-9a-f]+ <[^>]+> eebc 0bc1 	ftouizd	s0, d1
0[0-9a-f]+ <[^>]+> bf01      	itttt	eq
0[0-9a-f]+ <[^>]+> eebd 0ae0 	ftosizseq	s0, s1
0[0-9a-f]+ <[^>]+> eebc 0ae0 	ftouizseq	s0, s1
0[0-9a-f]+ <[^>]+> eebd 0bc1 	ftosizdeq	s0, d1
0[0-9a-f]+ <[^>]+> eebc 0bc1 	ftouizdeq	s0, d1
0[0-9a-f]+ <[^>]+> eebd 0a60 	ftosis	s0, s1
0[0-9a-f]+ <[^>]+> eebc 0a60 	ftouis	s0, s1
0[0-9a-f]+ <[^>]+> eeb8 0ae0 	fsitos	s0, s1
0[0-9a-f]+ <[^>]+> eeb8 0a60 	fuitos	s0, s1
0[0-9a-f]+ <[^>]+> eeb7 0bc1 	fcvtsd	s0, d1
0[0-9a-f]+ <[^>]+> eeb7 0ae0 	fcvtds	d0, s1
0[0-9a-f]+ <[^>]+> eebd 0b41 	ftosid	s0, d1
0[0-9a-f]+ <[^>]+> eebc 0b41 	ftouid	s0, d1
0[0-9a-f]+ <[^>]+> eeb8 0be0 	fsitod	d0, s1
0[0-9a-f]+ <[^>]+> eeb8 0b60 	fuitod	d0, s1
0[0-9a-f]+ <[^>]+> bf01      	itttt	eq
0[0-9a-f]+ <[^>]+> eebd 0a60 	ftosiseq	s0, s1
0[0-9a-f]+ <[^>]+> eebc 0a60 	ftouiseq	s0, s1
0[0-9a-f]+ <[^>]+> eeb8 0ae0 	fsitoseq	s0, s1
0[0-9a-f]+ <[^>]+> eeb8 0a60 	fuitoseq	s0, s1
0[0-9a-f]+ <[^>]+> bf01      	itttt	eq
0[0-9a-f]+ <[^>]+> eeb7 0bc1 	fcvtsdeq	s0, d1
0[0-9a-f]+ <[^>]+> eeb7 0ae0 	fcvtdseq	d0, s1
0[0-9a-f]+ <[^>]+> eebd 0b41 	ftosideq	s0, d1
0[0-9a-f]+ <[^>]+> eebc 0b41 	ftouideq	s0, d1
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> eeb8 0be0 	fsitodeq	d0, s1
0[0-9a-f]+ <[^>]+> eeb8 0b60 	fuitodeq	d0, s1
0[0-9a-f]+ <[^>]+> eebe 0aef 	ftosls	s0, #1
0[0-9a-f]+ <[^>]+> eebf 0aef 	ftouls	s0, #1
0[0-9a-f]+ <[^>]+> eeba 0aef 	fsltos	s0, #1
0[0-9a-f]+ <[^>]+> eebb 0aef 	fultos	s0, #1
0[0-9a-f]+ <[^>]+> eebe 0bef 	ftosld	d0, #1
0[0-9a-f]+ <[^>]+> eebf 0bef 	ftould	d0, #1
0[0-9a-f]+ <[^>]+> eeba 0bef 	fsltod	d0, #1
0[0-9a-f]+ <[^>]+> eebb 0bef 	fultod	d0, #1
0[0-9a-f]+ <[^>]+> eeba 0a67 	fshtos	s0, #1
0[0-9a-f]+ <[^>]+> eebb 0a67 	fuhtos	s0, #1
0[0-9a-f]+ <[^>]+> eeba 0b67 	fshtod	d0, #1
0[0-9a-f]+ <[^>]+> eebb 0b67 	fuhtod	d0, #1
0[0-9a-f]+ <[^>]+> eebe 0a67 	ftoshs	s0, #1
0[0-9a-f]+ <[^>]+> eebf 0a67 	ftouhs	s0, #1
0[0-9a-f]+ <[^>]+> eebe 0b67 	ftoshd	d0, #1
0[0-9a-f]+ <[^>]+> eebf 0b67 	ftouhd	d0, #1
0[0-9a-f]+ <[^>]+> bf01      	itttt	eq
0[0-9a-f]+ <[^>]+> eebe 0aef 	ftoslseq	s0, #1
0[0-9a-f]+ <[^>]+> eebf 0aef 	ftoulseq	s0, #1
0[0-9a-f]+ <[^>]+> eeba 0aef 	fsltoseq	s0, #1
0[0-9a-f]+ <[^>]+> eebb 0aef 	fultoseq	s0, #1
0[0-9a-f]+ <[^>]+> bf01      	itttt	eq
0[0-9a-f]+ <[^>]+> eebe 0bef 	ftosldeq	d0, #1
0[0-9a-f]+ <[^>]+> eebf 0bef 	ftouldeq	d0, #1
0[0-9a-f]+ <[^>]+> eeba 0bef 	fsltodeq	d0, #1
0[0-9a-f]+ <[^>]+> eebb 0bef 	fultodeq	d0, #1
0[0-9a-f]+ <[^>]+> bf01      	itttt	eq
0[0-9a-f]+ <[^>]+> eeba 0a67 	fshtoseq	s0, #1
0[0-9a-f]+ <[^>]+> eebb 0a67 	fuhtoseq	s0, #1
0[0-9a-f]+ <[^>]+> eeba 0b67 	fshtodeq	d0, #1
0[0-9a-f]+ <[^>]+> eebb 0b67 	fuhtodeq	d0, #1
0[0-9a-f]+ <[^>]+> bf01      	itttt	eq
0[0-9a-f]+ <[^>]+> eebe 0a67 	ftoshseq	s0, #1
0[0-9a-f]+ <[^>]+> eebf 0a67 	ftouhseq	s0, #1
0[0-9a-f]+ <[^>]+> eebe 0b67 	ftoshdeq	d0, #1
0[0-9a-f]+ <[^>]+> eebf 0b67 	ftouhdeq	d0, #1
0[0-9a-f]+ <[^>]+> ecd0 1a04 	fldmias	r0, {s3-s6}
0[0-9a-f]+ <[^>]+> ecd0 1a04 	fldmias	r0, {s3-s6}
0[0-9a-f]+ <[^>]+> ecf0 1a04 	fldmias	r0!, {s3-s6}
0[0-9a-f]+ <[^>]+> ed70 1a04 	fldmdbs	r0!, {s3-s6}
d183 4
a186 4
0[0-9a-f]+ <[^>]+> ecd0 1a04 	fldmiaseq	r0, {s3-s6}
0[0-9a-f]+ <[^>]+> ecd0 1a04 	fldmiaseq	r0, {s3-s6}
0[0-9a-f]+ <[^>]+> ecf0 1a04 	fldmiaseq	r0!, {s3-s6}
0[0-9a-f]+ <[^>]+> ed70 1a04 	fldmdbseq	r0!, {s3-s6}
d192 4
a195 4
0[0-9a-f]+ <[^>]+> ecc0 1a04 	fstmias	r0, {s3-s6}
0[0-9a-f]+ <[^>]+> ecc0 1a04 	fstmias	r0, {s3-s6}
0[0-9a-f]+ <[^>]+> ece0 1a04 	fstmias	r0!, {s3-s6}
0[0-9a-f]+ <[^>]+> ed60 1a04 	fstmdbs	r0!, {s3-s6}
d201 4
a204 4
0[0-9a-f]+ <[^>]+> ecc0 1a04 	fstmiaseq	r0, {s3-s6}
0[0-9a-f]+ <[^>]+> ecc0 1a04 	fstmiaseq	r0, {s3-s6}
0[0-9a-f]+ <[^>]+> ece0 1a04 	fstmiaseq	r0!, {s3-s6}
0[0-9a-f]+ <[^>]+> ed60 1a04 	fstmdbseq	r0!, {s3-s6}
d210 1
a210 1
0[0-9a-f]+ <[^>]+> ed90 0a01 	flds	s0, \[r0, #4\]
d213 1
a213 1
0[0-9a-f]+ <[^>]+> ed90 0a01 	fldseq	s0, \[r0, #4\]
d215 1
a215 1
0[0-9a-f]+ <[^>]+> ed80 0a01 	fsts	s0, \[r0, #4\]
d218 1
a218 1
0[0-9a-f]+ <[^>]+> ed80 0a01 	fstseq	s0, \[r0, #4\]
@


1.3
log
@    * gas/arm/vfp-neon-syntax.d: Tweak expected fmsrr syntax.
    * gas/arm/vfp-neon-syntax_t2.d: Likewise.
    * gas/arm/vfp2.d: Likewise.
    * gas/arm/vfp2_t2.d: Likewise.
@
text
@d10 2
a11 2
0[0-9a-f]+ <[^>]+> eeb0 0a05 	fconsts	s0, #80
0[0-9a-f]+ <[^>]+> eeb0 0b07 	fconstd	d0, #112
d19 2
a20 2
0[0-9a-f]+ <[^>]+> eeb0 0a05 	fconstseq	s0, #80
0[0-9a-f]+ <[^>]+> eeb0 0b07 	fconstdeq	d0, #112
@


1.2
log
@    * gas/arm/itblock.s: New file. Helper macro for making all-true IT
    blocks.
    * gas/arm/neon-cond-bad-inc.s: New test. Make sure unconditional
    Neon instructions are rejected...
    * gas/arm/neon-cond-bad.s: In ARM mode, and...
    * gas/arm/neon-cond-bad_t2.s: Accepted in Thumb mode (with IT).
    * gas/arm/neon-cond-bad.l: Expected error output in ARM mode.
    * gas/arm/neon-cond-bad.d: Control ARM mode test.
    * gas/arm/neon-cond-bad_t2.d: Expected output in Thumb mode.
    * gas/arm/vfp-neon-syntax-inc.s: Test VFP Neon-style syntax.
    * gas/arm/vfp-neon-syntax.s: ...in ARM mode.
    * gas/arm/vfp-neon-syntax_t2.s: ...and Thumb mode.
    * gas/arm/vfp-neon-syntax.d: Expected output in ARM mode.
    * gas/arm/vfp-neon-syntax_t2.d: Expected output in Thumb mode.
@
text
@d15 1
a15 1
0[0-9a-f]+ <[^>]+> ec44 2a10 	fmsrr	r2, r4, {s0, s1}
d25 1
a25 1
0[0-9a-f]+ <[^>]+> ec44 2a10 	fmsrreq	r2, r4, {s0, s1}
@


1.1
log
@file vfp-neon-syntax_t2.d was initially added on branch binutils-csl-2_17-branch.
@
text
@d1 219
@


1.1.2.1
log
@	* gas/config/tc-arm.c (stdarg.h): include.
	(arm_it): Add uncond_value field. Add isvec and issingle to operand
	array.
	(arm_reg_type): Add REG_TYPE_VFSD (single or double VFP reg) and
	REG_TYPE_NSDQ (single, double or quad vector reg).
	(reg_expected_msgs): Update.
	(BAD_FPU): Add macro for unsupported FPU instruction error.
	(parse_neon_type): Support 'd' as an alias for .f64.
	(parse_typed_reg_or_scalar): Support REG_TYPE_VFSD, REG_TYPE_NSDQ
	sets of registers.
	(parse_vfp_reg_list): Don't update first arg on error.
	(parse_neon_mov): Support extra syntax for VFP moves.
	(operand_parse_code): Add OP_RVSD, OP_RNSDQ, OP_VRSDLST, OP_RVSD_IO,
	OP_RNSDQ_RNSC, OP_RVC_PSR, OP_APSR_RR, OP_oRNSDQ.
	(parse_operands): Support isvec, issingle operands fields, new parse
	codes above.
	(do_vfp_nsyn_mrs, do_vfp_nsyn_msr): New functions. Support VFP mrs,
	msr variants.
	(do_mrs, do_msr, do_t_mrs, do_t_msr): Add support for above.
	(NEON_ENC_TAB): Add vnmul, vnmla, vnmls, vcmp, vcmpz, vcmpe, vcmpez.
	(NEON_ENC_SINGLE, NEON_ENC_DOUBLE): Define macros.
	(NEON_SHAPE_DEF): New macro. Define table of possible instruction
	shapes.
	(neon_shape): Redefine in terms of above.
	(neon_shape_class): New enumeration, table of shape classes.
	(neon_shape_el): New enumeration. One element of a shape.
	(neon_shape_el_size): Register widths of above, where appropriate.
	(neon_shape_info): New struct. Info for shape table.
	(neon_shape_tab): New array.
	(neon_type_mask): Add N_F64, N_VFP. Update N_MAX_NONSPECIAL.
	(neon_check_shape): Rewrite as...
	(neon_select_shape): New function to classify instruction shapes,
	driven by new table neon_shape_tab array.
	(neon_quad): New function. Return 1 if shape should set Q flag in
	instructions (or equivalent), 0 otherwise.
	(type_chk_of_el_type): Support F64.
	(el_type_of_type_chk): Likewise.
	(neon_check_type): Add support for VFP type checking (VFP data
	elements fill their containing registers).
	(do_vfp_cond_or_thumb): Fill in condition field in ARM mode, or 0xE
	in thumb mode for VFP instructions.
	(do_vfp_nsyn_opcode): New function. Look up the opcode in argument,
	and encode the current instruction as if it were that opcode.
	(try_vfp_nsyn): New. If this looks like a VFP instruction with ARGS
	arguments, call function in PFN.
	(do_vfp_nsyn_add_sub, do_vfp_nsyn_mla_mls, do_vfp_nsyn_mul)
	(do_vfp_nsyn_abs_neg, do_vfp_nsyn_ldm_stm, do_vfp_nsyn_ldr_str)
	(do_vfp_nsyn_sqrt, do_vfp_nsyn_div, do_vfp_nsyn_nmul)
	(do_vfp_nsyn_cmp, nsyn_insert_sp, do_vfp_nsyn_push)
	(do_vfp_nsyn_pop, do_vfp_nsyn_cvt, do_vfp_nsyn_cvtz): New functions.
	Redirect Neon-syntax VFP instructions to VFP instruction handlers.
	(do_neon_dyadic_i_su, do_neon_dyadic_i64_su, do_neon_shl_imm)
	(do_neon_qshl_imm, do_neon_logic, do_neon_bitfield)
	(neon_dyadic_misc, neon_compare, do_neon_tst, do_neon_qdmulh)
	(do_neon_fcmp_absolute, do_neon_step, do_neon_sli, do_neon_sri)
	(do_neon_qshlu_imm, neon_move_immediate, do_neon_mvn, do_neon_ext)
	(do_neon_rev, do_neon_dup, do_neon_rshift_round_imm, do_neon_trn)
	(do_neon_zip_uzp, do_neon_sat_abs_neg, do_neon_pair_long)
	(do_neon_recip_est, do_neon_cls, do_neon_clz, do_neon_cnt)
	(do_neon_swp): Use neon_select_shape not neon_check_shape. Use
	neon_quad.
	(vfp_or_neon_is_neon): New function. Call if a mnemonic shared
	between VFP and Neon turns out to belong to Neon. Perform
	architecture check and fill in condition field if appropriate.
	(do_neon_addsub_if_i, do_neon_mac_maybe_scalar, do_neon_abs_neg)
	(do_neon_cvt): Add support for VFP variants of instructions.
	(neon_cvt_flavour): Extend to cover VFP conversions.
	(do_neon_mov): Rewrite to use neon_select_shape. Add support for VFP
	vmov variants.
	(do_neon_ldr_str): Handle single-precision VFP load/store.
	(do_neon_ld_st_interleave, do_neon_ld_st_lane, do_neon_ld_dup): Use
	NS_NULL not NS_IGNORE.
	(opcode_tag): Add OT_csuffixF for operands which either take a
	conditional suffix, or have 0xF in the condition field.
	(md_assemble): Add support for OT_csuffixF.
	(NCE): Replace macro with...
	(NCE_tag, NCE, NCEF): New macros.
	(nCE): Replace macro with...
	(nCE_tag, nCE, nCEF): New macros.
	(insns): Add support for VFP insns or VFP versions of insns msr, mrs,
	vsqrt, vdiv, vnmul, vnmla, vnmls, vcmp, vcmpe, vpush, vpop, vcvtz,
	vmul, vmla, vmls, vadd, vsub, vabs, vneg, vldm, vldmia, vldbdb, vstm,
	vstmia, vstmdb, vldr, vstr, vcvt, vmov. Group shared VFP/Neon insns
	together.

	* gas/testsuite/gas/arm/itblock.s: New file. Helper macro for making
	all-true IT blocks.
	* gas/testsuite/gas/arm/neon-cond-bad-inc.s: New test. Make sure
	unconditional Neon instructions are rejected...
	* gas/testsuite/gas/arm/neon-cond-bad.s: In ARM mode, and...
	* gas/testsuite/gas/arm/neon-cond-bad_t2.s: Accepted in Thumb mode
	(with IT).
	* gas/testsuite/gas/arm/neon-cond-bad.l: Expected error output in ARM
	mode.
	* gas/testsuite/gas/arm/neon-cond-bad.d: Control ARM mode test.
	* gas/testsuite/gas/arm/neon-cond-bad_t2.d: Expected output in Thumb
	mode.
	* gas/testsuite/gas/arm/vfp-neon-syntax-inc.s: Test VFP Neon-style
	syntax.
	* gas/testsuite/gas/arm/vfp-neon-syntax.s: ...in ARM mode.
	* gas/testsuite/gas/arm/vfp-neon-syntax_t2.s: ...and Thumb mode.
	* gas/testsuite/gas/arm/vfp-neon-syntax.d: Expected output in ARM mode.
	* gas/testsuite/gas/arm/vfp-neon-syntax_t2.d: Expected output in Thumb
	mode.
@
text
@a0 219
# name: VFP Neon-style syntax, Thumb mode
# as: -mfpu=vfp3 -I$srcdir/$subdir
# objdump: -dr --prefix-addresses --show-raw-insn

.*: +file format .*arm.*

Disassembly of section \.text:
0[0-9a-f]+ <[^>]+> eeb0 0a60 	fcpys	s0, s1
0[0-9a-f]+ <[^>]+> eeb0 0b41 	fcpyd	d0, d1
0[0-9a-f]+ <[^>]+> eeb0 0a05 	fconsts	s0, #80
0[0-9a-f]+ <[^>]+> eeb0 0b07 	fconstd	d0, #112
0[0-9a-f]+ <[^>]+> ee10 0a90 	fmrs	r0, s1
0[0-9a-f]+ <[^>]+> ee00 1a10 	fmsr	s0, r1
0[0-9a-f]+ <[^>]+> ec51 0a11 	fmrrs	r0, r1, {s2, s3}
0[0-9a-f]+ <[^>]+> ec44 2a10 	fmsrr	r2, r4, {s0, s1}
0[0-9a-f]+ <[^>]+> bf01      	itttt	eq
0[0-9a-f]+ <[^>]+> eeb0 0a60 	fcpyseq	s0, s1
0[0-9a-f]+ <[^>]+> eeb0 0b41 	fcpydeq	d0, d1
0[0-9a-f]+ <[^>]+> eeb0 0a05 	fconstseq	s0, #80
0[0-9a-f]+ <[^>]+> eeb0 0b07 	fconstdeq	d0, #112
0[0-9a-f]+ <[^>]+> bf01      	itttt	eq
0[0-9a-f]+ <[^>]+> ee10 0a90 	fmrseq	r0, s1
0[0-9a-f]+ <[^>]+> ee00 1a10 	fmsreq	s0, r1
0[0-9a-f]+ <[^>]+> ec51 0a11 	fmrrseq	r0, r1, {s2, s3}
0[0-9a-f]+ <[^>]+> ec44 2a10 	fmsrreq	r2, r4, {s0, s1}
0[0-9a-f]+ <[^>]+> eeb1 0ae0 	fsqrts	s0, s1
0[0-9a-f]+ <[^>]+> eeb1 0bc1 	fsqrtd	d0, d1
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> eeb1 0ae0 	fsqrtseq	s0, s1
0[0-9a-f]+ <[^>]+> eeb1 0bc1 	fsqrtdeq	d0, d1
0[0-9a-f]+ <[^>]+> eeb0 0ae0 	fabss	s0, s1
0[0-9a-f]+ <[^>]+> eeb0 0bc1 	fabsd	d0, d1
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> eeb0 0ae0 	fabsseq	s0, s1
0[0-9a-f]+ <[^>]+> eeb0 0bc1 	fabsdeq	d0, d1
0[0-9a-f]+ <[^>]+> eeb1 0a60 	fnegs	s0, s1
0[0-9a-f]+ <[^>]+> eeb1 0b41 	fnegd	d0, d1
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> eeb1 0a60 	fnegseq	s0, s1
0[0-9a-f]+ <[^>]+> eeb1 0b41 	fnegdeq	d0, d1
0[0-9a-f]+ <[^>]+> eeb4 0a60 	fcmps	s0, s1
0[0-9a-f]+ <[^>]+> eeb4 0b41 	fcmpd	d0, d1
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> eeb4 0a60 	fcmpseq	s0, s1
0[0-9a-f]+ <[^>]+> eeb4 0b41 	fcmpdeq	d0, d1
0[0-9a-f]+ <[^>]+> eeb4 0ae0 	fcmpes	s0, s1
0[0-9a-f]+ <[^>]+> eeb4 0bc1 	fcmped	d0, d1
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> eeb4 0ae0 	fcmpeseq	s0, s1
0[0-9a-f]+ <[^>]+> eeb4 0bc1 	fcmpedeq	d0, d1
0[0-9a-f]+ <[^>]+> ee20 0ac1 	fnmuls	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee21 0b42 	fnmuld	d0, d1, d2
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> ee20 0ac1 	fnmulseq	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee21 0b42 	fnmuldeq	d0, d1, d2
0[0-9a-f]+ <[^>]+> ee00 0ac1 	fnmacs	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee01 0b42 	fnmacd	d0, d1, d2
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> ee00 0ac1 	fnmacseq	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee01 0b42 	fnmacdeq	d0, d1, d2
0[0-9a-f]+ <[^>]+> ee10 0ac1 	fnmscs	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee11 0b42 	fnmscd	d0, d1, d2
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> ee10 0ac1 	fnmscseq	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee11 0b42 	fnmscdeq	d0, d1, d2
0[0-9a-f]+ <[^>]+> ee20 0a81 	fmuls	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee21 0b02 	fmuld	d0, d1, d2
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> ee20 0a81 	fmulseq	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee21 0b02 	fmuldeq	d0, d1, d2
0[0-9a-f]+ <[^>]+> ee00 0a81 	fmacs	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee01 0b02 	fmacd	d0, d1, d2
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> ee00 0a81 	fmacseq	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee01 0b02 	fmacdeq	d0, d1, d2
0[0-9a-f]+ <[^>]+> ee10 0a81 	fmscs	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee11 0b02 	fmscd	d0, d1, d2
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> ee10 0a81 	fmscseq	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee11 0b02 	fmscdeq	d0, d1, d2
0[0-9a-f]+ <[^>]+> ee30 0a81 	fadds	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee31 0b02 	faddd	d0, d1, d2
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> ee30 0a81 	faddseq	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee31 0b02 	fadddeq	d0, d1, d2
0[0-9a-f]+ <[^>]+> ee30 0ac1 	fsubs	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee31 0b42 	fsubd	d0, d1, d2
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> ee30 0ac1 	fsubseq	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee31 0b42 	fsubdeq	d0, d1, d2
0[0-9a-f]+ <[^>]+> ee80 0a81 	fdivs	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee81 0b02 	fdivd	d0, d1, d2
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> ee80 0a81 	fdivseq	s0, s1, s2
0[0-9a-f]+ <[^>]+> ee81 0b02 	fdivdeq	d0, d1, d2
0[0-9a-f]+ <[^>]+> eeb5 0a40 	fcmpzs	s0
0[0-9a-f]+ <[^>]+> eeb5 0b40 	fcmpzd	d0
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> eeb5 0a40 	fcmpzseq	s0
0[0-9a-f]+ <[^>]+> eeb5 0b40 	fcmpzdeq	d0
0[0-9a-f]+ <[^>]+> eeb5 0ac0 	fcmpezs	s0
0[0-9a-f]+ <[^>]+> eeb5 0bc0 	fcmpezd	d0
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> eeb5 0ac0 	fcmpezseq	s0
0[0-9a-f]+ <[^>]+> eeb5 0bc0 	fcmpezdeq	d0
0[0-9a-f]+ <[^>]+> eebd 0ae0 	ftosizs	s0, s1
0[0-9a-f]+ <[^>]+> eebc 0ae0 	ftouizs	s0, s1
0[0-9a-f]+ <[^>]+> eebd 0bc1 	ftosizd	s0, d1
0[0-9a-f]+ <[^>]+> eebc 0bc1 	ftouizd	s0, d1
0[0-9a-f]+ <[^>]+> bf01      	itttt	eq
0[0-9a-f]+ <[^>]+> eebd 0ae0 	ftosizseq	s0, s1
0[0-9a-f]+ <[^>]+> eebc 0ae0 	ftouizseq	s0, s1
0[0-9a-f]+ <[^>]+> eebd 0bc1 	ftosizdeq	s0, d1
0[0-9a-f]+ <[^>]+> eebc 0bc1 	ftouizdeq	s0, d1
0[0-9a-f]+ <[^>]+> eebd 0a60 	ftosis	s0, s1
0[0-9a-f]+ <[^>]+> eebc 0a60 	ftouis	s0, s1
0[0-9a-f]+ <[^>]+> eeb8 0ae0 	fsitos	s0, s1
0[0-9a-f]+ <[^>]+> eeb8 0a60 	fuitos	s0, s1
0[0-9a-f]+ <[^>]+> eeb7 0bc1 	fcvtsd	s0, d1
0[0-9a-f]+ <[^>]+> eeb7 0ae0 	fcvtds	d0, s1
0[0-9a-f]+ <[^>]+> eebd 0b41 	ftosid	s0, d1
0[0-9a-f]+ <[^>]+> eebc 0b41 	ftouid	s0, d1
0[0-9a-f]+ <[^>]+> eeb8 0be0 	fsitod	d0, s1
0[0-9a-f]+ <[^>]+> eeb8 0b60 	fuitod	d0, s1
0[0-9a-f]+ <[^>]+> bf01      	itttt	eq
0[0-9a-f]+ <[^>]+> eebd 0a60 	ftosiseq	s0, s1
0[0-9a-f]+ <[^>]+> eebc 0a60 	ftouiseq	s0, s1
0[0-9a-f]+ <[^>]+> eeb8 0ae0 	fsitoseq	s0, s1
0[0-9a-f]+ <[^>]+> eeb8 0a60 	fuitoseq	s0, s1
0[0-9a-f]+ <[^>]+> bf01      	itttt	eq
0[0-9a-f]+ <[^>]+> eeb7 0bc1 	fcvtsdeq	s0, d1
0[0-9a-f]+ <[^>]+> eeb7 0ae0 	fcvtdseq	d0, s1
0[0-9a-f]+ <[^>]+> eebd 0b41 	ftosideq	s0, d1
0[0-9a-f]+ <[^>]+> eebc 0b41 	ftouideq	s0, d1
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> eeb8 0be0 	fsitodeq	d0, s1
0[0-9a-f]+ <[^>]+> eeb8 0b60 	fuitodeq	d0, s1
0[0-9a-f]+ <[^>]+> eebe 0aef 	ftosls	s0, #1
0[0-9a-f]+ <[^>]+> eebf 0aef 	ftouls	s0, #1
0[0-9a-f]+ <[^>]+> eeba 0aef 	fsltos	s0, #1
0[0-9a-f]+ <[^>]+> eebb 0aef 	fultos	s0, #1
0[0-9a-f]+ <[^>]+> eebe 0bef 	ftosld	d0, #1
0[0-9a-f]+ <[^>]+> eebf 0bef 	ftould	d0, #1
0[0-9a-f]+ <[^>]+> eeba 0bef 	fsltod	d0, #1
0[0-9a-f]+ <[^>]+> eebb 0bef 	fultod	d0, #1
0[0-9a-f]+ <[^>]+> eeba 0a67 	fshtos	s0, #1
0[0-9a-f]+ <[^>]+> eebb 0a67 	fuhtos	s0, #1
0[0-9a-f]+ <[^>]+> eeba 0b67 	fshtod	d0, #1
0[0-9a-f]+ <[^>]+> eebb 0b67 	fuhtod	d0, #1
0[0-9a-f]+ <[^>]+> eebe 0a67 	ftoshs	s0, #1
0[0-9a-f]+ <[^>]+> eebf 0a67 	ftouhs	s0, #1
0[0-9a-f]+ <[^>]+> eebe 0b67 	ftoshd	d0, #1
0[0-9a-f]+ <[^>]+> eebf 0b67 	ftouhd	d0, #1
0[0-9a-f]+ <[^>]+> bf01      	itttt	eq
0[0-9a-f]+ <[^>]+> eebe 0aef 	ftoslseq	s0, #1
0[0-9a-f]+ <[^>]+> eebf 0aef 	ftoulseq	s0, #1
0[0-9a-f]+ <[^>]+> eeba 0aef 	fsltoseq	s0, #1
0[0-9a-f]+ <[^>]+> eebb 0aef 	fultoseq	s0, #1
0[0-9a-f]+ <[^>]+> bf01      	itttt	eq
0[0-9a-f]+ <[^>]+> eebe 0bef 	ftosldeq	d0, #1
0[0-9a-f]+ <[^>]+> eebf 0bef 	ftouldeq	d0, #1
0[0-9a-f]+ <[^>]+> eeba 0bef 	fsltodeq	d0, #1
0[0-9a-f]+ <[^>]+> eebb 0bef 	fultodeq	d0, #1
0[0-9a-f]+ <[^>]+> bf01      	itttt	eq
0[0-9a-f]+ <[^>]+> eeba 0a67 	fshtoseq	s0, #1
0[0-9a-f]+ <[^>]+> eebb 0a67 	fuhtoseq	s0, #1
0[0-9a-f]+ <[^>]+> eeba 0b67 	fshtodeq	d0, #1
0[0-9a-f]+ <[^>]+> eebb 0b67 	fuhtodeq	d0, #1
0[0-9a-f]+ <[^>]+> bf01      	itttt	eq
0[0-9a-f]+ <[^>]+> eebe 0a67 	ftoshseq	s0, #1
0[0-9a-f]+ <[^>]+> eebf 0a67 	ftouhseq	s0, #1
0[0-9a-f]+ <[^>]+> eebe 0b67 	ftoshdeq	d0, #1
0[0-9a-f]+ <[^>]+> eebf 0b67 	ftouhdeq	d0, #1
0[0-9a-f]+ <[^>]+> ecd0 1a04 	fldmias	r0, {s3-s6}
0[0-9a-f]+ <[^>]+> ecd0 1a04 	fldmias	r0, {s3-s6}
0[0-9a-f]+ <[^>]+> ecf0 1a04 	fldmias	r0!, {s3-s6}
0[0-9a-f]+ <[^>]+> ed70 1a04 	fldmdbs	r0!, {s3-s6}
0[0-9a-f]+ <[^>]+> ec90 3b08 	vldmia	r0, {d3-d6}
0[0-9a-f]+ <[^>]+> ec90 3b08 	vldmia	r0, {d3-d6}
0[0-9a-f]+ <[^>]+> ecb0 3b08 	vldmia	r0!, {d3-d6}
0[0-9a-f]+ <[^>]+> ed30 3b08 	vldmdb	r0!, {d3-d6}
0[0-9a-f]+ <[^>]+> bf01      	itttt	eq
0[0-9a-f]+ <[^>]+> ecd0 1a04 	fldmiaseq	r0, {s3-s6}
0[0-9a-f]+ <[^>]+> ecd0 1a04 	fldmiaseq	r0, {s3-s6}
0[0-9a-f]+ <[^>]+> ecf0 1a04 	fldmiaseq	r0!, {s3-s6}
0[0-9a-f]+ <[^>]+> ed70 1a04 	fldmdbseq	r0!, {s3-s6}
0[0-9a-f]+ <[^>]+> bf01      	itttt	eq
0[0-9a-f]+ <[^>]+> ec90 3b08 	vldmiaeq	r0, {d3-d6}
0[0-9a-f]+ <[^>]+> ec90 3b08 	vldmiaeq	r0, {d3-d6}
0[0-9a-f]+ <[^>]+> ecb0 3b08 	vldmiaeq	r0!, {d3-d6}
0[0-9a-f]+ <[^>]+> ed30 3b08 	vldmdbeq	r0!, {d3-d6}
0[0-9a-f]+ <[^>]+> ecc0 1a04 	fstmias	r0, {s3-s6}
0[0-9a-f]+ <[^>]+> ecc0 1a04 	fstmias	r0, {s3-s6}
0[0-9a-f]+ <[^>]+> ece0 1a04 	fstmias	r0!, {s3-s6}
0[0-9a-f]+ <[^>]+> ed60 1a04 	fstmdbs	r0!, {s3-s6}
0[0-9a-f]+ <[^>]+> ec80 3b08 	vstmia	r0, {d3-d6}
0[0-9a-f]+ <[^>]+> ec80 3b08 	vstmia	r0, {d3-d6}
0[0-9a-f]+ <[^>]+> eca0 3b08 	vstmia	r0!, {d3-d6}
0[0-9a-f]+ <[^>]+> ed20 3b08 	vstmdb	r0!, {d3-d6}
0[0-9a-f]+ <[^>]+> bf01      	itttt	eq
0[0-9a-f]+ <[^>]+> ecc0 1a04 	fstmiaseq	r0, {s3-s6}
0[0-9a-f]+ <[^>]+> ecc0 1a04 	fstmiaseq	r0, {s3-s6}
0[0-9a-f]+ <[^>]+> ece0 1a04 	fstmiaseq	r0!, {s3-s6}
0[0-9a-f]+ <[^>]+> ed60 1a04 	fstmdbseq	r0!, {s3-s6}
0[0-9a-f]+ <[^>]+> bf01      	itttt	eq
0[0-9a-f]+ <[^>]+> ec80 3b08 	vstmiaeq	r0, {d3-d6}
0[0-9a-f]+ <[^>]+> ec80 3b08 	vstmiaeq	r0, {d3-d6}
0[0-9a-f]+ <[^>]+> eca0 3b08 	vstmiaeq	r0!, {d3-d6}
0[0-9a-f]+ <[^>]+> ed20 3b08 	vstmdbeq	r0!, {d3-d6}
0[0-9a-f]+ <[^>]+> ed90 0a01 	flds	s0, \[r0, #4\]
0[0-9a-f]+ <[^>]+> ed90 0b01 	vldr	d0, \[r0, #4\]
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> ed90 0a01 	fldseq	s0, \[r0, #4\]
0[0-9a-f]+ <[^>]+> ed90 0b01 	vldreq	d0, \[r0, #4\]
0[0-9a-f]+ <[^>]+> ed80 0a01 	fsts	s0, \[r0, #4\]
0[0-9a-f]+ <[^>]+> ed80 0b01 	vstr	d0, \[r0, #4\]
0[0-9a-f]+ <[^>]+> bf04      	itt	eq
0[0-9a-f]+ <[^>]+> ed80 0a01 	fstseq	s0, \[r0, #4\]
0[0-9a-f]+ <[^>]+> ed80 0b01 	vstreq	d0, \[r0, #4\]
@


1.1.2.2
log
@	Backport from mainline.

	opcodes/
	* arm-dis.c (coprocessor): Alter fmsrr disassembly syntax.

	gas/testsuite/
	* gas/arm/vfp-neon-syntax.d: Tweak expected fmsrr syntax.
	* gas/arm/vfp-neon-syntax_t2.d: Likewise.
	* gas/arm/vfp2.d: Likewise.
	* gas/arm/vfp2_t2.d: Likewise.
@
text
@d15 1
a15 1
0[0-9a-f]+ <[^>]+> ec44 2a10 	fmsrr	{s0, s1}, r2, r4
d25 1
a25 1
0[0-9a-f]+ <[^>]+> ec44 2a10 	fmsrreq	{s0, s1}, r2, r4
@


1.1.2.3
log
@2006-10-25  Paul Brook  <paul@@codesourcery.com>

	gas/
	* config/tc-arm.c (do_vfp_sp_const, do_vfp_dp_const): Fix operans
	encoding.

	gas/testsuite/
	* gas/arm/vfpv3-const-conv.s: Improve test coverage.
	* gas/arm/vfpv3-const-conv.d: Adjust expected output.
	* gas/arm/vfp-neon-syntax_t2.d: Ditto.
	* gas/arm/vfp-neon-syntax.d: Ditto.

	opcodes/
	* arm-dis.c (coprocessor_opcodes): Fix bitfields for fconstd/fconstd.
@
text
@d10 2
a11 2
0[0-9a-f]+ <[^>]+> eeb5 0a00 	fconsts	s0, #80
0[0-9a-f]+ <[^>]+> eeb7 0b00 	fconstd	d0, #112
d19 2
a20 2
0[0-9a-f]+ <[^>]+> eeb5 0a00 	fconstseq	s0, #80
0[0-9a-f]+ <[^>]+> eeb7 0b00 	fconstdeq	d0, #112
@


