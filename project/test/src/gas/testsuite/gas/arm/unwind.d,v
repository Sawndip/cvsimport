head	1.11;
access;
symbols
	binutils-2_24-branch:1.11.0.22
	binutils-2_24-branchpoint:1.11
	binutils-2_21_1:1.11
	binutils-2_23_2:1.11
	binutils-2_23_1:1.11
	binutils-2_23:1.11
	binutils-2_23-branch:1.11.0.20
	binutils-2_23-branchpoint:1.11
	binutils-2_22_branch:1.11.0.18
	binutils-2_22:1.11
	binutils-2_22-branch:1.11.0.16
	binutils-2_22-branchpoint:1.11
	binutils-2_21:1.11
	binutils-2_21-branch:1.11.0.14
	binutils-2_21-branchpoint:1.11
	binutils-2_20_1:1.11
	binutils-2_20:1.11
	binutils-arc-20081103-branch:1.11.0.12
	binutils-arc-20081103-branchpoint:1.11
	binutils-2_20-branch:1.11.0.10
	binutils-2_20-branchpoint:1.11
	dje-cgen-play1-branch:1.11.0.8
	dje-cgen-play1-branchpoint:1.11
	arc-20081103-branch:1.11.0.6
	arc-20081103-branchpoint:1.11
	binutils-2_19_1:1.11
	binutils-2_19:1.11
	binutils-2_19-branch:1.11.0.4
	binutils-2_19-branchpoint:1.11
	binutils-2_18:1.11
	binutils-2_18-branch:1.11.0.2
	binutils-2_18-branchpoint:1.11
	binutils-csl-coldfire-4_1-32:1.9.2.2
	binutils-csl-sourcerygxx-4_1-32:1.9.2.2
	binutils-csl-innovasic-fido-3_4_4-33:1.9.2.2
	binutils-csl-sourcerygxx-3_4_4-32:1.5
	binutils-csl-coldfire-4_1-30:1.9.2.2
	binutils-csl-sourcerygxx-4_1-30:1.9.2.2
	binutils-csl-coldfire-4_1-28:1.9.2.2
	binutils-csl-sourcerygxx-4_1-29:1.9.2.2
	binutils-csl-sourcerygxx-4_1-28:1.9.2.2
	binutils-csl-arm-2006q3-27:1.9.2.2
	binutils-csl-sourcerygxx-4_1-27:1.9.2.2
	binutils-csl-arm-2006q3-26:1.9.2.2
	binutils-csl-sourcerygxx-4_1-26:1.9.2.2
	binutils-csl-sourcerygxx-4_1-25:1.9.2.2
	binutils-csl-sourcerygxx-4_1-24:1.9.2.2
	binutils-csl-sourcerygxx-4_1-23:1.9.2.2
	binutils-csl-sourcerygxx-4_1-21:1.9.2.2
	binutils-csl-arm-2006q3-21:1.9.2.2
	binutils-csl-sourcerygxx-4_1-22:1.9.2.2
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.9.2.2
	binutils-csl-sourcerygxx-4_1-20:1.9.2.1
	binutils-csl-arm-2006q3-19:1.9.2.1
	binutils-csl-sourcerygxx-4_1-19:1.9.2.1
	binutils-csl-sourcerygxx-4_1-18:1.9.2.1
	binutils-csl-renesas-4_1-9:1.9.2.1
	binutils-csl-sourcerygxx-3_4_4-25:1.5
	binutils-csl-renesas-4_1-8:1.9
	binutils-csl-renesas-4_1-7:1.9
	binutils-csl-renesas-4_1-6:1.9
	binutils-csl-sourcerygxx-4_1-17:1.9
	binutils-csl-sourcerygxx-4_1-14:1.9
	binutils-csl-sourcerygxx-4_1-15:1.9
	binutils-csl-sourcerygxx-4_1-13:1.9
	binutils-2_17:1.9
	binutils-csl-sourcerygxx-4_1-12:1.9
	binutils-csl-sourcerygxx-3_4_4-21:1.9
	binutils-csl-wrs-linux-3_4_4-24:1.5.4.1
	binutils-csl-wrs-linux-3_4_4-23:1.5.4.1
	binutils-csl-sourcerygxx-4_1-9:1.9
	binutils-csl-sourcerygxx-4_1-8:1.9
	binutils-csl-sourcerygxx-4_1-7:1.9
	binutils-csl-arm-2006q1-6:1.9
	binutils-csl-sourcerygxx-4_1-6:1.9
	binutils-csl-wrs-linux-3_4_4-22:1.5.4.1
	binutils-csl-coldfire-4_1-11:1.9
	binutils-csl-sourcerygxx-3_4_4-19:1.9
	binutils-csl-coldfire-4_1-10:1.9
	binutils-csl-sourcerygxx-4_1-5:1.9
	binutils-csl-sourcerygxx-4_1-4:1.9
	binutils-csl-wrs-linux-3_4_4-21:1.5.4.1
	binutils-csl-morpho-4_1-4:1.9
	binutils-csl-sourcerygxx-3_4_4-17:1.9
	binutils-csl-wrs-linux-3_4_4-20:1.5.4.1
	binutils-2_17-branch:1.9.0.4
	binutils-2_17-branchpoint:1.9
	binutils-csl-2_17-branch:1.9.0.2
	binutils-csl-2_17-branchpoint:1.9
	binutils-csl-gxxpro-3_4-branch:1.5.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.5
	binutils-2_16_1:1.5
	binutils-csl-arm-2005q1b:1.5.4.1
	binutils-2_16:1.5
	binutils-csl-arm-2005q1a:1.5.4.1
	binutils-csl-arm-2005q1-branch:1.5.0.4
	binutils-csl-arm-2005q1-branchpoint:1.5
	binutils-2_16-branch:1.5.0.2
	binutils-2_16-branchpoint:1.5
	csl-arm-2004-q3d:1.1
	binutils_latest_snapshot:1.11;
locks; strict;
comment	@# @;


1.11
date	2006.09.16.16.24.28;	author pbrook;	state Exp;
branches;
next	1.10;

1.10
date	2006.08.21.11.41.24;	author jsm28;	state Exp;
branches;
next	1.9;

1.9
date	2005.11.15.14.29.58;	author drow;	state Exp;
branches
	1.9.2.1;
next	1.8;

1.8
date	2005.10.08.17.07.16;	author pbrook;	state Exp;
branches;
next	1.7;

1.7
date	2005.07.04.14.55.52;	author pbrook;	state Exp;
branches;
next	1.6;

1.6
date	2005.03.29.16.29.09;	author jules;	state Exp;
branches;
next	1.5;

1.5
date	2005.03.04.15.28.36;	author nickc;	state Exp;
branches
	1.5.4.1;
next	1.4;

1.4
date	2005.02.10.12.39.17;	author jules;	state Exp;
branches;
next	1.3;

1.3
date	2004.12.09.20.25.24;	author pbrook;	state Exp;
branches;
next	1.2;

1.2
date	2004.11.17.17.50.24;	author drow;	state Exp;
branches;
next	1.1;

1.1
date	2004.10.05.13.51.40;	author nickc;	state Exp;
branches;
next	;

1.9.2.1
date	2006.08.19.16.27.35;	author jsm28;	state Exp;
branches;
next	1.9.2.2;

1.9.2.2
date	2006.09.16.16.28.05;	author pbrook;	state Exp;
branches;
next	;

1.5.4.1
date	2005.03.29.16.38.00;	author jules;	state Exp;
branches;
next	;


desc
@@


1.11
log
@2006-09-16  Paul Brook  <paul@@codesourcery.com>

	gas/
	* config/tc-arm.c (s_arm_unwind_movsp): Add offset argument.
	* doc/c-arm.texi (movsp): Document offset argument.

	gas/testsuite/
	* gas/arm/unwind.s: Test two argument form of .movsp.
	* gas/arm/unwind.d: Update expected output.
	* gas/arm/unwind_vxworks.d: Ditto.
@
text
@#objdump: -sr
#name: Unwind table generation
# This test is only valid on ELF based ports.
#not-target: *-*-*coff *-*-pe *-*-wince *-*-*aout* *-*-netbsd *-*-riscix*
# VxWorks needs a special variant of this file.
#skip: *-*-vxworks*

.*:     file format.*

RELOCATION RECORDS FOR \[.ARM.extab\]:
OFFSET   TYPE              VALUE 
0000000c R_ARM_PREL31      .text


RELOCATION RECORDS FOR \[.ARM.exidx\]:
OFFSET   TYPE              VALUE 
00000000 R_ARM_PREL31      .text
00000000 R_ARM_NONE        __aeabi_unwind_cpp_pr0
00000008 R_ARM_PREL31      .text.*
00000008 R_ARM_NONE        __aeabi_unwind_cpp_pr1
0000000c R_ARM_PREL31      .ARM.extab
00000010 R_ARM_PREL31      .text.*
00000014 R_ARM_PREL31      .ARM.extab.*
00000018 R_ARM_PREL31      .text.*
0000001c R_ARM_PREL31      .ARM.extab.*
00000020 R_ARM_PREL31      .text.*
00000028 R_ARM_PREL31      .text.*
00000030 R_ARM_PREL31      .text.*
00000034 R_ARM_PREL31      .ARM.extab.*


Contents of section .text:
 0000 (0000a0e3 0100a0e3 0200a0e3 0300a0e3|e3a00000 e3a00001 e3a00002 e3a00003)  .*
 0010 (04200520 0600a0e3|20052004 e3a00006)                    .*
Contents of section .ARM.extab:
 0000 (449b0181 b0b08086|81019b44 8680b0b0) 00000000 00000000  .*
 0010 (8402b101 b0b0b005 2a000000 00c60281|01b10284 05b0b0b0 0000002a 8102c600)  .*
 0020 (d0c6c1c1 b0b0c0c6|c1c1c6d0 c6c0b0b0) 00000000 (429b0181|81019b42)  .*
 0030 (b0008086|868000b0) 00000000                    .*
Contents of section .ARM.exidx:
 0000 00000000 (b0b0a880 04000000|80a8b0b0 00000004) 00000000  .*
 0010 (08000000 0c000000 0c000000 1c000000|00000008 0000000c 0000000c 0000001c)  .*
 0020 (10000000 08849780 12000000 b00fb180|00000010 80978408 00000012 80b10fb0)  .*
 0030 (14000000 2c000000|00000014 0000002c)                    .*
# Ignore .ARM.attributes section
#...
@


1.10
log
@gas:
	* config/tc-arm.c (s_arm_unwind_save_mmxwr): Correct condition for
	merging with previous long opcode.

gas/testsuite:
	* gas/arm/unwind.s: Test not merging iWMMXt register save with
	previous long opcode.
	* gas/arm/unwind.d, gas/arm/unwind_vxworks.d: Update.
@
text
@d28 2
d34 1
a34 1
 0010 (04200520|20052004)                             .*
d38 2
a39 1
 0020 (d0c6c1c1 b0b0c0c6|c1c1c6d0 c6c0b0b0) 00000000           .*
d44 1
@


1.9
log
@gas/
	* config/tc-arm.c (s_arm_unwind_save_core): Don't emit an extra
	opcode if r4-r15 are not saved.
gas/testsuite/
	* gas/arm/unwind.s, gas/arm/unwind.d, gas/arm/unwind_vxworks.d: Add
	a test for saving only the low registers.
@
text
@d35 2
a36 2
 0010 (8402b101 b0b0b005 2a000000 00c60181|01b10284 05b0b0b0 0000002a 8101c600)  .*
 0020 (b0b0c1c1|c1c1b0b0) 00000000                    .*
@


1.9.2.1
log
@	gas/
	* config/tc-arm.c (s_arm_unwind_save_mmxwr): Correct condition for
	merging with previous long opcode.

	gas/testsuite/
	* gas/arm/unwind.s: Test not merging iWMMXt register save with
	previous long opcode.
	* gas/arm/unwind.d, gas/arm/unwind_vxworks.d: Update.
@
text
@d35 2
a36 2
 0010 (8402b101 b0b0b005 2a000000 00c60281|01b10284 05b0b0b0 0000002a 8102c600)  .*
 0020 (d0c6c1c1 b0b0c0c6|c1c1c6d0 c6c0b0b0) 00000000           .*
@


1.9.2.2
log
@2006-09-16  Paul Brook  <paul@@codesourcery.com>

	gas/testsuite/
	* gas/arm/unwind.s: Test two argument form of .movsp.
	* gas/arm/unwind.d: Update expected output.
	* gas/arm/unwind_vxworks.d: Ditto.
@
text
@a27 2
00000030 R_ARM_PREL31      .text.*
00000034 R_ARM_PREL31      .ARM.extab.*
d32 1
a32 1
 0010 (04200520 0600a0e3|20052004 e3a00006)                    .*
d36 1
a36 2
 0020 (d0c6c1c1 b0b0c0c6|c1c1c6d0 c6c0b0b0) 00000000 (429b0181|81019b42)  .*
 0030 (b0008086|868000b0) 00000000                    .*
a40 1
 0030 (14000000 2c000000|00000014 0000002c)                    .*
@


1.8
log
@2005-10-08  Paul Brook  <paul@@codesourcery.com>

bfd/
	* elf32-arm.c: Move #include "elf/arm.h" after libbfd.h.
	(NUM_KNOWN_ATTRIBUTES): Define.
	(aeabi_attribute, aeabi_attribute_list): Define.
	(elf32_arm_obj_tdata): Add known_eabi_attributes and
	other_eabi_attributes.
	(uleb128_size, is_default_attr, eabi_attr_size,
	elf32_arm_eabi_attr_size, write_uleb128, write_eabi_attribute,
	elf32_arm_set_eabi_attr_contents, elf32_arm_bfd_final_link,
	elf32_arm_new_eabi_attr, attr_strdup, elf32_arm_add_eabi_attr_int,
	elf32_arm_add_eabi_attr_compat, copy_eabi_attributes,
	elf32_arm_merge_eabi_attributes): New functions.
	(elf32_arm_copy_private_bfd_data): Copy EABI object attributes.
	(elf32_arm_fake_sections): Handle .ARM.attributes.
	(elf32_arm_parse_attributes): New function.
	(elf32_arm_section_from_shdr): Use it.
	(bfd_elf32_bfd_final_link): Define.
gas/
	* config/tc-arm.c: Don't provide fallback default for CPU_DEFAULT.
	(arm_arch_used, thumb_arch_used, selected_cpu, selected_cpu_name):
	New variables.
	(arm_cpu_option_table): Add canonical_name.
	(arm_cpus): Populate canonical_name field.
	(s_arm_eabi_attribute, s_arm_arch, s_arm_cpu, s_arm_fpu,
	aeabi_set_public_attributes, arm_md_end): New functions.
	(md_pseudo_table): Add "cpu", "arch", "fpu" and "eabi_attribute".
	(md_assemble): Set thumb_arch_used and arm_arch_used.
	(md_begin): Set defaut cpu if CPU_DEFAULT not defined.
	* config/tc-arm.h (md_end): Define.
	* doc/c-arm.texi: Document .cpu, .arch, .fpu and .eabi_attribute.
gas/testsuite/
	* gas/arm/eabi_attr_1.s: New test.
	* gas/arm/eabi_attr_1.d: New test.
	* gas/arm/arm7t.d: Only disassemble code sections.
	* gas/arm/bignum1.d: Ignore Arm object attribute sections.
	* gas/arm/mapping.d: Ditto.
	* gas/arm/unwind.d: Ditto.
	* gas/elf/section0.d: Ditto.
	* gas/elf/section1.d: Ditto.
	* gas/elf/elf.exp: Set target_machine for Arm EABI based targets.
	* gas/elf/section2.e-armeabi: New file.
include/elf/
	* arm.h: Add prototypes for BFD object attribute routines.
ld/testsuite/
	* ld-arm/arm-rel31.d: Ignore Arm object attribute sections.
	* ld-arm/arm-target1-abs.d: Ditto.
	* ld-arm/arm-target1-rel.d: Ditto.
	* ld-arm/arm-target2-abs.d: Ditto.
	* ld-arm/arm-target2-got-rel.d: Ditto.
	* ld-arm/arm-target2-rel.d: Ditto.
@
text
@d27 1
d32 1
a32 1
 0010 (0420|2004)                                 .*
d40 1
a40 1
 0020 (10000000 08849780|00000010 80978408)                    .*
@


1.7
log
@2005-07-04  Zack Weinberg  <zack@@codesourcery.com>

	* lib/gas-defs.exp (run_dump_tests): New proc.
	(run_dump_test): Add support for new options: target, not-target,
	skip, not-skip, error-output.  Document stderr.  Tidy a
	little.
	(slurp_options): If a line doesn't match the option regexp, but
	does begin with #, ignore it; don't stop parsing options.
	* gas/arm/arm.exp: Remove most code.  Use run_dump_tests.

	* gas/arm/archv6t2-bad.d, gas/arm/armv1.d, gas/arm/iwmmxt-bad.d
	* gas/arm/r15-bad.d, gas/arm/req.d, gas/arm/t16-bad.d
	* gas/arm/undefined.d, gas/arm/undefined_coff.d, gas/arm/vfp-bad.d:
	New files.
	* gas/arm/bignum1.d, gas/arm/mapping.d, gas/arm/pic.d:
	Only run on ELF targets.
	* gas/arm/tls.d, gas/arm/unwind.d: Only run on ELF targets.
	Skip on VxWorks.
	* gas/arm/tls_vxworks.d, gas/arm/unwind_vxworks.d: New files.
	* gas/arm/thumb.d, gas/arm/thumb32.d: Don't run on aout or pe.
	* gas/arm/le-fpconst.d: Only run on *-*-pe.
	* gas/arm/inst.d: Skip on WinCE.
	* gas/arm/wince_inst.d: Skip unless WinCE.
	* gas/arm/el_segundo.d: Mark up for actual use; adjust
	expectations.
	* gas/arm/el_segundo.s: Remove irrelevant junk.  Add padding
	for a.out's sake.
@
text
@d40 2
@


1.6
log
@	* gas/config/tc-arm.c (marked_pr_dependency): New bitmap, bit N
	indicates whether personality routine index N has been output for this
	section.
	(mapping_state): tc_segment_info_data now struct not enum.
	(arm_elf_change_section): Likewise, and marked_pr_dependency is now
	handled on section change.
	(create_unwind_entry): Previous code to output dependency removed.
	(s_arm_unwind_fnend): Output dependency if it hasn't been done already
	for this section.
	* gas/config/tc-arm.h (TC_SEGMENT_INFO_TYPE): Redefined as struct
	arm_segment_info_type.
	(arm_segment_info_type): New struct.
	* gas/testsuite/gas/arm/unwind.d: Update expected output.
@
text
@d3 4
@


1.5
log
@Fix unexpected failrues for arm toolchains
@
text
@a7 1
00000000 R_ARM_NONE        __aeabi_unwind_cpp_pr1
a8 2
0000000c R_ARM_NONE        __aeabi_unwind_cpp_pr0
0000001c R_ARM_NONE        __aeabi_unwind_cpp_pr1
d14 1
d16 1
@


1.5.4.1
log
@	* gas/config/tc-arm.c (marked_pr_dependency): New bitmap, bit N
	indicates whether personality routine index N has been output for this
	section.
	(mapping_state): tc_segment_info_data now struct not enum.
	(arm_elf_change_section): Likewise, and marked_pr_dependency is now
	handled on section change.
	(create_unwind_entry): Previous code to output dependency removed.
	(s_arm_unwind_fnend): Output dependency if it hasn't been done already
	for this section.
	* gas/config/tc-arm.h (TC_SEGMENT_INFO_TYPE): Redefined as struct
	arm_segment_info_type.
	(arm_segment_info_type): New struct.
	* gas/testsuite/gas/arm/unwind.d: Update expected output.
@
text
@d8 1
d10 2
a16 1
00000000 R_ARM_NONE        __aeabi_unwind_cpp_pr0
a17 1
00000008 R_ARM_NONE        __aeabi_unwind_cpp_pr1
@


1.4
log
@	* config/tc-arm.c (do_t_ldmstm): Change BFD_RELOC_NONE to
	BFD_RELOC_UNUSED.
	(do_t_push_pop): Likewise.
	(md_assemble): Likewise.
	(md_apply_fix3): Handle BFD_RELOC_NONE correctly, make BFD_RELOC_UNUSED
	same as previous meaning of BFD_RELOC_NONE.
	(create_unwind_entry): Output dependency on the required personality
	routines.
	testsuite/gas/arm/unwind.d: Alter expected output to include dependency
	on __aeabi_unwind_cpp_pr[01].
@
text
@d17 1
a17 1
00000008 R_ARM_PREL31      .text
d19 5
a23 5
00000010 R_ARM_PREL31      .text
00000014 R_ARM_PREL31      .ARM.extab
00000018 R_ARM_PREL31      .text
0000001c R_ARM_PREL31      .ARM.extab
00000020 R_ARM_PREL31      .text
@


1.3
log
@	* config/tc-arm.c (s_arm_unwind_fnend): Use R_ARM_PREL31 relocation
	for function start.
	* testsuite/gas/arm/unwind.d: Expect R_ARM_PREL31 relocations.
@
text
@d8 1
d10 2
@


1.2
log
@bfd/
	* elf32-arm.c (PLT_THUMB_STUB_SIZE): Define.
	(elf32_arm_plt_thumb_stub): New.
	(struct elf32_arm_link_hash_entry): Add plt_thumb_refcount
	and plt_got_offset.
	(elf32_arm_link_hash_traverse): Fix typo.
	(elf32_arm_link_hash_table): Add obfd.
	(elf32_arm_link_hash_newfunc): Initialize new fields.
	(elf32_arm_copy_indirect_symbol): Copy plt_thumb_refcount.
	(elf32_arm_link_hash_table_create): Initialize obfd.
	(record_arm_to_thumb_glue): Mark the glue as a local ARM function.
	(record_thumb_to_arm_glue): Mark the glue as a local Thumb function.
	(bfd_elf32_arm_get_bfd_for_interworking): Verify that the
	interworking BFD is not dynamic.
	(bfd_elf32_arm_process_before_allocation): Handle R_ARM_PLT32.  Do
	not emit glue for PLT references.
	(elf32_arm_final_link_relocate): Handle Thumb functions.  Do not
	emit glue for PLT references.  Support the Thumb PLT prefix.
	(elf32_arm_gc_sweep_hook): Handle R_ARM_THM_PC22 and
	plt_thumb_refcount.
	(elf32_arm_check_relocs): Likewise.
	(elf32_arm_adjust_dynamic_symbol): Handle Thumb functions and
	plt_thumb_refcount.
	(allocate_dynrelocs): Handle Thumb PLT references.
	(elf32_arm_finish_dynamic_symbol): Likewise.
	(elf32_arm_symbol_processing): New function.
	(elf_backend_symbol_processing): Define.
opcodes/
	* arm-dis.c (WORD_ADDRESS): Define.
	(print_insn): Use it.  Correct big-endian end-of-section handling.
gas/testsuite/
	* gas/arm/mapping.d: Expect F markers for Thumb code.
	* gas/arm/unwind.d: Update big-endian pattern.
ld/
	* emultempl/armelf.em (arm_elf_set_bfd_for_interworking): Don't use
	a dynamic object for stubs.
ld/testsuite/
	* ld-arm/mixed-app.d, ld-arm/mixed-app.r, ld-arm/mixed-app.s,
	ld-arm/mixed-app.sym, ld-arm/mixed-lib.d, ld-arm/mixed-lib.r,
	ld-arm/mixed-lib.s, ld-arm/mixed-lib.sym, ld-arm/arm-dyn.ld,
	ld-arm/arm-lib.ld: New files.
	* ld-arm/arm-app-abs32.d, ld-arm/arm-app-abs32.r, ld-arm/arm-app.d,
	ld-arm/arm-app.r, ld-arm/arm-lib-plt32.d, ld-arm/arm-lib-plt32.r,
	ld-arm/arm-lib.d, ld-arm/arm-lib.r, ld-arm/arm-static-app.d,
	ld-arm/arm-static-app.r: Update for big-endian.
	* ld-arm/arm-elf.exp: Run the new tests.
@
text
@d13 2
a14 2
00000000 R_ARM_REL32       .text
00000008 R_ARM_REL32       .text
d16 1
a16 1
00000010 R_ARM_REL32       .text
d18 1
a18 1
00000018 R_ARM_REL32       .text
d20 1
a20 1
00000020 R_ARM_REL32       .text
@


1.1
log
@Add support for generating ARM unwind tables.
@
text
@d24 1
a24 1
 0000 (0000a0e3 0100a0e3 0200a0e3 0300a0e3|e3a00000 a0e30001 e3a00002 e3a00003)  .*
d28 1
a28 1
 0010 (8402b101 b0b0b005 2a000000 00c60181|01b10284 05b0b0b0 000000a2 8101c600)  .*
d33 1
a33 1
 0020 (10000000 08849780|00000010 80978480)                    .*
@

