head	1.18;
access;
symbols
	binutils-2_24-branch:1.18.0.10
	binutils-2_24-branchpoint:1.18
	binutils-2_21_1:1.18
	binutils-2_23_2:1.18
	binutils-2_23_1:1.18
	binutils-2_23:1.18
	binutils-2_23-branch:1.18.0.8
	binutils-2_23-branchpoint:1.18
	binutils-2_22_branch:1.18.0.6
	binutils-2_22:1.18
	binutils-2_22-branch:1.18.0.4
	binutils-2_22-branchpoint:1.18
	binutils-2_21:1.18
	binutils-2_21-branch:1.18.0.2
	binutils-2_21-branchpoint:1.18
	binutils-2_20_1:1.16
	binutils-2_20:1.16
	binutils-arc-20081103-branch:1.15.0.10
	binutils-arc-20081103-branchpoint:1.15
	binutils-2_20-branch:1.16.0.2
	binutils-2_20-branchpoint:1.16
	dje-cgen-play1-branch:1.15.0.8
	dje-cgen-play1-branchpoint:1.15
	arc-20081103-branch:1.15.0.6
	arc-20081103-branchpoint:1.15
	binutils-2_19_1:1.15
	binutils-2_19:1.15
	binutils-2_19-branch:1.15.0.4
	binutils-2_19-branchpoint:1.15
	binutils-2_18:1.15
	binutils-2_18-branch:1.15.0.2
	binutils-2_18-branchpoint:1.15
	binutils-csl-coldfire-4_1-32:1.12
	binutils-csl-sourcerygxx-4_1-32:1.12
	binutils-csl-innovasic-fido-3_4_4-33:1.12
	binutils-csl-sourcerygxx-3_4_4-32:1.11
	binutils-csl-coldfire-4_1-30:1.12
	binutils-csl-sourcerygxx-4_1-30:1.12
	binutils-csl-coldfire-4_1-28:1.12
	binutils-csl-sourcerygxx-4_1-29:1.12
	binutils-csl-sourcerygxx-4_1-28:1.12
	binutils-csl-arm-2006q3-27:1.12
	binutils-csl-sourcerygxx-4_1-27:1.12
	binutils-csl-arm-2006q3-26:1.12
	binutils-csl-sourcerygxx-4_1-26:1.12
	binutils-csl-sourcerygxx-4_1-25:1.12
	binutils-csl-sourcerygxx-4_1-24:1.12
	binutils-csl-sourcerygxx-4_1-23:1.12
	binutils-csl-sourcerygxx-4_1-21:1.12
	binutils-csl-arm-2006q3-21:1.12
	binutils-csl-sourcerygxx-4_1-22:1.12
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.12
	binutils-csl-sourcerygxx-4_1-20:1.12
	binutils-csl-arm-2006q3-19:1.12
	binutils-csl-sourcerygxx-4_1-19:1.12
	binutils-csl-sourcerygxx-4_1-18:1.12
	binutils-csl-renesas-4_1-9:1.12
	binutils-csl-sourcerygxx-3_4_4-25:1.11
	binutils-csl-renesas-4_1-8:1.12
	binutils-csl-renesas-4_1-7:1.12
	binutils-csl-renesas-4_1-6:1.12
	binutils-csl-sourcerygxx-4_1-17:1.12
	binutils-csl-sourcerygxx-4_1-14:1.12
	binutils-csl-sourcerygxx-4_1-15:1.12
	binutils-csl-sourcerygxx-4_1-13:1.12
	binutils-2_17:1.12
	binutils-csl-sourcerygxx-4_1-12:1.12
	binutils-csl-sourcerygxx-3_4_4-21:1.12
	binutils-csl-wrs-linux-3_4_4-24:1.11
	binutils-csl-wrs-linux-3_4_4-23:1.11
	binutils-csl-sourcerygxx-4_1-9:1.12
	binutils-csl-sourcerygxx-4_1-8:1.12
	binutils-csl-sourcerygxx-4_1-7:1.12
	binutils-csl-arm-2006q1-6:1.12
	binutils-csl-sourcerygxx-4_1-6:1.12
	binutils-csl-wrs-linux-3_4_4-22:1.11
	binutils-csl-coldfire-4_1-11:1.12
	binutils-csl-sourcerygxx-3_4_4-19:1.12
	binutils-csl-coldfire-4_1-10:1.12
	binutils-csl-sourcerygxx-4_1-5:1.12
	binutils-csl-sourcerygxx-4_1-4:1.12
	binutils-csl-wrs-linux-3_4_4-21:1.11
	binutils-csl-morpho-4_1-4:1.12
	binutils-csl-sourcerygxx-3_4_4-17:1.12
	binutils-csl-wrs-linux-3_4_4-20:1.11
	binutils-2_17-branch:1.12.0.4
	binutils-2_17-branchpoint:1.12
	binutils-csl-2_17-branch:1.12.0.2
	binutils-csl-2_17-branchpoint:1.12
	binutils-csl-gxxpro-3_4-branch:1.11.0.12
	binutils-csl-gxxpro-3_4-branchpoint:1.11
	binutils-2_16_1:1.11
	binutils-csl-arm-2005q1b:1.11
	binutils-2_16:1.11
	binutils-csl-arm-2005q1a:1.11
	binutils-csl-arm-2005q1-branch:1.11.0.10
	binutils-csl-arm-2005q1-branchpoint:1.11
	binutils-2_16-branch:1.11.0.8
	binutils-2_16-branchpoint:1.11
	csl-arm-2004-q3d:1.11
	csl-arm-2004-q3:1.11
	binutils-2_15:1.11
	binutils-2_15-branchpoint:1.11
	csl-arm-2004-q1a:1.11
	csl-arm-2004-q1:1.11
	binutils-2_15-branch:1.11.0.6
	cagney_bfdfile-20040213-branch:1.11.0.4
	cagney_bfdfile-20040213-branchpoint:1.11
	cagney_bigcore-20040122-branch:1.11.0.2
	cagney_bigcore-20040122-branchpoint:1.11
	csl-arm-2003-q4:1.11
	binutils-2_14:1.9
	binutils-2_14-branch:1.9.0.2
	binutils-2_14-branchpoint:1.9
	binutils-2_13_2_1:1.8
	binutils-2_13_2:1.8
	binutils-2_13_1:1.8
	binutils-2_13:1.8
	binutils-2_13-branchpoint:1.8
	binutils-2_13-branch:1.8.0.2
	binutils-2_12_1:1.6
	binutils-2_12:1.6
	binutils-2_12-branch:1.6.0.2
	binutils-2_12-branchpoint:1.6
	cygnus_cvs_20020108_pre:1.6
	binutils-2_11_2:1.4.4.1
	binutils-2_11_1:1.4.4.1
	binutils-2_11:1.4
	x86_64versiong3:1.4
	binutils-2_11-branch:1.4.0.4
	binutils-2_10_1:1.4
	binutils-2_10:1.4
	binutils-2_10-branch:1.4.0.2
	binutils-2_10-branchpoint:1.4
	binutils_latest_snapshot:1.18
	repo-unification-2000-02-06:1.4
	binu_ss_19990721:1.2
	binu_ss_19990602:1.1.1.1
	binu_ss_19990502:1.1.1.1
	cygnus:1.1.1;
locks; strict;
comment	@# @;


1.18
date	2009.11.19.14.07.11;	author nickc;	state Exp;
branches;
next	1.17;

1.17
date	2009.11.17.17.20.25;	author nickc;	state Exp;
branches;
next	1.16;

1.16
date	2009.06.30.11.57.05;	author nickc;	state Exp;
branches;
next	1.15;

1.15
date	2007.04.21.19.45.05;	author rearnsha;	state Exp;
branches;
next	1.14;

1.14
date	2007.02.28.14.39.15;	author nickc;	state Exp;
branches;
next	1.13;

1.13
date	2006.11.22.17.45.56;	author drow;	state Exp;
branches;
next	1.12;

1.12
date	2005.10.08.17.07.16;	author pbrook;	state Exp;
branches;
next	1.11;

1.11
date	2003.11.14.15.12.43;	author nickc;	state Exp;
branches;
next	1.10;

1.10
date	2003.11.03.14.47.37;	author drow;	state Exp;
branches;
next	1.9;

1.9
date	2002.08.22.16.10.04;	author nickc;	state Exp;
branches;
next	1.8;

1.8
date	2002.05.20.17.05.35;	author nickc;	state Exp;
branches;
next	1.7;

1.7
date	2002.05.02.09.11.14;	author nickc;	state Exp;
branches;
next	1.6;

1.6
date	2001.07.16.19.06.09;	author pb;	state Exp;
branches;
next	1.5;

1.5
date	2001.05.24.20.02.15;	author hjl;	state Exp;
branches;
next	1.4;

1.4
date	99.11.01.17.10.27;	author nickc;	state Exp;
branches
	1.4.4.1;
next	1.3;

1.3
date	99.10.21.10.44.39;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	99.06.04.07.12.40;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	99.05.03.07.28.48;	author rth;	state Exp;
branches
	1.1.1.1;
next	;

1.4.4.1
date	2001.06.11.10.04.56;	author amodra;	state Exp;
branches;
next	1.4.4.2;

1.4.4.2
date	2001.07.16.21.44.14;	author pb;	state Exp;
branches;
next	;

1.1.1.1
date	99.05.03.07.28.48;	author rth;	state Exp;
branches;
next	;


desc
@@


1.18
log
@        PR binutils/10924
        * gas/arm/arch4t-eabi.d: Restore previous expected dissambly of
        instructions using Immediate Offset addressing with an offset of
        zero.
        * gas/arm/arch4t.d: Likewise.
        * gas/arm/arm7t.d: Likewise.
        * gas/arm/xscale.d: Likewise.
        * gas/arm/wince-inst.d: Remove 'p' suffix from cmp, cmn, teq and
        tst instructions.

        PR binutils/10924
        * arm-dis.c (print_insn_arm): Do not print an offset of zero when
        decoding Immediaate Offset addressing.
@
text
@#objdump: -dr --prefix-addresses --show-raw-insn
#name: ARM arm7t
#as: -mcpu=arm7t -EL

# Test the halfword and signextend memory transfers:

.*: +file format .*arm.*

Disassembly of section .text:
0+00 <[^>]*> e1d100b0 ?	ldrh	r0, \[r1\]
0+04 <[^>]*> e1f100b0 ?	ldrh	r0, \[r1, #0\]!
0+08 <[^>]*> e19100b2 ?	ldrh	r0, \[r1, r2\]
0+0c <[^>]*> e1b100b2 ?	ldrh	r0, \[r1, r2\]!
0+10 <[^>]*> e1d100bc ?	ldrh	r0, \[r1, #12\]
0+14 <[^>]*> e1f100bc ?	ldrh	r0, \[r1, #12\]!
0+18 <[^>]*> e15100bc ?	ldrh	r0, \[r1, #-12\]
0+1c <[^>]*> e09100b2 ?	ldrh	r0, \[r1\], r2
0+20 <[^>]*> e3a00cff ?	mov	r0, #65280	; 0xff00
0+24 <[^>]*> e1df0bb4 ?	ldrh	r0, \[pc, #180\]	; 0+e0 <[^>]*>
0+28 <[^>]*> e1df0abc ?	ldrh	r0, \[pc, #172\]	; 0+dc <[^>]*>
0+2c <[^>]*> e1c100b0 ?	strh	r0, \[r1\]
0+30 <[^>]*> e1e100b0 ?	strh	r0, \[r1, #0\]!
0+34 <[^>]*> e18100b2 ?	strh	r0, \[r1, r2\]
0+38 <[^>]*> e1a100b2 ?	strh	r0, \[r1, r2\]!
0+3c <[^>]*> e1c100bc ?	strh	r0, \[r1, #12\]
0+40 <[^>]*> e1e100bc ?	strh	r0, \[r1, #12\]!
0+44 <[^>]*> e14100bc ?	strh	r0, \[r1, #-12\]
0+48 <[^>]*> e08100b2 ?	strh	r0, \[r1\], r2
0+4c <[^>]*> e1cf08b8 ?	strh	r0, \[pc, #136\]	; 0+dc <[^>]*>
0+50 <[^>]*> e1d100d0 ?	ldrsb	r0, \[r1\]
0+54 <[^>]*> e1f100d0 ?	ldrsb	r0, \[r1, #0\]!
0+58 <[^>]*> e19100d2 ?	ldrsb	r0, \[r1, r2\]
0+5c <[^>]*> e1b100d2 ?	ldrsb	r0, \[r1, r2\]!
0+60 <[^>]*> e1d100dc ?	ldrsb	r0, \[r1, #12\]
0+64 <[^>]*> e1f100dc ?	ldrsb	r0, \[r1, #12\]!
0+68 <[^>]*> e15100dc ?	ldrsb	r0, \[r1, #-12\]
0+6c <[^>]*> e09100d2 ?	ldrsb	r0, \[r1\], r2
0+70 <[^>]*> e3a000de ?	mov	r0, #222	; 0xde
0+74 <[^>]*> e1df06d0 ?	ldrsb	r0, \[pc, #96\]	; 0+dc <[^>]*>
0+78 <[^>]*> e1d100f0 ?	ldrsh	r0, \[r1\]
0+7c <[^>]*> e1f100f0 ?	ldrsh	r0, \[r1, #0\]!
0+80 <[^>]*> e19100f2 ?	ldrsh	r0, \[r1, r2\]
0+84 <[^>]*> e1b100f2 ?	ldrsh	r0, \[r1, r2\]!
0+88 <[^>]*> e1d100fc ?	ldrsh	r0, \[r1, #12\]
0+8c <[^>]*> e1f100fc ?	ldrsh	r0, \[r1, #12\]!
0+90 <[^>]*> e15100fc ?	ldrsh	r0, \[r1, #-12\]
0+94 <[^>]*> e09100f2 ?	ldrsh	r0, \[r1\], r2
0+98 <[^>]*> e3a00cff ?	mov	r0, #65280	; 0xff00
0+9c <[^>]*> e1df03fc ?	ldrsh	r0, \[pc, #60\]	; 0+e0 <[^>]*>
0+a0 <[^>]*> e1df03f4 ?	ldrsh	r0, \[pc, #52\]	; 0+dc <[^>]*>
0+a4 <[^>]*> e19100b2 ?	ldrh	r0, \[r1, r2\]
0+a8 <[^>]*> 119100b2 ?	ldrhne	r0, \[r1, r2\]
0+ac <[^>]*> 819100b2 ?	ldrhhi	r0, \[r1, r2\]
0+b0 <[^>]*> b19100b2 ?	ldrhlt	r0, \[r1, r2\]
0+b4 <[^>]*> e19100f2 ?	ldrsh	r0, \[r1, r2\]
0+b8 <[^>]*> 119100f2 ?	ldrshne	r0, \[r1, r2\]
0+bc <[^>]*> 819100f2 ?	ldrshhi	r0, \[r1, r2\]
0+c0 <[^>]*> b19100f2 ?	ldrshlt	r0, \[r1, r2\]
0+c4 <[^>]*> e19100d2 ?	ldrsb	r0, \[r1, r2\]
0+c8 <[^>]*> 119100d2 ?	ldrsbne	r0, \[r1, r2\]
0+cc <[^>]*> 819100d2 ?	ldrsbhi	r0, \[r1, r2\]
0+d0 <[^>]*> b19100d2 ?	ldrsblt	r0, \[r1, r2\]
0+d4 <[^>]*> e1df00f4 ?	ldrsh	r0, \[pc, #4\]	; 0+e0 <[^>]*>
0+d8 <[^>]*> e1df00f4 ?	ldrsh	r0, \[pc, #4\]	; 0+e4 <[^>]*>
0+dc <[^>]*> 00000000 ?	.*
[		]*dc:.*fred
0+e0 <[^>]*> 0000c0de ?	.*
0+e4 <[^>]*> 0000dead ?	.*
0+e8 <[^>]*> e1a00000 ?	nop[ 	]+; \(mov r0, r0\)
0+ec <[^>]*> e1a00000 ?	nop[ 	]+; \(mov r0, r0\)
@


1.17
log
@        * gas/arm/vfma1.d: Only run on ELF based targets.

        PR binutils/10924
        * gas/arm/arch4t-eabi.d: Update expected disassembly.
        * gas/arm/arch4t.d: Likewise.
        * gas/arm/archv6t2.d: Likewise.
        * gas/arm/arm7t.d: Likewise.
        * gas/arm/inst.d: Likewise.
        * gas/arm/xscale.d: Likewise.

        PR binutils/10924
        * arm-dis.c (arm_opcodes): Add patterns to match undefined LDRB
        instruction variants.  Add pattern for MRS variant that was being
        confused with CMP.
        (arm_decode_shift): Place error message in a comment.
        (print_insn_arm): Note that writing back to the PC is
        unpredictable.
        Only print 'p' variants of cmp/cmn/teq/tst instructions if
        decoding for pre-V6 architectures.
@
text
@d10 1
a10 1
0+00 <[^>]*> e1d100b0 ?	ldrh	r0, \[r1, #0\]
d21 1
a21 1
0+2c <[^>]*> e1c100b0 ?	strh	r0, \[r1, #0\]
d30 1
a30 1
0+50 <[^>]*> e1d100d0 ?	ldrsb	r0, \[r1, #0\]
d40 1
a40 1
0+78 <[^>]*> e1d100f0 ?	ldrsh	r0, \[r1, #0\]
@


1.16
log
@        PR 10288
        * arm-dis.c (coprocessor): Print the LDC and STC versions of the
        LFM and SFM instructions as comments,.
        Improve consistency of formatting for instructions displayed as
        comments and decimal values displayed with their hexadecimal
        equivalents.
        Formatting tidy ups.

        Updated expected disassembler regexps.
@
text
@d10 2
a11 2
0+00 <[^>]*> e1d100b0 ?	ldrh	r0, \[r1\]
0+04 <[^>]*> e1f100b0 ?	ldrh	r0, \[r1\]!
d21 2
a22 2
0+2c <[^>]*> e1c100b0 ?	strh	r0, \[r1\]
0+30 <[^>]*> e1e100b0 ?	strh	r0, \[r1\]!
d30 2
a31 2
0+50 <[^>]*> e1d100d0 ?	ldrsb	r0, \[r1\]
0+54 <[^>]*> e1f100d0 ?	ldrsb	r0, \[r1\]!
d40 2
a41 2
0+78 <[^>]*> e1d100f0 ?	ldrsh	r0, \[r1\]
0+7c <[^>]*> e1f100f0 ?	ldrsh	r0, \[r1\]!
@


1.15
log
@	* gas/arm/arch4t.d: Convert to unified syntax.
	* gas/arm/archv6.d: Likewise.
	* gas/arm/archv6t2.d: Likewise.
	* gas/arm/arch3.d: Likewise.
	* gas/arm/arch7dm.d: Likewise.
	* gas/arm/arch7t.d: Likewise.
	* gas/arm/archv1.d: Likewise.
	* gas/arm/copro.d: Likewise.
	* gas/arm/inst.d: Likewise.
	* gas/arm/macro1.d: Likewise.
	* gas/arm/tcompat.d: Likewise.
	* gas/arm/wince_inst.d: Likewise.
	* gas/arm/xscale.d: Likewise.

	* gas/arm/thumb.d: White space cleanup.
	* gas/arm/thumb2_relax.d: Likewise.
	* gas/arm/thumb32.d: Likewise.
@
text
@d69 2
a70 2
0+e8 <[^>]*> e1a00000 ?	nop[ 	]+\(mov r0,r0\)
0+ec <[^>]*> e1a00000 ?	nop[ 	]+\(mov r0,r0\)
@


1.14
log
@PR 3729: Fix unexpected failures in ARM GAS testsuite results.
@
text
@d52 3
a54 3
0+a8 <[^>]*> 119100b2 ?	ldrneh	r0, \[r1, r2\]
0+ac <[^>]*> 819100b2 ?	ldrhih	r0, \[r1, r2\]
0+b0 <[^>]*> b19100b2 ?	ldrlth	r0, \[r1, r2\]
d56 3
a58 3
0+b8 <[^>]*> 119100f2 ?	ldrnesh	r0, \[r1, r2\]
0+bc <[^>]*> 819100f2 ?	ldrhish	r0, \[r1, r2\]
0+c0 <[^>]*> b19100f2 ?	ldrltsh	r0, \[r1, r2\]
d60 3
a62 3
0+c8 <[^>]*> 119100d2 ?	ldrnesb	r0, \[r1, r2\]
0+cc <[^>]*> 819100d2 ?	ldrhisb	r0, \[r1, r2\]
0+d0 <[^>]*> b19100d2 ?	ldrltsb	r0, \[r1, r2\]
@


1.13
log
@opcodes/
	* arm-dis.c (last_is_thumb): Delete.
	(enum map_type, last_type): New.
	(print_insn_data): New.
	(get_sym_code_type): Take MAP_TYPE argument.  Check the type of
	the right symbol.  Handle $d.
	(print_insn): Check for mapping symbols even without a normal
	symbol.  Adjust searching.  If $d is found see how much data
	to print.  Handle data.
gas/
	* config/tc-arm.h (md_cons_align): Define.
	(mapping_state): New prototype.
	* config/tc-arm.c (mapping_state): Make global.
gas/testsuite/
	* gas/arm/arm7t.d, gas/arm/neon-ldst-rm.d, gas/arm/thumb2_pool.d,
	gas/arm/tls.d: Update for $d support.
	* gas/arm/mapshort.d, gas/arm/mapshort.s: New test.
	* gas/elf/section2.e-armeabi: Update.
	* gas/elf/section2.e-armelf: New file.
	* gas/elf/elf.exp: Use it.
ld/testsuite/
	* ld-arm/mixed-app.d, ld-arm/tls-app.d, ld-arm/tls-lib.d: Update
	for $d support.
@
text
@d65 1
a65 1
0+dc <[^>]*> 00000000 ?	.word	0x00000000
@


1.12
log
@2005-10-08  Paul Brook  <paul@@codesourcery.com>

bfd/
	* elf32-arm.c: Move #include "elf/arm.h" after libbfd.h.
	(NUM_KNOWN_ATTRIBUTES): Define.
	(aeabi_attribute, aeabi_attribute_list): Define.
	(elf32_arm_obj_tdata): Add known_eabi_attributes and
	other_eabi_attributes.
	(uleb128_size, is_default_attr, eabi_attr_size,
	elf32_arm_eabi_attr_size, write_uleb128, write_eabi_attribute,
	elf32_arm_set_eabi_attr_contents, elf32_arm_bfd_final_link,
	elf32_arm_new_eabi_attr, attr_strdup, elf32_arm_add_eabi_attr_int,
	elf32_arm_add_eabi_attr_compat, copy_eabi_attributes,
	elf32_arm_merge_eabi_attributes): New functions.
	(elf32_arm_copy_private_bfd_data): Copy EABI object attributes.
	(elf32_arm_fake_sections): Handle .ARM.attributes.
	(elf32_arm_parse_attributes): New function.
	(elf32_arm_section_from_shdr): Use it.
	(bfd_elf32_bfd_final_link): Define.
gas/
	* config/tc-arm.c: Don't provide fallback default for CPU_DEFAULT.
	(arm_arch_used, thumb_arch_used, selected_cpu, selected_cpu_name):
	New variables.
	(arm_cpu_option_table): Add canonical_name.
	(arm_cpus): Populate canonical_name field.
	(s_arm_eabi_attribute, s_arm_arch, s_arm_cpu, s_arm_fpu,
	aeabi_set_public_attributes, arm_md_end): New functions.
	(md_pseudo_table): Add "cpu", "arch", "fpu" and "eabi_attribute".
	(md_assemble): Set thumb_arch_used and arm_arch_used.
	(md_begin): Set defaut cpu if CPU_DEFAULT not defined.
	* config/tc-arm.h (md_end): Define.
	* doc/c-arm.texi: Document .cpu, .arch, .fpu and .eabi_attribute.
gas/testsuite/
	* gas/arm/eabi_attr_1.s: New test.
	* gas/arm/eabi_attr_1.d: New test.
	* gas/arm/arm7t.d: Only disassemble code sections.
	* gas/arm/bignum1.d: Ignore Arm object attribute sections.
	* gas/arm/mapping.d: Ditto.
	* gas/arm/unwind.d: Ditto.
	* gas/elf/section0.d: Ditto.
	* gas/elf/section1.d: Ditto.
	* gas/elf/elf.exp: Set target_machine for Arm EABI based targets.
	* gas/elf/section2.e-armeabi: New file.
include/elf/
	* arm.h: Add prototypes for BFD object attribute routines.
ld/testsuite/
	* ld-arm/arm-rel31.d: Ignore Arm object attribute sections.
	* ld-arm/arm-target1-abs.d: Ditto.
	* ld-arm/arm-target1-rel.d: Ditto.
	* ld-arm/arm-target2-abs.d: Ditto.
	* ld-arm/arm-target2-got-rel.d: Ditto.
	* ld-arm/arm-target2-rel.d: Ditto.
@
text
@d65 1
a65 1
0+dc <[^>]*> 00000000 ?	andeq	r0, r0, r0
@


1.11
log
@Add new field to disassemble_info structure: symbol_is_valid() and use it to
skip displaying arm elf mapping symbols in disassembly output.
@
text
@d1 1
a1 1
#objdump: -Dr --prefix-addresses --show-raw-insn
@


1.10
log
@	* gas/arm/arm7t.d: Replace '-#' with '#-'.
	* gas/arm/copro.d: Likewise.
	* gas/arm/fpa-mem.d: Likewise.
	* gas/arm/maverick.c: Likewise.
	* gas/arm/maverick.d: Likewise.
	* gas/arm/vfp1.d: Likewise.
	* gas/arm/vfp1xD.d: Likewise.
	* gas/arm/xscale.d: Likewise.
@
text
@d1 1
a1 1
#objdump: -dr --prefix-addresses --show-raw-insn
@


1.9
log
@Fix arm-aout failures
@
text
@d16 1
a16 1
0+18 <[^>]*> e15100bc ?	ldrh	r0, \[r1, -#12\]
d27 1
a27 1
0+44 <[^>]*> e14100bc ?	strh	r0, \[r1, -#12\]
d36 1
a36 1
0+68 <[^>]*> e15100dc ?	ldrsb	r0, \[r1, -#12\]
d46 1
a46 1
0+90 <[^>]*> e15100fc ?	ldrsh	r0, \[r1, -#12\]
@


1.8
log
@Replace deprecated command line switches with their modern equivalents.
@
text
@d69 2
a70 2
0+e8 <[^>]*> 3800      	sub	r0, #0
0+ea <[^>]*> 3000      	add	r0, #0
@


1.7
log
@Do not convert a subtract of zero into an add of zero.
@
text
@d3 1
a3 1
#as: -marm7t -EL
@


1.6
log
@2001-07-16  Philip Blundell  <philb@@gnu.org>

	* gas/arm/arm7t.d, gas/arm/inst.d: Tweak expected output for
	change to disassembler.
@
text
@d69 2
@


1.5
log
@2001-05-24  H.J. Lu  <hjl@@gnu.org>

	* gas/arm/adrl.d: Support 64bit BFD.
	* gas/arm/arm7t.d: Likewise.
	* gas/arm/inst.d: Likewise.
	* gas/arm/pic.d: Likewise.
	* gas/arm/xscale.d: Likewise.
@
text
@d19 2
a20 2
0+24 <[^>]*> e1df0bb4 ?	ldrh	r0, \[pc, #b4\]	; 0+e0 <[^>]*>
0+28 <[^>]*> e1df0abc ?	ldrh	r0, \[pc, #ac\]	; 0+dc <[^>]*>
d29 1
a29 1
0+4c <[^>]*> e1cf08b8 ?	strh	r0, \[pc, #88\]	; 0+dc <[^>]*>
d39 1
a39 1
0+74 <[^>]*> e1df06d0 ?	ldrsb	r0, \[pc, #60\]	; 0+dc <[^>]*>
d49 2
a50 2
0+9c <[^>]*> e1df03fc ?	ldrsh	r0, \[pc, #3c\]	; 0+e0 <[^>]*>
0+a0 <[^>]*> e1df03f4 ?	ldrsh	r0, \[pc, #34\]	; 0+dc <[^>]*>
@


1.4
log
@fixes for arm-aout....
@
text
@d10 56
a65 56
00000000 <[^>]*> e1d100b0 ?	ldrh	r0, \[r1\]
00000004 <[^>]*> e1f100b0 ?	ldrh	r0, \[r1\]!
00000008 <[^>]*> e19100b2 ?	ldrh	r0, \[r1, r2\]
0000000c <[^>]*> e1b100b2 ?	ldrh	r0, \[r1, r2\]!
00000010 <[^>]*> e1d100bc ?	ldrh	r0, \[r1, #12\]
00000014 <[^>]*> e1f100bc ?	ldrh	r0, \[r1, #12\]!
00000018 <[^>]*> e15100bc ?	ldrh	r0, \[r1, -#12\]
0000001c <[^>]*> e09100b2 ?	ldrh	r0, \[r1\], r2
00000020 <[^>]*> e3a00cff ?	mov	r0, #65280	; 0xff00
00000024 <[^>]*> e1df0bb4 ?	ldrh	r0, \[pc, #b4\]	; 000000e0 <[^>]*>
00000028 <[^>]*> e1df0abc ?	ldrh	r0, \[pc, #ac\]	; 000000dc <[^>]*>
0000002c <[^>]*> e1c100b0 ?	strh	r0, \[r1\]
00000030 <[^>]*> e1e100b0 ?	strh	r0, \[r1\]!
00000034 <[^>]*> e18100b2 ?	strh	r0, \[r1, r2\]
00000038 <[^>]*> e1a100b2 ?	strh	r0, \[r1, r2\]!
0000003c <[^>]*> e1c100bc ?	strh	r0, \[r1, #12\]
00000040 <[^>]*> e1e100bc ?	strh	r0, \[r1, #12\]!
00000044 <[^>]*> e14100bc ?	strh	r0, \[r1, -#12\]
00000048 <[^>]*> e08100b2 ?	strh	r0, \[r1\], r2
0000004c <[^>]*> e1cf08b8 ?	strh	r0, \[pc, #88\]	; 000000dc <[^>]*>
00000050 <[^>]*> e1d100d0 ?	ldrsb	r0, \[r1\]
00000054 <[^>]*> e1f100d0 ?	ldrsb	r0, \[r1\]!
00000058 <[^>]*> e19100d2 ?	ldrsb	r0, \[r1, r2\]
0000005c <[^>]*> e1b100d2 ?	ldrsb	r0, \[r1, r2\]!
00000060 <[^>]*> e1d100dc ?	ldrsb	r0, \[r1, #12\]
00000064 <[^>]*> e1f100dc ?	ldrsb	r0, \[r1, #12\]!
00000068 <[^>]*> e15100dc ?	ldrsb	r0, \[r1, -#12\]
0000006c <[^>]*> e09100d2 ?	ldrsb	r0, \[r1\], r2
00000070 <[^>]*> e3a000de ?	mov	r0, #222	; 0xde
00000074 <[^>]*> e1df06d0 ?	ldrsb	r0, \[pc, #60\]	; 000000dc <[^>]*>
00000078 <[^>]*> e1d100f0 ?	ldrsh	r0, \[r1\]
0000007c <[^>]*> e1f100f0 ?	ldrsh	r0, \[r1\]!
00000080 <[^>]*> e19100f2 ?	ldrsh	r0, \[r1, r2\]
00000084 <[^>]*> e1b100f2 ?	ldrsh	r0, \[r1, r2\]!
00000088 <[^>]*> e1d100fc ?	ldrsh	r0, \[r1, #12\]
0000008c <[^>]*> e1f100fc ?	ldrsh	r0, \[r1, #12\]!
00000090 <[^>]*> e15100fc ?	ldrsh	r0, \[r1, -#12\]
00000094 <[^>]*> e09100f2 ?	ldrsh	r0, \[r1\], r2
00000098 <[^>]*> e3a00cff ?	mov	r0, #65280	; 0xff00
0000009c <[^>]*> e1df03fc ?	ldrsh	r0, \[pc, #3c\]	; 000000e0 <[^>]*>
000000a0 <[^>]*> e1df03f4 ?	ldrsh	r0, \[pc, #34\]	; 000000dc <[^>]*>
000000a4 <[^>]*> e19100b2 ?	ldrh	r0, \[r1, r2\]
000000a8 <[^>]*> 119100b2 ?	ldrneh	r0, \[r1, r2\]
000000ac <[^>]*> 819100b2 ?	ldrhih	r0, \[r1, r2\]
000000b0 <[^>]*> b19100b2 ?	ldrlth	r0, \[r1, r2\]
000000b4 <[^>]*> e19100f2 ?	ldrsh	r0, \[r1, r2\]
000000b8 <[^>]*> 119100f2 ?	ldrnesh	r0, \[r1, r2\]
000000bc <[^>]*> 819100f2 ?	ldrhish	r0, \[r1, r2\]
000000c0 <[^>]*> b19100f2 ?	ldrltsh	r0, \[r1, r2\]
000000c4 <[^>]*> e19100d2 ?	ldrsb	r0, \[r1, r2\]
000000c8 <[^>]*> 119100d2 ?	ldrnesb	r0, \[r1, r2\]
000000cc <[^>]*> 819100d2 ?	ldrhisb	r0, \[r1, r2\]
000000d0 <[^>]*> b19100d2 ?	ldrltsb	r0, \[r1, r2\]
000000d4 <[^>]*> e1df00f4 ?	ldrsh	r0, \[pc, #4\]	; 000000e0 <[^>]*>
000000d8 <[^>]*> e1df00f4 ?	ldrsh	r0, \[pc, #4\]	; 000000e4 <[^>]*>
000000dc <[^>]*> 00000000 ?	andeq	r0, r0, r0
d67 2
a68 2
000000e0 <[^>]*> 0000c0de ?	.*
000000e4 <[^>]*> 0000dead ?	.*
@


1.4.4.1
log
@Merge from mainline.
@
text
@d10 56
a65 56
0+00 <[^>]*> e1d100b0 ?	ldrh	r0, \[r1\]
0+04 <[^>]*> e1f100b0 ?	ldrh	r0, \[r1\]!
0+08 <[^>]*> e19100b2 ?	ldrh	r0, \[r1, r2\]
0+0c <[^>]*> e1b100b2 ?	ldrh	r0, \[r1, r2\]!
0+10 <[^>]*> e1d100bc ?	ldrh	r0, \[r1, #12\]
0+14 <[^>]*> e1f100bc ?	ldrh	r0, \[r1, #12\]!
0+18 <[^>]*> e15100bc ?	ldrh	r0, \[r1, -#12\]
0+1c <[^>]*> e09100b2 ?	ldrh	r0, \[r1\], r2
0+20 <[^>]*> e3a00cff ?	mov	r0, #65280	; 0xff00
0+24 <[^>]*> e1df0bb4 ?	ldrh	r0, \[pc, #b4\]	; 0+e0 <[^>]*>
0+28 <[^>]*> e1df0abc ?	ldrh	r0, \[pc, #ac\]	; 0+dc <[^>]*>
0+2c <[^>]*> e1c100b0 ?	strh	r0, \[r1\]
0+30 <[^>]*> e1e100b0 ?	strh	r0, \[r1\]!
0+34 <[^>]*> e18100b2 ?	strh	r0, \[r1, r2\]
0+38 <[^>]*> e1a100b2 ?	strh	r0, \[r1, r2\]!
0+3c <[^>]*> e1c100bc ?	strh	r0, \[r1, #12\]
0+40 <[^>]*> e1e100bc ?	strh	r0, \[r1, #12\]!
0+44 <[^>]*> e14100bc ?	strh	r0, \[r1, -#12\]
0+48 <[^>]*> e08100b2 ?	strh	r0, \[r1\], r2
0+4c <[^>]*> e1cf08b8 ?	strh	r0, \[pc, #88\]	; 0+dc <[^>]*>
0+50 <[^>]*> e1d100d0 ?	ldrsb	r0, \[r1\]
0+54 <[^>]*> e1f100d0 ?	ldrsb	r0, \[r1\]!
0+58 <[^>]*> e19100d2 ?	ldrsb	r0, \[r1, r2\]
0+5c <[^>]*> e1b100d2 ?	ldrsb	r0, \[r1, r2\]!
0+60 <[^>]*> e1d100dc ?	ldrsb	r0, \[r1, #12\]
0+64 <[^>]*> e1f100dc ?	ldrsb	r0, \[r1, #12\]!
0+68 <[^>]*> e15100dc ?	ldrsb	r0, \[r1, -#12\]
0+6c <[^>]*> e09100d2 ?	ldrsb	r0, \[r1\], r2
0+70 <[^>]*> e3a000de ?	mov	r0, #222	; 0xde
0+74 <[^>]*> e1df06d0 ?	ldrsb	r0, \[pc, #60\]	; 0+dc <[^>]*>
0+78 <[^>]*> e1d100f0 ?	ldrsh	r0, \[r1\]
0+7c <[^>]*> e1f100f0 ?	ldrsh	r0, \[r1\]!
0+80 <[^>]*> e19100f2 ?	ldrsh	r0, \[r1, r2\]
0+84 <[^>]*> e1b100f2 ?	ldrsh	r0, \[r1, r2\]!
0+88 <[^>]*> e1d100fc ?	ldrsh	r0, \[r1, #12\]
0+8c <[^>]*> e1f100fc ?	ldrsh	r0, \[r1, #12\]!
0+90 <[^>]*> e15100fc ?	ldrsh	r0, \[r1, -#12\]
0+94 <[^>]*> e09100f2 ?	ldrsh	r0, \[r1\], r2
0+98 <[^>]*> e3a00cff ?	mov	r0, #65280	; 0xff00
0+9c <[^>]*> e1df03fc ?	ldrsh	r0, \[pc, #3c\]	; 0+e0 <[^>]*>
0+a0 <[^>]*> e1df03f4 ?	ldrsh	r0, \[pc, #34\]	; 0+dc <[^>]*>
0+a4 <[^>]*> e19100b2 ?	ldrh	r0, \[r1, r2\]
0+a8 <[^>]*> 119100b2 ?	ldrneh	r0, \[r1, r2\]
0+ac <[^>]*> 819100b2 ?	ldrhih	r0, \[r1, r2\]
0+b0 <[^>]*> b19100b2 ?	ldrlth	r0, \[r1, r2\]
0+b4 <[^>]*> e19100f2 ?	ldrsh	r0, \[r1, r2\]
0+b8 <[^>]*> 119100f2 ?	ldrnesh	r0, \[r1, r2\]
0+bc <[^>]*> 819100f2 ?	ldrhish	r0, \[r1, r2\]
0+c0 <[^>]*> b19100f2 ?	ldrltsh	r0, \[r1, r2\]
0+c4 <[^>]*> e19100d2 ?	ldrsb	r0, \[r1, r2\]
0+c8 <[^>]*> 119100d2 ?	ldrnesb	r0, \[r1, r2\]
0+cc <[^>]*> 819100d2 ?	ldrhisb	r0, \[r1, r2\]
0+d0 <[^>]*> b19100d2 ?	ldrltsb	r0, \[r1, r2\]
0+d4 <[^>]*> e1df00f4 ?	ldrsh	r0, \[pc, #4\]	; 0+e0 <[^>]*>
0+d8 <[^>]*> e1df00f4 ?	ldrsh	r0, \[pc, #4\]	; 0+e4 <[^>]*>
0+dc <[^>]*> 00000000 ?	andeq	r0, r0, r0
d67 2
a68 2
0+e0 <[^>]*> 0000c0de ?	.*
0+e4 <[^>]*> 0000dead ?	.*
@


1.4.4.2
log
@2001-07-16  Philip Blundell  <philb@@gnu.org>

	* gas/arm/arm7t.d, gas/arm/inst.d: Tweak expected output for
	change to disassembler.
@
text
@d19 2
a20 2
0+24 <[^>]*> e1df0bb4 ?	ldrh	r0, \[pc, #180\]	; 0+e0 <[^>]*>
0+28 <[^>]*> e1df0abc ?	ldrh	r0, \[pc, #172\]	; 0+dc <[^>]*>
d29 1
a29 1
0+4c <[^>]*> e1cf08b8 ?	strh	r0, \[pc, #136\]	; 0+dc <[^>]*>
d39 1
a39 1
0+74 <[^>]*> e1df06d0 ?	ldrsb	r0, \[pc, #96\]	; 0+dc <[^>]*>
d49 2
a50 2
0+9c <[^>]*> e1df03fc ?	ldrsh	r0, \[pc, #60\]	; 0+e0 <[^>]*>
0+a0 <[^>]*> e1df03f4 ?	ldrsh	r0, \[pc, #52\]	; 0+dc <[^>]*>
@


1.3
log
@Fix assembler testsuite for ARM
@
text
@d66 1
a66 1
[		]*dc:.*.rdata
@


1.2
log
@ Update to match current gas,bfd and opcodes.
@
text
@d18 1
a18 1
00000020 <[^>]*> e3a00cff ?	mov	r0, #65280
d38 1
a38 1
00000070 <[^>]*> e3a000de ?	mov	r0, #222
d48 1
a48 1
00000098 <[^>]*> e3a00cff ?	mov	r0, #65280
@


1.1
log
@Initial revision
@
text
@d19 2
a20 2
00000024 <[^>]*> e1df0bb4 ?	ldrh	r0, 000000e0 <\$\$lit_1>
00000028 <[^>]*> e1df0abc ?	ldrh	r0, 000000dc <.L2>
d29 1
a29 1
0000004c <[^>]*> e1cf08b8 ?	strh	r0, 000000dc <.L2>
d39 1
a39 1
00000074 <[^>]*> e1df06d0 ?	ldrsb	r0, 000000dc <.L2>
d49 2
a50 2
0000009c <[^>]*> e1df03fc ?	ldrsh	r0, 000000e0 <\$\$lit_1>
000000a0 <[^>]*> e1df03f4 ?	ldrsh	r0, 000000dc <.L2>
d63 2
a64 2
000000d4 <[^>]*> e1df00f4 ?	ldrsh	r0, 000000e0 <\$\$lit_1>
000000d8 <[^>]*> e1df00f4 ?	ldrsh	r0, 000000e4 <\$\$lit_1\+0x4>
d66 1
a66 1
[		]*dc:.*.LC0
@


1.1.1.1
log
@19990502 sourceware import
@
text
@@

