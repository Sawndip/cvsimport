head	1.3;
access;
symbols
	binutils-2_24-branch:1.3.0.8
	binutils-2_24-branchpoint:1.3
	binutils-2_21_1:1.2
	binutils-2_23_2:1.3
	binutils-2_23_1:1.3
	binutils-2_23:1.3
	binutils-2_23-branch:1.3.0.6
	binutils-2_23-branchpoint:1.3
	binutils-2_22_branch:1.3.0.4
	binutils-2_22:1.3
	binutils-2_22-branch:1.3.0.2
	binutils-2_22-branchpoint:1.3
	binutils-2_21:1.2
	binutils-2_21-branch:1.2.0.2
	binutils-2_21-branchpoint:1.2
	binutils_latest_snapshot:1.3;
locks; strict;
comment	@# @;


1.3
date	2011.01.31.16.43.14;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	2009.11.17.10.36.48;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	2009.09.29.14.17.11;	author nickc;	state Exp;
branches;
next	;


desc
@@


1.3
log
@	* write.c (write_contents): Include output file name and bfd error
	value when reporting the inability to write to the output file.
	* config/tc-rx.c (rx_handle_align): Do not insert NOPs into align
	frag that has a non-zero fill value.

	* gas/all/align.d: Skip for the RX.
	* gas/elf/group1a.d: Likewise.
	* gas/elf/groupautoa.d: Likewise.
	* gas/elf/elf.exp: Do not run section5 test for the RX port.
	* gas/elf/section4.d: Likewise.
	* gas/elf/section7.d: Likewise.
	* gas/macros/semi.s: Fill with a non-zero pattern.
	* gas/macros/semi.d: Expect non-zero fill value.
	* gas/rx/bcnd.d: Update expected disassembly.
	* gas/rx/bra.d: Likewise.
	* gas/rx/macros.inc: Add reg1 macro.
	* gas/rx/max.sm: Use reg1 macro to avoid generating illegal NOP
	instruction.
	* gas/rx/mov.sm: Likewise.
	* gas/rx/max.d: Update expected disassembly.
	* gas/rx/mov.d: Likewise.
	* gas/rx/rx-asm-good.s: Use Renesas section names.
	* gas/rx/rx-asm-good.d: Update expected disassembly.
@
text
@macro	reg	{r0;r15}
macro	reg1	{r1;r15}
macro	reg2	{r0;r14}
macro	reg7	{r0;r7}
macro	regPlo	{r1;r7}
macro	regPhi	{r8;r14}
macro	creg	{psw;fpsw;usp;isp;intb;bpsw;bpc;fintv}
macro	pswf	{U;I;O;S;Z;C}

macro	simm8	{-128;127}
macro	simm16	{-32768;32768}
macro	simm24	{-8388608;8388607}
macro	simm32	{-2147483648;2147483647}

macro	imm	{{simm8};{simm16};{simm24};{simm32}}

macro	uimm2	{0;3}
macro	uimm3	{0;7}
macro	uimm4	{0;15}
macro	uimm5	{0;31}
macro	uimm8	{0;255}
macro	uimm16	{0;65535}
macro	uimm24	{0;16777215}
macro	uimm32	{0;4294967295}

macro	imm32	{-2147483648;4294967295}

macro	dsp5	{4;28}
macro	dsp8	252
macro	dsp16	65532
macro	dsp8L	1020
macro	dsp16L	262140

macro	dsp	{;{dsp8};{dsp16}}
macro	dspL	{;{dsp8L};{dsp16L}}

macro	memex	{.ub;.b;.uw;.w;.l}
macro	memx	{dsp}[{reg}]{memex}
macro	mem	{dsp}[{reg}]
macro	bwl	{.b;.w;.l}
macro	bw	{.b;.w}

macro	cnd	{geu;c;eq;z;gtu;pz;ge;gt;o;ltu;nc;ne;nz;leu;n;lt;le;no}
macro	lab_s	{.+3;.+10;foo}
macro	lab_b	{.-128;.+127;foo}
macro	lab_w	{.-32768;.+32767;foo}
macro	lab_a	{.-8388608;.+8388607;foo}
macro	lab_l	{.-2147483648;.+2147483647;foo}

	.text
@


1.2
log
@        * gas/rx/macros.inc (creg): Remove cpen.
        * gas/rx/mvfc.d: Remove expected uses of cpen register.
        * gas/rx/mvtc.d: Likewise.
        * gas/rx/popc.d: Likewise.
        * gas/rx/pushc.d: Likewise.
@
text
@d2 1
@


1.1
log
@bfd
        * Makefile.am (ALL_MACHINES): Add cpu-rx.lo.
        (ALL_MACHINES_CFILES): Add cpu-rx.c.
        (BFD32_BACKENDS): Add elf32-rx.lo.
        (BFD32_BACKENDS_CFILES): Add elf32-rx.c.
        * archures.c (bfd_architecture): Add bfd_arch_rx and bfd_mach_rx.
        Export bfd_rx_arch.
        (bfd_archures_list): Add bfd_rx_arch.
        * config.bfd: Add entry for rx-*-elf.
        * configure.in: Add entries for bfd_elf32_rx_le_vec and
        bfd_elf32_rx_be_vec.
        * reloc.c: Add RX relocations.
        * targets.c: Add RX target vectors.
        * Makefile.in: Regenerate.
        * bfd-in2.h: Regenerate.
        * configure: Regenerate.
        * libbfd.h: Regenerate.
        * cpu-rx.c: New file.
        * elf32-rx.c: New file.

binutils
        * readelf.c: Add support for RX target.
        * MAINTAINERS: Add DJ and NickC as maintainers for RX.

gas
        * Makefile.am: Add RX target.
        * configure.in: Likewise.
        * configure.tgt: Likewise.
        * read.c (do_repeat_with_expander): New function.
        * read.h: Provide a prototype for do_repeat_with_expander.
        * doc/Makefile.am: Add RX target documentation.
        * doc/all.texi: Likewise.
        * doc/as.texinfo: Likewise.
        * Makefile.in: Regenerate.
        * NEWS: Mention support for RX architecture.
        * configure: Regenerate.
        * doc/Makefile.in: Regenerate.
        * config/rx-defs.h: New file.
        * config/rx-parse.y: New file.
        * config/tc-rx.h: New file.
        * config/tc-rx.c: New file.
        * doc/c-rx.texi: New file.

gas/testsuite
        * gas/rx: New directory.
        * gas/rx/*: New set of test cases.
        * gas/elf/section2.e-rx: New expected output file.
        * gas/all/gas.exp: Add support for RX target.
        * gas/elf/elf.exp: Likewise.
        * gas/lns/lns.exp: Likewise.
        * gas/macros/macros.exp: Likewise.

include
        * dis-asm.h: Add prototype for print_insn_rx.

include/elf
        * rx.h: New file.

include/opcode
        * rx.h: New file.

ld
        * Makefile.am: Add rules to build RX emulation.
        * configure.tgt: Likewise.
        * NEWS: Mention support for RX architecture.
        * Makefile.in: Regenerate.
        * emulparams/elf32rx.sh: New file.
        * emultempl/rxelf.em: New file.

opcodes
        * Makefile.am: Add RX files.
        * configure.in: Add support for RX target.
        * disassemble.c: Likewise.
        * Makefile.in: Regenerate.
        * configure: Regenerate.
        * opc2c.c: New file.
        * rx-decode.c: New file.
        * rx-decode.opc: New file.
        * rx-dis.c: New file.
@
text
@d6 1
a6 1
macro	creg	{psw;fpsw;usp;isp;intb;bpsw;bpc;fintv;cpen}
@

