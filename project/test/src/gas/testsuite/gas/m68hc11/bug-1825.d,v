head	1.5;
access;
symbols
	binutils-2_24-branch:1.5.0.4
	binutils-2_24-branchpoint:1.5
	binutils-2_21_1:1.4
	binutils-2_23_2:1.5
	binutils-2_23_1:1.5
	binutils-2_23:1.5
	binutils-2_23-branch:1.5.0.2
	binutils-2_23-branchpoint:1.5
	binutils-2_22_branch:1.4.0.16
	binutils-2_22:1.4
	binutils-2_22-branch:1.4.0.14
	binutils-2_22-branchpoint:1.4
	binutils-2_21:1.4
	binutils-2_21-branch:1.4.0.12
	binutils-2_21-branchpoint:1.4
	binutils-2_20_1:1.4
	binutils-2_20:1.4
	binutils-arc-20081103-branch:1.4.0.10
	binutils-arc-20081103-branchpoint:1.4
	binutils-2_20-branch:1.4.0.8
	binutils-2_20-branchpoint:1.4
	dje-cgen-play1-branch:1.4.0.6
	dje-cgen-play1-branchpoint:1.4
	arc-20081103-branch:1.4.0.4
	arc-20081103-branchpoint:1.4
	binutils-2_19_1:1.4
	binutils-2_19:1.4
	binutils-2_19-branch:1.4.0.2
	binutils-2_19-branchpoint:1.4
	binutils-2_18:1.3
	binutils-2_18-branch:1.3.0.20
	binutils-2_18-branchpoint:1.3
	binutils-csl-coldfire-4_1-32:1.3
	binutils-csl-sourcerygxx-4_1-32:1.3
	binutils-csl-innovasic-fido-3_4_4-33:1.3
	binutils-csl-sourcerygxx-3_4_4-32:1.3
	binutils-csl-coldfire-4_1-30:1.3
	binutils-csl-sourcerygxx-4_1-30:1.3
	binutils-csl-coldfire-4_1-28:1.3
	binutils-csl-sourcerygxx-4_1-29:1.3
	binutils-csl-sourcerygxx-4_1-28:1.3
	binutils-csl-arm-2006q3-27:1.3
	binutils-csl-sourcerygxx-4_1-27:1.3
	binutils-csl-arm-2006q3-26:1.3
	binutils-csl-sourcerygxx-4_1-26:1.3
	binutils-csl-sourcerygxx-4_1-25:1.3
	binutils-csl-sourcerygxx-4_1-24:1.3
	binutils-csl-sourcerygxx-4_1-23:1.3
	binutils-csl-sourcerygxx-4_1-21:1.3
	binutils-csl-arm-2006q3-21:1.3
	binutils-csl-sourcerygxx-4_1-22:1.3
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.3
	binutils-csl-sourcerygxx-4_1-20:1.3
	binutils-csl-arm-2006q3-19:1.3
	binutils-csl-sourcerygxx-4_1-19:1.3
	binutils-csl-sourcerygxx-4_1-18:1.3
	binutils-csl-renesas-4_1-9:1.3
	binutils-csl-sourcerygxx-3_4_4-25:1.3
	binutils-csl-renesas-4_1-8:1.3
	binutils-csl-renesas-4_1-7:1.3
	binutils-csl-renesas-4_1-6:1.3
	binutils-csl-sourcerygxx-4_1-17:1.3
	binutils-csl-sourcerygxx-4_1-14:1.3
	binutils-csl-sourcerygxx-4_1-15:1.3
	binutils-csl-sourcerygxx-4_1-13:1.3
	binutils-2_17:1.3
	binutils-csl-sourcerygxx-4_1-12:1.3
	binutils-csl-sourcerygxx-3_4_4-21:1.3
	binutils-csl-wrs-linux-3_4_4-24:1.3
	binutils-csl-wrs-linux-3_4_4-23:1.3
	binutils-csl-sourcerygxx-4_1-9:1.3
	binutils-csl-sourcerygxx-4_1-8:1.3
	binutils-csl-sourcerygxx-4_1-7:1.3
	binutils-csl-arm-2006q1-6:1.3
	binutils-csl-sourcerygxx-4_1-6:1.3
	binutils-csl-wrs-linux-3_4_4-22:1.3
	binutils-csl-coldfire-4_1-11:1.3
	binutils-csl-sourcerygxx-3_4_4-19:1.3
	binutils-csl-coldfire-4_1-10:1.3
	binutils-csl-sourcerygxx-4_1-5:1.3
	binutils-csl-sourcerygxx-4_1-4:1.3
	binutils-csl-wrs-linux-3_4_4-21:1.3
	binutils-csl-morpho-4_1-4:1.3
	binutils-csl-sourcerygxx-3_4_4-17:1.3
	binutils-csl-wrs-linux-3_4_4-20:1.3
	binutils-2_17-branch:1.3.0.18
	binutils-2_17-branchpoint:1.3
	binutils-csl-2_17-branch:1.3.0.16
	binutils-csl-2_17-branchpoint:1.3
	binutils-csl-gxxpro-3_4-branch:1.3.0.14
	binutils-csl-gxxpro-3_4-branchpoint:1.3
	binutils-2_16_1:1.3
	binutils-csl-arm-2005q1b:1.3
	binutils-2_16:1.3
	binutils-csl-arm-2005q1a:1.3
	binutils-csl-arm-2005q1-branch:1.3.0.12
	binutils-csl-arm-2005q1-branchpoint:1.3
	binutils-2_16-branch:1.3.0.10
	binutils-2_16-branchpoint:1.3
	csl-arm-2004-q3d:1.3
	csl-arm-2004-q3:1.3
	binutils-2_15:1.3
	binutils-2_15-branchpoint:1.3
	csl-arm-2004-q1a:1.3
	csl-arm-2004-q1:1.3
	binutils-2_15-branch:1.3.0.8
	cagney_bfdfile-20040213-branch:1.3.0.6
	cagney_bfdfile-20040213-branchpoint:1.3
	cagney_bigcore-20040122-branch:1.3.0.4
	cagney_bigcore-20040122-branchpoint:1.3
	csl-arm-2003-q4:1.3
	binutils-2_14:1.3
	binutils-2_14-branch:1.3.0.2
	binutils-2_14-branchpoint:1.3
	binutils_latest_snapshot:1.5;
locks; strict;
comment	@# @;


1.5
date	2012.05.15.12.55.39;	author nickc;	state Exp;
branches;
next	1.4;

1.4
date	2008.02.22.15.33.31;	author nickc;	state Exp;
branches;
next	1.3;

1.3
date	2003.04.05.13.09.36;	author ciceron;	state Exp;
branches;
next	1.2;

1.2
date	2002.12.08.21.08.07;	author ciceron;	state Exp;
branches;
next	1.1;

1.1
date	2002.12.01.14.32.48;	author ciceron;	state Exp;
branches;
next	;


desc
@@


1.5
log
@	* config/tc-m68hc11.c: Add S12X and XGATE co-processor support.
	Add option to offset S12 addresses into XGATE memory space.
	Tweak target flags to match other tools. (i.e. -m m68hc11).
	* doc/as.texinfo: Mention new options.
	* doc/c-m68hc11.texi: Document new options.
	* NEWS: Mention new support.

	* archures.c: Add bfd_arch_m9s12x and bfd_arch_m9s12xg.
	* config.bfd: Likewise.
	* cpu-m9s12x.c: New.
	* cpu-m9s12xg.c: New.
	* elf32-m68hc12.c: Add S12X and XGATE co-processor support.
	Add option to offset S12 addresses into XGATE memory space.
	Fix carry bug in IMM16 (IMM8 low/high) relocate.
	* Makefile.am (ALL_MACHINES): Add cpu-m9s12x and cpu-m9s12xg.
	(ALL_MACHINES_CFILES): Likewise.
	* reloc.c: Add S12X relocs.
	* Makefile.in: Regenerate.
	* bfd-in2.h: Regenerate.
	* libbfd.h: Regenerate.

	* gas/m68hc11/insns9s12x.s: New
	* gas/m68hc11/insns9s12x.d: New
	* gas/m68hc11/hexprefix.s: New
	* gas/m68hc11/hexprefix.d: New
	* gas/m68hc11/9s12x-exg-sex-tfr.s: New
	* gas/m68hc11/9s12x-exg-sex-tfr.d: New
	* gas/m68hc11/insns9s12xg.s: New
	* gas/m68hc11/insns9s12xg.d: New
	* gas/m68hc11/9s12x-mov.s: New
	* gas/m68hc11/9s12x-mov.d: New
	* gas/m68hc11/m68hc11.exp: Updated
	* gas/m68hc11/*.d: Brought in line with changed objdump output.
	* gas/all/gas.exp: XFAIL all hc11/12 targets for redef2,3.
	* gas/elf/elf.exp: XFAIL all hc11/12 targets for redef.
	* gas/elf/dwarf2-1.d: Skip for hc11/12 targets.
	* gas/elf/dwarf2-2.d: Likewise.

	* ld-m68hc11/xgate-link.s: New.
	* ld-m68hc11/xgate-link.d: New.
	* ld-m68hc11/xgate-offset.s: New.
	* ld-m68hc11/xgate-offset.d: New.
	* ld-m68hc11/xgate1.s: New.
	* ld-m68hc11/xgate1.d: New.
	* ld-m68hc11/xgate2.s: New.
	* ld-m68hc11/m68hc11.exp: Updated.
	* ld-m68hc11/*.d: Brought in line with changed objdump output.
	* ld-gc/gc.exp: Update CFLAGS for m68hc11.
	* ld-plugin/plugin.exp: Likewise.
	* ld-srec/srec.exp: XFAIL for m68hc11 and m68hc12.

	* configure.in: Add S12X and XGATE co-processor support to m68hc11
	target.
	* disassemble.c: Likewise.
	* configure: Regenerate.
	* m68hc11-dis.c: Make objdump output more consistent, use hex
	instead of decimal and use 0x prefix for hex.
	* m68hc11-opc.c: Add S12X and XGATE opcodes.
	* dis-asm.h (print_insn_m9s12x): Prototype.
	(print_insn_m9s12xg): Prototype.

	* m68hc11.h (R_M68HC12_16B, R_M68HC12_PCREL_9, R_M68HC12_PCREL_10)
	R_M68HC12_HI8XG, R_M68HC12_LO8XG): New relocations.
	(E_M68HC11_XGATE_RAMOFFSET): Define.

	* m68hc11.h: Add XGate definitions.
	(struct m68hc11_opcode): Add xg_mask field.
@
text
@#objdump: -S -r
#as: -m68hc12 -gdwarf2
#name: 68HC12 PC-relative addressing modes (bug-1825)

.*:     file format elf32\-m68hc12

Disassembly of section \.text:

0+ <_main>:
;;; .*
;;; 
	\.sect \.text
	\.globl _main
_main:
	nop
   0:	a7          	nop
	ldx	L1,pc		; Assemble to 5\-bit > 0 offset
   1:	ee c2       	ldx	0x2,PC \{0x5 <L1>\}
	bra	L2
   3:	20 02       	bra	0x7 <L2>
			3: R_M68HC12_RL_JUMP	\*ABS\*

0+5 <L1>:
   5:	aa bb       	oraa	5,SP\-

0+7 <L2>:
L1:
	.dc.w	0xaabb
L2:
	subd	L1,pc		; Assemble to 5\-bit < 0 offset
   7:	a3 dc       	subd	0xfffc,PC \{0x5 <L1>\}

0+9 <L3>:
   9:	a7          	nop
   a:	a7          	nop
   b:	a7          	nop
   c:	a7          	nop
   d:	a7          	nop
   e:	a7          	nop
   f:	a7          	nop
  10:	a7          	nop
  11:	a7          	nop
  12:	a7          	nop
  13:	a7          	nop
  14:	a7          	nop
  15:	a7          	nop
  16:	a7          	nop
L3:
	.ds.b	14, 0xA7
	ldab	L3,pc		; 5\-bit < 0 offset
  17:	e6 d0       	ldab	0xfff0,PC \{0x9 <L3>\}
	ldab	L4,pc		; 5\-bit > 0 offset
  19:	e6 cf       	ldab	0xf,PC \{0x2a <L4>\}
	...

0+2a <L4>:
	...
	.skip	15
L4:
	.skip	128
	subd	L4,pc		; 9\-bit < 0 offset
  aa:	a3 f9 7d    	subd	0xff7d,PC \{0x2a <L4>\}
	addd	L5,pc		; 9\-bit > 0 offset
  ad:	e3 f8 80    	addd	0x80,PC \{0x130 <L5>\}
	...

0+130 <L5>:
	...
 22c:	00          	bgnd
	.skip	128
L5:
	.skip	256\-3
	orab	L5,pc		; 9 bit < 0 offset \(min value\)
 22d:	ea f9 00    	orab	0xff00,PC \{0x130 <L5>\}
	oraa	L6,pc		; 9 bit > 0 offset \(max value\)
 230:	aa f8 ff    	oraa	0xff,PC \{0x332 <L6>\}
	...

0+332 <L6>:
	...
 42e:	00          	bgnd
 42f:	00          	bgnd
	.skip	255
L6:
	.skip	256\-2
	orab	L6,pc		; 16 bit < 0 offset
 430:	ea fa fe fe 	orab	0xfefe,PC \{0x332 <L6>\}
	anda	_main,pc	; 16 bit < 0 offset
 434:	a4 fa fb c8 	anda	0xfbc8,PC \{0x0 <_main>\}
	andb	L7,pc
 438:	e4 fa 01 00 	andb	0x100,PC \{0x53c <L7>\}
	...

0+53c <L7>:
	.skip	256
L7:
	stab	external,pc	; External 16\-bit PCREL
 53c:	6b fa fa c0 	stab	0xfac0,PC \{0x0 <_main>\}
			53e: R_M68HC12_PCREL_16	external
	ldd	_table,pc
 540:	ec cf       	ldd	0xf,PC \{0x551 <_table>\}
	addd	_table\+2,pc
 542:	e3 cf       	addd	0xf,PC \{0x553 <_table\+0x2>\}
	subd	_table\+4,pc
 544:	a3 cf       	subd	0xf,PC \{0x555 <_table\+0x4>\}
	addd	_table\+8,pc
 546:	e3 f8 10    	addd	0x10,PC \{0x559 <_table\+0x8>\}
	addd	_table\+12,pc
 549:	e3 f8 11    	addd	0x11,PC \{0x55d <_table\+0xc>\}
	addd	_table\+16,pc
 54c:	e3 f8 12    	addd	0x12,PC \{0x561 <_table\+0x10>\}
	rts
 54f:	3d          	rts
	nop
 550:	a7          	nop

0+551 <_table>:
	...
_table:
	.ds.b	16,0
	leax	_table,sp	; 16\-bit absolute reloc
 561:	1a f2 00 00 	leax	0x0,SP
			563: R_M68HC12_16	_table
	leay	_table,x
 565:	19 e2 00 00 	leay	0x0,X
			567: R_M68HC12_16	_table
	leax	_table,y
 569:	1a ea 00 00 	leax	0x0,Y
			56b: R_M68HC12_16	_table
@


1.4
log
@* gas/m68hc11/bug-1825.d: Update to match changes in the
  information generated with source-in-disassembly listings.
  * gas/m68hc11/indexed12.d: Likewise.
  * gas/m68hc11/insns-dwarf2.d: Likewise.
  * gas/m68hc11/lbranch-dwarf2.d: Likewise.
@
text
@d18 1
a18 1
   1:	ee c2       	ldx	2,PC \{5 <L1>\}
d20 1
a20 1
   3:	20 02       	bra	7 <L2>
d31 1
a31 1
   7:	a3 dc       	subd	\-4,PC \{5 <L1>\}
d51 1
a51 1
  17:	e6 d0       	ldab	\-16,PC \{9 <L3>\}
d53 1
a53 1
  19:	e6 cf       	ldab	15,PC \{2a <L4>\}
d62 1
a62 1
  aa:	a3 f9 7d    	subd	\-131,PC \{2a <L4>\}
d64 1
a64 1
  ad:	e3 f8 80    	addd	128,PC \{130 <L5>\}
d74 1
a74 1
 22d:	ea f9 00    	orab	\-256,PC \{130 <L5>\}
d76 1
a76 1
 230:	aa f8 ff    	oraa	255,PC \{332 <L6>\}
d87 1
a87 1
 430:	ea fa fe fe 	orab	\-258,PC \{332 <L6>\}
d89 1
a89 1
 434:	a4 fa fb c8 	anda	\-1080,PC \{0 <_main>\}
d91 1
a91 1
 438:	e4 fa 01 00 	andb	256,PC \{53c <L7>\}
d98 1
a98 1
 53c:	6b fa fa c0 	stab	\-1344,PC \{0 <_main>\}
d101 1
a101 1
 540:	ec cf       	ldd	15,PC \{551 <_table>\}
d103 1
a103 1
 542:	e3 cf       	addd	15,PC \{553 <_table\+0x2>\}
d105 1
a105 1
 544:	a3 cf       	subd	15,PC \{555 <_table\+0x4>\}
d107 1
a107 1
 546:	e3 f8 10    	addd	16,PC \{559 <_table\+0x8>\}
d109 1
a109 1
 549:	e3 f8 11    	addd	17,PC \{55d <_table\+0xc>\}
d111 1
a111 1
 54c:	e3 f8 12    	addd	18,PC \{561 <_table\+0x10>\}
d122 1
a122 1
 561:	1a f2 00 00 	leax	0,SP
d125 1
a125 1
 565:	19 e2 00 00 	leay	0,X
d128 1
a128 1
 569:	1a ea 00 00 	leax	0,Y
@


1.3
log
@	* gas/m68hc11/bug-1825.d (_table): Update.
	* gas/m68hc11/bug-1825.s (_table): Add tests for 16-bit absolute relocs
@
text
@d10 1
@


1.2
log
@	* gas/m68hc11/bug-1825.s: Add some tests.
	* gas/m68hc11/bug-1825.d: Update.
	* gas/m68hc11/opers12.d: Update.
	* gas/m68hc11/opers12-dwarf2.d: Update.
@
text
@d110 1
a110 1
 54c:	e3 f8 12    	addd	18,PC \{561 <.L0>\}
d118 11
@


1.1
log
@	* gas/m68hc11/m68hc11.exp: Rename from all.exp; run the new tests.
	* gas/m68hc11/all.exp: Remove.
	* gas/m68hc11/indexed12.d: New test.
	* gas/m68hc11/indexed12.s: Likewise.
	* gas/m68hc11/bug-1825.d: Likewise.
	* gas/m68hc11/bug-1825.s: Likewise.
@
text
@d16 1
a16 1
	ldx	L1,pc		; Assemble to 5-bit > 0 offset
d29 1
a29 1
	subd	L1,pc		; Assemble to 5-bit < 0 offset
d49 1
a49 1
	ldab	L3,pc		; 5-bit < 0 offset
d51 2
a52 2
	ldab	L4,pc		; 5-bit > 0 offset
  19:	e6 f8 20    	ldab	32,PC \{3b <L4>\} # SCz: FIXME this is wrong
d55 1
a55 1
0+3b <L4>:
d57 1
a57 1
	.skip	31
d60 4
a63 4
	subd	L4,pc		; 9-bit < 0 offset
  bb:	a3 f9 7e    	subd	\-130,PC \{3b <L4>\}
	addd	L5,pc		; 9-bit > 0 offset
  be:	e3 f8 81    	addd	129,PC \{141 <L5>\} # SCz: FIXME
d66 1
a66 1
0+141 <L5>:
d68 1
a68 2
 23d:	00          	bgnd
 23e:	00          	bgnd
d71 5
a75 5
	.skip	256-2
	orab	L5,pc		; 9 bit < 0 offset (min value)
 23f:	ea f9 00    	orab	-256,PC \{141 <L5>\}
	oraa	L6,pc		; 9 bit > 0 offset (max value)
 242:	aa fa 00 ff 	oraa	255,PC \{343 <L5\+0x202>\} # SCz: FIXME
d78 4
a81 1
0+345 <L6>:
d84 3
d88 1
a88 1
 345:	a4 fa fc b7 	anda	-841,PC \{fffffffe <\.L0\+0xfffffb8c>\} # SCz: FIXME
d90 1
a90 1
 349:	e4 fa 01 00 	andb	256,PC \{44b <L6\+0x106>\} # SCz: FIXME
d93 1
a93 1
0+44d <L7>:
d97 2
a98 2
 44d:	6b fa 00 00 	stab	0,PC \{44f <L7\+0x2>\}
			44f: R_M68HC12_16	external # SCz: FIXME
d100 1
a100 1
 451:	ec cf       	ldd	15,PC \{462 <_table>\}
d102 1
a102 1
 453:	e3 cf       	addd	15,PC \{464 <_table\+0x2>\}
d104 1
a104 1
 455:	a3 cf       	subd	15,PC \{466 <_table\+0x4>\}
d106 1
a106 1
 457:	e3 f8 11    	addd	17,PC \{46a <_table\+0x8>\}
d108 1
a108 1
 45a:	e3 f8 12    	addd	18,PC \{46e <_table\+0xc>\}
d110 1
a110 1
 45d:	e3 f8 13    	addd	19,PC \{472 <.L0>\}
d112 1
a112 1
 460:	3d          	rts
d114 1
a114 1
 461:	a7          	nop
d116 2
a117 2
0+462 <_table>:
	\.\.\.
@

