head	1.3;
access;
symbols
	binutils-2_24-branch:1.3.0.4
	binutils-2_24-branchpoint:1.3
	binutils-2_21_1:1.2
	binutils-2_23_2:1.3
	binutils-2_23_1:1.3
	binutils-2_23:1.3
	binutils-2_23-branch:1.3.0.2
	binutils-2_23-branchpoint:1.3
	binutils-2_22_branch:1.2.0.36
	binutils-2_22:1.2
	binutils-2_22-branch:1.2.0.34
	binutils-2_22-branchpoint:1.2
	binutils-2_21:1.2
	binutils-2_21-branch:1.2.0.32
	binutils-2_21-branchpoint:1.2
	binutils-2_20_1:1.2
	binutils-2_20:1.2
	binutils-arc-20081103-branch:1.2.0.30
	binutils-arc-20081103-branchpoint:1.2
	binutils-2_20-branch:1.2.0.28
	binutils-2_20-branchpoint:1.2
	dje-cgen-play1-branch:1.2.0.26
	dje-cgen-play1-branchpoint:1.2
	arc-20081103-branch:1.2.0.24
	arc-20081103-branchpoint:1.2
	binutils-2_19_1:1.2
	binutils-2_19:1.2
	binutils-2_19-branch:1.2.0.22
	binutils-2_19-branchpoint:1.2
	binutils-2_18:1.2
	binutils-2_18-branch:1.2.0.20
	binutils-2_18-branchpoint:1.2
	binutils-csl-coldfire-4_1-32:1.2
	binutils-csl-sourcerygxx-4_1-32:1.2
	binutils-csl-innovasic-fido-3_4_4-33:1.2
	binutils-csl-sourcerygxx-3_4_4-32:1.2
	binutils-csl-coldfire-4_1-30:1.2
	binutils-csl-sourcerygxx-4_1-30:1.2
	binutils-csl-coldfire-4_1-28:1.2
	binutils-csl-sourcerygxx-4_1-29:1.2
	binutils-csl-sourcerygxx-4_1-28:1.2
	binutils-csl-arm-2006q3-27:1.2
	binutils-csl-sourcerygxx-4_1-27:1.2
	binutils-csl-arm-2006q3-26:1.2
	binutils-csl-sourcerygxx-4_1-26:1.2
	binutils-csl-sourcerygxx-4_1-25:1.2
	binutils-csl-sourcerygxx-4_1-24:1.2
	binutils-csl-sourcerygxx-4_1-23:1.2
	binutils-csl-sourcerygxx-4_1-21:1.2
	binutils-csl-arm-2006q3-21:1.2
	binutils-csl-sourcerygxx-4_1-22:1.2
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.2
	binutils-csl-sourcerygxx-4_1-20:1.2
	binutils-csl-arm-2006q3-19:1.2
	binutils-csl-sourcerygxx-4_1-19:1.2
	binutils-csl-sourcerygxx-4_1-18:1.2
	binutils-csl-renesas-4_1-9:1.2
	binutils-csl-sourcerygxx-3_4_4-25:1.2
	binutils-csl-renesas-4_1-8:1.2
	binutils-csl-renesas-4_1-7:1.2
	binutils-csl-renesas-4_1-6:1.2
	binutils-csl-sourcerygxx-4_1-17:1.2
	binutils-csl-sourcerygxx-4_1-14:1.2
	binutils-csl-sourcerygxx-4_1-15:1.2
	binutils-csl-sourcerygxx-4_1-13:1.2
	binutils-2_17:1.2
	binutils-csl-sourcerygxx-4_1-12:1.2
	binutils-csl-sourcerygxx-3_4_4-21:1.2
	binutils-csl-wrs-linux-3_4_4-24:1.2
	binutils-csl-wrs-linux-3_4_4-23:1.2
	binutils-csl-sourcerygxx-4_1-9:1.2
	binutils-csl-sourcerygxx-4_1-8:1.2
	binutils-csl-sourcerygxx-4_1-7:1.2
	binutils-csl-arm-2006q1-6:1.2
	binutils-csl-sourcerygxx-4_1-6:1.2
	binutils-csl-wrs-linux-3_4_4-22:1.2
	binutils-csl-coldfire-4_1-11:1.2
	binutils-csl-sourcerygxx-3_4_4-19:1.2
	binutils-csl-coldfire-4_1-10:1.2
	binutils-csl-sourcerygxx-4_1-5:1.2
	binutils-csl-sourcerygxx-4_1-4:1.2
	binutils-csl-wrs-linux-3_4_4-21:1.2
	binutils-csl-morpho-4_1-4:1.2
	binutils-csl-sourcerygxx-3_4_4-17:1.2
	binutils-csl-wrs-linux-3_4_4-20:1.2
	binutils-2_17-branch:1.2.0.18
	binutils-2_17-branchpoint:1.2
	binutils-csl-2_17-branch:1.2.0.16
	binutils-csl-2_17-branchpoint:1.2
	binutils-csl-gxxpro-3_4-branch:1.2.0.14
	binutils-csl-gxxpro-3_4-branchpoint:1.2
	binutils-2_16_1:1.2
	binutils-csl-arm-2005q1b:1.2
	binutils-2_16:1.2
	binutils-csl-arm-2005q1a:1.2
	binutils-csl-arm-2005q1-branch:1.2.0.12
	binutils-csl-arm-2005q1-branchpoint:1.2
	binutils-2_16-branch:1.2.0.10
	binutils-2_16-branchpoint:1.2
	csl-arm-2004-q3d:1.2
	csl-arm-2004-q3:1.2
	binutils-2_15:1.2
	binutils-2_15-branchpoint:1.2
	csl-arm-2004-q1a:1.2
	csl-arm-2004-q1:1.2
	binutils-2_15-branch:1.2.0.8
	cagney_bfdfile-20040213-branch:1.2.0.6
	cagney_bfdfile-20040213-branchpoint:1.2
	cagney_bigcore-20040122-branch:1.2.0.4
	cagney_bigcore-20040122-branchpoint:1.2
	csl-arm-2003-q4:1.2
	binutils-2_14:1.2
	binutils-2_14-branch:1.2.0.2
	binutils-2_14-branchpoint:1.2
	binutils_latest_snapshot:1.3;
locks; strict;
comment	@# @;


1.3
date	2012.05.15.12.55.39;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	2002.12.01.14.25.09;	author ciceron;	state Exp;
branches;
next	1.1;

1.1
date	2002.08.13.22.45.22;	author ciceron;	state Exp;
branches;
next	;


desc
@@


1.3
log
@	* config/tc-m68hc11.c: Add S12X and XGATE co-processor support.
	Add option to offset S12 addresses into XGATE memory space.
	Tweak target flags to match other tools. (i.e. -m m68hc11).
	* doc/as.texinfo: Mention new options.
	* doc/c-m68hc11.texi: Document new options.
	* NEWS: Mention new support.

	* archures.c: Add bfd_arch_m9s12x and bfd_arch_m9s12xg.
	* config.bfd: Likewise.
	* cpu-m9s12x.c: New.
	* cpu-m9s12xg.c: New.
	* elf32-m68hc12.c: Add S12X and XGATE co-processor support.
	Add option to offset S12 addresses into XGATE memory space.
	Fix carry bug in IMM16 (IMM8 low/high) relocate.
	* Makefile.am (ALL_MACHINES): Add cpu-m9s12x and cpu-m9s12xg.
	(ALL_MACHINES_CFILES): Likewise.
	* reloc.c: Add S12X relocs.
	* Makefile.in: Regenerate.
	* bfd-in2.h: Regenerate.
	* libbfd.h: Regenerate.

	* gas/m68hc11/insns9s12x.s: New
	* gas/m68hc11/insns9s12x.d: New
	* gas/m68hc11/hexprefix.s: New
	* gas/m68hc11/hexprefix.d: New
	* gas/m68hc11/9s12x-exg-sex-tfr.s: New
	* gas/m68hc11/9s12x-exg-sex-tfr.d: New
	* gas/m68hc11/insns9s12xg.s: New
	* gas/m68hc11/insns9s12xg.d: New
	* gas/m68hc11/9s12x-mov.s: New
	* gas/m68hc11/9s12x-mov.d: New
	* gas/m68hc11/m68hc11.exp: Updated
	* gas/m68hc11/*.d: Brought in line with changed objdump output.
	* gas/all/gas.exp: XFAIL all hc11/12 targets for redef2,3.
	* gas/elf/elf.exp: XFAIL all hc11/12 targets for redef.
	* gas/elf/dwarf2-1.d: Skip for hc11/12 targets.
	* gas/elf/dwarf2-2.d: Likewise.

	* ld-m68hc11/xgate-link.s: New.
	* ld-m68hc11/xgate-link.d: New.
	* ld-m68hc11/xgate-offset.s: New.
	* ld-m68hc11/xgate-offset.d: New.
	* ld-m68hc11/xgate1.s: New.
	* ld-m68hc11/xgate1.d: New.
	* ld-m68hc11/xgate2.s: New.
	* ld-m68hc11/m68hc11.exp: Updated.
	* ld-m68hc11/*.d: Brought in line with changed objdump output.
	* ld-gc/gc.exp: Update CFLAGS for m68hc11.
	* ld-plugin/plugin.exp: Likewise.
	* ld-srec/srec.exp: XFAIL for m68hc11 and m68hc12.

	* configure.in: Add S12X and XGATE co-processor support to m68hc11
	target.
	* disassemble.c: Likewise.
	* configure: Regenerate.
	* m68hc11-dis.c: Make objdump output more consistent, use hex
	instead of decimal and use 0x prefix for hex.
	* m68hc11-opc.c: Add S12X and XGATE opcodes.
	* dis-asm.h (print_insn_m9s12x): Prototype.
	(print_insn_m9s12xg): Prototype.

	* m68hc11.h (R_M68HC12_16B, R_M68HC12_PCREL_9, R_M68HC12_PCREL_10)
	R_M68HC12_HI8XG, R_M68HC12_LO8XG): New relocations.
	(E_M68HC11_XGATE_RAMOFFSET): Define.

	* m68hc11.h: Add XGate definitions.
	(struct m68hc11_opcode): Add xg_mask field.
@
text
@#objdump: -d --prefix-addresses --reloc
#as: -m68hc12
#name: 68HC12 specific instructions (insns12)

.*:  +file format elf32-m68hc12

Disassembly of section .text:
0+ <call_test> call	0x0+ <call_test> \{0x0+ <call_test>, 0x0\}
			0: R_M68HC12_RL_JUMP	\*ABS\*
			1: R_M68HC12_24	_foo
0+4 <call_test\+0x4> call	0x0+ <call_test> \{0x0+ <call_test>, 0x1\}
			4: R_M68HC12_RL_JUMP	\*ABS\*
			5: R_M68HC12_LO16	_foo
0+8 <call_test\+0x8> call	0x0+ <call_test> \{0x0+ <call_test>, 0x0\}
			8: R_M68HC12_RL_JUMP	\*ABS\*
			9: R_M68HC12_LO16	_foo
			b: R_M68HC12_PAGE	foo_page
0+c <call_test\+0xc> call	0x0,X, 0x3
			c: R_M68HC12_RL_JUMP	\*ABS\*
0+f <call_test\+0xf> call	0x4,Y, 0xc
			f: R_M68HC12_RL_JUMP	\*ABS\*
0+12 <call_test\+0x12> call	0x7,SP, 0xd
			12: R_M68HC12_RL_JUMP	\*ABS\*
0+15 <call_test\+0x15> call	0xc,X, 0x0
			15: R_M68HC12_RL_JUMP	\*ABS\*
			17: R_M68HC12_PAGE	foo_page
0+18 <call_test\+0x18> call	0x4,Y, 0x0
			18: R_M68HC12_RL_JUMP	\*ABS\*
			1a: R_M68HC12_PAGE	foo_page
0+1b <call_test\+0x1b> call	0x7,SP, 0x0
			1b: R_M68HC12_RL_JUMP	\*ABS\*
			1d: R_M68HC12_PAGE	foo_page
0+1e <call_test\+0x1e> call	\[D,X\]
			1e: R_M68HC12_RL_JUMP	\*ABS\*
0+20 <call_test\+0x20> ldab	\[0x7fff,SP\]
0+24 <call_test\+0x24> call	\[0x800,SP\]
			24: R_M68HC12_RL_JUMP	\*ABS\*
0+28 <call_test\+0x28> call	\[0x0,X\]
			28: R_M68HC12_RL_JUMP	\*ABS\*
			2a: R_M68HC12_16	_foo
0+2c <call_test\+0x2c> rtc
0+2d <special_test> emacs	0x0+ <call_test>
			2f: R_M68HC12_16	_foo
0+31 <special_test\+0x4> maxa	0x0,X
0+34 <special_test\+0x7> maxa	0x333,Y
0+39 <special_test\+0xc> maxa	\[D,X\]
0+3c <special_test\+0xf> maxa	\[0x0,X\]
			3f: R_M68HC12_16	_foo
0+41 <special_test\+0x14> maxm	0x0,X
0+44 <special_test\+0x17> maxm	0x333,Y
0+49 <special_test\+0x1c> maxm	\[D,X\]
0+4c <special_test\+0x1f> maxm	\[0x0,X\]
			4f: R_M68HC12_16	_foo
0+51 <special_test\+0x24> emaxd	0x0,X
0+54 <special_test\+0x27> emaxd	0x333,Y
0+59 <special_test\+0x2c> emaxd	\[D,X\]
0+5c <special_test\+0x2f> emaxd	\[0x0,X\]
			5f: R_M68HC12_16	_foo
0+61 <special_test\+0x34> emaxm	0x0,X
0+64 <special_test\+0x37> emaxm	0x333,Y
0+69 <special_test\+0x3c> emaxm	\[D,X\]
0+6c <special_test\+0x3f> emaxm	\[0x0,X\]
			6f: R_M68HC12_16	_foo
0+71 <special_test\+0x44> mina	0x0,X
0+74 <special_test\+0x47> mina	0x333,Y
0+79 <special_test\+0x4c> mina	\[D,X\]
0+7c <special_test\+0x4f> mina	\[0x0,X\]
			7f: R_M68HC12_16	_foo
0+81 <special_test\+0x54> minm	0x0,X
0+84 <special_test\+0x57> minm	0x333,Y
0+89 <special_test\+0x5c> minm	\[D,X\]
0+8c <special_test\+0x5f> minm	\[0x0,X\]
			8f: R_M68HC12_16	_foo
0+91 <special_test\+0x64> emind	0x0,X
0+94 <special_test\+0x67> emind	0x333,Y
0+99 <special_test\+0x6c> emind	\[D,X\]
0+9c <special_test\+0x6f> emind	\[0x0,X\]
			9f: R_M68HC12_16	_foo
0+a1 <special_test\+0x74> emul
0+a2 <special_test\+0x75> emuls
0+a4 <special_test\+0x77> etbl	0x3,X
0+a7 <special_test\+0x7a> etbl	0x4,PC \{0x0+ae <special_test\+0x81>\}
0+aa <special_test\+0x7d> rev
0+ac <special_test\+0x7f> revw
0+ae <special_test\+0x81> wav
@


1.2
log
@	* gas/m68hc11/insns.s: Don't use .comm for stack symbol so that objdump
	can find the real symbol and not a gas internal debug symbol.
	* gas/m68hc11/insns.d: Update.
	* gas/m68hc11/insns-dwarf2.d: Update.
	* gas/m68hc11/insns12.d: Update.
	* gas/m68hc11/opers12.s (min5b, min9b): Use 16 and -256 for the min.
	* gas/m68hc11/opers12.d: Update after indexed offset operand fixes.
	* gas/m68hc11/opers12-dwarf2.d: Likewise.
@
text
@d8 1
a8 1
0+ <call_test> call	0+ <call_test> \{0+ <call_test>, 0\}
d11 1
a11 1
0+4 <call_test\+0x4> call	0+ <call_test> \{0+ <call_test>, 1\}
d14 1
a14 1
0+8 <call_test\+0x8> call	0+ <call_test> \{0+ <call_test>, 0\}
d18 1
a18 1
0+c <call_test\+0xc> call	0,X, 3
d20 1
a20 1
0+f <call_test\+0xf> call	4,Y, 12
d22 1
a22 1
0+12 <call_test\+0x12> call	7,SP, 13
d24 1
a24 1
0+15 <call_test\+0x15> call	12,X, 0
d27 1
a27 1
0+18 <call_test\+0x18> call	4,Y, 0
d30 1
a30 1
0+1b <call_test\+0x1b> call	7,SP, 0
d35 2
a36 2
0+20 <call_test\+0x20> ldab	\[32767,SP\]
0+24 <call_test\+0x24> call	\[2048,SP\]
d38 1
a38 1
0+28 <call_test\+0x28> call	\[0,X\]
d42 1
a42 1
0+2d <special_test> emacs	0+ <call_test>
d44 2
a45 2
0+31 <special_test\+0x4> maxa	0,X
0+34 <special_test\+0x7> maxa	819,Y
d47 1
a47 1
0+3c <special_test\+0xf> maxa	\[0,X\]
d49 2
a50 2
0+41 <special_test\+0x14> maxm	0,X
0+44 <special_test\+0x17> maxm	819,Y
d52 1
a52 1
0+4c <special_test\+0x1f> maxm	\[0,X\]
d54 2
a55 2
0+51 <special_test\+0x24> emaxd	0,X
0+54 <special_test\+0x27> emaxd	819,Y
d57 1
a57 1
0+5c <special_test\+0x2f> emaxd	\[0,X\]
d59 2
a60 2
0+61 <special_test\+0x34> emaxm	0,X
0+64 <special_test\+0x37> emaxm	819,Y
d62 1
a62 1
0+6c <special_test\+0x3f> emaxm	\[0,X\]
d64 2
a65 2
0+71 <special_test\+0x44> mina	0,X
0+74 <special_test\+0x47> mina	819,Y
d67 1
a67 1
0+7c <special_test\+0x4f> mina	\[0,X\]
d69 2
a70 2
0+81 <special_test\+0x54> minm	0,X
0+84 <special_test\+0x57> minm	819,Y
d72 1
a72 1
0+8c <special_test\+0x5f> minm	\[0,X\]
d74 2
a75 2
0+91 <special_test\+0x64> emind	0,X
0+94 <special_test\+0x67> emind	819,Y
d77 1
a77 1
0+9c <special_test\+0x6f> emind	\[0,X\]
d81 2
a82 2
0+a4 <special_test\+0x77> etbl	3,X
0+a7 <special_test\+0x7a> etbl	4,PC \{0+ae <special_test\+0x81>\}
@


1.1
log
@	* gas/m68hc11/all.exp: Run the new test.
	* gas/m68hc11/insns12.s: New file to test specific 68HC12 insns.
	* gas/m68hc11/insns12.d: New file.
	* gas/m68hc11/branchs12.s: New test.
	* gas/m68hc11/branchs12.d: New test.

	* gas/m68hc11/all_insns.d: Dump the relocs to verify that they
	are against symbols and not sections (for linker relaxation).
	* gas/m68hc11/insns-dwarf2.d: Likewise.
	* gas/m68hc11/insns.d: Likewise.
	* gas/m68hc11/lbranch.d: Likewise.
	* gas/m68hc11/lbranch-dwarf2.d: Likewise.
	* gas/m68hc11/opers12.d: Likewise.
	* gas/m68hc11/opers12-dwarf2.d: Likewise.
@
text
@d3 1
a3 1
#name: insns12
d82 1
a82 1
0+a7 <special_test\+0x7a> etbl	4,PC
@

