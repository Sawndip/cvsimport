head	1.5;
access;
symbols
	binutils-2_24-branch:1.5.0.40
	binutils-2_24-branchpoint:1.5
	binutils-2_21_1:1.5
	binutils-2_23_2:1.5
	binutils-2_23_1:1.5
	binutils-2_23:1.5
	binutils-2_23-branch:1.5.0.38
	binutils-2_23-branchpoint:1.5
	binutils-2_22_branch:1.5.0.36
	binutils-2_22:1.5
	binutils-2_22-branch:1.5.0.34
	binutils-2_22-branchpoint:1.5
	binutils-2_21:1.5
	binutils-2_21-branch:1.5.0.32
	binutils-2_21-branchpoint:1.5
	binutils-2_20_1:1.5
	binutils-2_20:1.5
	binutils-arc-20081103-branch:1.5.0.30
	binutils-arc-20081103-branchpoint:1.5
	binutils-2_20-branch:1.5.0.28
	binutils-2_20-branchpoint:1.5
	dje-cgen-play1-branch:1.5.0.26
	dje-cgen-play1-branchpoint:1.5
	arc-20081103-branch:1.5.0.24
	arc-20081103-branchpoint:1.5
	binutils-2_19_1:1.5
	binutils-2_19:1.5
	binutils-2_19-branch:1.5.0.22
	binutils-2_19-branchpoint:1.5
	binutils-2_18:1.5
	binutils-2_18-branch:1.5.0.20
	binutils-2_18-branchpoint:1.5
	binutils-csl-coldfire-4_1-32:1.5
	binutils-csl-sourcerygxx-4_1-32:1.5
	binutils-csl-innovasic-fido-3_4_4-33:1.5
	binutils-csl-sourcerygxx-3_4_4-32:1.5
	binutils-csl-coldfire-4_1-30:1.5
	binutils-csl-sourcerygxx-4_1-30:1.5
	binutils-csl-coldfire-4_1-28:1.5
	binutils-csl-sourcerygxx-4_1-29:1.5
	binutils-csl-sourcerygxx-4_1-28:1.5
	binutils-csl-arm-2006q3-27:1.5
	binutils-csl-sourcerygxx-4_1-27:1.5
	binutils-csl-arm-2006q3-26:1.5
	binutils-csl-sourcerygxx-4_1-26:1.5
	binutils-csl-sourcerygxx-4_1-25:1.5
	binutils-csl-sourcerygxx-4_1-24:1.5
	binutils-csl-sourcerygxx-4_1-23:1.5
	binutils-csl-sourcerygxx-4_1-21:1.5
	binutils-csl-arm-2006q3-21:1.5
	binutils-csl-sourcerygxx-4_1-22:1.5
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.5
	binutils-csl-sourcerygxx-4_1-20:1.5
	binutils-csl-arm-2006q3-19:1.5
	binutils-csl-sourcerygxx-4_1-19:1.5
	binutils-csl-sourcerygxx-4_1-18:1.5
	binutils-csl-renesas-4_1-9:1.5
	binutils-csl-sourcerygxx-3_4_4-25:1.5
	binutils-csl-renesas-4_1-8:1.5
	binutils-csl-renesas-4_1-7:1.5
	binutils-csl-renesas-4_1-6:1.5
	binutils-csl-sourcerygxx-4_1-17:1.5
	binutils-csl-sourcerygxx-4_1-14:1.5
	binutils-csl-sourcerygxx-4_1-15:1.5
	binutils-csl-sourcerygxx-4_1-13:1.5
	binutils-2_17:1.5
	binutils-csl-sourcerygxx-4_1-12:1.5
	binutils-csl-sourcerygxx-3_4_4-21:1.5
	binutils-csl-wrs-linux-3_4_4-24:1.5
	binutils-csl-wrs-linux-3_4_4-23:1.5
	binutils-csl-sourcerygxx-4_1-9:1.5
	binutils-csl-sourcerygxx-4_1-8:1.5
	binutils-csl-sourcerygxx-4_1-7:1.5
	binutils-csl-arm-2006q1-6:1.5
	binutils-csl-sourcerygxx-4_1-6:1.5
	binutils-csl-wrs-linux-3_4_4-22:1.5
	binutils-csl-coldfire-4_1-11:1.5
	binutils-csl-sourcerygxx-3_4_4-19:1.5
	binutils-csl-coldfire-4_1-10:1.5
	binutils-csl-sourcerygxx-4_1-5:1.5
	binutils-csl-sourcerygxx-4_1-4:1.5
	binutils-csl-wrs-linux-3_4_4-21:1.5
	binutils-csl-morpho-4_1-4:1.5
	binutils-csl-sourcerygxx-3_4_4-17:1.5
	binutils-csl-wrs-linux-3_4_4-20:1.5
	binutils-2_17-branch:1.5.0.18
	binutils-2_17-branchpoint:1.5
	binutils-csl-2_17-branch:1.5.0.16
	binutils-csl-2_17-branchpoint:1.5
	binutils-csl-gxxpro-3_4-branch:1.5.0.14
	binutils-csl-gxxpro-3_4-branchpoint:1.5
	binutils-2_16_1:1.5
	binutils-csl-arm-2005q1b:1.5
	binutils-2_16:1.5
	binutils-csl-arm-2005q1a:1.5
	binutils-csl-arm-2005q1-branch:1.5.0.12
	binutils-csl-arm-2005q1-branchpoint:1.5
	binutils-2_16-branch:1.5.0.10
	binutils-2_16-branchpoint:1.5
	csl-arm-2004-q3d:1.5
	csl-arm-2004-q3:1.5
	binutils-2_15:1.5
	binutils-2_15-branchpoint:1.5
	csl-arm-2004-q1a:1.5
	csl-arm-2004-q1:1.5
	binutils-2_15-branch:1.5.0.8
	cagney_bfdfile-20040213-branch:1.5.0.6
	cagney_bfdfile-20040213-branchpoint:1.5
	cagney_bigcore-20040122-branch:1.5.0.4
	cagney_bigcore-20040122-branchpoint:1.5
	csl-arm-2003-q4:1.5
	binutils-2_14:1.5
	binutils-2_14-branch:1.5.0.2
	binutils-2_14-branchpoint:1.5
	binutils-2_13_2_1:1.4
	binutils-2_13_2:1.4
	binutils-2_13_1:1.4
	binutils-2_13:1.4
	binutils-2_13-branchpoint:1.4
	binutils-2_13-branch:1.4.0.4
	binutils-2_12_1:1.4
	binutils-2_12:1.4
	binutils-2_12-branch:1.4.0.2
	binutils-2_12-branchpoint:1.4
	cygnus_cvs_20020108_pre:1.4
	binutils-2_11_2:1.3
	binutils-2_11_1:1.3
	binutils-2_11:1.3
	x86_64versiong3:1.3
	binutils-2_11-branch:1.3.0.2
	binutils_latest_snapshot:1.5;
locks; strict;
comment	@# @;


1.5
date	2002.12.01.13.46.08;	author ciceron;	state Exp;
branches;
next	1.4;

1.4
date	2001.11.01.09.52.03;	author ciceron;	state Exp;
branches;
next	1.3;

1.3
date	2001.01.11.20.19.17;	author ciceron;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2000.11.26.21.18.15;	author ciceron;	state Exp;
branches;
next	1.1;

1.1
date	2000.06.19.01.22.41;	author nickc;	state Exp;
branches;
next	;

1.3.2.1
date	2001.11.01.09.53.17;	author ciceron;	state Exp;
branches;
next	;


desc
@@


1.5
log
@	* gas/m68hc11/insns.s: Don't use .comm for stack symbol so that objdump
	can find the real symbol and not a gas internal debug symbol.
	* gas/m68hc11/insns.d: Update.
	* gas/m68hc11/insns-dwarf2.d: Update.
	* gas/m68hc11/insns12.d: Update.
	* gas/m68hc11/opers12.s (min5b, min9b): Use 16 and -256 for the min.
	* gas/m68hc11/opers12.d: Update after indexed offset operand fixes.
	* gas/m68hc11/opers12-dwarf2.d: Likewise.
@
text
@
#
# Try to verify all operand modes for 68HC12
#
	sect .text
	globl start

start:
	anda	[12,x]		; Indexed indirect
	ldaa	#10
	ldx	L1
L1:	ldy	,x
	addd	1,y		; Offset from register
	subd	-1,y
	eora	15,y
	eora	-16,y
	eorb	16,y
	eorb	-17,y
	oraa	128,sp
	orab	-128,sp
	orab	255,x
	orab	-256,x
	anda	256,x
	andb	-257,x
	anda	[12,x]		; Indexed indirect (16-bit offset)
	ldaa	[257,y]
	ldab	[32767,sp]
	ldd	[32768,pc]
	ldd	L1,pc
	std	a,x		; Two-reg index
	ldx	b,x
	stx	d,y
	addd	1,+x		; Pre-Auto inc
	addd	2,+x
	addd	8,+x
	addd	1,sp+		; Post-Auto inc
	addd	2,sp+
	addd	8,sp+
	subd	1,-y		; Pre-Auto dec
	subd	2,-y
	subd	8,-y
	addd	1,y-		; Post-Auto dec
	addd	2,y-
	addd	8,y-
	std	[d,x]		; Indexed indirect with two reg index
	std	[d,y]
	std	[d,sp]
	std	[d,pc]
	beq	L1
	lbeq	start
	lbcc	L2
;;
;; Move insn with various operands
;; 
	movb	start, 1,x
	movw	1,x, start
	movb	start, 1,+x
	movb	start, 1,-x
	movb	#23, 1,-sp
	movb	L1, L2
	movb	L1, a,x
	movw	L1, b,x
	movw	L1, d,x
	movw	d,x, a,x
	movw	b,sp, d,pc
	movw	b,sp, L1
	movw	b,sp, 1,x
	movw	d,x, a,y
	trap	#0x30
	trap	#0x39
	trap	#0x40
	trap	#0x80
	trap	#255
L2:	
	movw 1,x,2,x
	movw -1,-1
	movw -1,1,x
	movw #-1,1,x
	movw 3,8
	movw #3,3
	movw #3,1,x
	movw 3,1,x
	movw 3,+2,x
	movw 4,-2,x
	rts
;;
;; Post-index byte with relocation
;; 
post_indexed_pb:
t1:
	leas	abort,x
t2:
	leax	t2-t1,y
	leax	toto,x
	leas	toto+titi,sp
	leay	titi,x
	leas	bb,y
	leas	min5b,pc
	leas	max5b,pc
	leas	min9b,pc
	leas	max9b,pc

;;
;; Disassembler bug with movb
;;
	movb	#23,0x2345
	movb	#40,12,sp
	movb	#39,3,+sp
	movb	#20,14,sp
	movw	#0x3210,0x3456
	movw	#0x4040,12,sp
	movw	#0x3900,3,+sp
	movw	#0x2000,14,sp
#	movb	#111,start

titi = 10
toto = 100
min5b= -16
max5b= 15
min9b= -256
max9b= 255
bb = 10240
@


1.4
log
@	* gas/m68hc11/opers12.s: Add test for disassembler bug with movb
	instruction.
	* gas/m68hc11/opers12.d: Likewise.
	* gas/m68hc11/opers12-dwarf2.d: Likewise.
@
text
@d118 1
a118 1
min5b= -15
d120 1
a120 1
min9b= -255
@


1.3
log
@Fix gas 68HC12 indexed addressing code generation
@
text
@d103 13
@


1.3.2.1
log
@	* gas/m68hc11/opers12.s: Add test for disassembler bug with movb
	instruction.
	* gas/m68hc11/opers12.d: Likewise.
	* gas/m68hc11/opers12-dwarf2.d: Likewise.
@
text
@a102 13
;;
;; Disassembler bug with movb
;;
	movb	#23,0x2345
	movb	#40,12,sp
	movb	#39,3,+sp
	movb	#20,14,sp
	movw	#0x3210,0x3456
	movw	#0x4040,12,sp
	movw	#0x3900,3,+sp
	movw	#0x2000,14,sp
#	movb	#111,start

@


1.2
log
@Fix movw/movb operands for 68HC12
@
text
@d9 1
a9 1
	anda	[12,x]
d13 1
a13 1
	addd	1,y
d25 1
a25 1
	anda	[12,x]
d30 1
a30 1
	std	a,x
d33 1
a33 1
	addd	1,+x
d36 1
a36 1
	addd	1,sp+
d39 1
a39 1
	subd	1,-y
d42 1
a42 1
	addd	1,y-
d45 1
a45 1
	std	[d,x]
d52 3
d86 24
@


1.1
log
@Applied Stephane Carrez <Stephane.Carrez@@worldnet.fr> patches to add support
for m68hc11 and m68hc12 processors.
@
text
@d72 10
@

