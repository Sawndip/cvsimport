head	1.6;
access;
symbols
	binutils-2_24-branch:1.6.0.4
	binutils-2_24-branchpoint:1.6
	binutils-2_21_1:1.5
	binutils-2_23_2:1.6
	binutils-2_23_1:1.6
	binutils-2_23:1.6
	binutils-2_23-branch:1.6.0.2
	binutils-2_23-branchpoint:1.6
	binutils-2_22_branch:1.5.0.36
	binutils-2_22:1.5
	binutils-2_22-branch:1.5.0.34
	binutils-2_22-branchpoint:1.5
	binutils-2_21:1.5
	binutils-2_21-branch:1.5.0.32
	binutils-2_21-branchpoint:1.5
	binutils-2_20_1:1.5
	binutils-2_20:1.5
	binutils-arc-20081103-branch:1.5.0.30
	binutils-arc-20081103-branchpoint:1.5
	binutils-2_20-branch:1.5.0.28
	binutils-2_20-branchpoint:1.5
	dje-cgen-play1-branch:1.5.0.26
	dje-cgen-play1-branchpoint:1.5
	arc-20081103-branch:1.5.0.24
	arc-20081103-branchpoint:1.5
	binutils-2_19_1:1.5
	binutils-2_19:1.5
	binutils-2_19-branch:1.5.0.22
	binutils-2_19-branchpoint:1.5
	binutils-2_18:1.5
	binutils-2_18-branch:1.5.0.20
	binutils-2_18-branchpoint:1.5
	binutils-csl-coldfire-4_1-32:1.5
	binutils-csl-sourcerygxx-4_1-32:1.5
	binutils-csl-innovasic-fido-3_4_4-33:1.5
	binutils-csl-sourcerygxx-3_4_4-32:1.5
	binutils-csl-coldfire-4_1-30:1.5
	binutils-csl-sourcerygxx-4_1-30:1.5
	binutils-csl-coldfire-4_1-28:1.5
	binutils-csl-sourcerygxx-4_1-29:1.5
	binutils-csl-sourcerygxx-4_1-28:1.5
	binutils-csl-arm-2006q3-27:1.5
	binutils-csl-sourcerygxx-4_1-27:1.5
	binutils-csl-arm-2006q3-26:1.5
	binutils-csl-sourcerygxx-4_1-26:1.5
	binutils-csl-sourcerygxx-4_1-25:1.5
	binutils-csl-sourcerygxx-4_1-24:1.5
	binutils-csl-sourcerygxx-4_1-23:1.5
	binutils-csl-sourcerygxx-4_1-21:1.5
	binutils-csl-arm-2006q3-21:1.5
	binutils-csl-sourcerygxx-4_1-22:1.5
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.5
	binutils-csl-sourcerygxx-4_1-20:1.5
	binutils-csl-arm-2006q3-19:1.5
	binutils-csl-sourcerygxx-4_1-19:1.5
	binutils-csl-sourcerygxx-4_1-18:1.5
	binutils-csl-renesas-4_1-9:1.5
	binutils-csl-sourcerygxx-3_4_4-25:1.5
	binutils-csl-renesas-4_1-8:1.5
	binutils-csl-renesas-4_1-7:1.5
	binutils-csl-renesas-4_1-6:1.5
	binutils-csl-sourcerygxx-4_1-17:1.5
	binutils-csl-sourcerygxx-4_1-14:1.5
	binutils-csl-sourcerygxx-4_1-15:1.5
	binutils-csl-sourcerygxx-4_1-13:1.5
	binutils-2_17:1.5
	binutils-csl-sourcerygxx-4_1-12:1.5
	binutils-csl-sourcerygxx-3_4_4-21:1.5
	binutils-csl-wrs-linux-3_4_4-24:1.5
	binutils-csl-wrs-linux-3_4_4-23:1.5
	binutils-csl-sourcerygxx-4_1-9:1.5
	binutils-csl-sourcerygxx-4_1-8:1.5
	binutils-csl-sourcerygxx-4_1-7:1.5
	binutils-csl-arm-2006q1-6:1.5
	binutils-csl-sourcerygxx-4_1-6:1.5
	binutils-csl-wrs-linux-3_4_4-22:1.5
	binutils-csl-coldfire-4_1-11:1.5
	binutils-csl-sourcerygxx-3_4_4-19:1.5
	binutils-csl-coldfire-4_1-10:1.5
	binutils-csl-sourcerygxx-4_1-5:1.5
	binutils-csl-sourcerygxx-4_1-4:1.5
	binutils-csl-wrs-linux-3_4_4-21:1.5
	binutils-csl-morpho-4_1-4:1.5
	binutils-csl-sourcerygxx-3_4_4-17:1.5
	binutils-csl-wrs-linux-3_4_4-20:1.5
	binutils-2_17-branch:1.5.0.18
	binutils-2_17-branchpoint:1.5
	binutils-csl-2_17-branch:1.5.0.16
	binutils-csl-2_17-branchpoint:1.5
	binutils-csl-gxxpro-3_4-branch:1.5.0.14
	binutils-csl-gxxpro-3_4-branchpoint:1.5
	binutils-2_16_1:1.5
	binutils-csl-arm-2005q1b:1.5
	binutils-2_16:1.5
	binutils-csl-arm-2005q1a:1.5
	binutils-csl-arm-2005q1-branch:1.5.0.12
	binutils-csl-arm-2005q1-branchpoint:1.5
	binutils-2_16-branch:1.5.0.10
	binutils-2_16-branchpoint:1.5
	csl-arm-2004-q3d:1.5
	csl-arm-2004-q3:1.5
	binutils-2_15:1.5
	binutils-2_15-branchpoint:1.5
	csl-arm-2004-q1a:1.5
	csl-arm-2004-q1:1.5
	binutils-2_15-branch:1.5.0.8
	cagney_bfdfile-20040213-branch:1.5.0.6
	cagney_bfdfile-20040213-branchpoint:1.5
	cagney_bigcore-20040122-branch:1.5.0.4
	cagney_bigcore-20040122-branchpoint:1.5
	csl-arm-2003-q4:1.5
	binutils-2_14:1.5
	binutils-2_14-branch:1.5.0.2
	binutils-2_14-branchpoint:1.5
	binutils-2_13_2_1:1.1
	binutils-2_13_2:1.1
	binutils-2_13_1:1.1
	binutils-2_13:1.1
	binutils-2_13-branchpoint:1.1
	binutils-2_13-branch:1.1.0.6
	binutils-2_12_1:1.1
	binutils-2_12:1.1
	binutils-2_12-branch:1.1.0.4
	binutils-2_12-branchpoint:1.1
	cygnus_cvs_20020108_pre:1.1
	binutils-2_11_2:1.1
	binutils-2_11_1:1.1
	binutils-2_11:1.1
	x86_64versiong3:1.1
	binutils-2_11-branch:1.1.0.2
	binutils_latest_snapshot:1.6;
locks; strict;
comment	@# @;


1.6
date	2012.05.15.12.55.39;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	2003.04.05.12.54.00;	author ciceron;	state Exp;
branches;
next	1.4;

1.4
date	2002.12.01.13.46.08;	author ciceron;	state Exp;
branches;
next	1.3;

1.3
date	2002.08.26.11.35.32;	author amodra;	state Exp;
branches;
next	1.2;

1.2
date	2002.08.13.22.45.22;	author ciceron;	state Exp;
branches;
next	1.1;

1.1
date	2000.06.19.01.22.41;	author nickc;	state Exp;
branches;
next	;


desc
@@


1.6
log
@	* config/tc-m68hc11.c: Add S12X and XGATE co-processor support.
	Add option to offset S12 addresses into XGATE memory space.
	Tweak target flags to match other tools. (i.e. -m m68hc11).
	* doc/as.texinfo: Mention new options.
	* doc/c-m68hc11.texi: Document new options.
	* NEWS: Mention new support.

	* archures.c: Add bfd_arch_m9s12x and bfd_arch_m9s12xg.
	* config.bfd: Likewise.
	* cpu-m9s12x.c: New.
	* cpu-m9s12xg.c: New.
	* elf32-m68hc12.c: Add S12X and XGATE co-processor support.
	Add option to offset S12 addresses into XGATE memory space.
	Fix carry bug in IMM16 (IMM8 low/high) relocate.
	* Makefile.am (ALL_MACHINES): Add cpu-m9s12x and cpu-m9s12xg.
	(ALL_MACHINES_CFILES): Likewise.
	* reloc.c: Add S12X relocs.
	* Makefile.in: Regenerate.
	* bfd-in2.h: Regenerate.
	* libbfd.h: Regenerate.

	* gas/m68hc11/insns9s12x.s: New
	* gas/m68hc11/insns9s12x.d: New
	* gas/m68hc11/hexprefix.s: New
	* gas/m68hc11/hexprefix.d: New
	* gas/m68hc11/9s12x-exg-sex-tfr.s: New
	* gas/m68hc11/9s12x-exg-sex-tfr.d: New
	* gas/m68hc11/insns9s12xg.s: New
	* gas/m68hc11/insns9s12xg.d: New
	* gas/m68hc11/9s12x-mov.s: New
	* gas/m68hc11/9s12x-mov.d: New
	* gas/m68hc11/m68hc11.exp: Updated
	* gas/m68hc11/*.d: Brought in line with changed objdump output.
	* gas/all/gas.exp: XFAIL all hc11/12 targets for redef2,3.
	* gas/elf/elf.exp: XFAIL all hc11/12 targets for redef.
	* gas/elf/dwarf2-1.d: Skip for hc11/12 targets.
	* gas/elf/dwarf2-2.d: Likewise.

	* ld-m68hc11/xgate-link.s: New.
	* ld-m68hc11/xgate-link.d: New.
	* ld-m68hc11/xgate-offset.s: New.
	* ld-m68hc11/xgate-offset.d: New.
	* ld-m68hc11/xgate1.s: New.
	* ld-m68hc11/xgate1.d: New.
	* ld-m68hc11/xgate2.s: New.
	* ld-m68hc11/m68hc11.exp: Updated.
	* ld-m68hc11/*.d: Brought in line with changed objdump output.
	* ld-gc/gc.exp: Update CFLAGS for m68hc11.
	* ld-plugin/plugin.exp: Likewise.
	* ld-srec/srec.exp: XFAIL for m68hc11 and m68hc12.

	* configure.in: Add S12X and XGATE co-processor support to m68hc11
	target.
	* disassemble.c: Likewise.
	* configure: Regenerate.
	* m68hc11-dis.c: Make objdump output more consistent, use hex
	instead of decimal and use 0x prefix for hex.
	* m68hc11-opc.c: Add S12X and XGATE opcodes.
	* dis-asm.h (print_insn_m9s12x): Prototype.
	(print_insn_m9s12xg): Prototype.

	* m68hc11.h (R_M68HC12_16B, R_M68HC12_PCREL_9, R_M68HC12_PCREL_10)
	R_M68HC12_HI8XG, R_M68HC12_LO8XG): New relocations.
	(E_M68HC11_XGATE_RAMOFFSET): Define.

	* m68hc11.h: Add XGate definitions.
	(struct m68hc11_opcode): Add xg_mask field.
@
text
@#objdump: -d --prefix-addresses --reloc
#as: -m68hc11
#name: insns

# Test handling of basic instructions.

.*: +file format elf32\-m68hc11

Disassembly of section .text:
0+0+ <_start> lds	#0x0+0400 <stack_end>
[	]+1: R_M68HC11_16	stack
0+0003 <_start\+0x3> ldx	#0x0+0001 <_start\+0x1>
0+0006 <Loop> jsr	0x0+0+ <_start>
[	]+6: R_M68HC11_RL_JUMP	\*ABS\*
[	]+7: R_M68HC11_16	test
0+0009 <Loop\+0x3> dex
0+000a <Loop\+0x4> bne	0x0+0006 <Loop>
[	]+a: R_M68HC11_RL_JUMP	\*ABS\*
0+000c <Stop> .byte	0xcd, 0x03
0+000e <Stop\+0x2> bra	0x0+0+ <_start>
[	]+e: R_M68HC11_RL_JUMP	\*ABS\*
0+0010 <test> ldd	#0x0+0002 <_start\+0x2>
0+0013 <test\+0x3> jsr	0x0+0+ <_start>
[	]+13: R_M68HC11_RL_JUMP	\*ABS\*
[	]+14: R_M68HC11_16	test2
0+0016 <test\+0x6> rts
0+0017 <test2> ldx	0x17,y
0+001a <test2\+0x3> std	0x17,x
0+001c <test2\+0x5> ldd	0x0,x
0+001e <test2\+0x7> sty	0x0,y
0+0021 <test2\+0xa> stx	0x0,y
0+0024 <test2\+0xd> brclr	0x6,x, #0x04, 0x0+0017 <test2>
[	]+24: R_M68HC11_RL_JUMP	\*ABS\*
0+0028 <test2\+0x11> brclr	0xc,x, #0x08, 0x0+0017 <test2>
[	]+28: R_M68HC11_RL_JUMP	\*ABS\*
0+002c <test2\+0x15> ldd	\*0x0+0+ <_start>
[	]+2d: R_M68HC11_8	ZD1
0+002e <test2\+0x17> ldx	\*0x0+0002 <_start\+0x2>
[	]+2f: R_M68HC11_8	ZD1
0+0030 <test2\+0x19> clr	0x0+0+ <_start>
[	]+31: R_M68HC11_16	ZD2
0+0033 <test2\+0x1c> clr	0x0+0001 <_start\+0x1>
[	]+34: R_M68HC11_16	ZD2
0+0036 <test2\+0x1f> bne	0x0+0034 <test2\+0x1d>
0+0038 <test2\+0x21> beq	0x0+003c <test2\+0x25>
0+003a <test2\+0x23> bclr	\*0x0+0001 <_start\+0x1>, #0x20
[	]+3b: R_M68HC11_8	ZD1
0+003d <test2\+0x26> brclr	\*0x0+0002 <_start\+0x2>, #0x28, 0x0+0017 <test2>
[	]+3d: R_M68HC11_RL_JUMP	\*ABS\*
[	]+3e: R_M68HC11_8	ZD2
0+0041 <test2\+0x2a> ldy	#0x0+ffec <stack_end\+0xfbec>
[	]+43: R_M68HC11_16	_start
0+0045 <test2\+0x2e> ldd	0xc,y
0+0048 <test2\+0x31> addd	0x2c,y
0+004b <test2\+0x34> addd	0x32,y
0+004e <test2\+0x37> subd	0x0+002c <test2\+0x15>
0+0051 <test2\+0x3a> subd	#0x0+002c <test2\+0x15>
0+0054 <test2\+0x3d> jmp	0x0+0+ <_start>
[	]+54: R_M68HC11_RL_JUMP	\*ABS\*
[	]+55: R_M68HC11_16	Stop
0+0057 <L1> anda	#0x17
[	]+58: R_M68HC11_LO8	\.text
0+0059 <L1\+0x2> andb	#0x0
[	]+5a: R_M68HC11_HI8	\.text
0+5b <L1\+0x4> ldab	#0x0
[	]+5c: R_M68HC11_PAGE	test2
0+5d <L1\+0x6> ldy	#0x0+ <_start>
[	]+5f: R_M68HC11_LO16	test2
0+61 <L1\+0xa> rts
@


1.5
log
@	* gas/m68hc11/insns.s: Add %page and %addr checks.
	* gas/m68hc11/insns12.s: Likewise.
	* gas/m68hc11/insns-dwarf2.d: Update.
	* gas/m68hc11/insns.d: Update.
@
text
@d10 1
a10 1
0+0+ <_start> lds	#0+0400 <stack_end>
d12 2
a13 2
0+0003 <_start\+0x3> ldx	#0+0001 <_start\+0x1>
0+0006 <Loop> jsr	0+0+ <_start>
d17 1
a17 1
0+000a <Loop\+0x4> bne	0+0006 <Loop>
d20 1
a20 1
0+000e <Stop\+0x2> bra	0+0+ <_start>
d22 2
a23 2
0+0010 <test> ldd	#0+0002 <_start\+0x2>
0+0013 <test\+0x3> jsr	0+0+ <_start>
d27 6
a32 6
0+0017 <test2> ldx	23,y
0+001a <test2\+0x3> std	23,x
0+001c <test2\+0x5> ldd	0,x
0+001e <test2\+0x7> sty	0,y
0+0021 <test2\+0xa> stx	0,y
0+0024 <test2\+0xd> brclr	6,x #\$04 0+0017 <test2>
d34 1
a34 1
0+0028 <test2\+0x11> brclr	12,x #\$08 0+0017 <test2>
d36 1
a36 1
0+002c <test2\+0x15> ldd	\*0+0+ <_start>
d38 1
a38 1
0+002e <test2\+0x17> ldx	\*0+0002 <_start\+0x2>
d40 1
a40 1
0+0030 <test2\+0x19> clr	0+0+ <_start>
d42 1
a42 1
0+0033 <test2\+0x1c> clr	0+0001 <_start\+0x1>
d44 3
a46 3
0+0036 <test2\+0x1f> bne	0+0034 <test2\+0x1d>
0+0038 <test2\+0x21> beq	0+003c <test2\+0x25>
0+003a <test2\+0x23> bclr	\*0+0001 <_start\+0x1> #\$20
d48 1
a48 1
0+003d <test2\+0x26> brclr	\*0+0002 <_start\+0x2> #\$28 0+0017 <test2>
d51 1
a51 1
0+0041 <test2\+0x2a> ldy	#0+ffec <stack_end\+0xfbec>
d53 6
a58 6
0+0045 <test2\+0x2e> ldd	12,y
0+0048 <test2\+0x31> addd	44,y
0+004b <test2\+0x34> addd	50,y
0+004e <test2\+0x37> subd	0+002c <test2\+0x15>
0+0051 <test2\+0x3a> subd	#0+002c <test2\+0x15>
0+0054 <test2\+0x3d> jmp	0+0+ <_start>
d61 1
a61 1
0+0057 <L1> anda	#23
d63 1
a63 1
0+0059 <L1\+0x2> andb	#0
d65 1
a65 1
0+5b <L1\+0x4> ldab	#0
d67 1
a67 1
0+5d <L1\+0x6> ldy	#0+ <_start>
@


1.4
log
@	* gas/m68hc11/insns.s: Don't use .comm for stack symbol so that objdump
	can find the real symbol and not a gas internal debug symbol.
	* gas/m68hc11/insns.d: Update.
	* gas/m68hc11/insns-dwarf2.d: Update.
	* gas/m68hc11/insns12.d: Update.
	* gas/m68hc11/opers12.s (min5b, min9b): Use 16 and -256 for the min.
	* gas/m68hc11/opers12.d: Update after indexed offset operand fixes.
	* gas/m68hc11/opers12-dwarf2.d: Likewise.
@
text
@d65 5
a69 1
0+005b <L1\+0x4> rts
@


1.3
log
@	* gas/m68hc11/insns.d: Quote dots.
	* gas/m68hc11/opers12.d: Likewise.
@
text
@d10 1
a10 1
0+0+ <_start> lds	#0+0400 <L1\+0x3a9>
d51 1
a51 1
0+0041 <test2\+0x2a> ldy	#0+ffec <L1\+0xff95>
@


1.2
log
@	* gas/m68hc11/all.exp: Run the new test.
	* gas/m68hc11/insns12.s: New file to test specific 68HC12 insns.
	* gas/m68hc11/insns12.d: New file.
	* gas/m68hc11/branchs12.s: New test.
	* gas/m68hc11/branchs12.d: New test.

	* gas/m68hc11/all_insns.d: Dump the relocs to verify that they
	are against symbols and not sections (for linker relaxation).
	* gas/m68hc11/insns-dwarf2.d: Likewise.
	* gas/m68hc11/insns.d: Likewise.
	* gas/m68hc11/lbranch.d: Likewise.
	* gas/m68hc11/lbranch-dwarf2.d: Likewise.
	* gas/m68hc11/opers12.d: Likewise.
	* gas/m68hc11/opers12-dwarf2.d: Likewise.
@
text
@d62 1
a62 1
[	]+58: R_M68HC11_LO8	.text
d64 1
a64 1
[	]+5a: R_M68HC11_HI8	.text
@


1.1
log
@Applied Stephane Carrez <Stephane.Carrez@@worldnet.fr> patches to add support
for m68hc11 and m68hc12 processors.
@
text
@d1 1
a1 1
#objdump: -d --prefix-addresses
d10 56
a65 35
0+000 <_start> lds	#0+0400 <L1\+0x3a9>
0+003 <_start\+0x3> ldx	#0+0001 <_start\+0x1>
0+006 <Loop> jsr	0+0010 <test>
0+009 <Loop\+0x3> dex
0+00a <Loop\+0x4> bne	0+0006 <Loop>
0+00c <Stop> .byte	0xcd, 0x03
0+00e <Stop\+0x2> bra	0+0000 <_start>
0+010 <test> ldd	#0+0002 <_start\+0x2>
0+013 <test\+0x3> jsr	0+0017 <test2>
0+016 <test\+0x6> rts
0+017 <test2> ldx	23,y
0+01a <test2\+0x3> std	23,x
0+01c <test2\+0x5> ldd	0,x
0+01e <test2\+0x7> sty	0,y
0+021 <test2\+0xa> stx	0,y
0+024 <test2\+0xd> brclr	6,x #\$04 00000017 <test2>
0+028 <test2\+0x11> brclr	12,x #\$08 00000017 <test2>
0+02c <test2\+0x15> ldd	\*0+0 <_start>
0+02e <test2\+0x17> ldx	\*0+2 <_start\+0x2>
0+030 <test2\+0x19> clr	0+0 <_start>
0+033 <test2\+0x1c> clr	0+1 <_start\+0x1>
0+036 <test2\+0x1f> bne	0+34 <test2\+0x1d>
0+038 <test2\+0x21> beq	0+3c <test2\+0x25>
0+03a <test2\+0x23> bclr	\*0+1 <_start\+0x1> #\$20
0+03d <test2\+0x26> brclr	\*0+2 <_start\+0x2> #\$28 0+017 <test2>
0+041 <test2\+0x2a> ldy	#0+ffec <L1\+0xff95>
0+045 <test2\+0x2e> ldd	12,y
0+048 <test2\+0x31> addd	44,y
0+04b <test2\+0x34> addd	50,y
0+04e <test2\+0x37> subd	0+02c <test2\+0x15>
0+051 <test2\+0x3a> subd	#0+02c <test2\+0x15>
0+054 <test2\+0x3d> jmp	0000000c <Stop>
0+057 <L1> anda	#23
0+059 <L1\+0x2> andb	#0
0+05b <L1\+0x4> rts@

