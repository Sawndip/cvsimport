head	1.8;
access;
symbols
	binutils-2_24-branch:1.8.0.4
	binutils-2_24-branchpoint:1.8
	binutils-2_21_1:1.7
	binutils-2_23_2:1.8
	binutils-2_23_1:1.8
	binutils-2_23:1.8
	binutils-2_23-branch:1.8.0.2
	binutils-2_23-branchpoint:1.8
	binutils-2_22_branch:1.7.0.16
	binutils-2_22:1.7
	binutils-2_22-branch:1.7.0.14
	binutils-2_22-branchpoint:1.7
	binutils-2_21:1.7
	binutils-2_21-branch:1.7.0.12
	binutils-2_21-branchpoint:1.7
	binutils-2_20_1:1.7
	binutils-2_20:1.7
	binutils-arc-20081103-branch:1.7.0.10
	binutils-arc-20081103-branchpoint:1.7
	binutils-2_20-branch:1.7.0.8
	binutils-2_20-branchpoint:1.7
	dje-cgen-play1-branch:1.7.0.6
	dje-cgen-play1-branchpoint:1.7
	arc-20081103-branch:1.7.0.4
	arc-20081103-branchpoint:1.7
	binutils-2_19_1:1.7
	binutils-2_19:1.7
	binutils-2_19-branch:1.7.0.2
	binutils-2_19-branchpoint:1.7
	binutils-2_18:1.6
	binutils-2_18-branch:1.6.0.18
	binutils-2_18-branchpoint:1.6
	binutils-csl-coldfire-4_1-32:1.6
	binutils-csl-sourcerygxx-4_1-32:1.6
	binutils-csl-innovasic-fido-3_4_4-33:1.6
	binutils-csl-sourcerygxx-3_4_4-32:1.6
	binutils-csl-coldfire-4_1-30:1.6
	binutils-csl-sourcerygxx-4_1-30:1.6
	binutils-csl-coldfire-4_1-28:1.6
	binutils-csl-sourcerygxx-4_1-29:1.6
	binutils-csl-sourcerygxx-4_1-28:1.6
	binutils-csl-arm-2006q3-27:1.6
	binutils-csl-sourcerygxx-4_1-27:1.6
	binutils-csl-arm-2006q3-26:1.6
	binutils-csl-sourcerygxx-4_1-26:1.6
	binutils-csl-sourcerygxx-4_1-25:1.6
	binutils-csl-sourcerygxx-4_1-24:1.6
	binutils-csl-sourcerygxx-4_1-23:1.6
	binutils-csl-sourcerygxx-4_1-21:1.6
	binutils-csl-arm-2006q3-21:1.6
	binutils-csl-sourcerygxx-4_1-22:1.6
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.6
	binutils-csl-sourcerygxx-4_1-20:1.6
	binutils-csl-arm-2006q3-19:1.6
	binutils-csl-sourcerygxx-4_1-19:1.6
	binutils-csl-sourcerygxx-4_1-18:1.6
	binutils-csl-renesas-4_1-9:1.6
	binutils-csl-sourcerygxx-3_4_4-25:1.6
	binutils-csl-renesas-4_1-8:1.6
	binutils-csl-renesas-4_1-7:1.6
	binutils-csl-renesas-4_1-6:1.6
	binutils-csl-sourcerygxx-4_1-17:1.6
	binutils-csl-sourcerygxx-4_1-14:1.6
	binutils-csl-sourcerygxx-4_1-15:1.6
	binutils-csl-sourcerygxx-4_1-13:1.6
	binutils-2_17:1.6
	binutils-csl-sourcerygxx-4_1-12:1.6
	binutils-csl-sourcerygxx-3_4_4-21:1.6
	binutils-csl-wrs-linux-3_4_4-24:1.6
	binutils-csl-wrs-linux-3_4_4-23:1.6
	binutils-csl-sourcerygxx-4_1-9:1.6
	binutils-csl-sourcerygxx-4_1-8:1.6
	binutils-csl-sourcerygxx-4_1-7:1.6
	binutils-csl-arm-2006q1-6:1.6
	binutils-csl-sourcerygxx-4_1-6:1.6
	binutils-csl-wrs-linux-3_4_4-22:1.6
	binutils-csl-coldfire-4_1-11:1.6
	binutils-csl-sourcerygxx-3_4_4-19:1.6
	binutils-csl-coldfire-4_1-10:1.6
	binutils-csl-sourcerygxx-4_1-5:1.6
	binutils-csl-sourcerygxx-4_1-4:1.6
	binutils-csl-wrs-linux-3_4_4-21:1.6
	binutils-csl-morpho-4_1-4:1.6
	binutils-csl-sourcerygxx-3_4_4-17:1.6
	binutils-csl-wrs-linux-3_4_4-20:1.6
	binutils-2_17-branch:1.6.0.16
	binutils-2_17-branchpoint:1.6
	binutils-csl-2_17-branch:1.6.0.14
	binutils-csl-2_17-branchpoint:1.6
	binutils-csl-gxxpro-3_4-branch:1.6.0.12
	binutils-csl-gxxpro-3_4-branchpoint:1.6
	binutils-2_16_1:1.6
	binutils-csl-arm-2005q1b:1.6
	binutils-2_16:1.6
	binutils-csl-arm-2005q1a:1.6
	binutils-csl-arm-2005q1-branch:1.6.0.10
	binutils-csl-arm-2005q1-branchpoint:1.6
	binutils-2_16-branch:1.6.0.8
	binutils-2_16-branchpoint:1.6
	csl-arm-2004-q3d:1.6
	csl-arm-2004-q3:1.6
	binutils-2_15:1.6
	binutils-2_15-branchpoint:1.6
	csl-arm-2004-q1a:1.6
	csl-arm-2004-q1:1.6
	binutils-2_15-branch:1.6.0.6
	cagney_bfdfile-20040213-branch:1.6.0.4
	cagney_bfdfile-20040213-branchpoint:1.6
	cagney_bigcore-20040122-branch:1.6.0.2
	cagney_bigcore-20040122-branchpoint:1.6
	csl-arm-2003-q4:1.6
	binutils-2_14:1.5
	binutils-2_14-branch:1.5.0.2
	binutils-2_14-branchpoint:1.5
	binutils-2_13_2_1:1.2
	binutils-2_13_2:1.2
	binutils-2_13_1:1.2
	binutils-2_13:1.2
	binutils-2_13-branchpoint:1.2
	binutils-2_13-branch:1.2.0.4
	binutils-2_12_1:1.2
	binutils-2_12:1.2
	binutils-2_12-branch:1.2.0.2
	binutils-2_12-branchpoint:1.2
	cygnus_cvs_20020108_pre:1.2
	binutils-2_11_2:1.1
	binutils-2_11_1:1.1
	binutils-2_11:1.1
	x86_64versiong3:1.1
	binutils-2_11-branch:1.1.0.2
	binutils_latest_snapshot:1.8;
locks; strict;
comment	@# @;


1.8
date	2012.05.15.12.55.39;	author nickc;	state Exp;
branches;
next	1.7;

1.7
date	2008.02.22.15.33.31;	author nickc;	state Exp;
branches;
next	1.6;

1.6
date	2003.10.27.10.01.51;	author ciceron;	state Exp;
branches;
next	1.5;

1.5
date	2002.12.08.21.08.07;	author ciceron;	state Exp;
branches;
next	1.4;

1.4
date	2002.12.01.13.46.08;	author ciceron;	state Exp;
branches;
next	1.3;

1.3
date	2002.08.13.22.45.22;	author ciceron;	state Exp;
branches;
next	1.2;

1.2
date	2001.11.01.09.52.03;	author ciceron;	state Exp;
branches;
next	1.1;

1.1
date	2001.01.11.19.48.41;	author ciceron;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2001.11.01.09.53.17;	author ciceron;	state Exp;
branches;
next	;


desc
@@


1.8
log
@	* config/tc-m68hc11.c: Add S12X and XGATE co-processor support.
	Add option to offset S12 addresses into XGATE memory space.
	Tweak target flags to match other tools. (i.e. -m m68hc11).
	* doc/as.texinfo: Mention new options.
	* doc/c-m68hc11.texi: Document new options.
	* NEWS: Mention new support.

	* archures.c: Add bfd_arch_m9s12x and bfd_arch_m9s12xg.
	* config.bfd: Likewise.
	* cpu-m9s12x.c: New.
	* cpu-m9s12xg.c: New.
	* elf32-m68hc12.c: Add S12X and XGATE co-processor support.
	Add option to offset S12 addresses into XGATE memory space.
	Fix carry bug in IMM16 (IMM8 low/high) relocate.
	* Makefile.am (ALL_MACHINES): Add cpu-m9s12x and cpu-m9s12xg.
	(ALL_MACHINES_CFILES): Likewise.
	* reloc.c: Add S12X relocs.
	* Makefile.in: Regenerate.
	* bfd-in2.h: Regenerate.
	* libbfd.h: Regenerate.

	* gas/m68hc11/insns9s12x.s: New
	* gas/m68hc11/insns9s12x.d: New
	* gas/m68hc11/hexprefix.s: New
	* gas/m68hc11/hexprefix.d: New
	* gas/m68hc11/9s12x-exg-sex-tfr.s: New
	* gas/m68hc11/9s12x-exg-sex-tfr.d: New
	* gas/m68hc11/insns9s12xg.s: New
	* gas/m68hc11/insns9s12xg.d: New
	* gas/m68hc11/9s12x-mov.s: New
	* gas/m68hc11/9s12x-mov.d: New
	* gas/m68hc11/m68hc11.exp: Updated
	* gas/m68hc11/*.d: Brought in line with changed objdump output.
	* gas/all/gas.exp: XFAIL all hc11/12 targets for redef2,3.
	* gas/elf/elf.exp: XFAIL all hc11/12 targets for redef.
	* gas/elf/dwarf2-1.d: Skip for hc11/12 targets.
	* gas/elf/dwarf2-2.d: Likewise.

	* ld-m68hc11/xgate-link.s: New.
	* ld-m68hc11/xgate-link.d: New.
	* ld-m68hc11/xgate-offset.s: New.
	* ld-m68hc11/xgate-offset.d: New.
	* ld-m68hc11/xgate1.s: New.
	* ld-m68hc11/xgate1.d: New.
	* ld-m68hc11/xgate2.s: New.
	* ld-m68hc11/m68hc11.exp: Updated.
	* ld-m68hc11/*.d: Brought in line with changed objdump output.
	* ld-gc/gc.exp: Update CFLAGS for m68hc11.
	* ld-plugin/plugin.exp: Likewise.
	* ld-srec/srec.exp: XFAIL for m68hc11 and m68hc12.

	* configure.in: Add S12X and XGATE co-processor support to m68hc11
	target.
	* disassemble.c: Likewise.
	* configure: Regenerate.
	* m68hc11-dis.c: Make objdump output more consistent, use hex
	instead of decimal and use 0x prefix for hex.
	* m68hc11-opc.c: Add S12X and XGATE opcodes.
	* dis-asm.h (print_insn_m9s12x): Prototype.
	(print_insn_m9s12xg): Prototype.

	* m68hc11.h (R_M68HC12_16B, R_M68HC12_PCREL_9, R_M68HC12_PCREL_10)
	R_M68HC12_HI8XG, R_M68HC12_LO8XG): New relocations.
	(E_M68HC11_XGATE_RAMOFFSET): Define.

	* m68hc11.h: Add XGate definitions.
	(struct m68hc11_opcode): Add xg_mask field.
@
text
@#objdump: -S
#as: -m68hc12 -gdwarf2
#name: Dwarf2 test on opers12.s
#source: opers12.s

.*: +file format elf32\-m68hc12

Disassembly of section .text:

0+00 <start>:
#...
	sect .text
	globl start

start:
	anda	\[12,x\]		; Indexed indirect
   0:	a4 e3 00 0c 	anda	\[0xc,X\]
	ldaa	#10
   4:	86 0a       	ldaa	#0xa
	ldx	L1
   6:	fe 00 00    	ldx	0x0 <start>

0+09 <L1>:
L1:	ldy	,x
   9:	ed 00       	ldy	0x0,X
	addd	1,y		; Offset from register
   b:	e3 41       	addd	0x1,Y
	subd	\-1,y
   d:	a3 5f       	subd	0xffff,Y
	eora	15,y
   f:	a8 4f       	eora	0xf,Y
	eora	\-16,y
  11:	a8 50       	eora	0xfff0,Y
	eorb	16,y
  13:	e8 e8 10    	eorb	0x10,Y
	eorb	\-17,y
  16:	e8 e9 ef    	eorb	0xffef,Y
	oraa	128,sp
  19:	aa f0 80    	oraa	0x80,SP
	orab	\-128,sp
  1c:	ea f1 80    	orab	0xff80,SP
	orab	255,x
  1f:	ea e0 ff    	orab	0xff,X
	orab	\-256,x
  22:	ea e1 00    	orab	0xff00,X
	anda	256,x
  25:	a4 e2 01 00 	anda	0x100,X
	andb	\-257,x
  29:	e4 e2 fe ff 	andb	0xfeff,X
	anda	\[12,x\]		; Indexed indirect \(16\-bit offset\)
  2d:	a4 e3 00 0c 	anda	\[0xc,X\]
	ldaa	\[257,y\]
  31:	a6 eb 01 01 	ldaa	\[0x101,Y\]
	ldab	\[32767,sp\]
  35:	e6 f3 7f ff 	ldab	\[0x7fff,SP\]
	ldd	\[32768,pc\]
  39:	ec fb 80 00 	ldd	\[0x8000,PC\]
	ldd	L1,pc
  3d:	ec f9 c9    	ldd	0xffc9,PC \{0x9 <L1>\}
	std	a,x		; Two\-reg index
  40:	6c e4       	std	A,X
	ldx	b,x
  42:	ee e5       	ldx	B,X
	stx	d,y
  44:	6e ee       	stx	D,Y
	addd	1,\+x		; Pre\-Auto inc
  46:	e3 20       	addd	1,\+X
	addd	2,\+x
  48:	e3 21       	addd	2,\+X
	addd	8,\+x
  4a:	e3 27       	addd	8,\+X
	addd	1,sp\+		; Post\-Auto inc
  4c:	e3 b0       	addd	1,SP\+
	addd	2,sp\+
  4e:	e3 b1       	addd	2,SP\+
	addd	8,sp\+
  50:	e3 b7       	addd	8,SP\+
	subd	1,\-y		; Pre\-Auto dec
  52:	a3 6f       	subd	1,\-Y
	subd	2,\-y
  54:	a3 6e       	subd	2,\-Y
	subd	8,\-y
  56:	a3 68       	subd	8,\-Y
	addd	1,y\-		; Post\-Auto dec
  58:	e3 7f       	addd	1,Y\-
	addd	2,y\-
  5a:	e3 7e       	addd	2,Y\-
	addd	8,y\-
  5c:	e3 78       	addd	8,Y\-
	std	\[d,x\]		; Indexed indirect with two reg index
  5e:	6c e7       	std	\[D,X\]
	std	\[d,y\]
  60:	6c ef       	std	\[D,Y\]
	std	\[d,sp\]
  62:	6c f7       	std	\[D,SP\]
	std	\[d,pc\]
  64:	6c ff       	std	\[D,PC\]
	beq	L1
  66:	27 a1       	beq	0x9 <L1>
	lbeq	start
  68:	18 27 ff 94 	lbeq	0x0 <start>
	lbcc	L2
  6c:	18 24 00 4c 	lbcc	0xbc <L2>
;;
;; Move insn with various operands
;; 
	movb	start, 1,x
  70:	18 09 01 00 	movb	0x0 <start>, 0x1,X
  74:	00 
	movw	1,x, start
  75:	18 05 01 00 	movw	0x1,X, 0x0 <start>
  79:	00 
	movb	start, 1,\+x
  7a:	18 09 20 00 	movb	0x0 <start>, 1,\+X
  7e:	00 
	movb	start, 1,\-x
  7f:	18 09 2f 00 	movb	0x0 <start>, 1,\-X
  83:	00 
	movb	#23, 1,\-sp
  84:	18 08 af 17 	movb	#0x17, 1,\-SP
	movb	L1, L2
  88:	18 0c 00 00 	movb	0x0 <start>, 0x0 <start>
  8c:	00 00 
	movb	L1, a,x
  8e:	18 09 e4 00 	movb	0x0 <start>, A,X
  92:	00 
	movw	L1, b,x
  93:	18 01 e5 00 	movw	0x0 <start>, B,X
  97:	00 
	movw	L1, d,x
  98:	18 01 e6 00 	movw	0x0 <start>, D,X
  9c:	00 
	movw	d,x, a,x
  9d:	18 02 e6 e4 	movw	D,X, A,X
	movw	b,sp, d,pc
  a1:	18 02 f5 fe 	movw	B,SP, D,PC
	movw	b,sp, L1
  a5:	18 05 f5 00 	movw	B,SP, 0x0 <start>
  a9:	00 
	movw	b,sp, 1,x
  aa:	18 02 f5 01 	movw	B,SP, 0x1,X
	movw	d,x, a,y
  ae:	18 02 e6 ec 	movw	D,X, A,Y
	trap	#0x30
  b2:	18 30       	trap	#0x30
	trap	#0x39
  b4:	18 39       	trap	#0x39
	trap	#0x40
  b6:	18 40       	trap	#0x40
	trap	#0x80
  b8:	18 80       	trap	#0x80
	trap	#255
  ba:	18 ff       	trap	#0xff

0+bc <L2>:
L2:	
	movw 1,x,2,x
  bc:	18 02 01 02 	movw	0x1,X, 0x2,X
	movw \-1,\-1
  c0:	18 04 ff ff 	movw	0xffff <bb\+0xd7ff>, 0xffff <bb\+0xd7ff>
  c4:	ff ff 
	movw \-1,1,x
  c6:	18 01 01 ff 	movw	0xffff <bb\+0xd7ff>, 0x1,X
  ca:	ff 
	movw #\-1,1,x
  cb:	18 00 01 ff 	movw	#0xffff <bb\+0xd7ff>, 0x1,X
  cf:	ff 
	movw 3,8
  d0:	18 04 00 03 	movw	0x3 <start\+0x3>, 0x8 <start\+0x8>
  d4:	00 08 
	movw #3,3
  d6:	18 03 00 03 	movw	#0x3 <start\+0x3>, 0x3 <start\+0x3>
  da:	00 03 
	movw #3,1,x
  dc:	18 00 01 00 	movw	#0x3 <start\+0x3>, 0x1,X
  e0:	03 
	movw 3,1,x
  e1:	18 01 01 00 	movw	0x3 <start\+0x3>, 0x1,X
  e5:	03 
	movw 3,\+2,x
  e6:	18 01 02 00 	movw	0x3 <start\+0x3>, 0x2,X
  ea:	03 
	movw 4,\-2,x
  eb:	18 01 1e 00 	movw	0x4 <start\+0x4>, 0xfffe,X
  ef:	04 
	rts
  f0:	3d          	rts

0+f1 <post_indexed_pb>:
;;
;; Post\-index byte with relocation
;; 
post_indexed_pb:
t1:
	leas	abort,x
  f1:	1b e2 00 00 	leas	0x0,X

0+f5 <t2>:
t2:
	leax	t2\-t1,y
  f5:	1a 44       	leax	0x4,Y
	leax	toto,x
  f7:	1a e0 64    	leax	0x64,X
	leas	toto\+titi,sp
  fa:	1b f0 6e    	leas	0x6e,SP
	leay	titi,x
  fd:	19 0a       	leay	0xa,X
	leas	bb,y
  ff:	1b ea 28 00 	leas	0x2800,Y
	leas	min5b,pc
 103:	1b d0       	leas	0xfff0,PC \{0xf5 <t2>\}
	leas	max5b,pc
 105:	1b cf       	leas	0xf,PC \{0x116 <t2\+0x21>\}
	leas	min9b,pc
 107:	1b fa ff 00 	leas	0xff00,PC \{0xb <L1\+0x2>\}
	leas	max9b,pc
 10b:	1b f8 ff    	leas	0xff,PC \{0x20d <L0\+0xd9>\}

;;
;; Disassembler bug with movb
;;
	movb	#23,0x2345
 10e:	18 0b 17 23 	movb	#0x17, 0x2345 <L0\+0x2211>
 112:	45 
	movb	#40,12,sp
 113:	18 08 8c 28 	movb	#0x28, 0xc,SP
	movb	#39,3,\+sp
 117:	18 08 a2 27 	movb	#0x27, 3,\+SP
	movb	#20,14,sp
 11b:	18 08 8e 14 	movb	#0x14, 0xe,SP
	movw	#0x3210,0x3456
 11f:	18 03 32 10 	movw	#0x3210 <bb\+0xa10>, 0x3456 <bb\+0xc56>
 123:	34 56 
	movw	#0x4040,12,sp
 125:	18 00 8c 40 	movw	#0x4040 <bb\+0x1840>, 0xc,SP
 129:	40 
	movw	#0x3900,3,\+sp
 12a:	18 00 a2 39 	movw	#0x3900 <bb\+0x1100>, 3,\+SP
 12e:	00 
	movw	#0x2000,14,sp
 12f:	18 00 8e 20 	movw	#0x2000 <L0\+0x1ecc>, 0xe,SP
 133:	00 
@


1.7
log
@* gas/m68hc11/bug-1825.d: Update to match changes in the
  information generated with source-in-disassembly listings.
  * gas/m68hc11/indexed12.d: Likewise.
  * gas/m68hc11/insns-dwarf2.d: Likewise.
  * gas/m68hc11/lbranch-dwarf2.d: Likewise.
@
text
@d17 1
a17 1
   0:	a4 e3 00 0c 	anda	\[12,X\]
d19 1
a19 1
   4:	86 0a       	ldaa	#10
d21 1
a21 1
   6:	fe 00 00    	ldx	0 <start>
d25 1
a25 1
   9:	ed 00       	ldy	0,X
d27 1
a27 1
   b:	e3 41       	addd	1,Y
d29 1
a29 1
   d:	a3 5f       	subd	\-1,Y
d31 1
a31 1
   f:	a8 4f       	eora	15,Y
d33 1
a33 1
  11:	a8 50       	eora	\-16,Y
d35 1
a35 1
  13:	e8 e8 10    	eorb	16,Y
d37 1
a37 1
  16:	e8 e9 ef    	eorb	\-17,Y
d39 1
a39 1
  19:	aa f0 80    	oraa	128,SP
d41 1
a41 1
  1c:	ea f1 80    	orab	\-128,SP
d43 1
a43 1
  1f:	ea e0 ff    	orab	255,X
d45 1
a45 1
  22:	ea e1 00    	orab	\-256,X
d47 1
a47 1
  25:	a4 e2 01 00 	anda	256,X
d49 1
a49 1
  29:	e4 e2 fe ff 	andb	\-257,X
d51 1
a51 1
  2d:	a4 e3 00 0c 	anda	\[12,X\]
d53 1
a53 1
  31:	a6 eb 01 01 	ldaa	\[257,Y\]
d55 1
a55 1
  35:	e6 f3 7f ff 	ldab	\[32767,SP\]
d57 1
a57 1
  39:	ec fb 80 00 	ldd	\[32768,PC\]
d59 1
a59 1
  3d:	ec f9 c9    	ldd	-55,PC \{9 <L1>\}
d99 1
a99 1
  66:	27 a1       	beq	9 <L1>
d101 1
a101 1
  68:	18 27 ff 94 	lbeq	0 <start>
d103 1
a103 1
  6c:	18 24 00 4c 	lbcc	bc <L2>
d108 1
a108 1
  70:	18 09 01 00 	movb	0 <start>, 1,X
d111 1
a111 1
  75:	18 05 01 00 	movw	1,X, 0 <start>
d114 1
a114 1
  7a:	18 09 20 00 	movb	0 <start>, 1,\+X
d117 1
a117 1
  7f:	18 09 2f 00 	movb	0 <start>, 1,\-X
d120 1
a120 1
  84:	18 08 af 17 	movb	#23, 1,\-SP
d122 1
a122 1
  88:	18 0c 00 00 	movb	0 <start>, 0 <start>
d125 1
a125 1
  8e:	18 09 e4 00 	movb	0 <start>, A,X
d128 1
a128 1
  93:	18 01 e5 00 	movw	0 <start>, B,X
d131 1
a131 1
  98:	18 01 e6 00 	movw	0 <start>, D,X
d138 1
a138 1
  a5:	18 05 f5 00 	movw	B,SP, 0 <start>
d141 1
a141 1
  aa:	18 02 f5 01 	movw	B,SP, 1,X
d145 1
a145 1
  b2:	18 30       	trap	#48
d147 1
a147 1
  b4:	18 39       	trap	#57
d149 1
a149 1
  b6:	18 40       	trap	#64
d151 1
a151 1
  b8:	18 80       	trap	#128
d153 1
a153 1
  ba:	18 ff       	trap	#255
d158 1
a158 1
  bc:	18 02 01 02 	movw	1,X, 2,X
d160 1
a160 1
  c0:	18 04 ff ff 	movw	ffff <bb\+0xd7ff>, ffff <bb\+0xd7ff>
d163 1
a163 1
  c6:	18 01 01 ff 	movw	ffff <bb\+0xd7ff>, 1,X
d166 1
a166 1
  cb:	18 00 01 ff 	movw	#ffff <bb\+0xd7ff>, 1,X
d169 1
a169 1
  d0:	18 04 00 03 	movw	3 <start\+0x3>, 8 <start\+0x8>
d172 1
a172 1
  d6:	18 03 00 03 	movw	#3 <start\+0x3>, 3 <start\+0x3>
d175 1
a175 1
  dc:	18 00 01 00 	movw	#3 <start\+0x3>, 1,X
d178 1
a178 1
  e1:	18 01 01 00 	movw	3 <start\+0x3>, 1,X
d181 1
a181 1
  e6:	18 01 02 00 	movw	3 <start\+0x3>, 2,X
d184 1
a184 1
  eb:	18 01 1e 00 	movw	4 <start\+0x4>, \-2,X
d196 1
a196 1
  f1:	1b e2 00 00 	leas	0,X
d201 1
a201 1
  f5:	1a 44       	leax	4,Y
d203 1
a203 1
  f7:	1a e0 64    	leax	100,X
d205 1
a205 1
  fa:	1b f0 6e    	leas	110,SP
d207 1
a207 1
  fd:	19 0a       	leay	10,X
d209 1
a209 1
  ff:	1b ea 28 00 	leas	10240,Y
d211 1
a211 1
 103:	1b d0       	leas	-16,PC \{f5 <t2>\}
d213 1
a213 1
 105:	1b cf       	leas	15,PC \{116 <t2\+0x21>\}
d215 1
a215 1
 107:	1b fa ff 00 	leas	-256,PC \{b <L1\+0x2>\}
d217 1
a217 1
 10b:	1b f8 ff    	leas	255,PC \{20d <L0\+0xd9>\}
d223 1
a223 1
 10e:	18 0b 17 23 	movb	#23, 2345 <L0\+0x2211>
d226 1
a226 1
 113:	18 08 8c 28 	movb	#40, 12,SP
d228 1
a228 1
 117:	18 08 a2 27 	movb	#39, 3,\+SP
d230 1
a230 1
 11b:	18 08 8e 14 	movb	#20, 14,SP
d232 1
a232 1
 11f:	18 03 32 10 	movw	#3210 <bb\+0xa10>, 3456 <bb\+0xc56>
d235 1
a235 1
 125:	18 00 8c 40 	movw	#4040 <bb\+0x1840>, 12,SP
d238 1
a238 1
 12a:	18 00 a2 39 	movw	#3900 <bb\+0x1100>, 3,\+SP
d241 1
a241 1
 12f:	18 00 8e 20 	movw	#2000 <L0\+0x1ecc>, 14,SP
@


1.6
log
@	* gas/m68hc11/opers12-dwarf2.d: Update, local label prefix removed.
	* gas/m68hc11/lbranch-dwarf2.d: Update.
@
text
@d11 1
@


1.5
log
@	* gas/m68hc11/bug-1825.s: Add some tests.
	* gas/m68hc11/bug-1825.d: Update.
	* gas/m68hc11/opers12.d: Update.
	* gas/m68hc11/opers12-dwarf2.d: Update.
@
text
@d216 1
a216 1
 10b:	1b f8 ff    	leas	255,PC \{20d <.L0\+0xd9>\}
d222 1
a222 1
 10e:	18 0b 17 23 	movb	#23, 2345 <.L0\+0x2211>
d240 1
a240 1
 12f:	18 00 8e 20 	movw	#2000 <.L0\+0x1ecc>, 14,SP
@


1.4
log
@	* gas/m68hc11/insns.s: Don't use .comm for stack symbol so that objdump
	can find the real symbol and not a gas internal debug symbol.
	* gas/m68hc11/insns.d: Update.
	* gas/m68hc11/insns-dwarf2.d: Update.
	* gas/m68hc11/insns12.d: Update.
	* gas/m68hc11/opers12.s (min5b, min9b): Use 16 and -256 for the min.
	* gas/m68hc11/opers12.d: Update after indexed offset operand fixes.
	* gas/m68hc11/opers12-dwarf2.d: Likewise.
@
text
@d58 1
a58 1
  3d:	ec f9 ca    	ldd	-54,PC \{9 <L1>\}
d214 1
a214 1
 107:	1b f9 00    	leas	-256,PC \{9 <L1>\}
d216 1
a216 1
 10a:	1b f8 ff    	leas	255,PC \{20b <.L0\+0xd8>\}
d222 2
a223 2
 10d:	18 0b 17 23 	movb	#23, 2345 <.L0\+0x2212>
 111:	45 
d225 1
a225 1
 112:	18 08 8c 28 	movb	#40, 12,SP
d227 1
a227 1
 116:	18 08 a2 27 	movb	#39, 3,\+SP
d229 1
a229 1
 11a:	18 08 8e 14 	movb	#20, 14,SP
d231 2
a232 2
 11e:	18 03 32 10 	movw	#3210 <bb\+0xa10>, 3456 <bb\+0xc56>
 122:	34 56 
d234 2
a235 2
 124:	18 00 8c 40 	movw	#4040 <bb\+0x1840>, 12,SP
 128:	40 
d237 2
a238 2
 129:	18 00 a2 39 	movw	#3900 <bb\+0x1100>, 3,\+SP
 12d:	00 
d240 2
a241 2
 12e:	18 00 8e 20 	movw	#2000 <.L0\+0x1ecd>, 14,SP
 132:	00 
@


1.3
log
@	* gas/m68hc11/all.exp: Run the new test.
	* gas/m68hc11/insns12.s: New file to test specific 68HC12 insns.
	* gas/m68hc11/insns12.d: New file.
	* gas/m68hc11/branchs12.s: New test.
	* gas/m68hc11/branchs12.d: New test.

	* gas/m68hc11/all_insns.d: Dump the relocs to verify that they
	are against symbols and not sections (for linker relaxation).
	* gas/m68hc11/insns-dwarf2.d: Likewise.
	* gas/m68hc11/insns.d: Likewise.
	* gas/m68hc11/lbranch.d: Likewise.
	* gas/m68hc11/lbranch-dwarf2.d: Likewise.
	* gas/m68hc11/opers12.d: Likewise.
	* gas/m68hc11/opers12-dwarf2.d: Likewise.
@
text
@d58 1
a58 1
  3d:	ec f8 09    	ldd	9,PC
d202 1
a202 1
  f7:	1a e2 00 64 	leax	100,X
d204 1
a204 1
  fb:	1b f2 00 6e 	leas	110,SP
d206 1
a206 1
  ff:	19 e2 00 0a 	leay	10,X
d208 1
a208 1
 103:	1b ea 28 00 	leas	10240,Y
d210 1
a210 1
 107:	1b fa 00 ff 	leas	255,PC
d212 1
a212 1
 10b:	1b fa 00 00 	leas	0,PC
d214 1
a214 1
 10f:	1b fa 00 ff 	leas	255,PC
d216 1
a216 1
 113:	1b fa 00 00 	leas	0,PC
d222 2
a223 2
 117:	18 0b 17 23 	movb	#23, 2345 <.L0\+0x2208>
 11b:	45 
d225 1
a225 1
 11c:	18 08 8c 28 	movb	#40, 12,SP
d227 1
a227 1
 120:	18 08 a2 27 	movb	#39, 3,\+SP
d229 1
a229 1
 124:	18 08 8e 14 	movb	#20, 14,SP
d231 2
a232 2
 128:	18 03 32 10 	movw	#3210 <bb\+0xa10>, 3456 <bb\+0xc56>
 12c:	34 56 
d234 2
a235 2
 12e:	18 00 8c 40 	movw	#4040 <bb\+0x1840>, 12,SP
 132:	40 
d237 2
a238 2
 133:	18 00 a2 39 	movw	#3900 <bb\+0x1100>, 3,\+SP
 137:	00 
d240 2
a241 2
 138:	18 00 8e 20 	movw	#2000 <.L0\+0x1ec3>, 14,SP
 13c:	00 
@


1.2
log
@	* gas/m68hc11/opers12.s: Add test for disassembler bug with movb
	instruction.
	* gas/m68hc11/opers12.d: Likewise.
	* gas/m68hc11/opers12-dwarf2.d: Likewise.
@
text
@d10 1
a10 1
0+0 <start>:
d20 1
a20 1
   6:	fe 00 09    	ldx	9 <L1>
d22 1
a22 1
00000009 <L1>:
d121 2
a122 2
  88:	18 0c 00 09 	movb	9 <L1>, bc <L2>
  8c:	00 bc 
d124 2
a125 2
  8e:	18 09 e4 00 	movb	9 <L1>, A,X
  92:	09 
d127 2
a128 2
  93:	18 01 e5 00 	movw	9 <L1>, B,X
  97:	09 
d130 2
a131 2
  98:	18 01 e6 00 	movw	9 <L1>, D,X
  9c:	09 
d137 2
a138 2
  a5:	18 05 f5 00 	movw	B,SP, 9 <L1>
  a9:	09 
d154 1
a154 1
000000bc <L2>:
d188 1
a188 1
000000f1 <post_indexed_pb>:
d197 1
a197 1
000000f5 <t2>:
d222 1
a222 1
 117:	18 0b 17 23 	movb	#23, 2345 <max9b\+0x2246>
d240 1
a240 1
 138:	18 00 8e 20 	movw	#2000 <max9b\+0x1f01>, 14,SP
@


1.1
log
@Dwarf2 test for 68HC11/68HC12 gas
@
text
@d217 25
@


1.1.2.1
log
@	* gas/m68hc11/opers12.s: Add test for disassembler bug with movb
	instruction.
	* gas/m68hc11/opers12.d: Likewise.
	* gas/m68hc11/opers12-dwarf2.d: Likewise.
@
text
@a216 25

;;
;; Disassembler bug with movb
;;
	movb	#23,0x2345
 117:	18 0b 17 23 	movb	#23, 2345 <max9b\+0x2246>
 11b:	45 
	movb	#40,12,sp
 11c:	18 08 8c 28 	movb	#40, 12,SP
	movb	#39,3,\+sp
 120:	18 08 a2 27 	movb	#39, 3,\+SP
	movb	#20,14,sp
 124:	18 08 8e 14 	movb	#20, 14,SP
	movw	#0x3210,0x3456
 128:	18 03 32 10 	movw	#3210 <bb\+0xa10>, 3456 <bb\+0xc56>
 12c:	34 56 
	movw	#0x4040,12,sp
 12e:	18 00 8c 40 	movw	#4040 <bb\+0x1840>, 12,SP
 132:	40 
	movw	#0x3900,3,\+sp
 133:	18 00 a2 39 	movw	#3900 <bb\+0x1100>, 3,\+SP
 137:	00 
	movw	#0x2000,14,sp
 138:	18 00 8e 20 	movw	#2000 <max9b\+0x1f01>, 14,SP
 13c:	00 
@


