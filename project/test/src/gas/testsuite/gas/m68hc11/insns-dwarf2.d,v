head	1.6;
access;
symbols
	binutils-2_24-branch:1.6.0.4
	binutils-2_24-branchpoint:1.6
	binutils-2_21_1:1.5
	binutils-2_23_2:1.6
	binutils-2_23_1:1.6
	binutils-2_23:1.6
	binutils-2_23-branch:1.6.0.2
	binutils-2_23-branchpoint:1.6
	binutils-2_22_branch:1.5.0.16
	binutils-2_22:1.5
	binutils-2_22-branch:1.5.0.14
	binutils-2_22-branchpoint:1.5
	binutils-2_21:1.5
	binutils-2_21-branch:1.5.0.12
	binutils-2_21-branchpoint:1.5
	binutils-2_20_1:1.5
	binutils-2_20:1.5
	binutils-arc-20081103-branch:1.5.0.10
	binutils-arc-20081103-branchpoint:1.5
	binutils-2_20-branch:1.5.0.8
	binutils-2_20-branchpoint:1.5
	dje-cgen-play1-branch:1.5.0.6
	dje-cgen-play1-branchpoint:1.5
	arc-20081103-branch:1.5.0.4
	arc-20081103-branchpoint:1.5
	binutils-2_19_1:1.5
	binutils-2_19:1.5
	binutils-2_19-branch:1.5.0.2
	binutils-2_19-branchpoint:1.5
	binutils-2_18:1.4
	binutils-2_18-branch:1.4.0.20
	binutils-2_18-branchpoint:1.4
	binutils-csl-coldfire-4_1-32:1.4
	binutils-csl-sourcerygxx-4_1-32:1.4
	binutils-csl-innovasic-fido-3_4_4-33:1.4
	binutils-csl-sourcerygxx-3_4_4-32:1.4
	binutils-csl-coldfire-4_1-30:1.4
	binutils-csl-sourcerygxx-4_1-30:1.4
	binutils-csl-coldfire-4_1-28:1.4
	binutils-csl-sourcerygxx-4_1-29:1.4
	binutils-csl-sourcerygxx-4_1-28:1.4
	binutils-csl-arm-2006q3-27:1.4
	binutils-csl-sourcerygxx-4_1-27:1.4
	binutils-csl-arm-2006q3-26:1.4
	binutils-csl-sourcerygxx-4_1-26:1.4
	binutils-csl-sourcerygxx-4_1-25:1.4
	binutils-csl-sourcerygxx-4_1-24:1.4
	binutils-csl-sourcerygxx-4_1-23:1.4
	binutils-csl-sourcerygxx-4_1-21:1.4
	binutils-csl-arm-2006q3-21:1.4
	binutils-csl-sourcerygxx-4_1-22:1.4
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.4
	binutils-csl-sourcerygxx-4_1-20:1.4
	binutils-csl-arm-2006q3-19:1.4
	binutils-csl-sourcerygxx-4_1-19:1.4
	binutils-csl-sourcerygxx-4_1-18:1.4
	binutils-csl-renesas-4_1-9:1.4
	binutils-csl-sourcerygxx-3_4_4-25:1.4
	binutils-csl-renesas-4_1-8:1.4
	binutils-csl-renesas-4_1-7:1.4
	binutils-csl-renesas-4_1-6:1.4
	binutils-csl-sourcerygxx-4_1-17:1.4
	binutils-csl-sourcerygxx-4_1-14:1.4
	binutils-csl-sourcerygxx-4_1-15:1.4
	binutils-csl-sourcerygxx-4_1-13:1.4
	binutils-2_17:1.4
	binutils-csl-sourcerygxx-4_1-12:1.4
	binutils-csl-sourcerygxx-3_4_4-21:1.4
	binutils-csl-wrs-linux-3_4_4-24:1.4
	binutils-csl-wrs-linux-3_4_4-23:1.4
	binutils-csl-sourcerygxx-4_1-9:1.4
	binutils-csl-sourcerygxx-4_1-8:1.4
	binutils-csl-sourcerygxx-4_1-7:1.4
	binutils-csl-arm-2006q1-6:1.4
	binutils-csl-sourcerygxx-4_1-6:1.4
	binutils-csl-wrs-linux-3_4_4-22:1.4
	binutils-csl-coldfire-4_1-11:1.4
	binutils-csl-sourcerygxx-3_4_4-19:1.4
	binutils-csl-coldfire-4_1-10:1.4
	binutils-csl-sourcerygxx-4_1-5:1.4
	binutils-csl-sourcerygxx-4_1-4:1.4
	binutils-csl-wrs-linux-3_4_4-21:1.4
	binutils-csl-morpho-4_1-4:1.4
	binutils-csl-sourcerygxx-3_4_4-17:1.4
	binutils-csl-wrs-linux-3_4_4-20:1.4
	binutils-2_17-branch:1.4.0.18
	binutils-2_17-branchpoint:1.4
	binutils-csl-2_17-branch:1.4.0.16
	binutils-csl-2_17-branchpoint:1.4
	binutils-csl-gxxpro-3_4-branch:1.4.0.14
	binutils-csl-gxxpro-3_4-branchpoint:1.4
	binutils-2_16_1:1.4
	binutils-csl-arm-2005q1b:1.4
	binutils-2_16:1.4
	binutils-csl-arm-2005q1a:1.4
	binutils-csl-arm-2005q1-branch:1.4.0.12
	binutils-csl-arm-2005q1-branchpoint:1.4
	binutils-2_16-branch:1.4.0.10
	binutils-2_16-branchpoint:1.4
	csl-arm-2004-q3d:1.4
	csl-arm-2004-q3:1.4
	binutils-2_15:1.4
	binutils-2_15-branchpoint:1.4
	csl-arm-2004-q1a:1.4
	csl-arm-2004-q1:1.4
	binutils-2_15-branch:1.4.0.8
	cagney_bfdfile-20040213-branch:1.4.0.6
	cagney_bfdfile-20040213-branchpoint:1.4
	cagney_bigcore-20040122-branch:1.4.0.4
	cagney_bigcore-20040122-branchpoint:1.4
	csl-arm-2003-q4:1.4
	binutils-2_14:1.4
	binutils-2_14-branch:1.4.0.2
	binutils-2_14-branchpoint:1.4
	binutils-2_13_2_1:1.1
	binutils-2_13_2:1.1
	binutils-2_13_1:1.1
	binutils-2_13:1.1
	binutils-2_13-branchpoint:1.1
	binutils-2_13-branch:1.1.0.6
	binutils-2_12_1:1.1
	binutils-2_12:1.1
	binutils-2_12-branch:1.1.0.4
	binutils-2_12-branchpoint:1.1
	cygnus_cvs_20020108_pre:1.1
	binutils-2_11_2:1.1
	binutils-2_11_1:1.1
	binutils-2_11:1.1
	x86_64versiong3:1.1
	binutils-2_11-branch:1.1.0.2
	binutils_latest_snapshot:1.6;
locks; strict;
comment	@# @;


1.6
date	2012.05.15.12.55.39;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	2008.02.22.15.33.31;	author nickc;	state Exp;
branches;
next	1.4;

1.4
date	2003.04.05.12.54.00;	author ciceron;	state Exp;
branches;
next	1.3;

1.3
date	2002.12.01.13.46.08;	author ciceron;	state Exp;
branches;
next	1.2;

1.2
date	2002.08.13.22.45.22;	author ciceron;	state Exp;
branches;
next	1.1;

1.1
date	2001.01.11.19.48.41;	author ciceron;	state Exp;
branches;
next	;


desc
@@


1.6
log
@	* config/tc-m68hc11.c: Add S12X and XGATE co-processor support.
	Add option to offset S12 addresses into XGATE memory space.
	Tweak target flags to match other tools. (i.e. -m m68hc11).
	* doc/as.texinfo: Mention new options.
	* doc/c-m68hc11.texi: Document new options.
	* NEWS: Mention new support.

	* archures.c: Add bfd_arch_m9s12x and bfd_arch_m9s12xg.
	* config.bfd: Likewise.
	* cpu-m9s12x.c: New.
	* cpu-m9s12xg.c: New.
	* elf32-m68hc12.c: Add S12X and XGATE co-processor support.
	Add option to offset S12 addresses into XGATE memory space.
	Fix carry bug in IMM16 (IMM8 low/high) relocate.
	* Makefile.am (ALL_MACHINES): Add cpu-m9s12x and cpu-m9s12xg.
	(ALL_MACHINES_CFILES): Likewise.
	* reloc.c: Add S12X relocs.
	* Makefile.in: Regenerate.
	* bfd-in2.h: Regenerate.
	* libbfd.h: Regenerate.

	* gas/m68hc11/insns9s12x.s: New
	* gas/m68hc11/insns9s12x.d: New
	* gas/m68hc11/hexprefix.s: New
	* gas/m68hc11/hexprefix.d: New
	* gas/m68hc11/9s12x-exg-sex-tfr.s: New
	* gas/m68hc11/9s12x-exg-sex-tfr.d: New
	* gas/m68hc11/insns9s12xg.s: New
	* gas/m68hc11/insns9s12xg.d: New
	* gas/m68hc11/9s12x-mov.s: New
	* gas/m68hc11/9s12x-mov.d: New
	* gas/m68hc11/m68hc11.exp: Updated
	* gas/m68hc11/*.d: Brought in line with changed objdump output.
	* gas/all/gas.exp: XFAIL all hc11/12 targets for redef2,3.
	* gas/elf/elf.exp: XFAIL all hc11/12 targets for redef.
	* gas/elf/dwarf2-1.d: Skip for hc11/12 targets.
	* gas/elf/dwarf2-2.d: Likewise.

	* ld-m68hc11/xgate-link.s: New.
	* ld-m68hc11/xgate-link.d: New.
	* ld-m68hc11/xgate-offset.s: New.
	* ld-m68hc11/xgate-offset.d: New.
	* ld-m68hc11/xgate1.s: New.
	* ld-m68hc11/xgate1.d: New.
	* ld-m68hc11/xgate2.s: New.
	* ld-m68hc11/m68hc11.exp: Updated.
	* ld-m68hc11/*.d: Brought in line with changed objdump output.
	* ld-gc/gc.exp: Update CFLAGS for m68hc11.
	* ld-plugin/plugin.exp: Likewise.
	* ld-srec/srec.exp: XFAIL for m68hc11 and m68hc12.

	* configure.in: Add S12X and XGATE co-processor support to m68hc11
	target.
	* disassemble.c: Likewise.
	* configure: Regenerate.
	* m68hc11-dis.c: Make objdump output more consistent, use hex
	instead of decimal and use 0x prefix for hex.
	* m68hc11-opc.c: Add S12X and XGATE opcodes.
	* dis-asm.h (print_insn_m9s12x): Prototype.
	(print_insn_m9s12xg): Prototype.

	* m68hc11.h (R_M68HC12_16B, R_M68HC12_PCREL_9, R_M68HC12_PCREL_10)
	R_M68HC12_HI8XG, R_M68HC12_LO8XG): New relocations.
	(E_M68HC11_XGATE_RAMOFFSET): Define.

	* m68hc11.h: Add XGate definitions.
	(struct m68hc11_opcode): Add xg_mask field.
@
text
@#objdump: -S
#as: -m68hc11 -gdwarf2
#name: Dwarf2 test on insns.s
#source: insns.s

# Test handling of basic instructions.

.*: +file format elf32\-m68hc11

Disassembly of section .text:

00000000 <_start>:
#...
	.globl _start
	.sect .text

_start:
	lds #stack\+1024
   0:	8e 04 00    	lds	#0x400 <stack_end>
	ldx #1
   3:	ce 00 01    	ldx	#0x1 <_start\+0x1>

0+06 <Loop>:
Loop:	
	jsr test
   6:	bd 00 00    	jsr	0x0 <_start>
	dex
   9:	09          	dex
	bne Loop
   a:	26 fa       	bne	0x6 <Loop>

0000000c <Stop>:
   c:	cd 03       	.byte	0xcd, 0x03
Stop:
	
	.byte 0xcd
	.byte 3	
	bra _start
   e:	20 f0       	bra	0x0 <_start>

00000010 <test>:

test:
	ldd #2
  10:	cc 00 02    	ldd	#0x2 <_start\+0x2>
	jsr test2
  13:	bd 00 00    	jsr	0x0 <_start>
	rts
  16:	39          	rts

00000017 <test2>:

D_low = 50
value = 23
		
	.globl test2
test2:
	ldx value,y
  17:	cd ee 17    	ldx	0x17,y
	std value,x
  1a:	ed 17       	std	0x17,x
	ldd ,x
  1c:	ec 00       	ldd	0x0,x
	sty ,y
  1e:	18 ef 00    	sty	0x0,y
	stx ,y
  21:	cd ef 00    	stx	0x0,y
	brclr 6,x,#4,test2
  24:	1f 06 04 ef 	brclr	0x6,x, #0x04, 0x17 <test2>
	brclr 12,x #8 test2
  28:	1f 0c 08 eb 	brclr	0xc,x, #0x08, 0x17 <test2>
	ldd \*ZD1
  2c:	dc 00       	ldd	\*0x0 <_start>
	ldx \*ZD1\+2
  2e:	de 02       	ldx	\*0x2 <_start\+0x2>
	clr \*ZD2
  30:	7f 00 00    	clr	0x0 <_start>
	clr \*ZD2\+1
  33:	7f 00 01    	clr	0x1 <_start\+0x1>
	bne .-4
  36:	26 fc       	bne	0x34 <test2\+0x1d>
	beq .\+2
  38:	27 02       	beq	0x3c <test2\+0x25>
	bclr \*ZD1\+1, #32
  3a:	15 01 20    	bclr	\*0x1 <_start\+0x1>, #0x20
	brclr \*ZD2\+2, #40, test2
  3d:	13 02 28 d6 	brclr	\*0x2 <_start\+0x2>, #0x28, 0x17 <test2>
	ldy #24\+_start-44
  41:	18 ce ff ec 	ldy	#0xffec <stack_end\+0xfbec>
	ldd B_low,y
  45:	18 ec 0c    	ldd	0xc,y
	addd A_low,y
  48:	18 e3 2c    	addd	0x2c,y
	addd D_low,y
  4b:	18 e3 32    	addd	0x32,y
	subd A_low
  4e:	b3 00 2c    	subd	0x2c <test2\+0x15>
	subd #A_low
  51:	83 00 2c    	subd	#0x2c <test2\+0x15>
	jmp Stop
  54:	7e 00 00    	jmp	0x0 <_start>

00000057 <L1>:
L1:	
	anda #%lo\(test2\)
  57:	84 17       	anda	#0x17
	andb #%hi\(test2\)
  59:	c4 00       	andb	#0x0
	ldab #%page\(test2\)	; Check that the relocs are against symbol
  5b:	c6 00       	ldab	#0x0
	ldy  #%addr\(test2\)	; otherwise linker relaxation fails
  5d:	18 ce 00 00 	ldy	#0x0 <_start>
	rts
  61:	39          	rts
@


1.5
log
@* gas/m68hc11/bug-1825.d: Update to match changes in the
  information generated with source-in-disassembly listings.
  * gas/m68hc11/indexed12.d: Likewise.
  * gas/m68hc11/insns-dwarf2.d: Likewise.
  * gas/m68hc11/lbranch-dwarf2.d: Likewise.
@
text
@d19 1
a19 1
   0:	8e 04 00    	lds	#400 <stack_end>
d21 1
a21 1
   3:	ce 00 01    	ldx	#1 <_start\+0x1>
d26 1
a26 1
   6:	bd 00 00    	jsr	0 <_start>
d30 1
a30 1
   a:	26 fa       	bne	6 <Loop>
d39 1
a39 1
   e:	20 f0       	bra	0 <_start>
d45 1
a45 1
  10:	cc 00 02    	ldd	#2 <_start\+0x2>
d47 1
a47 1
  13:	bd 00 00    	jsr	0 <_start>
d59 1
a59 1
  17:	cd ee 17    	ldx	23,y
d61 1
a61 1
  1a:	ed 17       	std	23,x
d63 1
a63 1
  1c:	ec 00       	ldd	0,x
d65 1
a65 1
  1e:	18 ef 00    	sty	0,y
d67 1
a67 1
  21:	cd ef 00    	stx	0,y
d69 1
a69 1
  24:	1f 06 04 ef 	brclr	6,x #\$04 17 <test2>
d71 1
a71 1
  28:	1f 0c 08 eb 	brclr	12,x #\$08 17 <test2>
d73 1
a73 1
  2c:	dc 00       	ldd	\*0 <_start>
d75 1
a75 1
  2e:	de 02       	ldx	\*2 <_start\+0x2>
d77 1
a77 1
  30:	7f 00 00    	clr	0 <_start>
d79 1
a79 1
  33:	7f 00 01    	clr	1 <_start\+0x1>
d81 1
a81 1
  36:	26 fc       	bne	34 <test2\+0x1d>
d83 1
a83 1
  38:	27 02       	beq	3c <test2\+0x25>
d85 1
a85 1
  3a:	15 01 20    	bclr	\*1 <_start\+0x1> #\$20
d87 1
a87 1
  3d:	13 02 28 d6 	brclr	\*2 <_start\+0x2> #\$28 17 <test2>
d89 1
a89 1
  41:	18 ce ff ec 	ldy	#ffec <stack_end\+0xfbec>
d91 1
a91 1
  45:	18 ec 0c    	ldd	12,y
d93 1
a93 1
  48:	18 e3 2c    	addd	44,y
d95 1
a95 1
  4b:	18 e3 32    	addd	50,y
d97 1
a97 1
  4e:	b3 00 2c    	subd	2c <test2\+0x15>
d99 1
a99 1
  51:	83 00 2c    	subd	#2c <test2\+0x15>
d101 1
a101 1
  54:	7e 00 00    	jmp	0 <_start>
d106 1
a106 1
  57:	84 17       	anda	#23
d108 1
a108 1
  59:	c4 00       	andb	#0
d110 1
a110 1
  5b:	c6 00       	ldab	#0
d112 1
a112 1
  5d:	18 ce 00 00 	ldy	#0 <_start>
@


1.4
log
@	* gas/m68hc11/insns.s: Add %page and %addr checks.
	* gas/m68hc11/insns12.s: Likewise.
	* gas/m68hc11/insns-dwarf2.d: Update.
	* gas/m68hc11/insns.d: Update.
@
text
@d13 1
a52 2
B_low = 12
A_low = 44
@


1.3
log
@	* gas/m68hc11/insns.s: Don't use .comm for stack symbol so that objdump
	can find the real symbol and not a gas internal debug symbol.
	* gas/m68hc11/insns.d: Update.
	* gas/m68hc11/insns-dwarf2.d: Update.
	* gas/m68hc11/insns12.d: Update.
	* gas/m68hc11/opers12.s (min5b, min9b): Use 16 and -256 for the min.
	* gas/m68hc11/opers12.d: Update after indexed offset operand fixes.
	* gas/m68hc11/opers12-dwarf2.d: Likewise.
@
text
@d110 4
d115 1
a115 1
  5b:	39          	rts
@


1.2
log
@	* gas/m68hc11/all.exp: Run the new test.
	* gas/m68hc11/insns12.s: New file to test specific 68HC12 insns.
	* gas/m68hc11/insns12.d: New file.
	* gas/m68hc11/branchs12.s: New test.
	* gas/m68hc11/branchs12.d: New test.

	* gas/m68hc11/all_insns.d: Dump the relocs to verify that they
	are against symbols and not sections (for linker relaxation).
	* gas/m68hc11/insns-dwarf2.d: Likewise.
	* gas/m68hc11/insns.d: Likewise.
	* gas/m68hc11/lbranch.d: Likewise.
	* gas/m68hc11/lbranch-dwarf2.d: Likewise.
	* gas/m68hc11/opers12.d: Likewise.
	* gas/m68hc11/opers12-dwarf2.d: Likewise.
@
text
@d18 1
a18 1
   0:	8e 04 00    	lds	#400 <.L0\+0x3a4>
d90 1
a90 1
  41:	18 ce ff ec 	ldy	#ffec <.L0\+0xff90>
@


1.1
log
@Dwarf2 test for 68HC11/68HC12 gas
@
text
@d12 1
a12 1
0+0 <_start>:
d18 1
a18 1
   0:	8e 04 00    	lds	#400 <L1\+0x3a9>
d22 1
a22 1
00000006 <Loop>:
d25 1
a25 1
   6:	bd 00 10    	jsr	10 <test>
d46 1
a46 1
  13:	bd 00 17    	jsr	17 <test2>
d90 1
a90 1
  41:	18 ce ff ec 	ldy	#ffec <L1\+0xff95>
d102 1
a102 1
  54:	7e 00 0c    	jmp	c <Stop>
d104 1
a104 1
0+057 <L1>:
@

