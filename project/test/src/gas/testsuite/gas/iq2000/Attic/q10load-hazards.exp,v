head	1.2;
access;
symbols
	csl-arm-2004-q3d:1.1
	csl-arm-2004-q3:1.1
	binutils-2_15:1.1
	binutils-2_15-branchpoint:1.1
	csl-arm-2004-q1a:1.1
	csl-arm-2004-q1:1.1
	binutils-2_15-branch:1.1.0.8
	cagney_bfdfile-20040213-branch:1.1.0.6
	cagney_bfdfile-20040213-branchpoint:1.1
	cagney_bigcore-20040122-branch:1.1.0.4
	cagney_bigcore-20040122-branchpoint:1.1
	csl-arm-2003-q4:1.1
	binutils-2_14:1.1
	binutils-2_14-branch:1.1.0.2
	binutils-2_14-branchpoint:1.1
	binutils_latest_snapshot:1.1;
locks; strict;
comment	@# @;


1.2
date	2004.11.24.13.23.52;	author nickc;	state dead;
branches;
next	1.1;

1.1
date	2003.01.03.21.38.50;	author scox;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove IQ10 support from IQ2000 port
@
text
@# Test for warnings when producing load hazards (instructions that
# reference the target of load one stage further down the pipeline.

# Run GAS and check that it emits the desired warning for the test case.
# Arguments:
#   file -- name of the test case to assemble.
#   testname -- a string describing the test.
#   warnpattern -- a regular expression, suitable for use by the Tcl
#     regexp command, to decide if the warning string was emitted by
#     the assembler to stderr.

proc iq2000_warning_test { file testname {warnpattern ""} } {
    global comp_output

    gas_run $file "-m10" ">/dev/null"
    verbose "output was $comp_output" 2

    if {$warnpattern == ""} {
	if {$comp_output == ""} { pass $testname } else { fail $testname }
	return
    }

    if {[regexp "Warning: $warnpattern" $comp_output]} {
	pass $testname
    } else {
	fail $testname
    }
}

if [istarget iq2000*-*-*] {
    foreach file [glob -nocomplain -- $srcdir/$subdir/q10hazard*.s] {
	set file [file tail $file]
	switch -- $file {
	    "q10hazard0.s" {
		set warnpattern "operand references R10 of previous load"
	    }
	    "q10hazard1.s" {
		set warnpattern "operand references R1 of previous load"
	    }
	    "q10hazard2.s" {
		set warnpattern "operand references R2 of previous load"
	    }
	    "q10hazard3.s" {
		set warnpattern "operand references R31 of previous load"
	    }
	    "q10hazard4.s" {
		set warnpattern "operand references R10 of previous load"
	    }
	    "q10hazard5.s" {
		set warnpattern "operand references R1 of previous load"
	    }
	    default {
		error "no expected result specified for $file"
		return
	    }
	}
	iq2000_warning_test $file "assembler emits load hazard warning for $file" $warnpattern
    }

    set testname "assembler emits no warnings when there are no load hazards"
    iq2000_warning_test q10nohazard.s $testname
}
@


1.1
log
@	* gas/iq2000: New testsuite.
@
text
@@

