head	1.5;
access;
symbols
	binutils-2_24-branch:1.5.0.12
	binutils-2_24-branchpoint:1.5
	binutils-2_21_1:1.5
	binutils-2_23_2:1.5
	binutils-2_23_1:1.5
	binutils-2_23:1.5
	binutils-2_23-branch:1.5.0.10
	binutils-2_23-branchpoint:1.5
	binutils-2_22_branch:1.5.0.8
	binutils-2_22:1.5
	binutils-2_22-branch:1.5.0.6
	binutils-2_22-branchpoint:1.5
	binutils-2_21:1.5
	binutils-2_21-branch:1.5.0.4
	binutils-2_21-branchpoint:1.5
	binutils-2_20_1:1.5
	binutils-2_20:1.5
	binutils-arc-20081103-branch:1.2.0.8
	binutils-arc-20081103-branchpoint:1.2
	binutils-2_20-branch:1.5.0.2
	binutils-2_20-branchpoint:1.5
	dje-cgen-play1-branch:1.3.0.2
	dje-cgen-play1-branchpoint:1.3
	arc-20081103-branch:1.2.0.6
	arc-20081103-branchpoint:1.2
	binutils-2_19_1:1.2
	binutils-2_19:1.2
	binutils-2_19-branch:1.2.0.4
	binutils-2_19-branchpoint:1.2
	binutils-2_18:1.2
	binutils-2_18-branch:1.2.0.2
	binutils-2_18-branchpoint:1.2
	binutils_latest_snapshot:1.5;
locks; strict;
comment	@ * @;


1.5
date	2009.09.02.07.24.20;	author amodra;	state Exp;
branches;
next	1.4;

1.4
date	2009.07.04.01.50.44;	author amodra;	state Exp;
branches;
next	1.3;

1.3
date	2008.11.27.11.57.29;	author swami;	state Exp;
branches;
next	1.2;

1.2
date	2007.07.03.11.01.04;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	2007.06.29.14.09.30;	author nickc;	state Exp;
branches;
next	;


desc
@@


1.5
log
@update copyright dates
@
text
@/* tc-cr16.h -- Header file for tc-cr16.c, the CR16 GAS port.
   Copyright 2007, 2008, 2009 Free Software Foundation, Inc.

   Contributed by M R Swami Reddy <MR.Swami.Reddy@@nsc.com>

   This file is part of GAS, the GNU Assembler.

   GAS is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3, or (at your option)
   any later version.

   GAS is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with GAS; see the file COPYING.  If not, write to the
   Free Software Foundation, 51 Franklin Street - Fifth Floor, Boston,
   MA 02110-1301, USA.  */

#ifndef TC_CR16_H
#define TC_CR16_H

#define TC_CR16 1

#define TARGET_BYTES_BIG_ENDIAN 0

#define GLOBAL_OFFSET_TABLE_NAME "_GLOBAL_OFFSET_TABLE_"

#define TARGET_FORMAT "elf32-cr16"
#define TARGET_ARCH   bfd_arch_cr16

#define WORKING_DOT_WORD
#define LOCAL_LABEL_PREFIX '.'

#define md_number_to_chars      number_to_chars_littleendian

/* We do relaxing in the assembler as well as the linker.  */
extern const struct relax_type md_relax_table[];
#define TC_GENERIC_RELAX_TABLE md_relax_table

/* We do not want to adjust any relocations to make implementation of
   linker relaxations easier.  */
#define tc_fix_adjustable(fixP)  0

/* We need to force out some relocations when relaxing.  */
#define TC_FORCE_RELOCATION(FIXP) cr16_force_relocation (FIXP)
extern int cr16_force_relocation (struct fix *);

/* Fixup non-code sections since we will never relax them.  */
#define TC_LINKRELAX_FIXUP(seg) \
  ((seg->flags & (SEC_ALLOC | SEC_CODE)) == (SEC_ALLOC | SEC_CODE))

/* CR16 instructions, with operands included, are a multiple
   of two bytes long.  */
#define DWARF2_LINE_MIN_INSN_LENGTH 2

extern void cr16_cons_fix_new (struct frag *, int, int, struct expressionS *);
/* This is called by emit_expr when creating a reloc for a cons.
   We could use the definition there, except that we want to handle 
   the CR16 reloc type specially, rather than the BFD_RELOC type.  */
#define TC_CONS_FIX_NEW(FRAG, OFF, LEN, EXP) \
  cr16_cons_fix_new (FRAG, OFF, LEN, EXP) 

/* Give an error if a frag containing code is not aligned to a 2-byte 
   boundary.  */
#define md_frag_check(FRAGP) \
  if ((FRAGP)->has_code                                                \
      && (((FRAGP)->fr_address + (FRAGP)->insn_addr) & 1) != 0)        \
     as_bad_where ((FRAGP)->fr_file, (FRAGP)->fr_line,                 \
                  _("instruction address is not a multiple of 2"));

#endif /* TC_CR16_H */
@


1.4
log
@	* config/tc-cr16.h (TC_LINKRELAX_FIXUP): Set only for code sections.
@
text
@d2 1
a2 1
   Copyright 2007, 2009 Free Software Foundation, Inc.
@


1.3
log
@

        * config/tc-cr16.h (GLOBAL_OFFSET_TABLE_NAME): Defined
        * config/tc-cr16.c (md_pseudo_table): Add "4byte" directive to
        md_pseudo_table and accept @@c prefix, same as long directive.
        (cr16_cons_fix_new): Initialize rtype to BFD_RELOC_UNUSED.
        config/tc-cr16.c (tc_gen_reloc): Declare a variable of type
        bfd_reloc_code_real_type and set it for GOT related relocations.
        (md_undefined_symbol): Defined
        (process_label_constant): Added checks for GOT/got and cGOT/cGOT
        prefixes with constant label and set the appropriate relocation type.
        * doc/c-cr16.texi (cr16-operand specifiers): Add got/GOT and cgot/cGOT.
@
text
@d2 1
a2 1
   Copyright 2007 Free Software Foundation, Inc.
d52 3
a54 2
/* Fixup debug sections since we will never relax them.  */
#define TC_LINKRELAX_FIXUP(seg) (seg->flags & SEC_ALLOC)
@


1.2
log
@Switch to GPLv3
@
text
@d30 2
a37 1
#define md_undefined_symbol(s)  0
@


1.1
log
@New port: National Semiconductor's CR16
@
text
@d10 1
a10 1
   the Free Software Foundation; either version 2, or (at your option)
@

