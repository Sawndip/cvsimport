head	1.15;
access;
symbols
	binutils-2_24-branch:1.15.0.22
	binutils-2_24-branchpoint:1.15
	binutils-2_21_1:1.15
	binutils-2_23_2:1.15
	binutils-2_23_1:1.15
	binutils-2_23:1.15
	binutils-2_23-branch:1.15.0.20
	binutils-2_23-branchpoint:1.15
	binutils-2_22_branch:1.15.0.18
	binutils-2_22:1.15
	binutils-2_22-branch:1.15.0.16
	binutils-2_22-branchpoint:1.15
	binutils-2_21:1.15
	binutils-2_21-branch:1.15.0.14
	binutils-2_21-branchpoint:1.15
	binutils-2_20_1:1.15
	binutils-2_20:1.15
	binutils-arc-20081103-branch:1.15.0.12
	binutils-arc-20081103-branchpoint:1.15
	binutils-2_20-branch:1.15.0.10
	binutils-2_20-branchpoint:1.15
	dje-cgen-play1-branch:1.15.0.8
	dje-cgen-play1-branchpoint:1.15
	arc-20081103-branch:1.15.0.6
	arc-20081103-branchpoint:1.15
	binutils-2_19_1:1.15
	binutils-2_19:1.15
	binutils-2_19-branch:1.15.0.4
	binutils-2_19-branchpoint:1.15
	binutils-2_18:1.15
	binutils-2_18-branch:1.15.0.2
	binutils-2_18-branchpoint:1.15
	binutils-csl-coldfire-4_1-32:1.14
	binutils-csl-sourcerygxx-4_1-32:1.14
	binutils-csl-innovasic-fido-3_4_4-33:1.14
	binutils-csl-sourcerygxx-3_4_4-32:1.11
	binutils-csl-coldfire-4_1-30:1.14
	binutils-csl-sourcerygxx-4_1-30:1.14
	binutils-csl-coldfire-4_1-28:1.14
	binutils-csl-sourcerygxx-4_1-29:1.14
	binutils-csl-sourcerygxx-4_1-28:1.14
	binutils-csl-arm-2006q3-27:1.14
	binutils-csl-sourcerygxx-4_1-27:1.14
	binutils-csl-arm-2006q3-26:1.14
	binutils-csl-sourcerygxx-4_1-26:1.14
	binutils-csl-sourcerygxx-4_1-25:1.14
	binutils-csl-sourcerygxx-4_1-24:1.14
	binutils-csl-sourcerygxx-4_1-23:1.14
	binutils-csl-sourcerygxx-4_1-21:1.14
	binutils-csl-arm-2006q3-21:1.14
	binutils-csl-sourcerygxx-4_1-22:1.14
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.14
	binutils-csl-sourcerygxx-4_1-20:1.14
	binutils-csl-arm-2006q3-19:1.14
	binutils-csl-sourcerygxx-4_1-19:1.14
	binutils-csl-sourcerygxx-4_1-18:1.14
	binutils-csl-renesas-4_1-9:1.14
	binutils-csl-sourcerygxx-3_4_4-25:1.11
	binutils-csl-renesas-4_1-8:1.14
	binutils-csl-renesas-4_1-7:1.14
	binutils-csl-renesas-4_1-6:1.14
	binutils-csl-sourcerygxx-4_1-17:1.14
	binutils-csl-sourcerygxx-4_1-14:1.14
	binutils-csl-sourcerygxx-4_1-15:1.14
	binutils-csl-sourcerygxx-4_1-13:1.14
	binutils-2_17:1.14
	binutils-csl-sourcerygxx-4_1-12:1.14
	binutils-csl-sourcerygxx-3_4_4-21:1.14
	binutils-csl-wrs-linux-3_4_4-24:1.11
	binutils-csl-wrs-linux-3_4_4-23:1.11
	binutils-csl-sourcerygxx-4_1-9:1.14
	binutils-csl-sourcerygxx-4_1-8:1.14
	binutils-csl-sourcerygxx-4_1-7:1.14
	binutils-csl-arm-2006q1-6:1.14
	binutils-csl-sourcerygxx-4_1-6:1.14
	binutils-csl-wrs-linux-3_4_4-22:1.11
	binutils-csl-coldfire-4_1-11:1.14
	binutils-csl-sourcerygxx-3_4_4-19:1.14
	binutils-csl-coldfire-4_1-10:1.14
	binutils-csl-sourcerygxx-4_1-5:1.14
	binutils-csl-sourcerygxx-4_1-4:1.14
	binutils-csl-wrs-linux-3_4_4-21:1.11
	binutils-csl-morpho-4_1-4:1.14
	binutils-csl-sourcerygxx-3_4_4-17:1.14
	binutils-csl-wrs-linux-3_4_4-20:1.11
	binutils-2_17-branch:1.14.0.4
	binutils-2_17-branchpoint:1.14
	binutils-csl-2_17-branch:1.14.0.2
	binutils-csl-2_17-branchpoint:1.14
	binutils-csl-gxxpro-3_4-branch:1.11.0.14
	binutils-csl-gxxpro-3_4-branchpoint:1.11
	binutils-2_16_1:1.11
	binutils-csl-arm-2005q1b:1.11
	binutils-2_16:1.11
	binutils-csl-arm-2005q1a:1.11
	binutils-csl-arm-2005q1-branch:1.11.0.12
	binutils-csl-arm-2005q1-branchpoint:1.11
	binutils-2_16-branch:1.11.0.10
	binutils-2_16-branchpoint:1.11
	csl-arm-2004-q3d:1.11
	csl-arm-2004-q3:1.11
	binutils-2_15:1.11
	binutils-2_15-branchpoint:1.11
	csl-arm-2004-q1a:1.11
	csl-arm-2004-q1:1.11
	binutils-2_15-branch:1.11.0.8
	cagney_bfdfile-20040213-branch:1.11.0.6
	cagney_bfdfile-20040213-branchpoint:1.11
	cagney_bigcore-20040122-branch:1.11.0.4
	cagney_bigcore-20040122-branchpoint:1.11
	csl-arm-2003-q4:1.11
	binutils-2_14:1.11
	binutils-2_14-branch:1.11.0.2
	binutils-2_14-branchpoint:1.11
	binutils-2_13_2_1:1.10
	binutils-2_13_2:1.10
	binutils-2_13_1:1.10
	binutils-2_13:1.10
	binutils-2_13-branchpoint:1.10
	binutils-2_13-branch:1.10.0.4
	binutils-2_12_1:1.10
	binutils-2_12:1.10
	binutils-2_12-branch:1.10.0.2
	binutils-2_12-branchpoint:1.10
	cygnus_cvs_20020108_pre:1.10
	binutils-2_11_2:1.6.2.1
	binutils-2_11_1:1.6.2.1
	binutils-2_11:1.6
	x86_64versiong3:1.6
	binutils-2_11-branch:1.6.0.2
	binutils-2_10_1:1.2
	binutils-2_10:1.2
	binutils-2_10-branch:1.2.0.2
	binutils-2_10-branchpoint:1.2
	binutils_latest_snapshot:1.15
	repo-unification-2000-02-06:1.2
	binu_ss_19990721:1.2
	binu_ss_19990602:1.1.1.1
	binu_ss_19990502:1.1.1.1
	cygnus:1.1.1;
locks; strict;
comment	@ * @;


1.15
date	2007.07.03.11.01.04;	author nickc;	state Exp;
branches
	1.15.12.1;
next	1.14;

1.14
date	2005.06.07.17.54.15;	author zack;	state Exp;
branches;
next	1.13;

1.13
date	2005.05.05.09.12.54;	author nickc;	state Exp;
branches;
next	1.12;

1.12
date	2005.03.24.20.40.25;	author nickc;	state Exp;
branches;
next	1.11;

1.11
date	2002.09.05.00.01.16;	author amodra;	state Exp;
branches;
next	1.10;

1.10
date	2001.11.15.21.28.54;	author nickc;	state Exp;
branches;
next	1.9;

1.9
date	2001.09.24.14.47.10;	author nickc;	state Exp;
branches;
next	1.8;

1.8
date	2001.05.12.15.14.52;	author amodra;	state Exp;
branches;
next	1.7;

1.7
date	2001.03.08.23.24.23;	author nickc;	state Exp;
branches;
next	1.6;

1.6
date	2001.01.14.18.54.06;	author kazu;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	2001.01.11.21.20.17;	author nickc;	state Exp;
branches;
next	1.4;

1.4
date	2000.11.08.00.06.34;	author nickc;	state Exp;
branches;
next	1.3;

1.3
date	2000.09.15.01.06.52;	author kazu;	state Exp;
branches;
next	1.2;

1.2
date	99.06.03.00.29.22;	author ian;	state Exp;
branches;
next	1.1;

1.1
date	99.05.03.07.28.42;	author rth;	state Exp;
branches
	1.1.1.1;
next	;

1.15.12.1
date	2009.09.10.15.09.32;	author amylaar;	state Exp;
branches;
next	;

1.6.2.1
date	2001.05.23.03.41.10;	author amodra;	state Exp;
branches;
next	;

1.1.1.1
date	99.05.03.07.28.42;	author rth;	state Exp;
branches;
next	;


desc
@@


1.15
log
@Switch to GPLv3
@
text
@/* tc-arc.h - Macros and type defines for the ARC.
   Copyright 1994, 1995, 1997, 2000, 2001, 2002, 2005, 2007
   Free Software Foundation, Inc.
   Contributed by Doug Evans (dje@@cygnus.com).

   This file is part of GAS, the GNU Assembler.

   GAS is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as
   published by the Free Software Foundation; either version 3,
   or (at your option) any later version.

   GAS is distributed in the hope that it will be useful, but
   WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See
   the GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with GAS; see the file COPYING.  If not, write to the Free
   Software Foundation, 51 Franklin Street - Fifth Floor, Boston, MA
   02110-1301, USA.  */

#define TC_ARC 1

#define TARGET_BYTES_BIG_ENDIAN 0

#define LOCAL_LABELS_FB 1

#define TARGET_ARCH bfd_arch_arc

#define DIFF_EXPR_OK
#define REGISTER_PREFIX '%'

#ifdef LITTLE_ENDIAN
#undef LITTLE_ENDIAN
#endif

#ifdef BIG_ENDIAN
#undef BIG_ENDIAN
#endif

#define LITTLE_ENDIAN   1234

#define BIG_ENDIAN      4321

/* The endianness of the target format may change based on command
   line arguments.  */
extern const char * arc_target_format;

#define DEFAULT_TARGET_FORMAT  "elf32-littlearc"
#define TARGET_FORMAT          arc_target_format
#define DEFAULT_BYTE_ORDER     LITTLE_ENDIAN
#define WORKING_DOT_WORD
#define LISTING_HEADER         "ARC GAS "

/* The ARC needs to parse reloc specifiers in .word.  */

extern void arc_parse_cons_expression (struct expressionS *, unsigned);
#define TC_PARSE_CONS_EXPRESSION(EXP, NBYTES) \
  arc_parse_cons_expression (EXP, NBYTES)

extern void arc_cons_fix_new (struct frag *, int, int, struct expressionS *);
#define TC_CONS_FIX_NEW(FRAG, WHERE, NBYTES, EXP) \
  arc_cons_fix_new (FRAG, WHERE, NBYTES, EXP)

#define DWARF2_LINE_MIN_INSN_LENGTH 4

/* Values passed to md_apply_fix don't include the symbol value.  */
#define MD_APPLY_SYM_VALUE(FIX) 0

/* No shared lib support, so we don't need to ensure externally
   visible symbols can be overridden.  */
#define EXTERN_FORCE_RELOC 0
@


1.15.12.1
log
@Commit patches for ARCompact support to binutils-arc-20081103-branch .
@
text
@d2 1
a2 1
   Copyright 1994, 1995, 1997, 1998, 2000, 2001, 2002, 2005, 2006, 2007, 2008, 2009
a57 5
/* We need to take care of not having section relative fixups for the 
   fixups with respect to Position Independent Code */
#define tc_fix_adjustable(X)  tc_arc_fix_adjustable(X)
extern int tc_arc_fix_adjustable (struct fix *);

d66 1
a66 15
#define GLOBAL_OFFSET_TABLE_NAME "_GLOBAL_OFFSET_TABLE_"
#define DYNAMIC_STRUCT_NAME "_DYNAMIC"

extern void arc_check_label (symbolS *labelsym);
#define tc_check_label(ls)      arc_check_label (ls)

/* This hook is required to parse register names as operands. */
#define md_parse_name(name, exp, m, c) arc_parse_name (name, exp)
extern int arc_parse_name (const char *, struct expressionS *);

/* Define this macro to enforce non-register operands to be prefixed with
 * the @@ character.  */
/* #define ENFORCE_AT_PREFIX */

#define DWARF2_LINE_MIN_INSN_LENGTH (arc_mach_a4 ? 4 : 2)
a73 77

#include "opcode/arc.h" /* for arc_insn */

struct enriched_insn
{
  arc_insn insn;
  unsigned short delay_slot;
  unsigned short limm;
  asymbol *sym;
};

struct loop_target
{
  /* Pointer to the symbol.  */
  asymbol* symbol;
  
  /* Contains the last two instructions before the loop target.  */
  struct enriched_insn prev_two_insns[2];
};

/* Extra stuff that we need to keep track of for each symbol.  */
struct arc_tc_sy
{
  struct loop_target loop_target;
#if 0
  /* The real name, if the symbol was renamed.  */
  char *real_name;
#endif
};

#define TC_SYMFIELD_TYPE struct arc_tc_sy
#define tc_symbol_new_hook(symbolP) (symbolP)->sy_tc.loop_target.symbol = 0;

#if 0
/* Finish up the symbol.  */
extern int arc_frob_symbol (struct symbol *);
#define tc_frob_symbol(sym, punt) punt = arc_frob_symbol (sym)
#endif

/* To handle alignment.  */
/* Used to restrict the amount of memory allocated for representing
   the alignment code.  */
#define MAX_MEM_FOR_RS_ALIGN_CODE (arc_mach_a4 ? 3+4 : 1+2)
/* HANDLE_ALIGN called after all the assembly has been done,
   so we can fill in all the rs_align_code type frags with
   nop instructions.  */
#define HANDLE_ALIGN(FRAGP)	 arc_handle_align(FRAGP)
extern void arc_handle_align (fragS* fragP);


/* register class field size in extension section */
#define RCLASS_SET_SIZE 4
/* operand format field size in extension section */
#define OPD_FORMAT_SIZE 8

#define	FLAG_3OP	 0x1
#define FLAG_2OP	 0x2
#define FLAG_NOP	 0x4
#define FLAG_1OP	 0x8
#define FLAG_IGN_DEST	 0x10
#define FLAG_4OP_U9	 0x20
#define FLAG_FLAG	 0x40     // Flag bit is part of instruction encoding
#define FLAG_3OP_U8	 0x80     // SIMD engine decode for VLD/VST/VMOV

#define FLAG_SCALE_1	 0x100 // optional scale factors for SIMD U8 encoding
#define FLAG_SCALE_2	 0x200
#define FLAG_SCALE_3	 0x400
#define FLAG_SCALE_4	 0x800
#define FLAG_EXT_S16	 0x1000
#define FLAG_AS		 0x2000
#define FLAG_AP		 0x4000
#define FLAG_AM		 0x6000

#define FLAG_FMT1	 0x10000
#define FLAG_FMT2	 0x20000
#define FLAG_FMT3	 0x30000

@


1.14
log
@gas:
	* cgen.c, cgen.h, tc.h, write.c, config/obj-coff.c
	* config/tc-a29k.c, config/tc-alpha.c, config/tc-alpha.h
	* config/tc-arc.c, config/tc-arc.h, config/tc-arm.c
	* config/tc-arm.h, config/tc-avr.c, config/tc-avr.h
	* config/tc-cris.c, config/tc-crx.c, config/tc-d10v.c
	* config/tc-d10v.h, config/tc-d30v.c, config/tc-d30v.h
	* config/tc-dlx.c, config/tc-dlx.h, config/tc-fr30.h
	* config/tc-frv.c, config/tc-frv.h, config/tc-h8300.c
	* config/tc-h8500.c, config/tc-hppa.c, config/tc-hppa.h
	* config/tc-i370.c, config/tc-i370.h, config/tc-i386.c
	* config/tc-i386.h, config/tc-i860.c, config/tc-i860.h
	* config/tc-i960.c, config/tc-i960.h, config/tc-ia64.c
	* config/tc-ip2k.c, config/tc-ip2k.h, config/tc-iq2000.c
	* config/tc-iq2000.h, config/tc-m32r.c, config/tc-m32r.h
	* config/tc-m68hc11.c, config/tc-m68hc11.h, config/tc-m68k.c
	* config/tc-m68k.h, config/tc-m88k.c, config/tc-maxq.c
	* config/tc-mcore.c, config/tc-mcore.h, config/tc-mips.c
	* config/tc-mips.h, config/tc-mmix.c, config/tc-mn10200.c
	* config/tc-mn10300.c, config/tc-msp430.c, config/tc-ns32k.c
	* config/tc-openrisc.h, config/tc-or32.c, config/tc-or32.h
	* config/tc-pdp11.c, config/tc-pj.c, config/tc-pj.h
	* config/tc-ppc.c, config/tc-ppc.h, config/tc-s390.c
	* config/tc-s390.h, config/tc-sh64.c, config/tc-sh.c
	* config/tc-sh.h, config/tc-sparc.c, config/tc-sparc.h
	* config/tc-tahoe.c, config/tc-tic30.c, config/tc-tic4x.c
	* config/tc-tic54x.c, config/tc-tic80.c, config/tc-v850.c
	* config/tc-v850.h, config/tc-vax.c, config/tc-vax.h
	* config/tc-w65.c, config/tc-xstormy16.c, config/tc-xstormy16.h
	* config/tc-xtensa.c, config/tc-z8k.c:
	Replace all instances of the string "_apply_fix3" with
	"_apply_fix".
	* po/POTFILES.in, po/gas.pot: Regenerate.
bfd:
	* coff-i386.c: Change md_apply_fix3 to md_apply_fix in comment.
cgen:
	* doc/porting.texi: Change all mention of md_apply_fix3 and
	gas_cgen_md_apply_fix3 to md_apply_fix and gas_cgen_md_apply_fix
	respectively.
@
text
@d2 1
a2 1
   Copyright 1994, 1995, 1997, 2000, 2001, 2002, 2005
d10 1
a10 1
   published by the Free Software Foundation; either version 2,
@


1.13
log
@Update the address and phone number of the FSF
@
text
@d68 1
a68 1
/* Values passed to md_apply_fix3 don't include the symbol value.  */
@


1.12
log
@Convert unmaintained files over to ISO-C90 and fix formatting.
@
text
@d20 2
a21 2
   Software Foundation, 59 Temple Place - Suite 330, Boston, MA
   02111-1307, USA.  */
@


1.11
log
@gas reloc rewrite.
@
text
@d2 1
a2 1
   Copyright 1994, 1995, 1997, 2000, 2001, 2002
d48 1
a48 4
extern const char *arc_target_format;
#define DEFAULT_TARGET_FORMAT "elf32-littlearc"
#define TARGET_FORMAT arc_target_format
#define DEFAULT_BYTE_ORDER LITTLE_ENDIAN
d50 3
d54 1
a54 2

#define LISTING_HEADER "ARC GAS "
d58 1
a58 1
extern void arc_parse_cons_expression PARAMS ((struct expressionS *, unsigned));
d60 1
a60 1
arc_parse_cons_expression (EXP, NBYTES)
d62 1
a62 1
extern void arc_cons_fix_new PARAMS ((struct frag *, int, int, struct expressionS *));
d64 1
a64 1
arc_cons_fix_new (FRAG, WHERE, NBYTES, EXP)
@


1.10
log
@Update all uses of md_apply_fix to use md_apply_fix3.  Make it a void function.
@
text
@d2 2
a3 1
   Copyright 1994, 1995, 1997, 2000, 2001 Free Software Foundation, Inc.
d68 7
@


1.9
log
@fix compile time warning messages
@
text
@a55 4
#define TC_HANDLES_FX_DONE

#define MD_APPLY_FIX3

@


1.8
log
@Peter Targett's backwards compatibility and other arc fixes.
@
text
@d62 1
a62 1
extern void arc_parse_cons_expression ();
d66 1
a66 1
extern void arc_cons_fix_new ();
@


1.7
log
@Fix copyright notices
@
text
@d69 2
@


1.6
log
@2001-01-14  Kazu Hirata  <kazu@@hxi.com>

	* config/tc-alpha.c: Fix formatting.
	* config/tc-arc.c: Likewise.
	* config/tc-arc.h: Likewise.
	* config/tc-d10v.c: Likewise.
	* config/tc-i370.c: Likewise.
	* config/tc-i386.c: Likewise.
	* config/tc-i960.c: Likewise.
	* config/tc-m68k.c: Likewise.
	* config/tc-ppc.c: Likewise.
	* config/tc-sparc.c: Likewise.
	* config/tc-tahoe.c: Likewise.
	* config/tc-vax.c: Likewise.
@
text
@d2 1
a2 1
   Copyright (C) 1994, 1995, 1997 Free Software Foundation, Inc.
@


1.6.2.1
log
@Merge from mainline.
@
text
@d2 1
a2 1
   Copyright 1994, 1995, 1997, 2000, 2001 Free Software Foundation, Inc.
a68 2

#define DWARF2_LINE_MIN_INSN_LENGTH 4
@


1.5
log
@Updated ARC assembler from arccores.com
@
text
@d20 1
a20 1
   02111-1307, USA. */
@


1.4
log
@Apply patch from Peter Targett to fix building arc-elf32 target.
@
text
@d2 1
a2 1
   Copyright (C) 1994, 1995, 1997, 1999, 2000 Free Software Foundation, Inc.
d20 1
a20 1
   02111-1307, USA.  */
d30 3
d42 1
a68 15

#if 0
/* Extra stuff that we need to keep track of for each symbol.  */
struct arc_tc_sy
{
  /* The real name, if the symbol was renamed.  */
  char *real_name;
};

#define TC_SYMFIELD_TYPE struct arc_tc_sy

/* Finish up the symbol.  */
extern int arc_frob_symbol PARAMS ((symbolS *));
#define tc_frob_symbol(sym, punt) punt = arc_frob_symbol (sym)
#endif
@


1.3
log
@2000-09-14  Kazu Hirata  <kazu@@hxi.com>

	* config/tc-a29k.c: Fix formatting.
	* config/tc-alpha.c: Likewise.
	* config/tc-arc.c: Likewise.
	* config/tc-arc.h: Likewise.
	* config/tc-arm.c: Likewise.
	* config/tc-arm.h: Likewise.
	* config/tc-avr.c: Likewise.
	* config/tc-avr.h: Likewise.
	* config/tc-tic30.c: Likewise.
	* config/tc-tic30.h: Likewise.
	* config/tc-tic54x.c: Likewise.
	* config/tc-tic54x.h: Likewise.
	* config/tc-tic80.c: Likewise.
	* config/tc-tic80.h: Likewise.
@
text
@d30 8
@


1.2
log
@	Add support for storing local symbols in a small structure to save
	memory when assembling large files.
	* as.h: Don't include struc-symbol.h.
	(symbolS): Add typedef.
	* symbols.c: Include struc-symbol.h.
	(local_hash): New static variable.
	(save_symbol_name): New static function, from symbol_create.
	(symbol_create): Call save_symbol_name.
	(local_symbol_count): New static variable.
	(local_symbol_conversion_count): Likewise.
	(LOCAL_SYMBOL_CHECK): Define.
	(local_symbol_make): New static function.
	(local_symbol_convert): New static function.
	(colon): Handle local symbols.  Create local symbol for local
	label name.
	(symbol_table_insert): Handle local symbols.
	(symbol_find_or_make): Create local symbol for local label name.
	(symbol_find_base): Check for local symbol.
	(symbol_append, symbol_insert): Check for local symbols.
	(symbol_clear_list_pointers, symbol_remove): Likewise.
	(verify_symbol_chain): Likewise.
	(copy_symbol_attributes): Likewise.
	(resolve_symbol_value): Handle local symbols.
	(resolve_local_symbol): New static function.
	(resolve_local_symbol_values): New function.
	(S_GET_VALUE, S_SET_VALUE): Handle local symbols.
	(S_IS_FUNCTION, S_IS_EXTERNAL, S_IS_WEAK, S_IS_COMMON): Likewise.
	(S_IS_DEFINED, S_IS_DEBUG, S_IS_LOCAL, S_GET_NAME): Likewise.
	(S_GET_SEGMENT, S_SET_SEGMENT, S_SET_EXTERNAL): Likewise.
	(S_CLEAR_EXTERNAL, S_SET_WEAK, S_SET_NAME): Likewise.
	(symbol_previous, symbol_next): New functions.
	(symbol_get_value_expression): Likewise.
	(symbol_set_value_expression): Likewise.
	(symbol_set_frag, symbol_get_frag): Likewise.
	(symbol_mark_used, symbol_clear_used, symbol_used_p): Likewise.
	(symbol_mark_used_in_reloc): Likewise.
	(symbol_clear_used_in_reloc, symbol_used_in_reloc_p): Likewise.
	(symbol_mark_mri_common, symbol_clear_mri_common): Likewise.
	(symbol_mri_common_p): Likewise.
	(symbol_mark_written, symbol_clear_written): Likewise.
	(symbol_written_p): Likewise.
	(symbol_mark_resolved, symbol_resolved_p): Likewise.
	(symbol_section_p, symbol_equated_p): Likewise.
	(symbol_constant_p): Likewise.
	(symbol_get_bfdsym, symbol_set_bfdsym): Likewise.
	(symbol_get_obj, symbol_set_obj): Likewise.
	(symbol_get_tc, symbol_set_tc): Likewise.
	(symbol_begin): Initialize local_hash.
	(print_symbol_value_1): Handle local symbols.
	(symbol_print_statistics): Print local symbol statistics.
	* symbols.h: Include "struc-symbol.h" if not BFD_ASSEMBLER.
	Declare new symbols.c functions.  Move many declarations here from
	struc-symbol.h.
	(SYMBOLS_NEED_BACKPOINTERS): Define if needed.
	* struc-symbol.h (SYMBOLS_NEED_BACKPOINTERS): Don't set.
	(struct symbol): Move bsym to make it clearly the first field.
	Remove TARGET_SYMBOL_FIELDS.
	(symbolS): Don't typedef.
	(struct broken_word): Remove.
	(N_TYPE_seg, seg_N_TYPE): Move to symbol.h.
	(SEGMENT_TO_SYMBOL_TYPE, N_REGISTER): Likewise.
	(symbol_clear_list_pointers): Likewise.
	(symbol_insert, symbol_remove): Likewise.
	(symbol_previous, symbol_append): Likewise.
	(verify_symbol_chain, verify_symbol_chain_2): Likewise.
	(struct local_symbol): Define.
	(local_symbol_converted_p, local_symbol_mark_converted): Define.
	(local_symbol_resolved_p, local_symbol_mark_resolved): Define.
	(local_symbol_get_frag, local_symbol_set_frag): Define.
	(local_symbol_get_real_symbol): Define.
	(local_symbol_set_real_symbol): Define.
	Define.
	* write.c (write_object_file): Call resolve_local_symbol_values.
	* config/obj-ecoff.h (OBJ_SYMFIELD_TYPE): Define.
	(TARGET_SYMBOL_FIELDS): Don't define.
	* config/obj-elf.h (OBJ_SYMFIELD_TYPE): Add local field.  If
	ECOFF_DEBUGGING, add ECOFF fields.
	(ELF_TARGET_SYMBOL_FIELDS, TARGET_SYMBOL_FIELDS): Don't define.
	* config/obj-multi.h (struct elf_obj_sy): Add local field.  If
	ECOFF_DEBUGGING, add ECOFF fields.
	(ELF_TARGET_SYMBOL_FIELDS, TARGET_SYMBOL_FIELDS): Don't define.
	(ECOFF_DEBUG_TARGET_SYMBOL_FIELDS): Don't define.
	* config/tc-mcore.h: Don't include struc-symbol.h.
	(TARGET_SYMBOL_FIELDS): Don't define.
	(struct mcore_tc_sy): Define.
	(TC_SYMFIELD_TYPE): Define.
	* Many files: Use symbolS instead of struct symbol.  Use new
	accessor functions rather than referring to symbolS fields
	directly.
	* read.c (s_mri_common): Don't add in value of line_label.
	* config/tc-mips.c (md_apply_fix): Correct parenthesization when
	checking for SEC_LINK_ONCE.
	* config/tc-sh.h (sh_fix_adjustable): Declare.
@
text
@d2 1
a2 1
   Copyright (C) 1994, 1995, 1997, 1999 Free Software Foundation, Inc.
d20 1
a20 1
   02111-1307, USA. */
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
   Copyright (C) 1994, 1995, 1997 Free Software Foundation, Inc.
d69 1
a69 1
extern int arc_frob_symbol PARAMS ((struct symbol *));
@


1.1.1.1
log
@19990502 sourceware import
@
text
@@

