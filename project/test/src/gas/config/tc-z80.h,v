head	1.7;
access;
symbols
	binutils-2_24-branch:1.7.0.4
	binutils-2_24-branchpoint:1.7
	binutils-2_21_1:1.6
	binutils-2_23_2:1.7
	binutils-2_23_1:1.7
	binutils-2_23:1.7
	binutils-2_23-branch:1.7.0.2
	binutils-2_23-branchpoint:1.7
	binutils-2_22_branch:1.6.0.8
	binutils-2_22:1.6
	binutils-2_22-branch:1.6.0.6
	binutils-2_22-branchpoint:1.6
	binutils-2_21:1.6
	binutils-2_21-branch:1.6.0.4
	binutils-2_21-branchpoint:1.6
	binutils-2_20_1:1.6
	binutils-2_20:1.6
	binutils-arc-20081103-branch:1.5.0.10
	binutils-arc-20081103-branchpoint:1.5
	binutils-2_20-branch:1.6.0.2
	binutils-2_20-branchpoint:1.6
	dje-cgen-play1-branch:1.5.0.8
	dje-cgen-play1-branchpoint:1.5
	arc-20081103-branch:1.5.0.6
	arc-20081103-branchpoint:1.5
	binutils-2_19_1:1.5
	binutils-2_19:1.5
	binutils-2_19-branch:1.5.0.4
	binutils-2_19-branchpoint:1.5
	binutils-2_18:1.5
	binutils-2_18-branch:1.5.0.2
	binutils-2_18-branchpoint:1.5
	binutils-csl-coldfire-4_1-32:1.3.2.1
	binutils-csl-sourcerygxx-4_1-32:1.3.2.1
	binutils-csl-innovasic-fido-3_4_4-33:1.3.2.1
	binutils-csl-coldfire-4_1-30:1.3.2.1
	binutils-csl-sourcerygxx-4_1-30:1.3.2.1
	binutils-csl-coldfire-4_1-28:1.3.2.1
	binutils-csl-sourcerygxx-4_1-29:1.3.2.1
	binutils-csl-sourcerygxx-4_1-28:1.3.2.1
	binutils-csl-arm-2006q3-27:1.3.2.1
	binutils-csl-sourcerygxx-4_1-27:1.3.2.1
	binutils-csl-arm-2006q3-26:1.3.2.1
	binutils-csl-sourcerygxx-4_1-26:1.3.2.1
	binutils-csl-sourcerygxx-4_1-25:1.3.2.1
	binutils-csl-sourcerygxx-4_1-24:1.3.2.1
	binutils-csl-sourcerygxx-4_1-23:1.3.2.1
	binutils-csl-sourcerygxx-4_1-21:1.3.2.1
	binutils-csl-arm-2006q3-21:1.3.2.1
	binutils-csl-sourcerygxx-4_1-22:1.3.2.1
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.3.2.1
	binutils-csl-sourcerygxx-4_1-20:1.3.2.1
	binutils-csl-arm-2006q3-19:1.3.2.1
	binutils-csl-sourcerygxx-4_1-19:1.3.2.1
	binutils-csl-sourcerygxx-4_1-18:1.3.2.1
	binutils-csl-renesas-4_1-9:1.3.2.1
	binutils-csl-renesas-4_1-8:1.3
	binutils-csl-renesas-4_1-7:1.3
	binutils-csl-renesas-4_1-6:1.3
	binutils-csl-sourcerygxx-4_1-17:1.3
	binutils-csl-sourcerygxx-4_1-14:1.3
	binutils-csl-sourcerygxx-4_1-15:1.3
	binutils-csl-sourcerygxx-4_1-13:1.3
	binutils-2_17:1.4
	binutils-csl-sourcerygxx-4_1-12:1.3
	binutils-csl-sourcerygxx-3_4_4-21:1.3
	binutils-csl-sourcerygxx-4_1-9:1.3
	binutils-csl-sourcerygxx-4_1-8:1.3
	binutils-csl-sourcerygxx-4_1-7:1.3
	binutils-csl-arm-2006q1-6:1.3
	binutils-csl-sourcerygxx-4_1-6:1.3
	binutils-csl-coldfire-4_1-11:1.3
	binutils-csl-sourcerygxx-3_4_4-19:1.3
	binutils-csl-coldfire-4_1-10:1.3
	binutils-csl-sourcerygxx-4_1-5:1.3
	binutils-csl-sourcerygxx-4_1-4:1.3
	binutils-csl-morpho-4_1-4:1.3
	binutils-csl-sourcerygxx-3_4_4-17:1.3
	binutils-2_17-branch:1.4.0.2
	binutils-2_17-branchpoint:1.4
	binutils-csl-2_17-branch:1.3.0.2
	binutils-csl-2_17-branchpoint:1.3
	binutils_latest_snapshot:1.7;
locks; strict;
comment	@ * @;


1.7
date	2012.05.06.09.49.21;	author arnoldm;	state Exp;
branches;
next	1.6;

1.6
date	2009.09.02.07.24.21;	author amodra;	state Exp;
branches;
next	1.5;

1.5
date	2007.07.03.11.01.05;	author nickc;	state Exp;
branches;
next	1.4;

1.4
date	2006.04.09.18.08.08;	author arnoldm;	state Exp;
branches;
next	1.3;

1.3
date	2006.02.05.11.57.35;	author arnoldm;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2005.11.07.02.15.47;	author amodra;	state Exp;
branches;
next	1.1;

1.1
date	2005.10.25.17.40.17;	author nickc;	state Exp;
branches;
next	;

1.3.2.1
date	2006.08.22.15.08.36;	author jsm28;	state Exp;
branches;
next	;


desc
@@


1.7
log
@2012-05-06  Arnold Metselaar <arnold_m@@operamail.com>

	* config/tc-z80.h(md_register_arithmetic): Define as 0.
	* config/tc-z80.c(md_begin): Store register names in symbol table, prevents usage as ordinary symbol.
	* config/tc-z80.c(contains_register): New function.
	* config/tc-z80.c(parse_exp2): Removed.
	* config/tc-z80.c(parse_exp_not_indexed): New function.
	* config/tc-z80.c(parse_exp): Add code to recogize indexed addressing after parsing.
	* config/tc-z80.c(emit_byte, emit_word): Use contains_register.
	* config/tc-z80.c(emit_jp): Use parse_exp_not_indexed, simplify condition for jump to register.
	* config/tc-z80.c(emit_call, emit_jr, emit_ex, emit_rst): Use parse_exp_not_indexed.
@
text
@/* this is tc-z80.h
   Copyright 2005, 2006, 2007, 2012 Free Software Foundation, Inc.

   Contributed by Arnold Metselaar <arnold_m@@operamail.com>

   This file is part of GAS, the GNU Assembler.

   GAS is free software; you can redistribute it and/or modify
   it under the terms of .the GNU General Public License as published by
   the Free Software Foundation; either version 3, or (at your option)
   any later version.

   GAS is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with GAS; see the file COPYING.  If not, write to the Free
   Software Foundation, 51 Franklin Street - Fifth Floor, Boston, MA
   02110-1301, USA.  */

#ifndef TC_Z80
#define TC_Z80

#define TARGET_ARCH   bfd_arch_z80
#define BFD_ARCH      TARGET_ARCH
#define COFF_MAGIC    0x5A80
#define TARGET_MACH   0
#define TARGET_BYTES_BIG_ENDIAN  0

/* If you define this macro, GAS will warn about the
   use of nonstandard escape sequences in a string.  */
#define ONLY_STANDARD_ESCAPES

/* GAS will call this function for any expression that can not be
   recognized.  When the function is called, `input_line_pointer'
   will point to the start of the expression.  */
#define md_operand(x)

/* This should just call either `number_to_chars_bigendian' or
   `number_to_chars_littleendian', whichever is appropriate.  On
   targets like the MIPS which support options to change the
   endianness, which function to call is a runtime decision.  On
   other targets, `md_number_to_chars' can be a simple macro.  */
#define md_number_to_chars number_to_chars_littleendian

#define TC_COUNT_RELOC(x) 1

#define TC_COFF_FIX2RTYPE(fixP) tc_coff_fix2rtype (fixP)
#define md_convert_frag(b,s,f)   as_fatal ("convert_frag called\n")
#define md_estimate_size_before_relax(f,s) \
  (as_fatal (_("estimate_size_before_relax called")), 1)

/* Define some functions to be called by generic code.  */
#define md_end               z80_md_end
#define md_start_line_hook() { if (z80_start_line_hook ()) continue; }
#define TC_CONS_FIX_NEW z80_cons_fix_new

extern void z80_md_end (void);
extern int z80_start_line_hook (void);
extern void z80_cons_fix_new (fragS *, int, int, expressionS *);

#define WORKING_DOT_WORD

/* If you define this macro, it means that `tc_gen_reloc' may return
   multiple relocation entries for a single fixup.  In this case, the
   return value of `tc_gen_reloc' is a pointer to a null terminated
   array.  */
#undef RELOC_EXPANSION_POSSIBLE

/* No shared lib support, so we don't need to ensure
   externally visible symbols can be overridden.  */
#define EXTERN_FORCE_RELOC 0

/* Values passed to md_apply_fix3 don't include the symbol value.  */
#define MD_APPLY_SYM_VALUE(FIX) 0

#define LISTING_WORD_SIZE 2

/* A single '=' is accepted as a comparison operator.  */
#define O_SINGLE_EQ O_eq

/* A '$' is used to refer to the current location or as a hex. prefix.  */
#define DOLLAR_DOT
#define DOLLAR_AMBIGU                1
#define LOCAL_LABELS_FB              1
#define LITERAL_PREFIXPERCENT_BIN
#define NUMBERS_WITH_SUFFIX          1
#define NO_PSEUDO_DOT                1
/* We allow single quotes to delimit character constants as
   well, but it is cleaner to handle that in tc-z80.c.  */
#define SINGLE_QUOTE_STRINGS
#define NO_STRING_ESCAPES

/* An `.lcomm' directive with no explicit alignment parameter will
   use this macro to set P2VAR to the alignment that a request for
   SIZE bytes will have.  The alignment is expressed as a power of
   two.  If no alignment should take place, the macro definition
   should do nothing.  Some targets define a `.bss' directive that is
   also affected by this macro.  The default definition will set
   P2VAR to the truncated power of two of sizes up to eight bytes.  */
#define TC_IMPLICIT_LCOMM_ALIGNMENT(SIZE, P2VAR) (P2VAR) = 0

/* It does not make any sense to perform arithmetic on the numbers 
   we use to identify registers.  */
#define md_register_arithmetic 0

#endif
@


1.6
log
@update copyright dates
@
text
@d2 1
a2 1
   Copyright 2005, 2006, 2007 Free Software Foundation, Inc.
d105 4
@


1.5
log
@Switch to GPLv3
@
text
@d2 1
a2 1
   Copyright 2005, 2007 Free Software Foundation, Inc.
@


1.4
log
@removed z80_optimize_expr; redundant since 2006-04-04
@
text
@d2 1
a2 1
   Copyright 2005 Free Software Foundation, Inc.
d10 1
a10 1
   the Free Software Foundation; either version 2, or (at your option)
@


1.3
log
@Cleanup of pseudo-ops for constants and new def24,def32 pseudo-ops on z80
@
text
@a57 1
#define md_optimize_expr     z80_optimize_expr
a61 1
extern int z80_optimize_expr (expressionS *, operatorT, expressionS *);
@


1.3.2.1
log
@Merge changes between binutils-csl-2_17-branchpoint and
binutils-2_17, except for the addition of generated files to CVS.
@
text
@d58 1
d63 1
@


1.2
log
@	* expr.c (op_encoding): Map '=' to O_SINGLE_EQ, if defined.
	* config/tc-z80.h: Define O_SINGLE_EQ as O_eq.
@
text
@d59 1
d64 1
@


1.1
log
@Add support for the Z80 processor family
@
text
@d81 3
a86 1
#define SINGLE_EQ_COMPARES
@

