head	1.20;
access;
symbols
	binutils-2_24-branch:1.20.0.2
	binutils-2_24-branchpoint:1.20
	binutils-2_21_1:1.17
	binutils-2_23_2:1.18
	binutils-2_23_1:1.18
	binutils-2_23:1.18
	binutils-2_23-branch:1.18.0.6
	binutils-2_23-branchpoint:1.18
	binutils-2_22_branch:1.18.0.4
	binutils-2_22:1.18
	binutils-2_22-branch:1.18.0.2
	binutils-2_22-branchpoint:1.18
	binutils-2_21:1.17
	binutils-2_21-branch:1.17.0.2
	binutils-2_21-branchpoint:1.17
	binutils-2_20_1:1.16
	binutils-2_20:1.16
	binutils-arc-20081103-branch:1.16.0.12
	binutils-arc-20081103-branchpoint:1.16
	binutils-2_20-branch:1.16.0.10
	binutils-2_20-branchpoint:1.16
	dje-cgen-play1-branch:1.16.0.8
	dje-cgen-play1-branchpoint:1.16
	arc-20081103-branch:1.16.0.6
	arc-20081103-branchpoint:1.16
	binutils-2_19_1:1.16
	binutils-2_19:1.16
	binutils-2_19-branch:1.16.0.4
	binutils-2_19-branchpoint:1.16
	binutils-2_18:1.16
	binutils-2_18-branch:1.16.0.2
	binutils-2_18-branchpoint:1.16
	binutils-csl-coldfire-4_1-32:1.11.2.1
	binutils-csl-sourcerygxx-4_1-32:1.11.2.1
	binutils-csl-innovasic-fido-3_4_4-33:1.11.2.1
	binutils-csl-sourcerygxx-3_4_4-32:1.7
	binutils-csl-coldfire-4_1-30:1.11.2.1
	binutils-csl-sourcerygxx-4_1-30:1.11.2.1
	binutils-csl-coldfire-4_1-28:1.11.2.1
	binutils-csl-sourcerygxx-4_1-29:1.11.2.1
	binutils-csl-sourcerygxx-4_1-28:1.11.2.1
	binutils-csl-arm-2006q3-27:1.11.2.1
	binutils-csl-sourcerygxx-4_1-27:1.11.2.1
	binutils-csl-arm-2006q3-26:1.11.2.1
	binutils-csl-sourcerygxx-4_1-26:1.11.2.1
	binutils-csl-sourcerygxx-4_1-25:1.11.2.1
	binutils-csl-sourcerygxx-4_1-24:1.11.2.1
	binutils-csl-sourcerygxx-4_1-23:1.11.2.1
	binutils-csl-sourcerygxx-4_1-21:1.11.2.1
	binutils-csl-arm-2006q3-21:1.11.2.1
	binutils-csl-sourcerygxx-4_1-22:1.11.2.1
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.11.2.1
	binutils-csl-sourcerygxx-4_1-20:1.11.2.1
	binutils-csl-arm-2006q3-19:1.11.2.1
	binutils-csl-sourcerygxx-4_1-19:1.11.2.1
	binutils-csl-sourcerygxx-4_1-18:1.11.2.1
	binutils-csl-renesas-4_1-9:1.11.2.1
	binutils-csl-sourcerygxx-3_4_4-25:1.7
	binutils-csl-renesas-4_1-8:1.11
	binutils-csl-renesas-4_1-7:1.11
	binutils-csl-renesas-4_1-6:1.11
	binutils-csl-sourcerygxx-4_1-17:1.11
	binutils-csl-sourcerygxx-4_1-14:1.11
	binutils-csl-sourcerygxx-4_1-15:1.11
	binutils-csl-sourcerygxx-4_1-13:1.11
	binutils-2_17:1.11.4.1
	binutils-csl-sourcerygxx-4_1-12:1.11
	binutils-csl-sourcerygxx-3_4_4-21:1.11
	binutils-csl-wrs-linux-3_4_4-24:1.7
	binutils-csl-wrs-linux-3_4_4-23:1.7
	binutils-csl-sourcerygxx-4_1-9:1.11
	binutils-csl-sourcerygxx-4_1-8:1.11
	binutils-csl-sourcerygxx-4_1-7:1.11
	binutils-csl-arm-2006q1-6:1.11
	binutils-csl-sourcerygxx-4_1-6:1.11
	binutils-csl-wrs-linux-3_4_4-22:1.7
	binutils-csl-coldfire-4_1-11:1.11
	binutils-csl-sourcerygxx-3_4_4-19:1.11
	binutils-csl-coldfire-4_1-10:1.11
	binutils-csl-sourcerygxx-4_1-5:1.11
	binutils-csl-sourcerygxx-4_1-4:1.11
	binutils-csl-wrs-linux-3_4_4-21:1.7
	binutils-csl-morpho-4_1-4:1.11
	binutils-csl-sourcerygxx-3_4_4-17:1.11
	binutils-csl-wrs-linux-3_4_4-20:1.7
	binutils-2_17-branch:1.11.0.4
	binutils-2_17-branchpoint:1.11
	binutils-csl-2_17-branch:1.11.0.2
	binutils-csl-2_17-branchpoint:1.11
	binutils-csl-gxxpro-3_4-branch:1.7.0.14
	binutils-csl-gxxpro-3_4-branchpoint:1.7
	binutils-2_16_1:1.7
	binutils-csl-arm-2005q1b:1.7
	binutils-2_16:1.7
	binutils-csl-arm-2005q1a:1.7
	binutils-csl-arm-2005q1-branch:1.7.0.12
	binutils-csl-arm-2005q1-branchpoint:1.7
	binutils-2_16-branch:1.7.0.10
	binutils-2_16-branchpoint:1.7
	csl-arm-2004-q3d:1.7
	csl-arm-2004-q3:1.7
	binutils-2_15:1.7
	binutils-2_15-branchpoint:1.7
	csl-arm-2004-q1a:1.7
	csl-arm-2004-q1:1.7
	binutils-2_15-branch:1.7.0.8
	cagney_bfdfile-20040213-branch:1.7.0.6
	cagney_bfdfile-20040213-branchpoint:1.7
	cagney_bigcore-20040122-branch:1.7.0.4
	cagney_bigcore-20040122-branchpoint:1.7
	csl-arm-2003-q4:1.7
	binutils-2_14:1.7
	binutils-2_14-branch:1.7.0.2
	binutils-2_14-branchpoint:1.7
	binutils-2_13_2_1:1.6
	binutils-2_13_2:1.6
	binutils-2_13_1:1.6
	binutils-2_13:1.6
	binutils-2_13-branchpoint:1.6
	binutils-2_13-branch:1.6.0.4
	binutils-2_12_1:1.6
	binutils-2_12:1.6
	binutils-2_12-branch:1.6.0.2
	binutils-2_12-branchpoint:1.6
	cygnus_cvs_20020108_pre:1.6
	binutils-2_11_2:1.4.2.1
	binutils-2_11_1:1.4.2.1
	binutils-2_11:1.4
	x86_64versiong3:1.4
	binutils-2_11-branch:1.4.0.2
	binutils-2_10_1:1.1
	binutils-2_10:1.1
	binutils-2_10-branch:1.1.0.2
	binutils-2_10-branchpoint:1.1
	binutils_latest_snapshot:1.20;
locks; strict;
comment	@ * @;


1.20
date	2013.02.05.23.02.54;	author amodra;	state Exp;
branches;
next	1.19;

1.19
date	2012.09.11.17.01.00;	author denisc;	state Exp;
branches;
next	1.18;

1.18
date	2011.03.29.18.16.15;	author rth;	state Exp;
branches;
next	1.17;

1.17
date	2009.10.27.15.39.27;	author gingold;	state Exp;
branches;
next	1.16;

1.16
date	2007.07.03.11.01.04;	author nickc;	state Exp;
branches;
next	1.15;

1.15
date	2007.02.20.23.02.58;	author amodra;	state Exp;
branches;
next	1.14;

1.14
date	2006.05.24.07.36.10;	author nickc;	state Exp;
branches;
next	1.13;

1.13
date	2006.05.16.08.23.43;	author nickc;	state Exp;
branches;
next	1.12;

1.12
date	2006.05.05.17.46.47;	author nickc;	state Exp;
branches;
next	1.11;

1.11
date	2005.10.12.10.56.46;	author nickc;	state Exp;
branches
	1.11.2.1
	1.11.4.1;
next	1.10;

1.10
date	2005.08.11.01.25.25;	author amodra;	state Exp;
branches;
next	1.9;

1.9
date	2005.06.07.17.54.16;	author zack;	state Exp;
branches;
next	1.8;

1.8
date	2005.05.05.09.12.54;	author nickc;	state Exp;
branches;
next	1.7;

1.7
date	2002.09.05.00.01.17;	author amodra;	state Exp;
branches;
next	1.6;

1.6
date	2001.11.15.21.28.54;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	2001.03.08.23.24.23;	author nickc;	state Exp;
branches;
next	1.4;

1.4
date	2000.09.15.01.06.52;	author kazu;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	2000.08.24.16.50.21;	author denisc;	state Exp;
branches;
next	1.2;

1.2
date	2000.07.03.22.25.33;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	2000.03.27.08.39.13;	author amodra;	state Exp;
branches;
next	;

1.11.2.1
date	2006.08.22.15.08.35;	author jsm28;	state Exp;
branches;
next	;

1.11.4.1
date	2006.05.16.08.29.34;	author nickc;	state Exp;
branches;
next	;

1.4.2.1
date	2001.06.07.03.15.28;	author amodra;	state Exp;
branches;
next	;


desc
@@


1.20
log
@	PR gas/14255
	* config/tc-avr.h (TC_VALIDATE_FIX): Mark symbol used by reloc.
	Don't skip fixups with fx_subsy non-NULL.
	* config/tc-avr.c (tc_gen_reloc): Don't specially handle fixups
	with fx_subsy non-NULL.
@
text
@/* This file is tc-avr.h
   Copyright 1999, 2000, 2001, 2002, 2005, 2006, 2007
   Free Software Foundation, Inc.

   Contributed by Denis Chertykov <denisc@@overta.ru>

   This file is part of GAS, the GNU Assembler.

   GAS is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3, or (at your option)
   any later version.

   GAS is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with GAS; see the file COPYING.  If not, write to the Free
   Software Foundation, 51 Franklin Street - Fifth Floor, Boston, MA
   02110-1301, USA.  */

/* By convention, you should define this macro in the `.h' file.  For
   example, `tc-m68k.h' defines `TC_M68K'.  You might have to use this
   if it is necessary to add CPU specific code to the object format
   file.  */
#define TC_AVR

/* This macro is the BFD target name to use when creating the output
   file.  This will normally depend upon the `OBJ_FMT' macro.  */
#define TARGET_FORMAT "elf32-avr"

/* This macro is the BFD architecture to pass to `bfd_set_arch_mach'.  */
#define TARGET_ARCH bfd_arch_avr

/* This macro is the BFD machine number to pass to
   `bfd_set_arch_mach'.  If it is not defined, GAS will use 0.  */
#define TARGET_MACH 0

/* You should define this macro to be non-zero if the target is big
   endian, and zero if the target is little endian.  */
#define TARGET_BYTES_BIG_ENDIAN 0

/* If you define this macro, GAS will warn about the use of
   nonstandard escape sequences in a string.  */
#define ONLY_STANDARD_ESCAPES

/* GAS will call this function for any expression that can not be
   recognized.  When the function is called, `input_line_pointer'
   will point to the start of the expression.  */
#define md_operand(x)

/* You may define this macro to parse an expression used in a data
   allocation pseudo-op such as `.word'.  You can use this to
   recognize relocation directives that may appear in such directives.  */
#define TC_PARSE_CONS_EXPRESSION(EXPR,N) avr_parse_cons_expression (EXPR, N)
extern void avr_parse_cons_expression (expressionS *, int);

/* You may define this macro to generate a fixup for a data
   allocation pseudo-op.  */
#define TC_CONS_FIX_NEW(FRAG,WHERE,N,EXP) avr_cons_fix_new (FRAG, WHERE, N, EXP)
extern void avr_cons_fix_new (fragS *,int, int, expressionS *);

/* This should just call either `number_to_chars_bigendian' or
   `number_to_chars_littleendian', whichever is appropriate.  On
   targets like the MIPS which support options to change the
   endianness, which function to call is a runtime decision.  On
   other targets, `md_number_to_chars' can be a simple macro.  */
#define md_number_to_chars number_to_chars_littleendian

/* `md_short_jump_size'
   `md_long_jump_size'
   `md_create_short_jump'
   `md_create_long_jump'
   If `WORKING_DOT_WORD' is defined, GAS will not do broken word
   processing (*note Broken words::.).  Otherwise, you should set
   `md_short_jump_size' to the size of a short jump (a jump that is
   just long enough to jump around a long jmp) and
   `md_long_jump_size' to the size of a long jump (a jump that can go
   anywhere in the function), You should define
   `md_create_short_jump' to create a short jump around a long jump,
   and define `md_create_long_jump' to create a long jump.  */
#define WORKING_DOT_WORD

/* If you define this macro, it means that `tc_gen_reloc' may return
   multiple relocation entries for a single fixup.  In this case, the
   return value of `tc_gen_reloc' is a pointer to a null terminated
   array.  */
#undef RELOC_EXPANSION_POSSIBLE

/* No shared lib support, so we don't need to ensure externally
   visible symbols can be overridden.  */
#define EXTERN_FORCE_RELOC 0

/* Values passed to md_apply_fix don't include the symbol value.  */
#define MD_APPLY_SYM_VALUE(FIX) 0

/* If you define this macro, it should return the offset between the
   address of a PC relative fixup and the position from which the PC
   relative adjustment should be made.  On many processors, the base
   of a PC relative instruction is the next instruction, so this
   macro would return the length of an instruction.  */
#define MD_PCREL_FROM_SECTION(FIX, SEC) md_pcrel_from_section (FIX, SEC)
extern long md_pcrel_from_section (struct fix *, segT);

/* The number of bytes to put into a word in a listing.  This affects
   the way the bytes are clumped together in the listing.  For
   example, a value of 2 might print `1234 5678' where a value of 1
   would print `12 34 56 78'.  The default value is 4.  */
#define LISTING_WORD_SIZE 2

/* AVR port uses `$' as a logical line separator.  */
#define LEX_DOLLAR 0

/* An `.lcomm' directive with no explicit alignment parameter will
   use this macro to set P2VAR to the alignment that a request for
   SIZE bytes will have.  The alignment is expressed as a power of
   two.  If no alignment should take place, the macro definition
   should do nothing.  Some targets define a `.bss' directive that is
   also affected by this macro.  The default definition will set
   P2VAR to the truncated power of two of sizes up to eight bytes.  */
#define TC_IMPLICIT_LCOMM_ALIGNMENT(SIZE, P2VAR) (P2VAR) = 0

/* We don't want gas to fixup the following program memory related relocations.
   We will need them in case that we want to do linker relaxation.
   We could in principle keep these fixups in gas when not relaxing.
   However, there is no serious performance penalty when making the linker
   make the fixup work.  Check also that fx_addsy is not NULL, in order to make
   sure that the fixup refers to some sort of label.  */
#define TC_VALIDATE_FIX(FIXP,SEG,SKIP)                       \
  if (   (FIXP->fx_r_type == BFD_RELOC_AVR_7_PCREL           \
       || FIXP->fx_r_type == BFD_RELOC_AVR_13_PCREL          \
       || FIXP->fx_r_type == BFD_RELOC_AVR_LO8_LDI_PM        \
       || FIXP->fx_r_type == BFD_RELOC_AVR_LO8_LDI_GS        \
       || FIXP->fx_r_type == BFD_RELOC_AVR_HI8_LDI_PM        \
       || FIXP->fx_r_type == BFD_RELOC_AVR_HI8_LDI_GS        \
       || FIXP->fx_r_type == BFD_RELOC_AVR_HH8_LDI_PM        \
       || FIXP->fx_r_type == BFD_RELOC_AVR_LO8_LDI_PM_NEG    \
       || FIXP->fx_r_type == BFD_RELOC_AVR_HI8_LDI_PM_NEG    \
       || FIXP->fx_r_type == BFD_RELOC_AVR_HH8_LDI_PM_NEG    \
       || FIXP->fx_r_type == BFD_RELOC_AVR_8_LO              \
       || FIXP->fx_r_type == BFD_RELOC_AVR_8_HI              \
       || FIXP->fx_r_type == BFD_RELOC_AVR_8_HLO             \
       || FIXP->fx_r_type == BFD_RELOC_AVR_16_PM)            \
      && FIXP->fx_addsy != NULL				     \
      && FIXP->fx_subsy == NULL)			     \
    {							     \
      symbol_mark_used_in_reloc (FIXP->fx_addsy);	     \
      goto SKIP;					     \
    }

/* This target is buggy, and sets fix size too large.  */
#define TC_FX_SIZE_SLACK(FIX) 2

/* AVR instructions are 2 or 4 bytes long.  */
#define DWARF2_LINE_MIN_INSN_LENGTH 	2

/* 32 bits pseudo-addresses are used on AVR.  */
#define DWARF2_ADDR_SIZE(bfd) 4

/* Enable cfi directives.  */
#define TARGET_USE_CFIPOP 1

/* The stack grows down, and is only byte aligned.  */
#define DWARF2_CIE_DATA_ALIGNMENT -1

/* Define the column that represents the PC.  */
#define DWARF2_DEFAULT_RETURN_COLUMN  36

/* Define a hook to setup initial CFI state.  */
extern void tc_cfi_frame_initial_instructions (void);
#define tc_cfi_frame_initial_instructions tc_cfi_frame_initial_instructions
@


1.19
log
@
	PR gas/13503
	* config/tc-avr.h (TC_VALIDATE_FIX): Skip: BFD_RELOC_AVR_8_LO,
	BFD_RELOC_AVR_8_HI, BFD_RELOC_AVR_8_HLO.
@
text
@d128 1
a128 1
   However, there is no serious performance penilty when making the linker
d130 1
a130 1
   sure that the fixup refers to some sort of lable.  */
d146 5
a150 3
      && (FIXP->fx_addsy))			             \
    {                                                        \
      goto SKIP;                                             \
@


1.18
log
@PR 12610
* config/tc-alpha.c (s_alpha_align): Don't auto-align a previous
label; zap alpha_insn_label.
@
text
@d142 3
d149 1
a149 1
   }
@


1.17
log
@2009-10-27  Tristan Gingold  <gingold@@adacore.com>

	* config/tc-avr.c (md_pseudo_table): Add dwarf2 debug pseudo.
	* config/tc-avr.h (DWARF2_LINE_MIN_INSN_LENGTH): Define.
	(DWARF2_ADDR_SIZE): Define.
@
text
@d156 13
@


1.16
log
@Switch to GPLv3
@
text
@d150 6
@


1.15
log
@	PR 4082
	* config/tc-avr.h (TC_FX_SIZE_SLACK): Define.
@
text
@d11 1
a11 1
   the Free Software Foundation; either version 2, or (at your option)
@


1.14
log
@Add support for AVR6 family
@
text
@d2 2
a3 1
   Copyright 1999, 2000, 2001, 2002, 2005, 2006 Free Software Foundation, Inc.
d147 3
@


1.13
log
@* config/tc-avr.h (TC_VALIDATE_FIX): Allow fixups for immediate constant values.
@
text
@d128 17
a144 11
   make the fixup work.  */
#define TC_VALIDATE_FIX(FIXP,SEG,SKIP)                     \
 if (   (FIXP->fx_r_type == BFD_RELOC_AVR_7_PCREL          \
      || FIXP->fx_r_type == BFD_RELOC_AVR_13_PCREL         \
      || FIXP->fx_r_type == BFD_RELOC_AVR_LO8_LDI_PM       \
      || FIXP->fx_r_type == BFD_RELOC_AVR_HI8_LDI_PM       \
      || FIXP->fx_r_type == BFD_RELOC_AVR_HH8_LDI_PM       \
      || FIXP->fx_r_type == BFD_RELOC_AVR_16_PM)           \
     && (FIXP->fx_addsy))                                  \
   {                                                       \
     goto SKIP;                                            \
a145 1

@


1.12
log
@* gas/config/tc-avr.h (TC_VALIDATE_FIX): Define.  Disable fixups for PMEM
    related expressions.
* bfd/elf32-avr.c (elf32_avr_relax_delete_bytes): Iterate over all of the
    bfd's sections for the reloc-addend adjustments.
@
text
@d129 11
a139 10
#define TC_VALIDATE_FIX(FIXP,SEG,SKIP)                      \
  if ( FIXP->fx_r_type == BFD_RELOC_AVR_7_PCREL             \
    || FIXP->fx_r_type == BFD_RELOC_AVR_13_PCREL            \
    || FIXP->fx_r_type == BFD_RELOC_AVR_LO8_LDI_PM          \
    || FIXP->fx_r_type == BFD_RELOC_AVR_HI8_LDI_PM          \
    || FIXP->fx_r_type == BFD_RELOC_AVR_HH8_LDI_PM          \
    || FIXP->fx_r_type == BFD_RELOC_AVR_16_PM)              \
    {                                                       \
      goto SKIP;                                            \
    }
@


1.11
log
@* config/tc-avr.c: Convert to ISO C90 format.  Fix formatting and generally
  tidy up the code.
* config/tc-avr.h: Likewise.
@
text
@d2 1
a2 1
   Copyright 1999, 2000, 2001, 2002, 2005 Free Software Foundation, Inc.
d112 1
a112 1
/* AVR port uses `$' as a logical line separator */
d123 17
@


1.11.2.1
log
@Merge changes between binutils-csl-2_17-branchpoint and
binutils-2_17, except for the addition of generated files to CVS.
@
text
@a122 18

/* We don't want gas to fixup the following program memory related relocations.
   We will need them in case that we want to do linker relaxation.
   We could in principle keep these fixups in gas when not relaxing.
   However, there is no serious performance penilty when making the linker
   make the fixup work.  */
#define TC_VALIDATE_FIX(FIXP,SEG,SKIP)                     \
 if (   (FIXP->fx_r_type == BFD_RELOC_AVR_7_PCREL          \
      || FIXP->fx_r_type == BFD_RELOC_AVR_13_PCREL         \
      || FIXP->fx_r_type == BFD_RELOC_AVR_LO8_LDI_PM       \
      || FIXP->fx_r_type == BFD_RELOC_AVR_HI8_LDI_PM       \
      || FIXP->fx_r_type == BFD_RELOC_AVR_HH8_LDI_PM       \
      || FIXP->fx_r_type == BFD_RELOC_AVR_16_PM)           \
     && (FIXP->fx_addsy))                                  \
   {                                                       \
     goto SKIP;                                            \
   }

@


1.11.4.1
log
@Import these patches from the mainline:
2006-05-16  Bjoern Haase  <bjoern.m.haase@@web.de>
   * config/tc-avr.h (TC_VALIDATE_FIX): Allow fixups for immediate constant values.
2006-05-05  Bjoern Haase  <bjoern.m.haase@@web.de>
   * gas/config/tc-avr.h (TC_VALIDATE_FIX): Define.  Disable fixups for PMEM related expressions.
@
text
@a122 18

/* We don't want gas to fixup the following program memory related relocations.
   We will need them in case that we want to do linker relaxation.
   We could in principle keep these fixups in gas when not relaxing.
   However, there is no serious performance penilty when making the linker
   make the fixup work.  */
#define TC_VALIDATE_FIX(FIXP,SEG,SKIP)                     \
 if (   (FIXP->fx_r_type == BFD_RELOC_AVR_7_PCREL          \
      || FIXP->fx_r_type == BFD_RELOC_AVR_13_PCREL         \
      || FIXP->fx_r_type == BFD_RELOC_AVR_LO8_LDI_PM       \
      || FIXP->fx_r_type == BFD_RELOC_AVR_HI8_LDI_PM       \
      || FIXP->fx_r_type == BFD_RELOC_AVR_HH8_LDI_PM       \
      || FIXP->fx_r_type == BFD_RELOC_AVR_16_PM)           \
     && (FIXP->fx_addsy))                                  \
   {                                                       \
     goto SKIP;                                            \
   }

@


1.10
log
@	* README-vms: Delete.
	* config-gas.com: Delete.
	* makefile.vms: Delete.
	* vmsconf.sh: Delete.
	* config/atof-tahoe.c: Delete.
	* config/m88k-opcode.h: Delete.
	* config/obj-bout.c: Delete.
	* config/obj-bout.h: Delete.
	* config/obj-hp300.c: Delete.
	* config/obj-hp300.h: Delete.
	* config/tc-a29k.c: Delete.
	* config/tc-a29k.h: Delete.
	* config/tc-h8500.c: Delete.
	* config/tc-h8500.h: Delete.
	* config/tc-m88k.c: Delete.
	* config/tc-m88k.h: Delete.
	* config/tc-tahoe.c: Delete.
	* config/tc-tahoe.h: Delete.
	* config/tc-tic80.c: Delete.
	* config/tc-tic80.h: Delete.
	* config/tc-w65.c: Delete.
	* config/tc-w65.h: Delete.
	* config/te-aux.h: Delete.
	* config/te-delt88.h: Delete.
	* config/te-delta.h: Delete.
	* config/te-dpx2.h: Delete.
	* config/te-hp300.h: Delete.
	* config/te-ic960.h: Delete.
	* config/vms-a-conf.h: Delete.
	* doc/c-a29k.texi: Delete.
	* doc/c-h8500.texi: Delete.
	* doc/c-m88k.texi: Delete.
	* README: Remove obsolete examples, and list of supported targets.
	* Makefile.am: Remove a29k, h8500, m88k, tahoe, tic80, w65,
	bout and hp300 support.
	(DEP_FLAGS): Don't define BFD_ASSEMBLER.
	* configure.in: Remove --enable-bfd-assembler, need_bfd,
	primary_bfd_gas.
	* configure.tgt: Remove a29k, h8300-coff, h8500-*, i960 non-elf,
	m68k non bfd, m88k, or32-coff, tic80-*, vax non-bfd, w65k-*, *-nindy.
	* as.c: Remove all non-BFD_ASSEMBLER code, support for above targets.
	* as.h: Likewise.
	* dw2gencfi.c: Likewise.
	* dwarf2dbg.c: Likewise.
	* ehopt.c: Likewise.
	* input-file.c: Likewise.
	* listing.c: Likewise.
	* literal.c: Likewise.
	* messages.c: Likewise.
	* obj.h: Likewise.
	* output-file.c: Likewise.
	* read.c: Likewise.
	* stabs.c: Likewise.
	* struc-symbol.h: Likewise.
	* subsegs.c: Likewise.
	* subsegs.h: Likewise.
	* symbols.c: Likewise.
	* symbols.h: Likewise.
	* tc.h: Likewise.
	* write.c: Likewise.
	* write.h: Likewise.
	* config/aout_gnu.h: Likewise.
	* config/obj-aout.c: Likewise.
	* config/obj-aout.h: Likewise.
	* config/obj-coff.c: Likewise.
	* config/obj-coff.h: Likewise.
	* config/obj-evax.h: Likewise.
	* config/obj-ieee.h: Likewise.
	* config/tc-arm.c: Likewise.
	* config/tc-arm.h: Likewise.
	* config/tc-avr.c: Likewise.
	* config/tc-avr.h: Likewise.
	* config/tc-crx.h: Likewise.
	* config/tc-d10v.h: Likewise.
	* config/tc-d30v.h: Likewise.
	* config/tc-dlx.h: Likewise.
	* config/tc-fr30.h: Likewise.
	* config/tc-frv.h: Likewise.
	* config/tc-h8300.c: Likewise.
	* config/tc-h8300.h: Likewise.
	* config/tc-hppa.h: Likewise.
	* config/tc-i370.h: Likewise.
	* config/tc-i386.c: Likewise.
	* config/tc-i386.h: Likewise.
	* config/tc-i860.h: Likewise.
	* config/tc-i960.c: Likewise.
	* config/tc-i960.h: Likewise.
	* config/tc-ip2k.h: Likewise.
	* config/tc-iq2000.h: Likewise.
	* config/tc-m32c.h: Likewise.
	* config/tc-m32r.h: Likewise.
	* config/tc-m68hc11.h: Likewise.
	* config/tc-m68k.c: Likewise.
	* config/tc-m68k.h: Likewise.
	* config/tc-maxq.c: Likewise.
	* config/tc-maxq.h: Likewise.
	* config/tc-mcore.c: Likewise.
	* config/tc-mcore.h: Likewise.
	* config/tc-mn10200.h: Likewise.
	* config/tc-mn10300.c: Likewise.
	* config/tc-mn10300.h: Likewise.
	* config/tc-ms1.h: Likewise.
	* config/tc-msp430.c: Likewise.
	* config/tc-msp430.h: Likewise.
	* config/tc-ns32k.c: Likewise.
	* config/tc-ns32k.h: Likewise.
	* config/tc-openrisc.h: Likewise.
	* config/tc-or32.c: Likewise.
	* config/tc-or32.h: Likewise.
	* config/tc-ppc.c: Likewise.
	* config/tc-ppc.h: Likewise.
	* config/tc-s390.h: Likewise.
	* config/tc-sh.c: Likewise.
	* config/tc-sh.h: Likewise.
	* config/tc-sparc.c: Likewise.
	* config/tc-tic30.c: Likewise.
	* config/tc-tic30.h: Likewise.
	* config/tc-tic4x.c: Likewise.
	* config/tc-tic4x.h: Likewise.
	* config/tc-tic54x.c: Likewise.
	* config/tc-tic54x.h: Likewise.
	* config/tc-v850.h: Likewise.
	* config/tc-vax.c: Likewise.
	* config/tc-vax.h: Likewise.
	* config/tc-xstormy16.h: Likewise.
	* config/tc-xtensa.h: Likewise.
	* config/tc-z8k.c: Likewise.
	* config/tc-z8k.h: Likewise.
	* config/vms-a-conf.h
	* doc/Makefile.am: Likewise.
	* doc/all.texi: Likewise.
	* doc/as.texinfo: Likewise.
	* doc/Makefile.in: Regenerate.
	* Makefile.in: Regenerate.
	* configure: Regenerate.
	* config.in: Regenerate.
	* po/POTFILES.in: Regenerate.
@
text
@d56 2
a57 2
#define TC_PARSE_CONS_EXPRESSION(EXPR,N) avr_parse_cons_expression (EXPR,N)
void avr_parse_cons_expression (expressionS *exp, int nbytes);
d61 2
a62 2
#define TC_CONS_FIX_NEW(FRAG,WHERE,N,EXP) avr_cons_fix_new(FRAG,WHERE,N,EXP)
void avr_cons_fix_new(fragS *frag,int where, int nbytes, expressionS *exp);
d103 2
a104 2
#define MD_PCREL_FROM_SECTION(FIX, SEC) md_pcrel_from_section(FIX, SEC)
extern long md_pcrel_from_section PARAMS ((struct fix *, segT));
@


1.9
log
@gas:
	* cgen.c, cgen.h, tc.h, write.c, config/obj-coff.c
	* config/tc-a29k.c, config/tc-alpha.c, config/tc-alpha.h
	* config/tc-arc.c, config/tc-arc.h, config/tc-arm.c
	* config/tc-arm.h, config/tc-avr.c, config/tc-avr.h
	* config/tc-cris.c, config/tc-crx.c, config/tc-d10v.c
	* config/tc-d10v.h, config/tc-d30v.c, config/tc-d30v.h
	* config/tc-dlx.c, config/tc-dlx.h, config/tc-fr30.h
	* config/tc-frv.c, config/tc-frv.h, config/tc-h8300.c
	* config/tc-h8500.c, config/tc-hppa.c, config/tc-hppa.h
	* config/tc-i370.c, config/tc-i370.h, config/tc-i386.c
	* config/tc-i386.h, config/tc-i860.c, config/tc-i860.h
	* config/tc-i960.c, config/tc-i960.h, config/tc-ia64.c
	* config/tc-ip2k.c, config/tc-ip2k.h, config/tc-iq2000.c
	* config/tc-iq2000.h, config/tc-m32r.c, config/tc-m32r.h
	* config/tc-m68hc11.c, config/tc-m68hc11.h, config/tc-m68k.c
	* config/tc-m68k.h, config/tc-m88k.c, config/tc-maxq.c
	* config/tc-mcore.c, config/tc-mcore.h, config/tc-mips.c
	* config/tc-mips.h, config/tc-mmix.c, config/tc-mn10200.c
	* config/tc-mn10300.c, config/tc-msp430.c, config/tc-ns32k.c
	* config/tc-openrisc.h, config/tc-or32.c, config/tc-or32.h
	* config/tc-pdp11.c, config/tc-pj.c, config/tc-pj.h
	* config/tc-ppc.c, config/tc-ppc.h, config/tc-s390.c
	* config/tc-s390.h, config/tc-sh64.c, config/tc-sh.c
	* config/tc-sh.h, config/tc-sparc.c, config/tc-sparc.h
	* config/tc-tahoe.c, config/tc-tic30.c, config/tc-tic4x.c
	* config/tc-tic54x.c, config/tc-tic80.c, config/tc-v850.c
	* config/tc-v850.h, config/tc-vax.c, config/tc-vax.h
	* config/tc-w65.c, config/tc-xstormy16.c, config/tc-xstormy16.h
	* config/tc-xtensa.c, config/tc-z8k.c:
	Replace all instances of the string "_apply_fix3" with
	"_apply_fix".
	* po/POTFILES.in, po/gas.pot: Regenerate.
bfd:
	* coff-i386.c: Change md_apply_fix3 to md_apply_fix in comment.
cgen:
	* doc/porting.texi: Change all mention of md_apply_fix3 and
	gas_cgen_md_apply_fix3 to md_apply_fix and gas_cgen_md_apply_fix
	respectively.
@
text
@d2 1
a2 1
   Copyright 1999, 2000, 2001, 2002 Free Software Foundation, Inc.
a22 4
#ifndef BFD_ASSEMBLER
 #error AVR support requires BFD_ASSEMBLER
#endif

@


1.8
log
@Update the address and phone number of the FSF
@
text
@d99 1
a99 1
/* Values passed to md_apply_fix3 don't include the symbol value.  */
@


1.7
log
@gas reloc rewrite.
@
text
@d20 2
a21 2
   Software Foundation, 59 Temple Place - Suite 330, Boston, MA
   02111-1307, USA.  */
@


1.6
log
@Update all uses of md_apply_fix to use md_apply_fix3.  Make it a void function.
@
text
@d2 1
a2 1
   Copyright 1999, 2000, 2001 Free Software Foundation, Inc.
d27 4
a31 4
/*   By convention, you should define this macro in the `.h' file.  For
     example, `tc-m68k.h' defines `TC_M68K'.  You might have to use this
     if it is necessary to add CPU specific code to the object format
     file.  */
d33 2
a35 2
/*   This macro is the BFD target name to use when creating the output
     file.  This will normally depend upon the `OBJ_FMT' macro.  */
d37 1
a38 1
/*   This macro is the BFD architecture to pass to `bfd_set_arch_mach'.  */
d40 2
a42 2
/*   This macro is the BFD machine number to pass to
     `bfd_set_arch_mach'.  If it is not defined, GAS will use 0.  */
d44 2
a46 2
/*   You should define this macro to be non-zero if the target is big
     endian, and zero if the target is little endian.  */
d48 2
a50 2
/*   If you define this macro, GAS will warn about the use of
     nonstandard escape sequences in a string.  */
d52 3
a55 3
/*   GAS will call this function for any expression that can not be
     recognized.  When the function is called, `input_line_pointer'
     will point to the start of the expression.  */
d57 4
d63 3
a65 6
#define TC_PARSE_CONS_EXPRESSION(EXPR,N) avr_parse_cons_expression (EXPR,N)
/*
     You may define this macro to parse an expression used in a data
     allocation pseudo-op such as `.word'.  You can use this to
     recognize relocation directives that may appear in such directives.*/

d68 5
a72 4
#define TC_CONS_FIX_NEW(FRAG,WHERE,N,EXP) avr_cons_fix_new(FRAG,WHERE,N,EXP)
/*   You may define this macro to generate a fixup for a data
     allocation pseudo-op.  */

a73 5
/*   This should just call either `number_to_chars_bigendian' or
     `number_to_chars_littleendian', whichever is appropriate.  On
     targets like the MIPS which support options to change the
     endianness, which function to call is a runtime decision.  On
     other targets, `md_number_to_chars' can be a simple macro.  */
d75 12
a87 13
/*
`md_short_jump_size'
`md_long_jump_size'
`md_create_short_jump'
`md_create_long_jump'
     If `WORKING_DOT_WORD' is defined, GAS will not do broken word
     processing (*note Broken words::.).  Otherwise, you should set
     `md_short_jump_size' to the size of a short jump (a jump that is
     just long enough to jump around a long jmp) and
     `md_long_jump_size' to the size of a long jump (a jump that can go
     anywhere in the function), You should define
     `md_create_short_jump' to create a short jump around a long jump,
     and define `md_create_long_jump' to create a long jump.  */
d89 4
a93 11
/*   If you define this macro, it means that `tc_gen_reloc' may return
     multiple relocation entries for a single fixup.  In this case, the
     return value of `tc_gen_reloc' is a pointer to a null terminated
     array.  */

#define MD_PCREL_FROM_SECTION(FIXP, SEC) md_pcrel_from_section(FIXP, SEC)
/*   If you define this macro, it should return the offset between the
     address of a PC relative fixup and the position from which the PC
     relative adjustment should be made.  On many processors, the base
     of a PC relative instruction is the next instruction, so this
     macro would return the length of an instruction.  */
d95 13
d110 4
a114 4
/*   The number of bytes to put into a word in a listing.  This affects
     the way the bytes are clumped together in the listing.  For
     example, a value of 2 might print `1234 5678' where a value of 1
     would print `12 34 56 78'.  The default value is 4.  */
d116 1
a117 1
/* AVR port uses `$' as a logical line separator */
d119 7
a126 7
/*   An `.lcomm' directive with no explicit alignment parameter will
     use this macro to set P2VAR to the alignment that a request for
     SIZE bytes will have.  The alignment is expressed as a power of
     two.  If no alignment should take place, the macro definition
     should do nothing.  Some targets define a `.bss' directive that is
     also affected by this macro.  The default definition will set
     P2VAR to the truncated power of two of sizes up to eight bytes.  */
@


1.5
log
@Fix copyright notices
@
text
@d2 1
a2 1
   Copyright 1999, 2000 Free Software Foundation, Inc.
a91 4

#define MD_APPLY_FIX3

#define TC_HANDLES_FX_DONE
@


1.4
log
@2000-09-14  Kazu Hirata  <kazu@@hxi.com>

	* config/tc-a29k.c: Fix formatting.
	* config/tc-alpha.c: Likewise.
	* config/tc-arc.c: Likewise.
	* config/tc-arc.h: Likewise.
	* config/tc-arm.c: Likewise.
	* config/tc-arm.h: Likewise.
	* config/tc-avr.c: Likewise.
	* config/tc-avr.h: Likewise.
	* config/tc-tic30.c: Likewise.
	* config/tc-tic30.h: Likewise.
	* config/tc-tic54x.c: Likewise.
	* config/tc-tic54x.h: Likewise.
	* config/tc-tic80.c: Likewise.
	* config/tc-tic80.h: Likewise.
@
text
@d2 1
a2 1
   Copyright (C) 1999, 2000 Free Software Foundation, Inc.
@


1.4.2.1
log
@Update copyright notices.
@
text
@d2 1
a2 1
   Copyright 1999, 2000 Free Software Foundation, Inc.
@


1.3
log
@	* config/tc-avr.h (TC_IMPLICIT_LCOMM_ALIGNMENT): New macros.
	Sets `.lcomm' alignment to zero.
@
text
@a26 1

d31 1
a31 1
     file. */
d35 1
a35 1
     file.  This will normally depend upon the `OBJ_FMT' macro. */
d38 1
a38 1
/*   This macro is the BFD architecture to pass to `bfd_set_arch_mach'. */
d42 1
a42 1
     `bfd_set_arch_mach'.  If it is not defined, GAS will use 0. */
d46 1
a46 1
     endian, and zero if the target is little endian. */
d50 1
a50 1
     nonstandard escape sequences in a string. */
d55 1
a55 1
     will point to the start of the expression. */
d69 1
a69 1
     allocation pseudo-op. */
d76 1
a76 1
     other targets, `md_number_to_chars' can be a simple macro. */
d91 1
a91 1
     and define `md_create_long_jump' to create a long jump. */
d101 1
a101 1
     array. */
d103 1
a103 1
#define MD_PCREL_FROM_SECTION(FIXP, SEC) md_pcrel_from_section(FIXP, SEC)   
d108 1
a108 1
     macro would return the length of an instruction. */
d116 1
a116 1
     would print `12 34 56 78'.  The default value is 4. */
@


1.2
log
@Tidy up formatting.
Add  -mall-opcodes, -mno-skip-bug, -mno-wrap.
@
text
@d121 9
@


1.1
log
@ATMEL AVR microcontroller support.
@
text
@d111 2
@

