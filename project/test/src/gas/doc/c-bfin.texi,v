head	1.13;
access;
symbols
	binutils-2_24-branch:1.13.0.2
	binutils-2_24-branchpoint:1.13
	binutils-2_21_1:1.9
	binutils-2_23_2:1.12
	binutils-2_23_1:1.12
	binutils-2_23:1.12
	binutils-2_23-branch:1.12.0.6
	binutils-2_23-branchpoint:1.12
	binutils-2_22_branch:1.12.0.4
	binutils-2_22:1.12
	binutils-2_22-branch:1.12.0.2
	binutils-2_22-branchpoint:1.12
	binutils-2_21:1.9
	binutils-2_21-branch:1.9.0.2
	binutils-2_21-branchpoint:1.9
	binutils-2_20_1:1.5
	binutils-2_20:1.5
	binutils-arc-20081103-branch:1.2.0.10
	binutils-arc-20081103-branchpoint:1.2
	binutils-2_20-branch:1.5.0.2
	binutils-2_20-branchpoint:1.5
	dje-cgen-play1-branch:1.2.0.8
	dje-cgen-play1-branchpoint:1.2
	arc-20081103-branch:1.2.0.6
	arc-20081103-branchpoint:1.2
	binutils-2_19_1:1.2
	binutils-2_19:1.2
	binutils-2_19-branch:1.2.0.4
	binutils-2_19-branchpoint:1.2
	binutils-2_18:1.2
	binutils-2_18-branch:1.2.0.2
	binutils-2_18-branchpoint:1.2
	binutils-csl-coldfire-4_1-32:1.1
	binutils-csl-sourcerygxx-4_1-32:1.1
	binutils-csl-innovasic-fido-3_4_4-33:1.1
	binutils-csl-coldfire-4_1-30:1.1
	binutils-csl-sourcerygxx-4_1-30:1.1
	binutils-csl-coldfire-4_1-28:1.1
	binutils-csl-sourcerygxx-4_1-29:1.1
	binutils-csl-sourcerygxx-4_1-28:1.1
	binutils-csl-arm-2006q3-27:1.1
	binutils-csl-sourcerygxx-4_1-27:1.1
	binutils-csl-arm-2006q3-26:1.1
	binutils-csl-sourcerygxx-4_1-26:1.1
	binutils-csl-sourcerygxx-4_1-25:1.1
	binutils-csl-sourcerygxx-4_1-24:1.1
	binutils-csl-sourcerygxx-4_1-23:1.1
	binutils-csl-sourcerygxx-4_1-21:1.1
	binutils-csl-arm-2006q3-21:1.1
	binutils-csl-sourcerygxx-4_1-22:1.1
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.1
	binutils-csl-sourcerygxx-4_1-20:1.1
	binutils-csl-arm-2006q3-19:1.1
	binutils-csl-sourcerygxx-4_1-19:1.1
	binutils-csl-sourcerygxx-4_1-18:1.1
	binutils-csl-renesas-4_1-9:1.1
	binutils-csl-renesas-4_1-8:1.1
	binutils-csl-renesas-4_1-7:1.1
	binutils-csl-renesas-4_1-6:1.1
	binutils-csl-sourcerygxx-4_1-17:1.1
	binutils-csl-sourcerygxx-4_1-14:1.1
	binutils-csl-sourcerygxx-4_1-15:1.1
	binutils-csl-sourcerygxx-4_1-13:1.1
	binutils-2_17:1.1
	binutils-csl-sourcerygxx-4_1-12:1.1
	binutils-csl-sourcerygxx-3_4_4-21:1.1
	binutils-csl-sourcerygxx-4_1-9:1.1
	binutils-csl-sourcerygxx-4_1-8:1.1
	binutils-csl-sourcerygxx-4_1-7:1.1
	binutils-csl-arm-2006q1-6:1.1
	binutils-csl-sourcerygxx-4_1-6:1.1
	binutils-csl-coldfire-4_1-11:1.1
	binutils-csl-sourcerygxx-3_4_4-19:1.1
	binutils-csl-coldfire-4_1-10:1.1
	binutils-csl-sourcerygxx-4_1-5:1.1
	binutils-csl-sourcerygxx-4_1-4:1.1
	binutils-csl-morpho-4_1-4:1.1
	binutils-csl-sourcerygxx-3_4_4-17:1.1
	binutils-2_17-branch:1.1.0.4
	binutils-2_17-branchpoint:1.1
	binutils-csl-2_17-branch:1.1.0.2
	binutils-csl-2_17-branchpoint:1.1
	binutils_latest_snapshot:1.13;
locks; strict;
comment	@# @;


1.13
date	2013.01.10.19.51.55;	author hjl;	state Exp;
branches;
next	1.12;

1.12
date	2011.02.11.19.05.30;	author vapier;	state Exp;
branches;
next	1.11;

1.11
date	2011.01.18.13.37.39;	author nickc;	state Exp;
branches;
next	1.10;

1.10
date	2010.11.24.22.20.02;	author vapier;	state Exp;
branches;
next	1.9;

1.9
date	2010.09.22.20.17.51;	author vapier;	state Exp;
branches;
next	1.8;

1.8
date	2010.06.21.10.49.41;	author schwab;	state Exp;
branches;
next	1.7;

1.7
date	2010.03.10.13.03.29;	author vapier;	state Exp;
branches;
next	1.6;

1.6
date	2010.03.10.03.57.00;	author jiez;	state Exp;
branches;
next	1.5;

1.5
date	2009.09.04.02.31.44;	author jiez;	state Exp;
branches;
next	1.4;

1.4
date	2009.09.02.07.24.21;	author amodra;	state Exp;
branches;
next	1.3;

1.3
date	2009.08.11.18.44.12;	author bernds;	state Exp;
branches;
next	1.2;

1.2
date	2006.07.24.13.49.49;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	2005.09.30.15.05.07;	author clm;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Remove trailing white spaces on gas

	* app.c: Remove trailing white spaces.
	* as.c: Likewise.
	* as.h: Likewise.
	* cond.c: Likewise.
	* dw2gencfi.c: Likewise.
	* dwarf2dbg.h: Likewise.
	* ecoff.c: Likewise.
	* input-file.c: Likewise.
	* itbl-lex.h: Likewise.
	* output-file.c: Likewise.
	* read.c: Likewise.
	* sb.c: Likewise.
	* subsegs.c: Likewise.
	* symbols.c: Likewise.
	* write.c: Likewise.
	* config/tc-i386.c: Likewise.
	* doc/Makefile.am: Likewise.
	* doc/Makefile.in: Likewise.
	* doc/c-aarch64.texi: Likewise.
	* doc/c-alpha.texi: Likewise.
	* doc/c-arc.texi: Likewise.
	* doc/c-arm.texi: Likewise.
	* doc/c-avr.texi: Likewise.
	* doc/c-bfin.texi: Likewise.
	* doc/c-cr16.texi: Likewise.
	* doc/c-d10v.texi: Likewise.
	* doc/c-d30v.texi: Likewise.
	* doc/c-h8300.texi: Likewise.
	* doc/c-hppa.texi: Likewise.
	* doc/c-i370.texi: Likewise.
	* doc/c-i386.texi: Likewise.
	* doc/c-i860.texi: Likewise.
	* doc/c-m32c.texi: Likewise.
	* doc/c-m32r.texi: Likewise.
	* doc/c-m68hc11.texi: Likewise.
	* doc/c-m68k.texi: Likewise.
	* doc/c-microblaze.texi: Likewise.
	* doc/c-mips.texi: Likewise.
	* doc/c-msp430.texi: Likewise.
	* doc/c-mt.texi: Likewise.
	* doc/c-s390.texi: Likewise.
	* doc/c-score.texi: Likewise.
	* doc/c-sh.texi: Likewise.
	* doc/c-sh64.texi: Likewise.
	* doc/c-tic54x.texi: Likewise.
	* doc/c-tic6x.texi: Likewise.
	* doc/c-v850.texi: Likewise.
	* doc/c-xc16x.texi: Likewise.
	* doc/c-xgate.texi: Likewise.
	* doc/c-xtensa.texi: Likewise.
	* doc/c-z80.texi: Likewise.
	* doc/internals.texi: Likewise.
@
text
@@@c Copyright 2005, 2006, 2009, 2010, 2011
@@c Free Software Foundation, Inc.
@@c This is part of the GAS manual.
@@c For copying conditions, see the file as.texinfo.
@@c man end

@@ifset GENERIC
@@page
@@node Blackfin-Dependent
@@chapter Blackfin Dependent Features
@@end ifset

@@ifclear GENERIC
@@node Machine Dependencies
@@chapter Blackfin Dependent Features
@@end ifclear

@@cindex Blackfin support
@@menu
* Blackfin Options::		Blackfin Options
* Blackfin Syntax::		Blackfin Syntax
* Blackfin Directives::		Blackfin Directives
@@end menu

@@node Blackfin Options
@@section Options
@@cindex Blackfin options (none)
@@cindex options for Blackfin (none)

@@c man begin OPTIONS
@@table @@gcctabopt

@@cindex @@code{-mcpu=} command line option, Blackfin
@@item -mcpu=@@var{processor}@@r{[}-@@var{sirevision}@@r{]}
This option specifies the target processor.  The optional @@var{sirevision}
is not used in assembler.  It's here such that GCC can easily pass down its
@@code{-mcpu=} option.  The assembler will issue an
error message if an attempt is made to assemble an instruction which
will not execute on the target processor.  The following processor names are
recognized:
@@code{bf504},
@@code{bf506},
@@code{bf512},
@@code{bf514},
@@code{bf516},
@@code{bf518},
@@code{bf522},
@@code{bf523},
@@code{bf524},
@@code{bf525},
@@code{bf526},
@@code{bf527},
@@code{bf531},
@@code{bf532},
@@code{bf533},
@@code{bf534},
@@code{bf535} (not implemented yet),
@@code{bf536},
@@code{bf537},
@@code{bf538},
@@code{bf539},
@@code{bf542},
@@code{bf542m},
@@code{bf544},
@@code{bf544m},
@@code{bf547},
@@code{bf547m},
@@code{bf548},
@@code{bf548m},
@@code{bf549},
@@code{bf549m},
@@code{bf561},
and
@@code{bf592}.

@@cindex @@code{-mfdpic} command line option, Blackfin
@@item -mfdpic
Assemble for the FDPIC ABI.

@@cindex @@code{-mno-fdpic} command line option, Blackfin
@@cindex @@code{-mnopic} command line option, Blackfin
@@item -mno-fdpic
@@itemx -mnopic
Disable -mfdpic.
@@end table
@@c man end

@@node Blackfin Syntax
@@section Syntax
@@cindex Blackfin syntax
@@cindex syntax, Blackfin

@@table @@code
@@item Special Characters
Assembler input is free format and may appear anywhere on the line.
One instruction may extend across multiple lines or more than one
instruction may appear on the same line.  White space (space, tab,
comments or newline) may appear anywhere between tokens.  A token must
not have embedded spaces.  Tokens include numbers, register names,
keywords, user identifiers, and also some multicharacter special
symbols like "+=", "/*" or "||".

Comments are introduced by the @@samp{#} character and extend to the
end of the current line.  If the @@samp{#} appears as the first
character of a line, the whole line is treated as a comment, but in
this case the line can also be a logical line number directive
(@@pxref{Comments}) or a preprocessor control command
(@@pxref{Preprocessing}).

@@item Instruction Delimiting
A semicolon must terminate every instruction.  Sometimes a complete
instruction will consist of more than one operation.  There are two
cases where this occurs.  The first is when two general operations
are combined.  Normally a comma separates the different parts, as in

@@smallexample
a0= r3.h * r2.l, a1 = r3.l * r2.h ;
@@end smallexample

The second case occurs when a general instruction is combined with one
or two memory references for joint issue.  The latter portions are
set off by a "||" token.

@@smallexample
a0 = r3.h * r2.l || r1 = [p3++] || r4 = [i2++];
@@end smallexample

Multiple instructions can occur on the same line.  Each must be
terminated by a semicolon character.

@@item Register Names

The assembler treats register names and instruction keywords in a case
insensitive manner.  User identifiers are case sensitive.  Thus, R3.l,
R3.L, r3.l and r3.L are all equivalent input to the assembler.

Register names are reserved and may not be used as program identifiers.

Some operations (such as "Move Register") require a register pair.
Register pairs are always data registers and are denoted using a colon,
eg., R3:2.  The larger number must be written firsts.  Note that the
hardware only supports odd-even pairs, eg., R7:6, R5:4, R3:2, and R1:0.

Some instructions (such as --SP (Push Multiple)) require a group of
adjacent registers.  Adjacent registers are denoted in the syntax by
the range enclosed in parentheses and separated by a colon, eg., (R7:3).
Again, the larger number appears first.

Portions of a particular register may be individually specified.  This
is written with a dot (".") following the register name and then a
letter denoting the desired portion.  For 32-bit registers, ".H"
denotes the most significant ("High") portion.  ".L" denotes the
least-significant portion.  The subdivisions of the 40-bit registers
are described later.

@@item Accumulators
The set of 40-bit registers A1 and A0 that normally contain data that
is being manipulated.  Each accumulator can be accessed in four ways.

@@table @@code
@@item one 40-bit register
The register will be referred to as A1 or A0.
@@item one 32-bit register
The registers are designated as A1.W or A0.W.
@@item two 16-bit registers
The registers are designated as A1.H, A1.L, A0.H or A0.L.
@@item one 8-bit register
The registers are designated as A1.X or A0.X for the bits that
extend beyond bit 31.
@@end table

@@item Data Registers
The set of 32-bit registers (R0, R1, R2, R3, R4, R5, R6 and R7) that
normally contain data for manipulation.  These are abbreviated as
D-register or Dreg.  Data registers can be accessed as 32-bit registers
or as two independent 16-bit registers.  The least significant 16 bits
of each register is called the "low" half and is designated with ".L"
following the register name.  The most significant 16 bits are called
the "high" half and is designated with ".H" following the name.

@@smallexample
   R7.L, r2.h, r4.L, R0.H
@@end smallexample

@@item Pointer Registers
The set of 32-bit registers (P0, P1, P2, P3, P4, P5, SP and FP) that
normally contain byte addresses of data structures.  These are
abbreviated as P-register or Preg.

@@smallexample
p2, p5, fp, sp
@@end smallexample

@@item Stack Pointer SP
The stack pointer contains the 32-bit address of the last occupied
byte location in the stack.  The stack grows by decrementing the
stack pointer.

@@item Frame Pointer FP
The frame pointer contains the 32-bit address of the previous frame
pointer in the stack.  It is located at the top of a frame.

@@item Loop Top
LT0 and LT1.  These registers contain the 32-bit address of the top of
a zero overhead loop.

@@item Loop Count
LC0 and LC1.  These registers contain the 32-bit counter of the zero
overhead loop executions.

@@item Loop Bottom
LB0 and LB1.  These registers contain the 32-bit address of the bottom
of a zero overhead loop.

@@item Index Registers
The set of 32-bit registers (I0, I1, I2, I3) that normally contain byte
addresses of data structures.  Abbreviated I-register or Ireg.

@@item Modify Registers
The set of 32-bit registers (M0, M1, M2, M3) that normally contain
offset values that are added and subtracted to one of the index
registers.  Abbreviated as Mreg.

@@item Length Registers
The set of 32-bit registers (L0, L1, L2, L3) that normally contain the
length in bytes of the circular buffer.  Abbreviated as Lreg.  Clear
the Lreg to disable circular addressing for the corresponding Ireg.

@@item Base Registers
The set of 32-bit registers (B0, B1, B2, B3) that normally contain the
base address in bytes of the circular buffer.  Abbreviated as Breg.

@@item Floating Point
The Blackfin family has no hardware floating point but the .float
directive generates ieee floating point numbers for use with software
floating point libraries.

@@item Blackfin Opcodes
For detailed information on the Blackfin machine instruction set, see
the Blackfin(r) Processor Instruction Set Reference.

@@end table

@@node Blackfin Directives
@@section Directives
@@cindex Blackfin directives
@@cindex directives, Blackfin

The following directives are provided for compatibility with the VDSP assembler.

@@table @@code
@@item .byte2
Initializes a two byte data object.

This maps to the @@code{.short} directive.
@@item .byte4
Initializes a four byte data object.

This maps to the @@code{.int} directive.
@@item .db
Initializes a single byte data object.

This directive is a synonym for @@code{.byte}.
@@item .dw
Initializes a two byte data object.

This directive is a synonym for @@code{.byte2}.
@@item .dd
Initializes a four byte data object.

This directive is a synonym for @@code{.byte4}.
@@item .var
Define and initialize a 32 bit data object.
@@end table
@


1.12
log
@gas: blackfin: docs: typo fixes and fill out directive info

A bunch of Blackfin-specific directives were lacking info on what they
actually do, so fill in the blanks.  Further, the byte2/byte4 descriptions
were swapped.

Signed-off-by: Mike Frysinger <vapier@@gentoo.org>
@
text
@d40 1
a40 1
recognized: 
d100 1
a100 1
keywords, user identifiers, and also some multicharacter special 
d112 1
a112 1
instruction will consist of more than one operation.  There are two 
d139 1
a139 1
Some operations (such as "Move Register") require a register pair. 
d141 1
a141 1
eg., R3:2.  The larger number must be written firsts.  Note that the 
d150 1
a150 1
is written with a dot (".") following the register name and then a 
d174 1
a174 1
normally contain data for manipulation.  These are abbreviated as 
@


1.11
log
@	PR gas/12390
	* doc/all.texi: Add NS32K
	* doc/as.texinfo: Remove target specific details of which
	characters act as comment initiators and statement separators into
	individual target specific files.
	* doc/c-alpha.texi (Alpha-Chars): Document special behaviour of
	the hash character at the start of a line.
	* doc/c-arm.texi (ARM-Chars): Likewise.
	* doc/c-avr.texi (AVR-Chars): Likewise.
	* doc/c-d10v.texi (D10V-Chars): Likewise.
	* doc/c-d30v.texi (D30V-Chars):	Likewise.
	* doc/c-mmix.texi (MMIX-Chars): Likewise.
	* doc/c-s390.texi (s390 characters): Likewise.
	* doc/c-sh.texi (SH-Chars): Likewise.
	* doc/c-sh64.texi (SH64-Chars): Likewise.
	* doc/c-sparc.texi (SPARC-Chars): Likewise.
	* doc/c-tic6x.texi (TIC6X Syntax): Likewise.
	* doc/c-xtensa.texi (Xtensa Syntax): Likewise.
	* doc/c-z80.texi (Z80-Chars): Likewise.
	* doc/c-z8k.texi (Z8000-Chars): Likewise.
	* doc/c-pdp11.texi (PDP11-Syntax): Document line separator character.
	* doc/c-arc.texi (ARC-Chars): Fill in this subsection.
	* doc/c-bfin.texi (Blackfin Syntax): Document line comment and
	line separator characters.
	* doc/c-cr16.texi (CR16 Syntax): Likewise.
	* doc/c-i386.texi (i386-Chars): Likewise.
	* doc/c-i860.texi (i860-Chars):	Likewise.
	* doc/c-i960.texi (i960-Chars):	Likewise.
	* doc/c-ip2k.texi (IP2K-Chars):	Likewise.
	* doc/c-lm32.texi (LM32-Chars):	likewise.
	* doc/c-m32c.texi (M32C-Chars): Likewise.
	* doc/c-m68hc11.texi (M68HC11-syntax): Likewise.
	* doc/c-m68k.texi (M68K-Chars): Likewise.
	* doc/c-microblaze.texi (MicroBlaze-Chars): Likewise.
	* doc/c-msp430.texi (MSP430-Chars): Likewise.
	* doc/c-mt.texi (MT-Chars): Likewise.
	* doc/c-ns32k.texi (NS32K-Chars): Likewise.
	* doc/c-pj.texi (PJ-Chars): Likewise.
	* doc/c-ppc.texi (PowerPC-Chars): Likewise.
	* doc/c-rx.texi (RX-Chars): Likewise.
	* doc/c-score.texi (SCORE-Chars): Likewise.
	* doc/c-tic54x.texi (TIC54X-Chars): Likewise.
	* doc/c-v850.texi (V850-Chars): Likewise.
	* doc/c-vax.texi (VAX-Chars): Likewise.
	* doc/c-xc16x.texi (xc16x-Chars): Likewise.
@
text
@d128 1
a128 1
Multiple instructions can occour on the same line.  Each must be
d221 1
a221 1
offset values that are added and subracted to one of the index
d253 4
d258 7
a264 1
@@item .byte4
d266 2
a267 2
@@item .db
TBD
d269 3
a271 3
TBD
@@item .dw
TBD
@


1.10
log
@gas: bfin: convert to new doc style

Signed-off-by: Mike Frysinger <vapier@@gentoo.org>
@
text
@d1 1
a1 1
@@c Copyright 2005, 2006, 2009, 2010
d103 7
d128 3
@


1.9
log
@gas: blackfin: add support for BF592 processors

Signed-off-by: Mike Frysinger <vapier@@gentoo.org>
@
text
@d5 2
d12 1
d30 2
a31 1
@@table @@code
d86 1
@


1.8
log
@* doc/as.texinfo (Overview): Use @@itemx for grouped @@table
items.
* doc/c-alpha.texi (Alpha Options): Likewise.
* doc/c-arm.texi (ARM Directives): Likewise.
* doc/c-bfin.texi (Blackfin Options): Likewise.
* doc/c-d10v.texi (D10V-Opts): Likewise.
* doc/c-i386.texi (i386-Options): Likewise.
* doc/c-ia64.texi (IA-64 Options): Likewise.
* doc/c-m68k.texi (M68K-Opts): Likewise.
* doc/c-tic54x.texi (TIC54X-Directives): Likewise.
* doc/internals.texi (Symbols): Likewise.
@
text
@d1 1
a1 1
@@c Copyright 2005, 2006, 2009
d68 1
d70 1
a70 1
@@code{bf561}.
@


1.7
log
@add support for Blackfin bf504/bf506
@
text
@d77 2
a78 1
@@item -mno-fdpic/-mnopic
@


1.6
log
@	* doc/as.texinfo: Add Blackfin options.
	* doc/c-bfin.texi: Document -mfdpic, -mno-fdpic and -mnopic.
	* config/tc-bfin.c (md_show_usage): Show usage for all
	Blackfin specific options.
@
text
@d37 2
@


1.5
log
@	* doc/all.texi: Replace BFIN with Blackfin.
	* doc/as.texinfo: Likewise.
	* doc/c-bfin.texi: Likewise.
	* doc/asconfig.texi: Likewise.

	* doc/c-bfin.texi: Update -mcpu= option with bf512, bf514,
	bf516 and bf518.
@
text
@d69 8
@


1.4
log
@update copyright dates
@
text
@d7 1
a7 1
@@node BFIN-Dependent
d37 4
@


1.3
log
@	From Jie Zhang  <jie.zhang@@analog.com>
	* config/tc-bfin.h (bfin_anomaly_checks): Declare.
	(AC_05000074): Define.
	(ENABLE_AC_05000074): Define.
	* config/tc-bfin.c (enum bfin_cpu_type): New.
	(bfin_cpu_t): Typedef.
	(bfin_cpu_type): Define.
	(bfin_si_revision): Define.
	(bfin_anomaly_checks): Define.
	(struct bfin_cpu): New.
	(bfin_cpus[]): New. (struct bfin_cpu_isa): Define.
	(bfin_isa): New global variable.
	(OPTION_MCPU): Define.
	(md_longopts[]): Add -mcpu option.
	(md_parse_option): Deal with -mcpu option and initialize
	bfin_anomaly_checks.
	* doc/c-bfin.texi: Rename BFIN to Blackfin throughout.  Document
	-mcpu option.
	* config/bfin-parse.y (gen_multi_instr_1): Check anomaly
	05000074.
@
text
@d1 1
a1 1
@@c Copyright 2005
@


1.2
log
@Fix spelling typos
@
text
@d17 3
a19 2
* BFIN Syntax::			BFIN Syntax
* BFIN Directives::		BFIN Directives
d22 46
a67 1
@@node BFIN Syntax
d69 2
a70 2
@@cindex BFIN syntax
@@cindex syntax, BFIN
d213 1
a213 1
@@node BFIN Directives
d215 2
a216 2
@@cindex BFIN directives
@@cindex directives, BFIN
@


1.1
log
@	* Makefile.am: Bfin support.
	* Makefile.in: Regenerated.
	* aclocal.m4: Regenerated.
	* configure: Regenerated.
	* configure.in: Bfin support.
	* configure.tgt: Bfin support.
	* config/bfin-aux.h: New file.
	* config/bfin-defs.h: New file.
	* config/bfin-lex.l: New file.
	* config/bfin-parse.y: New file.
	* config/tc-bfin.c: New file.
	* config/tc-bfin.h: New file.
	* doc/Makefile.am: Recognize c-bfin.texi.
	* doc/Makefile.in: Regenerated.
	* doc/all.texi: Bfin support.
	* doc/as.texinfo: Likewise.
	* doc/c-bfin.texi: Document bfin-specific syntax and
	directives.
@
text
@d100 1
a100 1
of each register is called the "low" half and is desginated with ".L"
d102 1
a102 1
the "high" half and is designated with ".H". following the name.
@

