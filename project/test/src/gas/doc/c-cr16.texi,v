head	1.6;
access;
symbols
	binutils-2_24-branch:1.6.0.2
	binutils-2_24-branchpoint:1.6
	binutils-2_21_1:1.3
	binutils-2_23_2:1.4
	binutils-2_23_1:1.4
	binutils-2_23:1.4
	binutils-2_23-branch:1.4.0.6
	binutils-2_23-branchpoint:1.4
	binutils-2_22_branch:1.4.0.4
	binutils-2_22:1.4
	binutils-2_22-branch:1.4.0.2
	binutils-2_22-branchpoint:1.4
	binutils-2_21:1.3
	binutils-2_21-branch:1.3.0.4
	binutils-2_21-branchpoint:1.3
	binutils-2_20_1:1.3
	binutils-2_20:1.3
	binutils-arc-20081103-branch:1.1.0.8
	binutils-arc-20081103-branchpoint:1.1
	binutils-2_20-branch:1.3.0.2
	binutils-2_20-branchpoint:1.3
	dje-cgen-play1-branch:1.2.0.2
	dje-cgen-play1-branchpoint:1.2
	arc-20081103-branch:1.1.0.6
	arc-20081103-branchpoint:1.1
	binutils-2_19_1:1.1
	binutils-2_19:1.1
	binutils-2_19-branch:1.1.0.4
	binutils-2_19-branchpoint:1.1
	binutils-2_18:1.1
	binutils-2_18-branch:1.1.0.2
	binutils-2_18-branchpoint:1.1
	binutils_latest_snapshot:1.6;
locks; strict;
comment	@# @;


1.6
date	2013.03.14.10.00.46;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	2013.01.10.19.51.55;	author hjl;	state Exp;
branches;
next	1.4;

1.4
date	2011.01.18.13.37.39;	author nickc;	state Exp;
branches;
next	1.3;

1.3
date	2009.09.02.07.24.21;	author amodra;	state Exp;
branches;
next	1.2;

1.2
date	2008.11.27.12.01.26;	author swami;	state Exp;
branches;
next	1.1;

1.1
date	2007.06.29.14.09.31;	author nickc;	state Exp;
branches;
next	;


desc
@@


1.6
log
@	PR gas/15212
	* doc/c-arc.texi (ARC Directives): Use @@code instead of @@bullte
	for table format.
	* doc/c-arm.texi (ARM-Instruction-Set): Likewise.  Also add text
	to the @@item directives.
	(ARM-Neon-Alignment): Move to correct place in the document.
	* doc/c-cr16.texi (CR16 Operand Qualifiers): Fix up table
	formatting.
	* doc/c-tic54x.texi (TIC54X-Subsyms): Correct use of
	@@smallexample.
@
text
@@@c Copyright 2007-2013 Free Software Foundation, Inc.
@@c This is part of the GAS manual.
@@c For copying conditions, see the file as.texinfo.

@@ifset GENERIC
@@page
@@node CR16-Dependent
@@chapter CR16 Dependent Features
@@end ifset
@@ifclear GENERIC
@@node Machine Dependencies
@@chapter CR16 Dependent Features
@@end ifclear

@@cindex CR16 support
@@menu
* CR16 Operand Qualifiers::     CR16 Machine Operand Qualifiers
* CR16 Syntax::                 Syntax for the CR16
@@end menu

@@node CR16 Operand Qualifiers
@@section CR16 Operand Qualifiers
@@cindex CR16 Operand Qualifiers

The National Semiconductor CR16 target of @@code{@@value{AS}} has a few machine dependent operand qualifiers.

Operand expression type qualifier is an optional field in the instruction operand, to determines the type of the expression field of an operand. The @@code{@@@@} is required. CR16 architecture uses one of the following expression qualifiers:

@@table @@code
@@item  s
- @@code{Specifies expression operand type as small}
@@item  m
- @@code{Specifies expression operand type as medium}
@@item  l
- @@code{Specifies expression operand type as large}
@@item  c
- @@code{Specifies the CR16 Assembler generates a relocation entry for the operand, where pc has implied bit, the expression is adjusted accordingly. The linker uses the relocation entry to update the operand address at link time.}
@@item  got/GOT
- @@code{Specifies the CR16 Assembler generates a relocation entry for the operand, offset from Global Offset Table. The linker uses this relocation entry to update the operand address at link time}
@@item  cgot/cGOT
- @@code{Specifies the CompactRISC Assembler generates a relocation entry for the operand, where pc has implied bit, the expression is adjusted accordingly. The linker uses the relocation entry to update the operand address at link time.}
@@end table

CR16 target operand qualifiers and its size (in bits):

@@table @@samp
@@item Immediate Operand: s
4 bits.

@@item Immediate Operand: m
16 bits, for movb and movw instructions.

@@item Immediate Operand: m
20 bits, movd instructions.

@@item Immediate Operand: l
32 bits.

@@item Absolute Operand: s
Illegal specifier for this operand.

@@item Absolute Operand: m
20 bits, movd instructions.

@@item Displacement Operand: s
8 bits.

@@item Displacement Operand: m
16 bits.

@@item Displacement Operand: l
24 bits.

@@end table

For example:
@@example
1   @@code{movw $_myfun@@@@c,r1}

    This loads the address of _myfun, shifted right by 1, into r1.

2   @@code{movd $_myfun@@@@c,(r2,r1)}

    This loads the address of _myfun, shifted right by 1, into register-pair r2-r1.

3   @@code{_myfun_ptr:}
    @@code{.long _myfun@@@@c}
    @@code{loadd _myfun_ptr, (r1,r0)}
    @@code{jal (r1,r0)}

    This .long directive, the address of _myfunc, shifted right by 1 at link time.

4   @@code{loadd  _data1@@@@GOT(r12), (r1,r0)}

    This loads the address of _data1, into global offset table (ie GOT) and its offset value from GOT loads into register-pair r2-r1.

5   @@code{loadd  _myfunc@@@@cGOT(r12), (r1,r0)}

    This loads the address of _myfun, shifted right by 1, into global offset table (ie GOT) and its offset value from GOT loads into register-pair r1-r0.
@@end example

@@node CR16 Syntax
@@section CR16 Syntax
@@menu
* CR16-Chars::                Special Characters
@@end menu

@@node CR16-Chars
@@subsection Special Characters

@@cindex line comment character, CR16
@@cindex CR16 line comment character
The presence of a @@samp{#} on a line indicates the start of a comment
that extends to the end of the current line.  If the @@samp{#} appears
as the first character of a line, the whole line is treated as a
comment, but in this case the line can also be a logical line number
directive (@@pxref{Comments}) or a preprocessor control command
(@@pxref{Preprocessing}).

@@cindex line separator, CR16
@@cindex statement separator, CR16
@@cindex CR16 line separator
The @@samp{;} character can be used to separate statements on the same
line.
@


1.5
log
@Remove trailing white spaces on gas

	* app.c: Remove trailing white spaces.
	* as.c: Likewise.
	* as.h: Likewise.
	* cond.c: Likewise.
	* dw2gencfi.c: Likewise.
	* dwarf2dbg.h: Likewise.
	* ecoff.c: Likewise.
	* input-file.c: Likewise.
	* itbl-lex.h: Likewise.
	* output-file.c: Likewise.
	* read.c: Likewise.
	* sb.c: Likewise.
	* subsegs.c: Likewise.
	* symbols.c: Likewise.
	* write.c: Likewise.
	* config/tc-i386.c: Likewise.
	* doc/Makefile.am: Likewise.
	* doc/Makefile.in: Likewise.
	* doc/c-aarch64.texi: Likewise.
	* doc/c-alpha.texi: Likewise.
	* doc/c-arc.texi: Likewise.
	* doc/c-arm.texi: Likewise.
	* doc/c-avr.texi: Likewise.
	* doc/c-bfin.texi: Likewise.
	* doc/c-cr16.texi: Likewise.
	* doc/c-d10v.texi: Likewise.
	* doc/c-d30v.texi: Likewise.
	* doc/c-h8300.texi: Likewise.
	* doc/c-hppa.texi: Likewise.
	* doc/c-i370.texi: Likewise.
	* doc/c-i386.texi: Likewise.
	* doc/c-i860.texi: Likewise.
	* doc/c-m32c.texi: Likewise.
	* doc/c-m32r.texi: Likewise.
	* doc/c-m68hc11.texi: Likewise.
	* doc/c-m68k.texi: Likewise.
	* doc/c-microblaze.texi: Likewise.
	* doc/c-mips.texi: Likewise.
	* doc/c-msp430.texi: Likewise.
	* doc/c-mt.texi: Likewise.
	* doc/c-s390.texi: Likewise.
	* doc/c-score.texi: Likewise.
	* doc/c-sh.texi: Likewise.
	* doc/c-sh64.texi: Likewise.
	* doc/c-tic54x.texi: Likewise.
	* doc/c-tic6x.texi: Likewise.
	* doc/c-v850.texi: Likewise.
	* doc/c-xc16x.texi: Likewise.
	* doc/c-xgate.texi: Likewise.
	* doc/c-xtensa.texi: Likewise.
	* doc/c-z80.texi: Likewise.
	* doc/internals.texi: Likewise.
@
text
@d1 1
a1 1
@@c Copyright 2007, 2008, 2011 Free Software Foundation, Inc.
d47 27
a73 20
@@item Immediate Operand
- s ---- 4 bits
@@item
- m ---- 16 bits, for movb and movw instructions.
@@item
- m ---- 20 bits, movd instructions.
@@item
- l ---- 32 bits

@@item Absolute Operand
- s ---- Illegal specifier for this operand.
@@item
- m ---- 20 bits, movd instructions.

@@item Displacement Operand
- s ---- 8 bits
@@item
- m ---- 16 bits
@@item
- l ---- 24 bits
@


1.4
log
@	PR gas/12390
	* doc/all.texi: Add NS32K
	* doc/as.texinfo: Remove target specific details of which
	characters act as comment initiators and statement separators into
	individual target specific files.
	* doc/c-alpha.texi (Alpha-Chars): Document special behaviour of
	the hash character at the start of a line.
	* doc/c-arm.texi (ARM-Chars): Likewise.
	* doc/c-avr.texi (AVR-Chars): Likewise.
	* doc/c-d10v.texi (D10V-Chars): Likewise.
	* doc/c-d30v.texi (D30V-Chars):	Likewise.
	* doc/c-mmix.texi (MMIX-Chars): Likewise.
	* doc/c-s390.texi (s390 characters): Likewise.
	* doc/c-sh.texi (SH-Chars): Likewise.
	* doc/c-sh64.texi (SH64-Chars): Likewise.
	* doc/c-sparc.texi (SPARC-Chars): Likewise.
	* doc/c-tic6x.texi (TIC6X Syntax): Likewise.
	* doc/c-xtensa.texi (Xtensa Syntax): Likewise.
	* doc/c-z80.texi (Z80-Chars): Likewise.
	* doc/c-z8k.texi (Z8000-Chars): Likewise.
	* doc/c-pdp11.texi (PDP11-Syntax): Document line separator character.
	* doc/c-arc.texi (ARC-Chars): Fill in this subsection.
	* doc/c-bfin.texi (Blackfin Syntax): Document line comment and
	line separator characters.
	* doc/c-cr16.texi (CR16 Syntax): Likewise.
	* doc/c-i386.texi (i386-Chars): Likewise.
	* doc/c-i860.texi (i860-Chars):	Likewise.
	* doc/c-i960.texi (i960-Chars):	Likewise.
	* doc/c-ip2k.texi (IP2K-Chars):	Likewise.
	* doc/c-lm32.texi (LM32-Chars):	likewise.
	* doc/c-m32c.texi (M32C-Chars): Likewise.
	* doc/c-m68hc11.texi (M68HC11-syntax): Likewise.
	* doc/c-m68k.texi (M68K-Chars): Likewise.
	* doc/c-microblaze.texi (MicroBlaze-Chars): Likewise.
	* doc/c-msp430.texi (MSP430-Chars): Likewise.
	* doc/c-mt.texi (MT-Chars): Likewise.
	* doc/c-ns32k.texi (NS32K-Chars): Likewise.
	* doc/c-pj.texi (PJ-Chars): Likewise.
	* doc/c-ppc.texi (PowerPC-Chars): Likewise.
	* doc/c-rx.texi (RX-Chars): Likewise.
	* doc/c-score.texi (SCORE-Chars): Likewise.
	* doc/c-tic54x.texi (TIC54X-Chars): Likewise.
	* doc/c-v850.texi (V850-Chars): Likewise.
	* doc/c-vax.texi (VAX-Chars): Likewise.
	* doc/c-xc16x.texi (xc16x-Chars): Likewise.
@
text
@d25 1
a25 1
The National Semiconductor CR16 target of @@code{@@value{AS}} has a few machine dependent operand qualifiers.  
d30 1
a30 1
@@item  s 
d32 1
a32 1
@@item  m 
d34 1
a34 1
@@item  l 
d36 1
a36 1
@@item  c 
d38 1
a38 1
@@item  got/GOT 
d40 1
a40 1
@@item  cgot/cGOT 
d49 1
a49 1
@@item 
d51 1
a51 1
@@item 
d53 1
a53 1
@@item 
d58 1
a58 1
@@item  
d65 1
a65 1
@@item 
d78 1
a78 1
                
d92 1
a92 1
    This loads the address of _myfun, shifted right by 1, into global offset table (ie GOT) and its offset value from GOT loads into register-pair r1-r0.	
@


1.3
log
@update copyright dates
@
text
@d1 1
a1 1
@@c Copyright 2007, 2008 Free Software Foundation, Inc.
d18 1
d94 24
@


1.2
log
@

	*c-cr16.texi (cr16-operand specifiers): Add got/GOT and cgot/cGOT.
@
text
@d1 1
a1 1
@@c Copyright 2007 Free Software Foundation, Inc.
@


1.1
log
@New port: National Semiconductor's CR16
@
text
@d37 4
d84 8
@

