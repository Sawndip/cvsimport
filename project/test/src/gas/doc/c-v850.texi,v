head	1.13;
access;
symbols
	binutils-2_24-branch:1.13.0.2
	binutils-2_24-branchpoint:1.13
	binutils-2_21_1:1.9
	binutils-2_23_2:1.10
	binutils-2_23_1:1.10
	binutils-2_23:1.10
	binutils-2_23-branch:1.10.0.6
	binutils-2_23-branchpoint:1.10
	binutils-2_22_branch:1.10.0.4
	binutils-2_22:1.10
	binutils-2_22-branch:1.10.0.2
	binutils-2_22-branchpoint:1.10
	binutils-2_21:1.9
	binutils-2_21-branch:1.9.0.2
	binutils-2_21-branchpoint:1.9
	binutils-2_20_1:1.8
	binutils-2_20:1.8
	binutils-arc-20081103-branch:1.7.0.10
	binutils-arc-20081103-branchpoint:1.7
	binutils-2_20-branch:1.8.0.2
	binutils-2_20-branchpoint:1.8
	dje-cgen-play1-branch:1.7.0.8
	dje-cgen-play1-branchpoint:1.7
	arc-20081103-branch:1.7.0.6
	arc-20081103-branchpoint:1.7
	binutils-2_19_1:1.7
	binutils-2_19:1.7
	binutils-2_19-branch:1.7.0.4
	binutils-2_19-branchpoint:1.7
	binutils-2_18:1.7
	binutils-2_18-branch:1.7.0.2
	binutils-2_18-branchpoint:1.7
	binutils-csl-coldfire-4_1-32:1.6
	binutils-csl-sourcerygxx-4_1-32:1.6
	binutils-csl-innovasic-fido-3_4_4-33:1.6
	binutils-csl-sourcerygxx-3_4_4-32:1.6
	binutils-csl-coldfire-4_1-30:1.6
	binutils-csl-sourcerygxx-4_1-30:1.6
	binutils-csl-coldfire-4_1-28:1.6
	binutils-csl-sourcerygxx-4_1-29:1.6
	binutils-csl-sourcerygxx-4_1-28:1.6
	binutils-csl-arm-2006q3-27:1.6
	binutils-csl-sourcerygxx-4_1-27:1.6
	binutils-csl-arm-2006q3-26:1.6
	binutils-csl-sourcerygxx-4_1-26:1.6
	binutils-csl-sourcerygxx-4_1-25:1.6
	binutils-csl-sourcerygxx-4_1-24:1.6
	binutils-csl-sourcerygxx-4_1-23:1.6
	binutils-csl-sourcerygxx-4_1-21:1.6
	binutils-csl-arm-2006q3-21:1.6
	binutils-csl-sourcerygxx-4_1-22:1.6
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.6
	binutils-csl-sourcerygxx-4_1-20:1.6
	binutils-csl-arm-2006q3-19:1.6
	binutils-csl-sourcerygxx-4_1-19:1.6
	binutils-csl-sourcerygxx-4_1-18:1.6
	binutils-csl-renesas-4_1-9:1.6
	binutils-csl-sourcerygxx-3_4_4-25:1.6
	binutils-csl-renesas-4_1-8:1.6
	binutils-csl-renesas-4_1-7:1.6
	binutils-csl-renesas-4_1-6:1.6
	binutils-csl-sourcerygxx-4_1-17:1.6
	binutils-csl-sourcerygxx-4_1-14:1.6
	binutils-csl-sourcerygxx-4_1-15:1.6
	binutils-csl-sourcerygxx-4_1-13:1.6
	binutils-2_17:1.6
	binutils-csl-sourcerygxx-4_1-12:1.6
	binutils-csl-sourcerygxx-3_4_4-21:1.6
	binutils-csl-wrs-linux-3_4_4-24:1.6
	binutils-csl-wrs-linux-3_4_4-23:1.6
	binutils-csl-sourcerygxx-4_1-9:1.6
	binutils-csl-sourcerygxx-4_1-8:1.6
	binutils-csl-sourcerygxx-4_1-7:1.6
	binutils-csl-arm-2006q1-6:1.6
	binutils-csl-sourcerygxx-4_1-6:1.6
	binutils-csl-wrs-linux-3_4_4-22:1.6
	binutils-csl-coldfire-4_1-11:1.6
	binutils-csl-sourcerygxx-3_4_4-19:1.6
	binutils-csl-coldfire-4_1-10:1.6
	binutils-csl-sourcerygxx-4_1-5:1.6
	binutils-csl-sourcerygxx-4_1-4:1.6
	binutils-csl-wrs-linux-3_4_4-21:1.6
	binutils-csl-morpho-4_1-4:1.6
	binutils-csl-sourcerygxx-3_4_4-17:1.6
	binutils-csl-wrs-linux-3_4_4-20:1.6
	binutils-2_17-branch:1.6.0.10
	binutils-2_17-branchpoint:1.6
	binutils-csl-2_17-branch:1.6.0.8
	binutils-csl-2_17-branchpoint:1.6
	binutils-csl-gxxpro-3_4-branch:1.6.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.6
	binutils-2_16_1:1.6
	binutils-csl-arm-2005q1b:1.6
	binutils-2_16:1.6
	binutils-csl-arm-2005q1a:1.6
	binutils-csl-arm-2005q1-branch:1.6.0.4
	binutils-csl-arm-2005q1-branchpoint:1.6
	binutils-2_16-branch:1.6.0.2
	binutils-2_16-branchpoint:1.6
	csl-arm-2004-q3d:1.5
	csl-arm-2004-q3:1.5
	binutils-2_15:1.5
	binutils-2_15-branchpoint:1.5
	csl-arm-2004-q1a:1.5
	csl-arm-2004-q1:1.5
	binutils-2_15-branch:1.5.0.6
	cagney_bfdfile-20040213-branch:1.5.0.4
	cagney_bfdfile-20040213-branchpoint:1.5
	cagney_bigcore-20040122-branch:1.5.0.2
	cagney_bigcore-20040122-branchpoint:1.5
	csl-arm-2003-q4:1.5
	binutils-2_14:1.4
	binutils-2_14-branch:1.4.0.2
	binutils-2_14-branchpoint:1.4
	binutils-2_13_2_1:1.2
	binutils-2_13_2:1.2
	binutils-2_13_1:1.2
	binutils-2_13:1.2
	binutils-2_13-branchpoint:1.2
	binutils-2_13-branch:1.2.0.4
	binutils-2_12_1:1.2
	binutils-2_12:1.2
	binutils-2_12-branch:1.2.0.2
	binutils-2_12-branchpoint:1.2
	cygnus_cvs_20020108_pre:1.2
	binutils-2_11_2:1.1.1.1.4.1
	binutils-2_11_1:1.1.1.1.4.1
	binutils-2_11:1.1.1.1
	x86_64versiong3:1.1.1.1
	binutils-2_11-branch:1.1.1.1.0.4
	binutils-2_10_1:1.1.1.1
	binutils-2_10:1.1.1.1
	binutils-2_10-branch:1.1.1.1.0.2
	binutils-2_10-branchpoint:1.1.1.1
	binutils_latest_snapshot:1.13
	repo-unification-2000-02-06:1.1.1.1
	binu_ss_19990721:1.1.1.1
	binu_ss_19990602:1.1.1.1
	binu_ss_19990502:1.1.1.1
	cygnus:1.1.1;
locks; strict;
comment	@# @;


1.13
date	2013.01.24.11.14.00;	author nickc;	state Exp;
branches;
next	1.12;

1.12
date	2013.01.10.19.51.55;	author hjl;	state Exp;
branches;
next	1.11;

1.11
date	2012.11.09.17.36.15;	author nickc;	state Exp;
branches;
next	1.10;

1.10
date	2011.01.18.13.37.39;	author nickc;	state Exp;
branches;
next	1.9;

1.9
date	2010.07.23.14.52.50;	author nickc;	state Exp;
branches;
next	1.8;

1.8
date	2009.09.02.07.24.21;	author amodra;	state Exp;
branches;
next	1.7;

1.7
date	2006.07.24.13.49.49;	author nickc;	state Exp;
branches;
next	1.6;

1.6
date	2005.03.03.01.29.54;	author amodra;	state Exp;
branches;
next	1.5;

1.5
date	2003.09.04.11.04.36;	author nickc;	state Exp;
branches;
next	1.4;

1.4
date	2002.12.19.01.11.31;	author kazu;	state Exp;
branches;
next	1.3;

1.3
date	2002.08.29.06.49.34;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.08.23.24.26;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	99.05.03.07.28.45;	author rth;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.05.03.07.28.45;	author rth;	state Exp;
branches
	1.1.1.1.4.1;
next	;

1.1.1.1.4.1
date	2001.06.07.03.15.36;	author amodra;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Add support for V850E3V5 architecture
@
text
@@@c Copyright 1997-2013 Free Software Foundation, Inc.
@@c This is part of the GAS manual.
@@c For copying conditions, see the file as.texinfo.

@@node V850-Dependent
@@chapter v850 Dependent Features

@@cindex V850 support
@@menu
* V850 Options::              Options
* V850 Syntax::               Syntax
* V850 Floating Point::       Floating Point
* V850 Directives::           V850 Machine Directives
* V850 Opcodes::              Opcodes
@@end menu

@@node V850 Options
@@section Options
@@cindex V850 options (none)
@@cindex options for V850 (none)
@@code{@@value{AS}} supports the following additional command-line options
for the V850 processor family:

@@cindex command line options, V850
@@cindex V850 command line options
@@table @@code

@@cindex @@code{-wsigned_overflow} command line option, V850
@@item -wsigned_overflow
Causes warnings to be produced when signed immediate values overflow the
space available for then within their opcodes.  By default this option
is disabled as it is possible to receive spurious warnings due to using
exact bit patterns as immediate constants.

@@cindex @@code{-wunsigned_overflow} command line option, V850
@@item -wunsigned_overflow
Causes warnings to be produced when unsigned immediate values overflow
the space available for then within their opcodes.  By default this
option is disabled as it is possible to receive spurious warnings due to
using exact bit patterns as immediate constants.

@@cindex @@code{-mv850} command line option, V850
@@item -mv850
Specifies that the assembled code should be marked as being targeted at
the V850 processor.  This allows the linker to detect attempts to link
such code with code assembled for other processors.

@@cindex @@code{-mv850e} command line option, V850
@@item -mv850e
Specifies that the assembled code should be marked as being targeted at
the V850E processor.  This allows the linker to detect attempts to link
such code with code assembled for other processors.

@@cindex @@code{-mv850e1} command line option, V850
@@item -mv850e1
Specifies that the assembled code should be marked as being targeted at
the V850E1 processor.  This allows the linker to detect attempts to link
such code with code assembled for other processors.

@@cindex @@code{-mv850any} command line option, V850
@@item -mv850any
Specifies that the assembled code should be marked as being targeted at
the V850 processor but support instructions that are specific to the
extended variants of the process.  This allows the production of
binaries that contain target specific code, but which are also intended
to be used in a generic fashion.  For example libgcc.a contains generic
routines used by the code produced by GCC for all versions of the v850
architecture, together with support routines only used by the V850E
architecture.

@@cindex @@code{-mv850e2} command line option, V850
@@item -mv850e2
Specifies that the assembled code should be marked as being targeted at
the V850E2 processor.  This allows the linker to detect attempts to link
such code with code assembled for other processors.

@@cindex @@code{-mv850e2v3} command line option, V850
@@item -mv850e2v3
Specifies that the assembled code should be marked as being targeted at
the V850E2V3 processor.  This allows the linker to detect attempts to link
such code with code assembled for other processors.

@@cindex @@code{-mv850e2v4} command line option, V850
@@item -mv850e2v4
This is an alias for @@option{-mv850e3v5}.

@@cindex @@code{-mv850e3v5} command line option, V850
@@item -mv850e3v5
Specifies that the assembled code should be marked as being targeted at
the V850E3V5 processor.  This allows the linker to detect attempts to link
such code with code assembled for other processors.

@@cindex @@code{-mrelax} command line option, V850
@@item -mrelax
Enables relaxation.  This allows the .longcall and .longjump pseudo
ops to be used in the assembler source code.  These ops label sections
of code which are either a long function call or a long branch.  The
assembler will then flag these sections of code and the linker will
attempt to relax them.

@@cindex @@code{-mgcc-abi} command line option, V850
@@item -mgcc-abi
Marks the generated objecy file as supporting the old GCC ABI.

@@cindex @@code{-mrh850-abi} command line option, V850
@@item -mrh850-abi
Marks the generated objecy file as supporting the RH850 ABI.  This is
the default.

@@cindex @@code{-m8byte-align} command line option, V850
@@item -m8byte-align
Marks the generated objecy file as supporting a maximum 64-bits of
alignment for variables defined in the source code.

@@cindex @@code{-m4byte-align} command line option, V850
@@item -m4byte-align
Marks the generated objecy file as supporting a maximum 32-bits of
alignment for variables defined in the source code.  This is the
default.

@@end table

@@node V850 Syntax
@@section Syntax
@@menu
* V850-Chars::                Special Characters
* V850-Regs::                 Register Names
@@end menu

@@node V850-Chars
@@subsection Special Characters

@@cindex line comment character, V850
@@cindex V850 line comment character
@@samp{#} is the line comment character.  If a @@samp{#} appears as the
first character of a line, the whole line is treated as a comment, but
in this case the line can also be a logical line number directive
(@@pxref{Comments}) or a preprocessor control command
(@@pxref{Preprocessing}).

Two dashes (@@samp{--}) can also be used to start a line comment.

@@cindex line separator, V850
@@cindex statement separator, V850
@@cindex V850 line separator

The @@samp{;} character can be used to separate statements on the same
line.

@@node V850-Regs
@@subsection Register Names

@@cindex V850 register names
@@cindex register names, V850
@@code{@@value{AS}} supports the following names for registers:
@@table @@code
@@cindex @@code{zero} register, V850
@@item general register 0
r0, zero
@@item general register 1
r1
@@item general register 2
r2, hp
@@cindex @@code{sp} register, V850
@@item general register 3
r3, sp
@@cindex @@code{gp} register, V850
@@item general register 4
r4, gp
@@cindex @@code{tp} register, V850
@@item general register 5
r5, tp
@@item general register 6
r6
@@item general register 7
r7
@@item general register 8
r8
@@item general register 9
r9
@@item general register 10
r10
@@item general register 11
r11
@@item general register 12
r12
@@item general register 13
r13
@@item general register 14
r14
@@item general register 15
r15
@@item general register 16
r16
@@item general register 17
r17
@@item general register 18
r18
@@item general register 19
r19
@@item general register 20
r20
@@item general register 21
r21
@@item general register 22
r22
@@item general register 23
r23
@@item general register 24
r24
@@item general register 25
r25
@@item general register 26
r26
@@item general register 27
r27
@@item general register 28
r28
@@item general register 29
r29
@@cindex @@code{ep} register, V850
@@item general register 30
r30, ep
@@cindex @@code{lp} register, V850
@@item general register 31
r31, lp
@@cindex @@code{eipc} register, V850
@@item system register 0
eipc
@@cindex @@code{eipsw} register, V850
@@item system register 1
eipsw
@@cindex @@code{fepc} register, V850
@@item system register 2
fepc
@@cindex @@code{fepsw} register, V850
@@item system register 3
fepsw
@@cindex @@code{ecr} register, V850
@@item system register 4
ecr
@@cindex @@code{psw} register, V850
@@item system register 5
psw
@@cindex @@code{ctpc} register, V850
@@item system register 16
ctpc
@@cindex @@code{ctpsw} register, V850
@@item system register 17
ctpsw
@@cindex @@code{dbpc} register, V850
@@item system register 18
dbpc
@@cindex @@code{dbpsw} register, V850
@@item system register 19
dbpsw
@@cindex @@code{ctbp} register, V850
@@item system register 20
ctbp
@@end table

@@node V850 Floating Point
@@section Floating Point

@@cindex floating point, V850 (@@sc{ieee})
@@cindex V850 floating point (@@sc{ieee})
The V850 family uses @@sc{ieee} floating-point numbers.

@@node V850 Directives
@@section V850 Machine Directives

@@cindex machine directives, V850
@@cindex V850 machine directives
@@table @@code
@@cindex @@code{offset} directive, V850
@@item .offset @@var{<expression>}
Moves the offset into the current section to the specified amount.

@@cindex @@code{section} directive, V850
@@item .section "name", <type>
This is an extension to the standard .section directive.  It sets the
current section to be <type> and creates an alias for this section
called "name".

@@cindex @@code{.v850} directive, V850
@@item .v850
Specifies that the assembled code should be marked as being targeted at
the V850 processor.  This allows the linker to detect attempts to link
such code with code assembled for other processors.

@@cindex @@code{.v850e} directive, V850
@@item .v850e
Specifies that the assembled code should be marked as being targeted at
the V850E processor.  This allows the linker to detect attempts to link
such code with code assembled for other processors.

@@cindex @@code{.v850e1} directive, V850
@@item .v850e1
Specifies that the assembled code should be marked as being targeted at
the V850E1 processor.  This allows the linker to detect attempts to link
such code with code assembled for other processors.

@@cindex @@code{.v850e2} directive, V850
@@item .v850e2
Specifies that the assembled code should be marked as being targeted at
the V850E2 processor.  This allows the linker to detect attempts to link
such code with code assembled for other processors.

@@cindex @@code{.v850e2v3} directive, V850
@@item .v850e2v3
Specifies that the assembled code should be marked as being targeted at
the V850E2V3 processor.  This allows the linker to detect attempts to link
such code with code assembled for other processors.

@@cindex @@code{.v850e2v4} directive, V850
@@item .v850e2v4
Specifies that the assembled code should be marked as being targeted at
the V850E3V5 processor.  This allows the linker to detect attempts to link
such code with code assembled for other processors.

@@cindex @@code{.v850e3v5} directive, V850
@@item .v850e3v5
Specifies that the assembled code should be marked as being targeted at
the V850E3V5 processor.  This allows the linker to detect attempts to link
such code with code assembled for other processors.

@@end table

@@node V850 Opcodes
@@section Opcodes

@@cindex V850 opcodes
@@cindex opcodes for V850
@@code{@@value{AS}} implements all the standard V850 opcodes.

@@code{@@value{AS}} also implements the following pseudo ops:

@@table @@code

@@cindex @@code{hi0} pseudo-op, V850
@@item hi0()
Computes the higher 16 bits of the given expression and stores it into
the immediate operand field of the given instruction.  For example:

    @@samp{mulhi hi0(here - there), r5, r6}

computes the difference between the address of labels 'here' and
'there', takes the upper 16 bits of this difference, shifts it down 16
bits and then multiplies it by the lower 16 bits in register 5, putting
the result into register 6.

@@cindex @@code{lo} pseudo-op, V850
@@item lo()
Computes the lower 16 bits of the given expression and stores it into
the immediate operand field of the given instruction.  For example:

    @@samp{addi lo(here - there), r5, r6}

computes the difference between the address of labels 'here' and
'there', takes the lower 16 bits of this difference and adds it to
register 5, putting the result into register 6.

@@cindex @@code{hi} pseudo-op, V850
@@item hi()
Computes the higher 16 bits of the given expression and then adds the
value of the most significant bit of the lower 16 bits of the expression
and stores the result into the immediate operand field of the given
instruction.  For example the following code can be used to compute the
address of the label 'here' and store it into register 6:

    @@samp{movhi hi(here), r0, r6}
    @@samp{movea lo(here), r6, r6}

The reason for this special behaviour is that movea performs a sign
extension on its immediate operand.  So for example if the address of
'here' was 0xFFFFFFFF then without the special behaviour of the hi()
pseudo-op the movhi instruction would put 0xFFFF0000 into r6, then the
movea instruction would takes its immediate operand, 0xFFFF, sign extend
it to 32 bits, 0xFFFFFFFF, and then add it into r6 giving 0xFFFEFFFF
which is wrong (the fifth nibble is E).  With the hi() pseudo op adding
in the top bit of the lo() pseudo op, the movhi instruction actually
stores 0 into r6 (0xFFFF + 1 = 0x0000), so that the movea instruction
stores 0xFFFFFFFF into r6 - the right value.

@@cindex @@code{hilo} pseudo-op, V850
@@item hilo()
Computes the 32 bit value of the given expression and stores it into
the immediate operand field of the given instruction (which must be a
mov instruction).  For example:

    @@samp{mov hilo(here), r6}

computes the absolute address of label 'here' and puts the result into
register 6.

@@cindex @@code{sdaoff} pseudo-op, V850
@@item sdaoff()
Computes the offset of the named variable from the start of the Small
Data Area (whoes address is held in register 4, the GP register) and
stores the result as a 16 bit signed value in the immediate operand
field of the given instruction.  For example:

      @@samp{ld.w sdaoff(_a_variable)[gp],r6}

loads the contents of the location pointed to by the label '_a_variable'
into register 6, provided that the label is located somewhere within +/-
32K of the address held in the GP register.  [Note the linker assumes
that the GP register contains a fixed address set to the address of the
label called '__gp'.  This can either be set up automatically by the
linker, or specifically set by using the @@samp{--defsym __gp=<value>}
command line option].

@@cindex @@code{tdaoff} pseudo-op, V850
@@item tdaoff()
Computes the offset of the named variable from the start of the Tiny
Data Area (whoes address is held in register 30, the EP register) and
stores the result as a 4,5, 7 or 8 bit unsigned value in the immediate
operand field of the given instruction.  For example:

      @@samp{sld.w tdaoff(_a_variable)[ep],r6}

loads the contents of the location pointed to by the label '_a_variable'
into register 6, provided that the label is located somewhere within +256
bytes of the address held in the EP register.  [Note the linker assumes
that the EP register contains a fixed address set to the address of the
label called '__ep'.  This can either be set up automatically by the
linker, or specifically set by using the @@samp{--defsym __ep=<value>}
command line option].

@@cindex @@code{zdaoff} pseudo-op, V850
@@item zdaoff()
Computes the offset of the named variable from address 0 and stores the
result as a 16 bit signed value in the immediate operand field of the
given instruction.  For example:

      @@samp{movea zdaoff(_a_variable),zero,r6}

puts the address of the label '_a_variable' into register 6, assuming
that the label is somewhere within the first 32K of memory.  (Strictly
speaking it also possible to access the last 32K of memory as well, as
the offsets are signed).

@@cindex @@code{ctoff} pseudo-op, V850
@@item ctoff()
Computes the offset of the named variable from the start of the Call
Table Area (whoes address is helg in system register 20, the CTBP
register) and stores the result a 6 or 16 bit unsigned value in the
immediate field of then given instruction or piece of data.  For
example:

     @@samp{callt ctoff(table_func1)}

will put the call the function whoes address is held in the call table
at the location labeled 'table_func1'.

@@cindex @@code{longcall} pseudo-op, V850
@@item .longcall @@code{name}
Indicates that the following sequence of instructions is a long call
to function @@code{name}.  The linker will attempt to shorten this call
sequence if @@code{name} is within a 22bit offset of the call.  Only
valid if the @@code{-mrelax} command line switch has been enabled.

@@cindex @@code{longjump} pseudo-op, V850
@@item .longjump @@code{name}
Indicates that the following sequence of instructions is a long jump
to label @@code{name}.  The linker will attempt to shorten this code
sequence if @@code{name} is within a 22bit offset of the jump.  Only
valid if the @@code{-mrelax} command line switch has been enabled.

@@end table


For information on the V850 instruction set, see @@cite{V850
Family 32-/16-Bit single-Chip Microcontroller Architecture Manual} from NEC.
Ltd.
@


1.12
log
@Remove trailing white spaces on gas

	* app.c: Remove trailing white spaces.
	* as.c: Likewise.
	* as.h: Likewise.
	* cond.c: Likewise.
	* dw2gencfi.c: Likewise.
	* dwarf2dbg.h: Likewise.
	* ecoff.c: Likewise.
	* input-file.c: Likewise.
	* itbl-lex.h: Likewise.
	* output-file.c: Likewise.
	* read.c: Likewise.
	* sb.c: Likewise.
	* subsegs.c: Likewise.
	* symbols.c: Likewise.
	* write.c: Likewise.
	* config/tc-i386.c: Likewise.
	* doc/Makefile.am: Likewise.
	* doc/Makefile.in: Likewise.
	* doc/c-aarch64.texi: Likewise.
	* doc/c-alpha.texi: Likewise.
	* doc/c-arc.texi: Likewise.
	* doc/c-arm.texi: Likewise.
	* doc/c-avr.texi: Likewise.
	* doc/c-bfin.texi: Likewise.
	* doc/c-cr16.texi: Likewise.
	* doc/c-d10v.texi: Likewise.
	* doc/c-d30v.texi: Likewise.
	* doc/c-h8300.texi: Likewise.
	* doc/c-hppa.texi: Likewise.
	* doc/c-i370.texi: Likewise.
	* doc/c-i386.texi: Likewise.
	* doc/c-i860.texi: Likewise.
	* doc/c-m32c.texi: Likewise.
	* doc/c-m32r.texi: Likewise.
	* doc/c-m68hc11.texi: Likewise.
	* doc/c-m68k.texi: Likewise.
	* doc/c-microblaze.texi: Likewise.
	* doc/c-mips.texi: Likewise.
	* doc/c-msp430.texi: Likewise.
	* doc/c-mt.texi: Likewise.
	* doc/c-s390.texi: Likewise.
	* doc/c-score.texi: Likewise.
	* doc/c-sh.texi: Likewise.
	* doc/c-sh64.texi: Likewise.
	* doc/c-tic54x.texi: Likewise.
	* doc/c-tic6x.texi: Likewise.
	* doc/c-v850.texi: Likewise.
	* doc/c-xc16x.texi: Likewise.
	* doc/c-xgate.texi: Likewise.
	* doc/c-xtensa.texi: Likewise.
	* doc/c-z80.texi: Likewise.
	* doc/internals.texi: Likewise.
@
text
@d1 1
a1 1
@@c Copyright 1997, 2002, 2003, 2006, 2011, 2012 Free Software Foundation, Inc.
d83 10
d315 12
@


1.11
log
@2012-11-09  Nick Clifton  <nickc@@redhat.com>

	* Makefile.am (ALL_MACHINES): Add cpu-v850-rh850.lo.
	(ALL_MACHINES_CFILES): Add cpu-v850-rh850.c.
	* archures.c (bfd_arch_info): Add bfd_v850_rh850_arch.
	* config.bfd: Likewise.
	* configure.in: Add bfd_elf32_v850_rh850_vec.
	* cpu-v850.c: Update printed description.
	* cpu-v850_rh850.c: New file.
	* elf32-v850.c (v850_elf_check_relocs): Add support for RH850 ABI
	relocs.
	(v850_elf_perform_relocation): Likewise.
	(v850_elf_final_link_relocate): Likewise.
	(v850_elf_relocate_section): Likewise.
	(v850_elf_relax_section): Likewise.
	(v800_elf_howto_table): New.
	(v850_elf_object_p): Add support for RH850 ABI values.
	(v850_elf_final_write_processing): Likewise.
	(v850_elf_merge_private_bfd_data): Likewise.
	(v850_elf_print_private_bfd_data): Likewise.
	(v800_elf_reloc_map): New.
	(v800_elf_reloc_type_lookup): New.
	(v800_elf_reloc_name_lookup): New.
	(v800_elf_info_to_howto): New.
	(bfd_elf32_v850_rh850_vec): New.
	(bfd_arch_v850_rh850): New.
	* targets.c (_bfd_targets): Add bfd_elf32_v850_rh850_vec.
	* Makefile.in: Regenerate.
	* bfd-in2.h: Regenerate.
	* configure: Regenerate.

	* readelf.c (get_machine_flags): Add support for E_FLAG_RX_ABI.
	(guess_is_rela): Add EM_V800.
	(dump_relocations): Likewise.
	(get_machine_name): Update EM_V800.
	(get_machine_flags): Add support for RH850 ABI flags.
	(is_32bit_abs_reloc): Add support for RH850 ABI reloc.

	* config/tc-v850.c (v850_target_arch): New.
	(v850_target_format): New.
	(set_machine): Use v850_target_arch.
	(md_begin): Likewise.
	(md_show_usage): Document new switches.
	(md_parse_option): Add -mgcc-abi, -mrh850-abi, -m8byte-align and
	-m4byte-align.
	* config/tc-v850.c (TARGET_ARCH) Use v850_target_arch.
	(TARGET_FORMAT): Use v850_target_format.
	* doc/c-v850.texi: Document new options.

	* v850.h: Add RH850 ABI values.

	* Makefile.am: (ALL_EMULATION_SOURCES): Add ev850_rh850.c.
	* Makefile.in: Regenerate.
	* configure.tgt (v850*-*-*): Make v850_rh850 the default
	emulation. Add vanilla v850 as an extra emulation.
	* emulparams/v850_rh850.sh: New file.
	* scripttempl/v850_rh850.sc: New file.

	* configure.in: Add bfd_v850_rh850_arch.
	* configure: Regenerate.
	* disassemble.c (disassembler): Likewise.
@
text
@d267 1
a267 1
Moves the offset into the current section to the specified amount. 
d273 1
a273 1
called "name". 
d328 1
a328 1
the result into register 6. 
d372 1
a372 1
register 6.  
d379 1
a379 1
field of the given instruction.  For example: 
@


1.10
log
@	PR gas/12390
	* doc/all.texi: Add NS32K
	* doc/as.texinfo: Remove target specific details of which
	characters act as comment initiators and statement separators into
	individual target specific files.
	* doc/c-alpha.texi (Alpha-Chars): Document special behaviour of
	the hash character at the start of a line.
	* doc/c-arm.texi (ARM-Chars): Likewise.
	* doc/c-avr.texi (AVR-Chars): Likewise.
	* doc/c-d10v.texi (D10V-Chars): Likewise.
	* doc/c-d30v.texi (D30V-Chars):	Likewise.
	* doc/c-mmix.texi (MMIX-Chars): Likewise.
	* doc/c-s390.texi (s390 characters): Likewise.
	* doc/c-sh.texi (SH-Chars): Likewise.
	* doc/c-sh64.texi (SH64-Chars): Likewise.
	* doc/c-sparc.texi (SPARC-Chars): Likewise.
	* doc/c-tic6x.texi (TIC6X Syntax): Likewise.
	* doc/c-xtensa.texi (Xtensa Syntax): Likewise.
	* doc/c-z80.texi (Z80-Chars): Likewise.
	* doc/c-z8k.texi (Z8000-Chars): Likewise.
	* doc/c-pdp11.texi (PDP11-Syntax): Document line separator character.
	* doc/c-arc.texi (ARC-Chars): Fill in this subsection.
	* doc/c-bfin.texi (Blackfin Syntax): Document line comment and
	line separator characters.
	* doc/c-cr16.texi (CR16 Syntax): Likewise.
	* doc/c-i386.texi (i386-Chars): Likewise.
	* doc/c-i860.texi (i860-Chars):	Likewise.
	* doc/c-i960.texi (i960-Chars):	Likewise.
	* doc/c-ip2k.texi (IP2K-Chars):	Likewise.
	* doc/c-lm32.texi (LM32-Chars):	likewise.
	* doc/c-m32c.texi (M32C-Chars): Likewise.
	* doc/c-m68hc11.texi (M68HC11-syntax): Likewise.
	* doc/c-m68k.texi (M68K-Chars): Likewise.
	* doc/c-microblaze.texi (MicroBlaze-Chars): Likewise.
	* doc/c-msp430.texi (MSP430-Chars): Likewise.
	* doc/c-mt.texi (MT-Chars): Likewise.
	* doc/c-ns32k.texi (NS32K-Chars): Likewise.
	* doc/c-pj.texi (PJ-Chars): Likewise.
	* doc/c-ppc.texi (PowerPC-Chars): Likewise.
	* doc/c-rx.texi (RX-Chars): Likewise.
	* doc/c-score.texi (SCORE-Chars): Likewise.
	* doc/c-tic54x.texi (TIC54X-Chars): Likewise.
	* doc/c-v850.texi (V850-Chars): Likewise.
	* doc/c-vax.texi (VAX-Chars): Likewise.
	* doc/c-xc16x.texi (xc16x-Chars): Likewise.
@
text
@d1 1
a1 1
@@c Copyright 1997, 2002, 2003, 2006, 2011 Free Software Foundation, Inc.
d91 20
a112 1

@


1.9
log
@Add support for v850E2 and v850E2V3
@
text
@d1 1
a1 1
@@c Copyright 1997, 2002, 2003, 2006 Free Software Foundation, Inc.
d106 15
a120 1
@@samp{#} is the line comment character.
@


1.8
log
@update copyright dates
@
text
@d71 12
d260 12
@


1.7
log
@Fix spelling typos
@
text
@d1 1
a1 1
@@c Copyright 1997, 2002, 2003 Free Software Foundation, Inc.
@


1.6
log
@update copyright dates
@
text
@d270 1
a270 1
bits and then mutliplies it by the lower 16 bits in register 5, putting
@


1.5
log
@Add binutils support for v850e1 processor
@
text
@d1 1
a1 1
@@c Copyright 1997, 2003 Free Software Foundation, Inc.
@


1.4
log
@	* doc/c-alpha.texi: Fix typos.
	* doc/c-arm.texi: Likewise.
	* doc/c-d10v.texi: Likewise.
	* doc/c-i370.texi: Likewise.
	* doc/c-i960.texi: Likewise.
	* doc/c-ia64.texi: Likewise.
	* doc/c-mmix.texi: Likewise.
	* doc/c-ns32k.texi: Likewise.
	* doc/c-pdp11.texi: Likewise.
	* doc/c-pj.texi: Likewise.
	* doc/c-sh64.texi: Likewise.
	* doc/c-sparc.texi: Likewise.
	* doc/c-tic54x.texi: Likewise.
	* doc/c-v850.texi: Likewise.
	* doc/c-vax.texi: Likewise.
	* doc/internals.texi: Likewise.
@
text
@d1 1
a1 1
@@c Copyright 1997 Free Software Foundation, Inc.
d54 6
d240 6
@


1.3
log
@Add linker relaxation to v850 toolchain
@
text
@d284 1
a284 1
extention on its immediate operand.  So for example if the address of
@


1.2
log
@Fix copyright notices
@
text
@d65 8
d365 14
a384 1

@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
@@c Copyright (C) 1997, 1998 Free Software Foundation, Inc.
@


1.1.1.1
log
@19990502 sourceware import
@
text
@@


1.1.1.1.4.1
log
@Update copyright notices.
@
text
@d1 1
a1 1
@@c Copyright 1997 Free Software Foundation, Inc.
@


