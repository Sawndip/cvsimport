head	1.4;
access;
symbols
	binutils-csl-sourcerygxx-3_4_4-32:1.3
	binutils-csl-sourcerygxx-3_4_4-25:1.3
	binutils-csl-wrs-linux-3_4_4-24:1.3
	binutils-csl-wrs-linux-3_4_4-23:1.3
	binutils-csl-wrs-linux-3_4_4-22:1.3
	binutils-csl-wrs-linux-3_4_4-21:1.3
	binutils-csl-wrs-linux-3_4_4-20:1.3
	binutils-csl-gxxpro-3_4-branch:1.3.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.3
	binutils-2_16_1:1.3
	binutils-csl-arm-2005q1b:1.3
	binutils-2_16:1.3
	binutils-csl-arm-2005q1a:1.3
	binutils-csl-arm-2005q1-branch:1.3.0.4
	binutils-csl-arm-2005q1-branchpoint:1.3
	binutils-2_16-branch:1.3.0.2
	binutils-2_16-branchpoint:1.3
	csl-arm-2004-q3d:1.2
	csl-arm-2004-q3:1.2
	binutils-2_15:1.2
	binutils-2_15-branchpoint:1.2
	csl-arm-2004-q1a:1.2
	csl-arm-2004-q1:1.2
	binutils-2_15-branch:1.2.0.8
	cagney_bfdfile-20040213-branch:1.2.0.6
	cagney_bfdfile-20040213-branchpoint:1.2
	cagney_bigcore-20040122-branch:1.2.0.4
	cagney_bigcore-20040122-branchpoint:1.2
	csl-arm-2003-q4:1.2
	binutils-2_14:1.2
	binutils-2_14-branch:1.2.0.2
	binutils-2_14-branchpoint:1.2
	binutils-2_13_2_1:1.1.1.1
	binutils-2_13_2:1.1.1.1
	binutils-2_13_1:1.1.1.1
	binutils-2_13:1.1.1.1
	binutils-2_13-branchpoint:1.1.1.1
	binutils-2_13-branch:1.1.1.1.0.8
	binutils-2_12_1:1.1.1.1
	binutils-2_12:1.1.1.1
	binutils-2_12-branch:1.1.1.1.0.6
	binutils-2_12-branchpoint:1.1.1.1
	cygnus_cvs_20020108_pre:1.1.1.1
	binutils-2_11_2:1.1.1.1
	binutils-2_11_1:1.1.1.1
	binutils-2_11:1.1.1.1
	x86_64versiong3:1.1.1.1
	binutils-2_11-branch:1.1.1.1.0.4
	binutils-2_10_1:1.1.1.1
	binutils-2_10:1.1.1.1
	binutils-2_10-branch:1.1.1.1.0.2
	binutils-2_10-branchpoint:1.1.1.1
	binutils_latest_snapshot:1.3
	repo-unification-2000-02-06:1.1.1.1
	binu_ss_19990721:1.1.1.1
	binu_ss_19990602:1.1.1.1
	binu_ss_19990502:1.1.1.1
	cygnus:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2005.08.11.01.25.29;	author amodra;	state dead;
branches;
next	1.3;

1.3
date	2005.03.03.01.29.53;	author amodra;	state Exp;
branches;
next	1.2;

1.2
date	2003.04.15.08.51.53;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	99.05.03.07.28.45;	author rth;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.05.03.07.28.45;	author rth;	state Exp;
branches;
next	;


desc
@@


1.4
log
@	* README-vms: Delete.
	* config-gas.com: Delete.
	* makefile.vms: Delete.
	* vmsconf.sh: Delete.
	* config/atof-tahoe.c: Delete.
	* config/m88k-opcode.h: Delete.
	* config/obj-bout.c: Delete.
	* config/obj-bout.h: Delete.
	* config/obj-hp300.c: Delete.
	* config/obj-hp300.h: Delete.
	* config/tc-a29k.c: Delete.
	* config/tc-a29k.h: Delete.
	* config/tc-h8500.c: Delete.
	* config/tc-h8500.h: Delete.
	* config/tc-m88k.c: Delete.
	* config/tc-m88k.h: Delete.
	* config/tc-tahoe.c: Delete.
	* config/tc-tahoe.h: Delete.
	* config/tc-tic80.c: Delete.
	* config/tc-tic80.h: Delete.
	* config/tc-w65.c: Delete.
	* config/tc-w65.h: Delete.
	* config/te-aux.h: Delete.
	* config/te-delt88.h: Delete.
	* config/te-delta.h: Delete.
	* config/te-dpx2.h: Delete.
	* config/te-hp300.h: Delete.
	* config/te-ic960.h: Delete.
	* config/vms-a-conf.h: Delete.
	* doc/c-a29k.texi: Delete.
	* doc/c-h8500.texi: Delete.
	* doc/c-m88k.texi: Delete.
	* README: Remove obsolete examples, and list of supported targets.
	* Makefile.am: Remove a29k, h8500, m88k, tahoe, tic80, w65,
	bout and hp300 support.
	(DEP_FLAGS): Don't define BFD_ASSEMBLER.
	* configure.in: Remove --enable-bfd-assembler, need_bfd,
	primary_bfd_gas.
	* configure.tgt: Remove a29k, h8300-coff, h8500-*, i960 non-elf,
	m68k non bfd, m88k, or32-coff, tic80-*, vax non-bfd, w65k-*, *-nindy.
	* as.c: Remove all non-BFD_ASSEMBLER code, support for above targets.
	* as.h: Likewise.
	* dw2gencfi.c: Likewise.
	* dwarf2dbg.c: Likewise.
	* ehopt.c: Likewise.
	* input-file.c: Likewise.
	* listing.c: Likewise.
	* literal.c: Likewise.
	* messages.c: Likewise.
	* obj.h: Likewise.
	* output-file.c: Likewise.
	* read.c: Likewise.
	* stabs.c: Likewise.
	* struc-symbol.h: Likewise.
	* subsegs.c: Likewise.
	* subsegs.h: Likewise.
	* symbols.c: Likewise.
	* symbols.h: Likewise.
	* tc.h: Likewise.
	* write.c: Likewise.
	* write.h: Likewise.
	* config/aout_gnu.h: Likewise.
	* config/obj-aout.c: Likewise.
	* config/obj-aout.h: Likewise.
	* config/obj-coff.c: Likewise.
	* config/obj-coff.h: Likewise.
	* config/obj-evax.h: Likewise.
	* config/obj-ieee.h: Likewise.
	* config/tc-arm.c: Likewise.
	* config/tc-arm.h: Likewise.
	* config/tc-avr.c: Likewise.
	* config/tc-avr.h: Likewise.
	* config/tc-crx.h: Likewise.
	* config/tc-d10v.h: Likewise.
	* config/tc-d30v.h: Likewise.
	* config/tc-dlx.h: Likewise.
	* config/tc-fr30.h: Likewise.
	* config/tc-frv.h: Likewise.
	* config/tc-h8300.c: Likewise.
	* config/tc-h8300.h: Likewise.
	* config/tc-hppa.h: Likewise.
	* config/tc-i370.h: Likewise.
	* config/tc-i386.c: Likewise.
	* config/tc-i386.h: Likewise.
	* config/tc-i860.h: Likewise.
	* config/tc-i960.c: Likewise.
	* config/tc-i960.h: Likewise.
	* config/tc-ip2k.h: Likewise.
	* config/tc-iq2000.h: Likewise.
	* config/tc-m32c.h: Likewise.
	* config/tc-m32r.h: Likewise.
	* config/tc-m68hc11.h: Likewise.
	* config/tc-m68k.c: Likewise.
	* config/tc-m68k.h: Likewise.
	* config/tc-maxq.c: Likewise.
	* config/tc-maxq.h: Likewise.
	* config/tc-mcore.c: Likewise.
	* config/tc-mcore.h: Likewise.
	* config/tc-mn10200.h: Likewise.
	* config/tc-mn10300.c: Likewise.
	* config/tc-mn10300.h: Likewise.
	* config/tc-ms1.h: Likewise.
	* config/tc-msp430.c: Likewise.
	* config/tc-msp430.h: Likewise.
	* config/tc-ns32k.c: Likewise.
	* config/tc-ns32k.h: Likewise.
	* config/tc-openrisc.h: Likewise.
	* config/tc-or32.c: Likewise.
	* config/tc-or32.h: Likewise.
	* config/tc-ppc.c: Likewise.
	* config/tc-ppc.h: Likewise.
	* config/tc-s390.h: Likewise.
	* config/tc-sh.c: Likewise.
	* config/tc-sh.h: Likewise.
	* config/tc-sparc.c: Likewise.
	* config/tc-tic30.c: Likewise.
	* config/tc-tic30.h: Likewise.
	* config/tc-tic4x.c: Likewise.
	* config/tc-tic4x.h: Likewise.
	* config/tc-tic54x.c: Likewise.
	* config/tc-tic54x.h: Likewise.
	* config/tc-v850.h: Likewise.
	* config/tc-vax.c: Likewise.
	* config/tc-vax.h: Likewise.
	* config/tc-xstormy16.h: Likewise.
	* config/tc-xtensa.h: Likewise.
	* config/tc-z8k.c: Likewise.
	* config/tc-z8k.h: Likewise.
	* config/vms-a-conf.h
	* doc/Makefile.am: Likewise.
	* doc/all.texi: Likewise.
	* doc/as.texinfo: Likewise.
	* doc/Makefile.in: Regenerate.
	* Makefile.in: Regenerate.
	* configure: Regenerate.
	* config.in: Regenerate.
	* po/POTFILES.in: Regenerate.
@
text
@@@c Copyright (C) 1991, 1992, 1993, 1994, 1995, 2003
@@c Free Software Foundation, Inc.
@@c This is part of the GAS manual.
@@c For copying conditions, see the file as.texinfo.
@@page
@@node H8/500-Dependent
@@chapter H8/500 Dependent Features

@@cindex H8/500 support
@@menu
* H8/500 Options::              Options
* H8/500 Syntax::               Syntax
* H8/500 Floating Point::       Floating Point
* H8/500 Directives::           H8/500 Machine Directives
* H8/500 Opcodes::              Opcodes
@@end menu

@@node H8/500 Options
@@section Options

@@cindex H8/500 options (none)
@@cindex options, H8/500 (none)
@@code{@@value{AS}} has no additional command-line options for the
Renesas (formerly Hitachi) H8/500 family.

@@node H8/500 Syntax
@@section Syntax

@@menu
* H8/500-Chars::                Special Characters
* H8/500-Regs::                 Register Names
* H8/500-Addressing::           Addressing Modes
@@end menu

@@node H8/500-Chars
@@subsection Special Characters

@@cindex line comment character, H8/500
@@cindex H8/500 line comment character
@@samp{!} is the line comment character.

@@cindex line separator, H8/500
@@cindex statement separator, H8/500
@@cindex H8/500 line separator
@@samp{;} can be used instead of a newline to separate statements.

@@cindex symbol names, @@samp{$} in
@@cindex @@code{$} in symbol names
Since @@samp{$} has no special meaning, you may use it in symbol names.

@@node H8/500-Regs
@@subsection Register Names

@@cindex H8/500 registers
@@cindex registers, H8/500
You can use the predefined symbols @@samp{r0}, @@samp{r1}, @@samp{r2},
@@samp{r3}, @@samp{r4}, @@samp{r5}, @@samp{r6}, and @@samp{r7} to refer to
the H8/500 registers.

The H8/500 also has these control registers:

@@table @@code
@@item cp
code pointer

@@item dp
data pointer

@@item bp
base pointer

@@item tp
stack top pointer

@@item ep
extra pointer

@@item sr
status register

@@item ccr
condition code register
@@end table

All registers are 16 bits long.  To represent 32 bit numbers, use two
adjacent registers; for distant memory addresses, use one of the segment
pointers (@@code{cp} for the program counter; @@code{dp} for
@@code{r0}--@@code{r3}; @@code{ep} for @@code{r4} and @@code{r5}; and
@@code{tp} for @@code{r6} and @@code{r7}.

@@node H8/500-Addressing
@@subsection Addressing Modes

@@cindex addressing modes, H8/500
@@cindex H8/500 addressing modes
@@value{AS} understands the following addressing modes for the H8/500:
@@table @@code
@@item R@@var{n}
Register direct

@@item @@@@R@@var{n}
Register indirect

@@item @@@@(d:8, R@@var{n})
Register indirect with 8 bit signed displacement

@@item @@@@(d:16, R@@var{n})
Register indirect with 16 bit signed displacement

@@item @@@@-R@@var{n}
Register indirect with pre-decrement

@@item @@@@R@@var{n}+
Register indirect with post-increment

@@item @@@@@@var{aa}:8
8 bit absolute address

@@item @@@@@@var{aa}:16
16 bit absolute address

@@item #@@var{xx}:8
8 bit immediate

@@item #@@var{xx}:16
16 bit immediate
@@end table

@@node H8/500 Floating Point
@@section Floating Point

@@cindex floating point, H8/500 (@@sc{ieee})
@@cindex H8/500 floating point (@@sc{ieee})
The H8/500 family has no hardware floating point, but the @@code{.float}
directive generates @@sc{ieee} floating-point numbers for compatibility
with other development tools.

@@node H8/500 Directives
@@section H8/500 Machine Directives

@@cindex H8/500 machine directives (none)
@@cindex machine directives, H8/500 (none)
@@cindex @@code{word} directive, H8/500
@@cindex @@code{int} directive, H8/500
@@code{@@value{AS}} has no machine-dependent directives for the H8/500.
However, on this platform the @@samp{.int} and @@samp{.word} directives
generate 16-bit numbers.

@@node H8/500 Opcodes
@@section Opcodes

@@cindex H8/500 opcode summary
@@cindex opcode summary, H8/500
@@cindex mnemonics, H8/500
@@cindex instruction summary, H8/500
For detailed information on the H8/500 machine instruction set, see
@@cite{H8/500 Series Programming Manual} (Renesas M21T001).

@@code{@@value{AS}} implements all the standard H8/500 opcodes.  No additional
pseudo-instructions are needed on this family.

@@ifset SMALL
@@c this table, due to the multi-col faking and hardcoded order, looks silly
@@c except in smallbook.  See comments below "@@set SMALL" near top of this file.

The following table summarizes H8/500 opcodes and their operands:

@@c Use @@group if it ever works, instead of @@page
@@page
@@smallexample
@@i{Legend:}
abs8      @@r{8-bit absolute address}
abs16     @@r{16-bit absolute address}
abs24     @@r{24-bit absolute address}
crb       @@r{@@code{ccr}, @@code{br}, @@code{ep}, @@code{dp}, @@code{tp}, @@code{dp}}
disp8     @@r{8-bit displacement}
ea        @@r{@@code{rn}, @@code{@@@@rn}, @@code{@@@@(d:8, rn)}, @@code{@@@@(d:16, rn)},}
          @@r{@@code{@@@@-rn}, @@code{@@@@rn+}, @@code{@@@@aa:8}, @@code{@@@@aa:16},}
          @@r{@@code{#xx:8}, @@code{#xx:16}}
ea_mem    @@r{@@code{@@@@rn}, @@code{@@@@(d:8, rn)}, @@code{@@@@(d:16, rn)},}
          @@r{@@code{@@@@-rn}, @@code{@@@@rn+}, @@code{@@@@aa:8}, @@code{@@@@aa:16}}
ea_noimm  @@r{@@code{rn}, @@code{@@@@rn}, @@code{@@@@(d:8, rn)}, @@code{@@@@(d:16, rn)},}
          @@r{@@code{@@@@-rn}, @@code{@@@@rn+}, @@code{@@@@aa:8}, @@code{@@@@aa:16}}
fp        r6
imm4      @@r{4-bit immediate data}
imm8      @@r{8-bit immediate data}
imm16     @@r{16-bit immediate data}
pcrel8    @@r{8-bit offset from program counter}
pcrel16   @@r{16-bit offset from program counter}
qim       @@r{@@code{-2}, @@code{-1}, @@code{1}, @@code{2}}
rd        @@r{any register}
rs        @@r{a register distinct from rd}
rlist     @@r{comma-separated list of registers in parentheses;}
          @@r{register ranges @@code{rd-rs} are allowed}
sp        @@r{stack pointer (@@code{r7})}
sr        @@r{status register}
sz        @@r{size; @@samp{.b} or @@samp{.w}.  If omitted, default @@samp{.w}}

ldc[.b] ea,crb                 bcc[.w] pcrel16
ldc[.w] ea,sr                  bcc[.b] pcrel8 
add[:q] sz qim,ea_noimm        bhs[.w] pcrel16
add[:g] sz ea,rd               bhs[.b] pcrel8 
adds sz ea,rd                  bcs[.w] pcrel16
addx sz ea,rd                  bcs[.b] pcrel8 
and sz ea,rd                   blo[.w] pcrel16
andc[.b] imm8,crb              blo[.b] pcrel8 
andc[.w] imm16,sr              bne[.w] pcrel16
bpt                            bne[.b] pcrel8 
bra[.w] pcrel16                beq[.w] pcrel16
bra[.b] pcrel8                 beq[.b] pcrel8 
bt[.w] pcrel16                 bvc[.w] pcrel16
bt[.b] pcrel8                  bvc[.b] pcrel8 
brn[.w] pcrel16                bvs[.w] pcrel16
brn[.b] pcrel8                 bvs[.b] pcrel8 
bf[.w] pcrel16                 bpl[.w] pcrel16
bf[.b] pcrel8                  bpl[.b] pcrel8 
bhi[.w] pcrel16                bmi[.w] pcrel16
bhi[.b] pcrel8                 bmi[.b] pcrel8 
bls[.w] pcrel16                bge[.w] pcrel16
bls[.b] pcrel8                 bge[.b] pcrel8 
@@page
blt[.w] pcrel16                mov[:g][.b] imm8,ea_mem       
blt[.b] pcrel8                 mov[:g][.w] imm16,ea_mem      
bgt[.w] pcrel16                movfpe[.b] ea,rd              
bgt[.b] pcrel8                 movtpe[.b] rs,ea_noimm        
ble[.w] pcrel16                mulxu sz ea,rd                
ble[.b] pcrel8                 neg sz ea                     
bclr sz imm4,ea_noimm          nop                           
bclr sz rs,ea_noimm            not sz ea                     
bnot sz imm4,ea_noimm          or sz ea,rd                   
bnot sz rs,ea_noimm            orc[.b] imm8,crb              
bset sz imm4,ea_noimm          orc[.w] imm16,sr              
bset sz rs,ea_noimm            pjmp abs24                    
bsr[.b] pcrel8                 pjmp @@@@rd                     
bsr[.w] pcrel16                pjsr abs24                    
btst sz imm4,ea_noimm          pjsr @@@@rd                     
btst sz rs,ea_noimm            prtd imm8                     
clr sz ea                      prtd imm16                    
cmp[:e][.b] imm8,rd            prts                          
cmp[:i][.w] imm16,rd           rotl sz ea                    
cmp[:g].b imm8,ea_noimm        rotr sz ea                    
cmp[:g][.w] imm16,ea_noimm     rotxl sz ea                   
Cmp[:g] sz ea,rd               rotxr sz ea                   
dadd rs,rd                     rtd imm8                     
divxu sz ea,rd                 rtd imm16                    
dsub rs,rd                     rts                          
exts[.b] rd                    scb/f rs,pcrel8               
extu[.b] rd                    scb/ne rs,pcrel8             
jmp @@@@rd                        scb/eq rs,pcrel8             
jmp @@@@(imm8,rd)                 shal sz ea                   
jmp @@@@(imm16,rd)                shar sz ea                    
jmp abs16                      shll sz ea            
jsr @@@@rd                        shlr sz ea            
jsr @@@@(imm8,rd)                 sleep                 
jsr @@@@(imm16,rd)                stc[.b] crb,ea_noimm  
jsr abs16                      stc[.w] sr,ea_noimm   
ldm @@@@sp+,(rlist)               stm (rlist),@@@@-sp     
link fp,imm8                   sub sz ea,rd          
link fp,imm16                  subs sz ea,rd         
mov[:e][.b] imm8,rd            subx sz ea,rd         
mov[:i][.w] imm16,rd           swap[.b] rd           
mov[:l][.w] abs8,rd            tas[.b] ea     
mov[:l].b abs8,rd              trapa imm4     
mov[:s][.w] rs,abs8            trap/vs        
mov[:s].b rs,abs8              tst sz ea      
mov[:f][.w] @@@@(disp8,fp),rd     unlk fp        
mov[:f][.w] rs,@@@@(disp8,fp)     xch[.w] rs,rd 
mov[:f].b @@@@(disp8,fp),rd       xor sz ea,rd   
mov[:f].b rs,@@@@(disp8,fp)       xorc.b imm8,crb
mov[:g] sz rs,ea_mem           xorc.w imm16,sr
mov[:g] sz ea,rd              
@@end smallexample
@@end ifset
@


1.3
log
@update copyright dates
@
text
@@


1.2
log
@Replace occurrances of 'Hitachi' with 'Renesas'.
@
text
@d1 2
a2 1
@@c Copyright (C) 1991, 1992, 1993, 1994, 1995 Free Software Foundation, Inc.
@


1.1
log
@Initial revision
@
text
@d22 2
a23 2
@@code{@@value{AS}} has no additional command-line options for the Hitachi
H8/500 family.
d156 1
a156 1
@@cite{H8/500 Series Programming Manual} (Hitachi M21T001).
@


1.1.1.1
log
@19990502 sourceware import
@
text
@@

