head	1.11;
access;
symbols
	binutils-2_24-branch:1.11.0.10
	binutils-2_24-branchpoint:1.11
	binutils-2_21_1:1.11
	binutils-2_23_2:1.11
	binutils-2_23_1:1.11
	binutils-2_23:1.11
	binutils-2_23-branch:1.11.0.8
	binutils-2_23-branchpoint:1.11
	binutils-2_22_branch:1.11.0.6
	binutils-2_22:1.11
	binutils-2_22-branch:1.11.0.4
	binutils-2_22-branchpoint:1.11
	binutils-2_21:1.11
	binutils-2_21-branch:1.11.0.2
	binutils-2_21-branchpoint:1.11
	binutils-2_20_1:1.9
	binutils-2_20:1.9
	binutils-arc-20081103-branch:1.9.0.16
	binutils-arc-20081103-branchpoint:1.9
	binutils-2_20-branch:1.9.0.14
	binutils-2_20-branchpoint:1.9
	dje-cgen-play1-branch:1.9.0.12
	dje-cgen-play1-branchpoint:1.9
	arc-20081103-branch:1.9.0.10
	arc-20081103-branchpoint:1.9
	binutils-2_19_1:1.9
	binutils-2_19:1.9
	binutils-2_19-branch:1.9.0.8
	binutils-2_19-branchpoint:1.9
	binutils-2_18:1.9
	binutils-2_18-branch:1.9.0.6
	binutils-2_18-branchpoint:1.9
	binutils-csl-coldfire-4_1-32:1.9
	binutils-csl-sourcerygxx-4_1-32:1.9
	binutils-csl-innovasic-fido-3_4_4-33:1.9
	binutils-csl-sourcerygxx-3_4_4-32:1.8
	binutils-csl-coldfire-4_1-30:1.9
	binutils-csl-sourcerygxx-4_1-30:1.9
	binutils-csl-coldfire-4_1-28:1.9
	binutils-csl-sourcerygxx-4_1-29:1.9
	binutils-csl-sourcerygxx-4_1-28:1.9
	binutils-csl-arm-2006q3-27:1.9
	binutils-csl-sourcerygxx-4_1-27:1.9
	binutils-csl-arm-2006q3-26:1.9
	binutils-csl-sourcerygxx-4_1-26:1.9
	binutils-csl-sourcerygxx-4_1-25:1.9
	binutils-csl-sourcerygxx-4_1-24:1.9
	binutils-csl-sourcerygxx-4_1-23:1.9
	binutils-csl-sourcerygxx-4_1-21:1.9
	binutils-csl-arm-2006q3-21:1.9
	binutils-csl-sourcerygxx-4_1-22:1.9
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.9
	binutils-csl-sourcerygxx-4_1-20:1.9
	binutils-csl-arm-2006q3-19:1.9
	binutils-csl-sourcerygxx-4_1-19:1.9
	binutils-csl-sourcerygxx-4_1-18:1.9
	binutils-csl-renesas-4_1-9:1.9
	binutils-csl-sourcerygxx-3_4_4-25:1.8
	binutils-csl-renesas-4_1-8:1.9
	binutils-csl-renesas-4_1-7:1.9
	binutils-csl-renesas-4_1-6:1.9
	binutils-csl-sourcerygxx-4_1-17:1.9
	binutils-csl-sourcerygxx-4_1-14:1.9
	binutils-csl-sourcerygxx-4_1-15:1.9
	binutils-csl-sourcerygxx-4_1-13:1.9
	binutils-2_17:1.9
	binutils-csl-sourcerygxx-4_1-12:1.9
	binutils-csl-sourcerygxx-3_4_4-21:1.9
	binutils-csl-wrs-linux-3_4_4-24:1.8
	binutils-csl-wrs-linux-3_4_4-23:1.8
	binutils-csl-sourcerygxx-4_1-9:1.9
	binutils-csl-sourcerygxx-4_1-8:1.9
	binutils-csl-sourcerygxx-4_1-7:1.9
	binutils-csl-arm-2006q1-6:1.9
	binutils-csl-sourcerygxx-4_1-6:1.9
	binutils-csl-wrs-linux-3_4_4-22:1.8
	binutils-csl-coldfire-4_1-11:1.9
	binutils-csl-sourcerygxx-3_4_4-19:1.9
	binutils-csl-coldfire-4_1-10:1.9
	binutils-csl-sourcerygxx-4_1-5:1.9
	binutils-csl-sourcerygxx-4_1-4:1.9
	binutils-csl-wrs-linux-3_4_4-21:1.8
	binutils-csl-morpho-4_1-4:1.9
	binutils-csl-sourcerygxx-3_4_4-17:1.9
	binutils-csl-wrs-linux-3_4_4-20:1.8
	binutils-2_17-branch:1.9.0.4
	binutils-2_17-branchpoint:1.9
	binutils-csl-2_17-branch:1.9.0.2
	binutils-csl-2_17-branchpoint:1.9
	binutils-csl-gxxpro-3_4-branch:1.8.0.6
	binutils-csl-gxxpro-3_4-branchpoint:1.8
	binutils-2_16_1:1.8
	binutils-csl-arm-2005q1b:1.8
	binutils-2_16:1.8
	binutils-csl-arm-2005q1a:1.8
	binutils-csl-arm-2005q1-branch:1.8.0.4
	binutils-csl-arm-2005q1-branchpoint:1.8
	binutils-2_16-branch:1.8.0.2
	binutils-2_16-branchpoint:1.8
	csl-arm-2004-q3d:1.3
	csl-arm-2004-q3:1.3
	binutils-2_15:1.3
	binutils-2_15-branchpoint:1.3
	csl-arm-2004-q1a:1.3
	csl-arm-2004-q1:1.3
	binutils-2_15-branch:1.3.0.6
	cagney_bfdfile-20040213-branch:1.3.0.4
	cagney_bfdfile-20040213-branchpoint:1.3
	cagney_bigcore-20040122-branch:1.3.0.2
	cagney_bigcore-20040122-branchpoint:1.3
	csl-arm-2003-q4:1.3
	binutils-2_14:1.2
	binutils-2_14-branch:1.2.0.2
	binutils-2_14-branchpoint:1.2
	binutils-2_13_2_1:1.1
	binutils-2_13_2:1.1
	binutils-2_13_1:1.1
	binutils-2_13:1.1
	binutils-2_13-branchpoint:1.1
	binutils-2_13-branch:1.1.0.2
	binutils_latest_snapshot:1.11;
locks; strict;
comment	@# @;


1.11
date	2010.06.21.10.49.41;	author schwab;	state Exp;
branches;
next	1.10;

1.10
date	2010.02.12.14.34.45;	author gingold;	state Exp;
branches;
next	1.9;

1.9
date	2005.03.28.22.34.17;	author hjl;	state Exp;
branches;
next	1.8;

1.8
date	2005.03.03.01.29.53;	author amodra;	state Exp;
branches;
next	1.7;

1.7
date	2005.02.17.23.22.03;	author hjl;	state Exp;
branches;
next	1.6;

1.6
date	2005.02.14.08.02.48;	author jbeulich;	state Exp;
branches;
next	1.5;

1.5
date	2005.02.11.21.01.18;	author hjl;	state Exp;
branches;
next	1.4;

1.4
date	2005.02.11.06.29.08;	author hjl;	state Exp;
branches;
next	1.3;

1.3
date	2003.10.26.18.12.03;	author kazu;	state Exp;
branches;
next	1.2;

1.2
date	2002.12.19.01.11.31;	author kazu;	state Exp;
branches;
next	1.1;

1.1
date	2002.02.25.10.34.25;	author nickc;	state Exp;
branches;
next	;


desc
@@


1.11
log
@* doc/as.texinfo (Overview): Use @@itemx for grouped @@table
items.
* doc/c-alpha.texi (Alpha Options): Likewise.
* doc/c-arm.texi (ARM Directives): Likewise.
* doc/c-bfin.texi (Blackfin Options): Likewise.
* doc/c-d10v.texi (D10V-Opts): Likewise.
* doc/c-i386.texi (i386-Options): Likewise.
* doc/c-ia64.texi (IA-64 Options): Likewise.
* doc/c-m68k.texi (M68K-Opts): Likewise.
* doc/c-tic54x.texi (TIC54X-Directives): Likewise.
* doc/internals.texi (Symbols): Likewise.
@
text
@@@c Copyright 2002, 2003, 2005
@@c Free Software Foundation, Inc.
@@c   Contributed by David Mosberger-Tang <davidm@@hpl.hp.com>
@@c This is part of the GAS manual.
@@c For copying conditions, see the file as.texinfo.

@@ifset GENERIC
@@page
@@node IA-64-Dependent
@@chapter IA-64 Dependent Features
@@end ifset

@@ifclear GENERIC
@@node Machine Dependencies
@@chapter IA-64 Dependent Features
@@end ifclear

@@cindex IA-64 support
@@menu
* IA-64 Options::              Options
* IA-64 Syntax::               Syntax
@@c * IA-64 Floating Point::       Floating Point		// to be written
@@c * IA-64 Directives::           IA-64 Machine Directives	// to be written
* IA-64 Opcodes::              Opcodes
@@end menu

@@node IA-64 Options
@@section Options
@@cindex IA-64 options
@@cindex options for IA-64

@@table @@option
@@cindex @@code{-mconstant-gp} command line option, IA-64

@@item -mconstant-gp
This option instructs the assembler to mark the resulting object file
as using the ``constant GP'' model.  With this model, it is assumed
that the entire program uses a single global pointer (GP) value.  Note
that this option does not in any fashion affect the machine code
emitted by the assembler.  All it does is turn on the EF_IA_64_CONS_GP
flag in the ELF file header.

@@item -mauto-pic
This option instructs the assembler to mark the resulting object file
as using the ``constant GP without function descriptor'' data model.
This model is like the ``constant GP'' model, except that it
additionally does away with function descriptors.  What this means is
that the address of a function refers directly to the function's code
entry-point.  Normally, such an address would refer to a function
descriptor, which contains both the code entry-point and the GP-value
needed by the function.  Note that this option does not in any fashion
affect the machine code emitted by the assembler.  All it does is
turn on the EF_IA_64_NOFUNCDESC_CONS_GP flag in the ELF file header.

@@item -milp32
@@itemx -milp64
@@itemx -mlp64
@@itemx -mp64
These options select the data model.  The assembler defaults to @@code{-mlp64}
(LP64 data model).

@@item -mle
@@itemx -mbe
These options select the byte order.  The @@code{-mle} option selects little-endian
byte order (default) and @@code{-mbe} selects big-endian byte order.  Note that
IA-64 machine code always uses little-endian byte order.

@@item -mtune=itanium1
@@itemx -mtune=itanium2
Tune for a particular IA-64 CPU, @@var{itanium1} or @@var{itanium2}. The
default is @@var{itanium2}.

@@item -munwind-check=warning
@@itemx -munwind-check=error
These options control what the assembler will do when performing
consistency checks on unwind directives.  @@code{-munwind-check=warning}
will make the assembler issue a warning when an unwind directive check
fails.  This is the default.  @@code{-munwind-check=error} will make the
assembler issue an error when an unwind directive check fails.

@@item -mhint.b=ok
@@itemx -mhint.b=warning
@@itemx -mhint.b=error
These options control what the assembler will do when the @@samp{hint.b}
instruction is used.  @@code{-mhint.b=ok} will make the assembler accept
@@samp{hint.b}.  @@code{-mint.b=warning} will make the assembler issue a
warning when @@samp{hint.b} is used.  @@code{-mhint.b=error} will make
the assembler treat @@samp{hint.b} as an error, which is the default.

@@item -x
@@itemx -xexplicit
These options turn on dependency violation checking.

@@item -xauto
This option instructs the assembler to automatically insert stop bits where necessary
to remove dependency violations.  This is the default mode.

@@item -xnone
This option turns off dependency violation checking.

@@item -xdebug
This turns on debug output intended to help tracking down bugs in the dependency
violation checker.

@@item -xdebugn
This is a shortcut for -xnone -xdebug.

@@item -xdebugx
This is a shortcut for -xexplicit -xdebug.

@@end table

@@cindex IA-64 Syntax
@@node IA-64 Syntax
@@section Syntax
The assembler syntax closely follows the IA-64 Assembly Language
Reference Guide.

@@menu
* IA-64-Chars::                Special Characters
* IA-64-Regs::                 Register Names
* IA-64-Bits::                 Bit Names
* IA-64-Relocs::               Relocations
@@end menu

@@node IA-64-Chars
@@subsection Special Characters

@@cindex line comment character, IA-64
@@cindex IA-64 line comment character
@@samp{//} is the line comment token.

@@cindex line separator, IA-64
@@cindex statement separator, IA-64
@@cindex IA-64 line separator
@@samp{;} can be used instead of a newline to separate statements.

@@node IA-64-Regs
@@subsection Register Names
@@cindex IA-64 registers
@@cindex register names, IA-64

The 128 integer registers are referred to as @@samp{r@@var{n}}.
The 128 floating-point registers are referred to as @@samp{f@@var{n}}.
The 128 application registers are referred to as @@samp{ar@@var{n}}.
The 128 control registers are referred to as @@samp{cr@@var{n}}.
The 64 one-bit predicate registers are referred to as @@samp{p@@var{n}}.
The 8 branch registers are referred to as @@samp{b@@var{n}}.
In addition, the assembler defines a number of aliases:
@@samp{gp} (@@samp{r1}), @@samp{sp} (@@samp{r12}), @@samp{rp} (@@samp{b0}),
@@samp{ret0} (@@samp{r8}), @@samp{ret1} (@@samp{r9}), @@samp{ret2} (@@samp{r10}),
@@samp{ret3} (@@samp{r9}), @@samp{farg@@var{n}} (@@samp{f8+@@var{n}}), and
@@samp{fret@@var{n}} (@@samp{f8+@@var{n}}).

For convenience, the assembler also defines aliases for all named application
and control registers.  For example, @@samp{ar.bsp} refers to the register
backing store pointer (@@samp{ar17}).  Similarly, @@samp{cr.eoi} refers to
the end-of-interrupt register (@@samp{cr67}).

@@node IA-64-Bits
@@subsection IA-64 Processor-Status-Register (PSR) Bit Names
@@cindex IA-64 Processor-status-Register bit names
@@cindex PSR bits
@@cindex bit names, IA-64

The assembler defines bit masks for each of the bits in the IA-64
processor status register.  For example, @@samp{psr.ic} corresponds to
a value of 0x2000.  These masks are primarily intended for use with
the @@samp{ssm}/@@samp{sum} and @@samp{rsm}/@@samp{rum}
instructions, but they can be used anywhere else where an integer
constant is expected.

@@node IA-64-Relocs
@@subsection Relocations
@@cindex IA-64 relocations

In addition to the standard IA-64 relocations, the following relocations are
implemented by @@code{@@value{AS}}:

@@table @@code
@@item @@@@slotcount(@@var{V})
Convert the address offset @@var{V} into a slot count.  This pseudo
function is available only on VMS.  The expression @@var{V} must be
known at assembly time: it can't reference undefined symbols or symbols in
different sections.
@@end table

@@node IA-64 Opcodes
@@section Opcodes
For detailed information on the IA-64 machine instruction set, see the
@@c Attempt to work around a very overfull hbox.
@@iftex
IA-64 Assembly Language Reference Guide available at
@@smallfonts
@@example
http://developer.intel.com/design/itanium/arch_spec.htm
@@end example
@@textfonts
@@end iftex
@@ifnottex
@@uref{http://developer.intel.com/design/itanium/arch_spec.htm,IA-64 Architecture Handbook}.
@@end ifnottex
@


1.10
log
@gas/
2010-02-12  Tristan Gingold  <gingold@@adacore.com>
	    Douglas B Rupp  <rupp@@gnat.com>

	* config/tc-ia64.c (enum reloc_func): Add FUNC_SLOTCOUNT_RELOC.
	(DUMMY_RELOC_IA64_SLOTCOUNT): Added.
	(pseudo_func): Add an entry for slotcount.
	(md_begin): Initialize slotcount pseudo symbol.
	(ia64_parse_name): Handle @@slotcount parameter.
	(ia64_gen_real_reloc_type): Handle slotcount.
	(md_apply_fix): Ditto.
	* doc/c-ia64.texi (IA-64-Relocs): Document @@slotcount.

gas/testsuite/
2010-02-12  Tristan Gingold  <gingold@@adacore.com>

	* gas/ia64/slotcount.s, gas/ia64/slotcount.s: New test.
	* gas/ia64/ia64.exp: Add slotcount test (vms only).
@
text
@d56 3
a58 3
@@item -milp64
@@item -mlp64
@@item -mp64
d63 1
a63 1
@@item -mbe
d69 1
a69 1
@@item -mtune=itanium2
d74 1
a74 1
@@item -munwind-check=error
d82 2
a83 2
@@item -mhint.b=warning
@@item -mhint.b=error
d91 1
a91 1
@@item -xexplicit
@


1.9
log
@gas/

2005-03-28  David Mosberger  <davidm@@hpl.hp.com>
	    H.J. Lu  <hongjiu.lu@@intel.com>

	PR 803
	NEWS: Mention "-mtune=[itanium1|itanium2]".

	* config/tc-ia64.c (md): Add tune.
	(md_parse_option): Accepted "-mtune=[itanium1|itanium2]".
	(md_show_usage): Add "-mtune=[itanium1|itanium2]".
	(extra_goodness): Prefer M- and I-unit NOPs for itanium2. F and
	B unit NOPs are discouraged for McKinley-derived cores.
	(md_begin): Don't hardcode the "extra_goodness()" function in
	the comment...
	(ia64_init): Set md.tune to itanium2.

	* doc/as.texinfo: Add -mtune=[itanium1|itanium2]".
	* doc/c-ia64.texi: Likewise.

gas/testsuite/

2005-03-28  H.J. Lu  <hongjiu.lu@@intel.com>

	PR 803
	* gas/ia64/dv-imply.d: Pass -mtune=itanium1 to as.
	* gas/ia64/dv-mutex.d : Likewise.
	* gas/ia64/dv-safe.d: Likewise.
	* gas/ia64/dv-srlz.d.nop: Likewise.
	* gas/ia64/ldxmov-1.d: Likewise.
	* gas/ia64/opc-b.d: Likewise.
	* gas/ia64/opc-f.d: Likewise.
	* gas/ia64/opc-i.d: Likewise.
	* gas/ia64/opc-m.d: Likewise.
	* gas/ia64/operand-or.d: Likewise.
	* gas/ia64/pcrel.d: Likewise.
	* gas/ia64/pseudo.d: Likewise.
	* gas/ia64/tls.d: Likewise.

ld/testsuite/

2005-03-28  H.J. Lu  <hongjiu.lu@@intel.com>

	PR 803
	* ld-ia64/ia64.exp: Pass -mtune=itanium1 to as.
@
text
@d123 1
a123 1
@@c * IA-64-Relocs::               Relocations		// to be written
d173 15
@


1.8
log
@update copyright dates
@
text
@d68 5
@


1.7
log
@gas/

2005-02-17  H.J. Lu  <hongjiu.lu@@intel.com>

	* NEWS: Mention "-mhint.b=[ok|warning|error]".

	* config/tc-ia64.c (md): Add hint_b.
	(emit_one_bundle): Handle md.hint_b for "hint".
	(md_parse_option): Accepted "-mhint.b=[ok|warning|error]".
	(md_show_usage): Add "-mhint.b=[ok|warning|error]".
	(ia64_init): Set md.hint_b to error.
	(md_assemble): Handle md.hint_b for "hint.b".

	* doc/as.texinfo: Add "-mhint.b=[ok|warning|error]".
	* doc/c-ia64.texi: Likewise.

gas/testsuite/

2005-02-17  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/ia64/hint.b-err.l: New file.
	* gas/ia64/hint.b-err.s: Likewise.
	* gas/ia64/hint.b-warn.l: Likewise.
	* gas/ia64/hint.b-warn.s: Likewise.

	* gas/ia64/ia64.exp: Run hint.b-err and hint.b-warn.

	* gas/ia64/opc-b.d: Pass -mhint.b=ok to as.
@
text
@d1 1
a1 1
@@c Copyright 2002
@


1.6
log
@gas/
2005-02-13  Jan Beulich  <jbeulich@@novell.com>

	* config/tc-ia64.c (md_parse_option): Handle -xnone and -xdebugn.
	(md_show_usage): Add -xnone, -xdebugn, and -xdebugx. Relocate default
	indicator.
	(ia64_init): Set md.detect_dv.
	(ia64_start_line): New static variable warned. Warn only once when
	encountering explicit stops in automatic mode.
	* doc/c-ia64.texi: Describe -xnone, -xdebugn, and -xdebugx.
	* NEWS: Mention new default mode.

gas/testsuite/
2005-02-13  Jan Beulich  <jbeulich@@novell.com>

	* gas/ia64/label.l: Adjust line numbers.
	* gas/ia64/label.s: Add .explicit.
	* gas/ia64/nop_x.s: Likewise.
	* gas/ia64/opc-a.d: Add assembler option -xnone.
	* gas/ia64/opc-b.d: Likewise.
	* gas/ia64/opc-f.d: Likewise.
	* gas/ia64/opc-i.d: Likewise.
	* gas/ia64/opc-m.d: Likewise.
	* gas/ia64/opc-x.d: Likewise.
	* gas/ia64/pseudo.d: Likewise.
	* gas/ia64/regs.d: Likewise.
	* gas/ia64/tls.d: Likewise.
	* gas/ia64/unwind-err.l: Adjust line numbers.
	* gas/ia64/unwind-err.s: Remove explicit stops.

ld/testsuite/
2005-02-13  Jan Beulich  <jbeulich@@novell.com>

	* ld-elfvers/vers.exp (as_options): New. Set to -x for ia64.
	(build_binary): Pass as_options to ld_assemble.
	(test_ldfail): Likewise.
	(build_exec): Likewise.
	Pass as_options to run_ld_link_tests.
	* ld-ia64/tlsbin.s: Add .explicit.
	* ld-ia64/tlsbinpic.s: Likewise.
	* ld-ia64/tlspic1.s: Likewise.
@
text
@d76 9
@


1.5
log
@gas/

2005-02-11  H.J. Lu  <hongjiu.lu@@intel.com>

	* NEWS: Mention "-munwind-check=[warning|error]".

	* config/tc-ia64.c (md): Add unwind_check.
	(unwind_diagnostic): New.
	(in_procedure): Call unwind_diagnostic when a directive isn't
	in procedure.
	(in_prologue): Call unwind_diagnostic when a directive isn't in
	prologue.
	(in_body): Call unwind_diagnostic when a directive isn't in
	body region.
	(dot_endp): Set md.unwind_check to error before calling
	in_procedure and restore it after. When the name is missing or
	couldn't be found, use the one from the last .proc if
	md.unwind_check isn't error. Warn if md.unwind_check is
	warning.
	(md_parse_option): Handle "-munwind-check=[warning|error]".
	(md_show_usage): Add "-munwind-check=[warning|error]".
	(ia64_init): Set md.unwind_check to warning.

	* doc/as.texinfo: Add "-munwind-check=[none|warning|error]".
	* doc/c-ia64.texi: Likewise.

gas/testcase

2005-02-11  H.J. Lu  <hongjiu.lu@@intel.com>

	* gas/ia64/ia64.exp: Pass -munwind-check=error for unwind-err
	and proc.
@
text
@d78 1
a78 2
These options turn on dependency violation checking.  This checking is turned on by
default.
d82 4
a85 1
to remove dependency violations.
d91 6
@


1.4
log
@2005-02-10  H.J. Lu  <hongjiu.lu@@intel.com>

	* doc/all.texi: Add IA64.
	* doc/as.texinfo: Likewise.

	* doc/c-ia64.texi: Fix typos.
@
text
@d68 8
@


1.3
log
@	* doc/c-alpha.texi: Fix typos.
	* doc/c-ia64.texi: Likewise.
	* doc/c-mmix.texi: Likewise.
	* doc/c-sh64.texi: Likewise.
	* doc/c-xtensa.texi: Likewise.
	* doc/internals.texi: Likewise.
@
text
@d93 1
a93 1
* IA-64-Relocs::               Relocations
d139 1
a139 1
the @@sample{ssm}/@@sample{sum} and @@sample{rsm}/@@sample{rum}
@


1.2
log
@	* doc/c-alpha.texi: Fix typos.
	* doc/c-arm.texi: Likewise.
	* doc/c-d10v.texi: Likewise.
	* doc/c-i370.texi: Likewise.
	* doc/c-i960.texi: Likewise.
	* doc/c-ia64.texi: Likewise.
	* doc/c-mmix.texi: Likewise.
	* doc/c-ns32k.texi: Likewise.
	* doc/c-pdp11.texi: Likewise.
	* doc/c-pj.texi: Likewise.
	* doc/c-sh64.texi: Likewise.
	* doc/c-sparc.texi: Likewise.
	* doc/c-tic54x.texi: Likewise.
	* doc/c-v850.texi: Likewise.
	* doc/c-vax.texi: Likewise.
	* doc/internals.texi: Likewise.
@
text
@d113 6
a118 6
The 128 integer registers are refered to as @@samp{r@@var{n}}.
The 128 floating-point registers are refered to as @@samp{f@@var{n}}.
The 128 application registers are refered to as @@samp{ar@@var{n}}.
The 128 control registers are refered to as @@samp{cr@@var{n}}.
The 64 one-bit predicate registers are refered to as @@samp{p@@var{n}}.
The 8 branch registers are refered to as @@samp{b@@var{n}}.
@


1.1
log
@Add documentation of IA64 port
@
text
@d47 1
a47 1
additionaly does away with function descriptors.  What this means is
@

