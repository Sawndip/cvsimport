head	1.36;
access;
symbols
	binutils-2_24-branch:1.36.0.2
	binutils-2_24-branchpoint:1.36
	binutils-2_21_1:1.29
	binutils-2_23_2:1.33
	binutils-2_23_1:1.33
	binutils-2_23:1.33
	binutils-2_23-branch:1.33.0.6
	binutils-2_23-branchpoint:1.33
	binutils-2_22_branch:1.33.0.4
	binutils-2_22:1.33
	binutils-2_22-branch:1.33.0.2
	binutils-2_22-branchpoint:1.33
	binutils-2_21:1.29
	binutils-2_21-branch:1.29.0.2
	binutils-2_21-branchpoint:1.29
	binutils-2_20_1:1.28
	binutils-2_20:1.28
	binutils-arc-20081103-branch:1.21.0.6
	binutils-arc-20081103-branchpoint:1.21
	binutils-2_20-branch:1.28.0.2
	binutils-2_20-branchpoint:1.28
	dje-cgen-play1-branch:1.24.0.2
	dje-cgen-play1-branchpoint:1.24
	arc-20081103-branch:1.21.0.4
	arc-20081103-branchpoint:1.21
	binutils-2_19_1:1.21
	binutils-2_19:1.21
	binutils-2_19-branch:1.21.0.2
	binutils-2_19-branchpoint:1.21
	binutils-2_18:1.4
	binutils-2_18-branch:1.4.0.2
	binutils-2_18-branchpoint:1.4
	binutils_latest_snapshot:1.36;
locks; strict;
comment	@# @;


1.36
date	2013.07.18.11.47.30;	author nickc;	state Exp;
branches;
next	1.35;

1.35
date	2013.04.09.15.39.37;	author nickc;	state Exp;
branches;
next	1.34;

1.34
date	2013.01.10.19.51.55;	author hjl;	state Exp;
branches;
next	1.33;

1.33
date	2011.03.24.17.03.03;	author eweddington;	state Exp;
branches;
next	1.32;

1.32
date	2011.03.23.15.02.06;	author eweddington;	state Exp;
branches;
next	1.31;

1.31
date	2011.03.22.18.10.44;	author eweddington;	state Exp;
branches;
next	1.30;

1.30
date	2011.01.18.13.37.39;	author nickc;	state Exp;
branches;
next	1.29;

1.29
date	2010.04.09.03.48.54;	author eweddington;	state Exp;
branches;
next	1.28;

1.28
date	2009.09.02.07.24.21;	author amodra;	state Exp;
branches;
next	1.27;

1.27
date	2009.08.05.12.47.33;	author eweddington;	state Exp;
branches;
next	1.26;

1.26
date	2009.08.02.14.34.55;	author eweddington;	state Exp;
branches;
next	1.25;

1.25
date	2009.08.01.16.17.23;	author eweddington;	state Exp;
branches;
next	1.24;

1.24
date	2009.02.03.17.24.36;	author eweddington;	state Exp;
branches;
next	1.23;

1.23
date	2009.01.26.13.38.52;	author eweddington;	state Exp;
branches;
next	1.22;

1.22
date	2008.12.23.09.51.38;	author nickc;	state Exp;
branches;
next	1.21;

1.21
date	2008.08.29.16.58.02;	author nickc;	state Exp;
branches;
next	1.20;

1.20
date	2008.08.09.05.35.13;	author eweddington;	state Exp;
branches;
next	1.19;

1.19
date	2008.06.25.16.19.11;	author eweddington;	state Exp;
branches;
next	1.18;

1.18
date	2008.06.09.16.07.02;	author eweddington;	state Exp;
branches;
next	1.17;

1.17
date	2008.03.28.21.51.38;	author eweddington;	state Exp;
branches;
next	1.16;

1.16
date	2008.03.28.21.04.22;	author eweddington;	state Exp;
branches;
next	1.15;

1.15
date	2008.03.28.19.24.52;	author eweddington;	state Exp;
branches;
next	1.14;

1.14
date	2008.03.27.14.52.35;	author nickc;	state Exp;
branches;
next	1.13;

1.13
date	2008.01.16.17.59.07;	author eweddington;	state Exp;
branches;
next	1.12;

1.12
date	2007.11.16.17.39.22;	author eweddington;	state Exp;
branches;
next	1.11;

1.11
date	2007.11.16.17.25.28;	author eweddington;	state Exp;
branches;
next	1.10;

1.10
date	2007.11.07.17.59.05;	author eweddington;	state Exp;
branches;
next	1.9;

1.9
date	2007.11.07.17.24.59;	author eweddington;	state Exp;
branches;
next	1.8;

1.8
date	2007.10.31.18.11.28;	author eweddington;	state Exp;
branches;
next	1.7;

1.7
date	2007.10.12.16.28.03;	author nickc;	state Exp;
branches;
next	1.6;

1.6
date	2007.10.08.10.39.17;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	2007.10.08.10.33.27;	author nickc;	state Exp;
branches;
next	1.4;

1.4
date	2007.04.26.17.18.23;	author denisc;	state Exp;
branches;
next	1.3;

1.3
date	2006.07.24.13.49.49;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	2006.06.19.16.58.29;	author denisc;	state Exp;
branches;
next	1.1;

1.1
date	2006.06.01.14.54.25;	author denisc;	state Exp;
branches;
next	;


desc
@@


1.36
log
@	* config/tc-avr.c: Make ata6289's ISA to AVR_ISA_AVR4.
	* doc/c-avr.texi: Likewise.
@
text
@@@c Copyright 2006-2013 Free Software Foundation, Inc.
@@c This is part of the GAS manual.
@@c For copying conditions, see the file as.texinfo.

@@ifset GENERIC
@@page
@@node AVR-Dependent
@@chapter AVR Dependent Features
@@end ifset

@@ifclear GENERIC
@@node Machine Dependencies
@@chapter AVR Dependent Features
@@end ifclear

@@cindex AVR support
@@menu
* AVR Options::              Options
* AVR Syntax::               Syntax
* AVR Opcodes::              Opcodes
@@end menu

@@node AVR Options
@@section Options
@@cindex AVR options (none)
@@cindex options for AVR (none)

@@table @@code

@@cindex @@code{-mmcu=} command line option, AVR
@@item -mmcu=@@var{mcu}
Specify ATMEL AVR instruction set or MCU type.

Instruction set avr1 is for the minimal AVR core, not supported by the C
compiler, only for assembler programs (MCU types: at90s1200,
attiny11, attiny12, attiny15, attiny28).

Instruction set avr2 (default) is for the classic AVR core with up to
8K program memory space (MCU types: at90s2313, at90s2323, at90s2333, at90s2343,
attiny22, attiny26, at90s4414, at90s4433, at90s4434, at90s8515, at90c8534,
at90s8535).

Instruction set avr25 is for the classic AVR core with up to 8K program memory
space plus the MOVW instruction (MCU types: attiny13, attiny13a, attiny2313,
attiny2313a, attiny24, attiny24a, attiny4313, attiny44, attiny44a, attiny84,
attiny84a, attiny25, attiny45, attiny85, attiny261, attiny261a, attiny461,
attiny461a, attiny861, attiny861a, attiny87, attiny43u, attiny48, attiny88,
at86rf401).

Instruction set avr3 is for the classic AVR core with up to 128K program
memory space (MCU types: at43usb355, at76c711).

Instruction set avr31 is for the classic AVR core with exactly 128K program
memory space (MCU types: atmega103, at43usb320).

Instruction set avr35 is for classic AVR core plus MOVW, CALL, and JMP
instructions (MCU types: attiny167, at90usb82, at90usb162, atmega8u2,
atmega16u2, atmega32u2).

Instruction set avr4 is for the enhanced AVR core with up to 8K program
memory space (MCU types: atmega48, atmega48a, atmega48p, atmega8, atmega88,
atmega88a, atmega88p, atmega88pa, atmega8515, atmega8535, atmega8hva, at90pwm1,
at90pwm2, at90pwm2b, at90pwm3, at90pwm3b, at90pwm81, ata6289).

Instruction set avr5 is for the enhanced AVR core with up to 128K program
memory space (MCU types: atmega16, atmega16a, atmega161, atmega162,
atmega163, atmega164a, atmega164p, atmega165, atmega165a, atmega165p,
atmega168, atmega168a, atmega168p, atmega169, atmega169a, atmega169p,
atmega169pa, atmega32, atmega323, atmega324a, atmega324p, atmega325,
atmega325a, atmega325p, atmega325pa, atmega3250, atmega3250a,
atmega3250p, atmega3250pa, atmega328, atmega328p, atmega329,
atmega329a, atmega329p, atmega329pa, atmega3290, atmega3290a,
atmega3290p, atmega3290pa, atmega406, atmega64, atmega640, atmega644,
atmega644a, atmega644p, atmega644pa, atmega645, atmega645a,
atmega645p, atmega6450, atmega6450a, atmega6450p, atmega649,
atmega649a, atmega649p, atmega6490, atmega6490a, atmega6490p,
atmega64rfr2, atmega644rfr2, atmega16hva, atmega16hva2, atmega16hvb,
atmega16hvbrevb, atmega32hvb, atmega32hvbrevb, atmega64hve, at90can32,
at90can64, at90pwm161, at90pwm216, at90pwm316, atmega32c1, atmega64c1,
atmega16m1, atmega32m1, atmega64m1, atmega16u4, atmega32u4,
atmega32u6, at90usb646, at90usb647, at94k, at90scr100).

Instruction set avr51 is for the enhanced AVR core with exactly 128K program
memory space (MCU types: atmega128, atmega1280, atmega1281, atmega1284p,
atmega128rfa1,
atmega128rfr2, atmega1284rfr2,
at90can128, at90usb1286, at90usb1287, m3000).

Instruction set avr6 is for the enhanced AVR core with a 3-byte PC (MCU types:
atmega2560, atmega2561,
atmega256rfr2, atmega2564rfr2).

Instruction set avrxmega2 is for the XMEGA AVR core with 8K to 64K program
memory space and less than 64K data space (MCU types: atxmega16a4, atxmega16d4,
atxmega16x1, atxmega32a4, atxmega32d4, atxmega32x1).

Instruction set avrxmega3 is for the XMEGA AVR core with 8K to 64K program
memory space and greater than 64K data space (MCU types: none).

Instruction set avrxmega4 is for the XMEGA AVR core with up to 64K program
memory space and less than 64K data space (MCU types: atxmega64a3, atxmega64d3).

Instruction set avrxmega5 is for the XMEGA AVR core with up to 64K program
memory space and greater than 64K data space (MCU types: atxmega64a1,
atxmega64a1u).

Instruction set avrxmega6 is for the XMEGA AVR core with up to 256K program
memory space and less than 64K data space (MCU types: atxmega128a3,
atxmega128d3, atxmega192a3, atxmega128b1, atxmega192d3, atxmega256a3,
atxmega256a3b, atxmega256a3bu, atxmega192d3).

Instruction set avrxmega7 is for the XMEGA AVR core with up to 256K program
memory space and greater than 64K data space (MCU types: atxmega128a1,
atxmega128a1u).

@@cindex @@code{-mall-opcodes} command line option, AVR
@@item -mall-opcodes
Accept all AVR opcodes, even if not supported by @@code{-mmcu}.

@@cindex @@code{-mno-skip-bug} command line option, AVR
@@item -mno-skip-bug
This option disable warnings for skipping two-word instructions.

@@cindex @@code{-mno-wrap} command line option, AVR
@@item -mno-wrap
This option reject @@code{rjmp/rcall} instructions with 8K wrap-around.

@@end table


@@node AVR Syntax
@@section Syntax
@@menu
* AVR-Chars::                Special Characters
* AVR-Regs::                 Register Names
* AVR-Modifiers::            Relocatable Expression Modifiers
@@end menu

@@node AVR-Chars
@@subsection Special Characters

@@cindex line comment character, AVR
@@cindex AVR line comment character

The presence of a @@samp{;} anywhere on a line indicates the start of a
comment that extends to the end of that line.

If a @@samp{#} appears as the first character of a line, the whole line
is treated as a comment, but in this case the line can also be a
logical line number directive (@@pxref{Comments}) or a preprocessor
control command (@@pxref{Preprocessing}).

@@cindex line separator, AVR
@@cindex statement separator, AVR
@@cindex AVR line separator

The @@samp{$} character can be used instead of a newline to separate
statements.

@@node AVR-Regs
@@subsection Register Names

@@cindex AVR register names
@@cindex register names, AVR

The AVR has 32 x 8-bit general purpose working registers @@samp{r0},
@@samp{r1}, ... @@samp{r31}.
Six of the 32 registers can be used as three 16-bit indirect address
register pointers for Data Space addressing. One of the these address
pointers can also be used as an address pointer for look up tables in
Flash program memory. These added function registers are the 16-bit
@@samp{X}, @@samp{Y} and @@samp{Z} - registers.

@@smallexample
X = @@r{r26:r27}
Y = @@r{r28:r29}
Z = @@r{r30:r31}
@@end smallexample

@@node AVR-Modifiers
@@subsection Relocatable Expression Modifiers

@@cindex AVR modifiers
@@cindex syntax, AVR

The assembler supports several modifiers when using relocatable addresses
in AVR instruction operands.  The general syntax is the following:

@@smallexample
modifier(relocatable-expression)
@@end smallexample

@@table @@code
@@cindex symbol modifiers

@@item lo8

This modifier allows you to use bits 0 through 7 of
an address expression as 8 bit relocatable expression.

@@item hi8

This modifier allows you to use bits 7 through 15 of an address expression
as 8 bit relocatable expression.  This is useful with, for example, the
AVR @@samp{ldi} instruction and @@samp{lo8} modifier.

For example

@@smallexample
ldi r26, lo8(sym+10)
ldi r27, hi8(sym+10)
@@end smallexample

@@item hh8

This modifier allows you to use bits 16 through 23 of
an address expression as 8 bit relocatable expression.
Also, can be useful for loading 32 bit constants.

@@item hlo8

Synonym of @@samp{hh8}.

@@item hhi8

This modifier allows you to use bits 24 through 31 of
an expression as 8 bit expression. This is useful with, for example, the
AVR @@samp{ldi} instruction and @@samp{lo8}, @@samp{hi8}, @@samp{hlo8},
@@samp{hhi8}, modifier.

For example

@@smallexample
ldi r26, lo8(285774925)
ldi r27, hi8(285774925)
ldi r28, hlo8(285774925)
ldi r29, hhi8(285774925)
; r29,r28,r27,r26 = 285774925
@@end smallexample

@@item pm_lo8

This modifier allows you to use bits 0 through 7 of
an address expression as 8 bit relocatable expression.
This modifier useful for addressing data or code from
Flash/Program memory. The using of @@samp{pm_lo8} similar
to @@samp{lo8}.

@@item pm_hi8

This modifier allows you to use bits 8 through 15 of
an address expression as 8 bit relocatable expression.
This modifier useful for addressing data or code from
Flash/Program memory.

@@item pm_hh8

This modifier allows you to use bits 15 through 23 of
an address expression as 8 bit relocatable expression.
This modifier useful for addressing data or code from
Flash/Program memory.

@@end table

@@node AVR Opcodes
@@section Opcodes

@@cindex AVR opcode summary
@@cindex opcode summary, AVR
@@cindex mnemonics, AVR
@@cindex instruction summary, AVR
For detailed information on the AVR machine instruction set, see
@@url{www.atmel.com/products/AVR}.

@@code{@@value{AS}} implements all the standard AVR opcodes.
The following table summarizes the AVR opcodes, and their arguments.

@@smallexample
@@i{Legend:}
   r   @@r{any register}
   d   @@r{`ldi' register (r16-r31)}
   v   @@r{`movw' even register (r0, r2, ..., r28, r30)}
   a   @@r{`fmul' register (r16-r23)}
   w   @@r{`adiw' register (r24,r26,r28,r30)}
   e   @@r{pointer registers (X,Y,Z)}
   b   @@r{base pointer register and displacement ([YZ]+disp)}
   z   @@r{Z pointer register (for [e]lpm Rd,Z[+])}
   M   @@r{immediate value from 0 to 255}
   n   @@r{immediate value from 0 to 255 ( n = ~M ). Relocation impossible}
   s   @@r{immediate value from 0 to 7}
   P   @@r{Port address value from 0 to 63. (in, out)}
   p   @@r{Port address value from 0 to 31. (cbi, sbi, sbic, sbis)}
   K   @@r{immediate value from 0 to 63 (used in `adiw', `sbiw')}
   i   @@r{immediate value}
   l   @@r{signed pc relative offset from -64 to 63}
   L   @@r{signed pc relative offset from -2048 to 2047}
   h   @@r{absolute code address (call, jmp)}
   S   @@r{immediate value from 0 to 7 (S = s << 4)}
   ?   @@r{use this opcode entry if no parameters, else use next opcode entry}

1001010010001000   clc
1001010011011000   clh
1001010011111000   cli
1001010010101000   cln
1001010011001000   cls
1001010011101000   clt
1001010010111000   clv
1001010010011000   clz
1001010000001000   sec
1001010001011000   seh
1001010001111000   sei
1001010000101000   sen
1001010001001000   ses
1001010001101000   set
1001010000111000   sev
1001010000011000   sez
100101001SSS1000   bclr    S
100101000SSS1000   bset    S
1001010100001001   icall
1001010000001001   ijmp
1001010111001000   lpm     ?
1001000ddddd010+   lpm     r,z
1001010111011000   elpm    ?
1001000ddddd011+   elpm    r,z
0000000000000000   nop
1001010100001000   ret
1001010100011000   reti
1001010110001000   sleep
1001010110011000   break
1001010110101000   wdr
1001010111101000   spm
000111rdddddrrrr   adc     r,r
000011rdddddrrrr   add     r,r
001000rdddddrrrr   and     r,r
000101rdddddrrrr   cp      r,r
000001rdddddrrrr   cpc     r,r
000100rdddddrrrr   cpse    r,r
001001rdddddrrrr   eor     r,r
001011rdddddrrrr   mov     r,r
100111rdddddrrrr   mul     r,r
001010rdddddrrrr   or      r,r
000010rdddddrrrr   sbc     r,r
000110rdddddrrrr   sub     r,r
001001rdddddrrrr   clr     r
000011rdddddrrrr   lsl     r
000111rdddddrrrr   rol     r
001000rdddddrrrr   tst     r
0111KKKKddddKKKK   andi    d,M
0111KKKKddddKKKK   cbr     d,n
1110KKKKddddKKKK   ldi     d,M
11101111dddd1111   ser     d
0110KKKKddddKKKK   ori     d,M
0110KKKKddddKKKK   sbr     d,M
0011KKKKddddKKKK   cpi     d,M
0100KKKKddddKKKK   sbci    d,M
0101KKKKddddKKKK   subi    d,M
1111110rrrrr0sss   sbrc    r,s
1111111rrrrr0sss   sbrs    r,s
1111100ddddd0sss   bld     r,s
1111101ddddd0sss   bst     r,s
10110PPdddddPPPP   in      r,P
10111PPrrrrrPPPP   out     P,r
10010110KKddKKKK   adiw    w,K
10010111KKddKKKK   sbiw    w,K
10011000pppppsss   cbi     p,s
10011010pppppsss   sbi     p,s
10011001pppppsss   sbic    p,s
10011011pppppsss   sbis    p,s
111101lllllll000   brcc    l
111100lllllll000   brcs    l
111100lllllll001   breq    l
111101lllllll100   brge    l
111101lllllll101   brhc    l
111100lllllll101   brhs    l
111101lllllll111   brid    l
111100lllllll111   brie    l
111100lllllll000   brlo    l
111100lllllll100   brlt    l
111100lllllll010   brmi    l
111101lllllll001   brne    l
111101lllllll010   brpl    l
111101lllllll000   brsh    l
111101lllllll110   brtc    l
111100lllllll110   brts    l
111101lllllll011   brvc    l
111100lllllll011   brvs    l
111101lllllllsss   brbc    s,l
111100lllllllsss   brbs    s,l
1101LLLLLLLLLLLL   rcall   L
1100LLLLLLLLLLLL   rjmp    L
1001010hhhhh111h   call    h
1001010hhhhh110h   jmp     h
1001010rrrrr0101   asr     r
1001010rrrrr0000   com     r
1001010rrrrr1010   dec     r
1001010rrrrr0011   inc     r
1001010rrrrr0110   lsr     r
1001010rrrrr0001   neg     r
1001000rrrrr1111   pop     r
1001001rrrrr1111   push    r
1001010rrrrr0111   ror     r
1001010rrrrr0010   swap    r
00000001ddddrrrr   movw    v,v
00000010ddddrrrr   muls    d,d
000000110ddd0rrr   mulsu   a,a
000000110ddd1rrr   fmul    a,a
000000111ddd0rrr   fmuls   a,a
000000111ddd1rrr   fmulsu  a,a
1001001ddddd0000   sts     i,r
1001000ddddd0000   lds     r,i
10o0oo0dddddbooo   ldd     r,b
100!000dddddee-+   ld      r,e
10o0oo1rrrrrbooo   std     b,r
100!001rrrrree-+   st      e,r
1001010100011001   eicall
1001010000011001   eijmp
@@end smallexample
@


1.35
log
@	* gas/config/tc-avr.c (mcu_types): Add ATmega64RFR2,
	ATmega644RFR2, ATmega128RFR2, ATmega1284RFR2, ATmega256RFR2,
	ATmega2564RFR2
	* gas/doc/c-avr.texi (-mmcu documentation): Likewise.
@
text
@d48 1
a48 1
at86rf401, ata6289).
d63 1
a63 1
at90pwm2, at90pwm2b, at90pwm3, at90pwm3b, at90pwm81).
@


1.34
log
@Remove trailing white spaces on gas

	* app.c: Remove trailing white spaces.
	* as.c: Likewise.
	* as.h: Likewise.
	* cond.c: Likewise.
	* dw2gencfi.c: Likewise.
	* dwarf2dbg.h: Likewise.
	* ecoff.c: Likewise.
	* input-file.c: Likewise.
	* itbl-lex.h: Likewise.
	* output-file.c: Likewise.
	* read.c: Likewise.
	* sb.c: Likewise.
	* subsegs.c: Likewise.
	* symbols.c: Likewise.
	* write.c: Likewise.
	* config/tc-i386.c: Likewise.
	* doc/Makefile.am: Likewise.
	* doc/Makefile.in: Likewise.
	* doc/c-aarch64.texi: Likewise.
	* doc/c-alpha.texi: Likewise.
	* doc/c-arc.texi: Likewise.
	* doc/c-arm.texi: Likewise.
	* doc/c-avr.texi: Likewise.
	* doc/c-bfin.texi: Likewise.
	* doc/c-cr16.texi: Likewise.
	* doc/c-d10v.texi: Likewise.
	* doc/c-d30v.texi: Likewise.
	* doc/c-h8300.texi: Likewise.
	* doc/c-hppa.texi: Likewise.
	* doc/c-i370.texi: Likewise.
	* doc/c-i386.texi: Likewise.
	* doc/c-i860.texi: Likewise.
	* doc/c-m32c.texi: Likewise.
	* doc/c-m32r.texi: Likewise.
	* doc/c-m68hc11.texi: Likewise.
	* doc/c-m68k.texi: Likewise.
	* doc/c-microblaze.texi: Likewise.
	* doc/c-mips.texi: Likewise.
	* doc/c-msp430.texi: Likewise.
	* doc/c-mt.texi: Likewise.
	* doc/c-s390.texi: Likewise.
	* doc/c-score.texi: Likewise.
	* doc/c-sh.texi: Likewise.
	* doc/c-sh64.texi: Likewise.
	* doc/c-tic54x.texi: Likewise.
	* doc/c-tic6x.texi: Likewise.
	* doc/c-v850.texi: Likewise.
	* doc/c-xc16x.texi: Likewise.
	* doc/c-xgate.texi: Likewise.
	* doc/c-xtensa.texi: Likewise.
	* doc/c-z80.texi: Likewise.
	* doc/internals.texi: Likewise.
@
text
@d1 1
a1 2
@@c Copyright 2006, 2007, 2008, 2009, 2011
@@c Free Software Foundation, Inc.
d66 15
a80 13
memory space (MCU types: atmega16, atmega16a, atmega161, atmega162, atmega163,
atmega164a, atmega164p, atmega165, atmega165a, atmega165p, atmega168,
atmega168a, atmega168p, atmega169, atmega169a, atmega169p, atmega169pa,
atmega32, atmega323, atmega324a, atmega324p, atmega325, atmega325a, atmega325p,
atmega325pa, atmega3250, atmega3250a, atmega3250p, atmega3250pa, atmega328,
atmega328p, atmega329, atmega329a, atmega329p, atmega329pa, atmega3290,
atmega3290a, atmega3290p, atmega3290pa, atmega406, atmega64, atmega640,
atmega644, atmega644a, atmega644p, atmega644pa, atmega645, atmega645a,
atmega645p, atmega6450, atmega6450a, atmega6450p, atmega649, atmega649a,
atmega649p, atmega6490, atmega6490a, atmega6490p, atmega16hva, atmega16hva2,
atmega16hvb, atmega16hvbrevb, atmega32hvb, atmega32hvbrevb, atmega64hve,
at90can32, at90can64, at90pwm161, at90pwm216, at90pwm316, atmega32c1,
atmega64c1, atmega16m1, atmega32m1, atmega64m1, atmega16u4, atmega32u4,
d85 3
a87 1
atmega128rfa1, at90can128, at90usb1286, at90usb1287, m3000).
d90 2
a91 1
atmega2560, atmega2561).
@


1.33
log
@2011-03-24  Eric B. Weddington  <eric.weddington@@atmel.com>

	* config/tc-avr.c (mcu_types): Add new devices: atmega325pa,
	atmega3250pa, atmega3290pa, atmega16hvbrevb, atmega32hvbrevb,
	at90pwm161.
	* doc/c-avr.texi: Document new device names.
@
text
@d99 1
a99 1
Instruction set avrxmega5 is for the XMEGA AVR core with up to 64K program 
d105 1
a105 1
atxmega128d3, atxmega192a3, atxmega128b1, atxmega192d3, atxmega256a3, 
d297 16
a312 16
1001010010001000   clc  
1001010011011000   clh  
1001010011111000   cli  
1001010010101000   cln  
1001010011001000   cls  
1001010011101000   clt  
1001010010111000   clv  
1001010010011000   clz  
1001010000001000   sec  
1001010001011000   seh  
1001010001111000   sei  
1001010000101000   sen  
1001010001001000   ses  
1001010001101000   set  
1001010000111000   sev  
1001010000011000   sez  
d316 1
a316 1
1001010000001001   ijmp 
d321 3
a323 3
0000000000000000   nop  
1001010100001000   ret  
1001010100011000   reti 
d326 2
a327 2
1001010110101000   wdr  
1001010111101000   spm  
d411 2
a412 2
1001010100011001   eicall  
1001010000011001   eijmp   
@


1.32
log
@2011-03-23  Eric B. Weddington  <eric.weddington@@atmel.com>

	* config/tc-avr.c (mcu_types): Add new xmega devices: atxmega64a1u,
	atxmega128a1u, atxmega16x1, atxmega32x1, atxmega128b1, atxmega256a3bu.
	* doc/c-avr.texi: Document new device names.
@
text
@d71 10
a80 9
atmega3250, atmega3250a, atmega3250p, atmega328, atmega328p, atmega329,
atmega329a, atmega329p, atmega329pa, atmega3290, atmega3290a, atmega3290p,
atmega406, atmega64, atmega640, atmega644, atmega644a, atmega644p, atmega644pa,
atmega645, atmega645a, atmega645p, atmega6450, atmega6450a, atmega6450p,
atmega649, atmega649a, atmega649p, atmega6490, atmega6490a, atmega6490p,
atmega16hva, atmega16hva2, atmega16hvb, atmega32hvb, atmega64hve, at90can32,
at90can64, at90pwm216, at90pwm316, atmega32c1, atmega64c1, atmega16m1, 
atmega32m1, atmega64m1, atmega16u4, atmega32u4, atmega32u6, at90usb646,
at90usb647, at94k, at90scr100).
@


1.31
log
@/bfd:
2011-03-22  Eric B. Weddington  <eric.weddington@@atmel.com>

	* archures.c: Add AVR XMEGA architecture information.
	* cpu-avr.c (arch_info_struct): Likewise.
	* elf32-avr.c (bfd_elf_avr_final_write_processing): Likewise.
	(elf32_avr_object_p): Likewise.

/gas:
2011-03-22  Eric B. Weddington  <eric.weddington@@atmel.com>

	* config/tc-avr.c (struct avr_opcodes_s): Add opcode field.
	(AVR_INSN): Change definition to match.
	(avr_opcodes): Likewise, change to match.
	(mcu_types): Add XMEGA architecture names and new XMEGA device names.
	(md_show_usage): Add XMEGA architecture names.
	(avr_operand): Add 'E' constraint for DES instruction of XMEGA devices.
	Add support for SPM Z+ instruction.
	* doc/c-avr.texi: Add documentation for XMEGA architectures and
	devices.

/include/opcode:
2011-03-22  Eric B. Weddington  <eric.weddington@@atmel.com>

	* avr.h (AVR_ISA_SPMX,AVR_ISA_DES,AVR_ISA_M256,AVR_ISA_XMEGA):
	New instruction set flags.
	(AVR_INSN): Add new instructions for SPM Z+, DES for XMEGA.

/ld:
2011-03-22  Eric B. Weddington  <eric.weddington@@atmel.com>

	* Makefile.am (ALL_EMULATION_SOURCES): Add AVR XMEGA architectures.
	(eavrxmega?.c): Likewise.
	* configure.tgt (targ_extra_emuls): Likewise.
	* emulparams/avrxmega1.sh: New file.
	* emulparams/avrxmega2.sh: Likewise.
	* emulparams/avrxmega3.sh: Likewise.
	* emulparams/avrxmega4.sh: Likewise.
	* emulparams/avrxmega5.sh: Likewise.
	* emulparams/avrxmega6.sh: Likewise.
	* emulparams/avrxmega7.sh: Likewise.
	* emultempl/avrelf.em (avr_elf_${EMULATION_NAME}_before_allocation):
	Add avrxmega6, avrxmega7 to list of architectures for no stubs.

/opcodes:
2011-03-22  Eric B. Weddington  <eric.weddington@@atmel.com>

	* avr-dis.c (avr_operand): Add opcode_str parameter. Check for
	post-increment to support LPM Z+ instruction. Add support for 'E'
	constraint for DES instruction.
	(print_insn_avr): Adjust calls to avr_operand. Rename variable.
@
text
@d90 1
a90 1
atxmega32d4).
d93 1
a93 1
memory space and greater than 64K data space (MCU types: atxmega32a4).
d99 2
a100 1
memory space and greater than 64K data space (MCU types: atxmega64a1).
d104 2
a105 2
atxmega128d3, atxmega192a3, atxmega192d3, atxmega256a3, atxmega256a3b,
atxmega192d3).
d108 2
a109 1
memory space and greater than 64K data space (MCU types: atxmega128a1).
@


1.30
log
@	PR gas/12390
	* doc/all.texi: Add NS32K
	* doc/as.texinfo: Remove target specific details of which
	characters act as comment initiators and statement separators into
	individual target specific files.
	* doc/c-alpha.texi (Alpha-Chars): Document special behaviour of
	the hash character at the start of a line.
	* doc/c-arm.texi (ARM-Chars): Likewise.
	* doc/c-avr.texi (AVR-Chars): Likewise.
	* doc/c-d10v.texi (D10V-Chars): Likewise.
	* doc/c-d30v.texi (D30V-Chars):	Likewise.
	* doc/c-mmix.texi (MMIX-Chars): Likewise.
	* doc/c-s390.texi (s390 characters): Likewise.
	* doc/c-sh.texi (SH-Chars): Likewise.
	* doc/c-sh64.texi (SH64-Chars): Likewise.
	* doc/c-sparc.texi (SPARC-Chars): Likewise.
	* doc/c-tic6x.texi (TIC6X Syntax): Likewise.
	* doc/c-xtensa.texi (Xtensa Syntax): Likewise.
	* doc/c-z80.texi (Z80-Chars): Likewise.
	* doc/c-z8k.texi (Z8000-Chars): Likewise.
	* doc/c-pdp11.texi (PDP11-Syntax): Document line separator character.
	* doc/c-arc.texi (ARC-Chars): Fill in this subsection.
	* doc/c-bfin.texi (Blackfin Syntax): Document line comment and
	line separator characters.
	* doc/c-cr16.texi (CR16 Syntax): Likewise.
	* doc/c-i386.texi (i386-Chars): Likewise.
	* doc/c-i860.texi (i860-Chars):	Likewise.
	* doc/c-i960.texi (i960-Chars):	Likewise.
	* doc/c-ip2k.texi (IP2K-Chars):	Likewise.
	* doc/c-lm32.texi (LM32-Chars):	likewise.
	* doc/c-m32c.texi (M32C-Chars): Likewise.
	* doc/c-m68hc11.texi (M68HC11-syntax): Likewise.
	* doc/c-m68k.texi (M68K-Chars): Likewise.
	* doc/c-microblaze.texi (MicroBlaze-Chars): Likewise.
	* doc/c-msp430.texi (MSP430-Chars): Likewise.
	* doc/c-mt.texi (MT-Chars): Likewise.
	* doc/c-ns32k.texi (NS32K-Chars): Likewise.
	* doc/c-pj.texi (PJ-Chars): Likewise.
	* doc/c-ppc.texi (PowerPC-Chars): Likewise.
	* doc/c-rx.texi (RX-Chars): Likewise.
	* doc/c-score.texi (SCORE-Chars): Likewise.
	* doc/c-tic54x.texi (TIC54X-Chars): Likewise.
	* doc/c-v850.texi (V850-Chars): Likewise.
	* doc/c-vax.texi (VAX-Chars): Likewise.
	* doc/c-xc16x.texi (xc16x-Chars): Likewise.
@
text
@d88 21
@


1.29
log
@2010-04-07  Eric B. Weddington  <eric.weddington@@atmel.com>

	* config/tc-avr.c (mcu_types): Add support for atmega16a, atmega168a,
	atmega164a, atmega165a, atmega169a, atmega169pa, atmega16hva2,
	atmega324a, atmega324pa, atmega325a, atmega3250a, atmega328,
	atmega329a, atmega329pa, atmega3290a, atmega48a, atmega644a,
	atmega645a, atmega645p, atmega6450a, atmega6450p, atmega649a,
	atmega649p, atmega6490a, atmega6490p, atmega64hve, atmega88a,
	atmega88pa, attiny461a, attiny84a, m3000.
	Remove support for atmega8m1, atmega8c1, atmega16c1, atmega4hvd,
	atmega8hvd, attiny327, m3000f, m3000s, m3001b.
	* doc/c-avr.texi: Same.
@
text
@d1 1
a1 1
@@c Copyright 2006, 2007, 2008, 2009
d117 7
a123 3
The presence of a @@samp{;} on a line indicates the start of a comment
that extends to the end of the current line.  If a @@samp{#} appears as
the first character of a line, the whole line is treated as a comment.
@


1.28
log
@update copyright dates
@
text
@d47 3
a49 2
attiny25, attiny45, attiny85, attiny261, attiny261a, attiny461, attiny861,
attiny861a, attiny87, attiny43u, attiny48, attiny88, at86rf401, ata6289).
d58 1
a58 1
instructions (MCU types: attiny167, attiny327, at90usb82, at90usb162, atmega8u2,
d62 3
a64 3
memory space (MCU types: atmega48, atmega48p,atmega8, atmega88, atmega88p,
atmega8515, atmega8535, atmega8hva, atmega4hvd, atmega8hvd, at90pwm1,
at90pwm2, at90pwm2b, at90pwm3, at90pwm3b, at90pwm81, atmega8m1, atmega8c1).
d67 13
a79 9
memory space (MCU types: atmega16, atmega161, atmega162, atmega163, atmega164p,
atmega165, atmega165p, atmega168, atmega168p, atmega169, atmega169p, atmega16c1,
atmega32, atmega323, atmega324p, atmega325, atmega325p, atmega3250, atmega3250p,
atmega328p, atmega329, atmega329p, atmega3290, atmega3290p, atmega406, atmega64,
atmega640, atmega644, atmega644p, atmega644pa, atmega645, atmega6450, atmega649,
atmega6490, atmega16hva, atmega16hvb, atmega32hvb, at90can32, at90can64,
at90pwm216, at90pwm316, atmega32c1, atmega64c1, atmega16m1, atmega32m1,
atmega64m1, atmega16u4, atmega32u4, atmega32u6, at90usb646, at90usb647, at94k,
at90scr100).
d83 1
a83 1
atmega128rfa1, at90can128, at90usb1286, at90usb1287, m3000f, m3000s, m3001b).
@


1.27
log
@/gas:
2009-08-05  Eric B. Weddington  <eric.weddington@@atmel.com>

	* config/tc-avr.c (mcu_types): Add attiny2313a, attiny4313, attiny261a,
	attiny861a, atmega644pa, attiny24a, attiny44a.
	* doc/c-avr.texi: Likewise.
@
text
@d1 1
a1 1
@@c Copyright 2006
@


1.26
log
@/gas:
2009-08-02  Eric B. Weddington  <eric.weddington@@atmel.com>

	* config/tc-avr.c (mcu_types): Add atmega8m1, atmega8c1, atmega16c1.
	* doc/c-avr.texi: Likewise.
@
text
@d46 3
a48 3
attiny24, attiny44, attiny84, attiny25, attiny45, attiny85, attiny261,
attiny461, attiny861, attiny87, attiny43u, attiny48, attiny88, at86rf401,
ata6289).
d70 5
a74 4
atmega640, atmega644, atmega644p, atmega645, atmega6450, atmega649, atmega6490,
atmega16hva, atmega16hvb, atmega32hvb, at90can32, at90can64, at90pwm216,
at90pwm316, atmega32c1, atmega64c1, atmega16m1, atmega32m1, atmega64m1,
atmega16u4, atmega32u4, atmega32u6, at90usb646, at90usb647, at94k, at90scr100).
@


1.25
log
@/gas:
2009-08-01  Eric B. Weddington  <eric.weddington@@atmel.com>

	* config/tc-avr.c (mcu_types): Add atmega8u2, atmega16u2, atmega32u2.
	* doc/c-avr.texi: Likewise.
@
text
@d63 1
a63 1
at90pwm2, at90pwm2b, at90pwm3, at90pwm3b, at90pwm81).
d67 2
a68 2
atmega165, atmega165p, atmega168, atmega168p, atmega169, atmega169p, atmega32,
atmega323, atmega324p, atmega325, atmega325p, atmega3250, atmega3250p,
@


1.24
log
@/gas:
2009-01-29  Eric B. Weddington  <eric.weddington@@atmel.com>

	* config/tc-avr.c (mcu_types): Add ata6289.
	* doc/c-avr.texi: Likewise.
@
text
@d57 2
a58 1
instructions (MCU types: attiny167, attiny327, at90usb82, at90usb162).
@


1.23
log
@/gas:
2009-01-26  Eric B. Weddington  <eric.weddington@@atmel.com>

	PR 9789
	* config/tc-avr.c (mcu_types): Fix typo in atmega128rfa1 name.
	* doc/c-avr.texi: Likewise.
@
text
@d47 2
a48 1
attiny461, attiny861, attiny87, attiny43u, attiny48, attiny88, at86rf401).
@


1.22
log
@        * config/tc-avr.c (mcu_types): Add attiny87, attiny327, atmega4hvd,
        atmega8hvd, atmega16hvb, atmega32hvb, atmega64c1, atmega16m1,
        atmega64m1, atmega32u6, atmega128rfa1,  at90pwm81, at90scr100,
        m3000f, m3000s and m3001b devices.
        * doc/c-avr.texi: Likewise.
@
text
@d75 1
a75 1
atmega128rfa, at90can128, at90usb1286, at90usb1287, m3000f, m3000s, m3001b).
@


1.21
log
@        * config/tc-avr.c (mcu_types): Add atmega16u4.
        * doc/c-avr.texi: Likewise.
@
text
@d47 1
a47 1
attiny461, attiny861, attiny43u, attiny48, attiny88, at86rf401).
d56 1
a56 1
instructions (MCU types: attiny167, at90usb82, at90usb162).
d60 2
a61 2
atmega8515, atmega8535, atmega8hva, at90pwm1, at90pwm2, at90pwm2b,
at90pwm3, at90pwm3b).
d69 3
a71 2
atmega16hva, at90can32, at90can64, at90pwm216, at90pwm316, atmega16u4,
atmega32c1, atmega32m1, atmega32u4, at90usb646, at90usb647, at94k).
d75 1
a75 1
at90can128, at90usb1286, at90usb1287).
@


1.20
log
@Add AVR architectures avr25, avr31, avr35, and avr51 to match GCC.
bfd/
	* archures.c (bfd_mach_avr25, bfd_mach_avr31, bfd_mach_avr35,
	bfd_mach_avr51): New.
	* bfd-in2.h: Regenerate.
	* cpu-avr.c (arch_info_struct): Add avr25, avr31, avr35, and avr51
	architectures. Change comments to match architecture comments in GCC.
	(compatible): Add test for new AVR architectures.
	* elf32-avr.c (bfd_elf_avr_final_write_processing): Recognize
	bfd_mach_avr25, bfd_mach_avr31, bfd_mach_avr35 and bfd_mach_avr51.
	(elf32_avr_object_p): Recognize E_AVR_MACH_AVR25, E_AVR_MACH_AVR31,
	E_AVR_MACH_AVR35 and E_AVR_MACH_AVR51.

gas/
	* config/tc-avr.c (mcu_types): Add avr25, avr31, avr35, and avr51
	architectures. Reorganize list to put mcu types in correct architectures
	and to order list same as in GCC. Use new ISA definitions in
	include/opcode/avr.h.
	* doc/c-avr.texi: Add avr25, avr31, avr35, and avr51 architecture
	descriptions. Reorganize descriptions to put mcu types in correct
	architectures and to order lists same as in GCC.

include/
	* elf/avr.h (E_AVR_MACH_AVR25, E_AVR_MACH_AVR31,
	E_AVR_MACH_AVR35, E_AVR_MACH_AVR51): Define.
	(EF_AVR_MACH): Redefine to 0x7F.
	* opcode/avr.h (AVR_ISA_TINY3, AVR_ISA_ALL, AVR_ISA_USB162): Remove.
	(AVR_ISA_AVR3): Redefine.
	(AVR_ISA_AVR1, AVR_ISA_AVR2, AVR_ISA_AVR31, AVR_ISA_AVR35,
	AVR_ISA_AVR3_ALL, AVR_ISA_AVR4, AVR_ISA_AVR5, AVR_ISA_AVR51,
	AVR_ISA_AVR6): Define.

ld/
	* Makefile.am (ALL_EMULATIONS): Add eavr25.o, eavr31.o, eavr35.o,
	and eavr51.o.
	Add rules for eavr25.c, eavr31.c, eavr35.c, eavr51.c.
	* Makefile.in: Regenerate.
	* configure.tgt (avr-*-*, targ_extra_emuls): Add avr25, avr31, avr35
	and avr51.
	* emulparams/avr25.sh: New file.
	* emulparams/avr31.sh: New file.
	* emulparams/avr35.sh: New file.
	* emulparams/avr51.sh: New file.
@
text
@d69 2
a70 2
atmega16hva, at90can32, at90can64, at90pwm216, at90pwm316, atmega32c1,
atmega32m1, atmega32u4, at90usb646, at90usb647, at94k).
@


1.19
log
@/gas:
2008-06-24  Eric B. Weddington  <eric.weddington@@atmel.com>

	Add support for ATtiny13A.
	* config/tc-avr.c (mcu_types): Add attiny13a.
	* doc/c-avr.texi: Likewise.
@
text
@d40 8
a47 5
8K program memory space (MCU types: at90s2313, at90s2323, attiny22,
attiny26, at90s2333, at90s2343, at90s4414, at90s4433, at90s4434,
at90s8515, at90c8534, at90s8535, at86rf401, attiny13, attiny13a, attiny2313,
attiny261, attiny461, attiny861, attiny24, attiny44, attiny84, attiny25,
attiny45, attiny85, attiny43u, attiny48, attiny88).
d50 7
a56 2
memory space (MCU types: atmega103, at43usb320, at43usb355, at76c711, 
at90usb82, at90usb162, attiny167).
d64 11
a74 9
memory space (MCU types: atmega16, atmega161, atmega162, atmega163,
atmega164p, atmega165, atmega165p, atmega168, atmega168p, atmega169,
atmega169p, atmega32, atmega323, atmega324p, atmega325, atmega325p,
atmega328p, atmega329, atmega329p, atmega3250, atmega3250p, atmega3290,
atmega3290p, atmega406, atmega64, atmega640, atmega644,
atmega644p, atmega128, atmega1280, atmega1281, atmega1284p, atmega645,
atmega649, atmega6450, atmega6490, atmega16hva, at90can32, at90can64,
at90can128, at90pwm216, at90pwm316, atmega32c1, atmega32m1, atmega32u4, 
at90usb646, at90usb647, at90usb1286, at90usb1287, at94k).
d76 2
a77 2
Instruction set avr6 is for the enhanced AVR core with 256K program
memory space (MCU types: atmega2560, atmega2561).
@


1.18
log
@/gas:
2008-06-09  Eric B. Weddington  <eric.weddington@@atmel.com>

	* config/tc-avr.c (mcu_types): Remove support for ATmega32HVB device.
	* doc/c-avr.texi: Likewise.
@
text
@d42 1
a42 1
at90s8515, at90c8534, at90s8535, at86rf401, attiny13, attiny2313,
@


1.17
log
@/gas:
2008-03-28  Eric B. Weddington  <eric.weddington@@atmel.com>

	* config/tc-avr.c (mcu_types): Add attiny167.
	* doc/c-avr.texi: Likewise.

/include:
2008-03-28  Eric B. Weddington  <eric.weddington@@atmel.com>

	* opcode/avr.h (AVR_ISA_TINY3): Define new opcode set for attiny167.
@
text
@d60 1
a60 1
atmega3290p, atmega32hvb, atmega406, atmega64, atmega640, atmega644,
@


1.16
log
@/gas:
2008-03-28  Eric B. Weddington  <eric.weddington@@atmel.com>

	* config/tc-avr.c (mcu_types): Add atmega32u4.
	* doc/c-avr.texi: Likewise.
@
text
@d48 1
a48 1
at90usb82, at90usb162).
@


1.15
log
@/gas:
2008-03-28  Eric B. Weddington  <eric.weddington@@atmel.com>

	* config/tc-avr.c (mcu_types): Add atmega32c1.
	* doc/c-avr.texi: Likewise.
@
text
@d63 2
a64 2
at90can128, at90pwm216, at90pwm316, atmega32c1, atmega32m1, at90usb646,
at90usb647, at90usb1286, at90usb1287, at94k).
@


1.14
log
@  * config/tc-avr.c (mcu_types): Add atmega32m1.
  * doc/c-avr.texi: Likewise.
@
text
@d63 1
a63 1
at90can128, at90pwm216, at90pwm316, atmega32m1, at90usb646,
@


1.13
log
@/gas:
2008-01-03  Eric B. Weddington  <eric.weddington@@atmel.com>

	* config/tc-avr.c (mcu_types): Change opcode set for avr3,
	at90usb82, at90usb162.
	* doc/c-avr.texi: Change architecture grouping for at90usb82,
	at90usb162.
	These changes support the new avr35 architecture group in gcc.

/include:
2008-01-03  Eric B. Weddington  <eric.weddington@@atmel.com>

	* opcode/avr.h (AVR_ISA_USB162): Add new opcode set.
	(AVR_ISA_AVR3): Likewise.
@
text
@d56 9
a64 9
memory space (MCU types: atmega16, atmega161, atmega162, atmega163, 
atmega164p, atmega165, atmega165p, atmega168, atmega168p, atmega169, 
atmega169p, atmega32, atmega323, atmega324p, atmega325, atmega325p, 
atmega328p, atmega329, atmega329p, atmega3250, atmega3250p, atmega3290, 
atmega3290p, atmega32hvb, atmega406, atmega64, atmega640, atmega644, atmega644p, 
atmega128, atmega1280, atmega1281, atmega1284p, atmega645, atmega649, 
atmega6450, atmega6490, atmega16hva, at90can32, at90can64, at90can128, 
at90pwm216, at90pwm316, at90usb646, at90usb647, at90usb1286, at90usb1287,
at94k).
@


1.12
log
@2007-11-16  Eric B. Weddington  <eric.weddington@@atmel.com>

	* config/tc-avr.c (mcu_types): Add ATmega32HVB device.
	* doc/c-avr.texi: Likewise.
@
text
@d47 2
a48 1
memory space (MCU types: atmega103, at43usb320, at43usb355, at76c711).
d63 2
a64 2
at90pwm216, at90pwm316,at90usb82, at90usb162, at90usb646, at90usb647, 
at90usb1286, at90usb1287, at94k).
@


1.11
log
@2007-11-16  Eric B. Weddington  <eric.weddington@@atmel.com>

	* config/tc-avr.c (mcu_types): Add ATmega1284P device.
	* doc/c-avr.texi: Likewise.
@
text
@d59 1
a59 1
atmega3290p, atmega406, atmega64, atmega640, atmega644, atmega644p, 
@


1.10
log
@2007-11-07  Eric B. Weddington  <eweddington@@cso.atmel.com>

	* config/tc-avr.c (mcu_types): Add ATtiny88 device.
	* doc/c-avr.texi: Likewise.
@
text
@d60 4
a63 4
atmega128, atmega1280, atmega1281, atmega645, atmega649, atmega6450, 
atmega6490, atmega16hva, at90can32, at90can64, at90can128, at90pwm216, 
at90pwm316,at90usb82, at90usb162, at90usb646, at90usb647, at90usb1286, 
at90usb1287, at94k).
@


1.9
log
@2007-11-07  Anatoly Sokolov <aesok@@post.ru>

	* config/tc-avr.c (mcu_types): Add new devices: ATmega48P, ATmega88P,
	ATmega168P, Atmega328P
	* doc/c-avr.texi: Document new devices.
@
text
@d44 1
a44 1
attiny45, attiny85, attiny43u, attiny48).
@


1.8
log
@2007-10-31  Eric B. Weddington  <eweddington@@cso.atmel.com>

	* config/tc-avr.c (mcu_types): Remove devices that were never produced:
	attiny10, atmega83, atmega85, atmega603.
	* doc/c-avr.texi: Likewise.
@
text
@d47 1
a47 2
memory space (MCU types: atmega103, at43usb320, at43usb355,
at76c711).
d50 1
a50 1
memory space (MCU types: atmega48, atmega8, atmega88,
d55 9
a63 9
memory space (MCU types: atmega16, atmega161, atmega162, atmega163,
atmega164p, atmega165, atmega165p, atmega168, atmega169, atmega169p, 
atmega32, atmega323, atmega324p, atmega325, atmega325p, atmega329, 
atmega329p, atmega3250, atmega3250p, atmega3290, atmega3290p, atmega406, 
atmega64, atmega640, atmega644, atmega644p, atmega128, atmega1280, 
atmega1281, atmega645, atmega649, atmega6450, atmega6490, atmega16hva, 
at90can32, at90can64, at90can128, at90pwm216, at90pwm316,
at90usb82, at90usb162, at90usb646,
at90usb647, at90usb1286, at90usb1287, at94k).
@


1.7
log
@* config/tc-avr.c (mcu_types): Add new devices: AT90PWM2B, AT90PWM3B.
* doc/c-avr.texi: Document new devices.
@
text
@d36 1
a36 1
compiler, only for assembler programs (MCU types: at90s1200, attiny10,
d47 1
a47 1
memory space (MCU types: atmega103, atmega603, at43usb320, at43usb355,
d51 1
a51 1
memory space (MCU types: atmega48, atmega8, atmega83, atmega85, atmega88,
@


1.6
log
@* config/tc-avr.c (mcu_types): Add new devices: AT90PWM216, AT90PWM316.
* doc/c-avr.texi: Document new devices.
@
text
@d52 2
a53 1
atmega8515, atmega8535, atmega8hva, at90pwm1, at90pwm2, at90pwm3).
@


1.5
log
@* config/tc-avr.c (mcu_types): Add new devices: ATtiny43U, ATtiny48.
* doc/c-avr.texi: Document new devices.
@
text
@d61 2
a62 1
at90can32, at90can64, at90can128, at90usb82, at90usb162, at90usb646, 
@


1.4
log
@	* config/tc-avr.c (mcu_types): Add support for atmega8hva and
	atmega16hva devices. Move at90usb82 device to 'avr5' architecture.
	* doc/c-avr.texi: Document new devices.
@
text
@d44 1
a44 1
attiny45, attiny85).
@


1.3
log
@Fix spelling typos
@
text
@d52 1
a52 1
atmega8515, atmega8535, at90pwm2, at90pwm3).
d57 6
a62 5
atmega32, atmega323, atmega324p, atmega325, atmega329, atmega3250, 
atmega3290, atmega406, atmega64, atmega640, atmega644, atmega644p, 
atmega128, atmega1280, atmega1281, atmega645, atmega649, atmega6450, 
atmega6490, at90can32, at90can64, at90can128, at90usb646, at90usb647, 
at90usb1286, at90usb1287, at94k).
@


1.2
log
@	* config/tc-avr.c (mcu_types): Add support for atmega165p, atmega169p
	and atmega644p devices. Rename atmega164/atmega324 devices to
	atmega164p/atmega324p.
	* doc/c-avr.texi: Document new mcu and arch options.
@
text
@d112 1
a112 1
The AVR has 32 x 8-bit general purpouse working registers @@samp{r0},
@


1.1
log
@	* doc/c-avr.texi: New file.
	* doc/Makefile.am (CPU_DOCS): Add c-avr.texi
	* doc/all.texi: Set AVR
	* doc/as.texinfo: Include c-avr.texi
@
text
@d56 9
a64 5
atmega164, atmega165, atmega168, atmega169, atmega32, atmega323,
atmega324, atmega325, atmega329, atmega3250, atmega3290, atmega406,
atmega64, atmega640, atmega644, atmega128, atmega1280, atmega1281, 
atmega645, atmega649, atmega6450, atmega6490, at90can32, at90can64,
at90can128, at90usb646, at90usb647, at90usb1286, at90usb1287, at94k).
@

