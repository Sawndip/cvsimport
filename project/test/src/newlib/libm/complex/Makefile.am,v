head	1.3;
access;
symbols
	cygwin-1_7_35-release:1.3
	cygwin-1_7_34-release:1.2
	newlib-2_2_0:1.2.0.6
	cygwin-1_7_33-release:1.2
	cygwin-1_7_32-release:1.2
	cygwin-1_7_31-release:1.2
	cygwin-1_7_30-release:1.2
	cygwin-1_7_29-release:1.2
	cygwin-1_7_28-release:1.2
	newlib-2_1_0:1.2
	cygwin-1_7_27-release:1.2
	cygwin-1_7_26-release:1.2
	cygwin-1_7_25-release:1.2
	cygwin-1_7_24-release:1.2
	cygwin-1_7_23-release:1.2
	cygwin-1_7_22-release:1.2
	cygwin-1_7_21-release:1.2
	cygwin-1_7_20-release:1.2
	cygwin-1_7_19-release:1.2
	cygwin-64bit-postmerge:1.2
	cygwin-64bit-premerge-branch:1.2.0.4
	cygwin-64bit-premerge:1.2
	cygwin-1_7_18-release:1.2
	newlib-2_0_0:1.2
	cygwin-1_7_17-release:1.2
	cygwin-64bit-branch:1.2.0.2
	cygwin-1_7_16-release:1.2
	cygwin-1_7_15-release:1.2
	cygwin-1_7_14_2-release:1.2
	cygwin-1_7_14-release:1.2
	cygwin-1_7_12-release:1.2
	cygwin-1_7_11-release:1.2
	cygwin-1_7_10-release:1.2
	newlib-1_20_0:1.2
	cygwin-1_7_9-release:1.2
	cygwin-1_7_8-release:1.2
	newlib-1_19_0:1.2;
locks; strict;
comment	@# @;


1.3
date	2015.02.06.16.14.03;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	2010.10.18.22.40.24;	author jjohnstn;	state Exp;
branches;
next	1.1;

1.1
date	2010.10.08.10.35.14;	author corinna;	state Exp;
branches;
next	;


desc
@@


1.3
log
@	* libc/include/complex.h (cabsl): Add prototype.
	(cimagl): Add prototype.
	(creall): Add prototype.
	* libc/include/ieeefp.h: Include float.h.
	(EXT_EXPBITS, EXT_FRACHBITS, EXT_FRACLBITS)
	(EXT_EXP_INFNAN. EXT_EXP_BIAS, EXT_FRACBITS): Define.
	(struct ieee_ext, union ieee_ext_u): New types for long double
	support.
	* libc/include/math.h (finitel): Add prototype.
	(hypotl): Add prototype.
	(sqrtl): Add prototype.
	* libm/common/Makefile.am (lsrc): Add sl_finite.c.
	* libm/common/Makefile.in: Regenerate.
	* libm/common/fdlibm.h (__ieee754_hypotl): Add prototype.
	* libm/common/hypotl.c (hypotl): Add implementation for when long
	double is larger than double.
	* libm/common/sqrtl.c (sqrtl): Likewise.
	* libm/common/sl_finite.c: New file.  Adds implementation of the
	finitel function.
	* libm/complex/Makefile.am (lsrc): Define.
	(libcomplex_la_SOURCES): Add lsrc.
	(lib_a_SOURCES): Add lsrc.
	* libm/complex/Makefile.in: Regenerate.
	* libm/complex/cabs.c: Add documentation of cabsl function.
	* libm/complex/cimag.c: Add documentation of cimagl function.
	* libm/complex/creall.c: Add documentation of creall function.
	* libm/complex/cabsl.c: New file.  Adds implementation of the
	cabsl function.
	* libm/complex/cimagl.c: New file.  Adds implementation of the
	cimagl function.
	* libm/complex/creall.c: New file.  Adds implementation of the
	creall function.
	* libm/math/Makefile.am (lsrc): Define.
	(libmath_la_SOURCES): Add lsrc.
	(lib_a_SOURCES): Add lsrc.
	* libm/math/Makefile.in: Regenerate.
	* libm/math/el_hypot.c: New file.  Adds implementation of the
	__ieee754_hypotl function.
@
text
@## Process this file with automake to generate Makefile.in

AUTOMAKE_OPTIONS = cygnus

INCLUDES = -I$(srcdir)/../common -I$(srcdir)/ $(NEWLIB_CFLAGS) $(CROSS_CFLAGS) $(TARGET_CFLAGS)

src = cabs.c cacos.c cacosh.c carg.c casin.c casinh.c \
      catan.c catanh.c ccos.c ccosh.c cephes_subr.c \
      cexp.c cimag.c  clog.c conj.c  \
      cpow.c cproj.c  creal.c  \
      csin.c csinh.c csqrt.c ctan.c ctanh.c

lsrc = cabsl.c creall.c cimagl.c

fsrc =	cabsf.c casinf.c ccosf.c cimagf.c cprojf.c  \
        csqrtf.c cacosf.c casinhf.c ccoshf.c clogf.c \
        crealf.c ctanf.c cacoshf.c catanf.c   \
        cephes_subrf.c conjf.c csinf.c ctanhf.c \
        cargf.c catanhf.c cexpf.c cpowf.c csinhf.c

libcomplex_la_LDFLAGS = -Xcompiler -nostdlib

if USE_LIBTOOL
noinst_LTLIBRARIES = libcomplex.la
libcomplex_la_SOURCES = $(src) $(fsrc) $(lsrc)
noinst_DATA = objectlist.awk.in
else
noinst_LIBRARIES = lib.a
lib_a_SOURCES = $(src) $(fsrc) $(lsrc)
lib_a_CFLAGS = $(AM_CFLAGS)
noinst_DATA =
endif # USE_LIBTOOL

include $(srcdir)/../../Makefile.shared

chobj =	cabs.def cacos.def cacosh.def carg.def \
        casin.def casinh.def catan.def catanh.def \
        ccos.def ccosh.def cexp.def cimag.def clog.def \
        conj.def cpow.def cproj.def creal.def \
        csin.def csinh.def csqrt.def ctan.def ctanh.def


SUFFIXES = .def

CHEW = ../../doc/makedoc -f $(srcdir)/../../doc/doc.str

.c.def:
	$(CHEW) < $< > $*.def 2> $*.ref
	touch stmp-def

TARGETDOC = ../tmp.texi

doc: $(chobj)
	cat $(srcdir)/complex.tex >> $(TARGETDOC)

CLEANFILES = $(chobj) *.ref

# A partial dependency list.

$(lib_a_OBJECTS): $(srcdir)/../../libc/include/complex.h $(srcdir)/cephes_subr.h $(srcdir)/cephes_subrf.h
@


1.2
log
@
2010-10-18  Marco Atzeri  <marco_atzeri@@yahoo.it>

        * libm/Makefile.am: added complex functions documentation
        * libm/libm.texinfo: ditto
        * libm/complex/Makefile.am: Ditto
        * libm/complex/complex.tex: Ditto
        * libm/complex/(cabs.c, cacos.c, cacosh.c, carg.c,
        casin.c, casinh.c, catan.c, catanh.c, ccos.c, ccosh.c,
        cexp.c, cimag.c, clog.c, conj.c, cpow.c, cproj.c, creal.c,
        csin.c, csinh.c, csqrt.c, ctan.c, ctanh.c): Ditto
        * libm/Makefile.in: Regenerate
        * libm/complex/Makefile.in: Ditto
@
text
@d12 2
a13 1
	
d25 1
a25 1
libcomplex_la_SOURCES = $(src) $(fsrc)
d29 1
a29 1
lib_a_SOURCES = $(src) $(fsrc)
@


1.1
log
@	* libc/include/complex.h: New complex header.
	* libm/common/fdlibm.h: Added ifdef _COMPLEX_H.
	* libm/complex/*: New complex functions imported from NetBSD.
	* libm/Makefile.am: Added complex subdir.
	* libm/Makefile.in: Regenerate.
	* libm/configure.in: Added complex subdir.
	* libm/configure: Regenerate.
@
text
@d35 6
a40 1
chobj =	
@

