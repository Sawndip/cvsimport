head	1.4;
access;
symbols
	cygwin-1_7_35-release:1.4
	cygwin-1_7_34-release:1.4
	newlib-2_2_0:1.4.0.8
	cygwin-1_7_33-release:1.4
	cygwin-1_7_32-release:1.4
	cygwin-1_7_31-release:1.4
	cygwin-1_7_30-release:1.4
	cygwin-1_7_29-release:1.4
	cygwin-1_7_28-release:1.4
	newlib-2_1_0:1.4
	cygwin-1_7_27-release:1.4
	cygwin-1_7_26-release:1.4
	cygwin-1_7_25-release:1.4
	cygwin-1_7_24-release:1.4
	cygwin-1_7_23-release:1.4
	cygwin-1_7_22-release:1.4
	cygwin-1_7_21-release:1.4
	cygwin-1_7_20-release:1.4
	cygwin-1_7_19-release:1.4
	cygwin-64bit-postmerge:1.4
	cygwin-64bit-premerge-branch:1.4.0.6
	cygwin-64bit-premerge:1.4
	cygwin-1_7_18-release:1.4
	newlib-2_0_0:1.4
	cygwin-1_7_17-release:1.4
	cygwin-64bit-branch:1.4.0.4
	cygwin-1_7_16-release:1.4
	cygwin-1_7_15-release:1.4
	cygwin-1_7_14_2-release:1.4
	cygwin-1_7_14-release:1.4
	cygwin-1_7_12-release:1.4
	cygwin-1_7_11-release:1.4
	cygwin-1_7_10-release:1.4
	newlib-1_20_0:1.4
	cygwin-1_7_9-release:1.4
	newlib-1_19_0:1.4
	cygwin-1_7_5-release:1.4
	cygwin-1_7_4-release:1.4
	cygwin-1_7_3-release:1.4
	cygwin-1_7_2-release:1.4
	newlib-1_18_0:1.4
	cygwin-1_7_1-release:1.4
	newlib-1_17_0-arc:1.4.0.2
	binutils-arc-20080908-branch:1.3.0.2
	binutils-arc-20080908-branchpoint:1.3
	newlib-1_17_0:1.4
	newlib-1_16_0:1.2;
locks; strict;
comment	@ * @;


1.4
date	2008.11.26.19.59.25;	author jjohnstn;	state Exp;
branches;
next	1.3;

1.3
date	2008.09.04.17.50.56;	author jjohnstn;	state Exp;
branches;
next	1.2;

1.2
date	2007.10.09.04.24.11;	author bje;	state Exp;
branches;
next	1.1;

1.1
date	2007.09.28.18.44.24;	author jjohnstn;	state Exp;
branches;
next	;


desc
@@


1.4
log
@
2008-11-26 Ken Werner <ken.werner@@de.ibm.com>

        * libm/machine/spu/headers/acosd2.h: Rebase against current simdmath.
        * libm/machine/spu/headers/asind2.h: Likewise.
        * libm/machine/spu/headers/asinhf4.h: Likewise.
        * libm/machine/spu/headers/divd2.h: Likewise.
        * libm/machine/spu/headers/erf_utils.h: Likewise.
        * libm/machine/spu/headers/erfcd2.h: Likewise.
        * libm/machine/spu/headers/erfcf4.h: Likewise.
        * libm/machine/spu/headers/erfd2.h: Likewise.
        * libm/machine/spu/headers/recipd2.h: Likewise.
@
text
@/* --------------------------------------------------------------  */
/* (C)Copyright 2006,2008,                                         */
/* International Business Machines Corporation                     */
/* All Rights Reserved.                                            */
/*                                                                 */
/* Redistribution and use in source and binary forms, with or      */
/* without modification, are permitted provided that the           */
/* following conditions are met:                                   */
/*                                                                 */
/* - Redistributions of source code must retain the above copyright*/
/*   notice, this list of conditions and the following disclaimer. */
/*                                                                 */
/* - Redistributions in binary form must reproduce the above       */
/*   copyright notice, this list of conditions and the following   */
/*   disclaimer in the documentation and/or other materials        */
/*   provided with the distribution.                               */
/*                                                                 */
/* - Neither the name of IBM Corporation nor the names of its      */
/*   contributors may be used to endorse or promote products       */
/*   derived from this software without specific prior written     */
/*   permission.                                                   */
/*                                                                 */
/* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND          */
/* CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,     */
/* INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF        */
/* MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE        */
/* DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR            */
/* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,    */
/* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT    */
/* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;    */
/* LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)        */
/* HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN       */
/* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR    */
/* OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,  */
/* EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.              */
/* --------------------------------------------------------------  */
/* PROLOG END TAG zYx                                              */

#ifdef __SPU__

#ifndef _ASIND2_H_
#define _ASIND2_H_	1

#include "simdmath.h"
#include <spu_intrinsics.h>
#include "sqrtd2.h"
#include "divd2.h"



/*
 * FUNCTION
 *	vector double _asind2(vector double x)
 *
 * DESCRIPTION
 * 	Compute the arc sine of the vector of double precision elements 
 * 	specified by x, returning the resulting angles in radians. The input
 *      elements are to be in the closed interval [-1, 1]. Values outside 
 *      this range result in a invalid operation execption being latched in 
 *	the FPSCR register and a NAN is returned.
 *
 * 	The basic algorithm computes the arc sine using a rational polynomial
 * 	of the form x + x^3 * P(x^2) / Q(x^2) for inputs |x| in the interval 
 *      [0, 0.5]. Values outsize this range are transformed as by:
 * 
 * 	asin(x) =  PI/2 - 2*asin(sqrt((1-x)/2)) for x in the range (0.5, 1.0]
 * 
 * 	asin(x) = -PI/2 + 2*asin(sqrt((1+x)/2)) for x in the range [-1.0, -0.5)
 *
 * 	This yields the basic algorithm of:
 *
 *	   absx = (x < 0.0) ? -x : x;
 *	 
 *	   if (absx > 0.5) {
 *	     if (x < 0) {
 *	       addend = -SM_PI_2;
 *	       multiplier = -2.0;
 *	     } else {
 *	       addend = SM_PI_2;
 *	       multiplier = 2.0;
 *	     }
 *	
 *	     x = sqrt(-0.5 * absx + 0.5);
 *	   } else {
 *	     addend = 0.0;
 *	     multiplier = 1.0;
 *	   }
 *	
 *	    x2 = x * x;
 *	    x3 = x2 * x;
 *
 *	    p = ((((P5 * x2 + P4)*x2 + P3)*x2 + P2)*x2 + P1)*x2 + P0;
 *	 
 *	    q = ((((Q5 * x2 + Q4)*x2 + Q3)*x2 + Q2)*x2 + Q1)*x2 + Q0;;
 *	
 *	    pq = p / q;
 *	
 *	    result = addend - (x3*pq + x)*multiplier;
 *
 *	 Where P5-P0 and Q5-Q0 are the polynomial coeficients.
 */
static __inline vector double _asind2(vector double x)
{
  vec_uint4   x_gt_half, x_eq_half;
  vec_double2 x_abs;			// absolute value of x
  vec_double2 x_trans;			// transformed x when |x| > 0.5
  vec_double2 x2, x3;			// x squared and x cubed, respectively.
  vec_double2 result;
  vec_double2 multiplier, addend; 
  vec_double2 p, q, pq;
  vec_double2 half = spu_splats(0.5);
  vec_double2 sign = (vec_double2)spu_splats(0x8000000000000000ULL);
  vec_uchar16 splat_hi = ((vec_uchar16){0,1,2,3, 0,1,2,3, 8,9,10,11, 8,9,10,11});
  
  // Compute the absolute value of x
  x_abs = spu_andc(x, sign);
  
  // Perform transformation for the case where |x| > 0.5. We rely on
  // sqrtd2 producing a NAN is |x| > 1.0.
  x_trans = _sqrtd2(spu_nmsub(x_abs, half, half));
  
  // Determine the correct addend and multiplier.
  x_gt_half = spu_cmpgt((vec_uint4)x_abs, (vec_uint4)half);
  x_eq_half = spu_cmpeq((vec_uint4)x_abs, (vec_uint4)half);
  x_gt_half = spu_or(x_gt_half, spu_and(x_eq_half, spu_rlqwbyte(x_gt_half, 4)));
  x_gt_half = spu_shuffle(x_gt_half, x_gt_half, splat_hi);

  addend = spu_and(spu_sel(spu_splats((double)SM_PI_2), x, (vec_ullong2)sign), (vec_double2)x_gt_half);

  multiplier = spu_sel(spu_splats(-1.0), spu_sel(spu_splats(2.0), x, (vec_ullong2)sign), (vec_ullong2)x_gt_half);

  // Select whether to use the x or the transformed x for the polygon evaluation.
  // if |x| > 0.5 use x_trans
  // else         use x

  x = spu_sel(x, x_trans, (vec_ullong2)x_gt_half);

  // Compute the polynomials.

  x2 = spu_mul(x, x);
  x3 = spu_mul(x2, x);
  
  p = spu_madd(spu_splats(0.004253011369004428248960), x2, spu_splats(-0.6019598008014123785661));
  p = spu_madd(p, x2, spu_splats(5.444622390564711410273));
  p = spu_madd(p, x2, spu_splats(-16.26247967210700244449));
  p = spu_madd(p, x2, spu_splats(19.56261983317594739197));
  p = spu_madd(p, x2, spu_splats(-8.198089802484824371615));

  q = spu_add(x2, spu_splats(-14.74091372988853791896));
  q = spu_madd(q, x2, spu_splats(70.49610280856842141659));
  q = spu_madd(q, x2, spu_splats(-147.1791292232726029859));
  q = spu_madd(q, x2, spu_splats(139.5105614657485689735));
  q = spu_madd(q, x2, spu_splats(-49.18853881490881290097));
  
  // Compute the rational solution p/q and final multiplication and addend 
  // correction.
  pq = _divd2(p, q);

  result = spu_nmsub(spu_madd(x3, pq, x), multiplier, addend);

  return (result);
}

#endif /* _ASIND2_H_ */
#endif /* __SPU__ */
@


1.3
log
@
2008-09-04  Ken Werner  <ken.werner@@de.ibm.com>

        * libm/machine/spu/headers/acosd2.h: Duplicated preamble text removed.
        * libm/machine/spu/headers/acosf4.h: Likewise.
        * libm/machine/spu/headers/acoshd2.h: Likewise.
        * libm/machine/spu/headers/acoshf4.h: Likewise.
        * libm/machine/spu/headers/asind2.h: Likewise.
        * libm/machine/spu/headers/asinf4.h: Likewise.
        * libm/machine/spu/headers/asinhd2.h: Likewise.
        * libm/machine/spu/headers/asinhf4.h: Likewise.
        * libm/machine/spu/headers/atan2d2.h: Likewise.
        * libm/machine/spu/headers/atan2f4.h: Likewise.
        * libm/machine/spu/headers/atand2.h: Likewise.
        * libm/machine/spu/headers/atanf4.h: Likewise.
        * libm/machine/spu/headers/atanhd2.h: Likewise.
        * libm/machine/spu/headers/atanhf4.h: Likewise.
        * libm/machine/spu/headers/cos_sin.h: Likewise.
        * libm/machine/spu/headers/cosd2.h: Likewise.
        * libm/machine/spu/headers/cosf4.h: Likewise.
        * libm/machine/spu/headers/coshd2.h: Likewise.
        * libm/machine/spu/headers/coshf4.h: Likewise.
        * libm/machine/spu/headers/divd2.h: Likewise.
        * libm/machine/spu/headers/divf4.h: Likewise.
        * libm/machine/spu/headers/erf_utils.h: Likewise.
        * libm/machine/spu/headers/erfcd2.h: Likewise.
        * libm/machine/spu/headers/erfcf4.h: Likewise.
        * libm/machine/spu/headers/erfd2.h: Likewise.
        * libm/machine/spu/headers/erff4.h: Likewise.
        * libm/machine/spu/headers/exp2d2.h: Likewise.
        * libm/machine/spu/headers/exp2f4.h: Likewise.
        * libm/machine/spu/headers/expd2.h: Likewise.
        * libm/machine/spu/headers/expf4.h: Likewise.
        * libm/machine/spu/headers/expm1d2.h: Likewise.
        * libm/machine/spu/headers/expm1f4.h: Likewise.
        * libm/machine/spu/headers/floord2.h: Likewise.
        * libm/machine/spu/headers/floorf4.h: Likewise.
        * libm/machine/spu/headers/hypotd2.h: Likewise.
        * libm/machine/spu/headers/hypotf4.h: Likewise.
        * libm/machine/spu/headers/isnand2.h: Likewise.
        * libm/machine/spu/headers/isnanf4.h: Likewise.
        * libm/machine/spu/headers/ldexpd2.h: Likewise.
        * libm/machine/spu/headers/ldexpf4.h: Likewise.
        * libm/machine/spu/headers/lgammad2.h: Likewise.
        * libm/machine/spu/headers/lgammaf4.h: Likewise.
        * libm/machine/spu/headers/log10d2.h: Likewise.
        * libm/machine/spu/headers/log1pd2.h: Likewise.
        * libm/machine/spu/headers/log1pf4.h: Likewise.
        * libm/machine/spu/headers/log2d2.h: Likewise.
        * libm/machine/spu/headers/log2f4.h: Likewise.
        * libm/machine/spu/headers/logbf4.h: Likewise.
        * libm/machine/spu/headers/logd2.h: Likewise.
        * libm/machine/spu/headers/logf4.h: Likewise.
        * libm/machine/spu/headers/nearbyintf4.h: Likewise.
        * libm/machine/spu/headers/nextafterd2.h: Likewise.
        * libm/machine/spu/headers/nextafterf4.h: Likewise.
        * libm/machine/spu/headers/powd2.h: Likewise.
        * libm/machine/spu/headers/powf4.h: Likewise.
        * libm/machine/spu/headers/recipd2.h: Likewise.
        * libm/machine/spu/headers/recipf4.h: Likewise.
        * libm/machine/spu/headers/rintf4.h: Likewise.
        * libm/machine/spu/headers/scalbnf4.h: Likewise.
        * libm/machine/spu/headers/signbitd2.h: Likewise.
        * libm/machine/spu/headers/sincosd2.h: Likewise.
        * libm/machine/spu/headers/sincosf4.h: Likewise.
        * libm/machine/spu/headers/sind2.h: Likewise.
        * libm/machine/spu/headers/sinf4.h: Likewise.
        * libm/machine/spu/headers/sinhd2.h: Likewise.
        * libm/machine/spu/headers/sinhf4.h: Likewise.
        * libm/machine/spu/headers/sqrtd2.h: Likewise.
        * libm/machine/spu/headers/sqrtf4.h: Likewise.
        * libm/machine/spu/headers/tand2.h: Likewise.
        * libm/machine/spu/headers/tanf4.h: Likewise.
        * libm/machine/spu/headers/tanhd2.h: Likewise.
        * libm/machine/spu/headers/tanhf4.h: Likewise.
        * libm/machine/spu/headers/tgammad2.h: Likewise.
        * libm/machine/spu/headers/tgammaf4.h: Likewise.
        * libm/machine/spu/headers/truncd2.h: Likewise.
        * libm/machine/spu/headers/truncf4.h: Likewise.
        * libm/machine/spu/headers/simdmath.h: Likewise.
@
text
@d44 1
a45 2

#include "simdmath.h"
@


1.2
log
@	* libm/machine/spu/headers/acosd2.h: Include spu_intrinsics.h
	before simdmath.h to get a definition for `vector'.
	* libm/machine/spu/headers/asind2.h: Likewise.
@
text
@d2 1
a2 1
/* (C)Copyright 2006,2007,                                         */
a21 12
/* Redistributions of source code must retain the above copyright  */
/* notice, this list of conditions and the following disclaimer.   */
/*                                                                 */
/* Redistributions in binary form must reproduce the above         */
/* copyright notice, this list of conditions and the following     */
/* disclaimer in the documentation and/or other materials          */
/* provided with the distribution.                                 */
/*                                                                 */
/* Neither the name of IBM Corporation nor the names of its        */
/* contributors may be used to endorse or promote products         */
/* derived from this software without specific prior written       */
/* permission.                                                     */
@


1.1
log
@
2007-09-28  Patrick Mansfield  <patmans@@us.ibm.com>

	* libm/machine/spu/Makefile.am: Add new C files.
	* libm/machine/spu/Makefile.in: Regenerate.
	* libm/machine/spu/headers/acos.h: New file.
	* libm/machine/spu/headers/acosd2.h: Ditto.
	* libm/machine/spu/headers/acosf.h: Ditto.
	* libm/machine/spu/headers/acosf4.h: Ditto.
	* libm/machine/spu/headers/acosh.h: Ditto.
	* libm/machine/spu/headers/acoshd2.h: Ditto.
	* libm/machine/spu/headers/acoshf.h: Ditto.
	* libm/machine/spu/headers/acoshf4.h: Ditto.
	* libm/machine/spu/headers/asin.h: Ditto.
	* libm/machine/spu/headers/asind2.h: Ditto.
	* libm/machine/spu/headers/asinf.h: Ditto.
	* libm/machine/spu/headers/asinf4.h: Ditto.
	* libm/machine/spu/headers/asinh.h: Ditto.
	* libm/machine/spu/headers/asinhd2.h: Ditto.
	* libm/machine/spu/headers/asinhf.h: Ditto.
	* libm/machine/spu/headers/asinhf4.h: Ditto.
	* libm/machine/spu/headers/atan.h: Ditto.
	* libm/machine/spu/headers/atan2.h: Ditto.
	* libm/machine/spu/headers/atan2d2.h: Ditto.
	* libm/machine/spu/headers/atan2f.h: Ditto.
	* libm/machine/spu/headers/atan2f4.h: Ditto.
	* libm/machine/spu/headers/atand2.h: Ditto.
	* libm/machine/spu/headers/atanf4.h: Ditto.
	* libm/machine/spu/headers/atanh.h: Ditto.
	* libm/machine/spu/headers/atanhd2.h: Ditto.
	* libm/machine/spu/headers/atanhf.h: Ditto.
	* libm/machine/spu/headers/atanhf4.h: Ditto.
	* libm/machine/spu/headers/cos.h: Ditto.
	* libm/machine/spu/headers/cos_sin.h: Ditto.
	* libm/machine/spu/headers/cosd2.h: Ditto.
	* libm/machine/spu/headers/cosf.h: Ditto.
	* libm/machine/spu/headers/cosf4.h: Ditto.
	* libm/machine/spu/headers/cosh.h: Ditto.
	* libm/machine/spu/headers/coshd2.h: Ditto.
	* libm/machine/spu/headers/coshf.h: Ditto.
	* libm/machine/spu/headers/coshf4.h: Ditto.
	* libm/machine/spu/headers/divd2.h: Ditto.
	* libm/machine/spu/headers/divf4.h: Ditto.
	* libm/machine/spu/headers/erf.h: Ditto.
	* libm/machine/spu/headers/erf_utils.h: Ditto.
	* libm/machine/spu/headers/erfc.h: Ditto.
	* libm/machine/spu/headers/erfcd2.h: Ditto.
	* libm/machine/spu/headers/erfcf.h: Ditto.
	* libm/machine/spu/headers/erfcf4.h: Ditto.
	* libm/machine/spu/headers/erfd2.h: Ditto.
	* libm/machine/spu/headers/erff.h: Ditto.
	* libm/machine/spu/headers/erff4.h: Ditto.
	* libm/machine/spu/headers/exp.h: Ditto.
	* libm/machine/spu/headers/exp2.h: Ditto.
	* libm/machine/spu/headers/exp2d2.h: Ditto.
	* libm/machine/spu/headers/exp2f4.h: Ditto.
	* libm/machine/spu/headers/expd2.h: Ditto.
	* libm/machine/spu/headers/expf4.h: Ditto.
	* libm/machine/spu/headers/expm1.h: Ditto.
	* libm/machine/spu/headers/expm1d2.h: Ditto.
	* libm/machine/spu/headers/expm1f.h: Ditto.
	* libm/machine/spu/headers/expm1f4.h: Ditto.
	* libm/machine/spu/headers/floord2.h: Ditto.
	* libm/machine/spu/headers/floorf4.h: Ditto.
	* libm/machine/spu/headers/hypot.h: Ditto.
	* libm/machine/spu/headers/hypotd2.h: Ditto.
	* libm/machine/spu/headers/hypotf.h: Ditto.
	* libm/machine/spu/headers/hypotf4.h: Ditto.
	* libm/machine/spu/headers/isnan.h: Ditto.
	* libm/machine/spu/headers/isnand2.h: Ditto.
	* libm/machine/spu/headers/isnanf.h: Ditto.
	* libm/machine/spu/headers/isnanf4.h: Ditto.
	* libm/machine/spu/headers/ldexpd2.h: Ditto.
	* libm/machine/spu/headers/ldexpf4.h: Ditto.
	* libm/machine/spu/headers/lgamma.h: Ditto.
	* libm/machine/spu/headers/lgammad2.h: Ditto.
	* libm/machine/spu/headers/lgammaf.h: Ditto.
	* libm/machine/spu/headers/lgammaf4.h: Ditto.
	* libm/machine/spu/headers/log.h: Ditto.
	* libm/machine/spu/headers/log10.h: Ditto.
	* libm/machine/spu/headers/log10d2.h: Ditto.
	* libm/machine/spu/headers/log1p.h: Ditto.
	* libm/machine/spu/headers/log1pd2.h: Ditto.
	* libm/machine/spu/headers/log1pf.h: Ditto.
	* libm/machine/spu/headers/log1pf4.h: Ditto.
	* libm/machine/spu/headers/log2.h: Ditto.
	* libm/machine/spu/headers/log2d2.h: Ditto.
	* libm/machine/spu/headers/log2f4.h: Ditto.
	* libm/machine/spu/headers/logbf.h: Ditto.
	* libm/machine/spu/headers/logbf4.h: Ditto.
	* libm/machine/spu/headers/logd2.h: Ditto.
	* libm/machine/spu/headers/logf4.h: Ditto.
	* libm/machine/spu/headers/nearbyintf.h: Ditto.
	* libm/machine/spu/headers/nearbyintf4.h: Ditto.
	* libm/machine/spu/headers/nextafter.h: Ditto.
	* libm/machine/spu/headers/nextafterd2.h: Ditto.
	* libm/machine/spu/headers/nextafterf.h: Ditto.
	* libm/machine/spu/headers/nextafterf4.h: Ditto.
	* libm/machine/spu/headers/pow.h: Ditto.
	* libm/machine/spu/headers/powd2.h: Ditto.
	* libm/machine/spu/headers/powf.h: Ditto.
	* libm/machine/spu/headers/powf4.h: Ditto.
	* libm/machine/spu/headers/recipd2.h: Ditto.
	* libm/machine/spu/headers/recipf4.h: Ditto.
	* libm/machine/spu/headers/rintf.h: Ditto.
	* libm/machine/spu/headers/rintf4.h: Ditto.
	* libm/machine/spu/headers/scalbnf4.h: Ditto.
	* libm/machine/spu/headers/signbit.h: Ditto.
	* libm/machine/spu/headers/signbitd2.h: Ditto.
	* libm/machine/spu/headers/simdmath.h: Ditto.
	* libm/machine/spu/headers/sin.h: Ditto.
	* libm/machine/spu/headers/sincos.h: Ditto.
	* libm/machine/spu/headers/sincosd2.h: Ditto.
	* libm/machine/spu/headers/sincosf.h: Ditto.
	* libm/machine/spu/headers/sincosf4.h: Ditto.
	* libm/machine/spu/headers/sind2.h: Ditto.
	* libm/machine/spu/headers/sinf.h: Ditto.
	* libm/machine/spu/headers/sinf4.h: Ditto.
	* libm/machine/spu/headers/sinh.h: Ditto.
	* libm/machine/spu/headers/sinhd2.h: Ditto.
	* libm/machine/spu/headers/sinhf.h: Ditto.
	* libm/machine/spu/headers/sinhf4.h: Ditto.
	* libm/machine/spu/headers/sqrtd2.h: Ditto.
	* libm/machine/spu/headers/sqrtf.h: Ditto.
	* libm/machine/spu/headers/sqrtf4.h: Ditto.
	* libm/machine/spu/headers/tan.h: Ditto.
	* libm/machine/spu/headers/tand2.h: Ditto.
	* libm/machine/spu/headers/tanf.h: Ditto.
	* libm/machine/spu/headers/tanf4.h: Ditto.
	* libm/machine/spu/headers/tanh.h: Ditto.
	* libm/machine/spu/headers/tanhd2.h: Ditto.
	* libm/machine/spu/headers/tanhf.h: Ditto.
	* libm/machine/spu/headers/tanhf4.h: Ditto.
	* libm/machine/spu/headers/tgamma.h: Ditto.
	* libm/machine/spu/headers/tgammad2.h: Ditto.
	* libm/machine/spu/headers/tgammaf.h: Ditto.
	* libm/machine/spu/headers/tgammaf4.h: Ditto.
	* libm/machine/spu/headers/truncd2.h: Ditto.
	* libm/machine/spu/headers/truncf4.h: Ditto.
	* libm/machine/spu/log2.c: Ditto.
	* libm/machine/spu/s_asinh.c: Ditto.
	* libm/machine/spu/s_atan.c: Ditto.
	* libm/machine/spu/s_cos.c: Ditto.
	* libm/machine/spu/s_erf.c: Ditto.
	* libm/machine/spu/s_expm1.c: Ditto.
	* libm/machine/spu/s_isnan.c: Ditto.
	* libm/machine/spu/s_log1p.c: Ditto.
	* libm/machine/spu/s_nextafter.c: Ditto.
	* libm/machine/spu/s_sin.c: Ditto.
	* libm/machine/spu/s_tan.c: Ditto.
	* libm/machine/spu/s_tanh.c: Ditto.
	* libm/machine/spu/sf_asinh.c: Ditto.
	* libm/machine/spu/sf_cos.c: Ditto.
	* libm/machine/spu/sf_erf.c: Ditto.
	* libm/machine/spu/sf_expm1.c: Ditto.
	* libm/machine/spu/sf_log1p.c: Ditto.
	* libm/machine/spu/sf_logb.c: Ditto.
	* libm/machine/spu/sf_nearbyint.c: Ditto.
	* libm/machine/spu/sf_nextafter.c: Ditto.
	* libm/machine/spu/sf_rint.c: Ditto.
	* libm/machine/spu/sf_sin.c: Ditto.
	* libm/machine/spu/sf_tan.c: Ditto.
	* libm/machine/spu/sf_tanh.c: Ditto.
	* libm/machine/spu/w_acos.c: Ditto.
	* libm/machine/spu/w_acosh.c: Ditto.
	* libm/machine/spu/w_asin.c: Ditto.
	* libm/machine/spu/w_atan2.c: Ditto.
	* libm/machine/spu/w_atanh.c: Ditto.
	* libm/machine/spu/w_cosh.c: Ditto.
	* libm/machine/spu/w_exp.c: Ditto.
	* libm/machine/spu/w_exp2.c: Ditto.
	* libm/machine/spu/w_hypot.c: Ditto.
	* libm/machine/spu/w_lgamma.c: Ditto.
	* libm/machine/spu/w_log.c: Ditto.
	* libm/machine/spu/w_log10.c: Ditto.
	* libm/machine/spu/w_pow.c: Ditto.
	* libm/machine/spu/w_sincos.c: Ditto.
	* libm/machine/spu/w_sinh.c: Ditto.
	* libm/machine/spu/w_tgamma.c: Ditto.
	* libm/machine/spu/wf_acos.c: Ditto.
	* libm/machine/spu/wf_acosh.c: Ditto.
	* libm/machine/spu/wf_asin.c: Ditto.
	* libm/machine/spu/wf_atan2.c: Ditto.
	* libm/machine/spu/wf_atanh.c: Ditto.
	* libm/machine/spu/wf_cosh.c: Ditto.
	* libm/machine/spu/wf_hypot.c: Ditto.
	* libm/machine/spu/wf_lgamma.c: Ditto.
	* libm/machine/spu/wf_pow.c: Ditto.
	* libm/machine/spu/wf_sincos.c: Ditto.
	* libm/machine/spu/wf_sinh.c: Ditto.
	* libm/machine/spu/wf_sqrt.c: Ditto.
	* libm/machine/spu/wf_tgamma.c: Ditto.
@
text
@d56 2
a58 1
#include <spu_intrinsics.h>
@

