head	1.4;
access;
symbols
	cygwin-1_7_35-release:1.4
	cygwin-1_7_34-release:1.4
	newlib-2_2_0:1.4.0.6
	cygwin-1_7_33-release:1.4
	cygwin-1_7_32-release:1.4
	cygwin-1_7_31-release:1.4
	cygwin-1_7_30-release:1.4
	cygwin-1_7_29-release:1.4
	cygwin-1_7_28-release:1.4
	newlib-2_1_0:1.4
	cygwin-1_7_27-release:1.4
	cygwin-1_7_26-release:1.4
	cygwin-1_7_25-release:1.4
	cygwin-1_7_24-release:1.4
	cygwin-1_7_23-release:1.4
	cygwin-1_7_22-release:1.4
	cygwin-1_7_21-release:1.4
	cygwin-1_7_20-release:1.4
	cygwin-1_7_19-release:1.4
	cygwin-64bit-postmerge:1.4
	cygwin-64bit-premerge-branch:1.4.0.4
	cygwin-64bit-premerge:1.4
	cygwin-1_7_18-release:1.4
	newlib-2_0_0:1.4
	cygwin-1_7_17-release:1.4
	cygwin-64bit-branch:1.4.0.2
	cygwin-1_7_16-release:1.4
	cygwin-1_7_15-release:1.4
	cygwin-1_7_14_2-release:1.4
	cygwin-1_7_14-release:1.4
	cygwin-1_7_12-release:1.4
	cygwin-1_7_11-release:1.4
	cygwin-1_7_10-release:1.4
	newlib-1_20_0:1.4
	cygwin-1_7_9-release:1.4
	cygwin-1_7_8-release:1.4
	newlib-1_19_0:1.4
	cygwin-1_7_7-release:1.4
	cygwin-1_7_5-release:1.4
	cygwin-1_7_4-release:1.4
	cygwin-1_7_3-release:1.4
	cygwin-1_7_2-release:1.4
	newlib-1_18_0:1.4
	cygwin-1_7_1-release:1.4
	newlib-1_17_0-arc:1.3.0.10
	binutils-arc-20080908-branch:1.3.0.8
	binutils-arc-20080908-branchpoint:1.3
	newlib-1_17_0:1.3
	newlib-1_16_0:1.3
	newlib-1_15_0:1.3
	newlib-csl-coldfire-4_1-32:1.3
	newlib-csl-sourcerygxx-4_1-32:1.3
	newlib-csl-innovasic-fido-3_4_4-33:1.3
	newlib-csl-coldfire-4_1-30:1.3
	newlib-csl-sourcerygxx-4_1-30:1.3
	newlib-csl-coldfire-4_1-28:1.3
	newlib-csl-sourcerygxx-4_1-28:1.3
	newlib-csl-arm-2006q3-27:1.3
	newlib-csl-sourcerygxx-4_1-27:1.3
	newlib-csl-arm-2006q3-26:1.3
	newlib-csl-sourcerygxx-4_1-26:1.3
	newlib-csl-sourcerygxx-4_1-24:1.3
	newlib-csl-sourcerygxx-4_1-23:1.3
	newlib-csl-sourcerygxx-4_1-21:1.3
	newlib-csl-arm-2006q3-21:1.3
	newlib-csl-arm-2006q3-19:1.3
	newlib-csl-sourcerygxx-4_1-19:1.3
	newlib-csl-sourcerygxx-4_1-18:1.3
	newlib-csl-sourcerygxx-3_4_4-25:1.3
	newlib-csl-sourcerygxx-4_1-17:1.3
	cr-0x5f1:1.3.0.6
	newlib-csl-sourcerygxx-4_1-14:1.3
	newlib-csl-sourcerygxx-4_1-13:1.3
	newlib-csl-sourcerygxx-4_1-12:1.3
	newlib-csl-sourcerygxx-4_1-9:1.3
	newlib-csl-sourcerygxx-4_1-8:1.3
	newlib-csl-sourcerygxx-4_1-7:1.3
	newlib-csl-arm-2006q1-6:1.3
	newlib-csl-sourcerygxx-4_1-6:1.3
	newlib-csl-sourcerygxx-4_1-5:1.3
	newlib-csl-sourcerygxx-4_1-4:1.3
	newlib-autotools-branch:1.3.0.4
	newlib-csl-20060320-branch:1.3.0.2
	newlib-csl-20060320-branchpoint:1.3
	newlib-1_14_0:1.3
	newlib-csl-arm-2005-q1b:1.3
	newlib-csl-arm-2005-q1a:1.3
	newlib-1_13_0:1.3
	csl-arm-2004-q3:1.3
	csl-arm-2004-q1a:1.3
	csl-arm-2004-q1:1.3
	newlib-1_12_0:1.3
	csl-arm-2003-q4:1.3
	w32api-2_2:1.3
	mingw-runtime-2_4:1.3
	newlib-1_11_0:1.3
	cygnus_cvs_20020108_pre:1.2
	newlib-1_10_0:1.2;
locks; strict;
comment	@ * @;


1.4
date	2009.08.31.22.12.41;	author jjohnstn;	state Exp;
branches;
next	1.3;

1.3
date	2002.12.20.21.31.20;	author jjohnstn;	state Exp;
branches;
next	1.2;

1.2
date	2001.12.19.03.03.43;	author fitzsim;	state Exp;
branches;
next	1.1;

1.1
date	2001.12.13.23.50.11;	author fitzsim;	state Exp;
branches;
next	;


desc
@@


1.4
log
@
2009-08-31  Takaki Makino  <t@@snowelm.com>

        * libm/machine/i386/f_pow.c(_f_pow): Alter ASM so it works with
        newer gcc versions.
        * libm/maachine/i386/f_powf.c(_f_powf): Ditto.
@
text
@/*
 * ====================================================
 * Copyright (C) 1998, 2002 by Red Hat Inc. All rights reserved.
 *
 * Permission to use, copy, modify, and distribute this
 * software is freely granted, provided that this notice
 * is preserved.
 * ====================================================
 */

#if !defined(_SOFT_FLOAT)

/*
Fast version of pow using Intel float instructions.

   float _f_powf (float x, float y);

Function calculates x to power of y.
The function optimizes the case where x is >0.0 and y is finite.
In such a case, there is no error checking or setting of errno.
All other cases defer to normal powf() function which will
set errno as normal.
*/

#include <math.h>
#include <ieeefp.h>
#include "f_math.h"

float _f_powf (float x, float y)
{
  /* following sequence handles the majority of cases for pow() */
  if (x > 0.0 && check_finitef(y))
    {
      float result;
      /* calculate x ** y as 2 ** (y log2(x)).  On Intel, can only
         raise 2 to an integer or a small fraction, thus, we have
         to perform two steps 2**integer portion * 2**fraction. */
      asm ("fyl2x; fld %%st; frndint; fsub %%st,%%st(1);"\
           "fxch; fchs; f2xm1; fld1; faddp; fxch; fld1; fscale; fstp %%st(1);"\
           "fmulp" : "=t" (result) : "0" (x), "u" (y) : "st(1)" );
      return result;
    }
  else /* all other strange cases, defer to normal pow() */
    return powf (x,y);
}

#endif
@


1.3
log
@
2002-12-20  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/machine/i386/f_atan2.S: Change copyright from Cygnus
        Solutions to Red Hat Inc.
        * libc/machine/i386/f_atan2f.S: Ditto.
        * libc/machine/i386/f_exp.c: Ditto.
        * libc/machine/i386/f_expf.c: Ditto.
        * libc/machine/i386/f_frexp.S: Ditto.
        * libc/machine/i386/f_frexpf.S: Ditto.
        * libc/machine/i386/f_ldexp.S: Ditto.
        * libc/machine/i386/f_ldexpf.S: Ditto.
        * libc/machine/i386/f_log.S: Ditto.
        * libc/machine/i386/f_log10.S: Ditto.
        * libc/machine/i386/f_log10f.S: Ditto.
        * libc/machine/i386/f_logf.S: Ditto.
        * libc/machine/i386/f_pow.c: Ditto.
        * libc/machine/i386/f_powf.c: Ditto.
        * libc/machine/i386/f_tan.S: Ditto.
        * libc/machine/i386/f_tanf.S: Ditto.
        * libc/machine/i386/memchr.S: Ditto.
        * libc/machine/i386/memcmp.S: Ditto.
        * libc/machine/i386/memcpy.S: Ditto.
        * libc/machine/i386/memmove.S: Ditto.
        * libc/machine/i386/memset.S: Ditto.
        * libc/machine/i386/strchr.S: Ditto.
        * libc/machine/i386/strlen.S: Ditto.
        * libm/machine/i386/f_atan2.S: Ditto.
        * libm/machine/i386/f_atan2f.S: Ditto.
        * libm/machine/i386/f_exp.c: Ditto.
        * libm/machine/i386/f_expf.c: Ditto.
        * libm/machine/i386/f_frexp.S: Ditto.
        * libm/machine/i386/f_frexpf.S: Ditto.
        * libm/machine/i386/f_ldexp.S: Ditto.
        * libm/machine/i386/f_ldexpf.S: Ditto.
        * libm/machine/i386/f_log.S: Ditto.
        * libm/machine/i386/f_log10.S: Ditto.
        * libm/machine/i386/f_log10f.S: Ditto.
        * libm/machine/i386/f_logf.S: Ditto.
        * libm/machine/i386/f_pow.c: Ditto.
        * libm/machine/i386/f_powf.c: Ditto.
        * libm/machine/i386/f_tan.S: Ditto.
        * libm/machine/i386/f_tanf.S: Ditto.
@
text
@d38 1
a38 1
      asm ("flds 8(%%ebp); fyl2x; fld %%st; frndint; fsub %%st,%%st(1);" \
d40 1
a40 1
           "fmulp" : "=t" (result) : "0" (y));
@


1.2
log
@2001-12-18  Thomas Fitzsimmons  <fitzsim@@redhat.com>

	* libc/machine/i386/f_*: Move to libm/machine/i386.

2001-12-18      Joel Sherrill <joel@@OARcorp.com>

	* libm/machine/Makefile.am: Add dummy doc stub so
	"make info" works.

2001-12-17	Joel Sherrill <joel@@OARcorp.com>

	* libc/include/sys/types.h (ino_t): RTEMS uses long also.
@
text
@d3 1
a3 1
 * Copyright (C) 1998 by Cygnus Solutions. All rights reserved.
@


1.1
log
@	* Makefile.shared: New file.
	* libc/sys/linux/shared.ld: New file.
	* libm/machine/*: New files.
	* libm/machine/i386/*: New files.
	* Makefile.am: Add libtool support.  Change math and mathfp
	references to variables.
	* configure.host: Add variables for libtool support.  Add
	libm_machine_dir variable.
	* configure.in: Add objectlist variables, for libtool
	support.  Add CC_FOR_BUILD tests.
	* libc/Makefile.am: Add libtool support.  Change crt0.o
	reference to be a variable reference.
	* libc/configure.in: Add libtool support.  Change sublib
	names to be lib${subdir}.la when using libtool.
	* libc/ctype/Makefile.am: Add libtool support.
	* libc/errno/Makefile.am: Likewise.
	* libc/locale/Makefile.am: Likewise.
	* libc/machine/Makefile.am: Likewise.
	* libc/machine/configure.in: Likewise.
	* libc/machine/i386/Makefile.am: Likewise.
	* libc/machine/i386/configure.in: Likewise.
	* libc/misc/Makefile.am: Likewise.
	* libc/posix/Makefile.am: Likewise.
	* libc/reent/Makefile.am: Likewise.
	* libc/signal/Makefile.am: Likewise.
	* libc/stdio/Makefile.am: Likewise.
	* libc/stdlib/Makefile.am: Likewise.
	* libc/string/Makefile.am: Likewise.
	* libc/sys/Makefile.am: Likewise.
	* libc/sys/configure.in: Likewise.
	* libc/sys/linux/Makefile.am: Add libtool support.  Change
	awk reference to a variable reference.  Change signal.h
	reference to a variable reference.
	* libc/sys/linux/configure.in: Add libtool support.
	* libc/syscalls/Makefile.am: Likewise.
	* libc/time/Makefile.am: Likewise.
	* libc/unix/Makefile.am: Likewise.
	* libm/Makefile.am: Add libtool support.  Change math and
	mathfp references to variables.
	* libm/configure.in: Add libtool support.  Add
	LIBM_MACHINE_LIB variable.
	* libm/common/Makefile.am: Add libtool support.
	* libm/math/Makefile.am: Likewise.
	* libm/mathfp/Makefile.am: Likewise.
	Regenerate all Makefile.in, aclocal.m4, and configure.
@
text
@d11 2
d47 1
@

