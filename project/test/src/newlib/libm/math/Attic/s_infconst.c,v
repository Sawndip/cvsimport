head	1.4;
access;
symbols
	newlib-csl-arm-2005-q1b:1.3
	newlib-csl-arm-2005-q1a:1.3
	newlib-1_13_0:1.3
	csl-arm-2004-q3:1.3
	csl-arm-2004-q1a:1.3
	csl-arm-2004-q1:1.3
	newlib-1_12_0:1.3
	csl-arm-2003-q4:1.3
	w32api-2_2:1.3
	mingw-runtime-2_4:1.3
	newlib-1_11_0:1.3
	cygnus_cvs_20020108_pre:1.3
	newlib-1_10_0:1.3
	newlib-1_9_0:1.3
	newlib-2000-02-17:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.4
date	2005.10.14.21.11.39;	author jjohnstn;	state dead;
branches;
next	1.3;

1.3
date	2000.08.28.17.45.56;	author jjohnstn;	state Exp;
branches;
next	1.2;

1.2
date	2000.07.28.16.27.54;	author meissner;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.39.51;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.17.19.39.51;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.4
log
@
2005-10-14  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/math.h (HUGE_VALF, HUGE_VALL): New.
        * libm/common/Makefile.am: Add s_infconst.c support.
        * libm/common/Makefile.in: Regenerated.
        * libm/common/s_infconst.c: New file with float and
        long double infinity support added.
        * libm/math/Makefile.am: Remove s_infconst.c support.
        * libm/math/Makefile.in: Regenerated.
        * libm/math/s_infconst.c: Moved to common directory.
        * libm/mathfp/Makefile.am: Remove s_infconst.c support.
        * libm/mathfp/Makefile.in: Regenerated.
        * libm/mathfp/s_infconst.c: Moved to common directory.
@
text
@/* Infinity as a constant value.   This is used for HUGE_VAL.
 * Added by Cygnus Support.
 */

#include "fdlibm.h"

#ifndef _DOUBLE_IS_32BITS
#ifdef __IEEE_BIG_ENDIAN
const union __dmath __infinity[1] = {{{ 0x7ff00000, 0 }}};
#else
const union __dmath __infinity[1] = {{{ 0, 0x7ff00000 }}};
#endif
#else /* defined (_DOUBLE_IS_32BITS) */
const union __dmath __infinity[1] = {{{ 0x7f800000, 0 }}};
#endif /* defined (_DOUBLE_IS_32BITS) */
@


1.3
log
@
2000-08-23  Werner Almesberger  <Werner.Almesberger@@epfl.ch>

        * libc/stdlib/mprec.c (ulp, b2d, d2b): changed a few expressions
        like  x << y-z  to the equivalent  x << (y-z).
        (d2b): changed if statements with assignment to perform the
        assignment prior to the if check.
        * libc/reent/reent.c: included stdlib.h for "_free_r" prototype.
        * libc/unix/getpass.c (getpass): moved "echo" assignment out of if.
        * libc/unix/ttyname.c: included string.h for "strcpy" prototype.
        * libc/unix/getcwd.c (ISDOT): added parentheses to clarify && and ||
        precedence.
        * libc/include/sys/unistd.h: added "vfork" prototype (for popen.c).
        Added "_execve" prototype (for execl.c, execle.c, execv.c, and
        execve.c).
        * libc/posix/popen.c (popen): added parentheses to clarify && and ||
        precedence.
        * libm/math/e_cosh.c (__ieee754_cosh): changed parentheses to
        clarify && and || precendence (and to remove pascalism).
        * libm/math/e_sinh.c (__ieee754_sinh): Ditto.
        * libm/math/s_infconst.c: added another pair of braces to all
        initializers for __infinity (need three: for __infinity[1] array,
        for union __dmath, and for i[2]).
@
text
@@


1.2
log
@Declare __infinity as an array to work around problems with small data support
@
text
@d9 1
a9 1
const union __dmath __infinity[1] = {{ 0x7ff00000, 0 }};
d11 1
a11 1
const union __dmath __infinity[1] = {{ 0, 0x7ff00000 }};
d14 1
a14 1
const union __dmath __infinity[1] = {{ 0x7f800000, 0 }};
@


1.1
log
@Initial revision
@
text
@d9 1
a9 1
const union __dmath __infinity = { 0x7ff00000, 0 };
d11 1
a11 1
const union __dmath __infinity = { 0, 0x7ff00000 };
d14 1
a14 1
const union __dmath __infinity = { 0x7f800000, 0 };
@


1.1.1.1
log
@import newlib-2000-02-17 snapshot
@
text
@@
