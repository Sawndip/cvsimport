head	1.1;
branch	1.1.1;
access;
symbols
	cygwin-1_7_35-release:1.1.1.1
	cygwin-1_7_34-release:1.1.1.1
	newlib-2_2_0:1.1.1.1.0.16
	cygwin-1_7_33-release:1.1.1.1
	cygwin-1_7_32-release:1.1.1.1
	cygwin-1_7_31-release:1.1.1.1
	cygwin-1_7_30-release:1.1.1.1
	cygwin-1_7_29-release:1.1.1.1
	cygwin-1_7_28-release:1.1.1.1
	newlib-2_1_0:1.1.1.1
	cygwin-1_7_27-release:1.1.1.1
	cygwin-1_7_26-release:1.1.1.1
	cygwin-1_7_25-release:1.1.1.1
	cygwin-1_7_24-release:1.1.1.1
	cygwin-1_7_23-release:1.1.1.1
	cygwin-1_7_22-release:1.1.1.1
	cygwin-1_7_21-release:1.1.1.1
	cygwin-1_7_20-release:1.1.1.1
	cygwin-1_7_19-release:1.1.1.1
	cygwin-64bit-postmerge:1.1.1.1
	cygwin-64bit-premerge-branch:1.1.1.1.0.14
	cygwin-64bit-premerge:1.1.1.1
	cygwin-1_7_18-release:1.1.1.1
	newlib-2_0_0:1.1.1.1
	cygwin-1_7_17-release:1.1.1.1
	cygwin-64bit-branch:1.1.1.1.0.12
	cygwin-1_7_16-release:1.1.1.1
	cygwin-1_7_15-release:1.1.1.1
	cygwin-1_7_14_2-release:1.1.1.1
	cygwin-1_7_14-release:1.1.1.1
	cygwin-1_7_12-release:1.1.1.1
	cygwin-1_7_11-release:1.1.1.1
	cygwin-1_7_10-release:1.1.1.1
	newlib-1_20_0:1.1.1.1
	cygwin-1_7_9-release:1.1.1.1
	cygwin-1_7_8-release:1.1.1.1
	newlib-1_19_0:1.1.1.1
	cygwin-1_7_7-release:1.1.1.1
	cygwin-1_7_5-release:1.1.1.1
	cygwin-1_7_4-release:1.1.1.1
	cygwin-1_7_3-release:1.1.1.1
	cygwin-1_7_2-release:1.1.1.1
	newlib-1_18_0:1.1.1.1
	cygwin-1_7_1-release:1.1.1.1
	newlib-1_17_0-arc:1.1.1.1.0.10
	binutils-arc-20080908-branch:1.1.1.1.0.8
	binutils-arc-20080908-branchpoint:1.1.1.1
	newlib-1_17_0:1.1.1.1
	newlib-1_16_0:1.1.1.1
	newlib-1_15_0:1.1.1.1
	newlib-csl-coldfire-4_1-32:1.1.1.1
	newlib-csl-sourcerygxx-4_1-32:1.1.1.1
	newlib-csl-innovasic-fido-3_4_4-33:1.1.1.1
	newlib-csl-coldfire-4_1-30:1.1.1.1
	newlib-csl-sourcerygxx-4_1-30:1.1.1.1
	newlib-csl-coldfire-4_1-28:1.1.1.1
	newlib-csl-sourcerygxx-4_1-28:1.1.1.1
	newlib-csl-arm-2006q3-27:1.1.1.1
	newlib-csl-sourcerygxx-4_1-27:1.1.1.1
	newlib-csl-arm-2006q3-26:1.1.1.1
	newlib-csl-sourcerygxx-4_1-26:1.1.1.1
	newlib-csl-sourcerygxx-4_1-24:1.1.1.1
	newlib-csl-sourcerygxx-4_1-23:1.1.1.1
	newlib-csl-sourcerygxx-4_1-21:1.1.1.1
	newlib-csl-arm-2006q3-21:1.1.1.1
	newlib-csl-arm-2006q3-19:1.1.1.1
	newlib-csl-sourcerygxx-4_1-19:1.1.1.1
	newlib-csl-sourcerygxx-4_1-18:1.1.1.1
	newlib-csl-sourcerygxx-3_4_4-25:1.1.1.1
	newlib-csl-sourcerygxx-4_1-17:1.1.1.1
	cr-0x5f1:1.1.1.1.0.6
	newlib-csl-sourcerygxx-4_1-14:1.1.1.1
	newlib-csl-sourcerygxx-4_1-13:1.1.1.1
	newlib-csl-sourcerygxx-4_1-12:1.1.1.1
	newlib-csl-sourcerygxx-4_1-9:1.1.1.1
	newlib-csl-sourcerygxx-4_1-8:1.1.1.1
	newlib-csl-sourcerygxx-4_1-7:1.1.1.1
	newlib-csl-arm-2006q1-6:1.1.1.1
	newlib-csl-sourcerygxx-4_1-6:1.1.1.1
	newlib-csl-sourcerygxx-4_1-5:1.1.1.1
	newlib-csl-sourcerygxx-4_1-4:1.1.1.1
	newlib-autotools-branch:1.1.1.1.0.4
	newlib-csl-20060320-branch:1.1.1.1.0.2
	newlib-csl-20060320-branchpoint:1.1.1.1
	newlib-1_14_0:1.1.1.1
	newlib-csl-arm-2005-q1b:1.1.1.1
	newlib-csl-arm-2005-q1a:1.1.1.1
	newlib-1_13_0:1.1.1.1
	csl-arm-2004-q3:1.1.1.1
	csl-arm-2004-q1a:1.1.1.1
	csl-arm-2004-q1:1.1.1.1
	newlib-1_12_0:1.1.1.1
	csl-arm-2003-q4:1.1.1.1
	w32api-2_2:1.1.1.1
	mingw-runtime-2_4:1.1.1.1
	newlib-1_11_0:1.1.1.1
	cygnus_cvs_20020108_pre:1.1.1.1
	newlib-1_10_0:1.1.1.1
	newlib-1_9_0:1.1.1.1
	newlib-2000-02-17:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.1
date	2000.02.17.19.39.51;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.17.19.39.51;	author cgf;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@
/* @@(#)s_tanh.c 5.1 93/09/24 */
/*
 * ====================================================
 * Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.
 *
 * Developed at SunPro, a Sun Microsystems, Inc. business.
 * Permission to use, copy, modify, and distribute this
 * software is freely granted, provided that this notice 
 * is preserved.
 * ====================================================
 */

/*

FUNCTION
        <<tanh>>, <<tanhf>>---hyperbolic tangent

INDEX
tanh
INDEX
tanhf

ANSI_SYNOPSIS
        #include <math.h>
        double tanh(double <[x]>);
        float tanhf(float <[x]>);

TRAD_SYNOPSIS
        #include <math.h>
        double tanh(<[x]>)
        double <[x]>;

        float tanhf(<[x]>)
        float <[x]>;


DESCRIPTION

<<tanh>> computes the hyperbolic tangent of
the argument <[x]>.  Angles are specified in radians.  

<<tanh(<[x]>)>> is defined as 
. sinh(<[x]>)/cosh(<[x]>)
	
<<tanhf>> is identical, save that it takes and returns <<float>> values.

RETURNS
The hyperbolic tangent of <[x]> is returned.

PORTABILITY
<<tanh>> is ANSI C.  <<tanhf>> is an extension.

*/

/* Tanh(x)
 * Return the Hyperbolic Tangent of x
 *
 * Method :
 *				       x    -x
 *				      e  - e
 *	0. tanh(x) is defined to be -----------
 *				       x    -x
 *				      e  + e
 *	1. reduce x to non-negative by tanh(-x) = -tanh(x).
 *	2.  0      <= x <= 2**-55 : tanh(x) := x*(one+x)
 *					        -t
 *	    2**-55 <  x <=  1     : tanh(x) := -----; t = expm1(-2x)
 *					       t + 2
 *						     2
 *	    1      <= x <=  22.0  : tanh(x) := 1-  ----- ; t=expm1(2x)
 *						   t + 2
 *	    22.0   <  x <= INF    : tanh(x) := 1.
 *
 * Special cases:
 *	tanh(NaN) is NaN;
 *	only tanh(0)=0 is exact for finite argument.
 */

#include "fdlibm.h"

#ifndef _DOUBLE_IS_32BITS

#ifdef __STDC__
static const double one=1.0, two=2.0, tiny = 1.0e-300;
#else
static double one=1.0, two=2.0, tiny = 1.0e-300;
#endif

#ifdef __STDC__
	double tanh(double x)
#else
	double tanh(x)
	double x;
#endif
{
	double t,z;
	__int32_t jx,ix;

    /* High word of |x|. */
	GET_HIGH_WORD(jx,x);
	ix = jx&0x7fffffff;

    /* x is INF or NaN */
	if(ix>=0x7ff00000) { 
	    if (jx>=0) return one/x+one;    /* tanh(+-inf)=+-1 */
	    else       return one/x-one;    /* tanh(NaN) = NaN */
	}

    /* |x| < 22 */
	if (ix < 0x40360000) {		/* |x|<22 */
	    if (ix<0x3c800000) 		/* |x|<2**-55 */
		return x*(one+x);    	/* tanh(small) = small */
	    if (ix>=0x3ff00000) {	/* |x|>=1  */
		t = expm1(two*fabs(x));
		z = one - two/(t+two);
	    } else {
	        t = expm1(-two*fabs(x));
	        z= -t/(t+two);
	    }
    /* |x| > 22, return +-1 */
	} else {
	    z = one - tiny;		/* raised inexact flag */
	}
	return (jx>=0)? z: -z;
}

#endif /* _DOUBLE_IS_32BITS */
@


1.1.1.1
log
@import newlib-2000-02-17 snapshot
@
text
@@
