head	1.12;
access;
symbols
	cygwin-1_7_35-release:1.12
	cygwin-1_7_34-release:1.12
	newlib-2_2_0:1.12.0.2
	cygwin-1_7_33-release:1.12
	cygwin-1_7_32-release:1.12
	cygwin-1_7_31-release:1.12
	cygwin-1_7_30-release:1.11
	cygwin-1_7_29-release:1.11
	cygwin-1_7_28-release:1.11
	newlib-2_1_0:1.11
	cygwin-1_7_27-release:1.10
	cygwin-1_7_26-release:1.10
	cygwin-1_7_25-release:1.10
	cygwin-1_7_24-release:1.10
	cygwin-1_7_23-release:1.10
	cygwin-1_7_22-release:1.10
	cygwin-1_7_21-release:1.10
	cygwin-1_7_20-release:1.8
	cygwin-1_7_19-release:1.8
	cygwin-64bit-postmerge:1.8
	cygwin-64bit-premerge-branch:1.8.0.2
	cygwin-64bit-premerge:1.8
	cygwin-1_7_18-release:1.8
	newlib-2_0_0:1.5
	cygwin-1_7_17-release:1.5
	cygwin-64bit-branch:1.5.0.2
	cygwin-1_7_16-release:1.5
	cygwin-1_7_15-release:1.5
	cygwin-1_7_14_2-release:1.5
	cygwin-1_7_14-release:1.5
	cygwin-1_7_12-release:1.5
	cygwin-1_7_11-release:1.5
	cygwin-1_7_10-release:1.5
	newlib-1_20_0:1.5
	cygwin-1_7_9-release:1.5
	cygwin-1_7_8-release:1.5
	newlib-1_19_0:1.5
	cygwin-1_7_7-release:1.5
	cygwin-1_7_5-release:1.5
	cygwin-1_7_4-release:1.5
	cygwin-1_7_3-release:1.5
	cygwin-1_7_2-release:1.5
	newlib-1_18_0:1.5
	cygwin-1_7_1-release:1.5
	newlib-1_17_0-arc:1.4.0.4
	binutils-arc-20080908-branch:1.4.0.2
	binutils-arc-20080908-branchpoint:1.4
	newlib-1_17_0:1.4
	newlib-1_16_0:1.4
	newlib-1_15_0:1.2
	newlib-csl-coldfire-4_1-32:1.2.2.1
	newlib-csl-sourcerygxx-4_1-32:1.2.2.1
	newlib-csl-innovasic-fido-3_4_4-33:1.2.2.1
	newlib-csl-coldfire-4_1-30:1.2.2.1
	newlib-csl-sourcerygxx-4_1-30:1.2.2.1
	newlib-csl-coldfire-4_1-28:1.2.2.1
	newlib-csl-sourcerygxx-4_1-28:1.2.2.1
	newlib-csl-arm-2006q3-27:1.2.2.1
	newlib-csl-sourcerygxx-4_1-27:1.2.2.1
	newlib-csl-arm-2006q3-26:1.2.2.1
	newlib-csl-sourcerygxx-4_1-26:1.2.2.1
	newlib-csl-sourcerygxx-4_1-24:1.2.2.1
	newlib-csl-sourcerygxx-4_1-23:1.2.2.1
	newlib-csl-sourcerygxx-4_1-21:1.2.2.1
	newlib-csl-arm-2006q3-21:1.2.2.1
	newlib-csl-arm-2006q3-19:1.2.2.1
	newlib-csl-sourcerygxx-4_1-19:1.2.2.1
	newlib-csl-sourcerygxx-4_1-18:1.2.2.1
	newlib-csl-sourcerygxx-3_4_4-25:1.2
	newlib-csl-sourcerygxx-4_1-17:1.2
	cr-0x5f1:1.2.0.6
	newlib-csl-sourcerygxx-4_1-14:1.2
	newlib-csl-sourcerygxx-4_1-13:1.2
	newlib-csl-sourcerygxx-4_1-12:1.2
	newlib-csl-sourcerygxx-4_1-9:1.2
	newlib-csl-sourcerygxx-4_1-8:1.2
	newlib-csl-sourcerygxx-4_1-7:1.2
	newlib-csl-arm-2006q1-6:1.2
	newlib-csl-sourcerygxx-4_1-6:1.2
	newlib-csl-sourcerygxx-4_1-5:1.2
	newlib-csl-sourcerygxx-4_1-4:1.2
	newlib-autotools-branch:1.2.0.4
	newlib-csl-20060320-branch:1.2.0.2
	newlib-csl-20060320-branchpoint:1.2;
locks; strict;
comment	@ * @;


1.12
date	2014.07.04.17.21.41;	author jjohnstn;	state Exp;
branches;
next	1.11;

1.11
date	2013.12.10.18.57.30;	author jjohnstn;	state Exp;
branches;
next	1.10;

1.10
date	2013.07.02.21.30.57;	author jjohnstn;	state Exp;
branches;
next	1.9;

1.9
date	2013.06.19.15.58.49;	author corinna;	state Exp;
branches;
next	1.8;

1.8
date	2013.04.12.12.05.31;	author corinna;	state Exp;
branches;
next	1.7;

1.7
date	2013.04.10.18.47.45;	author jjohnstn;	state Exp;
branches;
next	1.6;

1.6
date	2013.03.27.09.38.39;	author corinna;	state Exp;
branches;
next	1.5;

1.5
date	2009.08.18.19.57.59;	author jjohnstn;	state Exp;
branches;
next	1.4;

1.4
date	2007.05.11.20.09.00;	author ericb;	state Exp;
branches;
next	1.3;

1.3
date	2007.03.15.21.32.09;	author jjohnstn;	state Exp;
branches;
next	1.2;

1.2
date	2006.03.21.00.57.34;	author mmitchel;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2006.01.20.22.42.45;	author jjohnstn;	state Exp;
branches;
next	;

1.2.2.1
date	2006.08.29.21.53.30;	author pbrook;	state Exp;
branches;
next	;


desc
@@


1.12
log
@2014-07-04  Bin Cheng  <bin.cheng@@arm.com>

        * README (--enable-newlib-nano-formatted-io): Describe.
        * acconfig.h (_NANO_FORMATTED_IO): Undef.
        * newlib.hin (_NANO_FORMATTED_IO): Undef.
        * configure.in (--enable-newlib-nano-formatted-io): New option.
        * configure: Regenerated.
        * libc/configure.in (--enable-newlib-nano-formatted-io): New option.
        * libc/configure: Regenerated.
        * libc/stdio/Makefile.am (NEWLIB_NANO_FORMATTED_IO): Support new
        configuration option.
        * libc/stdio/Makefile.in: Regenerated.
        * libc/stdio/asnprintf.c (_asniprintf_r, asniprintf): Use
        _NANO_FORMATTED_IO to declare alias prototypes.
        * libc/stdio/asprintf.c (_asiprintf_r, asiprintf): Ditto.
        * libc/stdio/dprintf.c (_diprintf_r, diprintf): Ditto.
        * libc/stdio/fprintf.c (_fiprintf_r, fiprintf): Ditto.
        * libc/stdio/fscanf.c (fiscanf, _fiscanf_r): Ditto.
        * libc/stdio/printf.c (_iprintf_r, iprintf): Ditto.
        * libc/stdio/scanf.c (iscanf, _iscanf_r): Ditto.
        * libc/stdio/snprintf.c (_sniprintf_r, sniprintf): Ditto.
        * libc/stdio/sprintf.c (_siprintf_r, siprintf): Ditto.
        * libc/stdio/sscanf.c (siscanf, _siscanf_r): Ditto.
        * libc/stdio/vasnprintf.c (_vasniprintf_r, vasniprintf): Ditto.
        * libc/stdio/vasprintf.c (vasiprintf, _vasiprintf_r): Ditto.
        * libc/stdio/vdprintf.c (_vdiprintf_r, vdiprintf): Ditto.
        * libc/stdio/vprintf.c (viprintf, _viprintf_r): Ditto.
        * libc/stdio/vscanf.c (viscanf, _viscanf_r): Ditto.
        * libc/stdio/vsnprintf.c (vsniprintf, _vsniprintf_r): Ditto.
        * libc/stdio/vsprintf.c (vsiprintf, _vsiprintf_r): Ditto.
        * libc/stdio/vsscanf.c (vsiscanf, _vsiscanf_r): Ditto.
        * libc/stdio/nano-vfprintf.c: New file.
        * libc/stdio/nano-vfprintf_float.c: New file.
        * libc/stdio/nano-vfprintf_i.c: New file.
        * libc/stdio/nano-vfprintf_local.h: New file.
        * libc/stdio/nano-vfscanf.c: New file.
        * libc/stdio/nano-vfscanf_float.c: New file.
        * libc/stdio/nano-vfscanf_i.c: New file.
        * libc/stdio/nano-vfscanf_local.h: New file.
@
text
@#ifndef __NEWLIB_H__

#define __NEWLIB_H__ 1
@@TOP@@

/* EL/IX level */
#undef _ELIX_LEVEL

/* Newlib version */
#undef _NEWLIB_VERSION

/* C99 formats support (such as %a, %zu, ...) in IO functions like
 * printf/scanf enabled */
#undef _WANT_IO_C99_FORMATS

/* long long type support in IO functions like printf/scanf enabled */
#undef _WANT_IO_LONG_LONG

/* long double type support in IO functions like printf/scanf enabled */
#undef _WANT_IO_LONG_DOUBLE

/* Positional argument support in printf functions enabled.  */
#undef _WANT_IO_POS_ARGS

/* Optional reentrant struct support.  Used mostly on platforms with
   very restricted storage.  */
#undef _WANT_REENT_SMALL

/* Multibyte supported */
#undef _MB_CAPABLE

/* MB_LEN_MAX */
#undef _MB_LEN_MAX

/* ICONV enabled */
#undef _ICONV_ENABLED

/* Enable ICONV external CCS files loading capabilities */
#undef _ICONV_ENABLE_EXTERNAL_CCS

/* Define if the linker supports .preinit_array/.init_array/.fini_array
 * sections.  */
#undef  HAVE_INITFINI_ARRAY

/* True if atexit() may dynamically allocate space for cleanup
   functions.  */
#undef  _ATEXIT_DYNAMIC_ALLOC

/* Define if the compiler supports aliasing an array to an address.  */
#undef  _HAVE_ARRAY_ALIASING

/* Define if the platform supports long double type.  */
#undef  _HAVE_LONG_DOUBLE

/* Define if compiler supports -fno-tree-loop-distribute-patterns. */
#undef  _HAVE_CC_INHIBIT_LOOP_TO_LIBCALL

/* Define if the platform long double type is equal to double.  */
#undef  _LDBL_EQ_DBL
 
/* Define if ivo supported in streamio.  */
#undef _FVWRITE_IN_STREAMIO

/* Define if fseek functions support seek optimization.  */
#undef _FSEEK_OPTIMIZATION

/* Define if wide char orientation is supported.  */
#undef  _WIDE_ORIENT

/* Define if unbuffered stream file optimization is supported.  */
#undef _UNBUF_STREAM_OPT

/* Define if enable lite version of exit.  */
#undef _LITE_EXIT

/* Define if nano version formatted IO is used.  */
#undef _NANO_FORMATTED_IO

@@BOTTOM@@
/*
 * Iconv encodings enabled ("to" direction)
 */
#undef _ICONV_TO_ENCODING_BIG5
#undef _ICONV_TO_ENCODING_CP775
#undef _ICONV_TO_ENCODING_CP850
#undef _ICONV_TO_ENCODING_CP852
#undef _ICONV_TO_ENCODING_CP855
#undef _ICONV_TO_ENCODING_CP866
#undef _ICONV_TO_ENCODING_EUC_JP
#undef _ICONV_TO_ENCODING_EUC_TW
#undef _ICONV_TO_ENCODING_EUC_KR
#undef _ICONV_TO_ENCODING_ISO_8859_1
#undef _ICONV_TO_ENCODING_ISO_8859_10
#undef _ICONV_TO_ENCODING_ISO_8859_11
#undef _ICONV_TO_ENCODING_ISO_8859_13
#undef _ICONV_TO_ENCODING_ISO_8859_14
#undef _ICONV_TO_ENCODING_ISO_8859_15
#undef _ICONV_TO_ENCODING_ISO_8859_2
#undef _ICONV_TO_ENCODING_ISO_8859_3
#undef _ICONV_TO_ENCODING_ISO_8859_4
#undef _ICONV_TO_ENCODING_ISO_8859_5
#undef _ICONV_TO_ENCODING_ISO_8859_6
#undef _ICONV_TO_ENCODING_ISO_8859_7
#undef _ICONV_TO_ENCODING_ISO_8859_8
#undef _ICONV_TO_ENCODING_ISO_8859_9
#undef _ICONV_TO_ENCODING_ISO_IR_111
#undef _ICONV_TO_ENCODING_KOI8_R
#undef _ICONV_TO_ENCODING_KOI8_RU
#undef _ICONV_TO_ENCODING_KOI8_U
#undef _ICONV_TO_ENCODING_KOI8_UNI
#undef _ICONV_TO_ENCODING_UCS_2
#undef _ICONV_TO_ENCODING_UCS_2_INTERNAL
#undef _ICONV_TO_ENCODING_UCS_2BE
#undef _ICONV_TO_ENCODING_UCS_2LE
#undef _ICONV_TO_ENCODING_UCS_4
#undef _ICONV_TO_ENCODING_UCS_4_INTERNAL
#undef _ICONV_TO_ENCODING_UCS_4BE
#undef _ICONV_TO_ENCODING_UCS_4LE
#undef _ICONV_TO_ENCODING_US_ASCII
#undef _ICONV_TO_ENCODING_UTF_16
#undef _ICONV_TO_ENCODING_UTF_16BE
#undef _ICONV_TO_ENCODING_UTF_16LE
#undef _ICONV_TO_ENCODING_UTF_8
#undef _ICONV_TO_ENCODING_WIN_1250
#undef _ICONV_TO_ENCODING_WIN_1251
#undef _ICONV_TO_ENCODING_WIN_1252
#undef _ICONV_TO_ENCODING_WIN_1253
#undef _ICONV_TO_ENCODING_WIN_1254
#undef _ICONV_TO_ENCODING_WIN_1255
#undef _ICONV_TO_ENCODING_WIN_1256
#undef _ICONV_TO_ENCODING_WIN_1257
#undef _ICONV_TO_ENCODING_WIN_1258

/*
 * Iconv encodings enabled ("from" direction)
 */
#undef _ICONV_FROM_ENCODING_BIG5
#undef _ICONV_FROM_ENCODING_CP775
#undef _ICONV_FROM_ENCODING_CP850
#undef _ICONV_FROM_ENCODING_CP852
#undef _ICONV_FROM_ENCODING_CP855
#undef _ICONV_FROM_ENCODING_CP866
#undef _ICONV_FROM_ENCODING_EUC_JP
#undef _ICONV_FROM_ENCODING_EUC_TW
#undef _ICONV_FROM_ENCODING_EUC_KR
#undef _ICONV_FROM_ENCODING_ISO_8859_1
#undef _ICONV_FROM_ENCODING_ISO_8859_10
#undef _ICONV_FROM_ENCODING_ISO_8859_11
#undef _ICONV_FROM_ENCODING_ISO_8859_13
#undef _ICONV_FROM_ENCODING_ISO_8859_14
#undef _ICONV_FROM_ENCODING_ISO_8859_15
#undef _ICONV_FROM_ENCODING_ISO_8859_2
#undef _ICONV_FROM_ENCODING_ISO_8859_3
#undef _ICONV_FROM_ENCODING_ISO_8859_4
#undef _ICONV_FROM_ENCODING_ISO_8859_5
#undef _ICONV_FROM_ENCODING_ISO_8859_6
#undef _ICONV_FROM_ENCODING_ISO_8859_7
#undef _ICONV_FROM_ENCODING_ISO_8859_8
#undef _ICONV_FROM_ENCODING_ISO_8859_9
#undef _ICONV_FROM_ENCODING_ISO_IR_111
#undef _ICONV_FROM_ENCODING_KOI8_R
#undef _ICONV_FROM_ENCODING_KOI8_RU
#undef _ICONV_FROM_ENCODING_KOI8_U
#undef _ICONV_FROM_ENCODING_KOI8_UNI
#undef _ICONV_FROM_ENCODING_UCS_2
#undef _ICONV_FROM_ENCODING_UCS_2_INTERNAL
#undef _ICONV_FROM_ENCODING_UCS_2BE
#undef _ICONV_FROM_ENCODING_UCS_2LE
#undef _ICONV_FROM_ENCODING_UCS_4
#undef _ICONV_FROM_ENCODING_UCS_4_INTERNAL
#undef _ICONV_FROM_ENCODING_UCS_4BE
#undef _ICONV_FROM_ENCODING_UCS_4LE
#undef _ICONV_FROM_ENCODING_US_ASCII
#undef _ICONV_FROM_ENCODING_UTF_16
#undef _ICONV_FROM_ENCODING_UTF_16BE
#undef _ICONV_FROM_ENCODING_UTF_16LE
#undef _ICONV_FROM_ENCODING_UTF_8
#undef _ICONV_FROM_ENCODING_WIN_1250
#undef _ICONV_FROM_ENCODING_WIN_1251
#undef _ICONV_FROM_ENCODING_WIN_1252
#undef _ICONV_FROM_ENCODING_WIN_1253
#undef _ICONV_FROM_ENCODING_WIN_1254
#undef _ICONV_FROM_ENCODING_WIN_1255
#undef _ICONV_FROM_ENCODING_WIN_1256
#undef _ICONV_FROM_ENCODING_WIN_1257
#undef _ICONV_FROM_ENCODING_WIN_1258

#endif /* !__NEWLIB_H__ */
@


1.11
log
@
2013-12-10  Jeff Johnston  <jjohnstn@@redhat.com>

        * acconfig.h: Add _HAVE_CC_INHIBIT_LOOP_TO_LIBCALL.
        * newlib.hin: Ditto.
        * configure: Regenerate.
        * configure.in: Add setting of _HAVE_CC_INHIBIT_LOOP_TO_LIBCALL.
        * libc/string/local.h: Add check for _HAVE_CC_INHIBIT_LOOP_TO_LIBCALL
        and set __inhibit_loop_to_libcall macro appropriately.
        * libc/string/memmove.c: Use __inhibit_loop_to_libcall macro in
        function declaration.
        * libc/string/memset.c: Ditto.
@
text
@d76 3
@


1.10
log
@
2013-07-02  Joey Ye  <joey.ye@@arm.com>

        Lite exit support.
        * README: Add information about lite-exit.
        * acconfig.h (_LITE_EXIT): New macro.
        * configure.in (enable-lite-exit): New option.
        (_LITE_EXIT): Define new macro.
        * configure: Regenerated.
        * newlib.hin (_LITE_EXIT): New macro.
        * libc/stdlib/__atexit.c [_LITE_EXIT]: Add dummy explicit
        reference to __call_exitprocs.
        * libc/stdlib/cxa_atexit.c [_LITE_EXIT]: Make __register_exitproc a
        weak reference.
        * libc/stdlib/exit.c (exit)[_LITE_EXIT]: Remove TWS and weakly reference
        __call_exitprocs.
@
text
@d55 3
@


1.9
log
@	* acconfig.h (_UNBUF_STREAM_OPT): Undefine.
	* newlib.hin (_UNBUF_STREAM_OPT): Undefine.
	* configure.in (--enable-newlib-unbuf-stream-opt): New option.
	* configure: Regenerate.
	* libc/stdio/vfprintf.c (_VFPRINTF_R): Don't do optimization on
	unbuffered stream files.
	* libc/stdio/vfwprintf.c (_VFWPRINTF_R): Likewise.
	* README: Add description about the option.
	* newlib.hin (_UNBUF_STREAM_OPT): Undefine.
	* configure.in (--enable-newlib-unbuf-stream-opt): New option.
	* configure: Regenerate.
	* libc/stdio/vfprintf.c (_VFPRINTF_R): Don't do optimization on
	unbuffered stream files.
	* libc/stdio/vfwprintf.c (_VFWPRINTF_R): Likewise.
	* README: Add description about the option.
@
text
@d70 3
@


1.8
log
@	* acconfig.h (_WCHAR_ORIENT): Undef
	* newlib.hin (_WCHAR_ORIENT): Undef
	* configure.in (--enable-newlib-wchar-orient): New option.
	* configure: Regenerated.
	* libc/configure.in (--enable-newlib-wchar-orient): New option.
	* libc/configure: Regenerated.
	* libc/stdio/Makefile.am (NEWLIB_WIDE_ORIENT): Use.
	* libc/stdio/Makefile.in: Regenerated.
	* libc/stdio/local.h (ORIENT): Use _WCHAR_ORIENT to control
	the definition. Add alternative definition.
	* libc/stdio/vfprintf.c (__sfputs_r, __sprint_r): Use _WCHAR_ORIENT
	to control the wide char output.
@
text
@d67 3
@


1.7
log
@
2013-04-10  Bin Cheng  <bin.cheng@@arm.com>
        * acconfig.h (_FSEEK_OPTIMIZATION): Undef
        * newlib.hin (_FSEEK_OPTIMIZATION): Undef
        * configure.in (--disable-newlib-fseek-optimization): New option.
        * configure: Regenerated.
        * libc/stdio/fflush.c (__sflush_r): Use _FSEEK_OPTIMIZATION to
        control fseek optimization.
        * libc/stdio/fseeko.c (_fseeko_r): Ditto.
        * libc/stdio/makebuf.c (__smakebuf_r): Ditto.
        * libc/stdio64/fseeko64.c (_fseeko64_r): Ditto.
@
text
@d64 3
@


1.6
log
@	* acconfig.h (_FVWRITE_IN_STREAMIO): Undefine.
	* newlib.hin (_FVWRITE_IN_STREAMIO): Undefine.
	* configure.in (--disable-newlib-fvwrite-in-streamio): New option.
	* configure: Regenerated.
	* libc/stdio/fputs.c (_fputs_r): Use _FVWRITE_IN_STREAMIO to
	control __sfvwrite_r.  Add alternative implementation.
	* libc/stdio/fputws.c (_fputws_r): Ditto.
	* libc/stdio/fwrite.c (_fwrite_r): Ditto.
	* libc/stdio/puts.c (_puts_r): Ditto.
	* libc/stdio/vfprintf.c (__ssputs_r, __sfputs_r): New function.
	(_VFPRINTF_R): Use _FVWRITE_IN_STREAMIO to control vector buffer.
	(__SPRINT): Use _FVWRITE_IN_STREAMIO to control macro definition.
	* libc/stdio/vfwprintf.c (_VFWPRINTF_R): Use _FVWRITE_IN_STREAMIO
	to control vector buffer.
@
text
@d61 3
@


1.5
log
@
2009-08-18  Jeff Johnston  <jjohnstn@@redhat.com>

        * acconfig.h: Add templates for _HAVE_LONG_DOUBLE and _LDBL_EQ_DBL.
@
text
@d57 3
@


1.4
log
@Minimize printf/scanf size on platforms that don't need C99.
* acconfig.h (_WANT_IO_C99_FORMATS): New macro.
* newlib.hin (_WANT_IO_C99_FORMATS): Likewise.
* configure.in (newlib-io-c99-formats): New configure option.
(_WANT_IO_C99_FORMATS): Define appropriately.
* configure.host (*-linux*, cygwin): Default c99-formats to yes.
* libc/stdio/vfprintf.c (_VFPRINTF_R) [!_WANT_IO_C99_FORMATS]:
Cripple ' flag; hh, z, j, t sizes; a, A, F, C, S specifiers.
* libc/stdio/vfscanf.c (_VFSCANF_R) [!_WANT_IO_C99_FORMATS]:
Likewise.
* configure: Regenerate.
@
text
@d51 7
@


1.3
log
@
2007-03-15  Jeff Johnston  <jjohnstn@@redhat.com>

        * configure.in: Add new --enable-newlib-reent-small option.
        * configure: Regenerated.
        * acconfig.h: Add _WANT_REENT_SMALL.
        * newlib.hin: Regenerated minus PACKAGE macros to add
        _WANT_REENT_SMALL macro.
        * libc/include/sys/config.h[_WANT_REENT_SMALL]: Set _REENT_SMALL
        if not already set.
        * libc/stdio/fflush.c[_REENT_SMALL]: Return immediately if
        there is no buffer.
        * libc/stdio/local.h[_REENT_SMALL]: Fix CHECK_INIT macro to
        use reentrant pointer passed in when resetting the file
        pointer to one of the std streams.
@
text
@d12 4
a160 1

@


1.2
log
@	* acconfig.h (_ATEXIT_DYNAMIC_ALLOC): Undef.
	* configure.in (--disable-newlib-atexit-dynamic-alloc): New
	option.
	* configure: Regenerated.
	* newlib.hin: Regenerated.
	* libc/stdlib/__atexit.c (__register_exitproc): Don't call malloc
	if _ATEXIT_DYNAMIC_ALLOC is undefined.
	* libc/stdlib/__call_atexit.c (__call_exitprocs): Don't call free
	if _ATEXIT_DYNAMIC_ALLOC is undefined.
@
text
@d21 4
@


1.2.2.1
log
@2006-08-29  Paul Brook  <paul@@codesourcery.com>

	newlib/
	* acconfig.h (_ATEXIT_DYNAMIC_ALLOC): Remove.
	* configure.in: Remove --disable-newlib-atexit-dynamic-alloc.
	* libc/stdlib/__atexit.c (__register_exitproc): Use weak reference to
	malloc.  Only allocate dynamically if it is present.
	* libc/stdlib/__call_atexit.c (__call_exitprocs): Use weak reference
	to free.
	* configure: Regenerate.
	* newlib.hin: Regenerate.
@
text
@d37 4
@


1.1
log
@
2006-01-20  Jeff Johnston  <jjohnstn@@redhat.com>

        * acconfig.h: New file to generate newlib.hin from.
        * newlib.hin: Regenerated.
        * stamp-h.in: Regenerated.
        * Makefile.am: Add ACLOCAL_AMFLAGS so aclocal can be
        called automatically.
        * Makefile.in: Regenerated.
        * acinclude.m4: Add proper comment for hack in previous change.
        * aclocal.m4 */aclocal.m4: Regenerated.
        * configure */configure: Regenerated.
@
text
@d37 4
@

