head	1.142;
access;
symbols
	cygwin-1_7_35-release:1.142
	cygwin-1_7_34-release:1.142
	newlib-2_2_0:1.140.0.2
	cygwin-1_7_33-release:1.137
	cygwin-1_7_32-release:1.137
	cygwin-1_7_31-release:1.136
	cygwin-1_7_30-release:1.133
	cygwin-1_7_29-release:1.133
	cygwin-1_7_28-release:1.133
	newlib-2_1_0:1.133
	cygwin-1_7_27-release:1.132
	cygwin-1_7_26-release:1.132
	cygwin-1_7_25-release:1.131
	cygwin-1_7_24-release:1.131
	cygwin-1_7_23-release:1.131
	cygwin-1_7_22-release:1.131
	cygwin-1_7_21-release:1.129
	cygwin-1_7_20-release:1.129
	cygwin-1_7_19-release:1.129
	cygwin-64bit-postmerge:1.127
	cygwin-64bit-premerge-branch:1.127.0.2
	cygwin-64bit-premerge:1.127
	cygwin-1_7_18-release:1.127
	newlib-2_0_0:1.127
	cygwin-1_7_17-release:1.126
	cygwin-64bit-branch:1.125.0.2
	cygwin-1_7_16-release:1.125
	cygwin-1_7_15-release:1.125
	cygwin-1_7_14_2-release:1.125
	cygwin-1_7_14-release:1.125
	cygwin-1_7_12-release:1.125
	cygwin-1_7_11-release:1.125
	cygwin-1_7_10-release:1.122
	newlib-1_20_0:1.122
	cygwin-1_7_9-release:1.120
	cygwin-1_7_8-release:1.120
	newlib-1_19_0:1.119
	cygwin-1_7_7-release:1.115
	cygwin-1_7_5-release:1.114
	cygwin-1_7_4-release:1.114
	cygwin-1_7_3-release:1.114
	cygwin-1_7_2-release:1.114
	newlib-1_18_0:1.113
	cygwin-1_7_1-release:1.112
	newlib-1_17_0-arc:1.104.0.2
	binutils-arc-20080908-branch:1.99.0.2
	binutils-arc-20080908-branchpoint:1.99
	newlib-1_17_0:1.104
	newlib-1_16_0:1.97
	newlib-1_15_0:1.88
	newlib-csl-coldfire-4_1-32:1.78.2.2
	newlib-csl-sourcerygxx-4_1-32:1.78.2.2
	newlib-csl-innovasic-fido-3_4_4-33:1.78.2.2
	newlib-csl-coldfire-4_1-30:1.78.2.1
	newlib-csl-sourcerygxx-4_1-30:1.78.2.1
	newlib-csl-coldfire-4_1-28:1.78.2.1
	newlib-csl-sourcerygxx-4_1-28:1.78.2.1
	newlib-csl-arm-2006q3-27:1.78.2.1
	newlib-csl-sourcerygxx-4_1-27:1.78.2.1
	newlib-csl-arm-2006q3-26:1.78.2.1
	newlib-csl-sourcerygxx-4_1-26:1.78.2.1
	newlib-csl-sourcerygxx-4_1-24:1.78.2.1
	newlib-csl-sourcerygxx-4_1-23:1.78.2.1
	newlib-csl-sourcerygxx-4_1-21:1.78.2.1
	newlib-csl-arm-2006q3-21:1.78.2.1
	newlib-csl-arm-2006q3-19:1.78.2.1
	newlib-csl-sourcerygxx-4_1-19:1.78.2.1
	newlib-csl-sourcerygxx-4_1-18:1.78.2.1
	newlib-csl-sourcerygxx-3_4_4-25:1.85
	newlib-csl-sourcerygxx-4_1-17:1.78.2.1
	cr-0x5f1:1.83.0.2
	newlib-csl-sourcerygxx-4_1-14:1.78.2.1
	newlib-csl-sourcerygxx-4_1-13:1.78.2.1
	newlib-csl-sourcerygxx-4_1-12:1.78.2.1
	newlib-csl-sourcerygxx-4_1-9:1.78.2.1
	newlib-csl-sourcerygxx-4_1-8:1.78.2.1
	newlib-csl-sourcerygxx-4_1-7:1.78.2.1
	newlib-csl-arm-2006q1-6:1.78.2.1
	newlib-csl-sourcerygxx-4_1-6:1.78.2.1
	newlib-csl-sourcerygxx-4_1-5:1.78
	newlib-csl-sourcerygxx-4_1-4:1.78
	newlib-autotools-branch:1.79.0.2
	newlib-csl-20060320-branch:1.78.0.2
	newlib-csl-20060320-branchpoint:1.78
	newlib-1_14_0:1.77
	newlib-csl-arm-2005-q1b:1.72
	newlib-csl-arm-2005-q1a:1.71
	newlib-1_13_0:1.66
	csl-arm-2004-q3:1.65
	csl-arm-2004-q1a:1.58
	csl-arm-2004-q1:1.57
	newlib-1_12_0:1.57
	csl-arm-2003-q4:1.56
	w32api-2_2:1.45
	mingw-runtime-2_4:1.45
	newlib-1_11_0:1.42
	cygnus_cvs_20020108_pre:1.16
	newlib-1_10_0:1.15
	newlib-1_9_0:1.7
	newlib-2000-02-17:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.142
date	2015.01.21.18.27.45;	author ebotcazou;	state Exp;
branches;
next	1.141;

1.141
date	2015.01.20.09.59.40;	author corinna;	state Exp;
branches;
next	1.140;

1.140
date	2014.12.15.13.27.37;	author corinna;	state Exp;
branches;
next	1.139;

1.139
date	2014.12.12.21.14.06;	author jjohnstn;	state Exp;
branches;
next	1.138;

1.138
date	2014.11.21.11.55.39;	author nickc;	state Exp;
branches;
next	1.137;

1.137
date	2014.07.27.14.37.10;	author green;	state Exp;
branches;
next	1.136;

1.136
date	2014.07.17.18.43.03;	author corinna;	state Exp;
branches;
next	1.135;

1.135
date	2014.06.10.03.09.35;	author dj;	state Exp;
branches;
next	1.134;

1.134
date	2014.04.04.21.40.58;	author jjohnstn;	state Exp;
branches;
next	1.133;

1.133
date	2013.12.20.10.27.49;	author nickc;	state Exp;
branches;
next	1.132;

1.132
date	2013.10.01.18.08.45;	author jjohnstn;	state Exp;
branches;
next	1.131;

1.131
date	2013.07.16.07.48.53;	author corinna;	state Exp;
branches;
next	1.130;

1.130
date	2013.07.09.19.06.47;	author jjohnstn;	state Exp;
branches;
next	1.129;

1.129
date	2013.05.13.21.39.51;	author dj;	state Exp;
branches;
next	1.128;

1.128
date	2013.05.06.18.23.08;	author jjohnstn;	state Exp;
branches;
next	1.127;

1.127
date	2012.12.04.21.43.20;	author jjohnstn;	state Exp;
branches;
next	1.126;

1.126
date	2012.09.26.20.06.46;	author jjohnstn;	state Exp;
branches;
next	1.125;

1.125
date	2012.02.23.09.30.19;	author corinna;	state Exp;
branches
	1.125.2.1;
next	1.124;

1.124
date	2012.02.21.22.34.29;	author jjohnstn;	state Exp;
branches;
next	1.123;

1.123
date	2012.02.15.18.32.05;	author cgf;	state Exp;
branches;
next	1.122;

1.122
date	2011.11.29.06.33.48;	author dj;	state Exp;
branches;
next	1.121;

1.121
date	2011.06.14.13.40.47;	author jsm28;	state Exp;
branches;
next	1.120;

1.120
date	2011.01.12.22.24.06;	author jjohnstn;	state Exp;
branches;
next	1.119;

1.119
date	2010.12.02.19.30.46;	author jjohnstn;	state Exp;
branches;
next	1.118;

1.118
date	2010.11.17.21.44.57;	author jjohnstn;	state Exp;
branches;
next	1.117;

1.117
date	2010.11.16.17.14.11;	author corinna;	state Exp;
branches;
next	1.116;

1.116
date	2010.10.09.02.33.29;	author jjohnstn;	state Exp;
branches;
next	1.115;

1.115
date	2010.07.23.18.11.26;	author jjohnstn;	state Exp;
branches;
next	1.114;

1.114
date	2010.03.02.12.05.12;	author corinna;	state Exp;
branches;
next	1.113;

1.113
date	2009.12.10.17.12.11;	author jjohnstn;	state Exp;
branches;
next	1.112;

1.112
date	2009.10.26.10.05.22;	author nickc;	state Exp;
branches;
next	1.111;

1.111
date	2009.10.20.22.43.46;	author jjohnstn;	state Exp;
branches;
next	1.110;

1.110
date	2009.10.08.16.44.09;	author jjohnstn;	state Exp;
branches;
next	1.109;

1.109
date	2009.09.28.16.42.20;	author jjohnstn;	state Exp;
branches;
next	1.108;

1.108
date	2009.09.22.21.24.55;	author jjohnstn;	state Exp;
branches;
next	1.107;

1.107
date	2009.09.22.21.23.13;	author jjohnstn;	state Exp;
branches;
next	1.106;

1.106
date	2009.04.22.19.52.49;	author jjohnstn;	state Exp;
branches;
next	1.105;

1.105
date	2009.01.27.01.41.31;	author dj;	state Exp;
branches;
next	1.104;

1.104
date	2008.12.17.23.09.09;	author jjohnstn;	state Exp;
branches
	1.104.2.1;
next	1.103;

1.103
date	2008.12.12.17.07.37;	author jjohnstn;	state Exp;
branches;
next	1.102;

1.102
date	2008.12.11.20.05.37;	author jjohnstn;	state Exp;
branches;
next	1.101;

1.101
date	2008.11.27.20.50.31;	author jjohnstn;	state Exp;
branches;
next	1.100;

1.100
date	2008.11.17.22.08.05;	author jjohnstn;	state Exp;
branches;
next	1.99;

1.99
date	2008.04.01.18.58.07;	author jjohnstn;	state Exp;
branches;
next	1.98;

1.98
date	2008.03.07.18.16.35;	author jjohnstn;	state Exp;
branches;
next	1.97;

1.97
date	2007.11.07.21.42.24;	author brolley;	state Exp;
branches;
next	1.96;

1.96
date	2007.09.28.18.32.56;	author jjohnstn;	state Exp;
branches;
next	1.95;

1.95
date	2007.08.28.21.56.49;	author jjohnstn;	state Exp;
branches;
next	1.94;

1.94
date	2007.05.11.20.09.00;	author ericb;	state Exp;
branches;
next	1.93;

1.93
date	2007.02.20.21.02.36;	author jjohnstn;	state Exp;
branches;
next	1.92;

1.92
date	2007.02.14.23.18.24;	author jjohnstn;	state Exp;
branches;
next	1.91;

1.91
date	2007.02.01.16.33.04;	author jjohnstn;	state Exp;
branches;
next	1.90;

1.90
date	2007.01.31.19.34.36;	author jjohnstn;	state Exp;
branches;
next	1.89;

1.89
date	2007.01.08.19.01.23;	author jjohnstn;	state Exp;
branches;
next	1.88;

1.88
date	2006.12.18.21.49.14;	author jjohnstn;	state Exp;
branches;
next	1.87;

1.87
date	2006.11.08.19.26.43;	author jjohnstn;	state Exp;
branches;
next	1.86;

1.86
date	2006.09.01.05.41.06;	author kazu;	state Exp;
branches;
next	1.85;

1.85
date	2006.08.16.21.51.13;	author jjohnstn;	state Exp;
branches;
next	1.84;

1.84
date	2006.08.16.21.39.43;	author jjohnstn;	state Exp;
branches;
next	1.83;

1.83
date	2006.06.07.19.20.04;	author jjohnstn;	state Exp;
branches
	1.83.2.1;
next	1.82;

1.82
date	2006.06.05.19.45.07;	author jjohnstn;	state Exp;
branches;
next	1.81;

1.81
date	2006.04.13.19.56.23;	author jjohnstn;	state Exp;
branches;
next	1.80;

1.80
date	2006.04.11.19.02.03;	author jjohnstn;	state Exp;
branches;
next	1.79;

1.79
date	2006.03.21.20.02.13;	author mmitchel;	state Exp;
branches
	1.79.2.1;
next	1.78;

1.78
date	2006.01.31.19.33.56;	author jjohnstn;	state Exp;
branches
	1.78.2.1;
next	1.77;

1.77
date	2005.12.12.11.25.07;	author nathan;	state Exp;
branches;
next	1.76;

1.76
date	2005.08.31.20.39.40;	author jjohnstn;	state Exp;
branches;
next	1.75;

1.75
date	2005.08.10.20.35.13;	author jjohnstn;	state Exp;
branches;
next	1.74;

1.74
date	2005.07.06.13.14.09;	author aldyh;	state Exp;
branches;
next	1.73;

1.73
date	2005.05.12.22.10.26;	author jjohnstn;	state Exp;
branches;
next	1.72;

1.72
date	2005.04.18.02.52.21;	author hp;	state Exp;
branches;
next	1.71;

1.71
date	2005.03.23.18.09.57;	author jjohnstn;	state Exp;
branches;
next	1.70;

1.70
date	2005.03.23.17.09.29;	author cgf;	state Exp;
branches;
next	1.69;

1.69
date	2005.03.22.23.45.42;	author jjohnstn;	state Exp;
branches;
next	1.68;

1.68
date	2005.03.17.02.31.57;	author hp;	state Exp;
branches;
next	1.67;

1.67
date	2005.01.27.23.54.42;	author jjohnstn;	state Exp;
branches;
next	1.66;

1.66
date	2004.10.05.19.44.24;	author jjohnstn;	state Exp;
branches;
next	1.65;

1.65
date	2004.09.15.20.50.06;	author jjohnstn;	state Exp;
branches;
next	1.64;

1.64
date	2004.09.14.18.12.51;	author jjohnstn;	state Exp;
branches;
next	1.63;

1.63
date	2004.07.16.21.40.22;	author jjohnstn;	state Exp;
branches;
next	1.62;

1.62
date	2004.07.07.08.15.26;	author nickc;	state Exp;
branches;
next	1.61;

1.61
date	2004.07.06.23.32.08;	author jjohnstn;	state Exp;
branches;
next	1.60;

1.60
date	2004.06.09.19.05.08;	author jjohnstn;	state Exp;
branches;
next	1.59;

1.59
date	2004.05.26.00.19.14;	author jjohnstn;	state Exp;
branches;
next	1.58;

1.58
date	2004.04.23.21.44.21;	author jjohnstn;	state Exp;
branches;
next	1.57;

1.57
date	2004.02.02.16.59.51;	author jjohnstn;	state Exp;
branches;
next	1.56;

1.56
date	2003.11.19.21.57.52;	author jjohnstn;	state Exp;
branches;
next	1.55;

1.55
date	2003.11.07.23.47.04;	author jjohnstn;	state Exp;
branches;
next	1.54;

1.54
date	2003.07.31.16.21.20;	author nickc;	state Exp;
branches;
next	1.53;

1.53
date	2003.07.25.16.06.00;	author cgf;	state Exp;
branches;
next	1.52;

1.52
date	2003.06.21.00.11.40;	author jjohnstn;	state Exp;
branches;
next	1.51;

1.51
date	2003.06.10.15.32.27;	author green;	state Exp;
branches;
next	1.50;

1.50
date	2003.05.30.21.47.40;	author jjohnstn;	state Exp;
branches;
next	1.49;

1.49
date	2003.05.12.11.09.38;	author corinna;	state Exp;
branches;
next	1.48;

1.48
date	2003.03.18.20.38.04;	author jjohnstn;	state Exp;
branches;
next	1.47;

1.47
date	2003.03.07.20.41.49;	author corinna;	state Exp;
branches;
next	1.46;

1.46
date	2003.02.20.19.14.11;	author nickc;	state Exp;
branches;
next	1.45;

1.45
date	2003.02.08.04.30.22;	author jjohnstn;	state Exp;
branches;
next	1.44;

1.44
date	2003.01.08.12.51.23;	author rsandifo;	state Exp;
branches;
next	1.43;

1.43
date	2003.01.07.19.52.27;	author jjohnstn;	state Exp;
branches;
next	1.42;

1.42
date	2002.12.20.02.29.00;	author jjohnstn;	state Exp;
branches;
next	1.41;

1.41
date	2002.09.20.17.11.29;	author jjohnstn;	state Exp;
branches;
next	1.40;

1.40
date	2002.09.11.18.36.38;	author jjohnstn;	state Exp;
branches;
next	1.39;

1.39
date	2002.08.27.21.20.09;	author jjohnstn;	state Exp;
branches;
next	1.38;

1.38
date	2002.08.27.20.30.15;	author jjohnstn;	state Exp;
branches;
next	1.37;

1.37
date	2002.08.26.18.56.03;	author jjohnstn;	state Exp;
branches;
next	1.36;

1.36
date	2002.08.26.04.33.46;	author cgf;	state Exp;
branches;
next	1.35;

1.35
date	2002.08.23.01.56.02;	author fitzsim;	state Exp;
branches;
next	1.34;

1.34
date	2002.08.17.05.57.19;	author jjohnstn;	state Exp;
branches;
next	1.33;

1.33
date	2002.08.17.05.19.16;	author jjohnstn;	state Exp;
branches;
next	1.32;

1.32
date	2002.08.09.21.12.07;	author jjohnstn;	state Exp;
branches;
next	1.31;

1.31
date	2002.07.24.15.44.23;	author jjohnstn;	state Exp;
branches;
next	1.30;

1.30
date	2002.07.19.20.36.03;	author fitzsim;	state Exp;
branches;
next	1.29;

1.29
date	2002.07.17.23.25.42;	author jjohnstn;	state Exp;
branches;
next	1.28;

1.28
date	2002.06.18.21.20.18;	author brolley;	state Exp;
branches;
next	1.27;

1.27
date	2002.05.21.18.20.18;	author fitzsim;	state Exp;
branches;
next	1.26;

1.26
date	2002.05.08.20.34.24;	author fitzsim;	state Exp;
branches;
next	1.25;

1.25
date	2002.04.30.18.23.36;	author fitzsim;	state Exp;
branches;
next	1.24;

1.24
date	2002.04.29.21.49.56;	author jlarmour;	state Exp;
branches;
next	1.23;

1.23
date	2002.04.19.19.16.04;	author jjohnstn;	state Exp;
branches;
next	1.22;

1.22
date	2002.04.04.22.41.10;	author jjohnstn;	state Exp;
branches;
next	1.21;

1.21
date	2002.04.03.22.46.12;	author jjohnstn;	state Exp;
branches;
next	1.20;

1.20
date	2002.02.27.23.55.41;	author jjohnstn;	state Exp;
branches;
next	1.19;

1.19
date	2002.02.20.00.47.07;	author fitzsim;	state Exp;
branches;
next	1.18;

1.18
date	2002.02.08.07.10.32;	author aoliva;	state Exp;
branches;
next	1.17;

1.17
date	2002.02.01.18.00.39;	author geoffk;	state Exp;
branches;
next	1.16;

1.16
date	2001.12.22.22.47.57;	author geoffk;	state Exp;
branches;
next	1.15;

1.15
date	2001.12.13.23.49.38;	author fitzsim;	state Exp;
branches;
next	1.14;

1.14
date	2001.11.12.21.04.36;	author jjohnstn;	state Exp;
branches;
next	1.13;

1.13
date	2001.08.29.13.26.31;	author amylaar;	state Exp;
branches;
next	1.12;

1.12
date	2001.04.21.01.16.48;	author jjohnstn;	state Exp;
branches;
next	1.11;

1.11
date	2001.02.21.23.11.06;	author jjohnstn;	state Exp;
branches;
next	1.10;

1.10
date	2001.01.25.21.40.26;	author aoliva;	state Exp;
branches;
next	1.9;

1.9
date	2001.01.09.19.30.13;	author nickc;	state Exp;
branches;
next	1.8;

1.8
date	2001.01.06.00.59.10;	author jjohnstn;	state Exp;
branches;
next	1.7;

1.7
date	2000.12.14.22.32.42;	author jjohnstn;	state Exp;
branches;
next	1.6;

1.6
date	2000.12.09.01.20.31;	author jjohnstn;	state Exp;
branches;
next	1.5;

1.5
date	2000.12.04.18.15.35;	author jjohnstn;	state Exp;
branches;
next	1.4;

1.4
date	2000.11.30.01.57.26;	author nickc;	state Exp;
branches;
next	1.3;

1.3
date	2000.06.27.19.51.32;	author jjohnstn;	state Exp;
branches;
next	1.2;

1.2
date	2000.05.11.02.28.06;	author wilson;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.39.46;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.125.2.1
date	2012.10.16.15.58.09;	author corinna;	state Exp;
branches;
next	;

1.104.2.1
date	2009.09.10.01.29.06;	author amylaar;	state Exp;
branches;
next	;

1.83.2.1
date	2007.11.12.15.25.48;	author corinna;	state Exp;
branches;
next	;

1.79.2.1
date	2006.03.30.23.17.32;	author jjohnstn;	state Exp;
branches;
next	;

1.78.2.1
date	2006.05.22.22.26.10;	author sandra;	state Exp;
branches;
next	1.78.2.2;

1.78.2.2
date	2006.12.01.11.02.08;	author kazu;	state Exp;
branches;
next	;

1.1.1.1
date	2000.02.17.19.39.46;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.142
log
@	* COPYING.LIBGLOSS: Add Controls and Data Services copyright.
	* COPYING.NEWLIB: Likewise.
libgloss/
	* configure.in: Add Visium support.
	* configure: Regenerate.
	* visium/: New directory.
newlib/
	* configure.host: Add Visium support.
	* libc/machine/configure.in: Likewise.
	* libc/machine/configure: Regenerate.
	* libc/machine/visium/: New directory.
	* libc/include/machine/setjmp.h (_JBLEN): Define for Visium.
	* libc/include/machine/ieeefp.h (__IEEE_BIG_ENDIAN): Likewise.
	* libc/include/machine/time.h (_CLOCKS_PER_SEC_): Likewise.
@
text
@# configure.host

# This shell script handles all host based configuration for newlib.
# It sets various shell variables based on the the host and the
# configuration options.  You can modify this shell script without
# needing to rerun autoconf.

# This shell script should be invoked as
#   . configure.host
# If it encounters an error, it will exit with a message.

# FIXME: This script is too complicated.  It does things in too many
# different ways.  This was taken from the old Cygnus configure script
# with only minor changes.  It should be cleaned up.

# FIXME: The general approach of picking and choosing which
# directories to configure, other than machine_dir and sys_dir, is
# potentially confusing.

# It uses the following shell variables:
#   host		The configuration host
#   host_cpu		The configuration host CPU
#   newlib_mb		--enable-newlib-mb ("yes", "no")
#   target_optspace	--enable-target-optspace ("yes", "no", "")
#   newlib_multithread	--enable-newlib-multithread ("yes", "no", "yes")
#   newlib_elix_level	--enable-newlib-elix-level ("1","2","3","4") ("4")
#   newlib_io_c99_formats --enable-newlib-io-c99-formats ("yes", "no", "")
#   newlib_io_long_long --enable-newlib-io-long-long ("yes", "no", "")
#   newlib_io_long_double --enable-newlib-io-long-double ("yes", "no", "")

# It sets the following shell variables:
#   newlib_cflags	Special CFLAGS to use when building
#   machine_dir		Subdirectory of libc/machine to configure
#   sys_dir		Subdirectory of libc/sys to configure
#   have_sys_mach_dir	Is there a machine subdirectory in sys subdirectory
#   posix_dir		"posix" to build libc/posix, "" otherwise
#   signal_dir		"signal" to build libc/signal, "" otherwise
#   stdio64_dir		"stdio64" to build libc/stdio64, "" otherwise
#   syscall_dir		"syscalls" to build libc/syscalls, "" otherwise
#   unix_dir		"unix" to build libc/unix, "" otherwise
#   use_libtool         flag: use libtool to build newlib?
#   aext                library extension - needed for libtool support
#   oext                object file extension - needed for libtool support
#   lpfx		library object prefix - generated when no libtool
#   crt1                name of crt1 object if one is provided
#   crt1_dir            directory where crt1 object is found
#   have_crt0		"yes"/"no" if crt0 is/isn't provided.
#			"" if crt0 is provided when sys_dir is set
#   noinclude		list of include files to not install

newlib_cflags=
libm_machine_dir=
machine_dir=
sys_dir=
posix_dir=
signal_dir=signal
stdio_dir=stdio
stdio64_dir=
xdr_dir=
syscall_dir=
unix_dir=
noinclude=
mach_add_setjmp=
crt1=
crt1_dir=
have_crt0=
use_libtool=no
have_sys_mach_dir=no
default_newlib_io_c99_formats=no
default_newlib_io_long_long=no
default_newlib_io_long_double=no
default_newlib_io_pos_args=no
default_newlib_atexit_dynamic_alloc=yes
default_newlib_nano_malloc=no
aext=a
oext=o
lpfx="lib_a-"

case "${target_optspace}:${host}" in
  yes:*)
    newlib_cflags="${newlib_cflags} -Os"
    ;;
  :m32r-* | :d10v-* | :d30v-* | :avr-* | :m32c-* | :msp430*-* | :nds32* | :rl78-* )
    newlib_cflags="${newlib_cflags} -Os"
    ;;
  no:* | :*)
    ;;
esac

# Get the source directories to use for the CPU type.
# machine_dir should supply CPU dependent routines, such as setjmp.
# newlib_cflags is passed to gcc when compiling.
# THIS TABLE IS ALPHA SORTED.  KEEP IT THAT WAY.

case "${host_cpu}" in
  a29k)
	machine_dir=a29k
	;;
  aarch64*)
	machine_dir=aarch64
	libm_machine_dir=aarch64
	;;
  arc)
	machine_dir=
	;;
  arm*)
	machine_dir=arm
	libm_machine_dir=arm
	;;
  avr*)
	newlib_cflags="${newlib_cflags} -DPREFER_SIZE_OVER_SPEED -mcall-prologues"
	;;
  bfin)
	machine_dir=bfin
	;;
  cr16*)
	machine_dir=cr16
       ;;
  cris | crisv32)
	machine_dir=cris
	;;
  crx*)
	machine_dir=crx
	;;
  d10v*)
	machine_dir=d10v
	;;
  d30v*)
	machine_dir=d30v
	;;
  epiphany)
	machine_dir=epiphany
	;;
  fido)
	machine_dir=m68k
	newlib_cflags="${newlib_cflags} -DCOMPACT_CTYPE"
	;;
  fr30)
	machine_dir=fr30
	;;
  frv)
	machine_dir=frv
        ;;
  h8300)
	machine_dir=h8300
	;;
  h8500)
	machine_dir=h8500
	;;
  hppa*)
	machine_dir=hppa
	;;
  i960)
	machine_dir=i960
	;;
  i[34567]86)
	# Don't use for these since they provide their own setjmp.
	case ${host} in
	*-*-sco* | *-*-cygwin*) 
		libm_machine_dir=i386
		machine_dir=i386
		;;
	*) 
		libm_machine_dir=i386
		machine_dir=i386
		mach_add_setjmp=true
		;;
	esac
	;;
  ia64*)
	;;
  iq2000)
	machine_dir=iq2000
	;;
  lm32)
	machine_dir=lm32
	;;
  m32c)
	machine_dir=m32c	
	newlib_cflags="${newlib_cflags} -DPREFER_SIZE_OVER_SPEED -DSMALL_MEMORY"
	;;

  m32r*)
	machine_dir=m32r
	;;

  m68hc11|m6811|m68hc12|m6812)
	machine_dir=m68hc11
	newlib_cflags="-DPREFER_SIZE_OVER_SPEED -Os -mrelax"
	CFLAGS="-g -Os"
	;;
  
  m68*)
	machine_dir=m68k
	newlib_cflags="${newlib_cflags} -DCOMPACT_CTYPE"
	;;
  m88k)
	machine_dir=m88k
	newlib_cflags="${newlib_cflags} -m88000"
	;;
  m88110)
	machine_dir=m88k
	newlib_cflags="${newlib_cflags} -m88110"
	;;
  mcore)
	;;
  microblaze*)
	machine_dir=microblaze
	;;
  mep)
	machine_dir=mep
	;;
  mips*)
	machine_dir=mips
	;;
  mmix)
	;;
  mn10200)
	machine_dir=mn10200
	;;
  mn10300)
	default_newlib_io_long_long="yes"
	machine_dir=mn10300
	;;
  moxie)
	machine_dir=moxie
        ;;
  msp430*)
	newlib_cflags="${newlib_cflags} -DPREFER_SIZE_OVER_SPEED -DSMALL_MEMORY"
	newlib_cflags="${newlib_cflags} -ffunction-sections -fdata-sections "
	newlib_cflags="${newlib_cflags} -mOs "
	newlib_cflags="${newlib_cflags} -mhwmult=none "
	machine_dir=msp430
	default_newlib_nano_malloc="yes"
	;;
  mt*)
	machine_dir=mt
	;;
  nds32*)
	machine_dir=nds32
	libm_machine_dir=nds32
	newlib_cflags="${newlib_cflags} -ffunction-sections -fdata-sections"
	newlib_cflags="${newlib_cflags} -DHAVE_RENAME"
	;;
  nios2*)
	machine_dir=nios2
	;;
  or1k*|or1knd*)
	machine_dir=or1k
	;;
  powerpc*)
	machine_dir=powerpc
	;;
  rl78)
	machine_dir=rl78
	newlib_cflags="${newlib_cflags} -DPREFER_SIZE_OVER_SPEED -DSMALL_MEMORY"
	newlib_cflags="${newlib_cflags} -ffunction-sections -fdata-sections "
	;;
  rx)
	machine_dir=rx
	default_newlib_io_long_long="yes"
	newlib_cflags="${newlib_cflags} -ffunction-sections -fdata-sections "
	;;
  sh | sh64)
	machine_dir=sh
	;;
  sparc*)
	machine_dir=sparc
	# FIXME: Might wish to make MALLOC_ALIGNMENT more generic.
	newlib_cflags="${newlib_cflags} -DMALLOC_ALIGNMENT=8"
	;;
  tic4x|c4x)
	machine_dir=tic4x
	;;
  tic6x)
	machine_dir=tic6x
	;;
  tic80*)
	machine_dir=tic80
	;;
  v70)
	;;
  v810)
	;;
  v850*)
	machine_dir=v850
	newlib_cflags="${newlib_cflags} -DPREFER_SIZE_OVER_SPEED "
	;;
  visium)
	machine_dir=visium
	;;
  w65*)
	machine_dir=w65
	;;
  x86_64)
	machine_dir=x86_64
	;;
  xc16x*)
        machine_dir=xc16x
        ;;
  xstormy16)
	machine_dir=xstormy16
	newlib_cflags="${newlib_cflags} -DMALLOC_PROVIDED"
	newlib_cflags="${newlib_cflags} -DPREFER_SIZE_OVER_SPEED"
        ;;
  z8k)
	machine_dir=z8k
	;;
  spu)
	stdio_dir=
	libm_machine_dir=spu
	machine_dir=spu
	newlib_cflags="${newlib_cflags} -D_POSIX_MODE"
	newlib_cflags="${newlib_cflags} -DREENTRANT_SYSCALLS_PROVIDED"
	newlib_cflags="${newlib_cflags} -DMISSING_SYSCALL_NAMES"
	newlib_cflags="${newlib_cflags} -ffunction-sections -fdata-sections "
	;;
  *)
	echo '***' "Newlib does not support CPU ${host_cpu}" 1>&2
	exit 1
	;;
esac

# Disable thread support if requested.

if [ "${newlib_multithread}" = "no" ] ; then
	newlib_cflags="${newlib_cflags} -D__SINGLE_THREAD__"
fi

# Disable syscall support if requested.

if [ "${newlib_may_supply_syscalls}" = "no" ] ; then
        newlib_cflags="${newlib_cflags} -D__NO_SYSCALLS__"
fi

# Enable multibyte support if requested or it is defaulted
# for target.

if [ "x${newlib_mb}" = "x" ]; then
	case "${host}" in
  	  i[34567]86-pc-linux-*|*-*-cygwin*)
		newlib_mb=yes
	  	;;
	esac
fi

# Disable printf/scanf floating-point support if requested.

if [ "${newlib_io_float}" = "no" ] ; then
	newlib_cflags="${newlib_cflags} -DNO_FLOATING_POINT"
fi

# Verify if shared newlib support is allowed and set appropriate variables
# We don't want to use libtool for platforms that we are not going to
# support shared libraries.  This is because it adds executable tests which
# we don't want for most embedded platforms.
case "${host}" in
  i[34567]86-pc-linux-*)
    use_libtool=yes
    have_sys_mach_dir=yes
    stdio64_dir=stdio64
    oext=lo
    lpfx=
    aext=la ;;
  *) ;; #shared library not supported for ${host}
esac

# Get the source directories to use for the host.  unix_dir is set
# to unix to get some standard Unix routines.  posix_dir is set to get some
# standard Posix routines.  sys_dir should supply system dependent routines
# including crt0.
# THIS TABLE IS ALPHA SORTED.  KEEP IT THAT WAY.

case "${host}" in
  *-*-cygwin*)
	posix_dir=posix
	stdio64_dir=stdio64
	xdr_dir=xdr
	;;
  *-*-netware*)
	signal_dir=
	sys_dir=netware
	;;
  *-*-rtems*)			# generic RTEMS support
	sys_dir=rtems
	posix_dir=posix
	unix_dir=unix
	;;
  *-*-tirtos*)
	sys_dir=tirtos
	have_crt0="no"
	;;
  a29k-*-*)
	sys_dir=a29khif
	signal_dir=
	;;
  arc-*-*)
	sys_dir=arc
	;;
  arm*-*-*)
	sys_dir=arm
	if [ "x${newlib_may_supply_syscalls}" = "xno" ] ; then
	  have_crt0="no"
	fi
	;;
  bfin-*-*)
	sys_dir=
	;;
  cr16-*-*)
	sys_dir=
	;;
  crx*)
	sys_dir=
	;;
  d10v*)
	sys_dir=d10v
	;;
  d30v*)
	sys_dir=
	;;
  epiphany-*-*)
	sys_dir=epiphany
	# crt0 is provided by libgloss.
	have_crt0="no"
	;;
  frv*)
        sys_dir=
        ;;
  h8300-*-hms*)
	sys_dir=h8300hms
	;;
  h8300-*-elf*)
	sys_dir=h8300hms
	;;
  h8300-*-coff*)
	sys_dir=h8300hms
	;;
  h8300-*-xray*)
	sys_dir=h8300xray
	;;
  h8500-*-hms*)
	sys_dir=h8500hms
	;;
  h8500-*-elf*)
	sys_dir=h8500hms
	;;
  i[34567]86-*-rdos*)
	sys_dir=rdos
	newlib_cflags="${newlib_cflags} -DMISSING_SYSCALL_NAMES"
	;;
  i[34567]86-*-sco*)
	sys_dir=sysvi386
	unix_dir=unix
	;;
  i[34567]86-pc-linux-*)
	sys_dir=linux
	unix_dir=unix
	posix_dir=posix
	crt1=crt1.o
	crt1_dir=libc/sys/${sys_dir}	
	gcc_dir=`gcc -print-search-dirs | awk '/^install:/{print $2}'`
	default_newlib_io_c99_formats="yes"
	default_newlib_io_long_double="yes"
	default_newlib_io_long_long="yes"
	default_newlib_io_pos_args="yes"
	#newlib_cflags="${newlib_cflags} -Werror" # DEBUGGING ONLY;BREAKS BUILD
	newlib_cflags="${newlib_cflags} -Wall"
	newlib_cflags="${newlib_cflags} -D_I386MACH_ALLOW_HW_INTERRUPTS"
	newlib_cflags="${newlib_cflags} -DHAVE_FCNTL"
	newlib_cflags="${newlib_cflags} -DHAVE_GETOPT"
	newlib_cflags="${newlib_cflags} -D_NO_POSIX_SPAWN"
	# --- Required when building a shared library ------------------------
	newlib_cflags="${newlib_cflags} -fPIC -D_I386MACH_NEED_SOTYPE_FUNCTION"
	# --- The three lines below are optional ------------------------------
	##newlib_cflags="${newlib_cflags} -nostdinc"
	##newlib_cflags="${newlib_cflags} -I`newlib-flags --kernel-dir`/include"
	##newlib_cflags="${newlib_cflags} -idirafter ${gcc_dir}include"
	;;

  m68hc11-*-*|m6811-*-*|m6812-*-*|m68hc12-*-*)
	;;

  m68k-sun-sunos*)
	unix_dir=unix
	;;
  m8*-bug-*)
	sys_dir=m88kbug
	;;
  mep-*-*)
	default_newlib_io_long_long="yes"
	newlib_cflags="${newlib_cflags} -DMISSING_SYSCALL_NAMES"
	;;
  microblaze*-*-*)
	machine_dir=microblaze
	;;
  mips*-dec-*)
	sys_dir=decstation
	;;
  mmix-knuth-mmixware)
	sys_dir=mmixware
	;;
  moxie*)
        sys_dir=
        ;;
  nios2*)
	sys_dir=
	;;
  or1k-*-elf | or1knd-*-elf)
	sys_dir=or1k
	newlib_cflags="${newlib_cflags} -DREENTRANT_SYSCALLS_PROVIDED "
	have_crt0="no"
	;;
  powerpcle-*-pe)
	posix_dir=posix
	;;
  sh*-*)
	sys_dir=sh
	;;
  sparc-sun-sunos*)
	sys_dir=sun4
	unix_dir=unix
	;;
  sparc64*)
	sys_dir=sparc64
	unix_dir=unix
	;;
  spu-*-*)
	default_newlib_io_long_long="yes"
	default_newlib_atexit_dynamic_alloc="no"
	;;
  tic6x*)
	newlib_cflags="${newlib_cflags} -DMISSING_SYSCALL_NAMES"
	have_crt0="no"
	;;
  tic80*)
	sys_dir=tic80
	;;
  v70-nec-*)
	sys_dir=sysvnecv70
	;;
  v810-*-*)
	sys_dir=sysnec810
	;;
  v850*-*-*)
	sys_dir=sysnecv850
        if [ "x${newlib_may_supply_syscalls}" = "xno" ] ; then
          have_crt0="no"
        fi
	;;
  visium-*-*)
	sys_dir=
	;;
  w65-*-*)
	sys_dir=w65
	;;
  z8k-*-coff)
	sys_dir=z8ksim
	;;
esac

# Host specific flag settings -- usually for features that are not
# general enough or broad enough to be handled above.
# THIS TABLE IS ALPHA SORTED.  KEEP IT THAT WAY.

case "${host}" in
  *-*-cygwin*)
	test -z "$cygwin_srcdir" && cygwin_srcdir=`cd ${srcdir}/../winsup/cygwin; pwd`
	export cygwin_srcdir
	default_newlib_io_c99_formats="yes"
	default_newlib_io_long_long="yes"
	default_newlib_io_long_double="yes"
	default_newlib_io_pos_args="yes"
	CC="${CC} -I${cygwin_srcdir}/include"
	newlib_cflags="${newlib_cflags} -DHAVE_OPENDIR -DHAVE_RENAME -DSIGNAL_PROVIDED -D_COMPILING_NEWLIB -DHAVE_BLKSIZE -DHAVE_FCNTL -DMALLOC_PROVIDED"
	syscall_dir=syscalls
	;;
# RTEMS supplies its own versions of some routines:
#       malloc()            (reentrant version)
#       exit()              RTEMS has a "global" reent to flush
#       signal()/raise()    RTEMS has its own including pthread signals
#       _XYZ_r()            RTEMS has its own reentrant routines
#
#  NOTE: When newlib malloc uses a semaphore, RTEMS will switch to that.
  *-*-rtems*)
	default_newlib_io_long_long="yes"
	default_newlib_io_c99_formats="yes"
	newlib_cflags="${newlib_cflags} -D_COMPILING_NEWLIB"
	newlib_cflags="${newlib_cflags} -DMALLOC_PROVIDED -DEXIT_PROVIDED -DSIGNAL_PROVIDED -DREENTRANT_SYSCALLS_PROVIDED -DHAVE_NANOSLEEP -DHAVE_BLKSIZE -DHAVE_FCNTL -DHAVE_ASSERT_FUNC"
        # turn off unsupported items in posix directory 
	newlib_cflags="${newlib_cflags} -D_NO_GETLOGIN -D_NO_GETPWENT -D_NO_GETUT -D_NO_GETPASS -D_NO_SIGSET -D_NO_WORDEXP -D_NO_POPEN -D_NO_POSIX_SPAWN"
	;;
# VxWorks supplies its own version of malloc, and the newlib one
# doesn't work because VxWorks does not have sbrk.
  *-wrs-vxworks*)
	newlib_cflags="${newlib_cflags} -DMALLOC_PROVIDED -DMISSING_SYSCALL_NAMES -DHAVE_FCNTL"
	;;
# TIRTOS supplies its own version of malloc
  *-*-tirtos*)
	newlib_cflags="${newlib_cflags} -D__DYNAMIC_REENT__ -DMALLOC_PROVIDED"
	;;
# UDI doesn't have exec, so system() should fail the right way
  a29k-amd-udi)
	newlib_cflags="${newlib_cflags} -DNO_EXEC"
	syscall_dir=syscalls
	;;
  aarch64*-*-*)
	default_newlib_io_long_long="yes"
	syscall_dir=syscalls
	;;
  arc-*-*)
	syscall_dir=syscalls
	;;
  arm*-*-pe)
	syscall_dir=syscalls
	;;
  arm*-*-*)
	syscall_dir=syscalls
# If newlib is supplying syscalls, select which debug protocol is being used.
# ARM_RDP_MONITOR selects the Demon monitor.
# ARM_RDI_MONITOR selects the Angel monitor.
# If neither are defined, then hard coded defaults will be used
# to create the program's environment.
# If --disable-newlib-supplied-syscalls is specified, then the end-user
# may specify the protocol via gcc spec files supplied by libgloss.
	if [ "x${newlib_may_supply_syscalls}" = "xyes" ] ; then
#         newlib_cflags="${newlib_cflags} -DARM_RDP_MONITOR"
	  newlib_cflags="${newlib_cflags} -DARM_RDI_MONITOR"
	fi
	;;
  arc*)
	newlib_cflags="${newlib_cflags} -DREENTRANT_SYSCALLS_PROVIDED"
	;;
  avr*)
	newlib_cflags="${newlib_cflags} -DNO_EXEC -DSMALL_MEMORY -DMISSING_SYSCALL_NAMES"
	;;
  bfin*)
	syscall_dir=syscalls
	;;
  cris-*-* | crisv32-*-*)
	default_newlib_io_long_long="yes"
	newlib_cflags="${newlib_cflags} -DHAVE_RENAME -D_USE_WRITE -DCOMPACT_CTYPE"
	syscall_dir=syscalls
	;;
  cr16-*-*)
	syscall_dir=syscalls
	;;
  crx-*-*)
	newlib_cflags="${newlib_cflags} -DHAVE_RENAME -DMISSING_SYSCALL_NAMES"
	syscall_dir=
	;;
  d10v*)
	newlib_cflags="${newlib_cflags} -DSMALL_MEMORY"
	syscall_dir=syscalls
	;;
  d30v*)
	newlib_cflags="${newlib_cflags} -DABORT_MESSAGE -DSMALL_MEMORY -DMISSING_SYSCALL_NAMES"
	syscall_dir=
	;;
  epiphany*)
	syscall_dir=syscalls
	newlib_cflags="${newlib_cflags} -DSIGNAL_PROVIDED"
	;;
  fido-*-elf)
	newlib_cflags="${newlib_cflags} -DHAVE_RENAME -DHAVE_SYSTEM -DMISSING_SYSCALL_NAMES"
	syscall_dir=
	;;
  fr30-*-*)
	syscall_dir=syscalls
	;;
  frv-*-*)
        syscall_dir=syscalls
	default_newlib_io_long_long="yes"
        ;;
  h8300*-*-*)
	syscall_dir=syscalls	
	default_newlib_io_long_long="yes"
	newlib_cflags="${newlib_cflags} -DSMALL_DTOA -DSMALL_MEMORY"
	# Simulator only extensions for H8300.
	# Uncomment the next line to enable them.
	# newlib_cflags="${newlib_cflags} -D__SIMULATOR__"
	;;	
  h8500-*-*)
	syscall_dir=syscalls	
	newlib_cflags="${newlib_cflags} -DSMALL_DTOA -DSMALL_MEMORY"
	;;	
  i[34567]86-*-sco*)
	newlib_cflags="${newlib_cflags} -DSIGNAL_PROVIDED -DHAVE_FCNTL"
	;;
  i[34567]86-*-netware*)
	newlib_cflags="${newlib_cflags} -DMISSING_SYSCALL_NAMES -DNO_EXEC -DABORT_PROVIDED -DCLOCK_PROVIDED -DMALLOC_PROVIDED -DHAVE_FCNTL"
	;;
  iq2000*)
	syscall_dir=syscalls
	default_newlib_io_long_long="yes"
	;;
  lm32-*-*)
	syscall_dir=syscalls
	;;
  m32c-*-*)
	default_newlib_io_long_long="yes"
	newlib_cflags="${newlib_cflags} -DMISSING_SYSCALL_NAMES -DABORT_PROVIDED"
	syscall_dir=
  	;;
  m32r-*-*)
	# Pass -msdata=sdata so _impure_ptr goes in .sdata.
	# We don't generate sda relocs however for upward compatibility.
	# FIXME: This is necessary because the default multilib doesn't
	# use --print-multi-lib.
	newlib_cflags="${newlib_cflags} -msdata=sdata"
	syscall_dir=syscalls
	;;
  m68hc11-*-*|m6811-*-*|m68hc12-*-*|m6812-*-*)
	newlib_cflags="${newlib_cflags} -DNO_EXEC -DABORT_PROVIDED -DSMALL_MEMORY -DMISSING_SYSCALL_NAMES"
	;;
  m68k-unknown-elf)
	newlib_cflags="${newlib_cflags} -DHAVE_RENAME -DHAVE_SYSTEM -DMISSING_SYSCALL_NAMES"
	syscall_dir=
	;;
  mcore-*-*)
	syscall_dir=syscalls
	;;
  microblaze*-*-*)
   	default_newlib_io_long_long="yes"
 	newlib_cflags="${newlib_cflags} -DMISSING_SYSCALL_NAMES -DSMALL_MEMORY -D_REENT_SMALL"
	;;
  mips64vr*-*-*)
	default_newlib_io_long_long="yes"
	newlib_cflags="${newlib_cflags} -DMISSING_SYSCALL_NAMES"
	;;
  mips*-*-elf*)
	default_newlib_io_long_long="yes"
	newlib_cflags="${newlib_cflags} -DMISSING_SYSCALL_NAMES"
	;;
  mmix-*)
	syscall_dir=syscalls
	# We need every symbol 32-bit aligned, so the invalid
	# construct with attribute ((alias ("_ctype_b+127"))) breaks.
	newlib_cflags="${newlib_cflags} -DCOMPACT_CTYPE"
	;;
  mn10?00-*-*)
	syscall_dir=syscalls
	;;
  moxie-*-elf* | moxie-*-rtems*)
        syscall_dir=syscalls
	default_newlib_io_long_long="yes"
        ;;
  moxie-*-moxiebox)
        syscall_dir=syscalls
	default_newlib_io_long_long="yes"
	newlib_cflags="${newlib_cflags} -Os -DPREFER_SIZE_OVER_SPEED -DSMALL_MEMORY"
        ;;
  nios2*)
	syscall_dir=
	newlib_cflags="${newlib_cflags} -DHAVE_RENAME -DHAVE_SYSTEM -DMISSING_SYSCALL_NAMES"
	;;
  nds32*)
	syscall_dir=syscalls
	;;
  or1k*|or1knd*)
	syscall_dir=syscalls
	;;
  powerpc*-*-eabialtivec*)
	default_newlib_io_long_long="yes"
	newlib_cflags="${newlib_cflags} -DMISSING_SYSCALL_NAMES"
	;;
  powerpc*-*-eabispe*)
	default_newlib_io_long_long="yes"
	newlib_cflags="${newlib_cflags} -DMISSING_SYSCALL_NAMES"
	;;
  powerpc*-*-eabi* | \
  powerpc*-*-elf* | \
  powerpc*-*-linux* | \
  powerpc*-*-rtem* | \
  powerpc*-*-sysv* | \
  powerpc*-*-solaris*)
	default_newlib_io_long_long="yes"
	newlib_cflags="${newlib_cflags} -mrelocatable-lib -mno-eabi -mstrict-align -DMISSING_SYSCALL_NAMES"
	;;
  powerpcle-*-pe)
	newlib_cflags="${newlib_cflags} -DHAVE_OPENDIR -DHAVE_RENAME -DHAVE_FCNTL -D_NO_POSIX_SPAWN"
	syscall_dir=syscalls
	;;
  sh*-*-*)
	default_newlib_io_long_long="yes"
	syscall_dir=syscalls
	;;
  sparc-sun-sunos*)
	newlib_cflags="${newlib_cflags} -DSIGNAL_PROVIDED"
	;;
  sparc64-*-*)
	newlib_cflags="${newlib_cflags} -DREENTRANT_SYSCALLS_PROVIDED -DHAVE_BLKSIZE -DHAVE_FCNTL"
	# This either belongs elsewhere or nowhere. But I need *something*,
	# so for now it's here ...
	case "${host_os}" in
	  aoutv8 | *32p)
		newlib_cflags="${newlib_cflags} -DTARGET_PTR_SIZE=32" ;;
	  *)
		newlib_cflags="${newlib_cflags} -DTARGET_PTR_SIZE=64" ;;
	esac
	;;
  tic6x*)
	syscall_dir=
	newlib_cflags="${newlib_cflags} -DCLOCK_PROVIDED"
	;;
  tic80*)
	syscall_dir=syscalls
	;;
  v850*-*-*)
	syscall_dir=syscalls
	;;
  visium-*-*)
	newlib_cflags="${newlib_cflags} -DCLOCK_PROVIDED -DHAVE_SYSTEM -DMISSING_SYSCALL_NAMES"
	syscall_dir=
	;;
  w65-*-*)
	syscall_dir=syscalls	
	newlib_cflags="${newlib_cflags} -DSMALL_DTOA -DSMALL_MEMORY"
	;;
  xc16x-*)
          syscall_dir=syscalls
        ;;
  xstormy16-*-*)
	syscall_dir=syscalls
	;;
  z8k-*-*)
	syscall_dir=syscalls
	;;
  *)
	newlib_cflags="${newlib_cflags} -DMISSING_SYSCALL_NAMES"
	syscall_dir=
	;;
esac

# Use defaults for certain settings if not specified by user

# Enable C99 format support in I/O routines if requested.
if [ "x${newlib_io_c99_formats}" = "x" ]; then
	if [ ${default_newlib_io_c99_formats} = "yes" ]; then
		newlib_io_c99_formats="yes";
	fi
fi

# Enable long long support in I/O routines if requested.
if [ "x${newlib_io_long_long}" = "x" ]; then
	if [ ${default_newlib_io_long_long} = "yes" ]; then
		newlib_io_long_long="yes";
	fi
fi

# Enable long double support in I/O routines if requested.
if [ "x${newlib_io_long_double}" = "x" ]; then
	if [ ${default_newlib_io_long_double} = "yes" ]; then
		newlib_io_long_double="yes";
	fi
fi

# Enable printf positional argument support if requested.
if [ "x${newlib_io_pos_args}" = "x" ]; then
	if [ ${default_newlib_io_pos_args} = "yes" ]; then
		newlib_io_pos_args="yes";
	fi
fi

# Disable atexit dynamic allocation if requested.
if [ "x${newlib_atexit_dynamic_alloc}" = "x" ]; then
	if [ ${default_newlib_atexit_dynamic_alloc} = "yes" ]; then
		newlib_atexit_dynamic_alloc="yes"; 
	fi
fi

# Enable nano-malloc if requested.
if [ "x${newlib_nano_malloc}" = "x" ]; then
	if [ ${default_newlib_nano_malloc} = "yes" ]; then
		newlib_nano_malloc="yes";
	fi
fi

# Remove rpc headers if xdr_dir not specified
if [ "x${xdr_dir}" = "x" ]; then
	noinclude="${noinclude} rpc/types.h rpc/xdr.h"
fi

if test -z "${have_crt0}" && test -n "${sys_dir}"; then
  have_crt0="yes"
fi
@


1.141
log
@	* configure.host: Add extra system for OpenRISC baremetal.
@
text
@d289 3
d550 3
d811 4
@


1.140
log
@	* configure.host: Add libm nds32 machine directory.
	* libm/machine/configure: Regenerated.
	* libm/machine/configure.in: Add nds32 AC_CONFIG.
	* libm/machine/nds32/Makefile.am: New file.
	* libm/machine/nds32/Makefile.in: Generated.
	* libm/machine/nds32/aclocal.m4: Generated.
	* libm/machine/nds32/configure: Generated.
	* libm/machine/nds32/configure.in: New file.
	* libm/machine/nds32/w_sqrt.S: New file.
	* libm/machine/nds32/wf_sqrt.S: New file.
@
text
@d505 4
a508 2
  or1k-*-* | or1knd-*-*)
        syscall_dir=syscalls
d753 3
@


1.139
log
@
2014-12-12  Stefan Wallentowitz  <stefan.wallentowitz@@tum.de>

        * configure.host: or1knd support, OpenRISC without delay slot
        * libc/include/machine/setjmp.h: Add or1knd
        * libc/machine/or1k/setjmp.S: Optional delay slot
@
text
@d241 1
a241 2
	newlib_cflags="${newlib_cflags} -DPREFER_SIZE_OVER_SPEED "
	newlib_cflags="${newlib_cflags} -DSMALL_MEMORY "
d243 1
@


1.138
log
@	PR target/63901
	* configure.host (msp430): Add -mhwmult=none to newlib_cflags.
@
text
@d248 1
a248 1
  or1k*)
@


1.137
log
@Add moxiebox support.
@
text
@d232 1
@


1.136
log
@	* configure.host: Remove or16 and or32 targets and add or1k.
	* libc/include/machine/ieeefp.h: Replace or32 with or1k.
	* libc/machine/configure.in: Add or1k subdirectory.
	* libc/machine/or1k/configure.in: New file.
	* libc/machine/or1k/Makefile.am: New file.
	* libc/machine/or1k/setjmp.S: New file.
@
text
@d179 1
a179 1
	machine_dir=m32c
d734 1
a734 1
  moxie-*-*)
d738 5
@


1.135
log
@* configure.host (default_newlib_nano_malloc): New.
(msp430): Set it.
* configure.in (newlib_nano_malloc): Leave unset if not set by
the user.
* configure: Regenerate.
* libc/configure.in (NEWLIB_NANO_MALLOC): Set after running
configure.host.
(newlib_nano_malloc): Leave unset if not set by	the user.
* libc/configure: Regenerate.
@
text
@d247 2
a248 3
  or16)
	;;
  or32)
d504 3
@


1.134
log
@
2014-04-04  Ashish Kapania  <akapania@@ti.com>

        * configure.host (sys_dir, newlib_cflags): Set sys_dir to tirtos and use
        -D__DYNAMIC_REENT__ and -DMALLOC_PROVIDED compiler options for TIRTOS
        target.
        * libc/stdio/local.h (_STDIO_CLOSE_PER_REENT_STD_STREAMS): Change #ifdef
        to not define this macro when __tirtos__ is defined.
        * libc/sys/tirtos : Add support for TIRTOS.
        * libc/sys/tirtos/Makefile.am, libc/sys/tirtos/lock.c: New files.
        * libc/sys/tirtos/configure.in, libc/sys/tirtos/include/sys/lock.h: Ditto.
@
text
@d74 1
d233 1
d848 7
@


1.133
log
@	* configure.host (newlib_cflags): Use -Os, -ffunction-sections and
	-fdata-sections for RL78.
@
text
@d384 4
d584 4
@


1.132
log
@
2013-10-01  Petr Hosek  <phosek@@chromium.org>

        * configure.host: Disable new posix_spawn function for all
        users of posix dir except Cygwin.
        * libc/posix/Makefile.am: Add support for new posix_spawn function.
        * libc/posix/Makefile.in: Regenerate.
        * libc/posix/posix_spawn.c: New file.
        * libc/include/spawn.h: Ditto.
@
text
@d82 1
a82 1
  :m32r-* | :d10v-* | :d30v-* | :avr-* | :m32c-* | :msp430*-* | :nds32* )
d255 1
d294 2
a295 2
    machine_dir=xc16x
    ;;
@


1.131
log
@	* configure.host: Change to microblaze*.
	* libc/include/machine/ieeefp.h: Add __MICROBLAZEEL__.
	* libc/machine/microblaze/mb_endian.h: New file.
	* newlib/libc/machine/microblaze/strcmp.c: Add little endian support.
	* newlib/libc/machine/microblaze/strcpy.c: Likewise.
	* newlib/libc/machine/microblaze/strlen.c: Likewise.

	* configure.in: Change to microblaze*.
	* configure: Regenerate.
	* microblaze/xilinx.ld: Remove OUTPUT_FORMAT.
@
text
@d461 1
d572 1
a572 1
	newlib_cflags="${newlib_cflags} -D_NO_GETLOGIN -D_NO_GETPWENT -D_NO_GETUT -D_NO_GETPASS -D_NO_SIGSET -D_NO_WORDEXP -D_NO_POPEN"
d750 1
a750 1
	newlib_cflags="${newlib_cflags} -DHAVE_OPENDIR -DHAVE_RENAME -DHAVE_FCNTL"
@


1.130
log
@
2013-07-09  Sabrina Ni  <sabrina@@andestech.com>

        * configure.host (machine_dir, syscall_dir, newlib_cflags):
        Add settings for nds32*.
        * libc/include/machine/ieeefp.h (IEEE_BIG_ENDIAN, IEEE_LITTLE_ENDIAN):
        Ditto.
        * libc/include/machine/setjmp.h (JBLEN): Ditto.
        * libc/machine/configure.in: Add nds32 subdir.
        * libc/machine/configure: Regenerated.
        * libc/machine/nds32/Makefile.am: New.
        * libc/machine/nds32/Makefile.in: New (autogenerated).
        * libc/machine/nds32/aclocal.m4: New (autogenerated).
        * libc/machine/nds32/configure.in: New.
        * libc/machine/nds32/configure: New (autogenerated).
        * libc/machine/nds32/setjmp.S: New.
@
text
@d206 1
a206 1
  microblaze)
d482 1
a482 1
  microblaze-*-*)
d699 1
a699 1
  microblaze-*-*)
@


1.129
log
@[newlib]
* configure.host (msp430): Add.
* libc/include/machine/ieeefp.h: Add MSP430 support.
* libc/include/machine/setjmp.h: Likewise.
* libc/include/sys/config.h: Likewise.
* libc/machine/configure.in (msp430): Add.
* libc/machine/configure: Regenerate.
* libc/machine/msp430: New directory.

[libgloss]
* configure.in (msp430*-*-elf): Add.
* configure: Regenerate.
* msp430: New directory.
@
text
@d82 1
a82 1
  :m32r-* | :d10v-* | :d30v-* | :avr-* | :m32c-* | :msp430*-* )
d236 6
d728 3
@


1.128
log
@
2013-05-06  Sandra Loosemore  <sandra@@codesourcery.com>

        * configure.host (machine_dir, sys_dir, syscall_dir, newlib_cflags):
        Add settings for nios2*.
        * libc/include/machine/ieeefp.h (IEEE_BIG_ENDIAN, IEEE_LITTLE_ENDIAN):
        Likewise.
        * libc/include/machine/setjmp.h (JBLEN, JBTYPE): Likewise.
        * libc/machine/configure.in: Add nios2 subdir.
        * libc/machine/configure: Regenerated.
        * libc/machine/nios2/Makefile.am: New.
        * libc/machine/nios2/Makefile.in: New (autogenerated).
        * libc/machine/nios2/aclocal.m4: New (copied from mips version).
        * libc/machine/nios2/configure.in: New.
        * libc/machine/nios2/configure: New (autogenerated).
        * libc/machine/nios2/setjmp.s: New.
@
text
@d82 1
a82 1
  :m32r-* | :d10v-* | :d30v-* | :avr-* | :m32c-* )
d227 6
@


1.127
log
@
2012-12-04  Kyrylo Tkachov  <kyrylo.tkachov@@arm.com>

        * configure.host: Define libm_machine_dir value for arm.
        * libm/machine/configure.in: Add arm to libm machines list.
        * libm/machine/configure: Regenerate.
        * libm/machine/arm/Makefile.am: New file.
        * libm/machine/arm/Makefile.in: Generated.
        * libm/machine/arm/aclocal.m4: Generated.
        * libm/machine/arm/configure: Generated.
        * libm/machine/arm/configure.in: New file.
        * libm/machine/arm/s_ceil.c: Likewise.
        * libm/machine/arm/s_floor.c: Likewise.
        * libm/machine/arm/s_nearbyint.c: Likewise.
        * libm/machine/arm/s_rint.c: Likewise.
        * libm/machine/arm/s_round.c: Likewise.
        * libm/machine/arm/s_trunc.c: Likewise.
        * libm/machine/arm/sf_ceil.c: Likewise.
        * libm/machine/arm/sf_floor.c: Likewise.
        * libm/machine/arm/sf_nearbyint.c: Likewise.
        * libm/machine/arm/sf_rint.c: Likewise.
        * libm/machine/arm/sf_round.c: Likewise.
        * libm/machine/arm/sf_trunc.c: Likewise.
@
text
@d230 3
d482 3
d712 4
@


1.126
log
@
2012-09-26  Ian Bolton  <ian.bolton@@arm.com>
        Jim MacArthur  <jim.macarthur@@arm.com>
        Marcus Shawcroft  <marcus.shawcroft@@arm.com>
        Nigel Stephens  <nigel.stephens@@arm.com>
        Ramana Radhakrishnan  <ramana.radhakrishnan@@arm.com>
        Richard Earnshaw  <rearnsha@@arm.com>
        Sofiane Naci  <sofiane.naci@@arm.com>
        Tejas Belagod  <tejas.belagod@@arm.com>
        Yufeng Zhang  <yufeng.zhang@@arm.com>

        * configure.host: Add AArch64.
        * libc/include/machine/ieeefp.h: Add AArch64.
        * libc/include/machine/setjmp.h: Add AArch64.
        * libc/include/machine/time.h: Add AArch64.
        * libc/include/sys/config.h: Add AArch64.
        * libc/machine/aarch64/Makefile.am: New file.
        * libc/machine/aarch64/Makefile.in: Generated.
        * libc/machine/aarch64/aclocal.m4: Generated.
        * libc/machine/aarch64/configure: Generated.
        * libc/machine/aarch64/configure.in: New file.
        * libc/machine/aarch64/setjmp.S: New file.
        * libc/machine/configure.in: Add AArch64.
        * libc/machine/configure: Re-generated.
        * libm/machine/aarch64/Makefile.am: New file.
        * libm/machine/aarch64/Makefile.in: Generated.
        * libm/machine/aarch64/aclocal.m4: Generated.
        * libm/machine/aarch64/configure: Generated.
        * libm/machine/aarch64/configure.in: New file.
        * libm/machine/aarch64/s_ceil.c: New file.
        * libm/machine/aarch64/s_floor.c: New file.
        * libm/machine/aarch64/s_fma.c: New file.
        * libm/machine/aarch64/s_fmax.c: New file.
        * libm/machine/aarch64/s_fmin.c: New file.
        * libm/machine/aarch64/s_llrint.c: New file.
        * libm/machine/aarch64/s_llround.c: New file.
        * libm/machine/aarch64/s_lrint.c: New file.
        * libm/machine/aarch64/s_lround.c: New file.
        * libm/machine/aarch64/s_nearbyint.c: New file.
        * libm/machine/aarch64/s_rint.c: New file.
        * libm/machine/aarch64/s_round.c: New file.
        * libm/machine/aarch64/s_trunc.c: New file.
        * libm/machine/aarch64/sf_ceil.c: New file.
        * libm/machine/aarch64/sf_floor.c: New file.
        * libm/machine/aarch64/sf_fma.c: New file.
        * libm/machine/aarch64/sf_fmax.c: New file.
        * libm/machine/aarch64/sf_fmin.c: New file.
        * libm/machine/aarch64/sf_llrint.c: New file.
        * libm/machine/aarch64/sf_llround.c: New file.
        * libm/machine/aarch64/sf_lrint.c: New file.
        * libm/machine/aarch64/sf_lround.c: New file.
        * libm/machine/aarch64/sf_nearbyint.c: New file.
        * libm/machine/aarch64/sf_rint.c: New file.
        * libm/machine/aarch64/sf_round.c: New file.
        * libm/machine/aarch64/sf_trunc.c: New file.
        * libm/machine/configure.in: Add AArch64.
        * libm/machine/configure: Re-generated.
@
text
@d107 1
@


1.125
log
@	* configure.host: Accept "arm*" host spec instead of just "arm".
@
text
@d98 4
d564 4
@


1.125.2.1
log
@	Pull in changes from HEAD
	Align ChangeLog with head
	New file ChangeLog.64bit
@
text
@a97 4
  aarch64*)
	machine_dir=aarch64
	libm_machine_dir=aarch64
	;;
a559 4
  aarch64*-*-*)
	default_newlib_io_long_long="yes"
	syscall_dir=syscalls
	;;
@


1.124
log
@
2012-02-21  Jeremy Bennett  <jeremy.bennett@@embecosm.com>
            Alan Lehotsky  <apl@@alum.mit.edu>
            Joern Rennecke  <joern.rennecke@@embecosm.com>

        * configure.host: Add Epiphany support.
        * libc/include/machine/ieeefp.h: Likewise.
        * libc/include/machine/setjmp.h: Likewise.
        * libc/machine/configure.in, libc/sys/configure.in: Likewise.
        * libc/machine/configure, libc/sys/configure: Regenerate.
        * libc/machine/epiphany, libc/sys/epiphany: New directories.
        * NEWS: Mention addition of Epiphany.
@
text
@d101 1
a101 1
  arm)
d370 1
a370 1
  arm-*-*)
d563 1
a563 1
  arm-*-pe)
d566 1
a566 1
  arm-*-*)
@


1.123
log
@* configure.host: Fix typo: xdir_dir -> xdr_dir.
@
text
@d125 3
d391 5
d609 4
@


1.122
log
@[libgloss]
* configure.in: Add rl78.
* configure: Regenerate.
* rl78: New directory

[newlib]
* configure.host: Add rl78.
* libc/include/machine/ieeefp.h: Add rl78 support.
* libc/include/machine/setjmp.h: Add rl78 support.
* libc/machine/configure.in: Add rl78.
* libc/machine/rl78: New directory.
@
text
@d791 1
a791 1
if [ "x${xdir_dir}" = "x" ]; then
@


1.121
log
@libgloss:
	* configure.in: Don't handle strongarm, ep9312 and xscale target
	names.
	* configure: Regenerate.
	* libnosys/configure.in: Don't handle strongarm and thumb target
	names.
	* libnosys/configure: Regenerate.

newlib:
	* configure.host: Don't handle ep9312, strongarm, xscale and thumb
	target names.
	* libc/machine/configure.in: Don't handle xscale target names.
	* libc/machine/configure: Regenerate.
@
text
@d229 4
@


1.120
log
@
2011-01-12  Jeff Johnston  <jjohnstn@@redhat.com>

        * configure.host: Add noinclude variable to allow specification
        of header files to remove from installation.
        * acinclude.m4: Provide NO_INCLUDE_LIST variable based on
        noinclude variable in configure.host.
        * configure: Regenerated.
        * Makefile.am: Remove all header files in NO_INCLUDE_LIST.
        * Makefile.in: Regenerated.
@
text
@a124 3
  ep9312)
	machine_dir=arm
	;;
a241 9
  strongarm)
	machine_dir=arm
	;;
  xscale)
	machine_dir=xscale
	;;
  thumb)
	machine_dir=arm
	;;
a383 6
  ep9312-*-*)
	sys_dir=arm
	if [ "x${newlib_may_supply_syscalls}" = "xno" ] ; then
	  have_crt0="no"
	fi
	;;
a479 12
  strongarm-*-*)
	sys_dir=arm
	if [ "x${newlib_may_supply_syscalls}" = "xno" ] ; then
	  have_crt0="no"
	fi
	;;
  thumb-*-*)
	sys_dir=arm
	if [ "x${newlib_may_supply_syscalls}" = "xno" ] ; then
	  have_crt0="no"
	fi
	;;
a501 6
  xscale-*-*)
	sys_dir=arm
	if [ "x${newlib_may_supply_syscalls}" = "xno" ] ; then
	  have_crt0="no"
	fi
	;;
a562 1
# See also thumb below.
a596 6
  ep9312-*-*)
	syscall_dir=syscalls
	if [ "x${newlib_may_supply_syscalls}" = "xyes" ] ; then
	  newlib_cflags="${newlib_cflags} -DARM_RDI_MONITOR"
	fi
	;;
a719 21
  strongarm-*-*)
	syscall_dir=syscalls
	;;
  thumb-*-pe)
	syscall_dir=syscalls
# Don't use the debugging protocols just yet.
	;;
  thumb-*-*)
	syscall_dir=syscalls
# If newlib is supplying syscalls, select which debug protocol is being used.
# ARM_RDP_MONITOR selects the Demon monitor.
# ARM_RDI_MONITOR selects the Angel monitor.
# If neither are defined, then hard coded defaults will be used
# to create the program's environment.
# If --disable-newlib-supplied-syscalls is specified, then the end-user
# may specify the protocol via gcc spec files supplied by libgloss.
	if [ "x${newlib_may_supply_syscalls}" = "xyes" ] ; then
#         newlib_cflags="${newlib_cflags} -DARM_RDP_MONITOR"
	  newlib_cflags="${newlib_cflags} -DARM_RDI_MONITOR"
	fi
	;;
a736 7
  xscale-*-*)
	syscall_dir=syscalls
	newlib_cflags="${newlib_cflags} -DHAVE_SYSTEM -DHAVE_RENAME"
	if [ "x${newlib_may_supply_syscalls}" = "xyes" ] ; then
	  newlib_cflags="${newlib_cflags} -DARM_RDI_MONITOR"
	fi
	;;
@


1.119
log
@
2010-12-02  Jayant Sonar  jayant.sonar@@kpitcummins.com
            Kaushik Phatak  kaushik.phatak@@kpitcummins.com

        * configure.host: Add CR16 support.
        * libc/include/machine/ieeefp.h: Ditto.
        * libc/include/machine/setjmp.h: Ditto.
        * libc/include/sys/config.h: Ditto.
        * libc/machine/configure.in: Ditto
        * libc/machine/configure: Regenerated
        * libc/machine/cr16/aclocal.m4: New.
        * libc/machine/cr16/configure.in: New
        * libc/machine/cr16/configure: New
        * libc/machine/cr16/getenv.c: New
        * libc/machine/cr16/Makefile.am: New
        * libc/machine/cr16/Makefile.in: New
        * libc/machine/cr16/setjmp.S: New
        * libc/machine/cr16/sys/asm.h: New
        * libc/machine/cr16/sys/libh.h: New
        * libc/machine/cr16/sys/syscall.h: New
@
text
@d49 1
d62 1
d857 5
@


1.118
log
@
2010-11-17  Bernd Schmidt  <bernds@@codesourcery.com>

        * configure.host (newlib_cflags): For tic6x, add -DCLOCK_PROVIDED.
@
text
@d108 3
d382 3
d617 3
@


1.117
log
@	* configure.host: Add -D_COMPILING_NEWLIB to newlib_cflags.
@
text
@d775 1
@


1.116
log
@
2010-10-08  Bernd Schmidt  <bernds@@codesourcery.com>
        Joseph Myers  <joseph@@codesourcery.com>

        * configure.host: Handle tic6x targets.
        * libc/include/machine/ieeefp.h: Define endianness for C6X.
        * libc/include/machine/setjmp.h: Add __TMS320C6X__ case.
        * libc/machine/configure.in: Handle tic6x targets.
        * libc/machine/configure: Regenerate.
        * libc/machine/tic6x/Makefile.am, libc/machine/tic6x/configure.in,
        libc/machine/tic6x/setjmp.S: New.
        * libc/machine/tic6x/Makefile.in, libc/machine/tic6x/aclocal.m4,
        libc/machine/tic6x/configure: New (generated).
@
text
@d561 1
@


1.115
log
@
2010-07-23  Naveen.H.S  <naveenh1@@kpitcummins.com>
            Gina Verlekar <gina.verlekar@@kpitcummins.com>

        * configure.host: Compact v850* support and add
        check for newlib_may_supply_syscalls.
        * libc/sys/sysnecv850/Makefile.am: Add support for
        '--disable-newlib-supplied-syscalls' option.
        * libc/sys/sysnecv850/Makefile.in: Regenerated.
@
text
@d252 3
d502 4
d772 3
@


1.114
log
@	Add eXtensible Data Record (XDR) support
	* configure.host: Build libc/xdr only on cygwin.
	* Makefile.am: Install xdr headers.
	* libc/configure.in: Support new libc/xdr subdirectory.
	* libc/Makefile.am: Support new libc/xdr subdirectory.
	* libc/include/rpc/types.h: New.
	* libc/include/rpc/xdr.h: New.
	* libc/xdr/README: New.
	* libc/xdr/Makefile.am: New.
	* libc/xdr/dummy.c: New.
	* libc/xdr/xdr.c: New.
	* libc/xdr/xdr_array.c: New.
	* libc/xdr/xdr_float.c: New.
	* libc/xdr/xdr_float_vax.c: New.
	* libc/xdr/xdr_mem.c: New.
	* libc/xdr/xdr_private.c: New.
	* libc/xdr/xdr_private.h: New.
	* libc/xdr/xdr_rec.c: New.
	* libc/xdr/xdr_reference.c: New.
	* libc/xdr/xdr_sizeof.c: New.
	* libc/xdr/xdr_stdio.c: New.

	Regenerate using ac-2.63 and am-1.11.1
	* libc/xdr/Makefile.in: New.
	* Makefile.in: Regenerate.
	* libc/configure: Regenerate.
	* libc/Makefile.in: Regenerate.
	* libc/argz/Makefile.in: Regenerate.
	* libc/ctype/Makefile.in: Regenerate.
	* libc/errno/Makefile.in: Regenerate.
	* libc/iconv/ccs/binary/Makefile.in: Regenerate.
	* libc/iconv/ccs/Makefile.in: Regenerate.
	* libc/iconv/ces/Makefile.in: Regenerate.
	* libc/iconv/lib/Makefile.in: Regenerate.
	* libc/iconv/Makefile.in: Regenerate.
	* libc/locale/Makefile.in: Regenerate.
	* libc/misc/Makefile.in: Regenerate.
	* libc/posix/Makefile.in: Regenerate.
	* libc/reent/Makefile.in: Regenerate.
	* libc/search/Makefile.in: Regenerate.
	* libc/signal/Makefile.in: Regenerate.
	* libc/stdio/Makefile.in: Regenerate.
	* libc/stdio64/Makefile.in: Regenerate.
	* libc/stdlib/Makefile.in: Regenerate.
	* libc/string/Makefile.in: Regenerate.
	* libc/syscalls/Makefile.in: Regenerate.
	* libc/time/Makefile.in: Regenerate.
	* libc/unix/Makefile.in: Regenerate.
@
text
@d259 1
a259 5
  v850)
	machine_dir=v850
	newlib_cflags="${newlib_cflags} -DPREFER_SIZE_OVER_SPEED -mv850 "
	;;
  v850e)
d508 1
a508 7
  v850-*-*)
	sys_dir=sysnecv850
	;;
  v850e-*-*)
	sys_dir=sysnecv850
	;;
  v850ea-*-*)
d510 3
d768 1
a768 7
  v850-*-*)
	syscall_dir=syscalls
	;;
  v850e-*-*)
	syscall_dir=syscalls
	;;
  v850ea-*-*)
@


1.113
log
@
2009-12-10  Conny Marco Menebrocker  <c-m-m@@gmx.de>

        * configure.host: Add xc16x support.
        * libc/include/machine/ieeefp.h: Ditto.
        * libc/include/sys/config.h: Ditto.
        * libc/machine/configure.in: Ditto.
        * libc/machine/Makefile.in: Regenerated.
        * libc/machine/aclocal.m4: Ditto.
        * libc/machine/configure: Ditto.
        * libc/machine/xc16x/Makefile.am: New file.
        * libc/machine/xc16x/Makefile.in: Ditto.
        * libc/machine/xc16x/aclocal.m4: Ditto.
        * libc/machine/xc16x/configure: Ditto.
        * libc/machine/xc16x/configure.in: Ditto.
        * libc/machine/xc16x/putchar.c: Ditto.
        * libc/machine/xc16x/puts.c: Ditto.
        * libc/machine/xc16x/setjmp.S: Ditto.
@
text
@d58 1
d353 1
@


1.112
log
@newlib:
        * configure.host: Add support for RX architecture.
        * libc/include/machine/ieeefp.h: Likewise.
        * libc/include/machine/setjmp.h: Likewise.
        * libc/include/machine/configure.in: Likewise.
        * libc/include/machine/configure: Regenerate.
        * libc/machine/rx: New directory.
        * libc/machine/rx/*: New files to support RX architecture.

libgloss:
        * configure.in: Add support for RX sub-directory.
        * configure: Regenerate.
        * rx: New directory.
        * rx/*: New files to support RX architecture.
@
text
@d272 3
d785 4
a788 1
	;;	
@


1.111
log
@
2009-10-20  Jeff Johnston  <jjohnstn@@redhat.com>

        * configure.host: Don't set -O2 flag in newlib_cflags.  Leave
        that to CFLAGS.
        * acinclude.m4: Don't reset CFLAGS before calling _AC_PROG_CC_G
        as it sets the same flags as we are using.
        * aclocal.m4: Regenerated.
        * configure: Ditto.
        * Makefile.in: Ditto.
        * iconvdata/aclocal.m4: Ditto.
        * iconvdata/configure: Ditto.
        * iconvdata/Makefile.in: Ditto.
        * doc/aclocal.m4: Ditto.
        * doc/configure: Ditto.
        * doc/Makefile.in: Ditto.
        * libc/aclocal.m4: Ditto.
        * libc/configure: Ditto.
        * libc/Makefile.in: Ditto.
        * libc/*Makefile.in: Ditto.
        * libc/*aclocal.m4: Ditto.
        * libc/*configure: Ditto.
        * libm/*Makefile.in: Ditto.
        * libm/*aclocal.m4: Ditto.
        * libm/*configure: Ditto.
@
text
@d226 5
@


1.110
log
@
2009-10-08  Jeff Johnston  <jjohnstn@@redhat.com>

        * configure.host: For RTEMS, define HAVE_ASSERT_FUNC.
        * libc/stdlib/assert.c (_assert_func): Do not specify
        __assert_func if HAVE_ASSERT_FUNC flag is set.
@
text
@a82 1
    newlib_cflags="${newlib_cflags} -O2"
@


1.109
log
@
2009-09-28  Michael Eager <eager@@eagercon.com>

        * configure.host: Add microblaze.
        * libc/include/machine/ieeefp.h [MICROBLAZE]: Define __IEEE_BIG_ENDIAN.
        * libc/include/machine/setjmp.h [MICROBLAZE]: Define _JBLEN, _JBTYPE.
        * libc/include/sys/config.h [MICROBLAZE]: Define _REENT_SMALL,
        _UNIX98_THREAD_MUTEX_ATTRIBUTES.
        * libc/include/sys/types.h: Treat XMK like rtems, define
        PTHREAD_MUTEX_NORMAL, PTHREAD_MUTEX_ERRORCHECK, PTHREAD_MUTEX_RECURSIVE,
        PTHREAD_MUTEX_DEFAULT, PTHREAD_STACK_MIN, define stuct pthread_attr_s.
        * libc/machine/configure.in: Add microblaze.
        * libc/machine/configure: Add microblaze (not regenerated).
        * libc/machine/microblaze/configure.in: NEW.
        * libc/machine/microblaze/configure: Generate.
        * libc/machine/microblaze/Makefile.am: NEW.
        * libc/machine/microblaze/Makefile.in: Generate.
        * libc/machine/microblaze/{abort.c, strcmp.c, strcpy.c, strlen.c,
        mallocr.c, longjmp.S, setjmp.S}: NEW.
        * libc/stdlib/mallocr.c [MICROBLAZE]: Don't declare sbrk prototype,
        mALLOc(): return malloc value.
@
text
@d552 1
a552 1
	newlib_cflags="${newlib_cflags} -DMALLOC_PROVIDED -DEXIT_PROVIDED -DSIGNAL_PROVIDED -DREENTRANT_SYSCALLS_PROVIDED -DHAVE_NANOSLEEP -DHAVE_BLKSIZE -DHAVE_FCNTL"
@


1.108
log
@
2009-09-22  Ralf Corsépius <ralf.corsepius@@rtems.org>

        * configure.host (*-rtems*): Remove -DMISSING_SYSCALL_NAMES.
        Add -DHAVE_BLKSIZE, -D_NO_WORDEXP -D_NO_POPEN.
@
text
@d196 3
d452 3
d678 4
@


1.107
log
@
2009-09-22  Ralf Corsépius <ralf.corsepius@@rtems.org>

        * configure.host (m32c): Move setting -DABORT_PROVIDED to second
        "case $host".
@
text
@d546 1
a546 1
	newlib_cflags="${newlib_cflags} -DMALLOC_PROVIDED -DEXIT_PROVIDED -DMISSING_SYSCALL_NAMES -DSIGNAL_PROVIDED -DREENTRANT_SYSCALLS_PROVIDED -DHAVE_NANOSLEEP -DHAVE_FCNTL"
d548 1
a548 1
	newlib_cflags="${newlib_cflags} -D_NO_GETLOGIN -D_NO_GETPWENT -D_NO_GETUT -D_NO_GETPASS -D_NO_SIGSET"
@


1.106
log
@
2009-04-22 Anthony Green <green@@moxielogic.com>

        * configure.host: Add moxie support.
        * libc/machine/configure.in: Add moxie support.
        * libc/machine/configure: Rebuilt.
        * libc/machine/moxie/aclocal.m4: New file.
        * libc/machine/moxie/configure: New file.
        * libc/machine/moxie/configure.in: New file.
        * libc/machine/moxie/Makefile.am: New file.
        * libc/machine/moxie/Makefile.in: New file.
        * libc/machine/moxie/setjmp.S: New file.
        * libc/include/machine/setjmp.h (_JBLEN): Define for moxie.
        * libc/include/machine/ieeefp.h: Add moxie support.
@
text
@d169 1
a169 1
	newlib_cflags="${newlib_cflags} -DPREFER_SIZE_OVER_SPEED -DABORT_PROVIDED -DSMALL_MEMORY"
d651 1
a651 1
	newlib_cflags="${newlib_cflags} -DMISSING_SYSCALL_NAMES"
@


1.105
log
@* configure.host (m32c-*-*): Add long long I/O support by default.
@
text
@d211 3
d455 3
d689 4
@


1.104
log
@
2008-12-17  Jon Beniston <jon@@beniston.com>

        * configure.host: Set syscall_dir for lm32 target.
@
text
@d643 5
@


1.104.2.1
log
@Support for ARCompact architecture.
@
text
@d97 1
a97 1
	machine_dir=arc
a213 2
  mxp)
	;;
a555 1
	newlib_cflags="${newlib_cflags} -DREENTRANT_SYSCALLS_PROVIDED"
@


1.103
log
@
2008-12-12  Ralf Corsepius  <ralf.corsepius@@rtems.org>

        * configure.host: Let *rtems* default to c99-formats.
@
text
@d640 3
@


1.102
log
@
2008-12-11 Jukka Pietarinen <jukka.pietarinen@@mrf.fi>

        * configure.host: Add lm32
        * libc/include/machine/ieeefp.h: Add __lm32__
        * libc/include/machine/setjmp.h: Add __lm32__
        * libc/machine/configure.in: Add lm32
        * libc/machine/configure: Regenerated.
        * libc/machine/lm32/aclocal.m4: New file.
        * libc/machine/lm32/configure.in: Ditto.
        * libc/machine/lm32/configure: Ditto.
        * libc/machine/lm32/Makefile.am: Ditto.
        * libc/machine/lm32/Makefile.in: Ditto.
        * libc/machine/lm32/setjmp.s: Ditto.
@
text
@d539 1
@


1.101
log
@
2008-11-27  Joel Sherrill <joel.sherrill@@oarcorp.com>

        * configure.host (*-rtems*): Turn on using portion of unix subdirectory.
@
text
@d164 3
@


1.100
log
@
2008-11-17  Joel Sherrill <joel.sherrill@@oarcorp.com>

        * configure.host: RTEMS now uses posix subdirectory.
@
text
@d344 1
d537 2
@


1.99
log
@
2008-04-01 Patrick Mansfield <patmans@@us.ibm.com>

        * configure.host: Build SPU with -DREENTRANT_SYSCALLS_PROVIDED and
          -DMISSING_SYSCALL_NAMES.
@
text
@d343 1
a343 1
        # RTEMS POSIX support is all inside RTEMS
d535 1
a535 1
	newlib_cflags="${newlib_cflags} -DMALLOC_PROVIDED -DEXIT_PROVIDED -DMISSING_SYSCALL_NAMES -DSIGNAL_PROVIDED -DREENTRANT_SYSCALLS_PROVIDED -DHAVE_OPENDIR -DNO_EXEC -DHAVE_FCNTL"
@


1.98
log
@
2008-03-07  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/getopt.h: Hide newlib extensions under
        the __need_getopt_newlib flag.
        * libc/stdlib/getopt.c: #define __need_getopt_newlib before including
        getopt.h.  Put entire code under !HAVE_GETOPT to support platforms
        with their own getopt implementation.
        * configure.host: Specify HAVE_GETOPT for x86-linux.
@
text
@d271 4
a274 1
	newlib_cflags="${newlib_cflags} -D_POSIX_MODE -ffunction-sections -fdata-sections "
@


1.97
log
@2007-11-07  Dave Brolley  <brolley@@redhat.com>

        * libc/machine/configure: Regenerated to pick up mep-elf changes.

        * Contribute mep-elf from Red Hat
        2006-10-27  DJ Delorie  <dj@@redhat.com>

        * libc/include/machine/setjmp.h: Add MeP support.

        2003-04-17  DJ Delorie  <dj@@redhat.com>

        * configure.host (mep-*-*): Support "long long" type.

        2001-06-06  DJ Delorie  <dj@@redhat.com>

        * libc/include/machine/ieeefp.h (mep): Support little endian too.

        2001-05-14  DJ Delorie  <dj@@redhat.com>

        * configure.host: Add mep's machine_dir.
        * libc/include/setjmp.h: Add mep support.
        * libc/machine/mep: New.
        * libc/machine/mep/setjmp.S: New, support mep's setjmp/longjmp.

        2001-05-04  DJ Delorie  <dj@@redhat.com>

        * configure.host: Add mep.
        * libc/include/machine/ieeefp.h: Ditto.
@
text
@d417 1
@


1.96
log
@
2007-09-28  Patrick Mansfield  <patmans@@us.ibm.com>

	* configure.host: Define _POSIX_MODE to match the existing vector
	math code, as we don't support the matherr callout.
	* libm/machine/spu/Makefile.am: New file.
	* libm/machine/spu/Makefile.in: Auto-generated.
	* libm/machine/spu/headers/atanf.h: New file.
	* libm/machine/spu/headers/cbrt.h: Ditto.
	* libm/machine/spu/headers/cbrtf.h: Ditto.
	* libm/machine/spu/headers/ceil.h: Ditto.
	* libm/machine/spu/headers/ceilf.h: Ditto.
	* libm/machine/spu/headers/copysign.h: Ditto.
	* libm/machine/spu/headers/copysignf.h: Ditto.
	* libm/machine/spu/headers/exp2f.h: Ditto.
	* libm/machine/spu/headers/expf.h: Ditto.
	* libm/machine/spu/headers/fabs.h: Ditto.
	* libm/machine/spu/headers/fabsf.h: Ditto.
	* libm/machine/spu/headers/fdim.h: Ditto.
	* libm/machine/spu/headers/fdimf.h: Ditto.
	* libm/machine/spu/headers/floor.h: Ditto.
	* libm/machine/spu/headers/floorf.h: Ditto.
	* libm/machine/spu/headers/fma.h: Ditto.
	* libm/machine/spu/headers/fmaf.h: Ditto.
	* libm/machine/spu/headers/fmax.h: Ditto.
	* libm/machine/spu/headers/fmaxf.h: Ditto.
	* libm/machine/spu/headers/fmin.h: Ditto.
	* libm/machine/spu/headers/fminf.h: Ditto.
	* libm/machine/spu/headers/fmod.h: Ditto.
	* libm/machine/spu/headers/fmodf.h: Ditto.
	* libm/machine/spu/headers/frexp.h: Ditto.
	* libm/machine/spu/headers/frexpf.h: Ditto.
	* libm/machine/spu/headers/ilogb.h: Ditto.
	* libm/machine/spu/headers/ilogbf.h: Ditto.
	* libm/machine/spu/headers/ldexp.h: Ditto.
	* libm/machine/spu/headers/ldexpf.h: Ditto.
	* libm/machine/spu/headers/llrint.h: Ditto.
	* libm/machine/spu/headers/llrintf.h: Ditto.
	* libm/machine/spu/headers/llround.h: Ditto.
	* libm/machine/spu/headers/llroundf.h: Ditto.
	* libm/machine/spu/headers/log10f.h: Ditto.
	* libm/machine/spu/headers/log2f.h: Ditto.
	* libm/machine/spu/headers/logf.h: Ditto.
	* libm/machine/spu/headers/lrint.h: Ditto.
	* libm/machine/spu/headers/lrintf.h: Ditto.
	* libm/machine/spu/headers/lround.h: Ditto.
	* libm/machine/spu/headers/lroundf.h: Ditto.
	* libm/machine/spu/headers/nearbyint.h: Ditto.
	* libm/machine/spu/headers/remainder.h: Ditto.
	* libm/machine/spu/headers/remainderf.h: Ditto.
	* libm/machine/spu/headers/remquo.h: Ditto.
	* libm/machine/spu/headers/remquof.h: Ditto.
	* libm/machine/spu/headers/rint.h: Ditto.
	* libm/machine/spu/headers/round.h: Ditto.
	* libm/machine/spu/headers/roundf.h: Ditto.
	* libm/machine/spu/headers/scalbn.h: Ditto.
	* libm/machine/spu/headers/scalbnf.h: Ditto.
	* libm/machine/spu/headers/sqrt.h: Ditto.
	* libm/machine/spu/headers/trunc.h: Ditto.
	* libm/machine/spu/headers/truncf.h: Ditto.
	* libm/machine/spu/headers/vec_literal.h: Ditto.
	* libm/machine/spu/llrint.c: Ditto.
	* libm/machine/spu/llrintf.c: Ditto.
	* libm/machine/spu/llround.c: Ditto.
	* libm/machine/spu/llroundf.c: Ditto.
	* libm/machine/spu/log2f.c: Ditto.
	* libm/machine/spu/s_cbrt.c: Ditto.
	* libm/machine/spu/s_ceil.c: Ditto.
	* libm/machine/spu/s_copysign.c: Ditto.
	* libm/machine/spu/s_fabs.c: Ditto.
	* libm/machine/spu/s_fdim.c: Ditto.
	* libm/machine/spu/s_floor.c: Ditto.
	* libm/machine/spu/s_fma.c: Ditto.
	* libm/machine/spu/s_fmax.c: Ditto.
	* libm/machine/spu/s_fmin.c: Ditto.
	* libm/machine/spu/s_frexp.c: Ditto.
	* libm/machine/spu/s_ilogb.c: Ditto.
	* libm/machine/spu/s_ldexp.c: Ditto.
	* libm/machine/spu/s_lrint.c: Ditto.
	* libm/machine/spu/s_lround.c: Ditto.
	* libm/machine/spu/s_nearbyint.c: Ditto.
	* libm/machine/spu/s_remquo.c: Ditto.
	* libm/machine/spu/s_rint.c: Ditto.
	* libm/machine/spu/s_round.c: Ditto.
	* libm/machine/spu/s_scalbn.c: Ditto.
	* libm/machine/spu/s_trunc.c: Ditto.
	* libm/machine/spu/sf_atan.c: Ditto.
	* libm/machine/spu/sf_cbrt.c: Ditto.
	* libm/machine/spu/sf_ceil.c: Ditto.
	* libm/machine/spu/sf_copysign.c: Ditto.
	* libm/machine/spu/sf_fabs.c: Ditto.
	* libm/machine/spu/sf_fdim.c: Ditto.
	* libm/machine/spu/sf_floor.c: Ditto.
	* libm/machine/spu/sf_fma.c: Ditto.
	* libm/machine/spu/sf_fmax.c: Ditto.
	* libm/machine/spu/sf_fmin.c: Ditto.
	* libm/machine/spu/sf_frexp.c: Ditto.
	* libm/machine/spu/sf_ilogb.c: Ditto.
	* libm/machine/spu/sf_ldexp.c: Ditto.
	* libm/machine/spu/sf_lrint.c: Ditto.
	* libm/machine/spu/sf_lround.c: Ditto.
	* libm/machine/spu/sf_remquo.c: Ditto.
	* libm/machine/spu/sf_round.c: Ditto.
	* libm/machine/spu/sf_scalbn.c: Ditto.
	* libm/machine/spu/sf_trunc.c: Ditto.
	* libm/machine/spu/w_fmod.c: Ditto.
	* libm/machine/spu/w_remainder.c: Ditto.
	* libm/machine/spu/w_sqrt.c: Ditto.
	* libm/machine/spu/wf_exp.c: Ditto.
	* libm/machine/spu/wf_exp2.c: Ditto.
	* libm/machine/spu/wf_fmod.c: Ditto.
	* libm/machine/spu/wf_log.c: Ditto.
	* libm/machine/spu/wf_log10.c: Ditto.
	* libm/machine/spu/wf_remainder.c: Ditto.
@
text
@d193 3
d434 4
@


1.95
log
@
2007-08-28  Hans Kester  <hans.kester@@ellips.nl>

        * configure.host: Added support for x86_64.
        * libc/include/machine/ieeefp.h: Define __IEEE_LITTLE_ENDIAN for x86_64.
        * libc/include/machine/setjmp.h: Define _JBTYPE and _JBLEN for x86_64.
        * libc/machine/x86_64/aclocal.m4: Generated.
        * libc/machine/x86_64/configure.in: New.
        * libc/machine/x86_64/configure: Generated.
        * libc/machine/x86_64/Makefile.am: New.
        * libc/machine/x86_64/Makefile.in: Generated.
        * libc/machine/x86_64/setjmp.S: New.
        * libc/machine/x86_64/memcpy.S: New.
        * libc/machine/x86_64/memset.S: New.
        * libc/machine/configure.in: Added support for x86_64.
        * libc/machine/configure: Regenerated.
@
text
@d268 1
a268 1
	newlib_cflags="${newlib_cflags} -ffunction-sections -fdata-sections "
@


1.94
log
@Minimize printf/scanf size on platforms that don't need C99.
* acconfig.h (_WANT_IO_C99_FORMATS): New macro.
* newlib.hin (_WANT_IO_C99_FORMATS): Likewise.
* configure.in (newlib-io-c99-formats): New configure option.
(_WANT_IO_C99_FORMATS): Define appropriately.
* configure.host (*-linux*, cygwin): Default c99-formats to yes.
* libc/stdio/vfprintf.c (_VFPRINTF_R) [!_WANT_IO_C99_FORMATS]:
Cripple ' flag; hh, z, j, t sizes; a, A, F, C, S specifiers.
* libc/stdio/vfscanf.c (_VFSCANF_R) [!_WANT_IO_C99_FORMATS]:
Likewise.
* configure: Regenerate.
@
text
@d253 3
@


1.93
log
@
2007-02-20  Patrick Mansfield <patmans@@us.ibm.com>

        * configure.host: Build SPU with default_newlib_atexit_dynamic_alloc="no".
@
text
@d27 1
d66 1
d403 1
d504 1
d751 7
@


1.92
log
@
2007-02-14  Patrick Mansfield <patmans@@us.ibm.com>

        Add a floating point environment for SPU (cell):

        * configure.host: add libm_machine_dir=spu.
        * libm/machine/configure: Add spu.
        * libm/machine/configure.in: regenerated with spu added.
        * libc/machine/spu/include/fenv.h: New file.
        * libc/machine/spu/sys/fenv.h: Ditto.
        * libm/machine/spu/Makefile.am: Ditto.
        * libm/machine/spu/Makefile.in: Ditto.
        * libm/machine/spu/aclocal.m4: Ditto.
        * libm/machine/spu/configure: Ditto.
        * libm/machine/spu/configure.in: Ditto.
        * libm/machine/spu/fe_dfl_env.c: Ditto.
        * libm/machine/spu/feclearexcept.c: Ditto.
        * libm/machine/spu/fegetenv.c: Ditto.
        * libm/machine/spu/fegetexceptflag.c: Ditto.
        * libm/machine/spu/fegetround.c: Ditto.
        * libm/machine/spu/feholdexcept.c: Ditto.
        * libm/machine/spu/feraiseexcept.c: Ditto.
        * libm/machine/spu/fesetenv.c: Ditto.
        * libm/machine/spu/fesetexceptflag.c: Ditto.
        * libm/machine/spu/fesetround.c: Ditto.
        * libm/machine/spu/fetestexcept.c: Ditto.
        * libm/machine/spu/feupdateenv.c: Ditto.
        * libm/machine/spu/headers/feclearexcept.h: Ditto.
        * libm/machine/spu/headers/fefpscr.h: Ditto.
        * libm/machine/spu/headers/fegetenv.h: Ditto.
        * libm/machine/spu/headers/fegetexceptflag.h: Ditto.
        * libm/machine/spu/headers/fegetround.h: Ditto.
        * libm/machine/spu/headers/feholdexcept.h: Ditto.
        * libm/machine/spu/headers/feraiseexcept.h: Ditto.
        * libm/machine/spu/headers/fesetenv.h: Ditto.
        * libm/machine/spu/headers/fesetexceptflag.h: Ditto.
        * libm/machine/spu/headers/fesetround.h: Ditto.
        * libm/machine/spu/headers/fetestexcept.h: Ditto.
        * libm/machine/spu/headers/feupdateenv.h: Ditto.
@
text
@d447 1
@


1.91
log
@
2007-02-01  Joel Schopp <jschopp@@austin.ibm.com>
            Kazunori Asayama <asayama@@sm.sony.co.jp>

        * configure.host: Enable SPU specific stdio directory.
        * libc/machine/spu/Makefile.am: Add objects.
        * libc/machine/spu/Makefile.in: Regenerated.
        * libc/machine/spu/c99ppe.h: Add macros and function
        declarations to initialize SPU specific stdio stuffs.
        * libc/machine/spu/stdio.c: Add functions to manage Cell SPU
        specific FILE structures.
        * libc/machine/spu/perror.c: Add initialization routine of
        stdio stuffs.
        * libc/machine/spu/printf.c: Ditto.
        * libc/machine/spu/putchar.c: Ditto.
        * libc/machine/spu/puts.c: Ditto.
        * libc/machine/spu/vprintf.c: Ditto.
        * libc/machine/spu/clearerr.c: New file. Add a stdio function
        implementation.
        * libc/machine/spu/feof.c: Ditto.
        * libc/machine/spu/ferror.c: Ditto.
        * libc/machine/spu/fileno.c: Ditto.
        * libc/machine/spu/fopen.c: Ditto.
        * libc/machine/spu/fclose.c: Ditto.
        * libc/machine/spu/freopen.c: Ditto.
        * libc/machine/spu/fflush.c: Ditto.
        * libc/machine/spu/fseek.c: Ditto.
        * libc/machine/spu/ftell.c: Ditto.
        * libc/machine/spu/rewind.c: Ditto.
        * libc/machine/spu/fgetpos.c: Ditto.
        * libc/machine/spu/fsetpos.c: Ditto.
        * libc/machine/spu/fread.c: Ditto.
        * libc/machine/spu/fwrite.c: Ditto.
        * libc/machine/spu/getc.c: Ditto.
        * libc/machine/spu/getchar.c: Ditto.
        * libc/machine/spu/gets.c: Ditto.
        * libc/machine/spu/fgetc.c: Ditto.
        * libc/machine/spu/fgets.c: Ditto.
        * libc/machine/spu/ungetc.c: Ditto.
        * libc/machine/spu/putc.c: Ditto.
        * libc/machine/spu/fputc.c: Ditto.
        * libc/machine/spu/fputs.c: Ditto.
        * libc/machine/spu/vfprintf.c: Ditto.
        * libc/machine/spu/vfscanf.c: Ditto.
        * libc/machine/spu/fprintf.c: Ditto.
        * libc/machine/spu/fscanf.c: Ditto.
        * libc/machine/spu/scanf.c: Ditto.
        * libc/machine/spu/vscanf.c: Ditto.
        * libc/machine/spu/setbuf.c: Ditto.
        * libc/machine/spu/setvbuf.c: Ditto.
        * libc/machine/spu/tmpfile.c: Ditto.

2007-02-01  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/sys/config.h[__SPU__]: Define __CUSTOM_FILE_IO__.
        * libc/include/stdio.h[!__CUSTOM_FILE_IO__]: Add flag check
        around stdio macros that manipulate fields in the normal file
        structure.
        * libc/include/sys/reent.h[__CUSTOM_FILE_IO__]: Include
        <sys/custom_file.h> to define custom FILE structure.
        * libc/include/sys/custom_file.h: New default header file
        that generates error if not overridden when __CUSTOM_FILE_IO__ set.
        * libc/machine/spu/sys/custom_file.h: New file.
@
text
@d261 1
@


1.90
log
@
2007-01-31  Kazunori Asayama <asayama@@sm.sony.co.jp>

	* configure.host: Define stdio directory as a variable.
	* libc/Makefile.am: Define stdio related names
	as macros.
	* libc/configure.in: Add detection routine of stdio directory.
	* libc/Makefile.in: Regenerated.
	* libc/configure: Ditto.
	* libc/argz/Makefile.in: Ditto.
	* libc/ctype/Makefile.in: Ditto.
	* libc/errno/Makefile.in: Ditto.
	* libc/iconv/Makefile.in: Ditto.
	* libc/iconv/ccs/Makefile.in: Ditto.
	* libc/iconv/ccs/binary/Makefile.in: Ditto.
	* libc/iconv/ces/Makefile.in: Ditto.
	* libc/iconv/lib/Makefile.in: Ditto.
	* libc/locale/Makefile.in: Ditto.
	* libc/misc/Makefile.in: Ditto.
	* libc/posix/Makefile.in: Ditto.
	* libc/reent/Makefile.in: Ditto.
	* libc/search/Makefile.in: Ditto.
	* libc/signal/Makefile.in: Ditto.
	* libc/stdio/Makefile.in: Ditto.
	* libc/stdio64/Makefile.in: Ditto.
	* libc/stdlib/Makefile.in: Ditto.
	* libc/string/Makefile.in: Ditto.
	* libc/syscalls/Makefile.in: Ditto.
	* libc/time/Makefile.in: Ditto.
	* libc/unix/Makefile.in: Ditto.
@
text
@d260 1
@


1.89
log
@
2007-01-05  Brian Ford  <Brian.Ford@@FlightSafety.com>

	* configure.host (*-*-cygwin*): Define HAVE_BLKSIZE.
@
text
@d55 1
@


1.88
log
@
2006-12-18  Kazu Hirata  <kazu@@codesourcery.com>

        Merge from newlib-csl-20060320-branch:
        2006-12-01  Nathan Sidwell  <nathan@@codesourcery.com>
                    Kazu Hirata  <kazu@@codesourcery.com>

        * configure.host: Recognize fido.
@
text
@d501 1
a501 1
	newlib_cflags="${newlib_cflags} -DHAVE_OPENDIR -DHAVE_RENAME -DSIGNAL_PROVIDED -D_COMPILING_NEWLIB -DHAVE_FCNTL -DMALLOC_PROVIDED"
@


1.87
log
@
2006-11-08  Jie Zhang  <jzhang918@@gmail.com>

        * configure.host: Add support for bfin.
        * libc/include/machine/ieeefp.h: Define __IEEE_LITTLE_ENDIAN for bfin.
        * libc/include/machine/setjmp.h: Define _JBLEN for bfin.
        * libc/machine/bfin/aclocal.m4: Generate.
        * libc/machine/bfin/configure.in: New.
        * libc/machine/bfin/configure: Generate.
        * libc/machine/bfin/Makefile.am: New.
        * libc/machine/bfin/Makefile.in: Generate.
        * libc/machine/bfin/setjmp.S: New.
        * libc/machine/bfin/longjmp.S: New.
        * libc/machine/configure.in: Add bfin support.
        * libc/machine/configure: Generate.
@
text
@d120 4
d578 4
@


1.86
log
@libgloss/
	Merge from newlib-csl-20060320-branch:
	2006-08-31  Nathan Sidwell  <nathan@@codesourcery.com>

	* m68k/bdm-crt1.c: Call hardware_init_hook before copying
	initialized data.

	* m68k/Makefile.in (CF_BDM_SCRIPTS): Rename to CF_RAM_SCRIPTS.
	(CF_SCRIPTS): Update.
	(%-bdm.ld): Rename to %-ram.ld.

	2006-08-25  Nathan Sidwell  <nathan@@codesourcery.com>

	* m68k/Makefile.in (DBUG_BSP, DBUG_OBJS): Remove.
	(BDM_CRT0): New.
	(BDM_OBJS): Add bdm-crt1.o.
	(BDM_OTHER_OBJS): Remove print.o putnum.o
	(CF_BOARDS): New.
	(CF_BDM_SCRIPTS): Generated name of ram scripts.
	(CF_ROM_SCRIPTS): Generated name of rom scripts.
	(CF_SCRIPTS): Adjust.
	(all): Add BDM_CRT0.
	(bdm-crt0.o, bdm-crt1.o): New targets.
	(bdm-isv.o): Remove.
	(m5208evb, m5213evb, m52235evb, m5235evb, m5273c3, m5282evb,
	m5329evb, m5485evb): New.
	(%-bdm.ld, %-rom.ld): New. Replace individual linker script rules.
	(install): Remove DBUG installs.
	* m68k/bdm-crt0.S: New.
	* m68k/bdm-crt1.c: New.
	* m68k/bdm-exit.c: Call __reset.
	* m68k/bdm-isv.c: Remove.
	* m68k/cf.sc: Adjust to produce either rom or ram images.
	* m68k/dbug-exit.S, m68k/dbug-inbyte.S, m68k/dbug-outbyte.S: Remove.

	2006-07-24  Nathan Sidwell  <nathan@@codesourcery.com>

	Bug 844
	* m68k/cf.sc: Set entry point to _start.
	* m68k/crt0.X (_start): New name for entrypoint
	(start): Weak alias for start.

	2006-06-09  Nathan Sidwell  <nathan@@codesourcery.com>

	* m68k/bdm-system.c (_system): Support system(NULL).

	2006-06-08  Nathan Sidwell  <nathan@@codesourcery.com>

	* m68k/bdm-system.c (_system): Properly encode non failure exit
	code.

	2006-06-05  Nathan Sidwell  <nathan@@codesourcery.com>

	* m68k/Makefile.in (BDM_SYSOBJS): Remove bdm-inbyte.o.
	Add bdm-time.o.
	* m68k/bdm-close.c: Add copyright notice.
	* m68k/bdm-fstat.c: Add copyright notice.
	* m68k/bdm-gettimeofday.c: Add copyright notice.
	* m68k/bdm-inbyte.c: Remove.
	* m68k/bdm-isatty.c: Add copyright notice.
	* m68k/bdm-lseek.c: Add copyright notice. Fix &/| thinko.
	* m68k/bdm-open.c: Add copyright notice.
	* m68k/bdm-read.c: Add copyright notice.
	* m68k/bdm-rename.c: Add copyright notice.
	* m68k/bdm-stat.c: Add copyright notice.
	* m68k/bdm-system.c: Add copyright notice.
	* m68k/bdm-time.c: New.
	* m68k/bdm-unlink.c: Add copyright notice.
	* m68k/bdm-write.c: Add copyright notice.

	2006-05-25  Nathan Sidwell  <nathan@@codesourcery.com>

	* m68k/Makefile.in (m52235-dbug.ld, m52235-bdm.ld): New
	scripts.

	2006-05-24  Nathan Sidwell  <nathan@@codesourcery.com>

	* m68k/Makefile.in (BDM_SYSOBJS): Remove bdm-outbyte.o.
	* m68k/bdm-outbyte.c: Delete.
	* m68k/bdm-semihost.h (BDM_OUTBYTE): Mark as obsolete.

	2006-05-22  Sandra Loosemore <sandra@@codesourcery.com>

	* m68k/bdm-semihost.h: Add new constants for additional
	semihosting functions.  Add new BDM_TRAP macro to encapsulate
	inline asm.
	* m68k/bdm-exit.c (_exit): Use new BDM_TRAP macro.
	* m68k/bdm-outbyte.c (outbyte): Ditto.
	* m68k/bdm-isrs.c, m68k/bdm-isv.c: Former BDM_TRAP
	now called BDM_TRAPNUM.
	* m68k/bdm-gdb.h, m68k/bdm-gdb.c: New files
	containing declarations and conversion functions for GDB's fileio
	protocol.
	* m68k/bdm-close.c: New file to define corresponding function.
	* m68k/bdm-fstat.c: Ditto.
	* m68k/bdm-gettimeofday.c: Ditto.
	* m68k/bdm-isatty.c: Ditto.
	* m68k/bdm-lseek.c: Ditto.
	* m68k/bdm-open.c: Ditto.
	* m68k/bdm-read.c: Ditto.
	* m68k/bdm-rename.c: Ditto.
	* m68k/bdm-stat.c: Ditto.
	* m68k/bdm-system.c: Ditto.
	* m68k/bdm-unlink.c: Ditto.
	* m68k/bdm-write.c Ditto.
	* m68k/Makefile.in: Add dependencies for new files.

	2006-03-29  Nathan Sidwell  <nathan@@codesourcery.com>

	* m68k/bdm-isv.c (software_init_hook): Fix trap numbering.

	* m68k/Makefile.in (CF_SCRIPTS): Add m5329 board.
	Reorder.
	(*-dbug.ld, *-bdm.ld): Add appropriate IO definition.
	(m5329evb-dbug.ld, m5329evb-bdm.ld): New.
	* cf.sc (GROUP): Revert previous change.  Add IO library.

	* m68k/Makefile.in (BDM_BSP, BDM_OBJS, BDM_ISRS): New.
	(CF_SCRIPTS): Rename dbug scripts.  Add bdm scripts. Add m5485
	scripts.
	(all): Add new targets.
	(BDM_BSP): New target.
	(bdm-isv.o, bdm-exit.o, bdm-outbyte.o, bdm-semihost.o): New
	targets.
	(BDM_ISRS): New targets.
	(m5208evb.ld, m5213evb.ld, m5235evb.ld, m5272c3.ld, m5282evb.ld):
	Rename and adjust.
	(m5485evb-dbug): New.
	(m5208evb-bdm.ld, m5213evb-bdm.ld, m5235evb-bdm.ld,
	m5272c3-bdm.ld, m5282evb-bdm.ld, m5485evb-bdm.ld): New.
	(install): Add BDM_BSP.
	* m68k/bdm-exit.c: New
	* m68k/bdm-inbyte.c: New
	* m68k/bdm-outbyte.c: New
	* m68k/bdm-semihost.c: New
	* m68k/bdm-semihost.h: New
	* m68k/bdm-isrs.c: New.
	* m68k/bdm-isv.c: New.
	* dbug-cf.sc: Renamed to ...
	* cf.sc: ... here.  Add bdm flexibility. Remove GROUP

	2006-05-22  Sandra Loosemore <sandra@@codesourcery.com>

	* m68k/bdm-semihost.h: Add new constants for additional
	semihosting functions.  Add new BDM_TRAP macro to encapsulate
	inline asm.
	* m68k/bdm-exit.c (_exit): Use new BDM_TRAP macro.
	* m68k/bdm-outbyte.c (outbyte): Ditto.
	* m68k/bdm-isrs.c, m68k/bdm-isv.c: Former BDM_TRAP
	now called BDM_TRAPNUM.
	* m68k/bdm-gdb.h, m68k/bdm-gdb.c: New files
	containing declarations and conversion functions for GDB's fileio
	protocol.
	* m68k/bdm-close.c: New file to define corresponding function.
	* m68k/bdm-fstat.c: Ditto.
	* m68k/bdm-gettimeofday.c: Ditto.
	* m68k/bdm-isatty.c: Ditto.
	* m68k/bdm-lseek.c: Ditto.
	* m68k/bdm-open.c: Ditto.
	* m68k/bdm-read.c: Ditto.
	* m68k/bdm-rename.c: Ditto.
	* m68k/bdm-stat.c: Ditto.
	* m68k/bdm-system.c: Ditto.
	* m68k/bdm-unlink.c: Ditto.
	* m68k/bdm-write.c Ditto.
	* m68k/Makefile.in: Add dependencies for new files.

newlib/
	Merge from newlib-csl-20060320-branch:
	2006-05-22  Sandra Loosemore <sandra@@codesourcery.com>

	* configure.host: Tell it we have _rename and _system when
	building m68k-unknown-elf.
@
text
@d102 3
d340 3
d548 3
@


1.85
log
@
2006-08-16  Joel Schopp  <jschopp@@austin.ibm.com>

        * configure.host (newlib_cflags) [spu]: Add special compiler
        options to reduce size.
@
text
@d605 4
@


1.84
log
@
2006-08-16  Joel Schopp  <jschopp@@austin.ibm.com>

        * configure.host: Add spu support.
        * libc/include/stdint.h: Ditto.
        * libc/include/machine/ieeefp.h: Ditto.
        * libc/include/machine/setjmp.h: Ditto.
        * libc/include/sys/config.h: Ditto.
        * libc/include/sys/types.h: Ditto.
        * libc/machine/spu/Makefile.am: New file.
        * libc/machine/spu/Makefile.in: Ditto.
        * libc/machine/spu/aclocal.m4: Ditto.
        * libc/machine/spu/configure: Ditto.
        * libc/machine/spu/configure.in: Ditto.
        * libc/machine/spu/memcpy.c: Ditto.
        * libc/machine/spu/setjmp.S: Ditto.
@
text
@d253 1
@


1.83
log
@
2006-06-07  Fred Fish  <fnf@@specifix.com>

        * configure.host: Remove references to HAVE_GETTIMEOFDAY.
@
text
@d251 3
d431 3
@


1.83.2.1
log
@2007-07-06  Jeff Johnston  <jjohnstn@@redhat.com>

       * libc/include/sys/time.h (gettimeofday): Change to proper
       prototype where second parameter is void *.
       * libc/include/reent.h: Fix prototype for _gettimeofday_r.
       * libc/time/timer.c (_gettimeofday_r): Change prototype accordingly.

2007-06-13  Patrick Mansfield  <patmans@@us.ibm.com>

       * libc/include/sys/unistd.h: Change usleep prototype to Posix.

2007-01-05  Brian Ford  <Brian.Ford@@FlightSafety.com>

       * configure.host (*-*-cygwin*): Define HAVE_BLKSIZE.
@
text
@d484 1
a484 1
	newlib_cflags="${newlib_cflags} -DHAVE_OPENDIR -DHAVE_RENAME -DSIGNAL_PROVIDED -D_COMPILING_NEWLIB -DHAVE_BLKSIZE -DHAVE_FCNTL -DMALLOC_PROVIDED"
@


1.82
log
@
2006-06-05  Shaun Jackman  <sjackman@@gmail.com>

        configure.host (newlib_cflags) [arm, thumb, xscale]:  Remove
        -DABORT_PROVIDED flag.
        * newlib/libc/sys/arm/syscalls.c (kill, exit): Sync with libgloss.
        * newlib/libc/sys/arm/libcfunc.c (abort): Ditto.
@
text
@d496 1
a496 1
	newlib_cflags="${newlib_cflags} -DHAVE_GETTIMEOFDAY -DMALLOC_PROVIDED -DEXIT_PROVIDED -DMISSING_SYSCALL_NAMES -DSIGNAL_PROVIDED -DREENTRANT_SYSCALLS_PROVIDED -DHAVE_OPENDIR -DNO_EXEC -DHAVE_FCNTL"
a512 1
	newlib_cflags="${newlib_cflags} -DHAVE_GETTIMEOFDAY"
a515 1
	newlib_cflags="${newlib_cflags} -DHAVE_GETTIMEOFDAY"
d537 1
a537 1
	newlib_cflags="${newlib_cflags} -DHAVE_RENAME -DHAVE_GETTIMEOFDAY -D_USE_WRITE -DCOMPACT_CTYPE"
a553 1
	newlib_cflags="${newlib_cflags} -DHAVE_GETTIMEOFDAY"
a640 1
	newlib_cflags="${newlib_cflags} -DHAVE_GETTIMEOFDAY"
d647 1
a647 1
	newlib_cflags="${newlib_cflags} -DREENTRANT_SYSCALLS_PROVIDED -DHAVE_BLKSIZE -DHAVE_GETTIMEOFDAY -DHAVE_FCNTL"
a658 1
	newlib_cflags="${newlib_cflags} -DHAVE_GETTIMEOFDAY"
a661 1
	newlib_cflags="${newlib_cflags} -DHAVE_GETTIMEOFDAY"
a665 1
	newlib_cflags="${newlib_cflags} -DHAVE_GETTIMEOFDAY"
a695 1
	newlib_cflags="${newlib_cflags} -DHAVE_GETTIMEOFDAY"
a701 1
	newlib_cflags="${newlib_cflags} -DHAVE_GETTIMEOFDAY"
@


1.81
log
@
2006-04-13  Ralf Corsepius  <ralf.corsepius@@rtems.org>

        * acinclude.m4: New _NEWLIB_VERSION.
        * acinclude.m4(NEWLIB_CONFIGURE): AC_REQUIRE(_NEWLIB_VERSION).
        Use AC_CANONICAL_HOST instead of AC_CANONICAL_SYSTEM.
        Use new form of AC_INIT_AUTOMAKE.
        * configure.in: AC_PREREQ(2.59).
        Use autoconf-2.5.x version of AC_INIT.
        Use AC_CONFIG_FILES and autoconf-2.5x AC_OUTPUT instead of
        autoconf-2.13's AC_OUTPUT.
        * libm/configure.in: Ditto.
        * libm/machine/configure.in: Ditto.
        * libm/machine/i386/configure.in: Ditto.
        * libc/configure.in: Ditto.
        * libc/machine/a29k/configure.in: Ditto.
        * libc/machine/arm/configure.in: Ditto.
        * libc/machine/configure.in: Ditto.
        * libc/machine/mn10300/configure.in: Ditto.
        * libc/machine/powerpc/configure.in: Ditto.
        * libc/machine/z8k/configure.in: Ditto.
        * libc/machine/h8300/configure.in: Ditto.
        * libc/machine/mips/configure.in: Ditto.
        * libc/machine/crx/configure.in: Ditto.
        * libc/machine/m68hc11/configure.in: Ditto.
        * libc/machine/h8500/configure.in: Ditto.
        * libc/machine/xscale/configure.in: Ditto.
        * libc/machine/d10v/configure.in: Ditto.
        * libc/machine/fr30/configure.in: Ditto.
        * libc/machine/sh/configure.in: Ditto.
        * libc/machine/tic80/configure.in: Ditto.
        * libc/machine/m32r/configure.in: Ditto.
        * libc/machine/xstormy16/configure.in: Ditto.
        * libc/machine/i386/configure.in: Ditto.
        * libc/machine/d30v/configure.in: Ditto.
        * libc/machine/mn10200/configure.in: Ditto.
        * libc/machine/frv/configure.in: Ditto.
        * libc/machine/mt/configure.in: Ditto.
        * libc/machine/i960/configure.in: Ditto.
        * libc/machine/v850/configure.in: Ditto.
        * libc/machine/necv70/configure.in: Ditto.
        * libc/machine/tic4x/configure.in: Ditto.
        * libc/machine/cris/configure.in: Ditto.
        * libc/machine/m68k/configure.in: Ditto.
        * libc/machine/m32c/configure.in: Ditto.
        * libc/machine/hppa/configure.in: Ditto.
        * libc/machine/w65/configure.in: Ditto.
        * libc/machine/iq2000/configure.in: Ditto.
        * libc/machine/sparc/configure.in: Ditto.
        * libc/machine/m88k/configure.in: Ditto.
        * libc/sys/linux/configure.in: Ditto.
        * libc/sys/linux/machine/configure.in: Ditto.
        * libc/sys/linux/machine/i386/configure.in: Ditto.
        * libc/sys/linux/linuxthreads/configure.in: Ditto.
        * libc/sys/linux/linuxthreads/machine/configure.in: Ditto.
        * libc/sys/linux/linuxthreads/machine/i386/configure.in: Ditto.
        * libc/sys/arm/configure.in: Ditto.
        * libc/sys/configure.in: Ditto.
        * libc/sys/decstation/configure.in: Ditto.
        * libc/sys/a29khif/configure.in: Ditto.
        * libc/sys/sysnecv850/configure.in: Ditto.
        * libc/sys/d10v/configure.in: Ditto.
        * libc/sys/netware/configure.in: Ditto.
        * libc/sys/mmixware/configure.in: Ditto.
        * libc/sys/h8500hms/configure.in: Ditto.
        * libc/sys/sh/configure.in: Ditto.
        * libc/sys/tic80/configure.in: Ditto.
        * libc/sys/rdos/configure.in: Ditto.
        * libc/sys/sysmec/configure.in: Ditto.
        * libc/sys/sysvi386/configure.in: Ditto.
        * libc/sys/h8300hms/configure.in: Ditto.
        * libc/sys/sparc64/configure.in: Ditto.
        * libc/sys/arc/configure.in: Ditto.
        * libc/sys/sysnec810/configure.in: Ditto.
        * libc/sys/m88kbug/configure.in: Ditto.
        * libc/sys/sysvnecv70/configure.in: Ditto.
        * libc/sys/z8ksim/configure.in: Ditto.
        * libc/sys/rtems/configure.in: Ditto.
        * libc/sys/w65/configure.in: Ditto.
        * libc/sys/sun4/configure.in: Ditto.
        * doc/configure.in: Ditto.
        * iconvdata/configure.in: Ditto.
        * configure.in: Use AC_CONFIG_HEADER instead of AM_CONFIG_HEADER.
@
text
@d513 1
a513 1
	newlib_cflags="${newlib_cflags} -DABORT_PROVIDED -DHAVE_GETTIMEOFDAY"
d517 1
a517 1
	newlib_cflags="${newlib_cflags} -DABORT_PROVIDED -DHAVE_GETTIMEOFDAY"
d556 1
a556 1
	newlib_cflags="${newlib_cflags} -DABORT_PROVIDED -DHAVE_GETTIMEOFDAY"
d663 1
a663 1
	newlib_cflags="${newlib_cflags} -DABORT_PROVIDED -DHAVE_GETTIMEOFDAY"
d667 1
a667 1
	newlib_cflags="${newlib_cflags} -DABORT_PROVIDED -DHAVE_GETTIMEOFDAY"
d672 1
a672 1
	newlib_cflags="${newlib_cflags} -DABORT_PROVIDED -DHAVE_GETTIMEOFDAY"
d703 1
a703 1
	newlib_cflags="${newlib_cflags} -DABORT_PROVIDED -DHAVE_GETTIMEOFDAY"
@


1.80
log
@
2006-04-11  Jeff Johnston  <jjohnstn@@redhat.com>

        * acinclude.m4: Properly add square brackets for
        AC_DEFUN macros.  Rewrite LIB_AC_PROG_CC to remove
        macros no longer available.  Add LIB_AM_PROG_AS to
        remove prereq of AC_PROG_CC.  Add LIB_AC_PROG_CC_GNU
        macro.  Substitute lpfx (library object prefix).
        * configure.host: Set lpfx depending on whether
        libtool is used or not.
        * configure.in: Individually specify libc and libm
        to AC_CONFIG_SUBDIRS.  Add square bracket quoting as
        necessary.
        * Makefile.am: Use $(lpfx) to get object names for
        math-library functions that should also be in libc.
        * libc/machine/configure.in: Use case statement to determine
        AC_CONFIG_SUBDIRS statement.
        * libc/sys/linux/linuxthreads/machine/configure.in: Ditto.
        * libc/sys/linux/machine/configure.in: Ditto.
        * libc/sys/configure.in: Ditto.
        * libm/machine/configure.in: Ditto.
        * libc/sys/linux/configure.in: Fix up AC_CONFIG_SUBDIRS.
        * libm/configure.in: Add AM_CONDITIONAL statement
        for HAVE_LIBM_MACHINE_DIR.
        * libc/machine/a29k/Makefile.am: Modified to work with
        latest automake.  Change includes setting AM_CCASFLAGS
        so building .S files will properly pick up flags used
        to build C files.
        * libc/machine/arm/Makefile.am: Ditto.
        * libc/machine/crx/Makefile.am: Ditto.
        * libc/machine/d10v/Makefile.am: Ditto.
        * libc/machine/d30v/Makefile.am: Ditto.
        * libc/machine/fr30/Makefile.am: Ditto.
        * libc/machine/frv/Makefile.am: Ditto.
        * libc/machine/h8300/Makefile.am: Ditto.
        * libc/machine/h8500/Makefile.am: Ditto.
        * libc/machine/hppa/Makefile.am: Ditto.
        * libc/machine/i386/Makefile.am: Ditto.
        * libc/machine/iq2000/Makefile.am: Ditto.
        * libc/machine/m32c/Makefile.am: Ditto.
        * libc/machine/m32r/Makefile.am: Ditto.
        * libc/machine/m68hc11/Makefile.am: Ditto.
        * libc/machine/m68k/Makefile.am: Ditto.
        * libc/machine/m88k/Makefile.am: Ditto.
        * libc/machine/mips/Makefile.am: Ditto.
        * libc/machine/mn10200/Makefile.am: Ditto.
        * libc/machine/mn10300/Makefile.am: Ditto.
        * libc/machine/mt/Makefile.am: Ditto.
        * libc/machine/necv70/Makefile.am: Ditto.
        * libc/machine/powerpc/Makefile.am: Ditto.
        * libc/machine/sh/Makefile.am: Ditto.
        * libc/machine/sparc/Makefile.am: Ditto.
        * libc/machine/tic4x/Makefile.am: Ditto.
        * libc/machine/tic80/Makefile.am: Ditto.
        * libc/machine/v850/Makefile.am: Ditto.
        * libc/machine/w65/Makefile.am: Ditto.
        * libc/machine/xscale/Makefile.am: Ditto.
        * libc/machine/xstormy16/Makefile.am: Ditto.
        * libc/machine/z8k/Makefile.am: Ditto.
        * libc/sys/a29khif/Makefile.am: Ditto.
        * libc/sys/arc/Makefile.am: Ditto.
        * libc/sys/arm/Makefile.am: Ditto.
        * libc/sys/d10v/Makefile.am: Ditto.
        * libc/sys/decstation/Makefile.am: Ditto.
        * libc/sys/h8300hms/Makefile.am: Ditto.
        * libc/sys/h8500hms/Makefile.am: Ditto.
        * libc/sys/linux/linuxthreads/machine/i386/Makefile.am: Ditto.
        * libc/sys/linux/machine/i386/Makefile.am: Ditto.
        * libc/sys/m88kbug/Makefile.am: Ditto.
        * libc/sys/mmixware/Makefile.am: Ditto.
        * libc/sys/netware/Makefile.am: Ditto.
        * libc/sys/rdos/Makefile.am: Ditto.
        * libc/sys/rtems/Makefile.am: Ditto.
        * libc/sys/sh/Makefile.am: Ditto.
        * libc/sys/sparc64/Makefile.am: Ditto.
        * libc/sys/sysmec/Makefile.am: Ditto.
        * libc/sys/sysnec810/Makefile.am: Ditto.
        * libc/sys/sysnecv850/Makefile.am: Ditto.
        * libc/sys/sysvi386/Makefile.am: Ditto.
        * libc/sys/sysvnecv70/Makefile.am: Ditto.
        * libc/sys/tic80/Makefile.am: Ditto.
        * libc/sys/w65/Makefile.am: Ditto.
        * libc/sys/z8ksim/Makefile.am: Ditto.
        * libm/machine/i386/Makefile.am: Ditto.
        * libc/sys/arm/Makefile.am: Ditto plus add EXTRA sources including
        trap.S so that automake will generate a .S.o suffix rule.
        * libc/argz/Makefile.am: Modified to work with
        latest automake.  Change includes adding lib_a_CFLAGS
        so automake doesn't complain about libtool and non-libtool
        libraries sharing objects.
        * libc/ctype/Makefile.am: Ditto.
        * libc/errno/Makefile.am: Ditto.
        * libc/iconv/ccs/Makefile.am: Ditto.
        * libc/iconv/ces/Makefile.am: Ditto.
        * libc/iconv/lib/Makefile.am: Ditto.
        * libc/locale/Makefile.am: Ditto.
        * libc/misc/Makefile.am: Ditto.
        * libc/posix/Makefile.am: Ditto.
        * libc/reent/Makefile.am: Ditto.
        * libc/search/Makefile.am: Ditto.
        * libc/signal/Makefile.am: Ditto.
        * libc/stdio/Makefile.am: Ditto.
        * libc/stdio64/Makefile.am: Ditto.
        * libc/stdlib/Makefile.am: Ditto.
        * libc/string/Makefile.am: Ditto.
        * libc/sys/linux/Makefile.am: Ditto.
        * libc/sys/linux/argp/Makefile.am: Ditto.
        * libc/sys/linux/cmath/Makefile.am: Ditto.
        * libc/sys/linux/dl/Makefile.am: Ditto.
        * libc/sys/linux/iconv/Makefile.am: Ditto.
        * libc/sys/linux/intl/Makefile.am: Ditto.
        * libc/sys/linux/linuxthreads/Makefile.am: Ditto.
        * libc/sys/linux/net/Makefile.am: Ditto.
        * libc/sys/linux/stdlib/Makefile.am: Ditto.
        * libc/syscalls/Makefile.am: Ditto.
        * libc/time/Makefile.am: Ditto.
        * libc/unix/Makefile.am: Ditto.
        * libm/Makefile.am: Ditto.
        * libm/common/Makefile.am: Ditto.
        * libm/math/Makefile.am: Ditto.
        * libm/mathfp/Makefile.am: Ditto.
        * Regenerate all aclocal.m4, Makefile.in, and configure files.
@
text
@d196 2
a197 2
        machine_dir=mt
        ;;
@


1.79
log
@	* configure.host: Allow hosts to set the default
	newlib_atexit_dynamic_alloc value.
	* configure.in: Likewise.
	* configure: Regenerated.
@
text
@d43 1
d70 1
d296 1
@


1.79.2.1
log
@
2006-03-30  Jeff Johnston  <jjohnstn@@redhat.com>

        * acinclude.m4: Properly add square brackets for
        AC_DEFUN macros.  Rewrite LIB_AC_PROG_CC to remove
        macros no longer available.  Add LIB_AM_PROG_AS to
        remove prereq of AC_PROG_CC.  Add LIB_AC_PROG_CC_GNU
        macro.  Substitute lpfx (library object prefix).
        * configure.host: Set lpfx depending on whether
        libtool is used or not.
        * configure.in: Individually specify libc and libm
        to AC_CONFIG_SUBDIRS.  Add square bracket quoting as
        necessary.
        * libc/machine/configure.in: Use case statement to determine
        AC_CONFIG_SUBDIRS statement.
        * libc/sys/linux/linuxthreads/machine/configure.in: Ditto.
        * libc/sys/linux/machine/configure.in: Ditto.
        * libc/sys/configure.in: Ditto.
        * libm/machine/configure.in: Ditto.
        * libc/sys/linux/configure.in: Fix up AC_CONFIG_SUBDIRS.
        * libm/configure.in: Add AM_CONDITIONAL statement
        for HAVE_LIBM_MACHINE_DIR.
        * libc/machine/a29k/Makefile.am: Modified to work with
        latest automake.  Change includes setting AM_CCASFLAGS
        so building .S files will properly pick up flags used
        to build C files.
        * libc/machine/arm/Makefile.am: Ditto.
        * libc/machine/crx/Makefile.am: Ditto.
        * libc/machine/d10v/Makefile.am: Ditto.
        * libc/machine/d30v/Makefile.am: Ditto.
        * libc/machine/fr30/Makefile.am: Ditto.
        * libc/machine/frv/Makefile.am: Ditto.
        * libc/machine/h8300/Makefile.am: Ditto.
        * libc/machine/h8500/Makefile.am: Ditto.
        * libc/machine/hppa/Makefile.am: Ditto.
        * libc/machine/i386/Makefile.am: Ditto.
        * libc/machine/iq2000/Makefile.am: Ditto.
        * libc/machine/m32c/Makefile.am: Ditto.
        * libc/machine/m32r/Makefile.am: Ditto.
        * libc/machine/m68hc11/Makefile.am: Ditto.
        * libc/machine/m68k/Makefile.am: Ditto.
        * libc/machine/m88k/Makefile.am: Ditto.
        * libc/machine/mips/Makefile.am: Ditto.
        * libc/machine/mn10200/Makefile.am: Ditto.
        * libc/machine/mn10300/Makefile.am: Ditto.
        * libc/machine/mt/Makefile.am: Ditto.
        * libc/machine/necv70/Makefile.am: Ditto.
        * libc/machine/powerpc/Makefile.am: Ditto.
        * libc/machine/sh/Makefile.am: Ditto.
        * libc/machine/sparc/Makefile.am: Ditto.
        * libc/machine/tic4x/Makefile.am: Ditto.
        * libc/machine/tic80/Makefile.am: Ditto.
        * libc/machine/v850/Makefile.am: Ditto.
        * libc/machine/w65/Makefile.am: Ditto.
        * libc/machine/xscale/Makefile.am: Ditto.
        * libc/machine/xstormy16/Makefile.am: Ditto.
        * libc/machine/z8k/Makefile.am: Ditto.
        * libc/sys/a29khif/Makefile.am: Ditto.
        * libc/sys/arc/Makefile.am: Ditto.
        * libc/sys/arm/Makefile.am: Ditto.
        * libc/sys/d10v/Makefile.am: Ditto.
        * libc/sys/decstation/Makefile.am: Ditto.
        * libc/sys/h8300hms/Makefile.am: Ditto.
        * libc/sys/h8500hms/Makefile.am: Ditto.
        * libc/sys/linux/linuxthreads/machine/i386/Makefile.am: Ditto.
        * libc/sys/linux/machine/i386/Makefile.am: Ditto.
        * libc/sys/m88kbug/Makefile.am: Ditto.
        * libc/sys/mmixware/Makefile.am: Ditto.
        * libc/sys/netware/Makefile.am: Ditto.
        * libc/sys/rdos/Makefile.am: Ditto.
        * libc/sys/rtems/Makefile.am: Ditto.
        * libc/sys/sh/Makefile.am: Ditto.
        * libc/sys/sparc64/Makefile.am: Ditto.
        * libc/sys/sysmec/Makefile.am: Ditto.
        * libc/sys/sysnec810/Makefile.am: Ditto.
        * libc/sys/sysnecv850/Makefile.am: Ditto.
        * libc/sys/sysvi386/Makefile.am: Ditto.
        * libc/sys/sysvnecv70/Makefile.am: Ditto.
        * libc/sys/tic80/Makefile.am: Ditto.
        * libc/sys/w65/Makefile.am: Ditto.
        * libc/sys/z8ksim/Makefile.am: Ditto.
        * libm/machine/i386/Makefile.am: Ditto.
        * libc/argz/Makefile.am: Modified to work with
        latest automake.  Change includes adding lib_a_CFLAGS
        so automake doesn't complain about libtool and non-libtool
        libraries sharing objects.
        * libc/ctype/Makefile.am: Ditto.
        * libc/errno/Makefile.am: Ditto.
        * libc/iconv/ccs/Makefile.am: Ditto.
        * libc/iconv/ces/Makefile.am: Ditto.
        * libc/iconv/lib/Makefile.am: Ditto.
        * libc/locale/Makefile.am: Ditto.
        * libc/misc/Makefile.am: Ditto.
        * libc/posix/Makefile.am: Ditto.
        * libc/reent/Makefile.am: Ditto.
        * libc/search/Makefile.am: Ditto.
        * libc/signal/Makefile.am: Ditto.
        * libc/stdio/Makefile.am: Ditto.
        * libc/stdio64/Makefile.am: Ditto.
        * libc/stdlib/Makefile.am: Ditto.
        * libc/string/Makefile.am: Ditto.
        * libc/sys/linux/Makefile.am: Ditto.
        * libc/sys/linux/argp/Makefile.am: Ditto.
        * libc/sys/linux/cmath/Makefile.am: Ditto.
        * libc/sys/linux/dl/Makefile.am: Ditto.
        * libc/sys/linux/iconv/Makefile.am: Ditto.
        * libc/sys/linux/intl/Makefile.am: Ditto.
        * libc/sys/linux/linuxthreads/Makefile.am: Ditto.
        * libc/sys/linux/net/Makefile.am: Ditto.
        * libc/sys/linux/stdlib/Makefile.am: Ditto.
        * libc/syscalls/Makefile.am: Ditto.
        * libc/time/Makefile.am: Ditto.
        * libc/unix/Makefile.am: Ditto.
        * libm/Makefile.am: Ditto.
        * libm/common/Makefile.am: Ditto.
        * libm/math/Makefile.am: Ditto.
        * libm/mathfp/Makefile.am: Ditto.
        * Regenerate all aclocal.m4, Makefile.in, and configure files.
@
text
@a42 1
#   lpfx		library object prefix - generated when no libtool
a68 1
lpfx="lib_a-"
a293 1
    lpfx=
@


1.78
log
@
2006-01-31  Leif Ekblad  <leif@@rdos.net>

        * configure.host: RDOS support added
        * libc/include/sys/config.h: Ditto.
        * libc/sys/rdos/Makefile.am, libc/sys/rdos/Makefile.in: New files.
        * libc/sys/rdos/aclocal.m4, libc/sys/rdos/chown.c: Ditto.
        * libc/sys/rdos/close.c, libc/sys/rdos/config.h: Ditto.
        * libc/sys/rdos/configure, libc/sys/rdos/configure.in: Ditto.
        * libc/sys/rdos/crt0.S, libc/sys/rdos/execve.c: Ditto.
        * libc/sys/rdos/fork.c, libc/sys/rdos/fstat.c: Ditto.
        * libc/sys/rdos/getenv.c, libc/sys/rdos/getpid.c: Ditto.
        * libc/sys/rdos/gettod.c, libc/sys/rdos/isatty.c: Ditto.
        * libc/sys/rdos/kill.c, libc/sys/rdos/link.c: Ditto.
        * libc/sys/rdos/lseek.c, libc/sys/rdos/open.c: Ditto.
        * libc/sys/rdos/rdos.S, libc/sys/rdos/rdos.h: Ditto.
        * libc/sys/rdos/rdoshelp.c, libc/sys/rdos/read.c: Ditto.
        * libc/sys/rdos/readlink.c, libc/sys/rdos/sbrk.c: Ditto.
        * libc/sys/rdos/stat.c, libc/sys/rdos/symlink.c: Ditto.
        * libc/sys/rdos/times.c, libc/sys/rdos/unlink.c: Ditto.
        * libc/sys/rdos/user.def, libc/sys/rdos/wait.c: Ditto.
        * libc/sys/rdos/write.c: Ditto.
@
text
@d66 1
d742 7
@


1.78.2.1
log
@Add semihosting support for BDM mode on ColdFire
@
text
@a596 4
  m68k-unknown-elf)
	newlib_cflags="${newlib_cflags} -DHAVE_RENAME -DHAVE_SYSTEM -DMISSING_SYSCALL_NAMES"
	syscall_dir=
	;;
@


1.78.2.2
log
@	/
	* config.sub: Recognize fido and fido-*.

	libgloss/
	* configure.in: Recognize fido-*-*.
	* configure: Regenerate.
	* m68k/Makefile.in (CF_ISRS): Use addprefix.
	(FIDO_CRT0, FIDO_BSP, FIDO_OBJS, FIDO_HANDLERS,
	FIDO_UNHOSTED_SCRIPTS, FIDO_HOSTED_SCRIPTS, FIDO_SCRIPTS,
	FIDO_SOURCES, all_fido, fido-%-crt0.o, fido-rom.ld,
	fido-rom-hosted.ld, fido-sram.ld, fido-sram-hosted.ld,
	fido-sdram.ld, fido-sdram-hosted.ld, fido-redboot.ld,
	install_fido): New.
	* m68k/asm.h (mbb): New.
	* m68k/configure.in (DO): Check for __mfido__.
	* m68k/configure: Regenerate.
	* m68k/fido-_exit.c, m68k/fido-crt0.S, m68k/fido-handler.c,
	m68k/fido-hosted.S, m68k/fido-sbrk.c, m68k/fido.h,
	m68k/fido.sc, m68k/fido_profiling.h: New.

	newlib/
	* configure.host: Recognize fido.
@
text
@a113 4
  fido)
	machine_dir=m68k
	newlib_cflags="${newlib_cflags} -DCOMPACT_CTYPE"
	;;
a556 4
  fido-*-elf)
	newlib_cflags="${newlib_cflags} -DHAVE_RENAME -DHAVE_SYSTEM -DMISSING_SYSCALL_NAMES"
	syscall_dir=
	;;
@


1.77
log
@
	Rename ms1 to mt, part 1
	* config.sub: Replace ms1 arch with mt.  Allow ms1 as alias.
	* configure.in: Replace ms1 arch with mt.
	* configure: Rebuilt.

	* bfd/Makefile.am (ALL_MACHINES, ALL_MACHINES_CFILES,
	BFD32_BACKENDS, BFD32_BACKENDS_CFILES): Replace ms1 with mt.
	(cpu_mt.lo, elf32-mt.lo): Update target and dependency names.
	* bfd/Makefile.in: Rebuilt.
	* bfd/config.bfd: Replace ms1 arch with mt.
	* bfd/configure.in: Replace ms1 files with mt files.
	* bfd/configure: Rebuilt.
	* bfd/elf32-mt.c: Renamed from elf32-ms1.c.  Update include files.
	* bfd/cpu-mt.c: Renamed from cpu-ms1.c.

	* cpu/mt.cpu: Rename from ms1.cpu.
	* cpu/mt.opc: Rename from ms1.opc.

	* binutils/Makefile.am: Replace ms1 files with mt files.
	* binutils/Makefile.in: Rebuilt.
	* binutils/readelf.c (elf/mt.h): Adjust #include.

	* gas/configure.in: Replace ms1 arch with mt arch.
	* gas/configure: Rebuilt.
	* gas/configure.tgt: Replace ms1 arch with mt arch.
	* gas/config/tc-mt.c: Renamed from tc-ms1.c: Update include files.

	* gas/doc/Makefile.am (CPU_DOCS): Replace ms1 files with mt files.
	* gas/doc/Makefile.in: Rebuilt.

	* gas/testsuite/gas/mt: Renamed from ms1 dir.  Update file names as
	needed.
	* gas/testsuite/gas/mt/errors.exp: Replace ms1 arch with mt arch.
	* gas/testsuite/gas/mt/mt.exp: Replace ms1 arch with mt arch.
	* gas/testsuite/gas/mt/relocs.exp: Replace ms1 arch with mt arch.

	* gdb/configure.tgt: Replace ms1 arch with mt arch.
	* gdb/config/mt: Renamed from ms1 dir.  Update file names as needed.
	* gdb/config/mt/mt.mt (TDEPFILES): Replace ms1 file with mt file.

	* include/elf/mt.h: Renamed from ms1.h

	* ld/Makefile.am (ALL_EMULATIONS): Replace ms1 files with mt files.
	(eelf32mt.c): Update target name and dependencies.
	* ld/Makefile.in: Rebuilt.
	* ld/configure.tgt: Replace ms1 arch with mt arch.
	* ld/emulparams/elf32mt.sh: Renamed from elf32ms1.sh. Update
	comment.

	* libgloss/configure.in: Replace ms1 arch with mt arch.
	* libgloss/configure: Rebuilt.
	* libgloss/mt: Renamed from ms1 dir.

	* newlib/configure.host: Replace ms1 arch with mt arch.
	* newlib/libc/machine/mt: Renamed from ms1 dir.

	* opcodes/Makefile.am (CLEANFILES, CGEN_CPUS, MT_DEPS): Replace ms1
	with mt.
	* opcodes/Makefile.in: Rebuilt.
	* opcodes/configure.in: Replace ms1 files with mt files.
	* opcodes/configure: Rebuilt.

	* sid/component/cgen-cpu/mt: Renamed from ms1 dir.  Update file
	names as appropriate.
	* sid/component/cgen-cpu/mt/Makefile.am: Replace ms1 files with mt
	files.
	* sid/component/cgen-cpu/mt/Makefile.in: Rebuilt.
@
text
@d365 4
@


1.76
log
@
2005-08-31  Paul Brook  <paul@@codesourcery.com>

        * configure.host: Set have_crt0 to no for Arm targts when not
        providing syscalls.  Set sys_dir=arm unconditionally.
        Default have_crt0 based on sys_dir.
        * configure.in: Use have_crt0.
        * libc/configure.in: Ditto.
        * libc/sys/configure.in: Ditto.
        * configure: Regenerate.
        * libc/configure: Regenerate.
        * libc/sys/configure: Regenerate.
        * libc/sys/arm/Makefile.am (lib_a_SOURCES): Add aeabi_atexit.c.
        Only build other files when providing syscalls.
        * libc/sys/arm/Makefile.in: Regenerate.
        * libc/sys/arm/aeabi_atexit.c: New file.
@
text
@d192 2
a193 2
  ms1*)
        machine_dir=ms1
@


1.75
log
@
2005-08-10  DJ Delorie  <dj@@redhat.com>

        * configure.host: Add m32c support.
        * libc/include/machine/ieeefp.h: Likewise.
        * libc/include/machine/setjmp.h: Likewise.
        * libc/include/sys/config.h: Likewise.
        * libc/machine/m32c: New directory, Renesas R8C/M16C/M32C support.
        * libc/machine/m32c/aclocal.m4: New file.
        * libc/machine/m32c/configure: Ditto.
        * libc/machine/m32c/configure.in: Ditto.
        * libc/machine/m32c/Makefile.am: Ditto.
        * libc/machine/m32c/Makefile.in: Ditto.
        * libc/machine/m32c/setjmp.S: Ditto.
@
text
@d45 2
d60 1
d324 3
a326 2
	if [ "x${newlib_may_supply_syscalls}" = "xyes" ] ; then
	  sys_dir=arm
d339 3
a341 2
	if [ "x${newlib_may_supply_syscalls}" = "xyes" ] ; then
	  sys_dir=arm
d421 3
a423 2
	if [ "x${newlib_may_supply_syscalls}" = "xyes" ] ; then
	  sys_dir=arm
d427 3
a429 2
	if [ "x${newlib_may_supply_syscalls}" = "xyes" ] ; then
	  sys_dir=arm
d454 3
a456 2
	if [ "x${newlib_may_supply_syscalls}" = "xyes" ] ; then
	  sys_dir=arm
d736 4
@


1.74
log
@        * configure.host: Added entry for ms1*.
        * libc/include/machine/ieeefp.h: Handle ms1.
        * libc/include/machine/setjmp.h (_JBLEN): Define for ms1.
        * libc/machine/ms1/aclocal.m4: New.
        * libc/machine/ms1/configure: New.
        * libc/machine/ms1/configure.in: New.
        * libc/machine/ms1/Makefile.am: New.
        * libc/machine/ms1/Makefile.in: New.
        * libc/machine/ms1/setjmp.S: New.
@
text
@d70 1
a70 1
  :m32r-* | :d10v-* | :d30v-* | :avr-*)
d148 5
@


1.73
log
@
2005-05-12  Jeff Johnston  <jjohnstn@@redhat.com>

        * configure.host (mn10300-*): Add long long I/O support by default.
@
text
@d184 3
@


1.72
log
@	* configure.host <cris-*-* | crisv32-*-*>: Set
        default_newlib_io_long_long="yes".
@
text
@d181 1
@


1.71
log
@
Fix whitespace with crx entry.
@
text
@d513 1
@


1.70
log
@* configure.host: For cygwin, redefine CC with cygwin include directory first
to mimic the behavior of the top-level configury.  Move include directory out
of newlib_cflags.
@
text
@d517 1
a517 1
  	newlib_cflags="${newlib_cflags} -DHAVE_RENAME -DMISSING_SYSCALL_NAMES"
@


1.69
log
@
2005-03-22  Jeff Johnston  <jjohnstn@@redhat.com>

        * configure.host: For arc, set -DREENTRANT_SYSCALLS_PROVIDED flag on.
        * libc/sys/arc/syscalls.c: Change functions to use __errno_r rather
        than errno.
@
text
@d458 2
a459 1
	newlib_cflags="${newlib_cflags} -DHAVE_OPENDIR -DHAVE_RENAME -DSIGNAL_PROVIDED -D_COMPILING_NEWLIB -DHAVE_FCNTL -DMALLOC_PROVIDED -I${cygwin_srcdir}/include"
@


1.68
log
@	* configure.host (newlib_cflags) <cris-*-*, crisv32-*-*>: Add
	-DCOMPACT_CTYPE.
@
text
@d505 3
@


1.67
log
@
2005-01-27  Hans-Peter Nilsson  <hp@@axis.com>

        * configure.host: Add support for cris-*-* and crisv32-*-*.
        * libc/include/machine/ieeefp.h: Ditto.
        * libc/include/machine/setjmp.h: Ditto.
        * libc/machine/cris/configure.in, libc/machine/cris/Makefile.am,
        libc/machine/cris/libcdtor.c, libc/machine/cris/setjmp.c,
        libc/machine/cris/memmove.c, libc/machine/cris/memcpy.c,
        libc/machine/cris/memset.c, libc/machine/cris/include/pthread.h,
        libc/machine/cris/sys/signal.h, libc/machine/cris/sys/fcntl.h,
        libc/machine/cris/sys/errno.h, libc/machine/cris/aclocal.m4,
        libc/machine/cris/configure, libc/machine/cris/Makefile.in: New
        files.
@
text
@d509 1
a509 1
	newlib_cflags="${newlib_cflags} -DHAVE_RENAME -DHAVE_GETTIMEOFDAY -D_USE_WRITE"
@


1.66
log
@
2004-10-05  Tomer Levi  <Tomer.Levi@@nsc.com>

        * configure.host: Add support for crx.
        * libc/include/machine/ieeefp.h: Ditto.
        * libc/include/machine/setjmp.h: Ditto.
        * libc/machine/crx/Makefile.am: New file.
        * libc/machine/crx/configure.in: Ditto.
        * libc/machine/crx/setjmp.S: Ditto.
        * libc/machine/crx/getenv.c: Ditto.
        * libc/machine/crx/aclocal.m4: Generate.
        * libc/machine/crx/configure: Ditto.
        * libc/machine/crx/Makefile.in: Ditto.
        * libc/machine/crx/sys/asm.h: New file.
        * libc/machine/crx/sys/libh.h: Ditto.
        * libc/machine/crx/sys/syscall.h: Ditto.
@
text
@d96 3
d508 4
@


1.65
log
@
2004-09-15  Jeff Johnston  <jjohnstn@@redhat.com>

        * configure.host: Reverting 2004-09-14 change as fix has occurred on
        Cygwin side.
        * configure.in: Ditto.
        * libc/configure.in: Ditto.
        * libc/sys/configure.in: Ditto.
        * configure: Ditto.
        * libc/configure: Ditto.
        * libc/sys/configure: Ditto.
        * libc/include/sys/reent.h: Ditto.
        * libc/stdlib/__atexit.c: Ditto.
        * libc/stdlib/__call_atexit.c: Ditto.
        * libc/stdlib/cxa_atexit.c: Ditto.
        * libc/stdlib/cxa_finalize.c: Ditto.
        * libc/sys/cygwin/Makefile.am: Removed again.
        * libc/sys/cygwin/Makefile.in: Ditto.
        * libc/sys/cygwin/aclocal.m4: Ditto.
        * libc/sys/cygwin/configure: Ditto.
        * libc/sys/cygwin/configure.in: Ditto.
        * libc/sys/cygwin/dummy.c: Ditto.
        * libc/sys/cygwin/sys/reent.h: Ditto.
@
text
@d96 3
d313 3
d505 4
@


1.64
log
@
2004-09-14  Jeff Johnston  <jjohnstn@@redhat.com>

        * configure.host: Add Cygwin sys directory.
        * configure.in: Do not set CRT0 for cygwin.
        * libc/configure.in: Ditto.
        * libc/sys/configure.in: Ditto.
        * configure: Regenerated.
        * libc/configure: Ditto.
        * libc/sys/configure: Ditto.
        * libc/include/sys/reent.h: Add __REENT_HAS_CXA_SUPPORT flag.
        * libc/stdlib/__atexit.c: Keep cxa support protected by new
        __REENT_HAS_CXA_SUPPORT flag.
        * libc/stdlib/__call_atexit.c: Ditto.
        * libc/stdlib/cxa_atexit.c: Ditto.
        * libc/stdlib/cxa_finalize.c: Ditto.
        * libc/sys/cygwin/Makefile.am: New file.
        * libc/sys/cygwin/Makefile.in: Ditto.
        * libc/sys/cygwin/aclocal.m4: Ditto.
        * libc/sys/cygwin/configure: Ditto.
        * libc/sys/cygwin/configure.in: Ditto.
        * libc/sys/cygwin/dummy.c: Ditto.
        * libc/sys/cygwin/sys/reent.h: Ditto.  This file is stabilized
        version of reent.h.
@
text
@a286 1
	sys_dir=cygwin
@


1.63
log
@
2004-07-16  Anil Paranjpe  <anilp1@@kpitcummins.com>

        * configure.host (h8300*-*-*): Default long long printing support.
@
text
@d287 1
@


1.62
log
@Define PREFER_SIZE_OVER_SPEED for xStormy16 target
@
text
@d523 1
@


1.61
log
@
2004-07-06  Chris Demetriou  <cgd@@broadcom.com>

        * configure.host (mips*-*-elf*): Default long long printing
        support.
@
text
@d225 1
@


1.60
log
@
2004-06-09  Toralf Lund  <toralf@@procaptura.com>

        * libc/sys/arm/setjmp.S, libc/sys/arm/access.c: Move
        files from libc/sys/arm to libc/machine/arm.
        * libc/machine/arm/Makefile.am, libc/machine/arm/Makefile.in: Add
        library build support for files moved from libc/sys/arm.
        * libc/sys/arm/Makefile.am, libc/sys/arm/Makefile.in:  Remove
        references to access and setjmp.
        * configure.host: Add checks for newlib_may_supply_syscalls to
        determine whether or not to use sys/arm directory and use
        special compiler flags: ARM_RDI_MONITOR and ARM_RDP_MONITOR.
@
text
@d559 4
@


1.59
log
@
2004-05-25  Artem B. Bityuckiy  <abitytsky@@softminecorp.com>

        * newlib.hin: (_WANT_IO_POS_ARGS): New define.
        (_WANT_IO_LONG_LONG): Ditto.
        (_WANT_IO_LONG_DOUBLE): Ditto.
        * configure.in: Add new configuration options
        --enable-newlib-io-long-long and --enable-newlib-io-long-double
        which tie to new defines in newlib.hin.
        * configure: Regenerated.
        * configure.host: Add checks for new configuration options.  Also
        fix up check for --enable-newlib-io-pos-args so configuration
        option will override any default for a given platform.
        Remove defining compiler flags for the _WANT_IO* options.
        * libc/stdio/vfprintf.c: Change to use new newlib.hin defines
        instead of looking for old compiler flags.
        * libc/stdio/vfscanf.c: Ditto.
        * libc/stdio/vfieeefp.h: Ditto.
        * libc/machine/powerpc/vfprintf.c: Ditto.
        * libc/machine/powerpc/vfscanf.c: Ditto.
@
text
@d305 3
a307 1
	sys_dir=arm 
d316 3
a318 1
	sys_dir=arm
d320 3
d397 3
a399 4
	sys_dir=arm 
	;;
  xscale-*-*)
	sys_dir=arm 
d402 3
a404 1
	sys_dir=arm 
a423 3
  frv*)
        sys_dir=
        ;;
d427 5
a477 1
# Don't use the debugging protocols just yet.
d482 1
a482 1
# Select which debug protocol is being used.
d487 2
d490 4
a493 2
#	newlib_cflags="${newlib_cflags} -DARM_RDP_MONITOR"
	newlib_cflags="${newlib_cflags} -DARM_RDI_MONITOR"
d509 3
a511 1
	newlib_cflags="${newlib_cflags} -DARM_RDI_MONITOR"
a610 7
	newlib_cflags="${newlib_cflags} -DARM_RDI_MONITOR"
	;;
  xscale-*-*)
	syscall_dir=syscalls
	newlib_cflags="${newlib_cflags} -DABORT_PROVIDED -DHAVE_GETTIMEOFDAY"
	newlib_cflags="${newlib_cflags} -DARM_RDI_MONITOR"
	newlib_cflags="${newlib_cflags} -DHAVE_SYSTEM -DHAVE_RENAME"
d620 1
a620 1
# Select which debug protocol is being used.
d625 6
a630 3
# See also arm and strongarm above.
#	newlib_cflags="${newlib_cflags} -DARM_RDP_MONITOR"
	newlib_cflags="${newlib_cflags} -DARM_RDI_MONITOR"
d648 8
@


1.58
log
@
2004-04-23  Artem B. Bityuckiy  <abitytsky@@softminecorp.com>

        * configure.in: Define _MB_CAPABLE if mb supported.
        * configure: Regenerated.
        * configure.host: Remove manual setting of MB_CAPABLE compiler
        flag.
        * newlib.hin: Add _MB_CAPABLE flag.
        * libc/ctype/iswalpha.c, libc/ctype/iswblank.c: Include <newlib.h>
        and check for _MB_CAPABLE flag instead of MB_CAPABLE.
        * libc/ctype/iswcntrl.c, libc/ctype/iswprint.c: Ditto.
        * libc/ctype/iswpunct.c, libc/ctype/iswspace.c: Ditto.
        * libc/ctype/jp2uc.c: Ditto.
        * libc/ctype/towlower.c, libc/ctype/towupper.c: Ditto.
        * libc/locale/locale.c: Ditto
        * libc/machine/powerpc/vfscanf.c: Ditto
        * libc/stdio/vfprintf.c, libc/stdio/vfscanf.c: Ditto
        * libc/stdlib/mblen.c: Ditto
        * libc/stdlib/mblen_r.c, libc/stdlib/mbrlen.c: Ditto
        * libc/stdlib/mbrtowc.c, libc/stdlib/mbsrtowcs.c: Ditto
        * libc/stdlib/mbstowcs.c, libc/stdlib/mbtowc.c: Ditto
        * libc/stdlib/mbtowc_r.c, libc/stdlib/wcrtomb.c: Ditto
        * libc/stdlib/wcsrtombs.c, libc/stdlib/wcstombs.c: Ditto
        * libc/stdlib/wctomb.c, libc/sys/linux/intl/dcigettext.c: Ditto
        * libc/sys/linux/intl/explodename.c: Ditto
        * libc/sys/linux/intl/finddomain.c: Ditto
        * libc/sys/linux/intl/l10nflist.c: Ditto
        * libc/sys/linux/intl/loadmsgcat.c: Ditto
        * libc/sys/linux/intl/localealias.c: Ditto
@
text
@d27 2
d60 3
a263 6
# Enable printf positional argument support if requested.

if [ "${newlib_io_pos_args}" = "yes" ] ; then
	newlib_cflags="${newlib_cflags} -DWANT_IO_POS_ARGS"
fi

d345 3
a351 1
	newlib_cflags="${newlib_cflags} -DWANT_IO_POS_ARGS -DWANT_IO_LONG_DBL"
d435 4
a438 1
	newlib_cflags="${newlib_cflags} -DHAVE_OPENDIR -DHAVE_RENAME -DSIGNAL_PROVIDED -DWANT_IO_POS_ARGS -DWANT_IO_LONG_DBL -DWANT_PRINTF_LONG_LONG -D_COMPILING_NEWLIB -DHAVE_FCNTL -DMALLOC_PROVIDED -I${cygwin_srcdir}/include"
d449 2
a450 1
	newlib_cflags="${newlib_cflags} -DHAVE_GETTIMEOFDAY -DMALLOC_PROVIDED -DEXIT_PROVIDED -DMISSING_SYSCALL_NAMES -DSIGNAL_PROVIDED -DREENTRANT_SYSCALLS_PROVIDED -DHAVE_OPENDIR -DNO_EXEC -DWANT_PRINTF_LONG_LONG -DHAVE_FCNTL"
a498 1
	newlib_cflags="${newlib_cflags}"
d503 1
a503 1
	newlib_cflags="${newlib_cflags} -DWANT_PRINTF_LONG_LONG"
d524 1
a524 1
	newlib_cflags="${newlib_cflags} -DWANT_PRINTF_LONG_LONG"
a537 1
	newlib_cflags="${newlib_cflags}"
d541 2
a542 1
	newlib_cflags="${newlib_cflags} -DWANT_PRINTF_LONG_LONG -DMISSING_SYSCALL_NAMES"
d554 2
a555 1
	newlib_cflags="${newlib_cflags} -DMISSING_SYSCALL_NAMES -DWANT_PRINTF_LONG_LONG"
d558 2
a559 1
	newlib_cflags="${newlib_cflags} -DMISSING_SYSCALL_NAMES -DWANT_PRINTF_LONG_LONG"
d567 2
a568 1
	newlib_cflags="${newlib_cflags} -mrelocatable-lib -mno-eabi -mstrict-align -DMISSING_SYSCALL_NAMES -DWANT_PRINTF_LONG_LONG"
d575 2
a576 1
	newlib_cflags="${newlib_cflags} -DHAVE_GETTIMEOFDAY -DWANT_PRINTF_LONG_LONG"
d649 23
@


1.57
log
@
2004-02-02  Joel Sherrill  <joel@@oarcorp.com>

        * configure.host: Add support for tic4x.
        * libc/include/machine/ieeefp.h: Ditto.
        * libc/include/machine/setjmp.h: Ditto.
        * libc/machine/tic4x/Makefile.am: New file.
        * libc/machine/tic4x/configure.in: Ditto.
        * libc/machine/tic4x/setjmp.S: Ditto.
        * libc/machine/tic4x/aclocal.m4: Generated.
        * libc/machine/tic4x/configure: Ditto.
        * libc/machine/tic4x/Makefile.in: Ditto.
@
text
@a252 4
if [ "x${newlib_mb}" = "xyes" ] ; then
	newlib_cflags="${newlib_cflags} -DMB_CAPABLE"
fi

@


1.56
log
@
2003-11-19  Nicholas Wourms  <nwourms@@netscape.net>

        * configure.host: Enable positional arguments for printf
        family for Cygwin.
        * libc/stdio/vfprintf.c (_VFPRINTF_R): Remove extraneous
        pointer reference for quad_ptr_t.
@
text
@d196 3
@


1.55
log
@
2003-11-07  Jeff Johnston  <jjohnstn@@redhat.com>

        * configure.host: Remove -DLOOSE_KERNEL_NAMES flag for linux
        x86 build.
        * iconvdata/Makefile.am: Make dependent on newlib's configure.host
        and set up default flags to pass to aclocal.
        * iconvdata/Makefile.in: Regenerated.
        * libc/sys/linux/Makefile.am: Add _ELIX_LEVEL_4 getlogin, getpwnam,
        and getpwuid routines.
        * libc/sys/linux/Makefile.in: Regenerated.
        * libc/sys/linux/getlogin.c: New stub file to allow x86-linux
        applications to link with newlib's shared libc library.
        * libc/sys/linux/getpwnam.c: Ditto.
        * libc/sys/linux/getpwuid.c: Ditto.
        * libc/sys/linux/sys/types.h: Include <features.h> and supply types
        that were formerly supplied by /usr/include/linux/types.h with
        kernel types.
        * testsuite/newlib.wctype/twctype.c: Fix testcase to properly
        test _ELIX_LEVEL macro.
@
text
@d435 1
a435 1
	newlib_cflags="${newlib_cflags} -DHAVE_OPENDIR -DHAVE_RENAME -DSIGNAL_PROVIDED -DWANT_IO_LONG_DBL -DWANT_PRINTF_LONG_LONG -D_COMPILING_NEWLIB -DHAVE_FCNTL -DMALLOC_PROVIDED -I${cygwin_srcdir}/include"
@


1.54
log
@Allocate 4 slots on stack before calling main, in case it saves its argument
registers.
Remove reference to deleted v850ea port.
Do not use -mv850 when building for v850e target.  This prevents the ctbp
system register from being initialised.
@
text
@d350 1
a350 1
	newlib_cflags="${newlib_cflags} -D_LOOSE_KERNEL_NAMES -DHAVE_FCNTL"
@


1.53
log
@* libc/stdio64/fdopen64.c: New file.
* libc/stdio64/Makefile.am (LIB_OBJS): Add fdopen64.o
* libc/stdio64/Makefile.in: Regenerate.
* libc/include/stdio.h (fdopen64): Define.
* libc/include/stdio.h (_fdopen64_r): Ditto.
@
text
@d209 1
a209 5
	newlib_cflags="${newlib_cflags} -DPREFER_SIZE_OVER_SPEED -mv850 "
	;;
  v850ea)
	machine_dir=v850
	newlib_cflags="${newlib_cflags} -DPREFER_SIZE_OVER_SPEED -mv850 "
@


1.52
log
@
2003-06-20  Jeff Johnston  <jjohnstn@@redhat.com>

        * configure.host (iq2000): Add tabs.
@
text
@d437 3
a439 1
	newlib_cflags="${newlib_cflags} -DHAVE_OPENDIR -DHAVE_RENAME -DSIGNAL_PROVIDED -DWANT_IO_LONG_DBL -DWANT_PRINTF_LONG_LONG -D_COMPILING_NEWLIB -DHAVE_FCNTL -DMALLOC_PROVIDED"
@


1.51
log
@Commit iq2000 port
@
text
@d522 3
a524 3
        syscall_dir=syscalls
        newlib_cflags="${newlib_cflags} -DWANT_PRINTF_LONG_LONG"
        ;;
@


1.50
log
@
2003-05-30  Kelley Cook  <kelleycook@@wideopenwest.com>

        * configure.host:  Allow i[34567]86 variant.
        * configure.in: Likewise.
        * README: Likewise to the docs.
        * configure: Regenerated.
        * Makefile.in: Ditto.
@
text
@d134 3
d521 4
@


1.49
log
@	* configure.host: Accomodate removing the libc/sys/cygwin dir.
	* libc/locale/ldpart.c (__part_load_locale): Use 64 bit stat call
	if __CYGWIN_USE_BIG_TYPES__ is set.
	* libc/search/hash.c (__hash_open): Ditto.
	(init_hash): Ditto.
	* libc/stdio/fseek.c (fseek): Ditto.
	* libc/stdio/makebuf.c (__smakebuf): Ditto.
	* libc/stdio/mktemp.c (_gettemp): Ditto.
	* libc/sys/cygwin/Makefile.am: Remove.
	* libc/sys/cygwin/Makefile.in: Remove.
	* libc/sys/cygwin/aclocal.m4: Remove.
	* libc/sys/cygwin/configure: Remove.
	* libc/sys/cygwin/configure.in: Remove.
	* libc/sys/cygwin/crt0.c: Move to winsup/cygwin directory.
	* libc/sys/cygwin/sys/dirent.h: Move to winsup/cygwin/include/sys
	directory.
	* libc/sys/cygwin/sys/param.h: Ditto.
	* libc/sys/cygwin/sys/utime.h: Ditto.
	* libc/sys/cygwin/sys/utmp.h: Ditto.
@
text
@d118 1
a118 1
  i[3456]86)
d245 1
a245 1
  	  i[3456]86-pc-linux-*|*-*-cygwin*)
d272 1
a272 1
  i[3456]86-pc-linux-*)
d337 1
a337 1
  i[3456]86-*-sco*)
d341 1
a341 1
  i[3456]86-pc-linux-*)
d512 1
a512 1
  i[3456]86-*-sco*)
d515 1
a515 1
  i[3456]86-*-netware*)
@


1.48
log
@
2003-03-18  D.Venkatasubramanian  <dvenkat@@noida.hcltech.com>

        * libc/include/sys/h8300hms/crt0.S[__SIMULATOR__]: Add commandline
        support.
        * configure.host (h8300*-*-*): Added comment regarding -D__SIMULATOR__
        flag to support simulator only extensions.
@
text
@a288 1
	sys_dir=cygwin
a376 1
	sys_dir=cygwin
@


1.47
log
@	* configure.host: Define stdio64_dir for Cygwin.
	* libc/include/stdio.h: Change definition of fpos_t to fulfill
	Cygwin 64bit file access requirements.
	Drop definition of f*64() functions when compiled for Cygwin.
	* libc/include/sys/config.h: Define __LARGE64_FILES for Cygwin.
	* libc/reent/lseek64r.c: Use _off64_t instead of off64_t.
	* libc/stdio64/local64.h: Use _fpos64_t instead of fpos64_t.
@
text
@d506 3
@


1.46
log
@Add support for Cirrus Maverick ARM co-processor
@
text
@d291 1
@


1.45
log
@
2003-02-07  Jeff Johnston  <jjohnstn@@redhat.com>

        * acinclude.m4 (--disable-newlib-supplied-syscalls): New configuration
        option to allow disabling of syscalls being supplied in newlib.
        * aclocal.m4: Regenerated.
        * configure: Ditto.
        * configure.host: Add support of new configuration option and add
        -D__NO_SYSCALLS__ if newlib supplied syscalls are disabled.
        * doc/aclocal.m4: Regenerated.
        * doc/configure: Ditto.
        * libc/*aclocal.m4: Ditto.
        * libc/*configure: Ditto.
        * libm/*aclocal.m4: Ditto.
        * libm/*configure: Ditto.
        * libc/sys/arm/Makefile.am: Don't build syscalls.o if new option
        is disabled.
        * libc/sys/arm/Makefile.in: Regenerated.
@
text
@a90 1

d97 3
d103 3
a211 3
  frv)
	machine_dir=frv
        ;;
d316 3
d489 5
d498 4
a618 4
  frv-*-*)
        syscall_dir=syscalls
	newlib_cflags="${newlib_cflags} -DWANT_PRINTF_LONG_LONG"
        ;;
@


1.44
log
@	* configure.host (mips64vr-elf, mips64vrel-elf): New config.
@
text
@d232 6
@


1.43
log
@
2003-01-07  Jeff Johnston  <jjohnstn@@redhat.com>

        * configure.host: Support long double I/O for x86-linux.
        * libc/stdlib/ldtoa.c (_ldtoa_r): Fix code to allocate a buffer
        large enough to hold formatted result.
        * libc/machine/powerpc/simdldtoa.c (_simdldtoa_r): Ditto.
@
text
@d511 3
@


1.42
log
@
2002-12-19  Jeff Johnston  <jjohnstn@@redhat.com>

        * configure.host: Remove references to go32.
        * libc/sys/go32/*: Removed.
@
text
@d341 1
a341 1
	newlib_cflags="${newlib_cflags} -DWANT_IO_POS_ARGS"
@


1.41
log
@
2002-09-20  Jeff Johnston  <jjohnstn@@redhat.com>

        * configure.host: Minor comment and formatting changes.
        * libc/Makefile.am: Add libc_la_DEPENDENCIES.
        * libc/Makefile.in: Regenerated.
        * libc/include/sys/config.h: Minor format change.
@
text
@d116 1
a116 1
	*-*-go32 | *-*-sco* | *-*-cygwin*) 
a325 3
  i[3456]86-*-go32)
	sys_dir=go32
	;;
a494 3
	;;
  i[3456]86-*-go32)
	newlib_cflags="${newlib_cflags} -DMISSING_SYSCALL_NAMES -DNO_EXEC -DHAVE_FCNTL"
@


1.40
log
@
2002-09-11  Jeff Johnston  <jjohnstn@@redhat.com>

        * acinclude.m4 (enable-newlib-mb): Change check to
        default newlib_mb variable to empty string rather than "no".
        * configure.host: Remove hard-coding of -DMB_CAPABLE for
        x86-linux and Cygwin.  Add code to check for newlib_mb
        being unset in which case set to "yes" for x86-linux and
        Cygwin.  Change check for newlib_mb being "yes" to allow
        for an empty string.
        * configure.in (_MB_LEN_MAX): New AC_DEFINE.
        * newlib.hin (_MB_LEN_MAX): New define to configure.
        * aclocal.m4: Regenerated.
        * configure: Ditto.
        * libc/include/limits.h: New file.
        * libc/sys/linux/include/limits.h: Ditto.
        * doc/aclocal.m4 doc/configure libc/aclocal.m4
          libc/configure libc/machine/aclocal.m4
          libc/machine/configure libc/machine/a29k/aclocal.m4
          libc/machine/a29k/configure libc/machine/arm/aclocal.m4
          libc/machine/arm/configure libc/machine/d10v/aclocal.m4
          libc/machine/d10v/configure libc/machine/d30v/aclocal.m4
          libc/machine/d30v/configure libc/machine/fr30/aclocal.m4
          libc/machine/fr30/configure libc/machine/frv/aclocal.m4
          libc/machine/frv/configure libc/machine/h8300/aclocal.m4
          libc/machine/h8300/configure libc/machine/h8500/aclocal.m4
          libc/machine/h8500/configure libc/machine/hppa/aclocal.m4
          libc/machine/hppa/configure libc/machine/i386/aclocal.m4
          libc/machine/i386/configure libc/machine/i960/aclocal.m4
          libc/machine/i960/configure libc/machine/m32r/aclocal.m4
          libc/machine/m32r/configure libc/machine/m68hc11/aclocal.m4
          libc/machine/m68hc11/configure libc/machine/m68k/aclocal.m4
          libc/machine/m68k/configure libc/machine/m88k/aclocal.m4
          libc/machine/m88k/configure libc/machine/mips/aclocal.m4
          libc/machine/mips/configure libc/machine/mn10200/aclocal.m4
          libc/machine/mn10200/configure libc/machine/mn10300/aclocal.m4
          libc/machine/mn10300/configure libc/machine/necv70/aclocal.m4
          libc/machine/necv70/configure libc/machine/powerpc/aclocal.m4
          libc/machine/powerpc/configure libc/machine/sh/aclocal.m4
          libc/machine/sh/configure libc/machine/sparc/aclocal.m4
          libc/machine/sparc/configure libc/machine/tic80/aclocal.m4
          libc/machine/tic80/configure libc/machine/v850/aclocal.m4
          libc/machine/v850/configure libc/machine/w65/aclocal.m4
          libc/machine/w65/configure libc/machine/xscale/aclocal.m4
          libc/machine/xscale/configure
          libc/machine/xstormy16/aclocal.m4
          libc/machine/xstormy16/configure libc/machine/z8k/aclocal.m4
          libc/machine/z8k/configure libc/sys/aclocal.m4
          libc/sys/configure libc/sys/a29khif/aclocal.m4
          libc/sys/a29khif/configure libc/sys/arc/aclocal.m4
          libc/sys/arc/configure libc/sys/arm/aclocal.m4
          libc/sys/arm/configure libc/sys/cygwin/aclocal.m4
          libc/sys/cygwin/configure libc/sys/d10v/aclocal.m4
          libc/sys/d10v/configure libc/sys/decstation/aclocal.m4
          libc/sys/decstation/configure libc/sys/go32/aclocal.m4
          libc/sys/go32/configure libc/sys/h8300hms/aclocal.m4
          libc/sys/h8300hms/configure libc/sys/h8500hms/aclocal.m4
          libc/sys/h8500hms/configure libc/sys/idt/aclocal.m4
          libc/sys/idt/configure libc/sys/linux/aclocal.m4
          libc/sys/linux/configure libc/sys/linux/machine/aclocal.m4
          libc/sys/linux/machine/configure
          libc/sys/linux/machine/i386/aclocal.m4
          libc/sys/linux/machine/i386/configure
          libc/sys/m88kbug/aclocal.m4 libc/sys/m88kbug/configure
          libc/sys/mmixware/aclocal.m4 libc/sys/mmixware/configure
          libc/sys/netware/aclocal.m4 libc/sys/netware/configure
          libc/sys/rtems/aclocal.m4 libc/sys/rtems/configure
          libc/sys/sh/aclocal.m4 libc/sys/sh/configure
          libc/sys/sparc64/aclocal.m4 libc/sys/sparc64/configure
          libc/sys/sun4/aclocal.m4 libc/sys/sun4/configure
          libc/sys/sysmec/aclocal.m4 libc/sys/sysmec/configure
          libc/sys/sysnec810/aclocal.m4 libc/sys/sysnec810/configure
          libc/sys/sysnecv850/aclocal.m4 libc/sys/sysnecv850/configure
          libc/sys/sysvi386/aclocal.m4 libc/sys/sysvi386/configure
          libc/sys/sysvnecv70/aclocal.m4 libc/sys/sysvnecv70/configure
          libc/sys/tic80/aclocal.m4 libc/sys/tic80/configure
          libc/sys/w65/aclocal.m4 libc/sys/w65/configure
          libc/sys/z8ksim/aclocal.m4 libc/sys/z8ksim/configure
          libm/aclocal.m4 libm/configure: Regenerated.
@
text
@d25 2
d237 1
a237 1
	  i[3456]86-pc-linux-*|*-*-cygwin*)
d239 1
a239 1
		;;
@


1.39
log
@
2002-08-27  Egor Duda  <deo@@logos-m.ru>

        * libc/stdlib/wmemchr.c: New file.
        * libc/stdlib/wmemcmp.c: Ditto.
        * libc/stdlib/wmemcpy.c: Ditto.
        * libc/stdlib/wmemmove.c: Ditto.
        * libc/stdlib/wmemset.c: Ditto.
        * libc/stdlib/Makefile.am (GENERAL_SOURCES): Add new files.
        * configure.host: Default -DMB_CAPABLE for cygwin.
        * libc/include/wchar.h: Declare wmemchr(), wmemcmp(), wmemcpy(),
        wmemmove() and wmemset().  Add include of <_ansi.h>.
        * libc/stdlib/Makefile.in: Regenerate.
@
text
@d230 2
a231 1
# Enable multibyte support if requested.
d233 9
a241 1
if [ "${newlib_mb}" = "yes" ] ; then
d342 1
a342 1
	newlib_cflags="${newlib_cflags} -DWANT_IO_POS_ARGS -DMB_CAPABLE"
d425 1
a425 1
	newlib_cflags="${newlib_cflags} -DHAVE_OPENDIR -DHAVE_RENAME -DSIGNAL_PROVIDED -DWANT_IO_LONG_DBL -DWANT_PRINTF_LONG_LONG -D_COMPILING_NEWLIB -DHAVE_FCNTL -DMALLOC_PROVIDED -DMB_CAPABLE"
@


1.38
log
@
2002-08-27  Jeff Johnston  <jjohnstn@@redhat.com>

        * configure.host: Remove _ELIX_LEVEL flag setting.
        * Makefile.am(stmp-targ-include): Copy newlib.h to targ-include.
        (install-data-local): Install newlib.h.
        * Makefile.in: Regenerated.
        * aclocal.m4: Ditto.
        * configure: Ditto.
        * configure.in: Add AM_CONFIG_HEADER to generate newlib.h based on
        newlib.hin.  Add AC_DEFINE_UNQUOTED entries for _ELIX_LEVEL
        and _NEWLIB_VERSION to fill in newlib.h header file entries.
        In AC_OUTPUT statement, unset ac_file so multilib support does
        not use last ac_file temporary used in newlib.h configuration.
        * libc/include/_ansi.h: Include <newlib.h>.
        * newlib.hin: New template file for newlib.h.
        * stamp-h.in: New file.
@
text
@d416 1
a416 1
	newlib_cflags="${newlib_cflags} -DHAVE_OPENDIR -DHAVE_RENAME -DSIGNAL_PROVIDED -DWANT_IO_LONG_DBL -DWANT_PRINTF_LONG_LONG -D_COMPILING_NEWLIB -DHAVE_FCNTL -DMALLOC_PROVIDED"
@


1.37
log
@
2002-08-26  Jeff Johnston  <jjohnstn@@redhat.com>

        * Makefile.am(LIBC_OBJECTLISTS): Add STDIO64_OBJECTLIST.
        * Makefile.in: Regenerated.
        * acinclude.m4: Add support for --enable-newlib-elix-level option.
        * aclocal.m4: Regenerated.
        * configure: Ditto.
        * configure.host: Add code to define _ELIX_LEVEL if
        --enable-newlib-elix-level option is used.
        * configure.in:
        * libc/aclocal.m4: Regenerated.
        * libc/configure: Ditto.
        * libc/argz/Makefile.am: Add EL/IX level checking.
        * libc/argz/Makefile.in: Regenerated.
        * libc/argz/dummy.c: New file.
        * libc/ctype/Makefile.am: Add EL/IX level checking.
        * libc/ctype/Makefile.in: Regenerated.
        * libc/locale/Makefile.am: Add EL/IX level checking.
        * libc/locale/Makefile.in: Regenerated.
        * libc/posix/Makefile.am: Add EL/IX level checking.
        * libc/posix/Makefile.in: Regenerated.
        * libc/posix/telldir.c: Add EL/IX level checking.
        * libc/reent/Makefile.am: Ditto.
        * libc/reent/fstat64r.c: Ditto.
        * libc/reent/lseek64r.c: Ditto.
        * libc/reent/open64r.c: Ditto.
        * libc/reent/Makefile.in: Regenerated.
        * libc/search/Makefile.am: Add EL/IX level checking.
        * libc/search/Makefile.in: Regenerated.
        * libc/stdio/Makefile.am: Add EL/IX level checking.
        * libc/stdio/Makefile.in: Regenerated.
        * libc/stdio64/Makefile.am: Add EL/IX level checking.
        * libc/stdio64/Makefile.in: Regenerated.
        * libc/stdio64/dummy.c: New file.
        * libc/stdio64/fgetpos64.c: Fix so _LARGEFILE_64 macro is checked
        after first include.
        * libc/stdio64/fopen64.c: Ditto.
        * libc/stdio64/freopen64.c: Ditto.
        * libc/stdio64/fseeko64.c: Ditto.
        * libc/stdio64/fsetpos64.c: Ditto.
        * libc/stdio64/ftello64.c: Ditto.
        * libc/stdio64/tmpfile64.c: Ditto.
        * libc/stdlib/Makefile.am: Add EL/IX level checking.
        * libc/stdlib/Makefile.in: Regenerated.
        * libc/stdlib/mstats.c: Add EL/IX level checking.
        * libc/string/Makefile.am: Ditto.
        * libc/string/Makefile.in: Regenerated.
        * libc/sys/linux/Makefile.am: Add EL/IX level checking.
        * libc/sys/linux/Makefile.in: Regenerated.
        * libc/sys/linux/aclocal.m4: Ditto.
        * libc/sys/linux/configure: Ditto.
        * libc/sys/linux/aio.c: Add EL/IX level checking.
        * libc/sys/linux/ftok.c: Ditto.
        * libc/sys/linux/getdate.c: Ditto.
        * libc/sys/linux/ids.c: Ditto.
        * libc/sys/linux/inode.c: Ditto.
        * libc/sys/linux/io.c: Ditto.
        * libc/sys/linux/process.c: Ditto.
        * libc/sys/linux/resource.c: Ditto.
        * libc/sys/linux/sched.c: Ditto.
        * libc/sys/linux/sig.c: Ditto.
        * libc/sys/linux/termios.c: Ditto.
        * libc/sys/linux/wait.c: Ditto plus add __waitpid and
        __libc___waitpid weak aliases.
        * libc/sys/linux/machine/i386/syscall.h: Add new _base macros
        that generate the code for a syscall, but do not create a
        weak alias.
        * libc/syscalls/Makefile.am: Add EL/IX level checking.
        * libc/syscalls/Makefile.in: Regenerated.
        * libc/time/tzset_r.c: Change to replace strdup with equivalent
        functionality.
        * libc/unix/Makefile.am: Add EL/IX level checking.
        * libc/unix/Makefile.in: Regenerated.
@
text
@a247 6
# Specify EL/IX level

if [ "${newlib_elix_level}" != "0" ] ; then
	newlib_cflags="${newlib_cflags} -D_ELIX_LEVEL=${newlib_elix_level}"
fi

@


1.36
log
@* libc/include/malloc.h: On cygwin, define malloc _r functions as wrapper
macros to standard malloc functions.
* libc/include/stdlib.h: Ditto.
* configure.host: Always define MALLOC_PROVIDED on cygwin.
@
text
@d248 6
@


1.35
log
@	* libc/include/langinfo.h: New file.
	* libc/include/wchar.h: Likewise.
	* libc/include/sys/syslimits.h: Likewise.
	* libc/locale/fix_grouping.c: Likewise.
	* libc/locale/ldpart.c: Likewise.
	* libc/locale/ldpart.h: Likewise.
	* libc/locale/lmessages.c: Likewise.
	* libc/locale/lmessages.h: Likewise.
	* libc/locale/lmonetary.c: Likewise.
	* libc/locale/lmonetary.h: Likewise.
	* libc/locale/lnumeric.c: Likewise.
	* libc/locale/lnumeric.h: Likewise.
	* libc/locale/nl_langinfo.3: Likewise.
	* libc/locale/nl_langinfo.c: Likewise.
	* libc/locale/timelocal.c: Likewise.
	* libc/locale/timelocal.h: Likewise.
	* libc/stdlib/btowc.c: Likewise.
	* libc/stdlib/mbrlen.c: Likewise.
	* libc/stdlib/mbrtowc.c: Likewise.
	* libc/stdlib/mbsinit.c: Likewise.
	* libc/stdlib/mbsrtowcs.c: Likewise.
	* libc/stdlib/wcrtomb.c: Likewise.
	* libc/stdlib/wcsrtombs.c: Likewise.
	* libc/stdlib/wctob.c: Likewise.
	* libc/sys/linux/prof-freq.c: Likewise.
	* libc/sys/linux/profile.c: Likewise.
	* libc/sys/linux/machine/i386/dl-procinfo.c: Likewise.
	* libc/sys/linux/machine/i386/dl-procinfo.h: Likewise.
	* libc/include/stdlib.h: Change re-entrant functions to take
	mbstate_t pointers.
	* libc/include/sys/_types.h: Define _mbstate_t.
	* libc/include/sys/config.h (MB_LEN_MAX): New macro.
	* libc/include/sys/errno.h (EILSEQ): New error code.
	* libc/include/sys/reent.h: Include wchar.h.  Change reentrant
	structure to use mbstate_t.
	* libc/locale/Makefile.am (LIB_SOURCES): Add new files.
	* libc/machine/powerpc/vfprintf.c: Use mbstate_t.
	* libc/machine/powerpc/vfscanf.c: Likewise.
	* libc/stdio/getdelim.c: Reallocate buffer only when necessary.
	* libc/stdio/vfprintf.c: Likewise.
	* libc/stdio/vfscanf.c: Likewise.
	* libc/stdlib/Makefile.am (LIB_SOURCES): Add new files.
	* libc/stdlib/mblen.c: Use mbstate_t.
	* libc/stdlib/mblen_r.c: Likewise.
	* libc/stdlib/mbstowcs.c: Likewise.
	* libc/stdlib/mbstowcs_r.c: Likewise.
	* libc/stdlib/mbtowc.c: Likewise.
	* libc/stdlib/mbtowc_r.c: Likewise.
	* libc/stdlib/wcstombs.c: Likewise.
	* libc/stdlib/wcstombs_r.c: Likewise.
	* libc/stdlib/wctomb_r.c: Likewise.
	* libc/sys/linux/Makefile.am (LIB_SOURCES): Add prof-freq.c and
	profile.c.
	* libc/sys/linux/machine/i386/Makefile.am (LIB_SOURCES): Add
	dl-procinfo.c.
	* libc/sys/linux/sys/errno.h (EILSEQ): New error code.
	* libc/sys/linux/sys/types.h (off_t): Define type.
	* testsuite/newlib.locale/UTF-8.c: Change locale name from UTF-8
	to C-UTF-8.
	* testsuite/newlib.locale/UTF-8.exp: Likewise.
@
text
@d416 1
a416 5
	newlib_cflags="${newlib_cflags} -DHAVE_OPENDIR -DHAVE_RENAME -DSIGNAL_PROVIDED -DWANT_IO_LONG_DBL -DWANT_PRINTF_LONG_LONG -D_COMPILING_NEWLIB -DHAVE_FCNTL"
# CYGWIN provides its own malloc if --enable-malloc-debugging is set
	if [ "x${malloc_debugging}" = "xyes" ] ; then
	  newlib_cflags="${newlib_cflags} -DMALLOC_PROVIDED"
	fi
@


1.34
log
@
2002-08-17  Jeff Johnston  <jjohnstn@@redhat.com>

        * configure.host: Add powerpc*-*-eabispe* configuration.
        * libc/machine/powerpc/atosfix16.c: New fixed-point conversion file.
        * libc/machine/powerpc/atosfix32.c: Ditto.
        * libc/machine/powerpc/atosfix64.c: Ditto.
        * libc/machine/powerpc/atoufix16.c: Ditto.
        * libc/machine/powerpc/atoufix32.c: Ditto.
        * libc/machine/powerpc/atoufix64.c: Ditto.
        * libc/machine/powerpc/fix64.h: Ditto.
        * libc/machine/powerpc/simdldtoa.c: Ditto.
        * libc/machine/powerpc/strtosfix16.c: Ditto.
        * libc/machine/powerpc/strtosfix32.c: Ditto.
        * libc/machine/powerpc/strtosfix64.c: Ditto.
        * libc/machine/powerpc/strtoufix16.c: Ditto.
        * libc/machine/powerpc/strtoufix32.c: Ditto.
        * libc/machine/powerpc/strtoufix64.c: Ditto.
        * libc/machine/powerpc/ufix64toa.c: Ditto.
        * libc/machine/powerpc/configure.in: Add check for
        powerpc*-eabispe and add fixed-point conversion functions.
        * libc/machine/powerpc/configure: Regenerated.
        * libc/machine/powerpc/vfprintf.c[__SPE__]: Add support for
        %r and %R format specifiers which handle fixed-point data.
        * libc/machine/powerpc/vfscanf.c[__SPE__]: Ditto.
        * libc/machine/powerpc/machine/stdlib.h[__SPE__]: Add fixed-point
        function prototypes.
@
text
@d245 1
a245 1
        newlib_cflags="${newlib_cflags} -DWANT_IO_POS_ARGS"
d341 1
d504 2
a505 2
        newlib_cflags="${newlib_cflags} -DNO_EXEC -DABORT_PROVIDED -DSMALL_MEMORY -DMISSING_SYSCALL_NAMES"
        ;;
@


1.33
log
@
2002-08-17  Jeff Johnston  <jjohnstn@@redhat.com>

        *  Makefile.am: Move cmath stuff into libc/sys/linux.
        *  Makefile.in: Regenerated.
        *  configure.host: Default -DMB_CAPABLE for x86-linux.
        *  libc/include/reent.h: Define _sbrk to take signed int argument.
        *  libc/include/sys/unistd.h: Ditto for _sbrk_r and sbrk.
        *  libc/locale/locale.c[MB_CAPABLE]: Add LC_MESSAGES support and
        make locale name checking more efficient.  Also allow "C-ISO-8859-1"
        locale for LC_CTYPE and LC_MESSAGES.
        *  libc/reent/sbrkr.c: Change prototype to take ptrdiff_t.
        *  libc/sys/linux/brk.c: Change sbrk prototype.
        *  libc/sys/linux/include/time.h: Remove Cygwin stuff and
        include <sys/features.h>.
        (CLOCK_THREAD_CPUTIME): Renamed to CLOCK_THREAD_CPUTIME_ID.
        (CLOCK_PROCESS_CPUTIME): Renamed to CLOCK_PROCESS_CPUTIME_ID.
        *  libc/sys/linux/sys/cdefs.h: Replace with glibc sys/cdefs.h
        with a few local additions.
        *  libc/sys/linux/sys/features.h: New file.
        *  libc/sys/linux/sys/unistd.h: Change _sbrk_r and sbrk prototypes
        to take signed argument.
        *  libc/syscalls/syssbrk.c: Change sbrk, _sbrk_r, and _sbrk
        prototypes to take signed size argument.
@
text
@d521 3
@


1.32
log
@
2002-08-09  Jeff Johnston  <jjohnstn@@redhat.com>

        * configure.host: Add check for --enable-newlib-io-pos-args
        and define WANT_IO_POS_ARGS flag if enabled.  Define
        the flag by default for x86-linux configurations.
        * configure.in: Add support for --enable-newlib-io-pos-args.
        * libc/configure.in: Ditto.
        * configure: Regenerated.
        * libc/configure: Ditto.
        * libc/stdio/Makefile.am: Specify -fshort-enums for compiling
        vfprintf.c and vfiprintf.c.
        * libc/stdio/Makefile.in: Regenerated.
        * libc/stdio/vfprintf.c: Add positional argument support that
        is enabled by compiling with -DWANT_IO_POS_ARGS.
@
text
@d333 1
a333 1
	newlib_cflags="${newlib_cflags} -DWANT_IO_POS_ARGS"
@


1.31
log
@
2002-07-24  Stephane Carrez  <stcarrez@@nerim.fr>

        * configure.host: Recognize m6811-elf and m6812-elf targets.
        * libc/include/machine/setjmp.h (_JBLEN): Define for 68hc11/68hc12.
        * libc/include/machine/ieeefp.h (__IEEE_BIG_ENDIAN): Define for 68HC11.
        (_DOUBLE_IS_32BITS): Define when compiling with -fshort-double.
        * libc/include/sys/config.h (INT_MAX, UINT_MAX): Define
        according to __INT_MAX__.
        (_POINTER_INT): Define to short.
        * libc/machine/m68hc11/Makefile.am: New file.
        * libc/machine/m68hc11/Makefile.in: New file.
        * libc/machine/m68hc11/configure.in: New file.
        * libc/machine/m68hc11/configure: New file.
        * libc/machine/m68hc11/aclocal.m4: New file.
        * libc/machine/m68hc11/setjmp.S: New file.
@
text
@d242 6
d333 1
@


1.30
log
@	* libc/argz/argz_replace.c: Include buf_findstr.h.
	* libc/argz/buf_findstr.c: Likewise.
	* libc/argz/envz_entry.c: Include buf_findstr.h.  Cast return
	value to (char *).
	* libc/argz/envz_get.c: Likewise.
	* libc/include/sys/unistd.h: Add getopt and getsubopt declarations.
	* libc/stdlib/Makefile.am (LIB_SOURCES): Add getsubopt.c.
	* libc/stdlib/getsubopt.3: New file.
	* libc/stdlib/getsubopt.c: New file.
	* libc/sys/linux/machine/i386/socketcall.h (__sockcall_base):
	Change esp to ebp.
@
text
@d130 7
d334 3
d495 3
@


1.29
log
@
2002-07-17  Jeff Johnston  <jjohnstn@@redhat.com>

        * configure.host(stdio64_dir): New setting that is used to
        enable building of new stdio64 directory.
        * libc/Makefile.am[HAVE_STDIO64_DIR]: Add support for
        large files.
        (stmp-stdio64,stdio64.texi): New targets to optionally add in
        stdio64 info to info files.
        * libc/Makefile.in: Regenerated.
        * libc/configure: Ditto.
        * libc/configure.in: Add configuration variables that are set
        when stdio64 is selected as subdir in configure.host.
        * libc/libc.texinfo: Add optional menu item for Stdio64, based
        on whether STDIO64 flag is set or not.
        * libc/sys.tex: Add optional stdio64 syscalls based on whether
        STDIO64 flag is set or not.
        * libc/include/reent.h[__LARGE64_FILES]: Add new stdio64
        _r sycall routines.
        * libc/include/stdio.h[__LARGE64_FILES]: Add new stdio64 prototypes.
        (FILE): Typedef'd to __FILE instead of struct __sFILE directly.
        (__SL64): New file flag indicating file is opened via fopen64.
        * libc/include/sys/_types.h(_off64_t): Added.
        * libc/include/sys/config.h: For x86-linux, define __LARGE64_FILES.
        * libc/include/sys/reent.h(struct __sFILE64): New file structure
        for 64-bit offset large file support.
        (__FILE): New intermediate type either set to struct __sFILE64 or
        struct __sFILE, depending on whether __LARGE64_FILES is set or not.
        * libc/reent/Makefile.am[HAVE_STDIO64_DIR]: Add new files.
        * libc/reent/Makefile.in: Regenerated.
        * libc/reent/fstat64r.c: New file.
        * libc/reent/lseek64r.c: Ditto.
        * libc/reent/open64r.c: Ditto.
        * libc/reent/reent.tex: Optionally add stdio64 reentrant syscalls
        based on whether STDIO64 flag is set.
        * libc/stdio/stdio.tex: Add blank line.
        * libc/stdio64/Makefile.am: New file.
        * libc/stdio64/Makefile.in: Ditto.
        * libc/stdio64/fgetpos64.c: Ditto.
        * libc/stdio64/fopen64.: Ditto.
        * libc/stdio64/freopen64.c: Ditto.
        * libc/stdio64/fseeko64.c: Ditto.
        * libc/stdio64/fsetpos64.c: Ditto.
        * libc/stdio64/ftello64.c: Ditto.
        * libc/stdio64/local64.h: Ditto.
        * libc/stdio64/stdio64.c: Ditto.
        * libc/stdio64/stdio64.tex: Ditto.
        * libc/stdio64/tmpfile64.c: Ditto.
        * libc/sys/linux/io64.c: Add weak aliases for lseek64, fstat64, and
        open64.
@
text
@d33 1
a33 1
#   stdio64_dir         "stdio64" to build libc/stdio64, "" otherwise
@


1.28
log
@2002-06-18  Dave Brolley  <brolley@@redhat.com>

	From Catherine Moore, Michael Meissner, Richard Sandiford:
	* libc/include/machine/setjmp.h (_JBLEN): Define for __frv__.
	(_JBTYPE): Ditto.
	* libc/include/sys/config.h (__IEEE_BIG_ENDIAN): Ditto.
	(__ATTRIBUTE_IMPURE_PTR__): Ditto.
	* libc/include/machine/ieeefp.h (__IEEE_BIG_ENDIAN): Ditto.
	* configure.host: Support frv-*-*.
	* libc/machine/frv/Makefile.am: New file.
	* libc/machine/frv/configure.in: New file.
	* libc/machine/frv/setjmp.S: New file.
@
text
@d33 1
d48 1
d243 1
@


1.27
log
@2002-05-21 Dhananjay Deshpande <dhananjayd@@kpit.com>

	* configure.host: Specify sys_dir=h8300hms for h8300-*-coff* target.
@
text
@d196 3
d378 3
d568 4
@


1.26
log
@	* acinclude.m4: Add support for --enable-newlib-multithread.
	* configure.host (newlib_cflags): Add -D__SINGLE_THREAD__ if
	--enable-newlib-multithread=no.
@
text
@d284 3
@


1.25
log
@	* Various formatting and whitespace changes.
@
text
@d212 6
@


1.24
log
@	* libc/sys/arm/syscalls.c (_rename): New function. Just a stub.
	(_system): New function. Ditto.
	* libc/stdlib/system.c (_system_r): Call _system if HAVE_SYSTEM.
	* configure.host: define HAVE_SYSTEM and HAVE_RENAME for xscale
	targets.
@
text
@d30 1
a30 1
#   have_sys_mach_dir   Is there a machine subdirectory in sys subdirectory
d489 1
a489 1
	newlib_cflags="${newlib_cflags} -mrelocatable-lib -mno-eabi -mstrict-align -DMISSING_SYSCALL_NAMES"
d558 3
a560 3
        newlib_cflags="${newlib_cflags} -DHAVE_GETTIMEOFDAY"
        syscall_dir=syscalls
        ;;
@


1.23
log
@
2002-04-19  Jeff Johnston  <jjohnstn@@redhat.com>

        *  configure.host: Add support for powerpc-eabialtivec*.
        *  libc/include/malloc.h: Add include of <machine/malloc.h>.
        *  libc/include/stdlib.h: Add include of <machine/stdlib.h>.
        *  libc/include/machine/malloc.h: New file.
        *  libc/include/machine/stdlib.h: Ditto.
        *  libc/include/machine/setjmp.h: Add support for powerpc altivec.
        *  libc/machine/powerpc/Makefile.am: Add conditional objects and
        sources based on configuration.
        *  libc/machine/powerpc/Makefile.in: Regenerated.
        *  libc/machine/powerpc/configure: Ditto.
        *  libc/machine/powerpc/configure.in: Add check for
        powerpc-eabialtivec* in which case add in additional source files.
        *  libc/machine/powerpc/setjmp.S: Add altivec support.
        *  libc/machine/powerpc/vec_calloc.c: New file.
        *  libc/machine/powerpc/vec_free.c: Ditto.
        *  libc/machine/powerpc/vec_malloc.c: Ditto.
        *  libc/machine/powerpc/vec_mallocr.c: Ditto.
        *  libc/machine/powerpc/vec_realloc.c: Ditto.
        *  libc/machine/powerpc/machine/malloc.h: Ditto.
        *  libc/machine/powerpc/machine/stdlib.h: Ditto.
        *  libc/machine/powerpc/vfprintf.c: New file that is vfprintf.c
        with added altivec format specifiers.
        *  libc/machine/powerpc/vfscanf.c: New file that is vfscanf.c with
        added altivec format specifiers.
@
text
@d522 1
@


1.22
log
@
2002-04-04  Jeff Johnston  <jjohnstn@@redhat.com>

        * Makefile.am: Add support for installing crt1.o if one exists.
        * configure.host: Specify crt1.o for linux.
        * configure.in: Expose CRT1 and CRT1_DIR for Makefile.am to use.
        * Makefile.in: Regenerated.
        * configure: Ditto.
        * libc/include/sys/unistd.h (_SC_STREAM_MAX, _SC_PRIORITY_SCHEDULING):
        Added for non-Cygwin, non-RTEMS configurations.
        * libc/sys/linux/Makefile.am: Add support for crt1 and sysconf.
        * libc/sys/linux/Makefile.in: Regenerated.
        * libc/sys/linux/crt1.c: New empty file to override one defaulted
        by gcc.  This fixes problem with reconfiguring linux newlib build.
        * libc/sys/linux/sysconf.c: New file.
@
text
@d480 3
@


1.21
log
@
2002-04-03  Jeff Johnston  <jjohnstn@@redhat.com>

	* configure.host: Add support for machine subdirectory of
	sys subdirectory.
	* configure.in: Add check for sys machine subdirectory.
	* Makefile.am: Ditto.
	* configure: Regenerated.
	* Makefile.in: Ditto.
	* libc/sys/linux/crt0.c: Moved to machine/i386 directory.
	* libc/sys/linux/sys/syscall.h: Ditto.
	* libc/sys/linux/sleep.c: New file.
	* libc/sys/linux/socket.c: Ditto.
	* libc/sys/linux/sockops.h: Ditto.
	* libc/sys/linux/stack.c: Ditto.
	* libc/sys/linux/usleep.c: Ditto.
	* libc/sys/linux/machine/Makefile.am: Ditto.
	* libc/sys/linux/machine/Makefile.in: Ditto.
	* libc/sys/linux/machine/aclocal.m4: Ditto.
	* libc/sys/linux/machine/configure: Ditto.
	* libc/sys/linux/machine/configure.in: Ditto.
	* libc/sys/linux/machine/i386/Makefile.am: Ditto.
	* libc/sys/linux/machine/i386/Makefile.in: Ditto.
	* libc/sys/linux/machine/i386/aclocal.m4: Ditto.
	* libc/sys/linux/machine/i386/configure: Ditto.
	* libc/sys/linux/machine/i386/configure.in: Ditto.
	* libc/sys/linux/machine/i386/crt0.c: Ditto.
	* libc/sys/linux/machine/i386/sigset.c: Ditto.
	* libc/sys/linux/machine/i386/sigstack.h: Ditto.
	* libc/sys/linux/machine/i386/socketcall.h: Ditto.
	* libc/sys/linux/machine/i386/syscall.h: Ditto.
	* libc/sys/linux/sys/select.h: Ditto.
	* libc/sys/linux/configure.in: Add support for machine directory.
	* libc/sys/linux/Makefile.am: Ditto plus add new files above.
	* libc/sys/linux/Makefile.in: Regenerated.
	* libc/sys/linux/configure: Ditto.
	* libc/sys/linux/brk.c: Use machine/syscall.h instead of sys/syscall.h.
	* libc/sys/linux/inode.c: Ditto.
	* libc/sys/linux/linux.c: Ditto.
	* libc/sys/linux/process.c: Ditto.
	* libc/sys/linux/systat.c: Ditto.
	* libc/sys/linux/time.c: Ditto.
	* libc/sys/linux/wait.c: Ditto.
	* libc/sys/linux/ids.c: Change header plus add setfsgid/setfsuid.
	* libc/sys/linux/io.c: Change header plus add readv/writev.
	* libc/sys/linux/signal.c: Change header plus change sigsuspend to
	use __sigsuspend syscall.
	* libc/sys/linux/select.c: Change header plus change select to
	use _newselect syscall.
	* libc/sys/linux/sys/cdefs.h: Add a number of standard definitions
	used by glibc header files.
	* libc/sys/linux/sys/types.h: Add __socklen_t and __useconds_t
	types.
@
text
@d38 2
d50 2
d298 2
@


1.20
log
@
2002-02-27  Jeff Johnston  <jjohnstn@@redhat.com>

        * configure.host: Add check for --disable-newlib-io-float
        configuration option and add -DNO_FLOATING_POINT to newlib cflags
        if appropriate.
        * acinclude.m4: Added --disable-newlib-io-float option.
        * aclocal.m4: Regenerated.
        * configure: Ditto.
        * doc/aclocal.m4 doc/configure libc/aclocal.m4 libc/configure
        * libc/*/aclocal.m4 libc/*/configure
        * libm/*/aclocal.m4 libm/*/configure: Ditto.
        * libc/stdio/vfprintf.c [!INTEGER_ONLY]: Only set FLOATING_POINT
        if NO_FLOATING_POINT flag is not defined.
@
text
@d30 1
d49 1
d227 1
@


1.19
log
@	* configure.host (newlib_cflags): When host is in m68* add
	-DCOMPACT_CTYPE.
@
text
@d212 6
@


1.18
log
@Contribute sh64-elf.
2001-03-13  Alexandre Oliva  <aoliva@@redhat.com>
* configure.host (newlib_cflags) [sh*-*-*]: Enable long long
support in printf.
2001-01-29  Alexandre Oliva  <aoliva@@redhat.com>
* libc/machine/sh/setjmp.S [SH5]: Switch to SHmedia mode before
any labels.
2001-01-24  Alexandre Oliva  <aoliva@@redhat.com>
* libc/sys/sh/trap.S (___trap34) [SH5]: Don't trash r2.
2000-12-16  Alexandre Oliva  <aoliva@@redhat.com>
* libc/machine/sh/configure.in: Rework conditionals.
* libc/machine/sh/Makefile.am: Likewise.
* libc/machine/sh/configure, libc/machine/sh/Makefile.in: Rebuilt.
2000-12-01  Alexandre Oliva  <aoliva@@redhat.com>
* configure.host: Match `sh*'.
* libc/include/machine/setjmp.h: Define for SH5.
* libc/machine/sh/configure.in: Detect SH5.
* libc/machine/sh/configure: Rebuilt.
* libc/machine/sh/Makefile.am: Use only setjmp.S for SH5.
* libc/machine/sh/Makefile.in: Rebuilt.
* libc/machine/sh/asm.h: Adjust for SH5.
* libc/machine/sh/setjmp.S: Implement in SHmedia.
* libc/sys/sh/crt0.S: Likewise.
* libc/sys/sh/trap.S: Likewise.
@
text
@d124 1
@


1.17
log
@In ld/ChangeLog:
	* scripttempl/xstormy16.sc: Don't allocate extra space for the
	stack.
In libgloss/ChangeLog:
	* xstormy16/Makefile.in (SIM_OBJS): Remove sbrk.o, add
	sim_malloc_start.o.
	* xstormy16/eva_app.ld: Add __malloc_start.
	* xstormy16/sbrk.c: Remove.
	* xstormy16/sim_malloc_start.s: New file.
	* xstormy16/sim_high.ld: Make the stack start immediately at the
	end of the program.
In newlib/ChangeLog:
	* configure.host (xstormy16): Don't use the generic malloc.
	* libc/machine/xstormy16/Makefile.am: Build tiny-malloc.
	* libc/machine/xstormy16/Makefile.in: Regenerate.
	* libc/machine/xstormy16/mallocr.c: New file.
	* libc/machine/xstormy16/tiny-malloc.c: New file.
@
text
@d153 1
a153 1
  sh)
d477 1
a477 1
	newlib_cflags="${newlib_cflags} -DHAVE_GETTIMEOFDAY"
@


1.16
log
@In newlib/:
2001-12-22  Geoffrey Keating  <geoffk@@redhat.com>
	    Catherine Moore  <clm@@redhat.com>
	    Richard Henderson  <rth@@redhat.com>
	    Corinna Vinschen  <vinschen@@redhat.com>

	* configure.host: Add support for xstormy16.
	* libc/include/machine/ieeefp.h: Add support for xstormy16.
	* libc/include/machine/setjmp.h: Add support for xstormy16.
	* libc/include/sys/config.h: Add support for xstormy16.
	* libc/machine/xstormy16/Makefile.am: New file.
	* libc/machine/xstormy16/Makefile.in: New file.
	* libc/machine/xstormy16/aclocal.m4: New file.
	* libc/machine/xstormy16/configure: New file.
	* libc/machine/xstormy16/configure.in: New file.
	* libc/machine/xstormy16/setjmp.S: New file.

In libgloss/:
2001-12-22  Geoffrey Keating  <geoffk@@redhat.com>
	    Mark Salter  <msalter@@redhat.com>
	    Catherine Moore  <clm@@redhat.com>
	    Richard Henderson  <rth@@redhat.com>

	* configure.in: Add xstormy16.
	* libnosys/configure.in: Add xstormy16.
	* configure: Regenerated.
	* libnosys/configure: Regenerated.
	* xstormy16/Makefile.in: New file.
	* xstormy16/close.c: New file.
	* xstormy16/configure: New file.
	* xstormy16/configure.in: New file.
	* xstormy16/crt0.s: New file.
	* xstormy16/crt0_stub.s: New file.
	* xstormy16/crti.s: New file.
	* xstormy16/crtn.s: New file.
	* xstormy16/eva_app.c: New file.
	* xstormy16/eva_app.ld: New file.
	* xstormy16/eva_stub.ld: New file.
	* xstormy16/fstat.c: New file.
	* xstormy16/getpid.c: New file.
	* xstormy16/kill.c: New file.
	* xstormy16/lseek.c: New file.
	* xstormy16/open.c: New file.
	* xstormy16/sbrk.c: New file.
	* xstormy16/sim_high.ld: New file.
	* xstormy16/stat.c: New file.
	* xstormy16/syscalls.S: New file.
	* xstormy16/syscalls.m4: New file.
	* xstormy16/unlink.c: New file.
	* xstormy16/xstormy16_stub.c: New file.
@
text
@d194 1
@


1.15
log
@	* Makefile.shared: New file.
	* libc/sys/linux/shared.ld: New file.
	* libm/machine/*: New files.
	* libm/machine/i386/*: New files.
	* Makefile.am: Add libtool support.  Change math and mathfp
	references to variables.
	* configure.host: Add variables for libtool support.  Add
	libm_machine_dir variable.
	* configure.in: Add objectlist variables, for libtool
	support.  Add CC_FOR_BUILD tests.
	* libc/Makefile.am: Add libtool support.  Change crt0.o
	reference to be a variable reference.
	* libc/configure.in: Add libtool support.  Change sublib
	names to be lib${subdir}.la when using libtool.
	* libc/ctype/Makefile.am: Add libtool support.
	* libc/errno/Makefile.am: Likewise.
	* libc/locale/Makefile.am: Likewise.
	* libc/machine/Makefile.am: Likewise.
	* libc/machine/configure.in: Likewise.
	* libc/machine/i386/Makefile.am: Likewise.
	* libc/machine/i386/configure.in: Likewise.
	* libc/misc/Makefile.am: Likewise.
	* libc/posix/Makefile.am: Likewise.
	* libc/reent/Makefile.am: Likewise.
	* libc/signal/Makefile.am: Likewise.
	* libc/stdio/Makefile.am: Likewise.
	* libc/stdlib/Makefile.am: Likewise.
	* libc/string/Makefile.am: Likewise.
	* libc/sys/Makefile.am: Likewise.
	* libc/sys/configure.in: Likewise.
	* libc/sys/linux/Makefile.am: Add libtool support.  Change
	awk reference to a variable reference.  Change signal.h
	reference to a variable reference.
	* libc/sys/linux/configure.in: Add libtool support.
	* libc/syscalls/Makefile.am: Likewise.
	* libc/time/Makefile.am: Likewise.
	* libc/unix/Makefile.am: Likewise.
	* libm/Makefile.am: Add libtool support.  Change math and
	mathfp references to variables.
	* libm/configure.in: Add libtool support.  Add
	LIBM_MACHINE_LIB variable.
	* libm/common/Makefile.am: Add libtool support.
	* libm/math/Makefile.am: Likewise.
	* libm/mathfp/Makefile.am: Likewise.
	Regenerate all Makefile.in, aclocal.m4, and configure.
@
text
@d192 3
d536 4
@


1.14
log
@
2001-11-12  Hans-Peter Nilsson  <hp@@bitrange.com>

        * libc/include/machine/ieeefp.h: Add support for mmix target.
        * libc/include/machine/setjmp.h: Ditto.
        * configure.host: Ditto.
        * libc/sys/mmixware/Makefile.am, libc/sys/mmixware/_exit.c,
        libc/sys/mmixware/access.c, libc/sys/mmixware/aclocal.m4,
        libc/sys/mmixware/chmod.c, libc/sys/mmixware/chown.c,
        libc/sys/mmixware/close.c, libc/sys/mmixware/configure.in,
        libc/sys/mmixware/creat.c, libc/sys/mmixware/crt0.c,
        libc/sys/mmixware/execv.c, libc/sys/mmixware/execve.c,
        libc/sys/mmixware/fork.c, libc/sys/mmixware/fstat.c,
        libc/sys/mmixware/getpid.c, libc/sys/mmixware/gettime.c,
        libc/sys/mmixware/isatty.c, libc/sys/mmixware/kill.c,
        libc/sys/mmixware/lseek.c, libc/sys/mmixware/open.c,
        libc/sys/mmixware/pipe.c, libc/sys/mmixware/read.c,
        libc/sys/mmixware/sbrk.c, libc/sys/mmixware/setjmp.S,
        libc/sys/mmixware/stat.c, libc/sys/mmixware/sys/syscall.h,
        libc/sys/mmixware/time.c, libc/sys/mmixware/times.c,
        libc/sys/mmixware/unlink.c, libc/sys/mmixware/utime.c,
        libc/sys/mmixware/wait.c, libc/sys/mmixware/write.c: New files.
        * libc/sys/mmixware/configure, libc/sys/mmixware/Makefile.in,
        libc/sys/mmixware/aclocal.m4: Generate.
@
text
@d34 3
d39 1
d47 3
d81 1
d107 1
d111 1
d207 12
a275 1

d285 1
a285 1
	# --- Required when building a shared library ------------------------ 
a291 1

@


1.13
log
@	* configure.host (h8300-*-elf*, h8500-*-elf*): New cases.
	* libc/sys/h8300hms/crt1.c (__main): Don't reference __ctors /
	__ctors_end.
	* libc/sys/h8300hms/syscalls.c: Include errno.h.
	(_unlink): New stub function.
@
text
@d128 2
d281 3
d430 6
@


1.12
log
@
2001-04-20  Jeff Johnston  <jjohnstn@@redhat.com>

        * acinclude.m4: Added --enable-malloc-debugging configure flag.
        * configure.host: For Cygwin specify -DMALLOC_PROVIDED if
        --enable-malloc-debugging selected.
        * aclocal.m4 configure: Regenerated.
          libm/aclocal.m4 libm/configure: Ditto.
        * libc/aclocal.m4 libc/configure: Ditto.
        * libc/machine/aclocal.m4 libc/machine/configure: Ditto.
        * libc/machine/*/aclocal.m4 libc/machine/*/configure: Ditto.
        * libc/sys/aclocal.m4 libc/sys/configure: Ditto.
        * libc/sys/*/aclocal.m4 libc/sys/*/configure: Ditto.
        * doc/aclocal.m4 doc/configure: Ditto.
@
text
@d233 3
d240 3
@


1.11
log
@
2001-02-21  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/stdio/fdopen.c (fdopen): Protect calls to _fcntl() with
        HAVE_FCNTL flag check.
        * configure.host: Define HAVE_FCNTL for Cygwin, go32, RTEMS, sparc64,
        powerpcle, x86 netware, x86 sco, x86 Linux and Vxworks.
@
text
@d330 4
@


1.10
log
@* configure.host (sh*-*-*): Add -DHAVE_GETTIMEOFDAY to newlib_cflags.
* libc/sys/sh/syscalls.c (_gettimeofday): New.
@
text
@d255 1
a255 1
	newlib_cflags="${newlib_cflags} -D_LOOSE_KERNEL_NAMES"
d329 1
a329 1
	newlib_cflags="${newlib_cflags} -DHAVE_OPENDIR -DHAVE_RENAME -DSIGNAL_PROVIDED -DWANT_IO_LONG_DBL -DWANT_PRINTF_LONG_LONG -D_COMPILING_NEWLIB"
d340 1
a340 1
	newlib_cflags="${newlib_cflags} -DHAVE_GETTIMEOFDAY -DMALLOC_PROVIDED -DEXIT_PROVIDED -DMISSING_SYSCALL_NAMES -DSIGNAL_PROVIDED -DREENTRANT_SYSCALLS_PROVIDED -DHAVE_OPENDIR -DNO_EXEC -DWANT_PRINTF_LONG_LONG"
d345 1
a345 1
	newlib_cflags="${newlib_cflags} -DMALLOC_PROVIDED -DMISSING_SYSCALL_NAMES"
d396 1
a396 1
	newlib_cflags="${newlib_cflags} -DSIGNAL_PROVIDED"
d399 1
a399 1
	newlib_cflags="${newlib_cflags} -DMISSING_SYSCALL_NAMES -DNO_EXEC -DABORT_PROVIDED -DCLOCK_PROVIDED -DMALLOC_PROVIDED"
d402 1
a402 1
	newlib_cflags="${newlib_cflags} -DMISSING_SYSCALL_NAMES -DNO_EXEC"
d428 1
a428 1
	newlib_cflags="${newlib_cflags} -DHAVE_OPENDIR -DHAVE_RENAME"
d439 1
a439 1
	newlib_cflags="${newlib_cflags} -DREENTRANT_SYSCALLS_PROVIDED -DHAVE_BLKSIZE -DHAVE_GETTIMEOFDAY"
@


1.9
log
@Remove unsupported v850 compiler options
@
text
@d432 1
@


1.8
log
@
Fri Jan  5 19:57:00 EST 2001  Aaron J. Grier  <aaron@@frye.com>

        * src/newlib/configure.host (*-*-rtems*): add printf long long
        support for RTEMS.
@
text
@d167 1
a167 1
	newlib_cflags="${newlib_cflags} -DPREFER_SIZE_OVER_SPEED -mv850 -mno-app-regs -msmall-sld"
d171 1
a171 1
	newlib_cflags="${newlib_cflags} -DPREFER_SIZE_OVER_SPEED -mv850 -mno-app-regs -msmall-sld"
d175 1
a175 1
	newlib_cflags="${newlib_cflags} -DPREFER_SIZE_OVER_SPEED -mv850 -mno-app-regs -msmall-sld"
@


1.7
log
@
Wed Dec 14  Jeff Johnston  <jjohnstn@@redhat.com>

        * configure.host: Turn on long double I/O for Cygwin.
@
text
@d340 1
a340 1
	newlib_cflags="${newlib_cflags} -DHAVE_GETTIMEOFDAY -DMALLOC_PROVIDED -DEXIT_PROVIDED -DMISSING_SYSCALL_NAMES -DSIGNAL_PROVIDED -DREENTRANT_SYSCALLS_PROVIDED -DHAVE_OPENDIR -DNO_EXEC"
@


1.6
log
@
2000-12-08  Werner Almesberger  <Werner.Almesberger@@epfl.ch>

        * configure.host: Added x86 linux target.
        * libc/unix/getpass.c (_PATH_PASSWD, _PASSWORD_LEN): Default
        definitions provided if not already defined.
        * libc/sys/linux/crt0.c: New file.
        * libc/sys/linux/Makefile.am: Ditto.
        * libc/sys/linux/Makefile.in: Ditto.
        * libc/sys/linux/aclocal.m4: Ditto.
        * libc/sys/linux/brk.c: Ditto.
        * libc/sys/linux/configure: Ditto.
        * libc/sys/linux/configure.in: Ditto.
        * libc/sys/linux/getoptlong.c: Ditto.
        * libc/sys/linux/ids.c: Ditto.
        * libc/sys/linux/inode.c: Ditto.
        * libc/sys/linux/io.c: Ditto.
        * libc/sys/linux/linux.c: Ditto.
        * libc/sys/linux/process.c: Ditto.
        * libc/sys/linux/realpath.c: Ditto.
        * libc/sys/linux/select.c: Ditto.
        * libc/sys/linux/signal.c: Ditto.
        * libc/sys/linux/systat.c: Ditto.
        * libc/sys/linux/termios.c: Ditto.
        * libc/sys/linux/time.c: Ditto.
        * libc/sys/linux/wait.c: Ditto.
        * libc/sys/linux/include/alloca.h: Ditto.
        * libc/sys/linux/include/getopt.h: Ditto.
        * libc/sys/linux/include/stdint.h: Ditto.
        * libc/sys/linux/include/unistd.h: Ditto.
        * libc/sys/linux/sys/cdefs.h: Ditto.
        * libc/sys/linux/sys/dirent.h: Ditto.
        * libc/sys/linux/sys/errno.h: Ditto.
        * libc/sys/linux/sys/fcntl.h: Ditto.
        * libc/sys/linux/sys/file.h: Ditto.
        * libc/sys/linux/sys/ioctl.h: Ditto.
        * libc/sys/linux/sys/resource.h: Ditto.
        * libc/sys/linux/sys/signal.h: Ditto.
        * libc/sys/linux/sys/stat.h: Ditto.
        * libc/sys/linux/sys/syscall.h: Ditto.
        * libc/sys/linux/sys/termios.h: Ditto.
        * libc/sys/linux/sys/time.h: Ditto.
        * libc/sys/linux/sys/types.h: Ditto.
        * libc/sys/linux/sys/utmp.h: Ditto.
        * libc/sys/linux/sys/utsname.h: Ditto.
        * libc/sys/linux/sys/wait.h: Ditto.
@
text
@d329 1
a329 1
	newlib_cflags="${newlib_cflags} -DHAVE_OPENDIR -DHAVE_RENAME -DSIGNAL_PROVIDED -DWANT_PRINTF_LONG_LONG -D_COMPILING_NEWLIB"
@


1.5
log
@
2000-12-04  Joel Sherrill <joel@@OARcorp.com>

        * configure.host (or16, or32): New entries for OpenCores
        OpenRisc CPUs.
        (*-*-rtems*): Add -DNO_EXEC.
@
text
@d246 18
@


1.4
log
@Add support for Intel's XScale processor
@
text
@d134 4
d322 1
a322 1
	newlib_cflags="${newlib_cflags} -DHAVE_GETTIMEOFDAY -DMALLOC_PROVIDED -DEXIT_PROVIDED -DMISSING_SYSCALL_NAMES -DSIGNAL_PROVIDED -DREENTRANT_SYSCALLS_PROVIDED -DHAVE_OPENDIR"
@


1.3
log
@
Tue Jun 27 15:49:00 2000  Marek Michalkiewicz  <marekm@@linux.org.pl>

        * configure.host: Add support for AVR target.
        * libc/include/machine/ieeefp.h: Likewise.
        * libc/include/sys/config.h: Likewise.
@
text
@d148 3
d269 3
d427 5
@


1.2
log
@Add minimal ia64 support.
	* libc/include/machine/ieeefp.h: Add ia64 support.
	* configure.host: Likewise.
@
text
@d48 1
a48 1
  :m32r-* | :d10v-* | :d30v-*)
d71 3
d343 3
@


1.1
log
@Initial revision
@
text
@d104 2
@


1.1.1.1
log
@import newlib-2000-02-17 snapshot
@
text
@@
