head	1.7;
access;
symbols
	cygwin-1_7_35-release:1.7
	cygwin-1_7_34-release:1.7
	newlib-2_2_0:1.7.0.6
	cygwin-1_7_33-release:1.7
	cygwin-1_7_32-release:1.7
	cygwin-1_7_31-release:1.7
	cygwin-1_7_30-release:1.7
	cygwin-1_7_29-release:1.7
	cygwin-1_7_28-release:1.7
	newlib-2_1_0:1.7
	cygwin-1_7_27-release:1.7
	cygwin-1_7_26-release:1.7
	cygwin-1_7_25-release:1.7
	cygwin-1_7_24-release:1.7
	cygwin-1_7_23-release:1.7
	cygwin-1_7_22-release:1.7
	cygwin-1_7_21-release:1.7
	cygwin-1_7_20-release:1.7
	cygwin-1_7_19-release:1.7
	cygwin-64bit-postmerge:1.7
	cygwin-64bit-premerge-branch:1.7.0.4
	cygwin-64bit-premerge:1.7
	cygwin-1_7_18-release:1.7
	newlib-2_0_0:1.7
	cygwin-1_7_17-release:1.7
	cygwin-64bit-branch:1.7.0.2
	cygwin-1_7_16-release:1.7
	cygwin-1_7_15-release:1.7
	cygwin-1_7_14_2-release:1.7
	cygwin-1_7_14-release:1.7
	cygwin-1_7_12-release:1.7
	cygwin-1_7_11-release:1.7
	cygwin-1_7_10-release:1.7
	newlib-1_20_0:1.7
	cygwin-1_7_9-release:1.7
	cygwin-1_7_8-release:1.7
	newlib-1_19_0:1.7
	cygwin-1_7_7-release:1.7
	cygwin-1_7_5-release:1.7
	cygwin-1_7_4-release:1.7
	cygwin-1_7_3-release:1.7
	cygwin-1_7_2-release:1.7
	newlib-1_18_0:1.7
	cygwin-1_7_1-release:1.7
	newlib-1_17_0-arc:1.6.0.2
	binutils-arc-20080908-branch:1.4.0.8
	binutils-arc-20080908-branchpoint:1.4
	newlib-1_17_0:1.6
	newlib-1_16_0:1.4
	newlib-1_15_0:1.4
	newlib-csl-coldfire-4_1-32:1.4
	newlib-csl-sourcerygxx-4_1-32:1.4
	newlib-csl-innovasic-fido-3_4_4-33:1.4
	newlib-csl-coldfire-4_1-30:1.4
	newlib-csl-sourcerygxx-4_1-30:1.4
	newlib-csl-coldfire-4_1-28:1.4
	newlib-csl-sourcerygxx-4_1-28:1.4
	newlib-csl-arm-2006q3-27:1.4
	newlib-csl-sourcerygxx-4_1-27:1.4
	newlib-csl-arm-2006q3-26:1.4
	newlib-csl-sourcerygxx-4_1-26:1.4
	newlib-csl-sourcerygxx-4_1-24:1.4
	newlib-csl-sourcerygxx-4_1-23:1.4
	newlib-csl-sourcerygxx-4_1-21:1.4
	newlib-csl-arm-2006q3-21:1.4
	newlib-csl-arm-2006q3-19:1.4
	newlib-csl-sourcerygxx-4_1-19:1.4
	newlib-csl-sourcerygxx-4_1-18:1.4
	newlib-csl-sourcerygxx-3_4_4-25:1.4
	newlib-csl-sourcerygxx-4_1-17:1.4
	cr-0x5f1:1.4.0.6
	newlib-csl-sourcerygxx-4_1-14:1.4
	newlib-csl-sourcerygxx-4_1-13:1.4
	newlib-csl-sourcerygxx-4_1-12:1.4
	newlib-csl-sourcerygxx-4_1-9:1.4
	newlib-csl-sourcerygxx-4_1-8:1.4
	newlib-csl-sourcerygxx-4_1-7:1.4
	newlib-csl-arm-2006q1-6:1.4
	newlib-csl-sourcerygxx-4_1-6:1.4
	newlib-csl-sourcerygxx-4_1-5:1.4
	newlib-csl-sourcerygxx-4_1-4:1.4
	newlib-autotools-branch:1.4.0.4
	newlib-csl-20060320-branch:1.4.0.2
	newlib-csl-20060320-branchpoint:1.4
	newlib-1_14_0:1.4
	newlib-csl-arm-2005-q1b:1.2
	newlib-csl-arm-2005-q1a:1.2
	newlib-1_13_0:1.2
	csl-arm-2004-q3:1.2
	csl-arm-2004-q1a:1.2
	csl-arm-2004-q1:1.2
	newlib-1_12_0:1.2
	csl-arm-2003-q4:1.2
	w32api-2_2:1.2
	mingw-runtime-2_4:1.2
	newlib-1_11_0:1.2
	cygnus_cvs_20020108_pre:1.2
	newlib-1_10_0:1.2
	newlib-1_9_0:1.2
	newlib-2000-02-17:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.7
date	2009.02.23.23.42.02;	author jjohnstn;	state Exp;
branches;
next	1.6;

1.6
date	2008.11.18.22.55.06;	author jjohnstn;	state Exp;
branches;
next	1.5;

1.5
date	2008.11.18.21.39.10;	author jjohnstn;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.03.20.47.50;	author jjohnstn;	state Exp;
branches;
next	1.3;

1.3
date	2005.07.07.17.29.13;	author jjohnstn;	state Exp;
branches;
next	1.2;

1.2
date	2000.08.24.22.32.38;	author jjohnstn;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.39.51;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.17.19.39.51;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.7
log
@
2009-02-23  Craig Howland  <howland@@LGSInnovations.com>

        * libc/unix/ttyname.c:  Remove ttyname_r() (to a new file to avoid
        coupling ttyname_r() and ttyname() due to the latter's large buffer).
        * libc/unix/ttyname_r.c:  New file to hold ttyname_r(), previously in
        ttyname.c.
        * libc/unix/ttyname.h:  New file (common size definition for the 2
        ttyname*c files that are now split).
        * libc/unix/Makefile.am (ELIX_2_SOURCES):  Add ttyname_r.c.
        * libc/unix/Makefile.in:  Regenerate.
@
text
@#ifndef _NO_TTYNAME
/*
 * Copyright (c) 1988 The Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include "ttyname.h"

#include <dirent.h>
#include <unistd.h>
#include <paths.h>
#include <errno.h>

static char ttyname_buf[TTYNAME_BUFSIZE] = _PATH_DEV;

/*
 *  ttyname() - POSIX 1003.1b 4.7.2 - Determine Terminal Device Name
 */
char *
_DEFUN( ttyname,(fd),
	int fd)
{
  register int  fail;
  register char *ret=NULL;
  fail = ttyname_r( fd, ttyname_buf, sizeof(ttyname_buf) );
  if ( fail )  errno = fail;
   else  ret = ttyname_buf;
  return ret;
}
#endif /* !_NO_TTYNAME  */
@


1.6
log
@
2008-11-18  Joel Sherrill <joel.sherrill@@oarcorp.com>

        * libc/unix/ttyname.c: Use isatty() instead of tcgetattr().
@
text
@d31 2
a32 3
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
a34 1
#include <string.h>
a35 1
#include <_syslist.h>
d38 1
a38 51
static char ttyname_buf[sizeof (_PATH_DEV) + MAXNAMLEN] = _PATH_DEV;

/*
 *  ttyname_r() - POSIX 1003.1b 4.7.2 - Determine Terminal Device Name
 */
int
_DEFUN( ttyname_r,(fd, name, namesize),
	int fd _AND
	char   *name _AND
	size_t  namesize)
{
  struct stat sb;
  struct dirent *dirp;
  DIR *dp;
  struct stat dsb;
  char buf[sizeof(ttyname_buf)];

  /* Must be a terminal. */
  if (!isatty(fd))
    return ENOTTY;

  /* Must be a character device. */
  if (fstat (fd, &sb) || !S_ISCHR (sb.st_mode))
    return ENOTTY;

  if ((dp = opendir (_PATH_DEV)) == NULL)
    return EBADF;

  strcpy(buf, _PATH_DEV);
  while ((dirp = readdir (dp)) != NULL)
    {
      if (dirp->d_ino != sb.st_ino)
	continue;
      strcpy (buf + sizeof (_PATH_DEV) - 1, dirp->d_name);
      if (stat (buf, &dsb) || sb.st_dev != dsb.st_dev ||
	  sb.st_ino != dsb.st_ino)
	continue;
      (void) closedir (dp);
      if(strlen(buf) < namesize)  /* < to account for terminating null */
	{
	strcpy(name, buf);
	return 0;
	}
      else
	{
	return ERANGE;
	}
    }
  (void) closedir (dp);
  return EBADF;
}
@


1.5
log
@
2008-11-18  Craig Howland  <howland@@LGSInnovations.com>

        * libc/unix/ttyname.c: Add ttyname_r and change ttyname to use
        ttyname_r.
@
text
@a34 1
#include <termios.h>
a52 1
  struct termios tty;
d59 2
a60 2
  if (tcgetattr (fd, &tty) < 0)
    return errno;	/* Can be EBADF or ENOTTY */
@


1.4
log
@
2005-11-03  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/unix/getcwd.c: Don't use non-reentrant syscall names.
        * libc/unix/getlogin.c: Ditto.
        * libc/unix/getpass.c: Ditto.
        * libc/unix/getut.c: Ditto.
        * libc/unix/ttyname.c: Ditto.
@
text
@d1 1
a13 4
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
a30 4
#if defined(LIBC_SCCS) && !defined(lint)
static char sccsid[] = "@@(#)ttyname.c	5.10 (Berkeley) 5/6/91";
#endif /* LIBC_SCCS and not lint */

d40 1
d42 1
a42 1
static char buf[sizeof (_PATH_DEV) + MAXNAMLEN] = _PATH_DEV;
d44 8
a51 3
char *
ttyname (fd)
     int fd;
d58 1
d62 1
a62 1
    return NULL;
d66 1
a66 1
    return NULL;
d69 1
a69 1
    return NULL;
d71 1
d81 9
a89 1
      return buf;
d92 16
a107 1
  return NULL;
d109 1
@


1.3
log
@*** empty log message ***
@
text
@d65 1
a65 1
  if (_fstat (fd, &sb) || !S_ISCHR (sb.st_mode))
d68 1
a68 1
  if ((dp = _opendir (_PATH_DEV)) == NULL)
d71 1
a71 1
  while ((dirp = _readdir (dp)) != NULL)
d79 1
a79 1
      (void) _closedir (dp);
d82 1
a82 1
  (void) _closedir (dp);
@


1.2
log
@
2000-08-23  Werner Almesberger  <Werner.Almesberger@@epfl.ch>

        * libc/stdlib/mprec.c (ulp, b2d, d2b): changed a few expressions
        like  x << y-z  to the equivalent  x << (y-z).
        (d2b): changed if statements with assignment to perform the
        assignment prior to the if check.
        * libc/reent/reent.c: included stdlib.h for "_free_r" prototype.
        * libc/unix/getpass.c (getpass): moved "echo" assignment out of if.
        * libc/unix/ttyname.c: included string.h for "strcpy" prototype.
        * libc/unix/getcwd.c (ISDOT): added parentheses to clarify && and ||
        precedence.
        * libc/include/sys/unistd.h: added "vfork" prototype (for popen.c).
        Added "_execve" prototype (for execl.c, execle.c, execv.c, and
        execve.c).
        * libc/posix/popen.c (popen): added parentheses to clarify && and ||
        precedence.
        * libm/math/e_cosh.c (__ieee754_cosh): changed parentheses to
        clarify && and || precendence (and to remove pascalism).
        * libm/math/e_sinh.c (__ieee754_sinh): Ditto.
        * libm/math/s_infconst.c: added another pair of braces to all
        initializers for __infinity (need three: for __infinity[1] array,
        for union __dmath, and for i[2]).
@
text
@a58 1
  char *rval;
d71 1
a71 1
  for (rval = NULL; dirp = _readdir (dp);)
d80 1
a80 2
      rval = buf;
      break;
d83 1
a83 1
  return rval;
@


1.1
log
@Initial revision
@
text
@d44 1
@


1.1.1.1
log
@import newlib-2000-02-17 snapshot
@
text
@@
