head	1.3;
access;
symbols
	cygwin-1_7_35-release:1.3
	cygwin-1_7_34-release:1.3
	newlib-2_2_0:1.3.0.8
	cygwin-1_7_33-release:1.3
	cygwin-1_7_32-release:1.3
	cygwin-1_7_31-release:1.3
	cygwin-1_7_30-release:1.3
	cygwin-1_7_29-release:1.3
	cygwin-1_7_28-release:1.3
	newlib-2_1_0:1.3
	cygwin-1_7_27-release:1.3
	cygwin-1_7_26-release:1.3
	cygwin-1_7_25-release:1.3
	cygwin-1_7_24-release:1.3
	cygwin-1_7_23-release:1.3
	cygwin-1_7_22-release:1.3
	cygwin-1_7_21-release:1.3
	cygwin-1_7_20-release:1.3
	cygwin-1_7_19-release:1.3
	cygwin-64bit-postmerge:1.3
	cygwin-64bit-premerge-branch:1.3.0.6
	cygwin-64bit-premerge:1.3
	cygwin-1_7_18-release:1.3
	newlib-2_0_0:1.3
	cygwin-1_7_17-release:1.3
	cygwin-64bit-branch:1.3.0.4
	cygwin-1_7_16-release:1.3
	cygwin-1_7_15-release:1.3
	cygwin-1_7_14_2-release:1.3
	cygwin-1_7_14-release:1.3
	cygwin-1_7_12-release:1.3
	cygwin-1_7_11-release:1.3
	cygwin-1_7_10-release:1.3
	newlib-1_20_0:1.3
	cygwin-1_7_9-release:1.3
	cygwin-1_7_8-release:1.3
	newlib-1_19_0:1.3
	cygwin-1_7_7-release:1.3
	cygwin-1_7_5-release:1.3
	cygwin-1_7_4-release:1.3
	cygwin-1_7_3-release:1.3
	cygwin-1_7_2-release:1.3
	newlib-1_18_0:1.3
	cygwin-1_7_1-release:1.3
	newlib-1_17_0-arc:1.3.0.2
	binutils-arc-20080908-branch:1.2.0.8
	binutils-arc-20080908-branchpoint:1.2
	newlib-1_17_0:1.3
	newlib-1_16_0:1.2
	newlib-1_15_0:1.2
	newlib-csl-coldfire-4_1-32:1.2
	newlib-csl-sourcerygxx-4_1-32:1.2
	newlib-csl-innovasic-fido-3_4_4-33:1.2
	newlib-csl-coldfire-4_1-30:1.2
	newlib-csl-sourcerygxx-4_1-30:1.2
	newlib-csl-coldfire-4_1-28:1.2
	newlib-csl-sourcerygxx-4_1-28:1.2
	newlib-csl-arm-2006q3-27:1.2
	newlib-csl-sourcerygxx-4_1-27:1.2
	newlib-csl-arm-2006q3-26:1.2
	newlib-csl-sourcerygxx-4_1-26:1.2
	newlib-csl-sourcerygxx-4_1-24:1.2
	newlib-csl-sourcerygxx-4_1-23:1.2
	newlib-csl-sourcerygxx-4_1-21:1.2
	newlib-csl-arm-2006q3-21:1.2
	newlib-csl-arm-2006q3-19:1.2
	newlib-csl-sourcerygxx-4_1-19:1.2
	newlib-csl-sourcerygxx-4_1-18:1.2
	newlib-csl-sourcerygxx-3_4_4-25:1.2
	newlib-csl-sourcerygxx-4_1-17:1.2
	cr-0x5f1:1.2.0.6
	newlib-csl-sourcerygxx-4_1-14:1.2
	newlib-csl-sourcerygxx-4_1-13:1.2
	newlib-csl-sourcerygxx-4_1-12:1.2
	newlib-csl-sourcerygxx-4_1-9:1.2
	newlib-csl-sourcerygxx-4_1-8:1.2
	newlib-csl-sourcerygxx-4_1-7:1.2
	newlib-csl-arm-2006q1-6:1.2
	newlib-csl-sourcerygxx-4_1-6:1.2
	newlib-csl-sourcerygxx-4_1-5:1.2
	newlib-csl-sourcerygxx-4_1-4:1.2
	newlib-autotools-branch:1.2.0.4
	newlib-csl-20060320-branch:1.2.0.2
	newlib-csl-20060320-branchpoint:1.2
	newlib-1_14_0:1.2
	newlib-csl-arm-2005-q1b:1.2
	newlib-csl-arm-2005-q1a:1.2
	newlib-1_13_0:1.2
	csl-arm-2004-q3:1.2
	csl-arm-2004-q1a:1.2
	csl-arm-2004-q1:1.2
	newlib-1_12_0:1.2
	csl-arm-2003-q4:1.2
	w32api-2_2:1.2
	mingw-runtime-2_4:1.2
	newlib-1_11_0:1.2;
locks; strict;
comment	@ * @;


1.3
date	2008.11.18.21.47.44;	author jjohnstn;	state Exp;
branches;
next	1.2;

1.2
date	2002.05.06.20.29.29;	author jjohnstn;	state Exp;
branches;
next	1.1;

1.1
date	2002.04.29.19.31.23;	author jjohnstn;	state Exp;
branches;
next	;


desc
@@


1.3
log
@
2008-11-18  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/unix/basename.c: Add !_NO_BASENAME flag check so code can be
        ignored if desired by a platform.
        * libc/unix/dirname.c: Ditto except replace BASENAME with file name.
        * libc/unix/getcwd.c: Ditto.
        * libc/unix/getlogin.c: Ditto.
        * libc/unix/getpass.c: Ditto.
        * libc/unix/getpwent.c: Ditto.
        * libc/unix/getut.c: Ditto.
        * libc/unix/pread.c: Ditto.
        * libc/unix/pwrite.c: Ditto.
        * libc/unix/sigset.c: Ditto.
@
text
@#ifndef _NO_PWRITE
/*
FUNCTION
<<pwrite>>---write a file from specified position

INDEX
	pwrite
INDEX
	_pwrite_r

ANSI_SYNOPSIS
	#include <unistd.h>
	ssize_t pwrite(int <[fd]>, const void *<[buf]>, 
                       size_t <[n]>, off_t <[off]>);
	ssize_t _pwrite_r(struct _reent *<[rptr]>, int <[fd]>, 
                          const void *<[buf]>, size_t <[n]>, off_t <[off]>);

TRAD_SYNOPSIS
	#include <unistd.h>
	ssize_t pwrite(<[fd]>, <[buf]>, <[n]>, <[off]>)
	int <[fd]>;
	const void *<[buf]>;
	size_t <[n]>;
	off_t <[off]>;

	ssize_t _pwrite_r(<[rptr]>, <[fd]>, <[buf]>, <[n]>, <[off]>)
	struct _reent *<[rptr]>;
	int <[fd]>;
	const void *<[buf]>;
	size_t <[n]>;
	off_t <[off]>;

DESCRIPTION
The <<pwrite>> function is similar to <<write>>.  One difference is that
<<pwrite>> has an additional parameter <[off]> which is the offset to
position in the file before writing.  The function also differs in that
the file position is unchanged by the function (i.e. the file position
is the same before and after a call to <<pwrite>>).

The <<_pwrite_r>> function is the same as <<pwrite>>, only a reentrant
struct pointer <[rptr]> is provided to preserve reentrancy.

RETURNS
<<pwrite>> returns the number of bytes written or <<-1>> if failure occurred.

PORTABILITY
<<pwrite>> is non-ANSI and is specified by the Single Unix Specification.

Supporting OS subroutine required: <<write>>, <<lseek>>.
*/

#include <_ansi.h>
#include <unistd.h>
#include <reent.h>

ssize_t
_DEFUN (_pwrite_r, (rptr, fd, buf, n, off),
     struct _reent *rptr _AND
     int fd _AND
     _CONST _PTR buf _AND
     size_t n _AND
     off_t off)
{
  off_t cur_pos;
  _READ_WRITE_RETURN_TYPE num_written;
  
  if ((cur_pos = _lseek_r (rptr, fd, 0, SEEK_CUR)) == (off_t)-1)
    return -1;

  if (_lseek_r (rptr, fd, off, SEEK_SET) == (off_t)-1)
    return -1;

  num_written = _write_r (rptr, fd, buf, n);

  if (_lseek_r (rptr, fd, cur_pos, SEEK_SET) == (off_t)-1)
    return -1;

  return (ssize_t)num_written;
}

#ifndef _REENT_ONLY

ssize_t
_DEFUN (pwrite, (fd, buf, n, off),
     int fd _AND
     _CONST _PTR buf _AND
     size_t n _AND
     off_t off)
{
  return _pwrite_r (_REENT, fd, buf, n, off);
}

#endif /* !_REENT_ONLY  */
#endif /* !_NO_PWRITE  */
@


1.2
log
@
2002-05-06  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/unix/pread.c: Fix typo for _pread_r.
        * libc/unix/pwrite.c: Fix type for _pwrite_r.
        * libc/sys/linux/pread64.c: Fix typo for read syscall.
        * libc/sys/linux/pwrite64.c: Fix typo for write syscall.
@
text
@d1 1
d93 2
a94 1
#endif
@


1.1
log
@
2002-04-29  Jeff Johnston  <jjohnstn@@redhat.com>

        *  libc/include/sys/unistd.h (pread, pwrite): Added prototypes.
        *  libc/unix/Makefile.am: Add pread.c and pwrite.c.
        *  libc/sys/linux/Makefile.am: Add pread64.c and pwrite64.c.
        *  libc/sys/linux/Makefile.in: Regenerated.
        *  libc/unix/Makefile.in: Ditto.
        *  libc/sys/linux/pread64.c: New file.
        *  libc/sys/linux/pwrite64.c: Ditto.
        *  libc/unix/pread.c: Ditto.
        *  libc/unix/pwrite.c: Ditto.
@
text
@d56 1
a56 1
_DEFUN (pwrite_r, (rptr, fd, buf, n, off),
@

