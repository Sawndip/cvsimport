head	1.1;
access;
symbols
	cygwin-1_7_35-release:1.1
	cygwin-1_7_34-release:1.1
	newlib-2_2_0:1.1.0.6
	cygwin-1_7_33-release:1.1
	cygwin-1_7_32-release:1.1
	cygwin-1_7_31-release:1.1
	cygwin-1_7_30-release:1.1
	cygwin-1_7_29-release:1.1
	cygwin-1_7_28-release:1.1
	newlib-2_1_0:1.1
	cygwin-1_7_27-release:1.1
	cygwin-1_7_26-release:1.1
	cygwin-1_7_25-release:1.1
	cygwin-1_7_24-release:1.1
	cygwin-1_7_23-release:1.1
	cygwin-1_7_22-release:1.1
	cygwin-1_7_21-release:1.1
	cygwin-1_7_20-release:1.1
	cygwin-1_7_19-release:1.1
	cygwin-64bit-postmerge:1.1
	cygwin-64bit-premerge-branch:1.1.0.4
	cygwin-64bit-premerge:1.1
	cygwin-1_7_18-release:1.1
	newlib-2_0_0:1.1
	cygwin-1_7_17-release:1.1
	cygwin-64bit-branch:1.1.0.2
	cygwin-1_7_16-release:1.1
	cygwin-1_7_15-release:1.1
	cygwin-1_7_14_2-release:1.1
	cygwin-1_7_14-release:1.1
	cygwin-1_7_12-release:1.1
	cygwin-1_7_11-release:1.1
	cygwin-1_7_10-release:1.1
	newlib-1_20_0:1.1
	cygwin-1_7_9-release:1.1
	cygwin-1_7_8-release:1.1
	newlib-1_19_0:1.1
	cygwin-1_7_7-release:1.1
	cygwin-1_7_5-release:1.1
	cygwin-1_7_4-release:1.1
	cygwin-1_7_3-release:1.1
	cygwin-1_7_2-release:1.1
	newlib-1_18_0:1.1
	cygwin-1_7_1-release:1.1;
locks; strict;
comment	@ * @;


1.1
date	2009.03.11.12.57.53;	author corinna;	state Exp;
branches;
next	;


desc
@@


1.1
log
@	* libc/include/wchar.h (wcscasecmp, wcsncasecmp): Declare.
	* libc/string/Makefile.am: Add wcscasecmp.c, wcsncasecmp.c
	* libc/stdio/Makefile.in: Regenerate.
	* libc/string/strings.tex: Add new documentation references.
	* libc/string/wcscasecmp.c: New file.
	* libc/string/wcsncasecmp.c: New file.
@
text
@/*
FUNCTION
	<<wcsncasecmp>>---case-insensitive wide character string compare
	
INDEX
	wcsncasecmp

ANSI_SYNOPSIS
	#include <wchar.h>
	int wcsncasecmp(const wchar_t *<[a]>, const wchar_t * <[b]>, size_t <[length]>);

TRAD_SYNOPSIS
	#include <wchar.h>
	int wcsncasecmp(<[a]>, <[b]>, <[length]>)
	wchar_t *<[a]>;
	wchar_t *<[b]>;
	size_t <[length]>

DESCRIPTION
	<<wcsncasecmp>> compares up to <[length]> wide characters
	from the string at <[a]> to the string at <[b]> in a 
	case-insensitive manner.

RETURNS

	If <<*<[a]>>> sorts lexicographically after <<*<[b]>>> (after
	both are converted to uppercase), <<wcsncasecmp>> returns a
	number greater than zero.  If the two strings are equivalent,
	<<wcsncasecmp>> returns zero.  If <<*<[a]>>> sorts
	lexicographically before <<*<[b]>>>, <<wcsncasecmp>> returns a
	number less than zero.

PORTABILITY
POSIX-1.2008

<<wcsncasecmp>> requires no supporting OS subroutines. It uses
tolower() from elsewhere in this library.

QUICKREF
	wcsncasecmp
*/

#include <wchar.h>
#include <wctype.h>

int 
_DEFUN (wcsncasecmp, (s1, s2, n),
	_CONST wchar_t *s1 _AND
	_CONST wchar_t *s2 _AND
	size_t n)
{
  if (n == 0)
    return 0;

  while (n-- != 0 && towlower(*s1) == towlower(*s2))
    {
      if (n == 0 || *s1 == '\0' || *s2 == '\0')
	break;
      s1++;
      s2++;
    }

  return towlower(*s1) - towlower(*s2);
}
@
