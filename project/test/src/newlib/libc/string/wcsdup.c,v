head	1.2;
access;
symbols
	cygwin-1_7_35-release:1.2
	cygwin-1_7_34-release:1.2
	newlib-2_2_0:1.2.0.6
	cygwin-1_7_33-release:1.2
	cygwin-1_7_32-release:1.2
	cygwin-1_7_31-release:1.2
	cygwin-1_7_30-release:1.2
	cygwin-1_7_29-release:1.2
	cygwin-1_7_28-release:1.2
	newlib-2_1_0:1.2
	cygwin-1_7_27-release:1.2
	cygwin-1_7_26-release:1.2
	cygwin-1_7_25-release:1.2
	cygwin-1_7_24-release:1.2
	cygwin-1_7_23-release:1.2
	cygwin-1_7_22-release:1.2
	cygwin-1_7_21-release:1.2
	cygwin-1_7_20-release:1.2
	cygwin-1_7_19-release:1.2
	cygwin-64bit-postmerge:1.2
	cygwin-64bit-premerge-branch:1.2.0.4
	cygwin-64bit-premerge:1.2
	cygwin-1_7_18-release:1.2
	newlib-2_0_0:1.2
	cygwin-1_7_17-release:1.2
	cygwin-64bit-branch:1.2.0.2
	cygwin-1_7_16-release:1.2
	cygwin-1_7_15-release:1.2
	cygwin-1_7_14_2-release:1.2
	cygwin-1_7_14-release:1.2
	cygwin-1_7_12-release:1.2
	cygwin-1_7_11-release:1.2
	cygwin-1_7_10-release:1.2
	newlib-1_20_0:1.2
	cygwin-1_7_9-release:1.2
	cygwin-1_7_8-release:1.2
	newlib-1_19_0:1.2
	cygwin-1_7_7-release:1.2
	cygwin-1_7_5-release:1.2
	cygwin-1_7_4-release:1.2
	cygwin-1_7_3-release:1.2
	cygwin-1_7_2-release:1.2
	newlib-1_18_0:1.2
	cygwin-1_7_1-release:1.2;
locks; strict;
comment	@ * @;


1.2
date	2009.03.25.17.57.11;	author jjohnstn;	state Exp;
branches;
next	1.1;

1.1
date	2009.03.15.13.39.07;	author corinna;	state Exp;
branches;
next	;


desc
@@


1.2
log
@
2009-03-25  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/string/wcsdup.c: Fix documentation error.
        * libc/string/Makefile.am: Fix CHEWOUT files to contain
        wcsdup.def rather than wcsdup.
        * libc/string/Makefile.in: Regenerated.
@
text
@/*
FUNCTION
	<<wcsdup>>---wide character string duplicate
	
INDEX
	wcsdup
INDEX
	_wcsdup_r

ANSI_SYNOPSIS
	#include <wchar.h>
	wchar_t *wcsdup(const wchar_t *<[str]>);

	#include <wchar.h>
	wchar_t *_wcsdup_r(struct _reent *<[ptr]>, const wchar_t *<[str]>);

TRAD_SYNOPSIS
	#include <wchar.h>
	wchar_t *wcsdup(<[ptr]>, <[str]>)
	struct _reent *<[ptr]>;
	wchar_t *<[str]>;

DESCRIPTION
	<<wcsdup>> allocates a new wide character string using <<malloc>>,
	and copies the content of the argument <[str]> into the newly
	allocated string, thus making a copy of <[str]>.

RETURNS 
	<<wcsdup>> returns a pointer to the copy of <[str]> if enough
	memory for the copy was available.  Otherwise it returns NULL
	and errno is set to ENOMEM.

PORTABILITY
POSIX-1.2008

QUICKREF
	wcsdup 
*/

#include <reent.h>
#include <stdlib.h>
#include <wchar.h>

wchar_t *
_wcsdup_r (struct _reent *p, const wchar_t *str)
{
  size_t len = wcslen (str) + 1;
  wchar_t *copy = _malloc_r (p, len * sizeof (wchar_t));
  if (copy)
    wmemcpy (copy, str, len);
  return copy;
}

#ifndef _REENT_ONLY

wchar_t *
wcsdup (const wchar_t *str)
{
  return _wcsdup_r (_REENT, str);
}

#endif /* !_REENT_ONLY */
@


1.1
log
@	* libc/include/wchar.h (wcsdup, _wcsdup_r): Declare.
	* libc/string/Makefile.am: Add wcsdup.c.
	* libc/string/Makefile.in: Regenerate.
	* libc/string/strings.tex: Add wcsdup documentation reference.
	* libc/string/wcsdup.c: New file.
@
text
@d15 1
a15 1
	wchar_t *_wcsdup_r(struct _reent *<ptr>, const wchar_t *<[str]>);
d19 2
a20 2
	wchar_t *wcsdup(<ptr>, <[str]>)
	struct _reent *<ptr>;
d24 1
a24 1
	<<wcsdup>> allocates a new wide character string using <<malloc>,
@

