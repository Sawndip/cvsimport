head	1.1;
access;
symbols
	cygwin-1_7_35-release:1.1
	cygwin-1_7_34-release:1.1
	newlib-2_2_0:1.1.0.6
	cygwin-1_7_33-release:1.1
	cygwin-1_7_32-release:1.1
	cygwin-1_7_31-release:1.1
	cygwin-1_7_30-release:1.1
	cygwin-1_7_29-release:1.1
	cygwin-1_7_28-release:1.1
	newlib-2_1_0:1.1
	cygwin-1_7_27-release:1.1
	cygwin-1_7_26-release:1.1
	cygwin-1_7_25-release:1.1
	cygwin-1_7_24-release:1.1
	cygwin-1_7_23-release:1.1
	cygwin-1_7_22-release:1.1
	cygwin-1_7_21-release:1.1
	cygwin-1_7_20-release:1.1
	cygwin-1_7_19-release:1.1
	cygwin-64bit-postmerge:1.1
	cygwin-64bit-premerge-branch:1.1.0.4
	cygwin-64bit-premerge:1.1
	cygwin-1_7_18-release:1.1
	newlib-2_0_0:1.1
	cygwin-1_7_17-release:1.1
	cygwin-64bit-branch:1.1.0.2
	cygwin-1_7_16-release:1.1
	cygwin-1_7_15-release:1.1
	cygwin-1_7_14_2-release:1.1
	cygwin-1_7_14-release:1.1
	cygwin-1_7_12-release:1.1
	cygwin-1_7_11-release:1.1
	cygwin-1_7_10-release:1.1
	newlib-1_20_0:1.1
	cygwin-1_7_9-release:1.1
	cygwin-1_7_8-release:1.1
	newlib-1_19_0:1.1
	cygwin-1_7_7-release:1.1;
locks; strict;
comment	@ * @;


1.1
date	2010.06.04.15.30.40;	author jjohnstn;	state Exp;
branches;
next	;


desc
@@


1.1
log
@
2010-06-04  Mark Mitchell  <mark@@codesourcery.com>

        * libc/stdlib/__call_atexit.c (__libc_fini): Declare.
        (register_fini): New function.
        * libc/misc/init.c (_fini): Remove.
        (__libc_fini_array): Likewise.
        * libc/misc/fini.c: New file.
        * libc/misc/Makefile.am (LIB_SOURCES): Add fini.c.
        * libc/misc/Makefile.in: Regenerate.
@
text
@/*
 * Copyright (C) 2010 CodeSourcery, Inc.
 *
 * Permission to use, copy, modify, and distribute this file
 * for any purpose is hereby granted without fee, provided that
 * the above copyright notice and this notice appears in all
 * copies.
 *
 * This file is distributed WITHOUT ANY WARRANTY; without even the implied
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 */

/* Handle ELF .{pre_init,init,fini}_array sections.  */
#include <sys/types.h>

#ifdef HAVE_INITFINI_ARRAY
extern void (*__fini_array_start []) (void) __attribute__((weak));
extern void (*__fini_array_end []) (void) __attribute__((weak));

extern void _fini (void);

/* Run all the cleanup routines.  */
void
__libc_fini_array (void)
{
  size_t count;
  size_t i;
  
  count = __fini_array_end - __fini_array_start;
  for (i = count; i > 0; i--)
    __fini_array_start[i-1] ();

  _fini ();
}
#endif
@
