head	1.4;
access;
symbols
	newlib-1_15_0:1.3
	newlib-csl-coldfire-4_1-32:1.3
	newlib-csl-sourcerygxx-4_1-32:1.3
	newlib-csl-innovasic-fido-3_4_4-33:1.3
	newlib-csl-coldfire-4_1-30:1.3
	newlib-csl-sourcerygxx-4_1-30:1.3
	newlib-csl-coldfire-4_1-28:1.3
	newlib-csl-sourcerygxx-4_1-28:1.3
	newlib-csl-arm-2006q3-27:1.3
	newlib-csl-sourcerygxx-4_1-27:1.3
	newlib-csl-arm-2006q3-26:1.3
	newlib-csl-sourcerygxx-4_1-26:1.3
	newlib-csl-sourcerygxx-4_1-24:1.3
	newlib-csl-sourcerygxx-4_1-23:1.3
	newlib-csl-sourcerygxx-4_1-21:1.3
	newlib-csl-arm-2006q3-21:1.3
	newlib-csl-arm-2006q3-19:1.3
	newlib-csl-sourcerygxx-4_1-19:1.3
	newlib-csl-sourcerygxx-4_1-18:1.3
	newlib-csl-sourcerygxx-3_4_4-25:1.3
	newlib-csl-sourcerygxx-4_1-17:1.3
	cr-0x5f1:1.3.0.6
	newlib-csl-sourcerygxx-4_1-14:1.3
	newlib-csl-sourcerygxx-4_1-13:1.3
	newlib-csl-sourcerygxx-4_1-12:1.3
	newlib-csl-sourcerygxx-4_1-9:1.3
	newlib-csl-sourcerygxx-4_1-8:1.3
	newlib-csl-sourcerygxx-4_1-7:1.3
	newlib-csl-arm-2006q1-6:1.3
	newlib-csl-sourcerygxx-4_1-6:1.3
	newlib-csl-sourcerygxx-4_1-5:1.3
	newlib-csl-sourcerygxx-4_1-4:1.3
	newlib-autotools-branch:1.3.0.4
	newlib-csl-20060320-branch:1.3.0.2
	newlib-csl-20060320-branchpoint:1.3
	newlib-1_14_0:1.3
	newlib-csl-arm-2005-q1b:1.3
	newlib-csl-arm-2005-q1a:1.3
	newlib-1_13_0:1.3
	csl-arm-2004-q3:1.3
	csl-arm-2004-q1a:1.3
	csl-arm-2004-q1:1.3
	newlib-1_12_0:1.3
	csl-arm-2003-q4:1.3
	w32api-2_2:1.2
	mingw-runtime-2_4:1.2
	newlib-1_11_0:1.2
	cygnus_cvs_20020108_pre:1.2
	newlib-1_10_0:1.2
	newlib-1_9_0:1.2
	newlib-2000-02-17:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.4
date	2007.02.21.19.22.33;	author jjohnstn;	state dead;
branches;
next	1.3;

1.3
date	2003.06.03.19.48.07;	author jjohnstn;	state Exp;
branches
	1.3.6.1;
next	1.2;

1.2
date	2000.08.24.18.51.09;	author jjohnstn;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.39.47;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.17.19.39.47;	author cgf;	state Exp;
branches;
next	;

1.3.6.1
date	2007.11.12.15.25.49;	author corinna;	state Exp;
branches;
next	;


desc
@@


1.4
log
@
2007-02-21  Patrick Mansfield <patmans@@us.ibm.com>

        * libc/reent/timer.c: Removed (split into two new files).
        * libc/reent/timesr.c: New file for _times_r.
        * libc/reent/gettimeofdayr.c: New file out _gettimeofday_r.
        * reent/Makefile.in: Remove timer.c, add timesr.c and
        gettimeofdayr.c.
        * libc/reent/Makefile.am: Regenerate.
@
text
@/* Reentrant versions of times and gettimeofday system calls for the
   clock and time ANSI C routines.
   This implementation just calls the times/gettimeofday system calls.
   Gettimeofday may not be available on all targets.  It's presence
   here is dubious.  Consider it for internal use only.  */

#include <reent.h>
#include <time.h>
#include <sys/time.h>
#include <sys/times.h>
#include <_syslist.h>

/* Some targets provides their own versions of these functions.  Those
   targets should define REENTRANT_SYSCALLS_PROVIDED in TARGET_CFLAGS.  */

#ifdef _REENT_ONLY
#ifndef REENTRANT_SYSCALLS_PROVIDED
#define REENTRANT_SYSCALLS_PROVIDED
#endif
#endif

#ifdef REENTRANT_SYSCALLS_PROVIDED

int _dummy_time_syscalls = 1;

#else

/* We use the errno variable used by the system dependent layer.  */
#undef errno
extern int errno;

/*
FUNCTION
	<<_times_r>>---Reentrant version of times
	
INDEX
	_times_r

ANSI_SYNOPSIS
	#include <reent.h>
	#include <sys/times.h>
	clock_t _times_r(struct _reent *<[ptr]>, struct tms *<[ptms]>);

TRAD_SYNOPSIS
	#include <reent.h>
	#include <sys/times.h>
	clock_t _times_r(<[ptr]>, <[ptms]>)
	struct _reent *<[ptr]>;
	struct tms *<[ptms]>;

DESCRIPTION
	This is a reentrant version of <<times>>.  It
	takes a pointer to the global data block, which holds
	<<errno>>.
*/

clock_t
_DEFUN (_times_r, (ptr, ptms),
     struct _reent *ptr _AND
     struct tms *ptms)
{
  clock_t ret;

  ret = _times (ptms);
  return ret;
}

/*
FUNCTION
	<<_gettimeofday_r>>---Reentrant version of gettimeofday
	
INDEX
	_gettimeofday_r

ANSI_SYNOPSIS
	#include <reent.h>
	#include <time.h>
	int _gettimeofday_r(struct _reent *<[ptr]>,
		struct timeval *<[ptimeval]>,
		struct timezone *<[ptimezone]>);

TRAD_SYNOPSIS
	#include <reent.h>
	#include <time.h>
	int _gettimeofday_r(<[ptr]>, <[ptimeval]>, <[ptimezone]>)
	struct _reent *<[ptr]>;
	struct timeval *<[ptimeval]>;
	struct timezone *<[ptimezone]>;

DESCRIPTION
	This is a reentrant version of <<gettimeofday>>.  It
	takes a pointer to the global data block, which holds
	<<errno>>.

	This function is only available for a few targets.
	Check libc.a to see if its available on yours.
*/

int
_DEFUN (_gettimeofday_r, (ptr, ptimeval, ptimezone),
     struct _reent *ptr _AND
     struct timeval *ptimeval _AND
     struct timezone *ptimezone)
{
  int ret;

  errno = 0;
  if ((ret = _gettimeofday (ptimeval, ptimezone)) == -1 && errno != 0)
    ptr->_errno = errno;
  return ret;
}

#endif /* ! defined (REENTRANT_SYSCALLS_PROVIDED) */
@


1.3
log
@
2003-06-03  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/reent/execr.c: Use _DEFUN macro for function declaration.
        * libc/reent/fcntlr.c: Ditto.
        * libc/reent/fstat64r.c: Ditto.
        * libc/reent/linkr.c: Ditto.
        * libc/reent/lseek64r.c: Ditto.
        * libc/reent/lseekr.c: Ditto.
        * libc/reent/openr.c: Ditto.
        * libc/reent/readr.c: Ditto.
        * libc/reent/reent.c: Ditto.
        * libc/reent/sbrkr.c: Ditto.
        * libc/reent/signalr.c: Ditto.
        * libc/reent/signgam.c: Ditto.
        * libc/reent/statr.c: Ditto.
        * libc/reent/timer.c: Ditto.
        * libc/reent/unlinkr.c: Ditto.
        * libc/reent/writer.c: Ditto.
        * libc/syscalls/sysclose.c: Ditto.
        * libc/syscalls/sysexecve.c: Ditto.
        * libc/syscalls/sysfcntl.c: Ditto.
        * libc/syscalls/sysfork.c: Ditto.
        * libc/syscalls/sysfstat.c: Ditto.
        * libc/syscalls/sysgetpid.c: Ditto.
        * libc/syscalls/sysgettod.c: Ditto.
        * libc/syscalls/syskill.c: Ditto.
        * libc/syscalls/syslink.c: Ditto.
        * libc/syscalls/syslseek.c: Ditto.
        * libc/syscalls/sysopen.c: Ditto.
        * libc/syscalls/sysread.c: Ditto.
        * libc/syscalls/syssbrk.c: Ditto.
        * libc/syscalls/sysstat.c: Ditto.
        * libc/syscalls/systimes.c: Ditto.
        * libc/syscalls/sysunlink.c: Ditto.
        * libc/syscalls/syswait.c: Ditto.
@
text
@@


1.3.6.1
log
@2007-07-06  Jeff Johnston  <jjohnstn@@redhat.com>

       * libc/include/sys/time.h (gettimeofday): Change to proper
       prototype where second parameter is void *.
       * libc/include/reent.h: Fix prototype for _gettimeofday_r.
       * libc/time/timer.c (_gettimeofday_r): Change prototype accordingly.

2007-06-13  Patrick Mansfield  <patmans@@us.ibm.com>

       * libc/include/sys/unistd.h: Change usleep prototype to Posix.

2007-01-05  Brian Ford  <Brian.Ford@@FlightSafety.com>

       * configure.host (*-*-cygwin*): Define HAVE_BLKSIZE.
@
text
@d80 1
a80 1
		void *<[ptimezone]>);
d88 1
a88 1
	void *<[ptimezone]>;
d103 1
a103 1
     void *ptimezone)
@


1.2
log
@
2000-08-23  Werner Almesberger  <Werner.Almesberger@@epfl.ch>

        * libc/stdlib/abort.c: changed description: uses "raise" instead of
        "getpid" and "kill"; added: uses "write" and "_exit".
        Also included unistd.h for "_exit" prototype.
        * libc/stdlib/system.c: included unistd.h for "execve" prototype,
        reent.h for "_fork_r" and "_wait_r" prototypes.
        (do_system): changed  extern char *environ[] to POSIX-friendly
        extern char **environ.
        * libc/stdlib/wctomb_r.c: included string.h for "strlen" and "strcmp"
        prototypes.
        * libc/stdlib/remove.c: included reent.h for "_unlink_r" prototype.
        * libc/reent/execr.c: included sys/wait.h for "wait" prototype.
        * libc/reent/fstatr.c: included sys/stat.h for "fstat" prototype.
        * libc/reent/openr.c: included fcntl.h for "open" prototype.
        * libc/reent/signalr.c: included signal.h for "kill" prototype,
        unistd.h for "getpid" prototype.
        * libc/reent/statr.c: included sys/stat.h for "stat" prototype.
        * libc/reent/timer.c: included sys/time.h for "gettimeofday" prototype.
        * libc/unix/getut.c (utmpname): removed local, incorrect "strdup"
        prototype.  Also included stdlib.h for "abort", string.h for
        "strdup" and "strncmp" prototypes.
        * libc/unix/getlogin.c: included string.h for "strncmp", "memset", and
        "strncpy", unistd.h for "read" and "close" prototypes.
        * libc/posix/execvp.c: included string.h for "strchr", "strlen", and
        "strcat" prototypes.
@
text
@d58 3
a60 3
_times_r (ptr, ptms)
     struct _reent *ptr;
     struct tms *ptms;
d100 4
a103 4
_gettimeofday_r (ptr, ptimeval, ptimezone)
     struct _reent *ptr;
     struct timeval *ptimeval;
     struct timezone *ptimezone;
@


1.1
log
@Initial revision
@
text
@d9 1
@


1.1.1.1
log
@import newlib-2000-02-17 snapshot
@
text
@@
