head	1.3;
access;
symbols
	cygwin-1_7_35-release:1.3
	cygwin-1_7_34-release:1.3
	newlib-2_2_0:1.3.0.16
	cygwin-1_7_33-release:1.3
	cygwin-1_7_32-release:1.3
	cygwin-1_7_31-release:1.3
	cygwin-1_7_30-release:1.3
	cygwin-1_7_29-release:1.3
	cygwin-1_7_28-release:1.3
	newlib-2_1_0:1.3
	cygwin-1_7_27-release:1.3
	cygwin-1_7_26-release:1.3
	cygwin-1_7_25-release:1.3
	cygwin-1_7_24-release:1.3
	cygwin-1_7_23-release:1.3
	cygwin-1_7_22-release:1.3
	cygwin-1_7_21-release:1.3
	cygwin-1_7_20-release:1.3
	cygwin-1_7_19-release:1.3
	cygwin-64bit-postmerge:1.3
	cygwin-64bit-premerge-branch:1.3.0.14
	cygwin-64bit-premerge:1.3
	cygwin-1_7_18-release:1.3
	newlib-2_0_0:1.3
	cygwin-1_7_17-release:1.3
	cygwin-64bit-branch:1.3.0.12
	cygwin-1_7_16-release:1.3
	cygwin-1_7_15-release:1.3
	cygwin-1_7_14_2-release:1.3
	cygwin-1_7_14-release:1.3
	cygwin-1_7_12-release:1.3
	cygwin-1_7_11-release:1.3
	cygwin-1_7_10-release:1.3
	newlib-1_20_0:1.3
	cygwin-1_7_9-release:1.3
	cygwin-1_7_8-release:1.3
	newlib-1_19_0:1.3
	cygwin-1_7_7-release:1.3
	cygwin-1_7_5-release:1.3
	cygwin-1_7_4-release:1.3
	cygwin-1_7_3-release:1.3
	cygwin-1_7_2-release:1.3
	newlib-1_18_0:1.3
	cygwin-1_7_1-release:1.3
	newlib-1_17_0-arc:1.3.0.10
	binutils-arc-20080908-branch:1.3.0.8
	binutils-arc-20080908-branchpoint:1.3
	newlib-1_17_0:1.3
	newlib-1_16_0:1.3
	newlib-1_15_0:1.3
	newlib-csl-coldfire-4_1-32:1.3
	newlib-csl-sourcerygxx-4_1-32:1.3
	newlib-csl-innovasic-fido-3_4_4-33:1.3
	newlib-csl-coldfire-4_1-30:1.3
	newlib-csl-sourcerygxx-4_1-30:1.3
	newlib-csl-coldfire-4_1-28:1.3
	newlib-csl-sourcerygxx-4_1-28:1.3
	newlib-csl-arm-2006q3-27:1.3
	newlib-csl-sourcerygxx-4_1-27:1.3
	newlib-csl-arm-2006q3-26:1.3
	newlib-csl-sourcerygxx-4_1-26:1.3
	newlib-csl-sourcerygxx-4_1-24:1.3
	newlib-csl-sourcerygxx-4_1-23:1.3
	newlib-csl-sourcerygxx-4_1-21:1.3
	newlib-csl-arm-2006q3-21:1.3
	newlib-csl-arm-2006q3-19:1.3
	newlib-csl-sourcerygxx-4_1-19:1.3
	newlib-csl-sourcerygxx-4_1-18:1.3
	newlib-csl-sourcerygxx-3_4_4-25:1.3
	newlib-csl-sourcerygxx-4_1-17:1.3
	cr-0x5f1:1.3.0.6
	newlib-csl-sourcerygxx-4_1-14:1.3
	newlib-csl-sourcerygxx-4_1-13:1.3
	newlib-csl-sourcerygxx-4_1-12:1.3
	newlib-csl-sourcerygxx-4_1-9:1.3
	newlib-csl-sourcerygxx-4_1-8:1.3
	newlib-csl-sourcerygxx-4_1-7:1.3
	newlib-csl-arm-2006q1-6:1.3
	newlib-csl-sourcerygxx-4_1-6:1.3
	newlib-csl-sourcerygxx-4_1-5:1.3
	newlib-csl-sourcerygxx-4_1-4:1.3
	newlib-autotools-branch:1.3.0.4
	newlib-csl-20060320-branch:1.3.0.2
	newlib-csl-20060320-branchpoint:1.3
	newlib-1_14_0:1.3
	newlib-csl-arm-2005-q1b:1.3
	newlib-csl-arm-2005-q1a:1.3
	newlib-1_13_0:1.3
	csl-arm-2004-q3:1.3
	csl-arm-2004-q1a:1.3
	csl-arm-2004-q1:1.3
	newlib-1_12_0:1.3
	csl-arm-2003-q4:1.3
	w32api-2_2:1.2
	mingw-runtime-2_4:1.2
	newlib-1_11_0:1.2
	cygnus_cvs_20020108_pre:1.2
	newlib-1_10_0:1.2
	newlib-1_9_0:1.2
	newlib-2000-02-17:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.3
date	2003.06.03.19.48.07;	author jjohnstn;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.08.04.01.49;	author aoliva;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.39.47;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.17.19.39.47;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.3
log
@
2003-06-03  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/reent/execr.c: Use _DEFUN macro for function declaration.
        * libc/reent/fcntlr.c: Ditto.
        * libc/reent/fstat64r.c: Ditto.
        * libc/reent/linkr.c: Ditto.
        * libc/reent/lseek64r.c: Ditto.
        * libc/reent/lseekr.c: Ditto.
        * libc/reent/openr.c: Ditto.
        * libc/reent/readr.c: Ditto.
        * libc/reent/reent.c: Ditto.
        * libc/reent/sbrkr.c: Ditto.
        * libc/reent/signalr.c: Ditto.
        * libc/reent/signgam.c: Ditto.
        * libc/reent/statr.c: Ditto.
        * libc/reent/timer.c: Ditto.
        * libc/reent/unlinkr.c: Ditto.
        * libc/reent/writer.c: Ditto.
        * libc/syscalls/sysclose.c: Ditto.
        * libc/syscalls/sysexecve.c: Ditto.
        * libc/syscalls/sysfcntl.c: Ditto.
        * libc/syscalls/sysfork.c: Ditto.
        * libc/syscalls/sysfstat.c: Ditto.
        * libc/syscalls/sysgetpid.c: Ditto.
        * libc/syscalls/sysgettod.c: Ditto.
        * libc/syscalls/syskill.c: Ditto.
        * libc/syscalls/syslink.c: Ditto.
        * libc/syscalls/syslseek.c: Ditto.
        * libc/syscalls/sysopen.c: Ditto.
        * libc/syscalls/sysread.c: Ditto.
        * libc/syscalls/syssbrk.c: Ditto.
        * libc/syscalls/sysstat.c: Ditto.
        * libc/syscalls/systimes.c: Ditto.
        * libc/syscalls/sysunlink.c: Ditto.
        * libc/syscalls/syswait.c: Ditto.
@
text
@/* Reentrant versions of file system calls.  These implementations
   just call the usual system calls.  */

#include <reent.h>
#include <unistd.h>
#include <_syslist.h>

/* Some targets provides their own versions of these functions.  Those
   targets should define REENTRANT_SYSCALLS_PROVIDED in TARGET_CFLAGS.  */

#ifdef _REENT_ONLY
#ifndef REENTRANT_SYSCALLS_PROVIDED
#define REENTRANT_SYSCALLS_PROVIDED
#endif
#endif

#ifdef REENTRANT_SYSCALLS_PROVIDED

int _dummy_link_syscalls = 1;

#else

/* We use the errno variable used by the system dependent layer.  */
#undef errno
extern int errno;

/*
FUNCTION
	<<_link_r>>---Reentrant version of link
	
INDEX
	_link_r

ANSI_SYNOPSIS
	#include <reent.h>
	int _link_r(struct _reent *<[ptr]>,
		    const char *<[old]>, const char *<[new]>);

TRAD_SYNOPSIS
	#include <reent.h>
	int _link_r(<[ptr]>, <[old]>, <[new]>)
	struct _reent *<[ptr]>;
	char *<[old]>;
	char *<[new]>;

DESCRIPTION
	This is a reentrant version of <<link>>.  It
	takes a pointer to the global data block, which holds
	<<errno>>.
*/

int
_DEFUN (_link_r, (ptr, old, new),
     struct _reent *ptr _AND
     _CONST char *old _AND
     _CONST char *new)
{
  int ret;

  errno = 0;
  if ((ret = _link (old, new)) == -1 && errno != 0)
    ptr->_errno = errno;
  return ret;
}

#endif /* ! defined (REENTRANT_SYSCALLS_PROVIDED) */
@


1.2
log
@* libc/reent/Makefile.am (lib_a_SOURCES): Added unlinkr.c.
(CHEWOUT_FILES): Added unlinkr.def.
* libc/reent/Makefile.in: Rebuilt.
* libc/sys.tex: Include unlinkr.def.
* libc/reent/linkr.c (_unlink_r): Moved to...
* libc/reent/unlinkr.c: ... new file.
@
text
@d53 4
a56 4
_link_r (ptr, old, new)
     struct _reent *ptr;
     _CONST char *old;
     _CONST char *new;
@


1.1
log
@Initial revision
@
text
@a65 36
/*
FUNCTION
	<<_unlink_r>>---Reentrant version of unlink
	
INDEX
	_unlink_r

ANSI_SYNOPSIS
	#include <reent.h>
	int _unlink_r(struct _reent *<[ptr]>, const char *<[file]>);

TRAD_SYNOPSIS
	#include <reent.h>
	int _unlink_r(<[ptr]>, <[file]>)
	struct _reent *<[ptr]>;
	char *<[file]>;

DESCRIPTION
	This is a reentrant version of <<unlink>>.  It
	takes a pointer to the global data block, which holds
	<<errno>>.
*/

int
_unlink_r (ptr, file)
     struct _reent *ptr;
     _CONST char *file;
{
  int ret;

  errno = 0;
  if ((ret = _unlink (file)) == -1 && errno != 0)
    ptr->_errno = errno;
  return ret;
}

@


1.1.1.1
log
@import newlib-2000-02-17 snapshot
@
text
@@
