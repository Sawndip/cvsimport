head	1.2;
access;
symbols
	cygwin-1_7_35-release:1.2
	cygwin-1_7_34-release:1.2
	newlib-2_2_0:1.2.0.6
	cygwin-1_7_33-release:1.2
	cygwin-1_7_32-release:1.2
	cygwin-1_7_31-release:1.2
	cygwin-1_7_30-release:1.2
	cygwin-1_7_29-release:1.2
	cygwin-1_7_28-release:1.2
	newlib-2_1_0:1.2
	cygwin-1_7_27-release:1.2
	cygwin-1_7_26-release:1.2
	cygwin-1_7_25-release:1.2
	cygwin-1_7_24-release:1.2
	cygwin-1_7_23-release:1.2
	cygwin-1_7_22-release:1.2
	cygwin-1_7_21-release:1.2
	cygwin-1_7_20-release:1.2
	cygwin-1_7_19-release:1.2
	cygwin-64bit-postmerge:1.2
	cygwin-64bit-premerge-branch:1.2.0.4
	cygwin-64bit-premerge:1.2
	cygwin-1_7_18-release:1.2
	newlib-2_0_0:1.2
	cygwin-1_7_17-release:1.2
	cygwin-64bit-branch:1.2.0.2
	cygwin-1_7_16-release:1.2
	cygwin-1_7_15-release:1.2
	cygwin-1_7_14_2-release:1.2
	cygwin-1_7_14-release:1.2
	cygwin-1_7_12-release:1.2
	cygwin-1_7_11-release:1.2
	cygwin-1_7_10-release:1.2
	newlib-1_20_0:1.2
	cygwin-1_7_9-release:1.2
	cygwin-1_7_8-release:1.2
	newlib-1_19_0:1.2
	cygwin-1_7_7-release:1.2
	cygwin-1_7_5-release:1.2
	cygwin-1_7_4-release:1.2
	cygwin-1_7_3-release:1.2
	cygwin-1_7_2-release:1.2
	newlib-1_18_0:1.2
	cygwin-1_7_1-release:1.2;
locks; strict;
comment	@ * @;


1.2
date	2009.03.12.15.34.57;	author corinna;	state Exp;
branches;
next	1.1;

1.1
date	2009.03.09.12.35.03;	author corinna;	state Exp;
branches;
next	;


desc
@@


1.2
log
@	* libc/time/time.tex (wcsftime.def):  Include.
	* libc/time/wcsftime.c:  Clean up documentation a little.
@
text
@/*
 * wcsftime.c
 * Original Author:	Craig Howland, for Newlib
 *
 * Source actually uses strftime.c.
 * Documentation for wcsftime() here, with minimal overlap.
 */

/*
FUNCTION
<<wcsftime>>--convert date and time to a formatted wide-character string

INDEX
	wcsftime

ANSI_SYNOPSIS
	#include <time.h>
	#include <wchar.h>
	size_t wcsftime(wchar_t *<[s]>, size_t <[maxsize]>,
			const wchar_t *<[format]>, const struct tm *<[timp]>);

DESCRIPTION
<<wcsftime>> is equivalent to <<strftime>>, except that:
 
O+
o The argument s points to the initial element of an array of wide characters
into which the generated output is to be placed.
 
o The argument maxsize indicates the limiting number of wide characters.
 
o The argument format is a wide-character string and the conversion specifiers
are replaced by corresponding sequences of wide characters.
 
o The return value indicates the number of wide characters.
O-
(The difference in all of the above being wide characters versus regular
characters.)
 
See <<strftime>> for the details of the format specifiers.

RETURNS
When the formatted time takes up no more than <[maxsize]> wide characters,
the result is the length of the formatted wide string.  Otherwise, if the
formatting operation was abandoned due to lack of room, the result is
<<0>>, and the wide-character string starting at <[s]> corresponds to just those
parts of <<*<[format]>>> that could be completely filled in within the
<[maxsize]> limit.

PORTABILITY
C99 and POSIX require <<wcsftime>>, but do not specify the contents of
<<*<[s]>>> when the formatted string would require more than
<[maxsize]> characters.  Unrecognized specifiers and fields of
<<timp>> that are out of range cause undefined results.  Since some
formats expand to 0 bytes, it is wise to set <<*<[s]>>> to a nonzero
value beforehand to distinguish between failure and an empty string.
This implementation does not support <<s>> being NULL, nor overlapping
<<s>> and <<format>>.

<<wcsftime>> requires no supporting OS subroutines.

SEEALSO
<<strftime>>
*/

#include <time.h>
#include <wchar.h>
#define MAKE_WCSFTIME
#include "../time/strftime.c"
@


1.1
log
@	* libc/time/strftime.c:  Adapt for dual-purpose use so not only
	defines strftime(), but can also define wcsftime(); add optional
	test package; speed up %Y handling.
	* libc/time/wcsftime.c:  New file, defining wcsftime() (albeit
	indirectly by including strftime.c) and its documentation.
	* libc/time/time.tex:  Enhance tm_isdst explanation, change strftime
	description to match modified description in strftime.c
	* libc/time/Makefile.am:  Add wcsftime.c and wcsftime.def.  Add a rule
	so that wcsftime.o gets rebuilt when strftime changes.
	* libc/time/Makefile.in:  Regenerate.
	* libc/include/wchar.h (wcsftime): Declare.
@
text
@d23 1
a23 1
<<strftime>> is equivalent to <<strftime>>, except that:
d25 2
a26 1
The argument s points to the initial element of an array of wide characters
d29 1
a29 1
The argument maxsize indicates the limiting number of wide characters.
d31 1
a31 1
The argument format is a wide-character string and the conversion specifiers
d34 4
a37 1
The return value indicates the number of wide characters.
d59 2
a62 2

<<wcsftime>> requires no supporting OS subroutines.
@

