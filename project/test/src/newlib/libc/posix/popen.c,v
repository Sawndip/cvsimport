head	1.10;
access;
symbols
	cygwin-1_7_35-release:1.10
	cygwin-1_7_34-release:1.10
	newlib-2_2_0:1.10.0.6
	cygwin-1_7_33-release:1.10
	cygwin-1_7_32-release:1.10
	cygwin-1_7_31-release:1.10
	cygwin-1_7_30-release:1.10
	cygwin-1_7_29-release:1.10
	cygwin-1_7_28-release:1.10
	newlib-2_1_0:1.10
	cygwin-1_7_27-release:1.10
	cygwin-1_7_26-release:1.10
	cygwin-1_7_25-release:1.10
	cygwin-1_7_24-release:1.10
	cygwin-1_7_23-release:1.10
	cygwin-1_7_22-release:1.10
	cygwin-1_7_21-release:1.10
	cygwin-1_7_20-release:1.10
	cygwin-1_7_19-release:1.10
	cygwin-64bit-postmerge:1.10
	cygwin-64bit-premerge-branch:1.10.0.4
	cygwin-64bit-premerge:1.10
	cygwin-1_7_18-release:1.10
	newlib-2_0_0:1.10
	cygwin-1_7_17-release:1.10
	cygwin-64bit-branch:1.10.0.2
	cygwin-1_7_16-release:1.9
	cygwin-1_7_15-release:1.9
	cygwin-1_7_14_2-release:1.9
	cygwin-1_7_14-release:1.9
	cygwin-1_7_12-release:1.9
	cygwin-1_7_11-release:1.9
	cygwin-1_7_10-release:1.9
	newlib-1_20_0:1.9
	cygwin-1_7_9-release:1.9
	cygwin-1_7_8-release:1.9
	newlib-1_19_0:1.9
	cygwin-1_7_7-release:1.9
	cygwin-1_7_5-release:1.9
	cygwin-1_7_4-release:1.9
	cygwin-1_7_3-release:1.9
	cygwin-1_7_2-release:1.9
	newlib-1_18_0:1.9
	cygwin-1_7_1-release:1.9
	newlib-1_17_0-arc:1.7.0.2
	binutils-arc-20080908-branch:1.6.0.2
	binutils-arc-20080908-branchpoint:1.6
	newlib-1_17_0:1.7
	newlib-1_16_0:1.6
	newlib-1_15_0:1.6
	newlib-csl-coldfire-4_1-32:1.5
	newlib-csl-sourcerygxx-4_1-32:1.5
	newlib-csl-innovasic-fido-3_4_4-33:1.5
	newlib-csl-coldfire-4_1-30:1.5
	newlib-csl-sourcerygxx-4_1-30:1.5
	newlib-csl-coldfire-4_1-28:1.5
	newlib-csl-sourcerygxx-4_1-28:1.5
	newlib-csl-arm-2006q3-27:1.5
	newlib-csl-sourcerygxx-4_1-27:1.5
	newlib-csl-arm-2006q3-26:1.5
	newlib-csl-sourcerygxx-4_1-26:1.5
	newlib-csl-sourcerygxx-4_1-24:1.5
	newlib-csl-sourcerygxx-4_1-23:1.5
	newlib-csl-sourcerygxx-4_1-21:1.5
	newlib-csl-arm-2006q3-21:1.5
	newlib-csl-arm-2006q3-19:1.5
	newlib-csl-sourcerygxx-4_1-19:1.5
	newlib-csl-sourcerygxx-4_1-18:1.5
	newlib-csl-sourcerygxx-3_4_4-25:1.6
	newlib-csl-sourcerygxx-4_1-17:1.5
	cr-0x5f1:1.5.0.6
	newlib-csl-sourcerygxx-4_1-14:1.5
	newlib-csl-sourcerygxx-4_1-13:1.5
	newlib-csl-sourcerygxx-4_1-12:1.5
	newlib-csl-sourcerygxx-4_1-9:1.5
	newlib-csl-sourcerygxx-4_1-8:1.5
	newlib-csl-sourcerygxx-4_1-7:1.5
	newlib-csl-arm-2006q1-6:1.5
	newlib-csl-sourcerygxx-4_1-6:1.5
	newlib-csl-sourcerygxx-4_1-5:1.5
	newlib-csl-sourcerygxx-4_1-4:1.5
	newlib-autotools-branch:1.5.0.4
	newlib-csl-20060320-branch:1.5.0.2
	newlib-csl-20060320-branchpoint:1.5
	newlib-1_14_0:1.5
	newlib-csl-arm-2005-q1b:1.5
	newlib-csl-arm-2005-q1a:1.5
	newlib-1_13_0:1.5
	csl-arm-2004-q3:1.5
	csl-arm-2004-q1a:1.5
	csl-arm-2004-q1:1.5
	newlib-1_12_0:1.5
	csl-arm-2003-q4:1.5
	w32api-2_2:1.4
	mingw-runtime-2_4:1.4
	newlib-1_11_0:1.4
	cygnus_cvs_20020108_pre:1.3
	newlib-1_10_0:1.3
	newlib-1_9_0:1.2
	newlib-2000-02-17:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.10
date	2012.08.08.11.04.17;	author corinna;	state Exp;
branches;
next	1.9;

1.9
date	2009.08.18.17.07.55;	author ericb;	state Exp;
branches;
next	1.8;

1.8
date	2009.08.18.16.43.21;	author ericb;	state Exp;
branches;
next	1.7;

1.7
date	2008.10.31.21.03.41;	author jjohnstn;	state Exp;
branches;
next	1.6;

1.6
date	2006.08.22.20.30.37;	author jjohnstn;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.06.19.57.51;	author jjohnstn;	state Exp;
branches
	1.5.6.1;
next	1.4;

1.4
date	2002.08.04.19.01.56;	author cgf;	state Exp;
branches;
next	1.3;

1.3
date	2001.10.22.16.40.26;	author cgf;	state Exp;
branches;
next	1.2;

1.2
date	2000.08.24.22.32.38;	author jjohnstn;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.39.47;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.5.6.1
date	2006.10.19.08.39.45;	author corinna;	state Exp;
branches;
next	;

1.1.1.1
date	2000.02.17.19.39.47;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.10
log
@	Throughout, run newlib with -Wall -Werror option and fix bugs and
	compiler warnings found this way.

	* libc/stdio/freopen.c (_freopen_r): Fix bug setting _flags.

	* libc/include/stdio.h (_rename): Define when building newlib.
	* libc/include/sys/signal.h (_kill): Ditto.
	* libc/include/sys/stat.h (_mkdir): Ditto.
	* libc/include/sys/time.h (_gettimeofday): Ditto.
	* libc/include/sys/times.h (_times): Ditto.
	* libc/include/sys/wait.h (_wait): Ditto.
	* libc/locale/lmessages.c (empty): Don't define for Cygwin.
	* libc/locale/lmonetary.c (cnv): Ditto.
	* libc/locale/nl_langinfo.c (nl_langinfo): Ditto for variable s.
	* libc/posix/collate.c: Throughout cast to avoid compiler warning.
	* libc/posix/engine.c (matcher): Initialize dp to avoid compiler
	warning.
	* libc/posix/glob.c: Disable on Cygwin.  Explain why.
	* libc/posix/regcomp.c: Fix "uninitialized" compiler warnings.
	(dissect): Deliberately silence gcc compiler warning.  Add comment to
	explain why.
	* libc/posix/wordexp.c (wordexp): Remove num_bytes variable since result
	is never used.
	* libc/posix/popen.c (popen): Ditto for variable last.
	* libc/reent/mkdirr.c: Include sys/stat.h.
	* libc/reent/renamer.c: Include stdio.h.
	* libc/search/hash.c:  Throughout use underscored variants of the stat
	function family.
	(init_hash): Add missing definition for the __USE_INTERNAL_STAT64 case.
	* libc/search/hash_bigkey.c (__big_insert): Add parenthesis to avoid
	compiler warning.
	* libc/search/hash_page.c (overflow_page): Initalize freep to NULL to
	avoid compiler warning.
	* libc/stdio/asiprintf.c (_asiprintf_r): Cast unsigned char * to char *
	to avoid compiler warning.
	(asiprintf): Ditto.
	* libc/stdio/asprintf.c (_asprintf_r): Ditto.
	(asprintf): Ditto.
	* libc/stdio/vasiprintf.c (_vasiprintf_r): Ditto.
	* libc/stdio/vasprintf.c (_vasprintf_r): Ditto.
	* libc/stdio/mktemp.c (_gettemp): Cast to unsigned char in call to
	isdigit to avoid compiler warning.
	* libc/stdio/vfprintf.c (_VFPRINTF_R): Initialize variables used for
	grouping to avoid compiler warning.  Only define and set nseps and
	nrepeats if they are really used.
	* libc/stdio/vfwprintf.c (_VFWPRINTF_R): Ditto.  Only define state if
	it is really used.
	* libc/stdio/vfscanf.c (u_char): Revert to be defined as unsigned char.
	(__SVFSCANF_R): Cast fmt in call to __mbtowc.
	* libc/stdlib/mbtowc_r.c (JIS_state_table): Disable when building
	Cygwin.
	(JIS_action_table): Ditto.
	* libc/stdlib/wctomb_r.c (__utf8_wctomb): Add parenthesis to avoid
	compiler warning.
	* libc/string/strcasestr.c: Deliberately silence gcc compiler warning.
	Add comment to explain why.
	* libc/time/strptime.c (strptime): Cast to unsigned char in calls to
	isspace to avoid compiler warning.
	* libm/math/e_atan2.c (__ieee754_atan2): Add parenthesis to avoid
	compiler warning.
	* libm/math/e_exp.c (__ieee754_exp): Initialize k to 0 to avoid
	compiler warning.  Drop setting it to 0 later.
	* libm/math/ef_exp.c (__ieee754_expf): Ditto.
	* libm/math/e_pow.c (__ieee754_pow): Add braces to avoid compiler
	warning.
	* libm/math/ef_pow.c (__ieee754_powf): Ditto.
	* libm/math/er_lgamma.c (__ieee754_lgamma_r): Initialize nadj to 0 to
	avoid compiler warning.
	* libm/math/erf_lgamma.c (__ieee754_lgammaf_r): Ditto.
	* libm/math/e_rem_pio2.c (__ieee754_rem_pio2): Ditto for variable z.
	* libm/common/sf_round.c (roundf): Remove signbit variable since result
	is never used.
@
text
@/*	$NetBSD: popen.c,v 1.11 1995/06/16 07:05:33 jtc Exp $	*/

/*
 * Copyright (c) 1988, 1993, 2006
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software written by Ken Arnold and
 * published in UNIX Review, Vol. 6, No. 8.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*
FUNCTION
<<popen>>, <<pclose>>---tie a stream to a command string

INDEX
	popen
INDEX
	pclose

ANSI_SYNOPSIS
	#include <stdio.h>
	FILE *popen(const char *<[s]>, const char *<[mode]>);

	int pclose(FILE *<[f]>);

DESCRIPTION
Use <<popen>> to create a stream to a child process executing a
command string <<*<[s]>>> as processed by <</bin/sh>> on your system.
The argument <[mode]> must start with either `<<r>>', where the stream
reads from the child's <<stdout>>, or `<<w>>', where the stream writes
to the child's <<stdin>>.  As an extension, <[mode]> may also contain
`<<e>>' to set the close-on-exec bit of the parent's file descriptor.
The stream created by <<popen>> must be closed by <<pclose>> to avoid
resource leaks.

Streams created by prior calls to <<popen>> are not visible in
subsequent <<popen>> children, regardless of the close-on-exec bit.

Use ``<<system(NULL)>>'' to test whether your system has <</bin/sh>>
available.

RETURNS
<<popen>> returns a file stream opened with the specified <[mode]>,
or <<NULL>> if a child process could not be created.  <<pclose>>
returns -1 if the stream was not created by <<popen>> or if the
application used <<wait>> or similar to steal the status; otherwise
it returns the exit status of the child which can be interpreted
in the same manner as a status obtained by <<waitpid>>.

PORTABILITY
POSIX.2 requires <<popen>> and <<pclose>>, but only specifies a mode
of just <<r>> or <<w>>.  Where <<sh>> is found is left unspecified.

Supporting OS subroutines required: <<_exit>>, <<_execve>>, <<_fork_r>>,
<<_wait_r>>, <<pipe>>, <<fcntl>>, <<sbrk>>.
*/

#ifndef _NO_POPEN

#if defined(LIBC_SCCS) && !defined(lint)
#if 0
static char sccsid[] = "@@(#)popen.c	8.1 (Berkeley) 6/4/93";
#else
static char rcsid[] = "$NetBSD: popen.c,v 1.11 1995/06/16 07:05:33 jtc Exp $";
#endif
#endif /* LIBC_SCCS and not lint */

#include <sys/param.h>
#include <sys/types.h>
#include <sys/wait.h>

#include <signal.h>
#include <errno.h>
#include <unistd.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <paths.h>
#include <fcntl.h>

static struct pid {
	struct pid *next;
	FILE *fp;
	pid_t pid;
} *pidlist;

FILE *
_DEFUN(popen, (program, type),
	const char *program _AND
	const char *type)
{
	struct pid *cur;
	FILE *iop;
	int pdes[2], pid;

       if ((*type != 'r' && *type != 'w')
	   || (type[1]
#ifdef HAVE_FCNTL
	       && (type[2] || (type[1] != 'e'))
#endif
			       )) {
		errno = EINVAL;
		return (NULL);
	}

	if ((cur = malloc(sizeof(struct pid))) == NULL)
		return (NULL);

	if (pipe(pdes) < 0) {
		free(cur);
		return (NULL);
	}

	switch (pid = vfork()) {
	case -1:			/* Error. */
		(void)close(pdes[0]);
		(void)close(pdes[1]);
		free(cur);
		return (NULL);
		/* NOTREACHED */
	case 0:				/* Child. */
		if (*type == 'r') {
			if (pdes[1] != STDOUT_FILENO) {
				(void)dup2(pdes[1], STDOUT_FILENO);
				(void)close(pdes[1]);
			}
			if (pdes[0] != STDOUT_FILENO) {
				(void) close(pdes[0]);
			}
		} else {
			if (pdes[0] != STDIN_FILENO) {
				(void)dup2(pdes[0], STDIN_FILENO);
				(void)close(pdes[0]);
			}
			(void)close(pdes[1]);
		}
		/* Close all fd's created by prior popen.  */
		for (cur = pidlist; cur; cur = cur->next)
			(void)close (fileno (cur->fp));
		execl(_PATH_BSHELL, "sh", "-c", program, NULL);
		_exit(127);
		/* NOTREACHED */
	}

	/* Parent; assume fdopen can't fail. */
	if (*type == 'r') {
		iop = fdopen(pdes[0], type);
		(void)close(pdes[1]);
	} else {
		iop = fdopen(pdes[1], type);
		(void)close(pdes[0]);
	}

#ifdef HAVE_FCNTL
	/* Mark pipe cloexec if requested.  */
	if (type[1] == 'e')
		fcntl (fileno (iop), F_SETFD,
		       fcntl (fileno (iop), F_GETFD, 0) | FD_CLOEXEC);
#endif /* HAVE_FCNTL */

	/* Link into list of file descriptors. */
	cur->fp = iop;
	cur->pid =  pid;
	cur->next = pidlist;
	pidlist = cur;

	return (iop);
}

/*
 * pclose --
 *	Pclose returns -1 if stream is not associated with a `popened' command,
 *	if already `pclosed', or waitpid returns an error.
 */
int
_DEFUN(pclose, (iop),
	FILE *iop)
{
	register struct pid *cur, *last;
	int pstat;
	pid_t pid;

	(void)fclose(iop);

	/* Find the appropriate file pointer. */
	for (last = NULL, cur = pidlist; cur; last = cur, cur = cur->next)
		if (cur->fp == iop)
			break;
	if (cur == NULL)
		return (-1);

	do {
		pid = waitpid(cur->pid, &pstat, 0);
	} while (pid == -1 && errno == EINTR);

	/* Remove the entry from the linked list. */
	if (last == NULL)
		pidlist = cur->next;
	else
		last->next = cur->next;
	free(cur);

	return (pid == -1 ? -1 : pstat);
}

#endif  /* !_NO_POPEN  */
@


1.9
log
@* libc/posix/popen.c (popen): Fix documented prototype.
@
text
@d116 1
a116 1
	struct pid *cur, *last;
d162 1
a162 2
		for (last = NULL, cur = pidlist; cur;
		     last = cur, cur = cur->next)
@


1.8
log
@Improve popen compatibility with glibc.

* libc/posix/popen.c (popen): The 2006-08-22 change to use
FD_CLOEXEC disagrees with other implementations; instead, use
pidlist to work even when fcntl is not available.  Meanwhile,
support the 'e' modifier to set CLOEXEC, as in glibc.  Drop
cygwin-specific code, now that cygwin has its own version.
* libc/posix/Makefile.am (CHEWOUT_FILES): Document popen.
* libc/posix/posix.tex: New file.
@
text
@d46 1
a46 1
	FILE *popen(char *<[s]>, char *<[mode]>);
@


1.7
log
@
2008-10-31  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/limits.h: Add ARG_MAX, PATH_MAX, and _POSIX2_RE_DUP_MAX.
        * libc/include/envlock.h: New file.
        * libc/include/fnmatch.h: Ditto.
        * libc/include/glob.h: Ditto.
        * libc/include/regex.h: Ditto.
        * libc/include/wordexp.h: Ditto.
        * libc/posix/Makefile.am: Add new files moved from
        libc/sys/linux/stdlib.
        * libc/posix/Makefile.in: Regenerated.
        * libc/posix/COPYRIGHT: New file moved from libc/sys/linux/stdlib.
        * libc/posix/cclass.h: Ditto.
        * libc/posix/cname.h: Ditto.
        * libc/posix/collate.c: Ditto.
        * libc/posix/collate.h: Ditto.
        * libc/posix/collcmp.c: Ditto.
        * libc/posix/engine.c: Ditto.
        * libc/posix/fnmatch.3: Ditto.
        * libc/posix/glob.3: Ditto.
        * libc/posix/fnmatch.c: Ditto.
        * libc/posix/glob.c: Ditto.
        * libc/posix/namespace.h: Ditto.
        * libc/posix/reallocf.c: Ditto.
        * libc/posix/regcomp.c: Ditto.
        * libc/posix/regerror.c: Ditto.
        * libc/posix/regex.3: Ditto.
        * libc/posix/regex2.h: Ditto.
        * libc/posix/regexec.c: Ditto.
        * libc/posix/regfree.c: Ditto.
        * libc/posix/rune.h: Ditto.
        * libc/posix/runetype.h: Ditto.
        * libc/posix/scandir.c: Remove advertising clause which is not in
        effect.
        * libc/posix/sysexits.h: Ditto.
        * libc/posix/un-namespace.h: Ditto.
        * libc/posix/utils.h: Ditto.
        * libc/posix/wordexp.c: Ditto.
        * libc/posix/wordfree.c: Ditto.
        * libc/posix/execl.c: Add !_NO_EXECVE flag check.
        * libc/posix/execle.c: Ditto.
        * libc/posix/execlp.c: Ditto.
        * libc/posix/execv.c: Ditto.
        * libc/posix/execve.c: Ditto.
        * libc/posix/execvp.c: Ditto.
        * libc/posix/popen.c: Add !_NO_POPEN flag check.
        * libc/sys/linux/configure: Regenerated.
        * libc/sys/linux/configure.in: Remove stdlib.
        * libc/sys/linux/include/limits.h: Add include of linux/limits.h.
        * libc/sys/linux/stdlib/Makefile.am: Removed.
        * libc/sys/linux/stdlib/Makefile.in: Ditto.
        * libc/sys/linux/stdlib/COPYRIGHT: Moved to libc/posix.
        * libc/sys/linux/stdlib/cclass.h: Ditto.
        * libc/sys/linux/stdlib/cname.h: Ditto.
        * libc/sys/linux/stdlib/collate.c: Ditto.
        * libc/sys/linux/stdlib/collate.h: Ditto.
        * libc/sys/linux/stdlib/collcmp.c: Ditto.
        * libc/sys/linux/stdlib/engine.c: Ditto.
        * libc/sys/linux/stdlib/fnmatch.3: Ditto.
        * libc/sys/linux/stdlib/fnmatch.c: Ditto.
        * libc/sys/linux/stdlib/glob.3: Ditto.
        * libc/sys/linux/stdlib/glob.c: Ditto.
        * libc/sys/linux/stdlib/reallocf.c: Ditto.
        * libc/sys/linux/stdlib/regcomp.c: Ditto.
        * libc/sys/linux/stdlib/regerror.c: Ditto.
        * libc/sys/linux/stdlib/regex.3: Ditto.
        * libc/sys/linux/stdlib/regex2.h: Ditto.
        * libc/sys/linux/stdlib/regexec.c: Ditto.
        * libc/sys/linux/stdlib/regfree.c: Ditto.
        * libc/sys/linux/stdlib/utils.h: Ditto.
        * libc/sys/linux/stdlib/wordexp.c: Ditto.
        * libc/sys/linux/stdlib/wordfree.c: Ditto.
@
text
@d35 47
d109 2
a110 2
} *pidlist; 
	
d116 1
a116 1
	struct pid *cur;
d122 2
a123 2
#ifdef __CYGWIN__
	       && (type[2] || (type[1] != 'b' && type[1] != 't'))
d161 4
a165 5
#ifdef __CYGWIN__
		/* On cygwin32, we may not have /bin/sh.  In that
                   case, try to find sh on PATH.  */
		execlp("sh", "sh", "-c", program, NULL);
#endif
d180 4
a183 3
	/* Hide pipe from future popens; assume fcntl can't fail.  */
	fcntl (fileno (iop), F_SETFD,
	       fcntl (fileno (iop), F_GETFD, 0) | FD_CLOEXEC);
d227 1
a227 1
		
@


1.6
log
@
2006-08-22  Eric Blake  <ebb9@@byu.net>

        * libc/posix/popen.c (popen): Don't close output end of pipe in
        child if stdout was closed on entry.
        [HAVE_FCNTL]: In parent, mark file as close-on-exec, per POSIX.
@
text
@a17 4
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
d35 2
d183 2
@


1.5
log
@
2003-06-06  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/argz/argz_add.c: Change to use _DEFUN macro for function
        definition.
        * libc/argz/argz_add_sep.c: Ditto.
        * libc/argz/argz_append.c libc/argz/argz_count.c: Ditto.
        * libc/argz/argz_create.c libc/argz/argz_create_sep.c: Ditto.
        * libc/argz/argz_delete.c libc/argz/argz_extract.c: Ditto.
        * libc/argz/argz_insert.c libc/argz/argz_next.c: Ditto.
        * libc/argz/argz_replace.c libc/argz/argz_stringify.c: Ditto.
        * libc/argz/envz_add.c libc/argz/envz_entry.c: Ditto.
        * libc/argz/envz_get.c libc/argz/envz_merge.c: Ditto.
        * libc/argz/envz_remove.c libc/argz/envz_strip.c: Ditto.
        * libc/locale/nl_langinfo.c libc/misc/ffs.c: Ditto.
        * libc/posix/closedir.c libc/posix/creat.c: Ditto.
        * libc/posix/execl.c libc/posix/execle.c: Ditto.
        * libc/posix/execlp.c libc/posix/execve.c: Ditto.
        * libc/posix/isatty.c libc/posix/opendir.c: Ditto.
        * libc/posix/popen.c libc/posix/readdir.c: Ditto.
        * libc/posix/readdir_r.c libc/posix/rewinddir.c: Ditto.
        * libc/posix/scandir.c libc/posix/seekdir.c: Ditto.
        * libc/posix/telldir.c libc/search/hcreate.c: Ditto.
        * libc/search/tdelete.c libc/search/tdestroy.c: Ditto.
        * libc/search/tfind.c libc/search/tsearch.c: Ditto.
        * libc/search/twalk.c libc/signal/signal.c: Ditto.
@
text
@d4 1
a4 1
 * Copyright (c) 1988, 1993
d58 1
d106 3
a108 1
			(void) close(pdes[0]);
d135 6
@


1.5.6.1
log
@Apply the following mainline patches to cr-0x5f1 branch:

2006-10-11  Yang Tse  <yangsita@@gmail.com>

	* libc/include/machine/setjmp.h: Use __extension__ keyword for gcc's
	braced-groups.

2006-10-11  Corinna Vinschen  <corinna@@vinschen.de>

	* libc/reent/reeent.c (_reclaim_reent): Free _REENT_MP_RESULT.

2006-09-13  Patrick Mansfield <patmans@@us.ibm.com>

	* libc/include/math.h: Remove _CONST from _LIB_VERSION, as it is
	supposed to be writable.
	* libm/common/s_lib_ver.c: Ditto.

2006-09-06  Eric Blake  <ebb9@@byu.net>

	* libc/stdio/vfprintf.c (_vfprintf_r, get_arg): Add 'hh', 'j',
	't', and 'z' modifiers.

2006-08-22  Eric Blake  <ebb9@@byu.net>

	* libc/posix/popen.c (popen): Don't close output end of pipe in
	child if stdout was closed on entry.
	[HAVE_FCNTL]: In parent, mark file as close-on-exec, per POSIX.

2006-08-17  Brian Ford  <Brian.Ford@@FlightSafety.com>

	* libc/time/gmtime.c: Correct man page; clock is not a
	local time and no conversion occurs.
@
text
@d4 1
a4 1
 * Copyright (c) 1988, 1993, 2006
a57 1
#include <fcntl.h>
d105 1
a105 3
			if (pdes[0] != STDOUT_FILENO) {
				(void) close(pdes[0]);
			}
a131 6
#ifdef HAVE_FCNTL
	/* Hide pipe from future popens; assume fcntl can't fail.  */
	fcntl (fileno (iop), F_SETFD,
	       fcntl (fileno (iop), F_GETFD, 0) | FD_CLOEXEC);
#endif /* HAVE_FCNTL */

@


1.4
log
@* libc/stdio/popen.c (popen): Allow "rb", "rt", "wb", and "wt" arguments for
popen to match similar functionality in fopen.
@
text
@d66 3
a68 3
popen(program, type)
	const char *program;
	const char *type;
d147 2
a148 2
pclose(iop)
	FILE *iop;
@


1.3
log
@* libc/posix/execvp.c: Remove obsolete CYGWIN32 considerations throughout.
* signal.h: Change comment to reflect __CYGWIN__ rather than __CYGWIN32__.
* popen.c (popen): Use __CYGWIN_ rather than __CYGWIN32__.
* system.c (_system_r): Ditto.
@
text
@d74 6
a79 1
       if ((*type != 'r' && *type != 'w') || type[1]) {
@


1.2
log
@
2000-08-23  Werner Almesberger  <Werner.Almesberger@@epfl.ch>

        * libc/stdlib/mprec.c (ulp, b2d, d2b): changed a few expressions
        like  x << y-z  to the equivalent  x << (y-z).
        (d2b): changed if statements with assignment to perform the
        assignment prior to the if check.
        * libc/reent/reent.c: included stdlib.h for "_free_r" prototype.
        * libc/unix/getpass.c (getpass): moved "echo" assignment out of if.
        * libc/unix/ttyname.c: included string.h for "strcpy" prototype.
        * libc/unix/getcwd.c (ISDOT): added parentheses to clarify && and ||
        precedence.
        * libc/include/sys/unistd.h: added "vfork" prototype (for popen.c).
        Added "_execve" prototype (for execl.c, execle.c, execv.c, and
        execve.c).
        * libc/posix/popen.c (popen): added parentheses to clarify && and ||
        precedence.
        * libm/math/e_cosh.c (__ieee754_cosh): changed parentheses to
        clarify && and || precendence (and to remove pascalism).
        * libm/math/e_sinh.c (__ieee754_sinh): Ditto.
        * libm/math/s_infconst.c: added another pair of braces to all
        initializers for __infinity (need three: for __infinity[1] array,
        for union __dmath, and for i[2]).
@
text
@d109 1
a109 1
#ifdef __CYGWIN32__
@


1.1
log
@Initial revision
@
text
@d74 1
a74 1
	if (*type != 'r' && *type != 'w' || type[1]) {
@


1.1.1.1
log
@import newlib-2000-02-17 snapshot
@
text
@@
