head	1.1;
access;
symbols
	cygwin-1_7_35-release:1.1
	cygwin-1_7_34-release:1.1
	newlib-2_2_0:1.1.0.6
	cygwin-1_7_33-release:1.1
	cygwin-1_7_32-release:1.1
	cygwin-1_7_31-release:1.1
	cygwin-1_7_30-release:1.1
	cygwin-1_7_29-release:1.1
	cygwin-1_7_28-release:1.1
	newlib-2_1_0:1.1
	cygwin-1_7_27-release:1.1
	cygwin-1_7_26-release:1.1
	cygwin-1_7_25-release:1.1
	cygwin-1_7_24-release:1.1
	cygwin-1_7_23-release:1.1
	cygwin-1_7_22-release:1.1
	cygwin-1_7_21-release:1.1
	cygwin-1_7_20-release:1.1
	cygwin-1_7_19-release:1.1
	cygwin-64bit-postmerge:1.1
	cygwin-64bit-premerge-branch:1.1.0.4
	cygwin-64bit-premerge:1.1
	cygwin-1_7_18-release:1.1
	newlib-2_0_0:1.1
	cygwin-1_7_17-release:1.1
	cygwin-64bit-branch:1.1.0.2;
locks; strict;
comment	@ * @;


1.1
date	2012.10.09.12.05.51;	author corinna;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2012.10.16.15.58.10;	author corinna;	state Exp;
branches;
next	;


desc
@@


1.1
log
@	* libc/posix/wordfree.c (wordfree): The wrong words are freed
	when WRDE_DOOFFS is in use. Restructure the code so that the memory
	needed to be freed is instead kept in an internal linked list...
	* libc/posix/wordexp2.h: ...as defined here...
	* libc/posix/wordexp.c (wordexp): ...and build this internal
	linked list here, avoiding wasteful strdup calls in the process.
@
text
@/* Copyright (C) 2012 by  Peter Rosin. All rights reserved.
 *
 * Permission to use, copy, modify, and distribute this software
 * is freely granted, provided that this notice is preserved.
 */
#ifndef _WORDEXP2_H_

struct ewords_entry {
  SLIST_ENTRY(ewords_entry) next;
  char ewords[1];
};

typedef struct {
  SLIST_HEAD(ewords_head, ewords_entry) list;
  char *we_wordv[1];
} ext_wordv_t;

#define WE_WORDV_TO_EXT_WORDV(wordv) \
  (ext_wordv_t *)((void *)(wordv) - offsetof(ext_wordv_t, we_wordv))

#endif /* !_WORDEXP2_H_ */
@


1.1.2.1
log
@	Pull in changes from HEAD
	Align ChangeLog with head
	New file ChangeLog.64bit
@
text
@@

