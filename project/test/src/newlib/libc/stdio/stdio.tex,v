head	1.18;
access;
symbols
	cygwin-1_7_35-release:1.18
	cygwin-1_7_34-release:1.18
	newlib-2_2_0:1.18.0.2
	cygwin-1_7_33-release:1.15
	cygwin-1_7_32-release:1.15
	cygwin-1_7_31-release:1.15
	cygwin-1_7_30-release:1.15
	cygwin-1_7_29-release:1.15
	cygwin-1_7_28-release:1.15
	newlib-2_1_0:1.15
	cygwin-1_7_27-release:1.15
	cygwin-1_7_26-release:1.15
	cygwin-1_7_25-release:1.15
	cygwin-1_7_24-release:1.15
	cygwin-1_7_23-release:1.15
	cygwin-1_7_22-release:1.15
	cygwin-1_7_21-release:1.15
	cygwin-1_7_20-release:1.15
	cygwin-1_7_19-release:1.15
	cygwin-64bit-postmerge:1.15
	cygwin-64bit-premerge-branch:1.15.0.4
	cygwin-64bit-premerge:1.15
	cygwin-1_7_18-release:1.15
	newlib-2_0_0:1.15
	cygwin-1_7_17-release:1.15
	cygwin-64bit-branch:1.15.0.2
	cygwin-1_7_16-release:1.15
	cygwin-1_7_15-release:1.15
	cygwin-1_7_14_2-release:1.15
	cygwin-1_7_14-release:1.15
	cygwin-1_7_12-release:1.15
	cygwin-1_7_11-release:1.15
	cygwin-1_7_10-release:1.15
	newlib-1_20_0:1.15
	cygwin-1_7_9-release:1.15
	cygwin-1_7_8-release:1.15
	newlib-1_19_0:1.15
	cygwin-1_7_7-release:1.15
	cygwin-1_7_5-release:1.15
	cygwin-1_7_4-release:1.15
	cygwin-1_7_3-release:1.15
	cygwin-1_7_2-release:1.15
	newlib-1_18_0:1.15
	cygwin-1_7_1-release:1.15
	newlib-1_17_0-arc:1.12.0.2
	binutils-arc-20080908-branch:1.10.0.2
	binutils-arc-20080908-branchpoint:1.10
	newlib-1_17_0:1.12
	newlib-1_16_0:1.10
	newlib-1_15_0:1.7
	newlib-csl-coldfire-4_1-32:1.7
	newlib-csl-sourcerygxx-4_1-32:1.7
	newlib-csl-innovasic-fido-3_4_4-33:1.7
	newlib-csl-coldfire-4_1-30:1.7
	newlib-csl-sourcerygxx-4_1-30:1.7
	newlib-csl-coldfire-4_1-28:1.7
	newlib-csl-sourcerygxx-4_1-28:1.7
	newlib-csl-arm-2006q3-27:1.7
	newlib-csl-sourcerygxx-4_1-27:1.7
	newlib-csl-arm-2006q3-26:1.7
	newlib-csl-sourcerygxx-4_1-26:1.7
	newlib-csl-sourcerygxx-4_1-24:1.7
	newlib-csl-sourcerygxx-4_1-23:1.7
	newlib-csl-sourcerygxx-4_1-21:1.7
	newlib-csl-arm-2006q3-21:1.7
	newlib-csl-arm-2006q3-19:1.7
	newlib-csl-sourcerygxx-4_1-19:1.7
	newlib-csl-sourcerygxx-4_1-18:1.7
	newlib-csl-sourcerygxx-3_4_4-25:1.7
	newlib-csl-sourcerygxx-4_1-17:1.7
	cr-0x5f1:1.7.0.6
	newlib-csl-sourcerygxx-4_1-14:1.7
	newlib-csl-sourcerygxx-4_1-13:1.7
	newlib-csl-sourcerygxx-4_1-12:1.7
	newlib-csl-sourcerygxx-4_1-9:1.7
	newlib-csl-sourcerygxx-4_1-8:1.7
	newlib-csl-sourcerygxx-4_1-7:1.7
	newlib-csl-arm-2006q1-6:1.7
	newlib-csl-sourcerygxx-4_1-6:1.7
	newlib-csl-sourcerygxx-4_1-5:1.7
	newlib-csl-sourcerygxx-4_1-4:1.7
	newlib-autotools-branch:1.7.0.4
	newlib-csl-20060320-branch:1.7.0.2
	newlib-csl-20060320-branchpoint:1.7
	newlib-1_14_0:1.7
	newlib-csl-arm-2005-q1b:1.6
	newlib-csl-arm-2005-q1a:1.6
	newlib-1_13_0:1.6
	csl-arm-2004-q3:1.4
	csl-arm-2004-q1a:1.3
	csl-arm-2004-q1:1.3
	newlib-1_12_0:1.3
	csl-arm-2003-q4:1.3
	w32api-2_2:1.3
	mingw-runtime-2_4:1.3
	newlib-1_11_0:1.3
	cygnus_cvs_20020108_pre:1.2
	newlib-1_10_0:1.2
	newlib-1_9_0:1.2
	newlib-2000-02-17:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@% @;
expand	@o@;


1.18
date	2014.12.18.10.08.09;	author corinna;	state Exp;
branches;
next	1.17;

1.17
date	2014.12.15.18.22.56;	author yselkowitz;	state Exp;
branches;
next	1.16;

1.16
date	2014.12.11.16.53.32;	author yselkowitz;	state Exp;
branches;
next	1.15;

1.15
date	2009.07.03.11.58.04;	author ericb;	state Exp;
branches;
next	1.14;

1.14
date	2009.03.11.11.53.22;	author corinna;	state Exp;
branches;
next	1.13;

1.13
date	2009.03.06.09.55.52;	author corinna;	state Exp;
branches;
next	1.12;

1.12
date	2008.12.15.20.31.47;	author jjohnstn;	state Exp;
branches;
next	1.11;

1.11
date	2008.12.10.23.43.12;	author jjohnstn;	state Exp;
branches;
next	1.10;

1.10
date	2007.08.02.20.23.06;	author ericb;	state Exp;
branches;
next	1.9;

1.9
date	2007.07.19.03.42.21;	author ericb;	state Exp;
branches;
next	1.8;

1.8
date	2007.07.13.17.07.28;	author ericb;	state Exp;
branches;
next	1.7;

1.7
date	2005.10.11.23.59.32;	author jjohnstn;	state Exp;
branches;
next	1.6;

1.6
date	2004.11.24.00.45.41;	author jjohnstn;	state Exp;
branches;
next	1.5;

1.5
date	2004.11.20.01.42.35;	author jjohnstn;	state Exp;
branches;
next	1.4;

1.4
date	2004.09.16.21.14.44;	author jjohnstn;	state Exp;
branches;
next	1.3;

1.3
date	2002.07.17.23.25.44;	author jjohnstn;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.08.03.42.25;	author aoliva;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.39.47;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.17.19.39.47;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.18
log
@	* stdio.tex: Add menu entries for __fsetlocking and stdio_ext.
	* stdio_ext.c: Add "stdio_ext" to synopsis.
@
text
@@@node Stdio
@@chapter Input and Output (@@file{stdio.h})

This chapter comprises functions to manage files
or other input/output streams. Among these functions are subroutines
to generate or scan strings according to specifications from a format string.

The underlying facilities for input and output depend on the host
system, but these functions provide a uniform interface.

The corresponding declarations are in @@file{stdio.h}.

The reentrant versions of these functions use macros

@@example
_stdin_r(@@var{reent})
_stdout_r(@@var{reent})
_stderr_r(@@var{reent})
@@end example

@@noindent
instead of the globals @@code{stdin}, @@code{stdout}, and
@@code{stderr}.  The argument <[reent]> is a pointer to a reentrancy
structure.

@@menu
* clearerr::    Clear file or stream error indicator
* diprintf::    Print to a file descriptor (integer only)
* dprintf::     Print to a file descriptor
* fclose::      Close a file
* fcloseall::   Close all files
* fdopen::      Turn an open file into a stream
* feof::        Test for end of file
* ferror::      Test whether read/write error has occurred
* fflush::      Flush buffered file output
* fgetc::       Get a character from a file or stream
* fgetpos::     Record position in a stream or file
* fgets::       Get character string from a file or stream
* fgetwc::      Get a wide character from a file or stream
* fgetws::      Get a wide character string from a file or stream
* fileno::      Get file descriptor associated with stream
* fmemopen::    Open a stream around a fixed-length buffer
* fopen::       Open a file
* fopencookie:: Open a stream with custom callbacks
* fpurge::      Discard all pending I/O on a stream
* fputc::       Write a character on a stream or file
* fputs::       Write a character string in a file or stream
* fputwc::      Write a wide character to a file or stream
* fputws::      Write a wide character string to a file or stream
* fread::       Read array elements from a file
* freopen::     Open a file using an existing file descriptor
* fseek::       Set file position
* __fsetlocking::	Set or query locking mode on FILE stream
* fsetpos::     Restore position of a stream or file
* ftell::       Return position in a stream or file
* funopen::     Open a stream with custom callbacks
* fwide::	Set and determine the orientation of a FILE stream
* fwrite::      Write array elements from memory to a file or stream
* getc::        Get a character from a file or stream (macro)
* getc_unlocked::	Get a character from a file or stream (macro)
* getchar::     Get a character from standard input (macro)
* getchar_unlocked::	Get a character from standard input (macro)
* getdelim::    Get character string from a file or stream
* getline::     Get character string from a file or stream
* gets::        Get character string from standard input (obsolete)
* getw::        Get a word (int) from a file or stream
* getwchar::    Get a wide character from standard input
* mktemp::      Generate unused file name
* open_memstream::	Open a write stream around an arbitrary-length buffer
* perror::      Print an error message on standard error
* putc::        Write a character on a stream or file (macro)
* putc_unlocked::	Write a character on a stream or file (macro)
* putchar::     Write a character on standard output (macro)
* putchar_unlocked::	Write a character on standard output (macro)
* puts::        Write a character string on standard output
* putw::        Write a word (int) to a file or stream
* putwchar::    Write a wide character to standard output
* remove::      Delete a file's name
* rename::      Rename a file
* rewind::      Reinitialize a file or stream
* setbuf::      Specify full buffering for a file or stream
* setbuffer::   Specify full buffering for a file or stream with size
* setlinebuf::  Specify line buffering for a file or stream
* setvbuf::     Specify buffering for a file or stream
* siprintf::    Write formatted output (integer only)
* siscanf::     Scan and format input (integer only)
* sprintf::     Write formatted output
* sscanf::      Scan and format input
* stdio_ext::	Access internals of FILE structure
* swprintf::    Write formatted wide character output
* swscanf::     Scan and format wide character input
* tmpfile::     Create a temporary file
* tmpnam::      Generate name for a temporary file
* ungetc::      Push data back into a stream
* ungetwc::     Push wide character data back into a stream
* vfprintf::    Format variable argument list
* vfscanf::     Scan variable argument list
* vfwprintf::   Format variable wide character argument list
* vfwscanf::    Scan and format argument list from wide character input
* viprintf::    Format variable argument list (integer only)
* viscanf::     Scan variable format list (integer only)
@@end menu

@@page
@@include stdio/clearerr.def

@@page
@@include stdio/diprintf.def

@@page
@@include stdio/dprintf.def

@@page
@@include stdio/fclose.def

@@page
@@include stdio/fcloseall.def

@@page
@@include stdio/fdopen.def

@@page
@@include stdio/feof.def

@@page
@@include stdio/ferror.def

@@page
@@include stdio/fflush.def

@@page
@@include stdio/fgetc.def

@@page
@@include stdio/fgetpos.def

@@page
@@include stdio/fgets.def

@@page
@@include stdio/fgetwc.def

@@page
@@include stdio/fgetws.def

@@page
@@include stdio/fileno.def

@@page
@@include stdio/fmemopen.def

@@page
@@include stdio/fopen.def

@@page
@@include stdio/fopencookie.def

@@page
@@include stdio/fpurge.def

@@page
@@include stdio/fputc.def

@@page
@@include stdio/fputs.def

@@page
@@include stdio/fputwc.def

@@page
@@include stdio/fputws.def

@@page
@@include stdio/fread.def

@@page
@@include stdio/freopen.def

@@page
@@include stdio/fseek.def

@@page
@@include stdio/fsetlocking.def

@@page
@@include stdio/fsetpos.def

@@page
@@include stdio/ftell.def

@@page
@@include stdio/funopen.def

@@page
@@include stdio/fwide.def

@@page
@@include stdio/fwrite.def

@@page
@@include stdio/getc.def

@@page
@@include stdio/getc_u.def

@@page
@@include stdio/getchar.def

@@page
@@include stdio/getchar_u.def

@@page
@@include stdio/getdelim.def

@@page
@@include stdio/getline.def

@@page
@@include stdio/gets.def

@@page
@@include stdio/getw.def

@@page
@@include stdio/getwchar.def

@@page
@@include stdio/mktemp.def

@@page
@@include stdio/open_memstream.def

@@page
@@include stdio/perror.def

@@page
@@include stdio/putc.def

@@page
@@include stdio/putc_u.def

@@page
@@include stdio/putchar.def

@@page
@@include stdio/putchar_u.def

@@page
@@include stdio/puts.def

@@page
@@include stdio/putw.def

@@page
@@include stdio/putwchar.def

@@page
@@include stdio/remove.def

@@page
@@include stdio/rename.def

@@page
@@include stdio/rewind.def

@@page
@@include stdio/setbuf.def

@@page
@@include stdio/setbuffer.def

@@page
@@include stdio/setlinebuf.def

@@page
@@include stdio/setvbuf.def

@@page
@@include stdio/siprintf.def

@@page
@@include stdio/siscanf.def

@@page
@@include stdio/sprintf.def

@@page
@@include stdio/sscanf.def

@@page
@@include stdio/stdio_ext.def

@@page
@@include stdio/swprintf.def

@@page
@@include stdio/swscanf.def

@@page
@@include stdio/tmpfile.def

@@page
@@include stdio/tmpnam.def

@@page
@@include stdio/ungetc.def

@@page
@@include stdio/ungetwc.def

@@page
@@include stdio/vfprintf.def

@@page
@@include stdio/vfscanf.def

@@page
@@include stdio/vfwprintf.def

@@page
@@include stdio/vfwscanf.def

@@page
@@include stdio/viprintf.def

@@page
@@include stdio/viscanf.def
@


1.17
log
@* libc/include/stdio.h (__SNLK): Define.
* libc/include/stdio_ext.h (FSETLOCKING_QUERY, FSETLOCKING_INTERNAL,
FSETLOCKING_BYCALLER): Define.
(__fsetlocking): Declare.
* libc/stdio/Makefile.am: Build fsetlocking.c.
* libc/stdio/Makefile.in: Regenerate.
* libc/stdio/fsetlocking.c: New file.
* libc/stdio/local.h (_newlib_flockfile_start): Make _flockfile
call dependent on __SNLK flag.
(_newlib_flockfile_exit, _newlib_flockfile_end): Ditto for
_funlockfile calls.
Define all locking macros as empty if __SINGLE_THREAD__.
* libc/stdio/stdio.tex: Include fsetlocking.def.
@
text
@d53 1
d89 1
@


1.16
log
@* libc/include/stdio_ext.h: Rename __fwriteable to __fwritable.
[!__GNUC__]: Declare real functions for the macros, and make
the macros conditional on !__cplusplus.
* libc/stdio/Makefile.am (ELIX_4_SOURCES): Add stdio_ext.c.
(CHEWOUT_FILES): Add stdio_ext.def.
* libc/stdio/Makefile.in: Regenerate.
* libc/stdio/stdio.tex: Include stdio_ext.def.
* libc/stdio/stdio_ext.c: New file.
@
text
@d181 3
@


1.15
log
@Add fpurge.

* libc/stdio/fpurge.c (fpurge, _fpurge_r): New file.
* libc/stdio/Makefile.am (ELIX_4_SOURCES, CHEWOUT_FILES, fpurge):
Build it.
* libc/stdio/Makefile.in: Regenerated.
* libc/include/stdio.h (fpurge, _fpurge_r): New declarations.
* libc/stdio/stdio.tex: Build documentation.
@
text
@d286 3
@


1.14
log
@	* libc/include/wchar.h (fwscanf, swscanf, vfwscanf, vswscanf, vwscanf,
	wscanf): Declare.
	(_fwscanf_r, _swscanf_r, _vfwscanf_r, _vswscanf_r, _vwscanf_r,
	_wscanf_r): Declare.
	* libc/stdio/Makefile.am: Add new wscanf files.
	* libc/stdio/Makefile.in: Regenerate.
	* libc/stdio/fwscanf.c: New file.
	* libc/stdio/local.h (__svfwscanf_r, __ssvfwscanf_r, __svfiwscanf_r,
	__ssvfiwscanf_r): Declare.
	* libc/stdio/stdio.tex: Add new documentation references.
	* libc/stdio/swscanf.c: New file.
	* libc/stdio/vfwscanf.c: New file.
	* libc/stdio/vswscanf.c: New file.
	* libc/stdio/vwscanf.c: New file.
	* libc/stdio/wscanf.c: New file.

	* libc/stdio/vfscanf.c (_sungetc_r): Make externaly available.  Only
	define if INTEGER_ONLY is defined.  Declare otherwise.
	(__ssrefill_r): Ditto.
	(_sfread_r): Ditto.

	Remove static eofread/eofread1 functions and use __seofread
	function instead, throughout.
	* libc/stdio/local.h (__seofread): Declare.
	* libc/stdio/stdio.c (__seofread): Define.

	* libc/stdio/fgetwc.c (__fgetwc): Fix compiler warning.
	* libc/stdio/fgetws.c (_fgetws_r): Ditto.
	* libc/stdio/fread.c (_fread_r): Ditto.
	* libc/stdio/vfprintf.c: Ditto.
	* libc/stdio/vswprintf.c: Ditto.
@
text
@d45 1
d157 3
@


1.13
log
@	* libc/include/stdio.h (__VALIST): Guard against multiple definition.
	* libc/include/wchar.h: Include stdarg.h.
	(__VALIST): Define conditionally.
	(fwprintf, swprintf, vfwprintf, vswprintf, vwprintf, wprintf: Declare.
	(_fwprintf_r, _swprintf_r, _vfwprintf_r, _vswprintf_r, _vwprintf_r,
	 _wprintf_r): Declare.
	* libc/stdio/Makefile.am: Add new files.
	* libc/stdio/Makefile.in: Regenerate.
	* libc/stdio/fwprintf.c: New file.
	* libc/stdio/local.h (_svfwprintf_r, _svfiwprintf_r): Declare.
	(__CH_CLASS, __STATE, __ACTION): Move definition from vfprintf.c here
	and move to the __ namespace.
	(__chclass, __state_table, __action_table): Declare.
	* libc/stdio/stdio.tex: Add new documentation references.
	* libc/stdio/swprintf.c: New file.
	* libc/stdio/vfprintf.c (__SPRINT): New macro to call the right
	__sprint_r function according to compilation unit.  Use throughout.
	(__ssprint_r): Rename STRING_ONLY variant from __sprint_r.
	Make externaly available.  Only define if INTEGER_ONLY is defined.
	(__sprint_r): Make externaly available.  Only define if INTEGER_ONLY
	is defined.  Handle stream orientation.
	(__sbprintf): Copy FILE's _flags2 member as well.
	(__chclass, __state_table, __action_table): Prepend __ to name and
	make externally available.
	* libc/stdio/vfwprintf.c: New file.
	* libc/stdio/vswprintf.c: New file.
	* libc/stdio/vwprintf.c: New file.
	* libc/stdio/wprintf.c: New file.
@
text
@d88 1
d96 1
d285 3
d309 3
@


1.12
log
@
2008-12-15  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/stdio/stdio.tex: Remove putwc and getwc references as they
        are included as part of fputwc and fgetwc, respectively.
@
text
@d87 1
d94 1
d280 3
d301 3
@


1.11
log
@
2008-12-10  Corinna Vinschen  <corinna@@vinschen.de>

        Implement basic wide char stdio functionality, based on FreeBSD.
        * libc/include/stdio.h (__SORD): Define.
        (__SWID): Define.
        * libc/include/wchar.h: Add declarations for new wide char functions.
        (getwc): Define as macro.
        (getwchar): Ditto.
        (putwc): Ditto.
        (putwchar): Ditto.
        * libc/include/sys/reent.h (struct __sFILE): Add _mbstate member.
        (struct __sFILE64): Ditto.
        * libc/stdio/Makefile.am (ELIX_4_SOURCES): Add fgetwc.c, fgetws.c,
        fputwc.c, fputws.c, fwide.c, getwc.c, getwchar.c, putwc.c, putwchar.c
        and ungetwc.c.
        (CHEWOUT_FILES): Add fgetwc.def, fgetws.def, fputwc.def, fputws.def,
        fwide.def, getwc.def, getwchar.def, putwc.def, putwchar.def and
        ungetwc.def.
        Add header dependency rules for the new files.
        * libc/stdio/Makefile.in: Regenerate.
        * libc/stdio/fgetwc.c: New file, implementing fgetwc and _fgetwc_r.
        * libc/stdio/fgetws.c: New file, implementing fgetws and _fgetws_r.
        * libc/stdio/findfp.c (std): Initialize FILE's _mbstate member.
        (__sfmoreglue): Ditto.
        * libc/stdio/fputs.c (_fputs_r): Set stream orientation.
        * libc/stdio/fputwc.c: New file, implementing fputwc and _fputwc_r.
        * libc/stdio/fputws.c: New file, implementing fputws and _fputws_r.
        * libc/stdio/fread.c (_fread_r): Set stream orientation.
        * libc/stdio/freopen.c (_freopen_r): Reset stream orientation.  Reset
        _mbstate.
        * libc/stdio/fseek.c (_fseek_r): Reset _mbstate.
        * libc/stdio/fwide.c: New file, implementing fwide and _fwide_r.
        * libc/stdio/fwrite.c (_fwrite_r): Set stream orientation.
        * libc/stdio/getwc.c: New file, implementing getwc and _getwc_r.
        * libc/stdio/getwchar.c: New file, implementing getwchar and
        _getwchar_r.
        * libc/stdio/local.h (ORIENT): New macro.
        * libc/stdio/puts.c (_puts_r): Set stream orientation.
        * libc/stdio/putwc.c: New file, implementing putwc and _putwc_r.
        * libc/stdio/putwchar.c: New file, implementing putwchar and
        _putwchar_r.
        * libc/stdio/refill.c (__srefill_r): Set stream orientation.
        * libc/stdio/stdio.tex: Add documentation for new functions.
        * libc/stdio/ungetc.c (_ungetc_r): Set stream orientation.
        * libc/stdio/ungetwc.c: New file, implementing ungetwc and _ungetwc_r.
        * libc/stdio/vfscanf.c (__SVFSCANF_R): Set stream orientation.
        * libc/stdio/wbuf.c (__swbuf_r): Ditto.
@
text
@a64 1
* getwc::       Get a wide character from a file or stream
a74 1
* putwc::       Write a wide character to a file or stream
@


1.10
log
@Implement fmemopen and open_memstream.
* libc/stdio/fmemopen.c (_fmemopen_r, fmemopen): New file.
* libc/stdio/open_memstream.c (_open_memstream_r, open_memstream):
New file.
* libc/stdio/fopencookie.c (fcwriter): Minor optimization.
* libc/include/stdio.h (dprintf, vdprintf): Group all POSIX 200x
functions together.
(fmemopen, open_memstream): Declare new functions.
* libc/stdio/stdio.tex: Document them.
* libc/stdio/Makefile.am (ELIX_4_SOURCES, CHEWOUT_FILES): Add
fmemopen and open_memstream.
* libc/stdio/Makefile.in: Regenerate.
@
text
@d39 2
d47 2
d55 1
d65 2
d76 2
d92 1
d136 6
d160 6
d184 3
d214 3
d244 3
d289 3
@


1.9
log
@Fix 'make info'.
* libc/stdio/stdio.tex: Add missing include.
* libc/stdio/vfprintf.c: Use expected node name.
* libc/stdio/vfscanf.c: Likewise.
* libc/stdio/sscanf.c: Likewise.
* libc/stdio/sprintf.c: Likewise.
* libc/stdio/siscanf.c: Likewise.
* libc/stdio/siprintf.c: Likewise.
* libc/stdio/fopencookie.c: Quote raw {}.
Reported by DJ Delorie.
@
text
@d40 1
d61 1
d129 3
d192 3
@


1.8
log
@Documentation updates.
* libc/stdio/ungetc.c: Document ungetc.
* libc/stdio/Makefile.am (CHEWOUT_FILES): Sort, match current list
of files with documentation.
* libc/stdio/Makefile.in: Regenerate.
* libc/stdio/stdio.tex: Sort and update stdio documentation index.
@
text
@d154 3
@


1.7
log
@
2005-10-11  Shaun Jackman  <sjackman@@gmail.com>

        * libc/include/stdio.h (dprintf): New declaration.
        (vdprintf): Ditto.
        * libc/stdio/Makefile.am (GENERAL_SOURCES): Add dprintf.c
        and vdprintf.c.
        * libc/stdio/Makefile.in: Regenerate.
        * libc/stdio/dprintf.c: New file.
        * libc/stdio/vdprintf.c: New file.
        * libc/stdio/stdio.tex (dprintf): New entry.
@
text
@d2 1
a2 1
@@chapter Input and Output (@@file{stdio.h}) 
d6 1
a6 1
to generate or scan strings according to specifications from a format string. 
d25 2
a26 2
 
@@menu  
d28 1
d32 1
d41 1
a41 1
* fdopen::	Turn an open file into a stream
d49 1
d74 4
a77 4
* printf::      Write formatted output
* scanf::       Scan and format input
* iprintf::     Write formatted output (integer only)
* iscanf::      Scan and format input (integer only)
d80 6
a85 5
* viprintf::    Format variable argument list for non-floating-point output
* viscanf::     Scan variable format list for non-floating-point input
* vprintf::     Format variable argument list
* vscanf::      Format variable argument list
@@end menu 
d91 3
d103 3
d114 2
a115 2
@@page 
@@include stdio/fgetc.def 
d120 2
a121 2
@@page 
@@include stdio/fgets.def 
d130 1
a130 1
@@include stdio/fdopen.def
d156 2
a157 2
@@page 
@@include stdio/getc.def 
d163 1
a163 1
@@include stdio/getchar.def 
d174 1
a174 1
@@page 
d177 2
a178 2
@@page 
@@include stdio/getw.def 
d201 2
a202 2
@@page 
@@include stdio/putw.def 
d225 2
a226 2
@@page 
@@include stdio/sprintf.def 
d229 1
a229 1
@@include stdio/sscanf.def 
d231 2
a232 2
@@page 
@@include stdio/siprintf.def 
d234 2
a235 2
@@page 
@@include stdio/siscanf.def 
d243 5
a247 2
@@page 
@@include stdio/vfprintf.def 
d252 2
a253 5
@@page 
@@include stdio/viprintf.def 

@@page 
@@include stdio/viscanf.def 
d255 2
@


1.6
log
@
2004-11-23  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/stdio.h: Add new iprintf and iscanf variants.  Also
        do some reordering.
        * libc/machine/powerpc/vfscanf.c: Remove __sccl function.
        * libc/stdio/Makefile.am: Add support for new iprintf and iscanf
        family functions.
        * libc/stdio/Makefile.in: Regenerated.
        * libc/stdio/fiprintf.c: Remove doc to siprintf.c.
        * libc/stdio/iprintf.c: Ditto.
        * libc/stdio/local.h (__svfiscanf_r): New prototype.
        * libc/stdio/siprintf.c: Add docs for various iprintf family functions.
        * libc/stdio/sniprintf.c: Move docs to siprintf.c.
        * libc/stdio/stdio.tex: Add new functions.
        * libc/stdio/vfscanf.c: Split out __sccl function to separate
        file and add special name defines so this file can be used
        to build vfiscanf.o.
        * libc/stdio/asiprintf.c: New file.
        * libc/stdio/fiscanf.c: Ditto.
        * libc/stdio/iscanf.c: Ditto.
        * libc/stdio/sccl.c: Ditto.
        * libc/stdio/siscanf.c: Ditto.
        * libc/stdio/vasiprintf.c: Ditto.
        * libc/stdio/viprintf.c: Ditto.
        * libc/stdio/viscanf.c: Ditto.
        * libc/stdio/vsiprintf.c: Ditto.
        * libc/stdio/vsiscanf.c: Ditto.
        * libc/stdio/vsniprintf.c: Ditto.
@
text
@d28 1
d87 3
@


1.5
log
@
2004-11-19  Shaun Jackman  <sjackman@@gmail.com>

        * libc/include/stdio.h: Add sniprintf.
        * libc/stdio/Makefile.am: Add sniprintf.c.
        * libc/stdio/Makefile.in: Regenerated.
        * libc/stdio/sniprintf.c: New file.
        * libc/stdio/stdio.tex: Add sniprintf.
@
text
@a36 1
* fiprintf::    Write formatted output to file (integer only)
a54 1
* iprintf::     Write formatted output (integer only)
a69 2
* siprintf::    Write formatted output to string (integer only)
* sniprintf::   Write formatted output to string up to max size (integer only)
d72 2
d76 2
a112 3
@@include stdio/fiprintf.def

@@page
a166 3
@@include stdio/iprintf.def 

@@page
d212 4
a215 1
@@include stdio/siprintf.def 
d218 1
a218 1
@@include stdio/sniprintf.def 
d221 1
a221 4
@@include stdio/sprintf.def 

@@page
@@include stdio/sscanf.def 
d234 7
@


1.4
log
@
2004-09-16  Antony King  <antony.king@@st.com>

        * libc/ctype/ctype.tex: Added missing documentation.
        * libc/stdio/stdio.tex Ditto.
        * libc/stdlib/stdlib.tex Ditto.
        * libc/string/strings.tex Ditto.
        * libc/time/time.tex: Ditto.
        * libc/stdio/setbuffer.c: Removed setlinebuf documentation.
@
text
@d72 2
a73 1
* siprintf::    Write formatted output (integer only)
d221 3
@


1.3
log
@
2002-07-17  Jeff Johnston  <jjohnstn@@redhat.com>

        * configure.host(stdio64_dir): New setting that is used to
        enable building of new stdio64 directory.
        * libc/Makefile.am[HAVE_STDIO64_DIR]: Add support for
        large files.
        (stmp-stdio64,stdio64.texi): New targets to optionally add in
        stdio64 info to info files.
        * libc/Makefile.in: Regenerated.
        * libc/configure: Ditto.
        * libc/configure.in: Add configuration variables that are set
        when stdio64 is selected as subdir in configure.host.
        * libc/libc.texinfo: Add optional menu item for Stdio64, based
        on whether STDIO64 flag is set or not.
        * libc/sys.tex: Add optional stdio64 syscalls based on whether
        STDIO64 flag is set or not.
        * libc/include/reent.h[__LARGE64_FILES]: Add new stdio64
        _r sycall routines.
        * libc/include/stdio.h[__LARGE64_FILES]: Add new stdio64 prototypes.
        (FILE): Typedef'd to __FILE instead of struct __sFILE directly.
        (__SL64): New file flag indicating file is opened via fopen64.
        * libc/include/sys/_types.h(_off64_t): Added.
        * libc/include/sys/config.h: For x86-linux, define __LARGE64_FILES.
        * libc/include/sys/reent.h(struct __sFILE64): New file structure
        for 64-bit offset large file support.
        (__FILE): New intermediate type either set to struct __sFILE64 or
        struct __sFILE, depending on whether __LARGE64_FILES is set or not.
        * libc/reent/Makefile.am[HAVE_STDIO64_DIR]: Add new files.
        * libc/reent/Makefile.in: Regenerated.
        * libc/reent/fstat64r.c: New file.
        * libc/reent/lseek64r.c: Ditto.
        * libc/reent/open64r.c: Ditto.
        * libc/reent/reent.tex: Optionally add stdio64 reentrant syscalls
        based on whether STDIO64 flag is set.
        * libc/stdio/stdio.tex: Add blank line.
        * libc/stdio64/Makefile.am: New file.
        * libc/stdio64/Makefile.in: Ditto.
        * libc/stdio64/fgetpos64.c: Ditto.
        * libc/stdio64/fopen64.: Ditto.
        * libc/stdio64/freopen64.c: Ditto.
        * libc/stdio64/fseeko64.c: Ditto.
        * libc/stdio64/fsetpos64.c: Ditto.
        * libc/stdio64/ftello64.c: Ditto.
        * libc/stdio64/local64.h: Ditto.
        * libc/stdio64/stdio64.c: Ditto.
        * libc/stdio64/stdio64.tex: Ditto.
        * libc/stdio64/tmpfile64.c: Ditto.
        * libc/sys/linux/io64.c: Add weak aliases for lseek64, fstat64, and
        open64.
@
text
@d29 1
d36 1
d49 1
d51 3
d60 1
d62 1
d69 2
d78 1
d88 3
d109 3
d148 3
d153 9
d181 3
d187 3
d208 6
d234 2
@


1.2
log
@* libc/stdio/Makefile.am (lib_a_SOURCES): Added getw.c and putw.c.
(CHEWOUT_FILES): Added getw.def and putw.def.
* libc/stdio/Makefile.in: Rebuilt.
* libc/stdio/stdio.tex: Include getw.def and putw.def.
* libc/stdio/getw.c: New file.
* libc/stdio/putw.c: New file.
@
text
@d192 1
@


1.1
log
@Initial revision
@
text
@d49 1
d56 1
d136 3
d156 3
@


1.1.1.1
log
@import newlib-2000-02-17 snapshot
@
text
@@
