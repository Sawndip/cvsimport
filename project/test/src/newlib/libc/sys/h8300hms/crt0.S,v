head	1.10;
access;
symbols
	cygwin-1_7_35-release:1.10
	cygwin-1_7_34-release:1.10
	newlib-2_2_0:1.10.0.16
	cygwin-1_7_33-release:1.10
	cygwin-1_7_32-release:1.10
	cygwin-1_7_31-release:1.10
	cygwin-1_7_30-release:1.10
	cygwin-1_7_29-release:1.10
	cygwin-1_7_28-release:1.10
	newlib-2_1_0:1.10
	cygwin-1_7_27-release:1.10
	cygwin-1_7_26-release:1.10
	cygwin-1_7_25-release:1.10
	cygwin-1_7_24-release:1.10
	cygwin-1_7_23-release:1.10
	cygwin-1_7_22-release:1.10
	cygwin-1_7_21-release:1.10
	cygwin-1_7_20-release:1.10
	cygwin-1_7_19-release:1.10
	cygwin-64bit-postmerge:1.10
	cygwin-64bit-premerge-branch:1.10.0.14
	cygwin-64bit-premerge:1.10
	cygwin-1_7_18-release:1.10
	newlib-2_0_0:1.10
	cygwin-1_7_17-release:1.10
	cygwin-64bit-branch:1.10.0.12
	cygwin-1_7_16-release:1.10
	cygwin-1_7_15-release:1.10
	cygwin-1_7_14_2-release:1.10
	cygwin-1_7_14-release:1.10
	cygwin-1_7_12-release:1.10
	cygwin-1_7_11-release:1.10
	cygwin-1_7_10-release:1.10
	newlib-1_20_0:1.10
	cygwin-1_7_9-release:1.10
	cygwin-1_7_8-release:1.10
	newlib-1_19_0:1.10
	cygwin-1_7_7-release:1.10
	cygwin-1_7_5-release:1.10
	cygwin-1_7_4-release:1.10
	cygwin-1_7_3-release:1.10
	cygwin-1_7_2-release:1.10
	newlib-1_18_0:1.10
	cygwin-1_7_1-release:1.10
	newlib-1_17_0-arc:1.10.0.10
	binutils-arc-20080908-branch:1.10.0.8
	binutils-arc-20080908-branchpoint:1.10
	newlib-1_17_0:1.10
	newlib-1_16_0:1.10
	newlib-1_15_0:1.10
	newlib-csl-coldfire-4_1-32:1.10
	newlib-csl-sourcerygxx-4_1-32:1.10
	newlib-csl-innovasic-fido-3_4_4-33:1.10
	newlib-csl-coldfire-4_1-30:1.10
	newlib-csl-sourcerygxx-4_1-30:1.10
	newlib-csl-coldfire-4_1-28:1.10
	newlib-csl-sourcerygxx-4_1-28:1.10
	newlib-csl-arm-2006q3-27:1.10
	newlib-csl-sourcerygxx-4_1-27:1.10
	newlib-csl-arm-2006q3-26:1.10
	newlib-csl-sourcerygxx-4_1-26:1.10
	newlib-csl-sourcerygxx-4_1-24:1.10
	newlib-csl-sourcerygxx-4_1-23:1.10
	newlib-csl-sourcerygxx-4_1-21:1.10
	newlib-csl-arm-2006q3-21:1.10
	newlib-csl-arm-2006q3-19:1.10
	newlib-csl-sourcerygxx-4_1-19:1.10
	newlib-csl-sourcerygxx-4_1-18:1.10
	newlib-csl-sourcerygxx-3_4_4-25:1.10
	newlib-csl-sourcerygxx-4_1-17:1.10
	cr-0x5f1:1.10.0.6
	newlib-csl-sourcerygxx-4_1-14:1.10
	newlib-csl-sourcerygxx-4_1-13:1.10
	newlib-csl-sourcerygxx-4_1-12:1.10
	newlib-csl-sourcerygxx-4_1-9:1.10
	newlib-csl-sourcerygxx-4_1-8:1.10
	newlib-csl-sourcerygxx-4_1-7:1.10
	newlib-csl-arm-2006q1-6:1.10
	newlib-csl-sourcerygxx-4_1-6:1.10
	newlib-csl-sourcerygxx-4_1-5:1.10
	newlib-csl-sourcerygxx-4_1-4:1.10
	newlib-autotools-branch:1.10.0.4
	newlib-csl-20060320-branch:1.10.0.2
	newlib-csl-20060320-branchpoint:1.10
	newlib-1_14_0:1.10
	newlib-csl-arm-2005-q1b:1.10
	newlib-csl-arm-2005-q1a:1.10
	newlib-1_13_0:1.10
	csl-arm-2004-q3:1.10
	csl-arm-2004-q1a:1.9
	csl-arm-2004-q1:1.9
	newlib-1_12_0:1.9
	csl-arm-2003-q4:1.9
	w32api-2_2:1.5
	mingw-runtime-2_4:1.5
	newlib-1_11_0:1.4
	cygnus_cvs_20020108_pre:1.4
	newlib-1_10_0:1.4
	newlib-1_9_0:1.2
	newlib-2000-02-17:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.10
date	2004.06.22.21.54.52;	author aoliva;	state Exp;
branches;
next	1.9;

1.9
date	2003.06.24.18.13.35;	author rsandifo;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.10.07.44.30;	author rsandifo;	state Exp;
branches;
next	1.7;

1.7
date	2003.05.28.18.00.17;	author jjohnstn;	state Exp;
branches;
next	1.6;

1.6
date	2003.03.18.20.38.04;	author jjohnstn;	state Exp;
branches;
next	1.5;

1.5
date	2003.01.31.20.35.24;	author jjohnstn;	state Exp;
branches;
next	1.4;

1.4
date	2001.09.07.18.21.33;	author jjohnstn;	state Exp;
branches;
next	1.3;

1.3
date	2001.09.04.19.05.44;	author jjohnstn;	state Exp;
branches;
next	1.2;

1.2
date	2000.08.30.22.17.17;	author jjohnstn;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.39.50;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.17.19.39.50;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.10
log
@2003-07-02  Richard Sandiford  <rsandifo@@redhat.com>
* libc/machine/h8300/Makefile.am (lib_a_SOURCES): Add h8sx_strcpy.S.
* libc/machine/h8300/defines.h (LEN): New macro.
* libc/machine/h8300/memcpy.S: Add h8sx version.
* libc/machine/h8300/memset.S: Likewise.
* libc/machine/h8300/strcmp.S: Likewise.
* libc/machine/h8300/setjmp.S: Use h8sx move instructions.
* libc/machine/h8300/h8sx_strcpy.S: New file.
2003-06-30  Richard Sandiford  <rsandifo@@redhat.com>
* libc/include/machine/ieeefp.h: Extend __H8300S__ handling to
__H8300SX__.
* libc/include/machine/setjmp.h: Likewise.
* libc/include/sys/config.h: Likewise.
* libc/machine/h8300/defines.h: Likewise.
* libc/machine/h8300/setjmp.S: Likewise.
* libc/machine/h8300/strcmp.S: Likewise.
* libc/sys/h8300hms/close.S: Likewise.
* libc/sys/h8300hms/fstat.S: Likewise.
* libc/sys/h8300hms/lseek.S: Likewise.
* libc/sys/h8300hms/read.S: Likewise.
* libc/sys/h8300hms/write.S: Likewise.
* libc/sys/h8300hms/crt0.S: Likewise.
* libc/machine/h8300/setarch.h: Use .h8300sx or .h8300sxn if
__H8300SX__ is defined.
* libc/sys/h8300hms/setarch.h: Likewise.
@
text
@; h8/300 and h8/300h start up file.

#include "setarch.h"

#ifdef __H8300__

	.section .text
	.global	_start
_start:
	mov.w	#_stack,sp
	mov.w	#_edata,r0
	mov.w	#_end,r1
	sub.w   r2,r2
.Loop:	mov.w	r2,@@r0
	adds	#2,r0
	cmp	r1,r0
	blo	.Loop
#ifdef __ELF__
	mov.l   #__fini,r0
	jsr     @@_atexit
#ifdef __SIMULATOR__
        jsr     @@0xcc
#endif
	jsr     @@__init
#else
#ifdef __SIMULATOR__
        jsr     @@0xcc
#endif
	jsr	@@___main
#endif
	jsr	@@_main
	jsr	@@_exit

	.section .stack
_stack:	.word 	1

#endif

#ifdef __H8300H__

	.section .text
	.global	_start
_start:
	mov.l	#_stack,sp
	mov.l	#_edata,er0
	mov.l	#_end,er1
	sub.w   r2,r2           ; not sure about alignment requirements
.Loop:	mov.w	r2,@@er0		; playing it safe for now
	adds	#2,er0
	cmp.l	er1,er0
	blo	.Loop
#ifdef __ELF__
	mov.l   #__fini,er0
	jsr     @@_atexit
#ifdef __SIMULATOR__
        jsr     @@0xcc
#endif
	jsr     @@__init
#else
#ifdef __SIMULATOR__
        jsr     @@0xcc
#endif
	jsr	@@___main
#endif
	jsr	@@_main
	jsr	@@_exit

	.section .stack
_stack:	.long 	1

#endif

#if defined (__H8300S__) || defined (__H8300SX__)

	.section .text
	.global	_start
_start:
	mov.l	#_stack,sp
	mov.l	#_edata,er0
	mov.l	#_end,er1
	sub.w   r2,r2           ; not sure about alignment requirements
.Loop:	mov.w	r2,@@er0		; playing it safe for now
	adds	#2,er0
	cmp.l	er1,er0
	blo	.Loop
#ifdef __ELF__
	mov.l   #__fini,er0
	jsr     @@_atexit
#ifdef __SIMULATOR__
        jsr     @@0xcc
#endif
	jsr     @@__init
#else
#ifdef __SIMULATOR__
        jsr     @@0xcc
#endif
	jsr	@@___main
#endif
	jsr	@@_main
	jsr	@@_exit

	.section .stack
_stack:	.long 	1

#endif
@


1.9
log
@	* libc/sys/h8300hms/crt0.S (_start): Fix register sizes in call
	to atexit().
@
text
@d73 1
a73 1
#ifdef __H8300S__
@


1.8
log
@	* libc/sys/h8300hms/setarch.h: New file.
	* libc/sys/h8300hms/close.S, libc/sys/h8300hms/fstat.S,
	libc/sys/h8300hms/lseek.S, libc/sys/h8300hms/open.S,
	libc/sys/h8300hms/read.S, libc/sys/h8300hms/stat.S,
	libc/sys/h8300hms/write.S, libc/sys/h8300hms/crt0.S: Use it.
@
text
@d53 1
a53 1
	mov.l   #__fini,r0
d87 1
a87 1
	mov.l   #__fini,r0
@


1.7
log
@
2003-05-28  Dhananjay Deshpande  <dhananjayd@@kpitcummins.com>

        * newlib/libc/machine/h8300/memcpy.S: Use .h8300hn and .h8300sn for
        normal mode
        * newlib/libc/machine/h8300/memset.S: Likewise
        * newlib/lib/machine/h8300/reg_memcpy.S: Likewise
        * newlib/lib/machine/h8300/reg_memset.S: Likewise
        * newlib/lib/machine/h8300/setjmp.S: Likewise
        * newlib/lib/machine/h8300/strcmp.S: Likewise
        * newlib/lib/sys/h8300hms/crt0.S: Likewise
@
text
@d3 2
a40 5
#ifdef __NORMAL_MODE__
	.h8300hn
#else
	.h8300h
#endif
d74 1
a74 5
#ifdef __NORMAL_MODE__
	.h8300sn
#else
	.h8300s
#endif
@


1.6
log
@
2003-03-18  D.Venkatasubramanian  <dvenkat@@noida.hcltech.com>

        * libc/include/sys/h8300hms/crt0.S[__SIMULATOR__]: Add commandline
        support.
        * configure.host (h8300*-*-*): Added comment regarding -D__SIMULATOR__
        flag to support simulator only extensions.
@
text
@d39 3
d43 1
d77 3
a79 1

d81 1
@


1.5
log
@
2003-01-31  Michael Snyder  <msnyder@@redhat.com>

	* libc/sys/h8300hms/crt0.S (_start): Change local label
	from .loop to .Loop, so that ld and gdb will ignore it.
@
text
@d19 3
d24 3
d54 3
d59 3
d89 3
d94 3
@


1.4
log
@
2001-09-07  Jeff Law  <law@@redhat.com>

        * libc/sys/h8300hms/crt0.S: For H8/300H and H8/S, load address of
        __fini with "mov.l" instead of "mov.w".
@
text
@d12 1
a12 1
.loop:	mov.w	r2,@@r0
d15 1
a15 1
	blo	.loop
d41 1
a41 1
.loop:	mov.w	r2,@@er0		; playing it safe for now
d44 1
a44 1
	blo	.loop
d70 1
a70 1
.loop:	mov.w	r2,@@er0		; playing it safe for now
d73 1
a73 1
	blo	.loop
@


1.3
log
@
2001-09-04  Jason Merrill  <jason_merrill@@redhat.com>

        * libc/sys/h8300hms/crt0.S: Support ELF initialization.
@
text
@d17 1
a17 1
	mov.w   #__fini,r0
d46 1
a46 1
	mov.w   #__fini,r0
d75 1
a75 1
	mov.w   #__fini,r0
@


1.2
log
@
2000-08-30  Kazu Hirata  <kazu@@hxi.com>

        * libc/sys/h8300hms/crt0.S: Optimize for both speed and code size.
@
text
@d16 5
d22 1
d45 5
d51 1
d74 5
d80 1
@


1.1
log
@Initial revision
@
text
@d11 1
a11 1
	mov.w	#0,r2
d34 1
a34 1
	mov.w	#0,r2		; not sure about alignment requirements
d57 1
a57 1
	mov.w	#0,r2		; not sure about alignment requirements
@


1.1.1.1
log
@import newlib-2000-02-17 snapshot
@
text
@@
