head	1.7;
access;
symbols
	cygwin-1_7_35-release:1.7
	cygwin-1_7_34-release:1.7
	newlib-2_2_0:1.7.0.16
	cygwin-1_7_33-release:1.7
	cygwin-1_7_32-release:1.7
	cygwin-1_7_31-release:1.7
	cygwin-1_7_30-release:1.7
	cygwin-1_7_29-release:1.7
	cygwin-1_7_28-release:1.7
	newlib-2_1_0:1.7
	cygwin-1_7_27-release:1.7
	cygwin-1_7_26-release:1.7
	cygwin-1_7_25-release:1.7
	cygwin-1_7_24-release:1.7
	cygwin-1_7_23-release:1.7
	cygwin-1_7_22-release:1.7
	cygwin-1_7_21-release:1.7
	cygwin-1_7_20-release:1.7
	cygwin-1_7_19-release:1.7
	cygwin-64bit-postmerge:1.7
	cygwin-64bit-premerge-branch:1.7.0.14
	cygwin-64bit-premerge:1.7
	cygwin-1_7_18-release:1.7
	newlib-2_0_0:1.7
	cygwin-1_7_17-release:1.7
	cygwin-64bit-branch:1.7.0.12
	cygwin-1_7_16-release:1.7
	cygwin-1_7_15-release:1.7
	cygwin-1_7_14_2-release:1.7
	cygwin-1_7_14-release:1.7
	cygwin-1_7_12-release:1.7
	cygwin-1_7_11-release:1.7
	cygwin-1_7_10-release:1.7
	newlib-1_20_0:1.7
	cygwin-1_7_9-release:1.7
	cygwin-1_7_8-release:1.7
	newlib-1_19_0:1.7
	cygwin-1_7_7-release:1.7
	cygwin-1_7_5-release:1.7
	cygwin-1_7_4-release:1.7
	cygwin-1_7_3-release:1.7
	cygwin-1_7_2-release:1.7
	newlib-1_18_0:1.7
	cygwin-1_7_1-release:1.7
	newlib-1_17_0-arc:1.7.0.10
	binutils-arc-20080908-branch:1.7.0.8
	binutils-arc-20080908-branchpoint:1.7
	newlib-1_17_0:1.7
	newlib-1_16_0:1.7
	newlib-1_15_0:1.7
	newlib-csl-coldfire-4_1-32:1.7
	newlib-csl-sourcerygxx-4_1-32:1.7
	newlib-csl-innovasic-fido-3_4_4-33:1.7
	newlib-csl-coldfire-4_1-30:1.7
	newlib-csl-sourcerygxx-4_1-30:1.7
	newlib-csl-coldfire-4_1-28:1.7
	newlib-csl-sourcerygxx-4_1-28:1.7
	newlib-csl-arm-2006q3-27:1.7
	newlib-csl-sourcerygxx-4_1-27:1.7
	newlib-csl-arm-2006q3-26:1.7
	newlib-csl-sourcerygxx-4_1-26:1.7
	newlib-csl-sourcerygxx-4_1-24:1.7
	newlib-csl-sourcerygxx-4_1-23:1.7
	newlib-csl-sourcerygxx-4_1-21:1.7
	newlib-csl-arm-2006q3-21:1.7
	newlib-csl-arm-2006q3-19:1.7
	newlib-csl-sourcerygxx-4_1-19:1.7
	newlib-csl-sourcerygxx-4_1-18:1.7
	newlib-csl-sourcerygxx-3_4_4-25:1.7
	newlib-csl-sourcerygxx-4_1-17:1.7
	cr-0x5f1:1.7.0.6
	newlib-csl-sourcerygxx-4_1-14:1.7
	newlib-csl-sourcerygxx-4_1-13:1.7
	newlib-csl-sourcerygxx-4_1-12:1.7
	newlib-csl-sourcerygxx-4_1-9:1.7
	newlib-csl-sourcerygxx-4_1-8:1.7
	newlib-csl-sourcerygxx-4_1-7:1.7
	newlib-csl-arm-2006q1-6:1.7
	newlib-csl-sourcerygxx-4_1-6:1.7
	newlib-csl-sourcerygxx-4_1-5:1.7
	newlib-csl-sourcerygxx-4_1-4:1.7
	newlib-autotools-branch:1.7.0.4
	newlib-csl-20060320-branch:1.7.0.2
	newlib-csl-20060320-branchpoint:1.7
	newlib-1_14_0:1.7
	newlib-csl-arm-2005-q1b:1.7
	newlib-csl-arm-2005-q1a:1.7
	newlib-1_13_0:1.7
	csl-arm-2004-q3:1.7
	csl-arm-2004-q1a:1.7
	csl-arm-2004-q1:1.7
	newlib-1_12_0:1.7
	csl-arm-2003-q4:1.7
	w32api-2_2:1.7
	mingw-runtime-2_4:1.7
	newlib-1_11_0:1.7
	cygnus_cvs_20020108_pre:1.1
	newlib-1_10_0:1.1
	newlib-1_9_0:1.1;
locks; strict;
comment	@ * @;


1.7
date	2002.05.31.20.18.58;	author jjohnstn;	state Exp;
branches;
next	1.6;

1.6
date	2002.05.30.20.50.59;	author jjohnstn;	state Exp;
branches;
next	1.5;

1.5
date	2002.05.17.23.39.38;	author jjohnstn;	state Exp;
branches;
next	1.4;

1.4
date	2002.04.26.23.21.29;	author jjohnstn;	state Exp;
branches;
next	1.3;

1.3
date	2002.04.17.21.38.46;	author jjohnstn;	state Exp;
branches;
next	1.2;

1.2
date	2002.04.03.22.46.14;	author jjohnstn;	state Exp;
branches;
next	1.1;

1.1
date	2000.12.09.01.20.32;	author jjohnstn;	state Exp;
branches;
next	;


desc
@@


1.7
log
@
2002-05-31  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/sys/linux/Makefile.am: Add sig.c and sigaction.c.  Also
        make siglist.inc dependent on sig.c instead of signal.c.
        * libc/sys/linux/Makefile.in: Regenerated.
        * libc/sys/linux/sig.c: Rename from signal.c and change code to
        use NSIG instead of _NSIG.
        * libc/sys/linux/sigaction.c: New file.
        * libc/sys/linux/signal.c: Changed to be linux signal() function
        so as to override regular newlib default signal.c.
        * libc/sys/linux/linuxthreads/config.h: Add __ASSUME_REALTIME_SIGNALS
        definition.
        * libc/sys/linux/linuxthreads/testrtsig.h: New file.
        * libc/sys/linux/machine/i386/Makefile.am: Remove sigset.c.
        * libc/sys/linux/machine/i386/Makefile.in: Regenerated.
        * libc/sys/linux/machine/i386/sigset.c: Moved to linux main directory.
        * libc/sys/linux/sigset.c: Moved from machine/i386 directory.
        * libc/sys/linux/sys/signal.h: Redefine NSIG to _NSIG and override
        default linux sigset_t typedef by defining it equal to __sigset_t.
        * libc/unix/sigset.c: Add check so code isn't compiled on systems
        with a sigset_t that isn't implemented with a single int.
@
text
@/* BSD-like signal function.
   Copyright (C) 1991, 1992, 1996, 1997, 2000 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

#include <errno.h>
#include <signal.h>
#include <machine/weakalias.h>

sigset_t _sigintr;		/* Set by siginterrupt.  */

/* Set the handler for the signal SIG to HANDLER,
   returning the old handler, or SIG_ERR on error.  */
__sighandler_t
__bsd_signal (sig, handler)
     int sig;
     __sighandler_t handler;
{
  struct sigaction act, oact;

  /* Check signal extents to protect __sigismember.  */
  if (handler == SIG_ERR || sig < 1 || sig >= NSIG)
    {
      errno = (EINVAL);
      return SIG_ERR;
    }

  act.sa_handler = handler;
  if (sigemptyset (&act.sa_mask) < 0
      || sigaddset (&act.sa_mask, sig) < 0)
    return SIG_ERR;
  act.sa_flags = sigismember (&_sigintr, sig) ? 0 : SA_RESTART;
  if (sigaction (sig, &act, &oact) < 0)
    return SIG_ERR;

  return oact.sa_handler;
}
weak_alias (__bsd_signal, bsd_signal)
weak_alias (__bsd_signal, signal)
weak_alias (__bsd_signal, ssignal)
@


1.6
log
@
2002-05-30  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/sys/linux/Makefile.am: Add support for new files.
        * libc/sys/linux/Makefile.in: Regenerated.
        * libc/sys/linux/ids.c: Add __getuid weak alias for getuid.
        * libc/sys/linux/signal.c: Change to use real-time syscalls for
        sigsuspend, sigprocmask, and sigpending.  Also remove sigaction as
        it is in a separate file now.
        * libc/sys/linux/machine/i386/Makefile.am
        * libc/sys/linux/machine/i386/Makefile.in
        * libc/sys/linux/sys/signal.h: Add include of <bits/signum.h>.
        * libc/sys/linux/sigaction.c: New file.
        * libc/sys/linux/sigqueue.c: Ditto.
        * libc/sys/linux/sigwait.c: Ditto.
        * libc/sys/linux/machine/i386/sigaction.c: Ditto.
        * libc/sys/linux/kernel_sigaction.h: Ditto.
@
text
@d1 18
a18 4
/* libc/sys/linux/signal.c - Signal handling functions */

/* Written 2000 by Werner Almesberger */

d20 1
d22 1
a22 44
#include <unistd.h>
#include <sys/types.h>
#include <machine/syscall.h>

/* avoid name space pollution */
#define __NR___sgetmask __NR_sgetmask
#define __NR___ssetmask __NR_ssetmask
#define __NR___rt_sigtimedwait __NR_rt_sigtimedwait
#define __NR___rt_sigpending __NR_rt_sigpending
#define __NR___rt_sigprocmask __NR_rt_sigprocmask
#define __NR___rt_sigsuspend __NR_rt_sigsuspend

_syscall2(int,kill,pid_t,pid,int,sig)
_syscall2(__sighandler_t,signal,int,signum,__sighandler_t,handler)
_syscall0(int,pause)
_syscall1(unsigned int,alarm,unsigned int,seconds)

static _syscall0(int,__sgetmask)
static _syscall1(int,__ssetmask,int,newmask)
static _syscall2(int,__rt_sigpending,sigset_t *,set,size_t,size)
static _syscall4(int,__rt_sigprocmask,int,how,const sigset_t *,set,sigset_t *,oldset,size_t,size)
static _syscall2(int,__rt_sigsuspend,const sigset_t *,mask,size_t,size)
static _syscall4(int,__rt_sigtimedwait,const sigset_t *,set,siginfo_t *,info,struct timespec *,timeout,size_t,size)

int __sigsuspend (const sigset_t *mask)
{
    return __rt_sigsuspend(mask, _NSIG/8);
}
weak_alias(__sigsuspend,sigsuspend)

int sigsetmask(int newmask) /* BSD */
{
    return __ssetmask(newmask);
}

int sigmask(int signum) /* BSD */
{
    return 1 << signum;
}

int sigblock(int mask) /* BSD */
{
    return __ssetmask(mask | __sgetmask());
}
d24 1
a24 28
int __libc_raise(int sig)
{
    return kill(getpid(),sig);
}
weak_alias(__libc_raise,raise)

int __sigpending(sigset_t *set)
{
  return __rt_sigpending(set, _NSIG/8);
}
weak_alias(__sigpending,sigpending)

int __sigprocmask (int how,const sigset_t *set,sigset_t *oldset)
{
  return __rt_sigprocmask(how, set, oldset, _NSIG/8);
}
weak_alias(__sigprocmask,sigprocmask)

int sigtimedwait(const sigset_t *set, siginfo_t *info,
                 struct timespec *timeout)
{
  return __rt_sigtimedwait(set, info, timeout, _NSIG/8);
}

int sigwaitinfo(const sigset_t *set, siginfo_t *info)
{
  return __rt_sigtimedwait(set, info, NULL, _NSIG/8);
}
d26 29
a54 3
const char *const sys_siglist[] = {
#include "siglist.inc"
};
@


1.5
log
@
2002-05-17  Jeff Johnston  <jjohnstn@@redhat.com>

	* Makefile.am: Copy and install headers from sys/machine/include
	directory.  Also pass $toollibdir to lower-level directories.
	* Makefile.in: Regenerated.
	* libc/include/stdio.h[!_REENT_ONLY]: Change stdin, stdout, and
	stderr to use _REENT macro instead of _impure_ptr directly.
	* libc/include/sys/config.h[__i386__][__linux__]: Define
	__DYNAMIC_REENT__.
	* libc/include/sys/reent.h[!_REENT_ONLY]: Change _REENT macro to be
	call to __getreent() function if !__SINGLE_THREAD__ and
	__DYNAMIC_REENT__ is set.
	* libc/reent/Makefile.am: Add support for getreent.c.
	* libc/reent/Makefile.in: Regenerated.
	* libc/string/strerror.c: Add check if EOPNOTSUPP and ENOTSUP are same.
	* libc/sys/linux/Makefile.am: Add support for new files.
	* libc/sys/linux/configure.in: Add $EXTRA_DIRS variable.
	* libc/sys/linux/Makefile.in: Regenerated.
	* libc/sys/linux/configure: Ditto.
	* libc/sys/linux/io.c: Add poll syscall.  Also weak-alias
	__close, __read, __write, __poll, __open, __lseek, __fcntl from
	their __libc_ counterparts.
	* libc/sys/linux/io64.c: Add __libc_ prefix to lseek64 and open64
	and weak-alias to regular names.
	* libc/sys/linux/pread64.c: Rename to __libc_pread64 and weak-alias
	to pread64 and __pread64.
	* libc/sys/linux/process.c: Weak_alias __libc_getpid to __getpid.
	* libc/sys/linux/pwrite64.c: Rename to __libc_pwrite64 and
	weak-alias to pwrite64.
	* libc/sys/linux/sched.c: Weak-alias __libc_sched_getparam,
	__libc_sched_getscheduler, __libc_sched_get_priority_max,
	__libc_sched_get_priority_min, and __libc_sched_setschedule to
	name with __ instead of __libc_.
	* libc/sys/linux/siglongjmp.c: Include <machine/weakalias.h>.
	Rename siglongjmp to __libc_siglongjmp and weak-alias to siglongjmp.
	Call __libc_longjmp instead of longjmp, from __libc_siglongjmp.
	* libc/sys/linux/signal.c: Rename raise to __libc_raise and weak-alias
	to raise.
	* libc/sys/linux/socket.c: Weak-alias __libc_connect to __connect and
	__libc_send to __send.
	* libc/sys/linux/time.c: Weak-alias __libc_gettimeofday to
	__gettimeofday.
	* libc/sys/linux/wait.c: Rename wait to __libc_wait and weak-alias
	it to wait.  Rename wait3 to __libc_wait3 and weak-alias it to wait3.
	* libc/sys/linux/include/setjmp.h: Use __jmp_buf in sigjmp_buf
	type and typedef __jmp_buf to jmp_buf.
	* libc/sys/linux/machine/i386/Makefile.am: Add syscalls.c and
	setjmp.S.
	* libc/sys/linux/machine/i386/Makefile.in: Regenerated.
	* libc/sys/linux/machine/i386/crt0.c: Add support to clear .bss
	section.
	* libc/sys/linux/machine/i386/socketcall.h: Change to use __libc_
	prefix for function macros and then use weak_alias() to regular names.
	* libc/sys/linux/machine/i386/syscall.h: Ditto.
	* libc/sys/linux/sys/errno.h: Define EOPNOTSUP to be ENOTSUP.
	* libc/sys/linux/sys/stdio.h: Define _flockfile and _funlockfile
	to be flockfile() and funlockfile() respectively.
	* libc/sys/linux/sys/types.h
	* libc/reent/getreent.c: New file.
	* libc/sys/linux/flockfile.c: Ditto.
	* libc/sys/linux/funlockfile.c: Ditto.
	* libc/sys/linux/getreent.c: Ditto.
	* libc/sys/linux/pread.c: Ditto.
	* libc/sys/linux/pwrite.c: Ditto.
	* libc/sys/linux/raise.c: Ditto.
	* libc/sys/linux/system.c: Ditto.
	* libc/sys/linux/tcdrain.c: Ditto.
	* libc/sys/linux/machine/i386/i386mach.h: Ditto.
	* libc/sys/linux/machine/i386/setjmp.S: Ditto.
	* libc/sys/linux/machine/i386/syscalls.c: Ditto.
	* libc/sys/linux/machine/i386/weakalias.h: Ditto.
	* libc/sys/linux/machine/i386/include/setjmp.h: Ditto.
@
text
@a13 1
#define __NR___sigsuspend __NR_sigsuspend
d15 3
a20 3
_syscall3(int,sigaction,int,signum,const struct sigaction *,act,
  struct sigaction *,oldact)
_syscall1(int,sigpending,sigset_t *,set)
a22 1
_syscall3(int,sigprocmask,int,how,const sigset_t *,set,sigset_t *,oldset)
d26 3
a28 1
static _syscall3(int,__sigsuspend,int,arg1,int,arg2,int,mask)
d31 1
a31 1
int sigsuspend (const sigset_t *mask)
d33 1
a33 1
    return __sigsuspend(0,0,((__sigset_t *)mask)->__val[0]);
d35 1
a41 1

a46 1

d58 12
d73 1
a73 1
  return __rt_sigtimedwait(set, info, timeout, sizeof(sigset_t));
d78 1
a78 1
  return __rt_sigtimedwait(set, info, NULL, sizeof(sigset_t));
@


1.4
log
@
2002-04-26  Jeff Johnston  <jjohnstn@@redhat.com>

        *  libc/sys/linux/Makefile.am: Add io64.c.
        *  libc/sys/linux/Makefile.in: Regenerated.
        *  libc/sys/linux/io.c(mkfifo, fsync, fdatasync): Added syscalls.
        *  libc/sys/linux/signal.c (sigwaitinfo, sigtimedwait): Ditto.
        *  libc/sys/linux/io64.c: New file.
@
text
@d53 1
a53 2

int raise(int sig)
d57 1
@


1.3
log
@
2002-04-17  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/sys/linux/signal.c: Remove include of <bits/sigset.h>.
        * libc/sys/linux/sys/signal.h: Add include of <bits/sigset.h>.
@
text
@d15 1
d29 1
d59 10
@


1.2
log
@
2002-04-03  Jeff Johnston  <jjohnstn@@redhat.com>

	* configure.host: Add support for machine subdirectory of
	sys subdirectory.
	* configure.in: Add check for sys machine subdirectory.
	* Makefile.am: Ditto.
	* configure: Regenerated.
	* Makefile.in: Ditto.
	* libc/sys/linux/crt0.c: Moved to machine/i386 directory.
	* libc/sys/linux/sys/syscall.h: Ditto.
	* libc/sys/linux/sleep.c: New file.
	* libc/sys/linux/socket.c: Ditto.
	* libc/sys/linux/sockops.h: Ditto.
	* libc/sys/linux/stack.c: Ditto.
	* libc/sys/linux/usleep.c: Ditto.
	* libc/sys/linux/machine/Makefile.am: Ditto.
	* libc/sys/linux/machine/Makefile.in: Ditto.
	* libc/sys/linux/machine/aclocal.m4: Ditto.
	* libc/sys/linux/machine/configure: Ditto.
	* libc/sys/linux/machine/configure.in: Ditto.
	* libc/sys/linux/machine/i386/Makefile.am: Ditto.
	* libc/sys/linux/machine/i386/Makefile.in: Ditto.
	* libc/sys/linux/machine/i386/aclocal.m4: Ditto.
	* libc/sys/linux/machine/i386/configure: Ditto.
	* libc/sys/linux/machine/i386/configure.in: Ditto.
	* libc/sys/linux/machine/i386/crt0.c: Ditto.
	* libc/sys/linux/machine/i386/sigset.c: Ditto.
	* libc/sys/linux/machine/i386/sigstack.h: Ditto.
	* libc/sys/linux/machine/i386/socketcall.h: Ditto.
	* libc/sys/linux/machine/i386/syscall.h: Ditto.
	* libc/sys/linux/sys/select.h: Ditto.
	* libc/sys/linux/configure.in: Add support for machine directory.
	* libc/sys/linux/Makefile.am: Ditto plus add new files above.
	* libc/sys/linux/Makefile.in: Regenerated.
	* libc/sys/linux/configure: Ditto.
	* libc/sys/linux/brk.c: Use machine/syscall.h instead of sys/syscall.h.
	* libc/sys/linux/inode.c: Ditto.
	* libc/sys/linux/linux.c: Ditto.
	* libc/sys/linux/process.c: Ditto.
	* libc/sys/linux/systat.c: Ditto.
	* libc/sys/linux/time.c: Ditto.
	* libc/sys/linux/wait.c: Ditto.
	* libc/sys/linux/ids.c: Change header plus add setfsgid/setfsuid.
	* libc/sys/linux/io.c: Change header plus add readv/writev.
	* libc/sys/linux/signal.c: Change header plus change sigsuspend to
	use __sigsuspend syscall.
	* libc/sys/linux/select.c: Change header plus change select to
	use _newselect syscall.
	* libc/sys/linux/sys/cdefs.h: Add a number of standard definitions
	used by glibc header files.
	* libc/sys/linux/sys/types.h: Add __socklen_t and __useconds_t
	types.
@
text
@a8 1
#include <bits/sigset.h>
@


1.1
log
@
2000-12-08  Werner Almesberger  <Werner.Almesberger@@epfl.ch>

        * configure.host: Added x86 linux target.
        * libc/unix/getpass.c (_PATH_PASSWD, _PASSWORD_LEN): Default
        definitions provided if not already defined.
        * libc/sys/linux/crt0.c: New file.
        * libc/sys/linux/Makefile.am: Ditto.
        * libc/sys/linux/Makefile.in: Ditto.
        * libc/sys/linux/aclocal.m4: Ditto.
        * libc/sys/linux/brk.c: Ditto.
        * libc/sys/linux/configure: Ditto.
        * libc/sys/linux/configure.in: Ditto.
        * libc/sys/linux/getoptlong.c: Ditto.
        * libc/sys/linux/ids.c: Ditto.
        * libc/sys/linux/inode.c: Ditto.
        * libc/sys/linux/io.c: Ditto.
        * libc/sys/linux/linux.c: Ditto.
        * libc/sys/linux/process.c: Ditto.
        * libc/sys/linux/realpath.c: Ditto.
        * libc/sys/linux/select.c: Ditto.
        * libc/sys/linux/signal.c: Ditto.
        * libc/sys/linux/systat.c: Ditto.
        * libc/sys/linux/termios.c: Ditto.
        * libc/sys/linux/time.c: Ditto.
        * libc/sys/linux/wait.c: Ditto.
        * libc/sys/linux/include/alloca.h: Ditto.
        * libc/sys/linux/include/getopt.h: Ditto.
        * libc/sys/linux/include/stdint.h: Ditto.
        * libc/sys/linux/include/unistd.h: Ditto.
        * libc/sys/linux/sys/cdefs.h: Ditto.
        * libc/sys/linux/sys/dirent.h: Ditto.
        * libc/sys/linux/sys/errno.h: Ditto.
        * libc/sys/linux/sys/fcntl.h: Ditto.
        * libc/sys/linux/sys/file.h: Ditto.
        * libc/sys/linux/sys/ioctl.h: Ditto.
        * libc/sys/linux/sys/resource.h: Ditto.
        * libc/sys/linux/sys/signal.h: Ditto.
        * libc/sys/linux/sys/stat.h: Ditto.
        * libc/sys/linux/sys/syscall.h: Ditto.
        * libc/sys/linux/sys/termios.h: Ditto.
        * libc/sys/linux/sys/time.h: Ditto.
        * libc/sys/linux/sys/types.h: Ditto.
        * libc/sys/linux/sys/utmp.h: Ditto.
        * libc/sys/linux/sys/utsname.h: Ditto.
        * libc/sys/linux/sys/wait.h: Ditto.
@
text
@d9 2
a10 1
#include <sys/syscall.h>
d12 4
a15 3

#define __NR___sgetmask __NR_sgetmask /* avoid name space pollution */
#define __NR___ssetmask __NR_ssetmask /* avoid name space pollution */
a20 1
_syscall1(int,sigsuspend,const sigset_t *,mask)
d28 1
d30 4
@

