head	1.20;
access;
symbols
	cygwin-1_7_35-release:1.20
	cygwin-1_7_34-release:1.20
	newlib-2_2_0:1.20.0.10
	cygwin-1_7_33-release:1.20
	cygwin-1_7_32-release:1.20
	cygwin-1_7_31-release:1.20
	cygwin-1_7_30-release:1.20
	cygwin-1_7_29-release:1.20
	cygwin-1_7_28-release:1.20
	newlib-2_1_0:1.20
	cygwin-1_7_27-release:1.20
	cygwin-1_7_26-release:1.20
	cygwin-1_7_25-release:1.20
	cygwin-1_7_24-release:1.20
	cygwin-1_7_23-release:1.20
	cygwin-1_7_22-release:1.20
	cygwin-1_7_21-release:1.20
	cygwin-1_7_20-release:1.20
	cygwin-1_7_19-release:1.20
	cygwin-64bit-postmerge:1.20
	cygwin-64bit-premerge-branch:1.20.0.8
	cygwin-64bit-premerge:1.20
	cygwin-1_7_18-release:1.20
	newlib-2_0_0:1.20
	cygwin-1_7_17-release:1.20
	cygwin-64bit-branch:1.20.0.6
	cygwin-1_7_16-release:1.20
	cygwin-1_7_15-release:1.20
	cygwin-1_7_14_2-release:1.20
	cygwin-1_7_14-release:1.20
	cygwin-1_7_12-release:1.20
	cygwin-1_7_11-release:1.20
	cygwin-1_7_10-release:1.20
	newlib-1_20_0:1.20
	cygwin-1_7_9-release:1.20
	cygwin-1_7_8-release:1.20
	newlib-1_19_0:1.20
	cygwin-1_7_7-release:1.20
	cygwin-1_7_5-release:1.20
	cygwin-1_7_4-release:1.20
	cygwin-1_7_3-release:1.20
	cygwin-1_7_2-release:1.20
	newlib-1_18_0:1.20
	cygwin-1_7_1-release:1.20
	newlib-1_17_0-arc:1.20.0.4
	binutils-arc-20080908-branch:1.20.0.2
	binutils-arc-20080908-branchpoint:1.20
	newlib-1_17_0:1.20
	newlib-1_16_0:1.19
	newlib-1_15_0:1.19
	newlib-csl-coldfire-4_1-32:1.19
	newlib-csl-sourcerygxx-4_1-32:1.19
	newlib-csl-innovasic-fido-3_4_4-33:1.19
	newlib-csl-coldfire-4_1-30:1.19
	newlib-csl-sourcerygxx-4_1-30:1.19
	newlib-csl-coldfire-4_1-28:1.19
	newlib-csl-sourcerygxx-4_1-28:1.19
	newlib-csl-arm-2006q3-27:1.19
	newlib-csl-sourcerygxx-4_1-27:1.19
	newlib-csl-arm-2006q3-26:1.19
	newlib-csl-sourcerygxx-4_1-26:1.19
	newlib-csl-sourcerygxx-4_1-24:1.19
	newlib-csl-sourcerygxx-4_1-23:1.19
	newlib-csl-sourcerygxx-4_1-21:1.19
	newlib-csl-arm-2006q3-21:1.19
	newlib-csl-arm-2006q3-19:1.19
	newlib-csl-sourcerygxx-4_1-19:1.19
	newlib-csl-sourcerygxx-4_1-18:1.19
	newlib-csl-sourcerygxx-3_4_4-25:1.19
	newlib-csl-sourcerygxx-4_1-17:1.19
	cr-0x5f1:1.19.0.6
	newlib-csl-sourcerygxx-4_1-14:1.19
	newlib-csl-sourcerygxx-4_1-13:1.19
	newlib-csl-sourcerygxx-4_1-12:1.19
	newlib-csl-sourcerygxx-4_1-9:1.19
	newlib-csl-sourcerygxx-4_1-8:1.19
	newlib-csl-sourcerygxx-4_1-7:1.19
	newlib-csl-arm-2006q1-6:1.19
	newlib-csl-sourcerygxx-4_1-6:1.19
	newlib-csl-sourcerygxx-4_1-5:1.19
	newlib-csl-sourcerygxx-4_1-4:1.19
	newlib-autotools-branch:1.19.0.4
	newlib-csl-20060320-branch:1.19.0.2
	newlib-csl-20060320-branchpoint:1.19
	newlib-1_14_0:1.18
	newlib-csl-arm-2005-q1b:1.17
	newlib-csl-arm-2005-q1a:1.17
	newlib-1_13_0:1.17
	csl-arm-2004-q3:1.17
	csl-arm-2004-q1a:1.16
	csl-arm-2004-q1:1.16
	newlib-1_12_0:1.16
	csl-arm-2003-q4:1.16
	w32api-2_2:1.15
	mingw-runtime-2_4:1.15
	newlib-1_11_0:1.15
	cygnus_cvs_20020108_pre:1.2
	newlib-1_10_0:1.2
	newlib-1_9_0:1.2;
locks; strict;
comment	@ * @;


1.20
date	2008.07.02.18.38.45;	author jjohnstn;	state Exp;
branches;
next	1.19;

1.19
date	2006.02.16.21.25.45;	author jjohnstn;	state Exp;
branches;
next	1.18;

1.18
date	2005.10.14.20.01.55;	author jjohnstn;	state Exp;
branches;
next	1.17;

1.17
date	2004.08.12.21.28.35;	author jjohnstn;	state Exp;
branches;
next	1.16;

1.16
date	2003.11.07.23.47.05;	author jjohnstn;	state Exp;
branches;
next	1.15;

1.15
date	2002.09.03.19.40.36;	author jjohnstn;	state Exp;
branches;
next	1.14;

1.14
date	2002.08.23.01.56.05;	author fitzsim;	state Exp;
branches;
next	1.13;

1.13
date	2002.07.25.21.07.08;	author jjohnstn;	state Exp;
branches;
next	1.12;

1.12
date	2002.07.23.19.40.45;	author jjohnstn;	state Exp;
branches;
next	1.11;

1.11
date	2002.07.15.20.16.32;	author jjohnstn;	state Exp;
branches;
next	1.10;

1.10
date	2002.06.21.18.15.46;	author jjohnstn;	state Exp;
branches;
next	1.9;

1.9
date	2002.06.19.22.17.33;	author jjohnstn;	state Exp;
branches;
next	1.8;

1.8
date	2002.05.24.18.50.29;	author fitzsim;	state Exp;
branches;
next	1.7;

1.7
date	2002.05.22.20.26.28;	author jjohnstn;	state Exp;
branches;
next	1.6;

1.6
date	2002.05.17.23.39.39;	author jjohnstn;	state Exp;
branches;
next	1.5;

1.5
date	2002.04.25.22.12.10;	author jjohnstn;	state Exp;
branches;
next	1.4;

1.4
date	2002.04.23.21.33.41;	author jjohnstn;	state Exp;
branches;
next	1.3;

1.3
date	2002.04.03.22.46.21;	author jjohnstn;	state Exp;
branches;
next	1.2;

1.2
date	2000.12.12.01.24.08;	author jjohnstn;	state Exp;
branches;
next	1.1;

1.1
date	2000.12.09.01.20.32;	author jjohnstn;	state Exp;
branches;
next	;


desc
@@


1.20
log
@
2008-07-02  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/argz/argz_count.c: Include stddef.h to get size_t.
        * libc/argz/argz_extract.c: Ditto.
        * libc/argz/argz_stringify.c: Ditto.
        * libc/search/hash.h: Ditto.
        * libc/sys/linux/include/sched.h: Ditto.
        * libc/sys/linux/sys/types.h: Ditto.
@
text
@/* libc/sys/linux/sys/types.h - The usual type zoo */

/* Written 2000 by Werner Almesberger */

/*-
 * Copyright (c) 1982, 1986, 1991, 1993, 1994
 *	The Regents of the University of California.  All rights reserved.
 * (c) UNIX System Laboratories, Inc.
 * All or some portions of this file are derived from material licensed
 * to the University of California by American Telephone and Telegraph
 * Co. or Unix System Laboratories, Inc. and are reproduced herein with
 * the permission of UNIX System Laboratories, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)types.h	8.6 (Berkeley) 2/19/95
 * $FreeBSD: src/sys/sys/types.h,v 1.60 2002/04/10 15:58:13 mike Exp $
 */

#ifndef _SYS_TYPES_H
#define _SYS_TYPES_H

/* Newlib has it's own time_t and clock_t definitions in 
 * libc/include/sys/types.h.  Repeat those here and
 * skip the kernel's definitions. */

#define __need_size_t
#include <stddef.h>
#include <sys/config.h>
#include <features.h>
#include <machine/types.h>
#include <sys/_types.h>

#if !defined(__time_t_defined) && !defined(_TIME_T)
#define _TIME_T
#define __time_t_defined
typedef _TIME_T_ time_t;
#endif

#if !defined(__clock_t_defined) && !defined(_CLOCK_T)
#define _CLOCK_T
#define __clock_t_defined
typedef _CLOCK_T_ clock_t;
#endif

#ifndef _SSIZE_T
#define _SSIZE_T
typedef _ssize_t ssize_t;
#endif

#ifndef __u_char_defined
#ifdef __GNUC__
__extension__ typedef long long quad_t;
__extension__ typedef unsigned long long u_quad_t;
#else
typedef struct
  {
    long int __val[2];
  } quad_t;
typedef struct
  {
    unsigned long __val[2];
  } u_quad_t;
#endif
typedef struct
  {
    int __val[2];
  } fsid_t;
#define __u_char_defined
#endif

typedef int clockid_t;

#  define _SYS_TYPES_FD_SET
#  define	NBBY	8		/* number of bits in a byte */
/*
 * Select uses bit masks of file descriptors in longs.
 * These macros manipulate such bit fields (the filesystem macros use chars).
 * FD_SETSIZE may be defined by the user, but the default here
 * should be >= NOFILE (param.h).
 */
#  ifndef	FD_SETSIZE
#	define	FD_SETSIZE	64
#  endif

typedef	long	fd_mask;
#  define	NFDBITS	(sizeof (fd_mask) * NBBY)	/* bits per mask */
#  ifndef	howmany
#	define	howmany(x,y)	(((x)+((y)-1))/(y))
#  endif

typedef struct {
        unsigned long fds_bits [(1024/(8 * sizeof(unsigned long)))];
} __fd_set;

#  define	FD_SET(n, p)	((p)->fds_bits[(n)/NFDBITS] |= (1L << ((n) % NFDBITS)))
#  define	FD_CLR(n, p)	((p)->fds_bits[(n)/NFDBITS] &= ~(1L << ((n) % NFDBITS)))
#  define	FD_ISSET(n, p)	((p)->fds_bits[(n)/NFDBITS] & (1L << ((n) % NFDBITS)))
#  define	FD_ZERO(p)	(__extension__ (void)({ \
     size_t __i; \
     char *__tmp = (char *)p; \
     for (__i = 0; __i < sizeof (*(p)); ++__i) \
       *__tmp++ = 0; \
}))

#include <linux/types.h>
#include <bits/types.h>
#define __mode_t_defined
#define __gid_t_defined
#define __uid_t_defined
#define __pid_t_defined
#define __ssize_t_defined
#define __key_t_defined
#define __off_t_defined
#define __off64_t_defined

typedef __ino_t ino_t;
typedef __ino64_t ino64_t;
typedef __uint32_t uintptr_t;
typedef __int32_t intptr_t;
typedef __off64_t off64_t;
typedef __off_t off_t;
typedef __loff_t loff_t;
typedef __mode_t mode_t;
typedef __pid_t pid_t;
typedef __uid_t uid_t;
typedef __gid_t gid_t;
typedef __key_t key_t;
typedef __suseconds_t suseconds_t;
typedef __useconds_t useconds_t;
typedef __daddr_t daddr_t;
typedef __caddr_t caddr_t;
typedef __dev_t dev_t;
typedef __fd_set fd_set;
typedef __nlink_t nlink_t;

typedef __u_char u_char;
typedef __u_short u_short;
typedef __u_int u_int;
typedef __u_long u_long;
typedef __uint8_t u_int8_t;
typedef __uint16_t u_int16_t;
typedef __uint32_t u_int32_t;
typedef __uint64_t u_int64_t;
typedef __int8_t int8_t;
typedef __int16_t int16_t;
typedef __int32_t int32_t;
typedef __int64_t int64_t;

#ifndef _UINT8_T_DECLARED
typedef __uint8_t               uint8_t; 
#define _UINT8_T_DECLARED
#endif

#ifndef _UINT16_T_DECLARED
typedef __uint16_t              uint16_t; 
#define _UINT16_T_DECLARED
#endif

#ifndef _UINT32_T_DECLARED
typedef __uint32_t              uint32_t; 
#define _UINT32_T_DECLARED
#endif

#ifndef _UINT64_T_DECLARED
typedef __uint64_t              uint64_t; 
#define _UINT64_T_DECLARED
#endif

typedef __uint64_t		u64;

#if !defined(_ANSI_SOURCE) && !defined(_POSIX_SOURCE)
typedef	struct _physadr {
	int	r[1];
} *physadr;

typedef	struct label_t {
	int	val[6];
} label_t;
#endif

typedef	unsigned int	vm_offset_t;
typedef	__int64_t	vm_ooffset_t;
typedef	unsigned int	vm_pindex_t;
typedef	unsigned int	vm_size_t;

typedef	__int32_t	register_t;
typedef	__uint32_t	u_register_t;

#ifdef _KERNEL
typedef	int		intfptr_t;
typedef	unsigned int	uintfptr_t;
#endif

/* Critical section value */
typedef	register_t	critical_t;

/* Interrupt mask (spl, xxx_imask, etc) */
typedef	__uint32_t	intrmask_t;

/* Interrupt handler function type. */
typedef	void		ointhand2_t(int _device_id);

#endif
@


1.19
log
@
2006-02-16  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/sys/linux/aio.c: Define _GNU_SOURCE so struct aioinit
        will be defined.
        * libc/sys/linux/sys/types.h: Move <sys/config.h> ahead of
        <features.h> to preset special flags.
@
text
@d53 2
@


1.18
log
@
2005-10-14  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/sys/linux/sys/types.h (int8_t): Add type.
@
text
@d53 1
a54 1
#include <sys/config.h>
@


1.17
log
@
2004-08-12  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/sys/linux/sys/types.h (u64): New typedef to allow building
        on linux systems with glibc 2.3.3 installed.
        * libc/sys/linux/dl/dl-runtime.c: Fix prototypes for fixup and
        profile_fixup so newlib can build on fc3 system.
@
text
@d169 1
@


1.16
log
@
2003-11-07  Jeff Johnston  <jjohnstn@@redhat.com>

        * configure.host: Remove -DLOOSE_KERNEL_NAMES flag for linux
        x86 build.
        * iconvdata/Makefile.am: Make dependent on newlib's configure.host
        and set up default flags to pass to aclocal.
        * iconvdata/Makefile.in: Regenerated.
        * libc/sys/linux/Makefile.am: Add _ELIX_LEVEL_4 getlogin, getpwnam,
        and getpwuid routines.
        * libc/sys/linux/Makefile.in: Regenerated.
        * libc/sys/linux/getlogin.c: New stub file to allow x86-linux
        applications to link with newlib's shared libc library.
        * libc/sys/linux/getpwnam.c: Ditto.
        * libc/sys/linux/getpwuid.c: Ditto.
        * libc/sys/linux/sys/types.h: Include <features.h> and supply types
        that were formerly supplied by /usr/include/linux/types.h with
        kernel types.
        * testsuite/newlib.wctype/twctype.c: Fix testcase to properly
        test _ELIX_LEVEL macro.
@
text
@d193 2
@


1.15
log
@
2002-09-03  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/sys/_types.h (_flock_t): Added.
        * libc/include/sys/lock.h (__lock_try_acquire): New interface.
        (__lock_try_acquire_recursive): Ditto.
        * libc/include/sys/reent.h (__sFILE, __sFILE64): Add new
        _lock field.
        * libc/stdio/findfp.c (std)[!__SINGLE_THREAD__]: Initialize _lock
        field.
        * libc/stdio/fopen.c (_fopen_r)[!__SINGLE_THREAD__]: Ditto.
        * libc/stdio64/fopen64.c (_fopen64_r)[!__SINGLE_THREAD__]: Ditto.
        * libc/sys/linux/include/time.h (struct timespec): Moved from
        <sys/types.h> and added check for __need_timespec flag so type
        can be defined by itself.
        * libc/sys/linux/sys/_types.h (_flock_t): New type.
        * libc/sys/linux/sys/types.h (struct timespec): Moved to
        <time.h>.
@
text
@d53 1
d116 3
a118 1
#define fd_set _types_fd_set
d141 1
d147 45
@


1.14
log
@	* libc/include/langinfo.h: New file.
	* libc/include/wchar.h: Likewise.
	* libc/include/sys/syslimits.h: Likewise.
	* libc/locale/fix_grouping.c: Likewise.
	* libc/locale/ldpart.c: Likewise.
	* libc/locale/ldpart.h: Likewise.
	* libc/locale/lmessages.c: Likewise.
	* libc/locale/lmessages.h: Likewise.
	* libc/locale/lmonetary.c: Likewise.
	* libc/locale/lmonetary.h: Likewise.
	* libc/locale/lnumeric.c: Likewise.
	* libc/locale/lnumeric.h: Likewise.
	* libc/locale/nl_langinfo.3: Likewise.
	* libc/locale/nl_langinfo.c: Likewise.
	* libc/locale/timelocal.c: Likewise.
	* libc/locale/timelocal.h: Likewise.
	* libc/stdlib/btowc.c: Likewise.
	* libc/stdlib/mbrlen.c: Likewise.
	* libc/stdlib/mbrtowc.c: Likewise.
	* libc/stdlib/mbsinit.c: Likewise.
	* libc/stdlib/mbsrtowcs.c: Likewise.
	* libc/stdlib/wcrtomb.c: Likewise.
	* libc/stdlib/wcsrtombs.c: Likewise.
	* libc/stdlib/wctob.c: Likewise.
	* libc/sys/linux/prof-freq.c: Likewise.
	* libc/sys/linux/profile.c: Likewise.
	* libc/sys/linux/machine/i386/dl-procinfo.c: Likewise.
	* libc/sys/linux/machine/i386/dl-procinfo.h: Likewise.
	* libc/include/stdlib.h: Change re-entrant functions to take
	mbstate_t pointers.
	* libc/include/sys/_types.h: Define _mbstate_t.
	* libc/include/sys/config.h (MB_LEN_MAX): New macro.
	* libc/include/sys/errno.h (EILSEQ): New error code.
	* libc/include/sys/reent.h: Include wchar.h.  Change reentrant
	structure to use mbstate_t.
	* libc/locale/Makefile.am (LIB_SOURCES): Add new files.
	* libc/machine/powerpc/vfprintf.c: Use mbstate_t.
	* libc/machine/powerpc/vfscanf.c: Likewise.
	* libc/stdio/getdelim.c: Reallocate buffer only when necessary.
	* libc/stdio/vfprintf.c: Likewise.
	* libc/stdio/vfscanf.c: Likewise.
	* libc/stdlib/Makefile.am (LIB_SOURCES): Add new files.
	* libc/stdlib/mblen.c: Use mbstate_t.
	* libc/stdlib/mblen_r.c: Likewise.
	* libc/stdlib/mbstowcs.c: Likewise.
	* libc/stdlib/mbstowcs_r.c: Likewise.
	* libc/stdlib/mbtowc.c: Likewise.
	* libc/stdlib/mbtowc_r.c: Likewise.
	* libc/stdlib/wcstombs.c: Likewise.
	* libc/stdlib/wcstombs_r.c: Likewise.
	* libc/stdlib/wctomb_r.c: Likewise.
	* libc/sys/linux/Makefile.am (LIB_SOURCES): Add prof-freq.c and
	profile.c.
	* libc/sys/linux/machine/i386/Makefile.am (LIB_SOURCES): Add
	dl-procinfo.c.
	* libc/sys/linux/sys/errno.h (EILSEQ): New error code.
	* libc/sys/linux/sys/types.h (off_t): Define type.
	* testsuite/newlib.locale/UTF-8.c: Change locale name from UTF-8
	to C-UTF-8.
	* testsuite/newlib.locale/UTF-8.exp: Likewise.
@
text
@a96 10
/* Time Value Specification Structures, P1003.1b-1993, p. 261 */

#ifndef _STRUCT_TIMESPEC
#define _STRUCT_TIMESPEC
struct timespec {
  time_t  tv_sec;   /* Seconds */
  long    tv_nsec;  /* Nanoseconds */
};
#endif /* !_STRUCT_TIMESPEC */

@


1.13
log
@
2002-07-25  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/sys/linux/io64.c (truncate64, ftruncate64): Added.
        * libc/sys/linux/sys/types.h (off64_t): Definition added.
@
text
@d152 1
@


1.12
log
@
2002-07-23  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/stdio.h: Move fcloseall prototype within
        #ifndef _REENT_ONLY section.
        * libc/sys/linux/Makefile.am: Add new files.
        * libc/sys/linux/Makefile.in: Regenerated.
        * libc/sys/linux/sys/stdio.h: Add ctermid prototype.
        * libc/sys/linux/sys/unistd.h: Add ttyname_r prototype.
        * libc/sys/linux/sys/types.h: Add ino64_t type.
        * libc/sys/linux/ctermid.c: New file.
        * libc/sys/linux/ttyname_r.c: Ditto.
        * libc/sys/linux/readdir64.c: Ditto.
@
text
@d146 1
d151 1
@


1.11
log
@
2002-07-15  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/sys/linux/Makefile.am: Add new files.
        * libc/sys/linux/Makefile.in: Regenerated.
        * libc/sys/linux/bp-sym.h: Moved to include directory.
        * libc/sys/linux/mmap.c: Add weak aliases: __mmap, __munmap, __mremap.
        * libc/sys/linux/inode.c: Set _LIBC to 1.
        * libc/sys/linux/mq_close.c: Ditto.
        * libc/sys/linux/mq_getattr.c: Ditto.
        * libc/sys/linux/mq_open.c: Ditto.
        * libc/sys/linux/mq_receive.c: Ditto.
        * libc/sys/linux/mq_send.c: Ditto.
        * libc/sys/linux/mq_setattr.c: Ditto.
        * libc/sys/linux/mq_unlink.c: Ditto.
        * libc/sys/linux/calloc.c: New file.
        * libc/sys/linux/callocr.c: Ditto.
        * libc/sys/linux/cfreer.c: Ditto.
        * libc/sys/linux/config.h: Ditto.
        * libc/sys/linux/free.c: Ditto.
        * libc/sys/linux/freer.c: Ditto.
        * libc/sys/linux/msize.c: Ditto.
        * libc/sys/linux/msizer.c: Ditto.
        * libc/sys/linux/mstats.c: Ditto.
        * libc/sys/linux/mtrim.c: Ditto.
        * libc/sys/linux/mtrimr.c: Ditto.
        * libc/sys/linux/pvallocr.c: Ditto.
        * libc/sys/linux/realloc.c: Ditto.
        * libc/sys/linux/reallocr.c: Ditto.
        * libc/sys/linux/thread-m.h: Ditto.
        * libc/sys/linux/vallocr.c: Ditto.
        * libc/sys/linux/bp-checks.h: Ditto.
        * libc/sys/linux/libc-symbols.h: Ditto.
        * libc/sys/linux/libc-tsd.h: Ditto.
        * libc/sys/linux/libintl.h: Ditto.
        * libc/sys/linux/malign.c: Ditto.
        * libc/sys/linux/malignr.c: Ditto.
        * libc/sys/linux/mallinfor.c: Ditto.
        * libc/sys/linux/malloc.c: Ditto.
        * libc/sys/linux/mallocr.c: Ditto.
        * libc/sys/linux/malloptr.c: Ditto.
        * libc/sys/linux/mallstatsr.c: Ditto.
        * libc/sys/linux/mcheck.c: Ditto.
        * libc/sys/linux/mhooks.h: Ditto.
        * libc/sys/linux/include/bp-sym.h: Ditto.
        * libc/sys/linux/include/malloc.h: Ditto.
        * libc/sys/linux/include/mcheck.h: Ditto.
        * libc/sys/linux/machine/i386/getpagesize.c: New file.
        * libc/sys/linux/machine/i386/Makefile.am: Add getpagesize.c.
        * libc/sys/linux/machine/i386/Makefile.in: Regenerated.
        * libc/sys/linux/machine/i386/sysdep.h: New file.
        * libc/sys/linux/machine/i386/weakalias.h: Add weak_function support.
        * libc/sys/linux/sys/dirent.h: Set _LIBC to 1.
	* libc/sys/linux/sys/types.h: Add new types.
@
text
@d147 1
@


1.10
log
@
2002-06-21  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/math.h: Add <sys/types.h> to get _uint32_t definition.
        * libc/include/machine/types.h: Skip __off_t, __pid_t, and
        __loff_t definitions if special _HAVE_SYSTYPES macro defined.
        * libc/include/sys/config.h: Removed _uint*, _int* definitions.
        * libc/include/sys/param.h: Remove i386 case which is handled
        by default case.
        (BIG_ENDIAN, LITTLE_ENDIAN): Protect
        definitions in case they are already defined.
        (BYTE_ORDER): Add default case using _IEEE_BIG_ENDIAN and
        _IEEE_LITTLE_ENDIAN flags.
        * libc/include/sys/reent.h: Change __uint32_t references to
        use _ULong instead.
        (_REENT_GETDATE_REENT_P): New macro.
        * libc/include/sys/types.h (__int16_t, __uint16_t): Added.
        (__int32_t, __uint32_t, __int64_t, __uint64_t): Ditto.
        * libc/search/hash.h: Add default setting of BYTE_ORDER,
        LITTLE_ENDIAN, and BIG_ENDIAN, if not already defined.
        * libc/sys/linux/sys/types.h: Include <sys/_types.h>.  Define
        ssize_t based on _ssize_t.  Remove __socklen_t, __uintptr_t,
        pid_t, off_t, loff_t, caddr_t, and daddr_t type
        definitions which are done by subsequent glibc headers.
        Add macro definitions to prevent subsequent header files from
        defining pid_t, off_t, ssize_t, and key_t.  Move uintptr_t and
        intptr_t to after glibc definitions of types they are based on.
@
text
@d150 32
@


1.9
log
@
2002-06-19  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/sys/linux/Makefile.am: Add support for message queue routines,
        ipc routines, and ftok.
        * libc/sys/linux/Makefile.in: Regenerated.
        * libc/sys/linux/ftok.c: New file.
        * libc/sys/linux/ipc.c: Ditto.
        * libc/sys/linux/mq_close.c: Ditto.
        * libc/sys/linux/mq_getattr.c: Ditto.
        * libc/sys/linux/mq_notify.c: Ditto.
        * libc/sys/linux/mq_open.c: Ditto.
        * libc/sys/linux/mq_receive.c: Ditto.
        * libc/sys/linux/mq_send.c: Ditto.
        * libc/sys/linux/mq_setattr.c: Ditto.
        * libc/sys/linux/mq_unlink.c: Ditto.
        * libc/sys/linux/mqlocal.h: Ditto.
        * libc/sys/linux/include/mqueue.h: Ditto.
        * libc/sys/linux/sys/types.h: Define __gid_t_defined and
        __uid_t_defined.
@
text
@d55 1
d69 4
a72 8
typedef unsigned int __socklen_t;
typedef unsigned int __useconds_t;

typedef __pid_t pid_t;
typedef __off_t off_t;
typedef __loff_t loff_t;
typedef __uint32_t uintptr_t;
typedef __int32_t intptr_t;
a74 4
typedef unsigned char u_char;
typedef unsigned short u_short;
typedef unsigned int u_int;
typedef unsigned long u_long;
a94 6
#ifndef __daddr_t_defined
typedef int daddr_t;
typedef char *caddr_t;
# define __daddr_t_defined
#endif

d142 7
@


1.8
log
@	* libc/sys/linux/sys/cdefs.h: Add __weak_reference macros.
	* libc/sys/linux/sys/time.h: Add conversion macros.
	* libc/sys/linux/sys/types.h: Add FD_ macros.  Include <bits/types.h>.
	* libc/sys/linux/ids.c: Add setresuid and syslog syscalls.
	* libc/sys/linux/gethostname.c: New file.
	* libc/sys/linux/seteuid.c: New file.
	* libc/sys/linux/sysctl.c: New file.
@
text
@d153 2
@


1.7
log
@
2002-05-22  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/sys/linux/shm_open.c: New file.
        * libc/sys/linux/shm_unlink.c: Ditto.
        * libc/sys/linux/Makefile.am: Add support for shm_open.c and
        shm_unlink.c.
        * libc/sys/linux/Makefile.in: Regenerated.
        * libc/sys/linux/sys/types.h: Add some additional checks to see
        if clock_t or time_t is already defined.
@
text
@d5 40
d120 30
d151 1
@


1.6
log
@
2002-05-17  Jeff Johnston  <jjohnstn@@redhat.com>

	* Makefile.am: Copy and install headers from sys/machine/include
	directory.  Also pass $toollibdir to lower-level directories.
	* Makefile.in: Regenerated.
	* libc/include/stdio.h[!_REENT_ONLY]: Change stdin, stdout, and
	stderr to use _REENT macro instead of _impure_ptr directly.
	* libc/include/sys/config.h[__i386__][__linux__]: Define
	__DYNAMIC_REENT__.
	* libc/include/sys/reent.h[!_REENT_ONLY]: Change _REENT macro to be
	call to __getreent() function if !__SINGLE_THREAD__ and
	__DYNAMIC_REENT__ is set.
	* libc/reent/Makefile.am: Add support for getreent.c.
	* libc/reent/Makefile.in: Regenerated.
	* libc/string/strerror.c: Add check if EOPNOTSUPP and ENOTSUP are same.
	* libc/sys/linux/Makefile.am: Add support for new files.
	* libc/sys/linux/configure.in: Add $EXTRA_DIRS variable.
	* libc/sys/linux/Makefile.in: Regenerated.
	* libc/sys/linux/configure: Ditto.
	* libc/sys/linux/io.c: Add poll syscall.  Also weak-alias
	__close, __read, __write, __poll, __open, __lseek, __fcntl from
	their __libc_ counterparts.
	* libc/sys/linux/io64.c: Add __libc_ prefix to lseek64 and open64
	and weak-alias to regular names.
	* libc/sys/linux/pread64.c: Rename to __libc_pread64 and weak-alias
	to pread64 and __pread64.
	* libc/sys/linux/process.c: Weak_alias __libc_getpid to __getpid.
	* libc/sys/linux/pwrite64.c: Rename to __libc_pwrite64 and
	weak-alias to pwrite64.
	* libc/sys/linux/sched.c: Weak-alias __libc_sched_getparam,
	__libc_sched_getscheduler, __libc_sched_get_priority_max,
	__libc_sched_get_priority_min, and __libc_sched_setschedule to
	name with __ instead of __libc_.
	* libc/sys/linux/siglongjmp.c: Include <machine/weakalias.h>.
	Rename siglongjmp to __libc_siglongjmp and weak-alias to siglongjmp.
	Call __libc_longjmp instead of longjmp, from __libc_siglongjmp.
	* libc/sys/linux/signal.c: Rename raise to __libc_raise and weak-alias
	to raise.
	* libc/sys/linux/socket.c: Weak-alias __libc_connect to __connect and
	__libc_send to __send.
	* libc/sys/linux/time.c: Weak-alias __libc_gettimeofday to
	__gettimeofday.
	* libc/sys/linux/wait.c: Rename wait to __libc_wait and weak-alias
	it to wait.  Rename wait3 to __libc_wait3 and weak-alias it to wait3.
	* libc/sys/linux/include/setjmp.h: Use __jmp_buf in sigjmp_buf
	type and typedef __jmp_buf to jmp_buf.
	* libc/sys/linux/machine/i386/Makefile.am: Add syscalls.c and
	setjmp.S.
	* libc/sys/linux/machine/i386/Makefile.in: Regenerated.
	* libc/sys/linux/machine/i386/crt0.c: Add support to clear .bss
	section.
	* libc/sys/linux/machine/i386/socketcall.h: Change to use __libc_
	prefix for function macros and then use weak_alias() to regular names.
	* libc/sys/linux/machine/i386/syscall.h: Ditto.
	* libc/sys/linux/sys/errno.h: Define EOPNOTSUP to be ENOTSUP.
	* libc/sys/linux/sys/stdio.h: Define _flockfile and _funlockfile
	to be flockfile() and funlockfile() respectively.
	* libc/sys/linux/sys/types.h
	* libc/reent/getreent.c: New file.
	* libc/sys/linux/flockfile.c: Ditto.
	* libc/sys/linux/funlockfile.c: Ditto.
	* libc/sys/linux/getreent.c: Ditto.
	* libc/sys/linux/pread.c: Ditto.
	* libc/sys/linux/pwrite.c: Ditto.
	* libc/sys/linux/raise.c: Ditto.
	* libc/sys/linux/system.c: Ditto.
	* libc/sys/linux/tcdrain.c: Ditto.
	* libc/sys/linux/machine/i386/i386mach.h: Ditto.
	* libc/sys/linux/machine/i386/setjmp.S: Ditto.
	* libc/sys/linux/machine/i386/syscalls.c: Ditto.
	* libc/sys/linux/machine/i386/weakalias.h: Ditto.
	* libc/sys/linux/machine/i386/include/setjmp.h: Ditto.
@
text
@d16 1
a16 1
#ifndef __time_t_defined
d22 1
a22 1
#ifndef __clock_t_defined
@


1.5
log
@
2002-04-25  Jeff Johnston  <jjohnstn@@redhat.com>

        *  libc/sys/linux/Makefile.am: Add support for sched.c.
        *  libc/sys/linux/Makefile.in: Regenerated.
        *  libc/sys/linux/sched.c: New file.
        *  libc/sys/linux/sys/types.h: Add struct timespec.
@
text
@d13 1
d34 35
d81 1
@


1.4
log
@
2002-04-23  Jeff Johnston  <jjohnstn@@redhat.com>

        *  libc/include/machine/types.h (__pid_t, __off_t, __loff_t): Added.
        *  libc/sys/linux/Makefile.am: Add support for mmap.c.
        *  libc/sys/linux/Makefile.in: Regenerated.
        *  libc/sys/linux/mmap.c: New file.
        *  libc/sys/linux/machine/i386/syscall.h: Add _syscall6 macro.
        *  libc/sys/linux/sys/types.h (pid_t, off_t, loff_t): Added.
@
text
@d34 10
@


1.3
log
@
2002-04-03  Jeff Johnston  <jjohnstn@@redhat.com>

	* configure.host: Add support for machine subdirectory of
	sys subdirectory.
	* configure.in: Add check for sys machine subdirectory.
	* Makefile.am: Ditto.
	* configure: Regenerated.
	* Makefile.in: Ditto.
	* libc/sys/linux/crt0.c: Moved to machine/i386 directory.
	* libc/sys/linux/sys/syscall.h: Ditto.
	* libc/sys/linux/sleep.c: New file.
	* libc/sys/linux/socket.c: Ditto.
	* libc/sys/linux/sockops.h: Ditto.
	* libc/sys/linux/stack.c: Ditto.
	* libc/sys/linux/usleep.c: Ditto.
	* libc/sys/linux/machine/Makefile.am: Ditto.
	* libc/sys/linux/machine/Makefile.in: Ditto.
	* libc/sys/linux/machine/aclocal.m4: Ditto.
	* libc/sys/linux/machine/configure: Ditto.
	* libc/sys/linux/machine/configure.in: Ditto.
	* libc/sys/linux/machine/i386/Makefile.am: Ditto.
	* libc/sys/linux/machine/i386/Makefile.in: Ditto.
	* libc/sys/linux/machine/i386/aclocal.m4: Ditto.
	* libc/sys/linux/machine/i386/configure: Ditto.
	* libc/sys/linux/machine/i386/configure.in: Ditto.
	* libc/sys/linux/machine/i386/crt0.c: Ditto.
	* libc/sys/linux/machine/i386/sigset.c: Ditto.
	* libc/sys/linux/machine/i386/sigstack.h: Ditto.
	* libc/sys/linux/machine/i386/socketcall.h: Ditto.
	* libc/sys/linux/machine/i386/syscall.h: Ditto.
	* libc/sys/linux/sys/select.h: Ditto.
	* libc/sys/linux/configure.in: Add support for machine directory.
	* libc/sys/linux/Makefile.am: Ditto plus add new files above.
	* libc/sys/linux/Makefile.in: Regenerated.
	* libc/sys/linux/configure: Ditto.
	* libc/sys/linux/brk.c: Use machine/syscall.h instead of sys/syscall.h.
	* libc/sys/linux/inode.c: Ditto.
	* libc/sys/linux/linux.c: Ditto.
	* libc/sys/linux/process.c: Ditto.
	* libc/sys/linux/systat.c: Ditto.
	* libc/sys/linux/time.c: Ditto.
	* libc/sys/linux/wait.c: Ditto.
	* libc/sys/linux/ids.c: Change header plus add setfsgid/setfsuid.
	* libc/sys/linux/io.c: Change header plus add readv/writev.
	* libc/sys/linux/signal.c: Change header plus change sigsuspend to
	use __sigsuspend syscall.
	* libc/sys/linux/select.c: Change header plus change select to
	use _newselect syscall.
	* libc/sys/linux/sys/cdefs.h: Add a number of standard definitions
	used by glibc header files.
	* libc/sys/linux/sys/types.h: Add __socklen_t and __useconds_t
	types.
@
text
@d28 5
a32 1
typedef long int __useconds_t;
@


1.2
log
@
2000-12-11  Joel Sherrill <joel@@OARcorp.com>

        * Merge RTEMS specific .h files into main libc/include.
        * libc/sys/rtems/include/signal.h: Removed.
        * libc/sys/rtems/include/time.h: Removed.
        * libc/sys/rtems/sys/features.h: Removed.
        * libc/sys/rtems/sys/sched.h: Removed.
        * libc/sys/rtems/sys/siginfo.h: Removed.
        * libc/sys/rtems/sys/signal.h: Removed.
        * libc/sys/rtems/sys/time.h: Removed.
        * libc/sys/rtems/sys/times.h: Removed.
        definitions for time_t and clock_t since these are
        no longer in time.h.
        * libc/include/pthread.h: New file.
        * libc/include/sys/sched.h: New file.
        * libc/include/sys/features.h: New file.
        * libc/include/time.h: Removed duplicate definition of clock_t
        and time_t, get them from <sys/types.h> instead.  Add prototypes        for POSIX clock and timer functionality.
        * libc/sys/linux/sys/types.h: Changed to include
        * libc/include/machine/types.h: Add _CLOCKID_T_ and _TIMER_T_.
        * libc/include/sys/signal.h: Add more complete set of POSIX
        signal functionality including real-time and threaded signals.
        * libc/include/sys/types.h: Add clock_t, time_t, struct
        timespec, and struct itimerspec.  Centralizing these makes
        things cleaner.  RTEMS uses 64-bit dev_t.
        Added numerous primitive definitions
        for pthreads including macros, pthread_attr_t,
        pthread_mutexattr_t, pthread_condattr_t, pthread_key_t,
        pthread_once_t, and pthread_t.
        * libc/include/sys/unistd.h: Added getlogin_r() prototype.
        If RTEMS follow POSIX on read(), write() and sbrk() prototype.
        Feature flags removed and moved to new file <sys/features.h>.
        Full set of POSIX sysconf() constants
@
text
@d27 3
@


1.1
log
@
2000-12-08  Werner Almesberger  <Werner.Almesberger@@epfl.ch>

        * configure.host: Added x86 linux target.
        * libc/unix/getpass.c (_PATH_PASSWD, _PASSWORD_LEN): Default
        definitions provided if not already defined.
        * libc/sys/linux/crt0.c: New file.
        * libc/sys/linux/Makefile.am: Ditto.
        * libc/sys/linux/Makefile.in: Ditto.
        * libc/sys/linux/aclocal.m4: Ditto.
        * libc/sys/linux/brk.c: Ditto.
        * libc/sys/linux/configure: Ditto.
        * libc/sys/linux/configure.in: Ditto.
        * libc/sys/linux/getoptlong.c: Ditto.
        * libc/sys/linux/ids.c: Ditto.
        * libc/sys/linux/inode.c: Ditto.
        * libc/sys/linux/io.c: Ditto.
        * libc/sys/linux/linux.c: Ditto.
        * libc/sys/linux/process.c: Ditto.
        * libc/sys/linux/realpath.c: Ditto.
        * libc/sys/linux/select.c: Ditto.
        * libc/sys/linux/signal.c: Ditto.
        * libc/sys/linux/systat.c: Ditto.
        * libc/sys/linux/termios.c: Ditto.
        * libc/sys/linux/time.c: Ditto.
        * libc/sys/linux/wait.c: Ditto.
        * libc/sys/linux/include/alloca.h: Ditto.
        * libc/sys/linux/include/getopt.h: Ditto.
        * libc/sys/linux/include/stdint.h: Ditto.
        * libc/sys/linux/include/unistd.h: Ditto.
        * libc/sys/linux/sys/cdefs.h: Ditto.
        * libc/sys/linux/sys/dirent.h: Ditto.
        * libc/sys/linux/sys/errno.h: Ditto.
        * libc/sys/linux/sys/fcntl.h: Ditto.
        * libc/sys/linux/sys/file.h: Ditto.
        * libc/sys/linux/sys/ioctl.h: Ditto.
        * libc/sys/linux/sys/resource.h: Ditto.
        * libc/sys/linux/sys/signal.h: Ditto.
        * libc/sys/linux/sys/stat.h: Ditto.
        * libc/sys/linux/sys/syscall.h: Ditto.
        * libc/sys/linux/sys/termios.h: Ditto.
        * libc/sys/linux/sys/time.h: Ditto.
        * libc/sys/linux/sys/types.h: Ditto.
        * libc/sys/linux/sys/utmp.h: Ditto.
        * libc/sys/linux/sys/utsname.h: Ditto.
        * libc/sys/linux/sys/wait.h: Ditto.
@
text
@d9 3
a11 5
/*
 * Okay, newlib has its own time_t and clock_t in libc/include/time.h
 * Since they're equivalent but not identical, we'll just skip the kernel's
 * definitions.
 */
d13 3
a15 1
#ifdef __time_t_defined
a16 1
#else
d18 1
d21 1
a21 1
#ifdef __clock_t_defined
a22 1
#else
d24 1
@

