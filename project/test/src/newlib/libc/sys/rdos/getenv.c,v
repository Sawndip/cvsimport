head	1.1;
access;
symbols
	cygwin-1_7_35-release:1.1
	cygwin-1_7_34-release:1.1
	newlib-2_2_0:1.1.0.14
	cygwin-1_7_33-release:1.1
	cygwin-1_7_32-release:1.1
	cygwin-1_7_31-release:1.1
	cygwin-1_7_30-release:1.1
	cygwin-1_7_29-release:1.1
	cygwin-1_7_28-release:1.1
	newlib-2_1_0:1.1
	cygwin-1_7_27-release:1.1
	cygwin-1_7_26-release:1.1
	cygwin-1_7_25-release:1.1
	cygwin-1_7_24-release:1.1
	cygwin-1_7_23-release:1.1
	cygwin-1_7_22-release:1.1
	cygwin-1_7_21-release:1.1
	cygwin-1_7_20-release:1.1
	cygwin-1_7_19-release:1.1
	cygwin-64bit-postmerge:1.1
	cygwin-64bit-premerge-branch:1.1.0.12
	cygwin-64bit-premerge:1.1
	cygwin-1_7_18-release:1.1
	newlib-2_0_0:1.1
	cygwin-1_7_17-release:1.1
	cygwin-64bit-branch:1.1.0.10
	cygwin-1_7_16-release:1.1
	cygwin-1_7_15-release:1.1
	cygwin-1_7_14_2-release:1.1
	cygwin-1_7_14-release:1.1
	cygwin-1_7_12-release:1.1
	cygwin-1_7_11-release:1.1
	cygwin-1_7_10-release:1.1
	newlib-1_20_0:1.1
	cygwin-1_7_9-release:1.1
	newlib-1_19_0:1.1
	cygwin-1_7_5-release:1.1
	cygwin-1_7_4-release:1.1
	cygwin-1_7_3-release:1.1
	cygwin-1_7_2-release:1.1
	newlib-1_18_0:1.1
	cygwin-1_7_1-release:1.1
	newlib-1_17_0-arc:1.1.0.8
	binutils-arc-20080908-branch:1.1.0.6
	binutils-arc-20080908-branchpoint:1.1
	newlib-1_17_0:1.1
	newlib-1_16_0:1.1
	newlib-1_15_0:1.1
	newlib-csl-coldfire-4_1-32:1.1
	newlib-csl-sourcerygxx-4_1-32:1.1
	newlib-csl-innovasic-fido-3_4_4-33:1.1
	newlib-csl-coldfire-4_1-30:1.1
	newlib-csl-sourcerygxx-4_1-30:1.1
	newlib-csl-coldfire-4_1-28:1.1
	newlib-csl-sourcerygxx-4_1-28:1.1
	newlib-csl-arm-2006q3-27:1.1
	newlib-csl-sourcerygxx-4_1-27:1.1
	newlib-csl-arm-2006q3-26:1.1
	newlib-csl-sourcerygxx-4_1-26:1.1
	newlib-csl-sourcerygxx-4_1-24:1.1
	newlib-csl-sourcerygxx-4_1-23:1.1
	newlib-csl-sourcerygxx-4_1-21:1.1
	newlib-csl-arm-2006q3-21:1.1
	newlib-csl-arm-2006q3-19:1.1
	newlib-csl-sourcerygxx-4_1-19:1.1
	newlib-csl-sourcerygxx-4_1-18:1.1
	newlib-csl-sourcerygxx-3_4_4-25:1.1
	newlib-csl-sourcerygxx-4_1-17:1.1
	newlib-csl-sourcerygxx-4_1-14:1.1
	newlib-csl-sourcerygxx-4_1-13:1.1
	newlib-csl-sourcerygxx-4_1-12:1.1
	newlib-csl-sourcerygxx-4_1-9:1.1
	newlib-csl-sourcerygxx-4_1-8:1.1
	newlib-csl-sourcerygxx-4_1-7:1.1
	newlib-csl-arm-2006q1-6:1.1
	newlib-csl-sourcerygxx-4_1-6:1.1
	newlib-csl-sourcerygxx-4_1-5:1.1
	newlib-csl-sourcerygxx-4_1-4:1.1
	newlib-autotools-branch:1.1.0.4
	newlib-csl-20060320-branch:1.1.0.2
	newlib-csl-20060320-branchpoint:1.1;
locks; strict;
comment	@ * @;


1.1
date	2006.01.31.19.33.56;	author jjohnstn;	state Exp;
branches;
next	;


desc
@@


1.1
log
@
2006-01-31  Leif Ekblad  <leif@@rdos.net>

        * configure.host: RDOS support added
        * libc/include/sys/config.h: Ditto.
        * libc/sys/rdos/Makefile.am, libc/sys/rdos/Makefile.in: New files.
        * libc/sys/rdos/aclocal.m4, libc/sys/rdos/chown.c: Ditto.
        * libc/sys/rdos/close.c, libc/sys/rdos/config.h: Ditto.
        * libc/sys/rdos/configure, libc/sys/rdos/configure.in: Ditto.
        * libc/sys/rdos/crt0.S, libc/sys/rdos/execve.c: Ditto.
        * libc/sys/rdos/fork.c, libc/sys/rdos/fstat.c: Ditto.
        * libc/sys/rdos/getenv.c, libc/sys/rdos/getpid.c: Ditto.
        * libc/sys/rdos/gettod.c, libc/sys/rdos/isatty.c: Ditto.
        * libc/sys/rdos/kill.c, libc/sys/rdos/link.c: Ditto.
        * libc/sys/rdos/lseek.c, libc/sys/rdos/open.c: Ditto.
        * libc/sys/rdos/rdos.S, libc/sys/rdos/rdos.h: Ditto.
        * libc/sys/rdos/rdoshelp.c, libc/sys/rdos/read.c: Ditto.
        * libc/sys/rdos/readlink.c, libc/sys/rdos/sbrk.c: Ditto.
        * libc/sys/rdos/stat.c, libc/sys/rdos/symlink.c: Ditto.
        * libc/sys/rdos/times.c, libc/sys/rdos/unlink.c: Ditto.
        * libc/sys/rdos/user.def, libc/sys/rdos/wait.c: Ditto.
        * libc/sys/rdos/write.c: Ditto.
@
text
@/*#######################################################################
# RDOS operating system
# Copyright (C) 1988-2006, Leif Ekblad
#
# This library is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published
# by the Free Software Foundation; either version 2.1 of the License, or
# (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA 
#
# The author of this program may be contacted at leif@@rdos.net
#
# getenv.c                                                                
# getenv function implementation
#
##########################################################################*/

/*
FUNCTION
<<getenv>>---look up environment variable

INDEX
	getenv
INDEX
	environ

ANSI_SYNOPSIS
	#include <stdlib.h>
	char *getenv(const char *<[name]>);

TRAD_SYNOPSIS
	#include <stdlib.h>
	char *getenv(<[name]>)
	char *<[name]>;

DESCRIPTION
<<getenv>> searches the list of environment variable names and values
(using the global pointer ``<<char **environ>>'') for a variable whose
name matches the string at <[name]>.  If a variable name matches,
<<getenv>> returns a pointer to the associated value.

RETURNS
A pointer to the (string) value of the environment variable, or
<<NULL>> if there is no such environment variable.

PORTABILITY
<<getenv>> is ANSI, but the rules for properly forming names of environment
variables vary from one system to another.

This function is not thread-safe, but does it need to be??
There is an reentrant class that should be used if reentrance is required

*/

#include <stdlib.h>
#include <stddef.h>
#include <string.h>
#include <rdos.h>

static char envbuf[256];

char *getenv(const char *name)
{
    int handle;
    char *ptr = 0;

    handle = RdosOpenSysEnv();
    if (handle)
    {
        if (RdosFindEnvVar(handle, name, envbuf))
            ptr = envbuf;
    }
    RdosCloseEnv(handle);
    return ptr;
}
@
