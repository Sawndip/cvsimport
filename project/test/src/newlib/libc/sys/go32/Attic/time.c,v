head	1.2;
access;
symbols
	cygnus_cvs_20020108_pre:1.1.1.1
	newlib-1_10_0:1.1.1.1
	cygwin-1-3-6-4:1.1.1.1.0.2
	newlib-1_9_0:1.1.1.1
	cygwin-1_1_1:1.1.1.1
	newlib-2000-02-17:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.2
date	2002.12.20.02.29.00;	author jjohnstn;	state dead;
branches;
next	1.1;

1.1
date	2000.02.17.19.39.50;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.17.19.39.50;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.2
log
@
2002-12-19  Jeff Johnston  <jjohnstn@@redhat.com>

        * configure.host: Remove references to go32.
        * libc/sys/go32/*: Removed.
@
text
@/*
FUNCTION
<<time>>---get current calendar time (as single number)

INDEX
	time

ANSI_SYNOPSIS
	#include <time.h>
	time_t time(time_t *<[t]>);

TRAD_SYNOPSIS
	#include <time.h>
	time_t time(<[t]>)
	time_t *<[t]>;

DESCRIPTION
<<time>> looks up the best available representation of the current
time and returns it, encoded as a <<time_t>>.  It stores the same
value at <[t]> unless the argument is <<NULL>>.

RETURNS
A <<-1>> result means the current time is not available; otherwise the
result represents the current time.

PORTABILITY
ANSI C requires <<time>>.
This function is a wrapper for <<gettimeofday>>; this pollutes the
namespace, and should be dealt with in the future.
*/

#include <_ansi.h>
#include <sys/types.h>
#include <sys/time.h>

time_t
_DEFUN(time,(t),
	time_t *t)
{
  struct timeval now;

  if (gettimeofday(&now, (struct timezone *)0) >= 0)
  {
    if (t) 
    {
      *t = now.tv_sec;
    }
    
    return now.tv_sec;

  }
  return -1 ;	
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import newlib-2000-02-17 snapshot
@
text
@@
