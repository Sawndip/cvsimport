head	1.3;
access;
symbols
	csl-arm-2004-q1a:1.2
	csl-arm-2004-q1:1.2
	newlib-1_12_0:1.2;
locks; strict;
comment	@# @;


1.3
date	2004.06.25.20.32.36;	author jjohnstn;	state dead;
branches;
next	1.2;

1.2
date	2004.01.27.23.26.21;	author jjohnstn;	state Exp;
branches;
next	1.1;

1.1
date	2004.01.23.21.37.26;	author jjohnstn;	state Exp;
branches;
next	;


desc
@@


1.3
log
@
2004-06-25  Artem B. Bityuckiy  <dedekind@@oktetlabs.ru>

	* acinclude.m4: Move iconv options into configure.in.
	* aclocal.m4: Regenerated.
	* configure: Ditto.
	* configure.in: Add iconv options.
	* newlib.hin: Add new iconv encodings and remove deleted ones.
	* doc/aclocal.m4: Regenerated.
	* doc/configure: Ditto.
	* iconvdata/aclocal.m4: Ditto.
	* iconvdata/configure: Ditto.
	* libc/iconv: Design change.  New size-optimized ccs format.
	* libc/iconv/AUTHORS: Removed.
	* libc/iconv/COPYING: Ditto.
	* libc/iconv/README.ORIGINAL: Ditto.
	* libc/iconv/README.TODO: Ditto.
	* libc/iconv/charset.aliases: Ditto.
	* libc/iconv/encoding.aliases: New file.
	* libc/iconv/Makefile.am: Updated.
	* libc/iconv/Makefile.in: Regenerated.
	* libc/iconv/iconv.tex: Updated.
	* libc/iconv/ccs/Makefile.am: Ditto.
	* libc/iconv/ccs/Makefile.in: Regenerated.
	* libc/iconv/ccs/big5.c: Updated.
	* libc/iconv/ccs/cns11643_plane1.c: Ditto.
	* libc/iconv/ccs/cns11643_plane14.c: Ditto.
	* libc/iconv/ccs/cns11643_plane2.c: Ditto.
	* libc/iconv/ccs/cp775.c: Ditto.
	* libc/iconv/ccs/cp850.c: Ditto.
	* libc/iconv/ccs/cp852.c: Ditto.
	* libc/iconv/ccs/cp855.c: Ditto.
	* libc/iconv/ccs/cp866.c: Ditto.
	* libc/iconv/ccs/iso_8859_1.c: Ditto.
	* libc/iconv/ccs/README.CCS.SOURCES: Removed.
	* libc/iconv/ccs/gb_2312_80.c: Ditto.
	* libc/iconv/ccs/iconv_mktbl: Ditto.
	* libc/iconv/ccs/jis_x0201.c: Ditto.
	* libc/iconv/ccs/jis_x0208_1983.c: Ditto.
	* libc/iconv/ccs/shift_jis.c: Ditto.
	* libc/iconv/ccs/us_ascii.c: Ditto.
	* libc/iconv/ccs/ccs.h: New file.
	* libc/iconv/ccs/ccsbi.c: Ditto.
	* libc/iconv/ccs/ccsbi.h: Ditto.
	* libc/iconv/ccs/ccsnames.h: Ditto.
	* libc/iconv/ccs/iso_8859_10.c: Ditto.
	* libc/iconv/ccs/iso_8859_11.c: Ditto.
	* libc/iconv/ccs/iso_8859_13.c: Ditto.
	* libc/iconv/ccs/iso_8859_14.c: Ditto.
	* libc/iconv/ccs/iso_8859_3.c: Ditto.
	* libc/iconv/ccs/iso_8859_6.c: Ditto.
	* libc/iconv/ccs/iso_8859_7.c: Ditto.
	* libc/iconv/ccs/iso_8859_8.c: Ditto.
	* libc/iconv/ccs/iso_8859_9.c: Ditto.
	* libc/iconv/ccs/iso_ir_111.c: Ditto.
	* libc/iconv/ccs/jis_x0201_1976.c: Ditto.
	* libc/iconv/ccs/jis_x0208_1990.c: Ditto.
	* libc/iconv/ccs/koi8_ru.c: Ditto.
	* libc/iconv/ccs/koi8_uni.c: Ditto.
	* libc/iconv/ccs/mktbl.pl: Ditto.
	* libc/iconv/ccs/win_1250.c: Ditto.
	* libc/iconv/ccs/win_1251.c: Ditto.
	* libc/iconv/ccs/win_1252.c: Ditto.
	* libc/iconv/ccs/win_1253.c: Ditto.
	* libc/iconv/ccs/win_1254.c: Ditto.
	* libc/iconv/ccs/win_1255.c: Ditto.
	* libc/iconv/ccs/win_1256.c: Ditto.
	* libc/iconv/ccs/win_1257.c: Ditto.
	* libc/iconv/ccs/win_1258.c: Ditto.
	* libc/iconv/ccs/iso_8859_15.c
	* libc/iconv/ccs/iso_8859_2.c
	* libc/iconv/ccs/iso_8859_4.c
	* libc/iconv/ccs/iso_8859_5.c
	* libc/iconv/ccs/jis_x0212_1990.c
	* libc/iconv/ccs/koi8_r.c
	* libc/iconv/ccs/koi8_u.c
	* libc/iconv/ccs/ksx1001.c
	* libc/iconv/ccs/binary/gb_2312_80.cct: Removed.
	* libc/iconv/ccs/binary/jis_x0201.cct: Ditto.
	* libc/iconv/ccs/binary/shift_jis.cct: Ditto.
	* libc/iconv/ccs/binary/us_ascii.cct: Ditto.
	* libc/iconv/ccs/binary/jis_x0208_1983.cct: Ditto.
	* libc/iconv/ccs/binary/Makefile.am: Updated.
	* libc/iconv/ccs/binary/Makefile.in: Regenerated.
	* libc/iconv/ccs/binary/big5.cct: Updated.
	* libc/iconv/ccs/binary/cns11643_plane1.cct: Ditto.
	* libc/iconv/ccs/binary/cns11643_plane14.cct: Ditto.
	* libc/iconv/ccs/binary/cns11643_plane2.cct: Ditto.
	* libc/iconv/ccs/binary/cp775.cct: Updated.: Ditto.
	* libc/iconv/ccs/binary/cp850.cct: Ditto.: Ditto.
	* libc/iconv/ccs/binary/cp852.cct: Ditto.: Ditto.
	* libc/iconv/ccs/binary/cp855.cct: Ditto.: Ditto.
	* libc/iconv/ccs/binary/cp866.cct: Ditto.: Ditto.
	* libc/iconv/ccs/binary/iso_8859_1.cct: Ditto.
	* libc/iconv/ccs/binary/iso_8859_15.cct: Ditto.
	* libc/iconv/ccs/binary/iso_8859_4.cct: Ditto.
	* libc/iconv/ccs/binary/iso_8859_5.cct: Ditto.
	* libc/iconv/ccs/binary/iso_8859_2.cct: Ditto.
	* libc/iconv/ccs/binary/jis_x0212_1990.cct: Ditto.
	* libc/iconv/ccs/binary/koi8_r.cct: Ditto.
	* libc/iconv/ccs/binary/koi8_u.cct: Ditto.
	* libc/iconv/ccs/binary/ksx1001.cct: Ditto.
	* libc/iconv/ccs/binary/iso_8859_10.cct: New file.
	* libc/iconv/ccs/binary/iso_8859_11.cct: Ditto.
	* libc/iconv/ccs/binary/iso_8859_13.cct: Ditto.
	* libc/iconv/ccs/binary/iso_8859_14.cct: Ditto.
	* libc/iconv/ccs/binary/iso_8859_3.cct: Ditto.
	* libc/iconv/ccs/binary/iso_8859_6.cct: Ditto.
	* libc/iconv/ccs/binary/iso_8859_7.cct: Ditto.
	* libc/iconv/ccs/binary/iso_8859_8.cct: Ditto.
	* libc/iconv/ccs/binary/iso_8859_9.cct: Ditto.
	* libc/iconv/ccs/binary/iso_ir_111.cct: Ditto.
	* libc/iconv/ccs/binary/jis_x0201_1976.cct: Ditto.
	* libc/iconv/ccs/binary/jis_x0208_1990.cct: Ditto.
	* libc/iconv/ccs/binary/koi8_ru.cct: Ditto.
	* libc/iconv/ccs/binary/koi8_uni.cct: Ditto.
	* libc/iconv/ccs/binary/win_1250.cct: Ditto.
	* libc/iconv/ccs/binary/win_1251.cct: Ditto.
	* libc/iconv/ccs/binary/win_1252.cct: Ditto.
	* libc/iconv/ccs/binary/win_1253.cct: Ditto.
	* libc/iconv/ccs/binary/win_1254.cct: Ditto.
	* libc/iconv/ccs/binary/win_1255.cct: Ditto.
	* libc/iconv/ccs/binary/win_1256.cct: Ditto.
	* libc/iconv/ccs/binary/win_1257.cct: Ditto.
	* libc/iconv/ccs/binary/win_1258.cct: Ditto.
	* libc/iconv/ces/Makefile.am: Updated.
	* libc/iconv/ces/Makefile.in: Regenerated.
	* libc/iconv/ces/ucs-2-internal.c: Updated.
	* libc/iconv/ces/ucs-4-internal.c: Ditto.
	* libc/iconv/ces/utf-16.c: Ditto.
	* libc/iconv/ces/utf-8.c: Ditto.
	* libc/iconv/ces/cesbi.c: New file.
	* libc/iconv/ces/cesbi.h: Ditto.
	* libc/iconv/ces/cesdeps.h: Ditto.
	* libc/iconv/ces/euc.c: Ditto.
	* libc/iconv/ces/mkdeps.pl: Ditto.
	* libc/iconv/ces/table-pcs.c: Ditto.
	* libc/iconv/ces/table.c: Ditto.
	* libc/iconv/ces/ucs-2.c: Ditto.
	* libc/iconv/ces/ucs-4.c: Ditto.
	* libc/iconv/ces/us-ascii.c: Ditto.
	* libc/iconv/ces/euc-jp.c: Removed.
	* libc/iconv/ces/euc-kr.c: Ditto.
	* libc/iconv/ces/euc-tw.c: Ditto.
	* libc/iconv/ces/gb2312.c: Ditto.
	* libc/iconv/ces/iso-10646-ucs-2.: Ditto.c
	* libc/iconv/ces/iso-10646-ucs-4.c: Ditto.
	* libc/iconv/lib/Makefile.am: Updated.
	* libc/iconv/lib/Makefile.in: Regenerated.
	* libc/iconv/lib/endian.h: Updated.
	* libc/iconv/lib/iconv.c: Ditto.
	* libc/iconv/lib/local.h: Ditto.
	* libc/iconv/lib/aliases.c: Removed.
	* libc/iconv/lib/bialiasesi.c: Ditto.
	* libc/iconv/lib/biccs.c: Ditto.
	* libc/iconv/lib/bices.c: Ditto.
	* libc/iconv/lib/ccs.c: Ditto.
	* libc/iconv/lib/ces.c: Ditto.
	* libc/iconv/lib/ces_euc.c: Ditto.
	* libc/iconv/lib/ces_iso2022.c: Ditto.
	* libc/iconv/lib/ces_table.c: Ditto.
	* libc/iconv/lib/converter.c: Ditto.
	* libc/iconv/lib/deps.h: Ditto.
	* libc/iconv/lib/aliasesbi.c: Ditto.
	* libc/iconv/lib/aliasesi.c: Ditto.
	* libc/iconv/lib/conv.h: Ditto.
	* libc/iconv/lib/encnames.h: Ditto.
	* libc/iconv/lib/encoding.deps: Ditto.
	* libc/iconv/lib/iconvnls.c: Ditto.
	* libc/iconv/lib/iconvnls.h: Ditto.
	* libc/iconv/lib/loaddata.c: Ditto.
	* libc/iconv/lib/nullconv.c: Ditto.
	* libc/iconv/lib/ucsconv.c: Ditto.
	* libc/iconv/lib/ucsconv.h: Ditto.
	* libc/include/iconv.h: Update copyright.
	* libc/*/aclocal.m4: Regenerated.
	* libc/*/configure: Ditto.
	* libm/*/aclocal.m4: Ditto.
	* libm/*/configure: Ditto.
@
text
@#! /usr/bin/perl
#
#  Copyright (c) 1999, 2000
#     Konstantin Chuguev.  All rights reserved.
# 
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
# 
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
#  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
#  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
#  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
#  OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
#  HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
#  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
#  OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
#  SUCH DAMAGE.
# 
#     iconv (Charset Conversion Library) v2.0
#

require 'getopts.pl';
use integer;

sub pack_hex {
    "_$_[0](" . join(", ", map sprintf("0x%02X", $_), unpack('C4', $_[1]))
    . ")";
}

sub pack_array {
    my($size, $format, $array_ref) = @@_;
    return pack("$format$size", @@$array_ref) unless $opt_C;
    my($res, $i);
    if ($format eq 'N') {
        for ($i = 0; $i < $size; $i += 2) {
            $res .= "\t"
                    . &pack_hex('1l', pack("N", $$array_ref[$i]))
                    . ", "
                . &pack_hex('1l', pack("N", $$array_ref[$i+1]))
                . ",\n";
        }
        $array_size += $size * 4;
    } else {
        for ($i = 0; $i < $size; $i += 4) {
            $res .= "\t"
                    . &pack_hex('2s', pack("n2", $$array_ref[$i], $$array_ref[$i+1]))
                    . ", "
                . &pack_hex('2s', pack("n2", $$array_ref[$i+2], $$array_ref[$i+3]))
                . ",\n";
        }
        $array_size += $size * 2;
    }
    return $res;
}

# create an array of short/long values in network byte order
sub build_array {
    my($size, $format, $default, $array_ref) = @@_;
    my($i);
    for $i (0 .. $size-1) {
        $$array_ref[$i] = $default unless defined($$array_ref[$i]);
    }
    return &pack_array($size, $format, $array_ref);
}

sub build_table1 {
    my($size, $array_ref) = @@_;
    return &build_array($size, "n", 0xFFFE, $array_ref);
}

sub build_table2 {
    my($size, $array_ref) = @@_;
    my($offset, $n, $i, @@offs) = ($size * 4, 0);
    for $i (0 .. $size-1) {
        next unless defined($$array_ref[$i]);
        $offs[$i] = $offset;
        $offset += $size * 2;
    }
    my($data) = (&build_array($size, "N", 0, \@@offs));
    for $i (0 .. $size-1) {
        next unless defined($$array_ref[$i]);
        $n ++;
        $data .= &build_table1($size, $$array_ref[$i]);
    }
    printf STDERR "%d subtables.\n", $n;
    return $data;
}

$control0 = 0;
$control1 = 0;
$delete = 0;

@@to_ucs;
@@from_ucs;

# set a value in two charset conversion tables; update charset properties
# ($cs, $ucs) = (local charset code, Unicode)
#
sub set_val {
    my($cs, $ucs) = @@_;
    return if $opt_a && $cs > 0x7F;
    $to_ucs[$cs >> 8][$cs & 0xFF] = $ucs;
    $from_ucs[$ucs >> 8][$ucs & 0xFF] = $cs;
    if (($cs & 0x60) == 0) {
        if($cs & 0x80) {
            $control1 = 1;
        } else {
            $control0 = 1;
        }
    }
    $delete = 1 if $cs == 0x7F;
    if ($cs < 0x80) {
        $_7bit = 1;
    } elsif ($cs < 0x100) {
        $_8bit = 1;
    } elsif ($cs & 0x8080) {
        $_16bit = 1;
    } else {
        $_14bit = 1;
    }
}

# set a range of equal codes to charset conversion tables
#
sub set_range {
    for (@@_) {
        &set_val($_, $_);
    }
}

&Getopts('aCc:Mm:o:p:u:');
#         ||| || | | +- u N:    field number for Unicode character codes
#         ||| || | +--- p str:    prefix
#         ||| || +----- o file:    output file name
#         ||| |+------- m file:    character mnemonic table from RFC1345
#         ||| +-------- M:    Macintosh newline (<LF> only)
#         ||+---------- c N:    field number for charset character codes
#         |+----------- C:    make C source file
#         +------------ a:    ignore 8 bit (for ASCII)

$opt_c = 0 unless defined($opt_c);
$opt_p = '0x' unless defined($opt_p);
$opt_u = 1 unless defined($opt_u);

if ($opt_o) {
    $opt_o =~ tr/-/_/;
    open(STDOUT, ">$opt_o");
    $opt_o =~ s/.c$//;
}

%map;

if ($opt_M) {
    $/ = "\cM";
}

if ($opt_m) {
    open(MAP, $opt_m);
    while(<MAP>) {
        chop;
        next unless /^ [^ ]/;
        next if 2 > split;
        $map{$_[0]} = $_[1];
    }
    close(MAP);
    local($code) = 0;
    while (<>) {
        chop;
        s/^ *//;
        if (/^&[a-z]/) {
            split(' ', substr($_, 1));
            if ($_[0] eq 'code') {
                $code = $_[1];
            }
        } else {
            foreach (split) {
                &set_val($code, hex "0x$map{$_}") if $_ ne '??';
                $code ++;
            }
        }
    }
} else {
    while (<>) {
        s/[#\n].*//;
        next if 2 > split;    # too few fields
        next if ($_[$opt_c] =~ s/^$opt_p/0x/o) != 1;
        # local charset code prefix is invalid
        &set_val(hex $_[$opt_c], hex $_[$opt_u]);
    }
}

if (!$_16bit && !$_14bit) {
    if ($_8bit) {
        print STDERR "8bit charset";
        if (!$control0) {
            &set_range(0 .. 0x1F);
            print STDERR "; control0 chars added";
        }
        if (!$control1) {
            &set_range(0x80 .. 0x9F);
            print STDERR "; control1 chars added";
        }
        if (!$delete) {
            &set_range(0x7F);
            print STDERR "; delete char added";
        }
        $nbits = 8;
        $type = 1;
    } else {
        print STDERR "7bit charset";
        $nbits = 7;
        $type = 0;
    }
    print STDERR ".\n";
    $to = &build_table1($_8bit ? 256 : 128, $to_ucs[0]);
} elsif ($_16bit) {
    print STDERR "16bit charset";
    if (!$_7bit && !$_8bit) {
        &set_range(0 .. 0x7F);
        print STDERR "; ASCII subset added";
    } elsif (!$control0) {
        &set_range(0 .. 0x1F);
        print STDERR "; control0 chars added";
    }
    print STDERR ".\n";
    $to = &build_table2(256, \@@to_ucs);
    $nbits = 16;
    $type = 3;
} else {
    print STDERR "14bit charset.\n";
    $to = &build_table2(128, \@@to_ucs);
    $nbits = 14;
    $type = 2;
}

$to_size = $opt_C ? $array_size : length($to);

$from = &build_table2(256, \@@from_ucs);

if ($opt_C) {
    die "-o option is mandatory with -C" unless $opt_o;
    $opt_o =~ s/\.c$//;
    $opt_o =~ tr/-/_/;
    $name = $opt_o;
        $name =~ tr/[a-z]/[A-Z]/;
    print "#include \"..\/lib\/deps.h\"\n\n";
    print "#ifdef _ICONV_CONVERTER_$name\n";
    print "#include \"..\/lib\/endian.h\"\n\n";
    print "_CONST unsigned char _iconv_ccs_table_$opt_o" . "[] = {\n";
    print "\t3, 'C', 'S', 'C', 'T', ICONV_ORDER, $nbits, $type,\n";
    print &pack_array(2, 'N', [8, 8 + $to_size]);
    print $to;
    print $from;
    print "};\n\n";
    print "#endif /* #ifdef _ICONV_CONVERTER_$name */\n\n";
} else {
    print pack("A5CCCNN", "\003CSCT", 0, $nbits, $type, 8, 8 + $to_size);
    print $to;
    print $from;
}

@


1.2
log
@
2004-01-27  Artem B. Bityuckiy  <abitytsky@@softminecorp.com>

	* configure.in: Add support to generate iconv converter flags
	for newlib.h
	* newlib.hin: Add iconv converter flags.
	* configure: Regenerated.
	* libc/Makefile.in: Ditto.
	* libc/configure.in: Moved iconv converter parsing logic to
	top level newlib configure.in.
	* libc/configure: Regenerated.
	* libc/iconv/Makefile.in: Ditto.
	* libc/iconv/README.TODO
	* libc/iconv/charset.aliases: Remove wrong BE aliases for
	UCS2/UCS4/UTF8.
	* libc/iconv/ccs/Makefile.am: Remove C flag setting now that
	newlib.h can be used.
	* libc/iconv/ces/Makefile.am: Ditto.
	* libc/iconv/lib/Makefile.am: Ditto.
	* libc/iconv/ccs/Makefile.in: Regenerated.
	* libc/iconv/ces/Makefile.in: Ditto.
	* libc/iconv/lib/Makefile.in: Ditto.
	* libc/iconv/ccs/README.CCS.SOURCES: Updated.
	* libc/iconv/ccs/iconv_mktbl: Don't write junk strings to binaries.
	* libc/iconv/ccs/big5.c: Switch to use new underscored flags
	defined in newlib.h.
	* libc/iconv/ccs/cns11643_plane1.c: Ditto.
	* libc/iconv/ccs/cns11643_plane14.c: Ditto.
	* libc/iconv/ccs/cns11643_plane2.c: Ditto.
	* libc/iconv/ccs/cp775.c: Ditto.
	* libc/iconv/ccs/cp850.c: Ditto.
	* libc/iconv/ccs/cp852.c: Ditto.
	* libc/iconv/ccs/cp855.c: Ditto.
	* libc/iconv/ccs/cp866.c: Ditto.
	* libc/iconv/ccs/gb_2312_80.c: Ditto.
	* libc/iconv/ccs/iso_8859_1.c: Ditto.
	* libc/iconv/ccs/iso_8859_15.c: Ditto.
	* libc/iconv/ccs/iso_8859_2.c: Ditto.
	* libc/iconv/ccs/iso_8859_4.c: Ditto.
	* libc/iconv/ccs/iso_8859_5.c: Ditto.
	* libc/iconv/ccs/jis_x0201.c: Ditto.
	* libc/iconv/ccs/jis_x0208_1983.c: Ditto.
	* libc/iconv/ccs/jis_x0212_1990.c: Ditto.
	* libc/iconv/ccs/koi8_r.c: Ditto.
	* libc/iconv/ccs/koi8_u.c: Ditto.
	* libc/iconv/ccs/ksx1001.c: Ditto.
	* libc/iconv/ccs/shift_jis.c: Ditto.
	* libc/iconv/ccs/us_ascii.c: Ditto.
	* libc/iconv/ccs/binary/big5.cct: Newly generated.
	* libc/iconv/ccs/binary/cns11643_plane1.cct: Ditto.
	* libc/iconv/ccs/binary/cns11643_plane14.cct: Ditto.
	* libc/iconv/ccs/binary/cns11643_plane2.cct: Ditto.
	* libc/iconv/ccs/binary/cp775.cct: Ditto.
	* libc/iconv/ccs/binary/cp850.cct: Ditto.
	* libc/iconv/ccs/binary/cp852.cct: Ditto.
	* libc/iconv/ccs/binary/cp855.cct: Ditto.
	* libc/iconv/ccs/binary/cp866.cct: Ditto.
	* libc/iconv/ccs/binary/gb_2312_80.cct: Ditto.
	* libc/iconv/ccs/binary/iso_8859_1.cct: Ditto.
	* libc/iconv/ccs/binary/iso_8859_15.cct: Ditto.
	* libc/iconv/ccs/binary/iso_8859_2.cct: Ditto.
	* libc/iconv/ccs/binary/iso_8859_4.cct: Ditto.
	* libc/iconv/ccs/binary/iso_8859_5.cct: Ditto.
	* libc/iconv/ccs/binary/jis_x0201.cct: Ditto.
	* libc/iconv/ccs/binary/jis_x0208_1983.cct: Ditto.
	* libc/iconv/ccs/binary/jis_x0212_1990.cct: Ditto.
	* libc/iconv/ccs/binary/koi8_r.cct: Ditto.
	* libc/iconv/ccs/binary/koi8_u.cct: Ditto.
	* libc/iconv/ccs/binary/ksx1001.cct: Ditto.
	* libc/iconv/ccs/binary/shift_jis.cct: Ditto.
	* libc/iconv/ccs/binary/us_ascii.cct: Ditto.
	* libc/iconv/lib/bialiasesi.c: Sync with charset.aliases.
	* libc/iconv/ces/euc-jp.c: Use newlib.h macros.
	* libc/iconv/ces/euc-kr.c: Ditto.
	* libc/iconv/ces/euc-tw.c: Ditto.
	* libc/iconv/ces/gb2312.c: Ditto.
	* libc/iconv/ces/iso-10646-ucs-2.c: Ditto.
	* libc/iconv/ces/iso-10646-ucs-4.c: Ditto.
	* libc/iconv/ces/ucs-2-internal.c: Ditto.
	* libc/iconv/ces/ucs-4-internal.c: Ditto.
	* libc/iconv/ces/utf-16.c: Ditto.
	* libc/iconv/ces/utf-8.c: Ditto.
	* libc/iconv/lib/aliases.c: Ditto.
	* libc/iconv/lib/biccs.c: Ditto.
	* libc/iconv/lib/bices.c: Ditto.
	* libc/iconv/lib/ccs.c: Ditto.
	* libc/iconv/lib/ces.c: Ditto.
	* libc/iconv/lib/ces_euc.c: Ditto.
	* libc/iconv/lib/ces_iso2022.c: Ditto.
	* libc/iconv/lib/ces_table.c: Ditto.
	* libc/iconv/lib/converter.c: Ditto.
	* libc/iconv/lib/deps.h: Ditto.
	* libc/iconv/lib/endian.h: Ditto.
	* libc/iconv/lib/iconv.c: Ditto.
	* libc/iconv/lib/loaddata.c: Ditto.
	* libc/iconv/lib/local.h: Include newlib.h.
	* libc/argz/Makefile.in: Regenerated.
	* libc/ctype/Makefile.in: Ditto.
	* libc/errno/Makefile.in: Ditto.
	* libc/iconv/ccs/binary/Makefile.in: Ditto.
	* libc/locale/Makefile.in: Ditto.
	* libc/misc/Makefile.in: Ditto.
	* libc/posix/Makefile.in: Ditto.
	* libc/reent/Makefile.in: Ditto.
	* libc/search/Makefile.in: Ditto.
	* libc/signal/Makefile.in: Ditto.
	* libc/stdio/Makefile.in: Ditto.
	* libc/stdio64/Makefile.in: Ditto.
	* libc/stdlib/Makefile.in: Ditto.
	* libc/string/Makefile.in: Ditto.
	* libc/syscalls/Makefile.in: Ditto.
	* libc/time/Makefile.in: Ditto.
	* libc/unix/Makefile.in: Ditto.
	* testsuite/newlib.iconv/iconv.exp: New file.
	* testsuite/newlib.iconv/iconvjp.c: Ditto.
	* testsuite/newlib.iconv/iconvnm.c: Ditto.
	* testsuite/newlib.iconv/iconvru.c: Ditto.
@
text
@@


1.1
log
@
2004-01-23  Artem B. Bityuckiy  <abitytsky@@softminecorp.com>

	* acinclude.m4 (--enable-newlib-iconv): New configuration option.
	(--enable-newlib-builtin-converters): Ditto.
	* configure.in: Add code to set _ICONV_ENABLED flag.
	Set _MB_LEN_MAX to 1 if not mb enabled.
	* configure: Regenerated.
	* aclocal.m4: Ditto.
	* Makefile.in: Ditto.
	* newlib.hin: Add _ICONV_ENABLED flag.
	* libc/Makefile.am: Add support for iconv.
	* libc/configure.in: Ditto.
	* libc/Makefile.in: Regenerated.
	* libc/aclocal.m4: Ditto.
	* libc/configure: Ditto.
	* libc/libc.texinfo: Add iconv documentation.
	* libc/iconv/AUTHORS, libc/iconv/COPYING, libc/iconv/Makefile.am,
	libc/iconv/Makefile.in, libc/iconv/README.ORIGINAL,
	libc/iconv/README.TODO, libc/iconv/charset.aliases,
	libc/iconv/iconv.tex, libc/iconv/ccs/Makefile.am,
	libc/iconv/ccs/Makefile.in, libc/iconv/ccs/README.CCS.SOURCES,
	libc/iconv/ccs/big5.c, libc/iconv/ccs/cns11643_plane1.c,
	libc/iconv/ccs/cns11643_plane14.c, libc/iconv/ccs/cns11643_plane2.c,
	libc/iconv/ccs/cp775.c, libc/iconv/ccs/cp850.c,
	libc/iconv/ccs/cp852.c, libc/iconv/ccs/cp855.c,
	libc/iconv/ccs/cp866.c, libc/iconv/ccs/gb_2312_80.c,
	libc/iconv/ccs/iconv_mktbl, libc/iconv/ccs/iso_8859_1.c,
	libc/iconv/ccs/iso_8859_15.c, libc/iconv/ccs/iso_8859_2.c,
	libc/iconv/ccs/iso_8859_4.c, libc/iconv/ccs/iso_8859_5.c,
	libc/iconv/ccs/jis_x0201.c, libc/iconv/ccs/jis_x0208_1983.c,
	libc/iconv/ccs/jis_x0212_1990.c, libc/iconv/ccs/koi8_r.c,
	libc/iconv/ccs/koi8_u.c, libc/iconv/ccs/ksx1001.c,
	libc/iconv/ccs/shift_jis.c, libc/iconv/ccs/us_ascii.c,
	libc/iconv/ccs/binary/Makefile.am, libc/iconv/ccs/binary/Makefile.in,
	libc/iconv/ccs/binary/big5.cct,
	libc/iconv/ccs/binary/cns11643_plane1.cct,
	libc/iconv/ccs/binary/cns11643_plane14.cct,
	libc/iconv/ccs/binary/cns11643_plane2.cct,
	libc/iconv/ccs/binary/cp775.cct, libc/iconv/ccs/binary/cp850.cct,
	libc/iconv/ccs/binary/cp852.cct, libc/iconv/ccs/binary/cp855.cct,
	libc/iconv/ccs/binary/cp866.cct, libc/iconv/ccs/binary/gb_2312_80.cct,
	libc/iconv/ccs/binary/iso_8859_1.cct,
	libc/iconv/ccs/binary/iso_8859_15.cct,
	libc/iconv/ccs/binary/iso_8859_2.cct,
	libc/iconv/ccs/binary/iso_8859_4.cct,
	libc/iconv/ccs/binary/iso_8859_5.cct,
	libc/iconv/ccs/binary/jis_x0201.cct,
	libc/iconv/ccs/binary/jis_x0208_1983.cct,
	libc/iconv/ccs/binary/jis_x0212_1990.cct,
	libc/iconv/ccs/binary/koi8_r.cct, libc/iconv/ccs/binary/koi8_u.cct,
	libc/iconv/ccs/binary/ksx1001.cct,
	libc/iconv/ccs/binary/shift_jis.cct,
	libc/iconv/ccs/binary/us_ascii.cct,
	libc/iconv/ces/Makefile.am, libc/iconv/ces/Makefile.in,
	libc/iconv/ces/euc-jp.c, libc/iconv/ces/euc-kr.c,
	libc/iconv/ces/euc-tw.c, libc/iconv/ces/gb2312.c,
	libc/iconv/ces/iso-10646-ucs-2.c, libc/iconv/ces/iso-10646-ucs-4.c,
	libc/iconv/ces/ucs-2-internal.c, libc/iconv/ces/ucs-4-internal.c,
	libc/iconv/ces/utf-16.c, libc/iconv/ces/utf-8.c,
	libc/iconv/lib/Makefile.am, libc/iconv/lib/Makefile.in,
	libc/iconv/lib/aliases.c, libc/iconv/lib/bialiasesi.c,
	libc/iconv/lib/biccs.c, libc/iconv/lib/bices.c,
	libc/iconv/lib/ccs.c, libc/iconv/lib/ces.c,
	libc/iconv/lib/ces_euc.c, libc/iconv/lib/ces_iso2022.c,
	libc/iconv/lib/ces_table.c, libc/iconv/lib/converter.c,
	libc/iconv/lib/deps.h, libc/iconv/lib/endian.h,
	libc/iconv/lib/iconv.c, libc/iconv/lib/loaddata.c,
	libc/iconv/lib/local.h, libc/include/iconv.h: New files.
	* libc/sys/linux/include/iconv.h: Ditto.
	* libc/include/sys/_types.h (_iconv_t): Added.
	* doc/aclocal.m4: Regenerated.
	* doc/configure: Ditto.
	* doc/Makefile.in: Ditto.
	* iconvdata/Makefile.in: Ditto.
	* iconvdata/aclocal.m4: Ditto.
	* iconvdata/configure: Ditto.
	* libc/*aclocal.m4: Ditto.
	* libc/*Makefile.in: Ditto.
	* libc/*configure: Ditto.
	* libm/*aclocal.m4: Ditto.
	* libm/*Makefile.in: Ditto.
	* libm/*configure: Ditto.
@
text
@d254 4
a257 5
    print qq/#ifdef ENABLE_ICONV\n/;
    print qq/#include "..\/lib\/deps.h"\n\n/;
    print "#ifdef ICONV_CONVERTER_$name\n";
    print qq/#include "..\/lib\/endian.h"\n\n/;
    print "_CONST unsigned char iconv_ccs_table_$opt_o" . "[] = {\n";
d260 4
d266 2
a268 5
print $to;
print $from;
print "};\n\n";
print "#endif /* #ifdef ICONV_CONVERTER_$name */\n\n";
print "#endif /* #ifdef ENABLE_ICONV */\n" if $opt_C;
@

