head	1.4;
access;
symbols
	cygwin-1_7_35-release:1.4
	cygwin-1_7_34-release:1.4
	newlib-2_2_0:1.4.0.6
	cygwin-1_7_33-release:1.4
	cygwin-1_7_32-release:1.4
	cygwin-1_7_31-release:1.4
	cygwin-1_7_30-release:1.4
	cygwin-1_7_29-release:1.4
	cygwin-1_7_28-release:1.4
	newlib-2_1_0:1.4
	cygwin-1_7_27-release:1.4
	cygwin-1_7_26-release:1.4
	cygwin-1_7_25-release:1.4
	cygwin-1_7_24-release:1.4
	cygwin-1_7_23-release:1.4
	cygwin-1_7_22-release:1.4
	cygwin-1_7_21-release:1.4
	cygwin-1_7_20-release:1.4
	cygwin-1_7_19-release:1.4
	cygwin-64bit-postmerge:1.4
	cygwin-64bit-premerge-branch:1.4.0.4
	cygwin-64bit-premerge:1.4
	cygwin-1_7_18-release:1.4
	newlib-2_0_0:1.4
	cygwin-1_7_17-release:1.4
	cygwin-64bit-branch:1.4.0.2
	cygwin-1_7_16-release:1.4
	cygwin-1_7_15-release:1.4
	cygwin-1_7_14_2-release:1.4
	cygwin-1_7_14-release:1.4
	cygwin-1_7_12-release:1.4
	cygwin-1_7_11-release:1.4
	cygwin-1_7_10-release:1.4
	newlib-1_20_0:1.4
	cygwin-1_7_9-release:1.4
	cygwin-1_7_8-release:1.4
	newlib-1_19_0:1.4
	cygwin-1_7_7-release:1.4
	cygwin-1_7_5-release:1.4
	cygwin-1_7_4-release:1.4
	cygwin-1_7_3-release:1.4
	cygwin-1_7_2-release:1.4
	newlib-1_18_0:1.4
	cygwin-1_7_1-release:1.4
	newlib-1_17_0-arc:1.3.0.4
	binutils-arc-20080908-branch:1.3.0.2
	binutils-arc-20080908-branchpoint:1.3
	newlib-1_17_0:1.3
	newlib-1_16_0:1.2
	newlib-1_15_0:1.2
	newlib-csl-coldfire-4_1-32:1.2
	newlib-csl-sourcerygxx-4_1-32:1.2
	newlib-csl-innovasic-fido-3_4_4-33:1.2
	newlib-csl-coldfire-4_1-30:1.2
	newlib-csl-sourcerygxx-4_1-30:1.2
	newlib-csl-coldfire-4_1-28:1.2
	newlib-csl-sourcerygxx-4_1-28:1.2
	newlib-csl-arm-2006q3-27:1.2
	newlib-csl-sourcerygxx-4_1-27:1.2
	newlib-csl-arm-2006q3-26:1.2
	newlib-csl-sourcerygxx-4_1-26:1.2
	newlib-csl-sourcerygxx-4_1-24:1.2
	newlib-csl-sourcerygxx-4_1-23:1.2
	newlib-csl-sourcerygxx-4_1-21:1.2
	newlib-csl-arm-2006q3-21:1.2
	newlib-csl-arm-2006q3-19:1.2
	newlib-csl-sourcerygxx-4_1-19:1.2
	newlib-csl-sourcerygxx-4_1-18:1.2
	newlib-csl-sourcerygxx-3_4_4-25:1.2
	newlib-csl-sourcerygxx-4_1-17:1.2
	cr-0x5f1:1.2.0.6
	newlib-csl-sourcerygxx-4_1-14:1.2
	newlib-csl-sourcerygxx-4_1-13:1.2
	newlib-csl-sourcerygxx-4_1-12:1.2
	newlib-csl-sourcerygxx-4_1-9:1.2
	newlib-csl-sourcerygxx-4_1-8:1.2
	newlib-csl-sourcerygxx-4_1-7:1.2
	newlib-csl-arm-2006q1-6:1.2
	newlib-csl-sourcerygxx-4_1-6:1.2
	newlib-csl-sourcerygxx-4_1-5:1.2
	newlib-csl-sourcerygxx-4_1-4:1.2
	newlib-autotools-branch:1.2.0.4
	newlib-csl-20060320-branch:1.2.0.2
	newlib-csl-20060320-branchpoint:1.2
	newlib-1_14_0:1.2
	newlib-csl-arm-2005-q1b:1.1.1.1
	newlib-csl-arm-2005-q1a:1.1.1.1
	newlib-1_13_0:1.1.1.1
	csl-arm-2004-q3:1.1.1.1
	csl-arm-2004-q1a:1.1.1.1
	csl-arm-2004-q1:1.1.1.1
	newlib-1_12_0:1.1.1.1
	csl-arm-2003-q4:1.1.1.1
	w32api-2_2:1.1.1.1
	mingw-runtime-2_4:1.1.1.1
	newlib-1_11_0:1.1.1.1
	cygnus_cvs_20020108_pre:1.1.1.1
	newlib-1_10_0:1.1.1.1
	newlib-1_9_0:1.1.1.1
	newlib-2000-02-17:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.4
date	2009.04.09.10.37.57;	author corinna;	state Exp;
branches;
next	1.3;

1.3
date	2008.07.21.21.28.34;	author jjohnstn;	state Exp;
branches;
next	1.2;

1.2
date	2005.10.28.21.33.22;	author jjohnstn;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.39.46;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.17.19.39.46;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.4
log
@	* libc/ctype/ctype_.c (_CTYPE_DATA_0_127): Remove _B flag from TAB.
	* libc/ctype/ctype_cp.h: Mark non-cased letters in tables for codepages
	720, 862, 874, 1255, and 1256 to _U|_L.  Fix a couple of incorrect
	class mappings.
	* libc/ctype/ctype_iso.h: Mark non-cased letters in ISO-8859 tables
	6, 8, and 11 to _U|_L.  Fix a couple of incorrect class mappings.
	* libc/ctype/isblank.c (isblank): Special case TAB.
	* libc/ctype/islower.c (islower): Check explicitely for _L flag only
	in (_U|_L).
	* libc/ctype/isupper.c (isupper): Ditto, but check for _U flag.
	* libc/include/ctype.h (islower): Same in macro.
	(isupper): Ditto.
	(isblank): Special case TAB.  Redefine macro for GCC only.
@
text
@
/*
FUNCTION
<<isupper>>---uppercase character predicate

INDEX
isupper

ANSI_SYNOPSIS
#include <ctype.h>
int isupper(int <[c]>);

TRAD_SYNOPSIS
#include <ctype.h>
int isupper(<[c]>);

DESCRIPTION
<<isupper>> is a macro which classifies ASCII integer values by table
lookup.  It is a predicate returning non-zero for uppercase letters
(<<A>>--<<Z>>), and 0 for other characters.  It is defined only when
<<isascii>>(<[c]>) is true or <[c]> is EOF.

You can use a compiled subroutine instead of the macro definition by
undefining the macro using `<<#undef isupper>>'.

RETURNS
<<isupper>> returns non-zero if <[c]> is a uppercase letter (A-Z).

PORTABILITY
<<isupper>> is ANSI C.

No supporting OS subroutines are required.
*/
#include <_ansi.h>
#include <ctype.h>

#undef isupper
int
_DEFUN(isupper,(c),int c)
{
	return ((__ctype_ptr__[c+1] & (_U|_L)) == _U);
}

@


1.3
log
@
2008-07-21  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/ctype/ctype_.c: Add new pointer __ctype_ptr__ which is one
        less than the old __ctype_ptr.
        * libc/ctype/isalnum.c: Use __ctype_ptr__.
        * libc/ctype/isalpha.c: Ditto.
        * libc/ctype/iscntrl.c: Ditto.
        * libc/ctype/isdigit.c: Ditto.
        * libc/ctype/islower.c: Ditto.
        * libc/ctype/isprint.c: Ditto.
        * libc/ctype/ispunct.c: Ditto.
        * libc/ctype/isspace.c: Ditto.
        * libc/ctype/isupper.c: Ditto.
        * libc/ctype/isxdigit.c: Ditto.
        * libc/include/ctype.h: Change ctype macros to use new __ctype_ptr__
        and add declaration of __ctype_ptr__.  Remove older ctype table pointers
        from here even though they can still work.
@
text
@d41 1
a41 1
	return(__ctype_ptr__[c+1] & _U);
@


1.2
log
@
2005-10-28  Bob Wilson  <bob.wilson@@acm.org>

        * libc/ctype/ctype.tex: Use hyphens as appropriate, but not  otherwise.
        * libc/ctype/islower.c: Likewise.
        * libc/ctype/isupper.c: Likewise.
        * libc/ctype/iswalnum.c: Likewise.
        * libc/ctype/iswalpha.c: Likewise.
        * libc/ctype/iswblank.c: Likewise.
        * libc/ctype/iswcntrl.c: Likewise.
        * libc/ctype/iswdigit.c: Likewise.
        * libc/ctype/iswgraph.c: Likewise.
        * libc/ctype/iswlower.c: Likewise.
        * libc/ctype/iswprint.c: Likewise.
        * libc/ctype/iswpunct.c: Likewise.
        * libc/ctype/iswspace.c: Likewise.
        * libc/ctype/iswupper.c: Likewise.
        * libc/ctype/iswxdigit.c: Likewise.
        * libc/ctype/tolower.c: Likewise.
        * libc/ctype/toupper.c: Likewise.
        * libc/ctype/towctrans.c: Likewise.
        * libc/ctype/towlower.c: Likewise.
        * libc/ctype/towupper.c: Likewise.
        * libc/string/strcasecmp.c: Likewise.
        * libc/string/strcoll.c: Likewise.
        * libc/string/strings.tex: Likewise.
        * libc/string/strlwr.c: Likewise.
        * libc/string/strncasecmp.c: Likewise.
        * libc/string/strupr.c: Likewise.
        * libc/string/wcscoll.c: Likewise.
        * libc/string/wcslcat.c: Likewise.
        * libc/string/wcslcpy.c: Likewise.
        * libc/string/wcsnlen.c: Likewise.
        * libc/string/wcsstr.c: Likewise.
        * libc/string/wcstrings.tex: Likewise.
        * libc/string/wmemchr.c: Likewise.
        * libc/string/wmemcmp.c: Likewise.
        * libc/string/wmemcpy.c: Likewise.
        * libc/string/wmemmove.c: Likewise.
        * libc/string/wmemset.c: Likewise.
@
text
@d41 1
a41 1
	return((_ctype_ + 1)[c] & _U);
@


1.1
log
@Initial revision
@
text
@d19 1
a19 1
lookup.  It is a predicate returning non-zero for upper-case letters
d27 1
a27 1
<<isupper>> returns non-zero if <[c]> is a upper case letter (A-Z).
@


1.1.1.1
log
@import newlib-2000-02-17 snapshot
@
text
@@
