head	1.4;
access;
symbols
	cygwin-1_7_35-release:1.4
	cygwin-1_7_34-release:1.4
	newlib-2_2_0:1.4.0.10
	cygwin-1_7_33-release:1.4
	cygwin-1_7_32-release:1.4
	cygwin-1_7_31-release:1.4
	cygwin-1_7_30-release:1.4
	cygwin-1_7_29-release:1.4
	cygwin-1_7_28-release:1.4
	newlib-2_1_0:1.4
	cygwin-1_7_27-release:1.4
	cygwin-1_7_26-release:1.4
	cygwin-1_7_25-release:1.4
	cygwin-1_7_24-release:1.4
	cygwin-1_7_23-release:1.4
	cygwin-1_7_22-release:1.4
	cygwin-1_7_21-release:1.4
	cygwin-1_7_20-release:1.4
	cygwin-1_7_19-release:1.4
	cygwin-64bit-postmerge:1.4
	cygwin-64bit-premerge-branch:1.4.0.8
	cygwin-64bit-premerge:1.4
	cygwin-1_7_18-release:1.4
	newlib-2_0_0:1.4
	cygwin-1_7_17-release:1.4
	cygwin-64bit-branch:1.4.0.6
	cygwin-1_7_16-release:1.4
	cygwin-1_7_15-release:1.4
	cygwin-1_7_14_2-release:1.4
	cygwin-1_7_14-release:1.4
	cygwin-1_7_12-release:1.4
	cygwin-1_7_11-release:1.4
	cygwin-1_7_10-release:1.4
	newlib-1_20_0:1.4
	cygwin-1_7_9-release:1.4
	cygwin-1_7_8-release:1.4
	newlib-1_19_0:1.4
	cygwin-1_7_7-release:1.4
	cygwin-1_7_5-release:1.4
	cygwin-1_7_4-release:1.4
	cygwin-1_7_3-release:1.4
	cygwin-1_7_2-release:1.4
	newlib-1_18_0:1.4
	cygwin-1_7_1-release:1.4
	newlib-1_17_0-arc:1.4.0.4
	binutils-arc-20080908-branch:1.4.0.2
	binutils-arc-20080908-branchpoint:1.4
	newlib-1_17_0:1.4
	newlib-1_16_0:1.3
	newlib-1_15_0:1.3
	newlib-csl-coldfire-4_1-32:1.3
	newlib-csl-sourcerygxx-4_1-32:1.3
	newlib-csl-innovasic-fido-3_4_4-33:1.3
	newlib-csl-coldfire-4_1-30:1.3
	newlib-csl-sourcerygxx-4_1-30:1.3
	newlib-csl-coldfire-4_1-28:1.3
	newlib-csl-sourcerygxx-4_1-28:1.3
	newlib-csl-arm-2006q3-27:1.3
	newlib-csl-sourcerygxx-4_1-27:1.3
	newlib-csl-arm-2006q3-26:1.3
	newlib-csl-sourcerygxx-4_1-26:1.3
	newlib-csl-sourcerygxx-4_1-24:1.3
	newlib-csl-sourcerygxx-4_1-23:1.3
	newlib-csl-sourcerygxx-4_1-21:1.3
	newlib-csl-arm-2006q3-21:1.3
	newlib-csl-arm-2006q3-19:1.3
	newlib-csl-sourcerygxx-4_1-19:1.3
	newlib-csl-sourcerygxx-4_1-18:1.3
	newlib-csl-sourcerygxx-3_4_4-25:1.3
	newlib-csl-sourcerygxx-4_1-17:1.3
	cr-0x5f1:1.3.0.6
	newlib-csl-sourcerygxx-4_1-14:1.3
	newlib-csl-sourcerygxx-4_1-13:1.3
	newlib-csl-sourcerygxx-4_1-12:1.3
	newlib-csl-sourcerygxx-4_1-9:1.3
	newlib-csl-sourcerygxx-4_1-8:1.3
	newlib-csl-sourcerygxx-4_1-7:1.3
	newlib-csl-arm-2006q1-6:1.3
	newlib-csl-sourcerygxx-4_1-6:1.3
	newlib-csl-sourcerygxx-4_1-5:1.3
	newlib-csl-sourcerygxx-4_1-4:1.3
	newlib-autotools-branch:1.3.0.4
	newlib-csl-20060320-branch:1.3.0.2
	newlib-csl-20060320-branchpoint:1.3
	newlib-1_14_0:1.3
	newlib-csl-arm-2005-q1b:1.3
	newlib-csl-arm-2005-q1a:1.3
	newlib-1_13_0:1.3
	csl-arm-2004-q3:1.3
	csl-arm-2004-q1a:1.3
	csl-arm-2004-q1:1.3
	newlib-1_12_0:1.3
	csl-arm-2003-q4:1.3
	w32api-2_2:1.3
	mingw-runtime-2_4:1.3
	newlib-1_11_0:1.3
	cygnus_cvs_20020108_pre:1.2
	newlib-1_10_0:1.2
	newlib-1_9_0:1.2
	newlib-2000-02-17:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.4
date	2008.05.21.21.46.04;	author ericb;	state Exp;
branches;
next	1.3;

1.3
date	2002.12.20.21.31.19;	author jjohnstn;	state Exp;
branches;
next	1.2;

1.2
date	2000.08.28.17.50.06;	author jjohnstn;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.39.46;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.17.19.39.46;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Optimize strchr for x86.

* libc/machine/i386/strchr.S (strchr): Pre-align data so unaligned
searches aren't penalized.  Special-case searching for 0.
@
text
@/*
 * ====================================================
 * Copyright (C) 1998, 2002, 2008 by Red Hat Inc. All rights reserved.
 *
 * Permission to use, copy, modify, and distribute this
 * software is freely granted, provided that this notice
 * is preserved.
 * ====================================================
 */

	#include "i386mach.h"

	.global SYM (strchr)
       SOTYPE_FUNCTION(strchr)

SYM (strchr):

	pushl ebp
	movl esp,ebp
	pushl edi
	pushl ebx
	xorl ebx,ebx
	movl 8(ebp),edi
	addb 12(ebp),bl

#ifndef __OPTIMIZE_SIZE__
/* Special case strchr(p,0).  */
	je L25

/* Do byte-wise checks until string is aligned.  */
	test $3,edi
	je L5
	movl edi,eax
	movb (eax),cl
	testb cl,cl
	je L14
	cmpb bl,cl
	je L19
	incl edi

	test $3,edi
	je L5
	movl edi,eax
	movb (eax),cl
	testb cl,cl
	je L14
	cmpb bl,cl
	je L19
	incl edi

	test $3,edi
	je L5
	movl edi,eax
	movb (eax),cl
	testb cl,cl
	je L14
	cmpb bl,cl
	je L19
	incl edi

/* create 4 byte mask which is just the desired byte repeated 4 times */
L5:
	movl ebx,ecx
	sall $8,ebx
	subl $4,edi
	orl ecx,ebx
	movl ebx,edx
	sall $16,ebx
	orl edx,ebx

/* loop performing 4 byte mask checking for 0 byte or desired byte */
	.p2align 4,,7
L10:
	addl $4,edi
	movl (edi),ecx
	leal -16843009(ecx),edx
	movl ecx,eax
	notl eax
	andl eax,edx
	testl $-2139062144,edx
	jne L9

	xorl ebx,ecx
	leal -16843009(ecx),edx
	notl ecx
	andl ecx,edx
	testl $-2139062144,edx
	je L10
#endif /* not __OPTIMIZE_SIZE__ */

/* loop while (*s && *s++ != c) */
L9:
	leal -1(edi),eax
	.p2align 4,,7
L15:
	incl eax
	movb (eax),dl
	testb dl,dl
	je L14
	cmpb bl,dl
	jne L15

L14:
/*  if (*s == c) return address otherwise return NULL */
	cmpb bl,(eax)
	je L19
	xorl eax,eax

L19:
	leal -8(ebp),esp
	popl ebx
	popl edi
	leave
	ret

#ifndef __OPTIMIZE_SIZE__
/* Special case strchr(p,0).  */
#if 0
	/* Hideous performance on modern machines.  */
L25:
	cld
	movl $-1,ecx
	xor eax,eax
	repnz
	scasb
	leal -1(edi),eax
	jmp L19
#endif
L25:
/* Do byte-wise checks until string is aligned.  */
	test $3,edi
	je L26
	movl edi,eax
	movb (eax),cl
	testb cl,cl
	je L19
	incl edi

	test $3,edi
	je L26
	movl edi,eax
	movb (eax),cl
	testb cl,cl
	je L19
	incl edi

	test $3,edi
	je L26
	movl edi,eax
	movb (eax),cl
	testb cl,cl
	je L19
	incl edi

L26:
	subl $4,edi

/* loop performing 4 byte mask checking for desired 0 byte */
	.p2align 4,,7
L27:
	addl $4,edi
	movl (edi),ecx
	leal -16843009(ecx),edx
	movl ecx,eax
	notl eax
	andl eax,edx
	testl $-2139062144,edx
	je L27

	jmp L9

#endif /* !__OPTIMIZE_SIZE__ */
@


1.3
log
@
2002-12-20  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/machine/i386/f_atan2.S: Change copyright from Cygnus
        Solutions to Red Hat Inc.
        * libc/machine/i386/f_atan2f.S: Ditto.
        * libc/machine/i386/f_exp.c: Ditto.
        * libc/machine/i386/f_expf.c: Ditto.
        * libc/machine/i386/f_frexp.S: Ditto.
        * libc/machine/i386/f_frexpf.S: Ditto.
        * libc/machine/i386/f_ldexp.S: Ditto.
        * libc/machine/i386/f_ldexpf.S: Ditto.
        * libc/machine/i386/f_log.S: Ditto.
        * libc/machine/i386/f_log10.S: Ditto.
        * libc/machine/i386/f_log10f.S: Ditto.
        * libc/machine/i386/f_logf.S: Ditto.
        * libc/machine/i386/f_pow.c: Ditto.
        * libc/machine/i386/f_powf.c: Ditto.
        * libc/machine/i386/f_tan.S: Ditto.
        * libc/machine/i386/f_tanf.S: Ditto.
        * libc/machine/i386/memchr.S: Ditto.
        * libc/machine/i386/memcmp.S: Ditto.
        * libc/machine/i386/memcpy.S: Ditto.
        * libc/machine/i386/memmove.S: Ditto.
        * libc/machine/i386/memset.S: Ditto.
        * libc/machine/i386/strchr.S: Ditto.
        * libc/machine/i386/strlen.S: Ditto.
        * libm/machine/i386/f_atan2.S: Ditto.
        * libm/machine/i386/f_atan2f.S: Ditto.
        * libm/machine/i386/f_exp.c: Ditto.
        * libm/machine/i386/f_expf.c: Ditto.
        * libm/machine/i386/f_frexp.S: Ditto.
        * libm/machine/i386/f_frexpf.S: Ditto.
        * libm/machine/i386/f_ldexp.S: Ditto.
        * libm/machine/i386/f_ldexpf.S: Ditto.
        * libm/machine/i386/f_log.S: Ditto.
        * libm/machine/i386/f_log10.S: Ditto.
        * libm/machine/i386/f_log10f.S: Ditto.
        * libm/machine/i386/f_logf.S: Ditto.
        * libm/machine/i386/f_pow.c: Ditto.
        * libm/machine/i386/f_powf.c: Ditto.
        * libm/machine/i386/f_tan.S: Ditto.
        * libm/machine/i386/f_tanf.S: Ditto.
@
text
@d3 1
a3 1
 * Copyright (C) 1998, 2002 by Red Hat Inc. All rights reserved.
d12 1
a12 1
	
d24 26
a49 1
	movb 12(ebp),bl
a50 2
#ifndef __OPTIMIZE_SIZE__	
/* check if string is aligned, if not do check one byte at a time */
d52 8
a59 1
	jne L9
d62 1
d83 4
a86 5
	movl ebx,eax
	xorl ecx,eax
	leal -16843009(eax),edx
	notl eax
	andl eax,edx
d90 1
a90 1
		
d102 1
a102 1
	
d116 57
@


1.2
log
@
2000-08-27  Werner Almesberger  <Werner.Almesberger@@epfl.ch>

        * libc/machine/i386/i386mach.h: added SOTYPE_FUNCTION to set type
        of global entry points if _I386MACH_NEED_SOTYPE_FUNCTION is defined;
        Added __CLI and __STI macros (controlled via
        _I386MACH_ALLOW_HW_INTERRUPTS macro).
        * libc/machine/i386/f_atan2.S libc/machine/i386/f_atan2f.S
        libc/machine/i386/f_frexp.S libc/machine/i386/f_frexpf.S
        libc/machine/i386/f_ldexp.S libc/machine/i386/f_ldexpf.S
        libc/machine/i386/f_log.S libc/machine/i386/f_log10.S
        libc/machine/i386/f_log10f.S libc/machine/i386/f_logf.S
        libc/machine/i386/f_tan.S libc/machine/i386/f_tanf.S
        libc/machine/i386/memchr.S libc/machine/i386/memcmp.S
        libc/machine/i386/memcpy.S libc/machine/i386/memmove.S
        libc/machine/i386/memset.S libc/machine/i386/setjmp.S
        libc/machine/i386/strchr.S libc/machine/i386/strlen.S:
        (that's libc/machine/i386/*.S) added SOTYPE_FUNCTION(symbol)
        for all global entry points.
        * libc/machine/i386/setjmp.S: removed code replicated in
        libc/machine/i386/i386mach.h and included i386mach.h instead;
        Use __CLI and __STI instead of cli and sti.
@
text
@d3 1
a3 1
 * Copyright (C) 1998 by Cygnus Solutions. All rights reserved.
@


1.1
log
@Initial revision
@
text
@d14 1
@


1.1.1.1
log
@import newlib-2000-02-17 snapshot
@
text
@@
