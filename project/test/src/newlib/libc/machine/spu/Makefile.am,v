head	1.20;
access;
symbols
	cygwin-1_7_35-release:1.20
	cygwin-1_7_34-release:1.20
	newlib-2_2_0:1.20.0.6
	cygwin-1_7_33-release:1.20
	cygwin-1_7_32-release:1.20
	cygwin-1_7_31-release:1.20
	cygwin-1_7_30-release:1.20
	cygwin-1_7_29-release:1.20
	cygwin-1_7_28-release:1.20
	newlib-2_1_0:1.20
	cygwin-1_7_27-release:1.20
	cygwin-1_7_26-release:1.20
	cygwin-1_7_25-release:1.20
	cygwin-1_7_24-release:1.20
	cygwin-1_7_23-release:1.20
	cygwin-1_7_22-release:1.20
	cygwin-1_7_21-release:1.20
	cygwin-1_7_20-release:1.20
	cygwin-1_7_19-release:1.20
	cygwin-64bit-postmerge:1.20
	cygwin-64bit-premerge-branch:1.20.0.4
	cygwin-64bit-premerge:1.20
	cygwin-1_7_18-release:1.20
	newlib-2_0_0:1.20
	cygwin-1_7_17-release:1.20
	cygwin-64bit-branch:1.20.0.2
	cygwin-1_7_16-release:1.20
	cygwin-1_7_15-release:1.20
	cygwin-1_7_14_2-release:1.20
	cygwin-1_7_14-release:1.20
	cygwin-1_7_12-release:1.20
	cygwin-1_7_11-release:1.20
	cygwin-1_7_10-release:1.20
	newlib-1_20_0:1.20
	cygwin-1_7_9-release:1.20
	cygwin-1_7_8-release:1.20
	newlib-1_19_0:1.20
	cygwin-1_7_7-release:1.20
	cygwin-1_7_5-release:1.20
	cygwin-1_7_4-release:1.20
	cygwin-1_7_3-release:1.20
	cygwin-1_7_2-release:1.20
	newlib-1_18_0:1.20
	cygwin-1_7_1-release:1.20
	newlib-1_17_0-arc:1.19.0.2
	binutils-arc-20080908-branch:1.17.0.2
	binutils-arc-20080908-branchpoint:1.17
	newlib-1_17_0:1.19
	newlib-1_16_0:1.12
	newlib-1_15_0:1.3
	newlib-csl-sourcerygxx-3_4_4-25:1.1;
locks; strict;
comment	@# @;


1.20
date	2009.04.16.18.38.23;	author jjohnstn;	state Exp;
branches;
next	1.19;

1.19
date	2008.11.27.20.57.45;	author jjohnstn;	state Exp;
branches;
next	1.18;

1.18
date	2008.11.20.20.20.51;	author jjohnstn;	state Exp;
branches;
next	1.17;

1.17
date	2008.09.02.16.48.48;	author jjohnstn;	state Exp;
branches;
next	1.16;

1.16
date	2008.06.10.02.13.22;	author jjohnstn;	state Exp;
branches;
next	1.15;

1.15
date	2008.04.15.19.57.48;	author jjohnstn;	state Exp;
branches;
next	1.14;

1.14
date	2008.04.01.19.02.16;	author jjohnstn;	state Exp;
branches;
next	1.13;

1.13
date	2008.04.01.18.53.41;	author jjohnstn;	state Exp;
branches;
next	1.12;

1.12
date	2007.08.23.18.45.22;	author jjohnstn;	state Exp;
branches;
next	1.11;

1.11
date	2007.06.15.16.00.46;	author jjohnstn;	state Exp;
branches;
next	1.10;

1.10
date	2007.06.13.17.55.28;	author jjohnstn;	state Exp;
branches;
next	1.9;

1.9
date	2007.06.13.17.50.13;	author jjohnstn;	state Exp;
branches;
next	1.8;

1.8
date	2007.06.13.17.44.24;	author jjohnstn;	state Exp;
branches;
next	1.7;

1.7
date	2007.05.24.17.33.35;	author sje;	state Exp;
branches;
next	1.6;

1.6
date	2007.02.20.20.58.38;	author jjohnstn;	state Exp;
branches;
next	1.5;

1.5
date	2007.02.01.16.43.45;	author jjohnstn;	state Exp;
branches;
next	1.4;

1.4
date	2007.02.01.16.33.05;	author jjohnstn;	state Exp;
branches;
next	1.3;

1.3
date	2006.12.18.20.39.02;	author jjohnstn;	state Exp;
branches;
next	1.2;

1.2
date	2006.10.27.23.02.00;	author jjohnstn;	state Exp;
branches;
next	1.1;

1.1
date	2006.08.16.21.39.43;	author jjohnstn;	state Exp;
branches;
next	;


desc
@@


1.20
log
@
2009-04-16  Ken Werner  <ken.werner@@de.ibm.com>

        * libc/machine/spu/Makefile.am: Add new File.
        * libc/machine/spu/Makefile.in: Regenerate.
        * libc/machine/spu/fdopen.c: New file.
@
text
@## Process this file with automake to generate Makefile.in

AUTOMAKE_OPTIONS = cygnus

INCLUDES = $(NEWLIB_CFLAGS) $(CROSS_CFLAGS) $(TARGET_CFLAGS)

noinst_LIBRARIES = lib.a

AM_CCASFLAGS = $(INCLUDES)

lib_a_SOURCES = setjmp.S assert.c clearerr.c creat.c fclose.c feof.c \
	ferror.c fflush.c fgetc.c fgetpos.c fgets.c fileno.c fiprintf.S \
	fiscanf.S fopen.c fprintf.S fputc.c fputs.c fread.c freopen.c \
	fscanf.S fseek.c fsetpos.c ftell.c fwrite.c getc.c getchar.c \
	gets.c impure.c iprintf.S iscanf.S memcmp.c memcpy.c memmove.c \
	memset.c perror.c printf.S putc.c putchar.c puts.c remove.c \
	rename.c rewind.c scanf.S setbuf.c setvbuf.c siprintf.S siscanf.S \
	sleep.c sniprintf.S snprintf.S sprintf.S sscanf.S stdio.c strcat.c \
	strchr.c strcmp.c strcpy.c strcspn.c strlen.c strncat.c strncmp.c \
	strncpy.c strpbrk.c strrchr.c strspn.c strxfrm.c tmpfile.c \
	tmpnam.c ungetc.c usleep.c vfiprintf.c vfiscanf.c vfprintf.c \
	vfscanf.c viprintf.c viscanf.c vprintf.c vscanf.c vsiprintf.c \
	vsiscanf.c vsniprintf.c vsnprintf.c vsprintf.c vsscanf.c \
	stack_reg_va.S spu_clock_svcs.c spu_clock_stop.c spu_timer_flih.S \
	spu_timer_slih.c spu_timer_slih_reg.c spu_timer_svcs.c \
	spu_timer_stop.c spu_timer_free.c spu_timebase.c fdopen.c

if HAVE_SPU_EA
lib_a_SOURCES += calloc_ea.c free_ea.c malloc_ea.c memchr_ea.c memcmp_ea.c \
	memcpy_ea.c memmove_ea.c memset_ea.c mmap_ea.c mremap_ea.c msync_ea.c \
	munmap_ea.c posix_memalign_ea.c realloc_ea.c strcat_ea.c strchr_ea.c \
	strcmp_ea.c strcpy_ea.c strcspn_ea.c strlen_ea.c strncat_ea.c strncmp_ea.c \
	strncpy_ea.c strpbrk_ea.c strrchr_ea.c strspn_ea.c strstr_ea.c read_ea.c \
	pread_ea.c readv_ea.c write_ea.c pwrite_ea.c writev_ea.c spu-mcount.S \
	spu-gmon.c
endif

lib_a_CCASFLAGS = $(AM_CCASFLAGS)
lib_a_CFLAGS = $(AM_CFLAGS)

ACLOCAL_AMFLAGS = -I ../../.. -I ../../../..
CONFIG_STATUS_DEPENDENCIES = $(newlib_basedir)/configure.host

@


1.19
log
@
2008-11-27  Ken Werner  <ken.werner@@de.ibm.com>

        * libc/machine/spu/Makefile.am: Add spu-mcount.S spu-gmon.c.
        * libc/machine/spu/Makefile.in: Regenerated.
        * libc/machine/spu/spu-gmon.c: New file.
        * libc/machine/spu/spu-mcount.S: New file.
@
text
@d26 1
a26 1
	spu_timer_stop.c spu_timer_free.c spu_timebase.c
@


1.18
log
@
2008-11-20  Ken Werner  <ken.werner@@de.ibm.com>
            Patrick Mansfield  <patmans@@us.ibm.com>
            Joel Schopp   <jschopp@@austin.ibm.com>

        * libc/machine/spu/configure.in: Add __ea detection.
        * libc/machine/spu/Makefile.am: Add new files.
        * libc/machine/spu/include/ea.h: New file.
        * libc/machine/spu/ea_internal.h: Likewise.
        * libc/machine/spu/sys/mman.h: Likewise.
        * libc/machine/spu/mmap_ea.c: Likewise.
        * libc/machine/spu/munmap_ea.c: Likewise.
        * libc/machine/spu/mremap_ea.c: Likewise.
        * libc/machine/spu/msync_ea.c: Likewise.
        * libc/machine/spu/memchr_ea.c: Likewise.
        * libc/machine/spu/memcmp_ea.c: Likewise.
        * libc/machine/spu/memcpy_ea.c: Likewise.
        * libc/machine/spu/memmove_ea.c: Likewise.
        * libc/machine/spu/memset_ea.c: Likewise.
        * libc/machine/spu/malloc_ea.c: Likewise.
        * libc/machine/spu/realloc_ea.c: Likewise.
        * libc/machine/spu/calloc_ea.c: Likewise.
        * libc/machine/spu/free_ea.c: Likewise.
        * libc/machine/spu/posix_memalign_ea.c: Likewise.
        * libc/machine/spu/strcat_ea.c: Likewise.
        * libc/machine/spu/strchr_ea.c: Likewise.
        * libc/machine/spu/strcmp_ea.c: Likewise.
        * libc/machine/spu/strcpy_ea.c: Likewise.
        * libc/machine/spu/strcspn_ea.c: Likewise.
        * libc/machine/spu/strlen_ea.c: Likewise.
        * libc/machine/spu/strncat_ea.c: Likewise.
        * libc/machine/spu/strncmp_ea.c: Likewise.
        * libc/machine/spu/strncpy_ea.c: Likewise.
        * libc/machine/spu/strpbrk_ea.c: Likewise.
        * libc/machine/spu/strrchr_ea.c: Likewise.
        * libc/machine/spu/strspn_ea.c: Likewise.
        * libc/machine/spu/strstr_ea.c: Likewise.
        * libc/machine/spu/read_ea.c: Likewise.
        * libc/machine/spu/pread_ea.c: Likewise.
        * libc/machine/spu/readv_ea.c: Likewise.
        * libc/machine/spu/write_ea.c: Likewise.
        * libc/machine/spu/pwrite_ea.c: Likewise.
        * libc/machine/spu/writev_ea.c: Likewise.
@
text
@d34 2
a35 1
	pread_ea.c readv_ea.c write_ea.c pwrite_ea.c writev_ea.c
@


1.17
log
@
2008-09-01  Ken Werner  <ken.werner@@de.ibm.com>

        * libc/machine/spu/include/spu_timer.h: spu_timebase function added.
        * libc/machine/spu/spu_timebase.c: New file.
        * libc/machine/spu/Makefile.am: Add new file.
        * libc/machine/spu/Makefile.in: Regenerated.
@
text
@d28 9
@


1.16
log
@
2008-06-09  Ken Werner  <ken.werner@@de.ibm.com>

	* libc/machine/spu/Makefile.am: Add new files.
	* libc/machine/spu/Makefile.in: Likewise.
	* libc/machine/spu/include/spu_timer.h: New file to add timer support
        using interrupts.
	* libc/machine/spu/spu_clock_stop.c: Likewise.
	* libc/machine/spu/spu_clock_svcs.c: Likewise.
	* libc/machine/spu/spu_timer_flih.S: Likewise.
	* libc/machine/spu/spu_timer_free.c: Likewise.
	* libc/machine/spu/spu_timer_internal.h: Likewise.
	* libc/machine/spu/spu_timer_slih.c: Likewise.
	* libc/machine/spu/spu_timer_slih_reg.c: Likewise.
	* libc/machine/spu/spu_timer_stop.c: Likewise.
	* libc/machine/spu/spu_timer_svcs.c: Likewise.
@
text
@d26 1
a26 1
	spu_timer_stop.c spu_timer_free.c
@


1.15
log
@
2008-04-14  Patrick Mansfield  <patmans@@us.ibm.com>

        * libc/machine/spu/impure.c: New file, supply a non-static _impure_data.
        * libc/machine/spu/Makefile.am: Add new file impure.c.
        * libc/machine/spu/Makefile.in: Regenerate.
        * libc/machine/spu/sys/errno.h: Define errno to be _reent_data._errno.
@
text
@d24 3
a26 1
	stack_reg_va.S
@


1.14
log
@
2008-04-01 Patrick Mansfield <patmans@@us.ibm.com>

        * libc/machine/spu/memcmp.c: New file for SPU optimized memcmp.
        * libc/machine/spu/strncmp.h: New file supply _strncmp_internal.
        * libc/machine/spu/Makefile.am: Add memcmp.c.
        * libc/machine/spu/Makefile.in: Rebuild.
        * libc/machine/spu/strncmp.c: Use _strncmp_internal.
@
text
@d15 4
a18 4
	gets.c iprintf.S iscanf.S memcmp.c memcpy.c memmove.c memset.c \
	perror.c printf.S putc.c putchar.c puts.c remove.c rename.c \
	rewind.c scanf.S setbuf.c setvbuf.c siprintf.S siscanf.S sleep.c \
	sniprintf.S snprintf.S sprintf.S sscanf.S stdio.c strcat.c \
@


1.13
log
@
2008-03-27 Patrick Mansfield <patmans@@us.ibm.com>

	* libc/machine/spu/Makefile.am: Add assert.c.
	* libc/machine/spu/Makefile.in: Regenerate.
	* libc/machine/spu/assert.c: New file.
@
text
@d15 3
a17 3
	gets.c iprintf.S iscanf.S memcpy.c memmove.c memset.c perror.c \
	printf.S putc.c putchar.c puts.c remove.c rename.c rewind.c \
	scanf.S setbuf.c setvbuf.c siprintf.S siscanf.S sleep.c \
d29 1
a29 1
ACLOCAL_AMFLAGS = -I ../../.. -I ../../../.. 
@


1.12
log
@
2007-08-23  Hidetaka Takano  <hidetaka.takano@@glb.toshiba.co.jp>

        Reduce the memory consumption of variable argument functions
        for SPU (cell):
        * libc/machine/spu/Makefile.am: Replace printf/scanf family C sources
          to assembler sources.
        * libc/machine/spu/Makefile.in: Regenerated.
        * libc/machine/spu/stdio.c: Add __check_init function wrapping
          CHECK_INIT macro to use from assembler routines.
        * libc/machine/spu/c99ppe.h: Add definitions for assembler code.
        * libc/machine/spu/fiprintf.S: New file.
        * libc/machine/spu/fiscanf.S: Ditto.
        * libc/machine/spu/fprintf.S: Ditto.
        * libc/machine/spu/fscanf.S: Ditto.
        * libc/machine/spu/iprintf.S: Ditto.
        * libc/machine/spu/iscanf.S: Ditto.
        * libc/machine/spu/printf.S: Ditto.
        * libc/machine/spu/scanf.S: Ditto.
        * libc/machine/spu/siprintf.S: Ditto.
        * libc/machine/spu/siscanf.S: Ditto.
        * libc/machine/spu/sniprintf.S: Ditto.
        * libc/machine/spu/snprintf.S: Ditto.
        * libc/machine/spu/sprintf.S: Ditto.
        * libc/machine/spu/sscanf.S: Ditto.
        * libc/machine/spu/stack_reg_va.S: Ditto.
        * libc/machine/spu/syscall.def: Ditto. (for maintenance)
        * libc/machine/spu/mk_syscalls: Ditto. (for maintenance)
        * libc/machine/spu/fiprintf.c: Removed. (Replaced by .S)
        * libc/machine/spu/fiscanf.c: Ditto.
        * libc/machine/spu/fprintf.c: Ditto.
        * libc/machine/spu/fscanf.c: Ditto.
        * libc/machine/spu/iprintf.c: Ditto.
        * libc/machine/spu/iscanf.c: Ditto.
        * libc/machine/spu/printf.c: Ditto.
        * libc/machine/spu/scanf.c: Ditto.
        * libc/machine/spu/siprintf.c: Ditto.
        * libc/machine/spu/siscanf.c: Ditto.
        * libc/machine/spu/sniprintf.c: Ditto.
        * libc/machine/spu/snprintf.c: Ditto.
        * libc/machine/spu/sprintf.c: Ditto.
        * libc/machine/spu/sscanf.c: Ditto.
@
text
@d11 14
a24 13
lib_a_SOURCES = setjmp.S clearerr.c creat.c fclose.c feof.c ferror.c fflush.c \
	fgetc.c fgetpos.c fgets.c fileno.c fiprintf.S fiscanf.S fopen.c \
	fprintf.S fputc.c fputs.c fread.c freopen.c fscanf.S fseek.c \
	fsetpos.c ftell.c fwrite.c getc.c getchar.c gets.c iprintf.S \
	iscanf.S memcpy.c memmove.c memset.c perror.c printf.S \
	putc.c putchar.c puts.c remove.c rename.c rewind.c scanf.S \
	setbuf.c setvbuf.c siprintf.S siscanf.S sleep.c sniprintf.S \
	snprintf.S sprintf.S sscanf.S stdio.c strcat.c strchr.c strcmp.c \
	strcpy.c strcspn.c strlen.c strncat.c strncmp.c strncpy.c strpbrk.c \
	strrchr.c strspn.c strxfrm.c tmpfile.c tmpnam.c ungetc.c usleep.c \
	vfiprintf.c vfiscanf.c vfprintf.c vfscanf.c viprintf.c viscanf.c \
	vprintf.c vscanf.c vsiprintf.c vsiscanf.c vsniprintf.c vsnprintf.c \
	vsprintf.c vsscanf.c stack_reg_va.S
@


1.11
log
@
2007-06-15  Patrick Mansfield  <patmans@@us.ibm.com>

        * libc/machine/spu/Makefile.am: Remove mktemp.c, it was left in
        from a dropped patch.
        * libc/machine/spu/Makefile.in: Regenerate.
@
text
@d12 7
a18 7
	fgetc.c fgetpos.c fgets.c fileno.c fiprintf.c fiscanf.c fopen.c \
	fprintf.c fputc.c fputs.c fread.c freopen.c fscanf.c fseek.c \
	fsetpos.c ftell.c fwrite.c getc.c getchar.c gets.c iprintf.c \
	iscanf.c memcpy.c memmove.c memset.c perror.c printf.c \
	putc.c putchar.c puts.c remove.c rename.c rewind.c scanf.c \
	setbuf.c setvbuf.c siprintf.c siscanf.c sleep.c sniprintf.c \
	snprintf.c sprintf.c sscanf.c stdio.c strcat.c strchr.c strcmp.c \
d23 1
a23 1
	vsprintf.c vsscanf.c
@


1.10
log
@
2007-06-13  Patrick Mansfield  <patmans@@us.ibm.com>

        * libc/machine/spu/creat.c: New file copied from libc/posix/creat.c,
        it just calls open with appropriate arguments.
        * libc/machine/spu/Makefile.am: Add creat.c.
        * libc/machine/spu/Makefile.in: Regenerate.
@
text
@d15 1
a15 1
	iscanf.c memcpy.c memmove.c memset.c mktemp.c perror.c printf.c \
@


1.9
log
@
2007-06-13  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/machine/spu/Makefile.am: Re-add back setjmp.S which
        I accidentally dropped.
        * libc/machine/spu/Makefile.in: Regenerated.
@
text
@d11 1
a11 1
lib_a_SOURCES = setjmp.S clearerr.c fclose.c feof.c ferror.c fflush.c \
@


1.8
log
@
2007-06-13  Patrick Mansfield  <patmans@@us.ibm.com>

        * libc/include/sys/features.h: Define _POSIX_TIMERS for spu.
        * libc/include/sys/unistd.h: Change usleep prototype to Posix
        form and move outside of OS flag checks.
        * libc/machine/spu/Makefile.am: Add sleep and usleep.
        * libc/machine/spu/Makefile.in: Regenerate.
        * libc/machine/spu/sleep.c: Copy libc/posix/sleep.c.
        * libc/machine/spu/usleep.c: Copy libc/posix/usleep.c.
@
text
@d11 1
a11 1
lib_a_SOURCES = clearerr.c fclose.c feof.c ferror.c fflush.c \
@


1.7
log
@	* ltmain.sh: Update from GCC.
	* libtool.m4: Update from GCC.
	* ltsugar.m4: New. Update from GCC.
	* ltversion.m4: New. Update from GCC.
	* ltoptions.m4: New. Update from GCC.
	* ltconfig: Remove.
	* ltcf-c.sh: Remove.
	* ltcf-cxx.sh: Remove.
	* ltcf-gcj.sh: Remove.
	* src-release: Update with new libtool file list.
	* newlib/*/configure.in: invoke _LD_DECL_SED.
	* newlib/*/Makefile.am: Ensure toplevel is included in ACLOCAL_AMFLAGS.
	* Regenerate subdirectories
@
text
@d11 13
a23 12
lib_a_SOURCES = setjmp.S memcpy.c memmove.c memset.c strcat.c strchr.c strcmp.c strcpy.c strcspn.c strlen.c strncat.c strncmp.c strncpy.c strpbrk.c strrchr.c strspn.c strxfrm.c \
	stdio.c clearerr.c feof.c ferror.c fileno.c fopen.c fclose.c freopen.c \
	fflush.c fseek.c ftell.c rewind.c fgetpos.c fsetpos.c fread.c fwrite.c \
	getc.c putc.c fgetc.c fgets.c fputc.c fputs.c ungetc.c \
	fprintf.c fscanf.c vfprintf.c vfscanf.c \
	perror.c gets.c getchar.c putchar.c puts.c \
	printf.c scanf.c vprintf.c vscanf.c \
	setbuf.c setvbuf.c tmpfile.c \
	sprintf.c sscanf.c snprintf.c vsscanf.c vsnprintf.c vsprintf.c \
	remove.c rename.c tmpnam.c \
	iprintf.c fiprintf.c siprintf.c sniprintf.c viprintf.c vfiprintf.c vsiprintf.c vsniprintf.c \
	iscanf.c fiscanf.c siscanf.c viscanf.c vfiscanf.c vsiscanf.c
@


1.6
log
@
2007-02-20  Kazunori Asayama <asayama@@sm.sony.co.jp>

        * libc/machine/spu/Makefile.am: Add new objects.
        * libc/machine/spu/Makefile.in: Regenerated.
        * libc/machine/spu/fiprintf.c: New file. Add implementation of
        integer-only version.
        * libc/machine/spu/fiscanf.c: Ditto.
        * libc/machine/spu/iprintf.c: Ditto.
        * libc/machine/spu/iscanf.c: Ditto.
        * libc/machine/spu/siprintf.c: Ditto.
        * libc/machine/spu/siscanf.c: Ditto.
        * libc/machine/spu/sniprintf.c: Ditto.
        * libc/machine/spu/vfiprintf.c: Ditto.
        * libc/machine/spu/vfiscanf.c: Ditto.
        * libc/machine/spu/viprintf.c: Ditto.
        * libc/machine/spu/viscanf.c: Ditto.
        * libc/machine/spu/vsiprintf.c: Ditto.
        * libc/machine/spu/vsiscanf.c: Ditto.
        * libc/machine/spu/vsniprintf.c: Ditto.
        * libc/machine/spu/fprintf.c: Add support for integer-only
        version.
        * libc/machine/spu/fscanf.c: Ditto.
        * libc/machine/spu/printf.c: Ditto.
        * libc/machine/spu/scanf.c: Ditto.
        * libc/machine/spu/snprintf.c: Ditto.
        * libc/machine/spu/sprintf.c: Ditto.
        * libc/machine/spu/sscanf.c: Ditto.
        * libc/machine/spu/vfprintf.c: Ditto.
        * libc/machine/spu/vfscanf.c: Ditto.
        * libc/machine/spu/vprintf.c: Ditto.
        * libc/machine/spu/vscanf.c: Ditto.
        * libc/machine/spu/vsnprintf.c: Ditto.
        * libc/machine/spu/vsprintf.c: Ditto.
        * libc/machine/spu/vsscanf.c: Ditto.
@
text
@d27 1
a27 1
ACLOCAL_AMFLAGS = -I ../../.. 
@


1.5
log
@
2007-02-01  Joel Schopp <jschopp@@austin.ibm.com>
            Kazunori Asayama <asayama@@sm.sony.co.jp>

        * libc/machine/spu/Makefile.am: Add objects.
        * libc/machine/spu/Makefile.in: Regenerated.
        * libc/machine/spu/vsscanf.c: New file. Add a stdio function
        implementation.
        * libc/machine/spu/snprintf.c: Ditto.
        * libc/machine/spu/sprintf.c: Ditto.
        * libc/machine/spu/sscanf.c: Ditto.
        * libc/machine/spu/remove.c: Ditto.
        * libc/machine/spu/rename.c: Ditto.
        * libc/machine/spu/tmpnam.c: Ditto.
        * libc/machine/spu/vsnprintf.c: Add initialization routine of
        stdio stuffs.
        * libc/machine/spu/vsprintf.c: Ditto.
@
text
@d20 3
a22 1
	remove.c rename.c tmpnam.c
@


1.4
log
@
2007-02-01  Joel Schopp <jschopp@@austin.ibm.com>
            Kazunori Asayama <asayama@@sm.sony.co.jp>

        * configure.host: Enable SPU specific stdio directory.
        * libc/machine/spu/Makefile.am: Add objects.
        * libc/machine/spu/Makefile.in: Regenerated.
        * libc/machine/spu/c99ppe.h: Add macros and function
        declarations to initialize SPU specific stdio stuffs.
        * libc/machine/spu/stdio.c: Add functions to manage Cell SPU
        specific FILE structures.
        * libc/machine/spu/perror.c: Add initialization routine of
        stdio stuffs.
        * libc/machine/spu/printf.c: Ditto.
        * libc/machine/spu/putchar.c: Ditto.
        * libc/machine/spu/puts.c: Ditto.
        * libc/machine/spu/vprintf.c: Ditto.
        * libc/machine/spu/clearerr.c: New file. Add a stdio function
        implementation.
        * libc/machine/spu/feof.c: Ditto.
        * libc/machine/spu/ferror.c: Ditto.
        * libc/machine/spu/fileno.c: Ditto.
        * libc/machine/spu/fopen.c: Ditto.
        * libc/machine/spu/fclose.c: Ditto.
        * libc/machine/spu/freopen.c: Ditto.
        * libc/machine/spu/fflush.c: Ditto.
        * libc/machine/spu/fseek.c: Ditto.
        * libc/machine/spu/ftell.c: Ditto.
        * libc/machine/spu/rewind.c: Ditto.
        * libc/machine/spu/fgetpos.c: Ditto.
        * libc/machine/spu/fsetpos.c: Ditto.
        * libc/machine/spu/fread.c: Ditto.
        * libc/machine/spu/fwrite.c: Ditto.
        * libc/machine/spu/getc.c: Ditto.
        * libc/machine/spu/getchar.c: Ditto.
        * libc/machine/spu/gets.c: Ditto.
        * libc/machine/spu/fgetc.c: Ditto.
        * libc/machine/spu/fgets.c: Ditto.
        * libc/machine/spu/ungetc.c: Ditto.
        * libc/machine/spu/putc.c: Ditto.
        * libc/machine/spu/fputc.c: Ditto.
        * libc/machine/spu/fputs.c: Ditto.
        * libc/machine/spu/vfprintf.c: Ditto.
        * libc/machine/spu/vfscanf.c: Ditto.
        * libc/machine/spu/fprintf.c: Ditto.
        * libc/machine/spu/fscanf.c: Ditto.
        * libc/machine/spu/scanf.c: Ditto.
        * libc/machine/spu/vscanf.c: Ditto.
        * libc/machine/spu/setbuf.c: Ditto.
        * libc/machine/spu/setvbuf.c: Ditto.
        * libc/machine/spu/tmpfile.c: Ditto.

2007-02-01  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/sys/config.h[__SPU__]: Define __CUSTOM_FILE_IO__.
        * libc/include/stdio.h[!__CUSTOM_FILE_IO__]: Add flag check
        around stdio macros that manipulate fields in the normal file
        structure.
        * libc/include/sys/reent.h[__CUSTOM_FILE_IO__]: Include
        <sys/custom_file.h> to define custom FILE structure.
        * libc/include/sys/custom_file.h: New default header file
        that generates error if not overridden when __CUSTOM_FILE_IO__ set.
        * libc/machine/spu/sys/custom_file.h: New file.
@
text
@d19 2
a20 1
	vsnprintf.c vsprintf.c
@


1.3
log
@
2006-12-18  Joel Schopp <jschopp@@austin.ibm.com>

        * libc/machine/spu/c99ppe.h: New file
        * libc/machine/spu/perror.c: New file to override libc/stdio version.
        * libc/machine/spu/printf.c: New file
        * libc/machine/spu/putchar.c: New file
        * libc/machine/spu/puts.c: New file
        * libc/machine/spu/vprintf.c: New file
        * libc/machine/spu/vsnprintf.c: New file
        * libc/machine/spu/vsprintf.c: New file
        * libc/machine/spu/Makefile.am: Add new targets.
        * libc/machine/spu/Makefile.in: Regenerated.
@
text
@d11 9
a19 1
lib_a_SOURCES = setjmp.S memcpy.c memmove.c memset.c strcat.c strchr.c strcmp.c strcpy.c strcspn.c strlen.c strncat.c strncmp.c strncpy.c strpbrk.c strrchr.c strspn.c strxfrm.c printf.c perror.c putchar.c puts.c vsnprintf.c vprintf.c vsprintf.c
a24 1
AM_CFLAGS = -I $(srcdir)/../../stdio -I $(srcdir)/../../stdlib
@


1.2
log
@
2006-10-27  Joel Schopp  <jschopp@@austin.ibm.com>

        * libc/machine/spu/memcpy.c: Override generic function with vectorized
        version optimized for the cell spu.
        * libc/machine/spu/memmove.c: Ditto.
        * libc/machine/spu/memset.c: Ditto.
        * libc/machine/spu/strcat.c: Ditto.
        * libc/machine/spu/strchr.c: Ditto.
        * libc/machine/spu/strcmp.c: Ditto.
        * libc/machine/spu/strcpy.c: Ditto.
        * libc/machine/spu/strcspn.c: Ditto.
        * libc/machine/spu/strlen.c: Ditto.
        * libc/machine/spu/strncat.c: Ditto.
        * libc/machine/spu/strncmp.c: Ditto.
        * libc/machine/spu/strncpy.c: Ditto.
        * libc/machine/spu/strpbrk.c: Ditto.
        * libc/machine/spu/strrchr.c: Ditto.
        * libc/machine/spu/strspn.c: Ditto.
        * libc/machine/spu/strxfrm.c: Ditto.
        * libc/machine/spu/vec_literal.h: Add abstraction of vector literals,
        removing altivec style initializers.
        * libc/machine/spu/Makefile.am: Add new files to list so they build
        * libc/machine/spu/Makefile.in: Regenerate from new Makefile.am
@
text
@d11 1
a11 1
lib_a_SOURCES = setjmp.S memcpy.c memmove.c memset.c strcat.c strchr.c strcmp.c strcpy.c strcspn.c strlen.c strncat.c strncmp.c strncpy.c strpbrk.c strrchr.c strspn.c strxfrm.c
@


1.1
log
@
2006-08-16  Joel Schopp  <jschopp@@austin.ibm.com>

        * configure.host: Add spu support.
        * libc/include/stdint.h: Ditto.
        * libc/include/machine/ieeefp.h: Ditto.
        * libc/include/machine/setjmp.h: Ditto.
        * libc/include/sys/config.h: Ditto.
        * libc/include/sys/types.h: Ditto.
        * libc/machine/spu/Makefile.am: New file.
        * libc/machine/spu/Makefile.in: Ditto.
        * libc/machine/spu/aclocal.m4: Ditto.
        * libc/machine/spu/configure: Ditto.
        * libc/machine/spu/configure.in: Ditto.
        * libc/machine/spu/memcpy.c: Ditto.
        * libc/machine/spu/setjmp.S: Ditto.
@
text
@d11 1
a11 1
lib_a_SOURCES = setjmp.S memcpy.c
@

