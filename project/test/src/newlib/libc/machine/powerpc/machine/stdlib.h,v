head	1.4;
access;
symbols
	cygwin-1_7_35-release:1.4
	cygwin-1_7_34-release:1.4
	newlib-2_2_0:1.4.0.16
	cygwin-1_7_33-release:1.4
	cygwin-1_7_32-release:1.4
	cygwin-1_7_31-release:1.4
	cygwin-1_7_30-release:1.4
	cygwin-1_7_29-release:1.4
	cygwin-1_7_28-release:1.4
	newlib-2_1_0:1.4
	cygwin-1_7_27-release:1.4
	cygwin-1_7_26-release:1.4
	cygwin-1_7_25-release:1.4
	cygwin-1_7_24-release:1.4
	cygwin-1_7_23-release:1.4
	cygwin-1_7_22-release:1.4
	cygwin-1_7_21-release:1.4
	cygwin-1_7_20-release:1.4
	cygwin-1_7_19-release:1.4
	cygwin-64bit-postmerge:1.4
	cygwin-64bit-premerge-branch:1.4.0.14
	cygwin-64bit-premerge:1.4
	cygwin-1_7_18-release:1.4
	newlib-2_0_0:1.4
	cygwin-1_7_17-release:1.4
	cygwin-64bit-branch:1.4.0.12
	cygwin-1_7_16-release:1.4
	cygwin-1_7_15-release:1.4
	cygwin-1_7_14_2-release:1.4
	cygwin-1_7_14-release:1.4
	cygwin-1_7_12-release:1.4
	cygwin-1_7_11-release:1.4
	cygwin-1_7_10-release:1.4
	newlib-1_20_0:1.4
	cygwin-1_7_9-release:1.4
	cygwin-1_7_8-release:1.4
	newlib-1_19_0:1.4
	cygwin-1_7_7-release:1.4
	cygwin-1_7_5-release:1.4
	cygwin-1_7_4-release:1.4
	cygwin-1_7_3-release:1.4
	cygwin-1_7_2-release:1.4
	newlib-1_18_0:1.4
	cygwin-1_7_1-release:1.4
	newlib-1_17_0-arc:1.4.0.10
	binutils-arc-20080908-branch:1.4.0.8
	binutils-arc-20080908-branchpoint:1.4
	newlib-1_17_0:1.4
	newlib-1_16_0:1.4
	newlib-1_15_0:1.4
	newlib-csl-coldfire-4_1-32:1.4
	newlib-csl-sourcerygxx-4_1-32:1.4
	newlib-csl-innovasic-fido-3_4_4-33:1.4
	newlib-csl-coldfire-4_1-30:1.4
	newlib-csl-sourcerygxx-4_1-30:1.4
	newlib-csl-coldfire-4_1-28:1.4
	newlib-csl-sourcerygxx-4_1-28:1.4
	newlib-csl-arm-2006q3-27:1.4
	newlib-csl-sourcerygxx-4_1-27:1.4
	newlib-csl-arm-2006q3-26:1.4
	newlib-csl-sourcerygxx-4_1-26:1.4
	newlib-csl-sourcerygxx-4_1-24:1.4
	newlib-csl-sourcerygxx-4_1-23:1.4
	newlib-csl-sourcerygxx-4_1-21:1.4
	newlib-csl-arm-2006q3-21:1.4
	newlib-csl-arm-2006q3-19:1.4
	newlib-csl-sourcerygxx-4_1-19:1.4
	newlib-csl-sourcerygxx-4_1-18:1.4
	newlib-csl-sourcerygxx-3_4_4-25:1.4
	newlib-csl-sourcerygxx-4_1-17:1.4
	cr-0x5f1:1.4.0.6
	newlib-csl-sourcerygxx-4_1-14:1.4
	newlib-csl-sourcerygxx-4_1-13:1.4
	newlib-csl-sourcerygxx-4_1-12:1.4
	newlib-csl-sourcerygxx-4_1-9:1.4
	newlib-csl-sourcerygxx-4_1-8:1.4
	newlib-csl-sourcerygxx-4_1-7:1.4
	newlib-csl-arm-2006q1-6:1.4
	newlib-csl-sourcerygxx-4_1-6:1.4
	newlib-csl-sourcerygxx-4_1-5:1.4
	newlib-csl-sourcerygxx-4_1-4:1.4
	newlib-autotools-branch:1.4.0.4
	newlib-csl-20060320-branch:1.4.0.2
	newlib-csl-20060320-branchpoint:1.4
	newlib-1_14_0:1.4
	newlib-csl-arm-2005-q1b:1.4
	newlib-csl-arm-2005-q1a:1.4
	newlib-1_13_0:1.4
	csl-arm-2004-q3:1.4
	csl-arm-2004-q1a:1.4
	csl-arm-2004-q1:1.4
	newlib-1_12_0:1.4
	csl-arm-2003-q4:1.4
	w32api-2_2:1.3
	mingw-runtime-2_4:1.3
	newlib-1_11_0:1.3;
locks; strict;
comment	@ * @;


1.4
date	2003.08.13.17.45.31;	author jjohnstn;	state Exp;
branches;
next	1.3;

1.3
date	2002.08.20.01.40.39;	author jjohnstn;	state Exp;
branches;
next	1.2;

1.2
date	2002.08.17.05.57.20;	author jjohnstn;	state Exp;
branches;
next	1.1;

1.1
date	2002.04.19.19.16.22;	author jjohnstn;	state Exp;
branches;
next	;


desc
@@


1.4
log
@
2003-08-13  Aldy Hernandez  <aldyh@@redhat.com>

        * libc/machine/powerpc/machine/stdlib.h: Wrap SPE functions in
        extern "C".
@
text
@#ifndef	_MACHSTDLIB_H_
#define	_MACHSTDLIB_H_

#ifndef __STRICT_ANSI__

# if defined(__ALTIVEC__)

_PTR    _EXFUN(vec_calloc,(size_t __nmemb, size_t __size));
_PTR    _EXFUN(_vec_calloc_r,(struct _reent *, size_t __nmemb, size_t __size));
_VOID   _EXFUN(vec_free,(_PTR));
#define _vec_freer _freer
_PTR    _EXFUN(vec_malloc,(size_t __size));
#define _vec_mallocr _memalign_r
_PTR    _EXFUN(vec_realloc,(_PTR __r, size_t __size));
_PTR    _EXFUN(_vec_realloc_r,(struct _reent *, _PTR __r, size_t __size));

# endif /* __ALTIVEC__ */

# if defined(__SPE__)

#define __need_inttypes
#include <sys/types.h>

#ifdef __cplusplus
extern "C" {
#endif
__int16_t   _EXFUN(atosfix16,(const char *__str));
__int16_t   _EXFUN(_atosfix16_r,(struct _reent *, const char *__str));
__int32_t   _EXFUN(atosfix32,(const char *__str));
__int32_t   _EXFUN(_atosfix32_r,(struct _reent *, const char *__str));
__int64_t   _EXFUN(atosfix64,(const char *__str));
__int64_t   _EXFUN(_atosfix64_r,(struct _reent *, const char *__str));

__uint16_t _EXFUN(atoufix16,(const char *__str));
__uint16_t _EXFUN(_atoufix16_r,(struct _reent *, const char *__str));
__uint32_t _EXFUN(atoufix32,(const char *__str));
__uint32_t _EXFUN(_atoufix32_r,(struct _reent *, const char *__str));
__uint64_t _EXFUN(atoufix64,(const char *__str));
__uint64_t _EXFUN(_atoufix64_r,(struct _reent *, const char *__str));

__int16_t   _EXFUN(strtosfix16,(const char *__str, char **__endptr));
__int16_t   _EXFUN(_strtosfix16_r,(struct _reent *, const char *__str, 
                 char **__endptr));
__int32_t   _EXFUN(strtosfix32,(const char *__str, char **__endptr));
__int32_t   _EXFUN(_strtosfix32_r,(struct _reent *, const char *__str, 
                 char **__endptr));
__int64_t   _EXFUN(strtosfix64,(const char *__str, char **__endptr));
__int64_t   _EXFUN(_strtosfix64_r,(struct _reent *, const char *__str, 
                 char **__endptr));

__uint16_t _EXFUN(strtoufix16,(const char *__str, char **__endptr));
__uint16_t _EXFUN(_strtoufix16_r,(struct _reent *, const char *__str, 
                 char **__endptr));
__uint32_t _EXFUN(strtoufix32,(const char *__str, char **__endptr));
__uint32_t _EXFUN(_strtoufix32_r,(struct _reent *, const char *__str, 
                 char **__endptr));
__uint64_t _EXFUN(strtoufix64,(const char *__str, char **__endptr));
__uint64_t _EXFUN(_strtoufix64_r,(struct _reent *, const char *__str, 
                 char **__endptr));
#ifdef __cplusplus
}
#endif

# endif /* __SPE__ */

#endif /* !__STRICT_ANSI__ */


#endif	/* _MACHSTDLIB_H_ */


@


1.3
log
@
2002-08-19  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/sys/types.h: Support __need_inttypes macro
        that only sets the __intxx and __uintxx types.
        * libc/machine/powerpc/Makefile.am: Add stdlib to include directories
        to get mprec.h.
        * libc/machine/powerpc/Makefile.in: Regenerated.
        * libc/machine/powerpc/vfprintf.c: Fix state variable type.
        * libc/machine/powerpc/vfscanf.c: Fix state variable type.  Remove
        redundant fixed-point conversion prototypes.
        * libc/machine/powerpc/machine/stdlib.h[__SPE__]: Include <sys/types.h>
        after setting __need_inttypes.
@
text
@d24 3
d60 3
@


1.2
log
@
2002-08-17  Jeff Johnston  <jjohnstn@@redhat.com>

        * configure.host: Add powerpc*-*-eabispe* configuration.
        * libc/machine/powerpc/atosfix16.c: New fixed-point conversion file.
        * libc/machine/powerpc/atosfix32.c: Ditto.
        * libc/machine/powerpc/atosfix64.c: Ditto.
        * libc/machine/powerpc/atoufix16.c: Ditto.
        * libc/machine/powerpc/atoufix32.c: Ditto.
        * libc/machine/powerpc/atoufix64.c: Ditto.
        * libc/machine/powerpc/fix64.h: Ditto.
        * libc/machine/powerpc/simdldtoa.c: Ditto.
        * libc/machine/powerpc/strtosfix16.c: Ditto.
        * libc/machine/powerpc/strtosfix32.c: Ditto.
        * libc/machine/powerpc/strtosfix64.c: Ditto.
        * libc/machine/powerpc/strtoufix16.c: Ditto.
        * libc/machine/powerpc/strtoufix32.c: Ditto.
        * libc/machine/powerpc/strtoufix64.c: Ditto.
        * libc/machine/powerpc/ufix64toa.c: Ditto.
        * libc/machine/powerpc/configure.in: Add check for
        powerpc*-eabispe and add fixed-point conversion functions.
        * libc/machine/powerpc/configure: Regenerated.
        * libc/machine/powerpc/vfprintf.c[__SPE__]: Add support for
        %r and %R format specifiers which handle fixed-point data.
        * libc/machine/powerpc/vfscanf.c[__SPE__]: Ditto.
        * libc/machine/powerpc/machine/stdlib.h[__SPE__]: Add fixed-point
        function prototypes.
@
text
@d21 3
@


1.1
log
@
2002-04-19  Jeff Johnston  <jjohnstn@@redhat.com>

        *  configure.host: Add support for powerpc-eabialtivec*.
        *  libc/include/malloc.h: Add include of <machine/malloc.h>.
        *  libc/include/stdlib.h: Add include of <machine/stdlib.h>.
        *  libc/include/machine/malloc.h: New file.
        *  libc/include/machine/stdlib.h: Ditto.
        *  libc/include/machine/setjmp.h: Add support for powerpc altivec.
        *  libc/machine/powerpc/Makefile.am: Add conditional objects and
        sources based on configuration.
        *  libc/machine/powerpc/Makefile.in: Regenerated.
        *  libc/machine/powerpc/configure: Ditto.
        *  libc/machine/powerpc/configure.in: Add check for
        powerpc-eabialtivec* in which case add in additional source files.
        *  libc/machine/powerpc/setjmp.S: Add altivec support.
        *  libc/machine/powerpc/vec_calloc.c: New file.
        *  libc/machine/powerpc/vec_free.c: Ditto.
        *  libc/machine/powerpc/vec_malloc.c: Ditto.
        *  libc/machine/powerpc/vec_mallocr.c: Ditto.
        *  libc/machine/powerpc/vec_realloc.c: Ditto.
        *  libc/machine/powerpc/machine/malloc.h: Ditto.
        *  libc/machine/powerpc/machine/stdlib.h: Ditto.
        *  libc/machine/powerpc/vfprintf.c: New file that is vfprintf.c
        with added altivec format specifiers.
        *  libc/machine/powerpc/vfscanf.c: New file that is vfscanf.c with
        added altivec format specifiers.
@
text
@d19 38
@

