head	1.2;
access;
symbols
	cygwin-1_7_35-release:1.2
	cygwin-1_7_34-release:1.2
	newlib-2_2_0:1.2.0.16
	cygwin-1_7_33-release:1.2
	cygwin-1_7_32-release:1.2
	cygwin-1_7_31-release:1.2
	cygwin-1_7_30-release:1.2
	cygwin-1_7_29-release:1.2
	cygwin-1_7_28-release:1.2
	newlib-2_1_0:1.2
	cygwin-1_7_27-release:1.2
	cygwin-1_7_26-release:1.2
	cygwin-1_7_25-release:1.2
	cygwin-1_7_24-release:1.2
	cygwin-1_7_23-release:1.2
	cygwin-1_7_22-release:1.2
	cygwin-1_7_21-release:1.2
	cygwin-1_7_20-release:1.2
	cygwin-1_7_19-release:1.2
	cygwin-64bit-postmerge:1.2
	cygwin-64bit-premerge-branch:1.2.0.14
	cygwin-64bit-premerge:1.2
	cygwin-1_7_18-release:1.2
	newlib-2_0_0:1.2
	cygwin-1_7_17-release:1.2
	cygwin-64bit-branch:1.2.0.12
	cygwin-1_7_16-release:1.2
	cygwin-1_7_15-release:1.2
	cygwin-1_7_14_2-release:1.2
	cygwin-1_7_14-release:1.2
	cygwin-1_7_12-release:1.2
	cygwin-1_7_11-release:1.2
	cygwin-1_7_10-release:1.2
	newlib-1_20_0:1.2
	cygwin-1_7_9-release:1.2
	cygwin-1_7_8-release:1.2
	newlib-1_19_0:1.2
	cygwin-1_7_7-release:1.2
	cygwin-1_7_5-release:1.2
	cygwin-1_7_4-release:1.2
	cygwin-1_7_3-release:1.2
	cygwin-1_7_2-release:1.2
	newlib-1_18_0:1.2
	cygwin-1_7_1-release:1.2
	newlib-1_17_0-arc:1.2.0.10
	binutils-arc-20080908-branch:1.2.0.8
	binutils-arc-20080908-branchpoint:1.2
	newlib-1_17_0:1.2
	newlib-1_16_0:1.2
	newlib-1_15_0:1.2
	newlib-csl-coldfire-4_1-32:1.2
	newlib-csl-sourcerygxx-4_1-32:1.2
	newlib-csl-innovasic-fido-3_4_4-33:1.2
	newlib-csl-coldfire-4_1-30:1.2
	newlib-csl-sourcerygxx-4_1-30:1.2
	newlib-csl-coldfire-4_1-28:1.2
	newlib-csl-sourcerygxx-4_1-28:1.2
	newlib-csl-arm-2006q3-27:1.2
	newlib-csl-sourcerygxx-4_1-27:1.2
	newlib-csl-arm-2006q3-26:1.2
	newlib-csl-sourcerygxx-4_1-26:1.2
	newlib-csl-sourcerygxx-4_1-24:1.2
	newlib-csl-sourcerygxx-4_1-23:1.2
	newlib-csl-sourcerygxx-4_1-21:1.2
	newlib-csl-arm-2006q3-21:1.2
	newlib-csl-arm-2006q3-19:1.2
	newlib-csl-sourcerygxx-4_1-19:1.2
	newlib-csl-sourcerygxx-4_1-18:1.2
	newlib-csl-sourcerygxx-3_4_4-25:1.2
	newlib-csl-sourcerygxx-4_1-17:1.2
	cr-0x5f1:1.2.0.6
	newlib-csl-sourcerygxx-4_1-14:1.2
	newlib-csl-sourcerygxx-4_1-13:1.2
	newlib-csl-sourcerygxx-4_1-12:1.2
	newlib-csl-sourcerygxx-4_1-9:1.2
	newlib-csl-sourcerygxx-4_1-8:1.2
	newlib-csl-sourcerygxx-4_1-7:1.2
	newlib-csl-arm-2006q1-6:1.2
	newlib-csl-sourcerygxx-4_1-6:1.2
	newlib-csl-sourcerygxx-4_1-5:1.2
	newlib-csl-sourcerygxx-4_1-4:1.2
	newlib-autotools-branch:1.2.0.4
	newlib-csl-20060320-branch:1.2.0.2
	newlib-csl-20060320-branchpoint:1.2
	newlib-1_14_0:1.2
	newlib-csl-arm-2005-q1b:1.2
	newlib-csl-arm-2005-q1a:1.2
	newlib-1_13_0:1.2
	csl-arm-2004-q3:1.2
	csl-arm-2004-q1a:1.2
	csl-arm-2004-q1:1.2
	newlib-1_12_0:1.2
	csl-arm-2003-q4:1.2
	w32api-2_2:1.2
	mingw-runtime-2_4:1.2
	newlib-1_11_0:1.2
	cygnus_cvs_20020108_pre:1.1
	newlib-1_10_0:1.1
	newlib-1_9_0:1.1;
locks; strict;
comment	@ * @;


1.2
date	2002.04.20.00.29.51;	author jjohnstn;	state Exp;
branches;
next	1.1;

1.1
date	2000.11.30.01.57.27;	author nickc;	state Exp;
branches;
next	;


desc
@@


1.2
log
@
2002-04-19  Bill Siegmund

        * libc/machine/xscale/memchr.c: Don't use multi-line strings.
        * libc/machine/xscale/memcmp.c: Ditto.
        * libc/machine/xscale/memcpy.c: Ditto.
        * libc/machine/xscale/memmove.c: Ditto.
        * libc/machine/xscale/memset.c: Ditto.
        * libc/machine/xscale/strchr.c: Ditto.
        * libc/machine/xscale/strcmp.c: Ditto.
        * libc/machine/xscale/strcpy.c: Ditto.
        * libc/machine/xscale/strlen.c: Ditto.
@
text
@#if defined __thumb__

#include "../../string/strcpy.c"

#else

#include <string.h>
#include "xscale.h"

char *
strcpy (char *dest, const char *src)
{
  char *dest0 = dest;

  asm (PRELOADSTR ("%0") : : "r" (src));

#ifndef __OPTIMIZE_SIZE__
  if (((long)src & 3) == ((long)dest & 3))
    {
      /* Skip unaligned part.  */
      while ((long)src & 3)
	{
	  if (! (*dest++ = *src++))
	    return dest0;
	}

  /* Load two constants:
     R4 = 0xfefefeff [ == ~(0x80808080 << 1) ]
     R5 = 0x80808080  */

  asm ("mov	r5, #0x80\n\
	ldr	r1, [%1, #0]\n\
	add	r5, r5, #0x8000\n\
	add	r5, r5, r5, lsl #16\n\
	mvn	r4, r5, lsl #1\n\
\n\
	add	r3, r1, r5\n\
	bic	r3, r3, r1\n\
	ands	r2, r3, r4\n\
	bne	1f\n\
0:\n\
	ldr	r3, [%1, #0]\n\
	ldr	r1, [%1, #4]!\n\
"	PRELOADSTR("%1") "\n\
	str	r3, [%0], #4\n\
	add	r2, r1, r4\n\
	bic	r2, r2, r1\n\
	ands	r3, r2, r5\n\
	beq	0b\n\
1:"
       : "=&r" (dest), "=&r" (src)
       : "0" (dest), "1" (src)
       : "r1", "r2", "r3", "r4", "r5", "memory", "cc");
    }
#endif

  while (*dest++ = *src++)
    asm (PRELOADSTR ("%0") : : "r" (src));
  return dest0;
}

#endif
@


1.1
log
@Add support for Intel's XScale processor
@
text
@d31 19
a49 19
  asm ("mov	r5, #0x80
	ldr	r1, [%1, #0]
	add	r5, r5, #0x8000
	add	r5, r5, r5, lsl #16
	mvn	r4, r5, lsl #1

	add	r3, r1, r5
	bic	r3, r3, r1
	ands	r2, r3, r4
	bne	1f
0:
	ldr	r3, [%1, #0]
	ldr	r1, [%1, #4]!
"	PRELOADSTR("%1") "
	str	r3, [%0], #4
	add	r2, r1, r4
	bic	r2, r2, r1
	ands	r3, r2, r5
	beq	0b
@

