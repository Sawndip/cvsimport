head	1.1;
access;
symbols
	cygwin-1_7_35-release:1.1
	cygwin-1_7_34-release:1.1
	newlib-2_2_0:1.1.0.16
	cygwin-1_7_33-release:1.1
	cygwin-1_7_32-release:1.1
	cygwin-1_7_31-release:1.1
	cygwin-1_7_30-release:1.1
	cygwin-1_7_29-release:1.1
	cygwin-1_7_28-release:1.1
	newlib-2_1_0:1.1
	cygwin-1_7_27-release:1.1
	cygwin-1_7_26-release:1.1
	cygwin-1_7_25-release:1.1
	cygwin-1_7_24-release:1.1
	cygwin-1_7_23-release:1.1
	cygwin-1_7_22-release:1.1
	cygwin-1_7_21-release:1.1
	cygwin-1_7_20-release:1.1
	cygwin-1_7_19-release:1.1
	cygwin-64bit-postmerge:1.1
	cygwin-64bit-premerge-branch:1.1.0.14
	cygwin-64bit-premerge:1.1
	cygwin-1_7_18-release:1.1
	newlib-2_0_0:1.1
	cygwin-1_7_17-release:1.1
	cygwin-64bit-branch:1.1.0.12
	cygwin-1_7_16-release:1.1
	cygwin-1_7_15-release:1.1
	cygwin-1_7_14_2-release:1.1
	cygwin-1_7_14-release:1.1
	cygwin-1_7_12-release:1.1
	cygwin-1_7_11-release:1.1
	cygwin-1_7_10-release:1.1
	newlib-1_20_0:1.1
	cygwin-1_7_9-release:1.1
	cygwin-1_7_8-release:1.1
	newlib-1_19_0:1.1
	cygwin-1_7_7-release:1.1
	cygwin-1_7_5-release:1.1
	cygwin-1_7_4-release:1.1
	cygwin-1_7_3-release:1.1
	cygwin-1_7_2-release:1.1
	newlib-1_18_0:1.1
	cygwin-1_7_1-release:1.1
	newlib-1_17_0-arc:1.1.0.10
	binutils-arc-20080908-branch:1.1.0.8
	binutils-arc-20080908-branchpoint:1.1
	newlib-1_17_0:1.1
	newlib-1_16_0:1.1
	newlib-1_15_0:1.1
	newlib-csl-coldfire-4_1-32:1.1
	newlib-csl-sourcerygxx-4_1-32:1.1
	newlib-csl-innovasic-fido-3_4_4-33:1.1
	newlib-csl-coldfire-4_1-30:1.1
	newlib-csl-sourcerygxx-4_1-30:1.1
	newlib-csl-coldfire-4_1-28:1.1
	newlib-csl-sourcerygxx-4_1-28:1.1
	newlib-csl-arm-2006q3-27:1.1
	newlib-csl-sourcerygxx-4_1-27:1.1
	newlib-csl-arm-2006q3-26:1.1
	newlib-csl-sourcerygxx-4_1-26:1.1
	newlib-csl-sourcerygxx-4_1-24:1.1
	newlib-csl-sourcerygxx-4_1-23:1.1
	newlib-csl-sourcerygxx-4_1-21:1.1
	newlib-csl-arm-2006q3-21:1.1
	newlib-csl-arm-2006q3-19:1.1
	newlib-csl-sourcerygxx-4_1-19:1.1
	newlib-csl-sourcerygxx-4_1-18:1.1
	newlib-csl-sourcerygxx-3_4_4-25:1.1
	newlib-csl-sourcerygxx-4_1-17:1.1
	cr-0x5f1:1.1.0.6
	newlib-csl-sourcerygxx-4_1-14:1.1
	newlib-csl-sourcerygxx-4_1-13:1.1
	newlib-csl-sourcerygxx-4_1-12:1.1
	newlib-csl-sourcerygxx-4_1-9:1.1
	newlib-csl-sourcerygxx-4_1-8:1.1
	newlib-csl-sourcerygxx-4_1-7:1.1
	newlib-csl-arm-2006q1-6:1.1
	newlib-csl-sourcerygxx-4_1-6:1.1
	newlib-csl-sourcerygxx-4_1-5:1.1
	newlib-csl-sourcerygxx-4_1-4:1.1
	newlib-autotools-branch:1.1.0.4
	newlib-csl-20060320-branch:1.1.0.2
	newlib-csl-20060320-branchpoint:1.1
	newlib-1_14_0:1.1
	newlib-csl-arm-2005-q1b:1.1
	newlib-csl-arm-2005-q1a:1.1
	newlib-1_13_0:1.1;
locks; strict;
comment	@# @;


1.1
date	2004.12.17.20.17.12;	author jjohnstn;	state Exp;
branches;
next	;


desc
@@


1.1
log
@
2004-12-17  Christian Groessler  <chris@@groessler.org>

        * libc/machine/z8k/memcmp.S: New file.
        * libc/machine/z8k/memcpy.S: Ditto.
        * libc/machine/z8k/memmove.S: Ditto.
        * libc/machine/z8k/memset.S: Ditto.
        * libc/machine/z8k/Makefile.am: Add new files.
        * libc/machine/z8k/Makefile.in: Regenerated.
        * libc/machine/z8k/setjmp.S: Fix indirect register usage in Z8002
        part.  Implement Z8002 stdcall version.
@
text
@/*
 * memset routine for Z8000
 * Copyright (C) 2004 Christian Groessler <chris@@groessler.org>
 *
 * Permission to use, copy, modify, and distribute this file
 * for any purpose is hereby granted without fee, provided that
 * the above copyright notice and this notice appears in all
 * copies.
 *
 * This file is distributed WITHOUT ANY WARRANTY; without even the implied
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 */

/* void *memset(void *buffer, int value, size_t length);
 */

	name	"memset.S"

	.text
	even
global	_memset

_memset:

#ifdef __Z8001__
	segm

#ifdef __STD_CALL__
	ldl	rr6,rr14(#4)
	ld	r5,rr14(#8)
	ldl	rr2,rr14(#10)
#else
	pushl	@@rr14,rr6
#endif

/* rr2  - length
 * rl5  - value
 * rr6  - buffer
 */
	testl	rr2
	jr	z,finish

	ldb	rh5,rl5
	ld	r1,r5		/* r1 contains value */
	bit	r7,#0
	jr	z,not_odd

	ldb	@@rr6,rl1
	inc	r7,#1
	subl	rr2,#1
	jr	z,finish

not_odd:ld	r0,r3		/* remember length */
	srl	r3,#1
	jr	z,no_words

	ldl	rr4,rr6
	ld	@@rr6,r1
	inc	r7,#2
	dec	r3,#1
	jr	z,no_words

	ldir	@@rr6,@@rr4,r3	/* fill words */

no_words:
	bit	r0,#0		/* one byte remaining? */
	jr	z,finish

	ldb	@@rr6,rl1

finish:
#ifdef __STD_CALL__
	ldl	rr6,rr14(#4)
#else
	popl	rr2,@@rr14
#endif


#else		/* above Z8001, below Z8002 */


	unsegm

#ifdef __STD_CALL__
	ld	r7,r15(#2)
	ld	r6,r15(#4)
	ld	r5,r15(#6)
#else
	ld	r2,r7		/* buffer pointer return value */
#endif

/* r5  - length
 * r6  - value
 * r7  - buffer
 */
	test	r5
	jr	z,finish

	ldb	rh6,rl6
	ld	r1,r6		/* r1 contains value */
	bit	r7,#0
	jr	z,not_odd

	ldb	@@r7,rl1
	inc	r7,#1
	dec	r5,#1
	jr	z,finish

not_odd:ld	r0,r5		/* remember length */
	srl	r5,#1
	jr	z,no_words

	ld	r4,r7
	ld	@@r7,r1
	inc	r7,#2
	dec	r5,#1
	jr	z,no_words

	ldir	@@r7,@@r4,r5	/* fill words */

no_words:
	bit	r0,#0		/* one byte remaining? */
	jr	z,finish

	ldb	@@r7,rl1

finish:
#ifdef __STD_CALL__
	ld	r7,r15(#2)
#endif

#endif	/* Z8002 */

	ret
	.end
@
