head	1.58;
access;
symbols
	cygwin-1_7_35-release:1.58
	cygwin-1_7_34-release:1.58
	newlib-2_2_0:1.57.0.2
	cygwin-1_7_33-release:1.54
	cygwin-1_7_32-release:1.54
	cygwin-1_7_31-release:1.54
	cygwin-1_7_30-release:1.53
	cygwin-1_7_29-release:1.53
	cygwin-1_7_28-release:1.53
	newlib-2_1_0:1.53
	cygwin-1_7_27-release:1.53
	cygwin-1_7_26-release:1.53
	cygwin-1_7_25-release:1.52
	cygwin-1_7_24-release:1.52
	cygwin-1_7_23-release:1.52
	cygwin-1_7_22-release:1.52
	cygwin-1_7_21-release:1.51
	cygwin-1_7_20-release:1.51
	cygwin-1_7_19-release:1.51
	cygwin-64bit-postmerge:1.49
	cygwin-64bit-premerge-branch:1.48.0.2
	cygwin-64bit-premerge:1.48
	cygwin-1_7_18-release:1.48
	newlib-2_0_0:1.47
	cygwin-1_7_17-release:1.47
	cygwin-64bit-branch:1.46.0.2
	cygwin-1_7_16-release:1.46
	cygwin-1_7_15-release:1.46
	cygwin-1_7_14_2-release:1.46
	cygwin-1_7_14-release:1.46
	cygwin-1_7_12-release:1.46
	cygwin-1_7_11-release:1.46
	cygwin-1_7_10-release:1.45
	newlib-1_20_0:1.45
	cygwin-1_7_9-release:1.44
	cygwin-1_7_8-release:1.44
	newlib-1_19_0:1.44
	cygwin-1_7_7-release:1.42
	cygwin-1_7_5-release:1.42
	cygwin-1_7_4-release:1.42
	cygwin-1_7_3-release:1.42
	cygwin-1_7_2-release:1.42
	newlib-1_18_0:1.42
	cygwin-1_7_1-release:1.41
	newlib-1_17_0-arc:1.37.0.2
	binutils-arc-20080908-branch:1.36.0.2
	binutils-arc-20080908-branchpoint:1.36
	newlib-1_17_0:1.37
	newlib-1_16_0:1.34
	newlib-1_15_0:1.32
	newlib-csl-coldfire-4_1-32:1.27
	newlib-csl-sourcerygxx-4_1-32:1.27
	newlib-csl-innovasic-fido-3_4_4-33:1.27
	newlib-csl-coldfire-4_1-30:1.27
	newlib-csl-sourcerygxx-4_1-30:1.27
	newlib-csl-coldfire-4_1-28:1.27
	newlib-csl-sourcerygxx-4_1-28:1.27
	newlib-csl-arm-2006q3-27:1.27
	newlib-csl-sourcerygxx-4_1-27:1.27
	newlib-csl-arm-2006q3-26:1.27
	newlib-csl-sourcerygxx-4_1-26:1.27
	newlib-csl-sourcerygxx-4_1-24:1.27
	newlib-csl-sourcerygxx-4_1-23:1.27
	newlib-csl-sourcerygxx-4_1-21:1.27
	newlib-csl-arm-2006q3-21:1.27
	newlib-csl-arm-2006q3-19:1.27
	newlib-csl-sourcerygxx-4_1-19:1.27
	newlib-csl-sourcerygxx-4_1-18:1.27
	newlib-csl-sourcerygxx-3_4_4-25:1.28
	newlib-csl-sourcerygxx-4_1-17:1.27
	cr-0x5f1:1.27.0.6
	newlib-csl-sourcerygxx-4_1-14:1.27
	newlib-csl-sourcerygxx-4_1-13:1.27
	newlib-csl-sourcerygxx-4_1-12:1.27
	newlib-csl-sourcerygxx-4_1-9:1.27
	newlib-csl-sourcerygxx-4_1-8:1.27
	newlib-csl-sourcerygxx-4_1-7:1.27
	newlib-csl-arm-2006q1-6:1.27
	newlib-csl-sourcerygxx-4_1-6:1.27
	newlib-csl-sourcerygxx-4_1-5:1.27
	newlib-csl-sourcerygxx-4_1-4:1.27
	newlib-autotools-branch:1.27.0.4
	newlib-csl-20060320-branch:1.27.0.2
	newlib-csl-20060320-branchpoint:1.27
	newlib-1_14_0:1.27
	newlib-csl-arm-2005-q1b:1.24
	newlib-csl-arm-2005-q1a:1.24
	newlib-1_13_0:1.22
	csl-arm-2004-q3:1.20
	csl-arm-2004-q1a:1.18
	csl-arm-2004-q1:1.18
	newlib-1_12_0:1.17
	csl-arm-2003-q4:1.16
	w32api-2_2:1.14
	mingw-runtime-2_4:1.14
	newlib-1_11_0:1.14
	cygnus_cvs_20020108_pre:1.6
	newlib-1_10_0:1.5
	newlib-1_9_0:1.2
	newlib-2000-02-17:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.58
date	2015.01.21.18.27.45;	author ebotcazou;	state Exp;
branches;
next	1.57;

1.57
date	2014.12.15.13.32.16;	author corinna;	state Exp;
branches;
next	1.56;

1.56
date	2014.12.12.21.14.06;	author jjohnstn;	state Exp;
branches;
next	1.55;

1.55
date	2014.11.28.08.47.39;	author corinna;	state Exp;
branches;
next	1.54;

1.54
date	2014.07.17.18.43.04;	author corinna;	state Exp;
branches;
next	1.53;

1.53
date	2013.11.26.19.58.19;	author jjohnstn;	state Exp;
branches;
next	1.52;

1.52
date	2013.07.09.19.06.47;	author jjohnstn;	state Exp;
branches;
next	1.51;

1.51
date	2013.05.13.21.39.51;	author dj;	state Exp;
branches;
next	1.50;

1.50
date	2013.05.06.18.23.08;	author jjohnstn;	state Exp;
branches;
next	1.49;

1.49
date	2013.04.23.09.42.25;	author corinna;	state Exp;
branches;
next	1.48;

1.48
date	2013.02.28.16.42.21;	author corinna;	state Exp;
branches;
next	1.47;

1.47
date	2012.09.26.20.06.47;	author jjohnstn;	state Exp;
branches;
next	1.46;

1.46
date	2012.02.21.22.34.30;	author jjohnstn;	state Exp;
branches
	1.46.2.1;
next	1.45;

1.45
date	2011.11.29.06.33.48;	author dj;	state Exp;
branches;
next	1.44;

1.44
date	2010.12.02.19.30.46;	author jjohnstn;	state Exp;
branches;
next	1.43;

1.43
date	2010.10.09.02.33.29;	author jjohnstn;	state Exp;
branches;
next	1.42;

1.42
date	2009.12.17.19.24.22;	author jjohnstn;	state Exp;
branches;
next	1.41;

1.41
date	2009.10.26.10.05.22;	author nickc;	state Exp;
branches;
next	1.40;

1.40
date	2009.09.28.16.42.20;	author jjohnstn;	state Exp;
branches;
next	1.39;

1.39
date	2009.05.27.18.54.58;	author jjohnstn;	state Exp;
branches;
next	1.38;

1.38
date	2009.04.22.19.52.49;	author jjohnstn;	state Exp;
branches;
next	1.37;

1.37
date	2008.12.11.20.05.38;	author jjohnstn;	state Exp;
branches
	1.37.2.1;
next	1.36;

1.36
date	2008.06.21.18.48.45;	author corinna;	state Exp;
branches;
next	1.35;

1.35
date	2008.01.15.09.41.06;	author corinna;	state Exp;
branches;
next	1.34;

1.34
date	2007.11.07.21.42.24;	author brolley;	state Exp;
branches;
next	1.33;

1.33
date	2007.08.28.21.56.49;	author jjohnstn;	state Exp;
branches;
next	1.32;

1.32
date	2006.12.18.16.48.03;	author jjohnstn;	state Exp;
branches;
next	1.31;

1.31
date	2006.12.13.19.36.17;	author jjohnstn;	state Exp;
branches;
next	1.30;

1.30
date	2006.11.08.19.26.43;	author jjohnstn;	state Exp;
branches;
next	1.29;

1.29
date	2006.10.11.19.20.31;	author jjohnstn;	state Exp;
branches;
next	1.28;

1.28
date	2006.08.16.21.39.43;	author jjohnstn;	state Exp;
branches;
next	1.27;

1.27
date	2005.12.13.22.57.31;	author jjohnstn;	state Exp;
branches
	1.27.6.1;
next	1.26;

1.26
date	2005.08.10.20.35.13;	author jjohnstn;	state Exp;
branches;
next	1.25;

1.25
date	2005.07.06.13.14.10;	author aldyh;	state Exp;
branches;
next	1.24;

1.24
date	2005.03.18.09.46.30;	author corinna;	state Exp;
branches;
next	1.23;

1.23
date	2005.01.27.23.54.42;	author jjohnstn;	state Exp;
branches;
next	1.22;

1.22
date	2004.10.25.17.53.19;	author jjohnstn;	state Exp;
branches;
next	1.21;

1.21
date	2004.10.05.19.44.24;	author jjohnstn;	state Exp;
branches;
next	1.20;

1.20
date	2004.06.22.22.11.54;	author aoliva;	state Exp;
branches;
next	1.19;

1.19
date	2004.06.22.21.54.51;	author aoliva;	state Exp;
branches;
next	1.18;

1.18
date	2004.04.08.18.42.46;	author jjohnstn;	state Exp;
branches;
next	1.17;

1.17
date	2004.02.02.16.59.52;	author jjohnstn;	state Exp;
branches;
next	1.16;

1.16
date	2003.07.10.19.04.43;	author aoliva;	state Exp;
branches;
next	1.15;

1.15
date	2003.06.10.15.32.27;	author green;	state Exp;
branches;
next	1.14;

1.14
date	2002.12.10.19.46.49;	author jjohnstn;	state Exp;
branches;
next	1.13;

1.13
date	2002.08.07.17.07.41;	author rsandifo;	state Exp;
branches;
next	1.12;

1.12
date	2002.07.24.15.44.24;	author jjohnstn;	state Exp;
branches;
next	1.11;

1.11
date	2002.06.27.23.58.38;	author jjohnstn;	state Exp;
branches;
next	1.10;

1.10
date	2002.06.18.21.20.21;	author brolley;	state Exp;
branches;
next	1.9;

1.9
date	2002.04.30.18.23.37;	author fitzsim;	state Exp;
branches;
next	1.8;

1.8
date	2002.04.19.19.16.14;	author jjohnstn;	state Exp;
branches;
next	1.7;

1.7
date	2002.02.08.07.11.01;	author aoliva;	state Exp;
branches;
next	1.6;

1.6
date	2001.12.22.22.47.57;	author geoffk;	state Exp;
branches;
next	1.5;

1.5
date	2001.11.12.21.04.39;	author jjohnstn;	state Exp;
branches;
next	1.4;

1.4
date	2001.08.14.14.36.57;	author cgf;	state Exp;
branches;
next	1.3;

1.3
date	2001.03.08.21.39.31;	author jjohnstn;	state Exp;
branches;
next	1.2;

1.2
date	2000.05.30.17.18.05;	author cgf;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.39.46;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.46.2.1
date	2012.10.16.15.58.09;	author corinna;	state Exp;
branches;
next	1.46.2.2;

1.46.2.2
date	2012.11.30.13.45.36;	author corinna;	state Exp;
branches;
next	1.46.2.3;

1.46.2.3
date	2013.01.29.17.07.45;	author corinna;	state Exp;
branches;
next	1.46.2.4;

1.46.2.4
date	2013.02.28.16.43.40;	author corinna;	state Exp;
branches;
next	;

1.37.2.1
date	2009.09.10.01.29.06;	author amylaar;	state Exp;
branches;
next	;

1.27.6.1
date	2006.10.19.08.39.45;	author corinna;	state Exp;
branches;
next	;

1.1.1.1
date	2000.02.17.19.39.46;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.58
log
@	* COPYING.LIBGLOSS: Add Controls and Data Services copyright.
	* COPYING.NEWLIB: Likewise.
libgloss/
	* configure.in: Add Visium support.
	* configure: Regenerate.
	* visium/: New directory.
newlib/
	* configure.host: Add Visium support.
	* libc/machine/configure.in: Likewise.
	* libc/machine/configure: Regenerate.
	* libc/machine/visium/: New directory.
	* libc/include/machine/setjmp.h (_JBLEN): Define for Visium.
	* libc/include/machine/ieeefp.h (__IEEE_BIG_ENDIAN): Likewise.
	* libc/include/machine/time.h (_CLOCKS_PER_SEC_): Likewise.
@
text
@
_BEGIN_STD_C

#if defined(__or1k__) || defined(__or1knd__)
#define _JBLEN 31 /* 32 GPRs - r0 */
#define _JBTYPE unsigned long
#endif

#if defined(__arm__) || defined(__thumb__)
/*
 * All callee preserved registers:
 * v1 - v7, fp, ip, sp, lr, f4, f5, f6, f7
 */
#define _JBLEN 23
#endif

#if defined(__aarch64__)
#define _JBLEN 22
#define _JBTYPE long long
#endif

#if defined(__AVR__)
#define _JBLEN 24
#endif

#ifdef __sparc__
/*
 * onsstack,sigmask,sp,pc,npc,psr,g1,o0,wbcnt (sigcontext).
 * All else recovered by under/over(flow) handling.
 */
#define	_JBLEN	13
#endif

#ifdef __BFIN__
#define _JBLEN  40
#endif

#ifdef __epiphany__
/* All callee preserved registers: r4-r10,fp, sp, lr,r15, r32-r39  */
#define _JBTYPE long long
#define _JBLEN 10
#endif

/* necv70 was 9 as well. */

#if defined(__m68k__) || defined(__mc68000__)
/*
 * onsstack,sigmask,sp,pc,psl,d2-d7,a2-a6,
 * fp2-fp7	for 68881.
 * All else recovered by under/over(flow) handling.
 */
#define	_JBLEN	34
#endif

#if defined(__mc68hc11__) || defined(__mc68hc12__) || defined(__mc68hc1x__)
/*
 * D, X, Y are not saved.
 * Only take into account the pseudo soft registers (max 32).
 */
#define _JBLEN  32
#endif

#ifdef __nds32__
/* 17 words for GPRs,
   1 word for $fpcfg.freg and 30 words for FPUs
   Reserved 2 words for aligement-adjustment. When storeing double-precision
   floating-point register into memory, the address has to be
   double-word-aligned.
   Check libc/machine/nds32/setjmp.S for more information.  */
#if __NDS32_EXT_FPU_SP__ || __NDS32_EXT_FPU_DP__
#define	_JBLEN 50
#else
#define _JBLEN 18
#endif
#endif

#if defined(__Z8001__) || defined(__Z8002__)
/* 16 regs + pc */
#define _JBLEN 20
#endif

#ifdef _AM29K
/*
 * onsstack,sigmask,sp,pc,npc,psr,g1,o0,wbcnt (sigcontext).
 * All else recovered by under/over(flow) handling.
 */
#define	_JBLEN	9
#endif

#ifdef __i386__
# if defined(__CYGWIN__) && !defined (_JBLEN)
#  define _JBLEN (13 * 4)
# elif defined(__unix__) || defined(__rtems__)
#  define _JBLEN	9
# else
#  include "setjmp-dj.h"
# endif
#endif

#ifdef __x86_64__
# ifdef __CYGWIN__
#  define _JBTYPE long
#  define _JBLEN  32
# else
#  define _JBTYPE long long
#  define _JBLEN  8
# endif
#endif

#ifdef __i960__
#define _JBLEN 35
#endif

#ifdef __M32R__
/* Only 8 words are currently needed.  10 gives us some slop if we need
   to expand.  */
#define _JBLEN 10
#endif

#ifdef __mips__
# if defined(__mips64)
#  define _JBTYPE long long
# endif
# ifdef __mips_soft_float
#  define _JBLEN 11
# else
#  define _JBLEN 23
# endif
#endif

#ifdef __m88000__
#define _JBLEN 21
#endif

#ifdef __H8300__
#define _JBLEN 5
#define _JBTYPE int
#endif

#ifdef __H8300H__
/* same as H8/300 but registers are twice as big */
#define _JBLEN 5
#define _JBTYPE long
#endif

#if defined (__H8300S__) || defined (__H8300SX__)
/* same as H8/300 but registers are twice as big */
#define _JBLEN 5
#define _JBTYPE long
#endif

#ifdef __H8500__
#define _JBLEN 4
#endif

#ifdef  __sh__
#if __SH5__
#define _JBLEN 50
#define _JBTYPE long long
#else
#define _JBLEN 20
#endif /* __SH5__ */
#endif

#ifdef  __v800
#define _JBLEN 28
#endif

#ifdef __PPC__
#ifdef __ALTIVEC__
#define _JBLEN 64
#else
#define _JBLEN 32
#endif
#define _JBTYPE double
#endif

#ifdef __MICROBLAZE__
#define _JBLEN  20
#define _JBTYPE unsigned int
#endif

#ifdef __hppa__
/* %r30, %r2-%r18, %r27, pad, %fr12-%fr15.
   Note space exists for the FP registers, but they are not
   saved.  */
#define _JBLEN 28
#endif

#if defined(__mn10300__) || defined(__mn10200__)
#ifdef __AM33_2__
#define _JBLEN 26
#else
/* A guess */
#define _JBLEN 10
#endif
#endif

#ifdef __v850
/* I think our setjmp is saving 15 regs at the moment.  Gives us one word
   slop if we need to expand.  */
#define _JBLEN 16
#endif

#if defined(_C4x)
#define _JBLEN 10
#endif
#if defined(_C3x)
#define _JBLEN 9
#endif

#ifdef __TMS320C6X__
#define _JBLEN 13
#endif

#ifdef __TIC80__
#define _JBLEN 13
#endif

#ifdef __D10V__
#define _JBLEN 8
#endif

#ifdef __D30V__
#define _JBLEN ((64 /* GPR */ + (2*2) /* ACs */ + 18 /* CRs */) / 2)
#define _JBTYPE double
#endif

#ifdef __frv__
#define _JBLEN (68/2)  /* room for 68 32-bit regs */
#define _JBTYPE double
#endif

#ifdef __moxie__
#define _JBLEN 16
#endif

#ifdef __CRX__
#define _JBLEN 9
#endif

#if (defined(__CR16__) || defined(__CR16C__) ||defined(__CR16CP__))
/* r6, r7, r8, r9, r10, r11, r12 (r12L, r12H), 
 * r13 (r13L, r13H), ra(raL, raH), sp(spL, spH) */
#define _JBLEN 14
#define _JBTYPE unsigned short
#endif

#ifdef __fr30__
#define _JBLEN 10
#endif

#ifdef __iq2000__
#define _JBLEN 32
#endif

#ifdef __mcore__
#define _JBLEN 16
#endif

#ifdef __MMIX__
/* Using a layout compatible with GCC's built-in.  */
#define _JBLEN 5
#define _JBTYPE unsigned long
#endif

#ifdef __mt__
#define _JBLEN 16
#endif

#ifdef __SPU__
#define _JBLEN 50 
#define _JBTYPE __vector signed int
#endif

#ifdef __xstormy16__
/* 4 GPRs plus SP plus PC. */
#define _JBLEN 8
#endif

#ifdef __mep__
/* 16 GPRs, pc, hi, lo */
#define _JBLEN 19
#endif

#ifdef __CRIS__
#define _JBLEN 18
#endif

#ifdef __lm32__
#define _JBLEN 19
#endif

#ifdef __m32c__
#if defined(__r8c_cpu__) || defined(__m16c_cpu__)
#define _JBLEN (22/2)
#else
#define _JBLEN (34/2)
#endif
#define _JBTYPE unsigned short
#endif /* __m32c__ */

#ifdef __MSP430__
#define _JBLEN 9

#ifdef __MSP430X_LARGE__
#define _JBTYPE unsigned long
#else
#define _JBTYPE unsigned short
#endif
#endif

#ifdef __RL78__
/* Three banks of registers, SP, CS, ES, PC */
#define _JBLEN (8*3+8)
#define _JBTYPE unsigned char
#endif

/*
 * There are two versions of setjmp()/longjmp():
 *   1) Compiler (gcc) built-in versions.
 *   2) Function-call versions.
 *
 * The built-in versions are used most of the time.  When used, gcc replaces
 * calls to setjmp()/longjmp() with inline assembly code.  The built-in 
 * versions save/restore a variable number of registers.

 * _JBLEN is set to 40 to be ultra-safe with the built-in versions.
 * It only needs to be 12 for the function-call versions
 * but this data structure is used by both versions.
 */
#ifdef __NIOS2__
#define _JBLEN 40
#define _JBTYPE unsigned long
#endif

#ifdef __RX__
#define _JBLEN 0x44
#endif

#ifdef __VISIUM__
/* All call-saved GP registers: r11-r19,r21,r22,r23.  */
#define _JBLEN 12
#endif

#ifdef _JBLEN
#ifdef _JBTYPE
typedef	_JBTYPE jmp_buf[_JBLEN];
#else
typedef	int jmp_buf[_JBLEN];
#endif
#endif

_END_STD_C

#if defined(__CYGWIN__) || defined(__rtems__)
#include <signal.h>

#ifdef __cplusplus
extern "C" {
#endif

/* POSIX sigsetjmp/siglongjmp macros */
#ifdef _JBTYPE
typedef _JBTYPE sigjmp_buf[_JBLEN+1+((sizeof (_JBTYPE) + sizeof (sigset_t) - 1)
				     /sizeof (_JBTYPE))];
#else
typedef int sigjmp_buf[_JBLEN+1+(sizeof (sigset_t)/sizeof (int))];
#endif

#define _SAVEMASK	_JBLEN
#define _SIGMASK	(_JBLEN+1)

#ifdef __CYGWIN__
# define _CYGWIN_WORKING_SIGSETJMP
#endif

#ifdef _POSIX_THREADS
#define __SIGMASK_FUNC pthread_sigmask
#else
#define __SIGMASK_FUNC sigprocmask
#endif

#if defined(__GNUC__)

#define sigsetjmp(env, savemask) \
            __extension__ \
            ({ \
              sigjmp_buf *_sjbuf = &(env); \
              ((*_sjbuf)[_SAVEMASK] = savemask,\
              __SIGMASK_FUNC (SIG_SETMASK, 0, (sigset_t *)((*_sjbuf) + _SIGMASK)),\
              setjmp (*_sjbuf)); \
            })

#define siglongjmp(env, val) \
            __extension__ \
            ({ \
              sigjmp_buf *_sjbuf = &(env); \
              ((((*_sjbuf)[_SAVEMASK]) ? \
               __SIGMASK_FUNC (SIG_SETMASK, (sigset_t *)((*_sjbuf) + _SIGMASK), 0)\
               : 0), \
               longjmp (*_sjbuf, val)); \
            })

#else /* !__GNUC__ */

#define sigsetjmp(env, savemask) ((env)[_SAVEMASK] = savemask,\
               __SIGMASK_FUNC (SIG_SETMASK, 0, (sigset_t *) ((env) + _SIGMASK)),\
               setjmp (env))

#define siglongjmp(env, val) ((((env)[_SAVEMASK])?\
               __SIGMASK_FUNC (SIG_SETMASK, (sigset_t *) ((env) + _SIGMASK), 0):0),\
               longjmp (env, val))

#endif

/* POSIX _setjmp/_longjmp, maintained for XSI compatibility.  These
   are equivalent to sigsetjmp/siglongjmp when not saving the signal mask.
   New applications should use sigsetjmp/siglongjmp instead. */
#ifdef __CYGWIN__
extern void _longjmp(jmp_buf, int);
extern int _setjmp(jmp_buf);
#else
#define _setjmp(env)		sigsetjmp ((env), 0)
#define _longjmp(env, val)	siglongjmp ((env), (val))
#endif

#ifdef __cplusplus
}
#endif
#endif /* __CYGWIN__ or __rtems__ */
@


1.57
log
@	* newlib/libc/include/machine/setjmp.h: Add FPU support.
	* newlib/libc/machine/nds32/setjmp.S: Add FPU support.
@
text
@d341 5
@


1.56
log
@
2014-12-12  Stefan Wallentowitz  <stefan.wallentowitz@@tum.de>

        * configure.host: or1knd support, OpenRISC without delay slot
        * libc/include/machine/setjmp.h: Add or1knd
        * libc/machine/or1k/setjmp.S: Optional delay slot
@
text
@d64 9
a72 3
/* Only 17 words are currently needed.
   Preserve one word slot if we need to expand.
   Check newlib/libc/machine/nds32/setjmp.S for more information.  */
d75 1
@


1.55
log
@	* libc/include/machine/setjmp.h [__mips__]: Remove __mips_fpr == 64
	from the 64-bit _JBTYPE definition.
	* libc/machine/mips/setjmp.S: Re-work the o32 FP64 support to match
	the now one-and-only supported o32 FP64 ABI extension.  Also
	support o32 FPXX.
@
text
@d4 1
a4 1
#ifdef __or1k__
@


1.54
log
@	* configure.host: Remove or16 and or32 targets and add or1k.
	* libc/include/machine/ieeefp.h: Replace or32 with or1k.
	* libc/machine/configure.in: Add or1k subdirectory.
	* libc/machine/or1k/configure.in: New file.
	* libc/machine/or1k/Makefile.am: New file.
	* libc/machine/or1k/setjmp.S: New file.
@
text
@d114 1
a114 1
# if defined(__mips64) || (__mips_fpr == 64)
@


1.53
log
@
2013-11-26  Matheus Almeida  <Matheus.Almeida@@imgtec.com>

        * libc/include/machine/setjmp.h: Add support for __mips_fpr being
        64 and treat it the same as if __mips64 is set.
        * libc/machine/mips/setjmp.S: Ditto, plus add checks for _MIPS_SIM
        being _ABIN32 and _ABI64.
@
text
@d4 5
@


1.52
log
@
2013-07-09  Sabrina Ni  <sabrina@@andestech.com>

        * configure.host (machine_dir, syscall_dir, newlib_cflags):
        Add settings for nds32*.
        * libc/include/machine/ieeefp.h (IEEE_BIG_ENDIAN, IEEE_LITTLE_ENDIAN):
        Ditto.
        * libc/include/machine/setjmp.h (JBLEN): Ditto.
        * libc/machine/configure.in: Add nds32 subdir.
        * libc/machine/configure: Regenerated.
        * libc/machine/nds32/Makefile.am: New.
        * libc/machine/nds32/Makefile.in: New (autogenerated).
        * libc/machine/nds32/aclocal.m4: New (autogenerated).
        * libc/machine/nds32/configure.in: New.
        * libc/machine/nds32/configure: New (autogenerated).
        * libc/machine/nds32/setjmp.S: New.
@
text
@d109 8
a116 8
#ifdef __mips64
#define _JBTYPE long long
#endif
#ifdef __mips_soft_float
#define _JBLEN 11
#else
#define _JBLEN 23
#endif
@


1.51
log
@[newlib]
* configure.host (msp430): Add.
* libc/include/machine/ieeefp.h: Add MSP430 support.
* libc/include/machine/setjmp.h: Likewise.
* libc/include/sys/config.h: Likewise.
* libc/machine/configure.in (msp430): Add.
* libc/machine/configure: Regenerate.
* libc/machine/msp430: New directory.

[libgloss]
* configure.in (msp430*-*-elf): Add.
* configure: Regenerate.
* msp430: New directory.
@
text
@d58 7
@


1.50
log
@
2013-05-06  Sandra Loosemore  <sandra@@codesourcery.com>

        * configure.host (machine_dir, sys_dir, syscall_dir, newlib_cflags):
        Add settings for nios2*.
        * libc/include/machine/ieeefp.h (IEEE_BIG_ENDIAN, IEEE_LITTLE_ENDIAN):
        Likewise.
        * libc/include/machine/setjmp.h (JBLEN, JBTYPE): Likewise.
        * libc/machine/configure.in: Add nios2 subdir.
        * libc/machine/configure: Regenerated.
        * libc/machine/nios2/Makefile.am: New.
        * libc/machine/nios2/Makefile.in: New (autogenerated).
        * libc/machine/nios2/aclocal.m4: New (copied from mips version).
        * libc/machine/nios2/configure.in: New.
        * libc/machine/nios2/configure: New (autogenerated).
        * libc/machine/nios2/setjmp.s: New.
@
text
@d284 10
@


1.49
log
@	Port newlib to x86_64-pc-cygwin.
	* libc/include/sys/features.h: Redefine compilation environment
	definitions for Cygwin to cover 64 bit Cygwin.
	* libc/ctype/ctype_.c (_ctype_): Fix definition for 64 bit Cygwin.
	* libc/include/machine/setjmp.h: Change definition of _JBLEN to allow
	different values for 32 bit and 64 bit Cygwin.
	* libc/include/reent.h (stat64): Define as stat under Cygwin, instead
	of as __stat64.  Undef stat64 if not building Newlib.
	* libc/include/sys/stat.h (stat64): Define as stat under Cygwin.
@
text
@d290 18
@


1.48
log
@	* libc/include/machine/setjmp.h (sigjmp_buf): Fix definition of
	sigjmp_buf size if _JBTYPE is defined.
@
text
@d71 8
a78 8
#if defined(__CYGWIN__) && !defined (_JBLEN)
#define _JBLEN (13 * 4)
#elif defined (__i386__)
#if defined(__unix__) || defined(__rtems__)
# define _JBLEN	9
#else
#include "setjmp-dj.h"
#endif
d82 7
a88 2
#define _JBTYPE long long
#define _JBLEN  8
@


1.47
log
@
2012-09-26  Ian Bolton  <ian.bolton@@arm.com>
        Jim MacArthur  <jim.macarthur@@arm.com>
        Marcus Shawcroft  <marcus.shawcroft@@arm.com>
        Nigel Stephens  <nigel.stephens@@arm.com>
        Ramana Radhakrishnan  <ramana.radhakrishnan@@arm.com>
        Richard Earnshaw  <rearnsha@@arm.com>
        Sofiane Naci  <sofiane.naci@@arm.com>
        Tejas Belagod  <tejas.belagod@@arm.com>
        Yufeng Zhang  <yufeng.zhang@@arm.com>

        * configure.host: Add AArch64.
        * libc/include/machine/ieeefp.h: Add AArch64.
        * libc/include/machine/setjmp.h: Add AArch64.
        * libc/include/machine/time.h: Add AArch64.
        * libc/include/sys/config.h: Add AArch64.
        * libc/machine/aarch64/Makefile.am: New file.
        * libc/machine/aarch64/Makefile.in: Generated.
        * libc/machine/aarch64/aclocal.m4: Generated.
        * libc/machine/aarch64/configure: Generated.
        * libc/machine/aarch64/configure.in: New file.
        * libc/machine/aarch64/setjmp.S: New file.
        * libc/machine/configure.in: Add AArch64.
        * libc/machine/configure: Re-generated.
        * libm/machine/aarch64/Makefile.am: New file.
        * libm/machine/aarch64/Makefile.in: Generated.
        * libm/machine/aarch64/aclocal.m4: Generated.
        * libm/machine/aarch64/configure: Generated.
        * libm/machine/aarch64/configure.in: New file.
        * libm/machine/aarch64/s_ceil.c: New file.
        * libm/machine/aarch64/s_floor.c: New file.
        * libm/machine/aarch64/s_fma.c: New file.
        * libm/machine/aarch64/s_fmax.c: New file.
        * libm/machine/aarch64/s_fmin.c: New file.
        * libm/machine/aarch64/s_llrint.c: New file.
        * libm/machine/aarch64/s_llround.c: New file.
        * libm/machine/aarch64/s_lrint.c: New file.
        * libm/machine/aarch64/s_lround.c: New file.
        * libm/machine/aarch64/s_nearbyint.c: New file.
        * libm/machine/aarch64/s_rint.c: New file.
        * libm/machine/aarch64/s_round.c: New file.
        * libm/machine/aarch64/s_trunc.c: New file.
        * libm/machine/aarch64/sf_ceil.c: New file.
        * libm/machine/aarch64/sf_floor.c: New file.
        * libm/machine/aarch64/sf_fma.c: New file.
        * libm/machine/aarch64/sf_fmax.c: New file.
        * libm/machine/aarch64/sf_fmin.c: New file.
        * libm/machine/aarch64/sf_llrint.c: New file.
        * libm/machine/aarch64/sf_llround.c: New file.
        * libm/machine/aarch64/sf_lrint.c: New file.
        * libm/machine/aarch64/sf_lround.c: New file.
        * libm/machine/aarch64/sf_nearbyint.c: New file.
        * libm/machine/aarch64/sf_rint.c: New file.
        * libm/machine/aarch64/sf_round.c: New file.
        * libm/machine/aarch64/sf_trunc.c: New file.
        * libm/machine/configure.in: Add AArch64.
        * libm/machine/configure: Re-generated.
@
text
@d308 2
a309 1
typedef _JBTYPE sigjmp_buf[_JBLEN+1+(sizeof (sigset_t)/sizeof (_JBTYPE))];
@


1.46
log
@
2012-02-21  Jeremy Bennett  <jeremy.bennett@@embecosm.com>
            Alan Lehotsky  <apl@@alum.mit.edu>
            Joern Rennecke  <joern.rennecke@@embecosm.com>

        * configure.host: Add Epiphany support.
        * libc/include/machine/ieeefp.h: Likewise.
        * libc/include/machine/setjmp.h: Likewise.
        * libc/machine/configure.in, libc/sys/configure.in: Likewise.
        * libc/machine/configure, libc/sys/configure: Regenerate.
        * libc/machine/epiphany, libc/sys/epiphany: New directories.
        * NEWS: Mention addition of Epiphany.
@
text
@d12 5
@


1.46.2.1
log
@	Pull in changes from HEAD
	Align ChangeLog with head
	New file ChangeLog.64bit
@
text
@a11 5
#if defined(__aarch64__)
#define _JBLEN 22
#define _JBTYPE long long
#endif

@


1.46.2.2
log
@	* libc/include/machine/setjmp.h: Change definition of _JBLEN to allow
	different values for 32 bit and 64 bit Cygwin.
@
text
@d71 8
a78 8
#ifdef __i386__
# if defined(__CYGWIN__) && !defined (_JBLEN)
#  define _JBLEN (13 * 4)
# elif defined(__unix__) || defined(__rtems__)
#  define _JBLEN	9
# else
#  include "setjmp-dj.h"
# endif
d82 2
a83 8
# define _JBTYPE long long
# ifdef __CYGWIN__
#  define _JBLEN  32	/* FIXME: This matches the size of the native Windows
				  setjmp buf.  We probably need more for fork
				  to be on the safe side. */
# else
#  define _JBLEN  8
# endif
@


1.46.2.3
log
@	* libc/include/machine/setjmp.h: Fix definition of _JBTYPE and _JBLEN
	for 64 bit Cygwin to enforce 16 byte alignment.  Change comment to
	explain.
@
text
@d82 1
d84 3
a86 4
#  define _JBTYPE __int128
#  define _JBLEN  16	/* This matches the size of the native Windows setjmp
			   buf.  We have to enforce 16 byte alignment, because
			   the buffer contains FP registers. */
a87 1
#  define _JBTYPE long long
@


1.46.2.4
log
@	* libc/include/machine/setjmp.h (sigjmp_buf): Fix definition of
	sigjmp_buf size if _JBTYPE is defined.

	* libc/include/machine/setjmp.h: Revert definition of _JBTYPE and _JBLEN
	for 64 bit Cygwin to use long as base type.  Drop unneeded comment.
@
text
@d83 4
a86 2
#  define _JBTYPE long
#  define _JBLEN  32
d315 1
a315 2
typedef _JBTYPE sigjmp_buf[_JBLEN+1+((sizeof (_JBTYPE) + sizeof (sigset_t) - 1)
				     /sizeof (_JBTYPE))];
@


1.45
log
@[libgloss]
* configure.in: Add rl78.
* configure: Regenerate.
* rl78: New directory

[newlib]
* configure.host: Add rl78.
* libc/include/machine/ieeefp.h: Add rl78 support.
* libc/include/machine/setjmp.h: Add rl78 support.
* libc/machine/configure.in: Add rl78.
* libc/machine/rl78: New directory.
@
text
@d28 6
@


1.44
log
@
2010-12-02  Jayant Sonar  jayant.sonar@@kpitcummins.com
            Kaushik Phatak  kaushik.phatak@@kpitcummins.com

        * configure.host: Add CR16 support.
        * libc/include/machine/ieeefp.h: Ditto.
        * libc/include/machine/setjmp.h: Ditto.
        * libc/include/sys/config.h: Ditto.
        * libc/machine/configure.in: Ditto
        * libc/machine/configure: Regenerated
        * libc/machine/cr16/aclocal.m4: New.
        * libc/machine/cr16/configure.in: New
        * libc/machine/cr16/configure: New
        * libc/machine/cr16/getenv.c: New
        * libc/machine/cr16/Makefile.am: New
        * libc/machine/cr16/Makefile.in: New
        * libc/machine/cr16/setjmp.S: New
        * libc/machine/cr16/sys/asm.h: New
        * libc/machine/cr16/sys/libh.h: New
        * libc/machine/cr16/sys/syscall.h: New
@
text
@d268 6
@


1.43
log
@
2010-10-08  Bernd Schmidt  <bernds@@codesourcery.com>
        Joseph Myers  <joseph@@codesourcery.com>

        * configure.host: Handle tic6x targets.
        * libc/include/machine/ieeefp.h: Define endianness for C6X.
        * libc/include/machine/setjmp.h: Add __TMS320C6X__ case.
        * libc/machine/configure.in: Handle tic6x targets.
        * libc/machine/configure: Regenerate.
        * libc/machine/tic6x/Makefile.am, libc/machine/tic6x/configure.in,
        libc/machine/tic6x/setjmp.S: New.
        * libc/machine/tic6x/Makefile.in, libc/machine/tic6x/aclocal.m4,
        libc/machine/tic6x/configure: New (generated).
@
text
@d207 7
@


1.42
log
@
2009-12-17  Ralf CorsÃ©pius <ralf.corsepius@@rtems.org>

        * libc/include/machine/setjmp.h: Set up _JBLEN #ifdef __m68k__.
@
text
@d177 4
@


1.41
log
@newlib:
        * configure.host: Add support for RX architecture.
        * libc/include/machine/ieeefp.h: Likewise.
        * libc/include/machine/setjmp.h: Likewise.
        * libc/include/machine/configure.in: Likewise.
        * libc/include/machine/configure: Regenerate.
        * libc/machine/rx: New directory.
        * libc/machine/rx/*: New files to support RX architecture.

libgloss:
        * configure.in: Add support for RX sub-directory.
        * configure: Regenerate.
        * rx: New directory.
        * rx/*: New files to support RX architecture.
@
text
@d30 1
a30 1
#ifdef __mc68000__
@


1.40
log
@
2009-09-28  Michael Eager <eager@@eagercon.com>

        * configure.host: Add microblaze.
        * libc/include/machine/ieeefp.h [MICROBLAZE]: Define __IEEE_BIG_ENDIAN.
        * libc/include/machine/setjmp.h [MICROBLAZE]: Define _JBLEN, _JBTYPE.
        * libc/include/sys/config.h [MICROBLAZE]: Define _REENT_SMALL,
        _UNIX98_THREAD_MUTEX_ATTRIBUTES.
        * libc/include/sys/types.h: Treat XMK like rtems, define
        PTHREAD_MUTEX_NORMAL, PTHREAD_MUTEX_ERRORCHECK, PTHREAD_MUTEX_RECURSIVE,
        PTHREAD_MUTEX_DEFAULT, PTHREAD_STACK_MIN, define stuct pthread_attr_s.
        * libc/machine/configure.in: Add microblaze.
        * libc/machine/configure: Add microblaze (not regenerated).
        * libc/machine/microblaze/configure.in: NEW.
        * libc/machine/microblaze/configure: Generate.
        * libc/machine/microblaze/Makefile.am: NEW.
        * libc/machine/microblaze/Makefile.in: Generate.
        * libc/machine/microblaze/{abort.c, strcmp.c, strcpy.c, strlen.c,
        mallocr.c, longjmp.S, setjmp.S}: NEW.
        * libc/stdlib/mallocr.c [MICROBLAZE]: Don't declare sbrk prototype,
        mALLOc(): return malloc value.
@
text
@d257 4
@


1.39
log
@
2009-05-27  Neal H. Walfield  <neal@@gnu.org>

        * libc/include/machine/setjmp.h (sigjmp_buf): Size according to
        _JBTYPE and the size of sigset_t.
@
text
@d143 5
@


1.38
log
@
2009-04-22 Anthony Green <green@@moxielogic.com>

        * configure.host: Add moxie support.
        * libc/machine/configure.in: Add moxie support.
        * libc/machine/configure: Rebuilt.
        * libc/machine/moxie/aclocal.m4: New file.
        * libc/machine/moxie/configure: New file.
        * libc/machine/moxie/configure.in: New file.
        * libc/machine/moxie/Makefile.am: New file.
        * libc/machine/moxie/Makefile.in: New file.
        * libc/machine/moxie/setjmp.S: New file.
        * libc/include/machine/setjmp.h (_JBLEN): Define for moxie.
        * libc/include/machine/ieeefp.h: Add moxie support.
@
text
@d270 5
a274 1
typedef int sigjmp_buf[_JBLEN+2];
@


1.37
log
@
2008-12-11 Jukka Pietarinen <jukka.pietarinen@@mrf.fi>

        * configure.host: Add lm32
        * libc/include/machine/ieeefp.h: Add __lm32__
        * libc/include/machine/setjmp.h: Add __lm32__
        * libc/machine/configure.in: Add lm32
        * libc/machine/configure: Regenerated.
        * libc/machine/lm32/aclocal.m4: New file.
        * libc/machine/lm32/configure.in: Ditto.
        * libc/machine/lm32/configure: Ditto.
        * libc/machine/lm32/Makefile.am: Ditto.
        * libc/machine/lm32/Makefile.in: Ditto.
        * libc/machine/lm32/setjmp.s: Ditto.
@
text
@d190 4
@


1.37.2.1
log
@Support for ARCompact architecture.
@
text
@a205 5
/* Ravi: Added these lines to specify the setjmp buffer size for the ARC */
#ifdef __arc__
#define _JBLEN 25 /* r13-r30,blink,lp_count,lp_start,lp_end,mlo,mhi,status32 */
#endif

@


1.36
log
@	* libc/include/machine/setjmp.h (_longjmp): Define as function on
	Cygwin.
	(_setjmp): Ditto.
@
text
@d235 4
@


1.35
log
@	* libc/include/machine/setjmp.h (__SIGMASK_FUNC): Define as
	pthread_sigmask or sigprocmask depending on _POSIX_THREADS.
	(sigsetjmp): Use __SIGMASK_FUNC.
	(siglongjmp): Ditto.
	(_setjmp): Define as macro.
	(_longjmp): Ditto.
@
text
@d310 1
a310 1
/* POSIX _setjmp/_longjmp macros, maintained for XSI compatibility.  These
d313 4
d319 1
@


1.34
log
@2007-11-07  Dave Brolley  <brolley@@redhat.com>

        * libc/machine/configure: Regenerated to pick up mep-elf changes.

        * Contribute mep-elf from Red Hat
        2006-10-27  DJ Delorie  <dj@@redhat.com>

        * libc/include/machine/setjmp.h: Add MeP support.

        2003-04-17  DJ Delorie  <dj@@redhat.com>

        * configure.host (mep-*-*): Support "long long" type.

        2001-06-06  DJ Delorie  <dj@@redhat.com>

        * libc/include/machine/ieeefp.h (mep): Support little endian too.

        2001-05-14  DJ Delorie  <dj@@redhat.com>

        * configure.host: Add mep's machine_dir.
        * libc/include/setjmp.h: Add mep support.
        * libc/machine/mep: New.
        * libc/machine/mep/setjmp.S: New, support mep's setjmp/longjmp.

        2001-05-04  DJ Delorie  <dj@@redhat.com>

        * configure.host: Add mep.
        * libc/include/machine/ieeefp.h: Ditto.
@
text
@d271 6
d284 1
a284 1
              sigprocmask (SIG_SETMASK, 0, (sigset_t *)((*_sjbuf) + _SIGMASK)),\
d293 1
a293 1
               sigprocmask (SIG_SETMASK, (sigset_t *)((*_sjbuf) + _SIGMASK), 0)\
d301 1
a301 1
               sigprocmask (SIG_SETMASK, 0, (sigset_t *) ((env) + _SIGMASK)),\
d305 1
a305 1
               sigprocmask (SIG_SETMASK, (sigset_t *) ((env) + _SIGMASK), 0):0),\
d310 6
@


1.33
log
@
2007-08-28  Hans Kester  <hans.kester@@ellips.nl>

        * configure.host: Added support for x86_64.
        * libc/include/machine/ieeefp.h: Define __IEEE_LITTLE_ENDIAN for x86_64.
        * libc/include/machine/setjmp.h: Define _JBTYPE and _JBLEN for x86_64.
        * libc/machine/x86_64/aclocal.m4: Generated.
        * libc/machine/x86_64/configure.in: New.
        * libc/machine/x86_64/configure: Generated.
        * libc/machine/x86_64/Makefile.am: New.
        * libc/machine/x86_64/Makefile.in: Generated.
        * libc/machine/x86_64/setjmp.S: New.
        * libc/machine/x86_64/memcpy.S: New.
        * libc/machine/x86_64/memset.S: New.
        * libc/machine/configure.in: Added support for x86_64.
        * libc/machine/configure: Regenerated.
@
text
@d226 5
@


1.32
log
@
2006-12-18  Kazunori Asayama <asayama@@sm.sony.co.jp>

        * libc/include/machine/setjmp.h: Replace vector with __vector.
@
text
@d70 5
@


1.31
log
@
2006-12-12  Joel Schopp <jschopp@@austin.ibm.com>

        * libc/include/machine/setjmp.h[__SPU__]: Redefine _JBTYPE for
        cell spu
@
text
@d213 1
a213 1
#define _JBTYPE vector signed int
@


1.30
log
@
2006-11-08  Jie Zhang  <jzhang918@@gmail.com>

        * configure.host: Add support for bfin.
        * libc/include/machine/ieeefp.h: Define __IEEE_LITTLE_ENDIAN for bfin.
        * libc/include/machine/setjmp.h: Define _JBLEN for bfin.
        * libc/machine/bfin/aclocal.m4: Generate.
        * libc/machine/bfin/configure.in: New.
        * libc/machine/bfin/configure: Generate.
        * libc/machine/bfin/Makefile.am: New.
        * libc/machine/bfin/Makefile.in: Generate.
        * libc/machine/bfin/setjmp.S: New.
        * libc/machine/bfin/longjmp.S: New.
        * libc/machine/configure.in: Add bfin support.
        * libc/machine/configure: Generate.
@
text
@d213 1
a213 1
#define _JBTYPE __attribute__ (( __vector_size__ (16) )) int
@


1.29
log
@
2006-10-11  Yang Tse  <yangsita@@gmail.com>

        * setjmp.h: Use __extension__ keyword for gcc's braced-groups.
@
text
@d24 4
@


1.28
log
@
2006-08-16  Joel Schopp  <jschopp@@austin.ibm.com>

        * configure.host: Add spu support.
        * libc/include/stdint.h: Ditto.
        * libc/include/machine/ieeefp.h: Ditto.
        * libc/include/machine/setjmp.h: Ditto.
        * libc/include/sys/config.h: Ditto.
        * libc/include/sys/types.h: Ditto.
        * libc/machine/spu/Makefile.am: New file.
        * libc/machine/spu/Makefile.in: Ditto.
        * libc/machine/spu/aclocal.m4: Ditto.
        * libc/machine/spu/configure: Ditto.
        * libc/machine/spu/configure.in: Ditto.
        * libc/machine/spu/memcpy.c: Ditto.
        * libc/machine/spu/setjmp.S: Ditto.
@
text
@d260 1
d269 1
@


1.27
log
@
2005-12-13  Nathan Sidwell  <nathan@@codesourcery.com>

        * libc/include/machine/ieeefp.h (__mt__): Renamed from __ms1__.
        * libc/include/machine/setjmp.h (__mt__): Likewise.
        * libc/machine/mt/setjmp.S: Rename ms1 reference to mt.
        * libc/machine/configure.in: Ditto.
@
text
@d207 5
@


1.27.6.1
log
@Apply the following mainline patches to cr-0x5f1 branch:

2006-10-11  Yang Tse  <yangsita@@gmail.com>

	* libc/include/machine/setjmp.h: Use __extension__ keyword for gcc's
	braced-groups.

2006-10-11  Corinna Vinschen  <corinna@@vinschen.de>

	* libc/reent/reeent.c (_reclaim_reent): Free _REENT_MP_RESULT.

2006-09-13  Patrick Mansfield <patmans@@us.ibm.com>

	* libc/include/math.h: Remove _CONST from _LIB_VERSION, as it is
	supposed to be writable.
	* libm/common/s_lib_ver.c: Ditto.

2006-09-06  Eric Blake  <ebb9@@byu.net>

	* libc/stdio/vfprintf.c (_vfprintf_r, get_arg): Add 'hh', 'j',
	't', and 'z' modifiers.

2006-08-22  Eric Blake  <ebb9@@byu.net>

	* libc/posix/popen.c (popen): Don't close output end of pipe in
	child if stdout was closed on entry.
	[HAVE_FCNTL]: In parent, mark file as close-on-exec, per POSIX.

2006-08-17  Brian Ford  <Brian.Ford@@FlightSafety.com>

	* libc/time/gmtime.c: Correct man page; clock is not a
	local time and no conversion occurs.
@
text
@a206 5
#ifdef __SPU__
#define _JBLEN 50 
#define _JBTYPE __attribute__ (( __vector_size__ (16) )) int
#endif

a254 1
            __extension__ \
a262 1
            __extension__ \
@


1.26
log
@
2005-08-10  DJ Delorie  <dj@@redhat.com>

        * configure.host: Add m32c support.
        * libc/include/machine/ieeefp.h: Likewise.
        * libc/include/machine/setjmp.h: Likewise.
        * libc/include/sys/config.h: Likewise.
        * libc/machine/m32c: New directory, Renesas R8C/M16C/M32C support.
        * libc/machine/m32c/aclocal.m4: New file.
        * libc/machine/m32c/configure: Ditto.
        * libc/machine/m32c/configure.in: Ditto.
        * libc/machine/m32c/Makefile.am: Ditto.
        * libc/machine/m32c/Makefile.in: Ditto.
        * libc/machine/m32c/setjmp.S: Ditto.
@
text
@d203 1
a203 1
#ifdef __ms1__
@


1.25
log
@        * configure.host: Added entry for ms1*.
        * libc/include/machine/ieeefp.h: Handle ms1.
        * libc/include/machine/setjmp.h (_JBLEN): Define for ms1.
        * libc/machine/ms1/aclocal.m4: New.
        * libc/machine/ms1/configure: New.
        * libc/machine/ms1/configure.in: New.
        * libc/machine/ms1/Makefile.am: New.
        * libc/machine/ms1/Makefile.in: New.
        * libc/machine/ms1/setjmp.S: New.
@
text
@d216 9
@


1.24
log
@	* libc/include/machine/setjmp.h (sigsetjmp): Use GCC extension to
	evaluate first parameter only once.
	(siglongjmp): Ditto.
@
text
@d203 4
@


1.23
log
@
2005-01-27  Hans-Peter Nilsson  <hp@@axis.com>

        * configure.host: Add support for cris-*-* and crisv32-*-*.
        * libc/include/machine/ieeefp.h: Ditto.
        * libc/include/machine/setjmp.h: Ditto.
        * libc/machine/cris/configure.in, libc/machine/cris/Makefile.am,
        libc/machine/cris/libcdtor.c, libc/machine/cris/setjmp.c,
        libc/machine/cris/memmove.c, libc/machine/cris/memcpy.c,
        libc/machine/cris/memset.c, libc/machine/cris/include/pthread.h,
        libc/machine/cris/sys/signal.h, libc/machine/cris/sys/fcntl.h,
        libc/machine/cris/sys/errno.h, libc/machine/cris/aclocal.m4,
        libc/machine/cris/configure, libc/machine/cris/Makefile.in: New
        files.
@
text
@d239 21
d268 2
@


1.22
log
@
2001-10-25  Ralf Corsepius <corsepiu@@faw.uni-ulm.de>

        * libc/include/machine/setjmp.h: Add AVR support.
        * libc/sys/rtems/crt0.S [__AVR__]: Add __stack.
@
text
@d208 4
@


1.21
log
@
2004-10-05  Tomer Levi  <Tomer.Levi@@nsc.com>

        * configure.host: Add support for crx.
        * libc/include/machine/ieeefp.h: Ditto.
        * libc/include/machine/setjmp.h: Ditto.
        * libc/machine/crx/Makefile.am: New file.
        * libc/machine/crx/configure.in: Ditto.
        * libc/machine/crx/setjmp.S: Ditto.
        * libc/machine/crx/getenv.c: Ditto.
        * libc/machine/crx/aclocal.m4: Generate.
        * libc/machine/crx/configure: Ditto.
        * libc/machine/crx/Makefile.in: Ditto.
        * libc/machine/crx/sys/asm.h: New file.
        * libc/machine/crx/sys/libh.h: Ditto.
        * libc/machine/crx/sys/syscall.h: Ditto.
@
text
@d12 4
@


1.20
log
@* libc/include/machine/setjmp.h [__H8300__] (_JBTYPE): Define,
instead of typedefing jmp_buf.
@
text
@d177 4
@


1.19
log
@2003-07-02  Richard Sandiford  <rsandifo@@redhat.com>
* libc/machine/h8300/Makefile.am (lib_a_SOURCES): Add h8sx_strcpy.S.
* libc/machine/h8300/defines.h (LEN): New macro.
* libc/machine/h8300/memcpy.S: Add h8sx version.
* libc/machine/h8300/memset.S: Likewise.
* libc/machine/h8300/strcmp.S: Likewise.
* libc/machine/h8300/setjmp.S: Use h8sx move instructions.
* libc/machine/h8300/h8sx_strcpy.S: New file.
2003-06-30  Richard Sandiford  <rsandifo@@redhat.com>
* libc/include/machine/ieeefp.h: Extend __H8300S__ handling to
__H8300SX__.
* libc/include/machine/setjmp.h: Likewise.
* libc/include/sys/config.h: Likewise.
* libc/machine/h8300/defines.h: Likewise.
* libc/machine/h8300/setjmp.S: Likewise.
* libc/machine/h8300/strcmp.S: Likewise.
* libc/sys/h8300hms/close.S: Likewise.
* libc/sys/h8300hms/fstat.S: Likewise.
* libc/sys/h8300hms/lseek.S: Likewise.
* libc/sys/h8300hms/read.S: Likewise.
* libc/sys/h8300hms/write.S: Likewise.
* libc/sys/h8300hms/crt0.S: Likewise.
* libc/machine/h8300/setarch.h: Use .h8300sx or .h8300sxn if
__H8300SX__ is defined.
* libc/sys/h8300hms/setarch.h: Likewise.
@
text
@d89 1
a89 1
typedef int jmp_buf[_JBLEN];
@


1.18
log
@
2004-04-08  Eric Christopher  <echristo@@redhat.com>

        * libc/include/machine/setjmp.h: Fix endif locations.
@
text
@d98 1
a98 1
#ifdef __H8300S__
@


1.17
log
@
2004-02-02  Joel Sherrill  <joel@@oarcorp.com>

        * configure.host: Add support for tic4x.
        * libc/include/machine/ieeefp.h: Ditto.
        * libc/include/machine/setjmp.h: Ditto.
        * libc/machine/tic4x/Makefile.am: New file.
        * libc/machine/tic4x/configure.in: Ditto.
        * libc/machine/tic4x/setjmp.S: Ditto.
        * libc/machine/tic4x/aclocal.m4: Generated.
        * libc/machine/tic4x/configure: Ditto.
        * libc/machine/tic4x/Makefile.in: Ditto.
@
text
@d206 1
a238 1
#endif
@


1.16
log
@2000-04-27  Alexandre Oliva  <aoliva@@cygnus.com>
* libc/include/machine/setjmp.h (_JBLEN, AM33/2.0): Set to 26.
* libc/machine/mn10300/setjmp.S (setjmp, longjmp): Save and
restore callee-saved FP registers.
@
text
@d152 7
@


1.15
log
@Commit iq2000 port
@
text
@d138 3
d143 1
@


1.14
log
@
2002-12-10  Joel Sherrill  <joel@@OARcorp.com>

	* libc/include/machine/setjmp.h: Make sure _JBLEN is defined
	for i386-rtems targets.
@
text
@d170 4
@


1.13
log
@	* libc/include/machine/setjmp.h: For mips, define _JBLEN based
	based on __mips_soft_float rather than __mips64.
	* libc/machine/mips/setjmp.S: Provide hard and soft float versions
	of both 32-bit and 64-bit code.
@
text
@d55 2
a56 2
#ifdef __unix__
# define _JBLEN	36
@


1.12
log
@
2002-07-24  Stephane Carrez  <stcarrez@@nerim.fr>

        * configure.host: Recognize m6811-elf and m6812-elf targets.
        * libc/include/machine/setjmp.h (_JBLEN): Define for 68hc11/68hc12.
        * libc/include/machine/ieeefp.h (__IEEE_BIG_ENDIAN): Define for 68HC11.
        (_DOUBLE_IS_32BITS): Define when compiling with -fshort-double.
        * libc/include/sys/config.h (INT_MAX, UINT_MAX): Define
        according to __INT_MAX__.
        (_POINTER_INT): Define to short.
        * libc/machine/m68hc11/Makefile.am: New file.
        * libc/machine/m68hc11/Makefile.in: New file.
        * libc/machine/m68hc11/configure.in: New file.
        * libc/machine/m68hc11/configure: New file.
        * libc/machine/m68hc11/aclocal.m4: New file.
        * libc/machine/m68hc11/setjmp.S: New file.
@
text
@a73 1
#define _JBLEN 23
d75 3
d79 1
a79 1
#define _JBLEN 11
@


1.11
log
@
2002-06-27  Benjamin Kosnik  <bkoz@@redhat.com>

        * libc/include/stdio.h: Untangle, add _BEGIN_STD_C and _END_STD_C.
        * libc/include/time.h: Same.
        * libc/include/string.h: Same.
        * libc/include/stdlib.h: Same.
        * libc/include/signal.h: Same.
        * libc/include/setjmp.h: Same.
        * libc/include/math.h: Same.
        * libc/include/locale.h: Same.
        * libc/include/ctype.h: Same.
        * libc/include/machine/setjmp.h: Same.
        * libc/include/_ansi.h (_BEGIN_STD_C): Add.
        (_END_STD_C): Add.
@
text
@d31 8
@


1.10
log
@2002-06-18  Dave Brolley  <brolley@@redhat.com>

	From Catherine Moore, Michael Meissner, Richard Sandiford:
	* libc/include/machine/setjmp.h (_JBLEN): Define for __frv__.
	(_JBTYPE): Ditto.
	* libc/include/sys/config.h (__IEEE_BIG_ENDIAN): Ditto.
	(__ATTRIBUTE_IMPURE_PTR__): Ditto.
	* libc/include/machine/ieeefp.h (__IEEE_BIG_ENDIAN): Ditto.
	* configure.host: Support frv-*-*.
	* libc/machine/frv/Makefile.am: New file.
	* libc/machine/frv/configure.in: New file.
	* libc/machine/frv/setjmp.S: New file.
@
text
@d1 3
d182 2
d187 4
d209 3
@


1.9
log
@	* Various formatting and whitespace changes.
@
text
@d148 5
@


1.8
log
@
2002-04-19  Jeff Johnston  <jjohnstn@@redhat.com>

        *  configure.host: Add support for powerpc-eabialtivec*.
        *  libc/include/malloc.h: Add include of <machine/malloc.h>.
        *  libc/include/stdlib.h: Add include of <machine/stdlib.h>.
        *  libc/include/machine/malloc.h: New file.
        *  libc/include/machine/stdlib.h: Ditto.
        *  libc/include/machine/setjmp.h: Add support for powerpc altivec.
        *  libc/machine/powerpc/Makefile.am: Add conditional objects and
        sources based on configuration.
        *  libc/machine/powerpc/Makefile.in: Regenerated.
        *  libc/machine/powerpc/configure: Ditto.
        *  libc/machine/powerpc/configure.in: Add check for
        powerpc-eabialtivec* in which case add in additional source files.
        *  libc/machine/powerpc/setjmp.S: Add altivec support.
        *  libc/machine/powerpc/vec_calloc.c: New file.
        *  libc/machine/powerpc/vec_free.c: Ditto.
        *  libc/machine/powerpc/vec_malloc.c: Ditto.
        *  libc/machine/powerpc/vec_mallocr.c: Ditto.
        *  libc/machine/powerpc/vec_realloc.c: Ditto.
        *  libc/machine/powerpc/machine/malloc.h: Ditto.
        *  libc/machine/powerpc/machine/stdlib.h: Ditto.
        *  libc/machine/powerpc/vfprintf.c: New file that is vfprintf.c
        with added altivec format specifiers.
        *  libc/machine/powerpc/vfscanf.c: New file that is vfscanf.c with
        added altivec format specifiers.
@
text
@a147 1

@


1.7
log
@Contribute sh64-elf.
2001-03-13  Alexandre Oliva  <aoliva@@redhat.com>
* configure.host (newlib_cflags) [sh*-*-*]: Enable long long
support in printf.
2001-01-29  Alexandre Oliva  <aoliva@@redhat.com>
* libc/machine/sh/setjmp.S [SH5]: Switch to SHmedia mode before
any labels.
2001-01-24  Alexandre Oliva  <aoliva@@redhat.com>
* libc/sys/sh/trap.S (___trap34) [SH5]: Don't trash r2.
2000-12-16  Alexandre Oliva  <aoliva@@redhat.com>
* libc/machine/sh/configure.in: Rework conditionals.
* libc/machine/sh/Makefile.am: Likewise.
* libc/machine/sh/configure, libc/machine/sh/Makefile.in: Rebuilt.
2000-12-01  Alexandre Oliva  <aoliva@@redhat.com>
* configure.host: Match `sh*'.
* libc/include/machine/setjmp.h: Define for SH5.
* libc/machine/sh/configure.in: Detect SH5.
* libc/machine/sh/configure: Rebuilt.
* libc/machine/sh/Makefile.am: Use only setjmp.S for SH5.
* libc/machine/sh/Makefile.in: Rebuilt.
* libc/machine/sh/asm.h: Adjust for SH5.
* libc/machine/sh/setjmp.S: Implement in SHmedia.
* libc/sys/sh/crt0.S: Likewise.
* libc/sys/sh/trap.S: Likewise.
@
text
@d109 3
d113 1
@


1.6
log
@In newlib/:
2001-12-22  Geoffrey Keating  <geoffk@@redhat.com>
	    Catherine Moore  <clm@@redhat.com>
	    Richard Henderson  <rth@@redhat.com>
	    Corinna Vinschen  <vinschen@@redhat.com>

	* configure.host: Add support for xstormy16.
	* libc/include/machine/ieeefp.h: Add support for xstormy16.
	* libc/include/machine/setjmp.h: Add support for xstormy16.
	* libc/include/sys/config.h: Add support for xstormy16.
	* libc/machine/xstormy16/Makefile.am: New file.
	* libc/machine/xstormy16/Makefile.in: New file.
	* libc/machine/xstormy16/aclocal.m4: New file.
	* libc/machine/xstormy16/configure: New file.
	* libc/machine/xstormy16/configure.in: New file.
	* libc/machine/xstormy16/setjmp.S: New file.

In libgloss/:
2001-12-22  Geoffrey Keating  <geoffk@@redhat.com>
	    Mark Salter  <msalter@@redhat.com>
	    Catherine Moore  <clm@@redhat.com>
	    Richard Henderson  <rth@@redhat.com>

	* configure.in: Add xstormy16.
	* libnosys/configure.in: Add xstormy16.
	* configure: Regenerated.
	* libnosys/configure: Regenerated.
	* xstormy16/Makefile.in: New file.
	* xstormy16/close.c: New file.
	* xstormy16/configure: New file.
	* xstormy16/configure.in: New file.
	* xstormy16/crt0.s: New file.
	* xstormy16/crt0_stub.s: New file.
	* xstormy16/crti.s: New file.
	* xstormy16/crtn.s: New file.
	* xstormy16/eva_app.c: New file.
	* xstormy16/eva_app.ld: New file.
	* xstormy16/eva_stub.ld: New file.
	* xstormy16/fstat.c: New file.
	* xstormy16/getpid.c: New file.
	* xstormy16/kill.c: New file.
	* xstormy16/lseek.c: New file.
	* xstormy16/open.c: New file.
	* xstormy16/sbrk.c: New file.
	* xstormy16/sim_high.ld: New file.
	* xstormy16/stat.c: New file.
	* xstormy16/syscalls.S: New file.
	* xstormy16/syscalls.m4: New file.
	* xstormy16/unlink.c: New file.
	* xstormy16/xstormy16_stub.c: New file.
@
text
@d96 4
d101 1
@


1.5
log
@
2001-11-12  Hans-Peter Nilsson  <hp@@bitrange.com>

        * libc/include/machine/ieeefp.h: Add support for mmix target.
        * libc/include/machine/setjmp.h: Ditto.
        * configure.host: Ditto.
        * libc/sys/mmixware/Makefile.am, libc/sys/mmixware/_exit.c,
        libc/sys/mmixware/access.c, libc/sys/mmixware/aclocal.m4,
        libc/sys/mmixware/chmod.c, libc/sys/mmixware/chown.c,
        libc/sys/mmixware/close.c, libc/sys/mmixware/configure.in,
        libc/sys/mmixware/creat.c, libc/sys/mmixware/crt0.c,
        libc/sys/mmixware/execv.c, libc/sys/mmixware/execve.c,
        libc/sys/mmixware/fork.c, libc/sys/mmixware/fstat.c,
        libc/sys/mmixware/getpid.c, libc/sys/mmixware/gettime.c,
        libc/sys/mmixware/isatty.c, libc/sys/mmixware/kill.c,
        libc/sys/mmixware/lseek.c, libc/sys/mmixware/open.c,
        libc/sys/mmixware/pipe.c, libc/sys/mmixware/read.c,
        libc/sys/mmixware/sbrk.c, libc/sys/mmixware/setjmp.S,
        libc/sys/mmixware/stat.c, libc/sys/mmixware/sys/syscall.h,
        libc/sys/mmixware/time.c, libc/sys/mmixware/times.c,
        libc/sys/mmixware/unlink.c, libc/sys/mmixware/utime.c,
        libc/sys/mmixware/wait.c, libc/sys/mmixware/write.c: New files.
        * libc/sys/mmixware/configure, libc/sys/mmixware/Makefile.in,
        libc/sys/mmixware/aclocal.m4: Generate.
@
text
@d154 5
@


1.4
log
@* libc/include/machine/setjmp.h: Protect sigsetjmp/siglongjmp macro arguments.
* libc/include/sys/errno.h: Declare sys_errlist and sys_nerr, under Cygwin.
@
text
@d148 6
@


1.3
log
@
2001-03-07  Richard Sandiford  <rsandifo@@redhat.com>

        * (libc/include/machine/setjmp.h): Use 23 DI-mode ints for a
        jmpbuf on MIPS64 targets.
        * (libc/machine/mips/setjmp.S): Add MIPS64 version.
@
text
@d164 6
a169 2
#define sigsetjmp(env, savemask) (env[_SAVEMASK] = savemask,\
               sigprocmask (SIG_SETMASK, 0, (sigset_t *) &env[_SIGMASK]),\
d172 2
a173 2
#define siglongjmp(env, val) (((env[_SAVEMASK])?\
               sigprocmask (SIG_SETMASK, (sigset_t *) &env[_SIGMASK], 0):0),\
@


1.2
log
@* libc/include/ctype.h: __CYGWIN32__ -> __CYGWIN__
* libc/include/malloc.h: Ditto.
* libc/include/process.h: Ditto.
* libc/include/stdio.h: Ditto.
* libc/include/stdlib.h: Ditto.
* libc/include/time.h: Ditto.
* libc/include/machine/setjmp.h: Ditto.
* libc/include/sys/errno.h: Ditto.
* libc/include/sys/signal.h: Ditto.
* libc/include/sys/stat.h: Ditto.
* libc/include/sys/time.h: Ditto.
* libc/include/sys/unistd.h: Ditto.
* libc/include/string.h: Ditto.  strsignal should return a const char *.
@
text
@d62 4
d67 1
@


1.1
log
@Initial revision
@
text
@d150 1
a150 1
#if defined(__CYGWIN32__) || defined(__rtems__)
d167 1
a167 1
#endif /* __CYGWIN32__ or __rtems__ */
@


1.1.1.1
log
@import newlib-2000-02-17 snapshot
@
text
@@
