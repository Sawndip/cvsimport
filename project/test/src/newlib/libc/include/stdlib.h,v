head	1.55;
access;
symbols
	cygwin-1_7_35-release:1.55
	cygwin-1_7_34-release:1.55
	newlib-2_2_0:1.55.0.2
	cygwin-1_7_33-release:1.52
	cygwin-1_7_32-release:1.51
	cygwin-1_7_31-release:1.50
	cygwin-1_7_30-release:1.50
	cygwin-1_7_29-release:1.50
	cygwin-1_7_28-release:1.49
	newlib-2_1_0:1.49
	cygwin-1_7_27-release:1.48
	cygwin-1_7_26-release:1.48
	cygwin-1_7_25-release:1.44
	cygwin-1_7_24-release:1.44
	cygwin-1_7_23-release:1.44
	cygwin-1_7_22-release:1.44
	cygwin-1_7_21-release:1.44
	cygwin-1_7_20-release:1.44
	cygwin-1_7_19-release:1.44
	cygwin-64bit-postmerge:1.44
	cygwin-64bit-premerge-branch:1.44.0.2
	cygwin-64bit-premerge:1.44
	cygwin-1_7_18-release:1.44
	newlib-2_0_0:1.42
	cygwin-1_7_17-release:1.40
	cygwin-64bit-branch:1.40.0.2
	cygwin-1_7_16-release:1.40
	cygwin-1_7_15-release:1.40
	cygwin-1_7_14_2-release:1.40
	cygwin-1_7_14-release:1.40
	cygwin-1_7_12-release:1.40
	cygwin-1_7_11-release:1.40
	cygwin-1_7_10-release:1.40
	newlib-1_20_0:1.40
	cygwin-1_7_9-release:1.40
	cygwin-1_7_8-release:1.40
	newlib-1_19_0:1.40
	cygwin-1_7_7-release:1.40
	cygwin-1_7_5-release:1.38
	cygwin-1_7_4-release:1.38
	cygwin-1_7_3-release:1.38
	cygwin-1_7_2-release:1.38
	newlib-1_18_0:1.37
	cygwin-1_7_1-release:1.36
	newlib-1_17_0-arc:1.28.0.2
	binutils-arc-20080908-branch:1.26.0.8
	binutils-arc-20080908-branchpoint:1.26
	newlib-1_17_0:1.28
	newlib-1_16_0:1.26
	newlib-1_15_0:1.26
	newlib-csl-coldfire-4_1-32:1.26
	newlib-csl-sourcerygxx-4_1-32:1.26
	newlib-csl-innovasic-fido-3_4_4-33:1.26
	newlib-csl-coldfire-4_1-30:1.26
	newlib-csl-sourcerygxx-4_1-30:1.26
	newlib-csl-coldfire-4_1-28:1.26
	newlib-csl-sourcerygxx-4_1-28:1.26
	newlib-csl-arm-2006q3-27:1.26
	newlib-csl-sourcerygxx-4_1-27:1.26
	newlib-csl-arm-2006q3-26:1.26
	newlib-csl-sourcerygxx-4_1-26:1.26
	newlib-csl-sourcerygxx-4_1-24:1.26
	newlib-csl-sourcerygxx-4_1-23:1.26
	newlib-csl-sourcerygxx-4_1-21:1.26
	newlib-csl-arm-2006q3-21:1.26
	newlib-csl-arm-2006q3-19:1.26
	newlib-csl-sourcerygxx-4_1-19:1.26
	newlib-csl-sourcerygxx-4_1-18:1.26
	newlib-csl-sourcerygxx-3_4_4-25:1.26
	newlib-csl-sourcerygxx-4_1-17:1.26
	cr-0x5f1:1.26.0.6
	newlib-csl-sourcerygxx-4_1-14:1.26
	newlib-csl-sourcerygxx-4_1-13:1.26
	newlib-csl-sourcerygxx-4_1-12:1.26
	newlib-csl-sourcerygxx-4_1-9:1.26
	newlib-csl-sourcerygxx-4_1-8:1.26
	newlib-csl-sourcerygxx-4_1-7:1.26
	newlib-csl-arm-2006q1-6:1.26
	newlib-csl-sourcerygxx-4_1-6:1.26
	newlib-csl-sourcerygxx-4_1-5:1.26
	newlib-csl-sourcerygxx-4_1-4:1.26
	newlib-autotools-branch:1.26.0.4
	newlib-csl-20060320-branch:1.26.0.2
	newlib-csl-20060320-branchpoint:1.26
	newlib-1_14_0:1.26
	newlib-csl-arm-2005-q1b:1.25
	newlib-csl-arm-2005-q1a:1.25
	newlib-1_13_0:1.25
	csl-arm-2004-q3:1.24
	csl-arm-2004-q1a:1.24
	csl-arm-2004-q1:1.24
	newlib-1_12_0:1.24
	csl-arm-2003-q4:1.24
	w32api-2_2:1.20
	mingw-runtime-2_4:1.20
	newlib-1_11_0:1.20
	cygnus_cvs_20020108_pre:1.12
	newlib-1_10_0:1.12
	newlib-1_9_0:1.7
	newlib-2000-02-17:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.55
date	2014.12.16.10.55.16;	author corinna;	state Exp;
branches;
next	1.54;

1.54
date	2014.12.15.12.58.19;	author corinna;	state Exp;
branches;
next	1.53;

1.53
date	2014.12.05.16.21.04;	author yselkowitz;	state Exp;
branches;
next	1.52;

1.52
date	2014.10.10.14.43.19;	author corinna;	state Exp;
branches;
next	1.51;

1.51
date	2014.08.01.15.44.50;	author ericb;	state Exp;
branches;
next	1.50;

1.50
date	2014.03.07.20.06.53;	author corinna;	state Exp;
branches;
next	1.49;

1.49
date	2013.12.23.19.21.07;	author jjohnstn;	state Exp;
branches;
next	1.48;

1.48
date	2013.11.20.09.46.39;	author corinna;	state Exp;
branches;
next	1.47;

1.47
date	2013.11.19.17.32.23;	author joel;	state Exp;
branches;
next	1.46;

1.46
date	2013.11.18.17.26.51;	author joel;	state Exp;
branches;
next	1.45;

1.45
date	2013.09.08.07.11.33;	author yselkowitz;	state Exp;
branches;
next	1.44;

1.44
date	2013.04.11.13.01.08;	author corinna;	state Exp;
branches;
next	1.43;

1.43
date	2013.04.11.10.23.05;	author corinna;	state Exp;
branches;
next	1.42;

1.42
date	2012.11.01.11.51.11;	author corinna;	state Exp;
branches;
next	1.41;

1.41
date	2012.10.22.15.15.21;	author corinna;	state Exp;
branches;
next	1.40;

1.40
date	2010.07.19.18.21.11;	author ericb;	state Exp;
branches
	1.40.2.1;
next	1.39;

1.39
date	2010.04.28.09.59.36;	author corinna;	state Exp;
branches;
next	1.38;

1.38
date	2009.12.22.13.07.24;	author ericb;	state Exp;
branches;
next	1.37;

1.37
date	2009.12.17.19.43.43;	author jjohnstn;	state Exp;
branches;
next	1.36;

1.36
date	2009.09.22.21.49.20;	author jjohnstn;	state Exp;
branches;
next	1.35;

1.35
date	2009.07.03.12.03.25;	author ericb;	state Exp;
branches;
next	1.34;

1.34
date	2009.04.24.22.49.55;	author jjohnstn;	state Exp;
branches;
next	1.33;

1.33
date	2009.04.21.18.24.59;	author jjohnstn;	state Exp;
branches;
next	1.32;

1.32
date	2009.04.20.18.06.14;	author jjohnstn;	state Exp;
branches;
next	1.31;

1.31
date	2009.04.16.18.24.34;	author jjohnstn;	state Exp;
branches;
next	1.30;

1.30
date	2009.03.14.12.17.19;	author corinna;	state Exp;
branches;
next	1.29;

1.29
date	2009.03.14.12.14.08;	author corinna;	state Exp;
branches;
next	1.28;

1.28
date	2008.11.19.20.55.52;	author jjohnstn;	state Exp;
branches;
next	1.27;

1.27
date	2008.09.25.01.23.08;	author jjohnstn;	state Exp;
branches;
next	1.26;

1.26
date	2005.12.05.22.15.21;	author cgf;	state Exp;
branches;
next	1.25;

1.25
date	2004.11.24.22.34.15;	author jjohnstn;	state Exp;
branches;
next	1.24;

1.24
date	2003.11.27.20.54.12;	author jjohnstn;	state Exp;
branches;
next	1.23;

1.23
date	2003.11.27.20.15.47;	author jjohnstn;	state Exp;
branches;
next	1.22;

1.22
date	2003.11.27.19.47.18;	author jjohnstn;	state Exp;
branches;
next	1.21;

1.21
date	2003.11.17.17.30.30;	author corinna;	state Exp;
branches;
next	1.20;

1.20
date	2002.12.06.18.58.50;	author jjohnstn;	state Exp;
branches;
next	1.19;

1.19
date	2002.08.26.04.33.46;	author cgf;	state Exp;
branches;
next	1.18;

1.18
date	2002.08.23.01.56.02;	author fitzsim;	state Exp;
branches;
next	1.17;

1.17
date	2002.06.27.23.58.38;	author jjohnstn;	state Exp;
branches;
next	1.16;

1.16
date	2002.06.13.23.24.03;	author jjohnstn;	state Exp;
branches;
next	1.15;

1.15
date	2002.05.15.22.58.08;	author jjohnstn;	state Exp;
branches;
next	1.14;

1.14
date	2002.05.06.20.50.32;	author jjohnstn;	state Exp;
branches;
next	1.13;

1.13
date	2002.04.19.19.16.09;	author jjohnstn;	state Exp;
branches;
next	1.12;

1.12
date	2001.11.14.10.25.34;	author corinna;	state Exp;
branches;
next	1.11;

1.11
date	2001.10.01.18.05.09;	author jjohnstn;	state Exp;
branches;
next	1.10;

1.10
date	2001.04.27.20.43.42;	author jjohnstn;	state Exp;
branches;
next	1.9;

1.9
date	2001.04.20.22.50.51;	author jjohnstn;	state Exp;
branches;
next	1.8;

1.8
date	2001.02.15.02.04.53;	author jjohnstn;	state Exp;
branches;
next	1.7;

1.7
date	2000.12.06.11.02.28;	author corinna;	state Exp;
branches;
next	1.6;

1.6
date	2000.10.30.01.08.58;	author cgf;	state Exp;
branches;
next	1.5;

1.5
date	2000.09.06.20.46.27;	author cgf;	state Exp;
branches;
next	1.4;

1.4
date	2000.08.01.20.51.51;	author dj;	state Exp;
branches;
next	1.3;

1.3
date	2000.06.09.01.13.36;	author ranjith;	state Exp;
branches;
next	1.2;

1.2
date	2000.05.30.17.18.05;	author cgf;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.39.46;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.40.2.1
date	2012.10.26.09.27.35;	author corinna;	state Exp;
branches;
next	1.40.2.2;

1.40.2.2
date	2012.11.01.11.56.25;	author corinna;	state Exp;
branches;
next	1.40.2.3;

1.40.2.3
date	2013.04.22.10.34.02;	author corinna;	state Exp;
branches;
next	;

1.1.1.1
date	2000.02.17.19.39.46;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.55
log
@	* libc/include/stdlib.h (__itoa):  Declare prototype.
	(__utoa): Ditto.
	(itoa): Ditto, non-strict-ANSI only.
	(utoa): Ditto.
	* libc/stdlib/Makefile.am: Add itoa.c and utoa.c.
	* libc/stdlib/Makefile.in: Regenerate.
	* libc/stdlib/itoa.c: New file.
	* libc/stdlib/utoa.c: New file.
@
text
@/*
 * stdlib.h
 *
 * Definitions for common types, variables, and functions.
 */

#ifndef _STDLIB_H_
#define _STDLIB_H_

#include <machine/ieeefp.h>
#include "_ansi.h"

#define __need_size_t
#define __need_wchar_t
#define __need_NULL
#include <stddef.h>

#include <sys/reent.h>
#include <sys/cdefs.h>
#include <machine/stdlib.h>
#ifndef __STRICT_ANSI__
#include <alloca.h>
#endif

#ifdef __CYGWIN__
#include <cygwin/stdlib.h>
#endif

_BEGIN_STD_C

typedef struct 
{
  int quot; /* quotient */
  int rem; /* remainder */
} div_t;

typedef struct 
{
  long quot; /* quotient */
  long rem; /* remainder */
} ldiv_t;

#if !defined(__STRICT_ANSI__) || \
  (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || \
  (defined(__cplusplus) && __cplusplus >= 201103L)
typedef struct
{
  long long int quot; /* quotient */
  long long int rem; /* remainder */
} lldiv_t;
#endif

#ifndef __compar_fn_t_defined
#define __compar_fn_t_defined
typedef int (*__compar_fn_t) (const _PTR, const _PTR);
#endif

#define EXIT_FAILURE 1
#define EXIT_SUCCESS 0

#define RAND_MAX __RAND_MAX

int	_EXFUN(__locale_mb_cur_max,(_VOID));

#define MB_CUR_MAX __locale_mb_cur_max()

_VOID	_EXFUN(abort,(_VOID) _ATTRIBUTE ((__noreturn__)));
int	_EXFUN(abs,(int));
int	_EXFUN(atexit,(_VOID (*__func)(_VOID)));
double	_EXFUN(atof,(const char *__nptr));
#ifndef __STRICT_ANSI__
float	_EXFUN(atoff,(const char *__nptr));
#endif
int	_EXFUN(atoi,(const char *__nptr));
int	_EXFUN(_atoi_r,(struct _reent *, const char *__nptr));
long	_EXFUN(atol,(const char *__nptr));
long	_EXFUN(_atol_r,(struct _reent *, const char *__nptr));
_PTR	_EXFUN(bsearch,(const _PTR __key,
		       const _PTR __base,
		       size_t __nmemb,
		       size_t __size,
		       __compar_fn_t _compar));
_PTR	_EXFUN_NOTHROW(calloc,(size_t __nmemb, size_t __size));
div_t	_EXFUN(div,(int __numer, int __denom));
_VOID	_EXFUN(exit,(int __status) _ATTRIBUTE ((__noreturn__)));
_VOID	_EXFUN_NOTHROW(free,(_PTR));
char *  _EXFUN(getenv,(const char *__string));
char *	_EXFUN(_getenv_r,(struct _reent *, const char *__string));
char *	_EXFUN(_findenv,(_CONST char *, int *));
char *	_EXFUN(_findenv_r,(struct _reent *, _CONST char *, int *));
#ifndef __STRICT_ANSI__
extern char *suboptarg;			/* getsubopt(3) external variable */
int	_EXFUN(getsubopt,(char **, char * const *, char **));
#endif
long	_EXFUN(labs,(long));
ldiv_t	_EXFUN(ldiv,(long __numer, long __denom));
_PTR	_EXFUN_NOTHROW(malloc,(size_t __size));
int	_EXFUN(mblen,(const char *, size_t));
int	_EXFUN(_mblen_r,(struct _reent *, const char *, size_t, _mbstate_t *));
int	_EXFUN(mbtowc,(wchar_t *__restrict, const char *__restrict, size_t));
int	_EXFUN(_mbtowc_r,(struct _reent *, wchar_t *__restrict, const char *__restrict, size_t, _mbstate_t *));
int	_EXFUN(wctomb,(char *, wchar_t));
int	_EXFUN(_wctomb_r,(struct _reent *, char *, wchar_t, _mbstate_t *));
size_t	_EXFUN(mbstowcs,(wchar_t *__restrict, const char *__restrict, size_t));
size_t	_EXFUN(_mbstowcs_r,(struct _reent *, wchar_t *__restrict, const char *__restrict, size_t, _mbstate_t *));
size_t	_EXFUN(wcstombs,(char *__restrict, const wchar_t *__restrict, size_t));
size_t	_EXFUN(_wcstombs_r,(struct _reent *, char *__restrict, const wchar_t *__restrict, size_t, _mbstate_t *));
#ifndef __STRICT_ANSI__
#ifndef _REENT_ONLY
char *	_EXFUN(mkdtemp,(char *));
int	_EXFUN(mkostemp,(char *, int));
int	_EXFUN(mkostemps,(char *, int, int));
int	_EXFUN(mkstemp,(char *));
int	_EXFUN(mkstemps,(char *, int));
char *	_EXFUN(mktemp,(char *) _ATTRIBUTE ((__warning__ ("the use of `mktemp' is dangerous; use `mkstemp' instead"))));
#endif
char *	_EXFUN(_mkdtemp_r, (struct _reent *, char *));
int	_EXFUN(_mkostemp_r, (struct _reent *, char *, int));
int	_EXFUN(_mkostemps_r, (struct _reent *, char *, int, int));
int	_EXFUN(_mkstemp_r, (struct _reent *, char *));
int	_EXFUN(_mkstemps_r, (struct _reent *, char *, int));
char *	_EXFUN(_mktemp_r, (struct _reent *, char *) _ATTRIBUTE ((__warning__ ("the use of `mktemp' is dangerous; use `mkstemp' instead"))));
#endif
_VOID	_EXFUN(qsort,(_PTR __base, size_t __nmemb, size_t __size, __compar_fn_t _compar));
int	_EXFUN(rand,(_VOID));
_PTR	_EXFUN_NOTHROW(realloc,(_PTR __r, size_t __size));
#ifndef __STRICT_ANSI__
_PTR	_EXFUN(reallocf,(_PTR __r, size_t __size));
char *	_EXFUN(realpath, (const char *__restrict path, char *__restrict resolved_path));
#endif
_VOID	_EXFUN(srand,(unsigned __seed));
double	_EXFUN(strtod,(const char *__restrict __n, char **__restrict __end_PTR));
double	_EXFUN(_strtod_r,(struct _reent *,const char *__restrict __n, char **__restrict __end_PTR));
#if !defined(__STRICT_ANSI__) || \
  (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || \
  (defined(__cplusplus) && __cplusplus >= 201103L)
float	_EXFUN(strtof,(const char *__restrict __n, char **__restrict __end_PTR));
#endif
#ifndef __STRICT_ANSI__
/* the following strtodf interface is deprecated...use strtof instead */
# ifndef strtodf 
#  define strtodf strtof
# endif
#endif
long	_EXFUN(strtol,(const char *__restrict __n, char **__restrict __end_PTR, int __base));
long	_EXFUN(_strtol_r,(struct _reent *,const char *__restrict __n, char **__restrict __end_PTR, int __base));
unsigned long _EXFUN(strtoul,(const char *__restrict __n, char **__restrict __end_PTR, int __base));
unsigned long _EXFUN(_strtoul_r,(struct _reent *,const char *__restrict __n, char **__restrict __end_PTR, int __base));

int	_EXFUN(system,(const char *__string));

#ifndef __STRICT_ANSI__
long    _EXFUN(a64l,(const char *__input));
char *  _EXFUN(l64a,(long __input));
char *  _EXFUN(_l64a_r,(struct _reent *,long __input));
int	_EXFUN(on_exit,(_VOID (*__func)(int, _PTR),_PTR __arg));
#endif /* ! __STRICT_ANSI__ */
#if !defined(__STRICT_ANSI__) || \
  (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || \
  (defined(__cplusplus) && __cplusplus >= 201103L)
_VOID	_EXFUN(_Exit,(int __status) _ATTRIBUTE ((__noreturn__)));
#endif
#ifndef __STRICT_ANSI__
int	_EXFUN(putenv,(char *__string));
int	_EXFUN(_putenv_r,(struct _reent *, char *__string));
_PTR	_EXFUN(_reallocf_r,(struct _reent *, _PTR, size_t));
int	_EXFUN(setenv,(const char *__string, const char *__value, int __overwrite));
int	_EXFUN(_setenv_r,(struct _reent *, const char *__string, const char *__value, int __overwrite));

char *	_EXFUN(gcvt,(double,int,char *));
char *	_EXFUN(gcvtf,(float,int,char *));
char *	_EXFUN(fcvt,(double,int,int *,int *));
char *	_EXFUN(fcvtf,(float,int,int *,int *));
char *	_EXFUN(ecvt,(double,int,int *,int *));
char *	_EXFUN(ecvtbuf,(double, int, int*, int*, char *));
char *	_EXFUN(fcvtbuf,(double, int, int*, int*, char *));
char *	_EXFUN(ecvtf,(float,int,int *,int *));
char *	_EXFUN(dtoa,(double, int, int, int *, int*, char**));
#endif
char *	_EXFUN(__itoa,(int, char *, int));
char *	_EXFUN(__utoa,(unsigned, char *, int));
#ifndef __STRICT_ANSI__
char *	_EXFUN(itoa,(int, char *, int));
char *	_EXFUN(utoa,(unsigned, char *, int));
int	_EXFUN(rand_r,(unsigned *__seed));

double _EXFUN(drand48,(_VOID));
double _EXFUN(_drand48_r,(struct _reent *));
double _EXFUN(erand48,(unsigned short [3]));
double _EXFUN(_erand48_r,(struct _reent *, unsigned short [3]));
long   _EXFUN(jrand48,(unsigned short [3]));
long   _EXFUN(_jrand48_r,(struct _reent *, unsigned short [3]));
_VOID  _EXFUN(lcong48,(unsigned short [7]));
_VOID  _EXFUN(_lcong48_r,(struct _reent *, unsigned short [7]));
long   _EXFUN(lrand48,(_VOID));
long   _EXFUN(_lrand48_r,(struct _reent *));
long   _EXFUN(mrand48,(_VOID));
long   _EXFUN(_mrand48_r,(struct _reent *));
long   _EXFUN(nrand48,(unsigned short [3]));
long   _EXFUN(_nrand48_r,(struct _reent *, unsigned short [3]));
unsigned short *
       _EXFUN(seed48,(unsigned short [3]));
unsigned short *
       _EXFUN(_seed48_r,(struct _reent *, unsigned short [3]));
_VOID  _EXFUN(srand48,(long));
_VOID  _EXFUN(_srand48_r,(struct _reent *, long));
#endif /* ! __STRICT_ANSI__ */
#if !defined(__STRICT_ANSI__) || \
  (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || \
  (defined(__cplusplus) && __cplusplus >= 201103L)
long long _EXFUN(atoll,(const char *__nptr));
#endif
#ifndef __STRICT_ANSI__
long long _EXFUN(_atoll_r,(struct _reent *, const char *__nptr));
#endif /* ! __STRICT_ANSI__ */
#if !defined(__STRICT_ANSI__) || \
  (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || \
  (defined(__cplusplus) && __cplusplus >= 201103L)
long long _EXFUN(llabs,(long long));
lldiv_t	_EXFUN(lldiv,(long long __numer, long long __denom));
long long _EXFUN(strtoll,(const char *__restrict __n, char **__restrict __end_PTR, int __base));
#endif
#ifndef __STRICT_ANSI__
long long _EXFUN(_strtoll_r,(struct _reent *, const char *__restrict __n, char **__restrict __end_PTR, int __base));
#endif /* ! __STRICT_ANSI__ */
#if !defined(__STRICT_ANSI__) || \
  (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || \
  (defined(__cplusplus) && __cplusplus >= 201103L)
unsigned long long _EXFUN(strtoull,(const char *__restrict __n, char **__restrict __end_PTR, int __base));
#endif
#ifndef __STRICT_ANSI__
unsigned long long _EXFUN(_strtoull_r,(struct _reent *, const char *__restrict __n, char **__restrict __end_PTR, int __base));

#ifndef __CYGWIN__
_VOID	_EXFUN(cfree,(_PTR));
int	_EXFUN(unsetenv,(const char *__string));
int	_EXFUN(_unsetenv_r,(struct _reent *, const char *__string));
#endif

#ifdef __rtems__
int _EXFUN(posix_memalign,(void **, size_t, size_t));
#endif

#endif /* ! __STRICT_ANSI__ */

char *	_EXFUN(_dtoa_r,(struct _reent *, double, int, int, int *, int*, char**));
#ifndef __CYGWIN__
_PTR	_EXFUN_NOTHROW(_malloc_r,(struct _reent *, size_t));
_PTR	_EXFUN_NOTHROW(_calloc_r,(struct _reent *, size_t, size_t));
_VOID	_EXFUN_NOTHROW(_free_r,(struct _reent *, _PTR));
_PTR	_EXFUN_NOTHROW(_realloc_r,(struct _reent *, _PTR, size_t));
_VOID	_EXFUN(_mstats_r,(struct _reent *, char *));
#endif
int	_EXFUN(_system_r,(struct _reent *, const char *));

_VOID	_EXFUN(__eprintf,(const char *, const char *, unsigned int, const char *));

/* There are two common qsort_r variants.  If you request
   _BSD_SOURCE, you get the BSD version; otherwise you get the GNU
   version.  We want that #undef qsort_r will still let you
   invoke the underlying function, but that requires gcc support. */
#ifdef _BSD_SOURCE
# ifdef __GNUC__
_VOID	_EXFUN(qsort_r,(_PTR __base, size_t __nmemb, size_t __size, _PTR __thunk, int (*_compar)(_PTR, const _PTR, const _PTR)))
             __asm__ (__ASMNAME ("__bsd_qsort_r"));
# else
_VOID	_EXFUN(__bsd_qsort_r,(_PTR __base, size_t __nmemb, size_t __size, _PTR __thunk, int (*_compar)(_PTR, const _PTR, const _PTR)));
#  define qsort_r __bsd_qsort_r
# endif
#elif __GNU_VISIBLE
_VOID	_EXFUN(qsort_r,(_PTR __base, size_t __nmemb, size_t __size, int (*_compar)(const _PTR, const _PTR, _PTR), _PTR __thunk));
#endif

/* On platforms where long double equals double.  */
#ifdef _HAVE_LONG_DOUBLE
#if !defined(__STRICT_ANSI__) || \
  (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || \
  (defined(__cplusplus) && __cplusplus >= 201103L)
extern long double strtold (const char *__restrict, char **__restrict);
#endif
#endif /* _HAVE_LONG_DOUBLE */

_END_STD_C

#endif /* _STDLIB_H_ */
@


1.54
log
@	* libc/include/stdlib.h: Include sys/cdefs.h to avoid undefined
	__ASMNAME.
@
text
@d179 6
@


1.53
log
@* libc/include/stdlib.h (__bsd_qsort_r): Declare.
(qsort_r): Declare.
* libc/search/Makefile.am (ELIX_2_SOURCES): Rename from ELIX_SOURCES.
(ELIX_4_SOURCES): Define.  Add bsd_qsort_r.c and qsort_r.c.
(libsearch_la_SOURCES): Adapt accordingly.
(lib_a_SOURCES): Adapt accordingly.
(CHEWOUT_FILES): Add qsort_r.def.
* libc/search/Makefile.in: Regenerate.
* libc/search/bsd_qsort_r.c: New file.
* libc/search/qsort.c: Update from FreeBSD HEAD. Adapt for both BSD
and GNU qsort_r flavors.
* libc/search/qsort_r.c: New file.
@
text
@d19 1
@


1.52
log
@	* libc/include/_ansi.h: _LONG_LONG_TYPE definition removed.
	* libc/include/math.h: _LONG_LONG_TYPE replaced by "long long".
	Guards for C99 and C++11 functions fixed.
	* libc/include/stdlib.h: Guards for C99 and C++11 functions fixed.
@
text
@d251 16
@


1.51
log
@headers: properly decorate attributes

Found by:
find -name '*.h' |xargs grep -i 'attribute.*(([a-z]'

For an example of the type of bugs this causes, try compiling this valid
C11 program (it's valid because 'noreturn' is reserved for use in the
user namespace unless you include <stdnoreturn.h>):

$ cat foo.c
#define noreturn __attribute__((noreturn))
#include <stdlib.h>
$ gcc -c -o foo.o -Wall foo.c
In file included from /usr/include/stdlib.h:11:0,
                 from foo.c:2:
foo.c:1:18: error: expected ')' before '__attribute__'
 #define noreturn __attribute__((noreturn))
                  ^
/usr/include/stdlib.h:66:28: error: expected ',' or ';' before ')' token
 _VOID _EXFUN(abort,(_VOID) _ATTRIBUTE ((noreturn)));
                            ^

* libc/machine/spu/spu_timer_internal.h: Decorate attribute names
with __, for namespace safety.
* libc/machine/xscale/machine/profile.h: Likewise.
* libc/include/stdlib.h: Likewise.
* libc/include/_ansi.h: Likewise.
* libc/include/sys/unistd.h: Likewise.
* libc/sys/linux/linuxthreads/libc-symbols.h: Likewise.
* libc/sys/linux/linuxthreads/internals.h: Likewise.
* libc/sys/linux/machine/i386/weakalias.h: Likewise.
* libc/sys/linux/machine/i386/dl-procinfo.h: Likewise.
* libc/sys/linux/machine/i386/dl-machine.h: Likewise.
* libc/sys/linux/libc-symbols.h: Likewise.
* libc/sys/linux/iconv/gconv_charset.h: Likewise.
* libc/sys/linux/include/resolv.h: Likewise.
* libc/sys/linux/sys/unistd.h: Likewise.
* libc/sys/linux/dl/atomicity.h: Likewise.
* libc/sys/linux/dl/dynamic-link.h: Likewise.
* libc/sys/linux/dl/ldsodefs.h: Likewise.
@
text
@d133 3
a135 1
#if !defined(__STRICT_ANSI__) || (__STDC_VERSION__ >= 199901L) || (__cplusplus >= 201103L)
d156 4
d161 2
d200 4
d205 2
d208 4
a213 2
#endif /* ! __STRICT_ANSI__ */
#if !defined(__STRICT_ANSI__) || (__STDC_VERSION__ >= 199901L) || (__cplusplus >= 201103L)
d219 3
a221 1
#if !defined(__STRICT_ANSI__) || (__STDC_VERSION__ >= 199901L) || (__cplusplus >= 201103L)
d253 3
a255 1
#if !defined(__STRICT_ANSI__) || (__STDC_VERSION__ >= 199901L) || (__cplusplus >= 201103L)
@


1.50
log
@	* libc/include/stdlib.h (strtold): Define if _HAVE_LONG_DOUBLE is
	defined.
	* libc/stdlib/strtold.c (strtold): Ditto.  Call strtod on systems
	with long double == double, _strtold otherwise.
@
text
@d66 1
a66 1
_VOID	_EXFUN(abort,(_VOID) _ATTRIBUTE ((noreturn)));
d84 1
a84 1
_VOID	_EXFUN(exit,(int __status) _ATTRIBUTE ((noreturn)));
d154 1
a154 1
_VOID	_EXFUN(_Exit,(int __status) _ATTRIBUTE ((noreturn)));
@


1.49
log
@
2013-12-22  JF Bastien  <jfb@@chromium.org>

        * libc/include/limits.h: Define LLONG_MIN, LLONG_MAX and ULLONG_MAX
        for C++11 too.
        * libc/include/stdlib.h: Define struct lldiv_t, _Exit, atoll, llabs
        and lldiv for C99 and C++11.  Move wcstold to wchar.h.
        * libc/include/wchar.h: Define WCHAR_MIN and WCHAR_MAX according to
        __WCHAR_UNSIGNED__ if it is provided, and correct the limit when
        unsigned (to 32 all-1 bits, not 31).  Define FILE as in stdio.h.
        Move wcstold from stdlib.h here.
@
text
@d234 1
a234 1
#ifdef _LDBL_EQ_DBL
d238 1
a238 1
#endif /* _LDBL_EQ_DBL */
@


1.48
log
@	* libc/include/stdlib.h: Declare realpath only if !__STRICT_ANSI__.
@
text
@d42 3
a44 1
#ifndef __STRICT_ANSI__
a237 1
extern long double wcstold (const wchar_t *, wchar_t **);
@


1.47
log
@2013-11-18  Joel Sherrill <joel.sherrill@@oarcorp.com>

	* libc/include/stdlib.h: Add prototype of realpath().
	* libc/sys/linux/realpath.c: Add restrict keyword.
@
text
@a120 1
char *	_EXFUN(realpath, (const char *__restrict path, char *__restrict resolved_path));
d126 1
@


1.46
log
@2013-11-18  Sahil Patnayakuni  <sahilp@@oarcorp.com>

	* libc/include/stdlib.h, libc/stdlib/mbstowcs.c,
	libc/stdlib/mbstowcs_r.c, libc/stdlib/mbtowc.c,
	libc/stdlib/mbtowc_r.c, libc/stdlib/strtod.c,
	libc/stdlib/strtol.c, libc/stdlib/strtold.c,
	libc/stdlib/strtoll.c, libc/stdlib/strtoll_r.c,
	libc/stdlib/strtoul.c, libc/stdlib/strtoull.c,
	libc/stdlib/strtoull_r.c, libc/stdlib/wcstombs.c,
	libc/stdlib/wcstombs_r.c: Add restrict keyword.
@
text
@d121 1
@


1.45
log
@* libc/include/search.h (__compar_fn_t): Add typedef.
(tdelete, tfind, tsearch): Use it.
* libc/include/stdlib.h (__compar_fn_t): Add typedef.
(bsearch, qsort): Use it.
@
text
@d97 2
a98 2
int	_EXFUN(mbtowc,(wchar_t *, const char *, size_t));
int	_EXFUN(_mbtowc_r,(struct _reent *, wchar_t *, const char *, size_t, _mbstate_t *));
d101 4
a104 4
size_t	_EXFUN(mbstowcs,(wchar_t *, const char *, size_t));
size_t	_EXFUN(_mbstowcs_r,(struct _reent *, wchar_t *, const char *, size_t, _mbstate_t *));
size_t	_EXFUN(wcstombs,(char *, const wchar_t *, size_t));
size_t	_EXFUN(_wcstombs_r,(struct _reent *, char *, const wchar_t *, size_t, _mbstate_t *));
d128 2
a129 2
double	_EXFUN(strtod,(const char *__n, char **__end_PTR));
double	_EXFUN(_strtod_r,(struct _reent *,const char *__n, char **__end_PTR));
d131 1
a131 1
float	_EXFUN(strtof,(const char *__n, char **__end_PTR));
d139 4
a142 4
long	_EXFUN(strtol,(const char *__n, char **__end_PTR, int __base));
long	_EXFUN(_strtol_r,(struct _reent *,const char *__n, char **__end_PTR, int __base));
unsigned long _EXFUN(strtoul,(const char *__n, char **__end_PTR, int __base));
unsigned long _EXFUN(_strtoul_r,(struct _reent *,const char *__n, char **__end_PTR, int __base));
d195 1
a195 1
long long _EXFUN(strtoll,(const char *__n, char **__end_PTR, int __base));
d198 1
a198 1
long long _EXFUN(_strtoll_r,(struct _reent *, const char *__n, char **__end_PTR, int __base));
d201 1
a201 1
unsigned long long _EXFUN(strtoull,(const char *__n, char **__end_PTR, int __base));
d204 1
a204 1
unsigned long long _EXFUN(_strtoull_r,(struct _reent *, const char *__n, char **__end_PTR, int __base));
d233 1
a233 1
extern long double strtold (const char *, char **);
@


1.44
log
@Revert to original patch
@
text
@d50 5
d79 1
a79 1
		       int _EXFNPTR(_compar,(const _PTR, const _PTR))));
d121 1
a121 1
_VOID	_EXFUN(qsort,(_PTR __base, size_t __nmemb, size_t __size, int(*_compar)(const _PTR, const _PTR)));
@


1.43
log
@	* libc/include/stdlib.h (strtof, strtoll, strtoull, strtold): Also
	prototype if C++11 or later.
@
text
@d125 1
a125 1
#if !defined(__STRICT_ANSI__) || (__STDC_VERSION__ >= 199901L) || (defined (__cplusplus) && __cplusplus >= 201103L)
d189 1
a189 1
#if !defined(__STRICT_ANSI__) || (__STDC_VERSION__ >= 199901L) || (defined (__cplusplus) && __cplusplus >= 201103L)
d195 1
a195 1
#if !defined(__STRICT_ANSI__) || (__STDC_VERSION__ >= 199901L) || (defined (__cplusplus) && __cplusplus >= 201103L)
d227 1
a227 1
#if !defined(__STRICT_ANSI__) || (__STDC_VERSION__ >= 199901L) || (defined (__cplusplus) && __cplusplus >= 201103L)
@


1.42
log
@	* libc/include/locale.h (NULL): Fetch definition via stddef.h.
	* libc/include/stdio.h (NULL): Ditto.
	* libc/include/stdlib.h (NULL): Ditto.
	* libc/include/string.h (NULL): Ditto.
	* libc/include/wchar.h (NULL): Ditto.
	* libc/include/rpc/types.h (NULL): Ditto.
	* libc/include/time.h (NULL): Ditto.  Include stddef.h earlier.
@
text
@d125 1
a125 1
#if !defined(__STRICT_ANSI__) || (__STDC_VERSION__ >= 199901L)
d189 1
a189 1
#if !defined(__STRICT_ANSI__) || (__STDC_VERSION__ >= 199901L)
d195 1
a195 1
#if !defined(__STRICT_ANSI__) || (__STDC_VERSION__ >= 199901L)
d227 1
a227 1
#if !defined(__STRICT_ANSI__) || (__STDC_VERSION__ >= 199901L)
@


1.41
log
@	* libc/include/stdlib.h (strtof, strtoll, strtoull, strtold):Prototype
	if not __STRICT_ANSI__ or stdc version C99 or greater.
@
text
@d15 1
a49 4
#ifndef NULL
#define NULL 0
#endif

@


1.40
log
@Add mkostemp and mkostemps.

* libc/stdio/mktemp.c (_gettemp): Add parameter, all callers
changed.
(mkostemp, _mkostemp_r, mkostemps, _mkostemps_r): New interfaces,
for ELIX level 4.
* libc/include/stdlib.h (mktemp): Avoid namespace issues.
(mkostemp, mkostemps): Declare.
@
text
@d128 1
d130 1
d191 2
d194 2
d197 2
d200 2
d230 1
d232 1
@


1.40.2.1
log
@Pull in changes from HEAD
@
text
@a127 1
#if !defined(__STRICT_ANSI__) || (__STDC_VERSION__ >= 199901L)
a128 1
#endif
a188 2
#endif /* ! __STRICT_ANSI__ */
#if !defined(__STRICT_ANSI__) || (__STDC_VERSION__ >= 199901L)
a189 2
#endif
#ifndef __STRICT_ANSI__
a190 2
#endif /* ! __STRICT_ANSI__ */
#if !defined(__STRICT_ANSI__) || (__STDC_VERSION__ >= 199901L)
a191 2
#endif
#ifndef __STRICT_ANSI__
a219 1
#if !defined(__STRICT_ANSI__) || (__STDC_VERSION__ >= 199901L)
a220 1
#endif
@


1.40.2.2
log
@Pull in chages from HEAD
@
text
@a14 1
#define __need_NULL
d49 4
@


1.40.2.3
log
@Pull in changes from HEAD
@
text
@d125 1
a125 1
#if !defined(__STRICT_ANSI__) || (__STDC_VERSION__ >= 199901L) || (__cplusplus >= 201103L)
d189 1
a189 1
#if !defined(__STRICT_ANSI__) || (__STDC_VERSION__ >= 199901L) || (__cplusplus >= 201103L)
d195 1
a195 1
#if !defined(__STRICT_ANSI__) || (__STDC_VERSION__ >= 199901L) || (__cplusplus >= 201103L)
d227 1
a227 1
#if !defined(__STRICT_ANSI__) || (__STDC_VERSION__ >= 199901L) || (__cplusplus >= 201103L)
@


1.39
log
@	Extend locale support to maintain wide char values of native strings
	if __HAVE_LOCALE_INFO_EXTENDED__ is defined.
	* libc/include/langinfo.h (enum __nl_item): New type.  Define all
	native values accessible through nl_langinfo.  Define previously
	existing POSIX-compatible values as macros as well.
	* libc/include/stdlib.h (__mb_cur_max): Drop declaration.
	(__locale_mb_cur_max): Declare.
	(MB_CUR_MAX): Re-define calling __locale_mb_cur_max.
	* libc/locale/Makefile.am (ELIX_SOURCES): Add lctype.c.
	* libc/locale/Makefile.in: Regenerate.
	* libc/locale/lctype.c: New file to define and load LC_CTYPE category.
	* libc/locale/lctype.h: New file, matching header.
	* libc/locale/lmessages.c (_C_messages_locale): Add default values for
	wide char members.
	(__messages_load_locale): Add _C_messages_locale in call to
	__set_lc_messages_from_win.
	* libc/locale/lmessages.h (struct lc_messages_T): Add wide char members.
	* libc/locale/lmonetary.c (_C_monetary_locale):  Add default values for
	wide char members.
	(__monetary_load_locale): Add _C_monetary_locale in call to
	__set_lc_monetary_from_win.
	* libc/locale/lmonetary.h (struct lc_monetary_T): Add wide char members.
	Add numerical values for international currency formatting per
	POSIX-1.2008, if __HAVE_LOCALE_INFO_EXTENDED__ is defined.
	* libc/locale/lnumeric.c (_C_numeric_locale): Add default values for
	wide char members.
	(__numeric_load_locale): Add _C_numeric_locale in call to
	__set_lc_numeric_from_win.
	* libc/locale/lnumeric.h (struct lc_numeric_T): Add wide char members.
	* libc/locale/locale.c (loadlocale): Return doing nothing if category
	locale didn't change.  Convert category if chain to switch statement.
	Call __ctype_load_locale in LC_CTYPE case.
	(__locale_charset): Add (but disable for now) returning codeset from
	__get_current_ctype_locale.
	(__locale_mb_cur_max): Add (but disable for now) returning mb_cur_max
	from __get_current_ctype_locale.
	(__locale_msgcharset): Add returning codeset from
	__get_current_messages_locale.
	(_localeconv_r): Accommodate int_XXX values.
	* libc/locale/nl_langinfo.c (nl_ext): New array to define what is to
	be returned for non-POSIX values.
	(nl_Langinfo): Return correct codeset for each locale category.  Return
	extended values if __HAVE_LOCALE_INFO_EXTENDED__ is defined.
	* libc/locale/timelocal.c (_C_time_locale): Add default values for
	wide char members.
	(__time_load_locale): Add _C_time_locale in call to
	__set_lc_time_from_win.
	* libc/locale/timelocal.h (struct lc_time_T): Add wide char members.
	* libc/stdio/vfwprintf.c (_VFWPRINTF_R): Use wide char decimal point
	and thousands_sep if __HAVE_LOCALE_INFO_EXTENDED__ is defined.
	* libc/time/strftime.c: Rework to accommodate availability of wide char
	strings in LC_TIME category if __HAVE_LOCALE_INFO_EXTENDED__ is defined.
@
text
@d106 2
d110 1
a110 1
char *	_EXFUN(mktemp,(char *) _ATTRIBUTE ((warning ("the use of `mktemp' is dangerous; use `mkstemp' instead"))));
d113 2
d117 1
a117 1
char *	_EXFUN(_mktemp_r, (struct _reent *, char *) _ATTRIBUTE ((warning ("the use of `mktemp' is dangerous; use `mkstemp' instead"))));
@


1.38
log
@Fix getsubopt declaration.

* libc/include/sys/unistd.h (suboptarg, getsubopt): Move...
* libc/include/stdlib.h: ...here, to match POSIX for getsubopt.
@
text
@d58 1
a58 1
extern __IMPORT int __mb_cur_max;
d60 1
a60 1
#define MB_CUR_MAX __mb_cur_max
@


1.37
log
@
2009-12-17  Jerker Back  <jerker.back@@gmail.com>

        * libc/include/_ansi.h: Add new _EXFNPTR macro for using with
        function pointer arguments.
        * libc/iconv/lib/conv.h: Use _EXFNPTR rather than _EXPARM macro.
        * libc/iconv/lib/ucsconv.h: Ditto.
        * libc/include/stdlib.h: Use new _EXFNPTR macro for function pointers.
        * libc/include/sys/reent.h: Ditto.
        * libc/include/sys/unistd.h: Ditto.
        * libc/search/bsearch.c: Ditto.
        * libc/stdio/fseek.c: Ditto.
        * libc/stdio64/fseeko64.c: Ditto.
        * libc/stdlib/atexit.c: Ditto.
        * libc/stdlib/on_exit.c: Ditto.
@
text
@d86 4
@


1.36
log
@
2009-09-22  Ralf Corsépius <ralf.corsepius@@rtems.org>

        * libc/include/stdlib.h: Add posix_memalign.
@
text
@d77 1
a77 1
		       int _EXPARM(_compar,(const _PTR, const _PTR))));
@


1.35
log
@Add mkdtemp, mkstemps.

* libc/stdio/mktemp.c: Fix documentation.
(_gettemp): Add domkdir and length parameters.  Check for
insufficient 'X' suffix.  Drop cygwin-specific code.
(_mkstemp_r, _mktemp_r, mkstemp, mktemp): Adjust clients.
(_mkdtemp_r, _mkstemps_r, mkdtemp, mkstemps): New functions.
* libc/include/stdlib.h (_mkdtemp_r, _mkstemps_r, mkdtemp)
(mkstemps): Declare them.
@
text
@d192 4
@


1.34
log
@
2009-04-24  Jeff johnston  <jjohnstn@@redhat.com>

        * configure.in: Add configuration test for long double equals dbl
        and set flag _LDBL_EQ_DBL if true.
        * configure: Regenerated.
        * newlib.hin: Add _LDBL_EQ_DBL flag.
        * libc/include/math.h: Use _LDBL_EQ_DBL flag instead of
        _HAVE_LDBL_MATH.
        * libc/include/stdlib.h: Use _LDBL_EQ_DBL flag instead of
        _HAVE_LDBL_STDLIB.
        * libc/common/local.h: Remove _LDBL_EQ_DBL flag setting.
        * libc/stdlib/local.h: Ditto.
@
text
@d101 4
a104 2
int     _EXFUN(mkstemp,(char *));
char *  _EXFUN(mktemp,(char *) _ATTRIBUTE ((warning ("the use of `mktemp' is dangerous; use `mkstemp' instead"))));
d106 1
d108 1
@


1.33
log
@
2009-04-21  Mark Mitchell  <mark@@codesourcery.com>

        * libc/include/_ansi.h: Move C++ defines to top of file.
        (_NOTHROW): New macro.
        (_EXFUN_NOTHROW): Likewise.
        * libc/include/stdlib.h (calloc): Declare with _EXFUN_NOTHROW.
        (free): Likewise.
        (malloc): Likewise.
        (realloc): Likewise.
        (_malloc_r): Likewise.
        (_callor_r): Likewise.
        (_free_r): Likewise.
        (_realloc_r): Likewise.
@
text
@d202 2
a203 2
/* On platforms where long double stdlib functions are supported.  */
#ifdef _HAVE_LDBL_STDLIB
d206 1
a206 1
#endif /* _HAVE_LDBL_STDLIB */
@


1.32
log
@
2009-04-20  Jeff johnston  <jjohnstn@@redhat.com>

        * libc/include/math.h: Change _LDBL_EQ_DBL flag usage to
        be _HAVE_LDBL_MATH.
        * libc/include/stdlib.h: Change _LDBL_EQ_DBL flag usage to
        be _HAVE_LDBL_STDLIB.
@
text
@d78 1
a78 1
_PTR	_EXFUN(calloc,(size_t __nmemb, size_t __size));
d81 1
a81 1
_VOID	_EXFUN(free,(_PTR));
d88 1
a88 1
_PTR	_EXFUN(malloc,(size_t __size));
d109 1
a109 1
_PTR	_EXFUN(realloc,(_PTR __r, size_t __size));
d192 4
a195 4
_PTR	_EXFUN(_malloc_r,(struct _reent *, size_t));
_PTR	_EXFUN(_calloc_r,(struct _reent *, size_t, size_t));
_VOID	_EXFUN(_free_r,(struct _reent *, _PTR));
_PTR	_EXFUN(_realloc_r,(struct _reent *, _PTR, size_t));
@


1.31
log
@
2009-04-16  Ken Werner  <ken.werner@@de.ibm.com>

        * libm/libm.texinfo: Add long double function support chapter.
        * libc/include/machine/ieeefp.h: Add _LDBL_EQ_DBL define.
        * libc/include/stdlib.h: Include <machine/ieeefp.h>.
        (strtold, wcstold): Declare.
        * libc/stdlib/strtold.c: New File.
        * libc/stdlib/wcstold.c: Likewise.
        * libc/configure.in: Add long double check.
        * libc/configure: Regenerate.
        * libc/stdlib/Makefile.am: Add strtold.c and wcstold.c.
        * libc/stdlib/Makefile.in: Regenerate.
        * libc/include/math.h (atanl, cosl, sinl, tanl, tanhl): Declare.
        (frexpl, modfl, ceill, fabsl, floorl, log1pl, expm1l, acosl): Ditto.
        (asinl, atan2l, coshl, sinhl, expl, ldexpl, logl, log10l, powl): Ditto.
        (sqrtl, fmodl, hypotl, copysignl, nanl, ilogbl, asinhl, cbrt): Ditto.
        (nextafterl, rintl, scalbnl, exp2l, scalblnl, tgammal): Ditto.
        (nearbyintl, lrintl, llrintl, roundl, lroundl, llround): Ditto.
        (llroundl, truncl, remquol, fdiml, fmaxl, fminl, fmal, acoshl): Ditto.
        (atanhl, remainderl, lgammal, erfl, erfcl): Ditto.
        * libm/common/atanl.c: New File.
        * libm/common/cosl.c: Likewise.
        * libm/common/sinl.c: Likewise.
        * libm/common/modfl.c: Likewise.
        * libm/common/frexpl.c: Likewise.
        * libm/common/tanhl.c: Likewise.
        * libm/common/tanl.c: Likewise.
        * libm/common/expm1l.c: Likewise.
        * libm/common/log1pl.c: Likewise.
        * libm/common/ceill.c: Likewise.
        * libm/common/fabsl.c: Likewise.
        * libm/common/floorl.c: Likewise.
        * libm/common/acosl.c: Likewise.
        * libm/common/asinl.c: Likewise.
        * libm/common/atan2l.c: Likewise.
        * libm/common/coshl.c: Likewise.
        * libm/common/expl.c: Likewise.
        * libm/common/fmodl.c: Likewise.
        * libm/common/hypotl.c: Likewise.
        * libm/common/ldexpl.c: Likewise.
        * libm/common/log10l.c: Likewise.
        * libm/common/logl.c: Likewise.
        * libm/common/powl.c: Likewise.
        * libm/common/sqrtl.c: Likewise.
        * libm/common/copysignl.c: Likewise.
        * libm/common/ilogbl.c: Likewise.
        * libm/common/nanl.c: Likewise.
        * libm/common/cbrtl.c: Likewise.
        * libm/common/asinhl.c: Likewise.
        * libm/common/nextafterl.c: Likewise.
        * libm/common/rintl.c: Likewise.
        * libm/common/scalbnl.c: Likewise.
        * libm/common/exp2l.c: Likewise.
        * libm/common/fdiml.c: Likewise.
        * libm/common/fmal.c: Likewise.
        * libm/common/fmaxl.c: Likewise.
        * libm/common/fminl.c: Likewise.
        * libm/common/lrintl.c: Likewise.
        * libm/common/lroundl.c: Likewise.
        * libm/common/nearbyintl.c: Likewise.
        * libm/common/remquol.c: Likewise.
        * libm/common/roundl.c: Likewise.
        * libm/common/scalblnl.c: Likewise.
        * libm/common/truncl.c: Likewise.
        * libm/common/acoshl.c: Likewise.
        * libm/common/atanhl.c: Likewise.
        * libm/common/erfcl.c: Likewise.
        * libm/common/erfl.c: Likewise.
        * libm/common/lgammal.c: Likewise.
        * libm/common/remainderl.c: Likewise.
        * libm/common/tgammal.c: Likewise.
        * libm/common/sinhl.c: Likewise.
        * libm/common/llroundl.c: Likewise.
        * libm/configure.in: Add long double check.
        * libm/configure: Regenerate.
        * libm/common/Makefile.am: Add new files.
        * libm/common/Makefile.in: Regenerate.
@
text
@d202 2
a203 2
/* On platforms where long double is as wide as double.  */
#ifdef _LDBL_EQ_DBL
d206 1
a206 1
#endif /* LDBL_EQ_DBL */
@


1.30
log
@	* libc/include/stdlib.h (_mkstemp_r, _mktemp_r): Move out of
	!_REENT_ONLY section.
@
text
@d10 1
d202 6
@


1.29
log
@	* libc/include/stdio.h (_mkstemp_r, _mktemp_r): Move declarations
	to stdlib.h.
	* libc/include/stdlib.h (mktemp, _mktemp_r): Warn when using.
	* libc/stdio/mktemp.c: Explain the security risk when using
	mktemp.
@
text
@d101 2
a103 1
char *  _EXFUN(mktemp,(char *) _ATTRIBUTE ((warning ("the use of `mktemp' is dangerous; use `mkstemp' instead"))));
a105 1
#endif
@


1.28
log
@
2008-11-19  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/sys/linux/bits/dirent.h: New header file.
        * libc/sys/linux/sys/dirent.h: Include <bits/dirent.h> instead of
        <linux/dirent.h>.
        * libc/posix/Makefile.am: Remove reallocf.
        * libc/posix/Makefile.in: Regenerated.
        * libc/posix/reallocf.c: Moved to...
        * libc/stdlib/reallocf.c: Here
        * libc/stdlib/malloc.c: Add reallocf documentation.
        * libc/include/stdlib.h: Add reallocf and _reallocf_r prototypes.
        * libc/stdlib/Makefile.am: Add reallocf.
        * libc/stdlib/Makefile.in: Regenerated.
        * libc/posix/_isatty.c: Set errno.
@
text
@d101 3
a103 1
char *  _EXFUN(mktemp,(char *));
@


1.27
log
@
2008-09-24  Pawel Veselov  <pawel.veselov@@gmail.com>

        Fix setenv/getenv/unsetenv to be OpenGroup compliant:
        * libc/include/stdlib.h (unsetenv, _unsetenv_r): Redefine with integer
        return types.
        * libc/stdlib/getenv_r.c (_findenv_r): Do no special processing with
        names that contain equal chars.
        * libc/stdlib/setenv.c: Redefine _unsetenv_r as returning int.
        * libc/stdlib/setenv_r.c (_setenv_r): Return -1 and set errno to
        EINVAL if name contains an equal sign.  Do not remove any equal signs
        from the value.
        (_unsetenv_r): Modified to return int.  Return -1 and set EINVAL
        if name contains equal sign.  Return -1 if no variable(s) were found
        and return 0 otherwise.
@
text
@d107 3
d135 1
@


1.26
log
@* libc/include/stdlib.h: Move cygwin declarations to cygwin-specific file.
Declare unsetenv and _unsetenv_r when not cygwin.
@
text
@d177 2
a178 2
void	_EXFUN(unsetenv,(const char *__string));
void	_EXFUN(_unsetenv_r,(struct _reent *, const char *__string));
@


1.25
log
@
2004-11-24  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/stdlib.h (putenv, _putenv_r): Change to remove
        const for value string parameter.
        * libc/stdlib/putenv.c: Ditto.
        * libc/stdlib/putenv_r.c: Ditto.
@
text
@d22 4
a82 3
#ifdef __CYGWIN__
const char *_EXFUN(getprogname,(void));
#endif
a106 3
#ifdef __CYGWIN__
void	_EXFUN(setprogname,(const char *));
#endif
a176 2
#else
char *	_EXFUN(realpath,(const char *, char *));
a178 5
int	_EXFUN(random,(_VOID));
long	_EXFUN(srandom,(unsigned __seed));
char *  _EXFUN(ptsname, (int));
int     _EXFUN(grantpt, (int));
int     _EXFUN(unlockpt,(int));
a194 29
#ifdef __CYGWIN__
#undef _malloc_r
#define _malloc_r(r, s) malloc (s)
#undef _free_r
#define _free_r(r, p) free (p)
#undef _realloc_r
#define _realloc_r(r, p, s) realloc (p, s)
#undef _calloc_r
#define _calloc_r(r, s1, s2) calloc (s1, s2);
#undef _memalign_r
#define _memalign_r(r, s1, s2) memalign (s1, s2);
#undef _mallinfo_r
#define _mallinfo_r(r) mallinfo ()
#undef _malloc_stats_r
#define _malloc_stats_r(r) malloc_stats ()
#undef _mallopt_r
#define _mallopt_r(i1, i2) mallopt (i1, i2)
#undef _malloc_usable_size_r
#define _malloc_usable_size_r(r, p) malloc_usable_size (p)
#undef _valloc_r
#define _valloc_r(r, s) valloc (s)
#undef _pvalloc_r
#define _pvalloc_r(r, s) pvalloc (s)
#undef _malloc_trim_r
#define _malloc_trim_r(r, s) malloc_trim (s)
#undef _mstats_r
#define _mstats_r(r, p) mstats (p)
#endif

@


1.24
log
@
2003-11-27  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/stdlib.h (_atoi_r): New prototype.
        * libc/stdlib/atoi.c (_atoi_r): New reentrant function.
@
text
@d132 2
a133 2
int	_EXFUN(putenv,(const char *__string));
int	_EXFUN(_putenv_r,(struct _reent *, const char *__string));
@


1.23
log
@
2003-11-27  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/stdlib.h (_atoll_r, _atol_r): New prototypes.
        * libc/stdlib/atol.c (_atol_r): New reentrant function.
        * libc/stdlib/atoll.c (_atoll_r): Ditto.
@
text
@d65 1
@


1.22
log
@
2003-11-27  Artem B. Bityuckiy  <mail_lists@@mail.ru>
            Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/stdlib.h (lldiv_t): New type.
        (atoll, llabs, lldiv): New prototypes.
        * libc/stdlib/Makefile.am: Add support for atoll, llabs, and lldiv.
        * libc/stdlib/stdlib.tex: Ditto.
        * libc/stdlib/Makefile.in: Regenerated.
        * libc/stdlib/atoll.c: New file.
        * libc/stdlib/llabs.c: Ditto.
        * libc/stdlib/lldiv.c: Ditto.
@
text
@d66 1
d168 1
@


1.21
log
@	* libc/include/stdlib.h (getprogname): Declare for Cygwin.
	(setprogname): Ditto.
@
text
@d36 8
d166 3
@


1.20
log
@
2002-12-06  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/stdlib.h (strtof): New prototype (from C99).
        (strtodf): Changed from prototype to macro which redefines
        to strtof.
        * libc/stdlib/atof.c: Change documentation to refer to strtof
        instead of strtodf.
        * libc/stdlib/atoff.c (atoff): Change to call strtof instead of
        strtodf.
        * libc/stdlib/strtod.c (strtodf): Renamed to strtof.
        (strtof): New function.
        * libm/test/convert.c (test_strtodf): Renamed to test_strtof which
        calls strtof.
@
text
@d69 3
d96 3
@


1.19
log
@* libc/include/malloc.h: On cygwin, define malloc _r functions as wrapper
macros to standard malloc functions.
* libc/include/stdlib.h: Ditto.
* configure.host: Always define MALLOC_PROVIDED on cygwin.
@
text
@d96 1
d98 4
a101 1
float	_EXFUN(strtodf,(const char *__n, char **__end_PTR));
@


1.18
log
@	* libc/include/langinfo.h: New file.
	* libc/include/wchar.h: Likewise.
	* libc/include/sys/syslimits.h: Likewise.
	* libc/locale/fix_grouping.c: Likewise.
	* libc/locale/ldpart.c: Likewise.
	* libc/locale/ldpart.h: Likewise.
	* libc/locale/lmessages.c: Likewise.
	* libc/locale/lmessages.h: Likewise.
	* libc/locale/lmonetary.c: Likewise.
	* libc/locale/lmonetary.h: Likewise.
	* libc/locale/lnumeric.c: Likewise.
	* libc/locale/lnumeric.h: Likewise.
	* libc/locale/nl_langinfo.3: Likewise.
	* libc/locale/nl_langinfo.c: Likewise.
	* libc/locale/timelocal.c: Likewise.
	* libc/locale/timelocal.h: Likewise.
	* libc/stdlib/btowc.c: Likewise.
	* libc/stdlib/mbrlen.c: Likewise.
	* libc/stdlib/mbrtowc.c: Likewise.
	* libc/stdlib/mbsinit.c: Likewise.
	* libc/stdlib/mbsrtowcs.c: Likewise.
	* libc/stdlib/wcrtomb.c: Likewise.
	* libc/stdlib/wcsrtombs.c: Likewise.
	* libc/stdlib/wctob.c: Likewise.
	* libc/sys/linux/prof-freq.c: Likewise.
	* libc/sys/linux/profile.c: Likewise.
	* libc/sys/linux/machine/i386/dl-procinfo.c: Likewise.
	* libc/sys/linux/machine/i386/dl-procinfo.h: Likewise.
	* libc/include/stdlib.h: Change re-entrant functions to take
	mbstate_t pointers.
	* libc/include/sys/_types.h: Define _mbstate_t.
	* libc/include/sys/config.h (MB_LEN_MAX): New macro.
	* libc/include/sys/errno.h (EILSEQ): New error code.
	* libc/include/sys/reent.h: Include wchar.h.  Change reentrant
	structure to use mbstate_t.
	* libc/locale/Makefile.am (LIB_SOURCES): Add new files.
	* libc/machine/powerpc/vfprintf.c: Use mbstate_t.
	* libc/machine/powerpc/vfscanf.c: Likewise.
	* libc/stdio/getdelim.c: Reallocate buffer only when necessary.
	* libc/stdio/vfprintf.c: Likewise.
	* libc/stdio/vfscanf.c: Likewise.
	* libc/stdlib/Makefile.am (LIB_SOURCES): Add new files.
	* libc/stdlib/mblen.c: Use mbstate_t.
	* libc/stdlib/mblen_r.c: Likewise.
	* libc/stdlib/mbstowcs.c: Likewise.
	* libc/stdlib/mbstowcs_r.c: Likewise.
	* libc/stdlib/mbtowc.c: Likewise.
	* libc/stdlib/mbtowc_r.c: Likewise.
	* libc/stdlib/wcstombs.c: Likewise.
	* libc/stdlib/wcstombs_r.c: Likewise.
	* libc/stdlib/wctomb_r.c: Likewise.
	* libc/sys/linux/Makefile.am (LIB_SOURCES): Add prof-freq.c and
	profile.c.
	* libc/sys/linux/machine/i386/Makefile.am (LIB_SOURCES): Add
	dl-procinfo.c.
	* libc/sys/linux/sys/errno.h (EILSEQ): New error code.
	* libc/sys/linux/sys/types.h (off_t): Define type.
	* testsuite/newlib.locale/UTF-8.c: Change locale name from UTF-8
	to C-UTF-8.
	* testsuite/newlib.locale/UTF-8.exp: Likewise.
@
text
@d169 1
d175 1
d179 29
@


1.17
log
@
2002-06-27  Benjamin Kosnik  <bkoz@@redhat.com>

        * libc/include/stdio.h: Untangle, add _BEGIN_STD_C and _END_STD_C.
        * libc/include/time.h: Same.
        * libc/include/string.h: Same.
        * libc/include/stdlib.h: Same.
        * libc/include/signal.h: Same.
        * libc/include/setjmp.h: Same.
        * libc/include/math.h: Same.
        * libc/include/locale.h: Same.
        * libc/include/ctype.h: Same.
        * libc/include/machine/setjmp.h: Same.
        * libc/include/_ansi.h (_BEGIN_STD_C): Add.
        (_END_STD_C): Add.
@
text
@d75 1
a75 1
int	_EXFUN(_mblen_r,(struct _reent *, const char *, size_t, int *));
d77 1
a77 1
int	_EXFUN(_mbtowc_r,(struct _reent *, wchar_t *, const char *, size_t, int *));
d79 1
a79 1
int	_EXFUN(_wctomb_r,(struct _reent *, char *, wchar_t, int *));
d81 1
a81 1
size_t	_EXFUN(_mbstowcs_r,(struct _reent *, wchar_t *, const char *, size_t, int *));
d83 1
a83 1
size_t	_EXFUN(_wcstombs_r,(struct _reent *, char *, const wchar_t *, size_t, int *));
@


1.16
log
@
2002-06-13  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/stdlib.h: Add _Exit prototype.
        * libc/stdlib/Makefile.am: Add _Exit.c support.
        * libc/stdlib/Makefile.in: Ditto.
        * libc/stdlib/_Exit.c: New file.
@
text
@a7 3
#ifdef __cplusplus
extern "C" {
#endif
d22 2
d178 2
a179 3
#ifdef __cplusplus
}
#endif
@


1.15
log
@
2002-05-15  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/stdlib.h: Add on_exit prototype.
        * libc/include/sys/reent.h (struct _atexit): Add argument array
        and bits to track type of exit routine to support both on_exit
        and atexit.
        (_REENT_INIT_PTR): Add missing fields that won't be zeroed out
        by default and change the setting of the atexit structure.
        (_REENT_INIT)[!_REENT_SMALL]: Remove extraneous end brace.
        * libc/stdlib/on_exit.c: New file.
        * libc/stdlib/Makefile.am: Add support for on_exit.
        * libc/stdlib/Makefile.in: Regenerated.
        * libc/stdlib/atexit.c: Change to initialize types field.
        * libc/stdlib/exit.c: Change to look at types field for each
        exit routine and either call an atexit-style or an on_exit-style
        routine accordingly.
@
text
@d112 1
@


1.14
log
@
2002-05-06  Jeff Johnston  <jjohnstn@@redhat.com>

        *  libc/include/stdlib.h (a64l, l64a, _l64a_r): Added prototypes.
@
text
@d111 1
@


1.13
log
@
2002-04-19  Jeff Johnston  <jjohnstn@@redhat.com>

        *  configure.host: Add support for powerpc-eabialtivec*.
        *  libc/include/malloc.h: Add include of <machine/malloc.h>.
        *  libc/include/stdlib.h: Add include of <machine/stdlib.h>.
        *  libc/include/machine/malloc.h: New file.
        *  libc/include/machine/stdlib.h: Ditto.
        *  libc/include/machine/setjmp.h: Add support for powerpc altivec.
        *  libc/machine/powerpc/Makefile.am: Add conditional objects and
        sources based on configuration.
        *  libc/machine/powerpc/Makefile.in: Regenerated.
        *  libc/machine/powerpc/configure: Ditto.
        *  libc/machine/powerpc/configure.in: Add check for
        powerpc-eabialtivec* in which case add in additional source files.
        *  libc/machine/powerpc/setjmp.S: Add altivec support.
        *  libc/machine/powerpc/vec_calloc.c: New file.
        *  libc/machine/powerpc/vec_free.c: Ditto.
        *  libc/machine/powerpc/vec_malloc.c: Ditto.
        *  libc/machine/powerpc/vec_mallocr.c: Ditto.
        *  libc/machine/powerpc/vec_realloc.c: Ditto.
        *  libc/machine/powerpc/machine/malloc.h: Ditto.
        *  libc/machine/powerpc/machine/stdlib.h: Ditto.
        *  libc/machine/powerpc/vfprintf.c: New file that is vfprintf.c
        with added altivec format specifiers.
        *  libc/machine/powerpc/vfscanf.c: New file that is vfscanf.c with
        added altivec format specifiers.
@
text
@d108 3
@


1.12
log
@	* libc/include/alloca.h: Move libc/sys/linux/include/alloca.h
	to here.  Rearrange for general inclusion by stdlib.h.
	* libc/include/stdlib.h: Include <alloca.h> if __STRICT_ANSI__
	isn't defined.
	* libc/sys/linux/include/alloca.h: Move to libc/include.
@
text
@d20 1
a20 1

@


1.11
log
@
2001-10-01  Charles Wilson  <cwilson@@ece.gatech.edu>

        * libc/include/stdlib.h: add declarations for
        _strtoull_r, _strtoll_r, strtoull, and strtoll.
        * libc/stdio/local.h: remove declarations of
        __strtoull_r and __strtoll_r.
        * libc/stdio/vfscanf.c(__svfscanf_r): call
        _strtoull_r instead of __strtoull_r. Ditto
        _strtoll_r vs. __strtoll_r.
        * libc/stdlib/Makefile.am: add new files to
        .c list and .def list
        * libc/stdlib/Makefile.in: regenerate
        * libc/stdlib/strtoll_r.c: rename __strtoll_r
        as _strtoll_r
        * libc/stdlib/strtoull_r.c: rename __strtoull_r
        as _strtoull_r
        * libc/stdlib/strtoull.c: new file
        * libc/stdlib/strtoll.c: new file
@
text
@d21 4
@


1.10
log
@
2001-04-27  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/stdlib.h: Add prototype for _strtod_r.
@
text
@d91 2
a92 2
double	_EXFUN(strtod,(const char *__n, char **_end_PTR));
double	_EXFUN(_strtod_r,(struct _reent *,const char *__n, char **_end_PTR));
d94 1
a94 1
float	_EXFUN(strtodf,(const char *__n, char **_end_PTR));
d96 5
a100 4
long	_EXFUN(strtol,(const char *__n, char **_end_PTR, int __base));
long	_EXFUN(_strtol_r,(struct _reent *,const char *__n, char **_end_PTR, int __base));
unsigned long _EXFUN(strtoul,(const char *_n_PTR, char **_end_PTR, int __base));
unsigned long _EXFUN(_strtoul_r,(struct _reent *,const char *_n_PTR, char **_end_PTR, int __base));
d140 4
@


1.9
log
@
2001-04-20  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/stdio.h[!_REENT_ONLY]: Moved various functions together
        into one list.
        [!__STRICT_ANSI__]: Moved non-ANSI I/O functions in this list.
        (vfscanf, vscanf, vsscanf, _vfscanf_r, _vscanf_r, _vsscanf_r): New
        function prototypes.
        (_fscanf_r, _sscanf_r): Ditto.
        * libc/include/stdlib.h: Added _strtod_r prototype.
        * libc/stdio/Makefile.am: Add new v*scanf functions.
        * libc/stdio/Makefile.in: Regenerate.
        * libc/stdio/fscanf.c: Reorganized so HAVE_STDC only affects prototype
        and code is shared.  Added reentrant _fscanf_r which calls __svfscanf_r.        * libc/stdio/scanf.c: Changed to call __svfscanf_r.
        * libc/stdio/sscanf.c: Changed documentation to add reentrant routines.
        (sscanf): Changed to call __svfscanf_r with _REENT argument.
        (_sscanf_r): New routine.
        * libc/stdio/local.h: Removed __svfscanf prototype and replaced it
        with __svfscanf_r prototype.
        * libc/stdio/vfscanf.c (vfscanf, _vfscanf_r: New
        routines.
        (__svfscanf_r): Reentrant version of __svfscanf which takes reetrancy
        structure as argument as calls reentrant versions of helper functions
        (e.g. _strtol_r, _strtoul_r). Also replaced calls to atol and atof
        to _strtol_r and _strtod_r respectively.
        * libc/stdio/vfscanf.c: Also changed __svfscanf to call __svfscanf_r.
        * libc/stdlib/strtod.c (strtod): Changed to call _strtod_r with
        _REENT argument.
        * libc/stdio/vscanf.c: New file.
        * libc/stdio/vsscanf.c: Ditto.
@
text
@d92 1
@


1.8
log
@
2001-02-14  Kazuhiro Fujieda  <fujieda@@jaist.ac.jp>

        * libc/include/stdlib.h: Add declarations of rand48 functions and
        their reentrant versions.
        * libc/include/sys/reent.h: Move macros from rand48.h. Add
        struct _rand48 for shared parameters of rand48 functions.
        (struct _reent): Add a variable _r48 of struct _rand48.
        (_REENT_INIT): Add _r48 initialization.
        * libc/stdlib/Makefile.am (lib_a_SOURCES): Add rand48 functions.
        (CHEWOUT_FILES): Add rand48.def.
        * libc/stdlib/Makefile.am: Add dependencies for rand48 functions.
        * libc/stdlib/Makefile.in: Regenerated.
        * libc/stdlib/drand48.c (drand48, _drand48_r): Derived from the
        NetBSD C library.
        * libc/stdlib/erand48.c (erand48, _erand48_r): Ditto.
        * libc/stdlib/jrand48.c (jrand48, _jrand48_r): Ditto.
        * libc/stdlib/lcong48.c (lcong48, _lcong48_r): Ditto.
        * libc/stdlib/lrand48.c (lrand48, _lrand48_r): Ditto.
        * libc/stdlib/mrand48.c (mrand48, _mrand48_r): Ditto.
        * libc/stdlib/nrand48.c (nrand48, _nrand48_r): Ditto.
        * libc/stdlib/seed48.c (seed48, _seed48_r): Ditto.
        * libc/stdlib/srand48.c (srand48, _srand48_r): Ditto.
        * libc/stdlib/rand48.c (__dorand48): Ditto.
        * libc/stdlib/rand48.h: Ditto, and modify declarations of global
        parameters into macros referring them in the reentrant structure.
@
text
@d96 1
@


1.7
log
@        * libc/include/stdlib.h: Add declarations for `mkstemp' and `mktemp'.
@
text
@d117 21
@


1.6
log
@* libc/include/stdlib.h: Avoid declaring cfree under Cygwin.
* libc/include/malloc.h: Ditto.  Also remove obsolete declaration.
@
text
@d81 6
@


1.5
log
@* Makefile.am: Fix space vs. tab problem in install-data-local.
* Makefile.in: Regenerate.
* libc/include/_ansi.h (_EXFUN): Define specially for __CYGWIN__.
(_EXPARM): New macro for defining a function parameter.
* libc/include/stdlib.h: Use _EXPARM.
* libc/stdlib/mallocr.c: Don't build cfree for Cygwin.
@
text
@a94 1
_VOID	_EXFUN(cfree,(_PTR));
d111 3
a113 1
#ifdef __CYGWIN__
@


1.4
log
@* libc/include/sys/config.h: define __IMPORT appropriately
* libc/include/ctype.h (_ctype_): use __IMPORT
* libc/include/math.h (__infinity, signam, _LIB_VERSION): ditto
* libc/include/math.h (__mb_cur_max): ditto
* libc/include/time.h (_timezone, _daylight, _tzname): ditto
* libc/include/unctrl.h (__unctrl, __unctrllen): ditto
* libc/include/errno.h (_sys_errlist, _sys_nerr): ditto
* libc/include/unistd.h (environ): ditto
@
text
@d59 1
a59 1
		       int _EXFUN((*_compar),(const _PTR, const _PTR))));
@


1.3
log
@Thu Jun  8 21:18:00 2000  Ranjith Kumaran  <ranjith@@cygnus.com>

	* libc/include/stdlib.h: Set RAND_MAX to __RAND_MAX.
	* libc/include/sys/config.h: Define __RAND_MAX.
@
text
@d42 1
a42 5
#if (defined(__CYGWIN__) || defined(__CYGWIN__)) && ! defined(_COMPILING_NEWLIB)
extern __declspec(dllimport) int __mb_cur_max;
#else
extern int __mb_cur_max;
#endif
@


1.2
log
@* libc/include/ctype.h: __CYGWIN32__ -> __CYGWIN__
* libc/include/malloc.h: Ditto.
* libc/include/process.h: Ditto.
* libc/include/stdio.h: Ditto.
* libc/include/stdlib.h: Ditto.
* libc/include/time.h: Ditto.
* libc/include/machine/setjmp.h: Ditto.
* libc/include/sys/errno.h: Ditto.
* libc/include/sys/signal.h: Ditto.
* libc/include/sys/stat.h: Ditto.
* libc/include/sys/time.h: Ditto.
* libc/include/sys/unistd.h: Ditto.
* libc/include/string.h: Ditto.  strsignal should return a const char *.
@
text
@d40 1
a40 1
#define RAND_MAX 0x7fffffff
@


1.1
log
@Initial revision
@
text
@d42 1
a42 1
#if (defined(__CYGWIN__) || defined(__CYGWIN32__)) && ! defined(_COMPILING_NEWLIB)
d116 1
a116 1
#ifdef __CYGWIN32__
@


1.1.1.1
log
@import newlib-2000-02-17 snapshot
@
text
@@
