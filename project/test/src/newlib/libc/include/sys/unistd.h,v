head	1.89;
access;
symbols
	cygwin-1_7_35-release:1.89
	cygwin-1_7_34-release:1.89
	newlib-2_2_0:1.88.0.2
	cygwin-1_7_33-release:1.88
	cygwin-1_7_32-release:1.87
	cygwin-1_7_31-release:1.86
	cygwin-1_7_30-release:1.86
	cygwin-1_7_29-release:1.86
	cygwin-1_7_28-release:1.86
	newlib-2_1_0:1.85
	cygwin-1_7_27-release:1.85
	cygwin-1_7_26-release:1.85
	cygwin-1_7_25-release:1.81
	cygwin-1_7_24-release:1.81
	cygwin-1_7_23-release:1.81
	cygwin-1_7_22-release:1.81
	cygwin-1_7_21-release:1.81
	cygwin-1_7_20-release:1.81
	cygwin-1_7_19-release:1.81
	cygwin-64bit-postmerge:1.81
	cygwin-64bit-premerge-branch:1.81.0.4
	cygwin-64bit-premerge:1.81
	cygwin-1_7_18-release:1.81
	newlib-2_0_0:1.81
	cygwin-1_7_17-release:1.81
	cygwin-64bit-branch:1.81.0.2
	cygwin-1_7_16-release:1.81
	cygwin-1_7_15-release:1.80
	cygwin-1_7_14_2-release:1.80
	cygwin-1_7_14-release:1.80
	cygwin-1_7_12-release:1.80
	cygwin-1_7_11-release:1.80
	cygwin-1_7_10-release:1.80
	newlib-1_20_0:1.79
	cygwin-1_7_9-release:1.77
	cygwin-1_7_8-release:1.77
	newlib-1_19_0:1.77
	cygwin-1_7_7-release:1.76
	cygwin-1_7_5-release:1.76
	cygwin-1_7_4-release:1.76
	cygwin-1_7_3-release:1.76
	cygwin-1_7_2-release:1.76
	newlib-1_18_0:1.74
	cygwin-1_7_1-release:1.72
	newlib-1_17_0-arc:1.68.0.2
	binutils-arc-20080908-branch:1.66.0.2
	binutils-arc-20080908-branchpoint:1.66
	newlib-1_17_0:1.68
	newlib-1_16_0:1.63
	newlib-1_15_0:1.57
	newlib-csl-coldfire-4_1-32:1.56
	newlib-csl-sourcerygxx-4_1-32:1.56
	newlib-csl-innovasic-fido-3_4_4-33:1.56
	newlib-csl-coldfire-4_1-30:1.56
	newlib-csl-sourcerygxx-4_1-30:1.56
	newlib-csl-coldfire-4_1-28:1.56
	newlib-csl-sourcerygxx-4_1-28:1.56
	newlib-csl-arm-2006q3-27:1.56
	newlib-csl-sourcerygxx-4_1-27:1.56
	newlib-csl-arm-2006q3-26:1.56
	newlib-csl-sourcerygxx-4_1-26:1.56
	newlib-csl-sourcerygxx-4_1-24:1.56
	newlib-csl-sourcerygxx-4_1-23:1.56
	newlib-csl-sourcerygxx-4_1-21:1.56
	newlib-csl-arm-2006q3-21:1.56
	newlib-csl-arm-2006q3-19:1.56
	newlib-csl-sourcerygxx-4_1-19:1.56
	newlib-csl-sourcerygxx-4_1-18:1.56
	newlib-csl-sourcerygxx-3_4_4-25:1.56
	newlib-csl-sourcerygxx-4_1-17:1.56
	cr-0x5f1:1.56.0.6
	newlib-csl-sourcerygxx-4_1-14:1.56
	newlib-csl-sourcerygxx-4_1-13:1.56
	newlib-csl-sourcerygxx-4_1-12:1.56
	newlib-csl-sourcerygxx-4_1-9:1.56
	newlib-csl-sourcerygxx-4_1-8:1.56
	newlib-csl-sourcerygxx-4_1-7:1.56
	newlib-csl-arm-2006q1-6:1.56
	newlib-csl-sourcerygxx-4_1-6:1.56
	newlib-csl-sourcerygxx-4_1-5:1.56
	newlib-csl-sourcerygxx-4_1-4:1.56
	newlib-autotools-branch:1.56.0.4
	newlib-csl-20060320-branch:1.56.0.2
	newlib-csl-20060320-branchpoint:1.56
	newlib-1_14_0:1.56
	newlib-csl-arm-2005-q1b:1.55
	newlib-csl-arm-2005-q1a:1.55
	newlib-1_13_0:1.53
	csl-arm-2004-q3:1.53
	csl-arm-2004-q1a:1.52
	csl-arm-2004-q1:1.49
	newlib-1_12_0:1.48
	csl-arm-2003-q4:1.47
	w32api-2_2:1.39
	mingw-runtime-2_4:1.39
	newlib-1_11_0:1.36
	cygnus_cvs_20020108_pre:1.29
	newlib-1_10_0:1.29
	newlib-1_9_0:1.13
	newlib-2000-02-17:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.89
date	2015.01.14.21.19.26;	author jjohnstn;	state Exp;
branches;
next	1.88;

1.88
date	2014.10.27.14.35.46;	author corinna;	state Exp;
branches;
next	1.87;

1.87
date	2014.08.01.15.44.50;	author ericb;	state Exp;
branches;
next	1.86;

1.86
date	2014.01.06.20.59.38;	author jjohnstn;	state Exp;
branches;
next	1.85;

1.85
date	2013.11.22.22.39.51;	author joel;	state Exp;
branches;
next	1.84;

1.84
date	2013.11.18.10.04.56;	author mshawcroft;	state Exp;
branches;
next	1.83;

1.83
date	2013.11.18.09.53.46;	author mshawcroft;	state Exp;
branches;
next	1.82;

1.82
date	2013.10.18.08.30.28;	author corinna;	state Exp;
branches;
next	1.81;

1.81
date	2012.07.06.10.41.21;	author corinna;	state Exp;
branches;
next	1.80;

1.80
date	2012.01.09.22.49.20;	author yselkowitz;	state Exp;
branches;
next	1.79;

1.79
date	2011.08.19.14.29.34;	author corinna;	state Exp;
branches;
next	1.78;

1.78
date	2011.07.20.01.14.50;	author yselkowitz;	state Exp;
branches;
next	1.77;

1.77
date	2010.10.08.15.28.49;	author corinna;	state Exp;
branches;
next	1.76;

1.76
date	2010.01.14.18.49.13;	author corinna;	state Exp;
branches;
next	1.75;

1.75
date	2009.12.22.13.07.24;	author ericb;	state Exp;
branches;
next	1.74;

1.74
date	2009.12.17.19.43.43;	author jjohnstn;	state Exp;
branches;
next	1.73;

1.73
date	2009.12.08.13.50.41;	author ericb;	state Exp;
branches;
next	1.72;

1.72
date	2009.10.14.04.15.25;	author ericb;	state Exp;
branches;
next	1.71;

1.71
date	2009.09.26.20.59.54;	author ericb;	state Exp;
branches;
next	1.70;

1.70
date	2009.09.25.23.57.09;	author ericb;	state Exp;
branches;
next	1.69;

1.69
date	2009.09.19.02.30.51;	author cgf;	state Exp;
branches;
next	1.68;

1.68
date	2008.10.16.23.03.40;	author jjohnstn;	state Exp;
branches;
next	1.67;

1.67
date	2008.10.15.21.37.54;	author jjohnstn;	state Exp;
branches;
next	1.66;

1.66
date	2008.04.23.11.13.24;	author corinna;	state Exp;
branches;
next	1.65;

1.65
date	2008.03.27.09.55.05;	author corinna;	state Exp;
branches;
next	1.64;

1.64
date	2008.01.03.22.33.37;	author jjohnstn;	state Exp;
branches;
next	1.63;

1.63
date	2007.11.08.16.20.12;	author corinna;	state Exp;
branches;
next	1.62;

1.62
date	2007.06.20.21.49.06;	author jjohnstn;	state Exp;
branches;
next	1.61;

1.61
date	2007.06.20.17.30.58;	author jjohnstn;	state Exp;
branches;
next	1.60;

1.60
date	2007.06.13.17.44.24;	author jjohnstn;	state Exp;
branches;
next	1.59;

1.59
date	2007.06.11.17.33.43;	author corinna;	state Exp;
branches;
next	1.58;

1.58
date	2007.02.07.17.19.35;	author corinna;	state Exp;
branches;
next	1.57;

1.57
date	2006.11.07.15.33.40;	author corinna;	state Exp;
branches;
next	1.56;

1.56
date	2005.11.03.16.52.15;	author jjohnstn;	state Exp;
branches
	1.56.6.1;
next	1.55;

1.55
date	2005.02.23.17.42.07;	author corinna;	state Exp;
branches;
next	1.54;

1.54
date	2005.02.22.15.31.51;	author corinna;	state Exp;
branches;
next	1.53;

1.53
date	2004.08.23.18.39.52;	author jjohnstn;	state Exp;
branches;
next	1.52;

1.52
date	2004.04.20.11.14.02;	author corinna;	state Exp;
branches;
next	1.51;

1.51
date	2004.04.20.11.09.36;	author corinna;	state Exp;
branches;
next	1.50;

1.50
date	2004.04.10.20.39.47;	author corinna;	state Exp;
branches;
next	1.49;

1.49
date	2004.02.09.02.22.01;	author cgf;	state Exp;
branches;
next	1.48;

1.48
date	2004.01.08.19.25.21;	author jjohnstn;	state Exp;
branches;
next	1.47;

1.47
date	2003.11.26.19.15.17;	author jjohnstn;	state Exp;
branches;
next	1.46;

1.46
date	2003.11.18.19.17.17;	author jjohnstn;	state Exp;
branches;
next	1.45;

1.45
date	2003.09.10.15.53.44;	author corinna;	state Exp;
branches;
next	1.44;

1.44
date	2003.07.10.15.31.30;	author amylaar;	state Exp;
branches;
next	1.43;

1.43
date	2003.04.15.20.13.49;	author cgf;	state Exp;
branches;
next	1.42;

1.42
date	2003.03.14.18.39.05;	author corinna;	state Exp;
branches;
next	1.41;

1.41
date	2003.03.09.21.08.51;	author corinna;	state Exp;
branches;
next	1.40;

1.40
date	2003.03.08.04.57.41;	author cgf;	state Exp;
branches;
next	1.39;

1.39
date	2003.01.24.15.25.24;	author corinna;	state Exp;
branches;
next	1.38;

1.38
date	2003.01.20.15.28.02;	author cgf;	state Exp;
branches;
next	1.37;

1.37
date	2002.12.28.23.20.47;	author cgf;	state Exp;
branches;
next	1.36;

1.36
date	2002.08.18.06.08.39;	author cgf;	state Exp;
branches;
next	1.35;

1.35
date	2002.08.17.05.19.17;	author jjohnstn;	state Exp;
branches;
next	1.34;

1.34
date	2002.07.30.11.35.03;	author corinna;	state Exp;
branches;
next	1.33;

1.33
date	2002.07.19.20.36.05;	author fitzsim;	state Exp;
branches;
next	1.32;

1.32
date	2002.05.04.02.22.01;	author cgf;	state Exp;
branches;
next	1.31;

1.31
date	2002.04.29.19.31.20;	author jjohnstn;	state Exp;
branches;
next	1.30;

1.30
date	2002.04.04.22.41.11;	author jjohnstn;	state Exp;
branches;
next	1.29;

1.29
date	2001.12.06.19.00.14;	author cgf;	state Exp;
branches;
next	1.28;

1.28
date	2001.11.28.00.16.58;	author cgf;	state Exp;
branches;
next	1.27;

1.27
date	2001.11.05.18.06.24;	author corinna;	state Exp;
branches;
next	1.26;

1.26
date	2001.10.17.19.28.35;	author corinna;	state Exp;
branches;
next	1.25;

1.25
date	2001.10.17.18.16.43;	author corinna;	state Exp;
branches;
next	1.24;

1.24
date	2001.08.29.20.09.31;	author jjohnstn;	state Exp;
branches;
next	1.23;

1.23
date	2001.08.29.19.47.43;	author jjohnstn;	state Exp;
branches;
next	1.22;

1.22
date	2001.05.08.01.15.06;	author cgf;	state Exp;
branches;
next	1.21;

1.21
date	2001.04.22.23.52.06;	author cgf;	state Exp;
branches;
next	1.20;

1.20
date	2001.04.13.15.37.47;	author cgf;	state Exp;
branches;
next	1.19;

1.19
date	2001.03.20.19.27.56;	author cgf;	state Exp;
branches;
next	1.18;

1.18
date	2001.03.19.10.54.55;	author corinna;	state Exp;
branches;
next	1.17;

1.17
date	2001.03.06.01.04.42;	author jjohnstn;	state Exp;
branches;
next	1.16;

1.16
date	2001.03.05.05.13.06;	author cgf;	state Exp;
branches;
next	1.15;

1.15
date	2001.02.09.00.13.54;	author jjohnstn;	state Exp;
branches;
next	1.14;

1.14
date	2001.01.18.04.24.03;	author cgf;	state Exp;
branches;
next	1.13;

1.13
date	2000.12.14.01.07.23;	author corinna;	state Exp;
branches;
next	1.12;

1.12
date	2000.12.12.23.41.23;	author jjohnstn;	state Exp;
branches;
next	1.11;

1.11
date	2000.12.12.01.24.08;	author jjohnstn;	state Exp;
branches;
next	1.10;

1.10
date	2000.11.21.23.57.25;	author jjohnstn;	state Exp;
branches;
next	1.9;

1.9
date	2000.10.24.18.27.54;	author corinna;	state Exp;
branches;
next	1.8;

1.8
date	2000.10.10.00.28.49;	author cgf;	state Exp;
branches;
next	1.7;

1.7
date	2000.08.25.20.14.45;	author dj;	state Exp;
branches;
next	1.6;

1.6
date	2000.08.24.22.32.38;	author jjohnstn;	state Exp;
branches;
next	1.5;

1.5
date	2000.08.01.20.51.51;	author dj;	state Exp;
branches;
next	1.4;

1.4
date	2000.06.16.21.04.37;	author corinna;	state Exp;
branches;
next	1.3;

1.3
date	2000.05.30.17.18.05;	author cgf;	state Exp;
branches;
next	1.2;

1.2
date	2000.04.02.20.42.42;	author corinna;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.39.46;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.56.6.1
date	2007.11.12.15.25.48;	author corinna;	state Exp;
branches;
next	1.56.6.2;

1.56.6.2
date	2007.11.14.15.57.45;	author corinna;	state Exp;
branches;
next	;

1.1.1.1
date	2000.02.17.19.39.46;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.89
log
@
2015-01-14  Joel Sherrill <joel.sherrill@@oarcorp.com>

        * libc/include/sys/unistd.h [__BSD_VISIBLE]: Add issetugid() prototype.
@
text
@#ifndef _SYS_UNISTD_H
#define _SYS_UNISTD_H

#ifdef __cplusplus
extern "C" {
#endif

#include <_ansi.h>
#define __need_size_t
#define __need_ptrdiff_t
#include <sys/cdefs.h>
#include <sys/types.h>
#include <sys/_types.h>
#include <stddef.h>

extern char **environ;

void	_EXFUN(_exit, (int __status ) _ATTRIBUTE ((__noreturn__)));

int	_EXFUN(access,(const char *__path, int __amode ));
unsigned  _EXFUN(alarm, (unsigned __secs ));
int     _EXFUN(chdir, (const char *__path ));
int     _EXFUN(chmod, (const char *__path, mode_t __mode ));
#if !defined(__INSIDE_CYGWIN__)
int     _EXFUN(chown, (const char *__path, uid_t __owner, gid_t __group ));
#endif
#if defined(__CYGWIN__) || defined(__rtems__)
int     _EXFUN(chroot, (const char *__path ));
#endif
int     _EXFUN(close, (int __fildes ));
#if defined(__CYGWIN__)
size_t	_EXFUN(confstr, (int __name, char *__buf, size_t __len));
#endif
char *  _EXFUN(ctermid, (char *__s ));
char *  _EXFUN(cuserid, (char *__s ));
#if defined(__CYGWIN__)
int	_EXFUN(daemon, (int nochdir, int noclose));
#endif
int     _EXFUN(dup, (int __fildes ));
int     _EXFUN(dup2, (int __fildes, int __fildes2 ));
#if defined(__CYGWIN__)
int     _EXFUN(dup3, (int __fildes, int __fildes2, int flags));
int	_EXFUN(eaccess, (const char *__path, int __mode));
void	_EXFUN(endusershell, (void));
int	_EXFUN(euidaccess, (const char *__path, int __mode));
#endif
int     _EXFUN(execl, (const char *__path, const char *, ... ));
int     _EXFUN(execle, (const char *__path, const char *, ... ));
int     _EXFUN(execlp, (const char *__file, const char *, ... ));
#if defined(__CYGWIN__)
int     _EXFUN(execlpe, (const char *__file, const char *, ... ));
#endif
int     _EXFUN(execv, (const char *__path, char * const __argv[] ));
int     _EXFUN(execve, (const char *__path, char * const __argv[], char * const __envp[] ));
int     _EXFUN(execvp, (const char *__file, char * const __argv[] ));
#if defined(__CYGWIN__)
int     _EXFUN(execvpe, (const char *__file, char * const __argv[], char * const __envp[] ));
#endif
#if __POSIX_VISIBLE >= 200809 || __BSD_VISIBLE || defined(__CYGWIN__)
int	_EXFUN(faccessat, (int __dirfd, const char *__path, int __mode, int __flags));
#endif
#if defined(__CYGWIN__) || defined(__rtems__) || defined(__SPU__)
int     _EXFUN(fchdir, (int __fildes));
#endif
int     _EXFUN(fchmod, (int __fildes, mode_t __mode ));
#if !defined(__INSIDE_CYGWIN__)
int     _EXFUN(fchown, (int __fildes, uid_t __owner, gid_t __group ));
#endif
#if __POSIX_VISIBLE >= 200809 || __BSD_VISIBLE || defined(__CYGWIN__)
int	_EXFUN(fchownat, (int __dirfd, const char *__path, uid_t __owner, gid_t __group, int __flags));
#endif
#if defined(__CYGWIN__)
int	_EXFUN(fexecve, (int __fd, char * const __argv[], char * const __envp[] ));
#endif
pid_t   _EXFUN(fork, (void ));
long    _EXFUN(fpathconf, (int __fd, int __name ));
int     _EXFUN(fsync, (int __fd));
int     _EXFUN(fdatasync, (int __fd));
#if defined(__CYGWIN__)
char *  _EXFUN(get_current_dir_name, (void));
#endif
char *  _EXFUN(getcwd, (char *__buf, size_t __size ));
#if defined(__CYGWIN__)
int	_EXFUN(getdomainname ,(char *__name, size_t __len));
#endif
#if !defined(__INSIDE_CYGWIN__)
gid_t   _EXFUN(getegid, (void ));
uid_t   _EXFUN(geteuid, (void ));
gid_t   _EXFUN(getgid, (void ));
#endif
int     _EXFUN(getgroups, (int __gidsetsize, gid_t __grouplist[] ));
#if defined(__CYGWIN__)
long    _EXFUN(gethostid, (void));
#endif
char *  _EXFUN(getlogin, (void ));
#if defined(_POSIX_THREAD_SAFE_FUNCTIONS)
int _EXFUN(getlogin_r, (char *name, size_t namesize) );
#endif
char *  _EXFUN(getpass, (const char *__prompt));
int	_EXFUN(getpagesize, (void));
#if defined(__CYGWIN__)
int    _EXFUN(getpeereid, (int, uid_t *, gid_t *));
#endif
pid_t   _EXFUN(getpgid, (pid_t));
pid_t   _EXFUN(getpgrp, (void ));
pid_t   _EXFUN(getpid, (void ));
pid_t   _EXFUN(getppid, (void ));
#if defined(__CYGWIN__) || defined(__rtems__)
pid_t   _EXFUN(getsid, (pid_t));
#endif
#if !defined(__INSIDE_CYGWIN__)
uid_t   _EXFUN(getuid, (void ));
#endif
#ifdef __CYGWIN__
char *	_EXFUN(getusershell, (void));
char *  _EXFUN(getwd, (char *__buf ));
int	_EXFUN(iruserok, (unsigned long raddr, int superuser, const char *ruser, const char *luser));
#endif
int     _EXFUN(isatty, (int __fildes ));
#if __BSD_VISIBLE
int        _EXFUN(issetugid, (void));
#endif
#if !defined(__INSIDE_CYGWIN__)
int     _EXFUN(lchown, (const char *__path, uid_t __owner, gid_t __group ));
#endif
int     _EXFUN(link, (const char *__path1, const char *__path2 ));
#if __POSIX_VISIBLE >= 200809 || __BSD_VISIBLE || defined(__CYGWIN__)
int     _EXFUN(linkat, (int __dirfd1, const char *__path1, int __dirfd2, const char *__path2, int __flags ));
#endif
int	_EXFUN(nice, (int __nice_value ));
#if !defined(__INSIDE_CYGWIN__)
off_t   _EXFUN(lseek, (int __fildes, off_t __offset, int __whence ));
#endif
#if defined(__SPU__) || defined(__CYGWIN__)
#define F_ULOCK	0
#define F_LOCK	1
#define F_TLOCK	2
#define F_TEST	3
int     _EXFUN(lockf, (int __fd, int __cmd, off_t __len));
#endif
long    _EXFUN(pathconf, (const char *__path, int __name ));
int     _EXFUN(pause, (void ));
#ifdef __CYGWIN__
int	_EXFUN(pthread_atfork, (void (*)(void), void (*)(void), void (*)(void)));
#endif
int     _EXFUN(pipe, (int __fildes[2] ));
#ifdef __CYGWIN__
int     _EXFUN(pipe2, (int __fildes[2], int flags));
#endif
ssize_t _EXFUN(pread, (int __fd, void *__buf, size_t __nbytes, off_t __offset));
ssize_t _EXFUN(pwrite, (int __fd, const void *__buf, size_t __nbytes, off_t __offset));
_READ_WRITE_RETURN_TYPE _EXFUN(read, (int __fd, void *__buf, size_t __nbyte ));
#if defined(__CYGWIN__)
int	_EXFUN(rresvport, (int *__alport));
int	_EXFUN(revoke, (char *__path));
#endif
int     _EXFUN(rmdir, (const char *__path ));
#if defined(__CYGWIN__)
int	_EXFUN(ruserok, (const char *rhost, int superuser, const char *ruser, const char *luser));
#endif
void *  _EXFUN(sbrk,  (ptrdiff_t __incr));
#if !defined(__INSIDE_CYGWIN__)
#if defined(__CYGWIN__) || defined(__rtems__)
int     _EXFUN(setegid, (gid_t __gid ));
int     _EXFUN(seteuid, (uid_t __uid ));
#endif
int     _EXFUN(setgid, (gid_t __gid ));
#endif
#if defined(__CYGWIN__)
int	_EXFUN(setgroups, (int ngroups, const gid_t *grouplist ));
#endif
#if __BSD_VISIBLE || (defined(_XOPEN_SOURCE) && __XSI_VISIBLE < 500)
int	_EXFUN(sethostname, (const char *, size_t));
#endif
int     _EXFUN(setpgid, (pid_t __pid, pid_t __pgid ));
int     _EXFUN(setpgrp, (void ));
#if defined(__CYGWIN__) && !defined(__INSIDE_CYGWIN__)
int	_EXFUN(setregid, (gid_t __rgid, gid_t __egid));
int	_EXFUN(setreuid, (uid_t __ruid, uid_t __euid));
#endif
pid_t   _EXFUN(setsid, (void ));
#if !defined(__INSIDE_CYGWIN__)
int     _EXFUN(setuid, (uid_t __uid ));
#endif
#if defined(__CYGWIN__)
void	_EXFUN(setusershell, (void));
#endif
unsigned _EXFUN(sleep, (unsigned int __seconds ));
void    _EXFUN(swab, (const void *__restrict, void *__restrict, ssize_t));
long    _EXFUN(sysconf, (int __name ));
pid_t   _EXFUN(tcgetpgrp, (int __fildes ));
int     _EXFUN(tcsetpgrp, (int __fildes, pid_t __pgrp_id ));
char *  _EXFUN(ttyname, (int __fildes ));
#if defined(__CYGWIN__) || defined(__rtems__)
int     _EXFUN(ttyname_r, (int, char *, size_t)); 
#endif
int     _EXFUN(unlink, (const char *__path ));
int 	_EXFUN(usleep, (useconds_t __useconds));
int     _EXFUN(vhangup, (void ));
_READ_WRITE_RETURN_TYPE _EXFUN(write, (int __fd, const void *__buf, size_t __nbyte ));

#ifdef __CYGWIN__
# define __UNISTD_GETOPT__
# include <getopt.h>
# undef __UNISTD_GETOPT__
#else
extern char *optarg;			/* getopt(3) external variables */
extern int optind, opterr, optopt;
int	 getopt(int, char * const [], const char *);
extern int optreset;			/* getopt(3) external variable */
#endif

#ifndef        _POSIX_SOURCE
pid_t   _EXFUN(vfork, (void ));
#endif /* _POSIX_SOURCE */

#ifdef _COMPILING_NEWLIB
/* Provide prototypes for most of the _<systemcall> names that are
   provided in newlib for some compilers.  */
int     _EXFUN(_close, (int __fildes ));
pid_t   _EXFUN(_fork, (void ));
pid_t   _EXFUN(_getpid, (void ));
int	_EXFUN(_isatty, (int __fildes ));
int     _EXFUN(_link, (const char *__path1, const char *__path2 ));
_off_t   _EXFUN(_lseek, (int __fildes, _off_t __offset, int __whence ));
#ifdef __LARGE64_FILES
_off64_t _EXFUN(_lseek64, (int __filedes, _off64_t __offset, int __whence ));
#endif
_READ_WRITE_RETURN_TYPE _EXFUN(_read, (int __fd, void *__buf, size_t __nbyte ));
void *  _EXFUN(_sbrk,  (ptrdiff_t __incr));
int     _EXFUN(_unlink, (const char *__path ));
_READ_WRITE_RETURN_TYPE _EXFUN(_write, (int __fd, const void *__buf, size_t __nbyte ));
int     _EXFUN(_execve, (const char *__path, char * const __argv[], char * const __envp[] ));
#endif

#if defined(__CYGWIN__) || defined(__rtems__) || defined(__aarch64__) || defined (__arm__) || defined(__sh__) || defined(__SPU__)
#if !defined(__INSIDE_CYGWIN__)
int     _EXFUN(ftruncate, (int __fd, off_t __length));
int     _EXFUN(truncate, (const char *, off_t __length));
#endif
#endif

#if defined(__CYGWIN__) || defined(__rtems__)
int	_EXFUN(getdtablesize, (void));
int	_EXFUN(setdtablesize, (int));
useconds_t _EXFUN(ualarm, (useconds_t __useconds, useconds_t __interval));
#if !(defined  (_WINSOCK_H) || defined (_WINSOCKAPI_) || defined (__USE_W32_SOCKETS))
/* winsock[2].h defines as __stdcall, and with int as 2nd arg */
 int	_EXFUN(gethostname, (char *__name, size_t __len));
#endif
char *	_EXFUN(mktemp, (char *));
#endif

#if defined(__CYGWIN__) || defined(__SPU__) || defined(__rtems__)
void    _EXFUN(sync, (void));
#endif

ssize_t _EXFUN(readlink, (const char *__restrict __path,
                          char *__restrict __buf, size_t __buflen));
#if __POSIX_VISIBLE >= 200809 || __BSD_VISIBLE || defined(__CYGWIN__)
ssize_t        _EXFUN(readlinkat, (int __dirfd1, const char *__restrict __path,
                            char *__restrict __buf, size_t __buflen));
#endif
int     _EXFUN(symlink, (const char *__name1, const char *__name2));
#if __POSIX_VISIBLE >= 200809 || __BSD_VISIBLE || defined(__CYGWIN__)
int	_EXFUN(symlinkat, (const char *, int, const char *));
int	_EXFUN(unlinkat, (int, const char *, int));
#endif

#define	F_OK	0
#define	R_OK	4
#define	W_OK	2
#define	X_OK	1

# define	SEEK_SET	0
# define	SEEK_CUR	1
# define	SEEK_END	2

#include <sys/features.h>

#define STDIN_FILENO    0       /* standard input file descriptor */
#define STDOUT_FILENO   1       /* standard output file descriptor */
#define STDERR_FILENO   2       /* standard error file descriptor */

/*
 *  sysconf values per IEEE Std 1003.1, 2008 Edition
 */

#define _SC_ARG_MAX                       0
#define _SC_CHILD_MAX                     1
#define _SC_CLK_TCK                       2
#define _SC_NGROUPS_MAX                   3
#define _SC_OPEN_MAX                      4
#define _SC_JOB_CONTROL                   5
#define _SC_SAVED_IDS                     6
#define _SC_VERSION                       7
#define _SC_PAGESIZE                      8
#define _SC_PAGE_SIZE                     _SC_PAGESIZE
/* These are non-POSIX values we accidentally introduced in 2000 without
   guarding them.  Keeping them unguarded for backward compatibility. */
#define _SC_NPROCESSORS_CONF              9
#define _SC_NPROCESSORS_ONLN             10
#define _SC_PHYS_PAGES                   11
#define _SC_AVPHYS_PAGES                 12
/* End of non-POSIX values. */
#define _SC_MQ_OPEN_MAX                  13
#define _SC_MQ_PRIO_MAX                  14
#define _SC_RTSIG_MAX                    15
#define _SC_SEM_NSEMS_MAX                16
#define _SC_SEM_VALUE_MAX                17
#define _SC_SIGQUEUE_MAX                 18
#define _SC_TIMER_MAX                    19
#define _SC_TZNAME_MAX                   20
#define _SC_ASYNCHRONOUS_IO              21
#define _SC_FSYNC                        22
#define _SC_MAPPED_FILES                 23
#define _SC_MEMLOCK                      24
#define _SC_MEMLOCK_RANGE                25
#define _SC_MEMORY_PROTECTION            26
#define _SC_MESSAGE_PASSING              27
#define _SC_PRIORITIZED_IO               28
#define _SC_REALTIME_SIGNALS             29
#define _SC_SEMAPHORES                   30
#define _SC_SHARED_MEMORY_OBJECTS        31
#define _SC_SYNCHRONIZED_IO              32
#define _SC_TIMERS                       33
#define _SC_AIO_LISTIO_MAX               34
#define _SC_AIO_MAX                      35
#define _SC_AIO_PRIO_DELTA_MAX           36
#define _SC_DELAYTIMER_MAX               37
#define _SC_THREAD_KEYS_MAX              38
#define _SC_THREAD_STACK_MIN             39
#define _SC_THREAD_THREADS_MAX           40
#define _SC_TTY_NAME_MAX                 41
#define _SC_THREADS                      42
#define _SC_THREAD_ATTR_STACKADDR        43
#define _SC_THREAD_ATTR_STACKSIZE        44
#define _SC_THREAD_PRIORITY_SCHEDULING   45
#define _SC_THREAD_PRIO_INHERIT          46
/* _SC_THREAD_PRIO_PROTECT was _SC_THREAD_PRIO_CEILING in early drafts */
#define _SC_THREAD_PRIO_PROTECT          47
#define _SC_THREAD_PRIO_CEILING          _SC_THREAD_PRIO_PROTECT
#define _SC_THREAD_PROCESS_SHARED        48
#define _SC_THREAD_SAFE_FUNCTIONS        49
#define _SC_GETGR_R_SIZE_MAX             50
#define _SC_GETPW_R_SIZE_MAX             51
#define _SC_LOGIN_NAME_MAX               52
#define _SC_THREAD_DESTRUCTOR_ITERATIONS 53
#define _SC_ADVISORY_INFO                54
#define _SC_ATEXIT_MAX                   55
#define _SC_BARRIERS                     56
#define _SC_BC_BASE_MAX                  57
#define _SC_BC_DIM_MAX                   58
#define _SC_BC_SCALE_MAX                 59
#define _SC_BC_STRING_MAX                60
#define _SC_CLOCK_SELECTION              61
#define _SC_COLL_WEIGHTS_MAX             62
#define _SC_CPUTIME                      63
#define _SC_EXPR_NEST_MAX                64
#define _SC_HOST_NAME_MAX                65
#define _SC_IOV_MAX                      66
#define _SC_IPV6                         67
#define _SC_LINE_MAX                     68
#define _SC_MONOTONIC_CLOCK              69
#define _SC_RAW_SOCKETS                  70
#define _SC_READER_WRITER_LOCKS          71
#define _SC_REGEXP                       72
#define _SC_RE_DUP_MAX                   73
#define _SC_SHELL                        74
#define _SC_SPAWN                        75
#define _SC_SPIN_LOCKS                   76
#define _SC_SPORADIC_SERVER              77
#define _SC_SS_REPL_MAX                  78
#define _SC_SYMLOOP_MAX                  79
#define _SC_THREAD_CPUTIME               80
#define _SC_THREAD_SPORADIC_SERVER       81
#define _SC_TIMEOUTS                     82
#define _SC_TRACE                        83
#define _SC_TRACE_EVENT_FILTER           84
#define _SC_TRACE_EVENT_NAME_MAX         85
#define _SC_TRACE_INHERIT                86
#define _SC_TRACE_LOG                    87
#define _SC_TRACE_NAME_MAX               88
#define _SC_TRACE_SYS_MAX                89
#define _SC_TRACE_USER_EVENT_MAX         90
#define _SC_TYPED_MEMORY_OBJECTS         91
#define _SC_V7_ILP32_OFF32               92
#define _SC_V6_ILP32_OFF32               _SC_V7_ILP32_OFF32
#define _SC_XBS5_ILP32_OFF32             _SC_V7_ILP32_OFF32
#define _SC_V7_ILP32_OFFBIG              93
#define _SC_V6_ILP32_OFFBIG              _SC_V7_ILP32_OFFBIG
#define _SC_XBS5_ILP32_OFFBIG            _SC_V7_ILP32_OFFBIG
#define _SC_V7_LP64_OFF64                94
#define _SC_V6_LP64_OFF64                _SC_V7_LP64_OFF64
#define _SC_XBS5_LP64_OFF64              _SC_V7_LP64_OFF64
#define _SC_V7_LPBIG_OFFBIG              95
#define _SC_V6_LPBIG_OFFBIG              _SC_V7_LPBIG_OFFBIG
#define _SC_XBS5_LPBIG_OFFBIG            _SC_V7_LPBIG_OFFBIG
#define _SC_XOPEN_CRYPT                  96
#define _SC_XOPEN_ENH_I18N               97
#define _SC_XOPEN_LEGACY                 98
#define _SC_XOPEN_REALTIME               99
#define _SC_STREAM_MAX                  100
#define _SC_PRIORITY_SCHEDULING         101
#define _SC_XOPEN_REALTIME_THREADS      102
#define _SC_XOPEN_SHM                   103
#define _SC_XOPEN_STREAMS               104
#define _SC_XOPEN_UNIX                  105
#define _SC_XOPEN_VERSION               106
#define _SC_2_CHAR_TERM                 107
#define _SC_2_C_BIND                    108
#define _SC_2_C_DEV                     109
#define _SC_2_FORT_DEV                  110
#define _SC_2_FORT_RUN                  111
#define _SC_2_LOCALEDEF                 112
#define _SC_2_PBS                       113
#define _SC_2_PBS_ACCOUNTING            114
#define _SC_2_PBS_CHECKPOINT            115
#define _SC_2_PBS_LOCATE                116
#define _SC_2_PBS_MESSAGE               117
#define _SC_2_PBS_TRACK                 118
#define _SC_2_SW_DEV                    119
#define _SC_2_UPE                       120
#define _SC_2_VERSION                   121
#define _SC_THREAD_ROBUST_PRIO_INHERIT  122
#define _SC_THREAD_ROBUST_PRIO_PROTECT  123
#define _SC_XOPEN_UUCP                  124

/*
 *  pathconf values per IEEE Std 1003.1, 2008 Edition
 */

#define _PC_LINK_MAX                      0
#define _PC_MAX_CANON                     1
#define _PC_MAX_INPUT                     2
#define _PC_NAME_MAX                      3
#define _PC_PATH_MAX                      4
#define _PC_PIPE_BUF                      5
#define _PC_CHOWN_RESTRICTED              6
#define _PC_NO_TRUNC                      7
#define _PC_VDISABLE                      8
#define _PC_ASYNC_IO                      9
#define _PC_PRIO_IO                      10
#define _PC_SYNC_IO                      11
#define _PC_FILESIZEBITS                 12
#define _PC_2_SYMLINKS                   13
#define _PC_SYMLINK_MAX                  14
#define _PC_ALLOC_SIZE_MIN               15
#define _PC_REC_INCR_XFER_SIZE           16
#define _PC_REC_MAX_XFER_SIZE            17
#define _PC_REC_MIN_XFER_SIZE            18
#define _PC_REC_XFER_ALIGN               19
#define _PC_TIMESTAMP_RESOLUTION         20
#ifdef __CYGWIN__
/* Ask for POSIX permission bits support. */
#define _PC_POSIX_PERMISSIONS            90
/* Ask for full POSIX permission support including uid/gid settings. */
#define _PC_POSIX_SECURITY               91
#endif

/*
 *  confstr values per IEEE Std 1003.1, 2004 Edition
 */

#ifdef __CYGWIN__	/* Only defined on Cygwin for now. */
#define _CS_PATH                               0
#define _CS_POSIX_V7_ILP32_OFF32_CFLAGS        1
#define _CS_POSIX_V6_ILP32_OFF32_CFLAGS       _CS_POSIX_V7_ILP32_OFF32_CFLAGS
#define _CS_XBS5_ILP32_OFF32_CFLAGS           _CS_POSIX_V7_ILP32_OFF32_CFLAGS
#define _CS_POSIX_V7_ILP32_OFF32_LDFLAGS       2
#define _CS_POSIX_V6_ILP32_OFF32_LDFLAGS      _CS_POSIX_V7_ILP32_OFF32_LDFLAGS
#define _CS_XBS5_ILP32_OFF32_LDFLAGS          _CS_POSIX_V7_ILP32_OFF32_LDFLAGS
#define _CS_POSIX_V7_ILP32_OFF32_LIBS          3
#define _CS_POSIX_V6_ILP32_OFF32_LIBS         _CS_POSIX_V7_ILP32_OFF32_LIBS
#define _CS_XBS5_ILP32_OFF32_LIBS             _CS_POSIX_V7_ILP32_OFF32_LIBS
#define _CS_XBS5_ILP32_OFF32_LINTFLAGS         4
#define _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS       5
#define _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS      _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
#define _CS_XBS5_ILP32_OFFBIG_CFLAGS          _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
#define _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS      6
#define _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS     _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
#define _CS_XBS5_ILP32_OFFBIG_LDFLAGS         _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
#define _CS_POSIX_V7_ILP32_OFFBIG_LIBS         7
#define _CS_POSIX_V6_ILP32_OFFBIG_LIBS        _CS_POSIX_V7_ILP32_OFFBIG_LIBS
#define _CS_XBS5_ILP32_OFFBIG_LIBS            _CS_POSIX_V7_ILP32_OFFBIG_LIBS
#define _CS_XBS5_ILP32_OFFBIG_LINTFLAGS        8
#define _CS_POSIX_V7_LP64_OFF64_CFLAGS         9
#define _CS_POSIX_V6_LP64_OFF64_CFLAGS        _CS_POSIX_V7_LP64_OFF64_CFLAGS
#define _CS_XBS5_LP64_OFF64_CFLAGS            _CS_POSIX_V7_LP64_OFF64_CFLAGS
#define _CS_POSIX_V7_LP64_OFF64_LDFLAGS       10
#define _CS_POSIX_V6_LP64_OFF64_LDFLAGS       _CS_POSIX_V7_LP64_OFF64_LDFLAGS
#define _CS_XBS5_LP64_OFF64_LDFLAGS           _CS_POSIX_V7_LP64_OFF64_LDFLAGS
#define _CS_POSIX_V7_LP64_OFF64_LIBS          11
#define _CS_POSIX_V6_LP64_OFF64_LIBS          _CS_POSIX_V7_LP64_OFF64_LIBS
#define _CS_XBS5_LP64_OFF64_LIBS              _CS_POSIX_V7_LP64_OFF64_LIBS
#define _CS_XBS5_LP64_OFF64_LINTFLAGS         12
#define _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS      13
#define _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS      _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
#define _CS_XBS5_LPBIG_OFFBIG_CFLAGS          _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
#define _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS     14
#define _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS     _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
#define _CS_XBS5_LPBIG_OFFBIG_LDFLAGS         _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
#define _CS_POSIX_V7_LPBIG_OFFBIG_LIBS        15
#define _CS_POSIX_V6_LPBIG_OFFBIG_LIBS        _CS_POSIX_V7_LPBIG_OFFBIG_LIBS
#define _CS_XBS5_LPBIG_OFFBIG_LIBS            _CS_POSIX_V7_LPBIG_OFFBIG_LIBS
#define _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS       16
#define _CS_POSIX_V7_WIDTH_RESTRICTED_ENVS    17
#define _CS_POSIX_V6_WIDTH_RESTRICTED_ENVS    _CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
#define _CS_XBS5_WIDTH_RESTRICTED_ENVS        _CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
#define _CS_POSIX_V7_THREADS_CFLAGS           18
#define _CS_POSIX_V7_THREADS_LDFLAGS          19
#define _CS_V7_ENV                            20
#define _CS_V6_ENV                            _CS_V7_ENV
#endif

#ifdef __cplusplus
}
#endif
#endif /* _SYS_UNISTD_H */
@


1.88
log
@	* libc/include/sys/unistd.h (sethostname): Declare if
	requested.
@
text
@d120 3
@


1.87
log
@headers: properly decorate attributes

Found by:
find -name '*.h' |xargs grep -i 'attribute.*(([a-z]'

For an example of the type of bugs this causes, try compiling this valid
C11 program (it's valid because 'noreturn' is reserved for use in the
user namespace unless you include <stdnoreturn.h>):

$ cat foo.c
#define noreturn __attribute__((noreturn))
#include <stdlib.h>
$ gcc -c -o foo.o -Wall foo.c
In file included from /usr/include/stdlib.h:11:0,
                 from foo.c:2:
foo.c:1:18: error: expected ')' before '__attribute__'
 #define noreturn __attribute__((noreturn))
                  ^
/usr/include/stdlib.h:66:28: error: expected ',' or ';' before ')' token
 _VOID _EXFUN(abort,(_VOID) _ATTRIBUTE ((noreturn)));
                            ^

* libc/machine/spu/spu_timer_internal.h: Decorate attribute names
with __, for namespace safety.
* libc/machine/xscale/machine/profile.h: Likewise.
* libc/include/stdlib.h: Likewise.
* libc/include/_ansi.h: Likewise.
* libc/include/sys/unistd.h: Likewise.
* libc/sys/linux/linuxthreads/libc-symbols.h: Likewise.
* libc/sys/linux/linuxthreads/internals.h: Likewise.
* libc/sys/linux/machine/i386/weakalias.h: Likewise.
* libc/sys/linux/machine/i386/dl-procinfo.h: Likewise.
* libc/sys/linux/machine/i386/dl-machine.h: Likewise.
* libc/sys/linux/libc-symbols.h: Likewise.
* libc/sys/linux/iconv/gconv_charset.h: Likewise.
* libc/sys/linux/include/resolv.h: Likewise.
* libc/sys/linux/sys/unistd.h: Likewise.
* libc/sys/linux/dl/atomicity.h: Likewise.
* libc/sys/linux/dl/dynamic-link.h: Likewise.
* libc/sys/linux/dl/ldsodefs.h: Likewise.
@
text
@d169 3
@


1.86
log
@
2014-01-06  Sebastian Huber  <sebastian.huber@@embedded-brains.de>

        * libc/include/sys/_default_fcntl.h (AT_FDCWD): Define according
        to POSIX.
        (AT_EACCESS): Likewise.
        (AT_SYMLINK_NOFOLLOW): Likewise.
        (AT_SYMLINK_FOLLOW): Likewise.
        (AT_REMOVEDIR): Likewise.
        (openat): Declare according to POSIX.
        * libc/include/stdio.h (renameat): Likewise.
        * libc/include/sys/stat.h (fchmodat): Likewise.
        (fstatat): Likewise.
        (mkdirat): Likewise.
        (mkfifoat): Likewise.
        (mknodat): Likewise.
        (utimensat): Likewise.
        (futimens): Likewise.
        * libc/include/sys/unistd.h (faccessat): Likewise.
        (fchownat): Likewise.
        (linkat): Likewise.
        (readlinkat): Likewise.
        (symlinkat): Likewise.
        (unlinkat): Likewise.
@
text
@d18 1
a18 1
void	_EXFUN(_exit, (int __status ) _ATTRIBUTE ((noreturn)));
@


1.85
log
@2013-11-22  Chirayu Desai  <chirayudesai1@@gmail.com>

	* libc/include/sys/unistd.h (readlink): Add restrict keyword.
	(readlinkat): Ditto.
	(swab): Ditto.
	* libc/sys/rdos/readlink.c (readlink): Ditto.
	* libc/string/swab.c (swab): Ditto.
@
text
@d9 3
a13 2
#define __need_size_t
#define __need_ptrdiff_t
d58 2
d69 3
a72 1
int	_EXFUN(fchownat, (int __dirfd, const char *__path, uid_t __owner, gid_t __group, int __flags));
d124 1
a124 1
#if defined(__CYGWIN__)
d254 1
a254 1
#if defined(__CYGWIN__)
d259 1
a259 1
#if defined(__CYGWIN__)
@


1.84
log
@[AArch64] Provide ftruncate() and truncate() stubs.
@
text
@d178 1
a178 1
void    _EXFUN(swab, (const void *, void *, ssize_t));
d247 2
a248 1
ssize_t _EXFUN(readlink, (const char *__path, char *__buf, size_t __buflen));
d250 2
a251 1
ssize_t	_EXFUN(readlinkat, (int __dirfd1, const char *__path, char *__buf, size_t __buflen));
@


1.83
log
@[ARM] Provide ftruncate() and truncate() stubs.
@
text
@d225 1
a225 1
#if defined(__CYGWIN__) || defined(__rtems__) || defined (__arm__) || defined(__sh__) || defined(__SPU__)
@


1.82
log
@	* libc/include/sys/unistd.h (MAXPATHLEN): Delete.
	* libc/include/sys/param.h (MAXPATHLEN): Define.
	* libc/sys/rtems/sys/param.h (MAXPATHLEN): Likewise.
	* libc/unix/getcwd.c: Include <sys/param.h> for MAXPATHLEN.
@
text
@d225 1
a225 1
#if defined(__CYGWIN__) || defined(__rtems__) || defined(__sh__) || defined(__SPU__)
@


1.81
log
@	Allow building of Cygwin using Mingw64 SDK headers:
	* libc/include/sys/time.h: Drop _WINSOCK_H guard.  Just use
	_TIMEVAL_DEFINED instead.
	* libc/include/sys/types.h: Check for _WINSOCKAPI_ along with
	_WINSOCK_H.
	* libc/include/sys/unistd.h: Ditto.
@
text
@a502 4
#ifndef __CYGWIN__
# define	MAXPATHLEN	1024
#endif

@


1.80
log
@	* libc/include/sys/unistd.h [__CYGWIN__] (get_current_dir_name):
	Declare.
@
text
@d236 1
a236 1
#if !(defined  (_WINSOCK_H) || defined (__USE_W32_SOCKETS))
@


1.79
log
@	* libc/include/process.h: Remove exec family function declarations.
	Add comment.
	* libc/include/sys/unistd.h (execlpe): Declare for Cygwin.
@
text
@d74 3
@


1.78
log
@* libc/include/sys/unistd.h (_CS_XBS5_WIDTH_RESTRICTED_ENVS): Define.
(_CS_V6_ENV): Fix definition.
@
text
@d49 3
@


1.77
log
@	* libc/include/sys/unistd.h: Declare getsid, setegid, seteuid for RTEMS.
@
text
@d490 1
d494 1
a494 1
#define _CS_V6_ENV                           _CS_V6_ENV
@


1.76
log
@	* libc/include/sys/_default_fcntl.h (O_CLOEXEC): Define as _FNOINHERIT.
	(F_DUPFD_CLOEXEC): Define for Cygwin.
	* libc/include/sys/unistd.h (dup3): Define for Cygwin.
	(pipe2): Ditto.
@
text
@d97 1
a97 1
#ifdef __CYGWIN__
d149 1
a149 1
#if defined(__CYGWIN__)
@


1.75
log
@Fix getsubopt declaration.

* libc/include/sys/unistd.h (suboptarg, getsubopt): Move...
* libc/include/stdlib.h: ...here, to match POSIX for getsubopt.
@
text
@d41 1
d133 3
@


1.74
log
@
2009-12-17  Jerker Back  <jerker.back@@gmail.com>

        * libc/include/_ansi.h: Add new _EXFNPTR macro for using with
        function pointer arguments.
        * libc/iconv/lib/conv.h: Use _EXFNPTR rather than _EXPARM macro.
        * libc/iconv/lib/ucsconv.h: Ditto.
        * libc/include/stdlib.h: Use new _EXFNPTR macro for function pointers.
        * libc/include/sys/reent.h: Ditto.
        * libc/include/sys/unistd.h: Ditto.
        * libc/search/bsearch.c: Ditto.
        * libc/stdio/fseek.c: Ditto.
        * libc/stdio64/fseeko64.c: Ditto.
        * libc/stdlib/atexit.c: Ditto.
        * libc/stdlib/on_exit.c: Ditto.
@
text
@a193 3

extern char *suboptarg;			/* getsubopt(3) external variable */
int	 getsubopt(char **, char * const *, char **);
@


1.73
log
@Fix some *at declarations.

* libc/include/stdio.h (symlinkat): Move this...
* libc/include/sys/_default_fcntl.h (unlinkat): ...and this...
* libc/include/sys/unistd.h (symlinkat, unlinkat): ...here, to
match POSIX.
@
text
@d33 2
a34 2
char    _EXFUN(*ctermid, (char *__s ));
char    _EXFUN(*cuserid, (char *__s ));
d70 1
a70 1
char    _EXFUN(*getcwd, (char *__buf, size_t __size ));
d83 1
a83 1
char    _EXFUN(*getlogin, (void ));
d87 1
a87 1
char 	_EXFUN(*getpass, (const char *__prompt));
d104 1
a104 1
char    _EXFUN(*getwd, (char *__buf ));
d172 1
a172 1
char    _EXFUN(*ttyname, (int __fildes ));
@


1.72
log
@* libc/include/sys/unistd.h: Add _PC*, _CS*, and _SC* constants
new to POSIX 2008.
@
text
@d245 4
@


1.71
log
@* libc/include/sys/unistd.h (execvpe, fexecve) [__CYGWIN__]:
Add declarations.
@
text
@d262 1
a262 1
 *  sysconf values per IEEE Std 1003.1, 2004 Edition
d363 12
a374 8
#define _SC_V6_ILP32_OFF32               92
#define _SC_XBS5_ILP32_OFF32             _SC_V6_ILP32_OFF32
#define _SC_V6_ILP32_OFFBIG              93
#define _SC_XBS5_ILP32_OFFBIG            _SC_V6_ILP32_OFFBIG
#define _SC_V6_LP64_OFF64                94
#define _SC_XBS5_LP64_OFF64              _SC_V6_LP64_OFF64
#define _SC_V6_LPBIG_OFFBIG              95
#define _SC_XBS5_LPBIG_OFFBIG            _SC_V6_LPBIG_OFFBIG
d401 3
d406 1
a406 1
 *  pathconf values per IEEE Std 1003.1, 2004 Edition
d424 6
d443 9
a451 6
#define _CS_POSIX_V6_ILP32_OFF32_CFLAGS        1
#define _CS_XBS5_ILP32_OFF32_CFLAGS           _CS_POSIX_V6_ILP32_OFF32_CFLAGS
#define _CS_POSIX_V6_ILP32_OFF32_LDFLAGS       2
#define _CS_XBS5_ILP32_OFF32_LDFLAGS          _CS_POSIX_V6_ILP32_OFF32_LDFLAGS
#define _CS_POSIX_V6_ILP32_OFF32_LIBS          3
#define _CS_XBS5_ILP32_OFF32_LIBS             _CS_POSIX_V6_ILP32_OFF32_LIBS
d453 9
a461 6
#define _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS       5
#define _CS_XBS5_ILP32_OFFBIG_CFLAGS          _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
#define _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS      6
#define _CS_XBS5_ILP32_OFFBIG_LDFLAGS         _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
#define _CS_POSIX_V6_ILP32_OFFBIG_LIBS         7
#define _CS_XBS5_ILP32_OFFBIG_LIBS            _CS_POSIX_V6_ILP32_OFFBIG_LIBS
d463 9
a471 6
#define _CS_POSIX_V6_LP64_OFF64_CFLAGS         9
#define _CS_XBS5_LP64_OFF64_CFLAGS            _CS_POSIX_V6_LP64_OFF64_CFLAGS
#define _CS_POSIX_V6_LP64_OFF64_LDFLAGS       10
#define _CS_XBS5_LP64_OFF64_LDFLAGS           _CS_POSIX_V6_LP64_OFF64_LDFLAGS
#define _CS_POSIX_V6_LP64_OFF64_LIBS          11
#define _CS_XBS5_LP64_OFF64_LIBS              _CS_POSIX_V6_LP64_OFF64_LIBS
d473 9
a481 6
#define _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS      13
#define _CS_XBS5_LPBIG_OFFBIG_CFLAGS          _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
#define _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS     14
#define _CS_XBS5_LPBIG_OFFBIG_LDFLAGS         _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
#define _CS_POSIX_V6_LPBIG_OFFBIG_LIBS        15
#define _CS_XBS5_LPBIG_OFFBIG_LIBS            _CS_POSIX_V6_LPBIG_OFFBIG_LIBS
d483 6
a488 1
#define _CS_POSIX_V6_WIDTH_RESTRICTED_ENVS    17
@


1.70
log
@* libc/include/sys/unistd.h (eaccess, euidaccess) [__CYGWIN__]:
Add declarations.
@
text
@d52 1
d64 1
@


1.69
log
@* libc/include/sys/unistd.h: Declare getpagesize as returning POSIX-mandated
int.
* libc/sys/linux/sys/unistd.h: Ditto.
@
text
@d41 1
d43 1
@


1.68
log
@
2008-10-16  Joel Sherrill <joel.sherrill@@oarcorp.com>

        * libc/include/sys/unistd.h: RTEMS follows standard for sync().
@
text
@d84 1
a84 1
size_t  _EXFUN(getpagesize, (void));
@


1.67
log
@
2008-10-15  Joel Sherrill <joel.sherrill@@oarcorp.com>

        * libc/include/sys/unistd.h: Enable ttyname_r() for RTEMS.
@
text
@d232 1
a232 1
#if defined(__CYGWIN__) || defined(__SPU__)
a233 2
#elif defined(__rtems__)
int     _EXFUN(sync, (void));
@


1.66
log
@	* libc/include/stdio.h (renameat): Declare for Cygwin.
	(symlinkat): Ditto.
	* libc/include/sys/unistd.h (readlink): Align declaration to POSIX.
	(faccessat): Declare for Cygwin.
	(fchownat): Ditto.
	(linkat): Ditto.
	(readlinkat): Ditto.
	* libc/include/sys/_default_fcntl.h (AT_FDCWD): Define for Cygwin.
	(AT_EACCESS): Ditto.
	(AT_SYMLINK_NOFOLLOW): Ditto.
	(AT_SYMLINK_FOLLOW): Ditto.
	(AT_REMOVEDIR): Ditto.
	(futimesat): Declare for Cygwin.
	(openat): Ditto.
	(unlinkat): Ditto.
	* libc/include/sys/stat.h (fchmodat): Ditto.
	(fstatat): Ditto.
	(mkdirat): Ditto.
	(mkfifoat): Ditto.
	(mknodat): Ditto.
@
text
@d169 1
a169 1
#if defined(__CYGWIN__)
@


1.65
log
@	* libc/include/sys/unistd.h: Declare lockf(2) and define lockf
	constants when building for Cygwin.
@
text
@d49 3
d59 3
d108 3
d238 4
a241 1
int     _EXFUN(readlink, (const char *__path, char *__buf, int __buflen));
@


1.64
log
@
2008-01-03  Jeff Johnston  <jjohnstn@@redhat.com>

        Make isatty syscall handling consistent with other newlib syscalls.

        * libc/include/_syslist.h: Add _isatty.
        * libc/include/reent.h: Add _isatty_r.
        * libc/include/sys/unistd.h: Add _isatty.
        * libc/posix/Makefile.am: Add new _isatty.c file.
        * libc/posix/Makefile.in: Regenerated.
        * libc/posix/_isatty.c: New file.
        * libc/posix/isatty.c: Changed to call _isatty().
        * libc/reent/Makefile.am: Add new isattyr.c file.
        * libc/reent/Makefile.in: Regenerated.
        * libc/reent/isattyr.c: New file.
        * libc/stdio/freopen.c: Changed to call _isatty_r().
        * libc/stdio/makebuf.c: Ditto.
        * libc/sys/a29khif/_isatty.S: Change isatty to _isatty.
        * libc/sys/arc/isatty.c: Ditto.
        * libc/sys/arm/syscalls.c: Ditto.
        * libc/sys/d10v/syscalls.c: Ditto.
        * libc/sys/h8300hms/syscalls.c: Ditto.
        * libc/sys/h8500hms/syscalls.c: Ditto.
        * libc/sys/linux/Makefile.am: Add new isatty.c file.
        * libc/sys/linux/Makefile.in: Regenerated.
        * libc/sys/linux/isatty.c: New file.
        * libc/syscalls/Makefile.am: Add new sysisatty.c file.
        * libc/syscalls/Makefile.in: Regenerated.
        * libc/syscalls/sysisatty.c: New file.
@
text
@d106 1
a106 1
#if defined(__SPU__)
@


1.63
log
@	* libc/include/sys/unistd.h: Remove Cygwin definition of MAXPATHLEN.
@
text
@d192 1
@


1.62
log
@
2007-06-20  Patrick Mansfield  <patmans@@us.ibm.com>

        * libc/include/sys/unistd.h[__SPU__]: Add lockf prototype and related
        defines; expose ftruncate, truncate and sync prototypes.
@
text
@d446 1
a446 4
/* FIXME: This is temporary until winsup gets sorted out.  */
#ifdef __CYGWIN__
#define MAXPATHLEN (260 - 1 /* NUL */)
#else
@


1.61
log
@
2007-06-20  Patrick Mansfield  <patmans@@us.ibm.com>

        * libc/include/sys/unistd.h[__SPU__]: Make fchdir prototype visible.
        * libc/include/sys/stat.h[__SPU__]: Make mknod and lstat prototypes
        visible.
@
text
@d106 7
d204 1
a204 1
#if defined(__CYGWIN__) || defined(__rtems__) || defined(__sh__)
d220 3
a222 1
#if defined(__CYGWIN__)
d224 1
a224 1
#else /* defined(__rtems__) */
d227 1
a227 1
#endif
@


1.60
log
@
2007-06-13  Patrick Mansfield  <patmans@@us.ibm.com>

        * libc/include/sys/features.h: Define _POSIX_TIMERS for spu.
        * libc/include/sys/unistd.h: Change usleep prototype to Posix
        form and move outside of OS flag checks.
        * libc/machine/spu/Makefile.am: Add sleep and usleep.
        * libc/machine/spu/Makefile.in: Regenerate.
        * libc/machine/spu/sleep.c: Copy libc/posix/sleep.c.
        * libc/machine/spu/usleep.c: Copy libc/posix/usleep.c.
@
text
@d49 1
a49 1
#if defined(__CYGWIN__) || defined(__rtems__)
@


1.59
log
@	* libc/include/sys/unistd.h: Declare confstr for Cygwin.
	Define confstr constants for Cygwin.  Add comment.
@
text
@d157 1
d203 1
a207 1
unsigned _EXFUN(usleep, (unsigned int __useconds));
@


1.58
log
@	* libc/include/sys/features.h: Add definition of all supported
	_POSIX_xxx values for Cygwin.
	* libc/include/sys/types.h (pthread_rwlock_t): Omit definition
	on Cygwin.
	(pthread_rwlockattr_t): Ditto.
	* libc/include/sys/unistd.h: Define all _SC_xxx values as
	required by SUSv3.  Unify formatting.
@
text
@d30 3
d373 4
d399 37
@


1.57
log
@	* libc/include/sys/unistd.h (_SC_STREAM_MAX): Define on Cygwin.
	(_PC_FILESIZEBITS): Add definition.
	(_PC_2_SYMLINKS): Ditto.
	(_PC_SYMLINK_MAX): Ditto.
@
text
@d234 1
a234 50
 *  4.8.1 Get Configurable System Variables, P1003.1b-1993, p. 96
 *
 *  NOTE: Table 4-2, Configurable System Variables, p. 96
 */

#define _SC_ARG_MAX                 0
#define _SC_CHILD_MAX               1
#define _SC_CLK_TCK                 2
#define _SC_NGROUPS_MAX             3
#define _SC_OPEN_MAX                4
  /* no _SC_STREAM_MAX */
#define _SC_JOB_CONTROL             5
#define _SC_SAVED_IDS               6
#define _SC_VERSION                 7
#define _SC_PAGESIZE                8
/* CYGWIN-specific values .. do not touch */
#define _SC_NPROCESSORS_CONF        9
#define _SC_NPROCESSORS_ONLN       10
#define _SC_PHYS_PAGES             11
#define _SC_AVPHYS_PAGES           12
/* end of CYGWIN-specific values */
#define _SC_MQ_OPEN_MAX            13
#define _SC_MQ_PRIO_MAX            14
#define _SC_RTSIG_MAX              15
#define _SC_SEM_NSEMS_MAX          16
#define _SC_SEM_VALUE_MAX          17
#define _SC_SIGQUEUE_MAX           18
#define _SC_TIMER_MAX              19
#define _SC_TZNAME_MAX             20

#define _SC_ASYNCHRONOUS_IO        21
#define _SC_FSYNC                  22
#define _SC_MAPPED_FILES           23
#define _SC_MEMLOCK                24
#define _SC_MEMLOCK_RANGE          25
#define _SC_MEMORY_PROTECTION      26
#define _SC_MESSAGE_PASSING        27
#define _SC_PRIORITIZED_IO         28
#define _SC_REALTIME_SIGNALS       29
#define _SC_SEMAPHORES             30
#define _SC_SHARED_MEMORY_OBJECTS  31
#define _SC_SYNCHRONIZED_IO        32
#define _SC_TIMERS                 33
#define _SC_AIO_LISTIO_MAX         34
#define _SC_AIO_MAX                35
#define _SC_AIO_PRIO_DELTA_MAX     36
#define _SC_DELAYTIMER_MAX         37

/*
 *  P1003.1c/D10, p. 52 adds the following.
d237 42
a282 1

d297 88
a384 23

#if !defined(__rtems__)
#define _SC_STREAM_MAX			100
#endif
#if !defined(__CYGWIN__) && !defined(__rtems__)
#define _SC_PRIORITY_SCHEDULING		101
#endif
  
# define	_PC_LINK_MAX	        0
# define	_PC_MAX_CANON	        1
# define	_PC_MAX_INPUT	        2
# define	_PC_NAME_MAX	        3
# define	_PC_PATH_MAX	        4
# define	_PC_PIPE_BUF	        5
# define	_PC_CHOWN_RESTRICTED   	6
# define	_PC_NO_TRUNC	        7
# define	_PC_VDISABLE	        8
# define	_PC_ASYNC_IO            9
# define	_PC_PRIO_IO            10
# define	_PC_SYNC_IO            11
# define	_PC_FILESIZEBITS       12
# define	_PC_2_SYMLINKS         13
# define	_PC_SYMLINK_MAX        14
d387 1
a387 1
# define	_PC_POSIX_PERMISSIONS   90
d389 1
a389 1
# define	_PC_POSIX_SECURITY     91
@


1.56
log
@
2005-11-03  Shaun Jackman  <sjackman@@gmail.com>

        * libc/include/sys/unistd.h (readlink, symlink): Provide these
        prototypes by default.
        * libc/sys/linux/include/unistd.h (readlink): Remove this
        prototype.
        * libc/sys/linux/sys/unistd.h (readlink, symlink): New
        prototypes.
@
text
@d306 3
a309 1
#define _SC_STREAM_MAX			100
d325 3
@


1.56.6.1
log
@2007-07-06  Jeff Johnston  <jjohnstn@@redhat.com>

       * libc/include/sys/time.h (gettimeofday): Change to proper
       prototype where second parameter is void *.
       * libc/include/reent.h: Fix prototype for _gettimeofday_r.
       * libc/time/timer.c (_gettimeofday_r): Change prototype accordingly.

2007-06-13  Patrick Mansfield  <patmans@@us.ibm.com>

       * libc/include/sys/unistd.h: Change usleep prototype to Posix.

2007-01-05  Brian Ford  <Brian.Ford@@FlightSafety.com>

       * configure.host (*-*-cygwin*): Define HAVE_BLKSIZE.
@
text
@d203 1
a203 1
int	_EXFUN(usleep, (useconds_t __useconds));
@


1.56.6.2
log
@2007-10-23  Jeff Johnston  <jjohnstn@@redhat.com>

	* libc/stdlib/wcstombs_r.c: Add SUSV2 support for calculating
	size if output buffer is NULL.

2007-10-13  Eric Blake  <ebb9@@byu.net>

	* libc/stdio/vfprintf.c (_VFPRINTF_R) [__OPTIMIZE_SIZE__]:
	Correctly nest else within conditionals.
	Reported by Artur Lipowski.

2007-09-17  Eric Blake  <ebb9@@byu.net>

	Obey POSIX on printf("%.s", (char*)NULL).
	* libc/stdio/vfprintf.c (_VFPRINTF_R): Take precision into account
	for %s on NULL.  Skip NULL check when optimizing for size.

2007-07-31  Eric Blake  <ebb9@@byu.net>

	More POSIX stream corner cases.
	* libc/stdio/findfp.c (__sinit): Open stderr read/write.
	* libc/stdio/fdopen.c (_fdopen_r): Set O_APPEND on fd when
	requested.
	* libc/stdio64/fdopen64.c (_fdopen64_r): Likewise.

2007-07-13  Eric Blake  <ebb9@@byu.net>

	Fix fflush issues.
	* libc/stdio/fflush.c (_fflush_r): New function.
	(fflush): Fix reentrancy and large offset behavior.
	* libc/include/stdio.h (_fflush_r): Add prototype.
	* libc/stdio/fclose.c (_fclose_r): All fflush callers changed.
	* libc/stdio/freopen.c (_freopen_r): Likewise.
	* libc/stdio/fseek.c (_fseek_r): Likewise.
	* libc/stdio/ftell.c (_ftell_r): Likewise.
	* libc/stdio/fvwrite.c (__sfvwrite_r): Likewise.
	* libc/stdio/refill.c (__srefill_r): Likewise.
	* libc/stdio/setvbuf.c (setvbuf): Likewise.
	* libc/stdio/ungetc.c (_ungetc_r): Likewise.
	* libc/stdio/vfprintf.c (__sbprintf): Likewise.
	* libc/stdio/wbuf.c (__swbuf_r): Likewise.
	* libc/stdio64/freopen64.c (_freopen64_r): Likewise.
	* libc/stdio64/fseeko64.c (_fseeko64_r): Likewise.  Defer to
	32-bit version if not large file.
	* libc/stdio64/ftello64.c (_ftello64_r): Likewise.
	* libc/stdio64/tmpfile64.c (_tmpfile64_r): Avoid compile warning.

2007-06-04  Eric Blake  <ebb9@@byu.net>

	* libc/include/sys/reent.h (struct __sFILE, struct __sFILE64):
	Switch to reentrant callbacks.
	* libc/stdio/local.h (__sread, __swrite, __sseek, __sclose)
	(__sseek64, __swrite64): Fix prototypes.
	[__SCLE]: Pull in setmode declaration.
	* libc/stdio/stdio.c (__sread, __swrite, __sseek, __sclose): Fix
	reentrancy.
	* libc/stdio64/stdio64.c (__sseek64_r, __swrite64_r): Delete.
	(__sseek64, __swrite64): Fix reentrancy.
	* libc/stdio/fseek.c (_fseek_r): Account for overflow, and fix
	reentrancy.
	* libc/stdio/ftell.c (_ftell_r): Likewise.
	* libc/stdio/flags.c (__sflags): Don't lose __SAPP on "a+".
	* libc/stdio/fclose.c (_fclose_r): Fix reentrancy.
	* libc/stdio/freopen.c (_freopen_r): Likewise.
	* libc/stdio/fvwrite.c (__sfvwrite_r): Likewise.
	* libc/stdio/refill.c (__srefill_r): Likewise.
	* libc/stdio/siscanf.c (eofread): Likewise.
	* libc/stdio/sscanf.c (eofread): Likewise.
	* libc/stdio/vsiscanf.c (eofread1): Likewise.
	* libc/stdio/vsscanf.c (eofread1): Likewise.
	* libc/stdio64/freopen64.c (_freopen64_r): Likewise.
	* libc/stdio64/fseeko64.c (_fseeko64_r): Likewise.
	* libc/stdio64/ftello64.c (_ftello64_r): Likewise.
	* libc/stdio/fflush.c (fflush): Improve reentrancy, although more
	could be fixed.

2007-05-29  Eric Blake  <ebb9@@byu.net>

	Avoid more compiler warnings.
	* libc/stdlib/btowc.c: Add missing header.
	* libc/stdlib/getopt.c (getopt_internal): Initialize variable.
	* libc/stdlib/system.c (do_system) [__CYGWIN__]: Add declaration.
	* libc/stdlib/wctob.c: Add missing header.
	* libc/string/strcpy.c (strcpy): Avoid warnings.
	* libc/string/strrchr.c (strrchr): Likewise.

2007-05-29  Corinna Vinschen  <corinna@@vinschen.de>

	* libc/argz/argz_add_sep.c (argz_add_sep): Handle empty string
	argument.
	* libc/argz/argz_append.c (argz_append): Handle empty buf argument.
	* libc/argz/argz_create_sep.c (argz_create_sep): Return (NULL, 0)
	on empty input strings.
	* libc/argz/argz_extract.c (argz_extract): Check argz_len before
	looping through argz.
	* libc/argz/argz_stringify.c (argz_stringify): Ditto.

2007-05-27  Brian Dessent  <brian@@dessent.net>

	* libc/stdio/vfprintf.c (_VFPRINTF_R): Populate 'ox' when
	handling %p.

2007-05-25  Eric Blake  <ebb9@@byu.net>

	* libc/stdio/rewind.c (rewind): Fix regression of 2003-08-22.

2007-05-23  Eric Blake  <ebb9@@byu.net>

	* libc/stdio/vfprintf.c (_VFPRINTF_R): Don't truncate %p when
	sizeof(void*) is 8 but sizeof(long) is 4.
	* libc/stdio/vfscanf.c (__SVFSCANF_R): Likewise.  Fix %i scanning
	of "-0x".  Support "-nan" and "inf" for %e.  Audit usage of ungetc
	to fix reentrancy and bug on encoding error in multibyte locales.
	Always return EOF on read error.

2007-05-23  Eric Blake  <ebb9@@byu.net>

	* libc/stdio/vfscanf.c (__SVFSCANF_R): Support scanf(%1$s).
	Avoid warning when !FLOATING_POINT.
	* libc/stdio/vfprintf.c (_VFPRINTF_R): Simplify _NO_POS_ARGS
	slightly.

2007-05-23  Corinna Vinschen  <vinschen@@redhat.com>

	* libc/argz/argz_create_sep.c (argz_create_sep): Initialize *argz_len
	to zero.
	* libc/include/argz.h: Guard against multiple inclusion.  Guard for
	use with C++.

2007-05-17  Charles Wilson  <cygwin@@...>

	* stdio/tmpfile.c: Include <sys/stat.h>.
	* stdio64/tmpfile64.c: Ditto.

2007-05-16  Eric Blake  <ebb9@@byu.net>

	Close security hole in tmpfile.
	* libc/stdio/tmpfile.c (_tmpfile_r): Avoid window between filename
	generation and opening the fd.
	* libc/stdio64/tmpfile64.c (_tmpfile64_r): Likewise.

	* libc/include/math.h (INFINITY, NAN, FP_ILOGB0, FP_ILOGBNAN)
	(MATH_ERRNO, MATH_ERREXCEPT, math_errhandling): Add macros
	required by POSIX.
	* libc/stdlib/ldtoa.c (USE_INFINITY): Rename from INFINITY, to
	avoid clash with <math.h>.

	* libc/stdlib/wctomb_r.c (_wctomb_r): Avoid gcc warnings on cygwin.
	* libc/search/hash.c (__hash_open): Likewise.

2007-05-10  Eric Blake  <ebb9@@byu.net>

	* libc/stdio/vfprintf.c (_VFPRINTF_R): Fix use of decimal point
	in %f and %e.  Avoid malloc when possible for %S.
	(BUF): Improve stack locality by using smaller size.
	(MAXEXP): Define.
	(exponent): Use for smaller stack size.

2007-05-01  Eric Blake  <ebb9@@byu.net>

	* libc/stdio64/local64.h: Delete, move contents to...
	* libc/stdio/local.h: ...here.
	* libc/stdio64/fdopen64.c: Update includes.
	* libc/stdio64/fopen64.c: Likewise.
	* libc/stdio64/freopen64.c: Likewise.
	* libc/stdio64/fseeko64.c: Likewise.
	* libc/stdio64/ftello64.c: Likewise.
	* libc/stdio/findfp.c (std) [__LARGE64_FILES]: Open stdin, stdout,
	and stderr with 64-bit offset.
	* libc/stdio/fseek.c (_fseek_r): Avoid compile warning.
	* libc/stdio/makebuf.c (__smakebuf_r): Likewise.
	* libc/stdio/mktemp.c (_gettemp): Likewise.

2007-04-25  Eric Blake  <ebb9@@byu.net>

	* libc/stdio/vfprintf.c (get_arg): Support %1$lc.  Simplify types
	that promote to int.

2007-04-24  Eric Blake  <ebb9@@byu.net>

	* libc/stdio/vfprintf.c (_VFPRINTF_R): Don't zero pad on infinity
	or NaN with %05f.

	* libc/stdio/vfprintf.c (_VFPRINTF_R): Avoid multibyte when not
	_MB_CAPABLE.

	* libc/include/limits.h (NL_ARGMAX): Define a default value.
	* libc/stdio/vfprintf.c (MAX_POS_ARGS): Define in terms of
	NL_ARGMAX, if present.

2007-04-23  Brian Dessent  <brian@@dessent.net>

	* libc/stdio/vfprintf.c (_vfprintf_r): When the alternate-form flag
	has been specified with types 'f', 'F', 'g', or 'G', ensure the
	trailing decimal is printed.

2007-04-17  Brian Dessent  <brian@@dessent.net>

	* libc/stdio/sscanf.c: Update documentation comments.
	* libc/stdio/vfscanf.c (__SVFSCANF_R): Handle j, t, and z modifiers.

2007-04-12  Eric Blake  <ebb9@@byu.net>

	* libc/stdio/vfprintf.c (_VFPRINTF_F, cvt): Don't confuse %F with %e.
	(chclass): Recognize 'F', 'X', 'n', and not 'W'.
	(get_arg): Handle %1$F, %1$n.

2007-04-10  Eric Blake  <ebb9@@byu.net>

	* libc/include/stdio.h (_ELIDABLE_INLINE): Work even when using
	CFLAGS=-O0.

2007-04-09  Eric Blake  <ebb9@@byu.net>

	* libc/include/stdio.h: Add gcc format attributes to printf and
	scanf families.

2007-04-04  Jeff Johnston  <jjohnstn@@redhat.com>

	* libc/argz/argz_insert.c: Add stddef.h to get ptrdiff_t type.

2007-04-04  Eric Blake  <ebb9@@byu.net>

	* libc/stdio/asiprintf.c (_asiprintf_r): Fix reentrancy.
	(asiprintf): Avoid overhead.
	* libc/stdio/asprintf.c (_asprintf_r): Fix reentrancy.
	(asprintf): Avoid overhead.
	* libc/stdio/diprintf.c (_diprintf_r, diprintf): New file.
	* libc/stdio/dprintf.c (_dprintf_r, dprintf): Use _DEFUN.
	* libc/stdio/fiprintf.c (_fiprintf_r): Add reentrant version.
	(fiprintf): Avoid overhead.
	* libc/stdio/fprintf.c (_fprintf_r): Add reentrant version.
	(fprintf): Avoid overhead.
	* libc/stdio/iprintf.c (_iprintf_r): Use _DEFUN.
	(iprintf): Avoid overhead.
	* libc/stdio/printf.c (_printf_r): Use _DEFUN.
	(printf): Avoid overhead.
	* libc/stdio/vasiprintf.c (vasiprintf): Reduce binary size.
	* libc/stdio/vasprintf.c (vasprintf): Reduce binary size.
	* libc/stdio/vdiprintf.c (_vdiprintf_r, vdiprintf): New file.
	* libc/stdio/vdprintf.c (vdprintf): Avoid overhead.
	* libc/stdio/vsiprintf.c (vsiprintf): Reduce binary size.
	* libc/stdio/vsniprintf.c (vsniprintf): Reduce binary size.
	* libc/stdio/vsnprintf.c (vsnprintf): Reduce binary size.
	* libc/stdio/vsprintf.c (vsprintf): Reduce binary size.
	* libc/stdio/Makefile.am (GENERAL_SOURCES): Add diprintf.c,
	vdiprintf.c.
	* libc/include/stdio.h (diprintf, _diprintf_r, vdiprintf)
	(_vdiprintf_r, _fiprintf_r, _vfiprintf_r): Add prototypes.

2007-03-30  Dave Korn  <dave.korn@@artimi.com>

	* libc/include/stdio.h (_ELIDABLE_INLINE):  New macro to conceal
	conflicting inline semantics between C99 and GNU89.
	(__sgetc_r):  Replace static inline with _ELIDABLE_INLINE to be
	compatible with -fkeep-inline-functions usage.
	(__sputc_r):  Likewise for consistency even though disabled.

2007-03-16  Charles Wilson  <cygwin@@...>

	* libc/argz/argz_insert.c: "before" pointer is
	invalid after *argz realloc.  Compute offset
	between "before" and *argz, and use it after
	reallocation instead.

2007-03-16  Eric Blake  <ebb9@@byu.net>

	* libc/stdio64/fseek064.c (_fseeko64_r): Fix reentrancy.
	* libc/stdio64/freopen64.c (_freopen64_r): Ditto.

2007-03-15  Eric Blake  <ebb9@@byu.net>

	* libc/stdio/local.h (cantwrite, FREEUB, FREELB): Make reentrant.
	(__smakebuf): Rename...
	(__smakebuf_r): to this.
	* libc/stdio/fvwrite.h (__swsetup_r): Rename, from __swsetup.
	* libc/stdio/makebuf.c (__smakebuf): Detect failed asprint
	allocation, then rename...
	(__smakebuf_r): ...to this and fix reentrancy.
	* libc/stdio/wsetup.c (__swsetup): Detect failed asprintf
	allocation, then rename...
	(__swsetup_r): ...to this and fix reentrancy.
	* libc/stdio/fseek.c (_fseek_r): Fix reentrancy.
	* libc/stdio/refill.c (__srefill_r): Likewise.
	* libc/stdio/fclose.c (_fclose_r): Likewise.
	* libc/stdio/fread.c (_fread_r): Likewise.
	* libc/stdio/freopen.c (_freopen_r): Likewise.
	* libc/stdio/wbuf.c (__swbuf_r): Likewise.
	* libc/stdio64/fseeko64.c (_fseeko64_r): Likewise.
	* libc/stdio/fvwrite.c (__sfvwrite_r): Set errno properly on
	failed asprintf allocation, and fix reentrancy.
	* libc/stdio/snprintf.c (snprintf, _snprintf_r): Report overflow,
	as required by POSIX.
	* libc/stdio/sniprintf.c (sniprintf, _sniprintf_r): Likewise.
	* libc/stdio/vsnprintf.c (vsnprintf, _vsnprintf_r): Likewise.
	* libc/stdio/vsniprintf.c (vsniprintf, _vsniprintf_r): Likewise.

2007-03-12  Eric Blake  <ebb9@@byu.net>

	* libc/stdio/fvwrite.c (__sfvwrite_r): Fix reentrancy.
	* libc/stdio/vasprintf.c (vasprintf, _vasprintf_r): Pass failed
	allocation to caller.
	* libc/stdio/asprintf.c (_asprintf_r, asprintf): Likewise.
	* libc/stdio/asiprintf.c (_asiprintf_r, asiprintf): Likewise.
	* libc/stdio/vasiprintf.c (vasiprintf, _vasiprintf_r): Likewise.

2007-02-20  Kazunori Asayama <asayama@@sm.sony.co.jp>

	* libc/include/stdio.h: Add declaration for vsiprintf.
@
text
@d330 4
a333 1
#ifndef __CYGWIN__
@


1.55
log
@	* libc/include/sys/unistd.h: Define getpeereid for Cygwin.
@
text
@d214 1
a216 1
#endif
@


1.54
log
@	* libc/include/sys/unistd.h: Define fdatasync also for Cygwin.
@
text
@d76 3
@


1.53
log
@
2004-08-23  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/sys/unistd.h (getpass): Change prototype to use
        const instead of __const.
@
text
@a55 1
#ifndef __CYGWIN__
a56 1
#endif
@


1.52
log
@	* libc/include/sys/unistd.h (ttyname_r): Add missing comma.
@
text
@d76 1
a76 1
char 	_EXFUN(*getpass, (__const char *__prompt));
@


1.51
log
@	* libc/include/sys/unistd.h (ttyname_r): Add declaration for Cygwin.
@
text
@d150 1
a150 1
int     _EXFUN(ttyname_r, (int, char * size_t)); 
@


1.50
log
@	* libc/include/sys/unistd.h (sync): Define void on Cygwin according
	to SUSv3.
@
text
@d149 3
@


1.49
log
@* libc/include/sys/features.h: Add _POSIX_TIMERS define for __CYGWIN__.
* libc/include/sys/reent.h (__getreent): Protect against possibly being
defined.
* libc/include/sys/unistd.h (fdatasync): Don't define for __CYGWIN__.
@
text
@d205 3
d209 1
@


1.48
log
@
2004-01-08  Joel Sherrill  <joel@@oarcorp.com>

        * libc/sys/rtems/sys/queue.h: New file.
        * libc/include/sys/signal.h: Reflect renumbering of signals to
        fit into 32-bit mask.
        * libc/include/sys/unistd.h: Add fdatasync() prototype.
        * libc/sys/rtems/crt0.c: Add more symbols which may be implicitly
        required.  In particular, add the reentrant variants of libc calls.
        * libc/sys/rtems/sys/dirent.h: Add scandir() prototype.
@
text
@d56 1
d58 1
@


1.47
log
@
2003-11-26  Corinna Vinschen  <corinna@@vinschen.de>

        * libc/include/fcntl.h: Declare syscalls only when building newlib.
        * libc/include/unistd.h: Ditto.
        * libc/include/stat.h: Ditto.  Also declare struct stat64.
@
text
@d56 1
@


1.46
log
@
2003-11-18  Corinna Vinschen  <corinna@@vinschen.de>

        * libc/include/sys/fcntl.h: Declare _open64.
        * libc/include/sys/stat.h: Declare _fstat64.
        * libc/include/sys/unistd.h: Declare _lseek64.
@
text
@d168 1
d184 1
@


1.45
log
@	* libc/include/sys/unistd.h: Declare function daemon for Cygwin.
@
text
@d175 3
@


1.44
log
@	* libc/include/sys/unistd.h (ftruncate, truncate): Also declare
	for __sh__.
	* libc/sys/sh/Makefile.am (lib_a_SOURCES): Add ftruncate.c and
	truncate.c.
	* libc/sys/sh/Makefile.in: Regenerate.
	* libc/sys/sh/sys/syscall.h: (SYS_truncate, SYS_ftruncate): Define.
	* libc/sys/sh/ftruncate.c: New file.
	* libc/sys/sh/truncate.c: Likewise.
@
text
@d32 3
@


1.43
log
@* newlib/libc/include/sys/unistd.h: add declaration for gethostid on Cygwin.
@
text
@d178 6
a188 4
#if !defined(__INSIDE_CYGWIN__)
int     _EXFUN(ftruncate, (int __fd, off_t __length));
int     _EXFUN(truncate, (const char *, off_t __length));
#endif
@


1.42
log
@	* libc/include/stdio.h: Declare fgetpos, fsetpos, fseeko and ftello
	with internal (_fpos_t and _off_t) datatypes when compiling newlib.
	* libc/include/sys/unistd.h: Declare _lseek using _off_t.
	* libc/reent/lseekr.c (_lseek_r): Use _off_t instead of off_t.
	* libc/stdio/fseeko.c (fseeko): Ditto.
	* libc/stdio/ftello.c (ftello): Ditto.
	* libc/stdio/stdio.c (__swrite): Ditto.
	(__sseek): Ditto.
	* libc/stdio/fgetpos.c (fgetpos): Use _fpos_t instead of fpos_t.
	* libc/stdio/fseek.c (fseek): Ditto.
	* libc/stdio/fsetpos.c (fsetpos): Ditto.
	* libc/stdio/ftell.c (ftell): Ditto.
	* libc/stdio/local.h: Declare __sseek using _off_t.
@
text
@d63 3
@


1.41
log
@	* libc/include/pwd.h: Add guards to avoid type clashes when compiling
	Cygwin.
	* libc/include/sys/stat.h: Ditto.
	* libc/include/sys/unistd.h: Ditto.
	* libc/sys/cygwin/sys/dirent.h: Ditto.
@
text
@d168 1
a168 1
off_t   _EXFUN(_lseek, (int __fildes, off_t __offset, int __whence ));
@


1.40
log
@* libc/include/sys/unistd.h: Guard getopt.h call to force only declaration of
getopt and avoid getopt_long declaration.
* libc/sys/cygwin/include/unistd.h: Remove.
@
text
@d23 1
d25 1
d47 1
d49 1
d57 1
d61 1
d76 1
d78 1
d85 1
d87 1
d90 1
d92 1
d111 1
d117 1
d123 1
a123 1
#if defined(__CYGWIN__)
d128 1
d130 1
d180 1
d183 1
@


1.39
log
@	* libc/include/sys/unistd.h: Add setregid and setreuid declarations
	for Cygwin.
@
text
@d129 1
d131 1
@


1.38
log
@* libc/include/sys/unistd.h: Add rresvport declaration for cygwin.
@
text
@d109 4
@


1.37
log
@* libc/include/sys/unistd.h: Under cygwin, just include getopt.h rather than
defining getopt directly.
@
text
@d91 2
a92 1
int	_EXFUN(revoke, (char *path));
@


1.36
log
@* libc/include/sys/unistd.h: Add getsid declaration for cygwin.
@
text
@d123 3
d130 1
@


1.35
log
@
2002-08-17  Jeff Johnston  <jjohnstn@@redhat.com>

        *  Makefile.am: Move cmath stuff into libc/sys/linux.
        *  Makefile.in: Regenerated.
        *  configure.host: Default -DMB_CAPABLE for x86-linux.
        *  libc/include/reent.h: Define _sbrk to take signed int argument.
        *  libc/include/sys/unistd.h: Ditto for _sbrk_r and sbrk.
        *  libc/locale/locale.c[MB_CAPABLE]: Add LC_MESSAGES support and
        make locale name checking more efficient.  Also allow "C-ISO-8859-1"
        locale for LC_CTYPE and LC_MESSAGES.
        *  libc/reent/sbrkr.c: Change prototype to take ptrdiff_t.
        *  libc/sys/linux/brk.c: Change sbrk prototype.
        *  libc/sys/linux/include/time.h: Remove Cygwin stuff and
        include <sys/features.h>.
        (CLOCK_THREAD_CPUTIME): Renamed to CLOCK_THREAD_CPUTIME_ID.
        (CLOCK_PROCESS_CPUTIME): Renamed to CLOCK_PROCESS_CPUTIME_ID.
        *  libc/sys/linux/sys/cdefs.h: Replace with glibc sys/cdefs.h
        with a few local additions.
        *  libc/sys/linux/sys/features.h: New file.
        *  libc/sys/linux/sys/unistd.h: Change _sbrk_r and sbrk prototypes
        to take signed argument.
        *  libc/syscalls/syssbrk.c: Change sbrk, _sbrk_r, and _sbrk
        prototypes to take signed size argument.
@
text
@d67 3
@


1.34
log
@	* libc/include/sys/unistd.h: Add setgroups prototype for Cygwin.
@
text
@a93 1
#if defined(__rtems__)
a94 3
#else
void *  _EXFUN(sbrk,  (size_t __incr));
#endif
d140 1
a140 1
void *  _EXFUN(_sbrk,  (size_t __incr));
@


1.33
log
@	* libc/argz/argz_replace.c: Include buf_findstr.h.
	* libc/argz/buf_findstr.c: Likewise.
	* libc/argz/envz_entry.c: Include buf_findstr.h.  Cast return
	value to (char *).
	* libc/argz/envz_get.c: Likewise.
	* libc/include/sys/unistd.h: Add getopt and getsubopt declarations.
	* libc/stdlib/Makefile.am (LIB_SOURCES): Add getsubopt.c.
	* libc/stdlib/getsubopt.3: New file.
	* libc/stdlib/getsubopt.c: New file.
	* libc/sys/linux/machine/i386/socketcall.h (__sockcall_base):
	Change esp to ebp.
@
text
@d104 3
@


1.32
log
@* libc/include/sys/unistd.h: Define getdomainname under cygwin.
@
text
@d121 5
d128 3
@


1.31
log
@
2002-04-29  Jeff Johnston  <jjohnstn@@redhat.com>

        *  libc/include/sys/unistd.h (pread, pwrite): Added prototypes.
        *  libc/unix/Makefile.am: Add pread.c and pwrite.c.
        *  libc/sys/linux/Makefile.am: Add pread64.c and pwrite64.c.
        *  libc/sys/linux/Makefile.in: Regenerated.
        *  libc/unix/Makefile.in: Ditto.
        *  libc/sys/linux/pread64.c: New file.
        *  libc/sys/linux/pwrite64.c: Ditto.
        *  libc/unix/pread.c: Ditto.
        *  libc/unix/pwrite.c: Ditto.
@
text
@d50 3
@


1.30
log
@
2002-04-04  Jeff Johnston  <jjohnstn@@redhat.com>

        * Makefile.am: Add support for installing crt1.o if one exists.
        * configure.host: Specify crt1.o for linux.
        * configure.in: Expose CRT1 and CRT1_DIR for Makefile.am to use.
        * Makefile.in: Regenerated.
        * configure: Ditto.
        * libc/include/sys/unistd.h (_SC_STREAM_MAX, _SC_PRIORITY_SCHEDULING):
        Added for non-Cygwin, non-RTEMS configurations.
        * libc/sys/linux/Makefile.am: Add support for crt1 and sysconf.
        * libc/sys/linux/Makefile.in: Regenerated.
        * libc/sys/linux/crt1.c: New empty file to override one defaulted
        by gcc.  This fixes problem with reconfiguring linux newlib build.
        * libc/sys/linux/sysconf.c: New file.
@
text
@d81 2
@


1.29
log
@* libc/include/sys/unistd.h: Correct ualarm declaration.
@
text
@d237 5
@


1.28
log
@* libc/include/sys/types.h: Define useconds_t.
* libc/include/sys/ulimit.h: Declare ualarm.
@
text
@d136 1
a136 1
useconds_t _EXFUN(ualarm, (useconds_t __useconds));
@


1.27
log
@	* libc/include/sys/unistd.h: Add prototypes for endusershell(),
	getusershell(), iruserok(), revoke(), ruserok() and setusershell()
	when __CYGWIN__ is defined.
	* libc/sys/cygwin/sys/utmp.h: Add prototypes for login_tty() and
	logwtmp().
@
text
@d136 1
@


1.26
log
@	Add __rtems__ as system defining fchdir().
@
text
@d32 3
d66 1
d68 1
d82 3
d86 3
d103 3
@


1.25
log
@	* libc/include/sys/unistd.h: Add prototype for fchdir() when
	__CYGWIN__ is defined.
@
text
@d38 1
a38 1
#if defined(__CYGWIN__)
@


1.24
log
@
2001-08-29  Joel Sherrill <joel@@OARcorp.com>

        * libc/include/sys/unistd.h: Prototype chroot() for RTEMS.

2001-08-29  Ralf Corsepius <corsepiu@@faw.uni-ulm.de>

        * libc/machine/i386/f_atan2.S, libc/machine/i386/f_atan2f.S,
          libc/machine/i386/f_exp.c, libc/machine/i386/f_expf.c,
          libc/machine/i386/f_frexp.S, libc/machine/i386/f_frexpf.S,
          libc/machine/i386/f_ldexp.S, libc/machine/i386/f_ldexpf.S,
          libc/machine/i386/f_log.S, libc/machine/i386/f_log10.S,
          libc/machine/i386/f_log10f.S, libc/machine/i386/f_logf.S,
          libc/machine/i386/f_pow.c, libc/machine/i386/f_powf.c,
          libc/machine/i386/f_tan.S, libc/machine/i386/f_tanf.S:
        Add conditional compilation to avoid HW FPU instructions
        when compiled for soft-float.
@
text
@d38 3
@


1.23
log
@
2001-08-29  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/sys/reent.h: Add include of <sys/_types.h>.
        No longer include time.h.  Add struct __tm to use for
        _localtime_buf in the reentrant structure.  Add a
        _NULL definition to use in initializing the reentrant struct.
        * libc/include/sys/config.h: For CYGWIN32 and RTEMS, change
        the _READ_WRITE_RETURN_TYPE to _ssize_t which is found in
        <sys/_types.h>.
        * libc/include/sys/unistd.h: Include <sys/_types.h>.
        * libc/time/lcltime.c (localtime): Cast the reentrant struct
        _localtime_buf to be struct tm *.
@
text
@d24 1
a24 1
#ifdef __CYGWIN__
@


1.22
log
@* libc/include/sys/stat.h: Revert March 3, Cygwin change.
* libc/include/sys/Ditto.h: Ditto.
@
text
@d10 1
@


1.21
log
@* libc/include/sys/unistd.h [X_OK]: Use better protection against Cygwin X_OK
definitions in sys/file.h.
@
text
@d134 1
a134 8

#undef X_OK
#if !defined (__CYGWIN__) || defined (__INSIDE_CYGWIN__)
# define	X_OK	1
#else
# define X_OK	_cygwin_X_OK
extern const unsigned _cygwin_X_OK;
#endif
@


1.20
log
@* libc/include/sys/unistd.h: Add pthread_atfork (Cygwin only).
@
text
@d131 6
a136 3
# define	F_OK	0
# define	R_OK	4
# define	W_OK	2
d138 1
a138 3

#if defined (__CYGWIN__) && !defined (__INSIDE_CYGWIN__)
# undef		X_OK
@


1.19
log
@* libc/include/sys/types.h (BSD int typedefs): Guard with _BSDTYPES_DEFINED
rather than _WINSOCK_H.
(fd_set): Add !defined __USE_W32_SOCKETS to guard; define _SYS_TYPES_FD_SET.
* libc/include/sys/unistd.h (gethostname): Don't declare if defined
(_WINSOCK_H) || defined (__USE_W32_SOCKETS).
@
text
@d68 3
@


1.18
log
@        * libc/include/sys/unistd.h: Add _PC_POSIX_PERMISSONS and
        _PC_POSIX_SECURITY constants for Cygwin.
@
text
@d118 4
a121 1
int	_EXFUN(gethostname, (char *__name, size_t __len));
@


1.17
log
@
Mon Mar  5 21:48:54 2001  J"orn Rennecke <amylaar@@redhat.com>

        * libc/include/sys/config.h (_READ_WRITE_RETURN_TYPE): Define.
        For RTEMS, define to be ssize_t.  Default to int if not defined.
        * libc/stdio/sscanf.c (eofread): Return _READ_WRITE_RETURN_TYPE.
        * libc/stdio/stdio.c (__sread, __swrite): Likewise.
        * libc/stdio/local.h (__sread, __swrite): Likewise.
        * libc/include/sys/reent.h (_read, _write): Likewise.
        * libc/include/sys/unistd.h (read, write, _read, _write): Likewise.
        * libc/syscalls/sysread.c (read): Likewise.
        * libc/syscalls/syswrite.c (write): Likewise.
@
text
@d231 6
@


1.16
log
@* libc/include/sys/stat.h: Use special defines for executable stat bits when
compiling for Cygwin.
* libc/include/sys/unistd.h: Use special define for X_OK when compiling for
Cygwin.
@
text
@d69 1
a69 6
/* POSIX 1003.1b-1993 says read() returns ssize_t */
#if defined(__rtems__)
ssize_t	_EXFUN(read, (int __fildes, void *__buf, size_t __nbyte ));
#else
int	_EXFUN(read, (int __fildes, void *__buf, size_t __nbyte ));
#endif
d93 1
a93 6
/* POSIX 1003.1b-1993 says write() returns ssize_t */
#if defined(__rtems__)
ssize_t     _EXFUN(write, (int __fildes, const void *__buf, size_t __nbyte ));
#else
int     _EXFUN(write, (int __fildes, const void *__buf, size_t __nbyte ));
#endif
d106 1
a106 1
int     _EXFUN(_read, (int __fildes, void *__buf, size_t __nbyte ));
d109 1
a109 1
int     _EXFUN(_write, (int __fildes, const void *__buf, size_t __nbyte ));
@


1.15
log
@
2001-02-08  Edward M. Lee  <tailbert@@yahoo.com>

        * libc/include/grp.h: add prototype for initgroups.
        * libc/include/stdio.h: fix prototype for putw.
        * libc/include/sys/signal.h: add prototype for killpg.
        * libc/include/sys/stat.h: enable mknod/lstat for CYGWIN.
        * libc/include/sys/unistd.h: add prototypes for getpgid, setpgrp,
        vhangup and remove duplicate sysconf prototype.
@
text
@d140 6
@


1.14
log
@* libc/include/sys/unistd.h: Use correct declaration for setdtablesize.
@
text
@d53 1
d87 1
d97 1
a148 2

long _EXFUN(sysconf, (int __name));
@


1.13
log
@        * libc/include/sys/unistd.h: Add declarations for `chroot' and `getwd'
	when __CYGWIN__ is defined.
@
text
@d121 1
a121 1
void	_EXFUN(setdtablesize, (int));
@


1.12
log
@
2000-12-12  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/sys/unistd.h: Restored Cygwin _SC
        constants and moved new constants appropriately
        so Cygwin will build.
@
text
@d23 3
d57 3
@


1.11
log
@
2000-12-11  Joel Sherrill <joel@@OARcorp.com>

        * Merge RTEMS specific .h files into main libc/include.
        * libc/sys/rtems/include/signal.h: Removed.
        * libc/sys/rtems/include/time.h: Removed.
        * libc/sys/rtems/sys/features.h: Removed.
        * libc/sys/rtems/sys/sched.h: Removed.
        * libc/sys/rtems/sys/siginfo.h: Removed.
        * libc/sys/rtems/sys/signal.h: Removed.
        * libc/sys/rtems/sys/time.h: Removed.
        * libc/sys/rtems/sys/times.h: Removed.
        definitions for time_t and clock_t since these are
        no longer in time.h.
        * libc/include/pthread.h: New file.
        * libc/include/sys/sched.h: New file.
        * libc/include/sys/features.h: New file.
        * libc/include/time.h: Removed duplicate definition of clock_t
        and time_t, get them from <sys/types.h> instead.  Add prototypes        for POSIX clock and timer functionality.
        * libc/sys/linux/sys/types.h: Changed to include
        * libc/include/machine/types.h: Add _CLOCKID_T_ and _TIMER_T_.
        * libc/include/sys/signal.h: Add more complete set of POSIX
        signal functionality including real-time and threaded signals.
        * libc/include/sys/types.h: Add clock_t, time_t, struct
        timespec, and struct itimerspec.  Centralizing these makes
        things cleaner.  RTEMS uses 64-bit dev_t.
        Added numerous primitive definitions
        for pthreads including macros, pthread_attr_t,
        pthread_mutexattr_t, pthread_condattr_t, pthread_key_t,
        pthread_once_t, and pthread_t.
        * libc/include/sys/unistd.h: Added getlogin_r() prototype.
        If RTEMS follow POSIX on read(), write() and sbrk() prototype.
        Feature flags removed and moved to new file <sys/features.h>.
        Full set of POSIX sysconf() constants
@
text
@d72 1
a72 1
void *  _EXFUN(sbrk, (size_t __incr));
d159 6
a164 4
#define _SC_AIO_LISTIO_MAX          9
#define _SC_AIO_MAX                10
#define _SC_AIO_PRIO_DELTA_MAX     11
#define _SC_DELAYTIMER_MAX         12
d187 4
a195 4
#define _SC_GETGR_R_SIZE_MAX             34
#define _SC_GETPW_R_SIZE_MAX             35
#define _SC_LOGIN_NAME_MAX               36
#define _SC_THREAD_DESTRUCTOR_ITERATIONS 37
d211 4
@


1.10
log
@
2000-11-20  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/sys/unistd.h: Removed definition of MAXNAMLEN.
        * libc/include/dirent.h: Added definition of MAXNAMLEN if
        not defined by sys/dirent.h.
        * libc/posix/execvp.c: Added include of dirent.h to get
        MAXNAMLEN value which used to be in unistd.h.
@
text
@d11 1
d45 3
d62 6
a67 1
int     _EXFUN(read, (int __fildes, void *__buf, size_t __nbyte ));
d69 5
a73 1
void *  _EXFUN(sbrk,  (size_t __incr));
d89 4
d94 1
d135 1
a135 27
/*
 *  RTEMS adheres to a later version of POSIX -- 1003.1b.
 *
 *  XXX this version string should change.
 */

#ifdef __rtems__
#ifndef _POSIX_JOB_CONTROL
# define _POSIX_JOB_CONTROL     1
#endif
#ifndef _POSIX_SAVED_IDS
# define _POSIX_SAVED_IDS       1
#endif
# define _POSIX_VERSION 199009L
#else
#ifdef __svr4__
# define _POSIX_JOB_CONTROL     1
# define _POSIX_SAVED_IDS       1
# define _POSIX_VERSION 199009L
#endif
#endif

#ifdef __CYGWIN__
# define _POSIX_JOB_CONTROL	1
# define _POSIX_SAVED_IDS	0
# define _POSIX_VERSION		199009L
#endif
d143 46
a188 14
# define	_SC_ARG_MAX	        0
# define	_SC_CHILD_MAX	        1
# define	_SC_CLK_TCK	        2
# define	_SC_NGROUPS_MAX	        3
# define	_SC_OPEN_MAX	        4
/* no _SC_STREAM_MAX */
# define	_SC_JOB_CONTROL	        5
# define	_SC_SAVED_IDS	        6
# define	_SC_VERSION	        7
# define        _SC_PAGESIZE            8
# define        _SC_NPROCESSORS_CONF    9
# define        _SC_NPROCESSORS_ONLN   10
# define        _SC_PHYS_PAGES         11
# define        _SC_AVPHYS_PAGES       12
d190 20
@


1.9
log
@        * libc/include/sys/unistd.h: Add defines for sysconf values
        _SC_NPROCESSORS_CONF, _SC_NPROCESSORS_ONLN, _SC_PHYS_PAGES and
        _SC_AVPHYS_PAGES.
@
text
@a178 4
# ifndef	_POSIX_SOURCE
#  define	MAXNAMLEN	1024
# endif		/* _POSIX_SOURCE */

@


1.8
log
@* libc/include/sys/unistd.h: Add getdtablesize and setdtablesize declarations
for __CYGWIN__.
@
text
@d151 5
a155 5
# define	_SC_ARG_MAX	0
# define	_SC_CHILD_MAX	1
# define	_SC_CLK_TCK	2
# define	_SC_NGROUPS_MAX	3
# define	_SC_OPEN_MAX	4
d157 8
a164 4
# define	_SC_JOB_CONTROL	5
# define	_SC_SAVED_IDS	6
# define	_SC_VERSION	7
# define        _SC_PAGESIZE    8
d166 12
a177 12
# define	_PC_LINK_MAX	0
# define	_PC_MAX_CANON	1
# define	_PC_MAX_INPUT	2
# define	_PC_NAME_MAX	3
# define	_PC_PATH_MAX	4
# define	_PC_PIPE_BUF	5
# define	_PC_CHOWN_RESTRICTED	6
# define	_PC_NO_TRUNC	7
# define	_PC_VDISABLE	8
# define	_PC_ASYNC_IO    9
# define	_PC_PRIO_IO     10
# define	_PC_SYNC_IO     11
@


1.7
log
@* libc/include/sys/unistd.h (environ): this one isn't from the
DLL, no __IMPORT
@
text
@d96 2
@


1.6
log
@
2000-08-23  Werner Almesberger  <Werner.Almesberger@@epfl.ch>

        * libc/stdlib/mprec.c (ulp, b2d, d2b): changed a few expressions
        like  x << y-z  to the equivalent  x << (y-z).
        (d2b): changed if statements with assignment to perform the
        assignment prior to the if check.
        * libc/reent/reent.c: included stdlib.h for "_free_r" prototype.
        * libc/unix/getpass.c (getpass): moved "echo" assignment out of if.
        * libc/unix/ttyname.c: included string.h for "strcpy" prototype.
        * libc/unix/getcwd.c (ISDOT): added parentheses to clarify && and ||
        precedence.
        * libc/include/sys/unistd.h: added "vfork" prototype (for popen.c).
        Added "_execve" prototype (for execl.c, execle.c, execv.c, and
        execve.c).
        * libc/posix/popen.c (popen): added parentheses to clarify && and ||
        precedence.
        * libm/math/e_cosh.c (__ieee754_cosh): changed parentheses to
        clarify && and || precendence (and to remove pascalism).
        * libm/math/e_sinh.c (__ieee754_sinh): Ditto.
        * libm/math/s_infconst.c: added another pair of braces to all
        initializers for __infinity (need three: for __infinity[1] array,
        for union __dmath, and for i[2]).
@
text
@d13 1
a13 1
extern __IMPORT char **environ;
@


1.5
log
@* libc/include/sys/config.h: define __IMPORT appropriately
* libc/include/ctype.h (_ctype_): use __IMPORT
* libc/include/math.h (__infinity, signam, _LIB_VERSION): ditto
* libc/include/math.h (__mb_cur_max): ditto
* libc/include/time.h (_timezone, _daylight, _tzname): ditto
* libc/include/unctrl.h (__unctrl, __unctrllen): ditto
* libc/include/errno.h (_sys_errlist, _sys_nerr): ditto
* libc/include/unistd.h (environ): ditto
@
text
@d78 4
d93 1
@


1.4
log
@        * libc/include/sys/unistd.h: Add prototypes for `seteuid' and
        `setegid' provided by Cygwin.
@
text
@d13 1
a13 1
extern char **environ;
@


1.3
log
@* libc/include/ctype.h: __CYGWIN32__ -> __CYGWIN__
* libc/include/malloc.h: Ditto.
* libc/include/process.h: Ditto.
* libc/include/stdio.h: Ditto.
* libc/include/stdlib.h: Ditto.
* libc/include/time.h: Ditto.
* libc/include/machine/setjmp.h: Ditto.
* libc/include/sys/errno.h: Ditto.
* libc/include/sys/signal.h: Ditto.
* libc/include/sys/stat.h: Ditto.
* libc/include/sys/time.h: Ditto.
* libc/include/sys/unistd.h: Ditto.
* libc/include/string.h: Ditto.  strsignal should return a const char *.
@
text
@d61 4
@


1.2
log
@        * newlib/libc/include/sys/unistd.h: Add prototypes for
        fchmod, fchown, lchown.
        * winsup/cygwin/syscalls.cc (chown_worker): Use previous
        uid/gid if new uid/gid is -1.
        New static function with chown functionality.
        (chown): Call chown_worker with SYMLINK_FOLLOW.
        (fchown): New function. Call chown_worker with SYMLINK_FOLLOW.
        (lchown): New function. Call chown_worker with SYMLINK_IGNORE.
        * cygwin.din: Add symbols for fchown, lchown.
        * path.cc (symlink): Call `set_file_attribute()' and
        `SetFileAttributeA()' instead of `chmod()' to set
        uid/gid correct.
@
text
@d86 1
a86 1
#if defined(__CYGWIN32__) || defined(__rtems__)
d128 1
a128 1
#ifdef __CYGWIN32__
d169 1
a169 1
#ifdef __CYGWIN32__
@


1.1
log
@Initial revision
@
text
@d33 2
d51 1
@


1.1.1.1
log
@import newlib-2000-02-17 snapshot
@
text
@@
