head	1.67;
access;
symbols
	cygwin-1_7_35-release:1.67
	cygwin-1_7_34-release:1.67
	newlib-2_2_0:1.66.0.2
	cygwin-1_7_33-release:1.66
	cygwin-1_7_32-release:1.65
	cygwin-1_7_31-release:1.65
	cygwin-1_7_30-release:1.65
	cygwin-1_7_29-release:1.65
	cygwin-1_7_28-release:1.65
	newlib-2_1_0:1.65
	cygwin-1_7_27-release:1.65
	cygwin-1_7_26-release:1.65
	cygwin-1_7_25-release:1.64
	cygwin-1_7_24-release:1.64
	cygwin-1_7_23-release:1.64
	cygwin-1_7_22-release:1.64
	cygwin-1_7_21-release:1.64
	cygwin-1_7_20-release:1.63
	cygwin-1_7_19-release:1.63
	cygwin-64bit-postmerge:1.61
	cygwin-64bit-premerge-branch:1.61.0.2
	cygwin-64bit-premerge:1.61
	cygwin-1_7_18-release:1.61
	newlib-2_0_0:1.61
	cygwin-1_7_17-release:1.61
	cygwin-64bit-branch:1.60.0.2
	cygwin-1_7_16-release:1.60
	cygwin-1_7_15-release:1.60
	cygwin-1_7_14_2-release:1.60
	cygwin-1_7_14-release:1.60
	cygwin-1_7_12-release:1.60
	cygwin-1_7_11-release:1.60
	cygwin-1_7_10-release:1.60
	newlib-1_20_0:1.60
	cygwin-1_7_9-release:1.60
	cygwin-1_7_8-release:1.60
	newlib-1_19_0:1.60
	cygwin-1_7_7-release:1.59
	cygwin-1_7_5-release:1.59
	cygwin-1_7_4-release:1.59
	cygwin-1_7_3-release:1.59
	cygwin-1_7_2-release:1.59
	newlib-1_18_0:1.56
	cygwin-1_7_1-release:1.55
	newlib-1_17_0-arc:1.49.0.2
	binutils-arc-20080908-branch:1.47.0.2
	binutils-arc-20080908-branchpoint:1.47
	newlib-1_17_0:1.49
	newlib-1_16_0:1.47
	newlib-1_15_0:1.45
	newlib-csl-coldfire-4_1-32:1.42.2.1
	newlib-csl-sourcerygxx-4_1-32:1.42.2.1
	newlib-csl-innovasic-fido-3_4_4-33:1.42.2.1
	newlib-csl-coldfire-4_1-30:1.42.2.1
	newlib-csl-sourcerygxx-4_1-30:1.42.2.1
	newlib-csl-coldfire-4_1-28:1.42.2.1
	newlib-csl-sourcerygxx-4_1-28:1.42.2.1
	newlib-csl-arm-2006q3-27:1.42.2.1
	newlib-csl-sourcerygxx-4_1-27:1.42.2.1
	newlib-csl-arm-2006q3-26:1.42.2.1
	newlib-csl-sourcerygxx-4_1-26:1.42.2.1
	newlib-csl-sourcerygxx-4_1-24:1.42.2.1
	newlib-csl-sourcerygxx-4_1-23:1.42.2.1
	newlib-csl-sourcerygxx-4_1-21:1.42.2.1
	newlib-csl-arm-2006q3-21:1.42.2.1
	newlib-csl-arm-2006q3-19:1.42.2.1
	newlib-csl-sourcerygxx-4_1-19:1.42.2.1
	newlib-csl-sourcerygxx-4_1-18:1.42.2.1
	newlib-csl-sourcerygxx-3_4_4-25:1.45
	newlib-csl-sourcerygxx-4_1-17:1.42
	cr-0x5f1:1.42.0.6
	newlib-csl-sourcerygxx-4_1-14:1.42
	newlib-csl-sourcerygxx-4_1-13:1.42
	newlib-csl-sourcerygxx-4_1-12:1.42
	newlib-csl-sourcerygxx-4_1-9:1.42
	newlib-csl-sourcerygxx-4_1-8:1.42
	newlib-csl-sourcerygxx-4_1-7:1.42
	newlib-csl-arm-2006q1-6:1.42
	newlib-csl-sourcerygxx-4_1-6:1.42
	newlib-csl-sourcerygxx-4_1-5:1.42
	newlib-csl-sourcerygxx-4_1-4:1.42
	newlib-autotools-branch:1.42.0.4
	newlib-csl-20060320-branch:1.42.0.2
	newlib-csl-20060320-branchpoint:1.42
	newlib-1_14_0:1.41
	newlib-csl-arm-2005-q1b:1.40
	newlib-csl-arm-2005-q1a:1.40
	newlib-1_13_0:1.40
	csl-arm-2004-q3:1.40
	csl-arm-2004-q1a:1.39
	csl-arm-2004-q1:1.39
	newlib-1_12_0:1.39
	csl-arm-2003-q4:1.39
	w32api-2_2:1.35
	mingw-runtime-2_4:1.35
	newlib-1_11_0:1.35
	cygnus_cvs_20020108_pre:1.11
	newlib-1_10_0:1.9
	newlib-1_9_0:1.4
	newlib-2000-02-17:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.67
date	2015.01.14.09.25.15;	author corinna;	state Exp;
branches;
next	1.66;

1.66
date	2014.08.18.16.43.42;	author jjohnstn;	state Exp;
branches;
next	1.65;

1.65
date	2013.10.23.10.04.42;	author corinna;	state Exp;
branches;
next	1.64;

1.64
date	2013.07.09.13.14.31;	author corinna;	state Exp;
branches;
next	1.63;

1.63
date	2013.05.13.21.39.51;	author dj;	state Exp;
branches;
next	1.62;

1.62
date	2013.05.08.23.13.51;	author jjohnstn;	state Exp;
branches;
next	1.61;

1.61
date	2012.09.26.20.06.47;	author jjohnstn;	state Exp;
branches;
next	1.60;

1.60
date	2010.12.02.19.30.46;	author jjohnstn;	state Exp;
branches
	1.60.2.1;
next	1.59;

1.59
date	2010.03.02.19.28.39;	author jjohnstn;	state Exp;
branches;
next	1.58;

1.58
date	2010.02.26.09.41.43;	author corinna;	state Exp;
branches;
next	1.57;

1.57
date	2010.02.25.16.10.42;	author corinna;	state Exp;
branches;
next	1.56;

1.56
date	2009.12.10.17.12.11;	author jjohnstn;	state Exp;
branches;
next	1.55;

1.55
date	2009.10.20.16.44.11;	author jjohnstn;	state Exp;
branches;
next	1.54;

1.54
date	2009.09.28.16.42.21;	author jjohnstn;	state Exp;
branches;
next	1.53;

1.53
date	2009.06.02.20.39.17;	author jjohnstn;	state Exp;
branches;
next	1.52;

1.52
date	2009.03.31.09.31.38;	author corinna;	state Exp;
branches;
next	1.51;

1.51
date	2009.03.24.10.13.27;	author corinna;	state Exp;
branches;
next	1.50;

1.50
date	2009.03.20.20.44.14;	author jjohnstn;	state Exp;
branches;
next	1.49;

1.49
date	2008.11.19.21.05.31;	author jjohnstn;	state Exp;
branches;
next	1.48;

1.48
date	2008.11.19.19.48.31;	author jjohnstn;	state Exp;
branches;
next	1.47;

1.47
date	2007.03.15.21.32.12;	author jjohnstn;	state Exp;
branches;
next	1.46;

1.46
date	2007.02.01.16.33.05;	author jjohnstn;	state Exp;
branches;
next	1.45;

1.45
date	2006.08.29.21.00.59;	author jjohnstn;	state Exp;
branches;
next	1.44;

1.44
date	2006.08.16.21.39.43;	author jjohnstn;	state Exp;
branches;
next	1.43;

1.43
date	2006.08.01.15.54.04;	author jjohnstn;	state Exp;
branches;
next	1.42;

1.42
date	2006.01.31.19.33.56;	author jjohnstn;	state Exp;
branches
	1.42.2.1;
next	1.41;

1.41
date	2005.08.10.20.35.13;	author jjohnstn;	state Exp;
branches;
next	1.40;

1.40
date	2004.06.22.21.54.51;	author aoliva;	state Exp;
branches;
next	1.39;

1.39
date	2003.05.13.09.46.48;	author corinna;	state Exp;
branches;
next	1.38;

1.38
date	2003.05.09.21.38.31;	author corinna;	state Exp;
branches;
next	1.37;

1.37
date	2003.03.09.21.52.23;	author corinna;	state Exp;
branches;
next	1.36;

1.36
date	2003.03.07.20.41.49;	author corinna;	state Exp;
branches;
next	1.35;

1.35
date	2002.12.16.22.35.32;	author jjohnstn;	state Exp;
branches;
next	1.34;

1.34
date	2002.10.11.10.28.30;	author rsandifo;	state Exp;
branches;
next	1.33;

1.33
date	2002.09.20.17.11.29;	author jjohnstn;	state Exp;
branches;
next	1.32;

1.32
date	2002.09.06.15.45.58;	author jjohnstn;	state Exp;
branches;
next	1.31;

1.31
date	2002.09.04.18.17.55;	author jjohnstn;	state Exp;
branches;
next	1.30;

1.30
date	2002.09.04.18.16.55;	author jjohnstn;	state Exp;
branches;
next	1.29;

1.29
date	2002.08.23.01.56.03;	author fitzsim;	state Exp;
branches;
next	1.28;

1.28
date	2002.08.17.06.10.33;	author jjohnstn;	state Exp;
branches;
next	1.27;

1.27
date	2002.07.24.15.44.24;	author jjohnstn;	state Exp;
branches;
next	1.26;

1.26
date	2002.07.19.23.21.42;	author jjohnstn;	state Exp;
branches;
next	1.25;

1.25
date	2002.07.17.23.25.43;	author jjohnstn;	state Exp;
branches;
next	1.24;

1.24
date	2002.07.15.22.25.52;	author jjohnstn;	state Exp;
branches;
next	1.23;

1.23
date	2002.07.15.22.17.02;	author jjohnstn;	state Exp;
branches;
next	1.22;

1.22
date	2002.07.15.21.35.44;	author jjohnstn;	state Exp;
branches;
next	1.21;

1.21
date	2002.07.02.18.18.57;	author jjohnstn;	state Exp;
branches;
next	1.20;

1.20
date	2002.06.21.18.40.48;	author jjohnstn;	state Exp;
branches;
next	1.19;

1.19
date	2002.06.21.18.15.52;	author jjohnstn;	state Exp;
branches;
next	1.18;

1.18
date	2002.06.18.21.20.25;	author brolley;	state Exp;
branches;
next	1.17;

1.17
date	2002.05.17.23.39.37;	author jjohnstn;	state Exp;
branches;
next	1.16;

1.16
date	2002.04.19.23.52.48;	author jjohnstn;	state Exp;
branches;
next	1.15;

1.15
date	2002.04.13.10.10.03;	author aoliva;	state Exp;
branches;
next	1.14;

1.14
date	2002.02.25.23.51.10;	author jjohnstn;	state Exp;
branches;
next	1.13;

1.13
date	2002.02.15.21.19.40;	author jjohnstn;	state Exp;
branches;
next	1.12;

1.12
date	2002.02.03.09.24.08;	author mrg;	state Exp;
branches;
next	1.11;

1.11
date	2002.01.07.19.33.23;	author jjohnstn;	state Exp;
branches;
next	1.10;

1.10
date	2001.12.22.22.47.57;	author geoffk;	state Exp;
branches;
next	1.9;

1.9
date	2001.11.12.21.04.39;	author jjohnstn;	state Exp;
branches;
next	1.8;

1.8
date	2001.08.29.19.47.43;	author jjohnstn;	state Exp;
branches;
next	1.7;

1.7
date	2001.03.07.21.03.43;	author cgf;	state Exp;
branches;
next	1.6;

1.6
date	2001.03.06.01.04.42;	author jjohnstn;	state Exp;
branches;
next	1.5;

1.5
date	2001.01.31.20.11.48;	author jjohnstn;	state Exp;
branches;
next	1.4;

1.4
date	2000.08.01.20.51.51;	author dj;	state Exp;
branches;
next	1.3;

1.3
date	2000.06.27.19.51.33;	author jjohnstn;	state Exp;
branches;
next	1.2;

1.2
date	2000.06.09.01.13.36;	author ranjith;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.39.46;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.60.2.1
date	2012.10.16.15.58.09;	author corinna;	state Exp;
branches;
next	;

1.42.2.1
date	2006.08.29.20.26.58;	author pbrook;	state Exp;
branches;
next	;

1.1.1.1
date	2000.02.17.19.39.46;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.67
log
@	* configure.host: Add extra system for OpenRISC baremetal
	* libc/include/sys/config.h: Dynamic reentrancy for or1k sys targets
	* libc/sys/or1k/: New system for or1k baremetal
	* libc/sys/or1k/Makefile.am: New file
	* libc/sys/or1k/Makefile.in: New file
	* libc/sys/or1k/aclocal.m4: New file
	* libc/sys/or1k/configure.in: New file
	* libc/sys/or1k/configure: New file
	* libc/sys/or1k/getreent.S: New file
	* libc/sys/or1k/mlock.S: New file
	* libc/sys/or1k/or1k-asm.S: New file
@
text
@#ifndef __SYS_CONFIG_H__
#define __SYS_CONFIG_H__

#include <machine/ieeefp.h>  /* floating point macros */
#include <sys/features.h>	/* POSIX defs */

#ifdef __aarch64__
#define MALLOC_ALIGNMENT 16
#endif

/* exceptions first */
#if defined(__H8500__) || defined(__W65__)
#define __SMALL_BITFIELDS
/* ???  This conditional is true for the h8500 and the w65, defining H8300
   in those cases probably isn't the right thing to do.  */
#define H8300 1
#endif

/* 16 bit integer machines */
#if defined(__Z8001__) || defined(__Z8002__) || defined(__H8500__) || defined(__W65__) || defined (__mn10200__) || defined (__AVR__)

#undef INT_MAX
#undef UINT_MAX
#define INT_MAX 32767
#define UINT_MAX 65535
#endif

#if defined (__H8300__) || defined (__H8300H__) || defined(__H8300S__) || defined (__H8300SX__)
#define __SMALL_BITFIELDS
#define H8300 1
#undef INT_MAX
#undef UINT_MAX
#define INT_MAX __INT_MAX__
#define UINT_MAX (__INT_MAX__ * 2U + 1)
#endif

#if (defined(__CR16__) || defined(__CR16C__) ||defined(__CR16CP__))
#ifndef __INT32__
#define __SMALL_BITFIELDS      
#undef INT_MAX
#undef UINT_MAX
#define INT_MAX 32767
#define UINT_MAX (__INT_MAX__ * 2U + 1)
#else /* INT32 */
#undef INT_MAX
#undef UINT_MAX
#define INT_MAX 2147483647
#define UINT_MAX (__INT_MAX__ * 2U + 1)
#endif /* INT32 */

#endif /* CR16C */

#if defined (__xc16x__) || defined (__xc16xL__) || defined (__xc16xS__)
#define __SMALL_BITFIELDS
#endif

#ifdef __W65__
#define __SMALL_BITFIELDS
#endif

#if defined(__D10V__)
#define __SMALL_BITFIELDS
#undef INT_MAX
#undef UINT_MAX
#define INT_MAX __INT_MAX__
#define UINT_MAX (__INT_MAX__ * 2U + 1)
#define _POINTER_INT short
#endif

#if defined(__mc68hc11__) || defined(__mc68hc12__) || defined(__mc68hc1x__)
#undef INT_MAX
#undef UINT_MAX
#define INT_MAX __INT_MAX__
#define UINT_MAX (__INT_MAX__ * 2U + 1)
#define _POINTER_INT short
#endif

#if defined(__m68k__) || defined(__mc68000__)
#define _READ_WRITE_RETURN_TYPE _ssize_t
#endif

#ifdef ___AM29K__
#define _FLOAT_RET double
#endif

#ifdef __i386__
#ifndef __unix__
/* in other words, go32 */
#define _FLOAT_RET double
#endif
#if defined(__linux__) || defined(__RDOS__)
/* we want the reentrancy structure to be returned by a function */
#define __DYNAMIC_REENT__
#define HAVE_GETDATE
#define _HAVE_SYSTYPES
#define _READ_WRITE_RETURN_TYPE _ssize_t
#define __LARGE64_FILES 1
/* we use some glibc header files so turn on glibc large file feature */
#define _LARGEFILE64_SOURCE 1
#endif
#endif

#ifdef __mn10200__
#define __SMALL_BITFIELDS
#endif

#ifdef __AVR__
#define __SMALL_BITFIELDS
#define _POINTER_INT short
#endif

#ifdef __v850
#define __ATTRIBUTE_IMPURE_PTR__ __attribute__((__sda__))
#endif

/* For the PowerPC eabi, force the _impure_ptr to be in .sdata */
#if defined(__PPC__)
#if defined(_CALL_SYSV)
#define __ATTRIBUTE_IMPURE_PTR__ __attribute__((__section__(".sdata")))
#endif
#ifdef __SPE__
#define _LONG_DOUBLE double
#endif
#endif

/* Configure small REENT structure for Xilinx MicroBlaze platforms */
#if defined (__MICROBLAZE__)
#ifndef _REENT_SMALL
#define _REENT_SMALL
#endif
/* Xilinx XMK uses Unix98 mutex */
#ifdef __XMK__
#define _UNIX98_THREAD_MUTEX_ATTRIBUTES
#endif
#endif

#if defined(__mips__) && !defined(__rtems__)
#define __ATTRIBUTE_IMPURE_PTR__ __attribute__((__section__(".sdata")))
#endif

#ifdef __xstormy16__
#define __SMALL_BITFIELDS
#undef INT_MAX
#undef UINT_MAX
#define INT_MAX __INT_MAX__
#define UINT_MAX (__INT_MAX__ * 2U + 1)
#define MALLOC_ALIGNMENT 8
#define _POINTER_INT short
#define __BUFSIZ__ 16
#define _REENT_SMALL
#endif

#if defined __MSP430__
#ifndef _REENT_SMALL
#define _REENT_SMALL
#endif

#define __SMALL_BITFIELDS

#ifdef __MSP430X_LARGE__
#define _POINTER_INT long
#else
#define _POINTER_INT int
#endif
#endif

#ifdef __m32c__
#define __SMALL_BITFIELDS
#undef INT_MAX
#undef UINT_MAX
#define INT_MAX __INT_MAX__
#define UINT_MAX (__INT_MAX__ * 2U + 1)
#define MALLOC_ALIGNMENT 8
#if defined(__r8c_cpu__) || defined(__m16c_cpu__)
#define _POINTER_INT short
#else
#define _POINTER_INT long
#endif
#define __BUFSIZ__ 16
#define _REENT_SMALL
#endif /* __m32c__ */

#ifdef __SPU__
#define MALLOC_ALIGNMENT 16
#define __CUSTOM_FILE_IO__
#endif

#if defined(__or1k__) || defined(__or1knd__)
#define __DYNAMIC_REENT__
#endif

/* This block should be kept in sync with GCC's limits.h.  The point
   of having these definitions here is to not include limits.h, which
   would pollute the user namespace, while still using types of the
   the correct widths when deciding how to define __int32_t and
   __int64_t.  */
#ifndef __INT_MAX__
# ifdef INT_MAX
#  define __INT_MAX__ INT_MAX
# else
#  define __INT_MAX__ 2147483647
# endif
#endif

#ifndef __LONG_MAX__
# ifdef LONG_MAX
#  define __LONG_MAX__ LONG_MAX
# else
#  if defined (__alpha__) || (defined (__sparc__) && defined(__arch64__)) \
      || defined (__sparcv9)
#   define __LONG_MAX__ 9223372036854775807L
#  else
#   define __LONG_MAX__ 2147483647L
#  endif /* __alpha__ || sparc64 */
# endif
#endif
/* End of block that should be kept in sync with GCC's limits.h.  */

#ifndef _POINTER_INT
#define _POINTER_INT long
#endif

#ifdef __frv__
#define __ATTRIBUTE_IMPURE_PTR__ __attribute__((__section__(".sdata")))
#endif
#undef __RAND_MAX
#if __INT_MAX__ == 32767
#define __RAND_MAX 32767
#else
#define __RAND_MAX 0x7fffffff
#endif

#if defined(__CYGWIN__)
#include <cygwin/config.h>
#if !defined (__STRICT_ANSI__) || (__STDC_VERSION__ >= 199901L)
#define __USE_XOPEN2K 1
#endif
#endif

#if defined(__rtems__)
#define __FILENAME_MAX__ 255
#define _READ_WRITE_RETURN_TYPE _ssize_t
#define __DYNAMIC_REENT__
#define _REENT_GLOBAL_ATEXIT
#endif

#ifndef __EXPORT
#define __EXPORT
#endif

#ifndef __IMPORT
#define __IMPORT
#endif

/* Define return type of read/write routines.  In POSIX, the return type
   for read()/write() is "ssize_t" but legacy newlib code has been using
   "int" for some time.  If not specified, "int" is defaulted.  */
#ifndef _READ_WRITE_RETURN_TYPE
#define _READ_WRITE_RETURN_TYPE int
#endif
/* Define `count' parameter of read/write routines.  In POSIX, the `count'
   parameter is "size_t" but legacy newlib code has been using "int" for some
   time.  If not specified, "int" is defaulted.  */
#ifndef _READ_WRITE_BUFSIZE_TYPE
#define _READ_WRITE_BUFSIZE_TYPE int
#endif

#ifndef __WCHAR_MAX__
#if __INT_MAX__ == 32767 || defined (_WIN32)
#define __WCHAR_MAX__ 0xffffu
#endif
#endif

/* See if small reent asked for at configuration time and
   is not chosen by the platform by default.  */
#ifdef _WANT_REENT_SMALL
#ifndef _REENT_SMALL
#define _REENT_SMALL
#endif
#endif

/* If _MB_EXTENDED_CHARSETS_ALL is set, we want all of the extended
   charsets.  The extended charsets add a few functions and a couple
   of tables of a few K each. */
#ifdef _MB_EXTENDED_CHARSETS_ALL
#define _MB_EXTENDED_CHARSETS_ISO 1
#define _MB_EXTENDED_CHARSETS_WINDOWS 1
#endif

#endif /* __SYS_CONFIG_H__ */
@


1.66
log
@
2014-08-18  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/sys/config.h[__m68k__]: Set _READ_WRITE_RETURN_TYPE
        to _ssize_t to match underlying code in libgloss.
@
text
@d188 4
@


1.65
log
@	* libc/include/stdio.h (funopen): Change prototype of
	__readfn and __writefn parameter to match new definition of
	FILE's _read and _write methods.
	(_funopen_r): Ditto.
	(funopen): Ditto.
	(_funopen_r): Ditto.
	* libc/include/sys/config.h (_READ_WRITE_BUFSIZE_TYPE) Define
	as type int if not already defined.  Add comment to explain.
	* libc/include/sys/reent.h: Include stddef.h.
	(struct __sFILE): Change type of last parameter in declaration
	of _read and _write methods to _READ_WRITE_BUFSIZE_TYPE.
	(struct __sFILE64): Ditto.
	* libc/stdio/local.h (__sread): Declare with last parameter set
	to _READ_WRITE_BUFSIZE_TYPE.
	(__seofread): Ditto.
	(__swrite): Ditto.
	(__swrite64): Ditto.
	* libc/stdio/fvwrite.c (__sfvwrite_r): Change type of local
	variables w and s to _READ_WRITE_RETURN_TYPE.
	* libc/stdio/fflush.c (__sflush_r): Change type of local variables
	n and t to _READ_WRITE_BUFSIZE_TYPE and _READ_WRITE_RETURN_TYPE.
	Add local variables flags to keep _flags value.
	* libc/stdio/fmemopen.c (fmemreader): Align to above change.
	(fmemwriter): Ditto.
	* libc/stdio/fopencookie.c (fcreader): Ditto.
	(fcwriter): Ditto.
	* libc/stdio/funopen.c (funread): Ditto.
	(funwrite): Ditto.
	(funreader): Ditto.
	(funwriter): Ditto.
	* libc/stdio/open_memstream.c (memwriter): Ditto.
	* libc/stdio/stdio.c (__sread): Ditto.
	(__seofread): Ditto.
	(__swrite): Ditto.
	* libc/stdio64/stdio64.c (__swrite64): Ditto.
@
text
@d78 4
@


1.64
log
@	* libc/include/sys/config.h (__DYNAMIC_REENT__): Define for RTEMS.
@
text
@d253 6
@


1.63
log
@[newlib]
* configure.host (msp430): Add.
* libc/include/machine/ieeefp.h: Add MSP430 support.
* libc/include/machine/setjmp.h: Likewise.
* libc/include/sys/config.h: Likewise.
* libc/machine/configure.in (msp430): Add.
* libc/machine/configure: Regenerate.
* libc/machine/msp430: New directory.

[libgloss]
* configure.in (msp430*-*-elf): Add.
* configure: Regenerate.
* msp430: New directory.
@
text
@d235 1
@


1.62
log
@
2013-05-07  Sebastian Huber <sebastian.huber@@embedded-brains.de>

        * libc/include/sys/config.h (_REENT_GLOBAL_ATEXIT): Define for
        RTEMS.
        * libc/include/sys/reent.h (_reent): Use _REENT_GLOBAL_ATEXIT.
        (_global_atexit): Declare if _REENT_GLOBAL_ATEXIT is defined.
        * libc/reent/reent.c (_reclaim_reent): Remove atexit cleanup if
        _REENT_GLOBAL_ATEXIT is defined.
        (_wrapup_reent): Remove atexit handling if _REENT_GLOBAL_ATEXIT
        is defined.
        * libc/stdlib/__atexit.c (_global_atexit0): Define if
        _REENT_GLOBAL_ATEXIT is defined.
        * libc/stdlib/__call_atexit.c (_global_atexit): Define if
        _REENT_GLOBAL_ATEXIT is defined.
@
text
@d148 15
@


1.61
log
@
2012-09-26  Ian Bolton  <ian.bolton@@arm.com>
        Jim MacArthur  <jim.macarthur@@arm.com>
        Marcus Shawcroft  <marcus.shawcroft@@arm.com>
        Nigel Stephens  <nigel.stephens@@arm.com>
        Ramana Radhakrishnan  <ramana.radhakrishnan@@arm.com>
        Richard Earnshaw  <rearnsha@@arm.com>
        Sofiane Naci  <sofiane.naci@@arm.com>
        Tejas Belagod  <tejas.belagod@@arm.com>
        Yufeng Zhang  <yufeng.zhang@@arm.com>

        * configure.host: Add AArch64.
        * libc/include/machine/ieeefp.h: Add AArch64.
        * libc/include/machine/setjmp.h: Add AArch64.
        * libc/include/machine/time.h: Add AArch64.
        * libc/include/sys/config.h: Add AArch64.
        * libc/machine/aarch64/Makefile.am: New file.
        * libc/machine/aarch64/Makefile.in: Generated.
        * libc/machine/aarch64/aclocal.m4: Generated.
        * libc/machine/aarch64/configure: Generated.
        * libc/machine/aarch64/configure.in: New file.
        * libc/machine/aarch64/setjmp.S: New file.
        * libc/machine/configure.in: Add AArch64.
        * libc/machine/configure: Re-generated.
        * libm/machine/aarch64/Makefile.am: New file.
        * libm/machine/aarch64/Makefile.in: Generated.
        * libm/machine/aarch64/aclocal.m4: Generated.
        * libm/machine/aarch64/configure: Generated.
        * libm/machine/aarch64/configure.in: New file.
        * libm/machine/aarch64/s_ceil.c: New file.
        * libm/machine/aarch64/s_floor.c: New file.
        * libm/machine/aarch64/s_fma.c: New file.
        * libm/machine/aarch64/s_fmax.c: New file.
        * libm/machine/aarch64/s_fmin.c: New file.
        * libm/machine/aarch64/s_llrint.c: New file.
        * libm/machine/aarch64/s_llround.c: New file.
        * libm/machine/aarch64/s_lrint.c: New file.
        * libm/machine/aarch64/s_lround.c: New file.
        * libm/machine/aarch64/s_nearbyint.c: New file.
        * libm/machine/aarch64/s_rint.c: New file.
        * libm/machine/aarch64/s_round.c: New file.
        * libm/machine/aarch64/s_trunc.c: New file.
        * libm/machine/aarch64/sf_ceil.c: New file.
        * libm/machine/aarch64/sf_floor.c: New file.
        * libm/machine/aarch64/sf_fma.c: New file.
        * libm/machine/aarch64/sf_fmax.c: New file.
        * libm/machine/aarch64/sf_fmin.c: New file.
        * libm/machine/aarch64/sf_llrint.c: New file.
        * libm/machine/aarch64/sf_llround.c: New file.
        * libm/machine/aarch64/sf_lrint.c: New file.
        * libm/machine/aarch64/sf_lround.c: New file.
        * libm/machine/aarch64/sf_nearbyint.c: New file.
        * libm/machine/aarch64/sf_rint.c: New file.
        * libm/machine/aarch64/sf_round.c: New file.
        * libm/machine/aarch64/sf_trunc.c: New file.
        * libm/machine/configure.in: Add AArch64.
        * libm/machine/configure: Re-generated.
@
text
@d220 1
@


1.60
log
@
2010-12-02  Jayant Sonar  jayant.sonar@@kpitcummins.com
            Kaushik Phatak  kaushik.phatak@@kpitcummins.com

        * configure.host: Add CR16 support.
        * libc/include/machine/ieeefp.h: Ditto.
        * libc/include/machine/setjmp.h: Ditto.
        * libc/include/sys/config.h: Ditto.
        * libc/machine/configure.in: Ditto
        * libc/machine/configure: Regenerated
        * libc/machine/cr16/aclocal.m4: New.
        * libc/machine/cr16/configure.in: New
        * libc/machine/cr16/configure: New
        * libc/machine/cr16/getenv.c: New
        * libc/machine/cr16/Makefile.am: New
        * libc/machine/cr16/Makefile.in: New
        * libc/machine/cr16/setjmp.S: New
        * libc/machine/cr16/sys/asm.h: New
        * libc/machine/cr16/sys/libh.h: New
        * libc/machine/cr16/sys/syscall.h: New
@
text
@d7 4
@


1.60.2.1
log
@	Pull in changes from HEAD
	Align ChangeLog with head
	New file ChangeLog.64bit
@
text
@a6 4
#ifdef __aarch64__
#define MALLOC_ALIGNMENT 16
#endif

@


1.59
log
@
2010-03-02  Craig Howland <howland@@LGSInnovations.com>

        * libc/include/sys/features.h:  Add POSIX.1-permitted definition of
        _POSIX_C_SOURCE if not already defined and _XOPEN_SOURCE has an
        appropriate value.  Specifically, check for POSIX.1-2008 & 2001 values.
        * libc/include/sys/config.h:  Add #include <sys/features.h> so that all
        includes get the new check added to it.
@
text
@d33 16
@


1.58
log
@	* libc/time/strftime.c: Add support for era and alt_digits data from
	LC_TIME locale category.  Conditionalize using _WANT_C99_TIME_FORMATS
	flag.
	(STRTOUL): Define differently for building strftime or wcsftime.
	(STRCPY): Ditto.
	(STRCHR): Ditto.
	(STRLEN): Ditto.
	(CHECK_LENGTH): Define to simplify code.
	(era_info_t): New type to store era info.
	(get_era_info): New function to fetch era info matching incoming
	struct tm.
	(free_era_info): New function to free era info.
	(alt_digits_t): New type to store alternative digits.
	(get_alt_digits): New function to convert alt_digits string into
	alt_digits_t structure.
	(free_alt_digits): New function to free alt_digits info.
	(conv_to_alt_digits): New function to convert unsigned value into
	alternative digits.
	(strftime): Conditionalize on _WANT_C99_TIME_FORMATS.  If
	_WANT_C99_TIME_FORMATS is defined, define as just a wrapper function
	providing era_info and alt_digits pointers and call ...
	(__strftime): Rename from strftime and make static if
	_WANT_C99_TIME_FORMATS is defined.  Add parameters for era_info and
	alt_digits pointers.  Handle conversion modifiers according to
	POSIX-1.2008.  Redefine %F and %Y according to POSIX.  Add default case
	to allow to bail out on invalid conversion specifiers.
	* libc/include/sys/config.h: Move Cygwin build flags to Cygwin's
	config.h.

	* libc/include/stdio.h: Remove __CYGWIN_USE_BIG_TYPES__ condition.
@
text
@d5 1
@


1.57
log
@	* libc/locale/locale.c:  Throughout, extensively comment on the
	reason for using __CYGWIN__.
	(lconv): Remove _CONST entirely.
	(loadlocale): Guard calls to function loading locale-specific
	category data with __HAVE_LOCALE_INFO__ rather than __CYGWIN__.
	* libc/sys/config.h (__HAVE_LOCALE_INFO__): Define for Cygwin.
@
text
@a190 3
#define __LINUX_ERRNO_EXTENSIONS__ 1
#define _MB_EXTENDED_CHARSETS_ALL 1
#define __HAVE_LOCALE_INFO__ 1
@


1.56
log
@
2009-12-10  Conny Marco Menebrocker  <c-m-m@@gmx.de>

        * configure.host: Add xc16x support.
        * libc/include/machine/ieeefp.h: Ditto.
        * libc/include/sys/config.h: Ditto.
        * libc/machine/configure.in: Ditto.
        * libc/machine/Makefile.in: Regenerated.
        * libc/machine/aclocal.m4: Ditto.
        * libc/machine/configure: Ditto.
        * libc/machine/xc16x/Makefile.am: New file.
        * libc/machine/xc16x/Makefile.in: Ditto.
        * libc/machine/xc16x/aclocal.m4: Ditto.
        * libc/machine/xc16x/configure: Ditto.
        * libc/machine/xc16x/configure.in: Ditto.
        * libc/machine/xc16x/putchar.c: Ditto.
        * libc/machine/xc16x/puts.c: Ditto.
        * libc/machine/xc16x/setjmp.S: Ditto.
@
text
@d193 1
@


1.55
log
@
2009-10-16  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/sys/config.h[__CYGWIN__]: Set __USE_XOPEN2K flag
        if not __STRICT_ANSI__ or stdc version C99 or greater.
        * libc/include/stdio.h[__STRICT_ANSI__]: Add __USE_XOPEN2K check
        for fseeko and ftello prototypes.
@
text
@d32 4
@


1.54
log
@
2009-09-28  Michael Eager <eager@@eagercon.com>

        * configure.host: Add microblaze.
        * libc/include/machine/ieeefp.h [MICROBLAZE]: Define __IEEE_BIG_ENDIAN.
        * libc/include/machine/setjmp.h [MICROBLAZE]: Define _JBLEN, _JBTYPE.
        * libc/include/sys/config.h [MICROBLAZE]: Define _REENT_SMALL,
        _UNIX98_THREAD_MUTEX_ATTRIBUTES.
        * libc/include/sys/types.h: Treat XMK like rtems, define
        PTHREAD_MUTEX_NORMAL, PTHREAD_MUTEX_ERRORCHECK, PTHREAD_MUTEX_RECURSIVE,
        PTHREAD_MUTEX_DEFAULT, PTHREAD_STACK_MIN, define stuct pthread_attr_s.
        * libc/machine/configure.in: Add microblaze.
        * libc/machine/configure: Add microblaze (not regenerated).
        * libc/machine/microblaze/configure.in: NEW.
        * libc/machine/microblaze/configure: Generate.
        * libc/machine/microblaze/Makefile.am: NEW.
        * libc/machine/microblaze/Makefile.in: Generate.
        * libc/machine/microblaze/{abort.c, strcmp.c, strcpy.c, strlen.c,
        mallocr.c, longjmp.S, setjmp.S}: NEW.
        * libc/stdlib/mallocr.c [MICROBLAZE]: Don't declare sbrk prototype,
        mALLOc(): return malloc value.
@
text
@d189 3
@


1.53
log
@
2009-06-02  Richard Earnshaw  <rearnsha@@arm.com>

        * libc/include/sys/config.h: Remove specification of _REENT_SMALL for
        thumb2.
@
text
@d97 11
@


1.52
log
@	* libc/ctype/Makefile.am: Remove _tolower.c and _toupper.c
	source files.  Add a dependency rule for ctype_o to note
	changes in ctype_iso.h and ctype_cp.h.
	* libc/ctype/Makefile.in: Regenerate.
	* libc/ctype/_tolower.c: Remove file.
	* libc/ctype/_toupper.c: Remove file.
	* libc/ctype/ctype_.c: Make sure ALLOW_NEGATIVE_CTYPE_INDEX
	is always defined on Cygwin.
	(_ctype_b): Don't make `static const' on Cygwin.
	(ctype_iso.h): Include if _MB_EXTENDED_CHARSETS_ISO is set.
	(ctype_cp.h): Include if _MB_EXTENDED_CHARSETS_WINDOWS is set.
	(__ctype_ptr): Drop definition.
	(__ctype_ptr__): De-constify.  Mark as __EXPORT symbol.
	(_ctype_): Add Cygwin-specifc asm define.
	(__set_ctype): New function to set __ctype_ptr__ according to
	current charset.
	* libc/ctype/ctype_cp.h: New file containing Windows codepage
	specific character class tables.
	* libc/ctype/ctype_iso.h: New file containing ISO-8859-x
	specific character class tables.
	* libc/ctype/tolower.c (tolower): Reimplement to support any singlebyte
	charset if one of the extended charsets is enabled.
	* libc/ctype/toupper.c (toupper): Ditto.
	* libc/include/ctype.h (_tolower): Define as macro per POSIX.
	(_toupper): Ditto.
	(__ctype_ptr__): De-constify.
	(toupper): Disable macro on systems supporting extended charsets.
	(tolower): Ditto.
	* libc/include/sys/config.h (__EXPORT): Define empty if not defined.
	* libc/locale/locale.c (__mb_cur_max): Mark as __EXPORT symbol.
	(__set_ctype): Declare unconditionally.
	(loadlocale): Remove __CYGWIN__ guard around __set_ctype call.
@
text
@a127 5
#ifdef __thumb2__
/* Thumb-2 based ARMv7M devices are really small.  */
#define _REENT_SMALL
#endif

@


1.51
log
@	* libc/ctype/iswalpha.c: Handle all wchar_t as unicode on
	_MB_CAPABLE systems.
	* libc/ctype/iswblank.c: Ditto.
	* libc/ctype/iswcntrl.c: Ditto.
	* libc/ctype/iswprint.c: Ditto.
	* libc/ctype/iswpunct.c: Ditto.
	* libc/ctype/iswspace.c: Ditto.
	* libc/ctype/jp2uc.c (__jp2uc): On Cygwin, just return c.
	Explain why.
	* libc/ctype/towlower.c: Ditto.
	* libc/ctype/towupper.c: Ditto.
	* libc/include/sys/config.h: Define _MB_EXTENDED_CHARSETS_ISO
	and _MB_EXTENDED_CHARSETS_WINDOWS if _MB_EXTENDED_CHARSETS_ALL is
	defined.  Define _MB_EXTENDED_CHARSETS_ALL on Cygwin only for now.
	* libc/include/sys/reent.h (struct _reent): Mark _current_category
	and _current_locale as unused.
	* libc/locale/locale.c: Add new charset support to documentation.
	Include ../stdio/local.h from here.
	(lc_ctype_charset): Set to "ASCII" by default.
	(lc_message_charset): Ditto.
	(_setlocale_r): Don't set _current_category and _current_locale.
	(loadlocale): Add Cygwin codepage support.  On _MB_CAPABLE
	systems, set __mbtowc and __wctomb function pointers to function
	corresponding with current charset.  Don't allow non-existant
	ISO-8859-12 charset.  Add support for Windows singlebyte codepages.
	On Cygwin, add support for GBK, CP949, and BIG5.  On Cygwin,
	call __set_ctype() in case the catorgy is LC_CTYPE.  Don't set
	_current_category and _current_locale.
	* libc/stdlib/Makefile.am (GENERAL_SOURCES): Add sb_charsets.c.
	* libc/stdlib/Makefile.in: Regenerate.
	* libc/stdlib/local.h: Add prototype for __locale_charset.
	Add prototypes for __mbtowc and __wctomb pointers.
	Add prototypes for charset-specific _wctomb_r and _mbtowc_r
	functions.
	Declare tables and functions from sb_charsets.c.
	* libc/stdlib/mbtowc_r.c (__mbtowc): Define.  Set to __ascii_mbtowc
	by default.
	(_mbtowc_r): Just call __mbtowc from here.
	(__ascii_mbtowc): New function.
	(__iso_mbtowc): New function.
	(__cp_mbtowc): New function.
	(__utf8_mbtowc): New function.
	(__sjis_mbtowc): New function.  Disable on Cygwin.
	(__eucjp_mbtowc): New function.  Disable on Cygwin.
	(__jis_mbtowc): New function.  Disable on Cygwin.
	* libc/stdlib/sb_charsets.c: New file, adding singlebyte to UTF
	conversion tables for all ISO and CP charsets.
	(__iso_8859_index): New function.
	(__cp_index): New function.
	* libc/stdlib/wctomb_r.c (__wctomb): Define.  Set to __ascii_wctomb
	by default.
	(_wctomb_r): Just call __wctomb from here.
	(__ascii_wctomb): New function.
	(__utf8_wctomb): New function.
	(__sjis_wctomb): New function.  Disable on Cygwin.
	(__eucjp_wctomb): New function.  Disable on Cygwin.
	(__jis_wctomb): New function.  Disable on Cygwin.
	(__iso_wctomb): New function.
	(__cp_wctomb): New function.
@
text
@d190 4
@


1.50
log
@
2009-03-20  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/sys/errno.h: Protect various non-standard errnos
        with either __LINUX_ERRNO_EXTENSIONS__ or __CYGWIN__.
        * libc/include/sys/config.h[__CYGWIN__]: Define
        __LINUX_ERRNO_EXTENSIONS__.
@
text
@d182 1
d215 8
@


1.49
log
@
2008-11-19  Joel Sherrill <joel.sherrill@@oarcorp.com>

        * libc/include/sys/config.h[__mips__]: Don't bother
        setting __ATTRIBUTE_IMPURE_PTR__ here.
        [__rtems__][__mips__]: No need to undef the __ATTRIBUTE_IMPURE_PTR__
        macro anymore.
@
text
@d181 1
@


1.48
log
@
2008-11-19  Ralf Corsepius <ralf.corsepius@@rtems.org>

        * libc/include/sys/config.h: Don't put
        __ATTRIBUTE_IMPURE_PTR__ into .sdata section for mips-rtems.
@
text
@d97 1
a97 1
#ifdef __mips__
a185 4
#if defined(__mips__)
#undef __ATTRIBUTE_IMPURE_PTR__
#define __ATTRIBUTE_IMPURE_PTR__
#endif
@


1.47
log
@
2007-03-15  Jeff Johnston  <jjohnstn@@redhat.com>

        * configure.in: Add new --enable-newlib-reent-small option.
        * configure: Regenerated.
        * acconfig.h: Add _WANT_REENT_SMALL.
        * newlib.hin: Regenerated minus PACKAGE macros to add
        _WANT_REENT_SMALL macro.
        * libc/include/sys/config.h[_WANT_REENT_SMALL]: Set _REENT_SMALL
        if not already set.
        * libc/stdio/fflush.c[_REENT_SMALL]: Return immediately if
        there is no buffer.
        * libc/stdio/local.h[_REENT_SMALL]: Fix CHECK_INIT macro to
        use reentrant pointer passed in when resetting the file
        pointer to one of the std streams.
@
text
@d186 4
@


1.46
log
@
2007-02-01  Joel Schopp <jschopp@@austin.ibm.com>
            Kazunori Asayama <asayama@@sm.sony.co.jp>

        * configure.host: Enable SPU specific stdio directory.
        * libc/machine/spu/Makefile.am: Add objects.
        * libc/machine/spu/Makefile.in: Regenerated.
        * libc/machine/spu/c99ppe.h: Add macros and function
        declarations to initialize SPU specific stdio stuffs.
        * libc/machine/spu/stdio.c: Add functions to manage Cell SPU
        specific FILE structures.
        * libc/machine/spu/perror.c: Add initialization routine of
        stdio stuffs.
        * libc/machine/spu/printf.c: Ditto.
        * libc/machine/spu/putchar.c: Ditto.
        * libc/machine/spu/puts.c: Ditto.
        * libc/machine/spu/vprintf.c: Ditto.
        * libc/machine/spu/clearerr.c: New file. Add a stdio function
        implementation.
        * libc/machine/spu/feof.c: Ditto.
        * libc/machine/spu/ferror.c: Ditto.
        * libc/machine/spu/fileno.c: Ditto.
        * libc/machine/spu/fopen.c: Ditto.
        * libc/machine/spu/fclose.c: Ditto.
        * libc/machine/spu/freopen.c: Ditto.
        * libc/machine/spu/fflush.c: Ditto.
        * libc/machine/spu/fseek.c: Ditto.
        * libc/machine/spu/ftell.c: Ditto.
        * libc/machine/spu/rewind.c: Ditto.
        * libc/machine/spu/fgetpos.c: Ditto.
        * libc/machine/spu/fsetpos.c: Ditto.
        * libc/machine/spu/fread.c: Ditto.
        * libc/machine/spu/fwrite.c: Ditto.
        * libc/machine/spu/getc.c: Ditto.
        * libc/machine/spu/getchar.c: Ditto.
        * libc/machine/spu/gets.c: Ditto.
        * libc/machine/spu/fgetc.c: Ditto.
        * libc/machine/spu/fgets.c: Ditto.
        * libc/machine/spu/ungetc.c: Ditto.
        * libc/machine/spu/putc.c: Ditto.
        * libc/machine/spu/fputc.c: Ditto.
        * libc/machine/spu/fputs.c: Ditto.
        * libc/machine/spu/vfprintf.c: Ditto.
        * libc/machine/spu/vfscanf.c: Ditto.
        * libc/machine/spu/fprintf.c: Ditto.
        * libc/machine/spu/fscanf.c: Ditto.
        * libc/machine/spu/scanf.c: Ditto.
        * libc/machine/spu/vscanf.c: Ditto.
        * libc/machine/spu/setbuf.c: Ditto.
        * libc/machine/spu/setvbuf.c: Ditto.
        * libc/machine/spu/tmpfile.c: Ditto.

2007-02-01  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/sys/config.h[__SPU__]: Define __CUSTOM_FILE_IO__.
        * libc/include/stdio.h[!__CUSTOM_FILE_IO__]: Add flag check
        around stdio macros that manipulate fields in the normal file
        structure.
        * libc/include/sys/reent.h[__CUSTOM_FILE_IO__]: Include
        <sys/custom_file.h> to define custom FILE structure.
        * libc/include/sys/custom_file.h: New default header file
        that generates error if not overridden when __CUSTOM_FILE_IO__ set.
        * libc/machine/spu/sys/custom_file.h: New file.
@
text
@d205 8
@


1.45
log
@
2006-08-29  Paul Brook  <paul@@codesourcery.com>

        * libc/include/sys/config.h: Define _REENT_SMALL for Thumb-2.
@
text
@d135 1
@


1.44
log
@
2006-08-16  Joel Schopp  <jschopp@@austin.ibm.com>

        * configure.host: Add spu support.
        * libc/include/stdint.h: Ditto.
        * libc/include/machine/ieeefp.h: Ditto.
        * libc/include/machine/setjmp.h: Ditto.
        * libc/include/sys/config.h: Ditto.
        * libc/include/sys/types.h: Ditto.
        * libc/machine/spu/Makefile.am: New file.
        * libc/machine/spu/Makefile.in: Ditto.
        * libc/machine/spu/aclocal.m4: Ditto.
        * libc/machine/spu/configure: Ditto.
        * libc/machine/spu/configure.in: Ditto.
        * libc/machine/spu/memcpy.c: Ditto.
        * libc/machine/spu/setjmp.S: Ditto.
@
text
@d128 4
@


1.43
log
@
2006-08-01  Thiemo Seufer  <ths@@mips.com>
            Nigel Stephens  <nigel@@mips.com>

	* libc/include/sys/config.h (__ATTRIBUTE_IMPURE_PTR__): For MIPS
	define this to force _impure_ptr to live in the .sdata section.
@
text
@d129 4
@


1.42
log
@
2006-01-31  Leif Ekblad  <leif@@rdos.net>

        * configure.host: RDOS support added
        * libc/include/sys/config.h: Ditto.
        * libc/sys/rdos/Makefile.am, libc/sys/rdos/Makefile.in: New files.
        * libc/sys/rdos/aclocal.m4, libc/sys/rdos/chown.c: Ditto.
        * libc/sys/rdos/close.c, libc/sys/rdos/config.h: Ditto.
        * libc/sys/rdos/configure, libc/sys/rdos/configure.in: Ditto.
        * libc/sys/rdos/crt0.S, libc/sys/rdos/execve.c: Ditto.
        * libc/sys/rdos/fork.c, libc/sys/rdos/fstat.c: Ditto.
        * libc/sys/rdos/getenv.c, libc/sys/rdos/getpid.c: Ditto.
        * libc/sys/rdos/gettod.c, libc/sys/rdos/isatty.c: Ditto.
        * libc/sys/rdos/kill.c, libc/sys/rdos/link.c: Ditto.
        * libc/sys/rdos/lseek.c, libc/sys/rdos/open.c: Ditto.
        * libc/sys/rdos/rdos.S, libc/sys/rdos/rdos.h: Ditto.
        * libc/sys/rdos/rdoshelp.c, libc/sys/rdos/read.c: Ditto.
        * libc/sys/rdos/readlink.c, libc/sys/rdos/sbrk.c: Ditto.
        * libc/sys/rdos/stat.c, libc/sys/rdos/symlink.c: Ditto.
        * libc/sys/rdos/times.c, libc/sys/rdos/unlink.c: Ditto.
        * libc/sys/rdos/user.def, libc/sys/rdos/wait.c: Ditto.
        * libc/sys/rdos/write.c: Ditto.
@
text
@d97 4
@


1.42.2.1
log
@2006-08-29  Paul Brook  <paul@@codesourcery.com>

	newlib/
	* libc/include/sys/config.h: Define _REENT_SMALL for Thumb-2.
@
text
@a123 4
#ifdef __thumb2__
/* Thumb-2 based ARMv7M devices are really small.  */
#define _REENT_SMALL
#endif
@


1.41
log
@
2005-08-10  DJ Delorie  <dj@@redhat.com>

        * configure.host: Add m32c support.
        * libc/include/machine/ieeefp.h: Likewise.
        * libc/include/machine/setjmp.h: Likewise.
        * libc/include/sys/config.h: Likewise.
        * libc/machine/m32c: New directory, Renesas R8C/M16C/M32C support.
        * libc/machine/m32c/aclocal.m4: New file.
        * libc/machine/m32c/configure: Ditto.
        * libc/machine/m32c/configure.in: Ditto.
        * libc/machine/m32c/Makefile.am: Ditto.
        * libc/machine/m32c/Makefile.in: Ditto.
        * libc/machine/m32c/setjmp.S: Ditto.
@
text
@d62 1
a62 1
#ifdef __linux__
@


1.40
log
@2003-07-02  Richard Sandiford  <rsandifo@@redhat.com>
* libc/machine/h8300/Makefile.am (lib_a_SOURCES): Add h8sx_strcpy.S.
* libc/machine/h8300/defines.h (LEN): New macro.
* libc/machine/h8300/memcpy.S: Add h8sx version.
* libc/machine/h8300/memset.S: Likewise.
* libc/machine/h8300/strcmp.S: Likewise.
* libc/machine/h8300/setjmp.S: Use h8sx move instructions.
* libc/machine/h8300/h8sx_strcpy.S: New file.
2003-06-30  Richard Sandiford  <rsandifo@@redhat.com>
* libc/include/machine/ieeefp.h: Extend __H8300S__ handling to
__H8300SX__.
* libc/include/machine/setjmp.h: Likewise.
* libc/include/sys/config.h: Likewise.
* libc/machine/h8300/defines.h: Likewise.
* libc/machine/h8300/setjmp.S: Likewise.
* libc/machine/h8300/strcmp.S: Likewise.
* libc/sys/h8300hms/close.S: Likewise.
* libc/sys/h8300hms/fstat.S: Likewise.
* libc/sys/h8300hms/lseek.S: Likewise.
* libc/sys/h8300hms/read.S: Likewise.
* libc/sys/h8300hms/write.S: Likewise.
* libc/sys/h8300hms/crt0.S: Likewise.
* libc/machine/h8300/setarch.h: Use .h8300sx or .h8300sxn if
__H8300SX__ is defined.
* libc/sys/h8300hms/setarch.h: Likewise.
@
text
@d108 16
@


1.39
log
@	* libc/ctype/ctype_.c: Remove checks for deprecated __CYGWIN32__.
	* libc/include/stdio.h: Ditto.
	* libc/include/sys/config.h: Ditto.
	* libc/stdio/mktemp.c: Ditto.
@
text
@d23 1
a23 1
#if defined (__H8300__) || defined (__H8300H__) || defined(__H8300S__)
@


1.38
log
@	* libc/include/sys/config.h: Remove all Cygwin specific configuration.
	Include cygwin/config.h instead.
@
text
@d150 1
a150 1
#if defined(__CYGWIN32__) || defined(__CYGWIN__)
@


1.37
log
@	* libc/include/sys/config.h: Define __CYGWIN_USE_BIG_TYPES__ for
	Cygwin.
@
text
@a149 1

d151 1
a151 9
#define __FILENAME_MAX__ (260 - 1 /* NUL */)
#define _READ_WRITE_RETURN_TYPE _ssize_t
#define __LARGE64_FILES 1
#define __CYGWIN_USE_BIG_TYPES__ 1
#if defined(__INSIDE_CYGWIN__) || defined(_COMPILING_NEWLIB)
#define __IMPORT
#else
#define __IMPORT __declspec(dllimport)
#endif
d171 1
a171 2
#if __INT_MAX__ == 32767 || defined(__CYGWIN__) || \
    defined (_WIN32)
@


1.36
log
@	* configure.host: Define stdio64_dir for Cygwin.
	* libc/include/stdio.h: Change definition of fpos_t to fulfill
	Cygwin 64bit file access requirements.
	Drop definition of f*64() functions when compiled for Cygwin.
	* libc/include/sys/config.h: Define __LARGE64_FILES for Cygwin.
	* libc/reent/lseek64r.c: Use _off64_t instead of off64_t.
	* libc/stdio64/local64.h: Use _fpos64_t instead of fpos64_t.
@
text
@d155 1
@


1.35
log
@
2002-12-16  Kazu Hirata  <kazu@@cs.umass.edu>

        * libc/include/sys/config.h: Change setting of INT_MAX
        and UINT_MAX, to use __INT_MAX__ for __H8300__, __H8300H__,
        __H8300S__.  Also consolidate flag settings for these
        platforms.
@
text
@d154 1
@


1.34
log
@	* libc/include/sys/config.h (SIZE_T_SMALLER_THAN_LONG): Undefine.
	* libc/stdlib/mallocr.c (long_sub_size_t): Define in a way that
	doesn't require the SIZE_T_SMALLER_THAN_LONG macro.
@
text
@d7 1
a7 1
#if defined(__H8300__) || defined(__H8500__) || defined (__H8300H__) ||  defined(__W65__) || defined (__H8300S__)
d15 1
a15 1
#if defined(__Z8001__) || defined(__Z8002__) || defined(__H8300__) || defined(__H8500__) || defined(__W65__) || defined (__H8300H__) || defined (__H8300S__) || defined (__mn10200__) || defined (__AVR__)
d21 9
@


1.33
log
@
2002-09-20  Jeff Johnston  <jjohnstn@@redhat.com>

        * configure.host: Minor comment and formatting changes.
        * libc/Makefile.am: Add libc_la_DEPENDENCIES.
        * libc/Makefile.in: Regenerated.
        * libc/include/sys/config.h: Minor format change.
@
text
@a93 1
#define SIZE_T_SMALLER_THAN_LONG
@


1.32
log
@
2002-09-06  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/sys/config.h (MB_LEN_MAX): Removed as this
        is defined by <limits.h>.
@
text
@d169 1
a169 1
#ifndef __WCHAR_MAX__ 
@


1.31
log
@
2002-09-04  Kazuhiro Fujieda  <fujieda@@jaist.ac.jp>

        * libc/include/sys/config.h: Define accordingly __WCHAR_MAX__.
        * libc/include/wchar.h: Define WCHAR_MIN as 0 and WCHAR_MAX as
        __WCHAR_MAX__ or 0x7fffffffu.
        * libc/string/wcscmp.c: Delete wrong and unnecessary type cast.
        * libc/string/wcsncmp.c: Ditto.
@
text
@a5 4
/* Length of longest possible multibyte sequence among all supported
   locales. */
#define MB_LEN_MAX 8

@


1.30
log
@
2002-09-04  Kazuhiro Fujieda  <fujieda@@jaist.ac.jp>

        * libc/include/sys/config.h: Define accordingly __WCHAR_MAX__.
        * libc/include/wchar.h: Define WCHAR_MIN as 0 and WCHAR_MAX as
        __WCHAR_MAX__ or 0x7fffffffu.
        * libc/string/wcscmp.c: Delete wrong and unnecessary type cast.
        * libc/string/wcsncmp.c: Ditto.
@
text
@d175 1
a175 1
    defined (_WIN32) || defined(GO32)
@


1.29
log
@	* libc/include/langinfo.h: New file.
	* libc/include/wchar.h: Likewise.
	* libc/include/sys/syslimits.h: Likewise.
	* libc/locale/fix_grouping.c: Likewise.
	* libc/locale/ldpart.c: Likewise.
	* libc/locale/ldpart.h: Likewise.
	* libc/locale/lmessages.c: Likewise.
	* libc/locale/lmessages.h: Likewise.
	* libc/locale/lmonetary.c: Likewise.
	* libc/locale/lmonetary.h: Likewise.
	* libc/locale/lnumeric.c: Likewise.
	* libc/locale/lnumeric.h: Likewise.
	* libc/locale/nl_langinfo.3: Likewise.
	* libc/locale/nl_langinfo.c: Likewise.
	* libc/locale/timelocal.c: Likewise.
	* libc/locale/timelocal.h: Likewise.
	* libc/stdlib/btowc.c: Likewise.
	* libc/stdlib/mbrlen.c: Likewise.
	* libc/stdlib/mbrtowc.c: Likewise.
	* libc/stdlib/mbsinit.c: Likewise.
	* libc/stdlib/mbsrtowcs.c: Likewise.
	* libc/stdlib/wcrtomb.c: Likewise.
	* libc/stdlib/wcsrtombs.c: Likewise.
	* libc/stdlib/wctob.c: Likewise.
	* libc/sys/linux/prof-freq.c: Likewise.
	* libc/sys/linux/profile.c: Likewise.
	* libc/sys/linux/machine/i386/dl-procinfo.c: Likewise.
	* libc/sys/linux/machine/i386/dl-procinfo.h: Likewise.
	* libc/include/stdlib.h: Change re-entrant functions to take
	mbstate_t pointers.
	* libc/include/sys/_types.h: Define _mbstate_t.
	* libc/include/sys/config.h (MB_LEN_MAX): New macro.
	* libc/include/sys/errno.h (EILSEQ): New error code.
	* libc/include/sys/reent.h: Include wchar.h.  Change reentrant
	structure to use mbstate_t.
	* libc/locale/Makefile.am (LIB_SOURCES): Add new files.
	* libc/machine/powerpc/vfprintf.c: Use mbstate_t.
	* libc/machine/powerpc/vfscanf.c: Likewise.
	* libc/stdio/getdelim.c: Reallocate buffer only when necessary.
	* libc/stdio/vfprintf.c: Likewise.
	* libc/stdio/vfscanf.c: Likewise.
	* libc/stdlib/Makefile.am (LIB_SOURCES): Add new files.
	* libc/stdlib/mblen.c: Use mbstate_t.
	* libc/stdlib/mblen_r.c: Likewise.
	* libc/stdlib/mbstowcs.c: Likewise.
	* libc/stdlib/mbstowcs_r.c: Likewise.
	* libc/stdlib/mbtowc.c: Likewise.
	* libc/stdlib/mbtowc_r.c: Likewise.
	* libc/stdlib/wcstombs.c: Likewise.
	* libc/stdlib/wcstombs_r.c: Likewise.
	* libc/stdlib/wctomb_r.c: Likewise.
	* libc/sys/linux/Makefile.am (LIB_SOURCES): Add prof-freq.c and
	profile.c.
	* libc/sys/linux/machine/i386/Makefile.am (LIB_SOURCES): Add
	dl-procinfo.c.
	* libc/sys/linux/sys/errno.h (EILSEQ): New error code.
	* libc/sys/linux/sys/types.h (off_t): Define type.
	* testsuite/newlib.locale/UTF-8.c: Change locale name from UTF-8
	to C-UTF-8.
	* testsuite/newlib.locale/UTF-8.exp: Likewise.
@
text
@d173 7
@


1.28
log
@
2002-08-17  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/sys/config.h[__PPC__][__SPE__]: Set
        _LONG_DOUBLE to double.
@
text
@d6 4
@


1.27
log
@
2002-07-24  Stephane Carrez  <stcarrez@@nerim.fr>

        * configure.host: Recognize m6811-elf and m6812-elf targets.
        * libc/include/machine/setjmp.h (_JBLEN): Define for 68hc11/68hc12.
        * libc/include/machine/ieeefp.h (__IEEE_BIG_ENDIAN): Define for 68HC11.
        (_DOUBLE_IS_32BITS): Define when compiling with -fshort-double.
        * libc/include/sys/config.h (INT_MAX, UINT_MAX): Define
        according to __INT_MAX__.
        (_POINTER_INT): Define to short.
        * libc/machine/m68hc11/Makefile.am: New file.
        * libc/machine/m68hc11/Makefile.in: New file.
        * libc/machine/m68hc11/configure.in: New file.
        * libc/machine/m68hc11/configure: New file.
        * libc/machine/m68hc11/aclocal.m4: New file.
        * libc/machine/m68hc11/setjmp.S: New file.
@
text
@d83 3
@


1.26
log
@
2002-07-19  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/sys/config.h[__i386__][__linux__]: Define
        _LARGE64FILE_SOURCE to 1.
        * libc/sys/linux/Makefile.am: Add getrlimit64.c and setrlimit64.c.
        * libc/sys/linux/Makefile.in: Regenerated.
        * libc/sys/linux/resource.c: Add __getrlimit and __setrlimit aliases.
        * libc/sys/linux/sys/linux_time.h: Protect struct timeval definition.
        * libc/sys/linux/sys/resource.h: Include <bits/resource.h> instead
        of <linux/resource.h>.
        * libc/sys/linux/getrlimit64.c: New file.
        * libc/sys/linux/setrlimit64.c: Ditto.
@
text
@d36 8
@


1.25
log
@
2002-07-17  Jeff Johnston  <jjohnstn@@redhat.com>

        * configure.host(stdio64_dir): New setting that is used to
        enable building of new stdio64 directory.
        * libc/Makefile.am[HAVE_STDIO64_DIR]: Add support for
        large files.
        (stmp-stdio64,stdio64.texi): New targets to optionally add in
        stdio64 info to info files.
        * libc/Makefile.in: Regenerated.
        * libc/configure: Ditto.
        * libc/configure.in: Add configuration variables that are set
        when stdio64 is selected as subdir in configure.host.
        * libc/libc.texinfo: Add optional menu item for Stdio64, based
        on whether STDIO64 flag is set or not.
        * libc/sys.tex: Add optional stdio64 syscalls based on whether
        STDIO64 flag is set or not.
        * libc/include/reent.h[__LARGE64_FILES]: Add new stdio64
        _r sycall routines.
        * libc/include/stdio.h[__LARGE64_FILES]: Add new stdio64 prototypes.
        (FILE): Typedef'd to __FILE instead of struct __sFILE directly.
        (__SL64): New file flag indicating file is opened via fopen64.
        * libc/include/sys/_types.h(_off64_t): Added.
        * libc/include/sys/config.h: For x86-linux, define __LARGE64_FILES.
        * libc/include/sys/reent.h(struct __sFILE64): New file structure
        for 64-bit offset large file support.
        (__FILE): New intermediate type either set to struct __sFILE64 or
        struct __sFILE, depending on whether __LARGE64_FILES is set or not.
        * libc/reent/Makefile.am[HAVE_STDIO64_DIR]: Add new files.
        * libc/reent/Makefile.in: Regenerated.
        * libc/reent/fstat64r.c: New file.
        * libc/reent/lseek64r.c: Ditto.
        * libc/reent/open64r.c: Ditto.
        * libc/reent/reent.tex: Optionally add stdio64 reentrant syscalls
        based on whether STDIO64 flag is set.
        * libc/stdio/stdio.tex: Add blank line.
        * libc/stdio64/Makefile.am: New file.
        * libc/stdio64/Makefile.in: Ditto.
        * libc/stdio64/fgetpos64.c: Ditto.
        * libc/stdio64/fopen64.: Ditto.
        * libc/stdio64/freopen64.c: Ditto.
        * libc/stdio64/fseeko64.c: Ditto.
        * libc/stdio64/fsetpos64.c: Ditto.
        * libc/stdio64/ftello64.c: Ditto.
        * libc/stdio64/local64.h: Ditto.
        * libc/stdio64/stdio64.c: Ditto.
        * libc/stdio64/stdio64.tex: Ditto.
        * libc/stdio64/tmpfile64.c: Ditto.
        * libc/sys/linux/io64.c: Add weak aliases for lseek64, fstat64, and
        open64.
@
text
@d52 2
@


1.24
log
@
2002-07-15  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/sys/config.h[__H8300__]: Replace __SMALL_BITFIELDS
        definition that was removed in error.

Move definition before comment regarding H8300 macro definition.
@
text
@d51 1
@


1.23
log
@
2002-07-15  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/sys/config.h[__H8300__]: Replace __SMALL_BITFIELDS
        definition that was removed in error.
@
text
@d8 1
a10 1
#define __SMALL_BITFIELDS
@


1.22
log
@
2002-07-15  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/machine/ieeefp.h: Change to only define
        floating point defines (e.g one of __IEEE_BIG_ENDIAN or
        __IEEE_LITTLE_ENDIAN must be defined for each platform).
        * libc/include/sys/config.h: Include <machine/ieeefp.h> and
        remove redundant floating point definitions.
@
text
@d10 1
@


1.21
log
@
2002-07-02  Chris Demetriou  <cgd@@broadcom.com>

        * libc/include/sys/config.h (__IEEE_LITTLE_ENDIAN)
        (__IEEE_BIG_ENDIAN): Define appropriately for MIPS.
        Check that one of them is defined and error out if not.
        Add any platforms defined in <machine/ieeefp.h> that are missing.
        * libc/search/hash.h (DB_BYTE_ORDER, DB_BIG_ENDIAN)
        (DB_LITTLE_ENDIAN): New defines.
        * libc/search/hash.c: Replace all incorrect checks for
        _IEEE_LITTLE_ENDIAN with tests of BYTE_ORDER, and all uses of
        BYTE_ORDER, LITTLE_ENDIAN, and BIG_ENDIAN with DB_* versions.
        * libc/search/hash_page.c: Likewise.
@
text
@d4 2
a6 1
/* ??? Why is much of this stuff duplicated with machine/ieeefp.h?  */
a7 4
#define _FLOAT_ARG float
#define __SMALL_BITFIELDS
#define _DOUBLE_IS_32BITS
#define __IEEE_BIG_ENDIAN
a12 11
#ifdef __W65__
#define _DOUBLE_IS_32BITS
#define __SMALL_BITFIELDS
#define __IEEE_BIG_ENDIAN
#undef INT_MAX
#undef UINT_MAX
#define INT_MAX 32767
#define UINT_MAX 65535

#endif

d22 4
d27 1
a31 3
#if __DOUBLE__ == 32
#define _DOUBLE_IS_32BITS
#endif
a32 12
#define __IEEE_BIG_ENDIAN
#endif

#ifdef __sh__
#ifdef __LITTLE_ENDIAN__
#define __IEEE_LITTLE_ENDIAN
#else
#define __IEEE_BIG_ENDIAN
#endif
#if defined(__SH3E__) || defined(__SH4_SINGLE_ONLY__)
#define _DOUBLE_IS_32BITS
#endif
a39 1
#define __IEEE_LITTLE_ENDIAN
a52 13
#ifdef __M32R__
#define __IEEE_BIG_ENDIAN
#endif

#ifdef __m68k__
/* This is defined in machine/ieeefp.h; need to check is it redundant here? */
#define __IEEE_BIG_ENDIAN
#endif

#ifdef __mn10300__
#define __IEEE_LITTLE_ENDIAN
#endif

a53 1
#define _DOUBLE_IS_32BITS
a54 12
#define __IEEE_LITTLE_ENDIAN
#endif

#ifdef __MIPSEL__
#define __IEEE_LITTLE_ENDIAN
#endif
#ifdef __MIPSEB__
#define __IEEE_BIG_ENDIAN
#endif

#ifdef __MMIX__
#define __IEEE_BIG_ENDIAN
a57 1
#define _DOUBLE_IS_32BITS
a58 1
#define __IEEE_LITTLE_ENDIAN
a61 8
#ifdef __TIC80__
#define __IEEE_LITTLE_ENDIAN
#endif

#ifdef __v800
#define __IEEE_LITTLE_ENDIAN
#endif

a62 1
#define __IEEE_LITTLE_ENDIAN
a65 16
#ifdef __ia64__
#ifdef __BIG_ENDIAN__
#define __IEEE_BIG_ENDIAN
#else
#define __IEEE_LITTLE_ENDIAN
#endif
#endif

#ifdef __D30V__
#define __IEEE_BIG_ENDIAN
#endif

#ifdef __m88k__
#define __IEEE_BIG_ENDIAN
#endif

a70 28
#if (defined(_BIG_ENDIAN) && _BIG_ENDIAN) || (defined(_AIX) && _AIX)
#define __IEEE_BIG_ENDIAN
#else
#if (defined(_LITTLE_ENDIAN) && _LITTLE_ENDIAN) || (defined(__sun__) && __sun__) || (defined(_WIN32) && _WIN32)
#define __IEEE_LITTLE_ENDIAN
#endif
#endif
#endif

#if defined(__arm__) || defined(__thumb__)
/* ARM always has big-endian words.  Within those words the byte ordering
   will be big or little endian depending upon the target.  */
#define __IEEE_BIG_ENDIAN
#ifdef __ARMEL__
#define __IEEE_BYTES_LITTLE_ENDIAN
#endif
#endif

#ifdef __hppa__
#define __IEEE_BIG_ENDIAN
#endif

#ifdef __sparc__
#ifdef __LITTLE_ENDIAN_DATA__
#define __IEEE_LITTLE_ENDIAN
#else
#define __IEEE_BIG_ENDIAN
#endif
a72 5
#if defined(__or32__) || defined(__or1k__) || defined(__or16__)
#define __IEEE_BIG_ENDIAN
#endif


a73 1
#define __IEEE_LITTLE_ENDIAN
a116 16
#ifdef __arc__
#ifdef __big_endian__
#define __IEEE_BIG_ENDIAN
#else
#define __IEEE_LITTLE_ENDIAN
#endif
#endif

#ifdef __fr30__
#define __IEEE_BIG_ENDIAN
#endif

#ifdef __mcore__
#define __IEEE_BIG_ENDIAN
#endif

a117 1
#define __IEEE_BIG_ENDIAN
a152 6

#ifndef __IEEE_BIG_ENDIAN
#ifndef __IEEE_LITTLE_ENDIAN
#error Endianess not declared!!
#endif /* not __IEEE_LITTLE_ENDIAN */
#endif /* not __IEEE_BIG_ENDIAN */
@


1.20
log
@
2002-06-21  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/sys/config.h[__linux__]: Set _READ_WRITE_RETURN_TYPE
        to _ssize_t.
        * libc/sys/linux/io.c (read, write): Change to return ssize_t.
@
text
@d48 11
d64 1
d97 7
d119 4
d128 8
d140 4
d145 2
a146 1
#if defined(__PPC__) && defined(_CALL_SYSV)
d149 21
d179 5
d229 16
d282 6
@


1.19
log
@
2002-06-21  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/math.h: Add <sys/types.h> to get _uint32_t definition.
        * libc/include/machine/types.h: Skip __off_t, __pid_t, and
        __loff_t definitions if special _HAVE_SYSTYPES macro defined.
        * libc/include/sys/config.h: Removed _uint*, _int* definitions.
        * libc/include/sys/param.h: Remove i386 case which is handled
        by default case.
        (BIG_ENDIAN, LITTLE_ENDIAN): Protect
        definitions in case they are already defined.
        (BYTE_ORDER): Add default case using _IEEE_BIG_ENDIAN and
        _IEEE_LITTLE_ENDIAN flags.
        * libc/include/sys/reent.h: Change __uint32_t references to
        use _ULong instead.
        (_REENT_GETDATE_REENT_P): New macro.
        * libc/include/sys/types.h (__int16_t, __uint16_t): Added.
        (__int32_t, __uint32_t, __int64_t, __uint64_t): Ditto.
        * libc/search/hash.h: Add default setting of BYTE_ORDER,
        LITTLE_ENDIAN, and BIG_ENDIAN, if not already defined.
        * libc/sys/linux/sys/types.h: Include <sys/_types.h>.  Define
        ssize_t based on _ssize_t.  Remove __socklen_t, __uintptr_t,
        pid_t, off_t, loff_t, caddr_t, and daddr_t type
        definitions which are done by subsequent glibc headers.
        Add macro definitions to prevent subsequent header files from
        defining pid_t, off_t, ssize_t, and key_t.  Move uintptr_t and
        intptr_t to after glibc definitions of types they are based on.
@
text
@d62 1
@


1.18
log
@2002-06-18  Dave Brolley  <brolley@@redhat.com>

	From Catherine Moore, Michael Meissner, Richard Sandiford:
	* libc/include/machine/setjmp.h (_JBLEN): Define for __frv__.
	(_JBTYPE): Ditto.
	* libc/include/sys/config.h (__IEEE_BIG_ENDIAN): Ditto.
	(__ATTRIBUTE_IMPURE_PTR__): Ditto.
	* libc/include/machine/ieeefp.h (__IEEE_BIG_ENDIAN): Ditto.
	* configure.host: Support frv-*-*.
	* libc/machine/frv/Makefile.am: New file.
	* libc/machine/frv/configure.in: New file.
	* libc/machine/frv/setjmp.S: New file.
@
text
@d60 2
a134 3
typedef short int __int16_t;
typedef unsigned short int __uint16_t;

a160 16

#if __INT_MAX__ == 32767
typedef long int __int32_t;
typedef unsigned long int __uint32_t;
#else
typedef int __int32_t;
typedef unsigned int __uint32_t;
#endif

#if __LONG_MAX__ > 2147483647 || !defined(__GNUC__)
typedef long int __int64_t;
typedef unsigned long int __uint64_t;
#else
__extension__ typedef long long __int64_t;
__extension__ typedef unsigned long long __uint64_t;
#endif
@


1.17
log
@
2002-05-17  Jeff Johnston  <jjohnstn@@redhat.com>

	* Makefile.am: Copy and install headers from sys/machine/include
	directory.  Also pass $toollibdir to lower-level directories.
	* Makefile.in: Regenerated.
	* libc/include/stdio.h[!_REENT_ONLY]: Change stdin, stdout, and
	stderr to use _REENT macro instead of _impure_ptr directly.
	* libc/include/sys/config.h[__i386__][__linux__]: Define
	__DYNAMIC_REENT__.
	* libc/include/sys/reent.h[!_REENT_ONLY]: Change _REENT macro to be
	call to __getreent() function if !__SINGLE_THREAD__ and
	__DYNAMIC_REENT__ is set.
	* libc/reent/Makefile.am: Add support for getreent.c.
	* libc/reent/Makefile.in: Regenerated.
	* libc/string/strerror.c: Add check if EOPNOTSUPP and ENOTSUP are same.
	* libc/sys/linux/Makefile.am: Add support for new files.
	* libc/sys/linux/configure.in: Add $EXTRA_DIRS variable.
	* libc/sys/linux/Makefile.in: Regenerated.
	* libc/sys/linux/configure: Ditto.
	* libc/sys/linux/io.c: Add poll syscall.  Also weak-alias
	__close, __read, __write, __poll, __open, __lseek, __fcntl from
	their __libc_ counterparts.
	* libc/sys/linux/io64.c: Add __libc_ prefix to lseek64 and open64
	and weak-alias to regular names.
	* libc/sys/linux/pread64.c: Rename to __libc_pread64 and weak-alias
	to pread64 and __pread64.
	* libc/sys/linux/process.c: Weak_alias __libc_getpid to __getpid.
	* libc/sys/linux/pwrite64.c: Rename to __libc_pwrite64 and
	weak-alias to pwrite64.
	* libc/sys/linux/sched.c: Weak-alias __libc_sched_getparam,
	__libc_sched_getscheduler, __libc_sched_get_priority_max,
	__libc_sched_get_priority_min, and __libc_sched_setschedule to
	name with __ instead of __libc_.
	* libc/sys/linux/siglongjmp.c: Include <machine/weakalias.h>.
	Rename siglongjmp to __libc_siglongjmp and weak-alias to siglongjmp.
	Call __libc_longjmp instead of longjmp, from __libc_siglongjmp.
	* libc/sys/linux/signal.c: Rename raise to __libc_raise and weak-alias
	to raise.
	* libc/sys/linux/socket.c: Weak-alias __libc_connect to __connect and
	__libc_send to __send.
	* libc/sys/linux/time.c: Weak-alias __libc_gettimeofday to
	__gettimeofday.
	* libc/sys/linux/wait.c: Rename wait to __libc_wait and weak-alias
	it to wait.  Rename wait3 to __libc_wait3 and weak-alias it to wait3.
	* libc/sys/linux/include/setjmp.h: Use __jmp_buf in sigjmp_buf
	type and typedef __jmp_buf to jmp_buf.
	* libc/sys/linux/machine/i386/Makefile.am: Add syscalls.c and
	setjmp.S.
	* libc/sys/linux/machine/i386/Makefile.in: Regenerated.
	* libc/sys/linux/machine/i386/crt0.c: Add support to clear .bss
	section.
	* libc/sys/linux/machine/i386/socketcall.h: Change to use __libc_
	prefix for function macros and then use weak_alias() to regular names.
	* libc/sys/linux/machine/i386/syscall.h: Ditto.
	* libc/sys/linux/sys/errno.h: Define EOPNOTSUP to be ENOTSUP.
	* libc/sys/linux/sys/stdio.h: Define _flockfile and _funlockfile
	to be flockfile() and funlockfile() respectively.
	* libc/sys/linux/sys/types.h
	* libc/reent/getreent.c: New file.
	* libc/sys/linux/flockfile.c: Ditto.
	* libc/sys/linux/funlockfile.c: Ditto.
	* libc/sys/linux/getreent.c: Ditto.
	* libc/sys/linux/pread.c: Ditto.
	* libc/sys/linux/pwrite.c: Ditto.
	* libc/sys/linux/raise.c: Ditto.
	* libc/sys/linux/system.c: Ditto.
	* libc/sys/linux/tcdrain.c: Ditto.
	* libc/sys/linux/machine/i386/i386mach.h: Ditto.
	* libc/sys/linux/machine/i386/setjmp.S: Ditto.
	* libc/sys/linux/machine/i386/syscalls.c: Ditto.
	* libc/sys/linux/machine/i386/weakalias.h: Ditto.
	* libc/sys/linux/machine/i386/include/setjmp.h: Ditto.
@
text
@d183 4
@


1.16
log
@
2002-04-19  Alexandre Oliva  <aoliva@@redhat.com>

        * libc/include/sys/config.h: Remove include of <limits.h>.
        (__INT_MAX__, __LONG_MAX__): Define like GCC's limits.h would
        define INT_MAX and LONG_MAX.  Use them in tests.
@
text
@d57 4
@


1.15
log
@* libc/include/sys/config.h: Include limits.h.
@
text
@d132 26
a157 1
#include <limits.h>
d159 1
a159 1
#if INT_MAX == 32767
d167 1
a167 1
#if LONG_MAX > 2147483647 || !defined(__GNUC__)
d180 1
a180 1
#if INT_MAX == 32767
@


1.14
log
@
2002-02-25  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/sys/config.h: Add __extension__ in front of
        long long references.
@
text
@d132 2
@


1.13
log
@
2002-02-15  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/sys/config.h: Add definitions for
        __int16_t, __uint16_t, __int64_t, and __uint64_t.
@
text
@d144 2
a145 2
typedef long long __int64_t;
typedef unsigned long long __uint64_t;
@


1.12
log
@* implement a new `struct _reent' that is significantly smaller.  use this
if _REENT_SMALL is defined in config.h.  define this for xstormy16.
@
text
@d129 3
d138 8
@


1.11
log
@
2002-01-07 Alan Matsuoka <alanm@@redhat.com>

        * libc/include/machine/ieeefp.h: Configure d10v doubles to
        be 32 bits if __DOUBLE__ == 32  otherwise doubles are 64 bits.
        libc/include/sys/config.h: Ditto.
@
text
@d126 1
@


1.10
log
@In newlib/:
2001-12-22  Geoffrey Keating  <geoffk@@redhat.com>
	    Catherine Moore  <clm@@redhat.com>
	    Richard Henderson  <rth@@redhat.com>
	    Corinna Vinschen  <vinschen@@redhat.com>

	* configure.host: Add support for xstormy16.
	* libc/include/machine/ieeefp.h: Add support for xstormy16.
	* libc/include/machine/setjmp.h: Add support for xstormy16.
	* libc/include/sys/config.h: Add support for xstormy16.
	* libc/machine/xstormy16/Makefile.am: New file.
	* libc/machine/xstormy16/Makefile.in: New file.
	* libc/machine/xstormy16/aclocal.m4: New file.
	* libc/machine/xstormy16/configure: New file.
	* libc/machine/xstormy16/configure.in: New file.
	* libc/machine/xstormy16/setjmp.S: New file.

In libgloss/:
2001-12-22  Geoffrey Keating  <geoffk@@redhat.com>
	    Mark Salter  <msalter@@redhat.com>
	    Catherine Moore  <clm@@redhat.com>
	    Richard Henderson  <rth@@redhat.com>

	* configure.in: Add xstormy16.
	* libnosys/configure.in: Add xstormy16.
	* configure: Regenerated.
	* libnosys/configure: Regenerated.
	* xstormy16/Makefile.in: New file.
	* xstormy16/close.c: New file.
	* xstormy16/configure: New file.
	* xstormy16/configure.in: New file.
	* xstormy16/crt0.s: New file.
	* xstormy16/crt0_stub.s: New file.
	* xstormy16/crti.s: New file.
	* xstormy16/crtn.s: New file.
	* xstormy16/eva_app.c: New file.
	* xstormy16/eva_app.ld: New file.
	* xstormy16/eva_stub.ld: New file.
	* xstormy16/fstat.c: New file.
	* xstormy16/getpid.c: New file.
	* xstormy16/kill.c: New file.
	* xstormy16/lseek.c: New file.
	* xstormy16/open.c: New file.
	* xstormy16/sbrk.c: New file.
	* xstormy16/sim_high.ld: New file.
	* xstormy16/stat.c: New file.
	* xstormy16/syscalls.S: New file.
	* xstormy16/syscalls.m4: New file.
	* xstormy16/unlink.c: New file.
	* xstormy16/xstormy16_stub.c: New file.
@
text
@d41 1
d43 1
@


1.9
log
@
2001-11-12  Hans-Peter Nilsson  <hp@@bitrange.com>

        * libc/include/machine/ieeefp.h: Add support for mmix target.
        * libc/include/machine/setjmp.h: Ditto.
        * configure.host: Ditto.
        * libc/sys/mmixware/Makefile.am, libc/sys/mmixware/_exit.c,
        libc/sys/mmixware/access.c, libc/sys/mmixware/aclocal.m4,
        libc/sys/mmixware/chmod.c, libc/sys/mmixware/chown.c,
        libc/sys/mmixware/close.c, libc/sys/mmixware/configure.in,
        libc/sys/mmixware/creat.c, libc/sys/mmixware/crt0.c,
        libc/sys/mmixware/execv.c, libc/sys/mmixware/execve.c,
        libc/sys/mmixware/fork.c, libc/sys/mmixware/fstat.c,
        libc/sys/mmixware/getpid.c, libc/sys/mmixware/gettime.c,
        libc/sys/mmixware/isatty.c, libc/sys/mmixware/kill.c,
        libc/sys/mmixware/lseek.c, libc/sys/mmixware/open.c,
        libc/sys/mmixware/pipe.c, libc/sys/mmixware/read.c,
        libc/sys/mmixware/sbrk.c, libc/sys/mmixware/setjmp.S,
        libc/sys/mmixware/stat.c, libc/sys/mmixware/sys/syscall.h,
        libc/sys/mmixware/time.c, libc/sys/mmixware/times.c,
        libc/sys/mmixware/unlink.c, libc/sys/mmixware/utime.c,
        libc/sys/mmixware/wait.c, libc/sys/mmixware/write.c: New files.
        * libc/sys/mmixware/configure, libc/sys/mmixware/Makefile.in,
        libc/sys/mmixware/aclocal.m4: Generate.
@
text
@d113 13
@


1.8
log
@
2001-08-29  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/sys/reent.h: Add include of <sys/_types.h>.
        No longer include time.h.  Add struct __tm to use for
        _localtime_buf in the reentrant structure.  Add a
        _NULL definition to use in initializing the reentrant struct.
        * libc/include/sys/config.h: For CYGWIN32 and RTEMS, change
        the _READ_WRITE_RETURN_TYPE to _ssize_t which is found in
        <sys/_types.h>.
        * libc/include/sys/unistd.h: Include <sys/_types.h>.
        * libc/time/lcltime.c (localtime): Cast the reentrant struct
        _localtime_buf to be struct tm *.
@
text
@d76 4
@


1.7
log
@* libc/include/sys/config.h: Use ssize_t for read/write declarations.
@
text
@d131 1
a131 1
#define _READ_WRITE_RETURN_TYPE ssize_t
d141 1
a141 1
#define _READ_WRITE_RETURN_TYPE ssize_t
@


1.6
log
@
Mon Mar  5 21:48:54 2001  J"orn Rennecke <amylaar@@redhat.com>

        * libc/include/sys/config.h (_READ_WRITE_RETURN_TYPE): Define.
        For RTEMS, define to be ssize_t.  Default to int if not defined.
        * libc/stdio/sscanf.c (eofread): Return _READ_WRITE_RETURN_TYPE.
        * libc/stdio/stdio.c (__sread, __swrite): Likewise.
        * libc/stdio/local.h (__sread, __swrite): Likewise.
        * libc/include/sys/reent.h (_read, _write): Likewise.
        * libc/include/sys/unistd.h (read, write, _read, _write): Likewise.
        * libc/syscalls/sysread.c (read): Likewise.
        * libc/syscalls/syswrite.c (write): Likewise.
@
text
@d131 1
@


1.5
log
@
2001-01-31  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/stdio.h (FILENAME_MAX): Changed to use __FILENAME_MAX__
        if defined.
        (FOPEN_MAX): Changed to use __FOPEN_MAX__ if defined.
        (L_tmpnam): Changed to use __L_tmpnam__ if defined.
        * libc/include/sys/config.h: Changed to set __FILENAME_MAX__
        appropriately for Cygwin and RTEMS so not to exceed PATH_MAX.
@
text
@d140 1
d147 6
@


1.4
log
@* libc/include/sys/config.h: define __IMPORT appropriately
* libc/include/ctype.h (_ctype_): use __IMPORT
* libc/include/math.h (__infinity, signam, _LIB_VERSION): ditto
* libc/include/math.h (__mb_cur_max): ditto
* libc/include/time.h (_timezone, _daylight, _tzname): ditto
* libc/include/unctrl.h (__unctrl, __unctrllen): ditto
* libc/include/errno.h (_sys_errlist, _sys_nerr): ditto
* libc/include/unistd.h (environ): ditto
@
text
@d130 1
d136 4
@


1.3
log
@
Tue Jun 27 15:49:00 2000  Marek Michalkiewicz  <marekm@@linux.org.pl>

        * configure.host: Add support for AVR target.
        * libc/include/machine/ieeefp.h: Likewise.
        * libc/include/sys/config.h: Likewise.
@
text
@d128 14
@


1.2
log
@Thu Jun  8 21:18:00 2000  Ranjith Kumaran  <ranjith@@cygnus.com>

	* libc/include/stdlib.h: Set RAND_MAX to __RAND_MAX.
	* libc/include/sys/config.h: Define __RAND_MAX.
@
text
@d28 1
a28 1
#if defined(__Z8001__) || defined(__Z8002__) || defined(__H8300__) || defined(__H8500__) || defined(__W65__) || defined (__H8300H__) || defined (__H8300S__) || defined (__mn10200__)
d74 7
@


1.1
log
@Initial revision
@
text
@d114 6
@


1.1.1.1
log
@import newlib-2000-02-17 snapshot
@
text
@@
