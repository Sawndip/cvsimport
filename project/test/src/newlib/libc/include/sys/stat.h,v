head	1.27;
access;
symbols
	cygwin-1_7_35-release:1.27
	cygwin-1_7_34-release:1.27
	newlib-2_2_0:1.27.0.2
	cygwin-1_7_33-release:1.27
	cygwin-1_7_32-release:1.27
	cygwin-1_7_31-release:1.27
	cygwin-1_7_30-release:1.27
	cygwin-1_7_29-release:1.27
	cygwin-1_7_28-release:1.27
	newlib-2_1_0:1.26
	cygwin-1_7_27-release:1.26
	cygwin-1_7_26-release:1.26
	cygwin-1_7_25-release:1.25
	cygwin-1_7_24-release:1.25
	cygwin-1_7_23-release:1.25
	cygwin-1_7_22-release:1.25
	cygwin-1_7_21-release:1.25
	cygwin-1_7_20-release:1.25
	cygwin-1_7_19-release:1.25
	cygwin-64bit-postmerge:1.25
	cygwin-64bit-premerge-branch:1.24.0.4
	cygwin-64bit-premerge:1.24
	cygwin-1_7_18-release:1.24
	newlib-2_0_0:1.24
	cygwin-1_7_17-release:1.24
	cygwin-64bit-branch:1.24.0.2
	cygwin-1_7_16-release:1.23
	cygwin-1_7_15-release:1.23
	cygwin-1_7_14_2-release:1.23
	cygwin-1_7_14-release:1.23
	cygwin-1_7_12-release:1.23
	cygwin-1_7_11-release:1.23
	cygwin-1_7_10-release:1.23
	newlib-1_20_0:1.23
	cygwin-1_7_9-release:1.23
	cygwin-1_7_8-release:1.23
	newlib-1_19_0:1.23
	cygwin-1_7_7-release:1.23
	cygwin-1_7_5-release:1.21
	cygwin-1_7_4-release:1.21
	cygwin-1_7_3-release:1.21
	cygwin-1_7_2-release:1.21
	newlib-1_18_0:1.21
	cygwin-1_7_1-release:1.20
	newlib-1_17_0-arc:1.20.0.4
	binutils-arc-20080908-branch:1.20.0.2
	binutils-arc-20080908-branchpoint:1.20
	newlib-1_17_0:1.20
	newlib-1_16_0:1.17
	newlib-1_15_0:1.16
	newlib-csl-coldfire-4_1-32:1.16
	newlib-csl-sourcerygxx-4_1-32:1.16
	newlib-csl-innovasic-fido-3_4_4-33:1.16
	newlib-csl-coldfire-4_1-30:1.16
	newlib-csl-sourcerygxx-4_1-30:1.16
	newlib-csl-coldfire-4_1-28:1.16
	newlib-csl-sourcerygxx-4_1-28:1.16
	newlib-csl-arm-2006q3-27:1.16
	newlib-csl-sourcerygxx-4_1-27:1.16
	newlib-csl-arm-2006q3-26:1.16
	newlib-csl-sourcerygxx-4_1-26:1.16
	newlib-csl-sourcerygxx-4_1-24:1.16
	newlib-csl-sourcerygxx-4_1-23:1.16
	newlib-csl-sourcerygxx-4_1-21:1.16
	newlib-csl-arm-2006q3-21:1.16
	newlib-csl-arm-2006q3-19:1.16
	newlib-csl-sourcerygxx-4_1-19:1.16
	newlib-csl-sourcerygxx-4_1-18:1.16
	newlib-csl-sourcerygxx-3_4_4-25:1.16
	newlib-csl-sourcerygxx-4_1-17:1.16
	cr-0x5f1:1.16.0.6
	newlib-csl-sourcerygxx-4_1-14:1.16
	newlib-csl-sourcerygxx-4_1-13:1.16
	newlib-csl-sourcerygxx-4_1-12:1.16
	newlib-csl-sourcerygxx-4_1-9:1.16
	newlib-csl-sourcerygxx-4_1-8:1.16
	newlib-csl-sourcerygxx-4_1-7:1.16
	newlib-csl-arm-2006q1-6:1.16
	newlib-csl-sourcerygxx-4_1-6:1.16
	newlib-csl-sourcerygxx-4_1-5:1.16
	newlib-csl-sourcerygxx-4_1-4:1.16
	newlib-autotools-branch:1.16.0.4
	newlib-csl-20060320-branch:1.16.0.2
	newlib-csl-20060320-branchpoint:1.16
	newlib-1_14_0:1.16
	newlib-csl-arm-2005-q1b:1.16
	newlib-csl-arm-2005-q1a:1.16
	newlib-1_13_0:1.16
	csl-arm-2004-q3:1.16
	csl-arm-2004-q1a:1.16
	csl-arm-2004-q1:1.16
	newlib-1_12_0:1.16
	csl-arm-2003-q4:1.16
	w32api-2_2:1.10
	mingw-runtime-2_4:1.10
	newlib-1_11_0:1.10
	cygnus_cvs_20020108_pre:1.8
	newlib-1_10_0:1.8
	newlib-1_9_0:1.3
	newlib-2000-02-17:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.27
date	2014.01.06.20.59.38;	author jjohnstn;	state Exp;
branches;
next	1.26;

1.26
date	2013.11.21.16.35.46;	author joel;	state Exp;
branches;
next	1.25;

1.25
date	2013.04.23.09.42.25;	author corinna;	state Exp;
branches;
next	1.24;

1.24
date	2012.08.08.11.04.16;	author corinna;	state Exp;
branches
	1.24.2.1;
next	1.23;

1.23
date	2010.08.06.18.26.21;	author corinna;	state Exp;
branches;
next	1.22;

1.22
date	2010.07.01.08.45.52;	author corinna;	state Exp;
branches;
next	1.21;

1.21
date	2009.12.17.19.22.23;	author jjohnstn;	state Exp;
branches;
next	1.20;

1.20
date	2008.04.26.07.49.39;	author corinna;	state Exp;
branches
	1.20.4.1;
next	1.19;

1.19
date	2008.04.24.09.39.21;	author corinna;	state Exp;
branches;
next	1.18;

1.18
date	2008.04.23.11.13.24;	author corinna;	state Exp;
branches;
next	1.17;

1.17
date	2007.06.20.17.30.58;	author jjohnstn;	state Exp;
branches;
next	1.16;

1.16
date	2003.12.05.21.09.13;	author jjohnstn;	state Exp;
branches;
next	1.15;

1.15
date	2003.11.26.19.15.17;	author jjohnstn;	state Exp;
branches;
next	1.14;

1.14
date	2003.11.18.19.17.17;	author jjohnstn;	state Exp;
branches;
next	1.13;

1.13
date	2003.08.26.20.54.04;	author jjohnstn;	state Exp;
branches;
next	1.12;

1.12
date	2003.08.26.18.09.42;	author jjohnstn;	state Exp;
branches;
next	1.11;

1.11
date	2003.03.09.21.08.51;	author corinna;	state Exp;
branches;
next	1.10;

1.10
date	2002.02.23.20.46.28;	author corinna;	state Exp;
branches;
next	1.9;

1.9
date	2002.02.09.20.40.37;	author corinna;	state Exp;
branches;
next	1.8;

1.8
date	2001.05.08.01.15.06;	author cgf;	state Exp;
branches;
next	1.7;

1.7
date	2001.03.05.05.13.06;	author cgf;	state Exp;
branches;
next	1.6;

1.6
date	2001.02.12.18.17.17;	author jjohnstn;	state Exp;
branches;
next	1.5;

1.5
date	2001.02.09.01.01.06;	author jjohnstn;	state Exp;
branches;
next	1.4;

1.4
date	2001.02.09.00.13.54;	author jjohnstn;	state Exp;
branches;
next	1.3;

1.3
date	2000.05.30.17.18.05;	author cgf;	state Exp;
branches;
next	1.2;

1.2
date	2000.02.24.16.48.28;	author ranjith;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.39.46;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.24.2.1
date	2012.08.10.15.59.05;	author corinna;	state Exp;
branches;
next	1.24.2.2;

1.24.2.2
date	2012.08.13.14.30.01;	author corinna;	state Exp;
branches;
next	1.24.2.3;

1.24.2.3
date	2012.08.13.16.18.48;	author corinna;	state Exp;
branches;
next	;

1.20.4.1
date	2009.09.10.01.29.07;	author amylaar;	state Exp;
branches;
next	;

1.1.1.1
date	2000.02.17.19.39.46;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.27
log
@
2014-01-06  Sebastian Huber  <sebastian.huber@@embedded-brains.de>

        * libc/include/sys/_default_fcntl.h (AT_FDCWD): Define according
        to POSIX.
        (AT_EACCESS): Likewise.
        (AT_SYMLINK_NOFOLLOW): Likewise.
        (AT_SYMLINK_FOLLOW): Likewise.
        (AT_REMOVEDIR): Likewise.
        (openat): Declare according to POSIX.
        * libc/include/stdio.h (renameat): Likewise.
        * libc/include/sys/stat.h (fchmodat): Likewise.
        (fstatat): Likewise.
        (mkdirat): Likewise.
        (mkfifoat): Likewise.
        (mknodat): Likewise.
        (utimensat): Likewise.
        (futimens): Likewise.
        * libc/include/sys/unistd.h (faccessat): Likewise.
        (fchownat): Likewise.
        (linkat): Likewise.
        (readlinkat): Likewise.
        (symlinkat): Likewise.
        (unlinkat): Likewise.
@
text
@#ifndef	_SYS_STAT_H
#define	_SYS_STAT_H

#ifdef __cplusplus
extern "C" {
#endif

#include <_ansi.h>
#include <time.h>
#include <sys/cdefs.h>
#include <sys/types.h>

/* dj's stat defines _STAT_H_ */
#ifndef _STAT_H_

/* It is intended that the layout of this structure not change when the
   sizes of any of the basic types change (short, int, long) [via a compile
   time option].  */

#ifdef __CYGWIN__
#include <cygwin/stat.h>
#ifdef _COMPILING_NEWLIB
#define stat64 stat
#endif
#else
struct	stat 
{
  dev_t		st_dev;
  ino_t		st_ino;
  mode_t	st_mode;
  nlink_t	st_nlink;
  uid_t		st_uid;
  gid_t		st_gid;
  dev_t		st_rdev;
  off_t		st_size;
#if defined(__rtems__)
  struct timespec st_atim;
  struct timespec st_mtim;
  struct timespec st_ctim;
  blksize_t     st_blksize;
  blkcnt_t	st_blocks;
#else
  /* SysV/sco doesn't have the rest... But Solaris, eabi does.  */
#if defined(__svr4__) && !defined(__PPC__) && !defined(__sun__)
  time_t	st_atime;
  time_t	st_mtime;
  time_t	st_ctime;
#else
  time_t	st_atime;
  long		st_spare1;
  time_t	st_mtime;
  long		st_spare2;
  time_t	st_ctime;
  long		st_spare3;
  long		st_blksize;
  long		st_blocks;
  long	st_spare4[2];
#endif
#endif
};

#if defined(__rtems__)
#define st_atime st_atim.tv_sec
#define st_ctime st_ctim.tv_sec
#define st_mtime st_mtim.tv_sec
#endif

#endif

#define	_IFMT		0170000	/* type of file */
#define		_IFDIR	0040000	/* directory */
#define		_IFCHR	0020000	/* character special */
#define		_IFBLK	0060000	/* block special */
#define		_IFREG	0100000	/* regular */
#define		_IFLNK	0120000	/* symbolic link */
#define		_IFSOCK	0140000	/* socket */
#define		_IFIFO	0010000	/* fifo */

#define 	S_BLKSIZE  1024 /* size of a block */

#define	S_ISUID		0004000	/* set user id on execution */
#define	S_ISGID		0002000	/* set group id on execution */
#define	S_ISVTX		0001000	/* save swapped text even after use */
#ifndef	_POSIX_SOURCE
#define	S_IREAD		0000400	/* read permission, owner */
#define	S_IWRITE 	0000200	/* write permission, owner */
#define	S_IEXEC		0000100	/* execute/search permission, owner */
#define	S_ENFMT 	0002000	/* enforcement-mode locking */
#endif	/* !_POSIX_SOURCE */

#define	S_IFMT		_IFMT
#define	S_IFDIR		_IFDIR
#define	S_IFCHR		_IFCHR
#define	S_IFBLK		_IFBLK
#define	S_IFREG		_IFREG
#define	S_IFLNK		_IFLNK
#define	S_IFSOCK	_IFSOCK
#define	S_IFIFO		_IFIFO

#ifdef _WIN32
/* The Windows header files define _S_ forms of these, so we do too
   for easier portability.  */
#define _S_IFMT		_IFMT
#define _S_IFDIR	_IFDIR
#define _S_IFCHR	_IFCHR
#define _S_IFIFO	_IFIFO
#define _S_IFREG	_IFREG
#define _S_IREAD	0000400
#define _S_IWRITE	0000200
#define _S_IEXEC	0000100
#endif

#define	S_IRWXU 	(S_IRUSR | S_IWUSR | S_IXUSR)
#define		S_IRUSR	0000400	/* read permission, owner */
#define		S_IWUSR	0000200	/* write permission, owner */
#define		S_IXUSR 0000100/* execute/search permission, owner */
#define	S_IRWXG		(S_IRGRP | S_IWGRP | S_IXGRP)
#define		S_IRGRP	0000040	/* read permission, group */
#define		S_IWGRP	0000020	/* write permission, grougroup */
#define		S_IXGRP 0000010/* execute/search permission, group */
#define	S_IRWXO		(S_IROTH | S_IWOTH | S_IXOTH)
#define		S_IROTH	0000004	/* read permission, other */
#define		S_IWOTH	0000002	/* write permission, other */
#define		S_IXOTH 0000001/* execute/search permission, other */

#ifndef _POSIX_SOURCE
#define ACCESSPERMS (S_IRWXU | S_IRWXG | S_IRWXO) /* 0777 */
#define ALLPERMS (S_ISUID | S_ISGID | S_ISVTX | S_IRWXU | S_IRWXG | S_IRWXO) /* 07777 */
#define DEFFILEMODE (S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP | S_IROTH | S_IWOTH) /* 0666 */
#endif

#define	S_ISBLK(m)	(((m)&_IFMT) == _IFBLK)
#define	S_ISCHR(m)	(((m)&_IFMT) == _IFCHR)
#define	S_ISDIR(m)	(((m)&_IFMT) == _IFDIR)
#define	S_ISFIFO(m)	(((m)&_IFMT) == _IFIFO)
#define	S_ISREG(m)	(((m)&_IFMT) == _IFREG)
#define	S_ISLNK(m)	(((m)&_IFMT) == _IFLNK)
#define	S_ISSOCK(m)	(((m)&_IFMT) == _IFSOCK)

#if defined(__CYGWIN__)
/* Special tv_nsec values for futimens(2) and utimensat(2). */
#define UTIME_NOW	-2L
#define UTIME_OMIT	-1L
#endif

int	_EXFUN(chmod,( const char *__path, mode_t __mode ));
int     _EXFUN(fchmod,(int __fd, mode_t __mode));
int	_EXFUN(fstat,( int __fd, struct stat *__sbuf ));
int	_EXFUN(mkdir,( const char *_path, mode_t __mode ));
int	_EXFUN(mkfifo,( const char *__path, mode_t __mode ));
int	_EXFUN(stat,( const char *__restrict __path, struct stat *__restrict __sbuf ));
mode_t	_EXFUN(umask,( mode_t __mask ));

#if defined (__SPU__) || defined(__rtems__) || defined(__CYGWIN__) && !defined(__INSIDE_CYGWIN__)
int	_EXFUN(lstat,( const char *__restrict __path, struct stat *__restrict __buf ));
int	_EXFUN(mknod,( const char *__path, mode_t __mode, dev_t __dev ));
#endif

#if (__POSIX_VISIBLE >= 200809 || defined (__CYGWIN__)) && !defined(__INSIDE_CYGWIN__)
int	_EXFUN(fchmodat, (int, const char *, mode_t, int));
#endif
#if (__BSD_VISIBLE || __POSIX_VISIBLE >= 200809 || defined (__CYGWIN__)) && !defined(__INSIDE_CYGWIN__)
int	_EXFUN(fstatat, (int, const char *__restrict , struct stat *__restrict, int));
int	_EXFUN(mkdirat, (int, const char *, mode_t));
int	_EXFUN(mkfifoat, (int, const char *, mode_t));
#endif
#if (__BSD_VISIBLE || __XSI_VISIBLE >= 700 || defined (__CYGWIN__)) && !defined(__INSIDE_CYGWIN__)
int	_EXFUN(mknodat, (int, const char *, mode_t, dev_t));
#endif
#if (__BSD_VISIBLE || __POSIX_VISIBLE >= 200809 || defined (__CYGWIN__)) && !defined(__INSIDE_CYGWIN__)
int	_EXFUN(utimensat, (int, const char *, const struct timespec *, int));
int	_EXFUN(futimens, (int, const struct timespec *));
#endif

/* Provide prototypes for most of the _<systemcall> names that are
   provided in newlib for some compilers.  */
#ifdef _COMPILING_NEWLIB
int	_EXFUN(_fstat,( int __fd, struct stat *__sbuf ));
int	_EXFUN(_stat,( const char *__restrict __path, struct stat *__restrict __sbuf ));
int	_EXFUN(_mkdir,( const char *_path, mode_t __mode ));
#ifdef __LARGE64_FILES
struct stat64;
int	_EXFUN(_stat64,( const char *__restrict __path, struct stat64 *__restrict __sbuf ));
int	_EXFUN(_fstat64,( int __fd, struct stat64 *__sbuf ));
#endif
#endif

#endif /* !_STAT_H_ */
#ifdef __cplusplus
}
#endif
#endif /* _SYS_STAT_H */
@


1.26
log
@2013-11-21  Daniel Ramirez <javamonn@@gmail.com>

	* libc/include/sys/stat.h, libc/sys/linux/sys/stat.h,
	libc/sys/m88kbug/syscalls.c, libc/sys/rdos/stat.c,
	libc/sys/sparc64/sys/stat.h: Add restrict keyword.
@
text
@d10 1
d159 1
a159 1
#if defined (__CYGWIN__) && !defined(__INSIDE_CYGWIN__)
d161 2
d166 2
d169 2
@


1.25
log
@	Port newlib to x86_64-pc-cygwin.
	* libc/include/sys/features.h: Redefine compilation environment
	definitions for Cygwin to cover 64 bit Cygwin.
	* libc/ctype/ctype_.c (_ctype_): Fix definition for 64 bit Cygwin.
	* libc/include/machine/setjmp.h: Change definition of _JBLEN to allow
	different values for 32 bit and 64 bit Cygwin.
	* libc/include/reent.h (stat64): Define as stat under Cygwin, instead
	of as __stat64.  Undef stat64 if not building Newlib.
	* libc/include/sys/stat.h (stat64): Define as stat under Cygwin.
@
text
@d150 1
a150 1
int	_EXFUN(stat,( const char *__path, struct stat *__sbuf ));
d154 1
a154 1
int	_EXFUN(lstat,( const char *__path, struct stat *__buf ));
d160 1
a160 1
int	_EXFUN(fstatat, (int, const char *, struct stat *, int));
d172 1
a172 1
int	_EXFUN(_stat,( const char *__path, struct stat *__sbuf ));
d176 1
a176 1
int	_EXFUN(_stat64,( const char *__path, struct stat64 *__sbuf ));
@


1.24
log
@	Throughout, run newlib with -Wall -Werror option and fix bugs and
	compiler warnings found this way.

	* libc/stdio/freopen.c (_freopen_r): Fix bug setting _flags.

	* libc/include/stdio.h (_rename): Define when building newlib.
	* libc/include/sys/signal.h (_kill): Ditto.
	* libc/include/sys/stat.h (_mkdir): Ditto.
	* libc/include/sys/time.h (_gettimeofday): Ditto.
	* libc/include/sys/times.h (_times): Ditto.
	* libc/include/sys/wait.h (_wait): Ditto.
	* libc/locale/lmessages.c (empty): Don't define for Cygwin.
	* libc/locale/lmonetary.c (cnv): Ditto.
	* libc/locale/nl_langinfo.c (nl_langinfo): Ditto for variable s.
	* libc/posix/collate.c: Throughout cast to avoid compiler warning.
	* libc/posix/engine.c (matcher): Initialize dp to avoid compiler
	warning.
	* libc/posix/glob.c: Disable on Cygwin.  Explain why.
	* libc/posix/regcomp.c: Fix "uninitialized" compiler warnings.
	(dissect): Deliberately silence gcc compiler warning.  Add comment to
	explain why.
	* libc/posix/wordexp.c (wordexp): Remove num_bytes variable since result
	is never used.
	* libc/posix/popen.c (popen): Ditto for variable last.
	* libc/reent/mkdirr.c: Include sys/stat.h.
	* libc/reent/renamer.c: Include stdio.h.
	* libc/search/hash.c:  Throughout use underscored variants of the stat
	function family.
	(init_hash): Add missing definition for the __USE_INTERNAL_STAT64 case.
	* libc/search/hash_bigkey.c (__big_insert): Add parenthesis to avoid
	compiler warning.
	* libc/search/hash_page.c (overflow_page): Initalize freep to NULL to
	avoid compiler warning.
	* libc/stdio/asiprintf.c (_asiprintf_r): Cast unsigned char * to char *
	to avoid compiler warning.
	(asiprintf): Ditto.
	* libc/stdio/asprintf.c (_asprintf_r): Ditto.
	(asprintf): Ditto.
	* libc/stdio/vasiprintf.c (_vasiprintf_r): Ditto.
	* libc/stdio/vasprintf.c (_vasprintf_r): Ditto.
	* libc/stdio/mktemp.c (_gettemp): Cast to unsigned char in call to
	isdigit to avoid compiler warning.
	* libc/stdio/vfprintf.c (_VFPRINTF_R): Initialize variables used for
	grouping to avoid compiler warning.  Only define and set nseps and
	nrepeats if they are really used.
	* libc/stdio/vfwprintf.c (_VFWPRINTF_R): Ditto.  Only define state if
	it is really used.
	* libc/stdio/vfscanf.c (u_char): Revert to be defined as unsigned char.
	(__SVFSCANF_R): Cast fmt in call to __mbtowc.
	* libc/stdlib/mbtowc_r.c (JIS_state_table): Disable when building
	Cygwin.
	(JIS_action_table): Ditto.
	* libc/stdlib/wctomb_r.c (__utf8_wctomb): Add parenthesis to avoid
	compiler warning.
	* libc/string/strcasestr.c: Deliberately silence gcc compiler warning.
	Add comment to explain why.
	* libc/time/strptime.c (strptime): Cast to unsigned char in calls to
	isspace to avoid compiler warning.
	* libm/math/e_atan2.c (__ieee754_atan2): Add parenthesis to avoid
	compiler warning.
	* libm/math/e_exp.c (__ieee754_exp): Initialize k to 0 to avoid
	compiler warning.  Drop setting it to 0 later.
	* libm/math/ef_exp.c (__ieee754_expf): Ditto.
	* libm/math/e_pow.c (__ieee754_pow): Add braces to avoid compiler
	warning.
	* libm/math/ef_pow.c (__ieee754_powf): Ditto.
	* libm/math/er_lgamma.c (__ieee754_lgamma_r): Initialize nadj to 0 to
	avoid compiler warning.
	* libm/math/erf_lgamma.c (__ieee754_lgammaf_r): Ditto.
	* libm/math/e_rem_pio2.c (__ieee754_rem_pio2): Ditto for variable z.
	* libm/common/sf_round.c (roundf): Remove signbit variable since result
	is never used.
@
text
@d22 1
a22 1
#define stat64 __stat64
@


1.24.2.1
log
@Update branch
@
text
@d22 1
a22 1
#define stat64 stat
@


1.24.2.2
log
@Temporarily back out accidental early checkin
@
text
@d22 1
a22 1
#define stat64 __stat64
@


1.24.2.3
log
@	* libc/include/reent.h (stat64): Define as stat under Cygwin, instead
	of as __stat64.  Undef stat64 if not building Newlib.
	* libc/include/sys/stat.h (stat64): Define as stat under Cygwin.
@
text
@d22 1
a22 1
#define stat64 stat
@


1.23
log
@	* libc/include/sys/stat.h: Move all POSIX-defined symbolic constants
	out of `#ifndef _POSIX_SOURCE' guard.
@
text
@d173 1
d176 1
@


1.22
log
@2010-06-29  Antony King  <antony.king@@sr.com>

	* libc/ctype/ctype_.c (__ctype_ptr): Reinstate definition (guarded by
	_NEED_OLD_CTYPE_PTR_DEFINITION) for backwards compatibility with newlib
	1.16.0 and earlier.

2010-06-28  Yaakov Selkowitz  <yselkowitz@@users.sourceforge.net>

	* libc/include/sys/stat.h: Add ACCESSPERMS, ALLPERMS, and DEFFILEMODE.
@
text
@d82 1
a83 1
#define	S_ISVTX		0001000	/* save swapped text even after use */
d88 1
a97 1
#endif	/* !_POSIX_SOURCE */
@


1.21
log
@
2009-12-17  Ralf Corsepius <ralf.corsepius@@rtems.org>

        * libc/include/pthread.h: Add pthread_atfork, pthread_rwlock_unlock
        * libc/include/sys/stat.h: Use struct timespec st_*tim,
        blksize_t st_blksize, blkcnt_t st_blocks.
        Add st_*time compatibility macros.
@
text
@d125 6
@


1.20
log
@	* libc/include/sys/stat.h: Guard at-functions with !__INSIDE_CYGWIN__.
	(fstatat): Fix type of third parameter.
@
text
@d35 7
d58 1
d60 7
@


1.20.4.1
log
@Support for ARCompact architecture.
@
text
@a40 7
#ifdef __arc__
  long		st_blksize;
  long		st_blocks;
  time_t	st_atime;
  time_t	st_mtime;
  time_t	st_ctime;
#else /* !__arc__ */
a48 1
#endif /* __arc__ */
@


1.19
log
@	* libc/include/sys/stat.h (UTIME_NOW): Define for Cygwin.
	(UTIME_OMIT): Ditto.
	(utimensat): Declare for Cygwin.
	(futimens): Ditto.
@
text
@d137 1
a137 1
#if defined (__CYGWIN__)
d139 1
a139 1
int	_EXFUN(fstatat, (int, const char *, struct __stat64 *, int));
@


1.18
log
@	* libc/include/stdio.h (renameat): Declare for Cygwin.
	(symlinkat): Ditto.
	* libc/include/sys/unistd.h (readlink): Align declaration to POSIX.
	(faccessat): Declare for Cygwin.
	(fchownat): Ditto.
	(linkat): Ditto.
	(readlinkat): Ditto.
	* libc/include/sys/_default_fcntl.h (AT_FDCWD): Define for Cygwin.
	(AT_EACCESS): Ditto.
	(AT_SYMLINK_NOFOLLOW): Ditto.
	(AT_SYMLINK_FOLLOW): Ditto.
	(AT_REMOVEDIR): Ditto.
	(futimesat): Declare for Cygwin.
	(openat): Ditto.
	(unlinkat): Ditto.
	* libc/include/sys/stat.h (fchmodat): Ditto.
	(fstatat): Ditto.
	(mkdirat): Ditto.
	(mkfifoat): Ditto.
	(mknodat): Ditto.
@
text
@d118 5
d143 2
@


1.17
log
@
2007-06-20  Patrick Mansfield  <patmans@@us.ibm.com>

        * libc/include/sys/unistd.h[__SPU__]: Make fchdir prototype visible.
        * libc/include/sys/stat.h[__SPU__]: Make mknod and lstat prototypes
        visible.
@
text
@d132 8
@


1.16
log
@
2003-12-05  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/sys/stat.h: No longer include stat-dj.h.
        * libc/include/sys/stat-dj.h: Removed.
@
text
@d127 1
a127 1
#if defined(__rtems__) || defined(__CYGWIN__) && !defined(__INSIDE_CYGWIN__)
@


1.15
log
@
2003-11-26  Corinna Vinschen  <corinna@@vinschen.de>

        * libc/include/fcntl.h: Declare syscalls only when building newlib.
        * libc/include/unistd.h: Ditto.
        * libc/include/stat.h: Ditto.  Also declare struct stat64.
@
text
@a11 6
#ifdef __i386__
#ifdef __MSDOS__
#include "stat-dj.h"
#endif
#endif

@


1.14
log
@
2003-11-18  Corinna Vinschen  <corinna@@vinschen.de>

        * libc/include/sys/fcntl.h: Declare _open64.
        * libc/include/sys/stat.h: Declare _fstat64.
        * libc/include/sys/unistd.h: Declare _lseek64.
@
text
@d140 1
a140 1
#ifndef __INSIDE_CYGWIN__
d144 1
@


1.13
log
@
2003-08-26  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/sys/stat.h[__CYGWIN__]: Only define stat64 as
        __stat64 when compiling newlib.
@
text
@d143 3
@


1.12
log
@
2003-08-26  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/stdio.h: Allow the io64 function prototypes for
        Cygwin when compiling newlib.
        * libc/include/sys/stat.h[__CYGWIN__]: Define stat64 as __stat64
        to expose the Cygwin struct __stat64 type.
        * libc/stdio64/fseeko64.c: Use _fstat64_r and pass a struct stat64
        pointer.
        * libc/stdio64/tmpfile64.c(_tmpfile64_r): Call _fopen64_r.
@
text
@d27 1
d29 1
@


1.11
log
@	* libc/include/pwd.h: Add guards to avoid type clashes when compiling
	Cygwin.
	* libc/include/sys/stat.h: Ditto.
	* libc/include/sys/unistd.h: Ditto.
	* libc/sys/cygwin/sys/dirent.h: Ditto.
@
text
@d27 1
@


1.10
log
@	* libc/include/sys/stat.h (_fstat): Don't declare when compiling Cygwin.
	(_stat): Ditto.
@
text
@d130 1
a130 1
#if defined(__rtems__) || defined(__CYGWIN__)
@


1.9
log
@	* libc/include/grp.h: Include Cygwin specific header.
	* libc/include/sys/stat.h: Ditto.  Don't define `struct stat'
	when compiling for Cygwin.
	* libc/include/sys/types.h: Don't define off_t, uid_t
	and gid_t when compiling for Cygwin.
@
text
@d137 1
d140 1
@


1.8
log
@* libc/include/sys/stat.h: Revert March 3, Cygwin change.
* libc/include/sys/Ditto.h: Ditto.
@
text
@d25 3
d55 1
@


1.7
log
@* libc/include/sys/stat.h: Use special defines for executable stat bits when
compiling for Cygwin.
* libc/include/sys/unistd.h: Use special define for X_OK when compiling for
Cygwin.
@
text
@a108 12
#if defined (__CYGWIN__) && !defined (__INSIDE_CYGWIN__)
extern unsigned const _cygwin_S_IEXEC, _cygwin_S_IXUSR, _cygwin_S_IXGRP, _cygwin_S_IXOTH;
#undef S_IEXEC
#undef S_IXUSR
#undef S_IXGRP
#undef S_IXOTH
#define S_IEXEC		_cygwin_S_IEXEC
#define S_IXUSR		_cygwin_S_IXUSR
#define S_IXGRP		_cygwin_S_IXGRP
#define S_IXOTH		_cygwin_S_IXOTH
#endif

@


1.6
log
@
2001-02-12  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/sys/stat.h: Add mknod for Cygwin now that
        Cygwin definition has correct prototype.
@
text
@a70 1

d96 1
a96 1
#define	S_IRWXU 	0000700	/* rwx, owner */
d99 2
a100 2
#define		S_IXUSR	0000100	/* execute/search permission, owner */
#define	S_IRWXG		0000070	/* rwx, group */
d103 2
a104 2
#define		S_IXGRP	0000010	/* execute/search permission, group */
#define	S_IRWXO		0000007	/* rwx, other */
d107 13
a119 1
#define		S_IXOTH	0000001	/* execute/search permission, other */
@


1.5
log
@
2001-02-08  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/sys/stat.h: Must revert change for mknod
        for CYGWIN until winsup/cygwin/syscalls.cc changes mknod
        prototype.
@
text
@d129 1
a129 4
#endif

#if defined(__rtems__)
int	_EXFUN(mknod,( const char *_path, mode_t _mode, dev_t dev ));
@


1.4
log
@
2001-02-08  Edward M. Lee  <tailbert@@yahoo.com>

        * libc/include/grp.h: add prototype for initgroups.
        * libc/include/stdio.h: fix prototype for putw.
        * libc/include/sys/signal.h: add prototype for killpg.
        * libc/include/sys/stat.h: enable mknod/lstat for CYGWIN.
        * libc/include/sys/unistd.h: add prototypes for getpgid, setpgrp,
        vhangup and remove duplicate sysconf prototype.
@
text
@d128 4
a132 1
int	_EXFUN(lstat,( const char *__path, struct stat *__buf ));
@


1.3
log
@* libc/include/ctype.h: __CYGWIN32__ -> __CYGWIN__
* libc/include/malloc.h: Ditto.
* libc/include/process.h: Ditto.
* libc/include/stdio.h: Ditto.
* libc/include/stdlib.h: Ditto.
* libc/include/time.h: Ditto.
* libc/include/machine/setjmp.h: Ditto.
* libc/include/sys/errno.h: Ditto.
* libc/include/sys/signal.h: Ditto.
* libc/include/sys/stat.h: Ditto.
* libc/include/sys/time.h: Ditto.
* libc/include/sys/unistd.h: Ditto.
* libc/include/string.h: Ditto.  strsignal should return a const char *.
@
text
@d127 1
a127 1
#if defined(__rtems__)
a135 9

#ifdef __CYGWIN__
int	_EXFUN(lstat,( const char *__path, struct stat *__buf ));
#endif

#if defined(__rtems__)
int	_EXFUN(mknod,( const char *_path, mode_t _mode, dev_t dev ));
int	_EXFUN(lstat,( const char *_path, struct stat *_sbuf ));
#endif
@


1.2
log
@Thu Feb 24 11:43:00 2000  Ran Cabell <rcabell@@norfolk.infi.net>

        * libm/mathfp/sf_atan2.c: Fix atan2 typo for _DOUBLE_IS_32_BITS.
        * libm/mathfp/sf_atan.c: Ditto.

Thu Feb 24 11:39:00 2000  Joel Sherrill <joel@@OARcorp.com>

        * libc/include/sys/stat.h: Add RTEMS prototype for lstat.
@
text
@d137 1
a137 1
#ifdef __CYGWIN32__
@


1.1
log
@Initial revision
@
text
@d129 1
@


1.1.1.1
log
@import newlib-2000-02-17 snapshot
@
text
@@
