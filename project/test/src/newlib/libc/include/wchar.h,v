head	1.38;
access;
symbols
	cygwin-1_7_35-release:1.37
	cygwin-1_7_34-release:1.37
	newlib-2_2_0:1.36.0.2
	cygwin-1_7_33-release:1.35
	cygwin-1_7_32-release:1.35
	cygwin-1_7_31-release:1.35
	cygwin-1_7_30-release:1.34
	cygwin-1_7_29-release:1.34
	cygwin-1_7_28-release:1.34
	newlib-2_1_0:1.34
	cygwin-1_7_27-release:1.33
	cygwin-1_7_26-release:1.33
	cygwin-1_7_25-release:1.31
	cygwin-1_7_24-release:1.31
	cygwin-1_7_23-release:1.31
	cygwin-1_7_22-release:1.31
	cygwin-1_7_21-release:1.31
	cygwin-1_7_20-release:1.30
	cygwin-1_7_19-release:1.30
	cygwin-64bit-postmerge:1.30
	cygwin-64bit-premerge-branch:1.30.0.2
	cygwin-64bit-premerge:1.30
	cygwin-1_7_18-release:1.30
	newlib-2_0_0:1.30
	cygwin-1_7_17-release:1.29
	cygwin-64bit-branch:1.29.0.2
	cygwin-1_7_16-release:1.29
	cygwin-1_7_15-release:1.29
	cygwin-1_7_14_2-release:1.29
	cygwin-1_7_14-release:1.29
	cygwin-1_7_12-release:1.29
	cygwin-1_7_11-release:1.29
	cygwin-1_7_10-release:1.29
	newlib-1_20_0:1.29
	cygwin-1_7_9-release:1.29
	cygwin-1_7_8-release:1.29
	newlib-1_19_0:1.28
	cygwin-1_7_7-release:1.28
	cygwin-1_7_5-release:1.28
	cygwin-1_7_4-release:1.28
	cygwin-1_7_3-release:1.28
	cygwin-1_7_2-release:1.28
	newlib-1_18_0:1.28
	cygwin-1_7_1-release:1.28
	newlib-1_17_0-arc:1.19.0.2
	binutils-arc-20080908-branch:1.16.0.2
	binutils-arc-20080908-branchpoint:1.16
	newlib-1_17_0:1.19
	newlib-1_16_0:1.16
	newlib-1_15_0:1.13
	newlib-csl-coldfire-4_1-32:1.13
	newlib-csl-sourcerygxx-4_1-32:1.13
	newlib-csl-innovasic-fido-3_4_4-33:1.13
	newlib-csl-coldfire-4_1-30:1.13
	newlib-csl-sourcerygxx-4_1-30:1.13
	newlib-csl-coldfire-4_1-28:1.13
	newlib-csl-sourcerygxx-4_1-28:1.13
	newlib-csl-arm-2006q3-27:1.13
	newlib-csl-sourcerygxx-4_1-27:1.13
	newlib-csl-arm-2006q3-26:1.13
	newlib-csl-sourcerygxx-4_1-26:1.13
	newlib-csl-sourcerygxx-4_1-24:1.13
	newlib-csl-sourcerygxx-4_1-23:1.13
	newlib-csl-sourcerygxx-4_1-21:1.13
	newlib-csl-arm-2006q3-21:1.13
	newlib-csl-arm-2006q3-19:1.13
	newlib-csl-sourcerygxx-4_1-19:1.13
	newlib-csl-sourcerygxx-4_1-18:1.13
	newlib-csl-sourcerygxx-3_4_4-25:1.13
	newlib-csl-sourcerygxx-4_1-17:1.13
	cr-0x5f1:1.13.0.6
	newlib-csl-sourcerygxx-4_1-14:1.13
	newlib-csl-sourcerygxx-4_1-13:1.13
	newlib-csl-sourcerygxx-4_1-12:1.13
	newlib-csl-sourcerygxx-4_1-9:1.13
	newlib-csl-sourcerygxx-4_1-8:1.13
	newlib-csl-sourcerygxx-4_1-7:1.13
	newlib-csl-arm-2006q1-6:1.13
	newlib-csl-sourcerygxx-4_1-6:1.13
	newlib-csl-sourcerygxx-4_1-5:1.13
	newlib-csl-sourcerygxx-4_1-4:1.13
	newlib-autotools-branch:1.13.0.4
	newlib-csl-20060320-branch:1.13.0.2
	newlib-csl-20060320-branchpoint:1.13
	newlib-1_14_0:1.13
	newlib-csl-arm-2005-q1b:1.13
	newlib-csl-arm-2005-q1a:1.13
	newlib-1_13_0:1.13
	csl-arm-2004-q3:1.13
	csl-arm-2004-q1a:1.13
	csl-arm-2004-q1:1.13
	newlib-1_12_0:1.13
	csl-arm-2003-q4:1.13
	w32api-2_2:1.8
	mingw-runtime-2_4:1.8
	newlib-1_11_0:1.8;
locks; strict;
comment	@ * @;


1.38
date	2015.03.05.17.15.24;	author corinna;	state Exp;
branches;
next	1.37;

1.37
date	2015.02.04.11.02.36;	author corinna;	state Exp;
branches;
next	1.36;

1.36
date	2014.12.18.14.55.18;	author yselkowitz;	state Exp;
branches;
next	1.35;

1.35
date	2014.05.12.17.02.11;	author corinna;	state Exp;
branches;
next	1.34;

1.34
date	2013.12.23.19.21.07;	author jjohnstn;	state Exp;
branches;
next	1.33;

1.33
date	2013.11.26.17.20.59;	author joel;	state Exp;
branches;
next	1.32;

1.32
date	2013.11.25.13.46.22;	author joel;	state Exp;
branches;
next	1.31;

1.31
date	2013.06.26.21.34.16;	author jjohnstn;	state Exp;
branches;
next	1.30;

1.30
date	2012.11.01.11.51.11;	author corinna;	state Exp;
branches;
next	1.29;

1.29
date	2011.01.27.11.55.01;	author corinna;	state Exp;
branches
	1.29.2.1;
next	1.28;

1.28
date	2009.10.15.08.23.27;	author corinna;	state Exp;
branches;
next	1.27;

1.27
date	2009.03.15.13.39.06;	author corinna;	state Exp;
branches;
next	1.26;

1.26
date	2009.03.11.12.57.53;	author corinna;	state Exp;
branches;
next	1.25;

1.25
date	2009.03.11.11.53.22;	author corinna;	state Exp;
branches;
next	1.24;

1.24
date	2009.03.09.12.35.03;	author corinna;	state Exp;
branches;
next	1.23;

1.23
date	2009.03.06.09.55.52;	author corinna;	state Exp;
branches;
next	1.22;

1.22
date	2009.02.19.09.19.40;	author corinna;	state Exp;
branches;
next	1.21;

1.21
date	2009.02.18.17.35.24;	author corinna;	state Exp;
branches;
next	1.20;

1.20
date	2009.02.12.23.10.01;	author jjohnstn;	state Exp;
branches;
next	1.19;

1.19
date	2008.12.12.19.47.05;	author jjohnstn;	state Exp;
branches;
next	1.18;

1.18
date	2008.12.10.23.43.12;	author jjohnstn;	state Exp;
branches;
next	1.17;

1.17
date	2008.11.27.20.45.37;	author jjohnstn;	state Exp;
branches;
next	1.16;

1.16
date	2007.12.19.17.33.11;	author corinna;	state Exp;
branches;
next	1.15;

1.15
date	2007.07.06.20.03.28;	author corinna;	state Exp;
branches;
next	1.14;

1.14
date	2007.07.04.16.18.33;	author corinna;	state Exp;
branches;
next	1.13;

1.13
date	2003.12.05.20.51.57;	author jjohnstn;	state Exp;
branches;
next	1.12;

1.12
date	2003.12.05.01.36.32;	author jjohnstn;	state Exp;
branches;
next	1.11;

1.11
date	2003.10.23.18.07.13;	author jjohnstn;	state Exp;
branches;
next	1.10;

1.10
date	2003.04.09.10.42.12;	author corinna;	state Exp;
branches;
next	1.9;

1.9
date	2003.04.03.08.26.07;	author corinna;	state Exp;
branches;
next	1.8;

1.8
date	2002.11.07.00.44.31;	author jjohnstn;	state Exp;
branches;
next	1.7;

1.7
date	2002.11.04.19.04.09;	author jjohnstn;	state Exp;
branches;
next	1.6;

1.6
date	2002.09.16.18.55.24;	author jjohnstn;	state Exp;
branches;
next	1.5;

1.5
date	2002.09.05.15.26.42;	author jjohnstn;	state Exp;
branches;
next	1.4;

1.4
date	2002.09.04.18.16.54;	author jjohnstn;	state Exp;
branches;
next	1.3;

1.3
date	2002.08.29.19.38.24;	author jjohnstn;	state Exp;
branches;
next	1.2;

1.2
date	2002.08.27.21.20.10;	author jjohnstn;	state Exp;
branches;
next	1.1;

1.1
date	2002.08.23.01.56.02;	author fitzsim;	state Exp;
branches;
next	;

1.29.2.1
date	2012.11.01.11.56.26;	author corinna;	state Exp;
branches;
next	;


desc
@@


1.38
log
@	* libc/include/stdio.h (FILE): Protect typedef from redefinition.
	* libc/include/wchar.h: Ditto.
@
text
@#ifndef _WCHAR_H_
#define _WCHAR_H_

#include <_ansi.h>

#include <sys/reent.h>

#define __need_size_t
#define __need_wchar_t
#define __need_wint_t
#define __need_NULL
#include <stddef.h>

#define __need___va_list
#include <stdarg.h>

/* For _mbstate_t definition. */
#include <sys/_types.h>
#include <sys/cdefs.h>
/* For __STDC_ISO_10646__ */
#include <sys/features.h>

#ifndef WEOF
# define WEOF ((wint_t)-1)
#endif

/* This must match definition in <stdint.h> */
#ifndef WCHAR_MIN
#ifdef __WCHAR_MIN__
#define WCHAR_MIN __WCHAR_MIN__
#elif defined(__WCHAR_UNSIGNED__) || (L'\0' - 1 > 0)
#define WCHAR_MIN (0 + L'\0')
#else
#define WCHAR_MIN (-0x7fffffff - 1 + L'\0')
#endif
#endif

/* This must match definition in <stdint.h> */
#ifndef WCHAR_MAX
#ifdef __WCHAR_MAX__
#define WCHAR_MAX __WCHAR_MAX__
#elif defined(__WCHAR_UNSIGNED__) || (L'\0' - 1 > 0)
#define WCHAR_MAX (0xffffffffu + L'\0')
#else
#define WCHAR_MAX (0x7fffffff + L'\0')
#endif
#endif

_BEGIN_STD_C

/* As in stdio.h, <sys/reent.h> defines __FILE. */
#if !defined(__FILE_defined)
typedef __FILE FILE;
# define __FILE_defined
#endif

/* As required by POSIX.1-2008, declare tm as incomplete type.
   The actual definition is in time.h. */
struct tm;

#ifndef _MBSTATE_T
#define _MBSTATE_T
typedef _mbstate_t mbstate_t;
#endif /* _MBSTATE_T */

wint_t	_EXFUN(btowc, (int));
int	_EXFUN(wctob, (wint_t));
size_t	_EXFUN(mbrlen, (const char *__restrict, size_t, mbstate_t *__restrict));
size_t	_EXFUN(mbrtowc, (wchar_t *__restrict, const char *__restrict, size_t,
						mbstate_t *__restrict));
size_t	_EXFUN(_mbrtowc_r, (struct _reent *, wchar_t * , const char * , 
			size_t, mbstate_t *));
int	_EXFUN(mbsinit, (const mbstate_t *));
size_t	_EXFUN(mbsnrtowcs, (wchar_t *__restrict, const char **__restrict,
				size_t, size_t, mbstate_t *__restrict));
size_t	_EXFUN(_mbsnrtowcs_r, (struct _reent *, wchar_t * , const char ** ,
			size_t, size_t, mbstate_t *));
size_t	_EXFUN(mbsrtowcs, (wchar_t *__restrict, const char **__restrict, size_t,
				mbstate_t *__restrict));
size_t	_EXFUN(_mbsrtowcs_r, (struct _reent *, wchar_t * , const char ** , size_t, mbstate_t *));
size_t	_EXFUN(wcrtomb, (char *__restrict, wchar_t, mbstate_t *__restrict));
size_t	_EXFUN(_wcrtomb_r, (struct _reent *, char * , wchar_t, mbstate_t *));
size_t	_EXFUN(wcsnrtombs, (char *__restrict, const wchar_t **__restrict,
				size_t, size_t, mbstate_t *__restrict));
size_t	_EXFUN(_wcsnrtombs_r, (struct _reent *, char * , const wchar_t ** , 
			size_t, size_t, mbstate_t *));
size_t	_EXFUN(wcsrtombs, (char *__restrict, const wchar_t **__restrict,
				size_t, mbstate_t *__restrict));
size_t	_EXFUN(_wcsrtombs_r, (struct _reent *, char * , const wchar_t ** , 
			size_t, mbstate_t *));
int	_EXFUN(wcscasecmp, (const wchar_t *, const wchar_t *));
wchar_t	*_EXFUN(wcscat, (wchar_t *__restrict, const wchar_t *__restrict));
wchar_t	*_EXFUN(wcschr, (const wchar_t *, wchar_t));
int	_EXFUN(wcscmp, (const wchar_t *, const wchar_t *));
int	_EXFUN(wcscoll, (const wchar_t *, const wchar_t *));
wchar_t	*_EXFUN(wcscpy, (wchar_t *__restrict, const wchar_t *__restrict));
wchar_t	*_EXFUN(wcpcpy, (wchar_t *__restrict,
				 const wchar_t *__restrict));
wchar_t	*_EXFUN(wcsdup, (const wchar_t *));
wchar_t	*_EXFUN(_wcsdup_r, (struct _reent *, const wchar_t * ));
size_t	_EXFUN(wcscspn, (const wchar_t *, const wchar_t *));
size_t  _EXFUN(wcsftime, (wchar_t *__restrict, size_t,
				const wchar_t *__restrict, const struct tm *__restrict));
size_t	_EXFUN(wcslcat, (wchar_t *, const wchar_t *, size_t));
size_t	_EXFUN(wcslcpy, (wchar_t *, const wchar_t *, size_t));
size_t	_EXFUN(wcslen, (const wchar_t *));
int	_EXFUN(wcsncasecmp, (const wchar_t *, const wchar_t *, size_t));
wchar_t	*_EXFUN(wcsncat, (wchar_t *__restrict,
				 const wchar_t *__restrict, size_t));
int	_EXFUN(wcsncmp, (const wchar_t *, const wchar_t *, size_t));
wchar_t	*_EXFUN(wcsncpy, (wchar_t *__restrict,
				 const wchar_t *__restrict, size_t));
wchar_t	*_EXFUN(wcpncpy, (wchar_t *__restrict,
				 const wchar_t *__restrict, size_t));
size_t	_EXFUN(wcsnlen, (const wchar_t *, size_t));
wchar_t	*_EXFUN(wcspbrk, (const wchar_t *, const wchar_t *));
wchar_t	*_EXFUN(wcsrchr, (const wchar_t *, wchar_t));
size_t	_EXFUN(wcsspn, (const wchar_t *, const wchar_t *));
wchar_t	*_EXFUN(wcsstr, (const wchar_t *__restrict,
				 const wchar_t *__restrict));
wchar_t	*_EXFUN(wcstok, (wchar_t *__restrict, const wchar_t *__restrict,
				 wchar_t **__restrict));
double _EXFUN(wcstod, (const wchar_t *__restrict, wchar_t **__restrict));
double _EXFUN(_wcstod_r, (struct _reent *, const wchar_t *, wchar_t **));
float _EXFUN(wcstof, (const wchar_t *__restrict, wchar_t **__restrict));
float _EXFUN(_wcstof_r, (struct _reent *, const wchar_t *, wchar_t **));
int	_EXFUN(wcswidth, (const wchar_t *, size_t));
size_t	_EXFUN(wcsxfrm, (wchar_t *__restrict, const wchar_t *__restrict,
				size_t));
int	_EXFUN(wcwidth, (const wchar_t));
wchar_t	*_EXFUN(wmemchr, (const wchar_t *, wchar_t, size_t));
int	_EXFUN(wmemcmp, (const wchar_t *, const wchar_t *, size_t));
wchar_t	*_EXFUN(wmemcpy, (wchar_t *__restrict, const wchar_t *__restrict,
				 size_t));
wchar_t	*_EXFUN(wmemmove, (wchar_t *, const wchar_t *, size_t));
wchar_t	*_EXFUN(wmemset, (wchar_t *, wchar_t, size_t));

long    _EXFUN(wcstol, (const wchar_t *__restrict, wchar_t **__restrict, int));
long long _EXFUN(wcstoll, (const wchar_t *__restrict, wchar_t **__restrict,
				  int));
unsigned long _EXFUN(wcstoul, (const wchar_t *__restrict, wchar_t **__restrict,
					  int));
unsigned long long _EXFUN(wcstoull, (const wchar_t *__restrict,
						   wchar_t **__restrict, int));
long    _EXFUN(_wcstol_r, (struct _reent *, const wchar_t *, wchar_t **, int));
long long _EXFUN(_wcstoll_r, (struct _reent *, const wchar_t *, wchar_t **, int));
unsigned long _EXFUN(_wcstoul_r, (struct _reent *, const wchar_t *, wchar_t **, int));
unsigned long long _EXFUN(_wcstoull_r, (struct _reent *, const wchar_t *, wchar_t **, int));
long double _EXFUN(wcstold, (const wchar_t *, wchar_t **));

wint_t _EXFUN(fgetwc, (__FILE *));
wchar_t *_EXFUN(fgetws, (wchar_t *__restrict, int, __FILE *__restrict));
wint_t _EXFUN(fputwc, (wchar_t, __FILE *));
int _EXFUN(fputws, (const wchar_t *__restrict, __FILE *__restrict));
int _EXFUN (fwide, (__FILE *, int));
wint_t _EXFUN (getwc, (__FILE *));
wint_t _EXFUN (getwchar, (void));
wint_t _EXFUN(putwc, (wchar_t, __FILE *));
wint_t _EXFUN(putwchar, (wchar_t));
wint_t _EXFUN (ungetwc, (wint_t wc, __FILE *));

wint_t _EXFUN(_fgetwc_r, (struct _reent *, __FILE *));
wint_t _EXFUN(_fgetwc_unlocked_r, (struct _reent *, __FILE *));
wchar_t *_EXFUN(_fgetws_r, (struct _reent *, wchar_t *, int, __FILE *));
wchar_t *_EXFUN(_fgetws_unlocked_r, (struct _reent *, wchar_t *, int, __FILE *));
wint_t _EXFUN(_fputwc_r, (struct _reent *, wchar_t, __FILE *));
wint_t _EXFUN(_fputwc_unlocked_r, (struct _reent *, wchar_t, __FILE *));
int _EXFUN(_fputws_r, (struct _reent *, const wchar_t *, __FILE *));
int _EXFUN(_fputws_unlocked_r, (struct _reent *, const wchar_t *, __FILE *));
int _EXFUN (_fwide_r, (struct _reent *, __FILE *, int));
wint_t _EXFUN (_getwc_r, (struct _reent *, __FILE *));
wint_t _EXFUN (_getwc_unlocked_r, (struct _reent *, __FILE *));
wint_t _EXFUN (_getwchar_r, (struct _reent *ptr));
wint_t _EXFUN (_getwchar_unlocked_r, (struct _reent *ptr));
wint_t _EXFUN(_putwc_r, (struct _reent *, wchar_t, __FILE *));
wint_t _EXFUN(_putwc_unlocked_r, (struct _reent *, wchar_t, __FILE *));
wint_t _EXFUN(_putwchar_r, (struct _reent *, wchar_t));
wint_t _EXFUN(_putwchar_unlocked_r, (struct _reent *, wchar_t));
wint_t _EXFUN (_ungetwc_r, (struct _reent *, wint_t wc, __FILE *));

#if __GNU_VISIBLE
wint_t _EXFUN(fgetwc_unlocked, (__FILE *));
wchar_t *_EXFUN(fgetws_unlocked, (wchar_t *__restrict, int, __FILE *__restrict));
wint_t _EXFUN(fputwc_unlocked, (wchar_t, __FILE *));
int _EXFUN(fputws_unlocked, (const wchar_t *__restrict, __FILE *__restrict));
wint_t _EXFUN(getwc_unlocked, (__FILE *));
wint_t _EXFUN(getwchar_unlocked, (void));
wint_t _EXFUN(putwc_unlocked, (wchar_t, __FILE *));
wint_t _EXFUN(putwchar_unlocked, (wchar_t));
#endif

__FILE *_EXFUN (open_wmemstream, (wchar_t **, size_t *));
__FILE *_EXFUN (_open_wmemstream_r, (struct _reent *, wchar_t **, size_t *));

#ifndef __VALIST
#ifdef __GNUC__
#define __VALIST __gnuc_va_list
#else
#define __VALIST char*
#endif
#endif

int	_EXFUN(fwprintf, (__FILE *__restrict, const wchar_t *__restrict, ...));
int	_EXFUN(swprintf, (wchar_t *__restrict, size_t,
			const wchar_t *__restrict, ...));
int	_EXFUN(vfwprintf, (__FILE *__restrict, const wchar_t *__restrict,
			__VALIST));
int	_EXFUN(vswprintf, (wchar_t *__restrict, size_t,
			const wchar_t *__restrict, __VALIST));
int	_EXFUN(vwprintf, (const wchar_t *__restrict, __VALIST));
int	_EXFUN(wprintf, (const wchar_t *__restrict, ...));

int	_EXFUN(_fwprintf_r, (struct _reent *, __FILE *, const wchar_t *, ...));
int	_EXFUN(_swprintf_r, (struct _reent *, wchar_t *, size_t, const wchar_t *, ...));
int	_EXFUN(_vfwprintf_r, (struct _reent *, __FILE *, const wchar_t *, __VALIST));
int	_EXFUN(_vswprintf_r, (struct _reent *, wchar_t *, size_t, const wchar_t *, __VALIST));
int	_EXFUN(_vwprintf_r, (struct _reent *, const wchar_t *, __VALIST));
int	_EXFUN(_wprintf_r, (struct _reent *, const wchar_t *, ...));

int	_EXFUN(fwscanf, (__FILE *__restrict, const wchar_t *__restrict, ...));
int	_EXFUN(swscanf, (const wchar_t *__restrict,
			const wchar_t *__restrict, ...));
int	_EXFUN(vfwscanf, (__FILE *__restrict, const wchar_t *__restrict,
			__VALIST));
int	_EXFUN(vswscanf, (const wchar_t *__restrict, const wchar_t *__restrict,
			__VALIST));
int	_EXFUN(vwscanf, (const wchar_t *__restrict, __VALIST));
int	_EXFUN(wscanf, (const wchar_t *__restrict, ...));

int	_EXFUN(_fwscanf_r, (struct _reent *, __FILE *, const wchar_t *, ...));
int	_EXFUN(_swscanf_r, (struct _reent *, const wchar_t *, const wchar_t *, ...));
int	_EXFUN(_vfwscanf_r, (struct _reent *, __FILE *, const wchar_t *, __VALIST));
int	_EXFUN(_vswscanf_r, (struct _reent *, const wchar_t *, const wchar_t *, __VALIST));
int	_EXFUN(_vwscanf_r, (struct _reent *, const wchar_t *, __VALIST));
int	_EXFUN(_wscanf_r, (struct _reent *, const wchar_t *, ...));

#define getwc(fp)	fgetwc(fp)
#define putwc(wc,fp)	fputwc((wc), (fp))
#define getwchar()	fgetwc(_REENT->_stdin)
#define putwchar(wc)	fputwc((wc), _REENT->_stdout)

#if __GNU_VISIBLE
#define getwc_unlocked(fp)	fgetwc_unlocked(fp)
#define putwc_unlocked(wc,fp)	fputwc_unlocked((wc), (fp))
#define getwchar_unlocked()	fgetwc_unlocked(_REENT->_stdin)
#define putwchar_unlocked(wc)	fputwc_unlocked((wc), _REENT->_stdout)
#endif

_END_STD_C

#endif /* _WCHAR_H_ */
@


1.37
log
@	* libc/include/wchar.h (wcstold): Drop _LDBL_EQ_DBL requirement for
	declaration.
@
text
@d52 1
d54 2
@


1.36
log
@Implement BSD/GNU unlocked stdio extensions.
* libc/include/stdio.h (clearerr_unlocked, feof_unlocked,
ferror_unlocked, fflush_unlocked, fgetc_unlocked, fgets_unlocked,
fileno_unlocked, fputc_unlocked, fputs_unlocked, fread_unlocked,
fwrite_unlocked): Declare.
* libc/include/wchar.h (fgetwc_unlocked, fgetws_unlocked,
fputwc_unlocked, fputws_unlocked, getwc_unlocked, getwchar_unlocked,
putwc_unlocked, putwchar_unlocked): Declare.
* libc/stdio/Makefile.am (ELIX_4_SOURCES): Add clearerr_u.c,
feof_u.c, ferror_u.c, fflush_u.c, fgetc_u.c, fgets_u.c, fgetwc_u.c,
fgetws_u.c, fileno_u.c, fputc_u.c, fputs_u.c, fputwc_u.c, fputws_u.c,
fread_u.c, fwrite_u.c, getwc_u.c, getwchar_u.c, putwc_u.c, putwchar_u.c.
Add necessary dependencies.
* libc/stdio/Makefile.in: Regenerate.
* libc/stdio/clearerr.c: Document unlocked variant.
* libc/stdio/clearerr_u.c: New file.
* libc/stdio/feof.c: Document unlocked variant.
* libc/stdio/feof_u.c: New file.
* libc/stdio/ferror.c: Document unlocked variant.
* libc/stdio/ferror_u.c: New file.
* libc/stdio/fflush.c: Add __IMPL_UNLOCKED__ overrides.
Document unlocked variants.
* libc/stdio/fflush_u.c: New file.
* libc/stdio/fgetc.c: Document unlocked variants.
* libc/stdio/fgetc_u.c: New file.
* libc/stdio/fgets.c: Add __IMPL_UNLOCKED__ overrides.
Document unlocked variants.
* libc/stdio/fgets_u.c: New file.
* libc/stdio/fgetwc.c: Document unlocked variants.
(__fgetwc): Make non-static.
* libc/stdio/fgetwc_u.c: New file.
* libc/stdio/fgetws.c: Add __IMPL_UNLOCKED__ overrides.
Document unlocked variants.
* libc/stdio/fgetws_u.c: New file.
* libc/stdio/fileno.c: Document unlocked variant.
* libc/stdio/fileno_u.c: New file.
* libc/stdio/fputc.c: Document unlocked variants.
* libc/stdio/fputc_u.c: New file.
* libc/stdio/fputs.c: Add __IMPL_UNLOCKED__ overrides.
Document unlocked variants.
* libc/stdio/fputs_u.c: New file.
* libc/stdio/fputwc.c: Document unlocked variants.
(__fputwc): Make non-static.
* libc/stdio/fputwc_u.c: New file.
* libc/stdio/fputws.c: Add __IMPL_UNLOCKED__ overrides.
Document unlocked variants.
* libc/stdio/fputws_u.c: New file.
* libc/stdio/fread.c: Add __IMPL_UNLOCKED__ overrides.
Document unlocked variants.
* libc/stdio/fread_u.c: New file.
* libc/stdio/fwrite.c: Add __IMPL_UNLOCKED__ overrides.
Document unlocked variants.
* libc/stdio/fwrite_u.c: New file.
* libc/stdio/getwc_u.c: New file.
* libc/stdio/getwchar.c: Document unlocked variants.
* libc/stdio/getwchar_u.c: New file.
* libc/stdio/local.h: Define locking macros as empty ifdef
__IMPL_UNLOCKED__.
(__fgetwc, __fputwc): Declare.
* libc/stdio/putwc_u.c: New file.
* libc/stdio/putwchar.c: Document unlocked variants.
* libc/stdio/putwchar_u.c: New file.
@
text
@a145 2
/* On platforms where long double equals double.  */
#ifdef _LDBL_EQ_DBL
a146 1
#endif /* _LDBL_EQ_DBL */
@


1.35
log
@	* libc/include/stdint.h (WCHAR_MIN): Copy definition from wchar.h.
	(WCHAR_MAX): Ditto.
	* libc/include/wchar.h (WCHAR_MIN): Add comment.
	(WCHAR_MAX): Ditto.
@
text
@d19 1
a19 1

d163 1
d165 1
d167 1
d169 1
d172 1
d174 1
d176 1
d178 1
d181 11
d242 7
@


1.34
log
@
2013-12-22  JF Bastien  <jfb@@chromium.org>

        * libc/include/limits.h: Define LLONG_MIN, LLONG_MAX and ULLONG_MAX
        for C++11 too.
        * libc/include/stdlib.h: Define struct lldiv_t, _Exit, atoll, llabs
        and lldiv for C99 and C++11.  Move wcstold to wchar.h.
        * libc/include/wchar.h: Define WCHAR_MIN and WCHAR_MAX according to
        __WCHAR_UNSIGNED__ if it is provided, and correct the limit when
        unsigned (to 32 all-1 bits, not 31).  Define FILE as in stdio.h.
        Move wcstold from stdlib.h here.
@
text
@d27 1
d38 1
@


1.33
log
@2013-11-26  Julio Gutierrez <jgutleyva@@gmail.com>

	*libc/include/wchar.h: Add restrict keyword.
	*libc/stdio/fgetws.c (fgetws): ditto.
	*libc/stdio/fputws.c (fputws): ditto.
	*libc/stdio/fwprintf.c (fwprintf): ditto.
	*libc/stdio/fwscanf.c (fwscanf): ditto.
	*libc/stdio/swprintf.c (swprintf): ditto.
	*libc/stdio/swscanf.c (swscanf): ditto.
	*libc/stdio/vfwprintf.c (vfwprintf): ditto.
	*libc/stdio/vfwscanf.c (vfwscanf): ditto.
	*libc/stdio/vswprintf.c (vswprintf): ditto.
	*libc/stdio/vswscanf.c (vswscanf): ditto.
	*libc/stdio/vwprintf.c (vwprintf): ditto.
	*libc/stdio/vwscanf.c (vwscanf): ditto.
	*libc/stdio/wprintf.c (wprintf): ditto.
	*libc/stdio/wscanf.c (wscanf): ditto.
	*libc/stdlib/mbrlen.c (mbrlen): ditto.
	*libc/stdlib/mbrtowc.c (mbrtowc): ditto.
	*libc/stdlib/mbsnrtowcs.c (mbsnrtowcs): ditto.
	*libc/stdlib/mbsrtowcs.c (mbsrtowcs): ditto.
	*libc/stdlib/wcrtomb.c (wcrtomb): ditto.
	*libc/stdlib/wcsnrtombs.c (wcsnrtombs): ditto.
	*libc/stdlib/wcsrtombs.c (wcsrtombs): ditto.
	*libc/stdlib/wcstod.c (wcstod): ditto.
	*libc/stdlib/wcstol.c (wcstol): ditto.
	*libc/stdlib/wcstold.c (wcstold): ditto.
	*libc/stdlib/wcstoll.c (wcstoll): ditto.
	*libc/stdlib/wcstoul.c (wcstoul): ditto.
	*libc/stdlib/wcstoull.c (cstoull): ditto.
	*libc/string/wcpcpy.c (wcpcpy): ditto.
	*libc/string/wcpncpy.c (wcpncpy): ditto.
	*libc/string/wcscat.c (wcscat): ditto.
	*libc/string/wcscpy.c (wcscpy): ditto.
	*libc/string/wcsncat.c (wcsncat): ditto.
	*libc/string/wcsncpy.c (wcsncpy): ditto.
	*libc/string/wcsstr.c (wcsstr): ditto.
	*libc/string/wcstok.c (wcstok): ditto.
	*libc/string/wcsxfrm.c (wcsxfrm): ditto.
	*libc/string/wmemcpy.c (wmemcpy): ditto.
@
text
@d28 7
a34 1
#define WCHAR_MIN 0
d40 2
d43 1
a43 1
#define WCHAR_MAX 0x7fffffffu
d49 3
d144 4
@


1.32
log
@2013-11-25  Sahil Patnayakuni <sahil.patnayakuni@@gmail.com>

	* libc/include/time.h (time): Add restrict keyword.
	* libc/include/wchar.h (wcsftime): Add restrict keyword.
	* libc/time/asctime_r.c (asctime_r): Same.
	* libc/time/gmtime_r.c (gmtime_r): Same.
	* libc/time/lcltime_r.c (lcltime_r): Same.
	* libc/time/strftime.c (strftime): Same.
	* libc/time/strptime.c (strptime): Same.
	* libc/sys/linux/linuxthreads/timer_create.c (timer_create): Same.
	* libc/sys/linux/linuxthreads/timer_settime.c (timer_settime): Same.
@
text
@d52 3
a54 2
size_t	_EXFUN(mbrlen, (const char * , size_t, mbstate_t *));
size_t	_EXFUN(mbrtowc, (wchar_t * , const char * , size_t, mbstate_t *));
d58 2
a59 2
size_t	_EXFUN(mbsnrtowcs, (wchar_t * , const char ** , size_t, size_t,
			mbstate_t *));
d62 2
a63 1
size_t	_EXFUN(mbsrtowcs, (wchar_t * , const char ** , size_t, mbstate_t *));
d65 1
a65 1
size_t	_EXFUN(wcrtomb, (char * , wchar_t, mbstate_t *));
d67 2
a68 2
size_t	_EXFUN(wcsnrtombs, (char * , const wchar_t ** , size_t, size_t,
			mbstate_t *));
d71 2
a72 1
size_t	_EXFUN(wcsrtombs, (char * , const wchar_t ** , size_t, mbstate_t *));
d76 1
a76 1
wchar_t	*_EXFUN(wcscat, (wchar_t * , const wchar_t *));
d80 3
a82 2
wchar_t	*_EXFUN(wcscpy, (wchar_t * , const wchar_t *));
wchar_t	*_EXFUN(wcpcpy, (wchar_t * , const wchar_t *));
d87 1
a87 1
               const wchar_t *__restrict, const struct tm *__restrict));
d92 2
a93 1
wchar_t	*_EXFUN(wcsncat, (wchar_t * , const wchar_t * , size_t));
d95 4
a98 2
wchar_t	*_EXFUN(wcsncpy, (wchar_t *  , const wchar_t * , size_t));
wchar_t	*_EXFUN(wcpncpy, (wchar_t *  , const wchar_t * , size_t));
d103 5
a107 3
wchar_t	*_EXFUN(wcsstr, (const wchar_t *, const wchar_t *));
wchar_t	*_EXFUN(wcstok, (wchar_t *, const wchar_t *, wchar_t **));
double _EXFUN(wcstod, (const wchar_t *, wchar_t **));
d109 1
a109 1
float _EXFUN(wcstof, (const wchar_t *, wchar_t **));
d112 2
a113 1
size_t	_EXFUN(wcsxfrm, (wchar_t *, const wchar_t *, size_t));
d117 2
a118 1
wchar_t	*_EXFUN(wmemcpy, (wchar_t * , const wchar_t * , size_t));
d122 7
a128 4
long    _EXFUN(wcstol, (const wchar_t *, wchar_t **, int));
long long _EXFUN(wcstoll, (const wchar_t *, wchar_t **, int));
unsigned long _EXFUN(wcstoul, (const wchar_t *, wchar_t **, int));
unsigned long long _EXFUN(wcstoull, (const wchar_t *, wchar_t **, int));
d135 1
a135 1
wchar_t *_EXFUN(fgetws, (wchar_t *, int, __FILE *));
d137 1
a137 1
int _EXFUN(fputws, (const wchar_t *, __FILE *));
d167 9
a175 6
int	_EXFUN(fwprintf, (__FILE *, const wchar_t *, ...));
int	_EXFUN(swprintf, (wchar_t *, size_t, const wchar_t *, ...));
int	_EXFUN(vfwprintf, (__FILE *, const wchar_t *, __VALIST));
int	_EXFUN(vswprintf, (wchar_t *, size_t, const wchar_t *, __VALIST));
int	_EXFUN(vwprintf, (const wchar_t *, __VALIST));
int	_EXFUN(wprintf, (const wchar_t *, ...));
d184 9
a192 6
int	_EXFUN(fwscanf, (__FILE *, const wchar_t *, ...));
int	_EXFUN(swscanf, (const wchar_t *, const wchar_t *, ...));
int	_EXFUN(vfwscanf, (__FILE *, const wchar_t *, __VALIST));
int	_EXFUN(vswscanf, (const wchar_t *, const wchar_t *, __VALIST));
int	_EXFUN(vwscanf, (const wchar_t *, __VALIST));
int	_EXFUN(wscanf, (const wchar_t *, ...));
@


1.31
log
@
2013-06-26  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/stdio.h: Specify std streams always in terms
        of _REENT.
        * libc/include/wchar.h: Ditto.
        * libc/include/sys/reent.h: Remove _RENT_ONLY check around
        setting of _REENT macro.
@
text
@d82 2
a83 1
size_t  _EXFUN(wcsftime, (wchar_t *, size_t, const wchar_t *, const struct tm *));
@


1.30
log
@	* libc/include/locale.h (NULL): Fetch definition via stddef.h.
	* libc/include/stdio.h (NULL): Ditto.
	* libc/include/stdlib.h (NULL): Ditto.
	* libc/include/string.h (NULL): Ditto.
	* libc/include/wchar.h (NULL): Ditto.
	* libc/include/rpc/types.h (NULL): Ditto.
	* libc/include/time.h (NULL): Ditto.  Include stddef.h earlier.
@
text
@a181 1
#ifndef _REENT_ONLY
a183 4
#else
#define getwchar()	fgetwc(_impure_ptr->_stdin)
#define putwchar(wc)	fputwc((wc), _impure_ptr->_stdout)
#endif
@


1.29
log
@	* libc/include/sys/features.h: Define __STDC_ISO_10646__ for Cygwin.
	* libc/include/wchar.h: Include features.h.
@
text
@d11 1
a22 4
#ifndef NULL
#define NULL	0
#endif

@


1.29.2.1
log
@Pull in chages from HEAD
@
text
@a10 1
#define __need_NULL
d22 4
@


1.28
log
@	* libc/include/wchar.h (struct tm0: Declare as incomplete type.
@
text
@d19 3
@


1.27
log
@	* libc/include/wchar.h (wcsdup, _wcsdup_r): Declare.
	* libc/string/Makefile.am: Add wcsdup.c.
	* libc/string/Makefile.in: Regenerate.
	* libc/string/strings.tex: Add wcsdup documentation reference.
	* libc/string/wcsdup.c: New file.
@
text
@d41 4
@


1.26
log
@	* libc/include/wchar.h (wcscasecmp, wcsncasecmp): Declare.
	* libc/string/Makefile.am: Add wcscasecmp.c, wcsncasecmp.c
	* libc/stdio/Makefile.in: Regenerate.
	* libc/string/strings.tex: Add new documentation references.
	* libc/string/wcscasecmp.c: New file.
	* libc/string/wcsncasecmp.c: New file.
@
text
@d75 2
@


1.25
log
@	* libc/include/wchar.h (fwscanf, swscanf, vfwscanf, vswscanf, vwscanf,
	wscanf): Declare.
	(_fwscanf_r, _swscanf_r, _vfwscanf_r, _vswscanf_r, _vwscanf_r,
	_wscanf_r): Declare.
	* libc/stdio/Makefile.am: Add new wscanf files.
	* libc/stdio/Makefile.in: Regenerate.
	* libc/stdio/fwscanf.c: New file.
	* libc/stdio/local.h (__svfwscanf_r, __ssvfwscanf_r, __svfiwscanf_r,
	__ssvfiwscanf_r): Declare.
	* libc/stdio/stdio.tex: Add new documentation references.
	* libc/stdio/swscanf.c: New file.
	* libc/stdio/vfwscanf.c: New file.
	* libc/stdio/vswscanf.c: New file.
	* libc/stdio/vwscanf.c: New file.
	* libc/stdio/wscanf.c: New file.

	* libc/stdio/vfscanf.c (_sungetc_r): Make externaly available.  Only
	define if INTEGER_ONLY is defined.  Declare otherwise.
	(__ssrefill_r): Ditto.
	(_sfread_r): Ditto.

	Remove static eofread/eofread1 functions and use __seofread
	function instead, throughout.
	* libc/stdio/local.h (__seofread): Declare.
	* libc/stdio/stdio.c (__seofread): Define.

	* libc/stdio/fgetwc.c (__fgetwc): Fix compiler warning.
	* libc/stdio/fgetws.c (_fgetws_r): Ditto.
	* libc/stdio/fread.c (_fread_r): Ditto.
	* libc/stdio/vfprintf.c: Ditto.
	* libc/stdio/vswprintf.c: Ditto.
@
text
@d68 1
d80 1
@


1.24
log
@	* libc/time/strftime.c:  Adapt for dual-purpose use so not only
	defines strftime(), but can also define wcsftime(); add optional
	test package; speed up %Y handling.
	* libc/time/wcsftime.c:  New file, defining wcsftime() (albeit
	indirectly by including strftime.c) and its documentation.
	* libc/time/time.tex:  Enhance tm_isdst explanation, change strftime
	description to match modified description in strftime.c
	* libc/time/Makefile.am:  Add wcsftime.c and wcsftime.def.  Add a rule
	so that wcsftime.o gets rebuilt when strftime changes.
	* libc/time/Makefile.in:  Regenerate.
	* libc/include/wchar.h (wcsftime): Declare.
@
text
@d158 14
@


1.23
log
@	* libc/include/stdio.h (__VALIST): Guard against multiple definition.
	* libc/include/wchar.h: Include stdarg.h.
	(__VALIST): Define conditionally.
	(fwprintf, swprintf, vfwprintf, vswprintf, vwprintf, wprintf: Declare.
	(_fwprintf_r, _swprintf_r, _vfwprintf_r, _vswprintf_r, _vwprintf_r,
	 _wprintf_r): Declare.
	* libc/stdio/Makefile.am: Add new files.
	* libc/stdio/Makefile.in: Regenerate.
	* libc/stdio/fwprintf.c: New file.
	* libc/stdio/local.h (_svfwprintf_r, _svfiwprintf_r): Declare.
	(__CH_CLASS, __STATE, __ACTION): Move definition from vfprintf.c here
	and move to the __ namespace.
	(__chclass, __state_table, __action_table): Declare.
	* libc/stdio/stdio.tex: Add new documentation references.
	* libc/stdio/swprintf.c: New file.
	* libc/stdio/vfprintf.c (__SPRINT): New macro to call the right
	__sprint_r function according to compilation unit.  Use throughout.
	(__ssprint_r): Rename STRING_ONLY variant from __sprint_r.
	Make externaly available.  Only define if INTEGER_ONLY is defined.
	(__sprint_r): Make externaly available.  Only define if INTEGER_ONLY
	is defined.  Handle stream orientation.
	(__sbprintf): Copy FILE's _flags2 member as well.
	(__chclass, __state_table, __action_table): Prepend __ to name and
	make externally available.
	* libc/stdio/vfwprintf.c: New file.
	* libc/stdio/vswprintf.c: New file.
	* libc/stdio/vwprintf.c: New file.
	* libc/stdio/wprintf.c: New file.
@
text
@d75 1
@


1.22
log
@	* libc/include/wchar.h (mbsnrtowcs): Declare.
	(_mbsnrtowcs_r): Declare.
	(wcsnrtombs): Declare.
	(_wcsnrtombs_r): Declare.
	* libc/stdlib/Makefile.am (ELIX_2_SOURCES): Add mbsnrtowcs.c
	and wcsnrtombs.c.
	* libc/stdlib/Makefile.in: Regenerate.
	* libc/stdlib/mbsnrtowcs.c: New file, implementing _mbsnrtowcs_r
	and mbsnrtowcs.  Document mbsnrtowcs and mbsrtowcs.
	* libc/stdlib/mbsrtowcs.c (_mbsrtowcs_r): Just call _mbsnrtowcs_r.
	(mbsrtowcs): Ditto.
	* libc/stdlib/wcsnrtombs.c: New file, implementing _wcsnrtombs_r
	and wcsnrtombs.  Document wcsrtombs and wcsnrtombs.
	* libc/stdlib/wcsrtombs.c (_wcsrtombs_r): Just call _wcsnrtombs_r.
	(wcsrtombs): Ditto.
	* libc/stdlib/stdlib.tex: Accommodate new documentation.
@
text
@d13 3
d135 22
@


1.21
log
@	* libc/stdio/open_memstream.c: Add open_wmemstream to doumentation.
	(struct memstream): Add wide element.
	Change saved to a union to take char and wchar_t values.
	(memwriter): Accommodate wide-oriented oeprations.
	(memseeker): Ditto.
	(memseeker64): Ditto.
	(memcloser): Ditto.
	(internal_open_memstream_r): New static function.  Take functionality
	from former _open_memstream_r and handle additional "wide" parameter.
	(_open_memstream_r): Just call internal_open_memstream_r with wide==-1
	from here.
	(_open_wmemstream_r): New function.
	(open_wmemstream): Ditto.
	* libc/include/wchar.h (open_wmemstream): Declare.
	(_open_wmemstream_r): Declare.
@
text
@d50 4
d58 4
@


1.20
log
@
2009-02-12  Corinna Vinschen  <corinna@@vinschen.de>

        * libc/include/wchar.h (_wcstod_r): Declare.
        (_wcstof_r): Declare.
        (wcstod): Declare.
        (wcstof): Declare.
        * libc/stdlib/Makefile.am (GENERAL_SOURCES): Add wcstod.c.
        (CHEWOUT_FILES): Add wcstod.def.
        * libc/stdlib/Makefile.in: Regenerate.
        * libc/stdlib/stdlib.tex: Add wcstod.
        * libc/stdlib/wcstod.c: New file.
@
text
@d121 3
@


1.19
log
@
2008-12-12  Craig Howland <howland@@LGSInnovations.com>

        * libc/include/wchar.h:  Added wcstok() declaration.
        * libc/string/wcstok.c: New file, implementing wcstok.
        * libc/string/Makefile.am: Add wcstok support.
        * libc/string/wcstrings.tex: Ditto.
        * libc/string/Makefile.in: Regenerated.
@
text
@d77 4
@


1.18
log
@
2008-12-10  Corinna Vinschen  <corinna@@vinschen.de>

        Implement basic wide char stdio functionality, based on FreeBSD.
        * libc/include/stdio.h (__SORD): Define.
        (__SWID): Define.
        * libc/include/wchar.h: Add declarations for new wide char functions.
        (getwc): Define as macro.
        (getwchar): Ditto.
        (putwc): Ditto.
        (putwchar): Ditto.
        * libc/include/sys/reent.h (struct __sFILE): Add _mbstate member.
        (struct __sFILE64): Ditto.
        * libc/stdio/Makefile.am (ELIX_4_SOURCES): Add fgetwc.c, fgetws.c,
        fputwc.c, fputws.c, fwide.c, getwc.c, getwchar.c, putwc.c, putwchar.c
        and ungetwc.c.
        (CHEWOUT_FILES): Add fgetwc.def, fgetws.def, fputwc.def, fputws.def,
        fwide.def, getwc.def, getwchar.def, putwc.def, putwchar.def and
        ungetwc.def.
        Add header dependency rules for the new files.
        * libc/stdio/Makefile.in: Regenerate.
        * libc/stdio/fgetwc.c: New file, implementing fgetwc and _fgetwc_r.
        * libc/stdio/fgetws.c: New file, implementing fgetws and _fgetws_r.
        * libc/stdio/findfp.c (std): Initialize FILE's _mbstate member.
        (__sfmoreglue): Ditto.
        * libc/stdio/fputs.c (_fputs_r): Set stream orientation.
        * libc/stdio/fputwc.c: New file, implementing fputwc and _fputwc_r.
        * libc/stdio/fputws.c: New file, implementing fputws and _fputws_r.
        * libc/stdio/fread.c (_fread_r): Set stream orientation.
        * libc/stdio/freopen.c (_freopen_r): Reset stream orientation.  Reset
        _mbstate.
        * libc/stdio/fseek.c (_fseek_r): Reset _mbstate.
        * libc/stdio/fwide.c: New file, implementing fwide and _fwide_r.
        * libc/stdio/fwrite.c (_fwrite_r): Set stream orientation.
        * libc/stdio/getwc.c: New file, implementing getwc and _getwc_r.
        * libc/stdio/getwchar.c: New file, implementing getwchar and
        _getwchar_r.
        * libc/stdio/local.h (ORIENT): New macro.
        * libc/stdio/puts.c (_puts_r): Set stream orientation.
        * libc/stdio/putwc.c: New file, implementing putwc and _putwc_r.
        * libc/stdio/putwchar.c: New file, implementing putwchar and
        _putwchar_r.
        * libc/stdio/refill.c (__srefill_r): Set stream orientation.
        * libc/stdio/stdio.tex: Add documentation for new functions.
        * libc/stdio/ungetc.c (_ungetc_r): Set stream orientation.
        * libc/stdio/ungetwc.c: New file, implementing ungetwc and _ungetwc_r.
        * libc/stdio/vfscanf.c (__SVFSCANF_R): Set stream orientation.
        * libc/stdio/wbuf.c (__swbuf_r): Ditto.
@
text
@d76 1
@


1.17
log
@
2008-11-27  Craig Howland <howland@@LGSInnovations.com>

        * libc/argz/argz_add.c:  Added #include <argz.h> to get function
        prototypes.
        * libc/argz/argz_append.c: Ditto.
        * libc/argz/argz_count.c: Ditto.
        * libc/argz/argz_create.c: Ditto.
        * libc/argz/argz_create_sep.c: Ditto.
        * libc/argz/argz_delete.c: Ditto.
        * libc/argz/argz_next.c: Ditto.
        * libc/argz/argz_stringify.c: Ditto
        * libc/stdlib/strtod.c: Added #include <stdlib.h> to get function
        prototypes.
        * libc/stdlib/wcstoul.c: Added #include <wchar.h> to get function
        prototypes, corrected traditional usage comment.
        * libc/include/wchar.h: Added _mbsrtowcs_r() prototype.
@
text
@d94 32
@


1.16
log
@	* libc/include/wchar.h: Add prototypes for wcpcpy and wcpncpy.
	* libc/string/Makefile.am (ELIX_SOURCES): Add wcpcpy.c and
	wcpncpy.c.
	(CHEWOUT_FILES): Add wcpcpy.def and wcpncpy.def.
	* libc/string/Makefile.in: Regenerate.
	* libc/string/wcpcpy.c: New file.
	* libc/string/wcpncpy.c: New file.
	* libc/string/wcstrings.tex: Add wcpcpy and wcpncpy.
@
text
@d51 1
@


1.15
log
@
	* libc/include/wchar.h: Declare wcstol, wcstoll, wcstoul,
	wcstoull, _wcstol_r, _wcstoll_r, _wcstoul_r and _wcstoull_r.
	* libc/stdlib/Makefile.am (GENERAL_SOURCES): Add wcstol.c and wcstoul.c.
	(EXTENDED_SOURCES): Add wcstoll.c, wcstoll_r.c, wcstoull.c and
	wcstoull_r.c.
	(CHEWOUT_FILES): Add .def files accordingly.
	* libc/stdlib/Makefile.in: Regenerate.
	* libc/stdlib/stdlib.tex: Add documentation links for above functions.
	* libc/stdlib/strtoll.c: Fix portability note.
	* libc/stdlib/strtoull.c: Ditto.
	* libc/stdlib/wcstol.c: New file.
	* libc/stdlib/wcstoll.c: New file.
	* libc/stdlib/wcstoll_r.c: New file.
	* libc/stdlib/wcstoul.c: New file.
	* libc/stdlib/wcstoull.c: New file.
	* libc/stdlib/wcstoull_r.c: New file.
@
text
@d61 1
d69 1
@


1.14
log
@
	* libc/include/wchar.h: Add prototype for wcsxfrm.
	* libc/string/Makefile.am (GENERAL_SOURCES): Add wcsxfrm.c.
	(CHEWOUT_FILES): Add wcsxfrm.def.
	* libc/string/Makefile.in: Regenerate.
	* libc/string/wcsxfrm.c: New file.
	* libc/string/wcstrings.tex: Add wcsxfrm.
@
text
@d82 9
@


1.13
log
@
2003-12-05  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/wchar.h: Include <sys/reent.h>.
@
text
@d74 1
@


1.12
log
@
2003-12-04  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/wchar.h: Add prototypes for _mbrtowc_r,
        _wcrtomb_r, and _wcsrtombs_r.
@
text
@d6 2
@


1.11
log
@
2003-10-23  Artem B. Bityuckiy  <mail_lists@@mail.ru>

        * libc/string/wcsnlen.c: New file.
        * libc/include/wchar.h: Add wcsnlen prototype.
        * libc/string/Makefile.am: Add wcsnlen support.
        * libc/string/Makefile.in: Regenerated.
        * libc/string/wcstrings.tex: Add wcsnlen documentation.
@
text
@d45 2
d50 1
d52 2
@


1.10
log
@	* libc/include/wchar.h: Add definitions for wcswidth and wcwidth.
	* libc/string/Makefile.am: Add wcswidth.c and wcwidth.c
	* libc/string/Makefile.in: Regenerated.
	* libc/string/wcswidth.c: New file.
	* libc/string/wcwidth.c: New file.
	* libc/string/wcstrings.tex: Add wcswidth and wcwidth.
@
text
@d61 1
@


1.9
log
@	* libc/include/wchar.h: Add definition for wcscoll.
	* libc/string/Makefile.am: Add wcscoll.c.
	* libc/string/Makefile.in: Regenerated.
	* libc/string/wcscoll.c: New file.
	* libc/string/wcstrings.tex: Add wcscoll.
@
text
@d65 2
@


1.8
log
@
2002-11-06  Kazuhiro Fujieda  <fujieda@@jaist.ac.jp>

        * libc/include/wchar.h: Use _{BEGIN,END}_STD_C instead of extern "C".
        * libc/include/wctype.h: Ditto.
@
text
@d52 1
@


1.7
log
@
2002-11-04  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/wchar.h: Add extern "C" specifier if C++.
        * libc/include/wctype.h: Ditto.
@
text
@d34 1
a34 3
#ifdef __cplusplus
extern "C" {
#endif
d70 1
a70 3
#ifdef __cplusplus
}
#endif
@


1.6
log
@
2002-09-16  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/wchar.h (mbstate_t): Change protective flag to
        be _MBSTATE_T.
        * libc/include/sys/_types.h (_mbstate_t): Remove protective flag.
        [__CYGWIN__]: Remove special code that defines mbstate_t and WEOF
        for Cygwin.
        * libc/sys/linux/sys/_types.h (_mbstate_t): Remove protective flag.
@
text
@d34 4
d71 4
@


1.5
log
@
2002-09-05  Kazuhiro Fujieda  <fujieda@@jaist.ac.jp>

        * libc/include/wchar.h (WCHAR_MAX): Only define if not already
        defined.
@
text
@d34 2
a35 2
#ifndef MBSTATE_T
#define MBSTATE_T
d37 1
a37 1
#endif /* MBSTATE_T */
@


1.4
log
@
2002-09-04  Kazuhiro Fujieda  <fujieda@@jaist.ac.jp>

        * libc/include/sys/config.h: Define accordingly __WCHAR_MAX__.
        * libc/include/wchar.h: Define WCHAR_MIN as 0 and WCHAR_MAX as
        __WCHAR_MAX__ or 0x7fffffffu.
        * libc/string/wcscmp.c: Delete wrong and unnecessary type cast.
        * libc/string/wcsncmp.c: Ditto.
@
text
@d26 1
d31 1
@


1.3
log
@
2002-08-29  Kazuhiro Fujieda  <fujieda@@jaist.ac.jp>

        * libc/include/wchar.h: Define NULL. Define WEOF more general
        way. Declare functions in newlib manner.
        * libc/stdlib/Makefile.am: Delete wmem*.c
        * libc/stdlib/Makefile.in: Regenerated.
        * libc/stdlib/wmemchr.c: Delete.
        * libc/stdlib/wmemcmp.c: Ditto.
        * libc/stdlib/wmemcpy.c: Ditto.
        * libc/stdlib/wmemmove.c: Ditto.
        * libc/stdlib/wmemset.c: Ditto.
        * libc/string/Makefile.am: Add wmem*.c and wcs*.c.
        * libc/string/Makefile.in: Regenerated.
        * libc/string/wcscat.c: New file derived from the NetBSD C Library.
        * libc/string/wcschr.c: Ditto.
        * libc/string/wcscmp.c: Ditto.
        * libc/string/wcscpy.c: Ditto.
        * libc/string/wcscspn.c: Ditto.
        * libc/string/wcslcat.c: Ditto.
        * libc/string/wcslcpy.c: Ditto.
        * libc/string/wcslen.c: Ditto.
        * libc/string/wcsncat.c: Ditto.
        * libc/string/wcsncmp.c: Ditto.
        * libc/string/wcsncpy.c: Ditto.
        * libc/string/wcspbrk.c: Ditto.
        * libc/string/wcsrchr.c: Ditto.
        * libc/string/wcsspn.c: Ditto.
        * libc/string/wcsstr.c: Ditto.
        * libc/string/wmemchr.c: Ditto.
        * libc/string/wmemcmp.c: Ditto.
        * libc/string/wmemcpy.c: Ditto.
        * libc/string/wmemmove.c: Ditto.
        * libc/string/wmemset.c: Ditto.
@
text
@d22 10
@


1.2
log
@
2002-08-27  Egor Duda  <deo@@logos-m.ru>

        * libc/stdlib/wmemchr.c: New file.
        * libc/stdlib/wmemcmp.c: Ditto.
        * libc/stdlib/wmemcpy.c: Ditto.
        * libc/stdlib/wmemmove.c: Ditto.
        * libc/stdlib/wmemset.c: Ditto.
        * libc/stdlib/Makefile.am (GENERAL_SOURCES): Add new files.
        * configure.host: Default -DMB_CAPABLE for cygwin.
        * libc/include/wchar.h: Declare wmemchr(), wmemcmp(), wmemcpy(),
        wmemmove() and wmemset().  Add include of <_ansi.h>.
        * libc/stdlib/Makefile.in: Regenerate.
@
text
@d14 4
d19 1
a19 1
# define WEOF (0xffffffffu)
d27 28
a54 13
wint_t btowc (int c);
int wctob (wint_t c);
int mbsinit(const mbstate_t *ps);
size_t mbrlen(const char *s, size_t n, mbstate_t *ps);
size_t mbrtowc(wchar_t *pwc, const char *s, size_t n, mbstate_t *ps);
size_t wcrtomb(char *s, wchar_t wc, mbstate_t *ps);
size_t mbsrtowcs(wchar_t *dst, const char **src, size_t len, mbstate_t *ps);
size_t wcsrtombs(char *dst, const wchar_t **src, size_t len, mbstate_t *ps);
wchar_t *wmemchr(const wchar_t *ws, wchar_t wc, size_t n);
int wmemcmp(const wchar_t *ws1, const wchar_t *ws2, size_t n);
wchar_t *wmemcpy(wchar_t *ws1, const wchar_t *ws2, size_t n);
wchar_t *wmemmove(wchar_t *ws1, const wchar_t *ws2, size_t n);
wchar_t *wmemset(wchar_t *ws, wchar_t wc, size_t n);
@


1.1
log
@	* libc/include/langinfo.h: New file.
	* libc/include/wchar.h: Likewise.
	* libc/include/sys/syslimits.h: Likewise.
	* libc/locale/fix_grouping.c: Likewise.
	* libc/locale/ldpart.c: Likewise.
	* libc/locale/ldpart.h: Likewise.
	* libc/locale/lmessages.c: Likewise.
	* libc/locale/lmessages.h: Likewise.
	* libc/locale/lmonetary.c: Likewise.
	* libc/locale/lmonetary.h: Likewise.
	* libc/locale/lnumeric.c: Likewise.
	* libc/locale/lnumeric.h: Likewise.
	* libc/locale/nl_langinfo.3: Likewise.
	* libc/locale/nl_langinfo.c: Likewise.
	* libc/locale/timelocal.c: Likewise.
	* libc/locale/timelocal.h: Likewise.
	* libc/stdlib/btowc.c: Likewise.
	* libc/stdlib/mbrlen.c: Likewise.
	* libc/stdlib/mbrtowc.c: Likewise.
	* libc/stdlib/mbsinit.c: Likewise.
	* libc/stdlib/mbsrtowcs.c: Likewise.
	* libc/stdlib/wcrtomb.c: Likewise.
	* libc/stdlib/wcsrtombs.c: Likewise.
	* libc/stdlib/wctob.c: Likewise.
	* libc/sys/linux/prof-freq.c: Likewise.
	* libc/sys/linux/profile.c: Likewise.
	* libc/sys/linux/machine/i386/dl-procinfo.c: Likewise.
	* libc/sys/linux/machine/i386/dl-procinfo.h: Likewise.
	* libc/include/stdlib.h: Change re-entrant functions to take
	mbstate_t pointers.
	* libc/include/sys/_types.h: Define _mbstate_t.
	* libc/include/sys/config.h (MB_LEN_MAX): New macro.
	* libc/include/sys/errno.h (EILSEQ): New error code.
	* libc/include/sys/reent.h: Include wchar.h.  Change reentrant
	structure to use mbstate_t.
	* libc/locale/Makefile.am (LIB_SOURCES): Add new files.
	* libc/machine/powerpc/vfprintf.c: Use mbstate_t.
	* libc/machine/powerpc/vfscanf.c: Likewise.
	* libc/stdio/getdelim.c: Reallocate buffer only when necessary.
	* libc/stdio/vfprintf.c: Likewise.
	* libc/stdio/vfscanf.c: Likewise.
	* libc/stdlib/Makefile.am (LIB_SOURCES): Add new files.
	* libc/stdlib/mblen.c: Use mbstate_t.
	* libc/stdlib/mblen_r.c: Likewise.
	* libc/stdlib/mbstowcs.c: Likewise.
	* libc/stdlib/mbstowcs_r.c: Likewise.
	* libc/stdlib/mbtowc.c: Likewise.
	* libc/stdlib/mbtowc_r.c: Likewise.
	* libc/stdlib/wcstombs.c: Likewise.
	* libc/stdlib/wcstombs_r.c: Likewise.
	* libc/stdlib/wctomb_r.c: Likewise.
	* libc/sys/linux/Makefile.am (LIB_SOURCES): Add prof-freq.c and
	profile.c.
	* libc/sys/linux/machine/i386/Makefile.am (LIB_SOURCES): Add
	dl-procinfo.c.
	* libc/sys/linux/sys/errno.h (EILSEQ): New error code.
	* libc/sys/linux/sys/types.h (off_t): Define type.
	* testsuite/newlib.locale/UTF-8.c: Change locale name from UTF-8
	to C-UTF-8.
	* testsuite/newlib.locale/UTF-8.exp: Likewise.
@
text
@d4 2
d31 5
@

