head	1.8;
access;
symbols
	cygwin-1_7_35-release:1.8
	cygwin-1_7_34-release:1.8
	newlib-2_2_0:1.8.0.6
	cygwin-1_7_33-release:1.8
	cygwin-1_7_32-release:1.8
	cygwin-1_7_31-release:1.8
	cygwin-1_7_30-release:1.8
	cygwin-1_7_29-release:1.8
	cygwin-1_7_28-release:1.8
	newlib-2_1_0:1.8
	cygwin-1_7_27-release:1.8
	cygwin-1_7_26-release:1.8
	cygwin-1_7_25-release:1.8
	cygwin-1_7_24-release:1.8
	cygwin-1_7_23-release:1.8
	cygwin-1_7_22-release:1.8
	cygwin-1_7_21-release:1.8
	cygwin-1_7_20-release:1.8
	cygwin-1_7_19-release:1.8
	cygwin-64bit-postmerge:1.8
	cygwin-64bit-premerge-branch:1.8.0.4
	cygwin-64bit-premerge:1.8
	cygwin-1_7_18-release:1.8
	newlib-2_0_0:1.8
	cygwin-1_7_17-release:1.8
	cygwin-64bit-branch:1.8.0.2
	cygwin-1_7_16-release:1.8
	cygwin-1_7_15-release:1.8
	cygwin-1_7_14_2-release:1.8
	cygwin-1_7_14-release:1.8
	cygwin-1_7_12-release:1.8
	cygwin-1_7_11-release:1.8
	cygwin-1_7_10-release:1.8
	newlib-1_20_0:1.8
	cygwin-1_7_9-release:1.8
	cygwin-1_7_8-release:1.8
	newlib-1_19_0:1.8
	cygwin-1_7_7-release:1.8
	cygwin-1_7_5-release:1.8
	cygwin-1_7_4-release:1.8
	cygwin-1_7_3-release:1.8
	cygwin-1_7_2-release:1.8
	newlib-1_18_0:1.7
	cygwin-1_7_1-release:1.7
	newlib-1_17_0-arc:1.7.0.2
	binutils-arc-20080908-branch:1.5.0.8
	binutils-arc-20080908-branchpoint:1.5
	newlib-1_17_0:1.7
	newlib-1_16_0:1.5
	newlib-1_15_0:1.5
	newlib-csl-coldfire-4_1-32:1.5
	newlib-csl-sourcerygxx-4_1-32:1.5
	newlib-csl-innovasic-fido-3_4_4-33:1.5
	newlib-csl-coldfire-4_1-30:1.5
	newlib-csl-sourcerygxx-4_1-30:1.5
	newlib-csl-coldfire-4_1-28:1.5
	newlib-csl-sourcerygxx-4_1-28:1.5
	newlib-csl-arm-2006q3-27:1.5
	newlib-csl-sourcerygxx-4_1-27:1.5
	newlib-csl-arm-2006q3-26:1.5
	newlib-csl-sourcerygxx-4_1-26:1.5
	newlib-csl-sourcerygxx-4_1-24:1.5
	newlib-csl-sourcerygxx-4_1-23:1.5
	newlib-csl-sourcerygxx-4_1-21:1.5
	newlib-csl-arm-2006q3-21:1.5
	newlib-csl-arm-2006q3-19:1.5
	newlib-csl-sourcerygxx-4_1-19:1.5
	newlib-csl-sourcerygxx-4_1-18:1.5
	newlib-csl-sourcerygxx-3_4_4-25:1.5
	newlib-csl-sourcerygxx-4_1-17:1.5
	cr-0x5f1:1.5.0.6
	newlib-csl-sourcerygxx-4_1-14:1.5
	newlib-csl-sourcerygxx-4_1-13:1.5
	newlib-csl-sourcerygxx-4_1-12:1.5
	newlib-csl-sourcerygxx-4_1-9:1.5
	newlib-csl-sourcerygxx-4_1-8:1.5
	newlib-csl-sourcerygxx-4_1-7:1.5
	newlib-csl-arm-2006q1-6:1.5
	newlib-csl-sourcerygxx-4_1-6:1.5
	newlib-csl-sourcerygxx-4_1-5:1.5
	newlib-csl-sourcerygxx-4_1-4:1.5
	newlib-autotools-branch:1.5.0.4
	newlib-csl-20060320-branch:1.5.0.2
	newlib-csl-20060320-branchpoint:1.5
	newlib-1_14_0:1.5
	newlib-csl-arm-2005-q1b:1.5
	newlib-csl-arm-2005-q1a:1.5
	newlib-1_13_0:1.5
	csl-arm-2004-q3:1.5
	csl-arm-2004-q1a:1.5
	csl-arm-2004-q1:1.5
	newlib-1_12_0:1.5
	csl-arm-2003-q4:1.5
	w32api-2_2:1.5
	mingw-runtime-2_4:1.5
	newlib-1_11_0:1.5
	cygnus_cvs_20020108_pre:1.3
	newlib-1_10_0:1.3
	newlib-1_9_0:1.2
	newlib-2000-02-17:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.8
date	2010.03.05.08.55.15;	author corinna;	state Exp;
branches;
next	1.7;

1.7
date	2008.09.26.16.23.58;	author jjohnstn;	state Exp;
branches;
next	1.6;

1.6
date	2008.09.25.01.23.08;	author jjohnstn;	state Exp;
branches;
next	1.5;

1.5
date	2002.04.30.18.23.38;	author fitzsim;	state Exp;
branches;
next	1.4;

1.4
date	2002.04.01.22.29.40;	author jjohnstn;	state Exp;
branches;
next	1.3;

1.3
date	2001.02.22.22.12.40;	author jjohnstn;	state Exp;
branches;
next	1.2;

1.2
date	2000.11.22.18.26.10;	author meissner;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.39.47;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.17.19.39.47;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.8
log
@	* libm/math/ef_sqrt.c: Delete unused variable sign.
	* libc/stdlib/getenv.c: Delete "char *_findenv_r ();", as is not a
	proper prototype, and is properly prototyped in stdlib.h, anyway.
	* libc/stdlib/getenv_r.c: Ditto.
	* libc/search/hash.c: Add _DEFUN to __hash_open() declaration; add
	#define __DBINTERFACE_PRIVATE to activate prototypes from db_local.h.
	* libc/search/db_local.h: Correct __hash_open() prototype.
	* libc/sys/linux/cmath/math_private.h:  Eliminate compiler warnings:
	Remove #define INFINITY (redefines from math.h); remove #define __isnanf
	and #define __isinff isinff.
@
text
@/*
FUNCTION
<<_getenv_r>>---look up environment variable

INDEX
	_getenv_r
INDEX
	environ

ANSI_SYNOPSIS
	#include <stdlib.h>
	char *_getenv_r(struct _reent *<[reent_ptr]>, const char *<[name]>);

TRAD_SYNOPSIS
	#include <stdlib.h>
	char *_getenv_r(<[reent_ptr]>, <[name]>)
	struct _reent *<[reent_ptr]>;
	char *<[name]>;

DESCRIPTION
<<_getenv_r>> searches the list of environment variable names and values
(using the global pointer ``<<char **environ>>'') for a variable whose
name matches the string at <[name]>.  If a variable name matches,
<<_getenv_r>> returns a pointer to the associated value.

RETURNS
A pointer to the (string) value of the environment variable, or
<<NULL>> if there is no such environment variable.

PORTABILITY
<<_getenv_r>> is not ANSI; the rules for properly forming names of environment
variables vary from one system to another.  This implementation does not
permit '=' to be in identifiers.

<<_getenv_r>> requires a global pointer <<environ>>.
*/

/* This file may have been modified by DJ Delorie (Jan 1991).  If so,
** these modifications are Copyright (C) 1991 DJ Delorie.
*/

/*
 * Copyright (c) 1987 Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms are permitted
 * provided that: (1) source distributions retain this entire copyright
 * notice and comment, and (2) distributions including binaries display
 * the following acknowledgement:  ``This product includes software
 * developed by the University of California, Berkeley and its contributors''
 * in the documentation or other materials provided with the distribution
 * and in all advertising materials mentioning features or use of this
 * software. Neither the name of the University nor the names of its
 * contributors may be used to endorse or promote products derived
 * from this software without specific prior written permission.
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include <stdlib.h>
#include <stddef.h>
#include <string.h>
#include "envlock.h"

extern char **environ;

/* Only deal with a pointer to environ, to work around subtle bugs with shared
   libraries and/or small data systems where the user declares his own
   'environ'.  */
static char ***p_environ = &environ;

/*
 * _findenv --
 *	Returns pointer to value associated with name, if any, else NULL.
 *	Sets offset to be the offset of the name/value combination in the
 *	environmental array, for use by setenv(3) and unsetenv(3).
 *
 *	This routine *should* be a static; don't use it.
 */

char *
_DEFUN (_findenv_r, (reent_ptr, name, offset),
        struct _reent *reent_ptr   _AND
	register _CONST char *name _AND
	int *offset)
{
  register int len;
  register char **p;
  _CONST char *c;

  ENV_LOCK;

  /* In some embedded systems, this does not get set.  This protects
     newlib from dereferencing a bad pointer.  */
  if (!*p_environ)
    {
      ENV_UNLOCK;
      return NULL;
    }

  c = name;
  while (*c && *c != '=')  c++;
 
  /* Identifiers may not contain an '=', so cannot match if does */
  if(*c != '=')
    {
    len = c - name;
    for (p = *p_environ; *p; ++p)
      if (!strncmp (*p, name, len))
        if (*(c = *p + len) == '=')
	{
	  *offset = p - *p_environ;
	  ENV_UNLOCK;
	  return (char *) (++c);
	}
    }
  ENV_UNLOCK;
  return NULL;
}

/*
 * _getenv_r --
 *	Returns ptr to value associated with name, if any, else NULL.
 */

char *
_DEFUN (_getenv_r, (reent_ptr, name),
        struct _reent *reent_ptr _AND
	_CONST char *name)
{
  int offset;

  return _findenv_r (reent_ptr, name, &offset);
}
@


1.7
log
@
2008-09-26  Craig Howland  <howland@@LGSInnovations.com>

        * libc/stdlib/getenv_r.c (_getenv_r): Modify to not match if name
        contains an equal sign.
@
text
@a132 1
  char *_findenv_r ();
@


1.6
log
@
2008-09-24  Pawel Veselov  <pawel.veselov@@gmail.com>

        Fix setenv/getenv/unsetenv to be OpenGroup compliant:
        * libc/include/stdlib.h (unsetenv, _unsetenv_r): Redefine with integer
        return types.
        * libc/stdlib/getenv_r.c (_findenv_r): Do no special processing with
        names that contain equal chars.
        * libc/stdlib/setenv.c: Redefine _unsetenv_r as returning int.
        * libc/stdlib/setenv_r.c (_setenv_r): Return -1 and set errno to
        EINVAL if name contains an equal sign.  Do not remove any equal signs
        from the value.
        (_unsetenv_r): Modified to return int.  Return -1 and set EINVAL
        if name contains equal sign.  Return -1 if no variable(s) were found
        and return 0 otherwise.
@
text
@d32 2
a33 1
variables vary from one system to another.
d102 10
a111 6
  len = strlen(name);
  c = name + len;

  for (p = *p_environ; *p; ++p)
    if (!strncmp (*p, name, len))
      if (*(c = *p + len) == '=')
d114 1
a114 1
          ENV_UNLOCK;
d117 1
@


1.5
log
@	* Various formatting and whitespace changes.
@
text
@a76 1
 *	Explicitly removes '=' in argument name.
d101 2
a102 7
  c = name;
  len = 0;
  while (*c && *c != '=')
    {
      c++;
      len++;
    }
@


1.4
log
@
2002-04-01  Till Straumann <strauman@@SLAC.Stanford.EDU>

        * libc/stdlib/getenv_r.c (_findenv_r): Add missing ENV_UNLOCK.
@
text
@d38 1
a38 1
** these modifications are Copyright (C) 1991 DJ Delorie
@


1.3
log
@
2001-02-22  Jeff Johnston  <jjohnstn@@redhat.com>

        * libc/include/machine/setjmp-dj.h: With DJ Delorie's permission,
        changed the copyright information to allow free modification of the
        file with no reference to "copying.dj".
        * libc/include/sys/stat-dj.h: Ditto.
        * libc/machine/i386/setjmp.S: Ditto.
        * libc/sys/h8300hms/sys/file.h: Ditto.
        * libc/sys/sysmec/access.c: Ditto.
        * libc/sys/sysnecv850/access.c: Ditto.
        * libc/stdio/mktemp.c: Fixed typo for the word copyright.
        * libc/stdlib/getenv_r.c: Ditto.
        * libc/stdlib/putenv_r.c: Ditto.
        * libc/stdlib/setenv_r.c: Ditto.
        * libc/stdlib/getenv.c: Removed DJ reference since any possible
        modifications will now be in the _r version of this file.
        * libc/stdlib/putenv.c: Ditto.
        * libc/stdlib/setenv.c: Ditto.
        * libc/sys/go32/copying.dj: Removed DJ's address which is no longer
        valid.  Added a reference to DJ's web page that contains his address.
        * libc/sys/go32/*.s: Removed references to DJ's old address.
        * libc/sys/go32/*.c: Ditto.
        * libc/sys/go32/*.h: Ditto.
        * libc/sys/go32/*.S: Ditto.
        * libc/sys/go32/sys/*.h: Ditto.
@
text
@d97 4
a100 1
    return NULL;
@


1.2
log
@Only reference environ indirectly through a pointer
@
text
@d38 1
a38 2
** these modifications are Coyright (C) 1991 DJ Delorie, 24 Kirsten Ave,
** Rochester NH, 03867-2954, USA.
@


1.1
log
@Initial revision
@
text
@d22 1
a22 1
(using the global pointer `<<char **environ>>') for a variable whose
d68 5
d97 1
a97 1
  if (!environ)
d108 1
a108 1
  for (p = environ; *p; ++p)
d112 1
a112 1
	  *offset = p - environ;
@


1.1.1.1
log
@import newlib-2000-02-17 snapshot
@
text
@@
