head	1.10;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.10
	gdb_7_6-2013-04-26-release:1.10
	gdb_7_6-branch:1.10.0.2
	gdb_7_6-2013-03-12-branchpoint:1.10
	gdb_7_5_1-2012-11-29-release:1.8
	gdb_7_5-2012-08-17-release:1.8
	gdb_7_5-branch:1.8.0.2
	gdb_7_5-2012-07-18-branchpoint:1.8
	gdb_7_4_1-2012-04-26-release:1.7.8.1
	gdb_7_4-2012-01-24-release:1.7.8.1
	gdb_7_4-branch:1.7.0.8
	gdb_7_4-2011-12-13-branchpoint:1.7
	gdb_7_3_1-2011-09-04-release:1.7
	gdb_7_3-2011-07-26-release:1.7
	gdb_7_3-branch:1.7.0.6
	gdb_7_3-2011-04-01-branchpoint:1.7
	gdb_7_2-2010-09-02-release:1.7
	gdb_7_2-branch:1.7.0.4
	gdb_7_2-2010-07-07-branchpoint:1.7
	gdb_7_1-2010-03-18-release:1.7
	gdb_7_1-branch:1.7.0.2
	gdb_7_1-2010-02-18-branchpoint:1.7
	gdb_7_0_1-2009-12-22-release:1.5
	gdb_7_0-2009-10-06-release:1.5
	gdb_7_0-branch:1.5.0.20
	gdb_7_0-2009-09-16-branchpoint:1.5
	arc-sim-20090309:1.5
	msnyder-checkpoint-072509-branch:1.5.0.18
	msnyder-checkpoint-072509-branchpoint:1.5
	arc-insight_6_8-branch:1.5.0.16
	arc-insight_6_8-branchpoint:1.5
	insight_6_8-branch:1.5.0.14
	insight_6_8-branchpoint:1.5
	reverse-20081226-branch:1.5.0.12
	reverse-20081226-branchpoint:1.5
	multiprocess-20081120-branch:1.5.0.10
	multiprocess-20081120-branchpoint:1.5
	reverse-20080930-branch:1.5.0.8
	reverse-20080930-branchpoint:1.5
	reverse-20080717-branch:1.5.0.6
	reverse-20080717-branchpoint:1.5
	msnyder-reverse-20080609-branch:1.5.0.4
	msnyder-reverse-20080609-branchpoint:1.5
	drow-reverse-20070409-branch:1.3.0.20
	drow-reverse-20070409-branchpoint:1.3
	gdb_6_8-2008-03-27-release:1.5
	gdb_6_8-branch:1.5.0.2
	gdb_6_8-2008-02-26-branchpoint:1.5
	gdb_6_7_1-2007-10-29-release:1.4
	gdb_6_7-2007-10-10-release:1.4
	gdb_6_7-branch:1.4.0.2
	gdb_6_7-2007-09-07-branchpoint:1.4
	insight_6_6-20070208-release:1.3
	gdb_6_6-2006-12-18-release:1.3
	gdb_6_6-branch:1.3.0.18
	gdb_6_6-2006-11-15-branchpoint:1.3
	insight_6_5-20061003-release:1.3
	gdb-csl-symbian-6_4_50_20060226-12:1.3
	gdb-csl-sourcerygxx-3_4_4-25:1.2
	nickrob-async-20060828-mergepoint:1.3
	gdb-csl-symbian-6_4_50_20060226-11:1.3
	gdb-csl-sourcerygxx-4_1-17:1.3
	gdb-csl-20060226-branch-local-2:1.3
	gdb-csl-sourcerygxx-4_1-14:1.3
	gdb-csl-sourcerygxx-4_1-13:1.3
	gdb-csl-sourcerygxx-4_1-12:1.3
	gdb-csl-sourcerygxx-3_4_4-21:1.3
	gdb_6_5-20060621-release:1.3
	gdb-csl-sourcerygxx-4_1-9:1.3
	gdb-csl-sourcerygxx-4_1-8:1.3
	gdb-csl-sourcerygxx-4_1-7:1.3
	gdb-csl-arm-2006q1-6:1.3
	gdb-csl-sourcerygxx-4_1-6:1.3
	gdb-csl-symbian-6_4_50_20060226-10:1.3
	gdb-csl-symbian-6_4_50_20060226-9:1.3
	gdb-csl-symbian-6_4_50_20060226-8:1.3
	gdb-csl-coldfire-4_1-11:1.3
	gdb-csl-sourcerygxx-3_4_4-19:1.3
	gdb-csl-coldfire-4_1-10:1.3
	gdb_6_5-branch:1.3.0.16
	gdb_6_5-2006-05-14-branchpoint:1.3
	gdb-csl-sourcerygxx-4_1-5:1.3
	nickrob-async-20060513-branch:1.3.0.14
	nickrob-async-20060513-branchpoint:1.3
	gdb-csl-sourcerygxx-4_1-4:1.3
	msnyder-reverse-20060502-branch:1.3.0.12
	msnyder-reverse-20060502-branchpoint:1.3
	gdb-csl-morpho-4_1-4:1.3
	gdb-csl-sourcerygxx-3_4_4-17:1.3
	readline_5_1-import-branch:1.3.0.10
	readline_5_1-import-branchpoint:1.3
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.3
	gdb-csl-symbian-20060226-branch:1.3.0.8
	gdb-csl-symbian-20060226-branchpoint:1.3
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.3
	msnyder-reverse-20060331-branch:1.3.0.6
	msnyder-reverse-20060331-branchpoint:1.3
	gdb-csl-available-20060303-branch:1.3.0.4
	gdb-csl-available-20060303-branchpoint:1.3
	gdb-csl-20060226-branch:1.3.0.2
	gdb-csl-20060226-branchpoint:1.3
	gdb_6_4-20051202-release:1.2
	msnyder-fork-checkpoint-branch:1.2.0.12
	msnyder-fork-checkpoint-branchpoint:1.2
	gdb-csl-gxxpro-6_3-branch:1.2.0.10
	gdb-csl-gxxpro-6_3-branchpoint:1.2
	gdb_6_4-branch:1.2.0.8
	gdb_6_4-2005-11-01-branchpoint:1.2
	gdb-csl-arm-20051020-branch:1.2.0.6
	gdb-csl-arm-20051020-branchpoint:1.2
	msnyder-tracepoint-checkpoint-branch:1.2.0.4
	msnyder-tracepoint-checkpoint-branchpoint:1.2
	gdb-csl-arm-20050325-2005-q1b:1.2
	gdb-csl-arm-20050325-2005-q1a:1.2
	csl-arm-20050325-branch:1.2.0.2
	csl-arm-20050325-branchpoint:1.2;
locks; strict;
comment	@ * @;


1.10
date	2013.01.01.06.41.34;	author brobecke;	state Exp;
branches;
next	1.9;

1.9
date	2012.12.19.07.18.15;	author brobecke;	state Exp;
branches;
next	1.8;

1.8
date	2012.01.04.08.28.07;	author brobecke;	state Exp;
branches;
next	1.7;

1.7
date	2010.01.02.19.09.18;	author devans;	state Exp;
branches
	1.7.8.1;
next	1.6;

1.6
date	2009.10.24.04.33.41;	author devans;	state Exp;
branches;
next	1.5;

1.5
date	2007.10.22.16.06.38;	author hp;	state Exp;
branches;
next	1.4;

1.4
date	2007.08.24.14.28.35;	author brobecke;	state Exp;
branches;
next	1.3;

1.3
date	2005.12.05.03.11.47;	author hp;	state Exp;
branches;
next	1.2;

1.2
date	2005.03.24.06.12.42;	author hp;	state Exp;
branches;
next	1.1;

1.1
date	2005.01.28.04.28.59;	author hp;	state Exp;
branches;
next	;

1.7.8.1
date	2012.01.06.04.54.41;	author brobecke;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Update years in copyright notice for the GDB files.

Two modifications:
  1. The addition of 2013 to the copyright year range for every file;
  2. The use of a single year range, instead of potentially multiple
     year ranges, as approved by the FSF.
@
text
@/* Misc. support for CPU family crisv32f.

THIS FILE IS MACHINE GENERATED WITH CGEN.

Copyright 1996-2013 Free Software Foundation, Inc.

This file is part of the GNU simulators.

   This file is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3, or (at your option)
   any later version.

   It is distributed in the hope that it will be useful, but WITHOUT
   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
   License for more details.

   You should have received a copy of the GNU General Public License along
   with this program; if not, see <http://www.gnu.org/licenses/>.

*/

#define WANT_CPU crisv32f
#define WANT_CPU_CRISV32F

#include "sim-main.h"
#include "cgen-ops.h"

/* Get the value of h-v32-v32.  */

BI
crisv32f_h_v32_v32_get (SIM_CPU *current_cpu)
{
  return GET_H_V32_V32 ();
}

/* Set a value for h-v32-v32.  */

void
crisv32f_h_v32_v32_set (SIM_CPU *current_cpu, BI newval)
{
  SET_H_V32_V32 (newval);
}

/* Get the value of h-pc.  */

USI
crisv32f_h_pc_get (SIM_CPU *current_cpu)
{
  return CPU (h_pc);
}

/* Set a value for h-pc.  */

void
crisv32f_h_pc_set (SIM_CPU *current_cpu, USI newval)
{
  SET_H_PC (newval);
}

/* Get the value of h-gr.  */

SI
crisv32f_h_gr_get (SIM_CPU *current_cpu, UINT regno)
{
  return GET_H_GR (regno);
}

/* Set a value for h-gr.  */

void
crisv32f_h_gr_set (SIM_CPU *current_cpu, UINT regno, SI newval)
{
  SET_H_GR (regno, newval);
}

/* Get the value of h-gr-acr.  */

SI
crisv32f_h_gr_acr_get (SIM_CPU *current_cpu, UINT regno)
{
  return CPU (h_gr_acr[regno]);
}

/* Set a value for h-gr-acr.  */

void
crisv32f_h_gr_acr_set (SIM_CPU *current_cpu, UINT regno, SI newval)
{
  CPU (h_gr_acr[regno]) = newval;
}

/* Get the value of h-raw-gr-acr.  */

SI
crisv32f_h_raw_gr_acr_get (SIM_CPU *current_cpu, UINT regno)
{
  return GET_H_RAW_GR_ACR (regno);
}

/* Set a value for h-raw-gr-acr.  */

void
crisv32f_h_raw_gr_acr_set (SIM_CPU *current_cpu, UINT regno, SI newval)
{
  SET_H_RAW_GR_ACR (regno, newval);
}

/* Get the value of h-sr.  */

SI
crisv32f_h_sr_get (SIM_CPU *current_cpu, UINT regno)
{
  return GET_H_SR (regno);
}

/* Set a value for h-sr.  */

void
crisv32f_h_sr_set (SIM_CPU *current_cpu, UINT regno, SI newval)
{
  SET_H_SR (regno, newval);
}

/* Get the value of h-sr-v32.  */

SI
crisv32f_h_sr_v32_get (SIM_CPU *current_cpu, UINT regno)
{
  return GET_H_SR_V32 (regno);
}

/* Set a value for h-sr-v32.  */

void
crisv32f_h_sr_v32_set (SIM_CPU *current_cpu, UINT regno, SI newval)
{
  SET_H_SR_V32 (regno, newval);
}

/* Get the value of h-supr.  */

SI
crisv32f_h_supr_get (SIM_CPU *current_cpu, UINT regno)
{
  return GET_H_SUPR (regno);
}

/* Set a value for h-supr.  */

void
crisv32f_h_supr_set (SIM_CPU *current_cpu, UINT regno, SI newval)
{
  SET_H_SUPR (regno, newval);
}

/* Get the value of h-cbit.  */

BI
crisv32f_h_cbit_get (SIM_CPU *current_cpu)
{
  return CPU (h_cbit);
}

/* Set a value for h-cbit.  */

void
crisv32f_h_cbit_set (SIM_CPU *current_cpu, BI newval)
{
  CPU (h_cbit) = newval;
}

/* Get the value of h-cbit-move.  */

BI
crisv32f_h_cbit_move_get (SIM_CPU *current_cpu)
{
  return GET_H_CBIT_MOVE ();
}

/* Set a value for h-cbit-move.  */

void
crisv32f_h_cbit_move_set (SIM_CPU *current_cpu, BI newval)
{
  SET_H_CBIT_MOVE (newval);
}

/* Get the value of h-cbit-move-v32.  */

BI
crisv32f_h_cbit_move_v32_get (SIM_CPU *current_cpu)
{
  return GET_H_CBIT_MOVE_V32 ();
}

/* Set a value for h-cbit-move-v32.  */

void
crisv32f_h_cbit_move_v32_set (SIM_CPU *current_cpu, BI newval)
{
  SET_H_CBIT_MOVE_V32 (newval);
}

/* Get the value of h-vbit.  */

BI
crisv32f_h_vbit_get (SIM_CPU *current_cpu)
{
  return CPU (h_vbit);
}

/* Set a value for h-vbit.  */

void
crisv32f_h_vbit_set (SIM_CPU *current_cpu, BI newval)
{
  CPU (h_vbit) = newval;
}

/* Get the value of h-vbit-move.  */

BI
crisv32f_h_vbit_move_get (SIM_CPU *current_cpu)
{
  return GET_H_VBIT_MOVE ();
}

/* Set a value for h-vbit-move.  */

void
crisv32f_h_vbit_move_set (SIM_CPU *current_cpu, BI newval)
{
  SET_H_VBIT_MOVE (newval);
}

/* Get the value of h-vbit-move-v32.  */

BI
crisv32f_h_vbit_move_v32_get (SIM_CPU *current_cpu)
{
  return GET_H_VBIT_MOVE_V32 ();
}

/* Set a value for h-vbit-move-v32.  */

void
crisv32f_h_vbit_move_v32_set (SIM_CPU *current_cpu, BI newval)
{
  SET_H_VBIT_MOVE_V32 (newval);
}

/* Get the value of h-zbit.  */

BI
crisv32f_h_zbit_get (SIM_CPU *current_cpu)
{
  return CPU (h_zbit);
}

/* Set a value for h-zbit.  */

void
crisv32f_h_zbit_set (SIM_CPU *current_cpu, BI newval)
{
  CPU (h_zbit) = newval;
}

/* Get the value of h-zbit-move.  */

BI
crisv32f_h_zbit_move_get (SIM_CPU *current_cpu)
{
  return GET_H_ZBIT_MOVE ();
}

/* Set a value for h-zbit-move.  */

void
crisv32f_h_zbit_move_set (SIM_CPU *current_cpu, BI newval)
{
  SET_H_ZBIT_MOVE (newval);
}

/* Get the value of h-zbit-move-v32.  */

BI
crisv32f_h_zbit_move_v32_get (SIM_CPU *current_cpu)
{
  return GET_H_ZBIT_MOVE_V32 ();
}

/* Set a value for h-zbit-move-v32.  */

void
crisv32f_h_zbit_move_v32_set (SIM_CPU *current_cpu, BI newval)
{
  SET_H_ZBIT_MOVE_V32 (newval);
}

/* Get the value of h-nbit.  */

BI
crisv32f_h_nbit_get (SIM_CPU *current_cpu)
{
  return CPU (h_nbit);
}

/* Set a value for h-nbit.  */

void
crisv32f_h_nbit_set (SIM_CPU *current_cpu, BI newval)
{
  CPU (h_nbit) = newval;
}

/* Get the value of h-nbit-move.  */

BI
crisv32f_h_nbit_move_get (SIM_CPU *current_cpu)
{
  return GET_H_NBIT_MOVE ();
}

/* Set a value for h-nbit-move.  */

void
crisv32f_h_nbit_move_set (SIM_CPU *current_cpu, BI newval)
{
  SET_H_NBIT_MOVE (newval);
}

/* Get the value of h-nbit-move-v32.  */

BI
crisv32f_h_nbit_move_v32_get (SIM_CPU *current_cpu)
{
  return GET_H_NBIT_MOVE_V32 ();
}

/* Set a value for h-nbit-move-v32.  */

void
crisv32f_h_nbit_move_v32_set (SIM_CPU *current_cpu, BI newval)
{
  SET_H_NBIT_MOVE_V32 (newval);
}

/* Get the value of h-xbit.  */

BI
crisv32f_h_xbit_get (SIM_CPU *current_cpu)
{
  return CPU (h_xbit);
}

/* Set a value for h-xbit.  */

void
crisv32f_h_xbit_set (SIM_CPU *current_cpu, BI newval)
{
  CPU (h_xbit) = newval;
}

/* Get the value of h-ibit.  */

BI
crisv32f_h_ibit_get (SIM_CPU *current_cpu)
{
  return GET_H_IBIT ();
}

/* Set a value for h-ibit.  */

void
crisv32f_h_ibit_set (SIM_CPU *current_cpu, BI newval)
{
  SET_H_IBIT (newval);
}

/* Get the value of h-pbit.  */

BI
crisv32f_h_pbit_get (SIM_CPU *current_cpu)
{
  return CPU (h_pbit);
}

/* Set a value for h-pbit.  */

void
crisv32f_h_pbit_set (SIM_CPU *current_cpu, BI newval)
{
  CPU (h_pbit) = newval;
}

/* Get the value of h-rbit.  */

BI
crisv32f_h_rbit_get (SIM_CPU *current_cpu)
{
  return CPU (h_rbit);
}

/* Set a value for h-rbit.  */

void
crisv32f_h_rbit_set (SIM_CPU *current_cpu, BI newval)
{
  CPU (h_rbit) = newval;
}

/* Get the value of h-ubit.  */

BI
crisv32f_h_ubit_get (SIM_CPU *current_cpu)
{
  return GET_H_UBIT ();
}

/* Set a value for h-ubit.  */

void
crisv32f_h_ubit_set (SIM_CPU *current_cpu, BI newval)
{
  SET_H_UBIT (newval);
}

/* Get the value of h-gbit.  */

BI
crisv32f_h_gbit_get (SIM_CPU *current_cpu)
{
  return CPU (h_gbit);
}

/* Set a value for h-gbit.  */

void
crisv32f_h_gbit_set (SIM_CPU *current_cpu, BI newval)
{
  CPU (h_gbit) = newval;
}

/* Get the value of h-kernel-sp.  */

SI
crisv32f_h_kernel_sp_get (SIM_CPU *current_cpu)
{
  return CPU (h_kernel_sp);
}

/* Set a value for h-kernel-sp.  */

void
crisv32f_h_kernel_sp_set (SIM_CPU *current_cpu, SI newval)
{
  CPU (h_kernel_sp) = newval;
}

/* Get the value of h-ubit-v32.  */

BI
crisv32f_h_ubit_v32_get (SIM_CPU *current_cpu)
{
  return CPU (h_ubit_v32);
}

/* Set a value for h-ubit-v32.  */

void
crisv32f_h_ubit_v32_set (SIM_CPU *current_cpu, BI newval)
{
  SET_H_UBIT_V32 (newval);
}

/* Get the value of h-ibit-v32.  */

BI
crisv32f_h_ibit_v32_get (SIM_CPU *current_cpu)
{
  return CPU (h_ibit_v32);
}

/* Set a value for h-ibit-v32.  */

void
crisv32f_h_ibit_v32_set (SIM_CPU *current_cpu, BI newval)
{
  SET_H_IBIT_V32 (newval);
}

/* Get the value of h-mbit.  */

BI
crisv32f_h_mbit_get (SIM_CPU *current_cpu)
{
  return CPU (h_mbit);
}

/* Set a value for h-mbit.  */

void
crisv32f_h_mbit_set (SIM_CPU *current_cpu, BI newval)
{
  SET_H_MBIT (newval);
}

/* Get the value of h-qbit.  */

BI
crisv32f_h_qbit_get (SIM_CPU *current_cpu)
{
  return CPU (h_qbit);
}

/* Set a value for h-qbit.  */

void
crisv32f_h_qbit_set (SIM_CPU *current_cpu, BI newval)
{
  SET_H_QBIT (newval);
}

/* Get the value of h-sbit.  */

BI
crisv32f_h_sbit_get (SIM_CPU *current_cpu)
{
  return CPU (h_sbit);
}

/* Set a value for h-sbit.  */

void
crisv32f_h_sbit_set (SIM_CPU *current_cpu, BI newval)
{
  SET_H_SBIT (newval);
}

/* Get the value of h-insn-prefixed-p.  */

BI
crisv32f_h_insn_prefixed_p_get (SIM_CPU *current_cpu)
{
  return GET_H_INSN_PREFIXED_P ();
}

/* Set a value for h-insn-prefixed-p.  */

void
crisv32f_h_insn_prefixed_p_set (SIM_CPU *current_cpu, BI newval)
{
  SET_H_INSN_PREFIXED_P (newval);
}

/* Get the value of h-insn-prefixed-p-v32.  */

BI
crisv32f_h_insn_prefixed_p_v32_get (SIM_CPU *current_cpu)
{
  return GET_H_INSN_PREFIXED_P_V32 ();
}

/* Set a value for h-insn-prefixed-p-v32.  */

void
crisv32f_h_insn_prefixed_p_v32_set (SIM_CPU *current_cpu, BI newval)
{
  SET_H_INSN_PREFIXED_P_V32 (newval);
}

/* Get the value of h-prefixreg-v32.  */

SI
crisv32f_h_prefixreg_v32_get (SIM_CPU *current_cpu)
{
  return GET_H_PREFIXREG_V32 ();
}

/* Set a value for h-prefixreg-v32.  */

void
crisv32f_h_prefixreg_v32_set (SIM_CPU *current_cpu, SI newval)
{
  SET_H_PREFIXREG_V32 (newval);
}

/* Record trace results for INSN.  */

void
crisv32f_record_trace_results (SIM_CPU *current_cpu, CGEN_INSN *insn,
			    int *indices, TRACE_RECORD *tr)
{
}
@


1.9
log
@[sim] Update old contact info in GPL license notices

sim/ChangeLog:

        Update old contact info in GPL license notices.
@
text
@d5 1
a5 1
Copyright 1996-2010, 2012 Free Software Foundation, Inc.
@


1.8
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d20 1
a20 2
   with this program; if not, write to the Free Software Foundation, Inc.,
   51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.
@


1.7
log
@Regenerate cgen files, update copyright year.
@
text
@d5 1
a5 1
Copyright 1996-2010 Free Software Foundation, Inc.
@


1.7.8.1
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d5 1
a5 1
Copyright 1996-2010, 2012 Free Software Foundation, Inc.
@


1.6
log
@	* cris/arch.c: Regenerate.
	* cris/arch.h: Regenerate.
	* cris/cpuall.h: Regenerate.
	* cris/cpuv10.c: Regenerate.
	* cris/cpuv10.h: Regenerate.
	* cris/cpuv32.c: Regenerate.
	* cris/cpuv32.h: Regenerate.
	* cris/cris-desc.c: Regenerate.
	* cris/cris-desc.h: Regenerate.
	* cris/cris-opc.h: Regenerate.
	* cris/decodev10.c: Regenerate.
	* cris/decodev10.h: Regenerate.
	* cris/decodev32.c: Regenerate.
	* cris/decodev32.h: Regenerate.
	* cris/modelv10.c: Regenerate.
	* cris/modelv32.c: Regenerate.
	* cris/semcrisv10f-switch.c: Regenerate.
	* cris/semcrisv32f-switch.c: Regenerate.
@
text
@d5 1
a5 1
Copyright 1996-2009 Free Software Foundation, Inc.
@


1.5
log
@	* cris/arch.c, cris/arch.h, cris/cpuall.h, cris/cpuv10.c,
	cris/cpuv10.h, cris/cpuv32.c, cris/cpuv32.h, cris/cris-desc.c,
	cris/cris-desc.h, cris/cris-opc.h, cris/decodev10.c,
	cris/decodev10.h, cris/decodev32.c, cris/decodev32.h,
	cris/modelv10.c, cris/modelv32.c, cris/semcrisv10f-switch.c,
	cris/semcrisv32f-switch.c: Regenerate.
@
text
@d5 1
a5 1
Copyright 1996-2007 Free Software Foundation, Inc.
@


1.4
log
@        Switch the license of all files explicitly copyright the FSF
        to GPLv3.
@
text
@d5 1
a5 1
Copyright 1996-2005 Free Software Foundation, Inc.
d9 13
a21 12
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
@


1.3
log
@	* cris/arch.c, cris/arch.h, cris/cpuall.h, cris/cpuv10.c,
	cris/cpuv10.h, cris/cpuv32.c, cris/cpuv32.h, cris/cris-desc.c,
	cris/cris-desc.h, cris/cris-opc.h, cris/decodev10.c,
	cris/decodev10.h, cris/decodev32.c, cris/decodev32.h,
	cris/modelv10.c, cris/modelv32.c, cris/semcrisv10f-switch.c,
	cris/semcrisv32f-switch.c: Regenerate.
@
text
@d11 2
a12 2
the Free Software Foundation; either version 2, or (at your option)
any later version.
d19 2
a20 3
You should have received a copy of the GNU General Public License along
with this program; if not, write to the Free Software Foundation, Inc.,
51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.
@


1.2
log
@	* cris/Makefile.in (stamp-v10fcpu, stamp-v32fcpu): Add kludge to
	include cgen-ops.h in decodev10.c and decodev32.c.
	* cris/sim-main.h: Don't include cgen-ops.h here.
	* cris/arch.c, cris/arch.h, cris/cpuall.h, cris/cpuv10.c,
	cris/cpuv10.h, cris/cpuv32.c, cris/cpuv32.h, cris/cris-desc.c,
	cris/cris-desc.h, cris/cris-opc.h, cris/decodev10.c,
	cris/decodev10.h, cris/decodev32.c, cris/decodev32.h,
	cris/modelv10.c, cris/modelv32.c, cris/semcrisv10f-switch.c,
	cris/semcrisv32f-switch.c: Regenerate.
@
text
@d21 1
a21 1
59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
@


1.1
log
@	* cris: New directory, simulator for Axis Communications CRIS
	including CRIS v32, CGEN-based.
	* configure.ac: Add corresponding configury.
	* configure: Regenerate.
@
text
@d5 1
a5 1
Copyright 1996-2004 Free Software Foundation, Inc.
@

