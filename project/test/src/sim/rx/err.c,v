head	1.5;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.5
	gdb_7_6-2013-04-26-release:1.5
	gdb_7_6-branch:1.5.0.2
	gdb_7_6-2013-03-12-branchpoint:1.5
	gdb_7_5_1-2012-11-29-release:1.4
	gdb_7_5-2012-08-17-release:1.4
	gdb_7_5-branch:1.4.0.2
	gdb_7_5-2012-07-18-branchpoint:1.4
	gdb_7_4_1-2012-04-26-release:1.3.4.1
	gdb_7_4-2012-01-24-release:1.3.4.1
	gdb_7_4-branch:1.3.0.4
	gdb_7_4-2011-12-13-branchpoint:1.3
	gdb_7_3_1-2011-09-04-release:1.3
	gdb_7_3-2011-07-26-release:1.3
	gdb_7_3-branch:1.3.0.2
	gdb_7_3-2011-04-01-branchpoint:1.3
	gdb_7_2-2010-09-02-release:1.2
	gdb_7_2-branch:1.2.0.4
	gdb_7_2-2010-07-07-branchpoint:1.2
	gdb_7_1-2010-03-18-release:1.2
	gdb_7_1-branch:1.2.0.2
	gdb_7_1-2010-02-18-branchpoint:1.2;
locks; strict;
comment	@ * @;


1.5
date	2013.01.01.06.41.40;	author brobecke;	state Exp;
branches;
next	1.4;

1.4
date	2012.01.04.08.28.24;	author brobecke;	state Exp;
branches;
next	1.3;

1.3
date	2011.01.01.15.34.04;	author brobecke;	state Exp;
branches
	1.3.4.1;
next	1.2;

1.2
date	2010.01.01.10.03.33;	author brobecke;	state Exp;
branches;
next	1.1;

1.1
date	2009.11.24.19.22.45;	author dj;	state Exp;
branches;
next	;

1.3.4.1
date	2012.01.06.04.54.55;	author brobecke;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update years in copyright notice for the GDB files.

Two modifications:
  1. The addition of 2013 to the copyright year range for every file;
  2. The use of a single year range, instead of potentially multiple
     year ranges, as approved by the FSF.
@
text
@/* err.c --- handle errors for RX simulator.

Copyright (C) 2008-2013 Free Software Foundation, Inc.
Contributed by Red Hat, Inc.

This file is part of the GNU simulators.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

#include <stdio.h>
#include <stdlib.h>

#include "err.h"

static unsigned char ee_actions[SIM_ERR_NUM_ERRORS];

static enum execution_error last_error;

static void
ee_overrides ()
{
  /* GCC may initialize a bitfield by reading the uninitialized byte,
     masking in the bitfield, and writing the byte back out.  */
  ee_actions[SIM_ERR_READ_UNWRITTEN_BYTES] = SIM_ERRACTION_IGNORE;
  /* This breaks stack unwinding for exceptions because it leaves
     MC_PUSHED_PC tags in the unwound stack frames.  */
  ee_actions[SIM_ERR_CORRUPT_STACK] = SIM_ERRACTION_IGNORE;
}

void
execution_error_init_standalone (void)
{
  int i;

  for (i = 0; i < SIM_ERR_NUM_ERRORS; i++)
    ee_actions[i] = SIM_ERRACTION_EXIT;

  ee_overrides ();
}

void
execution_error_init_debugger (void)
{
  int i;

  for (i = 0; i < SIM_ERR_NUM_ERRORS; i++)
    ee_actions[i] = SIM_ERRACTION_DEBUG;

  ee_overrides ();
}

void
execution_error_exit_all (void)
{
  int i;

  for (i = 0; i < SIM_ERR_NUM_ERRORS; i++)
    ee_actions[i] = SIM_ERRACTION_EXIT;
}

void
execution_error_warn_all (void)
{
  int i;

  for (i = 0; i < SIM_ERR_NUM_ERRORS; i++)
    ee_actions[i] = SIM_ERRACTION_WARN;
}

void
execution_error_ignore_all (void)
{
  int i;

  for (i = 0; i < SIM_ERR_NUM_ERRORS; i++)
    ee_actions[i] = SIM_ERRACTION_IGNORE;
}

void
execution_error (enum execution_error num, unsigned long address)
{
  if (ee_actions[num] != SIM_ERRACTION_IGNORE)
    last_error = num;

  if (ee_actions[num] == SIM_ERRACTION_EXIT
      || ee_actions[num] == SIM_ERRACTION_WARN)
    {
      switch (num)
	{
	case SIM_ERR_READ_UNWRITTEN_PAGES:
	case SIM_ERR_READ_UNWRITTEN_BYTES:
	  printf("Read from unwritten memory at 0x%lx\n", address);
	  break;

	case SIM_ERR_NULL_POINTER_DEREFERENCE:
	  printf ("NULL pointer dereference\n");
	  break;

	case SIM_ERR_CORRUPT_STACK:
	  printf ("Stack corruption detected at 0x%lx\n", address);
	  break;

	default:
	  printf ("Unknown execution error %d\n", num);
	  exit (1);
	}
    }

  if (ee_actions[num] == SIM_ERRACTION_EXIT)
    exit (1);
}

enum execution_error
execution_error_get_last_error (void)
{
  return last_error;
}

void
execution_error_clear_last_error (void)
{
  last_error = SIM_ERR_NONE;
}

void
execution_error_set_action (enum execution_error num, enum execution_error_action act)
{
  ee_actions[num] = act;
}
@


1.4
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d3 1
a3 1
Copyright (C) 2008-2012 Free Software Foundation, Inc.
@


1.3
log
@run copyright.sh for 2011.
@
text
@d3 1
a3 1
Copyright (C) 2008, 2009, 2010, 2011 Free Software Foundation, Inc.
@


1.3.4.1
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d3 1
a3 1
Copyright (C) 2008-2012 Free Software Foundation, Inc.
@


1.2
log
@Update copyright notices to add year 2010.
@
text
@d3 1
a3 1
Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.
@


1.1
log
@[sim]
	* rx: New directory.
	* configure.ac: Add entry for Renesas RX.
	* configure: Regenerate.

[include/gdb]
	* sim-rx.h: New.
@
text
@d3 1
a3 1
Copyright (C) 2008, 2009 Free Software Foundation, Inc.
@

