head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2013.10.15.20.40.22;	author hp;	state Exp;
branches;
next	1.2;

1.2
date	2013.06.28.18.59.51;	author tromey;	state Exp;
branches;
next	1.1;

1.1
date	2013.06.24.23.41.35;	author brobecke;	state Exp;
branches;
next	;


desc
@@


1.3
log
@	* create-version.sh: Align parameters to match those of
	../../gdb/common/create-version.sh.
	* Make-common.in (srcsim): New variable.
	(version.c): Adjust call to create-version.sh as per above.
@
text
@#!/bin/sh

# Copyright (C) 1989-2013 Free Software Foundation, Inc.

# This file is part of GDB.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Create version.c from $1/../gdb/version.in.
# Please keep the same API as $1/../gdb/common/create-version.sh so
# they can be called the same way, from e.g. $srcroot/src-release.
# Usage:
#    create-version.sh PATH-TO-SIM-SRCDIR HOST_ALIAS \
#        TARGET_ALIAS OUTPUT-FILE-NAME

srcdir="$1"
host_alias="$2"
target_alias="$3"
output="$4"

rm -f version.c-tmp $output version.tmp
date=`sed -n -e 's/^.* BFD_VERSION_DATE \(.*\)$/\1/p' $srcdir/../bfd/version.h`
sed -e "s/DATE/$date/" < $srcdir/../gdb/version.in > version.tmp
echo '#include "version.h"' >> version.c-tmp
echo 'const char version[] = "'"`sed q version.tmp`"'";' >> version.c-tmp
mv version.c-tmp $output
rm -f version.tmp
@


1.2
log
@move version.in from gdb/common back to gdb

This reverts part of the earlier version.in change.  It moves
version.in back to the gdb directory.  This works around the CVS bug
we've found.

gdb
	* Makefile.in (version.c): Use version.in, not
	common/version.in.
	* common/create-version.sh: Likewise.
	* common/version.in: Move...
	* version.in: ...here.
gdb/doc
	* Makefile.in (version.subst): Use version.in, not
	common/version.in.
	* gdbint.texinfo (Versions and Branches, Releasing GDB):
	Likewise.
gdb/gdbserver
	* Makefile.in (version.c): Use version.in, not
	common/version.in.
sim/common
	* Make-common.in (version.c): Use version.in, not
	common/version.in.
	* create-version.sh: Likewise.
sim/ppc:
	* Make-common.in (version.c): Use version.in, not
	common/version.in.
@
text
@d20 3
a22 1
# Create version.c from version.in.
d24 2
a25 1
#    create-version.sh PATH-TO-COMMON-SIM-SRCDIR OUTPUT-FILE-NAME
d28 3
a30 1
output="$2"
d33 2
a34 2
date=`sed -n -e 's/^.* BFD_VERSION_DATE \(.*\)$/\1/p' $srcdir/../../bfd/version.h`
sed -e "s/DATE/$date/" < $srcdir/../../gdb/version.in > version.tmp
@


1.1
log
@Adapt sim to new version number & date locations.

This change is required now that gdb/version.in has been moved to
gdb/common/version.in and now that the date needs to be fetched
from bfd/version.h.

sim/common/ChangeLog:

        * create-version.sh: New script. Adapted from
        gdb/commong/create-version.sh.
        * Make-common.in (version.c): Update rule dependencies,
        and re-implement using create-version.sh.

sim/ppc/ChangeLog:

        * Makefile.in (srccom): New variable.
        (version.c): Update rule dependencies, and re-implement using
        sim/common/create-version.sh.
@
text
@d29 1
a29 1
sed -e "s/DATE/$date/" < $srcdir/../../gdb/common/version.in > version.tmp
@

