head	1.48;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.45
	gdb_7_6-2013-04-26-release:1.45
	gdb_7_6-branch:1.45.0.2
	gdb_7_6-2013-03-12-branchpoint:1.45
	gdb_7_5_1-2012-11-29-release:1.43
	gdb_7_5-2012-08-17-release:1.43
	gdb_7_5-branch:1.43.0.2
	gdb_7_5-2012-07-18-branchpoint:1.43
	gdb_7_4_1-2012-04-26-release:1.40.2.2
	gdb_7_4-2012-01-24-release:1.40.2.2
	gdb_7_4-branch:1.40.0.2
	gdb_7_4-2011-12-13-branchpoint:1.40
	gdb_7_3_1-2011-09-04-release:1.38
	gdb_7_3-2011-07-26-release:1.38
	gdb_7_3-branch:1.38.0.2
	gdb_7_3-2011-04-01-branchpoint:1.38
	gdb_7_2-2010-09-02-release:1.36
	gdb_7_2-branch:1.36.0.4
	gdb_7_2-2010-07-07-branchpoint:1.36
	gdb_7_1-2010-03-18-release:1.36
	gdb_7_1-branch:1.36.0.2
	gdb_7_1-2010-02-18-branchpoint:1.36
	gdb_7_0_1-2009-12-22-release:1.33
	gdb_7_0-2009-10-06-release:1.33
	gdb_7_0-branch:1.33.0.4
	gdb_7_0-2009-09-16-branchpoint:1.33
	arc-sim-20090309:1.28
	msnyder-checkpoint-072509-branch:1.33.0.2
	msnyder-checkpoint-072509-branchpoint:1.33
	arc-insight_6_8-branch:1.28.0.6
	arc-insight_6_8-branchpoint:1.28
	insight_6_8-branch:1.28.0.4
	insight_6_8-branchpoint:1.28
	reverse-20081226-branch:1.30.0.4
	reverse-20081226-branchpoint:1.30
	multiprocess-20081120-branch:1.30.0.2
	multiprocess-20081120-branchpoint:1.30
	reverse-20080930-branch:1.29.0.6
	reverse-20080930-branchpoint:1.29
	reverse-20080717-branch:1.29.0.4
	reverse-20080717-branchpoint:1.29
	msnyder-reverse-20080609-branch:1.29.0.2
	msnyder-reverse-20080609-branchpoint:1.29
	drow-reverse-20070409-branch:1.26.0.2
	drow-reverse-20070409-branchpoint:1.26
	gdb_6_8-2008-03-27-release:1.28
	gdb_6_8-branch:1.28.0.2
	gdb_6_8-2008-02-26-branchpoint:1.28
	gdb_6_7_1-2007-10-29-release:1.27
	gdb_6_7-2007-10-10-release:1.27
	gdb_6_7-branch:1.27.0.2
	gdb_6_7-2007-09-07-branchpoint:1.27
	insight_6_6-20070208-release:1.25
	gdb_6_6-2006-12-18-release:1.25
	gdb_6_6-branch:1.25.0.2
	gdb_6_6-2006-11-15-branchpoint:1.25
	insight_6_5-20061003-release:1.24
	gdb-csl-symbian-6_4_50_20060226-12:1.24
	gdb-csl-sourcerygxx-3_4_4-25:1.24
	nickrob-async-20060828-mergepoint:1.25
	gdb-csl-symbian-6_4_50_20060226-11:1.24
	gdb-csl-sourcerygxx-4_1-17:1.24
	gdb-csl-20060226-branch-local-2:1.24
	gdb-csl-sourcerygxx-4_1-14:1.24
	gdb-csl-sourcerygxx-4_1-13:1.24
	gdb-csl-sourcerygxx-4_1-12:1.24
	gdb-csl-sourcerygxx-3_4_4-21:1.24
	gdb_6_5-20060621-release:1.24
	gdb-csl-sourcerygxx-4_1-9:1.24
	gdb-csl-sourcerygxx-4_1-8:1.24
	gdb-csl-sourcerygxx-4_1-7:1.24
	gdb-csl-arm-2006q1-6:1.24
	gdb-csl-sourcerygxx-4_1-6:1.24
	gdb-csl-symbian-6_4_50_20060226-10:1.24
	gdb-csl-symbian-6_4_50_20060226-9:1.24
	gdb-csl-symbian-6_4_50_20060226-8:1.24
	gdb-csl-coldfire-4_1-11:1.24
	gdb-csl-sourcerygxx-3_4_4-19:1.24
	gdb-csl-coldfire-4_1-10:1.24
	gdb_6_5-branch:1.24.0.26
	gdb_6_5-2006-05-14-branchpoint:1.24
	gdb-csl-sourcerygxx-4_1-5:1.24
	nickrob-async-20060513-branch:1.24.0.24
	nickrob-async-20060513-branchpoint:1.24
	gdb-csl-sourcerygxx-4_1-4:1.24
	msnyder-reverse-20060502-branch:1.24.0.22
	msnyder-reverse-20060502-branchpoint:1.24
	gdb-csl-morpho-4_1-4:1.24
	gdb-csl-sourcerygxx-3_4_4-17:1.24
	readline_5_1-import-branch:1.24.0.20
	readline_5_1-import-branchpoint:1.24
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.24
	gdb-csl-symbian-20060226-branch:1.24.0.18
	gdb-csl-symbian-20060226-branchpoint:1.24
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.24
	msnyder-reverse-20060331-branch:1.24.0.16
	msnyder-reverse-20060331-branchpoint:1.24
	gdb-csl-available-20060303-branch:1.24.0.14
	gdb-csl-available-20060303-branchpoint:1.24
	gdb-csl-20060226-branch:1.24.0.12
	gdb-csl-20060226-branchpoint:1.24
	gdb_6_4-20051202-release:1.24
	msnyder-fork-checkpoint-branch:1.24.0.10
	msnyder-fork-checkpoint-branchpoint:1.24
	gdb-csl-gxxpro-6_3-branch:1.24.0.8
	gdb-csl-gxxpro-6_3-branchpoint:1.24
	gdb_6_4-branch:1.24.0.6
	gdb_6_4-2005-11-01-branchpoint:1.24
	gdb-csl-arm-20051020-branch:1.24.0.4
	gdb-csl-arm-20051020-branchpoint:1.24
	msnyder-tracepoint-checkpoint-branch:1.24.0.2
	msnyder-tracepoint-checkpoint-branchpoint:1.24
	gdb-csl-arm-20050325-2005-q1b:1.20.2.1
	gdb-csl-arm-20050325-2005-q1a:1.20
	csl-arm-20050325-branch:1.20.0.2
	csl-arm-20050325-branchpoint:1.20
	gdb_6_3-20041109-release:1.13
	gdb_6_3-branch:1.13.0.20
	gdb_6_3-20041019-branchpoint:1.13
	drow_intercu-merge-20040921:1.13
	drow_intercu-merge-20040915:1.13
	jimb-gdb_6_2-e500-branch:1.13.0.22
	jimb-gdb_6_2-e500-branchpoint:1.13
	gdb_6_2-20040730-release:1.13
	gdb_6_2-branch:1.13.0.18
	gdb_6_2-2004-07-10-gmt-branchpoint:1.13
	gdb_6_1_1-20040616-release:1.13
	gdb_6_1-2004-04-05-release:1.13
	drow_intercu-merge-20040402:1.13
	drow_intercu-merge-20040327:1.13
	ezannoni_pie-20040323-branch:1.13.0.16
	ezannoni_pie-20040323-branchpoint:1.13
	cagney_tramp-20040321-mergepoint:1.13
	cagney_tramp-20040309-branch:1.13.0.14
	cagney_tramp-20040309-branchpoint:1.13
	gdb_6_1-branch:1.13.0.12
	gdb_6_1-2004-03-01-gmt-branchpoint:1.13
	drow_intercu-20040221-branch:1.13.0.10
	drow_intercu-20040221-branchpoint:1.13
	cagney_bfdfile-20040213-branch:1.13.0.8
	cagney_bfdfile-20040213-branchpoint:1.13
	drow-cplus-merge-20040208:1.13
	carlton_dictionary-20040126-merge:1.13
	cagney_bigcore-20040122-branch:1.13.0.6
	cagney_bigcore-20040122-branchpoint:1.13
	drow-cplus-merge-20040113:1.13
	drow-cplus-merge-20031224:1.13
	drow-cplus-merge-20031220:1.13
	carlton_dictionary-20031215-merge:1.13
	drow-cplus-merge-20031214:1.13
	carlton-dictionary-20031111-merge:1.13
	gdb_6_0-2003-10-04-release:1.12
	kettenis_sparc-20030918-branch:1.13.0.4
	kettenis_sparc-20030918-branchpoint:1.13
	carlton_dictionary-20030917-merge:1.13
	ezannoni_pie-20030916-branchpoint:1.13
	ezannoni_pie-20030916-branch:1.13.0.2
	cagney_x86i386-20030821-branch:1.12.0.18
	cagney_x86i386-20030821-branchpoint:1.12
	carlton_dictionary-20030805-merge:1.12
	carlton_dictionary-20030627-merge:1.12
	gdb_6_0-branch:1.12.0.16
	gdb_6_0-2003-06-23-branchpoint:1.12
	jimb-ppc64-linux-20030613-branch:1.12.0.14
	jimb-ppc64-linux-20030613-branchpoint:1.12
	cagney_convert-20030606-branch:1.12.0.12
	cagney_convert-20030606-branchpoint:1.12
	cagney_writestrings-20030508-branch:1.12.0.10
	cagney_writestrings-20030508-branchpoint:1.12
	jimb-ppc64-linux-20030528-branch:1.12.0.8
	jimb-ppc64-linux-20030528-branchpoint:1.12
	carlton_dictionary-20030523-merge:1.12
	cagney_fileio-20030521-branch:1.12.0.6
	cagney_fileio-20030521-branchpoint:1.12
	kettenis_i386newframe-20030517-mergepoint:1.12
	jimb-ppc64-linux-20030509-branch:1.12.0.4
	jimb-ppc64-linux-20030509-branchpoint:1.12
	kettenis_i386newframe-20030504-mergepoint:1.12
	carlton_dictionary-20030430-merge:1.12
	kettenis_i386newframe-20030419-branch:1.12.0.2
	kettenis_i386newframe-20030419-branchpoint:1.12
	carlton_dictionary-20030416-merge:1.12
	cagney_frameaddr-20030409-mergepoint:1.11
	kettenis_i386newframe-20030406-branch:1.11.0.14
	kettenis_i386newframe-20030406-branchpoint:1.11
	cagney_frameaddr-20030403-branchpoint:1.11
	cagney_frameaddr-20030403-branch:1.11.0.12
	cagney_framebase-20030330-mergepoint:1.11
	cagney_framebase-20030326-branch:1.11.0.10
	cagney_framebase-20030326-branchpoint:1.11
	cagney_lazyid-20030317-branch:1.11.0.8
	cagney_lazyid-20030317-branchpoint:1.11
	kettenis-i386newframe-20030316-mergepoint:1.11
	offbyone-20030313-branch:1.11.0.6
	offbyone-20030313-branchpoint:1.11
	kettenis-i386newframe-20030308-branch:1.11.0.4
	kettenis-i386newframe-20030308-branchpoint:1.11
	carlton_dictionary-20030305-merge:1.11
	cagney_offbyone-20030303-branch:1.11.0.2
	cagney_offbyone-20030303-branchpoint:1.11
	carlton_dictionary-20030207-merge:1.10
	interps-20030202-branch:1.10.0.4
	interps-20030202-branchpoint:1.10
	cagney-unwind-20030108-branch:1.10.0.2
	cagney-unwind-20030108-branchpoint:1.10
	carlton_dictionary-20021223-merge:1.10
	gdb_5_3-2002-12-12-release:1.9
	carlton_dictionary-20021115-merge:1.10
	kseitz_interps-20021105-merge:1.9
	kseitz_interps-20021103-merge:1.9
	drow-cplus-merge-20021020:1.9
	drow-cplus-merge-20021025:1.9
	carlton_dictionary-20021025-merge:1.9
	carlton_dictionary-20021011-merge:1.9
	drow-cplus-branch:1.9.0.6
	drow-cplus-branchpoint:1.9
	kseitz_interps-20020930-merge:1.9
	carlton_dictionary-20020927-merge:1.9
	carlton_dictionary-branch:1.9.0.4
	carlton_dictionary-20020920-branchpoint:1.9
	gdb_5_3-branch:1.9.0.2
	gdb_5_3-2002-09-04-branchpoint:1.9
	kseitz_interps-20020829-merge:1.9
	cagney_sysregs-20020825-branch:1.8.0.4
	cagney_sysregs-20020825-branchpoint:1.8
	readline_4_3-import-branch:1.8.0.2
	readline_4_3-import-branchpoint:1.8
	gdb_5_2_1-2002-07-23-release:1.6.8.1
	kseitz_interps-20020528-branch:1.6.0.14
	kseitz_interps-20020528-branchpoint:1.6
	cagney_regbuf-20020515-branch:1.6.0.12
	cagney_regbuf-20020515-branchpoint:1.6
	jimb-macro-020506-branch:1.6.0.10
	jimb-macro-020506-branchpoint:1.6
	gdb_5_2-2002-04-29-release:1.6
	gdb_5_2-branch:1.6.0.8
	gdb_5_2-2002-03-03-branchpoint:1.6
	gdb_5_1_1-2002-01-24-release:1.6
	gdb_5_1_0_1-2002-01-03-release:1.6
	gdb_5_1_0_1-2002-01-03-branch:1.6.0.6
	gdb_5_1_0_1-2002-01-03-branchpoint:1.6
	gdb_5_1-2001-11-21-release:1.6
	gdb_s390-2001-09-26-branch:1.6.0.4
	gdb_s390-2001-09-26-branchpoint:1.6
	gdb_5_1-2001-07-29-branch:1.6.0.2
	gdb_5_1-2001-07-29-branchpoint:1.6
	insight-precleanup-2001-01-01:1.5
	gdb-premipsmulti-2000-06-06-branch:1.1.1.4.0.4
	gdb-premipsmulti-2000-06-06-branchpoint:1.1.1.4
	gdb_5_0-2000-05-19-release:1.1.1.4
	gdb_4_18_2-2000-05-18-release:1.1.1.4
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.4
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.4
	gdb_5_0-2000-04-10-branch:1.1.1.4.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.4
	repo-unification-2000-02-06:1.1.1.4
	gdb-2000-02-04:1.1.1.4
	gdb-2000-02-02:1.1.1.4
	gdb-2000-02-01:1.1.1.4
	gdb-2000-01-31:1.1.1.4
	gdb-2000-01-26:1.1.1.4
	gdb-2000-01-24:1.1.1.4
	gdb-2000-01-17:1.1.1.4
	gdb-2000-01-10:1.1.1.4
	gdb-2000-01-05:1.1.1.4
	gdb-1999-12-21:1.1.1.4
	gdb-1999-12-13:1.1.1.4
	gdb-1999-12-07:1.1.1.4
	gdb-1999-12-06:1.1.1.4
	gdb-1999-11-16:1.1.1.4
	gdb-1999-11-08:1.1.1.4
	gdb-1999-11-01:1.1.1.4
	gdb-1999-10-25:1.1.1.4
	gdb-1999-10-18:1.1.1.4
	gdb-1999-10-11:1.1.1.4
	gdb-1999-10-04:1.1.1.4
	gdb-1999-09-28:1.1.1.4
	gdb-1999-09-21:1.1.1.4
	gdb-1999-09-13:1.1.1.3
	gdb-1999-09-08:1.1.1.3
	gdb-1999-08-30:1.1.1.2
	gdb-1999-08-23:1.1.1.2
	gdb-1999-08-16:1.1.1.2
	gdb-1999-08-09:1.1.1.2
	gdb-1999-08-02:1.1.1.2
	gdb-1999-07-26:1.1.1.2
	gdb-1999-07-19:1.1.1.2
	gdb-1999-07-12:1.1.1.2
	gdb-post-reformat-19990707:1.1.1.2
	gdb-1999-07-07-post-reformat-snapshot:1.1.1.2
	gdb-pre-reformat-19990707:1.1.1.2
	gdb-1999-07-07:1.1.1.2
	gdb-1999-07-05:1.1.1.2
	gdb-1999-06-28:1.1.1.1
	gdb-1999-06-21:1.1.1.1
	gdb-1999-06-14:1.1.1.1
	gdb-1999-06-07:1.1.1.1
	gdb-1999-06-01:1.1.1.1
	gdb-4_18-branch:1.1.1.1.0.2
	gdb-4_18-release:1.1.1.1
	gdb-1999-05-25:1.1.1.1
	gdb-1999-05-19:1.1.1.1
	gdb-1999-05-10:1.1.1.1
	gdb-19990504:1.1.1.1
	gdb-19990422:1.1.1.1
	SNAPSHOT:1.1.1
	gdb-4_18:1.1.1.1
	GDB_4_18:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.48
date	2013.10.15.20.40.22;	author hp;	state Exp;
branches;
next	1.47;

1.47
date	2013.06.28.18.59.51;	author tromey;	state Exp;
branches;
next	1.46;

1.46
date	2013.06.24.23.41.35;	author brobecke;	state Exp;
branches;
next	1.45;

1.45
date	2013.01.01.06.41.33;	author brobecke;	state Exp;
branches;
next	1.44;

1.44
date	2012.11.20.14.41.08;	author hjl;	state Exp;
branches;
next	1.43;

1.43
date	2012.03.19.04.54.47;	author vapier;	state Exp;
branches;
next	1.42;

1.42
date	2012.01.04.08.28.04;	author brobecke;	state Exp;
branches;
next	1.41;

1.41
date	2011.12.19.04.33.39;	author brobecke;	state Exp;
branches;
next	1.40;

1.40
date	2011.12.03.18.23.44;	author vapier;	state Exp;
branches
	1.40.2.1;
next	1.39;

1.39
date	2011.07.05.19.06.36;	author vapier;	state Exp;
branches;
next	1.38;

1.38
date	2011.03.29.17.57.21;	author vapier;	state Exp;
branches;
next	1.37;

1.37
date	2011.01.01.15.33.55;	author brobecke;	state Exp;
branches;
next	1.36;

1.36
date	2010.01.25.00.48.17;	author devans;	state Exp;
branches;
next	1.35;

1.35
date	2010.01.01.10.03.26;	author brobecke;	state Exp;
branches;
next	1.34;

1.34
date	2009.10.02.15.43.17;	author tromey;	state Exp;
branches;
next	1.33;

1.33
date	2009.07.12.16.59.34;	author devans;	state Exp;
branches;
next	1.32;

1.32
date	2009.07.07.08.09.19;	author devans;	state Exp;
branches;
next	1.31;

1.31
date	2009.01.14.10.53.05;	author brobecke;	state Exp;
branches;
next	1.30;

1.30
date	2008.10.21.19.50.48;	author drow;	state Exp;
branches;
next	1.29;

1.29
date	2008.06.07.01.31.25;	author jsm28;	state Exp;
branches;
next	1.28;

1.28
date	2008.01.01.22.53.23;	author drow;	state Exp;
branches;
next	1.27;

1.27
date	2007.08.24.14.28.35;	author brobecke;	state Exp;
branches;
next	1.26;

1.26
date	2007.01.09.17.59.16;	author drow;	state Exp;
branches;
next	1.25;

1.25
date	2006.05.31.15.14.40;	author drow;	state Exp;
branches;
next	1.24;

1.24
date	2005.05.24.14.21.19;	author corinna;	state Exp;
branches;
next	1.23;

1.23
date	2005.05.18.01.55.46;	author drow;	state Exp;
branches;
next	1.22;

1.22
date	2005.05.18.01.54.39;	author drow;	state Exp;
branches;
next	1.21;

1.21
date	2005.04.27.20.38.08;	author pbrook;	state Exp;
branches;
next	1.20;

1.20
date	2005.02.09.22.04.04;	author jimb;	state Exp;
branches
	1.20.2.1;
next	1.19;

1.19
date	2004.12.07.22.28.53;	author hp;	state Exp;
branches;
next	1.18;

1.18
date	2004.12.01.02.32.08;	author hp;	state Exp;
branches;
next	1.17;

1.17
date	2004.12.01.02.29.30;	author hp;	state Exp;
branches;
next	1.16;

1.16
date	2004.11.30.13.44.13;	author rearnsha;	state Exp;
branches;
next	1.15;

1.15
date	2004.11.18.10.21.39;	author rearnsha;	state Exp;
branches;
next	1.14;

1.14
date	2004.11.16.07.02.26;	author hp;	state Exp;
branches;
next	1.13;

1.13
date	2003.09.08.17.24.59;	author brolley;	state Exp;
branches;
next	1.12;

1.12
date	2003.04.13.17.45.11;	author msnyder;	state Exp;
branches;
next	1.11;

1.11
date	2003.02.20.14.37.59;	author cagney;	state Exp;
branches;
next	1.10;

1.10
date	2002.11.06.18.40.25;	author cgd;	state Exp;
branches;
next	1.9;

1.9
date	2002.08.29.19.27.52;	author brolley;	state Exp;
branches
	1.9.4.1
	1.9.6.1;
next	1.8;

1.8
date	2002.07.14.17.03.39;	author cagney;	state Exp;
branches;
next	1.7;

1.7
date	2002.06.09.15.45.45;	author cagney;	state Exp;
branches;
next	1.6;

1.6
date	2001.07.05.13.51.26;	author bje;	state Exp;
branches
	1.6.8.1
	1.6.12.1
	1.6.14.1;
next	1.5;

1.5
date	2000.12.27.17.47.20;	author aoliva;	state Exp;
branches;
next	1.4;

1.4
date	2000.12.05.00.56.44;	author bje;	state Exp;
branches;
next	1.3;

1.3
date	2000.10.26.16.21.34;	author ezannoni;	state Exp;
branches;
next	1.2;

1.2
date	2000.08.21.15.52.38;	author fche;	state Exp;
branches;
next	1.1;

1.1
date	99.04.16.01.34.56;	author shebs;	state Exp;
branches
	1.1.1.1;
next	;

1.40.2.1
date	2011.12.19.04.58.15;	author brobecke;	state Exp;
branches;
next	1.40.2.2;

1.40.2.2
date	2012.01.06.04.54.38;	author brobecke;	state Exp;
branches;
next	;

1.20.2.1
date	2005.04.28.01.46.48;	author pbrook;	state Exp;
branches;
next	;

1.9.4.1
date	2002.11.15.19.19.27;	author carlton;	state Exp;
branches;
next	1.9.4.2;

1.9.4.2
date	2003.03.06.00.56.40;	author carlton;	state Exp;
branches;
next	1.9.4.3;

1.9.4.3
date	2003.04.16.19.57.08;	author carlton;	state Exp;
branches;
next	1.9.4.4;

1.9.4.4
date	2003.09.17.21.29.01;	author carlton;	state Exp;
branches;
next	;

1.9.6.1
date	2003.12.14.20.28.17;	author drow;	state Exp;
branches;
next	;

1.6.8.1
date	2002.07.14.17.04.46;	author cagney;	state Exp;
branches;
next	;

1.6.12.1
date	2002.06.15.16.43.22;	author cagney;	state Exp;
branches;
next	;

1.6.14.1
date	2002.06.20.01.38.57;	author kseitz;	state Exp;
branches;
next	1.6.14.2;

1.6.14.2
date	2002.07.22.21.47.22;	author kseitz;	state Exp;
branches;
next	1.6.14.3;

1.6.14.3
date	2002.08.30.22.52.57;	author kseitz;	state Exp;
branches;
next	;

1.1.1.1
date	99.04.16.01.34.56;	author shebs;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.07.05.17.58.38;	author jsm;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	99.09.09.00.01.38;	author shebs;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	99.09.22.03.28.03;	author jsm;	state Exp;
branches;
next	;


desc
@@


1.48
log
@	* create-version.sh: Align parameters to match those of
	../../gdb/common/create-version.sh.
	* Make-common.in (srcsim): New variable.
	(version.c): Adjust call to create-version.sh as per above.
@
text
@# Makefile fragment for common parts of all simulators.
# Copyright 1997-2013 Free Software Foundation, Inc.
# Contributed by Cygnus Support.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# This Makefile fragment consists of two separate parts.
# They are merged into the final Makefile at points denoted by
# "## COMMON_PRE_CONFIG_FRAG" and "## COMMON_POST_CONFIG_FRAG".
#
# The target Makefile should look like:
#
#># Copyright blah blah
#>
#>## COMMON_PRE_CONFIG_FRAG
#>
#># Any overrides necessary for the SIM_FOO config vars.
#>SIM_FOO = ...
#>
#>## COMMON_POST_CONFIG_FRAG
#>
#># Rules to build target specific .o's.

## COMMON_PRE_CONFIG_FRAG

VPATH = @@srcdir@@:$(srccom)
srcdir = @@srcdir@@
srccom = $(srcdir)/../common
srcroot = $(srcdir)/../..
srcsim = $(srcdir)/..

prefix = @@prefix@@
exec_prefix = @@exec_prefix@@

host_alias = @@host_alias@@
target_alias = @@target_alias@@
program_transform_name = @@program_transform_name@@
bindir = @@bindir@@

libdir = @@libdir@@
tooldir = $(libdir)/$(target_alias)

datadir = @@datadir@@
datarootdir = @@datarootdir@@
mandir = @@mandir@@
man1dir = $(mandir)/man1
infodir = @@infodir@@
includedir = @@includedir@@

lt_cv_dlopen_libs = @@lt_cv_dlopen_libs@@
# This can be referenced by the gettext configuration code.
top_builddir = ..

EXEEXT = @@EXEEXT@@
SHELL = @@SHELL@@

INSTALL = @@INSTALL@@
INSTALL_PROGRAM = @@INSTALL_PROGRAM@@
INSTALL_DATA = @@INSTALL_DATA@@

CC = @@CC@@
CC_FOR_BUILD = @@CC_FOR_BUILD@@
CFLAGS = @@CFLAGS@@
SIM_BSWAP = @@sim_bswap@@
SIM_CFLAGS = @@sim_cflags@@
SIM_DEBUG = @@sim_debug@@
SIM_TRACE = @@sim_trace@@
SIM_PROFILE = @@sim_profile@@

SIM_ASSERT = @@sim_assert@@
SIM_ALIGNMENT = @@sim_alignment@@
SIM_BITSIZE = @@sim_bitsize@@
SIM_DEFAULT_MODEL = @@sim_default_model@@
SIM_ENDIAN = @@sim_endian@@
SIM_ENVIRONMENT = @@sim_environment@@
SIM_FLOAT = @@sim_float@@
SIM_HW_CFLAGS = @@sim_hw_cflags@@
SIM_HW_OBJS = @@sim_hw_objs@@
SIM_HW = @@sim_hw@@
SIM_HOSTENDIAN = @@sim_hostendian@@
SIM_INLINE = @@sim_inline@@
SIM_PACKAGES = @@sim_packages@@
SIM_REGPARM = @@sim_regparm@@
SIM_RESERVED_BITS = @@sim_reserved_bits@@
SIM_SCACHE = @@sim_scache@@
SIM_SMP = @@sim_smp@@
SIM_STDCALL = @@sim_stdcall@@
SIM_XOR_ENDIAN = @@sim_xor_endian@@
WARN_CFLAGS = @@WARN_CFLAGS@@
WERROR_CFLAGS = @@WERROR_CFLAGS@@
SIM_WARN_CFLAGS = $(WARN_CFLAGS)
SIM_WERROR_CFLAGS = $(WERROR_CFLAGS)

HDEFINES = @@HDEFINES@@
TDEFINES =

AR = @@AR@@
AR_FLAGS = rc
RANLIB = @@RANLIB@@
MAKEINFO = makeinfo

# Dependency tracking information.
DEPMODE = @@CCDEPMODE@@
DEPDIR = @@DEPDIR@@
depcomp = $(SHELL) $(srcroot)/depcomp

# Note that these are overridden by GNU make-specific code below if
# GNU make is used.  The overrides implement dependency tracking.
COMPILE.pre = $(CC)
COMPILE.post = -c -o $@@
COMPILE = $(COMPILE.pre) $(ALL_CFLAGS) $(COMPILE.post)
POSTCOMPILE = @@true

# Each simulator's Makefile.in defines one or more of these variables
# to override our settings as necessary.  There is no need to define these
# in the simulator's Makefile.in if one is using the default value.  In fact
# it's preferable not to.

# List of object files, less common parts.
SIM_OBJS =
# List of extra dependencies.
# Generally this consists of simulator specific files included by sim-main.h.
SIM_EXTRA_DEPS =
# List of flags to always pass to $(CC).
SIM_EXTRA_CFLAGS =
# List of extra libraries to link with.
SIM_EXTRA_LIBS =
# List of extra program dependencies.
SIM_EXTRA_LIBDEPS =
# List of main object files for `run'.
SIM_RUN_OBJS = run.o
# Dependency of `all' to build any extra files.
SIM_EXTRA_ALL =
# Dependency of `install' to install any extra files.
SIM_EXTRA_INSTALL =
# Dependency of `clean' to clean any extra files.
SIM_EXTRA_CLEAN =
# Likewise `distclean'
SIM_EXTRA_DISTCLEAN =

# Every time a new general purpose source file was added every target's
# Makefile.in needed to be updated to include the file in SIM_OBJS.
# This doesn't scale.
# This variable specifies all the generic stuff common to the newer simulators.
# Things like sim-reason.o can't go here as the cpu may provide its own
# (though hopefully in time that won't be so).  Things like sim-bits.o can go
# here.  Some files are used by all simulators (e.g. callback.o).
# Those files are specified in LIB_OBJS below.

SIM_COMMON_HW_OBJS = \
	hw-alloc.o \
	hw-base.o \
	hw-device.o \
	hw-events.o \
	hw-handles.o \
	hw-instances.o \
	hw-ports.o \
	hw-properties.o \
	hw-tree.o \
	sim-hw.o \

SIM_NEW_COMMON_OBJS = \
	sim-arange.o \
	sim-bits.o \
	sim-command.o \
	sim-config.o \
	sim-core.o \
	sim-endian.o \
	sim-events.o \
	sim-fpu.o \
	sim-io.o \
	sim-info.o \
	sim-load.o \
	sim-memopt.o \
	sim-module.o \
	sim-options.o \
	sim-profile.o \
	sim-signal.o \
	sim-trace.o \
	sim-utils.o \
	sim-watch.o \
	\
	$(SIM_HW_OBJS) \

# cgen-sim.h and the headers it includes
CGEN_SIM_DEPS = \
	$(srccom)/cgen-sim.h \
	$(srccom)/cgen-defs.h \
	$(srccom)/cgen-scache.h \
	$(srccom)/cgen-fpu.h \
	$(srccom)/cgen-par.h \
	$(srccom)/cgen-cpu.h \
	$(srccom)/cgen-trace.h \
	cpuall.h

# Add this to SIM_EXTRA_DEPS.
CGEN_INCLUDE_DEPS = \
	$(CGEN_SIM_DEPS) \
	$(srccom)/cgen-engine.h \
	$(srccom)/cgen-types.h \
	$(srcdir)/../../include/opcode/cgen.h

## End COMMON_PRE_CONFIG_FRAG

## COMMON_POST_CONFIG_FRAG

CONFIG_CFLAGS = \
	@@DEFS@@ \
	$(SIM_CFLAGS) \
	$(SIM_DEBUG) \
	$(SIM_DEFAULT_MODEL) \
	$(SIM_TRACE) \
	$(SIM_PROFILE) \
	$(SIM_BSWAP) \
	$(SIM_ASSERT) \
	$(SIM_ALIGNMENT) \
	$(SIM_BITSIZE) \
	$(SIM_ENDIAN) \
	$(SIM_ENVIRONMENT) \
	$(SIM_FLOAT) \
	$(SIM_HW_CFLAGS) \
	$(SIM_HOSTENDIAN) \
	$(SIM_INLINE) \
	$(SIM_PACKAGES) \
	$(SIM_REGPARM) \
	$(SIM_RESERVED_BITS) \
	$(SIM_SCACHE) \
	$(SIM_SMP) \
	$(SIM_STDCALL) \
	$(SIM_WARN_CFLAGS) \
	$(SIM_WERROR_CFLAGS) \
	$(SIM_XOR_ENDIAN) \
	$(SIM_HARDWARE) \
	$(SIM_EXTRA_CFLAGS) \
	$(HDEFINES) $(TDEFINES)
CSEARCH = -I. -I$(srcdir) -I../common -I$(srccom) \
  -I../../include -I$(srcroot)/include \
  -I../../bfd -I$(srcroot)/bfd \
  -I../../opcodes -I$(srcroot)/opcodes \
  @@INCINTL@@
ALL_CFLAGS = $(CONFIG_CFLAGS) $(CSEARCH) $(CFLAGS)
BUILD_CFLAGS = -g -O $(CSEARCH)

COMMON_DEP_CFLAGS = $(CONFIG_CFLAGS) $(CSEARCH)

LIBIBERTY_LIB = ../../libiberty/libiberty.a
BFD_LIB = ../../bfd/libbfd.a
@@PLUGINS_TRUE@@LIBDL = @@lt_cv_dlopen_libs@@
OPCODES_LIB = ../../opcodes/libopcodes.a
LIBINTL = @@LIBINTL@@
LIBINTL_DEP = @@LIBINTL_DEP@@
CONFIG_LIBS = @@LIBS@@
LIBDEPS = $(BFD_LIB) $(OPCODES_LIB) $(LIBINTL_DEP) $(LIBIBERTY_LIB) \
	$(SIM_EXTRA_LIBDEPS)
EXTRA_LIBS = $(BFD_LIB) $(OPCODES_LIB) $(LIBINTL) $(LIBIBERTY_LIB) \
	$(CONFIG_LIBS) $(SIM_EXTRA_LIBS) $(LIBDL)

LIB_OBJS = callback.o syscall.o targ-map.o version.o $(SIM_OBJS)

RUNTESTFLAGS =

callback_h = $(srcroot)/include/gdb/callback.h
remote_sim_h = $(srcroot)/include/gdb/remote-sim.h

all: $(SIM_EXTRA_ALL) libsim.a run$(EXEEXT) .gdbinit

libsim.a: $(LIB_OBJS)
	rm -f libsim.a
	$(AR) $(AR_FLAGS) libsim.a $(LIB_OBJS)
	$(RANLIB) libsim.a

run$(EXEEXT): $(SIM_RUN_OBJS) libsim.a $(LIBDEPS)
	$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o run$(EXEEXT) \
	  $(SIM_RUN_OBJS) libsim.a $(EXTRA_LIBS)

# FIXME: Ideally, callback.o and friends live in a library outside of
# both the gdb and simulator source trees (e.g. devo/remote.  Not
# devo/libremote because this directory would contain more than just
# a library).

gentmap: Makefile $(srccom)/gentmap.c targ-vals.def
	$(CC_FOR_BUILD) $(srccom)/gentmap.c -o gentmap $(BUILD_CFLAGS) $(NL_TARGET)

targ-vals.h targ-map.c: stamp-tvals
stamp-tvals: gentmap
	rm -f tmp-tvals.h tmp-tmap.c
	./gentmap -h >tmp-tvals.h
	$(SHELL) $(srcroot)/move-if-change tmp-tvals.h targ-vals.h
	./gentmap -c >tmp-tmap.c
	$(SHELL) $(srcroot)/move-if-change tmp-tmap.c targ-map.c
	touch stamp-tvals

version.c: Makefile $(srccom)/create-version.sh ../../bfd/version.h ../../gdb/version.in
	$(SHELL) $(srccom)/create-version.sh $(srcsim) $(host_alias) $(target_alias) version.c

#
# Rules for building sim-* components.  Triggered by listing the corresponding
# .o file in the list of simulator targets.
#

sim_main_headers = \
	sim-main.h \
	$(sim-assert_h) \
	$(sim-base_h) \
	$(sim-cpu_h) \
	$(sim-engine_h) \
	$(sim-events_h) \
	$(sim-memopt_h) \
	$(sim-model_h) \
	$(sim-module_h) \
	$(sim-profile_h) \
	$(sim-trace_h) \
	$(sim-watch_h) \
	$(sim-basics_h) \
	$(SIM_EXTRA_DEPS)

# Exported version of sim_main_headers.
SIM_MAIN_DEPS = \
	$(sim_main_headers)

sim-alu_h = $(srccom)/sim-alu.h
sim-arange_h = $(srccom)/sim-arange.h \
		$(srccom)/sim-arange.c
sim-assert_h = $(srccom)/sim-assert.h
sim-base_h = $(srccom)/sim-base.h \
		$(sim-module_h) \
		$(sim-trace_h) \
		$(sim-core_h) \
		$(sim-events_h) \
		$(sim-profile_h) \
		$(sim-model_h) \
		$(sim-io_h) \
		$(sim-engine_h) \
		$(sim-watch_h) \
		$(sim-memopt_h) \
		$(sim-cpu_h)
sim-basics_h = $(srccom)/sim-basics.h \
		../common/cconfig.h \
		tconfig.h \
		$(sim-config_h) \
		$(callback_h) \
		$(sim-inline_h) \
		$(sim-types_h) \
		$(sim-bits_h) \
		$(sim-endian_h) \
		$(sim-signal_h) \
		$(sim-arange_h) \
		$(sim-utils_h)
sim-bits_h = $(srccom)/sim-bits.h \
		$(srccom)/sim-bits.c
sim-config_h = $(srccom)/sim-config.h
sim-core_h = $(srccom)/sim-core.h
sim-cpu_h = $(srccom)/sim-cpu.h
sim-endian_h = $(srccom)/sim-endian.h \
		$(srccom)/sim-endian.c
sim-engine_h = $(srccom)/sim-engine.h
sim-events_h = $(srccom)/sim-events.h
sim-fpu_h = $(srccom)/sim-fpu.h
sim-hw_h = $(srccom)/sim-hw.h
sim-inline_h = $(srccom)/sim-inline.h
sim-io_h = $(srccom)/sim-io.h
sim-memopt_h = $(srccom)/sim-memopt.h
sim-model_h = $(srccom)/sim-model.h
sim-module_h = $(srccom)/sim-module.h
sim-n-bits_h = $(srccom)/sim-n-bits.h
sim-n-core_h = $(srccom)/sim-n-core.h
sim-n-endian_h = $(srccom)/sim-n-endian.h
sim-options_h = $(srccom)/sim-options.h
sim-profile_h = $(srccom)/sim-profile.h
sim-signal_h = $(srccom)/sim-signal.h
sim-trace_h = $(srccom)/sim-trace.h
sim-types_h = $(srccom)/sim-types.h
sim-utils_h = $(srccom)/sim-utils.h
sim-watch_h = $(srccom)/sim-watch.h

hw-alloc_h = $(srccom)/hw-alloc.h
hw-base_h = $(srccom)/hw-base.h
hw-device_h = $(srccom)/hw-device.h
hw-events_h = $(srccom)/hw-events.h
hw-handles_h = $(srccom)/hw-handles.h
hw-instances_h = $(srccom)/hw-instances.h
hw-ports_h = $(srccom)/hw-ports.h
hw-properties_h = $(srccom)/hw-properties.h
hw-tree_h = $(srccom)/hw-tree.h

hw_main_headers = \
	$(srccom)/hw-main.h \
	$(hw-alloc_h) \
	$(hw-base_h) \
	$(hw-device_h) \
	$(hw-events_h) \
	$(hw-instances_h) \
	$(hw-handles_h) \
	$(hw-ports_h) \
	$(hw-properties_h) \

#
# Dependency tracking.  Most of this is conditional on GNU Make being
# found by configure; if GNU Make is not found, we fall back to a
# simpler scheme.
#

@@GMAKE_TRUE@@ifeq ($(DEPMODE),depmode=gcc3)
# Note that we put the dependencies into a .Tpo file, then move them
# into place if the compile succeeds.  We need this because gcc does
# not atomically write the dependency output file.
@@GMAKE_TRUE@@override COMPILE.post = -c -o $@@ -MT $@@ -MMD -MP \
@@GMAKE_TRUE@@	-MF $(DEPDIR)/$(basename $(@@F)).Tpo
@@GMAKE_TRUE@@override POSTCOMPILE = @@mv $(DEPDIR)/$(basename $(@@F)).Tpo \
@@GMAKE_TRUE@@	$(DEPDIR)/$(basename $(@@F)).Po
@@GMAKE_TRUE@@else
@@GMAKE_TRUE@@override COMPILE.pre = source='$<' object='$@@' libtool=no \
@@GMAKE_TRUE@@	DEPDIR=$(DEPDIR) $(DEPMODE) $(depcomp) $(CC)
# depcomp handles atomicity for us, so we don't need a postcompile
# step.
@@GMAKE_TRUE@@override POSTCOMPILE =
@@GMAKE_TRUE@@endif

all_object_files = $(LIB_OBJS) $(SIM_RUN_OBJS)
generated_files = \
	$(SIM_EXTRA_DEPS) \
	hw-config.h \
	targ-map.c \
	targ-vals.h \
	version.c

# Ensure that generated files are created early.  Use order-only
# dependencies if available.  They require GNU make 3.80 or newer,
# and the .VARIABLES variable was introduced at the same time.
@@GMAKE_TRUE@@ifdef .VARIABLES
@@GMAKE_TRUE@@$(all_object_files): | $(generated_files)
@@GMAKE_TRUE@@else
$(all_object_files) : $(generated_files)
@@GMAKE_TRUE@@endif

# Dependencies.
@@GMAKE_TRUE@@-include $(patsubst %.o, $(DEPDIR)/%.Po, $(all_object_files))

BUILT_SRC_FROM_COMMON= \
	sim-inline.c

sim-inline.c: $(srccom)/sim-inline.c
	rm -f $@@ tmp-$@@
	echo "# 1 \"$(srccom)/$@@\"" > tmp-$@@
	cat $(srccom)/$@@ >> tmp-$@@
	$(SHELL) $(srcdir)/../../move-if-change tmp-$@@ $@@

# FIXME This is one very simple-minded way of generating the file hw-config.h
hw-config.h: Makefile.in $(srccom)/Make-common.in config.status Makefile
	rm -f tmp-hw.h
	echo "/* generated by Makefile */" > tmp-hw.h
	sim_hw="$(SIM_HW)"; \
	for hw in $$sim_hw ; do \
	  echo "extern const struct hw_descriptor dv_$${hw}_descriptor[];" ; \
	done >> tmp-hw.h
	echo "const struct hw_descriptor *hw_descriptors[] = {" >> tmp-hw.h
	sim_hw="$(SIM_HW)"; \
	for hw in $$sim_hw ; do \
	  echo "  dv_$${hw}_descriptor," ; \
	done >> tmp-hw.h
	echo "  NULL," >> tmp-hw.h
	echo "};" >> tmp-hw.h
	mv tmp-hw.h hw-config.h

test-hw-events: $(srccom)/hw-events.c libsim.a
	$(CC) $(ALL_CFLAGS) -DMAIN -o test-hw-events$(EXEEXT) \
		$(srccom)/hw-events.c libsim.a $(EXTRA_LIBS)

# CGEN support.

# For use in Makefile.in for cpu-specific files.
CGEN_MAIN_CPU_DEPS = \
	$(SIM_MAIN_DEPS) \
	$(srccom)/cgen-ops.h \
	$(srccom)/cgen-mem.h

# Support targets.

install: install-common $(SIM_EXTRA_INSTALL)

install-common: installdirs
	n=`echo run | sed '$(program_transform_name)'`; \
	$(INSTALL_PROGRAM) run$(EXEEXT) $(DESTDIR)$(bindir)/$$n$(EXEEXT)
	n=`echo libsim.a | sed s/libsim.a/lib$(target_alias)-sim.a/`; \
	$(INSTALL_DATA) libsim.a $(DESTDIR)$(libdir)/$$n ; \
	( cd $(DESTDIR)$(libdir) ; $(RANLIB) $$n )

installdirs:
	$(SHELL) $(srcdir)/../../mkinstalldirs $(DESTDIR)$(bindir)
	$(SHELL) $(srcdir)/../../mkinstalldirs $(DESTDIR)$(libdir)

check:
	cd ../testsuite && $(MAKE) check RUNTESTFLAGS="$(RUNTESTFLAGS)"

info:
clean-info:
install-info:

.NOEXPORT:
MAKEOVERRIDES=

tags etags: TAGS

# Macros like EXTERN_SIM_CORE confuse tags.
# And the sim-n-foo.h files create functions that can't be found either.
TAGS: force
	cd $(srcdir) && \
	etags --regex '/^\([[:lower:]_]+\) (/\1/' --regex '/^\/[*] TAGS: .*/' \
		*.[ch] ../common/*.[ch]

clean: $(SIM_EXTRA_CLEAN)
	rm -f *.[oa] *~ core
	rm -f run$(EXEEXT) libsim.a
	rm -f gentmap targ-map.c targ-vals.h stamp-tvals
	if [ ! -f Make-common.in ] ; then \
		rm -f $(BUILT_SRC_FROM_COMMON) ; \
	fi
	rm -f tmp-mloop.hin tmp-mloop.h tmp-mloop.cin tmp-mloop.c

distclean mostlyclean maintainer-clean realclean: clean $(SIM_EXTRA_DISTCLEAN)
	rm -f TAGS
	rm -f Makefile config.cache config.log config.status .gdbinit
	rm -f tconfig.h config.h stamp-h
	rm -f targ-vals.def

.c.o:
	$(COMPILE) $<
	$(POSTCOMPILE)

# Dummy target to force execution of dependent targets.
force:

Makefile: Makefile.in $(srccom)/Make-common.in config.status
	CONFIG_HEADERS= $(SHELL) ./config.status

config.status: configure
	$(SHELL) ./config.status --recheck

config.h: stamp-h ; @@true
stamp-h: config.in config.status
	CONFIG_FILES= CONFIG_HEADERS=config.h:config.in $(SHELL) ./config.status

.gdbinit: # config.status $(srccom)/gdbinit.in
	CONFIG_FILES=$@@:../common/gdbinit.in CONFIG_HEADERS= $(SHELL) ./config.status


# CGEN support

CGENDIR = @@cgendir@@
CGEN = "`if [ -f ../../guile/libguile/guile ]; then echo ../../guile/libguile/guile; else echo guile ; fi` -l $(CGENDIR)/guile.scm -s"
CGENFLAGS = -v
CGEN_CPU_DIR = $(CGENDIR)/cpu

# Most ports use the files here instead of cgen/cpu.
CPU_DIR = $(srcroot)/cpu

CGEN_READ_SCM = $(CGENDIR)/sim.scm
CGEN_ARCH_SCM = $(CGENDIR)/sim-arch.scm
CGEN_CPU_SCM = $(CGENDIR)/sim-cpu.scm $(CGENDIR)/sim-model.scm
CGEN_DECODE_SCM = $(CGENDIR)/sim-decode.scm
CGEN_DESC_SCM = $(CGENDIR)/desc.scm $(CGENDIR)/desc-cpu.scm

# Various choices for which cpu specific files to generate.
# These are passed to cgen.sh in the "extrafiles" argument.
CGEN_CPU_EXTR = /extr/
CGEN_CPU_READ = /read/
CGEN_CPU_WRITE = /write/
CGEN_CPU_SEM = /sem/
CGEN_CPU_SEMSW = /semsw/

CGEN_FLAGS_TO_PASS = \
	CGEN='$(CGEN)' \
	CGENFLAGS="$(CGENFLAGS)"

# We store the generated files in the source directory until we decide to
# ship a Scheme interpreter with gdb/binutils.  Maybe we never will.

cgen-arch: force
	$(SHELL) $(srccom)/cgen.sh arch $(srcdir) \
		$(CGEN) $(CGENDIR) "$(CGENFLAGS)" \
		$(arch) "$(FLAGS)" ignored "$(isa)" $(mach) ignored \
		$(archfile) ignored

cgen-cpu: force
	$(SHELL) $(srccom)/cgen.sh cpu $(srcdir) \
		$(CGEN) $(CGENDIR) "$(CGENFLAGS)" \
		$(arch) "$(FLAGS)" $(cpu) "$(isa)" $(mach) "$(SUFFIX)" \
		$(archfile) "$(EXTRAFILES)"

cgen-defs: force
	$(SHELL) $(srccom)/cgen.sh defs $(srcdir) \
		$(CGEN) $(CGENDIR) "$(CGENFLAGS)" \
		$(arch) "$(FLAGS)" $(cpu) "$(isa)" $(mach) "$(SUFFIX)" \
		$(archfile) ignored

cgen-decode: force
	$(SHELL) $(srccom)/cgen.sh decode $(srcdir) \
		$(CGEN) $(CGENDIR) "$(CGENFLAGS)" \
		$(arch) "$(FLAGS)" $(cpu) "$(isa)" $(mach) "$(SUFFIX)" \
		$(archfile) "$(EXTRAFILES)"

cgen-cpu-decode: force
	$(SHELL) $(srccom)/cgen.sh cpu-decode $(srcdir) \
		$(CGEN) $(CGENDIR) "$(CGENFLAGS)" \
		$(arch) "$(FLAGS)" $(cpu) "$(isa)" $(mach) "$(SUFFIX)" \
		$(archfile) "$(EXTRAFILES)"

cgen-desc: force
	$(SHELL) $(srccom)/cgen.sh desc $(srcdir) \
		$(CGEN) $(CGENDIR) "$(CGENFLAGS)" \
		$(arch) "$(FLAGS)" $(cpu) "$(isa)" $(mach) "$(SUFFIX)" \
		$(archfile) ignored $(opcfile)

## End COMMON_POST_CONFIG_FRAG
@


1.47
log
@move version.in from gdb/common back to gdb

This reverts part of the earlier version.in change.  It moves
version.in back to the gdb directory.  This works around the CVS bug
we've found.

gdb
	* Makefile.in (version.c): Use version.in, not
	common/version.in.
	* common/create-version.sh: Likewise.
	* common/version.in: Move...
	* version.in: ...here.
gdb/doc
	* Makefile.in (version.subst): Use version.in, not
	common/version.in.
	* gdbint.texinfo (Versions and Branches, Releasing GDB):
	Likewise.
gdb/gdbserver
	* Makefile.in (version.c): Use version.in, not
	common/version.in.
sim/common
	* Make-common.in (version.c): Use version.in, not
	common/version.in.
	* create-version.sh: Likewise.
sim/ppc:
	* Make-common.in (version.c): Use version.in, not
	common/version.in.
@
text
@d41 1
d305 1
a305 1
	$(SHELL) $(srccom)/create-version.sh $(srccom) version.c
@


1.46
log
@Adapt sim to new version number & date locations.

This change is required now that gdb/version.in has been moved to
gdb/common/version.in and now that the date needs to be fetched
from bfd/version.h.

sim/common/ChangeLog:

        * create-version.sh: New script. Adapted from
        gdb/commong/create-version.sh.
        * Make-common.in (version.c): Update rule dependencies,
        and re-implement using create-version.sh.

sim/ppc/ChangeLog:

        * Makefile.in (srccom): New variable.
        (version.c): Update rule dependencies, and re-implement using
        sim/common/create-version.sh.
@
text
@d303 1
a303 1
version.c: Makefile $(srccom)/create-version.sh ../../bfd/version.h ../../gdb/common/version.in
@


1.45
log
@Update years in copyright notice for the GDB files.

Two modifications:
  1. The addition of 2013 to the copyright year range for every file;
  2. The use of a single year range, instead of potentially multiple
     year ranges, as approved by the FSF.
@
text
@d303 2
a304 6
version.c: Makefile ../../gdb/version.in
	rm -f version.c-tmp version.c
	echo '#include "version.h"' >> version.c-tmp
	echo 'const char version[] = "'"`sed q ${srcdir}/../../gdb/version.in`"'";' >> version.c-tmp
	mv version.c-tmp version.c

@


1.44
log
@Fix sim build when configured with --enable-plugins

	* common/Make-common.in: Use lt_cv_dlopen_libs under PLUGINS
	condition.
	* common/acinclude.m4: Define lt_cv_dlopen_libs.
	* arm/configure: Regenerate.
	* avr/configure: Regenerate.
	* bfin/configure: Regenerate.
	* common/configure: Regenerate.
	* cr16/configure: Regenerate.
	* cris/configure: Regenerate.
	* d10v/configure: Regenerate.
	* erc32/configure: Regenerate.
	* frv/configure: Regenerate.
	* h8300/configure: Regenerate.
	* igen/configure: Regenerate.
	* iq2000/configure: Regenerate.
	* lm32/configure: Regenerate.
	* m32c/configure: Regenerate.
	* m32r/configure: Regenerate.
	* m68hc11/configure: Regenerate.
	* mcore/configure: Regenerate.
	* microblaze/configure: Regenerate.
	* mips/configure: Regenerate.
	* mn10300/configure: Regenerate.
	* moxie/configure: Regenerate.
	* ppc/configure: Regenerate.
	* rl78/configure: Regenerate.
	* rx/configure: Regenerate.
	* sh/configure: Regenerate.
	* sh64/configure: Regenerate.
	* testsuite/configure: Regenerate.
	* v850/configure: Regenerate.
@
text
@d2 1
a2 2
# Copyright 1997-2001, 2004-2005, 2007-2012 Free Software Foundation,
# Inc.
@


1.43
log
@sim: use character classes rather than ranges

A-Z ranges don't work in all locales, so use character classes instead.

Signed-off-by: Mike Frysinger <vapier@@gentoo.org>
@
text
@d61 1
d259 1
d267 1
a267 1
	$(CONFIG_LIBS) $(SIM_EXTRA_LIBS)
@


1.42
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d521 1
a521 1
	etags --regex '/^\([a-z_]+\) (/\1/' --regex '/^\/[*] TAGS: .*/' \
@


1.41
log
@Work around Solaris bourne shell limitation when building the sim

Building the sim on a sparc-solaris 2.8 machine fails when configured
with no extra sim hardware:

> for hw in  ; do \
>         echo "extern const struct hw_descriptor
>         dv_${hw}_descriptor[];" ; \
>       done >> tmp-hw.h
> echo 'const char version[] = "'"`sed q
> /[...]/../../gdb/version.in`"'";'
> >> version.c-tmp
> /bin/sh: -c: line 1: syntax error near unexpected token `;'
> /bin/sh: -c: line 1: `for hw in  ; do \'
> make[3]: *** [hw-config.h] Error 2

The same thing happens with the version of bash that we got from
Sun as well (which is very old: 2.03.0(1)-release).

The problems comes from the fact that both shells are buggy, and
reject the following script:

    for hw in ; do
      [...]
    done

The above is what sim/common/Makefile.in tries to execute when
generating hw-config.h.

In order to allow users to build out of the box on these machines,
this patch works around this bug.  It does rely on the fact that
none of the tokens in SIM_HW contain whitespaces.

sim/common/ChangeLog:

        * Make-common.in (hw-config.h): Work around bug in Solaris 2.8
        system bourne shell.
@
text
@d2 2
a3 2
# Copyright 1997, 1998, 1999, 2000, 2001, 2004, 2005, 2007, 2008, 2009, 2010,
# 2011 Free Software Foundation, Inc.
@


1.40
log
@sim: generate build dependencies on the fly

Lift the code that GDB is using to generate dependencies on the fly and
port it over to the sim.  Now people shouldn't have to manually maintain
these in their Makefile's.

Signed-off-by: Mike Frysinger <vapier@@gentoo.org>
@
text
@d465 2
a466 1
	for hw in $(SIM_HW) ; do \
d470 2
a471 1
	for hw in $(SIM_HW) ; do \
@


1.40.2.1
log
@Work around Solaris bourne shell limitation when building the sim

Building the sim on a sparc-solaris 2.8 machine fails when configured
with no extra sim hardware:

> for hw in  ; do \
>         echo "extern const struct hw_descriptor
>         dv_${hw}_descriptor[];" ; \
>       done >> tmp-hw.h
> echo 'const char version[] = "'"`sed q
> /[...]/../../gdb/version.in`"'";'
> >> version.c-tmp
> /bin/sh: -c: line 1: syntax error near unexpected token `;'
> /bin/sh: -c: line 1: `for hw in  ; do \'
> make[3]: *** [hw-config.h] Error 2

The same thing happens with the version of bash that we got from
Sun as well (which is very old: 2.03.0(1)-release).

The problems comes from the fact that both shells are buggy, and
reject the following script:

    for hw in ; do
      [...]
    done

The above is what sim/common/Makefile.in tries to execute when
generating hw-config.h.

In order to allow users to build out of the box on these machines,
this patch works around this bug.  It does rely on the fact that
none of the tokens in SIM_HW contain whitespaces.

sim/common/ChangeLog:

        * Make-common.in (hw-config.h): Work around bug in Solaris 2.8
        system bourne shell.
@
text
@d465 1
a465 2
	sim_hw="$(SIM_HW)"; \
	for hw in $$sim_hw ; do \
d469 1
a469 2
	sim_hw="$(SIM_HW)"; \
	for hw in $$sim_hw ; do \
@


1.40.2.2
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d2 2
a3 2
# Copyright 1997-2001, 2004-2005, 2007-2012 Free Software Foundation,
# Inc.
@


1.39
log
@sim: start a unified sim_do_command

Since sim_do_command for many people simply calls sim_args_command, start
a unified version of it.  For people who handle their own options, they
could switch to this by using sim_add_option_table instead.

Signed-off-by: Mike Frysinger <vapier@@gentoo.org>
@
text
@d38 1
a38 1
VPATH = @@srcdir@@
d112 11
a122 1
DEP = $(srcroot)/mkdep
a284 3
run.o: $(srccom)/run.c config.h tconfig.h $(remote_sim_h) $(callback_h)
	$(CC) -c $(srccom)/run.c $(ALL_CFLAGS)

a289 8
callback.o: $(srccom)/callback.c config.h tconfig.h $(callback_h) targ-vals.h
	$(CC) -c $(srccom)/callback.c $(ALL_CFLAGS)

syscall.o: $(srccom)/syscall.c config.h tconfig.h $(callback_h) targ-vals.h
	$(CC) -c $(srccom)/syscall.c $(ALL_CFLAGS)

targ-map.o: targ-map.c targ-vals.h

a306 1
version.o: version.c $(version_h)
d410 41
a450 2
# FIXME: If this complicated way of building .o files from ../common is
# necessary, the reason should be documented here.
a454 54
sim-abort.o: $(srccom)/sim-abort.c \
	  $(SIM_EXTRA_DEPS)
	$(CC) -c $(srccom)/sim-abort.c $(ALL_CFLAGS)

sim-arange.o: $(srccom)/sim-arange.c $(sim-arange_h) $(SIM_EXTRA_DEPS)
	$(CC) -c $(srccom)/sim-arange.c $(ALL_CFLAGS)

sim-bits.o: $(srccom)/sim-bits.c $(sim-bits_h) $(sim-n-bits_h) \
	  $(SIM_EXTRA_DEPS)
	$(CC) -c $(srccom)/sim-bits.c $(ALL_CFLAGS)

sim-command.o: $(srccom)/sim-command.c $(sim_main_headers)
	$(CC) -c $(srccom)/sim-command.c $(ALL_CFLAGS)

sim-config.o: $(srccom)/sim-config.c $(sim-config_h) sim-main.h \
	  $(SIM_EXTRA_DEPS)
	$(CC) -c $(srccom)/sim-config.c $(ALL_CFLAGS)

sim-core.o: $(srccom)/sim-core.c $(sim_main_headers) \
	  $(sim-core_h) $(sim-n-core_h)
	$(CC) -c $(srccom)/sim-core.c $(ALL_CFLAGS)

sim-cpu.o: $(srccom)/sim-cpu.c $(sim_main_headers)
	$(CC) -c $(srccom)/sim-cpu.c $(ALL_CFLAGS)

sim-endian.o: $(srccom)/sim-endian.c $(sim-endian_h) $(sim-n-endian_h)
	$(CC) -c $(srccom)/sim-endian.c $(ALL_CFLAGS)

sim-engine.o: $(srccom)/sim-engine.c $(sim_main_headers) $(sim-engine_h)
	$(CC) -c $(srccom)/sim-engine.c $(ALL_CFLAGS)

sim-events.o: $(srccom)/sim-events.c $(sim-events_h) sim-main.h \
	  $(SIM_EXTRA_DEPS)
	$(CC) -c $(srccom)/sim-events.c $(ALL_CFLAGS)

sim-fpu.o: $(srccom)/sim-fpu.c $(sim-fpu_h) \
	  $(SIM_EXTRA_DEPS)
	$(CC) -c $(srccom)/sim-fpu.c $(ALL_CFLAGS)

sim-hload.o: $(srccom)/sim-hload.c $(sim-assert_h) $(remote_sim_h) \
	  $(SIM_EXTRA_DEPS)
	$(CC) -c $(srccom)/sim-hload.c $(ALL_CFLAGS)

sim-hrw.o: $(srccom)/sim-hrw.c $(sim-assert_h) $(sim_core_h) $(remote_sim_h) \
	  $(SIM_EXTRA_DEPS)
	$(CC) -c $(srccom)/sim-hrw.c $(ALL_CFLAGS)

sim-hw.o: $(srccom)/sim-hw.c $(sim_main_headers)
	$(CC) -c $(srccom)/sim-hw.c $(ALL_CFLAGS)

sim-info.o: $(srccom)/sim-info.c $(sim-assert_h) $(remote_sim_h) \
	  $(SIM_EXTRA_DEPS)
	$(CC) -c $(srccom)/sim-info.c $(ALL_CFLAGS)

a460 56
sim-io.o: $(srccom)/sim-io.c $(sim_main_headers) $(sim-io_h) $(remote_sim_h) \
	  targ-vals.h
	$(CC) -c $(srccom)/sim-io.c $(ALL_CFLAGS)

sim-memopt.o: $(srccom)/sim-memopt.c $(sim_main_headers) \
	  $(sim-io_h)
	$(CC) -c $(srccom)/sim-memopt.c $(ALL_CFLAGS)

sim-module.o: $(srccom)/sim-module.c $(sim_main_headers) \
	  $(sim-io_h)
	$(CC) -c $(srccom)/sim-module.c $(ALL_CFLAGS)

sim-options.o: $(srccom)/sim-options.c $(sim_main_headers) \
	  $(sim-options_h) $(sim-io_h)
	$(CC) -c $(srccom)/sim-options.c $(ALL_CFLAGS)

sim-reason.o: $(srccom)/sim-reason.c $(sim_main_headers) $(remote_sim_h)
	$(CC) -c $(srccom)/sim-reason.c $(ALL_CFLAGS)

sim-reg.o: $(srccom)/sim-reg.c $(sim_main_headers) $(remote_sim_h)
	$(CC) -c $(srccom)/sim-reg.c $(ALL_CFLAGS)

sim-resume.o: $(srccom)/sim-resume.c $(sim_main_headers) $(remote_sim_h)
	$(CC) -c $(srccom)/sim-resume.c $(ALL_CFLAGS)

sim-run.o: $(srccom)/sim-run.c $(sim_main_headers)
	$(CC) -c $(srccom)/sim-run.c $(ALL_CFLAGS)

sim-signal.o: $(srccom)/sim-signal.c $(sim_main_headers) $(sim-signal_h)
	$(CC) -c $(srccom)/sim-signal.c $(ALL_CFLAGS)

sim-stop.o: $(srccom)/sim-stop.c $(sim_main_headers)
	$(CC) -c $(srccom)/sim-stop.c $(ALL_CFLAGS)

sim-trace.o: $(srccom)/sim-trace.c $(sim_main_headers) \
	  $(sim-options_h) $(sim-io_h)
	$(CC) -c $(srccom)/sim-trace.c $(ALL_CFLAGS)

sim-profile.o: $(srccom)/sim-profile.c $(sim_main_headers) \
	  $(sim-options_h) $(sim-io_h)
	$(CC) -c $(srccom)/sim-profile.c $(ALL_CFLAGS)

sim-model.o: $(srccom)/sim-model.c $(sim_main_headers) \
	  $(sim-io_h)
	$(CC) -c $(srccom)/sim-model.c $(ALL_CFLAGS)

sim-utils.o: $(srccom)/sim-utils.c $(sim_main_headers)
	$(CC) -c $(srccom)/sim-utils.c $(ALL_CFLAGS)

sim-watch.o: $(srccom)/sim-watch.c $(sim_main_headers)
	$(CC) -c $(srccom)/sim-watch.c $(ALL_CFLAGS)

sim-load.o: $(srccom)/sim-load.c $(callback_h) $(sim-basics_h) $(remote_sim_h)
	$(CC) -c $(srccom)/sim-load.c $(ALL_CFLAGS)


a475 12
hw-alloc.o: $(srccom)/hw-alloc.c $(hw_main_headers)
	$(CC) -c $(srccom)/hw-alloc.c $(ALL_CFLAGS)

hw-base.o: $(srccom)/hw-base.c $(hw_main_headers) hw-config.h
	$(CC) -c $(srccom)/hw-base.c $(ALL_CFLAGS)

hw-device.o: $(srccom)/hw-device.c $(hw_main_headers)
	$(CC) -c $(srccom)/hw-device.c $(ALL_CFLAGS)

hw-events.o: $(srccom)/hw-events.c $(hw_main_headers) $(sim_main_headers)
	$(CC) -c $(srccom)/hw-events.c $(ALL_CFLAGS)

a479 37
hw-instances.o: $(srccom)/hw-instances.c $(hw_main_headers)
	$(CC) -c $(srccom)/hw-instances.c $(ALL_CFLAGS)

hw-handles.o: $(srccom)/hw-handles.c $(hw_main_headers)
	$(CC) -c $(srccom)/hw-handles.c $(ALL_CFLAGS)

hw-ports.o: $(srccom)/hw-ports.c $(hw_main_headers)
	$(CC) -c $(srccom)/hw-ports.c $(ALL_CFLAGS)

hw-properties.o: $(srccom)/hw-properties.c $(hw_main_headers)
	$(CC) -c $(srccom)/hw-properties.c $(ALL_CFLAGS)

hw-tree.o: $(srccom)/hw-tree.c $(hw_main_headers) $(hw-tree_h)
	$(CC) -c $(srccom)/hw-tree.c $(ALL_CFLAGS)

# Devices.

dv-cfi.o: $(srccom)/dv-cfi.c $(hw_main_headers) $(sim_main_headers)
	$(CC) -c $(srccom)/dv-cfi.c $(ALL_CFLAGS)

dv-core.o: $(srccom)/dv-core.c $(hw_main_headers) $(sim_main_headers)
	$(CC) -c $(srccom)/dv-core.c $(ALL_CFLAGS)

dv-glue.o: $(srccom)/dv-glue.c $(hw_main_headers) $(sim_main_headers)
	$(CC) -c $(srccom)/dv-glue.c $(ALL_CFLAGS)

dv-pal.o: $(srccom)/dv-pal.c $(hw_main_headers) $(sim_main_headers)
	$(CC) -c $(srccom)/dv-pal.c $(ALL_CFLAGS)

dv-sockser.o: $(srccom)/dv-sockser.h $(sim_main_headers)
	$(CC) -c $(srccom)/dv-sockser.c $(ALL_CFLAGS)


nrun.o: $(srccom)/nrun.c config.h tconfig.h $(remote_sim_h) $(callback_h) \
	  $(sim_main_headers)
	$(CC) -c $(srccom)/nrun.c $(ALL_CFLAGS)

a487 23
cgen-run.o: $(srccom)/cgen-run.c $(sim_main_headers)
	$(CC) -c $(srccom)/cgen-run.c $(ALL_CFLAGS)

cgen-scache.o: $(srccom)/cgen-scache.c $(sim_main_headers)
	$(CC) -c $(srccom)/cgen-scache.c $(ALL_CFLAGS)

cgen-trace.o: $(srccom)/cgen-trace.c $(sim_main_headers)
	$(CC) -c $(srccom)/cgen-trace.c $(ALL_CFLAGS)

cgen-fpu.o: $(srccom)/cgen-fpu.c $(sim_main_headers) $(sim-fpu_h)
	$(CC) -c $(srccom)/cgen-fpu.c $(ALL_CFLAGS)

cgen-accfp.o: $(srccom)/cgen-accfp.c $(sim_main_headers) $(sim-fpu_h)
	$(CC) -c $(srccom)/cgen-accfp.c $(ALL_CFLAGS)

cgen-utils.o: $(srccom)/cgen-utils.c $(sim_main_headers) \
	  $(srccom)/cgen-mem.h $(srccom)/cgen-ops.h $(srccom)/cgen-engine.h
	$(CC) -c $(srccom)/cgen-utils.c $(ALL_CFLAGS)

cgen-par.o: $(srccom)/cgen-par.c $(sim_main_headers) \
	  $(srccom)/cgen-mem.h $(srccom)/cgen-par.h
	$(CC) -c $(srccom)/cgen-par.c $(ALL_CFLAGS)

d538 2
a539 1
	$(CC) -c $(ALL_CFLAGS) $<
@


1.38
log
@sim: cfi: new flash device simulation

This simulates a CFI flash.  Its pretty configurable via the device
tree.  For now, only basic read/write/erase operations are supported
for the Intel command set, but it's easy enough to extend support.
It's certainly enough to trick Das U-Boot into using it for probing,
reading, writing, and erasing.

Signed-off-by: Mike Frysinger <vapier@@gentoo.org>
@
text
@d165 1
d429 3
@


1.37
log
@run copyright.sh for 2011.
@
text
@d578 3
@


1.36
log
@	* Make-common.in (CGEN_SIM_DEPS): Define.
	(CGEN_INCLUDE_DEPS): Use it.
	(CGEN_MAIN_CPU_DEPS): Simplify.
@
text
@d2 2
a3 2
# Copyright 1997, 1998, 1999, 2000, 2001, 2004, 2005, 2007, 2008, 2009, 2010
# Free Software Foundation, Inc.
@


1.35
log
@Update copyright notices to add year 2010.
@
text
@d184 11
d197 1
a197 2
	$(srccom)/cgen-cpu.h \
	$(srccom)/cgen-defs.h \
a198 3
	$(srccom)/cgen-scache.h \
	$(srccom)/cgen-sim.h \
	$(srccom)/cgen-trace.h \
a599 1
	$(CGEN_INCLUDE_DEPS) \
d601 1
a601 3
	$(srccom)/cgen-mem.h \
	$(srccom)/cgen-par.h \
	$(srccom)/cgen-fpu.h
@


1.34
log
@2009-10-02  Ralf Corsepius <ralf.corsepius@@rtems.org>

	* Make-common.in: Add datarootdir.
@
text
@d2 1
a2 1
# Copyright 1997, 1998, 1999, 2000, 2001, 2004, 2005, 2007, 2008, 2009
@


1.33
log
@* common/Make-common.in (CPU_DIR): Define.
* iq2000/Makefile.in (stamp-arch): Use $(CPU_DIR) instead of $(CGEN_CPU_DIR).
(stamp-cpu): Ditto.
* m32r/Makefile.in (stamp-arch): Use $(CPU_DIR) instead of $(CGEN_CPU_DIR).
(stamp-cpu, stamp-xcpu, stamp-2cpu): Ditto.
@
text
@d55 1
@


1.32
log
@	* Make-common.in (CGEN_CPU_EXTR,CGEN_CPU_READ): Pass canonical
	identifiers for file types rather than encoding internal
	implementation details of cgen.sh.
	(CGEN_CPU_WRITE,CGEN_CPU_SEM,CGEN_CPU_SEMSW): Ditto.
	* cgen.sh: Add support for parallel makes.
	Rewrite cpu/decode handling to avoid generating "extrafiles" twice.
@
text
@d697 3
@


1.31
log
@        Update the copyright notice of some of the files I missed
        in the previous copyright update.
@
text
@d704 6
a709 5
CGEN_CPU_EXTR = -E tmp-ext.c1
CGEN_CPU_READ = -R tmp-read.c1
CGEN_CPU_WRITE = -W tmp-write.c1
CGEN_CPU_SEM = -S tmp-sem.c1
CGEN_CPU_SEMSW = -X tmp-semsw.c1
@


1.30
log
@	* Make-common.in (run$(EXEEXT)): Add LDFLAGS.
@
text
@d2 1
a2 1
# Copyright 1997, 1998, 1999, 2000, 2001, 2004, 2005, 2007, 2008
@


1.29
log
@sim:
2008-06-06  Vladimir Prus  <vladimir@@codesourcery.com>
            Daniel Jacobowitz  <dan@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* cris/configure: Regenerate.

sim/common:
2008-06-06  Vladimir Prus  <vladimir@@codesourcery.com>
            Daniel Jacobowitz  <dan@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* aclocal.m4: Include ../../config/acx.m4.
	* common.m4: Use ACX_PKGVERSION and ACX_BUGURL.
	* configure, config.in: Regenerate.
	* Make-common.in (LIB_OBJS): Add version.o.
	(version.c, version.o): New rules.
	* run.c: Include version.h.
	(usage): Add help parameter. Print output either to stdout or
	stderr depending on that parameter.
	(print_version): New.
	(main): Check for --help and --version.
	* run-sim.h (sim_target_display_usage): Add help parameter.
	* version.h: New.

sim/arm:
2008-06-06  Vladimir Prus  <vladimir@@codesourcery.com>
            Daniel Jacobowitz  <dan@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* configure: Regenerate.
	* wrapper.c (sim_target_display_usage): Add help parameter.

sim/cr16:
2008-06-06  Vladimir Prus  <vladimir@@codesourcery.com>
            Daniel Jacobowitz  <dan@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* configure: Regenerate.

sim/d10v:
2008-06-06  Vladimir Prus  <vladimir@@codesourcery.com>
            Daniel Jacobowitz  <dan@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* configure: Regenerate.

sim/erc32:
2008-06-06  Vladimir Prus  <vladimir@@codesourcery.com>
            Daniel Jacobowitz  <dan@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* configure: Regenerate.

sim/frv:
2008-06-06  Vladimir Prus  <vladimir@@codesourcery.com>
            Daniel Jacobowitz  <dan@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* configure: Regenerate.

sim/h8300:
2008-06-06  Vladimir Prus  <vladimir@@codesourcery.com>
            Daniel Jacobowitz  <dan@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* configure: Regenerate.

sim/iq2000:
2008-06-06  Vladimir Prus  <vladimir@@codesourcery.com>
            Daniel Jacobowitz  <dan@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* configure: Regenerate.

sim/m32c:
2008-06-06  Vladimir Prus  <vladimir@@codesourcery.com>
            Daniel Jacobowitz  <dan@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* configure: Regenerate.

sim/m32r:
2008-06-06  Vladimir Prus  <vladimir@@codesourcery.com>
            Daniel Jacobowitz  <dan@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* configure: Regenerate.

sim/m68hc11:
2008-06-06  Vladimir Prus  <vladimir@@codesourcery.com>
            Daniel Jacobowitz  <dan@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* configure: Regenerate.

sim/mcore:
2008-06-06  Vladimir Prus  <vladimir@@codesourcery.com>
            Daniel Jacobowitz  <dan@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* configure: Regenerate.

sim/mips:
2008-06-06  Vladimir Prus  <vladimir@@codesourcery.com>
            Daniel Jacobowitz  <dan@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* configure: Regenerate.

sim/mn10300:
2008-06-06  Vladimir Prus  <vladimir@@codesourcery.com>
            Daniel Jacobowitz  <dan@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* configure: Regenerate.

sim/ppc:
2008-06-06  Vladimir Prus  <vladimir@@codesourcery.com>
            Daniel Jacobowitz  <dan@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* configure.ac: Use ACX_PKGVERSION and ACX_BUGURL.
	* configure, config.in: Regenerated.
	* Makefile.in (LIB_OBJ): Add version.o.
	(version.c, version.o): New rules.
	* psim.c (psim_usage): Add help parameter.  Print the bug URL.
	Exit with code 0 for help.
	(psim_options): Update calls to psim_usage.  Handle --help and
	--version.
	* psim.h (psim_usage): Update prototype.
	* main.c (main): Update psim_usage call.

sim/sh:
2008-06-06  Vladimir Prus  <vladimir@@codesourcery.com>
            Daniel Jacobowitz  <dan@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* configure: Regenerate.

sim/sh64:
2008-06-06  Vladimir Prus  <vladimir@@codesourcery.com>
            Daniel Jacobowitz  <dan@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* configure: Regenerate.

sim/v850:
2008-06-06  Vladimir Prus  <vladimir@@codesourcery.com>
            Daniel Jacobowitz  <dan@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* configure: Regenerate.
@
text
@d263 1
a263 1
	$(CC) $(ALL_CFLAGS) -o run$(EXEEXT) \
@


1.28
log
@	Updated copyright notices for most files.
@
text
@d248 1
a248 1
LIB_OBJS = callback.o syscall.o targ-map.o $(SIM_OBJS)
d294 8
@


1.27
log
@        Switch the license of all files explicitly copyright the FSF
        to GPLv3.
@
text
@d2 1
a2 1
# Copyright 1997, 1998, 1999, 2000, 2001, 2004, 2005, 2007
@


1.26
log
@Copyright updates for 2007.
@
text
@d8 1
a8 1
# the Free Software Foundation; either version 2 of the License, or
d10 1
a10 1
# 
d15 1
a15 1
# 
d17 1
a17 2
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
@


1.25
log
@Configury changes: update src repository (binutils, gdb, and rda) to use
config/gettext-sister.m4 instead of the old gettext.m4.  Regenerate all
affected autotools files.  Include intl in gdb releases again.
@
text
@d2 1
a2 1
# Copyright 1997, 1998, 1999, 2000, 2001, 2004, 2005
@


1.24
log
@	* Make-common.in (LIBDEPS): Correctly use INTLDEPS for dependency
	check.
@
text
@d232 1
a232 1
  -I../../intl -I$(srcroot)/intl
d241 2
a242 2
INTLLIBS = @@INTLLIBS@@
INTLDEPS = @@INTLDEPS@@
d244 1
a244 1
LIBDEPS = $(BFD_LIB) $(OPCODES_LIB) $(INTLDEPS) $(LIBIBERTY_LIB) \
d246 1
a246 1
EXTRA_LIBS = $(BFD_LIB) $(OPCODES_LIB) $(INTLLIBS) $(LIBIBERTY_LIB) \
@


1.23
log
@Update copyright years for last commit.
@
text
@d244 1
a244 1
LIBDEPS = $(BFD_LIB) $(OPCODES_LIB) $(INTLLIBS) $(LIBIBERTY_LIB) \
@


1.22
log
@	* Make-common.in (install-common, installdirs): Honor $DESTDIR.
@
text
@d2 2
a3 1
# Copyright 1997, 1998, 1999, 2000, 2001, 2004 Free Software Foundation, Inc.
@


1.21
log
@2005-04-27  Paul Brook  <paul@@codesourcery.com>

	* common/Make-common.in: Add $(EXEEXT) to "run".
@
text
@d619 1
a619 1
	$(INSTALL_PROGRAM) run$(EXEEXT) $(bindir)/$$n$(EXEEXT)
d621 2
a622 2
	$(INSTALL_DATA) libsim.a $(libdir)/$$n ; \
	( cd $(libdir) ; $(RANLIB) $$n )
d625 2
a626 2
	$(SHELL) $(srcdir)/../../mkinstalldirs $(bindir)
	$(SHELL) $(srcdir)/../../mkinstalldirs $(libdir)
@


1.20
log
@cgen/ChangeLog:
2005-02-09  Jim Blandy  <jimb@@redhat.com>

	* cgen-sim.scm (load-files): Don't load fixup.scm.  (See
	corresponding change in the sim/common directory.)

sim/common/ChangeLog:
2005-02-09  Jim Blandy  <jimb@@redhat.com>

	* Make-common.in (CGEN): Load guile.scm, and include a trailing
	'-s' argument.
	(CGEN_FLAGS_TO_PASS): Include single quotes around the reference
	to $(CGEN), to ensure that the command substitution happens where
	the variable is referenced in the submake, not when the submake's
	arguments are expanded.
	(cgen.sh): Be prepared for the 'cgen' argument to contain spaces.
	(arch, cpu, decode, cpu-decode, defs, desc): Place the name of the
	application Scheme script directly after ${cgen}; don't precede it
	with a -s.
@
text
@d255 1
a255 1
all: $(SIM_EXTRA_ALL) libsim.a run .gdbinit
d262 1
a262 1
run: $(SIM_RUN_OBJS) libsim.a $(LIBDEPS)
d649 1
a649 1
	rm -f run libsim.a
@


1.20.2.1
log
@2005-04-27  Paul Brook  <paul@@codesourcery.com>

	* sim/common/Make-common.in: Add $(EXEEXT) to "run".
@
text
@d255 1
a255 1
all: $(SIM_EXTRA_ALL) libsim.a run$(EXEEXT) .gdbinit
d262 1
a262 1
run$(EXEEXT): $(SIM_RUN_OBJS) libsim.a $(LIBDEPS)
d649 1
a649 1
	rm -f run$(EXEEXT) libsim.a
@


1.19
log
@	* Make-common.in (sim-basics_h): Add $(callback_h).
@
text
@d685 1
a685 1
CGEN = `if [ -f ../../guile/libguile/guile ]; then echo ../../guile/libguile/guile; else echo guile ; fi`
d703 1
a703 1
	CGEN=$(CGEN) \
@


1.18
log
@Update copyright year
@
text
@d339 1
@


1.17
log
@	* cgen.sh: New thirteenth parameter opcfile, defaulting to
	/dev/null.
	<case desc>: Pass -OPC opcfile.
	* Make-common.in (cgen-desc): Pass $(opcfile) as thirteenth
	parameter to cgen.sh.
@
text
@d2 1
a2 1
# Copyright 1997, 1998, 1999, 2000, 2001 Free Software Foundation, Inc.
@


1.16
log
@* Make-common.in (sim-basics_h): Correct dependencies on
cconfig.h and tconfig.h
(sim-load.o): Correct typo in sim-basics_h dependency.
@
text
@d742 1
a742 1
		$(archfile) ignored
@


1.15
log
@* Make-common.in (sim-*_h): Add rules for all sim headers.  Also
add sub-dependencies for other sim files that they include.
(sim_main_headers): Use sim-*_h rules.
(sim-load.o): Depend on sim-basics_h, not sim_main_headers.
@
text
@d336 2
a337 2
		cconfig_h \
		tconfig_h \
d509 1
a509 1
sim-load.o: $(srccom)/sim-load.c $(callback_h) $(sim_basics_h) $(remote_sim_h)
@


1.14
log
@	* Make-common.in (sim-load.o): Depend on $(sim_main_headers) and
	$(remote_sim_h) too.
	(sim_main_headers): Add sim-utils.h.
@
text
@d301 12
a312 17
	$(srccom)/sim-assert.h \
	$(srccom)/sim-base.h \
	$(srccom)/sim-basics.h \
	$(srccom)/sim-config.h \
	$(srccom)/sim-cpu.h \
	$(srccom)/sim-engine.h \
	$(srccom)/sim-events.h \
	$(srccom)/sim-inline.h \
	$(srccom)/sim-memopt.h \
	$(srccom)/sim-model.h \
	$(srccom)/sim-module.h \
	$(srccom)/sim-profile.h \
	$(srccom)/sim-signal.h \
	$(srccom)/sim-trace.h \
	$(srccom)/sim-utils.h \
	$(srccom)/sim-watch.h \
	tconfig.h \
d319 3
d323 25
a347 4
sim-endian_h = $(srccom)/sim-endian.h
sim-n-endian_h = $(srccom)/sim-n-endian.h
sim-arange_h = $(srccom)/sim-arange.h
sim-bits_h = $(srccom)/sim-bits.h
a348 1
sim-n-bits_h = $(srccom)/sim-n-bits.h
d350 3
a352 1
sim-n-core_h = $(srccom)/sim-n-core.h
d356 2
d359 6
d366 1
d368 4
d509 1
a509 1
sim-load.o: $(srccom)/sim-load.c $(callback_h) $(sim_main_headers) $(remote_sim_h)
@


1.13
log
@2003-09-08  Dave Brolley  <brolley@@redhat.com>

        On behalf of Doug Evans <dje@@sebabeach.org>
        * cgen.sh: New arg archfile.
        * Make-common.in (cgen-arch,cgen-cpu,cgen-defs,cgen-decode,
        cgen-cpu-decode,cgen-desc): Update call to cgen.sh.
@
text
@d315 1
d476 1
a476 1
sim-load.o: $(srccom)/sim-load.c $(callback_h)
@


1.12
log
@2003-04-13  Michael Snyder  <msnyder@@redhat.com>

	* Make-common.in (sim-events.o, sim-config.o): Depend on sim-main.h.
@
text
@d677 2
a678 1
		$(arch) "$(FLAGS)" ignored "$(isa)" $(mach) ignored ignored
d683 2
a684 1
		$(arch) "$(FLAGS)" $(cpu) "$(isa)" $(mach) "$(SUFFIX)" "$(EXTRAFILES)"
d689 2
a690 1
		$(arch) "$(FLAGS)" $(cpu) "$(isa)" $(mach) "$(SUFFIX)" ignored
d695 2
a696 1
		$(arch) "$(FLAGS)" $(cpu) "$(isa)" $(mach) "$(SUFFIX)" "$(EXTRAFILES)"
d701 2
a702 1
		$(arch) "$(FLAGS)" $(cpu) "$(isa)" $(mach) "$(SUFFIX)" "$(EXTRAFILES)"
d707 2
a708 1
		$(arch) "$(FLAGS)" $(cpu) "$(isa)" $(mach) "$(SUFFIX)" ignored
@


1.11
log
@Index: include/gdb/ChangeLog
2003-02-20  Andrew Cagney  <ac131313@@redhat.com>

	* remote-sim.c (gdbsim_insert_breakpoint)
	(gdbsim_remove_breakpoint): Delete #ifdef SIM_HAS_BREAKPOINTS
	code.

Index: include/gdb/ChangeLog
2003-02-20  Andrew Cagney  <ac131313@@redhat.com>

	* remote-sim.h (SIM_RC): Delete unused SIM_RC_UNKNOWN_BREAKPOINT,
	SIM_RC_INSUFFICIENT_RESOURCES and SIM_RC_DUPLICATE_BREAKPOINT.
	(sim_set_breakpoint, sim_clear_breakpoint): Delete declarations.
	(sim_clear_all_breakpoints, sim_enable_breakpoint): Ditto.
	(sim_enable_all_breakpoints, sim_disable_breakpoint): Ditto.
	(sim_disable_all_breakpoints): Ditto.

Index: sim/common/ChangeLog
2003-02-20  Andrew Cagney  <ac131313@@redhat.com>

	* Make-common.in (SIM_NEW_COMMON_OBJS): Remove sim-break.o
	(sim-break_h): Delete macro.
	(sim-break.o): Delete rule.
	* sim-break.c: Delete file.
	* sim-break.h: Delete file.
	* sim-base.h [SIM_HAVE_BREAKPOINTS]: Don't include "sim-break.h".
	(STATE_BREAKPOINTS): Delete macro.
	(sim_state_base): Delete field breakpoints.
	* sim-module.c (modules) [SIM_HAVE_BREAKPOINTS]: Don't add
	sim_break_install to array.
@
text
@d377 1
a377 1
sim-config.o: $(srccom)/sim-config.c $(sim-config_h) \
d394 1
a394 1
sim-events.o: $(srccom)/sim-events.c $(sim-events_h) \
@


1.10
log
@2002-11-06  Richard Sandiford  <rsandifo@@redhat.com>

        * Make-common.in (SIM_EXTRA_DISTCLEAN): New macro.
        (distclean): Depend on it.
@
text
@a163 1
	sim-break.o \
a336 1
sim-break_h = $(srccom)/sim-break.h
a476 4

sim-break.o: $(srccom)/sim-break.c $(sim_main_headers) \
	  $(sim_break_h)
	$(CC) -c $(srccom)/sim-break.c $(ALL_CFLAGS)
@


1.9
log
@2002-08-29  Dave Brolley  <brolley@@redhat.com>

	* Make-common.in (CGEN_READ_SCM): Remove ../../cgen/stamp-cgen.
@
text
@d137 2
d627 1
a627 1
distclean mostlyclean maintainer-clean realclean: clean
@


1.9.6.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@a136 2
# Likewise `distclean'
SIM_EXTRA_DISTCLEAN =
d162 1
d336 1
d377 1
a377 1
sim-config.o: $(srccom)/sim-config.c $(sim-config_h) sim-main.h \
d394 1
a394 1
sim-events.o: $(srccom)/sim-events.c $(sim-events_h) sim-main.h \
d478 4
d625 1
a625 1
distclean mostlyclean maintainer-clean realclean: clean $(SIM_EXTRA_DISTCLEAN)
d681 1
a681 2
		$(arch) "$(FLAGS)" ignored "$(isa)" $(mach) ignored \
		$(archfile) ignored
d686 1
a686 2
		$(arch) "$(FLAGS)" $(cpu) "$(isa)" $(mach) "$(SUFFIX)" \
		$(archfile) "$(EXTRAFILES)"
d691 1
a691 2
		$(arch) "$(FLAGS)" $(cpu) "$(isa)" $(mach) "$(SUFFIX)" \
		$(archfile) ignored
d696 1
a696 2
		$(arch) "$(FLAGS)" $(cpu) "$(isa)" $(mach) "$(SUFFIX)" \
		$(archfile) "$(EXTRAFILES)"
d701 1
a701 2
		$(arch) "$(FLAGS)" $(cpu) "$(isa)" $(mach) "$(SUFFIX)" \
		$(archfile) "$(EXTRAFILES)"
d706 1
a706 2
		$(arch) "$(FLAGS)" $(cpu) "$(isa)" $(mach) "$(SUFFIX)" \
		$(archfile) ignored
@


1.9.4.1
log
@2002-11-15  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021115-merge.
@
text
@a136 2
# Likewise `distclean'
SIM_EXTRA_DISTCLEAN =
d625 1
a625 1
distclean mostlyclean maintainer-clean realclean: clean $(SIM_EXTRA_DISTCLEAN)
@


1.9.4.2
log
@2003-03-05  David Carlton  <carlton@@math.stanford.edu>

	* Merge with mainline.  Tag is carlton_dictionary-20030305-merge.
@
text
@d164 1
d338 1
d479 4
@


1.9.4.3
log
@2003-04-16  David Carlton  <carlton@@bactrian.org>

	* Merge with mainline; tag is carlton_dictionary-20030416-merge.
@
text
@d377 1
a377 1
sim-config.o: $(srccom)/sim-config.c $(sim-config_h) sim-main.h \
d394 1
a394 1
sim-events.o: $(srccom)/sim-events.c $(sim-events_h) sim-main.h \
@


1.9.4.4
log
@2003-09-17  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20030917-merge.
@
text
@d677 1
a677 2
		$(arch) "$(FLAGS)" ignored "$(isa)" $(mach) ignored \
		$(archfile) ignored
d682 1
a682 2
		$(arch) "$(FLAGS)" $(cpu) "$(isa)" $(mach) "$(SUFFIX)" \
		$(archfile) "$(EXTRAFILES)"
d687 1
a687 2
		$(arch) "$(FLAGS)" $(cpu) "$(isa)" $(mach) "$(SUFFIX)" \
		$(archfile) ignored
d692 1
a692 2
		$(arch) "$(FLAGS)" $(cpu) "$(isa)" $(mach) "$(SUFFIX)" \
		$(archfile) "$(EXTRAFILES)"
d697 1
a697 2
		$(arch) "$(FLAGS)" $(cpu) "$(isa)" $(mach) "$(SUFFIX)" \
		$(archfile) "$(EXTRAFILES)"
d702 1
a702 2
		$(arch) "$(FLAGS)" $(cpu) "$(isa)" $(mach) "$(SUFFIX)" \
		$(archfile) ignored
@


1.8
log
@From 2002-07-11 Momchil Velikov <velco@@fadata.bg>:
* Make-common.in (installdirs): Make $(libdir) too, needed when
installing libsim.a.
@
text
@d658 1
a658 1
CGEN_READ_SCM = ../../cgen/stamp-cgen $(CGENDIR)/sim.scm
@


1.7
log
@Move include/callback.h and include/remote-sim.h to include/gdb/.
Update accordingly.
@
text
@d595 1
@


1.6
log
@2001-07-05  Ben Elliston  <bje@@redhat.com>

	* Make-common.in (srccgen): Remove.
	(CGEN_CPU_DIR): Define.
	(CGEN_READ_SCM): Redefine without $(srccgen).
	(CGEN_ARCH_SCM): Ditto.
	(CGEN_CPU_SCM): Ditto.
	(CGEN_DECODE_SCM): Ditto.
	(CGEN_DESC_SCM): Ditto.

	* $arch/Makefile.in: Use $(CGEN_CPU_DIR) where applicable.
@
text
@d251 3
d265 1
a265 2
run.o: $(srccom)/run.c config.h tconfig.h \
	  $(srcroot)/include/remote-sim.h $(srcroot)/include/callback.h
d273 1
a273 2
callback.o: $(srccom)/callback.c config.h tconfig.h \
	  $(srcroot)/include/callback.h targ-vals.h
d276 1
a276 2
syscall.o: $(srccom)/syscall.c config.h tconfig.h \
	  $(srcroot)/include/callback.h targ-vals.h
d402 1
a402 2
sim-hload.o: $(srccom)/sim-hload.c $(sim-assert_h) \
	  $(srcroot)/include/remote-sim.h \
d406 1
a406 2
sim-hrw.o: $(srccom)/sim-hrw.c $(sim-assert_h) $(sim_core_h) \
	  $(srcroot)/include/remote-sim.h \
d413 1
a413 2
sim-info.o: $(srccom)/sim-info.c $(sim-assert_h) \
	  $(srcroot)/include/remote-sim.h \
d423 2
a424 2
sim-io.o: $(srccom)/sim-io.c $(sim_main_headers) $(sim-io_h) \
	  $(srcroot)/include/remote-sim.h targ-vals.h
d439 1
a439 2
sim-reason.o: $(srccom)/sim-reason.c $(sim_main_headers) \
	  $(srcroot)/include/remote-sim.h
d442 1
a442 2
sim-reg.o: $(srccom)/sim-reg.c $(sim_main_headers) \
	  $(srcroot)/include/remote-sim.h
d445 1
a445 2
sim-resume.o: $(srccom)/sim-resume.c $(sim_main_headers) \
	  $(srcroot)/include/remote-sim.h
d475 1
a475 1
sim-load.o: $(srccom)/sim-load.c $(srcroot)/include/callback.h
d544 1
a544 2
nrun.o: $(srccom)/nrun.c config.h tconfig.h \
	  $(srcroot)/include/remote-sim.h $(srcroot)/include/callback.h \
d681 1
a681 1
	
@


1.6.8.1
log
@From 2002-07-11 Momchil Velikov <velco@@fadata.bg>:
* Make-common.in (installdirs): Make $(libdir) too, needed when
installing libsim.a.
@
text
@a601 1
	$(SHELL) $(srcdir)/../../mkinstalldirs $(libdir)
@


1.6.14.1
log
@Merge with mainline, kseitz_interps-20020619-merge.
@
text
@a250 3
callback_h = $(srcroot)/include/gdb/callback.h
remote_sim_h = $(srcroot)/include/gdb/remote-sim.h

d262 2
a263 1
run.o: $(srccom)/run.c config.h tconfig.h $(remote_sim_h) $(callback_h)
d271 2
a272 1
callback.o: $(srccom)/callback.c config.h tconfig.h $(callback_h) targ-vals.h
d275 2
a276 1
syscall.o: $(srccom)/syscall.c config.h tconfig.h $(callback_h) targ-vals.h
d402 2
a403 1
sim-hload.o: $(srccom)/sim-hload.c $(sim-assert_h) $(remote_sim_h) \
d407 2
a408 1
sim-hrw.o: $(srccom)/sim-hrw.c $(sim-assert_h) $(sim_core_h) $(remote_sim_h) \
d415 2
a416 1
sim-info.o: $(srccom)/sim-info.c $(sim-assert_h) $(remote_sim_h) \
d426 2
a427 2
sim-io.o: $(srccom)/sim-io.c $(sim_main_headers) $(sim-io_h) $(remote_sim_h) \
	  targ-vals.h
d442 2
a443 1
sim-reason.o: $(srccom)/sim-reason.c $(sim_main_headers) $(remote_sim_h)
d446 2
a447 1
sim-reg.o: $(srccom)/sim-reg.c $(sim_main_headers) $(remote_sim_h)
d450 2
a451 1
sim-resume.o: $(srccom)/sim-resume.c $(sim_main_headers) $(remote_sim_h)
d481 1
a481 1
sim-load.o: $(srccom)/sim-load.c $(callback_h)
d550 2
a551 1
nrun.o: $(srccom)/nrun.c config.h tconfig.h $(remote_sim_h) $(callback_h) \
d688 1
a688 1

@


1.6.14.2
log
@Merge w/trunk (kseitz_interps-20020722-merge).
@
text
@a594 1
	$(SHELL) $(srcdir)/../../mkinstalldirs $(libdir)
@


1.6.14.3
log
@Merge with kseitz_interps-20020829-merge tag from trunk.
@
text
@d658 1
a658 1
CGEN_READ_SCM = $(CGENDIR)/sim.scm
@


1.6.12.1
log
@merge from trunk
@
text
@a250 3
callback_h = $(srcroot)/include/gdb/callback.h
remote_sim_h = $(srcroot)/include/gdb/remote-sim.h

d262 2
a263 1
run.o: $(srccom)/run.c config.h tconfig.h $(remote_sim_h) $(callback_h)
d271 2
a272 1
callback.o: $(srccom)/callback.c config.h tconfig.h $(callback_h) targ-vals.h
d275 2
a276 1
syscall.o: $(srccom)/syscall.c config.h tconfig.h $(callback_h) targ-vals.h
d402 2
a403 1
sim-hload.o: $(srccom)/sim-hload.c $(sim-assert_h) $(remote_sim_h) \
d407 2
a408 1
sim-hrw.o: $(srccom)/sim-hrw.c $(sim-assert_h) $(sim_core_h) $(remote_sim_h) \
d415 2
a416 1
sim-info.o: $(srccom)/sim-info.c $(sim-assert_h) $(remote_sim_h) \
d426 2
a427 2
sim-io.o: $(srccom)/sim-io.c $(sim_main_headers) $(sim-io_h) $(remote_sim_h) \
	  targ-vals.h
d442 2
a443 1
sim-reason.o: $(srccom)/sim-reason.c $(sim_main_headers) $(remote_sim_h)
d446 2
a447 1
sim-reg.o: $(srccom)/sim-reg.c $(sim_main_headers) $(remote_sim_h)
d450 2
a451 1
sim-resume.o: $(srccom)/sim-resume.c $(sim_main_headers) $(remote_sim_h)
d481 1
a481 1
sim-load.o: $(srccom)/sim-load.c $(callback_h)
d550 2
a551 1
nrun.o: $(srccom)/nrun.c config.h tconfig.h $(remote_sim_h) $(callback_h) \
d688 1
a688 1

@


1.5
log
@* Make-common.in (sim-io.o): Depend on targ-vals.h.
@
text
@d2 1
a2 1
# Copyright (C) 1997, 1998, 1999, 2000 Free Software Foundation, Inc.
d662 1
a662 1
srccgen = $(CGENDIR)
d664 5
a668 5
CGEN_READ_SCM = ../../cgen/stamp-cgen $(srccgen)/sim.scm
CGEN_ARCH_SCM = $(srccgen)/sim-arch.scm
CGEN_CPU_SCM = $(srccgen)/sim-cpu.scm $(srccgen)/sim-model.scm
CGEN_DECODE_SCM = $(srccgen)/sim-decode.scm
CGEN_DESC_SCM = $(srccgen)/desc.scm $(srccgen)/desc-cpu.scm
@


1.4
log
@2000-12-05  Ben Elliston  <bje@@redhat.com>

	* Make-common.in (cgen-defs): New target.
	(cgen-decode): Pass $(EXTRAFILES).
@
text
@d427 1
a427 1
	  $(srcroot)/include/remote-sim.h
@


1.3
log
@2000-10-26  Ben Elliston  <bje@@redhat.com>

        * cgen.sh: Handle an isa argument between cpu and mach. Default to
        `all'. Pass `-i' options to cgen applications.
        * Make-common.in (cgen-arch, cgen-cpu, cgen-decode, cgen-cpu-decode,
        cgen-desc): Pass $(isa) to cgen.sh.
@
text
@d2 1
a2 1
# Copyright (C) 1997, 1998, 1999 Free Software Foundation, Inc.
d694 5
d702 1
a702 1
		$(arch) "$(FLAGS)" $(cpu) "$(isa)" $(mach) "$(SUFFIX)" ignored
@


1.2
log
@* Contribute CGEN simulator build support code.
* Patch was posted by bje@@redhat.com.
@
text
@d687 2
a688 2
		$(arch) "$(FLAGS)" ignored $(mach) ignored ignored

d692 1
a692 1
		$(arch) "$(FLAGS)" $(cpu) $(mach) "$(SUFFIX)" "$(EXTRAFILES)"
d697 1
a697 1
		$(arch) "$(FLAGS)" $(cpu) $(mach) "$(SUFFIX)" ignored
d702 1
a702 1
		$(arch) "$(FLAGS)" $(cpu) $(mach) "$(SUFFIX)" "$(EXTRAFILES)"
d707 1
a707 1
		$(arch) "$(FLAGS)" $(cpu) $(mach) "$(SUFFIX)" ignored
@


1.1
log
@Initial revision
@
text
@a96 1
SIM_WARNINGS = @@build_warnings@@
d98 4
d220 2
a221 1
	$(SIM_WARNINGS) \
a401 1

d562 3
a564 1
	$(srccom)/cgen-mem.h
d575 6
d585 4
d656 52
@


1.1.1.1
log
@Initial creation of sourceware repository
@
text
@@


1.1.1.2
log
@import gdb-1999-07-05 snapshot
@
text
@d559 1
a559 2
	$(srccom)/cgen-mem.h \
	$(srccom)/cgen-fpu.h
a568 6

cgen-fpu.o: $(srccom)/cgen-fpu.c $(sim_main_headers) $(sim-fpu_h)
	$(CC) -c $(srccom)/cgen-fpu.c $(ALL_CFLAGS)

cgen-accfp.o: $(srccom)/cgen-accfp.c $(sim_main_headers) $(sim-fpu_h)
	$(CC) -c $(srccom)/cgen-accfp.c $(ALL_CFLAGS)
@


1.1.1.3
log
@import gdb-1999-09-08 snapshot
@
text
@d97 1
a98 4
WARN_CFLAGS = @@WARN_CFLAGS@@
WERROR_CFLAGS = @@WERROR_CFLAGS@@
SIM_WARN_CFLAGS = $(WARN_CFLAGS)
SIM_WERROR_CFLAGS = $(WERROR_CFLAGS)
d217 1
a217 2
	$(SIM_WARN_CFLAGS) \
	$(SIM_WERROR_CFLAGS) \
a559 1
	$(srccom)/cgen-par.h \
a579 4

cgen-par.o: $(srccom)/cgen-par.c $(sim_main_headers) \
	  $(srccom)/cgen-mem.h $(srccom)/cgen-par.h
	$(CC) -c $(srccom)/cgen-par.c $(ALL_CFLAGS)
@


1.1.1.4
log
@import gdb-1999-09-21
@
text
@d402 1
@


