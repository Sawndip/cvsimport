head	1.3;
access;
symbols
	gdb_6_3-20041109-release:1.2
	gdb_6_3-branch:1.2.0.66
	gdb_6_3-20041019-branchpoint:1.2
	drow_intercu-merge-20040921:1.2
	drow_intercu-merge-20040915:1.2
	jimb-gdb_6_2-e500-branch:1.2.0.68
	jimb-gdb_6_2-e500-branchpoint:1.2
	gdb_6_2-20040730-release:1.2
	gdb_6_2-branch:1.2.0.64
	gdb_6_2-2004-07-10-gmt-branchpoint:1.2
	gdb_6_1_1-20040616-release:1.2
	gdb_6_1-2004-04-05-release:1.2
	drow_intercu-merge-20040402:1.2
	drow_intercu-merge-20040327:1.2
	ezannoni_pie-20040323-branch:1.2.0.62
	ezannoni_pie-20040323-branchpoint:1.2
	cagney_tramp-20040321-mergepoint:1.2
	cagney_tramp-20040309-branch:1.2.0.60
	cagney_tramp-20040309-branchpoint:1.2
	gdb_6_1-branch:1.2.0.58
	gdb_6_1-2004-03-01-gmt-branchpoint:1.2
	drow_intercu-20040221-branch:1.2.0.56
	drow_intercu-20040221-branchpoint:1.2
	cagney_bfdfile-20040213-branch:1.2.0.54
	cagney_bfdfile-20040213-branchpoint:1.2
	drow-cplus-merge-20040208:1.2
	carlton_dictionary-20040126-merge:1.2
	cagney_bigcore-20040122-branch:1.2.0.52
	cagney_bigcore-20040122-branchpoint:1.2
	drow-cplus-merge-20040113:1.2
	drow-cplus-merge-20031224:1.2
	drow-cplus-merge-20031220:1.2
	carlton_dictionary-20031215-merge:1.2
	drow-cplus-merge-20031214:1.2
	carlton-dictionary-20031111-merge:1.2
	gdb_6_0-2003-10-04-release:1.2
	kettenis_sparc-20030918-branch:1.2.0.50
	kettenis_sparc-20030918-branchpoint:1.2
	carlton_dictionary-20030917-merge:1.2
	ezannoni_pie-20030916-branchpoint:1.2
	ezannoni_pie-20030916-branch:1.2.0.48
	cagney_x86i386-20030821-branch:1.2.0.46
	cagney_x86i386-20030821-branchpoint:1.2
	carlton_dictionary-20030805-merge:1.2
	carlton_dictionary-20030627-merge:1.2
	gdb_6_0-branch:1.2.0.44
	gdb_6_0-2003-06-23-branchpoint:1.2
	jimb-ppc64-linux-20030613-branch:1.2.0.42
	jimb-ppc64-linux-20030613-branchpoint:1.2
	cagney_convert-20030606-branch:1.2.0.40
	cagney_convert-20030606-branchpoint:1.2
	cagney_writestrings-20030508-branch:1.2.0.38
	cagney_writestrings-20030508-branchpoint:1.2
	jimb-ppc64-linux-20030528-branch:1.2.0.36
	jimb-ppc64-linux-20030528-branchpoint:1.2
	carlton_dictionary-20030523-merge:1.2
	cagney_fileio-20030521-branch:1.2.0.34
	cagney_fileio-20030521-branchpoint:1.2
	kettenis_i386newframe-20030517-mergepoint:1.2
	jimb-ppc64-linux-20030509-branch:1.2.0.32
	jimb-ppc64-linux-20030509-branchpoint:1.2
	kettenis_i386newframe-20030504-mergepoint:1.2
	carlton_dictionary-20030430-merge:1.2
	kettenis_i386newframe-20030419-branch:1.2.0.30
	kettenis_i386newframe-20030419-branchpoint:1.2
	carlton_dictionary-20030416-merge:1.2
	cagney_frameaddr-20030409-mergepoint:1.2
	kettenis_i386newframe-20030406-branch:1.2.0.28
	kettenis_i386newframe-20030406-branchpoint:1.2
	cagney_frameaddr-20030403-branchpoint:1.2
	cagney_frameaddr-20030403-branch:1.2.0.26
	cagney_framebase-20030330-mergepoint:1.2
	cagney_framebase-20030326-branch:1.2.0.24
	cagney_framebase-20030326-branchpoint:1.2
	cagney_lazyid-20030317-branch:1.2.0.22
	cagney_lazyid-20030317-branchpoint:1.2
	kettenis-i386newframe-20030316-mergepoint:1.2
	offbyone-20030313-branch:1.2.0.20
	offbyone-20030313-branchpoint:1.2
	kettenis-i386newframe-20030308-branch:1.2.0.18
	kettenis-i386newframe-20030308-branchpoint:1.2
	carlton_dictionary-20030305-merge:1.2
	cagney_offbyone-20030303-branch:1.2.0.16
	cagney_offbyone-20030303-branchpoint:1.2
	carlton_dictionary-20030207-merge:1.2
	interps-20030202-branch:1.2.0.14
	interps-20030202-branchpoint:1.2
	cagney-unwind-20030108-branch:1.2.0.12
	cagney-unwind-20030108-branchpoint:1.2
	carlton_dictionary-20021223-merge:1.2
	gdb_5_3-2002-12-12-release:1.2
	carlton_dictionary-20021115-merge:1.2
	kseitz_interps-20021105-merge:1.2
	kseitz_interps-20021103-merge:1.2
	drow-cplus-merge-20021020:1.2
	drow-cplus-merge-20021025:1.2
	carlton_dictionary-20021025-merge:1.2
	carlton_dictionary-20021011-merge:1.2
	drow-cplus-branch:1.2.0.10
	drow-cplus-branchpoint:1.2
	kseitz_interps-20020930-merge:1.2
	carlton_dictionary-20020927-merge:1.2
	carlton_dictionary-branch:1.2.0.8
	carlton_dictionary-20020920-branchpoint:1.2
	gdb_5_3-branch:1.2.0.6
	gdb_5_3-2002-09-04-branchpoint:1.2
	kseitz_interps-20020829-merge:1.2
	cagney_sysregs-20020825-branch:1.2.0.4
	cagney_sysregs-20020825-branchpoint:1.2
	readline_4_3-import-branch:1.2.0.2
	readline_4_3-import-branchpoint:1.2
	gdb_5_2_1-2002-07-23-release:1.1.1.1
	kseitz_interps-20020528-branch:1.1.1.1.0.20
	kseitz_interps-20020528-branchpoint:1.1.1.1
	cagney_regbuf-20020515-branch:1.1.1.1.0.18
	cagney_regbuf-20020515-branchpoint:1.1.1.1
	jimb-macro-020506-branch:1.1.1.1.0.16
	jimb-macro-020506-branchpoint:1.1.1.1
	gdb_5_2-2002-04-29-release:1.1.1.1
	gdb_5_2-branch:1.1.1.1.0.14
	gdb_5_2-2002-03-03-branchpoint:1.1.1.1
	gdb_5_1_1-2002-01-24-release:1.1.1.1
	gdb_5_1_0_1-2002-01-03-release:1.1.1.1
	gdb_5_1_0_1-2002-01-03-branch:1.1.1.1.0.12
	gdb_5_1_0_1-2002-01-03-branchpoint:1.1.1.1
	gdb_5_1-2001-11-21-release:1.1.1.1
	gdb_s390-2001-09-26-branch:1.1.1.1.0.10
	gdb_s390-2001-09-26-branchpoint:1.1.1.1
	gdb_5_1-2001-07-29-branch:1.1.1.1.0.8
	gdb_5_1-2001-07-29-branchpoint:1.1.1.1
	insight-precleanup-2001-01-01:1.1.1.1
	gdb-premipsmulti-2000-06-06-branch:1.1.1.1.0.6
	gdb-premipsmulti-2000-06-06-branchpoint:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.4
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	gdb-2000-02-04:1.1.1.1
	gdb-2000-02-02:1.1.1.1
	gdb-2000-02-01:1.1.1.1
	gdb-2000-01-31:1.1.1.1
	gdb-2000-01-26:1.1.1.1
	gdb-2000-01-24:1.1.1.1
	gdb-2000-01-17:1.1.1.1
	gdb-2000-01-10:1.1.1.1
	gdb-2000-01-05:1.1.1.1
	gdb-1999-12-21:1.1.1.1
	gdb-1999-12-13:1.1.1.1
	gdb-1999-12-07:1.1.1.1
	gdb-1999-12-06:1.1.1.1
	gdb-1999-11-16:1.1.1.1
	gdb-1999-11-08:1.1.1.1
	gdb-1999-11-01:1.1.1.1
	gdb-1999-10-25:1.1.1.1
	gdb-1999-10-18:1.1.1.1
	gdb-1999-10-11:1.1.1.1
	gdb-1999-10-04:1.1.1.1
	gdb-1999-09-28:1.1.1.1
	gdb-1999-09-21:1.1.1.1
	gdb-1999-09-13:1.1.1.1
	gdb-1999-09-08:1.1.1.1
	gdb-1999-08-30:1.1.1.1
	gdb-1999-08-23:1.1.1.1
	gdb-1999-08-16:1.1.1.1
	gdb-1999-08-09:1.1.1.1
	gdb-1999-08-02:1.1.1.1
	gdb-1999-07-26:1.1.1.1
	gdb-1999-07-19:1.1.1.1
	gdb-1999-07-12:1.1.1.1
	gdb-post-reformat-19990707:1.1.1.1
	gdb-1999-07-07-post-reformat-snapshot:1.1.1.1
	gdb-pre-reformat-19990707:1.1.1.1
	gdb-1999-07-07:1.1.1.1
	gdb-1999-07-05:1.1.1.1
	gdb-1999-06-28:1.1.1.1
	gdb-1999-06-21:1.1.1.1
	gdb-1999-06-14:1.1.1.1
	gdb-1999-06-07:1.1.1.1
	gdb-1999-06-01:1.1.1.1
	gdb-4_18-branch:1.1.1.1.0.2
	gdb-4_18-release:1.1.1.1
	gdb-1999-05-25:1.1.1.1
	gdb-1999-05-19:1.1.1.1
	gdb-1999-05-10:1.1.1.1
	gdb-19990504:1.1.1.1
	gdb-19990422:1.1.1.1
	SNAPSHOT:1.1.1
	gdb-4_18:1.1.1.1
	GDB_4_18:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.3
date	2004.11.12.16.45.18;	author cagney;	state dead;
branches;
next	1.2;

1.2
date	2002.07.14.00.15.20;	author cagney;	state Exp;
branches;
next	1.1;

1.1
date	99.04.16.01.35.00;	author shebs;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.16.01.35.00;	author shebs;	state Exp;
branches
	1.1.1.1.20.1;
next	;

1.1.1.1.20.1
date	2002.07.22.21.47.24;	author kseitz;	state Exp;
branches;
next	;


desc
@@


1.3
log
@2004-11-12  Andrew Cagney  <cagney@@gnu.org>

	* d30v, fr30, mn10200, z8k: Delete directory.
@
text
@/* OBSOLETE /* Mitsubishi Electric Corp. D30V Simulator. */
/* OBSOLETE    Copyright (C) 1997, Free Software Foundation, Inc. */
/* OBSOLETE    Contributed by Cygnus Support. */
/* OBSOLETE  */
/* OBSOLETE This file is part of GDB, the GNU debugger. */
/* OBSOLETE  */
/* OBSOLETE This program is free software; you can redistribute it and/or modify */
/* OBSOLETE it under the terms of the GNU General Public License as published by */
/* OBSOLETE the Free Software Foundation; either version 2, or (at your option) */
/* OBSOLETE any later version. */
/* OBSOLETE  */
/* OBSOLETE This program is distributed in the hope that it will be useful, */
/* OBSOLETE but WITHOUT ANY WARRANTY; without even the implied warranty of */
/* OBSOLETE MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the */
/* OBSOLETE GNU General Public License for more details. */
/* OBSOLETE  */
/* OBSOLETE You should have received a copy of the GNU General Public License along */
/* OBSOLETE with this program; if not, write to the Free Software Foundation, Inc., */
/* OBSOLETE 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */ */
/* OBSOLETE  */
/* OBSOLETE  */
/* OBSOLETE #ifndef _D30V_ALU_H_ */
/* OBSOLETE #define _D30V_ALU_H_ */
/* OBSOLETE  */
/* OBSOLETE #define ALU_CARRY (PSW_VAL(PSW_C) != 0) */
/* OBSOLETE  */
/* OBSOLETE #include "sim-alu.h" */
/* OBSOLETE  */
/* OBSOLETE #define ALU16_END(TARG, HIGH)						\ */
/* OBSOLETE {									\ */
/* OBSOLETE   unsigned32 mask, value;						\ */
/* OBSOLETE   if (ALU16_HAD_OVERFLOW) {						\ */
/* OBSOLETE     mask = BIT32 (PSW_V) | BIT32 (PSW_VA) | BIT32 (PSW_C);		\ */
/* OBSOLETE     value = BIT32 (PSW_V) | BIT32 (PSW_VA);				\ */
/* OBSOLETE   }									\ */
/* OBSOLETE   else {								\ */
/* OBSOLETE     mask = BIT32 (PSW_V) | BIT32 (PSW_C);				\ */
/* OBSOLETE     value = 0;								\ */
/* OBSOLETE   }									\ */
/* OBSOLETE   if (ALU16_HAD_CARRY_BORROW)						\ */
/* OBSOLETE     value |= BIT32 (PSW_C);						\ */
/* OBSOLETE   if (HIGH)								\ */
/* OBSOLETE     WRITE32_QUEUE_MASK (TARG, ALU16_OVERFLOW_RESULT<<16, 0xffff0000);	\ */
/* OBSOLETE   else									\ */
/* OBSOLETE     WRITE32_QUEUE_MASK (TARG, ALU16_OVERFLOW_RESULT, 0x0000ffff);	\ */
/* OBSOLETE   WRITE32_QUEUE_MASK (&PSW, value, mask);				\ */
/* OBSOLETE } */
/* OBSOLETE  */
/* OBSOLETE #define ALU32_END(TARG)							\ */
/* OBSOLETE {									\ */
/* OBSOLETE   unsigned32 mask, value;						\ */
/* OBSOLETE   if (ALU32_HAD_OVERFLOW) {						\ */
/* OBSOLETE     mask = BIT32 (PSW_V) | BIT32 (PSW_VA) | BIT32 (PSW_C);		\ */
/* OBSOLETE     value = BIT32 (PSW_V) | BIT32 (PSW_VA);				\ */
/* OBSOLETE   }									\ */
/* OBSOLETE   else {								\ */
/* OBSOLETE     mask = BIT32 (PSW_V) | BIT32 (PSW_C);				\ */
/* OBSOLETE     value = 0;								\ */
/* OBSOLETE   }									\ */
/* OBSOLETE   if (ALU32_HAD_CARRY_BORROW)						\ */
/* OBSOLETE     value |= BIT32 (PSW_C);						\ */
/* OBSOLETE   WRITE32_QUEUE (TARG, ALU32_OVERFLOW_RESULT);				\ */
/* OBSOLETE   WRITE32_QUEUE_MASK (&PSW, value, mask);				\ */
/* OBSOLETE } */
/* OBSOLETE  */
/* OBSOLETE #define ALU_END(TARG) ALU32_END(TARG) */
/* OBSOLETE  */
/* OBSOLETE  */
/* OBSOLETE /* PSW & Flag manipulation */ */
/* OBSOLETE  */
/* OBSOLETE #define PSW_SET(BIT,VAL) BLIT32(PSW, (BIT), (VAL)) */
/* OBSOLETE #define PSW_VAL(BIT) EXTRACTED32(PSW, (BIT), (BIT)) */
/* OBSOLETE  */
/* OBSOLETE #define PSW_F(FLAG) (17 + ((FLAG) % 8) * 2) */
/* OBSOLETE #define PSW_FLAG_SET(FLAG,VAL) PSW_SET(PSW_F(FLAG), VAL) */
/* OBSOLETE #define PSW_FLAG_VAL(FLAG) PSW_VAL(PSW_F(FLAG)) */
/* OBSOLETE  */
/* OBSOLETE #define PSW_SET_QUEUE(BIT,VAL)						\ */
/* OBSOLETE do {									\ */
/* OBSOLETE   unsigned32 mask = BIT32 (BIT);					\ */
/* OBSOLETE   unsigned32 bitval = (VAL) ? mask : 0;					\ */
/* OBSOLETE   WRITE32_QUEUE_MASK (&PSW, bitval, mask);				\ */
/* OBSOLETE } while (0) */
/* OBSOLETE  */
/* OBSOLETE #define PSW_FLAG_SET_QUEUE(FLAG,VAL)					\ */
/* OBSOLETE do {									\ */
/* OBSOLETE   unsigned32 mask = BIT32 (PSW_F (FLAG));				\ */
/* OBSOLETE   unsigned32 bitval = (VAL) ? mask : 0;					\ */
/* OBSOLETE   WRITE32_QUEUE_MASK (&PSW, bitval, mask);				\ */
/* OBSOLETE } while (0) */
/* OBSOLETE  */
/* OBSOLETE /* Bring data in from the cold */ */
/* OBSOLETE  */
/* OBSOLETE #define IMEM(EA) \ */
/* OBSOLETE (sim_core_read_8(STATE_CPU (sd, 0), cia, exec_map, (EA))) */
/* OBSOLETE  */
/* OBSOLETE #define MEM(SIGN, EA, NR_BYTES) \ */
/* OBSOLETE ((SIGN##_##NR_BYTES) sim_core_read_unaligned_##NR_BYTES(STATE_CPU (sd, 0), cia, read_map, (EA))) */
/* OBSOLETE  */
/* OBSOLETE #define STORE(EA, NR_BYTES, VAL) \ */
/* OBSOLETE do { \ */
/* OBSOLETE   sim_core_write_unaligned_##NR_BYTES(STATE_CPU (sd, 0), cia, write_map, (EA), (VAL)); \ */
/* OBSOLETE } while (0) */
/* OBSOLETE  */
/* OBSOLETE  */
/* OBSOLETE #endif */
@


1.2
log
@Obsolete the d30v.
@
text
@@


1.1
log
@Initial revision
@
text
@d1 106
a106 106
/* Mitsubishi Electric Corp. D30V Simulator.
   Copyright (C) 1997, Free Software Foundation, Inc.
   Contributed by Cygnus Support.

This file is part of GDB, the GNU debugger.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2, or (at your option)
any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License along
with this program; if not, write to the Free Software Foundation, Inc.,
59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */


#ifndef _D30V_ALU_H_
#define _D30V_ALU_H_

#define ALU_CARRY (PSW_VAL(PSW_C) != 0)

#include "sim-alu.h"

#define ALU16_END(TARG, HIGH)						\
{									\
  unsigned32 mask, value;						\
  if (ALU16_HAD_OVERFLOW) {						\
    mask = BIT32 (PSW_V) | BIT32 (PSW_VA) | BIT32 (PSW_C);		\
    value = BIT32 (PSW_V) | BIT32 (PSW_VA);				\
  }									\
  else {								\
    mask = BIT32 (PSW_V) | BIT32 (PSW_C);				\
    value = 0;								\
  }									\
  if (ALU16_HAD_CARRY_BORROW)						\
    value |= BIT32 (PSW_C);						\
  if (HIGH)								\
    WRITE32_QUEUE_MASK (TARG, ALU16_OVERFLOW_RESULT<<16, 0xffff0000);	\
  else									\
    WRITE32_QUEUE_MASK (TARG, ALU16_OVERFLOW_RESULT, 0x0000ffff);	\
  WRITE32_QUEUE_MASK (&PSW, value, mask);				\
}

#define ALU32_END(TARG)							\
{									\
  unsigned32 mask, value;						\
  if (ALU32_HAD_OVERFLOW) {						\
    mask = BIT32 (PSW_V) | BIT32 (PSW_VA) | BIT32 (PSW_C);		\
    value = BIT32 (PSW_V) | BIT32 (PSW_VA);				\
  }									\
  else {								\
    mask = BIT32 (PSW_V) | BIT32 (PSW_C);				\
    value = 0;								\
  }									\
  if (ALU32_HAD_CARRY_BORROW)						\
    value |= BIT32 (PSW_C);						\
  WRITE32_QUEUE (TARG, ALU32_OVERFLOW_RESULT);				\
  WRITE32_QUEUE_MASK (&PSW, value, mask);				\
}

#define ALU_END(TARG) ALU32_END(TARG)


/* PSW & Flag manipulation */

#define PSW_SET(BIT,VAL) BLIT32(PSW, (BIT), (VAL))
#define PSW_VAL(BIT) EXTRACTED32(PSW, (BIT), (BIT))

#define PSW_F(FLAG) (17 + ((FLAG) % 8) * 2)
#define PSW_FLAG_SET(FLAG,VAL) PSW_SET(PSW_F(FLAG), VAL)
#define PSW_FLAG_VAL(FLAG) PSW_VAL(PSW_F(FLAG))

#define PSW_SET_QUEUE(BIT,VAL)						\
do {									\
  unsigned32 mask = BIT32 (BIT);					\
  unsigned32 bitval = (VAL) ? mask : 0;					\
  WRITE32_QUEUE_MASK (&PSW, bitval, mask);				\
} while (0)

#define PSW_FLAG_SET_QUEUE(FLAG,VAL)					\
do {									\
  unsigned32 mask = BIT32 (PSW_F (FLAG));				\
  unsigned32 bitval = (VAL) ? mask : 0;					\
  WRITE32_QUEUE_MASK (&PSW, bitval, mask);				\
} while (0)

/* Bring data in from the cold */

#define IMEM(EA) \
(sim_core_read_8(STATE_CPU (sd, 0), cia, exec_map, (EA)))

#define MEM(SIGN, EA, NR_BYTES) \
((SIGN##_##NR_BYTES) sim_core_read_unaligned_##NR_BYTES(STATE_CPU (sd, 0), cia, read_map, (EA)))

#define STORE(EA, NR_BYTES, VAL) \
do { \
  sim_core_write_unaligned_##NR_BYTES(STATE_CPU (sd, 0), cia, write_map, (EA), (VAL)); \
} while (0)


#endif
@


1.1.1.1
log
@Initial creation of sourceware repository
@
text
@@


1.1.1.1.20.1
log
@Merge w/trunk (kseitz_interps-20020722-merge).
@
text
@d1 106
a106 106
/* OBSOLETE /* Mitsubishi Electric Corp. D30V Simulator. */
/* OBSOLETE    Copyright (C) 1997, Free Software Foundation, Inc. */
/* OBSOLETE    Contributed by Cygnus Support. */
/* OBSOLETE  */
/* OBSOLETE This file is part of GDB, the GNU debugger. */
/* OBSOLETE  */
/* OBSOLETE This program is free software; you can redistribute it and/or modify */
/* OBSOLETE it under the terms of the GNU General Public License as published by */
/* OBSOLETE the Free Software Foundation; either version 2, or (at your option) */
/* OBSOLETE any later version. */
/* OBSOLETE  */
/* OBSOLETE This program is distributed in the hope that it will be useful, */
/* OBSOLETE but WITHOUT ANY WARRANTY; without even the implied warranty of */
/* OBSOLETE MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the */
/* OBSOLETE GNU General Public License for more details. */
/* OBSOLETE  */
/* OBSOLETE You should have received a copy of the GNU General Public License along */
/* OBSOLETE with this program; if not, write to the Free Software Foundation, Inc., */
/* OBSOLETE 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */ */
/* OBSOLETE  */
/* OBSOLETE  */
/* OBSOLETE #ifndef _D30V_ALU_H_ */
/* OBSOLETE #define _D30V_ALU_H_ */
/* OBSOLETE  */
/* OBSOLETE #define ALU_CARRY (PSW_VAL(PSW_C) != 0) */
/* OBSOLETE  */
/* OBSOLETE #include "sim-alu.h" */
/* OBSOLETE  */
/* OBSOLETE #define ALU16_END(TARG, HIGH)						\ */
/* OBSOLETE {									\ */
/* OBSOLETE   unsigned32 mask, value;						\ */
/* OBSOLETE   if (ALU16_HAD_OVERFLOW) {						\ */
/* OBSOLETE     mask = BIT32 (PSW_V) | BIT32 (PSW_VA) | BIT32 (PSW_C);		\ */
/* OBSOLETE     value = BIT32 (PSW_V) | BIT32 (PSW_VA);				\ */
/* OBSOLETE   }									\ */
/* OBSOLETE   else {								\ */
/* OBSOLETE     mask = BIT32 (PSW_V) | BIT32 (PSW_C);				\ */
/* OBSOLETE     value = 0;								\ */
/* OBSOLETE   }									\ */
/* OBSOLETE   if (ALU16_HAD_CARRY_BORROW)						\ */
/* OBSOLETE     value |= BIT32 (PSW_C);						\ */
/* OBSOLETE   if (HIGH)								\ */
/* OBSOLETE     WRITE32_QUEUE_MASK (TARG, ALU16_OVERFLOW_RESULT<<16, 0xffff0000);	\ */
/* OBSOLETE   else									\ */
/* OBSOLETE     WRITE32_QUEUE_MASK (TARG, ALU16_OVERFLOW_RESULT, 0x0000ffff);	\ */
/* OBSOLETE   WRITE32_QUEUE_MASK (&PSW, value, mask);				\ */
/* OBSOLETE } */
/* OBSOLETE  */
/* OBSOLETE #define ALU32_END(TARG)							\ */
/* OBSOLETE {									\ */
/* OBSOLETE   unsigned32 mask, value;						\ */
/* OBSOLETE   if (ALU32_HAD_OVERFLOW) {						\ */
/* OBSOLETE     mask = BIT32 (PSW_V) | BIT32 (PSW_VA) | BIT32 (PSW_C);		\ */
/* OBSOLETE     value = BIT32 (PSW_V) | BIT32 (PSW_VA);				\ */
/* OBSOLETE   }									\ */
/* OBSOLETE   else {								\ */
/* OBSOLETE     mask = BIT32 (PSW_V) | BIT32 (PSW_C);				\ */
/* OBSOLETE     value = 0;								\ */
/* OBSOLETE   }									\ */
/* OBSOLETE   if (ALU32_HAD_CARRY_BORROW)						\ */
/* OBSOLETE     value |= BIT32 (PSW_C);						\ */
/* OBSOLETE   WRITE32_QUEUE (TARG, ALU32_OVERFLOW_RESULT);				\ */
/* OBSOLETE   WRITE32_QUEUE_MASK (&PSW, value, mask);				\ */
/* OBSOLETE } */
/* OBSOLETE  */
/* OBSOLETE #define ALU_END(TARG) ALU32_END(TARG) */
/* OBSOLETE  */
/* OBSOLETE  */
/* OBSOLETE /* PSW & Flag manipulation */ */
/* OBSOLETE  */
/* OBSOLETE #define PSW_SET(BIT,VAL) BLIT32(PSW, (BIT), (VAL)) */
/* OBSOLETE #define PSW_VAL(BIT) EXTRACTED32(PSW, (BIT), (BIT)) */
/* OBSOLETE  */
/* OBSOLETE #define PSW_F(FLAG) (17 + ((FLAG) % 8) * 2) */
/* OBSOLETE #define PSW_FLAG_SET(FLAG,VAL) PSW_SET(PSW_F(FLAG), VAL) */
/* OBSOLETE #define PSW_FLAG_VAL(FLAG) PSW_VAL(PSW_F(FLAG)) */
/* OBSOLETE  */
/* OBSOLETE #define PSW_SET_QUEUE(BIT,VAL)						\ */
/* OBSOLETE do {									\ */
/* OBSOLETE   unsigned32 mask = BIT32 (BIT);					\ */
/* OBSOLETE   unsigned32 bitval = (VAL) ? mask : 0;					\ */
/* OBSOLETE   WRITE32_QUEUE_MASK (&PSW, bitval, mask);				\ */
/* OBSOLETE } while (0) */
/* OBSOLETE  */
/* OBSOLETE #define PSW_FLAG_SET_QUEUE(FLAG,VAL)					\ */
/* OBSOLETE do {									\ */
/* OBSOLETE   unsigned32 mask = BIT32 (PSW_F (FLAG));				\ */
/* OBSOLETE   unsigned32 bitval = (VAL) ? mask : 0;					\ */
/* OBSOLETE   WRITE32_QUEUE_MASK (&PSW, bitval, mask);				\ */
/* OBSOLETE } while (0) */
/* OBSOLETE  */
/* OBSOLETE /* Bring data in from the cold */ */
/* OBSOLETE  */
/* OBSOLETE #define IMEM(EA) \ */
/* OBSOLETE (sim_core_read_8(STATE_CPU (sd, 0), cia, exec_map, (EA))) */
/* OBSOLETE  */
/* OBSOLETE #define MEM(SIGN, EA, NR_BYTES) \ */
/* OBSOLETE ((SIGN##_##NR_BYTES) sim_core_read_unaligned_##NR_BYTES(STATE_CPU (sd, 0), cia, read_map, (EA))) */
/* OBSOLETE  */
/* OBSOLETE #define STORE(EA, NR_BYTES, VAL) \ */
/* OBSOLETE do { \ */
/* OBSOLETE   sim_core_write_unaligned_##NR_BYTES(STATE_CPU (sd, 0), cia, write_map, (EA), (VAL)); \ */
/* OBSOLETE } while (0) */
/* OBSOLETE  */
/* OBSOLETE  */
/* OBSOLETE #endif */
@


