head	1.3;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.3
	gdb_7_6-2013-04-26-release:1.3
	gdb_7_6-branch:1.3.0.72
	gdb_7_6-2013-03-12-branchpoint:1.3
	gdb_7_5_1-2012-11-29-release:1.3
	gdb_7_5-2012-08-17-release:1.3
	gdb_7_5-branch:1.3.0.70
	gdb_7_5-2012-07-18-branchpoint:1.3
	gdb_7_4_1-2012-04-26-release:1.3
	gdb_7_4-2012-01-24-release:1.3
	gdb_7_4-branch:1.3.0.68
	gdb_7_4-2011-12-13-branchpoint:1.3
	gdb_7_3_1-2011-09-04-release:1.3
	gdb_7_3-2011-07-26-release:1.3
	gdb_7_3-branch:1.3.0.66
	gdb_7_3-2011-04-01-branchpoint:1.3
	gdb_7_2-2010-09-02-release:1.3
	gdb_7_2-branch:1.3.0.64
	gdb_7_2-2010-07-07-branchpoint:1.3
	gdb_7_1-2010-03-18-release:1.3
	gdb_7_1-branch:1.3.0.62
	gdb_7_1-2010-02-18-branchpoint:1.3
	gdb_7_0_1-2009-12-22-release:1.3
	gdb_7_0-2009-10-06-release:1.3
	gdb_7_0-branch:1.3.0.60
	gdb_7_0-2009-09-16-branchpoint:1.3
	arc-sim-20090309:1.3
	msnyder-checkpoint-072509-branch:1.3.0.58
	msnyder-checkpoint-072509-branchpoint:1.3
	arc-insight_6_8-branch:1.3.0.56
	arc-insight_6_8-branchpoint:1.3
	insight_6_8-branch:1.3.0.54
	insight_6_8-branchpoint:1.3
	reverse-20081226-branch:1.3.0.52
	reverse-20081226-branchpoint:1.3
	multiprocess-20081120-branch:1.3.0.50
	multiprocess-20081120-branchpoint:1.3
	reverse-20080930-branch:1.3.0.48
	reverse-20080930-branchpoint:1.3
	reverse-20080717-branch:1.3.0.46
	reverse-20080717-branchpoint:1.3
	msnyder-reverse-20080609-branch:1.3.0.44
	msnyder-reverse-20080609-branchpoint:1.3
	drow-reverse-20070409-branch:1.3.0.42
	drow-reverse-20070409-branchpoint:1.3
	gdb_6_8-2008-03-27-release:1.3
	gdb_6_8-branch:1.3.0.40
	gdb_6_8-2008-02-26-branchpoint:1.3
	gdb_6_7_1-2007-10-29-release:1.3
	gdb_6_7-2007-10-10-release:1.3
	gdb_6_7-branch:1.3.0.38
	gdb_6_7-2007-09-07-branchpoint:1.3
	insight_6_6-20070208-release:1.3
	gdb_6_6-2006-12-18-release:1.3
	gdb_6_6-branch:1.3.0.36
	gdb_6_6-2006-11-15-branchpoint:1.3
	insight_6_5-20061003-release:1.3
	gdb-csl-symbian-6_4_50_20060226-12:1.3
	gdb-csl-sourcerygxx-3_4_4-25:1.3
	nickrob-async-20060828-mergepoint:1.3
	gdb-csl-symbian-6_4_50_20060226-11:1.3
	gdb-csl-sourcerygxx-4_1-17:1.3
	gdb-csl-20060226-branch-local-2:1.3
	gdb-csl-sourcerygxx-4_1-14:1.3
	gdb-csl-sourcerygxx-4_1-13:1.3
	gdb-csl-sourcerygxx-4_1-12:1.3
	gdb-csl-sourcerygxx-3_4_4-21:1.3
	gdb_6_5-20060621-release:1.3
	gdb-csl-sourcerygxx-4_1-9:1.3
	gdb-csl-sourcerygxx-4_1-8:1.3
	gdb-csl-sourcerygxx-4_1-7:1.3
	gdb-csl-arm-2006q1-6:1.3
	gdb-csl-sourcerygxx-4_1-6:1.3
	gdb-csl-symbian-6_4_50_20060226-10:1.3
	gdb-csl-symbian-6_4_50_20060226-9:1.3
	gdb-csl-symbian-6_4_50_20060226-8:1.3
	gdb-csl-coldfire-4_1-11:1.3
	gdb-csl-sourcerygxx-3_4_4-19:1.3
	gdb-csl-coldfire-4_1-10:1.3
	gdb_6_5-branch:1.3.0.34
	gdb_6_5-2006-05-14-branchpoint:1.3
	gdb-csl-sourcerygxx-4_1-5:1.3
	nickrob-async-20060513-branch:1.3.0.32
	nickrob-async-20060513-branchpoint:1.3
	gdb-csl-sourcerygxx-4_1-4:1.3
	msnyder-reverse-20060502-branch:1.3.0.30
	msnyder-reverse-20060502-branchpoint:1.3
	gdb-csl-morpho-4_1-4:1.3
	gdb-csl-sourcerygxx-3_4_4-17:1.3
	readline_5_1-import-branch:1.3.0.28
	readline_5_1-import-branchpoint:1.3
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.3
	gdb-csl-symbian-20060226-branch:1.3.0.26
	gdb-csl-symbian-20060226-branchpoint:1.3
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.3
	msnyder-reverse-20060331-branch:1.3.0.24
	msnyder-reverse-20060331-branchpoint:1.3
	gdb-csl-available-20060303-branch:1.3.0.22
	gdb-csl-available-20060303-branchpoint:1.3
	gdb-csl-20060226-branch:1.3.0.20
	gdb-csl-20060226-branchpoint:1.3
	gdb_6_4-20051202-release:1.3
	msnyder-fork-checkpoint-branch:1.3.0.18
	msnyder-fork-checkpoint-branchpoint:1.3
	gdb-csl-gxxpro-6_3-branch:1.3.0.16
	gdb-csl-gxxpro-6_3-branchpoint:1.3
	gdb_6_4-branch:1.3.0.14
	gdb_6_4-2005-11-01-branchpoint:1.3
	gdb-csl-arm-20051020-branch:1.3.0.12
	gdb-csl-arm-20051020-branchpoint:1.3
	gdb-csl-arm-20050325-2005-q1b:1.3
	gdb-csl-arm-20050325-2005-q1a:1.3
	csl-arm-20050325-branch:1.3.0.10
	csl-arm-20050325-branchpoint:1.3
	gdb_6_3-20041109-release:1.3
	gdb_6_3-branch:1.3.0.6
	gdb_6_3-20041019-branchpoint:1.3
	drow_intercu-merge-20040921:1.3
	drow_intercu-merge-20040915:1.3
	jimb-gdb_6_2-e500-branch:1.3.0.8
	jimb-gdb_6_2-e500-branchpoint:1.3
	gdb_6_2-20040730-release:1.3
	gdb_6_2-branch:1.3.0.4
	gdb_6_2-2004-07-10-gmt-branchpoint:1.3
	gdb_6_1_1-20040616-release:1.2
	gdb_6_1-2004-04-05-release:1.2
	drow_intercu-merge-20040402:1.3
	drow_intercu-merge-20040327:1.3
	ezannoni_pie-20040323-branch:1.3.0.2
	ezannoni_pie-20040323-branchpoint:1.3
	cagney_tramp-20040321-mergepoint:1.3
	gdb_6_1-branch:1.2.0.10
	gdb_6_1-2004-03-01-gmt-branchpoint:1.2
	drow_intercu-20040221-branch:1.2.0.8
	drow_intercu-20040221-branchpoint:1.2
	cagney_bfdfile-20040213-branch:1.2.0.6
	cagney_bfdfile-20040213-branchpoint:1.2
	drow-cplus-merge-20040208:1.2
	carlton_dictionary-20040126-merge:1.2
	cagney_bigcore-20040122-branch:1.2.0.4
	cagney_bigcore-20040122-branchpoint:1.2
	drow-cplus-merge-20040113:1.2
	drow-cplus-merge-20031224:1.2
	drow-cplus-merge-20031220:1.2
	carlton_dictionary-20031215-merge:1.2
	drow-cplus-branch:1.2.0.2
	drow-cplus-merge-20031214:1.2
	carlton-dictionary-20031111-merge:1.2;
locks; strict;
comment	@# @;


1.3
date	2004.03.01.10.11.45;	author rsandifo;	state Exp;
branches;
next	1.2;

1.2
date	2003.10.10.19.30.50;	author brolley;	state Exp;
branches
	1.2.2.1
	1.2.8.1;
next	1.1;

1.1
date	2003.10.08.18.21.02;	author brolley;	state Exp;
branches;
next	;

1.2.2.1
date	2003.12.14.20.28.38;	author drow;	state Exp;
branches;
next	;

1.2.8.1
date	2004.03.27.17.38.24;	author drow;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Add fr450 support.
@
text
@# frv testcase to generate fp_exception
# mach: fr550
	.include "testutils.inc"

	float_constants
	start
	load_float_constants

	.global align
align:
	; clear the packing bit if the insn at 'pack:'. We can't simply use
	; '.p' because the assembler will catch the error.
	set_gr_mem	pack,gr10
	and_gr_immed	0x7fffffff,gr10
	set_mem_gr	gr10,pack
	set_gr_addr	pack,gr10
	flush_data_cache gr10

	; Make the the source register number odd at badst. We can't simply
	; code an odd register number because the assembler will catch the
	; error.
	set_gr_mem	badst,gr10
	or_gr_immed	0x02000000,gr10
	set_mem_gr	gr10,badst
	set_gr_addr	badst,gr10
	flush_data_cache gr10

	; Make the the dest register number odd at badld. We can't simply
	; code an odd register number because the assembler will catch the
	; error.
	set_gr_mem	badld,gr10
	or_gr_immed	0x02000000,gr10
	set_mem_gr	gr10,badld
	set_gr_addr	badld,gr10
	flush_data_cache gr10

	and_spr_immed	-4081,tbr		; clear tbr.tt
	set_gr_spr	tbr,gr17
	inc_gr_immed	0x070,gr17		; address of exception handler
	set_bctrlr_0_0  gr17
	inc_gr_immed	0x060,gr17		; address of exception handler
	set_bctrlr_0_0  gr17
	set_spr_immed	128,lcr
	set_spr_addr	ok1,lr
	set_psr_et	1
	inc_gr_immed	-4,sp		; for alignment

	set_gr_immed	0,gr20		; PC increment
	set_gr_immed	0,gr15

	set_spr_addr	ok3,lr
	set_gr_immed	4,gr20		; PC increment
badst:	stdfi		fr0,@@(sp,0)	; misaligned reg -- slot I0
	test_gr_immed	1,gr15

	set_spr_addr	ok4,lr
	set_gr_immed	8,gr20		; PC increment
	nop.p
badld:	lddfi		@@(sp,0),fr8	; misaligned reg -- slot I1
	test_gr_immed	2,gr15

	set_spr_addr	ok5,lr
	set_gr_immed	20,gr20		; PC increment
	fnegs.p		fr9,fr9
	fnegs.p		fr9,fr10
	fnegs.p		fr9,fr11
pack:	fnegs		fr10,fr12
	fnegs		fr10,fr13	; packing violation
	test_gr_immed	3,gr15

	set_spr_addr	ok1,lr
	set_gr_immed	4,gr20		; PC increment
bad:	.word		0x83e502c4	; fmadds fr16,fr4,fr1 (unimplemented)
	test_gr_immed	4,gr15

	and_spr_immed	0xfbffffff,fsr0		; disable div/0 fp_exception
	set_fr_iimmed	0x7f7f,0xffff,fr0
	set_fr_iimmed	0x0000,0x0000,fr1
	fdivs		fr0,fr1,fr2		; div/0 -- no exception
	test_spr_bits	0x100000,20,0x0,fsr0	; fsr0.qne is never set
	test_spr_bits	0xfc00,10,0x4,fsr0	; fsr0.aexc is still set
	test_spr_bits	0xe0000,17,0x0,fsr0	; fsr0.ftt is clear

	set_spr_addr	ok2,lr
	set_gr_immed	0,gr20			; PC increment
	or_spr_immed	0x04000000,fsr0		; enable div/0 fp_exception
	set_fr_iimmed	0xdead,0xbeef,fr2
div0:	fdivs		fr0,fr1,fr2		; fp_exception - div/0
	test_fr_iimmed	0xdeadbeef,fr2		; fr2 not updated
	test_gr_immed	5,gr15

	and_spr_immed	0xfdffffff,fsr0		; disable inexact fp_exception
	fsqrts		fr32,fr2		; inexact -- no exception
	test_spr_bits	0x100000,20,0x0,fsr0	; fsr0.qne is never set
	test_spr_bits	0xfc00,10,0x6,fsr0	; fsr0.aexc is set
	test_spr_bits	0xe0000,17,0x0,fsr0	; fsr0.ftt is clear

	set_fr_fr	fr2,fr3			; sqrt 2
	set_fr_iimmed	0xdead,0xbeef,fr2
	set_spr_addr	ok6,lr
	or_spr_immed	0x02000000,fsr0		; enable inexact fp_exception
inxt1:	fsqrts		fr32,fr2		; fp_exception - inexact
	test_gr_immed	6,gr15			; handler called
	test_fr_fr	fr2,fr3			; fr2 updated

	set_fr_iimmed	0xdead,0xbeef,fr2
	set_spr_addr	ok7,lr
inxt2:	fsqrts		fr32,fr2		; fp_exception - inexact again
	test_gr_immed	7,gr15			; handler called
	test_fr_fr	fr2,fr3			; fr2 updated

	pass

; exception handler 1 -- illegal_instruction: bad insn
ok1:
	test_spr_immed	1,esfr1			; esr0 active
	test_spr_bits	0x3e,1,0x5,esr0		; esr0.ec is set
	test_spr_bits	0x1,0,0x1,esr0		; esr0.valid is set
	bra		ret

; exception handler 2 - fp_exception: divide by 0
ok2:
	test_spr_bits	0x100000,20,0x0,fsr0	; fsr0.qne is clear
	test_spr_bits	0xe0000,17,0x1,fsr0	; fsr0.ftt is set
	test_spr_bits	0xfc00,10,0x4,fsr0	; fsr0.aexc is still set

	test_spr_immed	4,esfr1			; esr2 active
	test_spr_bits	0x3e,1,0xd,esr2		; esr2.ec is set
	test_spr_bits	0x1,0,0x1,esr2		; esr2.valid is set
	test_spr_addr	div0,epcr2		; epcr2 is set
	bra		ret

; exception handler 3 - illegal_instruction: register exception
ok3:
	test_spr_immed	1,esfr1			; esr0 active
	test_spr_bits	0x3e,1,0x5,esr0		; esr0.ec is set
	test_spr_bits	0x1,0,0x1,esr0		; esr0.valid is set
	bra		ret

; exception handler 4 - illegal_instruction: register exception
ok4:
	test_spr_immed	1,esfr1			; esr0 active
	test_spr_bits	0x3e,1,0x5,esr0		; esr0.ec is set
	test_spr_bits	0x1,0,0x1,esr0		; esr0.valid is set
	bra		ret

; exception handler 5 - illegal_instruction: sequence violation
ok5:
	test_spr_immed	1,esfr1			; esr0 active
	test_spr_bits	0x3e,1,0x5,esr0		; esr0.ec is set
	test_spr_bits	0x1,0,0x1,esr0		; esr0.valid is set
	bra		ret

; exception handler 6 - fp_exception: inexact
ok6:
	test_spr_bits	0x100000,20,0x0,fsr0	; fsr0.qne is clear
	test_spr_bits	0xe0000,17,0x1,fsr0	; fsr0.ftt is set
	test_spr_bits	0xfc00,10,0x6,fsr0	; fsr0.aexc is still set

	test_spr_immed	4,esfr1			; esr2 active
	test_spr_bits	0x3e,1,0xd,esr2		; esr2.ec is set
	test_spr_bits	0x1,0,0x1,esr2		; esr2.valid is set
	test_spr_addr	inxt1,epcr2		; epcr2 is set
	bra		ret

; exception handler 7 - fp_exception: inexact again
ok7:
	test_spr_bits	0x100000,20,0x0,fsr0	; fsr0.qne is clear
	test_spr_bits	0xe0000,17,0x1,fsr0	; fsr0.ftt is set
	test_spr_bits	0xfc00,10,0x6,fsr0	; fsr0.aexc is still set

	test_spr_immed	4,esfr1			; esr2 active
	test_spr_bits	0x3e,1,0xd,esr2		; esr2.ec is set
	test_spr_bits	0x1,0,0x1,esr2		; esr2.valid is set
	test_spr_addr	inxt2,epcr2		; epcr2 is set
	bra		ret

ret:
	inc_gr_immed	1,gr15
	movsg		pcsr,gr60
	add		gr60,gr20,gr60
	movgs		gr60,pcsr
	rett		0
	fail

@


1.2
log
@2003-10-10  Dave Brolley  <brolley@@redhat.com>

        * sim/frv/testutils.inc (or_gr_immed): New macro.
        * sim/frv/fp_exception-fr550.cgs: Write insns using
        unaligned registers into the program in order to
        cause the required exceptions.
        * sim/frv/fp_exception.cgs: Ditto.
        * sim/frv/regalign.cgs: Ditto.
@
text
@d73 1
a73 1
bad:	fmadds      	fr16,fr4,fr1	; unimplemented
@


1.2.8.1
log
@Merge mainline to intercu branch.
@
text
@d73 1
a73 1
bad:	.word		0x83e502c4	; fmadds fr16,fr4,fr1 (unimplemented)
@


1.2.2.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@@


1.1
log
@2003-10-06  Dave Brolley  <brolley@@redhat.com>

        * sim/frv/fr550: New subdirectory.
        * sim/frv/fr400/*.cgs: Add fr550 as appropriate.
        * sim/frv/fr500/*.cgs: Add fr550 as appropriate.
        * sim/frv/interrupts/*.cgs: Add fr550 as appropriate.
        * sim/frv/interrupts/*-fr550.cgs: New test cases for fr550.
@
text
@d19 18
d53 1
a53 1
badst1:	stdfi		fr1,@@(sp,0)	; misaligned reg -- slot I0
d59 1
a59 1
badst2:	lddfi		@@(sp,0),fr9	; misaligned reg -- slot I1
@

