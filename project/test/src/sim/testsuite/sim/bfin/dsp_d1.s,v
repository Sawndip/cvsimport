head	1.1;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.1
	gdb_7_6-2013-04-26-release:1.1
	gdb_7_6-branch:1.1.0.6
	gdb_7_6-2013-03-12-branchpoint:1.1
	gdb_7_5_1-2012-11-29-release:1.1
	gdb_7_5-2012-08-17-release:1.1
	gdb_7_5-branch:1.1.0.4
	gdb_7_5-2012-07-18-branchpoint:1.1
	gdb_7_4_1-2012-04-26-release:1.1
	gdb_7_4-2012-01-24-release:1.1
	gdb_7_4-branch:1.1.0.2
	gdb_7_4-2011-12-13-branchpoint:1.1;
locks; strict;
comment	@# @;


1.1
date	2011.06.04.17.44.21;	author vapier;	state Exp;
branches;
next	;


desc
@@


1.1
log
@sim: bfin: import testsuite

Now that the common sim testsuite code supports .S and .c files, we
can import the Blackfin testsuite.  There are about ~800 tests here,
so I'm only attaching a compressed patch of them.  Other than adding
files to sim/testsuite/sim/bfin/, the sim/configure.tgt file was
updated to mark Blackfin as having a testsuite, and sim/configure
regenerated.

Signed-off-by: Mike Frysinger <vapier@@gentoo.org>
@
text
@/*  DAG test program.
 *  Test circular buffers
 */
# mach: bfin

.include "testutils.inc"
	start

	loadsym I0, foo;
	loadsym B0, foo;
	loadsym R2, foo;
	L0 = 0x10 (X);
	M1 = 8 (X);
	R0 = [ I0 ++ M1 ];
	R7 = I0;
	R1 = R7 - R2
	DBGA ( R1.L , 0x0008 );
	R0 = [ I0 ++ M1 ];
	R7 = I0;

	R1 = R7 - R2;
	DBGA ( R1.L , 0x0000 );
	R0 = [ I0 ++ M1 ];
	R7 = I0;
	R1 = R7 - R2
	DBGA ( R1.L , 0x0008 );

	loadsym I0, foo;
	loadsym B0, foo;
	loadsym R2, foo;
	L0 = 0x10 (X);
	M1 = -4 (X);
	R0 = [ I0 ++ M1 ];
	R7 = I0;
	R1 = R7 - R2
	DBGA ( R1.L , 0x000c );
	R0 = [ I0 ++ M1 ];
	R7 = I0;
	R1 = R7 - R2
	DBGA ( R1.L , 0x0008 );
	R0 = [ I0 ++ M1 ];
	R7 = I0;
	R1 = R7 - R2;
	DBGA ( R1.L , 0x0004 );
	R0 = [ I0 ++ M1 ];
	R7 = I0;
	R1 = R7 - R2;
	DBGA ( R1.L , 0x0000 );
	R0 = [ I0 ++ M1 ];
	R7 = I0;
	R1 = R7 - R2;
	DBGA ( R1.L , 0x000c );

	loadsym I0, foo;
	loadsym B0, foo;
	loadsym R2, foo;
	L0 = 0x8 (X);
	R0 = [ I0 ++ ];
	R7 = I0;
	R1 = R7 - R2;
	DBGA ( R1.L , 0x0004 );
	R0 = [ I0 ++ ];
	R7 = I0;
	R1 = R7 - R2;
	DBGA ( R1.L , 0x0000 );
	R0 = [ I0 ++ ];
	R7 = I0;
	R1 = R7 - R2;
	DBGA ( R1.L , 0x0004 );

	loadsym I0, foo;
	loadsym B0, foo;
	loadsym R2, foo;
	L0 = 0x8 (X);
	R0.L = W [ I0 ++ ];
	R7 = I0;
	R1 = R7 - R2;
	DBGA ( R1.L , 0x0002 );
	R0.L = W [ I0 ++ ];
	R7 = I0;
	R1 = R7 - R2;
	DBGA ( R1.L , 0x0004 );
	R0.L = W [ I0 ++ ];
	R7 = I0;
	R1 = R7 - R2;
	DBGA ( R1.L , 0x0006 );
	R0.L = W [ I0 ++ ];
	R7 = I0;
	R1 = R7 - R2;
	DBGA ( R1.L , 0x0000 );
	R0.L = W [ I0 ++ ];
	R7 = I0;
	R1 = R7 - R2;
	DBGA ( R1.L , 0x0002 );

	loadsym I0, foo;
	loadsym B0, foo;
	loadsym R2, foo;
	L0 = 0x8 (X);
	R0 = [ I0 -- ];
	R7 = I0;
	R1 = R7 - R2;
	DBGA ( R1.L , 0x0004 );
	R0 = [ I0 -- ];
	R7 = I0;
	R1 = R7 - R2;
	DBGA ( R1.L , 0x0000 );
	R0 = [ I0 -- ];
	R7 = I0;
	R1 = R7 - R2;
	DBGA ( R1.L , 0x0004 );

	pass

	.data
foo:
	.space (0x10);
@
