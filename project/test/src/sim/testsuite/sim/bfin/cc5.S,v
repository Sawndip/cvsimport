head	1.1;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.1
	gdb_7_6-2013-04-26-release:1.1
	gdb_7_6-branch:1.1.0.6
	gdb_7_6-2013-03-12-branchpoint:1.1
	gdb_7_5_1-2012-11-29-release:1.1
	gdb_7_5-2012-08-17-release:1.1
	gdb_7_5-branch:1.1.0.4
	gdb_7_5-2012-07-18-branchpoint:1.1
	gdb_7_4_1-2012-04-26-release:1.1
	gdb_7_4-2012-01-24-release:1.1
	gdb_7_4-branch:1.1.0.2
	gdb_7_4-2011-12-13-branchpoint:1.1;
locks; strict;
comment	@# @;


1.1
date	2011.06.04.17.44.21;	author vapier;	state Exp;
branches;
next	;


desc
@@


1.1
log
@sim: bfin: import testsuite

Now that the common sim testsuite code supports .S and .c files, we
can import the Blackfin testsuite.  There are about ~800 tests here,
so I'm only attaching a compressed patch of them.  Other than adding
files to sim/testsuite/sim/bfin/, the sim/configure.tgt file was
updated to mark Blackfin as having a testsuite, and sim/configure
regenerated.

Signed-off-by: Mike Frysinger <vapier@@gentoo.org>
@
text
@//  ALU test program.
//  Test instructions   reg = (A0+=A1)

#include "test.h"
.include "testutils.inc"
	start

	R0 = 0;
	ASTAT = R0;

	loadsym P0, data0;

	R0 = [ P0 ++ ];
	R1 = [ P0 ++ ];
	R2 = [ P0 ++ ];
	R3 = [ P0 ++ ];
	R4 = [ P0 ++ ];

// add accums and transfer result
	A1 = A0 = 0;
	A1.w = R0;
	A0.w = R0;
	R6 = ( A0 += A1 );
	CHECKREG R6, 0x22222222;
	R6 = A0.w;
	CHECKREG R6, 0x22222222;
	R7 = A0.x;
	CHECKREG R7, 0;
	R6 = A1.w;
	CHECKREG R6, 0x11111111;
	R7 = A1.x;
	CHECKREG R7, 0;

// add accums and transfer result (saturate positive)
	R7 = 0;
	ASTAT = R7;
	A1 = A0 = 0;
	A1.w = R1;
	A0.w = R1;
	R6 = ( A0 += A1 );
	CHECKREG R6, 0x7fffffff;
	R6 = A0.w;
	CHECKREG R6, 0xfffffffe;
	R7 = A0.x;
	CHECKREG R7, 0;
	R6 = A1.w;
	CHECKREG R6, 0x7fffffff;
	_DBG ASTAT;
	R7 = A1.x;
	_DBG ASTAT;
	CHECKREG R7, 0;
	R7 = ASTAT;
	CHECKREG R7, (_VS|_V|_V_COPY);

// add accums and transfer result (saturate negative)
	R7 = 0;
	ASTAT = R7;
	A1 = A0 = 0;
	A1.w = R2;
	A0.w = R2;
	A1.x = R3.L;
	A0.x = R3.L;
	R6 = ( A0 += A1 );
	CHECKREG R6, 0x80000000;
	R6 = A0.w;
	CHECKREG R6, 0x00000000;
	R7 = A0.x;
	CHECKREG R6, 0;
	R6 = A1.w;
	CHECKREG R6, 0x80000000;
	R7 = A1.x;
	CHECKREG R7, 0xffffffff;
	R7 = ASTAT;
	_DBG ASTAT;
	CHECKREG R7, (_VS|_V|_V_COPY|_AC0|_AC0_COPY|_AN);

	pass

	.data
data0:
	.dw 0x1111
	.dw 0x1111
	.dw 0xffff
	.dw 0x7fff
	.dw 0x0000
	.dw 0x8000
	.dw 0x00ff
	.dw 0x0000
	.dw 0x0000
	.dw 0x0000
@
