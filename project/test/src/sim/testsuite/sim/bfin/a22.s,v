head	1.1;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.1
	gdb_7_6-2013-04-26-release:1.1
	gdb_7_6-branch:1.1.0.6
	gdb_7_6-2013-03-12-branchpoint:1.1
	gdb_7_5_1-2012-11-29-release:1.1
	gdb_7_5-2012-08-17-release:1.1
	gdb_7_5-branch:1.1.0.4
	gdb_7_5-2012-07-18-branchpoint:1.1
	gdb_7_4_1-2012-04-26-release:1.1
	gdb_7_4-2012-01-24-release:1.1
	gdb_7_4-branch:1.1.0.2
	gdb_7_4-2011-12-13-branchpoint:1.1;
locks; strict;
comment	@# @;


1.1
date	2011.06.04.17.44.21;	author vapier;	state Exp;
branches;
next	;


desc
@@


1.1
log
@sim: bfin: import testsuite

Now that the common sim testsuite code supports .S and .c files, we
can import the Blackfin testsuite.  There are about ~800 tests here,
so I'm only attaching a compressed patch of them.  Other than adding
files to sim/testsuite/sim/bfin/, the sim/configure.tgt file was
updated to mark Blackfin as having a testsuite, and sim/configure
regenerated.

Signed-off-by: Mike Frysinger <vapier@@gentoo.org>
@
text
@//  Test ALU  NEG accumulators
# mach: bfin

.include "testutils.inc"
	start


	R0 = 0xffffffff;
	A0.w = R0;
	R0 = 0x7f (X);
	A0.x = R0;
	A0 = - A0;
	_DBG A0;
	R4 = A0.w;
	R5 = A0.x;
	DBGA ( R4.H , 0x0000 );	DBGA ( R4.L , 0x0001 );
	DBGA ( R5.H , 0xffff );	DBGA ( R5.L , 0xff80 );

	R0 = 0x1;
	A0.w = R0;
	R0 = 0x0;
	A0.x = R0;
	A0 = - A0;
	R4 = A0.w;
	R5 = A0.x;
	_DBG A0;
	DBGA ( R4.H , 0xffff );	DBGA ( R4.L , 0xffff );
	DBGA ( R5.H , 0xffff );	DBGA ( R5.L , 0xffff );

	R0 = 0xffffffff;
	A0.w = R0;
	R0 = 0xff (X);
	A0.x = R0;
	A0 = - A0;
	R4 = A0.w;
	R5 = A0.x;
	DBGA ( R4.H , 0x0000 );	DBGA ( R4.L , 0x0001 );
	DBGA ( R5.H , 0x0000 );	DBGA ( R5.L , 0x0000 );

	R0 = 0x00000000;
	A0.w = R0;
	R0 = 0x80 (X);
	A0.x = R0;
	A0 = - A0;
	R4 = A0.w;
	R5 = A0.x;
	DBGA ( R4.H , 0xffff );	DBGA ( R4.L , 0xffff );
	DBGA ( R5.H , 0x0000 );	DBGA ( R5.L , 0x007f );

//  NEG NEG
	R0 = 0x00000000;
	A0.w = R0;
	R0 = 0x80 (X);
	A0.x = R0;

	R0 = 0xffffffff;
	A1.w = R0;
	R0 = 0x7f (X);
	A1.x = R0;

	A1 = - A1, A0 = - A0;

	R4 = A0.w;
	R5 = A0.x;
	DBGA ( R4.H , 0xffff );	DBGA ( R4.L , 0xffff );
	DBGA ( R5.H , 0x0000 );	DBGA ( R5.L , 0x007f );

	R4 = A1.w;
	R5 = A1.x;
	_DBG A1;
	DBGA ( R4.H , 0x0000 );	DBGA ( R4.L , 0x0001 );
	DBGA ( R5.H , 0xffff );	DBGA ( R5.L , 0xff80 );

//  NEG NEG register
	R0.L = 0x0001;
	R0.H = 0x8000;

	R3 = - R0 (V);
	DBGA ( R3.H , 0x7fff );	DBGA ( R3.L , 0xffff );

	_DBG ASTAT;

	pass
@
