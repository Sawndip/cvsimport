head	1.1;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.1
	gdb_7_6-2013-04-26-release:1.1
	gdb_7_6-branch:1.1.0.6
	gdb_7_6-2013-03-12-branchpoint:1.1
	gdb_7_5_1-2012-11-29-release:1.1
	gdb_7_5-2012-08-17-release:1.1
	gdb_7_5-branch:1.1.0.4
	gdb_7_5-2012-07-18-branchpoint:1.1
	gdb_7_4_1-2012-04-26-release:1.1
	gdb_7_4-2012-01-24-release:1.1
	gdb_7_4-branch:1.1.0.2
	gdb_7_4-2011-12-13-branchpoint:1.1;
locks; strict;
comment	@# @;


1.1
date	2011.06.04.17.44.21;	author vapier;	state Exp;
branches;
next	;


desc
@@


1.1
log
@sim: bfin: import testsuite

Now that the common sim testsuite code supports .S and .c files, we
can import the Blackfin testsuite.  There are about ~800 tests here,
so I'm only attaching a compressed patch of them.  Other than adding
files to sim/testsuite/sim/bfin/, the sim/configure.tgt file was
updated to mark Blackfin as having a testsuite, and sim/configure
regenerated.

Signed-off-by: Mike Frysinger <vapier@@gentoo.org>
@
text
@/*  ALU test program.
 *  Test instructions
 *  (r7,r6) = +/- (r0,r1);
 *  (r7,r6) = +/- (r0,r1)s;
 */
# mach: bfin

.include "testutils.inc"
	start


// test positive overflow
	R0.L = 0xffff;
	R0.H = 0x7fff;
	R1.L = 0x0001;
	R1.H = 0x0000;
	R7 = 0;
	ASTAT = R7;
	R6 = R0 + R1, R7 = R0 - R1 (NS);
	DBGA ( R6.L , 0x0000 );
	DBGA ( R6.H , 0x8000 );
	DBGA ( R7.L , 0xfffe );
	DBGA ( R7.H , 0x7fff );
	CC = AZ;	R7 = CC; DBGA ( R7.L , 0x0 );
	CC = AN;	R7 = CC; DBGA ( R7.L , 0x1 );
	CC =  V;	R7 = CC; DBGA ( R7.L , 0x1 );
	CC = AC0;	R7 = CC; DBGA ( R7.L , 0x1 );

// test positive overflow
	R0.L = 0xffff;
	R0.H = 0x7fff;
	R1.L = 0x0001;
	R1.H = 0x0000;
	R7 = 0;
	ASTAT = R7;
	R7 = R0 + R1, R6 = R0 - R1 (NS);
	DBGA ( R6.L , 0xfffe );
	DBGA ( R6.H , 0x7fff );
	DBGA ( R7.L , 0x0000 );
	DBGA ( R7.H , 0x8000 );
	CC = AZ;	R7 = CC; DBGA ( R7.L , 0x0 );
	CC = AN;	R7 = CC; DBGA ( R7.L , 0x1 );
	CC =  V;	R7 = CC; DBGA ( R7.L , 0x1 );
	CC = AC0;	R7 = CC; DBGA ( R7.L , 0x1 );

// test positive sat
	R0.L = 0xffff;
	R0.H = 0x7fff;
	R1.L = 0x0001;
	R1.H = 0x0000;
	R7 = 0;
	ASTAT = R7;
	R6 = R0 + R1, R7 = R0 - R1 (S);
	DBGA ( R6.L , 0xffff );
	DBGA ( R6.H , 0x7fff );
	DBGA ( R7.L , 0xfffe );
	DBGA ( R7.H , 0x7fff );
	CC = AZ;	R7 = CC; DBGA ( R7.L , 0x0 );
	CC = AN;	R7 = CC; DBGA ( R7.L , 0x0 );
	CC =  V;	R7 = CC; DBGA ( R7.L , 0x1 );
	CC = AC0;	R7 = CC; DBGA ( R7.L , 0x1 );

// test positive sat
	R0.L = 0xffff;
	R0.H = 0x7fff;
	R1.L = 0x0001;
	R1.H = 0x0000;
	R7 = 0;
	ASTAT = R7;
	R7 = R0 + R1, R6 = R0 - R1 (S);
	DBGA ( R6.L , 0xfffe );
	DBGA ( R6.H , 0x7fff );
	DBGA ( R7.L , 0xffff );
	DBGA ( R7.H , 0x7fff );
	CC = AZ;	R7 = CC; DBGA ( R7.L , 0x0 );
	CC = AN;	R7 = CC; DBGA ( R7.L , 0x0 );
	CC =  V;	R7 = CC; DBGA ( R7.L , 0x1 );
	CC = AC0;	R7 = CC; DBGA ( R7.L , 0x1 );

	pass
@
