head	1.1;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.1
	gdb_7_6-2013-04-26-release:1.1
	gdb_7_6-branch:1.1.0.6
	gdb_7_6-2013-03-12-branchpoint:1.1
	gdb_7_5_1-2012-11-29-release:1.1
	gdb_7_5-2012-08-17-release:1.1
	gdb_7_5-branch:1.1.0.4
	gdb_7_5-2012-07-18-branchpoint:1.1
	gdb_7_4_1-2012-04-26-release:1.1
	gdb_7_4-2012-01-24-release:1.1
	gdb_7_4-branch:1.1.0.2
	gdb_7_4-2011-12-13-branchpoint:1.1;
locks; strict;
comment	@# @;


1.1
date	2011.06.04.17.44.22;	author vapier;	state Exp;
branches;
next	;


desc
@@


1.1
log
@sim: bfin: import testsuite

Now that the common sim testsuite code supports .S and .c files, we
can import the Blackfin testsuite.  There are about ~800 tests here,
so I'm only attaching a compressed patch of them.  Other than adding
files to sim/testsuite/sim/bfin/, the sim/configure.tgt file was
updated to mark Blackfin as having a testsuite, and sim/configure
regenerated.

Signed-off-by: Mike Frysinger <vapier@@gentoo.org>
@
text
@//Original:/testcases/seq/se_rets_hazard/se_rets_hazard.dsp
# mach: bfin

.include "testutils.inc"
	start


BOOT:
	FP = SP;	// and frame pointer

	INIT_R_REGS 0;	// initialize general purpose regs




	ASTAT = r0;	// reset sequencer registers

// The Main Program


START:
	loadsym r1, SUB1;
	RETS = r1;
	RTS;

MID1:
	CHECKREG r6, 0;	// shouldn't be BAD
	R6.L = 0xBAD2;	// In case we come back to MID1
	loadsym P1, MID2;
	CALL ( P1 );
	RTS;

MID2:
	loadsym R1, END;
	RETS = r1;
	[ -- SP ] = I0;
	LINK 0;
	I0 = FP;
	UNLINK;
	RTS;

END:

	pass	// Call Endtest Macro

// Subroutines and Functions

SUB1:               // Code goes here
	CHECKREG r7, 0;	// should be if sub executed
	R7.L = 0xBAD;	// In case we come back to SUB1
	loadsym R2, MID1;
	[ -- SP ] = R2;
	RETS = [sp++];
	RTS;
	R6.L = 0xBAD;
@
