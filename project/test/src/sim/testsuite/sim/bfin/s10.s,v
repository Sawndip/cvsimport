head	1.1;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.1
	gdb_7_6-2013-04-26-release:1.1
	gdb_7_6-branch:1.1.0.6
	gdb_7_6-2013-03-12-branchpoint:1.1
	gdb_7_5_1-2012-11-29-release:1.1
	gdb_7_5-2012-08-17-release:1.1
	gdb_7_5-branch:1.1.0.4
	gdb_7_5-2012-07-18-branchpoint:1.1
	gdb_7_4_1-2012-04-26-release:1.1
	gdb_7_4-2012-01-24-release:1.1
	gdb_7_4-branch:1.1.0.2
	gdb_7_4-2011-12-13-branchpoint:1.1;
locks; strict;
comment	@# @;


1.1
date	2011.06.04.17.44.22;	author vapier;	state Exp;
branches;
next	;


desc
@@


1.1
log
@sim: bfin: import testsuite

Now that the common sim testsuite code supports .S and .c files, we
can import the Blackfin testsuite.  There are about ~800 tests here,
so I'm only attaching a compressed patch of them.  Other than adding
files to sim/testsuite/sim/bfin/, the sim/configure.tgt file was
updated to mark Blackfin as having a testsuite, and sim/configure
regenerated.

Signed-off-by: Mike Frysinger <vapier@@gentoo.org>
@
text
@//  Shifter test program.
//  Test instructions
//  RL0 = SIGNBITS R1;
//  RL0 = SIGNBITS RL1;
//  RL0 = SIGNBITS RH1;

# mach: bfin

.include "testutils.inc"
	start


// on 32-b word

	R1.L = 0xffff;
	R1.H = 0x7fff;
	R0.L = SIGNBITS R1;
	DBGA ( R0.L , 0x0000 );

	R1.L = 0xffff;
	R1.H = 0x30ff;
	R0.L = SIGNBITS R1;
	DBGA ( R0.L , 0x0001 );

	R1.L = 0xff0f;
	R1.H = 0x10ff;
	R0.L = SIGNBITS R1;
	DBGA ( R0.L , 0x0002 );

	R1.L = 0xff0f;
	R1.H = 0xe0ff;
	R0.L = SIGNBITS R1;
	DBGA ( R0.L , 0x0002 );

	R1.L = 0x0001;
	R1.H = 0x0000;
	R0.L = SIGNBITS R1;
	DBGA ( R0.L , 0x0001e );

	R1.L = 0xfffe;
	R1.H = 0xffff;
	R0.L = SIGNBITS R1;
	DBGA ( R0.L , 0x0001e );

	R1.L = 0xffff;	// return largest norm for -1
	R1.H = 0xffff;
	R0.L = SIGNBITS R1;
	DBGA ( R0.L , 0x0001f );

	R1.L = 0;	// return largest norm for zero
	R1.H = 0;
	R0.L = SIGNBITS R1;
	DBGA ( R0.L , 0x001f );

// on 16-b word

	R1.L = 0x7fff;
	R1.H = 0xffff;
	R0.L = SIGNBITS R1.L;
	DBGA ( R0.L , 0x0000 );

	R1.L = 0x0fff;
	R1.H = 0x0001;
	R0.L = SIGNBITS R1.H;
	DBGA ( R0.L , 0x000e );

	R1.L = 0x0fff;
	R1.H = 0xffff;
	R0.L = SIGNBITS R1.H;
	DBGA ( R0.L , 0x000f );

	R1.L = 0x0fff;
	R1.H = 0xfffe;
	R0.L = SIGNBITS R1.H;
	DBGA ( R0.L , 0x000e );

	pass
@
