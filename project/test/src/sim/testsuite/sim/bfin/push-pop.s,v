head	1.1;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.1
	gdb_7_6-2013-04-26-release:1.1
	gdb_7_6-branch:1.1.0.6
	gdb_7_6-2013-03-12-branchpoint:1.1
	gdb_7_5_1-2012-11-29-release:1.1
	gdb_7_5-2012-08-17-release:1.1
	gdb_7_5-branch:1.1.0.4
	gdb_7_5-2012-07-18-branchpoint:1.1
	gdb_7_4_1-2012-04-26-release:1.1
	gdb_7_4-2012-01-24-release:1.1
	gdb_7_4-branch:1.1.0.2
	gdb_7_4-2011-12-13-branchpoint:1.1;
locks; strict;
comment	@# @;


1.1
date	2011.06.04.17.44.22;	author vapier;	state Exp;
branches;
next	;


desc
@@


1.1
log
@sim: bfin: import testsuite

Now that the common sim testsuite code supports .S and .c files, we
can import the Blackfin testsuite.  There are about ~800 tests here,
so I'm only attaching a compressed patch of them.  Other than adding
files to sim/testsuite/sim/bfin/, the sim/configure.tgt file was
updated to mark Blackfin as having a testsuite, and sim/configure
regenerated.

Signed-off-by: Mike Frysinger <vapier@@gentoo.org>
@
text
@# Blackfin testcase for push/pop instructions
# mach: bfin

	.include "testutils.inc"

	start

	# This uses R0/R1 as scratch ... assume those work fine in general
	.macro check loader:req, reg:req
	\loader \reg, 0x12345678
	[--SP] = \reg;
	R0 = [SP];
	R1 = \reg;
	CC = R0 == R1;
	IF !CC JUMP 8f;
	\loader \reg, 0x87654321
	\reg = [SP++];
	CC = R0 == R1;
	IF !CC JUMP 8f;
	# need to do a long jump to avoid PCREL issues
	jump 9f;
	8: jump 1f;
	9:
	.endm
	.macro imm_check reg:req
	check imm32, \reg
	.endm
	.macro dmm_check reg:req
	check dmm32, \reg
	.endm

	imm_check R2
	imm_check R3
	imm_check R4
	imm_check R5
	imm_check R6
	imm_check R7
	imm_check P0
	imm_check P1
	imm_check P2
	imm_check P3
	imm_check P4
	imm_check P5
	imm_check FP
	imm_check I0
	imm_check I1
	imm_check I2
	imm_check I3
	imm_check M0
	imm_check M1
	imm_check M2
	imm_check M3
	imm_check B0
	imm_check B1
	imm_check B2
	imm_check B3
	imm_check L0
	imm_check L1
	imm_check L2
	imm_check L3
	dmm_check A0.X
	dmm_check A0.W
	dmm_check A1.X
	dmm_check A1.W
	dmm_check LC0
	dmm_check LC1
	# Make sure the top/bottom regs have bit 1 set
	dmm_check LT0
	dmm_check LT1
	dmm_check LB0
	dmm_check LB1
	dmm_check RETS

	# These require supervisor resources
.ifndef BFIN_HOST
	dmm_check RETI
	dmm_check RETX
	dmm_check RETN
	# RETE likes to change on the fly with an ICE
	# dmm_check RETE
	# CYCLES can be user mode, but screws kernel
	dmm_check CYCLES
	dmm_check CYCLES2
	dmm_check USP

	# No one pushes/pops these
#	dmm_check EMUDAT
	dmm_check SEQSTAT
	dmm_check SYSCFG
.endif
	dmm_check ASTAT

	pass
1:
	fail
@
