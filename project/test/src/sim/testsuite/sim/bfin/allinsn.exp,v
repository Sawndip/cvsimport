head	1.2;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.2
	gdb_7_6-2013-04-26-release:1.2
	gdb_7_6-branch:1.2.0.4
	gdb_7_6-2013-03-12-branchpoint:1.2
	gdb_7_5_1-2012-11-29-release:1.2
	gdb_7_5-2012-08-17-release:1.2
	gdb_7_5-branch:1.2.0.2
	gdb_7_5-2012-07-18-branchpoint:1.2
	gdb_7_4_1-2012-04-26-release:1.1
	gdb_7_4-2012-01-24-release:1.1
	gdb_7_4-branch:1.1.0.2
	gdb_7_4-2011-12-13-branchpoint:1.1;
locks; strict;
comment	@# @;


1.2
date	2012.03.25.16.51.46;	author vapier;	state Exp;
branches;
next	1.1;

1.1
date	2011.06.04.17.44.21;	author vapier;	state Exp;
branches;
next	;


desc
@@


1.2
log
@sim: bfin: skip .c/.S tests if no compiler is available

Similar to logic in the cris exp, attempt a simple compile and if it fails
(presumably due to the compiler being broken), skip all the related tests.
Fortunately, most tests (~600 out of ~800) are pure assembly, so people should
still get pretty good coverage.

Signed-off-by: Mike Frysinger <vapier@@gentoo.org>
@
text
@# Analog Devices Blackfin simulator testsuite

if [istarget bfin-*-elf] {
    # all machines
    set all_machs "bfin"

    # See if we have a preprocessor available.
    if { [target_compile $srcdir/$subdir/usp.S compilercheck.x "preprocess" \
	  [list "incdir=$srcdir/$subdir"]] == "" } {
	set has_cpp 1
    } {
	verbose -log "Can't execute preprocessor"
	set has_cpp 0
    }

    # See if we have a compiler available.
    if { [target_compile $srcdir/$subdir/argc.c compilercheck.x "executable" \
	  [list "incdir=$srcdir/$subdir" "additional_flags=-msim"]] == "" } {
	set has_cc 1
    } {
	verbose -log "Can't execute C compiler"
	set has_cc 0
    }

    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.\[csS\]]] {
	# If we don't have a compiler available, skip tests :(.
	if { $has_cpp == 0 && [string match "*.S" $src] } {
	    untested $src
	    continue
	}
	if { $has_cc == 0 && [string match "*.c" $src] } {
	    untested $src
	    continue
	}

	# If we're only testing specific files and this isn't one of them,
	# skip it.
	if ![runtest_file_p $runtests $src] {
	    continue
	}
	run_sim_test $src $all_machs
    }
}
@


1.1
log
@sim: bfin: import testsuite

Now that the common sim testsuite code supports .S and .c files, we
can import the Blackfin testsuite.  There are about ~800 tests here,
so I'm only attaching a compressed patch of them.  Other than adding
files to sim/testsuite/sim/bfin/, the sim/configure.tgt file was
updated to mark Blackfin as having a testsuite, and sim/configure
regenerated.

Signed-off-by: Mike Frysinger <vapier@@gentoo.org>
@
text
@d7 18
d26 10
@

