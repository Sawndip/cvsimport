head	1.2;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.2
	gdb_7_6-2013-04-26-release:1.2
	gdb_7_6-branch:1.2.0.38
	gdb_7_6-2013-03-12-branchpoint:1.2
	gdb_7_5_1-2012-11-29-release:1.2
	gdb_7_5-2012-08-17-release:1.2
	gdb_7_5-branch:1.2.0.36
	gdb_7_5-2012-07-18-branchpoint:1.2
	gdb_7_4_1-2012-04-26-release:1.2
	gdb_7_4-2012-01-24-release:1.2
	gdb_7_4-branch:1.2.0.34
	gdb_7_4-2011-12-13-branchpoint:1.2
	gdb_7_3_1-2011-09-04-release:1.2
	gdb_7_3-2011-07-26-release:1.2
	gdb_7_3-branch:1.2.0.32
	gdb_7_3-2011-04-01-branchpoint:1.2
	gdb_7_2-2010-09-02-release:1.2
	gdb_7_2-branch:1.2.0.30
	gdb_7_2-2010-07-07-branchpoint:1.2
	gdb_7_1-2010-03-18-release:1.2
	gdb_7_1-branch:1.2.0.28
	gdb_7_1-2010-02-18-branchpoint:1.2
	gdb_7_0_1-2009-12-22-release:1.2
	gdb_7_0-2009-10-06-release:1.2
	gdb_7_0-branch:1.2.0.26
	gdb_7_0-2009-09-16-branchpoint:1.2
	arc-sim-20090309:1.2
	msnyder-checkpoint-072509-branch:1.2.0.24
	msnyder-checkpoint-072509-branchpoint:1.2
	arc-insight_6_8-branch:1.2.0.22
	arc-insight_6_8-branchpoint:1.2
	insight_6_8-branch:1.2.0.20
	insight_6_8-branchpoint:1.2
	reverse-20081226-branch:1.2.0.18
	reverse-20081226-branchpoint:1.2
	multiprocess-20081120-branch:1.2.0.16
	multiprocess-20081120-branchpoint:1.2
	reverse-20080930-branch:1.2.0.14
	reverse-20080930-branchpoint:1.2
	reverse-20080717-branch:1.2.0.12
	reverse-20080717-branchpoint:1.2
	msnyder-reverse-20080609-branch:1.2.0.10
	msnyder-reverse-20080609-branchpoint:1.2
	drow-reverse-20070409-branch:1.2.0.8
	drow-reverse-20070409-branchpoint:1.2
	gdb_6_8-2008-03-27-release:1.2
	gdb_6_8-branch:1.2.0.6
	gdb_6_8-2008-02-26-branchpoint:1.2
	gdb_6_7_1-2007-10-29-release:1.2
	gdb_6_7-2007-10-10-release:1.2
	gdb_6_7-branch:1.2.0.4
	gdb_6_7-2007-09-07-branchpoint:1.2
	insight_6_6-20070208-release:1.2
	gdb_6_6-2006-12-18-release:1.2
	gdb_6_6-branch:1.2.0.2
	gdb_6_6-2006-11-15-branchpoint:1.2
	insight_6_5-20061003-release:1.1
	gdb-csl-symbian-6_4_50_20060226-12:1.1
	nickrob-async-20060828-mergepoint:1.1
	gdb-csl-symbian-6_4_50_20060226-11:1.1
	gdb-csl-sourcerygxx-4_1-17:1.1
	gdb-csl-20060226-branch-local-2:1.1
	gdb-csl-sourcerygxx-4_1-14:1.1
	gdb-csl-sourcerygxx-4_1-13:1.1
	gdb-csl-sourcerygxx-4_1-12:1.1
	gdb-csl-sourcerygxx-3_4_4-21:1.1
	gdb_6_5-20060621-release:1.1
	gdb-csl-sourcerygxx-4_1-9:1.1
	gdb-csl-sourcerygxx-4_1-8:1.1
	gdb-csl-sourcerygxx-4_1-7:1.1
	gdb-csl-arm-2006q1-6:1.1
	gdb-csl-sourcerygxx-4_1-6:1.1
	gdb-csl-symbian-6_4_50_20060226-10:1.1
	gdb-csl-symbian-6_4_50_20060226-9:1.1
	gdb-csl-symbian-6_4_50_20060226-8:1.1
	gdb-csl-coldfire-4_1-11:1.1
	gdb-csl-sourcerygxx-3_4_4-19:1.1
	gdb-csl-coldfire-4_1-10:1.1
	gdb_6_5-branch:1.1.0.16
	gdb_6_5-2006-05-14-branchpoint:1.1
	gdb-csl-sourcerygxx-4_1-5:1.1
	nickrob-async-20060513-branch:1.1.0.14
	nickrob-async-20060513-branchpoint:1.1
	gdb-csl-sourcerygxx-4_1-4:1.1
	msnyder-reverse-20060502-branch:1.1.0.12
	msnyder-reverse-20060502-branchpoint:1.1
	gdb-csl-morpho-4_1-4:1.1
	gdb-csl-sourcerygxx-3_4_4-17:1.1
	readline_5_1-import-branch:1.1.0.10
	readline_5_1-import-branchpoint:1.1
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.1
	gdb-csl-symbian-20060226-branch:1.1.0.8
	gdb-csl-symbian-20060226-branchpoint:1.1
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.1
	msnyder-reverse-20060331-branch:1.1.0.6
	msnyder-reverse-20060331-branchpoint:1.1
	gdb-csl-available-20060303-branch:1.1.0.4
	gdb-csl-available-20060303-branchpoint:1.1
	gdb-csl-20060226-branch:1.1.0.2
	gdb-csl-20060226-branchpoint:1.1;
locks; strict;
comment	@ * @;


1.2
date	2006.10.02.03.18.51;	author hp;	state Exp;
branches;
next	1.1;

1.1
date	2005.11.21.04.48.19;	author hp;	state Exp;
branches;
next	;


desc
@@


1.2
log
@	* sim/cris/c/clone5.c, sim/cris/c/mprotect1.c,
	sim/cris/c/rtsigprocmask1.c, sim/cris/c/rtsigsuspend1.c,
	sim/cris/c/sig7.c, sim/cris/c/sigreturn1.c,
	sim/cris/c/sigreturn2.c, sim/cris/c/syscall1.c,
	sim/cris/c/syscall2.c, sim/cris/c/sysctl2.c, sim/cris/c/fcntl1.c,
	sim/cris/c/readlink2.c: Add code to print ENOSYS if syscall being
	tested returns ENOSYS.  Add early exit where needed.  Change any
	existing code to print "xyzzy", not "pass".
	* sim/cris/asm/option3.ms, sim/cris/asm/option4.ms,
	sim/cris/c/clone6.c, sim/cris/c/fcntl2.c,
	sim/cris/c/mprotect2.c, sim/cris/c/readlink11.c,
	sim/cris/c/rtsigprocmask2.c, sim/cris/c/rtsigsuspend2.c,
	sim/cris/c/sig13.c, sim/cris/c/sigreturn3.c,
	sim/cris/c/sigreturn4.c, sim/cris/c/syscall3.c,
	sim/cris/c/syscall4.c, sim/cris/c/syscall5.c,
	sim/cris/c/syscall6.c, sim/cris/c/syscall7.c,
	sim/cris/c/syscall8.c, sim/cris/c/sysctl3.c: New tests.
@
text
@/*
#notarget: cris*-*-elf
*/

#include <unistd.h>
#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int main (int argc, char *argv[])
{
  char buf[1024];
  char buf2[1024];
  int err;

  /* This is a special feature handled in the simulator.  The "42"
     should be formed from getpid () if this was a real program.  */
  err = readlink ("/proc/42/exe", buf, sizeof (buf));
  if (err < 0)
    {
      if (err == -1 && errno == ENOSYS)
	printf ("ENOSYS\n");
      printf ("xyzzy\n");
      exit (0);
    }      

  /* Don't use an abort in the following; it might cause the printf to
     not make it all the way to output and make debugging more
     difficult.  */

  /* We assume the program is called with no path, so we might need to
     prepend it.  */
  if (getcwd (buf2, sizeof (buf2)) != buf2)
    {
      perror ("getcwd");
      exit (1);
    }

  if (argv[0][0] == '/')
    {
#ifdef SYSROOTED
      if (strchr (argv[0] + 1, '/') != NULL)
	{
	  printf ("%s != %s\n", argv[0], strrchr (argv[0] + 1, '/'));
	  exit (1);
	}
#endif
      if (strcmp (argv[0], buf) != 0)
	{
	  printf ("%s != %s\n", buf, argv[0]);
	  exit (1);
	}
    }
  else if (argv[0][0] != '.')
    {
      if (buf2[strlen (buf2) - 1] != '/')
	strcat (buf2, "/");
      strcat (buf2, argv[0]);
      if (strcmp (buf2, buf) != 0)
	{
	  printf ("%s != %s\n", buf, buf2);
	  exit (1);
	}
    }
  else
    {
      strcat (buf2, argv[0] + 1);
      if (strcmp (buf, buf2) != 0)
	{
	  printf ("%s != %s\n", buf, buf2);
	  exit (1);
	}
    }

  printf ("pass\n");
  exit (0);
}


@


1.1
log
@	* sim/cris: New directory with C and assembly tests for the CRIS
	simulator.
@
text
@d15 1
d19 8
a26 2
  if (readlink ("/proc/42/exe", buf, sizeof (buf)) < 0)
    abort ();
@

