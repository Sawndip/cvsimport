head	1.1;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.1
	gdb_7_6-2013-04-26-release:1.1
	gdb_7_6-branch:1.1.0.100
	gdb_7_6-2013-03-12-branchpoint:1.1
	gdb_7_5_1-2012-11-29-release:1.1
	gdb_7_5-2012-08-17-release:1.1
	gdb_7_5-branch:1.1.0.98
	gdb_7_5-2012-07-18-branchpoint:1.1
	gdb_7_4_1-2012-04-26-release:1.1
	gdb_7_4-2012-01-24-release:1.1
	gdb_7_4-branch:1.1.0.96
	gdb_7_4-2011-12-13-branchpoint:1.1
	gdb_7_3_1-2011-09-04-release:1.1
	gdb_7_3-2011-07-26-release:1.1
	gdb_7_3-branch:1.1.0.94
	gdb_7_3-2011-04-01-branchpoint:1.1
	gdb_7_2-2010-09-02-release:1.1
	gdb_7_2-branch:1.1.0.92
	gdb_7_2-2010-07-07-branchpoint:1.1
	gdb_7_1-2010-03-18-release:1.1
	gdb_7_1-branch:1.1.0.90
	gdb_7_1-2010-02-18-branchpoint:1.1
	gdb_7_0_1-2009-12-22-release:1.1
	gdb_7_0-2009-10-06-release:1.1
	gdb_7_0-branch:1.1.0.88
	gdb_7_0-2009-09-16-branchpoint:1.1
	arc-sim-20090309:1.1
	msnyder-checkpoint-072509-branch:1.1.0.86
	msnyder-checkpoint-072509-branchpoint:1.1
	arc-insight_6_8-branch:1.1.0.84
	arc-insight_6_8-branchpoint:1.1
	insight_6_8-branch:1.1.0.82
	insight_6_8-branchpoint:1.1
	reverse-20081226-branch:1.1.0.80
	reverse-20081226-branchpoint:1.1
	multiprocess-20081120-branch:1.1.0.78
	multiprocess-20081120-branchpoint:1.1
	reverse-20080930-branch:1.1.0.76
	reverse-20080930-branchpoint:1.1
	reverse-20080717-branch:1.1.0.74
	reverse-20080717-branchpoint:1.1
	msnyder-reverse-20080609-branch:1.1.0.72
	msnyder-reverse-20080609-branchpoint:1.1
	drow-reverse-20070409-branch:1.1.0.70
	drow-reverse-20070409-branchpoint:1.1
	gdb_6_8-2008-03-27-release:1.1
	gdb_6_8-branch:1.1.0.68
	gdb_6_8-2008-02-26-branchpoint:1.1
	gdb_6_7_1-2007-10-29-release:1.1
	gdb_6_7-2007-10-10-release:1.1
	gdb_6_7-branch:1.1.0.66
	gdb_6_7-2007-09-07-branchpoint:1.1
	insight_6_6-20070208-release:1.1
	gdb_6_6-2006-12-18-release:1.1
	gdb_6_6-branch:1.1.0.64
	gdb_6_6-2006-11-15-branchpoint:1.1
	insight_6_5-20061003-release:1.1
	gdb-csl-symbian-6_4_50_20060226-12:1.1
	gdb-csl-sourcerygxx-3_4_4-25:1.1
	nickrob-async-20060828-mergepoint:1.1
	gdb-csl-symbian-6_4_50_20060226-11:1.1
	gdb-csl-sourcerygxx-4_1-17:1.1
	gdb-csl-20060226-branch-local-2:1.1
	gdb-csl-sourcerygxx-4_1-14:1.1
	gdb-csl-sourcerygxx-4_1-13:1.1
	gdb-csl-sourcerygxx-4_1-12:1.1
	gdb-csl-sourcerygxx-3_4_4-21:1.1
	gdb_6_5-20060621-release:1.1
	gdb-csl-sourcerygxx-4_1-9:1.1
	gdb-csl-sourcerygxx-4_1-8:1.1
	gdb-csl-sourcerygxx-4_1-7:1.1
	gdb-csl-arm-2006q1-6:1.1
	gdb-csl-sourcerygxx-4_1-6:1.1
	gdb-csl-symbian-6_4_50_20060226-10:1.1
	gdb-csl-symbian-6_4_50_20060226-9:1.1
	gdb-csl-symbian-6_4_50_20060226-8:1.1
	gdb-csl-coldfire-4_1-11:1.1
	gdb-csl-sourcerygxx-3_4_4-19:1.1
	gdb-csl-coldfire-4_1-10:1.1
	gdb_6_5-branch:1.1.0.62
	gdb_6_5-2006-05-14-branchpoint:1.1
	gdb-csl-sourcerygxx-4_1-5:1.1
	nickrob-async-20060513-branch:1.1.0.60
	nickrob-async-20060513-branchpoint:1.1
	gdb-csl-sourcerygxx-4_1-4:1.1
	msnyder-reverse-20060502-branch:1.1.0.58
	msnyder-reverse-20060502-branchpoint:1.1
	gdb-csl-morpho-4_1-4:1.1
	gdb-csl-sourcerygxx-3_4_4-17:1.1
	readline_5_1-import-branch:1.1.0.56
	readline_5_1-import-branchpoint:1.1
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.1
	gdb-csl-symbian-20060226-branch:1.1.0.54
	gdb-csl-symbian-20060226-branchpoint:1.1
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.1
	msnyder-reverse-20060331-branch:1.1.0.52
	msnyder-reverse-20060331-branchpoint:1.1
	gdb-csl-available-20060303-branch:1.1.0.50
	gdb-csl-available-20060303-branchpoint:1.1
	gdb-csl-20060226-branch:1.1.0.48
	gdb-csl-20060226-branchpoint:1.1
	gdb_6_4-20051202-release:1.1
	msnyder-fork-checkpoint-branch:1.1.0.46
	msnyder-fork-checkpoint-branchpoint:1.1
	gdb-csl-gxxpro-6_3-branch:1.1.0.44
	gdb-csl-gxxpro-6_3-branchpoint:1.1
	gdb_6_4-branch:1.1.0.42
	gdb_6_4-2005-11-01-branchpoint:1.1
	gdb-csl-arm-20051020-branch:1.1.0.40
	gdb-csl-arm-20051020-branchpoint:1.1
	gdb-csl-arm-20050325-2005-q1b:1.1
	gdb-csl-arm-20050325-2005-q1a:1.1
	csl-arm-20050325-branch:1.1.0.38
	csl-arm-20050325-branchpoint:1.1
	gdb_6_3-20041109-release:1.1
	gdb_6_3-branch:1.1.0.34
	gdb_6_3-20041019-branchpoint:1.1
	drow_intercu-merge-20040921:1.1
	drow_intercu-merge-20040915:1.1
	jimb-gdb_6_2-e500-branch:1.1.0.36
	jimb-gdb_6_2-e500-branchpoint:1.1
	gdb_6_2-20040730-release:1.1
	gdb_6_2-branch:1.1.0.32
	gdb_6_2-2004-07-10-gmt-branchpoint:1.1
	gdb_6_1_1-20040616-release:1.1
	gdb_6_1-2004-04-05-release:1.1
	drow_intercu-merge-20040402:1.1
	drow_intercu-merge-20040327:1.1
	ezannoni_pie-20040323-branch:1.1.0.30
	ezannoni_pie-20040323-branchpoint:1.1
	cagney_tramp-20040321-mergepoint:1.1
	cagney_tramp-20040309-branch:1.1.0.28
	cagney_tramp-20040309-branchpoint:1.1
	gdb_6_1-branch:1.1.0.26
	gdb_6_1-2004-03-01-gmt-branchpoint:1.1
	drow_intercu-20040221-branch:1.1.0.24
	drow_intercu-20040221-branchpoint:1.1
	cagney_bfdfile-20040213-branch:1.1.0.22
	cagney_bfdfile-20040213-branchpoint:1.1
	drow-cplus-merge-20040208:1.1
	carlton_dictionary-20040126-merge:1.1
	cagney_bigcore-20040122-branch:1.1.0.20
	cagney_bigcore-20040122-branchpoint:1.1
	drow-cplus-merge-20040113:1.1
	drow-cplus-merge-20031224:1.1
	drow-cplus-merge-20031220:1.1
	carlton_dictionary-20031215-merge:1.1
	drow-cplus-branch:1.1.0.18
	drow-cplus-merge-20031214:1.1
	carlton-dictionary-20031111-merge:1.1
	gdb_6_0-2003-10-04-release:1.1
	kettenis_sparc-20030918-branch:1.1.0.16
	kettenis_sparc-20030918-branchpoint:1.1
	carlton_dictionary-20030917-merge:1.1
	ezannoni_pie-20030916-branchpoint:1.1
	ezannoni_pie-20030916-branch:1.1.0.14
	cagney_x86i386-20030821-branch:1.1.0.12
	cagney_x86i386-20030821-branchpoint:1.1
	carlton_dictionary-20030805-merge:1.1
	carlton_dictionary-20030627-merge:1.1
	gdb_6_0-branch:1.1.0.10
	gdb_6_0-2003-06-23-branchpoint:1.1
	jimb-ppc64-linux-20030613-branch:1.1.0.8
	jimb-ppc64-linux-20030613-branchpoint:1.1
	cagney_convert-20030606-branch:1.1.0.6
	cagney_convert-20030606-branchpoint:1.1
	jimb-ppc64-linux-20030528-branch:1.1.0.4
	jimb-ppc64-linux-20030528-branchpoint:1.1
	carlton_dictionary-20030523-merge:1.1
	cagney_fileio-20030521-branch:1.1.0.2
	cagney_fileio-20030521-branchpoint:1.1
	kettenis_i386newframe-20030517-mergepoint:1.1;
locks; strict;
comment	@# @;


1.1
date	2003.05.14.21.07.55;	author msnyder;	state Exp;
branches
	1.1.18.1;
next	;

1.1.18.1
date	2003.12.14.20.28.38;	author drow;	state Exp;
branches;
next	;


desc
@@


1.1
log
@2003-05-14  Michael Snyder  <msnyder@@redhat.com>

	* addb.s, addw.s, addl.s, addw.s, addx.s, andb.s, andw.s, andl.s,
        bfld.s, brabc.s, bra.s, bset.s, cmpb.s, cmpw.s, cmpl.s, daa.s,
        das.s, dec.s, extw.s, extl.s, inc.s, jmp.s, ldc.s, ldm.s, mac.s,
        mova.s, movb.s, movw.s, movl.s, movmd.s, movsd.s, neg.s, nop.s,
        not.s, orb.s, orw.s, orl.s, rotl.s, rotr.s, rotxl.s, rotxr.s,
        shal.s, shar.s, shll.s, shlr.s, stc.s,	subb.s, subw.s, subl.s,
        xorb.s,	xorw.s, xorl.s: New files.
        * allinsn.exp: New file.
@
text
@# Hitachi H8 testcase 'exts.l, extu.l'
# mach(): h8300h h8300s h8sx
# as(h8300):	--defsym sim_cpu=0
# as(h8300h):	--defsym sim_cpu=1
# as(h8300s):	--defsym sim_cpu=2
# as(h8sx):	--defsym sim_cpu=3
# ld(h8300h):	-m h8300helf
# ld(h8300s):	-m h8300self
# ld(h8sx):	-m h8300sxelf	

	.include "testutils.inc"

	start

	.data
	.align 4
pos:	.long	0xffff0001
neg:	.long	0x00008000

pos2:	.long	0xffffff01
neg2:	.long	0x00000080

	.text

exts_l_reg32_p:
	set_grs_a5a5
	set_ccr_zero
	;; exts.l ern32
	mov.w	#1, r0
	exts.l	er0

	;; Test ccr		H=0 N=0 Z=0 V=0 C=0
	test_cc_clear

	test_h_gr32  0x00000001 er0	; result of sign extend
	test_gr_a5a5 1		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7

exts_l_reg32_n:
	set_grs_a5a5
	set_ccr_zero
	;; exts.l ern32
	mov.w	#0xffff, r0
	exts.l	er0

	;; Test ccr		H=0 N=1 Z=0 V=0 C=0
	test_neg_set
	test_zero_clear
	test_ovf_clear
	test_carry_clear

	test_h_gr32  0xffffffff er0	; result of sign extend
	test_gr_a5a5 1		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7

extu_l_reg32_n:
	set_grs_a5a5
	set_ccr_zero
	;; extu.l ern32
	mov.w	#0xffff, r0
	extu.l	er0

	;; Test ccr		H=0 N=0 Z=0 V=0 C=0
	test_cc_clear

	test_h_gr32  0x0000ffff er0	; result of zero extend
	test_gr_a5a5 1		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7

.if (sim_cpu == h8sx)
exts_l_ind_p:
	set_grs_a5a5
	set_ccr_zero
	;; exts.l @@ern32
	mov.l	#pos, er1
	exts.l	@@er1

	;; Test ccr		H=0 N=0 Z=0 V=0 C=0
	test_cc_clear

	test_h_gr32  pos er1	; er1 still contains target address
	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
	cmp.l	#0x00000001, @@pos
	beq	.Lslindp
	fail
.Lslindp:
	mov.l	#0xffff0001, @@pos	; Restore initial value

exts_l_ind_n:
	set_grs_a5a5
	set_ccr_zero
	;; exts.l @@ern32
	mov.l	#neg, er1
	exts.l	@@er1

	;; Test ccr		H=0 N=1 Z=0 V=0 C=0
	test_neg_set
	test_zero_clear
	test_ovf_clear
	test_carry_clear

	test_h_gr32  neg er1	; er1 still contains target address
	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
        cmp.l   #0xffff8000, @@neg
	beq     .Lslindn
	fail
.Lslindn:
;;;  Note:	 leave the value as 0xffff8000, so that extu has work to do.
	
extu_l_ind_n:
	set_grs_a5a5
	set_ccr_zero
	;; extu.l @@ern32
	mov.l	#neg, er1
	extu.l	@@er1

	;; Test ccr		H=0 N=0 Z=0 V=0 C=0
	test_cc_clear

	test_h_gr32  neg er1	; er1 still contains target address
	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
        cmp.l   #0x00008000, @@neg
	beq     .Lulindn
	fail
.Lulindn:
;;;  Note:	 leave the value as 0x00008000, so that extu has work to do.

exts_l_postinc_p:
	set_grs_a5a5
	set_ccr_zero
	;; exts.l @@ern32+
	mov.l	#pos, er1
	exts.l	@@er1+

	;; Test ccr		H=0 N=0 Z=0 V=0 C=0
	test_cc_clear

	test_h_gr32  pos+4 er1	; er1 still contains target address
	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
	cmp.l	#0x00000001, @@pos
	beq	.Lslpostincp
	fail
.Lslpostincp:
	mov.l	#0xffff0001, @@pos	; Restore initial value

exts_l_postinc_n:
	set_grs_a5a5
	set_ccr_zero
	;; exts.l @@ern32+
	mov.l	#neg, er1
	exts.l	@@er1+

	;; Test ccr		H=0 N=1 Z=0 V=0 C=0
	test_neg_set
	test_zero_clear
	test_ovf_clear
	test_carry_clear

	test_h_gr32  neg+4 er1	; er1 still contains target address
	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
        cmp.l   #0xffff8000, @@neg
	beq     .Lslpostincn
	fail
.Lslpostincn:
;;;  Note:	 leave the value as 0xffff8000, so that extu has work to do.
	
extu_l_postinc_n:
	set_grs_a5a5
	set_ccr_zero
	;; extu.l @@ern32+
	mov.l	#neg, er1
	extu.l	@@er1+

	;; Test ccr		H=0 N=0 Z=0 V=0 C=0
	test_cc_clear

	test_h_gr32  neg+4 er1	; er1 still contains target address
	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
        cmp.l   #0x00008000, @@neg
	beq     .Lulpostincn
	fail
.Lulpostincn:
;;;  Note:	 leave the value as 0x00008000, so that extu has work to do.

exts_l_postdec_p:
	set_grs_a5a5
	set_ccr_zero
	;; exts.l @@ern32-
	mov.l	#pos, er1
	exts.l	@@er1-

	;; Test ccr		H=0 N=0 Z=0 V=0 C=0
	test_cc_clear

	test_h_gr32  pos-4 er1	; er1 still contains target address
	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
	cmp.l	#0x00000001, @@pos
	beq	.Lslpostdecp
	fail
.Lslpostdecp:
	mov.l	#0xffff0001, @@pos	; Restore initial value

exts_l_postdec_n:
	set_grs_a5a5
	set_ccr_zero
	;; exts.l @@ern32-
	mov.l	#neg, er1
	exts.l	@@er1-

	;; Test ccr		H=0 N=1 Z=0 V=0 C=0
	test_neg_set
	test_zero_clear
	test_ovf_clear
	test_carry_clear

	test_h_gr32  neg-4 er1	; er1 still contains target address
	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
        cmp.l   #0xffff8000, @@neg
	beq     .Lslpostdecn
	fail
.Lslpostdecn:
;;;  Note:	 leave the value as 0xffff8000, so that extu has work to do.
	
extu_l_postdec_n:
	set_grs_a5a5
	set_ccr_zero
	;; extu.l @@ern32-
	mov.l	#neg, er1
	extu.l	@@er1-

	;; Test ccr		H=0 N=0 Z=0 V=0 C=0
	test_cc_clear

	test_h_gr32  neg-4 er1	; er1 still contains target address
	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
        cmp.l   #0x00008000, @@neg
	beq     .Lulpostdecn
	fail
.Lulpostdecn:
;;;  Note:	 leave the value as 0x00008000, so that extu has work to do.

exts_l_preinc_p:
	set_grs_a5a5
	set_ccr_zero
	;; exts.l @@+ern32
	mov.l	#pos-4, er1
	exts.l	@@+er1

	;; Test ccr		H=0 N=0 Z=0 V=0 C=0
	test_cc_clear

	test_h_gr32  pos er1	; er1 still contains target address
	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
	cmp.l	#0x00000001, @@pos
	beq	.Lslpreincp
	fail
.Lslpreincp:
	mov.l	#0xffff0001, @@pos	; Restore initial value

exts_l_preinc_n:
	set_grs_a5a5
	set_ccr_zero
	;; exts.l @@+ern32
	mov.l	#neg-4, er1
	exts.l	@@+er1

	;; Test ccr		H=0 N=1 Z=0 V=0 C=0
	test_neg_set
	test_zero_clear
	test_ovf_clear
	test_carry_clear

	test_h_gr32  neg er1	; er1 still contains target address
	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
        cmp.l   #0xffff8000, @@neg
	beq     .Lslpreincn
	fail
.Lslpreincn:
;;;  Note:	 leave the value as 0xffff8000, so that extu has work to do.
	
extu_l_preinc_n:
	set_grs_a5a5
	set_ccr_zero
	;; extu.l @@+ern32
	mov.l	#neg-4, er1
	extu.l	@@+er1

	;; Test ccr		H=0 N=0 Z=0 V=0 C=0
	test_cc_clear

	test_h_gr32  neg er1	; er1 still contains target address
	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
        cmp.l   #0x00008000, @@neg
	beq     .Lulpreincn
	fail
.Lulpreincn:
;;;  Note:	 leave the value as 0x00008000, so that extu has work to do.

exts_l_predec_p:
	set_grs_a5a5
	set_ccr_zero
	;; exts.l @@-ern32
	mov.l	#pos+4, er1
	exts.l	@@-er1

	;; Test ccr		H=0 N=0 Z=0 V=0 C=0
	test_cc_clear

	test_h_gr32  pos er1	; er1 still contains target address
	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
	cmp.l	#0x00000001, @@pos
	beq	.Lslpredecp
	fail
.Lslpredecp:
	mov.l	#0xffff0001, @@pos	; Restore initial value

exts_l_predec_n:
	set_grs_a5a5
	set_ccr_zero
	;; exts.l @@-ern32
	mov.l	#neg+4, er1
	exts.l	@@-er1

	;; Test ccr		H=0 N=1 Z=0 V=0 C=0
	test_neg_set
	test_zero_clear
	test_ovf_clear
	test_carry_clear

	test_h_gr32  neg er1	; er1 still contains target address
	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
        cmp.l   #0xffff8000, @@neg
	beq     .Lslpredecn
	fail
.Lslpredecn:
;;;  Note:	 leave the value as 0xffff8000, so that extu has work to do.
	
extu_l_predec_n:
	set_grs_a5a5
	set_ccr_zero
	;; extu.l @@-ern32
	mov.l	#neg+4, er1
	extu.l	@@-er1

	;; Test ccr		H=0 N=0 Z=0 V=0 C=0
	test_cc_clear

	test_h_gr32  neg er1	; er1 still contains target address
	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
        cmp.l   #0x00008000, @@neg
	beq     .Lulpredecn
	fail
.Lulpredecn:
;;;  Note:	 leave the value as 0x00008000, so that extu has work to do.

extu_l_disp2_n:
	set_grs_a5a5
	set_ccr_zero
	;; extu.l @@(dd:2, ern32)
	mov.l	#neg-8, er1
	extu.l	@@(8:2, er1)

	;; Test ccr		H=0 N=0 Z=0 V=0 C=0
	test_cc_clear

	test_h_gr32  neg-8 er1	; er1 still contains target address
	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
        cmp.l   #0x00008000, @@neg
	beq     .Luldisp2n
	fail
.Luldisp2n:
;;;  Note:	 leave the value as 0x00008000, so that extu has work to do.

extu_l_disp16_n:
	set_grs_a5a5
	set_ccr_zero
	;; extu.l @@(dd:16, ern32)
	mov.l	#neg-44, er1
	extu.l	@@(44:16, er1)

	;; Test ccr		H=0 N=0 Z=0 V=0 C=0
	test_cc_clear

	test_h_gr32  neg-44 er1	; er1 still contains target address
	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
        cmp.l   #0x00008000, @@neg
	beq     .Luldisp16n
	fail
.Luldisp16n:
;;;  Note:	 leave the value as 0x00008000, so that extu has work to do.

extu_l_disp32_n:
	set_grs_a5a5
	set_ccr_zero
	;; extu.l @@(dd:32, ern32)
	mov.l	#neg+444, er1
	extu.l	@@(-444:32, er1)

	;; Test ccr		H=0 N=0 Z=0 V=0 C=0
	test_cc_clear

	test_h_gr32  neg+444 er1	; er1 still contains target address
	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
        cmp.l   #0x00008000, @@neg
	beq     .Luldisp32n
	fail
.Luldisp32n:
;;;  Note:	 leave the value as 0x00008000, so that extu has work to do.

extu_l_abs16_n:
	set_grs_a5a5
	set_ccr_zero
	;; extu.l @@aa:16
	extu.l	@@neg:16

	;; Test ccr		H=0 N=0 Z=0 V=0 C=0
	test_cc_clear

	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 1
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
        cmp.l   #0x00008000, @@neg
	beq     .Lulabs16n
	fail
.Lulabs16n:
;;;  Note:	 leave the value as 0x00008000, so that extu has work to do.

extu_l_abs32_n:
	set_grs_a5a5
	set_ccr_zero
	;; extu.l @@aa:32
	extu.l	@@neg:32

	;; Test ccr		H=0 N=0 Z=0 V=0 C=0
	test_cc_clear

	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 1
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
        cmp.l   #0x00008000, @@neg
	beq     .Lulabs32n
	fail
.Lulabs32n:
;;;  Note:	 leave the value as 0x00008000, so that extu has work to do.



	#
	# exts #2, nn
	#

exts_l_reg32_2_p:
	set_grs_a5a5
	set_ccr_zero
	;; exts.l #2, ern32
	mov.b	#1, r0l
	exts.l	#2, er0

	;; Test ccr		H=0 N=0 Z=0 V=0 C=0
	test_cc_clear

	test_h_gr32  0x00000001 er0	; result of sign extend
	test_gr_a5a5 1		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7

exts_l_reg32_2_n:
	set_grs_a5a5
	set_ccr_zero
	;; exts.l #2, ern32
	mov.b	#0xff, r0l
	exts.l	#2, er0

	;; Test ccr		H=0 N=1 Z=0 V=0 C=0
	test_neg_set
	test_ovf_clear
	test_zero_clear
	test_carry_clear

	test_h_gr32  0xffffffff er0	; result of sign extend
	test_gr_a5a5 1		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7

extu_l_reg32_2_n:
	set_grs_a5a5
	set_ccr_zero
	;; extu.l #2, ern32
	mov.b	#0xff, r0l
	extu.l	#2, er0

	;; Test ccr		H=0 N=0 Z=0 V=0 C=0
	test_cc_clear

	test_h_gr32  0x000000ff er0	; result of zero extend
	test_gr_a5a5 1		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7

exts_l_ind_2_p:
	set_grs_a5a5
	set_ccr_zero
	;; exts.l #2, @@ern32
	mov.l	#pos2, er1
	exts.l	#2, @@er1

	;; Test ccr		H=0 N=0 Z=0 V=0 C=0
	test_cc_clear

	test_h_gr32  pos2 er1	; result of sign extend
	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
	cmp.l	#0x00000001, @@pos2
	beq	.Lslindp2
	fail
.Lslindp2:
	mov.l	#0xffffff01, @@pos2	; Restore initial value

exts_l_ind_2_n:
	set_grs_a5a5
	set_ccr_zero
	;; exts.l #2, @@ern32
	mov.l	#neg2, er1
	exts.l	#2, @@er1

	;; Test ccr		H=0 N=1 Z=0 V=0 C=0
	test_neg_set
	test_ovf_clear
	test_zero_clear
	test_carry_clear

	test_h_gr32  neg2 er1	; result of sign extend
	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
        cmp.l   #0xffffff80, @@neg2
	beq     .Lslindn2
	fail
.Lslindn2:
;;;  Note:	 leave the value as 0xffffff80, so that extu has work to do.

extu_l_ind_2_n:
	set_grs_a5a5
	set_ccr_zero
	;; extu.l #2, @@ern32
	mov.l	#neg2, er1
	extu.l	#2, @@er1

	;; Test ccr		H=0 N=0 Z=0 V=0 C=0
	test_cc_clear

	test_h_gr32  neg2 er1	; result of zero extend
	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
        cmp.l   #0x00000080, @@neg2
	beq     .Lulindn2
	fail
.Lulindn2:
;;;  Note:	 leave the value as 0x00000080, like it started out.

exts_l_postinc_2_p:
	set_grs_a5a5
	set_ccr_zero
	;; exts.l #2, @@ern32+
	mov.l	#pos2, er1
	exts.l	#2, @@er1+

	;; Test ccr		H=0 N=0 Z=0 V=0 C=0
	test_cc_clear

	test_h_gr32  pos2+4 er1	; result of sign extend
	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
	cmp.l	#0x00000001, @@pos2
	beq	.Lslpostincp2
	fail
.Lslpostincp2:
	mov.l	#0xffffff01, @@pos2	; Restore initial value

exts_l_postinc_2_n:
	set_grs_a5a5
	set_ccr_zero
	;; exts.l #2, @@ern32+
	mov.l	#neg2, er1
	exts.l	#2, @@er1+

	;; Test ccr		H=0 N=1 Z=0 V=0 C=0
	test_neg_set
	test_ovf_clear
	test_zero_clear
	test_carry_clear

	test_h_gr32  neg2+4 er1	; result of sign extend
	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
        cmp.l   #0xffffff80, @@neg2
	beq     .Lslpostincn2
	fail
.Lslpostincn2:
;;;  Note:	 leave the value as 0xffffff80, so that extu has work to do.

extu_l_postinc_2_n:
	set_grs_a5a5
	set_ccr_zero
	;; extu.l #2, @@ern32+
	mov.l	#neg2, er1
	extu.l	#2, @@er1+

	;; Test ccr		H=0 N=0 Z=0 V=0 C=0
	test_cc_clear

	test_h_gr32  neg2+4 er1	; result of zero extend
	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
        cmp.l   #0x00000080, @@neg2
	beq     .Lulpostincn2
	fail
.Lulpostincn2:
;;;  Note:	 leave the value as 0x00000080, like it started out.

exts_l_postdec_2_p:
	set_grs_a5a5
	set_ccr_zero
	;; exts.l #2, @@ern32-
	mov.l	#pos2, er1
	exts.l	#2, @@er1-

	;; Test ccr		H=0 N=0 Z=0 V=0 C=0
	test_cc_clear

	test_h_gr32  pos2-4 er1	; result of sign extend
	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
	cmp.l	#0x00000001, @@pos2
	beq	.Lslpostdecp2
	fail
.Lslpostdecp2:
	mov.l	#0xffffff01, @@pos2	; Restore initial value

exts_l_postdec_2_n:
	set_grs_a5a5
	set_ccr_zero
	;; exts.l #2, @@ern32-
	mov.l	#neg2, er1
	exts.l	#2, @@er1-

	;; Test ccr		H=0 N=1 Z=0 V=0 C=0
	test_neg_set
	test_ovf_clear
	test_zero_clear
	test_carry_clear

	test_h_gr32  neg2-4 er1	; result of sign extend
	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
        cmp.l   #0xffffff80, @@neg2
	beq     .Lslpostdecn2
	fail
.Lslpostdecn2:
;;;  Note:	 leave the value as 0xffffff80, so that extu has work to do.

extu_l_postdec_2_n:
	set_grs_a5a5
	set_ccr_zero
	;; extu.l #2, @@ern32-
	mov.l	#neg2, er1
	extu.l	#2, @@er1-

	;; Test ccr		H=0 N=0 Z=0 V=0 C=0
	test_cc_clear

	test_h_gr32  neg2-4 er1	; result of zero extend
	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
        cmp.l   #0x00000080, @@neg2
	beq     .Lulpostdecn2
	fail
.Lulpostdecn2:
;;;  Note:	 leave the value as 0x00000080, like it started out.

exts_l_preinc_2_p:
	set_grs_a5a5
	set_ccr_zero
	;; exts.l #2, @@+ern32
	mov.l	#pos2-4, er1
	exts.l	#2, @@+er1

	;; Test ccr		H=0 N=0 Z=0 V=0 C=0
	test_cc_clear

	test_h_gr32  pos2 er1	; result of sign extend
	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
	cmp.l	#0x00000001, @@pos2
	beq	.Lslpreincp2
	fail
.Lslpreincp2:
	mov.l	#0xffffff01, @@pos2	; Restore initial value

exts_l_preinc_2_n:
	set_grs_a5a5
	set_ccr_zero
	;; exts.l #2, @@+ern32
	mov.l	#neg2-4, er1
	exts.l	#2, @@+er1

	;; Test ccr		H=0 N=1 Z=0 V=0 C=0
	test_neg_set
	test_ovf_clear
	test_zero_clear
	test_carry_clear

	test_h_gr32  neg2 er1	; result of sign extend
	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
        cmp.l   #0xffffff80, @@neg2
	beq     .Lslpreincn2
	fail
.Lslpreincn2:
;;;  Note:	 leave the value as 0xffffff80, so that extu has work to do.

extu_l_preinc_2_n:
	set_grs_a5a5
	set_ccr_zero
	;; extu.l #2, @@+ern32
	mov.l	#neg2-4, er1
	extu.l	#2, @@+er1

	;; Test ccr		H=0 N=0 Z=0 V=0 C=0
	test_cc_clear

	test_h_gr32  neg2 er1	; result of zero extend
	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
        cmp.l   #0x00000080, @@neg2
	beq     .Lulpreincn2
	fail
.Lulpreincn2:
;;;  Note:	 leave the value as 0x00000080, like it started out.

exts_l_predec_2_p:
	set_grs_a5a5
	set_ccr_zero
	;; exts.l #2, @@-ern32
	mov.l	#pos2+4, er1
	exts.l	#2, @@-er1

	;; Test ccr		H=0 N=0 Z=0 V=0 C=0
	test_cc_clear

	test_h_gr32  pos2 er1	; result of sign extend
	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
	cmp.l	#0x00000001, @@pos2
	beq	.Lslpredecp2
	fail
.Lslpredecp2:
	mov.l	#0xffffff01, @@pos2	; Restore initial value

exts_l_predec_2_n:
	set_grs_a5a5
	set_ccr_zero
	;; exts.l #2, @@-ern32
	mov.l	#neg2+4, er1
	exts.l	#2, @@-er1

	;; Test ccr		H=0 N=1 Z=0 V=0 C=0
	test_neg_set
	test_ovf_clear
	test_zero_clear
	test_carry_clear

	test_h_gr32  neg2 er1	; result of sign extend
	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
        cmp.l   #0xffffff80, @@neg2
	beq     .Lslpredecn2
	fail
.Lslpredecn2:
;;;  Note:	 leave the value as 0xffffff80, so that extu has work to do.

extu_l_predec_2_n:
	set_grs_a5a5
	set_ccr_zero
	;; extu.l #2, @@-ern32
	mov.l	#neg2+4, er1
	extu.l	#2, @@-er1

	;; Test ccr		H=0 N=0 Z=0 V=0 C=0
	test_cc_clear

	test_h_gr32  neg2 er1	; result of zero extend
	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
        cmp.l   #0x00000080, @@neg2
	beq     .Lulpredecn2
	fail
.Lulpredecn2:
;;;  Note:	 leave the value as 0x00000080, like it started out.

extu_l_disp2_2_n:
	set_grs_a5a5
	set_ccr_zero
	;; extu.l #2, @@(dd:2, ern32)
	mov.l	#neg2-8, er1
	extu.l	#2, @@(8:2, er1)

	;; Test ccr		H=0 N=0 Z=0 V=0 C=0
	test_cc_clear

	test_h_gr32  neg2-8 er1	; result of zero extend
	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
        cmp.l   #0x00000080, @@neg2
	beq     .Luldisp2n2
	fail
.Luldisp2n2:
;;;  Note:	 leave the value as 0x00000080, like it started out.

extu_l_disp16_2_n:
	set_grs_a5a5
	set_ccr_zero
	;; extu.l #2, @@(dd:16, ern32)
	mov.l	#neg2-44, er1
	extu.l	#2, @@(44:16, er1)

	;; Test ccr		H=0 N=0 Z=0 V=0 C=0
	test_cc_clear

	test_h_gr32  neg2-44 er1	; result of zero extend
	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
        cmp.l   #0x00000080, @@neg2
	beq     .Luldisp16n2
	fail
.Luldisp16n2:
;;;  Note:	 leave the value as 0x00000080, like it started out.

extu_l_disp32_2_n:
	set_grs_a5a5
	set_ccr_zero
	;; extu.l #2, @@(dd:32, ern32)
	mov.l	#neg2+444, er1
	extu.l	#2, @@(-444:32, er1)

	;; Test ccr		H=0 N=0 Z=0 V=0 C=0
	test_cc_clear

	test_h_gr32  neg2+444 er1	; result of zero extend
	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
        cmp.l   #0x00000080, @@neg2
	beq     .Luldisp32n2
	fail
.Luldisp32n2:
;;;  Note:	 leave the value as 0x00000080, like it started out.

extu_l_abs16_2_n:
	set_grs_a5a5
	set_ccr_zero
	;; extu.l #2, @@aa:16
	extu.l	#2, @@neg2:16

	;; Test ccr		H=0 N=0 Z=0 V=0 C=0
	test_cc_clear

	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 1
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
        cmp.l   #0x00000080, @@neg2
	beq     .Lulabs16n2
	fail
.Lulabs16n2:
;;;  Note:	 leave the value as 0x00000080, like it started out.

extu_l_abs32_2_n:
	set_grs_a5a5
	set_ccr_zero
	;; extu.l #2, @@aa:32
	extu.l	#2, @@neg2:32

	;; Test ccr		H=0 N=0 Z=0 V=0 C=0
	test_cc_clear

	test_gr_a5a5 0		; Make sure other general regs not disturbed
	test_gr_a5a5 1
	test_gr_a5a5 2
	test_gr_a5a5 3
	test_gr_a5a5 4
	test_gr_a5a5 5
	test_gr_a5a5 6
	test_gr_a5a5 7
        cmp.l   #0x00000080, @@neg2
	beq     .Lulabs32n2
	fail
.Lulabs32n2:
;;;  Note:	 leave the value as 0x00000080, like it started out.

.endif

	pass

	exit 0




@


1.1.18.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@@

