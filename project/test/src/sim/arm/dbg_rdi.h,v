head	1.5;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.5
	gdb_7_6-2013-04-26-release:1.5
	gdb_7_6-branch:1.5.0.2
	gdb_7_6-2013-03-12-branchpoint:1.5
	gdb_7_5_1-2012-11-29-release:1.3
	gdb_7_5-2012-08-17-release:1.3
	gdb_7_5-branch:1.3.0.62
	gdb_7_5-2012-07-18-branchpoint:1.3
	gdb_7_4_1-2012-04-26-release:1.3
	gdb_7_4-2012-01-24-release:1.3
	gdb_7_4-branch:1.3.0.60
	gdb_7_4-2011-12-13-branchpoint:1.3
	gdb_7_3_1-2011-09-04-release:1.3
	gdb_7_3-2011-07-26-release:1.3
	gdb_7_3-branch:1.3.0.58
	gdb_7_3-2011-04-01-branchpoint:1.3
	gdb_7_2-2010-09-02-release:1.3
	gdb_7_2-branch:1.3.0.56
	gdb_7_2-2010-07-07-branchpoint:1.3
	gdb_7_1-2010-03-18-release:1.3
	gdb_7_1-branch:1.3.0.54
	gdb_7_1-2010-02-18-branchpoint:1.3
	gdb_7_0_1-2009-12-22-release:1.3
	gdb_7_0-2009-10-06-release:1.3
	gdb_7_0-branch:1.3.0.52
	gdb_7_0-2009-09-16-branchpoint:1.3
	arc-sim-20090309:1.3
	msnyder-checkpoint-072509-branch:1.3.0.50
	msnyder-checkpoint-072509-branchpoint:1.3
	arc-insight_6_8-branch:1.3.0.48
	arc-insight_6_8-branchpoint:1.3
	insight_6_8-branch:1.3.0.46
	insight_6_8-branchpoint:1.3
	reverse-20081226-branch:1.3.0.44
	reverse-20081226-branchpoint:1.3
	multiprocess-20081120-branch:1.3.0.42
	multiprocess-20081120-branchpoint:1.3
	reverse-20080930-branch:1.3.0.40
	reverse-20080930-branchpoint:1.3
	reverse-20080717-branch:1.3.0.38
	reverse-20080717-branchpoint:1.3
	msnyder-reverse-20080609-branch:1.3.0.36
	msnyder-reverse-20080609-branchpoint:1.3
	drow-reverse-20070409-branch:1.3.0.34
	drow-reverse-20070409-branchpoint:1.3
	gdb_6_8-2008-03-27-release:1.3
	gdb_6_8-branch:1.3.0.32
	gdb_6_8-2008-02-26-branchpoint:1.3
	gdb_6_7_1-2007-10-29-release:1.3
	gdb_6_7-2007-10-10-release:1.3
	gdb_6_7-branch:1.3.0.30
	gdb_6_7-2007-09-07-branchpoint:1.3
	insight_6_6-20070208-release:1.3
	gdb_6_6-2006-12-18-release:1.3
	gdb_6_6-branch:1.3.0.28
	gdb_6_6-2006-11-15-branchpoint:1.3
	insight_6_5-20061003-release:1.3
	gdb-csl-symbian-6_4_50_20060226-12:1.3
	gdb-csl-sourcerygxx-3_4_4-25:1.3
	nickrob-async-20060828-mergepoint:1.3
	gdb-csl-symbian-6_4_50_20060226-11:1.3
	gdb-csl-sourcerygxx-4_1-17:1.3
	gdb-csl-20060226-branch-local-2:1.3
	gdb-csl-sourcerygxx-4_1-14:1.3
	gdb-csl-sourcerygxx-4_1-13:1.3
	gdb-csl-sourcerygxx-4_1-12:1.3
	gdb-csl-sourcerygxx-3_4_4-21:1.3
	gdb_6_5-20060621-release:1.3
	gdb-csl-sourcerygxx-4_1-9:1.3
	gdb-csl-sourcerygxx-4_1-8:1.3
	gdb-csl-sourcerygxx-4_1-7:1.3
	gdb-csl-arm-2006q1-6:1.3
	gdb-csl-sourcerygxx-4_1-6:1.3
	gdb-csl-symbian-6_4_50_20060226-10:1.3
	gdb-csl-symbian-6_4_50_20060226-9:1.3
	gdb-csl-symbian-6_4_50_20060226-8:1.3
	gdb-csl-coldfire-4_1-11:1.3
	gdb-csl-sourcerygxx-3_4_4-19:1.3
	gdb-csl-coldfire-4_1-10:1.3
	gdb_6_5-branch:1.3.0.26
	gdb_6_5-2006-05-14-branchpoint:1.3
	gdb-csl-sourcerygxx-4_1-5:1.3
	nickrob-async-20060513-branch:1.3.0.24
	nickrob-async-20060513-branchpoint:1.3
	gdb-csl-sourcerygxx-4_1-4:1.3
	msnyder-reverse-20060502-branch:1.3.0.22
	msnyder-reverse-20060502-branchpoint:1.3
	gdb-csl-morpho-4_1-4:1.3
	gdb-csl-sourcerygxx-3_4_4-17:1.3
	readline_5_1-import-branch:1.3.0.20
	readline_5_1-import-branchpoint:1.3
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.3
	gdb-csl-symbian-20060226-branch:1.3.0.18
	gdb-csl-symbian-20060226-branchpoint:1.3
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.3
	msnyder-reverse-20060331-branch:1.3.0.16
	msnyder-reverse-20060331-branchpoint:1.3
	gdb-csl-available-20060303-branch:1.3.0.14
	gdb-csl-available-20060303-branchpoint:1.3
	gdb-csl-20060226-branch:1.3.0.12
	gdb-csl-20060226-branchpoint:1.3
	gdb_6_4-20051202-release:1.3
	msnyder-fork-checkpoint-branch:1.3.0.10
	msnyder-fork-checkpoint-branchpoint:1.3
	gdb-csl-gxxpro-6_3-branch:1.3.0.8
	gdb-csl-gxxpro-6_3-branchpoint:1.3
	gdb_6_4-branch:1.3.0.6
	gdb_6_4-2005-11-01-branchpoint:1.3
	gdb-csl-arm-20051020-branch:1.3.0.4
	gdb-csl-arm-20051020-branchpoint:1.3
	msnyder-tracepoint-checkpoint-branch:1.3.0.2
	msnyder-tracepoint-checkpoint-branchpoint:1.3
	gdb-csl-arm-20050325-2005-q1b:1.2
	gdb-csl-arm-20050325-2005-q1a:1.2
	csl-arm-20050325-branch:1.2.0.72
	csl-arm-20050325-branchpoint:1.2
	gdb_6_3-20041109-release:1.2
	gdb_6_3-branch:1.2.0.68
	gdb_6_3-20041019-branchpoint:1.2
	drow_intercu-merge-20040921:1.2
	drow_intercu-merge-20040915:1.2
	jimb-gdb_6_2-e500-branch:1.2.0.70
	jimb-gdb_6_2-e500-branchpoint:1.2
	gdb_6_2-20040730-release:1.2
	gdb_6_2-branch:1.2.0.66
	gdb_6_2-2004-07-10-gmt-branchpoint:1.2
	gdb_6_1_1-20040616-release:1.2
	gdb_6_1-2004-04-05-release:1.2
	drow_intercu-merge-20040402:1.2
	drow_intercu-merge-20040327:1.2
	ezannoni_pie-20040323-branch:1.2.0.64
	ezannoni_pie-20040323-branchpoint:1.2
	cagney_tramp-20040321-mergepoint:1.2
	cagney_tramp-20040309-branch:1.2.0.62
	cagney_tramp-20040309-branchpoint:1.2
	gdb_6_1-branch:1.2.0.60
	gdb_6_1-2004-03-01-gmt-branchpoint:1.2
	drow_intercu-20040221-branch:1.2.0.58
	drow_intercu-20040221-branchpoint:1.2
	cagney_bfdfile-20040213-branch:1.2.0.56
	cagney_bfdfile-20040213-branchpoint:1.2
	drow-cplus-merge-20040208:1.2
	carlton_dictionary-20040126-merge:1.2
	cagney_bigcore-20040122-branch:1.2.0.54
	cagney_bigcore-20040122-branchpoint:1.2
	drow-cplus-merge-20040113:1.2
	drow-cplus-merge-20031224:1.2
	drow-cplus-merge-20031220:1.2
	carlton_dictionary-20031215-merge:1.2
	drow-cplus-merge-20031214:1.2
	carlton-dictionary-20031111-merge:1.2
	gdb_6_0-2003-10-04-release:1.2
	kettenis_sparc-20030918-branch:1.2.0.52
	kettenis_sparc-20030918-branchpoint:1.2
	carlton_dictionary-20030917-merge:1.2
	ezannoni_pie-20030916-branchpoint:1.2
	ezannoni_pie-20030916-branch:1.2.0.50
	cagney_x86i386-20030821-branch:1.2.0.48
	cagney_x86i386-20030821-branchpoint:1.2
	carlton_dictionary-20030805-merge:1.2
	carlton_dictionary-20030627-merge:1.2
	gdb_6_0-branch:1.2.0.46
	gdb_6_0-2003-06-23-branchpoint:1.2
	jimb-ppc64-linux-20030613-branch:1.2.0.44
	jimb-ppc64-linux-20030613-branchpoint:1.2
	cagney_convert-20030606-branch:1.2.0.42
	cagney_convert-20030606-branchpoint:1.2
	cagney_writestrings-20030508-branch:1.2.0.40
	cagney_writestrings-20030508-branchpoint:1.2
	jimb-ppc64-linux-20030528-branch:1.2.0.38
	jimb-ppc64-linux-20030528-branchpoint:1.2
	carlton_dictionary-20030523-merge:1.2
	cagney_fileio-20030521-branch:1.2.0.36
	cagney_fileio-20030521-branchpoint:1.2
	kettenis_i386newframe-20030517-mergepoint:1.2
	jimb-ppc64-linux-20030509-branch:1.2.0.34
	jimb-ppc64-linux-20030509-branchpoint:1.2
	kettenis_i386newframe-20030504-mergepoint:1.2
	carlton_dictionary-20030430-merge:1.2
	kettenis_i386newframe-20030419-branch:1.2.0.32
	kettenis_i386newframe-20030419-branchpoint:1.2
	carlton_dictionary-20030416-merge:1.2
	cagney_frameaddr-20030409-mergepoint:1.2
	kettenis_i386newframe-20030406-branch:1.2.0.30
	kettenis_i386newframe-20030406-branchpoint:1.2
	cagney_frameaddr-20030403-branchpoint:1.2
	cagney_frameaddr-20030403-branch:1.2.0.28
	cagney_framebase-20030330-mergepoint:1.2
	cagney_framebase-20030326-branch:1.2.0.26
	cagney_framebase-20030326-branchpoint:1.2
	cagney_lazyid-20030317-branch:1.2.0.24
	cagney_lazyid-20030317-branchpoint:1.2
	kettenis-i386newframe-20030316-mergepoint:1.2
	offbyone-20030313-branch:1.2.0.22
	offbyone-20030313-branchpoint:1.2
	kettenis-i386newframe-20030308-branch:1.2.0.20
	kettenis-i386newframe-20030308-branchpoint:1.2
	carlton_dictionary-20030305-merge:1.2
	cagney_offbyone-20030303-branch:1.2.0.18
	cagney_offbyone-20030303-branchpoint:1.2
	carlton_dictionary-20030207-merge:1.2
	interps-20030202-branch:1.2.0.16
	interps-20030202-branchpoint:1.2
	cagney-unwind-20030108-branch:1.2.0.14
	cagney-unwind-20030108-branchpoint:1.2
	carlton_dictionary-20021223-merge:1.2
	gdb_5_3-2002-12-12-release:1.2
	carlton_dictionary-20021115-merge:1.2
	kseitz_interps-20021105-merge:1.2
	kseitz_interps-20021103-merge:1.2
	drow-cplus-merge-20021020:1.2
	drow-cplus-merge-20021025:1.2
	carlton_dictionary-20021025-merge:1.2
	carlton_dictionary-20021011-merge:1.2
	drow-cplus-branch:1.2.0.12
	drow-cplus-branchpoint:1.2
	kseitz_interps-20020930-merge:1.2
	carlton_dictionary-20020927-merge:1.2
	carlton_dictionary-branch:1.2.0.10
	carlton_dictionary-20020920-branchpoint:1.2
	gdb_5_3-branch:1.2.0.8
	gdb_5_3-2002-09-04-branchpoint:1.2
	kseitz_interps-20020829-merge:1.2
	cagney_sysregs-20020825-branch:1.2.0.6
	cagney_sysregs-20020825-branchpoint:1.2
	readline_4_3-import-branch:1.2.0.4
	readline_4_3-import-branchpoint:1.2
	gdb_5_2_1-2002-07-23-release:1.1.1.2
	kseitz_interps-20020528-branch:1.2.0.2
	kseitz_interps-20020528-branchpoint:1.2
	cagney_regbuf-20020515-branch:1.1.1.2.0.16
	cagney_regbuf-20020515-branchpoint:1.1.1.2
	jimb-macro-020506-branch:1.1.1.2.0.14
	jimb-macro-020506-branchpoint:1.1.1.2
	gdb_5_2-2002-04-29-release:1.1.1.2
	gdb_5_2-branch:1.1.1.2.0.12
	gdb_5_2-2002-03-03-branchpoint:1.1.1.2
	gdb_5_1_1-2002-01-24-release:1.1.1.2
	gdb_5_1_0_1-2002-01-03-release:1.1.1.2
	gdb_5_1_0_1-2002-01-03-branch:1.1.1.2.0.10
	gdb_5_1_0_1-2002-01-03-branchpoint:1.1.1.2
	gdb_5_1-2001-11-21-release:1.1.1.2
	gdb_s390-2001-09-26-branch:1.1.1.2.0.8
	gdb_s390-2001-09-26-branchpoint:1.1.1.2
	gdb_5_1-2001-07-29-branch:1.1.1.2.0.6
	gdb_5_1-2001-07-29-branchpoint:1.1.1.2
	insight-precleanup-2001-01-01:1.1.1.2
	gdb-premipsmulti-2000-06-06-branch:1.1.1.2.0.4
	gdb-premipsmulti-2000-06-06-branchpoint:1.1.1.2
	gdb_5_0-2000-05-19-release:1.1.1.2
	gdb_4_18_2-2000-05-18-release:1.1.1.2
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.2
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.2
	gdb_5_0-2000-04-10-branch:1.1.1.2.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.2
	repo-unification-2000-02-06:1.1.1.2
	gdb-2000-02-04:1.1.1.2
	gdb-2000-02-02:1.1.1.1
	gdb-2000-02-01:1.1.1.1
	gdb-2000-01-31:1.1.1.1
	gdb-2000-01-26:1.1.1.1
	gdb-2000-01-24:1.1.1.1
	gdb-2000-01-17:1.1.1.1
	gdb-2000-01-10:1.1.1.1
	gdb-2000-01-05:1.1.1.1
	gdb-1999-12-21:1.1.1.1
	gdb-1999-12-13:1.1.1.1
	gdb-1999-12-07:1.1.1.1
	gdb-1999-12-06:1.1.1.1
	gdb-1999-11-16:1.1.1.1
	gdb-1999-11-08:1.1.1.1
	gdb-1999-11-01:1.1.1.1
	gdb-1999-10-25:1.1.1.1
	gdb-1999-10-18:1.1.1.1
	gdb-1999-10-11:1.1.1.1
	gdb-1999-10-04:1.1.1.1
	gdb-1999-09-28:1.1.1.1
	gdb-1999-09-21:1.1.1.1
	gdb-1999-09-13:1.1.1.1
	gdb-1999-09-08:1.1.1.1
	gdb-1999-08-30:1.1.1.1
	gdb-1999-08-23:1.1.1.1
	gdb-1999-08-16:1.1.1.1
	gdb-1999-08-09:1.1.1.1
	gdb-1999-08-02:1.1.1.1
	gdb-1999-07-26:1.1.1.1
	gdb-1999-07-19:1.1.1.1
	gdb-1999-07-12:1.1.1.1
	gdb-post-reformat-19990707:1.1.1.1
	gdb-1999-07-07-post-reformat-snapshot:1.1.1.1
	gdb-pre-reformat-19990707:1.1.1.1
	gdb-1999-07-07:1.1.1.1
	gdb-1999-07-05:1.1.1.1
	gdb-1999-06-28:1.1.1.1
	gdb-1999-06-21:1.1.1.1
	gdb-1999-06-14:1.1.1.1
	gdb-1999-06-07:1.1.1.1
	gdb-1999-06-01:1.1.1.1
	gdb-4_18-branch:1.1.1.1.0.2
	gdb-4_18-release:1.1.1.1
	gdb-1999-05-25:1.1.1.1
	gdb-1999-05-19:1.1.1.1
	gdb-1999-05-10:1.1.1.1
	gdb-19990504:1.1.1.1
	gdb-19990422:1.1.1.1
	SNAPSHOT:1.1.1
	gdb-4_18:1.1.1.1
	GDB_4_18:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.5
date	2012.12.19.07.18.14;	author brobecke;	state Exp;
branches;
next	1.4;

1.4
date	2012.12.19.07.11.59;	author brobecke;	state Exp;
branches;
next	1.3;

1.3
date	2005.05.12.07.36.59;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	2002.05.20.14.32.49;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	99.04.16.01.34.55;	author shebs;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.16.01.34.55;	author shebs;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2000.02.05.07.30.19;	author jsm;	state Exp;
branches
	1.1.1.2.16.1;
next	;

1.1.1.2.16.1
date	2002.06.15.16.43.22;	author cagney;	state Exp;
branches;
next	;


desc
@@


1.5
log
@[sim] Update old contact info in GPL license notices

sim/ChangeLog:

        Update old contact info in GPL license notices.
@
text
@/*  dbg_rdi.h -- ARMulator RDI interface:  ARM6 Instruction Emulator.
    Copyright (C) 1994 Advanced RISC Machines Ltd.
 
    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 3 of the License, or
    (at your option) any later version.
 
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    You should have received a copy of the GNU General Public License
    along with this program; if not, see <http://www.gnu.org/licenses/>. */

#ifndef dbg_rdi__h
#define dbg_rdi__h

/***************************************************************************\
*                              Error Codes                                  *
\***************************************************************************/

#define RDIError_NoError                0

#define RDIError_Reset                  1
#define RDIError_UndefinedInstruction   2
#define RDIError_SoftwareInterrupt      3
#define RDIError_PrefetchAbort          4
#define RDIError_DataAbort              5
#define RDIError_AddressException       6
#define RDIError_IRQ                    7
#define RDIError_FIQ                    8
#define RDIError_Error                  9
#define RDIError_BranchThrough0         10

#define RDIError_NotInitialised         128
#define RDIError_UnableToInitialise     129
#define RDIError_WrongByteSex           130
#define RDIError_UnableToTerminate      131
#define RDIError_BadInstruction         132
#define RDIError_IllegalInstruction     133
#define RDIError_BadCPUStateSetting     134
#define RDIError_UnknownCoPro           135
#define RDIError_UnknownCoProState      136
#define RDIError_BadCoProState          137
#define RDIError_BadPointType           138
#define RDIError_UnimplementedType      139
#define RDIError_BadPointSize           140
#define RDIError_UnimplementedSize      141
#define RDIError_NoMorePoints           142
#define RDIError_BreakpointReached      143
#define RDIError_WatchpointAccessed     144
#define RDIError_NoSuchPoint            145
#define RDIError_ProgramFinishedInStep  146
#define RDIError_UserInterrupt          147
#define RDIError_CantSetPoint           148
#define RDIError_IncompatibleRDILevels  149

#define RDIError_CantLoadConfig         150
#define RDIError_BadConfigData          151
#define RDIError_NoSuchConfig           152
#define RDIError_BufferFull             153
#define RDIError_OutOfStore             154
#define RDIError_NotInDownload          155
#define RDIError_PointInUse             156
#define RDIError_BadImageFormat         157
#define RDIError_TargetRunning          158

#define RDIError_LittleEndian           240
#define RDIError_BigEndian              241
#define RDIError_SoftInitialiseError    242

#define RDIError_InsufficientPrivilege  253
#define RDIError_UnimplementedMessage   254
#define RDIError_UndefinedMessage       255

/***************************************************************************\
*                          RDP Message Numbers                              *
\***************************************************************************/

#define RDP_Start               (unsigned char)0x0
#define RDP_End                 (unsigned char)0x1
#define RDP_Read                (unsigned char)0x2
#define RDP_Write               (unsigned char)0x3
#define RDP_CPUread             (unsigned char)0x4
#define RDP_CPUwrite            (unsigned char)0x5
#define RDP_CPread              (unsigned char)0x6
#define RDP_CPwrite             (unsigned char)0x7
#define RDP_SetBreak            (unsigned char)0xa
#define RDP_ClearBreak          (unsigned char)0xb
#define RDP_SetWatch            (unsigned char)0xc
#define RDP_ClearWatch          (unsigned char)0xd
#define RDP_Execute             (unsigned char)0x10
#define RDP_Step                (unsigned char)0x11
#define RDP_Info                (unsigned char)0x12
#define RDP_OSOpReply           (unsigned char)0x13

#define RDP_AddConfig           (unsigned char)0x14
#define RDP_LoadConfigData      (unsigned char)0x15
#define RDP_SelectConfig        (unsigned char)0x16
#define RDP_LoadAgent           (unsigned char)0x17

#define RDP_Stopped             (unsigned char)0x20
#define RDP_OSOp                (unsigned char)0x21
#define RDP_Fatal               (unsigned char)0x5e
#define RDP_Return              (unsigned char)0x5f
#define RDP_Reset               (unsigned char)0x7f

/***************************************************************************\
*                            Other RDI values                               *
\***************************************************************************/

#define RDISex_Little           0	/* the byte sex of the debuggee */
#define RDISex_Big              1
#define RDISex_DontCare         2

#define RDIPoint_EQ             0	/* the different types of break/watchpoints */
#define RDIPoint_GT             1
#define RDIPoint_GE             2
#define RDIPoint_LT             3
#define RDIPoint_LE             4
#define RDIPoint_IN             5
#define RDIPoint_OUT            6
#define RDIPoint_MASK           7

#define RDIPoint_Inquiry        64	/* ORRed with point type in extended RDP */
#define RDIPoint_Handle         128	/* messages                              */

#define RDIWatch_ByteRead       1	/* types of data accesses to watch for */
#define RDIWatch_HalfRead       2
#define RDIWatch_WordRead       4
#define RDIWatch_ByteWrite      8
#define RDIWatch_HalfWrite      16
#define RDIWatch_WordWrite      32

#define RDIReg_R15              (1L << 15)	/* mask values for CPU */
#define RDIReg_PC               (1L << 16)
#define RDIReg_CPSR             (1L << 17)
#define RDIReg_SPSR             (1L << 18)
#define RDINumCPURegs           19

#define RDINumCPRegs            10	/* current maximum */

#define RDIMode_Curr            255

/* Bits set in return value from RDIInfo_Target */
#define RDITarget_LogSpeed              0x0f
#define RDITarget_HW                    0x10	/* else emulator */
#define RDITarget_AgentMaxLevel         0xe0
#define RDITarget_AgentLevelShift       5
#define RDITarget_DebuggerMinLevel      0x700
#define RDITarget_DebuggerLevelShift    8
#define RDITarget_CanReloadAgent        0x800
#define RDITarget_CanInquireLoadSize    0x1000

/* Bits set in return value from RDIInfo_Step */
#define RDIStep_Multiple                1
#define RDIStep_PCChange                2
#define RDIStep_Single                  4

/* Bits set in return value from RDIInfo_Points */
#define RDIPointCapability_Comparison   1
#define RDIPointCapability_Range        2
/* 4 to 128 are RDIWatch_xx{Read,Write} left-shifted by two */
#define RDIPointCapability_Mask         256
#define RDIPointCapability_Status       512	/* Point status enquiries available */

/* RDI_Info subcodes */
#define RDIInfo_Target          0
#define RDIInfo_Points          1
#define RDIInfo_Step            2
#define RDIInfo_MMU             3
#define RDIInfo_DownLoad        4	/* Inquires whether configuration download
					   and selection is available.
					 */
#define RDIInfo_SemiHosting     5	/* Inquires whether RDISemiHosting_* RDI_Info
					   calls are available.
					 */
#define RDIInfo_CoPro           6	/* Inquires whether CoPro RDI_Info calls are
					   available.
					 */
#define RDIInfo_Icebreaker      7

/* The next two are only to be used if the value returned by RDIInfo_Points */
/* has RDIPointCapability_Status set.                                       */
#define RDIPointStatus_Watch    0x80
#define RDIPointStatus_Break    0x81

#define RDISignal_Stop          0x100

#define RDIVector_Catch         0x180

/* The next four are only to be used if RDIInfo_Semihosting returned no error */
#define RDISemiHosting_SetState 0x181
#define RDISemiHosting_GetState 0x182
#define RDISemiHosting_SetVector 0x183
#define RDISemiHosting_GetVector 0x184

/* The next two are only to be used if RDIInfo_Icebreaker returned no error */
#define RDIIcebreaker_GetLocks  0x185
#define RDIIcebreaker_SetLocks  0x186

/* Only if RDIInfo_Target returned RDITarget_CanInquireLoadSize */
#define RDIInfo_GetLoadSize     0x187

#define RDICycles               0x200
#define RDICycles_Size          48
#define RDIErrorP               0x201

#define RDISet_Cmdline          0x300
#define RDISet_RDILevel         0x301
#define RDISet_Thread           0x302

/* The next two are only to be used if RDIInfo_CoPro returned no error */
#define RDIInfo_DescribeCoPro   0x400
#define RDIInfo_RequestCoProDesc 0x401

#define RDIInfo_Log             0x800
#define RDIInfo_SetLog          0x801

typedef unsigned long PointHandle;
typedef unsigned long ThreadHandle;
#define RDINoPointHandle        ((PointHandle)-1L)
#define RDINoHandle             ((ThreadHandle)-1L)

struct Dbg_ConfigBlock;
struct Dbg_HostosInterface;
struct Dbg_MCState;
typedef int rdi_open_proc (unsigned type,
			   struct Dbg_ConfigBlock const *config,
			   struct Dbg_HostosInterface const *i,
			   struct Dbg_MCState *dbg_state);
typedef int rdi_close_proc (void);
typedef int rdi_read_proc (ARMword source, void *dest, unsigned *nbytes);
typedef int rdi_write_proc (const void *source, ARMword dest,
			    unsigned *nbytes);
typedef int rdi_CPUread_proc (unsigned mode, unsigned long mask,
			      ARMword * state);
typedef int rdi_CPUwrite_proc (unsigned mode, unsigned long mask,
			       ARMword const *state);
typedef int rdi_CPread_proc (unsigned CPnum, unsigned long mask,
			     ARMword * state);
typedef int rdi_CPwrite_proc (unsigned CPnum, unsigned long mask,
			      ARMword const *state);
typedef int rdi_setbreak_proc (ARMword address, unsigned type, ARMword bound,
			       PointHandle * handle);
typedef int rdi_clearbreak_proc (PointHandle handle);
typedef int rdi_setwatch_proc (ARMword address, unsigned type,
			       unsigned datatype, ARMword bound,
			       PointHandle * handle);
typedef int rdi_clearwatch_proc (PointHandle handle);
typedef int rdi_execute_proc (PointHandle * handle);
typedef int rdi_step_proc (unsigned ninstr, PointHandle * handle);
typedef int rdi_info_proc (unsigned type, ARMword * arg1, ARMword * arg2);
typedef int rdi_pointinq_proc (ARMword * address, unsigned type,
			       unsigned datatype, ARMword * bound);

typedef enum
{
  RDI_ConfigCPU,
  RDI_ConfigSystem
}
RDI_ConfigAspect;

typedef enum
{
  RDI_MatchAny,
  RDI_MatchExactly,
  RDI_MatchNoEarlier
}
RDI_ConfigMatchType;

typedef int rdi_addconfig_proc (unsigned long nbytes);
typedef int rdi_loadconfigdata_proc (unsigned long nbytes, char const *data);
typedef int rdi_selectconfig_proc (RDI_ConfigAspect aspect, char const *name,
				   RDI_ConfigMatchType matchtype,
				   unsigned versionreq, unsigned *versionp);

typedef char *getbufferproc (void *getbarg, unsigned long *sizep);
typedef int rdi_loadagentproc (ARMword dest, unsigned long size,
			       getbufferproc * getb, void *getbarg);

typedef struct
{
  int itemmax;
  char const *const *names;
}
RDI_NameList;

typedef RDI_NameList const *rdi_namelistproc (void);

typedef int rdi_errmessproc (char *buf, int buflen, int errno);

struct RDIProcVec
{
  char rditypename[12];

  rdi_open_proc *open;
  rdi_close_proc *close;
  rdi_read_proc *read;
  rdi_write_proc *write;
  rdi_CPUread_proc *CPUread;
  rdi_CPUwrite_proc *CPUwrite;
  rdi_CPread_proc *CPread;
  rdi_CPwrite_proc *CPwrite;
  rdi_setbreak_proc *setbreak;
  rdi_clearbreak_proc *clearbreak;
  rdi_setwatch_proc *setwatch;
  rdi_clearwatch_proc *clearwatch;
  rdi_execute_proc *execute;
  rdi_step_proc *step;
  rdi_info_proc *info;
  /* V2 RDI */
  rdi_pointinq_proc *pointinquiry;

  /* These three useable only if RDIInfo_DownLoad returns no error */
  rdi_addconfig_proc *addconfig;
  rdi_loadconfigdata_proc *loadconfigdata;
  rdi_selectconfig_proc *selectconfig;

  rdi_namelistproc *drivernames;
  rdi_namelistproc *cpunames;

  rdi_errmessproc *errmess;

  /* Only if RDIInfo_Target returns a value with RDITarget_LoadAgent set */
  rdi_loadagentproc *loadagent;
};

#endif

extern unsigned int swi_mask;

#define SWI_MASK_DEMON		(1 << 0)
#define SWI_MASK_ANGEL		(1 << 1)
#define SWI_MASK_REDBOOT	(1 << 2)
@


1.4
log
@Update sim copyright headers from GPLv2-or-later to GPLv3-or-later.

gdb/sim/ChangeLog:

        Update the non-FSF-copyrighted files in sim to GPLv3 or later.
@
text
@d15 1
a15 2
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA. */
@


1.3
log
@Update the address of the FSF organization
@
text
@d6 1
a6 1
    the Free Software Foundation; either version 2 of the License, or
@


1.2
log
@Add support for target specific command line switches to old-style simualtors.
Make use of this support in the ARM simulator to add a --swi-support= switch
to select whcih SWI protocols to emulate.
@
text
@d16 1
a16 1
    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA. */
@


1.1
log
@Initial revision
@
text
@d115 1
a115 1
#define RDISex_Little           0 /* the byte sex of the debuggee */
d119 1
a119 1
#define RDIPoint_EQ             0 /* the different types of break/watchpoints */
d128 2
a129 2
#define RDIPoint_Inquiry        64  /* ORRed with point type in extended RDP */
#define RDIPoint_Handle         128 /* messages                              */
d131 1
a131 1
#define RDIWatch_ByteRead       1 /* types of data accesses to watch for */
d138 1
a138 1
#define RDIReg_R15              (1L << 15) /* mask values for CPU */
d144 1
a144 1
#define RDINumCPRegs            10 /* current maximum */
d150 1
a150 1
#define RDITarget_HW                    0x10      /* else emulator */
d168 1
a168 1
#define RDIPointCapability_Status       512 /* Point status enquiries available */
d175 9
a183 9
#define RDIInfo_DownLoad        4   /* Inquires whether configuration download
                                       and selection is available.
                                     */
#define RDIInfo_SemiHosting     5   /* Inquires whether RDISemiHosting_* RDI_Info
                                       calls are available.
                                     */
#define RDIInfo_CoPro           6   /* Inquires whether CoPro RDI_Info calls are
                                       available.
                                     */
d231 91
a321 76
typedef int rdi_open_proc(unsigned type, struct Dbg_ConfigBlock const *config,
                          struct Dbg_HostosInterface const *i,
                          struct Dbg_MCState *dbg_state);
typedef int rdi_close_proc(void);
typedef int rdi_read_proc(ARMword source, void *dest, unsigned *nbytes);
typedef int rdi_write_proc(const void *source, ARMword dest, unsigned *nbytes);
typedef int rdi_CPUread_proc(unsigned mode, unsigned long mask, ARMword *state);
typedef int rdi_CPUwrite_proc(unsigned mode, unsigned long mask, ARMword const *state);
typedef int rdi_CPread_proc(unsigned CPnum, unsigned long mask, ARMword *state);
typedef int rdi_CPwrite_proc(unsigned CPnum, unsigned long mask, ARMword const *state);
typedef int rdi_setbreak_proc(ARMword address, unsigned type, ARMword bound,
                              PointHandle *handle);
typedef int rdi_clearbreak_proc(PointHandle handle);
typedef int rdi_setwatch_proc(ARMword address, unsigned type, unsigned datatype,
                              ARMword bound, PointHandle *handle);
typedef int rdi_clearwatch_proc(PointHandle handle);
typedef int rdi_execute_proc(PointHandle *handle);
typedef int rdi_step_proc(unsigned ninstr, PointHandle *handle);
typedef int rdi_info_proc(unsigned type, ARMword *arg1, ARMword *arg2);
typedef int rdi_pointinq_proc(ARMword *address, unsigned type,
                              unsigned datatype, ARMword *bound);

typedef enum {
    RDI_ConfigCPU,
    RDI_ConfigSystem
} RDI_ConfigAspect;

typedef enum {
    RDI_MatchAny,
    RDI_MatchExactly,
    RDI_MatchNoEarlier
} RDI_ConfigMatchType;

typedef int rdi_addconfig_proc(unsigned long nbytes);
typedef int rdi_loadconfigdata_proc(unsigned long nbytes, char const *data);
typedef int rdi_selectconfig_proc(RDI_ConfigAspect aspect, char const *name,
                                  RDI_ConfigMatchType matchtype, unsigned versionreq,
                                  unsigned *versionp);

typedef char *getbufferproc(void *getbarg, unsigned long *sizep);
typedef int rdi_loadagentproc(ARMword dest, unsigned long size, getbufferproc *getb, void *getbarg);

typedef struct {
    int itemmax;
    char const * const *names;
} RDI_NameList;

typedef RDI_NameList const *rdi_namelistproc(void);

typedef int rdi_errmessproc(char *buf, int buflen, int errno);

struct RDIProcVec {
    char rditypename[12];

    rdi_open_proc       *open;
    rdi_close_proc      *close;
    rdi_read_proc       *read;
    rdi_write_proc      *write;
    rdi_CPUread_proc    *CPUread;
    rdi_CPUwrite_proc   *CPUwrite;
    rdi_CPread_proc     *CPread;
    rdi_CPwrite_proc    *CPwrite;
    rdi_setbreak_proc   *setbreak;
    rdi_clearbreak_proc *clearbreak;
    rdi_setwatch_proc   *setwatch;
    rdi_clearwatch_proc *clearwatch;
    rdi_execute_proc    *execute;
    rdi_step_proc       *step;
    rdi_info_proc       *info;
    /* V2 RDI */
    rdi_pointinq_proc   *pointinquiry;

    /* These three useable only if RDIInfo_DownLoad returns no error */
    rdi_addconfig_proc  *addconfig;
    rdi_loadconfigdata_proc *loadconfigdata;
    rdi_selectconfig_proc *selectconfig;
d323 2
a324 2
    rdi_namelistproc    *drivernames;
    rdi_namelistproc    *cpunames;
d326 1
a326 1
    rdi_errmessproc     *errmess;
d328 2
a329 2
    /* Only if RDIInfo_Target returns a value with RDITarget_LoadAgent set */
    rdi_loadagentproc   *loadagent;
d334 1
d336 3
a338 4




@


1.1.1.1
log
@Initial creation of sourceware repository
@
text
@@


1.1.1.2
log
@import gdb-2000-02-04 snapshot
@
text
@d115 1
a115 1
#define RDISex_Little           0	/* the byte sex of the debuggee */
d119 1
a119 1
#define RDIPoint_EQ             0	/* the different types of break/watchpoints */
d128 2
a129 2
#define RDIPoint_Inquiry        64	/* ORRed with point type in extended RDP */
#define RDIPoint_Handle         128	/* messages                              */
d131 1
a131 1
#define RDIWatch_ByteRead       1	/* types of data accesses to watch for */
d138 1
a138 1
#define RDIReg_R15              (1L << 15)	/* mask values for CPU */
d144 1
a144 1
#define RDINumCPRegs            10	/* current maximum */
d150 1
a150 1
#define RDITarget_HW                    0x10	/* else emulator */
d168 1
a168 1
#define RDIPointCapability_Status       512	/* Point status enquiries available */
d175 9
a183 9
#define RDIInfo_DownLoad        4	/* Inquires whether configuration download
					   and selection is available.
					 */
#define RDIInfo_SemiHosting     5	/* Inquires whether RDISemiHosting_* RDI_Info
					   calls are available.
					 */
#define RDIInfo_CoPro           6	/* Inquires whether CoPro RDI_Info calls are
					   available.
					 */
d231 76
a306 91
typedef int rdi_open_proc (unsigned type,
			   struct Dbg_ConfigBlock const *config,
			   struct Dbg_HostosInterface const *i,
			   struct Dbg_MCState *dbg_state);
typedef int rdi_close_proc (void);
typedef int rdi_read_proc (ARMword source, void *dest, unsigned *nbytes);
typedef int rdi_write_proc (const void *source, ARMword dest,
			    unsigned *nbytes);
typedef int rdi_CPUread_proc (unsigned mode, unsigned long mask,
			      ARMword * state);
typedef int rdi_CPUwrite_proc (unsigned mode, unsigned long mask,
			       ARMword const *state);
typedef int rdi_CPread_proc (unsigned CPnum, unsigned long mask,
			     ARMword * state);
typedef int rdi_CPwrite_proc (unsigned CPnum, unsigned long mask,
			      ARMword const *state);
typedef int rdi_setbreak_proc (ARMword address, unsigned type, ARMword bound,
			       PointHandle * handle);
typedef int rdi_clearbreak_proc (PointHandle handle);
typedef int rdi_setwatch_proc (ARMword address, unsigned type,
			       unsigned datatype, ARMword bound,
			       PointHandle * handle);
typedef int rdi_clearwatch_proc (PointHandle handle);
typedef int rdi_execute_proc (PointHandle * handle);
typedef int rdi_step_proc (unsigned ninstr, PointHandle * handle);
typedef int rdi_info_proc (unsigned type, ARMword * arg1, ARMword * arg2);
typedef int rdi_pointinq_proc (ARMword * address, unsigned type,
			       unsigned datatype, ARMword * bound);

typedef enum
{
  RDI_ConfigCPU,
  RDI_ConfigSystem
}
RDI_ConfigAspect;

typedef enum
{
  RDI_MatchAny,
  RDI_MatchExactly,
  RDI_MatchNoEarlier
}
RDI_ConfigMatchType;

typedef int rdi_addconfig_proc (unsigned long nbytes);
typedef int rdi_loadconfigdata_proc (unsigned long nbytes, char const *data);
typedef int rdi_selectconfig_proc (RDI_ConfigAspect aspect, char const *name,
				   RDI_ConfigMatchType matchtype,
				   unsigned versionreq, unsigned *versionp);

typedef char *getbufferproc (void *getbarg, unsigned long *sizep);
typedef int rdi_loadagentproc (ARMword dest, unsigned long size,
			       getbufferproc * getb, void *getbarg);

typedef struct
{
  int itemmax;
  char const *const *names;
}
RDI_NameList;

typedef RDI_NameList const *rdi_namelistproc (void);

typedef int rdi_errmessproc (char *buf, int buflen, int errno);

struct RDIProcVec
{
  char rditypename[12];

  rdi_open_proc *open;
  rdi_close_proc *close;
  rdi_read_proc *read;
  rdi_write_proc *write;
  rdi_CPUread_proc *CPUread;
  rdi_CPUwrite_proc *CPUwrite;
  rdi_CPread_proc *CPread;
  rdi_CPwrite_proc *CPwrite;
  rdi_setbreak_proc *setbreak;
  rdi_clearbreak_proc *clearbreak;
  rdi_setwatch_proc *setwatch;
  rdi_clearwatch_proc *clearwatch;
  rdi_execute_proc *execute;
  rdi_step_proc *step;
  rdi_info_proc *info;
  /* V2 RDI */
  rdi_pointinq_proc *pointinquiry;

  /* These three useable only if RDIInfo_DownLoad returns no error */
  rdi_addconfig_proc *addconfig;
  rdi_loadconfigdata_proc *loadconfigdata;
  rdi_selectconfig_proc *selectconfig;
d308 2
a309 2
  rdi_namelistproc *drivernames;
  rdi_namelistproc *cpunames;
d311 1
a311 1
  rdi_errmessproc *errmess;
d313 2
a314 2
  /* Only if RDIInfo_Target returns a value with RDITarget_LoadAgent set */
  rdi_loadagentproc *loadagent;
d318 6
@


1.1.1.2.16.1
log
@merge from trunk
@
text
@a332 6

extern unsigned int swi_mask;

#define SWI_MASK_DEMON		(1 << 0)
#define SWI_MASK_ANGEL		(1 << 1)
#define SWI_MASK_REDBOOT	(1 << 2)
@


