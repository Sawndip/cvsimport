head	1.9;
access;
symbols
	sid-snapshot-20180601:1.9
	sid-snapshot-20180501:1.9
	sid-snapshot-20180401:1.9
	sid-snapshot-20180301:1.9
	sid-snapshot-20180201:1.9
	sid-snapshot-20180101:1.9
	sid-snapshot-20171201:1.9
	sid-snapshot-20171101:1.9
	sid-snapshot-20171001:1.9
	sid-snapshot-20170901:1.9
	sid-snapshot-20170801:1.9
	sid-snapshot-20170701:1.9
	sid-snapshot-20170601:1.9
	sid-snapshot-20170501:1.9
	sid-snapshot-20170401:1.9
	sid-snapshot-20170301:1.9
	sid-snapshot-20170201:1.9
	sid-snapshot-20170101:1.9
	sid-snapshot-20161201:1.9
	sid-snapshot-20161101:1.9
	sid-snapshot-20160901:1.9
	sid-snapshot-20160801:1.9
	sid-snapshot-20160701:1.9
	sid-snapshot-20160601:1.9
	sid-snapshot-20160501:1.9
	sid-snapshot-20160401:1.9
	sid-snapshot-20160301:1.9
	sid-snapshot-20160201:1.9
	sid-snapshot-20160101:1.9
	sid-snapshot-20151201:1.9
	sid-snapshot-20151101:1.9
	sid-snapshot-20151001:1.9
	sid-snapshot-20150901:1.9
	sid-snapshot-20150801:1.9
	sid-snapshot-20150701:1.9
	sid-snapshot-20150601:1.9
	sid-snapshot-20150501:1.9
	sid-snapshot-20150401:1.9
	sid-snapshot-20150301:1.9
	sid-snapshot-20150201:1.9
	sid-snapshot-20150101:1.9
	sid-snapshot-20141201:1.9
	sid-snapshot-20141101:1.9
	sid-snapshot-20141001:1.9
	sid-snapshot-20140901:1.9
	sid-snapshot-20140801:1.9
	sid-snapshot-20140701:1.9
	sid-snapshot-20140601:1.9
	sid-snapshot-20140501:1.9
	sid-snapshot-20140401:1.9
	sid-snapshot-20140301:1.9
	sid-snapshot-20140201:1.9
	sid-snapshot-20140101:1.9
	sid-snapshot-20131201:1.9
	sid-snapshot-20131101:1.9
	sid-snapshot-20131001:1.9
	sid-snapshot-20130901:1.9
	sid-snapshot-20130801:1.9
	sid-snapshot-20130701:1.9
	sid-snapshot-20130601:1.9
	insight_7_6-2013-04-10-branchpoint:1.9
	gdb_7_6-branch:1.9.0.58
	sid-snapshot-20130501:1.9
	sid-snapshot-20130401:1.9
	sid-snapshot-20130301:1.9
	sid-snapshot-20130201:1.9
	sid-snapshot-20130101:1.9
	sid-snapshot-20121201:1.9
	sid-snapshot-20121101:1.9
	sid-snapshot-20121001:1.9
	sid-snapshot-20120901:1.9
	gdb_7_5-branch:1.9.0.56
	sid-snapshot-20120801:1.9
	sid-snapshot-20120701:1.9
	sid-snapshot-20120601:1.9
	sid-snapshot-20120501:1.9
	sid-snapshot-20120401:1.9
	gdb_7_4-branch:1.9.0.54
	sid-snapshot-20120301:1.9
	sid-snapshot-20120201:1.9
	sid-snapshot-20120101:1.9
	sid-snapshot-20111201:1.9
	sid-snapshot-20111101:1.9
	sid-snapshot-20111001:1.9
	sid-snapshot-20110901:1.9
	gdb_7_3-branch:1.9.0.52
	sid-snapshot-20110801:1.9
	sid-snapshot-20110701:1.9
	sid-snapshot-20110601:1.9
	sid-snapshot-20110501:1.9
	sid-snapshot-20110401:1.9
	sid-snapshot-20110301:1.9
	sid-snapshot-20110201:1.9
	sid-snapshot-20110101:1.9
	sid-snapshot-20101201:1.9
	sid-snapshot-20101101:1.9
	sid-snapshot-20101001:1.9
	sid-snapshot-20100901:1.9
	sid-snapshot-20100801:1.9
	sid-snapshot-20100701:1.9
	sid-snapshot-20100601:1.9
	sid-snapshot-20100501:1.9
	sid-snapshot-20100401:1.9
	sid-snapshot-20100301:1.9
	gdb_7_1-branch:1.9.0.50
	gdb_7_0-branch:1.9.0.48
	sid-snapshot-20100201:1.9
	sid-snapshot-20100101:1.9
	sid-snapshot-20091201:1.9
	sid-snapshot-20091101:1.9
	sid-snapshot-20091001:1.9
	arc-sim-20090309:1.9
	sid-snapshot-20090901:1.9
	sid-snapshot-20090801:1.9
	sid-snapshot-20090701:1.9
	sid-snapshot-20090601:1.9
	sid-snapshot-20090501:1.9
	kevinb-pre-tcl8_5_7_merge:1.9
	sid-snapshot-20090401:1.9
	arc-insight_6_8-branch:1.9.0.46
	arc-insight_6_8-branchpoint:1.9
	insight_6_8-branch:1.9.0.44
	insight_6_8-branchpoint:1.9
	sid-snapshot-20090301:1.9
	sid-snapshot-20090201:1.9
	sid-snapshot-20090101:1.9
	sid-snapshot-20081201:1.9
	sid-snapshot-20081101:1.9
	sid-snapshot-20081001:1.9
	sid-snapshot-20080901:1.9
	sid-snapshot-20080801:1.9
	sid-snapshot-20080701:1.9
	sid-snapshot-20080601:1.9
	sid-snapshot-20080501:1.9
	sid-snapshot-20080403:1.9
	sid-snapshot-20080401:1.9
	gdb_6_8-branch:1.9.0.42
	sid-snapshot-20080301:1.9
	sid-snapshot-20080201:1.9
	sid-snapshot-20080101:1.9
	sid-snapshot-20071201:1.9
	sid-snapshot-20071101:1.9
	sid-snapshot-20071001:1.9
	insight_6_6-20070208-release:1.9
	gdb_6_6-branch:1.9.0.40
	gdb_6_6-2006-11-15-branchpoint:1.9
	insight_6_5-20061003-release:1.9
	gdb_6_5-branch:1.9.0.38
	gdb_6_5-2006-05-14-branchpoint:1.9
	readline_5_1-import-branch:1.9.0.36
	readline_5_1-import-branchpoint:1.9
	gdb_6_4-branch:1.9.0.34
	gdb_6_4-2005-11-01-branchpoint:1.9
	msnyder-tracepoint-checkpoint-branch:1.9.0.32
	msnyder-tracepoint-checkpoint-branchpoint:1.9
	gdb_6_1-2004-04-05-release:1.9
	ezannoni_pie-20040323-branch:1.9.0.30
	ezannoni_pie-20040323-branchpoint:1.9
	cagney_tramp-20040321-mergepoint:1.9
	cagney_tramp-20040309-branch:1.9.0.28
	cagney_tramp-20040309-branchpoint:1.9
	gdb_6_1-branch:1.9.0.26
	gdb_6_1-2004-03-01-gmt-branchpoint:1.9
	drow-cplus-merge-20040208:1.9
	carlton_dictionary-20040126-merge:1.9
	drow-cplus-merge-20040113:1.9
	drow-cplus-merge-20031224:1.9
	drow-cplus-merge-20031220:1.9
	carlton_dictionary-20031215-merge:1.9
	drow-cplus-merge-20031214:1.9
	carlton-dictionary-20031111-merge:1.9
	gdb_6_0-2003-10-04-release:1.9
	carlton_dictionary-20030917-merge:1.9
	ezannoni_pie-20030916-branchpoint:1.9
	ezannoni_pie-20030916-branch:1.9.0.24
	cagney_x86i386-20030821-branch:1.9.0.22
	cagney_x86i386-20030821-branchpoint:1.9
	carlton_dictionary-20030805-merge:1.9
	carlton_dictionary-20030627-merge:1.9
	gdb_6_0-branch:1.9.0.20
	gdb_6_0-2003-06-23-branchpoint:1.9
	cagney_convert-20030606-branch:1.9.0.18
	cagney_convert-20030606-branchpoint:1.9
	cagney_writestrings-20030508-branch:1.9.0.16
	cagney_writestrings-20030508-branchpoint:1.9
	carlton_dictionary-20030523-merge:1.9
	cagney_fileio-20030521-branch:1.9.0.14
	cagney_fileio-20030521-branchpoint:1.9
	carlton_dictionary-20030430-merge:1.9
	carlton_dictionary-20030416-merge:1.9
	cagney_frameaddr-20030409-mergepoint:1.9
	cagney_frameaddr-20030403-branchpoint:1.9
	cagney_frameaddr-20030403-branch:1.9.0.12
	cagney_framebase-20030330-mergepoint:1.9
	cagney_framebase-20030326-branch:1.9.0.10
	cagney_framebase-20030326-branchpoint:1.9
	cagney_lazyid-20030317-branch:1.9.0.8
	cagney_lazyid-20030317-branchpoint:1.9
	offbyone-20030313-branch:1.9.0.6
	offbyone-20030313-branchpoint:1.9
	carlton_dictionary-20030305-merge:1.9
	cagney_offbyone-20030303-branch:1.9.0.4
	cagney_offbyone-20030303-branchpoint:1.9
	carlton_dictionary-20030207-merge:1.9
	interps-20030202-branch:1.9.0.2
	interps-20030202-branchpoint:1.9
	TCL8_4_1:1.1.1.3
	cagney-unwind-20030108-branch:1.8.0.2
	cagney-unwind-20030108-branchpoint:1.8
	carlton_dictionary-20021223-merge:1.8
	gdb_5_3-2002-12-12-release:1.6
	TCL_8_4_1:1.1.1.3
	carlton_dictionary-20021115-merge:1.7
	kseitz_interps-20021105-merge:1.7
	kseitz_interps-20021103-merge:1.7
	drow-cplus-merge-20021020:1.7
	drow-cplus-merge-20021025:1.7
	carlton_dictionary-20021025-merge:1.7
	carlton_dictionary-20021011-merge:1.7
	drow-cplus-branch:1.7.0.4
	drow-cplus-branchpoint:1.7
	kseitz_interps-20020930-merge:1.7
	carlton_dictionary-20020927-merge:1.7
	tcltk840-20020924-branch:1.7.0.2
	tcltk840-20020924-branchpoint:1.7
	TCL_8_4_0:1.1.1.3
	carlton_dictionary-branch:1.6.0.16
	carlton_dictionary-20020920-branchpoint:1.6
	sid-20020905-branchpoint:1.6
	sid-20020905-branch:1.6.0.14
	gdb_5_3-branch:1.6.0.12
	gdb_5_3-2002-09-04-branchpoint:1.6
	kseitz_interps-20020829-merge:1.6
	cagney_sysregs-20020825-branch:1.6.0.10
	cagney_sysregs-20020825-branchpoint:1.6
	readline_4_3-import-branch:1.6.0.8
	readline_4_3-import-branchpoint:1.6
	gdb_5_2_1-2002-07-23-release:1.6
	kseitz_interps-20020528-branch:1.6.0.6
	kseitz_interps-20020528-branchpoint:1.6
	cagney_regbuf-20020515-branch:1.6.0.4
	cagney_regbuf-20020515-branchpoint:1.6
	gdb_5_2-2002-04-29-release:1.6
	gdb_5_2-branch:1.6.0.2
	gdb_5_2-2002-03-03-branchpoint:1.6
	gdb_5_1_1-2002-01-24-release:1.4
	cygnus_cvs_20020108_pre:1.6
	gdb_5_1_0_1-2002-01-03-branch:1.4.0.6
	gdb_5_1_0_1-2002-01-03-branchpoint:1.4
	gdb_5_1-2001-11-21-release:1.4
	gdb_s390-2001-09-26-branch:1.4.0.4
	gdb_s390-2001-09-26-branchpoint:1.4
	TCL_8_3:1.1.1.2
	NET:1.1.1
	gdb_5_1-2001-07-29-branch:1.4.0.2
	gdb_5_1-2001-07-29-branchpoint:1.4
	insight-precleanup-2001-01-01:1.3
	gdb_5_0-2000-05-19-release:1.2
	gdb_4_18_2-2000-05-18-release:1.2
	gdb_4_95_1-2000-05-11-snapshot:1.2
	gdb_4_95_0-2000-04-27-snapshot:1.2
	gdb_5_0-2000-04-10-branch:1.2.0.2
	gdb_5_0-2000-04-10-branchpoint:1.2
	repo-unification-2000-02-06:1.1.1.1
	dejagnu-2000-02-04:1.1.1.1
	dejagnu-2000-01-31:1.1.1.1
	dejagnu-2000-01-24:1.1.1.1
	dejagnu-2000-01-17:1.1.1.1
	dejagnu-2000-01-10:1.1.1.1
	dejagnu-2000-01-04:1.1.1.1
	dejagnu-1999-12-21:1.1.1.1
	dejagnu-1999-12-13:1.1.1.1
	dejagnu-1999-12-07:1.1.1.1
	dejagnu-1999-12-06:1.1.1.1
	dejagnu-1999-11-15:1.1.1.1
	dejagnu-1999-11-08:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.9
date	2003.01.21.19.40.04;	author hunt;	state Exp;
branches;
next	1.8;

1.8
date	2002.11.26.19.47.53;	author hunt;	state Exp;
branches;
next	1.7;

1.7
date	2002.09.24.18.37.02;	author kseitz;	state Exp;
branches
	1.7.2.1
	1.7.4.1;
next	1.6;

1.6
date	2001.09.09.23.56.05;	author irox;	state Exp;
branches
	1.6.16.1;
next	1.5;

1.5
date	2001.09.09.23.26.06;	author irox;	state Exp;
branches;
next	1.4;

1.4
date	2001.07.17.17.25.33;	author fche;	state Exp;
branches;
next	1.3;

1.3
date	2000.06.05.23.07.29;	author cgf;	state Exp;
branches;
next	1.2;

1.2
date	2000.04.03.19.34.38;	author jingham;	state Exp;
branches;
next	1.1;

1.1
date	99.11.09.01.28.43;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.7.2.1
date	2002.09.27.21.49.04;	author kseitz;	state Exp;
branches;
next	;

1.7.4.1
date	2003.12.14.20.28.44;	author drow;	state Exp;
branches;
next	;

1.6.16.1
date	2002.12.23.19.40.21;	author carlton;	state Exp;
branches;
next	1.6.16.2;

1.6.16.2
date	2003.02.07.19.18.12;	author carlton;	state Exp;
branches;
next	;

1.1.1.1
date	99.11.09.01.28.43;	author jsm;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2001.09.09.22.40.56;	author irox;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.09.24.19.56.12;	author kseitz;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Updated to tcl 8.4.1
@
text
@/* 
 * tclInitScript.h --
 *
 *	This file contains Unix & Windows common init script
 *      It is not used on the Mac. (the mac init script is in tclMacInit.c)
 *
 * Copyright (c) 1998 Sun Microsystems, Inc.
 * Copyright (c) 1999 by Scriptics Corporation.
 * All rights reserved.
 *
 * RCS: @@(#) $Id: tclInitScript.h,v 1.13 2001/09/10 21:06:55 dgp Exp $
 */

/*
 * In order to find init.tcl during initialization, the following script
 * is invoked by Tcl_Init().  It looks in several different directories:
 *
 *	$tcl_library		- can specify a primary location, if set
 *				  no other locations will be checked
 *
 *	$env(TCL_LIBRARY)	- highest priority so user can always override
 *				  the search path unless the application has
 *				  specified an exact directory above
 *
 *	$tclDefaultLibrary	- this value is initialized by TclPlatformInit
 *				  from a static C variable that was set at
 *				  compile time
 *
 *	$tcl_libPath		- this value is initialized by a call to
 *				  TclGetLibraryPath called from Tcl_Init.
 *
 * The first directory on this path that contains a valid init.tcl script
 * will be set as the value of tcl_library.
 *
 * Note that this entire search mechanism can be bypassed by defining an
 * alternate tclInit procedure before calling Tcl_Init().
 */

static char initScript[] = "if {[info proc tclInit]==\"\"} {\n\
  proc tclInit {} {\n\
    global tcl_libPath tcl_library errorInfo\n\
    global env tclDefaultLibrary\n\
    rename tclInit {}\n\
    set errors {}\n\
    set dirs {}\n\
    if {[info exists tcl_library]} {\n\
	lappend dirs $tcl_library\n\
    } else {\n\
	if {[info exists env(TCL_LIBRARY)]} {\n\
	    lappend dirs $env(TCL_LIBRARY)\n\
	}\n\
	catch {\n\
	    lappend dirs $tclDefaultLibrary\n\
	    unset tclDefaultLibrary\n\
	}\n\
        set dirs [concat $dirs $tcl_libPath]\n\
    }\n\
    foreach i $dirs {\n\
	set tcl_library $i\n\
	set tclfile [file join $i init.tcl]\n\
	if {[file exists $tclfile]} {\n\
	    if {![catch {uplevel #0 [list source $tclfile]} msg]} {\n\
		return\n\
	    } else {\n\
		append errors \"$tclfile: $msg\n$errorInfo\n\"\n\
	    }\n\
	}\n\
    }\n\
    set msg \"Can't find a usable init.tcl in the following directories: \n\"\n\
    append msg \"    $dirs\n\n\"\n\
    append msg \"$errors\n\n\"\n\
    append msg \"This probably means that Tcl wasn't installed properly.\n\"\n\
    error $msg\n\
  }\n\
}\n\
tclInit";


/*
 * A pointer to a string that holds an initialization script that if non-NULL
 * is evaluated in Tcl_Init() prior to the the built-in initialization script
 * above.  This variable can be modified by the procedure below.
 */
 
static char *          tclPreInitScript = NULL;


/*
 *----------------------------------------------------------------------
 *
 * TclSetPreInitScript --
 *
 *	This routine is used to change the value of the internal
 *	variable, tclPreInitScript.
 *
 * Results:
 *	Returns the current value of tclPreInitScript.
 *
 * Side effects:
 *	Changes the way Tcl_Init() routine behaves.
 *
 *----------------------------------------------------------------------
 */

char *
TclSetPreInitScript (string)
    char *string;		/* Pointer to a script. */
{
    char *prevString = tclPreInitScript;
    tclPreInitScript = string;
    return(prevString);
}
@


1.8
log
@touched all sources to ease next import
@
text
@d11 1
a11 1
 * RCS: @@(#) $Id: tclInitScript.h,v 1.9.6.2 2000/04/17 22:46:19 spolk Exp $
d52 4
a55 2
	lappend dirs $tclDefaultLibrary\n\
	unset tclDefaultLibrary\n\
a66 1
            set tcl_pkgPath [lreplace $tcl_pkgPath end end]\n\
@


1.7
log
@touched all sources to ease next import
@
text
@@


1.7.4.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@d11 1
a11 1
 * RCS: @@(#) $Id: tclInitScript.h,v 1.13 2001/09/10 21:06:55 dgp Exp $
d52 2
a53 4
	catch {\n\
	    lappend dirs $tclDefaultLibrary\n\
	    unset tclDefaultLibrary\n\
	}\n\
d65 1
@


1.7.2.1
log
@Import Tcl 8.4.0 into mainline-like sources. Simplest Tcl build possible for
cygwin.
@
text
@d11 1
a11 1
 * RCS: @@(#) $Id: tclInitScript.h,v 1.13 2001/09/10 21:06:55 dgp Exp $
d52 2
a53 4
	catch {\n\
	    lappend dirs $tclDefaultLibrary\n\
	    unset tclDefaultLibrary\n\
	}\n\
d65 1
@


1.6
log
@touched all Tcl files to ease next import.
@
text
@@


1.6.16.1
log
@2002-12-23  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021223-merge.
@
text
@@


1.6.16.2
log
@2003-02-07  David Carlton  <carlton@@math.stanford.edu>

	* Merge with mainline; tag is carlton_dictionary-20030207-merge.
@
text
@d52 2
a53 4
	catch {\n\
	    lappend dirs $tclDefaultLibrary\n\
	    unset tclDefaultLibrary\n\
	}\n\
d65 1
@


1.5
log
@Tcl8.3 upgrade merge.
@
text
@@


1.4
log
@* sid build tree testing fix

2001-07-17  Frank Ch. Eigler  <fche@@redhat.com>

        * generic/tclInitScript.h (initScript): Check that nameofexecutable
        is valid (file exists) before traversing it as a possible link.
@
text
@a5 5
 *	This file should only be included once in the entire set of C
 *	source files for Tcl (by the respective platform initialization
 *	C source file, tclUnixInit.c and tclWinInit.c) and thus the
 *	presence of the routine, TclSetPreInitScript, below, should be
 *	harmless.
d8 2
d11 1
a11 4
 * See the file "license.terms" for information on usage and redistribution
 * of this file, and for a DISCLAIMER OF ALL WARRANTIES.
 *
 * RCS: @@(#) $Id: tclInitScript.h,v 1.4 1999/01/28 04:55:34 jingham Exp $
d29 2
a30 22
 *	<executable directory>/../lib/tcl$tcl_version
 *				- look for a lib/tcl<ver> in a sibling of
 *				  the bin directory (e.g. install hierarchy)
 *
 *	<executable directory>/../../lib/tcl$tcl_version
 *				- look for a lib/tcl<ver> in a sibling of
 *				  the bin/arch directory
 *
 *	<executable directory>/../library
 *				- look in build directory
 *
 *	<executable directory>/../../library
 *				- look in build directory from unix/arch
 *
 *	<executable directory>/../../tcl$tcl_patchLevel/library
 *				- look for tcl build directory relative
 *				  to a parallel build directory (e.g. Tk)
 *
 *	<executable directory>/../../../tcl$tcl_patchLevel/library
 *				- look for tcl build directory relative
 *				  to a parallel build directory from
 *				  down inside unix/arch directory
d41 2
a42 3
    global tcl_library tcl_version tcl_patchLevel errorInfo\n\
    global tcl_pkgPath env tclDefaultLibrary\n\
    global tcl_platform\n\
d52 3
a54 54
        # CYGNUS LOCAL: I've changed this alot.  \n\
        # Basically we only care about two cases,\n\
        # if we are installed, and if we are in the devo tree...\n\
        # The next few are for if we are installed:\n\
        # NB. We also want this to work if the user is actually\n\
        # running a link and not the actual program.  So look for a\n\
        # link and chase it down to its source.\n\
        set execName [info nameofexecutable]\n\
        if {[file exists $execName] && [string compare [file type $execName] \"link\"] == 0} {\n\
            set execName [file readlink $execName]\n\
            if {[string compare [file pathtype $execName] \"relative\"] == 0} {\n\
              set execName [file join [pwd] $execName]\n\
            }\n\
        }\n\
	set parentDir [file dirname [file dirname $execName]]\n\
        lappend dirs [file join $parentDir share tcl$tcl_version]\n\
        lappend dirs [file join $parentDir \"usr\" share tcl$tcl_version]\n\
	lappend dirs [file join [file dirname $parentDir] share tcl$tcl_version]\n\
        # NOW, let's try to find it in the build tree...\n\
        # Rather than play all the games Scriptics does, if we are in the build\n\
        # tree there will be a tclConfig.sh relative to the executible's directory, and we \n\
        # can read it and get the source dir from there...\n\
        #\n\
        # We duplicate all the directories in the search, one w/o the version and one with.\n\
        # Most modules use ../../tcl/{unix,win}\n\
        lappend configDirs [file join [file dirname $parentDir] tcl$tcl_version $tcl_platform(platform)]\n\
        lappend configDirs [file join [file dirname $parentDir] tcl             $tcl_platform(platform)]\n\
        # This one gets tclsh...\n\
        lappend configDirs $execName \n\
        # This one is for gdb, and any other app which has its executible in the top directory.\n\
        lappend configDirs [file join $parentDir tcl$tcl_version $tcl_platform(platform)]\n\
        lappend configDirs [file join $parentDir tcl             $tcl_platform(platform)]\n\
        # This last will handle itclsh & itkwish (../../../tcl/{unix,win}):\n\
        lappend configDirs [file join [file dirname [file dirname $parentDir]] tcl$tcl_version $tcl_platform(platform)]\n\
        lappend configDirs [file join [file dirname [file dirname $parentDir]] tcl             $tcl_platform(platform)]\n\
        \n\
        foreach i $configDirs {\n\
            set configFile [file join $i tclConfig.sh]\n\
            if {[file exists $configFile]} {\n\
                if {![catch {open $configFile r} fileH]} {\n\
                    set srcDir {}\n\
                    while {[gets $fileH line] >= 0} {\n\
                        if {[regexp {^TCL_SRC_DIR='([^']*)'} $line dummy srcDir]} {\n\
                            break\n\
                        }\n\
                    }\n\
                    close $fileH\n\
                    if {$srcDir != \"\"} {\n\
                        lappend dirs [file join $srcDir library]\n\
                        break\n\
                    }\n\
                }\n\
            }\n\
        }\n\
a55 6
    # I also moved this from just after TCL_LIBRARY to last.\n\
    # I only want to use the compiled in library if I am really lost, because\n\
    # otherwise if I have installed once, but am working in the build directory,\n\
    # I will always pick up the installed files, which will be very confusing...\n\
    lappend dirs $tclDefaultLibrary\n\
    unset tclDefaultLibrary\n\
d61 1
a61 1
	        return\n\
d76 1
@


1.3
log
@* generic/tclFileName.c (Tcl_TranslateFileName): Cygwin paths (and Windows in
general, actually) do not need to have '/'s translated into '\'s.
(TclDoGlob): Ditto.
* win/tclWinFile.c (TclMatchFiles): Ditto.
* generic/tclInitScript.h: Look in "../bin/usr/share" as well as
"../bin/share".
@
text
@d87 1
a87 1
        if {[string compare [file type $execName] \"link\"] == 0} {\n\
@


1.2
log
@Follow links from the gdb the user ran to the actual executable, so
that you can still find all the Tcl support files.
@
text
@d95 1
@


1.1
log
@Initial revision
@
text
@d79 2
a80 1
        # CYGNUS LOCAL: I've changed this alot.  Basically we only care about two cases,\n\
d83 11
a93 1
	set parentDir [file dirname [file dirname [info nameofexecutable]]]\n\
d106 1
a106 1
        lappend configDirs [info nameofexecutable]\n\
@


1.1.1.1
log
@import dejagnu-1999-11-08 snapshot
@
text
@@


1.1.1.2
log
@Tcl 8.3 upgrade
@
text
@d6 5
a12 2
 * Copyright (c) 1999 by Scriptics Corporation.
 * All rights reserved.
d14 4
a17 1
 * RCS: @@(#) $Id: tclInitScript.h,v 1.9.6.2 2000/04/17 22:46:19 spolk Exp $
d35 22
a56 2
 *	$tcl_libPath		- this value is initialized by a call to
 *				  TclGetLibraryPath called from Tcl_Init.
d67 3
a69 2
    global tcl_libPath tcl_library errorInfo\n\
    global env tclDefaultLibrary\n\
d79 42
a120 3
	lappend dirs $tclDefaultLibrary\n\
	unset tclDefaultLibrary\n\
        set dirs [concat $dirs $tcl_libPath]\n\
d122 6
d133 1
a133 1
		return\n\
a147 1

@


1.1.1.3
log
@import tcl 8.4.0
@
text
@d11 1
a11 1
 * RCS: @@(#) $Id: tclInitScript.h,v 1.13 2001/09/10 21:06:55 dgp Exp $
d52 2
a53 4
	catch {\n\
	    lappend dirs $tclDefaultLibrary\n\
	    unset tclDefaultLibrary\n\
	}\n\
d65 1
@


