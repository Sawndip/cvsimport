head	1.5;
access;
symbols
	sid-snapshot-20180601:1.5
	sid-snapshot-20180501:1.5
	sid-snapshot-20180401:1.5
	sid-snapshot-20180301:1.5
	sid-snapshot-20180201:1.5
	sid-snapshot-20180101:1.5
	sid-snapshot-20171201:1.5
	sid-snapshot-20171101:1.5
	sid-snapshot-20171001:1.5
	sid-snapshot-20170901:1.5
	sid-snapshot-20170801:1.5
	sid-snapshot-20170701:1.5
	sid-snapshot-20170601:1.5
	sid-snapshot-20170501:1.5
	sid-snapshot-20170401:1.5
	sid-snapshot-20170301:1.5
	sid-snapshot-20170201:1.5
	sid-snapshot-20170101:1.5
	sid-snapshot-20161201:1.5
	sid-snapshot-20161101:1.5
	sid-snapshot-20160901:1.5
	sid-snapshot-20160801:1.5
	sid-snapshot-20160701:1.5
	sid-snapshot-20160601:1.5
	sid-snapshot-20160501:1.5
	sid-snapshot-20160401:1.5
	sid-snapshot-20160301:1.5
	sid-snapshot-20160201:1.5
	sid-snapshot-20160101:1.5
	sid-snapshot-20151201:1.5
	sid-snapshot-20151101:1.5
	sid-snapshot-20151001:1.5
	sid-snapshot-20150901:1.5
	sid-snapshot-20150801:1.5
	sid-snapshot-20150701:1.5
	sid-snapshot-20150601:1.5
	sid-snapshot-20150501:1.5
	sid-snapshot-20150401:1.5
	sid-snapshot-20150301:1.5
	sid-snapshot-20150201:1.5
	sid-snapshot-20150101:1.5
	sid-snapshot-20141201:1.5
	sid-snapshot-20141101:1.5
	sid-snapshot-20141001:1.5
	sid-snapshot-20140901:1.5
	sid-snapshot-20140801:1.5
	sid-snapshot-20140701:1.5
	sid-snapshot-20140601:1.5
	sid-snapshot-20140501:1.5
	sid-snapshot-20140401:1.5
	sid-snapshot-20140301:1.5
	sid-snapshot-20140201:1.5
	sid-snapshot-20140101:1.5
	sid-snapshot-20131201:1.5
	sid-snapshot-20131101:1.5
	sid-snapshot-20131001:1.5
	sid-snapshot-20130901:1.5
	sid-snapshot-20130801:1.5
	sid-snapshot-20130701:1.5
	sid-snapshot-20130601:1.5
	insight_7_6-2013-04-10-branchpoint:1.5
	gdb_7_6-branch:1.5.0.58
	sid-snapshot-20130501:1.5
	sid-snapshot-20130401:1.5
	sid-snapshot-20130301:1.5
	sid-snapshot-20130201:1.5
	sid-snapshot-20130101:1.5
	sid-snapshot-20121201:1.5
	sid-snapshot-20121101:1.5
	sid-snapshot-20121001:1.5
	sid-snapshot-20120901:1.5
	gdb_7_5-branch:1.5.0.56
	sid-snapshot-20120801:1.5
	sid-snapshot-20120701:1.5
	sid-snapshot-20120601:1.5
	sid-snapshot-20120501:1.5
	sid-snapshot-20120401:1.5
	gdb_7_4-branch:1.5.0.54
	sid-snapshot-20120301:1.5
	sid-snapshot-20120201:1.5
	sid-snapshot-20120101:1.5
	sid-snapshot-20111201:1.5
	sid-snapshot-20111101:1.5
	sid-snapshot-20111001:1.5
	sid-snapshot-20110901:1.5
	gdb_7_3-branch:1.5.0.52
	sid-snapshot-20110801:1.5
	sid-snapshot-20110701:1.5
	sid-snapshot-20110601:1.5
	sid-snapshot-20110501:1.5
	sid-snapshot-20110401:1.5
	sid-snapshot-20110301:1.5
	sid-snapshot-20110201:1.5
	sid-snapshot-20110101:1.5
	sid-snapshot-20101201:1.5
	sid-snapshot-20101101:1.5
	sid-snapshot-20101001:1.5
	sid-snapshot-20100901:1.5
	sid-snapshot-20100801:1.5
	sid-snapshot-20100701:1.5
	sid-snapshot-20100601:1.5
	sid-snapshot-20100501:1.5
	sid-snapshot-20100401:1.5
	sid-snapshot-20100301:1.5
	gdb_7_1-branch:1.5.0.50
	gdb_7_0-branch:1.5.0.48
	sid-snapshot-20100201:1.5
	sid-snapshot-20100101:1.5
	sid-snapshot-20091201:1.5
	sid-snapshot-20091101:1.5
	sid-snapshot-20091001:1.5
	arc-sim-20090309:1.5
	sid-snapshot-20090901:1.5
	sid-snapshot-20090801:1.5
	sid-snapshot-20090701:1.5
	sid-snapshot-20090601:1.5
	sid-snapshot-20090501:1.5
	kevinb-pre-tcl8_5_7_merge:1.5
	sid-snapshot-20090401:1.5
	arc-insight_6_8-branch:1.5.0.46
	arc-insight_6_8-branchpoint:1.5
	insight_6_8-branch:1.5.0.44
	insight_6_8-branchpoint:1.5
	sid-snapshot-20090301:1.5
	sid-snapshot-20090201:1.5
	sid-snapshot-20090101:1.5
	sid-snapshot-20081201:1.5
	sid-snapshot-20081101:1.5
	sid-snapshot-20081001:1.5
	sid-snapshot-20080901:1.5
	sid-snapshot-20080801:1.5
	sid-snapshot-20080701:1.5
	sid-snapshot-20080601:1.5
	sid-snapshot-20080501:1.5
	sid-snapshot-20080403:1.5
	sid-snapshot-20080401:1.5
	gdb_6_8-branch:1.5.0.42
	sid-snapshot-20080301:1.5
	sid-snapshot-20080201:1.5
	sid-snapshot-20080101:1.5
	sid-snapshot-20071201:1.5
	sid-snapshot-20071101:1.5
	sid-snapshot-20071001:1.5
	insight_6_6-20070208-release:1.5
	gdb_6_6-branch:1.5.0.40
	gdb_6_6-2006-11-15-branchpoint:1.5
	insight_6_5-20061003-release:1.5
	gdb_6_5-branch:1.5.0.38
	gdb_6_5-2006-05-14-branchpoint:1.5
	readline_5_1-import-branch:1.5.0.36
	readline_5_1-import-branchpoint:1.5
	gdb_6_4-branch:1.5.0.34
	gdb_6_4-2005-11-01-branchpoint:1.5
	msnyder-tracepoint-checkpoint-branch:1.5.0.32
	msnyder-tracepoint-checkpoint-branchpoint:1.5
	gdb_6_1-2004-04-05-release:1.5
	ezannoni_pie-20040323-branch:1.5.0.30
	ezannoni_pie-20040323-branchpoint:1.5
	cagney_tramp-20040321-mergepoint:1.5
	cagney_tramp-20040309-branch:1.5.0.28
	cagney_tramp-20040309-branchpoint:1.5
	gdb_6_1-branch:1.5.0.26
	gdb_6_1-2004-03-01-gmt-branchpoint:1.5
	drow-cplus-merge-20040208:1.5
	carlton_dictionary-20040126-merge:1.5
	drow-cplus-merge-20040113:1.5
	drow-cplus-merge-20031224:1.5
	drow-cplus-merge-20031220:1.5
	carlton_dictionary-20031215-merge:1.5
	drow-cplus-merge-20031214:1.5
	carlton-dictionary-20031111-merge:1.5
	gdb_6_0-2003-10-04-release:1.5
	carlton_dictionary-20030917-merge:1.5
	ezannoni_pie-20030916-branchpoint:1.5
	ezannoni_pie-20030916-branch:1.5.0.24
	cagney_x86i386-20030821-branch:1.5.0.22
	cagney_x86i386-20030821-branchpoint:1.5
	carlton_dictionary-20030805-merge:1.5
	carlton_dictionary-20030627-merge:1.5
	gdb_6_0-branch:1.5.0.20
	gdb_6_0-2003-06-23-branchpoint:1.5
	cagney_convert-20030606-branch:1.5.0.18
	cagney_convert-20030606-branchpoint:1.5
	cagney_writestrings-20030508-branch:1.5.0.16
	cagney_writestrings-20030508-branchpoint:1.5
	carlton_dictionary-20030523-merge:1.5
	cagney_fileio-20030521-branch:1.5.0.14
	cagney_fileio-20030521-branchpoint:1.5
	carlton_dictionary-20030430-merge:1.5
	carlton_dictionary-20030416-merge:1.5
	cagney_frameaddr-20030409-mergepoint:1.5
	cagney_frameaddr-20030403-branchpoint:1.5
	cagney_frameaddr-20030403-branch:1.5.0.12
	cagney_framebase-20030330-mergepoint:1.5
	cagney_framebase-20030326-branch:1.5.0.10
	cagney_framebase-20030326-branchpoint:1.5
	cagney_lazyid-20030317-branch:1.5.0.8
	cagney_lazyid-20030317-branchpoint:1.5
	offbyone-20030313-branch:1.5.0.6
	offbyone-20030313-branchpoint:1.5
	carlton_dictionary-20030305-merge:1.5
	cagney_offbyone-20030303-branch:1.5.0.4
	cagney_offbyone-20030303-branchpoint:1.5
	carlton_dictionary-20030207-merge:1.5
	interps-20030202-branch:1.5.0.2
	interps-20030202-branchpoint:1.5
	TCL8_4_1:1.1.1.4
	cagney-unwind-20030108-branch:1.4.0.2
	cagney-unwind-20030108-branchpoint:1.4
	carlton_dictionary-20021223-merge:1.4
	gdb_5_3-2002-12-12-release:1.2
	TCL_8_4_1:1.1.1.4
	carlton_dictionary-20021115-merge:1.3
	kseitz_interps-20021105-merge:1.3
	kseitz_interps-20021103-merge:1.3
	drow-cplus-merge-20021020:1.3
	drow-cplus-merge-20021025:1.3
	carlton_dictionary-20021025-merge:1.3
	carlton_dictionary-20021011-merge:1.3
	drow-cplus-branch:1.3.0.4
	drow-cplus-branchpoint:1.3
	kseitz_interps-20020930-merge:1.3
	carlton_dictionary-20020927-merge:1.3
	tcltk840-20020924-branch:1.3.0.2
	tcltk840-20020924-branchpoint:1.3
	TCL_8_4_0:1.1.1.3
	carlton_dictionary-branch:1.2.0.16
	carlton_dictionary-20020920-branchpoint:1.2
	sid-20020905-branchpoint:1.2
	sid-20020905-branch:1.2.0.14
	gdb_5_3-branch:1.2.0.12
	gdb_5_3-2002-09-04-branchpoint:1.2
	kseitz_interps-20020829-merge:1.2
	cagney_sysregs-20020825-branch:1.2.0.10
	cagney_sysregs-20020825-branchpoint:1.2
	readline_4_3-import-branch:1.2.0.8
	readline_4_3-import-branchpoint:1.2
	gdb_5_2_1-2002-07-23-release:1.2
	kseitz_interps-20020528-branch:1.2.0.6
	kseitz_interps-20020528-branchpoint:1.2
	cagney_regbuf-20020515-branch:1.2.0.4
	cagney_regbuf-20020515-branchpoint:1.2
	gdb_5_2-2002-04-29-release:1.2
	gdb_5_2-branch:1.2.0.2
	gdb_5_2-2002-03-03-branchpoint:1.2
	gdb_5_1_1-2002-01-24-release:1.1.1.1
	cygnus_cvs_20020108_pre:1.2
	gdb_5_1_0_1-2002-01-03-branch:1.1.1.1.0.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.1.1.1
	gdb_5_1-2001-11-21-release:1.1.1.1
	gdb_s390-2001-09-26-branch:1.1.1.1.0.6
	gdb_s390-2001-09-26-branchpoint:1.1.1.1
	TCL_8_3:1.1.1.2
	NET:1.1.1
	gdb_5_1-2001-07-29-branch:1.1.1.1.0.4
	gdb_5_1-2001-07-29-branchpoint:1.1.1.1
	insight-precleanup-2001-01-01:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	dejagnu-2000-02-04:1.1.1.1
	dejagnu-2000-01-31:1.1.1.1
	dejagnu-2000-01-24:1.1.1.1
	dejagnu-2000-01-17:1.1.1.1
	dejagnu-2000-01-10:1.1.1.1
	dejagnu-2000-01-04:1.1.1.1
	dejagnu-1999-12-21:1.1.1.1
	dejagnu-1999-12-13:1.1.1.1
	dejagnu-1999-12-07:1.1.1.1
	dejagnu-1999-12-06:1.1.1.1
	dejagnu-1999-11-15:1.1.1.1
	dejagnu-1999-11-08:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.5
date	2003.01.21.19.40.15;	author hunt;	state Exp;
branches;
next	1.4;

1.4
date	2002.11.26.19.48.01;	author hunt;	state Exp;
branches;
next	1.3;

1.3
date	2002.09.24.18.37.07;	author kseitz;	state Exp;
branches
	1.3.2.1
	1.3.4.1;
next	1.2;

1.2
date	2001.09.09.23.56.08;	author irox;	state Exp;
branches
	1.2.16.1;
next	1.1;

1.1
date	99.11.09.01.28.44;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.3.2.1
date	2002.09.27.21.49.10;	author kseitz;	state Exp;
branches;
next	;

1.3.4.1
date	2003.12.14.20.28.49;	author drow;	state Exp;
branches;
next	;

1.2.16.1
date	2002.12.23.19.40.40;	author carlton;	state Exp;
branches;
next	1.2.16.2;

1.2.16.2
date	2003.02.07.19.18.18;	author carlton;	state Exp;
branches;
next	;

1.1.1.1
date	99.11.09.01.28.44;	author jsm;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2001.09.09.22.40.58;	author irox;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.09.24.19.56.36;	author kseitz;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2002.11.26.20.01.07;	author hunt;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Updated to tcl 8.4.1
@
text
@# Commands covered:  http_config, http_get, http_wait, http_reset
#
# This file contains a collection of tests for the http script library.
# Sourcing this file into Tcl runs the tests and
# generates output for errors.  No output means no errors were found.
#
# Copyright (c) 1991-1993 The Regents of the University of California.
# Copyright (c) 1994-1996 Sun Microsystems, Inc.
# Copyright (c) 1998-1999 by Scriptics Corporation.
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
# RCS: @@(#) $Id: httpold.test,v 1.11 2002/10/03 13:34:32 dkf Exp $

if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest
    namespace import -force ::tcltest::*
}

if {[catch {package require http 1.0}]} {
    if {[info exists httpold]} {
	catch {puts "Cannot load http 1.0 package"}
	::tcltest::cleanupTests
	return
    } else {
	catch {puts "Running http 1.0 tests in slave interp"}
	set interp [interp create httpold]
	$interp eval [list set httpold "running"]
	$interp eval [list set argv $argv]
	$interp eval [list source [info script]]
	interp delete $interp
	::tcltest::cleanupTests
	return
    }
}

set bindata "This is binary data\x0d\x0amore\x0dmore\x0amore\x00null"
catch {unset data}

## 
## The httpd script implement a stub http server
##
source [file join [file dirname [info script]] httpd]

set port 8010
if [catch {httpd_init $port} listen] {
    puts "Cannot start http server, http test skipped"
    unset port
    ::tcltest::cleanupTests
    return
}

test httpold-1.1 {http_config} {
    http_config
} {-accept */* -proxyfilter httpProxyRequired -proxyhost {} -proxyport {} -useragent {Tcl http client package 1.0}}

test httpold-1.2 {http_config} {
    http_config -proxyfilter
} httpProxyRequired

test httpold-1.3 {http_config} {
    catch {http_config -junk}
} 1

test httpold-1.4 {http_config} {
    http_config -proxyhost nowhere.come -proxyport 8080 -proxyfilter myFilter -useragent "Tcl Test Suite"
    set x [http_config]
    http_config -proxyhost {} -proxyport {} -proxyfilter httpProxyRequired \
	-useragent "Tcl http client package 1.0"
    set x
} {-accept */* -proxyfilter myFilter -proxyhost nowhere.come -proxyport 8080 -useragent {Tcl Test Suite}}

test httpold-1.5 {http_config} {
    catch {http_config -proxyhost {} -junk 8080}
} 1

test httpold-2.1 {http_reset} {
    catch {http_reset http#1}
} 0

test httpold-3.1 {http_get} {
    catch {http_get -bogus flag}
} 1
test httpold-3.2 {http_get} {
    catch {http_get http:junk} err
    set err
} {Unsupported URL: http:junk}

set url [info hostname]:$port
test httpold-3.3 {http_get} {
    set token [http_get $url]
    http_data $token
} "<html><head><title>HTTP/1.0 TEST</title></head><body>
<h1>Hello, World!</h1>
<h2>GET /</h2>
</body></html>"

set tail /a/b/c
set url [info hostname]:$port/a/b/c
set binurl [info hostname]:$port/binary

test httpold-3.4 {http_get} {
    set token [http_get $url]
    http_data $token
} "<html><head><title>HTTP/1.0 TEST</title></head><body>
<h1>Hello, World!</h1>
<h2>GET $tail</h2>
</body></html>"

proc selfproxy {host} {
    global port
    return [list [info hostname] $port]
}
test httpold-3.5 {http_get} {
    http_config -proxyfilter selfproxy
    set token [http_get $url]
    http_config -proxyfilter httpProxyRequired
    http_data $token
} "<html><head><title>HTTP/1.0 TEST</title></head><body>
<h1>Hello, World!</h1>
<h2>GET http://$url</h2>
</body></html>"

test httpold-3.6 {http_get} {
    http_config -proxyfilter bogus
    set token [http_get $url]
    http_config -proxyfilter httpProxyRequired
    http_data $token
} "<html><head><title>HTTP/1.0 TEST</title></head><body>
<h1>Hello, World!</h1>
<h2>GET $tail</h2>
</body></html>"

test httpold-3.7 {http_get} {
    set token [http_get $url -headers {Pragma no-cache}]
    http_data $token
} "<html><head><title>HTTP/1.0 TEST</title></head><body>
<h1>Hello, World!</h1>
<h2>GET $tail</h2>
</body></html>"

test httpold-3.8 {http_get} {
    set token [http_get $url -query Name=Value&Foo=Bar]
    http_data $token
} "<html><head><title>HTTP/1.0 TEST</title></head><body>
<h1>Hello, World!</h1>
<h2>POST $tail</h2>
<h2>Query</h2>
<dl>
<dt>Name<dd>Value
<dt>Foo<dd>Bar
</dl>
</body></html>"

test httpold-3.9 {http_get} {
    set token [http_get $url -validate 1]
    http_code $token
} "HTTP/1.0 200 OK"


test httpold-4.1 {httpEvent} {
    set token [http_get $url]
    upvar #0 $token data
    array set meta $data(meta)
    expr ($data(totalsize) == $meta(Content-Length))
} 1

test httpold-4.2 {httpEvent} {
    set token [http_get $url]
    upvar #0 $token data
    array set meta $data(meta)
    string compare $data(type) [string trim $meta(Content-Type)]
} 0

test httpold-4.3 {httpEvent} {
    set token [http_get $url]
    http_code $token
} {HTTP/1.0 200 Data follows}

test httpold-4.4 {httpEvent} {
    set testfile [makeFile "" testfile]
    set out [open $testfile w]
    set token [http_get $url -channel $out]
    close $out
    set in [open $testfile]
    set x [read $in]
    close $in
    removeFile $testfile
    set x
} "<html><head><title>HTTP/1.0 TEST</title></head><body>
<h1>Hello, World!</h1>
<h2>GET $tail</h2>
</body></html>"

test httpold-4.5 {httpEvent} {
    set testfile [makeFile "" testfile]
    set out [open $testfile w]
    set token [http_get $url -channel $out]
    close $out
    upvar #0 $token data
    removeFile $testfile
    expr $data(currentsize) == $data(totalsize)
} 1

test httpold-4.6 {httpEvent} {
    set testfile [makeFile "" testfile]
    set out [open $testfile w]
    set token [http_get $binurl -channel $out]
    close $out
    set in [open $testfile]
    fconfigure $in -translation binary
    set x [read $in]
    close $in
    removeFile $testfile
    set x
} "$bindata$binurl"

proc myProgress {token total current} {
    global progress httpLog
    if {[info exists httpLog] && $httpLog} {
	puts "progress $total $current"
    }
    set progress [list $total $current]
}
if 0 {
    # This test hangs on Windows95 because the client never gets EOF
    set httpLog 1
    test httpold-4.6 {httpEvent} {
	set token [http_get $url -blocksize 50 -progress myProgress]
	set progress
    } {111 111}
}
test httpold-4.7 {httpEvent} {
    set token [http_get $url -progress myProgress]
    set progress
} {111 111}
test httpold-4.8 {httpEvent} {
    set token [http_get $url]
    http_status $token
} {ok}
test httpold-4.9 {httpEvent} {
    set token [http_get $url -progress myProgress]
    http_code $token
} {HTTP/1.0 200 Data follows}
test httpold-4.10 {httpEvent} {
    set token [http_get $url -progress myProgress]
    http_size $token
} {111}
test httpold-4.11 {httpEvent} {
    set token [http_get $url -timeout 1 -command {#}]
    http_reset $token
    http_status $token
} {reset}
test httpold-4.12 {httpEvent} {
    update
    set x {}
    after 500 {lappend x ok}
    set token [http_get $url -timeout 1 -command {lappend x fail}]
    vwait x
    list [http_status $token] $x
} {timeout ok}

test httpold-5.1 {http_formatQuery} {
    http_formatQuery name1 value1 name2 "value two"
} {name1=value1&name2=value+two}

test httpold-5.2 {http_formatQuery} {
    http_formatQuery name1 ~bwelch name2 \xa1\xa2\xa2
} {name1=%7ebwelch&name2=%a1%a2%a2}

test httpold-5.3 {http_formatQuery} {
    http_formatQuery lines "line1\nline2\nline3"
} {lines=line1%0d%0aline2%0d%0aline3}

test httpold-6.1 {httpProxyRequired} {
    update
    http_config -proxyhost [info hostname] -proxyport $port
    set token [http_get $url]
    http_wait $token
    http_config -proxyhost {} -proxyport {}
    upvar #0 $token data
    set data(body)
} "<html><head><title>HTTP/1.0 TEST</title></head><body>
<h1>Hello, World!</h1>
<h2>GET http://$url</h2>
</body></html>"

# cleanup
catch {unset url}
catch {unset port}
catch {unset data}
close $listen
::tcltest::cleanupTests
return












@


1.4
log
@touched all sources to ease next import
@
text
@d14 1
a14 1
# RCS: @@(#) $Id: httpold.test,v 1.6.8.2 2000/09/15 16:56:35 spolk Exp $
d22 1
a22 1
    if {[info exist httpold]} {
d30 1
d54 1
a54 1
test http-1.1 {http_config} {
d58 1
a58 1
test http-1.2 {http_config} {
d62 1
a62 1
test http-1.3 {http_config} {
d66 1
a66 1
test http-1.4 {http_config} {
d74 1
a74 1
test http-1.5 {http_config} {
d78 1
a78 1
test http-2.1 {http_reset} {
d82 1
a82 1
test http-3.1 {http_get} {
d85 1
a85 1
test http-3.2 {http_get} {
d91 1
a91 1
test http-3.3 {http_get} {
d103 1
a103 1
test http-3.4 {http_get} {
d115 1
a115 1
test http-3.5 {http_get} {
d125 1
a125 1
test http-3.6 {http_get} {
d135 1
a135 1
test http-3.7 {http_get} {
d143 1
a143 1
test http-3.8 {http_get} {
d156 1
a156 1
test http-3.9 {http_get} {
d162 1
a162 1
test http-4.1 {httpEvent} {
d169 1
a169 1
test http-4.2 {httpEvent} {
d176 1
a176 1
test http-4.3 {httpEvent} {
d181 3
a183 2
test http-4.4 {httpEvent} {
    set out [open testfile w]
d186 1
a186 1
    set in [open testfile]
d189 1
a189 1
    file delete testfile
d196 3
a198 2
test http-4.5 {httpEvent} {
    set out [open testfile w]
d202 1
a202 1
    file delete testfile
d206 3
a208 2
test http-4.6 {httpEvent} {
    set out [open testfile w]
d211 1
a211 1
    set in [open testfile]
d215 1
a215 1
    file delete testfile
d229 1
a229 1
    test http-4.6 {httpEvent} {
d234 1
a234 1
test http-4.7 {httpEvent} {
d238 1
a238 1
test http-4.8 {httpEvent} {
d242 1
a242 1
test http-4.9 {httpEvent} {
d246 1
a246 1
test http-4.10 {httpEvent} {
d250 1
a250 1
test http-4.11 {httpEvent} {
d255 1
a255 1
test http-4.12 {httpEvent} {
d264 1
a264 1
test http-5.1 {http_formatQuery} {
d268 1
a268 1
test http-5.2 {http_formatQuery} {
d272 1
a272 1
test http-5.3 {http_formatQuery} {
d276 1
a276 1
test http-6.1 {httpProxyRequired} {
a295 1

@


1.3
log
@touched all sources to ease next import
@
text
@@


1.3.4.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@d14 1
a14 1
# RCS: @@(#) $Id: httpold.test,v 1.11 2002/10/03 13:34:32 dkf Exp $
d22 1
a22 1
    if {[info exists httpold]} {
a29 1
	$interp eval [list set argv $argv]
d53 1
a53 1
test httpold-1.1 {http_config} {
d57 1
a57 1
test httpold-1.2 {http_config} {
d61 1
a61 1
test httpold-1.3 {http_config} {
d65 1
a65 1
test httpold-1.4 {http_config} {
d73 1
a73 1
test httpold-1.5 {http_config} {
d77 1
a77 1
test httpold-2.1 {http_reset} {
d81 1
a81 1
test httpold-3.1 {http_get} {
d84 1
a84 1
test httpold-3.2 {http_get} {
d90 1
a90 1
test httpold-3.3 {http_get} {
d102 1
a102 1
test httpold-3.4 {http_get} {
d114 1
a114 1
test httpold-3.5 {http_get} {
d124 1
a124 1
test httpold-3.6 {http_get} {
d134 1
a134 1
test httpold-3.7 {http_get} {
d142 1
a142 1
test httpold-3.8 {http_get} {
d155 1
a155 1
test httpold-3.9 {http_get} {
d161 1
a161 1
test httpold-4.1 {httpEvent} {
d168 1
a168 1
test httpold-4.2 {httpEvent} {
d175 1
a175 1
test httpold-4.3 {httpEvent} {
d180 2
a181 3
test httpold-4.4 {httpEvent} {
    set testfile [makeFile "" testfile]
    set out [open $testfile w]
d184 1
a184 1
    set in [open $testfile]
d187 1
a187 1
    removeFile $testfile
d194 2
a195 3
test httpold-4.5 {httpEvent} {
    set testfile [makeFile "" testfile]
    set out [open $testfile w]
d199 1
a199 1
    removeFile $testfile
d203 2
a204 3
test httpold-4.6 {httpEvent} {
    set testfile [makeFile "" testfile]
    set out [open $testfile w]
d207 1
a207 1
    set in [open $testfile]
d211 1
a211 1
    removeFile $testfile
d225 1
a225 1
    test httpold-4.6 {httpEvent} {
d230 1
a230 1
test httpold-4.7 {httpEvent} {
d234 1
a234 1
test httpold-4.8 {httpEvent} {
d238 1
a238 1
test httpold-4.9 {httpEvent} {
d242 1
a242 1
test httpold-4.10 {httpEvent} {
d246 1
a246 1
test httpold-4.11 {httpEvent} {
d251 1
a251 1
test httpold-4.12 {httpEvent} {
d260 1
a260 1
test httpold-5.1 {http_formatQuery} {
d264 1
a264 1
test httpold-5.2 {http_formatQuery} {
d268 1
a268 1
test httpold-5.3 {http_formatQuery} {
d272 1
a272 1
test httpold-6.1 {httpProxyRequired} {
d292 1
@


1.3.2.1
log
@Import Tcl 8.4.0 into mainline-like sources. Simplest Tcl build possible for
cygwin.
@
text
@d14 1
a14 1
# RCS: @@(#) $Id: httpold.test,v 1.10 2002/07/05 10:38:42 dkf Exp $
a29 1
	$interp eval [list set argv $argv]
d53 1
a53 1
test httpold-1.1 {http_config} {
d57 1
a57 1
test httpold-1.2 {http_config} {
d61 1
a61 1
test httpold-1.3 {http_config} {
d65 1
a65 1
test httpold-1.4 {http_config} {
d73 1
a73 1
test httpold-1.5 {http_config} {
d77 1
a77 1
test httpold-2.1 {http_reset} {
d81 1
a81 1
test httpold-3.1 {http_get} {
d84 1
a84 1
test httpold-3.2 {http_get} {
d90 1
a90 1
test httpold-3.3 {http_get} {
d102 1
a102 1
test httpold-3.4 {http_get} {
d114 1
a114 1
test httpold-3.5 {http_get} {
d124 1
a124 1
test httpold-3.6 {http_get} {
d134 1
a134 1
test httpold-3.7 {http_get} {
d142 1
a142 1
test httpold-3.8 {http_get} {
d155 1
a155 1
test httpold-3.9 {http_get} {
d161 1
a161 1
test httpold-4.1 {httpEvent} {
d168 1
a168 1
test httpold-4.2 {httpEvent} {
d175 1
a175 1
test httpold-4.3 {httpEvent} {
d180 2
a181 3
test httpold-4.4 {httpEvent} {
    set testfile [makeFile "" testfile]
    set out [open $testfile w]
d184 1
a184 1
    set in [open $testfile]
d187 1
a187 1
    removeFile $testfile
d194 2
a195 3
test httpold-4.5 {httpEvent} {
    set testfile [makeFile "" testfile]
    set out [open $testfile w]
d199 1
a199 1
    removeFile $testfile
d203 2
a204 3
test httpold-4.6 {httpEvent} {
    set testfile [makeFile "" testfile]
    set out [open $testfile w]
d207 1
a207 1
    set in [open $testfile]
d211 1
a211 1
    removeFile $testfile
d225 1
a225 1
    test httpold-4.6 {httpEvent} {
d230 1
a230 1
test httpold-4.7 {httpEvent} {
d234 1
a234 1
test httpold-4.8 {httpEvent} {
d238 1
a238 1
test httpold-4.9 {httpEvent} {
d242 1
a242 1
test httpold-4.10 {httpEvent} {
d246 1
a246 1
test httpold-4.11 {httpEvent} {
d251 1
a251 1
test httpold-4.12 {httpEvent} {
d260 1
a260 1
test httpold-5.1 {http_formatQuery} {
d264 1
a264 1
test httpold-5.2 {http_formatQuery} {
d268 1
a268 1
test httpold-5.3 {http_formatQuery} {
d272 1
a272 1
test httpold-6.1 {httpProxyRequired} {
d292 1
@


1.2
log
@touched all Tcl files to ease next import.
@
text
@@


1.2.16.1
log
@2002-12-23  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021223-merge.
@
text
@@


1.2.16.2
log
@2003-02-07  David Carlton  <carlton@@math.stanford.edu>

	* Merge with mainline; tag is carlton_dictionary-20030207-merge.
@
text
@d22 1
a22 1
    if {[info exists httpold]} {
a29 1
	$interp eval [list set argv $argv]
d53 1
a53 1
test httpold-1.1 {http_config} {
d57 1
a57 1
test httpold-1.2 {http_config} {
d61 1
a61 1
test httpold-1.3 {http_config} {
d65 1
a65 1
test httpold-1.4 {http_config} {
d73 1
a73 1
test httpold-1.5 {http_config} {
d77 1
a77 1
test httpold-2.1 {http_reset} {
d81 1
a81 1
test httpold-3.1 {http_get} {
d84 1
a84 1
test httpold-3.2 {http_get} {
d90 1
a90 1
test httpold-3.3 {http_get} {
d102 1
a102 1
test httpold-3.4 {http_get} {
d114 1
a114 1
test httpold-3.5 {http_get} {
d124 1
a124 1
test httpold-3.6 {http_get} {
d134 1
a134 1
test httpold-3.7 {http_get} {
d142 1
a142 1
test httpold-3.8 {http_get} {
d155 1
a155 1
test httpold-3.9 {http_get} {
d161 1
a161 1
test httpold-4.1 {httpEvent} {
d168 1
a168 1
test httpold-4.2 {httpEvent} {
d175 1
a175 1
test httpold-4.3 {httpEvent} {
d180 2
a181 3
test httpold-4.4 {httpEvent} {
    set testfile [makeFile "" testfile]
    set out [open $testfile w]
d184 1
a184 1
    set in [open $testfile]
d187 1
a187 1
    removeFile $testfile
d194 2
a195 3
test httpold-4.5 {httpEvent} {
    set testfile [makeFile "" testfile]
    set out [open $testfile w]
d199 1
a199 1
    removeFile $testfile
d203 2
a204 3
test httpold-4.6 {httpEvent} {
    set testfile [makeFile "" testfile]
    set out [open $testfile w]
d207 1
a207 1
    set in [open $testfile]
d211 1
a211 1
    removeFile $testfile
d225 1
a225 1
    test httpold-4.6 {httpEvent} {
d230 1
a230 1
test httpold-4.7 {httpEvent} {
d234 1
a234 1
test httpold-4.8 {httpEvent} {
d238 1
a238 1
test httpold-4.9 {httpEvent} {
d242 1
a242 1
test httpold-4.10 {httpEvent} {
d246 1
a246 1
test httpold-4.11 {httpEvent} {
d251 1
a251 1
test httpold-4.12 {httpEvent} {
d260 1
a260 1
test httpold-5.1 {http_formatQuery} {
d264 1
a264 1
test httpold-5.2 {http_formatQuery} {
d268 1
a268 1
test httpold-5.3 {http_formatQuery} {
d272 1
a272 1
test httpold-6.1 {httpProxyRequired} {
d292 1
@


1.1
log
@Initial revision
@
text
@d9 1
d14 1
a14 3
# RCS: @@(#) $Id: httpold.test,v 1.2 1998/09/14 18:40:09 stanton Exp $

if {[string compare test [info procs test]] == 1} then {source defs}
d16 4
d23 2
a24 1
	catch {puts stderr "Cannot load http 1.0 package"}
d27 1
a27 1
	catch {puts stderr "Running http 1.0 tests in slave interp"}
d32 1
a36 97
############### The httpd_ procedures implement a stub http server. ########
proc httpd_init {{port 8015}} {
    socket -server httpdAccept $port
}
proc httpd_log {args} {
    global httpLog
    if {[info exists httpLog] && $httpLog} {
	puts stderr "httpd: [join $args { }]"
    }
}
array set httpdErrors {
    204 {No Content}
    400 {Bad Request}
    404 {Not Found}
    503 {Service Unavailable}
    504 {Service Temporarily Unavailable}
    }

proc httpdError {sock code args} {
    global httpdErrors
    puts $sock "$code $httpdErrors($code)"
    httpd_log "error: [join $args { }]"
}
proc httpdAccept {newsock ipaddr port} {
    global httpd
    upvar #0 httpd$newsock data

    fconfigure $newsock -blocking 0 -translation {auto crlf}
    httpd_log $newsock Connect $ipaddr $port
    set data(ipaddr) $ipaddr
    fileevent $newsock readable [list httpdRead $newsock]
}

# read data from a client request

proc httpdRead { sock } {
    upvar #0 httpd$sock data

    set readCount [gets $sock line]
    if {![info exists data(state)]} {
	if [regexp {(POST|GET|HEAD) ([^?]+)\??([^ ]*) HTTP/1.0} \
		$line x data(proto) data(url) data(query)] {
	    set data(state) mime
	    httpd_log $sock Query $line
	} else {
	    httpdError $sock 400
	    httpd_log $sock Error "bad first line:$line"
	    httpdSockDone $sock
	}
	return
    }

    # string compare $readCount 0 maps -1 to -1, 0 to 0, and > 0 to 1

    set state [string compare $readCount 0],$data(state),$data(proto)
    httpd_log $sock $state
    switch -- $state {
	-1,mime,HEAD	-
	-1,mime,GET	-
	-1,mime,POST	{
	    # gets would block
	    return
	}
	0,mime,HEAD	-
	0,mime,GET	-
	0,query,POST	{ httpdRespond $sock }
	0,mime,POST	{ set data(state) query }
	1,mime,HEAD	-
	1,mime,POST	-
	1,mime,GET	{
	    if [regexp {([^:]+):[ 	]*(.*)}  $line dummy key value] {
		set data(mime,[string tolower $key]) $value
	    }
	}
	1,query,POST	{
	    append data(query) $line
	    httpdRespond $sock
	}
	default {
	    if [eof $sock] {
		httpd_log $sock Error "unexpected eof on <$data(url)> request"
	    } else {
		httpd_log $sock Error "unhandled state <$state> fetching <$data(url)>"
	    }
	    httpdError $sock 404
	    httpdSockDone $sock
	}
    }
}
proc httpdSockDone { sock } {
upvar #0 httpd$sock data
    unset data
    catch {close $sock}
}

# Respond to the query.

d38 1
a38 9
proc httpdRespond { sock } {
    global httpd bindata port
    upvar #0 httpd$sock data

    if {[string match *binary* $data(url)]} {
	set html "$bindata[info hostname]:$port$data(url)"
	set type application/octet-stream
    } else {
	set type text/html
d40 4
a43 31
	set html "<html><head><title>HTTP/1.0 TEST</title></head><body>
<h1>Hello, World!</h1>
<h2>$data(proto) $data(url)</h2>
"
	if {[info exists data(query)] && [string length $data(query)]} {
	    append html "<h2>Query</h2>\n<dl>\n"
	    foreach {key value} [split $data(query) &=] {
		append html "<dt>$key<dd>$value\n"
	    }
	    append html </dl>\n
	}
	append html </body></html>
    }

    if {$data(proto) == "HEAD"} {
	puts $sock "HTTP/1.0 200 OK"
    } else {
	puts $sock "HTTP/1.0 200 Data follows"
    }
    puts $sock "Date: [clock format [clock clicks]]"
    puts $sock "Content-Type: $type"
    puts $sock "Content-Length: [string length $html]"
    puts $sock ""
    if {$data(proto) != "HEAD"} {
	fconfigure $sock -translation binary
	puts -nonewline $sock $html
    }
    httpd_log $sock Done ""
    httpdSockDone $sock
}
##################### end server ###########################
d47 1
a47 1
    puts stderr "Cannot start http server, http test skipped"
d49 1
d253 6
a258 4
    set token [http_get $url -timeout 1 -command {#}]
    update
    http_status $token
} {timeout}
d285 4
a288 2
unset url
unset port
d290 15
@


1.1.1.1
log
@import dejagnu-1999-11-08 snapshot
@
text
@@


1.1.1.2
log
@Tcl 8.3 upgrade
@
text
@a8 1
# Copyright (c) 1998-1999 by Scriptics Corporation.
d13 3
a15 1
# RCS: @@(#) $Id: httpold.test,v 1.6.8.2 2000/09/15 16:56:35 spolk Exp $
a16 4
if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest
    namespace import -force ::tcltest::*
}
d20 1
a20 2
	catch {puts "Cannot load http 1.0 package"}
	::tcltest::cleanupTests
d23 1
a23 1
	catch {puts "Running http 1.0 tests in slave interp"}
a27 1
	::tcltest::cleanupTests
d32 97
d130 9
a138 1
catch {unset data}
d140 31
a170 4
## 
## The httpd script implement a stub http server
##
source [file join [file dirname [info script]] httpd]
d174 1
a174 1
    puts "Cannot start http server, http test skipped"
a175 1
    ::tcltest::cleanupTests
d379 4
a382 6
    set x {}
    after 500 {lappend x ok}
    set token [http_get $url -timeout 1 -command {lappend x fail}]
    vwait x
    list [http_status $token] $x
} {timeout ok}
d409 2
a410 4
# cleanup
catch {unset url}
catch {unset port}
catch {unset data}
a411 15
::tcltest::cleanupTests
return













@


1.1.1.3
log
@import tcl 8.4.0
@
text
@d14 1
a14 1
# RCS: @@(#) $Id: httpold.test,v 1.10 2002/07/05 10:38:42 dkf Exp $
a29 1
	$interp eval [list set argv $argv]
d53 1
a53 1
test httpold-1.1 {http_config} {
d57 1
a57 1
test httpold-1.2 {http_config} {
d61 1
a61 1
test httpold-1.3 {http_config} {
d65 1
a65 1
test httpold-1.4 {http_config} {
d73 1
a73 1
test httpold-1.5 {http_config} {
d77 1
a77 1
test httpold-2.1 {http_reset} {
d81 1
a81 1
test httpold-3.1 {http_get} {
d84 1
a84 1
test httpold-3.2 {http_get} {
d90 1
a90 1
test httpold-3.3 {http_get} {
d102 1
a102 1
test httpold-3.4 {http_get} {
d114 1
a114 1
test httpold-3.5 {http_get} {
d124 1
a124 1
test httpold-3.6 {http_get} {
d134 1
a134 1
test httpold-3.7 {http_get} {
d142 1
a142 1
test httpold-3.8 {http_get} {
d155 1
a155 1
test httpold-3.9 {http_get} {
d161 1
a161 1
test httpold-4.1 {httpEvent} {
d168 1
a168 1
test httpold-4.2 {httpEvent} {
d175 1
a175 1
test httpold-4.3 {httpEvent} {
d180 2
a181 3
test httpold-4.4 {httpEvent} {
    set testfile [makeFile "" testfile]
    set out [open $testfile w]
d184 1
a184 1
    set in [open $testfile]
d187 1
a187 1
    removeFile $testfile
d194 2
a195 3
test httpold-4.5 {httpEvent} {
    set testfile [makeFile "" testfile]
    set out [open $testfile w]
d199 1
a199 1
    removeFile $testfile
d203 2
a204 3
test httpold-4.6 {httpEvent} {
    set testfile [makeFile "" testfile]
    set out [open $testfile w]
d207 1
a207 1
    set in [open $testfile]
d211 1
a211 1
    removeFile $testfile
d225 1
a225 1
    test httpold-4.6 {httpEvent} {
d230 1
a230 1
test httpold-4.7 {httpEvent} {
d234 1
a234 1
test httpold-4.8 {httpEvent} {
d238 1
a238 1
test httpold-4.9 {httpEvent} {
d242 1
a242 1
test httpold-4.10 {httpEvent} {
d246 1
a246 1
test httpold-4.11 {httpEvent} {
d251 1
a251 1
test httpold-4.12 {httpEvent} {
d260 1
a260 1
test httpold-5.1 {http_formatQuery} {
d264 1
a264 1
test httpold-5.2 {http_formatQuery} {
d268 1
a268 1
test httpold-5.3 {http_formatQuery} {
d272 1
a272 1
test httpold-6.1 {httpProxyRequired} {
d292 1
@


1.1.1.4
log
@import tcl 8.4.1
@
text
@d14 1
a14 1
# RCS: @@(#) $Id: httpold.test,v 1.11 2002/10/03 13:34:32 dkf Exp $
d22 1
a22 1
    if {[info exists httpold]} {
@


