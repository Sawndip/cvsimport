head	1.5;
access;
symbols
	sid-snapshot-20180601:1.5
	sid-snapshot-20180501:1.5
	sid-snapshot-20180401:1.5
	sid-snapshot-20180301:1.5
	sid-snapshot-20180201:1.5
	sid-snapshot-20180101:1.5
	sid-snapshot-20171201:1.5
	sid-snapshot-20171101:1.5
	sid-snapshot-20171001:1.5
	sid-snapshot-20170901:1.5
	sid-snapshot-20170801:1.5
	sid-snapshot-20170701:1.5
	sid-snapshot-20170601:1.5
	sid-snapshot-20170501:1.5
	sid-snapshot-20170401:1.5
	sid-snapshot-20170301:1.5
	sid-snapshot-20170201:1.5
	sid-snapshot-20170101:1.5
	sid-snapshot-20161201:1.5
	sid-snapshot-20161101:1.5
	sid-snapshot-20160901:1.5
	sid-snapshot-20160801:1.5
	sid-snapshot-20160701:1.5
	sid-snapshot-20160601:1.5
	sid-snapshot-20160501:1.5
	sid-snapshot-20160401:1.5
	sid-snapshot-20160301:1.5
	sid-snapshot-20160201:1.5
	sid-snapshot-20160101:1.5
	sid-snapshot-20151201:1.5
	sid-snapshot-20151101:1.5
	sid-snapshot-20151001:1.5
	sid-snapshot-20150901:1.5
	sid-snapshot-20150801:1.5
	sid-snapshot-20150701:1.5
	sid-snapshot-20150601:1.5
	sid-snapshot-20150501:1.5
	sid-snapshot-20150401:1.5
	sid-snapshot-20150301:1.5
	sid-snapshot-20150201:1.5
	sid-snapshot-20150101:1.5
	sid-snapshot-20141201:1.5
	sid-snapshot-20141101:1.5
	sid-snapshot-20141001:1.5
	sid-snapshot-20140901:1.5
	sid-snapshot-20140801:1.5
	sid-snapshot-20140701:1.5
	sid-snapshot-20140601:1.5
	sid-snapshot-20140501:1.5
	sid-snapshot-20140401:1.5
	sid-snapshot-20140301:1.5
	sid-snapshot-20140201:1.5
	sid-snapshot-20140101:1.5
	sid-snapshot-20131201:1.5
	sid-snapshot-20131101:1.5
	sid-snapshot-20131001:1.5
	sid-snapshot-20130901:1.5
	sid-snapshot-20130801:1.5
	sid-snapshot-20130701:1.5
	sid-snapshot-20130601:1.5
	insight_7_6-2013-04-10-branchpoint:1.5
	gdb_7_6-branch:1.5.0.58
	sid-snapshot-20130501:1.5
	sid-snapshot-20130401:1.5
	sid-snapshot-20130301:1.5
	sid-snapshot-20130201:1.5
	sid-snapshot-20130101:1.5
	sid-snapshot-20121201:1.5
	sid-snapshot-20121101:1.5
	sid-snapshot-20121001:1.5
	sid-snapshot-20120901:1.5
	gdb_7_5-branch:1.5.0.56
	sid-snapshot-20120801:1.5
	sid-snapshot-20120701:1.5
	sid-snapshot-20120601:1.5
	sid-snapshot-20120501:1.5
	sid-snapshot-20120401:1.5
	gdb_7_4-branch:1.5.0.54
	sid-snapshot-20120301:1.5
	sid-snapshot-20120201:1.5
	sid-snapshot-20120101:1.5
	sid-snapshot-20111201:1.5
	sid-snapshot-20111101:1.5
	sid-snapshot-20111001:1.5
	sid-snapshot-20110901:1.5
	gdb_7_3-branch:1.5.0.52
	sid-snapshot-20110801:1.5
	sid-snapshot-20110701:1.5
	sid-snapshot-20110601:1.5
	sid-snapshot-20110501:1.5
	sid-snapshot-20110401:1.5
	sid-snapshot-20110301:1.5
	sid-snapshot-20110201:1.5
	sid-snapshot-20110101:1.5
	sid-snapshot-20101201:1.5
	sid-snapshot-20101101:1.5
	sid-snapshot-20101001:1.5
	sid-snapshot-20100901:1.5
	sid-snapshot-20100801:1.5
	sid-snapshot-20100701:1.5
	sid-snapshot-20100601:1.5
	sid-snapshot-20100501:1.5
	sid-snapshot-20100401:1.5
	sid-snapshot-20100301:1.5
	gdb_7_1-branch:1.5.0.50
	gdb_7_0-branch:1.5.0.48
	sid-snapshot-20100201:1.5
	sid-snapshot-20100101:1.5
	sid-snapshot-20091201:1.5
	sid-snapshot-20091101:1.5
	sid-snapshot-20091001:1.5
	arc-sim-20090309:1.5
	sid-snapshot-20090901:1.5
	sid-snapshot-20090801:1.5
	sid-snapshot-20090701:1.5
	sid-snapshot-20090601:1.5
	sid-snapshot-20090501:1.5
	kevinb-pre-tcl8_5_7_merge:1.5
	sid-snapshot-20090401:1.5
	arc-insight_6_8-branch:1.5.0.46
	arc-insight_6_8-branchpoint:1.5
	insight_6_8-branch:1.5.0.44
	insight_6_8-branchpoint:1.5
	sid-snapshot-20090301:1.5
	sid-snapshot-20090201:1.5
	sid-snapshot-20090101:1.5
	sid-snapshot-20081201:1.5
	sid-snapshot-20081101:1.5
	sid-snapshot-20081001:1.5
	sid-snapshot-20080901:1.5
	sid-snapshot-20080801:1.5
	sid-snapshot-20080701:1.5
	sid-snapshot-20080601:1.5
	sid-snapshot-20080501:1.5
	sid-snapshot-20080403:1.5
	sid-snapshot-20080401:1.5
	gdb_6_8-branch:1.5.0.42
	sid-snapshot-20080301:1.5
	sid-snapshot-20080201:1.5
	sid-snapshot-20080101:1.5
	sid-snapshot-20071201:1.5
	sid-snapshot-20071101:1.5
	sid-snapshot-20071001:1.5
	insight_6_6-20070208-release:1.5
	gdb_6_6-branch:1.5.0.40
	gdb_6_6-2006-11-15-branchpoint:1.5
	insight_6_5-20061003-release:1.5
	gdb_6_5-branch:1.5.0.38
	gdb_6_5-2006-05-14-branchpoint:1.5
	readline_5_1-import-branch:1.5.0.36
	readline_5_1-import-branchpoint:1.5
	gdb_6_4-branch:1.5.0.34
	gdb_6_4-2005-11-01-branchpoint:1.5
	msnyder-tracepoint-checkpoint-branch:1.5.0.32
	msnyder-tracepoint-checkpoint-branchpoint:1.5
	gdb_6_1-2004-04-05-release:1.5
	ezannoni_pie-20040323-branch:1.5.0.30
	ezannoni_pie-20040323-branchpoint:1.5
	cagney_tramp-20040321-mergepoint:1.5
	cagney_tramp-20040309-branch:1.5.0.28
	cagney_tramp-20040309-branchpoint:1.5
	gdb_6_1-branch:1.5.0.26
	gdb_6_1-2004-03-01-gmt-branchpoint:1.5
	drow-cplus-merge-20040208:1.5
	carlton_dictionary-20040126-merge:1.5
	drow-cplus-merge-20040113:1.5
	drow-cplus-merge-20031224:1.5
	drow-cplus-merge-20031220:1.5
	carlton_dictionary-20031215-merge:1.5
	drow-cplus-merge-20031214:1.5
	carlton-dictionary-20031111-merge:1.5
	gdb_6_0-2003-10-04-release:1.5
	carlton_dictionary-20030917-merge:1.5
	ezannoni_pie-20030916-branchpoint:1.5
	ezannoni_pie-20030916-branch:1.5.0.24
	cagney_x86i386-20030821-branch:1.5.0.22
	cagney_x86i386-20030821-branchpoint:1.5
	carlton_dictionary-20030805-merge:1.5
	carlton_dictionary-20030627-merge:1.5
	gdb_6_0-branch:1.5.0.20
	gdb_6_0-2003-06-23-branchpoint:1.5
	cagney_convert-20030606-branch:1.5.0.18
	cagney_convert-20030606-branchpoint:1.5
	cagney_writestrings-20030508-branch:1.5.0.16
	cagney_writestrings-20030508-branchpoint:1.5
	carlton_dictionary-20030523-merge:1.5
	cagney_fileio-20030521-branch:1.5.0.14
	cagney_fileio-20030521-branchpoint:1.5
	carlton_dictionary-20030430-merge:1.5
	carlton_dictionary-20030416-merge:1.5
	cagney_frameaddr-20030409-mergepoint:1.5
	cagney_frameaddr-20030403-branchpoint:1.5
	cagney_frameaddr-20030403-branch:1.5.0.12
	cagney_framebase-20030330-mergepoint:1.5
	cagney_framebase-20030326-branch:1.5.0.10
	cagney_framebase-20030326-branchpoint:1.5
	cagney_lazyid-20030317-branch:1.5.0.8
	cagney_lazyid-20030317-branchpoint:1.5
	offbyone-20030313-branch:1.5.0.6
	offbyone-20030313-branchpoint:1.5
	carlton_dictionary-20030305-merge:1.5
	cagney_offbyone-20030303-branch:1.5.0.4
	cagney_offbyone-20030303-branchpoint:1.5
	carlton_dictionary-20030207-merge:1.5
	interps-20030202-branch:1.5.0.2
	interps-20030202-branchpoint:1.5
	TCL8_4_1:1.1.1.3
	cagney-unwind-20030108-branch:1.4.0.2
	cagney-unwind-20030108-branchpoint:1.4
	carlton_dictionary-20021223-merge:1.4
	gdb_5_3-2002-12-12-release:1.2
	TCL_8_4_1:1.1.1.3
	carlton_dictionary-20021115-merge:1.3
	kseitz_interps-20021105-merge:1.3
	kseitz_interps-20021103-merge:1.3
	drow-cplus-merge-20021020:1.3
	drow-cplus-merge-20021025:1.3
	carlton_dictionary-20021025-merge:1.3
	carlton_dictionary-20021011-merge:1.3
	drow-cplus-branch:1.3.0.4
	drow-cplus-branchpoint:1.3
	kseitz_interps-20020930-merge:1.3
	carlton_dictionary-20020927-merge:1.3
	tcltk840-20020924-branch:1.3.0.2
	tcltk840-20020924-branchpoint:1.3
	TCL_8_4_0:1.1.1.3
	carlton_dictionary-branch:1.2.0.16
	carlton_dictionary-20020920-branchpoint:1.2
	sid-20020905-branchpoint:1.2
	sid-20020905-branch:1.2.0.14
	gdb_5_3-branch:1.2.0.12
	gdb_5_3-2002-09-04-branchpoint:1.2
	kseitz_interps-20020829-merge:1.2
	cagney_sysregs-20020825-branch:1.2.0.10
	cagney_sysregs-20020825-branchpoint:1.2
	readline_4_3-import-branch:1.2.0.8
	readline_4_3-import-branchpoint:1.2
	gdb_5_2_1-2002-07-23-release:1.2
	kseitz_interps-20020528-branch:1.2.0.6
	kseitz_interps-20020528-branchpoint:1.2
	cagney_regbuf-20020515-branch:1.2.0.4
	cagney_regbuf-20020515-branchpoint:1.2
	gdb_5_2-2002-04-29-release:1.2
	gdb_5_2-branch:1.2.0.2
	gdb_5_2-2002-03-03-branchpoint:1.2
	gdb_5_1_1-2002-01-24-release:1.1.1.1
	cygnus_cvs_20020108_pre:1.2
	gdb_5_1_0_1-2002-01-03-branch:1.1.1.1.0.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.1.1.1
	gdb_5_1-2001-11-21-release:1.1.1.1
	gdb_s390-2001-09-26-branch:1.1.1.1.0.6
	gdb_s390-2001-09-26-branchpoint:1.1.1.1
	TCL_8_3:1.1.1.2
	NET:1.1.1
	gdb_5_1-2001-07-29-branch:1.1.1.1.0.4
	gdb_5_1-2001-07-29-branchpoint:1.1.1.1
	insight-precleanup-2001-01-01:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	dejagnu-2000-02-04:1.1.1.1
	dejagnu-2000-01-31:1.1.1.1
	dejagnu-2000-01-24:1.1.1.1
	dejagnu-2000-01-17:1.1.1.1
	dejagnu-2000-01-10:1.1.1.1
	dejagnu-2000-01-04:1.1.1.1
	dejagnu-1999-12-21:1.1.1.1
	dejagnu-1999-12-13:1.1.1.1
	dejagnu-1999-12-07:1.1.1.1
	dejagnu-1999-12-06:1.1.1.1
	dejagnu-1999-11-15:1.1.1.1
	dejagnu-1999-11-08:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.5
date	2003.01.21.19.40.15;	author hunt;	state Exp;
branches;
next	1.4;

1.4
date	2002.11.26.19.48.01;	author hunt;	state Exp;
branches;
next	1.3;

1.3
date	2002.09.24.18.37.07;	author kseitz;	state Exp;
branches
	1.3.2.1
	1.3.4.1;
next	1.2;

1.2
date	2001.09.09.23.56.08;	author irox;	state Exp;
branches
	1.2.16.1;
next	1.1;

1.1
date	99.11.09.01.28.44;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.3.2.1
date	2002.09.27.21.49.10;	author kseitz;	state Exp;
branches;
next	;

1.3.4.1
date	2003.12.14.20.28.49;	author drow;	state Exp;
branches;
next	;

1.2.16.1
date	2002.12.23.19.40.41;	author carlton;	state Exp;
branches;
next	1.2.16.2;

1.2.16.2
date	2003.02.07.19.18.19;	author carlton;	state Exp;
branches;
next	;

1.1.1.1
date	99.11.09.01.28.44;	author jsm;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2001.09.09.22.40.58;	author irox;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.09.24.19.56.37;	author kseitz;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Updated to tcl 8.4.1
@
text
@# Commands covered:  none
#
# This file contains a collection of tests for Tcl_LinkVar and related
# library procedures.  Sourcing this file into Tcl runs the tests and
# generates output for errors.  No output means no errors were found.
#
# Copyright (c) 1993 The Regents of the University of California.
# Copyright (c) 1994 Sun Microsystems, Inc.
# Copyright (c) 1998-1999 by Scriptics Corporation.
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
# RCS: @@(#) $Id: link.test,v 1.7 2002/06/22 04:19:47 dgp Exp $

if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest 2
    namespace import -force ::tcltest::*
}

::tcltest::testConstraint testlink \
        [expr {[info commands testlink] != {}}]

foreach i {int real bool string} {
    catch {unset $i}
}
test link-1.1 {reading C variables from Tcl} {testlink} {
    testlink delete
    testlink set 43 1.23 4 - 12341234
    testlink create 1 1 1 1 1
    list $int $real $bool $string $wide
} {43 1.23 1 NULL 12341234}
test link-1.2 {reading C variables from Tcl} {testlink} {
    testlink delete
    testlink create 1 1 1 1 1
    testlink set -3 2 0 "A long string with spaces"  43214321
    list $int $real $bool $string $wide $int $real $bool $string $wide
} {-3 2.0 0 {A long string with spaces} 43214321 -3 2.0 0 {A long string with spaces} 43214321}

test link-2.1 {writing C variables from Tcl} {testlink} {
    testlink delete
    testlink set 43 1.21 4 - 56785678
    testlink create 1 1 1 1 1
    set int "00721"
    set real -10.5
    set bool true
    set string abcdef
    set wide 135135
    concat [testlink get] $int $real $bool $string $wide
} {465 -10.5 1 abcdef 135135 00721 -10.5 true abcdef 135135}
test link-2.2 {writing bad values into variables} {testlink} {
    testlink delete
    testlink set 43 1.23 4 - 56785678
    testlink create 1 1 1 1 1
    list [catch {set int 09a} msg] $msg $int
} {1 {can't set "int": variable must have integer value} 43}
test link-2.3 {writing bad values into variables} {testlink} {
    testlink delete
    testlink set 43 1.23 4 - 56785678
    testlink create 1 1 1 1 1
    list [catch {set real 1.x3} msg] $msg $real
} {1 {can't set "real": variable must have real value} 1.23}
test link-2.4 {writing bad values into variables} {testlink} {
    testlink delete
    testlink set 43 1.23 4 - 56785678
    testlink create 1 1 1 1 1
    list [catch {set bool gorp} msg] $msg $bool
} {1 {can't set "bool": variable must have boolean value} 1}
test link-2.5 {writing bad values into variables} {testlink} {
    testlink delete
    testlink set 43 1.23 4 - 56785678
    testlink create 1 1 1 1 1
    list [catch {set wide gorp} msg] $msg $bool
} {1 {can't set "wide": variable must have integer value} 1}

test link-3.1 {read-only variables} {testlink} {
    testlink delete
    testlink set 43 1.23 4 - 56785678
    testlink create 0 1 1 0 0
    list [catch {set int 4} msg] $msg $int \
	[catch {set real 10.6} msg] $msg $real \
	[catch {set bool no} msg] $msg $bool \
	[catch {set string "new value"} msg] $msg $string \
	[catch {set wide 12341234} msg] $msg $wide
} {1 {can't set "int": linked variable is read-only} 43 0 10.6 10.6 0 no no 1 {can't set "string": linked variable is read-only} NULL 1 {can't set "wide": linked variable is read-only} 56785678}
test link-3.2 {read-only variables} {testlink} {
    testlink delete
    testlink set 43 1.23 4 - 56785678
    testlink create 1 0 0 1 1
    list [catch {set int 4} msg] $msg $int \
	[catch {set real 10.6} msg] $msg $real \
	[catch {set bool no} msg] $msg $bool \
	[catch {set string "new value"} msg] $msg $string\
	[catch {set wide 12341234} msg] $msg $wide
} {0 4 4 1 {can't set "real": linked variable is read-only} 1.23 1 {can't set "bool": linked variable is read-only} 1 0 {new value} {new value} 0 12341234 12341234}

test link-4.1 {unsetting linked variables} {testlink} {
    testlink delete
    testlink set -6 -2.5 0 stringValue 13579
    testlink create 1 1 1 1 1
    unset int real bool string wide
    list [catch {set int} msg] $msg [catch {set real} msg] $msg \
	    [catch {set bool} msg] $msg [catch {set string} msg] $msg \
	    [catch {set wide} msg] $msg
} {0 -6 0 -2.5 0 0 0 stringValue 0 13579}
test link-4.2 {unsetting linked variables} {testlink} {
    testlink delete
    testlink set -6 -2.1 0 stringValue 97531
    testlink create 1 1 1 1 1
    unset int real bool string wide
    set int 102
    set real 16
    set bool true
    set string newValue
    set wide 333555
    testlink get
} {102 16.0 1 newValue 333555}

test link-5.1 {unlinking variables} {testlink} {
    testlink delete
    testlink set -6 -2.25 0 stringValue 13579
    testlink delete
    set int xx1
    set real qrst
    set bool bogus
    set string 12345
    set wide 875421
    testlink get
} {-6 -2.25 0 stringValue 13579}
test link-5.2 {unlinking variables} {testlink} {
    testlink delete
    testlink set -6 -2.25 0 stringValue 97531
    testlink create 1 1 1 1 1
    testlink delete
    testlink set 25 14.7 7 - 999999
    list $int $real $bool $string $wide
} {-6 -2.25 0 stringValue 97531}

test link-6.1 {errors in setting up link} {testlink} {
    testlink delete
    catch {unset int}
    set int(44) 1
    list [catch {testlink create 1 1 1 1 1} msg] $msg
} {1 {can't set "int": variable is array}}
catch {unset int}

test link-7.1 {access to linked variables via upvar} {testlink} {
    proc x {} {
	upvar int y
	unset y
    }
    testlink delete
    testlink create 1 0 0 0 0
    testlink set 14 {} {} {} {}
    x
    list [catch {set int} msg] $msg
} {0 14}
test link-7.2 {access to linked variables via upvar} {testlink} {
    proc x {} {
	upvar int y
	return [set y]
    }
    testlink delete
    testlink create 1 0 0 0 0
    testlink set 0 {} {} {} {}
    set int
    testlink set 23 {} {} {} {}
    x
    list [x] $int
} {23 23}
test link-7.3 {access to linked variables via upvar} {testlink} {
    proc x {} {
	upvar int y
	set y 44
    }
    testlink delete
    testlink create 0 0 0 0 0
    testlink set 11 {} {} {} {}
    list [catch x msg] $msg $int
} {1 {can't set "y": linked variable is read-only} 11}
test link-7.4 {access to linked variables via upvar} {testlink} {
    proc x {} {
	upvar int y
	set y abc
    }
    testlink delete
    testlink create 1 1 1 1 1
    testlink set -4 {} {} {} {}
    list [catch x msg] $msg $int
} {1 {can't set "y": variable must have integer value} -4}
test link-7.5 {access to linked variables via upvar} {testlink} {
    proc x {} {
	upvar real y
	set y abc
    }
    testlink delete
    testlink create 1 1 1 1 1
    testlink set -4 16.75 {} {} {}
    list [catch x msg] $msg $real
} {1 {can't set "y": variable must have real value} 16.75}
test link-7.6 {access to linked variables via upvar} {testlink} {
    proc x {} {
	upvar bool y
	set y abc
    }
    testlink delete
    testlink create 1 1 1 1 1
    testlink set -4 16.3 1 {} {}
    list [catch x msg] $msg $bool
} {1 {can't set "y": variable must have boolean value} 1}
test link-7.7 {access to linked variables via upvar} {testlink} {
    proc x {} {
	upvar wide y
	set y abc
    }
    testlink delete
    testlink create 1 1 1 1 1
    testlink set -4 16.3 1 {} 778899
    list [catch x msg] $msg $wide
} {1 {can't set "y": variable must have integer value} 778899}

test link-8.1 {Tcl_UpdateLinkedVar procedure} {testlink} {
    proc x args {
	global x int real bool string wide
	lappend x $args $int $real $bool $string $wide
    }
    set x {}
    testlink create 1 1 1 1 1
    testlink set 14 -2.0 0 xyzzy 995511
    trace var int w x
    testlink update 32 4.0 3 abcd 113355
    trace vdelete int w x
    set x
} {{int {} w} 32 -2.0 0 xyzzy 995511}
test link-8.2 {Tcl_UpdateLinkedVar procedure} {testlink} {
    proc x args {
	global x int real bool string wide
	lappend x $args $int $real $bool $string $wide
    }
    set x {}
    testlink create 1 1 1 1 1
    testlink set 14 -2.0 0 xyzzy 995511
    testlink delete
    trace var int w x
    testlink update 32 4.0 6 abcd 113355
    trace vdelete int w x
    set x
} {}
test link-8.3 {Tcl_UpdateLinkedVar procedure, read-only variable} {testlink} {
    testlink create 0 0 0 0 0
    list [catch {testlink update 47 {} {} {} {}} msg] $msg $int
} {0 {} 47}

catch {testlink set 0 0 0 - 0}
catch {testlink delete}
foreach i {int real bool string wide} {
    catch {unset $i}
}

# cleanup
::tcltest::cleanupTests
return
@


1.4
log
@touched all sources to ease next import
@
text
@d14 1
a14 1
# RCS: @@(#) $Id: link.test,v 1.6.8.2 2000/09/15 16:56:52 spolk Exp $
d17 1
a17 1
    package require tcltest
d21 2
a22 6
if {[info commands testlink] == {}} {
    puts "This application hasn't been compiled with the \"testlink\""
    puts "command, so I can't test Tcl_LinkVar et al."
    ::tcltest::cleanupTests
    return
}
d27 1
a27 1
test link-1.1 {reading C variables from Tcl} {
d29 10
a38 10
    testlink set 43 1.23 4 -
    testlink create 1 1 1 1
    list $int $real $bool $string
} {43 1.23 1 NULL}
test link-1.2 {reading C variables from Tcl} {
    testlink delete
    testlink create 1 1 1 1
    testlink set -3 2 0 "A long string with spaces"
    list $int $real $bool $string $int $real $bool $string
} {-3 2.0 0 {A long string with spaces} -3 2.0 0 {A long string with spaces}}
d40 1
a40 1
test link-2.1 {writing C variables from Tcl} {
d42 2
a43 2
    testlink set 43 1.21 4 -
    testlink create 1 1 1 1
d48 4
a51 3
    concat [testlink get] $int $real $bool $string
} {465 -10.5 1 abcdef 00721 -10.5 true abcdef}
test link-2.2 {writing bad values into variables} {
d53 2
a54 2
    testlink set 43 1.23 4 -
    testlink create 1 1 1 1
d57 1
a57 1
test link-2.3 {writing bad values into variables} {
d59 2
a60 2
    testlink set 43 1.23 4 -
    testlink create 1 1 1 1
d63 1
a63 1
test link-2.4 {writing bad values into variables} {
d65 2
a66 2
    testlink set 43 1.23 4 -
    testlink create 1 1 1 1
d69 6
d76 1
a76 1
test link-3.1 {read-only variables} {
d78 2
a79 2
    testlink set 43 1.23 4 -
    testlink create 0 1 1 0
d83 4
a86 3
	[catch {set string "new value"} msg] $msg $string
} {1 {can't set "int": linked variable is read-only} 43 0 10.6 10.6 0 no no 1 {can't set "string": linked variable is read-only} NULL}
test link-3.2 {read-only variables} {
d88 2
a89 2
    testlink set 43 1.23 4 -
    testlink create 1 0 0 1
d93 9
a101 8
	[catch {set string "new value"} msg] $msg $string
} {0 4 4 1 {can't set "real": linked variable is read-only} 1.23 1 {can't set "bool": linked variable is read-only} 1 0 {new value} {new value}}

test link-4.1 {unsetting linked variables} {
    testlink delete
    testlink set -6 -2.5 0 stringValue
    testlink create 1 1 1 1
    unset int real bool string
d103 8
a110 7
	    [catch {set bool} msg] $msg [catch {set string} msg] $msg
} {0 -6 0 -2.5 0 0 0 stringValue}
test link-4.2 {unsetting linked variables} {
    testlink delete
    testlink set -6 -2.1 0 stringValue
    testlink create 1 1 1 1
    unset int real bool string
d115 1
d117 1
a117 1
} {102 16.0 1 newValue}
d119 1
a119 1
test link-5.1 {unlinking variables} {
d121 1
a121 1
    testlink set -6 -2.25 0 stringValue
d127 1
d129 2
a130 2
} {-6 -2.25 0 stringValue}
test link-5.2 {unlinking variables} {
d132 2
a133 2
    testlink set -6 -2.25 0 stringValue
    testlink create 1 1 1 1
d135 3
a137 3
    testlink set 25 14.7 7 -
    list $int $real $bool $string
} {-6 -2.25 0 stringValue}
d139 1
a139 1
test link-6.1 {errors in setting up link} {
d143 1
a143 1
    list [catch {testlink create 1 1 1 1} msg] $msg
d147 1
a147 1
test link-7.1 {access to linked variables via upvar} {
d153 2
a154 2
    testlink create 1 0 0 0
    testlink set 14 {} {} {}
d158 1
a158 1
test link-7.2 {access to linked variables via upvar} {
d164 2
a165 2
    testlink create 1 0 0 0
    testlink set 0 {} {} {}
d167 1
a167 1
    testlink set 23 {} {} {}
d171 1
a171 1
test link-7.3 {access to linked variables via upvar} {
d177 2
a178 2
    testlink create 0 0 0 0
    testlink set 11 {} {} {}
d181 1
a181 1
test link-7.4 {access to linked variables via upvar} {
d187 2
a188 2
    testlink create 1 1 1 1
    testlink set -4 {} {} {}
d191 1
a191 1
test link-7.5 {access to linked variables via upvar} {
d197 2
a198 2
    testlink create 1 1 1 1
    testlink set -4 16.75 {} {}
d201 1
a201 1
test link-7.6 {access to linked variables via upvar} {
d207 2
a208 2
    testlink create 1 1 1 1
    testlink set -4 16.3 1 {}
d211 10
d222 1
a222 1
test link-8.1 {Tcl_UpdateLinkedVar procedure} {
d224 2
a225 2
	global x int real bool string
	lappend x $args $int $real $bool $string
d228 2
a229 2
    testlink create 1 1 1 1
    testlink set 14 -2.0 0 xyzzy
d231 1
a231 1
    testlink update 32 4.0 3 abcd
d234 2
a235 2
} {{int {} w} 32 -2.0 0 xyzzy}
test link-8.2 {Tcl_UpdateLinkedVar procedure} {
d237 2
a238 2
	global x int real bool string
	lappend x $args $int $real $bool $string
d241 2
a242 2
    testlink create 1 1 1 1
    testlink set 14 -2.0 0 xyzzy
d245 1
a245 1
    testlink update 32 4.0 6 abcd
d249 3
a251 3
test link-8.3 {Tcl_UpdateLinkedVar procedure, read-only variable} {
    testlink create 0 0 0 0
    list [catch {testlink update 47 {} {} {}} msg] $msg $int
d254 3
a256 3
testlink set 0 0 0 -
testlink delete
foreach i {int real bool string} {
a262 13













@


1.3
log
@touched all sources to ease next import
@
text
@@


1.3.4.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@d14 1
a14 1
# RCS: @@(#) $Id: link.test,v 1.7 2002/06/22 04:19:47 dgp Exp $
d17 1
a17 1
    package require tcltest 2
d21 6
a26 2
::tcltest::testConstraint testlink \
        [expr {[info commands testlink] != {}}]
d31 1
a31 1
test link-1.1 {reading C variables from Tcl} {testlink} {
d33 10
a42 10
    testlink set 43 1.23 4 - 12341234
    testlink create 1 1 1 1 1
    list $int $real $bool $string $wide
} {43 1.23 1 NULL 12341234}
test link-1.2 {reading C variables from Tcl} {testlink} {
    testlink delete
    testlink create 1 1 1 1 1
    testlink set -3 2 0 "A long string with spaces"  43214321
    list $int $real $bool $string $wide $int $real $bool $string $wide
} {-3 2.0 0 {A long string with spaces} 43214321 -3 2.0 0 {A long string with spaces} 43214321}
d44 1
a44 1
test link-2.1 {writing C variables from Tcl} {testlink} {
d46 2
a47 2
    testlink set 43 1.21 4 - 56785678
    testlink create 1 1 1 1 1
d52 3
a54 4
    set wide 135135
    concat [testlink get] $int $real $bool $string $wide
} {465 -10.5 1 abcdef 135135 00721 -10.5 true abcdef 135135}
test link-2.2 {writing bad values into variables} {testlink} {
d56 2
a57 2
    testlink set 43 1.23 4 - 56785678
    testlink create 1 1 1 1 1
d60 1
a60 1
test link-2.3 {writing bad values into variables} {testlink} {
d62 2
a63 2
    testlink set 43 1.23 4 - 56785678
    testlink create 1 1 1 1 1
d66 1
a66 1
test link-2.4 {writing bad values into variables} {testlink} {
d68 2
a69 2
    testlink set 43 1.23 4 - 56785678
    testlink create 1 1 1 1 1
a71 6
test link-2.5 {writing bad values into variables} {testlink} {
    testlink delete
    testlink set 43 1.23 4 - 56785678
    testlink create 1 1 1 1 1
    list [catch {set wide gorp} msg] $msg $bool
} {1 {can't set "wide": variable must have integer value} 1}
d73 1
a73 1
test link-3.1 {read-only variables} {testlink} {
d75 2
a76 2
    testlink set 43 1.23 4 - 56785678
    testlink create 0 1 1 0 0
d80 3
a82 4
	[catch {set string "new value"} msg] $msg $string \
	[catch {set wide 12341234} msg] $msg $wide
} {1 {can't set "int": linked variable is read-only} 43 0 10.6 10.6 0 no no 1 {can't set "string": linked variable is read-only} NULL 1 {can't set "wide": linked variable is read-only} 56785678}
test link-3.2 {read-only variables} {testlink} {
d84 2
a85 2
    testlink set 43 1.23 4 - 56785678
    testlink create 1 0 0 1 1
d89 8
a96 9
	[catch {set string "new value"} msg] $msg $string\
	[catch {set wide 12341234} msg] $msg $wide
} {0 4 4 1 {can't set "real": linked variable is read-only} 1.23 1 {can't set "bool": linked variable is read-only} 1 0 {new value} {new value} 0 12341234 12341234}

test link-4.1 {unsetting linked variables} {testlink} {
    testlink delete
    testlink set -6 -2.5 0 stringValue 13579
    testlink create 1 1 1 1 1
    unset int real bool string wide
d98 7
a104 8
	    [catch {set bool} msg] $msg [catch {set string} msg] $msg \
	    [catch {set wide} msg] $msg
} {0 -6 0 -2.5 0 0 0 stringValue 0 13579}
test link-4.2 {unsetting linked variables} {testlink} {
    testlink delete
    testlink set -6 -2.1 0 stringValue 97531
    testlink create 1 1 1 1 1
    unset int real bool string wide
a108 1
    set wide 333555
d110 1
a110 1
} {102 16.0 1 newValue 333555}
d112 1
a112 1
test link-5.1 {unlinking variables} {testlink} {
d114 1
a114 1
    testlink set -6 -2.25 0 stringValue 13579
a119 1
    set wide 875421
d121 2
a122 2
} {-6 -2.25 0 stringValue 13579}
test link-5.2 {unlinking variables} {testlink} {
d124 2
a125 2
    testlink set -6 -2.25 0 stringValue 97531
    testlink create 1 1 1 1 1
d127 3
a129 3
    testlink set 25 14.7 7 - 999999
    list $int $real $bool $string $wide
} {-6 -2.25 0 stringValue 97531}
d131 1
a131 1
test link-6.1 {errors in setting up link} {testlink} {
d135 1
a135 1
    list [catch {testlink create 1 1 1 1 1} msg] $msg
d139 1
a139 1
test link-7.1 {access to linked variables via upvar} {testlink} {
d145 2
a146 2
    testlink create 1 0 0 0 0
    testlink set 14 {} {} {} {}
d150 1
a150 1
test link-7.2 {access to linked variables via upvar} {testlink} {
d156 2
a157 2
    testlink create 1 0 0 0 0
    testlink set 0 {} {} {} {}
d159 1
a159 1
    testlink set 23 {} {} {} {}
d163 1
a163 1
test link-7.3 {access to linked variables via upvar} {testlink} {
d169 2
a170 2
    testlink create 0 0 0 0 0
    testlink set 11 {} {} {} {}
d173 1
a173 1
test link-7.4 {access to linked variables via upvar} {testlink} {
d179 2
a180 2
    testlink create 1 1 1 1 1
    testlink set -4 {} {} {} {}
d183 1
a183 1
test link-7.5 {access to linked variables via upvar} {testlink} {
d189 2
a190 2
    testlink create 1 1 1 1 1
    testlink set -4 16.75 {} {} {}
d193 1
a193 1
test link-7.6 {access to linked variables via upvar} {testlink} {
d199 2
a200 2
    testlink create 1 1 1 1 1
    testlink set -4 16.3 1 {} {}
a202 10
test link-7.7 {access to linked variables via upvar} {testlink} {
    proc x {} {
	upvar wide y
	set y abc
    }
    testlink delete
    testlink create 1 1 1 1 1
    testlink set -4 16.3 1 {} 778899
    list [catch x msg] $msg $wide
} {1 {can't set "y": variable must have integer value} 778899}
d204 1
a204 1
test link-8.1 {Tcl_UpdateLinkedVar procedure} {testlink} {
d206 2
a207 2
	global x int real bool string wide
	lappend x $args $int $real $bool $string $wide
d210 2
a211 2
    testlink create 1 1 1 1 1
    testlink set 14 -2.0 0 xyzzy 995511
d213 1
a213 1
    testlink update 32 4.0 3 abcd 113355
d216 2
a217 2
} {{int {} w} 32 -2.0 0 xyzzy 995511}
test link-8.2 {Tcl_UpdateLinkedVar procedure} {testlink} {
d219 2
a220 2
	global x int real bool string wide
	lappend x $args $int $real $bool $string $wide
d223 2
a224 2
    testlink create 1 1 1 1 1
    testlink set 14 -2.0 0 xyzzy 995511
d227 1
a227 1
    testlink update 32 4.0 6 abcd 113355
d231 3
a233 3
test link-8.3 {Tcl_UpdateLinkedVar procedure, read-only variable} {testlink} {
    testlink create 0 0 0 0 0
    list [catch {testlink update 47 {} {} {} {}} msg] $msg $int
d236 3
a238 3
catch {testlink set 0 0 0 - 0}
catch {testlink delete}
foreach i {int real bool string wide} {
d245 13
@


1.3.2.1
log
@Import Tcl 8.4.0 into mainline-like sources. Simplest Tcl build possible for
cygwin.
@
text
@d14 1
a14 1
# RCS: @@(#) $Id: link.test,v 1.7 2002/06/22 04:19:47 dgp Exp $
d17 1
a17 1
    package require tcltest 2
d21 6
a26 2
::tcltest::testConstraint testlink \
        [expr {[info commands testlink] != {}}]
d31 1
a31 1
test link-1.1 {reading C variables from Tcl} {testlink} {
d33 10
a42 10
    testlink set 43 1.23 4 - 12341234
    testlink create 1 1 1 1 1
    list $int $real $bool $string $wide
} {43 1.23 1 NULL 12341234}
test link-1.2 {reading C variables from Tcl} {testlink} {
    testlink delete
    testlink create 1 1 1 1 1
    testlink set -3 2 0 "A long string with spaces"  43214321
    list $int $real $bool $string $wide $int $real $bool $string $wide
} {-3 2.0 0 {A long string with spaces} 43214321 -3 2.0 0 {A long string with spaces} 43214321}
d44 1
a44 1
test link-2.1 {writing C variables from Tcl} {testlink} {
d46 2
a47 2
    testlink set 43 1.21 4 - 56785678
    testlink create 1 1 1 1 1
d52 3
a54 4
    set wide 135135
    concat [testlink get] $int $real $bool $string $wide
} {465 -10.5 1 abcdef 135135 00721 -10.5 true abcdef 135135}
test link-2.2 {writing bad values into variables} {testlink} {
d56 2
a57 2
    testlink set 43 1.23 4 - 56785678
    testlink create 1 1 1 1 1
d60 1
a60 1
test link-2.3 {writing bad values into variables} {testlink} {
d62 2
a63 2
    testlink set 43 1.23 4 - 56785678
    testlink create 1 1 1 1 1
d66 1
a66 1
test link-2.4 {writing bad values into variables} {testlink} {
d68 2
a69 2
    testlink set 43 1.23 4 - 56785678
    testlink create 1 1 1 1 1
a71 6
test link-2.5 {writing bad values into variables} {testlink} {
    testlink delete
    testlink set 43 1.23 4 - 56785678
    testlink create 1 1 1 1 1
    list [catch {set wide gorp} msg] $msg $bool
} {1 {can't set "wide": variable must have integer value} 1}
d73 1
a73 1
test link-3.1 {read-only variables} {testlink} {
d75 2
a76 2
    testlink set 43 1.23 4 - 56785678
    testlink create 0 1 1 0 0
d80 3
a82 4
	[catch {set string "new value"} msg] $msg $string \
	[catch {set wide 12341234} msg] $msg $wide
} {1 {can't set "int": linked variable is read-only} 43 0 10.6 10.6 0 no no 1 {can't set "string": linked variable is read-only} NULL 1 {can't set "wide": linked variable is read-only} 56785678}
test link-3.2 {read-only variables} {testlink} {
d84 2
a85 2
    testlink set 43 1.23 4 - 56785678
    testlink create 1 0 0 1 1
d89 8
a96 9
	[catch {set string "new value"} msg] $msg $string\
	[catch {set wide 12341234} msg] $msg $wide
} {0 4 4 1 {can't set "real": linked variable is read-only} 1.23 1 {can't set "bool": linked variable is read-only} 1 0 {new value} {new value} 0 12341234 12341234}

test link-4.1 {unsetting linked variables} {testlink} {
    testlink delete
    testlink set -6 -2.5 0 stringValue 13579
    testlink create 1 1 1 1 1
    unset int real bool string wide
d98 7
a104 8
	    [catch {set bool} msg] $msg [catch {set string} msg] $msg \
	    [catch {set wide} msg] $msg
} {0 -6 0 -2.5 0 0 0 stringValue 0 13579}
test link-4.2 {unsetting linked variables} {testlink} {
    testlink delete
    testlink set -6 -2.1 0 stringValue 97531
    testlink create 1 1 1 1 1
    unset int real bool string wide
a108 1
    set wide 333555
d110 1
a110 1
} {102 16.0 1 newValue 333555}
d112 1
a112 1
test link-5.1 {unlinking variables} {testlink} {
d114 1
a114 1
    testlink set -6 -2.25 0 stringValue 13579
a119 1
    set wide 875421
d121 2
a122 2
} {-6 -2.25 0 stringValue 13579}
test link-5.2 {unlinking variables} {testlink} {
d124 2
a125 2
    testlink set -6 -2.25 0 stringValue 97531
    testlink create 1 1 1 1 1
d127 3
a129 3
    testlink set 25 14.7 7 - 999999
    list $int $real $bool $string $wide
} {-6 -2.25 0 stringValue 97531}
d131 1
a131 1
test link-6.1 {errors in setting up link} {testlink} {
d135 1
a135 1
    list [catch {testlink create 1 1 1 1 1} msg] $msg
d139 1
a139 1
test link-7.1 {access to linked variables via upvar} {testlink} {
d145 2
a146 2
    testlink create 1 0 0 0 0
    testlink set 14 {} {} {} {}
d150 1
a150 1
test link-7.2 {access to linked variables via upvar} {testlink} {
d156 2
a157 2
    testlink create 1 0 0 0 0
    testlink set 0 {} {} {} {}
d159 1
a159 1
    testlink set 23 {} {} {} {}
d163 1
a163 1
test link-7.3 {access to linked variables via upvar} {testlink} {
d169 2
a170 2
    testlink create 0 0 0 0 0
    testlink set 11 {} {} {} {}
d173 1
a173 1
test link-7.4 {access to linked variables via upvar} {testlink} {
d179 2
a180 2
    testlink create 1 1 1 1 1
    testlink set -4 {} {} {} {}
d183 1
a183 1
test link-7.5 {access to linked variables via upvar} {testlink} {
d189 2
a190 2
    testlink create 1 1 1 1 1
    testlink set -4 16.75 {} {} {}
d193 1
a193 1
test link-7.6 {access to linked variables via upvar} {testlink} {
d199 2
a200 2
    testlink create 1 1 1 1 1
    testlink set -4 16.3 1 {} {}
a202 10
test link-7.7 {access to linked variables via upvar} {testlink} {
    proc x {} {
	upvar wide y
	set y abc
    }
    testlink delete
    testlink create 1 1 1 1 1
    testlink set -4 16.3 1 {} 778899
    list [catch x msg] $msg $wide
} {1 {can't set "y": variable must have integer value} 778899}
d204 1
a204 1
test link-8.1 {Tcl_UpdateLinkedVar procedure} {testlink} {
d206 2
a207 2
	global x int real bool string wide
	lappend x $args $int $real $bool $string $wide
d210 2
a211 2
    testlink create 1 1 1 1 1
    testlink set 14 -2.0 0 xyzzy 995511
d213 1
a213 1
    testlink update 32 4.0 3 abcd 113355
d216 2
a217 2
} {{int {} w} 32 -2.0 0 xyzzy 995511}
test link-8.2 {Tcl_UpdateLinkedVar procedure} {testlink} {
d219 2
a220 2
	global x int real bool string wide
	lappend x $args $int $real $bool $string $wide
d223 2
a224 2
    testlink create 1 1 1 1 1
    testlink set 14 -2.0 0 xyzzy 995511
d227 1
a227 1
    testlink update 32 4.0 6 abcd 113355
d231 3
a233 3
test link-8.3 {Tcl_UpdateLinkedVar procedure, read-only variable} {testlink} {
    testlink create 0 0 0 0 0
    list [catch {testlink update 47 {} {} {} {}} msg] $msg $int
d236 3
a238 3
catch {testlink set 0 0 0 - 0}
catch {testlink delete}
foreach i {int real bool string wide} {
d245 13
@


1.2
log
@touched all Tcl files to ease next import.
@
text
@@


1.2.16.1
log
@2002-12-23  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021223-merge.
@
text
@@


1.2.16.2
log
@2003-02-07  David Carlton  <carlton@@math.stanford.edu>

	* Merge with mainline; tag is carlton_dictionary-20030207-merge.
@
text
@d17 1
a17 1
    package require tcltest 2
d21 6
a26 2
::tcltest::testConstraint testlink \
        [expr {[info commands testlink] != {}}]
d31 1
a31 1
test link-1.1 {reading C variables from Tcl} {testlink} {
d33 10
a42 10
    testlink set 43 1.23 4 - 12341234
    testlink create 1 1 1 1 1
    list $int $real $bool $string $wide
} {43 1.23 1 NULL 12341234}
test link-1.2 {reading C variables from Tcl} {testlink} {
    testlink delete
    testlink create 1 1 1 1 1
    testlink set -3 2 0 "A long string with spaces"  43214321
    list $int $real $bool $string $wide $int $real $bool $string $wide
} {-3 2.0 0 {A long string with spaces} 43214321 -3 2.0 0 {A long string with spaces} 43214321}
d44 1
a44 1
test link-2.1 {writing C variables from Tcl} {testlink} {
d46 2
a47 2
    testlink set 43 1.21 4 - 56785678
    testlink create 1 1 1 1 1
d52 3
a54 4
    set wide 135135
    concat [testlink get] $int $real $bool $string $wide
} {465 -10.5 1 abcdef 135135 00721 -10.5 true abcdef 135135}
test link-2.2 {writing bad values into variables} {testlink} {
d56 2
a57 2
    testlink set 43 1.23 4 - 56785678
    testlink create 1 1 1 1 1
d60 1
a60 1
test link-2.3 {writing bad values into variables} {testlink} {
d62 2
a63 2
    testlink set 43 1.23 4 - 56785678
    testlink create 1 1 1 1 1
d66 1
a66 1
test link-2.4 {writing bad values into variables} {testlink} {
d68 2
a69 2
    testlink set 43 1.23 4 - 56785678
    testlink create 1 1 1 1 1
a71 6
test link-2.5 {writing bad values into variables} {testlink} {
    testlink delete
    testlink set 43 1.23 4 - 56785678
    testlink create 1 1 1 1 1
    list [catch {set wide gorp} msg] $msg $bool
} {1 {can't set "wide": variable must have integer value} 1}
d73 1
a73 1
test link-3.1 {read-only variables} {testlink} {
d75 2
a76 2
    testlink set 43 1.23 4 - 56785678
    testlink create 0 1 1 0 0
d80 3
a82 4
	[catch {set string "new value"} msg] $msg $string \
	[catch {set wide 12341234} msg] $msg $wide
} {1 {can't set "int": linked variable is read-only} 43 0 10.6 10.6 0 no no 1 {can't set "string": linked variable is read-only} NULL 1 {can't set "wide": linked variable is read-only} 56785678}
test link-3.2 {read-only variables} {testlink} {
d84 2
a85 2
    testlink set 43 1.23 4 - 56785678
    testlink create 1 0 0 1 1
d89 8
a96 9
	[catch {set string "new value"} msg] $msg $string\
	[catch {set wide 12341234} msg] $msg $wide
} {0 4 4 1 {can't set "real": linked variable is read-only} 1.23 1 {can't set "bool": linked variable is read-only} 1 0 {new value} {new value} 0 12341234 12341234}

test link-4.1 {unsetting linked variables} {testlink} {
    testlink delete
    testlink set -6 -2.5 0 stringValue 13579
    testlink create 1 1 1 1 1
    unset int real bool string wide
d98 7
a104 8
	    [catch {set bool} msg] $msg [catch {set string} msg] $msg \
	    [catch {set wide} msg] $msg
} {0 -6 0 -2.5 0 0 0 stringValue 0 13579}
test link-4.2 {unsetting linked variables} {testlink} {
    testlink delete
    testlink set -6 -2.1 0 stringValue 97531
    testlink create 1 1 1 1 1
    unset int real bool string wide
a108 1
    set wide 333555
d110 1
a110 1
} {102 16.0 1 newValue 333555}
d112 1
a112 1
test link-5.1 {unlinking variables} {testlink} {
d114 1
a114 1
    testlink set -6 -2.25 0 stringValue 13579
a119 1
    set wide 875421
d121 2
a122 2
} {-6 -2.25 0 stringValue 13579}
test link-5.2 {unlinking variables} {testlink} {
d124 2
a125 2
    testlink set -6 -2.25 0 stringValue 97531
    testlink create 1 1 1 1 1
d127 3
a129 3
    testlink set 25 14.7 7 - 999999
    list $int $real $bool $string $wide
} {-6 -2.25 0 stringValue 97531}
d131 1
a131 1
test link-6.1 {errors in setting up link} {testlink} {
d135 1
a135 1
    list [catch {testlink create 1 1 1 1 1} msg] $msg
d139 1
a139 1
test link-7.1 {access to linked variables via upvar} {testlink} {
d145 2
a146 2
    testlink create 1 0 0 0 0
    testlink set 14 {} {} {} {}
d150 1
a150 1
test link-7.2 {access to linked variables via upvar} {testlink} {
d156 2
a157 2
    testlink create 1 0 0 0 0
    testlink set 0 {} {} {} {}
d159 1
a159 1
    testlink set 23 {} {} {} {}
d163 1
a163 1
test link-7.3 {access to linked variables via upvar} {testlink} {
d169 2
a170 2
    testlink create 0 0 0 0 0
    testlink set 11 {} {} {} {}
d173 1
a173 1
test link-7.4 {access to linked variables via upvar} {testlink} {
d179 2
a180 2
    testlink create 1 1 1 1 1
    testlink set -4 {} {} {} {}
d183 1
a183 1
test link-7.5 {access to linked variables via upvar} {testlink} {
d189 2
a190 2
    testlink create 1 1 1 1 1
    testlink set -4 16.75 {} {} {}
d193 1
a193 1
test link-7.6 {access to linked variables via upvar} {testlink} {
d199 2
a200 2
    testlink create 1 1 1 1 1
    testlink set -4 16.3 1 {} {}
a202 10
test link-7.7 {access to linked variables via upvar} {testlink} {
    proc x {} {
	upvar wide y
	set y abc
    }
    testlink delete
    testlink create 1 1 1 1 1
    testlink set -4 16.3 1 {} 778899
    list [catch x msg] $msg $wide
} {1 {can't set "y": variable must have integer value} 778899}
d204 1
a204 1
test link-8.1 {Tcl_UpdateLinkedVar procedure} {testlink} {
d206 2
a207 2
	global x int real bool string wide
	lappend x $args $int $real $bool $string $wide
d210 2
a211 2
    testlink create 1 1 1 1 1
    testlink set 14 -2.0 0 xyzzy 995511
d213 1
a213 1
    testlink update 32 4.0 3 abcd 113355
d216 2
a217 2
} {{int {} w} 32 -2.0 0 xyzzy 995511}
test link-8.2 {Tcl_UpdateLinkedVar procedure} {testlink} {
d219 2
a220 2
	global x int real bool string wide
	lappend x $args $int $real $bool $string $wide
d223 2
a224 2
    testlink create 1 1 1 1 1
    testlink set 14 -2.0 0 xyzzy 995511
d227 1
a227 1
    testlink update 32 4.0 6 abcd 113355
d231 3
a233 3
test link-8.3 {Tcl_UpdateLinkedVar procedure, read-only variable} {testlink} {
    testlink create 0 0 0 0 0
    list [catch {testlink update 47 {} {} {} {}} msg] $msg $int
d236 3
a238 3
catch {testlink set 0 0 0 - 0}
catch {testlink delete}
foreach i {int real bool string wide} {
d245 13
@


1.1
log
@Initial revision
@
text
@d9 1
d14 6
a19 1
# RCS: @@(#) $Id: link.test,v 1.12 1999/01/26 03:53:33 jingham Exp $
d24 1
a27 2
if {[string compare test [info procs test]] == 1} then {source defs}

d236 1
d241 17
@


1.1.1.1
log
@import dejagnu-1999-11-08 snapshot
@
text
@@


1.1.1.2
log
@Tcl 8.3 upgrade
@
text
@a8 1
# Copyright (c) 1998-1999 by Scriptics Corporation.
d13 1
a13 6
# RCS: @@(#) $Id: link.test,v 1.6.8.2 2000/09/15 16:56:52 spolk Exp $

if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest
    namespace import -force ::tcltest::*
}
a17 1
    ::tcltest::cleanupTests
d21 2
a230 1
testlink set 0 0 0 -
a234 17

# cleanup
::tcltest::cleanupTests
return













@


1.1.1.3
log
@import tcl 8.4.0
@
text
@d14 1
a14 1
# RCS: @@(#) $Id: link.test,v 1.7 2002/06/22 04:19:47 dgp Exp $
d17 1
a17 1
    package require tcltest 2
d21 6
a26 2
::tcltest::testConstraint testlink \
        [expr {[info commands testlink] != {}}]
d31 1
a31 1
test link-1.1 {reading C variables from Tcl} {testlink} {
d33 10
a42 10
    testlink set 43 1.23 4 - 12341234
    testlink create 1 1 1 1 1
    list $int $real $bool $string $wide
} {43 1.23 1 NULL 12341234}
test link-1.2 {reading C variables from Tcl} {testlink} {
    testlink delete
    testlink create 1 1 1 1 1
    testlink set -3 2 0 "A long string with spaces"  43214321
    list $int $real $bool $string $wide $int $real $bool $string $wide
} {-3 2.0 0 {A long string with spaces} 43214321 -3 2.0 0 {A long string with spaces} 43214321}
d44 1
a44 1
test link-2.1 {writing C variables from Tcl} {testlink} {
d46 2
a47 2
    testlink set 43 1.21 4 - 56785678
    testlink create 1 1 1 1 1
d52 3
a54 4
    set wide 135135
    concat [testlink get] $int $real $bool $string $wide
} {465 -10.5 1 abcdef 135135 00721 -10.5 true abcdef 135135}
test link-2.2 {writing bad values into variables} {testlink} {
d56 2
a57 2
    testlink set 43 1.23 4 - 56785678
    testlink create 1 1 1 1 1
d60 1
a60 1
test link-2.3 {writing bad values into variables} {testlink} {
d62 2
a63 2
    testlink set 43 1.23 4 - 56785678
    testlink create 1 1 1 1 1
d66 1
a66 1
test link-2.4 {writing bad values into variables} {testlink} {
d68 2
a69 2
    testlink set 43 1.23 4 - 56785678
    testlink create 1 1 1 1 1
a71 6
test link-2.5 {writing bad values into variables} {testlink} {
    testlink delete
    testlink set 43 1.23 4 - 56785678
    testlink create 1 1 1 1 1
    list [catch {set wide gorp} msg] $msg $bool
} {1 {can't set "wide": variable must have integer value} 1}
d73 1
a73 1
test link-3.1 {read-only variables} {testlink} {
d75 2
a76 2
    testlink set 43 1.23 4 - 56785678
    testlink create 0 1 1 0 0
d80 3
a82 4
	[catch {set string "new value"} msg] $msg $string \
	[catch {set wide 12341234} msg] $msg $wide
} {1 {can't set "int": linked variable is read-only} 43 0 10.6 10.6 0 no no 1 {can't set "string": linked variable is read-only} NULL 1 {can't set "wide": linked variable is read-only} 56785678}
test link-3.2 {read-only variables} {testlink} {
d84 2
a85 2
    testlink set 43 1.23 4 - 56785678
    testlink create 1 0 0 1 1
d89 8
a96 9
	[catch {set string "new value"} msg] $msg $string\
	[catch {set wide 12341234} msg] $msg $wide
} {0 4 4 1 {can't set "real": linked variable is read-only} 1.23 1 {can't set "bool": linked variable is read-only} 1 0 {new value} {new value} 0 12341234 12341234}

test link-4.1 {unsetting linked variables} {testlink} {
    testlink delete
    testlink set -6 -2.5 0 stringValue 13579
    testlink create 1 1 1 1 1
    unset int real bool string wide
d98 7
a104 8
	    [catch {set bool} msg] $msg [catch {set string} msg] $msg \
	    [catch {set wide} msg] $msg
} {0 -6 0 -2.5 0 0 0 stringValue 0 13579}
test link-4.2 {unsetting linked variables} {testlink} {
    testlink delete
    testlink set -6 -2.1 0 stringValue 97531
    testlink create 1 1 1 1 1
    unset int real bool string wide
a108 1
    set wide 333555
d110 1
a110 1
} {102 16.0 1 newValue 333555}
d112 1
a112 1
test link-5.1 {unlinking variables} {testlink} {
d114 1
a114 1
    testlink set -6 -2.25 0 stringValue 13579
a119 1
    set wide 875421
d121 2
a122 2
} {-6 -2.25 0 stringValue 13579}
test link-5.2 {unlinking variables} {testlink} {
d124 2
a125 2
    testlink set -6 -2.25 0 stringValue 97531
    testlink create 1 1 1 1 1
d127 3
a129 3
    testlink set 25 14.7 7 - 999999
    list $int $real $bool $string $wide
} {-6 -2.25 0 stringValue 97531}
d131 1
a131 1
test link-6.1 {errors in setting up link} {testlink} {
d135 1
a135 1
    list [catch {testlink create 1 1 1 1 1} msg] $msg
d139 1
a139 1
test link-7.1 {access to linked variables via upvar} {testlink} {
d145 2
a146 2
    testlink create 1 0 0 0 0
    testlink set 14 {} {} {} {}
d150 1
a150 1
test link-7.2 {access to linked variables via upvar} {testlink} {
d156 2
a157 2
    testlink create 1 0 0 0 0
    testlink set 0 {} {} {} {}
d159 1
a159 1
    testlink set 23 {} {} {} {}
d163 1
a163 1
test link-7.3 {access to linked variables via upvar} {testlink} {
d169 2
a170 2
    testlink create 0 0 0 0 0
    testlink set 11 {} {} {} {}
d173 1
a173 1
test link-7.4 {access to linked variables via upvar} {testlink} {
d179 2
a180 2
    testlink create 1 1 1 1 1
    testlink set -4 {} {} {} {}
d183 1
a183 1
test link-7.5 {access to linked variables via upvar} {testlink} {
d189 2
a190 2
    testlink create 1 1 1 1 1
    testlink set -4 16.75 {} {} {}
d193 1
a193 1
test link-7.6 {access to linked variables via upvar} {testlink} {
d199 2
a200 2
    testlink create 1 1 1 1 1
    testlink set -4 16.3 1 {} {}
a202 10
test link-7.7 {access to linked variables via upvar} {testlink} {
    proc x {} {
	upvar wide y
	set y abc
    }
    testlink delete
    testlink create 1 1 1 1 1
    testlink set -4 16.3 1 {} 778899
    list [catch x msg] $msg $wide
} {1 {can't set "y": variable must have integer value} 778899}
d204 1
a204 1
test link-8.1 {Tcl_UpdateLinkedVar procedure} {testlink} {
d206 2
a207 2
	global x int real bool string wide
	lappend x $args $int $real $bool $string $wide
d210 2
a211 2
    testlink create 1 1 1 1 1
    testlink set 14 -2.0 0 xyzzy 995511
d213 1
a213 1
    testlink update 32 4.0 3 abcd 113355
d216 2
a217 2
} {{int {} w} 32 -2.0 0 xyzzy 995511}
test link-8.2 {Tcl_UpdateLinkedVar procedure} {testlink} {
d219 2
a220 2
	global x int real bool string wide
	lappend x $args $int $real $bool $string $wide
d223 2
a224 2
    testlink create 1 1 1 1 1
    testlink set 14 -2.0 0 xyzzy 995511
d227 1
a227 1
    testlink update 32 4.0 6 abcd 113355
d231 3
a233 3
test link-8.3 {Tcl_UpdateLinkedVar procedure, read-only variable} {testlink} {
    testlink create 0 0 0 0 0
    list [catch {testlink update 47 {} {} {} {}} msg] $msg $int
d236 3
a238 3
catch {testlink set 0 0 0 - 0}
catch {testlink delete}
foreach i {int real bool string wide} {
d245 13
@


