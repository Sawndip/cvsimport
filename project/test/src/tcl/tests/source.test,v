head	1.5;
access;
symbols
	sid-snapshot-20180601:1.5
	sid-snapshot-20180501:1.5
	sid-snapshot-20180401:1.5
	sid-snapshot-20180301:1.5
	sid-snapshot-20180201:1.5
	sid-snapshot-20180101:1.5
	sid-snapshot-20171201:1.5
	sid-snapshot-20171101:1.5
	sid-snapshot-20171001:1.5
	sid-snapshot-20170901:1.5
	sid-snapshot-20170801:1.5
	sid-snapshot-20170701:1.5
	sid-snapshot-20170601:1.5
	sid-snapshot-20170501:1.5
	sid-snapshot-20170401:1.5
	sid-snapshot-20170301:1.5
	sid-snapshot-20170201:1.5
	sid-snapshot-20170101:1.5
	sid-snapshot-20161201:1.5
	sid-snapshot-20161101:1.5
	sid-snapshot-20160901:1.5
	sid-snapshot-20160801:1.5
	sid-snapshot-20160701:1.5
	sid-snapshot-20160601:1.5
	sid-snapshot-20160501:1.5
	sid-snapshot-20160401:1.5
	sid-snapshot-20160301:1.5
	sid-snapshot-20160201:1.5
	sid-snapshot-20160101:1.5
	sid-snapshot-20151201:1.5
	sid-snapshot-20151101:1.5
	sid-snapshot-20151001:1.5
	sid-snapshot-20150901:1.5
	sid-snapshot-20150801:1.5
	sid-snapshot-20150701:1.5
	sid-snapshot-20150601:1.5
	sid-snapshot-20150501:1.5
	sid-snapshot-20150401:1.5
	sid-snapshot-20150301:1.5
	sid-snapshot-20150201:1.5
	sid-snapshot-20150101:1.5
	sid-snapshot-20141201:1.5
	sid-snapshot-20141101:1.5
	sid-snapshot-20141001:1.5
	sid-snapshot-20140901:1.5
	sid-snapshot-20140801:1.5
	sid-snapshot-20140701:1.5
	sid-snapshot-20140601:1.5
	sid-snapshot-20140501:1.5
	sid-snapshot-20140401:1.5
	sid-snapshot-20140301:1.5
	sid-snapshot-20140201:1.5
	sid-snapshot-20140101:1.5
	sid-snapshot-20131201:1.5
	sid-snapshot-20131101:1.5
	sid-snapshot-20131001:1.5
	sid-snapshot-20130901:1.5
	sid-snapshot-20130801:1.5
	sid-snapshot-20130701:1.5
	sid-snapshot-20130601:1.5
	insight_7_6-2013-04-10-branchpoint:1.5
	gdb_7_6-branch:1.5.0.58
	sid-snapshot-20130501:1.5
	sid-snapshot-20130401:1.5
	sid-snapshot-20130301:1.5
	sid-snapshot-20130201:1.5
	sid-snapshot-20130101:1.5
	sid-snapshot-20121201:1.5
	sid-snapshot-20121101:1.5
	sid-snapshot-20121001:1.5
	sid-snapshot-20120901:1.5
	gdb_7_5-branch:1.5.0.56
	sid-snapshot-20120801:1.5
	sid-snapshot-20120701:1.5
	sid-snapshot-20120601:1.5
	sid-snapshot-20120501:1.5
	sid-snapshot-20120401:1.5
	gdb_7_4-branch:1.5.0.54
	sid-snapshot-20120301:1.5
	sid-snapshot-20120201:1.5
	sid-snapshot-20120101:1.5
	sid-snapshot-20111201:1.5
	sid-snapshot-20111101:1.5
	sid-snapshot-20111001:1.5
	sid-snapshot-20110901:1.5
	gdb_7_3-branch:1.5.0.52
	sid-snapshot-20110801:1.5
	sid-snapshot-20110701:1.5
	sid-snapshot-20110601:1.5
	sid-snapshot-20110501:1.5
	sid-snapshot-20110401:1.5
	sid-snapshot-20110301:1.5
	sid-snapshot-20110201:1.5
	sid-snapshot-20110101:1.5
	sid-snapshot-20101201:1.5
	sid-snapshot-20101101:1.5
	sid-snapshot-20101001:1.5
	sid-snapshot-20100901:1.5
	sid-snapshot-20100801:1.5
	sid-snapshot-20100701:1.5
	sid-snapshot-20100601:1.5
	sid-snapshot-20100501:1.5
	sid-snapshot-20100401:1.5
	sid-snapshot-20100301:1.5
	gdb_7_1-branch:1.5.0.50
	gdb_7_0-branch:1.5.0.48
	sid-snapshot-20100201:1.5
	sid-snapshot-20100101:1.5
	sid-snapshot-20091201:1.5
	sid-snapshot-20091101:1.5
	sid-snapshot-20091001:1.5
	arc-sim-20090309:1.5
	sid-snapshot-20090901:1.5
	sid-snapshot-20090801:1.5
	sid-snapshot-20090701:1.5
	sid-snapshot-20090601:1.5
	sid-snapshot-20090501:1.5
	kevinb-pre-tcl8_5_7_merge:1.5
	sid-snapshot-20090401:1.5
	arc-insight_6_8-branch:1.5.0.46
	arc-insight_6_8-branchpoint:1.5
	insight_6_8-branch:1.5.0.44
	insight_6_8-branchpoint:1.5
	sid-snapshot-20090301:1.5
	sid-snapshot-20090201:1.5
	sid-snapshot-20090101:1.5
	sid-snapshot-20081201:1.5
	sid-snapshot-20081101:1.5
	sid-snapshot-20081001:1.5
	sid-snapshot-20080901:1.5
	sid-snapshot-20080801:1.5
	sid-snapshot-20080701:1.5
	sid-snapshot-20080601:1.5
	sid-snapshot-20080501:1.5
	sid-snapshot-20080403:1.5
	sid-snapshot-20080401:1.5
	gdb_6_8-branch:1.5.0.42
	sid-snapshot-20080301:1.5
	sid-snapshot-20080201:1.5
	sid-snapshot-20080101:1.5
	sid-snapshot-20071201:1.5
	sid-snapshot-20071101:1.5
	sid-snapshot-20071001:1.5
	insight_6_6-20070208-release:1.5
	gdb_6_6-branch:1.5.0.40
	gdb_6_6-2006-11-15-branchpoint:1.5
	insight_6_5-20061003-release:1.5
	gdb_6_5-branch:1.5.0.38
	gdb_6_5-2006-05-14-branchpoint:1.5
	readline_5_1-import-branch:1.5.0.36
	readline_5_1-import-branchpoint:1.5
	gdb_6_4-branch:1.5.0.34
	gdb_6_4-2005-11-01-branchpoint:1.5
	msnyder-tracepoint-checkpoint-branch:1.5.0.32
	msnyder-tracepoint-checkpoint-branchpoint:1.5
	gdb_6_1-2004-04-05-release:1.5
	ezannoni_pie-20040323-branch:1.5.0.30
	ezannoni_pie-20040323-branchpoint:1.5
	cagney_tramp-20040321-mergepoint:1.5
	cagney_tramp-20040309-branch:1.5.0.28
	cagney_tramp-20040309-branchpoint:1.5
	gdb_6_1-branch:1.5.0.26
	gdb_6_1-2004-03-01-gmt-branchpoint:1.5
	drow-cplus-merge-20040208:1.5
	carlton_dictionary-20040126-merge:1.5
	drow-cplus-merge-20040113:1.5
	drow-cplus-merge-20031224:1.5
	drow-cplus-merge-20031220:1.5
	carlton_dictionary-20031215-merge:1.5
	drow-cplus-merge-20031214:1.5
	carlton-dictionary-20031111-merge:1.5
	gdb_6_0-2003-10-04-release:1.5
	carlton_dictionary-20030917-merge:1.5
	ezannoni_pie-20030916-branchpoint:1.5
	ezannoni_pie-20030916-branch:1.5.0.24
	cagney_x86i386-20030821-branch:1.5.0.22
	cagney_x86i386-20030821-branchpoint:1.5
	carlton_dictionary-20030805-merge:1.5
	carlton_dictionary-20030627-merge:1.5
	gdb_6_0-branch:1.5.0.20
	gdb_6_0-2003-06-23-branchpoint:1.5
	cagney_convert-20030606-branch:1.5.0.18
	cagney_convert-20030606-branchpoint:1.5
	cagney_writestrings-20030508-branch:1.5.0.16
	cagney_writestrings-20030508-branchpoint:1.5
	carlton_dictionary-20030523-merge:1.5
	cagney_fileio-20030521-branch:1.5.0.14
	cagney_fileio-20030521-branchpoint:1.5
	carlton_dictionary-20030430-merge:1.5
	carlton_dictionary-20030416-merge:1.5
	cagney_frameaddr-20030409-mergepoint:1.5
	cagney_frameaddr-20030403-branchpoint:1.5
	cagney_frameaddr-20030403-branch:1.5.0.12
	cagney_framebase-20030330-mergepoint:1.5
	cagney_framebase-20030326-branch:1.5.0.10
	cagney_framebase-20030326-branchpoint:1.5
	cagney_lazyid-20030317-branch:1.5.0.8
	cagney_lazyid-20030317-branchpoint:1.5
	offbyone-20030313-branch:1.5.0.6
	offbyone-20030313-branchpoint:1.5
	carlton_dictionary-20030305-merge:1.5
	cagney_offbyone-20030303-branch:1.5.0.4
	cagney_offbyone-20030303-branchpoint:1.5
	carlton_dictionary-20030207-merge:1.5
	interps-20030202-branch:1.5.0.2
	interps-20030202-branchpoint:1.5
	TCL8_4_1:1.1.1.3
	cagney-unwind-20030108-branch:1.4.0.2
	cagney-unwind-20030108-branchpoint:1.4
	carlton_dictionary-20021223-merge:1.4
	gdb_5_3-2002-12-12-release:1.2
	TCL_8_4_1:1.1.1.3
	carlton_dictionary-20021115-merge:1.3
	kseitz_interps-20021105-merge:1.3
	kseitz_interps-20021103-merge:1.3
	drow-cplus-merge-20021020:1.3
	drow-cplus-merge-20021025:1.3
	carlton_dictionary-20021025-merge:1.3
	carlton_dictionary-20021011-merge:1.3
	drow-cplus-branch:1.3.0.4
	drow-cplus-branchpoint:1.3
	kseitz_interps-20020930-merge:1.3
	carlton_dictionary-20020927-merge:1.3
	tcltk840-20020924-branch:1.3.0.2
	tcltk840-20020924-branchpoint:1.3
	TCL_8_4_0:1.1.1.3
	carlton_dictionary-branch:1.2.0.16
	carlton_dictionary-20020920-branchpoint:1.2
	sid-20020905-branchpoint:1.2
	sid-20020905-branch:1.2.0.14
	gdb_5_3-branch:1.2.0.12
	gdb_5_3-2002-09-04-branchpoint:1.2
	kseitz_interps-20020829-merge:1.2
	cagney_sysregs-20020825-branch:1.2.0.10
	cagney_sysregs-20020825-branchpoint:1.2
	readline_4_3-import-branch:1.2.0.8
	readline_4_3-import-branchpoint:1.2
	gdb_5_2_1-2002-07-23-release:1.2
	kseitz_interps-20020528-branch:1.2.0.6
	kseitz_interps-20020528-branchpoint:1.2
	cagney_regbuf-20020515-branch:1.2.0.4
	cagney_regbuf-20020515-branchpoint:1.2
	gdb_5_2-2002-04-29-release:1.2
	gdb_5_2-branch:1.2.0.2
	gdb_5_2-2002-03-03-branchpoint:1.2
	gdb_5_1_1-2002-01-24-release:1.1.1.1
	cygnus_cvs_20020108_pre:1.2
	gdb_5_1_0_1-2002-01-03-branch:1.1.1.1.0.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.1.1.1
	gdb_5_1-2001-11-21-release:1.1.1.1
	gdb_s390-2001-09-26-branch:1.1.1.1.0.6
	gdb_s390-2001-09-26-branchpoint:1.1.1.1
	TCL_8_3:1.1.1.2
	NET:1.1.1
	gdb_5_1-2001-07-29-branch:1.1.1.1.0.4
	gdb_5_1-2001-07-29-branchpoint:1.1.1.1
	insight-precleanup-2001-01-01:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	dejagnu-2000-02-04:1.1.1.1
	dejagnu-2000-01-31:1.1.1.1
	dejagnu-2000-01-24:1.1.1.1
	dejagnu-2000-01-17:1.1.1.1
	dejagnu-2000-01-10:1.1.1.1
	dejagnu-2000-01-04:1.1.1.1
	dejagnu-1999-12-21:1.1.1.1
	dejagnu-1999-12-13:1.1.1.1
	dejagnu-1999-12-07:1.1.1.1
	dejagnu-1999-12-06:1.1.1.1
	dejagnu-1999-11-15:1.1.1.1
	dejagnu-1999-11-08:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.5
date	2003.01.21.19.40.16;	author hunt;	state Exp;
branches;
next	1.4;

1.4
date	2002.11.26.19.48.02;	author hunt;	state Exp;
branches;
next	1.3;

1.3
date	2002.09.24.18.37.08;	author kseitz;	state Exp;
branches
	1.3.2.1
	1.3.4.1;
next	1.2;

1.2
date	2001.09.09.23.56.08;	author irox;	state Exp;
branches
	1.2.16.1;
next	1.1;

1.1
date	99.11.09.01.28.44;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.3.2.1
date	2002.09.27.21.49.11;	author kseitz;	state Exp;
branches;
next	;

1.3.4.1
date	2003.12.14.20.28.50;	author drow;	state Exp;
branches;
next	;

1.2.16.1
date	2002.12.23.19.40.44;	author carlton;	state Exp;
branches;
next	1.2.16.2;

1.2.16.2
date	2003.02.07.19.18.20;	author carlton;	state Exp;
branches;
next	;

1.1.1.1
date	99.11.09.01.28.44;	author jsm;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2001.09.09.22.40.59;	author irox;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.09.24.19.56.40;	author kseitz;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Updated to tcl 8.4.1
@
text
@# Commands covered:  source
#
# This file contains a collection of tests for one or more of the Tcl
# built-in commands.  Sourcing this file into Tcl runs the tests and
# generates output for errors.  No output means no errors were found.
#
# Copyright (c) 1991-1993 The Regents of the University of California.
# Copyright (c) 1994-1996 Sun Microsystems, Inc.
# Copyright (c) 1998-2000 by Scriptics Corporation.
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
# RCS: @@(#) $Id: source.test,v 1.8 2002/07/05 10:38:43 dkf Exp $

if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest
    namespace import -force ::tcltest::*
}

set sourcefile [makeFile "" source.file]
test source-1.1 {source command} {
    set x "old x value"
    set y "old y value"
    set z "old z value"
    makeFile {
	set x 22
	set y 33
	set z 44
    } source.file
    source $sourcefile
    list $x $y $z
} {22 33 44}
test source-1.2 {source command} {
    makeFile {list result} source.file
    source $sourcefile
} result
test source-1.3 {source command} {
    set y {\ }

    set fd [open $sourcefile w]
    fconfigure $fd -translation lf
    puts -nonewline $fd "list a b c "
    puts $fd [string index $y 0]
    puts $fd "d e f"
    close $fd

    source $sourcefile
} {a b c d e f}

test source-2.3 {source error conditions} {
    makeFile {
	set x 146
	error "error in sourced file"
	set y $x
    } source.file
    list [catch {source $sourcefile} msg] $msg $errorInfo
} [list 1 {error in sourced file} "error in sourced file
    while executing
\"error \"error in sourced file\"\"
    (file \"$sourcefile\" line 3)
    invoked from within
\"source \$sourcefile\""]
test source-2.4 {source error conditions} {
    makeFile {break} source.file
    catch {source $sourcefile}
} 3
test source-2.5 {source error conditions} {
    makeFile {continue} source.file
    catch {source $sourcefile}
} 4
test source-2.6 {source error conditions} {
    normalizeMsg [list [catch {source _non_existent_} msg] $msg $errorCode]
} {1 {couldn't read file "_non_existent_": no such file or directory} {posix enoent {no such file or directory}}}

test source-3.1 {return in middle of source file} {
    makeFile {
	set x new-x
	return allDone
	set y new-y
    } source.file
    set x old-x
    set y old-y
    set z [source $sourcefile]
    list $x $y $z
} {new-x old-y allDone}
test source-3.2 {return with special code etc.} {
    makeFile {
	set x new-x
	return -code break "Silly result"
	set y new-y
    } source.file
    list [catch {source $sourcefile} msg] $msg
} {3 {Silly result}}
test source-3.3 {return with special code etc.} {
    makeFile {
	set x new-x
	return -code error "Simulated error"
	set y new-y
    } source.file
    list [catch {source $sourcefile} msg] $msg $errorInfo $errorCode
} {1 {Simulated error} {Simulated error
    while executing
"source $sourcefile"} NONE}
test source-3.4 {return with special code etc.} {
    makeFile {
	set x new-x
	return -code error -errorinfo "Simulated errorInfo stuff"
	set y new-y
    } source.file
    list [catch {source $sourcefile} msg] $msg $errorInfo $errorCode
} {1 {} {Simulated errorInfo stuff
    invoked from within
"source $sourcefile"} NONE}
test source-3.5 {return with special code etc.} {
    makeFile {
	set x new-x
	return -code error -errorinfo "Simulated errorInfo stuff" \
		-errorcode {a b c}
	set y new-y
    } source.file
    list [catch {source $sourcefile} msg] $msg $errorInfo $errorCode
} {1 {} {Simulated errorInfo stuff
    invoked from within
"source $sourcefile"} {a b c}}

# Test for the Macintosh specfic features of the source command
test source-4.1 {source error conditions} {macOnly} {
    list [catch {source -rsrc _no_exist_} msg] $msg
} [list 1 "The resource \"_no_exist_\" could not be loaded from application."]
test source-4.2 {source error conditions} {macOnly} {
    list [catch {source -rsrcid bad_id} msg] $msg
} [list 1 "expected integer but got \"bad_id\""]
test source-4.3 {source error conditions} {macOnly} {
    list [catch {source -rsrc rsrcName fileName extra} msg] $msg
} {1 {wrong # args: should be "source fileName" or "source -rsrc name ?fileName?" or "source -rsrcid id ?fileName?"}}
test source-4.4 {source error conditions} {macOnly} {
    list [catch {source non_switch rsrcName} msg] $msg
} {1 {bad argument: should be "source fileName" or "source -rsrc name ?fileName?" or "source -rsrcid id ?fileName?"}}
test source-4.5 {source error conditions} {macOnly} {
    list [catch {source -bad_switch argument} msg] $msg
} {1 {bad argument: should be "source fileName" or "source -rsrc name ?fileName?" or "source -rsrcid id ?fileName?"}}
test source-5.1 {source resource files} {macOnly} {
    list [catch {source -rsrc rsrcName bad_file} msg] $msg
} [list 1 "Error finding the file: \"bad_file\"."]
test source-5.2 {source resource files} {macOnly} {
    makeFile {return} source.file
    list [catch {source -rsrc rsrcName $sourcefile} msg] $msg
} [list 1 "Error reading the file: \"$sourcefile\"."]
test source-5.3 {source resource files} {macOnly} {
    testWriteTextResource -rsrc rsrcName -file rsrc.file {set msg2 ok; return}
    set result [catch {source -rsrc rsrcName rsrc.file} msg]
    removeFile rsrc.file
    list $msg2 $result $msg
} [list ok 0 {}]
test source-5.4 {source resource files} {macOnly} {
    catch {unset msg2}
    testWriteTextResource -rsrc fileRsrcName -file rsrc.file {set msg2 ok; return}
    source -rsrc fileRsrcName rsrc.file
    set result [catch {source -rsrc fileRsrcName} msg]    
    removeFile rsrc.file
    list $msg2 $result $msg
} [list ok 1 {The resource "fileRsrcName" could not be loaded from application.}]
test source-5.5 {source resource files} {macOnly} {
    testWriteTextResource -rsrcid 200 -file rsrc.file {set msg2 hello; set msg3 bye}
    set result [catch {source -rsrcid 200 rsrc.file} msg]
    removeFile rsrc.file
    list $msg2 $result $msg
} [list hello 0 bye]
test source-5.6 {source resource files} {macOnly} {
    testWriteTextResource -rsrcid 200 -file rsrc.file {set msg2 hello; error bad; set msg3 bye}
    set result [catch {source -rsrcid 200 rsrc.file} msg]
    removeFile rsrc.file
    list $msg2 $result $msg
} [list hello 1 bad]

test source-6.1 {source is binary ok} {
    set x {}
    makeFile [list set x "a b\0c"] source.file
    source $sourcefile
    string length $x
} 5
test source-6.2 {source skips everything after Ctrl-Z: Bug 2040} {
    set x {}
    makeFile [list set x "ab\32c"] source.file
    source $sourcefile
    string length $x
} 2

# cleanup
catch {::tcltest::removeFile source.file}
::tcltest::cleanupTests
return
@


1.4
log
@touched all sources to ease next import
@
text
@d9 1
a9 1
# Copyright (c) 1998-1999 by Scriptics Corporation.
d14 1
a14 1
# RCS: @@(#) $Id: source.test,v 1.6.8.2 2000/09/15 16:57:34 spolk Exp $
d21 1
d31 1
a31 1
    source source.file
d36 1
a36 1
    source source.file
d41 1
a41 1
    set fd [open source.file w]
d48 1
a48 1
    source source.file
d57 2
a58 2
    list [catch {source source.file} msg] $msg $errorInfo
} {1 {error in sourced file} {error in sourced file
d60 2
a61 2
"error "error in sourced file""
    (file "source.file" line 3)
d63 1
a63 1
"source source.file"}}
d66 1
a66 1
    catch {source source.file}
d70 1
a70 1
    catch {source source.file}
d84 1
a84 1
    set z [source source.file]
d93 1
a93 1
    list [catch {source source.file} msg] $msg
d101 1
a101 1
    list [catch {source source.file} msg] $msg $errorInfo $errorCode
d104 1
a104 1
"source source.file"} NONE}
d111 1
a111 1
    list [catch {source source.file} msg] $msg $errorInfo $errorCode
d114 1
a114 1
"source source.file"} NONE}
d122 1
a122 1
    list [catch {source source.file} msg] $msg $errorInfo $errorCode
d125 1
a125 1
"source source.file"} {a b c}}
d148 2
a149 2
    list [catch {source -rsrc rsrcName source.file} msg] $msg
} [list 1 "Error reading the file: \"source.file\"."]
d180 1
a180 1
    source source.file
d183 6
a193 13













@


1.3
log
@touched all sources to ease next import
@
text
@@


1.3.4.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@d9 1
a9 1
# Copyright (c) 1998-2000 by Scriptics Corporation.
d14 1
a14 1
# RCS: @@(#) $Id: source.test,v 1.8 2002/07/05 10:38:43 dkf Exp $
a20 1
set sourcefile [makeFile "" source.file]
d30 1
a30 1
    source $sourcefile
d35 1
a35 1
    source $sourcefile
d40 1
a40 1
    set fd [open $sourcefile w]
d47 1
a47 1
    source $sourcefile
d56 2
a57 2
    list [catch {source $sourcefile} msg] $msg $errorInfo
} [list 1 {error in sourced file} "error in sourced file
d59 2
a60 2
\"error \"error in sourced file\"\"
    (file \"$sourcefile\" line 3)
d62 1
a62 1
\"source \$sourcefile\""]
d65 1
a65 1
    catch {source $sourcefile}
d69 1
a69 1
    catch {source $sourcefile}
d83 1
a83 1
    set z [source $sourcefile]
d92 1
a92 1
    list [catch {source $sourcefile} msg] $msg
d100 1
a100 1
    list [catch {source $sourcefile} msg] $msg $errorInfo $errorCode
d103 1
a103 1
"source $sourcefile"} NONE}
d110 1
a110 1
    list [catch {source $sourcefile} msg] $msg $errorInfo $errorCode
d113 1
a113 1
"source $sourcefile"} NONE}
d121 1
a121 1
    list [catch {source $sourcefile} msg] $msg $errorInfo $errorCode
d124 1
a124 1
"source $sourcefile"} {a b c}}
d147 2
a148 2
    list [catch {source -rsrc rsrcName $sourcefile} msg] $msg
} [list 1 "Error reading the file: \"$sourcefile\"."]
d179 1
a179 1
    source $sourcefile
a181 6
test source-6.2 {source skips everything after Ctrl-Z: Bug 2040} {
    set x {}
    makeFile [list set x "ab\32c"] source.file
    source $sourcefile
    string length $x
} 2
d187 13
@


1.3.2.1
log
@Import Tcl 8.4.0 into mainline-like sources. Simplest Tcl build possible for
cygwin.
@
text
@d9 1
a9 1
# Copyright (c) 1998-2000 by Scriptics Corporation.
d14 1
a14 1
# RCS: @@(#) $Id: source.test,v 1.8 2002/07/05 10:38:43 dkf Exp $
a20 1
set sourcefile [makeFile "" source.file]
d30 1
a30 1
    source $sourcefile
d35 1
a35 1
    source $sourcefile
d40 1
a40 1
    set fd [open $sourcefile w]
d47 1
a47 1
    source $sourcefile
d56 2
a57 2
    list [catch {source $sourcefile} msg] $msg $errorInfo
} [list 1 {error in sourced file} "error in sourced file
d59 2
a60 2
\"error \"error in sourced file\"\"
    (file \"$sourcefile\" line 3)
d62 1
a62 1
\"source \$sourcefile\""]
d65 1
a65 1
    catch {source $sourcefile}
d69 1
a69 1
    catch {source $sourcefile}
d83 1
a83 1
    set z [source $sourcefile]
d92 1
a92 1
    list [catch {source $sourcefile} msg] $msg
d100 1
a100 1
    list [catch {source $sourcefile} msg] $msg $errorInfo $errorCode
d103 1
a103 1
"source $sourcefile"} NONE}
d110 1
a110 1
    list [catch {source $sourcefile} msg] $msg $errorInfo $errorCode
d113 1
a113 1
"source $sourcefile"} NONE}
d121 1
a121 1
    list [catch {source $sourcefile} msg] $msg $errorInfo $errorCode
d124 1
a124 1
"source $sourcefile"} {a b c}}
d147 2
a148 2
    list [catch {source -rsrc rsrcName $sourcefile} msg] $msg
} [list 1 "Error reading the file: \"$sourcefile\"."]
d179 1
a179 1
    source $sourcefile
a181 6
test source-6.2 {source skips everything after Ctrl-Z: Bug 2040} {
    set x {}
    makeFile [list set x "ab\32c"] source.file
    source $sourcefile
    string length $x
} 2
d187 13
@


1.2
log
@touched all Tcl files to ease next import.
@
text
@@


1.2.16.1
log
@2002-12-23  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021223-merge.
@
text
@@


1.2.16.2
log
@2003-02-07  David Carlton  <carlton@@math.stanford.edu>

	* Merge with mainline; tag is carlton_dictionary-20030207-merge.
@
text
@d9 1
a9 1
# Copyright (c) 1998-2000 by Scriptics Corporation.
a20 1
set sourcefile [makeFile "" source.file]
d30 1
a30 1
    source $sourcefile
d35 1
a35 1
    source $sourcefile
d40 1
a40 1
    set fd [open $sourcefile w]
d47 1
a47 1
    source $sourcefile
d56 2
a57 2
    list [catch {source $sourcefile} msg] $msg $errorInfo
} [list 1 {error in sourced file} "error in sourced file
d59 2
a60 2
\"error \"error in sourced file\"\"
    (file \"$sourcefile\" line 3)
d62 1
a62 1
\"source \$sourcefile\""]
d65 1
a65 1
    catch {source $sourcefile}
d69 1
a69 1
    catch {source $sourcefile}
d83 1
a83 1
    set z [source $sourcefile]
d92 1
a92 1
    list [catch {source $sourcefile} msg] $msg
d100 1
a100 1
    list [catch {source $sourcefile} msg] $msg $errorInfo $errorCode
d103 1
a103 1
"source $sourcefile"} NONE}
d110 1
a110 1
    list [catch {source $sourcefile} msg] $msg $errorInfo $errorCode
d113 1
a113 1
"source $sourcefile"} NONE}
d121 1
a121 1
    list [catch {source $sourcefile} msg] $msg $errorInfo $errorCode
d124 1
a124 1
"source $sourcefile"} {a b c}}
d147 2
a148 2
    list [catch {source -rsrc rsrcName $sourcefile} msg] $msg
} [list 1 "Error reading the file: \"$sourcefile\"."]
d179 1
a179 1
    source $sourcefile
a181 6
test source-6.2 {source skips everything after Ctrl-Z: Bug 2040} {
    set x {}
    makeFile [list set x "ab\32c"] source.file
    source $sourcefile
    string length $x
} 2
d187 13
@


1.1
log
@Initial revision
@
text
@d9 1
d14 1
a14 1
# RCS: @@(#) $Id: source.test,v 1.2 1998/09/14 18:40:13 stanton Exp $
d16 4
a19 1
if {[string compare test [info procs test]] == 1} then {source defs}
d37 9
d47 2
a48 2
# The mac version of source returns a different result for
# the next two tests.
a49 13
if {$tcl_platform(platform) == "macintosh"} {
    set retMsg1 {1 {wrong # args: should be "source fileName" or "source -rsrc name ?fileName?" or "source -rsrcid id ?fileName?"}}
    set retMsg2 {1 {bad argument: should be "source fileName" or "source -rsrc name ?fileName?" or "source -rsrcid id ?fileName?"}}
} else {
    set retMsg1 {1 {wrong # args: should be "source fileName"}}
    set retMsg2 {1 {wrong # args: should be "source fileName"}}
}
test source-2.1 {source error conditions} {
    list [catch {source} msg] $msg
} $retMsg1
test source-2.2 {source error conditions} {
    list [catch {source a b} msg] $msg
} $retMsg2
d135 1
a135 1
} $retMsg1
d138 1
a138 1
} $retMsg2
d141 1
a141 1
} $retMsg2
d183 15
a197 1
catch {removeFile source.file}
a198 1
# Generate null final value
a199 1
concat {}
@


1.1.1.1
log
@import dejagnu-1999-11-08 snapshot
@
text
@@


1.1.1.2
log
@Tcl 8.3 upgrade
@
text
@a8 1
# Copyright (c) 1998-1999 by Scriptics Corporation.
d13 1
a13 1
# RCS: @@(#) $Id: source.test,v 1.6.8.2 2000/09/15 16:57:34 spolk Exp $
d15 1
a15 4
if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest
    namespace import -force ::tcltest::*
}
a32 2
test source-1.3 {source command} {
    set y {\ }
d34 2
a35 9
    set fd [open source.file w]
    fconfigure $fd -translation lf
    puts -nonewline $fd "list a b c "
    puts $fd [string index $y 0]
    puts $fd "d e f"
    close $fd

    source source.file
} {a b c d e f}
d37 13
d135 1
a135 1
} {1 {wrong # args: should be "source fileName" or "source -rsrc name ?fileName?" or "source -rsrcid id ?fileName?"}}
d138 1
a138 1
} {1 {bad argument: should be "source fileName" or "source -rsrc name ?fileName?" or "source -rsrcid id ?fileName?"}}
d141 1
a141 1
} {1 {bad argument: should be "source fileName" or "source -rsrc name ?fileName?" or "source -rsrcid id ?fileName?"}}
d183 1
a183 15
# cleanup
catch {::tcltest::removeFile source.file}
::tcltest::cleanupTests
return











d185 1
d187 1
@


1.1.1.3
log
@import tcl 8.4.0
@
text
@d9 1
a9 1
# Copyright (c) 1998-2000 by Scriptics Corporation.
d14 1
a14 1
# RCS: @@(#) $Id: source.test,v 1.8 2002/07/05 10:38:43 dkf Exp $
a20 1
set sourcefile [makeFile "" source.file]
d30 1
a30 1
    source $sourcefile
d35 1
a35 1
    source $sourcefile
d40 1
a40 1
    set fd [open $sourcefile w]
d47 1
a47 1
    source $sourcefile
d56 2
a57 2
    list [catch {source $sourcefile} msg] $msg $errorInfo
} [list 1 {error in sourced file} "error in sourced file
d59 2
a60 2
\"error \"error in sourced file\"\"
    (file \"$sourcefile\" line 3)
d62 1
a62 1
\"source \$sourcefile\""]
d65 1
a65 1
    catch {source $sourcefile}
d69 1
a69 1
    catch {source $sourcefile}
d83 1
a83 1
    set z [source $sourcefile]
d92 1
a92 1
    list [catch {source $sourcefile} msg] $msg
d100 1
a100 1
    list [catch {source $sourcefile} msg] $msg $errorInfo $errorCode
d103 1
a103 1
"source $sourcefile"} NONE}
d110 1
a110 1
    list [catch {source $sourcefile} msg] $msg $errorInfo $errorCode
d113 1
a113 1
"source $sourcefile"} NONE}
d121 1
a121 1
    list [catch {source $sourcefile} msg] $msg $errorInfo $errorCode
d124 1
a124 1
"source $sourcefile"} {a b c}}
d147 2
a148 2
    list [catch {source -rsrc rsrcName $sourcefile} msg] $msg
} [list 1 "Error reading the file: \"$sourcefile\"."]
d179 1
a179 1
    source $sourcefile
a181 6
test source-6.2 {source skips everything after Ctrl-Z: Bug 2040} {
    set x {}
    makeFile [list set x "ab\32c"] source.file
    source $sourcefile
    string length $x
} 2
d187 13
@


