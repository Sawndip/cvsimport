head	1.5;
access;
symbols
	sid-snapshot-20180601:1.5
	sid-snapshot-20180501:1.5
	sid-snapshot-20180401:1.5
	sid-snapshot-20180301:1.5
	sid-snapshot-20180201:1.5
	sid-snapshot-20180101:1.5
	sid-snapshot-20171201:1.5
	sid-snapshot-20171101:1.5
	sid-snapshot-20171001:1.5
	sid-snapshot-20170901:1.5
	sid-snapshot-20170801:1.5
	sid-snapshot-20170701:1.5
	sid-snapshot-20170601:1.5
	sid-snapshot-20170501:1.5
	sid-snapshot-20170401:1.5
	sid-snapshot-20170301:1.5
	sid-snapshot-20170201:1.5
	sid-snapshot-20170101:1.5
	sid-snapshot-20161201:1.5
	sid-snapshot-20161101:1.5
	sid-snapshot-20160901:1.5
	sid-snapshot-20160801:1.5
	sid-snapshot-20160701:1.5
	sid-snapshot-20160601:1.5
	sid-snapshot-20160501:1.5
	sid-snapshot-20160401:1.5
	sid-snapshot-20160301:1.5
	sid-snapshot-20160201:1.5
	sid-snapshot-20160101:1.5
	sid-snapshot-20151201:1.5
	sid-snapshot-20151101:1.5
	sid-snapshot-20151001:1.5
	sid-snapshot-20150901:1.5
	sid-snapshot-20150801:1.5
	sid-snapshot-20150701:1.5
	sid-snapshot-20150601:1.5
	sid-snapshot-20150501:1.5
	sid-snapshot-20150401:1.5
	sid-snapshot-20150301:1.5
	sid-snapshot-20150201:1.5
	sid-snapshot-20150101:1.5
	sid-snapshot-20141201:1.5
	sid-snapshot-20141101:1.5
	sid-snapshot-20141001:1.5
	sid-snapshot-20140901:1.5
	sid-snapshot-20140801:1.5
	sid-snapshot-20140701:1.5
	sid-snapshot-20140601:1.5
	sid-snapshot-20140501:1.5
	sid-snapshot-20140401:1.5
	sid-snapshot-20140301:1.5
	sid-snapshot-20140201:1.5
	sid-snapshot-20140101:1.5
	sid-snapshot-20131201:1.5
	sid-snapshot-20131101:1.5
	sid-snapshot-20131001:1.5
	sid-snapshot-20130901:1.5
	sid-snapshot-20130801:1.5
	sid-snapshot-20130701:1.5
	sid-snapshot-20130601:1.5
	insight_7_6-2013-04-10-branchpoint:1.5
	gdb_7_6-branch:1.5.0.58
	sid-snapshot-20130501:1.5
	sid-snapshot-20130401:1.5
	sid-snapshot-20130301:1.5
	sid-snapshot-20130201:1.5
	sid-snapshot-20130101:1.5
	sid-snapshot-20121201:1.5
	sid-snapshot-20121101:1.5
	sid-snapshot-20121001:1.5
	sid-snapshot-20120901:1.5
	gdb_7_5-branch:1.5.0.56
	sid-snapshot-20120801:1.5
	sid-snapshot-20120701:1.5
	sid-snapshot-20120601:1.5
	sid-snapshot-20120501:1.5
	sid-snapshot-20120401:1.5
	gdb_7_4-branch:1.5.0.54
	sid-snapshot-20120301:1.5
	sid-snapshot-20120201:1.5
	sid-snapshot-20120101:1.5
	sid-snapshot-20111201:1.5
	sid-snapshot-20111101:1.5
	sid-snapshot-20111001:1.5
	sid-snapshot-20110901:1.5
	gdb_7_3-branch:1.5.0.52
	sid-snapshot-20110801:1.5
	sid-snapshot-20110701:1.5
	sid-snapshot-20110601:1.5
	sid-snapshot-20110501:1.5
	sid-snapshot-20110401:1.5
	sid-snapshot-20110301:1.5
	sid-snapshot-20110201:1.5
	sid-snapshot-20110101:1.5
	sid-snapshot-20101201:1.5
	sid-snapshot-20101101:1.5
	sid-snapshot-20101001:1.5
	sid-snapshot-20100901:1.5
	sid-snapshot-20100801:1.5
	sid-snapshot-20100701:1.5
	sid-snapshot-20100601:1.5
	sid-snapshot-20100501:1.5
	sid-snapshot-20100401:1.5
	sid-snapshot-20100301:1.5
	gdb_7_1-branch:1.5.0.50
	gdb_7_0-branch:1.5.0.48
	sid-snapshot-20100201:1.5
	sid-snapshot-20100101:1.5
	sid-snapshot-20091201:1.5
	sid-snapshot-20091101:1.5
	sid-snapshot-20091001:1.5
	arc-sim-20090309:1.5
	sid-snapshot-20090901:1.5
	sid-snapshot-20090801:1.5
	sid-snapshot-20090701:1.5
	sid-snapshot-20090601:1.5
	sid-snapshot-20090501:1.5
	kevinb-pre-tcl8_5_7_merge:1.5
	sid-snapshot-20090401:1.5
	arc-insight_6_8-branch:1.5.0.46
	arc-insight_6_8-branchpoint:1.5
	insight_6_8-branch:1.5.0.44
	insight_6_8-branchpoint:1.5
	sid-snapshot-20090301:1.5
	sid-snapshot-20090201:1.5
	sid-snapshot-20090101:1.5
	sid-snapshot-20081201:1.5
	sid-snapshot-20081101:1.5
	sid-snapshot-20081001:1.5
	sid-snapshot-20080901:1.5
	sid-snapshot-20080801:1.5
	sid-snapshot-20080701:1.5
	sid-snapshot-20080601:1.5
	sid-snapshot-20080501:1.5
	sid-snapshot-20080403:1.5
	sid-snapshot-20080401:1.5
	gdb_6_8-branch:1.5.0.42
	sid-snapshot-20080301:1.5
	sid-snapshot-20080201:1.5
	sid-snapshot-20080101:1.5
	sid-snapshot-20071201:1.5
	sid-snapshot-20071101:1.5
	sid-snapshot-20071001:1.5
	insight_6_6-20070208-release:1.5
	gdb_6_6-branch:1.5.0.40
	gdb_6_6-2006-11-15-branchpoint:1.5
	insight_6_5-20061003-release:1.5
	gdb_6_5-branch:1.5.0.38
	gdb_6_5-2006-05-14-branchpoint:1.5
	readline_5_1-import-branch:1.5.0.36
	readline_5_1-import-branchpoint:1.5
	gdb_6_4-branch:1.5.0.34
	gdb_6_4-2005-11-01-branchpoint:1.5
	msnyder-tracepoint-checkpoint-branch:1.5.0.32
	msnyder-tracepoint-checkpoint-branchpoint:1.5
	gdb_6_1-2004-04-05-release:1.5
	ezannoni_pie-20040323-branch:1.5.0.30
	ezannoni_pie-20040323-branchpoint:1.5
	cagney_tramp-20040321-mergepoint:1.5
	cagney_tramp-20040309-branch:1.5.0.28
	cagney_tramp-20040309-branchpoint:1.5
	gdb_6_1-branch:1.5.0.26
	gdb_6_1-2004-03-01-gmt-branchpoint:1.5
	drow-cplus-merge-20040208:1.5
	carlton_dictionary-20040126-merge:1.5
	drow-cplus-merge-20040113:1.5
	drow-cplus-merge-20031224:1.5
	drow-cplus-merge-20031220:1.5
	carlton_dictionary-20031215-merge:1.5
	drow-cplus-merge-20031214:1.5
	carlton-dictionary-20031111-merge:1.5
	gdb_6_0-2003-10-04-release:1.5
	carlton_dictionary-20030917-merge:1.5
	ezannoni_pie-20030916-branchpoint:1.5
	ezannoni_pie-20030916-branch:1.5.0.24
	cagney_x86i386-20030821-branch:1.5.0.22
	cagney_x86i386-20030821-branchpoint:1.5
	carlton_dictionary-20030805-merge:1.5
	carlton_dictionary-20030627-merge:1.5
	gdb_6_0-branch:1.5.0.20
	gdb_6_0-2003-06-23-branchpoint:1.5
	cagney_convert-20030606-branch:1.5.0.18
	cagney_convert-20030606-branchpoint:1.5
	cagney_writestrings-20030508-branch:1.5.0.16
	cagney_writestrings-20030508-branchpoint:1.5
	carlton_dictionary-20030523-merge:1.5
	cagney_fileio-20030521-branch:1.5.0.14
	cagney_fileio-20030521-branchpoint:1.5
	carlton_dictionary-20030430-merge:1.5
	carlton_dictionary-20030416-merge:1.5
	cagney_frameaddr-20030409-mergepoint:1.5
	cagney_frameaddr-20030403-branchpoint:1.5
	cagney_frameaddr-20030403-branch:1.5.0.12
	cagney_framebase-20030330-mergepoint:1.5
	cagney_framebase-20030326-branch:1.5.0.10
	cagney_framebase-20030326-branchpoint:1.5
	cagney_lazyid-20030317-branch:1.5.0.8
	cagney_lazyid-20030317-branchpoint:1.5
	offbyone-20030313-branch:1.5.0.6
	offbyone-20030313-branchpoint:1.5
	carlton_dictionary-20030305-merge:1.5
	cagney_offbyone-20030303-branch:1.5.0.4
	cagney_offbyone-20030303-branchpoint:1.5
	carlton_dictionary-20030207-merge:1.5
	interps-20030202-branch:1.5.0.2
	interps-20030202-branchpoint:1.5
	TCL8_4_1:1.1.1.3
	cagney-unwind-20030108-branch:1.4.0.2
	cagney-unwind-20030108-branchpoint:1.4
	carlton_dictionary-20021223-merge:1.4
	gdb_5_3-2002-12-12-release:1.2
	TCL_8_4_1:1.1.1.3
	carlton_dictionary-20021115-merge:1.3
	kseitz_interps-20021105-merge:1.3
	kseitz_interps-20021103-merge:1.3
	drow-cplus-merge-20021020:1.3
	drow-cplus-merge-20021025:1.3
	carlton_dictionary-20021025-merge:1.3
	carlton_dictionary-20021011-merge:1.3
	drow-cplus-branch:1.3.0.4
	drow-cplus-branchpoint:1.3
	kseitz_interps-20020930-merge:1.3
	carlton_dictionary-20020927-merge:1.3
	tcltk840-20020924-branch:1.3.0.2
	tcltk840-20020924-branchpoint:1.3
	TCL_8_4_0:1.1.1.3
	carlton_dictionary-branch:1.2.0.16
	carlton_dictionary-20020920-branchpoint:1.2
	sid-20020905-branchpoint:1.2
	sid-20020905-branch:1.2.0.14
	gdb_5_3-branch:1.2.0.12
	gdb_5_3-2002-09-04-branchpoint:1.2
	kseitz_interps-20020829-merge:1.2
	cagney_sysregs-20020825-branch:1.2.0.10
	cagney_sysregs-20020825-branchpoint:1.2
	readline_4_3-import-branch:1.2.0.8
	readline_4_3-import-branchpoint:1.2
	gdb_5_2_1-2002-07-23-release:1.2
	kseitz_interps-20020528-branch:1.2.0.6
	kseitz_interps-20020528-branchpoint:1.2
	cagney_regbuf-20020515-branch:1.2.0.4
	cagney_regbuf-20020515-branchpoint:1.2
	gdb_5_2-2002-04-29-release:1.2
	gdb_5_2-branch:1.2.0.2
	gdb_5_2-2002-03-03-branchpoint:1.2
	gdb_5_1_1-2002-01-24-release:1.1.1.1
	cygnus_cvs_20020108_pre:1.2
	gdb_5_1_0_1-2002-01-03-branch:1.1.1.1.0.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.1.1.1
	gdb_5_1-2001-11-21-release:1.1.1.1
	gdb_s390-2001-09-26-branch:1.1.1.1.0.6
	gdb_s390-2001-09-26-branchpoint:1.1.1.1
	TCL_8_3:1.1.1.2
	NET:1.1.1
	gdb_5_1-2001-07-29-branch:1.1.1.1.0.4
	gdb_5_1-2001-07-29-branchpoint:1.1.1.1
	insight-precleanup-2001-01-01:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	dejagnu-2000-02-04:1.1.1.1
	dejagnu-2000-01-31:1.1.1.1
	dejagnu-2000-01-24:1.1.1.1
	dejagnu-2000-01-17:1.1.1.1
	dejagnu-2000-01-10:1.1.1.1
	dejagnu-2000-01-04:1.1.1.1
	dejagnu-1999-12-21:1.1.1.1
	dejagnu-1999-12-13:1.1.1.1
	dejagnu-1999-12-07:1.1.1.1
	dejagnu-1999-12-06:1.1.1.1
	dejagnu-1999-11-15:1.1.1.1
	dejagnu-1999-11-08:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.5
date	2003.01.21.19.40.14;	author hunt;	state Exp;
branches;
next	1.4;

1.4
date	2002.11.26.19.48.01;	author hunt;	state Exp;
branches;
next	1.3;

1.3
date	2002.09.24.18.37.07;	author kseitz;	state Exp;
branches
	1.3.2.1
	1.3.4.1;
next	1.2;

1.2
date	2001.09.09.23.56.08;	author irox;	state Exp;
branches
	1.2.16.1;
next	1.1;

1.1
date	99.11.09.01.28.44;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.3.2.1
date	2002.09.27.21.49.10;	author kseitz;	state Exp;
branches;
next	;

1.3.4.1
date	2003.12.14.20.28.49;	author drow;	state Exp;
branches;
next	;

1.2.16.1
date	2002.12.23.19.40.39;	author carlton;	state Exp;
branches;
next	1.2.16.2;

1.2.16.2
date	2003.02.07.19.18.18;	author carlton;	state Exp;
branches;
next	;

1.1.1.1
date	99.11.09.01.28.44;	author jsm;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2001.09.09.22.40.58;	author irox;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.09.24.19.56.35;	author kseitz;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Updated to tcl 8.4.1
@
text
@# This file tests the filename manipulation routines.
#
# This file contains a collection of tests for one or more of the Tcl
# built-in commands.  Sourcing this file into Tcl runs the tests and
# generates output for errors.  No output means no errors were found.
#
# Copyright (c) 1995-1996 Sun Microsystems, Inc.
# Copyright (c) 1999 by Scriptics Corporation.
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
# RCS: @@(#) $Id: fileName.test,v 1.26 2002/07/10 13:08:20 dkf Exp $

if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest
    namespace import -force ::tcltest::*
}

tcltest::testConstraint testsetplatform [string equal testsetplatform [info commands testsetplatform]]
tcltest::testConstraint testtranslatefilename [string equal testtranslatefilename [info commands testtranslatefilename]]

global env
if {[tcltest::testConstraint testsetplatform]} {
    set platform [testgetplatform]
}

test filename-1.1 {Tcl_GetPathType: unix} {testsetplatform} {
    testsetplatform unix
    file pathtype /
} absolute
test filename-1.2 {Tcl_GetPathType: unix} {testsetplatform} {
    testsetplatform unix
    file pathtype /foo
} absolute
test filename-1.3 {Tcl_GetPathType: unix} {testsetplatform} {
    testsetplatform unix
    file pathtype foo
} relative
test filename-1.4 {Tcl_GetPathType: unix} {testsetplatform} {
    testsetplatform unix
    file pathtype c:/foo
} relative
test filename-1.5 {Tcl_GetPathType: unix} {testsetplatform} {
    testsetplatform unix
    file pathtype ~
} absolute
test filename-1.6 {Tcl_GetPathType: unix} {testsetplatform} {
    testsetplatform unix
    file pathtype ~/foo
} absolute
test filename-1.7 {Tcl_GetPathType: unix} {testsetplatform} {
    testsetplatform unix
    file pathtype ~foo
} absolute
test filename-1.8 {Tcl_GetPathType: unix} {testsetplatform} {
    testsetplatform unix
    file pathtype ./~foo
} relative

test filename-2.1 {Tcl_GetPathType: mac, denerate names} {testsetplatform} {
    testsetplatform mac
    file pathtype /
} relative
test filename-2.2 {Tcl_GetPathType: mac, denerate names} {testsetplatform} {
    testsetplatform mac
    file pathtype /.
} relative
test filename-2.3 {Tcl_GetPathType: mac, denerate names} {testsetplatform} {
    testsetplatform mac
    file pathtype /..
} relative
test filename-2.4 {Tcl_GetPathType: mac, denerate names} {testsetplatform} {
    testsetplatform mac
    file pathtype //.//
} relative
test filename-2.5 {Tcl_GetPathType: mac, denerate names} {testsetplatform} {
    testsetplatform mac
    file pathtype //.//../.
} relative
test filename-2.6 {Tcl_GetPathType: mac, tilde names} {testsetplatform} {
    testsetplatform mac
    file pathtype ~
} absolute
test filename-2.7 {Tcl_GetPathType: mac, tilde names} {testsetplatform} {
    testsetplatform mac
    file pathtype ~:
} absolute
test filename-2.8 {Tcl_GetPathType: mac, tilde names} {testsetplatform} {
    testsetplatform mac
    file pathtype ~:foo
} absolute
test filename-2.9 {Tcl_GetPathType: mac, tilde names} {testsetplatform} {
    testsetplatform mac
    file pathtype ~/
} absolute
test filename-2.10 {Tcl_GetPathType: mac, tilde names} {testsetplatform} {
    testsetplatform mac
    file pathtype ~/foo
} absolute
test filename-2.11 {Tcl_GetPathType: mac, unix-style names} {testsetplatform} {
    testsetplatform mac
    file pathtype /foo
} absolute
test filename-2.12 {Tcl_GetPathType: mac, unix-style names} {testsetplatform} {
    testsetplatform mac
    file pathtype /./foo
} absolute
test filename-2.13 {Tcl_GetPathType: mac, unix-style names} {testsetplatform} {
    testsetplatform mac
    file pathtype /..//./foo
} absolute
test filename-2.14 {Tcl_GetPathType: mac, unix-style names} {testsetplatform} {
    testsetplatform mac
    file pathtype /foo/bar
} absolute
test filename-2.15 {Tcl_GetPathType: mac, unix-style names} {testsetplatform} {
    testsetplatform mac
    file pathtype foo/bar
} relative
test filename-2.16 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
    testsetplatform mac
    file pathtype :
} relative
test filename-2.17 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
    testsetplatform mac
    file pathtype :foo
} relative
test filename-2.18 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
    testsetplatform mac
    file pathtype foo:
} absolute
test filename-2.19 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
    testsetplatform mac
    file pathtype foo:bar
} absolute
test filename-2.20 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
    testsetplatform mac
    file pathtype :foo:bar
} relative
test filename-2.21 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
    testsetplatform mac
    file pathtype ::foo:bar
} relative
test filename-2.22 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
    testsetplatform mac
    file pathtype ~foo
} absolute
test filename-2.23 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
    testsetplatform mac
    file pathtype :~foo
} relative
test filename-2.24 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
    testsetplatform mac
    file pathtype ~foo:
} absolute
test filename-2.25 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
    testsetplatform mac
    file pathtype foo/bar:
} absolute
test filename-2.26 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
    testsetplatform mac
    file pathtype /foo:
} absolute
test filename-2.27 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
    testsetplatform mac
    file pathtype foo
} relative

test filename-3.1 {Tcl_GetPathType: windows} {testsetplatform} {
    testsetplatform windows
    file pathtype /
} volumerelative
test filename-3.2 {Tcl_GetPathType: windows} {testsetplatform} {
    testsetplatform windows
    file pathtype \\
} volumerelative
test filename-3.3 {Tcl_GetPathType: windows} {testsetplatform} {
    testsetplatform windows
    file pathtype /foo
} volumerelative
test filename-3.4 {Tcl_GetPathType: windows} {testsetplatform} {
    testsetplatform windows
    file pathtype \\foo
} volumerelative
test filename-3.5 {Tcl_GetPathType: windows} {testsetplatform} {
    testsetplatform windows
    file pathtype c:/
} absolute
test filename-3.6 {Tcl_GetPathType: windows} {testsetplatform} {
    testsetplatform windows
    file pathtype c:\\
} absolute
test filename-3.7 {Tcl_GetPathType: windows} {testsetplatform} {
    testsetplatform windows
    file pathtype c:/foo
} absolute
test filename-3.8 {Tcl_GetPathType: windows} {testsetplatform} {
    testsetplatform windows
    file pathtype c:\\foo
} absolute
test filename-3.9 {Tcl_GetPathType: windows} {testsetplatform} {
    testsetplatform windows
    file pathtype c:
} volumerelative
test filename-3.10 {Tcl_GetPathType: windows} {testsetplatform} {
    testsetplatform windows
    file pathtype c:foo
} volumerelative
test filename-3.11 {Tcl_GetPathType: windows} {testsetplatform} {
    testsetplatform windows
    file pathtype foo
} relative
test filename-3.12 {Tcl_GetPathType: windows} {testsetplatform} {
    testsetplatform windows
    file pathtype //foo/bar
} absolute
test filename-3.13 {Tcl_GetPathType: windows} {testsetplatform} {
    testsetplatform windows
    file pathtype ~foo
} absolute
test filename-3.14 {Tcl_GetPathType: windows} {testsetplatform} {
    testsetplatform windows
    file pathtype ~
} absolute
test filename-3.15 {Tcl_GetPathType: windows} {testsetplatform} {
    testsetplatform windows
    file pathtype ~/foo
} absolute
test filename-3.16 {Tcl_GetPathType: windows} {testsetplatform} {
    testsetplatform windows
    file pathtype ./~foo
} relative

test filename-4.1 {Tcl_SplitPath: unix} {testsetplatform} {
    testsetplatform unix
    file split /
} {/}
test filename-4.2 {Tcl_SplitPath: unix} {testsetplatform} {
    testsetplatform unix
    file split /foo
} {/ foo}
test filename-4.3 {Tcl_SplitPath: unix} {testsetplatform} {
    testsetplatform unix
    file split /foo/bar
} {/ foo bar}
test filename-4.4 {Tcl_SplitPath: unix} {testsetplatform} {
    testsetplatform unix
    file split /foo/bar/baz
} {/ foo bar baz}
test filename-4.5 {Tcl_SplitPath: unix} {testsetplatform} {
    testsetplatform unix
    file split foo/bar
} {foo bar}
test filename-4.6 {Tcl_SplitPath: unix} {testsetplatform} {
    testsetplatform unix
    file split ./foo/bar
} {. foo bar}
test filename-4.7 {Tcl_SplitPath: unix} {testsetplatform} {
    testsetplatform unix
    file split /foo/../././foo/bar
} {/ foo .. . . foo bar}
test filename-4.8 {Tcl_SplitPath: unix} {testsetplatform} {
    testsetplatform unix
    file split ../foo/bar
} {.. foo bar}
test filename-4.9 {Tcl_SplitPath: unix} {testsetplatform} {
    testsetplatform unix
    file split {}
} {}
test filename-4.10 {Tcl_SplitPath: unix} {testsetplatform} {
    testsetplatform unix
    file split .
} {.}
test filename-4.11 {Tcl_SplitPath: unix} {testsetplatform} {
    testsetplatform unix
    file split ../
} {..}
test filename-4.12 {Tcl_SplitPath: unix} {testsetplatform} {
    testsetplatform unix
    file split ../..
} {.. ..}
test filename-4.13 {Tcl_SplitPath: unix} {testsetplatform} {
    testsetplatform unix
    file split //foo
} {/ foo}
test filename-4.14 {Tcl_SplitPath: unix} {testsetplatform} {
    testsetplatform unix
    file split foo//bar
} {foo bar}
test filename-4.15 {Tcl_SplitPath: unix} {testsetplatform} {
    testsetplatform unix
    file split ~foo
} {~foo}
test filename-4.16 {Tcl_SplitPath: unix} {testsetplatform} {
    testsetplatform unix
    file split ~foo/~bar
} {~foo ./~bar}
test filename-4.17 {Tcl_SplitPath: unix} {testsetplatform} {
    testsetplatform unix
    file split ~foo/~bar/~baz
} {~foo ./~bar ./~baz}
test filename-4.18 {Tcl_SplitPath: unix} {testsetplatform} {
    testsetplatform unix
    file split foo/bar~/baz
} {foo bar~ baz}

if {[tcltest::testConstraint testsetplatform]} {
    testsetplatform $platform
}

test filename-4.19 {Tcl_SplitPath} {
    set oldDir [pwd]
    set res [catch {
	cd [temporaryDirectory]
	file mkdir tildetmp
	set nastydir [file join tildetmp ./~tilde]
	file mkdir $nastydir
	set norm [file normalize $nastydir]
	cd tildetmp
	cd ./~tilde
	glob -nocomplain *
	set idx [string first tildetmp $norm]
	set norm [string range $norm $idx end]
	# fix path away so all platforms are the same
	regsub {(.*):$} $norm {\1} norm
	regsub -all ":" $norm "/" norm
	# make sure we can delete the directory we created
	cd $oldDir
	file delete -force $nastydir
	set norm
    } err]
    cd $oldDir
    catch {file delete -force tildetmp}
    list $res $err
} {0 tildetmp/~tilde}

test filename-5.1 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split a:b
} {a: b}
test filename-5.2 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split a:b:c
} {a: b c}
test filename-5.3 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split a:b:c:
} {a: b c}
test filename-5.4 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split a:
} {a:}
test filename-5.5 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split a::
} {a: ::}
test filename-5.6 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split a:::
} {a: :: ::}
test filename-5.7 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split :a
} {a}
test filename-5.8 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split :a::
} {a ::}
test filename-5.9 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split :
} {:}
test filename-5.10 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split ::
} {::}
test filename-5.11 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split :::
} {:: ::}
test filename-5.12 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split a:::b
} {a: :: :: b}
test filename-5.13 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split /a:b
} {/a: b}
test filename-5.14 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split ~:
} {~:}
test filename-5.15 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split ~/:
} {~/:}
test filename-5.16 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split ~:foo
} {~: foo}
test filename-5.17 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split ~/foo
} {~: foo}
test filename-5.18 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split ~foo:
} {~foo:}
test filename-5.19 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split a:~foo
} {a: :~foo}
test filename-5.20 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split /
} {:/}
test filename-5.21 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split a:b/c
} {a: :b/c}
test filename-5.22 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split /foo
} {foo:}
test filename-5.23 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split /a/b
} {a: b}
test filename-5.24 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split /a/b/foo
} {a: b foo}
test filename-5.25 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split a/b
} {a b}
test filename-5.26 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split ./foo/bar
} {: foo bar}
test filename-5.27 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split ../foo/bar
} {:: foo bar}
test filename-5.28 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split {}
} {}
test filename-5.29 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split .
} {:}
test filename-5.30 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split ././
} {: :}
test filename-5.31 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split ././.
} {: : :}
test filename-5.32 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split ../
} {::}
test filename-5.33 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split ..
} {::}
test filename-5.34 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split ../..
} {:: ::}
test filename-5.35 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split //foo
} {foo:}
test filename-5.36 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split foo//bar
} {foo bar}
test filename-5.37 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split ~foo
} {~foo:}
test filename-5.38 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split ~
} {~:}
test filename-5.39 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split foo
} {foo}
test filename-5.40 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split ~/
} {~:}
test filename-5.41 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split ~foo/~bar
} {~foo: :~bar}
test filename-5.42 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split ~foo/~bar/~baz
} {~foo: :~bar :~baz}
test filename-5.43 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split foo/bar~/baz
} {foo bar~ baz}
test filename-5.44 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split a/../b
} {a :: b}
test filename-5.45 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split a/../../b
} {a :: :: b}
test filename-5.46 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split a/.././../b
} {a :: : :: b}
test filename-5.47 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split /../bar
} {bar:}
test filename-5.48 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split /./bar
} {bar:}
test filename-5.49 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split //.//.././bar
} {bar:}
test filename-5.50 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split /..
} {:/..}
test filename-5.51 {Tcl_SplitPath: mac} {testsetplatform} {
    testsetplatform mac
    file split //.//.././
} {://.//.././}

test filename-6.1 {Tcl_SplitPath: win} {testsetplatform} {
    testsetplatform win
    file split /
} {/}
test filename-6.2 {Tcl_SplitPath: win} {testsetplatform} {
    testsetplatform win
    file split /foo
} {/ foo}
test filename-6.3 {Tcl_SplitPath: win} {testsetplatform} {
    testsetplatform win
    file split /foo/bar
} {/ foo bar}
test filename-6.4 {Tcl_SplitPath: win} {testsetplatform} {
    testsetplatform win
    file split /foo/bar/baz
} {/ foo bar baz}
test filename-6.5 {Tcl_SplitPath: win} {testsetplatform} {
    testsetplatform win
    file split foo/bar
} {foo bar}
test filename-6.6 {Tcl_SplitPath: win} {testsetplatform} {
    testsetplatform win
    file split ./foo/bar
} {. foo bar}
test filename-6.7 {Tcl_SplitPath: win} {testsetplatform} {
    testsetplatform win
    file split /foo/../././foo/bar
} {/ foo .. . . foo bar}
test filename-6.8 {Tcl_SplitPath: win} {testsetplatform} {
    testsetplatform win
    file split ../foo/bar
} {.. foo bar}
test filename-6.9 {Tcl_SplitPath: win} {testsetplatform} {
    testsetplatform win
    file split {}
} {}
test filename-6.10 {Tcl_SplitPath: win} {testsetplatform} {
    testsetplatform win
    file split .
} {.}
test filename-6.11 {Tcl_SplitPath: win} {testsetplatform} {
    testsetplatform win
    file split ../
} {..}
test filename-6.12 {Tcl_SplitPath: win} {testsetplatform} {
    testsetplatform win
    file split ../..
} {.. ..}
test filename-6.13 {Tcl_SplitPath: win} {testsetplatform} {
    testsetplatform win
    file split //foo
} {/ foo}
test filename-6.14 {Tcl_SplitPath: win} {testsetplatform} {
    testsetplatform win
    file split foo//bar
} {foo bar}
test filename-6.15 {Tcl_SplitPath: win} {testsetplatform} {
    testsetplatform win
    file split /\\/foo//bar
} {//foo/bar}
test filename-6.16 {Tcl_SplitPath: win} {testsetplatform} {
    testsetplatform win
    file split /\\/foo//bar
} {//foo/bar}
test filename-6.17 {Tcl_SplitPath: win} {testsetplatform} {
    testsetplatform win
    file split /\\/foo//bar
} {//foo/bar}
test filename-6.18 {Tcl_SplitPath: win} {testsetplatform} {
    testsetplatform win
    file split \\\\foo\\bar
} {//foo/bar}
test filename-6.19 {Tcl_SplitPath: win} {testsetplatform} {
    testsetplatform win
    file split \\\\foo\\bar/baz
} {//foo/bar baz}
test filename-6.20 {Tcl_SplitPath: win} {testsetplatform} {
    testsetplatform win
    file split c:/foo
} {c:/ foo}
test filename-6.21 {Tcl_SplitPath: win} {testsetplatform} {
    testsetplatform win
    file split c:foo
} {c: foo}
test filename-6.22 {Tcl_SplitPath: win} {testsetplatform} {
    testsetplatform win
    file split c:
} {c:}
test filename-6.23 {Tcl_SplitPath: win} {testsetplatform} {
    testsetplatform win
    file split c:\\
} {c:/}
test filename-6.24 {Tcl_SplitPath: win} {testsetplatform} {
    testsetplatform win
    file split c:/
} {c:/}
test filename-6.25 {Tcl_SplitPath: win} {testsetplatform} {
    testsetplatform win
    file split c:/./..
} {c:/ . ..}
test filename-6.26 {Tcl_SplitPath: win} {testsetplatform} {
    testsetplatform win
    file split ~foo
} {~foo}
test filename-6.27 {Tcl_SplitPath: win} {testsetplatform} {
    testsetplatform win
    file split ~foo/~bar
} {~foo ./~bar}
test filename-6.28 {Tcl_SplitPath: win} {testsetplatform} {
    testsetplatform win
    file split ~foo/~bar/~baz
} {~foo ./~bar ./~baz}
test filename-6.29 {Tcl_SplitPath: win} {testsetplatform} {
    testsetplatform win
    file split foo/bar~/baz
} {foo bar~ baz}
test filename-6.30 {Tcl_SplitPath: win} {testsetplatform} {
    testsetplatform win
    file split c:~foo
} {c: ./~foo}

test filename-7.1 {Tcl_JoinPath: unix} {testsetplatform} {
    testsetplatform unix
    file join / a
} {/a}
test filename-7.2 {Tcl_JoinPath: unix} {testsetplatform} {
    testsetplatform unix
    file join a b
} {a/b}
test filename-7.3 {Tcl_JoinPath: unix} {testsetplatform} {
    testsetplatform unix
    file join /a c /b d
} {/b/d}
test filename-7.4 {Tcl_JoinPath: unix} {testsetplatform} {
    testsetplatform unix
    file join /
} {/}
test filename-7.5 {Tcl_JoinPath: unix} {testsetplatform} {
    testsetplatform unix
    file join a
} {a}
test filename-7.6 {Tcl_JoinPath: unix} {testsetplatform} {
    testsetplatform unix
    file join {}
} {}
test filename-7.7 {Tcl_JoinPath: unix} {testsetplatform} {
    testsetplatform unix
    file join /a/ b
} {/a/b}
test filename-7.8 {Tcl_JoinPath: unix} {testsetplatform} {
    testsetplatform unix
    file join /a// b
} {/a/b}
test filename-7.9 {Tcl_JoinPath: unix} {testsetplatform} {
    testsetplatform unix
    file join /a/./../. b
} {/a/./.././b}
test filename-7.10 {Tcl_JoinPath: unix} {testsetplatform} {
    testsetplatform unix
    file join ~ a
} {~/a}
test filename-7.11 {Tcl_JoinPath: unix} {testsetplatform} {
    testsetplatform unix
    file join ~a ~b
} {~b}
test filename-7.12 {Tcl_JoinPath: unix} {testsetplatform} {
    testsetplatform unix
    file join ./~a b
} {./~a/b}
test filename-7.13 {Tcl_JoinPath: unix} {testsetplatform} {
    testsetplatform unix
    file join ./~a ~b
} {~b}
test filename-7.14 {Tcl_JoinPath: unix} {testsetplatform} {
    testsetplatform unix
    file join ./~a ./~b
} {./~a/~b}
test filename-7.15 {Tcl_JoinPath: unix} {testsetplatform} {
    testsetplatform unix
    file join a . b
} {a/./b}
test filename-7.16 {Tcl_JoinPath: unix} {testsetplatform} {
    testsetplatform unix
    file join a . ./~b
} {a/./~b}
test filename-7.17 {Tcl_JoinPath: unix} {testsetplatform} {
    testsetplatform unix
    file join //a b
} {/a/b}
test filename-7.18 {Tcl_JoinPath: unix} {testsetplatform} {
    testsetplatform unix
    file join /// a b
} {/a/b}

test filename-8.1 {Tcl_JoinPath: mac} {testsetplatform} {
    testsetplatform mac
    file join a b
} {:a:b}
test filename-8.2 {Tcl_JoinPath: mac} {testsetplatform} {
    testsetplatform mac
    file join :a b
} {:a:b}
test filename-8.3 {Tcl_JoinPath: mac} {testsetplatform} {
    testsetplatform mac
    file join a b:
} {b:}
test filename-8.4 {Tcl_JoinPath: mac} {testsetplatform} {
    testsetplatform mac
    file join a: :b
} {a:b}
test filename-8.5 {Tcl_JoinPath: mac} {testsetplatform} {
    testsetplatform mac
    file join a: :b:
} {a:b}
test filename-8.6 {Tcl_JoinPath: mac} {testsetplatform} {
    testsetplatform mac
    file join a :: b
} {:a::b}
test filename-8.7 {Tcl_JoinPath: mac} {testsetplatform} {
    testsetplatform mac
    file join a :: :: b
} {:a:::b}
test filename-8.8 {Tcl_JoinPath: mac} {testsetplatform} {
    testsetplatform mac
    file join a ::: b
} {:a:::b}
test filename-8.9 {Tcl_JoinPath: mac} {testsetplatform} {
    testsetplatform mac
    file join a: b:
} {b:}
test filename-8.10 {Tcl_JoinPath: mac} {testsetplatform} {
    testsetplatform mac
    file join /a/b
} {a:b}
test filename-8.11 {Tcl_JoinPath: mac} {testsetplatform} {
    testsetplatform mac
    file join /a/b c/d
} {a:b:c:d}
test filename-8.12 {Tcl_JoinPath: mac} {testsetplatform} {
    testsetplatform mac
    file join /a/b :c:d
} {a:b:c:d}
test filename-8.13 {Tcl_JoinPath: mac} {testsetplatform} {
    testsetplatform mac
    file join ~ foo
} {~:foo}
test filename-8.14 {Tcl_JoinPath: mac} {testsetplatform} {
    testsetplatform mac
    file join :: ::
} {:::}
test filename-8.15 {Tcl_JoinPath: mac} {testsetplatform} {
    testsetplatform mac
    file join a: ::
} {a::}
test filename-8.16 {Tcl_JoinPath: mac} {testsetplatform} {
    testsetplatform mac
    file join a {} b
} {:a:b}
test filename-8.17 {Tcl_JoinPath: mac} {testsetplatform} {
    testsetplatform mac
    file join a::: b
} {a:::b}
test filename-8.18 {Tcl_JoinPath: mac} {testsetplatform} {
    testsetplatform mac
    file join a : : :
} {:a}
test filename-8.19 {Tcl_JoinPath: mac} {testsetplatform} {
    testsetplatform mac
    file join :
} {:}
test filename-8.20 {Tcl_JoinPath: mac} {testsetplatform} {
    testsetplatform mac
    file join : a
} {:a}
test filename-8.21 {Tcl_JoinPath: mac} {testsetplatform} {
    testsetplatform mac
    file join a: :b/c
} {a:b/c}
test filename-8.22 {Tcl_JoinPath: mac} {testsetplatform} {
    testsetplatform mac
    file join :a :b/c
} {:a:b/c}

test filename-9.1 {Tcl_JoinPath: win} {testsetplatform} {
    testsetplatform win
    file join a b
} {a/b}
test filename-9.2 {Tcl_JoinPath: win} {testsetplatform} {
    testsetplatform win
    file join /a b
} {/a/b}
test filename-9.3 {Tcl_JoinPath: win} {testsetplatform} {
    testsetplatform win
    file join /a /b
} {/b}
test filename-9.4 {Tcl_JoinPath: win} {testsetplatform} {
    testsetplatform win
    file join c: foo
} {c:foo}
test filename-9.5 {Tcl_JoinPath: win} {testsetplatform} {
    testsetplatform win
    file join c:/ foo
} {c:/foo}
test filename-9.6 {Tcl_JoinPath: win} {testsetplatform} {
    testsetplatform win
    file join c:\\bar foo
} {c:/bar/foo}
test filename-9.7 {Tcl_JoinPath: win} {testsetplatform} {
    testsetplatform win
    file join /foo c:bar
} {c:bar}
test filename-9.8 {Tcl_JoinPath: win} {testsetplatform} {
    testsetplatform win
    file join ///host//share dir
} {//host/share/dir}
test filename-9.9 {Tcl_JoinPath: win} {testsetplatform} {
    testsetplatform win
    file join ~ foo
} {~/foo}
test filename-9.10 {Tcl_JoinPath: win} {testsetplatform} {
    testsetplatform win
    file join ~/~foo
} {~/~foo}
test filename-9.11 {Tcl_JoinPath: win} {testsetplatform} {
    testsetplatform win
    file join ~ ./~foo
} {~/~foo}
test filename-9.12 {Tcl_JoinPath: win} {testsetplatform} {
    testsetplatform win
    file join / ~foo
} {~foo}
test filename-9.13 {Tcl_JoinPath: win} {testsetplatform} {
    testsetplatform win
    file join ./a/ b c
} {./a/b/c}
test filename-9.14 {Tcl_JoinPath: win} {testsetplatform} {
    testsetplatform win
    file join ./~a/ b c
} {./~a/b/c}
test filename-9.15 {Tcl_JoinPath: win} {testsetplatform} {
    testsetplatform win
    file join // host share path
} {/host/share/path}
test filename-9.16 {Tcl_JoinPath: win} {testsetplatform} {
    testsetplatform win
    file join foo . bar
} {foo/./bar}
test filename-9.17 {Tcl_JoinPath: win} {testsetplatform} {
    testsetplatform win
    file join foo .. bar
} {foo/../bar}
test filename-9.18 {Tcl_JoinPath: win} {testsetplatform} {
    testsetplatform win
    file join foo/./bar
} {foo/./bar}

test filename-10.1 {Tcl_TranslateFileName} {testsetplatform} {
    testsetplatform unix
    list [catch {testtranslatefilename foo} msg] $msg
} {0 foo}
test filename-10.2 {Tcl_TranslateFileName} {testsetplatform} {
    testsetplatform windows
    list [catch {testtranslatefilename {c:/foo}} msg] $msg
} {0 {c:\foo}}
test filename-10.3 {Tcl_TranslateFileName} {testsetplatform} {
    testsetplatform windows
    list [catch {testtranslatefilename {c:/\\foo/}} msg] $msg
} {0 {c:\foo}}
test filename-10.4 {Tcl_TranslateFileName} {testsetplatform} {
    testsetplatform mac
    list [catch {testtranslatefilename foo} msg] $msg
} {0 :foo}
test filename-10.5 {Tcl_TranslateFileName} {testsetplatform} {
    testsetplatform mac
    list [catch {testtranslatefilename :~foo} msg] $msg
} {0 :~foo}
test filename-10.6 {Tcl_TranslateFileName} {testsetplatform} {
    global env
    set temp $env(HOME)
    set env(HOME) "/home/test"
    testsetplatform unix
    set result [list [catch {testtranslatefilename ~/foo} msg] $msg]
    set env(HOME) $temp
    set result
} {0 /home/test/foo}
test filename-10.7 {Tcl_TranslateFileName} {testsetplatform} {
    global env
    set temp $env(HOME)
    unset env(HOME)
    testsetplatform unix
    set result [list [catch {testtranslatefilename ~/foo} msg] $msg]
    set env(HOME) $temp
    set result
} {1 {couldn't find HOME environment variable to expand path}}
test filename-10.8 {Tcl_TranslateFileName} {testsetplatform} {
    global env
    set temp $env(HOME)
    set env(HOME) "/home/test"
    testsetplatform unix
    set result [list [catch {testtranslatefilename ~} msg] $msg]
    set env(HOME) $temp
    set result
} {0 /home/test}
test filename-10.9 {Tcl_TranslateFileName} {testsetplatform} {
    global env
    set temp $env(HOME)
    set env(HOME) "/home/test/"
    testsetplatform unix
    set result [list [catch {testtranslatefilename ~} msg] $msg]
    set env(HOME) $temp
    set result
} {0 /home/test}
test filename-10.10 {Tcl_TranslateFileName} {testsetplatform} {
    global env
    set temp $env(HOME)
    set env(HOME) "/home/test/"
    testsetplatform unix
    set result [list [catch {testtranslatefilename ~/foo} msg] $msg]
    set env(HOME) $temp
    set result
} {0 /home/test/foo}
test filename-10.11 {Tcl_TranslateFileName} {testsetplatform} {
    global env
    set temp $env(HOME)
    set env(HOME) "Root:"
    testsetplatform mac
    set result [list [catch {testtranslatefilename ~/foo} msg] $msg]
    set env(HOME) $temp
    set result
} {0 Root:foo}
test filename-10.12 {Tcl_TranslateFileName} {testsetplatform} {
    global env
    set temp $env(HOME)
    set env(HOME) "Root:home"
    testsetplatform mac
    set result [list [catch {testtranslatefilename ~/foo} msg] $msg]
    set env(HOME) $temp
    set result
} {0 Root:home:foo}
test filename-10.13 {Tcl_TranslateFileName} {testsetplatform} {
    global env
    set temp $env(HOME)
    set env(HOME) "Root:home"
    testsetplatform mac
    set result [list [catch {testtranslatefilename ~::foo} msg] $msg]
    set env(HOME) $temp
    set result
} {0 Root:home::foo}
test filename-10.14 {Tcl_TranslateFileName} {testsetplatform} {
    global env
    set temp $env(HOME)
    set env(HOME) "Root:home"
    testsetplatform mac
    set result [list [catch {testtranslatefilename ~} msg] $msg]
    set env(HOME) $temp
    set result
} {0 Root:home}
test filename-10.15 {Tcl_TranslateFileName} {testsetplatform} {
    global env
    set temp $env(HOME)
    set env(HOME) "Root:home:"
    testsetplatform mac
    set result [list [catch {testtranslatefilename ~::foo} msg] $msg]
    set env(HOME) $temp
    set result
} {0 Root:home::foo}
test filename-10.16 {Tcl_TranslateFileName} {testsetplatform} {
    global env
    set temp $env(HOME)
    set env(HOME) "Root:home::"
    testsetplatform mac
    set result [list [catch {testtranslatefilename ~::foo} msg] $msg]
    set env(HOME) $temp
    set result
} {0 Root:home:::foo}
test filename-10.17 {Tcl_TranslateFileName} {testsetplatform} {
    global env
    set temp $env(HOME)
    set env(HOME) "\\home\\"
    testsetplatform windows
    set result [list [catch {testtranslatefilename ~/foo} msg] $msg]
    set env(HOME) $temp
    set result
} {0 {\home\foo}}
test filename-10.18 {Tcl_TranslateFileName} {testsetplatform} {
    global env
    set temp $env(HOME)
    set env(HOME) "\\home\\"
    testsetplatform windows
    set result [list [catch {testtranslatefilename ~/foo\\bar} msg] $msg]
    set env(HOME) $temp
    set result
} {0 {\home\foo\bar}}
test filename-10.19 {Tcl_TranslateFileName} {testsetplatform} {
    global env
    set temp $env(HOME)
    set env(HOME) "c:"
    testsetplatform windows
    set result [list [catch {testtranslatefilename ~/foo} msg] $msg]
    set env(HOME) $temp
    set result
} {0 c:foo}
test filename-10.20 {Tcl_TranslateFileName} {testtranslatefilename} {
    list [catch {testtranslatefilename ~blorp/foo} msg] $msg
} {1 {user "blorp" doesn't exist}}
test filename-10.21 {Tcl_TranslateFileName} {testsetplatform} {
    global env
    set temp $env(HOME)
    set env(HOME) "c:\\"
    testsetplatform windows
    set result [list [catch {testtranslatefilename ~/foo} msg] $msg]
    set env(HOME) $temp
    set result
} {0 {c:\foo}}
test filename-10.22 {Tcl_TranslateFileName} {testsetplatform} {
    testsetplatform windows
    list [catch {testtranslatefilename foo//bar} msg] $msg
} {0 {foo\bar}}

if {[tcltest::testConstraint testsetplatform]} {
    testsetplatform $platform
}

test filename-10.23 {Tcl_TranslateFileName} {unixOnly nonPortable} {
    # this test fails if ~ouster is not /home/ouster
    list [catch {testtranslatefilename ~ouster} msg] $msg
} {0 /home/ouster}
test filename-10.24 {Tcl_TranslateFileName} {unixOnly nonPortable} {
    # this test fails if ~ouster is not /home/ouster
    list [catch {testtranslatefilename ~ouster/foo} msg] $msg
} {0 /home/ouster/foo}


test filename-11.1 {Tcl_GlobCmd} {
    list [catch {glob} msg] $msg
} {1 {wrong # args: should be "glob ?switches? name ?name ...?"}}
test filename-11.2 {Tcl_GlobCmd} {
    list [catch {glob -gorp} msg] $msg
} {1 {bad option "-gorp": must be -directory, -join, -nocomplain, -path, -tails, -types, or --}}
test filename-11.3 {Tcl_GlobCmd} {
    list [catch {glob -nocomplai} msg] $msg
} {1 {wrong # args: should be "glob ?switches? name ?name ...?"}}
test filename-11.4 {Tcl_GlobCmd} {
    list [catch {glob -nocomplain} msg] $msg
} {1 {wrong # args: should be "glob ?switches? name ?name ...?"}}
test filename-11.5 {Tcl_GlobCmd} {
    list [catch {glob -nocomplain ~xyqrszzz} msg] $msg
} {0 {}}
test filename-11.6 {Tcl_GlobCmd} {
    list [catch {glob ~xyqrszzz} msg] $msg
} {1 {user "xyqrszzz" doesn't exist}}
test filename-11.7 {Tcl_GlobCmd} {
    list [catch {glob -- -nocomplain} msg] $msg
} {1 {no files matched glob pattern "-nocomplain"}}
test filename-11.8 {Tcl_GlobCmd} {
    list [catch {glob -nocomplain -- -nocomplain} msg] $msg
} {0 {}}
test filename-11.9 {Tcl_GlobCmd} {testsetplatform} {
    testsetplatform unix
    list [catch {glob ~\\xyqrszzz/bar} msg] $msg
} {1 {user "\xyqrszzz" doesn't exist}}
test filename-11.10 {Tcl_GlobCmd} {testsetplatform} {
    testsetplatform unix
    list [catch {glob -nocomplain ~\\xyqrszzz/bar} msg] $msg
} {0 {}}
test filename-11.11 {Tcl_GlobCmd} {testsetplatform} {
    testsetplatform unix
    list [catch {glob ~xyqrszzz\\/\\bar} msg] $msg
} {1 {user "xyqrszzz" doesn't exist}}
test filename-11.12 {Tcl_GlobCmd} {testsetplatform} {
    testsetplatform unix
    set home $env(HOME)
    unset env(HOME)
    set x [list [catch {glob ~/*} msg] $msg]
    set env(HOME) $home
    set x
} {1 {couldn't find HOME environment variable to expand path}}

if {[tcltest::testConstraint testsetplatform]} {
    testsetplatform $platform
}

test filename-11.13 {Tcl_GlobCmd} {
    list [catch {file join [lindex [glob ~] 0]} msg] $msg
} [list 0 [file join $env(HOME)]]

set oldpwd [pwd]
set oldhome $env(HOME)
cd [temporaryDirectory]
set env(HOME) [pwd]
file delete -force globTest
file mkdir globTest/a1/b1
file mkdir globTest/a1/b2
file mkdir globTest/a2/b3
file mkdir globTest/a3
close [open globTest/x1.c w]
close [open globTest/y1.c w]
close [open globTest/z1.c w]
close [open "globTest/weird name.c" w]
close [open globTest/a1/b1/x2.c w]
close [open globTest/a1/b2/y2.c w]

catch {close [open globTest/.1 w]}
catch {close [open globTest/x,z1.c w]}

test filename-11.14 {Tcl_GlobCmd} {
    list [catch {glob ~/globTest} msg] $msg
} [list 0 [list [file join $env(HOME) globTest]]]
test filename-11.15 {Tcl_GlobCmd} {
    list [catch {glob ~\\/globTest} msg] $msg
} [list 0 [list [file join $env(HOME) globTest]]]
test filename-11.16 {Tcl_GlobCmd} {
    list [catch {glob globTest} msg] $msg
} {0 globTest}

set globname "globTest"
set horribleglobname "glob\[\{Test"

test filename-11.17 {Tcl_GlobCmd} {unixOnly} {
    list [catch {lsort [glob -directory $globname *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.17.1 {Tcl_GlobCmd} {pcOnly macOnly} {
    list [catch {lsort [glob -directory $globname *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
        [file join $globname .1]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
if {[string equal $tcl_platform(platform) "windows"]} {
    if {[string index $tcl_platform(osVersion) 0] >= 5 \
      && ([lindex [file system [temporaryDirectory]] 1] == "NTFS")} {
	tcltest::testConstraint linkDirectory 1
    } else {
	tcltest::testConstraint linkDirectory 0
    }
} else {
    tcltest::testConstraint linkDirectory 1
}
test filename-11.17.2 {Tcl_GlobCmd} {notRoot linkDirectory} {
    set dir [pwd]
    set ret "error in test"
    if {[catch {
	cd $globname
	file link -symbolic link a1
	cd $dir
	set ret [list [catch {
	    lsort [glob -directory $globname -join * b1]
	} msg] $msg]
    }]} {
	cd $dir
    }
    file delete [file join $globname link]
    set ret
} [list 0 [lsort [list [file join $globname a1 b1] \
  [file join $globname link b1]]]]
# Simpler version of the above test to illustrate a given bug.
test filename-11.17.3 {Tcl_GlobCmd} {notRoot linkDirectory} {
    set dir [pwd]
    set ret "error in test"
    if {[catch {
	cd $globname
	file link -symbolic link a1
	cd $dir
	set ret [list [catch {
	    lsort [glob -directory $globname -type d *]
	} msg] $msg]
    }]} {
	cd $dir
    }
    file delete [file join $globname link]
    set ret
} [list 0 [lsort [list [file join $globname a1] \
  [file join $globname a2] \
  [file join $globname a3] \
  [file join $globname link]]]]
# Make sure the bugfix isn't too simple.  We don't want
# to break 'glob -type l'.
test filename-11.17.4 {Tcl_GlobCmd} {notRoot linkDirectory} {
    set dir [pwd]
    set ret "error in test"
    if {[catch {
	cd $globname
	file link -symbolic link a1
	cd $dir
	set ret [list [catch {
	    lsort [glob -directory $globname -type l *]
	} msg] $msg]
    }]} {
	cd $dir
    }
    file delete [file join $globname link]
    set ret
} [list 0 [list [file join $globname link]]]
test filename-11.17.5 {Tcl_GlobCmd} {
    list [catch {lsort [glob -directory $globname -tails *.c]} msg] $msg
} [list 0 [lsort [list "weird name.c" x,z1.c x1.c y1.c z1.c]]]
test filename-11.17.6 {Tcl_GlobCmd} {
    list [catch {lsort [glob -directory $globname -tails *.c *.c]} msg] $msg
} [list 0 [lsort [concat [list "weird name.c" x,z1.c x1.c y1.c z1.c] \
  [list "weird name.c" x,z1.c x1.c y1.c z1.c]]]]
test filename-11.18 {Tcl_GlobCmd} {unixOnly} {
    list [catch {lsort [glob -path $globname/ *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.18.1 {Tcl_GlobCmd} {pcOnly macOnly} {
    list [catch {lsort [glob -path $globname/ *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
        [file join $globname .1]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.19 {Tcl_GlobCmd} {unixOnly} {
    list [catch {lsort [glob -join -path \
	    [string range $globname 0 5] * *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.19.1 {Tcl_GlobCmd} {pcOnly macOnly} {
    list [catch {lsort [glob -join -path \
	    [string range $globname 0 5] * *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
        [file join $globname .1]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.20 {Tcl_GlobCmd} {
    list [catch {lsort [glob -type d -dir $globname *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1]\
	[file join $globname a2]\
	[file join $globname a3]]]]
test filename-11.21 {Tcl_GlobCmd} {
    list [catch {lsort [glob -type d -path $globname *]} msg] $msg
} [list 0 [lsort [list $globname]]]

# Get rid of file/dir if it exists, since it will have
# been left behind by a previous failed run.
if {[file exists $horribleglobname]} {
    file delete -force $horribleglobname
}
file rename globTest $horribleglobname
set globname $horribleglobname

test filename-11.22 {Tcl_GlobCmd} {unixOnly} {
    list [catch {lsort [glob -dir $globname *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.22.1 {Tcl_GlobCmd} {pcOnly macOnly} {
    list [catch {lsort [glob -dir $globname *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
        [file join $globname .1]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.23 {Tcl_GlobCmd} {unixOnly} {
    list [catch {lsort [glob -path $globname/ *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.23.1 {Tcl_GlobCmd} {pcOnly macOnly} {
    list [catch {lsort [glob -path $globname/ *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
        [file join $globname .1]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.24 {Tcl_GlobCmd} {unixOnly} {
    list [catch {lsort [glob -join -path \
	    [string range $globname 0 5] * *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.24.1 {Tcl_GlobCmd} {pcOnly macOnly} {
    list [catch {lsort [glob -join -path \
	    [string range $globname 0 5] * *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
        [file join $globname .1]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.25 {Tcl_GlobCmd} {
    list [catch {lsort [glob -type d -dir $globname *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1]\
	[file join $globname a2]\
	[file join $globname a3]]]]
test filename-11.25.1 {Tcl_GlobCmd} {
    list [catch {lsort [glob -type {d r} -dir $globname *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1]\
  [file join $globname a2]\
  [file join $globname a3]]]]
test filename-11.25.2 {Tcl_GlobCmd} {
    list [catch {lsort [glob -type {d r w} -dir $globname *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1]\
  [file join $globname a2]\
  [file join $globname a3]]]]
test filename-11.26 {Tcl_GlobCmd} {
    list [catch {glob -type d -path $globname *} msg] $msg
} [list 0 [list $globname]]
test filename-11.27 {Tcl_GlobCmd} {
    list [catch {glob -types abcde *} msg] $msg
} {1 {bad argument to "-types": abcde}}
test filename-11.28 {Tcl_GlobCmd} {
    list [catch {glob -types z *} msg] $msg
} {1 {bad argument to "-types": z}}
test filename-11.29 {Tcl_GlobCmd} {
    list [catch {glob -types {abcd efgh} *} msg] $msg
} {1 {only one MacOS type or creator argument to "-types" allowed}}
test filename-11.30 {Tcl_GlobCmd} {
    list [catch {glob -types {{macintosh type TEXT} \
	    {macintosh creator ALFA} efgh} *} msg] $msg
} {1 {only one MacOS type or creator argument to "-types" allowed}}
test filename-11.31 {Tcl_GlobCmd} {
    list [catch {glob -types} msg] $msg
} {1 {missing argument to "-types"}}
test filename-11.32 {Tcl_GlobCmd} {
    list [catch {glob -path hello -dir hello *} msg] $msg
} {1 {"-directory" cannot be used with "-path"}}
test filename-11.33 {Tcl_GlobCmd} {
    list [catch {glob -path} msg] $msg
} {1 {missing argument to "-path"}}
test filename-11.34 {Tcl_GlobCmd} {
    list [catch {glob -direct} msg] $msg
} {1 {missing argument to "-directory"}}
test filename-11.35 {Tcl_GlobCmd} {
    list [catch {glob -paths *} msg] $msg
} {1 {bad option "-paths": must be -directory, -join, -nocomplain, -path, -tails, -types, or --}}
# Test '-tails' flag to glob.
test filename-11.36 {Tcl_GlobCmd} {
    list [catch {glob -tails *} msg] $msg
} {1 {"-tails" must be used with either "-directory" or "-path"}}
test filename-11.37 {Tcl_GlobCmd} {
    list [catch {glob -type d -tails -path $globname *} msg] $msg
} [list 0 [list $globname]]
test filename-11.38 {Tcl_GlobCmd} {
    list [catch {glob -tails -path $globname *} msg] $msg
} [list 0 [list $globname]]
test filename-11.39 {Tcl_GlobCmd} {
    list [catch {glob -tails -join -path $globname *} msg] $msg
} [list 0 [list $globname]]
test filename-11.40 {Tcl_GlobCmd} {
    expr {[glob -dir [pwd] -tails *] == [glob *]}
} {1}
test filename-11.41 {Tcl_GlobCmd} {
    expr {[glob -dir [pwd] -tails *] != [glob -dir [pwd] *]}
} {1}
test filename-11.42 {Tcl_GlobCmd} {
    set res [list]
    foreach f [glob -dir [pwd] *] {
	lappend res [file tail $f]
    }
    expr {$res == [glob *]}
} {1}
test filename-11.43 {Tcl_GlobCmd} {
    list [catch {glob -t *} msg] $msg
} {1 {ambiguous option "-t": must be -directory, -join, -nocomplain, -path, -tails, -types, or --}}
test filename-11.44 {Tcl_GlobCmd} {
    list [catch {glob -tails -path hello -directory hello *} msg] $msg
} {1 {"-directory" cannot be used with "-path"}}
test filename-11.45 {Tcl_GlobCmd on root volume} {
    set res1 ""
    set res2 ""
    catch {
	set res1 [glob -dir [lindex [file volumes] 0] -tails *]
    }
    catch {
	set tmpd [pwd]
	cd [lindex [file volumes] 0]
	set res2 [glob *]
	cd $tmpd
    }
    expr {$res1 == $res2}
} {1}
test filename-11.46 {Tcl_GlobCmd} {
    list [catch {glob -types abcde -dir foo *} msg] $msg
} {1 {bad argument to "-types": abcde}}
test filename-11.47 {Tcl_GlobCmd} {
    list [catch {glob -types abcde -path foo *} msg] $msg
} {1 {bad argument to "-types": abcde}}
test filename-11.48 {Tcl_GlobCmd} {
    list [catch {glob -types abcde -dir foo -join * *} msg] $msg
} {1 {bad argument to "-types": abcde}}
test filename-11.49 {Tcl_GlobCmd} {
    list [catch {glob -types abcde -path foo -join * *} msg] $msg
} {1 {bad argument to "-types": abcde}}

file rename $horribleglobname globTest
set globname globTest
unset horribleglobname

test filename-12.1 {simple globbing} {unixOrPc} {
    list [catch {glob {}} msg] $msg
} {0 .}
test filename-12.1.1 {simple globbing} {unixOrPc} {
    list [catch {glob -types f {}} msg] $msg
} {1 {no files matched glob pattern ""}}
test filename-12.1.2 {simple globbing} {unixOrPc} {
    list [catch {glob -types d {}} msg] $msg
} {0 .}
test filename-12.1.3 {simple globbing} {unixOnly} {
    list [catch {glob -types hidden {}} msg] $msg
} {0 .}
test filename-12.1.4 {simple globbing} {pcOnly} {
    list [catch {glob -types hidden {}} msg] $msg
} {1 {no files matched glob pattern ""}}
test filename-12.1.5 {simple globbing} {pcOnly} {
    list [catch {glob -types hidden c:/} msg] $msg
} {1 {no files matched glob pattern "c:/"}}
test filename-12.1.6 {simple globbing} {pcOnly} {
    list [catch {glob c:/} msg] $msg
} {0 c:/}
test filename-12.2 {simple globbing} {macOnly} {
    list [catch {glob {}} msg] $msg
} {0 :}
test filename-12.2.1 {simple globbing} {macOnly} {
    list [catch {glob -types f {}} msg] $msg
} {1 {no files matched glob pattern ""}}
test filename-12.2.2 {simple globbing} {macOnly} {
    list [catch {glob -types d {}} msg] $msg
} {0 :}
test filename-12.2.3 {simple globbing} {macOnly} {
    list [catch {glob -types hidden {}} msg] $msg
} {1 {no files matched glob pattern ""}}
test filename-12.3 {simple globbing} {
    list [catch {glob -nocomplain \{a1,a2\}} msg] $msg
} {0 {}}

if {$tcl_platform(platform) == "macintosh"} {
    set globPreResult :globTest:
} else {
    set globPreResult globTest/
}
set x1 x1.c
set y1 y1.c
test filename-12.4 {simple globbing} {unixOrPc} {
    lsort [glob globTest/x1.c globTest/y1.c globTest/foo]
} "$globPreResult$x1 $globPreResult$y1"
test filename-12.5 {simple globbing} {
    list [catch {glob globTest\\/x1.c} msg] $msg
} "0 $globPreResult$x1"
test filename-12.6 {simple globbing} {
    list [catch {glob globTest\\/\\x1.c} msg] $msg
} "0 $globPreResult$x1"

test filename-13.1 {globbing with brace substitution} {
    list [catch {glob globTest/\{\}} msg] $msg
} "0 $globPreResult"
test filename-13.2 {globbing with brace substitution} {
    list [catch {glob globTest/\{} msg] $msg
} {1 {unmatched open-brace in file name}}
test filename-13.3 {globbing with brace substitution} {
    list [catch {glob globTest/\{\\\}} msg] $msg
} {1 {unmatched open-brace in file name}}
test filename-13.4 {globbing with brace substitution} {
    list [catch {glob globTest/\{\\} msg] $msg
} {1 {unmatched open-brace in file name}}
test filename-13.5 {globbing with brace substitution} {
    list [catch {glob globTest/\}} msg] $msg
} {1 {unmatched close-brace in file name}}
test filename-13.6 {globbing with brace substitution} {
    list [catch {glob globTest/\{\}x1.c} msg] $msg
} "0 $globPreResult$x1"
test filename-13.7 {globbing with brace substitution} {
    list [catch {glob globTest/\{x\}1.c} msg] $msg
} "0 $globPreResult$x1"
test filename-13.8 {globbing with brace substitution} {
    list [catch {glob globTest/\{x\{\}\}1.c} msg] $msg
} "0 $globPreResult$x1"
test filename-13.9 {globbing with brace substitution} {
    list [lsort [catch {glob globTest/\{x,y\}1.c} msg]] $msg
} [list 0 [list $globPreResult$x1 $globPreResult$y1]]
test filename-13.10 {globbing with brace substitution} {
    list [lsort [catch {glob globTest/\{x,,y\}1.c} msg]] $msg
} [list 0 [list $globPreResult$x1 $globPreResult$y1]]
test filename-13.11 {globbing with brace substitution} {unixOrPc} {
    list [lsort [catch {glob globTest/\{x,x\\,z,z\}1.c} msg]] $msg
} {0 {globTest/x1.c globTest/x,z1.c globTest/z1.c}}
test filename-13.12 {globbing with brace substitution} {macOnly} {
    list [lsort [catch {glob globTest/\{x,x\\,z,z\}1.c} msg]] $msg
} {0 {:globTest:x1.c :globTest:x,z1.c :globTest:z1.c}}
test filename-13.13 {globbing with brace substitution} {
    lsort [glob globTest/{a,b,x,y}1.c]
} [list $globPreResult$x1 $globPreResult$y1]
test filename-13.14 {globbing with brace substitution} {unixOrPc} {
    lsort [glob {globTest/{x1,y2,weird name}.c}]
} {{globTest/weird name.c} globTest/x1.c}
test filename-13.15 {globbing with brace substitution} {macOnly} {
    lsort [glob {globTest/{x1,y2,weird name}.c}]
} {{:globTest:weird name.c} :globTest:x1.c}
test filename-13.16 {globbing with brace substitution} {unixOrPc} {
    lsort [glob globTest/{x1.c,a1/*}]
} {globTest/a1/b1 globTest/a1/b2 globTest/x1.c}
test filename-13.17 {globbing with brace substitution} {macOnly} {
    lsort [glob globTest/{x1.c,a1/*}]
} {:globTest:a1:b1 :globTest:a1:b2 :globTest:x1.c}
test filename-13.18 {globbing with brace substitution} {unixOrPc} {
    lsort [glob globTest/{x1.c,{a},a1/*}]
} {globTest/a1/b1 globTest/a1/b2 globTest/x1.c}
test filename-13.19 {globbing with brace substitution} {macOnly} {
    lsort [glob globTest/{x1.c,{a},a1/*}]
} {:globTest:a1:b1 :globTest:a1:b2 :globTest:x1.c}
test filename-13.20 {globbing with brace substitution} {unixOrPc} {
    lsort [glob globTest/{a,x}1/*/{x,y}*]
} {globTest/a1/b1/x2.c globTest/a1/b2/y2.c}
test filename-13.21 {globbing with brace substitution} {macOnly} {
    lsort [glob globTest/{a,x}1/*/{x,y}*]
} {:globTest:a1:b1:x2.c :globTest:a1:b2:y2.c}
test filename-13.22 {globbing with brace substitution} {
    list [catch {glob globTest/\{a,x\}1/*/\{} msg] $msg
} {1 {unmatched open-brace in file name}}

test filename-14.1 {asterisks, question marks, and brackets} {unixOrPc} {
    lsort [glob glo*/*.c]
} {{globTest/weird name.c} globTest/x,z1.c globTest/x1.c globTest/y1.c globTest/z1.c}
test filename-14.2 {asterisks, question marks, and brackets} {macOnly} {
    lsort [glob glo*/*.c]
} {{:globTest:weird name.c} :globTest:x,z1.c :globTest:x1.c :globTest:y1.c :globTest:z1.c}
test filename-14.3 {asterisks, question marks, and brackets} {unixOrPc} {
    lsort [glob globTest/?1.c]
} {globTest/x1.c globTest/y1.c globTest/z1.c}
test filename-14.4 {asterisks, question marks, and brackets} {macOnly} {
    lsort [glob globTest/?1.c]
} {:globTest:x1.c :globTest:y1.c :globTest:z1.c}

# The current directory could be anywhere; do this to stop spurious matches
file mkdir globTestContext
file rename globTest [file join globTestContext globTest]
set savepwd [pwd]
cd globTestContext

test filename-14.5 {asterisks, question marks, and brackets} {unixOrPc} {
    lsort [glob */*/*/*.c]
} {globTest/a1/b1/x2.c globTest/a1/b2/y2.c}
test filename-14.6 {asterisks, question marks, and brackets} {macOnly} {
    lsort [glob */*/*/*.c]
} {:globTest:a1:b1:x2.c :globTest:a1:b2:y2.c}

# Reset to where we were
cd $savepwd
file rename [file join globTestContext globTest] globTest
file delete globTestContext

test filename-14.7 {asterisks, question marks, and brackets} {unixOnly} {
    lsort [glob globTest/*]
} {globTest/a1 globTest/a2 globTest/a3 {globTest/weird name.c} globTest/x,z1.c globTest/x1.c globTest/y1.c globTest/z1.c}
test filename-14.7.1 {asterisks, question marks, and brackets} {pcOnly} {
    lsort [glob globTest/*]
} {globTest/.1 globTest/a1 globTest/a2 globTest/a3 {globTest/weird name.c} globTest/x,z1.c globTest/x1.c globTest/y1.c globTest/z1.c}
test filename-14.8 {asterisks, question marks, and brackets} {macOnly} {
    lsort [glob globTest/*]
} {:globTest:.1 :globTest:a1 :globTest:a2 :globTest:a3 {:globTest:weird name.c} :globTest:x,z1.c :globTest:x1.c :globTest:y1.c :globTest:z1.c}
test filename-14.9 {asterisks, question marks, and brackets} {unixOrPc} {
    lsort [glob globTest/.*]
} {globTest/. globTest/.. globTest/.1}
test filename-14.10 {asterisks, question marks, and brackets} {macOnly} {
    lsort [glob globTest/.*]
} {:globTest:.1}
test filename-14.11 {asterisks, question marks, and brackets} {unixOrPc} {
    lsort [glob globTest/*/*]
} {globTest/a1/b1 globTest/a1/b2 globTest/a2/b3}
test filename-14.12 {asterisks, question marks, and brackets} {macOnly} {
    lsort [glob globTest/*/*]
} {:globTest:a1:b1 :globTest:a1:b2 :globTest:a2:b3}
test filename-14.13 {asterisks, question marks, and brackets} {unixOrPc} {
    lsort [glob {globTest/[xyab]1.*}]
} {globTest/x1.c globTest/y1.c}
test filename-14.14 {asterisks, question marks, and brackets} {macOnly} {
    lsort [glob {globTest/[xyab]1.*}]
} {:globTest:x1.c :globTest:y1.c}
test filename-14.15 {asterisks, question marks, and brackets} {unixOrPc} {
    lsort [glob globTest/*/]
} {globTest/a1/ globTest/a2/ globTest/a3/}
test filename-14.16 {asterisks, question marks, and brackets} {macOnly} {
    lsort [glob globTest/*/]
} {:globTest:a1: :globTest:a2: :globTest:a3:}
test filename-14.17 {asterisks, question marks, and brackets} {
    global env
    set temp $env(HOME)
    set env(HOME) [file join $env(HOME) globTest]
    set result [list [catch {glob ~/z*} msg] $msg]
    set env(HOME) $temp
    set result
} [list 0 [list [file join $env(HOME) globTest z1.c]]]
test filename-14.18 {asterisks, question marks, and brackets} {unixOrPc} {
    list [catch {lsort [glob globTest/*.c goo/*]} msg] $msg
} {0 {{globTest/weird name.c} globTest/x,z1.c globTest/x1.c globTest/y1.c globTest/z1.c}}
test filename-14.19 {asterisks, question marks, and brackets} {macOnly} {
    list [catch {lsort [glob globTest/*.c goo/*]} msg] $msg
} {0 {{:globTest:weird name.c} :globTest:x,z1.c :globTest:x1.c :globTest:y1.c :globTest:z1.c}}
test filename-14.20 {asterisks, question marks, and brackets} {
    list [catch {glob -nocomplain goo/*} msg] $msg
} {0 {}}
test filename-14.21 {asterisks, question marks, and brackets} {
    list [catch {glob globTest/*/gorp} msg] $msg
} {1 {no files matched glob pattern "globTest/*/gorp"}}
test filename-14.22 {asterisks, question marks, and brackets} {
    list [catch {glob goo/* x*z foo?q} msg] $msg
} {1 {no files matched glob patterns "goo/* x*z foo?q"}}
test filename-14.23 {slash globbing} {unixOrPc} {
    glob /
} /
test filename-14.24 {slash globbing} {pcOnly} {
    glob {\\}
} /
test filename-14.25 {type specific globbing} {unixOnly} {
    list [catch {lsort [glob -dir globTest -types f *]} msg] $msg
} [list 0 [lsort [list \
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-14.25.1 {type specific globbing} {pcOnly macOnly} {
    list [catch {lsort [glob -dir globTest -types f *]} msg] $msg
} [list 0 [lsort [list \
        [file join $globname .1]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-14.26 {type specific globbing} {
    list [catch {glob -nocomplain -dir globTest -types {readonly} *} msg] $msg
} [list 0 {}]

unset globname

# The following tests are only valid for Unix systems.
# On some systems, like AFS, "000" protection doesn't prevent
# access by owner, so the following test is not portable.

catch {file attributes globTest/a1 -permissions 0000}
test filename-15.1 {unix specific globbing} {unixOnly nonPortable} {
    string tolower [list [catch {glob globTest/a1/*} msg]  $msg $errorCode]
} {1 {couldn't read directory "globtest/a1": permission denied} {posix eacces {permission denied}}}
test filename-15.2 {unix specific no complain: no errors} {unixOnly nonPortable} {
    glob -nocomplain globTest/a1/*
} {}
test filename-15.3 {unix specific no complain: no errors, good result} \
	{unixOnly nonPortable} {
    # test fails because if an error occur , the interp's result
    # is reset...
    glob -nocomplain globTest/a2 globTest/a1/* globTest/a3
} {globTest/a2 globTest/a3}

catch {file attributes globTest/a1 -permissions 0755}
test filename-15.4 {unix specific no complain: no errors, good result} \
	{unixOnly nonPortable} {
    # test fails because if an error occurs, the interp's result
    # is reset... or you don't run at scriptics where the
    # outser and welch users exists
    glob -nocomplain ~ouster ~foo ~welch
} {/home/ouster /home/welch}
test filename-15.4.1 {no complain: no errors, good result} {
    # test used to fail because if an error occurs, the interp's result
    # is reset... 
    string equal [glob -nocomplain ~wontexist ~blah ~] \
      [glob -nocomplain ~ ~blah ~wontexist]
} {1}
test filename-15.5 {unix specific globbing} {unixOnly nonPortable} {
    glob ~ouster/.csh*
} "/home/ouster/.cshrc"
catch {close [open globTest/odd\\\[\]*?\{\}name w]}
test filename-15.6 {unix specific globbing} {unixOnly} {
    global env
    set temp $env(HOME)
    set env(HOME) $env(HOME)/globTest/odd\\\[\]*?\{\}name
    set result [list [catch {glob ~} msg] $msg]
    set env(HOME) $temp
    set result
} [list 0 [list [lindex [glob ~] 0]/globTest/odd\\\[\]*?\{\}name]]
catch {file delete -force globTest/odd\\\[\]*?\{\}name}

# The following tests are only valid for Windows systems.
set oldDir [pwd]
if {$::tcltest::testConstraints(pcOnly)} {
    cd c:/
    file delete -force globTest
    file mkdir globTest
    close [open globTest/x1.BAT w]
    close [open globTest/y1.Bat w]
    close [open globTest/z1.bat w]
}

test filename-16.1 {windows specific globbing} {pcOnly} {
    lsort [glob globTest/*.bat]
} {globTest/x1.BAT globTest/y1.Bat globTest/z1.bat}
test filename-16.2 {windows specific globbing} {pcOnly} {
    glob c:
} c:
test filename-16.3 {windows specific globbing} {pcOnly} {
    glob c:\\\\
} c:/
test filename-16.4 {windows specific globbing} {pcOnly} {
    glob c:/
} c:/
test filename-16.5 {windows specific globbing} {pcOnly} {
    glob c:*bTest
} c:globTest
test filename-16.6 {windows specific globbing} {pcOnly} {
    glob c:\\\\*bTest
} c:/globTest
test filename-16.7 {windows specific globbing} {pcOnly} {
    glob c:/*bTest
} c:/globTest
test filename-16.8 {windows specific globbing} {pcOnly} {
    lsort [glob c:globTest/*.bat]
} {c:globTest/x1.BAT c:globTest/y1.Bat c:globTest/z1.bat}
test filename-16.9 {windows specific globbing} {pcOnly} {
    lsort [glob c:/globTest/*.bat]
} {c:/globTest/x1.BAT c:/globTest/y1.Bat c:/globTest/z1.bat}
test filename-16.10 {windows specific globbing} {pcOnly} {
    lsort [glob c:globTest\\\\*.bat]
} {c:globTest/x1.BAT c:globTest/y1.Bat c:globTest/z1.bat}
test filename-16.11 {windows specific globbing} {pcOnly} {
    lsort [glob c:\\\\globTest\\\\*.bat]
} {c:/globTest/x1.BAT c:/globTest/y1.Bat c:/globTest/z1.bat}

# some tests require a shared C drive

if {[catch {cd //[info hostname]/c}]} {
    set ::tcltest::testConstraints(sharedCdrive) 0
} else {
    set ::tcltest::testConstraints(sharedCdrive) 1
}

test filename-16.12 {windows specific globbing} {pcOnly sharedCdrive} {
    cd //[info hostname]/c
    glob //[info hostname]/c/*Test
} //[info hostname]/c/globTest
test filename-16.13 {windows specific globbing} {pcOnly sharedCdrive} {
    cd //[info hostname]/c
    glob "\\\\\\\\[info hostname]\\\\c\\\\*Test"
} //[info hostname]/c/globTest
test filename-16.14 {windows specific globbing} {pcOnly} {
    cd [lindex [glob -types d -dir C:/ *] 0]
    expr {[lsearch -exact [glob {{.,*}*}] ".."] != -1}
} {1}
test filename-16.15 {windows specific globbing} {pcOnly} {
    cd [lindex [glob -types d -dir C:/ *] 0]
    glob ..
} {..}
test filename-16.16 {windows specific globbing} {pcOnly} {
    file tail [lindex [glob "[lindex [glob -types d -dir C:/ *] 0]/.."] 0]
} {..}

# cleanup
catch {file delete -force C:/globTest}
file delete -force globTest
cd $oldpwd
set env(HOME) $oldhome
if {[tcltest::testConstraint testsetplatform]} {
    testsetplatform $platform
    catch {unset platform}
}
catch {unset oldhome temp result}
::tcltest::cleanupTests
return
@


1.4
log
@touched all sources to ease next import
@
text
@d13 1
a13 1
# RCS: @@(#) $Id: fileName.test,v 1.6.8.2 2000/09/15 16:56:26 spolk Exp $
d20 2
a21 6
if {[info commands testsetplatform] == {}} {
    puts "This application hasn't been compiled with the \"testsetplatform\""
    puts "command, so I can't test the filename conversion procedures."
    ::tcltest::cleanupTests
    return 
} 
d24 3
a26 1
set platform [testgetplatform]
d28 1
a28 1
test filename-1.1 {Tcl_GetPathType: unix} {
d32 1
a32 1
test filename-1.2 {Tcl_GetPathType: unix} {
d36 1
a36 1
test filename-1.3 {Tcl_GetPathType: unix} {
d40 1
a40 1
test filename-1.4 {Tcl_GetPathType: unix} {
d44 1
a44 1
test filename-1.5 {Tcl_GetPathType: unix} {
d48 1
a48 1
test filename-1.6 {Tcl_GetPathType: unix} {
d52 1
a52 1
test filename-1.7 {Tcl_GetPathType: unix} {
d56 1
a56 1
test filename-1.8 {Tcl_GetPathType: unix} {
d61 1
a61 1
test filename-2.1 {Tcl_GetPathType: mac, denerate names} {
d65 1
a65 1
test filename-2.2 {Tcl_GetPathType: mac, denerate names} {
d69 1
a69 1
test filename-2.3 {Tcl_GetPathType: mac, denerate names} {
d73 1
a73 1
test filename-2.4 {Tcl_GetPathType: mac, denerate names} {
d77 1
a77 1
test filename-2.5 {Tcl_GetPathType: mac, denerate names} {
d81 1
a81 1
test filename-2.6 {Tcl_GetPathType: mac, tilde names} {
d85 1
a85 1
test filename-2.7 {Tcl_GetPathType: mac, tilde names} {
d89 1
a89 1
test filename-2.8 {Tcl_GetPathType: mac, tilde names} {
d93 1
a93 1
test filename-2.9 {Tcl_GetPathType: mac, tilde names} {
d97 1
a97 1
test filename-2.10 {Tcl_GetPathType: mac, tilde names} {
d101 1
a101 1
test filename-2.11 {Tcl_GetPathType: mac, unix-style names} {
d105 1
a105 1
test filename-2.12 {Tcl_GetPathType: mac, unix-style names} {
d109 1
a109 1
test filename-2.13 {Tcl_GetPathType: mac, unix-style names} {
d113 1
a113 1
test filename-2.14 {Tcl_GetPathType: mac, unix-style names} {
d117 1
a117 1
test filename-2.15 {Tcl_GetPathType: mac, unix-style names} {
d121 1
a121 1
test filename-2.16 {Tcl_GetPathType: mac, mac-style names} {
d125 1
a125 1
test filename-2.17 {Tcl_GetPathType: mac, mac-style names} {
d129 1
a129 1
test filename-2.18 {Tcl_GetPathType: mac, mac-style names} {
d133 1
a133 1
test filename-2.19 {Tcl_GetPathType: mac, mac-style names} {
d137 1
a137 1
test filename-2.20 {Tcl_GetPathType: mac, mac-style names} {
d141 1
a141 1
test filename-2.21 {Tcl_GetPathType: mac, mac-style names} {
d145 1
a145 1
test filename-2.22 {Tcl_GetPathType: mac, mac-style names} {
d149 1
a149 1
test filename-2.23 {Tcl_GetPathType: mac, mac-style names} {
d153 1
a153 1
test filename-2.24 {Tcl_GetPathType: mac, mac-style names} {
d157 1
a157 1
test filename-2.25 {Tcl_GetPathType: mac, mac-style names} {
d161 1
a161 1
test filename-2.26 {Tcl_GetPathType: mac, mac-style names} {
d165 1
a165 1
test filename-2.27 {Tcl_GetPathType: mac, mac-style names} {
d170 1
a170 1
test filename-3.1 {Tcl_GetPathType: windows} {
d174 1
a174 1
test filename-3.2 {Tcl_GetPathType: windows} {
d178 1
a178 1
test filename-3.3 {Tcl_GetPathType: windows} {
d182 1
a182 1
test filename-3.4 {Tcl_GetPathType: windows} {
d186 1
a186 1
test filename-3.5 {Tcl_GetPathType: windows} {
d190 1
a190 1
test filename-3.6 {Tcl_GetPathType: windows} {
d194 1
a194 1
test filename-3.7 {Tcl_GetPathType: windows} {
d198 1
a198 1
test filename-3.8 {Tcl_GetPathType: windows} {
d202 1
a202 1
test filename-3.9 {Tcl_GetPathType: windows} {
d206 1
a206 1
test filename-3.10 {Tcl_GetPathType: windows} {
d210 1
a210 1
test filename-3.11 {Tcl_GetPathType: windows} {
d214 1
a214 1
test filename-3.12 {Tcl_GetPathType: windows} {
d218 1
a218 1
test filename-3.13 {Tcl_GetPathType: windows} {
d222 1
a222 1
test filename-3.14 {Tcl_GetPathType: windows} {
d226 1
a226 1
test filename-3.15 {Tcl_GetPathType: windows} {
d230 1
a230 1
test filename-3.16 {Tcl_GetPathType: windows} {
d235 1
a235 1
test filename-4.1 {Tcl_SplitPath: unix} {
d239 1
a239 1
test filename-4.2 {Tcl_SplitPath: unix} {
d243 1
a243 1
test filename-4.3 {Tcl_SplitPath: unix} {
d247 1
a247 1
test filename-4.4 {Tcl_SplitPath: unix} {
d251 1
a251 1
test filename-4.5 {Tcl_SplitPath: unix} {
d255 1
a255 1
test filename-4.6 {Tcl_SplitPath: unix} {
d259 1
a259 1
test filename-4.7 {Tcl_SplitPath: unix} {
d263 1
a263 1
test filename-4.8 {Tcl_SplitPath: unix} {
d267 1
a267 1
test filename-4.9 {Tcl_SplitPath: unix} {
d271 1
a271 1
test filename-4.10 {Tcl_SplitPath: unix} {
d275 1
a275 1
test filename-4.11 {Tcl_SplitPath: unix} {
d279 1
a279 1
test filename-4.12 {Tcl_SplitPath: unix} {
d283 1
a283 1
test filename-4.13 {Tcl_SplitPath: unix} {
d287 1
a287 1
test filename-4.14 {Tcl_SplitPath: unix} {
d291 1
a291 1
test filename-4.15 {Tcl_SplitPath: unix} {
d295 1
a295 1
test filename-4.16 {Tcl_SplitPath: unix} {
d299 1
a299 1
test filename-4.17 {Tcl_SplitPath: unix} {
d303 1
a303 1
test filename-4.18 {Tcl_SplitPath: unix} {
d308 31
a338 1
test filename-5.1 {Tcl_SplitPath: mac} {
d342 1
a342 1
test filename-5.2 {Tcl_SplitPath: mac} {
d346 1
a346 1
test filename-5.3 {Tcl_SplitPath: mac} {
d350 1
a350 1
test filename-5.4 {Tcl_SplitPath: mac} {
d354 1
a354 1
test filename-5.5 {Tcl_SplitPath: mac} {
d358 1
a358 1
test filename-5.6 {Tcl_SplitPath: mac} {
d362 1
a362 1
test filename-5.7 {Tcl_SplitPath: mac} {
d366 1
a366 1
test filename-5.8 {Tcl_SplitPath: mac} {
d370 1
a370 1
test filename-5.9 {Tcl_SplitPath: mac} {
d374 1
a374 1
test filename-5.10 {Tcl_SplitPath: mac} {
d378 1
a378 1
test filename-5.11 {Tcl_SplitPath: mac} {
d382 1
a382 1
test filename-5.12 {Tcl_SplitPath: mac} {
d386 1
a386 1
test filename-5.13 {Tcl_SplitPath: mac} {
d390 1
a390 1
test filename-5.14 {Tcl_SplitPath: mac} {
d394 1
a394 1
test filename-5.15 {Tcl_SplitPath: mac} {
d398 1
a398 1
test filename-5.16 {Tcl_SplitPath: mac} {
d402 1
a402 1
test filename-5.17 {Tcl_SplitPath: mac} {
d406 1
a406 1
test filename-5.18 {Tcl_SplitPath: mac} {
d410 1
a410 1
test filename-5.19 {Tcl_SplitPath: mac} {
d414 1
a414 1
test filename-5.20 {Tcl_SplitPath: mac} {
d418 1
a418 1
test filename-5.21 {Tcl_SplitPath: mac} {
d422 1
a422 1
test filename-5.22 {Tcl_SplitPath: mac} {
d426 1
a426 1
test filename-5.23 {Tcl_SplitPath: mac} {
d430 1
a430 1
test filename-5.24 {Tcl_SplitPath: mac} {
d434 1
a434 1
test filename-5.25 {Tcl_SplitPath: mac} {
d438 1
a438 1
test filename-5.26 {Tcl_SplitPath: mac} {
d442 1
a442 1
test filename-5.27 {Tcl_SplitPath: mac} {
d446 1
a446 1
test filename-5.28 {Tcl_SplitPath: mac} {
d450 1
a450 1
test filename-5.29 {Tcl_SplitPath: mac} {
d454 1
a454 1
test filename-5.30 {Tcl_SplitPath: mac} {
d458 1
a458 1
test filename-5.31 {Tcl_SplitPath: mac} {
d462 1
a462 1
test filename-5.32 {Tcl_SplitPath: mac} {
d466 1
a466 1
test filename-5.33 {Tcl_SplitPath: mac} {
d470 1
a470 1
test filename-5.34 {Tcl_SplitPath: mac} {
d474 1
a474 1
test filename-5.35 {Tcl_SplitPath: mac} {
d478 1
a478 1
test filename-5.36 {Tcl_SplitPath: mac} {
d482 1
a482 1
test filename-5.37 {Tcl_SplitPath: mac} {
d486 1
a486 1
test filename-5.38 {Tcl_SplitPath: mac} {
d490 1
a490 1
test filename-5.39 {Tcl_SplitPath: mac} {
d494 1
a494 1
test filename-5.40 {Tcl_SplitPath: mac} {
d498 1
a498 1
test filename-5.41 {Tcl_SplitPath: mac} {
d502 1
a502 1
test filename-5.42 {Tcl_SplitPath: mac} {
d506 1
a506 1
test filename-5.43 {Tcl_SplitPath: mac} {
d510 1
a510 1
test filename-5.44 {Tcl_SplitPath: mac} {
d514 1
a514 1
test filename-5.45 {Tcl_SplitPath: mac} {
d518 1
a518 1
test filename-5.46 {Tcl_SplitPath: mac} {
d522 1
a522 1
test filename-5.47 {Tcl_SplitPath: mac} {
d526 1
a526 1
test filename-5.48 {Tcl_SplitPath: mac} {
d530 1
a530 1
test filename-5.49 {Tcl_SplitPath: mac} {
d534 1
a534 1
test filename-5.50 {Tcl_SplitPath: mac} {
d538 1
a538 1
test filename-5.51 {Tcl_SplitPath: mac} {
d543 1
a543 1
test filename-6.1 {Tcl_SplitPath: win} {
d547 1
a547 1
test filename-6.2 {Tcl_SplitPath: win} {
d551 1
a551 1
test filename-6.3 {Tcl_SplitPath: win} {
d555 1
a555 1
test filename-6.4 {Tcl_SplitPath: win} {
d559 1
a559 1
test filename-6.5 {Tcl_SplitPath: win} {
d563 1
a563 1
test filename-6.6 {Tcl_SplitPath: win} {
d567 1
a567 1
test filename-6.7 {Tcl_SplitPath: win} {
d571 1
a571 1
test filename-6.8 {Tcl_SplitPath: win} {
d575 1
a575 1
test filename-6.9 {Tcl_SplitPath: win} {
d579 1
a579 1
test filename-6.10 {Tcl_SplitPath: win} {
d583 1
a583 1
test filename-6.11 {Tcl_SplitPath: win} {
d587 1
a587 1
test filename-6.12 {Tcl_SplitPath: win} {
d591 1
a591 1
test filename-6.13 {Tcl_SplitPath: win} {
d595 1
a595 1
test filename-6.14 {Tcl_SplitPath: win} {
d599 1
a599 1
test filename-6.15 {Tcl_SplitPath: win} {
d603 1
a603 1
test filename-6.16 {Tcl_SplitPath: win} {
d607 1
a607 1
test filename-6.17 {Tcl_SplitPath: win} {
d611 1
a611 1
test filename-6.18 {Tcl_SplitPath: win} {
d615 1
a615 1
test filename-6.19 {Tcl_SplitPath: win} {
d619 1
a619 1
test filename-6.20 {Tcl_SplitPath: win} {
d623 1
a623 1
test filename-6.21 {Tcl_SplitPath: win} {
d627 1
a627 1
test filename-6.22 {Tcl_SplitPath: win} {
d631 1
a631 1
test filename-6.23 {Tcl_SplitPath: win} {
d635 1
a635 1
test filename-6.24 {Tcl_SplitPath: win} {
d639 1
a639 1
test filename-6.25 {Tcl_SplitPath: win} {
d643 1
a643 1
test filename-6.26 {Tcl_SplitPath: win} {
d647 1
a647 1
test filename-6.27 {Tcl_SplitPath: win} {
d651 1
a651 1
test filename-6.28 {Tcl_SplitPath: win} {
d655 1
a655 1
test filename-6.29 {Tcl_SplitPath: win} {
d659 1
a659 1
test filename-6.30 {Tcl_SplitPath: win} {
d664 1
a664 1
test filename-7.1 {Tcl_JoinPath: unix} {
d668 1
a668 1
test filename-7.2 {Tcl_JoinPath: unix} {
d672 1
a672 1
test filename-7.3 {Tcl_JoinPath: unix} {
d676 1
a676 1
test filename-7.4 {Tcl_JoinPath: unix} {
d680 1
a680 1
test filename-7.5 {Tcl_JoinPath: unix} {
d684 1
a684 1
test filename-7.6 {Tcl_JoinPath: unix} {
d688 1
a688 1
test filename-7.7 {Tcl_JoinPath: unix} {
d692 1
a692 1
test filename-7.8 {Tcl_JoinPath: unix} {
d696 1
a696 1
test filename-7.9 {Tcl_JoinPath: unix} {
d700 1
a700 1
test filename-7.10 {Tcl_JoinPath: unix} {
d704 1
a704 1
test filename-7.11 {Tcl_JoinPath: unix} {
d708 1
a708 1
test filename-7.12 {Tcl_JoinPath: unix} {
d712 1
a712 1
test filename-7.13 {Tcl_JoinPath: unix} {
d716 1
a716 1
test filename-7.14 {Tcl_JoinPath: unix} {
d720 1
a720 1
test filename-7.15 {Tcl_JoinPath: unix} {
d724 1
a724 1
test filename-7.16 {Tcl_JoinPath: unix} {
d728 1
a728 1
test filename-7.17 {Tcl_JoinPath: unix} {
d732 1
a732 1
test filename-7.18 {Tcl_JoinPath: unix} {
d737 1
a737 1
test filename-8.1 {Tcl_JoinPath: mac} {
d741 1
a741 1
test filename-8.2 {Tcl_JoinPath: mac} {
d745 1
a745 1
test filename-8.3 {Tcl_JoinPath: mac} {
d749 1
a749 1
test filename-8.4 {Tcl_JoinPath: mac} {
d753 1
a753 1
test filename-8.5 {Tcl_JoinPath: mac} {
d757 1
a757 1
test filename-8.6 {Tcl_JoinPath: mac} {
d761 1
a761 1
test filename-8.7 {Tcl_JoinPath: mac} {
d765 1
a765 1
test filename-8.8 {Tcl_JoinPath: mac} {
d769 1
a769 1
test filename-8.9 {Tcl_JoinPath: mac} {
d773 1
a773 1
test filename-8.10 {Tcl_JoinPath: mac} {
d777 1
a777 1
test filename-8.11 {Tcl_JoinPath: mac} {
d781 1
a781 1
test filename-8.12 {Tcl_JoinPath: mac} {
d785 1
a785 1
test filename-8.13 {Tcl_JoinPath: mac} {
d789 1
a789 1
test filename-8.14 {Tcl_JoinPath: mac} {
d793 1
a793 1
test filename-8.15 {Tcl_JoinPath: mac} {
d797 1
a797 1
test filename-8.16 {Tcl_JoinPath: mac} {
d801 1
a801 1
test filename-8.17 {Tcl_JoinPath: mac} {
d805 1
a805 1
test filename-8.18 {Tcl_JoinPath: mac} {
d809 1
a809 1
test filename-8.19 {Tcl_JoinPath: mac} {
d813 1
a813 1
test filename-8.20 {Tcl_JoinPath: mac} {
d817 1
a817 1
test filename-8.21 {Tcl_JoinPath: mac} {
d821 1
a821 1
test filename-8.22 {Tcl_JoinPath: mac} {
d826 1
a826 1
test filename-9.1 {Tcl_JoinPath: win} {
d830 1
a830 1
test filename-9.2 {Tcl_JoinPath: win} {
d834 1
a834 1
test filename-9.3 {Tcl_JoinPath: win} {
d838 1
a838 1
test filename-9.4 {Tcl_JoinPath: win} {
d842 1
a842 1
test filename-9.5 {Tcl_JoinPath: win} {
d846 1
a846 1
test filename-9.6 {Tcl_JoinPath: win} {
d850 1
a850 1
test filename-9.7 {Tcl_JoinPath: win} {
d854 1
a854 1
test filename-9.8 {Tcl_JoinPath: win} {
d858 1
a858 1
test filename-9.9 {Tcl_JoinPath: win} {
d862 1
a862 1
test filename-9.10 {Tcl_JoinPath: win} {
d866 1
a866 1
test filename-9.11 {Tcl_JoinPath: win} {
d870 1
a870 1
test filename-9.12 {Tcl_JoinPath: win} {
d874 1
a874 1
test filename-9.13 {Tcl_JoinPath: win} {
d878 1
a878 1
test filename-9.14 {Tcl_JoinPath: win} {
d882 1
a882 1
test filename-9.15 {Tcl_JoinPath: win} {
d886 1
a886 1
test filename-9.16 {Tcl_JoinPath: win} {
d890 1
a890 1
test filename-9.17 {Tcl_JoinPath: win} {
d894 1
a894 1
test filename-9.18 {Tcl_JoinPath: win} {
d899 1
a899 1
test filename-10.1 {Tcl_TranslateFileName} {
d903 1
a903 1
test filename-10.2 {Tcl_TranslateFileName} {
d907 1
a907 1
test filename-10.3 {Tcl_TranslateFileName} {
d911 1
a911 1
test filename-10.4 {Tcl_TranslateFileName} {
d915 1
a915 1
test filename-10.5 {Tcl_TranslateFileName} {
d919 1
a919 1
test filename-10.6 {Tcl_TranslateFileName} {
d928 1
a928 1
test filename-10.7 {Tcl_TranslateFileName} {
d937 1
a937 1
test filename-10.8 {Tcl_TranslateFileName} {
d946 1
a946 1
test filename-10.9 {Tcl_TranslateFileName} {
d955 1
a955 1
test filename-10.10 {Tcl_TranslateFileName} {
d964 1
a964 1
test filename-10.11 {Tcl_TranslateFileName} {
d973 1
a973 1
test filename-10.12 {Tcl_TranslateFileName} {
d982 1
a982 1
test filename-10.13 {Tcl_TranslateFileName} {
d991 1
a991 1
test filename-10.14 {Tcl_TranslateFileName} {
d1000 1
a1000 1
test filename-10.15 {Tcl_TranslateFileName} {
d1009 1
a1009 1
test filename-10.16 {Tcl_TranslateFileName} {
d1018 1
a1018 1
test filename-10.17 {Tcl_TranslateFileName} {
d1027 1
a1027 1
test filename-10.18 {Tcl_TranslateFileName} {
d1036 1
a1036 1
test filename-10.19 {Tcl_TranslateFileName} {
d1045 1
a1045 1
test filename-10.20 {Tcl_TranslateFileName} {
d1048 1
a1048 1
test filename-10.21 {Tcl_TranslateFileName} {
d1057 1
a1057 1
test filename-10.22 {Tcl_TranslateFileName} {
d1062 3
a1064 1
testsetplatform $platform
d1081 1
a1081 1
} {1 {bad option "-gorp": must be -directory, -join, -nocomplain, -path, -types, or --}}
d1100 1
a1100 1
test filename-11.9 {Tcl_GlobCmd} {
d1104 1
a1104 1
test filename-11.10 {Tcl_GlobCmd} {
d1108 1
a1108 1
test filename-11.11 {Tcl_GlobCmd} {
d1112 1
a1112 1
test filename-11.12 {Tcl_GlobCmd} {
d1121 3
a1123 1
testsetplatform $platform
d1129 1
d1131 1
d1161 9
a1169 1
test filename-11.17 {Tcl_GlobCmd} {
d1172 1
d1178 81
a1258 1
test filename-11.18 {Tcl_GlobCmd} {
d1261 10
d1276 1
a1276 1
test filename-11.19 {Tcl_GlobCmd} {
d1280 1
d1295 5
d1303 9
a1311 1
test filename-11.22 {Tcl_GlobCmd} {
d1314 1
d1320 1
a1320 1
test filename-11.23 {Tcl_GlobCmd} {
d1328 19
a1346 1
test filename-11.24 {Tcl_GlobCmd} {
d1350 1
d1361 10
d1401 59
a1459 1
} {1 {bad option "-paths": must be -directory, -join, -nocomplain, -path, -types, or --}}
d1468 18
d1489 9
d1503 1
a1503 1
  set globPreResult :globTest:
d1505 1
a1505 1
  set globPreResult globTest/
d1598 7
d1611 7
a1617 1
test filename-14.7 {asterisks, question marks, and brackets} {unixOrPc} {
d1620 3
d1679 8
a1686 1
test filename-14.25 {type specific globbing} {
d1689 1
d1704 1
a1704 1
catch {exec chmod 000 globTest/a1}
d1712 1
a1712 1
	{unixOnly nonPortable knownBug} {
d1718 1
a1718 1
catch {exec chmod 755 globTest/a1}
d1720 1
a1720 1
	{unixOnly nonPortable knownBug} {
d1726 6
d1743 2
a1744 3
} [list 0 [list [glob ~]/globTest/odd\\\[\]*?\{\}name]]
catch {exec rm -f globTest/odd\\\[\]*?\{\}name}

d1747 2
a1748 3
set temp [pwd]
catch {cd c:/}
catch {
d1750 2
a1751 2
    removeDirectory globTest
    makeDirectory globTest
d1770 1
a1770 1
    glob c:*Test
d1773 1
a1773 1
    glob c:\\\\*Test
d1776 1
a1776 1
    glob c:/*Test
a1800 5
    removeDirectory globTest
    makeDirectory globTest
    close [open globTest/x1.BAT w]
    close [open globTest/y1.Bat w]
    close [open globTest/z1.bat w]
a1804 5
    removeDirectory globTest
    makeDirectory globTest
    close [open globTest/x1.BAT w]
    close [open globTest/y1.Bat w]
    close [open globTest/z1.bat w]
d1807 11
d1820 1
a1820 2
file delete -force //[info hostname]/c/globTest
cd $temp
d1822 1
d1824 5
a1828 2
testsetplatform $platform
catch {unset oldhome platform temp result}
a1830 13













@


1.3
log
@touched all sources to ease next import
@
text
@@


1.3.4.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@d13 1
a13 1
# RCS: @@(#) $Id: fileName.test,v 1.26 2002/07/10 13:08:20 dkf Exp $
d20 6
a25 2
tcltest::testConstraint testsetplatform [string equal testsetplatform [info commands testsetplatform]]
tcltest::testConstraint testtranslatefilename [string equal testtranslatefilename [info commands testtranslatefilename]]
d28 1
a28 3
if {[tcltest::testConstraint testsetplatform]} {
    set platform [testgetplatform]
}
d30 1
a30 1
test filename-1.1 {Tcl_GetPathType: unix} {testsetplatform} {
d34 1
a34 1
test filename-1.2 {Tcl_GetPathType: unix} {testsetplatform} {
d38 1
a38 1
test filename-1.3 {Tcl_GetPathType: unix} {testsetplatform} {
d42 1
a42 1
test filename-1.4 {Tcl_GetPathType: unix} {testsetplatform} {
d46 1
a46 1
test filename-1.5 {Tcl_GetPathType: unix} {testsetplatform} {
d50 1
a50 1
test filename-1.6 {Tcl_GetPathType: unix} {testsetplatform} {
d54 1
a54 1
test filename-1.7 {Tcl_GetPathType: unix} {testsetplatform} {
d58 1
a58 1
test filename-1.8 {Tcl_GetPathType: unix} {testsetplatform} {
d63 1
a63 1
test filename-2.1 {Tcl_GetPathType: mac, denerate names} {testsetplatform} {
d67 1
a67 1
test filename-2.2 {Tcl_GetPathType: mac, denerate names} {testsetplatform} {
d71 1
a71 1
test filename-2.3 {Tcl_GetPathType: mac, denerate names} {testsetplatform} {
d75 1
a75 1
test filename-2.4 {Tcl_GetPathType: mac, denerate names} {testsetplatform} {
d79 1
a79 1
test filename-2.5 {Tcl_GetPathType: mac, denerate names} {testsetplatform} {
d83 1
a83 1
test filename-2.6 {Tcl_GetPathType: mac, tilde names} {testsetplatform} {
d87 1
a87 1
test filename-2.7 {Tcl_GetPathType: mac, tilde names} {testsetplatform} {
d91 1
a91 1
test filename-2.8 {Tcl_GetPathType: mac, tilde names} {testsetplatform} {
d95 1
a95 1
test filename-2.9 {Tcl_GetPathType: mac, tilde names} {testsetplatform} {
d99 1
a99 1
test filename-2.10 {Tcl_GetPathType: mac, tilde names} {testsetplatform} {
d103 1
a103 1
test filename-2.11 {Tcl_GetPathType: mac, unix-style names} {testsetplatform} {
d107 1
a107 1
test filename-2.12 {Tcl_GetPathType: mac, unix-style names} {testsetplatform} {
d111 1
a111 1
test filename-2.13 {Tcl_GetPathType: mac, unix-style names} {testsetplatform} {
d115 1
a115 1
test filename-2.14 {Tcl_GetPathType: mac, unix-style names} {testsetplatform} {
d119 1
a119 1
test filename-2.15 {Tcl_GetPathType: mac, unix-style names} {testsetplatform} {
d123 1
a123 1
test filename-2.16 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d127 1
a127 1
test filename-2.17 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d131 1
a131 1
test filename-2.18 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d135 1
a135 1
test filename-2.19 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d139 1
a139 1
test filename-2.20 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d143 1
a143 1
test filename-2.21 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d147 1
a147 1
test filename-2.22 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d151 1
a151 1
test filename-2.23 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d155 1
a155 1
test filename-2.24 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d159 1
a159 1
test filename-2.25 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d163 1
a163 1
test filename-2.26 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d167 1
a167 1
test filename-2.27 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d172 1
a172 1
test filename-3.1 {Tcl_GetPathType: windows} {testsetplatform} {
d176 1
a176 1
test filename-3.2 {Tcl_GetPathType: windows} {testsetplatform} {
d180 1
a180 1
test filename-3.3 {Tcl_GetPathType: windows} {testsetplatform} {
d184 1
a184 1
test filename-3.4 {Tcl_GetPathType: windows} {testsetplatform} {
d188 1
a188 1
test filename-3.5 {Tcl_GetPathType: windows} {testsetplatform} {
d192 1
a192 1
test filename-3.6 {Tcl_GetPathType: windows} {testsetplatform} {
d196 1
a196 1
test filename-3.7 {Tcl_GetPathType: windows} {testsetplatform} {
d200 1
a200 1
test filename-3.8 {Tcl_GetPathType: windows} {testsetplatform} {
d204 1
a204 1
test filename-3.9 {Tcl_GetPathType: windows} {testsetplatform} {
d208 1
a208 1
test filename-3.10 {Tcl_GetPathType: windows} {testsetplatform} {
d212 1
a212 1
test filename-3.11 {Tcl_GetPathType: windows} {testsetplatform} {
d216 1
a216 1
test filename-3.12 {Tcl_GetPathType: windows} {testsetplatform} {
d220 1
a220 1
test filename-3.13 {Tcl_GetPathType: windows} {testsetplatform} {
d224 1
a224 1
test filename-3.14 {Tcl_GetPathType: windows} {testsetplatform} {
d228 1
a228 1
test filename-3.15 {Tcl_GetPathType: windows} {testsetplatform} {
d232 1
a232 1
test filename-3.16 {Tcl_GetPathType: windows} {testsetplatform} {
d237 1
a237 1
test filename-4.1 {Tcl_SplitPath: unix} {testsetplatform} {
d241 1
a241 1
test filename-4.2 {Tcl_SplitPath: unix} {testsetplatform} {
d245 1
a245 1
test filename-4.3 {Tcl_SplitPath: unix} {testsetplatform} {
d249 1
a249 1
test filename-4.4 {Tcl_SplitPath: unix} {testsetplatform} {
d253 1
a253 1
test filename-4.5 {Tcl_SplitPath: unix} {testsetplatform} {
d257 1
a257 1
test filename-4.6 {Tcl_SplitPath: unix} {testsetplatform} {
d261 1
a261 1
test filename-4.7 {Tcl_SplitPath: unix} {testsetplatform} {
d265 1
a265 1
test filename-4.8 {Tcl_SplitPath: unix} {testsetplatform} {
d269 1
a269 1
test filename-4.9 {Tcl_SplitPath: unix} {testsetplatform} {
d273 1
a273 1
test filename-4.10 {Tcl_SplitPath: unix} {testsetplatform} {
d277 1
a277 1
test filename-4.11 {Tcl_SplitPath: unix} {testsetplatform} {
d281 1
a281 1
test filename-4.12 {Tcl_SplitPath: unix} {testsetplatform} {
d285 1
a285 1
test filename-4.13 {Tcl_SplitPath: unix} {testsetplatform} {
d289 1
a289 1
test filename-4.14 {Tcl_SplitPath: unix} {testsetplatform} {
d293 1
a293 1
test filename-4.15 {Tcl_SplitPath: unix} {testsetplatform} {
d297 1
a297 1
test filename-4.16 {Tcl_SplitPath: unix} {testsetplatform} {
d301 1
a301 1
test filename-4.17 {Tcl_SplitPath: unix} {testsetplatform} {
d305 1
a305 1
test filename-4.18 {Tcl_SplitPath: unix} {testsetplatform} {
d310 1
a310 31
if {[tcltest::testConstraint testsetplatform]} {
    testsetplatform $platform
}

test filename-4.19 {Tcl_SplitPath} {
    set oldDir [pwd]
    set res [catch {
	cd [temporaryDirectory]
	file mkdir tildetmp
	set nastydir [file join tildetmp ./~tilde]
	file mkdir $nastydir
	set norm [file normalize $nastydir]
	cd tildetmp
	cd ./~tilde
	glob -nocomplain *
	set idx [string first tildetmp $norm]
	set norm [string range $norm $idx end]
	# fix path away so all platforms are the same
	regsub {(.*):$} $norm {\1} norm
	regsub -all ":" $norm "/" norm
	# make sure we can delete the directory we created
	cd $oldDir
	file delete -force $nastydir
	set norm
    } err]
    cd $oldDir
    catch {file delete -force tildetmp}
    list $res $err
} {0 tildetmp/~tilde}

test filename-5.1 {Tcl_SplitPath: mac} {testsetplatform} {
d314 1
a314 1
test filename-5.2 {Tcl_SplitPath: mac} {testsetplatform} {
d318 1
a318 1
test filename-5.3 {Tcl_SplitPath: mac} {testsetplatform} {
d322 1
a322 1
test filename-5.4 {Tcl_SplitPath: mac} {testsetplatform} {
d326 1
a326 1
test filename-5.5 {Tcl_SplitPath: mac} {testsetplatform} {
d330 1
a330 1
test filename-5.6 {Tcl_SplitPath: mac} {testsetplatform} {
d334 1
a334 1
test filename-5.7 {Tcl_SplitPath: mac} {testsetplatform} {
d338 1
a338 1
test filename-5.8 {Tcl_SplitPath: mac} {testsetplatform} {
d342 1
a342 1
test filename-5.9 {Tcl_SplitPath: mac} {testsetplatform} {
d346 1
a346 1
test filename-5.10 {Tcl_SplitPath: mac} {testsetplatform} {
d350 1
a350 1
test filename-5.11 {Tcl_SplitPath: mac} {testsetplatform} {
d354 1
a354 1
test filename-5.12 {Tcl_SplitPath: mac} {testsetplatform} {
d358 1
a358 1
test filename-5.13 {Tcl_SplitPath: mac} {testsetplatform} {
d362 1
a362 1
test filename-5.14 {Tcl_SplitPath: mac} {testsetplatform} {
d366 1
a366 1
test filename-5.15 {Tcl_SplitPath: mac} {testsetplatform} {
d370 1
a370 1
test filename-5.16 {Tcl_SplitPath: mac} {testsetplatform} {
d374 1
a374 1
test filename-5.17 {Tcl_SplitPath: mac} {testsetplatform} {
d378 1
a378 1
test filename-5.18 {Tcl_SplitPath: mac} {testsetplatform} {
d382 1
a382 1
test filename-5.19 {Tcl_SplitPath: mac} {testsetplatform} {
d386 1
a386 1
test filename-5.20 {Tcl_SplitPath: mac} {testsetplatform} {
d390 1
a390 1
test filename-5.21 {Tcl_SplitPath: mac} {testsetplatform} {
d394 1
a394 1
test filename-5.22 {Tcl_SplitPath: mac} {testsetplatform} {
d398 1
a398 1
test filename-5.23 {Tcl_SplitPath: mac} {testsetplatform} {
d402 1
a402 1
test filename-5.24 {Tcl_SplitPath: mac} {testsetplatform} {
d406 1
a406 1
test filename-5.25 {Tcl_SplitPath: mac} {testsetplatform} {
d410 1
a410 1
test filename-5.26 {Tcl_SplitPath: mac} {testsetplatform} {
d414 1
a414 1
test filename-5.27 {Tcl_SplitPath: mac} {testsetplatform} {
d418 1
a418 1
test filename-5.28 {Tcl_SplitPath: mac} {testsetplatform} {
d422 1
a422 1
test filename-5.29 {Tcl_SplitPath: mac} {testsetplatform} {
d426 1
a426 1
test filename-5.30 {Tcl_SplitPath: mac} {testsetplatform} {
d430 1
a430 1
test filename-5.31 {Tcl_SplitPath: mac} {testsetplatform} {
d434 1
a434 1
test filename-5.32 {Tcl_SplitPath: mac} {testsetplatform} {
d438 1
a438 1
test filename-5.33 {Tcl_SplitPath: mac} {testsetplatform} {
d442 1
a442 1
test filename-5.34 {Tcl_SplitPath: mac} {testsetplatform} {
d446 1
a446 1
test filename-5.35 {Tcl_SplitPath: mac} {testsetplatform} {
d450 1
a450 1
test filename-5.36 {Tcl_SplitPath: mac} {testsetplatform} {
d454 1
a454 1
test filename-5.37 {Tcl_SplitPath: mac} {testsetplatform} {
d458 1
a458 1
test filename-5.38 {Tcl_SplitPath: mac} {testsetplatform} {
d462 1
a462 1
test filename-5.39 {Tcl_SplitPath: mac} {testsetplatform} {
d466 1
a466 1
test filename-5.40 {Tcl_SplitPath: mac} {testsetplatform} {
d470 1
a470 1
test filename-5.41 {Tcl_SplitPath: mac} {testsetplatform} {
d474 1
a474 1
test filename-5.42 {Tcl_SplitPath: mac} {testsetplatform} {
d478 1
a478 1
test filename-5.43 {Tcl_SplitPath: mac} {testsetplatform} {
d482 1
a482 1
test filename-5.44 {Tcl_SplitPath: mac} {testsetplatform} {
d486 1
a486 1
test filename-5.45 {Tcl_SplitPath: mac} {testsetplatform} {
d490 1
a490 1
test filename-5.46 {Tcl_SplitPath: mac} {testsetplatform} {
d494 1
a494 1
test filename-5.47 {Tcl_SplitPath: mac} {testsetplatform} {
d498 1
a498 1
test filename-5.48 {Tcl_SplitPath: mac} {testsetplatform} {
d502 1
a502 1
test filename-5.49 {Tcl_SplitPath: mac} {testsetplatform} {
d506 1
a506 1
test filename-5.50 {Tcl_SplitPath: mac} {testsetplatform} {
d510 1
a510 1
test filename-5.51 {Tcl_SplitPath: mac} {testsetplatform} {
d515 1
a515 1
test filename-6.1 {Tcl_SplitPath: win} {testsetplatform} {
d519 1
a519 1
test filename-6.2 {Tcl_SplitPath: win} {testsetplatform} {
d523 1
a523 1
test filename-6.3 {Tcl_SplitPath: win} {testsetplatform} {
d527 1
a527 1
test filename-6.4 {Tcl_SplitPath: win} {testsetplatform} {
d531 1
a531 1
test filename-6.5 {Tcl_SplitPath: win} {testsetplatform} {
d535 1
a535 1
test filename-6.6 {Tcl_SplitPath: win} {testsetplatform} {
d539 1
a539 1
test filename-6.7 {Tcl_SplitPath: win} {testsetplatform} {
d543 1
a543 1
test filename-6.8 {Tcl_SplitPath: win} {testsetplatform} {
d547 1
a547 1
test filename-6.9 {Tcl_SplitPath: win} {testsetplatform} {
d551 1
a551 1
test filename-6.10 {Tcl_SplitPath: win} {testsetplatform} {
d555 1
a555 1
test filename-6.11 {Tcl_SplitPath: win} {testsetplatform} {
d559 1
a559 1
test filename-6.12 {Tcl_SplitPath: win} {testsetplatform} {
d563 1
a563 1
test filename-6.13 {Tcl_SplitPath: win} {testsetplatform} {
d567 1
a567 1
test filename-6.14 {Tcl_SplitPath: win} {testsetplatform} {
d571 1
a571 1
test filename-6.15 {Tcl_SplitPath: win} {testsetplatform} {
d575 1
a575 1
test filename-6.16 {Tcl_SplitPath: win} {testsetplatform} {
d579 1
a579 1
test filename-6.17 {Tcl_SplitPath: win} {testsetplatform} {
d583 1
a583 1
test filename-6.18 {Tcl_SplitPath: win} {testsetplatform} {
d587 1
a587 1
test filename-6.19 {Tcl_SplitPath: win} {testsetplatform} {
d591 1
a591 1
test filename-6.20 {Tcl_SplitPath: win} {testsetplatform} {
d595 1
a595 1
test filename-6.21 {Tcl_SplitPath: win} {testsetplatform} {
d599 1
a599 1
test filename-6.22 {Tcl_SplitPath: win} {testsetplatform} {
d603 1
a603 1
test filename-6.23 {Tcl_SplitPath: win} {testsetplatform} {
d607 1
a607 1
test filename-6.24 {Tcl_SplitPath: win} {testsetplatform} {
d611 1
a611 1
test filename-6.25 {Tcl_SplitPath: win} {testsetplatform} {
d615 1
a615 1
test filename-6.26 {Tcl_SplitPath: win} {testsetplatform} {
d619 1
a619 1
test filename-6.27 {Tcl_SplitPath: win} {testsetplatform} {
d623 1
a623 1
test filename-6.28 {Tcl_SplitPath: win} {testsetplatform} {
d627 1
a627 1
test filename-6.29 {Tcl_SplitPath: win} {testsetplatform} {
d631 1
a631 1
test filename-6.30 {Tcl_SplitPath: win} {testsetplatform} {
d636 1
a636 1
test filename-7.1 {Tcl_JoinPath: unix} {testsetplatform} {
d640 1
a640 1
test filename-7.2 {Tcl_JoinPath: unix} {testsetplatform} {
d644 1
a644 1
test filename-7.3 {Tcl_JoinPath: unix} {testsetplatform} {
d648 1
a648 1
test filename-7.4 {Tcl_JoinPath: unix} {testsetplatform} {
d652 1
a652 1
test filename-7.5 {Tcl_JoinPath: unix} {testsetplatform} {
d656 1
a656 1
test filename-7.6 {Tcl_JoinPath: unix} {testsetplatform} {
d660 1
a660 1
test filename-7.7 {Tcl_JoinPath: unix} {testsetplatform} {
d664 1
a664 1
test filename-7.8 {Tcl_JoinPath: unix} {testsetplatform} {
d668 1
a668 1
test filename-7.9 {Tcl_JoinPath: unix} {testsetplatform} {
d672 1
a672 1
test filename-7.10 {Tcl_JoinPath: unix} {testsetplatform} {
d676 1
a676 1
test filename-7.11 {Tcl_JoinPath: unix} {testsetplatform} {
d680 1
a680 1
test filename-7.12 {Tcl_JoinPath: unix} {testsetplatform} {
d684 1
a684 1
test filename-7.13 {Tcl_JoinPath: unix} {testsetplatform} {
d688 1
a688 1
test filename-7.14 {Tcl_JoinPath: unix} {testsetplatform} {
d692 1
a692 1
test filename-7.15 {Tcl_JoinPath: unix} {testsetplatform} {
d696 1
a696 1
test filename-7.16 {Tcl_JoinPath: unix} {testsetplatform} {
d700 1
a700 1
test filename-7.17 {Tcl_JoinPath: unix} {testsetplatform} {
d704 1
a704 1
test filename-7.18 {Tcl_JoinPath: unix} {testsetplatform} {
d709 1
a709 1
test filename-8.1 {Tcl_JoinPath: mac} {testsetplatform} {
d713 1
a713 1
test filename-8.2 {Tcl_JoinPath: mac} {testsetplatform} {
d717 1
a717 1
test filename-8.3 {Tcl_JoinPath: mac} {testsetplatform} {
d721 1
a721 1
test filename-8.4 {Tcl_JoinPath: mac} {testsetplatform} {
d725 1
a725 1
test filename-8.5 {Tcl_JoinPath: mac} {testsetplatform} {
d729 1
a729 1
test filename-8.6 {Tcl_JoinPath: mac} {testsetplatform} {
d733 1
a733 1
test filename-8.7 {Tcl_JoinPath: mac} {testsetplatform} {
d737 1
a737 1
test filename-8.8 {Tcl_JoinPath: mac} {testsetplatform} {
d741 1
a741 1
test filename-8.9 {Tcl_JoinPath: mac} {testsetplatform} {
d745 1
a745 1
test filename-8.10 {Tcl_JoinPath: mac} {testsetplatform} {
d749 1
a749 1
test filename-8.11 {Tcl_JoinPath: mac} {testsetplatform} {
d753 1
a753 1
test filename-8.12 {Tcl_JoinPath: mac} {testsetplatform} {
d757 1
a757 1
test filename-8.13 {Tcl_JoinPath: mac} {testsetplatform} {
d761 1
a761 1
test filename-8.14 {Tcl_JoinPath: mac} {testsetplatform} {
d765 1
a765 1
test filename-8.15 {Tcl_JoinPath: mac} {testsetplatform} {
d769 1
a769 1
test filename-8.16 {Tcl_JoinPath: mac} {testsetplatform} {
d773 1
a773 1
test filename-8.17 {Tcl_JoinPath: mac} {testsetplatform} {
d777 1
a777 1
test filename-8.18 {Tcl_JoinPath: mac} {testsetplatform} {
d781 1
a781 1
test filename-8.19 {Tcl_JoinPath: mac} {testsetplatform} {
d785 1
a785 1
test filename-8.20 {Tcl_JoinPath: mac} {testsetplatform} {
d789 1
a789 1
test filename-8.21 {Tcl_JoinPath: mac} {testsetplatform} {
d793 1
a793 1
test filename-8.22 {Tcl_JoinPath: mac} {testsetplatform} {
d798 1
a798 1
test filename-9.1 {Tcl_JoinPath: win} {testsetplatform} {
d802 1
a802 1
test filename-9.2 {Tcl_JoinPath: win} {testsetplatform} {
d806 1
a806 1
test filename-9.3 {Tcl_JoinPath: win} {testsetplatform} {
d810 1
a810 1
test filename-9.4 {Tcl_JoinPath: win} {testsetplatform} {
d814 1
a814 1
test filename-9.5 {Tcl_JoinPath: win} {testsetplatform} {
d818 1
a818 1
test filename-9.6 {Tcl_JoinPath: win} {testsetplatform} {
d822 1
a822 1
test filename-9.7 {Tcl_JoinPath: win} {testsetplatform} {
d826 1
a826 1
test filename-9.8 {Tcl_JoinPath: win} {testsetplatform} {
d830 1
a830 1
test filename-9.9 {Tcl_JoinPath: win} {testsetplatform} {
d834 1
a834 1
test filename-9.10 {Tcl_JoinPath: win} {testsetplatform} {
d838 1
a838 1
test filename-9.11 {Tcl_JoinPath: win} {testsetplatform} {
d842 1
a842 1
test filename-9.12 {Tcl_JoinPath: win} {testsetplatform} {
d846 1
a846 1
test filename-9.13 {Tcl_JoinPath: win} {testsetplatform} {
d850 1
a850 1
test filename-9.14 {Tcl_JoinPath: win} {testsetplatform} {
d854 1
a854 1
test filename-9.15 {Tcl_JoinPath: win} {testsetplatform} {
d858 1
a858 1
test filename-9.16 {Tcl_JoinPath: win} {testsetplatform} {
d862 1
a862 1
test filename-9.17 {Tcl_JoinPath: win} {testsetplatform} {
d866 1
a866 1
test filename-9.18 {Tcl_JoinPath: win} {testsetplatform} {
d871 1
a871 1
test filename-10.1 {Tcl_TranslateFileName} {testsetplatform} {
d875 1
a875 1
test filename-10.2 {Tcl_TranslateFileName} {testsetplatform} {
d879 1
a879 1
test filename-10.3 {Tcl_TranslateFileName} {testsetplatform} {
d883 1
a883 1
test filename-10.4 {Tcl_TranslateFileName} {testsetplatform} {
d887 1
a887 1
test filename-10.5 {Tcl_TranslateFileName} {testsetplatform} {
d891 1
a891 1
test filename-10.6 {Tcl_TranslateFileName} {testsetplatform} {
d900 1
a900 1
test filename-10.7 {Tcl_TranslateFileName} {testsetplatform} {
d909 1
a909 1
test filename-10.8 {Tcl_TranslateFileName} {testsetplatform} {
d918 1
a918 1
test filename-10.9 {Tcl_TranslateFileName} {testsetplatform} {
d927 1
a927 1
test filename-10.10 {Tcl_TranslateFileName} {testsetplatform} {
d936 1
a936 1
test filename-10.11 {Tcl_TranslateFileName} {testsetplatform} {
d945 1
a945 1
test filename-10.12 {Tcl_TranslateFileName} {testsetplatform} {
d954 1
a954 1
test filename-10.13 {Tcl_TranslateFileName} {testsetplatform} {
d963 1
a963 1
test filename-10.14 {Tcl_TranslateFileName} {testsetplatform} {
d972 1
a972 1
test filename-10.15 {Tcl_TranslateFileName} {testsetplatform} {
d981 1
a981 1
test filename-10.16 {Tcl_TranslateFileName} {testsetplatform} {
d990 1
a990 1
test filename-10.17 {Tcl_TranslateFileName} {testsetplatform} {
d999 1
a999 1
test filename-10.18 {Tcl_TranslateFileName} {testsetplatform} {
d1008 1
a1008 1
test filename-10.19 {Tcl_TranslateFileName} {testsetplatform} {
d1017 1
a1017 1
test filename-10.20 {Tcl_TranslateFileName} {testtranslatefilename} {
d1020 1
a1020 1
test filename-10.21 {Tcl_TranslateFileName} {testsetplatform} {
d1029 1
a1029 1
test filename-10.22 {Tcl_TranslateFileName} {testsetplatform} {
d1034 1
a1034 3
if {[tcltest::testConstraint testsetplatform]} {
    testsetplatform $platform
}
d1051 1
a1051 1
} {1 {bad option "-gorp": must be -directory, -join, -nocomplain, -path, -tails, -types, or --}}
d1070 1
a1070 1
test filename-11.9 {Tcl_GlobCmd} {testsetplatform} {
d1074 1
a1074 1
test filename-11.10 {Tcl_GlobCmd} {testsetplatform} {
d1078 1
a1078 1
test filename-11.11 {Tcl_GlobCmd} {testsetplatform} {
d1082 1
a1082 1
test filename-11.12 {Tcl_GlobCmd} {testsetplatform} {
d1091 1
a1091 3
if {[tcltest::testConstraint testsetplatform]} {
    testsetplatform $platform
}
a1096 1
set oldpwd [pwd]
a1097 1
cd [temporaryDirectory]
d1127 1
a1127 9
test filename-11.17 {Tcl_GlobCmd} {unixOnly} {
    list [catch {lsort [glob -directory $globname *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.17.1 {Tcl_GlobCmd} {pcOnly macOnly} {
a1129 1
        [file join $globname .1]\
d1135 1
a1135 81
if {[string equal $tcl_platform(platform) "windows"]} {
    if {[string index $tcl_platform(osVersion) 0] >= 5 \
      && ([lindex [file system [temporaryDirectory]] 1] == "NTFS")} {
	tcltest::testConstraint linkDirectory 1
    } else {
	tcltest::testConstraint linkDirectory 0
    }
} else {
    tcltest::testConstraint linkDirectory 1
}
test filename-11.17.2 {Tcl_GlobCmd} {notRoot linkDirectory} {
    set dir [pwd]
    set ret "error in test"
    if {[catch {
	cd $globname
	file link -symbolic link a1
	cd $dir
	set ret [list [catch {
	    lsort [glob -directory $globname -join * b1]
	} msg] $msg]
    }]} {
	cd $dir
    }
    file delete [file join $globname link]
    set ret
} [list 0 [lsort [list [file join $globname a1 b1] \
  [file join $globname link b1]]]]
# Simpler version of the above test to illustrate a given bug.
test filename-11.17.3 {Tcl_GlobCmd} {notRoot linkDirectory} {
    set dir [pwd]
    set ret "error in test"
    if {[catch {
	cd $globname
	file link -symbolic link a1
	cd $dir
	set ret [list [catch {
	    lsort [glob -directory $globname -type d *]
	} msg] $msg]
    }]} {
	cd $dir
    }
    file delete [file join $globname link]
    set ret
} [list 0 [lsort [list [file join $globname a1] \
  [file join $globname a2] \
  [file join $globname a3] \
  [file join $globname link]]]]
# Make sure the bugfix isn't too simple.  We don't want
# to break 'glob -type l'.
test filename-11.17.4 {Tcl_GlobCmd} {notRoot linkDirectory} {
    set dir [pwd]
    set ret "error in test"
    if {[catch {
	cd $globname
	file link -symbolic link a1
	cd $dir
	set ret [list [catch {
	    lsort [glob -directory $globname -type l *]
	} msg] $msg]
    }]} {
	cd $dir
    }
    file delete [file join $globname link]
    set ret
} [list 0 [list [file join $globname link]]]
test filename-11.17.5 {Tcl_GlobCmd} {
    list [catch {lsort [glob -directory $globname -tails *.c]} msg] $msg
} [list 0 [lsort [list "weird name.c" x,z1.c x1.c y1.c z1.c]]]
test filename-11.17.6 {Tcl_GlobCmd} {
    list [catch {lsort [glob -directory $globname -tails *.c *.c]} msg] $msg
} [list 0 [lsort [concat [list "weird name.c" x,z1.c x1.c y1.c z1.c] \
  [list "weird name.c" x,z1.c x1.c y1.c z1.c]]]]
test filename-11.18 {Tcl_GlobCmd} {unixOnly} {
    list [catch {lsort [glob -path $globname/ *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.18.1 {Tcl_GlobCmd} {pcOnly macOnly} {
a1137 10
        [file join $globname .1]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.19 {Tcl_GlobCmd} {unixOnly} {
    list [catch {lsort [glob -join -path \
	    [string range $globname 0 5] * *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
d1143 1
a1143 1
test filename-11.19.1 {Tcl_GlobCmd} {pcOnly macOnly} {
a1146 1
        [file join $globname .1]\
a1160 5
# Get rid of file/dir if it exists, since it will have
# been left behind by a previous failed run.
if {[file exists $horribleglobname]} {
    file delete -force $horribleglobname
}
d1164 1
a1164 9
test filename-11.22 {Tcl_GlobCmd} {unixOnly} {
    list [catch {lsort [glob -dir $globname *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.22.1 {Tcl_GlobCmd} {pcOnly macOnly} {
a1166 1
        [file join $globname .1]\
d1172 1
a1172 1
test filename-11.23 {Tcl_GlobCmd} {unixOnly} {
d1180 1
a1180 19
test filename-11.23.1 {Tcl_GlobCmd} {pcOnly macOnly} {
    list [catch {lsort [glob -path $globname/ *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
        [file join $globname .1]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.24 {Tcl_GlobCmd} {unixOnly} {
    list [catch {lsort [glob -join -path \
	    [string range $globname 0 5] * *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.24.1 {Tcl_GlobCmd} {pcOnly macOnly} {
a1183 1
        [file join $globname .1]\
a1193 10
test filename-11.25.1 {Tcl_GlobCmd} {
    list [catch {lsort [glob -type {d r} -dir $globname *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1]\
  [file join $globname a2]\
  [file join $globname a3]]]]
test filename-11.25.2 {Tcl_GlobCmd} {
    list [catch {lsort [glob -type {d r w} -dir $globname *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1]\
  [file join $globname a2]\
  [file join $globname a3]]]]
d1224 1
a1224 59
} {1 {bad option "-paths": must be -directory, -join, -nocomplain, -path, -tails, -types, or --}}
# Test '-tails' flag to glob.
test filename-11.36 {Tcl_GlobCmd} {
    list [catch {glob -tails *} msg] $msg
} {1 {"-tails" must be used with either "-directory" or "-path"}}
test filename-11.37 {Tcl_GlobCmd} {
    list [catch {glob -type d -tails -path $globname *} msg] $msg
} [list 0 [list $globname]]
test filename-11.38 {Tcl_GlobCmd} {
    list [catch {glob -tails -path $globname *} msg] $msg
} [list 0 [list $globname]]
test filename-11.39 {Tcl_GlobCmd} {
    list [catch {glob -tails -join -path $globname *} msg] $msg
} [list 0 [list $globname]]
test filename-11.40 {Tcl_GlobCmd} {
    expr {[glob -dir [pwd] -tails *] == [glob *]}
} {1}
test filename-11.41 {Tcl_GlobCmd} {
    expr {[glob -dir [pwd] -tails *] != [glob -dir [pwd] *]}
} {1}
test filename-11.42 {Tcl_GlobCmd} {
    set res [list]
    foreach f [glob -dir [pwd] *] {
	lappend res [file tail $f]
    }
    expr {$res == [glob *]}
} {1}
test filename-11.43 {Tcl_GlobCmd} {
    list [catch {glob -t *} msg] $msg
} {1 {ambiguous option "-t": must be -directory, -join, -nocomplain, -path, -tails, -types, or --}}
test filename-11.44 {Tcl_GlobCmd} {
    list [catch {glob -tails -path hello -directory hello *} msg] $msg
} {1 {"-directory" cannot be used with "-path"}}
test filename-11.45 {Tcl_GlobCmd on root volume} {
    set res1 ""
    set res2 ""
    catch {
	set res1 [glob -dir [lindex [file volumes] 0] -tails *]
    }
    catch {
	set tmpd [pwd]
	cd [lindex [file volumes] 0]
	set res2 [glob *]
	cd $tmpd
    }
    expr {$res1 == $res2}
} {1}
test filename-11.46 {Tcl_GlobCmd} {
    list [catch {glob -types abcde -dir foo *} msg] $msg
} {1 {bad argument to "-types": abcde}}
test filename-11.47 {Tcl_GlobCmd} {
    list [catch {glob -types abcde -path foo *} msg] $msg
} {1 {bad argument to "-types": abcde}}
test filename-11.48 {Tcl_GlobCmd} {
    list [catch {glob -types abcde -dir foo -join * *} msg] $msg
} {1 {bad argument to "-types": abcde}}
test filename-11.49 {Tcl_GlobCmd} {
    list [catch {glob -types abcde -path foo -join * *} msg] $msg
} {1 {bad argument to "-types": abcde}}
a1232 18
test filename-12.1.1 {simple globbing} {unixOrPc} {
    list [catch {glob -types f {}} msg] $msg
} {1 {no files matched glob pattern ""}}
test filename-12.1.2 {simple globbing} {unixOrPc} {
    list [catch {glob -types d {}} msg] $msg
} {0 .}
test filename-12.1.3 {simple globbing} {unixOnly} {
    list [catch {glob -types hidden {}} msg] $msg
} {0 .}
test filename-12.1.4 {simple globbing} {pcOnly} {
    list [catch {glob -types hidden {}} msg] $msg
} {1 {no files matched glob pattern ""}}
test filename-12.1.5 {simple globbing} {pcOnly} {
    list [catch {glob -types hidden c:/} msg] $msg
} {1 {no files matched glob pattern "c:/"}}
test filename-12.1.6 {simple globbing} {pcOnly} {
    list [catch {glob c:/} msg] $msg
} {0 c:/}
a1235 9
test filename-12.2.1 {simple globbing} {macOnly} {
    list [catch {glob -types f {}} msg] $msg
} {1 {no files matched glob pattern ""}}
test filename-12.2.2 {simple globbing} {macOnly} {
    list [catch {glob -types d {}} msg] $msg
} {0 :}
test filename-12.2.3 {simple globbing} {macOnly} {
    list [catch {glob -types hidden {}} msg] $msg
} {1 {no files matched glob pattern ""}}
d1241 1
a1241 1
    set globPreResult :globTest:
d1243 1
a1243 1
    set globPreResult globTest/
a1335 7

# The current directory could be anywhere; do this to stop spurious matches
file mkdir globTestContext
file rename globTest [file join globTestContext globTest]
set savepwd [pwd]
cd globTestContext

d1342 1
a1342 7

# Reset to where we were
cd $savepwd
file rename [file join globTestContext globTest] globTest
file delete globTestContext

test filename-14.7 {asterisks, question marks, and brackets} {unixOnly} {
a1344 3
test filename-14.7.1 {asterisks, question marks, and brackets} {pcOnly} {
    lsort [glob globTest/*]
} {globTest/.1 globTest/a1 globTest/a2 globTest/a3 {globTest/weird name.c} globTest/x,z1.c globTest/x1.c globTest/y1.c globTest/z1.c}
d1401 1
a1401 8
test filename-14.25 {type specific globbing} {unixOnly} {
    list [catch {lsort [glob -dir globTest -types f *]} msg] $msg
} [list 0 [lsort [list \
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-14.25.1 {type specific globbing} {pcOnly macOnly} {
a1403 1
        [file join $globname .1]\
d1418 1
a1418 1
catch {file attributes globTest/a1 -permissions 0000}
d1426 1
a1426 1
	{unixOnly nonPortable} {
d1432 1
a1432 1
catch {file attributes globTest/a1 -permissions 0755}
d1434 1
a1434 1
	{unixOnly nonPortable} {
a1439 6
test filename-15.4.1 {no complain: no errors, good result} {
    # test used to fail because if an error occurs, the interp's result
    # is reset... 
    string equal [glob -nocomplain ~wontexist ~blah ~] \
      [glob -nocomplain ~ ~blah ~wontexist]
} {1}
d1451 3
a1453 2
} [list 0 [list [lindex [glob ~] 0]/globTest/odd\\\[\]*?\{\}name]]
catch {file delete -force globTest/odd\\\[\]*?\{\}name}
d1456 3
a1458 2
set oldDir [pwd]
if {$::tcltest::testConstraints(pcOnly)} {
d1460 2
a1461 2
    file delete -force globTest
    file mkdir globTest
d1480 1
a1480 1
    glob c:*bTest
d1483 1
a1483 1
    glob c:\\\\*bTest
d1486 1
a1486 1
    glob c:/*bTest
d1511 5
d1520 5
a1526 11
test filename-16.14 {windows specific globbing} {pcOnly} {
    cd [lindex [glob -types d -dir C:/ *] 0]
    expr {[lsearch -exact [glob {{.,*}*}] ".."] != -1}
} {1}
test filename-16.15 {windows specific globbing} {pcOnly} {
    cd [lindex [glob -types d -dir C:/ *] 0]
    glob ..
} {..}
test filename-16.16 {windows specific globbing} {pcOnly} {
    file tail [lindex [glob "[lindex [glob -types d -dir C:/ *] 0]/.."] 0]
} {..}
d1529 2
a1530 1
catch {file delete -force C:/globTest}
a1531 1
cd $oldpwd
d1533 2
a1534 5
if {[tcltest::testConstraint testsetplatform]} {
    testsetplatform $platform
    catch {unset platform}
}
catch {unset oldhome temp result}
d1537 13
@


1.3.2.1
log
@Import Tcl 8.4.0 into mainline-like sources. Simplest Tcl build possible for
cygwin.
@
text
@d13 1
a13 1
# RCS: @@(#) $Id: fileName.test,v 1.26 2002/07/10 13:08:20 dkf Exp $
d20 6
a25 2
tcltest::testConstraint testsetplatform [string equal testsetplatform [info commands testsetplatform]]
tcltest::testConstraint testtranslatefilename [string equal testtranslatefilename [info commands testtranslatefilename]]
d28 1
a28 3
if {[tcltest::testConstraint testsetplatform]} {
    set platform [testgetplatform]
}
d30 1
a30 1
test filename-1.1 {Tcl_GetPathType: unix} {testsetplatform} {
d34 1
a34 1
test filename-1.2 {Tcl_GetPathType: unix} {testsetplatform} {
d38 1
a38 1
test filename-1.3 {Tcl_GetPathType: unix} {testsetplatform} {
d42 1
a42 1
test filename-1.4 {Tcl_GetPathType: unix} {testsetplatform} {
d46 1
a46 1
test filename-1.5 {Tcl_GetPathType: unix} {testsetplatform} {
d50 1
a50 1
test filename-1.6 {Tcl_GetPathType: unix} {testsetplatform} {
d54 1
a54 1
test filename-1.7 {Tcl_GetPathType: unix} {testsetplatform} {
d58 1
a58 1
test filename-1.8 {Tcl_GetPathType: unix} {testsetplatform} {
d63 1
a63 1
test filename-2.1 {Tcl_GetPathType: mac, denerate names} {testsetplatform} {
d67 1
a67 1
test filename-2.2 {Tcl_GetPathType: mac, denerate names} {testsetplatform} {
d71 1
a71 1
test filename-2.3 {Tcl_GetPathType: mac, denerate names} {testsetplatform} {
d75 1
a75 1
test filename-2.4 {Tcl_GetPathType: mac, denerate names} {testsetplatform} {
d79 1
a79 1
test filename-2.5 {Tcl_GetPathType: mac, denerate names} {testsetplatform} {
d83 1
a83 1
test filename-2.6 {Tcl_GetPathType: mac, tilde names} {testsetplatform} {
d87 1
a87 1
test filename-2.7 {Tcl_GetPathType: mac, tilde names} {testsetplatform} {
d91 1
a91 1
test filename-2.8 {Tcl_GetPathType: mac, tilde names} {testsetplatform} {
d95 1
a95 1
test filename-2.9 {Tcl_GetPathType: mac, tilde names} {testsetplatform} {
d99 1
a99 1
test filename-2.10 {Tcl_GetPathType: mac, tilde names} {testsetplatform} {
d103 1
a103 1
test filename-2.11 {Tcl_GetPathType: mac, unix-style names} {testsetplatform} {
d107 1
a107 1
test filename-2.12 {Tcl_GetPathType: mac, unix-style names} {testsetplatform} {
d111 1
a111 1
test filename-2.13 {Tcl_GetPathType: mac, unix-style names} {testsetplatform} {
d115 1
a115 1
test filename-2.14 {Tcl_GetPathType: mac, unix-style names} {testsetplatform} {
d119 1
a119 1
test filename-2.15 {Tcl_GetPathType: mac, unix-style names} {testsetplatform} {
d123 1
a123 1
test filename-2.16 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d127 1
a127 1
test filename-2.17 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d131 1
a131 1
test filename-2.18 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d135 1
a135 1
test filename-2.19 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d139 1
a139 1
test filename-2.20 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d143 1
a143 1
test filename-2.21 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d147 1
a147 1
test filename-2.22 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d151 1
a151 1
test filename-2.23 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d155 1
a155 1
test filename-2.24 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d159 1
a159 1
test filename-2.25 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d163 1
a163 1
test filename-2.26 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d167 1
a167 1
test filename-2.27 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d172 1
a172 1
test filename-3.1 {Tcl_GetPathType: windows} {testsetplatform} {
d176 1
a176 1
test filename-3.2 {Tcl_GetPathType: windows} {testsetplatform} {
d180 1
a180 1
test filename-3.3 {Tcl_GetPathType: windows} {testsetplatform} {
d184 1
a184 1
test filename-3.4 {Tcl_GetPathType: windows} {testsetplatform} {
d188 1
a188 1
test filename-3.5 {Tcl_GetPathType: windows} {testsetplatform} {
d192 1
a192 1
test filename-3.6 {Tcl_GetPathType: windows} {testsetplatform} {
d196 1
a196 1
test filename-3.7 {Tcl_GetPathType: windows} {testsetplatform} {
d200 1
a200 1
test filename-3.8 {Tcl_GetPathType: windows} {testsetplatform} {
d204 1
a204 1
test filename-3.9 {Tcl_GetPathType: windows} {testsetplatform} {
d208 1
a208 1
test filename-3.10 {Tcl_GetPathType: windows} {testsetplatform} {
d212 1
a212 1
test filename-3.11 {Tcl_GetPathType: windows} {testsetplatform} {
d216 1
a216 1
test filename-3.12 {Tcl_GetPathType: windows} {testsetplatform} {
d220 1
a220 1
test filename-3.13 {Tcl_GetPathType: windows} {testsetplatform} {
d224 1
a224 1
test filename-3.14 {Tcl_GetPathType: windows} {testsetplatform} {
d228 1
a228 1
test filename-3.15 {Tcl_GetPathType: windows} {testsetplatform} {
d232 1
a232 1
test filename-3.16 {Tcl_GetPathType: windows} {testsetplatform} {
d237 1
a237 1
test filename-4.1 {Tcl_SplitPath: unix} {testsetplatform} {
d241 1
a241 1
test filename-4.2 {Tcl_SplitPath: unix} {testsetplatform} {
d245 1
a245 1
test filename-4.3 {Tcl_SplitPath: unix} {testsetplatform} {
d249 1
a249 1
test filename-4.4 {Tcl_SplitPath: unix} {testsetplatform} {
d253 1
a253 1
test filename-4.5 {Tcl_SplitPath: unix} {testsetplatform} {
d257 1
a257 1
test filename-4.6 {Tcl_SplitPath: unix} {testsetplatform} {
d261 1
a261 1
test filename-4.7 {Tcl_SplitPath: unix} {testsetplatform} {
d265 1
a265 1
test filename-4.8 {Tcl_SplitPath: unix} {testsetplatform} {
d269 1
a269 1
test filename-4.9 {Tcl_SplitPath: unix} {testsetplatform} {
d273 1
a273 1
test filename-4.10 {Tcl_SplitPath: unix} {testsetplatform} {
d277 1
a277 1
test filename-4.11 {Tcl_SplitPath: unix} {testsetplatform} {
d281 1
a281 1
test filename-4.12 {Tcl_SplitPath: unix} {testsetplatform} {
d285 1
a285 1
test filename-4.13 {Tcl_SplitPath: unix} {testsetplatform} {
d289 1
a289 1
test filename-4.14 {Tcl_SplitPath: unix} {testsetplatform} {
d293 1
a293 1
test filename-4.15 {Tcl_SplitPath: unix} {testsetplatform} {
d297 1
a297 1
test filename-4.16 {Tcl_SplitPath: unix} {testsetplatform} {
d301 1
a301 1
test filename-4.17 {Tcl_SplitPath: unix} {testsetplatform} {
d305 1
a305 1
test filename-4.18 {Tcl_SplitPath: unix} {testsetplatform} {
d310 1
a310 31
if {[tcltest::testConstraint testsetplatform]} {
    testsetplatform $platform
}

test filename-4.19 {Tcl_SplitPath} {
    set oldDir [pwd]
    set res [catch {
	cd [temporaryDirectory]
	file mkdir tildetmp
	set nastydir [file join tildetmp ./~tilde]
	file mkdir $nastydir
	set norm [file normalize $nastydir]
	cd tildetmp
	cd ./~tilde
	glob -nocomplain *
	set idx [string first tildetmp $norm]
	set norm [string range $norm $idx end]
	# fix path away so all platforms are the same
	regsub {(.*):$} $norm {\1} norm
	regsub -all ":" $norm "/" norm
	# make sure we can delete the directory we created
	cd $oldDir
	file delete -force $nastydir
	set norm
    } err]
    cd $oldDir
    catch {file delete -force tildetmp}
    list $res $err
} {0 tildetmp/~tilde}

test filename-5.1 {Tcl_SplitPath: mac} {testsetplatform} {
d314 1
a314 1
test filename-5.2 {Tcl_SplitPath: mac} {testsetplatform} {
d318 1
a318 1
test filename-5.3 {Tcl_SplitPath: mac} {testsetplatform} {
d322 1
a322 1
test filename-5.4 {Tcl_SplitPath: mac} {testsetplatform} {
d326 1
a326 1
test filename-5.5 {Tcl_SplitPath: mac} {testsetplatform} {
d330 1
a330 1
test filename-5.6 {Tcl_SplitPath: mac} {testsetplatform} {
d334 1
a334 1
test filename-5.7 {Tcl_SplitPath: mac} {testsetplatform} {
d338 1
a338 1
test filename-5.8 {Tcl_SplitPath: mac} {testsetplatform} {
d342 1
a342 1
test filename-5.9 {Tcl_SplitPath: mac} {testsetplatform} {
d346 1
a346 1
test filename-5.10 {Tcl_SplitPath: mac} {testsetplatform} {
d350 1
a350 1
test filename-5.11 {Tcl_SplitPath: mac} {testsetplatform} {
d354 1
a354 1
test filename-5.12 {Tcl_SplitPath: mac} {testsetplatform} {
d358 1
a358 1
test filename-5.13 {Tcl_SplitPath: mac} {testsetplatform} {
d362 1
a362 1
test filename-5.14 {Tcl_SplitPath: mac} {testsetplatform} {
d366 1
a366 1
test filename-5.15 {Tcl_SplitPath: mac} {testsetplatform} {
d370 1
a370 1
test filename-5.16 {Tcl_SplitPath: mac} {testsetplatform} {
d374 1
a374 1
test filename-5.17 {Tcl_SplitPath: mac} {testsetplatform} {
d378 1
a378 1
test filename-5.18 {Tcl_SplitPath: mac} {testsetplatform} {
d382 1
a382 1
test filename-5.19 {Tcl_SplitPath: mac} {testsetplatform} {
d386 1
a386 1
test filename-5.20 {Tcl_SplitPath: mac} {testsetplatform} {
d390 1
a390 1
test filename-5.21 {Tcl_SplitPath: mac} {testsetplatform} {
d394 1
a394 1
test filename-5.22 {Tcl_SplitPath: mac} {testsetplatform} {
d398 1
a398 1
test filename-5.23 {Tcl_SplitPath: mac} {testsetplatform} {
d402 1
a402 1
test filename-5.24 {Tcl_SplitPath: mac} {testsetplatform} {
d406 1
a406 1
test filename-5.25 {Tcl_SplitPath: mac} {testsetplatform} {
d410 1
a410 1
test filename-5.26 {Tcl_SplitPath: mac} {testsetplatform} {
d414 1
a414 1
test filename-5.27 {Tcl_SplitPath: mac} {testsetplatform} {
d418 1
a418 1
test filename-5.28 {Tcl_SplitPath: mac} {testsetplatform} {
d422 1
a422 1
test filename-5.29 {Tcl_SplitPath: mac} {testsetplatform} {
d426 1
a426 1
test filename-5.30 {Tcl_SplitPath: mac} {testsetplatform} {
d430 1
a430 1
test filename-5.31 {Tcl_SplitPath: mac} {testsetplatform} {
d434 1
a434 1
test filename-5.32 {Tcl_SplitPath: mac} {testsetplatform} {
d438 1
a438 1
test filename-5.33 {Tcl_SplitPath: mac} {testsetplatform} {
d442 1
a442 1
test filename-5.34 {Tcl_SplitPath: mac} {testsetplatform} {
d446 1
a446 1
test filename-5.35 {Tcl_SplitPath: mac} {testsetplatform} {
d450 1
a450 1
test filename-5.36 {Tcl_SplitPath: mac} {testsetplatform} {
d454 1
a454 1
test filename-5.37 {Tcl_SplitPath: mac} {testsetplatform} {
d458 1
a458 1
test filename-5.38 {Tcl_SplitPath: mac} {testsetplatform} {
d462 1
a462 1
test filename-5.39 {Tcl_SplitPath: mac} {testsetplatform} {
d466 1
a466 1
test filename-5.40 {Tcl_SplitPath: mac} {testsetplatform} {
d470 1
a470 1
test filename-5.41 {Tcl_SplitPath: mac} {testsetplatform} {
d474 1
a474 1
test filename-5.42 {Tcl_SplitPath: mac} {testsetplatform} {
d478 1
a478 1
test filename-5.43 {Tcl_SplitPath: mac} {testsetplatform} {
d482 1
a482 1
test filename-5.44 {Tcl_SplitPath: mac} {testsetplatform} {
d486 1
a486 1
test filename-5.45 {Tcl_SplitPath: mac} {testsetplatform} {
d490 1
a490 1
test filename-5.46 {Tcl_SplitPath: mac} {testsetplatform} {
d494 1
a494 1
test filename-5.47 {Tcl_SplitPath: mac} {testsetplatform} {
d498 1
a498 1
test filename-5.48 {Tcl_SplitPath: mac} {testsetplatform} {
d502 1
a502 1
test filename-5.49 {Tcl_SplitPath: mac} {testsetplatform} {
d506 1
a506 1
test filename-5.50 {Tcl_SplitPath: mac} {testsetplatform} {
d510 1
a510 1
test filename-5.51 {Tcl_SplitPath: mac} {testsetplatform} {
d515 1
a515 1
test filename-6.1 {Tcl_SplitPath: win} {testsetplatform} {
d519 1
a519 1
test filename-6.2 {Tcl_SplitPath: win} {testsetplatform} {
d523 1
a523 1
test filename-6.3 {Tcl_SplitPath: win} {testsetplatform} {
d527 1
a527 1
test filename-6.4 {Tcl_SplitPath: win} {testsetplatform} {
d531 1
a531 1
test filename-6.5 {Tcl_SplitPath: win} {testsetplatform} {
d535 1
a535 1
test filename-6.6 {Tcl_SplitPath: win} {testsetplatform} {
d539 1
a539 1
test filename-6.7 {Tcl_SplitPath: win} {testsetplatform} {
d543 1
a543 1
test filename-6.8 {Tcl_SplitPath: win} {testsetplatform} {
d547 1
a547 1
test filename-6.9 {Tcl_SplitPath: win} {testsetplatform} {
d551 1
a551 1
test filename-6.10 {Tcl_SplitPath: win} {testsetplatform} {
d555 1
a555 1
test filename-6.11 {Tcl_SplitPath: win} {testsetplatform} {
d559 1
a559 1
test filename-6.12 {Tcl_SplitPath: win} {testsetplatform} {
d563 1
a563 1
test filename-6.13 {Tcl_SplitPath: win} {testsetplatform} {
d567 1
a567 1
test filename-6.14 {Tcl_SplitPath: win} {testsetplatform} {
d571 1
a571 1
test filename-6.15 {Tcl_SplitPath: win} {testsetplatform} {
d575 1
a575 1
test filename-6.16 {Tcl_SplitPath: win} {testsetplatform} {
d579 1
a579 1
test filename-6.17 {Tcl_SplitPath: win} {testsetplatform} {
d583 1
a583 1
test filename-6.18 {Tcl_SplitPath: win} {testsetplatform} {
d587 1
a587 1
test filename-6.19 {Tcl_SplitPath: win} {testsetplatform} {
d591 1
a591 1
test filename-6.20 {Tcl_SplitPath: win} {testsetplatform} {
d595 1
a595 1
test filename-6.21 {Tcl_SplitPath: win} {testsetplatform} {
d599 1
a599 1
test filename-6.22 {Tcl_SplitPath: win} {testsetplatform} {
d603 1
a603 1
test filename-6.23 {Tcl_SplitPath: win} {testsetplatform} {
d607 1
a607 1
test filename-6.24 {Tcl_SplitPath: win} {testsetplatform} {
d611 1
a611 1
test filename-6.25 {Tcl_SplitPath: win} {testsetplatform} {
d615 1
a615 1
test filename-6.26 {Tcl_SplitPath: win} {testsetplatform} {
d619 1
a619 1
test filename-6.27 {Tcl_SplitPath: win} {testsetplatform} {
d623 1
a623 1
test filename-6.28 {Tcl_SplitPath: win} {testsetplatform} {
d627 1
a627 1
test filename-6.29 {Tcl_SplitPath: win} {testsetplatform} {
d631 1
a631 1
test filename-6.30 {Tcl_SplitPath: win} {testsetplatform} {
d636 1
a636 1
test filename-7.1 {Tcl_JoinPath: unix} {testsetplatform} {
d640 1
a640 1
test filename-7.2 {Tcl_JoinPath: unix} {testsetplatform} {
d644 1
a644 1
test filename-7.3 {Tcl_JoinPath: unix} {testsetplatform} {
d648 1
a648 1
test filename-7.4 {Tcl_JoinPath: unix} {testsetplatform} {
d652 1
a652 1
test filename-7.5 {Tcl_JoinPath: unix} {testsetplatform} {
d656 1
a656 1
test filename-7.6 {Tcl_JoinPath: unix} {testsetplatform} {
d660 1
a660 1
test filename-7.7 {Tcl_JoinPath: unix} {testsetplatform} {
d664 1
a664 1
test filename-7.8 {Tcl_JoinPath: unix} {testsetplatform} {
d668 1
a668 1
test filename-7.9 {Tcl_JoinPath: unix} {testsetplatform} {
d672 1
a672 1
test filename-7.10 {Tcl_JoinPath: unix} {testsetplatform} {
d676 1
a676 1
test filename-7.11 {Tcl_JoinPath: unix} {testsetplatform} {
d680 1
a680 1
test filename-7.12 {Tcl_JoinPath: unix} {testsetplatform} {
d684 1
a684 1
test filename-7.13 {Tcl_JoinPath: unix} {testsetplatform} {
d688 1
a688 1
test filename-7.14 {Tcl_JoinPath: unix} {testsetplatform} {
d692 1
a692 1
test filename-7.15 {Tcl_JoinPath: unix} {testsetplatform} {
d696 1
a696 1
test filename-7.16 {Tcl_JoinPath: unix} {testsetplatform} {
d700 1
a700 1
test filename-7.17 {Tcl_JoinPath: unix} {testsetplatform} {
d704 1
a704 1
test filename-7.18 {Tcl_JoinPath: unix} {testsetplatform} {
d709 1
a709 1
test filename-8.1 {Tcl_JoinPath: mac} {testsetplatform} {
d713 1
a713 1
test filename-8.2 {Tcl_JoinPath: mac} {testsetplatform} {
d717 1
a717 1
test filename-8.3 {Tcl_JoinPath: mac} {testsetplatform} {
d721 1
a721 1
test filename-8.4 {Tcl_JoinPath: mac} {testsetplatform} {
d725 1
a725 1
test filename-8.5 {Tcl_JoinPath: mac} {testsetplatform} {
d729 1
a729 1
test filename-8.6 {Tcl_JoinPath: mac} {testsetplatform} {
d733 1
a733 1
test filename-8.7 {Tcl_JoinPath: mac} {testsetplatform} {
d737 1
a737 1
test filename-8.8 {Tcl_JoinPath: mac} {testsetplatform} {
d741 1
a741 1
test filename-8.9 {Tcl_JoinPath: mac} {testsetplatform} {
d745 1
a745 1
test filename-8.10 {Tcl_JoinPath: mac} {testsetplatform} {
d749 1
a749 1
test filename-8.11 {Tcl_JoinPath: mac} {testsetplatform} {
d753 1
a753 1
test filename-8.12 {Tcl_JoinPath: mac} {testsetplatform} {
d757 1
a757 1
test filename-8.13 {Tcl_JoinPath: mac} {testsetplatform} {
d761 1
a761 1
test filename-8.14 {Tcl_JoinPath: mac} {testsetplatform} {
d765 1
a765 1
test filename-8.15 {Tcl_JoinPath: mac} {testsetplatform} {
d769 1
a769 1
test filename-8.16 {Tcl_JoinPath: mac} {testsetplatform} {
d773 1
a773 1
test filename-8.17 {Tcl_JoinPath: mac} {testsetplatform} {
d777 1
a777 1
test filename-8.18 {Tcl_JoinPath: mac} {testsetplatform} {
d781 1
a781 1
test filename-8.19 {Tcl_JoinPath: mac} {testsetplatform} {
d785 1
a785 1
test filename-8.20 {Tcl_JoinPath: mac} {testsetplatform} {
d789 1
a789 1
test filename-8.21 {Tcl_JoinPath: mac} {testsetplatform} {
d793 1
a793 1
test filename-8.22 {Tcl_JoinPath: mac} {testsetplatform} {
d798 1
a798 1
test filename-9.1 {Tcl_JoinPath: win} {testsetplatform} {
d802 1
a802 1
test filename-9.2 {Tcl_JoinPath: win} {testsetplatform} {
d806 1
a806 1
test filename-9.3 {Tcl_JoinPath: win} {testsetplatform} {
d810 1
a810 1
test filename-9.4 {Tcl_JoinPath: win} {testsetplatform} {
d814 1
a814 1
test filename-9.5 {Tcl_JoinPath: win} {testsetplatform} {
d818 1
a818 1
test filename-9.6 {Tcl_JoinPath: win} {testsetplatform} {
d822 1
a822 1
test filename-9.7 {Tcl_JoinPath: win} {testsetplatform} {
d826 1
a826 1
test filename-9.8 {Tcl_JoinPath: win} {testsetplatform} {
d830 1
a830 1
test filename-9.9 {Tcl_JoinPath: win} {testsetplatform} {
d834 1
a834 1
test filename-9.10 {Tcl_JoinPath: win} {testsetplatform} {
d838 1
a838 1
test filename-9.11 {Tcl_JoinPath: win} {testsetplatform} {
d842 1
a842 1
test filename-9.12 {Tcl_JoinPath: win} {testsetplatform} {
d846 1
a846 1
test filename-9.13 {Tcl_JoinPath: win} {testsetplatform} {
d850 1
a850 1
test filename-9.14 {Tcl_JoinPath: win} {testsetplatform} {
d854 1
a854 1
test filename-9.15 {Tcl_JoinPath: win} {testsetplatform} {
d858 1
a858 1
test filename-9.16 {Tcl_JoinPath: win} {testsetplatform} {
d862 1
a862 1
test filename-9.17 {Tcl_JoinPath: win} {testsetplatform} {
d866 1
a866 1
test filename-9.18 {Tcl_JoinPath: win} {testsetplatform} {
d871 1
a871 1
test filename-10.1 {Tcl_TranslateFileName} {testsetplatform} {
d875 1
a875 1
test filename-10.2 {Tcl_TranslateFileName} {testsetplatform} {
d879 1
a879 1
test filename-10.3 {Tcl_TranslateFileName} {testsetplatform} {
d883 1
a883 1
test filename-10.4 {Tcl_TranslateFileName} {testsetplatform} {
d887 1
a887 1
test filename-10.5 {Tcl_TranslateFileName} {testsetplatform} {
d891 1
a891 1
test filename-10.6 {Tcl_TranslateFileName} {testsetplatform} {
d900 1
a900 1
test filename-10.7 {Tcl_TranslateFileName} {testsetplatform} {
d909 1
a909 1
test filename-10.8 {Tcl_TranslateFileName} {testsetplatform} {
d918 1
a918 1
test filename-10.9 {Tcl_TranslateFileName} {testsetplatform} {
d927 1
a927 1
test filename-10.10 {Tcl_TranslateFileName} {testsetplatform} {
d936 1
a936 1
test filename-10.11 {Tcl_TranslateFileName} {testsetplatform} {
d945 1
a945 1
test filename-10.12 {Tcl_TranslateFileName} {testsetplatform} {
d954 1
a954 1
test filename-10.13 {Tcl_TranslateFileName} {testsetplatform} {
d963 1
a963 1
test filename-10.14 {Tcl_TranslateFileName} {testsetplatform} {
d972 1
a972 1
test filename-10.15 {Tcl_TranslateFileName} {testsetplatform} {
d981 1
a981 1
test filename-10.16 {Tcl_TranslateFileName} {testsetplatform} {
d990 1
a990 1
test filename-10.17 {Tcl_TranslateFileName} {testsetplatform} {
d999 1
a999 1
test filename-10.18 {Tcl_TranslateFileName} {testsetplatform} {
d1008 1
a1008 1
test filename-10.19 {Tcl_TranslateFileName} {testsetplatform} {
d1017 1
a1017 1
test filename-10.20 {Tcl_TranslateFileName} {testtranslatefilename} {
d1020 1
a1020 1
test filename-10.21 {Tcl_TranslateFileName} {testsetplatform} {
d1029 1
a1029 1
test filename-10.22 {Tcl_TranslateFileName} {testsetplatform} {
d1034 1
a1034 3
if {[tcltest::testConstraint testsetplatform]} {
    testsetplatform $platform
}
d1051 1
a1051 1
} {1 {bad option "-gorp": must be -directory, -join, -nocomplain, -path, -tails, -types, or --}}
d1070 1
a1070 1
test filename-11.9 {Tcl_GlobCmd} {testsetplatform} {
d1074 1
a1074 1
test filename-11.10 {Tcl_GlobCmd} {testsetplatform} {
d1078 1
a1078 1
test filename-11.11 {Tcl_GlobCmd} {testsetplatform} {
d1082 1
a1082 1
test filename-11.12 {Tcl_GlobCmd} {testsetplatform} {
d1091 1
a1091 3
if {[tcltest::testConstraint testsetplatform]} {
    testsetplatform $platform
}
a1096 1
set oldpwd [pwd]
a1097 1
cd [temporaryDirectory]
d1127 1
a1127 9
test filename-11.17 {Tcl_GlobCmd} {unixOnly} {
    list [catch {lsort [glob -directory $globname *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.17.1 {Tcl_GlobCmd} {pcOnly macOnly} {
a1129 1
        [file join $globname .1]\
d1135 1
a1135 81
if {[string equal $tcl_platform(platform) "windows"]} {
    if {[string index $tcl_platform(osVersion) 0] >= 5 \
      && ([lindex [file system [temporaryDirectory]] 1] == "NTFS")} {
	tcltest::testConstraint linkDirectory 1
    } else {
	tcltest::testConstraint linkDirectory 0
    }
} else {
    tcltest::testConstraint linkDirectory 1
}
test filename-11.17.2 {Tcl_GlobCmd} {notRoot linkDirectory} {
    set dir [pwd]
    set ret "error in test"
    if {[catch {
	cd $globname
	file link -symbolic link a1
	cd $dir
	set ret [list [catch {
	    lsort [glob -directory $globname -join * b1]
	} msg] $msg]
    }]} {
	cd $dir
    }
    file delete [file join $globname link]
    set ret
} [list 0 [lsort [list [file join $globname a1 b1] \
  [file join $globname link b1]]]]
# Simpler version of the above test to illustrate a given bug.
test filename-11.17.3 {Tcl_GlobCmd} {notRoot linkDirectory} {
    set dir [pwd]
    set ret "error in test"
    if {[catch {
	cd $globname
	file link -symbolic link a1
	cd $dir
	set ret [list [catch {
	    lsort [glob -directory $globname -type d *]
	} msg] $msg]
    }]} {
	cd $dir
    }
    file delete [file join $globname link]
    set ret
} [list 0 [lsort [list [file join $globname a1] \
  [file join $globname a2] \
  [file join $globname a3] \
  [file join $globname link]]]]
# Make sure the bugfix isn't too simple.  We don't want
# to break 'glob -type l'.
test filename-11.17.4 {Tcl_GlobCmd} {notRoot linkDirectory} {
    set dir [pwd]
    set ret "error in test"
    if {[catch {
	cd $globname
	file link -symbolic link a1
	cd $dir
	set ret [list [catch {
	    lsort [glob -directory $globname -type l *]
	} msg] $msg]
    }]} {
	cd $dir
    }
    file delete [file join $globname link]
    set ret
} [list 0 [list [file join $globname link]]]
test filename-11.17.5 {Tcl_GlobCmd} {
    list [catch {lsort [glob -directory $globname -tails *.c]} msg] $msg
} [list 0 [lsort [list "weird name.c" x,z1.c x1.c y1.c z1.c]]]
test filename-11.17.6 {Tcl_GlobCmd} {
    list [catch {lsort [glob -directory $globname -tails *.c *.c]} msg] $msg
} [list 0 [lsort [concat [list "weird name.c" x,z1.c x1.c y1.c z1.c] \
  [list "weird name.c" x,z1.c x1.c y1.c z1.c]]]]
test filename-11.18 {Tcl_GlobCmd} {unixOnly} {
    list [catch {lsort [glob -path $globname/ *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.18.1 {Tcl_GlobCmd} {pcOnly macOnly} {
a1137 10
        [file join $globname .1]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.19 {Tcl_GlobCmd} {unixOnly} {
    list [catch {lsort [glob -join -path \
	    [string range $globname 0 5] * *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
d1143 1
a1143 1
test filename-11.19.1 {Tcl_GlobCmd} {pcOnly macOnly} {
a1146 1
        [file join $globname .1]\
a1160 5
# Get rid of file/dir if it exists, since it will have
# been left behind by a previous failed run.
if {[file exists $horribleglobname]} {
    file delete -force $horribleglobname
}
d1164 1
a1164 9
test filename-11.22 {Tcl_GlobCmd} {unixOnly} {
    list [catch {lsort [glob -dir $globname *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.22.1 {Tcl_GlobCmd} {pcOnly macOnly} {
a1166 1
        [file join $globname .1]\
d1172 1
a1172 1
test filename-11.23 {Tcl_GlobCmd} {unixOnly} {
d1180 1
a1180 19
test filename-11.23.1 {Tcl_GlobCmd} {pcOnly macOnly} {
    list [catch {lsort [glob -path $globname/ *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
        [file join $globname .1]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.24 {Tcl_GlobCmd} {unixOnly} {
    list [catch {lsort [glob -join -path \
	    [string range $globname 0 5] * *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.24.1 {Tcl_GlobCmd} {pcOnly macOnly} {
a1183 1
        [file join $globname .1]\
a1193 10
test filename-11.25.1 {Tcl_GlobCmd} {
    list [catch {lsort [glob -type {d r} -dir $globname *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1]\
  [file join $globname a2]\
  [file join $globname a3]]]]
test filename-11.25.2 {Tcl_GlobCmd} {
    list [catch {lsort [glob -type {d r w} -dir $globname *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1]\
  [file join $globname a2]\
  [file join $globname a3]]]]
d1224 1
a1224 59
} {1 {bad option "-paths": must be -directory, -join, -nocomplain, -path, -tails, -types, or --}}
# Test '-tails' flag to glob.
test filename-11.36 {Tcl_GlobCmd} {
    list [catch {glob -tails *} msg] $msg
} {1 {"-tails" must be used with either "-directory" or "-path"}}
test filename-11.37 {Tcl_GlobCmd} {
    list [catch {glob -type d -tails -path $globname *} msg] $msg
} [list 0 [list $globname]]
test filename-11.38 {Tcl_GlobCmd} {
    list [catch {glob -tails -path $globname *} msg] $msg
} [list 0 [list $globname]]
test filename-11.39 {Tcl_GlobCmd} {
    list [catch {glob -tails -join -path $globname *} msg] $msg
} [list 0 [list $globname]]
test filename-11.40 {Tcl_GlobCmd} {
    expr {[glob -dir [pwd] -tails *] == [glob *]}
} {1}
test filename-11.41 {Tcl_GlobCmd} {
    expr {[glob -dir [pwd] -tails *] != [glob -dir [pwd] *]}
} {1}
test filename-11.42 {Tcl_GlobCmd} {
    set res [list]
    foreach f [glob -dir [pwd] *] {
	lappend res [file tail $f]
    }
    expr {$res == [glob *]}
} {1}
test filename-11.43 {Tcl_GlobCmd} {
    list [catch {glob -t *} msg] $msg
} {1 {ambiguous option "-t": must be -directory, -join, -nocomplain, -path, -tails, -types, or --}}
test filename-11.44 {Tcl_GlobCmd} {
    list [catch {glob -tails -path hello -directory hello *} msg] $msg
} {1 {"-directory" cannot be used with "-path"}}
test filename-11.45 {Tcl_GlobCmd on root volume} {
    set res1 ""
    set res2 ""
    catch {
	set res1 [glob -dir [lindex [file volumes] 0] -tails *]
    }
    catch {
	set tmpd [pwd]
	cd [lindex [file volumes] 0]
	set res2 [glob *]
	cd $tmpd
    }
    expr {$res1 == $res2}
} {1}
test filename-11.46 {Tcl_GlobCmd} {
    list [catch {glob -types abcde -dir foo *} msg] $msg
} {1 {bad argument to "-types": abcde}}
test filename-11.47 {Tcl_GlobCmd} {
    list [catch {glob -types abcde -path foo *} msg] $msg
} {1 {bad argument to "-types": abcde}}
test filename-11.48 {Tcl_GlobCmd} {
    list [catch {glob -types abcde -dir foo -join * *} msg] $msg
} {1 {bad argument to "-types": abcde}}
test filename-11.49 {Tcl_GlobCmd} {
    list [catch {glob -types abcde -path foo -join * *} msg] $msg
} {1 {bad argument to "-types": abcde}}
a1232 18
test filename-12.1.1 {simple globbing} {unixOrPc} {
    list [catch {glob -types f {}} msg] $msg
} {1 {no files matched glob pattern ""}}
test filename-12.1.2 {simple globbing} {unixOrPc} {
    list [catch {glob -types d {}} msg] $msg
} {0 .}
test filename-12.1.3 {simple globbing} {unixOnly} {
    list [catch {glob -types hidden {}} msg] $msg
} {0 .}
test filename-12.1.4 {simple globbing} {pcOnly} {
    list [catch {glob -types hidden {}} msg] $msg
} {1 {no files matched glob pattern ""}}
test filename-12.1.5 {simple globbing} {pcOnly} {
    list [catch {glob -types hidden c:/} msg] $msg
} {1 {no files matched glob pattern "c:/"}}
test filename-12.1.6 {simple globbing} {pcOnly} {
    list [catch {glob c:/} msg] $msg
} {0 c:/}
a1235 9
test filename-12.2.1 {simple globbing} {macOnly} {
    list [catch {glob -types f {}} msg] $msg
} {1 {no files matched glob pattern ""}}
test filename-12.2.2 {simple globbing} {macOnly} {
    list [catch {glob -types d {}} msg] $msg
} {0 :}
test filename-12.2.3 {simple globbing} {macOnly} {
    list [catch {glob -types hidden {}} msg] $msg
} {1 {no files matched glob pattern ""}}
d1241 1
a1241 1
    set globPreResult :globTest:
d1243 1
a1243 1
    set globPreResult globTest/
a1335 7

# The current directory could be anywhere; do this to stop spurious matches
file mkdir globTestContext
file rename globTest [file join globTestContext globTest]
set savepwd [pwd]
cd globTestContext

d1342 1
a1342 7

# Reset to where we were
cd $savepwd
file rename [file join globTestContext globTest] globTest
file delete globTestContext

test filename-14.7 {asterisks, question marks, and brackets} {unixOnly} {
a1344 3
test filename-14.7.1 {asterisks, question marks, and brackets} {pcOnly} {
    lsort [glob globTest/*]
} {globTest/.1 globTest/a1 globTest/a2 globTest/a3 {globTest/weird name.c} globTest/x,z1.c globTest/x1.c globTest/y1.c globTest/z1.c}
d1401 1
a1401 8
test filename-14.25 {type specific globbing} {unixOnly} {
    list [catch {lsort [glob -dir globTest -types f *]} msg] $msg
} [list 0 [lsort [list \
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-14.25.1 {type specific globbing} {pcOnly macOnly} {
a1403 1
        [file join $globname .1]\
d1418 1
a1418 1
catch {file attributes globTest/a1 -permissions 0000}
d1426 1
a1426 1
	{unixOnly nonPortable} {
d1432 1
a1432 1
catch {file attributes globTest/a1 -permissions 0755}
d1434 1
a1434 1
	{unixOnly nonPortable} {
a1439 6
test filename-15.4.1 {no complain: no errors, good result} {
    # test used to fail because if an error occurs, the interp's result
    # is reset... 
    string equal [glob -nocomplain ~wontexist ~blah ~] \
      [glob -nocomplain ~ ~blah ~wontexist]
} {1}
d1451 3
a1453 2
} [list 0 [list [lindex [glob ~] 0]/globTest/odd\\\[\]*?\{\}name]]
catch {file delete -force globTest/odd\\\[\]*?\{\}name}
d1456 3
a1458 2
set oldDir [pwd]
if {$::tcltest::testConstraints(pcOnly)} {
d1460 2
a1461 2
    file delete -force globTest
    file mkdir globTest
d1480 1
a1480 1
    glob c:*bTest
d1483 1
a1483 1
    glob c:\\\\*bTest
d1486 1
a1486 1
    glob c:/*bTest
d1511 5
d1520 5
a1526 11
test filename-16.14 {windows specific globbing} {pcOnly} {
    cd [lindex [glob -types d -dir C:/ *] 0]
    expr {[lsearch -exact [glob {{.,*}*}] ".."] != -1}
} {1}
test filename-16.15 {windows specific globbing} {pcOnly} {
    cd [lindex [glob -types d -dir C:/ *] 0]
    glob ..
} {..}
test filename-16.16 {windows specific globbing} {pcOnly} {
    file tail [lindex [glob "[lindex [glob -types d -dir C:/ *] 0]/.."] 0]
} {..}
d1529 2
a1530 1
catch {file delete -force C:/globTest}
a1531 1
cd $oldpwd
d1533 2
a1534 5
if {[tcltest::testConstraint testsetplatform]} {
    testsetplatform $platform
    catch {unset platform}
}
catch {unset oldhome temp result}
d1537 13
@


1.2
log
@touched all Tcl files to ease next import.
@
text
@@


1.2.16.1
log
@2002-12-23  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021223-merge.
@
text
@@


1.2.16.2
log
@2003-02-07  David Carlton  <carlton@@math.stanford.edu>

	* Merge with mainline; tag is carlton_dictionary-20030207-merge.
@
text
@d20 6
a25 2
tcltest::testConstraint testsetplatform [string equal testsetplatform [info commands testsetplatform]]
tcltest::testConstraint testtranslatefilename [string equal testtranslatefilename [info commands testtranslatefilename]]
d28 1
a28 3
if {[tcltest::testConstraint testsetplatform]} {
    set platform [testgetplatform]
}
d30 1
a30 1
test filename-1.1 {Tcl_GetPathType: unix} {testsetplatform} {
d34 1
a34 1
test filename-1.2 {Tcl_GetPathType: unix} {testsetplatform} {
d38 1
a38 1
test filename-1.3 {Tcl_GetPathType: unix} {testsetplatform} {
d42 1
a42 1
test filename-1.4 {Tcl_GetPathType: unix} {testsetplatform} {
d46 1
a46 1
test filename-1.5 {Tcl_GetPathType: unix} {testsetplatform} {
d50 1
a50 1
test filename-1.6 {Tcl_GetPathType: unix} {testsetplatform} {
d54 1
a54 1
test filename-1.7 {Tcl_GetPathType: unix} {testsetplatform} {
d58 1
a58 1
test filename-1.8 {Tcl_GetPathType: unix} {testsetplatform} {
d63 1
a63 1
test filename-2.1 {Tcl_GetPathType: mac, denerate names} {testsetplatform} {
d67 1
a67 1
test filename-2.2 {Tcl_GetPathType: mac, denerate names} {testsetplatform} {
d71 1
a71 1
test filename-2.3 {Tcl_GetPathType: mac, denerate names} {testsetplatform} {
d75 1
a75 1
test filename-2.4 {Tcl_GetPathType: mac, denerate names} {testsetplatform} {
d79 1
a79 1
test filename-2.5 {Tcl_GetPathType: mac, denerate names} {testsetplatform} {
d83 1
a83 1
test filename-2.6 {Tcl_GetPathType: mac, tilde names} {testsetplatform} {
d87 1
a87 1
test filename-2.7 {Tcl_GetPathType: mac, tilde names} {testsetplatform} {
d91 1
a91 1
test filename-2.8 {Tcl_GetPathType: mac, tilde names} {testsetplatform} {
d95 1
a95 1
test filename-2.9 {Tcl_GetPathType: mac, tilde names} {testsetplatform} {
d99 1
a99 1
test filename-2.10 {Tcl_GetPathType: mac, tilde names} {testsetplatform} {
d103 1
a103 1
test filename-2.11 {Tcl_GetPathType: mac, unix-style names} {testsetplatform} {
d107 1
a107 1
test filename-2.12 {Tcl_GetPathType: mac, unix-style names} {testsetplatform} {
d111 1
a111 1
test filename-2.13 {Tcl_GetPathType: mac, unix-style names} {testsetplatform} {
d115 1
a115 1
test filename-2.14 {Tcl_GetPathType: mac, unix-style names} {testsetplatform} {
d119 1
a119 1
test filename-2.15 {Tcl_GetPathType: mac, unix-style names} {testsetplatform} {
d123 1
a123 1
test filename-2.16 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d127 1
a127 1
test filename-2.17 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d131 1
a131 1
test filename-2.18 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d135 1
a135 1
test filename-2.19 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d139 1
a139 1
test filename-2.20 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d143 1
a143 1
test filename-2.21 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d147 1
a147 1
test filename-2.22 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d151 1
a151 1
test filename-2.23 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d155 1
a155 1
test filename-2.24 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d159 1
a159 1
test filename-2.25 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d163 1
a163 1
test filename-2.26 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d167 1
a167 1
test filename-2.27 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d172 1
a172 1
test filename-3.1 {Tcl_GetPathType: windows} {testsetplatform} {
d176 1
a176 1
test filename-3.2 {Tcl_GetPathType: windows} {testsetplatform} {
d180 1
a180 1
test filename-3.3 {Tcl_GetPathType: windows} {testsetplatform} {
d184 1
a184 1
test filename-3.4 {Tcl_GetPathType: windows} {testsetplatform} {
d188 1
a188 1
test filename-3.5 {Tcl_GetPathType: windows} {testsetplatform} {
d192 1
a192 1
test filename-3.6 {Tcl_GetPathType: windows} {testsetplatform} {
d196 1
a196 1
test filename-3.7 {Tcl_GetPathType: windows} {testsetplatform} {
d200 1
a200 1
test filename-3.8 {Tcl_GetPathType: windows} {testsetplatform} {
d204 1
a204 1
test filename-3.9 {Tcl_GetPathType: windows} {testsetplatform} {
d208 1
a208 1
test filename-3.10 {Tcl_GetPathType: windows} {testsetplatform} {
d212 1
a212 1
test filename-3.11 {Tcl_GetPathType: windows} {testsetplatform} {
d216 1
a216 1
test filename-3.12 {Tcl_GetPathType: windows} {testsetplatform} {
d220 1
a220 1
test filename-3.13 {Tcl_GetPathType: windows} {testsetplatform} {
d224 1
a224 1
test filename-3.14 {Tcl_GetPathType: windows} {testsetplatform} {
d228 1
a228 1
test filename-3.15 {Tcl_GetPathType: windows} {testsetplatform} {
d232 1
a232 1
test filename-3.16 {Tcl_GetPathType: windows} {testsetplatform} {
d237 1
a237 1
test filename-4.1 {Tcl_SplitPath: unix} {testsetplatform} {
d241 1
a241 1
test filename-4.2 {Tcl_SplitPath: unix} {testsetplatform} {
d245 1
a245 1
test filename-4.3 {Tcl_SplitPath: unix} {testsetplatform} {
d249 1
a249 1
test filename-4.4 {Tcl_SplitPath: unix} {testsetplatform} {
d253 1
a253 1
test filename-4.5 {Tcl_SplitPath: unix} {testsetplatform} {
d257 1
a257 1
test filename-4.6 {Tcl_SplitPath: unix} {testsetplatform} {
d261 1
a261 1
test filename-4.7 {Tcl_SplitPath: unix} {testsetplatform} {
d265 1
a265 1
test filename-4.8 {Tcl_SplitPath: unix} {testsetplatform} {
d269 1
a269 1
test filename-4.9 {Tcl_SplitPath: unix} {testsetplatform} {
d273 1
a273 1
test filename-4.10 {Tcl_SplitPath: unix} {testsetplatform} {
d277 1
a277 1
test filename-4.11 {Tcl_SplitPath: unix} {testsetplatform} {
d281 1
a281 1
test filename-4.12 {Tcl_SplitPath: unix} {testsetplatform} {
d285 1
a285 1
test filename-4.13 {Tcl_SplitPath: unix} {testsetplatform} {
d289 1
a289 1
test filename-4.14 {Tcl_SplitPath: unix} {testsetplatform} {
d293 1
a293 1
test filename-4.15 {Tcl_SplitPath: unix} {testsetplatform} {
d297 1
a297 1
test filename-4.16 {Tcl_SplitPath: unix} {testsetplatform} {
d301 1
a301 1
test filename-4.17 {Tcl_SplitPath: unix} {testsetplatform} {
d305 1
a305 1
test filename-4.18 {Tcl_SplitPath: unix} {testsetplatform} {
d310 1
a310 31
if {[tcltest::testConstraint testsetplatform]} {
    testsetplatform $platform
}

test filename-4.19 {Tcl_SplitPath} {
    set oldDir [pwd]
    set res [catch {
	cd [temporaryDirectory]
	file mkdir tildetmp
	set nastydir [file join tildetmp ./~tilde]
	file mkdir $nastydir
	set norm [file normalize $nastydir]
	cd tildetmp
	cd ./~tilde
	glob -nocomplain *
	set idx [string first tildetmp $norm]
	set norm [string range $norm $idx end]
	# fix path away so all platforms are the same
	regsub {(.*):$} $norm {\1} norm
	regsub -all ":" $norm "/" norm
	# make sure we can delete the directory we created
	cd $oldDir
	file delete -force $nastydir
	set norm
    } err]
    cd $oldDir
    catch {file delete -force tildetmp}
    list $res $err
} {0 tildetmp/~tilde}

test filename-5.1 {Tcl_SplitPath: mac} {testsetplatform} {
d314 1
a314 1
test filename-5.2 {Tcl_SplitPath: mac} {testsetplatform} {
d318 1
a318 1
test filename-5.3 {Tcl_SplitPath: mac} {testsetplatform} {
d322 1
a322 1
test filename-5.4 {Tcl_SplitPath: mac} {testsetplatform} {
d326 1
a326 1
test filename-5.5 {Tcl_SplitPath: mac} {testsetplatform} {
d330 1
a330 1
test filename-5.6 {Tcl_SplitPath: mac} {testsetplatform} {
d334 1
a334 1
test filename-5.7 {Tcl_SplitPath: mac} {testsetplatform} {
d338 1
a338 1
test filename-5.8 {Tcl_SplitPath: mac} {testsetplatform} {
d342 1
a342 1
test filename-5.9 {Tcl_SplitPath: mac} {testsetplatform} {
d346 1
a346 1
test filename-5.10 {Tcl_SplitPath: mac} {testsetplatform} {
d350 1
a350 1
test filename-5.11 {Tcl_SplitPath: mac} {testsetplatform} {
d354 1
a354 1
test filename-5.12 {Tcl_SplitPath: mac} {testsetplatform} {
d358 1
a358 1
test filename-5.13 {Tcl_SplitPath: mac} {testsetplatform} {
d362 1
a362 1
test filename-5.14 {Tcl_SplitPath: mac} {testsetplatform} {
d366 1
a366 1
test filename-5.15 {Tcl_SplitPath: mac} {testsetplatform} {
d370 1
a370 1
test filename-5.16 {Tcl_SplitPath: mac} {testsetplatform} {
d374 1
a374 1
test filename-5.17 {Tcl_SplitPath: mac} {testsetplatform} {
d378 1
a378 1
test filename-5.18 {Tcl_SplitPath: mac} {testsetplatform} {
d382 1
a382 1
test filename-5.19 {Tcl_SplitPath: mac} {testsetplatform} {
d386 1
a386 1
test filename-5.20 {Tcl_SplitPath: mac} {testsetplatform} {
d390 1
a390 1
test filename-5.21 {Tcl_SplitPath: mac} {testsetplatform} {
d394 1
a394 1
test filename-5.22 {Tcl_SplitPath: mac} {testsetplatform} {
d398 1
a398 1
test filename-5.23 {Tcl_SplitPath: mac} {testsetplatform} {
d402 1
a402 1
test filename-5.24 {Tcl_SplitPath: mac} {testsetplatform} {
d406 1
a406 1
test filename-5.25 {Tcl_SplitPath: mac} {testsetplatform} {
d410 1
a410 1
test filename-5.26 {Tcl_SplitPath: mac} {testsetplatform} {
d414 1
a414 1
test filename-5.27 {Tcl_SplitPath: mac} {testsetplatform} {
d418 1
a418 1
test filename-5.28 {Tcl_SplitPath: mac} {testsetplatform} {
d422 1
a422 1
test filename-5.29 {Tcl_SplitPath: mac} {testsetplatform} {
d426 1
a426 1
test filename-5.30 {Tcl_SplitPath: mac} {testsetplatform} {
d430 1
a430 1
test filename-5.31 {Tcl_SplitPath: mac} {testsetplatform} {
d434 1
a434 1
test filename-5.32 {Tcl_SplitPath: mac} {testsetplatform} {
d438 1
a438 1
test filename-5.33 {Tcl_SplitPath: mac} {testsetplatform} {
d442 1
a442 1
test filename-5.34 {Tcl_SplitPath: mac} {testsetplatform} {
d446 1
a446 1
test filename-5.35 {Tcl_SplitPath: mac} {testsetplatform} {
d450 1
a450 1
test filename-5.36 {Tcl_SplitPath: mac} {testsetplatform} {
d454 1
a454 1
test filename-5.37 {Tcl_SplitPath: mac} {testsetplatform} {
d458 1
a458 1
test filename-5.38 {Tcl_SplitPath: mac} {testsetplatform} {
d462 1
a462 1
test filename-5.39 {Tcl_SplitPath: mac} {testsetplatform} {
d466 1
a466 1
test filename-5.40 {Tcl_SplitPath: mac} {testsetplatform} {
d470 1
a470 1
test filename-5.41 {Tcl_SplitPath: mac} {testsetplatform} {
d474 1
a474 1
test filename-5.42 {Tcl_SplitPath: mac} {testsetplatform} {
d478 1
a478 1
test filename-5.43 {Tcl_SplitPath: mac} {testsetplatform} {
d482 1
a482 1
test filename-5.44 {Tcl_SplitPath: mac} {testsetplatform} {
d486 1
a486 1
test filename-5.45 {Tcl_SplitPath: mac} {testsetplatform} {
d490 1
a490 1
test filename-5.46 {Tcl_SplitPath: mac} {testsetplatform} {
d494 1
a494 1
test filename-5.47 {Tcl_SplitPath: mac} {testsetplatform} {
d498 1
a498 1
test filename-5.48 {Tcl_SplitPath: mac} {testsetplatform} {
d502 1
a502 1
test filename-5.49 {Tcl_SplitPath: mac} {testsetplatform} {
d506 1
a506 1
test filename-5.50 {Tcl_SplitPath: mac} {testsetplatform} {
d510 1
a510 1
test filename-5.51 {Tcl_SplitPath: mac} {testsetplatform} {
d515 1
a515 1
test filename-6.1 {Tcl_SplitPath: win} {testsetplatform} {
d519 1
a519 1
test filename-6.2 {Tcl_SplitPath: win} {testsetplatform} {
d523 1
a523 1
test filename-6.3 {Tcl_SplitPath: win} {testsetplatform} {
d527 1
a527 1
test filename-6.4 {Tcl_SplitPath: win} {testsetplatform} {
d531 1
a531 1
test filename-6.5 {Tcl_SplitPath: win} {testsetplatform} {
d535 1
a535 1
test filename-6.6 {Tcl_SplitPath: win} {testsetplatform} {
d539 1
a539 1
test filename-6.7 {Tcl_SplitPath: win} {testsetplatform} {
d543 1
a543 1
test filename-6.8 {Tcl_SplitPath: win} {testsetplatform} {
d547 1
a547 1
test filename-6.9 {Tcl_SplitPath: win} {testsetplatform} {
d551 1
a551 1
test filename-6.10 {Tcl_SplitPath: win} {testsetplatform} {
d555 1
a555 1
test filename-6.11 {Tcl_SplitPath: win} {testsetplatform} {
d559 1
a559 1
test filename-6.12 {Tcl_SplitPath: win} {testsetplatform} {
d563 1
a563 1
test filename-6.13 {Tcl_SplitPath: win} {testsetplatform} {
d567 1
a567 1
test filename-6.14 {Tcl_SplitPath: win} {testsetplatform} {
d571 1
a571 1
test filename-6.15 {Tcl_SplitPath: win} {testsetplatform} {
d575 1
a575 1
test filename-6.16 {Tcl_SplitPath: win} {testsetplatform} {
d579 1
a579 1
test filename-6.17 {Tcl_SplitPath: win} {testsetplatform} {
d583 1
a583 1
test filename-6.18 {Tcl_SplitPath: win} {testsetplatform} {
d587 1
a587 1
test filename-6.19 {Tcl_SplitPath: win} {testsetplatform} {
d591 1
a591 1
test filename-6.20 {Tcl_SplitPath: win} {testsetplatform} {
d595 1
a595 1
test filename-6.21 {Tcl_SplitPath: win} {testsetplatform} {
d599 1
a599 1
test filename-6.22 {Tcl_SplitPath: win} {testsetplatform} {
d603 1
a603 1
test filename-6.23 {Tcl_SplitPath: win} {testsetplatform} {
d607 1
a607 1
test filename-6.24 {Tcl_SplitPath: win} {testsetplatform} {
d611 1
a611 1
test filename-6.25 {Tcl_SplitPath: win} {testsetplatform} {
d615 1
a615 1
test filename-6.26 {Tcl_SplitPath: win} {testsetplatform} {
d619 1
a619 1
test filename-6.27 {Tcl_SplitPath: win} {testsetplatform} {
d623 1
a623 1
test filename-6.28 {Tcl_SplitPath: win} {testsetplatform} {
d627 1
a627 1
test filename-6.29 {Tcl_SplitPath: win} {testsetplatform} {
d631 1
a631 1
test filename-6.30 {Tcl_SplitPath: win} {testsetplatform} {
d636 1
a636 1
test filename-7.1 {Tcl_JoinPath: unix} {testsetplatform} {
d640 1
a640 1
test filename-7.2 {Tcl_JoinPath: unix} {testsetplatform} {
d644 1
a644 1
test filename-7.3 {Tcl_JoinPath: unix} {testsetplatform} {
d648 1
a648 1
test filename-7.4 {Tcl_JoinPath: unix} {testsetplatform} {
d652 1
a652 1
test filename-7.5 {Tcl_JoinPath: unix} {testsetplatform} {
d656 1
a656 1
test filename-7.6 {Tcl_JoinPath: unix} {testsetplatform} {
d660 1
a660 1
test filename-7.7 {Tcl_JoinPath: unix} {testsetplatform} {
d664 1
a664 1
test filename-7.8 {Tcl_JoinPath: unix} {testsetplatform} {
d668 1
a668 1
test filename-7.9 {Tcl_JoinPath: unix} {testsetplatform} {
d672 1
a672 1
test filename-7.10 {Tcl_JoinPath: unix} {testsetplatform} {
d676 1
a676 1
test filename-7.11 {Tcl_JoinPath: unix} {testsetplatform} {
d680 1
a680 1
test filename-7.12 {Tcl_JoinPath: unix} {testsetplatform} {
d684 1
a684 1
test filename-7.13 {Tcl_JoinPath: unix} {testsetplatform} {
d688 1
a688 1
test filename-7.14 {Tcl_JoinPath: unix} {testsetplatform} {
d692 1
a692 1
test filename-7.15 {Tcl_JoinPath: unix} {testsetplatform} {
d696 1
a696 1
test filename-7.16 {Tcl_JoinPath: unix} {testsetplatform} {
d700 1
a700 1
test filename-7.17 {Tcl_JoinPath: unix} {testsetplatform} {
d704 1
a704 1
test filename-7.18 {Tcl_JoinPath: unix} {testsetplatform} {
d709 1
a709 1
test filename-8.1 {Tcl_JoinPath: mac} {testsetplatform} {
d713 1
a713 1
test filename-8.2 {Tcl_JoinPath: mac} {testsetplatform} {
d717 1
a717 1
test filename-8.3 {Tcl_JoinPath: mac} {testsetplatform} {
d721 1
a721 1
test filename-8.4 {Tcl_JoinPath: mac} {testsetplatform} {
d725 1
a725 1
test filename-8.5 {Tcl_JoinPath: mac} {testsetplatform} {
d729 1
a729 1
test filename-8.6 {Tcl_JoinPath: mac} {testsetplatform} {
d733 1
a733 1
test filename-8.7 {Tcl_JoinPath: mac} {testsetplatform} {
d737 1
a737 1
test filename-8.8 {Tcl_JoinPath: mac} {testsetplatform} {
d741 1
a741 1
test filename-8.9 {Tcl_JoinPath: mac} {testsetplatform} {
d745 1
a745 1
test filename-8.10 {Tcl_JoinPath: mac} {testsetplatform} {
d749 1
a749 1
test filename-8.11 {Tcl_JoinPath: mac} {testsetplatform} {
d753 1
a753 1
test filename-8.12 {Tcl_JoinPath: mac} {testsetplatform} {
d757 1
a757 1
test filename-8.13 {Tcl_JoinPath: mac} {testsetplatform} {
d761 1
a761 1
test filename-8.14 {Tcl_JoinPath: mac} {testsetplatform} {
d765 1
a765 1
test filename-8.15 {Tcl_JoinPath: mac} {testsetplatform} {
d769 1
a769 1
test filename-8.16 {Tcl_JoinPath: mac} {testsetplatform} {
d773 1
a773 1
test filename-8.17 {Tcl_JoinPath: mac} {testsetplatform} {
d777 1
a777 1
test filename-8.18 {Tcl_JoinPath: mac} {testsetplatform} {
d781 1
a781 1
test filename-8.19 {Tcl_JoinPath: mac} {testsetplatform} {
d785 1
a785 1
test filename-8.20 {Tcl_JoinPath: mac} {testsetplatform} {
d789 1
a789 1
test filename-8.21 {Tcl_JoinPath: mac} {testsetplatform} {
d793 1
a793 1
test filename-8.22 {Tcl_JoinPath: mac} {testsetplatform} {
d798 1
a798 1
test filename-9.1 {Tcl_JoinPath: win} {testsetplatform} {
d802 1
a802 1
test filename-9.2 {Tcl_JoinPath: win} {testsetplatform} {
d806 1
a806 1
test filename-9.3 {Tcl_JoinPath: win} {testsetplatform} {
d810 1
a810 1
test filename-9.4 {Tcl_JoinPath: win} {testsetplatform} {
d814 1
a814 1
test filename-9.5 {Tcl_JoinPath: win} {testsetplatform} {
d818 1
a818 1
test filename-9.6 {Tcl_JoinPath: win} {testsetplatform} {
d822 1
a822 1
test filename-9.7 {Tcl_JoinPath: win} {testsetplatform} {
d826 1
a826 1
test filename-9.8 {Tcl_JoinPath: win} {testsetplatform} {
d830 1
a830 1
test filename-9.9 {Tcl_JoinPath: win} {testsetplatform} {
d834 1
a834 1
test filename-9.10 {Tcl_JoinPath: win} {testsetplatform} {
d838 1
a838 1
test filename-9.11 {Tcl_JoinPath: win} {testsetplatform} {
d842 1
a842 1
test filename-9.12 {Tcl_JoinPath: win} {testsetplatform} {
d846 1
a846 1
test filename-9.13 {Tcl_JoinPath: win} {testsetplatform} {
d850 1
a850 1
test filename-9.14 {Tcl_JoinPath: win} {testsetplatform} {
d854 1
a854 1
test filename-9.15 {Tcl_JoinPath: win} {testsetplatform} {
d858 1
a858 1
test filename-9.16 {Tcl_JoinPath: win} {testsetplatform} {
d862 1
a862 1
test filename-9.17 {Tcl_JoinPath: win} {testsetplatform} {
d866 1
a866 1
test filename-9.18 {Tcl_JoinPath: win} {testsetplatform} {
d871 1
a871 1
test filename-10.1 {Tcl_TranslateFileName} {testsetplatform} {
d875 1
a875 1
test filename-10.2 {Tcl_TranslateFileName} {testsetplatform} {
d879 1
a879 1
test filename-10.3 {Tcl_TranslateFileName} {testsetplatform} {
d883 1
a883 1
test filename-10.4 {Tcl_TranslateFileName} {testsetplatform} {
d887 1
a887 1
test filename-10.5 {Tcl_TranslateFileName} {testsetplatform} {
d891 1
a891 1
test filename-10.6 {Tcl_TranslateFileName} {testsetplatform} {
d900 1
a900 1
test filename-10.7 {Tcl_TranslateFileName} {testsetplatform} {
d909 1
a909 1
test filename-10.8 {Tcl_TranslateFileName} {testsetplatform} {
d918 1
a918 1
test filename-10.9 {Tcl_TranslateFileName} {testsetplatform} {
d927 1
a927 1
test filename-10.10 {Tcl_TranslateFileName} {testsetplatform} {
d936 1
a936 1
test filename-10.11 {Tcl_TranslateFileName} {testsetplatform} {
d945 1
a945 1
test filename-10.12 {Tcl_TranslateFileName} {testsetplatform} {
d954 1
a954 1
test filename-10.13 {Tcl_TranslateFileName} {testsetplatform} {
d963 1
a963 1
test filename-10.14 {Tcl_TranslateFileName} {testsetplatform} {
d972 1
a972 1
test filename-10.15 {Tcl_TranslateFileName} {testsetplatform} {
d981 1
a981 1
test filename-10.16 {Tcl_TranslateFileName} {testsetplatform} {
d990 1
a990 1
test filename-10.17 {Tcl_TranslateFileName} {testsetplatform} {
d999 1
a999 1
test filename-10.18 {Tcl_TranslateFileName} {testsetplatform} {
d1008 1
a1008 1
test filename-10.19 {Tcl_TranslateFileName} {testsetplatform} {
d1017 1
a1017 1
test filename-10.20 {Tcl_TranslateFileName} {testtranslatefilename} {
d1020 1
a1020 1
test filename-10.21 {Tcl_TranslateFileName} {testsetplatform} {
d1029 1
a1029 1
test filename-10.22 {Tcl_TranslateFileName} {testsetplatform} {
d1034 1
a1034 3
if {[tcltest::testConstraint testsetplatform]} {
    testsetplatform $platform
}
d1051 1
a1051 1
} {1 {bad option "-gorp": must be -directory, -join, -nocomplain, -path, -tails, -types, or --}}
d1070 1
a1070 1
test filename-11.9 {Tcl_GlobCmd} {testsetplatform} {
d1074 1
a1074 1
test filename-11.10 {Tcl_GlobCmd} {testsetplatform} {
d1078 1
a1078 1
test filename-11.11 {Tcl_GlobCmd} {testsetplatform} {
d1082 1
a1082 1
test filename-11.12 {Tcl_GlobCmd} {testsetplatform} {
d1091 1
a1091 3
if {[tcltest::testConstraint testsetplatform]} {
    testsetplatform $platform
}
a1096 1
set oldpwd [pwd]
a1097 1
cd [temporaryDirectory]
d1127 1
a1127 9
test filename-11.17 {Tcl_GlobCmd} {unixOnly} {
    list [catch {lsort [glob -directory $globname *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.17.1 {Tcl_GlobCmd} {pcOnly macOnly} {
a1129 1
        [file join $globname .1]\
d1135 1
a1135 81
if {[string equal $tcl_platform(platform) "windows"]} {
    if {[string index $tcl_platform(osVersion) 0] >= 5 \
      && ([lindex [file system [temporaryDirectory]] 1] == "NTFS")} {
	tcltest::testConstraint linkDirectory 1
    } else {
	tcltest::testConstraint linkDirectory 0
    }
} else {
    tcltest::testConstraint linkDirectory 1
}
test filename-11.17.2 {Tcl_GlobCmd} {notRoot linkDirectory} {
    set dir [pwd]
    set ret "error in test"
    if {[catch {
	cd $globname
	file link -symbolic link a1
	cd $dir
	set ret [list [catch {
	    lsort [glob -directory $globname -join * b1]
	} msg] $msg]
    }]} {
	cd $dir
    }
    file delete [file join $globname link]
    set ret
} [list 0 [lsort [list [file join $globname a1 b1] \
  [file join $globname link b1]]]]
# Simpler version of the above test to illustrate a given bug.
test filename-11.17.3 {Tcl_GlobCmd} {notRoot linkDirectory} {
    set dir [pwd]
    set ret "error in test"
    if {[catch {
	cd $globname
	file link -symbolic link a1
	cd $dir
	set ret [list [catch {
	    lsort [glob -directory $globname -type d *]
	} msg] $msg]
    }]} {
	cd $dir
    }
    file delete [file join $globname link]
    set ret
} [list 0 [lsort [list [file join $globname a1] \
  [file join $globname a2] \
  [file join $globname a3] \
  [file join $globname link]]]]
# Make sure the bugfix isn't too simple.  We don't want
# to break 'glob -type l'.
test filename-11.17.4 {Tcl_GlobCmd} {notRoot linkDirectory} {
    set dir [pwd]
    set ret "error in test"
    if {[catch {
	cd $globname
	file link -symbolic link a1
	cd $dir
	set ret [list [catch {
	    lsort [glob -directory $globname -type l *]
	} msg] $msg]
    }]} {
	cd $dir
    }
    file delete [file join $globname link]
    set ret
} [list 0 [list [file join $globname link]]]
test filename-11.17.5 {Tcl_GlobCmd} {
    list [catch {lsort [glob -directory $globname -tails *.c]} msg] $msg
} [list 0 [lsort [list "weird name.c" x,z1.c x1.c y1.c z1.c]]]
test filename-11.17.6 {Tcl_GlobCmd} {
    list [catch {lsort [glob -directory $globname -tails *.c *.c]} msg] $msg
} [list 0 [lsort [concat [list "weird name.c" x,z1.c x1.c y1.c z1.c] \
  [list "weird name.c" x,z1.c x1.c y1.c z1.c]]]]
test filename-11.18 {Tcl_GlobCmd} {unixOnly} {
    list [catch {lsort [glob -path $globname/ *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.18.1 {Tcl_GlobCmd} {pcOnly macOnly} {
a1137 10
        [file join $globname .1]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.19 {Tcl_GlobCmd} {unixOnly} {
    list [catch {lsort [glob -join -path \
	    [string range $globname 0 5] * *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
d1143 1
a1143 1
test filename-11.19.1 {Tcl_GlobCmd} {pcOnly macOnly} {
a1146 1
        [file join $globname .1]\
a1160 5
# Get rid of file/dir if it exists, since it will have
# been left behind by a previous failed run.
if {[file exists $horribleglobname]} {
    file delete -force $horribleglobname
}
d1164 1
a1164 9
test filename-11.22 {Tcl_GlobCmd} {unixOnly} {
    list [catch {lsort [glob -dir $globname *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.22.1 {Tcl_GlobCmd} {pcOnly macOnly} {
a1166 1
        [file join $globname .1]\
d1172 1
a1172 1
test filename-11.23 {Tcl_GlobCmd} {unixOnly} {
d1180 1
a1180 19
test filename-11.23.1 {Tcl_GlobCmd} {pcOnly macOnly} {
    list [catch {lsort [glob -path $globname/ *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
        [file join $globname .1]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.24 {Tcl_GlobCmd} {unixOnly} {
    list [catch {lsort [glob -join -path \
	    [string range $globname 0 5] * *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.24.1 {Tcl_GlobCmd} {pcOnly macOnly} {
a1183 1
        [file join $globname .1]\
a1193 10
test filename-11.25.1 {Tcl_GlobCmd} {
    list [catch {lsort [glob -type {d r} -dir $globname *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1]\
  [file join $globname a2]\
  [file join $globname a3]]]]
test filename-11.25.2 {Tcl_GlobCmd} {
    list [catch {lsort [glob -type {d r w} -dir $globname *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1]\
  [file join $globname a2]\
  [file join $globname a3]]]]
d1224 1
a1224 59
} {1 {bad option "-paths": must be -directory, -join, -nocomplain, -path, -tails, -types, or --}}
# Test '-tails' flag to glob.
test filename-11.36 {Tcl_GlobCmd} {
    list [catch {glob -tails *} msg] $msg
} {1 {"-tails" must be used with either "-directory" or "-path"}}
test filename-11.37 {Tcl_GlobCmd} {
    list [catch {glob -type d -tails -path $globname *} msg] $msg
} [list 0 [list $globname]]
test filename-11.38 {Tcl_GlobCmd} {
    list [catch {glob -tails -path $globname *} msg] $msg
} [list 0 [list $globname]]
test filename-11.39 {Tcl_GlobCmd} {
    list [catch {glob -tails -join -path $globname *} msg] $msg
} [list 0 [list $globname]]
test filename-11.40 {Tcl_GlobCmd} {
    expr {[glob -dir [pwd] -tails *] == [glob *]}
} {1}
test filename-11.41 {Tcl_GlobCmd} {
    expr {[glob -dir [pwd] -tails *] != [glob -dir [pwd] *]}
} {1}
test filename-11.42 {Tcl_GlobCmd} {
    set res [list]
    foreach f [glob -dir [pwd] *] {
	lappend res [file tail $f]
    }
    expr {$res == [glob *]}
} {1}
test filename-11.43 {Tcl_GlobCmd} {
    list [catch {glob -t *} msg] $msg
} {1 {ambiguous option "-t": must be -directory, -join, -nocomplain, -path, -tails, -types, or --}}
test filename-11.44 {Tcl_GlobCmd} {
    list [catch {glob -tails -path hello -directory hello *} msg] $msg
} {1 {"-directory" cannot be used with "-path"}}
test filename-11.45 {Tcl_GlobCmd on root volume} {
    set res1 ""
    set res2 ""
    catch {
	set res1 [glob -dir [lindex [file volumes] 0] -tails *]
    }
    catch {
	set tmpd [pwd]
	cd [lindex [file volumes] 0]
	set res2 [glob *]
	cd $tmpd
    }
    expr {$res1 == $res2}
} {1}
test filename-11.46 {Tcl_GlobCmd} {
    list [catch {glob -types abcde -dir foo *} msg] $msg
} {1 {bad argument to "-types": abcde}}
test filename-11.47 {Tcl_GlobCmd} {
    list [catch {glob -types abcde -path foo *} msg] $msg
} {1 {bad argument to "-types": abcde}}
test filename-11.48 {Tcl_GlobCmd} {
    list [catch {glob -types abcde -dir foo -join * *} msg] $msg
} {1 {bad argument to "-types": abcde}}
test filename-11.49 {Tcl_GlobCmd} {
    list [catch {glob -types abcde -path foo -join * *} msg] $msg
} {1 {bad argument to "-types": abcde}}
a1232 18
test filename-12.1.1 {simple globbing} {unixOrPc} {
    list [catch {glob -types f {}} msg] $msg
} {1 {no files matched glob pattern ""}}
test filename-12.1.2 {simple globbing} {unixOrPc} {
    list [catch {glob -types d {}} msg] $msg
} {0 .}
test filename-12.1.3 {simple globbing} {unixOnly} {
    list [catch {glob -types hidden {}} msg] $msg
} {0 .}
test filename-12.1.4 {simple globbing} {pcOnly} {
    list [catch {glob -types hidden {}} msg] $msg
} {1 {no files matched glob pattern ""}}
test filename-12.1.5 {simple globbing} {pcOnly} {
    list [catch {glob -types hidden c:/} msg] $msg
} {1 {no files matched glob pattern "c:/"}}
test filename-12.1.6 {simple globbing} {pcOnly} {
    list [catch {glob c:/} msg] $msg
} {0 c:/}
a1235 9
test filename-12.2.1 {simple globbing} {macOnly} {
    list [catch {glob -types f {}} msg] $msg
} {1 {no files matched glob pattern ""}}
test filename-12.2.2 {simple globbing} {macOnly} {
    list [catch {glob -types d {}} msg] $msg
} {0 :}
test filename-12.2.3 {simple globbing} {macOnly} {
    list [catch {glob -types hidden {}} msg] $msg
} {1 {no files matched glob pattern ""}}
d1241 1
a1241 1
    set globPreResult :globTest:
d1243 1
a1243 1
    set globPreResult globTest/
a1335 7

# The current directory could be anywhere; do this to stop spurious matches
file mkdir globTestContext
file rename globTest [file join globTestContext globTest]
set savepwd [pwd]
cd globTestContext

d1342 1
a1342 7

# Reset to where we were
cd $savepwd
file rename [file join globTestContext globTest] globTest
file delete globTestContext

test filename-14.7 {asterisks, question marks, and brackets} {unixOnly} {
a1344 3
test filename-14.7.1 {asterisks, question marks, and brackets} {pcOnly} {
    lsort [glob globTest/*]
} {globTest/.1 globTest/a1 globTest/a2 globTest/a3 {globTest/weird name.c} globTest/x,z1.c globTest/x1.c globTest/y1.c globTest/z1.c}
d1401 1
a1401 8
test filename-14.25 {type specific globbing} {unixOnly} {
    list [catch {lsort [glob -dir globTest -types f *]} msg] $msg
} [list 0 [lsort [list \
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-14.25.1 {type specific globbing} {pcOnly macOnly} {
a1403 1
        [file join $globname .1]\
d1418 1
a1418 1
catch {file attributes globTest/a1 -permissions 0000}
d1426 1
a1426 1
	{unixOnly nonPortable} {
d1432 1
a1432 1
catch {file attributes globTest/a1 -permissions 0755}
d1434 1
a1434 1
	{unixOnly nonPortable} {
a1439 6
test filename-15.4.1 {no complain: no errors, good result} {
    # test used to fail because if an error occurs, the interp's result
    # is reset... 
    string equal [glob -nocomplain ~wontexist ~blah ~] \
      [glob -nocomplain ~ ~blah ~wontexist]
} {1}
d1451 3
a1453 2
} [list 0 [list [lindex [glob ~] 0]/globTest/odd\\\[\]*?\{\}name]]
catch {file delete -force globTest/odd\\\[\]*?\{\}name}
d1456 3
a1458 2
set oldDir [pwd]
if {$::tcltest::testConstraints(pcOnly)} {
d1460 2
a1461 2
    file delete -force globTest
    file mkdir globTest
d1480 1
a1480 1
    glob c:*bTest
d1483 1
a1483 1
    glob c:\\\\*bTest
d1486 1
a1486 1
    glob c:/*bTest
d1511 5
d1520 5
a1526 11
test filename-16.14 {windows specific globbing} {pcOnly} {
    cd [lindex [glob -types d -dir C:/ *] 0]
    expr {[lsearch -exact [glob {{.,*}*}] ".."] != -1}
} {1}
test filename-16.15 {windows specific globbing} {pcOnly} {
    cd [lindex [glob -types d -dir C:/ *] 0]
    glob ..
} {..}
test filename-16.16 {windows specific globbing} {pcOnly} {
    file tail [lindex [glob "[lindex [glob -types d -dir C:/ *] 0]/.."] 0]
} {..}
d1529 2
a1530 1
catch {file delete -force C:/globTest}
a1531 1
cd $oldpwd
d1533 2
a1534 5
if {[tcltest::testConstraint testsetplatform]} {
    testsetplatform $platform
    catch {unset platform}
}
catch {unset oldhome temp result}
d1537 13
@


1.1
log
@Initial revision
@
text
@d8 1
d13 1
a13 1
# RCS: @@(#) $Id: fileName.test,v 1.9 1999/01/26 03:53:29 jingham Exp $
d15 4
a18 1
if {[string compare test [info procs test]] == 1} then {source defs}
d23 1
d1036 1
a1036 1
test filename-10.23 {Tcl_TranslateFileName} {nonPortable unixOnly} {
d1040 1
a1040 1
test filename-10.24 {Tcl_TranslateFileName} {nonPortable unixOnly} {
d1051 1
a1051 1
} {1 {bad switch "-gorp": must be -nocomplain or --}}
d1054 1
a1054 1
} {1 {bad switch "-nocomplai": must be -nocomplain or --}}
d1066 1
a1066 1
} {1 {no files matched glob patterns "-nocomplain"}}
d1073 1
a1073 1
} {1 {globbing characters not supported in user names}}
a1110 4
# Cannot create a file with the following names under Win32s.  We have to
# skip the tests that are checking the difference between a "." or "," in
# the file name vs. a "." or "," in the glob pattern.

d1124 106
d1281 1
a1281 1
test filename-13.9 {globbing with brace substitution} {!win32s} {
d1284 1
a1284 1
test filename-13.10 {globbing with brace substitution} {!win32s} {
d1287 1
a1287 1
test filename-13.11 {globbing with brace substitution} {unixOrPc && !win32s} {
d1324 2
a1325 2
test filename-14.1 {asterisks, question marks, and brackets} {unixOrPc && !win32s} {
    lsort [glob g*/*.c]
a1326 3
test filename-14.1 {asterisks, question marks, and brackets} {win32s} {
    lsort [glob g*/*.c]
} {globtest/weirdn~1.c globtest/x1.c globtest/y1.c globtest/z1.c}
d1328 1
a1328 1
    lsort [glob g*/*.c]
d1336 1
a1336 1
test filename-14.5 {asterisks, question marks, and brackets} {unixOrPc && !win32s} {
a1338 3
test filename-14.5 {asterisks, question marks, and brackets} {win32s} {
    lsort [glob */*/*/*.c]
} {globtest/a1/b1/x2.c globtest/a1/b2/y2.c}
d1342 1
a1342 1
test filename-14.7 {asterisks, question marks, and brackets} {unixOrPc && !win32s} {
a1344 3
test filename-14.7 {asterisks, question marks, and brackets} {win32s} {
    lsort [glob globTest/*]
} {globTest/a1 globTest/a2 globTest/a3 globTest/weirdn~1.c globTest/x1.c globTest/y1.c globTest/z1.c}
d1348 1
a1348 1
test filename-14.9 {asterisks, question marks, and brackets} {unixOrPc && !win32s} {
a1350 3
test filename-14.9 {asterisks, question marks, and brackets} {win32s} {
    lsort [glob globTest/.*]
} {globTest/. globTest/..}
d1380 1
a1380 1
test filename-14.18 {asterisks, question marks, and brackets} {unixOrPc && !win32s} {
a1382 3
test filename-14.18 {asterisks, question marks, and brackets} {win32s} {
    list [catch {lsort [glob globTest/*.c goo/*]} msg] $msg
} {0 {globTest/weirdn~1.c globTest/x1.c globTest/y1.c globTest/z1.c}}
d1401 12
d1415 38
a1453 37
if {$tcl_platform(platform) == "unix"} {
    # On some systems, like AFS, "000" protection doesn't prevent
    # access by owner, so the following test is not portable.

    exec chmod 000 globTest/a1
    test filename-15.1 {unix specific globbing} {nonPortable} {
	string tolower [list [catch {glob globTest/a1/*} msg]  $msg $errorCode]
    } {1 {couldn't read directory "globtest/a1": permission denied} {posix eacces {permission denied}}}
    test filename-15.2 {unix specific no complain: no errors} {nonPortable} {
	glob -nocomplain globTest/a1/*
    } {}
    test filename-15.3 {unix specific no complain: no errors, good result} {nonPortable knownBug} {
	# test fails because if an error occur , the interp's result
	# is reset...
	glob -nocomplain globTest/a2 globTest/a1/* globTest/a3
    } {globTest/a2 globTest/a3}
    exec chmod 755 globTest/a1
    test filename-15.4 {unix specific no complain: no errors, good result} {nonPortable knownBug} {
	# test fails because if an error occur , the interp's result
	# is reset... (or you don't run at sunscript where the
	# outser and demailly's users exists
	glob -nocomplain ~ouster ~foo ~demailly
    } {/home/ouster /home/demailly}
    test filename-15.5 {unix specific globbing} {nonPortable} {
	glob ~ouster/.csh*
    } "/home/ouster/.cshrc"
    close [open globTest/odd\\\[\]*?\{\}name w]
    test filename-15.6 {unix specific globbing} {
	global env
	set temp $env(HOME)
	set env(HOME) $env(HOME)/globTest/odd\\\[\]*?\{\}name
	set result [list [catch {glob ~} msg] $msg]
	set env(HOME) $temp
	set result
    } [list 0 [list [glob ~]/globTest/odd\\\[\]*?\{\}name]]
    exec rm -f globTest/odd\\\[\]*?\{\}name
}
d1456 3
a1458 3

if {$tcl_platform(platform) == "windows"} {
    set temp [pwd]
a1459 66
    catch {
	removeDirectory globTest
	makeDirectory globTest
	close [open globTest/x1.BAT w]
	close [open globTest/y1.Bat w]
	close [open globTest/z1.bat w]
    }
    
    test filename-16.1 {windows specific globbing} {!win32s} {
	lsort [glob globTest/*.bat]
    } {globTest/x1.BAT globTest/y1.Bat globTest/z1.bat}
    test filename-16.1 {windows specific globbing} {win32s} {
	lsort [glob globTest/*.bat]
    } {globTest/x1.bat globTest/y1.bat globTest/z1.bat}
    test filename-16.2 {windows specific globbing} {
	glob c:
    } c:
    test filename-16.3 {windows specific globbing} {
	glob c:\\\\
	} c:/
    test filename-16.4 {windows specific globbing} {
	glob c:/
    } c:/
    test filename-16.5 {windows specific globbing} {!win32s} {
	glob c:*Test
    } c:globTest
    test filename-16.5 {windows specific globbing} {win32s} {
	glob c:*Test
    } c:globtest
    test filename-16.6 {windows specific globbing} {!win32s} {
	glob c:\\\\*Test
    } c:/globTest
    test filename-16.6 {windows specific globbing} {win32s} {
	glob c:\\\\*Test
    } c:/globtest
    test filename-16.7 {windows specific globbing} {!win32s} {
	glob c:/*Test
    } c:/globTest
    test filename-16.7 {windows specific globbing} {win32s} {
	glob c:/*Test
    } c:/globtest
    test filename-16.8 {windows specific globbing} {!win32s} {
	lsort [glob c:globTest/*.bat]
    } {c:globTest/x1.BAT c:globTest/y1.Bat c:globTest/z1.bat}
    test filename-16.8 {windows specific globbing} {win32s} {
	lsort [glob c:globTest/*.bat]
    } {c:globTest/x1.bat c:globTest/y1.bat c:globTest/z1.bat}
    test filename-16.9 {windows specific globbing} {!win32s} {
	lsort [glob c:/globTest/*.bat]
    } {c:/globTest/x1.BAT c:/globTest/y1.Bat c:/globTest/z1.bat}
    test filename-16.9 {windows specific globbing} {win32s} {
	lsort [glob c:/globTest/*.bat]
    } {c:/globTest/x1.bat c:/globTest/y1.bat c:/globTest/z1.bat}
    test filename-16.10 {windows specific globbing} {!win32s} {
	lsort [glob c:globTest\\\\*.bat]
    } {c:globTest/x1.BAT c:globTest/y1.Bat c:globTest/z1.bat}
    test filename-16.10 {windows specific globbing} {win32s} {
	lsort [glob c:globTest\\\\*.bat]
    } {c:globTest/x1.bat c:globTest/y1.bat c:globTest/z1.bat}
    test filename-16.11 {windows specific globbing} {!win32s} {
	lsort [glob c:\\\\globTest\\\\*.bat]
    } {c:/globTest/x1.BAT c:/globTest/y1.Bat c:/globTest/z1.bat}
    test filename-16.11 {windows specific globbing} {win32s} {
	lsort [glob c:\\\\globTest\\\\*.bat]
    } {c:/globTest/x1.bat c:/globTest/y1.bat c:/globTest/z1.bat}

d1461 5
d1467 33
a1499 14
    if {($testConfig(nonPortable) != 0) && [catch {cd //gaspode/d}] == 0} {
	removeDirectory globTest
	makeDirectory globTest

	close [open globTest/x1.BAT w]
	close [open globTest/y1.Bat w]
	close [open globTest/z1.bat w]

	test filename-16.12 {windows specific globbing} {
	    glob //gaspode/d/*Test
	} //gaspode/d/globTest
	test filename-16.13 {windows specific globbing} {
	    glob {\\\\gaspode\\d\\*Test}
	} //gaspode/d/globTest
d1501 1
a1501 2
	removeDirectory globTest
    }	    
d1503 4
a1506 1
    cd $temp
d1509 23
a1531 1
removeDirectory globTest
a1532 1

d1535 15
a1549 1
concat ""
@


1.1.1.1
log
@import dejagnu-1999-11-08 snapshot
@
text
@@


1.1.1.2
log
@Tcl 8.3 upgrade
@
text
@a7 1
# Copyright (c) 1999 by Scriptics Corporation.
d12 1
a12 1
# RCS: @@(#) $Id: fileName.test,v 1.6.8.2 2000/09/15 16:56:26 spolk Exp $
d14 1
a14 4
if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest
    namespace import -force ::tcltest::*
}
a18 1
    ::tcltest::cleanupTests
d1031 1
a1031 1
test filename-10.23 {Tcl_TranslateFileName} {unixOnly nonPortable} {
d1035 1
a1035 1
test filename-10.24 {Tcl_TranslateFileName} {unixOnly nonPortable} {
d1046 1
a1046 1
} {1 {bad option "-gorp": must be -directory, -join, -nocomplain, -path, -types, or --}}
d1049 1
a1049 1
} {1 {wrong # args: should be "glob ?switches? name ?name ...?"}}
d1061 1
a1061 1
} {1 {no files matched glob pattern "-nocomplain"}}
d1068 1
a1068 1
} {1 {user "\xyqrszzz" doesn't exist}}
d1106 4
a1122 106
set globname "globTest"
set horribleglobname "glob\[\{Test"

test filename-11.17 {Tcl_GlobCmd} {
    list [catch {lsort [glob -directory $globname *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.18 {Tcl_GlobCmd} {
    list [catch {lsort [glob -path $globname/ *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.19 {Tcl_GlobCmd} {
    list [catch {lsort [glob -join -path \
	    [string range $globname 0 5] * *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.20 {Tcl_GlobCmd} {
    list [catch {lsort [glob -type d -dir $globname *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1]\
	[file join $globname a2]\
	[file join $globname a3]]]]
test filename-11.21 {Tcl_GlobCmd} {
    list [catch {lsort [glob -type d -path $globname *]} msg] $msg
} [list 0 [lsort [list $globname]]]

file rename globTest $horribleglobname
set globname $horribleglobname

test filename-11.22 {Tcl_GlobCmd} {
    list [catch {lsort [glob -dir $globname *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.23 {Tcl_GlobCmd} {
    list [catch {lsort [glob -path $globname/ *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.24 {Tcl_GlobCmd} {
    list [catch {lsort [glob -join -path \
	    [string range $globname 0 5] * *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.25 {Tcl_GlobCmd} {
    list [catch {lsort [glob -type d -dir $globname *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1]\
	[file join $globname a2]\
	[file join $globname a3]]]]
test filename-11.26 {Tcl_GlobCmd} {
    list [catch {glob -type d -path $globname *} msg] $msg
} [list 0 [list $globname]]
test filename-11.27 {Tcl_GlobCmd} {
    list [catch {glob -types abcde *} msg] $msg
} {1 {bad argument to "-types": abcde}}
test filename-11.28 {Tcl_GlobCmd} {
    list [catch {glob -types z *} msg] $msg
} {1 {bad argument to "-types": z}}
test filename-11.29 {Tcl_GlobCmd} {
    list [catch {glob -types {abcd efgh} *} msg] $msg
} {1 {only one MacOS type or creator argument to "-types" allowed}}
test filename-11.30 {Tcl_GlobCmd} {
    list [catch {glob -types {{macintosh type TEXT} \
	    {macintosh creator ALFA} efgh} *} msg] $msg
} {1 {only one MacOS type or creator argument to "-types" allowed}}
test filename-11.31 {Tcl_GlobCmd} {
    list [catch {glob -types} msg] $msg
} {1 {missing argument to "-types"}}
test filename-11.32 {Tcl_GlobCmd} {
    list [catch {glob -path hello -dir hello *} msg] $msg
} {1 {"-directory" cannot be used with "-path"}}
test filename-11.33 {Tcl_GlobCmd} {
    list [catch {glob -path} msg] $msg
} {1 {missing argument to "-path"}}
test filename-11.34 {Tcl_GlobCmd} {
    list [catch {glob -direct} msg] $msg
} {1 {missing argument to "-directory"}}
test filename-11.35 {Tcl_GlobCmd} {
    list [catch {glob -paths *} msg] $msg
} {1 {bad option "-paths": must be -directory, -join, -nocomplain, -path, -types, or --}}

file rename $horribleglobname globTest
set globname globTest
unset horribleglobname

d1174 1
a1174 1
test filename-13.9 {globbing with brace substitution} {
d1177 1
a1177 1
test filename-13.10 {globbing with brace substitution} {
d1180 1
a1180 1
test filename-13.11 {globbing with brace substitution} {unixOrPc} {
d1217 2
a1218 2
test filename-14.1 {asterisks, question marks, and brackets} {unixOrPc} {
    lsort [glob glo*/*.c]
d1220 3
d1224 1
a1224 1
    lsort [glob glo*/*.c]
d1232 1
a1232 1
test filename-14.5 {asterisks, question marks, and brackets} {unixOrPc} {
d1235 3
d1241 1
a1241 1
test filename-14.7 {asterisks, question marks, and brackets} {unixOrPc} {
d1244 3
d1250 1
a1250 1
test filename-14.9 {asterisks, question marks, and brackets} {unixOrPc} {
d1253 3
d1285 1
a1285 1
test filename-14.18 {asterisks, question marks, and brackets} {unixOrPc} {
d1288 3
a1308 12
test filename-14.25 {type specific globbing} {
    list [catch {lsort [glob -dir globTest -types f *]} msg] $msg
} [list 0 [lsort [list \
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-14.26 {type specific globbing} {
    list [catch {glob -nocomplain -dir globTest -types {readonly} *} msg] $msg
} [list 0 {}]

unset globname
a1310 2
# On some systems, like AFS, "000" protection doesn't prevent
# access by owner, so the following test is not portable.
d1312 37
a1348 35
catch {exec chmod 000 globTest/a1}
test filename-15.1 {unix specific globbing} {unixOnly nonPortable} {
    string tolower [list [catch {glob globTest/a1/*} msg]  $msg $errorCode]
} {1 {couldn't read directory "globtest/a1": permission denied} {posix eacces {permission denied}}}
test filename-15.2 {unix specific no complain: no errors} {unixOnly nonPortable} {
    glob -nocomplain globTest/a1/*
} {}
test filename-15.3 {unix specific no complain: no errors, good result} \
	{unixOnly nonPortable knownBug} {
    # test fails because if an error occur , the interp's result
    # is reset...
    glob -nocomplain globTest/a2 globTest/a1/* globTest/a3
} {globTest/a2 globTest/a3}

catch {exec chmod 755 globTest/a1}
test filename-15.4 {unix specific no complain: no errors, good result} \
	{unixOnly nonPortable knownBug} {
    # test fails because if an error occurs, the interp's result
    # is reset... or you don't run at scriptics where the
    # outser and welch users exists
    glob -nocomplain ~ouster ~foo ~welch
} {/home/ouster /home/welch}
test filename-15.5 {unix specific globbing} {unixOnly nonPortable} {
    glob ~ouster/.csh*
} "/home/ouster/.cshrc"
catch {close [open globTest/odd\\\[\]*?\{\}name w]}
test filename-15.6 {unix specific globbing} {unixOnly} {
    global env
    set temp $env(HOME)
    set env(HOME) $env(HOME)/globTest/odd\\\[\]*?\{\}name
    set result [list [catch {glob ~} msg] $msg]
    set env(HOME) $temp
    set result
} [list 0 [list [glob ~]/globTest/odd\\\[\]*?\{\}name]]
catch {exec rm -f globTest/odd\\\[\]*?\{\}name}
d1350 1
d1352 2
a1353 4
# The following tests are only valid for Windows systems.
set temp [pwd]
catch {cd c:/}
catch {
d1355 66
a1421 5
    makeDirectory globTest
    close [open globTest/x1.BAT w]
    close [open globTest/y1.Bat w]
    close [open globTest/z1.bat w]
}
d1423 14
a1436 33
test filename-16.1 {windows specific globbing} {pcOnly} {
    lsort [glob globTest/*.bat]
} {globTest/x1.BAT globTest/y1.Bat globTest/z1.bat}
test filename-16.2 {windows specific globbing} {pcOnly} {
    glob c:
} c:
test filename-16.3 {windows specific globbing} {pcOnly} {
    glob c:\\\\
} c:/
test filename-16.4 {windows specific globbing} {pcOnly} {
    glob c:/
} c:/
test filename-16.5 {windows specific globbing} {pcOnly} {
    glob c:*Test
} c:globTest
test filename-16.6 {windows specific globbing} {pcOnly} {
    glob c:\\\\*Test
} c:/globTest
test filename-16.7 {windows specific globbing} {pcOnly} {
    glob c:/*Test
} c:/globTest
test filename-16.8 {windows specific globbing} {pcOnly} {
    lsort [glob c:globTest/*.bat]
} {c:globTest/x1.BAT c:globTest/y1.Bat c:globTest/z1.bat}
test filename-16.9 {windows specific globbing} {pcOnly} {
    lsort [glob c:/globTest/*.bat]
} {c:/globTest/x1.BAT c:/globTest/y1.Bat c:/globTest/z1.bat}
test filename-16.10 {windows specific globbing} {pcOnly} {
    lsort [glob c:globTest\\\\*.bat]
} {c:globTest/x1.BAT c:globTest/y1.Bat c:globTest/z1.bat}
test filename-16.11 {windows specific globbing} {pcOnly} {
    lsort [glob c:\\\\globTest\\\\*.bat]
} {c:/globTest/x1.BAT c:/globTest/y1.Bat c:/globTest/z1.bat}
d1438 2
a1439 1
# some tests require a shared C drive
d1441 1
a1441 4
if {[catch {cd //[info hostname]/c}]} {
    set ::tcltest::testConstraints(sharedCdrive) 0
} else {
    set ::tcltest::testConstraints(sharedCdrive) 1
d1444 1
a1444 23
test filename-16.12 {windows specific globbing} {pcOnly sharedCdrive} {
    cd //[info hostname]/c
    removeDirectory globTest
    makeDirectory globTest
    close [open globTest/x1.BAT w]
    close [open globTest/y1.Bat w]
    close [open globTest/z1.bat w]
    glob //[info hostname]/c/*Test
} //[info hostname]/c/globTest
test filename-16.13 {windows specific globbing} {pcOnly sharedCdrive} {
    cd //[info hostname]/c
    removeDirectory globTest
    makeDirectory globTest
    close [open globTest/x1.BAT w]
    close [open globTest/y1.Bat w]
    close [open globTest/z1.bat w]
    glob "\\\\\\\\[info hostname]\\\\c\\\\*Test"
} //[info hostname]/c/globTest

# cleanup
file delete -force //[info hostname]/c/globTest
cd $temp
file delete -force globTest
d1446 1
d1449 1
a1449 15
::tcltest::cleanupTests
return













@


1.1.1.3
log
@import tcl 8.4.0
@
text
@d13 1
a13 1
# RCS: @@(#) $Id: fileName.test,v 1.26 2002/07/10 13:08:20 dkf Exp $
d20 6
a25 2
tcltest::testConstraint testsetplatform [string equal testsetplatform [info commands testsetplatform]]
tcltest::testConstraint testtranslatefilename [string equal testtranslatefilename [info commands testtranslatefilename]]
d28 1
a28 3
if {[tcltest::testConstraint testsetplatform]} {
    set platform [testgetplatform]
}
d30 1
a30 1
test filename-1.1 {Tcl_GetPathType: unix} {testsetplatform} {
d34 1
a34 1
test filename-1.2 {Tcl_GetPathType: unix} {testsetplatform} {
d38 1
a38 1
test filename-1.3 {Tcl_GetPathType: unix} {testsetplatform} {
d42 1
a42 1
test filename-1.4 {Tcl_GetPathType: unix} {testsetplatform} {
d46 1
a46 1
test filename-1.5 {Tcl_GetPathType: unix} {testsetplatform} {
d50 1
a50 1
test filename-1.6 {Tcl_GetPathType: unix} {testsetplatform} {
d54 1
a54 1
test filename-1.7 {Tcl_GetPathType: unix} {testsetplatform} {
d58 1
a58 1
test filename-1.8 {Tcl_GetPathType: unix} {testsetplatform} {
d63 1
a63 1
test filename-2.1 {Tcl_GetPathType: mac, denerate names} {testsetplatform} {
d67 1
a67 1
test filename-2.2 {Tcl_GetPathType: mac, denerate names} {testsetplatform} {
d71 1
a71 1
test filename-2.3 {Tcl_GetPathType: mac, denerate names} {testsetplatform} {
d75 1
a75 1
test filename-2.4 {Tcl_GetPathType: mac, denerate names} {testsetplatform} {
d79 1
a79 1
test filename-2.5 {Tcl_GetPathType: mac, denerate names} {testsetplatform} {
d83 1
a83 1
test filename-2.6 {Tcl_GetPathType: mac, tilde names} {testsetplatform} {
d87 1
a87 1
test filename-2.7 {Tcl_GetPathType: mac, tilde names} {testsetplatform} {
d91 1
a91 1
test filename-2.8 {Tcl_GetPathType: mac, tilde names} {testsetplatform} {
d95 1
a95 1
test filename-2.9 {Tcl_GetPathType: mac, tilde names} {testsetplatform} {
d99 1
a99 1
test filename-2.10 {Tcl_GetPathType: mac, tilde names} {testsetplatform} {
d103 1
a103 1
test filename-2.11 {Tcl_GetPathType: mac, unix-style names} {testsetplatform} {
d107 1
a107 1
test filename-2.12 {Tcl_GetPathType: mac, unix-style names} {testsetplatform} {
d111 1
a111 1
test filename-2.13 {Tcl_GetPathType: mac, unix-style names} {testsetplatform} {
d115 1
a115 1
test filename-2.14 {Tcl_GetPathType: mac, unix-style names} {testsetplatform} {
d119 1
a119 1
test filename-2.15 {Tcl_GetPathType: mac, unix-style names} {testsetplatform} {
d123 1
a123 1
test filename-2.16 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d127 1
a127 1
test filename-2.17 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d131 1
a131 1
test filename-2.18 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d135 1
a135 1
test filename-2.19 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d139 1
a139 1
test filename-2.20 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d143 1
a143 1
test filename-2.21 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d147 1
a147 1
test filename-2.22 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d151 1
a151 1
test filename-2.23 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d155 1
a155 1
test filename-2.24 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d159 1
a159 1
test filename-2.25 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d163 1
a163 1
test filename-2.26 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d167 1
a167 1
test filename-2.27 {Tcl_GetPathType: mac, mac-style names} {testsetplatform} {
d172 1
a172 1
test filename-3.1 {Tcl_GetPathType: windows} {testsetplatform} {
d176 1
a176 1
test filename-3.2 {Tcl_GetPathType: windows} {testsetplatform} {
d180 1
a180 1
test filename-3.3 {Tcl_GetPathType: windows} {testsetplatform} {
d184 1
a184 1
test filename-3.4 {Tcl_GetPathType: windows} {testsetplatform} {
d188 1
a188 1
test filename-3.5 {Tcl_GetPathType: windows} {testsetplatform} {
d192 1
a192 1
test filename-3.6 {Tcl_GetPathType: windows} {testsetplatform} {
d196 1
a196 1
test filename-3.7 {Tcl_GetPathType: windows} {testsetplatform} {
d200 1
a200 1
test filename-3.8 {Tcl_GetPathType: windows} {testsetplatform} {
d204 1
a204 1
test filename-3.9 {Tcl_GetPathType: windows} {testsetplatform} {
d208 1
a208 1
test filename-3.10 {Tcl_GetPathType: windows} {testsetplatform} {
d212 1
a212 1
test filename-3.11 {Tcl_GetPathType: windows} {testsetplatform} {
d216 1
a216 1
test filename-3.12 {Tcl_GetPathType: windows} {testsetplatform} {
d220 1
a220 1
test filename-3.13 {Tcl_GetPathType: windows} {testsetplatform} {
d224 1
a224 1
test filename-3.14 {Tcl_GetPathType: windows} {testsetplatform} {
d228 1
a228 1
test filename-3.15 {Tcl_GetPathType: windows} {testsetplatform} {
d232 1
a232 1
test filename-3.16 {Tcl_GetPathType: windows} {testsetplatform} {
d237 1
a237 1
test filename-4.1 {Tcl_SplitPath: unix} {testsetplatform} {
d241 1
a241 1
test filename-4.2 {Tcl_SplitPath: unix} {testsetplatform} {
d245 1
a245 1
test filename-4.3 {Tcl_SplitPath: unix} {testsetplatform} {
d249 1
a249 1
test filename-4.4 {Tcl_SplitPath: unix} {testsetplatform} {
d253 1
a253 1
test filename-4.5 {Tcl_SplitPath: unix} {testsetplatform} {
d257 1
a257 1
test filename-4.6 {Tcl_SplitPath: unix} {testsetplatform} {
d261 1
a261 1
test filename-4.7 {Tcl_SplitPath: unix} {testsetplatform} {
d265 1
a265 1
test filename-4.8 {Tcl_SplitPath: unix} {testsetplatform} {
d269 1
a269 1
test filename-4.9 {Tcl_SplitPath: unix} {testsetplatform} {
d273 1
a273 1
test filename-4.10 {Tcl_SplitPath: unix} {testsetplatform} {
d277 1
a277 1
test filename-4.11 {Tcl_SplitPath: unix} {testsetplatform} {
d281 1
a281 1
test filename-4.12 {Tcl_SplitPath: unix} {testsetplatform} {
d285 1
a285 1
test filename-4.13 {Tcl_SplitPath: unix} {testsetplatform} {
d289 1
a289 1
test filename-4.14 {Tcl_SplitPath: unix} {testsetplatform} {
d293 1
a293 1
test filename-4.15 {Tcl_SplitPath: unix} {testsetplatform} {
d297 1
a297 1
test filename-4.16 {Tcl_SplitPath: unix} {testsetplatform} {
d301 1
a301 1
test filename-4.17 {Tcl_SplitPath: unix} {testsetplatform} {
d305 1
a305 1
test filename-4.18 {Tcl_SplitPath: unix} {testsetplatform} {
d310 1
a310 31
if {[tcltest::testConstraint testsetplatform]} {
    testsetplatform $platform
}

test filename-4.19 {Tcl_SplitPath} {
    set oldDir [pwd]
    set res [catch {
	cd [temporaryDirectory]
	file mkdir tildetmp
	set nastydir [file join tildetmp ./~tilde]
	file mkdir $nastydir
	set norm [file normalize $nastydir]
	cd tildetmp
	cd ./~tilde
	glob -nocomplain *
	set idx [string first tildetmp $norm]
	set norm [string range $norm $idx end]
	# fix path away so all platforms are the same
	regsub {(.*):$} $norm {\1} norm
	regsub -all ":" $norm "/" norm
	# make sure we can delete the directory we created
	cd $oldDir
	file delete -force $nastydir
	set norm
    } err]
    cd $oldDir
    catch {file delete -force tildetmp}
    list $res $err
} {0 tildetmp/~tilde}

test filename-5.1 {Tcl_SplitPath: mac} {testsetplatform} {
d314 1
a314 1
test filename-5.2 {Tcl_SplitPath: mac} {testsetplatform} {
d318 1
a318 1
test filename-5.3 {Tcl_SplitPath: mac} {testsetplatform} {
d322 1
a322 1
test filename-5.4 {Tcl_SplitPath: mac} {testsetplatform} {
d326 1
a326 1
test filename-5.5 {Tcl_SplitPath: mac} {testsetplatform} {
d330 1
a330 1
test filename-5.6 {Tcl_SplitPath: mac} {testsetplatform} {
d334 1
a334 1
test filename-5.7 {Tcl_SplitPath: mac} {testsetplatform} {
d338 1
a338 1
test filename-5.8 {Tcl_SplitPath: mac} {testsetplatform} {
d342 1
a342 1
test filename-5.9 {Tcl_SplitPath: mac} {testsetplatform} {
d346 1
a346 1
test filename-5.10 {Tcl_SplitPath: mac} {testsetplatform} {
d350 1
a350 1
test filename-5.11 {Tcl_SplitPath: mac} {testsetplatform} {
d354 1
a354 1
test filename-5.12 {Tcl_SplitPath: mac} {testsetplatform} {
d358 1
a358 1
test filename-5.13 {Tcl_SplitPath: mac} {testsetplatform} {
d362 1
a362 1
test filename-5.14 {Tcl_SplitPath: mac} {testsetplatform} {
d366 1
a366 1
test filename-5.15 {Tcl_SplitPath: mac} {testsetplatform} {
d370 1
a370 1
test filename-5.16 {Tcl_SplitPath: mac} {testsetplatform} {
d374 1
a374 1
test filename-5.17 {Tcl_SplitPath: mac} {testsetplatform} {
d378 1
a378 1
test filename-5.18 {Tcl_SplitPath: mac} {testsetplatform} {
d382 1
a382 1
test filename-5.19 {Tcl_SplitPath: mac} {testsetplatform} {
d386 1
a386 1
test filename-5.20 {Tcl_SplitPath: mac} {testsetplatform} {
d390 1
a390 1
test filename-5.21 {Tcl_SplitPath: mac} {testsetplatform} {
d394 1
a394 1
test filename-5.22 {Tcl_SplitPath: mac} {testsetplatform} {
d398 1
a398 1
test filename-5.23 {Tcl_SplitPath: mac} {testsetplatform} {
d402 1
a402 1
test filename-5.24 {Tcl_SplitPath: mac} {testsetplatform} {
d406 1
a406 1
test filename-5.25 {Tcl_SplitPath: mac} {testsetplatform} {
d410 1
a410 1
test filename-5.26 {Tcl_SplitPath: mac} {testsetplatform} {
d414 1
a414 1
test filename-5.27 {Tcl_SplitPath: mac} {testsetplatform} {
d418 1
a418 1
test filename-5.28 {Tcl_SplitPath: mac} {testsetplatform} {
d422 1
a422 1
test filename-5.29 {Tcl_SplitPath: mac} {testsetplatform} {
d426 1
a426 1
test filename-5.30 {Tcl_SplitPath: mac} {testsetplatform} {
d430 1
a430 1
test filename-5.31 {Tcl_SplitPath: mac} {testsetplatform} {
d434 1
a434 1
test filename-5.32 {Tcl_SplitPath: mac} {testsetplatform} {
d438 1
a438 1
test filename-5.33 {Tcl_SplitPath: mac} {testsetplatform} {
d442 1
a442 1
test filename-5.34 {Tcl_SplitPath: mac} {testsetplatform} {
d446 1
a446 1
test filename-5.35 {Tcl_SplitPath: mac} {testsetplatform} {
d450 1
a450 1
test filename-5.36 {Tcl_SplitPath: mac} {testsetplatform} {
d454 1
a454 1
test filename-5.37 {Tcl_SplitPath: mac} {testsetplatform} {
d458 1
a458 1
test filename-5.38 {Tcl_SplitPath: mac} {testsetplatform} {
d462 1
a462 1
test filename-5.39 {Tcl_SplitPath: mac} {testsetplatform} {
d466 1
a466 1
test filename-5.40 {Tcl_SplitPath: mac} {testsetplatform} {
d470 1
a470 1
test filename-5.41 {Tcl_SplitPath: mac} {testsetplatform} {
d474 1
a474 1
test filename-5.42 {Tcl_SplitPath: mac} {testsetplatform} {
d478 1
a478 1
test filename-5.43 {Tcl_SplitPath: mac} {testsetplatform} {
d482 1
a482 1
test filename-5.44 {Tcl_SplitPath: mac} {testsetplatform} {
d486 1
a486 1
test filename-5.45 {Tcl_SplitPath: mac} {testsetplatform} {
d490 1
a490 1
test filename-5.46 {Tcl_SplitPath: mac} {testsetplatform} {
d494 1
a494 1
test filename-5.47 {Tcl_SplitPath: mac} {testsetplatform} {
d498 1
a498 1
test filename-5.48 {Tcl_SplitPath: mac} {testsetplatform} {
d502 1
a502 1
test filename-5.49 {Tcl_SplitPath: mac} {testsetplatform} {
d506 1
a506 1
test filename-5.50 {Tcl_SplitPath: mac} {testsetplatform} {
d510 1
a510 1
test filename-5.51 {Tcl_SplitPath: mac} {testsetplatform} {
d515 1
a515 1
test filename-6.1 {Tcl_SplitPath: win} {testsetplatform} {
d519 1
a519 1
test filename-6.2 {Tcl_SplitPath: win} {testsetplatform} {
d523 1
a523 1
test filename-6.3 {Tcl_SplitPath: win} {testsetplatform} {
d527 1
a527 1
test filename-6.4 {Tcl_SplitPath: win} {testsetplatform} {
d531 1
a531 1
test filename-6.5 {Tcl_SplitPath: win} {testsetplatform} {
d535 1
a535 1
test filename-6.6 {Tcl_SplitPath: win} {testsetplatform} {
d539 1
a539 1
test filename-6.7 {Tcl_SplitPath: win} {testsetplatform} {
d543 1
a543 1
test filename-6.8 {Tcl_SplitPath: win} {testsetplatform} {
d547 1
a547 1
test filename-6.9 {Tcl_SplitPath: win} {testsetplatform} {
d551 1
a551 1
test filename-6.10 {Tcl_SplitPath: win} {testsetplatform} {
d555 1
a555 1
test filename-6.11 {Tcl_SplitPath: win} {testsetplatform} {
d559 1
a559 1
test filename-6.12 {Tcl_SplitPath: win} {testsetplatform} {
d563 1
a563 1
test filename-6.13 {Tcl_SplitPath: win} {testsetplatform} {
d567 1
a567 1
test filename-6.14 {Tcl_SplitPath: win} {testsetplatform} {
d571 1
a571 1
test filename-6.15 {Tcl_SplitPath: win} {testsetplatform} {
d575 1
a575 1
test filename-6.16 {Tcl_SplitPath: win} {testsetplatform} {
d579 1
a579 1
test filename-6.17 {Tcl_SplitPath: win} {testsetplatform} {
d583 1
a583 1
test filename-6.18 {Tcl_SplitPath: win} {testsetplatform} {
d587 1
a587 1
test filename-6.19 {Tcl_SplitPath: win} {testsetplatform} {
d591 1
a591 1
test filename-6.20 {Tcl_SplitPath: win} {testsetplatform} {
d595 1
a595 1
test filename-6.21 {Tcl_SplitPath: win} {testsetplatform} {
d599 1
a599 1
test filename-6.22 {Tcl_SplitPath: win} {testsetplatform} {
d603 1
a603 1
test filename-6.23 {Tcl_SplitPath: win} {testsetplatform} {
d607 1
a607 1
test filename-6.24 {Tcl_SplitPath: win} {testsetplatform} {
d611 1
a611 1
test filename-6.25 {Tcl_SplitPath: win} {testsetplatform} {
d615 1
a615 1
test filename-6.26 {Tcl_SplitPath: win} {testsetplatform} {
d619 1
a619 1
test filename-6.27 {Tcl_SplitPath: win} {testsetplatform} {
d623 1
a623 1
test filename-6.28 {Tcl_SplitPath: win} {testsetplatform} {
d627 1
a627 1
test filename-6.29 {Tcl_SplitPath: win} {testsetplatform} {
d631 1
a631 1
test filename-6.30 {Tcl_SplitPath: win} {testsetplatform} {
d636 1
a636 1
test filename-7.1 {Tcl_JoinPath: unix} {testsetplatform} {
d640 1
a640 1
test filename-7.2 {Tcl_JoinPath: unix} {testsetplatform} {
d644 1
a644 1
test filename-7.3 {Tcl_JoinPath: unix} {testsetplatform} {
d648 1
a648 1
test filename-7.4 {Tcl_JoinPath: unix} {testsetplatform} {
d652 1
a652 1
test filename-7.5 {Tcl_JoinPath: unix} {testsetplatform} {
d656 1
a656 1
test filename-7.6 {Tcl_JoinPath: unix} {testsetplatform} {
d660 1
a660 1
test filename-7.7 {Tcl_JoinPath: unix} {testsetplatform} {
d664 1
a664 1
test filename-7.8 {Tcl_JoinPath: unix} {testsetplatform} {
d668 1
a668 1
test filename-7.9 {Tcl_JoinPath: unix} {testsetplatform} {
d672 1
a672 1
test filename-7.10 {Tcl_JoinPath: unix} {testsetplatform} {
d676 1
a676 1
test filename-7.11 {Tcl_JoinPath: unix} {testsetplatform} {
d680 1
a680 1
test filename-7.12 {Tcl_JoinPath: unix} {testsetplatform} {
d684 1
a684 1
test filename-7.13 {Tcl_JoinPath: unix} {testsetplatform} {
d688 1
a688 1
test filename-7.14 {Tcl_JoinPath: unix} {testsetplatform} {
d692 1
a692 1
test filename-7.15 {Tcl_JoinPath: unix} {testsetplatform} {
d696 1
a696 1
test filename-7.16 {Tcl_JoinPath: unix} {testsetplatform} {
d700 1
a700 1
test filename-7.17 {Tcl_JoinPath: unix} {testsetplatform} {
d704 1
a704 1
test filename-7.18 {Tcl_JoinPath: unix} {testsetplatform} {
d709 1
a709 1
test filename-8.1 {Tcl_JoinPath: mac} {testsetplatform} {
d713 1
a713 1
test filename-8.2 {Tcl_JoinPath: mac} {testsetplatform} {
d717 1
a717 1
test filename-8.3 {Tcl_JoinPath: mac} {testsetplatform} {
d721 1
a721 1
test filename-8.4 {Tcl_JoinPath: mac} {testsetplatform} {
d725 1
a725 1
test filename-8.5 {Tcl_JoinPath: mac} {testsetplatform} {
d729 1
a729 1
test filename-8.6 {Tcl_JoinPath: mac} {testsetplatform} {
d733 1
a733 1
test filename-8.7 {Tcl_JoinPath: mac} {testsetplatform} {
d737 1
a737 1
test filename-8.8 {Tcl_JoinPath: mac} {testsetplatform} {
d741 1
a741 1
test filename-8.9 {Tcl_JoinPath: mac} {testsetplatform} {
d745 1
a745 1
test filename-8.10 {Tcl_JoinPath: mac} {testsetplatform} {
d749 1
a749 1
test filename-8.11 {Tcl_JoinPath: mac} {testsetplatform} {
d753 1
a753 1
test filename-8.12 {Tcl_JoinPath: mac} {testsetplatform} {
d757 1
a757 1
test filename-8.13 {Tcl_JoinPath: mac} {testsetplatform} {
d761 1
a761 1
test filename-8.14 {Tcl_JoinPath: mac} {testsetplatform} {
d765 1
a765 1
test filename-8.15 {Tcl_JoinPath: mac} {testsetplatform} {
d769 1
a769 1
test filename-8.16 {Tcl_JoinPath: mac} {testsetplatform} {
d773 1
a773 1
test filename-8.17 {Tcl_JoinPath: mac} {testsetplatform} {
d777 1
a777 1
test filename-8.18 {Tcl_JoinPath: mac} {testsetplatform} {
d781 1
a781 1
test filename-8.19 {Tcl_JoinPath: mac} {testsetplatform} {
d785 1
a785 1
test filename-8.20 {Tcl_JoinPath: mac} {testsetplatform} {
d789 1
a789 1
test filename-8.21 {Tcl_JoinPath: mac} {testsetplatform} {
d793 1
a793 1
test filename-8.22 {Tcl_JoinPath: mac} {testsetplatform} {
d798 1
a798 1
test filename-9.1 {Tcl_JoinPath: win} {testsetplatform} {
d802 1
a802 1
test filename-9.2 {Tcl_JoinPath: win} {testsetplatform} {
d806 1
a806 1
test filename-9.3 {Tcl_JoinPath: win} {testsetplatform} {
d810 1
a810 1
test filename-9.4 {Tcl_JoinPath: win} {testsetplatform} {
d814 1
a814 1
test filename-9.5 {Tcl_JoinPath: win} {testsetplatform} {
d818 1
a818 1
test filename-9.6 {Tcl_JoinPath: win} {testsetplatform} {
d822 1
a822 1
test filename-9.7 {Tcl_JoinPath: win} {testsetplatform} {
d826 1
a826 1
test filename-9.8 {Tcl_JoinPath: win} {testsetplatform} {
d830 1
a830 1
test filename-9.9 {Tcl_JoinPath: win} {testsetplatform} {
d834 1
a834 1
test filename-9.10 {Tcl_JoinPath: win} {testsetplatform} {
d838 1
a838 1
test filename-9.11 {Tcl_JoinPath: win} {testsetplatform} {
d842 1
a842 1
test filename-9.12 {Tcl_JoinPath: win} {testsetplatform} {
d846 1
a846 1
test filename-9.13 {Tcl_JoinPath: win} {testsetplatform} {
d850 1
a850 1
test filename-9.14 {Tcl_JoinPath: win} {testsetplatform} {
d854 1
a854 1
test filename-9.15 {Tcl_JoinPath: win} {testsetplatform} {
d858 1
a858 1
test filename-9.16 {Tcl_JoinPath: win} {testsetplatform} {
d862 1
a862 1
test filename-9.17 {Tcl_JoinPath: win} {testsetplatform} {
d866 1
a866 1
test filename-9.18 {Tcl_JoinPath: win} {testsetplatform} {
d871 1
a871 1
test filename-10.1 {Tcl_TranslateFileName} {testsetplatform} {
d875 1
a875 1
test filename-10.2 {Tcl_TranslateFileName} {testsetplatform} {
d879 1
a879 1
test filename-10.3 {Tcl_TranslateFileName} {testsetplatform} {
d883 1
a883 1
test filename-10.4 {Tcl_TranslateFileName} {testsetplatform} {
d887 1
a887 1
test filename-10.5 {Tcl_TranslateFileName} {testsetplatform} {
d891 1
a891 1
test filename-10.6 {Tcl_TranslateFileName} {testsetplatform} {
d900 1
a900 1
test filename-10.7 {Tcl_TranslateFileName} {testsetplatform} {
d909 1
a909 1
test filename-10.8 {Tcl_TranslateFileName} {testsetplatform} {
d918 1
a918 1
test filename-10.9 {Tcl_TranslateFileName} {testsetplatform} {
d927 1
a927 1
test filename-10.10 {Tcl_TranslateFileName} {testsetplatform} {
d936 1
a936 1
test filename-10.11 {Tcl_TranslateFileName} {testsetplatform} {
d945 1
a945 1
test filename-10.12 {Tcl_TranslateFileName} {testsetplatform} {
d954 1
a954 1
test filename-10.13 {Tcl_TranslateFileName} {testsetplatform} {
d963 1
a963 1
test filename-10.14 {Tcl_TranslateFileName} {testsetplatform} {
d972 1
a972 1
test filename-10.15 {Tcl_TranslateFileName} {testsetplatform} {
d981 1
a981 1
test filename-10.16 {Tcl_TranslateFileName} {testsetplatform} {
d990 1
a990 1
test filename-10.17 {Tcl_TranslateFileName} {testsetplatform} {
d999 1
a999 1
test filename-10.18 {Tcl_TranslateFileName} {testsetplatform} {
d1008 1
a1008 1
test filename-10.19 {Tcl_TranslateFileName} {testsetplatform} {
d1017 1
a1017 1
test filename-10.20 {Tcl_TranslateFileName} {testtranslatefilename} {
d1020 1
a1020 1
test filename-10.21 {Tcl_TranslateFileName} {testsetplatform} {
d1029 1
a1029 1
test filename-10.22 {Tcl_TranslateFileName} {testsetplatform} {
d1034 1
a1034 3
if {[tcltest::testConstraint testsetplatform]} {
    testsetplatform $platform
}
d1051 1
a1051 1
} {1 {bad option "-gorp": must be -directory, -join, -nocomplain, -path, -tails, -types, or --}}
d1070 1
a1070 1
test filename-11.9 {Tcl_GlobCmd} {testsetplatform} {
d1074 1
a1074 1
test filename-11.10 {Tcl_GlobCmd} {testsetplatform} {
d1078 1
a1078 1
test filename-11.11 {Tcl_GlobCmd} {testsetplatform} {
d1082 1
a1082 1
test filename-11.12 {Tcl_GlobCmd} {testsetplatform} {
d1091 1
a1091 3
if {[tcltest::testConstraint testsetplatform]} {
    testsetplatform $platform
}
a1096 1
set oldpwd [pwd]
a1097 1
cd [temporaryDirectory]
d1127 1
a1127 9
test filename-11.17 {Tcl_GlobCmd} {unixOnly} {
    list [catch {lsort [glob -directory $globname *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.17.1 {Tcl_GlobCmd} {pcOnly macOnly} {
a1129 1
        [file join $globname .1]\
d1135 1
a1135 81
if {[string equal $tcl_platform(platform) "windows"]} {
    if {[string index $tcl_platform(osVersion) 0] >= 5 \
      && ([lindex [file system [temporaryDirectory]] 1] == "NTFS")} {
	tcltest::testConstraint linkDirectory 1
    } else {
	tcltest::testConstraint linkDirectory 0
    }
} else {
    tcltest::testConstraint linkDirectory 1
}
test filename-11.17.2 {Tcl_GlobCmd} {notRoot linkDirectory} {
    set dir [pwd]
    set ret "error in test"
    if {[catch {
	cd $globname
	file link -symbolic link a1
	cd $dir
	set ret [list [catch {
	    lsort [glob -directory $globname -join * b1]
	} msg] $msg]
    }]} {
	cd $dir
    }
    file delete [file join $globname link]
    set ret
} [list 0 [lsort [list [file join $globname a1 b1] \
  [file join $globname link b1]]]]
# Simpler version of the above test to illustrate a given bug.
test filename-11.17.3 {Tcl_GlobCmd} {notRoot linkDirectory} {
    set dir [pwd]
    set ret "error in test"
    if {[catch {
	cd $globname
	file link -symbolic link a1
	cd $dir
	set ret [list [catch {
	    lsort [glob -directory $globname -type d *]
	} msg] $msg]
    }]} {
	cd $dir
    }
    file delete [file join $globname link]
    set ret
} [list 0 [lsort [list [file join $globname a1] \
  [file join $globname a2] \
  [file join $globname a3] \
  [file join $globname link]]]]
# Make sure the bugfix isn't too simple.  We don't want
# to break 'glob -type l'.
test filename-11.17.4 {Tcl_GlobCmd} {notRoot linkDirectory} {
    set dir [pwd]
    set ret "error in test"
    if {[catch {
	cd $globname
	file link -symbolic link a1
	cd $dir
	set ret [list [catch {
	    lsort [glob -directory $globname -type l *]
	} msg] $msg]
    }]} {
	cd $dir
    }
    file delete [file join $globname link]
    set ret
} [list 0 [list [file join $globname link]]]
test filename-11.17.5 {Tcl_GlobCmd} {
    list [catch {lsort [glob -directory $globname -tails *.c]} msg] $msg
} [list 0 [lsort [list "weird name.c" x,z1.c x1.c y1.c z1.c]]]
test filename-11.17.6 {Tcl_GlobCmd} {
    list [catch {lsort [glob -directory $globname -tails *.c *.c]} msg] $msg
} [list 0 [lsort [concat [list "weird name.c" x,z1.c x1.c y1.c z1.c] \
  [list "weird name.c" x,z1.c x1.c y1.c z1.c]]]]
test filename-11.18 {Tcl_GlobCmd} {unixOnly} {
    list [catch {lsort [glob -path $globname/ *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.18.1 {Tcl_GlobCmd} {pcOnly macOnly} {
a1137 10
        [file join $globname .1]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.19 {Tcl_GlobCmd} {unixOnly} {
    list [catch {lsort [glob -join -path \
	    [string range $globname 0 5] * *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
d1143 1
a1143 1
test filename-11.19.1 {Tcl_GlobCmd} {pcOnly macOnly} {
a1146 1
        [file join $globname .1]\
a1160 5
# Get rid of file/dir if it exists, since it will have
# been left behind by a previous failed run.
if {[file exists $horribleglobname]} {
    file delete -force $horribleglobname
}
d1164 1
a1164 9
test filename-11.22 {Tcl_GlobCmd} {unixOnly} {
    list [catch {lsort [glob -dir $globname *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.22.1 {Tcl_GlobCmd} {pcOnly macOnly} {
a1166 1
        [file join $globname .1]\
d1172 1
a1172 1
test filename-11.23 {Tcl_GlobCmd} {unixOnly} {
d1180 1
a1180 19
test filename-11.23.1 {Tcl_GlobCmd} {pcOnly macOnly} {
    list [catch {lsort [glob -path $globname/ *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
        [file join $globname .1]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.24 {Tcl_GlobCmd} {unixOnly} {
    list [catch {lsort [glob -join -path \
	    [string range $globname 0 5] * *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1] [file join $globname a2]\
	[file join $globname a3]\
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-11.24.1 {Tcl_GlobCmd} {pcOnly macOnly} {
a1183 1
        [file join $globname .1]\
a1193 10
test filename-11.25.1 {Tcl_GlobCmd} {
    list [catch {lsort [glob -type {d r} -dir $globname *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1]\
  [file join $globname a2]\
  [file join $globname a3]]]]
test filename-11.25.2 {Tcl_GlobCmd} {
    list [catch {lsort [glob -type {d r w} -dir $globname *]} msg] $msg
} [list 0 [lsort [list [file join $globname a1]\
  [file join $globname a2]\
  [file join $globname a3]]]]
d1224 1
a1224 59
} {1 {bad option "-paths": must be -directory, -join, -nocomplain, -path, -tails, -types, or --}}
# Test '-tails' flag to glob.
test filename-11.36 {Tcl_GlobCmd} {
    list [catch {glob -tails *} msg] $msg
} {1 {"-tails" must be used with either "-directory" or "-path"}}
test filename-11.37 {Tcl_GlobCmd} {
    list [catch {glob -type d -tails -path $globname *} msg] $msg
} [list 0 [list $globname]]
test filename-11.38 {Tcl_GlobCmd} {
    list [catch {glob -tails -path $globname *} msg] $msg
} [list 0 [list $globname]]
test filename-11.39 {Tcl_GlobCmd} {
    list [catch {glob -tails -join -path $globname *} msg] $msg
} [list 0 [list $globname]]
test filename-11.40 {Tcl_GlobCmd} {
    expr {[glob -dir [pwd] -tails *] == [glob *]}
} {1}
test filename-11.41 {Tcl_GlobCmd} {
    expr {[glob -dir [pwd] -tails *] != [glob -dir [pwd] *]}
} {1}
test filename-11.42 {Tcl_GlobCmd} {
    set res [list]
    foreach f [glob -dir [pwd] *] {
	lappend res [file tail $f]
    }
    expr {$res == [glob *]}
} {1}
test filename-11.43 {Tcl_GlobCmd} {
    list [catch {glob -t *} msg] $msg
} {1 {ambiguous option "-t": must be -directory, -join, -nocomplain, -path, -tails, -types, or --}}
test filename-11.44 {Tcl_GlobCmd} {
    list [catch {glob -tails -path hello -directory hello *} msg] $msg
} {1 {"-directory" cannot be used with "-path"}}
test filename-11.45 {Tcl_GlobCmd on root volume} {
    set res1 ""
    set res2 ""
    catch {
	set res1 [glob -dir [lindex [file volumes] 0] -tails *]
    }
    catch {
	set tmpd [pwd]
	cd [lindex [file volumes] 0]
	set res2 [glob *]
	cd $tmpd
    }
    expr {$res1 == $res2}
} {1}
test filename-11.46 {Tcl_GlobCmd} {
    list [catch {glob -types abcde -dir foo *} msg] $msg
} {1 {bad argument to "-types": abcde}}
test filename-11.47 {Tcl_GlobCmd} {
    list [catch {glob -types abcde -path foo *} msg] $msg
} {1 {bad argument to "-types": abcde}}
test filename-11.48 {Tcl_GlobCmd} {
    list [catch {glob -types abcde -dir foo -join * *} msg] $msg
} {1 {bad argument to "-types": abcde}}
test filename-11.49 {Tcl_GlobCmd} {
    list [catch {glob -types abcde -path foo -join * *} msg] $msg
} {1 {bad argument to "-types": abcde}}
a1232 18
test filename-12.1.1 {simple globbing} {unixOrPc} {
    list [catch {glob -types f {}} msg] $msg
} {1 {no files matched glob pattern ""}}
test filename-12.1.2 {simple globbing} {unixOrPc} {
    list [catch {glob -types d {}} msg] $msg
} {0 .}
test filename-12.1.3 {simple globbing} {unixOnly} {
    list [catch {glob -types hidden {}} msg] $msg
} {0 .}
test filename-12.1.4 {simple globbing} {pcOnly} {
    list [catch {glob -types hidden {}} msg] $msg
} {1 {no files matched glob pattern ""}}
test filename-12.1.5 {simple globbing} {pcOnly} {
    list [catch {glob -types hidden c:/} msg] $msg
} {1 {no files matched glob pattern "c:/"}}
test filename-12.1.6 {simple globbing} {pcOnly} {
    list [catch {glob c:/} msg] $msg
} {0 c:/}
a1235 9
test filename-12.2.1 {simple globbing} {macOnly} {
    list [catch {glob -types f {}} msg] $msg
} {1 {no files matched glob pattern ""}}
test filename-12.2.2 {simple globbing} {macOnly} {
    list [catch {glob -types d {}} msg] $msg
} {0 :}
test filename-12.2.3 {simple globbing} {macOnly} {
    list [catch {glob -types hidden {}} msg] $msg
} {1 {no files matched glob pattern ""}}
d1241 1
a1241 1
    set globPreResult :globTest:
d1243 1
a1243 1
    set globPreResult globTest/
a1335 7

# The current directory could be anywhere; do this to stop spurious matches
file mkdir globTestContext
file rename globTest [file join globTestContext globTest]
set savepwd [pwd]
cd globTestContext

d1342 1
a1342 7

# Reset to where we were
cd $savepwd
file rename [file join globTestContext globTest] globTest
file delete globTestContext

test filename-14.7 {asterisks, question marks, and brackets} {unixOnly} {
a1344 3
test filename-14.7.1 {asterisks, question marks, and brackets} {pcOnly} {
    lsort [glob globTest/*]
} {globTest/.1 globTest/a1 globTest/a2 globTest/a3 {globTest/weird name.c} globTest/x,z1.c globTest/x1.c globTest/y1.c globTest/z1.c}
d1401 1
a1401 8
test filename-14.25 {type specific globbing} {unixOnly} {
    list [catch {lsort [glob -dir globTest -types f *]} msg] $msg
} [list 0 [lsort [list \
	[file join $globname "weird name.c"]\
	[file join $globname x,z1.c]\
	[file join $globname x1.c]\
	[file join $globname y1.c] [file join $globname z1.c]]]]
test filename-14.25.1 {type specific globbing} {pcOnly macOnly} {
a1403 1
        [file join $globname .1]\
d1418 1
a1418 1
catch {file attributes globTest/a1 -permissions 0000}
d1426 1
a1426 1
	{unixOnly nonPortable} {
d1432 1
a1432 1
catch {file attributes globTest/a1 -permissions 0755}
d1434 1
a1434 1
	{unixOnly nonPortable} {
a1439 6
test filename-15.4.1 {no complain: no errors, good result} {
    # test used to fail because if an error occurs, the interp's result
    # is reset... 
    string equal [glob -nocomplain ~wontexist ~blah ~] \
      [glob -nocomplain ~ ~blah ~wontexist]
} {1}
d1451 3
a1453 2
} [list 0 [list [lindex [glob ~] 0]/globTest/odd\\\[\]*?\{\}name]]
catch {file delete -force globTest/odd\\\[\]*?\{\}name}
d1456 3
a1458 2
set oldDir [pwd]
if {$::tcltest::testConstraints(pcOnly)} {
d1460 2
a1461 2
    file delete -force globTest
    file mkdir globTest
d1480 1
a1480 1
    glob c:*bTest
d1483 1
a1483 1
    glob c:\\\\*bTest
d1486 1
a1486 1
    glob c:/*bTest
d1511 5
d1520 5
a1526 11
test filename-16.14 {windows specific globbing} {pcOnly} {
    cd [lindex [glob -types d -dir C:/ *] 0]
    expr {[lsearch -exact [glob {{.,*}*}] ".."] != -1}
} {1}
test filename-16.15 {windows specific globbing} {pcOnly} {
    cd [lindex [glob -types d -dir C:/ *] 0]
    glob ..
} {..}
test filename-16.16 {windows specific globbing} {pcOnly} {
    file tail [lindex [glob "[lindex [glob -types d -dir C:/ *] 0]/.."] 0]
} {..}
d1529 2
a1530 1
catch {file delete -force C:/globTest}
a1531 1
cd $oldpwd
d1533 2
a1534 5
if {[tcltest::testConstraint testsetplatform]} {
    testsetplatform $platform
    catch {unset platform}
}
catch {unset oldhome temp result}
d1537 13
@


