head	1.13;
access;
symbols
	sid-snapshot-20180601:1.13
	sid-snapshot-20180501:1.13
	sid-snapshot-20180401:1.13
	sid-snapshot-20180301:1.13
	sid-snapshot-20180201:1.13
	sid-snapshot-20180101:1.13
	sid-snapshot-20171201:1.13
	sid-snapshot-20171101:1.13
	sid-snapshot-20171001:1.13
	sid-snapshot-20170901:1.13
	sid-snapshot-20170801:1.13
	sid-snapshot-20170701:1.13
	sid-snapshot-20170601:1.13
	sid-snapshot-20170501:1.13
	sid-snapshot-20170401:1.13
	sid-snapshot-20170301:1.13
	sid-snapshot-20170201:1.13
	sid-snapshot-20170101:1.13
	sid-snapshot-20161201:1.13
	sid-snapshot-20161101:1.13
	sid-snapshot-20160901:1.13
	sid-snapshot-20160801:1.13
	sid-snapshot-20160701:1.13
	sid-snapshot-20160601:1.13
	sid-snapshot-20160501:1.13
	sid-snapshot-20160401:1.13
	sid-snapshot-20160301:1.13
	sid-snapshot-20160201:1.13
	sid-snapshot-20160101:1.13
	sid-snapshot-20151201:1.13
	sid-snapshot-20151101:1.13
	sid-snapshot-20151001:1.13
	sid-snapshot-20150901:1.13
	sid-snapshot-20150801:1.13
	sid-snapshot-20150701:1.13
	sid-snapshot-20150601:1.13
	sid-snapshot-20150501:1.13
	sid-snapshot-20150401:1.13
	sid-snapshot-20150301:1.13
	sid-snapshot-20150201:1.13
	sid-snapshot-20150101:1.13
	sid-snapshot-20141201:1.13
	sid-snapshot-20141101:1.13
	sid-snapshot-20141001:1.13
	sid-snapshot-20140901:1.13
	sid-snapshot-20140801:1.13
	sid-snapshot-20140701:1.13
	sid-snapshot-20140601:1.13
	sid-snapshot-20140501:1.13
	sid-snapshot-20140401:1.13
	sid-snapshot-20140301:1.13
	sid-snapshot-20140201:1.13
	sid-snapshot-20140101:1.13
	sid-snapshot-20131201:1.13
	sid-snapshot-20131101:1.13
	sid-snapshot-20131001:1.13
	sid-snapshot-20130901:1.13
	sid-snapshot-20130801:1.13
	sid-snapshot-20130701:1.13
	sid-snapshot-20130601:1.13
	insight_7_6-2013-04-10-branchpoint:1.13
	gdb_7_6-branch:1.13.0.18
	sid-snapshot-20130501:1.13
	sid-snapshot-20130401:1.13
	sid-snapshot-20130301:1.13
	sid-snapshot-20130201:1.13
	sid-snapshot-20130101:1.13
	sid-snapshot-20121201:1.13
	sid-snapshot-20121101:1.13
	sid-snapshot-20121001:1.13
	sid-snapshot-20120901:1.13
	gdb_7_5-branch:1.13.0.16
	sid-snapshot-20120801:1.13
	sid-snapshot-20120701:1.13
	sid-snapshot-20120601:1.13
	sid-snapshot-20120501:1.13
	sid-snapshot-20120401:1.13
	gdb_7_4-branch:1.13.0.14
	sid-snapshot-20120301:1.13
	sid-snapshot-20120201:1.13
	sid-snapshot-20120101:1.13
	sid-snapshot-20111201:1.13
	sid-snapshot-20111101:1.13
	sid-snapshot-20111001:1.13
	sid-snapshot-20110901:1.13
	gdb_7_3-branch:1.13.0.12
	sid-snapshot-20110801:1.13
	sid-snapshot-20110701:1.13
	sid-snapshot-20110601:1.13
	sid-snapshot-20110501:1.13
	sid-snapshot-20110401:1.13
	sid-snapshot-20110301:1.13
	sid-snapshot-20110201:1.13
	sid-snapshot-20110101:1.13
	sid-snapshot-20101201:1.13
	sid-snapshot-20101101:1.13
	sid-snapshot-20101001:1.13
	sid-snapshot-20100901:1.13
	sid-snapshot-20100801:1.13
	sid-snapshot-20100701:1.13
	sid-snapshot-20100601:1.13
	sid-snapshot-20100501:1.13
	sid-snapshot-20100401:1.13
	sid-snapshot-20100301:1.13
	gdb_7_1-branch:1.13.0.10
	gdb_7_0-branch:1.13.0.8
	sid-snapshot-20100201:1.13
	sid-snapshot-20100101:1.13
	sid-snapshot-20091201:1.13
	sid-snapshot-20091101:1.13
	sid-snapshot-20091001:1.13
	arc-sim-20090309:1.13
	sid-snapshot-20090901:1.13
	sid-snapshot-20090801:1.13
	sid-snapshot-20090701:1.13
	sid-snapshot-20090601:1.13
	sid-snapshot-20090501:1.13
	kevinb-pre-tcl8_5_7_merge:1.13
	sid-snapshot-20090401:1.13
	arc-insight_6_8-branch:1.13.0.6
	arc-insight_6_8-branchpoint:1.13
	insight_6_8-branch:1.13.0.4
	insight_6_8-branchpoint:1.13
	sid-snapshot-20090301:1.13
	sid-snapshot-20090201:1.13
	sid-snapshot-20090101:1.13
	sid-snapshot-20081201:1.13
	sid-snapshot-20081101:1.13
	sid-snapshot-20081001:1.13
	sid-snapshot-20080901:1.13
	sid-snapshot-20080801:1.13
	sid-snapshot-20080701:1.13
	sid-snapshot-20080601:1.13
	sid-snapshot-20080501:1.13
	sid-snapshot-20080403:1.13
	sid-snapshot-20080401:1.13
	gdb_6_8-branch:1.13.0.2
	sid-snapshot-20080301:1.13
	sid-snapshot-20080201:1.13
	sid-snapshot-20080101:1.13
	sid-snapshot-20071201:1.13
	sid-snapshot-20071101:1.13
	sid-snapshot-20071001:1.13
	insight_6_6-20070208-release:1.12.2.1
	gdb_6_6-branch:1.12.0.2
	gdb_6_6-2006-11-15-branchpoint:1.12
	insight_6_5-20061003-release:1.11
	gdb_6_5-branch:1.11.0.4
	gdb_6_5-2006-05-14-branchpoint:1.11
	readline_5_1-import-branch:1.11.0.2
	readline_5_1-import-branchpoint:1.11
	gdb_6_4-branch:1.10.0.34
	gdb_6_4-2005-11-01-branchpoint:1.10
	msnyder-tracepoint-checkpoint-branch:1.10.0.32
	msnyder-tracepoint-checkpoint-branchpoint:1.10
	gdb_6_1-2004-04-05-release:1.10
	ezannoni_pie-20040323-branch:1.10.0.30
	ezannoni_pie-20040323-branchpoint:1.10
	cagney_tramp-20040321-mergepoint:1.10
	cagney_tramp-20040309-branch:1.10.0.28
	cagney_tramp-20040309-branchpoint:1.10
	gdb_6_1-branch:1.10.0.26
	gdb_6_1-2004-03-01-gmt-branchpoint:1.10
	drow-cplus-merge-20040208:1.10
	carlton_dictionary-20040126-merge:1.10
	drow-cplus-merge-20040113:1.10
	drow-cplus-merge-20031224:1.10
	drow-cplus-merge-20031220:1.10
	carlton_dictionary-20031215-merge:1.10
	drow-cplus-merge-20031214:1.10
	carlton-dictionary-20031111-merge:1.10
	gdb_6_0-2003-10-04-release:1.10
	carlton_dictionary-20030917-merge:1.10
	ezannoni_pie-20030916-branchpoint:1.10
	ezannoni_pie-20030916-branch:1.10.0.24
	cagney_x86i386-20030821-branch:1.10.0.22
	cagney_x86i386-20030821-branchpoint:1.10
	carlton_dictionary-20030805-merge:1.10
	carlton_dictionary-20030627-merge:1.10
	gdb_6_0-branch:1.10.0.20
	gdb_6_0-2003-06-23-branchpoint:1.10
	cagney_convert-20030606-branch:1.10.0.18
	cagney_convert-20030606-branchpoint:1.10
	cagney_writestrings-20030508-branch:1.10.0.16
	cagney_writestrings-20030508-branchpoint:1.10
	carlton_dictionary-20030523-merge:1.10
	cagney_fileio-20030521-branch:1.10.0.14
	cagney_fileio-20030521-branchpoint:1.10
	carlton_dictionary-20030430-merge:1.10
	carlton_dictionary-20030416-merge:1.10
	cagney_frameaddr-20030409-mergepoint:1.10
	cagney_frameaddr-20030403-branchpoint:1.10
	cagney_frameaddr-20030403-branch:1.10.0.12
	cagney_framebase-20030330-mergepoint:1.10
	cagney_framebase-20030326-branch:1.10.0.10
	cagney_framebase-20030326-branchpoint:1.10
	cagney_lazyid-20030317-branch:1.10.0.8
	cagney_lazyid-20030317-branchpoint:1.10
	offbyone-20030313-branch:1.10.0.6
	offbyone-20030313-branchpoint:1.10
	carlton_dictionary-20030305-merge:1.10
	cagney_offbyone-20030303-branch:1.10.0.4
	cagney_offbyone-20030303-branchpoint:1.10
	carlton_dictionary-20030207-merge:1.10
	interps-20030202-branch:1.10.0.2
	interps-20030202-branchpoint:1.10
	cagney-unwind-20030108-branch:1.9.0.2
	cagney-unwind-20030108-branchpoint:1.9
	carlton_dictionary-20021223-merge:1.9
	gdb_5_3-2002-12-12-release:1.6
	carlton_dictionary-20021115-merge:1.7
	kseitz_interps-20021105-merge:1.7
	kseitz_interps-20021103-merge:1.7
	drow-cplus-merge-20021020:1.7
	drow-cplus-merge-20021025:1.7
	carlton_dictionary-20021025-merge:1.7
	carlton_dictionary-20021011-merge:1.7
	drow-cplus-branch:1.7.0.4
	drow-cplus-branchpoint:1.7
	kseitz_interps-20020930-merge:1.7
	carlton_dictionary-20020927-merge:1.7
	tcltk840-20020924-branch:1.7.0.2
	tcltk840-20020924-branchpoint:1.7
	carlton_dictionary-branch:1.6.0.10
	carlton_dictionary-20020920-branchpoint:1.6
	sid-20020905-branchpoint:1.6
	sid-20020905-branch:1.6.0.8
	gdb_5_3-branch:1.6.0.6
	gdb_5_3-2002-09-04-branchpoint:1.6
	kseitz_interps-20020829-merge:1.6
	cagney_sysregs-20020825-branch:1.6.0.4
	cagney_sysregs-20020825-branchpoint:1.6
	readline_4_3-import-branch:1.6.0.2
	readline_4_3-import-branchpoint:1.6
	gdb_5_2_1-2002-07-23-release:1.5
	kseitz_interps-20020528-branch:1.5.0.6
	kseitz_interps-20020528-branchpoint:1.5
	cagney_regbuf-20020515-branch:1.5.0.4
	cagney_regbuf-20020515-branchpoint:1.5
	gdb_5_2-2002-04-29-release:1.5
	gdb_5_2-branch:1.5.0.2
	gdb_5_2-2002-03-03-branchpoint:1.5
	gdb_5_1_1-2002-01-24-release:1.2
	cygnus_cvs_20020108_pre:1.5
	gdb_5_1_0_1-2002-01-03-branch:1.2.0.6
	gdb_5_1_0_1-2002-01-03-branchpoint:1.2
	gdb_5_1-2001-11-21-release:1.2
	gdb_s390-2001-09-26-branch:1.2.0.4
	gdb_s390-2001-09-26-branchpoint:1.2
	gdb_5_1-2001-07-29-branch:1.2.0.2
	gdb_5_1-2001-07-29-branchpoint:1.2
	insight-precleanup-2001-01-01:1.1.1.3
	gdb_5_0-2000-05-19-release:1.1.1.3
	gdb_4_18_2-2000-05-18-release:1.1.1.3
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.3
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.3
	gdb_5_0-2000-04-10-branch:1.1.1.3.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.3
	repo-unification-2000-02-06:1.1.1.3
	dejagnu-2000-02-04:1.1.1.3
	dejagnu-2000-01-31:1.1.1.3
	dejagnu-2000-01-24:1.1.1.3
	dejagnu-2000-01-17:1.1.1.3
	dejagnu-2000-01-10:1.1.1.2
	dejagnu-2000-01-04:1.1.1.2
	dejagnu-1999-12-21:1.1.1.2
	dejagnu-1999-12-13:1.1.1.2
	dejagnu-1999-12-07:1.1.1.2
	dejagnu-1999-12-06:1.1.1.2
	dejagnu-1999-11-15:1.1.1.2
	dejagnu-1999-11-08:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.13
date	2006.12.01.03.41.02;	author cgf;	state Exp;
branches;
next	1.12;

1.12
date	2006.07.13.15.46.46;	author sje;	state Exp;
branches
	1.12.2.1;
next	1.11;

1.11
date	2006.02.06.16.04.32;	author cgf;	state Exp;
branches;
next	1.10;

1.10
date	2003.01.21.19.39.57;	author hunt;	state Exp;
branches;
next	1.9;

1.9
date	2002.12.19.06.23.55;	author cgf;	state Exp;
branches;
next	1.8;

1.8
date	2002.11.26.19.47.49;	author hunt;	state Exp;
branches;
next	1.7;

1.7
date	2002.09.24.18.37.01;	author kseitz;	state Exp;
branches
	1.7.4.1;
next	1.6;

1.6
date	2002.07.30.20.23.28;	author kseitz;	state Exp;
branches
	1.6.10.1;
next	1.5;

1.5
date	2001.10.28.23.31.03;	author cgf;	state Exp;
branches
	1.5.6.1;
next	1.4;

1.4
date	2001.09.13.00.38.49;	author irox;	state Exp;
branches;
next	1.3;

1.3
date	2001.09.09.23.56.03;	author irox;	state Exp;
branches;
next	1.2;

1.2
date	2001.04.10.20.08.26;	author cgf;	state Exp;
branches;
next	1.1;

1.1
date	99.11.09.01.28.43;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.12.2.1
date	2007.02.09.03.55.41;	author kseitz;	state Exp;
branches;
next	;

1.7.4.1
date	2003.12.14.20.28.40;	author drow;	state Exp;
branches;
next	;

1.6.10.1
date	2002.12.23.19.40.02;	author carlton;	state Exp;
branches;
next	1.6.10.2;

1.6.10.2
date	2003.02.07.19.18.08;	author carlton;	state Exp;
branches;
next	;

1.5.6.1
date	2002.08.09.18.34.39;	author kseitz;	state Exp;
branches;
next	;

1.1.1.1
date	99.11.09.01.28.43;	author jsm;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.11.17.02.20.45;	author jsm;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2000.01.18.00.05.13;	author jsm;	state Exp;
branches;
next	;


desc
@@


1.13
log
@* cygwin/configure.in (LIB_AC_PROG_CC): Upgrade macro to accommodate newer
version of autoconf.
* cygwin/configure: Regenerate.
* win/tcl.m4: Upgrade to avoid use of absolete ac_cv_cygwin variable.
* win/configure: Regenerate.
@
text
@dnl Process this file with autoconf to produce a configure script.

AC_PREREQ(2.13)

AC_INIT(Makefile.in)
AC_CANONICAL_SYSTEM
AM_INIT_AUTOMAKE(libtcl_cygwin, 8.4)
AM_MAINTAINER_MODE
AC_EXEEXT

# FIXME: We temporarily define our own version of AC_PROG_CC.  This is
# copied from autoconf 2.12, but does not call AC_PROG_CC_WORKS.  We
# are probably using a cross compiler, which will not be able to fully
# link an executable.  This should really be fixed in autoconf
# itself.

AC_DEFUN([LIB_AC_PROG_CC],
[AC_BEFORE([$0], [AC_PROG_CPP])dnl
AC_CHECK_TOOL(CC, gcc, gcc)
: ${CC:=gcc}
AC_PROG_CC
test -z "$CC" && AC_MSG_ERROR([no acceptable cc found in \$PATH])
])

AC_DEFUN([LIB_AC_PROG_CXX],
[AC_BEFORE([$0], [AC_PROG_CPP])dnl
AC_CHECK_TOOL(CXX, g++, g++)
if test -z "$CXX"; then
  AC_CHECK_TOOL(CXX, g++, c++, , , )
  : ${CXX:=g++}
  AC_PROG_CXX
  test -z "$CC" && AC_MSG_ERROR([no acceptable cc found in \$PATH])
fi

CXXFLAGS='$(CFLAGS)'
])

LIB_AC_PROG_CC

case "${host}" in
*-*-cygwin*)
	touch ac$$.c
	if ${CC} -c -mno-win32 ac$$.c >/dev/null 2>&1; then
	    case "$EXTRA_CFLAGS" in
		*-mno-win32*) ;;
		*) EXTRA_CFLAGS="-mno-win32 $EXTRA_CFLAGS" ;;
	    esac
	fi
	rm -f ac$$.o ac$$.c
	;;
esac

AC_CHECK_TOOL(AR, ar, ar)
AC_SUBST(AR)
AC_SUBST(EXTRA_CFLAGS)
AC_PROG_RANLIB
AC_PROG_INSTALL

#--------------------------------------------------------------------
#	The statements below define the symbol TCL_PACKAGE_PATH, which
#	gives a list of directories that may contain packages.  The list
#	consists of one directory for machine-dependent binaries and
#	another for platform-independent scripts.
#--------------------------------------------------------------------

if test "$prefix" != "$exec_prefix"; then
    TCL_PACKAGE_PATH="${exec_prefix}/lib ${prefix}/lib"
else
    TCL_PACKAGE_PATH="${prefix}/lib"
fi

TCL_LIBRARY=@@datadir@@/tcl${VERSION}

cross_cache=${srcdir}/cygwin-cache
. ${cross_cache}

AC_SUBST(TCL_PACKAGE_PATH)
AC_SUBST(TCL_LIBRARY)

# These variables are needed to get expect working with
# the tclConfig.sh script in the cygwin directory.
LD_FLAGS=""
AC_SUBST(LD_FLAGS)
TCL_LD_SEARCH_FLAGS=""
AC_SUBST(TCL_LD_SEARCH_FLAGS)
DL_LIBS=""
AC_SUBST(DL_LIBS)
MATH_LIBS=""
AC_SUBST(MATH_LIBS)
SHLIB_LD='${CC} -shared ${CFLAGS}'
AC_SUBST(SHLIB_LD)
TCL_BUILD_LIB_SPEC=`pwd`/libtcl_cygwin.a
AC_SUBST(TCL_BUILD_LIB_SPEC)
TCL_LIB_SPEC="$TCL_BUILD_LIB_SPEC"
AC_SUBST(TCL_LIB_SPEC)


AC_OUTPUT([Makefile tclConfig.sh])
@


1.12
log
@	* configure.in: Fix for autoconf 2.5.
	* cygwin/configure.in: Fix for autoconf 2.5.
	* win/configure.in: Fix for autoconf 2.5.
	* unix/configure.in: Fix for autoconf 2.5.
	* unix/tcl.m4: Fix for autoconf 2.5.
	* configure: Regenerate.
	* cygwin/configure: Regenerate.
	* tools/configure: Regenerate.
	* unix/configure: Regenerate.
	* unix/dltest/configure: Regenerate.
	* win/configure: Regenerate.
@
text
@d17 1
a17 1
AC_DEFUN(LIB_AC_PROG_CC,
d19 13
a31 3
AC_CHECK_PROG(CC, gcc, gcc)
if test -z "$CC"; then
  AC_CHECK_PROG(CC, cc, cc, , , /usr/ucb/cc)
d35 1
a35 19
if test $ac_cv_prog_gcc = yes; then
  GCC=yes
dnl Check whether -g works, even if CFLAGS is set, in case the package
dnl plays around with CFLAGS (such as to build both debugging and
dnl normal versions of a library), tasteless as that idea is.
  ac_test_CFLAGS="${CFLAGS+set}"
  ac_save_CFLAGS="$CFLAGS"
  CFLAGS=
  if test "$ac_test_CFLAGS" = set; then
    CFLAGS="$ac_save_CFLAGS"
  elif test $ac_cv_prog_cc_g = yes; then
    CFLAGS="-g -O2"
  else
    CFLAGS="-O2"
  fi
else
  GCC=
  test "${CFLAGS+set}" = set || CFLAGS="-g"
fi
@


1.12.2.1
log
@update to HEAD
@
text
@d17 1
a17 1
AC_DEFUN([LIB_AC_PROG_CC],
d19 3
a21 13
AC_CHECK_TOOL(CC, gcc, gcc)
: ${CC:=gcc}
AC_PROG_CC
test -z "$CC" && AC_MSG_ERROR([no acceptable cc found in \$PATH])
])

AC_DEFUN([LIB_AC_PROG_CXX],
[AC_BEFORE([$0], [AC_PROG_CPP])dnl
AC_CHECK_TOOL(CXX, g++, g++)
if test -z "$CXX"; then
  AC_CHECK_TOOL(CXX, g++, c++, , , )
  : ${CXX:=g++}
  AC_PROG_CXX
d25 19
a43 1
CXXFLAGS='$(CFLAGS)'
@


1.11
log
@check in missing files.
@
text
@a24 2
AC_PROG_CC_GNU

a32 1
  AC_PROG_CC_G
@


1.10
log
@Updated to tcl 8.4.1
@
text
@d105 2
@


1.9
log
@* cygwin/configure.in: Set TCL_BUILD_LIB_SPEC.
* cygwin/configure: Regenerate.
@
text
@d7 1
a7 1
AM_INIT_AUTOMAKE(libtcl_cygwin, 8.3)
@


1.8
log
@touched all sources to ease next import
@
text
@d103 2
a107 1

@


1.7
log
@touched all sources to ease next import
@
text
@@


1.7.4.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@d7 1
a7 1
AM_INIT_AUTOMAKE(libtcl_cygwin, 8.4)
a102 2
TCL_BUILD_LIB_SPEC=`pwd`/libtcl_cygwin.a
AC_SUBST(TCL_BUILD_LIB_SPEC)
d106 1
@


1.6
log
@        From Mo DeJong  <supermo@@bayarea.net>
        * cygwin/configure: Regenerated.
        * cygwin/configure.in: Emit a tclConfig.sh file
        so that expect can load it at configure time.
        * win/configure: Regenerated.
        * win/configure.in: Don't emit a ../unix/tclConfig.sh
        file, this was a hack to get expect to build.
@
text
@@


1.6.10.1
log
@2002-12-23  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021223-merge.
@
text
@a102 2
TCL_BUILD_LIB_SPEC=`pwd`/libtcl_cygwin.a
AC_SUBST(TCL_BUILD_LIB_SPEC)
d106 1
@


1.6.10.2
log
@2003-02-07  David Carlton  <carlton@@math.stanford.edu>

	* Merge with mainline; tag is carlton_dictionary-20030207-merge.
@
text
@d7 1
a7 1
AM_INIT_AUTOMAKE(libtcl_cygwin, 8.4)
@


1.5
log
@* cygwin/configure.in: Check for cygwin host rather than cygwin target.
* cygwin/configure: Regenerate.
@
text
@d91 16
a106 1
AC_OUTPUT([Makefile])
@


1.5.6.1
log
@Merge with kseitz_interps-20020809-merge of CVS head.
@
text
@d91 1
a91 16
# These variables are needed to get expect working with
# the tclConfig.sh script in the cygwin directory.
LD_FLAGS=""
AC_SUBST(LD_FLAGS)
TCL_LD_SEARCH_FLAGS=""
AC_SUBST(TCL_LD_SEARCH_FLAGS)
DL_LIBS=""
AC_SUBST(DL_LIBS)
MATH_LIBS=""
AC_SUBST(MATH_LIBS)
SHLIB_LD='${CC} -shared ${CFLAGS}'
AC_SUBST(SHLIB_LD)


AC_OUTPUT([Makefile tclConfig.sh])

@


1.4
log
@
	* Makefile.in: Add 'cygwin' subdirectory to 'make all'
	target.
	* configure.in: Configure 'cygwin' and 'win' directory
	for a cygwin host.
	* configure: Regenerated.
	* cygwin/configure.in: Change version number to 8.3.
	* cygwin/configure: Regenerated.
	* cygwin/Makefile.am: Added/removed files to be build
	for Tcl8.3.
	* cygwin/Makefile.in: Regenerated.
	* generic/tcl.h: Don't define __WIN32__ for cygwin or
	mwing32 builds.  Don't define USE_TCLALLOC when building
	for cygwin.  Don't use __declspec unless building Tcl or
	tk or build with USE_TCL_STUBS.
	* generic/tclAlloc.c: For cygwin hosts, don't using
	anything in this file unless build with __TCL_UNIX_VARIANT.
	* generic/tclClock.c: Declare 'timezone' as an int, if it
	hasn't been #defined.
	* generic/tclStubInit.c: Don't export any tclAlloc function
	when build for a cygwin host.
	* win/configure.in: Set DL_LIBS and MATH_LIBS.  Create
	unix/tclConfig.sh.
	* win/configure: Regenerated.
	* win/tclWinPort.h: Added missing #endif.
	* win/tclWinFile.c (TclpChdir): Don't invert change
	directory results on cygwin.
@
text
@d51 1
a51 1
case "${target}" in
@


1.3
log
@touched all Tcl files to ease next import.
@
text
@d7 1
a7 1
AM_INIT_AUTOMAKE(libtcl_cygwin, 8.0)
@


1.2
log
@Fixes for newer cygwin gccs.
Use modern Cygwin conditional.
@
text
@@


1.1
log
@Initial revision
@
text
@d1 1
a1 3
dnl	This file is an input file used by the GNU "autoconf" program to
dnl	generate the file "configure", which is run during Tcl installation
dnl	to configure the system for the local environment.
d3 1
a3 3
# CYGNUS LOCAL, need 2.5 or higher for --bindir et al
AC_PREREQ(2.5)
# END CYGNUS LOCAL
d5 38
a42 175
AC_INIT(../generic/tcl.h)
# SCCS: @@(#) configure.in 1.18 98/08/12 17:29:39

TCL_VERSION=8.0
TCL_MAJOR_VERSION=8
TCL_MINOR_VERSION=0
TCL_PATCH_LEVEL=".3"
VERSION=${TCL_VERSION}

if test "${prefix}" = "NONE"; then
    prefix=/usr/local
fi
if test "${exec_prefix}" = "NONE"; then
    exec_prefix=$prefix
fi
TCL_SRC_DIR=`cd $srcdir/..; pwd`

AC_PROG_RANLIB
dnl CYGNUS LOCAL: allow gcc without a special flag
dnl AC_ARG_ENABLE(gcc, [  --enable-gcc            allow use of gcc if available],
dnl    [tcl_ok=$enableval], [tcl_ok=no])
dnl if test "$tcl_ok" = "yes"; then
    AC_PROG_CC
dnl else
dnl    CC=${CC-cc}
dnl AC_SUBST(CC)
dnl fi
dnl END CYGNUS LOCAL

# CYGNUS LOCAL
# dje/win32
AR=${AR-ar}
# We need this for substitutions in Makefile.in.
AC_PROG_INSTALL
# END CYGNUS LOCAL

#--------------------------------------------------------------------
# CYGNUS LOCAL:
# This is for LynxOS, which needs a flag to force true POSIX when
# building. It's weirder than that, cause the flag varies depending
# how old the compiler is. So...
# -X is for the old "cc" and "gcc" (based on 1.42)
# -mposix is for the new gcc (at least 2.5.8)
# This modifies the value of $CC to have the POSIX flag added
# so everything will configure correctly.
#--------------------------------------------------------------------
CY_AC_TCL_LYNX_POSIX

# set the warning flags depending on whether or not we are using gcc
if test "${GCC}" = "yes" ; then
    CFLAGS_WARNING="-Wall -Wconversion"
else
    CFLAGS_WARNING=""
fi

#--------------------------------------------------------------------
#	Supply substitutes for missing POSIX library procedures, or
#	set flags so Tcl uses alternate procedures.
#--------------------------------------------------------------------

# Check if Posix compliant getcwd exists, if not we'll use getwd.
AC_CHECK_FUNCS(getcwd, , AC_DEFINE(USEGETWD))
# Nb: if getcwd uses popen and pwd(1) (like SunOS 4) we should really
# define USEGETWD even if the posix getcwd exists. Add a test ?

AC_REPLACE_FUNCS(opendir strstr)

AC_REPLACE_FUNCS(strtol tmpnam waitpid)
AC_CHECK_FUNC(strerror, , AC_DEFINE(NO_STRERROR))
AC_CHECK_FUNC(getwd, , AC_DEFINE(NO_GETWD))
AC_CHECK_FUNC(wait3, , AC_DEFINE(NO_WAIT3))
AC_CHECK_FUNC(uname, , AC_DEFINE(NO_UNAME))

#--------------------------------------------------------------------
#	On a few very rare systems, all of the libm.a stuff is
#	already in libc.a.  Set compiler flags accordingly.
#	Also, Linux requires the "ieee" library for math to work
#	right (and it must appear before "-lm").
#--------------------------------------------------------------------

AC_CHECK_FUNC(sin, MATH_LIBS="", MATH_LIBS="-lm")
AC_CHECK_LIB(ieee, main, [MATH_LIBS="-lieee $MATH_LIBS"])

#--------------------------------------------------------------------
#       On AIX systems, libbsd.a has to be linked in to support
#       non-blocking file IO.  This library has to be linked in after
#       the MATH_LIBS or it breaks the pow() function.  The way to
#       insure proper sequencing, is to add it to the tail of MATH_LIBS.
#        This library also supplies gettimeofday.
#--------------------------------------------------------------------
libbsd=no
if test "`uname -s`" = "AIX" ; then
    AC_CHECK_LIB(bsd, gettimeofday, libbsd=yes)
    if test $libbsd = yes; then
	MATH_LIBS="$MATH_LIBS -lbsd"
    fi
fi

#--------------------------------------------------------------------
#	Supply substitutes for missing POSIX header files.  Special
#	notes:
#	    - stdlib.h doesn't define strtol, strtoul, or
#	      strtod insome versions of SunOS
#	    - some versions of string.h don't declare procedures such
#	      as strstr
#--------------------------------------------------------------------

AC_MSG_CHECKING(dirent.h)
AC_TRY_LINK([#include <sys/types.h>
#include <dirent.h>], [
#ifndef _POSIX_SOURCE
#   ifdef __Lynx__
	/*
	 * Generate compilation error to make the test fail:  Lynx headers
	 * are only valid if really in the POSIX environment.
	 */

	missing_procedure();
#   endif
#endif
DIR *d;
struct dirent *entryPtr;
char *p;
d = opendir("foobar");
entryPtr = readdir(d);
p = entryPtr->d_name;
closedir(d);
], tcl_ok=yes, tcl_ok=no)
if test $tcl_ok = no; then
    AC_DEFINE(NO_DIRENT_H)
fi
AC_MSG_RESULT($tcl_ok)
AC_CHECK_HEADER(errno.h, , AC_DEFINE(NO_ERRNO_H))
AC_CHECK_HEADER(float.h, , AC_DEFINE(NO_FLOAT_H))
AC_CHECK_HEADER(values.h, , AC_DEFINE(NO_VALUES_H))
AC_CHECK_HEADER(limits.h, , AC_DEFINE(NO_LIMITS_H))
AC_CHECK_HEADER(stdlib.h, tcl_ok=1, tcl_ok=0)
AC_EGREP_HEADER(strtol, stdlib.h, , tcl_ok=0)
AC_EGREP_HEADER(strtoul, stdlib.h, , tcl_ok=0)
AC_EGREP_HEADER(strtod, stdlib.h, , tcl_ok=0)
if test $tcl_ok = 0; then
    AC_DEFINE(NO_STDLIB_H)
fi
AC_CHECK_HEADER(string.h, tcl_ok=1, tcl_ok=0)
AC_EGREP_HEADER(strstr, string.h, , tcl_ok=0)
AC_EGREP_HEADER(strerror, string.h, , tcl_ok=0)
if test $tcl_ok = 0; then
    AC_DEFINE(NO_STRING_H)
fi
AC_CHECK_HEADER(sys/wait.h, , AC_DEFINE(NO_SYS_WAIT_H))
AC_CHECK_HEADER(dlfcn.h, , AC_DEFINE(NO_DLFCN_H))
AC_HAVE_HEADERS(unistd.h)

#---------------------------------------------------------------------------
#	Determine which interface to use to talk to the serial port.
#	Note that #include lines must begin in leftmost column for
#	some compilers to recognize them as preprocessor directives.
#---------------------------------------------------------------------------

AC_MSG_CHECKING([termios vs. termio vs. sgtty])
AC_TRY_RUN([
#include <termios.h>

main()
{
    struct termios t;
    if (tcgetattr(0, &t) == 0) {
	cfsetospeed(&t, 0);
	t.c_cflag |= PARENB | PARODD | CSIZE | CSTOPB;
	return 0;
    }
    return 1;
}], tk_ok=termios, tk_ok=no, tk_ok=no)
if test $tk_ok = termios; then
    AC_DEFINE(USE_TERMIOS)
d44 2
a45 352
AC_TRY_RUN([
#include <termio.h>

main()
{
    struct termio t;
    if (ioctl(0, TCGETA, &t) == 0) {
	t.c_cflag |= CBAUD | PARENB | PARODD | CSIZE | CSTOPB;
	return 0;
    }
    return 1;
}], tk_ok=termio, tk_ok=no, tk_ok=no)
if test $tk_ok = termio; then
    AC_DEFINE(USE_TERMIO)
else
AC_TRY_RUN([
#include <sgtty.h>

main()
{
    struct sgttyb t;
    if (ioctl(0, TIOCGETP, &t) == 0) {
	t.sg_ospeed = 0;
	t.sg_flags |= ODDP | EVENP | RAW;
	return 0;
    }
    return 1;
}], tk_ok=sgtty, tk_ok=none, tk_ok=none)
if test $tk_ok = sgtty; then
    AC_DEFINE(USE_SGTTY)
fi
fi
fi
AC_MSG_RESULT($tk_ok)

#--------------------------------------------------------------------
#	Include sys/select.h if it exists and if it supplies things
#	that appear to be useful and aren't already in sys/types.h.
#	This appears to be true only on the RS/6000 under AIX.  Some
#	systems like OSF/1 have a sys/select.h that's of no use, and
#	other systems like SCO UNIX have a sys/select.h that's
#	pernicious.  If "fd_set" isn't defined anywhere then set a
#	special flag.
#--------------------------------------------------------------------

AC_MSG_CHECKING([fd_set and sys/select])
AC_TRY_COMPILE([#include <sys/types.h>],
	[fd_set readMask, writeMask;], tk_ok=yes, tk_ok=no)
if test $tk_ok = no; then
    AC_HEADER_EGREP(fd_mask, sys/select.h, tk_ok=yes)
    if test $tk_ok = yes; then
	AC_DEFINE(HAVE_SYS_SELECT_H)
    fi
fi
AC_MSG_RESULT($tk_ok)
if test $tk_ok = no; then
    AC_DEFINE(NO_FD_SET)
fi

#------------------------------------------------------------------------------
#       Find out all about time handling differences.
#------------------------------------------------------------------------------

AC_CHECK_HEADERS(sys/time.h)
AC_HEADER_TIME
AC_STRUCT_TIMEZONE

AC_MSG_CHECKING([tm_tzadj in struct tm])
AC_TRY_COMPILE([#include <time.h>], [struct tm tm; tm.tm_tzadj;],
        [AC_DEFINE(HAVE_TM_TZADJ)
         AC_MSG_RESULT(yes)],
         AC_MSG_RESULT(no))

AC_MSG_CHECKING([tm_gmtoff in struct tm])
AC_TRY_COMPILE([#include <time.h>], [struct tm tm; tm.tm_gmtoff;],
        [AC_DEFINE(HAVE_TM_GMTOFF)
         AC_MSG_RESULT(yes)],
         AC_MSG_RESULT(no))

#
# Its important to include time.h in this check, as some systems (like convex)
# have timezone functions, etc.
#
have_timezone=no
AC_MSG_CHECKING([long timezone variable])
AC_TRY_COMPILE([#include <time.h>],
        [extern long timezone;
         timezone += 1;
         exit (0);],
        [have_timezone=yes
	 AC_DEFINE(HAVE_TIMEZONE_VAR)
         AC_MSG_RESULT(yes)],
         AC_MSG_RESULT(no))

#
# On some systems (eg IRIX 6.2), timezone is a time_t and not a long.
#
if test "$have_timezone" = no; then
   AC_MSG_CHECKING([time_t timezone variable])
   AC_TRY_COMPILE([#include <time.h>],
        [extern time_t timezone;
         timezone += 1;
         exit (0);],
        [have_timezone=yes
	 AC_DEFINE(HAVE_TIMEZONE_VAR)
         AC_MSG_RESULT(yes)],
         AC_MSG_RESULT(no))
fi

#
# On some systems (eg Solaris 2.5.1, timezone is not declared in
# time.h unless you jump through hoops.  Instead of that, we just
# declare it ourselves when necessary.
#
if test "$have_timezone" = yes; then
   AC_MSG_CHECKING(for timezone declaration)
   changequote(<<,>>)
   tzrx='^[ 	]*extern.*timezone'
   changequote([,])
   AC_EGREP_HEADER($tzrx, time.h, [
     AC_DEFINE(HAVE_TIMEZONE_DECL)
     AC_MSG_RESULT(found)], AC_MSG_RESULT(missing))
fi

#
# AIX does not have a timezone field in struct tm. When the AIX bsd
# library is used, the timezone global and the gettimeofday methods are
# to be avoided for timezone deduction instead, we deduce the timezone
# by comparing the localtime result on a known GMT value.
#
if test $libbsd = yes; then
    AC_DEFINE(USE_DELTA_FOR_TZ)
fi

#--------------------------------------------------------------------
#	Some systems (e.g., IRIX 4.0.5) lack the st_blksize field
#	in struct stat.
#--------------------------------------------------------------------
AC_STRUCT_ST_BLKSIZE

#--------------------------------------------------------------------
#	On some systems strstr is broken: it returns a pointer even
#	even if the original string is empty.
#--------------------------------------------------------------------

AC_MSG_CHECKING([proper strstr implementation])
AC_TRY_RUN([
extern int strstr();
int main()
{
    exit(strstr("\0test", "test") ? 1 : 0);
}
], tcl_ok=yes, tcl_ok=no, tcl_ok=no)
if test $tcl_ok = yes; then
    AC_MSG_RESULT(yes)
else
    AC_MSG_RESULT([broken, using substitute])
    LIBOBJS="$LIBOBJS strstr.o"
fi

#--------------------------------------------------------------------
#	Check for strtoul function.  This is tricky because under some
#	versions of AIX strtoul returns an incorrect terminator
#	pointer for the string "0".
#--------------------------------------------------------------------

AC_CHECK_FUNC(strtoul, tcl_ok=1, tcl_ok=0)
AC_TRY_RUN([
extern int strtoul();
int main()
{
    char *string = "0";
    char *term;
    int value;
    value = strtoul(string, &term, 0);
    if ((value != 0) || (term != (string+1))) {
        exit(1);
    }
    exit(0);
}], , tcl_ok=0, tcl_ok=0)
if test "$tcl_ok" = 0; then
    test -n "$verbose" && echo "	Adding strtoul.o."
    LIBOBJS="$LIBOBJS strtoul.o"
fi

#--------------------------------------------------------------------
#	Check for the strtod function.  This is tricky because in some
#	versions of Linux strtod mis-parses strings starting with "+".
#--------------------------------------------------------------------

AC_CHECK_FUNC(strtod, tcl_ok=1, tcl_ok=0)
AC_TRY_RUN([
extern double strtod();
int main()
{
    char *string = " +69";
    char *term;
    double value;
    value = strtod(string, &term);
    if ((value != 69) || (term != (string+4))) {
	exit(1);
    }
    exit(0);
}], , tcl_ok=0, tcl_ok=0)
if test "$tcl_ok" = 0; then
    test -n "$verbose" && echo "	Adding strtod.o."
    LIBOBJS="$LIBOBJS strtod.o"
fi

#--------------------------------------------------------------------
#	Under Solaris 2.4, strtod returns the wrong value for the
#	terminating character under some conditions.  Check for this
#	and if the problem exists use a substitute procedure
#	"fixstrtod" that corrects the error.
#--------------------------------------------------------------------

AC_CHECK_FUNC(strtod, tcl_strtod=1, tcl_strtod=0)
if test "$tcl_strtod" = 1; then
    AC_MSG_CHECKING([for Solaris strtod bug])
    AC_TRY_RUN([
extern double strtod();
int main()
{
    char *string = "NaN";
    char *term;
    strtod(string, &term);
    if ((term != string) && (term[-1] == 0)) {
	exit(1);
    }
    exit(0);
}], tcl_ok=1, tcl_ok=0, tcl_ok=0)
    if test $tcl_ok = 1; then
	AC_MSG_RESULT(ok)
    else
	AC_MSG_RESULT(buggy)
	LIBOBJS="$LIBOBJS fixstrtod.o"
	AC_DEFINE(strtod, fixstrtod)
    fi
fi

#--------------------------------------------------------------------
#	Check for various typedefs and provide substitutes if
#	they don't exist.
#--------------------------------------------------------------------

AC_TYPE_MODE_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_TYPE_UID_T

#--------------------------------------------------------------------
#	If a system doesn't have an opendir function (man, that's old!)
#	then we have to supply a different version of dirent.h which
#	is compatible with the substitute version of opendir that's
#	provided.  This version only works with V7-style directories.
#--------------------------------------------------------------------

AC_CHECK_FUNC(opendir, , AC_DEFINE(USE_DIRENT2_H))

#--------------------------------------------------------------------
#	The check below checks whether <sys/wait.h> defines the type
#	"union wait" correctly.  It's needed because of weirdness in
#	HP-UX where "union wait" is defined in both the BSD and SYS-V
#	environments.  Checking the usability of WIFEXITED seems to do
#	the trick.
#--------------------------------------------------------------------

AC_MSG_CHECKING([union wait])
AC_TRY_LINK([#include <sys/types.h> 
#include <sys/wait.h>], [
union wait x;
WIFEXITED(x);		/* Generates compiler error if WIFEXITED
			 * uses an int. */
], tcl_ok=yes, tcl_ok=no)
AC_MSG_RESULT($tcl_ok)
if test $tcl_ok = no; then
    AC_DEFINE(NO_UNION_WAIT)
fi

#--------------------------------------------------------------------
#	Check to see whether the system supports the matherr function
#	and its associated type "struct exception".
#--------------------------------------------------------------------

AC_MSG_CHECKING([matherr support])
AC_TRY_COMPILE([#include <math.h>], [
struct exception x;
x.type = DOMAIN;
x.type = SING;
], tcl_ok=yes, tcl_ok=no)
AC_MSG_RESULT($tcl_ok)
if test $tcl_ok = yes; then
    AC_DEFINE(NEED_MATHERR)
fi

#--------------------------------------------------------------------
#	Check to see whether the system provides a vfork kernel call.
#	If not, then use fork instead.  Also, check for a problem with
#	vforks and signals that can cause core dumps if a vforked child
#	resets a signal handler.  If the problem exists, then use fork
#	instead of vfork.
#--------------------------------------------------------------------

AC_TYPE_SIGNAL()
AC_CHECK_FUNC(vfork, tcl_ok=1, tcl_ok=0)
if test "$tcl_ok" = 1; then
    AC_MSG_CHECKING([vfork/signal bug]);
    AC_TRY_RUN([
#include <stdio.h>
#include <signal.h>
#include <sys/wait.h>
int gotSignal = 0;
sigProc(sig)
    int sig;
{
    gotSignal = 1;
}
main()
{
    int pid, sts;
    (void) signal(SIGCHLD, sigProc);
    pid = vfork();
    if (pid <  0) {
	exit(1);
    } else if (pid == 0) {
	(void) signal(SIGCHLD, SIG_DFL);
	_exit(0);
    } else {
	(void) wait(&sts);
    }
    exit((gotSignal) ? 0 : 1);
}], tcl_ok=1, tcl_ok=0, tcl_ok=0)
    if test "$tcl_ok" = 1; then
	AC_MSG_RESULT(ok)
    else
	AC_MSG_RESULT([buggy, using fork instead])
    fi
fi
rm -f core
if test "$tcl_ok" = 0; then
    AC_DEFINE(vfork, fork)
fi

#--------------------------------------------------------------------
#	Check whether there is an strncasecmp function on this system.
#	This is a bit tricky because under SCO it's in -lsocket and
#	under Sequent Dynix it's in -linet.
#--------------------------------------------------------------------

AC_CHECK_FUNC(strncasecmp, tcl_ok=1, tcl_ok=0)
if test "$tcl_ok" = 0; then
    AC_CHECK_LIB(socket, strncasecmp, tcl_ok=1, tcl_ok=0)
a46 24
if test "$tcl_ok" = 0; then
    AC_CHECK_LIB(inet, strncasecmp, tcl_ok=1, tcl_ok=0)
fi
if test "$tcl_ok" = 0; then
    LIBOBJS="$LIBOBJS strncasecmp.o"
fi

#--------------------------------------------------------------------
#	The code below deals with several issues related to gettimeofday:
#	1. Some systems don't provide a gettimeofday function at all
#	   (set NO_GETTOD if this is the case).
#	2. SGI systems don't use the BSD form of the gettimeofday function,
#	   but they have a BSDgettimeofday function that can be used instead.
#	3. See if gettimeofday is declared in the <sys/time.h> header file.
#	   if not, set the GETTOD_NOT_DECLARED flag so that tclPort.h can
#	   declare it.
#--------------------------------------------------------------------

AC_CHECK_FUNC(BSDgettimeofday, AC_DEFINE(HAVE_BSDGETTIMEOFDAY),
	AC_CHECK_FUNC(gettimeofday, , AC_DEFINE(NO_GETTOD)))
AC_MSG_CHECKING([for gettimeofday declaration])
AC_EGREP_HEADER(gettimeofday, sys/time.h, AC_MSG_RESULT(present), [
    AC_MSG_RESULT(missing)
    AC_DEFINE(GETTOD_NOT_DECLARED)
d49 1
a49 159
#--------------------------------------------------------------------
#	Interactive UNIX requires -linet instead of -lsocket, plus it
#	needs net/errno.h to define the socket-related error codes.
#--------------------------------------------------------------------

AC_CHECK_LIB(inet, main, [LIBS="$LIBS -linet"])
AC_CHECK_HEADER(net/errno.h, AC_DEFINE(HAVE_NET_ERRNO_H))

#--------------------------------------------------------------------
#	The following code checks to see whether it is possible to get
#	signed chars on this platform.  This is needed in order to
#	properly generate sign-extended ints from character values.
#--------------------------------------------------------------------

AC_C_CHAR_UNSIGNED
AC_MSG_CHECKING([signed char declarations])
AC_TRY_COMPILE(, [
signed char *p;
p = 0;
], tcl_ok=yes, tcl_ok=no)
AC_MSG_RESULT($tcl_ok)
if test $tcl_ok = yes; then
    AC_DEFINE(HAVE_SIGNED_CHAR)
fi

#--------------------------------------------------------------------
#	Check for the existence of the -lsocket and -lnsl libraries.
#	The order here is important, so that they end up in the right
#	order in the command line generated by make.  Here are some
#	special considerations:
#	1. Use "connect" and "accept" to check for -lsocket, and
#	   "gethostbyname" to check for -lnsl.
#	2. Use each function name only once:  can't redo a check because
#	   autoconf caches the results of the last check and won't redo it.
#	3. Use -lnsl and -lsocket only if they supply procedures that
#	   aren't already present in the normal libraries.  This is because
#	   IRIX 5.2 has libraries, but they aren't needed and they're
#	   bogus:  they goof up name resolution if used.
#	4. On some SVR4 systems, can't use -lsocket without -lnsl too.
#	   To get around this problem, check for both libraries together
#	   if -lsocket doesn't work by itself.
#--------------------------------------------------------------------

# CYGNUS LOCAL: Store any socket library(ies) in the cache, and don't
# mess up the cache values of the functions we check for.
AC_CACHE_CHECK([for socket libraries], tcl_cv_lib_sockets,
 [tcl_cv_lib_sockets=
  tcl_checkBoth=0
  unset ac_cv_func_connect
  AC_CHECK_FUNC(connect, tcl_checkSocket=0, tcl_checkSocket=1)
  if test "$tcl_checkSocket" = 1; then
      unset ac_cv_func_connect
      AC_CHECK_LIB(socket, main, tcl_cv_lib_sockets="-lsocket",
		   tcl_checkBoth=1)
  fi
  if test "$tcl_checkBoth" = 1; then
      tcl_oldLibs=$LIBS
      LIBS="$LIBS -lsocket -lnsl"
      unset ac_cv_func_accept
      AC_CHECK_FUNC(accept,
		    [tcl_checkNsl=0
		     tcl_cv_lib_sockets="-lsocket -lnsl"])
      unset ac_cv_func_accept
      LIBS=$tcl_oldLibs
  fi
  unset ac_cv_func_gethostbyname
  tcl_oldLibs=$LIBS
  LIBS="$LIBS $tcl_cv_lib_sockets"
  AC_CHECK_FUNC(gethostbyname, ,
		[AC_CHECK_LIB(nsl, main,
			      [tcl_cv_lib_sockets="$tcl_cv_lib_sockets -lnsl"])])
  unset ac_cv_func_gethostbyname
  LIBS=$tcl_oldLIBS
])
test -z "$tcl_cv_lib_sockets" || LIBS="$LIBS $tcl_cv_lib_sockets"

#--------------------------------------------------------------------
#	The statements below define a collection of symbols related to
#	dynamic loading and shared libraries:
#
#	DL_OBJS -	Name of the object file that implements dynamic
#			loading for Tcl on this system.
#	DL_LIBS -	Library file(s) to include in tclsh and other base
#			applications in order for the "load" command to work.
#	LD_FLAGS -	Flags to pass to the compiler when linking object
#			files into an executable application binary such
#			as tclsh.
#	LD_SEARCH_FLAGS-Flags to pass to ld, such as "-R /usr/local/tcl/lib",
#			that tell the run-time dynamic linker where to look
#			for shared libraries such as libtcl.so.  Depends on
#			the variable LIB_RUNTIME_DIR in the Makefile.
#	MAKE_LIB -	Command to execute to build the Tcl library;
#			differs depending on whether or not Tcl is being
#			compiled as a shared library.
#	SHLIB_CFLAGS -	Flags to pass to cc when compiling the components
#			of a shared library (may request position-independent
#			code, among other things).
#	SHLIB_LD -	Base command to use for combining object files
#			into a shared library.
#	SHLIB_LD_LIBS -	Dependent libraries for the linker to scan when
#			creating shared libraries.  This symbol typically
#			goes at the end of the "ld" commands that build
#			shared libraries. The value of the symbol is
#			"${LIBS}" if all of the dependent libraries should
#			be specified when creating a shared library.  If
#			dependent libraries should not be specified (as on
#			SunOS 4.x, where they cause the link to fail, or in
#			general if Tcl and Tk aren't themselves shared
#			libraries), then this symbol has an empty string
#			as its value.
#	SHLIB_SUFFIX -	Suffix to use for the names of dynamically loadable
#			extensions.  An empty string means we don't know how
#			to use shared libraries on this platform.
#	TCL_LIB_FILE -	Name of the file that contains the Tcl library, such
#			as libtcl7.8.so or libtcl7.8.a.
#	TCL_LIB_SUFFIX -Specifies everything that comes after the "libtcl"
#			in the shared library name, using the $VERSION variable
#			to put the version in the right place.  This is used
#			by platforms that need non-standard library names.
#			Examples:  ${VERSION}.so.1.1 on NetBSD, since it needs
#			to have a version after the .so, and ${VERSION}.a
#			on AIX, since the Tcl shared library needs to have
#			a .a extension whereas shared objects for loadable
#			extensions have a .so extension.  Defaults to
#			${VERSION}${SHLIB_SUFFIX}.
#--------------------------------------------------------------------

# Step 1: set the variable "system" to hold the name and version number
# for the system.  This can usually be done via the "uname" command, but
# there are a few systems, like Next, where this doesn't work.

AC_MSG_CHECKING([system version (for dynamic loading)])
if test -f /usr/lib/NextStep/software_version; then
    system=NEXTSTEP-`awk '/3/,/3/' /usr/lib/NextStep/software_version`
else
    system=`uname -s`-`uname -r`
    if test "$?" -ne 0 ; then
	AC_MSG_RESULT([unknown (can't find uname command)])
	system=unknown
    else
	# Special check for weird MP-RAS system (uname returns weird
	# results, and the version is kept in special file).
    
	if test -r /etc/.relid -a "X`uname -n`" = "X`uname -s`" ; then
	    system=MP-RAS-`awk '{print $3}' /etc/.relid'`
	fi
	if test "`uname -s`" = "AIX" ; then
	    system=AIX-`uname -v`.`uname -r`
	fi
	AC_MSG_RESULT($system)
    fi
fi

# Step 2: check for existence of -ldl library.  This is needed because
# Linux can use either -ldl or -ldld for dynamic loading.

AC_CHECK_LIB(dl, dlopen, have_dl=yes, have_dl=no)

# Step 3: set configuration options based on system name and version.
d51 8
a58 137
fullSrcDir=`cd $srcdir; pwd`
TCL_SHARED_LIB_SUFFIX=""
TCL_UNSHARED_LIB_SUFFIX=""
TCL_TRIM_DOTS='`echo ${VERSION} | tr -d .`'
ECHO_VERSION='`echo ${VERSION}`'
TCL_LIB_VERSIONS_OK=ok
case $system in
    AIX-4.[[2-9]])
	SHLIB_CFLAGS=""
	SHLIB_LD="$fullSrcDir/ldAix /bin/ld -bhalt:4 -bM:SRE -bE:lib.exp -H512 -T512 -bnoentry"
	SHLIB_LD_LIBS='${LIBS}'
	SHLIB_SUFFIX=".so"
	DL_OBJS="tclLoadDl.o"
	DL_LIBS="-ldl"
	LD_FLAGS=""
	LD_SEARCH_FLAGS='-L${LIB_RUNTIME_DIR}'
	AIX=yes
	TCL_SHARED_LIB_SUFFIX='${VERSION}.a'
	;;
    AIX-*)
	SHLIB_CFLAGS=""
	SHLIB_LD="$fullSrcDir/ldAix /bin/ld -bhalt:4 -bM:SRE -bE:lib.exp -H512 -T512 -bnoentry"
	SHLIB_LD_LIBS='${LIBS}'
	SHLIB_SUFFIX=".so"
	DL_OBJS="tclLoadDl.o tclLoadAix.o"
	DL_LIBS="-lld"
	LD_FLAGS=""
	LD_SEARCH_FLAGS='-L${LIB_RUNTIME_DIR}'
	TCL_SHARED_LIB_SUFFIX='${VERSION}.a'
	;;
    BSD/OS-2.1*|BSD/OS-3*)
	SHLIB_CFLAGS=""
	SHLIB_LD="shlicc -r"
	SHLIB_LD_LIBS='${LIBS}'
	SHLIB_SUFFIX=".so"
	DL_OBJS="tclLoadDl.o"
	DL_LIBS="-ldl"
	LD_FLAGS=""
	LD_SEARCH_FLAGS=""
	;;
    dgux*)
	SHLIB_CFLAGS="-K PIC"
	SHLIB_LD="cc -G"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_OBJS="tclLoadDl.o"
	DL_LIBS="-ldl"
	LD_FLAGS=""
	LD_SEARCH_FLAGS=""
	;;
    HP-UX-*.08.*|HP-UX-*.09.*|HP-UX-*.10.*)
        # CYGNUS LOCAL: Handle gcc and versions of HP-UX that can't
        # do dynamic linking.
        AC_CHECK_LIB(dld, shl_load, tcl_ok=yes, tcl_ok=no)
        if test "$tcl_ok" = "yes"; then
	   if test "$GCC" = yes; then
	      SHLIB_CFLAGS="-fPIC"
	      SHLIB_LD="$CC -shared -fPIC"
	   else
	      SHLIB_CFLAGS="+z"
	      SHLIB_LD="ld -b"
	   fi

	   SHLIB_LD_LIBS=""
	   SHLIB_SUFFIX=".sl"
	   DL_OBJS="tclLoadShl.o"
	   DL_LIBS="-ldld"

	   # The GNU linker requires the -export-dynamic
	   # option to make all symbols visible in the dynamic symbol
	   # table.  Note that the HP linker will give errors
	   # -export-dynamic, but will still exit successfully.
	   # Adding a -L option will make it fail.
	   hold_ldflags=$LDFLAGS
	   AC_MSG_CHECKING(for the ld -export-dynamic flag)
	   LDFLAGS="${LDFLAGS} -Wl,-export-dynamic -L`pwd`"
	   AC_TRY_LINK(, [int i;], found=yes, found=no)
	   LDFLAGS=$hold_ldflags
	   AC_MSG_RESULT($found)
	   if test $found = yes; then
	      LD_FLAGS="-Wl,-export-dynamic"
	      LD_SEARCH_FLAGS='-Wl,-rpath,${LIB_RUNTIME_DIR}'
	   else
	      LD_FLAGS="-Wl,-E"
	      LD_SEARCH_FLAGS='-Wl,+s,+b,${LIB_RUNTIME_DIR}:.'
	   fi
	fi
	# END CYGNUS LOCAL
	;;
    IRIX-4.*)
	SHLIB_CFLAGS="-G 0"
	SHLIB_SUFFIX=".a"
	SHLIB_LD="echo tclLdAout $CC \{$SHLIB_CFLAGS\} | `pwd`/tclsh -r -G 0"
	SHLIB_LD_LIBS='${LIBS}'
	DL_OBJS="tclLoadAout.o"
	DL_LIBS=""
	LD_FLAGS="-Wl,-D,08000000"
	LD_SEARCH_FLAGS='-L${LIB_RUNTIME_DIR}'
	TCL_SHARED_LIB_SUFFIX='${VERSION}.a'
	;;
    IRIX-5.*|IRIX-6.*)
	SHLIB_CFLAGS=""
	SHLIB_LD="ld -n32 -shared -rdata_shared"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_OBJS="tclLoadDl.o"
	DL_LIBS=""
	LD_FLAGS=""
	LD_SEARCH_FLAGS='-Wl,-rpath,${LIB_RUNTIME_DIR}'
	;;
    IRIX64-6.*)
	SHLIB_CFLAGS=""
	SHLIB_LD="ld -n32 -shared -rdata_shared -rpath /usr/local/lib"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_OBJS="tclLoadDl.o"
	DL_LIBS=""
	LD_FLAGS=""
	LD_SEARCH_FLAGS='-Wl,-rpath,${LIB_RUNTIME_DIR}'
	;;
    Linux*)
	SHLIB_CFLAGS="-fPIC"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	if test "$have_dl" = yes; then
	    SHLIB_LD="${CC} -shared"
	    DL_OBJS="tclLoadDl.o"
	    DL_LIBS="-ldl"
	    LD_FLAGS="-rdynamic"
	    LD_SEARCH_FLAGS=""
	else
	    AC_CHECK_HEADER(dld.h, [
		SHLIB_LD="ld -shared"
		DL_OBJS="tclLoadDld.o"
		DL_LIBS="-ldld"
		LD_FLAGS=""
		LD_SEARCH_FLAGS=""])
d60 1
a60 235
	;;
    MP-RAS-02*)
	SHLIB_CFLAGS="-K PIC"
	SHLIB_LD="cc -G"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_OBJS="tclLoadDl.o"
	DL_LIBS="-ldl"
	LD_FLAGS=""
	LD_SEARCH_FLAGS=""
	;;
    MP-RAS-*)
	SHLIB_CFLAGS="-K PIC"
	SHLIB_LD="cc -G"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_OBJS="tclLoadDl.o"
	DL_LIBS="-ldl"
	LD_FLAGS="-Wl,-Bexport"
	LD_SEARCH_FLAGS=""
	;;
    NetBSD-*|FreeBSD-*|OpenBSD-*)
	# Not available on all versions:  check for include file.
	AC_CHECK_HEADER(dlfcn.h, [
	    SHLIB_CFLAGS="-fpic"
	    SHLIB_LD="ld -Bshareable -x"
	    SHLIB_LD_LIBS=""
	    SHLIB_SUFFIX=".so"
	    DL_OBJS="tclLoadDl.o"
	    DL_LIBS=""
	    LD_FLAGS=""
	    LD_SEARCH_FLAGS=""
	    TCL_SHARED_LIB_SUFFIX='`echo ${VERSION} | tr -d .`.so.1.0'
	], [
	    SHLIB_CFLAGS=""
	    SHLIB_LD="echo tclLdAout $CC \{$SHLIB_CFLAGS\} | `pwd`/tclsh -r"
	    SHLIB_LD_LIBS='${LIBS}'
	    SHLIB_SUFFIX=".a"
	    DL_OBJS="tclLoadAout.o"
	    DL_LIBS=""
	    LD_FLAGS=""
	    LD_SEARCH_FLAGS='-L${LIB_RUNTIME_DIR}'
	    TCL_SHARED_LIB_SUFFIX='`echo ${VERSION} | tr -d .`.a'
	])

	# FreeBSD doesn't handle version numbers with dots.

	TCL_UNSHARED_LIB_SUFFIX='`echo ${VERSION} | tr -d .`.a'
	TCL_LIB_VERSIONS_OK=nodots
	;;
    NEXTSTEP-*)
	SHLIB_CFLAGS=""
	SHLIB_LD="cc -nostdlib -r"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_OBJS="tclLoadNext.o"
	DL_LIBS=""
	LD_FLAGS=""
	LD_SEARCH_FLAGS=""
	;;
    OSF1-1.0|OSF1-1.1|OSF1-1.2)
	# OSF/1 1.[012] from OSF, and derivatives, including Paragon OSF/1
	SHLIB_CFLAGS=""
	# Hack: make package name same as library name
	SHLIB_LD='ld -R -export $@@:'
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_OBJS="tclLoadOSF.o"
	DL_LIBS=""
	LD_FLAGS=""
	LD_SEARCH_FLAGS=""
	;;
    OSF1-1.*)
	# OSF/1 1.3 from OSF using ELF, and derivatives, including AD2
	SHLIB_CFLAGS="-fpic"
	SHLIB_LD="ld -shared"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_OBJS="tclLoadDl.o"
	DL_LIBS=""
	LD_FLAGS=""
	LD_SEARCH_FLAGS=""
	;;
    OSF1-V*)
        # Digital OSF/1
	SHLIB_CFLAGS=""
	SHLIB_LD='ld -shared -expect_unresolved "*"'
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_OBJS="tclLoadDl.o"
	DL_LIBS=""
	LD_FLAGS=""
	LD_SEARCH_FLAGS='-Wl,-rpath,${LIB_RUNTIME_DIR}'
	;;
    RISCos-*)
	SHLIB_CFLAGS="-G 0"
	SHLIB_LD="echo tclLdAout $CC \{$SHLIB_CFLAGS\} | `pwd`/tclsh -r -G 0"
	SHLIB_LD_LIBS='${LIBS}'
	SHLIB_SUFFIX=".a"
	DL_OBJS="tclLoadAout.o"
	DL_LIBS=""
	LD_FLAGS="-Wl,-D,08000000"
	LD_SEARCH_FLAGS='-L${LIB_RUNTIME_DIR}'
	;;
    SCO_SV-3.2*)
        # Note, dlopen is available only on SCO 3.2.5 and greater.  However,
        # this test works, since "uname -s" was non-standard in 3.2.4 and
        # below.
	SHLIB_CFLAGS="-Kpic -belf"
	SHLIB_LD="ld -G"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_OBJS="tclLoadDl.o"
	DL_LIBS=""
	LD_FLAGS="-belf -Wl,-Bexport"
	LD_SEARCH_FLAGS=""
	;;
     SINIX*5.4*)
	SHLIB_CFLAGS="-K PIC"
	SHLIB_LD="cc -G"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_OBJS="tclLoadDl.o"
	DL_LIBS="-ldl"
	LD_FLAGS=""
	LD_SEARCH_FLAGS=""
	;;
    SunOS-4*)
        # CYGNUS LOCAL: gcc uses a different option than native cc.
        if test "$GCC" = yes; then
	   SHLIB_CFLAGS="-fPIC"
	   SHLIB_LD="$CC -shared -fPIC"
	else
	   SHLIB_CFLAGS="-PIC"
	   SHLIB_LD="ld"
	fi
	# END CYGNUS LOCAL

	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_OBJS="tclLoadDl.o"
	DL_LIBS="-ldl"
	LD_FLAGS=""
	LD_SEARCH_FLAGS='-L${LIB_RUNTIME_DIR}'

	# SunOS can't handle version numbers with dots in them in library
	# specs, like -ltcl7.5, so use -ltcl75 instead.  Also, it
	# requires an extra version number at the end of .so file names.
	# So, the library has to have a name like libtcl75.so.1.0

	TCL_SHARED_LIB_SUFFIX='`echo ${VERSION} | tr -d .`.so.1.0'
	TCL_UNSHARED_LIB_SUFFIX='`echo ${VERSION} | tr -d .`.a'
	TCL_LIB_VERSIONS_OK=nodots
	;;
    SunOS-5*)
        # CYGNUS LOCAL: gcc uses a different option than native cc.
        if test "$GCC" = yes; then
	   SHLIB_CFLAGS="-fPIC"
	   SHLIB_LD="$CC -shared -fPIC"
	else
	   SHLIB_CFLAGS="-KPIC"
	   SHLIB_LD="/usr/ccs/bin/ld -G -z text"
	fi
	# END CYGNUS LOCAL

	# Note: need the LIBS below, otherwise Tk won't find Tcl's
	# symbols when dynamically loaded into tclsh.

	SHLIB_LD_LIBS='${LIBS}'
	SHLIB_SUFFIX=".so"
	DL_OBJS="tclLoadDl.o"
	DL_LIBS="-ldl"
	# CYGNUS LOCAL: The GNU linker requires the -export-dynamic
	# option to make all symbols visible in the dynamic symbol
	# table.
	hold_ldflags=$LDFLAGS
	AC_MSG_CHECKING(for the ld -export-dynamic flag)
	LDFLAGS="${LDFLAGS} -Wl,-export-dynamic"
	AC_TRY_LINK(, [int i;], found=yes, found=no)
	LDFLAGS=$hold_ldflags
	AC_MSG_RESULT($found)
	if test $found = yes; then
	   LD_FLAGS="-Wl,-export-dynamic"
	   LD_SEARCH_FLAGS='-Wl,-rpath,${LIB_RUNTIME_DIR}'
	else
	   LD_FLAGS=""
	   LD_SEARCH_FLAGS='-R ${LIB_RUNTIME_DIR}'
	fi
	# END CYGNUS LOCAL
	;;
    ULTRIX-4.*)
	SHLIB_CFLAGS="-G 0"
	SHLIB_SUFFIX=".a"
	SHLIB_LD="echo tclLdAout $CC \{$SHLIB_CFLAGS\} | `pwd`/tclsh -r -G 0"
	SHLIB_LD_LIBS='${LIBS}'
	DL_OBJS="tclLoadAout.o"
	DL_LIBS=""
	# CYGNUS LOCAL: The GNU linker doesn't accept `-D 08000000'.  It
	# doesn't appear to be needed, either.
	hold_ldflags="$LDFLAGS"
	AC_MSG_CHECKING(whether ld accepts -D 08000000)
	LD_FLAGS="-Wl,-D,08000000"
	LDFLAGS="${LDFLAGS} -Wl,-D,08000000"
	AC_TRY_LINK(, [int i;], found=yes, found=no)
	LDFLAGS=$hold_ldflags
	AC_MSG_RESULT($found)
	if test $found = yes; then
	   LD_FLAGS="-Wl,-D,08000000"
	else
	   LD_FLAGS=""
	fi
	# END CYGNUS LOCAL
	LD_SEARCH_FLAGS='-L${LIB_RUNTIME_DIR}'
	;;
    UNIX_SV* | UnixWare-5*)
	SHLIB_CFLAGS="-KPIC"
	SHLIB_LD="cc -G"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_OBJS="tclLoadDl.o"
	DL_LIBS="-ldl"
	# Some UNIX_SV* systems (unixware 1.1.2 for example) have linkers
	# that don't grok the -Bexport option.  Test that it does.
	hold_ldflags=$LDFLAGS
	AC_MSG_CHECKING(for ld accepts -Bexport flag)
	LDFLAGS="${LDFLAGS} -Wl,-Bexport"
	AC_TRY_LINK(, [int i;], found=yes, found=no)
	LDFLAGS=$hold_ldflags
	AC_MSG_RESULT($found)
	if test $found = yes; then
	  LD_FLAGS="-Wl,-Bexport"
	else
	  LD_FLAGS=""
	fi
	LD_SEARCH_FLAGS=""
d64 5
a68 242
# Step 4: If pseudo-static linking is in use (see K. B. Kenny, "Dynamic
# Loading for Tcl -- What Became of It?".  Proc. 2nd Tcl/Tk Workshop,
# New Orleans, LA, Computerized Processes Unlimited, 1994), then we need
# to determine which of several header files defines the a.out file
# format (a.out.h, sys/exec.h, or sys/exec_aout.h).  At present, we
# support only a file format that is more or less version-7-compatible. 
# In particular,
#	- a.out files must begin with `struct exec'.
#	- the N_TXTOFF on the `struct exec' must compute the seek address
#	  of the text segment
#	- The `struct exec' must contain a_magic, a_text, a_data, a_bss
#	  and a_entry fields.
# The following compilation should succeed if and only if either sys/exec.h
# or a.out.h is usable for the purpose.
#
# Note that the modified COFF format used on MIPS Ultrix 4.x is usable; the
# `struct exec' includes a second header that contains information that
# duplicates the v7 fields that are needed.

if test "x$DL_OBJS" = "xtclLoadAout.o" ; then
    AC_MSG_CHECKING(sys/exec.h)
    AC_TRY_COMPILE([#include <sys/exec.h>],[
	struct exec foo;
	unsigned long seek;
	int flag;
#if defined(__mips) || defined(mips)
	seek = N_TXTOFF (foo.ex_f, foo.ex_o);
#else
	seek = N_TXTOFF (foo);
#endif
	flag = (foo.a_magic == OMAGIC);
	return foo.a_text + foo.a_data + foo.a_bss + foo.a_entry;
], tcl_ok=usable, tcl_ok=unusable)
    AC_MSG_RESULT($tcl_ok)
    if test $tcl_ok = usable; then
	AC_DEFINE(USE_SYS_EXEC_H)
    else
	AC_MSG_CHECKING(a.out.h)
	AC_TRY_COMPILE([#include <a.out.h>],[
	    struct exec foo;
	    unsigned long seek;
	    int flag;
#if defined(__mips) || defined(mips)
	    seek = N_TXTOFF (foo.ex_f, foo.ex_o);
#else
	    seek = N_TXTOFF (foo);
#endif
	    flag = (foo.a_magic == OMAGIC);
	    return foo.a_text + foo.a_data + foo.a_bss + foo.a_entry;
	], tcl_ok=usable, tcl_ok=unusable)
	AC_MSG_RESULT($tcl_ok)
	if test $tcl_ok = usable; then
	    AC_DEFINE(USE_A_OUT_H)
	else
	    AC_MSG_CHECKING(sys/exec_aout.h)
	    AC_TRY_COMPILE([#include <sys/exec_aout.h>],[
		struct exec foo;
		unsigned long seek;
		int flag;
#if defined(__mips) || defined(mips)
		seek = N_TXTOFF (foo.ex_f, foo.ex_o);
#else
		seek = N_TXTOFF (foo);
#endif
		flag = (foo.a_midmag == OMAGIC);
		return foo.a_text + foo.a_data + foo.a_bss + foo.a_entry;
	    ], tcl_ok=usable, tcl_ok=unusable)
	    AC_MSG_RESULT($tcl_ok)
	    if test $tcl_ok = usable; then
		AC_DEFINE(USE_SYS_EXEC_AOUT_H)
	    else
		DL_OBJS=""
	    fi
	fi
    fi
fi

# Step 5: disable dynamic loading if requested via a command-line switch.

AC_ARG_ENABLE(load, [  --disable-load          disallow dynamic loading and "load" command],
    [tcl_ok=$enableval], [tcl_ok=yes])
if test "$tcl_ok" = "no"; then
    DL_OBJS=""
fi

if test "x$DL_OBJS" != "x" ; then
    BUILD_DLTEST="\$(DLTEST_TARGETS)"
else
    echo "Can't figure out how to do dynamic loading or shared libraries"
    echo "on this system."
    SHLIB_CFLAGS=""
    SHLIB_LD=""
    SHLIB_SUFFIX=""
    DL_OBJS="tclLoadNone.o"
    DL_LIBS=""
    LD_FLAGS=""
    LD_SEARCH_FLAGS=""
    BUILD_DLTEST=""
fi

# If we're running gcc, then change the C flags for compiling shared
# libraries to the right flags for gcc, instead of those for the
# standard manufacturer compiler.

if test "$DL_OBJS" != "tclLoadNone.o" ; then
    if test "$CC" = "gcc" -o `$CC -v 2>&1 | grep -c gcc` != "0" ; then
	case $system in
	    AIX-*)
		;;
	    BSD/OS*)
		;;
	    IRIX*)
		;;
	    NetBSD-*|FreeBSD-*|OpenBSD-*)
		;;
	    RISCos-*)
		;;
	    ULTRIX-4.*)
		;;
	    *)
		SHLIB_CFLAGS="-fPIC"
		;;
	esac
    fi
fi

#--------------------------------------------------------------------
#	The statements below check for systems where POSIX-style
#	non-blocking I/O (O_NONBLOCK) doesn't work or is unimplemented. 
#	On these systems (mostly older ones), use the old BSD-style
#	FIONBIO approach instead.
#--------------------------------------------------------------------

AC_CHECK_HEADERS(sys/ioctl.h)
AC_CHECK_HEADERS(sys/filio.h)
AC_MSG_CHECKING([FIONBIO vs. O_NONBLOCK for nonblocking I/O])
if test -f /usr/lib/NextStep/software_version; then
    system=NEXTSTEP-`awk '/3/,/3/' /usr/lib/NextStep/software_version`
else
    system=`uname -s`-`uname -r`
    if test "$?" -ne 0 ; then
	system=unknown
    else
	# Special check for weird MP-RAS system (uname returns weird
	# results, and the version is kept in special file).
    
	if test -r /etc/.relid -a "X`uname -n`" = "X`uname -s`" ; then
	    system=MP-RAS-`awk '{print $3}' /etc/.relid'`
	fi
	if test "`uname -s`" = "AIX" ; then
	    system=AIX-`uname -v`.`uname -r`
	fi
    fi
fi
case $system in
    # There used to be code here to use FIONBIO under AIX.  However, it
    # was reported that FIONBIO doesn't work under AIX 3.2.5.  Since
    # using O_NONBLOCK seems fine under AIX 4.*, I removed the FIONBIO
    # code (JO, 5/31/97).

    OSF*)
	AC_DEFINE(USE_FIONBIO)
	AC_MSG_RESULT(FIONBIO)
	;;
    SunOS-4*)
	AC_DEFINE(USE_FIONBIO)
	AC_MSG_RESULT(FIONBIO)
	;;
    ULTRIX-4.*)
	AC_DEFINE(USE_FIONBIO)
	AC_MSG_RESULT(FIONBIO)
	;;
    *)
	AC_MSG_RESULT(O_NONBLOCK)
	;;
esac

#--------------------------------------------------------------------
#	The statements below define a collection of symbols related to
#	building libtcl as a shared library instead of a static library.
#--------------------------------------------------------------------

realRanlib=$RANLIB
if test "$TCL_SHARED_LIB_SUFFIX" = "" ; then
    TCL_SHARED_LIB_SUFFIX='${VERSION}${SHLIB_SUFFIX}'
fi
if test "$TCL_UNSHARED_LIB_SUFFIX" = "" ; then
    TCL_UNSHARED_LIB_SUFFIX='${VERSION}.a'
fi
AC_ARG_ENABLE(shared,
    [  --enable-shared         build libtcl as a shared library],
    [tcl_ok=$enableval], [tcl_ok=no])
# CYGNUS LOCAL: need extra variables for this information.
TCL_SHARED_LIB_FILE=dummy1
TCL_UNSHARED_LIB_FILE=dummy2
# END CYGNUS LOCAL
if test "$tcl_ok" = "yes" -a "${SHLIB_SUFFIX}" != "" ; then
    TCL_SHARED_BUILD=1
    TCL_SHLIB_CFLAGS="${SHLIB_CFLAGS}"
    TCL_LD_SEARCH_FLAGS="${LD_SEARCH_FLAGS}"
    eval "TCL_LIB_FILE=libtcl${TCL_SHARED_LIB_SUFFIX}"
    TCL_SHARED_LIB_FILE="$TCL_LIB_FILE"
    if test "x$DL_OBJS" = "xtclLoadAout.o"; then
	MAKE_LIB="ar cr \${TCL_LIB_FILE} \${OBJS}"
    else
	MAKE_LIB="\${SHLIB_LD} -o \${TCL_LIB_FILE} \${OBJS} ${SHLIB_LD_LIBS}"
	RANLIB=":"
    fi
else
    TCL_SHARED_BUILD=0
    case $system in
        BSD/OS*)
	    ;;

	AIX-*)
            ;;

        *)
	    SHLIB_LD_LIBS=""
	    ;;
    esac
    TCL_SHLIB_CFLAGS=""
    TCL_LD_SEARCH_FLAGS=""
    eval "TCL_LIB_FILE=libtcl${TCL_UNSHARED_LIB_SUFFIX}"
    TCL_UNSHARED_LIB_FILE="$TCL_LIB_FILE"
    MAKE_LIB="$AR cr ${TCL_LIB_FILE} \${OBJS}"
fi

# Note:  in the following variable, it's important to use the absolute
# path name of the Tcl directory rather than "..":  this is because
# AIX remembers this path and will attempt to use it at run-time to look
# up the Tcl library.

if test "${TCL_LIB_VERSIONS_OK}" = "ok"; then
    TCL_BUILD_LIB_SPEC="-L`pwd` -ltcl${VERSION}"
    TCL_LIB_SPEC="-L${exec_prefix}/lib -ltcl${VERSION}"
else
    TCL_BUILD_LIB_SPEC="-L`pwd` -ltcl`echo ${VERSION} | tr -d .`"
    TCL_LIB_SPEC="-L${exec_prefix}/lib -ltcl`echo ${VERSION} | tr -d .`"
fi

TCL_LIB_FULL_PATH="`pwd`/${TCL_LIB_FILE}"
d83 5
a87 19
AC_SUBST(BUILD_DLTEST)
AC_SUBST(DL_LIBS)
AC_SUBST(DL_OBJS)
AC_SUBST(LD_FLAGS)
AC_SUBST(MAKE_LIB)
AC_SUBST(MATH_LIBS)
AC_SUBST(SHLIB_CFLAGS)
AC_SUBST(SHLIB_LD)
AC_SUBST(SHLIB_LD_LIBS)
AC_SUBST(SHLIB_SUFFIX)
AC_SUBST(TCL_BUILD_LIB_SPEC)
AC_SUBST(TCL_LD_SEARCH_FLAGS)
AC_SUBST(TCL_LIB_FILE)
AC_SUBST(TCL_LIB_FULL_PATH)
AC_SUBST(TCL_LIB_FLAG)
AC_SUBST(TCL_LIB_SPEC)
AC_SUBST(TCL_LIB_VERSIONS_OK)
AC_SUBST(TCL_MAJOR_VERSION)
AC_SUBST(TCL_MINOR_VERSION)
d89 1
a89 11
AC_SUBST(TCL_PATCH_LEVEL)
AC_SUBST(TCL_SHARED_LIB_SUFFIX)
AC_SUBST(TCL_SHARED_BUILD)
AC_SUBST(TCL_SHLIB_CFLAGS)
AC_SUBST(TCL_SRC_DIR)
AC_SUBST(TCL_UNSHARED_LIB_SUFFIX)
AC_SUBST(TCL_VERSION)
# CYGNUS LOCAL
AC_SUBST(TCL_SHARED_LIB_FILE)
AC_SUBST(TCL_UNSHARED_LIB_FILE)
# END CYGNUS LOCAL
d91 1
a91 1
AC_OUTPUT(Makefile tclConfig.sh)
@


1.1.1.1
log
@import dejagnu-1999-11-08 snapshot
@
text
@@


1.1.1.2
log
@import dejagnu-1999-11-15 snapshot
@
text
@d1 3
a3 1
dnl Process this file with autoconf to produce a configure script.
d5 3
a7 1
AC_PREREQ(2.13)
d9 619
a627 37
AC_INIT(Makefile.in)
AC_CANONICAL_SYSTEM
AM_INIT_AUTOMAKE(libtcl_cygwin, 8.0)
AM_MAINTAINER_MODE
AC_EXEEXT

# FIXME: We temporarily define our own version of AC_PROG_CC.  This is
# copied from autoconf 2.12, but does not call AC_PROG_CC_WORKS.  We
# are probably using a cross compiler, which will not be able to fully
# link an executable.  This should really be fixed in autoconf
# itself.

AC_DEFUN(LIB_AC_PROG_CC,
[AC_BEFORE([$0], [AC_PROG_CPP])dnl
AC_CHECK_PROG(CC, gcc, gcc)
if test -z "$CC"; then
  AC_CHECK_PROG(CC, cc, cc, , , /usr/ucb/cc)
  test -z "$CC" && AC_MSG_ERROR([no acceptable cc found in \$PATH])
fi

AC_PROG_CC_GNU

if test $ac_cv_prog_gcc = yes; then
  GCC=yes
dnl Check whether -g works, even if CFLAGS is set, in case the package
dnl plays around with CFLAGS (such as to build both debugging and
dnl normal versions of a library), tasteless as that idea is.
  ac_test_CFLAGS="${CFLAGS+set}"
  ac_save_CFLAGS="$CFLAGS"
  CFLAGS=
  AC_PROG_CC_G
  if test "$ac_test_CFLAGS" = set; then
    CFLAGS="$ac_save_CFLAGS"
  elif test $ac_cv_prog_cc_g = yes; then
    CFLAGS="-g -O2"
  else
    CFLAGS="-O2"
d629 69
d699 640
a1338 2
  GCC=
  test "${CFLAGS+set}" = set || CFLAGS="-g"
a1339 1
])
d1341 1
a1341 5
LIB_AC_PROG_CC
AC_CHECK_TOOL(AR, ar, ar)
AC_SUBST(AR)
AC_PROG_RANLIB
AC_PROG_INSTALL
d1356 19
a1374 5
TCL_LIBRARY =   @@datadir@@/tcl$(VERSION)

cross_cache=${srcdir}/cygwin-cache
. ${cross_cache}

d1376 11
a1386 1
AC_SUBST(TCL_LIBRARY)
d1388 1
a1388 1
AC_OUTPUT([Makefile])
@


1.1.1.3
log
@import dejagnu-2000-01-17 snapshot
@
text
@d68 1
a68 1
TCL_LIBRARY=@@datadir@@/tcl${VERSION}
@


